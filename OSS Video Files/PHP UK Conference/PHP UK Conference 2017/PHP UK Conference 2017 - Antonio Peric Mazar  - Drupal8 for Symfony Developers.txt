Title: PHP UK Conference 2017 - Antonio Peric Mazar  - Drupal8 for Symfony Developers
Publication date: 2017-04-03
Playlist: PHP UK Conference 2017
Description: 
	Drupal8 modernization (new object-oriented base) and adoption of many Symfony components is a huge step in connecting these two amazing communities and amazing projects. Drupal8 is not powered by full-stack Symfony and there is still many differences between these two relatives, but still, Symfony developers should master it easily. This talk is for Symfony developers who don't have experience with Drupal8. It will guide you through routing, controllers, hooks, events, Drupal Console, DI and many other interesting elements that power Drupal8 under the hood. It will also show how to build custom modules Symfony way.
Captions: 
	00:00:04,500 --> 00:00:09,750
hi everyone thanks before joining me on

00:00:07,390 --> 00:00:12,280
this session today I will talk you about

00:00:09,750 --> 00:00:15,309
Drupal 8 from perspective of symphonia

00:00:12,280 --> 00:00:16,270
developers before I start I will

00:00:15,309 --> 00:00:18,609
introduce myself

00:00:16,270 --> 00:00:21,099
so my name is Antonio Perez Magellan

00:00:18,609 --> 00:00:24,339
come from Split Croatia I'm the CEO of

00:00:21,099 --> 00:00:28,029
lawcast ik co-founder of sinfoni Croatia

00:00:24,339 --> 00:00:30,460
user group and organizer and co-founder

00:00:28,029 --> 00:00:32,349
of shift conference if you want to

00:00:30,460 --> 00:00:34,930
contact me these are my contacts my

00:00:32,349 --> 00:00:36,640
Twitter account so please feel free to

00:00:34,930 --> 00:00:39,460
tweet or send email if you have any

00:00:36,640 --> 00:00:42,850
questions few words about my company we

00:00:39,460 --> 00:00:45,010
are agency specialized in designing and

00:00:42,850 --> 00:00:47,620
developing mobile and web solutions for

00:00:45,010 --> 00:00:50,860
our clients we also do training and

00:00:47,620 --> 00:00:52,660
consulting and at the moment we have 20

00:00:50,860 --> 00:00:54,670
employees these are few pictures from

00:00:52,660 --> 00:00:58,150
our office and one the thing that we are

00:00:54,670 --> 00:01:00,460
very proud of is that almost 25% of our

00:00:58,150 --> 00:01:04,030
team are the woman which are also

00:01:00,460 --> 00:01:06,150
amazing developers and before I start I

00:01:04,030 --> 00:01:09,460
have few questions so first question is

00:01:06,150 --> 00:01:13,329
how many Drupal experts is here anyone

00:01:09,460 --> 00:01:16,450
just please raise your hands do you have

00:01:13,329 --> 00:01:19,469
experience with symphonia also no cool

00:01:16,450 --> 00:01:23,859
and how many Symphony developers and

00:01:19,469 --> 00:01:26,469
with experience in Drupal ok so

00:01:23,859 --> 00:01:29,380
basically the title of this talk should

00:01:26,469 --> 00:01:31,420
can be also the one on one for drupal

00:01:29,380 --> 00:01:33,729
101 for Symphony developers I will cover

00:01:31,420 --> 00:01:35,799
the basics how how to install Symphony

00:01:33,729 --> 00:01:37,929
Hall prepare your developing environment

00:01:35,799 --> 00:01:40,530
how things works under the hood and I

00:01:37,929 --> 00:01:44,350
will show you how create simple module

00:01:40,530 --> 00:01:46,389
based on symfony components before we

00:01:44,350 --> 00:01:48,939
start small disclaimer as I already told

00:01:46,389 --> 00:01:52,990
I'm the Symphony developer I'm not

00:01:48,939 --> 00:01:54,999
expert in in Drupal a little bit about

00:01:52,990 --> 00:01:57,579
history so in 2012

00:01:54,999 --> 00:02:01,899
Fabian potassium route wrote a blog post

00:01:57,579 --> 00:02:04,899
about Drupal is going to use Symphony

00:02:01,899 --> 00:02:07,329
for building the new version but they

00:02:04,899 --> 00:02:09,039
didn't use entire full stack of the

00:02:07,329 --> 00:02:10,929
symphony they used only the components

00:02:09,039 --> 00:02:13,299
but the principles have they built a

00:02:10,929 --> 00:02:15,010
drupal under the hood you will see that

00:02:13,299 --> 00:02:15,870
is very very similar to the way how we

00:02:15,010 --> 00:02:18,390
are building sinful

00:02:15,870 --> 00:02:20,819
the applications what this means this

00:02:18,390 --> 00:02:22,620
means that Drupal developers should

00:02:20,819 --> 00:02:24,599
learn more like they need to switch to

00:02:22,620 --> 00:02:27,480
the object-oriented programming they

00:02:24,599 --> 00:02:29,340
need to learn a new framework and for

00:02:27,480 --> 00:02:33,420
sinfoni developers that means that we

00:02:29,340 --> 00:02:36,390
have very powerful CMS which we know how

00:02:33,420 --> 00:02:38,720
it works and we can use it also that was

00:02:36,390 --> 00:02:43,379
really good thing for community because

00:02:38,720 --> 00:02:45,569
you know after composer that we we are

00:02:43,379 --> 00:02:47,459
not splitting so much bit inside the PHP

00:02:45,569 --> 00:02:48,930
communities as before we were like

00:02:47,459 --> 00:02:51,840
islands like I don't know WordPress

00:02:48,930 --> 00:02:54,239
Drupal PHP Symphony laravel whatever a

00:02:51,840 --> 00:02:56,430
community now we are sharing components

00:02:54,239 --> 00:02:58,140
of your force to build better better

00:02:56,430 --> 00:03:01,319
code to share it with with other

00:02:58,140 --> 00:03:04,530
developers a few words about Drupal and

00:03:01,319 --> 00:03:06,690
sinfoni so Drupal is for content

00:03:04,530 --> 00:03:09,569
strategist to build the content to build

00:03:06,690 --> 00:03:11,579
website and the very best thing about

00:03:09,569 --> 00:03:13,890
Drupal is that he is very powerful

00:03:11,579 --> 00:03:16,769
out-of-the-box even include the api's

00:03:13,890 --> 00:03:19,049
you can build custom types and

00:03:16,769 --> 00:03:20,730
everything else and the symphony is a

00:03:19,049 --> 00:03:22,340
framework built for professional

00:03:20,730 --> 00:03:26,190
developers that allow us to build

00:03:22,340 --> 00:03:28,230
complex web application in easier way in

00:03:26,190 --> 00:03:31,590
Drupal 8 we have three type of knowledge

00:03:28,230 --> 00:03:34,410
first type is about Drupal which is same

00:03:31,590 --> 00:03:36,930
in Drupal 6 Drupal 7 Drupal 8

00:03:34,410 --> 00:03:39,500
it's about no types about how Drupal

00:03:36,930 --> 00:03:42,200
manage the content inside his database

00:03:39,500 --> 00:03:44,879
second type of the knowledge is Symphony

00:03:42,200 --> 00:03:46,949
knowledge and third type is something

00:03:44,879 --> 00:03:49,109
new like plugins blocks and things that

00:03:46,949 --> 00:03:52,609
comes in Drupal 8 we will of course

00:03:49,109 --> 00:03:56,669
focus on Symphony knowledge at this talk

00:03:52,609 --> 00:03:59,579
so let's see how how it is built on left

00:03:56,669 --> 00:04:02,430
side we have seen when a full stack with

00:03:59,579 --> 00:04:05,190
cmf components because the Drupal 8 use

00:04:02,430 --> 00:04:08,129
cmf routing because it is it allows

00:04:05,190 --> 00:04:10,849
dynamic routing and Rupali it is built

00:04:08,129 --> 00:04:13,829
on top of the symphony components here

00:04:10,849 --> 00:04:16,260
with trig with Drupal components and

00:04:13,829 --> 00:04:18,510
then everything on the top is Drupal

00:04:16,260 --> 00:04:22,440
core then we have modules and of course

00:04:18,510 --> 00:04:24,210
distributions add at the end result the

00:04:22,440 --> 00:04:26,669
symphony components that the duple is

00:04:24,210 --> 00:04:28,440
using are listed here and the most

00:04:26,669 --> 00:04:30,930
important is I will say

00:04:28,440 --> 00:04:33,720
this part here dependency injection even

00:04:30,930 --> 00:04:37,020
dispatcher HTTP foundational HTTP

00:04:33,720 --> 00:04:38,640
colonel so in from the from the list of

00:04:37,020 --> 00:04:40,710
the components you maybe already have

00:04:38,640 --> 00:04:42,120
the idea that everything is about

00:04:40,710 --> 00:04:44,610
dependency injection it's about

00:04:42,120 --> 00:04:47,490
dependency injection container so if you

00:04:44,610 --> 00:04:49,560
do any work with Drupal 8 and if you are

00:04:47,490 --> 00:04:50,700
not using the hooks you will get in

00:04:49,560 --> 00:04:53,310
contact with dependency injection

00:04:50,700 --> 00:04:56,120
container everything like from the from

00:04:53,310 --> 00:04:58,650
the HTTP kernel request response

00:04:56,120 --> 00:05:00,360
controller even dispatching less than

00:04:58,650 --> 00:05:02,840
our subscribers whatever everything is

00:05:00,360 --> 00:05:06,000
inside dependency injection container

00:05:02,840 --> 00:05:08,780
okay let's set up our development

00:05:06,000 --> 00:05:10,950
environment if you just want to test

00:05:08,780 --> 00:05:12,360
Drupal like you don't want to see the

00:05:10,950 --> 00:05:14,400
code you want to install it quick

00:05:12,360 --> 00:05:16,860
without setting setting up your

00:05:14,400 --> 00:05:19,680
environment there is nice website it's

00:05:16,860 --> 00:05:22,200
called simply simply test me you can

00:05:19,680 --> 00:05:24,210
pick the Drupal version and just launch

00:05:22,200 --> 00:05:26,760
sandbox and you will get installation I

00:05:24,210 --> 00:05:28,680
think for one hour or 40 minutes and you

00:05:26,760 --> 00:05:30,480
can play with the content to see what

00:05:28,680 --> 00:05:32,220
you can build out of the box which is

00:05:30,480 --> 00:05:35,900
rupal of course you can install any

00:05:32,220 --> 00:05:39,210
distribution any module on this website

00:05:35,900 --> 00:05:40,919
there is also Acquia dev desktop so it

00:05:39,210 --> 00:05:43,350
is prepared environment for Drupal

00:05:40,919 --> 00:05:45,750
development it works mostly out of the

00:05:43,350 --> 00:05:48,210
box so if you want to use that it's also

00:05:45,750 --> 00:05:50,730
easy to setup but of course if you have

00:05:48,210 --> 00:05:52,500
any of your Symphony tours in from the

00:05:50,730 --> 00:05:55,260
free development environment you can use

00:05:52,500 --> 00:05:58,710
that I personally use welcome to it

00:05:55,260 --> 00:06:00,900
PHP 7 at the moment but you can use PHP

00:05:58,710 --> 00:06:04,440
building server or docker or whatever

00:06:00,900 --> 00:06:06,240
you prefer in your daily daily work some

00:06:04,440 --> 00:06:08,790
tools that we will use during

00:06:06,240 --> 00:06:12,270
development which is Drupal first one is

00:06:08,790 --> 00:06:13,800
add rush-rush is Drupal console let's

00:06:12,270 --> 00:06:15,720
call it in that way but you will see

00:06:13,800 --> 00:06:19,740
with it we have actually drop console

00:06:15,720 --> 00:06:22,590
and we can manage website with which

00:06:19,740 --> 00:06:25,050
rush like update the core and modules

00:06:22,590 --> 00:06:27,210
clear cache update DB create some

00:06:25,050 --> 00:06:30,900
content to restore Drupal things like

00:06:27,210 --> 00:06:32,400
that it's quite easy to install again we

00:06:30,900 --> 00:06:34,710
will use composer we can install

00:06:32,400 --> 00:06:36,570
globally or we can install for every

00:06:34,710 --> 00:06:38,640
single project but the easiest way is to

00:06:36,570 --> 00:06:40,380
install that globally and then just use

00:06:38,640 --> 00:06:44,400
it from the from the console of course

00:06:40,380 --> 00:06:47,039
you can check your status by drop the

00:06:44,400 --> 00:06:49,289
rush stat and then you will see is it

00:06:47,039 --> 00:06:51,840
installed or not and if you if you just

00:06:49,289 --> 00:06:54,240
hit the rush you will get the list of

00:06:51,840 --> 00:06:56,700
all things that the rush can do for you

00:06:54,240 --> 00:07:00,090
of course there is too much things to be

00:06:56,700 --> 00:07:01,890
on one one page but if you grab it for

00:07:00,090 --> 00:07:03,870
example user you will get some

00:07:01,890 --> 00:07:05,550
information what you can do it user here

00:07:03,870 --> 00:07:07,890
we can see that we can change paths or

00:07:05,550 --> 00:07:11,640
recover password create user or things

00:07:07,890 --> 00:07:14,220
like that this is not Drupal 8 thing

00:07:11,640 --> 00:07:16,620
it exists in Drupal for a while but the

00:07:14,220 --> 00:07:20,100
new thing is a Drupal console it's built

00:07:16,620 --> 00:07:22,919
it's built on top of symphony console so

00:07:20,100 --> 00:07:25,200
usually when I do development in in a

00:07:22,919 --> 00:07:28,200
symphony I do a lot of things from from

00:07:25,200 --> 00:07:30,000
console of course like creating bundles

00:07:28,200 --> 00:07:32,250
or something like that updating database

00:07:30,000 --> 00:07:34,979
migrations or things like that

00:07:32,250 --> 00:07:38,099
Drupal console is similar to that but

00:07:34,979 --> 00:07:39,810
it's it's for Drupal so you will see

00:07:38,099 --> 00:07:41,700
from the list of features that you can

00:07:39,810 --> 00:07:43,919
do with drupal console it's similar with

00:07:41,700 --> 00:07:46,140
it has ADD rush but there are some

00:07:43,919 --> 00:07:48,660
things that you can do with Drupal

00:07:46,140 --> 00:07:50,810
console but you cannot do it drop with

00:07:48,660 --> 00:07:53,669
Rush and vice versa

00:07:50,810 --> 00:07:57,330
for example you can install uninstall

00:07:53,669 --> 00:07:59,130
models which rush but with Drupal

00:07:57,330 --> 00:08:00,930
console you can create skeleton for

00:07:59,130 --> 00:08:02,030
building new model you will see that

00:08:00,930 --> 00:08:04,590
later

00:08:02,030 --> 00:08:07,770
Drupal console it's also easy to install

00:08:04,590 --> 00:08:10,590
again we to compose with a composer then

00:08:07,770 --> 00:08:13,169
we need to install droop droop a

00:08:10,590 --> 00:08:16,979
constant launcher and after that we can

00:08:13,169 --> 00:08:19,979
run it with to Drupal Drupal list will

00:08:16,979 --> 00:08:21,810
give us a list of all features or

00:08:19,979 --> 00:08:23,910
command line all comments that we can

00:08:21,810 --> 00:08:25,979
use which is Drupal console and of

00:08:23,910 --> 00:08:28,560
course again there is too many options

00:08:25,979 --> 00:08:30,750
that we can use but if we grab something

00:08:28,560 --> 00:08:32,969
like model you will see that we can

00:08:30,750 --> 00:08:35,310
debug model we can generate new mode we

00:08:32,969 --> 00:08:38,160
can generate new content types or

00:08:35,310 --> 00:08:40,140
whatever and one more tool that I

00:08:38,160 --> 00:08:42,030
personally recommended it's not

00:08:40,140 --> 00:08:46,350
advertised because they are sponsorship

00:08:42,030 --> 00:08:49,380
district but phpstorm is very powerful

00:08:46,350 --> 00:08:52,260
tool there is in funny plugin there is

00:08:49,380 --> 00:08:54,150
rupal support so it's it make your

00:08:52,260 --> 00:08:55,980
life much easier when you are developing

00:08:54,150 --> 00:09:00,990
some this kind of application which is

00:08:55,980 --> 00:09:02,850
open okay how to install Drupal there

00:09:00,990 --> 00:09:06,480
are free options to install Drupal you

00:09:02,850 --> 00:09:08,190
can use rush rush UDL Drupal it will

00:09:06,480 --> 00:09:11,250
download the latest stable version of

00:09:08,190 --> 00:09:12,960
Drupal install it we can use composer or

00:09:11,250 --> 00:09:16,260
we can just download the zip file and

00:09:12,960 --> 00:09:18,540
extract it and we can start using as

00:09:16,260 --> 00:09:21,180
this is talk for the symphony developers

00:09:18,540 --> 00:09:23,520
I will use composer and there are two

00:09:21,180 --> 00:09:25,770
packages that we can can use it to

00:09:23,520 --> 00:09:29,190
Drupal slash rupal it's a super composer

00:09:25,770 --> 00:09:32,130
Slayer super project the second one is

00:09:29,190 --> 00:09:34,350
let's call it community version which

00:09:32,130 --> 00:09:37,230
already have some configuration prepared

00:09:34,350 --> 00:09:39,330
for you so you don't need to for example

00:09:37,230 --> 00:09:42,090
you will see how to add settings for

00:09:39,330 --> 00:09:44,280
download in Drupal modules with which

00:09:42,090 --> 00:09:49,200
with composer later here is the

00:09:44,280 --> 00:09:52,380
difference and this Drupal this one it's

00:09:49,200 --> 00:09:55,370
more the structure of the folder is

00:09:52,380 --> 00:09:58,350
maybe a little more like and sinfoni way

00:09:55,370 --> 00:10:00,930
this is the difference so the this

00:09:58,350 --> 00:10:04,050
community version comes with Drupal

00:10:00,930 --> 00:10:06,420
console some scaffold files repositories

00:10:04,050 --> 00:10:09,810
configure another path configurations

00:10:06,420 --> 00:10:12,300
but we will start with with Drupal /

00:10:09,810 --> 00:10:14,820
Drupal so it's quite easy to start your

00:10:12,300 --> 00:10:18,140
project just Composer create project

00:10:14,820 --> 00:10:20,490
Drupal Drupal you will get Drupal

00:10:18,140 --> 00:10:25,110
repository clone all dependencies

00:10:20,490 --> 00:10:26,850
installed and your your composer JSON

00:10:25,110 --> 00:10:29,580
files a little bit something like this

00:10:26,850 --> 00:10:31,950
but you won't have this thing and this

00:10:29,580 --> 00:10:35,700
thing here we need to add this manually

00:10:31,950 --> 00:10:38,400
and this is this thing allow us to

00:10:35,700 --> 00:10:41,100
download Drupal modulus with composer

00:10:38,400 --> 00:10:46,050
later so we are defining repositories

00:10:41,100 --> 00:10:49,020
for Drupal custom things or some core

00:10:46,050 --> 00:10:51,120
modules installer path where to install

00:10:49,020 --> 00:10:54,210
that so you see that the contributed

00:10:51,120 --> 00:10:56,700
models are installed in modules slash

00:10:54,210 --> 00:10:58,980
contrib slash name of the model and the

00:10:56,700 --> 00:11:03,270
packages are not from package visits pro

00:10:58,980 --> 00:11:05,410
packages drupal.org e so if you are if

00:11:03,270 --> 00:11:07,959
you want to install some model you

00:11:05,410 --> 00:11:10,959
composure required Drupal / model name

00:11:07,959 --> 00:11:13,259
for example / token and you will get the

00:11:10,959 --> 00:11:18,459
modeling installed in your in your

00:11:13,259 --> 00:11:20,170
Drupal project ok after you installed

00:11:18,459 --> 00:11:23,290
via composer you will run your

00:11:20,170 --> 00:11:25,329
application in in browser and with few

00:11:23,290 --> 00:11:28,029
buttons next next next and fuel

00:11:25,329 --> 00:11:31,839
configuration you will get your Drupal

00:11:28,029 --> 00:11:33,819
site run so basically that's it when you

00:11:31,839 --> 00:11:37,389
installed when you install it you will

00:11:33,819 --> 00:11:41,199
get just blank website with welcome to

00:11:37,389 --> 00:11:43,389
PHP UK it's its title of the project we

00:11:41,199 --> 00:11:46,180
can add some dummy content it's quite

00:11:43,389 --> 00:11:47,740
easy we will use Drupal console so we

00:11:46,180 --> 00:11:50,199
have some orders for create comments

00:11:47,740 --> 00:11:55,180
create notes create user vocabularies or

00:11:50,199 --> 00:11:58,360
just users we run the command we get in

00:11:55,180 --> 00:12:02,529
this situation 25 notes created for for

00:11:58,360 --> 00:12:04,660
content on on our website but as a

00:12:02,529 --> 00:12:10,300
symphony developers what is missing on

00:12:04,660 --> 00:12:12,100
this screen something is is missing when

00:12:10,300 --> 00:12:13,540
you working with rip symphony

00:12:12,100 --> 00:12:16,329
applications there is always some

00:12:13,540 --> 00:12:19,680
something there it's web profiler it's

00:12:16,329 --> 00:12:23,470
not included in the in Drupal core and

00:12:19,680 --> 00:12:25,060
it's part of modal core devil and it's

00:12:23,470 --> 00:12:27,069
quite easy to install you will do just

00:12:25,060 --> 00:12:29,889
composer required drupal devil the

00:12:27,069 --> 00:12:32,380
drupal devil here is here is the

00:12:29,889 --> 00:12:34,540
description of the module you see that

00:12:32,380 --> 00:12:36,459
he has some other other features also

00:12:34,540 --> 00:12:39,970
like generated content they don't know

00:12:36,459 --> 00:12:41,529
the excess and the profiler and after

00:12:39,970 --> 00:12:43,839
you install that model you need to

00:12:41,529 --> 00:12:46,149
enable it first you need to enable devil

00:12:43,839 --> 00:12:48,370
then you need to enable web profiler or

00:12:46,149 --> 00:12:54,550
you can do that also which is rush for

00:12:48,370 --> 00:12:57,220
example so the common rush p.m. enable

00:12:54,550 --> 00:13:01,470
devil will enable your your plugin you

00:12:57,220 --> 00:13:05,949
just need to download it before after we

00:13:01,470 --> 00:13:09,490
after we enable it we the screen is

00:13:05,949 --> 00:13:11,980
cutted but the web profiler will be here

00:13:09,490 --> 00:13:15,040
you see that this is from part of it

00:13:11,980 --> 00:13:17,829
like I can see that for for this page is

00:13:15,040 --> 00:13:18,830
view page controller function handle and

00:13:17,829 --> 00:13:21,170
root name is you

00:13:18,830 --> 00:13:23,000
front and H page page one and this is

00:13:21,170 --> 00:13:25,280
good entry point for start learning

00:13:23,000 --> 00:13:28,130
Drupal because you will see how have

00:13:25,280 --> 00:13:30,560
attacks like which which action is

00:13:28,130 --> 00:13:32,570
handled by what which controller which

00:13:30,560 --> 00:13:35,480
routes are handling your requests and

00:13:32,570 --> 00:13:37,880
things like that it's it's very good to

00:13:35,480 --> 00:13:39,410
start seeing how it works what is

00:13:37,880 --> 00:13:41,900
happening you can see all the events

00:13:39,410 --> 00:13:44,330
that are hit how the roots are defined

00:13:41,900 --> 00:13:46,460
when he loads the dynamic route when

00:13:44,330 --> 00:13:48,350
static so it's quite good to inspect

00:13:46,460 --> 00:13:51,220
what's happening in a dropper of course

00:13:48,350 --> 00:13:53,990
you have some other informations there

00:13:51,220 --> 00:13:58,640
I'm sorry the screen is it's cut that

00:13:53,990 --> 00:14:02,840
but also you can configure what you want

00:13:58,640 --> 00:14:05,420
to see in inside your web profiler so

00:14:02,840 --> 00:14:08,090
for example the events are turned off by

00:14:05,420 --> 00:14:10,280
default I always prefer to turn them on

00:14:08,090 --> 00:14:12,080
because a lot of things happening in

00:14:10,280 --> 00:14:14,810
Drupal are based on the events actually

00:14:12,080 --> 00:14:17,000
hooks from Drupal 7 and previous

00:14:14,810 --> 00:14:22,370
versions are starting to be replaced

00:14:17,000 --> 00:14:25,310
entirely with with event subscribers ok

00:14:22,370 --> 00:14:29,270
how this works under the hood let's see

00:14:25,310 --> 00:14:32,600
some code so this is our folder

00:14:29,270 --> 00:14:35,000
structure and this is our lips large

00:14:32,600 --> 00:14:38,270
Drupal / core this is the core of your

00:14:35,000 --> 00:14:40,010
of your Drupal 8 project so if you do

00:14:38,270 --> 00:14:42,080
everything proper if you are not I don't

00:14:40,010 --> 00:14:44,510
know fixing some bugs in the core you

00:14:42,080 --> 00:14:49,640
shouldn't put anything in this in this

00:14:44,510 --> 00:14:51,830
folder the second folder is modules you

00:14:49,640 --> 00:14:53,870
see that I installed the devil module so

00:14:51,830 --> 00:14:56,030
I have one contribute inside this

00:14:53,870 --> 00:14:58,280
contribute folder but actually I'm

00:14:56,030 --> 00:15:00,470
putting all my custom modules that I'm

00:14:58,280 --> 00:15:02,810
building and with models you are

00:15:00,470 --> 00:15:06,770
customizing your Drupal inside this

00:15:02,810 --> 00:15:10,090
folder so most of my work if if it's not

00:15:06,770 --> 00:15:13,550
teeming will go to this to this folder

00:15:10,090 --> 00:15:16,250
second one is profiles for in the

00:15:13,550 --> 00:15:20,390
profiles week we can have different

00:15:16,250 --> 00:15:24,140
different steps that run after after

00:15:20,390 --> 00:15:27,380
employment and installation in sites we

00:15:24,140 --> 00:15:30,010
are we are defining this configuration

00:15:27,380 --> 00:15:32,110
for our sites Drupal can handle mood

00:15:30,010 --> 00:15:35,170
or website so one installation can

00:15:32,110 --> 00:15:36,760
handle multiple websites and of course

00:15:35,170 --> 00:15:39,780
there is teams folder where we are

00:15:36,760 --> 00:15:42,820
building our layout our teams

00:15:39,780 --> 00:15:44,470
you know what slender folder and this is

00:15:42,820 --> 00:15:47,380
this is interesting like if you are

00:15:44,470 --> 00:15:49,930
using again PHP store you can have a

00:15:47,380 --> 00:15:52,060
little config plugin because this the

00:15:49,930 --> 00:15:54,910
symphony and the drupal doesn't have the

00:15:52,060 --> 00:15:57,610
same coding standard for example the

00:15:54,910 --> 00:16:00,400
obvious difference is that the drupal is

00:15:57,610 --> 00:16:03,460
using two spaces and symphonies using

00:16:00,400 --> 00:16:07,870
four spaces and drupal is also PS are

00:16:03,460 --> 00:16:12,340
psr-4 it's following the PS are forced

00:16:07,870 --> 00:16:13,960
for standards if you want to see what's

00:16:12,340 --> 00:16:16,690
happening when you when you got some

00:16:13,960 --> 00:16:19,900
error you need to uncomment these three

00:16:16,690 --> 00:16:23,370
lines and enable settings local and then

00:16:19,900 --> 00:16:25,900
you can add you have example here

00:16:23,370 --> 00:16:30,040
example a sorry I move it already here

00:16:25,900 --> 00:16:31,780
to settings dot local dot PHP so you can

00:16:30,040 --> 00:16:34,870
get all the errors printed on your

00:16:31,780 --> 00:16:38,590
screen ok let's move to the request

00:16:34,870 --> 00:16:40,150
response same as in your Symphony

00:16:38,590 --> 00:16:41,470
application where we have front and

00:16:40,150 --> 00:16:44,170
controller we have it front and

00:16:41,470 --> 00:16:46,900
controller here it it looks almost the

00:16:44,170 --> 00:16:47,980
same as sinfoni one so it's based on

00:16:46,900 --> 00:16:50,650
care now

00:16:47,980 --> 00:16:53,200
Drupal corner which is based on Symphony

00:16:50,650 --> 00:16:56,080
one and the request in basic looks like

00:16:53,200 --> 00:16:58,480
simple new one like we have request that

00:16:56,080 --> 00:17:01,450
request should have response at the end

00:16:58,480 --> 00:17:03,970
and it actually if it is always report

00:17:01,450 --> 00:17:06,010
response but of different types and we

00:17:03,970 --> 00:17:09,130
have events during entire process so

00:17:06,010 --> 00:17:11,740
after our request is handled by by

00:17:09,130 --> 00:17:14,290
kernel the roots rules defines the

00:17:11,740 --> 00:17:16,660
action some events are hit we can of

00:17:14,290 --> 00:17:19,199
course interrupt that with the event did

00:17:16,660 --> 00:17:22,449
some small example later to show you and

00:17:19,199 --> 00:17:26,650
the only thing that is more complex in

00:17:22,449 --> 00:17:28,930
Drupal than in symphonies you cannot

00:17:26,650 --> 00:17:31,090
read here but it's this part here so

00:17:28,930 --> 00:17:33,850
this this is basically exactly the same

00:17:31,090 --> 00:17:36,610
as a symphony but this is the part where

00:17:33,850 --> 00:17:39,970
Drupal has a lot of events to handle how

00:17:36,610 --> 00:17:42,580
you should view your content

00:17:39,970 --> 00:17:46,150
the basic pipeline goes like this like

00:17:42,580 --> 00:17:48,430
after control returns render array the

00:17:46,150 --> 00:17:51,190
view will be triggered by the HTTP

00:17:48,430 --> 00:17:53,680
kernel because the controller results

00:17:51,190 --> 00:17:55,810
not a response but to render array if

00:17:53,680 --> 00:17:58,480
you returned the response the pipeline

00:17:55,810 --> 00:18:02,110
is done because it's it's requirement

00:17:58,480 --> 00:18:04,570
that we must return the response after

00:18:02,110 --> 00:18:08,200
that the main contents to you subscriber

00:18:04,570 --> 00:18:10,920
is subscribe to the view event and next

00:18:08,200 --> 00:18:13,960
main content view subscriber checks to a

00:18:10,920 --> 00:18:16,300
text negation request format is

00:18:13,960 --> 00:18:19,840
supported of course we on the root level

00:18:16,300 --> 00:18:22,240
on controller level event level wherever

00:18:19,840 --> 00:18:25,210
we can we can manipulate with everything

00:18:22,240 --> 00:18:28,600
of this if negation request format is

00:18:25,210 --> 00:18:31,120
not supported 406 is returned otherwise

00:18:28,600 --> 00:18:33,040
we are going to the main context render

00:18:31,120 --> 00:18:37,270
interface and we are rendering response

00:18:33,040 --> 00:18:37,930
we have four main content rendering its

00:18:37,270 --> 00:18:40,630
HTML

00:18:37,930 --> 00:18:45,040
it's a Ajax its dialogue and the model

00:18:40,630 --> 00:18:48,120
and it basically looks something like

00:18:45,040 --> 00:18:50,410
this this is case TT HTML renderer

00:18:48,120 --> 00:18:53,680
that's the one you will use most

00:18:50,410 --> 00:18:56,170
probably and he has this big method

00:18:53,680 --> 00:18:58,900
which renders response and you will see

00:18:56,170 --> 00:19:01,060
that at the end his returning object

00:18:58,900 --> 00:19:06,820
which is which inheriting originally

00:19:01,060 --> 00:19:10,480
symfony response routing routing are as

00:19:06,820 --> 00:19:13,990
I already told you like Drupal is using

00:19:10,480 --> 00:19:16,630
cmf routing so in your standard scene

00:19:13,990 --> 00:19:18,370
for an application you cannot use it in

00:19:16,630 --> 00:19:20,710
easy way you cannot use out-of-the-box

00:19:18,370 --> 00:19:24,940
actual you cannot use the dynamic routes

00:19:20,710 --> 00:19:26,890
but in Drupal you have of course and we

00:19:24,940 --> 00:19:29,440
this is the way how we define the routes

00:19:26,890 --> 00:19:31,930
so it's the same as the same funny but

00:19:29,440 --> 00:19:35,850
we have some additional parameters like

00:19:31,930 --> 00:19:38,590
permissions like entity access and

00:19:35,850 --> 00:19:41,230
basically that lets me I think too that

00:19:38,590 --> 00:19:45,610
you will use most and some default

00:19:41,230 --> 00:19:47,350
default arguments permissions for

00:19:45,610 --> 00:19:49,960
example access contents permission

00:19:47,350 --> 00:19:51,180
usually any user can see your content

00:19:49,960 --> 00:19:52,800
but you can limit that

00:19:51,180 --> 00:19:56,130
for example that only registered user

00:19:52,800 --> 00:19:58,440
can see the content so if not if not if

00:19:56,130 --> 00:20:00,720
user is not registered then login in

00:19:58,440 --> 00:20:05,280
your system this the key key he cannot

00:20:00,720 --> 00:20:08,010
see this page controllers controllers

00:20:05,280 --> 00:20:10,050
are just classes that have some public

00:20:08,010 --> 00:20:11,390
functions that return response basically

00:20:10,050 --> 00:20:13,980
same as in it's in funny of course

00:20:11,390 --> 00:20:17,190
things are not so easy but this is this

00:20:13,980 --> 00:20:20,430
is this is proper proper controller like

00:20:17,190 --> 00:20:22,620
it's plus it has public method and it

00:20:20,430 --> 00:20:26,460
will iterate it returns response of

00:20:22,620 --> 00:20:28,830
course the controllers extend in unusual

00:20:26,460 --> 00:20:31,920
situation controllers extends control

00:20:28,830 --> 00:20:33,810
base and we get some helper methods like

00:20:31,920 --> 00:20:35,700
most of the helper methods are getting

00:20:33,810 --> 00:20:38,040
the services from dependency injection

00:20:35,700 --> 00:20:40,140
container like for example current user

00:20:38,040 --> 00:20:42,900
we will get from the container get

00:20:40,140 --> 00:20:44,850
current user language manager we will

00:20:42,900 --> 00:20:46,820
get from container language manager so

00:20:44,850 --> 00:20:48,600
if you are preferring to work with

00:20:46,820 --> 00:20:50,940
service-oriented architecture and

00:20:48,600 --> 00:20:53,130
sinfoni application you will see that

00:20:50,940 --> 00:20:59,130
this is almost the same way how we are

00:20:53,130 --> 00:21:01,020
working in symphony world the one more

00:20:59,130 --> 00:21:02,490
interesting thing which allow us much

00:21:01,020 --> 00:21:05,640
easier dependency injection to

00:21:02,490 --> 00:21:09,180
controllers is that control this

00:21:05,640 --> 00:21:11,490
controller controller base implements

00:21:09,180 --> 00:21:14,250
container injection interface which

00:21:11,490 --> 00:21:16,710
means that he needs to implement static

00:21:14,250 --> 00:21:19,110
function create the static function

00:21:16,710 --> 00:21:21,000
create gets container and then it's

00:21:19,110 --> 00:21:23,160
quite easy to do dependency injection

00:21:21,000 --> 00:21:26,310
without any additional configuration in

00:21:23,160 --> 00:21:28,560
your in your Yama file for example so we

00:21:26,310 --> 00:21:31,530
need to have this public static function

00:21:28,560 --> 00:21:34,950
create method and then we need we need

00:21:31,530 --> 00:21:37,170
to return the static with which services

00:21:34,950 --> 00:21:38,850
we want to inject we got them from the

00:21:37,170 --> 00:21:41,310
container the dependency injection

00:21:38,850 --> 00:21:43,350
container and then in our construct we

00:21:41,310 --> 00:21:45,870
are just accepting that that's two

00:21:43,350 --> 00:21:48,480
arguments so these two arguments we got

00:21:45,870 --> 00:21:50,580
here we are rejecting them and this is

00:21:48,480 --> 00:21:55,170
actually factory method nothing there is

00:21:50,580 --> 00:21:57,770
no any any magic regarding services in

00:21:55,170 --> 00:22:00,140
in Drupal

00:21:57,770 --> 00:22:01,940
there is plenty number of services

00:22:00,140 --> 00:22:03,470
probably every every module that you

00:22:01,940 --> 00:22:07,010
install gives you additional services

00:22:03,470 --> 00:22:11,210
but this is the core services definition

00:22:07,010 --> 00:22:13,400
you see only few specification here some

00:22:11,210 --> 00:22:16,700
this actually are some parameters now

00:22:13,400 --> 00:22:20,690
download are some services but here is

00:22:16,700 --> 00:22:23,510
just debugger from Drupal container

00:22:20,690 --> 00:22:25,910
debug with grep user these are some

00:22:23,510 --> 00:22:28,100
services that you can use regarding the

00:22:25,910 --> 00:22:31,730
services so for example user

00:22:28,100 --> 00:22:35,570
identification user share term store

00:22:31,730 --> 00:22:37,700
user permissions user data current user

00:22:35,570 --> 00:22:45,470
will give which gives gives you oughtn't

00:22:37,700 --> 00:22:47,300
if ocation yep indentical the drupal is

00:22:45,470 --> 00:22:50,000
using dependency injection container

00:22:47,300 --> 00:22:52,000
from from symphony and almost when

00:22:50,000 --> 00:22:54,560
everything is built on top of that

00:22:52,000 --> 00:22:57,720
that's the reason why you as a Symphony

00:22:54,560 --> 00:22:58,900
developer can can use that quite easy

00:22:57,720 --> 00:23:01,670
[Applause]

00:22:58,900 --> 00:23:03,920
events listener that's I think this is

00:23:01,670 --> 00:23:08,420
like maybe the biggest improvement in

00:23:03,920 --> 00:23:12,860
Drupal 8 mmm events are are replacing

00:23:08,420 --> 00:23:15,470
the hooks hooks I'm not very familiar

00:23:12,860 --> 00:23:17,240
with Drupal 7 but from the research

00:23:15,470 --> 00:23:19,580
hooks were like global functions that

00:23:17,240 --> 00:23:20,570
you can use anywhere to hook to anything

00:23:19,580 --> 00:23:23,180
now

00:23:20,570 --> 00:23:25,940
it's done with events and subscribers

00:23:23,180 --> 00:23:27,740
which is much better regarding

00:23:25,940 --> 00:23:30,140
performance regarding clean code

00:23:27,740 --> 00:23:32,960
regarding testing I don't cooks very

00:23:30,140 --> 00:23:36,380
impossible to test and now every every

00:23:32,960 --> 00:23:38,570
event can be tested and regarding

00:23:36,380 --> 00:23:41,810
registering event subscriber is quite

00:23:38,570 --> 00:23:44,270
easy so it's again indentical as in

00:23:41,810 --> 00:23:46,250
symphony way like the file service in

00:23:44,270 --> 00:23:48,740
your model target with even subscriber

00:23:46,250 --> 00:23:50,810
define class for your subscriber that

00:23:48,740 --> 00:23:53,360
implements again symphony when

00:23:50,810 --> 00:23:55,460
dispatcher even subscriber interface in

00:23:53,360 --> 00:23:57,890
your class get subscriber events and

00:23:55,460 --> 00:24:01,390
this is i will show you an example later

00:23:57,890 --> 00:24:01,390
how it how it looks like

00:24:01,750 --> 00:24:08,280
building custom module it's very simple

00:24:05,410 --> 00:24:11,170
module I will show you how to build

00:24:08,280 --> 00:24:14,290
hello.php UK model then I will show you

00:24:11,170 --> 00:24:19,360
how to eject your service inside it how

00:24:14,290 --> 00:24:21,010
do the listener and I will show you that

00:24:19,360 --> 00:24:23,560
actually there is no any any kind of

00:24:21,010 --> 00:24:26,890
magic behind it because the resulting

00:24:23,560 --> 00:24:30,820
convention and rules which are which are

00:24:26,890 --> 00:24:32,440
parsed with Drupal core so for building

00:24:30,820 --> 00:24:36,130
the dropper model the first thing you

00:24:32,440 --> 00:24:40,090
need to build is folder of course it's a

00:24:36,130 --> 00:24:43,090
it's a it's a module machine name and

00:24:40,090 --> 00:24:45,910
then we need to add this again model

00:24:43,090 --> 00:24:48,430
machine name dot info dot Yama file

00:24:45,910 --> 00:24:52,540
previously in Drupal seven this was dot

00:24:48,430 --> 00:24:54,880
modules file and this is all information

00:24:52,540 --> 00:24:58,150
that we need to add like this is the

00:24:54,880 --> 00:25:00,520
name of our module this is the type and

00:24:58,150 --> 00:25:02,500
description of course the version of

00:25:00,520 --> 00:25:04,870
Drupal we want to use and packages the

00:25:02,500 --> 00:25:08,980
is the place where we want to put this

00:25:04,870 --> 00:25:11,200
this module in our administration with

00:25:08,980 --> 00:25:14,110
with these five things defined in your

00:25:11,200 --> 00:25:16,630
ml file your module is already visible

00:25:14,110 --> 00:25:18,550
to your Drupal application so you can go

00:25:16,630 --> 00:25:20,470
to the backend and you can install your

00:25:18,550 --> 00:25:23,200
model of course he doesn't do anything

00:25:20,470 --> 00:25:26,350
in the moment but it exists it can be

00:25:23,200 --> 00:25:29,740
installed this is little longer version

00:25:26,350 --> 00:25:32,110
what we can define we can define

00:25:29,740 --> 00:25:34,150
dependencies that's all the modulus or

00:25:32,110 --> 00:25:36,130
some other things features or something

00:25:34,150 --> 00:25:38,740
like that from Drupal that our model

00:25:36,130 --> 00:25:40,510
depends on and test dependencies the

00:25:38,740 --> 00:25:42,130
other thing that we if we start to

00:25:40,510 --> 00:25:44,560
implementing something and maybe in the

00:25:42,130 --> 00:25:46,900
future it will depend on something we

00:25:44,560 --> 00:25:50,460
just put the test dependency and then

00:25:46,900 --> 00:25:53,290
test robots knows how to test our module

00:25:50,460 --> 00:25:56,140
configuration which configuration to

00:25:53,290 --> 00:25:58,990
read if you want to hide our module from

00:25:56,140 --> 00:26:02,350
the backend we can set this hidden shoe

00:25:58,990 --> 00:26:05,260
and this is good if you have for example

00:26:02,350 --> 00:26:07,600
only tests in your in your module or you

00:26:05,260 --> 00:26:09,760
are building some model for only for for

00:26:07,600 --> 00:26:12,400
showing some part of code to someone and

00:26:09,760 --> 00:26:14,720
the version that should not be it

00:26:12,400 --> 00:26:16,490
doesn't need to be

00:26:14,720 --> 00:26:18,980
because it will be able to incremented

00:26:16,490 --> 00:26:21,289
with package manager but as I already

00:26:18,980 --> 00:26:24,200
told this these five things are the only

00:26:21,289 --> 00:26:26,630
things that we need and we see our

00:26:24,200 --> 00:26:29,000
module in the backend we can click check

00:26:26,630 --> 00:26:32,570
box we can click install or even quicker

00:26:29,000 --> 00:26:35,330
we can we can do the rush enable module

00:26:32,570 --> 00:26:37,460
it's it's a little bit quicker and from

00:26:35,330 --> 00:26:39,890
if you are doing a lot of installing

00:26:37,460 --> 00:26:41,120
uninstalling modules it will save some

00:26:39,890 --> 00:26:43,610
time from you don't need to go to

00:26:41,120 --> 00:26:45,980
administration do few clicks to the

00:26:43,610 --> 00:26:49,700
navigation enable disable it's much

00:26:45,980 --> 00:26:51,770
easier from the console of course when

00:26:49,700 --> 00:26:54,200
you do some configuration things and

00:26:51,770 --> 00:26:55,970
when you change something like savings

00:26:54,200 --> 00:26:57,860
and sinfoni you need to clear the cache

00:26:55,970 --> 00:27:00,650
the only thing the only difference

00:26:57,860 --> 00:27:02,870
between Symphony and the Drupal here is

00:27:00,650 --> 00:27:06,580
not clear cash it's casually billed

00:27:02,870 --> 00:27:09,230
so actually it's rebuilding all the cash

00:27:06,580 --> 00:27:11,780
our first controller looks I don't know

00:27:09,230 --> 00:27:13,400
can you read from the last last rows

00:27:11,780 --> 00:27:15,650
okay

00:27:13,400 --> 00:27:18,620
this is our first very simple controller

00:27:15,650 --> 00:27:20,690
it's actually had only one public method

00:27:18,620 --> 00:27:24,909
it's return new response so we are

00:27:20,690 --> 00:27:29,030
returning the Symphony HTTP response and

00:27:24,909 --> 00:27:31,370
it won't go to this additional event

00:27:29,030 --> 00:27:33,559
flow Drupal 8 it will return response

00:27:31,370 --> 00:27:36,470
and immediately pipeline will be done

00:27:33,559 --> 00:27:38,450
and this is our route you need to see

00:27:36,470 --> 00:27:41,090
that we define the route here in

00:27:38,450 --> 00:27:45,320
hello.php UK Dutch routing dot llamo

00:27:41,090 --> 00:27:49,070
file and inside SRC controller because

00:27:45,320 --> 00:27:52,010
we need to its BSL for standard so we

00:27:49,070 --> 00:27:55,610
need to have namings SRC controller it

00:27:52,010 --> 00:27:58,340
is C if you remember from the beginning

00:27:55,610 --> 00:28:01,419
when I show the composer JSON file the

00:27:58,340 --> 00:28:04,010
core is in a Lib it's not standard psr-4

00:28:01,419 --> 00:28:06,679
probably because of some keeping of some

00:28:04,010 --> 00:28:08,450
legacy things but in future I've I think

00:28:06,679 --> 00:28:12,409
they will move probably that's to also

00:28:08,450 --> 00:28:17,390
to the SRC folder our route says

00:28:12,409 --> 00:28:19,760
/hello PHP UK slash name for default its

00:28:17,390 --> 00:28:23,270
controller reduction content and we need

00:28:19,760 --> 00:28:25,850
to give access to the content

00:28:23,270 --> 00:28:27,470
and this is the this is what I want to

00:28:25,850 --> 00:28:30,679
show you like when we include the roots

00:28:27,470 --> 00:28:33,590
here hello PHP UK routing dot Yama there

00:28:30,679 --> 00:28:36,679
is actually no no any magic behind it

00:28:33,590 --> 00:28:39,800
it's just method in a code get in in a

00:28:36,679 --> 00:28:41,179
route route builder we have the method

00:28:39,800 --> 00:28:43,220
that actually gets all the routes

00:28:41,179 --> 00:28:45,530
definition merge them and you have a

00:28:43,220 --> 00:28:48,200
routing built for your entire Drupal

00:28:45,530 --> 00:28:51,650
application so if you if you search for

00:28:48,200 --> 00:28:53,510
info dot Yama if you search for services

00:28:51,650 --> 00:28:59,000
that you know there is similar principle

00:28:53,510 --> 00:28:59,929
to building all of all of this and this

00:28:59,000 --> 00:29:03,500
is the result

00:28:59,929 --> 00:29:06,679
like hello.php UK hi Antonio I see there

00:29:03,500 --> 00:29:09,260
is a route problem this is second one

00:29:06,679 --> 00:29:12,320
but okay slash Antonia will show me the

00:29:09,260 --> 00:29:14,870
same thing the next thing I want to show

00:29:12,320 --> 00:29:17,960
you is that I extended controller base

00:29:14,870 --> 00:29:19,760
and I now want to get the display name

00:29:17,960 --> 00:29:21,920
from the current user the current user

00:29:19,760 --> 00:29:23,960
that is logged in inside our system

00:29:21,920 --> 00:29:27,230
that's that's the method get current

00:29:23,960 --> 00:29:31,580
user so new response hello.php UK this

00:29:27,230 --> 00:29:33,860
current user get a display name will

00:29:31,580 --> 00:29:35,950
will give me the same same result as

00:29:33,860 --> 00:29:40,580
this because my username when I created

00:29:35,950 --> 00:29:43,370
the Drupal site was Antonio the next

00:29:40,580 --> 00:29:46,250
thing I want to show is the here I use

00:29:43,370 --> 00:29:48,470
the get current user from controller

00:29:46,250 --> 00:29:50,120
based from the helper method but next

00:29:48,470 --> 00:29:53,600
example I want to show you how how easy

00:29:50,120 --> 00:29:56,510
is to inject that so I have this public

00:29:53,600 --> 00:30:00,080
static function create method I get the

00:29:56,510 --> 00:30:03,080
user services from container I return

00:30:00,080 --> 00:30:04,640
the new static with user services in my

00:30:03,080 --> 00:30:06,980
constructor I'm getting the user

00:30:04,640 --> 00:30:09,050
services I'm setting this private user

00:30:06,980 --> 00:30:11,929
services method to use their services

00:30:09,050 --> 00:30:17,510
and I can access the in the same way to

00:30:11,929 --> 00:30:19,040
this display name in my controller the

00:30:17,510 --> 00:30:21,950
next thing I want to show you is how to

00:30:19,040 --> 00:30:24,620
build your services again it's the same

00:30:21,950 --> 00:30:27,230
thing as Anna symphony we need to define

00:30:24,620 --> 00:30:30,110
hello.php UK dot services dot yama

00:30:27,230 --> 00:30:32,630
please notice that this is in in level

00:30:30,110 --> 00:30:33,350
above this SRC folder so it's a little

00:30:32,630 --> 00:30:38,149
inner route

00:30:33,350 --> 00:30:41,360
of our hello.php UK module so I wants to

00:30:38,149 --> 00:30:43,519
build services hello.php okay module dot

00:30:41,360 --> 00:30:46,279
say hello this is not the rule but it's

00:30:43,519 --> 00:30:48,200
much easier if you if you prefix all

00:30:46,279 --> 00:30:51,799
your services routines and everything

00:30:48,200 --> 00:30:53,539
else with a machine name of your of your

00:30:51,799 --> 00:30:55,340
module because you will get the unique

00:30:53,539 --> 00:30:58,820
routes in that way and it's much easier

00:30:55,340 --> 00:31:00,710
to debug later what's happening the

00:30:58,820 --> 00:31:03,289
thing I want to inject inside this

00:31:00,710 --> 00:31:05,690
simple service is this other service its

00:31:03,289 --> 00:31:07,909
current user this current user is a

00:31:05,690 --> 00:31:10,789
Drupal 8 service it's not Symphony

00:31:07,909 --> 00:31:13,549
service like it's not from the core of

00:31:10,789 --> 00:31:16,100
the symphony and this is how it looks

00:31:13,549 --> 00:31:18,470
like I'm injecting the Drupal current

00:31:16,100 --> 00:31:21,289
user current user and I have only one

00:31:18,470 --> 00:31:24,559
public function which returns hello this

00:31:21,289 --> 00:31:26,419
current user display name the next thing

00:31:24,559 --> 00:31:29,779
I want to do I want to inject that

00:31:26,419 --> 00:31:33,620
service to my controller so again I have

00:31:29,779 --> 00:31:36,559
create I have create a method but this

00:31:33,620 --> 00:31:39,259
time I am ejecting my my service so the

00:31:36,559 --> 00:31:41,779
name I gave it here hello PHP ok safe

00:31:39,259 --> 00:31:47,029
hello I'm ejecting I'm getting added

00:31:41,779 --> 00:31:49,250
here injecting to to my constructor and

00:31:47,029 --> 00:31:50,570
then the response is just this service

00:31:49,250 --> 00:31:52,789
say hello say hello

00:31:50,570 --> 00:31:55,159
the result is hello Antonia it's the

00:31:52,789 --> 00:31:58,429
same just this is done with the services

00:31:55,159 --> 00:32:00,980
this is quite simple example but to show

00:31:58,429 --> 00:32:02,539
you how you can create your your

00:32:00,980 --> 00:32:04,429
services how you can inject other

00:32:02,539 --> 00:32:07,639
service from the Drupal and how you can

00:32:04,429 --> 00:32:09,620
use it in a simple way the next thing I

00:32:07,639 --> 00:32:13,340
want to show you how to render this

00:32:09,620 --> 00:32:16,340
inside existing Drupal template so in in

00:32:13,340 --> 00:32:19,779
a symphony we we know there is rule that

00:32:16,340 --> 00:32:22,309
controller must return response and

00:32:19,779 --> 00:32:24,110
usually if you are using base controller

00:32:22,309 --> 00:32:26,029
from from the framework we have this

00:32:24,110 --> 00:32:29,870
render function or something like that

00:32:26,029 --> 00:32:32,269
that's that in back in behind it works

00:32:29,870 --> 00:32:35,179
in a way that creates response given the

00:32:32,269 --> 00:32:38,600
template give it the data and give the

00:32:35,179 --> 00:32:40,850
end result to the user in this situation

00:32:38,600 --> 00:32:43,110
with Drupal we can return the array with

00:32:40,850 --> 00:32:46,990
this hash

00:32:43,110 --> 00:32:49,929
in a keys and he knows how to process

00:32:46,990 --> 00:32:52,179
that actually we are that that's the

00:32:49,929 --> 00:32:54,970
part where additional the pipeline I

00:32:52,179 --> 00:32:59,049
mentioned at the beginning of the talk

00:32:54,970 --> 00:33:01,179
that events knows how to parse this and

00:32:59,049 --> 00:33:03,159
then from this they know how to build

00:33:01,179 --> 00:33:05,649
response and serve that responds to the

00:33:03,159 --> 00:33:07,990
end user and result of this is actually

00:33:05,649 --> 00:33:12,039
something with something with the

00:33:07,990 --> 00:33:14,889
template so my content is here I could

00:33:12,039 --> 00:33:17,409
at the title I can I can hook to some

00:33:14,889 --> 00:33:20,440
event to to change that to do whatever I

00:33:17,409 --> 00:33:24,669
want with that okay next thing is

00:33:20,440 --> 00:33:26,799
building my subscriber to event if you

00:33:24,669 --> 00:33:29,590
if you list I can show you later I have

00:33:26,799 --> 00:33:31,480
I have my Wagnalls machine up here so

00:33:29,590 --> 00:33:34,419
and we will probably have time to show

00:33:31,480 --> 00:33:35,950
you some more things if you list all the

00:33:34,419 --> 00:33:37,570
events that are happening as I already

00:33:35,950 --> 00:33:39,720
told you there is all this stuff

00:33:37,570 --> 00:33:43,210
symphony events plus some additional

00:33:39,720 --> 00:33:46,299
Drupal events usually the core modules

00:33:43,210 --> 00:33:49,869
and if they are properly built in

00:33:46,299 --> 00:33:51,789
thinking of future modules should also

00:33:49,869 --> 00:33:54,429
have some events that you can who can

00:33:51,789 --> 00:33:56,919
change the things so overriding some old

00:33:54,429 --> 00:33:59,769
elections should be again in a symphony

00:33:56,919 --> 00:34:01,659
way like hook to the event change the

00:33:59,769 --> 00:34:05,740
data or hope to even change the response

00:34:01,659 --> 00:34:07,389
or hook to event don't do nothing or

00:34:05,740 --> 00:34:09,790
just block the website as I will show

00:34:07,389 --> 00:34:13,750
you show you now like I will build a

00:34:09,790 --> 00:34:15,609
simple event here which will show the

00:34:13,750 --> 00:34:18,099
message to the user that site is under

00:34:15,609 --> 00:34:19,990
maintain maintenance I want to hook on a

00:34:18,099 --> 00:34:23,200
kernel event and the first one that's

00:34:19,990 --> 00:34:25,389
kernel request so what I'm doing I'm

00:34:23,200 --> 00:34:27,909
defining again this service which is

00:34:25,389 --> 00:34:31,000
actually even subscriber here we target

00:34:27,909 --> 00:34:35,710
with that and it's class maintains

00:34:31,000 --> 00:34:38,470
listener that class looks like this like

00:34:35,710 --> 00:34:40,569
on kernel request of sorry first we need

00:34:38,470 --> 00:34:42,639
to implement even subscriber interface

00:34:40,569 --> 00:34:45,760
it requires to have this public static

00:34:42,639 --> 00:34:49,030
function get subscriber events we define

00:34:45,760 --> 00:34:51,399
events on which we want to subscribe

00:34:49,030 --> 00:34:54,220
and which methods which action will be

00:34:51,399 --> 00:34:56,940
hit when that relevant events happen in

00:34:54,220 --> 00:35:00,250
this situation on Colonel request

00:34:56,940 --> 00:35:03,190
defined here we want to hear we want to

00:35:00,250 --> 00:35:05,230
run the method on Colonel request we get

00:35:03,190 --> 00:35:07,600
the event we set the response and we

00:35:05,230 --> 00:35:09,970
stop propagation so we don't on this

00:35:07,600 --> 00:35:11,980
event we want to return response to the

00:35:09,970 --> 00:35:15,070
user and that's all he doesn't go

00:35:11,980 --> 00:35:17,170
further in a pipeline this is like cute

00:35:15,070 --> 00:35:20,830
if you have big website and you need to

00:35:17,170 --> 00:35:22,720
do maintenance in a very quick way you

00:35:20,830 --> 00:35:24,460
just hook this to this event and show

00:35:22,720 --> 00:35:27,040
that message to user so on first

00:35:24,460 --> 00:35:34,330
colonel request event the response is

00:35:27,040 --> 00:35:38,590
served to to that user the next thing i

00:35:34,330 --> 00:35:42,880
want to show you is how to add URL to

00:35:38,590 --> 00:35:44,860
the backend to allow users to to do

00:35:42,880 --> 00:35:47,320
easier configuration of your models so

00:35:44,860 --> 00:35:49,210
again all these things were done with

00:35:47,320 --> 00:35:50,970
the hooks before like you had the hook

00:35:49,210 --> 00:35:54,370
then in the hook you have somewhere

00:35:50,970 --> 00:35:57,490
specification where to hook what now we

00:35:54,370 --> 00:35:59,950
have configuration files or we have

00:35:57,490 --> 00:36:03,360
event listeners to change the hooks of

00:35:59,950 --> 00:36:05,710
course hooks still exist in us in 48 but

00:36:03,360 --> 00:36:09,010
slowly i think they are they are

00:36:05,710 --> 00:36:11,350
switching everything to two event

00:36:09,010 --> 00:36:15,460
listeners and which idea probably to

00:36:11,350 --> 00:36:19,660
remove that in version 9 so we define

00:36:15,460 --> 00:36:23,050
hello.php okay links dot menu dot llamo

00:36:19,660 --> 00:36:25,690
and we define title of our URL

00:36:23,050 --> 00:36:27,910
description which is the parent URL of

00:36:25,690 --> 00:36:30,430
it which is the route when we click

00:36:27,910 --> 00:36:32,590
where we want to go and what is the

00:36:30,430 --> 00:36:34,900
weight like of what what is the

00:36:32,590 --> 00:36:40,020
importance of our URL and then you add

00:36:34,900 --> 00:36:43,180
that you got if here my hello.php k

00:36:40,020 --> 00:36:48,040
hello.php okay model settings when user

00:36:43,180 --> 00:36:50,080
click we will go to the settings recap i

00:36:48,040 --> 00:36:52,840
show you some some basic things how

00:36:50,080 --> 00:36:56,590
Drupal work it's one hour or 45 minutes

00:36:52,840 --> 00:36:58,720
of talk it's quite quite short time to

00:36:56,590 --> 00:37:00,660
do all the things so there is quite

00:36:58,720 --> 00:37:03,770
powerful API for the droop

00:37:00,660 --> 00:37:06,630
like you can talk about Drupal

00:37:03,770 --> 00:37:09,660
request/response for our you can do

00:37:06,630 --> 00:37:12,119
about Drupal routing API for our there

00:37:09,660 --> 00:37:14,700
is there is quite a lot of various

00:37:12,119 --> 00:37:18,180
things built inside it so one hour it's

00:37:14,700 --> 00:37:21,359
quite hard to to give you a better

00:37:18,180 --> 00:37:23,099
knowledge of it the idea of this talk

00:37:21,359 --> 00:37:25,020
was to give you introduction how it

00:37:23,099 --> 00:37:27,240
works so if you have never worked with a

00:37:25,020 --> 00:37:28,859
Drupal to start working because always

00:37:27,240 --> 00:37:30,299
the hardest thing is to start when you

00:37:28,859 --> 00:37:33,089
start digging when you start building

00:37:30,299 --> 00:37:36,299
first things then things go by itself

00:37:33,089 --> 00:37:38,849
but how powerful is it for example if

00:37:36,299 --> 00:37:40,410
you are building your custom module you

00:37:38,849 --> 00:37:42,329
have everything that you need for Bill

00:37:40,410 --> 00:37:46,490
for example caching for the key value

00:37:42,329 --> 00:37:48,750
key value caching for identification for

00:37:46,490 --> 00:37:51,990
getting all information from the user

00:37:48,750 --> 00:37:53,910
for manipulating with the data or all

00:37:51,990 --> 00:37:56,010
that is are inside the services of

00:37:53,910 --> 00:37:57,960
course as you work more with the drupal

00:37:56,010 --> 00:38:00,210
you'll get more knowledge what you can

00:37:57,960 --> 00:38:03,020
build with the drupal api sandwich

00:38:00,210 --> 00:38:05,160
adorable services built inside

00:38:03,020 --> 00:38:07,230
dependency injection is the backbone of

00:38:05,160 --> 00:38:09,809
all drupal so same as the symphony

00:38:07,230 --> 00:38:11,670
application and everything is there and

00:38:09,809 --> 00:38:13,710
you can get it quite easily I show you

00:38:11,670 --> 00:38:15,450
the best way how how you can get that

00:38:13,710 --> 00:38:17,190
you of course can get it with the static

00:38:15,450 --> 00:38:19,410
method as build also in Drupal core

00:38:17,190 --> 00:38:21,869
class but the best way is to inject that

00:38:19,410 --> 00:38:24,119
to container and then get it once many

00:38:21,869 --> 00:38:27,380
when you need at the beginning of of

00:38:24,119 --> 00:38:30,299
your history of your control controller

00:38:27,380 --> 00:38:32,039
building simple Drupal models is quite

00:38:30,299 --> 00:38:34,049
easy it's quite easy to start of course

00:38:32,039 --> 00:38:37,770
if you are building some complex things

00:38:34,049 --> 00:38:43,140
and then you will need to invest more

00:38:37,770 --> 00:38:46,440
time of course I have more time you can

00:38:43,140 --> 00:38:48,539
do a QA session or I can show you some

00:38:46,440 --> 00:38:50,490
maybe some things from the Drupal

00:38:48,539 --> 00:38:52,950
console more what you can do like

00:38:50,490 --> 00:38:55,109
building content types and building the

00:38:52,950 --> 00:38:56,640
module without even writing the code

00:38:55,109 --> 00:38:58,559
because you can generate all the

00:38:56,640 --> 00:39:02,900
skeleton from the console so if you have

00:38:58,559 --> 00:39:02,900
questions please please raise your hand

00:39:12,960 --> 00:39:18,780
yeah sorry I didn't understand the

00:39:16,690 --> 00:39:18,780
question

00:39:25,170 --> 00:39:30,070
Joe Paula I think the best definition of

00:39:27,610 --> 00:39:32,440
the Drupal is that he C MF is more

00:39:30,070 --> 00:39:35,440
content management framework than than

00:39:32,440 --> 00:39:37,750
just CMS solution for example difference

00:39:35,440 --> 00:39:40,390
basic difference between wordpress and

00:39:37,750 --> 00:39:42,340
drupal is that in drupal you have

00:39:40,390 --> 00:39:45,670
everything ready for building any type

00:39:42,340 --> 00:39:47,380
of content in other CMS you probably

00:39:45,670 --> 00:39:49,600
need to install some plugins to do

00:39:47,380 --> 00:39:52,540
things that you can build in drupal from

00:39:49,600 --> 00:39:55,120
the core also the drupal is mobile ready

00:39:52,540 --> 00:39:55,960
so you can get to the api quite easy

00:39:55,120 --> 00:39:57,850
from the core

00:39:55,960 --> 00:40:00,220
there is multi-language website there is

00:39:57,850 --> 00:40:03,850
multi multi website so it's quite

00:40:00,220 --> 00:40:07,120
powerful at the moment and i think the

00:40:03,850 --> 00:40:11,260
the the idea switching to the symphony

00:40:07,120 --> 00:40:13,060
framework was great because the people

00:40:11,260 --> 00:40:14,950
who are building drupal their job is to

00:40:13,060 --> 00:40:17,230
build amazing system for managing the

00:40:14,950 --> 00:40:19,360
content and some other people should

00:40:17,230 --> 00:40:22,090
maintain the framework there is no sense

00:40:19,360 --> 00:40:25,590
to build two things when there is really

00:40:22,090 --> 00:40:25,590
powerful framework outside

00:40:34,530 --> 00:40:38,980
no it'sit's not built on any

00:40:36,790 --> 00:40:41,320
distributional Symphony it's built on

00:40:38,980 --> 00:40:43,300
top of symphonic components but for

00:40:41,320 --> 00:40:46,570
routing they are using cmf routing and

00:40:43,300 --> 00:40:48,190
the list of the components I I showed

00:40:46,570 --> 00:40:51,240
you at the beginning there is quite a

00:40:48,190 --> 00:40:51,240
number of slides but

00:41:01,850 --> 00:41:07,890
I converse

00:41:04,680 --> 00:41:07,890
[Applause]

00:41:17,110 --> 00:41:22,850
you see the difference here this is on

00:41:20,270 --> 00:41:25,670
the left it's it's Symphony full stack

00:41:22,850 --> 00:41:27,350
with cmf components you know that

00:41:25,670 --> 00:41:29,720
standard edition of Symphony does not

00:41:27,350 --> 00:41:31,790
include cmf component and then here is

00:41:29,720 --> 00:41:34,370
distribution of drupal so the core is

00:41:31,790 --> 00:41:35,990
built on top of symphony components of

00:41:34,370 --> 00:41:39,380
course there is still some part of

00:41:35,990 --> 00:41:41,660
legacy there but the top it's built on

00:41:39,380 --> 00:41:44,990
top of the symphony not standard not

00:41:41,660 --> 00:41:48,560
standard edition of of symphonia like

00:41:44,990 --> 00:41:50,600
for example easy is built on top of full

00:41:48,560 --> 00:41:54,290
stack symphony and drupal it not yet

00:41:50,600 --> 00:42:04,960
maybe in future I don't know but at the

00:41:54,290 --> 00:42:08,150
moment it is not built on actually no

00:42:04,960 --> 00:42:10,250
it's tourism as notes like their own

00:42:08,150 --> 00:42:12,620
saying honestly in the same table on the

00:42:10,250 --> 00:42:14,900
same level but then you have a couple

00:42:12,620 --> 00:42:17,390
areas which build the entire structure

00:42:14,900 --> 00:42:26,800
of the website but they are not using

00:42:17,390 --> 00:42:26,800
PHP CR you have entity API for that

00:42:33,180 --> 00:42:36,289
okay thank you

00:42:37,130 --> 00:42:41,610

YouTube URL: https://www.youtube.com/watch?v=ZKAjkCb7MZ0


