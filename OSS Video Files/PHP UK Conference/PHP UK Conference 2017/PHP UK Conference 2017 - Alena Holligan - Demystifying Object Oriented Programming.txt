Title: PHP UK Conference 2017 - Alena Holligan - Demystifying Object Oriented Programming
Publication date: 2017-04-03
Playlist: PHP UK Conference 2017
Description: 
	Abstraction, Encapsulation, Polymorphism, and Interfaces: whether you’ve been programming in PHP for years or are just starting your journey, these terms can be overwhelming even on a good day. Variables, conditionals, those all make sense. But this whole Object-Oriented thing is WAY more complicated. Not only that, people that already understand it act like it’s so easy and they talk right over the simple questions and never explain the basic concepts in a way that actually makes sense. In this session we’ll take you through real life examples of Object-Oriented terminology in a way that will make sense of all the mumbo jumbo and allow you to utilizing OOP immediately.
Captions: 
	00:00:03,610 --> 00:00:08,559
okay welcome welcome today I'm going to

00:00:06,939 --> 00:00:11,639
do doing a lot of this at the beginning

00:00:08,559 --> 00:00:14,200
because I'm going to be standing my

00:00:11,639 --> 00:00:16,560
computer do some coding in a little bit

00:00:14,200 --> 00:00:19,570
and I don't like to get stuck behind the

00:00:16,560 --> 00:00:20,680
podium there not a lot of fun we're

00:00:19,570 --> 00:00:23,380
going to try to make this a lot of fun

00:00:20,680 --> 00:00:25,660
and interesting hopefully you will all

00:00:23,380 --> 00:00:27,039
gather something very important from it

00:00:25,660 --> 00:00:29,740
I've been told I'm going to throw out

00:00:27,039 --> 00:00:31,599
t-shirts this is a great way to do it

00:00:29,740 --> 00:00:35,080
everybody likes to get t-shirts thrown

00:00:31,599 --> 00:00:39,159
at them right so the t-shirts that I'm

00:00:35,080 --> 00:00:40,989
throwing out our fitted shirt all you

00:00:39,159 --> 00:00:43,210
need to do is bring them up here and

00:00:40,989 --> 00:00:45,400
exchange and serve for the correct size

00:00:43,210 --> 00:00:47,229
I'm just throwing these out because

00:00:45,400 --> 00:00:49,059
they're already bundled together and

00:00:47,229 --> 00:00:51,640
then you can come and choose whichever

00:00:49,059 --> 00:00:53,799
size you want smallest here to the

00:00:51,640 --> 00:00:57,940
largest on this end these are my fitted

00:00:53,799 --> 00:00:59,920
shirts for anyone who would like them so

00:00:57,940 --> 00:01:02,489
this is the way it's going to work I'm

00:00:59,920 --> 00:01:05,260
going to share some things about

00:01:02,489 --> 00:01:07,420
object-oriented programming we're going

00:01:05,260 --> 00:01:09,430
to discuss ideas we're going to get into

00:01:07,420 --> 00:01:11,890
some code and see how it actually works

00:01:09,430 --> 00:01:14,530
I'm going to ask for suggestions from

00:01:11,890 --> 00:01:15,850
you on how we should modify this code to

00:01:14,530 --> 00:01:17,530
see what happens

00:01:15,850 --> 00:01:19,840
we'll get to play around and see what

00:01:17,530 --> 00:01:22,660
actually happens here I spent the first

00:01:19,840 --> 00:01:26,050
two days of my trip in bath and I met a

00:01:22,660 --> 00:01:30,340
really interesting older gentleman at a

00:01:26,050 --> 00:01:35,010
pub and he worked in the travel agency

00:01:30,340 --> 00:01:38,409
in the 1970s and they switched over to a

00:01:35,010 --> 00:01:41,170
new computerized system and he said you

00:01:38,409 --> 00:01:42,280
were the first software engineer that I

00:01:41,170 --> 00:01:46,229
have ever met that's actually

00:01:42,280 --> 00:01:49,270
interesting he says they were so boring

00:01:46,229 --> 00:01:54,310
they talked us about all this new things

00:01:49,270 --> 00:01:57,530
it was so boring worst worst experience

00:01:54,310 --> 00:02:00,230
ever it was we all hated it

00:01:57,530 --> 00:02:02,270
for the same travel agency and said we

00:02:00,230 --> 00:02:05,360
didn't all hate it but he thought they

00:02:02,270 --> 00:02:10,399
all hated it because it was so boring so

00:02:05,360 --> 00:02:12,380
they get to launch day and a huge big

00:02:10,399 --> 00:02:14,720
deal you know they're ready to celebrate

00:02:12,380 --> 00:02:17,780
this has been like a year in the making

00:02:14,720 --> 00:02:25,160
and all of a sudden on the screen it

00:02:17,780 --> 00:02:27,920
says DSP no one has any clue what DSP

00:02:25,160 --> 00:02:29,959
means in all of the training they have

00:02:27,920 --> 00:02:32,530
never seen DSP

00:02:29,959 --> 00:02:34,610
nobody has ever said what do you assume

00:02:32,530 --> 00:02:36,020
running through the manuals trying to

00:02:34,610 --> 00:02:37,490
figure out what the heck is this because

00:02:36,020 --> 00:02:39,950
we're supposed to watch this we've got

00:02:37,490 --> 00:02:43,970
the call center ready to spin up to

00:02:39,950 --> 00:02:45,760
accept calls what's going on and it was

00:02:43,970 --> 00:02:51,200
a joke from the programmers that meant

00:02:45,760 --> 00:02:52,700
don't effing panic and it sure enough

00:02:51,200 --> 00:02:59,690
I'd turn back on and they were able to

00:02:52,700 --> 00:03:01,730
use it and they were not amused but all

00:02:59,690 --> 00:03:03,350
that to say hopefully we have this a

00:03:01,730 --> 00:03:05,600
little bit more entertaining hopefully

00:03:03,350 --> 00:03:08,540
you enjoy it and in so doing you

00:03:05,600 --> 00:03:12,620
actually gained some knowledge so I've

00:03:08,540 --> 00:03:16,420
been working in PHP for 17 years

00:03:12,620 --> 00:03:18,580
so when I started PHP was completely

00:03:16,420 --> 00:03:22,040
procedural there is no object oriented

00:03:18,580 --> 00:03:24,140
so object oriented comes to the market

00:03:22,040 --> 00:03:25,760
and I decided I should learn

00:03:24,140 --> 00:03:33,560
object-oriented programming this is a

00:03:25,760 --> 00:03:36,680
great new idea right and I went am i

00:03:33,560 --> 00:03:38,540
just stupid I just could not it just

00:03:36,680 --> 00:03:40,070
didn't make sense to me as I was trying

00:03:38,540 --> 00:03:42,260
to learn because all these new ideas

00:03:40,070 --> 00:03:44,030
were coming out at the same time now

00:03:42,260 --> 00:03:46,220
that we have object-oriented we can come

00:03:44,030 --> 00:03:47,360
out with framework then we come with now

00:03:46,220 --> 00:03:50,590
we talked about all these design

00:03:47,360 --> 00:03:53,000
patterns and all this stuff that is

00:03:50,590 --> 00:03:55,160
surrounds object-oriented and kind of

00:03:53,000 --> 00:03:57,140
just gets grouped together and you have

00:03:55,160 --> 00:03:59,060
all of these things to untangle and go

00:03:57,140 --> 00:04:01,730
well what are people actually talking

00:03:59,060 --> 00:04:03,920
about why are we actually doing this it

00:04:01,730 --> 00:04:07,010
was a great thing procedural there's

00:04:03,920 --> 00:04:10,350
nothing really wrong per se with

00:04:07,010 --> 00:04:13,950
procedural code the issues come into it

00:04:10,350 --> 00:04:16,860
when as it scales a small project is

00:04:13,950 --> 00:04:20,670
sometimes best in procedural code it can

00:04:16,860 --> 00:04:23,580
be easier to manage simpler to debug

00:04:20,670 --> 00:04:26,070
easy to get a handle on the problem lies

00:04:23,580 --> 00:04:29,070
in the way our brains work there's only

00:04:26,070 --> 00:04:31,920
so much information that your brain can

00:04:29,070 --> 00:04:33,720
handle at one time you've all heard of

00:04:31,920 --> 00:04:36,540
short term and long term memory right

00:04:33,720 --> 00:04:37,740
okay this is not I love talking about

00:04:36,540 --> 00:04:40,410
the brain but we're not going to get

00:04:37,740 --> 00:04:42,150
into that short term long term memories

00:04:40,410 --> 00:04:45,300
the big thing about this is you've got

00:04:42,150 --> 00:04:47,730
somewhere between four and six pieces of

00:04:45,300 --> 00:04:51,090
short-term memory that you can hold in

00:04:47,730 --> 00:04:53,850
your brain at one time how many of you

00:04:51,090 --> 00:04:59,160
have systems that have more than six

00:04:53,850 --> 00:05:01,170
parts okay therein lies the problem you

00:04:59,160 --> 00:05:03,690
can't store all that in short-term

00:05:01,170 --> 00:05:05,990
memory so they can't all function

00:05:03,690 --> 00:05:08,790
together very well

00:05:05,990 --> 00:05:11,490
so with object-oriented program we can

00:05:08,790 --> 00:05:14,280
put it into chunks this allows us to

00:05:11,490 --> 00:05:16,610
chunk these things and we don't have to

00:05:14,280 --> 00:05:21,630
know all these chunks at the same time

00:05:16,610 --> 00:05:23,360
so when things are encapsulated as one

00:05:21,630 --> 00:05:27,650
of our terms will be learning soon

00:05:23,360 --> 00:05:31,590
nicely we're able to hold chunks of data

00:05:27,650 --> 00:05:33,030
more data but in chunks and just the

00:05:31,590 --> 00:05:37,350
chunks that we need to be able to

00:05:33,030 --> 00:05:40,230
process that and put it to good use so

00:05:37,350 --> 00:05:42,090
I'm not saying you always have to code

00:05:40,230 --> 00:05:45,210
an object-oriented code you will

00:05:42,090 --> 00:05:48,140
probably run into object-oriented code

00:05:45,210 --> 00:05:52,040
is there anyone in this room who has not

00:05:48,140 --> 00:05:55,710
actually used object-oriented code

00:05:52,040 --> 00:05:58,680
okay very few and that's okay

00:05:55,710 --> 00:05:59,730
after today you let me know if you're

00:05:58,680 --> 00:06:01,800
still having problems with

00:05:59,730 --> 00:06:06,090
object-oriented code because it's really

00:06:01,800 --> 00:06:07,980
not as complicated as it seems okay so

00:06:06,090 --> 00:06:10,470
you're going to run into it you're going

00:06:07,980 --> 00:06:14,790
to want to use it it's going to happen

00:06:10,470 --> 00:06:17,040
if you're writing code by yourself in a

00:06:14,790 --> 00:06:20,610
bubble and you don't ever want to use

00:06:17,040 --> 00:06:22,530
any add-on packages then you're probably

00:06:20,610 --> 00:06:24,180
okay sticking with procedural and not

00:06:22,530 --> 00:06:26,700
learning so

00:06:24,180 --> 00:06:28,860
that's why we're learning this so let's

00:06:26,700 --> 00:06:30,650
go through it and see what we have to me

00:06:28,860 --> 00:06:32,970
the most important part is terminology

00:06:30,650 --> 00:06:35,250
terminology is very important because

00:06:32,970 --> 00:06:36,980
you can't Google if you can't read the

00:06:35,250 --> 00:06:39,390
words or you don't know what to ask

00:06:36,980 --> 00:06:41,430
Google has all the answers but if you

00:06:39,390 --> 00:06:44,400
don't know what to ask it's not very

00:06:41,430 --> 00:06:46,440
useful or if you ask a question and you

00:06:44,400 --> 00:06:48,030
get back an answer and you can't

00:06:46,440 --> 00:06:53,130
understand what they're trying to tell

00:06:48,030 --> 00:06:54,810
you again not very useful so the biggest

00:06:53,130 --> 00:06:56,280
thing I want you to gain out of this

00:06:54,810 --> 00:06:58,860
talk is to understanding what the

00:06:56,280 --> 00:07:01,470
terminology is so when you go to use it

00:06:58,860 --> 00:07:06,840
you go oh this makes sense I can now

00:07:01,470 --> 00:07:10,010
actually find answers so part one terms

00:07:06,840 --> 00:07:13,400
we're going to talk this is very basic

00:07:10,010 --> 00:07:16,290
object-oriented terms that you'll see

00:07:13,400 --> 00:07:23,160
classes with it's their properties and

00:07:16,290 --> 00:07:26,640
methods objects and instance we're then

00:07:23,160 --> 00:07:29,700
going to get into abstraction a lot more

00:07:26,640 --> 00:07:34,400
difficult words here encapsulation and

00:07:29,700 --> 00:07:37,590
scope finally we're going to get into

00:07:34,400 --> 00:07:39,570
polymorphism another big words

00:07:37,590 --> 00:07:41,580
I love how object oriented wants to put

00:07:39,570 --> 00:07:44,310
in all these big words that sound really

00:07:41,580 --> 00:07:46,020
complicated and make you feel like

00:07:44,310 --> 00:07:48,270
you're never going to get it but they're

00:07:46,020 --> 00:07:49,950
really not very complicated terms so

00:07:48,270 --> 00:07:52,890
once you understand what they are and

00:07:49,950 --> 00:07:55,380
how they work hopefully it will make it

00:07:52,890 --> 00:07:58,260
seem a lot more accessible so in Mohali

00:07:55,380 --> 00:08:01,050
morphism we have probably some things

00:07:58,260 --> 00:08:03,330
that you've heard inheritance interface

00:08:01,050 --> 00:08:04,830
abstract class traits you've probably

00:08:03,330 --> 00:08:06,870
heard of people talking about these

00:08:04,830 --> 00:08:08,730
things maybe even wondered what the heck

00:08:06,870 --> 00:08:11,220
they are well hopefully today we'll be

00:08:08,730 --> 00:08:13,350
able to clarify that for you and then

00:08:11,220 --> 00:08:16,470
there's some extra fun stuff that we

00:08:13,350 --> 00:08:21,750
might not get into in this talk and some

00:08:16,470 --> 00:08:25,440
things that object-oriented classes now

00:08:21,750 --> 00:08:29,490
let us do static methods magic methods

00:08:25,440 --> 00:08:33,390
and constants I love magic namespaces

00:08:29,490 --> 00:08:35,010
and type declarations so I've got some

00:08:33,390 --> 00:08:36,960
examples at the ends all my slides will

00:08:35,010 --> 00:08:38,070
be online I have example code so even if

00:08:36,960 --> 00:08:40,260
we don't get into all

00:08:38,070 --> 00:08:43,200
that today there's some stuff that you

00:08:40,260 --> 00:08:46,790
can take home and get a little more into

00:08:43,200 --> 00:08:49,650
once you understand how objects work so

00:08:46,790 --> 00:08:51,600
to get started we want to make sure that

00:08:49,650 --> 00:08:56,610
everybody is on the same page here a

00:08:51,600 --> 00:08:59,160
class a class is simply a template or

00:08:56,610 --> 00:09:00,060
blueprint how many of you have ever

00:08:59,160 --> 00:09:03,780
built

00:09:00,060 --> 00:09:04,380
Lego before good most of you have done

00:09:03,780 --> 00:09:07,470
it okay

00:09:04,380 --> 00:09:10,680
my son is five and his favorite thing

00:09:07,470 --> 00:09:12,600
right now is Lego he for Christmas that

00:09:10,680 --> 00:09:15,900
all of a sudden he got really big on the

00:09:12,600 --> 00:09:17,670
Lego and he loves to be able to follow

00:09:15,900 --> 00:09:20,810
the directions and put the Lego together

00:09:17,670 --> 00:09:25,050
he's just starting he's done like

00:09:20,810 --> 00:09:26,880
probably ten different sets following

00:09:25,050 --> 00:09:28,950
the directions and now he's starting to

00:09:26,880 --> 00:09:31,290
get to the point where he can really

00:09:28,950 --> 00:09:33,030
have fun and realize oh now I can put

00:09:31,290 --> 00:09:36,840
these together and make my own stuff

00:09:33,030 --> 00:09:38,490
even better but we need this template or

00:09:36,840 --> 00:09:42,210
blueprint to start with this is how you

00:09:38,490 --> 00:09:43,980
build houses right you can't it's they

00:09:42,210 --> 00:09:46,200
don't let you build houses without a

00:09:43,980 --> 00:09:49,500
blueprint anymore just doesn't usually

00:09:46,200 --> 00:09:52,320
work as well so templates blueprints

00:09:49,500 --> 00:09:54,450
very important in everything recipes

00:09:52,320 --> 00:09:56,790
following a recipe especially when

00:09:54,450 --> 00:09:59,400
you're learning very important these are

00:09:56,790 --> 00:10:01,950
what this is what a class is it's just

00:09:59,400 --> 00:10:05,360
the template tells us what we're going

00:10:01,950 --> 00:10:05,360
to be how we're going to build something

00:10:05,690 --> 00:10:13,170
it's a combination of variables and

00:10:09,390 --> 00:10:14,760
functions so if you've written PHP

00:10:13,170 --> 00:10:16,590
before which I hope you've at least done

00:10:14,760 --> 00:10:20,130
something if you're here you've dealt

00:10:16,590 --> 00:10:21,600
with variables and functions and a class

00:10:20,130 --> 00:10:25,080
will just allow you to put those

00:10:21,600 --> 00:10:28,920
variables and functions together so the

00:10:25,080 --> 00:10:35,610
object is what is created from that

00:10:28,920 --> 00:10:38,820
class so if you were building a house

00:10:35,610 --> 00:10:41,820
the blueprint of the house someone would

00:10:38,820 --> 00:10:44,340
then build a house from that blueprint

00:10:41,820 --> 00:10:48,150
so the house itself would be the object

00:10:44,340 --> 00:10:50,910
and this now consists of actual data and

00:10:48,150 --> 00:10:54,090
the procedures so

00:10:50,910 --> 00:10:55,740
the paint color the how the door works

00:10:54,090 --> 00:10:57,270
turning on and off the lights opening

00:10:55,740 --> 00:10:58,620
and closing the doors those types of

00:10:57,270 --> 00:11:02,030
things the important parts of how

00:10:58,620 --> 00:11:08,810
actually works part of the house itself

00:11:02,030 --> 00:11:17,430
now an instance is a particular object

00:11:08,810 --> 00:11:19,590
so for instance if our class was DNA DNA

00:11:17,430 --> 00:11:22,280
makes humans which would be our object

00:11:19,590 --> 00:11:25,710
and each of you would be a specific

00:11:22,280 --> 00:11:30,960
instance of that object so it would be a

00:11:25,710 --> 00:11:35,670
very very specific instance of an object

00:11:30,960 --> 00:11:39,630
itself and just like with people we we

00:11:35,670 --> 00:11:42,540
give them certain names so we know which

00:11:39,630 --> 00:11:44,520
specific object we're we're referring to

00:11:42,540 --> 00:11:48,780
if you have anybody in here named James

00:11:44,520 --> 00:11:52,320
a couple of people named James okay so

00:11:48,780 --> 00:11:55,320
um if you're in a group of people all

00:11:52,320 --> 00:11:57,210
with the same name or you have two

00:11:55,320 --> 00:11:59,040
John's on your group or whatever so it

00:11:57,210 --> 00:12:02,520
makes it really difficult to refer to

00:11:59,040 --> 00:12:04,800
somebody if there's six John's in the

00:12:02,520 --> 00:12:06,660
room or six James in the room so you

00:12:04,800 --> 00:12:11,460
need some way to distinguish that's why

00:12:06,660 --> 00:12:13,410
we get names Jim gimme a Jimbo whatever

00:12:11,460 --> 00:12:15,810
you know we make up nickname so we know

00:12:13,410 --> 00:12:17,730
who we're talking about sometimes last

00:12:15,810 --> 00:12:21,600
names sometimes people just go by their

00:12:17,730 --> 00:12:24,180
last name but that's a reference for us

00:12:21,600 --> 00:12:26,100
to refer to a particular person so we

00:12:24,180 --> 00:12:27,990
know which person were referring to

00:12:26,100 --> 00:12:32,940
that's what an instance is it's a

00:12:27,990 --> 00:12:36,120
specific reference to an object to a

00:12:32,940 --> 00:12:39,390
specific object okay so this is what it

00:12:36,120 --> 00:12:42,000
looks like we're going to go into the

00:12:39,390 --> 00:12:43,200
actual code after the next part so this

00:12:42,000 --> 00:12:45,570
is what it's actually going to look like

00:12:43,200 --> 00:12:48,600
though this is the actual code here we

00:12:45,570 --> 00:12:53,160
have a class our class is a user class

00:12:48,600 --> 00:13:00,480
we have a property which is our variable

00:12:53,160 --> 00:13:02,800
name named name and we have oh you

00:13:00,480 --> 00:13:07,589
cannot see this one at all

00:13:02,800 --> 00:13:10,120
better and then we also have a function

00:13:07,589 --> 00:13:12,850
which inside of a class is called a

00:13:10,120 --> 00:13:14,560
method it's still you still call it as a

00:13:12,850 --> 00:13:16,360
function it's still named function when

00:13:14,560 --> 00:13:18,190
you write it out it's just called the

00:13:16,360 --> 00:13:19,959
method inside a class again it's one of

00:13:18,190 --> 00:13:23,200
those naming things that helps us know

00:13:19,959 --> 00:13:28,180
what we're talking about so then we call

00:13:23,200 --> 00:13:29,980
our users so we have user 1 and user 2

00:13:28,180 --> 00:13:33,010
and those are our specific instance of

00:13:29,980 --> 00:13:35,440
the object ok this is all very basic

00:13:33,010 --> 00:13:38,670
stuff how many of you are still confused

00:13:35,440 --> 00:13:40,660
about this basic part of objects

00:13:38,670 --> 00:13:43,029
everybody feel like they have a handle

00:13:40,660 --> 00:13:45,850
on this basic part you're going okay I'm

00:13:43,029 --> 00:13:48,130
bored now can we move on

00:13:45,850 --> 00:13:49,149
something interesting ok let's move on

00:13:48,130 --> 00:13:50,860
to something a little bit more

00:13:49,149 --> 00:13:53,560
interesting now we get to some big words

00:13:50,860 --> 00:13:55,450
and what they actually mean abstraction

00:13:53,560 --> 00:13:57,579
ok our first big where we're going to

00:13:55,450 --> 00:14:01,110
talk about is abstraction so why is an

00:13:57,579 --> 00:14:05,050
abstraction good or is it good

00:14:01,110 --> 00:14:07,390
so abstraction hides all but the

00:14:05,050 --> 00:14:09,310
relevant data about an object this

00:14:07,390 --> 00:14:11,440
reduces the complexity again I said you

00:14:09,310 --> 00:14:14,020
can't store everything in your head so

00:14:11,440 --> 00:14:16,420
you can't store how every single piece

00:14:14,020 --> 00:14:17,829
of your project is going to work so you

00:14:16,420 --> 00:14:20,980
need to be able to understand a little

00:14:17,829 --> 00:14:23,770
bit so I all I really need to know about

00:14:20,980 --> 00:14:26,110
an object is what information I need to

00:14:23,770 --> 00:14:29,140
give the object and what I expect to get

00:14:26,110 --> 00:14:30,610
back it makes it a lot easier when

00:14:29,140 --> 00:14:32,890
dealing with that I don't need to know

00:14:30,610 --> 00:14:35,550
how it works it's just like using my

00:14:32,890 --> 00:14:38,800
computer I don't need to be able to

00:14:35,550 --> 00:14:39,490
write the operating system on my

00:14:38,800 --> 00:14:40,720
computer

00:14:39,490 --> 00:14:43,120
I don't need to be able to put the

00:14:40,720 --> 00:14:45,459
hardware together on my computer to be

00:14:43,120 --> 00:14:48,370
able to use it I don't need to have be

00:14:45,459 --> 00:14:51,760
able to build a car or even be a

00:14:48,370 --> 00:14:54,910
mechanic to drive a car I just need to

00:14:51,760 --> 00:14:57,579
know what input I need to give it and

00:14:54,910 --> 00:15:02,320
what I expect to get back that's what an

00:14:57,579 --> 00:15:04,560
abstraction is so using something

00:15:02,320 --> 00:15:08,230
without knowing the inner workings

00:15:04,560 --> 00:15:10,839
encapsulation this all this means is

00:15:08,230 --> 00:15:13,570
this it's together so instead of having

00:15:10,839 --> 00:15:15,640
to track your data in one spot and what

00:15:13,570 --> 00:15:19,060
you can do with that data in

00:15:15,640 --> 00:15:20,890
our spot it's stored together so it's

00:15:19,060 --> 00:15:25,960
easy to move that piece of information

00:15:20,890 --> 00:15:27,460
around together your your data and your

00:15:25,960 --> 00:15:28,060
actions that you can perform on that

00:15:27,460 --> 00:15:31,030
data

00:15:28,060 --> 00:15:32,890
those are your variables or in a class

00:15:31,030 --> 00:15:34,510
it's called the property and your

00:15:32,890 --> 00:15:40,000
functions which inside a class are

00:15:34,510 --> 00:15:41,920
called a method so when talking about

00:15:40,000 --> 00:15:46,300
these things the important thing to know

00:15:41,920 --> 00:15:49,270
is scope your scope is like your guard

00:15:46,300 --> 00:15:52,390
who says who can access what it controls

00:15:49,270 --> 00:15:54,280
what access people have or your script

00:15:52,390 --> 00:15:57,910
has which portions of your script have

00:15:54,280 --> 00:16:03,330
access to what so this is another great

00:15:57,910 --> 00:16:07,930
feature of using object-oriented design

00:16:03,330 --> 00:16:11,350
you can make sure that things only come

00:16:07,930 --> 00:16:13,000
in a specific way that you only accept

00:16:11,350 --> 00:16:17,140
certain things from certain people

00:16:13,000 --> 00:16:20,070
certain groups certain functions you can

00:16:17,140 --> 00:16:22,990
control a little bit more what happens

00:16:20,070 --> 00:16:24,490
so you can make it public to anyone

00:16:22,990 --> 00:16:26,050
we're going to get into some code and

00:16:24,490 --> 00:16:31,860
see exactly what this looks like

00:16:26,050 --> 00:16:34,180
public to everyone protected which means

00:16:31,860 --> 00:16:36,580
children of that class which we will get

00:16:34,180 --> 00:16:38,560
into in a little bit and then you have

00:16:36,580 --> 00:16:42,040
private which means nothing outside of

00:16:38,560 --> 00:16:43,930
the functions of your class your methods

00:16:42,040 --> 00:16:45,280
nothing outside of the whole class will

00:16:43,930 --> 00:16:47,770
be able to access it so you have to have

00:16:45,280 --> 00:16:50,680
some way to get that information out or

00:16:47,770 --> 00:16:53,430
be using it within your class but you

00:16:50,680 --> 00:16:58,740
can't access it from outside your class

00:16:53,430 --> 00:16:58,740
so great our first live coma coding demo

00:16:59,640 --> 00:17:09,540
whew oh there we go see these are my

00:17:07,480 --> 00:17:09,540
kids

00:17:11,980 --> 00:17:24,439
okay can you see it back can you see it

00:17:18,140 --> 00:17:29,270
in the back yes no I don't hear anybody

00:17:24,439 --> 00:17:31,130
yet you're not in the back okay so my

00:17:29,270 --> 00:17:32,240
front row is getting all the t-shirts so

00:17:31,130 --> 00:17:36,470
I guess I don't need to have a very good

00:17:32,240 --> 00:17:38,360
arm today okay so I hope that you can

00:17:36,470 --> 00:17:42,620
see this and I'll just trust that you

00:17:38,360 --> 00:17:46,070
can we have our user class here we have

00:17:42,620 --> 00:17:50,360
a public name a private title some

00:17:46,070 --> 00:17:55,190
methods which are functions that you see

00:17:50,360 --> 00:17:59,809
here and this is our class this is our

00:17:55,190 --> 00:18:03,650
blueprint for how it's going to work so

00:17:59,809 --> 00:18:09,590
we're going to call this in our index

00:18:03,650 --> 00:18:11,690
file I had my first require here okay

00:18:09,590 --> 00:18:13,270
my first require here is just to make

00:18:11,690 --> 00:18:15,470
our page that we're going to look at

00:18:13,270 --> 00:18:18,440
looks a little bit bigger in nicer you

00:18:15,470 --> 00:18:20,510
see handle some errors for us and then

00:18:18,440 --> 00:18:23,179
we're requiring this user class that I

00:18:20,510 --> 00:18:25,640
just that I just showed you now from

00:18:23,179 --> 00:18:27,920
here we're going to instantiate our

00:18:25,640 --> 00:18:30,530
object we're creating a specific

00:18:27,920 --> 00:18:35,870
instance of an object class so we have

00:18:30,530 --> 00:18:39,530
our user and we set the name and then we

00:18:35,870 --> 00:18:42,530
set we've used our method to set the

00:18:39,530 --> 00:18:46,660
type of title so the first thing I want

00:18:42,530 --> 00:18:50,059
to do is show you what this looks like

00:18:46,660 --> 00:18:55,429
so this is what it looks like Jane Smith

00:18:50,059 --> 00:18:57,770
because here we told it to get we set

00:18:55,429 --> 00:18:59,750
the name set the title and get

00:18:57,770 --> 00:19:03,530
salutation okay so why am i setting

00:18:59,750 --> 00:19:05,150
these differently well first off ah this

00:19:03,530 --> 00:19:10,960
one is setting the name directly

00:19:05,150 --> 00:19:16,880
okay and that works so if I wanted to do

00:19:10,960 --> 00:19:24,790
user title and instead I want to set

00:19:16,880 --> 00:19:24,790
this equal to mister

00:19:24,809 --> 00:19:35,649
okay now this key we can't access the

00:19:33,279 --> 00:19:39,009
private property title from this file

00:19:35,649 --> 00:19:41,340
well because our property was private we

00:19:39,009 --> 00:19:44,860
can't access it from outside the class

00:19:41,340 --> 00:19:49,090
so we try to set it directly and we

00:19:44,860 --> 00:19:51,669
can't access that so that's why you see

00:19:49,090 --> 00:19:53,710
here we have this set title method now

00:19:51,669 --> 00:19:55,779
the method is public which means I can

00:19:53,710 --> 00:19:58,269
access the method from outside the class

00:19:55,779 --> 00:20:00,519
and then the class can set the property

00:19:58,269 --> 00:20:02,799
itself can anybody give me any ideas of

00:20:00,519 --> 00:20:11,080
why we would want to do this why this is

00:20:02,799 --> 00:20:15,610
even useful sanitation there we go who

00:20:11,080 --> 00:20:19,749
who said that in the best yeah I don't

00:20:15,610 --> 00:20:22,179
know about that yeah not that good I can

00:20:19,749 --> 00:20:26,649
probably make it about halfway down this

00:20:22,179 --> 00:20:35,230
back part here okay so yes sanitation is

00:20:26,649 --> 00:20:38,559
important it's over the back okay so if

00:20:35,230 --> 00:20:41,379
sanitation is important so if I want to

00:20:38,559 --> 00:20:44,080
accept user data we need to make sure

00:20:41,379 --> 00:20:46,899
it's in the right format how many of you

00:20:44,080 --> 00:20:51,700
have ever dealt with dates and you have

00:20:46,899 --> 00:20:53,970
some dates written even the days of the

00:20:51,700 --> 00:20:56,139
week somebody has put them in as

00:20:53,970 --> 00:21:02,379
Wednesday and somebody else has put them

00:20:56,139 --> 00:21:05,169
in as Wed and or months or states or

00:21:02,379 --> 00:21:10,119
pretty much anything that people decide

00:21:05,169 --> 00:21:14,499
to put in capitalization is off spelling

00:21:10,119 --> 00:21:16,059
is off all kinds of formatting can be

00:21:14,499 --> 00:21:20,139
different how many of you have ever

00:21:16,059 --> 00:21:23,169
tried to like look for a specific day

00:21:20,139 --> 00:21:26,909
and ran into this issue have you ever

00:21:23,169 --> 00:21:30,009
had any problems with this ever before

00:21:26,909 --> 00:21:32,169
no nobody said wow I guess we should all

00:21:30,009 --> 00:21:34,269
go home now because nobody has ever had

00:21:32,169 --> 00:21:36,210
to deal with any issues on data eat on

00:21:34,269 --> 00:21:38,580
user data and you got

00:21:36,210 --> 00:21:41,070
all have fantastic users that know

00:21:38,580 --> 00:21:43,560
exactly how to input everything then

00:21:41,070 --> 00:21:46,170
your job as a developer has been smooth

00:21:43,560 --> 00:21:47,760
and perfect please come and talk to me

00:21:46,170 --> 00:21:51,260
about where you work because I would

00:21:47,760 --> 00:21:53,880
like to work there with your users so

00:21:51,260 --> 00:21:56,700
for the couple of you that may have

00:21:53,880 --> 00:22:00,920
thought this might apply to you this

00:21:56,700 --> 00:22:03,630
allows us to control what happens

00:22:00,920 --> 00:22:06,720
control what comes in no that's not how

00:22:03,630 --> 00:22:09,450
I want it or can I take this data that

00:22:06,720 --> 00:22:11,160
the user gave me and reformat it for

00:22:09,450 --> 00:22:15,510
instance do I just need to capitalize

00:22:11,160 --> 00:22:21,120
the first word do I need to run this

00:22:15,510 --> 00:22:23,460
against a sample of data so I can say if

00:22:21,120 --> 00:22:25,530
it came in as an abbreviation I can turn

00:22:23,460 --> 00:22:29,430
it into the full name that I know it's

00:22:25,530 --> 00:22:31,200
supposed to be so these are different

00:22:29,430 --> 00:22:35,190
things that we can do so let's let's try

00:22:31,200 --> 00:22:40,830
this okay so as you can see here on the

00:22:35,190 --> 00:22:47,820
set title let's see I'm going to change

00:22:40,830 --> 00:22:50,340
this to just lowercase okay so we'll see

00:22:47,820 --> 00:22:50,970
how this works if I just did it just

00:22:50,340 --> 00:22:54,360
like this

00:22:50,970 --> 00:22:56,340
and now I see that my title is now

00:22:54,360 --> 00:22:59,430
lowercase well that's not what the way I

00:22:56,340 --> 00:23:01,800
want it so we could either change it on

00:22:59,430 --> 00:23:03,390
output or we can change it on input well

00:23:01,800 --> 00:23:05,670
it's much better for the sanity of your

00:23:03,390 --> 00:23:16,770
data to change it beforehand when it

00:23:05,670 --> 00:23:22,290
comes in so we go back into there we go

00:23:16,770 --> 00:23:25,260
user and we set our title and we say

00:23:22,290 --> 00:23:27,560
that we want our title to be you see

00:23:25,260 --> 00:23:27,560
words

00:23:31,100 --> 00:23:35,720
there we go let's go back here there we

00:23:35,330 --> 00:23:38,660
go

00:23:35,720 --> 00:23:41,120
very simple but you can see how this

00:23:38,660 --> 00:23:44,150
could be used in a much more complicated

00:23:41,120 --> 00:23:46,880
schema if I wanted to I control what cut

00:23:44,150 --> 00:23:48,760
happens as it comes in where other data

00:23:46,880 --> 00:24:00,020
gets stored what I do with that data

00:23:48,760 --> 00:24:01,429
okay cut so see I want you guys to get

00:24:00,020 --> 00:24:03,110
per to give me a little bit more

00:24:01,429 --> 00:24:07,010
participation here so we're going to

00:24:03,110 --> 00:24:09,289
change something in here let give me

00:24:07,010 --> 00:24:11,659
give me something else that we want

00:24:09,289 --> 00:24:15,350
about our user what other data do we

00:24:11,659 --> 00:24:17,690
want to store about a user date of birth

00:24:15,350 --> 00:24:23,000
okay we're going to get right into

00:24:17,690 --> 00:24:26,299
security issues here okay so date of

00:24:23,000 --> 00:24:28,190
birth we're going to get we're going to

00:24:26,299 --> 00:24:32,780
set this up here now what do you think

00:24:28,190 --> 00:24:37,520
should our date of birth be public or

00:24:32,780 --> 00:24:39,740
private private yes good point should be

00:24:37,520 --> 00:24:42,860
private because we're working with

00:24:39,740 --> 00:24:50,230
States and everybody loves working with

00:24:42,860 --> 00:24:55,610
States so our private date of birth and

00:24:50,230 --> 00:25:00,559
then we still need to get data into an

00:24:55,610 --> 00:25:02,390
out of our object so that's why we have

00:25:00,559 --> 00:25:04,700
that's why they have what they call

00:25:02,390 --> 00:25:08,450
getters and setters how many of you have

00:25:04,700 --> 00:25:11,240
heard of getters and setters before okay

00:25:08,450 --> 00:25:14,350
so that's all that this is referring to

00:25:11,240 --> 00:25:18,919
is the fact that if I have a private

00:25:14,350 --> 00:25:22,429
variable or property I can't set it

00:25:18,919 --> 00:25:25,580
directly so to access it I need to have

00:25:22,429 --> 00:25:27,679
a method that gets the information and

00:25:25,580 --> 00:25:29,929
sets the information getters and setters

00:25:27,679 --> 00:25:34,299
so you will see a lot of getters and

00:25:29,929 --> 00:25:43,059
setters and we've demonstrated why so

00:25:34,299 --> 00:25:44,830
let's go down to here and we'll say

00:25:43,059 --> 00:25:50,890
public

00:25:44,830 --> 00:25:55,809
function set

00:25:50,890 --> 00:26:03,710
gob will do it this way

00:25:55,809 --> 00:26:11,299
and say do B and all we're going to do

00:26:03,710 --> 00:26:19,280
is say this do B okay who can tell me

00:26:11,299 --> 00:26:21,740
what does this key word stands for the

00:26:19,280 --> 00:26:24,470
specific instance yes since I don't know

00:26:21,740 --> 00:26:26,900
what the name of this instance is I can

00:26:24,470 --> 00:26:27,740
still reference it in my class by

00:26:26,900 --> 00:26:35,179
calling this

00:26:27,740 --> 00:26:39,340
so if I've named this James and I have

00:26:35,179 --> 00:26:44,600
now I now I'm using James as my object

00:26:39,340 --> 00:26:47,750
this essentially means James so just

00:26:44,600 --> 00:26:50,510
like if I were outside my class I would

00:26:47,750 --> 00:26:55,610
reference it as in our last one we had

00:26:50,510 --> 00:26:58,580
user 1 remember that yes so it's just

00:26:55,610 --> 00:27:00,409
like saying either one do B but I don't

00:26:58,580 --> 00:27:04,299
have to use that specific object name

00:27:00,409 --> 00:27:08,020
it's whichever object is in the class so

00:27:04,299 --> 00:27:15,530
there we go so we have our Center and

00:27:08,020 --> 00:27:24,490
public function get do B we don't need

00:27:15,530 --> 00:27:24,490
bent return this

00:27:26,149 --> 00:27:32,469
Dubey there we go okay so to use this

00:27:32,589 --> 00:27:53,859
one we're going to need to user set DOB

00:27:42,169 --> 00:27:53,859
and I'm just going to say January 2nd

00:27:54,759 --> 00:28:05,179
2018 we don't have any data validation

00:28:02,689 --> 00:28:09,979
this is a valid date of birth right now

00:28:05,179 --> 00:28:11,839
I am born next year in January and as

00:28:09,979 --> 00:28:14,539
you can see here probably all of you

00:28:11,839 --> 00:28:17,749
from the UK are going to put her dates

00:28:14,539 --> 00:28:23,989
in wrong the two should be before the

00:28:17,749 --> 00:28:26,149
January okay and obviously a date of

00:28:23,989 --> 00:28:29,419
birth should not be before today

00:28:26,149 --> 00:28:31,699
although it shouldn't be any later than

00:28:29,419 --> 00:28:32,629
9 months out probably eight months out

00:28:31,699 --> 00:28:34,539
because you shouldn't know you were

00:28:32,629 --> 00:28:36,709
pregnant and you could put it ok so

00:28:34,539 --> 00:28:38,779
anyway we can get into a whole

00:28:36,709 --> 00:28:40,609
discussion of which dates are valid and

00:28:38,779 --> 00:28:42,709
which dates are not how are you going to

00:28:40,609 --> 00:28:43,099
use it dates again nightmare to work

00:28:42,709 --> 00:28:47,329
with

00:28:43,099 --> 00:28:50,659
but as you can see if we have a setter

00:28:47,329 --> 00:28:52,279
we can actually program that somehow if

00:28:50,659 --> 00:28:54,469
we don't have a setter this state is

00:28:52,279 --> 00:28:58,129
valid so we're going to say that is my

00:28:54,469 --> 00:29:00,469
date I can could run something against

00:28:58,129 --> 00:29:02,389
this like checking that date oh wait I

00:29:00,469 --> 00:29:03,979
don't have any validation so I wouldn't

00:29:02,389 --> 00:29:08,389
know how to turn this into an actual

00:29:03,979 --> 00:29:12,139
date object so I guess all I'm going to

00:29:08,389 --> 00:29:14,179
do is echo it out how boring if we could

00:29:12,139 --> 00:29:16,339
turn this into a real date object now I

00:29:14,179 --> 00:29:20,029
could say is this the 2nd of January

00:29:16,339 --> 00:29:22,389
then I could say happy birthday but

00:29:20,029 --> 00:29:30,159
since I can't we're just going to say

00:29:22,389 --> 00:29:36,109
get DOB okay and if you'll notice on my

00:29:30,159 --> 00:29:38,390
method or my function they end with the

00:29:36,109 --> 00:29:41,300
parentheses

00:29:38,390 --> 00:29:43,640
if I'm calling a variable or property

00:29:41,300 --> 00:29:46,070
within a class they do not end us in

00:29:43,640 --> 00:29:50,360
parentheses if I'm calling a method it

00:29:46,070 --> 00:29:53,750
does technically not needed most of the

00:29:50,360 --> 00:29:55,280
time but it's still a good practice to

00:29:53,750 --> 00:29:56,330
do if you're calling a method this helps

00:29:55,280 --> 00:29:59,120
you know right off the bat this is

00:29:56,330 --> 00:30:02,990
method and not a property so let's go

00:29:59,120 --> 00:30:04,840
see how this worked look at that we have

00:30:02,990 --> 00:30:19,190
it all jammed together

00:30:04,840 --> 00:30:23,860
let's go like this there we go helps if

00:30:19,190 --> 00:30:29,420
you copy the right line it also helps if

00:30:23,860 --> 00:30:34,120
like there we go let's see this one this

00:30:29,420 --> 00:30:37,130
one okay there we go whew

00:30:34,120 --> 00:30:39,560
congratulations you just helped us write

00:30:37,130 --> 00:30:40,730
our first new property with getters and

00:30:39,560 --> 00:30:43,100
setters good job

00:30:40,730 --> 00:30:45,890
okay let's learn everybody ready to

00:30:43,100 --> 00:30:50,360
learn a little bit more yes yes yes

00:30:45,890 --> 00:30:53,770
please please please okay so now that

00:30:50,360 --> 00:30:57,080
you understand why we have abstraction

00:30:53,770 --> 00:30:58,520
right okay who can tell me why we have

00:30:57,080 --> 00:31:00,980
abstraction these are our getters and

00:30:58,520 --> 00:31:02,150
setters these this is the information

00:31:00,980 --> 00:31:03,950
about this class why do we have

00:31:02,150 --> 00:31:10,930
abstraction what does this allow us to

00:31:03,950 --> 00:31:14,150
do change the type of gives us control

00:31:10,930 --> 00:31:15,770
it's all about control the person

00:31:14,150 --> 00:31:19,100
programming this class can have the

00:31:15,770 --> 00:31:22,120
control and the person coming in to use

00:31:19,100 --> 00:31:25,340
it doesn't need to know how it works

00:31:22,120 --> 00:31:28,630
okay this is great this is good for

00:31:25,340 --> 00:31:28,630
everyone yes

00:31:44,570 --> 00:31:48,920
yeah so what you need to tell they need

00:31:46,730 --> 00:31:50,480
to know how it works so you'll need to

00:31:48,920 --> 00:31:52,430
tell your you the people who are going

00:31:50,480 --> 00:31:54,760
to access this class that should be what

00:31:52,430 --> 00:31:56,870
your documentation is for so

00:31:54,760 --> 00:31:59,450
documentation right off the bat should

00:31:56,870 --> 00:32:01,730
tell that's what a dot the documentation

00:31:59,450 --> 00:32:03,650
for a class should be it should tell you

00:32:01,730 --> 00:32:06,020
what information goes in what type of

00:32:03,650 --> 00:32:09,860
information goes in and what type of

00:32:06,020 --> 00:32:11,600
information goes out well that we can

00:32:09,860 --> 00:32:14,150
get even more precise without with type

00:32:11,600 --> 00:32:17,390
declarations incoming and outgoing type

00:32:14,150 --> 00:32:18,860
declarations so that's cool but that's

00:32:17,390 --> 00:32:20,630
that's what you need to know I don't

00:32:18,860 --> 00:32:24,050
need to know what happens on the inside

00:32:20,630 --> 00:32:25,580
I just need to know what specific

00:32:24,050 --> 00:32:31,220
information I need to give it and what

00:32:25,580 --> 00:32:33,920
information I can expect out but I need

00:32:31,220 --> 00:32:36,920
to know how what do I need to do what

00:32:33,920 --> 00:32:41,900
can I give it I need to I need to ask

00:32:36,920 --> 00:32:44,300
for the get name I don't need to know

00:32:41,900 --> 00:32:49,670
what that get name does I need to know

00:32:44,300 --> 00:32:52,580
that I can ask for the name so yes some

00:32:49,670 --> 00:32:55,070
of it you so in a way you need to know

00:32:52,580 --> 00:32:57,290
what methods are there but you don't

00:32:55,070 --> 00:32:59,540
need to know how the methods work again

00:32:57,290 --> 00:33:01,160
it's what you put into the method do I

00:32:59,540 --> 00:33:03,110
need to give this method any data or

00:33:01,160 --> 00:33:06,290
just call the method and what do I get

00:33:03,110 --> 00:33:07,490
out but again you do need to know what

00:33:06,290 --> 00:33:09,830
to ask for

00:33:07,490 --> 00:33:12,260
just like with terminology you need to

00:33:09,830 --> 00:33:15,830
know what to ask Google Google can give

00:33:12,260 --> 00:33:18,530
you the answers but you don't know how

00:33:15,830 --> 00:33:21,260
to ask it's not very useful just like if

00:33:18,530 --> 00:33:24,830
you have a class that nobody knows how

00:33:21,260 --> 00:33:26,870
to use it's not very useful so you need

00:33:24,830 --> 00:33:33,280
to make sure that they know what to put

00:33:26,870 --> 00:33:33,280
into it and what to get out of it okay

00:33:38,500 --> 00:33:45,320
there it is

00:33:40,640 --> 00:33:48,170
okay back to our next fun part

00:33:45,320 --> 00:33:50,950
polymorphism okay how many of you have

00:33:48,170 --> 00:33:56,320
ever been scared away by this word I

00:33:50,950 --> 00:34:00,110
feel so alone I really what

00:33:56,320 --> 00:34:03,049
okay so polymorphism another big word

00:34:00,110 --> 00:34:09,679
I'm bleeding all over the place

00:34:03,049 --> 00:34:12,710
polymorphism means simply ask for

00:34:09,679 --> 00:34:15,260
something get it back in a specific way

00:34:12,710 --> 00:34:19,250
so volley morphism is actually sharing

00:34:15,260 --> 00:34:21,619
code okay so this person is asking speak

00:34:19,250 --> 00:34:22,940
now speak we're getting on all the

00:34:21,619 --> 00:34:26,149
animals are speaking in their own

00:34:22,940 --> 00:34:29,179
language right okay polymorphism is all

00:34:26,149 --> 00:34:32,359
about sharing code it is not specific to

00:34:29,179 --> 00:34:35,330
programming we there's Palmer proposes

00:34:32,359 --> 00:34:38,570
that definitely bloodbath there is

00:34:35,330 --> 00:34:42,080
polymorphism all over biology genetics

00:34:38,570 --> 00:34:44,869
biochemistry computing and it all means

00:34:42,080 --> 00:34:50,980
essentially the same thing it's just

00:34:44,869 --> 00:34:54,260
sharing of data so in programming and

00:34:50,980 --> 00:34:57,040
especially in PHP this is achlys we'll

00:34:54,260 --> 00:35:00,619
talk about inheritance interface

00:34:57,040 --> 00:35:03,740
abstraction and traits these are all

00:35:00,619 --> 00:35:05,210
ways to share code how many of you like

00:35:03,740 --> 00:35:07,900
writing the same thing over and over

00:35:05,210 --> 00:35:07,900
again I

00:35:08,240 --> 00:35:12,590
I'm guessing you all do because this is

00:35:10,280 --> 00:35:13,880
the response I get to each question so

00:35:12,590 --> 00:35:15,830
I'm going to say that when you don't

00:35:13,880 --> 00:35:19,460
raise your hand it's a positive reaction

00:35:15,830 --> 00:35:22,730
so you all like rewriting code okay

00:35:19,460 --> 00:35:28,960
so I'm sorry that maybe we'll make this

00:35:22,730 --> 00:35:32,530
a little bit too easy for you sure a

00:35:28,960 --> 00:35:32,530
band-aid might be better

00:35:36,240 --> 00:35:39,780
cracked knuckles I have very dry skin

00:35:38,599 --> 00:35:42,960
okay

00:35:39,780 --> 00:35:44,369
so we're sharing code that's all this

00:35:42,960 --> 00:35:46,680
means a sharing code you've probably

00:35:44,369 --> 00:35:49,349
done this if you've written procedural

00:35:46,680 --> 00:35:51,150
code you've written a functions file and

00:35:49,349 --> 00:35:53,670
you put this in a nice place to organize

00:35:51,150 --> 00:35:56,369
your code you know how to organize your

00:35:53,670 --> 00:35:59,070
code and share those functions with

00:35:56,369 --> 00:35:59,609
other files this is great a great way to

00:35:59,070 --> 00:36:02,099
do it

00:35:59,609 --> 00:36:03,869
so object-oriented just gives us a

00:36:02,099 --> 00:36:06,150
couple different ways to do that but

00:36:03,869 --> 00:36:09,270
it's the whole point is to share the

00:36:06,150 --> 00:36:11,970
code depending on how and where we need

00:36:09,270 --> 00:36:15,119
to share it will depend on how it's

00:36:11,970 --> 00:36:17,880
actually used so let's talk about

00:36:15,119 --> 00:36:18,780
inheritance first okay how many of you

00:36:17,880 --> 00:36:22,490
were ever born

00:36:18,780 --> 00:36:25,980
ah thank you

00:36:22,490 --> 00:36:28,349
finally something actually that got you

00:36:25,980 --> 00:36:30,540
to raise your hands okay so inheritance

00:36:28,349 --> 00:36:33,210
you've probably all heard this referred

00:36:30,540 --> 00:36:35,839
to when talking about a parent-child

00:36:33,210 --> 00:36:38,730
relationships grandparents you know

00:36:35,839 --> 00:36:41,430
hierarchical things it's inheritance

00:36:38,730 --> 00:36:44,220
right you've heard this word referred to

00:36:41,430 --> 00:36:47,820
before is there anybody that has never

00:36:44,220 --> 00:36:51,420
heard this word referred to before okay

00:36:47,820 --> 00:36:53,550
and it is it is the same thing again we

00:36:51,420 --> 00:36:55,020
haven't made up new words or change the

00:36:53,550 --> 00:36:56,550
meaning of words in programming it's the

00:36:55,020 --> 00:36:59,849
same thing we're passing information

00:36:56,550 --> 00:37:05,930
down in a hierarchical scheme it's

00:36:59,849 --> 00:37:09,180
passing information down just like as my

00:37:05,930 --> 00:37:13,050
blue-eyed son got his blue eyes from

00:37:09,180 --> 00:37:16,470
neither his father or I but from further

00:37:13,050 --> 00:37:18,240
up in the chain and each of my children

00:37:16,470 --> 00:37:20,550
had a three children have different

00:37:18,240 --> 00:37:24,570
colored eyes well that came down from

00:37:20,550 --> 00:37:27,810
somewhere or somewhere in the past it's

00:37:24,570 --> 00:37:30,480
been passed down those genes maybe not

00:37:27,810 --> 00:37:33,200
directly and that's sometimes where the

00:37:30,480 --> 00:37:36,900
confusion even gets with your code so

00:37:33,200 --> 00:37:42,089
when you are programming inheritance it

00:37:36,900 --> 00:37:47,460
comes down in a straight line so this

00:37:42,089 --> 00:37:49,890
class inherits from this class and this

00:37:47,460 --> 00:37:54,690
class alone it can only inherit from one

00:37:49,890 --> 00:37:58,200
laughs however this class could inherit

00:37:54,690 --> 00:37:59,960
from this class from this class from

00:37:58,200 --> 00:38:02,490
this class so you can make a long chain

00:37:59,960 --> 00:38:03,810
IDs are really helpful when dealing with

00:38:02,490 --> 00:38:07,380
this because they will help you track

00:38:03,810 --> 00:38:10,200
down the chain but that's how

00:38:07,380 --> 00:38:13,560
inheritance works one down down down

00:38:10,200 --> 00:38:16,730
down and it passes information down you

00:38:13,560 --> 00:38:22,400
can pass properties you can pass methods

00:38:16,730 --> 00:38:25,530
you pass them down but only as one so

00:38:22,400 --> 00:38:38,160
let's go into seeing how this works

00:38:25,530 --> 00:38:47,820
Oh cancel that go in here okay so we're

00:38:38,160 --> 00:38:51,390
going to make there we go okay so I've

00:38:47,820 --> 00:38:54,780
created a new class called

00:38:51,390 --> 00:38:58,440
developer okay a developer is going to

00:38:54,780 --> 00:39:01,770
be a type of user so we're going to

00:38:58,440 --> 00:39:04,500
extend a regular user and because I like

00:39:01,770 --> 00:39:06,990
to think that as a developer I have all

00:39:04,500 --> 00:39:09,800
of the normal skills that any user would

00:39:06,990 --> 00:39:12,270
have plus extra development skills right

00:39:09,800 --> 00:39:18,080
okay so this is how it's going to work

00:39:12,270 --> 00:39:18,080
awesome thank you so I have my user

00:39:20,120 --> 00:39:28,050
thank you okay so can you you know you

00:39:25,650 --> 00:39:30,420
guys could okay so as you can see here

00:39:28,050 --> 00:39:32,250
we have our class developer and extend

00:39:30,420 --> 00:39:36,270
user but it doesn't say anything about

00:39:32,250 --> 00:39:40,050
name right I do see anything here that

00:39:36,270 --> 00:39:52,350
says anything about name or title no

00:39:40,050 --> 00:39:54,570
okay so let's go back to here and we're

00:39:52,350 --> 00:39:57,120
going to create we're going to call our

00:39:54,570 --> 00:40:01,970
new developer so this is actually it's

00:39:57,120 --> 00:40:01,970
full user but I'm going to name this ah

00:40:02,610 --> 00:40:08,060
James I'm going to pick unchanged so

00:40:04,650 --> 00:40:12,200
this is James and he's going to be a new

00:40:08,060 --> 00:40:18,240
developer okay

00:40:12,200 --> 00:40:21,090
now James needs a name okay well I'm

00:40:18,240 --> 00:40:26,750
going to set a name just like I did up

00:40:21,090 --> 00:40:26,750
for Jane Smith I'm going to say James

00:40:27,380 --> 00:40:38,340
there we go okay and then we're going to

00:40:32,130 --> 00:40:42,480
try echo I'm actually going to say oops

00:40:38,340 --> 00:40:44,520
haha I see hi I see it is get salutation

00:40:42,480 --> 00:40:46,770
there we go okay I'll go back one before

00:40:44,520 --> 00:40:50,160
there look at that see I was coding the

00:40:46,770 --> 00:40:53,190
prior okay there we go

00:40:50,160 --> 00:40:55,500
so if I had left it as user it would

00:40:53,190 --> 00:40:58,830
just sit reset my user and James would

00:40:55,500 --> 00:41:07,950
have no name so here we go we want the

00:40:58,830 --> 00:41:11,370
gate salutation and James so okay so so

00:41:07,950 --> 00:41:15,540
let's see what happened ah live demo

00:41:11,370 --> 00:41:19,140
class developer not found in file okay

00:41:15,540 --> 00:41:25,260
so as you guys already saw because you

00:41:19,140 --> 00:41:28,500
were so smart and such a are such a

00:41:25,260 --> 00:41:31,070
paying attention crowd here we saw that

00:41:28,500 --> 00:41:33,660
we need this to require our developer

00:41:31,070 --> 00:41:38,660
okay now let's go back here play it

00:41:33,660 --> 00:41:41,550
again there we go okay now I was able to

00:41:38,660 --> 00:41:46,380
okay let me finish what I'm doing here I

00:41:41,550 --> 00:41:49,650
was able to set the name and call the

00:41:46,380 --> 00:41:52,350
name of my developer even though my

00:41:49,650 --> 00:41:55,740
developer class didn't have anything

00:41:52,350 --> 00:42:02,730
about a name property this is because it

00:41:55,740 --> 00:42:06,810
inherited this isn't because it

00:42:02,730 --> 00:42:11,220
inherited all it inherited all that from

00:42:06,810 --> 00:42:13,580
the user class so everything that my

00:42:11,220 --> 00:42:15,830
user could do my developer can now do

00:42:13,580 --> 00:42:18,770
but now we have some extra things

00:42:15,830 --> 00:42:24,680
the developer is able to do as well okay

00:42:18,770 --> 00:42:26,680
so in here I have that my developer

00:42:24,680 --> 00:42:32,420
there we go

00:42:26,680 --> 00:42:37,220
my developer has skills so I'm getting

00:42:32,420 --> 00:42:40,550
skills setting skills I'm getting a

00:42:37,220 --> 00:42:43,760
skill string and I can add a sit at a

00:42:40,550 --> 00:42:50,930
single strip I can add a single skill or

00:42:43,760 --> 00:42:53,060
I can add it the set skills as an array

00:42:50,930 --> 00:42:56,090
so you'll notice my set skills is

00:42:53,060 --> 00:42:57,860
wanting an array and my add skills is

00:42:56,090 --> 00:42:59,330
wanting a string these are type

00:42:57,860 --> 00:43:01,610
declarations we'll talk about in a

00:42:59,330 --> 00:43:03,020
little bit but there they're there so

00:43:01,610 --> 00:43:06,980
you can understand a little bit what's

00:43:03,020 --> 00:43:08,870
going on because another really handy

00:43:06,980 --> 00:43:11,270
thing when people come along to read

00:43:08,870 --> 00:43:12,770
your code they know this is what it's

00:43:11,270 --> 00:43:14,030
supposed to be accepting especially if

00:43:12,770 --> 00:43:17,900
your code gets a little more complicated

00:43:14,030 --> 00:43:22,220
so I can either accept skills as a

00:43:17,900 --> 00:43:26,300
string by using the add skill or as an

00:43:22,220 --> 00:43:31,850
array by using set skills so let's go

00:43:26,300 --> 00:43:39,020
into back here now we're going to set

00:43:31,850 --> 00:43:45,740
some skills here okay okay

00:43:39,020 --> 00:43:53,750
James and then we can say set skills up

00:43:45,740 --> 00:43:56,930
game set skills and then this is an

00:43:53,750 --> 00:43:58,520
array so here's my array what kind of

00:43:56,930 --> 00:44:03,530
skills do we want to give James as a

00:43:58,520 --> 00:44:10,000
developer beard-growing okay a lot of

00:44:03,530 --> 00:44:19,550
developers have a very interesting beard

00:44:10,000 --> 00:44:23,090
so beard you're growing there we go okay

00:44:19,550 --> 00:44:27,880
what else it does he know any languages

00:44:23,090 --> 00:44:27,880
here then framework

00:44:28,110 --> 00:44:37,170
work okay I'm going to assume maybe

00:44:32,490 --> 00:44:41,040
we'll give them PHP knowledge PHP okay

00:44:37,170 --> 00:44:43,380
so there we go we've got we've passed

00:44:41,040 --> 00:44:54,810
some skills to him so now we want to

00:44:43,380 --> 00:44:58,050
echo James get skills again I des can be

00:44:54,810 --> 00:45:02,810
very useful for this okay so let's go

00:44:58,050 --> 00:45:02,810
here and see a registering conversion

00:45:06,800 --> 00:45:18,560
there we go haha there we go we're

00:45:11,820 --> 00:45:18,560
growing Zend framework and PHP okay so

00:45:21,080 --> 00:45:30,780
we have we now have our we now have our

00:45:26,790 --> 00:45:33,650
user we've extended our user with as a

00:45:30,780 --> 00:45:37,440
developer and we've been able to add new

00:45:33,650 --> 00:45:39,240
features to our developer as well as use

00:45:37,440 --> 00:45:41,670
all of the features already accessible

00:45:39,240 --> 00:45:45,600
by our either okay let's go back and see

00:45:41,670 --> 00:45:54,390
what other polymorphic activities we can

00:45:45,600 --> 00:46:00,470
accomplish okay so the next thing we

00:45:54,390 --> 00:46:03,110
have is interface so an interface again

00:46:00,470 --> 00:46:10,440
some of you have ever dealt with

00:46:03,110 --> 00:46:13,500
building or remodeling a house okay um

00:46:10,440 --> 00:46:16,080
you have regulations okay you have

00:46:13,500 --> 00:46:20,340
regulations that you have to follow or

00:46:16,080 --> 00:46:23,010
it won't be approved right and you can

00:46:20,340 --> 00:46:26,130
get into trouble it can cause problems

00:46:23,010 --> 00:46:28,020
and delays if things don't work right so

00:46:26,130 --> 00:46:29,730
there are regulations to follow so the

00:46:28,020 --> 00:46:32,280
interface is essentially those

00:46:29,730 --> 00:46:35,400
regulations telling you what is allowed

00:46:32,280 --> 00:46:37,020
for a particular type of object so if

00:46:35,400 --> 00:46:38,580
you're going to be building a house you

00:46:37,020 --> 00:46:39,630
need certain things you have your fire

00:46:38,580 --> 00:46:42,060
codes

00:46:39,630 --> 00:46:44,220
you have your you know how big doors

00:46:42,060 --> 00:46:46,860
have to be and how wide things have to

00:46:44,220 --> 00:46:49,500
be and all that stuff okay so your

00:46:46,860 --> 00:46:52,890
interface is that it's telling you the

00:46:49,500 --> 00:46:54,570
requirements so for an interface you can

00:46:52,890 --> 00:46:57,270
have multiple interfaces this is the

00:46:54,570 --> 00:47:00,810
nice thing I can know that I can have an

00:46:57,270 --> 00:47:03,540
interface that talks about a user being

00:47:00,810 --> 00:47:04,920
a developer being a person so there are

00:47:03,540 --> 00:47:06,870
certain things I need to know about a

00:47:04,920 --> 00:47:08,640
developer as a person there are also

00:47:06,870 --> 00:47:13,770
certain things that I need to know about

00:47:08,640 --> 00:47:15,450
a developer as a teammate I there may

00:47:13,770 --> 00:47:19,710
also be other things that I need to know

00:47:15,450 --> 00:47:22,230
about a developer as a citizen of a

00:47:19,710 --> 00:47:25,740
particular country so I can include

00:47:22,230 --> 00:47:28,860
interfaces with that have different

00:47:25,740 --> 00:47:34,470
requirements in each of them into one

00:47:28,860 --> 00:47:36,450
class so this so now I can make Gupta's

00:47:34,470 --> 00:47:39,590
apart so that this class might only use

00:47:36,450 --> 00:47:42,180
this interface where this class uses 3d

00:47:39,590 --> 00:47:44,280
but it gives me a way to kind of break

00:47:42,180 --> 00:47:46,890
that up a little bit and use what I need

00:47:44,280 --> 00:47:50,070
where again remember how we started we

00:47:46,890 --> 00:47:51,630
could only have one inherit down one

00:47:50,070 --> 00:47:55,440
class this now I can use as many

00:47:51,630 --> 00:47:59,340
interfaces as I want all methods are

00:47:55,440 --> 00:48:01,560
public because we're just telling them

00:47:59,340 --> 00:48:03,570
requirement so we're not inheriting

00:48:01,560 --> 00:48:05,010
anything so they actually need to

00:48:03,570 --> 00:48:07,050
implement this they need to know about

00:48:05,010 --> 00:48:10,620
it so implementing it need to know about

00:48:07,050 --> 00:48:14,670
it so it has to be public or protected

00:48:10,620 --> 00:48:16,980
can't be private put it that way and it

00:48:14,670 --> 00:48:20,160
may contain a constant that cannot be

00:48:16,980 --> 00:48:22,580
changed so let's go back in and see what

00:48:20,160 --> 00:48:22,580
this looks like

00:48:24,110 --> 00:48:39,240
so in our code we also have real we have

00:48:31,740 --> 00:48:41,910
a toolkit that's my trait sorry I have

00:48:39,240 --> 00:48:44,340
my interface there we go

00:48:41,910 --> 00:48:46,590
user interface okay here's my user

00:48:44,340 --> 00:48:49,080
interface and it says that I need to get

00:48:46,590 --> 00:48:51,690
a formatted salutation a get name a set

00:48:49,080 --> 00:48:53,010
name a get title and a set title okay

00:48:51,690 --> 00:49:08,730
what supplies

00:48:53,010 --> 00:49:11,910
to my user class implements user

00:49:08,730 --> 00:49:15,570
interface okay now let's see what my

00:49:11,910 --> 00:49:18,030
code says oh yeah it's the fatal errors

00:49:15,570 --> 00:49:29,760
can't capture them so well but it says

00:49:18,030 --> 00:49:31,080
there's a fatal error so let's see okay

00:49:29,760 --> 00:49:33,540
here we go you can see this what class

00:49:31,080 --> 00:49:36,150
must be declared abstract or implement

00:49:33,540 --> 00:49:38,400
methods get name and formatted

00:49:36,150 --> 00:49:40,859
salutation because I don't have those on

00:49:38,400 --> 00:49:43,260
here that's what it's telling me I don't

00:49:40,859 --> 00:49:56,010
have these it's not valid so I need a

00:49:43,260 --> 00:49:58,140
get name which what both oh yes there is

00:49:56,010 --> 00:50:03,480
okay I can just do it actually this I

00:49:58,140 --> 00:50:05,300
can I just click on is it f what is that

00:50:03,480 --> 00:50:09,830
what is it what you were saying if one

00:50:05,300 --> 00:50:09,830
alt enter

00:50:15,730 --> 00:50:20,800
okay there we go is our get name and get

00:50:18,520 --> 00:50:24,010
formatted salutation so I need to I

00:50:20,800 --> 00:50:35,280
actually just want to call right now I'm

00:50:24,010 --> 00:50:39,640
going to return return this.get

00:50:35,280 --> 00:50:42,130
salutation I could do more to it if I

00:50:39,640 --> 00:50:54,510
wanted to but we're not going to now and

00:50:42,130 --> 00:51:07,960
then we're going to say return this name

00:50:54,510 --> 00:51:19,290
okay now let's go back here yes we do

00:51:07,960 --> 00:51:25,210
need to require this require user user

00:51:19,290 --> 00:51:29,200
interface there we go okay there we go

00:51:25,210 --> 00:51:31,260
okay now it works and we were prevented

00:51:29,200 --> 00:51:34,119
from creating a user that didn't have

00:51:31,260 --> 00:51:37,089
the specific details that we needed to

00:51:34,119 --> 00:51:40,300
use so if I want to allow people to

00:51:37,089 --> 00:51:42,700
create instead of just inheriting a user

00:51:40,300 --> 00:51:45,730
but I wanted to them to create different

00:51:42,700 --> 00:51:50,980
user types but they need to have certain

00:51:45,730 --> 00:51:55,200
things this is how PSRs are adhere to

00:51:50,980 --> 00:51:59,650
you say here's the interface for how

00:51:55,200 --> 00:52:01,270
this PSR needs to be implemented and you

00:51:59,650 --> 00:52:03,520
can include that and you can write it

00:52:01,270 --> 00:52:05,980
any way that you need to but it needs to

00:52:03,520 --> 00:52:06,880
have these certain methods so everybody

00:52:05,980 --> 00:52:08,410
knows how it works

00:52:06,880 --> 00:52:10,240
I know that I give it certain

00:52:08,410 --> 00:52:13,200
information I expect certain information

00:52:10,240 --> 00:52:19,569
back so this is a great thing for that

00:52:13,200 --> 00:52:22,750
let's go back to here and see what else

00:52:19,569 --> 00:52:26,680
we have our abstract class okay so the

00:52:22,750 --> 00:52:29,410
difference between an abstract class and

00:52:26,680 --> 00:52:32,620
an air interface and inheritance so

00:52:29,410 --> 00:52:36,520
abstract class allows you to combine the

00:52:32,620 --> 00:52:40,050
interface and the inheritance because

00:52:36,520 --> 00:52:44,860
you can put you can tell it to have an

00:52:40,050 --> 00:52:46,780
abstract method that says that the child

00:52:44,860 --> 00:52:50,410
of this class must implement that method

00:52:46,780 --> 00:52:53,380
just like we did for our interface but

00:52:50,410 --> 00:52:56,170
we can also include a method that's

00:52:53,380 --> 00:53:00,700
already done just like we did from

00:52:56,170 --> 00:53:03,190
inheriting a class class classes

00:53:00,700 --> 00:53:05,080
extending an abstract class must

00:53:03,190 --> 00:53:06,760
implement all the abstract methods

00:53:05,080 --> 00:53:09,430
define an abstract class because they're

00:53:06,760 --> 00:53:11,620
not set up yet a method it hasn't been

00:53:09,430 --> 00:53:14,650
defined just like in the interface we

00:53:11,620 --> 00:53:16,780
didn't define how it worked so our class

00:53:14,650 --> 00:53:24,820
still needs to define how it works so

00:53:16,780 --> 00:53:29,200
let's see that okay so our abstract user

00:53:24,820 --> 00:53:32,320
here here's our abstract user and as you

00:53:29,200 --> 00:53:37,870
can see the abstract user has a get name

00:53:32,320 --> 00:53:41,590
a get title already set and then it has

00:53:37,870 --> 00:53:44,710
down below the abstract set name and

00:53:41,590 --> 00:53:47,560
abstract set title those have not been

00:53:44,710 --> 00:53:51,610
defined how they work so therefore my

00:53:47,560 --> 00:53:54,580
abstract class so that my class that

00:53:51,610 --> 00:53:57,640
implements my abstract user will need to

00:53:54,580 --> 00:54:07,230
make sure that it defines those so let's

00:53:57,640 --> 00:54:07,230
go back let's go back into user user

00:54:07,530 --> 00:54:19,740
require abstract user and month and

00:54:24,490 --> 00:54:38,320
extend just like extend fins it has to

00:54:36,740 --> 00:54:48,500
be before that's what I was thinking

00:54:38,320 --> 00:54:51,820
basically oh thank you extend abstract

00:54:48,500 --> 00:54:57,830
user and there we go

00:54:51,820 --> 00:55:03,170
okay so we're still having it title must

00:54:57,830 --> 00:55:08,890
be public okay so if we go back down

00:55:03,170 --> 00:55:13,400
here as you can see in my abstract user

00:55:08,890 --> 00:55:15,710
it's saying that my title is public so

00:55:13,400 --> 00:55:17,780
that's what it's requiring because I've

00:55:15,710 --> 00:55:21,080
made that an abstract class if I didn't

00:55:17,780 --> 00:55:25,070
want it to be I could put this in here

00:55:21,080 --> 00:55:28,790
it still works and my abstract class

00:55:25,070 --> 00:55:32,810
does not need it because I can't call my

00:55:28,790 --> 00:55:34,400
abstract class directly so I can't call

00:55:32,810 --> 00:55:36,650
an interface directly and I cannot call

00:55:34,400 --> 00:55:40,370
an abstract class directly but they can

00:55:36,650 --> 00:55:42,710
be used to help me know how a specific

00:55:40,370 --> 00:55:45,170
class or type of classes has to be

00:55:42,710 --> 00:55:56,140
implemented does that make sense for

00:55:45,170 --> 00:55:57,640
people yes okay let's go back here and

00:55:56,140 --> 00:56:02,150
[Music]

00:55:57,640 --> 00:56:04,730
now we do this out live demo trace trace

00:56:02,150 --> 00:56:06,800
okay I'm going to touch on this I'm not

00:56:04,730 --> 00:56:08,930
going to do this too much because people

00:56:06,800 --> 00:56:10,790
don't like me to do this because people

00:56:08,930 --> 00:56:15,920
get really nervous about using traits

00:56:10,790 --> 00:56:18,320
because free have this great feature of

00:56:15,920 --> 00:56:21,350
being able to include any traits you

00:56:18,320 --> 00:56:24,080
want all over the place anytime and all

00:56:21,350 --> 00:56:25,910
it's just like includes how many of you

00:56:24,080 --> 00:56:28,010
have found includes all over the place

00:56:25,910 --> 00:56:29,900
and made it really hard to track stuff

00:56:28,010 --> 00:56:31,550
down it's just including something here

00:56:29,900 --> 00:56:35,270
and something there okay so basically

00:56:31,550 --> 00:56:36,260
what a trait is is it allows you to use

00:56:35,270 --> 00:56:38,590
this trait

00:56:36,260 --> 00:56:43,750
here and it's as if I wrote that code

00:56:38,590 --> 00:56:48,080
right here every time super powerful and

00:56:43,750 --> 00:56:49,850
can be super dangerous so it allows you

00:56:48,080 --> 00:56:51,860
to share code like this and you can

00:56:49,850 --> 00:56:54,170
share it as many times as you want you

00:56:51,860 --> 00:56:55,970
can put it in it doesn't have to be once

00:56:54,170 --> 00:56:58,610
multiple traits can be used they can put

00:56:55,970 --> 00:57:00,110
it in anywhere I want all the time use

00:56:58,610 --> 00:57:03,920
it all over the place this can be great

00:57:00,110 --> 00:57:05,660
it can also be very dangerous so let me

00:57:03,920 --> 00:57:11,240
just show you what this would look like

00:57:05,660 --> 00:57:12,140
really quick okay really good at that

00:57:11,240 --> 00:57:16,010
let's see

00:57:12,140 --> 00:57:19,370
so we have our trait our tool kit here

00:57:16,010 --> 00:57:22,730
and here's our trait it looks a lot like

00:57:19,370 --> 00:57:25,310
a class it has information here just

00:57:22,730 --> 00:57:27,050
like just like a class did gives us all

00:57:25,310 --> 00:57:30,320
this information it's like being able to

00:57:27,050 --> 00:57:32,390
add all of that to our code everything

00:57:30,320 --> 00:57:35,180
that's within that trait is going to get

00:57:32,390 --> 00:57:44,000
so this private tools and all these

00:57:35,180 --> 00:57:46,540
functions so now if we do know yep okay

00:57:44,000 --> 00:57:46,540
so

00:57:54,260 --> 00:58:08,000
toolkit okay and then right here we'll

00:57:59,990 --> 00:58:09,109
just put youth toolkit and I think

00:58:08,000 --> 00:58:14,510
that's started with the capital letter

00:58:09,109 --> 00:58:19,820
didn't it there we go let's so use

00:58:14,510 --> 00:58:23,390
toolkit now if we saw in our toolkit we

00:58:19,820 --> 00:58:25,579
are able to set tools and we were I and

00:58:23,390 --> 00:58:30,910
if we pass it eat it's going to add all

00:58:25,579 --> 00:58:37,960
of these tools so let's go here and

00:58:30,910 --> 00:58:37,960
we're going to let James do it so James

00:58:38,140 --> 00:58:46,490
set tools that tools and we want him to

00:58:43,700 --> 00:58:54,619
be able to eat because James likes to

00:58:46,490 --> 00:59:05,060
eat okay so now we can do echo James get

00:58:54,619 --> 00:59:07,300
tools is right there ah okay tools there

00:59:05,060 --> 00:59:07,300
we go

00:59:07,420 --> 00:59:20,720
all ready to string conversion let my

00:59:14,569 --> 00:59:30,589
get show tools is my toolkit it is show

00:59:20,720 --> 00:59:35,420
tools yep okay index show tools all

00:59:30,589 --> 00:59:38,380
right now there we go yeah as a spoon of

00:59:35,420 --> 00:59:41,240
fork and a knife okay so that's how

00:59:38,380 --> 00:59:43,339
traits work and you can use as many as

00:59:41,240 --> 00:59:47,270
you want all over the place and make

00:59:43,339 --> 00:59:49,790
your um your code really fun to try to

00:59:47,270 --> 00:59:52,579
track things down so but it actually is

00:59:49,790 --> 00:59:54,650
useful when you need to be able to store

00:59:52,579 --> 00:59:56,420
maybe you do need to have a small chunks

00:59:54,650 --> 00:59:58,400
of code that need to be used over and

00:59:56,420 --> 01:00:00,230
over again in different places okay well

00:59:58,400 --> 01:00:03,920
I could write it over and over again in

01:00:00,230 --> 01:00:05,180
different places but sometimes that's

01:00:03,920 --> 01:00:07,550
the only way you need to be able to

01:00:05,180 --> 01:00:10,230
share it okay so for instance

01:00:07,550 --> 01:00:12,300
humans they need to use tools there are

01:00:10,230 --> 01:00:14,090
other mammals that use tools as well so

01:00:12,300 --> 01:00:20,640
we need to have those same things in

01:00:14,090 --> 01:00:22,320
here and I know my time is over so I'm

01:00:20,640 --> 01:00:23,730
just going to show you what the extra

01:00:22,320 --> 01:00:26,460
features are I told you we probably

01:00:23,730 --> 01:00:28,110
wouldn't get to this anyway so the added

01:00:26,460 --> 01:00:33,330
features that this allows us to do now

01:00:28,110 --> 01:00:36,060
that we know how abstract encapsulation

01:00:33,330 --> 01:00:39,000
polymorphism what these big words mean

01:00:36,060 --> 01:00:40,710
and why we are using object-oriented

01:00:39,000 --> 01:00:45,060
code now we have extra features that

01:00:40,710 --> 01:00:47,610
help us to make this more easy to work

01:00:45,060 --> 01:00:50,940
with other developers these are things

01:00:47,610 --> 01:00:54,110
such as magic methods these the magic

01:00:50,940 --> 01:00:57,330
part of magic methods is that they are

01:00:54,110 --> 01:01:00,150
called by an action not by when

01:00:57,330 --> 01:01:02,490
something happens that triggers them not

01:01:00,150 --> 01:01:06,200
by being called specifically they're

01:01:02,490 --> 01:01:08,220
triggered not called magic constants are

01:01:06,200 --> 01:01:11,100
something that PHP already knows about

01:01:08,220 --> 01:01:12,750
you don't have to set you can create

01:01:11,100 --> 01:01:15,510
static methods which means you can

01:01:12,750 --> 01:01:19,140
access a method on a class without

01:01:15,510 --> 01:01:21,900
having to create a class object you name

01:01:19,140 --> 01:01:24,870
spaces so that when you have two classes

01:01:21,900 --> 01:01:26,580
called user you can still call them

01:01:24,870 --> 01:01:29,010
separately just like when you have two

01:01:26,580 --> 01:01:34,010
people called James you have a way to

01:01:29,010 --> 01:01:36,930
distinguish those users those people and

01:01:34,010 --> 01:01:38,730
we have type declarations which is I

01:01:36,930 --> 01:01:42,620
showed you briefly what it looked like I

01:01:38,730 --> 01:01:45,300
told in seven has a lot more than five

01:01:42,620 --> 01:01:47,480
as far as type declarations go but it

01:01:45,300 --> 01:01:51,150
tells you gives you a little bit more

01:01:47,480 --> 01:01:53,130
ability to share what comes in and what

01:01:51,150 --> 01:01:55,290
comes out because that's what the users

01:01:53,130 --> 01:01:57,870
of your class needs to need to know what

01:01:55,290 --> 01:02:00,150
comes in and what comes up so this

01:01:57,870 --> 01:02:03,150
information is all here for you I've

01:02:00,150 --> 01:02:07,140
added this so that when you get my

01:02:03,150 --> 01:02:08,880
slides you'll all have this here and I

01:02:07,140 --> 01:02:10,230
also have t-shirts up here so if you

01:02:08,880 --> 01:02:12,420
want to come and talk to me and get a

01:02:10,230 --> 01:02:14,130
t-shirt you are welcome to come and talk

01:02:12,420 --> 01:02:16,020
to me and get a teacher or bag so if you

01:02:14,130 --> 01:02:16,410
I run out of the shirt in your size that

01:02:16,020 --> 01:02:19,740
you like

01:02:16,410 --> 01:02:20,590
you can come and get that too here's

01:02:19,740 --> 01:02:22,240
some

01:02:20,590 --> 01:02:25,450
resources if you would like to learn

01:02:22,240 --> 01:02:27,430
some more I found these very useful

01:02:25,450 --> 01:02:31,090
again my slides will be shared so

01:02:27,430 --> 01:02:32,890
they'll be here for you and here's this

01:02:31,090 --> 01:02:35,440
is me this is how you can get a hold of

01:02:32,890 --> 01:02:37,900
me please rate the talk give me ideas

01:02:35,440 --> 01:02:40,390
what you liked what you didn't like how

01:02:37,900 --> 01:02:42,490
I can improve I like to be able to share

01:02:40,390 --> 01:02:43,990
this what's something that if there's

01:02:42,490 --> 01:02:48,550
something that you said oh this finally

01:02:43,990 --> 01:02:51,460
made sense like this or this part really

01:02:48,550 --> 01:02:52,780
just was more confusing let me know you

01:02:51,460 --> 01:02:54,610
can have some code examples I'll

01:02:52,780 --> 01:02:58,360
actually put up just what we did here as

01:02:54,610 --> 01:03:01,360
well on the github repository so you can

01:02:58,360 --> 01:03:03,910
see exactly what we did here so once I

01:03:01,360 --> 01:03:05,980
tweet out my slide that will be there

01:03:03,910 --> 01:03:09,120
for you as well so there you go

01:03:05,980 --> 01:03:09,120
goodbye say hello

01:03:11,170 --> 01:03:13,829

YouTube URL: https://www.youtube.com/watch?v=nyQYvSZM0tM


