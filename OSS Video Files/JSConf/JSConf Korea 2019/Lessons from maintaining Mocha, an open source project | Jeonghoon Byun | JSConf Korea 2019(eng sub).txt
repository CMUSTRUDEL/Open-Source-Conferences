Title: Lessons from maintaining Mocha, an open source project | Jeonghoon Byun | JSConf Korea 2019(eng sub)
Publication date: 2019-10-01
Playlist: JSConf Korea 2019
Description: 
	I learned a lot running a personal open source project and occasionally contributing to other ones. I learned even more maintaining a popular open source project used by many users across the globe. In this talk, I'd like to share with you the challenges I faced and the lessons I learned working on Mocha as a maintainer over the past year. I'll also talk about how maintainers of big open source projects manage them and collaborate with each other.
Captions: 
	00:00:08,029 --> 00:00:14,800
I have been participating and maintaining in an open source project, Mocha

00:00:15,031 --> 00:00:17,916
and I'm here to share some of the things I've learned.

00:00:19,196 --> 00:00:22,000
I think you all roughly know about Mocha

00:00:22,001 --> 00:00:24,166
To briefly explain about Mocha,

00:00:24,167 --> 00:00:26,600
Mocha is a Javascript test frame work

00:00:26,601 --> 00:00:31,518
It's a framework that can be used on both Node.js and web browser.

00:00:31,565 --> 00:00:35,899
It's been out for a while now, so it was developed with the early Node.

00:00:35,900 --> 00:00:39,500
It's a project that grew with Node ecology.

00:00:40,934 --> 00:00:43,221
This is the State of JavaScript,

00:00:43,222 --> 00:00:46,743
a website that surveys about the ecosystem of Javascript every year.

00:00:46,744 --> 00:00:50,268
Last year, Jest was used the most

00:00:50,269 --> 00:00:52,646
and Mocha was second place.

00:00:52,657 --> 00:00:55,500
In my memory, before then, Mocha was used the most

00:00:55,600 --> 00:00:58,629
but Jest arose to the top last year.

00:00:58,800 --> 00:01:02,300
Seen from the back, the colors may not be distinguishable.

00:01:02,301 --> 00:01:04,498
Red is 'Have used

00:01:04,500 --> 00:01:06,500
and is willing to use in the future.'

00:01:06,600 --> 00:01:10,977
Blue is 'Have heard of it and is willing to try it in the future.'

00:01:11,085 --> 00:01:13,390
Grey is 'Never heard of it.'

00:01:13,610 --> 00:01:15,500
It's distinguished like that.

00:01:16,050 --> 00:01:19,737
When I checked on the weekends,

00:01:20,110 --> 00:01:23,682
Based on GitHub, about 870,000 projects were used.

00:01:25,137 --> 00:01:28,979
There are about 18,000 stars recorded.

00:01:29,000 --> 00:01:32,275
To start my talk,

00:01:32,316 --> 00:01:36,500
I think I should talk about how I joined as a maintainer.

00:01:36,600 --> 00:01:38,900
I think a lot of you would be curious about that.

00:01:39,824 --> 00:01:42,800
It was last year, March 6th.

00:01:42,900 --> 00:01:45,900
On March 6th, I first joined the Mocha organization

00:01:46,000 --> 00:01:48,500
I got a call from the lead maintainer.

00:01:48,600 --> 00:01:50,800
The maintainer called me to work together and I agreed.

00:01:50,900 --> 00:01:53,377
When I joined,

00:01:54,290 --> 00:01:58,499
This is the 2017s and the early 2018s, when I first went in,

00:01:58,500 --> 00:02:00,200
this was my GitHub contribution graph.

00:02:00,300 --> 00:02:05,626
As you can see, from January of 2018 and onwards, the contribution is completely different.

00:02:05,647 --> 00:02:08,839
I was working hard on gardening.

00:02:09,425 --> 00:02:13,521
The reason why I could do this is because I resigned at the end of 2017.

00:02:13,600 --> 00:02:19,576
I resigned at the end of the year and it was hard to transfer companies at the end or the beginning of the year.

00:02:19,596 --> 00:02:23,014
No one was recruiting, so I was thinking of taking some time off work for 2~3 months.

00:02:23,363 --> 00:02:26,806
But I couldn't waste 2~3 months.

00:02:27,001 --> 00:02:29,759
So I studied and did other things but

00:02:30,018 --> 00:02:35,217
I wanted to contribute to open source

00:02:35,740 --> 00:02:37,900
So that is how the graph I just showed you was made.

00:02:38,295 --> 00:02:44,183
So, I was searching for issues on projects I was using, which includes Mocha,

00:02:44,305 --> 00:02:47,366
I had been using Mocha for a long time and Mocha was one of the subjects.

00:02:48,716 --> 00:02:52,854
Of course, before this, I was uploading PRs from time to time.

00:02:52,855 --> 00:02:55,110
So before I joined,

00:02:55,542 --> 00:02:58,000
from 2011 to 2018,

00:02:58,001 --> 00:03:02,309
I contributed seven commits to Mocha.

00:03:02,310 --> 00:03:04,878
And among them, five were done between January and February.

00:03:04,879 --> 00:03:07,426
Before that, I did simple ones.

00:03:07,500 --> 00:03:10,428
I made five commits in January to February and uploaded my PR.

00:03:11,750 --> 00:03:16,755
And I joined after getting a call, and when I got in,

00:03:16,756 --> 00:03:23,996
it was the time they increased the number of maintainers, I think.

00:03:24,372 --> 00:03:27,875
That's something hard to know from the outside. Getting inside and looking at the projects,

00:03:27,900 --> 00:03:31,300
I feel that that was the period, and working together,

00:03:32,400 --> 00:03:36,500
Mocha is a community based, open source project

00:03:36,505 --> 00:03:38,980
When I say it's based on community,

00:03:39,314 --> 00:03:42,890
I mean we don't have a full time maintainer

00:03:42,891 --> 00:03:45,000
We all have our own jobs and schedules.

00:03:45,100 --> 00:03:49,570
The majority of people maintain Mocha after getting off work.

00:03:49,737 --> 00:03:53,600
For a vendor supported project, like React

00:03:53,897 --> 00:03:57,500
In this case, Facebook gives them lots of money

00:03:57,617 --> 00:04:00,729
and hires full-time developers.

00:04:01,178 --> 00:04:03,689
So I think the process would differ.

00:04:03,690 --> 00:04:05,499
I haven't participated in that kind of thing myself.

00:04:06,500 --> 00:04:11,072
And of course, just because it's community based,

00:04:11,073 --> 00:04:13,697
doesn't mean there isn't a full-time open source developer.

00:04:13,697 --> 00:04:16,000
I was just talking about Mocha's situation.

00:04:16,100 --> 00:04:18,300
Namely, Babel, for example,

00:04:18,380 --> 00:04:21,200
Henry is the full-time lead maintainer.

00:04:21,457 --> 00:04:22,591
So open source development.

00:04:24,134 --> 00:04:25,624
is usually done like this.

00:04:25,704 --> 00:04:29,546
I said I made about five commits in a short time, during January and February.

00:04:29,547 --> 00:04:31,199
I uploaded five PRs.

00:04:31,944 --> 00:04:36,081
But working within a short time, becoming an insider and seeing the PRs,

00:04:36,082 --> 00:04:38,140
you start to notice some people that come around often.

00:04:38,376 --> 00:04:41,700
There are too many people who come once or twice.

00:04:41,701 --> 00:04:44,257
So they aren't that memorable.

00:04:44,376 --> 00:04:48,706
But people who come 3,4 or 4,5 times in a short time,

00:04:48,707 --> 00:04:52,222
or who leave comments through PR are memorable.

00:04:52,400 --> 00:04:55,806
And when the company is at a time to hire more maintainers,

00:04:55,967 --> 00:05:00,278
we call those people, give out offers and they join us.

00:05:00,319 --> 00:05:03,236
There were about two people who joined like that after me.

00:05:04,154 --> 00:05:06,200
Since it's community based,

00:05:06,355 --> 00:05:09,936
The members aren't fixed. There are about 10 people in our core team.

00:05:10,347 --> 00:05:14,100
I've never met about 3 or 4 of them.

00:05:14,101 --> 00:05:15,681
I haven't ever seen them since I joined.

00:05:15,956 --> 00:05:20,507
There are people who were active last year but aren't as present this year.

00:05:20,663 --> 00:05:21,971
That's kind of how it works.

00:05:21,972 --> 00:05:24,800
And if the number of core members seems to reduce,

00:05:24,900 --> 00:05:27,700
and if someone seems to be working more actively,

00:05:27,800 --> 00:05:32,276
we call that person to join. That's how stuff runs.

00:05:33,797 --> 00:05:36,614
So when I first joined, I had big dreams.

00:05:36,615 --> 00:05:41,258
Unlike before, when I uploaded GitHub as a individual side project,

00:05:41,259 --> 00:05:44,559
This is a projects that everyone knows.

00:05:44,560 --> 00:05:46,853
And there are skilled developers.

00:05:46,853 --> 00:05:48,660
Working with these people,

00:05:48,701 --> 00:05:50,972
how much would I learn from them? Or what would I be able to do?

00:05:50,973 --> 00:05:53,393
I fantasized about these questions.

00:05:53,946 --> 00:05:56,949
Then a year has passed now. About a year and a half passed.

00:05:57,344 --> 00:06:00,846
The thing that struck me the most is that maintainers are busy. They are so busy.

00:06:01,085 --> 00:06:02,600
There is too much work for the maintainers.

00:06:03,716 --> 00:06:06,099
I worked on open source projects before.

00:06:06,100 --> 00:06:08,500
My side project became an open source project

00:06:08,501 --> 00:06:12,248
and I got PRs and issues.

00:06:12,300 --> 00:06:16,487
I talked with people and had that experience for several years.

00:06:16,680 --> 00:06:20,095
So I thought I knew how this all works.

00:06:20,683 --> 00:06:23,047
So last year, in the ecosystem of open source,

00:06:23,162 --> 00:06:27,829
as a member of that ecosystem, I made a presentation on what developers must do

00:06:27,830 --> 00:06:30,030
elsewhere.

00:06:30,031 --> 00:06:34,515
At the time, of course, I talked about how busy maintainers are.

00:06:34,753 --> 00:06:36,595
But after actually experiencing the life myself, I realize that's it's way more hectic.

00:06:36,596 --> 00:06:43,200
It's too busy. I get the feeling that I really have to pay attention and focus on working on open source

00:06:44,212 --> 00:06:48,033
So, looking at one example, there's a notification function on Github.

00:06:48,133 --> 00:06:50,580
So, Github notifications will keep coming to me.

00:06:50,581 --> 00:06:53,573
I don't know if you can see well from the back.

00:06:53,574 --> 00:06:56,532
In the case of Mocha, I get about 2~3 each day.

00:06:56,533 --> 00:06:58,571
When theres a lot, 4 or 5.

00:06:59,576 --> 00:07:02,918
Mocha is not that big of a project, so it doesn't get that many.

00:07:03,015 --> 00:07:09,292
If you're curious about really large projects, watch React or Node,

00:07:09,377 --> 00:07:13,037
you will be able to see how many notifications are sent each day.

00:07:13,641 --> 00:07:15,333
Mocha is not at that level.

00:07:15,433 --> 00:07:21,686
These notifications come, 2 or 3 per day. If I take a break for a day or two or eat out,

00:07:21,807 --> 00:07:24,884
then I'll miss the notifications and they will pile up.

00:07:25,499 --> 00:07:29,300
It will pile up everyday, and I will have to take a look at all of them after work.

00:07:29,500 --> 00:07:32,918
So, at the end of the day I think I should work on Mocha, and go in and press the notifications.

00:07:32,919 --> 00:07:36,033
These are some stuff, it's just an example.

00:07:37,377 --> 00:07:38,813
And I will go through them.

00:07:38,893 --> 00:07:43,921
What problem this person has, why she raised this issue, and what she's saying,

00:07:43,922 --> 00:07:46,932
How the code example is constructed, what the difficulty is,

00:07:46,933 --> 00:07:50,539
I try to identify all the details, and then start to label them.

00:07:50,757 --> 00:07:55,354
I do the labeling, and the reason for labeling is for other people, other maintainers,

00:07:55,355 --> 00:07:58,331
or other people who contribute to Mocha

00:07:58,354 --> 00:08:01,415
to better identify what the issue is.

00:08:01,476 --> 00:08:04,796
Labeling involves categorizing, if the case is

00:08:04,947 --> 00:08:06,830
a browser issue, or a node issue,

00:08:06,831 --> 00:08:11,149
or it can be more detailed,

00:08:11,150 --> 00:08:15,188
such as whether it needed additional information, if it confirmed a bug, and so on.

00:08:16,111 --> 00:08:19,533
And for those issues that can be resolved, I leave comments.

00:08:19,533 --> 00:08:20,933
For issues that I have an opinion on, I leave comments.

00:08:20,935 --> 00:08:26,271
For this case, displayed here on the screen, I left a comment and closed the issue.

00:08:26,672 --> 00:08:29,759
In this case, the person who raised the issue

00:08:31,896 --> 00:08:35,361
wasn't familiar with Node, and thus was not aware of the appropriate usage method.

00:08:35,363 --> 00:08:40,508
So he uploaded it as a Mocha issue, but it turned out that he was using Node incorrectly

00:08:41,293 --> 00:08:47,109
The comment here is just one sentence, and a single line of code,

00:08:47,329 --> 00:08:50,872
but when I upload this, I have to read the whole post

00:08:51,244 --> 00:08:55,198
and then find out what the problem is from the example codes and stuff,

00:08:55,199 --> 00:08:57,915
so I have to try and figure out the answer myself in order to post it.

00:08:57,995 --> 00:09:00,332
I can answer really simple ones right away,

00:09:00,333 --> 00:09:02,333
but for most of the posts, I have to execute and try them myself at least.

00:09:02,433 --> 00:09:06,232
Also, because Mocha is a test framework, some people would run tests called Karma,

00:09:06,233 --> 00:09:09,433
and others would use Babel or Webpack, which may get the system tangled up.

00:09:09,434 --> 00:09:12,332
If things like those come up, I have to run various tests.

00:09:13,016 --> 00:09:15,901
Then, it would take about 20~30 minutes minimum to look into a single issue.

00:09:15,902 --> 00:09:18,633
It may take up to 1 or 2 hours, if it takes longer.

00:09:21,220 --> 00:09:26,346
So, in order to save time, if maintainers don't have enough information,

00:09:26,347 --> 00:09:28,833
they request MCVE.

00:09:28,833 --> 00:09:31,033
Or they request additional information.

00:09:32,167 --> 00:09:34,132
We cannot actually test every single thing.

00:09:34,133 --> 00:09:37,533
I try to imagine what I need, and if I think something is lacking, I would request it.

00:09:37,534 --> 00:09:39,833
What MCVE is,

00:09:39,933 --> 00:09:42,433
there's a guide document for Stack Overflow.

00:09:42,533 --> 00:09:46,233
An example which has a certain degree of completeness and is verifiable is called

00:09:46,234 --> 00:09:47,341
MCVE.

00:09:48,384 --> 00:09:50,684
When people ask questions, or raise issues, it's all the same thing.

00:09:50,801 --> 00:09:54,098
Companies' codes are massive. Various code are intertwined.

00:09:54,099 --> 00:09:59,161
So if we provide an example which can, at minimum, completely control the problem,

00:09:59,400 --> 00:10:02,124
maintainers would know by executing it right after downloading it.

00:10:02,280 --> 00:10:07,171
Most of the times, if that much information is provided, they would probably know without downloading it.

00:10:07,185 --> 00:10:08,833
It can really save some time.

00:10:09,997 --> 00:10:12,262
And from the list of notifications,

00:10:12,263 --> 00:10:15,295
if it's a PR case, I have to conduct code review.

00:10:15,296 --> 00:10:18,217
Often, code reviews have issues. So, I look at the history of

00:10:18,218 --> 00:10:20,956
issues, and identify what the original issues were.

00:10:21,009 --> 00:10:23,914
I look at the contents of the discussion, and come back to the PR.

00:10:23,915 --> 00:10:26,135
From the PR pull request,

00:10:27,117 --> 00:10:29,617
I read to find out what the person intended to edit,

00:10:29,618 --> 00:10:32,314
look at it along with the code, and provide an opinion.

00:10:32,433 --> 00:10:36,376
Whether I agree, if something is incorrect, or if something is missing, etc.

00:10:36,561 --> 00:10:40,133
I'm not just a person who writes comments, so I have to write code as well.

00:10:40,449 --> 00:10:41,637
I have to write my code as well.

00:10:42,777 --> 00:10:47,279
This is the most time consuming. Because I have to look for an issue, and resolve it.

00:10:48,092 --> 00:10:50,967
Contributors also have discussions among themselves.

00:10:51,067 --> 00:10:53,951
If there's an issue not being allocated, or road map meetings, and so on.

00:10:53,952 --> 00:10:58,363
We discuss through chats about releases, or other questions we may have.

00:10:58,706 --> 00:11:00,989
This happens on a daily, weekly basis.

00:11:01,282 --> 00:11:05,351
In my opinion, I would have to spend 2 to 3 hours a day after work

00:11:05,433 --> 00:11:08,533
in order to keep up with the pace.

00:11:08,633 --> 00:11:11,779
If I miss a day, then I would have more burden later on.

00:11:14,075 --> 00:11:20,563
So actually, this may be an answer to the question 'Why doesn't my PR get merged?'

00:11:20,564 --> 00:11:22,855
'Why doesn't anyone answer my issue?'

00:11:23,689 --> 00:11:26,909
'Why is nobody interested?' It's just that everyone is so busy

00:11:26,910 --> 00:11:28,008
that not all issues can be looked at.

00:11:28,456 --> 00:11:30,632
Not only that maintainers don't have the obligation to look at all issues,

00:11:30,633 --> 00:11:33,245
but they just can't. And if they miss a notification once,

00:11:33,246 --> 00:11:34,697
then it's just gone for good.

00:11:36,548 --> 00:11:41,221
Also, looking more closely, maintainers don't just have one of these projects.

00:11:41,222 --> 00:11:43,612
A Mocha maintainer is not just a maintainer for Mocha.

00:11:43,633 --> 00:11:47,377
There are many projects like Mocha. They may have a side project of their own, aside from their day job.

00:11:47,690 --> 00:11:51,032
They have really little time for a single project, among all different duties.

00:11:51,932 --> 00:11:54,977
So, most of the maintainers' activities are

00:11:55,116 --> 00:11:58,159
designed so that the maintainer can actually continue work for a long time.

00:11:58,550 --> 00:12:03,346
The top priority is focused on operation and management.

00:12:03,504 --> 00:12:07,241
But, another big consideration is to avoid burnout for maintainers,

00:12:07,257 --> 00:12:09,547
and enable them to continue as maintainers for a prolonged period of time.

00:12:09,804 --> 00:12:14,171
So, a lot of efforts are made to avoid giving and receiving pressure regarding the timeline.

00:12:14,273 --> 00:12:18,124
Of course, calls are made to core teams to ask them to

00:12:18,279 --> 00:12:20,462
look at this thing, review this, provide opinion, etc.

00:12:20,539 --> 00:12:23,033
But there's no blame for not doing it,

00:12:23,133 --> 00:12:26,560
and mostly they work on their own schedule.

00:12:26,561 --> 00:12:29,548
When they get the chance, they would just look at it a bit more.

00:12:29,549 --> 00:12:31,433
That's how the system works at the moment.

00:12:32,180 --> 00:12:35,198
Because it's not something that would end in a month or two.

00:12:35,218 --> 00:12:38,033
It's not like something amazing would be made

00:12:38,034 --> 00:12:40,296
after a sudden, short crunch period.

00:12:40,958 --> 00:12:44,363
Everyone works based on their own life pattern,

00:12:44,405 --> 00:12:47,775
and if their interests in Mocha goes away,

00:12:47,776 --> 00:12:51,857
they would quit and new people would come in. That's because it's open source.

00:12:53,298 --> 00:12:57,271
And of course, there are impolite people in the community.

00:12:57,271 --> 00:13:00,330
We give warnings to those people.

00:13:00,419 --> 00:13:05,508
There weren't that many instances, but when there's someone rude,

00:13:05,509 --> 00:13:08,636
maintainers would talk about it.

00:13:08,967 --> 00:13:12,800
So to summarize,

00:13:12,800 --> 00:13:15,834
we understand that you're in trouble due to an absence of a certain function.

00:13:16,162 --> 00:13:20,076
But after all, everyone in this project is only volunteering. So please be polite, and avoid rude comments or requests.

00:13:20,096 --> 00:13:20,877
we ask

00:13:20,878 --> 00:13:22,498
not to be impolite,

00:13:22,499 --> 00:13:23,240
or maybe

00:13:23,241 --> 00:13:24,251
make unrealistic demands, we warn against those behaviors.

00:13:25,154 --> 00:13:28,091
That's how we do our work, with such guidelines.

00:13:28,736 --> 00:13:31,750
Also, as we maintain the project,

00:13:31,971 --> 00:13:32,627
it's pretty much

00:13:32,752 --> 00:13:34,256
connected what I said previously,

00:13:34,257 --> 00:13:36,189
which is that it's very important to feel relaxed.

00:13:36,189 --> 00:13:37,285
I think it's very important

00:13:37,459 --> 00:13:38,963
to practice staying relaxed,

00:13:38,964 --> 00:13:40,799
and you have to train yourself

00:13:40,800 --> 00:13:42,036
to escape feelings of pressure.

00:13:43,279 --> 00:13:44,217
I too experienced

00:13:44,218 --> 00:13:46,736
such problems for the first time when I worked on an individual project.

00:13:46,737 --> 00:13:47,869
I felt very pressured.

00:13:47,870 --> 00:13:48,417
Because,

00:13:48,435 --> 00:13:49,873
I thought I'd made some kind of a mistake,

00:13:50,154 --> 00:13:53,391
and that fear of clients leaving pressured me to fix the problems as fast as I could.

00:13:53,611 --> 00:13:55,857
I thought I was a bit more trained for such situations,

00:13:55,858 --> 00:13:57,127
and I'm better now.

00:13:57,244 --> 00:13:57,830
But,

00:13:58,101 --> 00:13:58,720
then,

00:13:59,568 --> 00:14:01,228
Quite a lot of users

00:14:01,229 --> 00:14:02,693
watch such programs like Mocha

00:14:02,694 --> 00:14:04,719
and that was very hard on me at the time,

00:14:04,803 --> 00:14:06,248
and after about a year

00:14:06,249 --> 00:14:07,144
now I feel a bit better

00:14:07,145 --> 00:14:08,025
although not perfectly,

00:14:08,026 --> 00:14:09,862
I do think I'm feeling a lot better.

00:14:11,189 --> 00:14:12,987
Therefore, open source is for

00:14:13,494 --> 00:14:15,782
those people who feel the urgency and necessity themselves

00:14:15,783 --> 00:14:17,011
to upload the code.

00:14:17,400 --> 00:14:18,162
It's not obligated

00:14:18,163 --> 00:14:21,114
for the maintainers or contributors to fix them when asked,

00:14:21,346 --> 00:14:22,635
If any individual feels that this is urgent,

00:14:22,636 --> 00:14:23,357
this is so urgent for me,

00:14:23,358 --> 00:14:25,142
than you upload the code

00:14:25,271 --> 00:14:28,133
and persuade for us to apply that code.

00:14:28,357 --> 00:14:30,865
This is not such a relation where

00:14:31,189 --> 00:14:32,361
the maintainers have to figure it out

00:14:32,362 --> 00:14:33,996
because they owe you something.

00:14:35,467 --> 00:14:38,670
This is why there is an option called the bail option in Mocha

00:14:38,671 --> 00:14:40,065
I put this in in the beginning,

00:14:40,310 --> 00:14:40,968
now

00:14:41,737 --> 00:14:44,035
this is one of the options, I mean PR

00:14:44,295 --> 00:14:45,311
that came to existence after I became a maintainer,

00:14:46,112 --> 00:14:48,767
and after six months, it was backed out.

00:14:49,375 --> 00:14:52,708
It was debated after other issues and side effects

00:14:52,928 --> 00:14:55,024
that this was a 'Completely wrong PR'

00:14:55,037 --> 00:14:55,779
'get it backed out'

00:14:55,916 --> 00:14:56,463
that was the verdict.

00:14:56,464 --> 00:14:58,221
There was a lot more discussion down below,

00:14:58,222 --> 00:14:59,421
and then we ultimately deleted it.

00:14:59,627 --> 00:15:00,912
We backed out.

00:15:01,248 --> 00:15:03,181
Another incident like this happened to me.

00:15:03,181 --> 00:15:04,003
There was another one like this,

00:15:04,041 --> 00:15:04,915
which made me discouraged.

00:15:04,978 --> 00:15:07,967
Because every time I uploaded a PR in Mocha,

00:15:07,968 --> 00:15:09,295
it got backed out,

00:15:09,666 --> 00:15:10,799
and that just made me intimidated.

00:15:10,800 --> 00:15:11,505
Intimidated and,

00:15:11,506 --> 00:15:13,639
I think I'm still a little intimidated right now.

00:15:16,033 --> 00:15:16,912
And because of that

00:15:16,990 --> 00:15:17,958
I think

00:15:18,338 --> 00:15:20,994
it made me take care of more minor stuffs.

00:15:20,995 --> 00:15:24,033
This is because I don't have full understanding of the core code,

00:15:24,999 --> 00:15:26,936
and the legacy code is big because it's been there for a long time.

00:15:27,947 --> 00:15:29,011
I can't understand it fully,

00:15:29,041 --> 00:15:31,179
so it made me scared to do it,

00:15:31,228 --> 00:15:31,736
there's that problem,

00:15:31,737 --> 00:15:33,587
but I'm trying to increase little by little.

00:15:33,943 --> 00:15:35,857
And the reason why such problem took place was,

00:15:35,858 --> 00:15:37,684
I've never used other things other than the ones I've always used.

00:15:37,713 --> 00:15:38,792
I've been using Mocha for a long time,

00:15:38,806 --> 00:15:40,330
and have been doing tests on Mocha,

00:15:40,331 --> 00:15:41,673
but I only use

00:15:41,775 --> 00:15:43,279
just the pattern I always use,

00:15:43,279 --> 00:15:44,021
my go-to set,

00:15:44,022 --> 00:15:45,061
I only use that,

00:15:45,115 --> 00:15:47,235
I don't use all the different options, different options every month.

00:15:47,596 --> 00:15:48,767
Even in the case of Mocha right now,

00:15:48,768 --> 00:15:49,873
there are so many options,

00:15:49,920 --> 00:15:51,720
and we use these codes by mixing them,

00:15:51,853 --> 00:15:54,185
but for me, other than the codes I use, I don't know the other ones.

00:15:54,186 --> 00:15:58,145
To be honest, there are some options that I didn't know existed before I became a maintainer.

00:15:59,444 --> 00:16:00,916
Since we can't use all of them,

00:16:00,917 --> 00:16:02,544
I just contribute what I can.

00:16:02,869 --> 00:16:05,389
What is the thing that I can do better than others?

00:16:06,443 --> 00:16:07,185
The small things

00:16:07,186 --> 00:16:09,177
like looking over the homepage

00:16:09,178 --> 00:16:11,619
or taking care of things that catch my eye, little by little

00:16:11,620 --> 00:16:13,779
since those things also take some time to finish.

00:16:13,846 --> 00:16:15,347
I just mainly do those things

00:16:15,467 --> 00:16:17,107
and I try to keep up by working on the core in my own time

00:16:17,108 --> 00:16:19,086
and studying little by little.

00:16:20,705 --> 00:16:22,908
And the other thing that was impressive was,

00:16:22,908 --> 00:16:24,978
the competition in open source is very fierce.

00:16:24,979 --> 00:16:26,011
Although I say I like open source,

00:16:26,521 --> 00:16:28,240
I think I just seem to have

00:16:29,020 --> 00:16:30,955
somewhat accepted

00:16:30,960 --> 00:16:33,560
that competitive culture of the system,

00:16:33,720 --> 00:16:34,340
fighting for 'What the people like best',

00:16:34,440 --> 00:16:36,060
I've come to terms with it naturally.

00:16:36,651 --> 00:16:38,299
In the beginning

00:16:38,300 --> 00:16:40,447
it said that Jest came in first last year,

00:16:40,721 --> 00:16:43,318
and one of our core members uploaded such a comment last year.

00:16:43,572 --> 00:16:44,120
"Now,

00:16:44,180 --> 00:16:45,460
Jest is getting popular these days,

00:16:45,460 --> 00:16:49,100
we should put in some popular functions like Jest, such as snapshots and coverage and other stuff

00:16:50,744 --> 00:16:52,031
That's the comment he left.

00:16:52,032 --> 00:16:53,544
When he said

00:16:53,592 --> 00:16:54,486
why don't we put in such functions as well?

00:16:54,490 --> 00:16:55,111
What happened was

00:16:56,111 --> 00:16:59,790
the maintainers who have been working for longer periods in open source appeared

00:17:00,740 --> 00:17:01,619
and left such comment.

00:17:01,620 --> 00:17:02,439
Now the text is long,

00:17:02,440 --> 00:17:03,923
but to put it short,

00:17:04,002 --> 00:17:05,993
'Mocha does not effect Jest,

00:17:05,994 --> 00:17:07,459
and Jest does not effect Mocha,

00:17:07,460 --> 00:17:08,045
we are just

00:17:08,415 --> 00:17:09,896
trying to each achieve our goal

00:17:10,310 --> 00:17:11,209
of making a better environment

00:17:11,210 --> 00:17:12,556
for testing in the system of Java Script,

00:17:12,557 --> 00:17:15,152
so that we can create more tests.

00:17:15,290 --> 00:17:17,413
We don't have any problems with each other

00:17:17,576 --> 00:17:18,776
is what he left in the comments.

00:17:18,865 --> 00:17:23,021
And Christopher, the creator of Jest was also summoned

00:17:23,279 --> 00:17:25,842
he was brought to the comment and he left a long message here.

00:17:25,954 --> 00:17:27,752
He said that such comments like this

00:17:27,907 --> 00:17:29,147
really puts him off.

00:17:29,256 --> 00:17:32,052
Jest and Mocha are not competing,

00:17:32,244 --> 00:17:34,428
so people should not think

00:17:34,685 --> 00:17:35,896
that in order for one to succeed

00:17:35,896 --> 00:17:37,952
the other should suffer or have problems.

00:17:38,103 --> 00:17:40,632
We each have different characteristics and each is a test framework

00:17:40,633 --> 00:17:41,724
with their own territory.

00:17:41,795 --> 00:17:42,933
This comment

00:17:43,103 --> 00:17:45,880
left a great impression on me.

00:17:46,014 --> 00:17:47,034
Like this,

00:17:47,381 --> 00:17:48,337
of course I had the thought that it was

00:17:49,022 --> 00:17:51,089
natural for us to feel the need to compete somewhere in our mind.

00:17:51,092 --> 00:17:53,508
Although we don't necessarily have a bad relationship,

00:17:53,767 --> 00:17:55,486
I still had these thoughts of wanting

00:17:55,486 --> 00:17:57,444
for my side to have the better outcome,

00:17:57,556 --> 00:18:00,492
but in the end we are all in the same system of open source

00:18:00,740 --> 00:18:02,518
so I learned there's no need for that type of thinking.

00:18:03,709 --> 00:18:06,267
And actually working in the field, I felt my limit in English.

00:18:06,268 --> 00:18:08,339
I wasn't all that great with English to begin with.

00:18:08,435 --> 00:18:09,471
But before,

00:18:09,472 --> 00:18:12,244
I could skip some issues that I didn't understand.

00:18:12,245 --> 00:18:13,412
Because I couldn't figure it out anyways.

00:18:13,572 --> 00:18:14,250
Also

00:18:14,251 --> 00:18:17,016
I only had to go over those things that I could solve and understand.

00:18:17,146 --> 00:18:18,865
So it wasn't really a big problem for me

00:18:18,866 --> 00:18:20,662
and all I had to do was take the edited code

00:18:20,663 --> 00:18:23,184
and discuss and review at the PR,

00:18:23,377 --> 00:18:25,173
but since I became the maintainer,

00:18:25,240 --> 00:18:27,810
I had to look at almost every issue and take part in the discussions.

00:18:27,810 --> 00:18:30,060
That's how I can follow the context to some extent.

00:18:30,340 --> 00:18:31,840
Even if I couldn't go through it all.

00:18:32,654 --> 00:18:34,002
It all takes so much time,

00:18:34,003 --> 00:18:34,838
and it's really hard.

00:18:35,215 --> 00:18:36,939
And I could still take part in

00:18:37,010 --> 00:18:39,080
the discussions about simple code,

00:18:39,081 --> 00:18:40,500
but when they continue on to complex debates,

00:18:40,564 --> 00:18:41,502
people comment their opinions.

00:18:41,503 --> 00:18:44,236
It was hard for me to participate when we had to say our own opinions.

00:18:44,744 --> 00:18:48,977
I understood what others said, but it was hard for me to deliver my own opinion

00:18:49,099 --> 00:18:52,771
with the exact nuance and tone needed.

00:18:53,514 --> 00:18:54,598
So, this

00:18:54,842 --> 00:18:56,599
led me to say only the most basic things.

00:18:57,830 --> 00:18:58,764
Like here, I would only say LGTM.

00:19:00,564 --> 00:19:02,181
I would say it just like this.

00:19:02,283 --> 00:19:04,256
Although I don't completely 'agree' to it

00:19:04,257 --> 00:19:05,984
I thought

00:19:05,994 --> 00:19:06,620
it would be

00:19:06,621 --> 00:19:08,123
better for me to say that and stop

00:19:08,124 --> 00:19:10,271
than to say more in English.

00:19:10,271 --> 00:19:11,302
And with this

00:19:11,306 --> 00:19:12,724
we agree and move on.

00:19:13,963 --> 00:19:14,897
And now,

00:19:15,135 --> 00:19:19,088
I didn't know this before I became the maintainer,

00:19:19,158 --> 00:19:21,111
but there are issues where the threads are really long.

00:19:21,111 --> 00:19:23,463
Or some issues that are old or closed.

00:19:23,494 --> 00:19:26,071
And even on those issues, people continuously leave comments.

00:19:26,140 --> 00:19:27,576
People would say they've experienced such problems too.

00:19:27,577 --> 00:19:28,416
I have that error too.

00:19:28,417 --> 00:19:29,705
They leave those comments

00:19:29,724 --> 00:19:31,641
continuously in already

00:19:31,717 --> 00:19:32,577
closed issues.

00:19:33,455 --> 00:19:35,818
But this is a great burden for the maintainers.

00:19:35,818 --> 00:19:36,502
Because

00:19:36,503 --> 00:19:38,495
old ones mostly have long threads

00:19:38,631 --> 00:19:41,610
and I click on it and it has,

00:19:41,658 --> 00:19:42,973
for example, 38 threads

00:19:43,025 --> 00:19:45,221
and the comments below are "I also have this error"

00:19:45,222 --> 00:19:46,612
"Fix this for me",

00:19:46,613 --> 00:19:48,377
so I have to go all the way up and read them.

00:19:48,378 --> 00:19:49,473
What is the issue?

00:19:49,510 --> 00:19:50,916
What is the issue that everyone still has a problem with?

00:19:50,917 --> 00:19:51,870
I have read through all of them,

00:19:51,871 --> 00:19:53,246
and that becomes a real big burden.

00:19:53,806 --> 00:19:55,603
And I've never actually seen

00:19:55,603 --> 00:19:58,456
one reopen in Mocha even to this day.

00:19:58,806 --> 00:19:59,343
So basically,

00:19:59,607 --> 00:20:00,119
in these situations

00:20:00,119 --> 00:20:02,178
It does not reopen no matter how much you write.

00:20:04,201 --> 00:20:04,840
Yes.

00:20:04,982 --> 00:20:06,838
So the one that we uploaded,

00:20:06,839 --> 00:20:07,288
now,

00:20:07,288 --> 00:20:09,105
we used an application called Probot

00:20:09,299 --> 00:20:10,096
and said, let's close

00:20:10,451 --> 00:20:12,395
all the threads that were already closed before.

00:20:13,342 --> 00:20:14,419
Let's lock them.

00:20:14,420 --> 00:20:16,014
Lock them so people do not leave any more comments there,

00:20:16,154 --> 00:20:18,264
this was the thread to prevent such things from happening

00:20:18,265 --> 00:20:19,103
And then,

00:20:19,162 --> 00:20:20,172
this originated from

00:20:20,392 --> 00:20:22,914
Henry, who develops Babel, who said something similar to this.

00:20:22,915 --> 00:20:25,990
It takes up too much of the maintainers' time,

00:20:26,213 --> 00:20:28,111
so let's have it be like, after a certain period of time passes after the threads close

00:20:28,303 --> 00:20:29,826
using an automated script,

00:20:29,826 --> 00:20:31,369
let's have all the threads be locked.

00:20:31,721 --> 00:20:34,883
Rather than leaving any comments in the locked thread,

00:20:34,982 --> 00:20:37,222
it's better for people to make a new issue, link it,

00:20:37,775 --> 00:20:42,041
and then we at the headquarters can then upload the summary of that situation for the user.

00:20:42,111 --> 00:20:42,834
This way is a more convenient

00:20:43,127 --> 00:20:44,240
method of handling problems.

00:20:44,240 --> 00:20:46,701
If they use older threads, we are not sure if they're using older versions

00:20:46,702 --> 00:20:48,582
or they just have the same bugs

00:20:48,674 --> 00:20:50,932
there's no way finding it out, so we just ignore them.

00:20:51,037 --> 00:20:53,376
We just look at it and do nothing about it.

00:20:54,553 --> 00:20:55,917
Serving as a maintainer,

00:20:56,291 --> 00:20:58,342
I think a lot about the characteristics of the framework.

00:20:58,343 --> 00:20:59,071
Before,

00:20:59,123 --> 00:21:00,862
I just used the frameworks I liked,

00:21:02,262 --> 00:21:04,661
And if I don't like it, I proceeded to another framework.

00:21:04,728 --> 00:21:08,388
If I don't like Mocha, I moved on to Jest, or something like that.

00:21:08,771 --> 00:21:10,350
Now that I am in the development team

00:21:11,232 --> 00:21:13,381
I find that the users just request the functions they need.

00:21:13,382 --> 00:21:14,254
I need this.

00:21:14,650 --> 00:21:15,670
That's all that they say.

00:21:15,881 --> 00:21:18,681
But when I am handed their requests, I think about a lot of factors.

00:21:18,752 --> 00:21:20,861
I have to understand its whole function,

00:21:20,978 --> 00:21:21,777
and I have to understand that

00:21:21,778 --> 00:21:24,595
what parts of our function is this function connected to,

00:21:24,632 --> 00:21:27,531
when I add this function, does it interfere with other functions

00:21:27,560 --> 00:21:28,761
I have to deal with such issues.

00:21:28,908 --> 00:21:30,868
Also to consider are the characteristics of our project,

00:21:30,881 --> 00:21:32,365
is this an issue we, or I, have to deal with?

00:21:33,091 --> 00:21:34,045
Is it our responsibility as well?

00:21:34,046 --> 00:21:34,991
or should I say that it

00:21:35,080 --> 00:21:36,877
should be relegated to a third party

00:21:36,878 --> 00:21:38,085
it's hard to decide those things.

00:21:38,342 --> 00:21:40,851
I thought I will understand it after a few months into the job,

00:21:40,959 --> 00:21:42,912
but there are so many issues and the topic is so broad,

00:21:42,913 --> 00:21:43,635
It's actually still hard to grasp.

00:21:43,636 --> 00:21:44,852
I still don't understand it even though I work on it.

00:21:45,139 --> 00:21:47,599
So on those parts, I decided to

00:21:47,853 --> 00:21:48,889
think about it myself the best I can,

00:21:48,890 --> 00:21:52,719
and deliberate over what kind of test framework Mocha should ultimately be.

00:21:53,771 --> 00:21:56,032
This is what's called the This.skip in Mocha.

00:21:57,267 --> 00:21:58,548
It's a function that from Mocha,

00:21:59,201 --> 00:22:00,821
we this.skip to the code,

00:22:01,232 --> 00:22:03,012
and it's skipped.

00:22:03,908 --> 00:22:04,650
But this

00:22:04,651 --> 00:22:05,549
had a lot of problems.

00:22:05,550 --> 00:22:06,529
For example,

00:22:06,935 --> 00:22:08,049
it's complicated.

00:22:08,050 --> 00:22:09,586
In the before hook,

00:22:09,728 --> 00:22:10,510
there is a test

00:22:10,511 --> 00:22:11,871
and you know we have the before-after hook.

00:22:11,872 --> 00:22:13,542
If we this.skip from the before hook

00:22:13,615 --> 00:22:15,295
how far we're actually skipped to

00:22:15,490 --> 00:22:16,711
is not consistent.

00:22:17,072 --> 00:22:18,091
For someone,

00:22:19,084 --> 00:22:21,349
we can skip the before hook and still run the test.

00:22:21,349 --> 00:22:22,675
For someone else, on the after hook,

00:22:22,676 --> 00:22:25,935
they say the after hook should at least be organized,

00:22:28,264 --> 00:22:29,357
if we skip the `should it`

00:22:29,358 --> 00:22:33,405
are the sub-`should it` skipped as well, these kind of circumstances

00:22:33,459 --> 00:22:35,152
all differ and in the end, we have so many to deal with.

00:22:35,217 --> 00:22:35,959
But those cases,

00:22:35,960 --> 00:22:37,412
when I tried to fix them individually

00:22:38,244 --> 00:22:40,946
there were some mistakes and inconsistencies and many other problems.

00:22:41,252 --> 00:22:44,844
So someone uploaded a PR to get all these organized at once,

00:22:44,904 --> 00:22:45,881
you may not be able to see it from the back

00:22:45,882 --> 00:22:48,078
but this was uploaded in November 2018.

00:22:48,342 --> 00:22:49,675
And it was merged,

00:22:50,236 --> 00:22:53,849
we were discussing with 90 comments and it was merged in December.

00:22:53,849 --> 00:22:55,021
It took 10, 11 months.

00:22:55,297 --> 00:22:56,042
To get it to the merging stage.

00:22:56,076 --> 00:22:57,456
We kept discussing there

00:22:57,619 --> 00:22:59,123
and the person who uploaded the PR

00:22:59,124 --> 00:23:01,935
stayed until the end, I respect that,

00:23:03,029 --> 00:23:04,322
and this shows that

00:23:04,323 --> 00:23:07,436
even one fix comes with so many

00:23:08,439 --> 00:23:09,117
different issues to think about.

00:23:09,924 --> 00:23:12,917
So in fact I can't respond to all the requests.

00:23:12,971 --> 00:23:14,647
Then where's the line?

00:23:17,736 --> 00:23:19,728
What kind of characteristics Mocha should have?

00:23:19,728 --> 00:23:21,974
To what extent its functions should be? Those kinds of issues.

00:23:21,975 --> 00:23:25,424
Thinking about it, the maintainers need to get together for a roadmap meeting.

00:23:25,425 --> 00:23:27,046
We talked about it a few times,

00:23:29,047 --> 00:23:31,547
but we haven't gotten into specifics on the get-together yet.

00:23:34,858 --> 00:23:37,699
And the Node.js has the LTS policy.

00:23:37,700 --> 00:23:39,709
The Node.js

00:23:40,998 --> 00:23:42,463
keeps discontinuing support

00:23:42,464 --> 00:23:43,439
and in June,

00:23:43,439 --> 00:23:46,000
they stopped the support for Node.js V6

00:23:46,213 --> 00:23:47,806
and now Node.js V8 support

00:23:47,807 --> 00:23:48,989
is being discontinued next year.

00:23:49,142 --> 00:23:49,943
Next year,

00:23:50,180 --> 00:23:51,564
so this coming April.

00:23:52,150 --> 00:23:53,509
The support stops in April.

00:23:54,240 --> 00:23:59,611
Then I am going to use LTS if I'd like a stable operation with Node.js,

00:23:59,612 --> 00:24:01,232
and if I'd like to use it aggressively

00:24:01,330 --> 00:24:02,560
I'd use the current version

00:24:02,560 --> 00:24:03,944
That's how I've been using it up until now.

00:24:04,045 --> 00:24:07,941
Now from the position of doing open source at the maintenance-level

00:24:08,088 --> 00:24:09,260
what I like about it is

00:24:09,338 --> 00:24:11,515
If Mocha drops something, we drop something too.

00:24:11,799 --> 00:24:12,712
For example,

00:24:13,303 --> 00:24:15,236
now that Mocha has dropped 6

00:24:15,237 --> 00:24:17,116
We can use the async await.

00:24:17,228 --> 00:24:17,834
These kind of things,

00:24:17,835 --> 00:24:19,182
We couldn't use it until then, because

00:24:19,183 --> 00:24:21,256
the ecosystem of Mocha Javascript

00:24:21,291 --> 00:24:24,052
uses Node 6, so we have to support that as well.

00:24:24,963 --> 00:24:28,157
But if the node does not support that, we don't have to do it either,

00:24:28,478 --> 00:24:30,102
those kind of things are very convenient for maintenance.

00:24:30,103 --> 00:24:31,495
And these changes are predictable.

00:24:33,010 --> 00:24:34,299
So, lastly,

00:24:35,099 --> 00:24:36,879
I love this quote

00:24:37,580 --> 00:24:38,986
It's a quote from someone else.

00:24:38,987 --> 00:24:41,234
Someone wrote on Twitter,

00:24:42,189 --> 00:24:43,986
that the open source should

00:24:44,377 --> 00:24:47,403
not be treated like a product we purchased

00:24:47,971 --> 00:24:50,508
but it should be treated like a team we belong to.

00:24:50,509 --> 00:24:52,326
That's how the quote goes.

00:24:52,326 --> 00:24:54,883
I used this quote in some other presentation before.

00:24:55,764 --> 00:24:56,582
With this,

00:24:57,307 --> 00:24:58,341
I will end my presentation.

00:24:58,967 --> 00:25:00,182

YouTube URL: https://www.youtube.com/watch?v=Mbdl9OS7E3o


