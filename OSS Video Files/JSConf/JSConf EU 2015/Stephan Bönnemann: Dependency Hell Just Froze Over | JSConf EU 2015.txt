Title: Stephan Bönnemann: Dependency Hell Just Froze Over | JSConf EU 2015
Publication date: 2015-10-10
Playlist: JSConf EU 2015
Description: 
	If extensive libraries and even the tiniest module followed SemVer strictly, dependency hell would be a thing of the past … but humans weren’t made to follow rules.

There are way more than 150.000 packages on npm today – the most of any registry. Using the right packages in your own modules and applications makes JavaScript the joy to develop it is today. But if even immensely popular libraries fail to properly declare breaking changes, how can we trust the over 50.000 strangers who developed all these modules? Currently we can’t. Let me show you how to write confidence-inspiring modules with breaking change detection and fully automated, tested releases including changelogs. Machines do a way better job with this than buggy humans.

Intro music by @halfbyte
Captions: 
	00:00:27,400 --> 00:00:37,250
So, yeah. Thank you for the kind introduction, so that everyone knows who I am now. We can get right

00:00:37,250 --> 00:00:38,590
to the dependency hell. So today's talk is about

00:00:38,590 --> 00:00:43,830
dependencies and their relationships, dependency is a state

00:00:43,830 --> 00:00:47,280
in which one object uses the function of another object

00:00:47,280 --> 00:00:50,640
around in the JavaScript world we have a pretty good

00:00:50,640 --> 00:00:54,190
tool, and a pretty great infrastructure to make that functionality

00:00:54,190 --> 00:00:58,920
available and consumerable. So dependency relations

00:00:58,920 --> 00:01:02,199
brings a lot of good, but sometimes we're really mad

00:01:02,199 --> 00:01:08,479
about them, hence the term dependency hell. Let me

00:01:08,479 --> 00:01:15,439
start with a little story. About two years ago, when

00:01:15,439 --> 00:01:19,790
I started my university course, I was looking for people

00:01:19,790 --> 00:01:23,260
who had already done some projects or cool stuff. So

00:01:23,260 --> 00:01:25,390
I was looking around and there was a person who had

00:01:25,390 --> 00:01:30,430
already done no project, so obviously we became friends,

00:01:30,430 --> 00:01:33,510
but I soon found out that it wasn't their only

00:01:33,510 --> 00:01:36,890
technology, like it was my technology, I'd done

00:01:36,890 --> 00:01:44,670
a project, he'd done C++ hardware and he was a better

00:01:44,670 --> 00:01:51,130
computer scientist than I was at the time, and I am now,

00:01:51,130 --> 00:01:54,390
but when we started hacking together it always felt like

00:01:54,390 --> 00:01:59,530
it was more productive somehow, and we showed each other

00:01:59,530 --> 00:02:03,060
some code, and started hacking. And so I read through

00:02:03,060 --> 00:02:06,940
his modules and code and then I found one line where

00:02:06,940 --> 00:02:10,750
there was a lot of code that was handled, and it was

00:02:10,750 --> 00:02:16,090
requiring these modules. So I said: "Why are you using

00:02:16,090 --> 00:02:23,030
that code?" And at that time it was the most depended

00:02:23,030 --> 00:02:27,739
upon and downloaded package, and he said "What is A

00:02:27,739 --> 00:02:29,810
sync? I have no idea what that is." I wrote this

00:02:29,810 --> 00:02:38,129
module myself. And so I said: "Okay, now I know why it

00:02:38,129 --> 00:02:42,409
feels like I'm more productive than you." And so this

00:02:42,409 --> 00:02:46,549
is the only thing to this day I could probably ever

00:02:46,549 --> 00:02:52,269
teach to him, that's use the NPM search, or better yet

00:02:52,269 --> 00:02:59,299
NPM search, or their web search. And that made them

00:02:59,299 --> 00:03:02,659
a productive developer, not only excellent but

00:03:02,659 --> 00:03:06,760
productive. And once we realised that he can just do

00:03:06,760 --> 00:03:09,989
NPM search, and then there's a package, and then you

00:03:09,989 --> 00:03:13,669
just plug them together, the productivity just exploded.

00:03:13,669 --> 00:03:16,730
It got to the point where I had to be careful what I was

00:03:16,730 --> 00:03:21,560
saying because the next morning he had just done it. So

00:03:21,560 --> 00:03:25,450
we were living in this university home back at the time,

00:03:25,450 --> 00:03:27,499
and there was this very, very shitty Internet where you

00:03:27,499 --> 00:03:31,450
had to put in every few hours, so I said: "This is so

00:03:31,450 --> 00:03:33,829
annoying, you should have one that fills in the

00:03:33,829 --> 00:03:36,249
credentials", and the next morning he was: "Yeah, yeah

00:03:36,249 --> 00:03:41,269
I automated that so it sets the address, which forces

00:03:41,269 --> 00:03:44,379
the form to come up, and then I automated the form so we

00:03:44,379 --> 00:03:48,159
have this little raspberry, you put it in here, plug it

00:03:48,159 --> 00:03:50,909
in", and the Internet was awesome, and that's just great

00:03:50,909 --> 00:03:54,680
and that was because he had installed the thing plus the

00:03:54,680 --> 00:03:59,199
knowledge he already had. So that's pretty cool. But

00:03:59,199 --> 00:04:02,730
now comes the part that is even more important for me,

00:04:02,730 --> 00:04:07,480
and for us as a community if we want to be welcoming,

00:04:07,480 --> 00:04:12,269
and enable more people to do stuff. So this was just

00:04:12,269 --> 00:04:16,709
the beginning of my university course, and obviously

00:04:16,709 --> 00:04:20,859
I am a beginner programmer, and since there were other

00:04:20,859 --> 00:04:25,449
persons who had already done some websites, already sold

00:04:25,449 --> 00:04:29,110
some websites, but it is pretty much been copy and paste

00:04:29,110 --> 00:04:34,760
stuff, pretty horrible, but that's how we all start out.

00:04:34,760 --> 00:04:36,800
I mean it is horrible in the technical sense, but it is

00:04:36,800 --> 00:04:40,810
pretty cool that we actually did some things, and then

00:04:40,810 --> 00:04:43,509
the university courses came in and were like teaching

00:04:43,509 --> 00:04:47,090
the basics of programming and then doing it the real

00:04:47,090 --> 00:04:51,710
way, and then he was really frustrated, because all he

00:04:51,710 --> 00:04:55,449
wanted to do was build websites, do things, and that

00:04:55,449 --> 00:04:59,650
didn't help at all. So here is the thing I told him:

00:04:59,650 --> 00:05:03,509
use NPM search. And obviously it wasn't that easy

00:05:03,509 --> 00:05:07,139
because he didn't even know what NPM is, but once I got

00:05:07,139 --> 00:05:10,300
it explained, I said to him: "Listen, for everything you

00:05:10,300 --> 00:05:12,759
want to do there's someone out there who has already

00:05:12,759 --> 00:05:15,830
done it, and you only need to rearrange things in new

00:05:15,830 --> 00:05:22,699
ways and be creative." So NPM search made him a productive developer,

00:05:22,699 --> 00:05:26,370
and some people, especially at university, think

00:05:26,370 --> 00:05:29,970
you can only teach things by making people deeply

00:05:29,970 --> 00:05:33,599
understand the basics and the core principles of stuff, but

00:05:33,599 --> 00:05:36,490
I think you can just stop boring people and give them

00:05:36,490 --> 00:05:39,259
tools so they can start creating, and then they will keep

00:05:39,259 --> 00:05:43,750
creating, and sooner or later they will understand,

00:05:43,750 --> 00:05:48,340
and then it goes on and on and never stops. So this person

00:05:48,340 --> 00:05:56,080
built their first node thing, and it was talking

00:05:56,080 --> 00:06:00,750
to Twitter and Facebook, just three months later, and

00:06:00,750 --> 00:06:04,580
obviously he didn't understand anything of OF, but no one

00:06:04,580 --> 00:06:11,659
does, but he just started with a little guidance, and

00:06:11,659 --> 00:06:20,669
just three months later he was a productive developer.

00:06:20,669 --> 00:06:24,860
This is what is enabled by NPM. They have really great

00:06:24,860 --> 00:06:28,909
tools and a registry that's available for everyone.

00:06:28,909 --> 00:06:32,139
They're hosting it for us, making it accessible, and

00:06:32,139 --> 00:06:35,020
they have an incredible team of humans working on that.

00:06:35,020 --> 00:06:37,750
I couldn't be more happy about this, because it is

00:06:37,750 --> 00:06:41,819
enabling everything, so that's pretty cool, but the

00:06:41,819 --> 00:06:45,710
infrastructure isn't everything. We have this cool

00:06:45,710 --> 00:06:50,389
little thing: our community. And so this is what our

00:06:50,389 --> 00:06:57,150
community achieved. So who here has ever published a module? Can you raise you hands? That's

00:06:57,150 --> 00:07:00,250
quite a few people. That's pretty cool. There are no exact

00:07:00,250 --> 00:07:04,909
numbers but they're about 50,000 or more than 50,000

00:07:04,909 --> 00:07:09,259
individual people who published modules, and it is just

00:07:09,259 --> 00:07:12,479
incredible to observe this, to see people coding in the

00:07:12,479 --> 00:07:16,030
open talking about stuff, and it is just inspiring

00:07:16,030 --> 00:07:22,930
and makes everyone so productive. What we have is 180

00:07:22,930 --> 00:07:30,770
thousand modules, and everywhere you can run JavaScript,

00:07:30,770 --> 00:07:35,919
in your TV, we can use these modules. So everything

00:07:35,919 --> 00:07:43,490
is pretty awesome, right? The thing is, we don't just

00:07:43,490 --> 00:07:49,300
need productive developers, in the long-term, if

00:07:49,300 --> 00:07:53,199
we want to shift serious products that also pay the bill

00:07:53,199 --> 00:07:57,870
for all this, we need to be able to work in teams.

00:07:57,870 --> 00:08:00,539
And of course we need flexibility and productivity,

00:08:00,539 --> 00:08:04,349
but we also need stability and maintainability. That's

00:08:04,349 --> 00:08:07,479
the part where the more serious developers come in

00:08:07,479 --> 00:08:11,729
and say small modules are nice in theory, but it doesn't

00:08:11,729 --> 00:08:15,599
work, stuff keeps breaking all the time, there's just

00:08:15,599 --> 00:08:19,979
so much overheads. So we came up with a term that

00:08:19,979 --> 00:08:22,430
is so privileged it could probably only come into

00:08:22,430 --> 00:08:27,629
existence in the tech community, because we call it "dependency

00:08:27,629 --> 00:08:31,199
hell". The worst possible place we could be in.

00:08:31,199 --> 00:08:34,380
Because code that other people wrote for us stops

00:08:34,380 --> 00:08:43,880
working. Imagine you're a small kid, and instead of

00:08:43,880 --> 00:08:48,040
asking your parents for this one certain piece of

00:08:48,040 --> 00:08:51,890
Lego, you just have every single Lego piece available

00:08:51,890 --> 00:08:56,200
to you, it doesn't matter what colour, size, how many

00:08:56,200 --> 00:09:00,190
of them, you can just build anything you want. This is

00:09:00,190 --> 00:09:09,410
how I see the NPM registry. And imagine your house collapses

00:09:09,410 --> 00:09:12,090
or whatever you have built, and it no longer

00:09:12,090 --> 00:09:18,520
works the way you want. What would you do as a small kid?

00:09:18,520 --> 00:09:20,970
You would probably start crying because your beautiful

00:09:20,970 --> 00:09:25,420
house just collapsed. And that's what we do. Small modules

00:09:25,420 --> 00:09:30,530
suck, NPM sucks, semantic versioning sucks, everything

00:09:30,530 --> 00:09:37,770
sucks. We need to grow up because this room would

00:09:37,770 --> 00:09:44,380
be pretty empty without all the modules. I'm serious.

00:09:44,380 --> 00:09:47,830
This is a huge part of the success of JavaScript,

00:09:47,830 --> 00:09:53,980
that we can make functionality for others without infringing.

00:09:53,980 --> 00:10:00,950
So we have to realise this. We might be getting

00:10:00,950 --> 00:10:05,860
functionality for free, but we have to write tests for it

00:10:05,860 --> 00:10:10,340
ourselves. There is one exception. We only use modules

00:10:10,340 --> 00:10:14,780
by John David Dalston, which is a joke because there

00:10:14,780 --> 00:10:18,260
is no exception. It's quite the opposite, even if

00:10:18,260 --> 00:10:22,410
we only use modules by John David Dalston which are well

00:10:22,410 --> 00:10:25,580
tested, we still have to write our own tests because

00:10:25,580 --> 00:10:30,180
that's the only way to prove our code is working. Actually

00:10:30,180 --> 00:10:33,460
the test defines what our software is, and if

00:10:33,460 --> 00:10:39,580
we don't have that and just have something, and even though

00:10:39,580 --> 00:10:42,350
if you're relying on well tested modules for all the

00:10:42,350 --> 00:10:45,150
implementation bit, that's not software, it is only

00:10:45,150 --> 00:10:49,390
a hack. I don't want to exclude myself here, I'm using

00:10:49,390 --> 00:10:52,220
hacks all the time. But the thing is we need to be

00:10:52,220 --> 00:11:05,570
aware of it and stop laying the blame on others. There's one thing about dependency hell that's

00:11:05,570 --> 00:11:08,750
accurate. Hell is a place where you get punished for

00:11:08,750 --> 00:11:12,490
self-inflicted sins. It is not the others. It is you.

00:11:12,490 --> 00:11:19,590
You have to write tests for your stuff. So we have to

00:11:19,590 --> 00:11:23,740
embrace that modules are everything. They make us

00:11:23,740 --> 00:11:26,050
productive, they are the reason why we're here, they're

00:11:26,050 --> 00:11:29,050
the reason why JavaScript is so successful, because we

00:11:29,050 --> 00:11:33,380
can share and be open about the stuff we're working on,

00:11:33,380 --> 00:11:38,360
and we have to accept that we have to test our stuff.

00:11:38,360 --> 00:11:42,980
That's the deal. Others may write the implementation bits, but we have to write the tests because

00:11:42,980 --> 00:11:46,580
that's the definition of what we're writing. So that's

00:11:46,580 --> 00:11:50,380
the key to maintainable software.

00:11:50,380 --> 00:11:59,000
So over the course of the last year I started writing a tool, or a rather a test thing,

00:11:59,000 --> 00:12:05,630
because that's what I did all the time. So it's stable. And

00:12:05,630 --> 00:12:10,580
it helps take all this to automater and fire publishing

00:12:10,580 --> 00:12:24,960
process. Trust me, this will change your work for the

00:12:24,960 --> 00:12:28,870
better. I agree it is a great rule, but the thing

00:12:28,870 --> 00:12:33,950
is it is only for package authors, and you saw earlier some

00:12:33,950 --> 00:12:36,430
people raised their hands when I asked if there is

00:12:36,430 --> 00:12:40,090
some package authors here, but I realised if you want to

00:12:40,090 --> 00:12:44,260
make change in the entire eco standard, if you want to

00:12:44,260 --> 00:12:49,130
enable more people to share their stuff and build code

00:12:49,130 --> 00:12:53,220
I have to provide something for the users of the package,

00:12:53,220 --> 00:12:58,020
and every author is a user of the package, as

00:12:58,020 --> 00:13:01,080
well. And so, I listened to my friend Stephan and

00:13:01,080 --> 00:13:10,290
I stick to these three rules: humans shoot humans,

00:13:10,290 --> 00:13:14,880
computers shoot computers, and computers only exist

00:13:14,880 --> 00:13:21,990
to make better humans ...

00:13:21,990 --> 00:13:24,320
I want to show you something entirely new I was

00:13:24,320 --> 00:13:29,220
working on with a bunch of friends. No one saw it

00:13:29,220 --> 00:13:44,550
before, and I'm going to do a live demo, so let's see

00:13:44,550 --> 00:13:58,290
what happens. So the thing that makes dependency hell

00:13:58,290 --> 00:14:00,570
so annoying is that you have to keep track of the

00:14:00,570 --> 00:14:04,630
changes in your dependencies and new versions, you can

00:14:04,630 --> 00:14:12,110
either pin them all the time and then you're vulnerable

00:14:12,110 --> 00:14:22,470
to random fails in your stuff, so you're constantly managing your dependencies. So the idea is

00:14:22,470 --> 00:14:26,000
that -- so I have this demo repository, it doesn't have

00:14:26,000 --> 00:14:28,370
any code but it has some dependencies to show this

00:14:28,370 --> 00:14:36,300
to you. So I built this tool, it is called Link Keeper.

00:14:36,300 --> 00:14:48,920
Obviously this had to happen because I have to sync

00:14:48,920 --> 00:15:05,980
first. I'm sorry. I have a lot of packages, so that excuses

00:15:05,980 --> 00:15:18,620
it maybe. Awesome. So this repository is enabled

00:15:18,620 --> 00:15:23,660
now, and this means there's a computer computering

00:15:23,660 --> 00:15:26,870
in the background to manage all the dependencies

00:15:26,870 --> 00:16:00,720
for us. Of course. Of course

00:16:00,720 --> 00:16:05,780
it just had to happen, obviously, and I'm very sorry. I swear it worked when I was

00:16:05,780 --> 00:16:09,920
sitting in the front of the stage. I'll just explain

00:16:09,920 --> 00:16:26,140
the concept and then you can see if you like it. So I

00:16:26,140 --> 00:16:29,590
have these dependencies and they're all using versions

00:16:29,590 --> 00:16:34,430
where I say use this version, and everything that's a

00:16:34,430 --> 00:16:37,900
new patch or a minor version, and so when I enabled the

00:16:37,900 --> 00:16:41,440
repository, I automatically get a request that pins down

00:16:41,440 --> 00:16:43,720
all my dependencies to the highest version that is

00:16:43,720 --> 00:16:48,610
currently satisfying in the range, and then I put a

00:16:48,610 --> 00:16:52,600
request in and then I have pinned down dependencies, what

00:16:52,600 --> 00:16:59,010
has happened then is whenever dependency changes, get another

00:16:59,010 --> 00:17:02,540
pull request in time, and nothing changes in time

00:17:02,540 --> 00:17:06,429
but the version, and then the pull request comes in,

00:17:06,429 --> 00:17:10,169
and then you probably have some CI service configured

00:17:10,169 --> 00:17:13,789
and it automatically runs the tests, the tests, depending

00:17:13,789 --> 00:17:18,370
on the dependency change in isolation, and you

00:17:18,370 --> 00:17:23,630
can merge right away with the click of one button. And

00:17:23,630 --> 00:17:27,589
if it doesn't, you know exactly which version caused

00:17:27,589 --> 00:17:30,740
the problem and you have a branch ready sitting

00:17:30,740 --> 00:17:33,760
there, and you just check it out and keep working on

00:17:33,760 --> 00:17:40,820
it and you can just merge it in as well. So the idea is that

00:17:40,820 --> 00:17:44,520
we're going to make this available for every public

00:17:44,520 --> 00:17:49,570
repository on Twitter so that everyone can have pinned

00:17:49,570 --> 00:17:52,440
down dependencies, everyone can have control over

00:17:52,440 --> 00:17:56,910
what version they're using, but at the same time,

00:17:56,910 --> 00:18:03,160
it's always up to date. So this isn't quite as impressive

00:18:03,160 --> 00:18:08,290
without the demo, but it's available today, and you

00:18:08,290 --> 00:18:19,780
can get this via NPM, obviously, it's NPM install-G greenkeeper

00:18:19,780 --> 00:18:25,150
and please sign up and share it. As I said, we

00:18:25,150 --> 00:18:29,340
want to make this available for all public repositories

00:18:29,340 --> 00:18:32,450
so that at some point this is running on every single

00:18:32,450 --> 00:18:35,760
NPM dependency and therefore the entire NPM eco

00:18:35,760 --> 00:18:39,760
system doesn't make us as productive, it is also

00:18:39,760 --> 00:18:54,870
maintainable. Thank you. [applause]. And maybe you should

00:18:54,870 --> 00:18:57,890
wait ten more minutes and then we have this thing fixed

00:18:57,890 --> 00:19:01,659

YouTube URL: https://www.youtube.com/watch?v=PA139CERNbc


