Title: Patricia Garcia: Good Tech for Hard Places: Fighting Ebola with JS Offline Apps | JSConf EU 2015
Publication date: 2015-10-10
Playlist: JSConf EU 2015
Description: 
	On 23rd July 2014, the first case of Ebola was reported in Nigeria, home to a small NGO working at the intersection of tech and public health. By then over 1000 cases had been reported in Guinea, Sierra Leone and Liberia. This is a story of how we use JavaScript to fight the Ebola outbreak. It’s also a story of building good tech for hard places, where a stable internet connection is rare and emergencies are real. There are a lot of awesome technologies (e.g. CouchDB and PouchDB) out there to help you build offline applications. There is also no shortage of beginner level online tutorials to show you how to do a quick and nice first prototype, but as in any new field there is not so much documentation available to help you solve the problems you’ll find when deploying your offline applications to be used in the “real” world. This talk will present some of these problems as well as the solutions we came up with, including some open source tools developed by ourselves.

Intro music by @halfbyte
Captions: 
	00:00:28,400 --> 00:00:35,320
(Applause) hi, everybody, I'm very proud of you being here after lunch (Laughing) and

00:00:35,320 --> 00:00:41,480
thanks for the introduction, Alex. You know you can say live with JavaScript, really ‑‑

00:00:41,480 --> 00:00:45,370
you can saver lives with JavaScript, you can, you'll see, this is not necessarily an easy

00:00:45,370 --> 00:00:53,430
path, we have been doing that for the past 13 months and writing JavaScript offline applications

00:00:53,430 --> 00:01:00,430
to fight Ebola outbreak, we have made a lot of mistakes and find a lot of challenges and

00:01:00,430 --> 00:01:05,040
we have learn a loath. I want to share with you the challenges the mistakes and the learningses

00:01:05,040 --> 00:01:11,880
so maybe it will save you some pain if you work withoffline applications. All right.

00:01:11,880 --> 00:01:18,920
Ebola, I'm sure you know a lot about Ebola because it's been in the media for the past

00:01:18,920 --> 00:01:23,720
year and a half. Toking to review the facts that will help you understand how to fight

00:01:23,720 --> 00:01:28,600
it. So, we don't know much about Ebola, once of the things we don't know is how to cure

00:01:28,600 --> 00:01:35,640
it T way to treat it nowadays is just to bring people to a medical facility and keep them

00:01:35,640 --> 00:01:41,960
strong and hydrated and treat the symptoms. So that the body can deal with the virus itself.

00:01:41,960 --> 00:01:51,790
However, Ebola has some good parts in comparison with some other diseases, one is that contagion

00:01:51,790 --> 00:01:59,070
requires direct contact with body fluids, so it's not air born like a cold. And also,

00:01:59,070 --> 00:02:03,700
infected people are only contagious after they develop symptoms. Unlike the flu where

00:02:03,700 --> 00:02:07,940
you are giving it to other people and you don't even know you are sick yet. We also

00:02:07,940 --> 00:02:16,420
know the incubation period is up to 21 days and the way to fight Ebola is mostly what

00:02:16,420 --> 00:02:23,590
is called contact tracing. When you find someone that is sick with Ebola, you, of course, first

00:02:23,590 --> 00:02:30,189
bring them to a hospital, provide them with care, and be careful to keep them isolated

00:02:30,189 --> 00:02:35,579
from other patients because Ebola is very contagious. But the second thing you do is

00:02:35,579 --> 00:02:41,639
to find out everybody that has had significant contact with that person in the last days.

00:02:41,639 --> 00:02:48,349
And these people are put are infected with Ebola too. So what you have to do is check

00:02:48,349 --> 00:02:53,659
on them for 21 days, follow up on them for 21 days and sea if they develop symptoms,

00:02:53,659 --> 00:02:58,870
if they don't, they are free, if they do, then you have to start the process again,

00:02:58,870 --> 00:03:03,209
so there are two important parts here for stopping the sickness from spreading, one

00:03:03,209 --> 00:03:07,650
is like, one is contact tracing, the other one is to find infected people as soon as

00:03:07,650 --> 00:03:14,739
possible so you can help them and also so you prevent them from infecting other people.

00:03:14,739 --> 00:03:21,069
For that, this is not so see city in the Ebola countries in west Africa like in Liberia and

00:03:21,069 --> 00:03:26,930
Guine and Sierra Lee I do not know, at one point there were two many people infected,

00:03:26,930 --> 00:03:33,150
it was difficult to find them ontop tomb. Apart from contact tracing they set up an

00:03:33,150 --> 00:03:38,889
emergency Ebola hotline where people can basically call with an Ebola emergency saying that somebody's

00:03:38,889 --> 00:03:45,529
sick or dead or just asking for information because education is very important here too.

00:03:45,529 --> 00:03:52,389
Some people didn't know what Ebola or didn't believe it existed. Okay, so, how does JavaScript

00:03:52,389 --> 00:04:00,389
enter the equation? I work for e‑health Africa, a nigh jeerian based NGO that tries

00:04:00,389 --> 00:04:07,319
to help vulnerable communities, mostly in West Africa live healthy lives. And part of

00:04:07,319 --> 00:04:13,859
it has been helping with Ebola outbreak (West Africa) we first went to Nigeria pause rewriting

00:04:13,859 --> 00:04:20,900
Nigeria based and things were somehow okay, pretty okay, so we were asked to go to also

00:04:20,900 --> 00:04:33,370
Sierrea Leon, Liberia, in Nigeria we realized contact tracing was working, the contact tracers

00:04:33,370 --> 00:04:39,550
that go to visit the contacts at home and they use paper forms, you know how paper forms

00:04:39,550 --> 00:04:45,520
work. It's slow to enter the information and there's no other checking, paper doesn't complain

00:04:45,520 --> 00:04:52,400
if you don't fill a mandatory field. And also paper is easy to lose or it can be destroyed

00:04:52,400 --> 00:04:57,400
like what if it gets wet, for example. Also it travels slow, you have to bring it to the

00:04:57,400 --> 00:05:01,810
place you want it to go. The place you want it to be was what is called the emergency

00:05:01,810 --> 00:05:05,979
operation center, there is where they take the information and they decide what to do

00:05:05,979 --> 00:05:11,379
with it. And they also try to digitalize it you can do Analytics or plan a strategy further.

00:05:11,379 --> 00:05:19,789
This is also like taking all this paper of ‑‑ all this paper and put it in an application,

00:05:19,789 --> 00:05:27,470
also error prone and slow and something we human suck at. However, you can do just a

00:05:27,470 --> 00:05:32,860
simple application where the contact tracer will select the name of a person they are

00:05:32,860 --> 00:05:38,639
following up with and they can just fill out the symptoms and as a bonus once you save

00:05:38,639 --> 00:05:44,720
it, the phone can save the GPS coordinates of the place you are, so you can be sure that

00:05:44,720 --> 00:05:51,360
the contract tracer actually visited the person. This can synchronize to the at that base and

00:05:51,360 --> 00:05:57,349
you have the data digital lazed very fast. And we could improvise another tool for the

00:05:57,349 --> 00:06:03,530
major emergency operation center that allows to have real‑time information about what's

00:06:03,530 --> 00:06:07,490
happening for example if someone has developed symptoms you can see they're highlighted in

00:06:07,490 --> 00:06:15,069
red. I also mentioned the call center, for the call center it was even more extreme because

00:06:15,069 --> 00:06:21,280
they are receiving more information. They were using different things, ranging from

00:06:21,280 --> 00:06:26,800
paper to excel to some applications they were not happy with. Imagine for example paper,

00:06:26,800 --> 00:06:31,840
you are receiving all these calls from people that are ‑‑ and you have to write everything

00:06:31,840 --> 00:06:37,310
very fast and then the next call comes and you have your paper that is piling up, and

00:06:37,310 --> 00:06:42,629
then somebody has to go there and have to filter the calls that were actually got or

00:06:42,629 --> 00:06:48,009
the calls that were just asking for information from the calls that says there is somebody

00:06:48,009 --> 00:06:53,569
dead at my place and like my son has died and he has been here for two days and somebody

00:06:53,569 --> 00:06:59,909
has to e puck the corporation because this is in ‑‑ has to pick up the Corps because

00:06:59,909 --> 00:07:05,409
it's infections. We created a place where they could enter the information easily. The

00:07:05,409 --> 00:07:11,280
different teams you see here, the quartine team, ambulance team can just filter the information

00:07:11,280 --> 00:07:17,349
they want, we can prioritize it for them. And they can the ‑‑ prioritize it for

00:07:17,349 --> 00:07:23,900
them () these two applications are pretty simple, but thaw manage to make the process

00:07:23,900 --> 00:07:31,199
faster with the mobile applications, reduce the response time from twelve hours to almost

00:07:31,199 --> 00:07:37,330
instantly as instantly as the network connection was working in the call center there was an

00:07:37,330 --> 00:07:42,020
article the other Jan Day saying all the improvements in the call center have managed to reduce

00:07:42,020 --> 00:07:48,360
the response time from an average of five days to one day, it was not only the support,

00:07:48,360 --> 00:07:53,030
there were many other improvements, five days is pretty bad if you're sick and you have

00:07:53,030 --> 00:07:59,229
to be taken to a hospital. But this is not very complicated this is a bunch of web forms

00:07:59,229 --> 00:08:07,349
a bunch of API calls, we know how to cowhich, we're web developers, it's a two minute job.

00:08:07,349 --> 00:08:14,139
We have some constraints that make our live difficult between difficult and a living hell.

00:08:14,139 --> 00:08:21,490
There's not always internet () sometimes there is, but it's too slow. It's unreliable, one

00:08:21,490 --> 00:08:27,259
thing we know for sure is our applications have to work offline. Fortunately, we have

00:08:27,259 --> 00:08:37,779
the help of some awesome piece of technology, couch DB, couch DB is document database that

00:08:37,779 --> 00:08:45,230
allows you to do map reduce operations also using JavaScript on the data. And has HTTP

00:08:45,230 --> 00:08:53,880
API and designed with distributed systems in mind. And this part about the HTTP API

00:08:53,880 --> 00:08:59,570
means that couch DB can be your back end. In our case this is what we did, couch DB

00:08:59,570 --> 00:09:04,810
is our back end so we don't have to implement this part. The only part missing here is the

00:09:04,810 --> 00:09:10,590
offline capabilities. But, then we had the help from touch DB, which is also an ‑‑

00:09:10,590 --> 00:09:18,520
pouch DB which is an Open Source project which provides you with a compatible database within

00:09:18,520 --> 00:09:27,660
your browser. We added a little bit of Angular to the mix, and it allowed us to move very

00:09:27,660 --> 00:09:33,700
fast and be super flexible with the data we were handling. So fast that the first prototype

00:09:33,700 --> 00:09:38,640
of our contract tracing App was ready in three days, the prototype, and same for the call

00:09:38,640 --> 00:09:44,530
certain both were in production doing something within a week. The code was somehow crappy

00:09:44,530 --> 00:09:53,530
and we had to fix it, but, it helped and a few weeks later, Ebola was eradicated from

00:09:53,530 --> 00:09:59,860
Nigeria and we were asked to go to these other countries where the emergency was much worse))

00:09:59,860 --> 00:10:07,890
(Eradicated) there were two things that were different in Guiene, and Liberia in comparison

00:10:07,890 --> 00:10:10,150
with Nigeria, the infrastructure seven worse, so internet is even ‑‑ infrastructure

00:10:10,150 --> 00:10:19,040
is even worse and internet is not reliable and the scale of the outbreak was completely

00:10:19,040 --> 00:10:27,020
different. So we started having some problems. Here you can see the difference between ‑‑

00:10:27,020 --> 00:10:32,130
you cannot see even the numbers in Nigeria because they are negligible in commissary

00:10:32,130 --> 00:10:41,770
son with Sierra Leone in Nigeria there were 20 cases in total Sierra Leone at the worst

00:10:41,770 --> 00:10:51,750
moment there were 500 new cases a week. 500 new sick people per week. What we were doing

00:10:51,750 --> 00:11:00,500
at the beginning was simply following the pouch DB tutorial. Just replicates couch DB

00:11:00,500 --> 00:11:04,250
database in your browser. You have all your data available and you can work as if you

00:11:04,250 --> 00:11:09,770
were on‑line all the time. But we started noticing that at some point this was not working

00:11:09,770 --> 00:11:14,540
quite well. First the browser complained, look this is too much space, you are being

00:11:14,540 --> 00:11:22,690
too greedy. Different browsers have different limits, but, yeah. We sort of ignored this

00:11:22,690 --> 00:11:27,000
problem and decide, okay, we'll just support Chrome, that lets us use six percent of the

00:11:27,000 --> 00:11:32,770
hard drive, yeah, that didn't work out. The next thing is that the replication started

00:11:32,770 --> 00:11:38,330
being super slow, but it was ten minutes, 20 minutes, then40 minutes and that was in

00:11:38,330 --> 00:11:47,520
Berlin, in Liberia with more latency and worse internet ... so we were crazy trying to improve

00:11:47,520 --> 00:11:54,300
this and fix it and then we saw this, which is like Chrome saying, okay, I give up. I

00:11:54,300 --> 00:12:01,000
thought it was very funny the first time, oh, I totally own Chrome, but I felt it was

00:12:01,000 --> 00:12:09,060
just my development team, no, it was in production, not so funny. What we found is that there

00:12:09,060 --> 00:12:14,640
was a problem with the replication in couch DB and this is an issue field by one of the

00:12:14,640 --> 00:12:20,250
couch DB developers for the couch DB guy. There's a lot of information, sorry you may

00:12:20,250 --> 00:12:25,240
not be able to read it. The summary is 23 you want to replicate ten thousand documents,

00:12:25,240 --> 00:12:31,380
which is not see much, you can request batches of 500 documents for example, you will assume

00:12:31,380 --> 00:12:37,800
in 20 requests or more or less, I have my data. However, the way replication works means

00:12:37,800 --> 00:12:43,580
that you have to do one request per document, so ten thousand documents ten thousand requests.

00:12:43,580 --> 00:12:49,940
If you are using course, as we will, then you have double the number of requests, so

00:12:49,940 --> 00:12:57,610
ten thousand documents is not so much, 20,000 requests is a lot. Okay, so, problem solved,

00:12:57,610 --> 00:13:04,350
scaling. You replicate your whole database that can take too much space or too slow it

00:13:04,350 --> 00:13:10,150
can even crash your browser because of the number of requests. We did a custom solutions

00:13:10,150 --> 00:13:15,030
to fix the third one, I'm not going to tell you because it's already fixed in couch and

00:13:15,030 --> 00:13:20,750
pouch DB and they're going to release it very soon, they will do it better than us. But

00:13:20,750 --> 00:13:27,790
the other two, my advise is think twice about "just" using sink, think twice about what

00:13:27,790 --> 00:13:34,040
you really need to replicate. Use your domain knowledge. As an example for our contact tracing

00:13:34,040 --> 00:13:40,300
mobile application, as I said it was just a drop down with names and then you fill up

00:13:40,300 --> 00:13:45,340
the symptoms right. So we were replicating everything and then we realized, okay, why

00:13:45,340 --> 00:13:50,880
do we need all these documents? Actually, we don't need any contact after three weeks

00:13:50,880 --> 00:13:56,680
because then they are not contacts anymore because the incubation period is over. One

00:13:56,680 --> 00:14:03,740
particular contact tracer only works in one area, not in a whole country. And if people

00:14:03,740 --> 00:14:08,010
turn out to be infected then they are not followed up anymore, I don't need the contacts

00:14:08,010 --> 00:14:13,880
there. If you just change from replicating everything to just replicating this subset

00:14:13,880 --> 00:14:20,320
it's already a hugh improvement. We even went further, okay, but we don't even need all

00:14:20,320 --> 00:14:25,470
the information about this contact, we just need names and IDs, so just to show you the

00:14:25,470 --> 00:14:31,420
kind of creative solutions you can make. This is what we did. This is the remote database

00:14:31,420 --> 00:14:36,120
and this is our document. We were using one document per person, which is not the best

00:14:36,120 --> 00:14:42,490
choice, I will tell you how to do better afterwards. But, basically we created an index in the

00:14:42,490 --> 00:14:47,640
remote database with names and IDs and we were requesting ‑‑ and creating manually

00:14:47,640 --> 00:14:53,910
a local database, a look up database. And that's all the mobile phone need from the

00:14:53,910 --> 00:14:59,360
remote database, the rest of the work is you can do offline and the phone can add more

00:14:59,360 --> 00:15:05,070
follow up information. And it can be synchronized once you have internet. In this case the documents

00:15:05,070 --> 00:15:10,440
are different in the stored database and remote database so you have to do some custom lodging

00:15:10,440 --> 00:15:17,790
too, this is due to the fact that our data model is not ideal. will tell you more later.

00:15:17,790 --> 00:15:23,690
In a completely different sample we had the call center where the data set is much bigger

00:15:23,690 --> 00:15:29,560
so we tried to reduce it. But the smallest at that state was still way too big. And also

00:15:29,560 --> 00:15:34,280
we were doing something funny here because I told you that with the contact tracing and

00:15:34,280 --> 00:15:40,050
the task force application we were speeding up the time the paper information will arrive

00:15:40,050 --> 00:15:46,560
to the operations centers from twelve hours to almost instantly, right. And here in the

00:15:46,560 --> 00:15:51,410
call center it was different, we had people working side by side, people receiving calls

00:15:51,410 --> 00:15:57,860
and people sending ambulances for example, and if I take my call and put it on paper

00:15:57,860 --> 00:16:02,850
I can just hand it to the person sending the ambulance, however the way we were doings

00:16:02,850 --> 00:16:07,500
it was sending the information all the way to the internet and back. And if there is

00:16:07,500 --> 00:16:13,240
no internet in two hours, it takes two hours to transfer the information. So that didn't

00:16:13,240 --> 00:16:20,120
make so much sense. That we released is that we were sort of trying to solve a problem

00:16:20,120 --> 00:16:26,790
for the sake of solving the problem somehow. We didn't need pouch DB we just needed a database

00:16:26,790 --> 00:16:33,300
available at all time. What about in every call center you just have a local pouch DP,

00:16:33,300 --> 00:16:39,670
it's very good at synchronizes between databases when ever there's internet these databases

00:16:39,670 --> 00:16:46,510
will synchronize. To have call centers in places with no internet at all because you

00:16:46,510 --> 00:16:52,070
can hire a dedicated telephone line between call centers and then it would be the second

00:16:52,070 --> 00:16:58,980
call center responsibility to synchronize to the Cloud. As colleague of mine says building

00:16:58,980 --> 00:17:07,750
off line applications is basically building distributor systems. So my advise is solve

00:17:07,750 --> 00:17:13,780
real world problems, not software problems and just replicate what you need. The second

00:17:13,780 --> 00:17:19,610
problem you may find when working with off line applications is conflicts between documents.

00:17:19,610 --> 00:17:27,930
What do I mean? So, again, this is our remote database, our contact tracer forms, imagine

00:17:27,930 --> 00:17:32,670
for simplicity that they can only contact the internet throughout the night. So the

00:17:32,670 --> 00:17:40,310
night of day two they replicate the remote database to the local phones and then day

00:17:40,310 --> 00:17:45,890
three one of the contact tracers go to follow up on the person. At might on day three there's

00:17:45,890 --> 00:17:51,150
no internet for some reason. Day four the other contract tracers go to follow up on

00:17:51,150 --> 00:17:58,170
the person and again at night it synchronize, this time it works. But, what pouch DB says,

00:17:58,170 --> 00:18:04,230
okay guys I have one document and you both have modified and I have no idea which one

00:18:04,230 --> 00:18:10,750
of you is right. So couch DB feels like this this is a conflict and it's for you to the

00:18:10,750 --> 00:18:15,480
side what to do. It's fine, you can do that, you don't need to do that if you have a proper

00:18:15,480 --> 00:18:22,930
data model. What if you have your documents structure in the a way that things are chained

00:18:22,930 --> 00:18:27,850
together are together and things that change separately are separated. For example we have

00:18:27,850 --> 00:18:32,670
a document with personal information and one document per each follow up. This way there's

00:18:32,670 --> 00:18:38,560
never going to be conflicts the phones are just creating new documents, and these documents

00:18:38,560 --> 00:18:46,130
can be synchronized with pouch DB synchronization directly without any customer logic. No logics

00:18:46,130 --> 00:18:53,310
and also this skips a number of revisions. Revisions is the different versions of the

00:18:53,310 --> 00:19:00,920
documents. So less revisions means better replication and less storage. So, chose your

00:19:00,920 --> 00:19:08,960
data model wisely. And the last thing I want to tell you about is data loss, this is like

00:19:08,960 --> 00:19:15,790
the nightmare of every off line application. We found for a different application that

00:19:15,790 --> 00:19:20,900
was reduced people for a vac ‑‑ that was used for a vaccination trial, we just

00:19:20,900 --> 00:19:27,430
to to collect personal information and take a picture and print a card and they're registered.

00:19:27,430 --> 00:19:34,490
We realized some people have cards but they're not in our database. The problem we figure

00:19:34,490 --> 00:19:41,290
was that some of the phones were deleting the information before replicating to pouch

00:19:41,290 --> 00:19:49,250
DB and we discovered that index DB that is the storage we use for the browser is temporary

00:19:49,250 --> 00:19:57,240
storage, which is pretty bad. The way it works in Chrome is this is your hard drive and this

00:19:57,240 --> 00:20:03,450
is your available space, and Chrome can use one third of it. And every single application

00:20:03,450 --> 00:20:09,760
within Chrome can use up to 20 percent of it. If you have a compute E. 500 Gigas, this

00:20:09,760 --> 00:20:18,380
is quite a lot of space. But if you have a phone, this is maybe not so much. What happens

00:20:18,380 --> 00:20:24,410
when all the space that Chrome has available gets used is that Chrome decides to delete

00:20:24,410 --> 00:20:32,330
the entire data for the least recently used one. So we throughout, okay, but we still

00:20:32,330 --> 00:20:37,210
have a lot of space why would Chrome delete our applicationr? Then we remembered oh, wait

00:20:37,210 --> 00:20:43,930
this application is taking pictures and probably nobody's deleting those pictures, I never

00:20:43,930 --> 00:20:51,150
do. So we are shrinking the space available on disk at some point replication didn't have ‑‑

00:20:51,150 --> 00:20:58,540
was the less recently used and Chrome has to wipe it off. So be careful with this. We

00:20:58,540 --> 00:21:08,670
are investigating whether we can use another storage. So, that was where our some of our

00:21:08,670 --> 00:21:15,370
mistakes. We did more mistakes. We will do more mistakes still. But, it was worth it

00:21:15,370 --> 00:21:21,860
and it was a lot of fun. We discovered most of the mistakes we did was because this was

00:21:21,860 --> 00:21:27,880
state of the art tech so we didn't know so much about it. It was new for us and it was

00:21:27,880 --> 00:21:33,140
new for the internet too, not so many pause in the stack flow, not 50 tutorials about

00:21:33,140 --> 00:21:40,840
how to scale. So, yeah, we learned a lot in the process. What I can recommend you if you

00:21:40,840 --> 00:21:46,410
work with the state of the art technology is get an expert. We were lucky as to have

00:21:46,410 --> 00:21:51,440
one of the core developers of couch DB joining us, he didn't arrive on time to present us

00:21:51,440 --> 00:21:58,610
from doing all the mistakes, but helped us fix it. He's laughing. And also don't forget

00:21:58,610 --> 00:22:03,590
you have the community. All these are Open Source projects and the people who are developing

00:22:03,590 --> 00:22:09,470
them are var passionate about it. And if you have an interesting project and you are pushing

00:22:09,470 --> 00:22:14,559
the limits and if you're nice, of course, remember to be nice, they will probably help

00:22:14,559 --> 00:22:21,830
you. And you can help them, you can fix back if you feel you can do it. Or you can add

00:22:21,830 --> 00:22:27,570
the information on the internet ‑‑ they don't need to keep repeating the same stuff

00:22:27,570 --> 00:22:38,020
over and over. So I talk a lot about ‑‑ I talk a lot about deaths and sick people

00:22:38,020 --> 00:22:44,300
and this is pretty sad topic, but I wanted to finish with a little bit brighter note.

00:22:44,300 --> 00:22:49,170
I'm going to show you the status of the Ebola outbreak in West Africa. There is two new

00:22:49,170 --> 00:22:56,100
cases last week in G oarynea which is good compared to what happened before. No new case

00:22:56,100 --> 00:23:05,210
in Sierra Leone there is hope for theout break to end maybe and the Liberia and Nigeria the

00:23:05,210 --> 00:23:20,540
outbreak has ended already. (Applause) I know that our JavaScript application didn't finish

00:23:20,540 --> 00:23:27,790
the outbreak, I like to think that whelped and we saved some lives even if only a few.

00:23:27,790 --> 00:23:33,010
And I can only recommend to work on a project with impact ‑‑ however we shouldn't stop

00:23:33,010 --> 00:23:39,980
here. Ebola was quite high sickness because it's pretty terrible. But there are many other

00:23:39,980 --> 00:23:45,380
sickness that nobody's caring so much about. We're doing now some work in polio maybe we'll

00:23:45,380 --> 00:23:50,130
deal with measles afterwards there is always a lot of things you can do. You don't have

00:23:50,130 --> 00:23:56,610
to just work in emergencies you can prepare for when the emergencies arrive. As time magazine

00:23:56,610 --> 00:23:56,630
said, when the next epidemic the world must learn the lesson of this one, be better prepared,

00:23:56,630 --> 00:23:56,640
less fearful, run toward the fire and put it out together. Thank you. (Applause).

00:23:56,640 --> 00:23:57,280
>> Thank you, Patricia. That was excellent. I had the great privilege of being able to

00:23:57,280 --> 00:23:58,440
work on this as well. I want was really a very interesting and very cool to do. And

00:23:58,440 --> 00:23:58,580
if you're in the tech scene and you desperately want to disrupt something that's something

00:23:58,580 --> 00:23:58,660
to disrupt. Don't help rich people do laundry, help fight diseases. (Applause).

00:23:58,660 --> 00:23:58,809
>> Okay, we have a few more minutes but not quite enough to have a proper break, so I'll

00:23:58,809 --> 00:23:59,240
just stand here and talk. I'd like to introduce myself, I'm Alex, I'll be your host for the

00:23:59,240 --> 00:24:00,010
afternoon. Yeah, Whoop ‑‑ thank you. I said it once before ‑‑ three years

00:24:00,010 --> 00:24:00,350
before was my first conference talk, it was a lot like now just a lot more terrified.

00:24:00,350 --> 00:24:01,540
What I really want to say is you can stand up here too if you want. If you haven't ever

00:24:01,540 --> 00:24:02,510
done a conference talk before, it's very well within your reach. The Conf is open to speakers

00:24:02,510 --> 00:24:03,790
and topics of just about any purrtion this is literally and figuratively a space for

00:24:03,790 --> 00:24:05,730
a broad range of topics and speakers. Yeah, very much like to encourage you to submit

00:24:05,730 --> 00:24:06,780
to the CFP for next year and speak at other conferences. It's also an interesting opportunity

00:24:06,780 --> 00:24:07,370
for your life and job, you get to meet a lot of people, you get to travel as well. Travel

00:24:07,370 --> 00:24:07,740
the world meet interesting people and lecture them about garbage collection, if you will.

00:24:07,740 --> 00:24:08,190
And, yeah, it's a great way to, you know, further your career a bit. It's very easy

00:24:08,190 --> 00:24:08,620
to convince people that you're an expert on something if you have three video of conference

00:24:08,620 --> 00:24:09,040
talks from all over the world with you talking about that thing. So, yeah. Conferences need

00:24:09,040 --> 00:24:09,440
speakers and speakers come from people like you or literally me, and yeah, so please.

00:24:09,440 --> 00:24:09,900
If you don't have any experience, go to a local meet up, speak there, and, you know,

00:24:09,900 --> 00:24:10,850
get used to the feeling. And then who knows maybe they'll fly you here and give you a

00:24:10,850 --> 00:24:10,960
great opportunity and great food and then one day you'll be up here too. Yeah. So, oh,

00:24:10,960 --> 00:24:11,080
God that was only two minutes, terrible, I need to talk slower. Any way the next talk

00:24:11,080 --> 00:24:11,190
is also, in a way interested in offline communications but not really networking in a very, very

00:24:11,190 --> 00:24:11,280
interesting way. There'll be extremely funky live demos and ‑‑ Funky live demos () I

00:24:11,280 --> 00:24:11,410
would like to wait until it's actually quarter to so the people in the other room have time

00:24:11,410 --> 00:24:11,520

YouTube URL: https://www.youtube.com/watch?v=1sLjWlWvCsc


