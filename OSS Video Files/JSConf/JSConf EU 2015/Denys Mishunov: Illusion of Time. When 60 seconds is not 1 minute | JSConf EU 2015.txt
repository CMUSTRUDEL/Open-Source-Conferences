Title: Denys Mishunov: Illusion of Time. When 60 seconds is not 1 minute | JSConf EU 2015
Publication date: 2015-10-19
Playlist: JSConf EU 2015
Description: 
	What is common for Walt Disney World, airports and magicians? All of these are distorting user’s perception to build illusions that make us feel good even though we don’t notice them so easily. Those are time illusions. Developers, as magicians, can use the same techniques to distort users’ perception of time to deliver fast and competitive products. The talk is about psychology, perception, time and, of course, illusions.

Intro music by @halfbyte
Captions: 
	00:00:24,100 --> 00:00:33,930
Hi. I'm here to talk to you about time, but before we begin let me make one announcement,

00:00:33,930 --> 00:00:42,339
recently there is a huge popularity in conference talks, I have to tell you one thing, this

00:00:42,339 --> 00:00:52,129
talk, this thing doesn't work I'm sorry, popularity in animated GIFs as conference talks.

00:00:52,129 --> 00:01:35,290
Oh I'm sorry, yes, it's gone. I'm so sorry. This has never happened before. I'm sorry.

00:01:35,290 --> 00:01:38,310
Let's try once again, I'm sorry.

00:01:38,310 --> 00:01:39,140
Yes.

00:01:39,140 --> 00:01:44,090
FROM THE FLOOR: Hooray!! {Laughter} {Applause}.

00:01:44,090 --> 00:01:53,090
YES!! Animated gifs, this talk is totally and 100% animated gifs free! As part of that

00:01:53,090 --> 00:02:00,530
we have rehearsed this talk has never been tested on animals, you can consume this talk

00:02:00,530 --> 00:02:02,580
and apply it whenever you want.

00:02:02,580 --> 00:02:11,980
Now, let's begin in 1742 Benjamin Franklin, in his book writes, "Remember that time is

00:02:11,980 --> 00:02:18,239
money." This still proves today in digital reality of 2015.

00:02:18,239 --> 00:02:23,269
Recent research shows that site loading in one second compared to a site that closes

00:02:23,269 --> 00:02:34,269
in 3 seconds as 50% lower bounce rate, 22% higher conversion rate. This is a lot. Another

00:02:34,269 --> 00:02:41,909
research shows that for every second of performance improvement for Wal-Mart.com they gave 2%

00:02:41,909 --> 00:02:47,749
in conversion rate, doesn't sound that much, now we are talking about a company with 482

00:02:47,749 --> 00:02:54,120
billion dollars in annual revenue from e-commerce, now we're talking about a lot of money. Firefox

00:02:54,120 --> 00:03:01,049
made research and figured out that for shaving off 2.2 seconds from the Firefox browser download

00:03:01,049 --> 00:03:09,409
page would give them 15.4% in conversion rate that would result in more than 10m down loads

00:03:09,409 --> 00:03:21,749
per year more. This is huge, so time matters. Performance matters. There is one issue though,

00:03:21,749 --> 00:03:29,040
statistics that uses these numbers leaves out one important thing, the users don't really

00:03:29,040 --> 00:03:31,989
care about statistics. .

00:03:31,989 --> 00:03:39,700
Users, our main stakeholders who give us money, who give us down loads, they don't care about

00:03:39,700 --> 00:03:45,959
absolute numbers in seconds, milliseconds, number of down loads and so on and so on.

00:03:45,959 --> 00:03:54,510
Let me give you one example, here is a site the title of which I deliberately hide, but

00:03:54,510 --> 00:04:00,549
we can see that it is visually complete in more than five seconds, we know it happens

00:04:00,549 --> 00:04:07,340
only after 8 seconds. This is crazy, people, if we were using only statistics we would

00:04:07,340 --> 00:04:14,419
say this site is in desperate need or performance improvement, but would you be surprised if

00:04:14,419 --> 00:04:25,240
I tell you this is a site that has 89 billion US dollars in revenue any way, you know why?

00:04:25,240 --> 00:04:27,520
It's Amazon.com.

00:04:27,520 --> 00:04:31,759
Using these statistics we would, we could conclude there is a crisis out there, but

00:04:31,759 --> 00:04:37,280
fear not, let's see how this site works in a real browser.

00:04:37,280 --> 00:04:45,280
We type in URL and this site is almost instantly here. So, why does this happen? Statistics

00:04:45,280 --> 00:04:52,669
tells us a different story, because performance is not about statistics. Even though being

00:04:52,669 --> 00:04:58,099
an essential part of what we call 'Performance now' absolute numbers do not define performance

00:04:58,099 --> 00:05:03,160
site, performance is not maths, it's about perception.

00:05:03,160 --> 00:05:11,740
Today, I am not going to tell you how to shave off milliseconds of your page loading times,

00:05:11,740 --> 00:05:18,229
I'm not going to tell you about absolute numbers of time at all, instead I will give you a

00:05:18,229 --> 00:05:23,909
little bit different perspective on performance, I will tell you, using some simple but very

00:05:23,909 --> 00:05:31,530
effective techniques, how to manage users perceptions. Time, as we perceive it in our

00:05:31,530 --> 00:05:38,300
brains, sometimes it's completely different to the time that we can watch on the stop

00:05:38,300 --> 00:05:40,629
watch.

00:05:40,629 --> 00:05:45,970
To help us in this journey we will employ the most powerful tool that we have at our

00:05:45,970 --> 00:05:54,780
disposal, being our brain. This is the tool where all the illusions of time happen.

00:05:54,780 --> 00:06:00,560
Before we begin I might tell you a shocking truth not all your optimisation techniques

00:06:00,560 --> 00:06:08,490
and results can be even noticeable by a user. In the

00:06:08,490 --> 00:06:18,639
19th Century, German practical psychologist Weber and later his student postulated a law

00:06:18,639 --> 00:06:29,530
that is now called Weber-Fechner law, the just noticeable differences between the two

00:06:29,530 --> 00:06:38,680
stimuli, time is no exception to this law, this law can be applied to our durations.

00:06:38,680 --> 00:06:46,099
Let's imagine we have a duration, any duration and the law says that there is a certain value,

00:06:46,099 --> 00:06:56,270
JND, that is a constant coefficient of this duration, no matter what duration you have.

00:06:56,270 --> 00:07:03,110
Experiments show that for small periods of times, less than 30 seconds, these there are

00:07:03,110 --> 00:07:10,759
times that we, as web developers are particularly interested in, for this short of time, the

00:07:10,759 --> 00:07:18,949
Weber law can be approximated to a simple 20% rule. What does it mean? Let's say you

00:07:18,949 --> 00:07:25,879
have a page that is down loading in 2 seconds, in order for your user to just notice any

00:07:25,879 --> 00:07:36,069
difference in time you have to make your page faster in 2 seconds minus 20% being 1.6 seconds,

00:07:36,069 --> 00:07:43,680
so if your page downloading slower than 1.6 seconds the users don't notice the difference,

00:07:43,680 --> 00:07:52,060
so why do we spend so much time dealing with a tiny bit of milliseconds because users just

00:07:52,060 --> 00:07:53,770
don't notice it.

00:07:53,770 --> 00:08:01,449
Another thing is that 20% can be used as for performance optimisation but it can also be

00:08:01,449 --> 00:08:06,349
used for regression allowance. For example, you deploy a feature to your site or your

00:08:06,349 --> 00:08:11,939
product that slows done your site. Applying this 20% rule you can figure out your users

00:08:11,939 --> 00:08:18,659
will even notice this difference. If, for example, your regression is 15%, you just

00:08:18,659 --> 00:08:23,599
push the feature, forget about it and keep going. You don't need to make your site as

00:08:23,599 --> 00:08:30,909
fast as it was before the feature, users just don't notice the difference, this is psychology.

00:08:30,909 --> 00:08:36,050
There is one catch in this rule though, we are talking about 'Noticeable', difference.

00:08:36,050 --> 00:08:42,849
Noticeable doesn't mean meaningful. In order for users to appreciate the optimisations

00:08:42,849 --> 00:08:49,410
that you do, you have to go way beyond the 20% threshold.

00:08:49,410 --> 00:08:55,470
To understand how our brain perceives time we need to figure out some properties of this

00:08:55,470 --> 00:09:07,070
time. In 20th Century philosophy Martin Heidegger, in this book being on time, writes this, "Time

00:09:07,070 --> 00:09:13,110
persists merely as the consequence of the events taking place in space", so time and

00:09:13,110 --> 00:09:14,320
events.

00:09:14,320 --> 00:09:23,370
According to Heidegger, time consists of nearest events and has beginning and end. All the

00:09:23,370 --> 00:09:28,399
events within this time have their beginning and end as well, as long as we don't have

00:09:28,399 --> 00:09:34,230
any hard core philosophers in this room, we might agree with this.

00:09:34,230 --> 00:09:38,810
For the sake of this talk, we'll call the beginning of the event 'Start event marker',

00:09:38,810 --> 00:09:45,870
at the moment one event is over, we'll call it 'End event marker", so start and end event

00:09:45,870 --> 00:09:55,589
marker. Another property of almost every event, every event has active phase and passive phase,

00:09:55,589 --> 00:10:02,480
active phase is when your brain is mentally active, it doesn't mean how active, it might

00:10:02,480 --> 00:10:07,899
be pure mental activity, it might be related to physical activity, but your brain is busy

00:10:07,899 --> 00:10:16,360
doing something. In passive phase your brain has no other option other than just wait for

00:10:16,360 --> 00:10:24,029
the event to be over. We can, using different techniques, manipulate how long are these

00:10:24,029 --> 00:10:36,070
phases. Thus manage the wait. The problem is that this passive part is the most dangerous

00:10:36,070 --> 00:10:41,880
thing, this is when people complain about long waits, they mean exactly this, because

00:10:41,880 --> 00:10:49,250
active phase usually is not perceived as a wait at all for people, they're busy. Research

00:10:49,250 --> 00:10:49,360
at

00:10:49,360 --> 00:10:56,779
MIT but Richard Lawson shows that people in passive wait over estimate the time waiting

00:10:56,779 --> 00:11:10,519
by 36%, this is a lot. Active and passive phase, the third most important thing about

00:11:10,519 --> 00:11:19,839
wait advance is that people just hate passive wait. This is essential. People hate this.

00:11:19,839 --> 00:11:29,440
We all might agree with this. There are multiple techniques to manage this perception of events.

00:11:29,440 --> 00:11:36,639
We can, using this information I gave you, consider that in order to reduce this so hated

00:11:36,639 --> 00:11:42,010
passive wait we have to increase the active phase of every event, then people will consider

00:11:42,010 --> 00:11:47,680
that that event takes less time than it actually does. All the techniques for managing this

00:11:47,680 --> 00:11:55,620
boil down to two simple once, the first one being pre-emptive start, in this case we deal

00:11:55,620 --> 00:12:03,370
with only one start event marker, somehow we should move this marker in user's perception,

00:12:03,370 --> 00:12:10,529
closer to the end. Since we don't do anything to the original event time, we just do this

00:12:10,529 --> 00:12:18,149
in the user's brain, what happens in this last, in this part? Well, some sort of magic,

00:12:18,149 --> 00:12:24,180
or rather something that your users don't need to know about. Let's see some examples.

00:12:24,180 --> 00:12:31,230
In 2009, research of Houston airport started getting an interesting and unusual type of

00:12:31,230 --> 00:12:37,089
complaints, people were not satisfied with long baggage handling times. So administration

00:12:37,089 --> 00:12:41,860
decided ok we will help people and they increased the number of handlers on the baggage line,

00:12:41,860 --> 00:12:47,579
that dropped the overall time of handling to eight minutes, anybody who is travelling

00:12:47,579 --> 00:12:52,199
knows that eight minutes from the moment you leave the plane to the moment you get the

00:12:52,199 --> 00:13:06,410
bags on carousel is not that mean, in Manchester the fast time in UK, 6.5 minutes, surprisingly

00:13:06,410 --> 00:13:09,730
enough the number of complaints didn't drop.

00:13:09,730 --> 00:13:16,269
Administration decided to investigate the problem, they figured out yes indeed the overall

00:13:16,269 --> 00:13:23,459
handling time is eight minutes, in order to get from the aeroplane to the baggage carousel

00:13:23,459 --> 00:13:29,320
for the average person requires 1 minute, the rest of the seven minutes the person stands

00:13:29,320 --> 00:13:33,360
there waiting for his bags to show up.

00:13:33,360 --> 00:13:40,430
Employing the pre-emptive start technique, administration came out with a really simple,

00:13:40,430 --> 00:13:46,360
but very effective solution, what they did they started routing the planes to a terminal

00:13:46,360 --> 00:13:54,230
further from the baggage carousel now it takes an average person 6 minutes to go from the

00:13:54,230 --> 00:13:59,910
plane to the baggage carousel six minutes and then two minutes waiting for the bag.

00:13:59,910 --> 00:14:08,019
So instead of one minute of active phase they gave passengers 6 minutes of active phase.

00:14:08,019 --> 00:14:13,250
Instead of 7 minutes of waiting, they gave them only 2 minutes of passive waiting. Guess

00:14:13,250 --> 00:14:20,329
what, the number of complaints dropped to zero. People didn't mind going longer, they

00:14:20,329 --> 00:14:23,089
just didn't want to stand and wait.

00:14:23,089 --> 00:14:31,509
This is off line, do we have examples closer to online we are front line developers. We

00:14:31,509 --> 00:14:40,470
have example with the, safari has pre-load top hits, how does it work, you type in the

00:14:40,470 --> 00:14:48,180
URL in the browser and you get this 'Top hits' thing at the top, if you didn't disable it

00:14:48,180 --> 00:14:55,399
deliberately. What is it? While you are typing your URL, safari tries to guess what page,

00:14:55,399 --> 00:15:03,649
based on your history, what page are you trying to reach. While you are typing your URL safari

00:15:03,649 --> 00:15:09,680
is already pre-downloading this page for you, so then when you click, "Go", your page is

00:15:09,680 --> 00:15:18,009
here almost instantly. While you are typing the URL safari is pre-loading the page, the

00:15:18,009 --> 00:15:24,620
same browser opening the new tab. You click on the link, choose,

00:15:24,620 --> 00:15:31,399
"Open a new tab", sometimes animation and then the page is loaded. If we get into this

00:15:31,399 --> 00:15:36,970
tabs animation a bit closer, we will notice, I don't know whether everybody sees here,

00:15:36,970 --> 00:15:44,079
but there is this short blue line indicating that the page is in the downloading process

00:15:44,079 --> 00:15:52,420
already. So if we - while the animation progresses, this bar is progressing as well, why you are

00:15:52,420 --> 00:15:58,569
enjoying the animation of the tabs, this site is downloading to deliver to you as soon as

00:15:58,569 --> 00:16:04,269
possible, preferably right thereafter animation is over.

00:16:04,269 --> 00:16:14,550
In our work we are starting getting this fancy, prefix, all the attributes that help us speed

00:16:14,550 --> 00:16:21,459
up our sites as well. They even go being a technical solution they aim for the same thing

00:16:21,459 --> 00:16:26,940
that I was telling you, to reduce the passive wait by increasing the active wait for you.

00:16:26,940 --> 00:16:31,930
While you are downloading a page these attributes are already pre-loading resources you might

00:16:31,930 --> 00:16:38,839
need on the next page, with that reducing your passive wait time when you get to those

00:16:38,839 --> 00:16:39,629
pages.

00:16:39,629 --> 00:16:47,250
So, in the pre-emptive start technique, it all starts with the active phase and then

00:16:47,250 --> 00:16:55,360
short passive wait at the end. Similarly to this, we can have early completion technique,

00:16:55,360 --> 00:17:01,639
where we deal now with end event marker that we shift, somehow, in users' mind closer to

00:17:01,639 --> 00:17:06,069
the beginning and have it right there at the end.

00:17:06,069 --> 00:17:11,579
A good example of this technique is pretty much any video streaming service like YouTube

00:17:11,579 --> 00:17:16,280
for example, it all starts with a passive wait. If you click the play button the spinner

00:17:16,280 --> 00:17:23,459
is showing up to indicate that the video is in downloading process. So you are in passive

00:17:23,459 --> 00:17:29,970
wait you have nothing else to do you just sit and wait, but then, once the first possible

00:17:29,970 --> 00:17:38,760
to view chunk of the video is downloaded it starts playing in your video player, hence

00:17:38,760 --> 00:17:44,880
switching you to the active phase because your brain now is busy watching the downloaded

00:17:44,880 --> 00:17:50,940
part while the original event of downloading the whole movie is still in progress in the

00:17:50,940 --> 00:17:58,140
background. You just don't mind because your brains busy. So we start with short passive

00:17:58,140 --> 00:18:03,960
wait, and switch user to the active phase as soon as possible. Let's get back to our

00:18:03,960 --> 00:18:11,200
Amazon example but now with DevTools. In particularly we're interested in the timeline. If you want

00:18:11,200 --> 00:18:17,970
to analyse Amazon.com all the essential assets required to render the top of the page that

00:18:17,970 --> 00:18:23,960
is visible to user immediately, these assets like images and CSS and text are ready in

00:18:23,960 --> 00:18:29,770
less than a second. They are ready to be rendered and they are rendered. This is what happens

00:18:29,770 --> 00:18:35,289
when this assets are rendered on the screen user is switched from passive phase of the

00:18:35,289 --> 00:18:39,530
wait, all the way to activated because there is something on the screen that users can

00:18:39,530 --> 00:18:46,179
on assume already. They don't care whether it's 5 or 6 or 7 seconds after this switch

00:18:46,179 --> 00:18:53,070
the page is keeps downloading this is where statistics doesn't give us real picture of

00:18:53,070 --> 00:18:57,000
how users perceive your sites.

00:18:57,000 --> 00:19:02,690
This is great where you have active phase, but what happens if for example your event

00:19:02,690 --> 00:19:11,640
doesn't have obvious active phase. Well we create one. In the beginning of 20th century

00:19:11,640 --> 00:19:16,780
managers of sky scrapers and high buildings in US started getting a lot of people living

00:19:16,780 --> 00:19:22,980
in these buildings on long waiting for the elevators. Long wait times so people had to

00:19:22,980 --> 00:19:28,230
wait for 10, 15 minutes to get to elevator during the rush hours, and of course they

00:19:28,230 --> 00:19:28,929
were a bit

00:19:28,929 --> 00:19:36,390
nervous when they were rushing to work or something. There was no technical solution,

00:19:36,390 --> 00:19:43,679
no easy technical solution you cannot build more elevators in existing buildings you cannot

00:19:43,679 --> 00:19:51,070
also tear down the building and build a new one with 5 levels. From here the story diverges.

00:19:51,070 --> 00:19:58,030
Designers say it was a designer, but engineer say it was an engineer, but support somebody

00:19:58,030 --> 00:20:07,120
came up with an idea and the idea was mirrors. Mirrors all the way from the floor to ceiling

00:20:07,120 --> 00:20:14,409
in the lobby where people are waiting for the elevator itself, and guess what, after

00:20:14,409 --> 00:20:19,600
that the number of complaints dropped to zero. What happened?

00:20:19,600 --> 00:20:24,220
Before mirrors the whole process of waiting for an elevator was pure passive wait there's

00:20:24,220 --> 00:20:30,700
no active phase, people had to stand and wait for the elevator. With employing the windows

00:20:30,700 --> 00:20:36,200
we switch the whole passive wait into the active phase, because people looking at the

00:20:36,200 --> 00:20:40,630
mirror they keep their brain busy they look at themselves before going to work they look

00:20:40,630 --> 00:20:46,820
how they look like after the hard day working they peek at each other secretly and their

00:20:46,820 --> 00:20:50,520
brain is busy.

00:20:50,520 --> 00:20:59,370
Long after this story, many years after that, some of us still use mirrors to entertain

00:20:59,370 --> 00:21:10,950
their brain. {laughter} to conclude this, I would tell you that modern front-end developer

00:21:10,950 --> 00:21:19,630
should always consider performance, but performance with only technical means is just simply not

00:21:19,630 --> 00:21:26,890
enough. Modern front-end developers have to be technicians, they have to be psychologist

00:21:26,890 --> 00:21:33,240
and a little about of magician. We should show the user what they want to see while

00:21:33,240 --> 00:21:41,309
doing the real job behind the stage. Good developer knows how to build fast website,

00:21:41,309 --> 00:21:49,960
excellent developer knows how to make user believe that the site is fast enough for them.

00:21:49,960 --> 00:21:53,740

YouTube URL: https://www.youtube.com/watch?v=18s7jJEJeOc


