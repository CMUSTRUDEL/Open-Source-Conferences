Title: Razvan Caliman: Disconnected Networking | JSConf EU 2015
Publication date: 2015-10-11
Playlist: JSConf EU 2015
Description: 
	There was a time when data connections like WiFi and Bluetooth didn’t exist, yet people still managed to send information over long distances using clever encodings like Morse Code, sound waves and visual impulses.

What can we learn from that?

This talk looks at ways to use web platform capabilities, like the Web Audio API, Ambient Light Events and Touch Events, to revisit old data transmission techniques and apply them in new contexts. We’ll use demos to explore ultrasonic networking between air-gapped devices, indoor positioning without GPS and sending data through touch.

Finally, we’ll look at the privacy implications these unconventional networking capabilities bring.

Intro music by @halfbyte
Captions: 
	00:00:24,560 --> 00:00:27,470
Hi everyone, and thank you for being here.

00:00:27,470 --> 00:00:31,480
I am Razvan, I work for Adobe with a bunch of awesome

00:00:31,480 --> 00:00:35,530
people on interesting things like CSS shapes, masking,

00:00:35,530 --> 00:00:39,390
CSS blend modes, CSS regions, some of you may

00:00:39,390 --> 00:00:42,960
know me for building the CSS shapes added to your Chrome

00:00:42,960 --> 00:00:45,890
extension which allows you to edit shapes on the browser.

00:00:45,890 --> 00:00:48,930
In general I work on practical things.

00:00:48,930 --> 00:00:53,420
None of that matters today, because today I want to show

00:00:53,420 --> 00:00:56,780
you something which I'm fascinated about, and

00:00:56,780 --> 00:01:00,980
that is unconventional uses of technology to admit

00:01:00,980 --> 00:01:02,960
data and input.

00:01:02,960 --> 00:01:09,979
This isn't so much a talk, but actually just a collection of demos other people have built,

00:01:09,979 --> 00:01:12,360
and stories I founding really interesting in the

00:01:12,360 --> 00:01:16,470
sense that they use technology in unexpected ways with

00:01:16,470 --> 00:01:21,320
unexpected results ... so today I'm going to go briefly

00:01:21,320 --> 00:01:25,450
into sound, how we can transmit data using sound, and

00:01:25,450 --> 00:01:29,680
how we can build our own cheap version of the litmotion

00:01:29,680 --> 00:01:31,820
just using sounds on your laptop.

00:01:31,820 --> 00:01:36,399
Then I'm just going to talk about a way of using light to communicate

00:01:36,399 --> 00:01:38,890
to your computer, and if there's time depending, two

00:01:38,890 --> 00:01:41,130
short stories about interesting ways to transmit

00:01:41,130 --> 00:01:43,200
input to devices.

00:01:43,200 --> 00:01:47,369
So without further ado, let's begin.

00:01:47,369 --> 00:01:49,619
The year is 2013, October.

00:01:49,619 --> 00:01:54,079
I come across this article on arstechnica, and it is about a

00:01:54,079 --> 00:01:58,280
respected security researcher who supposedly found this

00:01:58,280 --> 00:02:00,479
sophisticated piece of malware.

00:02:00,479 --> 00:02:04,929
This was infecting his machines and spreading by ultrasound.

00:02:04,929 --> 00:02:09,270
What is more devious about it is that it couldn't be diagnosed

00:02:09,270 --> 00:02:12,510
with forensic stools, and it didn't leave any traces.

00:02:12,510 --> 00:02:14,620
That was odd.

00:02:14,620 --> 00:02:20,319
This guy found out the ultrasound was the means of infection by repeatedly removing

00:02:20,319 --> 00:02:26,300
stuff from the computers, the hard drive, network interface,

00:02:26,300 --> 00:02:29,370
the memory, he changed so many components, and

00:02:29,370 --> 00:02:32,140
it wasn't until he actually removed the soundcard, which

00:02:32,140 --> 00:02:34,819
was controlling the speakers and microphone, that

00:02:34,819 --> 00:02:36,260
the infection stopped.

00:02:36,260 --> 00:02:41,269
Now, these claims are being contested by other security researchers who haven't been able

00:02:41,269 --> 00:02:45,599
to reproduce the same effects using the logs.

00:02:45,599 --> 00:02:49,629
But other security researchers have proved that it is actually

00:02:49,629 --> 00:02:53,150
possible to infect the bias of another computer just using

00:02:53,150 --> 00:02:55,349
ultrasound.

00:02:55,349 --> 00:02:57,739
Quite scary, if you ask me.

00:02:57,739 --> 00:03:01,480
Around the same time, Boris Smus is an engineer for

00:03:01,480 --> 00:03:05,959
Google, he was playing around with the WebAudio API and

00:03:05,959 --> 00:03:10,329
trying to send data between devices using messages

00:03:10,329 --> 00:03:12,680
encoded as ultrasound.

00:03:12,680 --> 00:03:16,599
And he put together this library called Sonicnet.JS, which I'm going to use

00:03:16,599 --> 00:03:20,640
today, and the way this works is that it takes a part

00:03:20,640 --> 00:03:23,659
of the sound spectrum, specifically the part where you

00:03:23,659 --> 00:03:27,579
can't hear it, the ultrasound spectrum, and it chunks that

00:03:27,579 --> 00:03:31,540
into various bits and pieces and each letter of the alphabet

00:03:31,540 --> 00:03:34,531
gets a portion of this ultrasound spectrum, so

00:03:34,531 --> 00:03:38,550
when you want to send a message, you essentially encode

00:03:38,550 --> 00:03:42,120
this as ultrasound and send it in a frequency which,

00:03:42,120 --> 00:03:44,840
as adults, we can't hear.

00:03:44,840 --> 00:03:50,519
Some pets can hear it and small children, but it is kind of invisible or inaudible,

00:03:50,519 --> 00:03:52,390
but rather than talk about it, I want to show

00:03:52,390 --> 00:03:53,989
you a demo.

00:03:53,989 --> 00:03:58,780
Full disclosure, this is a demo idea I took from Boris's

00:03:58,780 --> 00:04:00,239
original experiments.

00:04:00,239 --> 00:04:03,319
I just adapted it for this presentation.

00:04:03,319 --> 00:04:06,290
So all credit goes to him on that.

00:04:06,290 --> 00:04:09,230
What I'm going to do here, exit full screen mode and

00:04:09,230 --> 00:04:11,750
on the right-hand side of the screen you're going to see

00:04:11,750 --> 00:04:14,570
that I have this demo running on two devices: one is my

00:04:14,570 --> 00:04:17,460
laptop and the other is a phone I have connected over

00:04:17,460 --> 00:04:19,910
here via cable.

00:04:19,910 --> 00:04:25,130
They're both running the same demo and what I'm going to try to do is get them synchronised

00:04:25,130 --> 00:04:28,230
just using ultrasound, and I really really hope this

00:04:28,230 --> 00:04:30,590
works because there's so many things to go wrong with

00:04:30,590 --> 00:04:33,000
the demos today.

00:04:33,000 --> 00:04:34,890
Okay.

00:04:34,890 --> 00:04:39,550
So just to get a sense of what is going on here, I'm going to turn on the visualiser.

00:04:39,550 --> 00:04:42,650
This is bouncing around because it is hearing me speak,

00:04:42,650 --> 00:04:44,860
but as I'm going to click on the icons on each one

00:04:44,860 --> 00:04:47,889
of the devices, they are going to send out a message

00:04:47,889 --> 00:04:50,720
in encoded ultrasound, and you're going to see a distinct

00:04:50,720 --> 00:04:53,220
peak towards the right-hand side of the spectrum

00:04:53,220 --> 00:04:54,740
over there.

00:04:54,740 --> 00:04:56,430
Let's try this.

00:04:56,430 --> 00:05:02,240
I'll start with my phone and start sending emoticons to my laptop.

00:05:02,240 --> 00:05:05,990
It works!

00:05:05,990 --> 00:05:11,280
It works!

00:05:11,280 --> 00:05:17,240
This is unexpected.

00:05:17,240 --> 00:05:18,240
It works.

00:05:18,240 --> 00:05:20,680
Most of the time it works.

00:05:20,680 --> 00:05:22,650
My laptop is picking up the ultrasound from the

00:05:22,650 --> 00:05:27,990
phone, the phone itself, sometimes it doesn't actually

00:05:27,990 --> 00:05:31,810
catch its own ultrasound back, so the speaker is over

00:05:31,810 --> 00:05:34,259
here and the microphone is down here.

00:05:34,259 --> 00:05:36,759
And there is actually a big caveat with microphones and

00:05:36,759 --> 00:05:37,759
phones.

00:05:37,759 --> 00:05:39,490
They're optimised for speech, not necessarily for

00:05:39,490 --> 00:05:40,490
ultrasound.

00:05:40,490 --> 00:05:43,780
This is one of the few devices I have which actually works with this.

00:05:43,780 --> 00:05:47,280
But if you don't have ultrasound capable devices, you can do the

00:05:47,280 --> 00:05:51,639
other thing and reverse, you can use audible sound spectrum,

00:05:51,639 --> 00:05:54,759
so I'm going to switch both devices to audible.

00:05:54,759 --> 00:05:55,759
Okay.

00:05:55,759 --> 00:05:56,759
Allow.

00:05:56,759 --> 00:05:58,680
And this is going to blast out a very annoying high

00:05:58,680 --> 00:06:01,520
pitched sound, but doing essentially the same thing, so

00:06:01,520 --> 00:06:08,870
I'll try this with my laptop now.

00:06:08,870 --> 00:06:13,230
You can probably pick it up from my microphone.

00:06:13,230 --> 00:06:15,870
Ah.

00:06:15,870 --> 00:06:20,819
Okay, it worked.

00:06:20,819 --> 00:06:22,190
[applause].

00:06:22,190 --> 00:06:26,569
You can't believe how happy I am.

00:06:26,569 --> 00:06:31,680
I tried it many times, but all props to Boris, who built the library.

00:06:31,680 --> 00:06:36,440
His work is amazing, and he should get the applause.

00:06:36,440 --> 00:06:39,870
So use case for this, we synchronise two devices.

00:06:39,870 --> 00:06:44,009
Google used this library with a few motivations to use Google tone.

00:06:44,009 --> 00:06:46,490
This is a browser extension which allows people who have the

00:06:46,490 --> 00:06:50,780
same extension to share links using audible sound.

00:06:50,780 --> 00:06:53,550
It has a nicer sound, but essentially if you're in

00:06:53,550 --> 00:06:55,441
the room with someone, you want to share a link, you

00:06:55,441 --> 00:06:59,129
just press a button and your laptop just speaks the link

00:06:59,129 --> 00:07:02,250
towards the other device, which is kind of cool.

00:07:02,250 --> 00:07:04,500
It works over handouts, over a lot of things.

00:07:04,500 --> 00:07:08,449
Nobody has to install everything more than Chrome, in this extension.

00:07:08,449 --> 00:07:12,030
The big problem, though, is that you have to -- your

00:07:12,030 --> 00:07:15,770
laptop is always listening to the environment, so it

00:07:15,770 --> 00:07:16,870
can pick up these links.

00:07:16,870 --> 00:07:20,910
And I don't know about you, but that kind of creeps me out, so I don't use it.

00:07:20,910 --> 00:07:23,220
Nonetheless, very cool extension.

00:07:23,220 --> 00:07:27,870
Okay, switching gears to motion sensing using ultrasound.

00:07:27,870 --> 00:07:30,240
This one is very cool.

00:07:30,240 --> 00:07:32,620
So the doppler effect.

00:07:32,620 --> 00:07:34,139
You've all experienced these.

00:07:34,139 --> 00:07:39,580
The doppler effect is this phenomenon of the apparent

00:07:39,580 --> 00:07:44,000
frequency shift of a wave to a static observer as the

00:07:44,000 --> 00:07:47,110
wave is being emitted by something in motion.

00:07:47,110 --> 00:07:50,751
So imagine the last time you heard an ambulance siren, as

00:07:50,751 --> 00:07:53,430
the ambulance is travelling towards you, you're hearing

00:07:53,430 --> 00:07:57,509
a higher and higher pitch and the reason is that the source

00:07:57,509 --> 00:07:59,680
of the sound, the ambulance, is travelling, and each

00:07:59,680 --> 00:08:02,580
soundwave has to travel less and less to get to your

00:08:02,580 --> 00:08:04,940
ear, therefore you're going to have more soundwaves

00:08:04,940 --> 00:08:08,169
hitting your ear as the ambulance travels towards

00:08:08,169 --> 00:08:09,169
you.

00:08:09,169 --> 00:08:11,520
The same thing happens in reverse as it goes away from

00:08:11,520 --> 00:08:15,370
you: soundwaves have to travel longer to get to

00:08:15,370 --> 00:08:18,080
you because the source of the sound is going away, therefore

00:08:18,080 --> 00:08:21,759
the pitch sounds like it is going lower and lower.

00:08:21,759 --> 00:08:24,770
This is one of the fundamental principles in radar.

00:08:24,770 --> 00:08:27,069
In radar, you have a base station which is emitting

00:08:27,069 --> 00:08:29,800
a radio frequency, and it is listening for that same

00:08:29,800 --> 00:08:32,720
frequency around the same spectrum.

00:08:32,720 --> 00:08:36,030
Those radio frequencies are going to bounce back everything

00:08:36,030 --> 00:08:38,720
they hit, so if you have an aeroplane in motion

00:08:38,720 --> 00:08:41,710
coming towards you, the radar is able to use the

00:08:41,710 --> 00:08:44,910
doppler effect in a lot more technology in maths than I'm

00:08:44,910 --> 00:08:47,560
capable of, to basically determine if the aeroplane is

00:08:47,560 --> 00:08:50,630
coming towards it or going away, then using an array

00:08:50,630 --> 00:08:53,930
of radar systems you actually know where that aeroplane

00:08:53,930 --> 00:08:58,000
is in space by triangulating the sound.

00:08:58,000 --> 00:09:03,029
Of course we have everything to build a radar system in the

00:09:03,029 --> 00:09:06,570
computers, first of all replace the base station with

00:09:06,570 --> 00:09:09,390
our laptop speakers, and we have the microphone over

00:09:09,390 --> 00:09:13,930
there, and then we can use our hand to basically understand

00:09:13,930 --> 00:09:16,060
where it is in relationship to the speakers and

00:09:16,060 --> 00:09:19,950
what -- how we're going to do that is use ultrasound.

00:09:19,950 --> 00:09:26,250
Daniel Rapp built this very small library called doppler.

00:09:26,250 --> 00:09:29,690
It sends out an ultrasound from my laptop speakers

00:09:29,690 --> 00:09:31,990
and is also back for the same frequency.

00:09:31,990 --> 00:09:37,010
What you're seeing on screen right now, once it settles, is actually

00:09:37,010 --> 00:09:40,570
my laptop emitting around 20-kilohertz sound.

00:09:40,570 --> 00:09:43,029
You can't hear it, I can't hear it, but it is here.

00:09:43,029 --> 00:09:46,450
There's this graph on the screen here showing the difference between

00:09:46,450 --> 00:09:48,930
the frequency emitted and what's coming back.

00:09:48,930 --> 00:09:51,490
So as I introduce something in the vicinity of the

00:09:51,490 --> 00:09:53,820
speakers, like my hand, and I'm wiggling around, I'm

00:09:53,820 --> 00:09:57,720
able to affect the way the echo is going back.

00:09:57,720 --> 00:10:00,200
Remember, the radar, and the doppler effect.

00:10:00,200 --> 00:10:05,480
And so I can pull up and essentially, that's changing the way the sound

00:10:05,480 --> 00:10:07,440
is reflecting back into the speakers.

00:10:07,440 --> 00:10:10,720
Or I can push down -- [applause].

00:10:10,720 --> 00:10:17,880
I know, it's awesome.

00:10:17,880 --> 00:10:18,880
What can we do with this?

00:10:18,880 --> 00:10:23,260
We're getting quite a lot of resolution here with my hands, but we can

00:10:23,260 --> 00:10:25,590
only look at the peaks and tie these to something.

00:10:25,590 --> 00:10:28,110
So for example, let's say we want to scale a balloon.

00:10:28,110 --> 00:10:34,570
I can do these ample gestures or hit it so it goes

00:10:34,570 --> 00:10:36,020
right back down.

00:10:36,020 --> 00:10:38,920
There you go.

00:10:38,920 --> 00:10:39,920
Very cool.

00:10:39,920 --> 00:10:43,600
This like the poor man's version of the leap motion.

00:10:43,600 --> 00:10:46,300
Therefore we can use it for something practical.

00:10:46,300 --> 00:10:50,339
We have some interference but I can use these gestures, scroll a page

00:10:50,339 --> 00:10:56,860
up and down so I don't actually have to use my mouse.

00:10:56,860 --> 00:10:58,200
[applause].

00:10:58,200 --> 00:11:00,260
This is absolutely interesting because you clapping

00:11:00,260 --> 00:11:03,320
are affecting my demo, but please do that.

00:11:03,320 --> 00:11:05,459
That's fine.

00:11:05,459 --> 00:11:08,300
Because this is actually changing the echo in the room

00:11:08,300 --> 00:11:10,880
that my laptop picks up a different sort of echo as

00:11:10,880 --> 00:11:13,480
people are moving across the room, which is kind of

00:11:13,480 --> 00:11:14,480
cool.

00:11:14,480 --> 00:11:16,540
All right, if you can do these things, we can turn

00:11:16,540 --> 00:11:19,589
into Darth Vader and just turn on and adopt a navigation

00:11:19,589 --> 00:11:21,930
for the entire presentation, and say I want to go

00:11:21,930 --> 00:11:26,029
back -- you've seen this before -- or I want to go

00:11:26,029 --> 00:11:30,139
forward, do we want to plug in for reveal with this?

00:11:30,139 --> 00:11:32,550
Yeah we do.

00:11:32,550 --> 00:11:33,990
Okay.

00:11:33,990 --> 00:11:34,990
That was sound.

00:11:34,990 --> 00:11:36,730
And I'm glad those demos worked.

00:11:36,730 --> 00:11:38,329
Let's move over to light.

00:11:38,329 --> 00:11:42,360
So I want to talk about light.

00:11:42,360 --> 00:11:46,610
The man on the left-hand side of the screen over there is using a device called

00:11:46,610 --> 00:11:51,360
a heliograph ... now a heliograph is a simple system of

00:11:51,360 --> 00:11:55,279
mirrors which focuses sunlight towards a target which is

00:11:55,279 --> 00:11:56,410
farther away.

00:11:56,410 --> 00:12:00,570
Ending a simple system of levers, the operator can

00:12:00,570 --> 00:12:05,320
flashlight towards the target on and off, you can encode

00:12:05,320 --> 00:12:08,500
essentially Morse code, sending it to the other person

00:12:08,500 --> 00:12:10,800
listening to you.

00:12:10,800 --> 00:12:14,529
At the other end, there is another person either with a sighting scope or another

00:12:14,529 --> 00:12:16,820
heliograph line, and what is cool is you can get

00:12:16,820 --> 00:12:21,260
10 miles of range for every inch of the mirror, which is

00:12:21,260 --> 00:12:23,910
kind of amazing.

00:12:23,910 --> 00:12:27,010
The record for range held by a heliograph team is

00:12:27,010 --> 00:12:33,889
300 kilometres, yes, between two mountains using mirrors

00:12:33,889 --> 00:12:36,711
about eight inches in in diameter, and this was

00:12:36,711 --> 00:12:42,220
happening in 1895.

00:12:42,220 --> 00:12:47,209
There's only one drawback to this: if there's no sun, there's no messages.

00:12:47,209 --> 00:12:48,209
There's the limitation.

00:12:48,209 --> 00:12:49,980
If it's raining, we stop.

00:12:49,980 --> 00:12:53,940
So the design evolved to this device called a signalling

00:12:53,940 --> 00:12:56,970
lamp, and still being used by navies today in exercises

00:12:56,970 --> 00:12:59,230
where they have to maintain radio silence.

00:12:59,230 --> 00:13:02,370
So instead of the sun, you have a bright light inside of the device,

00:13:02,370 --> 00:13:04,710
and a series of shutters in front of it.

00:13:04,710 --> 00:13:09,030
The operator is using that lever on the side to open and close

00:13:09,030 --> 00:13:11,519
the shutters, therefore encoding a message and

00:13:11,519 --> 00:13:16,740
send Morse code to a receiver at the other end.

00:13:16,740 --> 00:13:20,870
Bear this in mind as I continue.

00:13:20,870 --> 00:13:22,949
Ambient light event.

00:13:22,949 --> 00:13:29,170
The ambient light event API is something your computer has to essentially detect the light

00:13:29,170 --> 00:13:33,240
level in the room, and adapt your screen intensity

00:13:33,240 --> 00:13:35,430
to the light intensity in your room.

00:13:35,430 --> 00:13:39,279
So right now, we have about 42 locks, there's nothing changing over there.

00:13:39,279 --> 00:13:41,750
If I put my hand in front of the light sensor here, you

00:13:41,750 --> 00:13:43,769
see that's going down.

00:13:43,769 --> 00:13:47,570
Or I can do something else, I can turn on the flashlight and you see that's going to

00:13:47,570 --> 00:13:49,180
go really, really high.

00:13:49,180 --> 00:13:50,610
There you go.

00:13:50,610 --> 00:13:55,860
It's off the charts, absolutely off the charts.

00:13:55,860 --> 00:13:58,970
Okay.

00:13:58,970 --> 00:14:05,779
The textbook example for ambient light events is to adapt the page so you get better readability

00:14:05,779 --> 00:14:06,990
in low light conditions.

00:14:06,990 --> 00:14:10,861
So if I put my hand in front of the light sensor next to the camera, that's

00:14:10,861 --> 00:14:13,300
going to reduce the light, I can change the document

00:14:13,300 --> 00:14:16,240
style sheet so it is better to read in low light.

00:14:16,240 --> 00:14:19,279
As I put my hand away, I can read it, therefore the slide sheet

00:14:19,279 --> 00:14:23,050
changes and I can do this over and over again.

00:14:23,050 --> 00:14:25,680
But notice my hand doesn't really affect too much of the

00:14:25,680 --> 00:14:33,050
light sensor the value is pretty low imports.

00:14:33,050 --> 00:14:38,560
What if we use ambient light events and Morse code?

00:14:38,560 --> 00:14:42,019
What if we can send messages in Morse code to the computer using

00:14:42,019 --> 00:14:44,420
that light sensor?

00:14:44,420 --> 00:14:47,649
Let's try my most brutal demo ever.

00:14:47,649 --> 00:14:49,850
This is optical Morse code, so I'm going to turn on

00:14:49,850 --> 00:14:54,329
an application on my phone which sends SOS, it

00:14:54,329 --> 00:14:57,410
sends any message in Morse code as flashes of light,

00:14:57,410 --> 00:15:02,449
so I'm going to try to send an SOS to my computer.

00:15:02,449 --> 00:15:04,820
Okay.

00:15:04,820 --> 00:15:07,850
So SOS is essentially three dots, three dashes, three

00:15:07,850 --> 00:15:08,850
dots.

00:15:08,850 --> 00:15:11,760
That's really going off the chart over there, which is

00:15:11,760 --> 00:15:12,760
good.

00:15:12,760 --> 00:15:19,260
I like that.

00:15:19,260 --> 00:15:26,480
There you go.

00:15:26,480 --> 00:15:27,480
It worked.

00:15:27,480 --> 00:15:28,480
Cool. applause].

00:15:28,480 --> 00:15:32,230
Just in case you're thinking this is a very engineered demo, I am going to type something

00:15:32,230 --> 00:15:38,149
longer, like JSconf, and this is going to take a while,

00:15:38,149 --> 00:15:39,149
actually.

00:15:39,149 --> 00:15:44,770
So let's try JSconf.

00:15:44,770 --> 00:15:47,840
One thing to note about the ambient light sensor is that this is not

00:15:47,840 --> 00:15:48,840
a stream.

00:15:48,840 --> 00:15:51,920
You're going to get events from the light sensor going

00:15:51,920 --> 00:15:55,300
up and down, but you're not going to get them in a very

00:15:55,300 --> 00:15:58,380
predictable fashion, so I had to build a very simple

00:15:58,380 --> 00:15:59,380
sampler.

00:15:59,380 --> 00:16:00,889
It is basically sampling the light sensor once

00:16:00,889 --> 00:16:03,470
every frame, so really hitting it hard.

00:16:03,470 --> 00:16:05,470
So I can decode those messages.

00:16:05,470 --> 00:16:06,670
Come on.

00:16:06,670 --> 00:16:09,250
F is always difficult.

00:16:09,250 --> 00:16:10,710
JSconf.

00:16:10,710 --> 00:16:12,170
Yes.

00:16:12,170 --> 00:16:16,559
It worked ... [applause].

00:16:16,559 --> 00:16:20,199
So happy about it.

00:16:20,199 --> 00:16:24,680
I am particularly happy that this thing worked, because it shouldn't.

00:16:24,680 --> 00:16:30,259
The reason is so you can argue this thing will only work in Firefox, and

00:16:30,259 --> 00:16:33,350
it is only in Chrome behind the flag, so you need to enable

00:16:33,350 --> 00:16:34,350
it.

00:16:34,350 --> 00:16:35,740
You can argue: well, you should turn on the camera

00:16:35,740 --> 00:16:38,769
and listen to the ambient light event with a much

00:16:38,769 --> 00:16:41,820
higher frequency -- sorry, listen to the camera and

00:16:41,820 --> 00:16:43,959
decode in the images in the camera, but there's only

00:16:43,959 --> 00:16:47,550
one small problem: you need to ask the user for permission

00:16:47,550 --> 00:16:49,000
to use their camera.

00:16:49,000 --> 00:16:53,700
You don't need to ask them for permission to use the ambient light sensor.

00:16:53,700 --> 00:16:56,020
And this is a major privacy concern.

00:16:56,020 --> 00:16:58,420
And the people writing the spec thought about this.

00:16:58,420 --> 00:17:02,680
That's why you're not going to get very predictable and accurate results from

00:17:02,680 --> 00:17:04,230
the light sensor.

00:17:04,230 --> 00:17:08,670
Essentially, because you can do a low file alternative to bluetooth beacons and fingerprint

00:17:08,670 --> 00:17:10,890
people without their knowledge.

00:17:10,890 --> 00:17:14,190
So here is a use-case.

00:17:14,190 --> 00:17:17,920
You're walking around the store, a phone in hand,

00:17:17,920 --> 00:17:20,569
using an application, and that application is looking

00:17:20,569 --> 00:17:23,270
as monitoring light change events.

00:17:23,270 --> 00:17:27,240
You want to enter a store, a light above your head at the entrance

00:17:27,240 --> 00:17:28,940
is flashing a very distinct pattern.

00:17:28,940 --> 00:17:31,950
Your application knows you went into the store.

00:17:31,950 --> 00:17:33,300
You go to an aisle.

00:17:33,300 --> 00:17:35,220
A different light is flashing a different sort of

00:17:35,220 --> 00:17:36,250
pattern.

00:17:36,250 --> 00:17:40,590
The application knows you're in that aisle, therefore it can push notification and do

00:17:40,590 --> 00:17:42,930
analytics and do anything.

00:17:42,930 --> 00:17:45,950
You go to the checkout and have a different light pulsating in a different

00:17:45,950 --> 00:17:50,200
pattern, and the application knows you have paid.

00:17:50,200 --> 00:17:52,070
You understand what's going on over here.

00:17:52,070 --> 00:17:56,200
It sounds a bit dystopian, and if it sounds improbable

00:17:56,200 --> 00:17:59,890
it shouldn't, because this thing happened.

00:17:59,890 --> 00:18:02,890
This is an experiment that Phillips did with a major

00:18:02,890 --> 00:18:06,140
retailer in France, and they're using a technology called

00:18:06,140 --> 00:18:09,080
VLC, visible light communication, and the way this

00:18:09,080 --> 00:18:13,150
works is it attaches a light controller to normal LED

00:18:13,150 --> 00:18:16,020
lightbulbs and causes them to flash in a very distinct

00:18:16,020 --> 00:18:19,350
pattern which we, as humans, can't observe, but sensors

00:18:19,350 --> 00:18:21,840
on our phones can.

00:18:21,840 --> 00:18:26,810
So essentially what they built, they meshed out the entire store with different lights

00:18:26,810 --> 00:18:29,700
so you can build an indoor GPS navigation system for

00:18:29,700 --> 00:18:33,030
that store, you can ask for directions to the toilet paper

00:18:33,030 --> 00:18:35,580
aisle and it will give the directions.

00:18:35,580 --> 00:18:40,720
It's cool, but you need to offer permissions to do this, so this wasn't

00:18:40,720 --> 00:18:45,310
necessarily a privacy infringement, but a very cool experiment.

00:18:45,310 --> 00:18:48,230
The technology is called VLC, visible light communication

00:18:48,230 --> 00:18:51,240
and I strongly urge you go look into it.

00:18:51,240 --> 00:18:54,810
Some people see this as the future beyond wi-fi, mainly

00:18:54,810 --> 00:18:58,560
because it has 10,000 times more spectrum than radio

00:18:58,560 --> 00:18:59,560
wi-fi.

00:18:59,560 --> 00:19:02,650
It is kind of cool.

00:19:02,650 --> 00:19:06,060
But this isn't anything new.

00:19:06,060 --> 00:19:12,080
This is the Timex data link watch, which could be called the grandfather

00:19:12,080 --> 00:19:14,080
of smartwatches nowadays.

00:19:14,080 --> 00:19:19,430
This was first marketed in 1994, and the special thing about it is you can

00:19:19,430 --> 00:19:23,480
store phone numbers or 'to do' lists on your watch.

00:19:23,480 --> 00:19:24,650
But that's not very interesting.

00:19:24,650 --> 00:19:28,010
The interesting bit is how you got those things to your watch.

00:19:28,010 --> 00:19:31,040
And it doesn't use a cable, it uses light.

00:19:31,040 --> 00:19:36,260
So above the display over there at the 12th hour there's a small camera, and that

00:19:36,260 --> 00:19:39,630
camera, coupled with an application for your computer,

00:19:39,630 --> 00:19:42,830
is going to receive flight pulses from your monitor

00:19:42,830 --> 00:19:45,520
and encode them as messages.

00:19:45,520 --> 00:19:50,280
But rather than explain how this works, I would want to show you the commercial

00:19:50,280 --> 00:19:53,651
for the Timex datalink watch from 1994, and this is

00:19:53,651 --> 00:19:55,540
where I'm going to need help from the sound people because

00:19:55,540 --> 00:19:58,370
I connected my sound and this is something you need to

00:19:58,370 --> 00:20:05,780
hear.

00:20:05,780 --> 00:20:20,600
All good?

00:20:20,600 --> 00:20:28,010
Good.

00:20:28,010 --> 00:20:35,420
music].

00:20:35,420 --> 00:20:37,490
The cat always wins.

00:20:37,490 --> 00:20:38,800
[applause].

00:20:38,800 --> 00:20:40,650
I find it funny.

00:20:40,650 --> 00:20:45,940
The cat always wins, the dog has no chance.

00:20:45,940 --> 00:20:49,520
This was 1994.

00:20:49,520 --> 00:20:51,760
That was 21 years ago.

00:20:51,760 --> 00:20:54,110
Some of the people in this room today weren't even born

00:20:54,110 --> 00:20:57,770
when people were trying out technology like this.

00:20:57,770 --> 00:21:01,490
So let's fast forward 21 years, where are we today?

00:21:01,490 --> 00:21:05,530
This thing is called the Michigan micromould.

00:21:05,530 --> 00:21:08,170
By all accounts, this is the smallest computer in the world right

00:21:08,170 --> 00:21:09,170
now.

00:21:09,170 --> 00:21:11,150
That is not a huge coin, that's a small coin, and

00:21:11,150 --> 00:21:13,190
the computer fits on the size of the coin.

00:21:13,190 --> 00:21:18,010
It has everything you need: processor, memory, storage,

00:21:18,010 --> 00:21:20,000
and a small battery.

00:21:20,000 --> 00:21:24,800
It has radio, it has some sensors like temperature and light sensors, and it all

00:21:24,800 --> 00:21:27,630
fits on the side of a coin.

00:21:27,630 --> 00:21:33,250
So this size begs the question: how do you actually -- there is no room to put a

00:21:33,250 --> 00:21:36,350
connector, how do you program this thing and charge it?

00:21:36,350 --> 00:21:39,570
The answer is: use light.

00:21:39,570 --> 00:21:44,760
The micro mode is initially programmed with light pulses, and by the way that's the tiny

00:21:44,760 --> 00:21:47,920
black thing underneath the lightbulb over there: the entire

00:21:47,920 --> 00:21:48,920
computer.

00:21:48,920 --> 00:21:53,460
So the initial programming phase is done by light phases up until it boots up and turns

00:21:53,460 --> 00:21:57,290
on the radio, so it can use the network to get further

00:21:57,290 --> 00:21:59,460
instructions.

00:21:59,460 --> 00:22:01,680
This is absolutely incredible.

00:22:01,680 --> 00:22:06,530
I am both amazed and terrified at the size of computers.

00:22:06,530 --> 00:22:09,040
Okay.

00:22:09,040 --> 00:22:11,530
Since I have a bit more time left, I am going to go into

00:22:11,530 --> 00:22:15,500
the other section, and this my favourite one.

00:22:15,500 --> 00:22:18,480
This device is called the Misfit Shine, one of

00:22:18,480 --> 00:22:22,860
the earliest fitness trackers, and in the video they alleged

00:22:22,860 --> 00:22:26,220
it would synchronise by you placing it on the screen

00:22:26,220 --> 00:22:27,560
of your phone.

00:22:27,560 --> 00:22:31,010
And people went crazy for it, myself included.

00:22:31,010 --> 00:22:33,390
We didn't know how this was going to be done, we were

00:22:33,390 --> 00:22:38,720
very curious, myself included: is it rhythmically tapping on the screen to get the message,

00:22:38,720 --> 00:22:40,540
something like Morse code tapping?

00:22:40,540 --> 00:22:41,540
Is it generating electromagnetic field?

00:22:41,540 --> 00:22:42,540
Sadly, no.

00:22:42,540 --> 00:22:49,030
The Misfit Shine eventually

00:22:49,030 --> 00:22:51,180
launched, and the answer is it is just using bluetooth

00:22:51,180 --> 00:22:55,560
low energy, which is useful because it is a high

00:22:55,560 --> 00:22:58,040
bandwidth way of transmitting data, and you're a lot

00:22:58,040 --> 00:23:04,510
less prone to errors, but the important bit is it is use

00:23:04,510 --> 00:23:07,880
bluetooth in a very low frequency so you need to keep it

00:23:07,880 --> 00:23:11,610
close to your device, so you need to put it on the

00:23:11,610 --> 00:23:14,011
screen for it to synchronise, but it would actually do

00:23:14,011 --> 00:23:16,210
it if you just put it next to the phone and tap that

00:23:16,210 --> 00:23:18,730
circle there.

00:23:18,730 --> 00:23:24,140
A bit disappointing, but it is not totally impossible to do that.

00:23:24,140 --> 00:23:26,030
This is the Google Cardboard, most people in the

00:23:26,030 --> 00:23:28,200
room probably know what this is.

00:23:28,200 --> 00:23:31,080
One of the low-cost VR headset.

00:23:31,080 --> 00:23:36,290
It is basically a piece of cardboard you put -- you open an application, you put your

00:23:36,290 --> 00:23:39,100
phone in there, you put it up to your head and you're

00:23:39,100 --> 00:23:42,890
projecting into a 3D virtual world, but that introduces

00:23:42,890 --> 00:23:46,550
a problem and the problem is how do you actually interact

00:23:46,550 --> 00:23:48,720
with your phone when it is in a box stuck to your

00:23:48,720 --> 00:23:50,330
head?

00:23:50,330 --> 00:23:52,440
You could try using the camera or you could try

00:23:52,440 --> 00:23:54,890
using the microphone, but those need user permissions,

00:23:54,890 --> 00:23:56,950
first of all, an extra step.

00:23:56,950 --> 00:24:01,200
They're going to drain the battery very fast, and if you're in a noisy environment

00:24:01,200 --> 00:24:04,700
or in an environment with a lot of light, they may

00:24:04,700 --> 00:24:07,460
not be that precise to begin with.

00:24:07,460 --> 00:24:10,200
So the engineers come up with a brilliant solution:

00:24:10,200 --> 00:24:13,670
on the side there you're going to see a circular metal

00:24:13,670 --> 00:24:17,330
disc, a magnet, and it travels up and down in a groove.

00:24:17,330 --> 00:24:19,890
On the other side, there's another magnet which stays

00:24:19,890 --> 00:24:23,200
fixed, and as you pull them, you're actually changing

00:24:23,200 --> 00:24:25,760
the electromagnetic field between those.

00:24:25,760 --> 00:24:28,670
So the engineers for the Google Cardboard app are

00:24:28,670 --> 00:24:31,850
looking with the magnetometer for the changes in the electromagnetic

00:24:31,850 --> 00:24:34,210
field, this is the same sensor you're using for the

00:24:34,210 --> 00:24:37,520
compass, and therefore that's the input device.

00:24:37,520 --> 00:24:41,680
You can register clicks, long presses, just by measuring

00:24:41,680 --> 00:24:45,620
the changes detected by the magnetometer.

00:24:45,620 --> 00:24:48,200
Absolutely brilliant.

00:24:48,200 --> 00:24:51,270
Unfortunately we can't do this in browsers today.

00:24:51,270 --> 00:24:54,000
I would love to show you a demo like this, but the truth

00:24:54,000 --> 00:24:56,741
is we don't have access to most of the APIs in our

00:24:56,741 --> 00:24:57,741
phones.

00:24:57,741 --> 00:25:02,550
We know about the browsers, but not much about the underlying sensors, and if there is anything

00:25:02,550 --> 00:25:06,170
practical to take way from this presentation today, is

00:25:06,170 --> 00:25:10,620
if you want access to all of the sensors in your devices

00:25:10,620 --> 00:25:13,880
in your browser to build your own unconventional use of

00:25:13,880 --> 00:25:17,120
them, I encourage you to get involved in the generic web

00:25:17,120 --> 00:25:18,410
sensor API.

00:25:18,410 --> 00:25:25,140
It is at URL, an ongoing specification to make a uniform way of exposing sensors for

00:25:25,140 --> 00:25:28,260
us and browsers to use, because until we have access

00:25:28,260 --> 00:25:31,350
to the sensors on the device, native is fundamentally

00:25:31,350 --> 00:25:33,670
going to be ahead of the web.

00:25:33,670 --> 00:25:37,400
So we need access to sensors.

00:25:37,400 --> 00:25:40,050
And that's about it for my presentation.

00:25:40,050 --> 00:25:44,800
I hope you enjoyed it, I hope you found some bits of insight,

00:25:44,800 --> 00:25:47,790
and I encourage you to look for your own unconventional

00:25:47,790 --> 00:25:50,170
ways of transmitting data and input in whatever

00:25:50,170 --> 00:25:52,640
you do with your devices.

00:25:52,640 --> 00:25:53,640
Thank you for your attention.

00:25:53,640 --> 00:25:53,641

YouTube URL: https://www.youtube.com/watch?v=zvG97aOfAJM


