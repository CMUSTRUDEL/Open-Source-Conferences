Title: Kathrin Holzmann - CSS in JS: Is it worth the hype | JSUnconf 2019
Publication date: 2019-05-23
Playlist: JSUnconf 2019
Description: 
	
Captions: 
	00:00:06,799 --> 00:00:12,210
hello everyone thank you for voting and

00:00:09,990 --> 00:00:18,779
also thank you for coming and today

00:00:12,210 --> 00:00:20,330
we're talking about hype and so maybe as

00:00:18,779 --> 00:00:22,740
a front-end developer you already

00:00:20,330 --> 00:00:25,529
experienced that we are living in a hype

00:00:22,740 --> 00:00:27,539
driven development environment hyper-v

00:00:25,529 --> 00:00:29,220
development is one of the things but

00:00:27,539 --> 00:00:33,329
also there's the fear of missing out

00:00:29,220 --> 00:00:35,309
because there bazillion new frameworks

00:00:33,329 --> 00:00:37,380
coming out every day and you don't know

00:00:35,309 --> 00:00:40,559
like what should I learn what should I

00:00:37,380 --> 00:00:42,510
follow what should I need to apply what

00:00:40,559 --> 00:00:45,840
do I have to apply what do I have to

00:00:42,510 --> 00:00:48,059
learn and so at some point we start kind

00:00:45,840 --> 00:00:50,820
of following just a few people on

00:00:48,059 --> 00:00:52,770
Twitter because I don't know maybe we

00:00:50,820 --> 00:00:54,780
heard them talking in one of the

00:00:52,770 --> 00:00:57,510
conferences or we read a really cool

00:00:54,780 --> 00:01:01,289
medium article from them and so we are

00:00:57,510 --> 00:01:03,510
now following these people but somehow

00:01:01,289 --> 00:01:06,270
this is just a very small group of

00:01:03,510 --> 00:01:09,000
people and so we kind of end up in a

00:01:06,270 --> 00:01:11,939
bubble because these people follow each

00:01:09,000 --> 00:01:14,850
other and so we maybe don't hear others

00:01:11,939 --> 00:01:17,729
people opinions anymore and maybe we

00:01:14,850 --> 00:01:21,060
even start taking everything for granted

00:01:17,729 --> 00:01:24,030
the people we follow safe so let me

00:01:21,060 --> 00:01:26,880
introduce you to the motto of the high

00:01:24,030 --> 00:01:30,180
royal society back in the day there was

00:01:26,880 --> 00:01:32,790
a group dedicated to science and back in

00:01:30,180 --> 00:01:35,820
the day it was very common that the word

00:01:32,790 --> 00:01:38,759
of a person that was like a lord or I

00:01:35,820 --> 00:01:42,180
don't know somebody who had money was

00:01:38,759 --> 00:01:44,399
yeah here louder and better and their

00:01:42,180 --> 00:01:47,310
opinion mattered more to people then

00:01:44,399 --> 00:01:49,770
let's say from a poor monk or some other

00:01:47,310 --> 00:01:52,920
worker on the street and so the high

00:01:49,770 --> 00:01:56,130
royal society the British Royal Society

00:01:52,920 --> 00:01:59,070
had one motto and they call it unison

00:01:56,130 --> 00:02:03,540
bah bah it's Latin and that means don't

00:01:59,070 --> 00:02:06,119
take word for granted or and so that

00:02:03,540 --> 00:02:09,959
means that we should listen to the facts

00:02:06,119 --> 00:02:11,680
and not only who says it so in this what

00:02:09,959 --> 00:02:16,120
we're going to do today

00:02:11,680 --> 00:02:17,920
we're talking about five pieces why we

00:02:16,120 --> 00:02:19,950
are currently using side components and

00:02:17,920 --> 00:02:22,150
if they are right if they are wrong and

00:02:19,950 --> 00:02:24,519
I also want to give you a little

00:02:22,150 --> 00:02:26,049
disclaimer so today I'm talking mostly

00:02:24,519 --> 00:02:30,400
about site components there are other

00:02:26,049 --> 00:02:33,700
approaches of CSS and J's but I have the

00:02:30,400 --> 00:02:35,680
most experience with that one and also I

00:02:33,700 --> 00:02:37,890
think that's the most popular package

00:02:35,680 --> 00:02:41,319
right now for at least the react world

00:02:37,890 --> 00:02:44,019
also I believe that people that write

00:02:41,319 --> 00:02:46,030
these packages are awesome so I don't

00:02:44,019 --> 00:02:48,340
have anything against them this is

00:02:46,030 --> 00:02:50,379
really just mostly like what I

00:02:48,340 --> 00:02:53,650
experienced by working with this in real

00:02:50,379 --> 00:02:56,379
life and trying not to compare with

00:02:53,650 --> 00:03:01,750
other solutions that are not CSS and J's

00:02:56,379 --> 00:03:04,540
in the classic approach so I think the

00:03:01,750 --> 00:03:08,349
biggest reason why we are starting to

00:03:04,540 --> 00:03:11,530
put our CSS in our Jas is because sadly

00:03:08,349 --> 00:03:15,189
CSS is render blocking that also means

00:03:11,530 --> 00:03:16,959
that we need to bring it to our clients

00:03:15,189 --> 00:03:19,599
as soon and as fast and as quick as

00:03:16,959 --> 00:03:24,069
possible and how are we doing this so if

00:03:19,599 --> 00:03:26,859
he like look at the classic approach to

00:03:24,069 --> 00:03:32,159
include a style it's by using a link tag

00:03:26,859 --> 00:03:32,159
and it's just linking to a CSS file and

00:03:32,280 --> 00:03:37,389
what then happens in the browser is the

00:03:34,720 --> 00:03:39,639
browser starts downloading the stuff so

00:03:37,389 --> 00:03:41,409
first browser needs to know like what is

00:03:39,639 --> 00:03:44,500
all there with the contents of it so

00:03:41,409 --> 00:03:46,449
there's the HTML and then it starts

00:03:44,500 --> 00:03:49,810
render downloading all the other stuff

00:03:46,449 --> 00:03:51,459
which also contains our CSS because it

00:03:49,810 --> 00:03:53,769
doesn't make sense for the browser to

00:03:51,459 --> 00:03:55,569
start rendering or painting before it

00:03:53,769 --> 00:03:57,940
doesn't know how the stuff should look

00:03:55,569 --> 00:04:01,169
like otherwise you would always see for

00:03:57,940 --> 00:04:03,099
a second a very ugly unstyled page and

00:04:01,169 --> 00:04:04,780
that's also not so nice

00:04:03,099 --> 00:04:06,879
so the browser decides instead to show

00:04:04,780 --> 00:04:09,159
you a blank page until it all has

00:04:06,879 --> 00:04:14,859
downloaded all the files and then it

00:04:09,159 --> 00:04:17,849
starts painting so the easiest and

00:04:14,859 --> 00:04:21,820
fastest way to not have render blocking

00:04:17,849 --> 00:04:24,670
your Styles is to have them included in

00:04:21,820 --> 00:04:27,300
your HTML they just having style

00:04:24,670 --> 00:04:31,690
haxe and then put the sails all there

00:04:27,300 --> 00:04:35,110
that was done even way before there was

00:04:31,690 --> 00:04:37,990
something like react or you were angular

00:04:35,110 --> 00:04:41,410
and people hated it because of different

00:04:37,990 --> 00:04:46,060
reasons but we're back at that today and

00:04:41,410 --> 00:04:48,700
makes sense because when we will now go

00:04:46,060 --> 00:04:52,060
for example for style components this is

00:04:48,700 --> 00:04:54,040
like the biggest feature of it you don't

00:04:52,060 --> 00:04:56,650
even have to write a CSS file anymore

00:04:54,040 --> 00:04:59,530
because you just write all your styles

00:04:56,650 --> 00:05:02,920
in your javascript file next to the

00:04:59,530 --> 00:05:06,250
stuff where you have to you render and

00:05:02,920 --> 00:05:10,840
return of your component which is really

00:05:06,250 --> 00:05:13,930
awesome really nice because it renders

00:05:10,840 --> 00:05:17,050
like this so it generates you this

00:05:13,930 --> 00:05:19,740
button component and it even generates

00:05:17,050 --> 00:05:25,480
you automatically some class names and

00:05:19,740 --> 00:05:28,690
then it pastes inline the CSS in the

00:05:25,480 --> 00:05:31,450
bottom of the HTML so we have achieved

00:05:28,690 --> 00:05:35,500
what we wanted we have our HTML combined

00:05:31,450 --> 00:05:39,550
with our CSS and so the browser can

00:05:35,500 --> 00:05:44,410
render faster than before because also

00:05:39,550 --> 00:05:46,960
we only show the stuff that we show that

00:05:44,410 --> 00:05:48,610
we need in the first page because in our

00:05:46,960 --> 00:05:50,230
first page there is only the components

00:05:48,610 --> 00:05:52,300
we show there and so there's only the

00:05:50,230 --> 00:05:56,440
CSS of these components and nothing else

00:05:52,300 --> 00:06:02,410
so we also show only the necessaries so

00:05:56,440 --> 00:06:05,830
the critical CSS part okay but this is a

00:06:02,410 --> 00:06:09,180
problem we have since longer time and

00:06:05,830 --> 00:06:12,490
other people already had this idea and

00:06:09,180 --> 00:06:15,990
develop a thing called backpack backpack

00:06:12,490 --> 00:06:20,520
is a module bundler and just some magic

00:06:15,990 --> 00:06:22,780
so it goes through all your files and

00:06:20,520 --> 00:06:25,990
looks how they are tangled together

00:06:22,780 --> 00:06:29,370
which imports which and then it pipes it

00:06:25,990 --> 00:06:36,910
through and gives you out a very nice

00:06:29,370 --> 00:06:38,140
bundle of all of these things so when

00:06:36,910 --> 00:06:42,790
you have your project

00:06:38,140 --> 00:06:45,160
and your web pack is there and then you

00:06:42,790 --> 00:06:47,710
configure it like this that you add a

00:06:45,160 --> 00:06:49,810
CSS load or style order to it and then

00:06:47,710 --> 00:06:54,460
you can even say something like source

00:06:49,810 --> 00:06:56,350
maps is there because that's one of the

00:06:54,460 --> 00:06:57,010
not so nice things when everything is

00:06:56,350 --> 00:06:59,020
crunched together

00:06:57,010 --> 00:07:00,700
you don't know anymore where your pieces

00:06:59,020 --> 00:07:03,220
are coming from and by source Maps

00:07:00,700 --> 00:07:08,980
enabled you still know where the stuff

00:07:03,220 --> 00:07:12,750
was once located so what you then do is

00:07:08,980 --> 00:07:17,650
in your JavaScript file with backpack

00:07:12,750 --> 00:07:20,110
configured you import your CSS file not

00:07:17,650 --> 00:07:22,990
with a link like before but with a just

00:07:20,110 --> 00:07:26,500
JavaScript import pointing to the file

00:07:22,990 --> 00:07:27,280
and then where pack does the rest of the

00:07:26,500 --> 00:07:29,440
magic for you

00:07:27,280 --> 00:07:32,410
so it renders your vanilla button and

00:07:29,440 --> 00:07:35,530
then it puts in the bottom after HTML

00:07:32,410 --> 00:07:39,010
also your style and what's a little nice

00:07:35,530 --> 00:07:43,120
comment to you where that original code

00:07:39,010 --> 00:07:48,760
was from also very nice so kind of the

00:07:43,120 --> 00:07:50,920
same thing solved but so we have done

00:07:48,760 --> 00:07:53,850
all of this work like configuring web

00:07:50,920 --> 00:07:58,420
pack or sai components to be faster so

00:07:53,850 --> 00:08:01,170
let's compare them I did a little

00:07:58,420 --> 00:08:05,620
experiment I know it's all blurry

00:08:01,170 --> 00:08:07,450
so I created four buttons so one is a

00:08:05,620 --> 00:08:09,520
like vanilla version that's the normal

00:08:07,450 --> 00:08:11,320
version the other one is my primary

00:08:09,520 --> 00:08:13,090
button the second one is mystic in the

00:08:11,320 --> 00:08:16,330
red button and then there is a

00:08:13,090 --> 00:08:20,080
combination of primary and inactive

00:08:16,330 --> 00:08:23,980
state so just what we do normally in our

00:08:20,080 --> 00:08:26,260
web applications we combine stuff and I

00:08:23,980 --> 00:08:30,760
approach this like three different

00:08:26,260 --> 00:08:32,830
things first I tried CSS vanilla CSS

00:08:30,760 --> 00:08:35,229
with map pack then I tried sty

00:08:32,830 --> 00:08:39,070
components by using props and I also

00:08:35,229 --> 00:08:41,800
tried side components by using the

00:08:39,070 --> 00:08:45,130
extent so there is no extent but you can

00:08:41,800 --> 00:08:48,120
take your primary button and then add

00:08:45,130 --> 00:08:54,600
another thing to it and extend it and

00:08:48,120 --> 00:08:58,500
is your primary inactive I don't know if

00:08:54,600 --> 00:09:02,279
you can see this so I let it all render

00:08:58,500 --> 00:09:03,270
in the browser and they're not that far

00:09:02,279 --> 00:09:07,860
apart

00:09:03,270 --> 00:09:09,920
so the normal CSS takes about 3.4

00:09:07,860 --> 00:09:12,720
seconds until the first meaningful paint

00:09:09,920 --> 00:09:15,990
the site components with the props takes

00:09:12,720 --> 00:09:19,170
around 3.5 seconds unto the first

00:09:15,990 --> 00:09:22,500
meaningful paint and the extent one

00:09:19,170 --> 00:09:24,600
takes 3.6 seconds that's all time very

00:09:22,500 --> 00:09:28,020
close to each other but when you look at

00:09:24,600 --> 00:09:32,390
the other the cake graph the donut um

00:09:28,020 --> 00:09:37,110
you see that the scripting time is way

00:09:32,390 --> 00:09:40,580
bigger for the Sai components approached

00:09:37,110 --> 00:09:44,550
as for the CSS approach which also means

00:09:40,580 --> 00:09:47,640
they are growing faster like this time

00:09:44,550 --> 00:09:51,320
of script rendering scripting time grows

00:09:47,640 --> 00:09:55,140
faster with the complexity of your

00:09:51,320 --> 00:09:57,209
component system so the more props you

00:09:55,140 --> 00:09:59,400
use the more extensive the more

00:09:57,209 --> 00:10:06,510
variations you have the longer it will

00:09:59,400 --> 00:10:09,209
take to script so it's very Wake thing

00:10:06,510 --> 00:10:11,730
I'm saying now but it's most likely that

00:10:09,209 --> 00:10:14,339
in the long run the site component

00:10:11,730 --> 00:10:19,110
approach will load not as fast as when

00:10:14,339 --> 00:10:23,370
you just have vanilla CSS ok so next

00:10:19,110 --> 00:10:27,540
thing next very nice thesis and there is

00:10:23,370 --> 00:10:31,110
collocation scheme so CSS has some

00:10:27,540 --> 00:10:32,970
issues by design and it's not a mean

00:10:31,110 --> 00:10:36,480
thing to say it's just fact

00:10:32,970 --> 00:10:39,000
so in CSS everything is global in CSS

00:10:36,480 --> 00:10:42,810
you have selectors which have very

00:10:39,000 --> 00:10:47,640
specific rules how to like apply a style

00:10:42,810 --> 00:10:49,440
and based on like how intense and how

00:10:47,640 --> 00:10:58,070
strong your selector is your style is

00:10:49,440 --> 00:11:00,080
stronger than the other one and so now I

00:10:58,070 --> 00:11:02,330
and slight components is going for

00:11:00,080 --> 00:11:06,340
colocation which means that you put your

00:11:02,330 --> 00:11:09,950
style in the same thing as you put your

00:11:06,340 --> 00:11:11,990
render component which means that it's

00:11:09,950 --> 00:11:16,640
always in the same file it's always in

00:11:11,990 --> 00:11:19,970
the same location and it helps you with

00:11:16,640 --> 00:11:22,640
just issues of the global stuff the

00:11:19,970 --> 00:11:29,270
inheritance and everything which is

00:11:22,640 --> 00:11:31,280
really nice so awesome so but imagine so

00:11:29,270 --> 00:11:33,260
this is something I copied from a

00:11:31,280 --> 00:11:36,500
project I'm currently working on this is

00:11:33,260 --> 00:11:38,930
just AI components in one of our a

00:11:36,500 --> 00:11:40,460
little bit more complex components and

00:11:38,930 --> 00:11:42,590
I'm seeing a little bit more it's

00:11:40,460 --> 00:11:45,320
cheeser that have a button and a text on

00:11:42,590 --> 00:11:49,640
it okay and there are a hundred lines of

00:11:45,320 --> 00:11:51,530
code that are only dedicated to styles

00:11:49,640 --> 00:11:53,870
so if you want to see what's actually

00:11:51,530 --> 00:11:57,470
going on in that component you need to

00:11:53,870 --> 00:11:59,570
scroll a hundred lines which is annoying

00:11:57,470 --> 00:12:04,190
especially when you work on that thing

00:11:59,570 --> 00:12:06,260
more often um also just imagine you have

00:12:04,190 --> 00:12:08,690
a more like generic component like a

00:12:06,260 --> 00:12:13,940
wrapper and you're doing your

00:12:08,690 --> 00:12:16,220
collocation and somehow it's everywhere

00:12:13,940 --> 00:12:18,470
because you start copying everything

00:12:16,220 --> 00:12:20,540
because it's a generic component and

00:12:18,470 --> 00:12:23,900
probably the difference is not very big

00:12:20,540 --> 00:12:27,230
so you have copies over and over by cow

00:12:23,900 --> 00:12:32,210
locating your component in your render

00:12:27,230 --> 00:12:33,950
thingy and then you maybe decide okay

00:12:32,210 --> 00:12:35,990
you know what I give up and echo

00:12:33,950 --> 00:12:39,380
location for some like more generic

00:12:35,990 --> 00:12:41,470
components I create our like space where

00:12:39,380 --> 00:12:44,570
it put them like a component folder and

00:12:41,470 --> 00:12:46,940
then because I also need to have

00:12:44,570 --> 00:12:50,150
variations on this very basic component

00:12:46,940 --> 00:12:52,880
I start to import them and add more

00:12:50,150 --> 00:12:54,110
cells to them like I have a normal

00:12:52,880 --> 00:12:57,260
wrapper and then I create a gallery

00:12:54,110 --> 00:13:01,430
wrapper on it which is nice and works so

00:12:57,260 --> 00:13:05,690
far really cool but so it gets rendered

00:13:01,430 --> 00:13:10,300
to this so we have very nice not

00:13:05,690 --> 00:13:12,050
readable classes and just one style and

00:13:10,300 --> 00:13:14,870
we don't know anymore

00:13:12,050 --> 00:13:17,180
like where which style is coming from

00:13:14,870 --> 00:13:22,300
because sigh components doesn't support

00:13:17,180 --> 00:13:25,580
source maps yet and if you don't know

00:13:22,300 --> 00:13:30,220
exactly where all your rappers are you

00:13:25,580 --> 00:13:33,920
probably will never find that again and

00:13:30,220 --> 00:13:37,339
it's a little more helpful when we look

00:13:33,920 --> 00:13:40,850
at the reactive bugger because there we

00:13:37,339 --> 00:13:43,760
can at least see ok that style somewhere

00:13:40,850 --> 00:13:48,829
used in a component named cat galleries

00:13:43,760 --> 00:13:51,620
so part of my style will be there but I

00:13:48,829 --> 00:13:54,110
had very often times where I wasn't able

00:13:51,620 --> 00:13:57,589
to find the style that is bugging me

00:13:54,110 --> 00:14:00,470
like literally without a project full

00:13:57,589 --> 00:14:06,079
stay a text search so that is how I'm

00:14:00,470 --> 00:14:06,920
finding my stuff now ok but but bobble

00:14:06,079 --> 00:14:09,620
for the rescue

00:14:06,920 --> 00:14:11,990
do you know bobble that's super cool

00:14:09,620 --> 00:14:14,060
translator thing people have written

00:14:11,990 --> 00:14:18,800
plug-ins for that because they have been

00:14:14,060 --> 00:14:21,200
bucked by the same issue as I so and

00:14:18,800 --> 00:14:23,839
when you have configured a bobble

00:14:21,200 --> 00:14:26,029
plug-in for Sai components it finally

00:14:23,839 --> 00:14:29,089
adds something meaningful to his class

00:14:26,029 --> 00:14:31,820
names and it adds the react component

00:14:29,089 --> 00:14:34,490
itself and his tie component to your

00:14:31,820 --> 00:14:39,670
class name as prefix so you have a

00:14:34,490 --> 00:14:41,690
better hint now where it is more or less

00:14:39,670 --> 00:14:45,950
depending on how good you are in your

00:14:41,690 --> 00:14:52,310
location style stuff but also there's

00:14:45,950 --> 00:14:56,770
like a nun plugin required solution to

00:14:52,310 --> 00:15:00,620
this issue and it is called parents and

00:14:56,770 --> 00:15:04,370
there is one very nice pattern I tried

00:15:00,620 --> 00:15:06,500
it in syrup like project so far and that

00:15:04,370 --> 00:15:09,769
is called atomic design where you start

00:15:06,500 --> 00:15:12,440
by like splitting your components in

00:15:09,769 --> 00:15:14,329
their parts so you start by having the

00:15:12,440 --> 00:15:17,390
slightest thing the smallest thing like

00:15:14,329 --> 00:15:20,630
a button and then you start combining it

00:15:17,390 --> 00:15:23,270
up to like molecules and organisms and

00:15:20,630 --> 00:15:25,460
templates and pages and so by this way

00:15:23,270 --> 00:15:28,960
you at least make sure that somehow

00:15:25,460 --> 00:15:32,450
kind of no okay which parts of my

00:15:28,960 --> 00:15:36,020
components are like the basic ones that

00:15:32,450 --> 00:15:37,850
I have to reuse more often so I locate

00:15:36,020 --> 00:15:39,830
them in one place and then the other

00:15:37,850 --> 00:15:42,110
stuff I'm locating in like the bigger

00:15:39,830 --> 00:15:44,209
component and so you kind of have a

00:15:42,110 --> 00:15:47,390
better guess on where to locate the

00:15:44,209 --> 00:15:49,970
stuff that also helps you when you use

00:15:47,390 --> 00:15:52,370
style components so that's this is no

00:15:49,970 --> 00:15:57,589
exclusive or something you can combine

00:15:52,370 --> 00:15:59,899
them it's really cool so then as I

00:15:57,589 --> 00:16:03,370
already have mentioned the other thing

00:15:59,899 --> 00:16:07,910
that seems kind of bad about is scoping

00:16:03,370 --> 00:16:10,190
what do I mean with scoping and maybe

00:16:07,910 --> 00:16:11,330
one of you has done something like that

00:16:10,190 --> 00:16:14,149
before

00:16:11,330 --> 00:16:16,430
just having like a very long selector

00:16:14,149 --> 00:16:19,850
and then still have to run an important

00:16:16,430 --> 00:16:22,279
statement on it because you have a very

00:16:19,850 --> 00:16:24,620
tangled Caeser space and you don't know

00:16:22,279 --> 00:16:26,450
anymore where this comes from or you

00:16:24,620 --> 00:16:28,730
have a third-party application that has

00:16:26,450 --> 00:16:30,589
like some very strong selectors and

00:16:28,730 --> 00:16:35,270
there is no other way to come around it

00:16:30,589 --> 00:16:37,100
so yes that components means you put

00:16:35,270 --> 00:16:39,200
everything next to each other which

00:16:37,100 --> 00:16:41,779
means you don't have classes anymore

00:16:39,200 --> 00:16:42,770
which means you cannot have two strong

00:16:41,779 --> 00:16:47,650
selectors anymore

00:16:42,770 --> 00:16:52,430
yay problem solved maybe you still have

00:16:47,650 --> 00:16:57,110
some legacy CSS laying around or some

00:16:52,430 --> 00:17:00,970
CSS from a third-party plugin maybe and

00:16:57,110 --> 00:17:04,040
they have a very strong selector so and

00:17:00,970 --> 00:17:05,959
still no matter what you do because in

00:17:04,040 --> 00:17:08,750
your site component you cannot access

00:17:05,959 --> 00:17:11,510
the class name anymore you cannot like

00:17:08,750 --> 00:17:13,819
make your selector more specific so as

00:17:11,510 --> 00:17:17,350
the selector is very specific your

00:17:13,819 --> 00:17:21,470
button will still be pink like forever

00:17:17,350 --> 00:17:25,990
what that is what rescue yeah there's a

00:17:21,470 --> 00:17:30,730
second buffer plug-in that allows you to

00:17:25,990 --> 00:17:35,390
generate something more specific and

00:17:30,730 --> 00:17:37,400
it's doing it by how awesome oh yeah the

00:17:35,390 --> 00:17:39,530
bible plugin is named ababa plugging

00:17:37,400 --> 00:17:44,300
site component CSS namespace

00:17:39,530 --> 00:17:47,030
very nice word and you can configure it

00:17:44,300 --> 00:17:49,880
and then what it does it duplicates your

00:17:47,030 --> 00:17:51,650
class name in your style definition to

00:17:49,880 --> 00:17:56,630
make it more specific than any other

00:17:51,650 --> 00:18:00,220
style okay cool

00:17:56,630 --> 00:18:04,040
another nun plugin approach would be to

00:18:00,220 --> 00:18:06,140
generally use some naming convention for

00:18:04,040 --> 00:18:12,110
example BAM which is working like the

00:18:06,140 --> 00:18:14,630
blog element modifier so that kind of

00:18:12,110 --> 00:18:17,720
cute save you from two specific

00:18:14,630 --> 00:18:21,230
selectors I mean it still doesn't

00:18:17,720 --> 00:18:24,580
prevent you from bad sore party CSS but

00:18:21,230 --> 00:18:29,750
at least your own CSS looks nicer than

00:18:24,580 --> 00:18:31,250
okay so then the probably hardest thing

00:18:29,750 --> 00:18:36,050
in software development next to

00:18:31,250 --> 00:18:39,530
centering stuff and yeah okay naming

00:18:36,050 --> 00:18:42,920
naming is really hard what do I mean

00:18:39,530 --> 00:18:46,340
with that so maybe one of you also have

00:18:42,920 --> 00:18:49,190
had that you have a button that has like

00:18:46,340 --> 00:18:52,130
a bazillion class names on it you maybe

00:18:49,190 --> 00:18:54,920
start like very nice with yourself which

00:18:52,130 --> 00:18:57,320
was one class maybe a second class you

00:18:54,920 --> 00:18:59,750
modifier maybe you even you spam but

00:18:57,320 --> 00:19:02,300
somehow the next morning your designer

00:18:59,750 --> 00:19:05,300
comes in and gives you like this unicorn

00:19:02,300 --> 00:19:07,640
and then you're like okay now I add the

00:19:05,300 --> 00:19:15,650
class unicorn to my button okay good

00:19:07,640 --> 00:19:17,870
good so like components as I said they

00:19:15,650 --> 00:19:19,490
generate the class names for you so you

00:19:17,870 --> 00:19:23,330
don't have to care about this anymore

00:19:19,490 --> 00:19:26,180
which is really really awesome but I

00:19:23,330 --> 00:19:28,880
have a unpopular opinion now for you if

00:19:26,180 --> 00:19:34,640
you can't name a thing you probably

00:19:28,880 --> 00:19:36,530
don't need it so when I come into the

00:19:34,640 --> 00:19:39,410
situation that a designer comes up to me

00:19:36,530 --> 00:19:42,200
and gives me something and even with all

00:19:39,410 --> 00:19:45,170
my atomic design approach on my BEM

00:19:42,200 --> 00:19:48,380
classes I still would add a class like

00:19:45,170 --> 00:19:51,380
fancy I'm going to my designer and start

00:19:48,380 --> 00:19:53,260
asking them questions so the first

00:19:51,380 --> 00:19:57,110
question I usually ask is

00:19:53,260 --> 00:20:00,409
what problem of two user should this

00:19:57,110 --> 00:20:02,780
thing solve that that is a very good

00:20:00,409 --> 00:20:05,090
question always to your designer so what

00:20:02,780 --> 00:20:09,370
should it do how should it help the user

00:20:05,090 --> 00:20:11,169
to solve a problem or to reach a goal

00:20:09,370 --> 00:20:14,480
[Music]

00:20:11,169 --> 00:20:16,909
then it's just a variation of something

00:20:14,480 --> 00:20:18,770
that is already existing and maybe why

00:20:16,909 --> 00:20:20,690
is this variation better so maybe

00:20:18,770 --> 00:20:22,549
there's a drop shadow now and your

00:20:20,690 --> 00:20:25,940
button and the drop shadow is there

00:20:22,549 --> 00:20:28,039
because there's now a button on a darker

00:20:25,940 --> 00:20:29,780
background than before so then you

00:20:28,039 --> 00:20:32,030
should think about okay do we need to

00:20:29,780 --> 00:20:35,480
change all our backgrounds or not or

00:20:32,030 --> 00:20:37,909
whatever so and also another question

00:20:35,480 --> 00:20:40,370
would be is this a combination of

00:20:37,909 --> 00:20:43,549
something that you already have just

00:20:40,370 --> 00:20:46,730
newly arranged and does it matter to

00:20:43,549 --> 00:20:48,530
like be like this or would it be

00:20:46,730 --> 00:20:50,510
beneficial for us to maybe make an a/b

00:20:48,530 --> 00:20:52,370
test and see which of them is working

00:20:50,510 --> 00:20:58,490
better and then we decide for just one

00:20:52,370 --> 00:21:00,500
of the variations and also that also

00:20:58,490 --> 00:21:02,960
very nice question what is the semantic

00:21:00,500 --> 00:21:05,539
meaning of the thing like is it the

00:21:02,960 --> 00:21:08,539
primary action is it like the call to

00:21:05,539 --> 00:21:11,630
action is it a warning and information

00:21:08,539 --> 00:21:15,559
and error and all these helps you to

00:21:11,630 --> 00:21:17,120
define the name of a thing and if you

00:21:15,559 --> 00:21:19,850
still can't find the name of the thing

00:21:17,120 --> 00:21:23,390
and your designer starts to questioning

00:21:19,850 --> 00:21:25,789
himself or herself maybe you have like

00:21:23,390 --> 00:21:31,460
saved all on every one of you from a

00:21:25,789 --> 00:21:33,530
fancy button class okay so so far we

00:21:31,460 --> 00:21:37,760
have talked about many of the issues of

00:21:33,530 --> 00:21:39,890
CSS and also there's one really cool

00:21:37,760 --> 00:21:41,780
thing on site components which you

00:21:39,890 --> 00:21:47,780
couldn't do before and that's throwing

00:21:41,780 --> 00:21:50,179
props at everything okay so now it's I

00:21:47,780 --> 00:21:52,940
components you can add this kind of

00:21:50,179 --> 00:21:56,559
props to your button and then use them

00:21:52,940 --> 00:21:56,559
for styling which is really exciting

00:21:56,830 --> 00:22:02,570
unfortunately just looks like this so

00:22:00,590 --> 00:22:04,070
now you have your props but somehow you

00:22:02,570 --> 00:22:06,019
have to apply them and

00:22:04,070 --> 00:22:08,330
to apply them you have to use smart

00:22:06,019 --> 00:22:12,019
JavaScript which means in this case

00:22:08,330 --> 00:22:14,749
error functions and I have also seen

00:22:12,019 --> 00:22:18,109
something like that but not error

00:22:14,749 --> 00:22:20,450
functions but a lot of offenses and I

00:22:18,109 --> 00:22:25,009
don't know about you but if you ask me I

00:22:20,450 --> 00:22:27,379
don't want to maintain this because like

00:22:25,009 --> 00:22:30,169
adding a new variation there would mean

00:22:27,379 --> 00:22:33,950
like adding and you if or maybe breaking

00:22:30,169 --> 00:22:36,349
all the other ifs or I don't know how

00:22:33,950 --> 00:22:36,950
would you remove like a variation of

00:22:36,349 --> 00:22:40,099
that

00:22:36,950 --> 00:22:46,700
how can you easily tell what style is

00:22:40,099 --> 00:22:48,919
applied in which case so awesome

00:22:46,700 --> 00:22:50,720
how does it look like when we render it

00:22:48,919 --> 00:22:53,330
and reactive over it looks like this

00:22:50,720 --> 00:22:55,970
that you can at least see what kind of

00:22:53,330 --> 00:22:59,239
props you are applying to it and what

00:22:55,970 --> 00:23:02,090
values they have but in the end it just

00:22:59,239 --> 00:23:04,729
is combined into again one style class

00:23:02,090 --> 00:23:07,999
so you don't know which prop is causing

00:23:04,729 --> 00:23:13,599
which line of style you can't tell from

00:23:07,999 --> 00:23:17,269
looking at the debugger in chrome also

00:23:13,599 --> 00:23:18,830
when we now take the other approach with

00:23:17,269 --> 00:23:22,700
the bobble plug-in that gives us better

00:23:18,830 --> 00:23:25,460
class names we still don't see what prop

00:23:22,700 --> 00:23:30,109
is calling causing which style there is

00:23:25,460 --> 00:23:31,700
no mention of primary there okay so

00:23:30,109 --> 00:23:35,539
let's try a different approach

00:23:31,700 --> 00:23:39,169
don't use props try the extents but

00:23:35,539 --> 00:23:42,619
suddenly I have by like having just

00:23:39,169 --> 00:23:46,249
primary secondary normal active and

00:23:42,619 --> 00:23:53,389
inactive I have now six button

00:23:46,249 --> 00:23:55,220
components okay yes and again this is

00:23:53,389 --> 00:24:00,099
how they look in the browser and somehow

00:23:55,220 --> 00:24:04,789
the primary inactive has six classes six

00:24:00,099 --> 00:24:10,560
classes okay and somehow from these six

00:24:04,789 --> 00:24:13,590
classes only three provides style

00:24:10,560 --> 00:24:14,820
what why so at first I thought I have

00:24:13,590 --> 00:24:18,150
done something wrong maybe I have

00:24:14,820 --> 00:24:20,610
misconfigured soy components but then I

00:24:18,150 --> 00:24:22,680
found that on github and one of the

00:24:20,610 --> 00:24:26,550
contributor says how we did to some

00:24:22,680 --> 00:24:29,820
purpose that we add always another class

00:24:26,550 --> 00:24:33,090
to it that is therefore identifying your

00:24:29,820 --> 00:24:36,110
component because when you have a closer

00:24:33,090 --> 00:24:39,060
look on all these classes they change

00:24:36,110 --> 00:24:43,350
their name every time you add a new

00:24:39,060 --> 00:24:45,510
style or remove a style so there is no

00:24:43,350 --> 00:24:48,000
way how you can like predict what is

00:24:45,510 --> 00:24:50,310
happening based on your site class but

00:24:48,000 --> 00:24:54,210
the other the second class which hasn't

00:24:50,310 --> 00:24:57,030
any style rules is the identifier which

00:24:54,210 --> 00:24:59,940
is also just gibberish so maybe someone

00:24:57,030 --> 00:25:03,210
can tell me why they didn't prefix them

00:24:59,940 --> 00:25:04,050
on default I don't know but they decided

00:25:03,210 --> 00:25:08,400
against it

00:25:04,050 --> 00:25:11,460
okay let's look at some more classic

00:25:08,400 --> 00:25:15,300
stuff let's look at normal CSS or sass

00:25:11,460 --> 00:25:17,370
in this okay in this case where I have

00:25:15,300 --> 00:25:19,680
created a button and added just the

00:25:17,370 --> 00:25:26,060
classes like I would usually do with

00:25:19,680 --> 00:25:26,060
primary and overwriting by inactive and

00:25:26,960 --> 00:25:31,560
this is what it comprises what everybody

00:25:29,520 --> 00:25:34,500
has seen this already so I can clearly

00:25:31,560 --> 00:25:37,770
tell like which class is causing which

00:25:34,500 --> 00:25:40,320
style which is nice for debugging I

00:25:37,770 --> 00:25:43,230
would say and also maybe for identifying

00:25:40,320 --> 00:25:48,420
where I should probably optimize my

00:25:43,230 --> 00:25:51,840
style okay but probs I want to have

00:25:48,420 --> 00:25:55,740
props please give me my props back ok

00:25:51,840 --> 00:25:58,650
maybe I have something how about best of

00:25:55,740 --> 00:26:00,810
both worlds so maybe some of you have

00:25:58,650 --> 00:26:03,000
already stats I component tries to

00:26:00,810 --> 00:26:05,760
create a higher-order component which is

00:26:03,000 --> 00:26:08,760
 and react higher-order components

00:26:05,760 --> 00:26:11,400
so let's do some higher-order component

00:26:08,760 --> 00:26:14,940
so let's create a higher-order component

00:26:11,400 --> 00:26:17,700
for a button and give it some props for

00:26:14,940 --> 00:26:22,820
example a type for example the inactive

00:26:17,700 --> 00:26:26,150
and then take these props and

00:26:22,820 --> 00:26:29,360
make them into bemmon classes so we now

00:26:26,150 --> 00:26:32,800
have like the button st lock and the

00:26:29,360 --> 00:26:36,710
primary ended active has modifiers and

00:26:32,800 --> 00:26:44,330
then we just like give it to the

00:26:36,710 --> 00:26:46,910
component and we turn a button and also

00:26:44,330 --> 00:26:49,370
something that we can do now which side

00:26:46,910 --> 00:26:53,230
component doesn't with the process we

00:26:49,370 --> 00:26:56,450
can define prop types and default props

00:26:53,230 --> 00:26:58,760
so everybody that wants to reuse a

00:26:56,450 --> 00:27:01,640
component we have done for example

00:26:58,760 --> 00:27:05,570
button knows exactly what they can give

00:27:01,640 --> 00:27:07,220
as prop and we'll get like meaningful

00:27:05,570 --> 00:27:09,020
warning and error messages in the

00:27:07,220 --> 00:27:14,120
debugger when they saw something wrong

00:27:09,020 --> 00:27:18,350
with it just really nice I believe okay

00:27:14,120 --> 00:27:26,120
so let's summarize that was a lot of

00:27:18,350 --> 00:27:27,860
talking about CSS okay the render

00:27:26,120 --> 00:27:30,020
blocking part we talked about it in the

00:27:27,860 --> 00:27:31,400
beginning we can solve it with side

00:27:30,020 --> 00:27:35,480
components you can solve it with

00:27:31,400 --> 00:27:38,060
backpack so and then you would probably

00:27:35,480 --> 00:27:42,430
need to look at what is going to be more

00:27:38,060 --> 00:27:46,730
performant for you in the long run then

00:27:42,430 --> 00:27:48,800
the conventions like using a design

00:27:46,730 --> 00:27:51,650
pattern like atomic design and naming

00:27:48,800 --> 00:27:53,630
conventions like them help you even if

00:27:51,650 --> 00:27:55,280
you are using side components but also

00:27:53,630 --> 00:28:00,140
you can use them with other components

00:27:55,280 --> 00:28:07,850
and get rid of a couple of node modules

00:28:00,140 --> 00:28:09,980
maybe then we had thought that

00:28:07,850 --> 00:28:13,310
communication can solve some problems

00:28:09,980 --> 00:28:15,050
like naming like having too many

00:28:13,310 --> 00:28:18,350
variations on your website so

00:28:15,050 --> 00:28:21,140
communication is always king and will

00:28:18,350 --> 00:28:26,840
definitely help you on getting rid of a

00:28:21,140 --> 00:28:28,670
lot of your problems and then the last

00:28:26,840 --> 00:28:32,920
thing is props are really really fancy

00:28:28,670 --> 00:28:36,760
but they're dangerous and may be hard to

00:28:32,920 --> 00:28:36,760
debug and maintain

00:28:37,080 --> 00:28:44,230
okay so but when is Sai components

00:28:42,429 --> 00:28:46,840
really beneficial for you because I mean

00:28:44,230 --> 00:28:50,500
a lot of users people are using it

00:28:46,840 --> 00:28:53,529
already and like it and love it and so I

00:28:50,500 --> 00:28:55,179
would say if you want to bootstrap

00:28:53,529 --> 00:28:57,460
something very quick because you don't

00:28:55,179 --> 00:28:59,350
have to think too much about CSS

00:28:57,460 --> 00:29:02,380
architecture and everything just put it

00:28:59,350 --> 00:29:07,299
next to your render stuff and you're

00:29:02,380 --> 00:29:09,340
good to go it's really cool then yeah

00:29:07,299 --> 00:29:12,279
when you don't have a designer or you're

00:29:09,340 --> 00:29:14,139
not easily able to talk to them I'm not

00:29:12,279 --> 00:29:16,659
saying that you don't want to talk to

00:29:14,139 --> 00:29:18,760
them but maybe in some companies

00:29:16,659 --> 00:29:20,860
designers are not in house there's

00:29:18,760 --> 00:29:23,860
somewhere else and so you cannot let go

00:29:20,860 --> 00:29:26,260
and poke them every day so maybe you

00:29:23,860 --> 00:29:31,179
just want to like soft things quickly

00:29:26,260 --> 00:29:32,740
and then I would sigh component yeah

00:29:31,179 --> 00:29:36,880
that's one thing I haven't talked about

00:29:32,740 --> 00:29:39,519
yet but the most awesome thing about the

00:29:36,880 --> 00:29:41,740
site component approach is that you can

00:29:39,519 --> 00:29:44,110
share them with your react native

00:29:41,740 --> 00:29:46,450
application because react native

00:29:44,110 --> 00:29:50,289
applications is not so well with vanilla

00:29:46,450 --> 00:29:54,250
CSS so when you put your CSS in your

00:29:50,289 --> 00:29:56,200
JavaScript and then give it to the react

00:29:54,250 --> 00:29:58,480
native they can just use the same

00:29:56,200 --> 00:30:03,460
components as you do in your normal

00:29:58,480 --> 00:30:07,659
reactor plication so and there's just

00:30:03,460 --> 00:30:09,190
one more thing I want to like say and

00:30:07,659 --> 00:30:13,840
that is the worldís bigger than you

00:30:09,190 --> 00:30:17,409
react so I had a very nice privilege to

00:30:13,840 --> 00:30:21,970
listen once to a talk of how can leave

00:30:17,409 --> 00:30:24,399
who is one of the yeah who is like the

00:30:21,970 --> 00:30:28,630
father of CSS

00:30:24,399 --> 00:30:31,539
he brought CSS to life back in the day

00:30:28,630 --> 00:30:32,830
when they were working on CERN together

00:30:31,539 --> 00:30:35,590
with Tim berners-lee

00:30:32,830 --> 00:30:39,399
and he had a vision to make to pop a

00:30:35,590 --> 00:30:42,820
nicer prettier place as freely as they

00:30:39,399 --> 00:30:46,090
had in their environment and so when you

00:30:42,820 --> 00:30:48,910
think back from the beginning of CSS 2

00:30:46,090 --> 00:30:51,730
where was there and where it is today

00:30:48,910 --> 00:30:54,100
we also have the abilities of pure CSS

00:30:51,730 --> 00:30:56,740
variables now where we have now finally

00:30:54,100 --> 00:31:00,070
rounded corners and are now able to

00:30:56,740 --> 00:31:03,580
Center things gradually so there has

00:31:00,070 --> 00:31:06,040
been a lot so maybe we should also trust

00:31:03,580 --> 00:31:09,520
in the development of CSS that it can

00:31:06,040 --> 00:31:14,280
overcome its issues and not just

00:31:09,520 --> 00:31:16,560
throwing the JavaScript hammer on it so

00:31:14,280 --> 00:31:20,640
[Applause]

00:31:16,560 --> 00:31:20,640

YouTube URL: https://www.youtube.com/watch?v=gpDBX3hYnTE


