Title: Peter Crona - Clear Architecture in the small | JSUnconf 2019
Publication date: 2019-05-23
Playlist: JSUnconf 2019
Description: 
	
Captions: 
	00:00:05,359 --> 00:00:11,570
hello so first of all I'm really happy

00:00:08,760 --> 00:00:14,549
that so many people are interested in a

00:00:11,570 --> 00:00:17,400
clean architecture or coding clean

00:00:14,549 --> 00:00:19,619
components in the front-end code quality

00:00:17,400 --> 00:00:22,130
or clean code is something that I really

00:00:19,619 --> 00:00:25,109
am passionate about and I think that

00:00:22,130 --> 00:00:28,260
learning some tricks can actually help

00:00:25,109 --> 00:00:31,500
you to significantly improve your code

00:00:28,260 --> 00:00:35,070
and make it a lot more testable and yeah

00:00:31,500 --> 00:00:38,700
I kind of repurposed my initial idea of

00:00:35,070 --> 00:00:41,760
using snake to convey some of these

00:00:38,700 --> 00:00:43,739
ideas because I was inspired by a talk

00:00:41,760 --> 00:00:46,770
yesterday about clean architecture

00:00:43,739 --> 00:00:50,579
looking at it a bit from a higher level

00:00:46,770 --> 00:00:55,800
and I just felt that that was exactly

00:00:50,579 --> 00:00:58,710
what I wanted to share too so first of

00:00:55,800 --> 00:01:01,289
all a bit about me my name is Peter and

00:00:58,710 --> 00:01:05,909
I'm a developer at small improvements in

00:01:01,289 --> 00:01:07,770
Berlin I'm a big fan of many things but

00:01:05,909 --> 00:01:10,530
among these things are functional

00:01:07,770 --> 00:01:12,920
programming clean code keeping things

00:01:10,530 --> 00:01:15,780
simple regardless of what it is and

00:01:12,920 --> 00:01:19,259
perhaps a bit random air quality I'm

00:01:15,780 --> 00:01:28,640
quite obsessed about measuring particles

00:01:19,259 --> 00:01:32,220
and stuff odd things about me okay and

00:01:28,640 --> 00:01:35,729
yeah so even if a snake is not like main

00:01:32,220 --> 00:01:38,880
thing now but I still have a lot of

00:01:35,729 --> 00:01:43,909
snake stuff and it might be helpful for

00:01:38,880 --> 00:01:47,390
you to see an example of how it looks

00:01:43,909 --> 00:01:50,390
just so that the code examples are a bit

00:01:47,390 --> 00:01:50,390
clearer

00:01:52,100 --> 00:02:01,439
so let me embarrass myself by losing a

00:01:56,610 --> 00:02:07,710
snake quickly so this is the a game that

00:02:01,439 --> 00:02:10,849
I built and we will use that as an

00:02:07,710 --> 00:02:13,310
example but I will also go beyond just

00:02:10,849 --> 00:02:15,110
snake and show you some example

00:02:13,310 --> 00:02:19,670
that are perhaps more in line with what

00:02:15,110 --> 00:02:25,250
you might I died that are a bit more in

00:02:19,670 --> 00:02:28,819
line with what you might be be coding on

00:02:25,250 --> 00:02:32,390
a day-to-day basis but I think snake is

00:02:28,819 --> 00:02:33,980
a great example because it's yeah you

00:02:32,390 --> 00:02:39,560
couldn't see it has a component with

00:02:33,980 --> 00:02:43,630
quite a lot of interaction so a quick

00:02:39,560 --> 00:02:47,090
outline first we'll look a bit at

00:02:43,630 --> 00:02:50,150
presentation versus model or present or

00:02:47,090 --> 00:02:53,600
view versus logic whatever you call it

00:02:50,150 --> 00:02:56,450
but I'm trying to distinguish between

00:02:53,600 --> 00:03:00,290
these two different things and then dive

00:02:56,450 --> 00:03:04,819
a bit deeper into what a model is how it

00:03:00,290 --> 00:03:09,310
can look like and then proceed with

00:03:04,819 --> 00:03:13,100
views because they are pretty useful and

00:03:09,310 --> 00:03:16,700
some testing on top of that and finally

00:03:13,100 --> 00:03:21,620
I will summarize learnings so what you

00:03:16,700 --> 00:03:26,450
can take with you so let's start with

00:03:21,620 --> 00:03:30,829
kind of a quiz or just yeah engaging you

00:03:26,450 --> 00:03:33,049
as the audience so if you look at the

00:03:30,829 --> 00:03:34,640
first one a checkout flow what would you

00:03:33,049 --> 00:03:37,040
categorize that as is that a

00:03:34,640 --> 00:03:46,150
presentation thing or is it like more

00:03:37,040 --> 00:03:51,799
model logic any opinions ideas sorry

00:03:46,150 --> 00:03:54,880
yeah it's good I will also share my

00:03:51,799 --> 00:03:54,880
opinions after

00:03:55,640 --> 00:04:09,440
and generating components what would you

00:03:59,180 --> 00:04:14,800
treat at us very good and the setting

00:04:09,440 --> 00:04:19,609
game over if you hit the wall very nice

00:04:14,800 --> 00:04:22,670
and yeah the first one a bit tricky in

00:04:19,609 --> 00:04:25,030
my opinion fingers both and you have to

00:04:22,670 --> 00:04:27,950
remember here that we are looking at

00:04:25,030 --> 00:04:30,020
focusing on the front end a bit so what

00:04:27,950 --> 00:04:31,490
what our model is in the front end can

00:04:30,020 --> 00:04:35,870
be a bit different from what you would

00:04:31,490 --> 00:04:39,650
see it as in the back end for example I

00:04:35,870 --> 00:04:43,130
think some frameworks call it also view

00:04:39,650 --> 00:04:45,590
model for example which is kind of

00:04:43,130 --> 00:04:48,470
speaking to that but yeah I would say

00:04:45,590 --> 00:04:51,590
check out flow as it needs both both

00:04:48,470 --> 00:04:54,680
sides generating components presentation

00:04:51,590 --> 00:04:57,590
ideally of a model and setting game over

00:04:54,680 --> 00:05:01,669
if you hit the wall and this is in snake

00:04:57,590 --> 00:05:06,950
then I would treat as a model concern so

00:05:01,669 --> 00:05:13,070
what can a model look like here's an

00:05:06,950 --> 00:05:16,100
example of check out model I made up so

00:05:13,070 --> 00:05:20,060
you have a step because this is a

00:05:16,100 --> 00:05:22,970
stepwise stepwise process and the first

00:05:20,060 --> 00:05:25,610
step could for example be entering your

00:05:22,970 --> 00:05:29,300
contact details which consists of a

00:05:25,610 --> 00:05:31,370
bunch of fields and then perhaps yeah

00:05:29,300 --> 00:05:34,400
perhaps based on the country you select

00:05:31,370 --> 00:05:37,640
you offer different payment methods or

00:05:34,400 --> 00:05:39,979
something so you need this for multiple

00:05:37,640 --> 00:05:43,490
purposes both to influence how you

00:05:39,979 --> 00:05:47,210
render the view later on and to have

00:05:43,490 --> 00:05:49,490
this logic in the system so in Iceland

00:05:47,210 --> 00:05:53,530
you can pay with cookies but in Sweden

00:05:49,490 --> 00:05:58,760
maybe pay with blueberries or something

00:05:53,530 --> 00:06:02,960
another model would be snake my favorite

00:05:58,760 --> 00:06:06,080
model so in snake it's yeah you saw me

00:06:02,960 --> 00:06:07,260
playing it before and I was listing or

00:06:06,080 --> 00:06:09,660
showing the status

00:06:07,260 --> 00:06:13,070
if it's game over or the game is running

00:06:09,660 --> 00:06:15,920
the score and then you have a bunch of

00:06:13,070 --> 00:06:19,230
details that you need to keep track of

00:06:15,920 --> 00:06:20,490
to be able to like ya decide what

00:06:19,230 --> 00:06:24,330
happens next

00:06:20,490 --> 00:06:26,640
can I press up what happens when the

00:06:24,330 --> 00:06:28,680
time goes on will I move up if I eat an

00:06:26,640 --> 00:06:33,390
apple what happens then and where are

00:06:28,680 --> 00:06:36,120
actually the apples so let's do an

00:06:33,390 --> 00:06:38,370
experiment because we didn't introduce

00:06:36,120 --> 00:06:41,930
views yet

00:06:38,370 --> 00:06:45,950
really so how would it look if you would

00:06:41,930 --> 00:06:45,950
just play with a model

00:06:55,719 --> 00:07:01,959
and we will go into this disc out a bit

00:06:59,379 --> 00:07:06,489
later so don't have to care too much

00:07:01,959 --> 00:07:07,959
about it so in a very easy way to play

00:07:06,489 --> 00:07:10,559
with our model is to just use

00:07:07,959 --> 00:07:10,559
console.log

00:07:20,080 --> 00:07:28,180
and it's it becomes a bit trickier think

00:07:24,220 --> 00:07:29,710
yeah already game over now that

00:07:28,180 --> 00:07:35,530
challenge is kind of not eating the

00:07:29,710 --> 00:07:37,449
apples but staying alive yeah so that's

00:07:35,530 --> 00:07:39,699
how it look and it shows that the model

00:07:37,449 --> 00:07:42,310
is kind of enough in a sense it's what

00:07:39,699 --> 00:07:44,500
you need to be running whatever you do

00:07:42,310 --> 00:07:47,139
and the check out example exam for

00:07:44,500 --> 00:07:49,389
example you could also technically work

00:07:47,139 --> 00:07:52,150
with the model you see the step and you

00:07:49,389 --> 00:07:56,590
you're on your own say that I so now I

00:07:52,150 --> 00:07:59,169
need to fill in the contact details but

00:07:56,590 --> 00:08:04,840
it's really boring to play with this

00:07:59,169 --> 00:08:07,120
model directly so we need views and what

00:08:04,840 --> 00:08:08,710
is a view yeah you can see it is

00:08:07,120 --> 00:08:11,889
something that you just connect to your

00:08:08,710 --> 00:08:14,919
model kind of a mapping of your model

00:08:11,889 --> 00:08:17,949
into something else so you take the

00:08:14,919 --> 00:08:20,319
model transform it for example you

00:08:17,949 --> 00:08:23,259
already seen how I did it into the

00:08:20,319 --> 00:08:27,159
browser using under the hood react

00:08:23,259 --> 00:08:30,219
components you also seen one of Darwin

00:08:27,159 --> 00:08:33,339
here console.log that I used it's in a

00:08:30,219 --> 00:08:36,849
sense of view and then I could also

00:08:33,339 --> 00:08:40,870
implement a terminal view which I

00:08:36,849 --> 00:08:47,620
actually did but what is a view at a bit

00:08:40,870 --> 00:08:51,070
of a higher level so in essence if we

00:08:47,620 --> 00:08:54,459
look at the snake example you present

00:08:51,070 --> 00:08:57,880
the model and then yeah I'm kind of

00:08:54,459 --> 00:09:00,730
combining also what you would if you

00:08:57,880 --> 00:09:04,149
know MVC for example you typically treat

00:09:00,730 --> 00:09:07,660
this as the controller bit but in react

00:09:04,149 --> 00:09:10,060
world it's very common to group these

00:09:07,660 --> 00:09:16,680
together in the component which I also

00:09:10,060 --> 00:09:20,949
do but so a view in react world is about

00:09:16,680 --> 00:09:23,140
present presenting what you have so we

00:09:20,949 --> 00:09:25,990
need to draw the status in some way so

00:09:23,140 --> 00:09:27,880
this is the conceptual idea and we draw

00:09:25,990 --> 00:09:30,819
the apples we draw the snake we draw the

00:09:27,880 --> 00:09:32,640
walls and we repeat and we need to move

00:09:30,819 --> 00:09:34,260
the game forward by

00:09:32,640 --> 00:09:36,450
the stick which moves it moves it

00:09:34,260 --> 00:09:39,089
forward in time and then we have a bunch

00:09:36,450 --> 00:09:42,870
of things that allow us to manipulate

00:09:39,089 --> 00:09:45,329
this view and as I said the snake is

00:09:42,870 --> 00:09:47,820
just an example because it's fun to work

00:09:45,329 --> 00:09:50,700
with but actually this is how I think

00:09:47,820 --> 00:09:54,329
you should be coding in your normal

00:09:50,700 --> 00:09:56,490
day-to-day coding for example with the

00:09:54,329 --> 00:09:58,370
checkout flow you could have something

00:09:56,490 --> 00:10:01,800
like this

00:09:58,370 --> 00:10:04,500
so we render the contact details which

00:10:01,800 --> 00:10:06,690
is some kind of form and this form has

00:10:04,500 --> 00:10:09,810
some handlers that allow you to

00:10:06,690 --> 00:10:13,140
manipulate the model so this set name

00:10:09,810 --> 00:10:15,360
will give in a model and a new name

00:10:13,140 --> 00:10:17,700
give you back your new model which has

00:10:15,360 --> 00:10:21,329
this name set and then you rerender it

00:10:17,700 --> 00:10:23,820
so it's yeah it's not limited to snake

00:10:21,329 --> 00:10:27,180
but you can apply it for anything

00:10:23,820 --> 00:10:30,240
basically in the front end and let's

00:10:27,180 --> 00:10:42,440
have a quick look at how this actually

00:10:30,240 --> 00:10:42,440
looks in real code that's also

00:10:49,590 --> 00:10:56,940
so can can everyone see the coat is it

00:10:54,090 --> 00:10:59,490
large enough cool

00:10:56,940 --> 00:11:01,950
so this conceptual yeah there is some

00:10:59,490 --> 00:11:04,980
boilerplate here because this model is

00:11:01,950 --> 00:11:08,279
running in the terminal but you can see

00:11:04,980 --> 00:11:11,250
these drawn methods here draw snake draw

00:11:08,279 --> 00:11:13,520
apples and then yeah a bit

00:11:11,250 --> 00:11:17,040
boilerplate getting the initialize

00:11:13,520 --> 00:11:19,589
initialization but here is the loop that

00:11:17,040 --> 00:11:23,760
you saw in this conceptual idea where we

00:11:19,589 --> 00:11:27,350
draw the different parts and manipulate

00:11:23,760 --> 00:11:31,200
in the model and one observation is that

00:11:27,350 --> 00:11:34,160
it's pretty simple in there are not many

00:11:31,200 --> 00:11:40,640
like if statement conditionals and stuff

00:11:34,160 --> 00:11:40,640
and let's also have a look at react one

00:11:48,070 --> 00:11:56,200
cool yeah and by the way I'm using some

00:11:51,390 --> 00:11:58,240
typescript but to such an extent so it

00:11:56,200 --> 00:12:03,010
you don't really need to know it or care

00:11:58,240 --> 00:12:05,320
about it so it looks a bit different

00:12:03,010 --> 00:12:08,530
because I'm using react here and have to

00:12:05,320 --> 00:12:12,150
adapt to react but the principle is

00:12:08,530 --> 00:12:15,400
still the same so up here I have these

00:12:12,150 --> 00:12:18,760
mappings that allow me to control the

00:12:15,400 --> 00:12:20,320
model and yeah need to do it a bit

00:12:18,760 --> 00:12:22,450
differently because I don't want to

00:12:20,320 --> 00:12:27,250
rerender all the time

00:12:22,450 --> 00:12:31,060
and here is the game loop and because in

00:12:27,250 --> 00:12:34,450
react you given the state update you

00:12:31,060 --> 00:12:37,060
render the state so so I don't do draw

00:12:34,450 --> 00:12:40,780
walls and stuff here but I rather do

00:12:37,060 --> 00:12:44,230
that here that you might recognize and

00:12:40,780 --> 00:12:48,190
again something to observe is that this

00:12:44,230 --> 00:12:51,760
is pretty simple code there's not much

00:12:48,190 --> 00:12:55,270
that tells you about the game for

00:12:51,760 --> 00:12:58,890
example you can't really say even what

00:12:55,270 --> 00:13:01,930
happens if I eat an apple all of this is

00:12:58,890 --> 00:13:06,040
not not existing here but everything is

00:13:01,930 --> 00:13:10,750
just about putting the pixels on the in

00:13:06,040 --> 00:13:19,650
the browser basically so let's jump back

00:13:10,750 --> 00:13:30,600
to presentation yeah

00:13:19,650 --> 00:13:30,600
testing so actually I wonder if I

00:13:33,490 --> 00:13:36,910
yeah I've been running for it pretty

00:13:35,380 --> 00:13:39,160
quick but testing is there an

00:13:36,910 --> 00:13:45,820
interesting topic so let's try to spend

00:13:39,160 --> 00:13:55,300
some time there so test one problem that

00:13:45,820 --> 00:13:56,980
I often see and if you look at what

00:13:55,300 --> 00:13:59,560
actually we will see it when we look at

00:13:56,980 --> 00:14:01,089
the test so a problem with tests that I

00:13:59,560 --> 00:14:03,459
often sees that they are very very

00:14:01,089 --> 00:14:06,070
detailed it's like for example in a

00:14:03,459 --> 00:14:08,320
snake game a test could be a set

00:14:06,070 --> 00:14:11,740
movement vector should set the movement

00:14:08,320 --> 00:14:13,630
vector and you assert on that and I mean

00:14:11,740 --> 00:14:16,570
that's an extreme example but you will

00:14:13,630 --> 00:14:20,589
see often a huge amount of tests that

00:14:16,570 --> 00:14:22,480
are at a very detailed level and I want

00:14:20,589 --> 00:14:25,810
to show you how I think tests should

00:14:22,480 --> 00:14:27,430
look like and how these principles when

00:14:25,810 --> 00:14:31,680
you put them all together makes it

00:14:27,430 --> 00:14:31,680
really easy to accomplish that

00:14:41,940 --> 00:14:49,380
so these are my tests for the snake

00:14:44,190 --> 00:14:54,600
model yeah first start with a bunch of

00:14:49,380 --> 00:14:58,680
simple tests that that you would

00:14:54,600 --> 00:15:00,990
probably normally see also but then I

00:14:58,680 --> 00:15:03,330
test confirmed that very important

00:15:00,990 --> 00:15:06,960
properties of the snake model works for

00:15:03,330 --> 00:15:09,660
example different seats so this is

00:15:06,960 --> 00:15:13,800
another point that allowed me to do

00:15:09,660 --> 00:15:16,170
testing well that yeah I don't rely my

00:15:13,800 --> 00:15:21,060
model is pure as well maybe that's

00:15:16,170 --> 00:15:23,700
something worth mentioning that the

00:15:21,060 --> 00:15:26,430
model execution of the model will always

00:15:23,700 --> 00:15:31,710
give the same result and one key aspect

00:15:26,430 --> 00:15:33,870
of that is that it's pure so I'm using a

00:15:31,710 --> 00:15:36,560
seat that initializes our random

00:15:33,870 --> 00:15:39,690
generator that allows me to still get

00:15:36,560 --> 00:15:42,960
randomness in it while keeping it pure I

00:15:39,690 --> 00:15:44,430
can show you that soon but here I just

00:15:42,960 --> 00:15:48,030
confirm the property but the more

00:15:44,430 --> 00:15:54,660
interesting tests are here where I'm

00:15:48,030 --> 00:15:57,650
pretty much playing the game so going

00:15:54,660 --> 00:16:01,800
into the top wall leads to game over and

00:15:57,650 --> 00:16:04,830
check the order walls as well eating an

00:16:01,800 --> 00:16:05,340
apple increases the score by 1 and what

00:16:04,830 --> 00:16:09,080
do I do

00:16:05,340 --> 00:16:12,840
well I just create a game instance and

00:16:09,080 --> 00:16:16,410
play until I eat an apple and thanks to

00:16:12,840 --> 00:16:19,830
using this seat for the random

00:16:16,410 --> 00:16:22,170
generation I know that the apple will

00:16:19,830 --> 00:16:24,960
always be at the same place even if a

00:16:22,170 --> 00:16:26,820
user would perceive it as random of

00:16:24,960 --> 00:16:29,340
course when you play the game I just use

00:16:26,820 --> 00:16:32,160
a random seed every time that makes sure

00:16:29,340 --> 00:16:36,750
that you can't memorize where the apples

00:16:32,160 --> 00:16:38,550
are and stuff like that yeah but I

00:16:36,750 --> 00:16:43,710
managed to test like pretty much the

00:16:38,550 --> 00:16:46,050
whole game here snake is growing snake

00:16:43,710 --> 00:16:50,370
crushing into itself leads to game over

00:16:46,050 --> 00:16:53,520
and all of this is done with tests that

00:16:50,370 --> 00:16:55,760
basically could be as the usage of the

00:16:53,520 --> 00:16:55,760
code

00:16:57,120 --> 00:17:05,320
and yeah what enables this simple

00:17:00,910 --> 00:17:07,690
testing yeah a pure model the random

00:17:05,320 --> 00:17:14,709
generation something very importance is

00:17:07,690 --> 00:17:19,570
simple construction of the object let me

00:17:14,709 --> 00:17:21,490
show you so to create a snake game and

00:17:19,570 --> 00:17:23,830
this is actually something you typically

00:17:21,490 --> 00:17:25,420
don't fully can control because

00:17:23,830 --> 00:17:30,940
sometimes you just need a lot of data

00:17:25,420 --> 00:17:32,740
but based on my experience yeah

00:17:30,940 --> 00:17:35,560
from whenever I started being

00:17:32,740 --> 00:17:40,090
professional software developer one of

00:17:35,560 --> 00:17:43,630
the biggest obstacles are that it's hard

00:17:40,090 --> 00:17:48,250
to test and it makes people skip it so

00:17:43,630 --> 00:17:51,030
is a construction rich model with very

00:17:48,250 --> 00:17:54,700
meaningful modifiers so I'm a big fan of

00:17:51,030 --> 00:17:58,420
DDD domain-driven design and this is

00:17:54,700 --> 00:18:01,150
something I brought with me from that so

00:17:58,420 --> 00:18:04,450
rather than having a set movement vector

00:18:01,150 --> 00:18:06,730
method on my model that I looked at a

00:18:04,450 --> 00:18:10,450
lot of snake implementations and most of

00:18:06,730 --> 00:18:14,710
them were dealing with updating the dxdy

00:18:10,450 --> 00:18:17,050
to to make things yeah to change the

00:18:14,710 --> 00:18:22,090
movement but I just call it move up and

00:18:17,050 --> 00:18:25,510
that's what I use in my tests so I try

00:18:22,090 --> 00:18:28,330
to make the model very deep in a sense

00:18:25,510 --> 00:18:30,100
so there is of course a lot involved in

00:18:28,330 --> 00:18:34,300
moving up I have to check if it's

00:18:30,100 --> 00:18:40,260
possible and stuff like that but the

00:18:34,300 --> 00:18:40,260
model on the exposes simple move up

00:18:44,640 --> 00:18:53,580
yeah or we have to move down example

00:18:47,910 --> 00:18:55,740
here and complete separation of model

00:18:53,580 --> 00:18:58,370
and view I think that's the most

00:18:55,740 --> 00:19:01,260
essential things and it boils down to

00:18:58,370 --> 00:19:04,530
separation of concerns what we discussed

00:19:01,260 --> 00:19:07,140
in the beginning with what is what is

00:19:04,530 --> 00:19:10,440
presentation what is model this is

00:19:07,140 --> 00:19:13,740
really the key to to code cleaner

00:19:10,440 --> 00:19:16,470
components because as you've seen

00:19:13,740 --> 00:19:18,960
examples the view layers just be are

00:19:16,470 --> 00:19:22,260
trivial basically and all the logic

00:19:18,960 --> 00:19:24,900
lives in the model and the model itself

00:19:22,260 --> 00:19:27,540
is also trivial or at least you can make

00:19:24,900 --> 00:19:30,750
it it's a bit of a different small scale

00:19:27,540 --> 00:19:34,140
challenge how you code it but as long as

00:19:30,750 --> 00:19:36,000
the interface from it is nice then you

00:19:34,140 --> 00:19:38,220
have something really nice to work with

00:19:36,000 --> 00:19:42,929
that will kind of translate into a

00:19:38,220 --> 00:19:45,210
simple view simple react components yeah

00:19:42,929 --> 00:19:47,280
nothing it's important that in your

00:19:45,210 --> 00:19:48,870
day-to-day work you need to remove

00:19:47,280 --> 00:19:52,770
obstacles you need to make it really

00:19:48,870 --> 00:19:56,010
simple to make people test more because

00:19:52,770 --> 00:19:57,929
this is I often heard these arguments

00:19:56,010 --> 00:20:01,890
like is testing really worth it it's

00:19:57,929 --> 00:20:07,049
such a big maintenance burdens it just

00:20:01,890 --> 00:20:10,230
takes a lot of time but I think if you

00:20:07,049 --> 00:20:12,299
showed tests where an application where

00:20:10,230 --> 00:20:16,679
all tests looks kind of like this then

00:20:12,299 --> 00:20:20,460
this would partly disappear and this is

00:20:16,679 --> 00:20:24,030
what happened at my work for example we

00:20:20,460 --> 00:20:28,020
we started to write way simpler tests

00:20:24,030 --> 00:20:31,140
and it makes a lot of people write more

00:20:28,020 --> 00:20:33,000
tests that I you can just see that that

00:20:31,140 --> 00:20:35,760
when you extract out the logic from the

00:20:33,000 --> 00:20:38,190
components then it's so easy so there is

00:20:35,760 --> 00:20:40,830
no excuse and the tests are really

00:20:38,190 --> 00:20:42,809
meaningful as well so you you kind of

00:20:40,830 --> 00:20:49,200
can motivate for yourself why they are

00:20:42,809 --> 00:20:53,370
valuable so what are the biggest

00:20:49,200 --> 00:20:56,760
learnings well I would say that I have a

00:20:53,370 --> 00:20:57,760
lot of learnings in one way but there

00:20:56,760 --> 00:21:01,840
are only two things

00:20:57,760 --> 00:21:03,820
that are really important to like if you

00:21:01,840 --> 00:21:07,660
would start to do this I think you would

00:21:03,820 --> 00:21:10,180
produce better code that's my belief

00:21:07,660 --> 00:21:12,670
that if you kick up kick out the model

00:21:10,180 --> 00:21:15,300
from your component to really be strict

00:21:12,670 --> 00:21:19,360
about separating it go back to the old

00:21:15,300 --> 00:21:26,620
MVC wrote I'm sure you done it at some

00:21:19,360 --> 00:21:29,140
point then yeah separate it out and for

00:21:26,620 --> 00:21:32,380
example at work I am really happy every

00:21:29,140 --> 00:21:35,410
time I see a folder which has the

00:21:32,380 --> 00:21:38,260
component we often put it in indexed ojs

00:21:35,410 --> 00:21:41,590
and next to it sits a model jeaious and

00:21:38,260 --> 00:21:43,690
this is a really small model that or

00:21:41,590 --> 00:21:46,000
well the size doesn't matter but it's a

00:21:43,690 --> 00:21:48,940
model where all the logic has been

00:21:46,000 --> 00:21:52,420
extracted which ensures that the

00:21:48,940 --> 00:21:55,780
component itself is super pure super

00:21:52,420 --> 00:21:58,390
nice super easy to read and the model is

00:21:55,780 --> 00:22:02,070
trivial to test super quick to tests and

00:21:58,390 --> 00:22:05,320
as I showed you the tests are not really

00:22:02,070 --> 00:22:06,610
limited to a set movement vector or

00:22:05,320 --> 00:22:10,630
stuff like that but you can actually

00:22:06,610 --> 00:22:12,970
test the whole logic such as playing a

00:22:10,630 --> 00:22:21,250
game of snake or whatever you are doing

00:22:12,970 --> 00:22:31,510
our checkout flow yeah I think we can go

00:22:21,250 --> 00:22:36,630
to if there are any questions everything

00:22:31,510 --> 00:22:36,630
crystal yeah you in the back

00:22:41,220 --> 00:22:50,260
that's correct and that was an example

00:22:44,800 --> 00:22:52,150
of like kind of one of the points of you

00:22:50,260 --> 00:22:53,650
normally you don't care about that you

00:22:52,150 --> 00:22:55,780
don't need to run your model in

00:22:53,650 --> 00:22:58,510
different places but this is a free

00:22:55,780 --> 00:23:01,660
benefit you get and it's a clear example

00:22:58,510 --> 00:23:13,180
of how separation of concerns help you

00:23:01,660 --> 00:23:15,370
so if we look at my snake model so so

00:23:13,180 --> 00:23:17,380
the snake model it really doesn't know

00:23:15,370 --> 00:23:23,980
anything about where it's running we are

00:23:17,380 --> 00:23:26,680
creating the model that I showed and I'm

00:23:23,980 --> 00:23:30,280
using some interesting concepts but not

00:23:26,680 --> 00:23:36,640
so important but then we have these move

00:23:30,280 --> 00:23:40,890
up move down and let's look at exported

00:23:36,640 --> 00:23:43,420
things and at each method get the score

00:23:40,890 --> 00:23:44,590
so it doesn't matter where it runs and

00:23:43,420 --> 00:23:49,210
that's why I could run it in the

00:23:44,590 --> 00:23:55,680
terminal and browser actually I might

00:23:49,210 --> 00:23:55,680
also so in the terminal I also did

00:24:03,450 --> 00:24:13,280
I did build an interface so you can

00:24:10,740 --> 00:24:18,810
actually play it as a real snake as well

00:24:13,280 --> 00:24:21,060
and like abuse you can have as many

00:24:18,810 --> 00:24:25,700
views as you want by separating the

00:24:21,060 --> 00:24:28,890
model out like this any other questions

00:24:25,700 --> 00:24:31,700
or do you want to see details of any

00:24:28,890 --> 00:24:31,700
specific part

00:24:39,230 --> 00:24:46,480
okay so maybe a final question from me

00:24:42,850 --> 00:24:50,419
did you learn anything do you feel that

00:24:46,480 --> 00:24:56,150
will you separate out your models a tiny

00:24:50,419 --> 00:24:59,000
bit more after my talk at least I see

00:24:56,150 --> 00:25:03,890
nodding heads very nice

00:24:59,000 --> 00:25:07,640
it's truly it it truly has a very big

00:25:03,890 --> 00:25:09,830
impact on your code and for me these the

00:25:07,640 --> 00:25:13,280
principles from clean architecture that

00:25:09,830 --> 00:25:16,460
I read the book and I often apply it in

00:25:13,280 --> 00:25:19,240
the back end and I also read Dedede book

00:25:16,460 --> 00:25:23,120
which I really love there which

00:25:19,240 --> 00:25:25,190
emphasizes separating out the business

00:25:23,120 --> 00:25:29,299
logic which in this case would be the

00:25:25,190 --> 00:25:33,230
snake model and this this theory can

00:25:29,299 --> 00:25:35,600
really help you to produce the cleaner

00:25:33,230 --> 00:25:42,679
code that is just easier to maintain

00:25:35,600 --> 00:25:45,620
more fun to work with yeah so if there

00:25:42,679 --> 00:25:48,980
are no questions or anything you want to

00:25:45,620 --> 00:25:53,350
see yeah this is what you would have

00:25:48,980 --> 00:25:58,669
seen in my FB talk but maybe next time

00:25:53,350 --> 00:26:03,130
but very nice in my opinion okay that's

00:25:58,669 --> 00:26:05,780
it then thank you very much and please

00:26:03,130 --> 00:26:10,089
[Music]

00:26:05,780 --> 00:26:10,089

YouTube URL: https://www.youtube.com/watch?v=lazY98Z00RA


