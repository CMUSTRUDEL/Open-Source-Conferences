Title: Lisa Passing â€“ Ukulele Hero [Reject.JS 2015]
Publication date: 2015-10-08
Playlist: Reject.JS 2015
Description: 
	Reject.JS 2015 â€“ Berlin, September 24, 2015

Slides: https://github.com/lislis/ukulele-hero-slides
Lisa Passing - #whoislisapassing

# Ukulele Hero

One of the things that make video games awesome is that you can use anything to make a game. One of the things that make being a web developer awesome is that you have a lot of amazing APIs at your disposal.

Why not combine both for maximum effect? Like using the Web Audio API to make your own music driven game using a real life ukulele as controller? Iâ€™d like to show you how, why and on top youâ€™ll learn some music theory.

http://rejectjs.org - http://twitter.com/rejectjs
Music by: https://soundcloud.com/7digits
Video by: http://wecap.de
Captions: 
	00:00:06,799 --> 00:00:19,619
reject thank you for the intro can you

00:00:15,719 --> 00:00:20,850
hear me all right cool yeah so you could

00:00:19,619 --> 00:00:22,890
really hear Oh

00:00:20,850 --> 00:00:28,439
first of all hey reject is how are y'all

00:00:22,890 --> 00:00:30,300
doing nice I wanted to say a quick thank

00:00:28,439 --> 00:00:33,450
you to the organizers who were like very

00:00:30,300 --> 00:00:36,149
supportive in like making me like

00:00:33,450 --> 00:00:38,460
actually propose a talk and then Here I

00:00:36,149 --> 00:00:41,610
am standing talking to you and I'm

00:00:38,460 --> 00:00:43,020
thinking a very thankful for that as Yun

00:00:41,610 --> 00:00:47,360
said hi I'm Lisa

00:00:43,020 --> 00:00:50,129
um yes there is a hashtag with my name

00:00:47,360 --> 00:00:52,260
other ways of communicating with me are

00:00:50,129 --> 00:00:53,789
shooting me an email this is my

00:00:52,260 --> 00:00:56,100
preferred way and if you're really into

00:00:53,789 --> 00:00:58,199
social media I am NOT on Twitter that is

00:00:56,100 --> 00:01:00,059
the reason why there's this hashtag so

00:00:58,199 --> 00:01:04,530
people can talk about me without me

00:01:00,059 --> 00:01:06,390
being involved and but if you're really

00:01:04,530 --> 00:01:08,760
really into social media and you can

00:01:06,390 --> 00:01:10,500
find me with this handle this a wk3 arc

00:01:08,760 --> 00:01:12,240
on diaspora which is a super cool

00:01:10,500 --> 00:01:13,680
decentralized open-source social network

00:01:12,240 --> 00:01:17,700
and if you don't know what that is come

00:01:13,680 --> 00:01:21,119
talk to me afterwards yeah let's get

00:01:17,700 --> 00:01:22,830
started um exciting times we saw like in

00:01:21,119 --> 00:01:25,740
the first talk like Hardware hacks with

00:01:22,830 --> 00:01:27,750
JavaScript and it feels like this every

00:01:25,740 --> 00:01:30,570
day there's something new we get new

00:01:27,750 --> 00:01:32,280
browser api's we get new a new standard

00:01:30,570 --> 00:01:34,590
is released or a new best practice or

00:01:32,280 --> 00:01:36,420
somebody has an opinion an opinion on

00:01:34,590 --> 00:01:38,159
something and somebody else has a

00:01:36,420 --> 00:01:41,340
different opinion and you think like hmm

00:01:38,159 --> 00:01:42,630
what is my opinion on that thing yeah

00:01:41,340 --> 00:01:45,240
and there's all these things that come

00:01:42,630 --> 00:01:47,280
up and all the things that I read about

00:01:45,240 --> 00:01:48,780
and I feel like oh my god I really want

00:01:47,280 --> 00:01:50,100
to hack on this I want to get my hands

00:01:48,780 --> 00:01:51,240
dirty I want to like build something

00:01:50,100 --> 00:01:53,310
that's cool with like all the stuff that

00:01:51,240 --> 00:01:55,770
is now available and I can just do it in

00:01:53,310 --> 00:01:59,189
JavaScript because like the entry level

00:01:55,770 --> 00:02:02,369
to all these things is so low the thing

00:01:59,189 --> 00:02:04,530
is I don't know where to start

00:02:02,369 --> 00:02:06,350
I spent my day job mostly writing CSS

00:02:04,530 --> 00:02:09,300
with a little bit of JavaScript and

00:02:06,350 --> 00:02:11,160
we're using ember and there's not much

00:02:09,300 --> 00:02:13,500
time to experiment on like all these

00:02:11,160 --> 00:02:17,250
things that are so crazy and so cool

00:02:13,500 --> 00:02:19,800
and so I have like no no entry point

00:02:17,250 --> 00:02:22,800
really and also what would I built

00:02:19,800 --> 00:02:24,390
because so I'm working at Travis CI and

00:02:22,800 --> 00:02:26,850
we build continuous integration software

00:02:24,390 --> 00:02:29,430
and but this is nothing that I would do

00:02:26,850 --> 00:02:32,240
as like a pet or hobby project where I

00:02:29,430 --> 00:02:36,240
would rather do something else with

00:02:32,240 --> 00:02:39,470
basically anything else that is fun like

00:02:36,240 --> 00:02:43,260
really fun for me as a programmer

00:02:39,470 --> 00:02:46,680
something that's also fun for me is or

00:02:43,260 --> 00:02:49,200
are video games I've been a fan of video

00:02:46,680 --> 00:02:50,670
games for like a long long time I spend

00:02:49,200 --> 00:02:52,680
a lot of time in my youth

00:02:50,670 --> 00:02:54,810
playing video games and I think I've

00:02:52,680 --> 00:02:57,060
only grown more attached to them as I

00:02:54,810 --> 00:02:59,250
learned to program because I started to

00:02:57,060 --> 00:03:00,959
think about what is actually happening

00:02:59,250 --> 00:03:04,110
happening like in the back of a video

00:03:00,959 --> 00:03:06,510
game and I said I think about like how

00:03:04,110 --> 00:03:08,570
game design works and what is it that

00:03:06,510 --> 00:03:12,500
like in fast people was like really like

00:03:08,570 --> 00:03:17,700
making them obsessed with playing a game

00:03:12,500 --> 00:03:19,170
yeah so reasons why and I thought about

00:03:17,700 --> 00:03:20,850
a lot about that why I like video games

00:03:19,170 --> 00:03:25,019
so much and select the combination of

00:03:20,850 --> 00:03:27,060
all the all the things basically you not

00:03:25,019 --> 00:03:28,739
only have like visual and textual and

00:03:27,060 --> 00:03:31,019
audio information that goes into that

00:03:28,739 --> 00:03:32,640
it's like the combination of those and

00:03:31,019 --> 00:03:37,050
the set of rules that a game gives you

00:03:32,640 --> 00:03:39,390
to explore and explore not only the

00:03:37,050 --> 00:03:41,910
input and decide on the output of the

00:03:39,390 --> 00:03:48,090
game but everything else that is in

00:03:41,910 --> 00:03:50,820
between and the most like the thing that

00:03:48,090 --> 00:03:52,799
blew my mind at one point was wait I can

00:03:50,820 --> 00:03:57,450
control basically every aspect of the

00:03:52,799 --> 00:03:59,400
game with code that I write and from

00:03:57,450 --> 00:04:02,010
that point on it's like okay games are

00:03:59,400 --> 00:04:06,540
basically the canvas of what I can

00:04:02,010 --> 00:04:12,299
create and what I can like what I can

00:04:06,540 --> 00:04:14,400
make aside from a web app yeah

00:04:12,299 --> 00:04:17,820
so this is basically the thing where I

00:04:14,400 --> 00:04:19,979
say that games are art because a lot of

00:04:17,820 --> 00:04:21,780
people don't think that is true because

00:04:19,979 --> 00:04:24,419
for them video games are like shooting

00:04:21,780 --> 00:04:26,700
people which is still a big part of the

00:04:24,419 --> 00:04:29,100
game industry but this is not the part

00:04:26,700 --> 00:04:33,570
the game industry that I like and that I

00:04:29,100 --> 00:04:36,150
really really really really love so this

00:04:33,570 --> 00:04:40,680
is more about being creative with a

00:04:36,150 --> 00:04:42,510
medium so back in the beginning and

00:04:40,680 --> 00:04:43,800
there's lots of Technology especially on

00:04:42,510 --> 00:04:46,560
the web platform there's lots of

00:04:43,800 --> 00:04:49,680
technology that we can work on with

00:04:46,560 --> 00:04:51,570
JavaScript and then there's video games

00:04:49,680 --> 00:04:55,320
as like this medium that is defined by

00:04:51,570 --> 00:04:57,690
its credit creativity and those two

00:04:55,320 --> 00:05:03,830
together are just awesome and I like

00:04:57,690 --> 00:05:10,020
awesome do you like awesome I thought so

00:05:03,830 --> 00:05:11,880
yeah so this talk is called ukulele here

00:05:10,020 --> 00:05:17,340
this is why I'm introducing ukulele hero

00:05:11,880 --> 00:05:19,110
to you now people who are somewhat

00:05:17,340 --> 00:05:21,150
familiar with a similar sounding game

00:05:19,110 --> 00:05:23,940
called Guitar Hero was like I don't know

00:05:21,150 --> 00:05:27,450
if you heard of it it's a musical game

00:05:23,940 --> 00:05:31,470
where you play City play along to a song

00:05:27,450 --> 00:05:33,300
and you have a plastic guitar that is

00:05:31,470 --> 00:05:35,490
like aims to give you the feeling of

00:05:33,300 --> 00:05:40,560
like really being able to play a guitar

00:05:35,490 --> 00:05:43,650
and I thought hmm well there's this new

00:05:40,560 --> 00:05:46,830
cool thing which is like the Web Audio

00:05:43,650 --> 00:05:49,020
API and one year ago basically exactly

00:05:46,830 --> 00:05:51,420
one year ago at last year's Web Audio

00:05:49,020 --> 00:05:55,470
heck day and there's one this Saturday

00:05:51,420 --> 00:05:57,210
as well I for the first time touched the

00:05:55,470 --> 00:05:58,770
Web Audio API and it was kind of like oh

00:05:57,210 --> 00:06:01,650
my god there's so much stuff going on

00:05:58,770 --> 00:06:04,410
that I have no idea about I want to know

00:06:01,650 --> 00:06:06,300
more and this is like I started a lot

00:06:04,410 --> 00:06:08,910
about reading about the Web Audio API

00:06:06,300 --> 00:06:10,350
not understanding anything and reading

00:06:08,910 --> 00:06:12,900
more about it and still not

00:06:10,350 --> 00:06:15,060
understanding anything and this is like

00:06:12,900 --> 00:06:20,000
a long process that at one point

00:06:15,060 --> 00:06:23,640
accumulated in this torque so whoo yeah

00:06:20,000 --> 00:06:26,790
so I'm gonna like I'm gonna play the

00:06:23,640 --> 00:06:29,040
game now with you or for you and I hope

00:06:26,790 --> 00:06:31,650
you'll enjoy it I'm kind of proud of it

00:06:29,040 --> 00:06:34,650
but it doesn't look that good so this is

00:06:31,650 --> 00:06:38,250
like disclaimer this is a hack this is

00:06:34,650 --> 00:06:39,490
in no way anyway like something that

00:06:38,250 --> 00:06:41,710
would I should like

00:06:39,490 --> 00:06:42,910
I would show it to my friends and since

00:06:41,710 --> 00:06:45,220
we're all a community your are my

00:06:42,910 --> 00:06:46,780
friends so I will show it to you so this

00:06:45,220 --> 00:06:51,460
is demo time now

00:06:46,780 --> 00:06:55,060
I brought a ukulele and and I will know

00:06:51,460 --> 00:06:57,509
very elegantly switch to my play screen

00:06:55,060 --> 00:07:04,180
so yep

00:06:57,509 --> 00:07:07,599
matching slides and game so we start I

00:07:04,180 --> 00:07:09,460
get some I will get audio information

00:07:07,599 --> 00:07:13,509
from the microphone from the computer

00:07:09,460 --> 00:07:17,259
with getusermedia and I did not click

00:07:13,509 --> 00:07:22,360
right share please does it say share I

00:07:17,259 --> 00:07:27,729
can't even read it built-in microphone

00:07:22,360 --> 00:07:35,470
yes please share selected and it doesn't

00:07:27,729 --> 00:07:50,139
work that's great let's lose this one

00:07:35,470 --> 00:07:53,820
maybe no that's weird it works today I

00:07:50,139 --> 00:07:53,820
want to share please

00:07:57,150 --> 00:08:05,729
hmm okay can does someone if the other

00:08:01,750 --> 00:08:05,729
people know anything about this okay

00:08:07,210 --> 00:08:09,930
let's do it

00:08:13,850 --> 00:08:22,670
damnit I also did not prepare a

00:08:16,250 --> 00:08:26,870
recording of what I would do me great so

00:08:22,670 --> 00:08:30,530
what would happen is that it would get

00:08:26,870 --> 00:08:31,820
to a list that would tell me like to

00:08:30,530 --> 00:08:35,870
choose a song one of the songs that I

00:08:31,820 --> 00:08:37,640
prepared it would analyze the song life

00:08:35,870 --> 00:08:42,740
in the browser which is like really

00:08:37,640 --> 00:08:49,040
everything this was about and then draw

00:08:42,740 --> 00:08:59,380
and yes sorry it doesn't work in Chrome

00:08:49,040 --> 00:08:59,380
because it did yes oh okay

00:09:08,200 --> 00:09:10,860
No

00:09:16,930 --> 00:09:26,140
okay debugging I love it

00:09:40,869 --> 00:09:49,189
you think okay let's try it sorry I'll

00:09:44,389 --> 00:09:55,959
do people in my work let's make this

00:09:49,189 --> 00:09:55,959
work now

00:09:56,430 --> 00:10:08,550
mmm that is sad

00:10:00,800 --> 00:10:16,730
okay so I will just continue with the

00:10:08,550 --> 00:10:21,600
slides so no demo time I'm sorry if I

00:10:16,730 --> 00:10:23,550
can play your song I have to kind of

00:10:21,600 --> 00:10:27,020
because I like this is really bad

00:10:23,550 --> 00:10:29,760
who here knows the show Adventure Time

00:10:27,020 --> 00:10:30,450
okay do you do you want to sing along

00:10:29,760 --> 00:10:33,690
with me

00:10:30,450 --> 00:10:35,790
The Adventure Time theme song can you do

00:10:33,690 --> 00:10:39,180
that okay

00:10:35,790 --> 00:10:43,260
sorry Adventure Time come on grab your

00:10:39,180 --> 00:10:46,260
friends we go to very distant lands Jake

00:10:43,260 --> 00:10:51,380
the dog and Finn the human the fun will

00:10:46,260 --> 00:10:51,380
never end it's adventure time thank you

00:10:59,709 --> 00:11:05,540
just imagine that with basically a

00:11:02,270 --> 00:11:09,080
little illustration of look like the

00:11:05,540 --> 00:11:10,700
charts I was playing but yeah anyway if

00:11:09,080 --> 00:11:14,380
this would have worked

00:11:10,700 --> 00:11:18,680
I would now explain you how it works

00:11:14,380 --> 00:11:20,959
yeah so I would have loaded and analyzed

00:11:18,680 --> 00:11:22,370
the song there was a song that I picked

00:11:20,959 --> 00:11:27,920
from SoundCloud from a Creative Commons

00:11:22,370 --> 00:11:29,930
license and then I would get like the

00:11:27,920 --> 00:11:31,580
analyze get the life input from the

00:11:29,930 --> 00:11:33,500
ukulele through the microphone which did

00:11:31,580 --> 00:11:36,290
not work and this is like the weird part

00:11:33,500 --> 00:11:38,779
because that always works

00:11:36,290 --> 00:11:41,450
and then I build like a little game

00:11:38,779 --> 00:11:43,910
structure around it to like compare what

00:11:41,450 --> 00:11:47,570
I have calculated before and the input

00:11:43,910 --> 00:11:53,720
that I gave it life and yeah make it

00:11:47,570 --> 00:11:57,560
pretty in quotes so in depth the song I

00:11:53,720 --> 00:12:01,640
don't know if like who here has like try

00:11:57,560 --> 00:12:05,390
it out Web Audio API at one point okay a

00:12:01,640 --> 00:12:07,279
few so what you usually start is start

00:12:05,390 --> 00:12:09,920
with is creating an audio context and

00:12:07,279 --> 00:12:11,690
from that audio context you get all the

00:12:09,920 --> 00:12:13,399
other nodes that you like connect and

00:12:11,690 --> 00:12:15,860
then at one point you have this like

00:12:13,399 --> 00:12:20,630
long pipeline of the input that

00:12:15,860 --> 00:12:22,940
eventually goes and output in your your

00:12:20,630 --> 00:12:25,010
speakers and then you do stuff in the

00:12:22,940 --> 00:12:26,720
middle with it and this is also how I

00:12:25,010 --> 00:12:31,279
started when I thought about how can I

00:12:26,720 --> 00:12:33,260
analyze the song turns out like this is

00:12:31,279 --> 00:12:35,660
really really great for having like real

00:12:33,260 --> 00:12:40,160
timeline analysis of the of the audio

00:12:35,660 --> 00:12:43,180
source like what I would do with ukulele

00:12:40,160 --> 00:12:47,420
but not if I want to like analyze a song

00:12:43,180 --> 00:12:49,579
upfront yeah because I actually needed

00:12:47,420 --> 00:12:51,589
to need faster processing of the sort of

00:12:49,579 --> 00:12:53,690
the source material and therefore

00:12:51,589 --> 00:12:55,640
there's a fairly new thing that I only

00:12:53,690 --> 00:12:58,070
found out by accident because I was on

00:12:55,640 --> 00:13:00,940
Stack Overflow wondering like why can't

00:12:58,070 --> 00:13:05,709
I like process these things faster and

00:13:00,940 --> 00:13:08,990
there is offline audio context who knew

00:13:05,709 --> 00:13:11,079
they didn't ended will like what offline

00:13:08,990 --> 00:13:13,100
audio context does it will analyze data

00:13:11,079 --> 00:13:15,320
the audio data

00:13:13,100 --> 00:13:17,540
fast as it can and here's the thing why

00:13:15,320 --> 00:13:20,240
it won't work in chrome because there's

00:13:17,540 --> 00:13:22,910
a bug in Chrome apparently that just

00:13:20,240 --> 00:13:26,510
like that the processing happens so fast

00:13:22,910 --> 00:13:29,270
and that it will skip a lot of samples

00:13:26,510 --> 00:13:32,060
and we'll get like a very inaccurate and

00:13:29,270 --> 00:13:34,370
very like faulty kind of result but it

00:13:32,060 --> 00:13:38,000
works in Firefox this is why I'm I need

00:13:34,370 --> 00:13:41,780
to use Firefox which I usually do and so

00:13:38,000 --> 00:13:45,020
that's cool offline audio context as

00:13:41,780 --> 00:13:47,660
compared like in as opposed to the usual

00:13:45,020 --> 00:13:49,940
audio context takes three arguments and

00:13:47,660 --> 00:13:52,310
the first one is the channel or the

00:13:49,940 --> 00:13:54,620
number of channels you want to have the

00:13:52,310 --> 00:13:56,510
second one is the length of a buffer and

00:13:54,620 --> 00:14:00,290
the third one is the sample rate and

00:13:56,510 --> 00:14:02,510
these are all like very weird like

00:14:00,290 --> 00:14:04,520
things that you need to give to an audio

00:14:02,510 --> 00:14:06,380
context and I also had no idea this is

00:14:04,520 --> 00:14:09,140
why we have a little intermission where

00:14:06,380 --> 00:14:11,990
I try to explain these things to you

00:14:09,140 --> 00:14:14,510
because nobody explains them on the

00:14:11,990 --> 00:14:16,430
internet really and this it was a long

00:14:14,510 --> 00:14:19,970
journey through a lot of Wikipedia

00:14:16,430 --> 00:14:23,330
entries and Stack Exchange physics kind

00:14:19,970 --> 00:14:27,050
of things okay I think I understand it

00:14:23,330 --> 00:14:29,690
and everything starts with sounds so

00:14:27,050 --> 00:14:32,860
let's take like take a step back from

00:14:29,690 --> 00:14:35,990
like Web Audio and talk about physics

00:14:32,860 --> 00:14:39,320
sounds sound comes in periodic waves

00:14:35,990 --> 00:14:41,650
they look like this kind of without the

00:14:39,320 --> 00:14:41,650
colors

00:14:43,370 --> 00:14:49,589
yeah so we have like different kinds of

00:14:45,949 --> 00:14:51,630
wave shapes and this in this case it's

00:14:49,589 --> 00:14:54,930
like a sine wave so it's like very even

00:14:51,630 --> 00:14:56,910
and the interesting thing like about

00:14:54,930 --> 00:15:00,569
these ways is that we can measure them

00:14:56,910 --> 00:15:03,810
and we measure the frequency which is

00:15:00,569 --> 00:15:05,970
the pattern and then a number of times

00:15:03,810 --> 00:15:10,380
the wave pattern repeats a within a

00:15:05,970 --> 00:15:12,509
second so you have like a wave pattern

00:15:10,380 --> 00:15:14,550
starts at 0 it will peak to the top it

00:15:12,509 --> 00:15:21,660
will peak down and then it will hit zero

00:15:14,550 --> 00:15:25,829
again and this one cycle of the 1 cycle

00:15:21,660 --> 00:15:28,800
is basically the number of times this

00:15:25,829 --> 00:15:30,509
repeats within a second is what we call

00:15:28,800 --> 00:15:35,040
the frequency it's not its measured in

00:15:30,509 --> 00:15:38,100
Hertz so when I go back to this one the

00:15:35,040 --> 00:15:40,199
pink wave will have like a very high

00:15:38,100 --> 00:15:42,660
frequency because it repeats more often

00:15:40,199 --> 00:15:45,089
and the red one at the top will have a

00:15:42,660 --> 00:15:50,490
low frequency because it takes longer to

00:15:45,089 --> 00:15:53,220
repeat itself what does this tell us

00:15:50,490 --> 00:15:56,009
so you might be familiar with another

00:15:53,220 --> 00:15:59,160
word which is pitch and the pitch is

00:15:56,009 --> 00:16:02,910
basically just the way we perceive these

00:15:59,160 --> 00:16:05,399
frequencies so a high frequency is

00:16:02,910 --> 00:16:08,509
perceived as a higher pitch and a low

00:16:05,399 --> 00:16:10,829
frequency is perceived as a lower pitch

00:16:08,509 --> 00:16:13,949
that might sound simple but it took me a

00:16:10,829 --> 00:16:18,439
long time to understand that but now we

00:16:13,949 --> 00:16:20,970
know that we can go a bit further

00:16:18,439 --> 00:16:23,910
because for the analysis of audio of

00:16:20,970 --> 00:16:26,970
audio data we're talking about simple

00:16:23,910 --> 00:16:29,220
frames and this respect to like 3

00:16:26,970 --> 00:16:32,160
arguments that we need one was channel

00:16:29,220 --> 00:16:36,410
then we have the passer size and then

00:16:32,160 --> 00:16:38,939
the sample rate and the same here's a

00:16:36,410 --> 00:16:41,850
diagram that kind of shows where

00:16:38,939 --> 00:16:45,360
channels and samples and frames fit

00:16:41,850 --> 00:16:46,860
together so channels are played in

00:16:45,360 --> 00:16:50,069
parallel in this case we have two

00:16:46,860 --> 00:16:51,569
channels stereo like stereo so we have

00:16:50,069 --> 00:16:53,130
left and a right channel we can also

00:16:51,569 --> 00:16:55,500
only have one channel which is what I

00:16:53,130 --> 00:16:58,010
was using because it's way easier to buy

00:16:55,500 --> 00:17:01,350
do math with only one and A two or even

00:16:58,010 --> 00:17:02,970
six channels or you can go up to a 32 if

00:17:01,350 --> 00:17:09,090
you want or if you have like a real use

00:17:02,970 --> 00:17:12,450
case and per frame all the samples of

00:17:09,090 --> 00:17:15,270
the like the samples of a channel are

00:17:12,450 --> 00:17:17,240
played in parallel in one frame and then

00:17:15,270 --> 00:17:23,910
you go frame by frame by frame and have

00:17:17,240 --> 00:17:25,410
samples per channel per frame and this

00:17:23,910 --> 00:17:29,040
is like the way we analyze the audio

00:17:25,410 --> 00:17:30,270
data in respect to time and so what are

00:17:29,040 --> 00:17:32,370
all the lengths and the sample rate that

00:17:30,270 --> 00:17:35,180
we give to the audio context length is

00:17:32,370 --> 00:17:38,640
the sample is the size of sample frames

00:17:35,180 --> 00:17:44,100
so and the sample rate is the number of

00:17:38,640 --> 00:17:46,560
sample frames per second so I chose one

00:17:44,100 --> 00:17:51,690
channel so that I can have a sample rate

00:17:46,560 --> 00:17:54,000
of 44,000 100 Hertz this is like the

00:17:51,690 --> 00:17:59,580
number of frames that we pass per second

00:17:54,000 --> 00:18:00,900
so 44100 two frames per second and the

00:17:59,580 --> 00:18:04,170
length of the buffer that we need to

00:18:00,900 --> 00:18:07,590
store this data is basically these this

00:18:04,170 --> 00:18:12,570
amount of samples per second which is

00:18:07,590 --> 00:18:14,850
why I so I chose a sample like an audio

00:18:12,570 --> 00:18:21,020
sample of 60 seconds so I would need the

00:18:14,850 --> 00:18:26,690
length of the sample rate per like times

00:18:21,020 --> 00:18:26,690
the seconds I hope I said that right

00:18:26,810 --> 00:18:32,280
yeah so end of intermission so we like

00:18:30,350 --> 00:18:35,850
basically need to I'm just like or I

00:18:32,280 --> 00:18:38,010
need to understand how we like how live

00:18:35,850 --> 00:18:40,470
audio processes audio data and all the

00:18:38,010 --> 00:18:47,100
parameters that go into it just to like

00:18:40,470 --> 00:18:50,130
load a song with an like simple request

00:18:47,100 --> 00:18:53,640
which yeah so I'll get the song from

00:18:50,130 --> 00:18:56,940
that I uploaded and have to run all

00:18:53,640 --> 00:18:58,260
these I don't even run anything at this

00:18:56,940 --> 00:19:01,470
point I just need to understand what I'm

00:18:58,260 --> 00:19:03,120
doing and what kind of data I get next

00:19:01,470 --> 00:19:07,170
up I hook up and analyze a node which is

00:19:03,120 --> 00:19:09,120
the standard like it's a node that comes

00:19:07,170 --> 00:19:14,309
with the Web Audio

00:19:09,120 --> 00:19:17,970
context and it gives you like data of

00:19:14,309 --> 00:19:21,659
the of the input source like the sound

00:19:17,970 --> 00:19:27,179
or the file that you upload you created

00:19:21,659 --> 00:19:30,570
from the context and we or i define a

00:19:27,179 --> 00:19:32,460
the FFT size of the of the analyzer node

00:19:30,570 --> 00:19:36,720
F of T stands for fast Fourier

00:19:32,460 --> 00:19:38,549
transformation I think which is a way or

00:19:36,720 --> 00:19:40,559
an algorithm that analyze the sound data

00:19:38,549 --> 00:19:41,999
it's built into Web Audio API so you

00:19:40,559 --> 00:19:45,720
don't have to understand what's going on

00:19:41,999 --> 00:19:48,389
because this is crazy and what the

00:19:45,720 --> 00:19:52,350
number is it's a number that needs to be

00:19:48,389 --> 00:19:55,440
a power of two and this later influences

00:19:52,350 --> 00:20:00,740
the way we received the samples from our

00:19:55,440 --> 00:20:03,649
analyzing part I chose 4096

00:20:00,740 --> 00:20:05,730
maybe remember that it will come back

00:20:03,649 --> 00:20:08,340
what else do I have I have a script

00:20:05,730 --> 00:20:13,619
processor node which is also note of the

00:20:08,340 --> 00:20:16,440
web audio context and the way this works

00:20:13,619 --> 00:20:18,090
is the fun thing is actually that the

00:20:16,440 --> 00:20:20,240
documentation already says that the

00:20:18,090 --> 00:20:22,860
script processor note is deprecated

00:20:20,240 --> 00:20:25,830
without having the successor which is

00:20:22,860 --> 00:20:30,149
the audio worker implemented in any

00:20:25,830 --> 00:20:32,309
browser which is yeah I don't know yeah

00:20:30,149 --> 00:20:33,690
so I like basically needed to work with

00:20:32,309 --> 00:20:35,399
something that is already deprecated

00:20:33,690 --> 00:20:40,259
because the successor is not yet there

00:20:35,399 --> 00:20:42,299
cool but it works but the the script the

00:20:40,259 --> 00:20:44,129
processor node and gets three arguments

00:20:42,299 --> 00:20:49,499
the first one is also by the power of

00:20:44,129 --> 00:20:51,960
two it's the amount of samples it it

00:20:49,499 --> 00:20:56,100
takes like four one cycle of processing

00:20:51,960 --> 00:20:59,850
and an output like output and input and

00:20:56,100 --> 00:21:02,999
output connections which is in both

00:20:59,850 --> 00:21:07,320
cases one for me because I like to keep

00:21:02,999 --> 00:21:08,999
things simple so that they work and the

00:21:07,320 --> 00:21:11,970
processor node comes with an audio

00:21:08,999 --> 00:21:14,070
process event and here's an interesting

00:21:11,970 --> 00:21:18,539
part where I like hook up the analyzer

00:21:14,070 --> 00:21:21,460
node to get the data and the data that

00:21:18,539 --> 00:21:24,010
we get is called byte frequency data

00:21:21,460 --> 00:21:25,990
and I think some for another

00:21:24,010 --> 00:21:27,640
intermission because I talk a lot and I

00:21:25,990 --> 00:21:32,320
took fast and this is all these weird

00:21:27,640 --> 00:21:35,409
words the FFT data that we get from the

00:21:32,320 --> 00:21:38,350
analyzer node it looks like this

00:21:35,409 --> 00:21:42,490
and in my case I would get an array that

00:21:38,350 --> 00:21:44,320
has length of 161 like elements in an

00:21:42,490 --> 00:21:47,890
array this is calculated from the

00:21:44,320 --> 00:21:53,200
original sample rates from the audio

00:21:47,890 --> 00:21:56,140
context divided by the sample rate of

00:21:53,200 --> 00:21:58,750
this processor node which in this case

00:21:56,140 --> 00:22:02,080
yields 161 so I can adjust these numbers

00:21:58,750 --> 00:22:05,860
to get more or less and every element in

00:22:02,080 --> 00:22:08,529
itself is an unsigned you you into eight

00:22:05,860 --> 00:22:10,570
array which is an error like structured

00:22:08,529 --> 00:22:16,169
for dealing with binary data in your

00:22:10,570 --> 00:22:19,090
browser and each of these areas has 2048

00:22:16,169 --> 00:22:23,470
like value pairs and this is like the

00:22:19,090 --> 00:22:28,510
half of the half of the rate that I gave

00:22:23,470 --> 00:22:30,370
to the analyzer node which was 4096 so I

00:22:28,510 --> 00:22:32,260
get like half of this so you need to

00:22:30,370 --> 00:22:34,809
remind yourself that like you will

00:22:32,260 --> 00:22:37,630
always lose some sort of you will lose a

00:22:34,809 --> 00:22:40,029
lot of information or samples along the

00:22:37,630 --> 00:22:41,440
way so start high and you will in the

00:22:40,029 --> 00:22:45,370
end you need to get something that is

00:22:41,440 --> 00:22:50,140
still kind of a decent output out of the

00:22:45,370 --> 00:22:51,450
data within DV like the you I call them

00:22:50,140 --> 00:22:55,330
you into eight areas but I don't know

00:22:51,450 --> 00:22:58,299
look like and they look like this so you

00:22:55,330 --> 00:23:00,100
always have the key and like some value

00:22:58,299 --> 00:23:02,289
and that the first like I had this in my

00:23:00,100 --> 00:23:05,020
console I was like what what is this

00:23:02,289 --> 00:23:07,020
like I thought about like I would get a

00:23:05,020 --> 00:23:08,950
frequency or something and then

00:23:07,020 --> 00:23:10,480
something related to the frequency

00:23:08,950 --> 00:23:16,720
because that's what the thing should do

00:23:10,480 --> 00:23:18,970
analyze my audio data so I yeah I was

00:23:16,720 --> 00:23:21,070
reading some Stack Exchange thread where

00:23:18,970 --> 00:23:22,840
someone is like I want to do like fast

00:23:21,070 --> 00:23:24,549
Fourier transformation but what do I do

00:23:22,840 --> 00:23:27,880
with the data that I get and then I

00:23:24,549 --> 00:23:30,700
understood that every key corresponds to

00:23:27,880 --> 00:23:33,970
a frequency already and the value that

00:23:30,700 --> 00:23:34,940
we have here is which is always like a

00:23:33,970 --> 00:23:39,320
value between one

00:23:34,940 --> 00:23:41,179
and 255 which is like how like the

00:23:39,320 --> 00:23:43,720
volume or like the the magnitude of that

00:23:41,179 --> 00:23:46,940
frequency within the sample that we have

00:23:43,720 --> 00:23:48,229
so there's a lot of them in this like

00:23:46,940 --> 00:23:52,309
the little screenshot that we have here

00:23:48,229 --> 00:23:57,019
key 14 would be like the the strongest

00:23:52,309 --> 00:23:58,639
like the highest magnitude and for the

00:23:57,019 --> 00:23:59,690
kind of analysis that I did because I

00:23:58,639 --> 00:24:02,809
have no idea what I'm doing

00:23:59,690 --> 00:24:04,879
I just thought mmm I just like pick the

00:24:02,809 --> 00:24:06,529
key with the highest value and that is

00:24:04,879 --> 00:24:08,720
kind of like the core that I would be

00:24:06,529 --> 00:24:11,989
playing which is like a very very very

00:24:08,720 --> 00:24:14,210
very simplified solution to the problem

00:24:11,989 --> 00:24:18,979
that I had of like getting a chord from

00:24:14,210 --> 00:24:20,960
my audio sample data yeah

00:24:18,979 --> 00:24:26,210
the way that you calculate the actual

00:24:20,960 --> 00:24:28,639
frequency from this is kind of still

00:24:26,210 --> 00:24:32,809
another like weird thing that I needed

00:24:28,639 --> 00:24:35,119
to figure out so I from my all my

00:24:32,809 --> 00:24:37,489
samples like the the very long areas I

00:24:35,119 --> 00:24:44,330
always took the the biggest value and

00:24:37,489 --> 00:24:47,570
the key and the key that I get so the

00:24:44,330 --> 00:24:50,749
the samples that the FTT data gets me is

00:24:47,570 --> 00:24:53,330
always within the the range of what is

00:24:50,749 --> 00:24:57,950
here belen hertz frequency to the human

00:24:53,330 --> 00:25:01,039
ear so humans can perceive frequencies

00:24:57,950 --> 00:25:03,139
between 20 Hertz and 20,000 Hertz and in

00:25:01,039 --> 00:25:05,330
the beginning I started with forty four

00:25:03,139 --> 00:25:07,879
thousand one hundred Hertz and I will

00:25:05,330 --> 00:25:09,889
lose like kind of half of it in the in

00:25:07,879 --> 00:25:13,009
the analyzing process so I would still

00:25:09,889 --> 00:25:16,639
end up with more frequencies available

00:25:13,009 --> 00:25:23,289
to analyze than humans can hear which is

00:25:16,639 --> 00:25:26,299
cool so I can like cover all that and

00:25:23,289 --> 00:25:27,940
this the range that I then get is then

00:25:26,299 --> 00:25:30,950
divided again by the keys so I can

00:25:27,940 --> 00:25:32,779
recalculate the key that corresponds to

00:25:30,950 --> 00:25:34,970
a frequency and once I have the

00:25:32,779 --> 00:25:38,269
frequency I can look up what this would

00:25:34,970 --> 00:25:40,460
be as a musical note because those are

00:25:38,269 --> 00:25:45,320
just basically every frequency

00:25:40,460 --> 00:25:46,489
corresponds to a musical note this would

00:25:45,320 --> 00:25:49,359
be so much cooler if you had actually

00:25:46,489 --> 00:25:49,359
seen the game and

00:25:50,800 --> 00:25:58,310
mmm-hmm you have it okay

00:25:54,890 --> 00:26:00,320
he has it working okay I will like we'll

00:25:58,310 --> 00:26:01,190
try again in the end because I'm kind of

00:26:00,320 --> 00:26:03,020
almost done

00:26:01,190 --> 00:26:06,710
because part two the input that did not

00:26:03,020 --> 00:26:08,990
work this is actually all done by Chris

00:26:06,710 --> 00:26:13,580
Wilson who does a lot of cool web audio

00:26:08,990 --> 00:26:16,640
hacks and he made a pitch detector which

00:26:13,580 --> 00:26:18,320
I found really cool and I yeah basically

00:26:16,640 --> 00:26:22,310
took his code from the pitch detection

00:26:18,320 --> 00:26:25,370
and made it so it like fits within the

00:26:22,310 --> 00:26:28,040
game but he does he gets the request

00:26:25,370 --> 00:26:31,250
like he gets the user media like the

00:26:28,040 --> 00:26:32,840
audio stream uses dead stream as a

00:26:31,250 --> 00:26:36,080
source for an audio context where I

00:26:32,840 --> 00:26:38,780
would use in my offline in my offline

00:26:36,080 --> 00:26:42,080
analysis would use a song or like an

00:26:38,780 --> 00:26:44,540
audio file and he also uses an island as

00:26:42,080 --> 00:26:46,130
a node to get the data but he does

00:26:44,540 --> 00:26:48,140
different that he uses like an actual

00:26:46,130 --> 00:26:51,380
algorithm and an autocorrelation

00:26:48,140 --> 00:26:55,070
algorithm to determine the actual input

00:26:51,380 --> 00:26:56,690
frequency where I just like hacked

00:26:55,070 --> 00:27:00,530
something together that kind of worked

00:26:56,690 --> 00:27:02,150
for me which is cool yeah so if you want

00:27:00,530 --> 00:27:05,060
to know if you read if you want to read

00:27:02,150 --> 00:27:06,740
about autocorrelation there is a lot of

00:27:05,060 --> 00:27:09,530
stuff on Wikipedia I just stopped after

00:27:06,740 --> 00:27:14,270
the intro because I don't I couldn't get

00:27:09,530 --> 00:27:15,560
my head around it which is fine it I was

00:27:14,270 --> 00:27:22,790
part of the the game that I was working

00:27:15,560 --> 00:27:24,470
on okay so we had like the the the song

00:27:22,790 --> 00:27:26,420
that I would load that like most of the

00:27:24,470 --> 00:27:28,580
code came from me the second part of the

00:27:26,420 --> 00:27:31,550
input that came from Chris Wilson's

00:27:28,580 --> 00:27:33,230
pitch detection and then I have like the

00:27:31,550 --> 00:27:34,850
actual game like the interface and how

00:27:33,230 --> 00:27:37,700
everything goes together I like to call

00:27:34,850 --> 00:27:40,370
it the spaghetti code because it's just

00:27:37,700 --> 00:27:42,970
like making things work in whatever kind

00:27:40,370 --> 00:27:44,480
of way and thinking about the logic and

00:27:42,970 --> 00:27:47,750
what could I do

00:27:44,480 --> 00:27:51,080
so what would have been is like I would

00:27:47,750 --> 00:27:54,770
fire events every time like I detect the

00:27:51,080 --> 00:27:56,179
chord change in the data and once I get

00:27:54,770 --> 00:27:59,000
to take like a chord change in the the

00:27:56,179 --> 00:28:01,100
sound that I'm that in the song that I

00:27:59,000 --> 00:28:01,309
analyzed I would fire an event that

00:28:01,100 --> 00:28:04,370
would

00:28:01,309 --> 00:28:07,549
then check the life input data for like

00:28:04,370 --> 00:28:10,190
hey do these chords match and I just in

00:28:07,549 --> 00:28:12,169
this case I only compare the actual

00:28:10,190 --> 00:28:16,480
musical notes that I calculated and not

00:28:12,169 --> 00:28:19,639
the frequencies because the the

00:28:16,480 --> 00:28:22,490
frequency spans from the life input and

00:28:19,639 --> 00:28:25,789
the offline are they diverged a lot in

00:28:22,490 --> 00:28:29,210
the process then I made up a scoring

00:28:25,789 --> 00:28:31,549
system where I like calculated basically

00:28:29,210 --> 00:28:34,490
the percentage on based upon the amount

00:28:31,549 --> 00:28:37,249
of chord changes and then I had some

00:28:34,490 --> 00:28:39,710
visuals like some simple drawings on a

00:28:37,249 --> 00:28:45,230
canvas with bars that I calculated from

00:28:39,710 --> 00:28:46,940
again the transformation data and then

00:28:45,230 --> 00:28:51,559
it would have been done yes and it

00:28:46,940 --> 00:28:54,129
worked kind of I will try again now for

00:28:51,559 --> 00:28:59,679
some reason what browser did you use

00:28:54,129 --> 00:29:09,499
same cool yeah maybe it was just weird

00:28:59,679 --> 00:29:12,799
one last time no can we hook it up okay

00:29:09,499 --> 00:29:15,200
I will quickly end the presentation

00:29:12,799 --> 00:29:17,809
because I think two more slides one is

00:29:15,200 --> 00:29:20,509
thank you so much for like you as

00:29:17,809 --> 00:29:22,580
community to the people who write the

00:29:20,509 --> 00:29:24,649
Mozilla developer Network articles and

00:29:22,580 --> 00:29:27,019
documentation people hanging out in the

00:29:24,649 --> 00:29:28,279
web audio slack and all other support

00:29:27,019 --> 00:29:30,529
channels and select the people who

00:29:28,279 --> 00:29:34,730
answer questions in-depth on Stack

00:29:30,529 --> 00:29:36,320
Overflow this is like I like this

00:29:34,730 --> 00:29:38,360
community because we help each other and

00:29:36,320 --> 00:29:40,820
I like the the thought of like having

00:29:38,360 --> 00:29:42,740
communities to support all the people

00:29:40,820 --> 00:29:44,509
like people like me who have no idea

00:29:42,740 --> 00:29:46,820
what they're doing and still like spend

00:29:44,509 --> 00:29:47,990
a lot of time hacking on stuff and I

00:29:46,820 --> 00:29:49,759
would like to thank all the people who

00:29:47,990 --> 00:29:52,369
like open-source the things so that I

00:29:49,759 --> 00:29:56,059
can use them build upon them and develop

00:29:52,369 --> 00:29:57,830
things further and thank you also given

00:29:56,059 --> 00:30:00,429
a pulse to yourself because you're part

00:29:57,830 --> 00:30:00,429
of that community

00:30:05,290 --> 00:30:10,490
yeah and there's an online version of

00:30:09,050 --> 00:30:12,470
the game I don't even know if that works

00:30:10,490 --> 00:30:13,850
and there's also the source code of like

00:30:12,470 --> 00:30:16,730
to get the game and the presentation

00:30:13,850 --> 00:30:18,950
it's all on github if you're interested

00:30:16,730 --> 00:30:29,980
and if this if there's a lovely person

00:30:18,950 --> 00:30:37,730
has it working on their computer once no

00:30:29,980 --> 00:30:39,470
I only have an HTM I think okay we can

00:30:37,730 --> 00:30:43,179
try it in the break come find me you can

00:30:39,470 --> 00:30:43,179
play the ukulele if you want thank you

00:30:54,260 --> 00:30:57,260

YouTube URL: https://www.youtube.com/watch?v=xiX8jf2NajQ


