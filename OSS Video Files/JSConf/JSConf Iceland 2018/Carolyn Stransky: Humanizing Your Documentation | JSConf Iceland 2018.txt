Title: Carolyn Stransky: Humanizing Your Documentation | JSConf Iceland 2018
Publication date: 2018-04-06
Playlist: JSConf Iceland 2018
Description: 
	https://2018.jsconf.is/speakers/carolyn-stransky/

It’s no secret that most people don’t read technical documentation for pleasure. Users often come to your docs when they are frustrated with your software, disappointed that they haven't been able to solve the problem on their own and generally feeling pretty low. This is a little sad, yeah, but being aware of these feelings is key for developers and technical writers. These emotions frame the reader’s perspective and therefore, should shape the mood of our docs. After all, when you've been stuck on a bug for hours, do you really want to read something saying 'but this is so easy'? In this talk, we’ll discuss how the language we use affects our users and the first steps towards writing accessible, approachable and use case-driven documentation.
Captions: 
	00:00:00,000 --> 00:00:07,290
hear me yeah perfect okay cool so yeah

00:00:04,049 --> 00:00:09,000
as Vanessa said I'm Carolyn and I work

00:00:07,290 --> 00:00:11,820
as a technical writer and a front-end

00:00:09,000 --> 00:00:12,960
developer in Berlin and I'm here to talk

00:00:11,820 --> 00:00:15,360
to you about humanizing your

00:00:12,960 --> 00:00:18,330
documentation and for the sake of this

00:00:15,360 --> 00:00:20,430
talk documentation is defined as the

00:00:18,330 --> 00:00:22,920
information that describes products to

00:00:20,430 --> 00:00:25,320
its users and this can mean anything

00:00:22,920 --> 00:00:30,359
from API references to getting started

00:00:25,320 --> 00:00:31,700
guides to anything in between so I want

00:00:30,359 --> 00:00:35,489
to start off with the single question

00:00:31,700 --> 00:00:37,350
why do we even write documentation is it

00:00:35,489 --> 00:00:40,440
because our competitors have it or

00:00:37,350 --> 00:00:42,120
because someone told us to do it or is

00:00:40,440 --> 00:00:43,920
it because we really want the people

00:00:42,120 --> 00:00:47,430
using our software to achieve their

00:00:43,920 --> 00:00:49,890
goals it should be the latter but mm

00:00:47,430 --> 00:00:51,989
that's usually not the case writing

00:00:49,890 --> 00:00:54,690
documentation is often afterthought is

00:00:51,989 --> 00:00:56,550
something that we just get done but what

00:00:54,690 --> 00:00:59,010
if we gave our documentation the same

00:00:56,550 --> 00:01:02,430
time and consideration that we do the

00:00:59,010 --> 00:01:04,530
features we ship use case driven

00:01:02,430 --> 00:01:06,689
documentation derives from the idea of

00:01:04,530 --> 00:01:08,610
goal driven documentation both of which

00:01:06,689 --> 00:01:11,490
were coined and made popular by Tanner

00:01:08,610 --> 00:01:14,490
Blaine in 2006 and it works like this

00:01:11,490 --> 00:01:16,140
put your users goals at the focal point

00:01:14,490 --> 00:01:17,700
of your Docs instead of just describing

00:01:16,140 --> 00:01:20,549
interface elements from left to right

00:01:17,700 --> 00:01:25,920
and a common way to illustrate this idea

00:01:20,549 --> 00:01:27,119
is a drill so if we approach documenting

00:01:25,920 --> 00:01:29,430
this drill the same way that most

00:01:27,119 --> 00:01:32,820
document software will end up with

00:01:29,430 --> 00:01:34,860
something like this how to adjust the

00:01:32,820 --> 00:01:38,369
speed how to change the direction of the

00:01:34,860 --> 00:01:40,680
drill how to change the drill bit so now

00:01:38,369 --> 00:01:42,180
you know how to operate a drill but you

00:01:40,680 --> 00:01:44,850
don't actually know how to accomplish

00:01:42,180 --> 00:01:46,680
anything with it and these are known as

00:01:44,850 --> 00:01:48,390
reference documentation and their

00:01:46,680 --> 00:01:51,299
information oriented they describe the

00:01:48,390 --> 00:01:53,329
machinery and they're always or they try

00:01:51,299 --> 00:01:55,590
to always be accurate and complete and

00:01:53,329 --> 00:01:57,840
while this documentation type of

00:01:55,590 --> 00:02:00,110
documentation is certainly necessary it

00:01:57,840 --> 00:02:03,270
could definitely use a more nurturing

00:02:00,110 --> 00:02:05,430
counterpart so if we reach reshape our

00:02:03,270 --> 00:02:07,920
thinking just a bit and think about what

00:02:05,430 --> 00:02:10,410
it takes to do the job and not just use

00:02:07,920 --> 00:02:12,840
the tool we could end up with something

00:02:10,410 --> 00:02:13,960
like this how to drill a hole in a flat

00:02:12,840 --> 00:02:16,210
surface whether it's

00:02:13,960 --> 00:02:18,520
or metal how to select the right screw

00:02:16,210 --> 00:02:20,620
for fastening items how to stir paint

00:02:18,520 --> 00:02:22,360
with your drill suddenly the

00:02:20,620 --> 00:02:25,420
documentation is helping us achieve our

00:02:22,360 --> 00:02:27,100
goals and these guides are goal-oriented

00:02:25,420 --> 00:02:29,350
they show you how to solve a specific

00:02:27,100 --> 00:02:32,920
problem and they're typically presented

00:02:29,350 --> 00:02:35,560
in a series of steps but why is this

00:02:32,920 --> 00:02:36,910
approach because successful well to

00:02:35,560 --> 00:02:39,130
begin to understand that we need to

00:02:36,910 --> 00:02:41,230
think back to that original question why

00:02:39,130 --> 00:02:43,720
even write dogs and perhaps more

00:02:41,230 --> 00:02:46,150
importantly we need to consider who are

00:02:43,720 --> 00:02:50,740
we writing documentation for and the

00:02:46,150 --> 00:02:53,470
answer is surprisingly simple humans so

00:02:50,740 --> 00:02:54,940
yeah yeah with the development of BOTS

00:02:53,470 --> 00:02:57,970
and AI this answer could certainly

00:02:54,940 --> 00:02:59,680
change in the next couple years but for

00:02:57,970 --> 00:03:01,540
now most software documentation is

00:02:59,680 --> 00:03:04,600
written with the idea that humans will

00:03:01,540 --> 00:03:07,230
read it and humans need that guidance

00:03:04,600 --> 00:03:09,490
that documentation is meant to provide

00:03:07,230 --> 00:03:11,260
that's why that these same principles

00:03:09,490 --> 00:03:13,510
for the drill can also apply to our

00:03:11,260 --> 00:03:15,960
software and we aren't writing

00:03:13,510 --> 00:03:18,940
documentation to teach someone how to

00:03:15,960 --> 00:03:21,220
work with our software but rather we're

00:03:18,940 --> 00:03:23,950
teaching it someone how to achieve their

00:03:21,220 --> 00:03:26,770
goals and solve their problems using our

00:03:23,950 --> 00:03:28,210
software now let's apply this idea to

00:03:26,770 --> 00:03:33,100
something more applicable to our

00:03:28,210 --> 00:03:35,350
industry say slack slack is a

00:03:33,100 --> 00:03:37,840
cloud-based set of team collaboration

00:03:35,350 --> 00:03:39,250
tools and because I know they have a

00:03:37,840 --> 00:03:41,410
developer portal and thorough

00:03:39,250 --> 00:03:44,400
documentation I crawled their sites for

00:03:41,410 --> 00:03:47,440
examples and here's what I found as

00:03:44,400 --> 00:03:49,600
expected they have those information and

00:03:47,440 --> 00:03:52,450
oriented reference Docs that we talked

00:03:49,600 --> 00:03:55,360
about earlier they teach us how to add a

00:03:52,450 --> 00:03:57,490
bot user to our slack app programming

00:03:55,360 --> 00:04:00,730
those bot users and how to subscribe to

00:03:57,490 --> 00:04:03,100
event types with the events API that's

00:04:00,730 --> 00:04:06,910
nice but maybe as a first-time slack

00:04:03,100 --> 00:04:10,270
user I'm not sure how or why I would

00:04:06,910 --> 00:04:12,700
need these features so this is a

00:04:10,270 --> 00:04:15,550
screenshot from the exact same site just

00:04:12,700 --> 00:04:19,000
a different page notice how they are not

00:04:15,550 --> 00:04:21,430
only giving us use cases creating simple

00:04:19,000 --> 00:04:24,190
workflows building BOTS but they're also

00:04:21,430 --> 00:04:25,780
outlining what we can accomplish you

00:04:24,190 --> 00:04:27,180
know creating a simple workflow by

00:04:25,780 --> 00:04:30,210
completing

00:04:27,180 --> 00:04:32,250
ryouta mating tasks like requests and

00:04:30,210 --> 00:04:34,979
approvals or building a bot so we can

00:04:32,250 --> 00:04:36,630
talk with our users and it points to

00:04:34,979 --> 00:04:39,630
that reference documentation that we saw

00:04:36,630 --> 00:04:41,699
in the previous slide and now that we

00:04:39,630 --> 00:04:43,979
have an idea of what use case driven

00:04:41,699 --> 00:04:47,970
documentation is let's take a look at

00:04:43,979 --> 00:04:50,010
the outline so when you develop a use

00:04:47,970 --> 00:04:52,260
case you typically start with a goal

00:04:50,010 --> 00:04:54,270
then if you're using use case driven

00:04:52,260 --> 00:04:55,740
development or something similar the

00:04:54,270 --> 00:04:58,680
rest of your workflow should look

00:04:55,740 --> 00:05:00,870
something like this you'll define the

00:04:58,680 --> 00:05:03,000
functional requirements you'll design

00:05:00,870 --> 00:05:05,490
the product and then you'll implement

00:05:03,000 --> 00:05:07,410
the feature this is called a structured

00:05:05,490 --> 00:05:09,600
requirements approach and with an

00:05:07,410 --> 00:05:11,490
approach like this we've already solved

00:05:09,600 --> 00:05:14,669
half the problem determining what to

00:05:11,490 --> 00:05:17,070
document the thing is is that most what

00:05:14,669 --> 00:05:19,350
most documentation is doing is starting

00:05:17,070 --> 00:05:20,970
at this implementation phase it's once

00:05:19,350 --> 00:05:24,110
you've already finished that feature and

00:05:20,970 --> 00:05:26,639
this is ok it works the docs get done

00:05:24,110 --> 00:05:29,820
but what a use case driven approach is

00:05:26,639 --> 00:05:33,510
suggesting is that we start here at you

00:05:29,820 --> 00:05:34,740
probably guessed it the use case and the

00:05:33,510 --> 00:05:37,380
beauty of this is that you can design

00:05:34,740 --> 00:05:39,060
your documentation simultaneously with

00:05:37,380 --> 00:05:41,700
the features that you're developing and

00:05:39,060 --> 00:05:43,710
when we use this structured requirements

00:05:41,700 --> 00:05:46,740
approach we have an established

00:05:43,710 --> 00:05:49,349
framework for defining the problems that

00:05:46,740 --> 00:05:51,150
where our software will solve and we

00:05:49,349 --> 00:05:53,340
also can articulate how people will

00:05:51,150 --> 00:05:56,010
solve these problems with use cases and

00:05:53,340 --> 00:05:59,370
then these use cases define exactly what

00:05:56,010 --> 00:06:03,750
we should be documenting but there's a

00:05:59,370 --> 00:06:06,539
problem with that approach first it

00:06:03,750 --> 00:06:09,630
requires a fundamental change in how our

00:06:06,539 --> 00:06:12,539
team tackles documentation and that's

00:06:09,630 --> 00:06:15,449
not always possible also it sounds more

00:06:12,539 --> 00:06:18,630
like this beautiful ideal instead of our

00:06:15,449 --> 00:06:20,400
you know immediate reality also those

00:06:18,630 --> 00:06:22,560
reference Docs you know the ones that

00:06:20,400 --> 00:06:24,780
describe what the software can do those

00:06:22,560 --> 00:06:28,199
are why documentation have such a bad

00:06:24,780 --> 00:06:31,250
rep in this industry they tend to be dry

00:06:28,199 --> 00:06:34,229
and really leave us wanting more

00:06:31,250 --> 00:06:36,659
personally I know this feeling all too

00:06:34,229 --> 00:06:39,990
well because even if I write technical

00:06:36,659 --> 00:06:42,090
content for a living I still have a

00:06:39,990 --> 00:06:45,660
pretty unsatisfying relationship with

00:06:42,090 --> 00:06:48,240
documentation about this time last year

00:06:45,660 --> 00:06:51,540
and after two years of working in tech

00:06:48,240 --> 00:06:54,000
as a journalist or a writer I decided to

00:06:51,540 --> 00:06:56,810
take the dive and learn to code and I

00:06:54,000 --> 00:07:01,890
knew exactly what I wanted to focus on

00:06:56,810 --> 00:07:04,560
JavaScript but okay I don't know how you

00:07:01,890 --> 00:07:07,500
guys felt while you were learning but it

00:07:04,560 --> 00:07:11,130
felt like to me every single day I was

00:07:07,500 --> 00:07:13,440
asking myself something like what is

00:07:11,130 --> 00:07:15,060
going on in my text editor in my

00:07:13,440 --> 00:07:17,550
terminal it didn't matter where I looked

00:07:15,060 --> 00:07:19,290
I had no idea what was happening

00:07:17,550 --> 00:07:21,510
am I the only one who finds this

00:07:19,290 --> 00:07:23,700
confusing because I know there are a lot

00:07:21,510 --> 00:07:27,450
of people working in JavaScript and they

00:07:23,700 --> 00:07:30,090
seem to be thriving but not me not so

00:07:27,450 --> 00:07:33,660
much at the moment and do people

00:07:30,090 --> 00:07:35,790
actually enjoy this and will I ever

00:07:33,660 --> 00:07:40,020
think that programming things with

00:07:35,790 --> 00:07:43,410
JavaScript is fun spoil their I got it

00:07:40,020 --> 00:07:45,240
together it's pretty fun now but it felt

00:07:43,410 --> 00:07:47,400
like in order to do the interesting

00:07:45,240 --> 00:07:49,650
things with JavaScript you needed to

00:07:47,400 --> 00:07:51,150
know the advanced features not to

00:07:49,650 --> 00:07:55,910
mention all of the frameworks and

00:07:51,150 --> 00:07:59,850
toolings it felt impossible to keep up

00:07:55,910 --> 00:08:01,620
but the most detrimental part I think of

00:07:59,850 --> 00:08:04,230
my learning experience was the

00:08:01,620 --> 00:08:06,540
documentation I was finding it was

00:08:04,230 --> 00:08:08,670
supposed to be fueling my learning but

00:08:06,540 --> 00:08:11,610
it was actually stunting it for the most

00:08:08,670 --> 00:08:14,430
part and more often than not I felt

00:08:11,610 --> 00:08:17,250
really deflated after reading dogs and

00:08:14,430 --> 00:08:21,420
my questions they're still left

00:08:17,250 --> 00:08:24,390
unanswered and the thing is I'm not

00:08:21,420 --> 00:08:26,220
alone in feeling like this documentation

00:08:24,390 --> 00:08:28,490
is one of the largest pain points for

00:08:26,220 --> 00:08:30,990
developers just search reading

00:08:28,490 --> 00:08:34,140
documentation on Twitter and you'll see

00:08:30,990 --> 00:08:37,260
that most of the tweets are same not so

00:08:34,140 --> 00:08:39,120
positive and here's some of my favorites

00:08:37,260 --> 00:08:40,700
actually that I found just within the

00:08:39,120 --> 00:08:43,950
last week

00:08:40,700 --> 00:08:45,900
hi I was reading your documentation and

00:08:43,950 --> 00:08:48,110
you described this data in two different

00:08:45,900 --> 00:08:51,480
ways which is correct

00:08:48,110 --> 00:08:54,560
thank you the way it works is third

00:08:51,480 --> 00:08:58,320
completely different description

00:08:54,560 --> 00:09:00,990
or this one nothing like spending a day

00:08:58,320 --> 00:09:04,529
reading a hundred and thirty-seven page

00:09:00,990 --> 00:09:08,880
PDF for CMS documentation puts head down

00:09:04,529 --> 00:09:10,950
on desk and cries I would cry too and

00:09:08,880 --> 00:09:14,790
this is my personal favorite bad

00:09:10,950 --> 00:09:17,400
documentation is bad and even after

00:09:14,790 --> 00:09:19,550
someone else asked this person if there

00:09:17,400 --> 00:09:23,160
were no Docs would it be better she

00:09:19,550 --> 00:09:26,420
still said deep thoughts honestly yes

00:09:23,160 --> 00:09:31,350
because it would waste less of my time

00:09:26,420 --> 00:09:33,510
so people love to hate documentation but

00:09:31,350 --> 00:09:36,240
I believe that's also on us the people

00:09:33,510 --> 00:09:41,100
who write Docs because it seems like we

00:09:36,240 --> 00:09:45,300
hate them right back think about the

00:09:41,100 --> 00:09:47,010
term users Laura call bag a designer and

00:09:45,300 --> 00:09:50,910
accessibility advocate explains this

00:09:47,010 --> 00:09:53,279
well she says I tend to not to not even

00:09:50,910 --> 00:09:56,279
refer to people as users I refer to them

00:09:53,279 --> 00:09:58,260
just as the people who use things she

00:09:56,279 --> 00:10:01,920
explains that this is because when we

00:09:58,260 --> 00:10:04,890
say user as a developer we're separating

00:10:01,920 --> 00:10:08,820
ourselves we turn the people who use our

00:10:04,890 --> 00:10:10,320
products into this far away thing and we

00:10:08,820 --> 00:10:13,980
don't necessarily think of them as

00:10:10,320 --> 00:10:16,140
someone who is just like us and that's

00:10:13,980 --> 00:10:18,810
why as a technical writer at my job I

00:10:16,140 --> 00:10:22,950
have needed to constantly remind our

00:10:18,810 --> 00:10:26,070
developers or myself even that we are

00:10:22,950 --> 00:10:28,470
writing for humans and not just that but

00:10:26,070 --> 00:10:30,410
we are writing for humans who don't even

00:10:28,470 --> 00:10:32,790
want to be reading what we're writing

00:10:30,410 --> 00:10:34,440
because people as been as I mentioned

00:10:32,790 --> 00:10:36,540
people don't enjoy reading technical

00:10:34,440 --> 00:10:38,670
documentation for the most part people

00:10:36,540 --> 00:10:41,520
visit your documentation when they're

00:10:38,670 --> 00:10:43,170
frustrated they're already mad they're

00:10:41,520 --> 00:10:44,730
frustrated with your software they're

00:10:43,170 --> 00:10:46,520
disappointed that they haven't been able

00:10:44,730 --> 00:10:51,260
to solve the problem on their own and

00:10:46,520 --> 00:10:54,810
they're generally feeling pretty low and

00:10:51,260 --> 00:10:56,490
that reality is not awesome especially

00:10:54,810 --> 00:10:58,620
if you are someone who puts a lot of

00:10:56,490 --> 00:11:00,990
love and care and consideration into

00:10:58,620 --> 00:11:02,730
your documentation but being aware of

00:11:00,990 --> 00:11:05,700
these negative feelings that your

00:11:02,730 --> 00:11:07,710
readers are experiencing is key because

00:11:05,700 --> 00:11:09,270
these emotions frame the readers

00:11:07,710 --> 00:11:16,170
effective and therefore they should

00:11:09,270 --> 00:11:17,910
shape the mood of our Docs so what were

00:11:16,170 --> 00:11:21,060
these issues that I had with the

00:11:17,910 --> 00:11:22,700
documentation I found well I could put

00:11:21,060 --> 00:11:25,920
all of it into three categories

00:11:22,700 --> 00:11:28,500
they were disorienting the underlying

00:11:25,920 --> 00:11:30,510
structure was difficult to follow and

00:11:28,500 --> 00:11:33,120
and in some cases the docks were not

00:11:30,510 --> 00:11:34,320
accessible as in I literally couldn't

00:11:33,120 --> 00:11:35,210
read them because of the way they were

00:11:34,320 --> 00:11:38,550
programmed

00:11:35,210 --> 00:11:40,290
they were alienating so some

00:11:38,550 --> 00:11:42,930
documentation I read it made me feel

00:11:40,290 --> 00:11:44,910
super isolated afterwards there were

00:11:42,930 --> 00:11:48,990
words or concepts that were assumed

00:11:44,910 --> 00:11:51,360
knowledge difficult syntax and that were

00:11:48,990 --> 00:11:53,010
never explained and not to mention the

00:11:51,360 --> 00:11:56,610
use of gendered or discriminatory

00:11:53,010 --> 00:11:59,850
language and finally they were just

00:11:56,610 --> 00:12:01,950
plain confusing and it was clear that

00:11:59,850 --> 00:12:04,500
the developers working on these features

00:12:01,950 --> 00:12:07,440
I was reading the docs about had a huge

00:12:04,500 --> 00:12:09,930
depth of knowledge but it wasn't exactly

00:12:07,440 --> 00:12:13,560
translating to me as a first-time or

00:12:09,930 --> 00:12:15,270
generally pretty new user so now let's

00:12:13,560 --> 00:12:18,090
run through each of these one by one

00:12:15,270 --> 00:12:21,330
I'll show you the problems with examples

00:12:18,090 --> 00:12:22,920
of what not to do followed by some tools

00:12:21,330 --> 00:12:25,470
and role models that can help us do

00:12:22,920 --> 00:12:27,660
better and all of the what not to do

00:12:25,470 --> 00:12:29,820
examples are come from the software

00:12:27,660 --> 00:12:33,120
documentation that's actually live on

00:12:29,820 --> 00:12:35,840
the internet but I'm trying not to make

00:12:33,120 --> 00:12:38,430
too many enemies during this talk so

00:12:35,840 --> 00:12:40,560
I've adapted some of them to go back to

00:12:38,430 --> 00:12:45,360
that drill example just to keep it keep

00:12:40,560 --> 00:12:47,640
the end of em keep it anonymous so let's

00:12:45,360 --> 00:12:50,160
start with disorienting a big part of

00:12:47,640 --> 00:12:53,220
that as I mentioned was the poorly

00:12:50,160 --> 00:12:55,230
defined structure and how we structure

00:12:53,220 --> 00:12:57,630
our documentation is really important

00:12:55,230 --> 00:13:00,480
because it shapes that learning journey

00:12:57,630 --> 00:13:03,810
for our user and the overall experience

00:13:00,480 --> 00:13:06,840
for our readers and if the structure is

00:13:03,810 --> 00:13:13,350
not well-defined you lose control of how

00:13:06,840 --> 00:13:16,890
people interpret your work here's one of

00:13:13,350 --> 00:13:19,920
those not-so-great examples and again

00:13:16,890 --> 00:13:21,550
adaptive for the drill um so here's

00:13:19,920 --> 00:13:23,649
here's the short story

00:13:21,550 --> 00:13:28,870
getting up and running quickly with your

00:13:23,649 --> 00:13:32,110
drill one read the documentation to read

00:13:28,870 --> 00:13:34,330
the documentation 3 remember that you

00:13:32,110 --> 00:13:39,250
were warned twice about reading

00:13:34,330 --> 00:13:40,810
documentation like art 1 if I'm in the

00:13:39,250 --> 00:13:45,430
getting started guide aren't I already

00:13:40,810 --> 00:13:47,740
reading the documentation and it goes on

00:13:45,430 --> 00:13:49,810
after this to just list off every

00:13:47,740 --> 00:13:52,420
command optional or not that's possible

00:13:49,810 --> 00:13:55,120
with this tool and I specifically put a

00:13:52,420 --> 00:13:56,860
screenshot because I I can't make this

00:13:55,120 --> 00:13:59,500
up I cannot make up that someone just

00:13:56,860 --> 00:14:01,240
wrote this and it's particularly bad

00:13:59,500 --> 00:14:02,860
because getting started guides or any

00:14:01,240 --> 00:14:05,760
sort of introduction err materials are

00:14:02,860 --> 00:14:10,180
your first impression to potential users

00:14:05,760 --> 00:14:13,690
so how can we combat this a mindful

00:14:10,180 --> 00:14:16,390
structure whether it's just in one

00:14:13,690 --> 00:14:20,350
particular article or throughout your

00:14:16,390 --> 00:14:21,910
entire doc app in development we want to

00:14:20,350 --> 00:14:25,959
have a clear and easy to follow

00:14:21,910 --> 00:14:28,180
structure and when in doubt especially

00:14:25,959 --> 00:14:31,420
for individual articles I would aim for

00:14:28,180 --> 00:14:33,520
something like this talk about one

00:14:31,420 --> 00:14:35,440
specific feature use that kind of

00:14:33,520 --> 00:14:38,200
reference Docs and explain what it

00:14:35,440 --> 00:14:41,350
really does go on to explain potential

00:14:38,200 --> 00:14:42,970
use cases that people could use this or

00:14:41,350 --> 00:14:46,390
the best case scenario for people to use

00:14:42,970 --> 00:14:49,839
this and finally offer solutions then

00:14:46,390 --> 00:14:51,279
for tooling integrations etc because

00:14:49,839 --> 00:14:55,029
then you can kind of guide the reader

00:14:51,279 --> 00:14:56,410
into what to go to next and this covers

00:14:55,029 --> 00:14:58,360
all of your bases it has those

00:14:56,410 --> 00:15:02,350
information oriented reference Docs it

00:14:58,360 --> 00:15:04,570
has the goal oriented guides and like I

00:15:02,350 --> 00:15:08,890
mentioned it plugs what where they

00:15:04,570 --> 00:15:13,240
should go next in their journey the next

00:15:08,890 --> 00:15:15,550
big issue is unexpected errors so have

00:15:13,240 --> 00:15:17,589
you ever read something that I don't

00:15:15,550 --> 00:15:18,970
know says something like just run this

00:15:17,589 --> 00:15:21,850
snippet and you're good to go

00:15:18,970 --> 00:15:26,769
but then when you run the code you get a

00:15:21,850 --> 00:15:29,440
big fat error like unfortunately this is

00:15:26,769 --> 00:15:31,750
all too common and when error messages

00:15:29,440 --> 00:15:35,350
do come up a lot of times they tend to

00:15:31,750 --> 00:15:38,110
look like this we have lost connection

00:15:35,350 --> 00:15:39,940
to our server and disabled editing

00:15:38,110 --> 00:15:41,970
features please verify that you have

00:15:39,940 --> 00:15:46,510
internet access

00:15:41,970 --> 00:15:48,280
ok this literally tells me nothing all I

00:15:46,510 --> 00:15:51,340
know is that I need to check my

00:15:48,280 --> 00:15:55,000
connection but I don't understand why my

00:15:51,340 --> 00:15:57,850
editing features are disabled will they

00:15:55,000 --> 00:15:59,980
still will my changes still save did the

00:15:57,850 --> 00:16:04,690
connection go down is mine is it theirs

00:15:59,980 --> 00:16:06,670
I don't know so we should consider and

00:16:04,690 --> 00:16:09,040
address common errors whenever we know

00:16:06,670 --> 00:16:11,200
them and because this helps reassure

00:16:09,040 --> 00:16:13,930
your users that mistakes will happen

00:16:11,200 --> 00:16:16,570
errors will happen but it also provides

00:16:13,930 --> 00:16:18,430
options for troubleshooting so when

00:16:16,570 --> 00:16:21,850
you're writing these error messages try

00:16:18,430 --> 00:16:28,300
to explain what happened and why and

00:16:21,850 --> 00:16:30,400
then tell the readers what to do next so

00:16:28,300 --> 00:16:33,600
here's a better solution for our error

00:16:30,400 --> 00:16:37,750
mishap earlier this tells you what

00:16:33,600 --> 00:16:40,390
happened the fields are locked why it

00:16:37,750 --> 00:16:43,420
happened because of no internet

00:16:40,390 --> 00:16:46,060
connection and its implications so that

00:16:43,420 --> 00:16:47,320
you won't lose changes it appears you

00:16:46,060 --> 00:16:49,240
aren't connected to the Internet at the

00:16:47,320 --> 00:16:53,100
moment the fields are temporarily locked

00:16:49,240 --> 00:16:53,100
so you won't lose any important changes

00:16:53,220 --> 00:16:58,300
here's another example and this is a

00:16:55,660 --> 00:17:02,620
screenshot from the Apple 2 basic

00:16:58,300 --> 00:17:04,780
programming manual from yes the 1970s it

00:17:02,620 --> 00:17:06,610
tackles the nuances of common user

00:17:04,780 --> 00:17:09,430
errors quite well and they actually

00:17:06,610 --> 00:17:13,210
explain many of the syntax errors before

00:17:09,430 --> 00:17:14,980
they even have you start coding and this

00:17:13,210 --> 00:17:16,930
example in particular also follows

00:17:14,980 --> 00:17:17,740
that's three-step approach it tells us

00:17:16,930 --> 00:17:20,410
what happened

00:17:17,740 --> 00:17:22,770
you got a beep and the syntax error

00:17:20,410 --> 00:17:26,500
message why it happened

00:17:22,770 --> 00:17:28,720
you probably press return and what to do

00:17:26,500 --> 00:17:30,550
next it literally just says for the time

00:17:28,720 --> 00:17:34,450
being ignore this message and that's

00:17:30,550 --> 00:17:36,520
perfectly fine when we're formatting

00:17:34,450 --> 00:17:38,680
these error alerts I'm in a tutorial

00:17:36,520 --> 00:17:41,740
especially Django Girls is a great

00:17:38,680 --> 00:17:43,890
resource to reference they do a great

00:17:41,740 --> 00:17:46,660
job as scattering these types of notes

00:17:43,890 --> 00:17:49,059
throughout the tutorial and the format

00:17:46,660 --> 00:17:50,950
is clear so that it enables

00:17:49,059 --> 00:17:52,690
it enables them to be informative enough

00:17:50,950 --> 00:17:56,289
so if people are having errors they know

00:17:52,690 --> 00:17:57,909
what to do not to panic and it they're

00:17:56,289 --> 00:17:59,649
not so distracting so if you're not

00:17:57,909 --> 00:18:02,919
having these errors it's easy to kind of

00:17:59,649 --> 00:18:04,960
brush through them alright that's the

00:18:02,919 --> 00:18:08,230
last of the disoriented category so

00:18:04,960 --> 00:18:09,249
let's move on to alienating and the

00:18:08,230 --> 00:18:12,970
first thing that comes to mind with

00:18:09,249 --> 00:18:14,909
alienating is insensitive language and

00:18:12,970 --> 00:18:18,549
this one can be tricky because across

00:18:14,909 --> 00:18:21,580
nationalities and personalities you know

00:18:18,549 --> 00:18:23,259
in sensitive language or phrase wording

00:18:21,580 --> 00:18:26,559
or phrasing it can mean a lot of

00:18:23,259 --> 00:18:29,289
different things and in this case we're

00:18:26,559 --> 00:18:31,869
mostly talking about gendered language

00:18:29,289 --> 00:18:35,379
profanity racial slurs or anything that

00:18:31,869 --> 00:18:38,590
kind of falls under those lines so some

00:18:35,379 --> 00:18:40,869
bad exam or not-so-great examples if the

00:18:38,590 --> 00:18:43,360
programmer wishes to uphold invariant he

00:18:40,869 --> 00:18:46,659
must satisfy the functions preconditions

00:18:43,360 --> 00:18:48,399
as a woman Tech I hate reading

00:18:46,659 --> 00:18:50,379
documentation like this because I

00:18:48,399 --> 00:18:52,960
already feel pretty ostracized in the

00:18:50,379 --> 00:18:55,509
community a lot of times and having

00:18:52,960 --> 00:18:59,529
something like this shows me that this

00:18:55,509 --> 00:19:02,259
isn't for me or this one in this guide I

00:18:59,529 --> 00:19:05,559
will show you three main ways to hide

00:19:02,259 --> 00:19:07,059
your first of all profanity is

00:19:05,559 --> 00:19:08,200
probably not the way to go and also it

00:19:07,059 --> 00:19:10,629
doesn't really tell me what it's doing

00:19:08,200 --> 00:19:14,440
and both of these are relatively tame

00:19:10,629 --> 00:19:16,450
examples but they show instances of you

00:19:14,440 --> 00:19:19,299
know this insensitive language both in

00:19:16,450 --> 00:19:21,279
both instances they won't always some

00:19:19,299 --> 00:19:23,049
people might find it funny but a lot of

00:19:21,279 --> 00:19:26,350
people it won't go over well in your

00:19:23,049 --> 00:19:29,830
community so you can think before you

00:19:26,350 --> 00:19:31,840
type easier said than done but a good

00:19:29,830 --> 00:19:36,039
rule to follow is when documenting code

00:19:31,840 --> 00:19:38,679
don't make assumptions or make any

00:19:36,039 --> 00:19:40,629
implications about race gender religion

00:19:38,679 --> 00:19:42,730
political orientation or really anything

00:19:40,629 --> 00:19:46,749
else that isn't relevant to your product

00:19:42,730 --> 00:19:51,009
and or you can have a linter do it for

00:19:46,749 --> 00:19:54,909
you so this is Alex jeaious and it and

00:19:51,009 --> 00:19:56,860
it catches insensitive and polarizing

00:19:54,909 --> 00:20:00,899
writing in your markdown files and also

00:19:56,860 --> 00:20:00,899
suggest helpful alternatives

00:20:01,290 --> 00:20:07,330
you can use it on the command line or as

00:20:03,940 --> 00:20:10,540
an integration with atom sublime vs code

00:20:07,330 --> 00:20:12,040
and even slack and it's also open source

00:20:10,540 --> 00:20:14,260
so if you run into some words that

00:20:12,040 --> 00:20:15,640
you're like hey I don't know if I'm cool

00:20:14,260 --> 00:20:19,150
with this but they're not catching it

00:20:15,640 --> 00:20:20,740
you can feel free to contribute I would

00:20:19,150 --> 00:20:22,600
also say you should still have a human

00:20:20,740 --> 00:20:24,460
an actual human being read over it

00:20:22,600 --> 00:20:27,460
preferably someone who's not from your

00:20:24,460 --> 00:20:30,540
same nationality or demographic but it's

00:20:27,460 --> 00:20:33,130
a good start so here's that same

00:20:30,540 --> 00:20:35,559
sentence from earlier but now Alex

00:20:33,130 --> 00:20:38,320
jeaious is helping us catch those words

00:20:35,559 --> 00:20:43,600
that might be better left out of our

00:20:38,320 --> 00:20:49,090
documentation and on that note of words

00:20:43,600 --> 00:20:53,170
not to use don't say simply easily easy

00:20:49,090 --> 00:20:55,450
simple just leave it out James Harrison

00:20:53,170 --> 00:20:57,250
Fisher actually gave an entire talk at

00:20:55,450 --> 00:21:00,190
read the docks London about this very

00:20:57,250 --> 00:21:04,330
topic at one point he searched the word

00:21:00,190 --> 00:21:08,590
simply on github and he found over 92

00:21:04,330 --> 00:21:12,730
million references in documentation on

00:21:08,590 --> 00:21:16,059
github and it's just not appropriate for

00:21:12,730 --> 00:21:20,920
example simply connect to the HTTP

00:21:16,059 --> 00:21:25,630
endpoint at API dot my drill comm and

00:21:20,920 --> 00:21:30,370
that was it but so ok but we don't know

00:21:25,630 --> 00:21:32,230
how to do this or this one we simply

00:21:30,370 --> 00:21:34,840
start parsing an expression and

00:21:32,230 --> 00:21:37,059
afterwards if the next token is a colon

00:21:34,840 --> 00:21:40,330
and the expression was a simple

00:21:37,059 --> 00:21:42,010
identifier node then dot the dot I don't

00:21:40,330 --> 00:21:45,510
know about you but this doesn't sound so

00:21:42,010 --> 00:21:48,640
simple to me and my solution for this

00:21:45,510 --> 00:21:51,220
don't use it and just take the word out

00:21:48,640 --> 00:21:54,490
completely because really after fixing

00:21:51,220 --> 00:21:56,830
bugs for hours do you really want

00:21:54,490 --> 00:22:00,070
someone to say to you like but this was

00:21:56,830 --> 00:22:02,320
so easy respect people's time and

00:22:00,070 --> 00:22:05,230
people's progress and just find another

00:22:02,320 --> 00:22:08,770
way to say it be more specific and

00:22:05,230 --> 00:22:10,600
figure out why you think it's simple try

00:22:08,770 --> 00:22:14,860
it maybe as an alternative being

00:22:10,600 --> 00:22:18,970
comparative so X requires less typing

00:22:14,860 --> 00:22:21,570
then why or even better be absolute five

00:22:18,970 --> 00:22:21,570
lines of code

00:22:24,179 --> 00:22:29,679
the next issue that's alienating is

00:22:26,500 --> 00:22:33,670
bloated language or these kind of overly

00:22:29,679 --> 00:22:39,850
complicated and robust prose and okay

00:22:33,670 --> 00:22:41,890
sip of water before this next one this

00:22:39,850 --> 00:22:44,170
approach will work for our specific use

00:22:41,890 --> 00:22:46,030
case but we haven't achieved the

00:22:44,170 --> 00:22:49,090
objective of truly encapsulating the

00:22:46,030 --> 00:22:50,799
behavior in a reusable way now every

00:22:49,090 --> 00:22:52,900
time we want the drill position for a

00:22:50,799 --> 00:22:55,059
different use case we have to create a

00:22:52,900 --> 00:22:57,280
new component ie essentially another

00:22:55,059 --> 00:23:01,120
drill with screw that renders something

00:22:57,280 --> 00:23:03,340
specifically for that use case that's a

00:23:01,120 --> 00:23:06,730
mouthful that's a lie and it's only two

00:23:03,340 --> 00:23:10,179
sentences um and it's difficult to read

00:23:06,730 --> 00:23:13,480
and difficult to comprehend at least on

00:23:10,179 --> 00:23:16,929
the first try so an alternative is to

00:23:13,480 --> 00:23:18,280
use plain language we want to choose our

00:23:16,929 --> 00:23:20,799
language intentionally when we're

00:23:18,280 --> 00:23:22,630
writing documentation and using plain

00:23:20,799 --> 00:23:25,840
language is critical for a more

00:23:22,630 --> 00:23:27,940
inclusive documentation but it can be

00:23:25,840 --> 00:23:29,740
difficult because especially if you went

00:23:27,940 --> 00:23:32,080
to university they really try to get

00:23:29,740 --> 00:23:34,690
that out of you because plain language

00:23:32,080 --> 00:23:37,270
is seen as a negative thing but in

00:23:34,690 --> 00:23:39,160
reality it's just allowing more people

00:23:37,270 --> 00:23:42,850
to understand and comprehend our work

00:23:39,160 --> 00:23:46,929
and again there is an app that can help

00:23:42,850 --> 00:23:48,850
you so this is Hemingway editor and it

00:23:46,929 --> 00:23:50,740
is a tool to paste your text in and

00:23:48,850 --> 00:23:53,049
it'll highlight problematic words or

00:23:50,740 --> 00:23:55,510
sentences for you as well as offer

00:23:53,049 --> 00:23:57,910
suggestions it's available as a text

00:23:55,510 --> 00:24:01,809
editor application a web app and even a

00:23:57,910 --> 00:24:04,150
linter and so in the case of the example

00:24:01,809 --> 00:24:05,799
that we just had it identified that the

00:24:04,150 --> 00:24:08,290
first sentence is hard to read that's

00:24:05,799 --> 00:24:10,360
why it's highlighted in yellow the

00:24:08,290 --> 00:24:13,480
sentence the second sentence is very

00:24:10,360 --> 00:24:15,850
hard to read so it's in red um it

00:24:13,480 --> 00:24:18,429
highlights adverbs in blue because

00:24:15,850 --> 00:24:21,040
they're not necessary for what we're

00:24:18,429 --> 00:24:22,540
trying to say and it also points out

00:24:21,040 --> 00:24:24,520
words that could have had a simpler

00:24:22,540 --> 00:24:28,659
alternative so in this case objective

00:24:24,520 --> 00:24:31,269
and our sentence right now is

00:24:28,659 --> 00:24:33,309
grade 12 and we want to get that down

00:24:31,269 --> 00:24:36,369
and you want to stay around a maximum of

00:24:33,309 --> 00:24:39,029
grade 8 reading level and never worry

00:24:36,369 --> 00:24:41,559
about a reading level being too low

00:24:39,029 --> 00:24:44,259
because as the amazing

00:24:41,559 --> 00:24:46,269
Ashley bishops once said no one has ever

00:24:44,259 --> 00:24:52,059
complained about something being too

00:24:46,269 --> 00:24:53,049
easy to read and now to the issue of it

00:24:52,059 --> 00:24:55,690
being confusing

00:24:53,049 --> 00:24:57,369
fortunately out of the three issues this

00:24:55,690 --> 00:25:01,239
one is actually the one that comes from

00:24:57,369 --> 00:25:04,840
a good place so for instance you're just

00:25:01,239 --> 00:25:06,369
in way too deep so when you're working

00:25:04,840 --> 00:25:08,200
as a developer it can be difficult to

00:25:06,369 --> 00:25:10,479
write documentation because you're so

00:25:08,200 --> 00:25:14,440
deep in that product and that specific

00:25:10,479 --> 00:25:15,970
feature that you're developing so what

00:25:14,440 --> 00:25:17,979
often happens is that while you're

00:25:15,970 --> 00:25:19,690
writing documentation you might be

00:25:17,979 --> 00:25:21,460
talking writing it as if you're talking

00:25:19,690 --> 00:25:23,889
to you yourself or maybe one of your

00:25:21,460 --> 00:25:28,239
colleagues but the problem is is that

00:25:23,889 --> 00:25:30,220
new users or it really any user B don't

00:25:28,239 --> 00:25:34,029
have that same frame of reference that

00:25:30,220 --> 00:25:37,749
you do and so any you know unexplained

00:25:34,029 --> 00:25:39,489
term or skipped step in a tutorial can

00:25:37,749 --> 00:25:41,049
destroy the learning journey for that

00:25:39,489 --> 00:25:44,830
reader and really put them off of your

00:25:41,049 --> 00:25:46,989
documentation so it's important to keep

00:25:44,830 --> 00:25:49,960
in mind that everyone is a beginner at

00:25:46,989 --> 00:25:52,239
some point and no matter how intuitive

00:25:49,960 --> 00:25:56,200
you think your product is or tool my

00:25:52,239 --> 00:25:59,470
beam everyone start some way what I've

00:25:56,200 --> 00:26:01,179
found to be effective is that is it's

00:25:59,470 --> 00:26:04,389
for you to go through the entire process

00:26:01,179 --> 00:26:06,279
from start to finish and talk out loud

00:26:04,389 --> 00:26:08,710
while you're doing it or explain the

00:26:06,279 --> 00:26:10,629
feature as you're going along and have

00:26:08,710 --> 00:26:12,009
another colleague close by preferably

00:26:10,629 --> 00:26:14,440
someone who's not working on the same

00:26:12,009 --> 00:26:16,869
project take notes about what you are

00:26:14,440 --> 00:26:20,369
doing and identify those points that

00:26:16,869 --> 00:26:25,149
might be confusing or unclear to others

00:26:20,369 --> 00:26:28,330
and another confusing issue that kurz

00:26:25,149 --> 00:26:29,950
frequently is that your product isn't a

00:26:28,330 --> 00:26:34,869
good fit for the person who's reading it

00:26:29,950 --> 00:26:37,179
and that's okay just be transparent so

00:26:34,869 --> 00:26:39,970
when you know there's a specific use

00:26:37,179 --> 00:26:42,460
case that maybe this tool or integration

00:26:39,970 --> 00:26:44,320
doesn't work well with just say so

00:26:42,460 --> 00:26:46,930
you'll save people a lot of headaches

00:26:44,320 --> 00:26:49,690
and long run and also in your

00:26:46,930 --> 00:26:52,660
introduction material it helps to remind

00:26:49,690 --> 00:26:54,700
people to double check that this tool is

00:26:52,660 --> 00:26:56,010
appropriate for what they're trying to

00:26:54,700 --> 00:26:58,690
accomplish

00:26:56,010 --> 00:27:01,780
the reason documentation does this quite

00:26:58,690 --> 00:27:03,580
well in their converting from Jas page

00:27:01,780 --> 00:27:07,000
they emphasize that you should make sure

00:27:03,580 --> 00:27:08,610
that reason is fitting your needs and it

00:27:07,000 --> 00:27:10,930
also points out that you shouldn't

00:27:08,610 --> 00:27:13,480
unnecessarily thrash your colleagues

00:27:10,930 --> 00:27:16,000
over other languages and frameworks but

00:27:13,480 --> 00:27:19,510
for the record that's always unnecessary

00:27:16,000 --> 00:27:21,550
you shouldn't do that so I hope that

00:27:19,510 --> 00:27:23,260
I've given you a some a new tool to

00:27:21,550 --> 00:27:26,080
implement or maybe some new ways to

00:27:23,260 --> 00:27:27,880
update your documentation checklist but

00:27:26,080 --> 00:27:29,500
before I get off the stage I want to

00:27:27,880 --> 00:27:31,690
leave you with something that I learned

00:27:29,500 --> 00:27:35,020
during my time working at contentful and

00:27:31,690 --> 00:27:36,520
I believe that it's wise words that are

00:27:35,020 --> 00:27:39,280
applicable for anyone writing

00:27:36,520 --> 00:27:41,500
documentation so when I read through

00:27:39,280 --> 00:27:44,290
content tools style guide something

00:27:41,500 --> 00:27:47,680
immediately struck me and at the very

00:27:44,290 --> 00:27:51,220
beginning it says we aim for accuracy

00:27:47,680 --> 00:27:54,190
and consistency sure this is the case

00:27:51,220 --> 00:27:58,120
for most Docs but what really got me is

00:27:54,190 --> 00:28:02,020
what came next we also want to aim to be

00:27:58,120 --> 00:28:03,880
honest helpful and human honest in that

00:28:02,020 --> 00:28:06,070
we communicate the pros and cons of a

00:28:03,880 --> 00:28:09,400
solution because in doing so will build

00:28:06,070 --> 00:28:11,890
trust helpful because we want our users

00:28:09,400 --> 00:28:14,620
to succeed I mean their success is

00:28:11,890 --> 00:28:16,990
ultimately our success and we want to be

00:28:14,620 --> 00:28:19,540
human we want it to feel familiar and

00:28:16,990 --> 00:28:21,900
approachable because after all the

00:28:19,540 --> 00:28:25,050
people writing your Docs are human -

00:28:21,900 --> 00:28:25,050
thank you

00:28:29,789 --> 00:28:31,850

YouTube URL: https://www.youtube.com/watch?v=FvPXMUuUCS4


