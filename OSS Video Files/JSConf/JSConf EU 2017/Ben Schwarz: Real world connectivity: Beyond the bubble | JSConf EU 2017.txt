Title: Ben Schwarz: Real world connectivity: Beyond the bubble | JSConf EU 2017
Publication date: 2017-05-18
Playlist: JSConf EU 2017
Description: 
	http://2017.jsconf.eu/speakers/ben-schwarz-real-world-connectivity-beyond-the-bubble.html

Every talk you’ll hear about ‘web performance’ will tell you that shaving 100ms from response time produced a 1% sales yield for Amazon, or maybe that 40% of web visitors will abandon your site when it takes more then 3 seconds to load? While those are impressive, there are some more interesting metrics that we need to talk about.

Did you know that 43% of the humans on this planet have access to the internet, but 57% do not? Did you know that in 2016 India brought 100 million NEW users to the internet for the very first time? When you take a glance into the current state of global connectivity, you might realise that the internet you think you know so well exists on an entirely different plane.

Through the guise of user-experience and empathy, we’ll study the state of global connectivity, connection speeds, population, and the costs of data in order to re-centre how we think about our role as designers and developers for the web today.
Captions: 
	00:00:03,100 --> 00:00:06,330
Ben Schwarz Real world connectivity - Beyond the bubble

00:00:06,330 --> 00:00:08,109
>> One did my favourite things about both JSConf and CSSConf is this warm and fuzzy

00:00:08,109 --> 00:00:09,109
feeling you get when you come here, like a family reunion without the bad parts!

00:00:09,109 --> 00:00:10,109
I love that.

00:00:10,109 --> 00:00:11,109
I've been coming for I think four years, and every single time, it is even more amazing,

00:00:11,109 --> 00:00:12,109
and more people are getting into this nice family of ours.

00:00:12,109 --> 00:00:13,109
Ben is a really good example of that.

00:00:13,109 --> 00:00:14,109
He not only runs JSConf back in Australia, but he's been coming here for three or four

00:00:14,109 --> 00:00:15,109
years.

00:00:15,109 --> 00:00:16,109
He mc'ed two of them, and now he's speaking so it comes around.

00:00:16,109 --> 00:00:17,109
You can end up attending and then speaking, which is really great.

00:00:17,109 --> 00:00:18,109
You can be on the stage.

00:00:18,109 --> 00:00:19,109
Yes, Ben is from Melbourne in Australia which is a great city.

00:00:19,109 --> 00:00:20,109
I lived there, too.

00:00:20,109 --> 00:00:21,109
He's a founder of Calibre which is a web-performance monitoring tool and he will tell you about

00:00:21,109 --> 00:00:22,109
the state of connectivity, the state of the internet and what we can do for people to

00:00:22,109 --> 00:00:23,109
make the internet and web faster for them.

00:00:23,109 --> 00:00:29,540
Please give a really washing welcome to Ben Schwarz.

00:00:29,540 --> 00:00:30,540
[Applause].

00:00:30,540 --> 00:00:31,870
BEN: Hello!

00:00:31,870 --> 00:00:33,309
How are we doing?

00:00:33,309 --> 00:00:35,530
Doing good?

00:00:35,530 --> 00:00:40,289
My mother doesn't know what I do, so this isn't going to help her, but if everyone can

00:00:40,289 --> 00:00:44,460
just yell "ya" as I come around, okay?

00:00:44,460 --> 00:00:45,960
AUDIENCE: Ya.

00:00:45,960 --> 00:00:50,039
BEN: Mum ... I don't know!

00:00:50,039 --> 00:00:51,039
[Laughter].

00:00:51,039 --> 00:00:53,809
That was fun.

00:00:53,809 --> 00:00:55,110
My name is Ben Schwarz.

00:00:55,110 --> 00:00:58,309
I'm from Melbourne, Australia.

00:00:58,309 --> 00:01:03,269
I've been coming here for a few years and it's my favourite conference anywhere in the

00:01:03,269 --> 00:01:05,080
world to come.

00:01:05,080 --> 00:01:07,390
It is a huge privilege.

00:01:07,390 --> 00:01:11,670
Thanks for everyone for making it great for me to be here.

00:01:11,670 --> 00:01:18,740
My talk today is called "Beyond the Bubble" and I hope to achieve, to give you some context

00:01:18,740 --> 00:01:28,320
that maybe you haven't maybe necessarily considered as part of your day jobs.

00:01:28,320 --> 00:01:32,280
When we usually talk about performance, we talk about how quickly pages load, we talk

00:01:32,280 --> 00:01:38,939
about how much money Amazon made when they made something half a second faster, but often,

00:01:38,939 --> 00:01:44,509
that's kind of really as far as we go, I think is really sad because performance is a pillar

00:01:44,509 --> 00:01:49,470
of user experience, and yet every aspect of performance work we are doing right now seems

00:01:49,470 --> 00:01:51,880
to be a bit of an afterthought.

00:01:51,880 --> 00:01:57,270
Sites are often deployed to production, and then we say all right, let's see how this

00:01:57,270 --> 00:01:58,369
performance.

00:01:58,369 --> 00:02:04,400
And if the result are disappointing, then maybe do our best to see what we can do.

00:02:04,400 --> 00:02:09,060
But often we have to just move on because there isn't the time and budget, and nobody

00:02:09,060 --> 00:02:13,970
is really committed to it by that point.

00:02:13,970 --> 00:02:18,860
And we are still, when we're doing this, when we're building the sites and apps and these

00:02:18,860 --> 00:02:22,940
experiences, we are doing doing using a $3,000 dollar computer or a $1,000 phone and you're

00:02:22,940 --> 00:02:24,470
doing it on localhost.

00:02:24,470 --> 00:02:30,130
Of course it is going to be fast.

00:02:30,130 --> 00:02:34,400
I think it is our -- doing it on localhost.

00:02:34,400 --> 00:02:40,470
I am the founder of a company called Calibre, a recently young company.

00:02:40,470 --> 00:02:44,390
It is so young, in fact, that I'm the only person in the company.

00:02:44,390 --> 00:02:47,010
I do everything.

00:02:47,010 --> 00:02:49,320
What that really means is I'm full-time now.

00:02:49,320 --> 00:02:58,580
I became full-time in January, and ultimately, that means that every day, I am helping to

00:02:58,580 --> 00:03:05,150
build tools to make the web faster, or helping to try to contribute to that, or I'm doing

00:03:05,150 --> 00:03:07,940
audits for people, or I'm diving in stack traces.

00:03:07,940 --> 00:03:11,790
I'm kind of doing that performance work that you would maybe do if you had the time, but

00:03:11,790 --> 00:03:13,610
that's all I'm doing right now.

00:03:13,610 --> 00:03:18,210
I hope through that you will maybe enjoy the talk ahead.

00:03:18,210 --> 00:03:26,340
So, I thought it would be really interesting look at somewhere where time really equalled

00:03:26,340 --> 00:03:34,590
money, and in the last 30 years, we've been trying to reduce latency between locations,

00:03:34,590 --> 00:03:43,950
but somewhere it was really hyperfocused was in the stock changes between Chicago and New

00:03:43,950 --> 00:03:45,990
York.

00:03:45,990 --> 00:03:53,090
Every few milliseconds you save or make literally billions of dollars.

00:03:53,090 --> 00:04:02,330
In the made 1980s, the round-trip latency was 14 and a half milliseconds, cut by a millisecond

00:04:02,330 --> 00:04:11,861
and a half in 2010 by shortening the physical fibre route they took.

00:04:11,861 --> 00:04:22,060
They thought this is too slow and we will do something else.

00:04:22,060 --> 00:04:26,030
[Sound cut] you see that large tower there.

00:04:26,030 --> 00:04:31,000
That's a microwave tower.

00:04:31,000 --> 00:04:36,790
These towers - using these towers, they were able to get that connection speed right down

00:04:36,790 --> 00:04:44,510
to 4.2 milliseconds which is a huge improvements, three times over where we started in the 1980s.

00:04:44,510 --> 00:04:49,680
Interestingly enough, when these towers were constructed, they were buying up little plots

00:04:49,680 --> 00:04:55,580
of farmland and between, and I think some of these towers they actually had to pay these

00:04:55,580 --> 00:05:02,230
farmers - in the regions of $500 million just to put a tower there.

00:05:02,230 --> 00:05:06,861
I think that's particularly interesting because I think when we are building sites and apps

00:05:06,861 --> 00:05:12,740
and throwing them in a browser and we are delivering this HTML, right, and, as you saw

00:05:12,740 --> 00:05:18,280
in the previous talk, we are getting better at detecting the resources on the page and

00:05:18,280 --> 00:05:27,620
pre-getting them, but up to now, what we've been doing is this: we're just throwing things

00:05:27,620 --> 00:05:28,910
at the customer.

00:05:28,910 --> 00:05:32,430
Saying take it all, I don't care about you.

00:05:32,430 --> 00:05:38,380
Whether on a tiny phone with a slow CPU, or maybe you've used all your data plan, like

00:05:38,380 --> 00:05:43,389
I have in Berlin already in a week, we're not doing enough here.

00:05:43,389 --> 00:05:53,350
I'm going to take you through some stats about the state of global connectivity.

00:05:53,350 --> 00:05:58,220
Right now, there are 7.4 billion people on the planet.

00:05:58,220 --> 00:06:02,550
46 per cent of them have access to the internet.

00:06:02,550 --> 00:06:07,080
That means that we are actually at a point where there are four billion people who don't

00:06:07,080 --> 00:06:09,270
have any access to the internet at all.

00:06:09,270 --> 00:06:10,790
We're only halfway there.

00:06:10,790 --> 00:06:14,200
We're not even halfway there yet.

00:06:14,200 --> 00:06:20,700
So why don't we have an a look at how quickly the internet is growing, and if you were thinking

00:06:20,700 --> 00:06:27,130
maybe Europe is getting better connectivity, maybe it's US, 300 million people there, may

00:06:27,130 --> 00:06:31,620
be it is in Australia where I'm from, and really trying to build a faster internet,

00:06:31,620 --> 00:06:41,360
but struggling, it isn't really sort of in that bubble that we are in right now today.

00:06:41,360 --> 00:06:48,060
If you look at India just last year, their internet users grew by 108 million people,

00:06:48,060 --> 00:06:55,400
which, in case you were wondering, that's more than the population of Germany.

00:06:55,400 --> 00:07:02,150
This is 30 per cent year on year from the year previously.

00:07:02,150 --> 00:07:06,870
If those numbers are matched again this year, that will be 140 million people.

00:07:06,870 --> 00:07:14,720
Airtel, who are the largest carrier, have 255 million customers, people who just have

00:07:14,720 --> 00:07:23,169
a phone plan, and this stat, the last time I researched it, it's gone up by 5 million

00:07:23,169 --> 00:07:31,290
subscribers, and their share has fallen from 32 per cent of the marketplace.

00:07:31,290 --> 00:07:35,640
Truly, truly incredible numbers.

00:07:35,640 --> 00:07:47,150
In India only 635 per cent 1.2 billion don't have access to the internet, so that means

00:07:47,150 --> 00:07:52,040
that's 864 million people who are yet to get the internet.

00:07:52,040 --> 00:07:53,680
They're about to.

00:07:53,680 --> 00:07:57,360
That's essential lit population of China again.

00:07:57,360 --> 00:08:04,550
I took time to look at what data costs in different locations.

00:08:04,550 --> 00:08:10,780
The way that I came up with these numbers here is I took a pre-paid plan, which is usually

00:08:10,780 --> 00:08:18,200
cheaper than a post-paid plan, and I took the minimum wage of these countries, and I

00:08:18,200 --> 00:08:21,780
calculated how many hours would you have to work just to get 500megs of data.

00:08:21,780 --> 00:08:29,720
In India, it is it is 17 hours, but in Germany, it is less than one hour.

00:08:29,720 --> 00:08:36,349
Our, let's call it, data addiction isn't met with the same enthusiasm in other places in

00:08:36,349 --> 00:08:37,349
the world.

00:08:37,349 --> 00:08:40,579
Could I get some water?

00:08:40,579 --> 00:08:42,469
Thank you.

00:08:42,469 --> 00:08:48,790
That could be one hour for eight songs on Spotify, six minutes of YouTube, and less

00:08:48,790 --> 00:08:55,879
than an hour playing games.

00:08:55,879 --> 00:09:09,390
Or you can go to the Burj, empty your cache and hit reload 28 times.

00:09:09,390 --> 00:09:15,850
Even if you can afford the internet, you're not necessarily going to get fast internet

00:09:15,850 --> 00:09:17,540
all the time.

00:09:17,540 --> 00:09:22,240
Back in Melbourne last year, I lived on the wrong side of the street to get cable connection

00:09:22,240 --> 00:09:26,850
so I ended up having DSL and it was a lot slower than it should have been.

00:09:26,850 --> 00:09:32,260
Even if you have LTE advertise the on your phone, you may not get the same LTE speeds.

00:09:32,260 --> 00:09:43,660
In Singapore, the average is capping out at about 50 which is super great, but in India,

00:09:43,660 --> 00:09:45,459
it is doing 6.39Mbit/s.

00:09:45,459 --> 00:09:50,319
It's no matter where you are in the world.

00:09:50,319 --> 00:09:56,309
I had a look at the German internet plans because I'm Australian, and it's very different

00:09:56,309 --> 00:09:57,309
here.

00:09:57,309 --> 00:10:02,540
I Shaw that there are 400 Mbit connections.

00:10:02,540 --> 00:10:09,660
Over the year if it worked out to EUR30 a month.

00:10:09,660 --> 00:10:18,389
Put that on a global scale, does anyone want to guess where the global average for connection

00:10:18,389 --> 00:10:19,389
speed would be?

00:10:19,389 --> 00:10:21,029
Shout out numbers?

00:10:21,029 --> 00:10:22,529
Two?

00:10:22,529 --> 00:10:24,029
50?

00:10:24,029 --> 00:10:25,529
50.

00:10:25,529 --> 00:10:27,029
Okay.

00:10:27,029 --> 00:10:31,050
It is actually seven.

00:10:31,050 --> 00:10:33,350
This is the global average.

00:10:33,350 --> 00:10:38,660
So this is, it is pulled down by some places and pulled up by others.

00:10:38,660 --> 00:10:43,810
I thought maybe we could look at the mobile speed.

00:10:43,810 --> 00:10:51,269
In Canada, which is covering the Americas region, the best average, or the highest average

00:10:51,269 --> 00:10:53,449
speed is 10.3.

00:10:53,449 --> 00:10:57,850
In Australia, for Asia-Pacific, 13.

00:10:57,850 --> 00:11:06,029
For the United Kingdom, Europe, it was 26.8 - [Laughter] - and the UAE for the Middle

00:11:06,029 --> 00:11:10,999
East and Africa region was 17.2.

00:11:10,999 --> 00:11:12,550
But it goes further than that.

00:11:12,550 --> 00:11:20,180
60 per cent of all but global mobile connections are actually 2G.

00:11:20,180 --> 00:11:25,670
So we know that, even if you do have LTE, you can't really assume it's going to be fast.

00:11:25,670 --> 00:11:29,850
On average, we're only doing 7Mbit a second.

00:11:29,850 --> 00:11:32,629
Let's look at devices.

00:11:32,629 --> 00:11:36,860
Most devices on the web are handsets.

00:11:36,860 --> 00:11:39,369
This has been the case since 2014.

00:11:39,369 --> 00:11:41,689
I thought maybe I would have a look.

00:11:41,689 --> 00:11:45,481
I have an iPhone in my pocket, and I'm sure a lot of you do too, and maybe use an android,

00:11:45,481 --> 00:11:47,250
and that is cool too.

00:11:47,250 --> 00:11:51,170
Have you thought of devices that people use in other locations?

00:11:51,170 --> 00:11:57,509
Here are the top five devices for three regions.

00:11:57,509 --> 00:12:04,899
China had three phones I had never heard of, and they were selling enough devices to cover

00:12:04,899 --> 00:12:10,860
the population of my country multiple times over a year, so that's reasonably significant.

00:12:10,860 --> 00:12:17,249
The I don't know hands in India is corresponding to its very mixed market but it is a big collection

00:12:17,249 --> 00:12:18,249
of devices.

00:12:18,249 --> 00:12:29,699
So, I got to wondering, is there a single device that best represents average?

00:12:29,699 --> 00:12:33,550
If we need to - we know that these devices are super, super different.

00:12:33,550 --> 00:12:39,209
How do we test this and understand what to do next?

00:12:39,209 --> 00:12:42,579
Thanks to our friends at Google, there's been some research done into this.

00:12:42,579 --> 00:12:49,259
At the moment today, if you were to take a fairly average phone, it is not super expensive,

00:12:49,259 --> 00:12:54,829
I think in Germany, it is EUR180 if you were to go and buy one won you would end up with

00:12:54,829 --> 00:12:59,910
a quad core CPU, decent amount of storage.

00:12:59,910 --> 00:13:06,739
This isn't the slow phone that people will tell you in talks you have to think about

00:13:06,739 --> 00:13:09,559
these other people, this is a pretty middle-of-the-road phobe.

00:13:09,559 --> 00:13:13,060
It is not the fastest and it is not the slowest.

00:13:13,060 --> 00:13:17,269
If you average out global devices, this is where you will end up.

00:13:17,269 --> 00:13:18,749
Has really great.

00:13:18,749 --> 00:13:24,910
You can test them on web page tests, and they have these devices in data centres around

00:13:24,910 --> 00:13:27,830
the world.

00:13:27,830 --> 00:13:30,899
Let's say you didn't have access to a device.

00:13:30,899 --> 00:13:32,990
Here's what you can do.

00:13:32,990 --> 00:13:41,199
Go into your current dev tools.

00:13:41,199 --> 00:13:42,439
Click on the timeline.

00:13:42,439 --> 00:13:46,279
Click on "capture settings" CPU, drag it down to 5.

00:13:46,279 --> 00:13:51,529
I know 5 is seemingly an abstract number, but if you're on a recent Macbook Pro, you

00:13:51,529 --> 00:13:55,079
will end up with the speed of about a MotoG4.

00:13:55,079 --> 00:14:01,069
There's been research done into this, and you can calibrate your device, but if you're

00:14:01,069 --> 00:14:05,950
looking for a close enough experience, that's where you should end up.

00:14:05,950 --> 00:14:08,509
5x slowdown.

00:14:08,509 --> 00:14:14,269
What is clear after we've looked at connectivity and devises is there aren't any context.

00:14:14,269 --> 00:14:19,220
If you go for a proper average, it changes daily.

00:14:19,220 --> 00:14:25,279
I like to think that there are two versions of the internet.

00:14:25,279 --> 00:14:29,629
There's the one that we use - us - and then there's one that we usually don't.

00:14:29,629 --> 00:14:34,679
I've been experiencing a little bit of the column B in the last couple of weeks here

00:14:34,679 --> 00:14:41,410
in Germany, and the aeroplane Wi-Fi I think at times was better than the Airbnb I have

00:14:41,410 --> 00:14:43,199
at the moment.

00:14:43,199 --> 00:14:50,350
The conference Wi-Fi hasn't been too bad - thanks for doing OK on that, JSConf - and Lie-fi

00:14:50,350 --> 00:14:57,779
when it says you're on Wi-Fi and nothing happens.

00:14:57,779 --> 00:15:00,981
We know that the connections vary and it might be that because you're at the wrong end of

00:15:00,981 --> 00:15:06,860
the building, and too many brick walls, or for whatever fucking reason, your modem needs

00:15:06,860 --> 00:15:08,119
restarting again.

00:15:08,119 --> 00:15:10,499
It happens, I understand.

00:15:10,499 --> 00:15:21,829
One thing is clear, we need to stop optimising for $3,000 computer with fast connections.

00:15:21,829 --> 00:15:26,189
Inconsistency is a major property of the web in general, but now that we are understanding

00:15:26,189 --> 00:15:33,480
that we are in a global landscape, it is time that we started by about what we are delivering

00:15:33,480 --> 00:15:40,089
to people so we should gather knowledge and build with more understanding and empty.

00:15:40,089 --> 00:15:46,360
Looking beyond the delivery of an asset or looking how an asset is put down on to a device,

00:15:46,360 --> 00:15:52,070
we are generally looking at three things: delivery, so this is the time where we are

00:15:52,070 --> 00:15:53,839
saying how many scripts are there on this page?

00:15:53,839 --> 00:15:54,839
How big are they?

00:15:54,839 --> 00:15:55,930
What do they look like?

00:15:55,930 --> 00:16:00,259
There is the pass cycle.

00:16:00,259 --> 00:16:04,950
This is when the browser gets those assets, and it has to figure out something.

00:16:04,950 --> 00:16:11,249
Maybe it has to decompress the G zip on a resource, maybe it has to parse and compile

00:16:11,249 --> 00:16:16,949
the JavaScript, maybe it has to get an image and then composite it before it actually paints

00:16:16,949 --> 00:16:20,089
it.

00:16:20,089 --> 00:16:22,350
The last part of that is run time.

00:16:22,350 --> 00:16:25,910
These three phases of performance that we should worry about.

00:16:25,910 --> 00:16:32,639
Runtime is actually the actual run time that we are giving smooth, fluid animations and

00:16:32,639 --> 00:16:36,100
making it responsive to a user input.

00:16:36,100 --> 00:16:39,259
But unfortunately at the moment, the one rear really forgetting this is parse time.

00:16:39,259 --> 00:16:44,859
We're throwing down scripts at the browser and we're just hoping for the best.

00:16:44,859 --> 00:16:52,350
This wonderful graphic is taken from a brilliant blog post called JavaScript start-up time

00:16:52,350 --> 00:17:00,730
and a rough how V8 works or more like, the V8 people tell me, how it will work really

00:17:00,730 --> 00:17:02,209
soon.

00:17:02,209 --> 00:17:10,069
This varies from engine to engine, but they take your JS, they generate byte code, do

00:17:10,069 --> 00:17:16,380
optimisation stuff, and then they build it for your architecture.

00:17:16,380 --> 00:17:22,289
When you're taking the 410 average script size, this is the average across the web,

00:17:22,289 --> 00:17:23,289
right?

00:17:23,289 --> 00:17:24,899
This is what we are on average setting.

00:17:24,899 --> 00:17:33,710
There's been the argument that maybe we can reduce that size, just remove a jpeg - I won't

00:17:33,710 --> 00:17:38,720
name names - but this became a bit of a popular thing to say a couple of years ago, but I

00:17:38,720 --> 00:17:43,899
tell you why it's wrong.

00:17:43,899 --> 00:17:44,919
Forget 410kb.

00:17:44,919 --> 00:17:47,840
When you decompress, it could be three to four megabytes.

00:17:47,840 --> 00:17:55,409
It is the three to four megabytes that your phone has to understand, compile.

00:17:55,409 --> 00:18:01,450
I took the JSConf site which is really light, whoever worked on it didn't have to do much

00:18:01,450 --> 00:18:10,059
stuff to make a pretty website to tell you about the conference - it only had 57KB-of-scripts,

00:18:10,059 --> 00:18:22,980
jQuery, some web stats and a tiny 1kb.

00:18:22,980 --> 00:18:30,360
When I bench marked it on desktop, this one, and a MotoG4, I found that the script time,

00:18:30,360 --> 00:18:35,360
all I'm dealing is loading the page, and we are spending three times the amount of time

00:18:35,360 --> 00:18:39,299
just in scripting.

00:18:39,299 --> 00:18:40,580
Why is that important?

00:18:40,580 --> 00:18:45,539
It is important because this is happening in the JavaScript main thread.

00:18:45,539 --> 00:18:49,919
This is also blogging Paint, and in these are all the little things that make your website

00:18:49,919 --> 00:18:56,320
feel when you're also contending with web fonts loading, and disappearing, and a different

00:18:56,320 --> 00:19:01,380
one appears, and a user is controlling, and then an image loads and then that pops back

00:19:01,380 --> 00:19:03,870
up - you've all even is, right?

00:19:03,870 --> 00:19:05,250
We are suspect to it.

00:19:05,250 --> 00:19:12,160
I look the Lufthansa site this this is the mobile site.

00:19:12,160 --> 00:19:16,690
This is probably reasonably optimised.

00:19:16,690 --> 00:19:21,090
On average, a little bit bigger than other stuff.

00:19:21,090 --> 00:19:26,600
And it actually compressed really, really well, and, again, well, it was double.

00:19:26,600 --> 00:19:28,570
It doesn't mean that these numbers are completely linear.

00:19:28,570 --> 00:19:32,220
You can't say that it's going to be 600kB.

00:19:32,220 --> 00:19:34,169
You do need to test that stuff.

00:19:34,169 --> 00:19:36,389
I did start testing.

00:19:36,389 --> 00:19:41,620
Let's do an experiment here.

00:19:41,620 --> 00:19:45,429
Maybe I can just say, "Delete all of your JavaScript".

00:19:45,429 --> 00:19:49,480
You might not like that be.

00:19:49,480 --> 00:19:51,040
So I took the Guardian's website.

00:19:51,040 --> 00:19:52,799
They've done some fantastic work.

00:19:52,799 --> 00:19:59,820
Patrick Hammond who is here spoke two years ago at CSSConf, and he showed all the really

00:19:59,820 --> 00:20:02,639
great work he's done at the Guardian.

00:20:02,639 --> 00:20:07,590
I don't want to bash it up too much, but I'm going to show you something.

00:20:07,590 --> 00:20:10,039
This is the Guardian loading side by side.

00:20:10,039 --> 00:20:18,289
On the left, we have it without JavaScript and on the right, we have it with.

00:20:18,289 --> 00:20:25,430
The version on the left was completely visible in under 5 seconds on a 3G connection - bang,

00:20:25,430 --> 00:20:27,360
done.

00:20:27,360 --> 00:20:31,740
The other side: well, there is the fonts, switching, loading.

00:20:31,740 --> 00:20:35,880
The weather appeared and then a related article appeared at the bottom of the screen and it

00:20:35,880 --> 00:20:40,180
stopped rendering somewhere around the 22-second mark.

00:20:40,180 --> 00:20:44,370
Unfortunately, the 22-second mark is about the average.

00:20:44,370 --> 00:20:47,070
The average for this is about 17 seconds.

00:20:47,070 --> 00:20:48,519
This is not a bad website.

00:20:48,519 --> 00:20:51,610
This is very, very normal.

00:20:51,610 --> 00:20:56,630
It goes further too.

00:20:56,630 --> 00:21:01,990
Of the difference between the requests, and it wasn't all JavaScript, it was images and

00:21:01,990 --> 00:21:09,159
assets and other stuff, we, with JavaScript, it was 3.4 megabytes, 115 requests, otherwise

00:21:09,159 --> 00:21:14,580
1.59 and 61 requests.

00:21:14,580 --> 00:21:18,820
I think that's a lot just to show people a related article and whether and different

00:21:18,820 --> 00:21:23,980
[sound cut] but we didn't really improve it.

00:21:23,980 --> 00:21:40,679
We talk about progressive enhancement [sound cut] one thing that I've really noticed this

00:21:40,679 --> 00:21:51,860
that the metrics we're currently - I think they are the important part.

00:21:51,860 --> 00:21:58,160
Metrics like unload, on DOM-content loaded which is everything ready, DOM ready, and

00:21:58,160 --> 00:22:09,360
speed index which is my particular favourite to have a little go at.

00:22:09,360 --> 00:22:21,820
I know people who put "MS" after it so that is looks ... good metrics try to aim something.

00:22:21,820 --> 00:22:25,279
Here are some examples of good metrics.

00:22:25,279 --> 00:22:28,940
Has 19 heard of them?

00:22:28,940 --> 00:22:30,330
Any of them, all of them?

00:22:30,330 --> 00:22:35,409
I'm going to explain a little bit about what they are.

00:22:35,409 --> 00:22:41,470
The user navigates.

00:22:41,470 --> 00:22:42,470
We have a first paint.

00:22:42,470 --> 00:22:46,309
The first paint is when we see anything a wide screen.

00:22:46,309 --> 00:22:51,409
We go on, render a little bit more.

00:22:51,409 --> 00:22:56,180
Then we have some more graphic starting to appear, the font hasn't uploaded yet, and

00:22:56,180 --> 00:22:58,690
then we get to a point where we get the meaningful paint.

00:22:58,690 --> 00:23:05,550
That means that the text is visible, somebody did see something readable approximately visually

00:23:05,550 --> 00:23:14,320
complete means when the area in the view port is fully resolved, let's call it.

00:23:14,320 --> 00:23:19,450
That's great.

00:23:19,450 --> 00:23:21,200
Visually complete is a difficult one.

00:23:21,200 --> 00:23:27,529
It is not something that you do get out of dev tools, so how can we produce these metrics

00:23:27,529 --> 00:23:30,320
and actually get something out of it.

00:23:30,320 --> 00:23:36,169
Thankfully, there's a tool called Lighthouse built by the Google Chrome team which comes

00:23:36,169 --> 00:23:39,340
as a browser extension.

00:23:39,340 --> 00:23:43,250
And you can just go to a website, click on it, generate a report.

00:23:43,250 --> 00:23:52,130
It loads the site by default in nexus 5x, I think, and it slows the CPU down, it checks

00:23:52,130 --> 00:23:58,590
it in an offline mode, it will give you some stats with how it's performing as a progressive

00:23:58,590 --> 00:24:08,740
web app, accessibility stuff request and best practices.

00:24:08,740 --> 00:24:09,740
That's really great.

00:24:09,740 --> 00:24:17,370
I have a little secret though: can we keep this between us?

00:24:17,370 --> 00:24:18,779
Yes.

00:24:18,779 --> 00:24:23,470
As of Thursday, Lighthouse dropped into Google Chrome can nary.

00:24:23,470 --> 00:24:26,929
I will show you how to get this now.

00:24:26,929 --> 00:24:35,590
You need the latest Chrome Canary and animate, I imagine.

00:24:35,590 --> 00:24:41,370
You need to go to the chrome Flags page, search for dev tools experiments and turn that on.

00:24:41,370 --> 00:24:43,820
Then relaunch your browser - this is quite a step.

00:24:43,820 --> 00:24:49,800
Go to the thing that you want, and pop up your dev tools, go to the settings down here,

00:24:49,800 --> 00:24:53,580
over to the experiments, you don't see it, right?

00:24:53,580 --> 00:24:54,580
See how it appeared.

00:24:54,580 --> 00:24:56,539
You have to hit shift.

00:24:56,539 --> 00:24:58,809
It's a little secret.

00:24:58,809 --> 00:25:01,740
Then they appear, all those things that you didn't know were there.

00:25:01,740 --> 00:25:03,490
Then you have to turn it on.

00:25:03,490 --> 00:25:04,490
Close it.

00:25:04,490 --> 00:25:07,029
Open it again, and audits two will appear.

00:25:07,029 --> 00:25:14,950
Then you get a lighthouse button and you can choose the audits that you want to do and

00:25:14,950 --> 00:25:17,970
you will get some idea of the performance of your browser.

00:25:17,970 --> 00:25:23,600
I'm not sure when this is going to reach stable but they're working hard on it Google IOs

00:25:23,600 --> 00:25:29,740
in a week and a half and the guys have been worked really, really half.

00:25:29,740 --> 00:25:32,500
First meaningful paint, visually complete.

00:25:32,500 --> 00:25:37,770
I'm going to talk to you about a what this other metric we've heard a little bit about

00:25:37,770 --> 00:25:38,770
is.

00:25:38,770 --> 00:25:41,389
It is time to visually complete.

00:25:41,389 --> 00:25:43,770
This is how they're calculating it now in lighthouse.

00:25:43,770 --> 00:25:47,480
I think it is really, really cool.

00:25:47,480 --> 00:25:53,331
We watch the timeline and we figure out when the browser is visually complete, and then

00:25:53,331 --> 00:25:58,990
we are watching the JavaScript main thread,and we're watching the sub tasks that are happening,

00:25:58,990 --> 00:26:01,570
looking for them that are shorter than 50 milliseconds.

00:26:01,570 --> 00:26:11,720
We figure out when there is a five-second window without a long Taft, task.

00:26:11,720 --> 00:26:19,490
The reason we do that because time to interactive is a really good way of getting that empathy

00:26:19,490 --> 00:26:23,919
for a user that it's not popping around the web fonts nor and it's not jumping up and

00:26:23,919 --> 00:26:27,570
down and going all over the place.

00:26:27,570 --> 00:26:33,451
Your target for every device, and I'm talking about the phones in your pockets is to get

00:26:33,451 --> 00:26:38,519
it in under five seconds.

00:26:38,519 --> 00:26:44,909
Even better come up with the Twitter team do having a metric of time to first Tweet.

00:26:44,909 --> 00:26:47,789
They've been doing it for years.

00:26:47,789 --> 00:26:53,529
Trying to find ways of understanding how your users are using your apps and sites and get

00:26:53,529 --> 00:26:54,750
a metric and track it.

00:26:54,750 --> 00:26:57,690
Because it doesn't matter when unload happens.

00:26:57,690 --> 00:27:00,700
It is totally irrelevant.

00:27:00,700 --> 00:27:03,070
Don't try and keep people on your side for as long as possible.

00:27:03,070 --> 00:27:08,740
Help them get to their goals and do it quickly so they can do something else which is far

00:27:08,740 --> 00:27:09,740
better.

00:27:09,740 --> 00:27:14,629
I know that the performance landscape is realising fast and so many bits and pieces to worry

00:27:14,629 --> 00:27:16,009
about.

00:27:16,009 --> 00:27:19,640
My advice is to pick one or two and give them a shot.

00:27:19,640 --> 00:27:25,240
All of these things that are on the screen here, using a CDN, like weapon P, the purple

00:27:25,240 --> 00:27:31,120
pattern, all of these will improve website performance, give one of them a go, test it,

00:27:31,120 --> 00:27:32,529
measure it and improve.

00:27:32,529 --> 00:27:38,279
If you're wondering where I got the stats from, they are from the State of the Internet

00:27:38,279 --> 00:27:39,279
report?

00:27:39,279 --> 00:27:41,440
Has anyone seen this before?

00:27:41,440 --> 00:27:43,379
Like ten people, I think.

00:27:43,379 --> 00:27:52,790
It is a quarterly report put out, so, all my data is from Q42016, and it is just a pdf

00:27:52,790 --> 00:27:53,790
report.

00:27:53,790 --> 00:27:56,879
You can see what the global averages are.

00:27:56,879 --> 00:28:04,679
The global average for connection speed went from 62M/bit per second to the 7.

00:28:04,679 --> 00:28:08,340
We are improving but it is very slow.

00:28:08,340 --> 00:28:14,509
We've been focused on the wealthy Western web for so long, we're building for the machines

00:28:14,509 --> 00:28:17,780
we're using, but that's bullshit.

00:28:17,780 --> 00:28:18,780
We didn't sign up for that.

00:28:18,780 --> 00:28:20,799
We signed up for the World Wide Web.

00:28:20,799 --> 00:28:26,429
I want to encourage you to make the web faster, everyone.

00:28:26,429 --> 00:28:30,210
That's what I'm trying to do at Calibre, and that's what I'm dedicating all my work to

00:28:30,210 --> 00:28:32,399
at the moment.

00:28:32,399 --> 00:28:34,350
Hopefully, you can get Calibre, give it a shot.

00:28:34,350 --> 00:28:35,919
If you don't, try Lighthouse, that's great.

00:28:35,919 --> 00:28:38,190
Otherwise, if you want stickers, come and see me or something.

00:28:38,190 --> 00:28:39,190
It will be cool.

00:28:39,190 --> 00:28:40,190
Thanks a lot.

00:28:40,190 --> 00:28:41,190
[Applause].

00:28:41,190 --> 00:28:43,129
>> You have literally 60 seconds to get coffee or snacks.

00:28:43,129 --> 00:28:44,129
Run!

00:28:44,129 --> 00:28:45,129
Are we ready?

00:28:45,129 --> 00:28:45,133

YouTube URL: https://www.youtube.com/watch?v=rwyZc1keSew


