Title: Amelia Abreu: From Advocacy to Innovation | JSConf EU 2017
Publication date: 2017-05-30
Playlist: JSConf EU 2017
Description: 
	http://2017.jsconf.eu/speakers/amelia-abreu-from-advocacy-to-innovation-how-js-developers-will-shape-the-future-of-internet-security-privacy-and-trust.html

Today’s Javascript developers are working at an intersection of user experience, security, and the next generation of connected technologies. With the growth of full-stack JS tools and the expansion of the Internet of Things, robust Javascript applications will play an even bigger role in the devices and tools we use every day.

With this great power comes an even greater responsibility to our users, and to their privacy and safety. How can we advocate for and build the future of usable and trustworthy security? We’ll discuss real-life examples of improving the user experience of security tools for generalist developers, and learn some key tactics for user advocacy.
Captions: 
	00:00:00,179 --> 00:00:01,179
From Advocacy to Innovation: How JS Developers will shape the future of Internet Security,

00:00:30,650 --> 00:00:31,650
[Applause] AMELIA: Thank you.

00:00:31,650 --> 00:00:32,650
Thank you, hello?

00:00:32,650 --> 00:00:33,650
Is this - is this on?

00:00:33,650 --> 00:00:34,650
All right.

00:00:34,650 --> 00:00:37,320
Well, thank you so much for coming out, especially after we drank all the beer last night.

00:00:37,320 --> 00:00:44,329
Today I will be talking about how JavaScript does/can change the way that we build tools

00:00:44,329 --> 00:00:46,420
and how they already are.

00:00:46,420 --> 00:00:49,469
And this is probably not news to any of you all.

00:00:49,469 --> 00:00:57,890
So my name is Amelia Abreu, and like Charlie graciously introduced me I am a design researcher,

00:00:57,890 --> 00:01:01,970
and I've always been obsessed with categories.

00:01:01,970 --> 00:01:09,840
I'm a Cuban American from Texas, who has lived in the northwest for most of my adult life,

00:01:09,840 --> 00:01:15,420
so it's hard sometimes to answer the question, "Where are you from?"

00:01:15,420 --> 00:01:22,510
And I would like to start out with a point that categories and distinctions matter and

00:01:22,510 --> 00:01:32,780
this is probably not news to JS devs, after all language without classes, like requires

00:01:32,780 --> 00:01:34,700
imposed classifications.

00:01:34,700 --> 00:01:43,210
Yes, so today I'm going to talk about distinction and classification, why these little things

00:01:43,210 --> 00:01:48,990
matter, share some of my notes and observations from working on development and security tools

00:01:48,990 --> 00:01:54,910
over the past few years and make an argument that there's a lot at stake here and that

00:01:54,910 --> 00:02:00,960
we can do better and we need to do better, from a useability standpoint I always say

00:02:00,960 --> 00:02:14,469
that usability like security is best bigged in early on and as full stack JS reaches more

00:02:14,469 --> 00:02:18,629
and more momentum, it's more important to think about this.

00:02:18,629 --> 00:02:21,109
So who am I and why am I talking about this?

00:02:21,109 --> 00:02:25,459
I'm a design researcher and I will speak a little bit about how I hate the word "user".

00:02:25,459 --> 00:02:33,859
I would never describe anyone I respected as a user, but the term user experience seems

00:02:33,859 --> 00:02:42,319
to have stuck to this area, and over the past few years I've been working more on security

00:02:42,319 --> 00:02:48,790
and engineering tools, and as a result I've interviewed a lot of developers and worked

00:02:48,790 --> 00:02:56,799
with a lot more, and I often find that my relationship to the Deaf community is a little

00:02:56,799 --> 00:03:11,099
bit anthropological and prior to this I worked in Seattle and before that I was a librarian

00:03:11,099 --> 00:03:17,449
and my first career was as a music writer, and when I look back on these various threads,

00:03:17,449 --> 00:03:25,389
the thing that these all have in common is that they all involve listening to people

00:03:25,389 --> 00:03:29,979
talk about complex and technical subjects.

00:03:29,979 --> 00:03:37,380
And this ongoing interaction with classification and systems.

00:03:37,380 --> 00:03:44,819
I also want to note that something that has shaped me is that I am a child of the 1980s

00:03:44,819 --> 00:03:46,349
Texas hardware boom.

00:03:46,349 --> 00:03:51,099
My grandfather worked for Texas Instruments, my mother was a mainframe operator and neither

00:03:51,099 --> 00:04:00,510
of these were glamorous jobs but they definitely shaped my understanding of how - the pecking

00:04:00,510 --> 00:04:07,159
order of hardware and software and obviously we are living in a much different round these

00:04:07,159 --> 00:04:09,319
days.

00:04:09,319 --> 00:04:22,800
So first I am going to talk about distinction, and taste classifies, and it classifies the

00:04:22,800 --> 00:04:24,720
classifier.

00:04:24,720 --> 00:04:35,510
So there was a study on thousands of folks and it was found that their interests reflected

00:04:35,510 --> 00:04:44,310
not only economic status but also cultural status so if you like Petula Clarke that puts

00:04:44,310 --> 00:04:51,540
you at a very middle brow status but if you like shopping at the flea market that puts

00:04:51,540 --> 00:05:01,520
you in this square of artistic producers and cultural capital, and this is something that

00:05:01,520 --> 00:05:11,370
I think we can think about in less of a stratified way but in a way of thinking: okay, the way

00:05:11,370 --> 00:05:17,139
that we work, the way that we are, aesthetics matter and they say a lot about us Bordieu

00:05:17,139 --> 00:05:24,810
also will matched this to the foods that we like to eat and then a gastronomic magazine

00:05:24,810 --> 00:05:36,469
classified this so where your pickles come from says a lot about you.

00:05:36,469 --> 00:05:43,159
So in the past few years I have been working a lot on developer tools and the term developer

00:05:43,159 --> 00:05:52,790
experience has come about, and I like it okay because the word user, or as Laurel says "that

00:05:52,790 --> 00:06:00,270
demeaning little word user", is not something you would use to describe someone you respected.

00:06:00,270 --> 00:06:09,530
I would call a friend's bad boyfriend, "Oh, he is a user", so how do we bring more of

00:06:09,530 --> 00:06:15,060
that sense that we are working with folks to build tools that they can use, tools that

00:06:15,060 --> 00:06:21,129
they will integrate into their everyday lives and everyday work, and that as developers

00:06:21,129 --> 00:06:33,629
we will be using whatever is at our disposal to build better things for the end user, or

00:06:33,629 --> 00:06:35,199
for someone else down the line?

00:06:35,199 --> 00:06:38,030
There's not really a good nomenclature for that.

00:06:38,030 --> 00:06:45,129
If anyone has any suggestions, feel free to bring them to me after the presentation.

00:06:45,129 --> 00:06:49,220
Yes, so how does one do this?

00:06:49,220 --> 00:06:54,500
I find that this is something that is often mysterious.

00:06:54,500 --> 00:07:01,310
I work a lot with ethnographic interviews which means I will bring the team that I'm

00:07:01,310 --> 00:07:06,099
working with into the field to go hang out with the people who will use the products

00:07:06,099 --> 00:07:11,509
that they are building, and I always say that I'm going to write a book about doing user

00:07:11,509 --> 00:07:16,430
research that is asking dumb questions over and over.

00:07:16,430 --> 00:07:24,789
I will often ask people what seem like very obvious questions and then just listen, and

00:07:24,789 --> 00:07:38,379
that takes a lot of humility and also patience but when we do come to users with little expectation

00:07:38,379 --> 00:07:44,680
and little assumption, that's where we can learn the most about work patterns, about

00:07:44,680 --> 00:07:47,620
needs, about work-arounds.

00:07:47,620 --> 00:07:55,689
Yesterday's presentation - it blows my mind, it's blanking me because I'm jet lagged but

00:07:55,689 --> 00:08:03,129
there was a really great explanation about work-arounds in a presentation yesterday that

00:08:03,129 --> 00:08:07,199
I loved.

00:08:07,199 --> 00:08:16,229
And for devs it's often hard to distinguish between what about the users of your product

00:08:16,229 --> 00:08:21,650
are going to be different than you and your team and I always like to start with this

00:08:21,650 --> 00:08:24,770
question: well, what text editor do you use?

00:08:24,770 --> 00:08:33,740
Because if you are using Emacs you will have different keyboard shortcutting and different

00:08:33,740 --> 00:08:38,680
usage patterns than say someone using VIM.

00:08:38,680 --> 00:08:48,690
And this is often an issue when it comes to developer tools because they often come out

00:08:48,690 --> 00:08:50,870
of a roll your own solution.

00:08:50,870 --> 00:08:57,199
I automate something in my job; I share it with my boss; I share it with my team.

00:08:57,199 --> 00:09:05,180
We say, "Oh, let's bring this to the greater public".

00:09:05,180 --> 00:09:12,620
This onion you see here, this comes from a framework called cognitive work analysis which

00:09:12,620 --> 00:09:22,190
was developed in the 50s to understand how pilots and nuclear power plant operators related

00:09:22,190 --> 00:09:29,180
to their dashboards and negotiated their work and I like to call this the Homer Simpson

00:09:29,180 --> 00:09:35,570
doughnut because at the end of the day we are all Homer Simpson trying to make sense

00:09:35,570 --> 00:09:41,810
of something that's often complex, and not really designed for us, and you can see here

00:09:41,810 --> 00:09:50,200
this was using the Python DES to better understand how they used the tools.

00:09:50,200 --> 00:09:59,970
So I often work with - I work with fairly conventional hardware companies and software

00:09:59,970 --> 00:10:07,480
companies and the idea of full stack JS makes them very nervous.

00:10:07,480 --> 00:10:15,769
It's like, "Oh, the inmates are running the asylum", and as folks of the Node Foundation

00:10:15,769 --> 00:10:27,090
like to say all 500 Fortune companies are running Node however this does disrupt long

00:10:27,090 --> 00:10:36,589
held beliefs about web devs in this hardware-centric hierarchy of things.

00:10:36,589 --> 00:10:44,259
Oftentimes when I go into the field and interview JS devs the way that they work is different

00:10:44,259 --> 00:10:48,350
than say some folks working "closer to the metal".

00:10:48,350 --> 00:10:56,639
I will tell you a little bit about the differences that I've found and this is based on qualitative

00:10:56,639 --> 00:10:57,639
research.

00:10:57,639 --> 00:11:05,959
I do not have large scale demographics to support this but this is something that I

00:11:05,959 --> 00:11:12,519
would urge you all to think about, is thinking about where can we get, you know, collecting

00:11:12,519 --> 00:11:21,980
more demographics about the backgrounds of your fellow JS devs and quantifying how this

00:11:21,980 --> 00:11:32,390
is a more diverse and less conventional community than we might have previously ascribed to

00:11:32,390 --> 00:11:36,200
software or server side development.

00:11:36,200 --> 00:11:43,149
That's a first insight and it's probably not news to anyone here, is that, because there

00:11:43,149 --> 00:11:50,630
is no one standard way to become a JavaScript developer, oftentimes JS devs will acknowledge

00:11:50,630 --> 00:11:57,430
this plurality and often I will interview folks who work in teams together and they

00:11:57,430 --> 00:12:05,110
will say, "Yes, like I do things totally different to him", and this is something that I find

00:12:05,110 --> 00:12:12,269
that JS devs are far more comfortable with than some of their counterparts.

00:12:12,269 --> 00:12:13,440
This is a strength.

00:12:13,440 --> 00:12:19,620
I would argue that this is something that we want to acknowledge and see as a strength.

00:12:19,620 --> 00:12:24,279
I think it makes for better products, a more diverse user base.

00:12:24,279 --> 00:12:31,660
I've also found, and this is something that seems a little bit wishy-washy but I want

00:12:31,660 --> 00:12:39,959
you to bear with me, I found that, since many JS devs came of age during desktop-centric

00:12:39,959 --> 00:12:45,190
frameworks but have since moved into mobile and Internet of Things projects, they have

00:12:45,190 --> 00:12:53,639
a better conception of code living in the wild and living in the physical realm, and

00:12:53,639 --> 00:12:57,940
I also find that a lot of the JS devs that I interview have interests in the physical

00:12:57,940 --> 00:13:05,079
realm, whether they are knitters or skateboarders or mountain bikers, and this is something

00:13:05,079 --> 00:13:13,850
that is seen not as anathematic to making software but something that complements it

00:13:13,850 --> 00:13:23,860
and this is once again pushing back on the more immaterial sensibilities of the tradition,

00:13:23,860 --> 00:13:28,870
you know, neck beard security developers that I work with.

00:13:28,870 --> 00:13:32,199
That term is used with respect.

00:13:32,199 --> 00:13:44,930
The last and maybe most quantifiable and most important finding that I've made over the

00:13:44,930 --> 00:13:53,980
past few years is that JS devs oftentimes coming from front end work have a better idea

00:13:53,980 --> 00:14:02,270
of advocating for the end user and they often speak with a desire to help others.

00:14:02,270 --> 00:14:08,680
I was working on a Internet of Things security tool this last year and one of the devs said

00:14:08,680 --> 00:14:14,400
to me I don't want to make an insecure baby surveillance device.

00:14:14,400 --> 00:14:25,529
And this was very self-aware, I thought, and also very aware of the impact that one's work

00:14:25,529 --> 00:14:32,310
had in the world, but we are at a crossroads here.

00:14:32,310 --> 00:14:40,019
Having a desire to help others is not the same as actually helping others, and I find

00:14:40,019 --> 00:14:47,519
that notions of advocacy are all well and good but they are often - there's often a

00:14:47,519 --> 00:14:50,720
conflict about how to actually put those into action.

00:14:50,720 --> 00:14:58,420
I often say that doing what I do, I often come to the table when things are already

00:14:58,420 --> 00:15:02,850
on fire.

00:15:02,850 --> 00:15:10,879
And my goal in the work that I do is helping you all to smell the smoke, because here's

00:15:10,879 --> 00:15:16,860
the thing: I am very sick of empathy as a corporate buzz word.

00:15:16,860 --> 00:15:22,800
Empathy for me is Bill Clinton saying, "I feel your pain", it's a gratifying thing to

00:15:22,800 --> 00:15:34,759
dispense of and it's often, you know, rewarding to hear it, if someone empathises with you,

00:15:34,759 --> 00:15:39,230
but empathy without action is pretty meaningless.

00:15:39,230 --> 00:15:45,060
So how do we build advocacy?

00:15:45,060 --> 00:15:51,529
If you haven't run across this scene from the group Indigenous Action I would really

00:15:51,529 --> 00:16:00,910
encourage it and I find that we need to think about our user or end users and the folks

00:16:00,910 --> 00:16:06,149
that we work with as accomplices, not allies.

00:16:06,149 --> 00:16:14,389
We want to be with them while they use the products that we build, and that we need - and

00:16:14,389 --> 00:16:19,069
that in order to do that we need to build trust and consent.

00:16:19,069 --> 00:16:21,240
No one is going to let us in.

00:16:21,240 --> 00:16:26,870
No one is going to trust us until we build that trust, and we build that trust by walking

00:16:26,870 --> 00:16:35,400
alongside them, by acknowledging those diverse viewpoints and building meaning into our data

00:16:35,400 --> 00:16:39,399
gathering.

00:16:39,399 --> 00:16:44,320
Oftentimes when I work on developer products, there's not a really good explanation of who

00:16:44,320 --> 00:16:47,730
it's actually for.

00:16:47,730 --> 00:16:53,269
This is something that I find that JS devs have a very low bullshit meter for.

00:16:53,269 --> 00:16:56,269
You know, what's the story behind this?

00:16:56,269 --> 00:16:59,130
Why am I supposed to use it?

00:16:59,130 --> 00:17:02,910
This doesn't make sense with what I'm doing.

00:17:02,910 --> 00:17:13,250
I worked on an API this past year that was developed by folks working in CEE and the

00:17:13,250 --> 00:17:20,400
way that the calls were formed just didn't match JS syntax at all, not that there is

00:17:20,400 --> 00:17:26,190
any rhyme or reason to JS syntax but that's not my field of expertise.

00:17:26,190 --> 00:17:33,660
Yes, and this is something I find with developer tools is that we need to give a reason for

00:17:33,660 --> 00:17:35,400
folks to use it.

00:17:35,400 --> 00:17:45,700
We need to exculpate the stories and make a case for it because unless - and there are

00:17:45,700 --> 00:17:53,890
some notable exceptions to this, but unless we make a case for a usable security solution

00:17:53,890 --> 00:18:02,160
or for an easily implementable security solution, it's not going to happen.

00:18:02,160 --> 00:18:09,280
I think that in this community our diversity is our strength but we need ways to understand

00:18:09,280 --> 00:18:20,131
our impact and I will repeat my plea to build more data on demographic diversity; build

00:18:20,131 --> 00:18:31,090
more data on who is deploys JS frameworks at every level of the stack and how it's different,

00:18:31,090 --> 00:18:41,340
how workflows are different, and how this makes for a better impact.

00:18:41,340 --> 00:18:51,670
And I think that this is especially important when our work impacts very vulnerable people.

00:18:51,670 --> 00:18:58,820
In the jargon around the Internet of Things, there's a big buzz word.

00:18:58,820 --> 00:19:11,940
If we are going to be building things for people with limited economic capacity we need

00:19:11,940 --> 00:19:19,090
to be more economically aware of how our work impacts them.

00:19:19,090 --> 00:19:27,740
Likewise, as we - did anyone follow the class action lawsuit?

00:19:27,740 --> 00:19:35,000
As we put connected technologies into realms that we would consider to be very private

00:19:35,000 --> 00:19:45,390
we need to make sure that we are protecting our users' data and notions of empathy and

00:19:45,390 --> 00:19:51,420
notions of advocacy are all well and good, but until - but the rubber hits the road when

00:19:51,420 --> 00:20:01,940
we are in this very intimate and necessarily trustworthy place.

00:20:01,940 --> 00:20:10,370
And this is the argument I always make to my clients: it's that we shouldn't discount

00:20:10,370 --> 00:20:18,710
even as generalist or tinkerer devs, if they cannot rock your security tool then we are

00:20:18,710 --> 00:20:24,870
not going to have security, and we need to invest in design and documentation that does

00:20:24,870 --> 00:20:32,950
accommodate a larger span of users, even when those users are not what we consider to be

00:20:32,950 --> 00:20:40,810
traditional devs or traditional implementers of security.

00:20:40,810 --> 00:20:47,920
This is a big task and I think it's something that will require rebuilding trust not only

00:20:47,920 --> 00:20:58,050
amongst new folks coming in but also amongst the long range users of our products and at

00:20:58,050 --> 00:21:06,210
every level of software and hardware development, so what do we do next?

00:21:06,210 --> 00:21:08,590
Where do we go from here?

00:21:08,590 --> 00:21:18,860
This will probably be no surprise to you but I advocate for understanding developer experiences

00:21:18,860 --> 00:21:21,370
in every step of the process.

00:21:21,370 --> 00:21:28,090
If you are working on a roll your own tool, put it in front of other people and do this

00:21:28,090 --> 00:21:31,070
early and often.

00:21:31,070 --> 00:21:40,140
IBM did these studies in the early 1990s that said that there's a 20/1 ROI on investments

00:21:40,140 --> 00:21:48,720
and usability and that ROI number was increased earlier on in the process.

00:21:48,720 --> 00:21:55,410
Usability testing is huge, and bringing your users in, making a more participatory stance

00:21:55,410 --> 00:22:02,090
when developing your tools and their documentation, and I think that organisations as a whole

00:22:02,090 --> 00:22:07,810
can invest in understanding these differences in values and skill sets.

00:22:07,810 --> 00:22:14,430
Because ultimately I hope that we can work from a standpoint of the ethics of care.

00:22:14,430 --> 00:22:20,480
This is a big project that I have been working on conjointly, but how do we see our work

00:22:20,480 --> 00:22:25,600
as caring for our users, not just giving them something cool to use?

00:22:25,600 --> 00:22:30,230
And I think that this is something that we can bring to our work and that reminds us

00:22:30,230 --> 00:22:33,940
of how important what we are doing actually is.

00:22:33,940 --> 00:22:37,390
Lastly, let's work together.

00:22:37,390 --> 00:22:47,630
I recently started a programme called UX Night School bringing design research tools to developers

00:22:47,630 --> 00:22:50,770
and designers in the field and I would love to work with you, so thanks.

00:22:50,770 --> 00:22:51,270

YouTube URL: https://www.youtube.com/watch?v=VUWZAaXiL8M


