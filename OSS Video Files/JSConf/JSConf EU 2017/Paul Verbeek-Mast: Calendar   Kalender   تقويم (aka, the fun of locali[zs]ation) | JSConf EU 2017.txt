Title: Paul Verbeek-Mast: Calendar   Kalender   تقويم (aka, the fun of locali[zs]ation) | JSConf EU 2017
Publication date: 2017-06-01
Playlist: JSConf EU 2017
Description: 
	http://2017.jsconf.eu/speakers/paul-verbeekmast-calendar-kalender-aka-the-fun-of-localizsation.html

In a few months time, I had created a new calendar for our partners at Booking.com. Months? Yes, months. Creating a calendar that works correctly all across the world for 42 different languages and even more locales, is not something that you do in a week. In this talk I will talk to you about the weird things I learned. From Brazilian Summer Time and Slovakian date formatting, to surprises in open-sources libraries and dealing with wrong assumptions. And how to avoid the many (many!) mistakes I made.
Captions: 
	00:00:00,170 --> 00:00:01,170
Calendar / Kalender (aka, the fun of locali[zs]ation) Paul Verbeek-Mast

00:00:35,839 --> 00:00:36,839
[Applause] PAUL: Thank you.

00:00:36,839 --> 00:00:37,839
This is the last part of my name, it's Verbeek-Mast, recently got married and added my girlfriend's

00:00:37,839 --> 00:00:39,850
last name to it.

00:00:39,850 --> 00:00:47,229
Up until last week I was working at Booking.com as a front end developer, but I've now joined

00:00:47,229 --> 00:00:52,350
a start-up in the Netherlands called SpronQ and I'm also an organiser of the Fronteers

00:00:52,350 --> 00:00:59,229
conference this year, which will be the 10th anniversary, which is cool.

00:00:59,229 --> 00:01:08,689
So I will also not tell you what it all says but it talks about localisation of a calendar

00:01:08,689 --> 00:01:16,759
that we did at Booking.com, so these are almost all - these are part of the languages that

00:01:16,759 --> 00:01:20,500
we localised in, it was 42.

00:01:20,500 --> 00:01:25,640
We did not localise in Klingon even though I really wanted to.

00:01:25,640 --> 00:01:37,130
Let me tell you what my talk is not about, about things we already know, that date and

00:01:37,130 --> 00:01:39,759
time is difficult.

00:01:39,759 --> 00:01:44,240
If you really want to know what we all think that's incorrect about time there is a cool

00:01:44,240 --> 00:01:53,771
article called Falsehoods Programmers Believe About Time and, if that's not enough, there's

00:01:53,771 --> 00:01:59,549
still More Falsehoods Programmers Believe About Time and you can look them up.

00:01:59,549 --> 00:02:02,310
Very, very cool.

00:02:02,310 --> 00:02:09,810
As I said, I was working at Booking.com and we had this calendar that we used for people

00:02:09,810 --> 00:02:16,750
that own an apartment or a small hotel, and where they can see their reservations, change

00:02:16,750 --> 00:02:22,050
the prices and things like that but the problem was it wasn't actually a calendar, it was

00:02:22,050 --> 00:02:28,260
like this infinite scrolling list where you couldn't see any data on, you have to click

00:02:28,260 --> 00:02:33,629
three times before you can get the real data, so we got a lot of feedback from our users

00:02:33,629 --> 00:02:42,040
that it didn't really look like our calendars that they were using the competitor with the

00:02:42,040 --> 00:02:49,310
red logo, which I cannot tell, so we decided to change the calendar.

00:02:49,310 --> 00:02:56,510
We did some user research about what we wanted to do and so we did implementation and we

00:02:56,510 --> 00:02:58,569
started out with making some sketches.

00:02:58,569 --> 00:03:04,200
This sketch was made by someone else this morning, but it's still a cool sketch, but

00:03:04,200 --> 00:03:14,240
we started out with some sketches and implemented our front end and then actually we used Perl

00:03:14,240 --> 00:03:18,420
at Booking.com so we had some Perl code and you actually don't want to touch a lot of

00:03:18,420 --> 00:03:24,730
that so we tried to just use the code that was already there and that was it for the

00:03:24,730 --> 00:03:25,730
calendar.

00:03:25,730 --> 00:03:27,150
But then we needed to localise.

00:03:27,150 --> 00:03:35,511
There are 42 different countries at Booking.com and even more regions so if you are German

00:03:35,511 --> 00:03:43,120
you will know this date format is not really how it looks in Germany and also you are used

00:03:43,120 --> 00:03:47,120
that the euro sign is at the end.

00:03:47,120 --> 00:03:48,519
Things like that.

00:03:48,519 --> 00:03:56,299
If you look at the US, it will actually - a week will start at Sunday; the date format

00:03:56,299 --> 00:03:58,060
is completely different.

00:03:58,060 --> 00:03:59,799
The price is dollars.

00:03:59,799 --> 00:04:06,099
And for those dates things, we actually decided to use Moment.js.

00:04:06,099 --> 00:04:12,400
Also not to talk about Moment.js, I will briefly go through it, what we did use, but Moment.js

00:04:12,400 --> 00:04:17,950
has very good localisation data as well.

00:04:17,950 --> 00:04:26,280
This morning Matt was talking about js-joda and date - it's not the right name - date

00:04:26,280 --> 00:04:31,730
functions, it should be, and about the ECMAScript temporal proposals, if you want to know about

00:04:31,730 --> 00:04:36,260
those, just go and watch his talk when it's online.

00:04:36,260 --> 00:04:42,530
So we had this - say we have this sketch, we implement this sketch, and we wanted to

00:04:42,530 --> 00:04:46,390
add the names of the weeks all along the top.

00:04:46,390 --> 00:04:51,680
We need to know: well, what does the first day of the week start with?

00:04:51,680 --> 00:04:54,980
It starts with Sunday or Monday?

00:04:54,980 --> 00:05:00,920
You can easily get that with Moment.js, with locale data, you can get the first day of

00:05:00,920 --> 00:05:07,190
the week and return with a 0 or 1 and then you can get the names of the week in the locale

00:05:07,190 --> 00:05:14,641
which you've selected which will in this case generate Sunday through Saturday, and we use

00:05:14,641 --> 00:05:16,650
that at the top.

00:05:16,650 --> 00:05:24,190
Then we needed to get the first day of the month - well, first day of the calendar which

00:05:24,190 --> 00:05:27,780
is interesting because it's not the first day of the month.

00:05:27,780 --> 00:05:35,740
So we used - we could just use start of month and then start of week, and then get the number

00:05:35,740 --> 00:05:41,820
of the date, and the same goes for the end of the month.

00:05:41,820 --> 00:05:43,490
Then just fill them all out.

00:05:43,490 --> 00:05:51,310
So that was easily to generate the first part of the calendar.

00:05:51,310 --> 00:06:00,100
Then I needed to find what kind of format does this country use?

00:06:00,100 --> 00:06:07,630
It's not always - it wasn't very easy to find but it was somewhere in a more private variable

00:06:07,630 --> 00:06:13,690
called long date format, and then we used a capital L, and that was basically it.

00:06:13,690 --> 00:06:19,100
So I'm going to go through this very fast but just to get a sense of what we were kind

00:06:19,100 --> 00:06:22,160
of working with.

00:06:22,160 --> 00:06:28,280
This was basically the localisation then for all the languages, very easily.

00:06:28,280 --> 00:06:34,540
So then we went on the testing and just going through the languages to see if everything

00:06:34,540 --> 00:06:42,250
is okay, and then I hit the bump that I always forget, and that is RTL, which stands for

00:06:42,250 --> 00:06:44,510
right to left languages.

00:06:44,510 --> 00:06:55,120
Those are languages like Arabic or Hebrew so if you have this calendar it's not only

00:06:55,120 --> 00:06:58,460
this script that goes from right to left, you actually want to change everything from

00:06:58,460 --> 00:07:04,090
right to left so for example you want to switch the right column to the left, and then also

00:07:04,090 --> 00:07:16,590
switch everything around as well so that your Monday also starts on the right side, your

00:07:16,590 --> 00:07:19,020
week.

00:07:19,020 --> 00:07:24,830
So this is all done in CSS, so you just change your float left to your float right, your

00:07:24,830 --> 00:07:27,910
margin left to your margin right.

00:07:27,910 --> 00:07:32,740
If you have something inline or inline block it will automatically go right.

00:07:32,740 --> 00:07:40,020
The only thing is the two arrows, we switch the functionality around because if you click

00:07:40,020 --> 00:07:44,170
on the left arrow you want to go to a month in the future instead of the past.

00:07:44,170 --> 00:07:50,800
We could have just rotated the arrows which would have been easy with CSS.

00:07:50,800 --> 00:07:59,550
So we just clicked through everything, fixed a few bugs and then we went on to more testing.

00:07:59,550 --> 00:08:05,110
If you want to know about unit testing at Booking.com, you can give me a few beers later

00:08:05,110 --> 00:08:08,490
on and I will tell you a whole lot about unit testing at Booking.com.

00:08:08,490 --> 00:08:12,200
I don't work there anymore so I can now tell you everything I know.

00:08:12,200 --> 00:08:17,470
[Laughter] But what we did was we added just a whole

00:08:17,470 --> 00:08:23,690
bunch of our users into a beta group, not asking them, because why would you ask them?

00:08:23,690 --> 00:08:28,830
Just put them in a beta and then add a feedback at the top where they could do a thumbs up

00:08:28,830 --> 00:08:34,450
and a thumbs down and get a little bit of feedback, just a text area.

00:08:34,450 --> 00:08:38,599
What do you want to know about users giving you feedback?

00:08:38,599 --> 00:08:40,479
It is not always that useful.

00:08:40,479 --> 00:08:48,029
Most of the time it's just very short strings like - well, these were the positive ones.

00:08:48,029 --> 00:08:54,790
"We finally have a much better overview and love the new interface."

00:08:54,790 --> 00:09:04,500
But they already give you a long thing about how their life is and how good the calendar

00:09:04,500 --> 00:09:09,990
is in their life and how they finally found the right person that they want to be with

00:09:09,990 --> 00:09:13,810
just because you have the new calendar.

00:09:13,810 --> 00:09:17,149
There's weird stories in there which I will not show.

00:09:17,149 --> 00:09:22,949
But there's also just some bad things like, "Hate it, bring the old one back", without

00:09:22,949 --> 00:09:25,639
saying why they hate it, and, "Who made this?"

00:09:25,639 --> 00:09:33,829
Smiling chocolate ice cream, I think.

00:09:33,829 --> 00:09:40,910
But if you really dig into the feedback you will find some obscure things that they will

00:09:40,910 --> 00:09:45,040
tell you which you have to dig through your code to figure out what was actually going

00:09:45,040 --> 00:09:46,209
on.

00:09:46,209 --> 00:09:51,750
Because these are bug reports and not in the sense that you yourself would write a bug

00:09:51,750 --> 00:09:58,250
report but, "Hey listen, your reservation is not showing up", and great, what now, because

00:09:58,250 --> 00:10:01,710
I cannot contact the person really.

00:10:01,710 --> 00:10:07,810
So what I did do is I saved not enough data.

00:10:07,810 --> 00:10:09,380
That was a big mistake for me.

00:10:09,380 --> 00:10:15,820
I just saved their user ID and the language that they selected and I should have done

00:10:15,820 --> 00:10:20,790
the user agent and a whole bunch of other things but I was lazy and I implemented too

00:10:20,790 --> 00:10:22,680
late, which is a mistake.

00:10:22,680 --> 00:10:26,519
Don't be too lazy with these kind of things.

00:10:26,519 --> 00:10:32,500
So I had two things to work with, to do some bug fixing and those four examples that I

00:10:32,500 --> 00:10:36,170
will just give you, that I just gave you, I will go through them because these were

00:10:36,170 --> 00:10:42,110
the four most interesting things that I found and which caused me a lot of detective work

00:10:42,110 --> 00:10:45,629
to figure out what it was.

00:10:45,629 --> 00:10:52,060
We had some reservation data on our calendar as well so it showed you more than just a

00:10:52,060 --> 00:10:57,410
blue bar, it showed you the name and things like that but one person - it's just one random

00:10:57,410 --> 00:11:00,880
person said: well, my reservations aren't showing up.

00:11:00,880 --> 00:11:04,709
They gave a little bit more data about which specific reservation that didn't show up and

00:11:04,709 --> 00:11:10,040
it was in October 2016, this is reservation, the 15th or 16th, it just wasn't there for

00:11:10,040 --> 00:11:11,630
him.

00:11:11,630 --> 00:11:16,329
And it was weird because I had tested it, it was working, that's how it usually goes,

00:11:16,329 --> 00:11:23,149
it works on my machine, but for him it didn't work and you don't want that because they

00:11:23,149 --> 00:11:27,439
will get overbookings and lawsuits.

00:11:27,439 --> 00:11:31,980
So first off, just looking through my code to see if I could figure out anything which

00:11:31,980 --> 00:11:36,550
was a problem and then I thought: well, it must be some localisation thing because that's

00:11:36,550 --> 00:11:44,160
mostly where the problems originate at Booking.com and I figured out this person lives in Brazil.

00:11:44,160 --> 00:11:50,310
So first step: changing the language to Portuguese.

00:11:50,310 --> 00:11:55,740
Specifically Brazilian Portuguese because we have that in the website.

00:11:55,740 --> 00:11:57,569
I couldn't reproduce the bug.

00:11:57,569 --> 00:12:08,279
So next step: I changed the time zone on my laptop to be minus 3 because I saw that they

00:12:08,279 --> 00:12:14,980
were based in the capital, and it still didn't show up.

00:12:14,980 --> 00:12:16,700
I couldn't reproduce the bug.

00:12:16,700 --> 00:12:20,459
Then a colleague sitting next to me said: here's the bug, I have it.

00:12:20,459 --> 00:12:21,459
What?

00:12:21,459 --> 00:12:22,459
What did you do?

00:12:22,459 --> 00:12:25,370
He said: well, I switched to Portuguese, changed the time zone to minus 3.

00:12:25,370 --> 00:12:30,509
Well, okay, let's just check out any other settings that we might have and we couldn't

00:12:30,509 --> 00:12:37,579
figure it out for a very long time until I noticed there's a Wiki page on time in Brazil

00:12:37,579 --> 00:12:46,220
which gives you a lot of weird data like their Summer Time is different when they have carnival

00:12:46,220 --> 00:12:54,680
during the time when they would normally switch to Summer Time but also that not their entire

00:12:54,680 --> 00:12:59,879
country adheres to Summer Time.

00:12:59,879 --> 00:13:06,209
I thought it couldn't be Summer Time, it's October, but I was just forgetting one of

00:13:06,209 --> 00:13:11,779
the falsehoods I believe about time which is Summer Time is always true in my summer,

00:13:11,779 --> 00:13:18,740
which is not true for their hemisphere, of course, because Summer Time starts in October.

00:13:18,740 --> 00:13:27,259
So my colleague selected capital of Brazil as his time zone and I selected a city just

00:13:27,259 --> 00:13:34,309
north of Brazil, and that city north of Brazil didn't adhere to Summer Time and the capital

00:13:34,309 --> 00:13:41,869
did adhere to it, so I found a crappy piece of code that I wrote which compared two different

00:13:41,869 --> 00:13:48,350
dates and there was one thing that says "add one day", and I learned that in Moment.js

00:13:48,350 --> 00:13:55,820
"add one day" does not mean add one day; it sort of does, but it just adds 24 hours.

00:13:55,820 --> 00:14:03,089
Compared with this, it basically meant the day was never going to be the same because

00:14:03,089 --> 00:14:09,990
the day would be one day, and day 3 would be midnight.

00:14:09,990 --> 00:14:14,360
By the way, smart quotes, not fun.

00:14:14,360 --> 00:14:15,819
The day there.

00:14:15,819 --> 00:14:16,819
Sorry.

00:14:16,819 --> 00:14:22,850
So I just switched them around and that was fixed.

00:14:22,850 --> 00:14:25,550
[Laughter] Great.

00:14:25,550 --> 00:14:32,139
I could also fix my code to make it better, but I was leaving anyway.

00:14:32,139 --> 00:14:35,339
So another thing is: why are closed dates red?

00:14:35,339 --> 00:14:42,970
A very obscure question but they came up in a different kind of string so I could figure

00:14:42,970 --> 00:14:49,030
out that it said: this date, if they closed it, so I don't accept any reservations, we

00:14:49,030 --> 00:14:50,649
show this red bar.

00:14:50,649 --> 00:14:54,199
Well, that's good, right?

00:14:54,199 --> 00:14:55,199
So what do you think of this?

00:14:55,199 --> 00:14:58,920
Is this a good day at the stock market?

00:14:58,920 --> 00:15:04,410
I wouldn't think so, but this is a very good day at the stock market because in eastern

00:15:04,410 --> 00:15:11,810
Asia, red often means that it's something good instead of something bad.

00:15:11,810 --> 00:15:18,259
So their convention is something is closed and you are showing this is good?

00:15:18,259 --> 00:15:23,350
It's not very fun because sometimes you show that it's good even though they close it because

00:15:23,350 --> 00:15:27,189
they have a funeral or something, and you don't want to do that, so we switched it around

00:15:27,189 --> 00:15:33,779
to make it grey and that was neutral enough for people, so learning from this, just watch

00:15:33,779 --> 00:15:42,689
out with colours because you can do things wrong for some countries.

00:15:42,689 --> 00:15:47,319
So the third one is that the day selection is not working.

00:15:47,319 --> 00:15:53,240
This was our date selection, with a From and a To, and when you click on it, it showed

00:15:53,240 --> 00:15:56,190
your jQuery, your date picker.

00:15:56,190 --> 00:15:58,379
Why jQuery UI date picker?

00:15:58,379 --> 00:16:05,319
Well, because we had already used it and we are just re-using things.

00:16:05,319 --> 00:16:15,389
At first, it's not a big problem but you cannot see what date and what month it is so you

00:16:15,389 --> 00:16:21,029
have to get the date format for a moment to see: okay, this is month, day, year.

00:16:21,029 --> 00:16:24,999
Then, if you want to change that, if you want to connect it with the date picker you can

00:16:24,999 --> 00:16:30,309
do parse date and then it says month, day, year, and you add the date.

00:16:30,309 --> 00:16:33,459
But this gives an error.

00:16:33,459 --> 00:16:38,980
This does not work because jQuery UI uses this format.

00:16:38,980 --> 00:16:48,980
Month, day, year, lower case, and then the year changes to yy, so I created a little

00:16:48,980 --> 00:16:51,059
script for it.

00:16:51,059 --> 00:16:55,019
I already did this, so it was before the bug showed up.

00:16:55,019 --> 00:17:02,980
So I created a script, put it - by the way, I hope you will not need it - but the problem

00:17:02,980 --> 00:17:05,910
with this script led in this part.

00:17:05,910 --> 00:17:10,690
If you were here a couple of talks before about regular expressions, this is a very

00:17:10,690 --> 00:17:17,670
easy regular expression, it kind of finds the slashes and dashes in the day format,

00:17:17,670 --> 00:17:20,151
you have to figure out where the delimiters are.

00:17:20,151 --> 00:17:25,450
If you are from Germany you've probably already figured out a problem because most complaints

00:17:25,450 --> 00:17:28,380
come from German users.

00:17:28,380 --> 00:17:34,680
It also needed a dot because the format in Germany mostly is a dot in between, so I thought:

00:17:34,680 --> 00:17:43,430
well, what the hell, let's just change it to /W and then be done with it.

00:17:43,430 --> 00:17:48,990
Most people didn't report a bug anymore except for one country, and I told you that I saved

00:17:48,990 --> 00:17:54,260
the language of the country, and I actually saved the full language name, so I saved this

00:17:54,260 --> 00:17:57,630
for the country that was the problem.

00:17:57,630 --> 00:18:01,700
So I thought: okay, which language is that?

00:18:01,700 --> 00:18:05,311
So I used my very great tool for that, Google Translate.

00:18:05,311 --> 00:18:10,460
Google Translate said: okay, I've detected this is Slovenian.

00:18:10,460 --> 00:18:13,260
Are there any in the room by the way?

00:18:13,260 --> 00:18:17,010
Any Slovakians in the room?

00:18:17,010 --> 00:18:24,780
So the top one is Slovakian, and the bottom one is Slovenian.

00:18:24,780 --> 00:18:25,960
It's a slight difference.

00:18:25,960 --> 00:18:31,180
So after I checked it's Slovenian and thought: still not seeing the bug - and then it says

00:18:31,180 --> 00:18:38,610
in the bottom, "Did you mean this?", and I'm like, "No, not really!"

00:18:38,610 --> 00:18:45,300
So Google Translate does know that this word is in Slovak because if you just change the

00:18:45,300 --> 00:18:50,280
word to Slovak, it translates it, so what was the problem here?

00:18:50,280 --> 00:18:55,310
The date delimiter was dot space.

00:18:55,310 --> 00:18:58,530
Great.

00:18:58,530 --> 00:19:05,750
So just adding a plus to my regular expression fixed everything.

00:19:05,750 --> 00:19:11,360
Maybe something else is broken but at least it fixed this.

00:19:11,360 --> 00:19:15,640
The last thing that I want to show you has nothing to do with date or time; it has something

00:19:15,640 --> 00:19:19,540
to do with the prices that weren't showing up properly.

00:19:19,540 --> 00:19:25,060
So we have the reservation, we have the number, we also showed the prices.

00:19:25,060 --> 00:19:29,730
Showed up perfectly fine.

00:19:29,730 --> 00:19:39,240
We checked and nobody ever had a price that was higher than 99,000 euros, so should be

00:19:39,240 --> 00:19:41,000
fine.

00:19:41,000 --> 00:19:46,130
But yeah, not always.

00:19:46,130 --> 00:19:57,510
So this was 1 million Indonesian Rupiah, I think, so it's not always just about dates

00:19:57,510 --> 00:20:02,800
and times, it's also about prices, it's about changing the colours, it's about cultural

00:20:02,800 --> 00:20:05,650
differences as well.

00:20:05,650 --> 00:20:12,210
I think I went a little bit too fast but my conclusion to wrap this up is a couple of

00:20:12,210 --> 00:20:17,040
things: so do not make any assumptions.

00:20:17,040 --> 00:20:21,960
That's basically what a lot of people have already said at a number of different conferences

00:20:21,960 --> 00:20:26,760
but even if you read all the assumptions that people make about date and time there's a

00:20:26,760 --> 00:20:30,610
lot of assumptions that you are probably going to make.

00:20:30,610 --> 00:20:32,960
And localisation is not just translation.

00:20:32,960 --> 00:20:37,410
Translation is a part of localisation.

00:20:37,410 --> 00:20:38,410
It's more than that.

00:20:38,410 --> 00:20:39,820
It's cultural differences.

00:20:39,820 --> 00:20:45,770
It's date and time, it's colours, not just about date and time but also colours and things

00:20:45,770 --> 00:20:46,770
like that.

00:20:46,770 --> 00:20:52,900
Gathering meaningful feedback, so not to do things that I did, it's gathering feedback

00:20:52,900 --> 00:21:00,380
from the users, it's great, but just save their user agent, save the URL that they are

00:21:00,380 --> 00:21:06,933
on, save maybe the way you look at languages, so maybe instead of the Slovenian or the Slovakian

00:21:06,933 --> 00:21:14,650
word that I said, just save SK which makes more sense for programmers.

00:21:14,650 --> 00:21:15,920
And bugs will happen.

00:21:15,920 --> 00:21:22,280
It doesn't matter how much you test it, it doesn't matter how much experience you have

00:21:22,280 --> 00:21:26,640
in localisation, every time you do something, bugs will happen and they will always be there,

00:21:26,640 --> 00:21:30,760
even if you fix all the bugs that people are reporting.

00:21:30,760 --> 00:21:37,610
It will still be localisation bugs because sometimes people are just used to localisation

00:21:37,610 --> 00:21:42,190
issues, and change their language to English just so that they know this probably works

00:21:42,190 --> 00:21:43,640
better.

00:21:43,640 --> 00:21:50,620
But localisation is still important because if you don't have German language, a lot of

00:21:50,620 --> 00:21:55,800
people can't use your website and you will say I don't have a lot of Germans on my website.

00:21:55,800 --> 00:22:00,310
You need to change your language.

00:22:00,310 --> 00:22:03,810
It's about accessibility.

00:22:03,810 --> 00:22:11,770
And bug fixing is like being a detective, kind of like being a travelling detective,

00:22:11,770 --> 00:22:16,090
because I feel like I have travelled to all different kinds of regions just to figure

00:22:16,090 --> 00:22:18,270
out what the problem was.

00:22:18,270 --> 00:22:22,080
I didn't actually travel because if that was the case that I could travel for bug fixes

00:22:22,080 --> 00:22:25,060
I might still be working at Booking.

00:22:25,060 --> 00:22:30,890
So have fun with your bug fixes and just feel like that you are actually trying to find

00:22:30,890 --> 00:22:35,400
something that no one else has ever done before.

00:22:35,400 --> 00:22:37,860
So thank you very much.

00:22:37,860 --> 00:22:42,110
This is my Twitter handle, if you want to follow Fronteers, this is the Fronteers Twitter

00:22:42,110 --> 00:22:43,110
handle.

00:22:43,110 --> 00:22:45,150
My email address - I love getting emails.

00:22:45,150 --> 00:22:47,030
This is my ICQ number.

00:22:47,030 --> 00:22:48,030
Thank you very much.

00:22:48,030 --> 00:22:48,530

YouTube URL: https://www.youtube.com/watch?v=0I4BNqfVLFI


