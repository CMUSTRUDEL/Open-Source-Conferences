Title: Zahra Jabini:  Sequential Art, Comics & SVGs | JSConf EU 2017
Publication date: 2017-05-25
Playlist: JSConf EU 2017
Description: 
	http://2017.jsconf.eu/speakers/zahra-jabini-sequential-art-comics-svgs.html

Creative expression on the web shouldn’t be limited to people who know how to code. In this talk, we’ll explore how to repurpose the sophisticated tools that designers already know to build interactive, dynamic art on the web.

I’ll demonstrate this principle through a JavaScript library that allows designers to create full-bleed animated comics, graphic novelas, story boards, sequential art and so on, using a tool they already know: Adobe Illustrator. By combining SVGs with powerful three-dimensional motion effects, we’ll learn how to tap into unexplored capabilities in the browser and break out of the 1D world and into the 3D universe.

We’ll use simple techniques to build animations that are high-resolution, performant, and best of all, easily accessible to designers by allowing them to use their own tools to “code” in their own language and thus deliver cinematic-quality stories on the web without ongoing engineering assistance.
Captions: 
	00:00:25,200 --> 00:00:33,880
Can we just talk about the snack game at JSConf?

00:00:33,880 --> 00:00:38,219
It's on point.

00:00:38,219 --> 00:00:40,940
Also Malte's dance party that's going on in the background.

00:00:40,940 --> 00:00:41,940
Killing it.

00:00:41,940 --> 00:00:42,940
It's amazing.

00:00:42,940 --> 00:00:49,120
So I want you all to get pumped right now because the journey we're going to go on is

00:00:49,120 --> 00:00:50,379
going to blow your minds.

00:00:50,379 --> 00:00:55,530
So we're going to talk about something that I've talked about recently which is sequential

00:00:55,530 --> 00:00:57,679
art, and SVGs.

00:00:57,679 --> 00:01:10,900
And so my name is Zahra, and I work at Bustle, a feminist group which a focuses on inclusivity,

00:01:10,900 --> 00:01:12,670
positivity, and empowerment.

00:01:12,670 --> 00:01:21,810
What I love working about media is I get to be a digital storyteller as well as an intellectual.

00:01:21,810 --> 00:01:29,110
One of the things that we pride ourselves on at Bustle is breaking out of the standard

00:01:29,110 --> 00:01:30,840
article format.

00:01:30,840 --> 00:01:35,060
For example, one of the storytelling formats that we've experimented with is this interactive

00:01:35,060 --> 00:01:37,020
flowchart.

00:01:37,020 --> 00:01:42,030
It's a choose-your-own-adventure that breaks you out of the monotony of the article, and

00:01:42,030 --> 00:01:54,900
lets and I think the best way to convey something is through

00:01:54,900 --> 00:01:59,560
telling a story whether that's through educating, or entertaining, or persuading.

00:01:59,560 --> 00:02:06,790
And if you think about it, we tell so many stories in our lives, whether that's through

00:02:06,790 --> 00:02:12,000
movies, photographs, or tweets, and what all of these have in common is that they break

00:02:12,000 --> 00:02:19,010
the story into pieces arranged in a very specific way where you move sequentially through time.

00:02:19,010 --> 00:02:24,580
One of the best known forms of telling stories in a sequential format that pre-dates the

00:02:24,580 --> 00:02:30,260
Internet and the moving image is, of course, comics.

00:02:30,260 --> 00:02:35,710
Eisner uses the term comics.

00:02:35,710 --> 00:02:49,420
And Scott McCloud gets at this in understanding comics Scott McCloud says, where taken individually,

00:02:49,420 --> 00:02:58,310
the pictures on the left are just pictures but when they become part of a sequence, even

00:02:58,310 --> 00:03:04,650
that sequence is only two, the art is of the image is transformed into the art of comics.

00:03:04,650 --> 00:03:09,049
He goes on to define what we talk about when we talk about comics.

00:03:09,049 --> 00:03:19,940
He says

00:03:19,940 --> 00:03:22,300
comics have been around for a very long time.

00:03:22,300 --> 00:03:25,750
In fact, they predate the Internet by centuries.

00:03:25,750 --> 00:03:41,439
Here's a comic from 32 centuries ago. -- and think other side of the world, archeologists

00:03:41,439 --> 00:03:47,920
have found ancient paintings in Mexico created 2700 years later organized similarly.

00:03:47,920 --> 00:03:52,909
Even though this isn't a modern comic, what we're looking at is still a story that goes

00:03:52,909 --> 00:03:58,480
on a deliberate chronological order where you start on the left and you go to the top

00:03:58,480 --> 00:03:59,480
right.

00:03:59,480 --> 00:04:04,129
There's no panel borders like we're used to, but there are clear divisions of scene.

00:04:04,129 --> 00:04:11,500
Now I have no idea when or where the first comic was created in history but the one mention

00:04:11,500 --> 00:04:17,840
that's a huge deal in the history of comics and sequential art is the invention of printing.

00:04:17,840 --> 00:04:23,580
Printing turned the art form that would be a diversion for the rich and powerful and

00:04:23,580 --> 00:04:26,980
allowed it to be enjoyed by anyone.

00:04:26,980 --> 00:04:34,820
So given the legacy of comics as a art form, how has the Internet changed our relationship

00:04:34,820 --> 00:04:41,080
to sequential art, and what it it mean for us to go from print comics to post-print comics

00:04:41,080 --> 00:04:43,440
in the digital age.

00:04:43,440 --> 00:04:49,880
For us at Bustle, one of the first steps that we took to comics is an made the story called

00:04:49,880 --> 00:04:59,570
Sunday Comics, which we produce once a week, sometimes they were told over a series of

00:04:59,570 --> 00:05:02,930
a few weeks, and sometimes they were just one offs.

00:05:02,930 --> 00:05:08,220
They were for fun to make, and some fun to watch.

00:05:08,220 --> 00:05:13,220
So we thought how do we take this further.

00:05:13,220 --> 00:05:18,450
And bring a similar experience to the web without making them difficult to produces.

00:05:18,450 --> 00:05:22,680
We didn't want to just adopt the shape of the previous technology of comics that we

00:05:22,680 --> 00:05:24,820
were already acquainted with.

00:05:24,820 --> 00:05:31,600
For example, you could just scan in an article and say you brought comics to the web.

00:05:31,600 --> 00:05:34,650
But to me, that was not very interesting.

00:05:34,650 --> 00:05:41,800
I wanted to bring a single unbroken reading line while taking advantage of all the things

00:05:41,800 --> 00:05:44,520
that the browser had to offer.

00:05:44,520 --> 00:05:49,870
I set out to create stories in the form of sequential art on an infinitive canvas along

00:05:49,870 --> 00:05:52,560
the y-axis.

00:05:52,560 --> 00:05:57,470
So this is the comic experience that we had in its final form.

00:05:57,470 --> 00:06:08,810
We wanted it to recontextualize the sequential art while emotionally engaging the audience.

00:06:08,810 --> 00:06:12,630
For example, notice that there's this interesting parallax effect where things that are closer

00:06:12,630 --> 00:06:16,400
scroll more quickly than things in the background.

00:06:16,400 --> 00:06:22,220
Everything is designed to take advantage of the beautiful Retina displays.

00:06:22,220 --> 00:06:25,750
And when you move your mouse, things move around with you and you can change your perspective

00:06:25,750 --> 00:06:31,440
from within the frame.

00:06:31,440 --> 00:06:35,830
It gets the viewer involved and you have to interact with it to see everything in its

00:06:35,830 --> 00:06:36,860
full glory.

00:06:36,860 --> 00:06:40,120
Sometimes you even have to move it around to see the text.

00:06:40,120 --> 00:06:44,310
If you're on a laptop or a phone, you can go to bustle.com/comics right now and check

00:06:44,310 --> 00:06:48,730
it out by yourself while I'm going through this.

00:06:48,730 --> 00:06:52,190
So how do we do this?

00:06:52,190 --> 00:06:58,600
And, of course, the answer is: The solution to most things on the web.

00:06:58,600 --> 00:06:59,960
I'm just kidding.

00:06:59,960 --> 00:07:02,979
There's zero React involved.

00:07:02,979 --> 00:07:04,720
[ Laughter ]

00:07:04,720 --> 00:07:08,190
It's SVGs.

00:07:08,190 --> 00:07:09,190
It's not on brand.

00:07:09,190 --> 00:07:10,370
React not on brand.

00:07:10,370 --> 00:07:11,370
Okay.

00:07:11,370 --> 00:07:16,310
So SVGs are a good tool to have and especially for storytelling because they're resolution

00:07:16,310 --> 00:07:20,380
independent, and so they're sharp on in display which means you don't have to do any image

00:07:20,380 --> 00:07:22,500
replacement for different resolutions.

00:07:22,500 --> 00:07:28,840
And, of course, they're easily scalable for responsive designs, to you don't have to produce

00:07:28,840 --> 00:07:33,080
a bunch of different asserts for different screens and they're super easy to animate,

00:07:33,080 --> 00:07:38,220
which makes them the most fun.

00:07:38,220 --> 00:07:42,800
The fact that SVG allows us to create these incredibly rich narratives is mind-blowing.

00:07:42,800 --> 00:07:47,930
They're truly one of the coolest things that you can play around with as a developer.

00:07:47,930 --> 00:07:50,280
So how is this built?

00:07:50,280 --> 00:07:55,840
The first step was to get the parallax working, and if you're thinking to yourself, why parallax,

00:07:55,840 --> 00:08:04,220
first of all, why not, and second of all, it creates a depth of scene and a sense of

00:08:04,220 --> 00:08:05,220
physicality.

00:08:05,220 --> 00:08:13,510
When police report, why not allow your visitors to visit your site on their own initiative.

00:08:13,510 --> 00:08:18,720
Instead of getting static images, you got a 3D presentation controlled by your own scrolling.

00:08:18,720 --> 00:08:23,960
If given the chance, why not use the opportunity to tell stories in an engaging and interactive

00:08:23,960 --> 00:08:25,660
way?

00:08:25,660 --> 00:08:33,320
In practice, instead of calculating in parallax movement in JavaScript, we challenged ourselves

00:08:33,320 --> 00:08:43,080
to do as much as in CSS as possible, shout out to CSSConf EU.

00:08:43,080 --> 00:08:53,100
So activate 3D space in an element that needs to be given, then enables 3D space for each

00:08:53,100 --> 00:08:54,100
tiled elements.

00:08:54,100 --> 00:08:58,560
So you define the height in the perspective style properties of the parent element and

00:08:58,560 --> 00:09:06,010
that would lock the perspective to its super creating a 3D viewport with a fixed origin.

00:09:06,010 --> 00:09:10,490
The scrolling speed of the parallax elements is achieved by applying the translate-z function

00:09:10,490 --> 00:09:15,940
to the transform-property of the child element, come places the elements along the z-axis

00:09:15,940 --> 00:09:20,010
by placing them farther away or closer to the user.

00:09:20,010 --> 00:09:25,760
After experimentation, we picked the maximum distance to be background layer.

00:09:25,760 --> 00:09:31,490
The maximum layer sits at that distance and we evenly distribute the remaining layers

00:09:31,490 --> 00:09:34,830
from background to foreground.

00:09:34,830 --> 00:09:39,750
And here's what it looks like Illustrator where there's seven years, and those layers

00:09:39,750 --> 00:09:49,590
are distributed evenly between the foreground and the background.

00:09:49,590 --> 00:09:54,240
Because we're using perspective to achieve the parallax movement effect, when we move

00:09:54,240 --> 00:09:59,450
things farther along the z-axis, they're narrowly going to get smaller, but illustrators have

00:09:59,450 --> 00:10:07,900
already drawn to scale to make this inappropriate, so we need to do a depth correction so that

00:10:07,900 --> 00:10:12,680
it answer to be rendered at its original size.

00:10:12,680 --> 00:10:19,370
On the left, we have the scale transform applied versus on the right there is no scale transform.

00:10:19,370 --> 00:10:24,280
The good news is that as things move farther away, they get smaller at a predictable rate

00:10:24,280 --> 00:10:28,940
so we can apply a scale transform to render it at its original size.

00:10:28,940 --> 00:10:33,281
This way we get the parallax effect of moving things along the z-axis without the size distortion.

00:10:33,281 --> 00:10:39,260
The advantage of this is we just set a few CSS properties and the browser takes care

00:10:39,260 --> 00:10:43,600
of everything else, and there's very minimal JavaScript required to set up the comic.

00:10:43,600 --> 00:10:47,940
So, again, this is how the scene will look, with and without depth correction.

00:10:47,940 --> 00:10:52,520
So on the right we can see what happens when we translate things on the z-axis without

00:10:52,520 --> 00:10:53,740
applying the scale.

00:10:53,740 --> 00:11:05,170
And on the right, is the depth correction with the depth correction with the scale applied.

00:11:05,170 --> 00:11:11,790
It also means that we're going to apply a larger scale factor to compensate.

00:11:11,790 --> 00:11:15,800
Now even though this seems like fun and games and browser support is generally excellent

00:11:15,800 --> 00:11:20,670
for SVGs, it's a whole other story when you apply CSS transforms to them.

00:11:20,670 --> 00:11:25,940
This is especially painful when it comes to animations because scale, position, and rotation,

00:11:25,940 --> 00:11:28,700
and skew are so fundamental.

00:11:28,700 --> 00:11:36,870
When you apply transforms to an element inside the SVG, their browser bugs and inconsistencies.

00:11:36,870 --> 00:11:41,460
This gif is from an excellent article in CSS Tricks can be which shows how the same animation

00:11:41,460 --> 00:11:43,450
looks on different browsers.

00:11:43,450 --> 00:11:52,530
IE and Opera, don't honor transforms at all on SVG elements, instead you must assign the

00:11:52,530 --> 00:11:53,950
attribute.

00:11:53,950 --> 00:11:59,510
We could use tools like animation platform, but what's the fun in using a third-party

00:11:59,510 --> 00:12:03,610
library instead of figuring out how to do it on your own.

00:12:03,610 --> 00:12:10,400
So our solution was to explore the SVG where each element becomes becomes an SVG on its

00:12:10,400 --> 00:12:17,760
own and this allows us to transform it reliably across all browsers.

00:12:17,760 --> 00:12:28,400
This is what the SVG looks like with six layers making up the scene on the right.

00:12:28,400 --> 00:12:33,010
And then on the left, we have that same SVG with each of those six layers exploded into

00:12:33,010 --> 00:12:36,810
their own SVG elements and they're all stacked on top of each other to make it look like

00:12:36,810 --> 00:12:42,640
the original.

00:12:42,640 --> 00:12:45,670
Another cool thing about these comics is the movement in them.

00:12:45,670 --> 00:12:49,090
As you move your mouse, or your phone, everything moves with you.

00:12:49,090 --> 00:12:52,810
The closer the layer it is to you, the more it moves, the farther away it is, it moves

00:12:52,810 --> 00:12:57,680
less and less, just like in the real world where things that are farther from us move

00:12:57,680 --> 00:12:59,200
farther away.

00:12:59,200 --> 00:13:04,220
These were one of the Sacramento that we wanted to add because we didn't want the designers

00:13:04,220 --> 00:13:08,300
to think about how to animate the movement and just have it done for them automatically

00:13:08,300 --> 00:13:10,061
based on the numbers of layers they use.

00:13:10,061 --> 00:13:17,310
What's good is that the effect gives you a sense of being in the scene.

00:13:17,310 --> 00:13:21,100
And as an anecdote, the designers started putting things in their illustrations where

00:13:21,100 --> 00:13:25,460
you have to interact with it to see what's going on in the whole story.

00:13:25,460 --> 00:13:30,370
So how did we manage to get the page to respond to the mouse and the gyroscope movements?

00:13:30,370 --> 00:13:36,150
With the help of our good friend from our math days, logarithm scale, which is a non-linear

00:13:36,150 --> 00:13:42,279
scale when there's a large range of quantities, earthquakes, for example, which is not unlike

00:13:42,279 --> 00:13:46,920
shaking your phone, or moving your mouse in the real world.

00:13:46,920 --> 00:13:53,661
So this is how it's like the mouse moving on a logarithmic scale that we actually used

00:13:53,661 --> 00:13:55,480
to transform each layer.

00:13:55,480 --> 00:14:03,339
And then you apply the shift to an event listener based on device orientation or mouse movement.

00:14:03,339 --> 00:14:08,900
As a visual example of how log scale works, as the mouse moves in the center, the layers

00:14:08,900 --> 00:14:13,240
move quite a bit but as you get closer to the edges of the browser, they move less and

00:14:13,240 --> 00:14:19,550
less because you don't want things to fly off the screen, again, just like in an earthquake.

00:14:19,550 --> 00:14:22,690
What's also cool is you have to move your mouse around to see what's in the mirror,

00:14:22,690 --> 00:14:28,380
or to see what's in the background behind in the window on the left.

00:14:28,380 --> 00:14:34,220
And an important goal of this project was to allow our designers to be productive in

00:14:34,220 --> 00:14:35,690
the tools they already know.

00:14:35,690 --> 00:14:44,380
One of the reasons for using SVGs is that our designers are -- Adobe Illustrator.

00:14:44,380 --> 00:14:48,820
One thing we could have done was spend half a year building an online comics editor but

00:14:48,820 --> 00:14:53,370
Adobe's already done for that by making a graphics editor and our designers already

00:14:53,370 --> 00:14:54,600
know how to use them.

00:14:54,600 --> 00:15:00,480
And one thing that's cool for me personally is even though they each have their constraints,

00:15:00,480 --> 00:15:05,860
they each have their process for design.

00:15:05,860 --> 00:15:13,540
Allison Gore starts with a loose plan, figures out how the panels are set up and relate to

00:15:13,540 --> 00:15:17,940
each other, and then moves on the Illustrator and deconstructs the layers to figure out

00:15:17,940 --> 00:15:19,530
how their interaction works.

00:15:19,530 --> 00:15:23,620
These are some examples of her work.

00:15:23,620 --> 00:15:29,110
It's cool to see the behind-the-scenes.

00:15:29,110 --> 00:15:34,190
Austin sometimes draws out his main characters in paper and then moves in to Illustrator

00:15:34,190 --> 00:15:36,330
to draw out the whole scene.

00:15:36,330 --> 00:15:41,800
An interesting thing about Austin's work is he uses a lot of color and I asked him about

00:15:41,800 --> 00:15:47,210
it, he says it's because he's from New Orleans and he group surrounded by beautiful colors.

00:15:47,210 --> 00:15:53,580
And since he moved to New York City, he myself how colorful things are, so he tries to remind

00:15:53,580 --> 00:15:55,740
himself of home and work.

00:15:55,740 --> 00:16:04,200
Allyssa tries to get forms on paper to list their most iconic moments.

00:16:04,200 --> 00:16:11,710
And she also draws out the scene and writes out lots of notes even before drawing the

00:16:11,710 --> 00:16:13,320
scene out in Illustrator.

00:16:13,320 --> 00:16:18,430
She draws lamps, and says, this is what the Netflix logo looks like, or this is what my

00:16:18,430 --> 00:16:20,660
table should look like.

00:16:20,660 --> 00:16:26,280
Allyssa also believes that you shouldn't draw everything out for the audience, and let them

00:16:26,280 --> 00:16:29,870
figure out things on your own.

00:16:29,870 --> 00:16:35,750
She thinks that minimalism goes a long way when it comes to comics.

00:16:35,750 --> 00:16:40,529
Don draws out some parts of the story and tries to make sense of the story before doing

00:16:40,529 --> 00:16:46,940
anything else and sometimes ends up working with the writer to change the story entirely

00:16:46,940 --> 00:16:51,850
based on her first impression of not making any sense.

00:16:51,850 --> 00:16:55,590
She tries to figure out the characters' emotions on details.

00:16:55,590 --> 00:17:00,740
She also feels like she's playing God when trying to figure out when the character in

00:17:00,740 --> 00:17:05,010
the background, or what does the color look like, or what the character looks like, or

00:17:05,010 --> 00:17:11,990
what their hair looks like.

00:17:11,990 --> 00:17:19,579
Bear likes to draw her characters with different emotions from different viewpoints whether

00:17:19,579 --> 00:17:21,209
she lays things out.

00:17:21,209 --> 00:17:27,130
It's been very rewarding to work on these things because for relatively little engineering

00:17:27,130 --> 00:17:32,480
work, we can help designers create these experiences that they've never made before and that our

00:17:32,480 --> 00:17:34,950
viewers have never seen before.

00:17:34,950 --> 00:17:41,770
And I'm personally a huge fan of the meeting the audience, your designers, and your collaborators,

00:17:41,770 --> 00:17:43,320
where they are today.

00:17:43,320 --> 00:17:46,740
And so the most important lesson that I want you to take away from this talk is meet your

00:17:46,740 --> 00:17:48,230
users where they are.

00:17:48,230 --> 00:17:53,740
I know we all have instincts to rewrite everything and create all these new tools but it's really,

00:17:53,740 --> 00:17:57,230
really important to think about how to leverage existing tools.

00:17:57,230 --> 00:18:01,110
And SVGs are a perfect example of that.

00:18:01,110 --> 00:18:03,330
You probably already work with designers.

00:18:03,330 --> 00:18:04,929
They already know Illustrator.

00:18:04,929 --> 00:18:09,920
What are some ideas that you have that if you were to get out of SVGs, what would you

00:18:09,920 --> 00:18:10,920
do?

00:18:10,920 --> 00:18:14,850
I showed you two examples here with interactive flowcharts and comics.

00:18:14,850 --> 00:18:18,740
Both of these have super simple rules that designers can follow.

00:18:18,740 --> 00:18:23,600
Figure out your layers, export to SVG, done.

00:18:23,600 --> 00:18:26,990
It's also to note that setting constraints is okay.

00:18:26,990 --> 00:18:30,940
Some of the designers were definitely a little hesitant about not having enough control over

00:18:30,940 --> 00:18:35,780
the animation, or the depth, or the movement, or wanting to be able to animate certain things

00:18:35,780 --> 00:18:37,160
differently.

00:18:37,160 --> 00:18:41,990
But the answer I always gave was the same as, I'm sure, some of you have given once

00:18:41,990 --> 00:18:43,800
or twice, PRs are welcome.

00:18:43,800 --> 00:18:50,830
But all joking aside, I think having constraints and having to work within limits creates more

00:18:50,830 --> 00:18:54,210
opportunity for creativity and innovation.

00:18:54,210 --> 00:18:59,760
The way they're using parallax to enhance the story in these two examples is mind blowing.

00:18:59,760 --> 00:19:08,530
And, again, it's been super rewarding being a part of it.

00:19:08,530 --> 00:19:12,670
So the question that I have for all of us is, what are some things that we can do by

00:19:12,670 --> 00:19:15,330
using Illustrator as a development tool almost?

00:19:15,330 --> 00:19:22,470
Or are there other file formats that people already can use to harness the power of JavaScript

00:19:22,470 --> 00:19:23,470
to enhance, and augment?

00:19:23,470 --> 00:19:24,470
Thank you.

00:19:24,470 --> 00:19:25,470
[ Applause ]

00:19:25,470 --> 00:19:26,470
Where's the party?

00:19:26,470 --> 00:19:27,470
Malte to the rescue!

00:19:27,470 --> 00:19:28,470
That was awesome.

00:19:28,470 --> 00:19:29,470
Mind blown!

00:19:29,470 --> 00:19:30,470
That was amazing.

00:19:30,470 --> 00:19:31,470
We're going to wait a little bit for a few minutes, again, to let other people from the

00:19:31,470 --> 00:19:32,470
other room to attend the talk from the very beginning but we have more coming up which

00:19:32,470 --> 00:19:33,470
is awesome.

00:19:33,470 --> 00:19:34,470
Thank you very much, Zahra, that was amazing.

00:19:34,470 --> 00:19:34,970

YouTube URL: https://www.youtube.com/watch?v=LXgmD6kGkmI


