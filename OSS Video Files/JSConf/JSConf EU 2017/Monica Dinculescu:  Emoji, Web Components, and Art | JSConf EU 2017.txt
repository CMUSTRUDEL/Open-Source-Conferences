Title: Monica Dinculescu:  Emoji, Web Components, and Art | JSConf EU 2017
Publication date: 2017-06-02
Playlist: JSConf EU 2017
Description: 
	http://2017.jsconf.eu/speakers/monica-dinculescu-emoji-web-components-and-art.html

Making art on the web is easy, if you got the right tools. HTML has styled divs. JavaScript has canvas. I have an emoji keyboard. But what if our tools were better, and making art was easier? What if there was a magical widget that transformed any word into emoji word art? Or an image into pixels, which you can then style with CSS? What if it was easy to build these tools, embed them on any sites, and give them out to people, so that they can make art? Spoilers: it is, and Iâ€™m going to tell you about it.
Captions: 
	00:00:29,400 --> 00:00:31,109
Did everyone get a brownie?

00:00:31,109 --> 00:00:33,520
They're awesome brownies.

00:00:33,520 --> 00:00:37,360
You might sugar crash a little bit but they're definitely worth it.

00:00:37,360 --> 00:00:40,120
I definitely recommend it if you have haven't gotten one.

00:00:40,120 --> 00:00:50,870
So continuing our awesome ladies' block here at the Side Track, we have Monica who is from

00:00:50,870 --> 00:00:57,650
San Francisco, and she can be best described as screaming-cat-face-tada emoji.

00:00:57,650 --> 00:01:01,070
So please welcome Monica.

00:01:01,070 --> 00:01:12,370
Aw, man, I didn't realize that this was the women's block, but I'm super excited to talk

00:01:12,370 --> 00:01:25,580
today because the only thing that would make this talk more would be cats.

00:01:25,580 --> 00:01:27,470
So here's a little tiny one.

00:01:27,470 --> 00:01:34,150
Hi, everyone, I'm Monica, and I'm notwaldorf on GitHub, and I work with Polymer and I'll

00:01:34,150 --> 00:01:41,690
talk about that later because now I'm going to talk about art.

00:01:41,690 --> 00:01:46,610
So before I became a developer, I was convinced that I would become an architect because all

00:01:46,610 --> 00:01:53,070
of my life, I drew ammunition and I painted things and I really liked making art.

00:01:53,070 --> 00:02:03,729
But it turns out that art is kind of hard.

00:02:03,729 --> 00:02:08,659
My kitchen is now covered in, like, tiny little pots because I can't make, like, cups that

00:02:08,659 --> 00:02:10,530
are human sized yet because I don't know how.

00:02:10,530 --> 00:02:12,510
So I just have cups for dolls right now.

00:02:12,510 --> 00:02:16,120
And so art is really hard.

00:02:16,120 --> 00:02:29,390
And even if you're a really talented painter like van Gogh, even if you're naturally talented.

00:02:29,390 --> 00:02:35,440
When -- you start having different problems like my composition is off, my colors are

00:02:35,440 --> 00:02:36,440
off.

00:02:36,440 --> 00:02:38,410
It doesn't express the thing that I really want.

00:02:38,410 --> 00:02:45,790
This time at Christmas, like, 15 years ago, I came home and my mom was, like, oh, I gotta

00:02:45,790 --> 00:02:51,760
show you this thing that I discovered and she shows me this amazing painting of a landscape,

00:02:51,760 --> 00:02:57,549
or a street in Paris, I don't remember.

00:02:57,549 --> 00:02:58,810
Not a talented person.

00:02:58,810 --> 00:02:59,999
She's not an artistic person.

00:02:59,999 --> 00:03:00,999
She can draw.

00:03:00,999 --> 00:03:03,250
And I said, how have you managed to produce this?

00:03:03,250 --> 00:03:05,310
And as it turns out, it was a paint by numbers.

00:03:05,310 --> 00:03:10,670
And that's what I realized was that people really enjoy making art, even if they're not

00:03:10,670 --> 00:03:12,989
good at it if you give them the right tools.

00:03:12,989 --> 00:03:16,739
So in this case, paint by numbers is really good if you're not talented.

00:03:16,739 --> 00:03:22,689
It restricts the problem to something really small and in the end you get this awesome

00:03:22,689 --> 00:03:26,489
thing that looks pretty and then you get to show it to people.

00:03:26,489 --> 00:03:27,489
Because art is fun.

00:03:27,489 --> 00:03:32,050
You get to make things, you get to spend a little bit of time and produce something.

00:03:32,050 --> 00:03:33,349
And sharing art is really fun.

00:03:33,349 --> 00:03:37,419
She didn't, like, make this painting and, like, hide it away in the basement.

00:03:37,419 --> 00:03:40,769
She showed it to me and said, look at this thing I made I'm awesome.

00:03:40,769 --> 00:03:42,299
I'm van Gogh.

00:03:42,299 --> 00:03:43,459
She's not.

00:03:43,459 --> 00:03:49,159
And we know sharing art is fun because who here has -- raise your hand if you've never

00:03:49,159 --> 00:03:52,430
taken a photo and put it on the Internet.

00:03:52,430 --> 00:03:57,209
Yeah, nobody -- everybody takes photos and you put them on the Internet so all your friends

00:03:57,209 --> 00:03:58,209
see them.

00:03:58,209 --> 00:04:01,659
There's a whole industry of apps that put filters on your Instagram photos so that they're

00:04:01,659 --> 00:04:02,779
pretty and artsy.

00:04:02,780 --> 00:04:07,220
Last year, this, like, app came out that was called Prisma, and it made everything look

00:04:07,220 --> 00:04:10,020
like a painting and it was super popular for three weeks.

00:04:10,020 --> 00:04:15,860
Because we like making shit and saying, look at what I made, look at my artistic talent.

00:04:15,860 --> 00:04:20,030
And do you know what's good about sharing?

00:04:20,030 --> 00:04:24,190
All of these things are on the web on this fantastic cloud we have, we don't print them

00:04:24,190 --> 00:04:28,300
out and give them to people anymore, we put them on the website.

00:04:28,300 --> 00:04:36,050
So I'm going to show you some things that I've put on the web.

00:04:36,050 --> 00:04:38,940
So the first thing one is something called Octopus Holdings.

00:04:38,940 --> 00:04:44,990
So John and I'm going to butcher his last name, Hergenrother, basically made this thing

00:04:44,990 --> 00:04:53,900
where you could represent words in an URL, so this is cat using a necktie with pants

00:04:53,900 --> 00:05:01,650
on an elephants and it's really easy to share because you can show people what you made.

00:05:01,650 --> 00:05:08,470
And it's very easy to understand because the problem of you making art is very simple.

00:05:08,470 --> 00:05:10,830
You can only, like, use emoji and it's really amazing.

00:05:10,830 --> 00:05:15,259
It's kind of fun, you get to make fun things.

00:05:15,259 --> 00:05:18,340
The reason that it's called An Octopus Holdings is because if you don't make anything, it's,

00:05:18,340 --> 00:05:20,639
like, an octopus holding a trophy.

00:05:20,639 --> 00:05:22,770
It's awesome.

00:05:22,770 --> 00:05:39,169
Jen Schiffer made think project, pixels are easier, there's fewer of them.

00:05:39,169 --> 00:05:41,570
You can increase the resolution.

00:05:41,570 --> 00:05:45,449
The colors are more limited and you get to, like -- this is my attempt to draw a cat and

00:05:45,449 --> 00:05:46,960
it's terrible.

00:05:46,960 --> 00:05:50,180
But the reason why I know it's really fun and people really like it, and, again, people

00:05:50,180 --> 00:05:54,931
really like sharing this art, is that a lot of people will tweet at her and say, look

00:05:54,931 --> 00:05:59,639
at this thing, I've made a Make Art to work on a game for a kid who's six.

00:05:59,639 --> 00:06:07,970
And this is amazing, we're, like, exposing kids to making art with code and technology

00:06:07,970 --> 00:06:09,970
early on, which is kind of awesome.

00:06:09,970 --> 00:06:19,169
On a similar vein, my friend Wan made this Mega Emoji, where instead of drawing with

00:06:19,169 --> 00:06:22,120
art, you do it with emoji.

00:06:22,120 --> 00:06:25,340
So that takes another real world thing like tracing.

00:06:25,340 --> 00:06:30,020
Sometimes you'll trace it on a piece of paper.

00:06:30,020 --> 00:06:31,270
So this is a lot like that.

00:06:31,270 --> 00:06:35,650
I had a really bad day once, so I spent an hour making dumb shit.

00:06:35,650 --> 00:06:39,740
This is a cat that I've made out of emojis using Mega Emoji and it was really fun because

00:06:39,740 --> 00:06:44,800
it was really simple and I just traced the cat emoji.

00:06:44,800 --> 00:06:49,599
And now and, like, it all circles out, I started out with emojis, and then the drawing, and

00:06:49,599 --> 00:06:50,729
then back to emoji.

00:06:50,729 --> 00:06:57,040
This is Emojibrush that Sam Sico made, and it's literally a canvas and you draw with

00:06:57,040 --> 00:06:59,620
emojis and that's all you do.

00:06:59,620 --> 00:07:03,479
And people use it to make dumb things with it.

00:07:03,479 --> 00:07:12,379
I think Kia, she's @LadyLead on Twitter.

00:07:12,379 --> 00:07:15,729
And she would say, I made your Twitter on Emoji Brush.

00:07:15,729 --> 00:07:22,689
And this is really fun because it's a really easy and, like, a joyful project to do.

00:07:22,689 --> 00:07:28,389
And the reason I'm telling you all of this because I think we're really good at making

00:07:28,389 --> 00:07:31,800
art more accessible and more friendly by giving them better brushes.

00:07:31,800 --> 00:07:34,319
We've, like, learned this over the years.

00:07:34,319 --> 00:07:38,680
We have color by numbers, we have tracing, we have all these other apps that make it

00:07:38,680 --> 00:07:41,330
really easy for you create things.

00:07:41,330 --> 00:07:45,500
And so if you believe me that's true, I think the same thing is true for the web, the web

00:07:45,500 --> 00:07:50,020
can be more accessible, and fun, and by that I mean, making things on the web can be more

00:07:50,020 --> 00:07:55,659
accessible and fun if you give them better brushes because the same argument can be made

00:07:55,659 --> 00:07:58,229
for both things.

00:07:58,229 --> 00:08:02,389
And by better brushes, it's like making a better div because I like the div because

00:08:02,389 --> 00:08:08,590
it's like the pen and pencil, you still have to learn how to hold the div, and vertically

00:08:08,590 --> 00:08:14,770
size it, and how to center it, and all sorts of things like that.

00:08:14,770 --> 00:08:18,720
So the web is really good at semantics.

00:08:18,720 --> 00:08:24,180
And in HTML 5, we've got awesome things like header, and nav, and article that tell you

00:08:24,180 --> 00:08:25,180
what those elements do.

00:08:25,180 --> 00:08:26,680
They don't look any different.

00:08:26,680 --> 00:08:31,449
They just look like, you know, divs of text but at least they tell what they're supposed

00:08:31,449 --> 00:08:32,449
to do.

00:08:32,449 --> 00:08:35,219
So if you put a header, that should probably be at the top, and the article somewhere in

00:08:35,219 --> 00:08:40,210
the middle, and then the footer at the bottom, and the future you is going to read this page.

00:08:40,210 --> 00:08:46,529
It would be much easier if you had a pile of divs where hopefully you put a class="header"

00:08:46,529 --> 00:08:50,940
somewhere so that you knew that I meant to put this at the top.

00:08:50,940 --> 00:08:55,860
The other thing that the web is really good at is encapsulation and this is one of my

00:08:55,860 --> 00:08:57,680
favorite things about the web.

00:08:57,680 --> 00:09:02,310
So there are, like, these magical elements in the browser that do magical things, like

00:09:02,310 --> 00:09:08,040
video, or input, like input has 21 different types and you can do color picking and input

00:09:08,040 --> 00:09:12,430
different files but you don't have to wonder how they're implemented, they just come to

00:09:12,430 --> 00:09:17,200
you and you're like, sweet, this is amazing.

00:09:17,200 --> 00:09:28,440
But if you peek inside of them, if you go on Chrome, and you look at enableShadow Roots,

00:09:28,440 --> 00:09:32,240
if you look at, it's a content-editable div, that's pretty cool.

00:09:32,240 --> 00:09:39,570
There's one that lets you put a number on it, a number flicker that goes up and down,

00:09:39,570 --> 00:09:42,550
it's already more complicated.

00:09:42,550 --> 00:09:57,100
It has some pseudos in it that can be, like, a bridge that's like, I

00:09:57,100 --> 00:10:02,580
really need to style this spin button and the reason why this is important because these

00:10:02,580 --> 00:10:06,270
divs and these styles don't go outside of the input element.

00:10:06,270 --> 00:10:09,750
That's why you can't reach and style everything in it.

00:10:09,750 --> 00:10:12,930
You can only style things that, like, that element really wants you to style.

00:10:12,930 --> 00:10:14,650
And that's why encapsulation is awesome.

00:10:14,650 --> 00:10:20,120
So something like a video element is actually ginormous and terrifying.

00:10:20,120 --> 00:10:24,980
It's got, like, ranges and buttons, and a shit ton of divs and yeah.

00:10:24,980 --> 00:10:29,000
So cool, encapsulation is really awesome.

00:10:29,000 --> 00:10:32,430
So if semantics are awesome and encapsulation are awesome, that means that we can, like,

00:10:32,430 --> 00:10:35,890
keep waiting and it's going to give us something like a Emoji Brush, it's semantic expressive,

00:10:35,890 --> 00:10:42,000
and it's emoji, and it's impressive because it's impressive how God knows how Sam implemented

00:10:42,000 --> 00:10:43,530
this.

00:10:43,530 --> 00:10:51,930
But we can't just put an emoji brush in Chrome, that's not a thing that we can do.

00:10:51,930 --> 00:10:53,680
But that's why I like web components.

00:10:53,680 --> 00:11:00,910
It takes semantics and ability that the browser already has and giving it to you as developers

00:11:00,910 --> 00:11:02,760
so that you can use them yourselves.

00:11:02,760 --> 00:11:08,870
And the components are not special by themselves.

00:11:08,870 --> 00:11:14,230
The reason why web components are really awesome is they're web agnostic.

00:11:14,230 --> 00:11:21,570
And you can use it in an React dev, or use it in Ember because Thomas is sitting right

00:11:21,570 --> 00:11:25,230
there and I have to mention Ember.

00:11:25,230 --> 00:11:27,980
And they're really awesome because they interop with everything.

00:11:27,980 --> 00:11:29,850
Because they're browser language.

00:11:29,850 --> 00:11:35,560
Anywhere you can use an input, you can use this and that's awesome.

00:11:35,560 --> 00:11:37,589
And that's what I work on.

00:11:37,589 --> 00:11:43,320
But let's talk about art again as we were already talking about.

00:11:43,320 --> 00:11:45,180
So we make art with brushes.

00:11:45,180 --> 00:11:49,940
We, like, paint on things, we, like, trace things and we make apps with components and

00:11:49,940 --> 00:11:53,940
better our brushes are, the better our art is, or the easier our art is.

00:11:53,940 --> 00:11:59,470
So the better our components are, the easier our apps are going to be able to built, too.

00:11:59,470 --> 00:12:04,380
So I just wanted to show you, I built this really dumb app called emojillate.

00:12:04,380 --> 00:12:12,620
And basically it takes an image and pixelates it, and replaces every pixel with an emoji

00:12:12,620 --> 00:12:19,821
and you can change the resolution so it has more emoji, less emoji, and you can copy and

00:12:19,821 --> 00:12:25,040
paste it, and send it to all of your friends manipulated to tell you how I built this out

00:12:25,040 --> 00:12:28,450
of web components because I thought that was kind of fun.

00:12:28,450 --> 00:12:34,760
So if you looked at this enormous app, we have an input type="file," which is kind of

00:12:34,760 --> 00:12:42,620
an OG web component so that's cool and then we also have a paper slider.

00:12:42,620 --> 00:12:47,140
So this is an element that my team works on, and paper is code word for material design

00:12:47,140 --> 00:12:48,140
at Google.

00:12:48,140 --> 00:12:51,440
It was a terrible naming choice that now stuck forever.

00:12:51,440 --> 00:12:56,530
But that's a fancier slider because if you ever try to style a native input type="range"

00:12:56,530 --> 00:13:02,100
it's, like, 150 lines of CSS and pseudo-elements.

00:13:02,100 --> 00:13:07,180
That's fancier slider and it looks pretty.

00:13:07,180 --> 00:13:10,790
And in the middle, I have this giant emojillate element.

00:13:10,790 --> 00:13:15,770
And it basically collects things from the files.

00:13:15,770 --> 00:13:19,310
So it collects, like, the file contents and then it collects things from the configuration.

00:13:19,310 --> 00:13:24,220
So, like, the number of pixels on either side and stuff like that, and every time it gets

00:13:24,220 --> 00:13:25,220
changed, it gets updated.

00:13:25,220 --> 00:13:30,740
And the reason why this is important is because these changes are really easy if you've got,

00:13:30,740 --> 00:13:34,670
like, a data-binding sort of system and that's where Polymer comes into play because I told

00:13:34,670 --> 00:13:35,670
you that I worked on Polymer.

00:13:35,670 --> 00:13:38,620
So Polymer is kind of like jQuery.

00:13:38,620 --> 00:13:43,080
I'm trying to, like, pitch this sentence about it.

00:13:43,080 --> 00:13:47,110
So I think Polymer is kind of like jQuery for web components not in the sense that,

00:13:47,110 --> 00:13:50,240
like, you don't need it anymore and everybody hates it, and includes, like, seven versions

00:13:50,240 --> 00:13:57,220
of it on their site but in the sense that it sugars the DOM and makes DOM interactions

00:13:57,220 --> 00:14:01,520
a bit easier while waiting for the DOM to actually get a bit better because 15 years

00:14:01,520 --> 00:14:06,830
ago, or 12 years ago I didn't write C++, writing jQuery.

00:14:06,830 --> 00:14:16,730
But writing child nodes and manipulating child nodes and working on the DOM was kind of a

00:14:16,730 --> 00:14:17,730
pain.

00:14:17,730 --> 00:14:22,802
Well, Polymer now, web components are kind of new and I secretly hope one day that we're

00:14:22,802 --> 00:14:29,620
going to get native data binding on the web, and I keep trying to pitch this to the link

00:14:29,620 --> 00:14:30,620
team.

00:14:30,620 --> 00:14:33,500
But the way that data binding works is if you look at this emojillate element in the

00:14:33,500 --> 00:14:39,550
middle, it has a file, and a file contents, or whatever, and then of a an input type="file"

00:14:39,550 --> 00:14:47,110
at the top and we're pretending that the API is actually sane and it does which you want,

00:14:47,110 --> 00:14:48,480
which it doesn't.

00:14:48,480 --> 00:14:55,270
But if you had some file like containDataBlob, then you could change it magically and say,

00:14:55,270 --> 00:14:58,770
whenever this thing changes, teleport it over here.

00:14:58,770 --> 00:15:04,900
The reason why this is a lie is you need a JavaScript to respond to that input type="file"

00:15:04,900 --> 00:15:08,870
but, you know, it's nice in our dreams.

00:15:08,870 --> 00:15:10,440
The resolution is nice, too.

00:15:10,440 --> 00:15:15,500
So whenever move that slider and its value changes, then the resolution changes and you

00:15:15,500 --> 00:15:16,500
can put in a custom element.

00:15:16,500 --> 00:15:18,610
And at this point I haven't written any JavaScript.

00:15:18,610 --> 00:15:23,940
I've just written HTML and used data bindings because Polymer have sugared it for me.

00:15:23,940 --> 00:15:29,460
And I put in a checkbox because one of the things that emojillate can do is help you

00:15:29,460 --> 00:15:35,590
slow or hide the background image to make it bit prettier.

00:15:35,590 --> 00:15:38,460
So this emojillate element isn't really that weird.

00:15:38,460 --> 00:15:42,530
I wanted to show you that it's, like, platformy, and not, like, this weird code that you're

00:15:42,530 --> 00:15:43,560
not familiar with.

00:15:43,560 --> 00:15:46,470
There are two parts of defining a web component.

00:15:46,470 --> 00:15:51,390
You have so sort of provide prototypes, write a class that says what that element does and

00:15:51,390 --> 00:15:55,290
then you have to tell the browser to associate a particular element with that prototype.

00:15:55,290 --> 00:15:59,380
So that class is just a normal class that extends an HTML element and then the second

00:15:59,380 --> 00:16:07,960
part of it is saying, hey, browser, whenever you see emojillate on an element, put it over

00:16:07,960 --> 00:16:08,960
there.

00:16:08,960 --> 00:16:13,730
And Polymer 2 is something that we're announcing at IO.

00:16:13,730 --> 00:16:19,450
Polymer is an extension, it extends an HTML element, so basically it takes whatever you

00:16:19,450 --> 00:16:24,130
would normally do and then adds some sugar to it.

00:16:24,130 --> 00:16:28,350
And then it wraps it all nicely in what we call a taco because what I really like to

00:16:28,350 --> 00:16:33,430
do is write my HTML in HTML, and my CSS in CSS, and not JavaScript, I'm sorry.

00:16:33,430 --> 00:16:38,100
And so one of the things that we can do in Polymer is actually provide what this element

00:16:38,100 --> 00:16:39,960
looks like in html.

00:16:39,960 --> 00:16:44,271
So this element has a hidden canvas where I'm rendering this pixelated image and it

00:16:44,271 --> 00:16:53,050
has a hidden image where I've loaded the file that you've given me and the code isn't really

00:16:53,050 --> 00:16:54,050
hard.

00:16:54,050 --> 00:16:55,050
I have a properties block.

00:16:55,050 --> 00:16:59,440
I have some properties that this element cares about like that file in resolution, and that

00:16:59,440 --> 00:17:03,780
checkbox where I was binding and then I have, like, JavaScript functions and then whenever

00:17:03,780 --> 00:17:07,760
that resolution changes, I can just call an observer and then it calls it for me.

00:17:07,760 --> 00:17:09,360
Now, this isn't very hard.

00:17:09,360 --> 00:17:14,689
You could write this in vanilla JavaScript, it's just a getter and a setter for a thing

00:17:14,689 --> 00:17:16,120
called resolution.

00:17:16,120 --> 00:17:20,079
But you don't need to write it, you don't have to write it, so that's why Polymer does

00:17:20,079 --> 00:17:21,620
it for you.

00:17:21,620 --> 00:17:24,610
It does all the heavy lifting for you.

00:17:24,610 --> 00:17:25,929
That's all the code I'm going to show you.

00:17:25,929 --> 00:17:27,870
So let's talk about art again.

00:17:27,870 --> 00:17:31,210
How does emojillate actually work.

00:17:31,210 --> 00:17:35,610
So it pixelates and adds emojis to it, and that's why we have this dumb name but the

00:17:35,610 --> 00:17:39,720
really interesting question was should it use a canvas and should it use a span?

00:17:39,720 --> 00:17:43,490
They're both going to look the same in the end but I really wanted to use the span because

00:17:43,490 --> 00:17:45,410
we're going back to this idea of sharing art.

00:17:45,410 --> 00:17:49,960
I want people to be able to share these dumb productions that you make with emojillate

00:17:49,960 --> 00:17:55,970
and then if you share, you can copy and paste it, and send it on Slack to all of your friends,

00:17:55,970 --> 00:18:00,040
and everyone is going to be happy because all your history is going to be blown forever

00:18:00,040 --> 00:18:01,900
and ever.

00:18:01,900 --> 00:18:10,600
My team's name was Voltron, and I think Sarah Edo said this recently that every project,

00:18:10,600 --> 00:18:17,800
and every team has named at some point Voltron, and it's usually an awful combination of things

00:18:17,800 --> 00:18:19,140
being glued together.

00:18:19,140 --> 00:18:21,910
That's my team.

00:18:21,910 --> 00:18:23,400
So how do we actually emojillate?

00:18:23,400 --> 00:18:25,330
How does it actually work?

00:18:25,330 --> 00:18:29,880
First thing we do is you load your file and I put into a hidden image.

00:18:29,880 --> 00:18:34,360
And this is the image that I'm using, it's got lemons.

00:18:34,360 --> 00:18:41,490
And then each to find the ratio of the canvas so that your image isn't super wobbly.

00:18:41,490 --> 00:18:49,030
So I'm going to widen the canvas and then I'm going to pixelate it.

00:18:49,030 --> 00:18:57,030
It's like something that we take a tiny image and you stretch it out, and it looks like

00:18:57,030 --> 00:18:58,330
an enormous potato.

00:18:58,330 --> 00:18:59,940
So that's how we pixelate.

00:18:59,940 --> 00:19:04,280
So you take an image and bam, pixels.

00:19:04,280 --> 00:19:10,630
Now, if I wanted to pixelate it, I could stop here, but we want to put an emoji on it.

00:19:10,630 --> 00:19:17,170
So I'm going to divide this into a resolution sort of grid because here it's eight chunks

00:19:17,170 --> 00:19:24,690
that I want to split across and for each of these chunks, the canvas API gives you an

00:19:24,690 --> 00:19:32,960
array of every pixel in this file, so all you have to do is go through a subarray of

00:19:32,960 --> 00:19:36,840
the pixels and then pick a color.

00:19:36,840 --> 00:19:40,560
So I would just pick a color that's closest to the emoji in that blob.

00:19:40,560 --> 00:19:47,070
And here I've done very bad things to the RGB and assumed it's linear -- it's not.

00:19:47,070 --> 00:19:50,970
So I'm just taking a linear distance -- it's not correct.

00:19:50,970 --> 00:19:51,970
It's kind of correct.

00:19:51,970 --> 00:19:54,860
It's probably not the best emoji for that but I don't care, it's art.

00:19:54,860 --> 00:19:56,530
I can get away with this.

00:19:56,530 --> 00:20:02,030
So every single blob for this, I keep doing this and put the spans if the output.

00:20:02,030 --> 00:20:12,340
So in the end, you get a giant pile of spans that contain the emoji that are assorted that

00:20:12,340 --> 00:20:20,640
the colors in that image it's going to be warped because Slack doesn't use monospaced

00:20:20,640 --> 00:20:21,720
fonts.

00:20:21,720 --> 00:20:25,530
So it's like work lemons but it's fine because we've made and you're trying to share that

00:20:25,530 --> 00:20:30,980
with your friends which is exactly what you're trying to do in the first place.

00:20:30,980 --> 00:20:37,240
So all of that was made with web components and because you can make web components you

00:20:37,240 --> 00:20:43,000
should make like more awesome artsy web components like a WordArt component from, like, Windows

00:20:43,000 --> 00:20:57,460
95, or Windows 97, I don't remember which of them, you have, like, a foreground emoji

00:20:57,460 --> 00:21:00,040
and a background emoji and it says why your text.

00:21:00,040 --> 00:21:02,530
Good news, my coworker implemented this.

00:21:02,530 --> 00:21:08,091
So this is a custom element that I've made called an emoji picturing and you put your

00:21:08,091 --> 00:21:12,240
emoji and text, and you make awesome things.

00:21:12,240 --> 00:21:17,430
And because it's a web component, it's semantically expressive, and it was called Emoji Art, and

00:21:17,430 --> 00:21:23,120
it's doing what it's supposed to do, and you don't need to know how it works because it's

00:21:23,120 --> 00:21:24,510
scary.

00:21:24,510 --> 00:21:31,910
So I want you to think of web components as apps because that's what they are but in particular

00:21:31,910 --> 00:21:36,910
I want you to think of them as tools to make art and share art on the Internet because

00:21:36,910 --> 00:21:38,720
that's what I really care about.

00:21:38,720 --> 00:21:43,220
So do things, share things, tell people how to pixelate their face and put an emoji on

00:21:43,220 --> 00:21:44,220
it.

00:21:44,220 --> 00:21:44,720

YouTube URL: https://www.youtube.com/watch?v=_H1s9wBOqp8


