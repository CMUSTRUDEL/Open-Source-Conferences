Title: Steve Kinney: Bringing Back the 1990s: The Revenge of JavaScript Style Sheets | JSConf EU 2017
Publication date: 2017-06-12
Playlist: JSConf EU 2017
Description: 
	http://2017.jsconf.eu/speakers/steve-kinney-bringing-back-the-1990s-the-revenge-of-javascript-style-sheets.html

JavaScript Style Sheets (JSSS) was a technology introduced by Netscape in 1996. Chances are, you’ve never heard of JSSS, since it was available in Netscape Communicator 4.0. They allowed you to define custom styling rules for your web pages. You’re probably more familiar with its competitor at the time—CSS. They were pretty cool though. JSSS allowed the developer to style the DOM using a full programming language with variables, conditionals, and functions.

The obvious spoiler alert here is that CSS won and JSSS lost, right? It’s not that simple. A lot of the ideas from JSSS have slowly been creeping back into our toolset. SASS brought programming logic back into styling our applications. CSS picked up variables and the ability to do calculations. Finally, the React community has been—maybe unknowingly—bringing JSSS back from the dead. In this talk, we’ll take a good hard look at JSSS and the ways in which JSSS has had enduring legacy after its untimely demise.
Captions: 
	00:00:41,020 --> 00:00:42,020
STEVE: Hello.

00:00:42,020 --> 00:00:43,040
We're going to talk about three very important things as signified by this very important-looking

00:00:43,040 --> 00:00:44,120
slide: the 1990s, JavaScript, and style sheets.

00:00:44,120 --> 00:00:47,150
As if that wasn't totally clear.

00:00:47,150 --> 00:00:49,280
My name is Steve Kinney.

00:00:49,280 --> 00:00:56,010
I have this very unique Twitter handle, where you can hear me complain about the current

00:00:56,010 --> 00:00:59,470
members of Blink 182.

00:00:59,470 --> 00:01:13,280
If you want to come visit Colorado this summer, and see Tom and see Monica, a bunch of people

00:01:13,280 --> 00:01:21,670
you saw this weekend, see them again, we will have the encore presentation in Denver on

00:01:21,670 --> 00:01:24,510
15 and 6 June.

00:01:24,510 --> 00:01:29,140
Talking about teaching or learning or that kind of stuff, please come and find me afterwards.

00:01:29,140 --> 00:01:34,370
Right now, I'm a certain front end engineer at SendGrid.

00:01:34,370 --> 00:01:46,799
If you ever got a receipt from Uber - I work on the marketing emails client which

00:01:46,799 --> 00:01:52,950
means I take arbitrary user mark-up in CSS and then try to create a drag-and-drop editor

00:01:52,950 --> 00:01:57,020
and then try to make something that works in L2007.

00:01:57,020 --> 00:02:01,380
It is a wonderful platform.

00:02:01,380 --> 00:02:08,160
If you thought IE6 was rough, outlook said outlook, hold my beer.

00:02:08,160 --> 00:02:11,260
It uses Word's rendering engine.

00:02:11,260 --> 00:02:16,220
If you want to talk about conditional tags and table-based layouts, come and talk to

00:02:16,220 --> 00:02:17,670
me after this.

00:02:17,670 --> 00:02:21,130
I worked on a book called Electron in Action.

00:02:21,130 --> 00:02:27,950
Our story starts today in the year 1996.

00:02:27,950 --> 00:02:36,090
The best part about doing a slight check from the 1990s is you can use the animations you

00:02:36,090 --> 00:02:41,450
never thought possible and taste goes out.

00:02:41,450 --> 00:02:46,629
Let's remember what it was like in 1996.

00:02:46,629 --> 00:02:52,510
The popular cellphone at the time did not have a head phone Jack.

00:02:52,510 --> 00:02:56,010
We walked around with digital pets.

00:02:56,010 --> 00:02:59,930
We neglected the digital pets.

00:02:59,930 --> 00:03:09,230
We cloned a sheep and the Beatles.

00:03:09,230 --> 00:03:10,319
And this happened.

00:03:10,319 --> 00:03:18,490
Rachel gave us a taste yesterday of some of the wonderment that was the web in the 1990s

00:03:18,490 --> 00:03:20,720
from a very cultural standpoint.

00:03:20,720 --> 00:03:32,260
I myself was a web developer at age 12 and made a website of Mortal Combat cheap codes.

00:03:32,260 --> 00:03:36,920
I had a bunch of animated gifs for no reason.

00:03:36,920 --> 00:03:38,459
Little to no concern for accessibility.

00:03:38,459 --> 00:03:44,159
It took about three minutes to download the assets and played a music file without the

00:03:44,159 --> 00:03:55,730
user's content - like the web pages in 2017!

00:03:55,730 --> 00:04:01,900
I did find this Doom website which is pretty much my aesthetic at the time.

00:04:01,900 --> 00:04:11,129
Just imagine everything Doom-like with the same background, divider bar, everything along

00:04:11,129 --> 00:04:13,340
those lines.

00:04:13,340 --> 00:04:18,940
So mother just - some other other websites at the time on geocities that you could find

00:04:18,940 --> 00:04:24,619
- yes, Bobby, you do!

00:04:24,619 --> 00:04:29,300
It had a midi file which was great.

00:04:29,300 --> 00:04:31,069
I.

00:04:31,069 --> 00:04:39,259
The way you made websites was you took your styles and inlined them with style tags.

00:04:39,259 --> 00:04:45,119
You kept going as you went at every subsequent tag if the background colour needed to change.

00:04:45,119 --> 00:04:51,819
If we wanted to have a marquee with a different background colour, you could do that.

00:04:51,819 --> 00:04:54,800
You laugh at the marquee tag.

00:04:54,800 --> 00:04:58,699
This is what I write in my job now which is table-based layouts.

00:04:58,699 --> 00:05:04,080
I still live in this world, and I know it very well.

00:05:04,080 --> 00:05:07,219
This is not a retrospective for me, it is like my day to day.

00:05:07,219 --> 00:05:09,069
You laugh at the marquee magazine.

00:05:09,069 --> 00:05:11,550
It still works in Chrome today.

00:05:11,550 --> 00:05:17,440
It can be used, if that is the designer aesthetic that you're going for.

00:05:17,440 --> 00:05:18,669
The page got on a web ring.

00:05:18,669 --> 00:05:19,759
That was great.

00:05:19,759 --> 00:05:28,039
I got listed on a sub directory on Yahoo and you might say a web ring, who needs more than

00:05:28,039 --> 00:05:33,710
one mortal code cheat code website?

00:05:33,710 --> 00:05:37,180
I was 12.

00:05:37,180 --> 00:05:40,189
Try to stay on topic and focus.

00:05:40,189 --> 00:05:46,990
Keep that in mind next time you might want to write a think piece about JavaScript fatigue!

00:05:46,990 --> 00:05:54,139
So the hit counter hit 100, which is very impressive considering that I was paying by

00:05:54,139 --> 00:06:00,139
minute so it was time for a redesign.

00:06:00,139 --> 00:06:07,520
Going through and updating the tags can pest be described in this stock photograph.

00:06:07,520 --> 00:06:10,610
To give you a sense for those who didn't have to update a page from the 1990s, it was like

00:06:10,610 --> 00:06:14,559
migrating from one version of Angular to the next!

00:06:14,559 --> 00:06:20,569
Luckily, there were frames so you had isolated components that you could cash with their

00:06:20,569 --> 00:06:21,569
own style.

00:06:21,569 --> 00:06:28,110
Again, you laugh but still supported in Chrome.

00:06:28,110 --> 00:06:37,490
The things that, the - some of the style sheets today existed at the time but I was unaware

00:06:37,490 --> 00:06:39,889
of them.

00:06:39,889 --> 00:06:46,360
The first web browser, the one developed at CERN by Tim Berners-Lee - you might know him

00:06:46,360 --> 00:06:52,050
as a web developer! - actually had support for this thing called style sheets.

00:06:52,050 --> 00:06:56,810
There wasn't a formal shared syntax but the browser itself supported this idea that you

00:06:56,810 --> 00:06:59,110
could define what all the styles should look like.

00:06:59,110 --> 00:07:05,589
In fact, the voila browser was one of the first browsers to implement this and ship

00:07:05,589 --> 00:07:06,589
it.

00:07:06,589 --> 00:07:15,879
It is very hard to find screen shots from the early 1990s, by the way.

00:07:15,879 --> 00:07:25,610
Mosaic browser took a step back and didn't allow users to use style sheets.

00:07:25,610 --> 00:07:32,069
I noticed that Mosiac renders something different than links and I wonder if I can have any

00:07:32,069 --> 00:07:34,629
control over that.

00:07:34,629 --> 00:07:40,199
To which the response was, "In fact, it has been a constant source of delight for me over

00:07:40,199 --> 00:07:47,120
the past year to tell hordes of people who want to strap themselves and control the way

00:07:47,120 --> 00:07:53,349
your document that would be trivial in every other common text processing environment.

00:07:53,349 --> 00:07:57,149
Sorry, you're screwed.".

00:07:57,149 --> 00:08:01,909
the idea of style sheets was that the browser could have some say what an-1 should look

00:08:01,909 --> 00:08:03,770
like in a paragraph.

00:08:03,770 --> 00:08:10,889
Ideally, the user could do that until someone sent a reset CSS in there.

00:08:10,889 --> 00:08:19,879
Netscape supported this, still in modern browsers like Firefox.

00:08:19,879 --> 00:08:25,979
There was a third group of people who wanted a say over their style at the time.

00:08:25,979 --> 00:08:32,380
Authors like yourself and people like me with important Mortal Combat web pages.

00:08:32,380 --> 00:08:36,630
Not to say these people could be trusted.

00:08:36,630 --> 00:08:40,390
This is a website I designed in 2004.

00:08:40,390 --> 00:08:45,139
So there is no accounting for taste when people got access to these style sheets.

00:08:45,139 --> 00:08:53,329
There were as many ten different implementations of style sheets at the time.

00:08:53,329 --> 00:09:00,180
We will talk about two of them - CSS and JavaScript style sheets.

00:09:00,180 --> 00:09:11,800
There was no logo for, and found fair to grasp the worst possible logo for CSS.

00:09:11,800 --> 00:09:17,350
They came about in Netscape 4.0.

00:09:17,350 --> 00:09:22,930
That was the only time they were seen in the wild.

00:09:22,930 --> 00:09:29,010
Let's look what these style sheets look like.

00:09:29,010 --> 00:09:31,449
Let's leave, and here we go.

00:09:31,449 --> 00:09:35,110
We have a modern web browser, and some mark-up.

00:09:35,110 --> 00:09:38,690
So there is some tasting notes here.

00:09:38,690 --> 00:09:44,410
You will notice that we have a link, a still sheet link, but it goes to this JS immediately

00:09:44,410 --> 00:09:45,410
of a CSS.

00:09:45,410 --> 00:09:49,959
That is the first clue that you might be using JavaScript style sheets.

00:09:49,959 --> 00:09:59,620
After that, we have some very non-exciting mark-up, careful readers will notice the "segum

00:09:59,620 --> 00:10:05,750
ipsum", a little bit of form along those lines.

00:10:05,750 --> 00:10:11,120
One thing that I learned along the way is that there was no document.element.get.id

00:10:11,120 --> 00:10:12,529
yet.

00:10:12,529 --> 00:10:19,459
In fact, Netscape through away the DOM after it rendered it and showed the original version

00:10:19,459 --> 00:10:22,459
there so it limited a lot what you could do at the time.

00:10:22,459 --> 00:10:27,110
Let's play around with it a second.

00:10:27,110 --> 00:10:36,920
We can see that there is nothing right now but we could theoretically write, "Document.

00:10:36,920 --> 00:10:42,019
Tags H1."

00:10:42,019 --> 00:10:43,380
Colour is red.

00:10:43,380 --> 00:10:44,380
Cool.

00:10:44,380 --> 00:10:46,660
Let's go ahead and refresh that.

00:10:46,660 --> 00:10:52,460
And you see that there are lovely H1 turns red.

00:10:52,460 --> 00:10:53,779
Other things that we might want to do.

00:10:53,779 --> 00:10:58,750
For instance, in the notes, they said make sure that your fonts are 24 pixels so everyone

00:10:58,750 --> 00:10:59,750
can see them.

00:10:59,750 --> 00:11:02,180
Let's put that in as well.

00:11:02,180 --> 00:11:04,350
You can see we can style individual tags.

00:11:04,350 --> 00:11:06,480
So then, I know CSS, right?

00:11:06,480 --> 00:11:11,240
I don't want to use dots for classes, how do we do that?

00:11:11,240 --> 00:11:12,720
We had a slightly different way of doing that.

00:11:12,720 --> 00:11:19,160
We could say document - and the document was actually arbitrary, it was window, it was

00:11:19,160 --> 00:11:21,079
a global at the time.

00:11:21,079 --> 00:11:27,750
We could say classes and we could say I believe that it was called first, our first paragraph.

00:11:27,750 --> 00:11:30,600
You have to say what kind of tag that would be.

00:11:30,600 --> 00:11:38,210
You could say a P and then you could say background colour, weee!

00:11:38,210 --> 00:11:39,210
Equals green.

00:11:39,210 --> 00:11:40,350
I don't know, why not?

00:11:40,350 --> 00:11:41,759
We've seen my taste already.

00:11:41,759 --> 00:11:43,439
It can't hurt.

00:11:43,439 --> 00:11:44,560
Save that.

00:11:44,560 --> 00:11:47,000
This editor is from the 1990s.

00:11:47,000 --> 00:11:50,290
It is not funny!

00:11:50,290 --> 00:11:56,540
If you wanted to get everything with a class at first, which is the only one, you could

00:11:56,540 --> 00:11:58,529
say Al-tags in this situation.

00:11:58,529 --> 00:12:01,420
Cool - all tags in this situation.

00:12:01,420 --> 00:12:05,040
JavaScript style sheets had other interesting things.

00:12:05,040 --> 00:12:07,730
They had variables.

00:12:07,730 --> 00:12:18,189
So I could say bar colour is equal to green, and I could use that as well.

00:12:18,189 --> 00:12:23,930
All right.

00:12:23,930 --> 00:12:26,930
And you can see that works as well.

00:12:26,930 --> 00:12:36,910
We had variables, all the JavaScript programming language available to us.

00:12:36,910 --> 00:12:43,790
You could even, if you really wanted to, add a little bit of uncertainty to your web page,

00:12:43,790 --> 00:12:44,920
right?

00:12:44,920 --> 00:12:50,339
You could say, "Hey, give me a random number and round it to 0 or 1 and use in a as the

00:12:50,339 --> 00:12:57,980
background colour of the page."

00:12:57,980 --> 00:13:04,329
Sometimes it would be black and sometimes white.

00:13:04,329 --> 00:13:06,240
You could set the variables and use it altogether.

00:13:06,240 --> 00:13:14,190
You could say do you want to implement a dark mode which was very popular in like 2010.

00:13:14,190 --> 00:13:16,279
Go ahead and do that as well.

00:13:16,279 --> 00:13:22,509
And now if it was in dark mode, you got these different colours versus if that was not set

00:13:22,509 --> 00:13:23,509
to true.

00:13:23,509 --> 00:13:28,850
In fact, you could do some interesting things because you had stuff like "confirm" so you

00:13:28,850 --> 00:13:33,189
could ask the user did they want to go back to dark mode, and you could style it based

00:13:33,189 --> 00:13:37,240
on user input.

00:13:37,240 --> 00:13:43,639
If writing tags and documents every time was too verbose, we could go ahead and use everyone's

00:13:43,639 --> 00:13:49,459
friend, the "with" key word in JavaScript and get the same basic effect as well.

00:13:49,459 --> 00:13:57,410
There were some interesting things you could do as well where the page was evaluated - it's

00:13:57,410 --> 00:14:01,389
hard to tell because I don't have any dev tools and there are no events or anything

00:14:01,389 --> 00:14:06,690
like that, but here we will say, when this style sheet loads, let's measure the inner

00:14:06,690 --> 00:14:12,620
width, and, if it is less than 600, let's make the background colour red otherwise make

00:14:12,620 --> 00:14:13,620
it blue.

00:14:13,620 --> 00:14:18,019
Like the early-days media queries.

00:14:18,019 --> 00:14:19,019
Here we go.

00:14:19,019 --> 00:14:28,529
If I grab the edge of this - can he grab the edge - let's grab this corner down here.

00:14:28,529 --> 00:14:34,449
You can see we have the beginnings of responsive design in 1995 when you would have been looking

00:14:34,449 --> 00:14:37,019
at your Motorola Star Tech.

00:14:37,019 --> 00:14:41,420
There are fun things that we could have done in this land.

00:14:41,420 --> 00:14:48,379
Like the web itself wasn't ready for the sheer awesomeness that the style sheets would behold,

00:14:48,379 --> 00:14:52,300
like vendor pre-fixes.

00:14:52,300 --> 00:14:56,760
But imagine or something like "view with" and create our own extra units.

00:14:56,760 --> 00:15:03,259
We had the full power of a programming language to figure out how we style things.

00:15:03,259 --> 00:15:05,009
Cool.

00:15:05,009 --> 00:15:08,939
That done includes our live coding portion of the show.

00:15:08,939 --> 00:15:11,809
There were still things, like specificity, right?

00:15:11,809 --> 00:15:14,240
You weren't getting away from that one.

00:15:14,240 --> 00:15:24,059
It followed the same rules that it did back - we will talk about that in a second.

00:15:24,059 --> 00:15:29,209
There was a submission to the W3C to make it part of a spec and it never came to be,

00:15:29,209 --> 00:15:32,509
so there were some things that were in the spec that didn't actually work in Netscape

00:15:32,509 --> 00:15:34,730
sparse I can tell.

00:15:34,730 --> 00:15:38,660
One interesting one was "evaluate style" and you're, "Where's the function key word?

00:15:38,660 --> 00:15:39,660
I likely don't know.

00:15:39,660 --> 00:15:43,339
I've tried it with and without."

00:15:43,339 --> 00:15:48,559
You could use functions to evaluate based on other parts of the style sheet what another

00:15:48,559 --> 00:15:49,920
style should be.

00:15:49,920 --> 00:15:52,810
Why you would use it in this case, I don't know.

00:15:52,810 --> 00:15:54,510
But there it is.

00:15:54,510 --> 00:15:58,630
Then you're going to apply it to all sorts of different things.

00:15:58,630 --> 00:16:01,279
People were very excited about this.

00:16:01,279 --> 00:16:08,949
The big thing about JSSS is you could change the colour and font size based on user interaction.

00:16:08,949 --> 00:16:12,600
Spoiler alert: this is something we're still chasing now.

00:16:12,600 --> 00:16:16,470
So, the - we all know how the story ends.

00:16:16,470 --> 00:16:25,639
CSS was adopted by Internet Explorer 3 and accepted as a standard to the W3C.

00:16:25,639 --> 00:16:32,670
Your options were you could in Netscape write JSSS or JavaScript style sheets, now logo,

00:16:32,670 --> 00:16:35,449
before you could only write in CSS.

00:16:35,449 --> 00:16:38,149
People made the obvious choice and just used CSS.

00:16:38,149 --> 00:16:45,800
It turned out Netscape thought JSSS would be the be all and end all and the - it just

00:16:45,800 --> 00:16:52,999
shelled out to the JavaScript - implement style sheets ultimately came to a close like

00:16:52,999 --> 00:16:58,720
the Fresh Prince of Bel Air.

00:16:58,720 --> 00:17:08,159
They were removed - there were a lot of missed opportunity here.

00:17:08,159 --> 00:17:13,470
What if throughout the kind of today we could have used Modernizr to do feature detections

00:17:13,470 --> 00:17:18,510
and have an ultimate style sheet on the fly and have a style sheet to figure out how to

00:17:18,510 --> 00:17:24,319
move back to more supported properties?

00:17:24,319 --> 00:17:30,870
You can imagine this is fictitious code, you can imagine a world where we had code-split

00:17:30,870 --> 00:17:36,010
CSS files or JavaScript style sheet fliers and loaded on the fly based on the user navigating

00:17:36,010 --> 00:17:40,200
or taking a given action.

00:17:40,200 --> 00:17:46,700
You could theoretically do this based on user action, right, if you had to interrupt.

00:17:46,700 --> 00:17:50,640
In my experimentation, if you put a variable on the window object, you could access in

00:17:50,640 --> 00:17:52,010
your JavaScript later on.

00:17:52,010 --> 00:17:53,470
It didn't work the other way.

00:17:53,470 --> 00:17:57,310
Again, I don't fully know why.

00:17:57,310 --> 00:18:02,049
In this fictitious perfect world, we can see a world where we can all of a sudden have

00:18:02,049 --> 00:18:05,400
interaction between JavaScript and our styles.

00:18:05,400 --> 00:18:10,710
So as I said, JavaScript style sheets didn't make it, but like a bunch of ideas like really

00:18:10,710 --> 00:18:15,500
half-kept cropping up over and over and over again over the years.

00:18:15,500 --> 00:18:23,710
Sass and Less gave us functions, and variables, and conditionals.

00:18:23,710 --> 00:18:27,460
These were like a powerful way in the way we style things today.

00:18:27,460 --> 00:18:32,049
jQuery even took this idea of finding by a selector and being able to manipulate the

00:18:32,049 --> 00:18:36,480
way something looked to another level as well.

00:18:36,480 --> 00:18:41,870
CSS4 brought us variables, and even some functions like calc.

00:18:41,870 --> 00:18:45,340
These are ideas, that even though they didn't survive in the first iteration, they were

00:18:45,340 --> 00:18:49,620
ones that we looked at again and again.

00:18:49,620 --> 00:18:54,460
All of these, CSS4 aside, have some limitations.

00:18:54,460 --> 00:18:59,740
A very handsome man once drew the line between static analysis and dynamic analysis.

00:18:59,740 --> 00:19:10,929
We couldn't run a style sheet because we came up with a random number.

00:19:10,929 --> 00:19:15,860
We don't have that introspection we had potentially with the real JavaScript style sheets or my

00:19:15,860 --> 00:19:18,640
fictitious examples earlier.

00:19:18,640 --> 00:19:24,140
We do have a little bit of access with the thing called the CSS object model which you

00:19:24,140 --> 00:19:25,779
may or may not have ever heard of.

00:19:25,779 --> 00:19:27,549
It is very cool but kind of incomplete.

00:19:27,549 --> 00:19:33,640
Basically, you open up your Chrome developer tools and go to document.style sheets, you

00:19:33,640 --> 00:19:38,899
can access all the style sheets that have been loaded by the browser, look at their

00:19:38,899 --> 00:19:41,870
rules, insert and delete rules, on the fly.

00:19:41,870 --> 00:19:48,840
It is really cool but it has some limitations - one, cross-origin sheets.

00:19:48,840 --> 00:19:52,060
Two, there is no real way to traverse it.

00:19:52,060 --> 00:19:59,500
It is an example where you can navigate through, and you could iterate it is an array-like

00:19:59,500 --> 00:20:05,000
object so you could loop over it and will give you the amazing effect as we change the

00:20:05,000 --> 00:20:12,510
background colour of the body on a said interval.

00:20:12,510 --> 00:20:16,679
We could theoretically implement some of those fake ideas from the JavaScript style sheet,

00:20:16,679 --> 00:20:22,620
but it's the under-specced so not clear how it works every time on every producer so generally

00:20:22,620 --> 00:20:25,850
speaking, not our best option.

00:20:25,850 --> 00:20:29,149
We don't have the tools to work with it.

00:20:29,149 --> 00:20:33,059
All browsers come with a DOM parser that let's us manipulate.

00:20:33,059 --> 00:20:38,460
We could use post-CSS read the style tag and use the stuff at run time, but it doesn't

00:20:38,460 --> 00:20:41,450
work out so great.

00:20:41,450 --> 00:20:50,240
As our craft has developed, we've taken this giant document viewer and our craft as evolved.

00:20:50,240 --> 00:20:57,419
JavaScript developers have taken on these different live techniques.

00:20:57,419 --> 00:21:05,500
It turns out an object that has its own property doesn't work out in Netscape Navigator 4.

00:21:05,500 --> 00:21:11,250
By walking this code of how were to implement stuff, we've been able to kind of move the

00:21:11,250 --> 00:21:17,230
web forward, but we mate our tools better, and eventually, we made the platform better.

00:21:17,230 --> 00:21:22,850
I think really strongly the way we've made JavaScript such an amazing platform is doing

00:21:22,850 --> 00:21:27,539
things we were not supposed to do, working around the hard parts, automating that work

00:21:27,539 --> 00:21:30,190
and eventually fixing the platform itself.

00:21:30,190 --> 00:21:35,350
As we come to this component-based approach where everything is isolated and encapsulated,

00:21:35,350 --> 00:21:40,980
we decided that it is CSS that is limiting us at this point.

00:21:40,980 --> 00:21:42,850
And there are some really good points to this, right?

00:21:42,850 --> 00:21:44,120
All styles are in the global scope.

00:21:44,120 --> 00:21:49,720
It is tricky to figure out dependencies, sharing constants unless you're like me on Ruby on

00:21:49,720 --> 00:21:59,049
Rails in 2010 - REBs things into your templates - don't do that! - these are big problems.

00:21:59,049 --> 00:22:00,409
Like writing over another style.

00:22:00,409 --> 00:22:04,940
You know, it is very mutable, whatever comes last wins in a lot of cases.

00:22:04,940 --> 00:22:12,110
I know that people who knew CSS really well were arguing this this pain don't seem the

00:22:12,110 --> 00:22:13,110
same thing.

00:22:13,110 --> 00:22:17,890
I would always take pause when we find ourselves with somebody who knows something more than

00:22:17,890 --> 00:22:21,250
I do doesn't see the problem in the same way.

00:22:21,250 --> 00:22:22,250
I thought a lot about this.

00:22:22,250 --> 00:22:31,340
I came from Ruby originally, and a few years ago, it was not too uncommon to see things

00:22:31,340 --> 00:22:32,340
like this.

00:22:32,340 --> 00:22:38,380
And you had to ask yourself a question: are we falling the same trap, right?

00:22:38,380 --> 00:22:44,549
We said JavaScript couldn't be used to build robust web applications.

00:22:44,549 --> 00:22:50,050
So, as we find ourselves saying that CSS is broken, I think that that is a trap of the

00:22:50,050 --> 00:22:51,720
way we think about these things.

00:22:51,720 --> 00:22:57,620
JavaScript obviously can be used to build applications, it has been used, even some

00:22:57,620 --> 00:23:02,340
of those posts have recanted since then, and I wonder if we need to think about that in

00:23:02,340 --> 00:23:04,460
terms of our relationship with CSS?

00:23:04,460 --> 00:23:10,340
Because CSS does - you know, it does have its rough edges.

00:23:10,340 --> 00:23:13,000
But who amongst us does not!

00:23:13,000 --> 00:23:23,990
This is CSS Sudden Garden with different mark-up and style sheets can transform an application

00:23:23,990 --> 00:23:27,650
in amazing ways.

00:23:27,650 --> 00:23:34,679
This is in a response to the previous quote saying like, "Hey, maybe we don't want to

00:23:34,679 --> 00:23:38,592
couple the way our applications look, we can parse everything into our components but what

00:23:38,592 --> 00:23:44,390
happens when it comes to change the font across the entire page because marketing" right?

00:23:44,390 --> 00:23:47,630
Why why throw the baby out of the bathwater.

00:23:47,630 --> 00:23:54,160
There are some troublesome parts in CSS but also some great parts.

00:23:54,160 --> 00:24:02,610
We can't inline our styles because we have a marionette and along with a WordPress site.

00:24:02,610 --> 00:24:08,660
Right, so I think a lot about this graph.

00:24:08,660 --> 00:24:12,179
I think we've solved some of it with build tools.

00:24:12,179 --> 00:24:18,940
We have style lint in post-CSS, allowing us to build up a style sheet in imports across

00:24:18,940 --> 00:24:19,940
different files.

00:24:19,940 --> 00:24:25,750
We can make sure one style isn't stepping over another one with immutable CSS.

00:24:25,750 --> 00:24:30,240
As far as the encapsulation, we have standards we're working towards to solve these problems

00:24:30,240 --> 00:24:33,360
that don't throw out CSS in the process.

00:24:33,360 --> 00:24:36,529
I think about the static and dynamic analysis we talked about yesterday.

00:24:36,529 --> 00:24:42,769
Some of the things I like to see in the platform is improved cycle time, better inside nexus

00:24:42,769 --> 00:24:44,649
at run time, right?

00:24:44,649 --> 00:24:48,289
When I was kind of like - one of the things that means the most to me in terms of developing

00:24:48,289 --> 00:24:52,290
the platform is the single extensible web manifesto, which some people have signed,

00:24:52,290 --> 00:25:00,250
and it is this idea that we can, the low-level APIs allowing people to build ideas, and give

00:25:00,250 --> 00:25:05,600
greater insight and access to the platform itself, right, and make a few more features

00:25:05,600 --> 00:25:11,080
than we want to see and look at those kind of paths and see what we advance the platform

00:25:11,080 --> 00:25:12,220
into being.

00:25:12,220 --> 00:25:19,050
You saw Takeda 39 up here earlier -- you saw TC39 up here and the process and ways to get

00:25:19,050 --> 00:25:20,740
involved as a developer.

00:25:20,740 --> 00:25:33,950
The task of Houdini is to expose the same low-level APIs to us.

00:25:33,950 --> 00:25:37,940
Right now, we have access to the DOM, so all of our solutions involve let's us modify the

00:25:37,940 --> 00:25:39,700
DOM.

00:25:39,700 --> 00:25:42,500
We have the partial access to the CSS access model.

00:25:42,500 --> 00:25:45,970
There's a lot we don't have access to.

00:25:45,970 --> 00:25:54,360
The idea of Houdini is to give us access to parts of the process that we didn't have access

00:25:54,360 --> 00:25:56,440
to previously.

00:25:56,440 --> 00:26:00,659
JavaScript style sheets were short-lived, but there are some ideas that are obviously

00:26:00,659 --> 00:26:02,960
carried around over the last 20 years.

00:26:02,960 --> 00:26:07,269
Right now would be we are solving problems with the best tools that we have, but I think

00:26:07,269 --> 00:26:10,029
it is exciting to look at what tools we could have, right?

00:26:10,029 --> 00:26:14,190
Thinking about what are we doing now that we would love the browser to be able to do

00:26:14,190 --> 00:26:15,880
for us?

00:26:15,880 --> 00:26:20,370
And figuring out, like we want the web platform to be.

00:26:20,370 --> 00:26:25,840
About an hour ago, this quote, which I loved, "The nice thing about being the last talks

00:26:25,840 --> 00:26:30,870
is you can steal everyone else's ideas" is that standards of community in involvement

00:26:30,870 --> 00:26:32,419
are not standards period.

00:26:32,419 --> 00:26:39,389
I leave you with this moral of the story: rather than work around the limitations let's

00:26:39,389 --> 00:26:42,010
push for the web platform we want.

00:26:42,010 --> 00:26:47,820
Let's work out what we want the browser to do for us and how interacting with the web,

00:26:47,820 --> 00:26:49,960
and let's start making that happen.

00:26:49,960 --> 00:26:50,960
Thank you.

00:26:50,960 --> 00:26:51,960

YouTube URL: https://www.youtube.com/watch?v=XTvWOQSWS48


