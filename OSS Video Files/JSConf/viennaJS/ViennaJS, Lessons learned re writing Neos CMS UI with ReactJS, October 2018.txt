Title: ViennaJS, Lessons learned re writing Neos CMS UI with ReactJS, October 2018
Publication date: 2018-11-01
Playlist: viennaJS
Description: 
	Talk by Dmitri Pisarev

Image your task would be to build one of the biggest open source ReactJS applications. Dmitri has exactly that experience as a Neos CMS core member. Neos CMS is a modern open source content management system. The administration area is very complex because it offers full inline editing of content. So the React application has to play nicely with arbitrary code from site developers. Based on ReactJS, Redux, Redux-Saga, and Immutable.js the Neos UI project has almost 100.000 lines of code over 5.027 commits.  Dmitri brings us along the rather exciting journey rewriting the User Interface from Ember into ReactJS. The team solved a number of long-standing technical challenges and learned a few lessons along the way. Join the talk to hear the story, both from a technical and a project management perspective.
Captions: 
	00:00:00,030 --> 00:00:07,410
my name is Dimitri I come from Moscow

00:00:04,380 --> 00:00:10,230
actually a short flight but that took

00:00:07,410 --> 00:00:12,450
away my night's sleep today so I don't

00:00:10,230 --> 00:00:12,929
find me being a bit laggy today it's

00:00:12,450 --> 00:00:16,320
fine

00:00:12,929 --> 00:00:18,960
jet lag I work in same filler it's

00:00:16,320 --> 00:00:21,449
Institute Christian Institute in Moscow

00:00:18,960 --> 00:00:27,029
so I'm also a Christian believer myself

00:00:21,449 --> 00:00:28,590
and four years ago I got involved with a

00:00:27,029 --> 00:00:32,219
Neos project

00:00:28,590 --> 00:00:36,719
it's just curious whoever heard heard

00:00:32,219 --> 00:00:39,950
about Neos before Wow quite a few people

00:00:36,719 --> 00:00:42,809
we are that popular yay

00:00:39,950 --> 00:00:44,430
yeah say it's for those who don't know

00:00:42,809 --> 00:00:48,059
it's an open source content management

00:00:44,430 --> 00:00:52,500
system and we started using it for work

00:00:48,059 --> 00:00:56,219
and I got so much into it that I became

00:00:52,500 --> 00:00:58,710
a core team member later on and so today

00:00:56,219 --> 00:01:02,489
we are going to be speaking well not

00:00:58,710 --> 00:01:06,180
about Neos itself but about the rewrite

00:01:02,489 --> 00:01:11,430
of the user interface of Neos from ember

00:01:06,180 --> 00:01:15,600
into react you guessed it right so a few

00:01:11,430 --> 00:01:18,299
words about Nia's it's used by a few

00:01:15,600 --> 00:01:21,390
brands that are quite known here in

00:01:18,299 --> 00:01:25,830
Austria in Germany and many others of

00:01:21,390 --> 00:01:28,259
course and from the inside the the

00:01:25,830 --> 00:01:30,600
management interface the system looks

00:01:28,259 --> 00:01:33,000
somehow like this at the core of it you

00:01:30,600 --> 00:01:37,380
see the website as the visitors see it

00:01:33,000 --> 00:01:39,630
and you can edit it in line directly so

00:01:37,380 --> 00:01:42,570
that's like a big selling point of the

00:01:39,630 --> 00:01:45,899
system that you don't require a lot of

00:01:42,570 --> 00:01:49,560
time for training new editors and say

00:01:45,899 --> 00:01:52,170
that in itself already provides a big

00:01:49,560 --> 00:01:54,990
challenge how do you create a react app

00:01:52,170 --> 00:02:03,710
that allows you to enter existing

00:01:54,990 --> 00:02:06,750
websites and not break everything and

00:02:03,710 --> 00:02:11,580
first of all probably you are curious

00:02:06,750 --> 00:02:13,080
why we even started this idea of

00:02:11,580 --> 00:02:19,200
rewriting

00:02:13,080 --> 00:02:22,230
mber to react and yet so it's not so

00:02:19,200 --> 00:02:26,190
much about ember actually we loved amber

00:02:22,230 --> 00:02:28,550
but our you user interface was so much

00:02:26,190 --> 00:02:31,380
outdated we had like we were running

00:02:28,550 --> 00:02:34,170
amber version one and it wasn't really

00:02:31,380 --> 00:02:38,130
maintained and it was actually a mess so

00:02:34,170 --> 00:02:40,500
we were thinking of migrating to the

00:02:38,130 --> 00:02:42,300
latest version at that time and we spent

00:02:40,500 --> 00:02:44,130
half a year doing that and then just got

00:02:42,300 --> 00:02:47,280
desperate and decided like let's just

00:02:44,130 --> 00:02:49,410
rewrite it from scratch and some people

00:02:47,280 --> 00:02:52,220
came and say hey um if we arrived

00:02:49,410 --> 00:02:55,350
rewriting from scratch let's use the

00:02:52,220 --> 00:02:57,600
most hyped hype top technology that's

00:02:55,350 --> 00:02:59,970
currently available why should we still

00:02:57,600 --> 00:03:03,060
using ember and people said no you're

00:02:59,970 --> 00:03:07,080
not gonna do that so we turned down that

00:03:03,060 --> 00:03:10,200
idea but later on a guy from outside the

00:03:07,080 --> 00:03:14,100
team just came on our forum and post it

00:03:10,200 --> 00:03:17,000
say hey here we are with my friend we

00:03:14,100 --> 00:03:21,900
just spent like 10 days after Christmas

00:03:17,000 --> 00:03:26,640
and we created a prototype in react of

00:03:21,900 --> 00:03:28,769
your whole back-end management interface

00:03:26,640 --> 00:03:32,459
and we thought wow that sounds really

00:03:28,769 --> 00:03:35,250
cool and more and more developers got

00:03:32,459 --> 00:03:38,280
into looking into this prototype and we

00:03:35,250 --> 00:03:41,459
really liked it and then we had a

00:03:38,280 --> 00:03:43,680
lengthy discussion that was took three

00:03:41,459 --> 00:03:46,160
months and so that's like a sneak peek

00:03:43,680 --> 00:03:48,209
behind the scenes of like a larger

00:03:46,160 --> 00:03:50,310
open-source project that's how the

00:03:48,209 --> 00:03:52,709
decisions are made we just basically

00:03:50,310 --> 00:03:54,750
argue until like the last ones left

00:03:52,709 --> 00:03:59,910
standing there in there really long

00:03:54,750 --> 00:04:04,470
thread so yeah but the react team won

00:03:59,910 --> 00:04:06,900
and we started do the rewrite and we

00:04:04,470 --> 00:04:10,830
ended up using like pretty trivial stack

00:04:06,900 --> 00:04:14,280
for today's standard but believe me in

00:04:10,830 --> 00:04:17,430
2015 it was really hyped up technology

00:04:14,280 --> 00:04:20,180
it looks book modern it looks boring now

00:04:17,430 --> 00:04:25,260
but back then it it was really cool

00:04:20,180 --> 00:04:27,030
so whom of you know all of this stuff by

00:04:25,260 --> 00:04:33,430
heart like read arcs and

00:04:27,030 --> 00:04:36,850
reactant ah even less than Neos Sonia is

00:04:33,430 --> 00:04:38,650
more popular than react ask interesting

00:04:36,850 --> 00:04:41,230
discovery

00:04:38,650 --> 00:04:45,430
but anyways I'm not going to go deep

00:04:41,230 --> 00:04:48,750
into selling this particular stack it's

00:04:45,430 --> 00:04:52,870
not the topic of my talk I'm just gonna

00:04:48,750 --> 00:04:55,090
give you an outline of our rewrite so it

00:04:52,870 --> 00:04:57,940
took us actually took us two years to

00:04:55,090 --> 00:05:00,970
complete the first stable version of the

00:04:57,940 --> 00:05:03,390
user interface that was twice as long as

00:05:00,970 --> 00:05:05,830
we initially anticipated and we

00:05:03,390 --> 00:05:08,200
initially anticipated it to take twice

00:05:05,830 --> 00:05:11,080
as long so we matched our initial

00:05:08,200 --> 00:05:13,660
expectations kind of and then it took

00:05:11,080 --> 00:05:15,460
another year until this moment and last

00:05:13,660 --> 00:05:17,800
year we also spent a lot and a lot of

00:05:15,460 --> 00:05:19,200
energy into stabilizing the project

00:05:17,800 --> 00:05:21,490
because we have thousands of

00:05:19,200 --> 00:05:23,080
installations and with every new

00:05:21,490 --> 00:05:25,600
installation migrating to the new

00:05:23,080 --> 00:05:27,970
version we had new problems I mean that

00:05:25,600 --> 00:05:31,300
that's the way things go but right at

00:05:27,970 --> 00:05:34,060
this point we are pretty stable I would

00:05:31,300 --> 00:05:38,880
say and that's a good thing that we

00:05:34,060 --> 00:05:42,190
managed it so it wasn't worth it and yes

00:05:38,880 --> 00:05:44,980
actually I'm quite sure it is the

00:05:42,190 --> 00:05:50,040
general stability has improved loading

00:05:44,980 --> 00:05:52,840
performance perceived performance we

00:05:50,040 --> 00:05:55,690
baked in a few features of which I'm

00:05:52,840 --> 00:05:57,990
gonna talk later now that were not

00:05:55,690 --> 00:06:02,470
possible to fit into the old

00:05:57,990 --> 00:06:04,360
architecture and also we got to we got

00:06:02,470 --> 00:06:08,200
power freedom in choosing their right

00:06:04,360 --> 00:06:10,990
ingredients in our stack because ember

00:06:08,200 --> 00:06:13,120
likely gave you a monolith architecture

00:06:10,990 --> 00:06:17,140
and it was like really hard to do things

00:06:13,120 --> 00:06:19,030
our way there but we react reactors like

00:06:17,140 --> 00:06:22,110
really not opinionated about anything

00:06:19,030 --> 00:06:27,160
else the way you do data fetching

00:06:22,110 --> 00:06:29,380
anything validation so but there's a

00:06:27,160 --> 00:06:31,630
bitter side to the rewrite that it took

00:06:29,380 --> 00:06:35,950
us two years and five thousand comments

00:06:31,630 --> 00:06:39,110
from 59 contributors over 600 closed

00:06:35,950 --> 00:06:43,310
issues and 80 still open

00:06:39,110 --> 00:06:46,220
and yes here over a thousand closed pool

00:06:43,310 --> 00:06:50,240
requests so that was really a lot of

00:06:46,220 --> 00:06:52,340
exhausting work and naturally the most

00:06:50,240 --> 00:06:59,180
exhausting part is getting it to be

00:06:52,340 --> 00:07:02,750
stable to stabilize and but there are

00:06:59,180 --> 00:07:05,180
some things that we've gained and today

00:07:02,750 --> 00:07:07,850
I decided to talk more about the topic

00:07:05,180 --> 00:07:10,760
of extensibility because the rest of the

00:07:07,850 --> 00:07:13,850
rear ayat is pretty it's just a kind of

00:07:10,760 --> 00:07:16,120
basic read X apps just the big size so

00:07:13,850 --> 00:07:21,260
there's not much exciting to talk about

00:07:16,120 --> 00:07:24,560
but at the heart of our system of Neos

00:07:21,260 --> 00:07:26,450
itself is the topic of extensibility and

00:07:24,560 --> 00:07:28,790
when you are creating our website with

00:07:26,450 --> 00:07:31,580
news like nothing comes in stock you

00:07:28,790 --> 00:07:34,490
create everything from scratch like

00:07:31,580 --> 00:07:36,590
custom tailor-made for your project and

00:07:34,490 --> 00:07:38,360
we wanted to have the same experience

00:07:36,590 --> 00:07:41,780
from the user interface so you could

00:07:38,360 --> 00:07:46,160
replace any part of it customize it both

00:07:41,780 --> 00:07:49,610
in implant and in unplanned ways and for

00:07:46,160 --> 00:07:53,120
example here or is just a smaller subset

00:07:49,610 --> 00:07:56,690
of the UI and here you see this red area

00:07:53,120 --> 00:08:00,860
we call it the inspector area you have a

00:07:56,690 --> 00:08:02,750
focused element on the page and then you

00:08:00,860 --> 00:08:04,730
have some you are able to edit some

00:08:02,750 --> 00:08:07,880
properties of it that you don't want to

00:08:04,730 --> 00:08:09,620
edit in line and it was always a

00:08:07,880 --> 00:08:12,260
standard feature that you could create

00:08:09,620 --> 00:08:14,420
custom inspector editors like for

00:08:12,260 --> 00:08:16,700
example a text field or I don't know

00:08:14,420 --> 00:08:19,430
image upload or anything so you could

00:08:16,700 --> 00:08:22,850
create your own for example a color

00:08:19,430 --> 00:08:24,380
picker so an editor could pick a color I

00:08:22,850 --> 00:08:30,560
don't know if a background on the page

00:08:24,380 --> 00:08:33,050
or something and that was that work was

00:08:30,560 --> 00:08:35,479
an example of plant extensibility that

00:08:33,050 --> 00:08:38,810
we that this we always said that this is

00:08:35,479 --> 00:08:41,720
our API you can create custom editors

00:08:38,810 --> 00:08:45,110
this is how you do it but in addition to

00:08:41,720 --> 00:08:47,330
that we wanted to be able to plug-in or

00:08:45,110 --> 00:08:51,520
override any code anywhere on the page

00:08:47,330 --> 00:08:55,480
and to do that we needed a mekinese

00:08:51,520 --> 00:08:58,450
for having this global configuration of

00:08:55,480 --> 00:09:02,380
everything we are doing four of the list

00:08:58,450 --> 00:09:06,970
of registries the list of UI containers

00:09:02,380 --> 00:09:10,600
data loaders and cetera etc etc so we

00:09:06,970 --> 00:09:15,160
introduced this concept of registry kind

00:09:10,600 --> 00:09:17,530
of like Windows registry but yeah and so

00:09:15,160 --> 00:09:19,990
that was a central place where people

00:09:17,530 --> 00:09:22,210
could hook into the like they are custom

00:09:19,990 --> 00:09:24,640
implementations and also we needed a

00:09:22,210 --> 00:09:28,320
defined point in time when these

00:09:24,640 --> 00:09:31,360
modifications were allowed and these are

00:09:28,320 --> 00:09:36,130
allowed now in manifest files so you're

00:09:31,360 --> 00:09:38,620
only allowed to alter that configuration

00:09:36,130 --> 00:09:42,040
in a manifest file and at a certain

00:09:38,620 --> 00:09:44,230
point in booting the UI so if you would

00:09:42,040 --> 00:09:47,140
allow to do dynamically it would like

00:09:44,230 --> 00:09:50,800
really turned into a mess later on so we

00:09:47,140 --> 00:09:53,880
got this two constraints and so we are

00:09:50,800 --> 00:09:57,850
basically loading all the plugins from

00:09:53,880 --> 00:10:00,940
like userland plugins and then

00:09:57,850 --> 00:10:04,480
initializing their manifest files then

00:10:00,940 --> 00:10:08,350
freezing the registry and resuming the

00:10:04,480 --> 00:10:10,000
boot process from that point on and here

00:10:08,350 --> 00:10:14,170
here's just an example of things that we

00:10:10,000 --> 00:10:17,170
are yeah just one more thing I need to

00:10:14,170 --> 00:10:23,830
say about this so the trigger question

00:10:17,170 --> 00:10:26,740
is how to add the dynamically how to

00:10:23,830 --> 00:10:30,360
dynamically load the code from the user

00:10:26,740 --> 00:10:33,790
into already statically compiled built

00:10:30,360 --> 00:10:36,760
main architecture we didn't want the

00:10:33,790 --> 00:10:41,920
users to recompile rebuild the whole

00:10:36,760 --> 00:10:44,860
application itself so we would have

00:10:41,920 --> 00:10:47,620
their JavaScript code loaded in an

00:10:44,860 --> 00:10:50,530
additional script tag but then if we

00:10:47,620 --> 00:10:52,900
want them to be able to use for example

00:10:50,530 --> 00:10:55,030
react we don't want to have two

00:10:52,900 --> 00:10:58,660
instances of react on the page so we

00:10:55,030 --> 00:11:01,990
need to expose both the vendor libraries

00:10:58,660 --> 00:11:04,270
that we are using like react and the

00:11:01,990 --> 00:11:09,370
internals of Neos itself

00:11:04,270 --> 00:11:15,660
to those plugins and for that we are

00:11:09,370 --> 00:11:22,030
using the web packs alias feature we are

00:11:15,660 --> 00:11:24,580
exposing parts of the of the user

00:11:22,030 --> 00:11:27,640
interface and parts or and some

00:11:24,580 --> 00:11:30,610
libraries in now basically in a window

00:11:27,640 --> 00:11:34,720
object as a property on a window object

00:11:30,610 --> 00:11:38,440
and then when we are building with web

00:11:34,720 --> 00:11:41,050
pack we are just kind of replacing the

00:11:38,440 --> 00:11:44,620
original dependencies with a path to

00:11:41,050 --> 00:11:48,030
that this kind of fake library attached

00:11:44,620 --> 00:11:53,110
the window object and that allows us to

00:11:48,030 --> 00:11:55,570
have this architecture where there's one

00:11:53,110 --> 00:11:58,390
instance of react always one instance of

00:11:55,570 --> 00:12:00,430
redux and all plugins and no matter at

00:11:58,390 --> 00:12:04,210
what point in time they are loaded they

00:12:00,430 --> 00:12:07,030
can still share it so that came in quite

00:12:04,210 --> 00:12:09,550
nicely and I'll just get a bit more

00:12:07,030 --> 00:12:13,900
practical with this color picker example

00:12:09,550 --> 00:12:16,990
so first of all we have this packaged

00:12:13,900 --> 00:12:21,010
like a plug-in Alpher creates this

00:12:16,990 --> 00:12:23,500
package JSON file and he requires the

00:12:21,010 --> 00:12:26,860
nice UI extensibility package that

00:12:23,500 --> 00:12:29,050
provides him the build scripts for with

00:12:26,860 --> 00:12:31,750
all the necessary work back configure so

00:12:29,050 --> 00:12:34,510
he doesn't have to write the web pack

00:12:31,750 --> 00:12:38,310
config because it can be quite

00:12:34,510 --> 00:12:43,210
cumbersome and all he has to do is just

00:12:38,310 --> 00:12:47,550
kick start this file and do the built

00:12:43,210 --> 00:12:50,290
and he'll get the working plugin and

00:12:47,550 --> 00:12:56,440
this is an example of a manifest file

00:12:50,290 --> 00:12:59,590
where we were hooking in a a color

00:12:56,440 --> 00:13:03,720
picker editor and setting it to a

00:12:59,590 --> 00:13:06,280
registry as a color picker editor and

00:13:03,720 --> 00:13:08,050
the react component that would be

00:13:06,280 --> 00:13:11,350
rendering the color picker itself is

00:13:08,050 --> 00:13:14,530
quite simple here it is we are using a

00:13:11,350 --> 00:13:16,900
third-party react component to do the

00:13:14,530 --> 00:13:17,740
actual color picking that's quite nice

00:13:16,900 --> 00:13:20,110
when your hat

00:13:17,740 --> 00:13:23,230
access to whole reactor Co system that

00:13:20,110 --> 00:13:27,790
you can reuse any component you like in

00:13:23,230 --> 00:13:31,660
your plugins so that's basically it you

00:13:27,790 --> 00:13:36,900
hit your yarn build you configure Neos

00:13:31,660 --> 00:13:42,220
to to load this extra plugin JS file and

00:13:36,900 --> 00:13:44,320
you have a working color picker so a few

00:13:42,220 --> 00:13:46,450
more so this was an example of plant

00:13:44,320 --> 00:13:49,480
extensibility this is what we support

00:13:46,450 --> 00:13:52,120
what we declares our API that we will

00:13:49,480 --> 00:13:55,870
maintain between versions and so on but

00:13:52,120 --> 00:13:59,590
also we want to like let people do crazy

00:13:55,870 --> 00:14:02,650
stuff for example replace the whole

00:13:59,590 --> 00:14:06,630
navigation module the whole tree like

00:14:02,650 --> 00:14:14,440
with for example with a flat navigation

00:14:06,630 --> 00:14:15,880
or just with anything else yeah yes a

00:14:14,440 --> 00:14:18,340
default option is the tree all right

00:14:15,880 --> 00:14:20,410
thanks so you don't always need the tree

00:14:18,340 --> 00:14:23,830
sometimes you just need a flat list of

00:14:20,410 --> 00:14:27,130
things like block articles so here are

00:14:23,830 --> 00:14:30,210
you in addition to showing the tree I've

00:14:27,130 --> 00:14:36,090
created just in a few hours this thing

00:14:30,210 --> 00:14:38,940
which does this flat list navigation or

00:14:36,090 --> 00:14:41,140
so this is how it's working on a

00:14:38,940 --> 00:14:44,830
technical side so you see how we have

00:14:41,140 --> 00:14:48,280
this container area registry and we are

00:14:44,830 --> 00:14:50,590
just setting the page tree replacing the

00:14:48,280 --> 00:14:54,730
page tree container was this flat nav

00:14:50,590 --> 00:14:57,310
container so it's rendering our new nav

00:14:54,730 --> 00:14:59,500
in the place of the old one so we don't

00:14:57,310 --> 00:15:01,510
guarantee it would always work this way

00:14:59,500 --> 00:15:03,490
but for custom projects where you're

00:15:01,510 --> 00:15:07,390
like really need custom implementations

00:15:03,490 --> 00:15:10,960
that's a good risk to take and it works

00:15:07,390 --> 00:15:14,530
out really nicely in practice or like to

00:15:10,960 --> 00:15:17,260
get even more fancy usually in line you

00:15:14,530 --> 00:15:19,540
can own only type text like have like

00:15:17,260 --> 00:15:21,100
rich text editing in line but sometimes

00:15:19,540 --> 00:15:23,410
you want to have structural editing in

00:15:21,100 --> 00:15:28,960
line so I just took all the inspector

00:15:23,410 --> 00:15:30,100
editors and put them in line inside

00:15:28,960 --> 00:15:33,370
[Music]

00:15:30,100 --> 00:15:37,269
the user website for example to be able

00:15:33,370 --> 00:15:40,180
to pick dates or I don't know upload

00:15:37,269 --> 00:15:44,079
images directly without any

00:15:40,180 --> 00:15:46,000
interruptions so I had like I was giving

00:15:44,079 --> 00:15:48,880
a talk about Neos extensibility here

00:15:46,000 --> 00:15:51,190
this spring and I had this idea a few

00:15:48,880 --> 00:15:52,750
hours before the talk in the middle of

00:15:51,190 --> 00:15:54,100
the night so I thought why don't I try

00:15:52,750 --> 00:15:57,399
to code something like this

00:15:54,100 --> 00:15:59,470
so by the morning it was ready I was

00:15:57,399 --> 00:16:02,019
again a bit sleepy during my talk but

00:15:59,470 --> 00:16:03,910
had it working so I mean that's just an

00:16:02,019 --> 00:16:06,940
example of what kind of things you can

00:16:03,910 --> 00:16:10,660
do so just to emphasize again all of

00:16:06,940 --> 00:16:13,120
this is like totally created from

00:16:10,660 --> 00:16:15,269
scratch it's not part of New York or we

00:16:13,120 --> 00:16:18,190
are just reusing existing components

00:16:15,269 --> 00:16:19,300
yeah so I see that I'm running out of

00:16:18,190 --> 00:16:21,579
time

00:16:19,300 --> 00:16:25,420
but I just want to mention one worth

00:16:21,579 --> 00:16:29,589
discovering along the way like the

00:16:25,420 --> 00:16:32,050
biggest pain-in-the-ass of the previous

00:16:29,589 --> 00:16:34,329
years of my account management system

00:16:32,050 --> 00:16:37,449
development was messing with rich text

00:16:34,329 --> 00:16:40,779
editors we used to use an alloy editor

00:16:37,449 --> 00:16:41,980
then seek editor for and you always

00:16:40,779 --> 00:16:46,089
would fight already

00:16:41,980 --> 00:16:47,980
alekhya existence system and try to do

00:16:46,089 --> 00:16:53,470
it what you want and not what it thinks

00:16:47,980 --> 00:16:57,370
is the best and then we just recently

00:16:53,470 --> 00:16:59,769
rediscovered CK editor 5 which by the

00:16:57,370 --> 00:17:02,320
name of it didn't like sound this is

00:16:59,769 --> 00:17:04,569
gonna be like something really good but

00:17:02,320 --> 00:17:07,870
actually it was it was also a complete

00:17:04,569 --> 00:17:09,790
rewrite of our often editor as an

00:17:07,870 --> 00:17:11,410
editing framework they came to be an

00:17:09,790 --> 00:17:13,449
editing framework and it took them four

00:17:11,410 --> 00:17:15,610
years to do the rewrite that's quite

00:17:13,449 --> 00:17:19,179
amazing I mean their project this way

00:17:15,610 --> 00:17:21,720
more advanced than ours and so it can

00:17:19,179 --> 00:17:24,490
look as basic editor but under the hood

00:17:21,720 --> 00:17:27,220
every feature of it comes as a

00:17:24,490 --> 00:17:30,090
independent plugin for example even

00:17:27,220 --> 00:17:32,710
moving a cursor or typing a key is

00:17:30,090 --> 00:17:34,900
implemented as a plugin like hitting a

00:17:32,710 --> 00:17:39,190
backspace button and a raising texture

00:17:34,900 --> 00:17:40,720
is a plugin so it's totally amazing so

00:17:39,190 --> 00:17:41,540
for example when we don't need bold

00:17:40,720 --> 00:17:44,360
formatting

00:17:41,540 --> 00:17:47,030
on a page we just don't load that plugin

00:17:44,360 --> 00:17:50,660
so if you really need just simple typing

00:17:47,030 --> 00:17:53,180
text you have zero additional plugins

00:17:50,660 --> 00:17:54,950
besides the basic typing plugging loaded

00:17:53,180 --> 00:18:00,230
and that makes it extremely lightweight

00:17:54,950 --> 00:18:01,940
and extremely robust and so on so it's

00:18:00,230 --> 00:18:04,370
really amazing and a lot of fun to

00:18:01,940 --> 00:18:06,860
create your own custom plugins we

00:18:04,370 --> 00:18:09,200
created a buzz about a dozen plugins

00:18:06,860 --> 00:18:11,480
since then for the newest core itself

00:18:09,200 --> 00:18:16,670
and it's just such a big fun so

00:18:11,480 --> 00:18:19,100
definitely check it out so I need to

00:18:16,670 --> 00:18:21,250
wrap up the talk I guess and basically

00:18:19,100 --> 00:18:25,340
what what are the lessons we've learned

00:18:21,250 --> 00:18:29,810
during this whole during this three

00:18:25,340 --> 00:18:31,550
years that have passed so rewrites from

00:18:29,810 --> 00:18:33,740
scratch are really expensive

00:18:31,550 --> 00:18:38,200
we will worried about this and it's true

00:18:33,740 --> 00:18:41,030
and it's super risky so don't try that

00:18:38,200 --> 00:18:44,150
unless you really have to because

00:18:41,030 --> 00:18:46,130
sometimes they pay off so as a final

00:18:44,150 --> 00:18:49,400
conclusion I would say that it was

00:18:46,130 --> 00:18:53,420
definitely worth it but it was scarier

00:18:49,400 --> 00:18:56,150
than we are anticipated so I also make

00:18:53,420 --> 00:18:57,800
friends with other open-source projects

00:18:56,150 --> 00:18:59,780
along the way if you're doing some open

00:18:57,800 --> 00:19:00,920
source I already gave you an example of

00:18:59,780 --> 00:19:03,080
a sickie editor

00:19:00,920 --> 00:19:06,230
we also had a really nice collaboration

00:19:03,080 --> 00:19:07,910
with Tezuka fee and to end testing if

00:19:06,230 --> 00:19:10,100
you never tried it definitely try it out

00:19:07,910 --> 00:19:11,930
I would need another 20 minutes to talk

00:19:10,100 --> 00:19:15,080
about it and it was just super cool

00:19:11,930 --> 00:19:18,290
project we contribute to it along the

00:19:15,080 --> 00:19:22,460
way and fix some bugs in it but it's an

00:19:18,290 --> 00:19:24,890
amazing thing and you definitely become

00:19:22,460 --> 00:19:27,350
a better developer in general when

00:19:24,890 --> 00:19:30,140
you're contributing to your of the right

00:19:27,350 --> 00:19:35,540
kind of open source project so I've

00:19:30,140 --> 00:19:41,060
learned a lot in that time so if you if

00:19:35,540 --> 00:19:43,460
you would like to we would definitely

00:19:41,060 --> 00:19:46,880
love to have you on board and we always

00:19:43,460 --> 00:19:49,370
have issues of all kinds of levels of

00:19:46,880 --> 00:19:53,180
complexity and simplicity as well that

00:19:49,370 --> 00:19:54,800
you can help with so think me if you if

00:19:53,180 --> 00:19:58,670
you are interested

00:19:54,800 --> 00:20:00,830
of the talk and yeah owned a bazooka

00:19:58,670 --> 00:20:02,870
Dodge Sudan and so when we merge this

00:20:00,830 --> 00:20:04,130
myth near those suspecting as whether

00:20:02,870 --> 00:20:08,080
it's a good for me

00:20:04,130 --> 00:20:08,080

YouTube URL: https://www.youtube.com/watch?v=wmXuVVmy7lg


