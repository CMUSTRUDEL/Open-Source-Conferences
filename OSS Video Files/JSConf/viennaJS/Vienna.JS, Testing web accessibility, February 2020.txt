Title: Vienna.JS, Testing web accessibility, February 2020
Publication date: 2020-02-28
Playlist: viennaJS
Description: 
	Talk by Adrián Bolonio

When we develop a new web application, we often put a lot of work on the design, on making it beautiful and usable. In other words, we want our web app to be effective, efficient, and satisfying for the user. But a lot of times we don’t think about the user experience for people with disabilities, including people with age-related impairments.

For the web, accessibility (a11y ) means that people with disabilities can perceive, understand, navigate, and interact with websites and tools, and that they can contribute equally without barriers.” (Source: W3C - Web Accessibility Initiative). Our role as frontend and web developers is to create clear interfaces to make people understand and care about data, independently of their disabilities or impairments, but what we, developers, often forget is to ensure that the code we write follows the Web Content Accessibility Guidelines (WCAG), and the only way to achieve that is testing, either manual or automated. 

Automated web a11y tests can free up our QA team from manual testing every part of our application…but…they can’t automatically, and magically, make our site accessible. 

We should use automated a11y tests as one step of a larger testing process. Don’t forget that only 20% to 50% of all accessibility issues can automatically be detected. 

I will show you some testing tools, libraries and techniques to increase the a11y test coverage of your code with a simple React application example.
Captions: 
	00:00:00,110 --> 00:00:06,899
so let's talk today about web

00:00:03,720 --> 00:00:08,820
accessibility first of all as Stefan

00:00:06,899 --> 00:00:12,540
said this introducer

00:00:08,820 --> 00:00:15,420
my name is Adrian or Adrian or Adrian in

00:00:12,540 --> 00:00:17,340
Spanish I'm from Spain front-end

00:00:15,420 --> 00:00:19,710
developer ad will happen so if you're

00:00:17,340 --> 00:00:22,590
from Austria will know github and I'm a

00:00:19,710 --> 00:00:24,269
really strong accessibility advocate you

00:00:22,590 --> 00:00:30,449
can find me almost everywhere under my

00:00:24,269 --> 00:00:33,180
surname so accessibility I get a lot of

00:00:30,449 --> 00:00:37,020
a lot of times the question of what does

00:00:33,180 --> 00:00:38,670
I 11 why I mean so this is because it's

00:00:37,020 --> 00:00:40,800
the International acronym for

00:00:38,670 --> 00:00:42,840
accessibility it's because there's 11

00:00:40,800 --> 00:00:45,270
letters between the eye and the Y in the

00:00:42,840 --> 00:00:50,340
word accessibility so I'm gonna use it a

00:00:45,270 --> 00:00:55,800
lot now why is so obvious in the real

00:00:50,340 --> 00:00:57,210
world that these three situations are

00:00:55,800 --> 00:00:59,460
completely wrong

00:00:57,210 --> 00:01:01,710
so poured this guy who's gonna go down

00:00:59,460 --> 00:01:04,199
very fast there is a tree in the middle

00:01:01,710 --> 00:01:06,659
of the ramp and there's stairs at the

00:01:04,199 --> 00:01:09,030
end of the ramp like it's completely

00:01:06,659 --> 00:01:11,790
wrong so let me give you another example

00:01:09,030 --> 00:01:13,920
there's someone who comes in with a

00:01:11,790 --> 00:01:17,610
wheelchair press the accessibility

00:01:13,920 --> 00:01:21,780
button and nice surprise

00:01:17,610 --> 00:01:24,450
yeah stairs so why is this so obvious in

00:01:21,780 --> 00:01:28,409
the real world but it's not that obvious

00:01:24,450 --> 00:01:31,619
in the online world so let me put the

00:01:28,409 --> 00:01:35,340
example in an online world so you are in

00:01:31,619 --> 00:01:38,040
a in an online shop and you want to know

00:01:35,340 --> 00:01:39,390
your previous purchases so you call

00:01:38,040 --> 00:01:40,650
support and then you can get something

00:01:39,390 --> 00:01:43,290
like yeah you need to click on the

00:01:40,650 --> 00:01:48,090
button on the top right corner or you

00:01:43,290 --> 00:01:49,950
want your you want to know your you want

00:01:48,090 --> 00:01:51,329
to change your email address so they can

00:01:49,950 --> 00:01:54,780
say or you need to click in the button

00:01:51,329 --> 00:01:56,399
with the engine icon but for blind

00:01:54,780 --> 00:01:57,780
people there's no top right corner

00:01:56,399 --> 00:01:59,670
there's no button who looks like an

00:01:57,780 --> 00:02:01,110
engine icon so we need to take care

00:01:59,670 --> 00:02:04,700
about these things when we develop a

00:02:01,110 --> 00:02:07,500
website let me give you some numbers so

00:02:04,700 --> 00:02:09,080
two years ago around seven point six

00:02:07,500 --> 00:02:12,500
billion we were in the

00:02:09,080 --> 00:02:14,600
in the world but more the 1 billion

00:02:12,500 --> 00:02:17,960
people live with some form of this one

00:02:14,600 --> 00:02:21,260
impairment from 5 10 % people with

00:02:17,960 --> 00:02:24,650
glasses I see here color blind or 100%

00:02:21,260 --> 00:02:27,560
would be completely blind people so when

00:02:24,650 --> 00:02:30,110
we develop a web application and

00:02:27,560 --> 00:02:31,100
e-commerce app we want to reach as much

00:02:30,110 --> 00:02:33,890
people as possible

00:02:31,100 --> 00:02:35,870
but this is your audience as well so you

00:02:33,890 --> 00:02:40,400
need to take care about of of these

00:02:35,870 --> 00:02:41,870
people so developing web accessibility

00:02:40,400 --> 00:02:43,340
I'm not gonna talk about this today I

00:02:41,870 --> 00:02:45,320
have another tour called how that you

00:02:43,340 --> 00:02:47,860
watch a sound like you can watch it if

00:02:45,320 --> 00:02:50,570
you want but I'm gonna talk about

00:02:47,860 --> 00:02:53,060
testing web accessibility how can we

00:02:50,570 --> 00:02:58,850
make sure that what we develop is

00:02:53,060 --> 00:03:01,160
accessible automate tests are very good

00:02:58,850 --> 00:03:03,020
they can free up your kueh your testing

00:03:01,160 --> 00:03:06,080
team from manual testing every part of

00:03:03,020 --> 00:03:07,730
the application but it's not magic they

00:03:06,080 --> 00:03:10,970
don't automatically make your site

00:03:07,730 --> 00:03:13,910
accessible because you need to include

00:03:10,970 --> 00:03:16,190
these automated in a full testing

00:03:13,910 --> 00:03:19,600
process with manual tests is important

00:03:16,190 --> 00:03:22,760
only around 20 to 50 percent of the

00:03:19,600 --> 00:03:27,380
accessibility issues can be detected by

00:03:22,760 --> 00:03:30,769
ultimate tests so I created a very

00:03:27,380 --> 00:03:34,640
simple application in react with very

00:03:30,769 --> 00:03:36,620
tiny tiny components one is a button the

00:03:34,640 --> 00:03:39,700
other one is a fake button which is an

00:03:36,620 --> 00:03:44,060
anchor link with the roll button

00:03:39,700 --> 00:03:47,150
sneak-peek do not do this ever and there

00:03:44,060 --> 00:03:48,800
is an image and in the entry point of

00:03:47,150 --> 00:03:50,450
the application I put a bunch of

00:03:48,800 --> 00:03:54,830
accessibility errors let's see if we can

00:03:50,450 --> 00:03:58,040
find them so and let's see how can we

00:03:54,830 --> 00:04:02,239
test during development process how can

00:03:58,040 --> 00:04:04,340
we test during we made code there are

00:04:02,239 --> 00:04:07,190
three tools that I want to talk about

00:04:04,340 --> 00:04:08,690
today very nice that Stefan did the the

00:04:07,190 --> 00:04:12,430
first stop because everything is open

00:04:08,690 --> 00:04:16,750
source so very good the first one is

00:04:12,430 --> 00:04:19,989
react ax there is a tool developed by

00:04:16,750 --> 00:04:19,989
Dec where

00:04:20,290 --> 00:04:25,280
you can install it as a developer

00:04:22,820 --> 00:04:29,300
dependency in your react application you

00:04:25,280 --> 00:04:30,830
can you can call it in your entry point

00:04:29,300 --> 00:04:33,320
of the application and you need to make

00:04:30,830 --> 00:04:35,810
sure that you don't execute this in a

00:04:33,320 --> 00:04:38,330
production environment so what we have

00:04:35,810 --> 00:04:41,150
here is if the environment is different

00:04:38,330 --> 00:04:44,120
than production then I want to use this

00:04:41,150 --> 00:04:45,889
library what this library does is that

00:04:44,120 --> 00:04:49,280
when you run your application in the

00:04:45,889 --> 00:04:52,660
browser in the console log you will see

00:04:49,280 --> 00:04:58,550
all issues or accessibility violations

00:04:52,660 --> 00:05:01,160
group by first by by issue so if you

00:04:58,550 --> 00:05:03,650
have more than one violation of the same

00:05:01,160 --> 00:05:05,870
issue you will you will see grouped then

00:05:03,650 --> 00:05:08,979
you can see as well the severity level

00:05:05,870 --> 00:05:11,389
minor moderate series and critical and

00:05:08,979 --> 00:05:14,540
the cool thing of this library is that

00:05:11,389 --> 00:05:17,930
you will see what is the error where is

00:05:14,540 --> 00:05:21,280
there in the Dom structure and a link to

00:05:17,930 --> 00:05:23,360
deck way University comm which is the

00:05:21,280 --> 00:05:26,169
official documentation of this library

00:05:23,360 --> 00:05:29,150
not that that will be through see but a

00:05:26,169 --> 00:05:30,860
documentation how to solve the issue and

00:05:29,150 --> 00:05:36,800
what are the best practices about this

00:05:30,860 --> 00:05:38,660
issue so very very cool linters you were

00:05:36,800 --> 00:05:42,320
talking about Stephan was talking about

00:05:38,660 --> 00:05:45,050
before about how to include linters into

00:05:42,320 --> 00:05:48,800
your build pipeline or into your github

00:05:45,050 --> 00:05:51,940
so if you're using an es linter you can

00:05:48,800 --> 00:05:56,780
have the plug-in for accessibility so

00:05:51,940 --> 00:05:58,880
what you have to do is to include this

00:05:56,780 --> 00:06:02,720
in your packet Jason obviously and in

00:05:58,880 --> 00:06:06,590
your EHT Island RC you can use the

00:06:02,720 --> 00:06:09,560
plugin with line number 12 that extends

00:06:06,590 --> 00:06:13,070
their recommended rules for this linter

00:06:09,560 --> 00:06:15,800
you will be enough in my personal case I

00:06:13,070 --> 00:06:19,550
like to specify the rules that I want to

00:06:15,800 --> 00:06:22,940
use there is one very interesting when

00:06:19,550 --> 00:06:25,789
you can specify components so only

00:06:22,940 --> 00:06:28,430
specific components so you can use this

00:06:25,789 --> 00:06:31,490
linter in only these components and what

00:06:28,430 --> 00:06:34,020
I'll entered us pretty much is tell me

00:06:31,490 --> 00:06:37,639
when tell me that I'm wrong

00:06:34,020 --> 00:06:40,800
when I'm wrong so you can see the

00:06:37,639 --> 00:06:43,710
notification in the code editor it

00:06:40,800 --> 00:06:45,030
doesn't matter which one you use and he

00:06:43,710 --> 00:06:47,520
will tell you for example in this case

00:06:45,030 --> 00:06:49,110
that if the onclick is not an

00:06:47,520 --> 00:06:52,940
interactive element so you cannot put an

00:06:49,110 --> 00:06:57,240
on-click in a div because this is a

00:06:52,940 --> 00:06:59,370
accessibility violation as well you can

00:06:57,240 --> 00:07:01,710
use the linting issues in the terminal

00:06:59,370 --> 00:07:04,080
when you npm run or yarn run your

00:07:01,710 --> 00:07:06,810
application whatever package you use to

00:07:04,080 --> 00:07:12,240
run your react application same thing

00:07:06,810 --> 00:07:14,729
for for angular of you my favorite

00:07:12,240 --> 00:07:15,569
probably which is you can write your own

00:07:14,729 --> 00:07:18,509
test

00:07:15,569 --> 00:07:22,289
let me rephrase this you must write your

00:07:18,509 --> 00:07:23,970
own test so yes is a library for

00:07:22,289 --> 00:07:25,199
JavaScript to write unit tests normally

00:07:23,970 --> 00:07:28,080
unit tests you can write end-to-end

00:07:25,199 --> 00:07:30,319
tests but normally used to write unit

00:07:28,080 --> 00:07:32,460
tests you have to again install it as a

00:07:30,319 --> 00:07:34,919
developer dependency in your react

00:07:32,460 --> 00:07:38,130
application and you can write a very

00:07:34,919 --> 00:07:42,479
simple test what I'm doing here is to

00:07:38,130 --> 00:07:44,639
import the whole app I use the reactant

00:07:42,479 --> 00:07:46,229
server to render it to a string that

00:07:44,639 --> 00:07:49,409
means I have the whole HTML into a

00:07:46,229 --> 00:07:51,419
string and I pass it over the ax again

00:07:49,409 --> 00:07:56,130
the quick axe

00:07:51,419 --> 00:07:58,440
engine to find every violation in the

00:07:56,130 --> 00:08:01,229
code what I expect obviously is to not

00:07:58,440 --> 00:08:04,020
have to have no violations so when I'm

00:08:01,229 --> 00:08:05,759
running MPM run tests I can see again

00:08:04,020 --> 00:08:09,029
the same as I'm doing with the library

00:08:05,759 --> 00:08:11,009
in there before the react in the in the

00:08:09,029 --> 00:08:13,469
browser I can see what is the error

00:08:11,009 --> 00:08:15,449
where is the error in my Dom structure

00:08:13,469 --> 00:08:16,889
and a direct link to the deck where

00:08:15,449 --> 00:08:18,479
University which is again the

00:08:16,889 --> 00:08:24,719
documentation you can have you can

00:08:18,479 --> 00:08:30,150
follow to fix this issue sometimes we

00:08:24,719 --> 00:08:32,849
tend to think it's done or we inherit a

00:08:30,150 --> 00:08:34,500
code base so you you don't you cannot

00:08:32,849 --> 00:08:37,079
plug this in from the very beginning of

00:08:34,500 --> 00:08:43,199
the process so what you can test is the

00:08:37,079 --> 00:08:46,399
whole done as a thing so X has a CLI so

00:08:43,199 --> 00:08:47,889
you can maybe you have your your URL

00:08:46,399 --> 00:08:50,829
already in there

00:08:47,889 --> 00:08:52,869
and then you install it globally in your

00:08:50,829 --> 00:08:55,899
machine and then you say acts and the

00:08:52,869 --> 00:08:58,319
URL that you want to analyze what it's

00:08:55,899 --> 00:09:01,569
doing is running a chrome headless

00:08:58,319 --> 00:09:04,689
running all accessibility tests and

00:09:01,569 --> 00:09:06,819
again since its acts what is there or

00:09:04,689 --> 00:09:11,049
where is the error and a direct link to

00:09:06,819 --> 00:09:14,709
the University very similar tool which

00:09:11,049 --> 00:09:15,189
is pi11 one again you install it

00:09:14,709 --> 00:09:18,970
globally

00:09:15,189 --> 00:09:21,369
and then you can run it over a URL again

00:09:18,970 --> 00:09:22,480
it's running a headless browser in this

00:09:21,369 --> 00:09:26,949
case I don't know if this Chrome or

00:09:22,480 --> 00:09:30,579
Firefox and it's going to tell you what

00:09:26,949 --> 00:09:34,660
violation it is what principle of this

00:09:30,579 --> 00:09:38,980
violation of the WC w3c standard it is

00:09:34,660 --> 00:09:43,989
so the WCAG double layer Triple A then

00:09:38,980 --> 00:09:46,799
the whole dome structure what element is

00:09:43,989 --> 00:09:50,230
the is the one who's provoking this

00:09:46,799 --> 00:09:51,879
violation since it's not X or doesn't

00:09:50,230 --> 00:09:54,100
have any documentation it's not direct

00:09:51,879 --> 00:09:56,679
link so it's your turn now to Google how

00:09:54,100 --> 00:09:59,379
to solve this issue good thing about PA

00:09:56,679 --> 00:10:00,189
11 y you can run this into against

00:09:59,379 --> 00:10:03,999
localhost

00:10:00,189 --> 00:10:07,689
I believe the ax CLI as well and again

00:10:03,999 --> 00:10:10,029
you will see the same errors another

00:10:07,689 --> 00:10:14,860
very cool thing of this family the pil

00:10:10,029 --> 00:10:17,319
my family's has has a CI which is you

00:10:14,860 --> 00:10:19,419
can say I have a lot of your else to

00:10:17,319 --> 00:10:21,549
test I want to test one by one so you

00:10:19,419 --> 00:10:23,559
can create a JSON structure with the

00:10:21,549 --> 00:10:26,679
URLs that you want to test and this is

00:10:23,559 --> 00:10:29,019
where with this this libraries has the

00:10:26,679 --> 00:10:31,509
power on which is you can perform

00:10:29,019 --> 00:10:33,970
actions and then you can continue doing

00:10:31,509 --> 00:10:36,669
tests so in the first example is just

00:10:33,970 --> 00:10:38,919
Stack Overflow the second one I'm giving

00:10:36,669 --> 00:10:40,959
a timeout of 50 millisecond or 50

00:10:38,919 --> 00:10:43,179
seconds which is huge and I'm taking a

00:10:40,959 --> 00:10:45,970
screen capture you can use this to make

00:10:43,179 --> 00:10:49,869
reports or maybe you have a visual

00:10:45,970 --> 00:10:51,369
Israeli UI regression test as well I

00:10:49,869 --> 00:10:53,559
mean the second one you can create

00:10:51,369 --> 00:10:57,249
actions you can wait for an element with

00:10:53,559 --> 00:10:58,660
an ID or a class to be in the dawn then

00:10:57,249 --> 00:11:00,850
you can take a screenshot you can

00:10:58,660 --> 00:11:01,360
navigate you can click and then you can

00:11:00,850 --> 00:11:04,870
go through

00:11:01,360 --> 00:11:09,760
all your happy path right that's we call

00:11:04,870 --> 00:11:13,510
it so again you just say pi11 why does

00:11:09,760 --> 00:11:15,910
CI is looking into your Jason into the

00:11:13,510 --> 00:11:17,950
root folder of your application it's

00:11:15,910 --> 00:11:21,910
gonna run again the same errors sorry

00:11:17,950 --> 00:11:24,130
the same tests if they find errors they

00:11:21,910 --> 00:11:25,980
will just the third one is taking some

00:11:24,130 --> 00:11:28,870
time because it's performing the actions

00:11:25,980 --> 00:11:33,220
it's going to display the same analysis

00:11:28,870 --> 00:11:35,290
acid as they do and in the root element

00:11:33,220 --> 00:11:38,440
we see the root folder we see the

00:11:35,290 --> 00:11:41,560
captures of the screen capture so again

00:11:38,440 --> 00:11:45,510
you can use it for reporting purposes as

00:11:41,560 --> 00:11:50,230
well the lighthouse lighthouse is a

00:11:45,510 --> 00:11:54,640
library developed by Google and you can

00:11:50,230 --> 00:11:56,740
find them in every Chrome browser you

00:11:54,640 --> 00:12:01,690
can use it from the browser but as well

00:11:56,740 --> 00:12:05,560
they have it as a terminal library again

00:12:01,690 --> 00:12:08,649
you install it globally into your into

00:12:05,560 --> 00:12:12,670
your machine and what it does instead of

00:12:08,649 --> 00:12:17,350
doing a headless browser it runs a full

00:12:12,670 --> 00:12:20,560
browser a fulcrum you can use the dust

00:12:17,350 --> 00:12:23,079
as view to launch the report at the end

00:12:20,560 --> 00:12:27,120
so again it's gonna perform a lot of

00:12:23,079 --> 00:12:31,019
test accessibility performance

00:12:27,120 --> 00:12:35,350
responsive design low Internet

00:12:31,019 --> 00:12:37,890
everything you see all the tests light

00:12:35,350 --> 00:12:40,870
has run and it's gonna create an HTML

00:12:37,890 --> 00:12:43,360
report about it you can click on

00:12:40,870 --> 00:12:46,000
accessibility and then you can have some

00:12:43,360 --> 00:12:49,510
information of the same way as as the

00:12:46,000 --> 00:12:51,130
other does so what is there or what is

00:12:49,510 --> 00:12:53,980
the error and how to solve the error a

00:12:51,130 --> 00:12:55,990
bit of documentation so this is the

00:12:53,980 --> 00:12:59,380
tools that I use when I have to run over

00:12:55,990 --> 00:13:03,670
a whole Dom structure of a website but

00:12:59,380 --> 00:13:05,019
as I said before automate tests okay the

00:13:03,670 --> 00:13:08,800
this is this is the thing that I've been

00:13:05,019 --> 00:13:10,449
saying over the what I think is the main

00:13:08,800 --> 00:13:13,120
feature is just personal opinion so I

00:13:10,449 --> 00:13:14,579
think the a CLI has the direct link to

00:13:13,120 --> 00:13:17,339
the documentation the PLM

00:13:14,579 --> 00:13:19,049
you can create options and navigate

00:13:17,339 --> 00:13:23,730
through the website lighthouse can

00:13:19,049 --> 00:13:26,149
export the the analysis to HTML to a

00:13:23,730 --> 00:13:28,499
JSON file you can include this into your

00:13:26,149 --> 00:13:32,209
build pipeline to break it and not

00:13:28,499 --> 00:13:36,239
release any code that is has violation

00:13:32,209 --> 00:13:40,549
accessibility violations to production I

00:13:36,239 --> 00:13:43,649
said before automate tests are not only

00:13:40,549 --> 00:13:45,749
the only way to do so manual tests are

00:13:43,649 --> 00:13:49,949
very important as well so the tools that

00:13:45,749 --> 00:13:53,369
I use to manual test the accessibility

00:13:49,949 --> 00:13:55,139
in the browser are these ones plus one

00:13:53,369 --> 00:13:58,949
more so I will show you the other one

00:13:55,139 --> 00:14:01,769
after my talk so let me let me show you

00:13:58,949 --> 00:14:06,119
the first one axe has a Chrome extension

00:14:01,769 --> 00:14:10,259
and you can find it over the development

00:14:06,119 --> 00:14:12,569
tools so there has their own tab and

00:14:10,259 --> 00:14:15,089
what it does you can analyze the whole

00:14:12,569 --> 00:14:16,860
website it's gonna analyze it it's gonna

00:14:15,089 --> 00:14:17,309
go through it and it's gonna tell you

00:14:16,860 --> 00:14:19,949
again

00:14:17,309 --> 00:14:22,379
what is the error where is the error in

00:14:19,949 --> 00:14:24,480
the HTML and instead of giving you a

00:14:22,379 --> 00:14:26,519
link to the deku University it's gonna

00:14:24,480 --> 00:14:31,949
put the full documentation there how to

00:14:26,519 --> 00:14:34,799
solve the issue hey RC toolkit very very

00:14:31,949 --> 00:14:40,949
similar again you can use it from the

00:14:34,799 --> 00:14:43,230
development tools you can perform run

00:14:40,949 --> 00:14:45,749
tests you have every test that is

00:14:43,230 --> 00:14:48,540
performed and in this case I'm clicking

00:14:45,749 --> 00:14:52,949
in images I can see what images doesn't

00:14:48,540 --> 00:14:56,129
have any alt text and I click and I go

00:14:52,949 --> 00:14:58,470
directly to the to the to the HTML and

00:14:56,129 --> 00:15:03,779
in the window is gonna be highlighted so

00:14:58,470 --> 00:15:07,049
you can really see them accessibility

00:15:03,779 --> 00:15:09,480
insights you don't find it over the dev

00:15:07,049 --> 00:15:13,819
tools you find it as an extension so you

00:15:09,480 --> 00:15:18,029
click in the extension and you can see

00:15:13,819 --> 00:15:22,019
how a user is gonna navigate through

00:15:18,029 --> 00:15:26,459
tabs so you can see if the top

00:15:22,019 --> 00:15:28,160
navigation is not even consistent but it

00:15:26,459 --> 00:15:31,579
is relevant to the

00:15:28,160 --> 00:15:38,930
of your website maybe I can show you

00:15:31,579 --> 00:15:42,050
afterwards a bad example of this wave

00:15:38,930 --> 00:15:46,519
and I think this one is one of the of

00:15:42,050 --> 00:15:48,500
the most complete ones it analyzes is an

00:15:46,519 --> 00:15:51,649
extension in analyze it immediately your

00:15:48,500 --> 00:15:54,709
website and it can give you the errors

00:15:51,649 --> 00:15:57,230
and you can click and see it in the in

00:15:54,709 --> 00:15:59,870
the window you can highlight the images

00:15:57,230 --> 00:16:02,509
again that hasn't had an al you can take

00:15:59,870 --> 00:16:05,420
the structure the headers h1 h2 III

00:16:02,509 --> 00:16:10,310
valid as well for SEO you can see the

00:16:05,420 --> 00:16:13,129
contrast you can deactivate the full CSS

00:16:10,310 --> 00:16:17,720
of your website so you can see if the

00:16:13,129 --> 00:16:19,730
HTML Dom structure is is consistent you

00:16:17,720 --> 00:16:23,180
can see even the code so you can analyze

00:16:19,730 --> 00:16:25,819
it deeply into the code I think it's a

00:16:23,180 --> 00:16:29,420
very complete complete tool to to manual

00:16:25,819 --> 00:16:34,899
tests as well

00:16:29,420 --> 00:16:38,360
this is a simulator on how someone with

00:16:34,899 --> 00:16:40,639
visually impaired or colorblindness will

00:16:38,360 --> 00:16:43,759
see your website so maybe you want to

00:16:40,639 --> 00:16:46,639
see how someone with blurry vision can

00:16:43,759 --> 00:16:48,439
see your website so maybe it's not it's

00:16:46,639 --> 00:16:54,339
not good for or the decisis of your

00:16:48,439 --> 00:16:58,459
phones are not good maybe someone with

00:16:54,339 --> 00:17:02,829
thing someone with colorblindness so

00:16:58,459 --> 00:17:06,230
protanopia completely changed maybe even

00:17:02,829 --> 00:17:09,470
grayscale you can simulate or maybe

00:17:06,230 --> 00:17:14,169
someone with prophetically vision

00:17:09,470 --> 00:17:18,799
glaucoma different different visual

00:17:14,169 --> 00:17:21,559
impairments that makes you makes you see

00:17:18,799 --> 00:17:24,079
how they will see your website so it may

00:17:21,559 --> 00:17:25,640
be you can you can move around the

00:17:24,079 --> 00:17:30,950
content of your website tool to make it

00:17:25,640 --> 00:17:35,299
better so those are the tools that I

00:17:30,950 --> 00:17:38,659
used almost every day to test the code

00:17:35,299 --> 00:17:40,990
that I produce or the code that my team

00:17:38,659 --> 00:17:40,990
produces

00:17:41,549 --> 00:17:47,409
the the outcome of this August to show

00:17:45,580 --> 00:17:50,350
you that they exist they're free they're

00:17:47,409 --> 00:17:54,669
open-source and this is now you want

00:17:50,350 --> 00:17:55,929
them to use them so give it a look

00:17:54,669 --> 00:18:00,730
play around with them because they are

00:17:55,929 --> 00:18:03,460
really powerful and use them the code of

00:18:00,730 --> 00:18:08,110
the of this very small application is in

00:18:03,460 --> 00:18:11,769
under my github the slides of this talk

00:18:08,110 --> 00:18:15,429
are under speaker comms Las Bologna my

00:18:11,769 --> 00:18:20,559
surname if you don't like the slides

00:18:15,429 --> 00:18:26,559
I created a three-part blog post in my

00:18:20,559 --> 00:18:29,260
website I want to recommend there is

00:18:26,559 --> 00:18:30,120
there is a new brand new like two months

00:18:29,260 --> 00:18:35,049
old

00:18:30,120 --> 00:18:37,120
course officially by the w3c in EDX it

00:18:35,049 --> 00:18:38,769
is not for tech people is for everyone

00:18:37,120 --> 00:18:41,889
so it's really an introduction to web

00:18:38,769 --> 00:18:44,830
accessibility so okay look it's for free

00:18:41,889 --> 00:18:48,039
and I want to live with with the

00:18:44,830 --> 00:18:50,470
sentence that I think it reflects a lot

00:18:48,039 --> 00:18:52,360
what accessibility is which is not just

00:18:50,470 --> 00:18:54,850
about disabled users being able to

00:18:52,360 --> 00:18:56,500
access your website it's about everyone

00:18:54,850 --> 00:18:59,049
being able to access your website

00:18:56,500 --> 00:19:01,510
because you forgot your glasses at home

00:18:59,049 --> 00:19:04,090
you break your screen you don't have

00:19:01,510 --> 00:19:06,190
your mouse with you you have kids and

00:19:04,090 --> 00:19:07,750
then you have to use your your your

00:19:06,190 --> 00:19:10,149
computer with one hand

00:19:07,750 --> 00:19:12,730
whatever you don't need to be disabled

00:19:10,149 --> 00:19:15,789
forever you can be situational disabled

00:19:12,730 --> 00:19:20,399
and you need to make your website

00:19:15,789 --> 00:19:22,690
accessible for everyone because

00:19:20,399 --> 00:19:25,750
accessibility is not a feature it's

00:19:22,690 --> 00:19:28,510
never been and it will never be so we

00:19:25,750 --> 00:19:30,639
need to treat it as a part of our

00:19:28,510 --> 00:19:33,399
development process the same as we treat

00:19:30,639 --> 00:19:37,659
testing the same as we treat UX review

00:19:33,399 --> 00:19:40,090
as part of the in progress column in our

00:19:37,659 --> 00:19:42,039
board so accessibility is not a feature

00:19:40,090 --> 00:19:44,889
it's not a post process that we will do

00:19:42,039 --> 00:19:47,679
if we have time again it really really

00:19:44,889 --> 00:19:50,350
don't take it really doesn't take any

00:19:47,679 --> 00:19:53,320
time to write an aria-label or a Aria

00:19:50,350 --> 00:19:54,909
hidden or an alt text to an image so

00:19:53,320 --> 00:20:00,920
it's nothing that you should do

00:19:54,909 --> 00:20:04,859
course post-development thank you

00:20:00,920 --> 00:20:04,859

YouTube URL: https://www.youtube.com/watch?v=ZupKHcb9w-k


