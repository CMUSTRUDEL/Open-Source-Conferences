Title: ViennaJS, Creating meaningful animations with JavaScript, October 2019
Publication date: 2019-11-02
Playlist: viennaJS
Description: 
	Talk by Oleksandr Sabov

Animations in enterprise product UIs are very often considered an optional thing that can be added at the last moment â€“ if at all. Developers often work under various time and business constraints, and may not have the chance to put effort into adding animations to the user interfaces. In this talk, I will discuss how to turn animations into a powerful tool that improves product usability, elevates the user experience, and overall make your products more engaging and accessible. We will go through a few examples, best practices, and I will show you how teams at IBM create meaningful animations using JavaScript.
Captions: 
	00:00:00,030 --> 00:00:04,110
so today we are going to talk about

00:00:01,439 --> 00:00:05,549
meaningful animations and you see

00:00:04,110 --> 00:00:07,980
already that I used like the most

00:00:05,549 --> 00:00:09,990
meaningful animation on my on my first

00:00:07,980 --> 00:00:13,559
slide one could say that it's not

00:00:09,990 --> 00:00:16,560
meaningful at all and we could agree I

00:00:13,559 --> 00:00:18,810
guess but you know if if I say that the

00:00:16,560 --> 00:00:21,090
purpose of this animation is to bring

00:00:18,810 --> 00:00:23,730
your attention to this particular world

00:00:21,090 --> 00:00:26,670
he'll meaningful and highlighted then

00:00:23,730 --> 00:00:29,970
maybe it's not that meaningless and you

00:00:26,670 --> 00:00:33,059
know speed of this animation colors that

00:00:29,970 --> 00:00:34,980
I'm using here will actually change the

00:00:33,059 --> 00:00:36,780
amount of attention or maybe it's at

00:00:34,980 --> 00:00:39,390
some point it will be even destructive

00:00:36,780 --> 00:00:43,980
and you will be annoying so it's it's

00:00:39,390 --> 00:00:47,160
it's an interesting way of thinking

00:00:43,980 --> 00:00:50,129
about animations where you have to like

00:00:47,160 --> 00:00:52,410
balance between what you want actually

00:00:50,129 --> 00:00:54,690
to achieve alright so my name is

00:00:52,410 --> 00:00:58,140
Alexandra Sabbath I'm a UX engineer at

00:00:54,690 --> 00:01:01,289
IBM yucks engineer is actually a

00:00:58,140 --> 00:01:03,870
front-end developer who works together

00:01:01,289 --> 00:01:06,390
with designers really closely so I'm

00:01:03,870 --> 00:01:09,210
still writing JavaScript I'm but mostly

00:01:06,390 --> 00:01:12,030
I'm working on on animations complex

00:01:09,210 --> 00:01:14,970
interactions and performance and stuff

00:01:12,030 --> 00:01:17,580
like that and I'm working on SPSS

00:01:14,970 --> 00:01:20,340
statistics this is an IBM product it's a

00:01:17,580 --> 00:01:22,890
desktop application force to the

00:01:20,340 --> 00:01:26,159
stations widely used in in universities

00:01:22,890 --> 00:01:29,549
and here's our splash screen where this

00:01:26,159 --> 00:01:33,600
is oh alright you barely see that but

00:01:29,549 --> 00:01:37,140
it's alright so one of the things that

00:01:33,600 --> 00:01:40,040
we built recently an open-source at IBM

00:01:37,140 --> 00:01:42,780
is a carbon design system it's a

00:01:40,040 --> 00:01:44,490
traditional design system with open

00:01:42,780 --> 00:01:48,710
source components that you can everyone

00:01:44,490 --> 00:01:52,460
can use but it also comes with with

00:01:48,710 --> 00:01:55,170
guide guiding like how to approach

00:01:52,460 --> 00:01:57,090
motion how to approach animation and I

00:01:55,170 --> 00:01:59,869
want to show you a short video about

00:01:57,090 --> 00:02:02,070
from from carbon design system that

00:01:59,869 --> 00:02:05,320
explains a little bit how how we

00:02:02,070 --> 00:02:08,200
approach motion at IBM

00:02:05,320 --> 00:02:09,240
motion brings on work/life it

00:02:08,200 --> 00:02:12,880
communicates

00:02:09,240 --> 00:02:15,220
DICE's forward and demands focus

00:02:12,880 --> 00:02:19,420
deulim's approach to motion design

00:02:15,220 --> 00:02:22,450
embraces dichotomy man-machine organic

00:02:19,420 --> 00:02:25,870
and engineered this duality has been

00:02:22,450 --> 00:02:28,900
distilled down to two most productive

00:02:25,870 --> 00:02:31,150
motion and expressive motion productive

00:02:28,900 --> 00:02:33,160
motion creates a sense of efficiency and

00:02:31,150 --> 00:02:35,260
precision while expressive motion and

00:02:33,160 --> 00:02:37,210
delivers enthusiastic and vibrant

00:02:35,260 --> 00:02:39,370
movements together they create an

00:02:37,210 --> 00:02:40,990
essential to dynamic and rhythm that

00:02:39,370 --> 00:02:44,980
combines the intuitive and the

00:02:40,990 --> 00:02:48,700
calculated the flexible and the fix from

00:02:44,980 --> 00:02:51,670
timing and paths the choreography and

00:02:48,700 --> 00:02:54,150
insistency motion crazy aging

00:02:51,670 --> 00:02:59,350
experiences that move us toward meaning

00:02:54,150 --> 00:03:01,150
insight and clarity all right one of the

00:02:59,350 --> 00:03:03,550
key messages here that was at the

00:03:01,150 --> 00:03:06,220
beginning that motion came great bring

00:03:03,550 --> 00:03:07,600
the screens to life so it can you know

00:03:06,220 --> 00:03:10,840
highlight things that you want to

00:03:07,600 --> 00:03:15,310
highlight drive attention and here I

00:03:10,840 --> 00:03:18,340
have a recipe for you how to how to cook

00:03:15,310 --> 00:03:20,799
a great animation and and first thing

00:03:18,340 --> 00:03:23,709
you have to find a good purpose so there

00:03:20,799 --> 00:03:27,160
always should be something that you want

00:03:23,709 --> 00:03:30,160
to solve by doing animation what you

00:03:27,160 --> 00:03:31,660
want to help and the second thing you

00:03:30,160 --> 00:03:33,640
need to add a little bit of meaning we

00:03:31,660 --> 00:03:36,610
will go through each of them a bit later

00:03:33,640 --> 00:03:39,100
and last step I guess really important

00:03:36,610 --> 00:03:42,640
step you need to surf animation called

00:03:39,100 --> 00:03:44,650
meaning that laptop of your users should

00:03:42,640 --> 00:03:48,060
not burn down while it's running your

00:03:44,650 --> 00:03:50,260
amazing animation on 60fps using all the

00:03:48,060 --> 00:03:51,970
graphic cards and everything so it

00:03:50,260 --> 00:03:54,640
should be called but still issue you

00:03:51,970 --> 00:03:55,989
should achieve 60fps the point here is

00:03:54,640 --> 00:03:59,080
that you know if you cannot achieve

00:03:55,989 --> 00:04:00,790
60fps or you cannot make sure it's it's

00:03:59,080 --> 00:04:02,350
it's performant

00:04:00,790 --> 00:04:06,070
then there is no point of doing this

00:04:02,350 --> 00:04:09,220
anymore alright so first first thing is

00:04:06,070 --> 00:04:11,410
purpose and purpose if you check the

00:04:09,220 --> 00:04:14,680
world itself its it's actually question

00:04:11,410 --> 00:04:18,040
why do I do something why I mean this

00:04:14,680 --> 00:04:18,940
thing exists and if the answer to this

00:04:18,040 --> 00:04:21,310
question be

00:04:18,940 --> 00:04:24,490
they can like if you've created

00:04:21,310 --> 00:04:26,200
something animation just because you

00:04:24,490 --> 00:04:28,060
really like fell in love with the

00:04:26,200 --> 00:04:30,640
technology or you just learn some new

00:04:28,060 --> 00:04:32,680
cool thing it's like oh right I'm gonna

00:04:30,640 --> 00:04:34,120
throw it in and use it everywhere

00:04:32,680 --> 00:04:35,500
you've probably seen websites where

00:04:34,120 --> 00:04:38,440
people like get really excited about

00:04:35,500 --> 00:04:40,690
like animating text and they're like wow

00:04:38,440 --> 00:04:43,030
that's so awesome but then like once you

00:04:40,690 --> 00:04:45,970
really try to use it to read the text or

00:04:43,030 --> 00:04:48,400
it's getting really annoying so answer

00:04:45,970 --> 00:04:51,310
to this question why do you do something

00:04:48,400 --> 00:04:53,260
should be because it helps users and if

00:04:51,310 --> 00:04:55,510
they answer like this then you're on the

00:04:53,260 --> 00:04:57,610
right track and that's a good answer and

00:04:55,510 --> 00:04:59,560
now I'm going to walk you through a

00:04:57,610 --> 00:05:02,530
couple of things how we could use

00:04:59,560 --> 00:05:04,750
animation to actually help users and the

00:05:02,530 --> 00:05:07,570
first thing is is a really simple thing

00:05:04,750 --> 00:05:09,430
it's helped to orient in space so

00:05:07,570 --> 00:05:12,100
whenever we have an application it

00:05:09,430 --> 00:05:14,110
actually has like different screens and

00:05:12,100 --> 00:05:16,750
but using animation you can communicate

00:05:14,110 --> 00:05:19,180
sort of and build a map in heads of your

00:05:16,750 --> 00:05:21,940
users and and here's an a simple

00:05:19,180 --> 00:05:24,310
animation of like sliding left and right

00:05:21,940 --> 00:05:26,800
and you probably seen it on your on your

00:05:24,310 --> 00:05:29,080
mobile phone like you know home screen

00:05:26,800 --> 00:05:31,570
and you probably notice that you always

00:05:29,080 --> 00:05:34,030
have like right edge and left edge and

00:05:31,570 --> 00:05:35,950
you cannot only know cycle through the

00:05:34,030 --> 00:05:37,840
screens this is because you you really

00:05:35,950 --> 00:05:40,510
want to build this map and it's it's

00:05:37,840 --> 00:05:43,060
like in real world you you have to you

00:05:40,510 --> 00:05:44,770
know connect the dots and example would

00:05:43,060 --> 00:05:49,120
be something like this this is an

00:05:44,770 --> 00:05:52,120
amazing demo from Tom who he's basically

00:05:49,120 --> 00:05:53,950
using tabs and and by doing simple

00:05:52,120 --> 00:05:55,930
animation like this you're already

00:05:53,950 --> 00:05:58,390
communicating that you have a certain

00:05:55,930 --> 00:06:01,720
hierarchy in your application second

00:05:58,390 --> 00:06:03,550
thing is again hierarchy but but

00:06:01,720 --> 00:06:05,950
different level of art so here I'm

00:06:03,550 --> 00:06:07,780
changing animation a little bit so first

00:06:05,950 --> 00:06:09,760
screen doesn't move anymore and it

00:06:07,780 --> 00:06:12,190
communicates slightly different message

00:06:09,760 --> 00:06:13,900
here so we know that one and second

00:06:12,190 --> 00:06:16,030
first and second screen they're on

00:06:13,900 --> 00:06:18,370
different levels so it kind of

00:06:16,030 --> 00:06:20,919
communicates that we probably go in

00:06:18,370 --> 00:06:23,350
deeper into something into details and

00:06:20,919 --> 00:06:25,390
and then we can go back so really simple

00:06:23,350 --> 00:06:27,970
example here with maps where you go back

00:06:25,390 --> 00:06:31,030
and it's this animation kind of shows

00:06:27,970 --> 00:06:34,000
you that it overlays so

00:06:31,030 --> 00:06:37,120
third thing transformations here's an

00:06:34,000 --> 00:06:39,250
example so when things transform they do

00:06:37,120 --> 00:06:45,370
not just like go from one state to

00:06:39,250 --> 00:06:47,500
another Oh does it work yes all right so

00:06:45,370 --> 00:06:50,140
here here I have like an animation that

00:06:47,500 --> 00:06:52,210
shows how you open an item of course you

00:06:50,140 --> 00:06:53,770
could just like you know flesh the

00:06:52,210 --> 00:06:56,860
screen with white and then show the next

00:06:53,770 --> 00:06:59,890
state but then this like transition will

00:06:56,860 --> 00:07:01,450
be lost and and of course user whistled

00:06:59,890 --> 00:07:03,700
wife I don't want to say that you know

00:07:01,450 --> 00:07:06,610
it's it's real bad but by using

00:07:03,700 --> 00:07:09,280
animation you basically tell the story

00:07:06,610 --> 00:07:14,590
that something happened to this to this

00:07:09,280 --> 00:07:17,530
item and you are changing its state all

00:07:14,590 --> 00:07:22,020
right the next one is out this is an

00:07:17,530 --> 00:07:24,550
example again so this is a concept of I

00:07:22,020 --> 00:07:26,850
guess similar to Spotify application and

00:07:24,550 --> 00:07:29,350
you see like how you can use motion to

00:07:26,850 --> 00:07:31,480
communicate that you still you still

00:07:29,350 --> 00:07:34,900
it's basically the same object is just

00:07:31,480 --> 00:07:39,310
changing you just going deeper or going

00:07:34,900 --> 00:07:40,900
back alright so for number four using

00:07:39,310 --> 00:07:44,200
animation you can drive attention and

00:07:40,900 --> 00:07:46,630
this is really cool because again things

00:07:44,200 --> 00:07:48,820
are moving and sometimes you want to

00:07:46,630 --> 00:07:51,640
make sure users following what you're

00:07:48,820 --> 00:07:55,419
doing on the screen and here's an

00:07:51,640 --> 00:07:57,700
example again where you click somewhere

00:07:55,419 --> 00:08:00,430
on the screen then you type a command

00:07:57,700 --> 00:08:03,190
and then this message basically goes

00:08:00,430 --> 00:08:04,870
down and appears up to up there it's not

00:08:03,190 --> 00:08:06,790
continuous animation in this case but

00:08:04,870 --> 00:08:09,820
still it drives attention so I know

00:08:06,790 --> 00:08:12,040
what's happening on the screen and last

00:08:09,820 --> 00:08:15,700
that I'm going to cover here today is

00:08:12,040 --> 00:08:18,580
engage user users and this is a really

00:08:15,700 --> 00:08:20,140
interesting one here's an example that I

00:08:18,580 --> 00:08:22,570
have here you probably seen this it's

00:08:20,140 --> 00:08:24,940
really a famous so you just type a

00:08:22,570 --> 00:08:27,130
password that this guy is like hiding

00:08:24,940 --> 00:08:28,840
hiding eyes when you type in password so

00:08:27,130 --> 00:08:31,210
it's not really helpful if you think

00:08:28,840 --> 00:08:33,610
about this but it gives this the unique

00:08:31,210 --> 00:08:36,789
personality to our application so that

00:08:33,610 --> 00:08:38,890
you know you as a user when you go back

00:08:36,789 --> 00:08:42,010
you like oh there this application has

00:08:38,890 --> 00:08:44,860
this amazing thing that I will remember

00:08:42,010 --> 00:08:48,070
so animations not always have to be

00:08:44,860 --> 00:08:50,709
really productive sometimes they can be

00:08:48,070 --> 00:08:53,110
just fun and and tell a story about who

00:08:50,709 --> 00:08:55,630
we are as a and why we are different

00:08:53,110 --> 00:08:57,490
from others this is an amazing example

00:08:55,630 --> 00:09:00,850
from MailChimp

00:08:57,490 --> 00:09:03,100
so they using this animation to warn you

00:09:00,850 --> 00:09:05,320
that you're going to send email straight

00:09:03,100 --> 00:09:08,310
over 500 people or something and they're

00:09:05,320 --> 00:09:10,930
like put stressing you out a little bit

00:09:08,310 --> 00:09:14,500
which is I mean people allow it right

00:09:10,930 --> 00:09:17,079
just because it makes sense and you know

00:09:14,500 --> 00:09:19,360
I I know that to do something like this

00:09:17,079 --> 00:09:22,029
you really need to have design skills

00:09:19,360 --> 00:09:24,399
and it's how many designs do we have

00:09:22,029 --> 00:09:26,860
here in the room do we have any oh we

00:09:24,399 --> 00:09:31,390
have a couple nice yeah everyone has to

00:09:26,860 --> 00:09:33,160
have a design designer friend amazing so

00:09:31,390 --> 00:09:36,010
but if you don't have design skills it's

00:09:33,160 --> 00:09:39,070
all good you can always try to animate

00:09:36,010 --> 00:09:40,570
cats for example and and people will

00:09:39,070 --> 00:09:44,740
still have fun I guess

00:09:40,570 --> 00:09:47,320
so it's all good so let's quickly recap

00:09:44,740 --> 00:09:49,839
on the first part which is purpose

00:09:47,320 --> 00:09:51,880
animation should serve a purpose so help

00:09:49,839 --> 00:09:54,370
orient space-drive attention engage

00:09:51,880 --> 00:09:58,540
users of course there are more you can

00:09:54,370 --> 00:10:01,660
find whatever whatever makes sense in

00:09:58,540 --> 00:10:05,199
your contacts but you know answer

00:10:01,660 --> 00:10:08,680
because I can is wrong answer okay let's

00:10:05,199 --> 00:10:10,750
go to the next one and this is add a bit

00:10:08,680 --> 00:10:14,920
of meaning and it's interesting part

00:10:10,750 --> 00:10:17,800
because here we need to talk about what

00:10:14,920 --> 00:10:19,720
what actually what does it even mean to

00:10:17,800 --> 00:10:22,630
have meaningful animation here I have an

00:10:19,720 --> 00:10:25,630
example this is scroll animation and we

00:10:22,630 --> 00:10:28,060
all get used to the way our other mobile

00:10:25,630 --> 00:10:30,880
phone scrolling that as soon as someone

00:10:28,060 --> 00:10:32,589
is like messing it up a little bit you

00:10:30,880 --> 00:10:35,079
know like when when someone is like

00:10:32,589 --> 00:10:38,110
changing behavior just slightly it's

00:10:35,079 --> 00:10:40,540
it's all of a sudden feels feels weird

00:10:38,110 --> 00:10:42,519
feels bad you're just like what's wrong

00:10:40,540 --> 00:10:45,370
with my scroll here and that's exactly

00:10:42,519 --> 00:10:48,910
what what is meaningful for people

00:10:45,370 --> 00:10:51,399
because if in this particular example my

00:10:48,910 --> 00:10:54,790
phone built for a certain understanding

00:10:51,399 --> 00:10:57,819
of how scroll should behave how objects

00:10:54,790 --> 00:10:58,180
supposed to move on the screen and we

00:10:57,819 --> 00:11:00,370
have

00:10:58,180 --> 00:11:05,200
to learn and fulfill those expectations

00:11:00,370 --> 00:11:07,810
and there are three things that we have

00:11:05,200 --> 00:11:11,410
to take care of first is easing and I

00:11:07,810 --> 00:11:14,080
already seen this one in the video so at

00:11:11,410 --> 00:11:16,720
IBM we are defining two ways first is

00:11:14,080 --> 00:11:20,200
productive when we don't want to mess

00:11:16,720 --> 00:11:22,660
with with user user productivity it

00:11:20,200 --> 00:11:25,480
means animation is there but it's not

00:11:22,660 --> 00:11:27,459
distracting it's it's it enables people

00:11:25,480 --> 00:11:29,230
to be productive and second is

00:11:27,459 --> 00:11:31,360
expressive it's time where we want to

00:11:29,230 --> 00:11:33,880
celebrate a certain moments in the in

00:11:31,360 --> 00:11:35,440
the user journey and user flow and I

00:11:33,880 --> 00:11:37,600
have a couple of for example so here we

00:11:35,440 --> 00:11:40,089
have a toggle button or primary button

00:11:37,600 --> 00:11:42,670
animation then we have let's say an a

00:11:40,089 --> 00:11:44,560
toaster and a notification that kind of

00:11:42,670 --> 00:11:48,640
like celebrates something or might

00:11:44,560 --> 00:11:51,790
sometimes bring an error I guess but we

00:11:48,640 --> 00:11:55,390
will use a different kind of techniques

00:11:51,790 --> 00:11:58,510
here and the second thing that I want to

00:11:55,390 --> 00:12:01,779
mention is speed and duration and again

00:11:58,510 --> 00:12:05,410
when we move something on the screen it

00:12:01,779 --> 00:12:08,770
kind of has has to follow some physics

00:12:05,410 --> 00:12:11,470
law I guess not one-to-one obviously but

00:12:08,770 --> 00:12:14,620
if object is bigger then it moves

00:12:11,470 --> 00:12:17,110
slightly slower if if distance is bigger

00:12:14,620 --> 00:12:20,020
then it has to it has to take a little

00:12:17,110 --> 00:12:21,640
bit more time to get from A to B so here

00:12:20,020 --> 00:12:24,520
we have two dropdowns one is like

00:12:21,640 --> 00:12:25,870
smaller second is bigger and we know

00:12:24,520 --> 00:12:28,959
that you know they're growing in

00:12:25,870 --> 00:12:31,660
different Hayter is going to be

00:12:28,959 --> 00:12:34,000
different so we the right one takes more

00:12:31,660 --> 00:12:36,490
time to actually open and that makes it

00:12:34,000 --> 00:12:40,029
a little bit more natural to two and the

00:12:36,490 --> 00:12:42,040
end users here we have IBM motion

00:12:40,029 --> 00:12:44,470
generator so this is an open source tool

00:12:42,040 --> 00:12:46,900
where you can basically play with

00:12:44,470 --> 00:12:49,450
different values here I'm kind of like

00:12:46,900 --> 00:12:52,810
saying all right if distance is bigger

00:12:49,450 --> 00:12:55,450
let's say 26 it shows me the duration

00:12:52,810 --> 00:12:58,510
for the animation a an easing curve

00:12:55,450 --> 00:13:00,640
should be different I mean curve stays

00:12:58,510 --> 00:13:03,520
the same though but like duration is

00:13:00,640 --> 00:13:07,870
growing so that animation is still feels

00:13:03,520 --> 00:13:10,900
feels good and the last one that I want

00:13:07,870 --> 00:13:12,080
to cover is choreography and probably

00:13:10,900 --> 00:13:14,899
think about something like that

00:13:12,080 --> 00:13:17,089
but that's not the case we are not going

00:13:14,899 --> 00:13:19,310
to talk about dancing here but it's

00:13:17,089 --> 00:13:21,769
still valid like the way people dance

00:13:19,310 --> 00:13:25,070
it still affects how we define courtesy

00:13:21,769 --> 00:13:27,769
so when when we animate something as

00:13:25,070 --> 00:13:29,690
engineers we always want to do something

00:13:27,769 --> 00:13:32,390
like this we want to use straight lines

00:13:29,690 --> 00:13:35,060
because it's it's the most you know

00:13:32,390 --> 00:13:37,910
efficient way to get from point A to

00:13:35,060 --> 00:13:41,209
point B let's like how we think and and

00:13:37,910 --> 00:13:44,060
it's totally fine but when you think

00:13:41,209 --> 00:13:46,670
about art about like how people draw how

00:13:44,060 --> 00:13:48,950
people dance you you you won't see

00:13:46,670 --> 00:13:51,649
straight lines when you think about how

00:13:48,950 --> 00:13:53,630
how objects you know fall from the table

00:13:51,649 --> 00:13:57,050
or something like that there won't be a

00:13:53,630 --> 00:13:59,510
straight line so sometimes we have to

00:13:57,050 --> 00:14:01,610
like break this you know mental model

00:13:59,510 --> 00:14:03,769
that we have as engineers and and really

00:14:01,610 --> 00:14:05,450
think alright maybe in this case it

00:14:03,769 --> 00:14:11,990
makes sense to move things slightly

00:14:05,450 --> 00:14:15,680
different and you know if I inserted the

00:14:11,990 --> 00:14:17,540
interesting slide where how how to how

00:14:15,680 --> 00:14:20,990
to debug all these things like how do

00:14:17,540 --> 00:14:23,839
you be back speed and and motion paths

00:14:20,990 --> 00:14:27,860
and others things in in chrome tools so

00:14:23,839 --> 00:14:30,680
they have amazing animation tab and he

00:14:27,860 --> 00:14:32,329
there you can basically see all the

00:14:30,680 --> 00:14:35,810
animations that you have on the page and

00:14:32,329 --> 00:14:37,880
here I'm running animation at 10% speed

00:14:35,810 --> 00:14:40,490
do you even see it all right you see and

00:14:37,880 --> 00:14:42,860
then you can go to 100% and and here you

00:14:40,490 --> 00:14:46,160
see that I'm have both transition bounce

00:14:42,860 --> 00:14:48,800
rolling shadow all this stuff and you

00:14:46,160 --> 00:14:50,810
just can drag and explore how it's going

00:14:48,800 --> 00:14:53,630
to look because here as you can see I'm

00:14:50,810 --> 00:14:55,910
using shadow when when ball is like

00:14:53,630 --> 00:14:57,800
getting closer to the ground and it's

00:14:55,910 --> 00:14:59,959
really hard to like to get this right

00:14:57,800 --> 00:15:02,360
just because as soon as it's like

00:14:59,959 --> 00:15:03,829
slightly off people people start to feel

00:15:02,360 --> 00:15:06,890
it like something wrong with this thing

00:15:03,829 --> 00:15:08,720
and and this great way to do to check

00:15:06,890 --> 00:15:13,660
check how to make it right

00:15:08,720 --> 00:15:17,899
all right so we are done with a

00:15:13,660 --> 00:15:20,980
meaningful part and so here is a short

00:15:17,899 --> 00:15:22,130
recap animations should look and feel

00:15:20,980 --> 00:15:24,350
organically

00:15:22,130 --> 00:15:25,010
keep in mind easing speed and duration

00:15:24,350 --> 00:15:27,399
and

00:15:25,010 --> 00:15:30,260
agra fee and now we are getting to the

00:15:27,399 --> 00:15:31,940
interesting part because we all here

00:15:30,260 --> 00:15:35,120
it's we energy s right so we have to

00:15:31,940 --> 00:15:37,880
talk about javascript so how to surf

00:15:35,120 --> 00:15:42,440
gold with 60fps this is an interesting

00:15:37,880 --> 00:15:45,680
topic and i this is a rendering a pixel

00:15:42,440 --> 00:15:47,990
pipeline that each browser has to go

00:15:45,680 --> 00:15:49,699
through when they when you when you

00:15:47,990 --> 00:15:51,380
animate something so first you have to

00:15:49,699 --> 00:15:53,420
run javascript then you have to

00:15:51,380 --> 00:15:55,810
calculate styles you have to layout

00:15:53,420 --> 00:16:00,440
things you have to paint and compose and

00:15:55,810 --> 00:16:04,070
if you want to get 60fps that means you

00:16:00,440 --> 00:16:07,639
have one second divided by sixty well 16

00:16:04,070 --> 00:16:10,610
milliseconds per frame and sometimes it

00:16:07,639 --> 00:16:12,769
might be hard to get that here I have an

00:16:10,610 --> 00:16:15,579
example so this is a traditional swipe

00:16:12,769 --> 00:16:18,380
to dismiss or swipe to remove

00:16:15,579 --> 00:16:21,800
interaction here where you need to deal

00:16:18,380 --> 00:16:23,540
with you know life you you have to

00:16:21,800 --> 00:16:26,089
calculate each frame based on user input

00:16:23,540 --> 00:16:28,279
and you could you can solve this problem

00:16:26,089 --> 00:16:30,949
in different ways so for example I could

00:16:28,279 --> 00:16:33,709
go and do like position:relative and

00:16:30,949 --> 00:16:35,690
left like left something but that's

00:16:33,709 --> 00:16:39,529
that's wrong way because this this

00:16:35,690 --> 00:16:43,220
property is going to trigger layout

00:16:39,529 --> 00:16:45,410
paint and compose steps in the in the

00:16:43,220 --> 00:16:49,100
pixel pipeline but if we look into

00:16:45,410 --> 00:16:50,899
transform you will see that for four

00:16:49,100 --> 00:16:54,980
different browsers it will only use the

00:16:50,899 --> 00:16:58,670
compose so the trick one is to use cheap

00:16:54,980 --> 00:17:03,199
CSS properties and we basically have to

00:16:58,670 --> 00:17:07,030
its transform and opacity so always try

00:17:03,199 --> 00:17:11,720
to use these two otherwise you will lose

00:17:07,030 --> 00:17:14,600
frames per second and yeah that's that

00:17:11,720 --> 00:17:16,130
stuff I have another example alright so

00:17:14,600 --> 00:17:18,169
but that's the that's the thing you

00:17:16,130 --> 00:17:20,809
basically by using transform and opacity

00:17:18,169 --> 00:17:23,419
your element eliminate two steps in the

00:17:20,809 --> 00:17:24,890
pipeline I have another example it's

00:17:23,419 --> 00:17:26,510
more a little bit more complicated and

00:17:24,890 --> 00:17:29,210
interesting so imagine you have a

00:17:26,510 --> 00:17:31,820
problem like this you have a list and

00:17:29,210 --> 00:17:34,760
then you want to you know you you tap on

00:17:31,820 --> 00:17:38,179
on an item and then it falls down to you

00:17:34,760 --> 00:17:38,680
know some other lists and basically you

00:17:38,179 --> 00:17:39,850
don't know how

00:17:38,680 --> 00:17:41,620
many things you have you don't know

00:17:39,850 --> 00:17:44,680
where it's going to land because there

00:17:41,620 --> 00:17:48,640
might be items below or not and let's

00:17:44,680 --> 00:17:51,700
try to solve this problem so have you

00:17:48,640 --> 00:17:54,310
have you ever heard about flip yes yes

00:17:51,700 --> 00:17:58,990
no yeah awesome some people who are so

00:17:54,310 --> 00:18:02,740
this is a not a new idea it's a it means

00:17:58,990 --> 00:18:08,890
first last in wordplay from Paulette

00:18:02,740 --> 00:18:12,910
Alevis yes so ideas is real simple you

00:18:08,890 --> 00:18:14,680
basically you pre calculate everything

00:18:12,910 --> 00:18:18,160
in advance and then you run your

00:18:14,680 --> 00:18:20,410
animation sounds simple let's let's go

00:18:18,160 --> 00:18:22,240
to the next step why do you do we even

00:18:20,410 --> 00:18:25,630
want to do that because there is another

00:18:22,240 --> 00:18:28,570
acronym here called rail it's it's a

00:18:25,630 --> 00:18:31,510
research from Google that says how much

00:18:28,570 --> 00:18:35,800
time do we have for each thing it so

00:18:31,510 --> 00:18:38,980
they did study how much time we have for

00:18:35,800 --> 00:18:41,710
it for response it's 500 milliseconds so

00:18:38,980 --> 00:18:45,940
use if if you interact with an object on

00:18:41,710 --> 00:18:48,610
the screen and response on the screen

00:18:45,940 --> 00:18:50,680
has to arrive within 50 milliseconds

00:18:48,610 --> 00:18:52,170
otherwise user will notice that

00:18:50,680 --> 00:18:55,330
something wrong

00:18:52,170 --> 00:18:58,330
animation ten milliseconds again from 60

00:18:55,330 --> 00:19:00,640
fps idling maximized that's not

00:18:58,330 --> 00:19:02,830
important I mean we have to load content

00:19:00,640 --> 00:19:04,750
under five seconds but what we

00:19:02,830 --> 00:19:08,110
interested in is this response time so

00:19:04,750 --> 00:19:10,870
this 15 milliseconds time frame that we

00:19:08,110 --> 00:19:14,380
have when user you know clicks on a

00:19:10,870 --> 00:19:16,960
mouse or or taps on the on the screen we

00:19:14,380 --> 00:19:19,330
have this time that we can use to do

00:19:16,960 --> 00:19:20,710
some math if we want to do animations so

00:19:19,330 --> 00:19:23,620
that's exactly what we're going to use

00:19:20,710 --> 00:19:25,180
in in in the example so let's say we

00:19:23,620 --> 00:19:28,120
have this simple idea can you see it I

00:19:25,180 --> 00:19:31,780
can scroll a bit I think better all

00:19:28,120 --> 00:19:34,210
right so we have a list and we have some

00:19:31,780 --> 00:19:36,400
items that that's Liz that I've had

00:19:34,210 --> 00:19:38,440
before and then we have a panel where

00:19:36,400 --> 00:19:41,230
this thing will going to you know fall

00:19:38,440 --> 00:19:43,960
down so step number one we we need to

00:19:41,230 --> 00:19:47,290
you know subscribe for the events add

00:19:43,960 --> 00:19:49,660
eventlistener for each item and then you

00:19:47,290 --> 00:19:51,780
know I have this handle tap a function

00:19:49,660 --> 00:19:55,680
that I'm going to describe a bit later

00:19:51,780 --> 00:19:58,470
so step number one when we when you tap

00:19:55,680 --> 00:20:02,280
on an item we basically create a new div

00:19:58,470 --> 00:20:04,860
and we write the way append it to the

00:20:02,280 --> 00:20:06,270
panel so it goes right here and some

00:20:04,860 --> 00:20:09,150
people might say whoa whoa whoa whoa

00:20:06,270 --> 00:20:11,520
like is it going to like flicker on the

00:20:09,150 --> 00:20:13,200
screens so that like you have it there

00:20:11,520 --> 00:20:16,560
and then it's junk jump somewhere else

00:20:13,200 --> 00:20:19,770
answer is no just because javascript is

00:20:16,560 --> 00:20:21,390
single threaded right so unless you when

00:20:19,770 --> 00:20:23,760
you run JavaScript nothing is going to

00:20:21,390 --> 00:20:26,760
render unless you done so you can change

00:20:23,760 --> 00:20:30,480
properties you can do whatever nothing

00:20:26,760 --> 00:20:33,030
gonna appear on the screen yet and so

00:20:30,480 --> 00:20:35,700
let's go and the next one that's the

00:20:33,030 --> 00:20:41,040
main trick of the flip animation so now

00:20:35,700 --> 00:20:43,470
I have my target as original element

00:20:41,040 --> 00:20:44,820
that I tapped on this is target and then

00:20:43,470 --> 00:20:47,160
I have new element that they just

00:20:44,820 --> 00:20:49,560
created and appended to the panel so we

00:20:47,160 --> 00:20:51,810
have those two elements they're not

00:20:49,560 --> 00:20:54,570
still on the screen but they're in the

00:20:51,810 --> 00:20:57,600
don't rewrite so that means I can force

00:20:54,570 --> 00:21:00,470
browser to get give me it their

00:20:57,600 --> 00:21:02,970
positions so here I have start and end

00:21:00,470 --> 00:21:05,850
nothing on the screen again but they

00:21:02,970 --> 00:21:06,240
have positions I forced browser to do

00:21:05,850 --> 00:21:09,120
this

00:21:06,240 --> 00:21:11,370
I forced browser to run style and layout

00:21:09,120 --> 00:21:13,380
which is expensive but it's fine because

00:21:11,370 --> 00:21:18,210
we have 50 milliseconds that user are

00:21:13,380 --> 00:21:20,820
willing to wait and I I get back values

00:21:18,210 --> 00:21:23,220
for the start and end position and then

00:21:20,820 --> 00:21:25,890
can do all the math right now so I do

00:21:23,220 --> 00:21:29,900
start axe start wide and X and white and

00:21:25,890 --> 00:21:34,170
I can build a busy a curve to basically

00:21:29,900 --> 00:21:38,730
show the line that is going to be a line

00:21:34,170 --> 00:21:40,890
which the object going to you so busy a

00:21:38,730 --> 00:21:43,520
curve here I use like start X start

00:21:40,890 --> 00:21:47,160
white this is all simple it's it's

00:21:43,520 --> 00:21:50,580
basically you have four points that you

00:21:47,160 --> 00:21:54,120
need to describe a BCG and that's how

00:21:50,580 --> 00:21:55,950
you define the curve I'm using based on

00:21:54,120 --> 00:21:58,050
the calculations that I do I build a

00:21:55,950 --> 00:22:00,570
curve like this and why do I need this

00:21:58,050 --> 00:22:01,110
because there is an amazing thing in CSS

00:22:00,570 --> 00:22:04,520
called

00:22:01,110 --> 00:22:07,940
of that path so where I can specify and

00:22:04,520 --> 00:22:10,429
path in SVG style and then I just use

00:22:07,940 --> 00:22:13,270
keyframe animations and my object will

00:22:10,429 --> 00:22:16,970
go along the line that I define before

00:22:13,270 --> 00:22:18,620
so really simple and then really easy to

00:22:16,970 --> 00:22:20,750
do all right

00:22:18,620 --> 00:22:22,460
now let's let's actually complete the

00:22:20,750 --> 00:22:24,679
animation that we wanted to build so

00:22:22,460 --> 00:22:26,720
first I need to calculate the ratio so

00:22:24,679 --> 00:22:28,820
between start and end position you

00:22:26,720 --> 00:22:31,040
mention you probably notice that it gets

00:22:28,820 --> 00:22:33,080
smaller when it falls down so I need to

00:22:31,040 --> 00:22:34,700
calculate what's the ratio between start

00:22:33,080 --> 00:22:38,030
and end it's really simple

00:22:34,700 --> 00:22:40,250
I used rich I divide with off start but

00:22:38,030 --> 00:22:44,929
with of end and then I apply scale

00:22:40,250 --> 00:22:48,290
transform with ratio I apply my path as

00:22:44,929 --> 00:22:49,910
offset path and then I define animation

00:22:48,290 --> 00:22:52,130
and then I have something like this

00:22:49,910 --> 00:22:55,520
somewhere in background in CSS saying

00:22:52,130 --> 00:22:57,170
okay from 0 to 1 to 50% just scale it

00:22:55,520 --> 00:22:59,179
back to the 1

00:22:57,170 --> 00:23:01,400
which is like from from bigger to

00:22:59,179 --> 00:23:05,030
smaller because original thing for for a

00:23:01,400 --> 00:23:08,900
new element is a smaller version of it

00:23:05,030 --> 00:23:11,809
and then for the hundred-percent go from

00:23:08,900 --> 00:23:13,790
0 offset distance 200 percent of some

00:23:11,809 --> 00:23:16,600
distance so what's going to give us is

00:23:13,790 --> 00:23:20,150
basically this kind of animation where

00:23:16,600 --> 00:23:22,309
we have things falling down based on and

00:23:20,150 --> 00:23:24,980
that's again like calculates dynamically

00:23:22,309 --> 00:23:27,740
based on available space in the in the

00:23:24,980 --> 00:23:30,890
bottom panel however this solution has a

00:23:27,740 --> 00:23:32,960
problem what if what if I have an object

00:23:30,890 --> 00:23:35,360
that is really really close let's say

00:23:32,960 --> 00:23:37,880
I'm tapping on the last item then the

00:23:35,360 --> 00:23:39,950
distance to the today to the destination

00:23:37,880 --> 00:23:42,020
will be much smaller

00:23:39,950 --> 00:23:44,870
however timing will be the same so it

00:23:42,020 --> 00:23:46,850
won't fill naturally let's let's try to

00:23:44,870 --> 00:23:49,880
solve this problem by using web

00:23:46,850 --> 00:23:54,350
animations API and here I'm using I'm

00:23:49,880 --> 00:23:56,690
using as busy a GS library to basically

00:23:54,350 --> 00:23:59,390
build paths and it gives me this magic

00:23:56,690 --> 00:24:02,150
length function that returns how much

00:23:59,390 --> 00:24:04,790
the how long I need to go along this

00:24:02,150 --> 00:24:08,240
line to get to the final destination so

00:24:04,790 --> 00:24:11,030
path docklands give me a distance and

00:24:08,240 --> 00:24:13,669
the next step I'm using magic function

00:24:11,030 --> 00:24:17,570
get duration we have we have this

00:24:13,669 --> 00:24:18,290
function and IBM Motion open source

00:24:17,570 --> 00:24:20,210
package

00:24:18,290 --> 00:24:21,620
you can check that out it doesn't have

00:24:20,210 --> 00:24:23,810
the same signature it doesn't have the

00:24:21,620 --> 00:24:25,880
same parameters I'm just using here I'm

00:24:23,810 --> 00:24:28,630
just showing you that let's say we have

00:24:25,880 --> 00:24:32,090
a function that based on distance and

00:24:28,630 --> 00:24:35,810
size of an object gives us duration

00:24:32,090 --> 00:24:38,330
basically timing again I it racial and

00:24:35,810 --> 00:24:41,420
then I'm you this is a web animation API

00:24:38,330 --> 00:24:44,630
syntax it's not jQuery or something you

00:24:41,420 --> 00:24:48,020
basically have an don't element you

00:24:44,630 --> 00:24:51,140
write dot animate and then you say

00:24:48,020 --> 00:24:53,720
transform array from scale ratio to

00:24:51,140 --> 00:24:55,610
scale one and then you say scale

00:24:53,720 --> 00:24:57,770
duration this is basically the time

00:24:55,610 --> 00:25:00,410
right how long does it take to do this

00:24:57,770 --> 00:25:02,950
animation here I have the scale

00:25:00,410 --> 00:25:06,590
animation finish so there will be

00:25:02,950 --> 00:25:08,540
promises and other better better things

00:25:06,590 --> 00:25:10,490
coming in for web animations API

00:25:08,540 --> 00:25:13,400
currently they are not available so you

00:25:10,490 --> 00:25:17,900
use this weird callback but yeah it's

00:25:13,400 --> 00:25:20,570
it's it's improving so here I'm waiting

00:25:17,900 --> 00:25:22,700
for first animation to complete and then

00:25:20,570 --> 00:25:25,850
I animate offset distance from zero to

00:25:22,700 --> 00:25:28,430
100% and then I use a duration and

00:25:25,850 --> 00:25:31,040
easing and fill that you know we pre

00:25:28,430 --> 00:25:34,640
calculated before and what we get is

00:25:31,040 --> 00:25:38,600
this so now you see that doesn't matter

00:25:34,640 --> 00:25:42,050
how how far or how close the object is

00:25:38,600 --> 00:25:43,700
it's still first like line is correct so

00:25:42,050 --> 00:25:46,120
it like goes to the right or to the left

00:25:43,700 --> 00:25:49,360
and and and timing speed and duration

00:25:46,120 --> 00:25:51,920
still makes sense because it's still

00:25:49,360 --> 00:25:53,960
relevant today to the distance that you

00:25:51,920 --> 00:25:58,250
have the object have to travel has to

00:25:53,960 --> 00:26:00,700
travel all right so back bad news so off

00:25:58,250 --> 00:26:05,590
that pass is not that

00:26:00,700 --> 00:26:08,450
yeah it's situation is pretty big bad

00:26:05,590 --> 00:26:10,160
with different browsers we are using

00:26:08,450 --> 00:26:13,160
electrons so we're building desktop

00:26:10,160 --> 00:26:15,560
application so it's it's okay for us but

00:26:13,160 --> 00:26:18,140
for a different browser however there

00:26:15,560 --> 00:26:20,780
are libraries that have workaround so

00:26:18,140 --> 00:26:24,080
you can use something like and in my GS

00:26:20,780 --> 00:26:27,350
or other libraries that have polyfills

00:26:24,080 --> 00:26:30,020
for that web animations API slightly

00:26:27,350 --> 00:26:32,210
better it's not yet complete it's it's

00:26:30,020 --> 00:26:35,120
still work-in-progress but many

00:26:32,210 --> 00:26:40,190
things are there much more coming in

00:26:35,120 --> 00:26:43,550
soon really excited about that one all

00:26:40,190 --> 00:26:47,000
right what if your your laptop is still

00:26:43,550 --> 00:26:49,130
hot what do you do you open your Chrome

00:26:47,000 --> 00:26:51,830
performance tab that's the place where

00:26:49,130 --> 00:26:54,500
you see all the all the problems that's

00:26:51,830 --> 00:26:57,890
how you do back animations here I this

00:26:54,500 --> 00:27:00,650
green line means I get 60fps everywhere

00:26:57,890 --> 00:27:02,420
which is which is great so in case of

00:27:00,650 --> 00:27:04,490
troubles you will just see you let it's

00:27:02,420 --> 00:27:06,620
goes yellows yellow or red and you can

00:27:04,490 --> 00:27:10,250
check what kind of functions will take

00:27:06,620 --> 00:27:16,700
the most time and prevent you from

00:27:10,250 --> 00:27:19,760
rendering 60fps one thing but is this

00:27:16,700 --> 00:27:23,690
CSS property called will change it's

00:27:19,760 --> 00:27:26,090
used wisely you see see it's potentially

00:27:23,690 --> 00:27:29,300
star increases the performance and with

00:27:26,090 --> 00:27:31,670
any star tags there is like a long tiny

00:27:29,300 --> 00:27:34,760
font thing saying like don't use it

00:27:31,670 --> 00:27:37,550
please like or stuff like that so we'll

00:27:34,760 --> 00:27:39,860
change basically a hint that you can

00:27:37,550 --> 00:27:41,570
give to your browser that hey you know

00:27:39,860 --> 00:27:44,330
what we are going to animate transform

00:27:41,570 --> 00:27:45,980
for this element so maybe you could put

00:27:44,330 --> 00:27:49,790
them on different layers which isn't

00:27:45,980 --> 00:27:51,860
which requires more memory but it's up

00:27:49,790 --> 00:27:54,590
to you so you never know if browser will

00:27:51,860 --> 00:27:57,800
take it into consideration or not but

00:27:54,590 --> 00:27:59,240
when you do that you could actually harm

00:27:57,800 --> 00:28:02,090
your performance if you don't do it

00:27:59,240 --> 00:28:03,980
wisely so idea is that you use it only

00:28:02,090 --> 00:28:06,440
when you are like desperate and you

00:28:03,980 --> 00:28:08,360
remove it right away after you don't

00:28:06,440 --> 00:28:12,220
need it anymore so be careful with that

00:28:08,360 --> 00:28:15,800
but might be helpful so quick recap

00:28:12,220 --> 00:28:19,280
animate cheap CSS properties like -

00:28:15,800 --> 00:28:21,890
basic opacity transform really easy use

00:28:19,280 --> 00:28:23,510
first hundred milliseconds right here

00:28:21,890 --> 00:28:25,220
hundred milliseconds because actually

00:28:23,510 --> 00:28:27,680
research says 100 milliseconds but

00:28:25,220 --> 00:28:29,720
because of browser takes some time for

00:28:27,680 --> 00:28:32,560
different things to response to user to

00:28:29,720 --> 00:28:35,480
actually give you give JavaScript the

00:28:32,560 --> 00:28:39,350
rights to answer you have actually have

00:28:35,480 --> 00:28:41,930
50 milliseconds but yeah I debugging

00:28:39,350 --> 00:28:45,590
performance animation tabs test on

00:28:41,930 --> 00:28:47,600
average devices so yeah it's not you

00:28:45,590 --> 00:28:51,710
if something runs quickly on your i7

00:28:47,600 --> 00:28:53,840
thing latest high-end PC that doesn't

00:28:51,710 --> 00:28:56,120
mean anything you need to test it on

00:28:53,840 --> 00:28:59,630
average device and you know mobile

00:28:56,120 --> 00:29:02,780
device some average Android device with

00:28:59,630 --> 00:29:05,690
all the weight will be nice some useful

00:29:02,780 --> 00:29:08,660
links so this is motion guide from

00:29:05,690 --> 00:29:10,700
carbon desire system understanding

00:29:08,660 --> 00:29:13,280
motion from material design from Google

00:29:10,700 --> 00:29:16,970
amazing material motion manifest so

00:29:13,280 --> 00:29:20,150
great article on medium and a couple of

00:29:16,970 --> 00:29:24,230
more articles so yeah that's great great

00:29:20,150 --> 00:29:26,980
things to read let's bring your eyes to

00:29:24,230 --> 00:29:26,980

YouTube URL: https://www.youtube.com/watch?v=bhKy8aUtmTA


