Title: ViennaJS, Willhaben Markup Language WHML, May 2018
Publication date: 2018-05-31
Playlist: viennaJS
Description: 
	Talk by AdriÃ¡n Bolonio

We usually associate changes in the UI with frontend developers, but that's not always true. At willhaben we have developed a new markup language that helped us to decouple the UI from the frontend team, empowering the API devs to have the knowledge as well for the UI, as well as the project managers. In my talk I will show you the code of an app developed with the open source tool kit from SUI (Schibted User Interface) and the new WHML (willhaben markup language), so you can see how we build our user interfaces dynamically from an API.
Captions: 
	00:00:00,030 --> 00:00:08,160
okay so welcome everyone to the DB

00:00:03,720 --> 00:00:11,400
energy s my name is as Robin said

00:00:08,160 --> 00:00:14,309
Adrienne or Adrienne Vilonia I'm from

00:00:11,400 --> 00:00:17,460
Spain I'm a front-end developer at bill

00:00:14,309 --> 00:00:22,350
Hammond and you can find me on Twitter

00:00:17,460 --> 00:00:24,960
or github or Instagram same user so what

00:00:22,350 --> 00:00:26,580
I'm gonna talk about today is a problem

00:00:24,960 --> 00:00:30,330
that we had a bill Hammond when we were

00:00:26,580 --> 00:00:33,450
developing a new project so in the real

00:00:30,330 --> 00:00:35,640
state ad insertion in the mobile version

00:00:33,450 --> 00:00:37,290
or apps I use in Android the three

00:00:35,640 --> 00:00:39,420
platform that you can use in a mobile

00:00:37,290 --> 00:00:46,649
phone you have different categories like

00:00:39,420 --> 00:00:50,520
house flat land or like holidays flat or

00:00:46,649 --> 00:00:53,670
house so you have some common elements

00:00:50,520 --> 00:00:57,180
in the forms but every category has a

00:00:53,670 --> 00:00:59,430
different layout and these continues so

00:00:57,180 --> 00:01:01,649
the whole forum is different for flat

00:00:59,430 --> 00:01:03,420
you have renting so for renting you have

00:01:01,649 --> 00:01:05,339
renting price for selling you have

00:01:03,420 --> 00:01:08,100
selling price for land you don't have

00:01:05,339 --> 00:01:11,130
rooms so different forms so we didn't

00:01:08,100 --> 00:01:13,140
want to hire code any form or any logic

00:01:11,130 --> 00:01:16,799
in different in the client side in the

00:01:13,140 --> 00:01:19,530
front end so what we ideally want is to

00:01:16,799 --> 00:01:24,030
have a user choosing their category

00:01:19,530 --> 00:01:27,540
passing to a markup API to set how do we

00:01:24,030 --> 00:01:29,759
have to to display the form do some

00:01:27,540 --> 00:01:33,299
magic and then you have the correct form

00:01:29,759 --> 00:01:35,549
in your phone so what we created was the

00:01:33,299 --> 00:01:38,909
wheel hub and markup language or as we

00:01:35,549 --> 00:01:43,170
call oh okay I hope I hope you can you

00:01:38,909 --> 00:01:44,820
can see it so every node of our Bahama L

00:01:43,170 --> 00:01:48,600
so the wheel hub market language has

00:01:44,820 --> 00:01:51,090
three main properties so one is type who

00:01:48,600 --> 00:01:55,649
defines only one element type in this

00:01:51,090 --> 00:01:57,390
case is an input properties is a key

00:01:55,649 --> 00:01:59,100
value so for example the key value pair

00:01:57,390 --> 00:02:01,079
to be sent to the API is called

00:01:59,100 --> 00:02:03,299
attribute key in this case it's brokers

00:02:01,079 --> 00:02:05,969
last name colon zero that means is the

00:02:03,299 --> 00:02:08,929
name of the user in these cases I

00:02:05,969 --> 00:02:13,950
require not to require but read-only

00:02:08,929 --> 00:02:17,310
field and the type is text so the

00:02:13,950 --> 00:02:20,040
kind of things allows reuse of types in

00:02:17,310 --> 00:02:22,050
in that differs only marginally and we

00:02:20,040 --> 00:02:24,300
will see this in later in an example and

00:02:22,050 --> 00:02:26,640
you have children and this is a

00:02:24,300 --> 00:02:28,290
recursive structure you can have several

00:02:26,640 --> 00:02:30,900
children and your children can have

00:02:28,290 --> 00:02:32,790
different children and in this case for

00:02:30,900 --> 00:02:36,420
example one children is the placeholder

00:02:32,790 --> 00:02:40,680
of the of the input so what information

00:02:36,420 --> 00:02:43,049
is not sent by the server so any patents

00:02:40,680 --> 00:02:46,590
anymore there are any color any other

00:02:43,049 --> 00:02:49,799
layout information like you will imagine

00:02:46,590 --> 00:02:52,200
in a layout form labeled positions or

00:02:49,799 --> 00:02:54,360
title style if it's bold or not bold or

00:02:52,200 --> 00:02:56,489
the hint X if it has to be smaller or

00:02:54,360 --> 00:02:57,599
bigger so where do we have to take this

00:02:56,489 --> 00:03:00,329
information from what is this

00:02:57,599 --> 00:03:02,190
information coming from so everything we

00:03:00,329 --> 00:03:04,650
believe that everything should be in

00:03:02,190 --> 00:03:06,870
this structure of the markup language so

00:03:04,650 --> 00:03:09,299
that means if the type we said there an

00:03:06,870 --> 00:03:11,640
example that the type was text so if the

00:03:09,299 --> 00:03:14,310
type is money then the label has ended

00:03:11,640 --> 00:03:16,019
isn't the left side or the type units in

00:03:14,310 --> 00:03:18,000
the right side so I will show you an

00:03:16,019 --> 00:03:20,040
example for example type money

00:03:18,000 --> 00:03:22,380
we know that the label is in their right

00:03:20,040 --> 00:03:24,870
side in the left side and all the times

00:03:22,380 --> 00:03:28,859
money is in the left side and please in

00:03:24,870 --> 00:03:32,030
Austria type you need we want the label

00:03:28,859 --> 00:03:36,209
in the right side type number only

00:03:32,030 --> 00:03:38,940
allows numbers tape text allows every

00:03:36,209 --> 00:03:43,380
character every information we know it

00:03:38,940 --> 00:03:46,319
by the markup language so we we talk

00:03:43,380 --> 00:03:48,989
about reuse of types so this is two it's

00:03:46,319 --> 00:03:51,630
two structures with the same type which

00:03:48,989 --> 00:03:54,120
is input but they are different again

00:03:51,630 --> 00:03:55,769
type unit they have their own attribute

00:03:54,120 --> 00:03:57,569
key so this is the key that we have to

00:03:55,769 --> 00:04:00,780
send to the API if you want to save the

00:03:57,569 --> 00:04:03,780
the element in the in the database or in

00:04:00,780 --> 00:04:06,450
the API but different different so this

00:04:03,780 --> 00:04:08,480
is required this is the has a max length

00:04:06,450 --> 00:04:11,760
of 24 sample and this one doesn't have

00:04:08,480 --> 00:04:13,650
these have two children or each has two

00:04:11,760 --> 00:04:16,049
children one is the place holder and one

00:04:13,650 --> 00:04:18,389
is the unit so you can see I don't know

00:04:16,049 --> 00:04:21,289
how to yeah okay perfect so you can see

00:04:18,389 --> 00:04:25,500
that this place holder is this one and

00:04:21,289 --> 00:04:27,300
the unit is this unit so everything

00:04:25,500 --> 00:04:34,699
comes in the markup

00:04:27,300 --> 00:04:37,530
everything so a slightly more complex

00:04:34,699 --> 00:04:39,810
element so it's a select we don't we

00:04:37,530 --> 00:04:42,599
didn't want to make it drop-down select

00:04:39,810 --> 00:04:45,090
because in the use in the mobile phone

00:04:42,599 --> 00:04:47,220
every Android makes it different

00:04:45,090 --> 00:04:49,530
as an iOS or every browser makes it

00:04:47,220 --> 00:04:52,110
render different and drop-down or select

00:04:49,530 --> 00:04:54,900
so we wanted to make it model that you

00:04:52,110 --> 00:04:57,629
can choose so the label goes in the

00:04:54,900 --> 00:04:59,849
title then it's an option so the

00:04:57,629 --> 00:05:03,030
children is all the options so you can

00:04:59,849 --> 00:05:05,190
see that every row is an option this

00:05:03,030 --> 00:05:07,349
selects is multiple that means we need

00:05:05,190 --> 00:05:08,969
to render checkbox instead of if instead

00:05:07,349 --> 00:05:12,120
of radio buttons if it's single

00:05:08,969 --> 00:05:16,560
selection and the label of every option

00:05:12,120 --> 00:05:22,530
goes as a label in the row in like this

00:05:16,560 --> 00:05:26,190
every option that we had so how it

00:05:22,530 --> 00:05:29,009
should be how is the the the whole

00:05:26,190 --> 00:05:32,310
journey so we have a markup API built in

00:05:29,009 --> 00:05:34,680
coupling DSL then whatever the markup

00:05:32,310 --> 00:05:36,389
arrives passed through a component

00:05:34,680 --> 00:05:39,000
layout factory so we know which

00:05:36,389 --> 00:05:41,370
component we have to render to build a

00:05:39,000 --> 00:05:44,969
whole form that means is there an input

00:05:41,370 --> 00:05:48,300
or a group or address or text or into an

00:05:44,969 --> 00:05:52,770
image upload or page that opens a new

00:05:48,300 --> 00:05:56,909
model and what about SEO we wanted to

00:05:52,770 --> 00:05:59,460
use to deploy server side rendering so

00:05:56,909 --> 00:06:03,020
here is what I talked about

00:05:59,460 --> 00:06:06,539
sooie sooie is an open source library

00:06:03,020 --> 00:06:09,360
built by our colleagues in SIP states

00:06:06,539 --> 00:06:12,870
paned is a company similar to will

00:06:09,360 --> 00:06:15,300
happen in Spain and so you can find them

00:06:12,870 --> 00:06:19,050
in in github is totally open source and

00:06:15,300 --> 00:06:21,750
free to use in their open to receive

00:06:19,050 --> 00:06:23,819
your pool requests as well and so what

00:06:21,750 --> 00:06:26,129
is su e so the philosophy is an open

00:06:23,819 --> 00:06:28,770
source library in the separation of

00:06:26,129 --> 00:06:32,069
concerns that means they have a bunch of

00:06:28,770 --> 00:06:34,289
tools that you can use in one tool solve

00:06:32,069 --> 00:06:37,529
only one problem

00:06:34,289 --> 00:06:39,710
there is no tools that solve different

00:06:37,529 --> 00:06:41,280
problems they they wanted to make

00:06:39,710 --> 00:06:43,590
separation of concepts

00:06:41,280 --> 00:06:47,010
and the finest granularity so atomic

00:06:43,590 --> 00:06:49,260
tools and they have some Suey components

00:06:47,010 --> 00:06:52,440
this is purely fronting in user

00:06:49,260 --> 00:06:55,139
interface components so about the tools

00:06:52,440 --> 00:06:58,889
what I used in my application is the Sui

00:06:55,139 --> 00:07:00,510
SSR which is the service I render in for

00:06:58,889 --> 00:07:04,830
your single page application in react

00:07:00,510 --> 00:07:07,740
this this the whole Sui kit is built for

00:07:04,830 --> 00:07:10,410
react applications for now so this is a

00:07:07,740 --> 00:07:13,430
bunch of the tools that they have to be

00:07:10,410 --> 00:07:18,950
able for example they have a performance

00:07:13,430 --> 00:07:22,080
monitoring or polyfills or translation

00:07:18,950 --> 00:07:24,570
linting bundler who is working with web

00:07:22,080 --> 00:07:27,780
pack in the hood so all these tools are

00:07:24,570 --> 00:07:32,400
available open source as I said the

00:07:27,780 --> 00:07:34,290
components are purely UI components so a

00:07:32,400 --> 00:07:36,390
button is a component label is a

00:07:34,290 --> 00:07:39,060
component an input is a component a box

00:07:36,390 --> 00:07:42,240
is a component and you have this theme

00:07:39,060 --> 00:07:43,919
that they provide in your side things so

00:07:42,240 --> 00:07:46,650
you can overwrite and the famous only

00:07:43,919 --> 00:07:50,310
and only a set of variables let's say

00:07:46,650 --> 00:07:52,950
margins type font sizes colors and you

00:07:50,310 --> 00:07:58,080
can override your thing with with your

00:07:52,950 --> 00:08:00,539
own variables so I wanted to be quick

00:07:58,080 --> 00:08:14,100
because I want to show you how it how it

00:08:00,539 --> 00:08:16,229
works so this is the hole okay maybe

00:08:14,100 --> 00:08:19,380
lies yeah

00:08:16,229 --> 00:08:24,320
is it better good so this is how the

00:08:19,380 --> 00:08:24,320
hole yeah sure

00:08:25,279 --> 00:08:34,159
better living okay so this is how the

00:08:30,259 --> 00:08:37,939
whole markup worked when you make a call

00:08:34,159 --> 00:08:39,709
to the REST API I downloaded in a JSON

00:08:37,939 --> 00:08:42,439
file because I don't know I don't know

00:08:39,709 --> 00:08:44,720
if I was able to to have internet so

00:08:42,439 --> 00:08:46,220
this is how it looks so that means at

00:08:44,720 --> 00:08:49,069
the beginning you have to render an

00:08:46,220 --> 00:08:51,709
input with a placeholder then you have a

00:08:49,069 --> 00:08:53,660
text then you have an address then the

00:08:51,709 --> 00:08:55,970
text then an input with a placeholder

00:08:53,660 --> 00:08:58,480
and with a unit then you have another

00:08:55,970 --> 00:09:01,430
unit so at an input with another

00:08:58,480 --> 00:09:03,949
detection unit a sled with all the

00:09:01,430 --> 00:09:08,300
options here so I'm gonna show you how

00:09:03,949 --> 00:09:12,110
how that looks so this is this is the

00:09:08,300 --> 00:09:15,379
the the markup are we receiving and we

00:09:12,110 --> 00:09:17,120
are displaying so you can match here an

00:09:15,379 --> 00:09:19,279
input and there is an input there's a

00:09:17,120 --> 00:09:24,199
text there is a text there's an address

00:09:19,279 --> 00:09:29,360
is an address and so on so if we want to

00:09:24,199 --> 00:09:31,790
serve a different okay let's say that

00:09:29,360 --> 00:09:36,290
okay address is pretty obvious that is

00:09:31,790 --> 00:09:40,160
that is it's an estÃ¡ndar thing to eat

00:09:36,290 --> 00:09:42,079
too so for it for a real estate but

00:09:40,160 --> 00:09:49,750
let's say that we want to have the

00:09:42,079 --> 00:09:49,750
address the first item so we move it oh

00:09:51,699 --> 00:10:01,970
so we move it as the first item I saved

00:09:55,220 --> 00:10:04,939
a file and okay now the address is

00:10:01,970 --> 00:10:08,420
rendered first that's how we build all

00:10:04,939 --> 00:10:10,629
the layouts for the forms and we don't

00:10:08,420 --> 00:10:13,639
have to deal with project management

00:10:10,629 --> 00:10:16,160
saying oh I want to change this you have

00:10:13,639 --> 00:10:19,160
to change it and we have to hard code so

00:10:16,160 --> 00:10:20,990
we have for house we have selling and

00:10:19,160 --> 00:10:23,000
renting for flats selling and renting

00:10:20,990 --> 00:10:25,759
for land selling and renting so it's a

00:10:23,000 --> 00:10:27,800
lot of logic that we have to do and we

00:10:25,759 --> 00:10:32,180
didn't want to hire code it so that's

00:10:27,800 --> 00:10:37,550
how the market works and that's how the

00:10:32,180 --> 00:10:39,130
component factory works so M let me see

00:10:37,550 --> 00:10:42,709
the domain

00:10:39,130 --> 00:10:48,250
the domain in this case is returning of

00:10:42,709 --> 00:10:53,029
the data but here it will be like fed in

00:10:48,250 --> 00:10:57,410
all the the API endpoint and you will

00:10:53,029 --> 00:11:04,509
return the Jason then the general layer

00:10:57,410 --> 00:11:04,509
the layer structure is received in yes

00:11:05,529 --> 00:11:11,449
right great so is taking the layout the

00:11:10,009 --> 00:11:16,360
structure that is coming from the API

00:11:11,449 --> 00:11:21,259
then looping it and for every component

00:11:16,360 --> 00:11:23,779
us we built a nodes are always has a

00:11:21,259 --> 00:11:26,810
type properties and children which is

00:11:23,779 --> 00:11:29,029
the basics of react we just create an

00:11:26,810 --> 00:11:32,839
element with type properties and

00:11:29,029 --> 00:11:35,089
children and that's it you just create

00:11:32,839 --> 00:11:40,600
the element push it to the component

00:11:35,089 --> 00:11:45,139
list array and when you render your UI

00:11:40,600 --> 00:11:49,060
to just receive the whole array of the

00:11:45,139 --> 00:11:53,600
layout and you map it with the key and

00:11:49,060 --> 00:11:56,240
it renders the whole thing we try to

00:11:53,600 --> 00:11:58,899
make the stateless as possible all the

00:11:56,240 --> 00:12:01,759
elements so a button should be stateless

00:11:58,899 --> 00:12:03,139
may be a page to have a kind of state

00:12:01,759 --> 00:12:05,319
but that depends on if you're using

00:12:03,139 --> 00:12:08,300
Redux or you using Mobile's

00:12:05,319 --> 00:12:12,139
but that's how that's how the what is

00:12:08,300 --> 00:12:14,980
the the the main character X's of of the

00:12:12,139 --> 00:12:18,069
of the will have and markup language so

00:12:14,980 --> 00:12:21,560
the benefits for us is that we are

00:12:18,069 --> 00:12:27,560
dynamic because we can build any layout

00:12:21,560 --> 00:12:31,339
from the for just one API call we don't

00:12:27,560 --> 00:12:34,370
have to hard code any template in the in

00:12:31,339 --> 00:12:37,699
the client not even not even having a

00:12:34,370 --> 00:12:41,240
logic to loop over templates we just

00:12:37,699 --> 00:12:44,120
need atomic components that don't even

00:12:41,240 --> 00:12:47,059
do that even does anything just a button

00:12:44,120 --> 00:12:50,260
but you will unclick I will tell you

00:12:47,059 --> 00:12:52,040
what I'm click does but just render and

00:12:50,260 --> 00:12:57,290
it's is

00:12:52,040 --> 00:13:00,350
very very easy to maintain and very very

00:12:57,290 --> 00:13:04,790
extendable so that's that's how the

00:13:00,350 --> 00:13:07,339
market works and about the server-side

00:13:04,790 --> 00:13:10,970
rendering so I deployed the same

00:13:07,339 --> 00:13:14,660
application to now so this is in the in

00:13:10,970 --> 00:13:17,120
in now server and this is how it looks

00:13:14,660 --> 00:13:20,779
at the code so that means you only have

00:13:17,120 --> 00:13:21,769
the app here I mean so you only have the

00:13:20,779 --> 00:13:26,959
app here

00:13:21,769 --> 00:13:28,910
so SEO here will would not work but

00:13:26,959 --> 00:13:33,050
let's say that we deactivate the

00:13:28,910 --> 00:13:35,870
javascript in the browser and everything

00:13:33,050 --> 00:13:40,459
is server-side rendering so it's SEO

00:13:35,870 --> 00:13:42,290
friendly and it's working offline as

00:13:40,459 --> 00:13:45,589
well when you don't have JavaScript you

00:13:42,290 --> 00:13:47,779
have the cached version so that's very

00:13:45,589 --> 00:13:51,589
very beneficial for us so we don't lose

00:13:47,779 --> 00:13:55,959
our our SEO ranking and perform on wise

00:13:51,589 --> 00:13:57,850
is rendering the server so it's not lost

00:13:55,959 --> 00:14:02,779
any performance lost

00:13:57,850 --> 00:14:05,269
so we're if you want to know more wait

00:14:02,779 --> 00:14:08,029
if you want to know more you can find it

00:14:05,269 --> 00:14:08,449
in the blog of our tech blog in

00:14:08,029 --> 00:14:11,290
Millhaven

00:14:08,449 --> 00:14:13,639
or in our Twitter or I create a

00:14:11,290 --> 00:14:16,990
repository for this for the same code

00:14:13,639 --> 00:14:20,600
that I saw you and you can check out the

00:14:16,990 --> 00:14:23,470
open-source three components killed hood

00:14:20,600 --> 00:14:27,550
toolkit that the guys from from Spain

00:14:23,470 --> 00:14:31,429
did and that's all

00:14:27,550 --> 00:14:31,429

YouTube URL: https://www.youtube.com/watch?v=tJXzyHHh4pc


