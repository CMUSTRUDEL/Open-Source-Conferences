Title: Vienna.JS, World-class frontend engineering at scale, April 2018
Publication date: 2018-04-26
Playlist: viennaJS
Description: 
	By Hannes Obweger:
Over the last months, the Jira development team has been busy shipping an all-new UI layer, all written in React, redux, and rx.js. Learn about the strategies and tools that Atlassian has developed to create a high-velocity, high-quality engineering environment for more than 150 developers, spread across Sydney, Vienna, and the Bay Area. Hannes is the engineering manager for Jira's frontend development and will share tales of big wins and painful revelations, all part of a journey towards world-class frontend engineering at scale.
Captions: 
	00:00:00,030 --> 00:00:06,029
all right thanks folks hey folks I'm

00:00:03,060 --> 00:00:07,319
Hannes I'm an engineering manager and

00:00:06,029 --> 00:00:09,780
architect on

00:00:07,319 --> 00:00:12,620
JIRA which I'm sure some of you are

00:00:09,780 --> 00:00:14,759
using or have been using in the past

00:00:12,620 --> 00:00:18,529
what we are doing in pure land these

00:00:14,759 --> 00:00:22,800
days is we're giving JIRA a big

00:00:18,529 --> 00:00:25,680
usability update or UX update so we're

00:00:22,800 --> 00:00:28,109
going from this well known but maybe a

00:00:25,680 --> 00:00:30,539
little bit dusty designed to do this

00:00:28,109 --> 00:00:32,520
which i think is looking much fresher

00:00:30,539 --> 00:00:34,860
and actually also much easier to use

00:00:32,520 --> 00:00:41,309
I'm super keen to hear your feedback if

00:00:34,860 --> 00:00:45,750
your users at the bar so that said JIRA

00:00:41,309 --> 00:00:47,430
is actually a pretty old piece of piece

00:00:45,750 --> 00:00:50,480
of code so the first version of JIRA

00:00:47,430 --> 00:00:55,770
dates back to 2002 so on my personal

00:00:50,480 --> 00:00:57,750
popgun to Top Gun to timeline JIRA 1.0

00:00:55,770 --> 00:01:00,149
is actually close at the top come that's

00:00:57,750 --> 00:01:01,680
mind blowing anyway what I'm trying to

00:01:00,149 --> 00:01:03,270
say is there's quite a bit of legacy

00:01:01,680 --> 00:01:05,850
that she was carrying around so when we

00:01:03,270 --> 00:01:07,619
said we are starting this UX update we

00:01:05,850 --> 00:01:09,659
also saw this as an opportunity to get

00:01:07,619 --> 00:01:12,240
rid of you know all the jQuery and all

00:01:09,659 --> 00:01:15,780
the backbone garbage oops

00:01:12,240 --> 00:01:18,299
that has been lying around and really

00:01:15,780 --> 00:01:20,850
create a you know a nice nice modern web

00:01:18,299 --> 00:01:23,700
stack so there's there's a bit of logo

00:01:20,850 --> 00:01:25,320
porn behind me but I think the most

00:01:23,700 --> 00:01:27,720
interesting row is really the first one

00:01:25,320 --> 00:01:29,869
so it's a I want to say relatively

00:01:27,720 --> 00:01:33,960
traditional react redox architecture

00:01:29,869 --> 00:01:35,850
rxjs for side effects using style

00:01:33,960 --> 00:01:38,070
components quite heavily storybooks are

00:01:35,850 --> 00:01:42,150
awesome and the whole thing is is flow

00:01:38,070 --> 00:01:45,540
typed so I think this is pretty pretty

00:01:42,150 --> 00:01:47,610
neat pretty modern web stack plus there

00:01:45,540 --> 00:01:49,939
is quite a bit of surface area and Shera

00:01:47,610 --> 00:01:54,990
it's a it's a large and complicated tool

00:01:49,939 --> 00:01:56,549
or powerful tool so it wasn't too

00:01:54,990 --> 00:01:58,170
surprising that our new front and

00:01:56,549 --> 00:02:01,409
repository that hosts all the new

00:01:58,170 --> 00:02:02,850
front-end grew quite quickly so these

00:02:01,409 --> 00:02:06,710
are the numbers from from yesterday

00:02:02,850 --> 00:02:09,270
we're talking 600 k lines of code and

00:02:06,710 --> 00:02:11,520
actually more than 150 individual

00:02:09,270 --> 00:02:13,170
contributors obviously not everybody was

00:02:11,520 --> 00:02:13,690
contributing a whole lot of code to that

00:02:13,170 --> 00:02:15,700
but

00:02:13,690 --> 00:02:17,470
but still right so when I'm talking

00:02:15,700 --> 00:02:19,930
about world-class fronted engineering at

00:02:17,470 --> 00:02:22,750
scale this is the scaler we're talking

00:02:19,930 --> 00:02:24,910
about mm-hmm I said what that would like

00:02:22,750 --> 00:02:28,120
to do today is really just share a

00:02:24,910 --> 00:02:30,310
couple of lessons that we learned over

00:02:28,120 --> 00:02:33,280
the last 14 or so months when we were

00:02:30,310 --> 00:02:35,800
working on that I think there a lot of

00:02:33,280 --> 00:02:37,420
react projects out there but I think

00:02:35,800 --> 00:02:39,220
they are not actually not so many in

00:02:37,420 --> 00:02:40,780
that scale so there may be a figure

00:02:39,220 --> 00:02:45,210
there may be some interesting aspects to

00:02:40,780 --> 00:02:47,410
that so I would like to start with the

00:02:45,210 --> 00:02:50,170
first maybe the most powerful learning

00:02:47,410 --> 00:02:52,780
actually divide and conquer what do I

00:02:50,170 --> 00:02:54,190
mean by that so I think most of you

00:02:52,780 --> 00:02:56,260
probably know that the high-level

00:02:54,190 --> 00:02:57,670
architecture of flux right you have your

00:02:56,260 --> 00:02:59,110
stage you have your view whenever the

00:02:57,670 --> 00:03:01,420
state changes you really render your

00:02:59,110 --> 00:03:04,030
view either speech dispatch reactions

00:03:01,420 --> 00:03:05,980
close the full cycle somewhere along the

00:03:04,030 --> 00:03:07,300
way you do your side effects well nice

00:03:05,980 --> 00:03:10,740
and tidy everybody understands that

00:03:07,300 --> 00:03:14,170
beautiful unidirectional flow of control

00:03:10,740 --> 00:03:16,420
in reality however if you build a really

00:03:14,170 --> 00:03:18,250
large application it looks far more like

00:03:16,420 --> 00:03:21,160
that right state is huge

00:03:18,250 --> 00:03:23,140
hard to control a true monster the same

00:03:21,160 --> 00:03:24,820
for the output and the side effects

00:03:23,140 --> 00:03:30,190
right every single one of them is cute

00:03:24,820 --> 00:03:32,440
but you have so many Jesus so it's

00:03:30,190 --> 00:03:36,850
really hard right and we don't want that

00:03:32,440 --> 00:03:42,040
so let's look at a concrete JIRA

00:03:36,850 --> 00:03:44,860
application for a second JIRA screen so

00:03:42,040 --> 00:03:48,370
this is a Cheever issue if you if you

00:03:44,860 --> 00:03:49,660
know it open dinner in a in a modal if

00:03:48,370 --> 00:03:51,940
you have good eyes you can see that

00:03:49,660 --> 00:03:54,610
there is a board software board in the

00:03:51,940 --> 00:03:56,470
background and on the on the left hand

00:03:54,610 --> 00:04:00,370
side from your perspective there is a

00:03:56,470 --> 00:04:03,340
navigation bar so obviously we could

00:04:00,370 --> 00:04:07,840
build this as one large react Redux app

00:04:03,340 --> 00:04:10,120
right it would probably look like that

00:04:07,840 --> 00:04:13,590
right it would be really hard a lot of

00:04:10,120 --> 00:04:16,330
code to manage so do we want that nope

00:04:13,590 --> 00:04:18,130
now that we already divided our view

00:04:16,330 --> 00:04:22,210
into kind of logical pieces

00:04:18,130 --> 00:04:24,460
why wouldn't we build a navigation app

00:04:22,210 --> 00:04:26,260
that just deals with navigation state

00:04:24,460 --> 00:04:28,240
just deals with navigation view

00:04:26,260 --> 00:04:31,390
just used with navigation side effects

00:04:28,240 --> 00:04:32,800
sounds reasonably easy right and we

00:04:31,390 --> 00:04:34,870
could do the same for the board just

00:04:32,800 --> 00:04:37,780
build a board app the deals with what

00:04:34,870 --> 00:04:42,370
concerns and finally build an issue app

00:04:37,780 --> 00:04:44,950
that deals with issue concerns and this

00:04:42,370 --> 00:04:47,830
is actually what we do in JIRA we call

00:04:44,950 --> 00:04:50,200
this an app that's really I think the

00:04:47,830 --> 00:04:51,640
main concept in our code base when dude

00:04:50,200 --> 00:04:53,380
cheer developers talk to each other you

00:04:51,640 --> 00:04:55,300
will hear the app the word app quite a

00:04:53,380 --> 00:04:57,760
bit not in the mobile context but in the

00:04:55,300 --> 00:05:02,080
cheer context so what's an app an app

00:04:57,760 --> 00:05:04,450
really just combines a view with a bit

00:05:02,080 --> 00:05:06,790
of state and optionally some side

00:05:04,450 --> 00:05:08,800
effects nothing special all right

00:05:06,790 --> 00:05:14,620
the important thing is just that that

00:05:08,800 --> 00:05:17,610
whole thing is clearly bounded through a

00:05:14,620 --> 00:05:20,800
JSX interface so that whole thing is

00:05:17,610 --> 00:05:22,420
really just a component right and very

00:05:20,800 --> 00:05:24,550
powerful but still just a react

00:05:22,420 --> 00:05:27,730
component that retrieves all its data

00:05:24,550 --> 00:05:33,600
through props and files all its events

00:05:27,730 --> 00:05:35,590
also its props all the internals really

00:05:33,600 --> 00:05:37,600
don't really matter right from a

00:05:35,590 --> 00:05:39,430
consumer perspective so a very concert

00:05:37,600 --> 00:05:42,160
we call this state didn't call this

00:05:39,430 --> 00:05:44,050
store because we may use Redux

00:05:42,160 --> 00:05:45,670
but it actually doesn't matter right use

00:05:44,050 --> 00:05:47,590
components they'd use understated use

00:05:45,670 --> 00:05:49,240
whatever makes you happy the only thing

00:05:47,590 --> 00:05:53,920
that is important is from the outside

00:05:49,240 --> 00:05:55,810
it's just a component so you get to that

00:05:53,920 --> 00:05:57,730
really nice setup where if you want to

00:05:55,810 --> 00:05:59,770
render an issue which is actually a

00:05:57,730 --> 00:06:01,540
pretty complicated piece of piece of

00:05:59,770 --> 00:06:04,060
logic a lot of fields that you can show

00:06:01,540 --> 00:06:06,160
or not show all you need to do is is

00:06:04,060 --> 00:06:07,900
mount that component and pass in the

00:06:06,160 --> 00:06:10,960
issue key the component would retrieve

00:06:07,900 --> 00:06:12,760
all its data by itself and render nicely

00:06:10,960 --> 00:06:14,890
and if you're actually interested in a

00:06:12,760 --> 00:06:17,080
change event sure be my guest

00:06:14,890 --> 00:06:21,100
wretches then on change handler easy

00:06:17,080 --> 00:06:23,880
enough right so the question remains

00:06:21,100 --> 00:06:27,010
though now that I have my different apps

00:06:23,880 --> 00:06:28,450
navigation board issue how to actually

00:06:27,010 --> 00:06:31,990
wire them up right how did they play

00:06:28,450 --> 00:06:33,220
together it's actually quite simple the

00:06:31,990 --> 00:06:35,920
only thing that you need is you need

00:06:33,220 --> 00:06:37,990
some kind of orchestration layer on top

00:06:35,920 --> 00:06:39,370
of that they're actually just wires the

00:06:37,990 --> 00:06:42,850
properties of the different component

00:06:39,370 --> 00:06:46,000
together now that looks a little bit

00:06:42,850 --> 00:06:48,580
complicated but really try to think of

00:06:46,000 --> 00:06:50,860
an app just as a component right and if

00:06:48,580 --> 00:06:53,620
you would look at a setup like this so

00:06:50,860 --> 00:06:56,380
it says there's a text field that shows

00:06:53,620 --> 00:06:58,360
some value and there's a button with the

00:06:56,380 --> 00:07:00,100
label on with a label submit and if you

00:06:58,360 --> 00:07:02,020
click it we do something with the with

00:07:00,100 --> 00:07:03,699
the with the value I think everybody who

00:07:02,020 --> 00:07:05,260
did a bit of react development came

00:07:03,699 --> 00:07:07,300
across that and everybody can solve that

00:07:05,260 --> 00:07:09,220
right it's trivial use redirect use

00:07:07,300 --> 00:07:11,620
component state use whatever makes you

00:07:09,220 --> 00:07:14,560
happy now

00:07:11,620 --> 00:07:17,320
really you can just replace the input

00:07:14,560 --> 00:07:21,639
here with an issue and you can replace

00:07:17,320 --> 00:07:23,199
the button with the board it's dealing

00:07:21,639 --> 00:07:24,970
with more complicated components right

00:07:23,199 --> 00:07:29,889
but the logic is still the same super

00:07:24,970 --> 00:07:32,380
trivial to the wire so if you now call

00:07:29,889 --> 00:07:34,030
 on me and say do you do you

00:07:32,380 --> 00:07:37,330
talking about divide and conquer but

00:07:34,030 --> 00:07:39,039
really it's just composition you're

00:07:37,330 --> 00:07:41,110
right it is really just composition

00:07:39,039 --> 00:07:43,539
there's nothing special about that I

00:07:41,110 --> 00:07:46,450
really just want to point out that if

00:07:43,539 --> 00:07:48,760
you work on something as large as JIRA

00:07:46,450 --> 00:07:50,770
you want to get this right I do you want

00:07:48,760 --> 00:07:56,220
to get your composition vision your

00:07:50,770 --> 00:07:58,210
actual vision right from the get-go the

00:07:56,220 --> 00:08:02,770
second lesson that I would like to talk

00:07:58,210 --> 00:08:03,760
about ownership I think we've all been

00:08:02,770 --> 00:08:06,490
there done that

00:08:03,760 --> 00:08:10,300
work in a really large code base where

00:08:06,490 --> 00:08:12,550
some code exists that really nobody

00:08:10,300 --> 00:08:14,770
feels responsible for but it's there but

00:08:12,550 --> 00:08:16,449
nobody owns it it's a nightmare it's

00:08:14,770 --> 00:08:20,229
terrible it's a clear indication that

00:08:16,449 --> 00:08:23,020
everything is going south we experienced

00:08:20,229 --> 00:08:25,750
that a little bit in Sierra and wanted

00:08:23,020 --> 00:08:29,710
to get it under control ASAP so what we

00:08:25,750 --> 00:08:32,320
did is we build a system around what we

00:08:29,710 --> 00:08:35,529
call manifests so a manifest is really

00:08:32,320 --> 00:08:40,360
just a JSON file that specifies an owner

00:08:35,529 --> 00:08:44,080
and all code that lives next to that

00:08:40,360 --> 00:08:47,680
manifest file or in subfolders is owned

00:08:44,080 --> 00:08:50,490
by this this individual by this team and

00:08:47,680 --> 00:08:52,990
that's if you commit a code that is not

00:08:50,490 --> 00:08:55,420
associated with a manifest jason with

00:08:52,990 --> 00:08:58,170
you built so there's no code that does

00:08:55,420 --> 00:09:01,180
not have a clear owner define somewhere

00:08:58,170 --> 00:09:04,300
and that's already useful so I can look

00:09:01,180 --> 00:09:06,100
at our directory based app I spare the

00:09:04,300 --> 00:09:09,010
details and I can immediately see that

00:09:06,100 --> 00:09:13,149
my my buddy Camilla is the owner of that

00:09:09,010 --> 00:09:15,520
app beautiful we did something water we

00:09:13,149 --> 00:09:17,230
built a little bot that for reasons that

00:09:15,520 --> 00:09:21,100
I never fully understood was called

00:09:17,230 --> 00:09:23,470
golem and what it does is it's really

00:09:21,100 --> 00:09:25,890
just a bit bucket what would work on

00:09:23,470 --> 00:09:25,890
github as well

00:09:26,279 --> 00:09:31,630
dad monitors your your changes the

00:09:30,520 --> 00:09:34,990
changes that you are committing in your

00:09:31,630 --> 00:09:37,089
PR and figures out if your a touching

00:09:34,990 --> 00:09:39,250
code that is not actually owned by you

00:09:37,089 --> 00:09:41,860
and your team and if you do that it

00:09:39,250 --> 00:09:43,899
automatically adds reviewers from that

00:09:41,860 --> 00:09:47,620
other team to the PR so there's no

00:09:43,899 --> 00:09:51,399
sneaking through little subtle changes

00:09:47,620 --> 00:09:54,640
there's no you know unintentionally

00:09:51,399 --> 00:10:00,820
screwing something up works really

00:09:54,640 --> 00:10:03,670
nicely for us let's number three being

00:10:00,820 --> 00:10:06,940
opinionated that is a more interesting

00:10:03,670 --> 00:10:09,490
one I think so with that concept of an

00:10:06,940 --> 00:10:11,649
app and the clear ownership what we have

00:10:09,490 --> 00:10:13,450
in you know to your fondant repo is from

00:10:11,649 --> 00:10:15,579
a high level perspective it's really

00:10:13,450 --> 00:10:18,640
nice and tidy right we have all the

00:10:15,579 --> 00:10:21,100
little boxes that represent an app have

00:10:18,640 --> 00:10:23,950
the clear API you may wire them up in

00:10:21,100 --> 00:10:27,070
whatever way you want or good if you

00:10:23,950 --> 00:10:29,560
look in at an individual app if you're

00:10:27,070 --> 00:10:31,990
honest with yourself they actually all

00:10:29,560 --> 00:10:34,390
quite similar from a conceptual level

00:10:31,990 --> 00:10:36,940
right they are all react we Dax placed

00:10:34,390 --> 00:10:39,070
in our case they all follow our design

00:10:36,940 --> 00:10:40,930
guidelines to all use our component

00:10:39,070 --> 00:10:41,850
library they all talk to JIRA

00:10:40,930 --> 00:10:44,230
standpoints

00:10:41,850 --> 00:10:46,300
they all do this and that say they

00:10:44,230 --> 00:10:49,120
actually not that different and you

00:10:46,300 --> 00:10:51,730
would reckon that all these boxes into

00:10:49,120 --> 00:10:53,740
your front-end I actually code that in a

00:10:51,730 --> 00:10:55,959
somewhat similar way was structured in a

00:10:53,740 --> 00:10:57,640
somewhat similar way however what we

00:10:55,959 --> 00:11:00,970
figured out is that we're really talking

00:10:57,640 --> 00:11:04,570
apples and pears here and a whole lot of

00:11:00,970 --> 00:11:06,910
other fruits which really means that we

00:11:04,570 --> 00:11:09,160
have and I'm simplifying a little bit

00:11:06,910 --> 00:11:11,470
yeah but we got to a point where we had

00:11:09,160 --> 00:11:15,010
let's say 50 apps and 50 different

00:11:11,470 --> 00:11:19,060
architectures now I said cool I don't

00:11:15,010 --> 00:11:20,860
think so because it it made the whole

00:11:19,060 --> 00:11:22,960
repository incredibly difficult to

00:11:20,860 --> 00:11:24,850
reason about all right so you get used

00:11:22,960 --> 00:11:26,560
to one app and at some point you want to

00:11:24,850 --> 00:11:28,360
look at another app and it's a whole

00:11:26,560 --> 00:11:29,800
bloody new universe you don't even know

00:11:28,360 --> 00:11:32,800
where to start right everything is

00:11:29,800 --> 00:11:33,850
upside-down mm-hmm but we could probably

00:11:32,800 --> 00:11:37,060
deal with that I think the more

00:11:33,850 --> 00:11:38,800
frustrating part is actually that you

00:11:37,060 --> 00:11:42,490
get really really bad in sharing code

00:11:38,800 --> 00:11:44,230
and sharing knowledge right because you

00:11:42,490 --> 00:11:46,060
kind of start solving the same problems

00:11:44,230 --> 00:11:48,180
all over again you think you find a

00:11:46,060 --> 00:11:52,420
really good solution on structuring your

00:11:48,180 --> 00:11:54,010
Redux reducer great but who knows maybe

00:11:52,420 --> 00:11:54,520
another app has solved it much better

00:11:54,010 --> 00:11:58,450
already

00:11:54,520 --> 00:11:59,830
and even if I figure out I may not be

00:11:58,450 --> 00:12:02,110
able to use it right because the whole

00:11:59,830 --> 00:12:03,940
big picture it's just completely

00:12:02,110 --> 00:12:05,740
different and that solution may be great

00:12:03,940 --> 00:12:09,070
but it doesn't work for me that's all

00:12:05,740 --> 00:12:12,010
very frustrating so what we kicked off

00:12:09,070 --> 00:12:14,740
in JIRA so that's the JIRA internal

00:12:12,010 --> 00:12:18,790
announcement slide was a program called

00:12:14,740 --> 00:12:21,910
tangerine where we really kind of

00:12:18,790 --> 00:12:24,000
rallied our forces and said that we as

00:12:21,910 --> 00:12:27,220
an engineering to you need to become

00:12:24,000 --> 00:12:29,980
opinionated on what are the right

00:12:27,220 --> 00:12:32,980
patterns practices and technologies to

00:12:29,980 --> 00:12:34,780
build a large-scale react application

00:12:32,980 --> 00:12:37,480
right if we can't figure that out

00:12:34,780 --> 00:12:39,070
nobody can so the goal was to define

00:12:37,480 --> 00:12:40,300
these principles and make sure that

00:12:39,070 --> 00:12:45,640
everybody is happy with them and

00:12:40,300 --> 00:12:47,320
everybody actually uses them so on a

00:12:45,640 --> 00:12:49,630
higher level what we wanted to achieve

00:12:47,320 --> 00:12:52,720
is we wanted to get from this basket of

00:12:49,630 --> 00:12:54,790
fruits to something like that right sure

00:12:52,720 --> 00:12:56,620
every app still has a slightly different

00:12:54,790 --> 00:12:58,660
flavor every app has a slightly

00:12:56,620 --> 00:13:00,820
different color some are bigger some are

00:12:58,660 --> 00:13:03,190
smaller that's all fine but they should

00:13:00,820 --> 00:13:08,620
at least follow the same world-class

00:13:03,190 --> 00:13:10,210
high-level principles so the the process

00:13:08,620 --> 00:13:15,400
if you want that we that we decided to

00:13:10,210 --> 00:13:17,590
use for that is decide document do where

00:13:15,400 --> 00:13:21,130
decide is probably the

00:13:17,590 --> 00:13:24,490
the hardest part really so if you think

00:13:21,130 --> 00:13:26,260
about problem-solving the first part is

00:13:24,490 --> 00:13:27,820
actually always to find different

00:13:26,260 --> 00:13:30,610
different solutions to your problem

00:13:27,820 --> 00:13:33,520
right and the larger your team the more

00:13:30,610 --> 00:13:35,290
brains you can use the better solutions

00:13:33,520 --> 00:13:39,100
you can find so that's great but the

00:13:35,290 --> 00:13:42,910
more people the better the modem area it

00:13:39,100 --> 00:13:44,320
gets really hard though if you get to

00:13:42,910 --> 00:13:46,420
the point where from all the different

00:13:44,320 --> 00:13:48,339
solutions that people were finding you

00:13:46,420 --> 00:13:50,050
actually want to agree on one that's

00:13:48,339 --> 00:13:51,880
really hard right so there's a

00:13:50,050 --> 00:13:53,860
lot of shrugging going on and I think

00:13:51,880 --> 00:13:56,560
we've been all in that we often in a

00:13:53,860 --> 00:13:58,240
situation like that I know if all under

00:13:56,560 --> 00:13:59,650
I disagree on something we can get in

00:13:58,240 --> 00:14:01,570
front of a whiteboard and sweat it out

00:13:59,650 --> 00:14:03,610
right there's no problem with that but

00:14:01,570 --> 00:14:07,890
if there were 150 people that gets

00:14:03,610 --> 00:14:12,570
really really hard so what we

00:14:07,890 --> 00:14:17,980
established in JIRA is a pretty rigid

00:14:12,570 --> 00:14:22,890
process of how an idea a problem if you

00:14:17,980 --> 00:14:25,630
want goes from a very rough idea to a

00:14:22,890 --> 00:14:27,820
principle that is locked in and final

00:14:25,630 --> 00:14:29,230
and should be used by everyone doesn't

00:14:27,820 --> 00:14:31,270
mean that it may not get changed in the

00:14:29,230 --> 00:14:34,390
future but for the time being this is

00:14:31,270 --> 00:14:36,460
how we do I actually similar to the

00:14:34,390 --> 00:14:40,240
process that the ACMA script Committee

00:14:36,460 --> 00:14:44,050
is using for language adaptions that

00:14:40,240 --> 00:14:49,270
whole process is guided is facilitated

00:14:44,050 --> 00:14:50,680
by a dedicated front and committee which

00:14:49,270 --> 00:14:53,470
is really a bunch of you know pinchable

00:14:50,680 --> 00:14:55,480
developers architects folks who know

00:14:53,470 --> 00:14:56,830
what they're doing these are not the

00:14:55,480 --> 00:14:58,660
actual members of the committee though I

00:14:56,830 --> 00:15:01,089
would really love to have mark on out of

00:14:58,660 --> 00:15:03,940
which on it but I think the most

00:15:01,089 --> 00:15:04,720
important thing is we are representing

00:15:03,940 --> 00:15:07,720
different parts of our organization

00:15:04,720 --> 00:15:10,480
which is quite challenging in a team at

00:15:07,720 --> 00:15:12,400
largest as cheer actually we have a

00:15:10,480 --> 00:15:14,800
couple of external advisors so these are

00:15:12,400 --> 00:15:17,350
these are folks who are from different

00:15:14,800 --> 00:15:19,959
parts of Atlassian or even from

00:15:17,350 --> 00:15:21,010
completely outside the company and there

00:15:19,959 --> 00:15:23,380
are a couple of seats that we are

00:15:21,010 --> 00:15:25,450
rotating in and out so that we get some

00:15:23,380 --> 00:15:28,330
some fresh insight some fresh parts to

00:15:25,450 --> 00:15:30,280
the committee that's working quite

00:15:28,330 --> 00:15:31,300
nicely actually and we identified where

00:15:30,280 --> 00:15:34,930
we locked in a couple of

00:15:31,300 --> 00:15:38,290
of really good principles in ceará high

00:15:34,930 --> 00:15:40,270
level app folder structure hard one very

00:15:38,290 --> 00:15:42,400
spicy took us a while to figure it out

00:15:40,270 --> 00:15:42,850
but I think we're quite happy with that

00:15:42,400 --> 00:15:45,090
now

00:15:42,850 --> 00:15:47,830
but there are more that are less

00:15:45,090 --> 00:15:49,600
controversial I guess no how do you

00:15:47,830 --> 00:15:51,280
compose your smart component and your

00:15:49,600 --> 00:15:53,860
dumb components how do you compose your

00:15:51,280 --> 00:15:55,870
reducers that's it's not rocket science

00:15:53,860 --> 00:15:58,810
you I just want to pick one principle

00:15:55,870 --> 00:16:01,000
and stick to it and really like the

00:15:58,810 --> 00:16:03,010
small media queries like in flow do you

00:16:01,000 --> 00:16:05,020
use the one notation or do you use the

00:16:03,010 --> 00:16:06,340
other notation is it the most important

00:16:05,020 --> 00:16:09,280
thing if the word nope

00:16:06,340 --> 00:16:11,620
is it one less thing to worry about 100%

00:16:09,280 --> 00:16:15,670
absolutely so we actually have a pretty

00:16:11,620 --> 00:16:17,920
rich set of principles these days which

00:16:15,670 --> 00:16:21,310
the next step would be the document so

00:16:17,920 --> 00:16:24,630
we'll put that on something like this

00:16:21,310 --> 00:16:29,700
don't search for it doesn't exist yet

00:16:24,630 --> 00:16:33,100
coming soon that would be awesome and

00:16:29,700 --> 00:16:35,170
finally do right we have our principles

00:16:33,100 --> 00:16:37,420
we have documented them it's now time to

00:16:35,170 --> 00:16:38,980
do actually implement them and code them

00:16:37,420 --> 00:16:41,590
and that's really the easy part right

00:16:38,980 --> 00:16:43,800
every engineer laughs building good code

00:16:41,590 --> 00:16:46,870
everybody every engineer loves following

00:16:43,800 --> 00:16:49,240
good strong principles the only thing

00:16:46,870 --> 00:16:51,670
that engineers love even more than doing

00:16:49,240 --> 00:16:55,000
that themselves is have a robot do it

00:16:51,670 --> 00:16:58,080
for them which brings me to our fourth

00:16:55,000 --> 00:17:03,340
and last learning ready kelly automate

00:16:58,080 --> 00:17:07,630
so in JIRA we developed quite a passion

00:17:03,340 --> 00:17:10,290
if not obsession with all forms of

00:17:07,630 --> 00:17:13,690
static code analysis mostly years liened

00:17:10,290 --> 00:17:15,760
so we actually have a ton so we use all

00:17:13,690 --> 00:17:17,200
that the standard is liberal a B&B

00:17:15,760 --> 00:17:18,550
configurational or whatever their

00:17:17,200 --> 00:17:20,800
standard is we use that in a lot about

00:17:18,550 --> 00:17:23,620
that but then we have a ton of custom

00:17:20,800 --> 00:17:26,290
rules that we actually code it for cheer

00:17:23,620 --> 00:17:28,630
specific principles that live in an hour

00:17:26,290 --> 00:17:31,060
in our code base directly or when the

00:17:28,630 --> 00:17:33,580
process of open sourcing some

00:17:31,060 --> 00:17:35,050
particularly good ones and it's actually

00:17:33,580 --> 00:17:37,570
quite an interesting experience to code

00:17:35,050 --> 00:17:40,300
in JIRA because you write your code the

00:17:37,570 --> 00:17:41,800
moment when you hit save you may get

00:17:40,300 --> 00:17:44,200
something quite different from what you

00:17:41,800 --> 00:17:45,279
forgot to type before which takes a bit

00:17:44,200 --> 00:17:48,220
get used to it but it's actually

00:17:45,279 --> 00:17:50,200
incredibly incredibly cool so I just

00:17:48,220 --> 00:17:51,549
want to share my favorite we will should

00:17:50,200 --> 00:17:52,620
want to brag about it because it's so

00:17:51,549 --> 00:17:55,929
 cool

00:17:52,620 --> 00:18:00,130
look at look at that I don't know about

00:17:55,929 --> 00:18:01,480
you but for me this makes me sick I'd

00:18:00,130 --> 00:18:04,240
look at all the imports there's no

00:18:01,480 --> 00:18:05,950
structure there's no sorting the library

00:18:04,240 --> 00:18:07,750
imports there are relative imports there

00:18:05,950 --> 00:18:09,279
are absolute imports imports down to

00:18:07,750 --> 00:18:11,169
highway kita imports up the hierarchy I

00:18:09,279 --> 00:18:13,570
hate it

00:18:11,169 --> 00:18:16,990
so what you can do in JIRA is just press

00:18:13,570 --> 00:18:21,909
save and you get this isn't a beautiful

00:18:16,990 --> 00:18:23,710
group I kind of imported it said the

00:18:21,909 --> 00:18:26,289
module is it said relative is it

00:18:23,710 --> 00:18:27,519
absolute alphabetically sorted there's a

00:18:26,289 --> 00:18:29,980
bit of semantic sweating in there as

00:18:27,519 --> 00:18:33,850
well that you can configure I love it

00:18:29,980 --> 00:18:36,010
so much less time spent on renting in

00:18:33,850 --> 00:18:37,389
the arse and arguing on whether that

00:18:36,010 --> 00:18:39,130
employ should be on top of the other one

00:18:37,389 --> 00:18:43,600
or not it's just locked in that's how we

00:18:39,130 --> 00:18:46,389
do another thing that we developed and

00:18:43,600 --> 00:18:47,980
that's actually open source already is a

00:18:46,389 --> 00:18:51,789
thing called strict are so strict that

00:18:47,980 --> 00:18:54,279
is quite similar to be aslant but it

00:18:51,789 --> 00:18:57,279
doesn't so much focus on individual

00:18:54,279 --> 00:19:01,149
files what years Lim does but really

00:18:57,279 --> 00:19:03,340
focuses on a project as a whole my

00:19:01,149 --> 00:19:06,570
favorite rule layer is the circular

00:19:03,340 --> 00:19:09,519
dependency rule which identifies circles

00:19:06,570 --> 00:19:12,549
but not only on file level but on folder

00:19:09,519 --> 00:19:15,460
level so think about this let's say you

00:19:12,549 --> 00:19:18,010
have a view folder that contains all

00:19:15,460 --> 00:19:20,350
your reacted stuff and you have a state

00:19:18,010 --> 00:19:20,799
folder that contains all your redact

00:19:20,350 --> 00:19:22,570
stuff

00:19:20,799 --> 00:19:25,779
it's perfectly normal perfectly

00:19:22,570 --> 00:19:27,580
acceptable that view imports from state

00:19:25,779 --> 00:19:28,960
because after all you got our end or

00:19:27,580 --> 00:19:31,600
something right you gotta get your data

00:19:28,960 --> 00:19:33,850
from somewhere now what could happen

00:19:31,600 --> 00:19:36,149
might actually happen quite often is

00:19:33,850 --> 00:19:38,620
that somebody for whatever reason

00:19:36,149 --> 00:19:40,720
introduces some dependency from state

00:19:38,620 --> 00:19:42,880
back to view which is but you

00:19:40,720 --> 00:19:44,679
shouldn't do that and strix that will

00:19:42,880 --> 00:19:49,090
tell you and stricter will break your

00:19:44,679 --> 00:19:51,190
build so we are talking about a

00:19:49,090 --> 00:19:52,419
unidirectional dependency graph or

00:19:51,190 --> 00:19:54,760
direct the dependency graph which is

00:19:52,419 --> 00:19:56,500
pretty awesome another thing that we use

00:19:54,760 --> 00:19:58,170
twixtor for that is just to indicate how

00:19:56,500 --> 00:20:03,160
opinionated we

00:19:58,170 --> 00:20:05,530
is a rule that defines the structure of

00:20:03,160 --> 00:20:07,600
an app really on a file name and folder

00:20:05,530 --> 00:20:10,330
name basis so don't don't read this

00:20:07,600 --> 00:20:13,090
configuration it's not important but

00:20:10,330 --> 00:20:14,830
what you may or may not be able to see

00:20:13,090 --> 00:20:17,560
here is that all the different apps that

00:20:14,830 --> 00:20:19,330
we have actually look there is similar

00:20:17,560 --> 00:20:21,640
view if you if you look at the middie

00:20:19,330 --> 00:20:23,650
idea right so you know there's no I

00:20:21,640 --> 00:20:25,600
named this file this you name that just

00:20:23,650 --> 00:20:27,970
file dad that's not all naming it the

00:20:25,600 --> 00:20:30,370
same which allows you to build a really

00:20:27,970 --> 00:20:32,320
strong mental model of how an app works

00:20:30,370 --> 00:20:37,360
it makes it really easy to jump into one

00:20:32,320 --> 00:20:40,930
if you want to change nothing so this

00:20:37,360 --> 00:20:43,630
really rounds it up for me so I think

00:20:40,930 --> 00:20:46,210
number one learning for me is is divide

00:20:43,630 --> 00:20:48,700
and conquer if I'm stating the complete

00:20:46,210 --> 00:20:50,170
obvious to you that's great if that's

00:20:48,700 --> 00:20:53,160
not the case then think about it when

00:20:50,170 --> 00:20:57,550
building your next react application

00:20:53,160 --> 00:21:01,900
next one is generate generate and I

00:20:57,550 --> 00:21:04,210
guess support some sense of ownership ya

00:21:01,900 --> 00:21:05,620
seen that manifest chasing there

00:21:04,210 --> 00:21:07,150
different ways to do that this one is

00:21:05,620 --> 00:21:10,800
really strict in that it guarantees that

00:21:07,150 --> 00:21:14,470
no file doesn't actually have an owner

00:21:10,800 --> 00:21:15,790
be opinionated that's I guess a bit of a

00:21:14,470 --> 00:21:18,370
controversial one and it has been

00:21:15,790 --> 00:21:21,280
controversial within geo as well but my

00:21:18,370 --> 00:21:24,010
personal recommendation is don't be

00:21:21,280 --> 00:21:26,890
afraid don't shy away from being

00:21:24,010 --> 00:21:28,420
opinionated across teams all right sure

00:21:26,890 --> 00:21:31,540
there may be some pushback everybody is

00:21:28,420 --> 00:21:34,780
proud and opinionated on on their way of

00:21:31,540 --> 00:21:36,910
doing but in the long run you will you

00:21:34,780 --> 00:21:39,460
will have more more effective and

00:21:36,910 --> 00:21:42,520
actually happier happier people in the

00:21:39,460 --> 00:21:43,900
organization and last but not least or

00:21:42,520 --> 00:21:45,100
the major out of it

00:21:43,900 --> 00:21:47,950
right so you can agree on all the

00:21:45,100 --> 00:21:51,060
principles of the world if nobody

00:21:47,950 --> 00:21:54,460
follows them they are worthless but and

00:21:51,060 --> 00:21:56,980
one way to do that is just keep an eye

00:21:54,460 --> 00:21:58,990
on it in PRS but we all know how humans

00:21:56,980 --> 00:22:00,670
are at seeing slips through and you get

00:21:58,990 --> 00:22:02,010
a broken window theory we're slowly

00:22:00,670 --> 00:22:04,780
everything falls apart

00:22:02,010 --> 00:22:09,880
robots don't make these mistakes if done

00:22:04,780 --> 00:22:11,290
right so have a look at Ashland at the

00:22:09,880 --> 00:22:13,810
US Mint Docs it's actually great

00:22:11,290 --> 00:22:15,910
fun to do that I love nothing more than

00:22:13,810 --> 00:22:20,110
writing a you know a casual yes Liam

00:22:15,910 --> 00:22:23,050
jubilant evening brilliant that's it for

00:22:20,110 --> 00:22:25,090
me yeah yes Atlassian the company that I

00:22:23,050 --> 00:22:27,270
work for was kind enough to sponsor this

00:22:25,090 --> 00:22:29,620
event I can say a few words about

00:22:27,270 --> 00:22:32,260
Atlassian so Atlassian doesn't only

00:22:29,620 --> 00:22:36,010
build cheer but also builds a couple of

00:22:32,260 --> 00:22:39,160
other tools that you may or may not know

00:22:36,010 --> 00:22:43,480
so Atlassian builds confluence bitbucket

00:22:39,160 --> 00:22:46,300
and also Trello all teams that all

00:22:43,480 --> 00:22:49,720
products that help teams to work

00:22:46,300 --> 00:22:53,950
together more effectively headquarters

00:22:49,720 --> 00:22:56,860
in Sydney but we have large engineering

00:22:53,950 --> 00:22:59,260
offices also in Boston and New York City

00:22:56,860 --> 00:23:01,900
and was in the Bay Area so there's

00:22:59,260 --> 00:23:03,460
mountain builders San Francisco there a

00:23:01,900 --> 00:23:06,520
couple of other offices around the world

00:23:03,460 --> 00:23:08,020
I just spent a week in beautiful Gdansk

00:23:06,520 --> 00:23:10,290
in Poland and they're actually a couple

00:23:08,020 --> 00:23:13,210
of folks working from Austria remotely

00:23:10,290 --> 00:23:14,410
and we're hiring really across all these

00:23:13,210 --> 00:23:17,490
offices

00:23:14,410 --> 00:23:20,740
I personally hire up for for Sydney but

00:23:17,490 --> 00:23:23,740
in general we're hiring everywhere and

00:23:20,740 --> 00:23:26,140
across all all usual roles so front end

00:23:23,740 --> 00:23:28,840
certainly a big focus area up it is I'm

00:23:26,140 --> 00:23:30,400
always happy to do hire full-stack

00:23:28,840 --> 00:23:30,760
developers and that can develop us as

00:23:30,400 --> 00:23:34,870
well

00:23:30,760 --> 00:23:36,640
so if you're interested I'll stick

00:23:34,870 --> 00:23:38,350
around for a bit let's grab a beer

00:23:36,640 --> 00:23:40,030
together I have a couple of these

00:23:38,350 --> 00:23:42,690
t-shirts here that I happily trade for

00:23:40,030 --> 00:23:45,120
contact information so I'm just grabbing

00:23:42,690 --> 00:23:48,040
on a more personal note actually

00:23:45,120 --> 00:23:50,740
relocated myself from Vienna to Sydney a

00:23:48,040 --> 00:23:52,870
couple of years ago it is a really good

00:23:50,740 --> 00:23:54,730
place to live that's actually from my

00:23:52,870 --> 00:23:57,190
apartment windows a good good place to

00:23:54,730 --> 00:23:58,900
have your morning coffee very open

00:23:57,190 --> 00:24:00,940
society brought my girlfriend she

00:23:58,900 --> 00:24:03,730
obviously likes it as well the only

00:24:00,940 --> 00:24:05,830
thing that I really miss is good old

00:24:03,730 --> 00:24:07,990
Krishna kyle super so every time I fly

00:24:05,830 --> 00:24:11,860
from from Vienna to Sydney this is what

00:24:07,990 --> 00:24:13,590
my suitcase looks like this is it for me

00:24:11,860 --> 00:24:17,180
thanks folks

00:24:13,590 --> 00:24:17,180

YouTube URL: https://www.youtube.com/watch?v=HJfBDeWZO_I


