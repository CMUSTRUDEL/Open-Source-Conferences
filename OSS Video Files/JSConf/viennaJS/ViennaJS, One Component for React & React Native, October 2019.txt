Title: ViennaJS, One Component for React & React Native, October 2019
Publication date: 2019-11-02
Playlist: viennaJS
Description: 
	Talk by Vilva Athiban

It will be a 20 minutes live coding session, where in we create a one component Design system. This Design system can be used both for React & React-Native.
Captions: 
	00:00:00,030 --> 00:00:05,790
today we will be talking about mono

00:00:01,829 --> 00:00:08,400
components mono components is has idea

00:00:05,790 --> 00:00:11,099
where you can use a single design system

00:00:08,400 --> 00:00:14,880
for react and react native before we get

00:00:11,099 --> 00:00:19,170
into it a quick intro about me I am will

00:00:14,880 --> 00:00:22,170
wah hi I am coming from Berlin I work

00:00:19,170 --> 00:00:25,109
for a company called or o mio which was

00:00:22,170 --> 00:00:28,439
called go hero before and I was working

00:00:25,109 --> 00:00:28,859
with vi I am more of a front-end

00:00:28,439 --> 00:00:32,250
developer

00:00:28,859 --> 00:00:34,290
I work on the browser and I do some open

00:00:32,250 --> 00:00:39,770
source stuff and mostly I work on

00:00:34,290 --> 00:00:42,780
reacting JavaScript ok let's start

00:00:39,770 --> 00:00:45,170
before we get into the mono components

00:00:42,780 --> 00:00:48,750
we will see why we need mono components

00:00:45,170 --> 00:00:50,940
so as a startup in 2019 already like

00:00:48,750 --> 00:00:53,340
online presence has become a major

00:00:50,940 --> 00:00:55,110
important thing no matter what business

00:00:53,340 --> 00:00:57,600
you do you definitely need an online

00:00:55,110 --> 00:00:59,640
presence in these days and what do I

00:00:57,600 --> 00:01:01,829
mean by online presence I mean the

00:00:59,640 --> 00:01:04,650
mobile web site desktop web site I

00:01:01,829 --> 00:01:06,030
always have an Android app without this

00:01:04,650 --> 00:01:10,170
you are not considered as a business

00:01:06,030 --> 00:01:12,390
anymore what are the problem in having

00:01:10,170 --> 00:01:15,720
their own lim presence as a start-up you

00:01:12,390 --> 00:01:17,880
wanted things to move very fast like you

00:01:15,720 --> 00:01:20,009
can't be slow because so many people

00:01:17,880 --> 00:01:22,049
questioning questioning on you you have

00:01:20,009 --> 00:01:23,790
to get your market share you have to get

00:01:22,049 --> 00:01:25,860
your customers on board so much

00:01:23,790 --> 00:01:29,100
challenges and you can't be waiting on

00:01:25,860 --> 00:01:30,630
you on something and also like people

00:01:29,100 --> 00:01:33,210
who have worked in startups might know

00:01:30,630 --> 00:01:34,710
like you might spend a day building a

00:01:33,210 --> 00:01:36,960
feature like you might work late hours

00:01:34,710 --> 00:01:39,780
next day morning the product manager or

00:01:36,960 --> 00:01:43,079
the city becomes he says like no need of

00:01:39,780 --> 00:01:45,390
this feature build this and that's like

00:01:43,079 --> 00:01:47,490
so much of mismatches in when you have

00:01:45,390 --> 00:01:51,299
multiple teams and one more thing is

00:01:47,490 --> 00:01:53,600
like getting developers if you have to

00:01:51,299 --> 00:01:56,640
maintain a separate native Android app

00:01:53,600 --> 00:01:58,710
native iOS app under website you need

00:01:56,640 --> 00:02:00,750
three different teams and if you are

00:01:58,710 --> 00:02:03,180
lucky you can get that you can form a

00:02:00,750 --> 00:02:04,560
team which works on iOS and Android but

00:02:03,180 --> 00:02:07,740
still you need two different teams

00:02:04,560 --> 00:02:10,160
hiring them and maintaining teams are

00:02:07,740 --> 00:02:13,380
very hard for any early-stage startup

00:02:10,160 --> 00:02:16,710
also say for instance there

00:02:13,380 --> 00:02:18,720
so feature called feature a which can be

00:02:16,710 --> 00:02:22,260
easy to implement in web but hard to

00:02:18,720 --> 00:02:24,180
implement in mobile mobile apps and this

00:02:22,260 --> 00:02:27,120
will result in inconsistent behavior

00:02:24,180 --> 00:02:29,730
between web and the apps and what

00:02:27,120 --> 00:02:32,250
happens because of this as early-stage

00:02:29,730 --> 00:02:34,220
startup or a startup which is gaining a

00:02:32,250 --> 00:02:36,600
reputation you will lose your reputation

00:02:34,220 --> 00:02:39,540
also you have to spend more on

00:02:36,600 --> 00:02:42,360
developers and teams so what is the

00:02:39,540 --> 00:02:44,180
solution solution for all the problems

00:02:42,360 --> 00:02:47,190
is mono components

00:02:44,180 --> 00:02:49,230
what is mono components mono components

00:02:47,190 --> 00:02:52,500
is an ideology where we build a single

00:02:49,230 --> 00:02:55,500
codebase and the single codebase adds as

00:02:52,500 --> 00:02:59,640
both web sites as well as mobile app

00:02:55,500 --> 00:03:01,620
using react native and we'll be building

00:02:59,640 --> 00:03:04,560
something very shortly like a small life

00:03:01,620 --> 00:03:06,360
coding and how does this solve the

00:03:04,560 --> 00:03:08,910
problem so you are going to have a

00:03:06,360 --> 00:03:11,490
single codebase that means your features

00:03:08,910 --> 00:03:13,050
are going to be consistent you make some

00:03:11,490 --> 00:03:14,640
change it is going to be changed across

00:03:13,050 --> 00:03:16,290
all the platforms you remove some

00:03:14,640 --> 00:03:18,630
feature it is going to be consistent

00:03:16,290 --> 00:03:20,850
across all the platforms and when it

00:03:18,630 --> 00:03:23,190
comes to the teaming a small team of

00:03:20,850 --> 00:03:25,470
JavaScript developers alone can manage

00:03:23,190 --> 00:03:28,040
all the platforms you don't need to have

00:03:25,470 --> 00:03:30,390
different teams for different platforms

00:03:28,040 --> 00:03:33,030
this actually makes your development

00:03:30,390 --> 00:03:39,440
very faster and enables your startup go

00:03:33,030 --> 00:03:42,240
very fast so let's start the live coding

00:03:39,440 --> 00:03:46,440
this is for my reference in case I

00:03:42,240 --> 00:03:48,209
forget something so what I have done so

00:03:46,440 --> 00:03:51,420
far is like when I was waiting I did two

00:03:48,209 --> 00:03:56,190
things one I used create react native

00:03:51,420 --> 00:03:58,440
app the boilerplate and created a react

00:03:56,190 --> 00:04:01,890
native version and I used create react

00:03:58,440 --> 00:04:04,110
app and created a web version first step

00:04:01,890 --> 00:04:06,480
I will combine both the things into a

00:04:04,110 --> 00:04:13,110
single folder so it's easy to combine

00:04:06,480 --> 00:04:15,120
web into that so I moved the public

00:04:13,110 --> 00:04:17,310
folder and source folder into react

00:04:15,120 --> 00:04:20,060
native version and I am going to the

00:04:17,310 --> 00:04:20,060
package Jason

00:04:26,330 --> 00:04:37,710
in the dependencies I need my rad

00:04:29,669 --> 00:04:41,240
scripts in additional I am just merging

00:04:37,710 --> 00:04:41,240
both the baller blades

00:04:56,280 --> 00:05:03,150
and copy the remaining config I'm not

00:04:58,410 --> 00:05:06,510
even reading that yeah so now we are

00:05:03,150 --> 00:05:10,770
good here I will just delete this web

00:05:06,510 --> 00:05:16,560
version let me install the new

00:05:10,770 --> 00:05:18,240
dependencies in the meantime so now if

00:05:16,560 --> 00:05:21,780
you carefully look at this folder

00:05:18,240 --> 00:05:24,000
structure here it points to some file

00:05:21,780 --> 00:05:26,390
within node modules and if you open that

00:05:24,000 --> 00:05:26,390
file

00:05:37,050 --> 00:05:49,230
so what this file does is I will open

00:05:40,830 --> 00:05:51,240
our so for ria for react we have

00:05:49,230 --> 00:05:53,010
something called react Dom dot render

00:05:51,240 --> 00:05:56,610
which mounts your entire application

00:05:53,010 --> 00:05:59,430
into the actual Dom similarly this app

00:05:56,610 --> 00:06:02,310
entry file which is inside expo it just

00:05:59,430 --> 00:06:04,620
imports your app file the route

00:06:02,310 --> 00:06:08,010
component and registers is at the root

00:06:04,620 --> 00:06:10,040
as the root component since we are going

00:06:08,010 --> 00:06:13,350
to have a common thing we will fall now

00:06:10,040 --> 00:06:14,630
not need this so we will rearrange the

00:06:13,350 --> 00:06:17,640
files first

00:06:14,630 --> 00:06:19,950
so within source I don't need CSS

00:06:17,640 --> 00:06:21,870
because I will write my own CSS react

00:06:19,950 --> 00:06:24,480
native - I mean stale components react

00:06:21,870 --> 00:06:29,940
native doesn't support CSS I will remove

00:06:24,480 --> 00:06:33,230
my tests for now and within source I

00:06:29,940 --> 00:06:37,800
will create a folder called components

00:06:33,230 --> 00:06:40,950
within which I will create a folder

00:06:37,800 --> 00:06:46,440
called app first I will move my book

00:06:40,950 --> 00:06:49,890
version of app into it next this is my

00:06:46,440 --> 00:06:55,770
react version I will first rename it to

00:06:49,890 --> 00:07:02,570
app dot native dot J's and move this as

00:06:55,770 --> 00:07:02,570
well inside this add an index file

00:07:14,000 --> 00:07:18,960
so now I have created app component

00:07:16,620 --> 00:07:21,540
which has two versions of it one is the

00:07:18,960 --> 00:07:24,960
native version and other is dr desktop

00:07:21,540 --> 00:07:31,020
version I will just for simplify

00:07:24,960 --> 00:07:40,169
I will simplify it like test web and in

00:07:31,020 --> 00:07:42,990
the native test iron so why have it done

00:07:40,169 --> 00:07:44,870
will then than this so when a folder or

00:07:42,990 --> 00:07:47,580
the components are structured this way

00:07:44,870 --> 00:07:50,430
automatically react native looks for a

00:07:47,580 --> 00:07:52,289
file with dot native extension and only

00:07:50,430 --> 00:07:54,270
when there is no dot native extension it

00:07:52,289 --> 00:07:57,419
starts picking up the file with dot J's

00:07:54,270 --> 00:08:00,150
extension so now we are having two

00:07:57,419 --> 00:08:02,850
versions of the same app as so sorry

00:08:00,150 --> 00:08:07,289
same component one for the app and other

00:08:02,850 --> 00:08:15,060
for the web and now I'll add my index

00:08:07,289 --> 00:08:22,349
file index dot native dot J's what it's

00:08:15,060 --> 00:08:26,700
going to do I am importing my register

00:08:22,349 --> 00:08:35,669
root component from Expo and also my app

00:08:26,700 --> 00:08:39,240
component and register root component of

00:08:35,669 --> 00:08:41,550
app so now my index dot native file

00:08:39,240 --> 00:08:44,159
registered the app component as the root

00:08:41,550 --> 00:08:46,279
component for react native and index

00:08:44,159 --> 00:08:52,020
file registers my app component as the

00:08:46,279 --> 00:08:54,990
root component for web all set I will go

00:08:52,020 --> 00:09:04,890
to my package Jason change the entry

00:08:54,990 --> 00:09:07,790
file sourceless index dot 80s let's

00:09:04,890 --> 00:09:07,790
check if it works

00:09:08,430 --> 00:09:31,170
yawn start is for react native okay I'm

00:09:19,589 --> 00:09:35,480
opening it in iOS simulator and start

00:09:31,170 --> 00:09:35,480
web is for the website

00:10:09,730 --> 00:10:19,470
okay summation oh okay I have removed

00:10:15,339 --> 00:10:19,470
these files but I haven't updated it

00:10:19,559 --> 00:10:25,589
cannot resolve app and in index dot J's

00:10:30,929 --> 00:10:41,019
I got my test web and my react native is

00:10:35,709 --> 00:10:43,569
still bundling tests are in okay now in

00:10:41,019 --> 00:10:46,089
a single repository we have two versions

00:10:43,569 --> 00:10:48,069
of component one component is served for

00:10:46,089 --> 00:10:51,040
react native and other is served for web

00:10:48,069 --> 00:10:52,869
but this is not our end goal our end

00:10:51,040 --> 00:10:55,239
goal is to have a single component which

00:10:52,869 --> 00:10:57,639
is served for both the platforms so now

00:10:55,239 --> 00:11:02,529
we will go ahead and create a design

00:10:57,639 --> 00:11:05,199
system for it ideally this design system

00:11:02,529 --> 00:11:07,329
should be a separate repository or

00:11:05,199 --> 00:11:12,189
package but for demo purposes I am

00:11:07,329 --> 00:11:14,289
creating it within this itself for now I

00:11:12,189 --> 00:11:17,999
will create two components one will be

00:11:14,289 --> 00:11:25,899
made div which will have a div dot j s

00:11:17,999 --> 00:11:33,339
and d p-- dot native dot J's and the

00:11:25,899 --> 00:11:37,179
index file to export it in my do in may

00:11:33,339 --> 00:11:40,509
give component I will just export my div

00:11:37,179 --> 00:11:43,769
tag and in my native component I will

00:11:40,509 --> 00:11:43,769
export my view

00:11:51,079 --> 00:12:05,779
and in index I will input D and export

00:11:57,779 --> 00:12:14,480
it next I will create a text component

00:12:05,779 --> 00:12:14,480
for rendering the text text dot J is

00:12:15,139 --> 00:12:28,290
text or native dorje s index dot J's

00:12:22,430 --> 00:12:39,050
within text or Jas I will export P

00:12:28,290 --> 00:12:44,370
component here I will export text as

00:12:39,050 --> 00:12:59,850
default and an index I will import my

00:12:44,370 --> 00:13:02,009
text so now I have created a design

00:12:59,850 --> 00:13:04,110
system with two components one is my

00:13:02,009 --> 00:13:07,319
container which is view for react native

00:13:04,110 --> 00:13:08,790
and do for web and other is my text

00:13:07,319 --> 00:13:12,089
which is text component for react native

00:13:08,790 --> 00:13:13,949
and P for web I will start using maybe a

00:13:12,089 --> 00:13:18,689
design system in my application now I

00:13:13,949 --> 00:13:21,560
will remove my dot native file I will go

00:13:18,689 --> 00:13:21,560
to my app dot J's

00:13:22,100 --> 00:13:33,839
instead of using the div directly I will

00:13:31,920 --> 00:13:37,110
import the div from the design system

00:13:33,839 --> 00:13:45,560
and within which I will import my text

00:13:37,110 --> 00:13:45,560
from the design system test

00:13:45,830 --> 00:13:55,730
mono component now I need to restart my

00:13:52,730 --> 00:13:55,730
stuff

00:14:06,020 --> 00:14:11,740
if you see the web version already got a

00:14:08,300 --> 00:14:20,450
hot reloaded but I'm I need to rebuttal

00:14:11,740 --> 00:14:27,380
this okay it's appearing in the top

00:14:20,450 --> 00:14:29,570
above 857 finally we have done it so we

00:14:27,380 --> 00:14:32,390
now we have a single component which

00:14:29,570 --> 00:14:34,460
which is you rendered both in the web as

00:14:32,390 --> 00:14:38,140
well as four in the react native app let

00:14:34,460 --> 00:14:38,140
me add some slight style

00:15:06,920 --> 00:15:11,760
so now I have added some snails like

00:15:09,570 --> 00:15:14,940
just some random margin and a background

00:15:11,760 --> 00:15:16,590
color if you see here I just made change

00:15:14,940 --> 00:15:19,170
in one place and it's getting reflected

00:15:16,590 --> 00:15:23,340
in my app as well as in the web this is

00:15:19,170 --> 00:15:25,470
mono component obviously everything will

00:15:23,340 --> 00:15:28,770
have some cons what is the cons of mono

00:15:25,470 --> 00:15:31,200
components the UF stationers should have

00:15:28,770 --> 00:15:33,180
enough knowledge to create us designs

00:15:31,200 --> 00:15:34,950
that will match all the platforms that

00:15:33,180 --> 00:15:37,820
is the first challenge we face when we

00:15:34,950 --> 00:15:40,410
have to use all this like this approach

00:15:37,820 --> 00:15:42,180
second you can't use CSS and react

00:15:40,410 --> 00:15:43,890
native that's a drawback so you should

00:15:42,180 --> 00:15:47,730
always fall back to things like styl

00:15:43,890 --> 00:15:49,980
components third thing you cannot

00:15:47,730 --> 00:15:52,050
directly use any history ml tags in your

00:15:49,980 --> 00:15:55,050
components always you should create an

00:15:52,050 --> 00:15:57,240
element tree version of a component in

00:15:55,050 --> 00:15:59,720
your design system import it and use it

00:15:57,240 --> 00:16:02,460
in your app this is the third corner and

00:15:59,720 --> 00:16:04,680
that can be it's cases like how we had

00:16:02,460 --> 00:16:06,990
AB dot J's and AB dot native DOJ's

00:16:04,680 --> 00:16:08,850
that can be few components which have to

00:16:06,990 --> 00:16:10,680
work differently in the web and

00:16:08,850 --> 00:16:13,080
differently in the react native version

00:16:10,680 --> 00:16:15,240
and there you need to maintain two

00:16:13,080 --> 00:16:18,210
versions of the same component like app

00:16:15,240 --> 00:16:19,890
dot J's and F dot native dot J's also

00:16:18,210 --> 00:16:22,620
you should be aware of few CSS

00:16:19,890 --> 00:16:24,780
properties for instance position:fixed

00:16:22,620 --> 00:16:26,490
does not work in react native so you

00:16:24,780 --> 00:16:28,920
should not design your components using

00:16:26,490 --> 00:16:31,230
such CSS properties these are the cons

00:16:28,920 --> 00:16:34,440
which I faced when I was using this

00:16:31,230 --> 00:16:36,210
approach but overall when you use this

00:16:34,440 --> 00:16:38,610
definitely the solution is scalable as

00:16:36,210 --> 00:16:40,560
well I have used it in production I

00:16:38,610 --> 00:16:44,130
cannot give more details but it is

00:16:40,560 --> 00:16:46,770
scalable as well and as a start-up it's

00:16:44,130 --> 00:16:50,010
highly beneficial so overall it's good

00:16:46,770 --> 00:16:53,040
to use there also I am creating a open

00:16:50,010 --> 00:16:54,780
source design system for this people

00:16:53,040 --> 00:16:58,700
interested can ping me and contribute to

00:16:54,780 --> 00:17:02,099
it that's it thank you

00:16:58,700 --> 00:17:02,099

YouTube URL: https://www.youtube.com/watch?v=stcjlaopqxY


