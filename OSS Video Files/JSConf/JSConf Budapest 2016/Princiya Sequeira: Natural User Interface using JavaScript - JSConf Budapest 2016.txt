Title: Princiya Sequeira: Natural User Interface using JavaScript - JSConf Budapest 2016
Publication date: 2016-06-10
Playlist: JSConf Budapest 2016
Description: 
	The way we interacted with computers on a large scale was stuck in place for roughly 20 years. From mouse to keyboard to joystick, it is game over. Today it is the era of gestures. Today’s gamers can do everything from slice and dice produce in Fruit Ninja to quest for a dragon in Skyrim. We’ve been captivated by these powerful, natural, and intuitive interactions; imagining what it would be like to have that power at our own fingertips.

In this recent decade, we’ve seen some staggering advances in technologies bring us closer making these magical experiences a reality. In this talk I will present how we can create new, intuitive, interactions for these novel input devices using JavaScript.

http://jsconfbp.com/speakers/princiya-sequeira.html
Captions: 
	00:00:10,060 --> 00:00:13,580
hello Budapest and good afternoon

00:00:12,680 --> 00:00:17,990
everybody

00:00:13,580 --> 00:00:20,210
I'm sure you all had a good lunch I hope

00:00:17,990 --> 00:00:22,580
you all don't sleep after the end of 30

00:00:20,210 --> 00:00:26,329
minutes so I'll try my best to keep

00:00:22,580 --> 00:00:32,029
y'all awake alright let's get started

00:00:26,329 --> 00:00:34,610
so yes technology has already become

00:00:32,029 --> 00:00:37,130
more productive and more natural more

00:00:34,610 --> 00:00:40,670
intuitive the interfaces are more

00:00:37,130 --> 00:00:42,800
intuitive more natural now having

00:00:40,670 --> 00:00:45,199
interfaces this way makes the user

00:00:42,800 --> 00:00:48,980
understand the product better or like

00:00:45,199 --> 00:00:52,309
come closer with it so here I am Prince

00:00:48,980 --> 00:00:55,280
iam working for a solando in Berlin and

00:00:52,309 --> 00:01:02,499
to talk about natural user interfaces

00:00:55,280 --> 00:01:07,540
using javascript so we typed we clicked

00:01:02,499 --> 00:01:12,050
touched next what next next could be

00:01:07,540 --> 00:01:15,410
alright I will go to the next slide with

00:01:12,050 --> 00:01:19,630
a demo and the demo is highly dependent

00:01:15,410 --> 00:01:19,630
on light so I really hope it works

00:01:35,650 --> 00:01:47,860
okay so two slides again so we typed

00:01:39,580 --> 00:01:49,960
clicked touched next what yeah so this

00:01:47,860 --> 00:01:53,620
is what I am going to talk to y'all

00:01:49,960 --> 00:01:54,610
about natural user interfaces using

00:01:53,620 --> 00:01:56,530
javascript

00:01:54,610 --> 00:01:59,020
this demo will you go over your so let

00:01:56,530 --> 00:02:03,240
me just close it but yes it did its

00:01:59,020 --> 00:02:07,150
purpose and yes so it could be gestures

00:02:03,240 --> 00:02:09,670
right it could be a speech it could be

00:02:07,150 --> 00:02:13,390
anything natural user interfaces could

00:02:09,670 --> 00:02:15,970
include touch we typed we clicked touch

00:02:13,390 --> 00:02:18,090
was more intuitive than click because it

00:02:15,970 --> 00:02:25,030
was more direct next I would say

00:02:18,090 --> 00:02:28,690
gestures or speech yes evolution of user

00:02:25,030 --> 00:02:31,350
interfaces so somewhere this was coined

00:02:28,690 --> 00:02:35,050
somewhere back in the 90s

00:02:31,350 --> 00:02:37,420
wherein it started with CLI command line

00:02:35,050 --> 00:02:40,390
interface wherein user had to understand

00:02:37,420 --> 00:02:42,820
of an artificial medium that is the

00:02:40,390 --> 00:02:44,070
keyboard to input something and to

00:02:42,820 --> 00:02:47,800
interact with the interface

00:02:44,070 --> 00:02:49,450
next came GUI graphical user interface

00:02:47,800 --> 00:02:53,560
with the advent of the mouse

00:02:49,450 --> 00:02:56,260
users could interact more closely better

00:02:53,560 --> 00:02:59,230
than the keyboard with the interface and

00:02:56,260 --> 00:03:03,010
understand the interface more better and

00:02:59,230 --> 00:03:05,620
now we have this NUI with the advent of

00:03:03,010 --> 00:03:07,989
a are we are perceptual computing we

00:03:05,620 --> 00:03:09,850
hear that everywhere if we just do a

00:03:07,989 --> 00:03:11,830
search on the internet what is the state

00:03:09,850 --> 00:03:14,410
of art what we are AR or perceptual

00:03:11,830 --> 00:03:18,459
computing there are there is lot

00:03:14,410 --> 00:03:21,850
happening out there and anyway has more

00:03:18,459 --> 00:03:29,170
space and it is more direct it is more

00:03:21,850 --> 00:03:30,850
intuitive yes natural user interfaces to

00:03:29,170 --> 00:03:34,660
coin it it is a system for

00:03:30,850 --> 00:03:37,420
human-computer interaction wherein users

00:03:34,660 --> 00:03:41,769
interact more intuitively more directly

00:03:37,420 --> 00:03:44,530
perform more closer tasks these

00:03:41,769 --> 00:03:47,750
interfaces are yes are more natural and

00:03:44,530 --> 00:03:51,930
more intuitive

00:03:47,750 --> 00:03:54,989
yes a quick study about natural user

00:03:51,930 --> 00:03:58,950
interfaces revealed this sub info graph

00:03:54,989 --> 00:04:01,920
this was taken from the internet a big

00:03:58,950 --> 00:04:04,500
it was done and then yeah the results of

00:04:01,920 --> 00:04:06,709
a link of a pretty cool because the work

00:04:04,500 --> 00:04:08,909
areas where it's targeting that is

00:04:06,709 --> 00:04:10,319
entertainment education social

00:04:08,909 --> 00:04:12,269
connections health care environment

00:04:10,319 --> 00:04:18,329
natural user interfaces has its impact

00:04:12,269 --> 00:04:22,019
everywhere so here I am to talk about

00:04:18,329 --> 00:04:23,930
anyway plus jeaious and I would coin at

00:04:22,019 --> 00:04:27,120
us in you ijs

00:04:23,930 --> 00:04:29,610
JavaScript has its broad appeal and it's

00:04:27,120 --> 00:04:33,330
because of this broader appeal a lot of

00:04:29,610 --> 00:04:36,479
people like to try it and we admit it or

00:04:33,330 --> 00:04:40,470
not it is JavaScript which dominates the

00:04:36,479 --> 00:04:43,770
web today and yes here is what we are to

00:04:40,470 --> 00:04:47,280
celebrate javascript and may javascript

00:04:43,770 --> 00:04:54,930
be with all of us so let's talk about nu

00:04:47,280 --> 00:04:57,300
IJ s yes this is my the interesting

00:04:54,930 --> 00:04:59,580
slide I like to talk about motivation

00:04:57,300 --> 00:05:01,169
whenever I like to do something or I

00:04:59,580 --> 00:05:04,620
have to do something or I have to

00:05:01,169 --> 00:05:07,919
motivate somebody yes so how did this

00:05:04,620 --> 00:05:11,630
whole idea start any yjs how did it how

00:05:07,919 --> 00:05:14,370
all of this started so it started with

00:05:11,630 --> 00:05:18,000
me building trying to build a simulator

00:05:14,370 --> 00:05:20,849
for motion control devices or in other

00:05:18,000 --> 00:05:23,490
words 3d cameras I have a Whitney or

00:05:20,849 --> 00:05:28,020
leap motion today I will talk about more

00:05:23,490 --> 00:05:29,760
about it later but yes so the any yjs

00:05:28,020 --> 00:05:33,300
started when I was trying to build a

00:05:29,760 --> 00:05:37,020
simulator for 3d cameras or motion

00:05:33,300 --> 00:05:40,410
control sensors and yes there is another

00:05:37,020 --> 00:05:41,639
motivation behind as to how I started to

00:05:40,410 --> 00:05:44,460
come up with this idea of trying to

00:05:41,639 --> 00:05:45,030
build a simulator so of what what so

00:05:44,460 --> 00:05:48,510
happens

00:05:45,030 --> 00:05:51,449
oh say oh you are a go yeah Oh your ago

00:05:48,510 --> 00:05:54,479
I was trying to trying a talk about

00:05:51,449 --> 00:05:56,960
perceptual computing and then I was

00:05:54,479 --> 00:05:59,820
trying this intel's realsense sdk and

00:05:56,960 --> 00:06:00,500
two days prior to the talk and stole the

00:05:59,820 --> 00:06:01,940
story

00:06:00,500 --> 00:06:04,490
so please bear with me if you are

00:06:01,940 --> 00:06:05,090
listening again two days prior to the

00:06:04,490 --> 00:06:07,490
talk

00:06:05,090 --> 00:06:10,610
windows and my system crashed and then I

00:06:07,490 --> 00:06:13,880
didn't have a backup what to do and I

00:06:10,610 --> 00:06:16,790
didn't have backup of my cord and this

00:06:13,880 --> 00:06:19,940
SDK which I was trying to walk on solely

00:06:16,790 --> 00:06:23,000
relied on Windows and then that's how I

00:06:19,940 --> 00:06:24,200
started to think about how about trying

00:06:23,000 --> 00:06:27,620
to build some simulator

00:06:24,200 --> 00:06:29,630
where then maybe it is a platform

00:06:27,620 --> 00:06:32,930
independent or and whether you don't

00:06:29,630 --> 00:06:36,500
have to or it is not dependent on any

00:06:32,930 --> 00:06:39,560
platform or you don't have to use any

00:06:36,500 --> 00:06:44,810
device right so that's how this idea of

00:06:39,560 --> 00:06:47,900
simulator originated and then yes the

00:06:44,810 --> 00:06:50,690
simulator was there the next was what do

00:06:47,900 --> 00:06:53,470
I do with the simulator so next was try

00:06:50,690 --> 00:06:56,780
to build some apps for the simulator and

00:06:53,470 --> 00:06:59,480
down down those lights I'll be talking

00:06:56,780 --> 00:07:02,150
about two apps that is one is the

00:06:59,480 --> 00:07:04,400
slideshow which I just showed you all

00:07:02,150 --> 00:07:07,760
about using gestures I controlled my

00:07:04,400 --> 00:07:10,669
slide it's kind of bad it's like not

00:07:07,760 --> 00:07:12,610
very neat it's highly dependent on light

00:07:10,669 --> 00:07:16,070
and after to control the frame rates

00:07:12,610 --> 00:07:19,520
things like that but yes it's serving

00:07:16,070 --> 00:07:22,580
its purpose and the other app I want to

00:07:19,520 --> 00:07:26,270
talk about is draw how about imagine

00:07:22,580 --> 00:07:28,880
this you grabbing a device and you open

00:07:26,270 --> 00:07:31,310
an app do some doodles in the air and

00:07:28,880 --> 00:07:34,760
watch your art appear on the screen yes

00:07:31,310 --> 00:07:36,979
so I have I have come up with this app

00:07:34,760 --> 00:07:40,550
called draw and the other one is slight

00:07:36,979 --> 00:07:45,620
so yes that's about like how it all got

00:07:40,550 --> 00:07:49,580
started how any ideas started yes before

00:07:45,620 --> 00:07:52,190
getting started I had to like try and

00:07:49,580 --> 00:07:54,200
understand as to what is this all the

00:07:52,190 --> 00:07:56,630
hype about right of method reality

00:07:54,200 --> 00:07:58,100
virtual reality perceptual computing

00:07:56,630 --> 00:08:00,800
there are so many devices out in the

00:07:58,100 --> 00:08:04,340
market augmented reality as the word

00:08:00,800 --> 00:08:06,800
augmented says the reality or it is real

00:08:04,340 --> 00:08:09,500
the environment is real but there now it

00:08:06,800 --> 00:08:11,360
is augmented augmented as an added so

00:08:09,500 --> 00:08:14,090
I'm standing here maybe I want to show

00:08:11,360 --> 00:08:16,669
some background like Taj Mahal in India

00:08:14,090 --> 00:08:18,710
or something else arise on a desert so

00:08:16,669 --> 00:08:21,169
I'm mending the reality and that is what

00:08:18,710 --> 00:08:22,570
augmented reality is about that's why

00:08:21,169 --> 00:08:25,820
where we see augmented reality

00:08:22,570 --> 00:08:27,410
applications in real estate things like

00:08:25,820 --> 00:08:30,440
that right you're augmenting the reality

00:08:27,410 --> 00:08:32,630
next it's about virtual reality what is

00:08:30,440 --> 00:08:35,599
this virtual reality about virtual

00:08:32,630 --> 00:08:37,610
reality the reality doesn't exist at all

00:08:35,599 --> 00:08:39,409
you are like trying to create a virtual

00:08:37,610 --> 00:08:41,029
environment you are simulating you are

00:08:39,409 --> 00:08:43,130
trying to build an environment which

00:08:41,029 --> 00:08:46,820
doesn't exist at all so it could be

00:08:43,130 --> 00:08:49,100
assimilated environment then yes we have

00:08:46,820 --> 00:08:51,770
this perceptual computing bringing

00:08:49,100 --> 00:08:53,510
human-like senses to devices yes there

00:08:51,770 --> 00:08:55,279
are like so many devices out there with

00:08:53,510 --> 00:08:57,279
support augmented reality virtual

00:08:55,279 --> 00:08:59,870
reality perceptual computing

00:08:57,279 --> 00:09:02,630
applications and perceptual computing is

00:08:59,870 --> 00:09:05,320
making the device understand behave more

00:09:02,630 --> 00:09:07,400
like human understand gestures wise

00:09:05,320 --> 00:09:09,350
giving more of like human-like

00:09:07,400 --> 00:09:11,630
capabilities into the device and that is

00:09:09,350 --> 00:09:15,130
perceptual computing perceptual being

00:09:11,630 --> 00:09:18,380
able to perceive being able to see oh

00:09:15,130 --> 00:09:24,290
yes so I already said there are a lot of

00:09:18,380 --> 00:09:25,370
devices out in the market and so yes

00:09:24,290 --> 00:09:27,230
what next

00:09:25,370 --> 00:09:29,770
there is this motivation somebody

00:09:27,230 --> 00:09:32,959
standing here somebody got started and

00:09:29,770 --> 00:09:34,520
out of nowhere somebody like got into

00:09:32,959 --> 00:09:36,620
this new world there are like so many

00:09:34,520 --> 00:09:38,839
devices out in the market people are

00:09:36,620 --> 00:09:41,029
already talking about us there is so

00:09:38,839 --> 00:09:43,760
much hype about this everybody wants

00:09:41,029 --> 00:09:46,070
this baby to fly so there is perceptual

00:09:43,760 --> 00:09:48,260
computing and the virtual reality

00:09:46,070 --> 00:09:51,200
augmented reality devices everybody

00:09:48,260 --> 00:09:54,050
there's so much hype so what next what

00:09:51,200 --> 00:09:56,990
next next would be like how do I get

00:09:54,050 --> 00:10:03,500
started right so I will tell you about

00:09:56,990 --> 00:10:05,029
how I got started and yes how I'll show

00:10:03,500 --> 00:10:06,800
you the simulator and I'll show you the

00:10:05,029 --> 00:10:10,640
apps and maybe if you are interested

00:10:06,800 --> 00:10:13,040
catch me after the talk yes

00:10:10,640 --> 00:10:14,930
so as this great man says any

00:10:13,040 --> 00:10:18,589
sufficiently advanced technology is

00:10:14,930 --> 00:10:21,560
indistinguishable from magic before we

00:10:18,589 --> 00:10:25,490
get into some technical aspects related

00:10:21,560 --> 00:10:27,649
to this natural user interfaces I would

00:10:25,490 --> 00:10:29,839
like to make a statement here you

00:10:27,649 --> 00:10:31,970
after my attempt to build a universal

00:10:29,839 --> 00:10:34,040
simulator for all the devices out there

00:10:31,970 --> 00:10:36,170
with this one-woman army standing here I

00:10:34,040 --> 00:10:38,170
finally gave up and thought of you know

00:10:36,170 --> 00:10:40,790
focusing on something one and trying to

00:10:38,170 --> 00:10:43,009
really get it right and then maybe like

00:10:40,790 --> 00:10:45,050
you know use the same old thing and Here

00:10:43,009 --> 00:10:45,829
I am I have chosen this leap motion

00:10:45,050 --> 00:10:49,009
controller

00:10:45,829 --> 00:10:51,199
yes we are all here at a GS conf

00:10:49,009 --> 00:10:53,689
I'm not here to advertise about any

00:10:51,199 --> 00:10:55,519
device but please excuse me if I am

00:10:53,689 --> 00:10:57,740
talking about leap motion I don't want

00:10:55,519 --> 00:10:59,949
to talk about it in particular but it's

00:10:57,740 --> 00:11:02,329
a humble effort by a JavaScript

00:10:59,949 --> 00:11:04,490
enthusiast to try out something there

00:11:02,329 --> 00:11:07,040
and to share it with the community so if

00:11:04,490 --> 00:11:08,749
at all I have chosen leap motion it is

00:11:07,040 --> 00:11:11,480
just a random choice and yes I just got

00:11:08,749 --> 00:11:13,519
lucky I was gifted with this leap motion

00:11:11,480 --> 00:11:16,790
and that was the first obvious choice to

00:11:13,519 --> 00:11:19,220
try other sleep motion and try to build

00:11:16,790 --> 00:11:22,699
a simulator for leap motion now when I'm

00:11:19,220 --> 00:11:25,759
talking about simulator the simulator is

00:11:22,699 --> 00:11:27,860
nothing but so any of these devices they

00:11:25,759 --> 00:11:30,829
will come with your SDK even this leap

00:11:27,860 --> 00:11:32,600
motion comes with the SDK and my

00:11:30,829 --> 00:11:34,550
simulator what it does is you can try

00:11:32,600 --> 00:11:36,889
out the SDK without actually using this

00:11:34,550 --> 00:11:38,959
hardware so you have this service

00:11:36,889 --> 00:11:41,149
running or software running and then you

00:11:38,959 --> 00:11:43,160
can get the whole SDK running without

00:11:41,149 --> 00:11:45,980
actually using the sleep motion and you

00:11:43,160 --> 00:11:48,050
can see how to get started and who would

00:11:45,980 --> 00:11:50,389
get benefit out of this say you're

00:11:48,050 --> 00:11:52,339
trying to create a workshop or next

00:11:50,389 --> 00:11:54,170
tutorial for a larger audience and then

00:11:52,339 --> 00:11:56,600
people don't have the actual hardware or

00:11:54,170 --> 00:11:58,459
are really interested to try something

00:11:56,600 --> 00:12:00,559
and want to get their hands dirty first

00:11:58,459 --> 00:12:03,459
before like buying out something then

00:12:00,559 --> 00:12:06,949
yes this is the solution

00:12:03,459 --> 00:12:08,839
alright so irrespective of if it's a

00:12:06,949 --> 00:12:10,339
leap motion or anything we need to

00:12:08,839 --> 00:12:12,620
understand as to how the whole

00:12:10,339 --> 00:12:15,290
architecture works so there are all

00:12:12,620 --> 00:12:18,589
these devices which we connect with to a

00:12:15,290 --> 00:12:21,139
computer using this USB cable and what

00:12:18,589 --> 00:12:23,899
happens is this USB controller reads the

00:12:21,139 --> 00:12:25,309
sensor data and these are devices it

00:12:23,899 --> 00:12:26,899
depends on the device depends on the

00:12:25,309 --> 00:12:29,029
manufacturer depends on the company or

00:12:26,899 --> 00:12:33,879
manufacturing of the device as to how

00:12:29,029 --> 00:12:37,129
they want to yeah its left at them yes

00:12:33,879 --> 00:12:39,259
there would be like few 2d or 3d cameras

00:12:37,129 --> 00:12:41,520
there would be infrared sensors to sense

00:12:39,259 --> 00:12:43,529
your to recognize what's happening

00:12:41,520 --> 00:12:45,959
and so this USB controller reads the

00:12:43,529 --> 00:12:49,620
sensor data the next what happens this

00:12:45,959 --> 00:12:53,270
data is stored in local memory next data

00:12:49,620 --> 00:12:56,310
is then streamed by our USB to the SDK

00:12:53,270 --> 00:12:58,380
it is the streaming thing which is of

00:12:56,310 --> 00:13:00,420
prime importance and we need to

00:12:58,380 --> 00:13:07,290
understand what happens when we actually

00:13:00,420 --> 00:13:11,270
do the streaming so to understand more

00:13:07,290 --> 00:13:11,270
about how the sleep ocean would work

00:13:15,140 --> 00:13:20,550
yeah so what happens here is we have

00:13:18,390 --> 00:13:22,110
this USB controller and then there is

00:13:20,550 --> 00:13:25,589
sleep service running in there

00:13:22,110 --> 00:13:27,300
now once the USB controller reads the

00:13:25,589 --> 00:13:29,279
sensor data stores it in local memory

00:13:27,300 --> 00:13:31,950
and then again streams it back to the

00:13:29,279 --> 00:13:35,100
usb so what happens is once the image

00:13:31,950 --> 00:13:37,860
data is streamed to your computer then

00:13:35,100 --> 00:13:39,660
the whole of this mat world comes into

00:13:37,860 --> 00:13:43,649
picture the bunch of these algorithms

00:13:39,660 --> 00:13:46,980
which come into play which may be like

00:13:43,649 --> 00:13:48,959
eliminate noise and just give the region

00:13:46,980 --> 00:13:51,690
of interest to you so there is this lot

00:13:48,959 --> 00:13:56,310
of processing happening behind and then

00:13:51,690 --> 00:13:57,990
again it's device dependent as to how

00:13:56,310 --> 00:14:00,480
they want to process and how they were

00:13:57,990 --> 00:14:03,329
in what format they want to or give the

00:14:00,480 --> 00:14:05,130
data to the SDK so in this case what

00:14:03,329 --> 00:14:07,579
happens is there's a sleep service and

00:14:05,130 --> 00:14:10,589
the other good thing is all of these

00:14:07,579 --> 00:14:14,370
devices they are connected to the USB

00:14:10,589 --> 00:14:16,380
port and the way they stream data after

00:14:14,370 --> 00:14:18,120
reading the sensor data storing local

00:14:16,380 --> 00:14:21,180
memory are the way they stream it is

00:14:18,120 --> 00:14:23,399
happening through a protocol slide up so

00:14:21,180 --> 00:14:26,310
if it's a network or native than it is

00:14:23,399 --> 00:14:28,649
TCP protocol and then if it is web-based

00:14:26,310 --> 00:14:30,930
it is WebSockets and I'm here to talk

00:14:28,649 --> 00:14:34,649
about a web-based solution so it's all

00:14:30,930 --> 00:14:37,620
about WebSockets all of these SDKs they

00:14:34,649 --> 00:14:38,940
create a WebSocket server and then they

00:14:37,620 --> 00:14:41,250
do the streaming back to the application

00:14:38,940 --> 00:14:45,779
and that is how the application is able

00:14:41,250 --> 00:14:47,339
to get back the data in this case leap

00:14:45,779 --> 00:14:52,279
service would have its WebSocket server

00:14:47,339 --> 00:14:54,990
running in 6 4 3 7 port number 6 437 so

00:14:52,279 --> 00:14:58,290
next I'll show you

00:14:54,990 --> 00:15:01,529
some code and I have like uploaded it

00:14:58,290 --> 00:15:03,120
here I'll be sharing the slides and yes

00:15:01,529 --> 00:15:05,670
there were like few references which

00:15:03,120 --> 00:15:08,190
have used there were this good open

00:15:05,670 --> 00:15:11,839
source libraries out there webcam Swiper

00:15:08,190 --> 00:15:11,839
and GS object detector

00:15:18,180 --> 00:15:24,690
so the first thing what I'm here to show

00:15:21,240 --> 00:15:27,120
y'all about is the app called draw right

00:15:24,690 --> 00:15:30,960
so I have this app called draw which

00:15:27,120 --> 00:15:33,360
works the same code works with leap

00:15:30,960 --> 00:15:35,790
motion and works without leap motion and

00:15:33,360 --> 00:15:37,680
this draw what it does is right now I've

00:15:35,790 --> 00:15:39,810
just enabled it for like one finger I

00:15:37,680 --> 00:15:41,760
just move one finger and then I'm able

00:15:39,810 --> 00:15:43,530
to like you know track my finger

00:15:41,760 --> 00:15:46,890
movements and draw something on the

00:15:43,530 --> 00:15:49,320
screen so this is what the app does and

00:15:46,890 --> 00:15:52,680
it's able to run with the device or

00:15:49,320 --> 00:15:56,580
without the device now a little more

00:15:52,680 --> 00:16:00,600
about the simulator all these devices

00:15:56,580 --> 00:16:02,490
they use this web sock they use this

00:16:00,600 --> 00:16:06,600
WebSocket server for the streaming

00:16:02,490 --> 00:16:08,850
process and what I do is I create the

00:16:06,600 --> 00:16:12,840
simulate the idea of the simulator is to

00:16:08,850 --> 00:16:15,000
create a no J's WebSocket server and

00:16:12,840 --> 00:16:17,250
this WebSocket server can run on any

00:16:15,000 --> 00:16:19,890
port and all you have to do is you have

00:16:17,250 --> 00:16:22,290
to configure your SDK to talk to your

00:16:19,890 --> 00:16:25,740
WebSocket server instead of the SDK

00:16:22,290 --> 00:16:27,600
server which works which works if a

00:16:25,740 --> 00:16:29,640
device is connected so if your device is

00:16:27,600 --> 00:16:32,400
not connected we run the web server

00:16:29,640 --> 00:16:40,110
server and then we send in the or data

00:16:32,400 --> 00:16:43,470
so let's see how this draw works so

00:16:40,110 --> 00:16:46,050
first I will of shot show or draw with a

00:16:43,470 --> 00:16:48,600
leap motion controller so now I'm

00:16:46,050 --> 00:16:53,730
connecting the sleep motion I have this

00:16:48,600 --> 00:17:00,660
connected and I have my WebSocket server

00:16:53,730 --> 00:17:03,270
running on port number 3000 and sorry so

00:17:00,660 --> 00:17:10,200
now I'm using the leap motion so I don't

00:17:03,270 --> 00:17:12,180
want my WebSocket server so this part by

00:17:10,200 --> 00:17:14,130
default it talks to the leap motions

00:17:12,180 --> 00:17:23,040
WebSocket server which is running on 6 4

00:17:14,130 --> 00:17:25,760
3 7 and let's do this so ok I'm not sure

00:17:23,040 --> 00:17:25,760
about the light

00:17:34,570 --> 00:17:43,260
yeah the demos okay now everything is

00:17:36,820 --> 00:17:43,260
good maybe because of the light

00:17:48,090 --> 00:17:52,280
yeah okay so it's moving

00:17:55,640 --> 00:18:01,520
okay please move sorry

00:18:07,440 --> 00:18:12,570
was that for me okay can someone turn

00:18:11,070 --> 00:18:16,129
the lights up on the stage please

00:18:12,570 --> 00:18:16,129
I thought somebody's angry I'm sorry

00:18:18,470 --> 00:18:22,730
okay let me just stand here and

00:18:29,240 --> 00:18:31,990
okay

00:18:37,410 --> 00:18:46,670
oh no no it has to walk let's make it

00:18:43,410 --> 00:18:46,670
walk please bear with me

00:18:52,340 --> 00:18:59,360
I think this is so unavoidable right no

00:18:54,710 --> 00:19:04,970
matter how short that your demo is when

00:18:59,360 --> 00:19:13,670
you are presenting it has to break this

00:19:04,970 --> 00:19:19,640
is just not moving okay let me just try

00:19:13,670 --> 00:19:21,590
the leap motion yeah okay so uh fine the

00:19:19,640 --> 00:19:23,450
motion is not working so I'll just try

00:19:21,590 --> 00:19:30,380
my simulator and let's see if that is

00:19:23,450 --> 00:19:33,050
working to make my simulator run all I

00:19:30,380 --> 00:19:35,780
have to do is I'll be telling look into

00:19:33,050 --> 00:19:38,120
the port 3000 I can obviously make my

00:19:35,780 --> 00:19:40,430
WebSockets overrun at 6 4 3 7 where in

00:19:38,120 --> 00:19:43,820
the leap motions default WebSocket

00:19:40,430 --> 00:19:49,730
server is running at but yes I prefer

00:19:43,820 --> 00:19:54,650
3000 here so I save it and I have this

00:19:49,730 --> 00:19:57,470
my WebSocket running yes ok so now this

00:19:54,650 --> 00:19:59,630
application what I've done is it's

00:19:57,470 --> 00:20:02,060
basically WebSocket right so it is a

00:19:59,630 --> 00:20:04,490
client-server model so this screen what

00:20:02,060 --> 00:20:06,890
you see is a client and then there is

00:20:04,490 --> 00:20:08,660
the server which has to send signals to

00:20:06,890 --> 00:20:10,160
the WebSocket and then the WebSocket

00:20:08,660 --> 00:20:12,320
will send back the signals to all the

00:20:10,160 --> 00:20:16,660
connected clients so the architecture

00:20:12,320 --> 00:20:16,660
looks like my two browsers

00:20:34,980 --> 00:20:45,210
so long so and then it is so draw yeah

00:20:42,210 --> 00:20:45,210
okay

00:20:50,590 --> 00:21:06,320
okay this is not running either so the

00:21:03,740 --> 00:21:09,410
idea was right now what I'm doing is

00:21:06,320 --> 00:21:14,560
it's the same code but then I'll unplug

00:21:09,410 --> 00:21:14,560
the sleep motion it's the same code I

00:21:16,060 --> 00:21:29,210
just want to see the output

00:21:18,290 --> 00:21:32,660
but so the idea was I am passing the

00:21:29,210 --> 00:21:37,160
coordinates so I know what sort of data

00:21:32,660 --> 00:21:39,800
format the leap motion expects I have my

00:21:37,160 --> 00:21:42,440
server running so I'm you know moving

00:21:39,800 --> 00:21:44,060
the mouse coordinates I'm moving the

00:21:42,440 --> 00:21:46,820
mouse coordinates and then it's sending

00:21:44,060 --> 00:21:48,770
the data to the WebSocket server and

00:21:46,820 --> 00:21:51,560
then the WebSocket server sends back the

00:21:48,770 --> 00:21:53,840
data to the leaped line so in this case

00:21:51,560 --> 00:21:57,140
this is my application what you see or

00:21:53,840 --> 00:21:59,210
hear where when you see the blue dot is

00:21:57,140 --> 00:22:01,180
supposed to be the client and then this

00:21:59,210 --> 00:22:04,160
mouse part oh yeah

00:22:01,180 --> 00:22:07,370
all right so right now it's the same

00:22:04,160 --> 00:22:08,990
leap motion code I'm not using gestures

00:22:07,370 --> 00:22:12,920
so I'll come to the gestures part later

00:22:08,990 --> 00:22:15,260
I'm just a user using my mouse touchpad

00:22:12,920 --> 00:22:17,450
and then I'm able to do this doodles on

00:22:15,260 --> 00:22:19,160
the screen it's not a good noodle but

00:22:17,450 --> 00:22:22,400
yes the idea is they're being able to

00:22:19,160 --> 00:22:24,950
draw something so I have my this server

00:22:22,400 --> 00:22:28,670
sitting here which is taking coordinates

00:22:24,950 --> 00:22:30,290
taking the positions it would be the

00:22:28,670 --> 00:22:33,260
same way as though like you have your

00:22:30,290 --> 00:22:34,970
gestures and then the gestures are being

00:22:33,260 --> 00:22:38,300
recognized by the leap motion and then

00:22:34,970 --> 00:22:41,690
it's sure you know it's taken by the

00:22:38,300 --> 00:22:46,460
application yes

00:22:41,690 --> 00:22:49,520
so let's look into the code what happens

00:22:46,460 --> 00:22:52,610
here this is my WebSocket server few

00:22:49,520 --> 00:22:55,880
lines of code and this is all you need

00:22:52,610 --> 00:22:58,220
to create a WebSocket server and my

00:22:55,880 --> 00:23:01,010
application the server part which acted

00:22:58,220 --> 00:23:03,800
like a server which had to give data to

00:23:01,010 --> 00:23:06,290
the WebSocket server and then this web

00:23:03,800 --> 00:23:08,900
sockets over the one running at 3,000

00:23:06,290 --> 00:23:14,480
would give back to the application the

00:23:08,900 --> 00:23:17,390
draw application so in this case yeah

00:23:14,480 --> 00:23:19,700
all I'm doing is I'm just up getting my

00:23:17,390 --> 00:23:22,130
mouse coordinates and then I'm creating

00:23:19,700 --> 00:23:25,490
this you know I'm sending through

00:23:22,130 --> 00:23:27,530
WebSocket server and I'm sending the

00:23:25,490 --> 00:23:31,510
hands and the point Able's so leap

00:23:27,530 --> 00:23:34,910
motion has this data or JSON format and

00:23:31,510 --> 00:23:37,460
this is the kind of API which the leap

00:23:34,910 --> 00:23:39,860
motion expects so it will look for like

00:23:37,460 --> 00:23:43,280
other any gestures are there hands hands

00:23:39,860 --> 00:23:47,300
yes leap motion is able to okay it's too

00:23:43,280 --> 00:23:49,370
much like leap motion is able to

00:23:47,300 --> 00:23:51,440
identify which hand it is if it is right

00:23:49,370 --> 00:23:53,990
hand or if it is left hand and the point

00:23:51,440 --> 00:23:57,110
tables refer to the fingers so I am

00:23:53,990 --> 00:24:01,340
referring to the index finger and this

00:23:57,110 --> 00:24:03,500
is how I'm walking the data so I tell

00:24:01,340 --> 00:24:06,770
you know the point Able's and I'm

00:24:03,500 --> 00:24:10,490
passing up the index finger right so it

00:24:06,770 --> 00:24:13,190
will be like an array of 5 or 0 1 2 3

00:24:10,490 --> 00:24:15,290
and forth so I'm passing up the data for

00:24:13,190 --> 00:24:17,090
the first finger index finger and then

00:24:15,290 --> 00:24:19,160
I'm calling the tip position where it is

00:24:17,090 --> 00:24:21,380
the X and the y coordinates so the tip

00:24:19,160 --> 00:24:23,810
position is actually a vector in 3d

00:24:21,380 --> 00:24:25,520
space XYZ but then I'm capturing or 3

00:24:23,810 --> 00:24:27,500
coordinates and then I'm giving to a

00:24:25,520 --> 00:24:30,050
WebSocket server and then this WebSocket

00:24:27,500 --> 00:24:31,820
server gives to the leap so in the sleep

00:24:30,050 --> 00:24:33,710
what it happened was it's the same code

00:24:31,820 --> 00:24:38,570
which you have to run if a device is

00:24:33,710 --> 00:24:40,430
connected or no and yes so if you're

00:24:38,570 --> 00:24:42,650
connecting the device just uncommon the

00:24:40,430 --> 00:24:44,330
second line it will refer to the default

00:24:42,650 --> 00:24:47,170
port which is running on 6 4 3 7

00:24:44,330 --> 00:24:51,170
otherwise it will love there are four on

00:24:47,170 --> 00:24:54,020
three thousand so let the lights meet

00:24:51,170 --> 00:24:57,830
there I'll just try with leap motion

00:24:54,020 --> 00:24:59,390
again so I am NOT referring to my local

00:24:57,830 --> 00:25:02,230
server but then I am referring to my

00:24:59,390 --> 00:25:02,230
leap motion now

00:25:07,750 --> 00:25:23,440
in this case I would only need one

00:25:10,750 --> 00:25:32,289
because okay yeah so okay

00:25:23,440 --> 00:25:34,990
finally yeah so I think I don't know if

00:25:32,289 --> 00:25:38,700
I have time but yes the demo of just

00:25:34,990 --> 00:25:42,070
broke a bit and I got little nervous and

00:25:38,700 --> 00:25:44,890
but yes it did its job so this is the

00:25:42,070 --> 00:25:47,350
whole idea and you already saw how I

00:25:44,890 --> 00:25:48,940
control the slideshow with gestures so

00:25:47,350 --> 00:25:50,830
then what's happening is in the first

00:25:48,940 --> 00:25:52,929
draw app what I'm doing is I'm passing

00:25:50,830 --> 00:25:54,669
the coordinates okay excuse me from

00:25:52,929 --> 00:25:57,850
talking superfast now I'm excited

00:25:54,669 --> 00:26:00,669
because my demo work and enough running

00:25:57,850 --> 00:26:05,860
out of time but sure can I get five more

00:26:00,669 --> 00:26:08,440
minutes please okay okay fine so the

00:26:05,860 --> 00:26:10,330
idea is the way the slides are connected

00:26:08,440 --> 00:26:12,309
right so when I had to connect the

00:26:10,330 --> 00:26:14,830
slides it was gestures and not any mouse

00:26:12,309 --> 00:26:17,650
coordinates so here what happens is I

00:26:14,830 --> 00:26:22,210
had to learn a few things about computer

00:26:17,650 --> 00:26:24,460
vision and the library saw which I've

00:26:22,210 --> 00:26:26,970
mentioned are already out there there is

00:26:24,460 --> 00:26:29,679
also this ah good thing load OpenCV and

00:26:26,970 --> 00:26:34,890
two good libraries that is jeaious

00:26:29,679 --> 00:26:34,890
object detect which were like very good

00:26:35,280 --> 00:26:41,559
yeah so uh this is a very good object

00:26:39,490 --> 00:26:43,600
detection algorithm used in computer

00:26:41,559 --> 00:26:45,520
vision I'm not any open Seanie expert

00:26:43,600 --> 00:26:48,580
but then yes when I was doing this up I

00:26:45,520 --> 00:26:50,549
had to learn a little bit about this so

00:26:48,580 --> 00:26:52,929
up in the gestures in the slideshow

00:26:50,549 --> 00:26:56,260
there were like two things so I had this

00:26:52,929 --> 00:26:59,350
my app running on a browser window and

00:26:56,260 --> 00:27:03,580
then it obviously was talking to the

00:26:59,350 --> 00:27:06,429
leap motion or SDK but I didn't use the

00:27:03,580 --> 00:27:08,500
leap motion device I had to uh I gave

00:27:06,429 --> 00:27:10,630
the signals through my hand now this

00:27:08,500 --> 00:27:12,940
hand this hand signals obviously came

00:27:10,630 --> 00:27:14,770
from the load socket web server now how

00:27:12,940 --> 00:27:17,289
this hand was detected was using this

00:27:14,770 --> 00:27:19,390
wire Jones algorithm and first it was

00:27:17,289 --> 00:27:20,440
feature selection I have to understand

00:27:19,390 --> 00:27:22,810
what my hand

00:27:20,440 --> 00:27:25,810
and then creating uh you know we do the

00:27:22,810 --> 00:27:28,420
grayscale so that noise is eliminated

00:27:25,810 --> 00:27:30,580
then do some math on it get an integral

00:27:28,420 --> 00:27:32,080
image and do some other boosts training

00:27:30,580 --> 00:27:35,050
like you know train it and get some

00:27:32,080 --> 00:27:37,000
classifiers and make this up you know

00:27:35,050 --> 00:27:38,890
are features of the hand map to the

00:27:37,000 --> 00:27:41,410
classifier which is already trained and

00:27:38,890 --> 00:27:43,960
then yes you know it is a hand and then

00:27:41,410 --> 00:27:45,910
this hand coordinates of the hand I know

00:27:43,960 --> 00:27:48,100
I can locate the coordinates of the hand

00:27:45,910 --> 00:27:49,960
it was this coordinate of the hand which

00:27:48,100 --> 00:27:53,440
were sent to the WebSocket server and

00:27:49,960 --> 00:27:55,630
the WebSocket server a knew which

00:27:53,440 --> 00:27:57,340
position it was there was some logic

00:27:55,630 --> 00:27:59,260
written if it is this side then it is

00:27:57,340 --> 00:28:01,840
left or if it is this side it is right

00:27:59,260 --> 00:28:05,200
and then now give back to my slide

00:28:01,840 --> 00:28:09,390
application so this is all how it was

00:28:05,200 --> 00:28:11,530
about so yes this was a humble effort

00:28:09,390 --> 00:28:14,560
and then there were few other things

00:28:11,530 --> 00:28:16,480
about web sockets and getusermedia to

00:28:14,560 --> 00:28:18,700
know more about this I am doing this

00:28:16,480 --> 00:28:20,470
session at the Mozilla hacker launch

00:28:18,700 --> 00:28:23,500
tomorrow at 3:15

00:28:20,470 --> 00:28:28,330
if y'all are interested so come and

00:28:23,500 --> 00:28:30,460
learn to learn to create a selfie or

00:28:28,330 --> 00:28:33,010
sharing session using WebSockets and get

00:28:30,460 --> 00:28:34,210
user media so you will understand more

00:28:33,010 --> 00:28:37,020
about this client-server architecture

00:28:34,210 --> 00:28:39,940
water which is used in the simulator and

00:28:37,020 --> 00:28:42,090
yes so this was a humble effort by a

00:28:39,940 --> 00:28:45,190
JavaScript enthusiast to do something

00:28:42,090 --> 00:28:48,760
and share it with y'all I hope you all

00:28:45,190 --> 00:28:52,750
enjoyed and I'm really glad this demo

00:28:48,760 --> 00:28:55,390
worked thanks to James Caan's VP of and

00:28:52,750 --> 00:28:57,460
solando for getting me here questions

00:28:55,390 --> 00:28:58,750
y'all can't eat with me or I'll be

00:28:57,460 --> 00:29:02,410
around today and tomorrow

00:28:58,750 --> 00:29:06,070
please up give me your feedback what you

00:29:02,410 --> 00:29:08,980
felt about it and yes solando is hiring

00:29:06,070 --> 00:29:11,640
you can come and talk to us alright

00:29:08,980 --> 00:29:13,700
thank you so much thanks for listening

00:29:11,640 --> 00:29:13,700

YouTube URL: https://www.youtube.com/watch?v=GiQuSiZOGww


