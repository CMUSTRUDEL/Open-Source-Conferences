Title: Chris Lilley: WebFonts - Level Up! - CSSConf.Asia 2015
Publication date: 2015-12-26
Playlist: CSSConf.Asia 2015
Description: 
	After attending this talk you will:
- gain a clearer understanding of what webfonts do
- be able to use the typographic richness of OpenType features in your CSS
- see how to improve performance on desktop and mobile
- be excited about cutting edge and future developments

Chris Lilley is a Technical Director at the World Wide Web Consortium (W3C). Considered “the father of SVG”, he also co-authored PNG, was co-editor of CSS2, chaired the group that developed @font-face, and co-developed WOFF. Ex Technical Architecture Group. Chris is still trying to get Color Management on the Web, sigh. Currently working on CSS levels 3/4/5 (no, really), Web Audio, and WOFF2.

CSSConf.Asia - Red Dot Design Museum, Singapore - 18 November 2015.

Source: http://2015.cssconf.asia
Slides: https://github.com/svgeesus/font-level-up

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:13,209 --> 00:00:19,130
so yeah I'm Chris sv Jesus on Twitter

00:00:16,580 --> 00:00:21,020
this is a nickname given me a SVG

00:00:19,130 --> 00:00:22,849
conferences I totally hated it and then

00:00:21,020 --> 00:00:25,779
eventually I needed a Twitter handle so

00:00:22,849 --> 00:00:25,779
I thought okay why not

00:00:25,840 --> 00:00:29,630
so as has already been mentioned I'm

00:00:28,160 --> 00:00:31,789
technical director at the World Wide Web

00:00:29,630 --> 00:00:34,010
Consortium w3c I work for Tim

00:00:31,789 --> 00:00:38,000
berners-lee who invented the web

00:00:34,010 --> 00:00:39,559
I started SVG in the sense that I wrote

00:00:38,000 --> 00:00:41,720
the requirements document for it and got

00:00:39,559 --> 00:00:43,430
the people together to who were all

00:00:41,720 --> 00:00:44,900
competitors and convinced them that it

00:00:43,430 --> 00:00:46,699
was better if they worked together on

00:00:44,900 --> 00:00:48,379
something that would be open and

00:00:46,699 --> 00:00:51,110
royalty-free rather than something that

00:00:48,379 --> 00:00:52,600
would be proprietary like flash or

00:00:51,110 --> 00:00:55,309
something like that

00:00:52,600 --> 00:00:56,540
obviously that was mixed success for a

00:00:55,309 --> 00:00:58,640
long time but there we are

00:00:56,540 --> 00:01:01,070
and I also chaired the working group

00:00:58,640 --> 00:01:04,970
that did that for the first few years of

00:01:01,070 --> 00:01:07,250
his life before going to w3c actually I

00:01:04,970 --> 00:01:09,820
was one of the causes of PNG when the

00:01:07,250 --> 00:01:12,110
pattern thing came out on gif I was

00:01:09,820 --> 00:01:13,909
incensed and joined some other people we

00:01:12,110 --> 00:01:14,990
never met for years but we created this

00:01:13,909 --> 00:01:18,440
format which seems to have been

00:01:14,990 --> 00:01:19,940
successful and also in the CSS working

00:01:18,440 --> 00:01:22,430
group I was the first chair of that I

00:01:19,940 --> 00:01:24,770
was the editor or co-editor of CSS 2

00:01:22,430 --> 00:01:26,630
which is where our font face came from

00:01:24,770 --> 00:01:29,360
actually that was where he got dumped in

00:01:26,630 --> 00:01:32,600
afterwards I was actually working on web

00:01:29,360 --> 00:01:35,090
fonts before that and more recently css3

00:01:32,600 --> 00:01:36,350
color co-editor and CSS for color as

00:01:35,090 --> 00:01:39,350
well

00:01:36,350 --> 00:01:41,330
web fonts I was the chair of an

00:01:39,350 --> 00:01:44,180
ill-fated group that tried to get web

00:01:41,330 --> 00:01:46,370
fonts going it failed because we

00:01:44,180 --> 00:01:49,190
couldn't get agreement on a format we

00:01:46,370 --> 00:01:50,810
could describe a syntax but basically

00:01:49,190 --> 00:01:52,640
one company wanted their thing for

00:01:50,810 --> 00:01:55,010
portable font resources to be their

00:01:52,640 --> 00:01:56,780
format and other people wanted open site

00:01:55,010 --> 00:01:58,400
which was brand new and wasn't really

00:01:56,780 --> 00:01:59,840
guaranteed to succeed at that point and

00:01:58,400 --> 00:02:01,640
we couldn't we couldn't get agreement

00:01:59,840 --> 00:02:04,940
which basically meant that it failed

00:02:01,640 --> 00:02:06,760
because you needed both parts more

00:02:04,940 --> 00:02:10,069
recently I was involved in wofe one oh

00:02:06,760 --> 00:02:13,190
and WAFF 2.0 which is still ongoing and

00:02:10,069 --> 00:02:14,959
also chromatic fonts the idea of having

00:02:13,190 --> 00:02:16,250
multicolored fonts on the web which is

00:02:14,959 --> 00:02:18,340
the thing that you have in print we

00:02:16,250 --> 00:02:20,959
don't have on the web and I want it

00:02:18,340 --> 00:02:24,319
you'll be hearing more about that later

00:02:20,959 --> 00:02:25,110
ok so that's me what am I going to talk

00:02:24,319 --> 00:02:27,810
about

00:02:25,110 --> 00:02:29,460
my talk is gonna be in four sections so

00:02:27,810 --> 00:02:31,020
firstly some basics I want to make sure

00:02:29,460 --> 00:02:32,370
that everyone's on the same page here

00:02:31,020 --> 00:02:34,980
everyone knows what we're talking about

00:02:32,370 --> 00:02:38,370
how many people here use web fonts on

00:02:34,980 --> 00:02:41,910
their own their own site how many people

00:02:38,370 --> 00:02:43,410
avoid them with all costs no excellent

00:02:41,910 --> 00:02:45,510
that's quite interesting there was a

00:02:43,410 --> 00:02:47,730
survey done by Google like the top

00:02:45,510 --> 00:02:49,220
hundred thousand websites or something

00:02:47,730 --> 00:02:51,720
and they found that 10 years ago

00:02:49,220 --> 00:02:56,160
something like 2 percent of those

00:02:51,720 --> 00:03:03,300
websites used web fonts in 2015 that's

00:02:56,160 --> 00:03:04,530
risen to 50 we could do the cent deal

00:03:03,300 --> 00:03:06,690
the second thing I'm going to talk about

00:03:04,530 --> 00:03:08,400
is open type features and CSS how you

00:03:06,690 --> 00:03:10,020
can use them so it's fine you can

00:03:08,400 --> 00:03:13,020
download the font and use it but to use

00:03:10,020 --> 00:03:14,430
it properly to use it well then a bit

00:03:13,020 --> 00:03:15,840
about performance not too much

00:03:14,430 --> 00:03:20,730
performance has been dealt with very

00:03:15,840 --> 00:03:23,700
well by the speakers here and lastly

00:03:20,730 --> 00:03:25,530
some crystal gazing on the future not

00:03:23,700 --> 00:03:27,030
totally speculative stuff I'm involved

00:03:25,530 --> 00:03:29,340
with stuff I think is going to be good

00:03:27,030 --> 00:03:31,320
not stuff you can use yet but you will

00:03:29,340 --> 00:03:32,880
soon I hope and of course the more

00:03:31,320 --> 00:03:34,110
people clamor for it and say we want

00:03:32,880 --> 00:03:35,549
this to be implemented the more the

00:03:34,110 --> 00:03:37,410
browser's are likely to actually do

00:03:35,549 --> 00:03:41,519
something about it in a reasonable

00:03:37,410 --> 00:03:42,930
timeframe so basics and by the way this

00:03:41,519 --> 00:03:49,860
picture here did people know what this

00:03:42,930 --> 00:03:51,330
is the metal box yes what is it yes

00:03:49,860 --> 00:03:52,920
that's right it's metal blocks that we

00:03:51,330 --> 00:03:54,600
use to actually print on paper and

00:03:52,920 --> 00:03:56,400
that's where the idea of an M Square

00:03:54,600 --> 00:03:58,350
comes from you had all your letters on

00:03:56,400 --> 00:04:00,660
an actual block of metal and the size of

00:03:58,350 --> 00:04:03,060
it determined the overall layout of you

00:04:00,660 --> 00:04:06,690
type we still have that concept in

00:04:03,060 --> 00:04:09,750
digital fonts so first obvious thing is

00:04:06,690 --> 00:04:10,530
what is a character what is it and it's

00:04:09,750 --> 00:04:13,110
a number

00:04:10,530 --> 00:04:15,239
it's a code pointer unicode code point

00:04:13,110 --> 00:04:19,380
not just a code point though it also has

00:04:15,239 --> 00:04:22,229
some properties so for example a is 65

00:04:19,380 --> 00:04:25,860
but it's also the property of not a

00:04:22,229 --> 00:04:28,350
number and not punctuation and has a

00:04:25,860 --> 00:04:29,820
different case form things like that so

00:04:28,350 --> 00:04:31,979
these are properties of characters

00:04:29,820 --> 00:04:33,960
characters can be used without rendering

00:04:31,979 --> 00:04:36,060
they can use for example in searching

00:04:33,960 --> 00:04:37,450
they can be used in text-to-speech all

00:04:36,060 --> 00:04:40,810
sorts of things like that

00:04:37,450 --> 00:04:42,280
and then a glyph a glyph is the visual

00:04:40,810 --> 00:04:44,020
representation of the character when

00:04:42,280 --> 00:04:47,710
it's what you actually see on the page

00:04:44,020 --> 00:04:49,210
are on print now I say character or

00:04:47,710 --> 00:04:50,920
characters because there isn't a

00:04:49,210 --> 00:04:53,140
one-to-one mapping that often is and

00:04:50,920 --> 00:04:54,520
it's often enough that people tend to

00:04:53,140 --> 00:04:56,170
assume that's always the case but it's

00:04:54,520 --> 00:05:01,740
not especially in languages other than

00:04:56,170 --> 00:05:01,740
English or in well set English actually

00:05:01,980 --> 00:05:06,580
so hit quick test what are we looking at

00:05:04,870 --> 00:05:10,090
here is this the character or is it a

00:05:06,580 --> 00:05:15,850
glyph lift good yes how many characters

00:05:10,090 --> 00:05:20,350
are there - and how many glyphs correct

00:05:15,850 --> 00:05:24,280
excellent here's another one if this is

00:05:20,350 --> 00:05:32,650
a glyph how many characters one any

00:05:24,280 --> 00:05:34,960
advance on one two good both correct it

00:05:32,650 --> 00:05:37,810
could be a pre complete it could be a

00:05:34,960 --> 00:05:39,970
pre composed a acute or it could be an e

00:05:37,810 --> 00:05:41,500
with an combining acute accent and

00:05:39,970 --> 00:05:43,540
they'll be put together but either way

00:05:41,500 --> 00:05:46,240
you'll get a single glyph which is the

00:05:43,540 --> 00:05:48,250
thing laid out correctly so it's one

00:05:46,240 --> 00:05:52,320
glyph and it could use two fonts

00:05:48,250 --> 00:05:52,320
actually uncommon ly but it is possible

00:05:53,400 --> 00:05:58,210
the next thing I want to introduce is

00:05:55,780 --> 00:06:04,480
the idea of a font family and a font

00:05:58,210 --> 00:06:07,030
face so here we've got myriad Pro which

00:06:04,480 --> 00:06:09,580
is a font family and we've got some

00:06:07,030 --> 00:06:12,960
examples of faces in that family alight

00:06:09,580 --> 00:06:15,700
different weights but also an italic

00:06:12,960 --> 00:06:18,400
actually in this case it's a oblique but

00:06:15,700 --> 00:06:21,010
anyway and condensed and expanded forms

00:06:18,400 --> 00:06:23,290
as well and I've got a second example of

00:06:21,010 --> 00:06:25,060
Baskerville which again has various

00:06:23,290 --> 00:06:26,890
different weights you notice that these

00:06:25,060 --> 00:06:28,870
all have different names so the sort of

00:06:26,890 --> 00:06:30,430
normal one it might be called book or it

00:06:28,870 --> 00:06:32,230
might be called normal or it might be

00:06:30,430 --> 00:06:33,940
called Deming Bolt or whatever it does

00:06:32,230 --> 00:06:35,980
various there's no standardization on

00:06:33,940 --> 00:06:38,020
these things at all which is why CSS

00:06:35,980 --> 00:06:43,000
uses a bunch of numbers between 100 and

00:06:38,020 --> 00:06:45,790
900 to represent weights ok next thing

00:06:43,000 --> 00:06:47,230
properties and descriptors this is a CSS

00:06:45,790 --> 00:06:47,420
conference I don't have to ask if you

00:06:47,230 --> 00:06:50,660
know

00:06:47,420 --> 00:06:51,770
property is but how many people if put

00:06:50,660 --> 00:06:56,840
on the spot could tell me what a

00:06:51,770 --> 00:06:59,240
descriptor is yes anyone willing to say

00:06:56,840 --> 00:07:03,710
I could I won't ask you to just pretend

00:06:59,240 --> 00:07:06,770
no okay so if you look on this code

00:07:03,710 --> 00:07:09,500
sample we've got font weights twice both

00:07:06,770 --> 00:07:14,140
times it says bold one of those is a

00:07:09,500 --> 00:07:16,310
property and one of them is a descriptor

00:07:14,140 --> 00:07:19,310
those are the descriptors on the app

00:07:16,310 --> 00:07:20,780
font face I'm sorry about the name by

00:07:19,310 --> 00:07:21,980
the way I was kind of stuck and I

00:07:20,780 --> 00:07:23,480
couldn't think of a thing and I needed

00:07:21,980 --> 00:07:25,130
something I wasn't property and it was

00:07:23,480 --> 00:07:27,050
describing the properties were font and

00:07:25,130 --> 00:07:28,670
I came up with descriptor and I really

00:07:27,050 --> 00:07:34,370
didn't like it but we never never came

00:07:28,670 --> 00:07:36,950
up with anything better so so a

00:07:34,370 --> 00:07:40,730
descriptor is something that tells you

00:07:36,950 --> 00:07:43,070
about an individual font face its weight

00:07:40,730 --> 00:07:44,810
it's the range of characters it has

00:07:43,070 --> 00:07:47,510
available things like that and a

00:07:44,810 --> 00:07:49,220
property is a request for styling it's

00:07:47,510 --> 00:07:51,650
something that goes on to some text on

00:07:49,220 --> 00:07:54,200
to some elements on your page and asks

00:07:51,650 --> 00:07:56,480
for something so basically one is a

00:07:54,200 --> 00:07:58,190
question and one is an answer you see

00:07:56,480 --> 00:08:00,550
yeah I can do that can I have this yes I

00:07:58,190 --> 00:08:00,550
can do it

00:08:01,210 --> 00:08:05,990
font stacks so you okay obviously you

00:08:04,130 --> 00:08:07,220
all know that you can give not just a

00:08:05,990 --> 00:08:10,100
single font but you can give multiple

00:08:07,220 --> 00:08:11,900
fonts in a list and you probably know

00:08:10,100 --> 00:08:15,470
that they the first one that actually

00:08:11,900 --> 00:08:19,820
exists this is used right well actually

00:08:15,470 --> 00:08:22,370
it's not it's the first one that has

00:08:19,820 --> 00:08:24,650
glyphs that are needed which is used

00:08:22,370 --> 00:08:26,210
which means you can have the second or

00:08:24,650 --> 00:08:28,550
the third or the fourth on actually use

00:08:26,210 --> 00:08:31,390
because the first one does exist but it

00:08:28,550 --> 00:08:31,390
doesn't have what's needed

00:08:33,340 --> 00:08:37,750
so here's an example this used to be

00:08:35,289 --> 00:08:40,599
really common in email especially but

00:08:37,750 --> 00:08:43,000
also on websites you get some text in

00:08:40,599 --> 00:08:45,790
English it's been sent to you by someone

00:08:43,000 --> 00:08:49,360
that speaks Japanese and he looks so

00:08:45,790 --> 00:08:50,770
ugly why because they've set either

00:08:49,360 --> 00:08:52,360
because of encoding the views or

00:08:50,770 --> 00:08:54,730
whatever but they sent it in a font

00:08:52,360 --> 00:08:56,290
which has got really good coverage of

00:08:54,730 --> 00:09:00,720
Japanese obviously because they speak

00:08:56,290 --> 00:09:04,029
Japanese and Latin glyphs frankly suck

00:09:00,720 --> 00:09:06,370
so how can we use font stacks to avoid

00:09:04,029 --> 00:09:08,500
that well quite easily you put the latin

00:09:06,370 --> 00:09:10,180
one first and then you put the Japanese

00:09:08,500 --> 00:09:12,490
one second and you get the nice laughing

00:09:10,180 --> 00:09:15,820
glyphs and this worked well for a number

00:09:12,490 --> 00:09:17,800
of years until people started saying you

00:09:15,820 --> 00:09:19,330
know font designers Oh she'd add stuff

00:09:17,800 --> 00:09:21,400
for European languages we should add

00:09:19,330 --> 00:09:23,260
stuff for this and that and then they

00:09:21,400 --> 00:09:25,240
went ah all those Japanese and Chinese

00:09:23,260 --> 00:09:26,350
lives it's so big it's so hard oh but

00:09:25,240 --> 00:09:28,089
they got these things called kana

00:09:26,350 --> 00:09:29,950
they're quite nice and it's not very

00:09:28,089 --> 00:09:32,170
many of them I'll add these to my fault

00:09:29,950 --> 00:09:34,839
suddenly you're using the sucky can

00:09:32,170 --> 00:09:36,940
athon runs from latin but you can't put

00:09:34,839 --> 00:09:39,670
them both first you can't do that just

00:09:36,940 --> 00:09:41,950
by ordering because you need something

00:09:39,670 --> 00:09:43,720
else use something else do people know

00:09:41,950 --> 00:09:48,610
what the something else is that gets you

00:09:43,720 --> 00:09:51,270
around that problem good things on my

00:09:48,610 --> 00:09:51,270
next slide then

00:09:51,410 --> 00:09:57,300
unicode range how many people use

00:09:53,760 --> 00:10:03,870
unicode range how many people have

00:09:57,300 --> 00:10:05,730
looked at it and gone yeah it tells you

00:10:03,870 --> 00:10:07,200
which range of unicode characters our

00:10:05,730 --> 00:10:09,990
font is allowed to use so it's a

00:10:07,200 --> 00:10:13,650
descriptor and you are allowed to lie

00:10:09,990 --> 00:10:15,330
okay if you say it supports this range

00:10:13,650 --> 00:10:16,920
of characters there's no you're not

00:10:15,330 --> 00:10:19,230
making a promise that supports all of

00:10:16,920 --> 00:10:22,800
them just that it has some within that

00:10:19,230 --> 00:10:24,780
range and more importantly the font the

00:10:22,800 --> 00:10:26,730
rendering system is not allowed to use

00:10:24,780 --> 00:10:28,290
the ones that are outside that range so

00:10:26,730 --> 00:10:30,600
you can block off things that you don't

00:10:28,290 --> 00:10:31,710
want used you can effectively without

00:10:30,600 --> 00:10:34,620
having to go to the trouble of

00:10:31,710 --> 00:10:36,540
subsetting the font you can decide which

00:10:34,620 --> 00:10:41,190
portions of it you wish to use but it's

00:10:36,540 --> 00:10:43,440
very useful here's an example what we've

00:10:41,190 --> 00:10:45,750
done here we've got a nice Japanese font

00:10:43,440 --> 00:10:48,360
and we have subsided we want to have

00:10:45,750 --> 00:10:49,890
this range of characters looking at

00:10:48,360 --> 00:10:53,340
these numbers you can obviously tell

00:10:49,890 --> 00:10:55,560
that the first one is yen the next one

00:10:53,340 --> 00:10:58,230
is kanji the next one is katakana and

00:10:55,560 --> 00:11:03,600
the next one is hiragana obviously from

00:10:58,230 --> 00:11:05,850
the numbers right yes for something for

00:11:03,600 --> 00:11:08,430
some things I mean like Greek or Turkish

00:11:05,850 --> 00:11:10,680
or it's fairly easy you know Cyrillic

00:11:08,430 --> 00:11:11,970
you can use this broad range of unicode

00:11:10,680 --> 00:11:13,800
characters that correspond to a

00:11:11,970 --> 00:11:15,180
particular thing but fathers this

00:11:13,800 --> 00:11:17,580
scattered all over the place and this

00:11:15,180 --> 00:11:19,880
really isn't a very good a very good

00:11:17,580 --> 00:11:19,880
thing

00:11:22,430 --> 00:11:29,029
I'm really sorry okay once again we

00:11:26,510 --> 00:11:31,940
needed to make up syntax Unicode was new

00:11:29,029 --> 00:11:33,650
everyone was using it with this u+ and I

00:11:31,940 --> 00:11:35,480
thought well a bit of wild cards here

00:11:33,650 --> 00:11:38,060
and some assumptions about leading zeros

00:11:35,480 --> 00:11:42,770
and they'll be fine and it's really

00:11:38,060 --> 00:11:44,360
horrible and I'm sorry I apologize it's

00:11:42,770 --> 00:11:50,089
one of those mistakes that lives with

00:11:44,360 --> 00:11:52,910
you three decades okay so let's see what

00:11:50,089 --> 00:11:54,980
can you use Unicode range for you can

00:11:52,910 --> 00:11:57,560
have a really small range and the

00:11:54,980 --> 00:11:59,960
character to six is an ampersand for

00:11:57,560 --> 00:12:01,550
example and you look at this and you see

00:11:59,960 --> 00:12:03,170
I've got this and that and that's quite

00:12:01,550 --> 00:12:06,800
nice I've got a sort of blocky swamp

00:12:03,170 --> 00:12:08,990
serif and then I've got a curly curly

00:12:06,800 --> 00:12:11,390
ampersand and you would probably be

00:12:08,990 --> 00:12:14,210
tempted to say oh stick a span on that

00:12:11,390 --> 00:12:17,500
put a clasp on the spine off we go no no

00:12:14,210 --> 00:12:19,820
no no we don't have to do that at all so

00:12:17,500 --> 00:12:23,529
here's the example let's see if we can

00:12:19,820 --> 00:12:23,529
live code this without tears

00:12:50,550 --> 00:12:57,089
this font was pulled Rockwell's that's

00:12:52,800 --> 00:13:04,920
quite light by one and then lastly the

00:12:57,089 --> 00:13:06,899
Unicode range of course it can be either

00:13:04,920 --> 00:13:10,310
a capital u or a lowercase it doesn't

00:13:06,899 --> 00:13:10,310
matter if I tend to just use uppercase

00:13:11,630 --> 00:13:15,240
okay

00:13:13,010 --> 00:13:16,950
nothing happened oh because we haven't

00:13:15,240 --> 00:13:20,570
added the actual font into our font

00:13:16,950 --> 00:13:20,570
stack so let's go ahead and do that

00:13:27,550 --> 00:13:33,870
well it worked two minutes ago gee

00:13:38,740 --> 00:13:42,760
I don't think it needs quotes actually I

00:13:41,560 --> 00:13:45,010
was doing it happily without quotes

00:13:42,760 --> 00:13:46,149
quotes I need it if you have spaces and

00:13:45,010 --> 00:13:49,060
in particular if you have multiple

00:13:46,149 --> 00:13:56,410
spaces I don't think I need that so I

00:13:49,060 --> 00:13:58,209
don't know what okay well it honestly

00:13:56,410 --> 00:14:00,610
did work and they worked multiple times

00:13:58,209 --> 00:14:01,870
now I'm using Firefox here and I should

00:14:00,610 --> 00:14:09,160
point out that I had to do something

00:14:01,870 --> 00:14:11,290
special you have to sorry it's not

00:14:09,160 --> 00:14:24,310
Rockwell right that's right if you helps

00:14:11,290 --> 00:14:24,730
if you type the right actual name thank

00:14:24,310 --> 00:14:26,589
you

00:14:24,730 --> 00:14:28,450
yes so I did actually have to do

00:14:26,589 --> 00:14:30,220
something special with this in any other

00:14:28,450 --> 00:14:33,490
browser this would work just fine in

00:14:30,220 --> 00:14:35,770
Firefox there is a seven-year-old bug

00:14:33,490 --> 00:14:37,600
about Unicode range which they have

00:14:35,770 --> 00:14:39,640
since fixed and marked as fixed and

00:14:37,600 --> 00:14:41,970
which they have shipped behind a flag

00:14:39,640 --> 00:14:45,910
which you have to switch on

00:14:41,970 --> 00:14:47,860
but yeah it's coming it will be there

00:14:45,910 --> 00:14:49,270
but just to point out that I did have to

00:14:47,860 --> 00:14:52,089
cheat slightly and switch on a flag to

00:14:49,270 --> 00:14:54,040
make that work okay moving swiftly on

00:14:52,089 --> 00:14:55,990
the past my inability to oh yeah that's

00:14:54,040 --> 00:14:57,940
what I meant to show you if you look at

00:14:55,990 --> 00:14:59,620
the source of that you can see there's

00:14:57,940 --> 00:15:00,760
no markup around the amp design I didn't

00:14:59,620 --> 00:15:03,100
have to do anything I'm just using

00:15:00,760 --> 00:15:05,020
Unicode range to select it so the

00:15:03,100 --> 00:15:06,399
ampersand gets the first font and

00:15:05,020 --> 00:15:08,020
everything else well there's only an

00:15:06,399 --> 00:15:12,209
ampersand in there so they all get the

00:15:08,020 --> 00:15:12,209
second fun okay good

00:15:18,010 --> 00:15:26,050
so OpenType features here's some

00:15:24,400 --> 00:15:29,070
examples of OpenType features you can

00:15:26,050 --> 00:15:33,760
see this is using all sorts of fancy

00:15:29,070 --> 00:15:35,830
ligatures and stuff like that so there

00:15:33,760 --> 00:15:39,970
are optional stylistic features which

00:15:35,830 --> 00:15:41,950
you can control with CSS I should point

00:15:39,970 --> 00:15:43,330
out that fonts do vary in the features

00:15:41,950 --> 00:15:46,210
they provide and this was always a

00:15:43,330 --> 00:15:47,590
problem you don't know what in the days

00:15:46,210 --> 00:15:49,030
when you had to depend on the fonts

00:15:47,590 --> 00:15:50,230
being on the user's machine you didn't

00:15:49,030 --> 00:15:52,360
know what features they had so you

00:15:50,230 --> 00:15:54,220
couldn't really reliably use them well

00:15:52,360 --> 00:15:56,110
once you have reliable font download

00:15:54,220 --> 00:15:57,760
then you know what features are there

00:15:56,110 --> 00:16:02,260
because you actually provided the font

00:15:57,760 --> 00:16:04,210
yourself so I should also point out that

00:16:02,260 --> 00:16:06,640
I'm using the syntax here in these demos

00:16:04,210 --> 00:16:09,100
called font variant which obviously came

00:16:06,640 --> 00:16:12,430
in in CSS too but has been much extended

00:16:09,100 --> 00:16:14,350
in css3 fonts it's the better syntax

00:16:12,430 --> 00:16:16,270
it's more understandable it's also

00:16:14,350 --> 00:16:18,820
poorly supported and if you follow that

00:16:16,270 --> 00:16:21,330
link there it goes - can I use basically

00:16:18,820 --> 00:16:23,650
that currently means Firefox

00:16:21,330 --> 00:16:25,420
there's also front feature settings

00:16:23,650 --> 00:16:30,220
which are cryptic they use four letter

00:16:25,420 --> 00:16:33,070
codes like SN P L they're very low-level

00:16:30,220 --> 00:16:34,900
they're supported everywhere font

00:16:33,070 --> 00:16:38,080
variant is merely a color it's merely

00:16:34,900 --> 00:16:41,020
syntactic sugar for these things so why

00:16:38,080 --> 00:16:42,520
the browser's don't just get on and do

00:16:41,020 --> 00:16:44,290
it I don't know they've already got the

00:16:42,520 --> 00:16:45,910
stuff they just need to hook it up and

00:16:44,290 --> 00:16:48,640
you know it would help the poor

00:16:45,910 --> 00:16:50,200
developers actually quite a lot if they

00:16:48,640 --> 00:16:52,330
would do font variants so if you have a

00:16:50,200 --> 00:16:53,890
bug tracker for a browser you like and

00:16:52,330 --> 00:16:55,510
you tend to chase them up do you suggest

00:16:53,890 --> 00:16:57,340
that they support fun variant because

00:16:55,510 --> 00:16:59,100
they do listen to people complaining

00:16:57,340 --> 00:17:02,920
repeatedly

00:16:59,100 --> 00:17:05,500
okay so here's an example we've got some

00:17:02,920 --> 00:17:06,910
text here and upper case text and some

00:17:05,500 --> 00:17:08,470
numbers and you can see that the numbers

00:17:06,910 --> 00:17:10,030
line up with the text quite nicely but

00:17:08,470 --> 00:17:12,430
when we've got lower case tax which is

00:17:10,030 --> 00:17:15,370
ascenders and descenders it doesn't line

00:17:12,430 --> 00:17:17,680
up so well but we can fix that by

00:17:15,370 --> 00:17:19,990
changing that to old-style numbers which

00:17:17,680 --> 00:17:21,610
also have ascenders and descenders and

00:17:19,990 --> 00:17:23,110
obviously you'd want to not do it like

00:17:21,610 --> 00:17:24,340
globally like I've done here but you

00:17:23,110 --> 00:17:25,780
would want to actually switch that

00:17:24,340 --> 00:17:27,370
depending on what sort of takes your

00:17:25,780 --> 00:17:29,620
hand so if you have your heading set in

00:17:27,370 --> 00:17:29,840
capitals you set it to lining numbers

00:17:29,620 --> 00:17:38,480
and

00:17:29,840 --> 00:17:40,100
so on next fractions now I've got some

00:17:38,480 --> 00:17:42,049
fractions here like a half and these

00:17:40,100 --> 00:17:43,850
sorts of things there are code points

00:17:42,049 --> 00:17:46,789
for that there's a code point for a half

00:17:43,850 --> 00:17:48,650
and you might be tempted to use that but

00:17:46,789 --> 00:17:50,000
it doesn't make searching very easy and

00:17:48,650 --> 00:17:55,070
you're not going to find a code point

00:17:50,000 --> 00:17:57,529
for 86 480 Thirds obviously so what you

00:17:55,070 --> 00:18:00,620
actually want is to have your text set

00:17:57,529 --> 00:18:02,179
with a slash and then you want to use an

00:18:00,620 --> 00:18:08,620
OpenType feature called value nor

00:18:02,179 --> 00:18:08,620
fractions just one property you're done

00:18:10,419 --> 00:18:14,929
you obviously have to check that the

00:18:12,559 --> 00:18:16,490
font has that feature increasingly now

00:18:14,929 --> 00:18:18,890
when you look on font sites the

00:18:16,490 --> 00:18:22,210
designers are promoting what features

00:18:18,890 --> 00:18:22,210
they've taken the trouble to provide

00:18:23,320 --> 00:18:27,740
here's another one this a table of

00:18:26,240 --> 00:18:29,779
numbers you'll probably want to compare

00:18:27,740 --> 00:18:31,370
the different numbers and looking along

00:18:29,779 --> 00:18:32,750
the left-hand side you'll see there's

00:18:31,370 --> 00:18:34,669
something that starts with a 1 and

00:18:32,750 --> 00:18:36,020
something that starts with the 8 so you

00:18:34,669 --> 00:18:37,760
might guess that the number starting

00:18:36,020 --> 00:18:39,440
with H is probably a bigger one because

00:18:37,760 --> 00:18:41,120
they eats bigger than one and they kind

00:18:39,440 --> 00:18:44,299
of line up except they don't line up and

00:18:41,120 --> 00:18:45,980
the colors don't line up because okay I

00:18:44,299 --> 00:18:47,659
could fix this by setting this in a

00:18:45,980 --> 00:18:49,549
monospaced font but then all the text

00:18:47,659 --> 00:18:52,809
would look ugly well actually want is

00:18:49,549 --> 00:18:56,600
proportional font for our text and

00:18:52,809 --> 00:18:59,630
non-proportional numbers which I get

00:18:56,600 --> 00:19:02,649
like this tabular numbers which means

00:18:59,630 --> 00:19:02,649
they all line up in columns

00:19:07,270 --> 00:19:12,620
here's another example I showed you this

00:19:09,710 --> 00:19:15,860
font earlier so you notice I have a

00:19:12,620 --> 00:19:17,510
little FL ligature which is quite nice

00:19:15,860 --> 00:19:21,049
and apart from that it looks fairly

00:19:17,510 --> 00:19:22,460
boring and if I switch on discretionary

00:19:21,049 --> 00:19:24,919
ligatures then they got all this weird

00:19:22,460 --> 00:19:30,860
nice stuff like that

00:19:24,919 --> 00:19:32,929
the other value I can set is none which

00:19:30,860 --> 00:19:35,870
switches off all ligatures it switches

00:19:32,929 --> 00:19:37,970
off mandatory ones common ones and

00:19:35,870 --> 00:19:39,740
discretionary ones basically do not ever

00:19:37,970 --> 00:19:42,230
use this value unless you really want

00:19:39,740 --> 00:19:44,059
that because you may break I mean Arabic

00:19:42,230 --> 00:19:45,559
for example you have a laminate early if

00:19:44,059 --> 00:19:47,780
you have to combine them in ligature is

00:19:45,559 --> 00:19:49,100
required by the writing system switch it

00:19:47,780 --> 00:19:52,280
off with that and people won't be able

00:19:49,100 --> 00:19:56,620
to read your text so just remember that

00:19:52,280 --> 00:19:56,620
the initial value is not none okay

00:19:56,770 --> 00:20:04,940
font synthesis in an age where we can

00:20:01,990 --> 00:20:07,370
make our websites use downloadable fonts

00:20:04,940 --> 00:20:10,340
make sure you provide at least a couple

00:20:07,370 --> 00:20:12,890
of waits an italic this sort of thing if

00:20:10,340 --> 00:20:15,169
you don't the browser will synthesize

00:20:12,890 --> 00:20:17,090
this for you it will slant your omen

00:20:15,169 --> 00:20:19,640
over to make an italic sorry audience

00:20:17,090 --> 00:20:22,309
slant your omen over to make an italic

00:20:19,640 --> 00:20:26,090
it will make a fake bold this looks this

00:20:22,309 --> 00:20:29,150
basically sucks and looks horrible so

00:20:26,090 --> 00:20:30,919
what this property does is it tells the

00:20:29,150 --> 00:20:32,840
browser when it's allowed to synthesize

00:20:30,919 --> 00:20:34,820
and when it isn't because you may decide

00:20:32,840 --> 00:20:35,960
that it's better to just use the Roman

00:20:34,820 --> 00:20:38,450
wait everywhere

00:20:35,960 --> 00:20:40,460
rather than have sucky born sake italic

00:20:38,450 --> 00:20:42,650
so this is the initial value which is

00:20:40,460 --> 00:20:43,789
the as usual with an initial value for

00:20:42,650 --> 00:20:45,620
something that's added later

00:20:43,789 --> 00:20:49,400
do what you do currently even if that's

00:20:45,620 --> 00:20:51,380
not a good idea but we can set it to

00:20:49,400 --> 00:20:54,530
wait like that so it's allowed to do

00:20:51,380 --> 00:20:56,030
wait but not allowed to do italics we

00:20:54,530 --> 00:20:57,590
can set it to style so it's allowed to

00:20:56,030 --> 00:21:00,080
do italics were not allowed to do wait

00:20:57,590 --> 00:21:01,370
oh wait it is doing wait why is it doing

00:21:00,080 --> 00:21:06,110
wait that's because Firefox doesn't

00:21:01,370 --> 00:21:08,419
follow the spec thank you and none which

00:21:06,110 --> 00:21:12,159
is fine means done synthesize anything

00:21:08,419 --> 00:21:12,159
and we can change that to different

00:21:12,700 --> 00:21:16,659
different fonts and see what they do

00:21:17,210 --> 00:21:20,450
what does this one do this is an

00:21:19,100 --> 00:21:26,950
interesting one because it only has a

00:21:20,450 --> 00:21:30,140
single weight and it's a bold yeah

00:21:26,950 --> 00:21:31,460
anyway basically as things improve we

00:21:30,140 --> 00:21:33,560
should see less and less of this

00:21:31,460 --> 00:21:35,480
synthetic bold and synthetic obliques I

00:21:33,560 --> 00:21:41,960
tell the key stuff which will be a good

00:21:35,480 --> 00:21:44,720
thing for everyone I'm turning the

00:21:41,960 --> 00:21:47,270
OpenType specification says that by

00:21:44,720 --> 00:21:53,030
default kerning should be applied on all

00:21:47,270 --> 00:21:56,060
texts quite a few browsers including all

00:21:53,030 --> 00:21:59,270
the WebKit ones Safari and Chrome ignore

00:21:56,060 --> 00:22:04,580
that and use a fast rendering path where

00:21:59,270 --> 00:22:06,470
they ignore kerning whereas Firefox for

00:22:04,580 --> 00:22:09,290
example and opera when that still

00:22:06,470 --> 00:22:10,160
existed dude do the kerning now why is

00:22:09,290 --> 00:22:12,260
that a problem

00:22:10,160 --> 00:22:13,370
well two reasons firstly because you

00:22:12,260 --> 00:22:14,210
don't know what you're gonna get you're

00:22:13,370 --> 00:22:16,010
going to get different things on

00:22:14,210 --> 00:22:17,690
different browsers and secondly you this

00:22:16,010 --> 00:22:19,040
is the variability you want to actually

00:22:17,690 --> 00:22:20,630
know what you're getting you want new

00:22:19,040 --> 00:22:22,490
users to have consistent thing it will

00:22:20,630 --> 00:22:24,800
cause different reflows even on the same

00:22:22,490 --> 00:22:28,280
page the same width the same exact

00:22:24,800 --> 00:22:30,620
dimensions so the default value for

00:22:28,280 --> 00:22:33,320
Fanconi is auto which means do whatever

00:22:30,620 --> 00:22:36,380
you do and I don't know what that is but

00:22:33,320 --> 00:22:39,110
you can have a much more normal why is

00:22:36,380 --> 00:22:40,430
it called normal it should be called do

00:22:39,110 --> 00:22:42,230
what you're supposed to be doing but

00:22:40,430 --> 00:22:45,080
don't really as something like this

00:22:42,230 --> 00:22:49,280
anyway so on firefox this doesn't have

00:22:45,080 --> 00:22:52,550
any effect but if i set it to none then

00:22:49,280 --> 00:22:55,250
suddenly the things now don't confuse

00:22:52,550 --> 00:22:56,810
kerning with letter-spacing do people

00:22:55,250 --> 00:22:58,850
understand what the differences letter

00:22:56,810 --> 00:22:59,990
spacing is the same an increment applied

00:22:58,850 --> 00:23:02,660
to all the letters

00:22:59,990 --> 00:23:03,650
whereas kerning means that the font

00:23:02,660 --> 00:23:04,850
designer has said well I've got

00:23:03,650 --> 00:23:06,260
something like this and something like

00:23:04,850 --> 00:23:07,940
this so I can stick a little bit closer

00:23:06,260 --> 00:23:09,740
together I've got two things that point

00:23:07,940 --> 00:23:12,110
out so I need to push them further apart

00:23:09,740 --> 00:23:14,120
it's so that the optical distance

00:23:12,110 --> 00:23:16,990
between the letters between the glyphs

00:23:14,120 --> 00:23:19,370
remains the same so let's play with the

00:23:16,990 --> 00:23:21,950
let's play with the kerning a bit and

00:23:19,370 --> 00:23:23,680
the letter spacing so yeah change the

00:23:21,950 --> 00:23:25,880
letter spacing and that makes everything

00:23:23,680 --> 00:23:29,169
go like that did you notice you can

00:23:25,880 --> 00:23:36,019
those negative values and Goliath

00:23:29,169 --> 00:23:37,879
don't do this in production code okay so

00:23:36,019 --> 00:23:43,070
that was open type features a quick word

00:23:37,879 --> 00:23:45,679
about performance the first and most

00:23:43,070 --> 00:23:47,749
obvious thing you can do to Inc so first

00:23:45,679 --> 00:23:50,210
of all don't do any of this unless you

00:23:47,749 --> 00:23:52,759
need to right if your site is replete

00:23:50,210 --> 00:23:53,659
with streaming video and huge images and

00:23:52,759 --> 00:23:55,309
stuff like that

00:23:53,659 --> 00:23:57,649
fonts are probably the last thing you

00:23:55,309 --> 00:23:59,690
should be looking at that on a more lean

00:23:57,649 --> 00:24:02,179
website and depending on the range of

00:23:59,690 --> 00:24:03,799
languages you're supporting you can

00:24:02,179 --> 00:24:05,389
easily find you've got a huge font that

00:24:03,799 --> 00:24:07,970
you're downloading and it's taking a lot

00:24:05,389 --> 00:24:09,590
of time so wherever you get your fonts

00:24:07,970 --> 00:24:11,299
from and this is an example from font

00:24:09,590 --> 00:24:13,669
squirrel but other signs have different

00:24:11,299 --> 00:24:14,809
things there's an online tool and you're

00:24:13,669 --> 00:24:16,190
selecting the font and you're

00:24:14,809 --> 00:24:17,570
downloading it locally it's same for

00:24:16,190 --> 00:24:20,710
google fonts or whatever

00:24:17,570 --> 00:24:24,049
there'll be subset options choose wisely

00:24:20,710 --> 00:24:25,820
they try to shield you a bit from making

00:24:24,049 --> 00:24:27,860
obvious mistakes so they group things by

00:24:25,820 --> 00:24:30,019
language because obviously you can

00:24:27,860 --> 00:24:33,139
subset part of the language you can say

00:24:30,019 --> 00:24:35,059
just use the ascii range you know which

00:24:33,139 --> 00:24:36,740
is great until you have you say well

00:24:35,059 --> 00:24:38,539
they'd seek my science in english why do

00:24:36,740 --> 00:24:39,710
I need anything else than ascii and then

00:24:38,539 --> 00:24:41,210
someone with the French thing comes

00:24:39,710 --> 00:24:43,580
along and they're eeeh cute comes from a

00:24:41,210 --> 00:24:46,220
different font and it looks ugly don't

00:24:43,580 --> 00:24:48,049
do that okay so subsets wisely but

00:24:46,220 --> 00:24:49,730
getting rid of lists that you're not

00:24:48,049 --> 00:24:51,830
using especially if there's a loss of

00:24:49,730 --> 00:24:56,840
them in a big font really has the

00:24:51,830 --> 00:25:01,159
largest impact on the file size so yeah

00:24:56,840 --> 00:25:04,279
glyphs big savings open cite tables some

00:25:01,159 --> 00:25:05,629
browsers as I mentioned don't do kerning

00:25:04,279 --> 00:25:08,960
so you might want to get rid of the

00:25:05,629 --> 00:25:11,960
kerning tables and you can save a little

00:25:08,960 --> 00:25:15,169
bit of space and you'd be ill-advised to

00:25:11,960 --> 00:25:16,549
do so why firstly because you can force

00:25:15,169 --> 00:25:17,409
it to do the kerning as I just showed

00:25:16,549 --> 00:25:20,419
you

00:25:17,409 --> 00:25:21,889
secondly because nowadays kerning isn't

00:25:20,419 --> 00:25:24,320
done in a current able but it's done

00:25:21,889 --> 00:25:26,659
using character classes in the Jeep a

00:25:24,320 --> 00:25:29,539
stable and G paws table is also used for

00:25:26,659 --> 00:25:31,809
things like other writing systems that

00:25:29,539 --> 00:25:34,070
need special positioning like Indic

00:25:31,809 --> 00:25:36,440
vowels that split apart and go around

00:25:34,070 --> 00:25:38,570
the consonants and things like that so

00:25:36,440 --> 00:25:41,000
if you drop the G paws table and a G sub

00:25:38,570 --> 00:25:41,430
table then suddenly you'll break some

00:25:41,000 --> 00:25:42,780
writing

00:25:41,430 --> 00:25:45,180
systems so don't do that without

00:25:42,780 --> 00:25:46,890
thinking about it and I gave some links

00:25:45,180 --> 00:25:50,400
to few things I mean font squirrel type

00:25:46,890 --> 00:25:52,140
yet and the last one is two thing called

00:25:50,400 --> 00:25:54,360
font tools which is kind of a generic

00:25:52,140 --> 00:25:57,030
names I said who's developing that

00:25:54,360 --> 00:25:59,160
better dad it's a very good it's a thing

00:25:57,030 --> 00:26:00,660
you can use from Python you can do all

00:25:59,160 --> 00:26:05,190
sorts of cool things including

00:26:00,660 --> 00:26:08,310
subsetting fonts second thing you can do

00:26:05,190 --> 00:26:11,340
is use a compressed font format wofe was

00:26:08,310 --> 00:26:14,790
developed specifically for that well not

00:26:11,340 --> 00:26:18,570
just that but for that so what does wofe

00:26:14,790 --> 00:26:21,630
do it adds a header which basically says

00:26:18,570 --> 00:26:23,130
where all the tables are and the option

00:26:21,630 --> 00:26:24,810
the answer metadata at the end now you

00:26:23,130 --> 00:26:26,100
might think I'm supposed to be trying to

00:26:24,810 --> 00:26:29,130
make this smaller why would I want to

00:26:26,100 --> 00:26:30,480
add stuff and the reason is how often do

00:26:29,130 --> 00:26:32,790
you go to someone else's website and

00:26:30,480 --> 00:26:35,520
have a look at their CSS right you do

00:26:32,790 --> 00:26:37,500
that a lot and sometimes it will depend

00:26:35,520 --> 00:26:38,850
on particular fonts and you'll have a

00:26:37,500 --> 00:26:41,640
look at those and you'll download those

00:26:38,850 --> 00:26:44,040
too and can you use them or not you

00:26:41,640 --> 00:26:45,510
don't know because obviously the font

00:26:44,040 --> 00:26:47,400
may have been purchased it may have been

00:26:45,510 --> 00:26:49,260
whatever it probably came in a zip file

00:26:47,400 --> 00:26:51,150
complete with the license thing which

00:26:49,260 --> 00:26:54,270
then didn't get uploaded onto the server

00:26:51,150 --> 00:26:56,010
because why would you but if you have it

00:26:54,270 --> 00:26:59,010
if you have some metadata that has a

00:26:56,010 --> 00:27:00,900
link in the font to the license or to

00:26:59,010 --> 00:27:02,220
the terms and conditions then you can

00:27:00,900 --> 00:27:03,480
just follow it know whether you can use

00:27:02,220 --> 00:27:08,010
it or not you find whether it's a free

00:27:03,480 --> 00:27:09,540
font or what the conditions are so we

00:27:08,010 --> 00:27:11,130
found that the foundries the font

00:27:09,540 --> 00:27:13,260
founders are very happy with this idea

00:27:11,130 --> 00:27:14,490
they didn't actually want digital rights

00:27:13,260 --> 00:27:16,170
management or anything like that on

00:27:14,490 --> 00:27:17,790
fonts they just wanted people to have

00:27:16,170 --> 00:27:19,620
access to the information to know where

00:27:17,790 --> 00:27:21,870
they can use or not if you're using an

00:27:19,620 --> 00:27:23,340
you're not allowed to us between your

00:27:21,870 --> 00:27:27,330
lawyers and their lawyers the browser

00:27:23,340 --> 00:27:29,250
doesn't have to get involved and then

00:27:27,330 --> 00:27:33,540
what wofe does is it's it's each table

00:27:29,250 --> 00:27:35,340
gzip the tables are done individually

00:27:33,540 --> 00:27:37,560
which with gzip happens to work quite

00:27:35,340 --> 00:27:39,450
well but the overall result because it's

00:27:37,560 --> 00:27:42,360
not a very specific type of compression

00:27:39,450 --> 00:27:45,720
it's just generic compression it's not

00:27:42,360 --> 00:27:47,280
all that great it helps gzip is used

00:27:45,720 --> 00:27:49,470
because it's already in the browser it's

00:27:47,280 --> 00:27:51,210
already used in the PNG format it's sort

00:27:49,470 --> 00:27:53,749
of using the HTTP so we might as well

00:27:51,210 --> 00:27:56,759
reuse it

00:27:53,749 --> 00:28:00,389
one soif was established we then went on

00:27:56,759 --> 00:28:04,139
to phase 2 which is doing it properly so

00:28:00,389 --> 00:28:06,509
off to compression it's a lot more

00:28:04,139 --> 00:28:09,389
complex the first thing it does is it's

00:28:06,509 --> 00:28:12,809
split so open type is designed really

00:28:09,389 --> 00:28:14,700
for ease of use for an application so

00:28:12,809 --> 00:28:16,700
the stuff is laid out in memory with

00:28:14,700 --> 00:28:19,019
lots of padding and stuff and things are

00:28:16,700 --> 00:28:20,610
duplicated in multiple places the same

00:28:19,019 --> 00:28:23,309
information is given in multiple ways

00:28:20,610 --> 00:28:24,840
depending on what applications want to

00:28:23,309 --> 00:28:26,490
use then that means a lot of it can

00:28:24,840 --> 00:28:28,460
actually be recalculated you can throw

00:28:26,490 --> 00:28:31,499
some of it away and then we calculate it

00:28:28,460 --> 00:28:32,999
you can also there's different types of

00:28:31,499 --> 00:28:35,460
data and if you put all the similar

00:28:32,999 --> 00:28:37,139
types together it compresses better and

00:28:35,460 --> 00:28:38,519
lastly if you use a compression

00:28:37,139 --> 00:28:40,980
algorithm that's specifically designed

00:28:38,519 --> 00:28:43,889
for fonts has been tuned for that you

00:28:40,980 --> 00:28:46,169
get much better results apart from that

00:28:43,889 --> 00:28:49,679
is the same as what fun so when I say

00:28:46,169 --> 00:28:51,659
much better results the hundred percent

00:28:49,679 --> 00:28:53,879
is the typical well that'sthat's your

00:28:51,659 --> 00:28:55,409
uncompressed font rough one will take

00:28:53,879 --> 00:28:58,950
that down to forty five percent of the

00:28:55,409 --> 00:29:01,200
size and woth two will take it down to

00:28:58,950 --> 00:29:03,179
32 percent for a true type font I'll

00:29:01,200 --> 00:29:05,820
explain what I mean by that later so you

00:29:03,179 --> 00:29:07,230
can see that yeah you you're grinding it

00:29:05,820 --> 00:29:09,149
down you're getting your general a third

00:29:07,230 --> 00:29:13,710
of the size so it's definitely worth

00:29:09,149 --> 00:29:15,720
doing so off to with true type glyphs

00:29:13,710 --> 00:29:18,360
which is the most common sort on the web

00:29:15,720 --> 00:29:21,240
currently although that's changing gives

00:29:18,360 --> 00:29:24,570
you 68 percent compression which is 25

00:29:21,240 --> 00:29:27,840
percent better than wofe one if however

00:29:24,570 --> 00:29:30,210
you have a postscript glyphs cff glyphs

00:29:27,840 --> 00:29:32,610
you get mass good compression that's

00:29:30,210 --> 00:29:34,320
because the the font specific

00:29:32,610 --> 00:29:36,149
compression is able to do more with the

00:29:34,320 --> 00:29:39,960
true time format it can rearrange data

00:29:36,149 --> 00:29:41,159
and make it more compressible but it's

00:29:39,960 --> 00:29:46,259
still worth doing it's still better than

00:29:41,159 --> 00:29:49,529
what one I should point out that it's

00:29:46,259 --> 00:29:51,299
not a free lunch there's a very talented

00:29:49,529 --> 00:29:53,009
compression team that work on the

00:29:51,299 --> 00:29:56,429
broccoli compression which is used in

00:29:53,009 --> 00:29:58,080
wofe too and they're always saying oh I

00:29:56,429 --> 00:30:00,090
got this a new improvement guy next to

00:29:58,080 --> 00:30:02,190
naught point five percent it's like

00:30:00,090 --> 00:30:04,799
keeping going keeping on it's great but

00:30:02,190 --> 00:30:06,990
at some point someone said how long does

00:30:04,799 --> 00:30:09,120
it take to decompress now this is

00:30:06,990 --> 00:30:12,419
already an asymmetric compression which

00:30:09,120 --> 00:30:13,799
means it's fast to decompress and slow

00:30:12,419 --> 00:30:15,179
to compress which is fine because you

00:30:13,799 --> 00:30:17,669
can press it once and shove it on the

00:30:15,179 --> 00:30:19,500
server and millions of people hopefully

00:30:17,669 --> 00:30:23,100
download it and they all decompress it

00:30:19,500 --> 00:30:25,770
so you want that but what we found was

00:30:23,100 --> 00:30:28,289
the last one or two percent squeezing

00:30:25,770 --> 00:30:29,700
that down could double the decompression

00:30:28,289 --> 00:30:31,529
size so you're making the font

00:30:29,700 --> 00:30:33,600
fractionally smaller but not small

00:30:31,529 --> 00:30:36,330
enough to really impact the download

00:30:33,600 --> 00:30:37,890
time but then your pages hang in there

00:30:36,330 --> 00:30:39,600
while all these fonts are decompressing

00:30:37,890 --> 00:30:41,549
and actually if you would back off the

00:30:39,600 --> 00:30:42,809
performance a little bit it's already

00:30:41,549 --> 00:30:44,730
back off the compression a little bit

00:30:42,809 --> 00:30:47,130
then you'd get a much faster page rate

00:30:44,730 --> 00:30:48,919
over time this is more a note for us

00:30:47,130 --> 00:30:51,029
rather than a note for you because the

00:30:48,919 --> 00:30:52,890
the way that wofe is done there'll be

00:30:51,029 --> 00:30:54,390
some command-line tweaks and stuff where

00:30:52,890 --> 00:30:56,809
basically the default settings should

00:30:54,390 --> 00:30:58,649
avoid this situation since I mentioned

00:30:56,809 --> 00:31:00,480
performance on the mobile should also

00:30:58,649 --> 00:31:02,610
say that we tested the memory use for

00:31:00,480 --> 00:31:04,559
decompression and it's much the same as

00:31:02,610 --> 00:31:17,039
well slightly larger but not enough to

00:31:04,559 --> 00:31:19,590
worry about okay so if you have fonts

00:31:17,039 --> 00:31:21,120
used on your site then you may find that

00:31:19,590 --> 00:31:23,309
they're not loaded because you hadn't

00:31:21,120 --> 00:31:25,200
got any text that uses them and then

00:31:23,309 --> 00:31:27,600
when people enter text that uses them

00:31:25,200 --> 00:31:29,039
there will be a lag because suddenly the

00:31:27,600 --> 00:31:31,440
browser will say oh I need to download

00:31:29,039 --> 00:31:32,760
that after all no Goffin get it which is

00:31:31,440 --> 00:31:34,770
the point at which you step away from

00:31:32,760 --> 00:31:36,450
CSS into the world of JavaScript and

00:31:34,770 --> 00:31:39,179
force it to download the thing you know

00:31:36,450 --> 00:31:41,909
you're going to be using so just to show

00:31:39,179 --> 00:31:44,279
this isn't scary here's an app font face

00:31:41,909 --> 00:31:46,620
rule which you cannot see and understand

00:31:44,279 --> 00:31:50,669
and you know what it's doing and here is

00:31:46,620 --> 00:31:53,520
a new font face object which as you can

00:31:50,669 --> 00:31:54,960
see is basically the same thing and it's

00:31:53,520 --> 00:31:58,230
declaring the font and saying I'm going

00:31:54,960 --> 00:32:00,120
to be using this once you've done that

00:31:58,230 --> 00:32:02,760
you can trigger it to download and you

00:32:00,120 --> 00:32:04,950
get events which are promises you can

00:32:02,760 --> 00:32:07,559
get one about when it bloating has

00:32:04,950 --> 00:32:10,730
started when loading has finished or

00:32:07,559 --> 00:32:13,480
when the loading has ended with an error

00:32:10,730 --> 00:32:16,690
and what can you do with that well

00:32:13,480 --> 00:32:19,269
you can then stick a little handler on

00:32:16,690 --> 00:32:21,549
it when the promised returns use the

00:32:19,269 --> 00:32:22,779
value and basically add a class to say

00:32:21,549 --> 00:32:24,789
okay I'm going to use this font which

00:32:22,779 --> 00:32:26,559
means if it fails you don't ever add the

00:32:24,789 --> 00:32:29,169
class and it doesn't you try to use the

00:32:26,559 --> 00:32:31,480
font that doesn't exist so this does

00:32:29,169 --> 00:32:34,929
give you a lot more flexibility to do

00:32:31,480 --> 00:32:36,789
things like that this is fairly new it's

00:32:34,929 --> 00:32:39,070
supported in Chrome and opera and

00:32:36,789 --> 00:32:40,690
Android it's not supported in the others

00:32:39,070 --> 00:32:43,480
yet but it will be because this is

00:32:40,690 --> 00:32:46,630
pretty useful stuff but I've put it here

00:32:43,480 --> 00:32:50,980
because it is it's it's kind of new and

00:32:46,630 --> 00:32:53,080
you might not know about it okay the

00:32:50,980 --> 00:32:58,840
future the crystal ball the know I can't

00:32:53,080 --> 00:33:01,210
use this yet stuff so the first thing I

00:32:58,840 --> 00:33:03,010
wanted to talk about is colored fonts or

00:33:01,210 --> 00:33:04,120
color type in general since this is

00:33:03,010 --> 00:33:06,190
obviously isn't font this was

00:33:04,120 --> 00:33:09,250
hand-painted by monks probably taking

00:33:06,190 --> 00:33:09,789
years but illuminated manuscripts is one

00:33:09,250 --> 00:33:11,350
driver

00:33:09,789 --> 00:33:13,000
okay it's not driver nobody cares about

00:33:11,350 --> 00:33:17,200
eliminating manuscripts it's just a nice

00:33:13,000 --> 00:33:23,799
historical example the actual driver and

00:33:17,200 --> 00:33:28,120
the real use case of course is emoji

00:33:23,799 --> 00:33:29,860
which everyone wanted to use and at

00:33:28,120 --> 00:33:31,450
first these were just little crappy

00:33:29,860 --> 00:33:33,130
raster images and then people said no

00:33:31,450 --> 00:33:34,570
works use a fond technology to do this

00:33:33,130 --> 00:33:36,399
we're going to have to extend font okay

00:33:34,570 --> 00:33:39,010
let's do that because we really want to

00:33:36,399 --> 00:33:40,779
do these properly and have nice vector

00:33:39,010 --> 00:33:42,610
effects for our emoji and let's get rid

00:33:40,779 --> 00:33:43,899
of that you will thank me by the way if

00:33:42,610 --> 00:33:45,639
you go to this page is a really

00:33:43,899 --> 00:33:48,399
irritating soundtrack as well which I

00:33:45,639 --> 00:33:52,330
had the thought to mute and here's the

00:33:48,399 --> 00:33:53,919
third use case I saw a fascinating talk

00:33:52,330 --> 00:33:56,139
at one of the international typography

00:33:53,919 --> 00:33:58,179
conferences a type I there was a chap

00:33:56,139 --> 00:34:01,299
who went around India talking to sign

00:33:58,179 --> 00:34:02,919
painters because when people in a shock

00:34:01,299 --> 00:34:04,690
like a fruit store something wants to

00:34:02,919 --> 00:34:07,059
have a banner advertising themselves

00:34:04,690 --> 00:34:08,500
they hire someone to paint the letters

00:34:07,059 --> 00:34:11,379
on clasp and this is a photo I mean

00:34:08,500 --> 00:34:13,359
these things are huge right and they

00:34:11,379 --> 00:34:15,159
paint all the big doors hand-painted

00:34:13,359 --> 00:34:17,859
signage and he asked them to design

00:34:15,159 --> 00:34:19,690
fonts for him which they did and they

00:34:17,859 --> 00:34:22,659
provided them on pieces of cloth in

00:34:19,690 --> 00:34:23,889
multiple colors because that's what text

00:34:22,659 --> 00:34:25,419
looks like right

00:34:23,889 --> 00:34:26,799
and these are gorgeous these are

00:34:25,419 --> 00:34:28,299
beautiful unfortunately these people are

00:34:26,799 --> 00:34:30,789
going out of business because they're

00:34:28,299 --> 00:34:34,089
getting replaced by you know a PC in a

00:34:30,789 --> 00:34:35,829
laser printer or a vinyl printer but and

00:34:34,089 --> 00:34:38,139
interestingly as well I mean this is

00:34:35,829 --> 00:34:40,269
from India but also I was a couple of

00:34:38,139 --> 00:34:41,710
months ago I was in Brazil another

00:34:40,269 --> 00:34:42,999
typography conference and there was a

00:34:41,710 --> 00:34:45,069
woman there who'd gone down the Amazon

00:34:42,999 --> 00:34:46,960
and equally their assigned painters for

00:34:45,069 --> 00:34:49,809
boats and things which have it also a

00:34:46,960 --> 00:34:51,220
tradition of multicolored type so this

00:34:49,809 --> 00:34:53,499
is an interesting thing it's a useful

00:34:51,220 --> 00:34:56,349
thing to revive let's have a quick look

00:34:53,499 --> 00:34:59,950
at how we might do this so here's an

00:34:56,349 --> 00:35:01,650
example this looks quite nice doesn't it

00:34:59,950 --> 00:35:03,579
it's multi this is actually that same

00:35:01,650 --> 00:35:05,140
thing that I just showed you on the

00:35:03,579 --> 00:35:08,019
clasp but but done here on the webpage

00:35:05,140 --> 00:35:10,329
and you might think well okay great you

00:35:08,019 --> 00:35:12,880
can do it what's the problem and that's

00:35:10,329 --> 00:35:15,579
the problem this is nine different fonts

00:35:12,880 --> 00:35:17,739
all with different colors slapped

00:35:15,579 --> 00:35:20,559
together using absolute positioning and

00:35:17,739 --> 00:35:24,970
that also means that when you look at

00:35:20,559 --> 00:35:26,529
the goods the markup you've got the same

00:35:24,970 --> 00:35:27,789
text multiple times the same text

00:35:26,529 --> 00:35:29,109
multiple times the same text multiple

00:35:27,789 --> 00:35:30,640
times and that's really going to hurt

00:35:29,109 --> 00:35:32,349
your search you actually might get

00:35:30,640 --> 00:35:33,759
science blocking this because you've got

00:35:32,349 --> 00:35:36,579
repeated text and they'll think you're

00:35:33,759 --> 00:35:40,989
trying to spoof SEO and you just don't

00:35:36,579 --> 00:35:44,739
want to do that at all so this is where

00:35:40,989 --> 00:35:47,380
how we're doing for time nine minutes

00:35:44,739 --> 00:35:49,150
sure okay quick poll shall I live

00:35:47,380 --> 00:35:51,420
dangerously or shiny not this will take

00:35:49,150 --> 00:35:54,900
about 90 seconds to two minutes

00:35:51,420 --> 00:36:01,059
dangerous okay let's go for it

00:35:54,900 --> 00:36:04,630
right so here R is the fonts that I was

00:36:01,059 --> 00:36:06,989
using you can see this ten of them I'm

00:36:04,630 --> 00:36:09,489
going to open this one up in trance type

00:36:06,989 --> 00:36:15,460
then what I'm going to do is drop the

00:36:09,489 --> 00:36:18,599
other ones also into trance type then

00:36:15,460 --> 00:36:18,599
I'm going to select them all

00:36:19,950 --> 00:36:25,290
and then I'm going to pick an effect

00:36:21,900 --> 00:36:29,400
called overlay fonts and now I'm going

00:36:25,290 --> 00:36:31,079
to pick some colors that don't suck and

00:36:29,400 --> 00:36:33,150
I'm doing this quickly so actually they

00:36:31,079 --> 00:36:36,900
will suck that's fine

00:36:33,150 --> 00:36:38,940
basically the design of this is is

00:36:36,900 --> 00:36:40,530
having four colors for the top and four

00:36:38,940 --> 00:36:47,069
for the boss and this is really hideous

00:36:40,530 --> 00:36:51,809
isn't it I'm sorry there we go that that

00:36:47,069 --> 00:36:53,910
will do well do and say okay and change

00:36:51,809 --> 00:37:01,140
the family name to something more

00:36:53,910 --> 00:37:08,579
sensible and export and let's put it

00:37:01,140 --> 00:37:09,270
there for doom okay so let's see what

00:37:08,579 --> 00:37:11,430
we've got

00:37:09,270 --> 00:37:14,400
there's my fonts directory that I'm

00:37:11,430 --> 00:37:21,240
using there's the kafeel now I don't

00:37:14,400 --> 00:37:23,040
want it there stupid thing and it has

00:37:21,240 --> 00:37:25,170
produced four different fonts why four

00:37:23,040 --> 00:37:28,950
because there are four different ways of

00:37:25,170 --> 00:37:31,230
doing this there's the way that Google

00:37:28,950 --> 00:37:33,740
does it which involves using PNG images

00:37:31,230 --> 00:37:35,940
all different sizes which kind of sucks

00:37:33,740 --> 00:37:37,829
there's the way Apple does it which is

00:37:35,940 --> 00:37:39,839
called s fix which is an undocumented

00:37:37,829 --> 00:37:42,780
thing which also uses raster images and

00:37:39,839 --> 00:37:44,490
it's also not very good and there's the

00:37:42,780 --> 00:37:47,069
way that Microsoft do it which is using

00:37:44,490 --> 00:37:48,510
stacked TrueType outlines and then

00:37:47,069 --> 00:37:49,650
there's the SVG glyphs and OpenType

00:37:48,510 --> 00:37:51,299
which is what I was telling you about

00:37:49,650 --> 00:37:57,960
earlier okay so we have these four

00:37:51,299 --> 00:38:01,049
things let us see if this doesn't work

00:37:57,960 --> 00:38:03,440
then it's okay because I do actually

00:38:01,049 --> 00:38:03,440
have a backup

00:38:04,750 --> 00:38:13,349
quick look what did I do for this yeah

00:38:11,200 --> 00:38:19,710
that looks what right doesn't it

00:38:13,349 --> 00:38:19,710
okay and

00:38:23,400 --> 00:38:33,280
okay let's quickly recover from that as

00:38:31,329 --> 00:38:36,359
they say in cooking programs here the

00:38:33,280 --> 00:38:36,359
ones I prepared earlier

00:38:48,650 --> 00:38:53,320
yes really do thank you

00:39:03,430 --> 00:39:09,229
okay so this is the first format that is

00:39:06,200 --> 00:39:12,289
useful it uses a an open type table

00:39:09,229 --> 00:39:14,089
called color which holds a stack of true

00:39:12,289 --> 00:39:15,979
type outlines the first one will be used

00:39:14,089 --> 00:39:17,930
as a fallback if you eat color fonts are

00:39:15,979 --> 00:39:21,229
not supported and then there's another

00:39:17,930 --> 00:39:23,150
one called pal see pal which holds the

00:39:21,229 --> 00:39:24,859
palettes so you have you saw me

00:39:23,150 --> 00:39:27,739
selecting the colors there those colors

00:39:24,859 --> 00:39:29,029
go into the font itself and there's the

00:39:27,739 --> 00:39:31,239
white actually that's the ones I picked

00:39:29,029 --> 00:39:33,950
last time owners practicing this demo so

00:39:31,239 --> 00:39:35,989
okay that works and this is just you

00:39:33,950 --> 00:39:37,630
know it's a single line of text we have

00:39:35,989 --> 00:39:39,859
got multiple lines or anything like that

00:39:37,630 --> 00:39:44,380
so it's pretty good right it's working

00:39:39,859 --> 00:39:50,690
well can anyone see a problem with it

00:39:44,380 --> 00:39:52,430
yes the color property yeah exactly in

00:39:50,690 --> 00:39:54,890
fact how do i style any of this we've

00:39:52,430 --> 00:39:56,390
lost something haven't we where did the

00:39:54,890 --> 00:39:59,059
styling go they have colors are now

00:39:56,390 --> 00:40:00,470
baked into the font which is fine if

00:39:59,059 --> 00:40:01,849
you're making your own fonts but if

00:40:00,470 --> 00:40:09,019
you're buying them or something that's

00:40:01,849 --> 00:40:11,690
really not very helpful is it so let's

00:40:09,019 --> 00:40:13,489
have another option so SVG so you've

00:40:11,690 --> 00:40:14,719
heard of SVG fonts right I didn't

00:40:13,489 --> 00:40:16,579
mention them earlier but you've heard of

00:40:14,719 --> 00:40:19,969
SVG fonts and you know that you

00:40:16,579 --> 00:40:21,710
shouldn't use them ever okay good he was

00:40:19,969 --> 00:40:23,119
a hottie was a temporary hack at a time

00:40:21,710 --> 00:40:25,039
when we didn't have reliable

00:40:23,119 --> 00:40:26,719
downloadable fonts okay it served its

00:40:25,039 --> 00:40:28,579
purpose it had really terrible

00:40:26,719 --> 00:40:30,319
internationalization it was only ever

00:40:28,579 --> 00:40:32,180
intended as a throw away temporary

00:40:30,319 --> 00:40:35,690
stopgap so don't use them they're

00:40:32,180 --> 00:40:38,479
terrible so it's much the same you have

00:40:35,690 --> 00:40:40,489
an SVG table which contains some SVG

00:40:38,479 --> 00:40:42,410
which can do anything so I mean that's

00:40:40,489 --> 00:40:45,049
the problem with the the previous thing

00:40:42,410 --> 00:40:46,489
each each overlay is a solid color

00:40:45,049 --> 00:40:49,609
that's all you can have is a solid color

00:40:46,489 --> 00:40:51,529
fill and then you've got C pal

00:40:49,609 --> 00:40:54,440
optionally to have these palettes and

00:40:51,529 --> 00:40:57,109
then you use CSS variables to alter the

00:40:54,440 --> 00:40:58,729
palette so this is the neat this is one

00:40:57,109 --> 00:41:00,829
of the other ones this is the SVG one

00:40:58,729 --> 00:41:02,450
that I exported looks much the same I

00:41:00,829 --> 00:41:04,009
mean here it's not using the SVG it's

00:41:02,450 --> 00:41:07,850
not using gradients or doing anything

00:41:04,009 --> 00:41:11,220
fancy it's just overlaid solid text

00:41:07,850 --> 00:41:15,750
but let's see how we can do this so I've

00:41:11,220 --> 00:41:18,050
used different colors here let's pick

00:41:15,750 --> 00:41:21,380
something and make it really hideous

00:41:18,050 --> 00:41:27,990
let's change the hue there and change

00:41:21,380 --> 00:41:34,440
the hue there and maybe the saturation

00:41:27,990 --> 00:41:38,580
and let's change that white to yellow

00:41:34,440 --> 00:41:40,530
and yeah okay so we can using CSS

00:41:38,580 --> 00:41:42,510
variables and these are pre these are

00:41:40,530 --> 00:41:44,460
predefined in the spec it says you must

00:41:42,510 --> 00:41:46,770
have them called color zero two color N

00:41:44,460 --> 00:41:48,780
and they will correspond to entries in

00:41:46,770 --> 00:41:51,090
the palette and you can therefore style

00:41:48,780 --> 00:41:52,800
and the SVG ones themselves

00:41:51,090 --> 00:41:55,680
you can't style the other ones though

00:41:52,800 --> 00:41:58,020
the the TrueType ones they're not style

00:41:55,680 --> 00:42:03,480
like that which is a shame but okay at

00:41:58,020 --> 00:42:05,370
least this one works so it's now I've

00:42:03,480 --> 00:42:07,110
been telling you about css3 fonts let's

00:42:05,370 --> 00:42:09,090
talk about CSS for fonts which is

00:42:07,110 --> 00:42:10,800
basically about two pages long and full

00:42:09,090 --> 00:42:12,960
of jotted down ideas on the back of an

00:42:10,800 --> 00:42:15,150
envelope one of which is a thing called

00:42:12,960 --> 00:42:17,040
font palette so you can have multiple

00:42:15,150 --> 00:42:18,960
palettes in these fonts you can have for

00:42:17,040 --> 00:42:20,520
example one that's designed for text set

00:42:18,960 --> 00:42:22,260
on the dark background and one on light

00:42:20,520 --> 00:42:26,100
background so this lets you select

00:42:22,260 --> 00:42:28,530
between available palettes also an app

00:42:26,100 --> 00:42:30,300
palette entries function which lets you

00:42:28,530 --> 00:42:32,370
override specific palette entries so

00:42:30,300 --> 00:42:34,080
instead of relying on using CSS

00:42:32,370 --> 00:42:36,420
variables and having the SVG actually

00:42:34,080 --> 00:42:38,610
have var functions to call up those

00:42:36,420 --> 00:42:41,280
instead it says no let's just override

00:42:38,610 --> 00:42:42,990
the power directly just just override

00:42:41,280 --> 00:42:44,880
individual palette entries and that's

00:42:42,990 --> 00:42:49,470
how you would do that using app palette

00:42:44,880 --> 00:42:51,660
entries lastly I mentioned font

00:42:49,470 --> 00:42:53,670
synthesis already and said you can

00:42:51,660 --> 00:42:55,650
switch off fake bold and you can switch

00:42:53,670 --> 00:42:57,870
off fake italic there is another

00:42:55,650 --> 00:43:00,690
abomination waiting to be killed which

00:42:57,870 --> 00:43:02,580
is fake small caps and you do fake small

00:43:00,690 --> 00:43:04,080
caps by taking a capital and squashing

00:43:02,580 --> 00:43:05,610
it down and making it smaller which

00:43:04,080 --> 00:43:06,960
means it's in there and lighter than it

00:43:05,610 --> 00:43:08,790
should be compared to the other glyphs

00:43:06,960 --> 00:43:12,810
that looks kind of ugly so this will be

00:43:08,790 --> 00:43:14,430
a way to disable that too and lastly you

00:43:12,810 --> 00:43:17,050
know about the font families you know

00:43:14,430 --> 00:43:20,020
the serif and sans serif and and

00:43:17,050 --> 00:43:22,240
to see has anyone ever used generic font

00:43:20,020 --> 00:43:25,630
family fantasy in a production website

00:43:22,240 --> 00:43:28,090
ever no I have no idea why we have that

00:43:25,630 --> 00:43:30,280
one is such a stupid idea anyway there

00:43:28,090 --> 00:43:33,730
will be some more there will be emoji

00:43:30,280 --> 00:43:35,260
there will be math and Fang song which I

00:43:33,730 --> 00:43:36,790
don't speak Chinese so I'm not quite

00:43:35,260 --> 00:43:38,800
sure this is but apparently there is a

00:43:36,790 --> 00:43:40,420
distinction which is relevant for you

00:43:38,800 --> 00:43:46,150
does anyone actually speak Chinese and

00:43:40,420 --> 00:43:47,670
can tell me what this means okay thank

00:43:46,150 --> 00:43:49,960
you

00:43:47,670 --> 00:43:51,550
actually if you could mail me afterwards

00:43:49,960 --> 00:43:54,580
with a longer explanation that would be

00:43:51,550 --> 00:43:56,980
great because I really do want to

00:43:54,580 --> 00:44:00,250
understand that okay so I think that's

00:43:56,980 --> 00:44:02,020
pretty much it yes indeed that's me as a

00:44:00,250 --> 00:44:04,120
reminder again these slides are up on my

00:44:02,020 --> 00:44:07,060
github so if you want to have a look at

00:44:04,120 --> 00:44:11,380
them then they are and I guess we still

00:44:07,060 --> 00:44:13,270
have a little a minute for questions in

00:44:11,380 --> 00:44:15,850
the declarations you're using you are

00:44:13,270 --> 00:44:17,710
limiting the fonts available to certain

00:44:15,850 --> 00:44:20,020
subsets are there yeah

00:44:17,710 --> 00:44:22,480
any API that scene with the requests or

00:44:20,020 --> 00:44:24,490
is limited on the client side is it okay

00:44:22,480 --> 00:44:28,320
but yeah that that day is not affecting

00:44:24,490 --> 00:44:31,690
the request now you can do that yourself

00:44:28,320 --> 00:44:34,030
okay what you can do is subset the font

00:44:31,690 --> 00:44:36,220
that you're using so it's called foo you

00:44:34,030 --> 00:44:38,320
can make food Chinese and food Thai and

00:44:36,220 --> 00:44:40,990
foo Arabic and whatever and then you can

00:44:38,320 --> 00:44:43,720
have multiple app font face declarations

00:44:40,990 --> 00:44:45,730
all of which have the same font family

00:44:43,720 --> 00:44:49,030
and all which has the same weight and so

00:44:45,730 --> 00:44:50,530
on but you use Unicode range and then

00:44:49,030 --> 00:44:52,900
what will happen is when the browser

00:44:50,530 --> 00:44:54,490
needs to fetch one of these it will and

00:44:52,900 --> 00:44:55,960
the ones that it doesn't need to it

00:44:54,490 --> 00:44:58,060
won't fact so depending on what the

00:44:55,960 --> 00:44:59,620
content is on your page you can it's

00:44:58,060 --> 00:45:02,110
effectively you can do your own sub

00:44:59,620 --> 00:45:03,790
setting and but still combine them into

00:45:02,110 --> 00:45:05,890
the same font family so on your actual

00:45:03,790 --> 00:45:08,350
CSS you just give the font family name

00:45:05,890 --> 00:45:10,150
and also if you combine that with font

00:45:08,350 --> 00:45:11,980
loading API you can force the ones that

00:45:10,150 --> 00:45:13,540
you know you're about to use to load

00:45:11,980 --> 00:45:15,160
earlier and these other ones as backup

00:45:13,540 --> 00:45:16,630
in case you know someone times in their

00:45:15,160 --> 00:45:18,820
name and it's in Turkish or something

00:45:16,630 --> 00:45:21,340
like that so that that is a good way to

00:45:18,820 --> 00:45:22,630
do it but yes it's not it's not it's not

00:45:21,340 --> 00:45:24,940
talking to the server and saying

00:45:22,630 --> 00:45:27,670
download subset this font for me and

00:45:24,940 --> 00:45:28,630
then then give it to me the Google Fonts

00:45:27,670 --> 00:45:30,370
API does that

00:45:28,630 --> 00:45:32,560
if you look what it does a and that's

00:45:30,370 --> 00:45:34,810
import you'll see that the URLs got a

00:45:32,560 --> 00:45:36,880
query part with basically which which

00:45:34,810 --> 00:45:38,260
ranges of stuff to use bear in mind

00:45:36,880 --> 00:45:40,090
though if you use that you're doing two

00:45:38,260 --> 00:45:41,710
HTTP requests the first one is actually

00:45:40,090 --> 00:45:43,840
getting in our font face in a stylesheet

00:45:41,710 --> 00:45:45,250
and the sixth line stylesheet and the

00:45:43,840 --> 00:45:47,560
second one is actually getting the fonts

00:45:45,250 --> 00:45:49,210
referred to from that but I believe

00:45:47,560 --> 00:45:52,090
Google is actually subsetting those on

00:45:49,210 --> 00:45:59,590
the fly when you do that does answer the

00:45:52,090 --> 00:46:02,790
question good yeah yeah I know

00:45:59,590 --> 00:46:05,560
ie seeks implemented the ad font face

00:46:02,790 --> 00:46:08,260
well all that all those years ago

00:46:05,560 --> 00:46:10,480
yeah um dude why did why did things sort

00:46:08,260 --> 00:46:13,180
of stall out for a long time with at one

00:46:10,480 --> 00:46:16,180
place okay that's a good question yes ie

00:46:13,180 --> 00:46:20,470
I think five point five even implemented

00:46:16,180 --> 00:46:23,440
at font face so at the time in even that

00:46:20,470 --> 00:46:25,060
meeting before okay so at the time this

00:46:23,440 --> 00:46:27,700
was at the time the browser Wars there

00:46:25,060 --> 00:46:29,470
were two browsers Internet Explorer and

00:46:27,700 --> 00:46:31,000
Netscape and they basically did

00:46:29,470 --> 00:46:33,430
everything the opposite way to each

00:46:31,000 --> 00:46:34,810
other so Netscape at that time hated

00:46:33,430 --> 00:46:37,420
style sheets they said they would never

00:46:34,810 --> 00:46:39,430
implement style sheets they used the

00:46:37,420 --> 00:46:41,020
link tag in the HTML which linked

00:46:39,430 --> 00:46:42,970
directly to a font and they would only

00:46:41,020 --> 00:46:45,070
accept one format which is called pfr

00:46:42,970 --> 00:46:47,430
portable font resource which was a

00:46:45,070 --> 00:46:49,630
proprietary technology from bitstream

00:46:47,430 --> 00:46:51,580
they rapidly gave her up when they

00:46:49,630 --> 00:46:52,900
morphed into being mozilla because then

00:46:51,580 --> 00:46:54,040
they had to open-source their stuff and

00:46:52,900 --> 00:46:55,330
they couldn't have all this code that

00:46:54,040 --> 00:46:58,360
was using proprietary things so they

00:46:55,330 --> 00:47:00,700
just dropped it meanwhile Microsoft did

00:46:58,360 --> 00:47:02,590
the the w3c standard way without font

00:47:00,700 --> 00:47:05,950
face but they were the only browser to

00:47:02,590 --> 00:47:07,390
do so so people kinda didn't care and it

00:47:05,950 --> 00:47:09,580
was using another proprietary thing

00:47:07,390 --> 00:47:11,680
called embedded open type which was

00:47:09,580 --> 00:47:13,780
using a font compression license from AG

00:47:11,680 --> 00:47:16,720
for monotype which was proprietary and

00:47:13,780 --> 00:47:19,300
protected by patents so nobody would

00:47:16,720 --> 00:47:21,630
touch either of them and that's why I

00:47:19,300 --> 00:47:24,460
failed because there wasn't an effective

00:47:21,630 --> 00:47:26,080
Universal download mechanism for the

00:47:24,460 --> 00:47:28,000
font there wasn't a format we had a

00:47:26,080 --> 00:47:30,310
syntax but only one browsers using it

00:47:28,000 --> 00:47:31,840
and we didn't have a format it was SVG

00:47:30,310 --> 00:47:34,000
fonts the reason they took off is

00:47:31,840 --> 00:47:36,130
because they use the same syntax but we

00:47:34,000 --> 00:47:37,750
also mandated in the SVG spec you can

00:47:36,130 --> 00:47:40,420
support any font format what you want

00:47:37,750 --> 00:47:42,160
but you have to support SVG fonts and

00:47:40,420 --> 00:47:44,740
SVG fonts use the exact same

00:47:42,160 --> 00:47:47,490
path syntax as SVG does so the

00:47:44,740 --> 00:47:50,619
incremental cost to implement was small

00:47:47,490 --> 00:47:52,329
and so people people would do that and

00:47:50,619 --> 00:47:54,010
they worked for a while its stock gapped

00:47:52,329 --> 00:47:56,020
us he was okay I mean at that time

00:47:54,010 --> 00:47:57,700
especially on phones if you had SVG on a

00:47:56,020 --> 00:47:59,440
phone they often had no access to the

00:47:57,700 --> 00:48:01,329
fonts they were on the platform they

00:47:59,440 --> 00:48:02,890
would kind of sandboxed so you had to

00:48:01,329 --> 00:48:04,720
send down a font with it and so that

00:48:02,890 --> 00:48:06,369
worked but that was just on phones on

00:48:04,720 --> 00:48:08,260
feature phones and stuff this was before

00:48:06,369 --> 00:48:11,380
you know the the good phones before

00:48:08,260 --> 00:48:13,299
smart phones and on the desktop things

00:48:11,380 --> 00:48:15,490
languished until we had an operation

00:48:13,299 --> 00:48:17,470
people said we have to have a single

00:48:15,490 --> 00:48:19,839
font format that everyone supports and

00:48:17,470 --> 00:48:22,980
we people got behind that the foundries

00:48:19,839 --> 00:48:25,869
got behind her it was incredible about

00:48:22,980 --> 00:48:28,660
2006 or so I still have a really ratty

00:48:25,869 --> 00:48:30,549
t-shirt from a 2006 fun thing which I

00:48:28,660 --> 00:48:33,760
took because people getting up on stage

00:48:30,549 --> 00:48:36,819
and saying we are the last generation of

00:48:33,760 --> 00:48:38,680
typographers the web will kill us all we

00:48:36,819 --> 00:48:41,859
were will be selling peanuts on the

00:48:38,680 --> 00:48:44,559
streets etc two years later these same

00:48:41,859 --> 00:48:46,210
people were saying our entire font

00:48:44,559 --> 00:48:48,130
library is now available both the web

00:48:46,210 --> 00:48:50,140
and for print you can buy it on the web

00:48:48,130 --> 00:48:52,059
you can buy on print you'll require two

00:48:50,140 --> 00:48:55,890
different licenses we get to sell the

00:48:52,059 --> 00:48:55,890
same font to people twice this is great

00:48:56,010 --> 00:48:59,470
that's what it took I mean there was a

00:48:57,940 --> 00:49:02,369
lot of suspicion between the browser

00:48:59,470 --> 00:49:04,569
people and the font developers and

00:49:02,369 --> 00:49:06,520
getting them talking to each other was

00:49:04,569 --> 00:49:08,710
which is the sort of thing that w3c does

00:49:06,520 --> 00:49:10,660
getting competing industries to talk to

00:49:08,710 --> 00:49:13,240
each other and agree on a standard that

00:49:10,660 --> 00:49:15,789
was what it took actually all right

00:49:13,240 --> 00:49:17,559
thank you Chris I'm sure you could fill

00:49:15,789 --> 00:49:21,809
a whole other conference with all of

00:49:17,559 --> 00:49:21,809
those thank you so much

00:49:33,700 --> 00:49:35,760

YouTube URL: https://www.youtube.com/watch?v=Mho5DIT6MWM


