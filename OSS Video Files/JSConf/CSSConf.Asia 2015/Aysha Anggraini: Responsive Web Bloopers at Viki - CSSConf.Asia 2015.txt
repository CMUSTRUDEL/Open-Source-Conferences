Title: Aysha Anggraini: Responsive Web Bloopers at Viki - CSSConf.Asia 2015
Publication date: 2015-12-22
Playlist: CSSConf.Asia 2015
Description: 
	How hard can responsive web be? It sounds simple: design for a number of screen sizes and just throw in several media queries and your website is now "responsive"! Unfortunately, this is not the case and responsive web hasn't made our job easier. Adopting responsive web design will force you to change your design, development, and testing workflow. Problems may also arise in different stages of the workflow. In this talk, we will talk about responsive web blunders at Viki, how we overcome it, and some tips on how you can avoid it.

Aysha is a front-end engineer and wannabe designer at Viki, where she works closely with the UX team in order to build functional and beautiful UIs on viki.com and Viki's internal tools. When she is not super busy (which is rare these days), she either writes about geeky stuff on her blog renaysha.me or build experimental and pretty things on CodePen (codepen.io/rrenula). She loves design, gaming, dancing, and Yoga.


CSSConf.Asia - Red Dot Design Museum, Singapore - 18 November 2015.

Source: http://2015.cssconf.asia
Slides: https://speakerdeck.com/renaysha/responsive-web-bloopers-cssconf-asia-2015-by-aysha-anggraini

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:12,440 --> 00:00:19,160
and so today my talk is going to be

00:00:15,470 --> 00:00:21,680
about responsive web and a few months

00:00:19,160 --> 00:00:24,890
ago my company decided to undergo a

00:00:21,680 --> 00:00:27,460
visual brand redesign where they get to

00:00:24,890 --> 00:00:29,810
unify the design language of the site

00:00:27,460 --> 00:00:32,750
but at the same time they wanted to make

00:00:29,810 --> 00:00:35,180
the site responsive so during the

00:00:32,750 --> 00:00:37,340
responsive web project I noticed that we

00:00:35,180 --> 00:00:40,910
did a lot of mistakes that we could have

00:00:37,340 --> 00:00:43,250
avoided if we had known of the common

00:00:40,910 --> 00:00:45,860
problems in responsive web development

00:00:43,250 --> 00:00:47,620
earlier so this is what my talk is going

00:00:45,860 --> 00:00:50,240
to be about today it's going to be about

00:00:47,620 --> 00:00:53,420
the responsive web mistakes that we did

00:00:50,240 --> 00:00:56,870
how we solve it and what you can do to

00:00:53,420 --> 00:00:57,560
avoid it so a little bit about me I'm a

00:00:56,870 --> 00:01:00,770
Shawn Raney

00:00:57,560 --> 00:01:03,759
I go by Ren Aisha on the Internet

00:01:00,770 --> 00:01:06,770
I work as a front-end engineer at Vicky

00:01:03,759 --> 00:01:09,320
Vicky is a global TV site powered by

00:01:06,770 --> 00:01:13,420
France where fans gets from communities

00:01:09,320 --> 00:01:13,420
to supply those two shows on the site

00:01:13,960 --> 00:01:18,350
responsive web development workflow is

00:01:16,310 --> 00:01:19,840
very different from a non responsive one

00:01:18,350 --> 00:01:23,689
and I learned this the hard way

00:01:19,840 --> 00:01:26,899
so this because in responsive web divide

00:01:23,689 --> 00:01:28,999
an on responsive website you have a site

00:01:26,899 --> 00:01:31,399
that is supposed to work on several

00:01:28,999 --> 00:01:35,499
browsers and it should only work on

00:01:31,399 --> 00:01:38,149
desktop but on responsive site you have

00:01:35,499 --> 00:01:40,069
several different screen sizes and

00:01:38,149 --> 00:01:42,829
different devices that you need to take

00:01:40,069 --> 00:01:45,170
into account off and during my time

00:01:42,829 --> 00:01:47,329
working on the project I noticed that

00:01:45,170 --> 00:01:49,909
there are three common problems that

00:01:47,329 --> 00:01:52,459
keep on recurring and this problem

00:01:49,909 --> 00:01:54,799
always centers on how designers and

00:01:52,459 --> 00:01:56,389
developers work together how to ensure

00:01:54,799 --> 00:01:59,539
that you're writing maintainable code

00:01:56,389 --> 00:02:02,479
and coming up with testing and debugging

00:01:59,539 --> 00:02:04,969
strategy more often than not I think

00:02:02,479 --> 00:02:07,850
responsive web development will force

00:02:04,969 --> 00:02:10,009
you to change your design development

00:02:07,850 --> 00:02:12,709
and testing workflow and I find that

00:02:10,009 --> 00:02:14,810
changing this workflow is especially

00:02:12,709 --> 00:02:17,270
challenging especially when you're

00:02:14,810 --> 00:02:22,100
working on revamping a non responsive

00:02:17,270 --> 00:02:24,230
site to a responsive one because chances

00:02:22,100 --> 00:02:25,560
are you and your team members are

00:02:24,230 --> 00:02:28,620
already used to

00:02:25,560 --> 00:02:30,360
working on the non responsive web

00:02:28,620 --> 00:02:32,780
development workflow which brings me to

00:02:30,360 --> 00:02:35,910
my very first blooper of the day

00:02:32,780 --> 00:02:38,760
initially during our responsive web

00:02:35,910 --> 00:02:41,100
project we had a lack of collaboration

00:02:38,760 --> 00:02:43,890
between designers and developers

00:02:41,100 --> 00:02:47,790
there's a lot of back-and-forth style of

00:02:43,890 --> 00:02:49,650
communication between us and initially

00:02:47,790 --> 00:02:52,560
this communication works fine for us

00:02:49,650 --> 00:02:54,810
during our pre responsive era but during

00:02:52,560 --> 00:02:57,420
the project itself it becomes a major

00:02:54,810 --> 00:02:57,959
problem and as you know old habits die

00:02:57,420 --> 00:03:00,390
hard

00:02:57,959 --> 00:03:02,130
without actually noticing it we adopt

00:03:00,390 --> 00:03:06,390
the same communication style in a

00:03:02,130 --> 00:03:10,590
responsive web project and it turns out

00:03:06,390 --> 00:03:13,110
to be a problem for us so what do I

00:03:10,590 --> 00:03:15,720
meant by a back and forth style

00:03:13,110 --> 00:03:18,060
communication so you have a designer and

00:03:15,720 --> 00:03:21,120
designer will pass a high fidelity

00:03:18,060 --> 00:03:22,980
design markup to developer and during

00:03:21,120 --> 00:03:25,769
the development stage this is when the

00:03:22,980 --> 00:03:28,590
developers start to find problems with

00:03:25,769 --> 00:03:31,459
the design and when problems are found

00:03:28,590 --> 00:03:33,660
design gets passed back to the designer

00:03:31,459 --> 00:03:36,510
this is when the designers start to get

00:03:33,660 --> 00:03:38,370
stressed out and start thinking about

00:03:36,510 --> 00:03:41,190
all of the possible solutions that they

00:03:38,370 --> 00:03:44,030
can use in order to solve the problem

00:03:41,190 --> 00:03:46,799
and once the solution is found the

00:03:44,030 --> 00:03:50,040
design mock-up gets updated and get

00:03:46,799 --> 00:03:52,110
passed back to developer but it's not

00:03:50,040 --> 00:03:56,400
the end of the story because problems

00:03:52,110 --> 00:03:58,950
will keep on being found and the cycle

00:03:56,400 --> 00:04:02,190
will just keep on repeating itself so I

00:03:58,950 --> 00:04:04,680
have three reasons why this type of

00:04:02,190 --> 00:04:07,440
communication actually failed during

00:04:04,680 --> 00:04:09,780
responsive web development and the first

00:04:07,440 --> 00:04:12,930
thing is limitation see designers are

00:04:09,780 --> 00:04:14,910
creative beings I wish I can be half as

00:04:12,930 --> 00:04:17,250
creative as them but most of the time I

00:04:14,910 --> 00:04:20,970
only like to pretend to be a designer on

00:04:17,250 --> 00:04:23,280
a daily basis and so whenever I look at

00:04:20,970 --> 00:04:24,750
my designers working it impresses me

00:04:23,280 --> 00:04:26,880
because there's no limitation to their

00:04:24,750 --> 00:04:29,100
creativity but there's always going to

00:04:26,880 --> 00:04:32,729
be limitation when you start developing

00:04:29,100 --> 00:04:34,879
their ideas for example a designer may

00:04:32,729 --> 00:04:37,240
come to you with fancy anime

00:04:34,879 --> 00:04:39,979
and there's always going to be

00:04:37,240 --> 00:04:42,529
limitations on how this animation would

00:04:39,979 --> 00:04:45,860
render on smaller screen dividers - and

00:04:42,529 --> 00:04:48,229
and also in older browsers designers

00:04:45,860 --> 00:04:50,270
will come to you with big images to be

00:04:48,229 --> 00:04:52,490
implemented on the site but there's

00:04:50,270 --> 00:04:55,009
always going to be limitations on how

00:04:52,490 --> 00:04:57,020
this images would affect the performance

00:04:55,009 --> 00:04:59,779
of your site and also the art direction

00:04:57,020 --> 00:05:02,889
on your smaller screen devices of your

00:04:59,779 --> 00:05:05,719
site and designers may also come with

00:05:02,889 --> 00:05:08,539
beautiful and intricate layouts but

00:05:05,719 --> 00:05:11,209
there's always going to be limitation in

00:05:08,539 --> 00:05:13,909
terms of the difference in expectation

00:05:11,209 --> 00:05:15,979
on how this layouts supposed to render

00:05:13,909 --> 00:05:19,189
on smaller screen to larger screen

00:05:15,979 --> 00:05:20,959
devices for example my designer come up

00:05:19,189 --> 00:05:23,179
to me one day and show me this mock-up

00:05:20,959 --> 00:05:25,219
this is the blueprint of the mock-up and

00:05:23,179 --> 00:05:28,039
how it should render on large screen

00:05:25,219 --> 00:05:29,990
device as you can see the episodes clips

00:05:28,039 --> 00:05:32,869
and trailers should appear as a sidebar

00:05:29,990 --> 00:05:35,800
so at a glance I understand that on

00:05:32,869 --> 00:05:38,539
smaller screen device the sidebar should

00:05:35,800 --> 00:05:40,969
appear right under the main content area

00:05:38,539 --> 00:05:44,139
and in this case the episodes clips and

00:05:40,969 --> 00:05:47,589
trailers should appear under collections

00:05:44,139 --> 00:05:52,519
but my designer has a totally different

00:05:47,589 --> 00:05:55,209
expectation so he expects the episodes

00:05:52,519 --> 00:05:57,469
to appear right below the About section

00:05:55,209 --> 00:05:59,779
while the clips and trailers should

00:05:57,469 --> 00:06:01,219
appear right below collections so this

00:05:59,779 --> 00:06:04,249
is an example of the difference of

00:06:01,219 --> 00:06:05,749
expectations that you may encounter when

00:06:04,249 --> 00:06:07,189
you're working on such a project and

00:06:05,749 --> 00:06:10,339
when you're working closely with the

00:06:07,189 --> 00:06:12,289
designer this is the kind of

00:06:10,339 --> 00:06:14,479
expectations that you should communicate

00:06:12,289 --> 00:06:17,479
verbally to each other and that you

00:06:14,479 --> 00:06:20,240
should not rely on markups alone to pass

00:06:17,479 --> 00:06:22,009
the message effectively which brings me

00:06:20,240 --> 00:06:24,769
to my second reason on why such a

00:06:22,009 --> 00:06:27,139
communication style fail the markups

00:06:24,769 --> 00:06:28,789
itself mock-ups don't really tell you

00:06:27,139 --> 00:06:30,979
much about what's the performance of

00:06:28,789 --> 00:06:33,379
your site's going to be like it doesn't

00:06:30,979 --> 00:06:35,569
tell you much about the development

00:06:33,379 --> 00:06:38,059
complexity that you may run into when

00:06:35,569 --> 00:06:40,279
you start developing the site and most

00:06:38,059 --> 00:06:42,409
importantly it doesn't really tell you

00:06:40,279 --> 00:06:45,620
about the interaction types it's going

00:06:42,409 --> 00:06:48,080
to be on your site so there's this

00:06:45,620 --> 00:06:51,699
amazing quote by Tom Maslin Tom

00:06:48,080 --> 00:06:55,550
is actually a developer working on

00:06:51,699 --> 00:06:57,819
responsive web development at BBC I got

00:06:55,550 --> 00:07:00,710
this quote from a book called real life

00:06:57,819 --> 00:07:03,110
responsive web design by Smashing

00:07:00,710 --> 00:07:04,849
Magazine I was out earlier this year I

00:07:03,110 --> 00:07:06,680
suggest everyone who's working on

00:07:04,849 --> 00:07:09,470
responsive website to read the book I

00:07:06,680 --> 00:07:12,500
wish I stumbled upon it earlier

00:07:09,470 --> 00:07:15,050
so basically Tom's quote summarizes that

00:07:12,500 --> 00:07:17,509
you can't really assume that small

00:07:15,050 --> 00:07:21,020
screen devices interaction is going to

00:07:17,509 --> 00:07:23,300
be done by touch while a large screen

00:07:21,020 --> 00:07:26,000
one will be done by mouse and you would

00:07:23,300 --> 00:07:29,090
understand where Tom is coming from if

00:07:26,000 --> 00:07:31,509
you actually take an iPad visit a site

00:07:29,090 --> 00:07:34,639
on iPad and switch it to landscape mode

00:07:31,509 --> 00:07:36,440
if most of it I will take the desktop

00:07:34,639 --> 00:07:39,530
set of design and depending on your

00:07:36,440 --> 00:07:42,319
design where your interaction type works

00:07:39,530 --> 00:07:45,830
seamlessly on desktop it will start to

00:07:42,319 --> 00:07:48,800
fail on the iPad landscape mode so this

00:07:45,830 --> 00:07:52,009
is the kind of design problems that you

00:07:48,800 --> 00:07:54,289
may encounter this is the kind of

00:07:52,009 --> 00:07:58,009
limitations that you may encounter and

00:07:54,289 --> 00:08:00,409
the third reason is shortcomings design

00:07:58,009 --> 00:08:02,630
shortcomings will be discovered really

00:08:00,409 --> 00:08:04,250
late and in our case it's always

00:08:02,630 --> 00:08:07,580
discovered during the development stage

00:08:04,250 --> 00:08:09,639
and this is when you will start thinking

00:08:07,580 --> 00:08:12,650
about employing different kinds of hacks

00:08:09,639 --> 00:08:15,080
shortcuts and libraries and I don't

00:08:12,650 --> 00:08:17,240
think she's just gonna be happy for your

00:08:15,080 --> 00:08:20,599
code climate if you make it a habit and

00:08:17,240 --> 00:08:23,779
also if there's any last-minute picture

00:08:20,599 --> 00:08:25,639
that you forgot to include it will

00:08:23,779 --> 00:08:29,000
actually you won't be able to squeeze it

00:08:25,639 --> 00:08:32,719
and for example @viki we have very

00:08:29,000 --> 00:08:35,209
passionate users we have users working

00:08:32,719 --> 00:08:37,789
as volunteers to actually provide

00:08:35,209 --> 00:08:40,579
subtitles on the site on a daily basis

00:08:37,789 --> 00:08:44,209
and we actually value the opinions of

00:08:40,579 --> 00:08:45,980
these users because we want to make your

00:08:44,209 --> 00:08:47,600
job easier for them but at the same time

00:08:45,980 --> 00:08:50,959
we want the site to be fun for them to

00:08:47,600 --> 00:08:53,180
use so when we roll out the responsive

00:08:50,959 --> 00:08:55,430
web they were complaining about a

00:08:53,180 --> 00:08:59,000
feature that we missed out which is the

00:08:55,430 --> 00:09:00,829
cinematic mode feature so just to walk

00:08:59,000 --> 00:09:01,430
you through our previous workflow we

00:09:00,829 --> 00:09:03,890
have

00:09:01,430 --> 00:09:07,580
a high fidelity design markup that we

00:09:03,890 --> 00:09:09,710
test and validate once we go to the

00:09:07,580 --> 00:09:11,300
development stage this is where we lost

00:09:09,710 --> 00:09:12,830
a lot of time due to the back-and-forth

00:09:11,300 --> 00:09:15,140
style of communicating with each other

00:09:12,830 --> 00:09:17,990
once we start to roll it up for better

00:09:15,140 --> 00:09:19,760
testing and ask users but their opinions

00:09:17,990 --> 00:09:21,529
on the side this is when they start

00:09:19,760 --> 00:09:25,070
suggesting feature requests that we have

00:09:21,529 --> 00:09:27,320
no time for so after applying some

00:09:25,070 --> 00:09:28,010
finishing touch we decided to roll the

00:09:27,320 --> 00:09:30,050
side out

00:09:28,010 --> 00:09:33,050
but this there was a lot of backlash

00:09:30,050 --> 00:09:34,850
from the users because we actually did

00:09:33,050 --> 00:09:37,760
not include the cinematic mode feature

00:09:34,850 --> 00:09:40,459
that they liked so much so initially pre

00:09:37,760 --> 00:09:44,420
responsive era we had the cinematic mode

00:09:40,459 --> 00:09:47,000
as a default but when we actually wrote

00:09:44,420 --> 00:09:48,920
the responsive site we no longer have

00:09:47,000 --> 00:09:51,170
the cinematic mode this is when we have

00:09:48,920 --> 00:09:53,300
a lot of criticism from our users like

00:09:51,170 --> 00:09:56,540
the site started to look very much like

00:09:53,300 --> 00:09:58,399
a hospital it looks too white too bright

00:09:56,540 --> 00:10:00,920
it's really hard for me to actually

00:09:58,399 --> 00:10:05,750
watch my shows all of these kinds of

00:10:00,920 --> 00:10:08,720
first world problems but so this but

00:10:05,750 --> 00:10:10,520
when but we understand after

00:10:08,720 --> 00:10:12,500
interviewing the users we actually

00:10:10,520 --> 00:10:15,170
understand where they are coming from

00:10:12,500 --> 00:10:17,779
because they don't actually view this

00:10:15,170 --> 00:10:20,810
video on full view mode and the reason

00:10:17,779 --> 00:10:23,630
is because they like to multitask and

00:10:20,810 --> 00:10:26,990
viewing videos on full view mode there's

00:10:23,630 --> 00:10:29,390
not allowed them to do that I know that

00:10:26,990 --> 00:10:31,940
this problem this communication style is

00:10:29,390 --> 00:10:35,330
just going to be more of a problem for

00:10:31,940 --> 00:10:38,209
us in the long run so I suggested a

00:10:35,330 --> 00:10:43,010
different way of working to my designers

00:10:38,209 --> 00:10:46,130
one day and after a bit of banter they

00:10:43,010 --> 00:10:48,770
finally agree with it and it's more of a

00:10:46,130 --> 00:10:51,200
collaborative style of working so what

00:10:48,770 --> 00:10:54,220
does a collaborative workflow looks like

00:10:51,200 --> 00:10:57,680
right now at viki so we have a designer

00:10:54,220 --> 00:11:01,250
who passed in a low fidelity mock-up or

00:10:57,680 --> 00:11:02,570
sketches to the developer and this is

00:11:01,250 --> 00:11:07,010
where the developer would start

00:11:02,570 --> 00:11:08,990
prototyping the mock-up this is where

00:11:07,010 --> 00:11:10,760
the developer would start assessing the

00:11:08,990 --> 00:11:16,090
problems the potential problems that

00:11:10,760 --> 00:11:18,980
could happen with design and from this

00:11:16,090 --> 00:11:21,140
from these problems discovered Duvall

00:11:18,980 --> 00:11:23,630
will start giving feedback to the

00:11:21,140 --> 00:11:25,880
designer on what works and what doesn't

00:11:23,630 --> 00:11:27,830
and based on this information the

00:11:25,880 --> 00:11:30,350
designer would then start designing

00:11:27,830 --> 00:11:33,530
based on constraints they would start

00:11:30,350 --> 00:11:35,360
developing a high fidelity mock-up based

00:11:33,530 --> 00:11:37,010
on the constraints set by the developer

00:11:35,360 --> 00:11:38,750
and we find that this is a very

00:11:37,010 --> 00:11:41,810
effective way of working together

00:11:38,750 --> 00:11:45,140
because the developer is highly involved

00:11:41,810 --> 00:11:47,810
in the design and ultimately your design

00:11:45,140 --> 00:11:50,480
is decided in the browser and not true

00:11:47,810 --> 00:11:52,940
Photoshop and the only way to access

00:11:50,480 --> 00:11:55,310
your design more effectively is true

00:11:52,940 --> 00:11:57,140
browsers because only browsers can tell

00:11:55,310 --> 00:11:59,810
you what kind of interaction types works

00:11:57,140 --> 00:12:02,330
for you and if you're only solely

00:11:59,810 --> 00:12:04,360
designed in Photoshop most of the time

00:12:02,330 --> 00:12:08,060
you're making a lot of assumption and

00:12:04,360 --> 00:12:11,150
then that assumption may or may not be

00:12:08,060 --> 00:12:13,910
true and most time you will make a lot

00:12:11,150 --> 00:12:16,280
of mistakes through that assumption when

00:12:13,910 --> 00:12:18,380
I first suggested this style of working

00:12:16,280 --> 00:12:20,080
there's a lot of doubts coming from my

00:12:18,380 --> 00:12:23,540
team members because they feel that

00:12:20,080 --> 00:12:27,470
prototyping will take a lot of time so

00:12:23,540 --> 00:12:29,570
if you have the same concern I would say

00:12:27,470 --> 00:12:32,450
that there's nothing to worry about

00:12:29,570 --> 00:12:33,110
because it's not necessary to put it up

00:12:32,450 --> 00:12:35,810
everything

00:12:33,110 --> 00:12:38,300
for me what I like to put it up is I

00:12:35,810 --> 00:12:40,250
just like to get the layout work just

00:12:38,300 --> 00:12:42,410
understanding how the layout would

00:12:40,250 --> 00:12:46,370
behave on smaller screen device through

00:12:42,410 --> 00:12:48,860
a large screen one and also I also like

00:12:46,370 --> 00:12:50,630
to test the interaction types seeing how

00:12:48,860 --> 00:12:54,080
it works on smaller screen devices and

00:12:50,630 --> 00:12:55,820
well as well and the role of prototyping

00:12:54,080 --> 00:12:58,400
is I read somewhere that the rule of

00:12:55,820 --> 00:13:00,470
prototyping should be less than an hour

00:12:58,400 --> 00:13:03,740
to build and you shouldn't care much

00:13:00,470 --> 00:13:06,980
about aesthetic the rule is to just

00:13:03,740 --> 00:13:09,230
build fast and bill ugly and also if you

00:13:06,980 --> 00:13:09,860
have a pattern library which we have

00:13:09,230 --> 00:13:14,050
@viki

00:13:09,860 --> 00:13:17,120
it'll make prototyping that much faster

00:13:14,050 --> 00:13:20,480
so just to walk you through our new

00:13:17,120 --> 00:13:22,490
workflow we have a design mock but prior

00:13:20,480 --> 00:13:25,280
to that we have been prototyping and we

00:13:22,490 --> 00:13:27,360
have access the feasibility of the

00:13:25,280 --> 00:13:30,149
design and then we start

00:13:27,360 --> 00:13:31,920
thing it once we get to development

00:13:30,149 --> 00:13:35,040
stage we noticed that there's a last

00:13:31,920 --> 00:13:38,760
time last year compared to before

00:13:35,040 --> 00:13:40,800
because we finally know if there's a

00:13:38,760 --> 00:13:43,290
problem we know about it beforehand

00:13:40,800 --> 00:13:44,670
we're not surprised by it anymore and we

00:13:43,290 --> 00:13:45,240
definitely know how to solve it this

00:13:44,670 --> 00:13:47,010
time

00:13:45,240 --> 00:13:49,350
and once we roll it out for better

00:13:47,010 --> 00:13:51,209
testing if there's any feature requests

00:13:49,350 --> 00:13:54,600
that we can still squeeze in we will do

00:13:51,209 --> 00:13:57,089
it before rolling it out so I talked a

00:13:54,600 --> 00:14:01,019
lot about losing time and as developers

00:13:57,089 --> 00:14:04,200
I think that one of our concern when

00:14:01,019 --> 00:14:06,660
we're working on big project is deadline

00:14:04,200 --> 00:14:08,250
and I think deadlines could be worrying

00:14:06,660 --> 00:14:11,010
about deadlines could be a bad thing

00:14:08,250 --> 00:14:13,260
because you'll get really excited just

00:14:11,010 --> 00:14:14,640
start developing right away and that

00:14:13,260 --> 00:14:16,339
could be a bad thing because that means

00:14:14,640 --> 00:14:18,690
that there's a lack of planning on

00:14:16,339 --> 00:14:21,089
development and when there's a lack of

00:14:18,690 --> 00:14:23,220
planning on development it would

00:14:21,089 --> 00:14:24,990
actually be dangerous because you will

00:14:23,220 --> 00:14:27,480
notice that your technical depth will

00:14:24,990 --> 00:14:29,730
start to increase and when your

00:14:27,480 --> 00:14:31,470
technical Doug increases you need to

00:14:29,730 --> 00:14:33,839
actually allocate time in the future to

00:14:31,470 --> 00:14:36,360
start refactoring your code and when

00:14:33,839 --> 00:14:38,130
you're working on a product centric

00:14:36,360 --> 00:14:43,350
company like Vickie we have product

00:14:38,130 --> 00:14:46,470
development on a quarterly basis when we

00:14:43,350 --> 00:14:48,600
need to allocate time for refactoring

00:14:46,470 --> 00:14:50,070
and also allocating time for product

00:14:48,600 --> 00:14:53,160
development it can get pretty

00:14:50,070 --> 00:14:55,199
overwhelming so I was reviewing my CSS

00:14:53,160 --> 00:14:57,690
code one day there were two other guys

00:14:55,199 --> 00:14:58,620
writing the CSS code with me and I

00:14:57,690 --> 00:15:01,410
noticed that there's a lot of

00:14:58,620 --> 00:15:03,779
inconsistency there's an inconsistent

00:15:01,410 --> 00:15:06,870
ways of writing media queries one file

00:15:03,779 --> 00:15:10,430
the media queries is written in nested

00:15:06,870 --> 00:15:10,430
manner while the other one is

00:15:10,519 --> 00:15:17,399
unnecessary time in writing CSS on one

00:15:14,459 --> 00:15:19,829
file it is written in a mobile-first

00:15:17,399 --> 00:15:22,079
manner and another file it's written in

00:15:19,829 --> 00:15:24,690
our desktop first manner which is very

00:15:22,079 --> 00:15:27,810
inconsistent and the first thing that I

00:15:24,690 --> 00:15:29,910
wish I had done is to actually come up

00:15:27,810 --> 00:15:31,860
with a coding style guide before

00:15:29,910 --> 00:15:34,199
starting development just thinking about

00:15:31,860 --> 00:15:36,630
naming conventions and how you're going

00:15:34,199 --> 00:15:39,180
to organize your files and also think

00:15:36,630 --> 00:15:40,000
about the many the nesting levels

00:15:39,180 --> 00:15:41,800
sometimes

00:15:40,000 --> 00:15:44,770
notice that some developers can get very

00:15:41,800 --> 00:15:47,710
carried away in nesting their SAS they

00:15:44,770 --> 00:15:49,990
could go to five to six levels and

00:15:47,710 --> 00:15:52,720
that's not going to be very performant

00:15:49,990 --> 00:15:54,400
for your code and also think about how

00:15:52,720 --> 00:15:57,460
you're going to write your media please

00:15:54,400 --> 00:15:59,020
set the kind of standards on how you

00:15:57,460 --> 00:16:02,740
should write it in order to maintain

00:15:59,020 --> 00:16:06,700
consistency because consistency is the

00:16:02,740 --> 00:16:08,290
key to maintainability I want to talk a

00:16:06,700 --> 00:16:09,790
little bit about naming conventions I

00:16:08,290 --> 00:16:13,030
think there's a lot of paradigm out

00:16:09,790 --> 00:16:15,910
there and it could be overwhelming to

00:16:13,030 --> 00:16:18,760
pick which one that you're going to use

00:16:15,910 --> 00:16:21,970
for example the top trees that I have

00:16:18,760 --> 00:16:25,330
learned about is Bam Oro CSS and Smacks

00:16:21,970 --> 00:16:28,660
but ultimately it doesn't really matter

00:16:25,330 --> 00:16:31,540
which naming conventions you're going to

00:16:28,660 --> 00:16:34,300
use but your team members do do care

00:16:31,540 --> 00:16:36,910
about it and my advice is to actually

00:16:34,300 --> 00:16:38,860
sit down with your team members decide

00:16:36,910 --> 00:16:41,200
on which naming conventions that you

00:16:38,860 --> 00:16:43,480
want to use and actually stick with it

00:16:41,200 --> 00:16:45,460
the sticking with it is important

00:16:43,480 --> 00:16:46,960
because don't make it up as you go along

00:16:45,460 --> 00:16:50,170
the way because it's just going to

00:16:46,960 --> 00:16:52,210
increase your technical depth I have

00:16:50,170 --> 00:16:53,740
some resources that I want to share with

00:16:52,210 --> 00:16:55,780
you because coming up with a coding

00:16:53,740 --> 00:16:57,550
style guide initially can get pretty

00:16:55,780 --> 00:16:58,120
overwhelming you may not know where to

00:16:57,550 --> 00:17:00,760
start

00:16:58,120 --> 00:17:02,740
the first one is CSS guidelines by Harry

00:17:00,760 --> 00:17:04,900
Roberts I think there's some really

00:17:02,740 --> 00:17:07,510
amazing recommendations here

00:17:04,900 --> 00:17:09,490
there's also if you're writing sass this

00:17:07,510 --> 00:17:12,850
was a style guide written by Chris

00:17:09,490 --> 00:17:15,220
coiour I think also again amazing

00:17:12,850 --> 00:17:17,949
recommendations but my personal favorite

00:17:15,220 --> 00:17:19,420
is sass guidelines by Hugo guru del I

00:17:17,949 --> 00:17:21,939
like this the most because he actually

00:17:19,420 --> 00:17:25,180
includes further readings that you can

00:17:21,939 --> 00:17:29,830
learn more about why he recommends

00:17:25,180 --> 00:17:31,030
certain things in a specific manner so

00:17:29,830 --> 00:17:33,880
another thing that you need to think

00:17:31,030 --> 00:17:37,000
about is si you have deadlines and it's

00:17:33,880 --> 00:17:38,800
very very tempting to just jump into

00:17:37,000 --> 00:17:41,050
development straight away and one of

00:17:38,800 --> 00:17:42,220
them is to actually quickly just use

00:17:41,050 --> 00:17:44,710
frameworks but the thing about

00:17:42,220 --> 00:17:47,350
frameworks is that sometimes it has more

00:17:44,710 --> 00:17:50,260
than what you actually need we just

00:17:47,350 --> 00:17:52,850
contributes more to CSS blowed it will

00:17:50,260 --> 00:17:55,190
just bloat the CSS file

00:17:52,850 --> 00:17:58,309
and also I found that certain frameworks

00:17:55,190 --> 00:18:01,250
could be very opinionated and it's very

00:17:58,309 --> 00:18:02,780
rigid to actually override their classes

00:18:01,250 --> 00:18:06,169
and therefore it's not that

00:18:02,780 --> 00:18:09,500
straightforward also I noticed that it

00:18:06,169 --> 00:18:11,960
is important to pick the right framework

00:18:09,500 --> 00:18:14,919
because an unsuitable framework can be

00:18:11,960 --> 00:18:17,390
more harmful than no frameworks at all

00:18:14,919 --> 00:18:18,950
this is because with unsuitable

00:18:17,390 --> 00:18:21,169
frameworks you're going to spend a lot

00:18:18,950 --> 00:18:23,120
of time just taking those code out and

00:18:21,169 --> 00:18:25,250
rewriting everything at the end of the

00:18:23,120 --> 00:18:27,770
day but this is not to say that I am

00:18:25,250 --> 00:18:30,200
against framework 100% I think that

00:18:27,770 --> 00:18:33,049
there are justified reasons for you to

00:18:30,200 --> 00:18:34,700
use CSS frameworks I just think that it

00:18:33,049 --> 00:18:36,860
is important to pick the right one

00:18:34,700 --> 00:18:39,049
there's different school of thoughts to

00:18:36,860 --> 00:18:41,210
this for example for some people

00:18:39,049 --> 00:18:43,370
bootstrap may not be a good framework

00:18:41,210 --> 00:18:47,480
but for some other people it's a good

00:18:43,370 --> 00:18:49,700
one so I think that ultimately you

00:18:47,480 --> 00:18:53,900
should go with a battle-tested framework

00:18:49,700 --> 00:18:55,970
that is well known like bootstrap or

00:18:53,900 --> 00:18:58,460
foundation and if you decide not to use

00:18:55,970 --> 00:19:02,480
frameworks at all you can always learn

00:18:58,460 --> 00:19:04,970
from it use it as a guideline so that's

00:19:02,480 --> 00:19:07,460
my suggestion for you and of course when

00:19:04,970 --> 00:19:10,309
you start working on responsive web

00:19:07,460 --> 00:19:13,070
development you will run into different

00:19:10,309 --> 00:19:17,270
kinds of issues like browsers and device

00:19:13,070 --> 00:19:19,970
issues so the best way to deal with this

00:19:17,270 --> 00:19:22,370
early is to decide on a target browsers

00:19:19,970 --> 00:19:25,250
and device and there are several reasons

00:19:22,370 --> 00:19:27,260
to this first one is because you want to

00:19:25,250 --> 00:19:29,200
know what the problem is with the

00:19:27,260 --> 00:19:32,270
devices so for example if you decided to

00:19:29,200 --> 00:19:35,240
support Android 2.3 I heard a lot of

00:19:32,270 --> 00:19:37,220
horror stories about it so you can know

00:19:35,240 --> 00:19:39,440
about the problems beforehand and you

00:19:37,220 --> 00:19:41,360
can let your designers know about it so

00:19:39,440 --> 00:19:45,230
that they can also design within that

00:19:41,360 --> 00:19:49,610
constraint and also it is useful so that

00:19:45,230 --> 00:19:52,490
you can research the issues beforehand

00:19:49,610 --> 00:19:55,730
there's an amazing github repo called

00:19:52,490 --> 00:19:57,350
device box created by Scott jail I think

00:19:55,730 --> 00:20:00,740
it's amazing because he actually

00:19:57,350 --> 00:20:02,750
described some of those issues in a very

00:20:00,740 --> 00:20:05,070
specific manner and also he actually

00:20:02,750 --> 00:20:08,970
lists how you can reproduce this

00:20:05,070 --> 00:20:10,889
those issues and also there's also

00:20:08,970 --> 00:20:15,960
suggestions on workaround on how to

00:20:10,889 --> 00:20:18,269
bypass those issues now of course when

00:20:15,960 --> 00:20:20,789
it comes to device box I think the best

00:20:18,269 --> 00:20:25,380
way to actually deal with it is to start

00:20:20,789 --> 00:20:27,690
testing on device early which brings me

00:20:25,380 --> 00:20:30,809
to my third and very last blooper of the

00:20:27,690 --> 00:20:32,940
day we start testing late on device and

00:20:30,809 --> 00:20:36,059
realize we relied too much on emulators

00:20:32,940 --> 00:20:38,789
and the reason for that is we're too

00:20:36,059 --> 00:20:40,919
used to our non responsive web

00:20:38,789 --> 00:20:44,940
development workflow we never actually

00:20:40,919 --> 00:20:48,059
need to test on device before so we

00:20:44,940 --> 00:20:50,009
didn't have the habit of testing with

00:20:48,059 --> 00:20:52,620
devices before but I think it's really

00:20:50,009 --> 00:20:54,360
important to just start device testing

00:20:52,620 --> 00:20:56,940
early because you want to test those

00:20:54,360 --> 00:20:59,669
interaction is the scrolling working as

00:20:56,940 --> 00:21:00,960
expected on mobile devices is touch

00:20:59,669 --> 00:21:02,850
working as expected

00:21:00,960 --> 00:21:04,710
does a drop down disappear when you

00:21:02,850 --> 00:21:08,009
click outside of the drop down things

00:21:04,710 --> 00:21:10,230
like that and also certain bugs and

00:21:08,009 --> 00:21:13,559
quirks only happens on mobile and

00:21:10,230 --> 00:21:15,990
sometimes specific device I have this

00:21:13,559 --> 00:21:18,389
really weird bug that happened only on

00:21:15,990 --> 00:21:20,820
Sony Xperia I can't really remember the

00:21:18,389 --> 00:21:24,330
version but when a user actually visited

00:21:20,820 --> 00:21:28,139
a video page and started viewing the

00:21:24,330 --> 00:21:30,419
video in full view mode and once they

00:21:28,139 --> 00:21:32,940
actually copped out and go back to the

00:21:30,419 --> 00:21:35,909
normal mode the site actually zoom in

00:21:32,940 --> 00:21:39,539
into the nav bar but we actually noticed

00:21:35,909 --> 00:21:41,970
this kind of late because we didn't get

00:21:39,539 --> 00:21:47,039
into the habit of testing on devices

00:21:41,970 --> 00:21:50,009
early so I think it's important to think

00:21:47,039 --> 00:21:53,639
about your workflow I think it is

00:21:50,009 --> 00:21:56,669
important to include testing on devices

00:21:53,639 --> 00:21:59,309
as frequently as possible so this how my

00:21:56,669 --> 00:22:01,379
previous workflow look like I will build

00:21:59,309 --> 00:22:03,809
all of the UI components in a particular

00:22:01,379 --> 00:22:06,840
page then I'll deploy the staging and

00:22:03,809 --> 00:22:08,580
then I start to test it but this is at

00:22:06,840 --> 00:22:10,889
the end of the development this is where

00:22:08,580 --> 00:22:13,169
I find a lot of tree build bugs on

00:22:10,889 --> 00:22:16,289
mobile which I could have fixed earlier

00:22:13,169 --> 00:22:19,200
if I knew about it earlier so I kind of

00:22:16,289 --> 00:22:21,480
changed the workflow to be better in a

00:22:19,200 --> 00:22:24,450
that I will just build a UI component

00:22:21,480 --> 00:22:26,220
and I will connect my local deaf

00:22:24,450 --> 00:22:28,610
environments in my mobile phones there's

00:22:26,220 --> 00:22:31,320
a lot of way to do that via IP address

00:22:28,610 --> 00:22:34,200
and this is where I find a lot of

00:22:31,320 --> 00:22:37,320
trivial box where I can then fix it

00:22:34,200 --> 00:22:40,200
immediately right so repeating it off

00:22:37,320 --> 00:22:43,920
after developing all of the others UI

00:22:40,200 --> 00:22:46,380
elements once I actually deployed the

00:22:43,920 --> 00:22:51,060
staging and start testing it I noticed

00:22:46,380 --> 00:22:53,310
that there are no longer too much

00:22:51,060 --> 00:22:55,950
trivial box I can focus on the major

00:22:53,310 --> 00:22:58,260
ones and so I know that sometimes we

00:22:55,950 --> 00:23:01,110
have non-trivial back-end for some of

00:22:58,260 --> 00:23:03,930
you you guys may use you guys may work

00:23:01,110 --> 00:23:06,330
with third-party web services then

00:23:03,930 --> 00:23:08,130
connecting to mobile may not be as easy

00:23:06,330 --> 00:23:10,110
there's two tools that would like to

00:23:08,130 --> 00:23:12,720
introduce you guys one his local tunnel

00:23:10,110 --> 00:23:16,230
another one is proxy local it actually

00:23:12,720 --> 00:23:19,920
creates a poxy of your local environment

00:23:16,230 --> 00:23:23,340
and makes it available on the Internet

00:23:19,920 --> 00:23:26,970
my and you can actually assess your

00:23:23,340 --> 00:23:29,430
access your your site through local

00:23:26,970 --> 00:23:32,240
turned out on other devices my only

00:23:29,430 --> 00:23:37,770
complaint is that it can be really slow

00:23:32,240 --> 00:23:39,300
now testing on testing on devices every

00:23:37,770 --> 00:23:42,330
time can be very overwhelming especially

00:23:39,300 --> 00:23:44,700
if you have a lot of devices so

00:23:42,330 --> 00:23:46,740
sometimes whenever I look at how my

00:23:44,700 --> 00:23:48,750
product managers are my QA engineers

00:23:46,740 --> 00:23:51,240
test the site it could be very painful

00:23:48,750 --> 00:23:53,850
to watch because they will actually test

00:23:51,240 --> 00:23:56,100
one by one on iPhone and then they'll

00:23:53,850 --> 00:23:58,140
test another time repeat the same thing

00:23:56,100 --> 00:23:59,690
on Android and then test it again on

00:23:58,140 --> 00:24:02,220
desktop it's just very repetitive

00:23:59,690 --> 00:24:04,500
there's a a tool that I would like to

00:24:02,220 --> 00:24:06,750
introduce you guys is called girls lab

00:24:04,500 --> 00:24:10,830
ghost lab actually allows you to

00:24:06,750 --> 00:24:14,910
simultaneously test on multiple devices

00:24:10,830 --> 00:24:17,730
and you can actually just access your

00:24:14,910 --> 00:24:19,410
site on one device and whatever actions

00:24:17,730 --> 00:24:22,170
that you do on that particular device

00:24:19,410 --> 00:24:25,260
will get repeated on all of these other

00:24:22,170 --> 00:24:28,070
devices that you think through ghost lab

00:24:25,260 --> 00:24:32,350
and it just really makes testing

00:24:28,070 --> 00:24:36,130
manually much more enjoyable

00:24:32,350 --> 00:24:39,190
and the thing about responsive web that

00:24:36,130 --> 00:24:41,260
I think you need to do as well as in

00:24:39,190 --> 00:24:43,750
terms of testing it's important to start

00:24:41,260 --> 00:24:46,420
researching the kinds of tool that will

00:24:43,750 --> 00:24:48,010
make testing easier and this is when we

00:24:46,420 --> 00:24:50,770
can start thinking about visual

00:24:48,010 --> 00:24:53,890
regression tools visual regression tools

00:24:50,770 --> 00:24:56,230
can actually allow you to compare two

00:24:53,890 --> 00:24:57,880
different screenshots and actually find

00:24:56,230 --> 00:25:00,520
the difference between those two

00:24:57,880 --> 00:25:02,200
screenshots this allows you to kind of

00:25:00,520 --> 00:25:05,170
test your CSS a little bit better

00:25:02,200 --> 00:25:07,960
the thing about CSS is breaking it is

00:25:05,170 --> 00:25:11,350
very easy but testing it is very very

00:25:07,960 --> 00:25:13,990
hard and so I come across this visually

00:25:11,350 --> 00:25:15,760
regreted regression to a car race race

00:25:13,990 --> 00:25:20,020
is actually developed by the amazing

00:25:15,760 --> 00:25:23,170
folks at BBC what it does is that you

00:25:20,020 --> 00:25:24,820
can actually take two different screen

00:25:23,170 --> 00:25:27,340
shots for example screenshot of your

00:25:24,820 --> 00:25:28,930
local environment and compare it to the

00:25:27,340 --> 00:25:31,240
screenshot of your production

00:25:28,930 --> 00:25:33,580
environment and it will spit out a

00:25:31,240 --> 00:25:35,830
difference between those two screenshots

00:25:33,580 --> 00:25:37,630
of it you can pinpoint the error and

00:25:35,830 --> 00:25:40,000
what I like the most about width is that

00:25:37,630 --> 00:25:41,800
it actually creates a gallery that lists

00:25:40,000 --> 00:25:44,590
all of your screenshots and it

00:25:41,800 --> 00:25:48,220
categorizes it based on the screen size

00:25:44,590 --> 00:25:50,500
and this is an example of a section so

00:25:48,220 --> 00:25:51,970
as you can see we have one screenshot

00:25:50,500 --> 00:25:54,700
that I took from my local environment

00:25:51,970 --> 00:25:56,530
and the other one is from my production

00:25:54,700 --> 00:25:58,390
environment I will pinpoint the

00:25:56,530 --> 00:26:00,820
percentage of difference the third

00:25:58,390 --> 00:26:02,740
images of a point up the percentage of

00:26:00,820 --> 00:26:06,690
difference of these two screenshots and

00:26:02,740 --> 00:26:09,850
if the error exceeds a certain number of

00:26:06,690 --> 00:26:13,150
percentage in our case it's 20 percent

00:26:09,850 --> 00:26:14,650
it will spit out an error this is a cool

00:26:13,150 --> 00:26:18,100
thing as well because you can actually

00:26:14,650 --> 00:26:20,560
control the sensitivity of your test you

00:26:18,100 --> 00:26:23,260
can make it less than.this sensitive or

00:26:20,560 --> 00:26:26,500
more sensitive for example we set it up

00:26:23,260 --> 00:26:29,410
to 20 percent any any kind of difference

00:26:26,500 --> 00:26:33,640
that exceeds that will spit out an error

00:26:29,410 --> 00:26:35,440
and as you can see the third screenshot

00:26:33,640 --> 00:26:37,560
what it does that is superimposes

00:26:35,440 --> 00:26:39,580
two of these images together and

00:26:37,560 --> 00:26:41,260
highlights the difference in blue in

00:26:39,580 --> 00:26:44,340
this case it's just difference in ads so

00:26:41,260 --> 00:26:44,340
it's not a big deal

00:26:44,370 --> 00:26:49,380
but the thing about visual regression

00:26:47,130 --> 00:26:51,660
tool is that it's not perfect during my

00:26:49,380 --> 00:26:54,180
short time of using it I encountered

00:26:51,660 --> 00:26:57,860
several problems for example it doesn't

00:26:54,180 --> 00:27:00,030
really render lazy loaded items as

00:26:57,860 --> 00:27:02,970
effectively as I thought it's going to

00:27:00,030 --> 00:27:05,550
be and because of that it generates a

00:27:02,970 --> 00:27:09,210
lot of false positives where it part it

00:27:05,550 --> 00:27:12,720
has an error when it is not an error at

00:27:09,210 --> 00:27:15,000
all and another thing is it can be very

00:27:12,720 --> 00:27:19,320
slow depending on how many screenshots

00:27:15,000 --> 00:27:22,320
that you are taking so I have several

00:27:19,320 --> 00:27:24,480
suggestions on how to handle those the

00:27:22,320 --> 00:27:26,100
first thing is regarding lazy loaded

00:27:24,480 --> 00:27:29,340
items and false positive there is a

00:27:26,100 --> 00:27:32,330
setting actually this a setting about a

00:27:29,340 --> 00:27:37,020
timeout that you can increase so that

00:27:32,330 --> 00:27:39,360
the snapshot with the snapshot process

00:27:37,020 --> 00:27:41,610
is delayed this will wait for all of

00:27:39,360 --> 00:27:45,030
your lazy loaded items to be rendered

00:27:41,610 --> 00:27:47,610
before taking this snapshot and another

00:27:45,030 --> 00:27:50,240
thing is if you have lazy loaded images

00:27:47,610 --> 00:27:53,309
that will only appear if you scroll down

00:27:50,240 --> 00:27:55,050
another thing is there's a settings and

00:27:53,309 --> 00:27:57,390
options under a setting called browser

00:27:55,050 --> 00:27:59,490
height where you can increase it just to

00:27:57,390 --> 00:28:02,370
make sure that it scroll all the way and

00:27:59,490 --> 00:28:05,910
every images gets rendered as expected

00:28:02,370 --> 00:28:09,600
in terms of slow I'm still working on it

00:28:05,910 --> 00:28:11,520
but one of the things that I think we

00:28:09,600 --> 00:28:14,880
should do is to just a limit testing

00:28:11,520 --> 00:28:16,559
just test critical pages for example at

00:28:14,880 --> 00:28:19,770
Vicky's one of the most critical pages

00:28:16,559 --> 00:28:21,900
for us is our video page this is where

00:28:19,770 --> 00:28:25,950
we wanted this is a page that we want to

00:28:21,900 --> 00:28:28,290
test all the time but perhaps other

00:28:25,950 --> 00:28:31,020
non-critical pages like say your about

00:28:28,290 --> 00:28:33,809
page or a static landing page this is

00:28:31,020 --> 00:28:35,730
something that perhaps you may not care

00:28:33,809 --> 00:28:38,730
so much about perhaps it's not important

00:28:35,730 --> 00:28:42,390
for you to test so we're not completely

00:28:38,730 --> 00:28:44,700
done yet the responsive web project has

00:28:42,390 --> 00:28:46,620
only been going on for about more or

00:28:44,700 --> 00:28:50,010
less three months now and we still have

00:28:46,620 --> 00:28:50,760
a lot of work to do it's still a work in

00:28:50,010 --> 00:28:53,850
progress

00:28:50,760 --> 00:28:55,520
and I think that I'm pretty sure I will

00:28:53,850 --> 00:28:57,380
find more bloopers

00:28:55,520 --> 00:29:01,640
the way and I think maybe this talk

00:28:57,380 --> 00:29:04,040
should have a sequel and but that's what

00:29:01,640 --> 00:29:07,780
I have for you and I just want to say

00:29:04,040 --> 00:29:07,780
thank you for your attention today

00:29:09,340 --> 00:29:17,300
thank you how many devices do you pick

00:29:14,059 --> 00:29:19,940
for your test and like you know is there

00:29:17,300 --> 00:29:24,290
any good criteria of like which device

00:29:19,940 --> 00:29:28,280
we should pick we actually use data

00:29:24,290 --> 00:29:30,770
analytics to actually test to actually

00:29:28,280 --> 00:29:33,140
pick our devices we have a list of

00:29:30,770 --> 00:29:35,420
device that we are choosing from but I

00:29:33,140 --> 00:29:38,150
think the best strategy that we use is

00:29:35,420 --> 00:29:41,090
actually we have a diverse of device

00:29:38,150 --> 00:29:43,580
when it comes to our staff members and

00:29:41,090 --> 00:29:45,830
we actually tell them to test it on

00:29:43,580 --> 00:29:48,650
their devices as well that's how we

00:29:45,830 --> 00:29:49,610
actually found the Sony Xperia bug which

00:29:48,650 --> 00:29:52,059
is pretty random

00:29:49,610 --> 00:29:54,890
so there's actually kind of in-house

00:29:52,059 --> 00:29:58,040
testing but my suggestion to that is

00:29:54,890 --> 00:30:01,070
actually go through your data analytics

00:29:58,040 --> 00:30:05,380
to see what devices is popular amongst

00:30:01,070 --> 00:30:05,380

YouTube URL: https://www.youtube.com/watch?v=r2mhcIisKRA


