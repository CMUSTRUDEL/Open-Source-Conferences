Title: Zell Liew: Animating SVGs - CSSConf.Asia 2015
Publication date: 2015-12-17
Playlist: CSSConf.Asia 2015
Description: 
	SVGs can be used to achieve amazing effects that improve users' experience on your website. They can do sweet things like icon morphing that was introduced in material design, create bouncy buttons that let the user know they're clicked, and many other effects that you can image. In this talk, we're going to dive deep into SVGs to learn how to use them, and how to create these cool effects for your own website.

Zell is a freelance web developer based in Singapore. He loves working on the web so much that he spends all his free time diving deep into tools and frameworks to find out the best ways to work with them. He then shares everything he learned on his blog. He also authored Learning Susy and Automating Your Workflow with Gulp.

CSSConf.Asia - Red Dot Design Museum, Singapore - 18 November 2015.

Source: http://2015.cssconf.asia
Slides: https://github.com/zellwk/CSSConf.Asia-animating-svg

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:00,000 --> 00:00:02,030
I

00:00:12,270 --> 00:00:17,700
today I'm going to talk about animating

00:00:14,710 --> 00:00:20,830
SVG's and the main bulk of it is about

00:00:17,700 --> 00:00:23,740
SVG's and i'll show you how to animate

00:00:20,830 --> 00:00:25,570
with different methods possible before i

00:00:23,740 --> 00:00:30,210
begin care have a show of hands how many

00:00:25,570 --> 00:00:32,169
people use SVG is really cool nice

00:00:30,210 --> 00:00:36,850
alright how many people know how the

00:00:32,169 --> 00:00:42,870
enemy as you choose with CSS nice SI my

00:00:36,850 --> 00:00:51,280
sm IL not a lot ok great and javascript

00:00:42,870 --> 00:00:52,330
ok cool so good so I'm Zell and just I'm

00:00:51,280 --> 00:00:54,519
not going to talk a lot about myself

00:00:52,330 --> 00:00:56,470
because I have a lot to cover so just

00:00:54,519 --> 00:00:58,870
two quick things I wrote two books one

00:00:56,470 --> 00:01:00,760
is learning Suzy which teaches you how

00:00:58,870 --> 00:01:02,799
to use a Suzy framework and the other is

00:01:00,760 --> 00:01:06,010
automating your workflow and you can

00:01:02,799 --> 00:01:10,060
find me at my website zell dash week 8

00:01:06,010 --> 00:01:13,450
com or my 200 Zelda with you I have no

00:01:10,060 --> 00:01:14,890
idea why I put that your eyes my I don't

00:01:13,450 --> 00:01:18,310
know I'm thinking when I created a

00:01:14,890 --> 00:01:20,770
website but anyway so the slides are

00:01:18,310 --> 00:01:24,490
going to be up on this link if you want

00:01:20,770 --> 00:01:26,979
it so grab you later and so today we are

00:01:24,490 --> 00:01:29,890
going to go through the basic SG stuff a

00:01:26,979 --> 00:01:32,140
very very quick one then some animation

00:01:29,890 --> 00:01:34,179
methods to see how we can enemy refugees

00:01:32,140 --> 00:01:37,060
then we are going to go into more

00:01:34,179 --> 00:01:40,149
complex one and then we're going to see

00:01:37,060 --> 00:01:43,899
some cool real-world effects very

00:01:40,149 --> 00:01:47,109
quickly let's go into the basics so why

00:01:43,899 --> 00:01:49,119
svgs I believe in using SDGs because it

00:01:47,109 --> 00:01:51,789
has good use good browser support

00:01:49,119 --> 00:01:54,819
basically any browser support svcs right

00:01:51,789 --> 00:01:57,280
now it's star level it's highly soluble

00:01:54,819 --> 00:01:59,319
and do a lot of things with it and the

00:01:57,280 --> 00:02:01,659
best of the best of all is scalable

00:01:59,319 --> 00:02:03,700
meaning you can build animations for the

00:02:01,659 --> 00:02:07,840
mobile for the desktop and beyond it's

00:02:03,700 --> 00:02:10,869
up to you going to the basics there are

00:02:07,840 --> 00:02:14,590
multiple ways of using SVG's for example

00:02:10,869 --> 00:02:17,980
using it as an image tag or a CSS

00:02:14,590 --> 00:02:20,769
background-image like this or an object

00:02:17,980 --> 00:02:24,160
tag which i don't see many people using

00:02:20,769 --> 00:02:28,240
it and inline SVG

00:02:24,160 --> 00:02:29,950
and well multiple methods we're not

00:02:28,240 --> 00:02:32,740
going to cover so much from the basics

00:02:29,950 --> 00:02:35,350
in this talk right now so we're going to

00:02:32,740 --> 00:02:38,200
just use inline SVG's because it's the

00:02:35,350 --> 00:02:41,800
one that supports everything just to

00:02:38,200 --> 00:02:46,150
make our lives easier so animations

00:02:41,800 --> 00:02:47,620
methods they are basic skate 3 CSS sm IL

00:02:46,150 --> 00:02:52,680
which stands for synchronized multimedia

00:02:47,620 --> 00:02:55,360
integration language and javascript

00:02:52,680 --> 00:02:58,840
browser support for this korean

00:02:55,360 --> 00:03:00,820
emissions are pretty good CSS is IE 9

00:02:58,840 --> 00:03:04,300
plus so as long as you can use CSS

00:03:00,820 --> 00:03:06,040
transitions animations you're fine SM al

00:03:04,300 --> 00:03:09,210
if you are going to support IE 0 or

00:03:06,040 --> 00:03:11,470
prime mini you well you can use it and

00:03:09,210 --> 00:03:14,260
javascript has the best support so far

00:03:11,470 --> 00:03:18,220
it goes way back to even I use six if

00:03:14,260 --> 00:03:20,130
you use some like some good libraries so

00:03:18,220 --> 00:03:23,050
the first part is hilarious talk about

00:03:20,130 --> 00:03:25,720
translation meaning like moving disease

00:03:23,050 --> 00:03:28,180
from left to right and rotation you see

00:03:25,720 --> 00:03:32,290
why rotation and in a while because it's

00:03:28,180 --> 00:03:35,080
a little bit complex first of all here's

00:03:32,290 --> 00:03:40,420
the SVG we are going to use this is the

00:03:35,080 --> 00:03:44,140
square that we have cool so if i run

00:03:40,420 --> 00:03:49,600
this you see a square hopefully yeah ask

00:03:44,140 --> 00:03:52,390
away okay animating with CSS first of

00:03:49,600 --> 00:03:54,010
all you want to use CSS when your

00:03:52,390 --> 00:03:56,020
animations are simple we do have a lot

00:03:54,010 --> 00:03:57,760
of different weird timing functions you

00:03:56,020 --> 00:04:00,100
don't have to think too much about the

00:03:57,760 --> 00:04:02,709
lazy and stuff like that and you want to

00:04:00,100 --> 00:04:05,140
any properties that only CSS can animate

00:04:02,709 --> 00:04:09,550
which is most of them except for the

00:04:05,140 --> 00:04:11,950
past date harting things like that when

00:04:09,550 --> 00:04:14,830
targeting SDGs in CSS you can either

00:04:11,950 --> 00:04:17,020
target the SVG element that works very

00:04:14,830 --> 00:04:18,820
very much like the same as HTML div

00:04:17,020 --> 00:04:21,580
elements so we are not going to go into

00:04:18,820 --> 00:04:24,370
that the other one is to target the

00:04:21,580 --> 00:04:25,750
elements within the SDG itself there's

00:04:24,370 --> 00:04:27,460
slightly more complex when it comes to

00:04:25,750 --> 00:04:30,910
animations because things start to

00:04:27,460 --> 00:04:33,520
change a bit so first of all translation

00:04:30,910 --> 00:04:35,190
I believe many people you already know

00:04:33,520 --> 00:04:37,010
how to use transitions so

00:04:35,190 --> 00:04:39,270
melling don't have a debt but

00:04:37,010 --> 00:04:41,220
transitions if you say if you do a

00:04:39,270 --> 00:04:44,310
transform you're basically moving it to

00:04:41,220 --> 00:04:48,150
the left by our pixels you can also use

00:04:44,310 --> 00:04:50,250
animations like the important thing to

00:04:48,150 --> 00:04:51,630
notice the keyframes over here if you

00:04:50,250 --> 00:04:53,850
know the cleveland syntax you can

00:04:51,630 --> 00:04:57,450
basically do animations just like

00:04:53,850 --> 00:05:00,750
transitions in with SVG's nothing to

00:04:57,450 --> 00:05:03,390
worry about so the left and right thing

00:05:00,750 --> 00:05:05,790
is pretty simple however when it comes

00:05:03,390 --> 00:05:08,790
to rotation is not as straightforward as

00:05:05,790 --> 00:05:12,360
it so right here I've written rotate 360

00:05:08,790 --> 00:05:16,710
degrees so take a look at how this SDG&E

00:05:12,360 --> 00:05:19,110
runs it's kind of because it goes out of

00:05:16,710 --> 00:05:23,850
the box and then it comes back again if

00:05:19,110 --> 00:05:25,890
you notice it it hovers over this H over

00:05:23,850 --> 00:05:29,910
here so this is the orange endpoint of

00:05:25,890 --> 00:05:31,860
the SVG transition well if you want to

00:05:29,910 --> 00:05:34,470
translate at the center we have to set

00:05:31,860 --> 00:05:38,970
the transform origin to fifty fifty

00:05:34,470 --> 00:05:40,650
percent and hey it works however the

00:05:38,970 --> 00:05:43,200
problem is that this doesn't work in

00:05:40,650 --> 00:05:44,760
firefox if you're not working if you

00:05:43,200 --> 00:05:47,580
understood working in firefox you have

00:05:44,760 --> 00:05:51,300
to set the transform origin to pixels or

00:05:47,580 --> 00:05:54,270
any other unit that firefox use this so

00:05:51,300 --> 00:05:56,790
if you are going to do rotation with SVG

00:05:54,270 --> 00:06:00,780
animations the best not to use CSS if

00:05:56,790 --> 00:06:02,910
you want to support Firefox then let's

00:06:00,780 --> 00:06:05,910
go on to SMI elbow you'll be going to do

00:06:02,910 --> 00:06:08,430
the same thing you want to use SML

00:06:05,910 --> 00:06:11,310
likewise when you use simple animations

00:06:08,430 --> 00:06:14,760
you need slightly more control compared

00:06:11,310 --> 00:06:19,530
to CSS you'll see why later and you'd

00:06:14,760 --> 00:06:22,410
like to support IE or prime mini the

00:06:19,530 --> 00:06:24,570
enemy similar animations you can use the

00:06:22,410 --> 00:06:26,220
enemy tech basically similar animations

00:06:24,570 --> 00:06:29,280
you're going to use you're going to

00:06:26,220 --> 00:06:31,980
write it in the SDG itself it's kind of

00:06:29,280 --> 00:06:35,460
like writing HTML and inline styles at

00:06:31,980 --> 00:06:37,290
the same time so you can you either put

00:06:35,460 --> 00:06:39,360
it within the element like this is the

00:06:37,290 --> 00:06:43,289
rectangle we have earlier and animate

00:06:39,360 --> 00:06:47,849
take within or you can use an ID and use

00:06:43,289 --> 00:06:51,490
a hitch rack link to the ID

00:06:47,849 --> 00:06:53,710
so the enemy Tech has need to tether

00:06:51,490 --> 00:06:56,110
needs to have a minimum of four things

00:06:53,710 --> 00:06:58,479
the attribute name which is the thing

00:06:56,110 --> 00:07:02,860
that you want to move around the front

00:06:58,479 --> 00:07:06,490
value the two value and the duration so

00:07:02,860 --> 00:07:08,530
I remember saying that you need even is

00:07:06,490 --> 00:07:10,659
slightly more control you can use simul

00:07:08,530 --> 00:07:14,319
it gets against a like click and then it

00:07:10,659 --> 00:07:16,930
moves here we are moving X which is the

00:07:14,319 --> 00:07:18,879
location from the 02 the current

00:07:16,930 --> 00:07:24,280
position it's like a translation thing

00:07:18,879 --> 00:07:27,370
by 100 pixels or 100 SVG units there is

00:07:24,280 --> 00:07:30,669
also another form of using simul and

00:07:27,370 --> 00:07:33,009
that is with the enemy transform tag the

00:07:30,669 --> 00:07:35,620
addition is that you have to have a type

00:07:33,009 --> 00:07:39,240
of say translate on rutila things like

00:07:35,620 --> 00:07:41,409
that and this is the x and y values

00:07:39,240 --> 00:07:44,949
likewise you can say click and it

00:07:41,409 --> 00:07:48,039
translates now next moving on to

00:07:44,949 --> 00:07:49,930
rotation and when you rotate you have to

00:07:48,039 --> 00:07:52,630
use any may transform tag because you're

00:07:49,930 --> 00:07:54,969
going to transform it no other methods

00:07:52,630 --> 00:07:57,009
otherwise likewise when you click on it

00:07:54,969 --> 00:08:00,490
it slides all the window and comes back

00:07:57,009 --> 00:08:05,289
again this is because it rotates around

00:08:00,490 --> 00:08:09,729
the top left on it now we can fix it by

00:08:05,289 --> 00:08:12,400
setting the central origin right in the

00:08:09,729 --> 00:08:16,870
signal element self by sandia say a

00:08:12,400 --> 00:08:18,819
hundred and it rotates properly so this

00:08:16,870 --> 00:08:21,400
is slightly more confusing because you

00:08:18,819 --> 00:08:23,949
have to like count the pixels in there

00:08:21,400 --> 00:08:26,440
as well it's not so helpful if you're

00:08:23,949 --> 00:08:29,889
going to work on rotations the way to

00:08:26,440 --> 00:08:32,709
write more than one animation in Samuel

00:08:29,889 --> 00:08:35,260
is that you have to add new text and you

00:08:32,709 --> 00:08:37,329
can chain them together by using an ID

00:08:35,260 --> 00:08:39,640
on the previous animation and then say

00:08:37,329 --> 00:08:42,430
begin so I click on this if it will

00:08:39,640 --> 00:08:44,709
rotate next I'll change color so this is

00:08:42,430 --> 00:08:48,790
how severe animation goes next let's

00:08:44,709 --> 00:08:50,529
move on to JavaScript we use JavaScript

00:08:48,790 --> 00:08:54,010
you can use it for complex animations

00:08:50,529 --> 00:08:55,660
like the one else the CSS thing that was

00:08:54,010 --> 00:08:58,899
shown just now there was mostly

00:08:55,660 --> 00:09:00,070
JavaScript and some CSS it supports all

00:08:58,899 --> 00:09:02,560
browsers we don't

00:09:00,070 --> 00:09:04,420
have to worry about it and rotating

00:09:02,560 --> 00:09:07,750
SVG's obviously because it's a lot

00:09:04,420 --> 00:09:11,040
simpler you see the libraries that you

00:09:07,750 --> 00:09:14,470
can use to enemy svgs a tree sap and

00:09:11,040 --> 00:09:15,940
stamp SVG there are also other libraries

00:09:14,470 --> 00:09:18,430
you can use but we are going to use G

00:09:15,940 --> 00:09:22,540
set because animation is much simpler

00:09:18,430 --> 00:09:24,520
with reset and la colina so first of all

00:09:22,540 --> 00:09:30,340
we are going to add the twin max thing

00:09:24,520 --> 00:09:33,150
in G set by using the below code the GSF

00:09:30,340 --> 00:09:36,760
syntax is like this twin max dot method

00:09:33,150 --> 00:09:38,590
elements the duration and your

00:09:36,760 --> 00:09:41,170
destination how you look like at the end

00:09:38,590 --> 00:09:45,670
of the animation so let's say we are

00:09:41,170 --> 00:09:48,430
doing translation that means twin x 2

00:09:45,670 --> 00:09:52,180
we're going to rotate to the s3 bill

00:09:48,430 --> 00:09:54,310
which is specifically for SVG's so we're

00:09:52,180 --> 00:09:56,470
going to translate the exit from 50 to

00:09:54,310 --> 00:10:00,820
100 right now and we click on it it goes

00:09:56,470 --> 00:10:02,770
like this rotation likewise if you put

00:10:00,820 --> 00:10:05,320
like rotation 360 straight away it will

00:10:02,770 --> 00:10:07,090
rotate around its own origin which is

00:10:05,320 --> 00:10:10,090
slightly different from the other

00:10:07,090 --> 00:10:12,070
properties but you can set transform

00:10:10,090 --> 00:10:16,300
origin to 5050 and you will work

00:10:12,070 --> 00:10:18,880
flawlessly in all browsers now if in the

00:10:16,300 --> 00:10:21,490
rare case you need to rotate around the

00:10:18,880 --> 00:10:22,930
SVG origin you can say set to aren't

00:10:21,490 --> 00:10:24,850
tomorrow which is the bottom right

00:10:22,930 --> 00:10:27,340
corner and it flow out and come back in

00:10:24,850 --> 00:10:31,300
again so this works in all browsers as

00:10:27,340 --> 00:10:34,000
well well now we are done with the

00:10:31,300 --> 00:10:36,010
basics I hope that wasn't too fast so

00:10:34,000 --> 00:10:38,710
this one we are going to make something

00:10:36,010 --> 00:10:40,180
more complex so because my friend Jing

00:10:38,710 --> 00:10:42,700
here likes to play basketball we are

00:10:40,180 --> 00:10:45,940
going to do a basketball animation that

00:10:42,700 --> 00:10:49,360
goes like this so if you notice there is

00:10:45,940 --> 00:10:51,640
a translate X which goes from left to

00:10:49,360 --> 00:10:54,370
right there is a balance animation so

00:10:51,640 --> 00:10:57,000
translate y and then that's a rotating

00:10:54,370 --> 00:11:00,820
animation at the same time in this one

00:10:57,000 --> 00:11:02,860
the SVG for the ball is pretty huge

00:11:00,820 --> 00:11:05,260
there's three paths elements so we're

00:11:02,860 --> 00:11:07,920
going to copy it and put it into the

00:11:05,260 --> 00:11:07,920
cold pan

00:11:08,910 --> 00:11:17,250
no all right there you have the Balkans

00:11:12,690 --> 00:11:18,240
yeah see you see that for CSS when

00:11:17,250 --> 00:11:19,320
you're walking with the ball in your

00:11:18,240 --> 00:11:22,560
mission because we are going to use

00:11:19,320 --> 00:11:24,570
transforms all along it's an easier way

00:11:22,560 --> 00:11:29,430
if you wish we add more group classes so

00:11:24,570 --> 00:11:32,010
you catch more elements to play with so

00:11:29,430 --> 00:11:34,820
one way of doing it is like this I'm

00:11:32,010 --> 00:11:34,820
going to do a quick one

00:11:40,870 --> 00:11:44,460
and then we're going to close some tax

00:11:46,800 --> 00:11:52,589
I'm not going to worry about indentation

00:11:48,750 --> 00:11:54,720
right now so now for CSS i'm going to

00:11:52,589 --> 00:11:57,060
use animations because when you're using

00:11:54,720 --> 00:12:01,350
bounce is going to be hard to set the

00:11:57,060 --> 00:12:04,620
easing function so in ball x regular and

00:12:01,350 --> 00:12:06,600
it hit from left to right and ball why

00:12:04,620 --> 00:12:08,850
we are going to bounce it and borrow

00:12:06,600 --> 00:12:10,829
typical and rotate it around its origin

00:12:08,850 --> 00:12:13,290
so take know that because we are using

00:12:10,829 --> 00:12:17,820
funds from origin fifty-fifty it doesn't

00:12:13,290 --> 00:12:19,649
work in firefox the keyframes for ball x

00:12:17,820 --> 00:12:22,680
and ball rotate is pretty

00:12:19,649 --> 00:12:25,800
straightforward so you can paste it down

00:12:22,680 --> 00:12:28,890
here boy axis moves it to the left ball

00:12:25,800 --> 00:12:33,560
wide that's ball religious rotates it so

00:12:28,890 --> 00:12:36,630
here it rotates perfect now the CSS for

00:12:33,560 --> 00:12:39,959
this one is slightly more complex like

00:12:36,630 --> 00:12:41,579
you have to count the different timings

00:12:39,959 --> 00:12:43,740
and then you have to give the correct

00:12:41,579 --> 00:12:46,050
translation to it and you have to set

00:12:43,740 --> 00:12:48,209
the timing functions to easing and ease

00:12:46,050 --> 00:12:51,630
out properly otherwise the ball doesn't

00:12:48,209 --> 00:12:57,060
balance so now if you run it you have to

00:12:51,630 --> 00:13:02,880
look at this whoa oh I think I had a

00:12:57,060 --> 00:13:06,300
typo error here all right doesn't seem

00:13:02,880 --> 00:13:09,750
to work properly okay there's a ball why

00:13:06,300 --> 00:13:14,490
and here's an a missing oh really yeah

00:13:09,750 --> 00:13:19,829
its role in the CSS at the time oh ok

00:13:14,490 --> 00:13:22,200
thanks so now if I click click run it

00:13:19,829 --> 00:13:25,709
drops you can see that animation is

00:13:22,200 --> 00:13:28,950
slightly jerky no way because it's hard

00:13:25,709 --> 00:13:33,660
to gather any missions correct have a

00:13:28,950 --> 00:13:35,070
look at once again it's kind of jerky

00:13:33,660 --> 00:13:36,810
because it's hard to calculate the

00:13:35,070 --> 00:13:40,610
timing functions and how it translates

00:13:36,810 --> 00:13:42,930
and start a bit now let's move on oh

00:13:40,610 --> 00:13:45,620
this is this is the one I was supposed

00:13:42,930 --> 00:13:45,620
to show you anyway

00:13:46,980 --> 00:13:53,740
great now as we go on to SM al we're

00:13:50,590 --> 00:13:56,080
going to rotate it the same way so one

00:13:53,740 --> 00:13:58,720
is going to be x1 it's going to be why

00:13:56,080 --> 00:14:00,970
and once we need rotate likewise we are

00:13:58,720 --> 00:14:02,830
going to use three different groups but

00:14:00,970 --> 00:14:05,440
instead of using classes we have to use

00:14:02,830 --> 00:14:11,080
IDs because this is the only way to

00:14:05,440 --> 00:14:16,050
select stuff in samil so let me just

00:14:11,080 --> 00:14:16,050
switch over hands set this to class IDs

00:14:17,160 --> 00:14:26,400
okay great so bowl x will be and you

00:14:21,190 --> 00:14:30,490
make transform well X and you set it to

00:14:26,400 --> 00:14:33,130
let me just remove all of this okay and

00:14:30,490 --> 00:14:40,270
you may transform ball x from 0 to six

00:14:33,130 --> 00:14:44,830
hundred for 2.5 seconds so now it it

00:14:40,270 --> 00:14:46,960
translates properly so that's good now

00:14:44,830 --> 00:14:50,050
for rotate we are going to rotate it

00:14:46,960 --> 00:14:58,390
around its origin at 50 50 likewise just

00:14:50,050 --> 00:14:59,920
2.5 seconds so like this technology we

00:14:58,390 --> 00:15:07,630
have to use and you may transform over

00:14:59,920 --> 00:15:10,120
here and for poor why this is the killer

00:15:07,630 --> 00:15:12,100
part because you have to transform it

00:15:10,120 --> 00:15:15,100
and transfer you have to translate it

00:15:12,100 --> 00:15:17,710
from up to down the values you see here

00:15:15,100 --> 00:15:19,270
are like timing functions sorry the key

00:15:17,710 --> 00:15:22,570
times here is like timing functions that

00:15:19,270 --> 00:15:24,100
we have in the keyframes so this is

00:15:22,570 --> 00:15:27,250
fourteen percent twenty-eight percent

00:15:24,100 --> 00:15:29,950
and so on and the values here is a wide

00:15:27,250 --> 00:15:32,050
translate value and the X translate

00:15:29,950 --> 00:15:35,530
value so we have to like bounce it up

00:15:32,050 --> 00:15:38,550
and down then you have to set the count

00:15:35,530 --> 00:15:41,410
mode the key spline which stands for

00:15:38,550 --> 00:15:44,380
bezier curves and stuff like that then

00:15:41,410 --> 00:15:47,680
you have to copy and paste the Bezier

00:15:44,380 --> 00:15:49,090
curve itself into the simul it's going

00:15:47,680 --> 00:15:52,480
to be a pain in the ass if you have to

00:15:49,090 --> 00:15:57,590
read we use this animation so let's just

00:15:52,480 --> 00:16:05,750
copy it over and go into it

00:15:57,590 --> 00:16:08,450
now refresh great we have something like

00:16:05,750 --> 00:16:10,520
the CSS ball that we have the

00:16:08,450 --> 00:16:12,230
calculations are exactly the same so you

00:16:10,520 --> 00:16:14,840
see that the it bounces a little bit

00:16:12,230 --> 00:16:18,010
show clearly as well because we have to

00:16:14,840 --> 00:16:21,890
calculate the whole thing by ourselves

00:16:18,010 --> 00:16:23,840
next with JavaScript with javascript is

00:16:21,890 --> 00:16:26,300
a lot simpler because we don't have to

00:16:23,840 --> 00:16:29,300
worry about all the different transforms

00:16:26,300 --> 00:16:33,050
and translate g700 for us without a

00:16:29,300 --> 00:16:34,910
problem so we can just use a class so I

00:16:33,050 --> 00:16:40,910
mean I'm just going to come back here

00:16:34,910 --> 00:16:46,040
and remove both X and bo why I'm going

00:16:40,910 --> 00:16:49,550
to give a class of what i call it

00:16:46,040 --> 00:16:58,490
borrowed here all right and we're going

00:16:49,550 --> 00:17:04,970
to remove the anime transforms and the

00:16:58,490 --> 00:17:08,480
extra key tags all right so if we head

00:17:04,970 --> 00:17:10,940
back into the JavaScript let me just

00:17:08,480 --> 00:17:16,400
copy this over first and then we'll

00:17:10,940 --> 00:17:19,730
explain in here okay so in here we are

00:17:16,400 --> 00:17:22,430
using two different timing functions the

00:17:19,730 --> 00:17:25,520
first one will be easing will be at ease

00:17:22,430 --> 00:17:27,970
out at the same time it's going to

00:17:25,520 --> 00:17:34,000
translate it from left to right and

00:17:27,970 --> 00:17:36,560
rotate it so if we run and click on this

00:17:34,000 --> 00:17:39,410
it rotates and it translates properly

00:17:36,560 --> 00:17:41,960
the second one at the same time we're

00:17:39,410 --> 00:17:47,140
going to do a bounce with a using

00:17:41,960 --> 00:17:47,140
function and now if I run it Oh

00:17:49,340 --> 00:17:54,110
and click on it you see that it bounces

00:17:51,440 --> 00:17:56,120
and you also notice that the East thing

00:17:54,110 --> 00:17:58,160
is a lot easier to control because we

00:17:56,120 --> 00:18:01,700
can use easing libraries instead of

00:17:58,160 --> 00:18:04,730
trying to call it one ourselves so using

00:18:01,700 --> 00:18:06,500
g-type is a lot simpler than using CSS

00:18:04,730 --> 00:18:10,580
animations or JavaScript and new inches

00:18:06,500 --> 00:18:13,790
when you have something of this kind now

00:18:10,580 --> 00:18:15,650
let's move on to some cooler real-world

00:18:13,790 --> 00:18:19,640
effects the ones that we are going to

00:18:15,650 --> 00:18:22,850
talk about our line drawing and shape

00:18:19,640 --> 00:18:27,050
more thing so line drawing you'll see

00:18:22,850 --> 00:18:31,400
something like this I mean it draws by

00:18:27,050 --> 00:18:36,470
itself the method for doing this is that

00:18:31,400 --> 00:18:37,700
you have to use SVG with a stroke if it

00:18:36,470 --> 00:18:39,830
doesn't have a stroke this method

00:18:37,700 --> 00:18:41,540
doesn't work so let's just remove

00:18:39,830 --> 00:18:47,030
everything else and just place the SVG

00:18:41,540 --> 00:18:49,460
in no way I don't need this ok the first

00:18:47,030 --> 00:18:53,060
step of the line drawing thing is to

00:18:49,460 --> 00:18:55,640
divide the strokes into a race into

00:18:53,060 --> 00:19:01,640
smaller pieces by using a stroke dash

00:18:55,640 --> 00:19:05,480
array property in CSS next you have to

00:19:01,640 --> 00:19:08,090
offset the stroke slightly by saying by

00:19:05,480 --> 00:19:10,850
using a stroke death offset method the

00:19:08,090 --> 00:19:12,890
numbers here are calculations that you

00:19:10,850 --> 00:19:15,920
just are just random numbers that you

00:19:12,890 --> 00:19:17,690
can use so if you move over it it really

00:19:15,920 --> 00:19:21,500
kind of looks cool just that it doesn't

00:19:17,690 --> 00:19:23,360
have the full line by itself then you

00:19:21,500 --> 00:19:25,610
have to make the strokes longer so it

00:19:23,360 --> 00:19:28,310
covers the full path so these numbers

00:19:25,610 --> 00:19:31,940
are you have to go and try and calculate

00:19:28,310 --> 00:19:35,510
it by yourself so this is kind of like

00:19:31,940 --> 00:19:37,790
the different way so if we want to make

00:19:35,510 --> 00:19:40,490
it the correct way around with to set

00:19:37,790 --> 00:19:43,460
the stroke dash offset says so it

00:19:40,490 --> 00:19:48,830
doesn't show up and we animate it in on

00:19:43,460 --> 00:19:50,990
transformer on animations alright so for

00:19:48,830 --> 00:19:53,390
line drawing in summary which is going

00:19:50,990 --> 00:19:56,090
to set the dash array to the path length

00:19:53,390 --> 00:19:58,820
and the dash all set to the path length

00:19:56,090 --> 00:20:01,430
as well the challenging part with this

00:19:58,820 --> 00:20:02,930
is getting the path lane without and

00:20:01,430 --> 00:20:05,300
making sure

00:20:02,930 --> 00:20:07,340
it works across all browsers and all the

00:20:05,300 --> 00:20:09,950
devices especially when responsive

00:20:07,340 --> 00:20:11,900
design comes in play so this is usually

00:20:09,950 --> 00:20:15,320
easier with libraries you can use your

00:20:11,900 --> 00:20:17,360
own JavaScript method to call the SVG

00:20:15,320 --> 00:20:19,760
path and get the total length of the

00:20:17,360 --> 00:20:22,550
path or you can use some libraries like

00:20:19,760 --> 00:20:24,500
fever CS we should enemy a multiple

00:20:22,550 --> 00:20:27,260
paths or you directly without any

00:20:24,500 --> 00:20:30,590
problems or you can use something like a

00:20:27,260 --> 00:20:33,620
preset draw SVG plugin or segment which

00:20:30,590 --> 00:20:36,770
is very new it works exactly the same su

00:20:33,620 --> 00:20:39,800
set as we g0 plugin with the exception

00:20:36,770 --> 00:20:42,830
that you have to pay for it then the

00:20:39,800 --> 00:20:44,600
only the good thing about this draws VG

00:20:42,830 --> 00:20:46,970
thing is that you can start your path

00:20:44,600 --> 00:20:49,280
anywhere and if you animate it however

00:20:46,970 --> 00:20:51,590
you like so if i take if you take a look

00:20:49,280 --> 00:20:54,710
here i started a path from the middle

00:20:51,590 --> 00:20:57,350
and then roast it up and that is not

00:20:54,710 --> 00:21:00,100
very doable with library site vapors

00:20:57,350 --> 00:21:04,370
unless you really hack your way through

00:21:00,100 --> 00:21:05,990
alright that's for a line drawing so

00:21:04,370 --> 00:21:07,670
we're going to go into shape more thing

00:21:05,990 --> 00:21:12,560
for shame of me am I going to do this

00:21:07,670 --> 00:21:14,000
well um this is well i got from co drops

00:21:12,560 --> 00:21:16,880
so it's pretty cool if you don't know

00:21:14,000 --> 00:21:18,260
code drops please have a lot here be

00:21:16,880 --> 00:21:21,110
your mind will be blown by the

00:21:18,260 --> 00:21:23,690
animations they have in there so the

00:21:21,110 --> 00:21:26,390
trick to use to doing this Boing Boing

00:21:23,690 --> 00:21:29,210
thing is that need to have a starting

00:21:26,390 --> 00:21:32,090
path and the path when you click on it

00:21:29,210 --> 00:21:34,580
so like the ending path the main thing

00:21:32,090 --> 00:21:37,280
here is that the path the number of

00:21:34,580 --> 00:21:39,830
points in the past must match all the

00:21:37,280 --> 00:21:42,080
way I mean by that so if you know some

00:21:39,830 --> 00:21:44,210
SDGs you'll know that m starts for

00:21:42,080 --> 00:21:46,850
stands for movie tall which is the start

00:21:44,210 --> 00:21:48,980
of a path and then if you take the

00:21:46,850 --> 00:21:50,840
number of lines here she is one thing

00:21:48,980 --> 00:21:52,880
just look at the alphabet so you know

00:21:50,840 --> 00:21:56,300
how many points they are this s and

00:21:52,880 --> 00:22:01,820
that's s so that's like 44 points here

00:21:56,300 --> 00:22:04,040
yes MC s 1 s s and that's another s

00:22:01,820 --> 00:22:09,260
somewhere here so that's four points in

00:22:04,040 --> 00:22:12,320
both methods then there are two ways to

00:22:09,260 --> 00:22:15,560
do this you can use G sets move SVG

00:22:12,320 --> 00:22:16,610
plugin which is paid once again or you

00:22:15,560 --> 00:22:19,730
can use snap

00:22:16,610 --> 00:22:23,420
ji ji ji said natively doesn't allow you

00:22:19,730 --> 00:22:24,770
to work with past very well oh yeah

00:22:23,420 --> 00:22:27,080
there's one more way to do this and

00:22:24,770 --> 00:22:31,400
that's the ISA meal but when your past

00:22:27,080 --> 00:22:33,620
messes up you'll be so let's do how

00:22:31,400 --> 00:22:38,750
it works right now with the morph SVG

00:22:33,620 --> 00:22:40,780
plugin this is pit so right now we're

00:22:38,750 --> 00:22:44,179
doing here is that we have a stat path

00:22:40,780 --> 00:22:47,390
which is the circular one and the end

00:22:44,179 --> 00:22:49,730
path which is the the oval one we're

00:22:47,390 --> 00:22:54,410
going to set visibility to hidden so we

00:22:49,730 --> 00:23:03,440
don't see the over one then we're going

00:22:54,410 --> 00:23:07,100
to click on the more the button we're

00:23:03,440 --> 00:23:08,929
going to set the start to the end so the

00:23:07,100 --> 00:23:13,280
cool thing about morph SVG is that you

00:23:08,929 --> 00:23:17,809
can set it to the IV of the path that

00:23:13,280 --> 00:23:23,059
you want it to moth into so let me just

00:23:17,809 --> 00:23:26,570
remove this and take a look so I do a

00:23:23,059 --> 00:23:28,610
run now it will move in there and stay

00:23:26,570 --> 00:23:30,950
it right there without any problems just

00:23:28,610 --> 00:23:34,610
the coolest part about the morph SVG

00:23:30,950 --> 00:23:38,809
plugin then now if I want to bring it

00:23:34,610 --> 00:23:41,390
back then we just have to set a delay or

00:23:38,809 --> 00:23:43,730
if you use time there are other methods

00:23:41,390 --> 00:23:46,190
but this one is simple we can just set a

00:23:43,730 --> 00:23:50,960
delay so and it bounces back after that

00:23:46,190 --> 00:23:54,380
so something like this quite simple with

00:23:50,960 --> 00:23:57,679
both SVG but of course some of us are

00:23:54,380 --> 00:24:00,380
calling our misers like myself included

00:23:57,679 --> 00:24:03,140
oh wait let me just talk about this like

00:24:00,380 --> 00:24:06,230
remember I was saying that all the

00:24:03,140 --> 00:24:07,700
challenges with morphing part shapes is

00:24:06,230 --> 00:24:10,100
that you have to have the same number of

00:24:07,700 --> 00:24:12,530
paths I'm sorry the similar points on

00:24:10,100 --> 00:24:14,360
the path well the good thing about more

00:24:12,530 --> 00:24:16,070
of SVG is that you can forget about that

00:24:14,360 --> 00:24:19,370
and this is the only library where you

00:24:16,070 --> 00:24:23,000
can do so like soco to elephant and

00:24:19,370 --> 00:24:26,929
rhino to star and back into an elephant

00:24:23,000 --> 00:24:28,940
and to a circle again this is there's a

00:24:26,929 --> 00:24:29,970
lot of complex path especially with the

00:24:28,940 --> 00:24:31,830
rhino and elephant

00:24:29,970 --> 00:24:34,170
but it's simple when it comes to the

00:24:31,830 --> 00:24:36,660
SoCo and the star well if you are

00:24:34,170 --> 00:24:39,060
working with SVG if you are creating an

00:24:36,660 --> 00:24:41,310
SVG yourself this is going to be hell a

00:24:39,060 --> 00:24:43,050
lot of work but if you used rice which

00:24:41,310 --> 00:24:45,150
she doesn't worry about it and they will

00:24:43,050 --> 00:24:49,620
animate for you automatically so this is

00:24:45,150 --> 00:24:52,380
pretty cool anyway for the if you don't

00:24:49,620 --> 00:24:56,550
pay money like me so you can use snap

00:24:52,380 --> 00:24:58,260
lcg which is following this link here 00

00:24:56,550 --> 00:25:01,350
i have a link up there so you can click

00:24:58,260 --> 00:25:02,930
on it if you want to so in this case we

00:25:01,350 --> 00:25:06,600
are going to do it slightly differently

00:25:02,930 --> 00:25:09,630
we're just going to have a path that is

00:25:06,600 --> 00:25:11,370
the initial shape so I'm just going to

00:25:09,630 --> 00:25:16,740
replace everything and remove everything

00:25:11,370 --> 00:25:21,150
here all right we have to circle once

00:25:16,740 --> 00:25:22,920
again then just make it simple we're

00:25:21,150 --> 00:25:25,080
going to say we're going to specify the

00:25:22,920 --> 00:25:27,780
start and end pop and JavaScript you can

00:25:25,080 --> 00:25:30,950
make it nicer by setting it on an

00:25:27,780 --> 00:25:34,620
attribute of the element if you want to

00:25:30,950 --> 00:25:37,920
so we're going to initialize nap and

00:25:34,620 --> 00:25:40,530
then select the path which is kind of

00:25:37,920 --> 00:25:45,000
what it requires then the start and end

00:25:40,530 --> 00:25:47,250
path night when we click on the button

00:25:45,000 --> 00:25:50,490
for the first time we have to make the

00:25:47,250 --> 00:25:53,970
oval shape so this is done by using the

00:25:50,490 --> 00:25:59,190
enemy method the mena here is the easing

00:25:53,970 --> 00:26:05,190
function provided by step SVG traveling

00:25:59,190 --> 00:26:07,590
oh my god so the using function here is

00:26:05,190 --> 00:26:11,130
provided by Nina it's kinda like ji

00:26:07,590 --> 00:26:13,800
sub's easing function with us I think

00:26:11,130 --> 00:26:19,020
it's not as powerful but you can't use G

00:26:13,800 --> 00:26:24,210
set with as standby so he just like this

00:26:19,020 --> 00:26:27,720
right now so you can do that then once

00:26:24,210 --> 00:26:29,310
it's completed we can pass on a next

00:26:27,720 --> 00:26:32,250
parameter which is the on complete

00:26:29,310 --> 00:26:35,010
function and then we animate it back to

00:26:32,250 --> 00:26:40,899
the start path so this is how we can do

00:26:35,010 --> 00:26:46,340
it so I'm just going to copy it a reflex

00:26:40,899 --> 00:26:50,330
okay cool now if you take a look at this

00:26:46,340 --> 00:26:53,330
once again it goes by own again so the

00:26:50,330 --> 00:26:54,919
the thing about stem SVG is that you

00:26:53,330 --> 00:26:57,620
might think that stem SVG doesn't play

00:26:54,919 --> 00:27:00,740
very well with she said that's kind of

00:26:57,620 --> 00:27:02,720
true you can also call it this key self

00:27:00,740 --> 00:27:06,470
has this whole thing that you can use

00:27:02,720 --> 00:27:08,750
the call snap SVG animation method but

00:27:06,470 --> 00:27:10,730
it's going to go one way so you can do

00:27:08,750 --> 00:27:12,230
complex animations regarding that so

00:27:10,730 --> 00:27:16,460
just be aware of it if you want to

00:27:12,230 --> 00:27:19,070
combine the two of them then just a

00:27:16,460 --> 00:27:20,960
quick summary the more thing

00:27:19,070 --> 00:27:23,419
your past must has the same number of

00:27:20,960 --> 00:27:27,590
points for the initial and ending path

00:27:23,419 --> 00:27:32,200
unless you are using more SVG and yeah

00:27:27,590 --> 00:27:32,200
with that come to the end of the talk I

00:27:35,799 --> 00:27:41,750
noticed you used a lot of default

00:27:39,169 --> 00:27:43,429
timings like easing out and so on is

00:27:41,750 --> 00:27:45,919
that something you'd normally do or

00:27:43,429 --> 00:27:48,649
would usually customize them well I

00:27:45,919 --> 00:27:51,769
normally do use the default easing

00:27:48,649 --> 00:27:55,220
functions because I find that it's more

00:27:51,769 --> 00:27:57,590
important to select the right timing

00:27:55,220 --> 00:27:59,360
rather than the easing functions because

00:27:57,590 --> 00:28:01,490
of the easing functions are they are

00:27:59,360 --> 00:28:03,200
really pretty good so the more important

00:28:01,490 --> 00:28:04,580
things is to set the delays of the

00:28:03,200 --> 00:28:07,429
animation and the timings of the

00:28:04,580 --> 00:28:10,129
animation correct rather than play

00:28:07,429 --> 00:28:11,870
around the eating of course if you are a

00:28:10,129 --> 00:28:13,850
pro with the eating stuff feel free to

00:28:11,870 --> 00:28:20,330
play with it I'm not that good of that

00:28:13,850 --> 00:28:23,570
personally yeah I saw that a chrome is

00:28:20,330 --> 00:28:27,950
actually deprecating the SMI o syntax

00:28:23,570 --> 00:28:30,860
yeah so would you suggest not using that

00:28:27,950 --> 00:28:34,220
at all well personally I don't really

00:28:30,860 --> 00:28:36,440
like the sm Hale syntax myself because

00:28:34,220 --> 00:28:38,210
you can't use it like across multiple

00:28:36,440 --> 00:28:41,870
elements you have to copy and paste it

00:28:38,210 --> 00:28:44,629
and it's going to be deprecated into web

00:28:41,870 --> 00:28:47,559
animations API which I unfortunately

00:28:44,629 --> 00:28:51,769
haven't had a chance to look into yet I

00:28:47,559 --> 00:28:53,720
would believe that I would 46 SML and

00:28:51,769 --> 00:28:56,270
use JavaScript or CSS animations

00:28:53,720 --> 00:28:59,270
stay as much as possible and have a look

00:28:56,270 --> 00:29:03,620
at web animations API once it stabilizes

00:28:59,270 --> 00:29:05,570
and take a look at how that goes I just

00:29:03,620 --> 00:29:09,440
want to ask you about the performers own

00:29:05,570 --> 00:29:11,630
mobile phone as I know the mobile

00:29:09,440 --> 00:29:13,430
browser or whether you or all the

00:29:11,630 --> 00:29:15,620
message to wrong as which you will cost

00:29:13,430 --> 00:29:19,400
some serious fed drugging and other

00:29:15,620 --> 00:29:21,800
performers issue so are you worried

00:29:19,400 --> 00:29:23,720
about performance issue is it's an

00:29:21,800 --> 00:29:27,190
actual issue we have encountered so I

00:29:23,720 --> 00:29:31,060
just wonder if you have some tests or

00:29:27,190 --> 00:29:34,760
project using mobile devices yeah um

00:29:31,060 --> 00:29:37,730
currently no I don't have like projects

00:29:34,760 --> 00:29:40,400
that I street where I use mobile

00:29:37,730 --> 00:29:43,640
animation straightaway but so far from

00:29:40,400 --> 00:29:46,900
my test it depends on how you use the

00:29:43,640 --> 00:29:51,410
animations yourself so like if you use

00:29:46,900 --> 00:29:53,120
transforms and don't repaint the browser

00:29:51,410 --> 00:29:55,550
as much as possible it's not too much of

00:29:53,120 --> 00:29:58,460
a problem or you can use gchat which is

00:29:55,550 --> 00:30:00,290
amazing because it works very well with

00:29:58,460 --> 00:30:03,770
purpose and as performance is absolutely

00:30:00,290 --> 00:30:06,620
solid so for me i'll probably just to

00:30:03,770 --> 00:30:09,170
lay around with this two methods and see

00:30:06,620 --> 00:30:11,990
whether it works well or not if it's

00:30:09,170 --> 00:30:13,640
really shitty then I guess the

00:30:11,990 --> 00:30:16,640
animations might be a bit too much or

00:30:13,640 --> 00:30:18,530
maybe try to cut down animations because

00:30:16,640 --> 00:30:21,950
if you are using a mobile browser and

00:30:18,530 --> 00:30:23,840
you need to reach out to depot with at a

00:30:21,950 --> 00:30:26,690
high speed and they don't have to

00:30:23,840 --> 00:30:29,330
internet connection then maybe dead part

00:30:26,690 --> 00:30:31,970
is not so important after all or maybe

00:30:29,330 --> 00:30:34,540
it might be it depends on what you're

00:30:31,970 --> 00:30:34,540

YouTube URL: https://www.youtube.com/watch?v=6fdIva47wZE


