Title: Johann Hofmann: Browser Security in 2017 | JSUnconf 2017
Publication date: 2017-06-23
Playlist: JSUnconf 2017
Description: 
	
Captions: 
	00:00:01,280 --> 00:00:08,710
so Firefox 45 was I think released in

00:00:04,220 --> 00:00:12,620
August of 2016

00:00:08,710 --> 00:00:15,710
2015 and we've seen a very steep decline

00:00:12,620 --> 00:00:17,840
in the existence of HTTP login and HCP

00:00:15,710 --> 00:00:21,230
page loads are also slowly going down

00:00:17,840 --> 00:00:22,970
from you know now from initially almost

00:00:21,230 --> 00:00:24,560
sixty percent to now a bit under fifty

00:00:22,970 --> 00:00:26,269
percent which is really good considering

00:00:24,560 --> 00:00:30,349
it's been such a short amount of time

00:00:26,269 --> 00:00:33,170
right so what if what's responsible for

00:00:30,349 --> 00:00:35,030
this change in my opinion it is first of

00:00:33,170 --> 00:00:38,120
all that browsers now start to

00:00:35,030 --> 00:00:40,430
aggressively flag insecure sites so if

00:00:38,120 --> 00:00:42,260
this is your site you probably don't

00:00:40,430 --> 00:00:44,750
want to have that label this will that's

00:00:42,260 --> 00:00:46,280
what we currently do well you know that

00:00:44,750 --> 00:00:47,870
one thing is what chrome current without

00:00:46,280 --> 00:00:50,570
the other thing is what we as Firefox

00:00:47,870 --> 00:00:55,730
currently do when a page has a login

00:00:50,570 --> 00:00:58,039
field but it's not using HTTPS we're

00:00:55,730 --> 00:01:00,140
flagging that because the transmission

00:00:58,039 --> 00:01:02,600
of these credentials would be insecure

00:01:00,140 --> 00:01:05,630
and so we want to warn the user hey you

00:01:02,600 --> 00:01:07,700
know this is not a secure website there

00:01:05,630 --> 00:01:09,409
has been a lot of concerns from the web

00:01:07,700 --> 00:01:11,540
developer community around these

00:01:09,409 --> 00:01:14,360
warnings we have been getting a lot of

00:01:11,540 --> 00:01:17,210
box by people saying don't slack my

00:01:14,360 --> 00:01:19,250
website as insecure we have our own

00:01:17,210 --> 00:01:25,820
security mechanisms we don't rely on

00:01:19,250 --> 00:01:26,869
HTTP and I have to say that this is the

00:01:25,820 --> 00:01:28,640
only thing that I can do about it like

00:01:26,869 --> 00:01:30,829
you know give a talk and tell people you

00:01:28,640 --> 00:01:32,990
know it's not that's not true you user

00:01:30,829 --> 00:01:35,420
data is exposed if you should spend

00:01:32,990 --> 00:01:37,939
anything over HTTP there's no way you

00:01:35,420 --> 00:01:39,350
can reliably make it secure there's no

00:01:37,939 --> 00:01:40,900
you know no token generation mechanism

00:01:39,350 --> 00:01:43,670
something that people from bring up

00:01:40,900 --> 00:01:45,549
nothing that you can do to replace the

00:01:43,670 --> 00:01:48,799
security mechanisms that HTTP provides

00:01:45,549 --> 00:01:50,540
so we kind of had to get a bit more

00:01:48,799 --> 00:01:52,970
radical and that tipped off a lot more

00:01:50,540 --> 00:01:56,060
people so this is what Firefox 52 now

00:01:52,970 --> 00:01:58,310
does when your login pages insecure it

00:01:56,060 --> 00:02:01,040
says logins enter here could be

00:01:58,310 --> 00:02:04,310
compromised if you focus a login field

00:02:01,040 --> 00:02:08,030
or path or a password or a user name

00:02:04,310 --> 00:02:09,830
field that's already pretty heavy I

00:02:08,030 --> 00:02:11,810
would say and we've gotten a lot of

00:02:09,830 --> 00:02:12,710
complaints around that people are really

00:02:11,810 --> 00:02:16,580
freaking out

00:02:12,710 --> 00:02:20,330
around this and we're not backing off

00:02:16,580 --> 00:02:22,880
because as I mentioned so far it's been

00:02:20,330 --> 00:02:24,710
pretty successful like the numbers are

00:02:22,880 --> 00:02:27,650
dropping and the numbers of insecure

00:02:24,710 --> 00:02:29,750
HTTP users are dropping and we're pretty

00:02:27,650 --> 00:02:35,330
satisfied another part of the story is

00:02:29,750 --> 00:02:36,980
that we now show what we recently

00:02:35,330 --> 00:02:38,450
started to show warnings in the

00:02:36,980 --> 00:02:39,410
developer console when you're using

00:02:38,450 --> 00:02:42,440
these things so if you're a developer

00:02:39,410 --> 00:02:43,760
and your website is insecure you get one

00:02:42,440 --> 00:02:45,530
of these warnings so for example for

00:02:43,760 --> 00:02:46,940
mixed content for insecure passwords for

00:02:45,530 --> 00:02:50,600
weak signature algorithm like recently

00:02:46,940 --> 00:02:52,250
shot one you get a warning that hey you

00:02:50,600 --> 00:02:53,660
know you're using something insecure

00:02:52,250 --> 00:02:58,520
please click it and these are the most

00:02:53,660 --> 00:03:00,770
popularly clicked links that lead to MDM

00:02:58,520 --> 00:03:04,580
and so that people can look up you know

00:03:00,770 --> 00:03:06,980
what's wrong on my website and can you

00:03:04,580 --> 00:03:09,260
know find dogs how to fix it and you can

00:03:06,980 --> 00:03:12,470
see that the most common ones are all

00:03:09,260 --> 00:03:14,570
related to HTTPS or you know insecure

00:03:12,470 --> 00:03:19,940
HTTP which they're the most those the

00:03:14,570 --> 00:03:21,470
top four and so leading people to a

00:03:19,940 --> 00:03:23,180
website explaining that they need to

00:03:21,470 --> 00:03:25,220
update HTTPS otherwise you know the

00:03:23,180 --> 00:03:26,990
content is Borg is really nice we need

00:03:25,220 --> 00:03:29,330
to present an alternative or a way to

00:03:26,990 --> 00:03:31,520
for people to easily upgrade to HTTPS

00:03:29,330 --> 00:03:35,810
without you know paying money that's

00:03:31,520 --> 00:03:38,360
what let's encrypt is doing it's getting

00:03:35,810 --> 00:03:40,430
a lot easier to obtain free HTTPS

00:03:38,360 --> 00:03:43,040
certificates which is something that is

00:03:40,430 --> 00:03:44,330
vital for this whole story to work there

00:03:43,040 --> 00:03:46,790
are still a lot of shared hosting

00:03:44,330 --> 00:03:48,650
providers and stuff where it's not as

00:03:46,790 --> 00:03:50,360
easy a good example which is actually

00:03:48,650 --> 00:03:55,430
providing my website my personal website

00:03:50,360 --> 00:03:58,520
from working is is github pages with

00:03:55,430 --> 00:03:59,720
custom domain names so that's that

00:03:58,520 --> 00:04:03,050
doesn't work right now which is a shame

00:03:59,720 --> 00:04:04,280
but it's getting more more and let's

00:04:03,050 --> 00:04:07,130
encrypt is definitely helping with that

00:04:04,280 --> 00:04:08,480
there's also clouds there which I wasn't

00:04:07,130 --> 00:04:10,190
even sure if I should mention it because

00:04:08,480 --> 00:04:13,070
there are a lot of controversies around

00:04:10,190 --> 00:04:16,220
cloud fair and how they use or they you

00:04:13,070 --> 00:04:19,460
know how they put themselves in front of

00:04:16,220 --> 00:04:21,200
your interior page but it's also an

00:04:19,460 --> 00:04:24,350
alternative if you can't use like some

00:04:21,200 --> 00:04:25,970
fruit for example so all right I'm done

00:04:24,350 --> 00:04:27,910
right so this target doesn't really have

00:04:25,970 --> 00:04:32,120
a lot of sense I just turn on HDS

00:04:27,910 --> 00:04:34,430
there's a lot more to do so you can see

00:04:32,120 --> 00:04:36,290
that two of the most popular warnings

00:04:34,430 --> 00:04:39,470
are about mixed content what is mixed

00:04:36,290 --> 00:04:41,390
content mixed content is basically when

00:04:39,470 --> 00:04:44,150
you have a secure page and you're

00:04:41,390 --> 00:04:47,240
linking to insecure resources from your

00:04:44,150 --> 00:04:48,740
from your secure page so mixed passive

00:04:47,240 --> 00:04:51,890
content which I would like to call the

00:04:48,740 --> 00:04:53,810
bad kind is when you have an image

00:04:51,890 --> 00:04:55,940
resource for example any kind of static

00:04:53,810 --> 00:04:58,040
resource that is a link through HTTP

00:04:55,940 --> 00:05:00,380
mixed active content is a really bad

00:04:58,040 --> 00:05:03,200
kind and that is when you have dynamic

00:05:00,380 --> 00:05:04,669
content such as a script that can

00:05:03,200 --> 00:05:07,220
actually alter the content of your

00:05:04,669 --> 00:05:09,110
website so let's sort of looking at

00:05:07,220 --> 00:05:11,390
mixed passive content so mixed passive

00:05:09,110 --> 00:05:13,250
content is fine right I mean who cares

00:05:11,390 --> 00:05:18,760
if I have an insecure image on my

00:05:13,250 --> 00:05:21,800
website what is that so yeah so this is

00:05:18,760 --> 00:05:24,890
this is from a talk which a colleague of

00:05:21,800 --> 00:05:28,729
mine Lou Crouch recently held and he

00:05:24,890 --> 00:05:30,830
wanted to check the the warning that

00:05:28,729 --> 00:05:32,960
comes up when you have mixed passive

00:05:30,830 --> 00:05:35,060
content on a website and what he

00:05:32,960 --> 00:05:37,790
accidentally found and I have to say

00:05:35,060 --> 00:05:39,470
that this is basically a a random URL so

00:05:37,790 --> 00:05:41,600
it's locked out for security reasons

00:05:39,470 --> 00:05:43,430
this is a random URL that he entered and

00:05:41,600 --> 00:05:47,330
wanted to check if they have mixed

00:05:43,430 --> 00:05:49,700
passive content and this is a major

00:05:47,330 --> 00:05:51,669
Internet service another internet

00:05:49,700 --> 00:05:54,650
service provider but like a major

00:05:51,669 --> 00:05:59,000
internet platform and he found out that

00:05:54,650 --> 00:06:00,620
they actually deliver so basically you

00:05:59,000 --> 00:06:05,870
actually have access to the cookie

00:06:00,620 --> 00:06:07,240
header in there mixed content images

00:06:05,870 --> 00:06:09,770
obviously right because the browser

00:06:07,240 --> 00:06:11,060
delivers that which is really critical

00:06:09,770 --> 00:06:12,800
for their service because you can just

00:06:11,060 --> 00:06:16,490
copy the cookie and then just you know

00:06:12,800 --> 00:06:19,850
log in as you know being any website

00:06:16,490 --> 00:06:23,120
embedding that thing that's kind of yeah

00:06:19,850 --> 00:06:24,680
not cool and so be careful with mixed as

00:06:23,120 --> 00:06:28,100
a content there's usually not a big

00:06:24,680 --> 00:06:31,980
reason to have it like in my experience

00:06:28,100 --> 00:06:33,540
it's not it's usually easy to get rid of

00:06:31,980 --> 00:06:36,990
that's how we flag makes passive content

00:06:33,540 --> 00:06:40,380
the warning so you get a a gray lock

00:06:36,990 --> 00:06:42,380
with a yellow icon and you get a warning

00:06:40,380 --> 00:06:44,430
in the Euro in the developer console

00:06:42,380 --> 00:06:46,950
mixed active content is actually pretty

00:06:44,430 --> 00:06:49,020
easy to avoid because browsers block it

00:06:46,950 --> 00:06:52,020
by default so you get a green thing

00:06:49,020 --> 00:06:53,700
green log and a warning that Firefox

00:06:52,020 --> 00:06:57,090
developer edition for example has both

00:06:53,700 --> 00:06:58,800
parts of this page a good way to

00:06:57,090 --> 00:07:00,810
differentiate between mixed answer

00:06:58,800 --> 00:07:02,490
convicts active content is if you ask

00:07:00,810 --> 00:07:05,910
yourself a question can it alter the Dom

00:07:02,490 --> 00:07:07,770
if yes then it makes active content the

00:07:05,910 --> 00:07:13,740
really bad kind but that will be blocked

00:07:07,770 --> 00:07:15,390
anyway so just to summarize please move

00:07:13,740 --> 00:07:17,010
to HTTPS I'm sure a lot of you already

00:07:15,390 --> 00:07:18,510
have moved to htps but if you have a

00:07:17,010 --> 00:07:20,370
page or something you know some

00:07:18,510 --> 00:07:23,760
resources you're not sure should I move

00:07:20,370 --> 00:07:25,170
it to HTTPS just just do HTTP is for

00:07:23,760 --> 00:07:31,380
dinosaurs and you know what happened to

00:07:25,170 --> 00:07:33,780
dinosaurs they became cute conics right

00:07:31,380 --> 00:07:35,700
so assume you have moved to HTTPS you

00:07:33,780 --> 00:07:40,170
should consider turning on the so-called

00:07:35,700 --> 00:07:43,140
HSTs header which is HTTP strict

00:07:40,170 --> 00:07:45,150
Transport Security that basically says

00:07:43,140 --> 00:07:47,940
all right for that length of time

00:07:45,150 --> 00:07:50,520
I want my website to only connect

00:07:47,940 --> 00:07:53,070
through HTTP or I want the browser to

00:07:50,520 --> 00:07:54,600
only connect to my website through HTTPS

00:07:53,070 --> 00:07:57,690
so if somebody for example types

00:07:54,600 --> 00:08:00,420
explicitly types HTTP example.com in

00:07:57,690 --> 00:08:02,220
their url bar they will still get routed

00:08:00,420 --> 00:08:06,060
to the HTTPS version because you said

00:08:02,220 --> 00:08:08,580
really I want this website to be routed

00:08:06,060 --> 00:08:09,810
through HTTPS and there's also for

00:08:08,580 --> 00:08:14,090
example an option to include subdomains

00:08:09,810 --> 00:08:16,890
and that's a pretty good reasonable

00:08:14,090 --> 00:08:19,700
defense against an attack called SSL

00:08:16,890 --> 00:08:22,080
strip or a tool called SSL strip and

00:08:19,700 --> 00:08:24,570
which basically exploits the fact that

00:08:22,080 --> 00:08:29,730
you make a single HTTP connections to

00:08:24,570 --> 00:08:31,110
override all your work and yeah that is

00:08:29,730 --> 00:08:32,969
that is pretty dangerous and that's

00:08:31,110 --> 00:08:36,560
pretty good security mechanism against

00:08:32,969 --> 00:08:40,099
it and right

00:08:36,560 --> 00:08:42,259
we've made our connection secure how do

00:08:40,099 --> 00:08:44,509
we secure a web content so this is just

00:08:42,259 --> 00:08:47,329
a collection of techniques that modern

00:08:44,509 --> 00:08:48,680
browsers offer you one thing is the same

00:08:47,329 --> 00:08:50,629
origin policy it's not really a

00:08:48,680 --> 00:08:51,980
technique for you but it's rather

00:08:50,629 --> 00:08:54,649
something that the browser automatically

00:08:51,980 --> 00:08:57,410
applies so whenever you make a request

00:08:54,649 --> 00:09:00,199
to something from from one domain to

00:08:57,410 --> 00:09:02,689
another domain that you don't own then

00:09:00,199 --> 00:09:05,300
it says or doesn't process not currently

00:09:02,689 --> 00:09:09,139
navigated to then it says eh sorry we

00:09:05,300 --> 00:09:11,990
can't do that this is also yeah showing

00:09:09,139 --> 00:09:14,149
this nice little graphics basically you

00:09:11,990 --> 00:09:16,579
connect to one side side a.com and then

00:09:14,149 --> 00:09:20,809
cite a.com in your browser wants to make

00:09:16,579 --> 00:09:23,209
an XML HTTP request to site be calm but

00:09:20,809 --> 00:09:26,660
that doesn't work so that's pretty

00:09:23,209 --> 00:09:30,259
annoying and but it has its uses

00:09:26,660 --> 00:09:32,689
so what affected by same origin policy

00:09:30,259 --> 00:09:34,610
why am I telling this so xhr requests

00:09:32,689 --> 00:09:36,230
are covered window the opener windows

00:09:34,610 --> 00:09:38,629
are also covered although these are not

00:09:36,230 --> 00:09:40,309
weak fests they're technically access to

00:09:38,629 --> 00:09:41,829
a different page so in case you don't

00:09:40,309 --> 00:09:44,089
know window open or window door current

00:09:41,829 --> 00:09:45,350
these are basically objects that you

00:09:44,089 --> 00:09:48,259
receive in a website accessible

00:09:45,350 --> 00:09:51,290
accessible by j/s when you were opened

00:09:48,259 --> 00:09:54,980
by another website that means if you are

00:09:51,290 --> 00:09:56,480
in an iframe and if you have been opened

00:09:54,980 --> 00:10:00,740
by a different tab you have access to

00:09:56,480 --> 00:10:04,100
these things but only or the access is

00:10:00,740 --> 00:10:07,459
restricted if the origin of the other

00:10:04,100 --> 00:10:12,949
page is different than your origin which

00:10:07,459 --> 00:10:15,800
is also a good thing however there's one

00:10:12,949 --> 00:10:17,120
thing that is not restricted by by same

00:10:15,800 --> 00:10:20,300
origin policy and that is for example

00:10:17,120 --> 00:10:23,079
forum with post method why is that lower

00:10:20,300 --> 00:10:25,699
case anyway so it's not protected and

00:10:23,079 --> 00:10:27,230
that means you have to apply your own

00:10:25,699 --> 00:10:30,769
security mechanisms to not fall victim

00:10:27,230 --> 00:10:32,660
to basically websites embedding post

00:10:30,769 --> 00:10:36,019
forms to your website they're just

00:10:32,660 --> 00:10:37,309
randomly changing things or maliciously

00:10:36,019 --> 00:10:41,149
changing things randomly would be nice

00:10:37,309 --> 00:10:43,429
right so there's a mechanism called POF

00:10:41,149 --> 00:10:44,370
tokens for that and also more stuff I

00:10:43,429 --> 00:10:47,399
didn't have

00:10:44,370 --> 00:10:48,420
on this page I will edit in the slides

00:10:47,399 --> 00:10:50,610
that are available online

00:10:48,420 --> 00:10:54,240
so should definitely read up on theater

00:10:50,610 --> 00:10:58,829
protection if you have websites that or

00:10:54,240 --> 00:11:02,249
api's that accept posts don't rely on

00:10:58,829 --> 00:11:04,529
copies that that doesn't work it's very

00:11:02,249 --> 00:11:07,439
easy to use to say okay

00:11:04,529 --> 00:11:09,509
allow everything you know I'm in I'm in

00:11:07,439 --> 00:11:11,009
debug mode I don't I don't care I'm just

00:11:09,509 --> 00:11:13,379
you know this is this is not production

00:11:11,009 --> 00:11:14,699
and then at some point it just rolls in

00:11:13,379 --> 00:11:17,339
production because it works right and

00:11:14,699 --> 00:11:19,620
nobody really cares about it and so

00:11:17,339 --> 00:11:22,290
please think about this from day one or

00:11:19,620 --> 00:11:24,899
make a big to-do or something that this

00:11:22,290 --> 00:11:26,459
is not a good thing if you aren't on a

00:11:24,899 --> 00:11:29,129
public API and even then you should you

00:11:26,459 --> 00:11:32,759
know consider the options that X control

00:11:29,129 --> 00:11:34,170
are in office you oh yeah if you don't

00:11:32,759 --> 00:11:36,360
know this is this is a header that you

00:11:34,170 --> 00:11:39,629
can set in your request in your response

00:11:36,360 --> 00:11:45,389
to basically say which origin is allowed

00:11:39,629 --> 00:11:47,790
to access this resource right so another

00:11:45,389 --> 00:11:49,860
thing that you could oh that's really

00:11:47,790 --> 00:11:51,839
dangerous on the web is XSS attacks

00:11:49,860 --> 00:11:54,509
access s is basically cross-site

00:11:51,839 --> 00:11:57,870
scripting so an attacker inject

00:11:54,509 --> 00:12:00,480
something in your page and dad is not

00:11:57,870 --> 00:12:02,220
properly sanitized and then that

00:12:00,480 --> 00:12:03,870
contains like a script that can run and

00:12:02,220 --> 00:12:06,389
it completely wrecks your website and

00:12:03,870 --> 00:12:07,889
then if you're really unlucky persistent

00:12:06,389 --> 00:12:09,749
in some sort of database of yours and

00:12:07,889 --> 00:12:14,490
then every one of your users sees it

00:12:09,749 --> 00:12:16,499
which is really bad a good general

00:12:14,490 --> 00:12:19,350
protection against this is called CSP

00:12:16,499 --> 00:12:21,240
now I've heard a lot from people at CSP

00:12:19,350 --> 00:12:23,519
is like I had on UCSB that's overkill

00:12:21,240 --> 00:12:25,410
and I'm I'm not sure

00:12:23,519 --> 00:12:28,379
CSP in my opinion is a pretty good

00:12:25,410 --> 00:12:30,749
technology it's just kind of a set of

00:12:28,379 --> 00:12:33,389
rules that define how a site may load

00:12:30,749 --> 00:12:35,579
resources you can set it as a header in

00:12:33,389 --> 00:12:37,110
in on the server side but since we're

00:12:35,579 --> 00:12:38,879
talking about dais I just thought I'd

00:12:37,110 --> 00:12:41,850
show you how to embed it as a meta tag

00:12:38,879 --> 00:12:43,439
and that's how you do it basically you

00:12:41,850 --> 00:12:45,899
have this meter tag with the boilerplate

00:12:43,439 --> 00:12:48,779
and then the content attribute is the

00:12:45,899 --> 00:12:51,990
important thing so here for example you

00:12:48,779 --> 00:12:54,089
say that by default is the required

00:12:51,990 --> 00:12:55,560
attribute default source all resources

00:12:54,089 --> 00:12:59,220
should only be loaded from this

00:12:55,560 --> 00:13:02,279
named images may be loaded from HTTP

00:12:59,220 --> 00:13:05,670
domains and please don't use iframes

00:13:02,279 --> 00:13:08,250
that's basically what you're saying cool

00:13:05,670 --> 00:13:12,390
side effects of content security policy

00:13:08,250 --> 00:13:14,190
is that it disables inline scripts by

00:13:12,390 --> 00:13:16,950
default unless you're specifically an

00:13:14,190 --> 00:13:19,050
asset which is really bad idea so any

00:13:16,950 --> 00:13:23,580
kind of XSS that injects an inline

00:13:19,050 --> 00:13:26,010
script is not really well it has a hard

00:13:23,580 --> 00:13:27,420
time because it can either load an

00:13:26,010 --> 00:13:28,850
external resource unless you made a big

00:13:27,420 --> 00:13:34,020
mistake in your content security policy

00:13:28,850 --> 00:13:35,820
nor can it execute JavaScript there's a

00:13:34,020 --> 00:13:38,370
cool way to test what content security

00:13:35,820 --> 00:13:40,680
policy would break on your page if you

00:13:38,370 --> 00:13:42,839
said the content security policy report

00:13:40,680 --> 00:13:44,460
only header instead which basically

00:13:42,839 --> 00:13:46,320
allows you to test it without breaking

00:13:44,460 --> 00:13:48,600
things by just logging everything that

00:13:46,320 --> 00:13:52,460
you would that constitute a policy would

00:13:48,600 --> 00:13:56,010
have blocked if it were actually running

00:13:52,460 --> 00:13:58,200
in related to that is another really

00:13:56,010 --> 00:14:01,200
cool feature of CSP it allows you to

00:13:58,200 --> 00:14:03,839
record violations of the content

00:14:01,200 --> 00:14:05,910
security policy so if you specify a

00:14:03,839 --> 00:14:08,970
report URI in your content security

00:14:05,910 --> 00:14:12,060
policy you can set a URL where we just

00:14:08,970 --> 00:14:14,130
send all violations - which is my

00:14:12,060 --> 00:14:16,020
personal opinion really cool and there's

00:14:14,130 --> 00:14:17,940
even a service on HUD that supports just

00:14:16,020 --> 00:14:19,620
you know you signing up and getting all

00:14:17,940 --> 00:14:21,990
these reports called report your ID at

00:14:19,620 --> 00:14:23,910
i/o which which is also awesome because

00:14:21,990 --> 00:14:25,560
you can you know you can even have run

00:14:23,910 --> 00:14:27,089
in all report only mode and just you

00:14:25,560 --> 00:14:28,680
know check what would have been violated

00:14:27,089 --> 00:14:33,450
because website can be pretty complex so

00:14:28,680 --> 00:14:34,770
I can understand that how can I make

00:14:33,450 --> 00:14:35,970
sure that the third-party content I

00:14:34,770 --> 00:14:39,390
receive has not been changed on the

00:14:35,970 --> 00:14:41,130
server this is a common problem with if

00:14:39,390 --> 00:14:42,209
you have a CDN for example well it's not

00:14:41,130 --> 00:14:43,290
a common problem because most of the

00:14:42,209 --> 00:14:45,750
ends are pretty secure but it's a

00:14:43,290 --> 00:14:48,990
problem that many people think about

00:14:45,750 --> 00:14:52,260
when they use CDN so how can I actually

00:14:48,990 --> 00:14:54,870
trust that the CDN is delivering me the

00:14:52,260 --> 00:14:56,670
right script the right content I just

00:14:54,870 --> 00:14:58,050
you know I'm not downloading jquery from

00:14:56,670 --> 00:15:00,990
one of these popular to the ends but

00:14:58,050 --> 00:15:03,089
what happens to the internet if that CDN

00:15:00,990 --> 00:15:04,050
is compromised and jquery includes

00:15:03,089 --> 00:15:06,660
malicious code now

00:15:04,050 --> 00:15:09,160
that'd be horrible that's why a lot of

00:15:06,660 --> 00:15:10,930
CND's on their home pages now

00:15:09,160 --> 00:15:13,240
if you want to include things with a

00:15:10,930 --> 00:15:15,879
script tag now include this integrity

00:15:13,240 --> 00:15:18,339
attribute by default the integrity

00:15:15,879 --> 00:15:21,730
attribute on a script allows you to

00:15:18,339 --> 00:15:24,480
specify hey the the original source that

00:15:21,730 --> 00:15:28,779
I looked at had this hash digest

00:15:24,480 --> 00:15:31,209
basically you know this hash and I want

00:15:28,779 --> 00:15:34,990
to always receive content with this hash

00:15:31,209 --> 00:15:37,540
in the future if it does match your

00:15:34,990 --> 00:15:40,629
browser please don't allow it that's a

00:15:37,540 --> 00:15:42,069
pretty cool technology to prevent it

00:15:40,629 --> 00:15:44,680
doesn't have to be the city and even but

00:15:42,069 --> 00:15:46,629
like prevent any kind of tampering with

00:15:44,680 --> 00:15:48,879
the original source that you were

00:15:46,629 --> 00:15:51,610
downloading

00:15:48,879 --> 00:15:53,800
yeah the cross-origin thing is that

00:15:51,610 --> 00:15:57,970
basically that's a course attribute for

00:15:53,800 --> 00:16:00,879
for scripts for script tags and there's

00:15:57,970 --> 00:16:02,290
even a cool website called as RI hash

00:16:00,879 --> 00:16:03,819
the rogue which you can just use to

00:16:02,290 --> 00:16:05,829
generate the hash easily we don't even

00:16:03,819 --> 00:16:11,500
have to like go into the command line or

00:16:05,829 --> 00:16:15,639
anything okay so we've made our web

00:16:11,500 --> 00:16:18,430
content secure let's go another step up

00:16:15,639 --> 00:16:21,420
and talk about securing access to

00:16:18,430 --> 00:16:24,269
privileged device api's which is a

00:16:21,420 --> 00:16:27,880
relatively new thing I would say there's

00:16:24,269 --> 00:16:30,279
only a couple of AP is right now third

00:16:27,880 --> 00:16:33,069
or you know device storage there's some

00:16:30,279 --> 00:16:36,310
geolocation web notifications microphone

00:16:33,069 --> 00:16:38,860
camera pointer log and the screen

00:16:36,310 --> 00:16:40,120
sharing sounds like a lot but if you

00:16:38,860 --> 00:16:41,620
imagine the possibilities that devices

00:16:40,120 --> 00:16:43,360
like you know your computer or your

00:16:41,620 --> 00:16:45,160
phone have it's still you know still

00:16:43,360 --> 00:16:47,800
there's still a lot to add we could you

00:16:45,160 --> 00:16:52,410
know have raw TCP sockets bluetooth USB

00:16:47,800 --> 00:16:56,100
whatever all these things sound pretty

00:16:52,410 --> 00:16:58,329
dangerous to just expose by default like

00:16:56,100 --> 00:17:00,610
you know if you just give a website

00:16:58,329 --> 00:17:03,399
you're you know default permission to

00:17:00,610 --> 00:17:05,350
access the camera for for any user that

00:17:03,399 --> 00:17:07,809
that's just really bad because you know

00:17:05,350 --> 00:17:10,959
you could just record anyone without

00:17:07,809 --> 00:17:13,360
them really having a choice about it so

00:17:10,959 --> 00:17:17,049
we need some kind of permission system

00:17:13,360 --> 00:17:19,059
for the web to allow users to have a

00:17:17,049 --> 00:17:20,659
choice whether they want the website to

00:17:19,059 --> 00:17:22,309
be able to

00:17:20,659 --> 00:17:26,689
athletics is to the privileged API or

00:17:22,309 --> 00:17:28,339
not unfortunately so this is something

00:17:26,689 --> 00:17:31,519
that my team has worked on recently and

00:17:28,339 --> 00:17:34,009
we found that the web platform isn't

00:17:31,519 --> 00:17:35,239
really it wasn't really built with the

00:17:34,009 --> 00:17:38,029
permission system of mine or wasn't

00:17:35,239 --> 00:17:40,879
really ever build with the fact in mind

00:17:38,029 --> 00:17:43,009
that you can easily get access to like a

00:17:40,879 --> 00:17:46,580
lot of limited technologies that are

00:17:43,009 --> 00:17:49,609
only that can be very detrimental to the

00:17:46,580 --> 00:17:51,979
user privacy and security and that kind

00:17:49,609 --> 00:17:54,499
of mirrors in how the spec is written

00:17:51,979 --> 00:17:57,200
usually so it says user agent must

00:17:54,499 --> 00:18:00,409
acquire permissions through a user

00:17:57,200 --> 00:18:06,109
interface thank you that's very helpful

00:18:00,409 --> 00:18:07,669
and it's it's not really expect out how

00:18:06,109 --> 00:18:09,529
the permission the whole permission

00:18:07,669 --> 00:18:11,210
thing works so there are different ways

00:18:09,529 --> 00:18:15,169
for example to get permissions for

00:18:11,210 --> 00:18:19,309
different technologies you can you can

00:18:15,169 --> 00:18:21,349
get a camera or video that's the same

00:18:19,309 --> 00:18:22,909
thing camera or audio or screen share

00:18:21,349 --> 00:18:24,799
permissions by calling navigator dot

00:18:22,909 --> 00:18:26,029
media devices get user media and just

00:18:24,799 --> 00:18:28,820
you know specifying what you want to

00:18:26,029 --> 00:18:30,619
have this has lots of options and then

00:18:28,820 --> 00:18:32,899
that returns a promise and when the user

00:18:30,619 --> 00:18:35,659
allows the permission you get a promise

00:18:32,899 --> 00:18:38,960
back what the promise will not reject it

00:18:35,659 --> 00:18:40,009
and then fortifications that's a compute

00:18:38,960 --> 00:18:41,779
of a thing right so you call

00:18:40,009 --> 00:18:43,960
notification dot because permission and

00:18:41,779 --> 00:18:47,359
then again that's a promise and

00:18:43,960 --> 00:18:48,859
geolocation doesn't even take promise or

00:18:47,359 --> 00:18:50,690
doesn't even return a promise but it

00:18:48,859 --> 00:18:53,090
just has a callback function which you

00:18:50,690 --> 00:18:56,570
could pass and then you just you know

00:18:53,090 --> 00:18:58,659
get if there is a if the user has said

00:18:56,570 --> 00:19:01,399
okay the website can have my geolocation

00:18:58,659 --> 00:19:03,739
it's inconsistent but that's not even

00:19:01,399 --> 00:19:05,299
even the worst part of it is the worst

00:19:03,739 --> 00:19:08,779
part is actually that there's not a

00:19:05,299 --> 00:19:11,359
consistent API there just isn't to get

00:19:08,779 --> 00:19:13,999
information about whether you already

00:19:11,359 --> 00:19:16,279
have permission or not whether you saw

00:19:13,999 --> 00:19:18,559
present I think for geolocation there's

00:19:16,279 --> 00:19:20,419
no way to do that right now except using

00:19:18,559 --> 00:19:22,129
the permissions API which is like a

00:19:20,419 --> 00:19:25,549
draft that is only implemented by

00:19:22,129 --> 00:19:27,109
Firefox and it was at some point

00:19:25,549 --> 00:19:28,989
implement by Chrome but I'm not sure if

00:19:27,109 --> 00:19:31,159
a folder or not because it's not very

00:19:28,989 --> 00:19:33,440
popular it's not really gaining traction

00:19:31,159 --> 00:19:35,120
which is a bit of a

00:19:33,440 --> 00:19:39,860
and something that we as browsers I

00:19:35,120 --> 00:19:42,080
think should work on so also the the UI

00:19:39,860 --> 00:19:43,910
for it is also kind of different and so

00:19:42,080 --> 00:19:47,210
this excellent thing that we worked on

00:19:43,910 --> 00:19:49,970
recently to get Firefox in line with the

00:19:47,210 --> 00:19:52,550
other browsers in terms of UI so if you

00:19:49,970 --> 00:19:56,000
as a website request permission right

00:19:52,550 --> 00:19:57,880
now expect to have your users expect

00:19:56,000 --> 00:20:02,110
your users to have really different

00:19:57,880 --> 00:20:04,430
experiences around different browsers so

00:20:02,110 --> 00:20:06,530
currently this is actually not accurate

00:20:04,430 --> 00:20:08,360
for the like the screen shows on the

00:20:06,530 --> 00:20:10,460
very left the the screen shows for

00:20:08,360 --> 00:20:12,650
firefox and that's actually not accurate

00:20:10,460 --> 00:20:14,810
right now for 61 that's coming in 50

00:20:12,650 --> 00:20:17,570
then for 52 that coming in 53 which is

00:20:14,810 --> 00:20:21,050
out in a couple of weeks and the old

00:20:17,570 --> 00:20:24,200
version was for example not model so we

00:20:21,050 --> 00:20:25,760
converged them to be all modal and that

00:20:24,200 --> 00:20:27,080
the user can't dismiss them and in the

00:20:25,760 --> 00:20:29,090
old firefox you could dismiss it and

00:20:27,080 --> 00:20:31,340
then the website which is forever wait

00:20:29,090 --> 00:20:34,610
on the callback or the other other

00:20:31,340 --> 00:20:35,870
promise to arrive and not at any point

00:20:34,610 --> 00:20:40,130
get a reject the promise of the user

00:20:35,870 --> 00:20:43,160
just dismissed it it's it's very

00:20:40,130 --> 00:20:44,810
different around remembering permission

00:20:43,160 --> 00:20:48,350
so you have to be really careful if you

00:20:44,810 --> 00:20:49,820
request information that it's a pretty

00:20:48,350 --> 00:20:51,800
good permission request because most

00:20:49,820 --> 00:20:53,860
browsers are pretty strict about if you

00:20:51,800 --> 00:20:56,000
can ask a second time

00:20:53,860 --> 00:21:00,620
Firefox has the concept of temporary

00:20:56,000 --> 00:21:03,650
permissions now which basically blocks a

00:21:00,620 --> 00:21:06,590
permission for the duration of the tap

00:21:03,650 --> 00:21:09,380
lifetime until you navigate away so that

00:21:06,590 --> 00:21:10,730
websites don't continually spam with a

00:21:09,380 --> 00:21:11,990
permission request hey you sure you

00:21:10,730 --> 00:21:16,340
don't want to get notifications okay you

00:21:11,990 --> 00:21:18,860
said no again please please and Safari

00:21:16,340 --> 00:21:20,570
and chrome are for me personally a bit

00:21:18,860 --> 00:21:23,360
harder to understand but they do similar

00:21:20,570 --> 00:21:25,730
things like they if you continually ask

00:21:23,360 --> 00:21:26,870
for permission it doesn't work like you

00:21:25,730 --> 00:21:29,240
can't just spam the user with

00:21:26,870 --> 00:21:32,210
permissions which is a good thing

00:21:29,240 --> 00:21:36,380
because permissions have been pretty

00:21:32,210 --> 00:21:37,670
annoying recently so there are the

00:21:36,380 --> 00:21:38,720
features that are exposed to permissions

00:21:37,670 --> 00:21:41,060
are super powerful

00:21:38,720 --> 00:21:43,750
that's why malicious websites have a big

00:21:41,060 --> 00:21:47,710
interest in getting these permission

00:21:43,750 --> 00:21:50,169
and are employing tactics to basically

00:21:47,710 --> 00:21:52,330
get the permission from the user

00:21:50,169 --> 00:21:54,070
eventually by just nagging them or

00:21:52,330 --> 00:21:56,590
through tricking them into clicking it

00:21:54,070 --> 00:21:59,140
so one example of this is if you have

00:21:56,590 --> 00:22:04,240
such a permission problems a website and

00:21:59,140 --> 00:22:07,090
hire folks used to spawn a window on top

00:22:04,240 --> 00:22:09,100
of the permission and have a click

00:22:07,090 --> 00:22:10,690
target approximately whether your K

00:22:09,100 --> 00:22:13,120
button is that that actually happened

00:22:10,690 --> 00:22:16,240
and then when the user hubber did it

00:22:13,120 --> 00:22:18,070
went away and then you I don't know some

00:22:16,240 --> 00:22:19,240
people probably instinctively clicked it

00:22:18,070 --> 00:22:20,799
and then they granted the permission and

00:22:19,240 --> 00:22:24,220
then they found of geolocation I don't

00:22:20,799 --> 00:22:26,169
know why why the website was doing that

00:22:24,220 --> 00:22:27,640
but we had to implement the fix that

00:22:26,169 --> 00:22:29,919
basically as soon as the window is

00:22:27,640 --> 00:22:31,750
focused the window that sponsor

00:22:29,919 --> 00:22:33,789
permission prompt is focused the

00:22:31,750 --> 00:22:37,330
permission prompt can't be clicked for

00:22:33,789 --> 00:22:41,200
like two seconds or something so there

00:22:37,330 --> 00:22:43,659
are a lot of abusive permission costs

00:22:41,200 --> 00:22:45,309
and that's why browsers will start to

00:22:43,659 --> 00:22:47,799
penalize intrusive and surprising

00:22:45,309 --> 00:22:51,610
permission problems so chromium has an

00:22:47,799 --> 00:22:53,380
intent to implement and I think that

00:22:51,610 --> 00:22:55,809
that's linked to intend to prove and

00:22:53,380 --> 00:22:57,610
blocking permissions after you denied

00:22:55,809 --> 00:23:00,760
for the third time completely like

00:22:57,610 --> 00:23:02,470
permanently for your website and the

00:23:00,760 --> 00:23:05,049
link bug that is linked there from

00:23:02,470 --> 00:23:07,059
Firefox is the the concept of

00:23:05,049 --> 00:23:10,809
implementing temporary permissions to

00:23:07,059 --> 00:23:12,309
vlog when you've already said no so this

00:23:10,809 --> 00:23:13,659
is a really bad example just to give you

00:23:12,309 --> 00:23:16,570
a really bad example of you know how you

00:23:13,659 --> 00:23:19,480
shouldn't do things this is basically

00:23:16,570 --> 00:23:22,510
t-mobile the t-mobile home page which as

00:23:19,480 --> 00:23:24,360
soon as you browse it offers you hey Ken

00:23:22,510 --> 00:23:26,679
t-mobile come access your location

00:23:24,360 --> 00:23:28,480
you're like I think they use it for

00:23:26,679 --> 00:23:31,330
their store search or something but

00:23:28,480 --> 00:23:34,270
you're like why why would you do that

00:23:31,330 --> 00:23:38,230
and it's pretty obvious that most users

00:23:34,270 --> 00:23:39,820
will either say no or will be confused

00:23:38,230 --> 00:23:43,179
and say yes something which is also not

00:23:39,820 --> 00:23:45,940
something that we want so there is work

00:23:43,179 --> 00:23:49,059
to prevent this stuff ongoing which

00:23:45,940 --> 00:23:51,789
would probably look like following if a

00:23:49,059 --> 00:23:53,130
user did not cause an action for example

00:23:51,789 --> 00:23:56,250
click a button

00:23:53,130 --> 00:23:59,370
you may not on the permission prompts so

00:23:56,250 --> 00:24:03,210
we call it is handling user input

00:23:59,370 --> 00:24:05,060
basically that prevents spawning things

00:24:03,210 --> 00:24:07,170
right away and it also prevents spawning

00:24:05,060 --> 00:24:11,820
without any user interaction it's only

00:24:07,170 --> 00:24:14,100
you know it's a limited kind of check

00:24:11,820 --> 00:24:20,730
but at least you can prevent this from

00:24:14,100 --> 00:24:24,500
happening so a good technologies

00:24:20,730 --> 00:24:28,320
to pre prompt we pumped give the user

00:24:24,500 --> 00:24:30,780
context it tells them you know hey

00:24:28,320 --> 00:24:32,340
here's this message but we would really

00:24:30,780 --> 00:24:33,990
like to be able to alert you in the

00:24:32,340 --> 00:24:36,390
future when you receive more messages

00:24:33,990 --> 00:24:40,230
would you like to us to be able to

00:24:36,390 --> 00:24:41,880
notify you on your desktop whenever your

00:24:40,230 --> 00:24:45,810
browser's minimize or close or whatever

00:24:41,880 --> 00:24:47,580
and the user then make much more able to

00:24:45,810 --> 00:24:51,630
make a conscious choice about allowing

00:24:47,580 --> 00:24:53,520
or not allowing the permission prompt so

00:24:51,630 --> 00:24:55,380
this is a good example slack I think

00:24:53,520 --> 00:24:56,730
it's a pretty good examples slack says

00:24:55,380 --> 00:24:58,170
you know slack needs to Commission to

00:24:56,730 --> 00:24:59,520
enable there some notifications if you

00:24:58,170 --> 00:25:01,410
click the X they don't show this thing

00:24:59,520 --> 00:25:02,910
again if you click on enable desktop

00:25:01,410 --> 00:25:05,430
notifications they show the permission

00:25:02,910 --> 00:25:08,760
prompt or they ask the browser to show

00:25:05,430 --> 00:25:10,890
the permission from folder and another

00:25:08,760 --> 00:25:12,690
good example is whatsapp web it's they

00:25:10,890 --> 00:25:14,100
do that in a similar way notifications

00:25:12,690 --> 00:25:17,430
are usually pretty pretty good example

00:25:14,100 --> 00:25:19,020
of this so they say you know you can get

00:25:17,430 --> 00:25:21,150
notified when you get new messages click

00:25:19,020 --> 00:25:22,530
here and then they show the permission

00:25:21,150 --> 00:25:25,080
problem and the user can then make a

00:25:22,530 --> 00:25:27,260
choice and I think it's no coincidence

00:25:25,080 --> 00:25:31,320
that these two companies do that I think

00:25:27,260 --> 00:25:32,820
they use the testing reveals that this

00:25:31,320 --> 00:25:35,700
results in a much higher rate of

00:25:32,820 --> 00:25:37,880
acceptance from users - so do it for

00:25:35,700 --> 00:25:40,410
yourself because you want your users to

00:25:37,880 --> 00:25:42,390
accept your notification permission

00:25:40,410 --> 00:25:45,050
problems but also do it because browsers

00:25:42,390 --> 00:25:47,460
will likely force you to do it so

00:25:45,050 --> 00:25:49,530
another thing that we will probably do

00:25:47,460 --> 00:25:51,480
soon around what permission problems is

00:25:49,530 --> 00:25:54,300
which restrict permission forms for my

00:25:51,480 --> 00:25:57,600
frames because iframes are nasty to

00:25:54,300 --> 00:26:01,550
manage in browser UI so what if you you

00:25:57,600 --> 00:26:01,550
know so

00:26:02,309 --> 00:26:06,809
it's so the browser your eyes is pretty

00:26:04,379 --> 00:26:07,950
limited around security so you you know

00:26:06,809 --> 00:26:09,059
you want to put it in the main UI of the

00:26:07,950 --> 00:26:12,299
browser but you only have so much space

00:26:09,059 --> 00:26:13,950
in your browser Chrome so and you don't

00:26:12,299 --> 00:26:15,450
want to pack it with all the details

00:26:13,950 --> 00:26:19,679
around all your iframes that you've

00:26:15,450 --> 00:26:20,909
embedded around your permissions and

00:26:19,679 --> 00:26:23,549
whether they can open pop-ups and

00:26:20,909 --> 00:26:27,059
whatever so a rather easy solution to

00:26:23,549 --> 00:26:30,239
this is to just say iframes can spawn

00:26:27,059 --> 00:26:33,080
permission problems and if I were you

00:26:30,239 --> 00:26:35,489
and you are for example running a

00:26:33,080 --> 00:26:38,729
notification service embedding it with

00:26:35,489 --> 00:26:40,349
an iframe please ask them to migrate

00:26:38,729 --> 00:26:41,429
away from iframes because Chrome will

00:26:40,349 --> 00:26:44,339
soon duplicate it and we're also

00:26:41,429 --> 00:26:45,989
thinking about it all right yeah the

00:26:44,339 --> 00:26:47,729
serve the classical you know with great

00:26:45,989 --> 00:26:51,210
power comes great responsibility

00:26:47,729 --> 00:26:54,629
where permissions and and device

00:26:51,210 --> 00:26:56,249
capabilities is a really dangerous thing

00:26:54,629 --> 00:26:58,799
but it can also be used for great things

00:26:56,249 --> 00:27:04,739
like web RUC live chat screen sharing

00:26:58,799 --> 00:27:08,129
and an location access alright that kind

00:27:04,739 --> 00:27:10,399
of concludes the oh wait okay this is

00:27:08,129 --> 00:27:13,229
this these pages are completely broken

00:27:10,399 --> 00:27:17,429
so that kind of concludes our tour

00:27:13,229 --> 00:27:19,320
around secure web site just to give you

00:27:17,429 --> 00:27:21,330
another quick summary of what we what we

00:27:19,320 --> 00:27:22,979
talked about so I would really like to

00:27:21,330 --> 00:27:25,109
ask you to make sure that all your

00:27:22,979 --> 00:27:26,940
connections are secure through HTTPS

00:27:25,109 --> 00:27:28,529
please take care of your mixed content

00:27:26,940 --> 00:27:32,149
because that's also really dangerous and

00:27:28,529 --> 00:27:35,429
may break your website Sinan HSTs header

00:27:32,149 --> 00:27:39,929
we worry off cross origin restrictions

00:27:35,429 --> 00:27:41,580
when developing and be wary when you

00:27:39,929 --> 00:27:45,299
know allowing for sergeant access to

00:27:41,580 --> 00:27:47,039
your own ap is have a CSP just to just

00:27:45,299 --> 00:27:48,989
to deny the inline script notation of

00:27:47,039 --> 00:27:50,849
inline scripts nowadays just feel I deny

00:27:48,989 --> 00:27:54,389
your inline scripts on your website have

00:27:50,849 --> 00:27:57,029
a CSP and this is for some reason the

00:27:54,389 --> 00:28:02,419
rest is not this place but I'm another

00:27:57,029 --> 00:28:02,419
thing that you should absolutely do is

00:28:03,019 --> 00:28:09,379
well basically what do we talk about

00:28:09,549 --> 00:28:13,809
to some remember all more stuff secure

00:28:12,700 --> 00:28:15,639
access to device privilege we talked

00:28:13,809 --> 00:28:18,999
about this basically browsers are

00:28:15,639 --> 00:28:21,940
limiting the way that websites can

00:28:18,999 --> 00:28:24,039
access device capabilities and you

00:28:21,940 --> 00:28:25,989
should be careful when asking for

00:28:24,039 --> 00:28:27,580
permission because browsers are much

00:28:25,989 --> 00:28:29,889
more restrictive or will be much more

00:28:27,580 --> 00:28:32,679
restrictive thinking you know about the

00:28:29,889 --> 00:28:34,059
user experience and and users are much

00:28:32,679 --> 00:28:37,570
more prone to deny if you don't give

00:28:34,059 --> 00:28:39,100
proper context in your morning's right

00:28:37,570 --> 00:28:41,799
that's me

00:28:39,100 --> 00:28:56,009
I will move on and you can have

00:28:41,799 --> 00:28:56,009
questions yeah go ahead

00:28:59,580 --> 00:29:04,899
right right so this is planet like all

00:29:02,559 --> 00:29:06,580
business plan is not am i working with

00:29:04,899 --> 00:29:10,200
of it's not an official statement of

00:29:06,580 --> 00:29:10,200

YouTube URL: https://www.youtube.com/watch?v=vvZRYUBFX-8


