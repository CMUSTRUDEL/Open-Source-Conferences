Title: Lian Li: Alpha2048 - How I taught my computer to play 1024 | JSUnconf 2017
Publication date: 2017-06-23
Playlist: JSUnconf 2017
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:07,589
so I'm if you've seen me last year I'm

00:00:02,879 --> 00:00:09,510
the machine learning person and so like

00:00:07,589 --> 00:00:12,450
I said in my introduction and this is

00:00:09,510 --> 00:00:16,640
going to be about this is a use it a

00:00:12,450 --> 00:00:19,560
case study about how I went about to

00:00:16,640 --> 00:00:22,080
ride a system that will learn stuff

00:00:19,560 --> 00:00:23,789
that's the short the the float

00:00:22,080 --> 00:00:25,380
explanation I would like to walk around

00:00:23,789 --> 00:00:29,779
more but apparently I have to stay close

00:00:25,380 --> 00:00:32,969
to the microphone so this is me and this

00:00:29,779 --> 00:00:35,820
was the good old days there was last

00:00:32,969 --> 00:00:39,989
year at the json conf you can follow me

00:00:35,820 --> 00:00:41,850
on twitter on github those other the

00:00:39,989 --> 00:00:46,410
platforms that i actually look at if you

00:00:41,850 --> 00:00:48,960
want to catch up so during my day time

00:00:46,410 --> 00:00:52,320
basically I'm a software developer at

00:00:48,960 --> 00:00:54,510
dot and squander and we're startup doing

00:00:52,320 --> 00:00:56,850
a bit of travel screw a bit of Titan

00:00:54,510 --> 00:00:58,710
machine learning and we have an app so

00:00:56,850 --> 00:01:01,620
if that is that interesting for you you

00:00:58,710 --> 00:01:03,899
can talk to me about that too and but by

00:01:01,620 --> 00:01:07,680
night I'm a machine learning enthusiast

00:01:03,899 --> 00:01:11,549
so this is my hobby basically all right

00:01:07,680 --> 00:01:13,950
um let's talk about the game that we

00:01:11,549 --> 00:01:16,920
haven't googled yet even though I asked

00:01:13,950 --> 00:01:20,369
you to this is crease that's the

00:01:16,920 --> 00:01:23,610
original game basically and as you can

00:01:20,369 --> 00:01:27,299
see basically the idea is to merge one

00:01:23,610 --> 00:01:29,130
and two or multiples of three and as

00:01:27,299 --> 00:01:30,630
soon as you merge them you get a higher

00:01:29,130 --> 00:01:33,119
value get the sum of those values that

00:01:30,630 --> 00:01:35,009
you've merged and I don't know what the

00:01:33,119 --> 00:01:37,979
goal is actually is I guess it's to play

00:01:35,009 --> 00:01:41,100
as long as you can and basically you

00:01:37,979 --> 00:01:42,750
have two inputs left right up down and

00:01:41,100 --> 00:01:44,430
then every time you swipe left you will

00:01:42,750 --> 00:01:45,890
swap the entire board to the left that's

00:01:44,430 --> 00:01:49,500
the basic idea

00:01:45,890 --> 00:01:53,040
so threes came out and then suddenly for

00:01:49,500 --> 00:01:55,680
some reason I think someone implemented

00:01:53,040 --> 00:01:57,450
the simpler version of it of open source

00:01:55,680 --> 00:02:00,780
and then suddenly like all kinds of

00:01:57,450 --> 00:02:03,719
clones came up the originals 2048 and

00:02:00,780 --> 00:02:07,259
there are all kinds of 2048 likes games

00:02:03,719 --> 00:02:11,250
I think the most popular was 1024 or

00:02:07,259 --> 00:02:12,349
1024 but there are also like like this

00:02:11,250 --> 00:02:16,040
one

00:02:12,349 --> 00:02:17,810
which is pretty hard to know which one

00:02:16,040 --> 00:02:21,620
you have to merge and what it's going to

00:02:17,810 --> 00:02:23,540
be afterwards but I guess it works so

00:02:21,620 --> 00:02:25,280
but I'm going to be talking about the

00:02:23,540 --> 00:02:27,200
simplest implementation that's 2048

00:02:25,280 --> 00:02:29,389
that's just the basic you can check it

00:02:27,200 --> 00:02:32,750
out on github and it's free and runs in

00:02:29,389 --> 00:02:34,879
the browser yeah the I think the most

00:02:32,750 --> 00:02:36,980
the hardest thing actually

00:02:34,879 --> 00:02:38,540
while working on it was not to get

00:02:36,980 --> 00:02:40,669
distracted by the game also often

00:02:38,540 --> 00:02:42,499
because you're gonna just like I'm going

00:02:40,669 --> 00:02:43,519
to try this out and suddenly like 10

00:02:42,499 --> 00:02:45,079
minutes later you realize I've been

00:02:43,519 --> 00:02:48,139
playing this game for 10 minutes now I

00:02:45,079 --> 00:02:50,959
should really get to work all right

00:02:48,139 --> 00:02:52,549
um so let's look at the rules click

00:02:50,959 --> 00:02:56,239
overview just so we are all on the same

00:02:52,549 --> 00:02:59,629
page we have a four by four grid I've

00:02:56,239 --> 00:03:01,849
all seen that and each term basically

00:02:59,629 --> 00:03:05,540
you take an action which I call alpha

00:03:01,849 --> 00:03:08,329
here and alpha is zero one two or three

00:03:05,540 --> 00:03:12,409
so it's one of of this set of numbers

00:03:08,329 --> 00:03:15,290
and so you take this action and after

00:03:12,409 --> 00:03:17,930
you've moved the new tire a new toy will

00:03:15,290 --> 00:03:19,669
edit to an empty space and there is a

00:03:17,930 --> 00:03:21,979
probability distribution so there's a

00:03:19,669 --> 00:03:24,829
90% chance that the new tile is going to

00:03:21,979 --> 00:03:26,599
be 2 and there's a 10% probability that

00:03:24,829 --> 00:03:30,979
the new tile is gonna before so every

00:03:26,599 --> 00:03:34,459
time you move you get a new tile if you

00:03:30,979 --> 00:03:37,639
merge two tiles with the same value then

00:03:34,459 --> 00:03:40,069
you will get one new tile with the value

00:03:37,639 --> 00:03:42,019
of the sum of those two tiles I think

00:03:40,069 --> 00:03:45,799
you you've seen that I just written it

00:03:42,019 --> 00:03:48,079
up once more so remembered all right and

00:03:45,799 --> 00:03:50,209
then so basically there are three

00:03:48,079 --> 00:03:53,150
measurements and how how well you're

00:03:50,209 --> 00:03:55,009
doing you lose when there are no more

00:03:53,150 --> 00:03:56,750
moves possible because they were borders

00:03:55,009 --> 00:04:00,739
full and you can move anywhere to merge

00:03:56,750 --> 00:04:05,780
anything and you win when you have one

00:04:00,739 --> 00:04:07,790
tile with 2048 present or let 1024 in

00:04:05,780 --> 00:04:12,019
the other game or like the rainbow dog

00:04:07,790 --> 00:04:13,909
with the dog game and then there's

00:04:12,019 --> 00:04:16,669
additional a thing that's called the

00:04:13,909 --> 00:04:20,510
score and the score is basically every

00:04:16,669 --> 00:04:22,969
time you merge two tiles then the sum of

00:04:20,510 --> 00:04:24,620
those two tiles the added to the score

00:04:22,969 --> 00:04:25,310
so basically every time you merge

00:04:24,620 --> 00:04:28,220
something

00:04:25,310 --> 00:04:31,250
score gets updated at gets higher so

00:04:28,220 --> 00:04:33,260
these are the basic set of rules and so

00:04:31,250 --> 00:04:35,150
I basically just started as thinking

00:04:33,260 --> 00:04:38,389
okay first thing the most important

00:04:35,150 --> 00:04:40,550
thing is the name after 2048 of course

00:04:38,389 --> 00:04:42,530
it's the pun it's a reference to alphago

00:04:40,550 --> 00:04:43,850
they would stick the most important

00:04:42,530 --> 00:04:44,419
thing and once I got the name I was like

00:04:43,850 --> 00:04:48,560
okay mo

00:04:44,419 --> 00:04:50,990
I'm all set now the second thing was

00:04:48,560 --> 00:04:53,630
that it has to be JavaScript because I

00:04:50,990 --> 00:04:55,580
really like JavaScript it's easy to

00:04:53,630 --> 00:04:57,350
setup it just runs you can run it in the

00:04:55,580 --> 00:04:59,720
browser you can run with notes so it was

00:04:57,350 --> 00:05:02,450
just just to simplify things basically

00:04:59,720 --> 00:05:05,060
and then the other thing was that it

00:05:02,450 --> 00:05:06,560
needs to be supervised and so basically

00:05:05,060 --> 00:05:09,500
supervised learning means that I'm

00:05:06,560 --> 00:05:11,570
teaching my machine something where I

00:05:09,500 --> 00:05:13,460
already know the correct answer I

00:05:11,570 --> 00:05:16,160
already know what I want my machine to

00:05:13,460 --> 00:05:17,570
predict for me so I'm gonna I'm telling

00:05:16,160 --> 00:05:20,330
my machine ok if you get this set of

00:05:17,570 --> 00:05:22,970
inputs I'm expecting this output the

00:05:20,330 --> 00:05:24,770
other thing I'm supervised learning you

00:05:22,970 --> 00:05:25,970
just tell the machine do you see a

00:05:24,770 --> 00:05:28,280
pattern here but I don't know the

00:05:25,970 --> 00:05:32,840
pattern so supervised because we know

00:05:28,280 --> 00:05:37,130
when we get to 2048 we be win all right

00:05:32,840 --> 00:05:38,780
so I was I started with a library those

00:05:37,130 --> 00:05:40,220
of you who see me give the talk last

00:05:38,780 --> 00:05:42,940
year you already know it it's called

00:05:40,220 --> 00:05:45,950
synaptic and blue because it's the link

00:05:42,940 --> 00:05:51,620
and kinetic is a neuro Network library

00:05:45,950 --> 00:05:52,940
for JavaScript oh yeah so I don't know

00:05:51,620 --> 00:05:54,680
neuro networks I think you've heard of

00:05:52,940 --> 00:05:56,720
it I'm not going to explain it it's just

00:05:54,680 --> 00:05:58,210
it's doing machine learning magic that's

00:05:56,720 --> 00:06:04,510
why I don't know

00:05:58,210 --> 00:06:07,160
and so the what synaptic does is does

00:06:04,510 --> 00:06:09,979
classification which means it classifies

00:06:07,160 --> 00:06:12,620
words in the end you get either either 0

00:06:09,979 --> 00:06:15,860
or 1 for whatever you want to predict so

00:06:12,620 --> 00:06:17,900
you can't predict numbers per se that

00:06:15,860 --> 00:06:19,910
would be called regression so you can't

00:06:17,900 --> 00:06:21,770
predict like if I make this move what

00:06:19,910 --> 00:06:23,510
will my score be so it has to be

00:06:21,770 --> 00:06:26,680
something the thing you want to predict

00:06:23,510 --> 00:06:30,470
has to be something between 0 or 1 or

00:06:26,680 --> 00:06:33,409
true or false respectively so yeah and

00:06:30,470 --> 00:06:36,050
then of course I have prior experience

00:06:33,409 --> 00:06:38,150
with synaptic that's also linked to the

00:06:36,050 --> 00:06:42,800
product I showed last year it was

00:06:38,150 --> 00:06:45,050
a soccer result predictor thing so that

00:06:42,800 --> 00:06:47,150
was basically the reasons why child with

00:06:45,050 --> 00:06:48,920
synaptic I already knew everything and

00:06:47,150 --> 00:06:55,810
then yeah I had a pretty good idea what

00:06:48,920 --> 00:06:59,780
I wanted to so um yeah first iteration

00:06:55,810 --> 00:07:03,170
so first I'm basically trying to sign

00:06:59,780 --> 00:07:05,480
out what is it that I want to do

00:07:03,170 --> 00:07:07,790
actually what is it that I want to teach

00:07:05,480 --> 00:07:09,080
my machine or what what is the first

00:07:07,790 --> 00:07:11,960
step I need to do right now

00:07:09,080 --> 00:07:15,320
so the first step I thought for gather

00:07:11,960 --> 00:07:18,950
data we I need some kind of data and the

00:07:15,320 --> 00:07:22,670
idea was that basically you I try to

00:07:18,950 --> 00:07:26,120
predict the next the best possible move

00:07:22,670 --> 00:07:30,410
for every turn basically so the way I

00:07:26,120 --> 00:07:33,200
went to do that was to simulate all

00:07:30,410 --> 00:07:34,700
actions so if I have a board say let's

00:07:33,200 --> 00:07:36,470
say that's the first day that I've and

00:07:34,700 --> 00:07:39,500
starting to play the game then I'm going

00:07:36,470 --> 00:07:42,350
to simulate all possible actions so four

00:07:39,500 --> 00:07:44,720
of them and then afterwards I'm going to

00:07:42,350 --> 00:07:46,190
check dipper score increase so basically

00:07:44,720 --> 00:07:47,870
when I swipe left with the score

00:07:46,190 --> 00:07:50,750
increase when I swipe up to the score

00:07:47,870 --> 00:07:53,960
increase blah blah blah and then after I

00:07:50,750 --> 00:07:56,210
did that I actually just made a random

00:07:53,960 --> 00:07:58,880
move for the game so first I simulate

00:07:56,210 --> 00:08:00,710
and then I just make a random move I

00:07:58,880 --> 00:08:02,240
could have of course just checked where

00:08:00,710 --> 00:08:03,980
does the score increase and make that

00:08:02,240 --> 00:08:06,800
move but I wanted to start random

00:08:03,980 --> 00:08:10,700
because I wanted to see how well my

00:08:06,800 --> 00:08:13,040
algorithm basically performed against

00:08:10,700 --> 00:08:14,900
this randomly moving and you would be

00:08:13,040 --> 00:08:18,440
surprised if it will random move you

00:08:14,900 --> 00:08:20,540
will get to like 256 every tenth time so

00:08:18,440 --> 00:08:24,470
like you can just play it randomly don't

00:08:20,540 --> 00:08:26,240
look at it it's pretty good so um yeah

00:08:24,470 --> 00:08:29,870
this is basically what my data set

00:08:26,240 --> 00:08:32,780
looked like board state was my input

00:08:29,870 --> 00:08:36,200
that's a serialized state of the board

00:08:32,780 --> 00:08:39,350
so I just have like I just I count from

00:08:36,200 --> 00:08:41,120
left upper left to down right basically

00:08:39,350 --> 00:08:43,760
and then it's zero to zero I don't know

00:08:41,120 --> 00:08:47,240
one and then just goes on as this is a

00:08:43,760 --> 00:08:50,590
16 different element of course and the

00:08:47,240 --> 00:08:53,170
actions those are basically bulls that

00:08:50,590 --> 00:08:55,029
say if the score has increased after

00:08:53,170 --> 00:08:56,710
making this value so basically I'm

00:08:55,029 --> 00:09:00,730
saying I have this board state right now

00:08:56,710 --> 00:09:02,980
and for each action I took this is what

00:09:00,730 --> 00:09:04,870
happened to the score zero is the score

00:09:02,980 --> 00:09:08,440
didn't increase one means that a score

00:09:04,870 --> 00:09:12,730
increased so I guess that's pretty clear

00:09:08,440 --> 00:09:14,860
what I mean yes okay all right so I

00:09:12,730 --> 00:09:18,940
played I like I know I similar they're

00:09:14,860 --> 00:09:21,130
like 100 games or so and then I was like

00:09:18,940 --> 00:09:23,560
okay I have I have data now I think

00:09:21,130 --> 00:09:27,339
that's going to going to give me like a

00:09:23,560 --> 00:09:33,190
good indicator whether my idea is

00:09:27,339 --> 00:09:35,589
working on so second iteration this time

00:09:33,190 --> 00:09:38,320
the goal was to compare the trend

00:09:35,589 --> 00:09:41,950
network with the unfriend or with a

00:09:38,320 --> 00:09:43,660
random decision maker and so of course

00:09:41,950 --> 00:09:46,690
the first thing I need to do is train a

00:09:43,660 --> 00:09:48,580
neural network and basically the way you

00:09:46,690 --> 00:09:50,200
go about training a neural network is

00:09:48,580 --> 00:09:52,660
just give it the input give it the

00:09:50,200 --> 00:09:56,770
output and then let it run a lot of time

00:09:52,660 --> 00:10:00,100
so it will slowly hopefully recognize

00:09:56,770 --> 00:10:03,220
the pattern behind the stuff you want to

00:10:00,100 --> 00:10:05,560
predict and then so after it

00:10:03,220 --> 00:10:07,450
strengthened your network I will use

00:10:05,560 --> 00:10:09,520
that network to predict whether the

00:10:07,450 --> 00:10:12,580
score increases are not for each of the

00:10:09,520 --> 00:10:14,710
possible actions and then in the game

00:10:12,580 --> 00:10:16,660
itself I'm going to move make the move

00:10:14,710 --> 00:10:19,300
where the probability that the score

00:10:16,660 --> 00:10:22,330
will actually increase is the highest

00:10:19,300 --> 00:10:23,620
that's pretty straight forward so I'm

00:10:22,330 --> 00:10:24,910
not gonna I'm not going to show you any

00:10:23,620 --> 00:10:27,520
data on this because it was pretty

00:10:24,910 --> 00:10:30,070
boring and wasn't like there's nothing

00:10:27,520 --> 00:10:32,550
to see I just save them into couch and I

00:10:30,070 --> 00:10:36,040
came up with some several metrics but

00:10:32,550 --> 00:10:38,410
the conclusion basically to make it

00:10:36,040 --> 00:10:40,390
short was that it didn't work all too

00:10:38,410 --> 00:10:43,360
great I think it was a little bit better

00:10:40,390 --> 00:10:45,850
than doing it randomly but there was no

00:10:43,360 --> 00:10:48,459
I see that the game is actually being

00:10:45,850 --> 00:10:50,680
played in a in a meaningful well I guys

00:10:48,459 --> 00:10:52,209
liked my I don't think the algorithm

00:10:50,680 --> 00:10:55,360
actually understood what this game was

00:10:52,209 --> 00:10:57,970
about and I think the reason why I was

00:10:55,360 --> 00:11:00,220
like that is that it it focused only on

00:10:57,970 --> 00:11:02,740
the next state so it was basically only

00:11:00,220 --> 00:11:05,290
predicting whether

00:11:02,740 --> 00:11:07,300
we'll increase the score for the next

00:11:05,290 --> 00:11:09,399
state but it didn't have like the

00:11:07,300 --> 00:11:12,970
foresight to check whether this will be

00:11:09,399 --> 00:11:14,560
good for the for the whole game so what

00:11:12,970 --> 00:11:16,450
I needed was some kind of machine

00:11:14,560 --> 00:11:18,610
learning method that had had more

00:11:16,450 --> 00:11:20,649
foresight that would be able to see that

00:11:18,610 --> 00:11:22,180
it's not only one move but it's like a

00:11:20,649 --> 00:11:24,250
series of moves and then at the end

00:11:22,180 --> 00:11:25,779
that's the most important state

00:11:24,250 --> 00:11:31,149
basically did you win or did you lose

00:11:25,779 --> 00:11:33,820
all right so I looked around a bit

00:11:31,149 --> 00:11:36,490
really I just had to ask myself do I

00:11:33,820 --> 00:11:39,010
want to keep using synaptic and the

00:11:36,490 --> 00:11:42,640
specification network and try to come up

00:11:39,010 --> 00:11:44,290
with better better inputs and stuff like

00:11:42,640 --> 00:11:46,440
that or do I want to scrap it and do

00:11:44,290 --> 00:11:50,320
something completely different and

00:11:46,440 --> 00:11:51,940
thankfully my husband who wanted to do

00:11:50,320 --> 00:11:54,910
the ghost day I think button he didn't

00:11:51,940 --> 00:11:57,300
and he helped me a little bit with it

00:11:54,910 --> 00:12:00,370
and then he introduced me basically to

00:11:57,300 --> 00:12:04,270
nice methods that were perfect for my

00:12:00,370 --> 00:12:06,610
use case and basically it's about

00:12:04,270 --> 00:12:09,160
reinforcement learning reinforcement

00:12:06,610 --> 00:12:10,930
learning as the name already says is

00:12:09,160 --> 00:12:13,990
basically that you instead of giving

00:12:10,930 --> 00:12:16,209
your system a value at the end you will

00:12:13,990 --> 00:12:18,010
just tell it this is slightly better or

00:12:16,209 --> 00:12:21,250
this is slightly worse so it's not like

00:12:18,010 --> 00:12:22,839
like a full like a 1 or a 0 it's just

00:12:21,250 --> 00:12:25,750
like oh this is pretty good or this is

00:12:22,839 --> 00:12:30,870
not as good the reinforcement learning

00:12:25,750 --> 00:12:33,670
makes use of like two or three different

00:12:30,870 --> 00:12:36,339
strategies basically and the first one

00:12:33,670 --> 00:12:37,779
is called Markov decision process and I

00:12:36,339 --> 00:12:40,270
don't know maybe you've heard of the

00:12:37,779 --> 00:12:42,910
Markov chain the Markov chain is

00:12:40,270 --> 00:12:44,589
basically it is a defined chain of

00:12:42,910 --> 00:12:46,870
states and actions so you have a state

00:12:44,589 --> 00:12:48,790
and that state has one possible action

00:12:46,870 --> 00:12:50,890
then it will lead you to another state

00:12:48,790 --> 00:12:53,140
and that's it will have another possible

00:12:50,890 --> 00:12:56,680
action it's a stochastic model so

00:12:53,140 --> 00:12:58,480
there's like the one action that it's

00:12:56,680 --> 00:13:02,440
going to take is like the one that is

00:12:58,480 --> 00:13:04,570
probably probable if the higher has the

00:13:02,440 --> 00:13:07,899
highest probability of being taken but

00:13:04,570 --> 00:13:09,490
this is one defined chain and there's no

00:13:07,899 --> 00:13:10,850
decision-making in it because the chain

00:13:09,490 --> 00:13:12,679
has already existed from

00:13:10,850 --> 00:13:14,089
from the beginning and the Markov

00:13:12,679 --> 00:13:17,239
decision process is basically an

00:13:14,089 --> 00:13:19,939
enhancement of that chain so it if you

00:13:17,239 --> 00:13:22,759
take if we take a decision process you

00:13:19,939 --> 00:13:26,629
have the rewards and the end and you

00:13:22,759 --> 00:13:28,759
have possible directions and the

00:13:26,629 --> 00:13:32,689
decision process basically decides which

00:13:28,759 --> 00:13:34,429
action is going to take or if you say

00:13:32,689 --> 00:13:37,279
the other way around if you take a mark

00:13:34,429 --> 00:13:40,819
of the certain process and only give the

00:13:37,279 --> 00:13:42,319
reward 0 and if you only have one action

00:13:40,819 --> 00:13:47,299
then it's the same as a Markov chain

00:13:42,319 --> 00:13:49,459
that's basically the the thing then the

00:13:47,299 --> 00:13:50,839
other nice thing for reinforcement

00:13:49,459 --> 00:13:52,579
learning is that it can deal with the

00:13:50,839 --> 00:13:55,009
delayed reward so you can have a lot of

00:13:52,579 --> 00:13:57,199
states and actions and then give a

00:13:55,009 --> 00:13:59,749
reward at the end of the of the chain

00:13:57,199 --> 00:14:01,429
basically that's nice because then you

00:13:59,749 --> 00:14:03,829
can tell your system that this is like a

00:14:01,429 --> 00:14:07,249
chain and then in the end the end of

00:14:03,829 --> 00:14:09,589
that thing that actually matters so this

00:14:07,249 --> 00:14:14,839
is actually perfect for games or for my

00:14:09,589 --> 00:14:16,549
case and so the one thing that is

00:14:14,839 --> 00:14:19,789
basically the the challenge of

00:14:16,549 --> 00:14:22,729
reinforcement learning is exploration

00:14:19,789 --> 00:14:26,769
versus exploitation and what that means

00:14:22,729 --> 00:14:28,850
is that so on the one hand all the

00:14:26,769 --> 00:14:31,489
experience that your machine gets

00:14:28,850 --> 00:14:34,879
especially from the machine playing so

00:14:31,489 --> 00:14:36,319
it plays and while it plays it learns so

00:14:34,879 --> 00:14:38,509
you want to have a lot of different

00:14:36,319 --> 00:14:40,220
kinds of datasets so it will learn new

00:14:38,509 --> 00:14:42,559
stuff we learn different stuff learn

00:14:40,220 --> 00:14:44,689
different ways to go but on the other

00:14:42,559 --> 00:14:46,279
hand you also want your machine to do

00:14:44,689 --> 00:14:47,809
the best possible moves that are knows

00:14:46,279 --> 00:14:50,779
of so you got to balance those things

00:14:47,809 --> 00:14:53,029
like just don't be too random but also

00:14:50,779 --> 00:14:58,489
don't only stick to the stuff you

00:14:53,029 --> 00:15:00,829
already know all right and then there's

00:14:58,489 --> 00:15:03,379
some another machine learning method

00:15:00,829 --> 00:15:05,600
that's more it's like more concrete and

00:15:03,379 --> 00:15:08,179
also something that is basically perfect

00:15:05,600 --> 00:15:12,199
for my use case it's called temporal

00:15:08,179 --> 00:15:13,579
difference learning and the thing about

00:15:12,199 --> 00:15:15,949
temporal distance learning is basically

00:15:13,579 --> 00:15:17,569
that is it knows that there is a state

00:15:15,949 --> 00:15:19,430
in the end and there are states and

00:15:17,569 --> 00:15:22,040
actions that precede this end

00:15:19,430 --> 00:15:25,220
and it will slowly learn how those

00:15:22,040 --> 00:15:27,830
states before can influence the state in

00:15:25,220 --> 00:15:29,660
the end and also get that maybe he liked

00:15:27,830 --> 00:15:31,910
the the begins there's a pretty

00:15:29,660 --> 00:15:34,220
important which moves you make but the

00:15:31,910 --> 00:15:36,740
the the ones to what the end are not as

00:15:34,220 --> 00:15:38,420
important anymore so those are things

00:15:36,740 --> 00:15:42,260
that the temporal difference learning

00:15:38,420 --> 00:15:46,550
deals with and there's also two

00:15:42,260 --> 00:15:48,620
basically two strategies you need to

00:15:46,550 --> 00:15:51,860
understand the first one is dynamic

00:15:48,620 --> 00:15:53,420
programming so utilize dynamic

00:15:51,860 --> 00:15:55,190
programming which basically just means

00:15:53,420 --> 00:15:57,380
dividing your big problem into

00:15:55,190 --> 00:15:58,670
subproblems so you have like this whole

00:15:57,380 --> 00:16:02,200
chain and you're dividing it into

00:15:58,670 --> 00:16:04,790
smaller units of problems to solve and

00:16:02,200 --> 00:16:08,330
the other thing that it makes use of is

00:16:04,790 --> 00:16:10,490
called the Monte Carlo method the Monte

00:16:08,330 --> 00:16:13,610
Carlo method is is a heuristic search

00:16:10,490 --> 00:16:16,339
tree more or less you have like a tree

00:16:13,610 --> 00:16:18,140
where you say okay from this stage I

00:16:16,339 --> 00:16:19,850
have four different actions and this

00:16:18,140 --> 00:16:21,830
will lead me to this state and so on and

00:16:19,850 --> 00:16:25,490
so on and at the end of the tree you

00:16:21,830 --> 00:16:30,050
have values which are our rewards so

00:16:25,490 --> 00:16:31,970
every time we tell our algorithm to

00:16:30,050 --> 00:16:34,820
predict something it will look into the

00:16:31,970 --> 00:16:37,310
tree and look basically do I have a

00:16:34,820 --> 00:16:39,200
reward for this exact scenario if not

00:16:37,310 --> 00:16:41,900
I'm going to choose a scenario that is

00:16:39,200 --> 00:16:43,850
close to it and has give me a high value

00:16:41,900 --> 00:16:47,600
so basically what temporal disinterring

00:16:43,850 --> 00:16:50,870
does is it combines a heuristic like

00:16:47,600 --> 00:16:53,420
search algorithm with machine learning

00:16:50,870 --> 00:16:56,420
because it does if it doesn't find the

00:16:53,420 --> 00:16:59,089
exact reward it will approximate it by

00:16:56,420 --> 00:17:03,110
the other data it already has and it's

00:16:59,089 --> 00:17:03,320
also ha alphago did a lot of stuff all

00:17:03,110 --> 00:17:07,130
right

00:17:03,320 --> 00:17:09,949
and so I googled like any good developer

00:17:07,130 --> 00:17:11,780
would do and what I found was a library

00:17:09,949 --> 00:17:14,449
called reinforced days yes there is

00:17:11,780 --> 00:17:16,040
actually a reinforcement library for

00:17:14,449 --> 00:17:19,300
JavaScript which is pretty awesome

00:17:16,040 --> 00:17:21,949
because it also runs in the browser and

00:17:19,300 --> 00:17:23,959
reinforced us was written by a guy I

00:17:21,949 --> 00:17:28,400
forget his first name but his last name

00:17:23,959 --> 00:17:29,660
at Kapaa team and he based it on a paper

00:17:28,400 --> 00:17:32,540
on a scientific

00:17:29,660 --> 00:17:35,900
for where people solve at hari games

00:17:32,540 --> 00:17:38,240
with reinforcement learning a temporal

00:17:35,900 --> 00:17:42,020
difference L&Q learning and that's

00:17:38,240 --> 00:17:44,080
pretty cool so I was like yeah okay this

00:17:42,020 --> 00:17:46,040
is perfect and it's also the only

00:17:44,080 --> 00:17:48,440
reinforcement library for JavaScript I

00:17:46,040 --> 00:17:50,600
didn't really have a choice

00:17:48,440 --> 00:17:53,300
alright so the code then I'm going to

00:17:50,600 --> 00:17:56,930
show you is that's basically the code so

00:17:53,300 --> 00:18:00,020
you have the state but before it's a

00:17:56,930 --> 00:18:02,390
civilized state then you ask the agent

00:18:00,020 --> 00:18:05,090
the agent is from the library you ask it

00:18:02,390 --> 00:18:08,120
to act on this state the agent will

00:18:05,090 --> 00:18:13,580
return an action this action is zero one

00:18:08,120 --> 00:18:14,870
two or three and then you do the action

00:18:13,580 --> 00:18:16,640
it's like this is hidden in the

00:18:14,870 --> 00:18:18,620
calculate what they expected you you

00:18:16,640 --> 00:18:20,510
take the action and then you will give

00:18:18,620 --> 00:18:23,480
it a reward and say learn from this

00:18:20,510 --> 00:18:25,070
reward of course like I said this is one

00:18:23,480 --> 00:18:26,930
state one action you can do a lot of

00:18:25,070 --> 00:18:30,290
actions and then give a reward in the

00:18:26,930 --> 00:18:34,010
end like i did i get it i gave my system

00:18:30,290 --> 00:18:36,530
a reward at the end of the alpha game so

00:18:34,010 --> 00:18:39,560
basically when I use this everything

00:18:36,530 --> 00:18:41,960
that I have to do it boils down to what

00:18:39,560 --> 00:18:44,270
reward should I get like the whole model

00:18:41,960 --> 00:18:45,590
stuff is basically all in this reward

00:18:44,270 --> 00:18:48,620
that's the only thing I need to take

00:18:45,590 --> 00:18:50,780
care of so okay I'm going to work in

00:18:48,620 --> 00:18:54,260
iteration because that's the easiest for

00:18:50,780 --> 00:18:57,200
me so first iteration I decided that do

00:18:54,260 --> 00:18:58,850
the simplest thing just give it the

00:18:57,200 --> 00:19:00,860
score as a reward so I don't need to

00:18:58,850 --> 00:19:03,080
implement anything myself and the score

00:19:00,860 --> 00:19:04,870
like I said it's better the more you

00:19:03,080 --> 00:19:11,360
merge so that's a pretty good indicator

00:19:04,870 --> 00:19:14,060
all right um yes this is my graph honor

00:19:11,360 --> 00:19:16,940
and as you can see there's really not

00:19:14,060 --> 00:19:19,930
that much happening if we check the

00:19:16,940 --> 00:19:23,030
average it's really not there's like

00:19:19,930 --> 00:19:25,490
yeah it's higher here and average but

00:19:23,030 --> 00:19:28,760
then it drops down a lot so there's not

00:19:25,490 --> 00:19:32,330
really like learning intelligence that

00:19:28,760 --> 00:19:34,090
that I could actually see there so like

00:19:32,330 --> 00:19:36,310
okay I tried it doesn't work that great

00:19:34,090 --> 00:19:39,720
let's just try to find another

00:19:36,310 --> 00:19:43,759
reinforcement value or reward value

00:19:39,720 --> 00:19:46,980
to see if there's like something better

00:19:43,759 --> 00:19:49,409
okay um so second iteration was

00:19:46,980 --> 00:19:52,110
basically the the task of finding a

00:19:49,409 --> 00:19:53,700
better value because I was I believed in

00:19:52,110 --> 00:19:55,350
the library I thought it was the correct

00:19:53,700 --> 00:19:58,440
library just my reward wasn't that great

00:19:55,350 --> 00:20:01,710
so I came up with the string tile rating

00:19:58,440 --> 00:20:05,340
and the tile rating was the sum of all

00:20:01,710 --> 00:20:06,899
values divided by the tile count and of

00:20:05,340 --> 00:20:09,960
course everywhere where there's no tile

00:20:06,899 --> 00:20:12,000
in my serialize area is zero but there's

00:20:09,960 --> 00:20:13,470
actually no tile and those of course

00:20:12,000 --> 00:20:16,649
don't count otherwise you always have to

00:20:13,470 --> 00:20:23,070
divide by 16 so what's different between

00:20:16,649 --> 00:20:36,629
the rating and the score if you just

00:20:23,070 --> 00:20:41,429
doesn't I'm sorry okay okay well this

00:20:36,629 --> 00:20:44,100
one working very well so you didn't see

00:20:41,429 --> 00:20:45,690
any of this of course you don't know so

00:20:44,100 --> 00:20:49,830
when we start let's say this is our

00:20:45,690 --> 00:20:51,450
starting situation and then this is our

00:20:49,830 --> 00:20:52,889
board we have a score of zero because we

00:20:51,450 --> 00:20:55,529
just started the game the rating is two

00:20:52,889 --> 00:20:58,259
point five because we have some the some

00:20:55,529 --> 00:21:00,960
of the ties is 10 and you divided by 4

00:20:58,259 --> 00:21:03,960
that's 2 point 5 when we now make a move

00:21:00,960 --> 00:21:06,960
to the left I'd say this is the most of

00:21:03,960 --> 00:21:10,049
that the two upper the twos have merged

00:21:06,960 --> 00:21:12,240
into a 4 and the 4 that I that has a

00:21:10,049 --> 00:21:15,360
green frame is the new 4 so this is a

00:21:12,240 --> 00:21:18,509
tie that's what was added after the

00:21:15,360 --> 00:21:20,159
action was taken to the single time what

00:21:18,509 --> 00:21:22,679
we have now is we have a score of 4

00:21:20,159 --> 00:21:25,379
because we merged those twos and we have

00:21:22,679 --> 00:21:27,059
a rating of 3.5 so okay rating goes up

00:21:25,379 --> 00:21:30,149
when you merge something and it also

00:21:27,059 --> 00:21:33,559
goes up when when you ties are in it now

00:21:30,149 --> 00:21:37,139
if you for example instead move down

00:21:33,559 --> 00:21:41,180
what you have now is that the tools were

00:21:37,139 --> 00:21:45,530
not merged they're like the truth

00:21:41,180 --> 00:21:48,080
the bottom row and the fourth new of

00:21:45,530 --> 00:21:50,210
course and now this time we have a score

00:21:48,080 --> 00:21:51,980
of zero and the ratings two point eight

00:21:50,210 --> 00:21:54,980
so the rating has changed the score

00:21:51,980 --> 00:21:57,080
hasn't changed so that was basically my

00:21:54,980 --> 00:22:00,080
idea was well it's a little bit

00:21:57,080 --> 00:22:02,450
different and so maybe that might be

00:22:00,080 --> 00:22:04,100
better for some reasons I wasn't

00:22:02,450 --> 00:22:07,190
entirely sure I just want to try

00:22:04,100 --> 00:22:09,020
something else also it's thinking if you

00:22:07,190 --> 00:22:10,880
don't win because in the end it's about

00:22:09,020 --> 00:22:15,110
do you win the game until you lose the

00:22:10,880 --> 00:22:17,480
game and if like all the games you play

00:22:15,110 --> 00:22:19,490
are basically all losers then there's

00:22:17,480 --> 00:22:21,470
really no point in giving the reward

00:22:19,490 --> 00:22:24,110
back because always the same reward as

00:22:21,470 --> 00:22:27,500
thinking the next best thing is the

00:22:24,110 --> 00:22:29,330
highest sum of tires but with the lowest

00:22:27,500 --> 00:22:32,450
number of tires that's basically if you

00:22:29,330 --> 00:22:35,060
just look at one single stage one that

00:22:32,450 --> 00:22:37,220
has like a higher value but lowers low

00:22:35,060 --> 00:22:39,890
lower number of tires would be better

00:22:37,220 --> 00:22:42,770
than a board with a lot of numbers that

00:22:39,890 --> 00:22:45,050
they're all like two or four okay so

00:22:42,770 --> 00:22:47,390
this was the idea behind the rating I

00:22:45,050 --> 00:22:49,220
tried it it wasn't that great it kind of

00:22:47,390 --> 00:22:53,060
looked like the score before so I tried

00:22:49,220 --> 00:22:55,310
other things and I came up with this

00:22:53,060 --> 00:22:57,230
where the reward was basically the score

00:22:55,310 --> 00:22:59,150
divided by the ever score times the

00:22:57,230 --> 00:23:02,030
rating divided by the average rating and

00:22:59,150 --> 00:23:04,190
the ever which was taken from the last

00:23:02,030 --> 00:23:06,410
hundred game so it was not the complete

00:23:04,190 --> 00:23:08,920
average it was just the last hundred two

00:23:06,410 --> 00:23:15,320
if there is a tendency so that we can

00:23:08,920 --> 00:23:18,200
use it all right and so then what I was

00:23:15,320 --> 00:23:21,260
seeing there was basically that okay the

00:23:18,200 --> 00:23:24,470
yellow line always looks like it doesn't

00:23:21,260 --> 00:23:26,480
move but that's because the values are

00:23:24,470 --> 00:23:29,420
pretty high up there it goes of five

00:23:26,480 --> 00:23:32,000
point five almost so um but if we look

00:23:29,420 --> 00:23:34,670
at the average okay I was shaking a

00:23:32,000 --> 00:23:38,120
little bit because I increase the time

00:23:34,670 --> 00:23:41,150
so it's like one value per hour but that

00:23:38,120 --> 00:23:43,490
was just so I could see does that is

00:23:41,150 --> 00:23:45,590
there anything happening and it looks

00:23:43,490 --> 00:23:47,800
like actually there is some intelligence

00:23:45,590 --> 00:23:49,820
that like the score does go up over time

00:23:47,800 --> 00:23:52,400
which could be an indicator that we're

00:23:49,820 --> 00:23:54,360
getting better but I'm not pretty sure

00:23:52,400 --> 00:23:56,250
because as we've seen before

00:23:54,360 --> 00:23:57,860
sometimes there is like a really high

00:23:56,250 --> 00:24:01,620
peak but then it like drops down

00:23:57,860 --> 00:24:04,560
immensely so I would have to run it even

00:24:01,620 --> 00:24:07,230
longer I used to run during the night I

00:24:04,560 --> 00:24:10,440
thought it would be an ass but I'm not

00:24:07,230 --> 00:24:12,650
entirely sure now so gotta try for a

00:24:10,440 --> 00:24:15,300
longer time maybe train for a few days

00:24:12,650 --> 00:24:17,280
but there was something where I thought

00:24:15,300 --> 00:24:19,230
okay this reward seems to be working

00:24:17,280 --> 00:24:20,820
better than just the score so maybe I

00:24:19,230 --> 00:24:23,280
leave the reward for now and then try

00:24:20,820 --> 00:24:27,530
something else and then see how that

00:24:23,280 --> 00:24:32,340
works and so I did a third iteration

00:24:27,530 --> 00:24:34,380
okay okay I did a third iteration where

00:24:32,340 --> 00:24:36,200
I played a lot around a little bit with

00:24:34,380 --> 00:24:39,150
the meta parameters of my system and

00:24:36,200 --> 00:24:42,300
what I did was the K the epsilon all the

00:24:39,150 --> 00:24:44,220
time and the epsilon is the value for

00:24:42,300 --> 00:24:46,290
the exploration value so if you have

00:24:44,220 --> 00:24:48,540
high and high epsilon you do a lot of

00:24:46,290 --> 00:24:50,310
random moves if you have a low epsilon

00:24:48,540 --> 00:24:51,600
you don't you just do the moves that

00:24:50,310 --> 00:24:54,300
you're comfortable with that you already

00:24:51,600 --> 00:24:56,010
know so if you decayed over time it

00:24:54,300 --> 00:24:58,680
means at the beginning you do a lot of

00:24:56,010 --> 00:25:00,960
random moves but the more games you play

00:24:58,680 --> 00:25:02,880
the more you stick to the ones that you

00:25:00,960 --> 00:25:04,680
already know and I thought that this

00:25:02,880 --> 00:25:06,750
might work pretty well maybe because

00:25:04,680 --> 00:25:08,490
then I don't go all over the place I

00:25:06,750 --> 00:25:10,890
already have the stuff that I know and

00:25:08,490 --> 00:25:12,480
then just try to go that path also it

00:25:10,890 --> 00:25:17,580
was recommended in documentation of the

00:25:12,480 --> 00:25:20,670
framework okay um so how did that look

00:25:17,580 --> 00:25:22,320
let's take a look here it looks more

00:25:20,670 --> 00:25:28,140
jagged right as most thing has more

00:25:22,320 --> 00:25:31,790
stuff happening so so yeah um I played

00:25:28,140 --> 00:25:37,230
fine so maybe like it looks good right

00:25:31,790 --> 00:25:40,950
yeah it's perfect I want so um yeah it

00:25:37,230 --> 00:25:44,190
looks pretty nice but so maybe you

00:25:40,950 --> 00:25:46,830
didn't notice it when you check those

00:25:44,190 --> 00:25:50,250
the total scores you see that maybe

00:25:46,830 --> 00:25:52,530
there is a tendency moving up but

00:25:50,250 --> 00:25:55,470
overall the overall average is a bit

00:25:52,530 --> 00:25:59,040
lower than if you just returned the

00:25:55,470 --> 00:26:01,650
score as reward so there is learning but

00:25:59,040 --> 00:26:03,300
it's starting from a worse point that if

00:26:01,650 --> 00:26:06,330
you would just give it the score which

00:26:03,300 --> 00:26:07,560
might be okay because over time you will

00:26:06,330 --> 00:26:10,260
reach like the best

00:26:07,560 --> 00:26:13,950
possible point but maybe you will never

00:26:10,260 --> 00:26:18,210
reach it but I'm pretty confident that

00:26:13,950 --> 00:26:20,190
this was a that was a pretty good run so

00:26:18,210 --> 00:26:22,650
this is how far I've got me basically

00:26:20,190 --> 00:26:26,280
yeah I didn't I didn't really need one

00:26:22,650 --> 00:26:27,750
anything but I I learned something I

00:26:26,280 --> 00:26:32,370
looked into it and I learned something

00:26:27,750 --> 00:26:35,550
and I have came to a conclusion so what

00:26:32,370 --> 00:26:38,190
I saw is that it seemed to be learning

00:26:35,550 --> 00:26:41,820
in some way it seemed that there was

00:26:38,190 --> 00:26:47,430
like a tendency of the score going up

00:26:41,820 --> 00:26:49,020
over time but we have a few problems and

00:26:47,430 --> 00:26:51,180
I think I'm not going to be able to fix

00:26:49,020 --> 00:26:53,460
it with this particular framework with

00:26:51,180 --> 00:26:55,470
this particular system the one thing is

00:26:53,460 --> 00:27:01,350
that the board size is kept is there's

00:26:55,470 --> 00:27:02,850
16 tile spaces and after a time it just

00:27:01,350 --> 00:27:04,920
becomes very crowded on the board

00:27:02,850 --> 00:27:08,160
because you always have to have you have

00:27:04,920 --> 00:27:10,050
to have like a 512 I mean I have a 256

00:27:08,160 --> 00:27:13,530
next to it and you need another 256 to

00:27:10,050 --> 00:27:15,600
merge those two merge school so you need

00:27:13,530 --> 00:27:17,370
a lot of tires laying around and it's

00:27:15,600 --> 00:27:20,160
get really it gets really crowded and it

00:27:17,370 --> 00:27:21,990
gets harder the higher you get and it

00:27:20,160 --> 00:27:24,840
could be that it's just at some point

00:27:21,990 --> 00:27:27,450
the system just does not I just can't

00:27:24,840 --> 00:27:29,310
handle it anymore because it's just it

00:27:27,450 --> 00:27:32,280
just doesn't know where where to put all

00:27:29,310 --> 00:27:34,530
the tires basically and the other

00:27:32,280 --> 00:27:37,890
problem is that my input is the sled so

00:27:34,530 --> 00:27:39,750
it's a it's a one-dimensional array but

00:27:37,890 --> 00:27:42,750
the board is not one dimension of two

00:27:39,750 --> 00:27:46,670
dimensional but for this library there's

00:27:42,750 --> 00:27:49,800
two snow there was no way to input

00:27:46,670 --> 00:27:52,080
multi-dimensional inputs so I had to go

00:27:49,800 --> 00:27:54,030
with it and I could imagine that my

00:27:52,080 --> 00:27:56,280
system just didn't get that number like

00:27:54,030 --> 00:27:58,830
element number zero and element number

00:27:56,280 --> 00:28:00,900
four are like they can merge them when

00:27:58,830 --> 00:28:02,630
you go up or down so this is something

00:28:00,900 --> 00:28:05,340
that the system would have to learn in

00:28:02,630 --> 00:28:08,610
implicitly and I'm not sure whether it

00:28:05,340 --> 00:28:11,940
got there actually and so the other

00:28:08,610 --> 00:28:14,160
thing about reinforced is that it has

00:28:11,940 --> 00:28:17,250
one heart one hidden layer hard-coded

00:28:14,160 --> 00:28:19,450
and I looked into the library and I was

00:28:17,250 --> 00:28:22,210
thinking about like changing it but

00:28:19,450 --> 00:28:24,130
like stuff broken once again I'm not

00:28:22,210 --> 00:28:28,029
going to do that I'm just going to go

00:28:24,130 --> 00:28:32,049
with what I have and just yeah hold on

00:28:28,029 --> 00:28:35,289
tight basically but I heard the guy is

00:28:32,049 --> 00:28:37,120
going to be and in Paris I think when

00:28:35,289 --> 00:28:38,799
I'm going to be there too and then maybe

00:28:37,120 --> 00:28:40,570
I can meet up with him and we can like

00:28:38,799 --> 00:28:45,519
have program it or something it would be

00:28:40,570 --> 00:28:46,179
cool right so what's next what will I do

00:28:45,519 --> 00:28:49,510
next

00:28:46,179 --> 00:28:50,620
when I'm got to get around to it I can

00:28:49,510 --> 00:28:52,149
play around a little with the meta

00:28:50,620 --> 00:28:53,500
parameters there are lots of meta

00:28:52,149 --> 00:28:56,889
parameters that you have to give your

00:28:53,500 --> 00:28:58,659
system those are the parameters so

00:28:56,889 --> 00:29:01,269
epsilon I already explained that right

00:28:58,659 --> 00:29:03,399
the low epsilon means not as random high

00:29:01,269 --> 00:29:06,250
as long means very random there's this

00:29:03,399 --> 00:29:09,429
gamma thing that's also some kind of

00:29:06,250 --> 00:29:12,789
greedy so if you're if you have low

00:29:09,429 --> 00:29:15,610
gamma and that means that you try to get

00:29:12,789 --> 00:29:17,590
the best possible reward instantly and

00:29:15,610 --> 00:29:20,649
if you have a higher gamma you'll be

00:29:17,590 --> 00:29:22,899
fine with doing a lot of stuff to get a

00:29:20,649 --> 00:29:24,159
higher reward in the end so that's

00:29:22,899 --> 00:29:26,139
something that you can play around with

00:29:24,159 --> 00:29:28,630
there's a learning rate which you can

00:29:26,139 --> 00:29:29,289
just try an error and try to find the

00:29:28,630 --> 00:29:31,179
best thing

00:29:29,289 --> 00:29:35,070
there's experience that you can make it

00:29:31,179 --> 00:29:37,240
bigger whatever there's all kinds of

00:29:35,070 --> 00:29:39,490
parameters and you can if you want to

00:29:37,240 --> 00:29:41,889
get more into it you can check out

00:29:39,490 --> 00:29:45,370
reinforced yes and they're explained in

00:29:41,889 --> 00:29:46,809
a in a nice mathematical way which I

00:29:45,370 --> 00:29:47,350
didn't include because it's kind of

00:29:46,809 --> 00:29:50,919
complicated

00:29:47,350 --> 00:29:52,899
and what else so I was thinking to

00:29:50,919 --> 00:29:55,510
switch to Python Python has a lot of

00:29:52,899 --> 00:29:58,029
nice machine learning frameworks and I

00:29:55,510 --> 00:30:00,130
would be able to just do more to have

00:29:58,029 --> 00:30:02,440
introduced more layers to try around a

00:30:00,130 --> 00:30:03,909
little bit so that could also be

00:30:02,440 --> 00:30:05,590
possible but then I couldn't run in the

00:30:03,909 --> 00:30:08,289
browser so I haven't really decided on

00:30:05,590 --> 00:30:10,389
that yet but one thing I could do is

00:30:08,289 --> 00:30:12,190
something called convolutional net work

00:30:10,389 --> 00:30:15,820
and the convolutional network is

00:30:12,190 --> 00:30:17,350
basically a way for me to to tackle the

00:30:15,820 --> 00:30:18,960
sled input problem because in a

00:30:17,350 --> 00:30:22,480
convolutional network you could like

00:30:18,960 --> 00:30:24,880
have four different nodes and each node

00:30:22,480 --> 00:30:26,710
gets like one row or we have eight

00:30:24,880 --> 00:30:28,690
different notes and then you have four

00:30:26,710 --> 00:30:31,090
four rows and four four columns and they

00:30:28,690 --> 00:30:32,930
will give all their values that they

00:30:31,090 --> 00:30:34,760
calculated and give it to the net

00:30:32,930 --> 00:30:38,540
network so that you can actually have

00:30:34,760 --> 00:30:40,760
those kinds of relationships in the

00:30:38,540 --> 00:30:42,350
horizontal relationships and vertical

00:30:40,760 --> 00:30:47,180
relationships and the system book will

00:30:42,350 --> 00:30:48,980
learn that yeah that's basically it so

00:30:47,180 --> 00:30:51,230
that's basically what I what I did and

00:30:48,980 --> 00:30:54,320
there are some links if you're

00:30:51,230 --> 00:30:56,570
interested so the first one is open

00:30:54,320 --> 00:30:59,690
source 2048 that's the game then there's

00:30:56,570 --> 00:31:02,390
this unlife I didn't notice

00:30:59,690 --> 00:31:04,760
so this is a paper where someone already

00:31:02,390 --> 00:31:07,610
tried to do debrie enforcement learning

00:31:04,760 --> 00:31:11,180
with Python will for the 2048 game I

00:31:07,610 --> 00:31:13,160
think he just rewarded wins with won and

00:31:11,180 --> 00:31:16,220
lost was with zero and said it didn't

00:31:13,160 --> 00:31:17,870
work so well so you can look into it

00:31:16,220 --> 00:31:19,760
what he did and it's pretty interesting

00:31:17,870 --> 00:31:21,290
actually and then there's this

00:31:19,760 --> 00:31:24,470
introduction to Temple distance learning

00:31:21,290 --> 00:31:26,480
that's that's more of a scientific paper

00:31:24,470 --> 00:31:30,170
but it's pretty it's still you can still

00:31:26,480 --> 00:31:31,610
understand it and just for if I didn't

00:31:30,170 --> 00:31:34,310
explain anything to well then maybe you

00:31:31,610 --> 00:31:36,710
can look it up there and then yeah I can

00:31:34,310 --> 00:31:43,250
presentation review address great

00:31:36,710 --> 00:31:45,380
so um live demo so I will show you stuff

00:31:43,250 --> 00:31:49,040
that I so I will let it run in the

00:31:45,380 --> 00:31:50,740
backend I'm not gonna promise anything I

00:31:49,040 --> 00:31:53,810
don't think it will do anything actually

00:31:50,740 --> 00:31:59,470
but it's very hypnotic and it's it's

00:31:53,810 --> 00:32:04,940
nice so I don't know it won't start

00:31:59,470 --> 00:32:08,170
ok so if you have any questions now's

00:32:04,940 --> 00:32:08,170
the time Thanks

00:32:11,570 --> 00:32:21,800
I know yeah it's really hard to actually

00:32:20,420 --> 00:32:23,720
that's like I said it's the hardest

00:32:21,800 --> 00:32:26,060
thing and then you you like you start

00:32:23,720 --> 00:32:27,680
the bot and like prepare for bed and

00:32:26,060 --> 00:32:29,480
then you sit in front of it and just

00:32:27,680 --> 00:32:34,340
like oh yeah move it to the left

00:32:29,480 --> 00:32:38,950
yes came after to the left does anyone

00:32:34,340 --> 00:32:38,950
have any questions well yes

00:32:54,179 --> 00:32:56,240

YouTube URL: https://www.youtube.com/watch?v=I8HIDRYlTb4


