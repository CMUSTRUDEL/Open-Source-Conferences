Title: Creating an AI Musician with JavaScript - Thomas Drach - JSConf US 2019
Publication date: 2019-09-13
Playlist: JSConf US 2019
Description: 
	What would it mean if there were an AI musician? An artist that wrote its own drums, keyboards, and complete songs. An artist that generated album art and live visuals. People writing JavaScript are some of the most interesting artists today, and using the latest TensorFlow APIs (and projects like Magenta), we're able to generate sounds and instruments using only JavaScript.

It's a bit ridiculous for a "musician" to be generated using purely JavaScript... but that's exactly why we should do it. In this talk, we'll look at the innards of a couple of digital instruments that use Neural Nets and Machine Learning models to generate music. We'll also compile a complete song, rock out together, and have some fun.

This talk is lighthearted, but will also pose some big questions:

What would it mean if you knew the music you listened to was made by a computer?

Would you like it more? Or less?

By the end of it, you'll be able to take these instruments and build your own songs—or your own musicians.
Captions: 
	00:00:00,760 --> 00:00:01,760
Creating an AI Musician with JavaScript

00:00:01,760 --> 00:00:02,760
Thomas Drach KATIE: hello? There we go. That's me. Good

00:00:02,760 --> 00:00:03,760
morning. Whoo! Is everybody ready? Yeah. We have a really, really cool talk to start the

00:00:03,760 --> 00:00:04,760
day with. Thomas Drach is here. And when I, you know, he gave me some fun facts. But actually

00:00:04,760 --> 00:00:13,085
we had a really fascinating conversation just now that I'm gonna share with you. So, back

00:00:13,085 --> 00:00:14,085
in the '90s, the first two CDs that I ever bought. The first was DJ Jazzy Jeff and the

00:00:14,085 --> 00:00:15,085
Fresh Prince, the rapper, parents don't understand, which was amazing. And I bought a Rick Astley CD

00:00:15,085 --> 00:00:16,085
with a famous song on it that people use to Rickroll each other. And Thomas said his first

00:00:16,085 --> 00:00:17,085
tape was Nsync. Clearly his musical taste is much better than me. Let's give it up for

00:00:17,085 --> 00:00:18,085
Thomas Drach. [ Applause ]

00:00:18,085 --> 00:00:19,085
THOMAS: Good morning. Thanks for being here early for this talk. I want to give a huge

00:00:19,085 --> 00:00:20,085
thanks to JSConf for having me. They have been awesome. So grateful to be here. I also

00:00:20,085 --> 00:00:23,400
want to thank any open source contributors. Because I feel like I'm using cheat code sometimes,

00:00:23,400 --> 00:00:29,900
just like using someone else's code. If you're anything like me, I may have squirmed a little

00:00:29,900 --> 00:00:36,289
bit at this AI acronym. And that's good. We're going through that today. But just your willingness

00:00:36,289 --> 00:00:42,469
to be here, shows you're open to the ideas and pushing the boundaries. I think that's

00:00:42,469 --> 00:00:49,280
commendable. Thanks for being here. Okay. My name's Thomas Drach like we talked about.

00:00:49,280 --> 00:00:55,209
Thomasdrach on Twitter if you want to bug me there, please do. I consider myself a designer

00:00:55,209 --> 00:01:02,589
and a bit of a hacker. Not in the sense of this awesome movie. But in the writing bad

00:01:02,589 --> 00:01:10,450
code sense. I'm really good at that. I have a little design studio called Subtract where

00:01:10,450 --> 00:01:15,880
I make what I hope are useful products. One of which we'll go through today. And I have

00:01:15,880 --> 00:01:25,320
a product called Cleverstack too if you want to check that out. So, I want to start with

00:01:25,320 --> 00:01:32,480
a man called Paul Thomas. He had a little garage in Phoenix called the Thomas Brothers

00:01:32,480 --> 00:01:47,020
Garage. Today people might call him an entrepreneur or a founder. But he was actually an inventor.

00:01:47,020 --> 00:01:51,130
He filed for over a hundred patents and I'm still trying to track most of them down. I

00:01:51,130 --> 00:01:56,060
found about a dozen of them. Most reminded me of the Rube Goldberg machines. I don't

00:01:56,060 --> 00:02:02,229
know if you have seen these before. They're simple machines that create this weird trap

00:02:02,229 --> 00:02:08,969
like mechanism. All the patents I found from him were complex machines like that. Like

00:02:08,969 --> 00:02:13,540
nothing you would actually use. It's kind of hard to see here. But the name of this

00:02:13,540 --> 00:02:19,239
one is panel manufacturing method. And it's basically a patent for this giant machine

00:02:19,239 --> 00:02:24,400
that creates these like brick and concrete slabs and then we're supposed to ship them

00:02:24,400 --> 00:02:29,859
to job are sites for people to build houses with them. Kind of made me sad a little bit

00:02:29,859 --> 00:02:34,640
because it just seemed like a crazy person was documenting and patenting all of these

00:02:34,640 --> 00:02:41,959
things. But the machines that get built. This is the one that we were just talking about.

00:02:41,959 --> 00:02:49,650
The manufacturing machine to make the giant slabs. And they actually had to design and

00:02:49,650 --> 00:02:56,329
patent these, like, semitrucks to ship them to job sites. They had these weird little

00:02:56,329 --> 00:03:03,371
trucks that would like transport like these palettes of bricks everywhere. And clearly

00:03:03,371 --> 00:03:09,980
they didn't invent the screw or the lever or the racket pinion or these things, but

00:03:09,980 --> 00:03:17,030
they combined something to make something new and useful. And it's especially interesting

00:03:17,030 --> 00:03:25,109
to me because this man was my great grandfather and my namesake. Some of you might be familiar

00:03:25,109 --> 00:03:31,849
with this Henry Ford quote. The funny thing is, Henry Ford never said this. I did research

00:03:31,849 --> 00:03:40,260
and the first time it was attributed to him was in 1999 in the cruise industry news quarterly.

00:03:40,260 --> 00:03:46,430
And other people started using it and now people say it on stages like this. Sometimes

00:03:46,430 --> 00:03:51,430
it's paired with like the Steve Jobs quote and kind of create this is genius complex

00:03:51,430 --> 00:03:58,129
of, they didn't know what they want. We have to show them or whatever. But I think there's

00:03:58,129 --> 00:04:02,730
something that people miss about this quote in particular. I think it resonates for a

00:04:02,730 --> 00:04:08,290
reason. But my interpretation of this quote is, big progress isn't necessarily just like

00:04:08,290 --> 00:04:14,269
an iteration of the last thing, but it's like a mutation of something that happened before.

00:04:14,269 --> 00:04:24,390
Maybe a little bit like this. We could accidently combine a few unrelated things to find something

00:04:24,390 --> 00:04:30,480
new. This is Tim Berners Lee talking about inventing the Internet. He said I just had

00:04:30,480 --> 00:04:35,150
to take the hypertext idea and connect it to the TC P&D NS ideas and can be ta da, I

00:04:35,150 --> 00:04:48,090
had the World Wide Web. There's an old LinkedIn, his profile page, it just said like web developer.

00:04:48,090 --> 00:04:52,850
But he goes on this interview, and I recommend listening or reading interviews from him.

00:04:52,850 --> 00:04:59,490
He goes on just to attribute all these other inventions and says if these didn't happen,

00:04:59,490 --> 00:05:04,710
the Internet, at least I wouldn't have created it at that time. I don't know what would have

00:05:04,710 --> 00:05:11,420
happened. So, the definition of mutation in the dictionary is the changing of structure,

00:05:11,420 --> 00:05:20,580
resulting in a variant form that may be transmitted to subsequent generations. Hendrix famously

00:05:20,580 --> 00:05:27,400
took right handed guitars, flipped them upside down and then eventually changed music. And

00:05:27,400 --> 00:05:33,551
he did so in part because it was before Les Paul invented the electronic guitar. They

00:05:33,551 --> 00:05:42,170
didn't invent it to invent it, but because they wanted the acoustic guitar louder. And

00:05:42,170 --> 00:05:47,670
Grace Hopper, is one of the inventers of what we now call programming. A big reason we're

00:05:47,670 --> 00:05:56,100
here today. And she started with knobs and switches on the Mark I. All of these were

00:05:56,100 --> 00:06:06,210
mutations. Like it was different enough. Hopper's was a mutation. And I think AI is a built

00:06:06,210 --> 00:06:12,070
of a mutation, at least how we talk about it today. There's much more data, advances

00:06:12,070 --> 00:06:16,550
in machine learning, compute power thanks to Moore's Law. And it kind of created the

00:06:16,550 --> 00:06:25,040
opportunity for something like AI to work. This is what I get when I search "AI" on Google.

00:06:25,040 --> 00:06:31,510
I don't know about you. But this isn't very helpful for me. So, I'll ask a little bit

00:06:31,510 --> 00:06:36,560
different question today. I want to ask, what are intelligent machines? We might be able

00:06:36,560 --> 00:06:46,700
to define this. Just intelligence + machines. So, let's define intelligence. This is a quote;

00:06:46,700 --> 00:06:51,490
I'm just going to read it really quick. People generally distrust the concept of machines

00:06:51,490 --> 00:06:57,210
that approach and thus why not pass our own human intelligence. I think a lot of people

00:06:57,210 --> 00:07:02,820
feel like this today. And this quote was actually written in 1970 in the book called the architecture

00:07:02,820 --> 00:07:10,370
machine actually by the person who founded the MIT Media Lab. And it goes on to say that,

00:07:10,370 --> 00:07:14,810
machines must be aware of their context in order to be intelligent. So, you can't have

00:07:14,810 --> 00:07:21,000
like a machine without using the context, interacting with the world. It's not intelligent

00:07:21,000 --> 00:07:28,550
in that case. There's no lack of context in the new Tesla roadsters. So, for our purposes,

00:07:28,550 --> 00:07:36,140
and I'm just gonna say intelligence means using context. So, now we can define machines.

00:07:36,140 --> 00:07:40,950
This should be pretty easy. We go to the dictionary and find a mechanically, electronically, or

00:07:40,950 --> 00:07:51,020
electrically operated device for a task. Sounds good to me. Okay. So, with intelligence and

00:07:51,020 --> 00:07:56,880
machines defined, I would like to introduce you to the concept of somewhat intelligent

00:07:56,880 --> 00:08:03,700
machines. And this is what we're gonna build today. And this is just something that uses

00:08:03,700 --> 00:08:10,450
context and rapidly completes something that a human could not. And we're gonna do all

00:08:10,450 --> 00:08:19,860
of it in JavaScript. So, this is the actual machine instrument, musician, AI, whatever

00:08:19,860 --> 00:08:23,280
you want to call it. This is what we're gonna build today. I'm going to walk through how

00:08:23,280 --> 00:08:29,810
to generate drumbeats using pre trained machine learning models, APIs, libraries, stuff like

00:08:29,810 --> 00:08:35,520
that. We're going to piece it together. And I find it a little bit hard for me to follow

00:08:35,520 --> 00:08:41,700
tiny code so it's gonna be a little pseudo codey. Like I said, the first thing we needed

00:08:41,700 --> 00:08:49,860
were a couple libraries we're going to use Magenta. If you haven't heard of Magenta already,

00:08:49,860 --> 00:08:54,580
please check it out. It's incredible. A couple of people have talked about it already here

00:08:54,580 --> 00:09:01,410
at JSConf. And then we're going to use Tone, which is actually a dependency Magenta which

00:09:01,410 --> 00:09:10,071
gives us an easier to code interface for musical stuff. All right. Let's play some drums. This

00:09:10,071 --> 00:09:16,990
is what the data structure for the drums will look like. You can set up a step sequence,

00:09:16,990 --> 00:09:24,770
but this is a step sequence in Magenta. There's a pitch, there's an attribute that tells it's

00:09:24,770 --> 00:09:31,560
a sample based pitch, not a tonal keyboard like thing. And there's quantization info.

00:09:31,560 --> 00:09:38,760
There's a method that does that for you so you don't have to worry about it. Okay. So,

00:09:38,760 --> 00:09:42,940
all we need to play that note sequence is two lines of code. We're going to create a

00:09:42,940 --> 00:09:48,820
new instance in the Magenta music player. And I'm going to call it player.star on that.

00:09:48,820 --> 00:09:54,470
And we're gonna get something like this. [drumbeats]

00:09:54,470 --> 00:10:01,750
This is just our basic pattern that we plugged in. Right? It's not that exciting. We kind

00:10:01,750 --> 00:10:07,680
of want something a little bit more like this. Like feed it in and we'll get something better

00:10:07,680 --> 00:10:14,140
in the material. All right. But in order to do that and do super quick ML crash course.

00:10:14,140 --> 00:10:20,080
I am not the one to go in depth about this. But let's all get on the same page. Okay.

00:10:20,080 --> 00:10:25,630
So, usually write functions something like this. We want something, we put something

00:10:25,630 --> 00:10:31,320
in, we want something back. Machine learning, it's a little bit more abstract, right? We

00:10:31,320 --> 00:10:39,120
don't know abstractly like what we  how we would get there. Like, is this image a dog?

00:10:39,120 --> 00:10:44,220
Here's the image. I don't know. Some of you might see 

00:10:44,220 --> 00:10:47,580
[ Laughter ] Memes like this. This is one of my favorites.

00:10:47,580 --> 00:10:54,790
Chicken fingers and the goldendoodles, I think. I don't know how dogs and cats became like

00:10:54,790 --> 00:11:02,620
the hello world of machine learning. But I'm not mad about it. So, here's what we call

00:11:02,620 --> 00:11:08,110
training data. If it was training data, it was probably labeled. So, this is a dog. I

00:11:08,110 --> 00:11:13,770
probably should have said like fried chicken. That's not an actual chicken. So, you feed

00:11:13,770 --> 00:11:18,660
all that to the machine. The machine says all these are dogs. They have this weird odd

00:11:18,660 --> 00:11:25,460
thing on their face. We call that a feature. That feature to us looks like a nose. The

00:11:25,460 --> 00:11:30,140
machine goes, okay, there's a nose. It's probably a dog. So, we feed them the image and it's

00:11:30,140 --> 00:11:38,290
gonna guess, dog. All of these are just like probabilities. For our purposes, we want to

00:11:38,290 --> 00:11:44,290
give it some drums and we want some better drums in turn. So, that's where Magenta comes

00:11:44,290 --> 00:11:50,640
in. Magenta has a couple different models available. All of these are super cool and

00:11:50,640 --> 00:11:55,960
it seems like they're coming out with more every week, every month. So, there's a MusicRNN

00:11:55,960 --> 00:12:04,740
model, a Music VAE and a Piano Genie. Right now the Piano Genie is a VAI as well. Just

00:12:04,740 --> 00:12:13,120
quick, RNN stands for recounter neural network, a bunch of nodes. It's like one of those.

00:12:13,120 --> 00:12:19,980
But it loops through itself. And a VAE is a variational auto encoder. If you're familiar

00:12:19,980 --> 00:12:25,550
with encoding and decoding, it works similarly to that. For our purposes, we're going to

00:12:25,550 --> 00:12:32,120
use the MusicRNN models just in the context of Magenta. They have a little bit better

00:12:32,120 --> 00:12:38,300
support for like individual instruments like drums. And this is kind of what that might

00:12:38,300 --> 00:12:42,691
look like. So, if you have nodes on the network, you have it looping through itself and you

00:12:42,691 --> 00:12:47,400
have an in and an out. For us, we're going to put in our initial drum beat and we're

00:12:47,400 --> 00:12:56,331
going to expect a generated drum beat in return. Okay. So, we picked our MusicRNN models. This

00:12:56,331 --> 00:13:02,190
is what the actual checkpoint is. So, this is like a pre trained model. Trained with

00:13:02,190 --> 00:13:07,890
millions of drumbeats and it has a sense of what drumbeats are. There's a kick on one,

00:13:07,890 --> 00:13:14,510
there's a snare on two or something like that. So, these are the three lines of code that

00:13:14,510 --> 00:13:20,790
we need to generate a new drumbeat. So, you just create a new instance of our MusicRNN

00:13:20,790 --> 00:13:26,210
model, the checkpoint that we had. We initialize the model, it loads itself up. And then we

00:13:26,210 --> 00:13:31,420
call this method continue sequence. We feed it in our note sequence, feed the number of

00:13:31,420 --> 00:13:38,000
steps which is kind of arbitrary. Could be 16, 32 or whatever. And then we feed it a

00:13:38,000 --> 00:13:45,070
number from zero to two. We'll go over the temperature a little bit letter. So, after

00:13:45,070 --> 00:13:50,940
we do that, we just get a sample in return and we play the same way we played the other

00:13:50,940 --> 00:13:57,320
one. So, this is what that looked like. This is gonna be generated beat with a temperature

00:13:57,320 --> 00:13:59,590
of 1.5. [[drumbeat]

00:13:59,590 --> 00:14:17,529
And if you generate it again, it's going to come up with now beats that we've never heard.

00:14:17,529 --> 00:14:22,150
Cool. So, yeah. [ Applause ] all right. That was cool. But

00:14:22,150 --> 00:14:27,100
it was a little bit of a blackbox. So, I want to go through what happens when we call them

00:14:27,100 --> 00:14:32,970
with a continue sequence. We call it here in the three lines are of code. All we're

00:14:32,970 --> 00:14:37,830
gonna do here is what's happening behind the scenes is we're gonna convert the note sequence

00:14:37,830 --> 00:14:43,710
which is that drum thing. We're going to convert it to a Tensor. And then we're going to encode

00:14:43,710 --> 00:14:47,930
the tensor to match the model, the checkpoint that you have. If you're wondering what a

00:14:47,930 --> 00:14:56,490
tensor is, you probably already know. If you remember municipal math, is scalars and vectors.

00:14:56,490 --> 00:15:04,060
A tensor has three dimensions. That's why you hair the word shape when talking about

00:15:04,060 --> 00:15:15,459
machine learning. And especially TensorFlow. These are all  but the last is tensor. And

00:15:15,459 --> 00:15:23,779
then there's an internal method called sampleRNN. The inputs go into the TensorFlow library

00:15:23,779 --> 00:15:30,140
and generates the next notes. If you want to get into the nitty gritty, TensorFlow.JS

00:15:30,140 --> 00:15:36,300
is a great place to actually get your hands dirty there. It helps me to visualize like

00:15:36,300 --> 00:15:42,529
this. Once more, the continueSequence. And the note here, the noteSequence, convert it

00:15:42,529 --> 00:15:52,290
to a model, call the sampleRNN and get the new drums. I told you we were gonna talk about

00:15:52,290 --> 00:15:57,580
temperature. It's interesting to me because it's one of the few inputs we have available.

00:15:57,580 --> 00:16:02,800
Restructure train it with different drumbeats, which is kind of cool. But temperature is

00:16:02,800 --> 00:16:09,890
like the level of entropy in the system. So, the lower the temperature, the more predictable

00:16:09,890 --> 00:16:16,620
result we're gonna get. The higher, the less predictable it will be. So, just as an example,

00:16:16,620 --> 00:16:21,110
and drop it down here to 0.2. Sounds like really similar to the original

00:16:21,110 --> 00:16:33,420
drumbeat. And if we keep generating it, it's pretty much like the same, right? So, now

00:16:33,420 --> 00:16:43,980
we're gonna try cranking it up to 1.5. [Drumbeats  ]

00:16:43,980 --> 00:16:58,100
So, a little bit more exciting, for sure. This is the temperature I like. More fun.

00:16:58,100 --> 00:17:05,480
And after we do that, we just have like a little demo button here. It will generate

00:17:05,480 --> 00:17:11,799
a new file. And then sometimes what I will do is I will drop it in this, garage band

00:17:11,799 --> 00:17:17,510
and use it as a musician for my band. If you're wondering why there's no audio right now,

00:17:17,510 --> 00:17:23,630
it's because we're not judging my music skills today. We're talking about JavaScript. Okay.

00:17:23,630 --> 00:17:32,220
So, that was cool. It was like almost somewhat intelligent. I wanted to take it one step

00:17:32,220 --> 00:17:38,710
further. So, I wanted to give the machine a little bit of motivation with applause.

00:17:38,710 --> 00:17:47,190
So, depending on how much you applaud it, the machine would then generate a new temperature.

00:17:47,190 --> 00:17:54,299
Here we go. The machine would generate a new temperature based on like the average amplitude

00:17:54,299 --> 00:18:02,200
of a couple seconds period of time. I wanted more context to have a better definition of

00:18:02,200 --> 00:18:09,400
our somewhat intelligent machine. So, I literally injected more context into it. So, this is

00:18:09,400 --> 00:18:14,410
pretty simple. I'm just getting the user's microphone. And I have this little method

00:18:14,410 --> 00:18:21,530
here called analyze sound. I'm going to use create script processer and just take the

00:18:21,530 --> 00:18:29,270
average volume over a couple seconds. Okay. And against my better judgment, we're gonna

00:18:29,270 --> 00:18:44,620
do a live demo. Okay. So, this is the drumbeat. That's the normal drum beat we programmed

00:18:44,620 --> 00:18:58,270
in. Then we can generate one. Drop it down a little bit. So, this is like pretty cool.

00:18:58,270 --> 00:19:08,460
Generating a new one every time. Okay. Now I need your help. So, I've created

00:19:08,460 --> 00:19:15,700
this little perform feature. When I click the button, it's going to wait for applause

00:19:15,700 --> 00:19:19,960
for a couple seconds and then it's gonna take that average amplitude over that period of

00:19:19,960 --> 00:19:25,710
time, decide on what temperature to play, and then generate the beat based on that.

00:19:25,710 --> 00:19:33,380
I promise I'm not trying to manufacture applause for myself. Maybe a little bit. Okay. So,

00:19:33,380 --> 00:19:42,770
let's try this. On the count of three, be like nice. But loud. I'm  on the count of

00:19:42,770 --> 00:19:47,080
three, start applauding. I'm going to hit the button right after you start applauding

00:19:47,080 --> 00:19:54,670
and then we'll see what happens. Live demos always work. So with, this should be great.

00:19:54,670 --> 00:20:00,110
On the count of three, one, two, three. [ Applause ]

00:20:00,110 --> 00:20:14,030
Yeah! All right. So, that's that. So, it actually goes from like zero to 2. It goes up pretty 

00:20:14,030 --> 00:20:24,500
it still is morning. But you're being considerate. I'm fine with that. Cool. So, that's that.

00:20:24,500 --> 00:20:31,510
That is our somewhat intelligent machine. So, did we use context? I think so. We put

00:20:31,510 --> 00:20:39,750
in our drumbeat. We took applause. We told it the steps we wanted. It definitely rapidly

00:20:39,750 --> 00:20:44,169
completed something that we couldn't do on our own, right? We can generate like a dozen

00:20:44,169 --> 00:20:52,130
or so drumbeats just in a couple seconds. So, I think we did it. Other people have created

00:20:52,130 --> 00:21:00,270
some really cool things. This is called a neural computer. Usually play a couple notes,

00:21:00,270 --> 00:21:06,919
an arpeggio, bounce back and forth. But this will take the temperature into effect. It

00:21:06,919 --> 00:21:17,150
uses the improvRNN model from Magenta. I really like it. The Magenta team created

00:21:17,150 --> 00:21:24,070
kind of like what we just did, but inside of able10. If you use it, you can do what

00:21:24,070 --> 00:21:36,090
we just did, and generate right inside. And the Flaming Lips actually created this thing

00:21:36,090 --> 00:21:42,010
called the framing  the Flaming Lips and Magenta created this thing called Fruit Genie.

00:21:42,010 --> 00:21:50,141
And it was fruit, but it would say like orange and it would feed the model. And then they

00:21:50,141 --> 00:21:55,690
created like these giant pool toy type things that had censors on them and then threw them

00:21:55,690 --> 00:22:02,340
into the audience and asked people to feed it into the same model and create this, like,

00:22:02,340 --> 00:22:08,120
melody. This is a little clip of what that looked like.

00:22:08,120 --> 00:22:13,230
>> Written this song especially for tonight's occasion.

00:22:13,230 --> 00:22:21,710
THOMAS: So, they threw out these things into the audience. And people  and you could hear

00:22:21,710 --> 00:22:26,870
it in the melody like cycle back. There's not like 

00:22:26,870 --> 00:22:34,679
>> Apple  THOMAS: So, all of these things, all the stuff

00:22:34,679 --> 00:22:42,380
we just talked about. All of it was just Tone.js and Magenta and we created our own as well.

00:22:42,380 --> 00:22:49,170
We used a couple other previous inventions, sure. But that was kind of the point, right?

00:22:49,170 --> 00:22:55,230
Combining these simple machines to kind of create something more complex. We didn't reinvent

00:22:55,230 --> 00:23:02,910
the wheel, by any means. We didn't have to. We just created something a little bit smarter

00:23:02,910 --> 00:23:09,179
than it was before with the tools that I had at our disposal. I think we can keep doing

00:23:09,179 --> 00:23:12,549
this. We can keep like flipping our tools and creating things that are new and useful

00:23:12,549 --> 00:23:20,110
for people and helpful and interesting. And hopefully the inventions that we piece together,

00:23:20,110 --> 00:23:27,010
the sum will be greater than its parts. This is such an exciting time to be building stuff.

00:23:27,010 --> 00:23:30,304
And I can't wait to see what we all build next. So, thank you.

00:23:30,304 --> 00:23:31,304
[ Applause ] KATIE: Wow. Oh, my gosh, all right, I'm gonna

00:23:31,304 --> 00:23:32,304
gush for a second about the Flaming Lips. They're one of my favorite bands. I've seen

00:23:32,304 --> 00:23:33,304
them live four or five times. If you haven't seen them, even if you don't particularly

00:23:33,304 --> 00:23:34,304
love their music, it's an amazing experience. You should go and do it. I'm going to stop

00:23:34,304 --> 00:23:35,304
gushing about the Flaming Lips and now I'm going to gush about Thomas. That was really

00:23:35,304 --> 00:23:36,304
cool and I really love his message that, you know, like he's not some kind of crazy genius.

00:23:36,304 --> 00:23:37,304
He's just like a person who is really into music and really wanted to try something cool.

00:23:37,304 --> 00:23:38,304
And that we all could do this with JavaScript. It's like amazing, right? Anyway, so, coming

00:23:38,304 --> 00:23:39,304
up next we have Sophia Shoemaker is going to talk about building a PWA that had to work

00:23:39,304 --> 00:23:40,304
off the grid in an African country which I can't remember which one, but we need to be

00:23:40,304 --> 00:23:41,304
back here at 10:30 for that. So, you have a couple minutes to go out and switch rooms

00:23:41,304 --> 00:23:42,304
if you want. But you shouldn't. You should stay here. All right. Thanks, everybody.

00:23:42,304 --> 00:23:42,305

YouTube URL: https://www.youtube.com/watch?v=sS9wNOrw5EU


