Title: Playing Pokemon Together With Node.js - Samuel Agnew - JSConf US 2019
Publication date: 2019-09-17
Playlist: JSConf US 2019
Description: 
	Pokemon filled many of our childhoods, and some of our adulthoods, with joy. In this live coding adventure, we will recapture the magic of playing Pokemon together with the help of a Twilio phone number built with server-side JavaScript interacting with Gameboy emulator scripts. By the end of this session, you will learn how to write video game emulator scripts and interact with them using Node.js and Express.
Captions: 
	00:00:00,160 --> 00:00:01,160
Playing Pokemon Together with Node.js - Samuel Agnew

00:00:01,160 --> 00:00:02,160
Hey!.

00:00:02,160 --> 00:00:03,160
OK.

00:00:03,160 --> 00:00:04,160
Another fun fact about our next speaker: If you haven't seen his profile picture for the

00:00:04,160 --> 00:00:05,160
conference, definitely check it out.

00:00:05,160 --> 00:00:06,160
It's actually him playing onstage at metal fest in Peru, when he did a South American

00:00:06,160 --> 00:00:07,160
tour with the thrash metal band.

00:00:07,160 --> 00:00:08,160
Lots of talent.

00:00:08,160 --> 00:00:09,160
So next we have playing Pokémon with Samuel Agnew.

00:00:09,160 --> 00:00:10,160
Guess I should have checked this before.

00:00:10,160 --> 00:00:11,160
I see someone coming forward.

00:00:11,160 --> 00:00:12,160
[applause]

00:00:12,160 --> 00:00:13,160
Is there any way I can get like something where I don't need to use my hands?

00:00:13,160 --> 00:00:14,160
>> Unless I could, could, like, one-hand live code.

00:00:14,160 --> 00:00:15,160
>> AUDIENCE: Technically you just did.

00:00:15,160 --> 00:00:16,160
>> Yeah, I guess I did.

00:00:16,160 --> 00:00:17,160
There's my talk.

00:00:17,160 --> 00:00:18,160
Dang, though, so this thing is not a thing.

00:00:18,160 --> 00:00:19,160
OK, I don't need to be coding until a couple minutes into my talk so I might as well get

00:00:19,160 --> 00:00:20,160
started.

00:00:20,160 --> 00:00:21,160
How's it going JSConf, a company called Twilio pays me to build goofy hacks and about them

00:00:21,160 --> 00:00:22,160
and I flew in from New York City the other day, and speaking of JavaScript developers

00:00:22,160 --> 00:00:28,099
from New York, I want to give a quick shout to by buddy speaking in the other track.

00:00:28,099 --> 00:00:36,430
You should watch it on YouTube later because he also organization a meetup called Queens

00:00:36,430 --> 00:00:46,960
JS which is one of my favorite ones and sometimes I convince my employer to give them money.

00:00:46,960 --> 00:00:50,380
This talk is going to be more of a fun one than a serious.

00:00:50,380 --> 00:00:57,460
It's the last session and I know towards the ends of conferences attention spans start

00:00:57,460 --> 00:01:03,810
wane, so I figured what could be more fun than playing Pokémon with a bunch of JavaScript

00:01:03,810 --> 00:01:07,020
developers.

00:01:07,020 --> 00:01:15,500
I'm running Pokémon red version which is a game I played a ton as a kid.

00:01:15,500 --> 00:01:21,290
And I have the Windows version of this emulator running, even though I'm on a Mac and the

00:01:21,290 --> 00:01:27,290
reason for that is there are a lot of old game emulators where the Windows versions

00:01:27,290 --> 00:01:34,080
of them have developer tools, because people still make real games for these old systems,

00:01:34,080 --> 00:01:39,520
and for some reason or other, most of those developers use Windows, so one of the features

00:01:39,520 --> 00:01:46,200
that this emulator has that I'm going to be using for my talk is scripting functionality

00:01:46,200 --> 00:01:55,890
so we can run lui scripts and we can control the memory of the game and button input and

00:01:55,890 --> 00:01:58,250
stuff like that.

00:01:58,250 --> 00:02:00,980
I'm being mic'd up.

00:02:00,980 --> 00:02:02,700
Cool. [laughter]

00:02:02,700 --> 00:02:06,940
So what we're going to do is we're going to write a Lewis script that interacts with a

00:02:06,940 --> 00:02:13,361
node.js express server sitting behind a Twilio phone number and I'm going to have you all

00:02:13,361 --> 00:02:20,810
text a Twilio phone number to tell me what buttons to press in the game and the Node

00:02:20,810 --> 00:02:23,760
app and the script are going to communicate with each other.

00:02:23,760 --> 00:02:27,500
Testing, can you hear me?

00:02:27,500 --> 00:02:28,990
AUDIENCE: Yes!

00:02:28,990 --> 00:02:33,780
Sweet, awesome, so this might sound kind of familiar to to some of you.

00:02:33,780 --> 00:02:46,850
If you about five years ago, there was a twitch.tv livestream but instead of a human being playing

00:02:46,850 --> 00:02:52,420
it, it was everyone watching the stream typing in the chat which buttons would be pressed

00:02:52,420 --> 00:02:56,950
and when you have 80,000 people playing the same game controlling it at the same time,

00:02:56,950 --> 00:03:00,290
things get pretty interesting.

00:03:00,290 --> 00:03:08,960
So when I found out that these emulators had scripting, I guess because I work for Twilio,

00:03:08,960 --> 00:03:15,850
I was like, whoa, wouldn't it be cool if you could do that with text messages, too?

00:03:15,850 --> 00:03:22,070
And I it turns the Lua scripting thing is really popular in the speed scripting community.

00:03:22,070 --> 00:03:33,040
Where people try to write scripts to complete games in the most efficient way possible.

00:03:33,040 --> 00:03:40,800
This documentation seems pretty bare boneses so I've actually been following this other

00:03:40,800 --> 00:03:44,480
emulator's documentation.

00:03:44,480 --> 00:03:53,460
Turns out all these old game console emulate y they have the exact same Lua API I guess

00:03:53,460 --> 00:03:58,540
because they're all open source and once one implemented it the other ones were like, cool,

00:03:58,540 --> 00:04:02,220
gonna copy and paste that.

00:04:02,220 --> 00:04:09,160
You can do stuff like read and write bytes to the game's memory, like the RAM and ROM

00:04:09,160 --> 00:04:19,840
and that kind of stuff.

00:04:19,840 --> 00:04:23,460
I'm going to have this Twilio phone number set up so that I can programmatically control

00:04:23,460 --> 00:04:29,440
T so whenever you send a text message to this phone number and it's a 760 phone number which

00:04:29,440 --> 00:04:31,490
I think is an area code around here.

00:04:31,490 --> 00:04:38,050
So whenever you send a text to that number Twilio is going to send a post address to

00:04:38,050 --> 00:04:46,570
this address right here, which is basically a tunnel to a port on my local machine that

00:04:46,570 --> 00:04:50,280
my Node express app is going to be listening on.

00:04:50,280 --> 00:04:53,300
That app does not exist yet so we'll get to that later.

00:04:53,300 --> 00:04:57,930
If you text this number right now, literally nothing will happen because it will be dropped

00:04:57,930 --> 00:05:02,370
on the floor because the code doesn't exist.

00:05:02,370 --> 00:05:07,100
I'll show it on the screen later so you don't have to copy it down right now.

00:05:07,100 --> 00:05:11,590
Anyway, let's get into the basics of how to write code for this Game Boy emulator.

00:05:11,590 --> 00:05:21,550
I'm going to do a Hello World thing, you might have seen on this, I have my Twitter handle

00:05:21,550 --> 00:05:24,570
up on the Game Boy emulator.

00:05:24,570 --> 00:05:46,680
My Twitter is sagnewshreds,

00:05:46,680 --> 00:05:57,340
I'm going to say hello, JSConf with a smiley face, and I'm going to save that and I'm going

00:05:57,340 --> 00:06:02,199
to stop this other script from happening.

00:06:02,199 --> 00:06:08,770
And I'm going to go find this Lua script on my computer in my talks folder in the JSConf

00:06:08,770 --> 00:06:16,040
folder and I'm going to run that and it says, hello, JSConf cool, we've run some Lua.

00:06:16,040 --> 00:06:18,320
But it disappeared.

00:06:18,320 --> 00:06:23,270
And the reason is it's only running once.

00:06:23,270 --> 00:06:28,870
We can repeatedly print this on every frame if we want it to stay.

00:06:28,870 --> 00:06:32,479
And for that we need to write an infinite loop.

00:06:32,479 --> 00:06:33,930
Because infinite loops rule, right?

00:06:33,930 --> 00:06:37,120
We write those all the time.

00:06:37,120 --> 00:06:41,580
Because this emulator, the whole environment in there is single threaded this will actually

00:06:41,580 --> 00:06:43,840
stop the game from even playing.

00:06:43,840 --> 00:06:49,900
So this emu object gives you a function where you can control the frames so you can advance

00:06:49,900 --> 00:06:51,210
to the next frame.

00:06:51,210 --> 00:06:57,150
This way our infinite loop is pretty much taking over the run time of the game so that

00:06:57,150 --> 00:07:00,470
each iteration of this loop is going to be one frame of the game.

00:07:00,470 --> 00:07:05,290
So all this code will execute on each frame so I'm going to advance to the next frame

00:07:05,290 --> 00:07:08,840
at the end of each loop and going to restart that and now the hello JSConf is going to

00:07:08,840 --> 00:07:13,870
stay there.

00:07:13,870 --> 00:07:16,520
Now I'm going to write some useful stuff.

00:07:16,520 --> 00:07:21,900
So what we want to do is this Lua script is going to communicate with our Node.js stuff.

00:07:21,900 --> 00:07:24,630
I know this is JSConf and I'm writing Lua.

00:07:24,630 --> 00:07:25,949
I'm not much of a Lua developer.

00:07:25,949 --> 00:07:31,520
I don't know how many of you in this room consider yourselves Lua developers, but I'm

00:07:31,520 --> 00:07:33,259
not particularly.

00:07:33,259 --> 00:07:38,680
So I'm going to write some code to communicate with that Node.js and we're going to do something

00:07:38,680 --> 00:07:40,699
technologically advanced here.

00:07:40,699 --> 00:07:41,699
Really complicated stuff.

00:07:41,699 --> 00:07:45,510
We're going to communicate by reading and writing to text files.

00:07:45,510 --> 00:07:52,550
Yeah, so on each frame I'm going to read from a file called button.txt, to see if a button

00:07:52,550 --> 00:07:53,650
was pressed.

00:07:53,650 --> 00:07:58,169
So I'm going to write some utility function, so I'm going to write a function that can

00:07:58,169 --> 00:08:05,450
read a file and then I'm going to open that file.

00:08:05,450 --> 00:08:08,850
If I can type correctly.

00:08:08,850 --> 00:08:09,850
Cool.

00:08:09,850 --> 00:08:13,840
So I'm going to open that file name with the read flag and then I'm going to check to see

00:08:13,840 --> 00:08:21,940
if that file actually exists, so if it's nil, then I'm going to set the input to be that

00:08:21,940 --> 00:08:27,160
file, and then I'm going to create a variable called content and read the contents of that

00:08:27,160 --> 00:08:28,680
file into it.

00:08:28,680 --> 00:08:32,669
And then I'm going to close the file, because you always gotta close something you open.

00:08:32,669 --> 00:08:35,440
You gotta finish what you started, right?

00:08:35,440 --> 00:08:39,459
And then I'm going to return the content of the file which should just be a string of

00:08:39,459 --> 00:08:41,419
whatever was in the file.

00:08:41,419 --> 00:08:46,839
And next I'm going to write a quick function to press a button in the game.

00:08:46,839 --> 00:08:53,980
So this is going to take a button, just like the text of a button, like A, B, start, select,

00:08:53,980 --> 00:08:56,199
up, down, something like that.

00:08:56,199 --> 00:09:02,800
And the way the joy pad API works in this Lua scripting is that it takes a table of

00:09:02,800 --> 00:09:06,759
buttons, like a key value kind of thing, like a JavaScript object or a Python dictionary

00:09:06,759 --> 00:09:12,689
and it takes the button name and true or false for whether that button is being pressed or

00:09:12,689 --> 00:09:13,689
not.

00:09:13,689 --> 00:09:17,209
So I'm just going to create an input table here.

00:09:17,209 --> 00:09:23,889
And empty one, and I'm going to set whatever button we're trying to press equal to true.

00:09:23,889 --> 00:09:29,100
And then I'm going to call the joy pad.set function, and this is actually kind of interesting

00:09:29,100 --> 00:09:30,100
right here.

00:09:30,100 --> 00:09:44,660
One of the idiosyncrasies of this is there's only one or two controllers, but I guess because

00:09:44,660 --> 00:09:50,949
they copy and pasted for the consoles, you still have to give it the button input.

00:09:50,949 --> 00:09:55,579
So unless you're giving the link input, there's only one player, so player 1 is going to have

00:09:55,579 --> 00:10:02,559
this input table and I'm going to go down to this infinite loop and we're going to say

00:10:02,559 --> 00:10:09,089
for each frame of the game I'm going to check to see if there is anything in button.txt,

00:10:09,089 --> 00:10:22,230
so I'm going to create a variable that is going to read the contents of button.txt and

00:10:22,230 --> 00:10:26,399
if the button is nil.

00:10:26,399 --> 00:10:29,220
Press the button, pretty simple, right?

00:10:29,220 --> 00:10:36,730
So I'm going to put a message out to say I'm pressing the button.

00:10:36,730 --> 00:10:42,500
As I said, I'm not much of a Lua developer, so Lua string concatenation is just two dots.

00:10:42,500 --> 00:10:49,160
So if that looked a little funky to you, that's what that is, that is just string concatenation.

00:10:49,160 --> 00:10:57,490
So I'm going to avoid duplicates like if you send A to the text message thing and then

00:10:57,490 --> 00:11:00,790
it writes the button to that file, I just want to press the button once, I don't want

00:11:00,790 --> 00:11:04,829
to keep pressing on each frame repeatedly.

00:11:04,829 --> 00:11:09,699
Like if you want to press the button twice, you'll.

00:11:09,699 --> 00:11:15,439
It's going to return nil and button is going to be nil, so this won't be executed, but

00:11:15,439 --> 00:11:20,139
speaking of pressing buttons for multiple frames, that's another thing I want to address.

00:11:20,139 --> 00:11:23,810
So you are all human beings and when you're playing a video game, you're not playing as

00:11:23,810 --> 00:11:32,550
fast as machine would, so when you press a button on a Game Boy you're at least holding

00:11:32,550 --> 00:11:35,449
the button down for a solid portion of a second.

00:11:35,449 --> 00:11:38,860
So we're going to want to press it for a certain number of frames.

00:11:38,860 --> 00:11:44,720
Let's say 5.

00:11:44,720 --> 00:11:51,499
Which is still not a long time, but long enough for it to register and this is the syntax

00:11:51,499 --> 00:11:55,639
for a foreloop in Lua.

00:11:55,639 --> 00:12:03,929
But I want to make sure I advance the frame again after each iteration of the loop.

00:12:03,929 --> 00:12:10,309
So we're done with the talk using a language no one writes, or at I guess some of you do.

00:12:10,309 --> 00:12:11,309
I guess technically do.

00:12:11,309 --> 00:12:12,759
Because I'm writing it right now.

00:12:12,759 --> 00:12:23,189
But first I'm going to reload this Pokémon.lua script.

00:12:23,189 --> 00:12:28,860
Now I'm going to write the letter A, capital letter A in this text file and if I didn't

00:12:28,860 --> 00:12:32,740
mess anything up, when I go back to the emulator, it should be pretsing the A button and as

00:12:32,740 --> 00:12:38,079
you see, it's on this menu screen, so if it works this should go to the screen where I

00:12:38,079 --> 00:12:42,259
select a new game.

00:12:42,259 --> 00:12:48,370
Pressing A. -- I mean I guess it said it was pressing A. Oh, there we go.

00:12:48,370 --> 00:12:50,379
Maybe five frames wasn't enough, actually.

00:12:50,379 --> 00:12:51,600
But we'll see.

00:12:51,600 --> 00:12:54,059
So the Lua code works, that's great.

00:12:54,059 --> 00:12:59,129
I'm glad to hear that.

00:12:59,129 --> 00:13:03,339
Now I'm going to open up a saved state that I have, because later on once we're actually

00:13:03,339 --> 00:13:07,050
playing this, I don't want to have us to sit through Professor Oak telling us all what

00:13:07,050 --> 00:13:15,649
to do.

00:13:15,649 --> 00:13:22,920
All right, time to go now, I'm going to write some JavaScript finally.

00:13:22,920 --> 00:13:27,959
So I'm going to open a file called index.js and I'm going to build a quick express app

00:13:27,959 --> 00:13:33,089
so for a lot of people who are already familiar with backend Node development this will seem

00:13:33,089 --> 00:13:37,079
pretty straightforward for you for those of you who aren't familiar with backend node.js

00:13:37,079 --> 00:13:43,980
development, I guess this will be a good little Kickstarter.

00:13:43,980 --> 00:13:51,699
So first, going to require the FS module, because you know, writing to files, gotta

00:13:51,699 --> 00:13:54,040
use the file system for that.

00:13:54,040 --> 00:14:00,610
Also going to require express, because it is the web framework that I'm using, and I'm

00:14:00,610 --> 00:14:07,149
going to grab body parser, because I'm going to need to deal with the body of a post request,

00:14:07,149 --> 00:14:11,529
because when you send the text message, Twilio sends the post request representing the message

00:14:11,529 --> 00:14:15,869
and I need to get stuff in the body of that post request to access what the text of that

00:14:15,869 --> 00:14:17,180
message is.

00:14:17,180 --> 00:14:24,769
So body.parser and now I need to use the Twilio API.

00:14:24,769 --> 00:14:30,149
The Twilio node module and I'm going to grab the messaging response object from that so

00:14:30,149 --> 00:14:33,049
this will generate the twiml for me.

00:14:33,049 --> 00:14:36,819
Twiml being the Twilio SMS.

00:14:36,819 --> 00:14:46,799
My web app is going to have to respond with these XML tags, particularly the messaging

00:14:46,799 --> 00:14:52,110
response one, saying hey, respond to this message with a text message and no one wants

00:14:52,110 --> 00:14:57,109
to write XML by hand, I don't so I'm going to do this.

00:14:57,109 --> 00:15:05,559
Cool, I'm going to create my app object and I'm going to make an array of valid Game Boy

00:15:05,559 --> 00:15:17,579
buttons that you can text.

00:15:17,579 --> 00:15:22,160
They're also the start and select buttons on the Game Boy, but I'm not going to use

00:15:22,160 --> 00:15:26,480
that one, because that opens up the opportunity for you all to troll me by spamming the start

00:15:26,480 --> 00:15:33,109
menu and that's not fun, so I'm not going to let you do that, at all.

00:15:33,109 --> 00:15:40,029
Next I want to make sure I'm using the body parsing middleware, can't forget that so when

00:15:40,029 --> 00:15:46,259
I get the URL encoded post body I'll actually be able to use it.

00:15:46,259 --> 00:15:49,310
Gonna write that real quick.

00:15:49,310 --> 00:15:50,310
Cool.

00:15:50,310 --> 00:15:52,660
Now we can get to the fun stuff.

00:15:52,660 --> 00:15:59,980
Writing the post handler, so this will be a /sms route as you saw me write in my Twilio

00:15:59,980 --> 00:16:00,980
function.

00:16:00,980 --> 00:16:14,419
First time I'm going to do is create a new twiml messaging response object and then I'm

00:16:14,419 --> 00:16:18,679
going to grab the button that you want me to press so I'm just going to assume whatever

00:16:18,679 --> 00:16:23,559
text message you sent me is only going to be a Game Boy button and I'm going to grab

00:16:23,559 --> 00:16:25,480
that from the request body.

00:16:25,480 --> 00:16:30,689
This is going to look slightly confusing, because the inside of the body of the post

00:16:30,689 --> 00:16:35,889
request, the value that I want is body with an upper case B because that's what Twilio

00:16:35,889 --> 00:16:38,999
sends you as the actual text of the message.

00:16:38,999 --> 00:16:40,509
It's called the message Body.

00:16:40,509 --> 00:16:45,499
So I'm grabbing the body and I'm going to convert it to lower case so I can make this

00:16:45,499 --> 00:16:49,850
case insensitive and also because I don't have to put the burden of you dealing with

00:16:49,850 --> 00:16:57,009
your autocorrect and stuff.

00:16:57,009 --> 00:16:58,009
We don't want to deal with that.

00:16:58,009 --> 00:17:06,020
So going to convert that to lower case and then I'm going to see if what you texted me

00:17:06,020 --> 00:17:13,181
is actually in our list of valid buttons that we want you to be able to text, so if you

00:17:13,181 --> 00:17:16,940
text me start, not gonna get that.

00:17:16,940 --> 00:17:21,640
So if you sent me a valid button, I'm going to add a message to this twiml objected and

00:17:21,640 --> 00:17:26,280
this will be the text message that I sent to you in response and I'm going to say thanks

00:17:26,280 --> 00:17:32,060
for playing Pokémon with me and if you have any questions I'm going to give you my Twitter

00:17:32,060 --> 00:17:41,850
handle again, or my email address in case you want to send me some more longer-form

00:17:41,850 --> 00:17:47,220
complaints about how I'm using semicolons and you hate that or something and I'm going

00:17:47,220 --> 00:17:51,560
to send you a smiley face because I'm really happy you're all here.

00:17:51,560 --> 00:17:58,520
So next I'm going to write this button to the text file to communicate with my Lua script,

00:17:58,520 --> 00:18:06,950
but an interesting thing here is when you're trying to press the A or B button, it expects

00:18:06,950 --> 00:18:11,270
it to be upper case, but if you're trying to press like up, down, left, right, start

00:18:11,270 --> 00:18:16,640
or select, it expects it to be lower case, so slightly annoying, but we can deal with

00:18:16,640 --> 00:18:17,640
that.

00:18:17,640 --> 00:18:22,100
I'm going to say if you're trying to press A or B, going to throw that back to upper

00:18:22,100 --> 00:18:31,880
case -- oh, no, I'm going to say if you're pressing A or B in this little "if" block

00:18:31,880 --> 00:18:44,180
here then I'm going to set the button to upper case so then I'm going to actually press the

00:18:44,180 --> 00:18:50,630
button by doing this super-complex writing to a text file.

00:18:50,630 --> 00:18:55,350
So it's going to go to button.txt, I'm going to write that button to it and I'm going to

00:18:55,350 --> 00:19:02,430
go to utf8 encoding and now if you text me something that's not a valid Game Boy button,

00:19:02,430 --> 00:19:07,610
I'm going to respond with a message asking you to send me a valid Game Boy button.

00:19:07,610 --> 00:19:13,500
Because you know, you might make a typo or something, or maybe you want to comment on

00:19:13,500 --> 00:19:24,620
my hair or something, I'm just going to say hey, please text me a valid Game Boy button.

00:19:24,620 --> 00:19:27,670
No smiley face on that one.

00:19:27,670 --> 00:19:30,600
[laughter] And now I'm going to deal with actually responding

00:19:30,600 --> 00:19:38,470
to this HTTP request, so I'm going to make sure that it's a 200 response, because if

00:19:38,470 --> 00:19:42,610
I'm actually getting the text message and stuff, just going to give it 200, let's go

00:19:42,610 --> 00:19:43,610
with that.

00:19:43,610 --> 00:19:56,060
I'm going to set the content type to be text/xml, and I'm just going to send the twiml object

00:19:56,060 --> 00:19:59,991
a stringified version of it, so this is just going to be the xml that it generates, which

00:19:59,991 --> 00:20:03,240
is just going to be the text message I want to send back.

00:20:03,240 --> 00:20:12,890
Should be about done now, make sure this is listening, I'm going to go to port 3000, console.log,

00:20:12,890 --> 00:20:23,470
express app listening on port 3000, going to put a bunch of exclamation points.

00:20:23,470 --> 00:20:27,560
That should be all the JavaScript I have to write before I open this up for you to all

00:20:27,560 --> 00:20:31,770
play Pokémon with me, though, I want to make sure I don't have errors.

00:20:31,770 --> 00:20:35,920
I'm going to run this and I'm going to text this, if you did take that number down, I

00:20:35,920 --> 00:20:40,900
guess you can play it.

00:20:40,900 --> 00:20:45,170
yeah, someone pressed up, someone lent left.

00:20:45,170 --> 00:20:51,450
OK, so people are actually -- it looks like the code is working at this point, because

00:20:51,450 --> 00:20:54,710
I'm not getting any errors.

00:20:54,710 --> 00:20:56,070
And you know what that means?

00:20:56,070 --> 00:21:02,031
That means we get to play Pokémon together, so who wants to play Pokémon until we run

00:21:02,031 --> 00:21:04,910
out of time.

00:21:04,910 --> 00:21:22,190
So I'm going to need you to take your phones out, and send a message to this number, 760492-6659,

00:21:22,190 --> 00:21:27,690
and let's see if we can go select a starter Pokémon and battle our rival.

00:21:27,690 --> 00:21:32,300
If we can get past that, I'll be pretty stoked.

00:21:32,300 --> 00:21:42,350
So want to go up and down, want to get out of mom's house, because we're a big kid now.

00:21:42,350 --> 00:21:49,230
All right, it's sagnews house, that's my house.

00:21:49,230 --> 00:21:51,580
We want to go up and to the right.

00:21:51,580 --> 00:21:56,090
All right, we want to go right.

00:21:56,090 --> 00:21:58,710
Let's do that.

00:21:58,710 --> 00:22:02,400
Isn't it great that I didn't let anyone press start because we would just be standing still

00:22:02,400 --> 00:22:04,400
right now.

00:22:04,400 --> 00:22:07,940
Gotta get in the tall grass so Professor Oak will see us, be like.

00:22:07,940 --> 00:22:17,720
All right, so you want to go right and up.

00:22:17,720 --> 00:22:26,200
Let's do it.

00:22:26,200 --> 00:22:27,200
Let's do it.

00:22:27,200 --> 00:22:28,200
Right?

00:22:28,200 --> 00:22:29,200
I believe in you.

00:22:29,200 --> 00:22:33,110
I believe that this community can stick together and we can defeat.

00:22:33,110 --> 00:22:34,110
Yes.

00:22:34,110 --> 00:22:35,110
OK.

00:22:35,110 --> 00:22:42,810
All right, Oak is looking out for us, now let's just span A and B so we can get past

00:22:42,810 --> 00:22:48,860
this guy talking to us, this science guy, Professor Oak the science guy.

00:22:48,860 --> 00:22:51,260
Cool we're on our way to his lab.

00:22:51,260 --> 00:22:57,770
Gonna get our first Pokémon, I'm excited for our adventure, we don't even have to write

00:22:57,770 --> 00:23:00,070
up, the game scripts that for you.

00:23:00,070 --> 00:23:02,210
As you can see, I named my rival fool.

00:23:02,210 --> 00:23:08,530
Because it's customary to name your rival will something not nice and I think he's kind

00:23:08,530 --> 00:23:10,210
of a fool.

00:23:10,210 --> 00:23:12,810
When I was young I was a serious Pokémon trainer, cool.

00:23:12,810 --> 00:23:20,250
I'm going to span 3 so we don't accidentally spark a conversation with him.

00:23:20,250 --> 00:23:30,250
All right, so now we want to go down and right once we're done this.

00:23:30,250 --> 00:23:35,050
All right, let's go right.

00:23:35,050 --> 00:23:36,050
Let's do it.

00:23:36,050 --> 00:23:37,280
We got this.

00:23:37,280 --> 00:23:39,580
So we're going to go right.

00:23:39,580 --> 00:23:41,730
Oh, I believe in us.

00:23:41,730 --> 00:23:45,400
I believe in us.

00:23:45,400 --> 00:23:47,400
I believe in us.

00:23:47,400 --> 00:23:52,720
I actually just copied right and I'm just copying and pasting it now and sending it

00:23:52,720 --> 00:23:53,990
in a text message.

00:23:53,990 --> 00:23:57,070
Now we want to go up and press A. Which Pokémon should we select?

00:23:57,070 --> 00:24:08,721
Well, at least we're going to be able to fight against charm it's

00:24:08,721 --> 00:24:10,970
probably better.

00:24:10,970 --> 00:24:15,460
Oh, A, AI, OK.

00:24:15,460 --> 00:24:26,310
J, P, -- or JZ OK, cool, really creative nickname, extremely creative nickname and this fool

00:24:26,310 --> 00:24:36,320
is going to take charm ander, sow now we have to battle him.

00:24:36,320 --> 00:24:37,850
And what's our strategy going to be for this battle?

00:24:37,850 --> 00:24:40,890
Are we just going to repeatedly tackle?

00:24:40,890 --> 00:24:53,659
You want to use growl at all?

00:24:53,659 --> 00:25:04,170
>> Bulbasaur, yeah, I think Charmander has tail whip.

00:25:04,170 --> 00:25:13,900
Oh, no, we hit growl.

00:25:13,900 --> 00:25:16,420
We're growling at each other.

00:25:16,420 --> 00:25:26,050
Oh, yeah, we're going to tackle, tackle him now.

00:25:26,050 --> 00:25:27,750
Not a very strong tackle, probably.

00:25:27,750 --> 00:25:28,750
Oh, no.

00:25:28,750 --> 00:25:35,400
We're -- if we lose to this Charmander, what does that say about the JavaScript community?

00:25:35,400 --> 00:25:40,600
Oh, he's scratching us.

00:25:40,600 --> 00:25:44,440
I think we can do this.

00:25:44,440 --> 00:25:51,951
I should have grabbed this possession and then saved after that.

00:25:51,951 --> 00:25:53,650
But that would have been cheating.

00:25:53,650 --> 00:25:55,250
We don't need to do that.

00:25:55,250 --> 00:25:56,250
We can do this ourselves.

00:25:56,250 --> 00:25:57,880
As long as we spam A and get lucky.

00:25:57,880 --> 00:26:00,090
I think we're going to win.

00:26:00,090 --> 00:26:01,280
Uh-oh.

00:26:01,280 --> 00:26:05,500
We've got to press up, like, once.

00:26:05,500 --> 00:26:07,280
Oh, no.

00:26:07,280 --> 00:26:13,320
At least the Charmander is going to be really weak.

00:26:13,320 --> 00:26:14,680
We're just growling at each other.

00:26:14,680 --> 00:26:20,210
This is like an intimidation match right here.

00:26:20,210 --> 00:26:21,950
I still have faith in us.

00:26:21,950 --> 00:26:25,640
I think we can -- all right, we hit tackle.

00:26:25,640 --> 00:26:27,480
We hit tackle.

00:26:27,480 --> 00:26:31,940
Oh, no, critical hit uh-oh.

00:26:31,940 --> 00:26:37,410
That ain't good.

00:26:37,410 --> 00:26:46,740
Uh-oh, I think we can do it, though, we're at least making him weaker.

00:26:46,740 --> 00:26:49,620
All right, we're tackling again.

00:26:49,620 --> 00:26:57,650
Charmander is growling at us, getting weaker as time goes by, but so is Charmander.

00:26:57,650 --> 00:27:00,740
Oh, no!

00:27:00,740 --> 00:27:03,990
We're doing one damage to each other.

00:27:03,990 --> 00:27:06,020
Growl can't make him any weaker.

00:27:06,020 --> 00:27:07,100
No.

00:27:07,100 --> 00:27:09,270
Oh, no.

00:27:09,270 --> 00:27:12,530
All right, nothing happened.

00:27:12,530 --> 00:27:13,890
All right.

00:27:13,890 --> 00:27:15,200
We got growl.

00:27:15,200 --> 00:27:19,670
If nobody ever presses up or down again, then I think we got this.

00:27:19,670 --> 00:27:22,250
I think we can win.

00:27:22,250 --> 00:27:26,160
Oh, no!

00:27:26,160 --> 00:27:29,160
You know, I still believe in us.

00:27:29,160 --> 00:27:32,280
Oh, no!

00:27:32,280 --> 00:27:35,030
You know, if we get a critical hit, we can make this happen.

00:27:35,030 --> 00:27:37,150
We can win.

00:27:37,150 --> 00:27:38,870
Oh!

00:27:38,870 --> 00:27:40,000
It's still possible.

00:27:40,000 --> 00:27:41,000
It's still possible!

00:27:41,000 --> 00:27:42,000
Oh, no!

00:27:42,000 --> 00:27:43,000
OK.

00:27:43,000 --> 00:27:44,000
All right.

00:27:44,000 --> 00:27:51,510
You know, I'm never -- I'm not going to give up on us.

00:27:51,510 --> 00:27:56,690
I'm not going to give up.

00:27:56,690 --> 00:27:58,270
That is unfortunate that we missed.

00:27:58,270 --> 00:27:59,880
And he's still growling.

00:27:59,880 --> 00:28:02,970
OK, come on, critical hit.

00:28:02,970 --> 00:28:03,970
No.

00:28:03,970 --> 00:28:04,970
All right.

00:28:04,970 --> 00:28:05,970
No.

00:28:05,970 --> 00:28:09,840
Well, well, we lost -- I guess we're the fools now.

00:28:09,840 --> 00:28:11,340
Oh, man.

00:28:11,340 --> 00:28:16,240
Well, whoever shouted Charmander should be happy now, because at least you know Charmander

00:28:16,240 --> 00:28:17,720
is the best choice.

00:28:17,720 --> 00:28:23,640
And that's my favorite line, gramp, smell you later.

00:28:23,640 --> 00:28:32,620
But I guess we lost that first battle, but I have faith we can grow as Pokémon trainers,

00:28:32,620 --> 00:28:36,960
and learn, because you know, going to conferences is all about learning and improving and stuff,

00:28:36,960 --> 00:28:41,920
right, so we're going to become better Pokémon trainers yet, just you wait and see.

00:28:41,920 --> 00:28:45,410
With that said I think that's all I have.

00:28:45,410 --> 00:28:48,240
My name is Sam Agnew, I'm a developer evangelist at Twilio.

00:28:48,240 --> 00:28:50,690
I'll be at the pool and the after party later.

00:28:50,690 --> 00:28:54,860
Have a good rest of JSConf.

00:28:54,860 --> 00:28:55,860
[applause]

00:28:55,860 --> 00:28:58,080

YouTube URL: https://www.youtube.com/watch?v=cUy43G-gcB4


