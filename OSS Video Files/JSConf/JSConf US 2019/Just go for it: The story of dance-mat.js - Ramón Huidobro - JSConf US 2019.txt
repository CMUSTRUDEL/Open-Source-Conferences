Title: Just go for it: The story of dance-mat.js - Ramón Huidobro - JSConf US 2019
Publication date: 2019-09-12
Playlist: JSConf US 2019
Description: 
	Side projects can be daunting if you're new to them. It takes discipline to get started, and even more so to finish. And what's even more daunting is that finishing is only the beginning of maintenance.

In this talk, I'll relate my adventures coming up with dance-mat.js, the project for making a Dance Dance Revolution controller with Raspberry Pi, the Bare Conductive PiCap, and Node.js.
Captions: 
	00:00:00,110 --> 00:00:01,970
Just go for it: The story of dance mat.js

00:00:01,970 --> 00:00:03,840
Ramon Huidobro PARISS: Who likes tacos? Raise your hand.

00:00:03,840 --> 00:00:04,840
I literally asked that to see who was paying attention. Cool. All right. Okay. But who

00:00:04,840 --> 00:00:05,840
here has personal projects? Really? Has ever worked on a personal project? Okay. That's

00:00:05,840 --> 00:00:06,840
better. Cool. All right. So, our next speaker will be talking about personal projects and

00:00:06,840 --> 00:00:07,840
maintaining them and letting you know that you can do it. You're gonna get stuck but

00:00:07,840 --> 00:00:08,840
keep going. Can we give a warm welcome to Ramon Huidobro?

00:00:08,840 --> 00:00:09,840
[ Applause ] I said it better backstage, but I got nervous.

00:00:09,840 --> 00:00:14,841
RAMON: Hi, everyone, thank you so much for that lovely introduction, and thank you all

00:00:14,841 --> 00:00:18,070
for being here today. Before my slides appear, I want to say thank you for being here, JSConf,

00:00:18,070 --> 00:00:23,730
thank you for having me. This is my first time ever as a JSConf anywhere in the world.

00:00:23,730 --> 00:00:24,730
[ Applause ] This is  thank you. This is mine. So, I'm

00:00:24,730 --> 00:00:29,200
just gonna nab it. And  I really like it. All righty. Okay. We're good to go. Hi, everyone,

00:00:29,200 --> 00:00:32,820
before we start off, there's a link at the bottom, also in my Twitter, SenorHuidobro,

00:00:32,820 --> 00:00:35,160
if you want to follow along for convenience sake. My name is Ramon. I am a freelance software

00:00:35,160 --> 00:00:37,690
Dev and teach kids on the side, I live in Vienna, Austria. And you might think, what's

00:00:37,690 --> 00:00:42,160
with the picture of the dog, can we see more of the dog, please? Don't worry, I've got

00:00:42,160 --> 00:00:50,540
you covered. This is Fiona. This is Fiona, we adopted her about three years ago. And

00:00:50,540 --> 00:00:56,899
I love her so much because her  especially because of her eyes. She has these Simpsons

00:00:56,899 --> 00:01:02,680
eyes that look in different directions and she says so much with these eyes. My favorite

00:01:02,680 --> 00:01:12,600
is this top right photo where she's judging my wife while she eats mango. So, in Chile

00:01:12,600 --> 00:01:19,130
Spanish, we have a word to describe Fiona which is regalona. I haven't been able to

00:01:19,130 --> 00:01:25,920
find a suitable translation. Tried, put it in, I put in regalona, got it back. I tried

00:01:25,920 --> 00:01:34,810
it in German. And in Austria, we speak German. There's a bajillion words, but German being

00:01:34,810 --> 00:01:41,729
German, it capitalized it. [ Laughter ]

00:01:41,729 --> 00:01:47,850
It in short regalona means spoiled, but you spoil them on purpose and they love you. It's

00:01:47,850 --> 00:01:54,780
a whole thing. Anyway, let's talk about rhythm video games. In particular, dancing video

00:01:54,780 --> 00:02:02,200
games. Any of you play Just Dance? Can't quite see. I'm gonna say from that one yes that

00:02:02,200 --> 00:02:08,920
all of you do. I haven't myself. But what you do is you dance to the rhythm. You do

00:02:08,920 --> 00:02:14,220
the little poses and you gets points as you go. So, this is fairly popular. They're still

00:02:14,220 --> 00:02:19,950
making them to this day. But when I was a kid, about 20 years ago, there was this other

00:02:19,950 --> 00:02:25,890
game called Dance Dance Revolution. Or DDR. [ Applause ]

00:02:25,890 --> 00:02:31,780
Nice to see  nice to hear there's a few fans in here. If you're not familiar with DDR as

00:02:31,780 --> 00:02:39,690
I'm going to refer to it from now on, as you can see in this very well done GIF is that

00:02:39,690 --> 00:02:44,230
this person's pressing the buttons to the rhythm of the music. Now, on screen what you

00:02:44,230 --> 00:02:50,709
see is little arrows that come up as the song goes on to tell you when to step on the buttons,

00:02:50,709 --> 00:02:57,060
right? And it's a lot of fun. You can see it's a bit older. So, this is from PlayStation,

00:02:57,060 --> 00:03:06,640
I think. It's fairly old. But it's a lot of fun. And the music. How do I put this? I'm

00:03:06,640 --> 00:03:24,709
gonna show you. Let me just load it up here. [Rockin’ techno music beat thing]

00:03:24,709 --> 00:03:29,380
It's something else. By the way, whoever is in charge of the playlist of music today,

00:03:29,380 --> 00:03:38,260
whoo, you're really nailing it. So, I used to play this a lot when I was a kid. But a

00:03:38,260 --> 00:03:42,080
few years ago I introduced this game to my wife who had never played it before. We were

00:03:42,080 --> 00:03:50,739
looking for ways to play it. And we actually found an open source alternative called Step

00:03:50,739 --> 00:03:58,080
Mania. Anybody heard of Step Mania? I see a couple hands. Cool. So, Step Mania lets

00:03:58,080 --> 00:04:03,030
you load in your own songs and customize it to your own liking. And like I said, it's

00:04:03,030 --> 00:04:07,860
fully open source. Like I said, we had the software, we had the music. What about the

00:04:07,860 --> 00:04:13,890
controller, you might be wondering? So, in the arcade, the controllers for Dance Dance

00:04:13,890 --> 00:04:19,780
Revolution were these big metallic ones. But at home, what you had, especially during the

00:04:19,780 --> 00:04:28,669
heyday of DDR were these foam mats. They looked like this. And they're great. They were affordable,

00:04:28,669 --> 00:04:35,689
they were about 30 Euros. So, $30, approximately. And they were a lot of fun. But the problem

00:04:35,689 --> 00:04:41,581
is that if you use them as much as we did, they kind of wore out after a while. And so,

00:04:41,581 --> 00:04:46,740
you started getting used to seeing this screen a lot. So, you couldn't really press the buttons

00:04:46,740 --> 00:04:52,020
anymore. So, we looked into metal alternatives. And they do exist. You can buy them. But I

00:04:52,020 --> 00:04:56,490
don't know if you saw the price, but it's like for two of them, that's $300. And that's

00:04:56,490 --> 00:05:04,419
discounted from $900. This is a lot of bones for, you know, wanting to play some DDR. So,

00:05:04,419 --> 00:05:09,040
we didn't really look into it. But then a few years later my wife and I were at this

00:05:09,040 --> 00:05:14,729
thing called Maker Faire. Do they have that here? Cool. We were at the Maker Faire in

00:05:14,729 --> 00:05:26,569
Vienna and I was introduced into bear conductor paint. Anybody familiar with this? And I learned

00:05:26,569 --> 00:05:31,889
about bare conductive paint on the random Facebook videos you scroll through is you

00:05:31,889 --> 00:05:38,939
can draw circuits using paint. They had a demo where you can draw lines from a battery

00:05:38,939 --> 00:05:43,389
to a lightbulb and created a circuit and it worked which was pretty cool. But what you

00:05:43,389 --> 00:05:55,270
can see is it's also capacitive and can send a receptor. In this case, going to a Raspberry

00:05:55,270 --> 00:06:02,470
Pi. And you could play a piano using a Raspberry Pi and some paint. Which I thought was cool

00:06:02,470 --> 00:06:11,270
and then I thought, hmm m. I could do something with this. And I saw there was a Node.js interface

00:06:11,270 --> 00:06:16,310
that you could install on the Raspberry Pi that even had a nice code example. That was

00:06:16,310 --> 00:06:26,430
very handy. And then I thought hmm m... I could definitely make something with this.

00:06:26,430 --> 00:06:29,830
And  [ Laughter ]

00:06:29,830 --> 00:06:38,800
Then I went back to Step Mania and I saw I could customize the controls. What if I took

00:06:38,800 --> 00:06:53,819
a Raspberry Pi, a yoga mat, a some Node.js? Lo and behold, project dance mat was born.

00:06:53,819 --> 00:06:57,409
Something to bear in mind, though, this is the first time I had ever worked with anything

00:06:57,409 --> 00:07:05,430
hardware related. So, needless to say, I was a little intimidated. So, I sat down with

00:07:05,430 --> 00:07:12,869
my wife, how are we going to make this? Very simple, a dance mat, connect to a computer.

00:07:12,869 --> 00:07:19,499
The computer thinks, ah ha, this is a keyboard. And handle the button presses as if they were

00:07:19,499 --> 00:07:27,789
keyboard strokes. Fantastic. So, I had my little bit of setting up here. They have this

00:07:27,789 --> 00:07:32,210
NPM package that I could install, set the thresholds for touching and releasing. That

00:07:32,210 --> 00:07:38,179
is how sensitive. Because when something is capacitive, it question detects when your

00:07:38,179 --> 00:07:46,110
finger is approaching the paint. You want to mess around with the sensitivity. Great.

00:07:46,110 --> 00:07:52,669
We had everything set up except for the big comment that says send data to PC. Which 

00:07:52,669 --> 00:07:58,699
again, I like to jump into projects without doing much research. So, I learned that Raspberry

00:07:58,699 --> 00:08:03,240
Pis, when you plug them into a computer, the computer doesn't automatically go, oh, that

00:08:03,240 --> 00:08:09,019
is USB device. I can take it from here. You might be thinking, Ramon.

00:08:09,019 --> 00:08:14,580
[ Laughter ] Did you not research this? And let me remind

00:08:14,580 --> 00:08:20,569
you, this is my first time doing a project like this. But okay. I did some searching

00:08:20,569 --> 00:08:25,409
around, I talked to some friends and I discovered that you can configure what's called a gadget.

00:08:25,409 --> 00:08:30,649
See, a Raspberry Pi, the most common software used on it is Linux. So, I could configure

00:08:30,649 --> 00:08:39,360
this Linux kernel to have a little  to  when you connect to a PC tell it, ha ha, I'm

00:08:39,360 --> 00:08:45,770
a USB keyboard device. And I found a blog post that let me do all the copy pasting which

00:08:45,770 --> 00:08:50,130
is fantastic. I took the copy pasting part  I took the most important part which is, of

00:08:50,130 --> 00:09:01,450
course, the serial number, the manufacturer and product. Don't worry about what this does.

00:09:01,450 --> 00:09:07,269
What it does in sort is basically set it up so this is a script that when run will set

00:09:07,269 --> 00:09:13,839
itself up as a recognizable USB device for the computer to interact with. So, then, okay,

00:09:13,839 --> 00:09:19,400
that's one part done. Then I need to actually send data through that USB interface. So,

00:09:19,400 --> 00:09:25,300
I went on the USB human interface devices documentation and I downloaded what I found

00:09:25,300 --> 00:09:36,750
out was a 96 page PDF. And I made the sound that a basset hound makes when it barks. Woof 

00:09:36,750 --> 00:09:42,699
but I stuck with it. And I found out that, in short, when you go to interact with this

00:09:42,699 --> 00:09:53,210
USB interface, I need to send a byte array of 8 hexadecimal, that's a code. And I need

00:09:53,210 --> 00:10:02,250
to send these. I searched and found a nice GitHub listing of all of the keys. Very cool.

00:10:02,250 --> 00:10:09,089
I defined my little constants for left, right, up and down. And I set these up so that when

00:10:09,089 --> 00:10:16,300
they're pressed by me, the Raspberry Pi would tell the computer A, B, C and D. This was

00:10:16,300 --> 00:10:24,320
so exciting. Just to write this code. So, that got me started. So I defined these constants

00:10:24,320 --> 00:10:30,019
and I told myself, all right, now we'll process the actual touches. First I'll get the keys

00:10:30,019 --> 00:10:39,189
that are sent from the cap connected to the Raspberry Pi to  to this function which is

00:10:39,189 --> 00:10:47,920
an array of electrodes that are pressed. So, what I would do is have  would parse those

00:10:47,920 --> 00:10:54,720
pressed keys from the data and then take those and make an array of eight keys. You might

00:10:54,720 --> 00:10:59,470
be wondering, what if you're just pressing one? You have one pressed key and eight blank

00:10:59,470 --> 00:11:09,110
ones. Okay. So, to pass  to parse those keys, all I needed to do was loop through each of

00:11:09,110 --> 00:11:14,519
the electrodes that are pressed and, depending on which index it has, because you probably

00:11:14,519 --> 00:11:21,439
saw in the picture, I should have one here. You probably saw that it had 12 or so electrodes

00:11:21,439 --> 00:11:26,620
that you could touch. So, from left to right I just assigned them accordingly and then

00:11:26,620 --> 00:11:32,819
I was all set. I could return my pressed keys. Next up, to actually turn that into an array

00:11:32,819 --> 00:11:40,939
of keys and turn that into a key stroke, I would just force it to be 8 in any case and

00:11:40,939 --> 00:11:50,500
fill the rest with blank ones. Please stop me if I'm going too fast. So, with that, with

00:11:50,500 --> 00:11:54,930
this program running, I could have it always detect which ones are pressed and it would

00:11:54,930 --> 00:12:00,660
just log out the key stroke as it would be. And, of course, if there's more than one pressed,

00:12:00,660 --> 00:12:04,449
then it would take both into account. Because in DDR, I don't know if you know, there are

00:12:04,449 --> 00:12:10,279
times when you have to press two like this, like that. I'm not going to go much more on

00:12:10,279 --> 00:12:16,999
that. So, now we'll actually send  now we'll actually take the byte array out of that.

00:12:16,999 --> 00:12:24,360
Turns out there's a JavaScript function for getting 8 bit unsigned integers. So, you could

00:12:24,360 --> 00:12:32,670
just call Uint8array from key stroke. All set and nice. And now to send this key stroke

00:12:32,670 --> 00:12:42,180
to the actual USB interface. Um. I hadn't done this before. So, I did some research

00:12:42,180 --> 00:12:48,389
and I found out that the actual interface in Linux is interacted by something called

00:12:48,389 --> 00:12:56,500
a file descriptor. So, what a file descriptor is, just gonna take my cursor out of there.

00:12:56,500 --> 00:13:02,509
Somebody should have said something  what a file descriptor is any communication Linux

00:13:02,509 --> 00:13:09,810
does through other devices with any input/output devices is through files. So, a USB device,

00:13:09,810 --> 00:13:15,589
a computer, a node on a network, or even a Word document, those are all files to Linux

00:13:15,589 --> 00:13:22,240
so you can send and get data from them. So, I thought, I wonder if there's anything on

00:13:22,240 --> 00:13:29,939
npm that does this. Lo and behold, there is. I found this Linux device package which let

00:13:29,939 --> 00:13:38,699
me just open up that USB interface and all I had to do was call device right buffer and

00:13:38,699 --> 00:13:44,449
I was good to go. Now, you might be wondering, did it work. And I said, well, before we get

00:13:44,449 --> 00:13:49,990
there, we have to be responsible. When the program ends, I need to close that device.

00:13:49,990 --> 00:14:00,399
Did it work? Well, let's find out. So, I ran node dance mat.js. I plugged the Raspberry

00:14:00,399 --> 00:14:07,140
Pi into my laptop. I opened up a text editor, best type of test there is, and look at that.

00:14:07,140 --> 00:14:13,329
I'm sending A, B and C. I've never been so excited to see these letters.

00:14:13,329 --> 00:14:18,500
[ Applause ] Now, you might be wondering, Ramon, why did

00:14:18,500 --> 00:14:24,819
you show us every sordid detail that have? I wanted to show my excitement. I didn't have

00:14:24,819 --> 00:14:35,579
any experience doing this. I persevered. My wife was very patient with me. And then it

00:14:35,579 --> 00:14:43,160
worked. And then came the fun part. We could actually start painting. And so, this is a

00:14:43,160 --> 00:14:50,089
picture from home. We took the paint. We bought a yoga mat at the corner store. We even made

00:14:50,089 --> 00:14:59,209
it two player compatible. And after a while we cut them up because we found out that dancing

00:14:59,209 --> 00:15:09,439
so close to each other can cause a few problems. And did it work? Yes. Did we start passing

00:15:09,439 --> 00:15:17,579
songs with super scores? Eh. You know, we got Ds. But it had been a while since we played.

00:15:17,579 --> 00:15:22,959
So, then the question was, are we set for life now? And really it depends on how you

00:15:22,959 --> 00:15:29,970
look at it. So, here's something I learned: Putting paint on a yoga mat and expecting

00:15:29,970 --> 00:15:37,910
that to stay forever  eh. So, then, you know, we had to reapply some coats of point. We

00:15:37,910 --> 00:15:42,230
have to modify some things here and there. And we started gathering a what we call a

00:15:42,230 --> 00:15:54,540
if I could do this over again. Ramon, why didn't you use an Arduino? What is an Arduino?

00:15:54,540 --> 00:15:58,800
We found out, yes, it's nice to be able to roll up the yoga mat. But maybe a more flat

00:15:58,800 --> 00:16:03,920
surface would be good for the paint. And we started  and, you know, we also thought about

00:16:03,920 --> 00:16:11,579
maybe for latency to have physical cables instead of paint. And we started doing some

00:16:11,579 --> 00:16:16,420
mods like that. I don't myself, but my wife knows how to do it, soldering, and she does

00:16:16,420 --> 00:16:23,889
it well. You might be thinking, do you think you did it? Yes, of course. Because the important

00:16:23,889 --> 00:16:29,439
thing is, we learned a lot and we are delighted about it. This picture is from three days

00:16:29,439 --> 00:16:32,110
ago. [ Applause ]

00:16:32,110 --> 00:16:40,230
So, I've got a few takeaways for you. I mean, like, you know, if you're not experienced

00:16:40,230 --> 00:16:44,232
in messing around with hardware, it can look super daunting and you might want to have

00:16:44,232 --> 00:16:50,759
a  what is it called? A fire extinguisher close by. But the importance of playing around

00:16:50,759 --> 00:16:55,790
with stuff is so vital. And it's so much fun. And you learn so much. And here's the important

00:16:55,790 --> 00:16:59,240
part. If you have an idea, just go for it. You never know if it's gonna work. Thanks,

00:16:59,240 --> 00:17:00,240
folks. [ Applause ]

00:17:00,240 --> 00:17:01,240
[ Laughter ]

00:17:01,240 --> 00:17:02,240
[ Applause ] PARISS: All right. So, we're wrapping up.

00:17:02,240 --> 00:17:03,240
We're near the end. Our last talk will be coming on soon. You know what's funny? Every

00:17:03,240 --> 00:17:04,240
time our speaker would come backstage, I would ask them, like, how do you feel? Are you ready?

00:17:04,240 --> 00:17:05,240
I'm really nervous. And I'm like, me too. Like, I'm nervous. And then they get on here

00:17:05,240 --> 00:17:06,240
and they're freaking Beyoncé. They're just so confident. I'm like, you liar. But honestly

00:17:06,240 --> 00:17:07,240
the speakers have been amazing. Give them a round of applause.

00:17:07,240 --> 00:17:08,240
[ Applause ] And we have one last talk. That will be happening

00:17:08,240 --> 00:17:08,250

YouTube URL: https://www.youtube.com/watch?v=EFJxP93s5Tg


