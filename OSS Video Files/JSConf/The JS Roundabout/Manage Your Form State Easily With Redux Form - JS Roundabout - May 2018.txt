Title: Manage Your Form State Easily With Redux Form - JS Roundabout - May 2018
Publication date: 2018-05-11
Playlist: The JS Roundabout
Description: 
	William Duclot talks about managing your form state using Redux-Form. Visual feedback, asynchronous validation, custom inputs, multi-pages form, filtering... Learn how to cut through the mess of managing forms in front-end thanks to Redux and Redux-Form, and be prepared to implement the craziest of your client's requests in record time! By storing your form's state in the Redux store and by providing powerful primitives, Redux-Form allows you fine-grained control while being light and easy to use.
Captions: 
	00:00:00,000 --> 00:00:04,620
welcome for this talk so the title is

00:00:02,120 --> 00:00:07,140
manage your form state easily with

00:00:04,620 --> 00:00:09,450
Reddick form which I realize is a super

00:00:07,140 --> 00:00:10,860
name title because does not know

00:00:09,450 --> 00:00:13,290
anything it's really hard to find a pen

00:00:10,860 --> 00:00:15,980
with relevant form if you have any idea

00:00:13,290 --> 00:00:22,590
you can come talk to me after the talk

00:00:15,980 --> 00:00:25,050
so that's a form form where largely of

00:00:22,590 --> 00:00:27,990
software while ago like you hard you

00:00:25,050 --> 00:00:30,689
form an HTML on front San and you had

00:00:27,990 --> 00:00:32,369
some complex back-end some data is sent

00:00:30,689 --> 00:00:34,710
from the form to your back and you treat

00:00:32,369 --> 00:00:38,010
each you send back a new page with

00:00:34,710 --> 00:00:42,719
whatever you want see nowaday we are

00:00:38,010 --> 00:00:46,050
using complex JS apps like with big J's

00:00:42,719 --> 00:00:48,600
front-end framework and there's a lot

00:00:46,050 --> 00:00:51,030
more expectation regarding user

00:00:48,600 --> 00:00:53,250
experience you need to react in real

00:00:51,030 --> 00:00:55,829
time to what the user inputs in your

00:00:53,250 --> 00:00:58,440
form you need to do some validation in

00:00:55,829 --> 00:01:01,680
which in real time and all of that is

00:00:58,440 --> 00:01:05,549
really not that easy because forms are

00:01:01,680 --> 00:01:07,290
inherently stateful that means like at

00:01:05,549 --> 00:01:08,970
any point you want to access the state

00:01:07,290 --> 00:01:11,100
of your form what is the state of your

00:01:08,970 --> 00:01:15,630
form it can be the sets of values that

00:01:11,100 --> 00:01:18,420
are input in each of the field but

00:01:15,630 --> 00:01:22,110
there's also more metadata as as the

00:01:18,420 --> 00:01:22,650
whole as this form being searched is it

00:01:22,110 --> 00:01:26,100
dirty

00:01:22,650 --> 00:01:29,490
is it being submitted has a submission

00:01:26,100 --> 00:01:31,470
failed a lot of things that you don't

00:01:29,490 --> 00:01:34,710
know you need them all this information

00:01:31,470 --> 00:01:37,229
until you do anything and so very

00:01:34,710 --> 00:01:41,009
quickly you end up asking yourself where

00:01:37,229 --> 00:01:44,009
should I store all of the state and as

00:01:41,009 --> 00:01:47,759
you can guess the answer will come

00:01:44,009 --> 00:01:50,490
person so the in the context of a react

00:01:47,759 --> 00:01:53,250
app the very first reflects you might

00:01:50,490 --> 00:01:55,140
have is to store of that in a state full

00:01:53,250 --> 00:01:57,780
form component that kind of make sense

00:01:55,140 --> 00:02:00,750
but you very soon hand up in the usual

00:01:57,780 --> 00:02:03,390
hell of state full form I mean of in

00:02:00,750 --> 00:02:05,460
general stateful components which is you

00:02:03,390 --> 00:02:08,670
need to pass down the state from the

00:02:05,460 --> 00:02:11,069
component that holds state down to the

00:02:08,670 --> 00:02:14,489
that uses the state and if you want to

00:02:11,069 --> 00:02:16,560
update the state this state sorry you

00:02:14,489 --> 00:02:18,540
end up needing to pass call back from

00:02:16,560 --> 00:02:21,599
this component holding the states down

00:02:18,540 --> 00:02:24,739
to this one and this one will call the

00:02:21,599 --> 00:02:28,310
call back to develop the states update

00:02:24,739 --> 00:02:31,200
that's a very generic problem actually

00:02:28,310 --> 00:02:35,280
that's actually exactly sprained that's

00:02:31,200 --> 00:02:38,130
Redax source rather give you these stole

00:02:35,280 --> 00:02:40,980
things that allows you to directly write

00:02:38,130 --> 00:02:44,340
in the store and everything will treat

00:02:40,980 --> 00:02:45,660
like trickle down to all Z like all the

00:02:44,340 --> 00:02:47,850
updates will trickle down to the

00:02:45,660 --> 00:02:50,040
component directly without this kind of

00:02:47,850 --> 00:02:52,560
callback or this kind of props that

00:02:50,040 --> 00:02:58,220
needs to be passed down and that's very

00:02:52,560 --> 00:03:00,750
nice in the context of formed in

00:02:58,220 --> 00:03:02,580
specifically forms there's a lot of

00:03:00,750 --> 00:03:08,250
stuff that you will want to do such

00:03:02,580 --> 00:03:10,470
radix form handles for you so in general

00:03:08,250 --> 00:03:13,230
what is really cool reddit forum is a

00:03:10,470 --> 00:03:15,840
library that allows you to abstract the

00:03:13,230 --> 00:03:18,030
forum state management using radix

00:03:15,840 --> 00:03:22,560
particularly in the context of react

00:03:18,030 --> 00:03:25,950
apps but not necessary so I put some

00:03:22,560 --> 00:03:30,540
vanity metrics here to show that radix

00:03:25,950 --> 00:03:33,000
form is quite mature library it's a well

00:03:30,540 --> 00:03:36,120
maintained there are regular releases

00:03:33,000 --> 00:03:40,170
like the github issues are answer to

00:03:36,120 --> 00:03:42,239
it's documented like it's pretty nice

00:03:40,170 --> 00:03:45,209
they even have a Twitter which is always

00:03:42,239 --> 00:03:48,350
a good sign a good sign that your

00:03:45,209 --> 00:03:52,109
library is serious

00:03:48,350 --> 00:03:54,810
in one world radix form what does it do

00:03:52,109 --> 00:03:57,450
it allows you form States to live in

00:03:54,810 --> 00:03:59,190
your Reddick store I put some words in

00:03:57,450 --> 00:04:01,799
both here so that you don't have to

00:03:59,190 --> 00:04:04,010
reach much and okay what does that mean

00:04:01,799 --> 00:04:04,010
exactly

00:04:04,489 --> 00:04:10,859
do you see some stuff yes

00:04:06,630 --> 00:04:13,290
so here I have a very simple app such

00:04:10,859 --> 00:04:17,599
suspiciously looks like Phoebe's one

00:04:13,290 --> 00:04:21,100
react create react app is around there

00:04:17,599 --> 00:04:25,510
so what do we have here we have here

00:04:21,100 --> 00:04:27,570
a field all alone here a thing that will

00:04:25,510 --> 00:04:31,840
just display some part of the state for

00:04:27,570 --> 00:04:34,930
it is your to read and I will obtain the

00:04:31,840 --> 00:04:39,370
dev tools so if we look at our dev tools

00:04:34,930 --> 00:04:43,210
we see here a foam key and inside that

00:04:39,370 --> 00:04:46,390
we see an awesome foam key and inside

00:04:43,210 --> 00:04:48,570
that we see some more stuff happening

00:04:46,390 --> 00:04:52,020
let's check the code of all of that to

00:04:48,570 --> 00:04:52,020
understand what it means

00:04:53,190 --> 00:04:58,890
so on the left here you have a the code

00:04:56,710 --> 00:05:02,740
of our app it's very simple we shows a

00:04:58,890 --> 00:05:05,890
foam and then the state thing we don't

00:05:02,740 --> 00:05:09,040
really care about that in our form we

00:05:05,890 --> 00:05:12,100
just display a field so there's two

00:05:09,040 --> 00:05:16,600
thing you need to notice here it's this

00:05:12,100 --> 00:05:21,190
red X form here and this field here both

00:05:16,600 --> 00:05:22,660
of those come from red X form rent form

00:05:21,190 --> 00:05:24,550
provides a red X form higher-order

00:05:22,660 --> 00:05:27,820
components that will wrap your

00:05:24,550 --> 00:05:31,060
components and make it a foam handle by

00:05:27,820 --> 00:05:33,640
Reddick form and field this component

00:05:31,060 --> 00:05:35,770
here is also provided by way this form

00:05:33,640 --> 00:05:39,760
it's imported here and it will make you

00:05:35,770 --> 00:05:41,500
feel that managed by Reddick soon in

00:05:39,760 --> 00:05:43,900
practice what does that mean that means

00:05:41,500 --> 00:05:46,420
that just by declaring it's like that

00:05:43,900 --> 00:05:47,950
so field we give it a render probe here

00:05:46,420 --> 00:05:50,860
component here we'll just render a

00:05:47,950 --> 00:05:53,050
simple HTML input a name we'll call it

00:05:50,860 --> 00:05:56,650
search and whatever probes that will be

00:05:53,050 --> 00:05:59,170
passed down to the render problem it

00:05:56,650 --> 00:06:02,530
will render all that for you and it will

00:05:59,170 --> 00:06:04,630
manage it so managing it means that as

00:06:02,530 --> 00:06:08,170
soon as you start using it you have a

00:06:04,630 --> 00:06:10,330
lot of information about the state just

00:06:08,170 --> 00:06:12,220
by clicking in it they have some

00:06:10,330 --> 00:06:14,290
information so this is basically

00:06:12,220 --> 00:06:19,210
displaying some part of the state here

00:06:14,290 --> 00:06:20,380
is your trade you have you have some

00:06:19,210 --> 00:06:22,300
information about the state of your

00:06:20,380 --> 00:06:23,680
phone and the state of your fields you

00:06:22,300 --> 00:06:25,660
know that this search field has been

00:06:23,680 --> 00:06:27,580
visited and that it's currently active

00:06:25,660 --> 00:06:31,660
and that's the formula you know that

00:06:27,580 --> 00:06:33,630
which field is active so that's already

00:06:31,660 --> 00:06:35,010
interesting I basically

00:06:33,630 --> 00:06:37,860
do anything and I have access to this

00:06:35,010 --> 00:06:41,610
information when I Stipe when I starts

00:06:37,860 --> 00:06:43,080
typing into this this form I see that I

00:06:41,610 --> 00:06:45,720
get some more information

00:06:43,080 --> 00:06:48,300
praise most valuable which is the values

00:06:45,720 --> 00:06:50,160
that are actually in my phone and that

00:06:48,300 --> 00:06:53,660
those information are updated in real

00:06:50,160 --> 00:06:56,220
time so it's pretty cool that means that

00:06:53,660 --> 00:06:59,520
having access to all of that I can just

00:06:56,220 --> 00:07:02,250
from any part of my application I can

00:06:59,520 --> 00:07:07,440
just select all of these information and

00:07:02,250 --> 00:07:10,950
do whatever I want with those how does

00:07:07,440 --> 00:07:13,350
this does State updates happens it's

00:07:10,950 --> 00:07:16,440
like the standard way of updating the

00:07:13,350 --> 00:07:18,000
state in red X through actions if you

00:07:16,440 --> 00:07:21,660
paid attention here a lot of things

00:07:18,000 --> 00:07:22,740
happened we can see a focus here a

00:07:21,660 --> 00:07:25,320
change here

00:07:22,740 --> 00:07:29,250
a lot of changes actually and if I blow

00:07:25,320 --> 00:07:30,950
the field if I find my mouse here if I

00:07:29,250 --> 00:07:33,900
blow the feel I have a blur action

00:07:30,950 --> 00:07:37,920
that's how reddit forum works it Maps

00:07:33,900 --> 00:07:43,830
some like it triggers or some actions

00:07:37,920 --> 00:07:45,510
when you use your field ok so it's all

00:07:43,830 --> 00:07:48,690
you you have we have that in the forum

00:07:45,510 --> 00:07:52,910
how do we actually use all of those all

00:07:48,690 --> 00:07:52,910
of those information we can very quickly

00:07:53,120 --> 00:08:02,580
write a simple use case for order so I

00:08:00,840 --> 00:08:05,270
need to put down the mic because they

00:08:02,580 --> 00:08:13,800
are around 10 seconds of live coding

00:08:05,270 --> 00:08:20,550
I'll just talk really loud anything

00:08:13,800 --> 00:08:24,030
obviously okay

00:08:20,550 --> 00:08:28,349
so you can see not much has changed

00:08:24,030 --> 00:08:31,020
I just display a list of programming

00:08:28,349 --> 00:08:33,570
languages here and I will want to make

00:08:31,020 --> 00:08:36,060
my search includes a filter of this list

00:08:33,570 --> 00:08:38,969
we'll see how simple that is with radix

00:08:36,060 --> 00:08:41,969
form so if we check our code we just

00:08:38,969 --> 00:08:46,350
displaying a list here in addition to

00:08:41,969 --> 00:08:50,880
what we already had and if we check this

00:08:46,350 --> 00:08:52,829
list what's in there we have a fake

00:08:50,880 --> 00:08:55,250
selector here it does not actually fetch

00:08:52,829 --> 00:08:57,990
is data from the state but it mocks it

00:08:55,250 --> 00:09:00,600
that's good enough we have our list

00:08:57,990 --> 00:09:04,050
component that takes a language is prop

00:09:00,600 --> 00:09:04,560
and that displays it as a list very

00:09:04,050 --> 00:09:07,170
simple

00:09:04,560 --> 00:09:09,270
and finally what we export is a

00:09:07,170 --> 00:09:11,790
connected version of that where we get

00:09:09,270 --> 00:09:13,920
the languages from the state and we

00:09:11,790 --> 00:09:16,440
return it so we provide this probe to

00:09:13,920 --> 00:09:20,490
our components how do we make a filter

00:09:16,440 --> 00:09:25,260
for this list with our search input it's

00:09:20,490 --> 00:09:27,570
very simple the first thing we need is

00:09:25,260 --> 00:09:32,420
really the values that is in the input

00:09:27,570 --> 00:09:35,579
and radix form gives us here a selector

00:09:32,420 --> 00:09:42,899
that allows you to get some field data

00:09:35,579 --> 00:09:48,959
from any form so if we using that we can

00:09:42,899 --> 00:09:52,740
get the value of the field from values

00:09:48,959 --> 00:09:57,360
selector the first thing we need to give

00:09:52,740 --> 00:09:59,430
them is the name of the form so that's

00:09:57,360 --> 00:10:04,920
what we had here with some kind of

00:09:59,430 --> 00:10:06,779
unique identifier for our form I don't

00:10:04,920 --> 00:10:09,240
see much okay

00:10:06,779 --> 00:10:11,370
and then we give Z we give it the states

00:10:09,240 --> 00:10:16,350
and the name of the field we want to

00:10:11,370 --> 00:10:21,240
select I call it search okay so we have

00:10:16,350 --> 00:10:23,820
access to my to my search value which is

00:10:21,240 --> 00:10:27,110
what's in the field and here I just need

00:10:23,820 --> 00:10:27,110
to filter those languages

00:10:28,650 --> 00:10:40,410
dick and I will only keep the one that

00:10:34,420 --> 00:10:41,560
contains whatever inputs in my field

00:10:40,410 --> 00:10:43,839
okay

00:10:41,560 --> 00:10:46,810
did that work okay my lease disappeared

00:10:43,839 --> 00:10:47,560
if I type in I have some things that

00:10:46,810 --> 00:10:51,130
reappear

00:10:47,560 --> 00:10:53,980
so for example if I tap on this kind of

00:10:51,130 --> 00:10:56,920
stuff it seemed to walk I just don't

00:10:53,980 --> 00:10:58,750
have that feel that list when I have

00:10:56,920 --> 00:11:00,279
nothing in because I'm not handling this

00:10:58,750 --> 00:11:08,200
patch grow edge case

00:11:00,279 --> 00:11:15,130
so just by honey rings up properly all

00:11:08,200 --> 00:11:20,020
of that should work okay cool so here I

00:11:15,130 --> 00:11:24,250
have my list and if I type in it should

00:11:20,020 --> 00:11:26,680
be properly filtered okay that works so

00:11:24,250 --> 00:11:29,830
it's pretty cool I really didn't add

00:11:26,680 --> 00:11:33,400
much code I added just this filter here

00:11:29,830 --> 00:11:35,890
which is basic logic i and i added this

00:11:33,400 --> 00:11:39,339
selector here and some kind of educate

00:11:35,890 --> 00:11:42,160
here so really by doing not much we have

00:11:39,339 --> 00:11:47,170
a real-time filter of our over a list of

00:11:42,160 --> 00:11:54,310
a table or whatever you want let's go

00:11:47,170 --> 00:11:57,339
back to the slide let's compare how we

00:11:54,310 --> 00:11:59,589
would have handled all of that using a

00:11:57,339 --> 00:12:02,140
stateful components and how we did using

00:11:59,589 --> 00:12:05,580
radix phone so if we want to access some

00:12:02,140 --> 00:12:08,140
form data from anywhere new application

00:12:05,580 --> 00:12:10,420
if you have stateful components you will

00:12:08,140 --> 00:12:12,550
need to pass those like some prop down

00:12:10,420 --> 00:12:14,890
from your component holding the states

00:12:12,550 --> 00:12:16,570
down to the component using it that's

00:12:14,890 --> 00:12:17,940
what we call prop straining because you

00:12:16,570 --> 00:12:21,760
have to go to any intermediate

00:12:17,940 --> 00:12:24,040
components using free using Reddick's

00:12:21,760 --> 00:12:27,850
foam we just use selectors and connect

00:12:24,040 --> 00:12:30,640
our state live into Reddick store and

00:12:27,850 --> 00:12:32,140
those components is just self-contained

00:12:30,640 --> 00:12:35,800
fetches the data

00:12:32,140 --> 00:12:38,620
it needs if you want to write some from

00:12:35,800 --> 00:12:40,420
data with a stateful component we need

00:12:38,620 --> 00:12:44,350
to pass some call backrubs

00:12:40,420 --> 00:12:47,980
it's very messy it's quickly hard to

00:12:44,350 --> 00:12:49,480
maintain and I'd rather avoid ads using

00:12:47,980 --> 00:12:51,220
reddit forum which and just dispatch

00:12:49,480 --> 00:12:54,610
actions which is a standard way of doing

00:12:51,220 --> 00:12:56,410
that or you know it allows you to make

00:12:54,610 --> 00:12:58,660
sure your state management is handled by

00:12:56,410 --> 00:13:00,700
radix and not the component and that's

00:12:58,660 --> 00:13:03,640
really nice because that's what radix is

00:13:00,700 --> 00:13:06,220
made for and it keeps your UI

00:13:03,640 --> 00:13:11,380
descriptive like the code of your UI

00:13:06,220 --> 00:13:16,060
descriptive and raises an imperative so

00:13:11,380 --> 00:13:17,620
that's pretty cool there's one bit that

00:13:16,060 --> 00:13:20,890
you need to understand to understand how

00:13:17,620 --> 00:13:22,959
radix form work it's this field magic

00:13:20,890 --> 00:13:26,230
this component here what does it

00:13:22,959 --> 00:13:28,660
actually do so we give it a component

00:13:26,230 --> 00:13:31,000
which is a random prop we give it a name

00:13:28,660 --> 00:13:33,190
and you can give it any additional

00:13:31,000 --> 00:13:36,490
products that will be passed to this

00:13:33,190 --> 00:13:40,120
component because what Phil does is that

00:13:36,490 --> 00:13:42,970
it renders your under your under prop

00:13:40,120 --> 00:13:46,269
that makes sense and mostly it gives it

00:13:42,970 --> 00:13:51,100
to new props gives it an input prop and

00:13:46,269 --> 00:13:53,470
the makeup drop in input you get those

00:13:51,100 --> 00:13:57,300
five values here

00:13:53,470 --> 00:13:59,470
those five those five properties

00:13:57,300 --> 00:14:02,230
unchanged and blur on track use value

00:13:59,470 --> 00:14:06,519
name so value is the current value of

00:14:02,230 --> 00:14:08,620
the field unchanged is a function to

00:14:06,519 --> 00:14:11,649
dispatch and unchanged action so to

00:14:08,620 --> 00:14:13,510
write in the store on blur let's start

00:14:11,649 --> 00:14:15,910
with unfocused unfocused makes you feel

00:14:13,510 --> 00:14:18,279
active it also dispatches an action to

00:14:15,910 --> 00:14:21,040
so that the fact that your field is

00:14:18,279 --> 00:14:25,690
active is in the store and on bluemix it

00:14:21,040 --> 00:14:28,060
and active and in meter you have a bit

00:14:25,690 --> 00:14:30,310
more information about you about the

00:14:28,060 --> 00:14:32,800
state of the field it gives you is your

00:14:30,310 --> 00:14:35,350
field the currently in Europe like if

00:14:32,800 --> 00:14:37,680
you have some validation and it has

00:14:35,350 --> 00:14:41,410
you'd field been touched hasn't been

00:14:37,680 --> 00:14:42,410
visited as he like is it dirty a lot of

00:14:41,410 --> 00:14:46,520
information this

00:14:42,410 --> 00:14:50,030
very useful that means most important is

00:14:46,520 --> 00:14:52,960
input here and it's written in such a

00:14:50,030 --> 00:14:56,750
way that you can just destructure it in

00:14:52,960 --> 00:14:59,540
standard input HTML elements and just

00:14:56,750 --> 00:15:01,640
like call it a day because that we walk

00:14:59,540 --> 00:15:03,500
out of the box the name krob will be

00:15:01,640 --> 00:15:06,320
matched to the name drop of the input

00:15:03,500 --> 00:15:09,230
the unchanged and blurry and produce all

00:15:06,320 --> 00:15:11,570
of that would be nicely handled and when

00:15:09,230 --> 00:15:15,710
you type in your input the correct

00:15:11,570 --> 00:15:18,170
action will be dispatched but that also

00:15:15,710 --> 00:15:21,500
allows you to write some custom

00:15:18,170 --> 00:15:26,180
components some custom inputs and that's

00:15:21,500 --> 00:15:29,140
really where reddit form signs let's go

00:15:26,180 --> 00:15:29,140
through a simple example

00:15:31,650 --> 00:15:37,350
[Music]

00:15:40,490 --> 00:15:46,050
okay so here I have a custom component

00:15:43,770 --> 00:15:48,900
system filled a custom input whatever

00:15:46,050 --> 00:15:54,360
you want to call it that is just a value

00:15:48,900 --> 00:15:57,450
and a button in the sense like it's not

00:15:54,360 --> 00:16:01,080
an input in the HTML sense there's no

00:15:57,450 --> 00:16:03,860
input in there is directly defined in my

00:16:01,080 --> 00:16:06,210
in my phone so here I gave it a custom

00:16:03,860 --> 00:16:10,140
you still have my field with a name and

00:16:06,210 --> 00:16:12,300
I gave it a custom component here where

00:16:10,140 --> 00:16:14,310
I just displays a value and I just have

00:16:12,300 --> 00:16:17,250
a simple button with an unclick prod

00:16:14,310 --> 00:16:21,330
that will increment the value of my

00:16:17,250 --> 00:16:24,270
components by calling the unchanged so

00:16:21,330 --> 00:16:27,240
from an HTML standpoint it's really not

00:16:24,270 --> 00:16:29,280
an input but from a red X form

00:16:27,240 --> 00:16:32,090
standpoint it's definitely an input we

00:16:29,280 --> 00:16:35,370
have this value here in our value in

00:16:32,090 --> 00:16:37,470
reduced form part of the state and if I

00:16:35,370 --> 00:16:39,930
click on this button it increments and

00:16:37,470 --> 00:16:42,470
this value changes so from the point of

00:16:39,930 --> 00:16:45,270
view a poetic form is definitely just

00:16:42,470 --> 00:16:50,130
just as much and an input as a real

00:16:45,270 --> 00:16:55,950
input tag so that's pretty cool you can

00:16:50,130 --> 00:17:03,270
build very complex fields how did I call

00:16:55,950 --> 00:17:05,600
that at least know I can really this

00:17:03,270 --> 00:17:08,010
kind of stuff where we have a dynamic

00:17:05,600 --> 00:17:10,700
number of fields that can appear that

00:17:08,010 --> 00:17:15,030
can disappear that themself contains

00:17:10,700 --> 00:17:18,270
dynamic subfields number of subfield so

00:17:15,030 --> 00:17:20,010
for example here if I'm Rotem stuff this

00:17:18,270 --> 00:17:27,470
is JavaScript and I'm adding some

00:17:20,010 --> 00:17:31,860
tooling for example react react easy I

00:17:27,470 --> 00:17:34,860
can add Redux and all of that appears

00:17:31,860 --> 00:17:36,780
here in our part of the of the state and

00:17:34,860 --> 00:17:39,720
we can see we have a shape of the state

00:17:36,780 --> 00:17:42,390
that's actually quite complex and we can

00:17:39,720 --> 00:17:45,270
really structure our form States as we

00:17:42,390 --> 00:17:46,650
want and select any part of it so and

00:17:45,270 --> 00:17:48,780
you can grid that very quickly it's very

00:17:46,650 --> 00:17:52,040
useful you have a lot of tools that I'm

00:17:48,780 --> 00:17:52,040
doing right form to do that

00:17:53,440 --> 00:18:03,110
okay to select all of those like all of

00:18:00,679 --> 00:18:05,000
these states that that is made

00:18:03,110 --> 00:18:07,279
accessible by regs form ready form gives

00:18:05,000 --> 00:18:09,380
you a lot of selectors to select those

00:18:07,279 --> 00:18:13,210
part of the state we not manually but

00:18:09,380 --> 00:18:16,039
through like through selectors that are

00:18:13,210 --> 00:18:18,830
available in relics form you have some

00:18:16,039 --> 00:18:21,799
simple ones like get forms value but you

00:18:18,830 --> 00:18:25,370
can also know if a form is dirty is it

00:18:21,799 --> 00:18:27,649
it's valid if it's being submitted if

00:18:25,370 --> 00:18:29,120
this mission has failed or succeeded all

00:18:27,649 --> 00:18:30,950
this kind of stuff that's very useful

00:18:29,120 --> 00:18:34,429
and that walks out of the box you don't

00:18:30,950 --> 00:18:36,769
have to implement anything even more

00:18:34,429 --> 00:18:40,039
interesting you can have you have a

00:18:36,769 --> 00:18:42,190
bunch of action creators so that allows

00:18:40,039 --> 00:18:45,049
you to interact with your form

00:18:42,190 --> 00:18:46,490
programmatically that means that from

00:18:45,049 --> 00:18:50,240
anywhere in your code you can just

00:18:46,490 --> 00:18:54,260
dispatch actions and it will affect your

00:18:50,240 --> 00:18:56,870
form so for example here we can see our

00:18:54,260 --> 00:18:59,720
blur action our change actions that we

00:18:56,870 --> 00:19:02,210
tell you from anywhere from a component

00:18:59,720 --> 00:19:03,980
from a tank from a saga to change the

00:19:02,210 --> 00:19:08,240
value of a field you can clear your

00:19:03,980 --> 00:19:10,279
fields focus ones meets your form touch

00:19:08,240 --> 00:19:14,840
of here you can do pretty much whatever

00:19:10,279 --> 00:19:20,289
you want you can really go crazy and I

00:19:14,840 --> 00:19:25,429
actually did one crazy I prepared you a

00:19:20,289 --> 00:19:31,970
small demo that is not that small I

00:19:25,429 --> 00:19:35,000
spent way too much time on that so this

00:19:31,970 --> 00:19:37,519
is only this is just one saga that is

00:19:35,000 --> 00:19:42,100
dispatch dispatching some actions one

00:19:37,519 --> 00:19:45,350
after the other so a saga is just I

00:19:42,100 --> 00:19:47,389
don't want to enter into much detail but

00:19:45,350 --> 00:19:50,389
a saga just allows you to dispatch some

00:19:47,389 --> 00:19:51,919
action in a very controlled way so I

00:19:50,389 --> 00:19:54,710
will dispatch some action to interact

00:19:51,919 --> 00:20:00,170
with my form and to simulate in a way

00:19:54,710 --> 00:20:02,320
our our user interaction

00:20:00,170 --> 00:20:04,160
so you can see you can just

00:20:02,320 --> 00:20:06,440
programmatically fill-in blowers that's

00:20:04,160 --> 00:20:09,890
not videos just action being dispatches

00:20:06,440 --> 00:20:17,360
you can say them happy here actually you

00:20:09,890 --> 00:20:19,610
can't because you can trigger some

00:20:17,360 --> 00:20:23,030
validation you can reset your field add

00:20:19,610 --> 00:20:34,250
some like new value in your array field

00:20:23,030 --> 00:20:38,180
I don't even know what to say

00:20:34,250 --> 00:20:41,300
I spend one too much time once again so

00:20:38,180 --> 00:20:42,710
yeah only know you can reset completely

00:20:41,300 --> 00:20:44,930
your form with whatever value you want

00:20:42,710 --> 00:20:47,660
and in the end you can just submit your

00:20:44,930 --> 00:20:49,370
form this is what you get when you

00:20:47,660 --> 00:20:51,470
submit your forms so those are the

00:20:49,370 --> 00:20:53,870
values you access when your form is

00:20:51,470 --> 00:20:59,870
submitted what you will send wherever

00:20:53,870 --> 00:21:01,760
you you submit it so you have a very

00:20:59,870 --> 00:21:07,280
fine-grain control over your form and

00:21:01,760 --> 00:21:11,330
that's pretty cool pretty useful okay so

00:21:07,280 --> 00:21:12,830
there's a few limitations and go chat so

00:21:11,330 --> 00:21:15,050
let's start with the limitations the

00:21:12,830 --> 00:21:17,690
first one is that there's no field level

00:21:15,050 --> 00:21:21,290
initial value there's no way in radix

00:21:17,690 --> 00:21:24,920
form that I am aware of to say for

00:21:21,290 --> 00:21:27,140
example all number field have an initial

00:21:24,920 --> 00:21:29,990
value of zero or all date field have an

00:21:27,140 --> 00:21:32,120
initial value of today it's just no way

00:21:29,990 --> 00:21:35,960
of saying that you have to say in your

00:21:32,120 --> 00:21:38,840
form specify in this form this field as

00:21:35,960 --> 00:21:40,690
this initial value is it's a bit of a

00:21:38,840 --> 00:21:42,230
pain but you can walk around that it's

00:21:40,690 --> 00:21:45,250
still worth it

00:21:42,230 --> 00:21:48,860
and to be honest that's pretty much it

00:21:45,250 --> 00:21:52,010
you can do whatever you want with others

00:21:48,860 --> 00:21:53,870
form I've never entered in nearly never

00:21:52,010 --> 00:21:56,420
encountered any other limitations and

00:21:53,870 --> 00:21:58,490
this one you can set some initial values

00:21:56,420 --> 00:22:00,980
from new form you can reinitialize it

00:21:58,490 --> 00:22:02,690
you can do some field validation some

00:22:00,980 --> 00:22:05,900
form validation you can validate

00:22:02,690 --> 00:22:07,880
synchronously or asynchronously you can

00:22:05,900 --> 00:22:10,040
validate unchanged conveyed it and blur

00:22:07,880 --> 00:22:11,830
on some aids wherever you want you can

00:22:10,040 --> 00:22:14,380
map your back-end euros on

00:22:11,830 --> 00:22:16,870
ones and zeros can control when you want

00:22:14,380 --> 00:22:17,919
to submit how you want to submit it's

00:22:16,870 --> 00:22:20,380
very very powerful

00:22:17,919 --> 00:22:22,929
so first gotcha is that there's no

00:22:20,380 --> 00:22:29,159
implicit initial value if I go back to

00:22:22,929 --> 00:22:29,159
my was it's my complex field example

00:22:31,890 --> 00:22:39,010
here it can be very tricky I'm adding

00:22:35,590 --> 00:22:41,590
one language and one to here you see my

00:22:39,010 --> 00:22:43,409
form is empty basically like this tuning

00:22:41,590 --> 00:22:46,659
part of the form is completely empty

00:22:43,409 --> 00:22:48,220
there's no value anywhere right this

00:22:46,659 --> 00:22:50,409
makes sense because this is empty has

00:22:48,220 --> 00:22:53,169
never been touched this is empty it has

00:22:50,409 --> 00:22:55,779
never been touched but this like it's

00:22:53,169 --> 00:22:58,960
not empty clearly library is selected

00:22:55,779 --> 00:23:02,409
but doesn't appear here so maybe the

00:22:58,960 --> 00:23:04,059
user will submit it at the end and what

00:23:02,409 --> 00:23:06,399
you will get is undefined it's not

00:23:04,059 --> 00:23:09,070
library it's some kind of inconsistency

00:23:06,399 --> 00:23:11,440
between HTML and Radek form so be

00:23:09,070 --> 00:23:16,240
careful with that initio to initialize

00:23:11,440 --> 00:23:20,289
your forms do not and mount fields like

00:23:16,240 --> 00:23:22,720
to not hide your fields and make them

00:23:20,289 --> 00:23:24,100
reappear do some like react magic to do

00:23:22,720 --> 00:23:26,529
this kind of stuff it's not a lot of

00:23:24,100 --> 00:23:28,750
reason to do that but if you do you

00:23:26,529 --> 00:23:30,669
might lose some validation of your field

00:23:28,750 --> 00:23:32,230
because they will be unregistered and we

00:23:30,669 --> 00:23:35,049
registered by radix form and for some

00:23:32,230 --> 00:23:35,350
reason like the validation gets

00:23:35,049 --> 00:23:37,960
up

00:23:35,350 --> 00:23:41,740
which way so yeah it's a lot of pain and

00:23:37,960 --> 00:23:43,360
really hard to debug and finally that's

00:23:41,740 --> 00:23:47,019
not redux form specific that's in

00:23:43,360 --> 00:23:49,870
general forms are hard keep your form

00:23:47,019 --> 00:23:52,870
logic really as simple as you can don't

00:23:49,870 --> 00:23:55,320
get crazy in your form validation in

00:23:52,870 --> 00:23:59,919
your business rules

00:23:55,320 --> 00:24:04,330
just keep your form as simple as you can

00:23:59,919 --> 00:24:06,490
because you can very quickly make your

00:24:04,330 --> 00:24:09,039
own edge case like play play against

00:24:06,490 --> 00:24:11,200
yourself by trying to make some fields

00:24:09,039 --> 00:24:13,240
interact with each other or go with

00:24:11,200 --> 00:24:16,510
crazy validation rules that actually

00:24:13,240 --> 00:24:20,049
don't walk and trying to be smart about

00:24:16,510 --> 00:24:22,240
when arrows are shown to the user and in

00:24:20,049 --> 00:24:26,400
the end it doesn't work and you

00:24:22,240 --> 00:24:26,400
mess of code debug it's ripping

00:24:26,830 --> 00:24:33,280
in conclusion radix form avoids a lot of

00:24:30,280 --> 00:24:35,920
our plate because like it does a lot of

00:24:33,280 --> 00:24:39,100
stuff that's you would need to develop

00:24:35,920 --> 00:24:41,650
yourself like it offers you it avoids

00:24:39,100 --> 00:24:45,610
you this callback hell these props

00:24:41,650 --> 00:24:47,320
training those basically all the state

00:24:45,610 --> 00:24:51,760
management for you and that's really

00:24:47,320 --> 00:24:53,770
nice so they've time just melt away it's

00:24:51,760 --> 00:24:57,340
seen us for bit of experience not that

00:24:53,770 --> 00:24:59,640
much to be honest but to really

00:24:57,340 --> 00:25:03,250
understand how it works and how to

00:24:59,640 --> 00:25:07,690
quickly and cleanly build new input for

00:25:03,250 --> 00:25:10,210
example some custom inputs it's just you

00:25:07,690 --> 00:25:13,720
need a bit of time to fiddle with it to

00:25:10,210 --> 00:25:15,310
play with it to be perfectly at ease is

00:25:13,720 --> 00:25:17,890
there's some good documentation and

00:25:15,310 --> 00:25:20,500
that's a really good point everything is

00:25:17,890 --> 00:25:22,270
documented you have some examples in the

00:25:20,500 --> 00:25:25,090
official documentation that are really

00:25:22,270 --> 00:25:28,090
useful there's also a lot of data issues

00:25:25,090 --> 00:25:29,800
that are answered to like a lot of

00:25:28,090 --> 00:25:31,420
people trying to do stuff and then I'm

00:25:29,800 --> 00:25:34,000
not sure what is the good practice to do

00:25:31,420 --> 00:25:35,650
it so don't hesitate to go on the github

00:25:34,000 --> 00:25:38,860
issues and to look for what you're

00:25:35,650 --> 00:25:44,680
trained to do you might have some good

00:25:38,860 --> 00:25:47,560
answers and questions right button okay

00:25:44,680 --> 00:25:48,700
it became de facto standard at zero so

00:25:47,560 --> 00:25:51,220
that's the company I work for

00:25:48,700 --> 00:25:55,080
we are service company and so we have

00:25:51,220 --> 00:25:55,080
like dozen of clients over the years

00:25:55,470 --> 00:26:00,520
just yeah said it just melts away the

00:25:58,180 --> 00:26:03,730
dev time it allows you to build very

00:26:00,520 --> 00:26:06,270
quickly some prototypes it but it's

00:26:03,730 --> 00:26:10,630
still production rate is very robust

00:26:06,270 --> 00:26:14,710
there's little magic so all in all it's

00:26:10,630 --> 00:26:17,170
a very good very good library and that's

00:26:14,710 --> 00:26:20,880
it for radix form thank you all for

00:26:17,170 --> 00:26:20,880
listening to me rumbling about that

00:26:21,700 --> 00:26:23,760

YouTube URL: https://www.youtube.com/watch?v=neYra0ROFe4


