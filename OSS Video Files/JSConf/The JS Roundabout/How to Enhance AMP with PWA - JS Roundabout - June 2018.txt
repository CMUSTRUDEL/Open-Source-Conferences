Title: How to Enhance AMP with PWA - JS Roundabout - June 2018
Publication date: 2018-06-18
Playlist: The JS Roundabout
Description: 
	Presented by Mattia Assogna, software engineer at DAZN.

AMP is essentially a performance optimized HTML and JavaScript framework designed to deliver content quickly. PWA is used to describe web apps that make use of modern browser features to deliver rich, app-like experiences taking advantage of Service Workers API for offline use, Push Api and Notification API for asynchronous push messages and Web App Manifest for adding metadata to a web app. Mattia will talk about these tools and discuss how to combine them to achieve unbelievable performance on devices.

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:05,279
so today I'm gonna talk about how to

00:00:01,740 --> 00:00:07,620
enhance amp with PWA we already seemed

00:00:05,279 --> 00:00:10,349
like a great talk from Sanj about amps

00:00:07,620 --> 00:00:13,469
and I wanna just try to go to disrupt

00:00:10,349 --> 00:00:17,279
voices and I'm gonna try to sneak him

00:00:13,469 --> 00:00:21,930
JavaScript on an amp closer you see the

00:00:17,279 --> 00:00:25,800
first time right I'm Mattia as I said

00:00:21,930 --> 00:00:28,500
I'm working at the zone if anyone

00:00:25,800 --> 00:00:33,750
doesn't know what the zone is no one

00:00:28,500 --> 00:00:35,730
knows dozen is like oh my yeah my

00:00:33,750 --> 00:00:40,440
interview I spend most of time try to

00:00:35,730 --> 00:00:46,379
try to know how to pronounce it I still

00:00:40,440 --> 00:00:50,940
don't know I guess it's the zone I don't

00:00:46,379 --> 00:00:53,430
know actually I don't think this is like

00:00:50,940 --> 00:00:56,730
a chronic Mumbai yeah but what we're

00:00:53,430 --> 00:00:59,640
doing that's why I know with is like

00:00:56,730 --> 00:01:02,609
Netflix instead of being for TV and

00:00:59,640 --> 00:01:04,710
movies is for sports you won't see it

00:01:02,609 --> 00:01:07,530
soon because like rights for sports in

00:01:04,710 --> 00:01:10,770
your case too expensive but we exist in

00:01:07,530 --> 00:01:12,360
different countries right so that's the

00:01:10,770 --> 00:01:15,000
agenda of today I'm gonna have like a

00:01:12,360 --> 00:01:16,740
brief introduction where I'm trying to

00:01:15,000 --> 00:01:20,189
convince you to use these technologies

00:01:16,740 --> 00:01:21,930
and try to scare you mostly and then I'm

00:01:20,189 --> 00:01:23,369
gonna start talking about um like a

00:01:21,930 --> 00:01:26,400
brief introduction because we have

00:01:23,369 --> 00:01:28,530
already an amazing talk about it PWA and

00:01:26,400 --> 00:01:30,780
how to merge them together so this won't

00:01:28,530 --> 00:01:33,810
be new for you because like signs

00:01:30,780 --> 00:01:36,299
already mentioned but 50 to 53 percent

00:01:33,810 --> 00:01:38,130
of the user leave the website after 30

00:01:36,299 --> 00:01:40,200
seconds so if the app doesn't boot

00:01:38,130 --> 00:01:43,799
that's a lot in three seconds they leave

00:01:40,200 --> 00:01:46,530
and sadly 75 percent of the mobile

00:01:43,799 --> 00:01:49,880
website it takes more than 10 seconds to

00:01:46,530 --> 00:01:53,340
load and this one is just like an

00:01:49,880 --> 00:01:55,530
another info it's like the website

00:01:53,340 --> 00:01:58,380
mobile website that loads in less than 5

00:01:55,530 --> 00:02:01,049
seconds gets twice the revenue for this

00:01:58,380 --> 00:02:03,360
lower website so the question is why

00:02:01,049 --> 00:02:06,390
they are so slow there are many reasons

00:02:03,360 --> 00:02:08,789
one of the main reasons like the size of

00:02:06,390 --> 00:02:12,540
the website because like since when we

00:02:08,789 --> 00:02:13,330
had iPhone to iPhone 3 we increase a lot

00:02:12,540 --> 00:02:15,310
the speed

00:02:13,330 --> 00:02:17,620
performance of devices we had a faster

00:02:15,310 --> 00:02:20,020
connection around the same site at the

00:02:17,620 --> 00:02:21,490
same time we increase a lot the size of

00:02:20,020 --> 00:02:24,760
our website because we increase

00:02:21,490 --> 00:02:27,910
complexity library framework and so

00:02:24,760 --> 00:02:31,690
that's just an example this one just

00:02:27,910 --> 00:02:33,760
like an average data there are more than

00:02:31,690 --> 00:02:35,860
a hundred kilobytes just for loads adds

00:02:33,760 --> 00:02:38,260
more than one and half megabytes for

00:02:35,860 --> 00:02:40,660
content in general is like more than two

00:02:38,260 --> 00:02:44,560
megabytes and a half weight as average

00:02:40,660 --> 00:02:48,010
for mobile web page you said 15 second I

00:02:44,560 --> 00:02:51,130
found 13 but that's slow all of them and

00:02:48,010 --> 00:02:52,570
as an average we are making about 200

00:02:51,130 --> 00:02:54,910
several requests every time they will

00:02:52,570 --> 00:02:57,340
load the app and where alph of them is

00:02:54,910 --> 00:03:02,709
like related so the question is how can

00:02:57,340 --> 00:03:05,980
we fix this we can use um and when where

00:03:02,709 --> 00:03:09,310
the amp shines to me is like restricting

00:03:05,980 --> 00:03:11,440
our development because like we are we

00:03:09,310 --> 00:03:13,630
can achieve whatever amp is giving to us

00:03:11,440 --> 00:03:16,840
we don't need em for that but hum it

00:03:13,630 --> 00:03:19,959
just like constraining us to do to

00:03:16,840 --> 00:03:22,870
follow best practice and the way how it

00:03:19,959 --> 00:03:24,730
does is like is banning JavaScript so

00:03:22,870 --> 00:03:26,380
it's gonna get rid of JavaScript the

00:03:24,730 --> 00:03:28,150
only one who allows is its own

00:03:26,380 --> 00:03:30,940
JavaScript so the library of bank and

00:03:28,150 --> 00:03:32,890
then it's gonna use the custom component

00:03:30,940 --> 00:03:36,100
it's like abstraction of the normal HTML

00:03:32,890 --> 00:03:39,010
tag and those ones it just like allows

00:03:36,100 --> 00:03:42,130
you to restrict and to expand the HTML

00:03:39,010 --> 00:03:45,070
tags and you also have like a reduced

00:03:42,130 --> 00:03:48,370
size for CSS so just inline success and

00:03:45,070 --> 00:03:51,510
it's to be up to 50 kilobytes weight

00:03:48,370 --> 00:03:53,230
so really brief introduction

00:03:51,510 --> 00:03:54,760
reintroduction because we've seen

00:03:53,230 --> 00:03:57,580
already this and when the main

00:03:54,760 --> 00:04:01,000
components are amp HTML this one is like

00:03:57,580 --> 00:04:03,700
the basic declaration of the HTML so you

00:04:01,000 --> 00:04:07,180
do have I told you I'm just like

00:04:03,700 --> 00:04:08,860
bouncing my voice you do have like HTML

00:04:07,180 --> 00:04:10,540
and then you do have like a link I'm

00:04:08,860 --> 00:04:12,610
just going through the most important

00:04:10,540 --> 00:04:16,299
one and link you do you have like a

00:04:12,610 --> 00:04:18,400
river or the normal version if amp is

00:04:16,299 --> 00:04:20,080
not supported and then you do a lockup

00:04:18,400 --> 00:04:22,900
you port where you can decide the vid

00:04:20,080 --> 00:04:25,660
there with length I didn't type the

00:04:22,900 --> 00:04:27,280
whole thing but that one is used by am

00:04:25,660 --> 00:04:29,680
to speed up the run

00:04:27,280 --> 00:04:32,860
of the page and you also have the only

00:04:29,680 --> 00:04:39,340
script is you allowed to have that's the

00:04:32,860 --> 00:04:41,070
unprojected so then we got the MJ s MJ s

00:04:39,340 --> 00:04:44,290
as I told you is like a library that

00:04:41,070 --> 00:04:46,750
restrict us when we are developing an

00:04:44,290 --> 00:04:50,440
application and it tries to force us to

00:04:46,750 --> 00:04:52,210
use the best practice then it's going to

00:04:50,440 --> 00:04:54,460
manage the external resources because

00:04:52,210 --> 00:04:57,730
what it does it loads a synchronously

00:04:54,460 --> 00:05:00,520
every resources that we need in our app

00:04:57,730 --> 00:05:04,660
so it doesn't create the bottleneck of

00:05:00,520 --> 00:05:06,880
like different resources then restricts

00:05:04,660 --> 00:05:10,510
the tags you can use as we seen earlier

00:05:06,880 --> 00:05:12,640
and calculate that one is a way to speed

00:05:10,510 --> 00:05:13,510
up the process calculate the punch the

00:05:12,640 --> 00:05:16,630
Regicides

00:05:13,510 --> 00:05:19,800
and when it does converts the amp HTML

00:05:16,630 --> 00:05:23,440
that we astrick to use to a normal HTML

00:05:19,800 --> 00:05:26,710
last but not least is the aunt cache the

00:05:23,440 --> 00:05:29,950
um cache is like to me is the real

00:05:26,710 --> 00:05:32,290
player in this amp technology what it

00:05:29,950 --> 00:05:33,610
does is like resizing and match the

00:05:32,290 --> 00:05:35,710
viewport so if you do have like a

00:05:33,610 --> 00:05:39,780
smaller device resolution it gives you

00:05:35,710 --> 00:05:43,120
like a lighter version of the same image

00:05:39,780 --> 00:05:45,729
then has inline CSS magnification

00:05:43,120 --> 00:05:48,430
success and as a pre render of the page

00:05:45,729 --> 00:05:51,550
before loading on your in the background

00:05:48,430 --> 00:05:53,770
before loading in in Europe so the

00:05:51,550 --> 00:05:55,390
benefits are more than one the most

00:05:53,770 --> 00:05:57,370
important one is that we're going to

00:05:55,390 --> 00:05:59,169
have like a fast loading time and a fast

00:05:57,370 --> 00:06:02,410
interaction so as you can you can

00:05:59,169 --> 00:06:04,240
imagine a lighter website it loads like

00:06:02,410 --> 00:06:07,360
faster and the interaction itself is

00:06:04,240 --> 00:06:09,520
going to be faster itself we can have

00:06:07,360 --> 00:06:13,630
like a pre-rendered page and then we're

00:06:09,520 --> 00:06:19,140
gonna have like a announced CEO I saw

00:06:13,630 --> 00:06:19,140
you pronounce it señor yeah thank you

00:06:19,539 --> 00:06:22,960
just because it's powered by Google

00:06:21,370 --> 00:06:26,380
Google you know give us like this

00:06:22,960 --> 00:06:30,660
present to have like this like feature

00:06:26,380 --> 00:06:33,580
and then as has been mentioned already

00:06:30,660 --> 00:06:36,820
Google will show your version in the top

00:06:33,580 --> 00:06:38,919
stories on the Google search these are

00:06:36,820 --> 00:06:41,060
like just like a few stories for example

00:06:38,919 --> 00:06:44,060
of like company that succeeds

00:06:41,060 --> 00:06:45,650
excessively implement amp I guess

00:06:44,060 --> 00:06:48,680
comparative market is another one and

00:06:45,650 --> 00:06:53,200
they achieved like a lot more using this

00:06:48,680 --> 00:06:55,610
technology but there are one issue to me

00:06:53,200 --> 00:06:57,380
we won't have like a richer user

00:06:55,610 --> 00:06:59,960
experience because as we've seen earlier

00:06:57,380 --> 00:07:02,060
we do have like a lots of restriction so

00:06:59,960 --> 00:07:04,190
we're going to gain a lots of speed but

00:07:02,060 --> 00:07:06,350
we won't have like a rich user

00:07:04,190 --> 00:07:08,270
experience and the reason why we won't

00:07:06,350 --> 00:07:12,110
have it is like because we couldn't we

00:07:08,270 --> 00:07:14,600
can't use javascript the images lazy

00:07:12,110 --> 00:07:16,250
loaded and what I mean is like it's

00:07:14,600 --> 00:07:18,320
going to load just the page that inside

00:07:16,250 --> 00:07:20,840
the viewport wherever like outside the

00:07:18,320 --> 00:07:24,560
viewport won't be loaded there are some

00:07:20,840 --> 00:07:27,139
tricks but mainly this you can no track

00:07:24,560 --> 00:07:29,030
on the Tivat of the user you won't have

00:07:27,139 --> 00:07:32,360
pushed a fit notification offline

00:07:29,030 --> 00:07:35,570
support and this one is like it's why

00:07:32,360 --> 00:07:39,100
they say that google amp is evil because

00:07:35,570 --> 00:07:42,889
like the pre-render with other like

00:07:39,100 --> 00:07:45,950
feature will be given to you only if you

00:07:42,889 --> 00:07:48,470
host your amp application on the Google

00:07:45,950 --> 00:07:53,600
CDN if you won't use the Google CDN

00:07:48,470 --> 00:07:55,460
these two won't be given to you of

00:07:53,600 --> 00:07:57,080
course you can use a difference at the

00:07:55,460 --> 00:07:59,510
end but if you won't have a pre render

00:07:57,080 --> 00:08:01,130
you have to use the Google one so on the

00:07:59,510 --> 00:08:04,430
other hand we go progressive web app

00:08:01,130 --> 00:08:07,330
okay so PWA peter bleh are progressive

00:08:04,430 --> 00:08:09,500
that means you can innovate bra browser

00:08:07,330 --> 00:08:13,760
responsive because you can use in every

00:08:09,500 --> 00:08:16,550
devices they feel like an app and a

00:08:13,760 --> 00:08:18,710
native app and that's why you you can

00:08:16,550 --> 00:08:20,750
install them and you can use like in

00:08:18,710 --> 00:08:24,289
offline so you don't need to have like a

00:08:20,750 --> 00:08:27,950
internet connection so in this graph

00:08:24,289 --> 00:08:31,460
more just like show you where ham wants

00:08:27,950 --> 00:08:33,440
to stay because like we do have using

00:08:31,460 --> 00:08:35,990
mobile web application we do a block up

00:08:33,440 --> 00:08:38,930
a reachability because we can serve the

00:08:35,990 --> 00:08:42,229
up to any let's say any kind of devices

00:08:38,930 --> 00:08:44,000
but we lose capability instead if using

00:08:42,229 --> 00:08:46,339
native apps we can have a lots of

00:08:44,000 --> 00:08:48,860
Capitan capabilities but we won't have

00:08:46,339 --> 00:08:49,490
like the same reach ability of the

00:08:48,860 --> 00:08:52,040
mobile web

00:08:49,490 --> 00:08:54,290
so PWA wants the same in the middle of

00:08:52,040 --> 00:08:54,990
them once kept both benefit and try to

00:08:54,290 --> 00:08:59,279
give you

00:08:54,990 --> 00:09:02,100
like the native up capability with like

00:08:59,279 --> 00:09:04,560
an amazing reach ability three complex

00:09:02,100 --> 00:09:09,180
words to say together reach ability

00:09:04,560 --> 00:09:14,209
capability right so which are the main

00:09:09,180 --> 00:09:16,410
requirement Peter Blair uses html5 and

00:09:14,209 --> 00:09:19,890
but the key point are the service

00:09:16,410 --> 00:09:22,760
workers and the web app manifest so the

00:09:19,890 --> 00:09:25,620
service workers adjust like a

00:09:22,760 --> 00:09:28,110
client-side proxy that sits between the

00:09:25,620 --> 00:09:31,380
application and whatever API whatever

00:09:28,110 --> 00:09:33,180
back-end you're calling it so in this

00:09:31,380 --> 00:09:35,910
case as you can see the service workers

00:09:33,180 --> 00:09:38,580
loads and caches all the resources that

00:09:35,910 --> 00:09:41,430
Europe would need so as soon as the app

00:09:38,580 --> 00:09:45,089
try to fetch that to get any data the

00:09:41,430 --> 00:09:47,700
service worker intercepted and decided

00:09:45,089 --> 00:09:52,649
to get from the cache if exists or calls

00:09:47,700 --> 00:09:54,720
outside if it doesn't exist the web app

00:09:52,649 --> 00:09:57,209
manifest instead is just like a JSON

00:09:54,720 --> 00:09:59,339
file that describe your app so mainly

00:09:57,209 --> 00:10:01,170
you do you have like a name I can the

00:09:59,339 --> 00:10:03,870
icon here on display and that one is

00:10:01,170 --> 00:10:06,149
used to have that one allows you to

00:10:03,870 --> 00:10:08,399
install the app in your mobile in mobile

00:10:06,149 --> 00:10:10,230
a mobile phone of course once you got

00:10:08,399 --> 00:10:13,680
the manifest declare you need to import

00:10:10,230 --> 00:10:17,100
in your HTML as you seen there just just

00:10:13,680 --> 00:10:19,680
a link nothing fancy but even PWA has

00:10:17,100 --> 00:10:23,010
like issue because like it's amazing

00:10:19,680 --> 00:10:25,560
it's really fast performant but it

00:10:23,010 --> 00:10:28,740
shines only on the second load so the

00:10:25,560 --> 00:10:32,839
first time you loading it he won't won't

00:10:28,740 --> 00:10:37,320
give you the benefit using pdb PWA for

00:10:32,839 --> 00:10:40,620
so the question is how can we try to fix

00:10:37,320 --> 00:10:43,350
this problem and the amp problem merging

00:10:40,620 --> 00:10:46,470
them together because as we seen earlier

00:10:43,350 --> 00:10:49,470
um allows us to have like an instant

00:10:46,470 --> 00:10:52,980
loading but doesn't give us the a rich

00:10:49,470 --> 00:10:55,529
user experience so taking them both

00:10:52,980 --> 00:10:58,770
together we can try merge them and

00:10:55,529 --> 00:11:02,640
having both benefit from ant and from

00:10:58,770 --> 00:11:05,150
PWA there are many ways to merge them

00:11:02,640 --> 00:11:09,410
together there are mainly three patterns

00:11:05,150 --> 00:11:13,500
the first one is like am PWA

00:11:09,410 --> 00:11:15,990
why mean we're saying amp as PWA is like

00:11:13,500 --> 00:11:20,040
we are still using amp so the Antec

00:11:15,990 --> 00:11:24,839
nology the HAMP library's pas we're

00:11:20,040 --> 00:11:27,390
gonna inject in um the PWA boost let's

00:11:24,839 --> 00:11:30,570
say because as we see in PWA give us the

00:11:27,390 --> 00:11:35,310
offline and user like reachability sorry

00:11:30,570 --> 00:11:37,709
user experience so in this case what we

00:11:35,310 --> 00:11:40,260
can do we can take advantage of the amp

00:11:37,709 --> 00:11:41,930
installed serviceworker that is the

00:11:40,260 --> 00:11:45,029
component that's been already mentioned

00:11:41,930 --> 00:11:47,240
so of course you need to inject it and

00:11:45,029 --> 00:11:50,490
again the script is just unprojected

00:11:47,240 --> 00:11:55,110
ifferent because won't be allowed by the

00:11:50,490 --> 00:11:57,060
same times amp itself give us the

00:11:55,110 --> 00:11:59,640
possibility to install the serviceworker

00:11:57,060 --> 00:12:02,250
so as soon as we install just using that

00:11:59,640 --> 00:12:05,610
component we can take advantage of the

00:12:02,250 --> 00:12:09,390
offline access and this one just a

00:12:05,610 --> 00:12:12,540
snippet for all works so when we when

00:12:09,390 --> 00:12:14,820
the app it tries to fetch any data it

00:12:12,540 --> 00:12:18,240
opens like a cache and then with a cache

00:12:14,820 --> 00:12:22,230
open it just performed as a initial like

00:12:18,240 --> 00:12:24,750
step like a match so in the first return

00:12:22,230 --> 00:12:29,060
as you I don't know why I had so many

00:12:24,750 --> 00:12:33,000
colors sorry for that there wasn't me so

00:12:29,060 --> 00:12:35,970
the the cache itself it tries to match

00:12:33,000 --> 00:12:38,730
it so wherever you asking to retrieve it

00:12:35,970 --> 00:12:41,310
checks if exist the same behave that the

00:12:38,730 --> 00:12:43,410
PWA does and if exists gives you back

00:12:41,310 --> 00:12:45,930
otherwise is gonna is gonna call the

00:12:43,410 --> 00:12:48,480
network and when the network comes back

00:12:45,930 --> 00:12:51,000
is gonna of course give back to the amp

00:12:48,480 --> 00:12:52,320
application but it's going to save in

00:12:51,000 --> 00:12:54,089
your cache so next time you're gonna

00:12:52,320 --> 00:12:59,490
call it it's going to be ready to go

00:12:54,089 --> 00:13:02,310
and second we're gonna have custom J's

00:12:59,490 --> 00:13:06,180
because as we seen earlier um doesn't

00:13:02,310 --> 00:13:09,209
allow us to have JavaScript by combining

00:13:06,180 --> 00:13:13,430
them together we can trick them so the

00:13:09,209 --> 00:13:16,890
way it works is like just a step back

00:13:13,430 --> 00:13:19,589
earlier I mentioned the amp cache the UM

00:13:16,890 --> 00:13:22,740
cache is the one who served the data to

00:13:19,589 --> 00:13:24,899
the to the application

00:13:22,740 --> 00:13:26,700
the same time perform civilizations so

00:13:24,899 --> 00:13:30,029
what it does it runs through the

00:13:26,700 --> 00:13:33,029
application it checks if you like in

00:13:30,029 --> 00:13:35,700
line with what is required by the amp

00:13:33,029 --> 00:13:38,790
and if you see the green the green icon

00:13:35,700 --> 00:13:41,490
the Sun showed us earlier you good to go

00:13:38,790 --> 00:13:43,680
so in that case if we would have had the

00:13:41,490 --> 00:13:46,110
script inside the HTML that won't be

00:13:43,680 --> 00:13:47,880
validated so the UM cache would allow us

00:13:46,110 --> 00:13:50,610
to have it so in that case we can have

00:13:47,880 --> 00:13:52,500
like the simple amp application like as

00:13:50,610 --> 00:13:54,630
is being required but as soon as it

00:13:52,500 --> 00:13:57,089
comes back in our applications or in the

00:13:54,630 --> 00:14:00,270
indication or app we can change the body

00:13:57,089 --> 00:14:04,830
and we can use the script that is used

00:14:00,270 --> 00:14:07,350
to power the rich user experience so the

00:14:04,830 --> 00:14:11,399
benefit of this is like having with this

00:14:07,350 --> 00:14:15,089
button and um as PWA allow us to have

00:14:11,399 --> 00:14:18,930
like offline access and custom J's the

00:14:15,089 --> 00:14:22,380
second pattern to use them together is

00:14:18,930 --> 00:14:24,540
um to PWA so in this case we're going to

00:14:22,380 --> 00:14:24,930
keep those application separate between

00:14:24,540 --> 00:14:28,620
them

00:14:24,930 --> 00:14:30,660
so we one inject any power of the PWA in

00:14:28,620 --> 00:14:34,410
um we're going to keep them separate and

00:14:30,660 --> 00:14:37,709
but we're gonna use em as a bootstrap so

00:14:34,410 --> 00:14:39,630
as you can see here amp is going to be

00:14:37,709 --> 00:14:43,110
the first applet is going to be loaded

00:14:39,630 --> 00:14:46,800
and seen by the user so we're gonna have

00:14:43,110 --> 00:14:49,649
like an instant load for the user

00:14:46,800 --> 00:14:51,930
experience by the same time why the user

00:14:49,649 --> 00:14:54,899
is like start interacting with the app

00:14:51,930 --> 00:14:57,779
behind the scene the amp is going to

00:14:54,899 --> 00:15:00,120
store the service workers so as soon as

00:14:57,779 --> 00:15:04,980
install the service worker and all the

00:15:00,120 --> 00:15:08,010
and all of the resources needed by PWA

00:15:04,980 --> 00:15:10,140
would allow the user to be redirect to

00:15:08,010 --> 00:15:12,510
the amp application sorry to the PWM

00:15:10,140 --> 00:15:15,690
application so it's like a trick you

00:15:12,510 --> 00:15:18,120
start with a fast let's say less fancy

00:15:15,690 --> 00:15:19,829
application but behind the scene you're

00:15:18,120 --> 00:15:22,649
gonna get ready for wherever it's like

00:15:19,829 --> 00:15:24,390
the more performant application so as

00:15:22,649 --> 00:15:27,120
soon as the user interacts with that one

00:15:24,390 --> 00:15:29,070
is gonna leave let's say the amp

00:15:27,120 --> 00:15:31,230
application is going to move to the PW

00:15:29,070 --> 00:15:34,199
application so you will see benefit of

00:15:31,230 --> 00:15:36,329
both word instant is an instant load and

00:15:34,199 --> 00:15:36,510
like a richer user experience as you

00:15:36,329 --> 00:15:39,870
know

00:15:36,510 --> 00:15:42,390
the user start interacting and the way

00:15:39,870 --> 00:15:44,280
our dance is like first of all install

00:15:42,390 --> 00:15:47,430
the serviceworker this one is the one we

00:15:44,280 --> 00:15:50,010
seen earlier so still using the same the

00:15:47,430 --> 00:15:52,530
same approach second is going to cache

00:15:50,010 --> 00:15:56,970
the resources these resources are the

00:15:52,530 --> 00:16:01,170
PWA required resources and as you can

00:15:56,970 --> 00:16:04,080
see as soon as it start installing the

00:16:01,170 --> 00:16:04,650
app and when installed installed in the

00:16:04,080 --> 00:16:07,410
cache

00:16:04,650 --> 00:16:10,010
you see cache at all and then you can

00:16:07,410 --> 00:16:14,640
specify any kind of file that you need

00:16:10,010 --> 00:16:16,530
to boot and to speed your your PW

00:16:14,640 --> 00:16:18,720
application so you can have like CSS

00:16:16,530 --> 00:16:21,780
JavaScript whatever you want it so doing

00:16:18,720 --> 00:16:26,760
this as soon as the user interacts with

00:16:21,780 --> 00:16:29,130
any of the amp application it won't see

00:16:26,760 --> 00:16:32,130
the amp anymore PI will be redirect to

00:16:29,130 --> 00:16:33,810
the PWA so we're gonna have this one is

00:16:32,130 --> 00:16:36,270
my favorite approach because you will

00:16:33,810 --> 00:16:37,890
have like advantages of both word so

00:16:36,270 --> 00:16:40,410
you're gonna have instant load and like

00:16:37,890 --> 00:16:42,240
a richer experience just next but the

00:16:40,410 --> 00:16:45,300
question is what happened if the browser

00:16:42,240 --> 00:16:47,340
doesn't support the serviceworker and we

00:16:45,300 --> 00:16:49,410
do you have like a solution for that

00:16:47,340 --> 00:16:51,630
because as you can see this is the same

00:16:49,410 --> 00:16:55,470
component that we seen earlier but there

00:16:51,630 --> 00:16:58,530
are two more like key and one is like

00:16:55,470 --> 00:17:00,660
URL match and shall you read what those

00:16:58,530 --> 00:17:04,410
are doing it is like they're gonna check

00:17:00,660 --> 00:17:07,620
if the application has the serviceworker

00:17:04,410 --> 00:17:09,750
install so all the resources if they are

00:17:07,620 --> 00:17:12,300
not so good understand that will be

00:17:09,750 --> 00:17:15,780
supported so what it does just redirect

00:17:12,300 --> 00:17:20,459
to the PWA application outside this

00:17:15,780 --> 00:17:24,000
environment this one is the last pattern

00:17:20,459 --> 00:17:26,280
and is am in PWA this one is the

00:17:24,000 --> 00:17:28,710
opposite of the first one that we seen

00:17:26,280 --> 00:17:31,910
it so instead of like having an amp

00:17:28,710 --> 00:17:34,500
application and injecting the PWA power

00:17:31,910 --> 00:17:36,570
this one is the possibly around so we do

00:17:34,500 --> 00:17:41,250
have like PW application and we're going

00:17:36,570 --> 00:17:45,150
to inject the amp power since fancy so

00:17:41,250 --> 00:17:48,660
what it does is like this one as you can

00:17:45,150 --> 00:17:50,440
see the PWA has is made by mainly

00:17:48,660 --> 00:17:52,990
application shell and the con

00:17:50,440 --> 00:17:55,299
the application shell is the one who has

00:17:52,990 --> 00:17:56,169
been like cashed and loaded in your

00:17:55,299 --> 00:17:58,179
application

00:17:56,169 --> 00:18:00,519
but on the other hand the content is

00:17:58,179 --> 00:18:02,710
going to be is gonna change by the the

00:18:00,519 --> 00:18:04,899
user interaction so you you would be

00:18:02,710 --> 00:18:09,100
required to fetch data every time the

00:18:04,899 --> 00:18:13,570
user change the content so what it does

00:18:09,100 --> 00:18:15,039
this kind of approach PWA hijacks the

00:18:13,570 --> 00:18:19,809
navigation clicks this one is stunted

00:18:15,039 --> 00:18:24,519
itdoes by out of the box then the xhr

00:18:19,809 --> 00:18:26,740
fetches the requested from an page puts

00:18:24,519 --> 00:18:29,769
the content in the shadow root and then

00:18:26,740 --> 00:18:32,380
attaches wherever we pasted in the

00:18:29,769 --> 00:18:35,110
shadow root in the HTML so in the Dom of

00:18:32,380 --> 00:18:38,799
the application this one is like and try

00:18:35,110 --> 00:18:42,340
to some simplification mention that

00:18:38,799 --> 00:18:44,649
instead of having amp down we would have

00:18:42,340 --> 00:18:47,019
usually it's like a back a backhander so

00:18:44,649 --> 00:18:49,659
the program progressive web app every

00:18:47,019 --> 00:18:51,760
time that the user changed interacts and

00:18:49,659 --> 00:18:53,169
changes the content is going to fetch

00:18:51,760 --> 00:18:55,299
the data to the backend

00:18:53,169 --> 00:19:00,279
and usually going to you've used like

00:18:55,299 --> 00:19:01,960
Jason or yeah Jason like Cole but in

00:19:00,279 --> 00:19:03,730
that case instead of like calling the

00:19:01,960 --> 00:19:06,639
backend straight what's gonna do is

00:19:03,730 --> 00:19:09,639
gonna use the amp pages to retrieve from

00:19:06,639 --> 00:19:12,700
the backend the amp validated and so

00:19:09,639 --> 00:19:16,690
light version of the content and it's

00:19:12,700 --> 00:19:19,929
gonna paste in right let's go back to

00:19:16,690 --> 00:19:22,690
this picture so imagine this one the

00:19:19,929 --> 00:19:25,000
content itself could be like a normal

00:19:22,690 --> 00:19:28,840
content so we're gonna have like code

00:19:25,000 --> 00:19:31,090
the back and retrieve the data JSON data

00:19:28,840 --> 00:19:33,610
are we gonna render inside a page but

00:19:31,090 --> 00:19:36,039
this kind of behavior take longer

00:19:33,610 --> 00:19:39,250
because like let's say we won't follow

00:19:36,039 --> 00:19:47,289
the best practice so the this approach

00:19:39,250 --> 00:19:49,360
allow US troops to use within the within

00:19:47,289 --> 00:19:51,639
the content that we are pulling it the

00:19:49,360 --> 00:19:53,980
amp page document because they are

00:19:51,639 --> 00:19:58,360
lighter as we seen earlier validated and

00:19:53,980 --> 00:20:02,289
so faster to render in the Dom how it

00:19:58,360 --> 00:20:03,490
does is like again it uses the anon

00:20:02,289 --> 00:20:05,980
project the

00:20:03,490 --> 00:20:10,300
to get the shadow root and then it gets

00:20:05,980 --> 00:20:12,610
the data from using xhr because fetches

00:20:10,300 --> 00:20:16,140
is not supported and then as soon as it

00:20:12,610 --> 00:20:19,720
gets the data from the amp is gonna

00:20:16,140 --> 00:20:21,700
create like a container in the HTML this

00:20:19,720 --> 00:20:24,309
one is let's say the URL where the amp

00:20:21,700 --> 00:20:27,580
pages are hosted and then it's gonna

00:20:24,309 --> 00:20:31,510
through the amp and touch Shadow doc is

00:20:27,580 --> 00:20:36,370
gonna paste in the new content that we

00:20:31,510 --> 00:20:38,440
got it so the benefit the benefit of

00:20:36,370 --> 00:20:41,380
this is like it's always fast so we

00:20:38,440 --> 00:20:43,960
start fast and we stay fast we go like a

00:20:41,380 --> 00:20:46,929
great distribution built in we go a like

00:20:43,960 --> 00:20:48,610
a progressively enhanced and we go one

00:20:46,929 --> 00:20:50,500
back and to rule them all

00:20:48,610 --> 00:20:53,140
it's like as I said earlier because just

00:20:50,500 --> 00:20:56,200
one data source and then we're gonna

00:20:53,140 --> 00:20:58,270
have less complexity these are a couple

00:20:56,200 --> 00:21:01,179
of links there is like the documentation

00:20:58,270 --> 00:21:05,140
above technologies there are there are

00:21:01,179 --> 00:21:10,729
lots of information there and thank you

00:21:05,140 --> 00:21:10,729

YouTube URL: https://www.youtube.com/watch?v=Gflsz41JmM4


