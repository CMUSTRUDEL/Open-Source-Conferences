Title: Less Is More - JS Roundabout - February 2020
Publication date: 2020-03-08
Playlist: The JS Roundabout
Description: 
	Presented by Andy Roberts, Engineering Manager, and Daljit Summan, Front-end Engineer, both at RS Components.

Andy and Daljit will be giving a talk titled 'Less is more!'. Why do the same thing over and over again? A quick overview of RS Componentsâ€™ frontend architecture and how we improved developer experience and consistency with our declarative server side rendering framework: Atlas.

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,000 --> 00:00:05,600
so just to give you a brief intro we're

00:00:02,399 --> 00:00:07,890
gonna do a bit of a run-through of RS

00:00:05,600 --> 00:00:10,080
the history of our tech stack and how

00:00:07,890 --> 00:00:12,240
we're evolving into our future target

00:00:10,080 --> 00:00:13,710
architecture and then some of the

00:00:12,240 --> 00:00:15,990
learnings we've taken out of that and

00:00:13,710 --> 00:00:17,369
that we use to extract to actually build

00:00:15,990 --> 00:00:20,369
some the frameworks and tooling that our

00:00:17,369 --> 00:00:22,769
engineer is using the various teams so

00:00:20,369 --> 00:00:25,199
without further ado who our RS

00:00:22,769 --> 00:00:27,150
Components usually it's the largest

00:00:25,199 --> 00:00:28,170
company you've never heard of well

00:00:27,150 --> 00:00:32,279
that's what this was when I started

00:00:28,170 --> 00:00:35,610
joined anyway it was founded in 1937 and

00:00:32,279 --> 00:00:37,110
we now service up to 80 countries all

00:00:35,610 --> 00:00:39,450
over only in 33 markets four different

00:00:37,110 --> 00:00:41,760
websites we've got two and a half

00:00:39,450 --> 00:00:43,260
thousand suppliers 500,000 products on

00:00:41,760 --> 00:00:46,200
their website with over a million

00:00:43,260 --> 00:00:48,899
customers and we ship out a grand total

00:00:46,200 --> 00:00:50,340
of 50,000 parcels a day we're not a

00:00:48,899 --> 00:00:52,170
small e-commerce player we're one of the

00:00:50,340 --> 00:00:54,329
biggest b2b e-commerce players in the

00:00:52,170 --> 00:00:57,660
world and you just probably heard of it

00:00:54,329 --> 00:00:59,879
and some of our customers this nice

00:00:57,660 --> 00:01:01,050
array of various logos that you can read

00:00:59,879 --> 00:01:03,270
for yourself I'm not going to read them

00:01:01,050 --> 00:01:04,970
out and we basically because we supply

00:01:03,270 --> 00:01:06,990
electric electronic components and

00:01:04,970 --> 00:01:09,180
widgets and stuff to different companies

00:01:06,990 --> 00:01:11,430
that we tend to operate in like the

00:01:09,180 --> 00:01:13,020
utility sectors we will the company that

00:01:11,430 --> 00:01:16,020
powers the companies that are actually

00:01:13,020 --> 00:01:20,060
delivering lots of services to them that

00:01:16,020 --> 00:01:24,180
we all use so RS Components

00:01:20,060 --> 00:01:28,439
it's been going for quite a while the

00:01:24,180 --> 00:01:32,130
website launched in 1998 it was one of

00:01:28,439 --> 00:01:34,170
the first e-commerce websites in our

00:01:32,130 --> 00:01:35,640
industry and it was built on one

00:01:34,170 --> 00:01:38,759
monolithic code base is quite a large

00:01:35,640 --> 00:01:40,200
large large large Java monolith and it's

00:01:38,759 --> 00:01:43,140
got a lot of old technologies in it and

00:01:40,200 --> 00:01:45,570
it was never really updated in 20 years

00:01:43,140 --> 00:01:47,310
it's just evolved on that in 1998 start

00:01:45,570 --> 00:01:48,869
point I'm sure probably lots of you have

00:01:47,310 --> 00:01:51,659
worked in similar places where things

00:01:48,869 --> 00:01:54,720
were a bit oh the developer experience

00:01:51,659 --> 00:01:56,430
was just like dire it takes like 12

00:01:54,720 --> 00:01:59,369
minutes to actually restart the server

00:01:56,430 --> 00:02:01,350
server every time you change things so

00:01:59,369 --> 00:02:03,329
you make a better job of change of JSP

00:02:01,350 --> 00:02:05,700
change 12 minutes later you'll see if

00:02:03,329 --> 00:02:07,740
it's worked or not doesn't lead to very

00:02:05,700 --> 00:02:11,039
productive teams and we're operating on

00:02:07,740 --> 00:02:12,810
three week release cycle and all teams

00:02:11,039 --> 00:02:13,890
had to release at the same time so all

00:02:12,810 --> 00:02:15,600
the engineering teams

00:02:13,890 --> 00:02:17,280
and all their changes you get all the

00:02:15,600 --> 00:02:19,980
merge conflicts all the problems all the

00:02:17,280 --> 00:02:20,520
testing it was not a very smooth release

00:02:19,980 --> 00:02:23,300
at all

00:02:20,520 --> 00:02:26,370
so we obviously wanted to change that

00:02:23,300 --> 00:02:28,020
I've put up a really simple view of what

00:02:26,370 --> 00:02:30,660
this looks like it's a big box with

00:02:28,020 --> 00:02:32,910
stuff in it as you can imagine there was

00:02:30,660 --> 00:02:35,910
a mix of front-end text long front a

00:02:32,910 --> 00:02:39,510
large chunk of the site is jQuery old

00:02:35,910 --> 00:02:42,510
jQuery there's one part which is angular

00:02:39,510 --> 00:02:44,340
and a couple of parts react you can

00:02:42,510 --> 00:02:46,650
guess how this progressed start with

00:02:44,340 --> 00:02:48,540
jQuery someone introduced angular then

00:02:46,650 --> 00:02:49,920
we started to move to react and then we

00:02:48,540 --> 00:02:53,040
got to the point where you know what

00:02:49,920 --> 00:02:54,420
this monolith isn't working for us thank

00:02:53,040 --> 00:02:57,320
RS Components

00:02:54,420 --> 00:03:02,430
today we're on a bit of transformation

00:02:57,320 --> 00:03:03,660
we started it in 2080 which is actually

00:03:02,430 --> 00:03:06,840
amazing it doesn't feel that long ago

00:03:03,660 --> 00:03:08,100
but it is 2018 we trying to redo

00:03:06,840 --> 00:03:10,019
everything around the DevOps principles

00:03:08,100 --> 00:03:13,470
there so we're moving to a much more

00:03:10,019 --> 00:03:15,180
agile and continuous like a continuous

00:03:13,470 --> 00:03:16,500
integration development type thing we're

00:03:15,180 --> 00:03:18,810
moving to the cloud at the same time out

00:03:16,500 --> 00:03:21,780
of our monolith so AWS is our chosen

00:03:18,810 --> 00:03:23,310
thing main benefit to it one of the main

00:03:21,780 --> 00:03:25,890
benefits to us was the fact that we now

00:03:23,310 --> 00:03:27,930
are offering independent teams so all of

00:03:25,890 --> 00:03:32,040
our teams could and can deploy things

00:03:27,930 --> 00:03:33,720
independently and modern technologies we

00:03:32,040 --> 00:03:36,180
used it as opportunity to move away from

00:03:33,720 --> 00:03:37,950
quite archaic in sometimes archaic

00:03:36,180 --> 00:03:38,220
technologies it's used inside the modern

00:03:37,950 --> 00:03:39,989
lifts

00:03:38,220 --> 00:03:42,209
yeah our front ends and now purely react

00:03:39,989 --> 00:03:46,549
which I'll get to slightly better though

00:03:42,209 --> 00:03:52,110
and so we split into multiple layers

00:03:46,549 --> 00:03:53,250
streak it split into multiple layers so

00:03:52,110 --> 00:03:55,320
we've got an experience layer which

00:03:53,250 --> 00:03:57,810
serves our front ends the way that we do

00:03:55,320 --> 00:03:59,610
things now is each team owns a page or a

00:03:57,810 --> 00:04:03,060
couple of pages each one of those is

00:03:59,610 --> 00:04:04,920
owned on a single next yes server that

00:04:03,060 --> 00:04:06,180
will be running react and using a polar

00:04:04,920 --> 00:04:09,799
client to talk to our graph QL

00:04:06,180 --> 00:04:12,900
aggregation layers and so behind each

00:04:09,799 --> 00:04:15,180
individual next year's application there

00:04:12,900 --> 00:04:17,070
is an individual graph QL aggregation

00:04:15,180 --> 00:04:18,479
layer so we did that as a bit of a

00:04:17,070 --> 00:04:20,220
transformation to the future which we'll

00:04:18,479 --> 00:04:21,419
get to shortly but also it means that we

00:04:20,220 --> 00:04:23,310
get the performance benefits to having

00:04:21,419 --> 00:04:25,349
that single query out for what is quite

00:04:23,310 --> 00:04:27,780
a lot of data in a lot of cases to build

00:04:25,349 --> 00:04:29,810
up an RS page and behind that we

00:04:27,780 --> 00:04:32,430
have a whole range of microservices

00:04:29,810 --> 00:04:34,020
built in a range of technologies Java

00:04:32,430 --> 00:04:37,290
yes and Python the probably the three

00:04:34,020 --> 00:04:42,990
main ones and although will probably be

00:04:37,290 --> 00:04:45,120
added now that was the ideal view the

00:04:42,990 --> 00:04:48,120
reality of how that evolved it didn't

00:04:45,120 --> 00:04:49,500
quite go to plan things got a bit messy

00:04:48,120 --> 00:04:50,730
people started connecting graphic world

00:04:49,500 --> 00:04:52,500
service to graph girl servers

00:04:50,730 --> 00:04:55,169
microservices started connected at the

00:04:52,500 --> 00:04:55,860
front end you know things evolve that

00:04:55,169 --> 00:04:59,460
everything's great

00:04:55,860 --> 00:05:02,790
so the future that we are now moving

00:04:59,460 --> 00:05:03,870
towards and something which our team is

00:05:02,790 --> 00:05:07,320
actually delivering a lot of the

00:05:03,870 --> 00:05:09,810
functionality for is very similar but

00:05:07,320 --> 00:05:11,669
we've changed a few things so the front

00:05:09,810 --> 00:05:13,650
end experience servers we've built an

00:05:11,669 --> 00:05:15,270
internal framework called Atlas and I

00:05:13,650 --> 00:05:17,100
know there is an open source Atlas

00:05:15,270 --> 00:05:18,470
product out there it's not that it's

00:05:17,100 --> 00:05:21,120
something different

00:05:18,470 --> 00:05:24,000
so Atlas which we'll talk about in quite

00:05:21,120 --> 00:05:25,229
a bit depth later is trying to extract a

00:05:24,000 --> 00:05:26,970
lot of the common functionality that all

00:05:25,229 --> 00:05:29,090
the teams of duplicating across all the

00:05:26,970 --> 00:05:31,830
next guest applications they're building

00:05:29,090 --> 00:05:34,080
behind that we are moving away from the

00:05:31,830 --> 00:05:36,690
individual aggregated graph QL services

00:05:34,080 --> 00:05:38,790
to a federated graph QL that's using the

00:05:36,690 --> 00:05:40,500
Apollo Federation stuff and so we'll

00:05:38,790 --> 00:05:43,410
have a single data graph across our

00:05:40,500 --> 00:05:46,500
entire state and that's backed by a what

00:05:43,410 --> 00:05:48,360
we call schema services so these are

00:05:46,500 --> 00:05:50,610
each schema service has a high-level

00:05:48,360 --> 00:05:52,530
data type so take products as an example

00:05:50,610 --> 00:05:54,390
it will own everything to do a product

00:05:52,530 --> 00:05:56,340
and then connect up to all the

00:05:54,390 --> 00:05:58,100
underlying micro services all those are

00:05:56,340 --> 00:06:00,930
federated into that single data graph

00:05:58,100 --> 00:06:02,970
that is the target of where we're moving

00:06:00,930 --> 00:06:03,630
towards some of this is already

00:06:02,970 --> 00:06:05,490
happening

00:06:03,630 --> 00:06:06,990
some risks like the Federated de Graaff

00:06:05,490 --> 00:06:08,610
we're currently doing a POC at the

00:06:06,990 --> 00:06:09,930
moment and proving that this works and

00:06:08,610 --> 00:06:15,090
testing out some of the technologies

00:06:09,930 --> 00:06:18,840
involved as I mentioned the frameworks

00:06:15,090 --> 00:06:20,669
team is very much focused on extracting

00:06:18,840 --> 00:06:21,419
the common stuff from all the various

00:06:20,669 --> 00:06:24,000
other teams

00:06:21,419 --> 00:06:26,100
and putting the trying to stop them

00:06:24,000 --> 00:06:27,810
duplicating effort so in the example we

00:06:26,100 --> 00:06:29,610
had before with like with an XJS servers

00:06:27,810 --> 00:06:31,200
and the thing I mean for those who've

00:06:29,610 --> 00:06:32,669
built next year saps there's a bunch of

00:06:31,200 --> 00:06:33,240
boilerplate you have to write every next

00:06:32,669 --> 00:06:35,789
year SAP

00:06:33,240 --> 00:06:37,229
there's a bunch of standardized RS

00:06:35,789 --> 00:06:39,599
things that we have to put into each

00:06:37,229 --> 00:06:41,040
each application that we stand up like

00:06:39,599 --> 00:06:43,140
you know the logging the

00:06:41,040 --> 00:06:45,270
Metrix the health checks all those kind

00:06:43,140 --> 00:06:46,650
of like just boilerplate things you have

00:06:45,270 --> 00:06:49,050
to do which usually rounds up about

00:06:46,650 --> 00:06:50,220
300-400 lines of code and we've got

00:06:49,050 --> 00:06:52,890
things like the graph girl things

00:06:50,220 --> 00:06:54,360
aggregation is were duplicated now by

00:06:52,890 --> 00:06:55,560
putting the into a single federated

00:06:54,360 --> 00:06:57,030
graph we're extracting all that

00:06:55,560 --> 00:06:58,380
duplication putting it in one place so

00:06:57,030 --> 00:07:00,200
we're gonna save a vast amount of

00:06:58,380 --> 00:07:02,850
engineering effort across the entire

00:07:00,200 --> 00:07:06,060
organization as we move forward so the

00:07:02,850 --> 00:07:08,880
three bits that we are focusing on the

00:07:06,060 --> 00:07:10,760
moment one is a share component library

00:07:08,880 --> 00:07:13,080
and everyone does one of these right

00:07:10,760 --> 00:07:14,310
it's gonna be the design system back the

00:07:13,080 --> 00:07:15,930
design system it's currently being

00:07:14,310 --> 00:07:19,050
developed and it's gonna be shared

00:07:15,930 --> 00:07:21,330
across all the teams the power by design

00:07:19,050 --> 00:07:26,280
tokens and using star components and

00:07:21,330 --> 00:07:28,590
style system to actually put the theming

00:07:26,280 --> 00:07:32,040
into the actual into the actual library

00:07:28,590 --> 00:07:33,780
so that we can actually in theory change

00:07:32,040 --> 00:07:35,130
the design system change design tokens

00:07:33,780 --> 00:07:37,920
could put on the library updates hey

00:07:35,130 --> 00:07:40,560
presto bug drunkle that was also in the

00:07:37,920 --> 00:07:42,120
sourced the way we're doing that we did

00:07:40,560 --> 00:07:43,770
initially come up with the concept that

00:07:42,120 --> 00:07:45,840
we have like a single team like managing

00:07:43,770 --> 00:07:47,340
the entire and release process of that

00:07:45,840 --> 00:07:48,600
component library but that doesn't

00:07:47,340 --> 00:07:50,220
really work there's too many peers too

00:07:48,600 --> 00:07:51,960
much stuff going on there's too many

00:07:50,220 --> 00:07:53,370
people involved so we're actually trying

00:07:51,960 --> 00:07:56,100
to keep like core components into one

00:07:53,370 --> 00:07:57,600
team and then federating out the actual

00:07:56,100 --> 00:07:59,070
ownership of all the other components to

00:07:57,600 --> 00:08:01,590
all the other teams that own those

00:07:59,070 --> 00:08:03,330
particular things so say our basket page

00:08:01,590 --> 00:08:05,520
as an example the team that manages that

00:08:03,330 --> 00:08:07,770
weird only components that are very

00:08:05,520 --> 00:08:09,480
basket related product page my own

00:08:07,770 --> 00:08:11,370
product cards and things like that so

00:08:09,480 --> 00:08:12,390
they're each team alone they're the

00:08:11,370 --> 00:08:14,310
components that they're most interested

00:08:12,390 --> 00:08:15,990
in and they'll be responsible for major

00:08:14,310 --> 00:08:17,550
quests and signing off and all that kind

00:08:15,990 --> 00:08:19,530
of thing

00:08:17,550 --> 00:08:21,840
the Federated de Graaff talked about a

00:08:19,530 --> 00:08:23,280
little bit already that will put in

00:08:21,840 --> 00:08:24,930
place a complete single data graph

00:08:23,280 --> 00:08:27,690
across the entire organization

00:08:24,930 --> 00:08:29,700
so all connections from our front-end

00:08:27,690 --> 00:08:32,099
experiences or external API so we'll go

00:08:29,700 --> 00:08:34,140
via the federated data graph so we have

00:08:32,099 --> 00:08:36,150
a single point that we can push through

00:08:34,140 --> 00:08:37,590
and as we mentioned that's using a polar

00:08:36,150 --> 00:08:39,180
Federation and it'll have that

00:08:37,590 --> 00:08:41,460
distributed schema by the federated

00:08:39,180 --> 00:08:43,530
schema services they'll provide access

00:08:41,460 --> 00:08:45,960
to all data that we have everything will

00:08:43,530 --> 00:08:47,430
be there when I've don't know if any of

00:08:45,960 --> 00:08:49,470
you familiar with the Apollo Federation

00:08:47,430 --> 00:08:51,600
afternoon but that also it offers deep

00:08:49,470 --> 00:08:53,520
hooks into CI CD so that we can actually

00:08:51,600 --> 00:08:54,690
ensure that when we're making changes to

00:08:53,520 --> 00:08:56,310
our schemers it's not

00:08:54,690 --> 00:08:57,590
actually going to break any of our down

00:08:56,310 --> 00:08:59,850
with things through that actually runs

00:08:57,590 --> 00:09:01,170
tests against our life traffic to make

00:08:59,850 --> 00:09:03,360
sure that there's no breaking changes or

00:09:01,170 --> 00:09:05,490
walnuts breaking changes and then we can

00:09:03,360 --> 00:09:08,400
decide to go out or not and gives us

00:09:05,490 --> 00:09:11,100
great insights into what that actually

00:09:08,400 --> 00:09:12,930
delivers for us so we can actually see

00:09:11,100 --> 00:09:15,330
down to we can assign client IDs to

00:09:12,930 --> 00:09:16,740
individual either teams or external

00:09:15,330 --> 00:09:18,450
clients or whatever and actually track

00:09:16,740 --> 00:09:20,730
all the usage of their graphic of the

00:09:18,450 --> 00:09:24,150
graphical layer that they are actually

00:09:20,730 --> 00:09:25,410
doing excuse me don't quite a

00:09:24,150 --> 00:09:27,360
lower-level detail and figure out then

00:09:25,410 --> 00:09:28,770
if people are grading we can chase them

00:09:27,360 --> 00:09:31,890
to upgrade and so on so forth

00:09:28,770 --> 00:09:36,780
and it's really quite cool stuff and

00:09:31,890 --> 00:09:39,810
then lastly is Atlas so Atlas as I

00:09:36,780 --> 00:09:42,360
mentioned wraps next yes and a whole

00:09:39,810 --> 00:09:44,250
chunk of other stuff so we include react

00:09:42,360 --> 00:09:46,260
here we include a bunch of other

00:09:44,250 --> 00:09:48,420
standard libraries polyfills lots of

00:09:46,260 --> 00:09:50,490
various things and that basically gives

00:09:48,420 --> 00:09:52,170
a single dependency that teams can

00:09:50,490 --> 00:09:53,870
actually just include in their projects

00:09:52,170 --> 00:09:57,720
and they get everything baked in and

00:09:53,870 --> 00:09:59,760
that has a knock-on effect and they're

00:09:57,720 --> 00:10:01,620
all of these things like when we log out

00:09:59,760 --> 00:10:04,230
to add a dog we can actually enforce

00:10:01,620 --> 00:10:05,700
like standardized formatting on our log

00:10:04,230 --> 00:10:07,230
messages so that everything is much more

00:10:05,700 --> 00:10:08,430
easily shareable same with the metrics

00:10:07,230 --> 00:10:11,550
and all the various other bits of well

00:10:08,430 --> 00:10:15,030
bits that go out and then we can bake in

00:10:11,550 --> 00:10:16,590
some of the other bits things like drop

00:10:15,030 --> 00:10:18,240
tokens you know drop tokens gets passed

00:10:16,590 --> 00:10:19,770
around we can actually do the extraction

00:10:18,240 --> 00:10:21,390
that and pass them into the apps without

00:10:19,770 --> 00:10:23,640
the actual engineering teams worrying

00:10:21,390 --> 00:10:26,760
about it and so on and so forth

00:10:23,640 --> 00:10:28,680
experimentation etc etc it can all go in

00:10:26,760 --> 00:10:30,990
to that single thing and they just get

00:10:28,680 --> 00:10:33,600
it for free with an install and we've

00:10:30,990 --> 00:10:37,110
built a declarative API around that and

00:10:33,600 --> 00:10:39,270
so that you build up your your

00:10:37,110 --> 00:10:41,040
experience server in a very declarative

00:10:39,270 --> 00:10:41,970
way it stops being quite imperative like

00:10:41,040 --> 00:10:43,680
you do with next step so you can

00:10:41,970 --> 00:10:45,360
actually say oh I want this route and I

00:10:43,680 --> 00:10:47,310
want this to run I want this bit of

00:10:45,360 --> 00:10:49,500
middleware in it gives quite a nice

00:10:47,310 --> 00:10:52,080
simple development experience to people

00:10:49,500 --> 00:10:54,600
and the important thing is we're keeping

00:10:52,080 --> 00:10:56,130
it dry and by extracting all that common

00:10:54,600 --> 00:10:57,270
stuff that everyone does it means that

00:10:56,130 --> 00:10:59,570
people don't repeat themselves and

00:10:57,270 --> 00:11:02,339
there's no point everyone doing logging

00:10:59,570 --> 00:11:03,630
everyone has to do blogging I apologize

00:11:02,339 --> 00:11:06,210
for the coffee machine it does this

00:11:03,630 --> 00:11:09,000
random thing every hour or so

00:11:06,210 --> 00:11:13,470
so we have to talk up there and that of

00:11:09,000 --> 00:11:15,360
course results in less code we've seen

00:11:13,470 --> 00:11:17,730
instances where an existing application

00:11:15,360 --> 00:11:20,970
that's migrated from standardized next

00:11:17,730 --> 00:11:23,459
just this next some of those next

00:11:20,970 --> 00:11:27,480
implementation into Atlas and the code

00:11:23,459 --> 00:11:30,750
is shrunk from 200-300 lines down to 40

00:11:27,480 --> 00:11:32,700
50 lines less code great less testing

00:11:30,750 --> 00:11:34,170
less everything you can get things done

00:11:32,700 --> 00:11:36,570
much there get things there much faster

00:11:34,170 --> 00:11:38,730
so it overall it's faster delivery for

00:11:36,570 --> 00:11:40,440
all the teams as well and and the really

00:11:38,730 --> 00:11:42,630
important bit is that it's community

00:11:40,440 --> 00:11:46,709
driven so we've put in place the initial

00:11:42,630 --> 00:11:49,110
version then when teams use it they all

00:11:46,709 --> 00:11:52,649
run into use cases where they need to do

00:11:49,110 --> 00:11:54,740
something different example being using

00:11:52,649 --> 00:11:57,600
roll-up to log stuff on the client side

00:11:54,740 --> 00:11:58,709
one team did it we extracted their put

00:11:57,600 --> 00:12:02,760
it in the framework now all the teams

00:11:58,709 --> 00:12:04,380
get it so we can look around all the

00:12:02,760 --> 00:12:06,420
various teams we talked to all the teams

00:12:04,380 --> 00:12:08,610
on the regular basis and we find out

00:12:06,420 --> 00:12:10,050
what is really useful for them and

00:12:08,610 --> 00:12:11,100
extract it put it in the framework and

00:12:10,050 --> 00:12:13,500
give it to everyone else and it's all

00:12:11,100 --> 00:12:17,459
for free for them not for us obviously I

00:12:13,500 --> 00:12:21,060
wish it was p.m. no codes not yet so

00:12:17,459 --> 00:12:24,089
that's basically our three main bits and

00:12:21,060 --> 00:12:26,190
now and algid is going to talk through

00:12:24,089 --> 00:12:27,930
some of the philosophy behind outlets

00:12:26,190 --> 00:12:29,700
because I think this is the really

00:12:27,930 --> 00:12:32,370
important aspect of this it's not just

00:12:29,700 --> 00:12:33,690
about the the fact that we're trying to

00:12:32,370 --> 00:12:35,130
save code and make things easier for

00:12:33,690 --> 00:12:36,630
people there's also a bit of philosophy

00:12:35,130 --> 00:12:37,920
around it and this is what Dodger is

00:12:36,630 --> 00:12:39,959
going to talk about compared to the

00:12:37,920 --> 00:12:41,520
slides that you've just seen the slides

00:12:39,959 --> 00:12:44,700
that you can see now are a little bit

00:12:41,520 --> 00:12:46,740
unorthodox and it's gonna need some

00:12:44,700 --> 00:12:48,750
explanation as to what the hell is

00:12:46,740 --> 00:12:50,730
happening but by the end of it I hope

00:12:48,750 --> 00:12:54,510
you know what the hell is happening at

00:12:50,730 --> 00:13:03,300
the end of it so go go unorthodox slide

00:12:54,510 --> 00:13:06,930
number one boxes so we have tried to

00:13:03,300 --> 00:13:09,510
distill the philosophy of what we did in

00:13:06,930 --> 00:13:12,060
the most abstract way possible not

00:13:09,510 --> 00:13:15,209
thousands of words or most complicated

00:13:12,060 --> 00:13:17,430
pictures or whatnot the problem with

00:13:15,209 --> 00:13:20,209
this is the problem that we saw in this

00:13:17,430 --> 00:13:25,399
most abstract form so what we see

00:13:20,209 --> 00:13:28,279
here is we have team a B C and D okay in

00:13:25,399 --> 00:13:31,519
the company and the boxes are

00:13:28,279 --> 00:13:34,610
effectively functionality and cross

00:13:31,519 --> 00:13:38,329
concerns and cold bass that shared

00:13:34,610 --> 00:13:41,389
across teams so from that you should be

00:13:38,329 --> 00:13:44,089
able to infer that this green one this

00:13:41,389 --> 00:13:46,730
thing here every team is doing it so

00:13:44,089 --> 00:13:50,149
they might be replicating it they might

00:13:46,730 --> 00:13:52,129
be sharing it Donnell then you've got

00:13:50,149 --> 00:13:54,079
another instance where three they two

00:13:52,129 --> 00:13:57,050
and then you've got two teams probably

00:13:54,079 --> 00:14:00,439
doing naughty things things that they

00:13:57,050 --> 00:14:03,410
shouldn't be doing but they are so we

00:14:00,439 --> 00:14:06,589
once once me and Andy step back and saw

00:14:03,410 --> 00:14:09,170
from the highest possible level what the

00:14:06,589 --> 00:14:11,689
hell is going on we have to design a

00:14:09,170 --> 00:14:14,509
tool that's going to fit this spectrum

00:14:11,689 --> 00:14:17,480
which means that not only do we have to

00:14:14,509 --> 00:14:19,839
accommodate for the people that need

00:14:17,480 --> 00:14:21,769
everything done autonomously

00:14:19,839 --> 00:14:24,619
everybody needs there needs to be

00:14:21,769 --> 00:14:27,439
certain situations where they need to

00:14:24,619 --> 00:14:28,999
break outside of that box and they need

00:14:27,439 --> 00:14:33,309
to be have they need to have the power

00:14:28,999 --> 00:14:36,799
to do the individual bespoke things so I

00:14:33,309 --> 00:14:40,879
hope bizarre picture one now makes sense

00:14:36,799 --> 00:14:43,100
yeah cool so this is the problem this is

00:14:40,879 --> 00:14:46,639
the problem domain that we had at the

00:14:43,100 --> 00:14:48,559
highest possible level all right design

00:14:46,639 --> 00:14:52,879
them slide number two they get operator

00:14:48,559 --> 00:15:01,189
don't worry right okay okay so how many

00:14:52,879 --> 00:15:06,920
people are human Wow something so people

00:15:01,189 --> 00:15:10,519
are really honest alright cool so from

00:15:06,920 --> 00:15:16,220
our perspective the most successful

00:15:10,519 --> 00:15:18,559
systems that you interact with the

00:15:16,220 --> 00:15:22,389
problem occurs in this region where the

00:15:18,559 --> 00:15:28,819
human will interact with the machine if

00:15:22,389 --> 00:15:32,870
this is too complicated or too dangerous

00:15:28,819 --> 00:15:34,010
nefarious or just plain horrible this

00:15:32,870 --> 00:15:39,590
relationship

00:15:34,010 --> 00:15:45,140
won't work it can be an API it could be

00:15:39,590 --> 00:15:50,240
a car it could be a VCR but I doubt most

00:15:45,140 --> 00:15:52,190
you will know what a VCR is right so so

00:15:50,240 --> 00:15:54,470
I'm gonna explain I'm gonna use the

00:15:52,190 --> 00:15:56,530
age-old explanation here and I'm gonna

00:15:54,470 --> 00:16:01,870
explain the iPod

00:15:56,530 --> 00:16:04,730
there were mp3 players before the iPod

00:16:01,870 --> 00:16:08,330
but for some reason the iPod succeeded

00:16:04,730 --> 00:16:11,900
where the others failed okay that

00:16:08,330 --> 00:16:16,790
problem occurred here where the human

00:16:11,900 --> 00:16:20,090
met the Machine and the problem was that

00:16:16,790 --> 00:16:27,170
the machine exposed itself to the human

00:16:20,090 --> 00:16:32,660
as a machine not as a human this is this

00:16:27,170 --> 00:16:35,390
is here to service that and if you do

00:16:32,660 --> 00:16:38,120
not take into consideration the contract

00:16:35,390 --> 00:16:41,420
between those two things your product

00:16:38,120 --> 00:16:46,370
will fail is no magic in it that's

00:16:41,420 --> 00:16:48,740
that's the magic right there so in

00:16:46,370 --> 00:16:52,900
effect what we sat back and thought

00:16:48,740 --> 00:16:56,600
about was well how do we design a tool

00:16:52,900 --> 00:16:59,480
that when this gives instructions to

00:16:56,600 --> 00:17:06,170
this bit it's not complicated from this

00:16:59,480 --> 00:17:07,730
side I didn't do that so this is what we

00:17:06,170 --> 00:17:12,310
spent a lot of time on there was a lot

00:17:07,730 --> 00:17:15,880
there was a lot of trips to Starbucks a

00:17:12,310 --> 00:17:19,370
lot of thought experiments a lot of

00:17:15,880 --> 00:17:21,920
proofing a lot of debates a lot of

00:17:19,370 --> 00:17:24,950
discussion a lot of arguments around

00:17:21,920 --> 00:17:28,220
this thing here if you don't get that

00:17:24,950 --> 00:17:29,810
right you have a failed product and that

00:17:28,220 --> 00:17:34,570
is across anything whether it be

00:17:29,810 --> 00:17:39,050
hardware or software who here has used

00:17:34,570 --> 00:17:41,290
libraries yeah do you like using

00:17:39,050 --> 00:17:43,430
complicated libraries or simple ones

00:17:41,290 --> 00:17:47,260
simple ones right it makes your job

00:17:43,430 --> 00:17:50,650
easier and especially if semantically

00:17:47,260 --> 00:17:53,290
you as a human can create a very simple

00:17:50,650 --> 00:17:54,700
and effective mental model around that

00:17:53,290 --> 00:17:56,260
library and you can predict what's going

00:17:54,700 --> 00:17:57,840
to happen because it's almost working

00:17:56,260 --> 00:18:00,610
with you rather than against you

00:17:57,840 --> 00:18:03,520
right so does this bizarre thing now

00:18:00,610 --> 00:18:08,110
make sense yeah all right cool

00:18:03,520 --> 00:18:14,320
bizarre slide three okay this is okay

00:18:08,110 --> 00:18:19,660
right if this does look beside in it

00:18:14,320 --> 00:18:21,220
okay all right so this is even more

00:18:19,660 --> 00:18:26,470
important now okay

00:18:21,220 --> 00:18:28,780
now this is you and this is your closed

00:18:26,470 --> 00:18:32,530
viewpoint on the world right this this

00:18:28,780 --> 00:18:35,230
this thing here alright so going back to

00:18:32,530 --> 00:18:38,140
that original library problem the reason

00:18:35,230 --> 00:18:41,950
why complicated libraries don't work or

00:18:38,140 --> 00:18:44,560
you feel uncomfortable with larger

00:18:41,950 --> 00:18:45,670
libraries or you feel that they're not

00:18:44,560 --> 00:18:47,500
something you want to work with is

00:18:45,670 --> 00:18:51,670
because well when you're concentrating

00:18:47,500 --> 00:18:54,250
at this point your brain subconsciously

00:18:51,670 --> 00:18:56,410
knows that there's that and that still

00:18:54,250 --> 00:18:59,530
existing outside and you have to learn

00:18:56,410 --> 00:19:01,630
it so if you're looking at this bit well

00:18:59,530 --> 00:19:05,140
then the bit that's invisible that you

00:19:01,630 --> 00:19:09,280
aware of subconsciously is this bit okay

00:19:05,140 --> 00:19:11,530
so the next part of the the next part of

00:19:09,280 --> 00:19:14,980
the experiment the next planning phase

00:19:11,530 --> 00:19:20,050
design and deconstructing the problem as

00:19:14,980 --> 00:19:22,210
well we don't want people to have a

00:19:20,050 --> 00:19:24,370
small view and then be apprehensive that

00:19:22,210 --> 00:19:27,640
well if they're seeing this section of

00:19:24,370 --> 00:19:28,930
it this and this is something they still

00:19:27,640 --> 00:19:33,220
have to learn it could be quite

00:19:28,930 --> 00:19:36,580
complicated it might not work so the

00:19:33,220 --> 00:19:39,790
framework we produced compresses the

00:19:36,580 --> 00:19:42,070
problem it compresses a problem down so

00:19:39,790 --> 00:19:43,930
that your viewpoint although you're

00:19:42,070 --> 00:19:46,120
looking at that the rest of the thing

00:19:43,930 --> 00:19:50,260
that you have to learn is small in

00:19:46,120 --> 00:19:52,860
comparison so in terms if I build an

00:19:50,260 --> 00:19:56,770
analogy it's like

00:19:52,860 --> 00:20:00,580
El Capitan everybody know of El Capitan

00:19:56,770 --> 00:20:02,710
big sheer face in California you must

00:20:00,580 --> 00:20:06,460
have watched that video okay okay

00:20:02,710 --> 00:20:10,180
it's a giant cliff massive cliff right

00:20:06,460 --> 00:20:13,390
so so if you're staring at it it's a

00:20:10,180 --> 00:20:16,120
sheer cliff now you're you're aware that

00:20:13,390 --> 00:20:19,660
there's a huge portion above your head

00:20:16,120 --> 00:20:23,050
and there's a certain amount of

00:20:19,660 --> 00:20:25,270
apprehension and your feels

00:20:23,050 --> 00:20:29,050
disconcerting that there's a whole cliff

00:20:25,270 --> 00:20:31,360
ahead of you right this is stupid

00:20:29,050 --> 00:20:35,530
analogy imagine there's a friendly

00:20:31,360 --> 00:20:36,760
iceberg okay and I know you could be in

00:20:35,530 --> 00:20:38,890
a ship and you could hit it and you

00:20:36,760 --> 00:20:40,930
could die but imagine this a friendly

00:20:38,890 --> 00:20:43,690
iceberg this is an equivalent of seeing

00:20:40,930 --> 00:20:47,950
just a little bit on top but the rest of

00:20:43,690 --> 00:20:51,070
its hidden away from you okay so this is

00:20:47,950 --> 00:20:53,200
this is effectively the abstract view of

00:20:51,070 --> 00:20:56,080
what we were trying to create with the

00:20:53,200 --> 00:20:58,960
API that we produced compress the

00:20:56,080 --> 00:21:01,480
problem down for the person using it so

00:20:58,960 --> 00:21:04,000
they don't have to learn a lot to

00:21:01,480 --> 00:21:08,770
leverage that level of flexibility and

00:21:04,000 --> 00:21:11,020
ability they only need to do that so

00:21:08,770 --> 00:21:14,080
that's what Andy was inferring to before

00:21:11,020 --> 00:21:16,060
when he said declarative when you start

00:21:14,080 --> 00:21:19,300
the framework up you declared to it I

00:21:16,060 --> 00:21:21,520
want this this this and this it knows

00:21:19,300 --> 00:21:24,070
how to do those jobs in the most

00:21:21,520 --> 00:21:26,080
effective manner possible it will do

00:21:24,070 --> 00:21:28,150
them for you if you've done something

00:21:26,080 --> 00:21:29,950
wrong at the start it will stop and it

00:21:28,150 --> 00:21:33,220
will tell you can't do it

00:21:29,950 --> 00:21:35,500
you did this wrong so the whole point

00:21:33,220 --> 00:21:37,780
about it being declarative you guys must

00:21:35,500 --> 00:21:40,420
be aware of react how many people here

00:21:37,780 --> 00:21:42,070
use react okay you're deferring the

00:21:40,420 --> 00:21:44,260
problem you're deferring the problem of

00:21:42,070 --> 00:21:46,660
trying to manipulate the Dom effectively

00:21:44,260 --> 00:21:48,370
you're saying I don't care about this

00:21:46,660 --> 00:21:49,870
problem you are going to do it better

00:21:48,370 --> 00:21:51,760
than I am I got other things to worry

00:21:49,870 --> 00:21:54,400
about I've got enough deadlines to worry

00:21:51,760 --> 00:21:56,110
about you take care of this this is that

00:21:54,400 --> 00:21:58,270
this is what it's doing it's a

00:21:56,110 --> 00:22:03,280
compressing its compressing that down

00:21:58,270 --> 00:22:04,269
for you next bizarre slide that's not so

00:22:03,280 --> 00:22:07,989
bizarre okay

00:22:04,269 --> 00:22:11,889
so effectively there's a lot of things

00:22:07,989 --> 00:22:18,690
that we did in Atlas now the critical

00:22:11,889 --> 00:22:22,059
bit was these four items so as Andy

00:22:18,690 --> 00:22:24,309
alluded to before one of the most

00:22:22,059 --> 00:22:28,239
important things we did with Atlas who

00:22:24,309 --> 00:22:29,739
is that we noticed that developers in

00:22:28,239 --> 00:22:32,440
different teams were doing the same

00:22:29,739 --> 00:22:34,359
thing again and again there were certain

00:22:32,440 --> 00:22:41,739
errors that were happening again and

00:22:34,359 --> 00:22:44,889
again and that caused sad developers so

00:22:41,739 --> 00:22:47,169
it's it's it's not fun when you've got a

00:22:44,889 --> 00:22:48,789
team sitting there who solved something

00:22:47,169 --> 00:22:51,579
and then you've got another team sitting

00:22:48,789 --> 00:22:56,409
here who have to do it again it's just

00:22:51,579 --> 00:22:59,709
not a fun experience so we took away all

00:22:56,409 --> 00:23:02,049
the boring aspects we put it into the

00:22:59,709 --> 00:23:04,359
declarative section and we said well

00:23:02,049 --> 00:23:07,179
we'll do those for you you don't need to

00:23:04,359 --> 00:23:09,369
worry about that there's been many many

00:23:07,179 --> 00:23:10,659
times which we're where engineers have

00:23:09,369 --> 00:23:12,549
come up to us and said look we've got

00:23:10,659 --> 00:23:14,409
this issue and we said well you don't

00:23:12,549 --> 00:23:16,809
need to worry about it Atlas will take

00:23:14,409 --> 00:23:20,889
care of it and the smile on their face

00:23:16,809 --> 00:23:23,379
is probably worth whatever but they walk

00:23:20,889 --> 00:23:24,999
away knowing that they're that much

00:23:23,379 --> 00:23:26,709
lighter their workload is that much

00:23:24,999 --> 00:23:31,919
lighter because they don't have to do

00:23:26,709 --> 00:23:34,659
that so the way to get to that is

00:23:31,919 --> 00:23:39,669
community-led which means that you have

00:23:34,659 --> 00:23:41,889
to go out to everybody who's going to be

00:23:39,669 --> 00:23:45,549
affected by that problem and you have to

00:23:41,889 --> 00:23:46,959
ask them what's the problem that you

00:23:45,549 --> 00:23:50,609
have with the way that you currently

00:23:46,959 --> 00:23:52,450
work and if there was a utopian solution

00:23:50,609 --> 00:23:54,669
what would it do for you

00:23:52,450 --> 00:23:59,349
you take the utopian solution and you

00:23:54,669 --> 00:24:05,409
build towards it so we've taken specific

00:23:59,349 --> 00:24:09,159
RS centricity x' rules things you must

00:24:05,409 --> 00:24:09,700
do which are boring and Atlas does them

00:24:09,159 --> 00:24:13,179
for you

00:24:09,700 --> 00:24:16,770
so for instance if you we use a date dog

00:24:13,179 --> 00:24:19,970
uh within the company to

00:24:16,770 --> 00:24:24,030
- to logout except for the fact that

00:24:19,970 --> 00:24:26,010
when you create the log message it has

00:24:24,030 --> 00:24:28,350
to be in a very specific format for it

00:24:26,010 --> 00:24:30,360
to be hoovered up sent to de dog that it

00:24:28,350 --> 00:24:32,100
can be automatically reported on and we

00:24:30,360 --> 00:24:37,560
notice that teams are doing it different

00:24:32,100 --> 00:24:40,140
and things were breaking so that as a

00:24:37,560 --> 00:24:43,410
rule set was sucked up put in to put

00:24:40,140 --> 00:24:45,510
into atlas now what atlas will do that

00:24:43,410 --> 00:24:47,580
for you now you can augment the message

00:24:45,510 --> 00:24:52,050
you can change it but it will do that

00:24:47,580 --> 00:24:54,600
for you this this is the biggest win

00:24:52,050 --> 00:25:00,090
that we've had which is fixed once fix

00:24:54,600 --> 00:25:02,280
everywhere since the framework now does

00:25:00,090 --> 00:25:04,410
the heavy lifting for you if there's a

00:25:02,280 --> 00:25:06,470
bug that one team experiences or there's

00:25:04,410 --> 00:25:10,890
a bug in the framework which we've had

00:25:06,470 --> 00:25:13,020
we fix it and then we version it we

00:25:10,890 --> 00:25:14,790
create release notes and suddenly every

00:25:13,020 --> 00:25:17,670
team that updates to that dependency

00:25:14,790 --> 00:25:19,010
gets that for free so there can be it

00:25:17,670 --> 00:25:21,300
could be bug fixes it could be

00:25:19,010 --> 00:25:23,580
functionality it could be could be

00:25:21,300 --> 00:25:25,590
whatever there have been cases where a

00:25:23,580 --> 00:25:28,620
team's come up inadvertently with an

00:25:25,590 --> 00:25:30,660
idea which is pretty genius we've

00:25:28,620 --> 00:25:33,770
implemented it in RS and now that as a

00:25:30,660 --> 00:25:37,320
feature set is available to everybody

00:25:33,770 --> 00:25:39,960
and and and this is probably the most

00:25:37,320 --> 00:25:42,720
critical difference this is the most

00:25:39,960 --> 00:25:46,380
critical point out of all of it this is

00:25:42,720 --> 00:25:48,360
what's helped people because now when

00:25:46,380 --> 00:25:51,090
they're developing the game everybody

00:25:48,360 --> 00:25:53,070
else is bug fixes everybody else's

00:25:51,090 --> 00:25:55,890
functionality everybody else's feature

00:25:53,070 --> 00:25:56,970
requests and they get it for free which

00:25:55,890 --> 00:26:00,360
means that when they do their

00:25:56,970 --> 00:26:03,420
development it's almost as if they're

00:26:00,360 --> 00:26:07,040
being protected by some kind of hidden

00:26:03,420 --> 00:26:09,300
force what's not hidden force Atlas that

00:26:07,040 --> 00:26:11,850
whatever you do if you stay with this

00:26:09,300 --> 00:26:13,530
bubble we will protect you effectively

00:26:11,850 --> 00:26:15,510
and if there's something wrong we will

00:26:13,530 --> 00:26:17,340
not we will notify you we'll let you

00:26:15,510 --> 00:26:19,230
know in a console message you haven't

00:26:17,340 --> 00:26:21,270
done this if you don't fix this you're

00:26:19,230 --> 00:26:23,550
going to get obscure bugs in your code

00:26:21,270 --> 00:26:24,990
base and we're we're not going to run

00:26:23,550 --> 00:26:28,050
well you're not going to run this server

00:26:24,990 --> 00:26:30,179
until you fix this problem I know that

00:26:28,050 --> 00:26:32,480
because I've experienced those bugs

00:26:30,179 --> 00:26:36,110
probably means I put them in but it's

00:26:32,480 --> 00:26:45,690
this is by far the most critical thing

00:26:36,110 --> 00:26:47,249
next one okay let's say you guys let's

00:26:45,690 --> 00:26:53,519
say you guys want to go on this journey

00:26:47,249 --> 00:26:55,860
for yourself and build a framework it's

00:26:53,519 --> 00:26:57,840
been a kind of a baptism of fire as

00:26:55,860 --> 00:27:00,480
we've been working through this and I

00:26:57,840 --> 00:27:04,200
was thinking well if we wanted to impart

00:27:00,480 --> 00:27:05,539
on to you what we've learned what would

00:27:04,200 --> 00:27:09,299
it be

00:27:05,539 --> 00:27:13,200
what's the most valuable lessons I know

00:27:09,299 --> 00:27:17,190
that's a cliche but it starts there work

00:27:13,200 --> 00:27:22,080
smarter not harder which is that be

00:27:17,190 --> 00:27:25,409
vigilant of problems around you so my

00:27:22,080 --> 00:27:27,659
personal rule is if I do the same action

00:27:25,409 --> 00:27:30,779
twice I oughta mate it for the third

00:27:27,659 --> 00:27:31,889
time I don't think about it no matter

00:27:30,779 --> 00:27:33,809
how long it takes me

00:27:31,889 --> 00:27:36,480
I oughta mate it for the second for the

00:27:33,809 --> 00:27:37,740
third time around the first time well

00:27:36,480 --> 00:27:39,210
you're doing it for the first time the

00:27:37,740 --> 00:27:41,970
second time it might be a fluke but if

00:27:39,210 --> 00:27:44,700
I'm gonna if it happens then I oughta

00:27:41,970 --> 00:27:46,529
mate it'd be smart don't work hard

00:27:44,700 --> 00:27:49,980
because at the end of the day it comes

00:27:46,529 --> 00:27:51,450
down to you needing to be happy in the

00:27:49,980 --> 00:27:53,940
jobs that you're doing if you're happy

00:27:51,450 --> 00:27:56,009
developers or engineers you're more

00:27:53,940 --> 00:28:00,929
productive and that's the philosophy

00:27:56,009 --> 00:28:04,499
that we're driving out here this is

00:28:00,929 --> 00:28:06,090
critical look around you often the

00:28:04,499 --> 00:28:11,820
problems are staring you in the face

00:28:06,090 --> 00:28:14,840
which is that a lot of the times when

00:28:11,820 --> 00:28:18,379
you when you're trying to fix an issue

00:28:14,840 --> 00:28:22,499
sometimes I don't know about you guys

00:28:18,379 --> 00:28:23,730
you but I have had enough past and

00:28:22,499 --> 00:28:27,960
inclination to look at the most

00:28:23,730 --> 00:28:30,779
complicated thing first it's it's

00:28:27,960 --> 00:28:34,110
something you learn over time to to not

00:28:30,779 --> 00:28:38,070
do and I've been taught that lesson by

00:28:34,110 --> 00:28:40,379
my children that it's not necessarily

00:28:38,070 --> 00:28:41,730
the most complicated way of fixing the

00:28:40,379 --> 00:28:43,920
problem which is the best is the

00:28:41,730 --> 00:28:48,170
simplest and most effective way is

00:28:43,920 --> 00:28:53,190
most direct route in so if something is

00:28:48,170 --> 00:28:54,660
really really getting you a problem is

00:28:53,190 --> 00:28:59,040
really really got your back up against

00:28:54,660 --> 00:29:01,560
wall step back and actually just focus

00:28:59,040 --> 00:29:05,730
on the problem and see what the problem

00:29:01,560 --> 00:29:08,160
is understand the problem build

00:29:05,730 --> 00:29:12,110
solutions to the problems directly in

00:29:08,160 --> 00:29:16,680
your line of sight do not prematurely

00:29:12,110 --> 00:29:19,430
optimize don't build for things that

00:29:16,680 --> 00:29:22,380
haven't happened yet or you think

00:29:19,430 --> 00:29:24,750
they're gonna happen because you will

00:29:22,380 --> 00:29:27,690
build you will waste engineering effort

00:29:24,750 --> 00:29:30,120
and if you've got a small team the worst

00:29:27,690 --> 00:29:33,360
thing that you can do is waste the

00:29:30,120 --> 00:29:35,190
resource that you have you have to be

00:29:33,360 --> 00:29:36,960
clever with your time you get a finite

00:29:35,190 --> 00:29:39,600
amount of mate whether it be work

00:29:36,960 --> 00:29:42,150
however use it wisely look at the

00:29:39,600 --> 00:29:47,340
problem in front of your face focus on

00:29:42,150 --> 00:29:49,790
that this helps more than I originally

00:29:47,340 --> 00:29:49,790
anticipated

00:29:49,860 --> 00:29:57,210
because I hate meetings is include as

00:29:53,640 --> 00:29:59,040
many relevant people as possible the

00:29:57,210 --> 00:30:02,510
broader your understanding of the

00:29:59,040 --> 00:30:05,820
problem the better your solution will be

00:30:02,510 --> 00:30:07,830
often when you speak to people they will

00:30:05,820 --> 00:30:10,680
give you an insight that you've never

00:30:07,830 --> 00:30:14,100
seen before and you have to understand

00:30:10,680 --> 00:30:16,410
it from that perspective its insights

00:30:14,100 --> 00:30:20,400
and perspectives that can often build

00:30:16,410 --> 00:30:23,820
your best solutions this one hurts the

00:30:20,400 --> 00:30:26,100
most be ready to be on your own because

00:30:23,820 --> 00:30:29,090
if you build a framework there won't be

00:30:26,100 --> 00:30:32,790
a solution on stackoverflow google and

00:30:29,090 --> 00:30:37,770
when you're in that space be ready to

00:30:32,790 --> 00:30:42,210
dive into source code be ready to build

00:30:37,770 --> 00:30:43,980
and think they don't have to do

00:30:42,210 --> 00:30:46,440
world-class solutions you just need to

00:30:43,980 --> 00:30:49,230
fix the problem at hand and this is

00:30:46,440 --> 00:30:50,880
where people like if you you can bounce

00:30:49,230 --> 00:30:55,290
ideas and you can have thought

00:30:50,880 --> 00:30:58,160
experiments it's useful but be vigilant

00:30:55,290 --> 00:31:00,620
that this is going to cause you

00:30:58,160 --> 00:31:04,910
if you decide to build a framework but

00:31:00,620 --> 00:31:08,080
if you follow these things you will

00:31:04,910 --> 00:31:12,559
effectively build a really good solution

00:31:08,080 --> 00:31:16,060
so I mean I don't know what more I can

00:31:12,559 --> 00:31:22,339
say on that thank you

00:31:16,060 --> 00:31:22,339

YouTube URL: https://www.youtube.com/watch?v=IERZZ40cffo


