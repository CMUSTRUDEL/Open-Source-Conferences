Title: Logging for Health and Happiness - JS Roundabout - April 2018
Publication date: 2018-04-11
Playlist: The JS Roundabout
Description: 
	Tom Singer (Development Manager) and Aubrey Stearn (DevOps Manager) of Arcadia Group.

You can’t fix problems if you don’t know they’re happening. This talk will detail how Engineers at Arcadia log their React and NodeJS applications in order to get a better understanding of how the application performs, and quickly.

This allows Arcadia to easily debug any issues to ensure that their users can always purchase the latest fashions.
Captions: 
	00:00:00,030 --> 00:00:03,990
so I'm gonna come clean we're in the

00:00:02,790 --> 00:00:05,040
middle of launching a platform so

00:00:03,990 --> 00:00:07,130
originally we said we're gonna do this

00:00:05,040 --> 00:00:09,120
logging for health and happiness thing

00:00:07,130 --> 00:00:10,500
because we're launching a platform I had

00:00:09,120 --> 00:00:12,000
no time to write slide so I'm gonna have

00:00:10,500 --> 00:00:14,670
to reuse some stuff I did for a DevOps

00:00:12,000 --> 00:00:16,170
summit a couple of weeks ago and tom has

00:00:14,670 --> 00:00:17,160
put a bunch of stuff about logging in so

00:00:16,170 --> 00:00:20,160
hopefully we'll sort of make this thing

00:00:17,160 --> 00:00:22,410
come together but we're through because

00:00:20,160 --> 00:00:23,730
there are 40-something slides and the

00:00:22,410 --> 00:00:26,340
first one says I'm short on time which

00:00:23,730 --> 00:00:28,170
is true so I'm the head of DevOps for

00:00:26,340 --> 00:00:29,220
Arcadia so if you have that title you're

00:00:28,170 --> 00:00:31,320
probably doing it completely wrong and

00:00:29,220 --> 00:00:34,800
you're devil's was all screwed up and

00:00:31,320 --> 00:00:40,230
Tom is the Deaf manager for Arcadia and

00:00:34,800 --> 00:00:42,120
so speak a lot at the time so not to

00:00:40,230 --> 00:00:44,100
scale so everything I'm about to tell

00:00:42,120 --> 00:00:45,899
you is not to scale which means it

00:00:44,100 --> 00:00:47,550
probably won't suit your needs or it

00:00:45,899 --> 00:00:48,930
might or some bits might so take the

00:00:47,550 --> 00:00:51,300
bits that you want and discard the bits

00:00:48,930 --> 00:00:53,160
that you don't the scale will affect

00:00:51,300 --> 00:00:54,480
almost everything we do and so things

00:00:53,160 --> 00:00:55,829
for enterprise typically don't work or

00:00:54,480 --> 00:01:00,059
startup and startup starts don't work at

00:00:55,829 --> 00:01:02,670
enterprise and la-la-la got hiding so

00:01:00,059 --> 00:01:03,780
this is an interesting one so all the

00:01:02,670 --> 00:01:05,549
time into DevOps when you're trying to

00:01:03,780 --> 00:01:06,930
create something like canary flow so you

00:01:05,549 --> 00:01:10,049
want a canary environment or your mania

00:01:06,930 --> 00:01:11,970
environment in which development this is

00:01:10,049 --> 00:01:14,070
really easy to develop to delivering

00:01:11,970 --> 00:01:15,930
DevOps really simple thing that we do we

00:01:14,070 --> 00:01:17,549
do this all the time well we don't have

00:01:15,930 --> 00:01:19,710
to think about it's the hygiene required

00:01:17,549 --> 00:01:22,799
on the development site to do this so

00:01:19,710 --> 00:01:25,830
I'm an SRE site reliability engineer I

00:01:22,799 --> 00:01:27,150
dev I write code doctrine code I work on

00:01:25,830 --> 00:01:30,119
production applications and I do the

00:01:27,150 --> 00:01:32,700
DevOps side of things and so half the

00:01:30,119 --> 00:01:34,290
time that I spend in work is babysitting

00:01:32,700 --> 00:01:35,759
us through the journey is required to

00:01:34,290 --> 00:01:37,740
take us to alert necessary level of

00:01:35,759 --> 00:01:39,780
Hygiene you know to support pushing to

00:01:37,740 --> 00:01:41,189
something like your trunk which means

00:01:39,780 --> 00:01:43,079
going to a canary environment which

00:01:41,189 --> 00:01:44,970
going to real customers and being able

00:01:43,079 --> 00:01:46,409
to build the tests required and the

00:01:44,970 --> 00:01:47,820
confidence required for you to be able

00:01:46,409 --> 00:01:50,040
to say okay I have done a piece of

00:01:47,820 --> 00:01:51,630
development I've built a feature as

00:01:50,040 --> 00:01:54,210
synthetics around this I have a hundred

00:01:51,630 --> 00:01:55,590
percent test coverage 100% test coverage

00:01:54,210 --> 00:01:57,420
if you really think about it it's

00:01:55,590 --> 00:01:59,340
probably about half of the test coverage

00:01:57,420 --> 00:02:00,329
you actually need and I will get you to

00:01:59,340 --> 00:02:02,219
that point where you've done all of

00:02:00,329 --> 00:02:03,450
these things and you can be confident as

00:02:02,219 --> 00:02:05,219
a developer that you're pushing into

00:02:03,450 --> 00:02:07,350
that production environment and you're

00:02:05,219 --> 00:02:08,399
safely not affecting customers so

00:02:07,350 --> 00:02:10,920
there's a whole bunch of stuff that we

00:02:08,399 --> 00:02:13,110
need to go and do logging synthetics

00:02:10,920 --> 00:02:13,740
test coverage in order to get you to the

00:02:13,110 --> 00:02:15,330
point where you

00:02:13,740 --> 00:02:16,890
do continuous development continuous

00:02:15,330 --> 00:02:18,390
appointment into a production

00:02:16,890 --> 00:02:23,250
environment of real customers every

00:02:18,390 --> 00:02:24,780
single day so emerging to master these

00:02:23,250 --> 00:02:26,100
are quite interesting so trunk data I'm

00:02:24,780 --> 00:02:28,290
a huge fan of trunk based development

00:02:26,100 --> 00:02:30,480
it's really quick really agile is very

00:02:28,290 --> 00:02:31,800
easy to not have to think about all the

00:02:30,480 --> 00:02:37,110
things to emerging he's pretty much just

00:02:31,800 --> 00:02:38,550
like one thing one thing to think about

00:02:37,110 --> 00:02:41,040
and I tend to produc you mean behavior

00:02:38,550 --> 00:02:43,680
quite a lot is the fear of merging to

00:02:41,040 --> 00:02:45,780
master as a developer knowing that if I

00:02:43,680 --> 00:02:47,400
merge to development and I push this

00:02:45,780 --> 00:02:49,440
thing out it's going to be front of real

00:02:47,400 --> 00:02:51,120
customers is an interesting thing it

00:02:49,440 --> 00:02:52,920
really pushes me from from emotional

00:02:51,120 --> 00:02:54,330
level to they you know can this hold up

00:02:52,920 --> 00:02:56,220
somebody with my peers look at me it's I

00:02:54,330 --> 00:02:58,440
hate ovary you wrote this feature and

00:02:56,220 --> 00:02:59,550
you push this feature out how come you

00:02:58,440 --> 00:03:00,900
didn't write this test how come you

00:02:59,550 --> 00:03:01,920
didn't have the synthetics did you test

00:03:00,900 --> 00:03:03,930
this thing did you do modify the

00:03:01,920 --> 00:03:05,700
synthetics to go and test this path now

00:03:03,930 --> 00:03:07,710
it's an in the context the entire site

00:03:05,700 --> 00:03:09,690
so I'm constantly around leveraging that

00:03:07,710 --> 00:03:11,250
fear trying to push you to get to that

00:03:09,690 --> 00:03:14,880
point where your your confident your dev

00:03:11,250 --> 00:03:17,190
levels that super high super saying so

00:03:14,880 --> 00:03:19,890
it stubs and mocks consumer-driven test

00:03:17,190 --> 00:03:23,010
contract conceived in contract testing

00:03:19,890 --> 00:03:24,150
so it's packed and packed broker chunk

00:03:23,010 --> 00:03:25,290
based development so these are some of

00:03:24,150 --> 00:03:27,450
the things that I'm constantly trying to

00:03:25,290 --> 00:03:29,070
leverage to do this so when we think of

00:03:27,450 --> 00:03:30,870
like monolithic applications or whatnot

00:03:29,070 --> 00:03:33,270
and we have upstream dependencies on

00:03:30,870 --> 00:03:35,850
those they will kill your cadence that

00:03:33,270 --> 00:03:37,290
will kill your velocity so a lot of time

00:03:35,850 --> 00:03:38,370
we talk about Microsoft's patterns what

00:03:37,290 --> 00:03:41,070
we want to do is try and chop up that

00:03:38,370 --> 00:03:42,150
thing into smaller models so we can go

00:03:41,070 --> 00:03:45,210
and bring people on board and get them

00:03:42,150 --> 00:03:46,830
working faster stubs and mocks are a

00:03:45,210 --> 00:03:48,210
real easy way of doing that so you're

00:03:46,830 --> 00:03:49,470
going to take something taste a micro

00:03:48,210 --> 00:03:50,690
service make sure that all those stubs

00:03:49,470 --> 00:03:54,240
and mocks and up streams are in place

00:03:50,690 --> 00:03:55,550
it's quite easy to get going a lot

00:03:54,240 --> 00:03:57,810
faster

00:03:55,550 --> 00:03:59,280
it was a say something important yeah

00:03:57,810 --> 00:04:00,570
consumers are in contact testing

00:03:59,280 --> 00:04:02,010
obviously it means that if you have a

00:04:00,570 --> 00:04:04,380
problem where you're dependent on

00:04:02,010 --> 00:04:07,290
somebody else's service and the ground

00:04:04,380 --> 00:04:08,190
is shifting underneath you this is quite

00:04:07,290 --> 00:04:09,959
interesting so you're essentially

00:04:08,190 --> 00:04:11,790
putting in a model something these

00:04:09,959 --> 00:04:14,250
impact on packs brokers but a model in

00:04:11,790 --> 00:04:16,020
place which means your dependency would

00:04:14,250 --> 00:04:17,940
not be able to push unless they're

00:04:16,020 --> 00:04:19,049
compatible your contract which is really

00:04:17,940 --> 00:04:21,660
interesting pattern because it actually

00:04:19,049 --> 00:04:23,100
kind of forces a conversation between

00:04:21,660 --> 00:04:24,780
teams and what's really useful is that

00:04:23,100 --> 00:04:26,070
if you are using sunlight trunk based

00:04:24,780 --> 00:04:27,480
development it means it forces the

00:04:26,070 --> 00:04:29,700
conversation with teams that might not

00:04:27,480 --> 00:04:30,510
so you've spoken before which is quite

00:04:29,700 --> 00:04:32,430
cool and especially if you're a new

00:04:30,510 --> 00:04:33,990
developer it's like oh I break the

00:04:32,430 --> 00:04:35,550
boat and it's going talk with these guys

00:04:33,990 --> 00:04:36,750
and so that's a really cool way of

00:04:35,550 --> 00:04:38,700
making sure that everything still

00:04:36,750 --> 00:04:40,290
slickly works and then still inspiring a

00:04:38,700 --> 00:04:42,900
confidence for the new people to be able

00:04:40,290 --> 00:04:45,840
to just keep doing that thing

00:04:42,900 --> 00:04:48,380
so logging as a engineering fundamental

00:04:45,840 --> 00:04:50,820
this is a concept I push all the time

00:04:48,380 --> 00:04:53,460
and nobody really thinks of logging as a

00:04:50,820 --> 00:04:55,380
fundamental engineering principle but it

00:04:53,460 --> 00:04:56,970
really is especially we do micro

00:04:55,380 --> 00:04:58,430
services so I had a bunch of stuff that

00:04:56,970 --> 00:05:01,830
I going to say about they span skip it

00:04:58,430 --> 00:05:03,360
and go to this one which is we went for

00:05:01,830 --> 00:05:04,440
New Relic and we should have outgrown a

00:05:03,360 --> 00:05:07,140
cocaine graph on it first

00:05:04,440 --> 00:05:08,520
what that means is that we have a huge

00:05:07,140 --> 00:05:10,620
hole in Arcadia and we looked at our

00:05:08,520 --> 00:05:11,880
logging and micro service pattern and

00:05:10,620 --> 00:05:13,440
what we were doing in terms of like how

00:05:11,880 --> 00:05:16,110
we looked at application what was going

00:05:13,440 --> 00:05:18,180
wrong our intelligence dashboarding two

00:05:16,110 --> 00:05:19,860
people inside technology we are a huge

00:05:18,180 --> 00:05:20,820
hole and we went for the best tool we

00:05:19,860 --> 00:05:21,900
went for a really great tool and were

00:05:20,820 --> 00:05:23,940
like New Relic will solve all our

00:05:21,900 --> 00:05:25,950
problems and what we did was go to New

00:05:23,940 --> 00:05:27,390
Relic and we went there shred away and

00:05:25,950 --> 00:05:29,250
so we didn't have all of the hygiene

00:05:27,390 --> 00:05:31,050
that went with getting to a service

00:05:29,250 --> 00:05:32,490
which is really interesting so if you

00:05:31,050 --> 00:05:33,990
think about going to the best thing a

00:05:32,490 --> 00:05:35,460
lot of times you haven't been on the

00:05:33,990 --> 00:05:36,750
journey and then you don't really

00:05:35,460 --> 00:05:38,220
understand how to use this tool and so

00:05:36,750 --> 00:05:39,750
you give over this tree great tool and

00:05:38,220 --> 00:05:41,010
no one really understands how to use it

00:05:39,750 --> 00:05:42,630
so what we probably should have done is

00:05:41,010 --> 00:05:44,280
something that I pitched quite a lot is

00:05:42,630 --> 00:05:46,320
to start really small with a really

00:05:44,280 --> 00:05:47,460
small tool and then outgrow it until the

00:05:46,320 --> 00:05:48,780
point where we're sort of bursting at

00:05:47,460 --> 00:05:50,670
the seams and then go for something

00:05:48,780 --> 00:05:52,530
mildly better and then you'll have all

00:05:50,670 --> 00:05:54,480
the journey all of the experience that

00:05:52,530 --> 00:05:55,470
goes with getting to that point and then

00:05:54,480 --> 00:05:56,910
when you get to the really really cool

00:05:55,470 --> 00:05:58,200
thing at the end of the journey you'll

00:05:56,910 --> 00:06:03,170
be able to leverage that's of full

00:05:58,200 --> 00:06:05,910
extent so tom is going to take over okay

00:06:03,170 --> 00:06:07,650
okay I'm going to caveat this with we're

00:06:05,910 --> 00:06:09,480
changing things a lot at the moment so

00:06:07,650 --> 00:06:11,510
this is pretty much right for now but

00:06:09,480 --> 00:06:14,370
might not be what we're doing tomorrow

00:06:11,510 --> 00:06:15,900
also if I have any questions that

00:06:14,370 --> 00:06:18,330
anybody asked me at the end I'm gonna

00:06:15,900 --> 00:06:19,950
try and leverage people up there who

00:06:18,330 --> 00:06:21,660
have come over working on this at the

00:06:19,950 --> 00:06:22,920
moment day to day who's shaking his head

00:06:21,660 --> 00:06:25,590
at the moment who might not be able to

00:06:22,920 --> 00:06:27,660
help me but so the problem so as always

00:06:25,590 --> 00:06:30,750
says when we started looking at logging

00:06:27,660 --> 00:06:33,030
at Arcadia we were we didn't have

00:06:30,750 --> 00:06:34,770
anything in place we were running around

00:06:33,030 --> 00:06:36,210
like headless chickens we were basically

00:06:34,770 --> 00:06:38,220
we didn't know where the problems were

00:06:36,210 --> 00:06:40,320
coming from we didn't know why

00:06:38,220 --> 00:06:40,889
production was having issues we didn't

00:06:40,320 --> 00:06:42,569
know

00:06:40,889 --> 00:06:44,669
like we didn't know what part of the

00:06:42,569 --> 00:06:45,960
code was behaving badly and the reason

00:06:44,669 --> 00:06:48,629
that we didn't know that is because we

00:06:45,960 --> 00:06:51,539
didn't know we didn't know anything and

00:06:48,629 --> 00:06:53,219
what we did at the time was we went and

00:06:51,539 --> 00:06:55,229
we did what a lot of people do which is

00:06:53,219 --> 00:06:57,210
you find the best service online you

00:06:55,229 --> 00:06:58,830
talk to their sales people and then you

00:06:57,210 --> 00:07:00,750
go it's just putting you allocate and

00:06:58,830 --> 00:07:02,759
let's put data dog in let's put

00:07:00,750 --> 00:07:04,259
something in but just throwing something

00:07:02,759 --> 00:07:05,939
at it and not really configuring it

00:07:04,259 --> 00:07:06,240
properly and just letting it do its

00:07:05,939 --> 00:07:08,849
thing

00:07:06,240 --> 00:07:10,710
it while it works and while it's good it

00:07:08,849 --> 00:07:12,150
doesn't necessarily give you as much as

00:07:10,710 --> 00:07:13,979
if you've done it yourself and almost as

00:07:12,150 --> 00:07:16,139
if you've gone back to the basics for it

00:07:13,979 --> 00:07:18,659
so what I want to talk today like today

00:07:16,139 --> 00:07:20,580
about is the right way you know what we

00:07:18,659 --> 00:07:22,289
should have done from the start and what

00:07:20,580 --> 00:07:24,629
I'd advise and what all we would advise

00:07:22,289 --> 00:07:26,580
and I think that what most people should

00:07:24,629 --> 00:07:28,680
do if they were picking this up now see

00:07:26,580 --> 00:07:31,800
if you have a production platform or a

00:07:28,680 --> 00:07:34,080
platform QA platform and you don't have

00:07:31,800 --> 00:07:35,669
any sort of locking in place for it you

00:07:34,080 --> 00:07:37,889
really need to you really start looking

00:07:35,669 --> 00:07:40,050
at it you really think about what you're

00:07:37,889 --> 00:07:42,120
wanting it for what's the right way to

00:07:40,050 --> 00:07:46,560
do it and at the end of the day why you

00:07:42,120 --> 00:07:48,240
care about and the reason that you know

00:07:46,560 --> 00:07:51,029
the biggest thing for me why we're

00:07:48,240 --> 00:07:52,529
looking at this is speed and it's not

00:07:51,029 --> 00:07:54,990
just speed of one things at speed of a

00:07:52,529 --> 00:07:57,629
number of things it's the speed to

00:07:54,990 --> 00:08:00,000
logging so you want to put some logging

00:07:57,629 --> 00:08:01,110
in to find out your issues but you don't

00:08:00,000 --> 00:08:02,669
want the log in to become an issue

00:08:01,110 --> 00:08:04,139
itself you need to make sure that

00:08:02,669 --> 00:08:06,419
whatever platform you're putting in

00:08:04,139 --> 00:08:08,400
doesn't impact on the app so you're not

00:08:06,419 --> 00:08:10,229
sitting there waiting for timeouts as

00:08:08,400 --> 00:08:11,909
you send the data off to these logs you

00:08:10,229 --> 00:08:13,860
need to make as fast as you possibly can

00:08:11,909 --> 00:08:16,080
because you need to get the results as

00:08:13,860 --> 00:08:17,939
fast as you possibly can so you can push

00:08:16,080 --> 00:08:20,669
all your logs out and you can store them

00:08:17,939 --> 00:08:22,199
in I know s3 and then you can pull them

00:08:20,669 --> 00:08:23,370
down you can analyze them and have a

00:08:22,199 --> 00:08:25,199
look at them the next day

00:08:23,370 --> 00:08:26,610
but it's not really good enough you need

00:08:25,199 --> 00:08:28,589
to be finding a platform where you can

00:08:26,610 --> 00:08:29,909
push it in and find out now you need to

00:08:28,589 --> 00:08:31,620
be having something that's as real-time

00:08:29,909 --> 00:08:33,750
or as close to real-time as you can

00:08:31,620 --> 00:08:34,979
possibly get because if you've got an

00:08:33,750 --> 00:08:37,019
issue on production at the moment

00:08:34,979 --> 00:08:38,760
there's no point in saying we'll wait 15

00:08:37,019 --> 00:08:40,979
minutes before the logs or pass them and

00:08:38,760 --> 00:08:43,800
we can see what the issue for it is and

00:08:40,979 --> 00:08:44,970
you need to be to develop you don't want

00:08:43,800 --> 00:08:46,380
whatever you're doing if you're logging

00:08:44,970 --> 00:08:48,810
to impact on the development lifecycle

00:08:46,380 --> 00:08:50,640
you don't want all the engineers having

00:08:48,810 --> 00:08:52,890
to spend like five minutes extra on

00:08:50,640 --> 00:08:53,769
every task to add the logging in because

00:08:52,890 --> 00:08:56,319
they can't remember how

00:08:53,769 --> 00:08:57,220
do or the complexity for you don't want

00:08:56,319 --> 00:08:59,410
them to have to be sitting there

00:08:57,220 --> 00:09:01,179
thinking do I need to log this it should

00:08:59,410 --> 00:09:03,639
just be an obvious thing it should be do

00:09:01,179 --> 00:09:06,369
I need to log this yes how do I log this

00:09:03,639 --> 00:09:07,660
this is the way to do it so I'm going to

00:09:06,369 --> 00:09:09,970
touch on the architecture of what we

00:09:07,660 --> 00:09:11,649
have at the moment although this is

00:09:09,970 --> 00:09:12,730
subject to change we're not gonna talk

00:09:11,649 --> 00:09:14,679
about this too much because it's more of

00:09:12,730 --> 00:09:17,489
a JavaScript or a DevOps talk and the

00:09:14,679 --> 00:09:20,199
develop stuff is something that you do

00:09:17,489 --> 00:09:21,970
so we have all of our logs going into

00:09:20,199 --> 00:09:23,350
cloud watch and all while I was going to

00:09:21,970 --> 00:09:25,269
cloud what it's just from an app point

00:09:23,350 --> 00:09:27,129
of view because you love it just log

00:09:25,269 --> 00:09:29,439
straight to cloud watch that then gets

00:09:27,129 --> 00:09:31,420
picked up by a lambda function Rob's the

00:09:29,439 --> 00:09:33,910
AWS and that gets just pushed into

00:09:31,420 --> 00:09:36,220
elastic search elastic search you can

00:09:33,910 --> 00:09:38,110
then search through Cubana which is nice

00:09:36,220 --> 00:09:40,239
if anybody's looking for like a nice

00:09:38,110 --> 00:09:43,389
simple quick interface for logging and

00:09:40,239 --> 00:09:44,799
looking at that cabana is initially to

00:09:43,389 --> 00:09:46,660
start with a little bit complicated I

00:09:44,799 --> 00:09:49,569
think but the power of it and what you

00:09:46,660 --> 00:09:51,069
can do with it is very strong that you

00:09:49,569 --> 00:09:53,470
don't look at that you want to look at

00:09:51,069 --> 00:09:56,259
what we do how we log so this is how we

00:09:53,470 --> 00:09:57,759
log in Arcadia obviously the top two we

00:09:56,259 --> 00:10:00,160
log on the server side we log on the

00:09:57,759 --> 00:10:02,350
client side but you want it so that it's

00:10:00,160 --> 00:10:04,360
just one import line you want that it's

00:10:02,350 --> 00:10:06,279
a case of you don't need to think about

00:10:04,360 --> 00:10:08,019
it you put it in there and then you just

00:10:06,279 --> 00:10:10,329
log so you don't want to have to be

00:10:08,019 --> 00:10:13,119
thinking about what function do I use

00:10:10,329 --> 00:10:15,429
how do I put the data into it you want

00:10:13,119 --> 00:10:17,470
consistency across it and what you want

00:10:15,429 --> 00:10:19,209
to do is that you want to have not

00:10:17,470 --> 00:10:21,429
everything logged as one thing you don't

00:10:19,209 --> 00:10:23,110
just want to log all your data because

00:10:21,429 --> 00:10:24,850
there's no points out there's no use

00:10:23,110 --> 00:10:27,459
from it it's just becomes noise and it

00:10:24,850 --> 00:10:28,839
just becomes too much noise you want a

00:10:27,459 --> 00:10:30,610
few things in it when you're doing there

00:10:28,839 --> 00:10:32,230
you want the different levels on it

00:10:30,610 --> 00:10:34,269
which I'll talk about in a second that's

00:10:32,230 --> 00:10:35,970
very important but you also want to try

00:10:34,269 --> 00:10:39,309
and segment in that data as well so

00:10:35,970 --> 00:10:40,869
namespace set give it sensible namespace

00:10:39,309 --> 00:10:43,540
whether that's your API whether it's the

00:10:40,869 --> 00:10:45,699
client side lot obviously the message

00:10:43,540 --> 00:10:47,829
for it make sure that sensible make sure

00:10:45,699 --> 00:10:49,449
it's human understandable you don't want

00:10:47,829 --> 00:10:51,040
to be sitting there saying I don't

00:10:49,449 --> 00:10:52,689
understand what this log that's coming

00:10:51,040 --> 00:10:54,759
in is I don't know son looks log is four

00:10:52,689 --> 00:10:56,709
and then obviously like any additional

00:10:54,759 --> 00:10:58,720
information you want on the end and just

00:10:56,709 --> 00:11:00,699
that one little snippet enables you to

00:10:58,720 --> 00:11:02,230
put as much information as you need and

00:11:00,699 --> 00:11:03,730
main Able's you to put so much

00:11:02,230 --> 00:11:05,440
information in that you're not having to

00:11:03,730 --> 00:11:06,640
worry about I

00:11:05,440 --> 00:11:08,050
your problem with a logger you know that

00:11:06,640 --> 00:11:09,670
everything that you have is there you're

00:11:08,050 --> 00:11:11,710
better to put too much information in

00:11:09,670 --> 00:11:13,090
and then have to like worry a little bit

00:11:11,710 --> 00:11:14,860
about parsing that rather than not

00:11:13,090 --> 00:11:16,210
having enough information in and trying

00:11:14,860 --> 00:11:19,030
to work out why you have the production

00:11:16,210 --> 00:11:20,800
problem so the different levels that we

00:11:19,030 --> 00:11:24,520
have we've got four levels on there at

00:11:20,800 --> 00:11:26,650
the moment but we're moving to five so

00:11:24,520 --> 00:11:30,310
we've got error which is the main one

00:11:26,650 --> 00:11:31,390
so we classify that as level 50 so this

00:11:30,310 --> 00:11:34,000
is the one that you don't want to be

00:11:31,390 --> 00:11:36,370
having any of really ideally this is the

00:11:34,000 --> 00:11:38,920
one that if something happens and this

00:11:36,370 --> 00:11:40,450
triggers you need to be paging whoever's

00:11:38,920 --> 00:11:42,460
on call at the moment you need to be

00:11:40,450 --> 00:11:45,430
dropping everything to fix it you need

00:11:42,460 --> 00:11:47,500
to be making sure that you only had only

00:11:45,430 --> 00:11:49,210
put what into the any put logs into this

00:11:47,500 --> 00:11:51,160
that you know that people are going to

00:11:49,210 --> 00:11:52,840
respond to if you put too much stuff

00:11:51,160 --> 00:11:54,310
into those people just start ignoring it

00:11:52,840 --> 00:11:55,990
and we've had that problem a little bit

00:11:54,310 --> 00:11:58,600
where something will just get ignored

00:11:55,990 --> 00:12:00,400
you won't know why it's there and it's

00:11:58,600 --> 00:12:01,780
okay so help somebody else I picked it

00:12:00,400 --> 00:12:05,590
up we don't need to particularly worried

00:12:01,780 --> 00:12:08,410
about warnings so warnings you want

00:12:05,590 --> 00:12:09,790
which are something that's gone bad but

00:12:08,410 --> 00:12:12,850
you're not necessarily panicking about

00:12:09,790 --> 00:12:14,590
it right now so an example that I have

00:12:12,850 --> 00:12:17,080
that everybody may agree with is

00:12:14,590 --> 00:12:19,000
something like a bad password where the

00:12:17,080 --> 00:12:20,950
users like you know they're not able to

00:12:19,000 --> 00:12:22,690
log into their account at the moment but

00:12:20,950 --> 00:12:24,670
because they're getting it wrong so you

00:12:22,690 --> 00:12:25,840
don't really want to know about that but

00:12:24,670 --> 00:12:26,920
you might want to know about it at some

00:12:25,840 --> 00:12:28,360
point in the future because it might

00:12:26,920 --> 00:12:30,130
indicate that there's a problem with the

00:12:28,360 --> 00:12:32,710
site with maybe with the user experience

00:12:30,130 --> 00:12:34,420
for it maybe you've got a problem but

00:12:32,710 --> 00:12:36,250
you don't know it immediately you want

00:12:34,420 --> 00:12:38,320
to put in things into warning like the

00:12:36,250 --> 00:12:40,030
errors that you've deprecated so you can

00:12:38,320 --> 00:12:41,410
keep tracking against them you can see

00:12:40,030 --> 00:12:42,970
having a look at them and you can still

00:12:41,410 --> 00:12:44,320
see what's going on with them but

00:12:42,970 --> 00:12:46,750
they're not waking people up and they're

00:12:44,320 --> 00:12:49,330
not pushing everybody to - like to run

00:12:46,750 --> 00:12:51,100
around and to fix it if this is

00:12:49,330 --> 00:12:52,270
happening too much then it's something

00:12:51,100 --> 00:12:53,589
that you need to be looking at but it's

00:12:52,270 --> 00:12:54,900
not a drop everything and look at it

00:12:53,589 --> 00:12:58,210
right now

00:12:54,900 --> 00:13:00,160
info so informational errors so this is

00:12:58,210 --> 00:13:01,900
more like for data collection so this is

00:13:00,160 --> 00:13:04,089
more something that you'll be like

00:13:01,900 --> 00:13:05,470
collecting on a B test something that

00:13:04,089 --> 00:13:07,630
you're going to use to improve the user

00:13:05,470 --> 00:13:09,310
experience of the site something that

00:13:07,630 --> 00:13:10,810
you're going to be looking at a lot of

00:13:09,310 --> 00:13:12,100
data for and something you're going to

00:13:10,810 --> 00:13:14,260
have to like maybe have a think about

00:13:12,100 --> 00:13:15,430
how to parse it so think about what

00:13:14,260 --> 00:13:17,050
you're putting into errors think about

00:13:15,430 --> 00:13:18,670
what you're putting into warnings you

00:13:17,050 --> 00:13:20,710
can pretty much put anything

00:13:18,670 --> 00:13:24,150
- info because unless you go in through

00:13:20,710 --> 00:13:27,400
looking at it nobody's ever gonna see it

00:13:24,150 --> 00:13:28,960
debug obviously is for when you're

00:13:27,400 --> 00:13:30,760
trying to track down those problems and

00:13:28,960 --> 00:13:33,220
you'd only ever really put something

00:13:30,760 --> 00:13:34,540
into debug and only ever look at it if

00:13:33,220 --> 00:13:36,580
you're tracking down one particular

00:13:34,540 --> 00:13:37,900
issue so you might have a your push some

00:13:36,580 --> 00:13:39,520
thing into error that will trigger

00:13:37,900 --> 00:13:41,050
everybody will panic and run about and

00:13:39,520 --> 00:13:42,310
then you'll start going through the D

00:13:41,050 --> 00:13:44,110
bugs and then you'll start trying to

00:13:42,310 --> 00:13:46,450
work out where that error is coming from

00:13:44,110 --> 00:13:48,910
with the bug you're gonna log everything

00:13:46,450 --> 00:13:51,610
so if this is more something that you

00:13:48,910 --> 00:13:52,690
don't able on the servers you went wow

00:13:51,610 --> 00:13:54,520
and you wouldn't really enable it on the

00:13:52,690 --> 00:13:56,020
servers because all your platform would

00:13:54,520 --> 00:13:58,540
fall apart or your login would fall

00:13:56,020 --> 00:14:00,460
apart but you'd have some sort of toggle

00:13:58,540 --> 00:14:01,900
where you could enable this so you have

00:14:00,460 --> 00:14:02,860
a production issue at the moment you

00:14:01,900 --> 00:14:05,200
don't know where it's coming from

00:14:02,860 --> 00:14:06,400
switch the debug on you can then push

00:14:05,200 --> 00:14:07,990
everything through and you can see

00:14:06,400 --> 00:14:10,330
what's going on with it and you can

00:14:07,990 --> 00:14:13,120
track it down a lot quicker and the last

00:14:10,330 --> 00:14:15,640
one is Trace which is like the log

00:14:13,120 --> 00:14:17,470
everything debug plus plus so it's debug

00:14:15,640 --> 00:14:19,090
plus all the pele plus as much

00:14:17,470 --> 00:14:21,820
information as you can possibly push

00:14:19,090 --> 00:14:23,710
into it you'd never enable this on

00:14:21,820 --> 00:14:25,600
production unless its life is sort of

00:14:23,710 --> 00:14:29,260
weird last resort because it will bring

00:14:25,600 --> 00:14:32,290
down your logging platform we enabled it

00:14:29,260 --> 00:14:34,360
a little while ago on production because

00:14:32,290 --> 00:14:37,270
we kind of had to for something and the

00:14:34,360 --> 00:14:38,920
amount of data that it basically filled

00:14:37,270 --> 00:14:41,470
up the disk pretty much straight away it

00:14:38,920 --> 00:14:43,540
was we were still using like AWS for it

00:14:41,470 --> 00:14:45,670
but it went hidden hit all of our limits

00:14:43,540 --> 00:14:47,530
right off because if you've got like

00:14:45,670 --> 00:14:48,880
thousands of transactions per second and

00:14:47,530 --> 00:14:50,650
you're tracking every single thing that

00:14:48,880 --> 00:14:51,940
everybody does and you're tracking all

00:14:50,650 --> 00:14:53,740
the information they're pushing into

00:14:51,940 --> 00:14:55,270
that you just not going to be able to

00:14:53,740 --> 00:14:57,670
they're just gonna kill you completely

00:14:55,270 --> 00:14:59,440
but it's useful again with this one to

00:14:57,670 --> 00:15:01,900
be able to enable it like on a per user

00:14:59,440 --> 00:15:03,640
basis or have some sort of toggle so you

00:15:01,900 --> 00:15:04,990
can go into production enable it and

00:15:03,640 --> 00:15:06,280
then track everything back through and

00:15:04,990 --> 00:15:10,300
we've done that a couple of times very

00:15:06,280 --> 00:15:12,130
nicely so where do we log we log at the

00:15:10,300 --> 00:15:14,320
moment on the server side and the client

00:15:12,130 --> 00:15:16,180
side and the reason for is obviously

00:15:14,320 --> 00:15:20,130
we've got lots of my stuff and we we

00:15:16,180 --> 00:15:22,480
have a caveat a little bit so we have a

00:15:20,130 --> 00:15:25,210
reactor plication which sort of an ojs

00:15:22,480 --> 00:15:28,089
back end we have server side rendering

00:15:25,210 --> 00:15:29,440
on the server side and sometimes it gets

00:15:28,089 --> 00:15:31,990
a little bit difficult to see where some

00:15:29,440 --> 00:15:34,240
of these issues are coming from so we

00:15:31,990 --> 00:15:36,190
log everything and try and synchronize

00:15:34,240 --> 00:15:37,960
as much as we can so that everything's

00:15:36,190 --> 00:15:39,940
logged on the server and the client we

00:15:37,960 --> 00:15:41,650
use the same architecture for both so

00:15:39,940 --> 00:15:43,320
everything goes into the same place so

00:15:41,650 --> 00:15:46,120
at the moment for us that's Cabana and

00:15:43,320 --> 00:15:47,860
also New Relic but we push it into there

00:15:46,120 --> 00:15:49,990
for both of them because it means that

00:15:47,860 --> 00:15:51,880
we can track all the way through so we

00:15:49,990 --> 00:15:53,740
can see as soon as an error hits the

00:15:51,880 --> 00:15:55,420
client side if we've got a spike in that

00:15:53,740 --> 00:15:57,910
we can then trace that all the way back

00:15:55,420 --> 00:15:59,770
through to the server side as well and

00:15:57,910 --> 00:16:01,240
also having all about data into one

00:15:59,770 --> 00:16:03,339
place means that we can simplify our

00:16:01,240 --> 00:16:05,560
alerting as well and our monitoring so

00:16:03,339 --> 00:16:07,330
we can say that if it throws a level 50

00:16:05,560 --> 00:16:08,920
here then it's going to go that's

00:16:07,330 --> 00:16:10,630
doesn't really care if it's a client or

00:16:08,920 --> 00:16:12,760
a server side will then go and page

00:16:10,630 --> 00:16:14,650
whoever's on call and it also means that

00:16:12,760 --> 00:16:17,200
the stack traces can link through back

00:16:14,650 --> 00:16:19,029
to each other very nicely so we rolled

00:16:17,200 --> 00:16:21,339
all this out and we were all very happy

00:16:19,029 --> 00:16:23,110
with it we did it fairly quickly so

00:16:21,339 --> 00:16:26,320
we've got some stuff very good we got

00:16:23,110 --> 00:16:27,730
some stuff not quite as good the things

00:16:26,320 --> 00:16:29,350
that we did well and the things I would

00:16:27,730 --> 00:16:32,560
very much recommend that everybody does

00:16:29,350 --> 00:16:34,180
so we use JSON a lot because everybody

00:16:32,560 --> 00:16:36,070
uses JSON it makes everything nice and

00:16:34,180 --> 00:16:38,140
simple it makes it we can see it means

00:16:36,070 --> 00:16:40,600
that we can standardize on things to

00:16:38,140 --> 00:16:43,300
make that a little bit simpler for us we

00:16:40,600 --> 00:16:45,640
use Bunyon it's just a nice little note

00:16:43,300 --> 00:16:47,110
library it means that we can make sure

00:16:45,640 --> 00:16:49,420
that when we're pushing and when we're

00:16:47,110 --> 00:16:51,370
logging we can do the same everywhere

00:16:49,420 --> 00:16:53,470
and we basically have to worry about

00:16:51,370 --> 00:16:56,440
exactly how it all happens we just push

00:16:53,470 --> 00:16:58,720
it to there and it just works through we

00:16:56,440 --> 00:17:00,760
use namespacing because it means that

00:16:58,720 --> 00:17:02,080
we've got a large app we've got

00:17:00,760 --> 00:17:03,370
different people working on different

00:17:02,080 --> 00:17:05,439
aspects and different elements of those

00:17:03,370 --> 00:17:07,689
app and we're not flooding the whole

00:17:05,439 --> 00:17:09,160
team with all the information it means

00:17:07,689 --> 00:17:10,929
that you can go and you can look at your

00:17:09,160 --> 00:17:12,970
one specific piece that you need to look

00:17:10,929 --> 00:17:15,850
at and it means that you can you not

00:17:12,970 --> 00:17:18,600
having to worry about all all breeze

00:17:15,850 --> 00:17:22,510
push something in and then that's like

00:17:18,600 --> 00:17:24,730
polluting all of my data and we use a

00:17:22,510 --> 00:17:26,679
single trace ID or some correlation ID

00:17:24,730 --> 00:17:28,569
and we do that based across the server

00:17:26,679 --> 00:17:31,059
side and the client side and it means

00:17:28,569 --> 00:17:33,730
that we can know we know that this user

00:17:31,059 --> 00:17:35,080
so eat the trace ID when you come onto

00:17:33,730 --> 00:17:38,230
the site the first time you hit the

00:17:35,080 --> 00:17:39,070
origin you'll get a trace ID back new

00:17:38,230 --> 00:17:40,930
right it does a similar

00:17:39,070 --> 00:17:43,060
thing as well and it means that you can

00:17:40,930 --> 00:17:44,560
then know this error that's come from

00:17:43,060 --> 00:17:46,450
the client-side you can then track that

00:17:44,560 --> 00:17:49,060
back to the server side so you can see

00:17:46,450 --> 00:17:51,610
easily like the reason for it and what

00:17:49,060 --> 00:17:54,070
was causing that error things we didn't

00:17:51,610 --> 00:17:55,480
do so well so as with everything some

00:17:54,070 --> 00:17:58,870
things we're great at some things we

00:17:55,480 --> 00:18:00,610
learned lessons on we started with the

00:17:58,870 --> 00:18:02,740
rom tool I think that him that's what he

00:18:00,610 --> 00:18:04,420
says as well we started with new relic

00:18:02,740 --> 00:18:06,130
and just check that end because it's the

00:18:04,420 --> 00:18:06,640
easy thing to do you enable it it just

00:18:06,130 --> 00:18:08,560
works

00:18:06,640 --> 00:18:11,200
but it was too noisy there's no

00:18:08,560 --> 00:18:13,180
differentiation in the levels for it we

00:18:11,200 --> 00:18:14,470
got a lot of data that's going into

00:18:13,180 --> 00:18:17,800
there at the moment and not much that's

00:18:14,470 --> 00:18:19,450
happening with it because there's you

00:18:17,800 --> 00:18:21,040
look at it and you can't see the right

00:18:19,450 --> 00:18:22,510
any problems with it when we push the

00:18:21,040 --> 00:18:23,740
heart to production at the moment

00:18:22,510 --> 00:18:25,270
sometimes something I'll throw an error

00:18:23,740 --> 00:18:27,040
and we don't necessarily see it in

00:18:25,270 --> 00:18:28,540
neuron egg so what easier to filter down

00:18:27,040 --> 00:18:30,760
and Cabana but we don't associate in

00:18:28,540 --> 00:18:32,860
Uralic because it's just a number it's

00:18:30,760 --> 00:18:34,360
like our error rate is X percent it's

00:18:32,860 --> 00:18:38,410
like well has it gone up has it gone

00:18:34,360 --> 00:18:39,910
down nobody really knows we mix the

00:18:38,410 --> 00:18:42,010
client and the server and this goes back

00:18:39,910 --> 00:18:43,150
to the New Relic side again I current

00:18:42,010 --> 00:18:44,860
aerated New Relic

00:18:43,150 --> 00:18:47,170
is just an error across client and

00:18:44,860 --> 00:18:48,580
server side it doesn't really mean very

00:18:47,170 --> 00:18:51,100
much and again means that things are

00:18:48,580 --> 00:18:53,380
missed because we've got like one number

00:18:51,100 --> 00:18:54,910
and because some of those times we'll

00:18:53,380 --> 00:18:55,930
have a load of JavaScript errors and

00:18:54,910 --> 00:18:58,570
those errors are come from third-party

00:18:55,930 --> 00:19:01,000
code maybe from our own code maybe from

00:18:58,570 --> 00:19:04,090
suicide we don't really know so again

00:19:01,000 --> 00:19:06,370
things get annoyed ignored our error

00:19:04,090 --> 00:19:08,440
rate is far too high at the moment I

00:19:06,370 --> 00:19:11,380
think it's spiked sometimes around 30 40

00:19:08,440 --> 00:19:13,150
percent which sounds like it's terrible

00:19:11,380 --> 00:19:14,500
everything's falling over but it's not

00:19:13,150 --> 00:19:15,880
at all there's absolutely nothing wrong

00:19:14,500 --> 00:19:17,770
really going on there might be a few

00:19:15,880 --> 00:19:19,420
errors happening but because everything

00:19:17,770 --> 00:19:20,700
has the wrong levels attached to and

00:19:19,420 --> 00:19:22,750
because everything's mixed together

00:19:20,700 --> 00:19:25,570
nobody really sees what's going what's

00:19:22,750 --> 00:19:28,270
happening and getting the errors right

00:19:25,570 --> 00:19:30,490
so again it's a very common theme with

00:19:28,270 --> 00:19:32,740
all of this because the errors are wrong

00:19:30,490 --> 00:19:34,270
because the levels are wrong means that

00:19:32,740 --> 00:19:36,070
the error rates too high everything's

00:19:34,270 --> 00:19:38,290
all lumped into one place so nobody

00:19:36,070 --> 00:19:40,090
really access is it but the good thing

00:19:38,290 --> 00:19:42,790
is so that we had some good success

00:19:40,090 --> 00:19:44,650
stories from this we've been doing a lot

00:19:42,790 --> 00:19:47,260
of a be testing recently with different

00:19:44,650 --> 00:19:49,540
things and we're using this login to

00:19:47,260 --> 00:19:51,410
validate the a/b test results so we have

00:19:49,540 --> 00:19:53,210
different areas that we're

00:19:51,410 --> 00:19:54,620
different sources of truth and the

00:19:53,210 --> 00:19:56,780
logging is definitely becoming one of

00:19:54,620 --> 00:20:01,160
those it means that we can have a look

00:19:56,780 --> 00:20:02,299
and we can see if we push out a test to

00:20:01,160 --> 00:20:03,860
two different groups or three different

00:20:02,299 --> 00:20:05,390
routes I have many different groups we

00:20:03,860 --> 00:20:07,190
can add that to the logging as well so

00:20:05,390 --> 00:20:08,870
that we can see that the logging and we

00:20:07,190 --> 00:20:10,370
can see then very quickly like if

00:20:08,870 --> 00:20:12,380
there's an issue around one particular

00:20:10,370 --> 00:20:14,450
group because we can filter down the

00:20:12,380 --> 00:20:16,280
errors based on that so we can see like

00:20:14,450 --> 00:20:18,230
this test is underperforming food group

00:20:16,280 --> 00:20:19,850
a but actually because there's a problem

00:20:18,230 --> 00:20:22,250
with that and so it's not a fair result

00:20:19,850 --> 00:20:25,100
I think it gives a lot more so like

00:20:22,250 --> 00:20:27,620
fairness to those a/b tests it stops us

00:20:25,100 --> 00:20:29,840
panicking it means that when we do have

00:20:27,620 --> 00:20:31,789
like potential issue we can track it

00:20:29,840 --> 00:20:33,890
down a lot quicker previously it was a

00:20:31,789 --> 00:20:35,750
case of the alerting went off on New

00:20:33,890 --> 00:20:37,909
Relic and said you know the error rate

00:20:35,750 --> 00:20:38,690
of spiking it's like well why is it

00:20:37,909 --> 00:20:40,100
spikings

00:20:38,690 --> 00:20:42,260
I don't really know it takes a long time

00:20:40,100 --> 00:20:43,580
to go through it now with cabaña we

00:20:42,260 --> 00:20:45,470
could go through a lot quicker and we

00:20:43,580 --> 00:20:47,390
can say the error rate is spiking

00:20:45,470 --> 00:20:48,770
because there's one particular page

00:20:47,390 --> 00:20:50,690
that's doing it and we can try it out

00:20:48,770 --> 00:20:52,520
and say that's just a front-end issue on

00:20:50,690 --> 00:20:53,929
it or it's one page after particularly

00:20:52,520 --> 00:20:55,760
worried about well like it's one

00:20:53,929 --> 00:20:57,320
particular user so say there's a bot

00:20:55,760 --> 00:20:59,150
that's gone haywire and it's causing a

00:20:57,320 --> 00:21:00,740
lot of errors so we can discount that

00:20:59,150 --> 00:21:04,010
and we're not we're not running about as

00:21:00,740 --> 00:21:07,159
much as we used to be and we can fix

00:21:04,010 --> 00:21:09,559
issues when we do see them so previously

00:21:07,159 --> 00:21:11,450
again like we had in New Relic something

00:21:09,559 --> 00:21:12,470
went wrong New Relic didn't have as much

00:21:11,450 --> 00:21:13,130
information it didn't have enough

00:21:12,470 --> 00:21:15,169
stacktrace

00:21:13,130 --> 00:21:16,549
didn't have enough debug in it and we

00:21:15,169 --> 00:21:18,830
didn't really know where to look for it

00:21:16,549 --> 00:21:20,659
now we can quite easily go in and we can

00:21:18,830 --> 00:21:23,150
say this error rate started spiking

00:21:20,659 --> 00:21:24,620
check out the trace ID push that back

00:21:23,150 --> 00:21:27,050
all the way through and find out a much

00:21:24,620 --> 00:21:28,179
quicker resolution than we had before

00:21:27,050 --> 00:21:31,690
[Music]

00:21:28,179 --> 00:21:35,809
yeah this is me right back to 200 speed

00:21:31,690 --> 00:21:37,640
so trace IDs a correlation is it occurs

00:21:35,809 --> 00:21:39,289
to me that many of you might not know or

00:21:37,640 --> 00:21:40,700
have not experienced with this so a

00:21:39,289 --> 00:21:41,990
trace idea correlation a sealing you

00:21:40,700 --> 00:21:43,549
want to generate on your client side you

00:21:41,990 --> 00:21:44,990
want to generate this just once you want

00:21:43,549 --> 00:21:46,820
to pass it through all your logging with

00:21:44,990 --> 00:21:48,320
every single logging so you can go and

00:21:46,820 --> 00:21:49,460
follows thing through your stack ideally

00:21:48,320 --> 00:21:51,500
if you eventually have something like a

00:21:49,460 --> 00:21:53,179
booking ID or a transaction ID or

00:21:51,500 --> 00:21:55,309
something if you can go and create a log

00:21:53,179 --> 00:21:56,750
entry with that and the other one the in

00:21:55,309 --> 00:21:57,860
creativity and then you can go and

00:21:56,750 --> 00:21:59,690
travel the other one through the stack

00:21:57,860 --> 00:22:01,460
and so on and so forth and so ideally

00:21:59,690 --> 00:22:02,690
you can go and eventually match up all

00:22:01,460 --> 00:22:03,420
these correlation IDs through your stack

00:22:02,690 --> 00:22:05,400
and have a whole page

00:22:03,420 --> 00:22:08,040
of what a user journey was through

00:22:05,400 --> 00:22:09,750
everything that is real platform the

00:22:08,040 --> 00:22:11,070
other thing is we want to open tracing

00:22:09,750 --> 00:22:12,810
which is really cool everyone going

00:22:11,070 --> 00:22:13,980
google this after you've finished open

00:22:12,810 --> 00:22:15,870
tracing is very interesting we're gonna

00:22:13,980 --> 00:22:17,040
need like node 9x to go and do it and if

00:22:15,870 --> 00:22:19,410
she's acing hooks which is very

00:22:17,040 --> 00:22:20,550
experimental but ultimately looks very

00:22:19,410 --> 00:22:23,280
cool it's something we're starting to

00:22:20,550 --> 00:22:24,590
look at arcadia so chat slots for

00:22:23,280 --> 00:22:27,390
everything I have I'll talk about this

00:22:24,590 --> 00:22:29,160
it reminds me of the devolution from

00:22:27,390 --> 00:22:30,570
when I was a visual studio programmer to

00:22:29,160 --> 00:22:33,120
going to working with node and just

00:22:30,570 --> 00:22:33,330
getting glorified TextPad something I've

00:22:33,120 --> 00:22:34,830
lost

00:22:33,330 --> 00:22:36,960
all these like intestines and things

00:22:34,830 --> 00:22:38,640
that used to support me but it's kind of

00:22:36,960 --> 00:22:40,440
interesting and how fast I've gone from

00:22:38,640 --> 00:22:41,820
like I need to use the GUI to I can use

00:22:40,440 --> 00:22:43,500
bash and I can use the terminal and

00:22:41,820 --> 00:22:46,410
actually very quick and doing that and

00:22:43,500 --> 00:22:47,940
so chasse Ops is I guess like quite

00:22:46,410 --> 00:22:49,080
quick in that respect it's also quite

00:22:47,940 --> 00:22:50,430
interesting because when I can add

00:22:49,080 --> 00:22:52,080
people to my chattels platform I can go

00:22:50,430 --> 00:22:53,340
extend my commands to them and the

00:22:52,080 --> 00:22:55,440
things that I have on my platform which

00:22:53,340 --> 00:22:57,330
as platform so I can give new tooling to

00:22:55,440 --> 00:22:58,590
partners quite easily it's

00:22:57,330 --> 00:22:59,820
self-perpetuating which is really

00:22:58,590 --> 00:23:01,380
interesting so when I have somebody new

00:22:59,820 --> 00:23:02,610
join my team quite often they're

00:23:01,380 --> 00:23:03,990
watching other people use chat stops

00:23:02,610 --> 00:23:05,790
commands and they're starting to execute

00:23:03,990 --> 00:23:07,320
these things within the team and so it's

00:23:05,790 --> 00:23:08,820
almost self-perpetuating so when one

00:23:07,320 --> 00:23:09,930
person does it the rest of the people

00:23:08,820 --> 00:23:12,720
either don't know how to do or do you

00:23:09,930 --> 00:23:15,360
know how to do it start learning and

00:23:12,720 --> 00:23:17,040
it's auditable what's really cool so

00:23:15,360 --> 00:23:18,750
whenever I see people doing Kate's

00:23:17,040 --> 00:23:21,540
commands and stuff locally it's very

00:23:18,750 --> 00:23:22,530
very scary I guess when you're doing it

00:23:21,540 --> 00:23:24,240
through to Kate and we're through your

00:23:22,530 --> 00:23:25,680
chat option you start like it's handing

00:23:24,240 --> 00:23:27,240
those commands it's quite interesting

00:23:25,680 --> 00:23:32,070
because it builds like almost an audit

00:23:27,240 --> 00:23:34,740
log for you so I built this of the day

00:23:32,070 --> 00:23:36,450
with one of my new starters I wanted to

00:23:34,740 --> 00:23:37,050
spend time with them I'll go through

00:23:36,450 --> 00:23:39,480
that in a bit

00:23:37,050 --> 00:23:41,970
this is something that is just really

00:23:39,480 --> 00:23:44,930
really quick so we had a chat UPS client

00:23:41,970 --> 00:23:47,160
which passed the trace ID to the bot

00:23:44,930 --> 00:23:48,840
which built a query which sends of

00:23:47,160 --> 00:23:51,300
elastic search and elastic search turns

00:23:48,840 --> 00:23:55,560
it back and then we use handlebars in

00:23:51,300 --> 00:23:58,230
HTML and CSS template to construct HTML

00:23:55,560 --> 00:23:59,550
and then I stole that of somebody

00:23:58,230 --> 00:24:03,570
because obviously I'm pretty sure that

00:23:59,550 --> 00:24:04,770
CSS and then we use puppeteer to go and

00:24:03,570 --> 00:24:06,510
render this thing and take a screenshot

00:24:04,770 --> 00:24:09,300
and save that to my own web services

00:24:06,510 --> 00:24:12,810
generate a secure s3 link to it and what

00:24:09,300 --> 00:24:17,900
it looked like was this where the works

00:24:12,810 --> 00:24:22,080
okay so we're gonna do another bot

00:24:17,900 --> 00:24:23,520
find trace ID but overlap so there's the

00:24:22,080 --> 00:24:25,620
correlation to ID for an actual user on

00:24:23,520 --> 00:24:27,360
the site we run the correlation ID hold

00:24:25,620 --> 00:24:28,860
on together for you so off it goes goes

00:24:27,360 --> 00:24:30,780
to elastic pulls back all the events

00:24:28,860 --> 00:24:32,370
formats them using this year so this SSH

00:24:30,780 --> 00:24:34,410
or template and then generates this

00:24:32,370 --> 00:24:37,020
giant screen shot which safe to s3 which

00:24:34,410 --> 00:24:38,520
is a really nice timeline of everything

00:24:37,020 --> 00:24:39,810
that user did in our site and it took us

00:24:38,520 --> 00:24:41,700
less than a day to go and write and it's

00:24:39,810 --> 00:24:43,140
quite some ephemeral tooling I don't

00:24:41,700 --> 00:24:44,310
consider us very clever or pretty but

00:24:43,140 --> 00:24:46,140
it's quite useful to some people that

00:24:44,310 --> 00:24:47,670
want to access this information we can

00:24:46,140 --> 00:24:49,140
do more with it less with it it's one of

00:24:47,670 --> 00:24:52,620
these really quick things it's pretty

00:24:49,140 --> 00:24:55,410
throwaway I like to lots of people like

00:24:52,620 --> 00:24:56,640
that we had to write an alarm call

00:24:55,410 --> 00:24:58,530
system which I can't show you today

00:24:56,640 --> 00:24:59,520
because team has killed over but that's

00:24:58,530 --> 00:25:02,790
quite interesting too because that's a

00:24:59,520 --> 00:25:03,930
good day so engineering for today's

00:25:02,790 --> 00:25:06,030
challenges this is really interesting

00:25:03,930 --> 00:25:07,230
one when I talk about my with my team

00:25:06,030 --> 00:25:09,090
and other engineers and so people get

00:25:07,230 --> 00:25:11,190
really pissed off and angry with me as

00:25:09,090 --> 00:25:12,630
engineers we have a predisposition to

00:25:11,190 --> 00:25:14,130
engineer for the future or things that

00:25:12,630 --> 00:25:16,800
might happen or things that we think are

00:25:14,130 --> 00:25:18,180
likely to occur it's very difficult if

00:25:16,800 --> 00:25:19,620
you think about it you can tell yourself

00:25:18,180 --> 00:25:22,560
to thinking about the current problem

00:25:19,620 --> 00:25:24,660
that you have I had a discussion with

00:25:22,560 --> 00:25:26,100
some engineers in Arcadia the other day

00:25:24,660 --> 00:25:28,110
about how to do feature flags on the

00:25:26,100 --> 00:25:29,460
site and they were talking about three

00:25:28,110 --> 00:25:31,350
weeks and I was talking about four hours

00:25:29,460 --> 00:25:32,760
and the reason that I was talking about

00:25:31,350 --> 00:25:34,200
four hours was because I was thinking

00:25:32,760 --> 00:25:35,760
about doing one feature flag through the

00:25:34,200 --> 00:25:37,080
bot that I could enable in real time and

00:25:35,760 --> 00:25:38,070
they were talking about every feature

00:25:37,080 --> 00:25:40,710
flag and all the things that might go

00:25:38,070 --> 00:25:42,540
wrong with it and so consequently you

00:25:40,710 --> 00:25:43,890
see the enemy of delivery the enemy

00:25:42,540 --> 00:25:45,540
delivery is over engineering things that

00:25:43,890 --> 00:25:47,280
might happen and so the thing that I

00:25:45,540 --> 00:25:49,200
really hand up about was the fact that

00:25:47,280 --> 00:25:50,430
if I was to enable three feature flags

00:25:49,200 --> 00:25:51,330
that one of them might clash with the

00:25:50,430 --> 00:25:52,860
other two feature flags

00:25:51,330 --> 00:25:53,880
I said well hold on I don't have that

00:25:52,860 --> 00:25:55,380
problem I got one feature flag

00:25:53,880 --> 00:25:56,880
miscibility you might have that problem

00:25:55,380 --> 00:25:58,350
I said well the truth is actually if I

00:25:56,880 --> 00:26:00,660
go to ten feature flags I still might

00:25:58,350 --> 00:26:01,980
have a not have that problem technically

00:26:00,660 --> 00:26:03,630
under engineering for something that

00:26:01,980 --> 00:26:05,400
might happen but I haven't got that

00:26:03,630 --> 00:26:06,510
problem yet and so I can basically go

00:26:05,400 --> 00:26:08,610
and engineer for the thing that I have

00:26:06,510 --> 00:26:09,570
today the problem I have today and so

00:26:08,610 --> 00:26:11,610
we're actually if I need to adapt that

00:26:09,570 --> 00:26:13,650
solution that becomes part of tomorrow's

00:26:11,610 --> 00:26:15,450
dev work and it's very difficult to

00:26:13,650 --> 00:26:16,790
think in that mentality it's very

00:26:15,450 --> 00:26:20,460
difficult to find a trade-off between

00:26:16,790 --> 00:26:21,660
quality and speed I think if you think

00:26:20,460 --> 00:26:22,770
about this sometimes reading your day

00:26:21,660 --> 00:26:24,420
and you try this out and you start

00:26:22,770 --> 00:26:25,500
thinking over engineering I think about

00:26:24,420 --> 00:26:27,810
the thing I'm trying to do for tomorrow

00:26:25,500 --> 00:26:29,310
can I drop that and just do the thing

00:26:27,810 --> 00:26:30,970
that I'm trying to do today sometimes

00:26:29,310 --> 00:26:32,470
you get things out a lot faster but it's

00:26:30,970 --> 00:26:36,850
it's kind of a different different

00:26:32,470 --> 00:26:39,460
mindset so in Aubree's world what is

00:26:36,850 --> 00:26:42,730
DevOps so DevOps is a convergence role

00:26:39,460 --> 00:26:44,130
it's a convergence role because the

00:26:42,730 --> 00:26:46,630
space that we work in has changed

00:26:44,130 --> 00:26:49,240
traditional operations has changed

00:26:46,630 --> 00:26:51,670
I used to the data center building GM's

00:26:49,240 --> 00:26:53,770
tour switching core switching you're

00:26:51,670 --> 00:26:55,930
switching SR iov these things pretty

00:26:53,770 --> 00:26:57,720
much don't exist in the cloud anymore so

00:26:55,930 --> 00:27:00,460
yes I can go in still with a data center

00:26:57,720 --> 00:27:02,410
but probably any Google and Yahoo and

00:27:00,460 --> 00:27:03,760
those people they want me to do it which

00:27:02,410 --> 00:27:05,410
is kind of interesting and so what we've

00:27:03,760 --> 00:27:07,390
seen is the commoditization of this

00:27:05,410 --> 00:27:08,440
Hardware on cloud and because we've seen

00:27:07,390 --> 00:27:10,480
that commoditization we've seen

00:27:08,440 --> 00:27:11,770
accessibility go up and so if you want

00:27:10,480 --> 00:27:13,780
to go and work with these things it's as

00:27:11,770 --> 00:27:15,070
code which is really interesting because

00:27:13,780 --> 00:27:16,930
it starts to shift away from the

00:27:15,070 --> 00:27:19,270
traditional I am an ops engineer with

00:27:16,930 --> 00:27:20,410
hardware to actually I need to go and

00:27:19,270 --> 00:27:22,240
write code to go and do this which is

00:27:20,410 --> 00:27:28,120
more in the dev space which is why we

00:27:22,240 --> 00:27:29,470
see this convergence role so yeah tall

00:27:28,120 --> 00:27:32,890
switching core switching infrastructure

00:27:29,470 --> 00:27:34,330
as code it's really easy to use which is

00:27:32,890 --> 00:27:36,790
why you guys should go and try and do

00:27:34,330 --> 00:27:38,500
that and there's no barrier of entry for

00:27:36,790 --> 00:27:40,150
you going in so if you're a cisco person

00:27:38,500 --> 00:27:41,800
once upon a time back in the day your

00:27:40,150 --> 00:27:43,330
goings going by your cisco stack off

00:27:41,800 --> 00:27:44,800
ebay probably in your ass of firewalls

00:27:43,330 --> 00:27:46,480
and the special little switch go plug to

00:27:44,800 --> 00:27:47,620
go and work with it you don't need to do

00:27:46,480 --> 00:27:49,620
that anymore in the cloud you just go

00:27:47,620 --> 00:27:51,820
and but you credit card and off you go

00:27:49,620 --> 00:27:56,170
if you're not writing production code

00:27:51,820 --> 00:27:57,790
you're not an SRE so if you say you're

00:27:56,170 --> 00:27:59,410
an SRE if you say you're a site

00:27:57,790 --> 00:28:00,940
reliability engineer I expect you to

00:27:59,410 --> 00:28:02,860
write production code I expected to work

00:28:00,940 --> 00:28:04,120
on the application I don't think you're

00:28:02,860 --> 00:28:06,040
somebody he just happens to know like

00:28:04,120 --> 00:28:07,240
half of a programming language I expect

00:28:06,040 --> 00:28:08,890
you to actually work on the application

00:28:07,240 --> 00:28:12,100
next to the engineers that are

00:28:08,890 --> 00:28:15,460
programmers on it and do that stuff and

00:28:12,100 --> 00:28:16,330
my stuff I put the little thing from box

00:28:15,460 --> 00:28:20,320
tiles in there because it's pretty

00:28:16,330 --> 00:28:23,800
hardcore somebody pointed out last time

00:28:20,320 --> 00:28:27,340
yeah so writing like ops quality Python

00:28:23,800 --> 00:28:28,930
code doesn't really make you an SRE sre

00:28:27,340 --> 00:28:30,280
spend half of their time writing

00:28:28,930 --> 00:28:33,040
production code they spent half of their

00:28:30,280 --> 00:28:34,330
time writing system stuff so you're

00:28:33,040 --> 00:28:35,830
building infrastructure you're also

00:28:34,330 --> 00:28:37,210
perpetuating this idea within the

00:28:35,830 --> 00:28:39,250
development team so you're constantly

00:28:37,210 --> 00:28:40,720
looking at angles they're going push

00:28:39,250 --> 00:28:42,520
this skill sets forth this him you want

00:28:40,720 --> 00:28:44,330
to make yourself extinct you want to

00:28:42,520 --> 00:28:48,590
make everybody else just like you

00:28:44,330 --> 00:28:51,080
like Borg so operations at this every

00:28:48,590 --> 00:28:55,370
talk out of it like yeah yeah

00:28:51,080 --> 00:28:56,600
so operations code unicorn cloud I don't

00:28:55,370 --> 00:28:59,480
know why I put the unicorn in I have to

00:28:56,600 --> 00:29:01,760
put in every talk so it's really

00:28:59,480 --> 00:29:04,279
difficult to take this path for like

00:29:01,760 --> 00:29:05,840
whatever reason it's so hard to take an

00:29:04,279 --> 00:29:08,390
operational engineer a traditional ops

00:29:05,840 --> 00:29:10,789
person teach them code and get them to

00:29:08,390 --> 00:29:12,830
build like cloud stuff it's really easy

00:29:10,789 --> 00:29:14,510
to take a developer and so this is the

00:29:12,830 --> 00:29:17,710
domain model and gather ones go and do

00:29:14,510 --> 00:29:20,659
the other way one of things were facing

00:29:17,710 --> 00:29:22,279
interesting painful because I I actually

00:29:20,659 --> 00:29:24,649
happen to be a developer so it's very

00:29:22,279 --> 00:29:26,240
easy for me to do this thing it's really

00:29:24,649 --> 00:29:30,679
hard for me to find people in the market

00:29:26,240 --> 00:29:33,200
that are able to do this so another

00:29:30,679 --> 00:29:35,600
principle do the simplest thing do the

00:29:33,200 --> 00:29:36,710
PR get the buy-in I grow the simple

00:29:35,600 --> 00:29:39,200
thing and replace it with a much better

00:29:36,710 --> 00:29:41,139
thing and so this comes down to you so a

00:29:39,200 --> 00:29:43,429
really good example was a US

00:29:41,139 --> 00:29:45,019
elasticsearch there are lot of

00:29:43,429 --> 00:29:46,700
limitations with this thing really

00:29:45,019 --> 00:29:48,559
really painful and once you get beyond

00:29:46,700 --> 00:29:49,940
cabana and you want to start targeting

00:29:48,559 --> 00:29:53,389
elastic directly which means you're

00:29:49,940 --> 00:29:54,919
crafting like Jason posts to it and then

00:29:53,389 --> 00:29:56,840
firing in and hoping for a response back

00:29:54,919 --> 00:29:59,240
you'll pretty much be on like the basics

00:29:56,840 --> 00:30:00,320
and you can't use reg X and it started

00:29:59,240 --> 00:30:01,610
to keel over and we had a bunch of

00:30:00,320 --> 00:30:03,649
problems of this and I start to do some

00:30:01,610 --> 00:30:06,019
crazy aggregated aggregated aggregated

00:30:03,649 --> 00:30:07,880
query and then that caused it to fall

00:30:06,019 --> 00:30:09,500
over and we start to realize that we've

00:30:07,880 --> 00:30:10,960
outgrown this thing in a couple of weeks

00:30:09,500 --> 00:30:14,179
and now we're ready for the bigger thing

00:30:10,960 --> 00:30:16,130
and so there's actually a neat little

00:30:14,179 --> 00:30:17,360
point here about if you have funding

00:30:16,130 --> 00:30:19,580
issues and you already have the cloud

00:30:17,360 --> 00:30:20,690
platform it's quite easy to go and push

00:30:19,580 --> 00:30:22,539
with this stuff visit the cloud

00:30:20,690 --> 00:30:26,240
obfuscates what you're spending money on

00:30:22,539 --> 00:30:28,399
and quite coolly elastic docto is a

00:30:26,240 --> 00:30:29,419
partner with us which means you can run

00:30:28,399 --> 00:30:30,679
it through the marketplace which means

00:30:29,419 --> 00:30:32,419
you can run it into the billing which

00:30:30,679 --> 00:30:33,529
means you can hide it when you want to

00:30:32,419 --> 00:30:36,820
go and move it to somebody else and you

00:30:33,529 --> 00:30:41,120
don't do your funding paper which I like

00:30:36,820 --> 00:30:42,980
life-ending papers so yeah do all that

00:30:41,120 --> 00:30:44,360
stuff do the PR spend lots of time you

00:30:42,980 --> 00:30:45,440
developers so I spend lots of time in

00:30:44,360 --> 00:30:47,299
Arcadia running around with the

00:30:45,440 --> 00:30:48,649
developers spending time with them

00:30:47,299 --> 00:30:49,700
showing them all the things I've built

00:30:48,649 --> 00:30:51,769
showing them how to use those things

00:30:49,700 --> 00:30:55,190
doing the PR making sure they understand

00:30:51,769 --> 00:30:57,539
it quite ironically when I came into

00:30:55,190 --> 00:30:58,979
Arcadia the guys had actually

00:30:57,539 --> 00:31:01,350
elastic search and was sitting there

00:30:58,979 --> 00:31:04,109
dead and I can really on some exciting

00:31:01,350 --> 00:31:05,759
makes me very excited and I was like why

00:31:04,109 --> 00:31:07,350
why is nobody using this and I was like

00:31:05,759 --> 00:31:08,970
well they're kind of known as like okay

00:31:07,350 --> 00:31:10,979
well did you do the PR and it was like

00:31:08,970 --> 00:31:12,450
no okay well let's go and build a better

00:31:10,979 --> 00:31:14,129
thing and we'll go and do the PR so you

00:31:12,450 --> 00:31:15,539
ran around and I literally sat with

00:31:14,129 --> 00:31:17,220
quite a few people stakeholders in the

00:31:15,539 --> 00:31:18,749
team and showed them how to use this

00:31:17,220 --> 00:31:19,859
thing and why it was valuable to them

00:31:18,749 --> 00:31:22,409
and then by the end of the week it was

00:31:19,859 --> 00:31:26,149
intrinsic and we can live without it PR

00:31:22,409 --> 00:31:28,399
is very important don't forget the PR

00:31:26,149 --> 00:31:31,499
cycle see I know Jenkins

00:31:28,399 --> 00:31:33,299
so everybody hates Jenkins it's a part

00:31:31,499 --> 00:31:34,619
of I want to get rid of that circle

00:31:33,299 --> 00:31:37,590
CI so much better

00:31:34,619 --> 00:31:39,359
truth be told it took 2.5 weeks for me

00:31:37,590 --> 00:31:42,809
to rebuild our entire pipeline in circle

00:31:39,359 --> 00:31:44,159
CI it's really interesting because in

00:31:42,809 --> 00:31:46,200
the same week that I did that at about

00:31:44,159 --> 00:31:48,509
400% engagement increase from the

00:31:46,200 --> 00:31:50,369
developers using circle rather than

00:31:48,509 --> 00:31:52,379
using Jenkins Jenkins requires a

00:31:50,369 --> 00:31:54,239
specific skill set requires maintenance

00:31:52,379 --> 00:31:55,289
as well as things if it's still there's

00:31:54,239 --> 00:31:57,330
a whole bunch of crap that make it

00:31:55,289 --> 00:31:58,919
inaccessible you know proxy when you're

00:31:57,330 --> 00:32:01,229
off site absolutely pain in the ass

00:31:58,919 --> 00:32:02,639
circle see I was great I love this thing

00:32:01,229 --> 00:32:04,349
it means that you guys just enjoy get

00:32:02,639 --> 00:32:06,119
login to go and hook into this thing you

00:32:04,349 --> 00:32:08,249
can go to build straightaway it's one

00:32:06,119 --> 00:32:09,179
yea more file alright I mean that's

00:32:08,249 --> 00:32:10,470
amazing

00:32:09,179 --> 00:32:12,450
one yeah more father you go and build

00:32:10,470 --> 00:32:15,599
your own pipeline and you don't have to

00:32:12,450 --> 00:32:18,149
talk to me I love that and so literally

00:32:15,599 --> 00:32:20,190
in in one week we had four people going

00:32:18,149 --> 00:32:22,080
modify that pipeline add new pipelines

00:32:20,190 --> 00:32:23,340
that have new projects and we had never

00:32:22,080 --> 00:32:24,479
seen this level of engagement when we

00:32:23,340 --> 00:32:26,669
worked with Jenkins which is phenomenal

00:32:24,479 --> 00:32:27,629
so always killed Jenkins replace it with

00:32:26,669 --> 00:32:28,889
something better

00:32:27,629 --> 00:32:31,440
the one thing I say about that is that

00:32:28,889 --> 00:32:33,989
Jenkins conflates two separate things

00:32:31,440 --> 00:32:36,029
which is arbitrary job running and your

00:32:33,989 --> 00:32:37,950
build pipeline building whatever assets

00:32:36,029 --> 00:32:39,239
or artifacts you have if you can

00:32:37,950 --> 00:32:41,220
separate those two things it's quite

00:32:39,239 --> 00:32:42,869
easy to get rid of Jenkins if you can't

00:32:41,220 --> 00:32:45,119
you have lots of jobs on it and you'll

00:32:42,869 --> 00:32:49,379
find it quite difficult put it in the

00:32:45,119 --> 00:32:52,289
bot from zero to rocket we're just a de

00:32:49,379 --> 00:32:53,820
brest keys and github so when I talk

00:32:52,289 --> 00:32:55,379
about the developer experience obviously

00:32:53,820 --> 00:32:58,729
as a developer it's quite cool to me to

00:32:55,379 --> 00:33:00,749
get in and get going and show my value I

00:32:58,729 --> 00:33:02,099
find that most devs don't like working

00:33:00,749 --> 00:33:03,330
with vagrant most deaths don't work I

00:33:02,099 --> 00:33:04,590
like docker they don't like the concert

00:33:03,330 --> 00:33:05,460
docker rebuilds or the containers and

00:33:04,590 --> 00:33:07,470
stuff like that so I'm constantly

00:33:05,460 --> 00:33:08,940
looking for the angle and the angle for

00:33:07,470 --> 00:33:10,360
me is how fast can I get you going how

00:33:08,940 --> 00:33:12,520
fast can you work on your machine

00:33:10,360 --> 00:33:14,800
I don't wanna cause you friction so when

00:33:12,520 --> 00:33:16,120
I talk to my traditional ops people and

00:33:14,800 --> 00:33:17,860
I have to train them out of this quite

00:33:16,120 --> 00:33:18,850
frequently they're like oh this is

00:33:17,860 --> 00:33:20,020
really good so you should be using

00:33:18,850 --> 00:33:21,400
docker and I thought ously if you're

00:33:20,020 --> 00:33:22,750
working with react to the constituent

00:33:21,400 --> 00:33:24,160
docker container it's costing the file

00:33:22,750 --> 00:33:26,890
system is a total pain he asked to work

00:33:24,160 --> 00:33:27,910
with it's not what you want so if you

00:33:26,890 --> 00:33:30,000
work with me it's really great because

00:33:27,910 --> 00:33:32,110
you've got to develop it understands it

00:33:30,000 --> 00:33:35,740
if you weren't my other guys they have

00:33:32,110 --> 00:33:40,230
to be trained so I'm a predator of human

00:33:35,740 --> 00:33:43,180
behavior predator right I'm an

00:33:40,230 --> 00:33:44,680
I'm constantly looking for an angle with

00:33:43,180 --> 00:33:46,660
you guys to go and introduce new tooling

00:33:44,680 --> 00:33:48,250
so I'm looking for the best fastest

00:33:46,660 --> 00:33:49,780
tooling the truth be told I actually

00:33:48,250 --> 00:33:51,730
don't give a about what I implement

00:33:49,780 --> 00:33:52,750
I really care about my ideas and the

00:33:51,730 --> 00:33:54,100
things that's gonna make us this thing

00:33:52,750 --> 00:33:55,930
better so if you have a specific piece

00:33:54,100 --> 00:33:57,250
of tooling I'm happy to work with that

00:33:55,930 --> 00:33:58,270
tooling and have to go and work or

00:33:57,250 --> 00:34:00,220
something like I've never worked before

00:33:58,270 --> 00:34:01,330
if that's what you want to use if that's

00:34:00,220 --> 00:34:04,780
the new greatest thing it's going to

00:34:01,330 --> 00:34:06,250
help me get my angle in immediate value

00:34:04,780 --> 00:34:09,400
the quickening go going the quicker you

00:34:06,250 --> 00:34:12,070
can show value it's part of the agile

00:34:09,400 --> 00:34:13,540
manifesto I use it quite a lot again

00:34:12,070 --> 00:34:15,220
coming to a path back to that point of

00:34:13,540 --> 00:34:17,080
uh simplicity there's a really simple

00:34:15,220 --> 00:34:18,730
thing think about engineering for today

00:34:17,080 --> 00:34:20,170
the moment you can go and deliver that

00:34:18,730 --> 00:34:22,060
really simple thing and you can go show

00:34:20,170 --> 00:34:24,010
to everybody do the PR and say hey look

00:34:22,060 --> 00:34:25,360
here's the instant value if you need to

00:34:24,010 --> 00:34:27,130
make that bigger or fund it we'll do

00:34:25,360 --> 00:34:28,540
more of it it's very easy for everyone

00:34:27,130 --> 00:34:30,070
to refer to it and say like oh you know

00:34:28,540 --> 00:34:34,860
its intrinsic to how we work right

00:34:30,070 --> 00:34:38,200
because you did the PR lead by example

00:34:34,860 --> 00:34:40,570
so I do lots of mod program programming

00:34:38,200 --> 00:34:43,360
with people I will put myself under the

00:34:40,570 --> 00:34:45,610
spotlight I have like zero fear of

00:34:43,360 --> 00:34:47,560
anyone criticizing my crappy es4 code

00:34:45,610 --> 00:34:49,330
because it's sure I don't get to do this

00:34:47,560 --> 00:34:50,380
all the time I have to work with all the

00:34:49,330 --> 00:34:52,330
stuff in the dev ops base and all the

00:34:50,380 --> 00:34:53,830
stuff in the dev space and so my skills

00:34:52,330 --> 00:34:55,600
drift and so I'm happy for anyone to

00:34:53,830 --> 00:34:57,010
criticize me so I will always lead by

00:34:55,600 --> 00:34:59,950
example and stand up there to be

00:34:57,010 --> 00:35:02,110
massacred by everybody and there's

00:34:59,950 --> 00:35:05,710
always value in failure failure let's

00:35:02,110 --> 00:35:08,230
show you right so I've bot which is our

00:35:05,710 --> 00:35:09,940
internal bot in I think it took three

00:35:08,230 --> 00:35:12,670
days to build a total one of those days

00:35:09,940 --> 00:35:14,020
it took me fixing a bug in Bach hit one

00:35:12,670 --> 00:35:15,940
of those days were spent to figure out

00:35:14,020 --> 00:35:19,780
weirdness in MF Steen's vs. slack

00:35:15,940 --> 00:35:21,250
phone use Emma's teens and I wanted a

00:35:19,780 --> 00:35:23,530
show I went to showcase bees to show how

00:35:21,250 --> 00:35:26,950
easy CD CI and one

00:35:23,530 --> 00:35:28,630
I'm a success coverage was literally

00:35:26,950 --> 00:35:31,000
three days and probably even one if it

00:35:28,630 --> 00:35:32,230
wasn't for the bugs it was able it was

00:35:31,000 --> 00:35:34,270
something that was a I was able to

00:35:32,230 --> 00:35:35,470
demonstrate continuous delivery of

00:35:34,270 --> 00:35:38,440
something I was able to deliver it

00:35:35,470 --> 00:35:40,870
demonstrate canary it was a really good

00:35:38,440 --> 00:35:42,640
showcase for me it was very isolated and

00:35:40,870 --> 00:35:44,230
we were great as it started to show its

00:35:42,640 --> 00:35:47,200
value immediately to the point where I

00:35:44,230 --> 00:35:48,460
had the head of engineering actually

00:35:47,200 --> 00:35:49,990
working on the bot within a couple of

00:35:48,460 --> 00:35:51,220
weeks of deploying it and so hey you've

00:35:49,990 --> 00:35:52,000
actually got a bot you can work with

00:35:51,220 --> 00:35:56,950
which was pretty cool

00:35:52,000 --> 00:35:58,630
goodbye him wait hold on there was

00:35:56,950 --> 00:36:00,430
something else I want to say yes in

00:35:58,630 --> 00:36:01,900
passing your values where there's a

00:36:00,430 --> 00:36:04,390
decide about that all right so feedback

00:36:01,900 --> 00:36:07,630
please yes I will always let people Ruby

00:36:04,390 --> 00:36:08,740
my code I didn't get to work on

00:36:07,630 --> 00:36:09,250
different things I think I told you all

00:36:08,740 --> 00:36:12,580
this

00:36:09,250 --> 00:36:14,500
so my code is tends to be like all right

00:36:12,580 --> 00:36:15,670
I don't think I'm the best code in the

00:36:14,500 --> 00:36:16,600
world I don't want to be the first coder

00:36:15,670 --> 00:36:17,590
in the world I did a bunch of other

00:36:16,600 --> 00:36:19,360
stuff so I'm happy for you guys

00:36:17,590 --> 00:36:20,350
criticize it's also really great when

00:36:19,360 --> 00:36:21,670
somebody sits with me and they go

00:36:20,350 --> 00:36:23,470
actually you could do that a much better

00:36:21,670 --> 00:36:27,130
way and I'm like I missed a whole

00:36:23,470 --> 00:36:31,330
year like JavaScript upgrades it does

00:36:27,130 --> 00:36:33,520
happen a lot fearless get my code

00:36:31,330 --> 00:36:35,470
reviewed all it takes is one to

00:36:33,520 --> 00:36:37,300
create a toxic environment this used to

00:36:35,470 --> 00:36:39,280
be me I used to be the if you

00:36:37,300 --> 00:36:40,660
ever work me before I was a

00:36:39,280 --> 00:36:43,450


00:36:40,660 --> 00:36:46,420
I'm not anymore estrogen changes you

00:36:43,450 --> 00:36:47,740
significantly and it's really hard to be

00:36:46,420 --> 00:36:49,990
horrible to people without crying at

00:36:47,740 --> 00:36:50,500
them afterwards and so I have to be much

00:36:49,990 --> 00:36:52,390
nicer

00:36:50,500 --> 00:36:54,910
I've historically been responsible for

00:36:52,390 --> 00:36:58,000
overworking my team creating very shitty

00:36:54,910 --> 00:37:01,210
cultures and atmosphere much nicer to

00:36:58,000 --> 00:37:03,250
work with I really care about how you

00:37:01,210 --> 00:37:05,590
feel my team I get a lot of good

00:37:03,250 --> 00:37:07,270
feedback these days mainly because I

00:37:05,590 --> 00:37:08,410
think that actually if you're really

00:37:07,270 --> 00:37:09,430
nice to people you work with and you

00:37:08,410 --> 00:37:11,350
create a really great working atmosphere

00:37:09,430 --> 00:37:13,600
you'll get so much more yield out of

00:37:11,350 --> 00:37:15,040
people which is what I want and I want

00:37:13,600 --> 00:37:16,840
you to enjoy what you do I want to

00:37:15,040 --> 00:37:18,280
remember that like we're trying to

00:37:16,840 --> 00:37:19,480
leverage the the thing that made you

00:37:18,280 --> 00:37:21,460
become an engineer in the first place

00:37:19,480 --> 00:37:22,810
the thing that you love you know you're

00:37:21,460 --> 00:37:24,310
not going to work on something like it's

00:37:22,810 --> 00:37:26,110
a start-up if you hate it and if you

00:37:24,310 --> 00:37:27,970
love the platform but I'm likely to get

00:37:26,110 --> 00:37:29,860
evenings and weekends out of you if you

00:37:27,970 --> 00:37:31,720
really love what you do so I'm trying to

00:37:29,860 --> 00:37:34,930
create an environment where you love to

00:37:31,720 --> 00:37:36,770
be an engineer when you join my team

00:37:34,930 --> 00:37:39,410
you'll spend time with me

00:37:36,770 --> 00:37:40,640
she said it would be fun you will get to

00:37:39,410 --> 00:37:42,410
spend time with me it's really important

00:37:40,640 --> 00:37:44,180
so it's important that I didn't miss

00:37:42,410 --> 00:37:45,470
sell you so when I tell you you're going

00:37:44,180 --> 00:37:47,090
to do something my team and this is the

00:37:45,470 --> 00:37:50,360
vision whatever I try to make sure

00:37:47,090 --> 00:37:51,950
that's true I want you to experience

00:37:50,360 --> 00:37:53,960
what it's like working with me because

00:37:51,950 --> 00:37:56,240
all the other people have and they know

00:37:53,960 --> 00:37:57,410
how to work with me and they work like

00:37:56,240 --> 00:37:59,210
me which means they'll sell the same

00:37:57,410 --> 00:38:00,530
vision that I will and they will work

00:37:59,210 --> 00:38:02,120
with other people like I will and

00:38:00,530 --> 00:38:03,350
they'll also sell the same solution

00:38:02,120 --> 00:38:05,000
which is really important so we have a

00:38:03,350 --> 00:38:07,520
unified front in terms of what DevOps

00:38:05,000 --> 00:38:14,060
means and how we present that and impart

00:38:07,520 --> 00:38:15,410
it to you as the business I put

00:38:14,060 --> 00:38:18,230
something about talking about handbags

00:38:15,410 --> 00:38:21,020
makeup Dark Souls and how I used to be

00:38:18,230 --> 00:38:22,880
next cage fighter I don't know why so

00:38:21,020 --> 00:38:24,620
thank you if you thought this was

00:38:22,880 --> 00:38:26,480
awesome tell me on Twitter if you're

00:38:24,620 --> 00:38:27,710
really tell me on Twitter if you're

00:38:26,480 --> 00:38:28,910
actually prepared better tell me on

00:38:27,710 --> 00:38:31,670
Twitter

00:38:28,910 --> 00:38:34,070
those are tamo mine handles and also

00:38:31,670 --> 00:38:39,239
I'll tell you at home

00:38:34,070 --> 00:38:39,239

YouTube URL: https://www.youtube.com/watch?v=qeEvKraF8dw


