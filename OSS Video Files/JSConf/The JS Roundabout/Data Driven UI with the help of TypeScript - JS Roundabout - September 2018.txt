Title: Data Driven UI with the help of TypeScript - JS Roundabout - September 2018
Publication date: 2018-10-02
Playlist: The JS Roundabout
Description: 
	We will be hearing from the Trussle team. As a mortgage broker, Trussle deals with a lot of sensitive personal information to provide financial advice and professional services. The talk will discuss how Trussle store these kinds of data to easily track changes with audit logs and how TypeScript can help build a dynamic UI.

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,000 --> 00:00:03,750
so yeah what this is kind of about a

00:00:02,280 --> 00:00:07,500
slightly different approach were taken

00:00:03,750 --> 00:00:09,179
with the UI on a project recently lots

00:00:07,500 --> 00:00:10,320
of typescript tight scripts helps a lot

00:00:09,179 --> 00:00:14,960
with it so that would make sense for

00:00:10,320 --> 00:00:19,500
this we have called it data-driven you I

00:00:14,960 --> 00:00:21,840
am actually ish pretty much explained

00:00:19,500 --> 00:00:24,420
our company so I can skip through this

00:00:21,840 --> 00:00:25,800
really quickly a lot of our work is

00:00:24,420 --> 00:00:27,060
around mortgages and fulfilling

00:00:25,800 --> 00:00:29,400
mortgages we've been around for about

00:00:27,060 --> 00:00:31,679
three three and a half years the

00:00:29,400 --> 00:00:37,739
majority of our stack is in JavaScript

00:00:31,679 --> 00:00:40,530
mode a lot of typescript and to give a

00:00:37,739 --> 00:00:43,410
very brief kind of rundown of how the

00:00:40,530 --> 00:00:45,210
teams are structured within products we

00:00:43,410 --> 00:00:46,980
kind of have lead acquisition on one

00:00:45,210 --> 00:00:49,829
side and fulfillment scalability on the

00:00:46,980 --> 00:00:52,079
other side so acquisition are mainly

00:00:49,829 --> 00:00:53,850
concerned with kind of finding people

00:00:52,079 --> 00:00:54,590
who need mortgages and directs into

00:00:53,850 --> 00:00:57,629
website

00:00:54,590 --> 00:01:00,379
ideally people with lots of money can

00:00:57,629 --> 00:01:05,939
easily get mortgages but lava and

00:01:00,379 --> 00:01:07,770
scalability who mainly work on making

00:01:05,939 --> 00:01:09,600
the actual getting of a mortgage as

00:01:07,770 --> 00:01:12,750
efficient as possible the mortgage

00:01:09,600 --> 00:01:15,720
industry is pretty backwards by kind of

00:01:12,750 --> 00:01:18,270
technology standards so that is a

00:01:15,720 --> 00:01:19,830
process in itself and I'm in a

00:01:18,270 --> 00:01:24,360
scalability team so this is kind of a

00:01:19,830 --> 00:01:25,710
project we've been working on a big

00:01:24,360 --> 00:01:33,630
thing with in working on recently is

00:01:25,710 --> 00:01:35,610
having very audible data reasons why the

00:01:33,630 --> 00:01:38,990
level of accuracy we need to do a

00:01:35,610 --> 00:01:41,610
mortgage application is incredibly high

00:01:38,990 --> 00:01:46,890
getting that from customers can be quite

00:01:41,610 --> 00:01:48,509
difficult there's kind of they may give

00:01:46,890 --> 00:01:51,360
a right answer but it isn't right enough

00:01:48,509 --> 00:01:54,030
for a particular lender and they might

00:01:51,360 --> 00:01:56,610
kind of slightly contradict say their

00:01:54,030 --> 00:01:59,610
income with savings or something like

00:01:56,610 --> 00:02:01,380
that so we have to make sure that when

00:01:59,610 --> 00:02:02,790
we do make changes to data it's very

00:02:01,380 --> 00:02:05,820
obvious why we had to make the change

00:02:02,790 --> 00:02:07,200
and hopefully we can find out why

00:02:05,820 --> 00:02:09,330
customers keep getting it wrong and

00:02:07,200 --> 00:02:12,890
improve the user experience so the other

00:02:09,330 --> 00:02:14,690
reason we need inaudible data is that

00:02:12,890 --> 00:02:17,090
different lenders need different types

00:02:14,690 --> 00:02:19,940
of data sometimes they tell you

00:02:17,090 --> 00:02:22,550
sometimes they don't but we need to keep

00:02:19,940 --> 00:02:25,190
track of why we had to change data for a

00:02:22,550 --> 00:02:29,240
particular lender and the third one I

00:02:25,190 --> 00:02:31,100
kind of mentioned before the actual bit

00:02:29,240 --> 00:02:33,890
from deciding what mortgage products a

00:02:31,100 --> 00:02:36,140
customer should have to them actually

00:02:33,890 --> 00:02:38,360
having that mortgage product can be

00:02:36,140 --> 00:02:43,160
pretty manual most lenders don't have

00:02:38,360 --> 00:02:45,740
API is their criteria often kind of a

00:02:43,160 --> 00:02:48,440
combination of a PDF and some guy in

00:02:45,740 --> 00:02:50,240
some office so you need to kind of make

00:02:48,440 --> 00:02:51,560
sure that if you can't change that part

00:02:50,240 --> 00:02:53,060
we can at least keep track of everything

00:02:51,560 --> 00:02:58,400
that's going on so hopefully we can

00:02:53,060 --> 00:03:00,790
improve it later and what we wanted to

00:02:58,400 --> 00:03:03,200
do was basically make a UI that gave

00:03:00,790 --> 00:03:05,120
some of the kind of mortgage experts and

00:03:03,200 --> 00:03:07,820
the company the ability to change every

00:03:05,120 --> 00:03:10,130
single bit of data that is on the

00:03:07,820 --> 00:03:14,930
customer but make it very audible make

00:03:10,130 --> 00:03:17,180
sure all the changes attract cool thing

00:03:14,930 --> 00:03:18,560
about that the most effective is a lot

00:03:17,180 --> 00:03:20,209
of data is in a very similar format

00:03:18,560 --> 00:03:22,850
because we have control of the data we

00:03:20,209 --> 00:03:26,090
can kind of get it in whatever format we

00:03:22,850 --> 00:03:29,600
want it's kind of a backend tool so a

00:03:26,090 --> 00:03:31,850
lot of the kind of UX problems you get

00:03:29,600 --> 00:03:33,980
with users not understanding the context

00:03:31,850 --> 00:03:35,239
or not understanding exactly what's

00:03:33,980 --> 00:03:36,769
needed for a mortgage aren't applicable

00:03:35,239 --> 00:03:39,650
here these are experts so you'll know

00:03:36,769 --> 00:03:41,840
exactly what's going on and and we quite

00:03:39,650 --> 00:03:44,390
like a reactive type scripty stacks we

00:03:41,840 --> 00:03:50,030
probably weren't going to change that so

00:03:44,390 --> 00:03:51,709
then we kind of had an idea of maybe we

00:03:50,030 --> 00:03:53,239
can put our data in a format where the

00:03:51,709 --> 00:03:55,519
UI doesn't really need to know the

00:03:53,239 --> 00:03:59,300
specifics of the data all the instances

00:03:55,519 --> 00:04:02,750
there is data and this is my amazing

00:03:59,300 --> 00:04:04,250
diagram so imagine this is kind of

00:04:02,750 --> 00:04:07,010
what's coming out of the database or the

00:04:04,250 --> 00:04:08,570
domain in some way and we have some kind

00:04:07,010 --> 00:04:10,670
of conversion function in our back-end

00:04:08,570 --> 00:04:13,760
server and it comes up in a kind of more

00:04:10,670 --> 00:04:16,489
decorated metadata way basically config

00:04:13,760 --> 00:04:19,910
for how to display and edit and make

00:04:16,489 --> 00:04:21,770
changes to this piece of data it's

00:04:19,910 --> 00:04:23,000
really easy to add stuff to get an

00:04:21,770 --> 00:04:25,260
efficient this format because you just

00:04:23,000 --> 00:04:27,780
have to add it to the array

00:04:25,260 --> 00:04:30,240
and because we're using typescript on

00:04:27,780 --> 00:04:32,400
the server and the front-end you can

00:04:30,240 --> 00:04:35,280
actually share the type so it's pretty

00:04:32,400 --> 00:04:36,720
easy to make sure that servers happy

00:04:35,280 --> 00:04:43,920
with the type definition and the new

00:04:36,720 --> 00:04:46,380
ways and arson basic constraints that

00:04:43,920 --> 00:04:48,960
come with this approach you basically

00:04:46,380 --> 00:04:50,670
get no manual alterations to the UI so

00:04:48,960 --> 00:04:52,470
if you want to add a bit of extra

00:04:50,670 --> 00:04:55,530
spacing around the particular question

00:04:52,470 --> 00:04:57,300
seek the m per type can't happen because

00:04:55,530 --> 00:05:00,180
the UI doesn't really understand what

00:04:57,300 --> 00:05:02,040
the actual question input type really is

00:05:00,180 --> 00:05:06,510
it just knows that it's something that

00:05:02,040 --> 00:05:08,250
is a date that's not a major problem for

00:05:06,510 --> 00:05:10,830
us because all the users are kind of

00:05:08,250 --> 00:05:13,650
experts so population know what all this

00:05:10,830 --> 00:05:15,390
data means the other thing you need to

00:05:13,650 --> 00:05:16,920
make sure you have is really

00:05:15,390 --> 00:05:20,460
well-defined relationships between all

00:05:16,920 --> 00:05:22,860
your data because as soon as you maybe

00:05:20,460 --> 00:05:25,830
realized that something you thought was

00:05:22,860 --> 00:05:28,020
only one is actually potentially many

00:05:25,830 --> 00:05:30,360
you have to completely rewrite your data

00:05:28,020 --> 00:05:32,400
like an example maybe just thought you

00:05:30,360 --> 00:05:35,190
needed a last name but you actually

00:05:32,400 --> 00:05:36,390
needed a history of last names maybe you

00:05:35,190 --> 00:05:38,400
need to know that when they change their

00:05:36,390 --> 00:05:41,370
last name they got married or something

00:05:38,400 --> 00:05:43,050
like that if you did not take that into

00:05:41,370 --> 00:05:46,460
account it's actually quite a big

00:05:43,050 --> 00:05:48,330
rewrite so that sucks but we hope we

00:05:46,460 --> 00:05:50,220
roughly know what we're doing with that

00:05:48,330 --> 00:05:53,670
sort of stuff I mean the third one I

00:05:50,220 --> 00:05:56,130
think is pretty important in general is

00:05:53,670 --> 00:05:59,310
kind of abstract generic approaches to

00:05:56,130 --> 00:06:03,690
stuff like this can often just all they

00:05:59,310 --> 00:06:06,270
really add is complexity quite easy to

00:06:03,690 --> 00:06:08,250
accidentally recreate the Dom if you

00:06:06,270 --> 00:06:12,510
start adding too much config to many

00:06:08,250 --> 00:06:15,510
options so you kind of have to keep your

00:06:12,510 --> 00:06:16,920
use cases pretty constrained luckily we

00:06:15,510 --> 00:06:19,080
have very constrained use cases in this

00:06:16,920 --> 00:06:21,270
case we know who's using all of the

00:06:19,080 --> 00:06:23,280
stuff we know roughly what they'll need

00:06:21,270 --> 00:06:29,270
what they won't need so hopefully you

00:06:23,280 --> 00:06:29,270
might hit that too hard and

00:06:29,310 --> 00:06:34,080
this hasn't this isn't a totally new

00:06:31,139 --> 00:06:36,060
idea I'm sure you know other languages

00:06:34,080 --> 00:06:37,770
have similar things but I think probably

00:06:36,060 --> 00:06:41,880
the most popular one in the JavaScript

00:06:37,770 --> 00:06:44,400
world is react Jason's schema will still

00:06:41,880 --> 00:06:45,600
I make it it's really cool so i worth

00:06:44,400 --> 00:06:47,100
quickly checking out the site and

00:06:45,600 --> 00:06:49,440
playing around with it that basically

00:06:47,100 --> 00:06:54,030
gives you everything you need to make

00:06:49,440 --> 00:06:55,830
any change to a form we thought was a

00:06:54,030 --> 00:06:57,930
bit overkill for what we were using and

00:06:55,830 --> 00:07:01,650
we thought it'd be fun basically just to

00:06:57,930 --> 00:07:03,570
see we tried an experiment to see harder

00:07:01,650 --> 00:07:05,310
was to make our iron config base kind of

00:07:03,570 --> 00:07:07,980
approach and it was pretty easy so we

00:07:05,310 --> 00:07:12,660
kept going with that but if you have

00:07:07,980 --> 00:07:15,060
less idea of what your data is less idea

00:07:12,660 --> 00:07:16,169
of what the use cases are but you still

00:07:15,060 --> 00:07:21,510
kind of like the general idea

00:07:16,169 --> 00:07:24,479
maybe check this out right I'm gonna

00:07:21,510 --> 00:07:31,560
attempt to show you a demo I've made

00:07:24,479 --> 00:07:33,780
this afternoon this is an incredibly

00:07:31,560 --> 00:07:39,120
cut-down version of what the page looks

00:07:33,780 --> 00:07:41,729
like and it's very very simple it's

00:07:39,120 --> 00:07:47,220
basically just froze but you have the

00:07:41,729 --> 00:07:51,720
ability to you edit and give got to give

00:07:47,220 --> 00:07:55,229
a reason why and save I'm just using

00:07:51,720 --> 00:07:57,390
like an in-memory kind of array on the

00:07:55,229 --> 00:07:58,979
server so if I restart the server all

00:07:57,390 --> 00:08:01,380
the stuff gets lost but it does get

00:07:58,979 --> 00:08:04,020
persistent in some way and you do get

00:08:01,380 --> 00:08:06,960
the idea you get the ability to there is

00:08:04,020 --> 00:08:08,850
a clearly a concept of types like dates

00:08:06,960 --> 00:08:13,200
have their own date and Peart they are

00:08:08,850 --> 00:08:18,419
displayed in their own way millions get

00:08:13,200 --> 00:08:19,860
billions etc so you can go a lot further

00:08:18,419 --> 00:08:24,240
with this but this is kind of a very

00:08:19,860 --> 00:08:27,770
basic idea and thought I'd jump into the

00:08:24,240 --> 00:08:27,770
typescript side of it

00:08:37,840 --> 00:08:44,440
so this is kind of the very basic type

00:08:41,120 --> 00:08:44,440
can go see the actual easy min of it

00:08:46,180 --> 00:08:53,630
this is kind of the base set of data you

00:08:50,960 --> 00:08:57,800
need so this kind of roughly represents

00:08:53,630 --> 00:09:01,570
that row you saw on the page input sites

00:08:57,800 --> 00:09:05,420
probably the most important part that is

00:09:01,570 --> 00:09:07,430
as about as matter as we get a list of

00:09:05,420 --> 00:09:10,160
kind of roughly what type the input is

00:09:07,430 --> 00:09:12,620
you can add to it but these are kind of

00:09:10,160 --> 00:09:14,960
the ones you immediately get kit text

00:09:12,620 --> 00:09:17,240
number date enum which needs some kind

00:09:14,960 --> 00:09:22,970
of concepts of what are the enums

00:09:17,240 --> 00:09:24,620
boolean your base question has that has

00:09:22,970 --> 00:09:27,560
a key which is essentially something

00:09:24,620 --> 00:09:30,770
that uniquely identifies it label how it

00:09:27,560 --> 00:09:33,110
should look when it's displayed value

00:09:30,770 --> 00:09:35,090
obvious read-only whether it should be

00:09:33,110 --> 00:09:36,500
allowed to be edited it's not actually

00:09:35,090 --> 00:09:38,390
in this demo but there we go

00:09:36,500 --> 00:09:40,010
requires whether the value should be

00:09:38,390 --> 00:09:41,360
allowed to be not now that's about the

00:09:40,010 --> 00:09:45,170
limit of our validation at this point

00:09:41,360 --> 00:09:49,510
and then you basically make different

00:09:45,170 --> 00:09:53,360
types that extend that base type so date

00:09:49,510 --> 00:09:55,010
its value a string because I wanted this

00:09:53,360 --> 00:09:58,070
type to be serializable so the server

00:09:55,010 --> 00:10:00,050
and the front-end code user we actually

00:09:58,070 --> 00:10:01,910
convert it in the real version we

00:10:00,050 --> 00:10:04,210
convert it to I think moment type so you

00:10:01,910 --> 00:10:08,570
can play around with it a bit more but

00:10:04,210 --> 00:10:10,160
string for date anam like I said you

00:10:08,570 --> 00:10:12,620
need this extra property here to kind of

00:10:10,160 --> 00:10:14,300
declare what the enums are number the

00:10:12,620 --> 00:10:16,880
value as a number kind of all makes

00:10:14,300 --> 00:10:18,200
sense the kind of important thing there

00:10:16,880 --> 00:10:21,230
is you have to say what the input type

00:10:18,200 --> 00:10:23,030
value is so tight script can start

00:10:21,230 --> 00:10:24,710
inferring you do that full of your

00:10:23,030 --> 00:10:27,050
different types then you make your

00:10:24,710 --> 00:10:29,450
actual question type which everything

00:10:27,050 --> 00:10:31,820
uses just basically an or of all those

00:10:29,450 --> 00:10:34,250
other types either glad that allows

00:10:31,820 --> 00:10:36,290
typescript to you if you say the input

00:10:34,250 --> 00:10:37,670
type is a date it knows the date the

00:10:36,290 --> 00:10:39,170
value should be a string if you say it's

00:10:37,670 --> 00:10:41,290
a number in the is the vote should be a

00:10:39,170 --> 00:10:43,560
number etc

00:10:41,290 --> 00:10:47,740
[Music]

00:10:43,560 --> 00:10:50,740
that gets kind of added to our kind of

00:10:47,740 --> 00:10:52,480
roughly represents the table type so it

00:10:50,740 --> 00:10:55,180
just has a list of questions and again

00:10:52,480 --> 00:10:56,920
keen to uniquely identify it and some

00:10:55,180 --> 00:11:02,470
little metadata that kind of decorates

00:10:56,920 --> 00:11:04,720
it a bit this is my very crappy server

00:11:02,470 --> 00:11:07,000
code that sort of shows what you can do

00:11:04,720 --> 00:11:11,529
with it you can use that type on the

00:11:07,000 --> 00:11:18,610
server so if I say give this a value of

00:11:11,529 --> 00:11:20,800
4 types what complains kids at night is

00:11:18,610 --> 00:11:27,880
the input type text should have a text

00:11:20,800 --> 00:11:32,140
type and you can share that type a

00:11:27,880 --> 00:11:35,670
question set site with the UI so this is

00:11:32,140 --> 00:11:42,040
the code for deciding how to display a

00:11:35,670 --> 00:11:44,560
particular value so if for date formats

00:11:42,040 --> 00:11:46,240
it in a kind of date like way you know

00:11:44,560 --> 00:11:49,329
me checks the enum values and everything

00:11:46,240 --> 00:11:51,250
else and was quite clear is that you

00:11:49,329 --> 00:11:53,110
that type script knows that because it's

00:11:51,250 --> 00:11:54,880
inputs ie none there should be a

00:11:53,110 --> 00:11:56,769
property called enum values you don't

00:11:54,880 --> 00:12:00,550
have to check for that it's just the

00:11:56,769 --> 00:12:03,430
same thing here if I am this should be

00:12:00,550 --> 00:12:07,029
returning a string if I try and return

00:12:03,430 --> 00:12:08,470
the question value typescript is smart

00:12:07,029 --> 00:12:11,170
enough to know that that is wrong

00:12:08,470 --> 00:12:13,390
because that is a number so this does

00:12:11,170 --> 00:12:17,910
actually pretty much constrain you to

00:12:13,390 --> 00:12:17,910
your definitions just quite cool

00:12:19,769 --> 00:12:30,910
it's also really easy to now add extra

00:12:23,140 --> 00:12:31,420
data to this if I say once you add phone

00:12:30,910 --> 00:12:32,920
number

00:12:31,420 --> 00:12:34,240
obviously in real life this would be

00:12:32,920 --> 00:12:37,860
some value that's coming out of a

00:12:34,240 --> 00:12:37,860
database but just to give an idea

00:12:41,320 --> 00:12:53,860
they input type text for phone number

00:13:09,470 --> 00:13:12,659
[Music]

00:13:18,740 --> 00:13:32,370
it's really hard typing when you can't

00:13:20,939 --> 00:13:35,240
look at the actual screen and value

00:13:32,370 --> 00:13:35,240
that's something to see happen isn't

00:13:47,089 --> 00:13:53,639
fine I'll go back to our page and give

00:13:52,350 --> 00:13:55,139
it some time for the server to restart

00:13:53,639 --> 00:13:56,819
the phone just got added that I don't

00:13:55,139 --> 00:13:59,879
have to make any change the actual UI

00:13:56,819 --> 00:14:02,480
just the backend code and all the

00:13:59,879 --> 00:14:09,389
editing and everything still works a

00:14:02,480 --> 00:14:11,779
little kind of Rea generic listening

00:14:09,389 --> 00:14:11,779
recorder

00:14:12,980 --> 00:14:18,389
um so yeah adding is really easy

00:14:16,740 --> 00:14:20,309
removing is very easy

00:14:18,389 --> 00:14:22,290
socially pretty easy to extend this with

00:14:20,309 --> 00:14:23,910
other concepts like adding a whole new

00:14:22,290 --> 00:14:27,149
set of personal details or something

00:14:23,910 --> 00:14:33,269
like that so it's working out okay for

00:14:27,149 --> 00:14:35,970
us so learnings have got so far with

00:14:33,269 --> 00:14:38,550
this approach with pretty strict

00:14:35,970 --> 00:14:41,040
constraints this seems to be working for

00:14:38,550 --> 00:14:43,290
us you can skip the library if you don't

00:14:41,040 --> 00:14:46,230
want to add another huge library to your

00:14:43,290 --> 00:14:47,639
project and typescript is very very good

00:14:46,230 --> 00:14:50,550
at telling you what you can and can't do

00:14:47,639 --> 00:14:53,519
if you setup right that's kind of it

00:14:50,550 --> 00:14:55,290
really next steps for us are trying to

00:14:53,519 --> 00:14:57,720
work out how we deal with complex

00:14:55,290 --> 00:15:01,589
validation because we've just kind of

00:14:57,720 --> 00:15:03,420
skipped that for now and it seems like

00:15:01,589 --> 00:15:05,660
this would work quite well with some

00:15:03,420 --> 00:15:09,290
kind of graph QL approach to things but

00:15:05,660 --> 00:15:11,279
we haven't really looked into that yeah

00:15:09,290 --> 00:15:11,630
thanks

00:15:11,279 --> 00:15:16,139
you

00:15:11,630 --> 00:15:16,139

YouTube URL: https://www.youtube.com/watch?v=Kei2S7rmFzs


