Title: Reacting to Growth: Modernizing and Scaling the Frontend - JS Roundabout - September 2019
Publication date: 2019-09-17
Playlist: The JS Roundabout
Description: 
	A joint talk from Tiago Morais, Lead Software Developer, and Nicholas Martin, Software Engineer both who work at The Plum guide. 

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:04,980
hi yes so I'm Nico I'm one of the

00:00:02,970 --> 00:00:07,080
front-end engineers at plumb guide and

00:00:04,980 --> 00:00:10,410
this is my colleague Thiago who's the

00:00:07,080 --> 00:00:12,300
tech lead or one of tech leads so our

00:00:10,410 --> 00:00:14,580
presentation that has you table title is

00:00:12,300 --> 00:00:16,560
all about how we have reacted to growth

00:00:14,580 --> 00:00:19,050
so we're gonna be talking about how we

00:00:16,560 --> 00:00:21,270
are using react to modernize and scale

00:00:19,050 --> 00:00:22,650
the front-end architecture so just to

00:00:21,270 --> 00:00:25,470
give you guys a bit of a background as

00:00:22,650 --> 00:00:28,019
to who we are at plumb guide so we

00:00:25,470 --> 00:00:31,800
launched in 2015 as a booking platform

00:00:28,019 --> 00:00:33,989
for the best homes on the planet unlike

00:00:31,800 --> 00:00:35,840
other platforms that you may know of all

00:00:33,989 --> 00:00:39,329
of our homes have been thoroughly tested

00:00:35,840 --> 00:00:42,739
through a mix of human selection but

00:00:39,329 --> 00:00:47,399
also through grading algorithms as well

00:00:42,739 --> 00:00:49,079
we're still a fairly new startup so but

00:00:47,399 --> 00:00:52,289
we now cover twelve different cities

00:00:49,079 --> 00:00:54,989
across the globe and our goal is to

00:00:52,289 --> 00:00:57,390
launch in many more next year we

00:00:54,989 --> 00:01:01,039
recently raised 14 million in a series B

00:00:57,390 --> 00:01:04,619
family funding round and as part of that

00:01:01,039 --> 00:01:06,900
we've been scaling or aspects of plumb

00:01:04,619 --> 00:01:11,100
but at the moment there's a really big

00:01:06,900 --> 00:01:13,080
focus on engineering so in terms of

00:01:11,100 --> 00:01:16,170
engineering we've pretty much gone

00:01:13,080 --> 00:01:18,689
through two major stages of evolution so

00:01:16,170 --> 00:01:21,299
far and we're just starting on the third

00:01:18,689 --> 00:01:23,700
so what we'd like to do is just dive

00:01:21,299 --> 00:01:28,799
into each of those stages and talk about

00:01:23,700 --> 00:01:31,200
how we've used reactive each so it says

00:01:28,799 --> 00:01:33,900
with the initial stack plant started as

00:01:31,200 --> 00:01:36,200
many startups do by building an MVP

00:01:33,900 --> 00:01:39,240
that's got the company off the ground

00:01:36,200 --> 00:01:42,119
but this very quickly grew in size in

00:01:39,240 --> 00:01:43,950
complexity as we started moving into

00:01:42,119 --> 00:01:48,090
more cities and we started hiring more

00:01:43,950 --> 00:01:51,270
people plumb was built as an asp.net MVC

00:01:48,090 --> 00:01:53,340
application so using rays of use and

00:01:51,270 --> 00:01:56,100
it's very much dependent on the Windows

00:01:53,340 --> 00:01:58,979
platform for those who are not familiar

00:01:56,100 --> 00:02:03,329
with asp.net it's very similar to rails

00:01:58,979 --> 00:02:07,020
apps reviews or laravel I pronounced it

00:02:03,329 --> 00:02:08,369
wrong earlier laravel for PHP as with

00:02:07,020 --> 00:02:11,099
most websites probably recognized a

00:02:08,369 --> 00:02:14,099
couple of those things there at the time

00:02:11,099 --> 00:02:16,590
bootstrap was pretty big jquery as well

00:02:14,099 --> 00:02:22,019
I was using that to enrich the content

00:02:16,590 --> 00:02:23,459
on this site so as a start-up naturally

00:02:22,019 --> 00:02:25,349
there are some growing pains as I've

00:02:23,459 --> 00:02:27,209
mentioned there was a high level of

00:02:25,349 --> 00:02:29,459
complexity which made it a lot harder to

00:02:27,209 --> 00:02:31,889
maintain the applications it seems are

00:02:29,459 --> 00:02:33,599
getting much more difficult to work with

00:02:31,889 --> 00:02:35,099
we also had low code coverage which has

00:02:33,599 --> 00:02:37,650
you know it's probably quite bad for

00:02:35,099 --> 00:02:40,829
business so test cases were churning at

00:02:37,650 --> 00:02:42,269
a very high rate build times were

00:02:40,829 --> 00:02:43,980
increasing obviously because of the

00:02:42,269 --> 00:02:45,510
complexity of the application so that

00:02:43,980 --> 00:02:47,519
ultimately slowed down the deployment

00:02:45,510 --> 00:02:49,439
pipeline which meant that's our

00:02:47,519 --> 00:02:51,480
development to meet a development speed

00:02:49,439 --> 00:02:53,699
was much slower than where we wanted it

00:02:51,480 --> 00:02:56,879
to be because we're using the MVC

00:02:53,699 --> 00:02:58,980
framework as well it was quite difficult

00:02:56,879 --> 00:03:03,540
to build reusable code and really as

00:02:58,980 --> 00:03:06,269
reusable components so with that mind we

00:03:03,540 --> 00:03:07,859
began focusing on the future plan so

00:03:06,269 --> 00:03:09,750
some of our core goals that we want to

00:03:07,859 --> 00:03:12,569
tackle we're modernizing the stack so

00:03:09,750 --> 00:03:14,459
that was ultimately improving the

00:03:12,569 --> 00:03:16,430
developer experience which meant that we

00:03:14,459 --> 00:03:19,199
can get features out much much quicker

00:03:16,430 --> 00:03:21,569
we also wanted to create features in

00:03:19,199 --> 00:03:23,939
more leaner easily testable isolated

00:03:21,569 --> 00:03:26,699
environments but we also wanted to move

00:03:23,939 --> 00:03:29,250
away from the monolithic model that we

00:03:26,699 --> 00:03:31,019
had but we had to do this incremental e

00:03:29,250 --> 00:03:33,750
we had to do this piece by piece as it

00:03:31,019 --> 00:03:36,090
just doesn't quite make sense to rewrite

00:03:33,750 --> 00:03:37,620
into our application so at this point

00:03:36,090 --> 00:03:39,810
I'm actually gonna hand over to Thiago

00:03:37,620 --> 00:03:42,419
who's gonna go over in more detail as to

00:03:39,810 --> 00:03:44,129
how we achieve this in practice so the

00:03:42,419 --> 00:03:46,319
first thing we did was like what we call

00:03:44,129 --> 00:03:48,150
like uber maneuver what this means for

00:03:46,319 --> 00:03:50,400
us is that around the time that were

00:03:48,150 --> 00:03:52,470
using jQuery the browser's became a bit

00:03:50,400 --> 00:03:54,359
more more consistent there was less

00:03:52,470 --> 00:03:56,220
JavaScript errors so it kind of sunset

00:03:54,359 --> 00:03:58,799
in jQuery which time would stick with it

00:03:56,220 --> 00:04:00,780
like PJs cs6 like the most basic thing

00:03:58,799 --> 00:04:01,650
you can do and then we just limited the

00:04:00,780 --> 00:04:03,259
razor views which is like the

00:04:01,650 --> 00:04:06,329
server-side templating stuff to just

00:04:03,259 --> 00:04:08,639
critical server-side rendering next

00:04:06,329 --> 00:04:10,169
thing we did was evaluate how we build

00:04:08,639 --> 00:04:12,750
the client-side and the reactor really

00:04:10,169 --> 00:04:14,099
came out for us mostly because react is

00:04:12,750 --> 00:04:15,780
really really good at just hooking up

00:04:14,099 --> 00:04:17,400
into small specific parts of the of the

00:04:15,780 --> 00:04:19,979
DOM and the page and you can easily

00:04:17,400 --> 00:04:23,159
offer progressive enhancement with react

00:04:19,979 --> 00:04:24,510
so we did that and I'm gonna show a

00:04:23,159 --> 00:04:26,190
little bit how we did in practice so

00:04:24,510 --> 00:04:26,770
these are home page it's been like that

00:04:26,190 --> 00:04:28,930
for quite over

00:04:26,770 --> 00:04:31,120
actually initially was like all you know

00:04:28,930 --> 00:04:32,919
server-side templating language I can

00:04:31,120 --> 00:04:34,030
show the code a lot of jQuery a lot of

00:04:32,919 --> 00:04:35,620
bootstrap that eventually became

00:04:34,030 --> 00:04:37,180
literally like team doubt because of the

00:04:35,620 --> 00:04:38,470
brand so it's really hard to maintain

00:04:37,180 --> 00:04:40,210
these pages after a while and you can

00:04:38,470 --> 00:04:41,949
really come cumbersome especially when

00:04:40,210 --> 00:04:43,479
there's more engineers involved becomes

00:04:41,949 --> 00:04:46,210
really hard not to step on each other's

00:04:43,479 --> 00:04:47,080
toes so what we did was actually ended

00:04:46,210 --> 00:04:48,849
up like this

00:04:47,080 --> 00:04:50,620
so we left the server-side rendering

00:04:48,849 --> 00:04:52,479
alone for now we keep it light days we

00:04:50,620 --> 00:04:54,370
don't touch it and then we focus on on

00:04:52,479 --> 00:04:56,979
the bottom on the below default content

00:04:54,370 --> 00:04:58,629
as it is and if you look at the the top

00:04:56,979 --> 00:05:01,080
bit there's actually much less code now

00:04:58,629 --> 00:05:03,909
all the DES is actually moving next

00:05:01,080 --> 00:05:06,280
there's the like a react homepage thing

00:05:03,909 --> 00:05:07,870
with homepage div and there's some place

00:05:06,280 --> 00:05:09,490
all the elements I usually use like for

00:05:07,870 --> 00:05:10,630
gray and it's kind of effects that you

00:05:09,490 --> 00:05:12,340
normally see on Facebook while it's

00:05:10,630 --> 00:05:13,750
loading and then the bottom bit there's

00:05:12,340 --> 00:05:15,280
now a new script tag that points to our

00:05:13,750 --> 00:05:16,870
bundle and then the bundle reactors

00:05:15,280 --> 00:05:18,849
kicks in and as you can see just looks

00:05:16,870 --> 00:05:20,949
at the react homepage hooks up into that

00:05:18,849 --> 00:05:22,539
deep elements and just like everything

00:05:20,949 --> 00:05:24,879
takes over and that's kind of our you

00:05:22,539 --> 00:05:27,550
you mix and match and kind of slowly

00:05:24,879 --> 00:05:30,819
migrate to react or kind of sliced stuff

00:05:27,550 --> 00:05:31,960
about sorry networks so yeah that worked

00:05:30,819 --> 00:05:34,030
really well for us and we started to

00:05:31,960 --> 00:05:35,949
kind of try to build on that and then we

00:05:34,030 --> 00:05:38,020
continued investing in react so what we

00:05:35,949 --> 00:05:39,340
did next bit was move that react into

00:05:38,020 --> 00:05:40,330
something more composable more

00:05:39,340 --> 00:05:42,159
componentized

00:05:40,330 --> 00:05:43,509
because like Nico said we're kind of

00:05:42,159 --> 00:05:45,909
tied to Windows platform at the time

00:05:43,509 --> 00:05:48,219
we're trying to find a way to get slowly

00:05:45,909 --> 00:05:49,569
move out of it so react is really good

00:05:48,219 --> 00:05:51,069
again at this so I don't know if you

00:05:49,569 --> 00:05:52,690
heard of story book but story book is

00:05:51,069 --> 00:05:53,949
kind of like a way for you to develop in

00:05:52,690 --> 00:05:56,020
a sandbox environment where you can

00:05:53,949 --> 00:05:57,759
actually play around with stuff and it

00:05:56,020 --> 00:05:59,560
kind of actually like a real live react

00:05:57,759 --> 00:06:01,240
environment so what we did was start

00:05:59,560 --> 00:06:03,069
building blocks of our brand on these

00:06:01,240 --> 00:06:04,569
react environments and right right after

00:06:03,069 --> 00:06:06,069
that we could just immediately start

00:06:04,569 --> 00:06:07,270
developing UI and components without

00:06:06,069 --> 00:06:09,250
being tied to Windows it could run this

00:06:07,270 --> 00:06:10,389
anywhere is like amazing development

00:06:09,250 --> 00:06:11,529
experience compared to Razer

00:06:10,389 --> 00:06:13,000
there's like hot module reloading

00:06:11,529 --> 00:06:14,919
there's like much better error handling

00:06:13,000 --> 00:06:19,080
and much easier to test so there was

00:06:14,919 --> 00:06:21,340
much nicer for us yeah what I'm saying

00:06:19,080 --> 00:06:23,110
so this is kind of the same example but

00:06:21,340 --> 00:06:25,389
on a search page so the search page

00:06:23,110 --> 00:06:26,949
again was like lots of rays of view lots

00:06:25,389 --> 00:06:28,750
of jQuery especially around the top bit

00:06:26,949 --> 00:06:30,729
where there's like the search filters so

00:06:28,750 --> 00:06:32,020
when the forms come too involved it

00:06:30,729 --> 00:06:33,430
becomes even harder to manage all these

00:06:32,020 --> 00:06:34,659
things so again it's a very small

00:06:33,430 --> 00:06:36,759
snippet but the real thing was that

00:06:34,659 --> 00:06:38,409
action much bigger and it could make

00:06:36,759 --> 00:06:40,880
this work you could start you know

00:06:38,409 --> 00:06:42,860
refactor this but it was really really

00:06:40,880 --> 00:06:46,610
so we kind of like sty slicing stuff out

00:06:42,860 --> 00:06:48,230
and react came to help us so at some

00:06:46,610 --> 00:06:50,330
point we tried we try to enhance the

00:06:48,230 --> 00:06:51,590
search experience by putting a map like

00:06:50,330 --> 00:06:53,690
you usually expect on this kind of

00:06:51,590 --> 00:06:55,040
experiences so in a food like some you

00:06:53,690 --> 00:06:56,450
can barely see it but there's like a map

00:06:55,040 --> 00:06:58,130
on the side you can drag around and

00:06:56,450 --> 00:07:00,320
search for it there's like some markers

00:06:58,130 --> 00:07:01,580
to see the prices so we definitely

00:07:00,320 --> 00:07:03,770
wanted to build this with better tools

00:07:01,580 --> 00:07:05,120
and react with one of those so this is

00:07:03,770 --> 00:07:06,740
what we end up with so again we don't

00:07:05,120 --> 00:07:09,350
touch the top bit we leave it alone for

00:07:06,740 --> 00:07:11,300
seven for SEO specially and what we do

00:07:09,350 --> 00:07:13,040
is actually slice the stuff out and we

00:07:11,300 --> 00:07:14,960
leave nothing but placeholders so if you

00:07:13,040 --> 00:07:16,760
see the top it is like react search

00:07:14,960 --> 00:07:18,830
which actually indicates developers that

00:07:16,760 --> 00:07:20,150
there's react hooking into that div and

00:07:18,830 --> 00:07:21,680
then at the top bit there's like a

00:07:20,150 --> 00:07:23,150
script tag that is just points to our

00:07:21,680 --> 00:07:24,950
bundle and then from there on we can

00:07:23,150 --> 00:07:26,840
just develop everything inside the react

00:07:24,950 --> 00:07:28,070
World and most of these components just

00:07:26,840 --> 00:07:30,640
come from actually plumeria at this

00:07:28,070 --> 00:07:32,930
point or like our component library

00:07:30,640 --> 00:07:34,190
cool another thing worth of note is how

00:07:32,930 --> 00:07:35,600
they can communicate so if you look at

00:07:34,190 --> 00:07:37,010
the top bit that's actually the search

00:07:35,600 --> 00:07:39,080
isn't there and at some point the

00:07:37,010 --> 00:07:41,030
reactor Elektra has to know about how

00:07:39,080 --> 00:07:43,460
the the filters change so they can

00:07:41,030 --> 00:07:45,200
update the states so what we find easy

00:07:43,460 --> 00:07:47,450
way for us to do this actually was use

00:07:45,200 --> 00:07:48,860
custom events so if use custom events it

00:07:47,450 --> 00:07:50,780
can actually easy communicate between

00:07:48,860 --> 00:07:52,190
the two bridges custom events are part

00:07:50,780 --> 00:07:54,200
of the Dom native API so it's very easy

00:07:52,190 --> 00:07:55,610
to use is very light touch and all you

00:07:54,200 --> 00:07:57,920
do and if you change the filters that

00:07:55,610 --> 00:07:59,240
are up there is that it's just firing a

00:07:57,920 --> 00:08:00,710
custom events and then over there

00:07:59,240 --> 00:08:02,720
there's someone listening to it and just

00:08:00,710 --> 00:08:03,530
dispatches an action over to redux which

00:08:02,720 --> 00:08:05,360
is an takes over

00:08:03,530 --> 00:08:06,380
there's API calls and everything else so

00:08:05,360 --> 00:08:07,550
it's very easy for us to kind of

00:08:06,380 --> 00:08:11,270
communicate between those worlds like

00:08:07,550 --> 00:08:15,530
this yeah I've got a reveal you cannot

00:08:11,270 --> 00:08:16,940
below that I was good okay well imagine

00:08:15,530 --> 00:08:19,460
there's a video here and you'll play and

00:08:16,940 --> 00:08:20,480
show you how it goes so yeah if you go

00:08:19,460 --> 00:08:22,100
to a search page you'll be able to see

00:08:20,480 --> 00:08:23,210
this in action so you see like the great

00:08:22,100 --> 00:08:24,860
stuff coming out but like it's on

00:08:23,210 --> 00:08:27,350
Facebook and then react takes over and

00:08:24,860 --> 00:08:28,970
you can't even see the the deterioration

00:08:27,350 --> 00:08:30,260
in your experience because you can't

00:08:28,970 --> 00:08:32,240
even tell that it's raising reacting the

00:08:30,260 --> 00:08:35,450
same page is actually quite seamless but

00:08:32,240 --> 00:08:38,479
you know it's all back so move on

00:08:35,450 --> 00:08:39,469
so the cons for this the cons for this

00:08:38,479 --> 00:08:40,880
is a still not a great developer

00:08:39,469 --> 00:08:42,830
experience because even though you're

00:08:40,880 --> 00:08:44,030
developing the stuff in install book you

00:08:42,830 --> 00:08:45,920
have to bring everything over into the

00:08:44,030 --> 00:08:47,210
monolith and kind of test everything

00:08:45,920 --> 00:08:48,500
together so you still have to run the

00:08:47,210 --> 00:08:50,540
windows you still have to run the entire

00:08:48,500 --> 00:08:52,580
web server to test the stuff so you have

00:08:50,540 --> 00:08:54,250
to be still not massively amazing I

00:08:52,580 --> 00:08:55,750
still requires you to maintain

00:08:54,250 --> 00:08:57,970
rendering technology so you have to

00:08:55,750 --> 00:09:00,460
maintain reacts with maintain razor it's

00:08:57,970 --> 00:09:01,780
a bit tricky and you also now have a

00:09:00,460 --> 00:09:03,250
slightly longer deployment times because

00:09:01,780 --> 00:09:04,750
now you're just building the old stuff

00:09:03,250 --> 00:09:06,940
I also dig the new stuff so you have to

00:09:04,750 --> 00:09:08,530
run npm run builds on a CI which takes

00:09:06,940 --> 00:09:10,480
like an extra minute or two at least

00:09:08,530 --> 00:09:11,980
and then again interrupts ability of

00:09:10,480 --> 00:09:14,050
like using custom events which is not a

00:09:11,980 --> 00:09:15,940
big deal but still the process is of

00:09:14,050 --> 00:09:17,380
course is that is much better component

00:09:15,940 --> 00:09:19,120
isolation so the stuff built in react

00:09:17,380 --> 00:09:21,700
was much nicer was much much easier to

00:09:19,120 --> 00:09:23,080
test it was with help of storybook we

00:09:21,700 --> 00:09:24,880
can't think about visibility about

00:09:23,080 --> 00:09:26,320
scaling our teams it was much faster

00:09:24,880 --> 00:09:27,730
development speed so if you've used you

00:09:26,320 --> 00:09:29,380
actually know how it works is like it's

00:09:27,730 --> 00:09:30,810
insanely fast to have like the feedback

00:09:29,380 --> 00:09:33,550
cycle between developers and designers

00:09:30,810 --> 00:09:35,320
and it now we start pushing into the

00:09:33,550 --> 00:09:37,390
cross-platform world so now like Connect

00:09:35,320 --> 00:09:40,390
but staying away from like being tied to

00:09:37,390 --> 00:09:42,130
Windows essentially the next iteration

00:09:40,390 --> 00:09:42,970
of that of course is like putting rack

00:09:42,130 --> 00:09:45,340
everywhere basically

00:09:42,970 --> 00:09:46,720
so it was server-side rendering so what

00:09:45,340 --> 00:09:48,700
we did was we started by making the

00:09:46,720 --> 00:09:50,350
component server-side friendly so when

00:09:48,700 --> 00:09:52,900
you rent it like all the stuff they kind

00:09:50,350 --> 00:09:53,980
of fall back to nice gray stuff if

00:09:52,900 --> 00:09:56,020
you're not running on the node

00:09:53,980 --> 00:09:57,610
environment we improved our FPS on the

00:09:56,020 --> 00:09:59,200
back end as well so that we could do

00:09:57,610 --> 00:10:00,760
initial State injection and kind of play

00:09:59,200 --> 00:10:02,920
around with the environments I make you

00:10:00,760 --> 00:10:04,390
work nicely and then we kind of agree to

00:10:02,920 --> 00:10:05,530
like stop building with razor and just

00:10:04,390 --> 00:10:07,089
any new page that we build and go

00:10:05,530 --> 00:10:09,850
straight for everything in react because

00:10:07,089 --> 00:10:11,500
you were crossover so for us and this is

00:10:09,850 --> 00:10:12,970
what you see in so at some point around

00:10:11,500 --> 00:10:14,320
it eight months ago we wanted to build

00:10:12,970 --> 00:10:16,380
some new landing pages they were kind of

00:10:14,320 --> 00:10:18,790
optimized landing pages for PPC traffic

00:10:16,380 --> 00:10:20,530
we went straight into react everything

00:10:18,790 --> 00:10:23,260
so what you get here is actually all

00:10:20,530 --> 00:10:24,580
react the front and in the back so the

00:10:23,260 --> 00:10:26,230
same components that is on search page

00:10:24,580 --> 00:10:27,760
are the same here so yet you don't have

00:10:26,230 --> 00:10:29,710
to rebuild anything we just pull them in

00:10:27,760 --> 00:10:31,450
came to the page and everything worked

00:10:29,710 --> 00:10:33,040
out so if you go to Columbia home slash

00:10:31,450 --> 00:10:35,800
land apartments you actually get served

00:10:33,040 --> 00:10:38,530
and OGS application it comes from that

00:10:35,800 --> 00:10:40,270
renders both react on both ends of the

00:10:38,530 --> 00:10:41,460
back in the front and what this works at

00:10:40,270 --> 00:10:43,660
because they still on the same website

00:10:41,460 --> 00:10:45,760
what works now is that if you go to plan

00:10:43,660 --> 00:10:47,170
your comm and it like the route app you

00:10:45,760 --> 00:10:48,850
get a c-sharp server

00:10:47,170 --> 00:10:50,950
leaving a tracer and then react on the

00:10:48,850 --> 00:10:52,180
front end that arrow is wrong but on

00:10:50,950 --> 00:10:53,950
recomment front end it gives you like

00:10:52,180 --> 00:10:55,330
the plumbing our components what happens

00:10:53,950 --> 00:10:56,950
now if you go to this page is that if

00:10:55,330 --> 00:10:58,540
you go to slash London or Paris or

00:10:56,950 --> 00:11:00,010
another city they were in slash

00:10:58,540 --> 00:11:02,320
something else you get the node.js

00:11:00,010 --> 00:11:05,020
server so when you react so we kind of

00:11:02,320 --> 00:11:06,850
sliced up our infrastructure into by

00:11:05,020 --> 00:11:07,360
using like reverse proxies of like

00:11:06,850 --> 00:11:09,220
engineer

00:11:07,360 --> 00:11:10,660
so something else again we maintain

00:11:09,220 --> 00:11:12,970
because they took codebases we kind of

00:11:10,660 --> 00:11:15,069
maintain consistency by a mentor by

00:11:12,970 --> 00:11:17,019
using component libraries in this case

00:11:15,069 --> 00:11:18,610
plum UI and again because the code is

00:11:17,019 --> 00:11:21,429
smaller and is much easier to attach

00:11:18,610 --> 00:11:22,839
this ostracism to to deploy and if

00:11:21,429 --> 00:11:24,489
something fails if you push bad code

00:11:22,839 --> 00:11:25,839
into the new landing pages actually

00:11:24,489 --> 00:11:27,160
there's an effect in the monolith and

00:11:25,839 --> 00:11:31,179
vice versa so they're much more

00:11:27,160 --> 00:11:33,369
resilient like this cool so I kind of

00:11:31,179 --> 00:11:34,569
give you select the final iteration of

00:11:33,369 --> 00:11:36,759
where we are right now is what we call

00:11:34,569 --> 00:11:38,139
vertical micro front ends what this

00:11:36,759 --> 00:11:39,939
means is that we actually use a reverse

00:11:38,139 --> 00:11:42,100
proxying to split the roots to multiple

00:11:39,939 --> 00:11:43,629
apps depending on like rules like you

00:11:42,100 --> 00:11:45,279
could be URL could be headers could be

00:11:43,629 --> 00:11:47,199
could be really anything like cookies

00:11:45,279 --> 00:11:48,369
but in this case mostly rules we can

00:11:47,199 --> 00:11:49,809
actually choose the right model for each

00:11:48,369 --> 00:11:51,429
app so depending on which parts of the

00:11:49,809 --> 00:11:53,170
experience you're getting you could be

00:11:51,429 --> 00:11:54,160
serving I think it's a side learning

00:11:53,170 --> 00:11:55,869
application you could actually be

00:11:54,160 --> 00:11:57,790
getting a create track app application

00:11:55,869 --> 00:11:58,029
like a spa or it could be a something

00:11:57,790 --> 00:12:00,279
else

00:11:58,029 --> 00:12:02,079
it is really matter and then dependent

00:12:00,279 --> 00:12:03,489
apps as well so it's a smaller code

00:12:02,079 --> 00:12:05,589
bases they used by a different teams

00:12:03,489 --> 00:12:06,790
they have much smaller deployment times

00:12:05,589 --> 00:12:08,619
because they're much easier to maintain

00:12:06,790 --> 00:12:10,239
there's less good on them

00:12:08,619 --> 00:12:12,189
there's better resilience so it's very

00:12:10,239 --> 00:12:13,569
very nice a kind of model and of course

00:12:12,189 --> 00:12:15,429
you maintain the consistency by using

00:12:13,569 --> 00:12:18,249
the code with component libraries they

00:12:15,429 --> 00:12:20,049
react is so good at doing again the

00:12:18,249 --> 00:12:21,309
major benefits of this is that the teams

00:12:20,049 --> 00:12:22,749
now have much stronger ownership

00:12:21,309 --> 00:12:24,189
independence of they own the entire

00:12:22,749 --> 00:12:26,379
verticality of what they're working on

00:12:24,189 --> 00:12:27,879
if they push our back code they don't

00:12:26,379 --> 00:12:28,809
affect the other things so it doesn't

00:12:27,879 --> 00:12:30,579
break anything on the other parts of the

00:12:28,809 --> 00:12:32,769
site the small code for them to handle

00:12:30,579 --> 00:12:33,910
there's less chances of them bumping it

00:12:32,769 --> 00:12:35,529
into each other there's faster

00:12:33,910 --> 00:12:37,959
development cycles so it's a much nicer

00:12:35,529 --> 00:12:39,999
way of breaking our massive website in

00:12:37,959 --> 00:12:41,199
smaller things and also identifies

00:12:39,999 --> 00:12:42,549
exploration so if you want to try

00:12:41,199 --> 00:12:44,410
something new something different we can

00:12:42,549 --> 00:12:46,059
actually just make a new route even like

00:12:44,410 --> 00:12:47,230
slash tests and you can put something

00:12:46,059 --> 00:12:49,119
else completely different in there and

00:12:47,230 --> 00:12:51,100
you can see a nice experience without

00:12:49,119 --> 00:12:52,389
breaking anything else so after a few

00:12:51,100 --> 00:12:54,399
months we kind of look like this so at

00:12:52,389 --> 00:12:56,529
some point the host team I wanted to

00:12:54,399 --> 00:12:58,269
build a new onboarding experience for

00:12:56,529 --> 00:13:00,100
our hosts is behind the login screen so

00:12:58,269 --> 00:13:01,720
there's in lco so the easiest thing to

00:13:00,100 --> 00:13:03,399
do is just using a reacts pass or single

00:13:01,720 --> 00:13:05,470
page application it was like there's an

00:13:03,399 --> 00:13:07,959
engine X in s3 bucket serving that that

00:13:05,470 --> 00:13:09,519
page if you go to dumb that don't get

00:13:07,959 --> 00:13:10,809
accomplished forced onboarding you get

00:13:09,519 --> 00:13:12,309
this page and it's completely isolated

00:13:10,809 --> 00:13:14,139
from everything else and all they do is

00:13:12,309 --> 00:13:17,019
pull in components from the from

00:13:14,139 --> 00:13:18,910
storybook and plum URL again if you have

00:13:17,019 --> 00:13:20,679
to scale again it pathetically we kind

00:13:18,910 --> 00:13:21,230
of worked on this not official yet but

00:13:20,679 --> 00:13:22,760
still

00:13:21,230 --> 00:13:24,530
we have the journal at Plum Gator calm

00:13:22,760 --> 00:13:25,730
if you go to the new team Jones in

00:13:24,530 --> 00:13:27,170
starts working the journal everyone

00:13:25,730 --> 00:13:28,940
loves Gatsby nowadays so they could

00:13:27,170 --> 00:13:30,470
actually get to be on a plane get home

00:13:28,940 --> 00:13:32,660
slash journal they would just maintain

00:13:30,470 --> 00:13:35,120
the consistency by using a storybook and

00:13:32,660 --> 00:13:36,590
plumb UI so again if they you know if

00:13:35,120 --> 00:13:38,450
the up something at the journal who

00:13:36,590 --> 00:13:40,100
can actually doesn't break anything else

00:13:38,450 --> 00:13:42,700
for the journal so it's none of the

00:13:40,100 --> 00:13:44,780
teams to get affected by by broken code

00:13:42,700 --> 00:13:45,890
if you've seen micro front ends on the

00:13:44,780 --> 00:13:47,150
web if you kind of google for them you

00:13:45,890 --> 00:13:48,170
probably end up looking at this image

00:13:47,150 --> 00:13:50,330
this is what is called like

00:13:48,170 --> 00:13:51,680
compositional micro front ends this is a

00:13:50,330 --> 00:13:53,180
different model so it's when you're on

00:13:51,680 --> 00:13:54,890
the same page you actually on the same

00:13:53,180 --> 00:13:56,300
page you slice the button so they come

00:13:54,890 --> 00:13:58,820
from different themes different

00:13:56,300 --> 00:14:00,320
libraries different everything this

00:13:58,820 --> 00:14:01,790
works if you kind of like a single

00:14:00,320 --> 00:14:04,130
massive Singapore application like a web

00:14:01,790 --> 00:14:07,460
player or like like a Spotify app where

00:14:04,130 --> 00:14:09,200
you just have a single page but for us

00:14:07,460 --> 00:14:11,840
because the the the app is like very

00:14:09,200 --> 00:14:13,370
navigational it's working slicing them

00:14:11,840 --> 00:14:14,750
vertically makes more sense because

00:14:13,370 --> 00:14:16,340
usually like things like the search team

00:14:14,750 --> 00:14:17,690
is working a search experience the check

00:14:16,340 --> 00:14:19,430
out theme is it work and a checkout

00:14:17,690 --> 00:14:21,920
experience so it makes a much more sense

00:14:19,430 --> 00:14:23,180
than this kind of model so it's the

00:14:21,920 --> 00:14:24,980
different models of doing it that none

00:14:23,180 --> 00:14:27,680
of them is wrong but it make depending

00:14:24,980 --> 00:14:32,860
on what kind of architecture they're on

00:14:27,680 --> 00:14:35,150
an application yeah so this repeating

00:14:32,860 --> 00:14:36,290
that cool yeah so this kind of where we

00:14:35,150 --> 00:14:38,270
are right now is we've kind of been

00:14:36,290 --> 00:14:40,070
slicing away literally sliced in URL

00:14:38,270 --> 00:14:43,550
monolith we've been expanding expanding

00:14:40,070 --> 00:14:45,200
our teams also in slices and it's been

00:14:43,550 --> 00:14:46,280
it's been really working well so far and

00:14:45,200 --> 00:14:47,600
at the center of it has been

00:14:46,280 --> 00:14:49,580
rehabilitated through component

00:14:47,600 --> 00:14:51,950
libraries and shareable code which react

00:14:49,580 --> 00:14:53,120
really shines that and of course it's

00:14:51,950 --> 00:14:54,620
not without these challenges but it's

00:14:53,120 --> 00:14:56,570
been really a really nice way in a safe

00:14:54,620 --> 00:14:57,740
way to break or monitor parts we've

00:14:56,570 --> 00:14:59,420
learned some interesting stuff along the

00:14:57,740 --> 00:15:04,130
way we've got some challenges and

00:14:59,420 --> 00:15:05,600
Nikki's going to talk about it yes so

00:15:04,130 --> 00:15:06,860
these are just some of the things that

00:15:05,600 --> 00:15:09,470
we would like to share some of the tips

00:15:06,860 --> 00:15:11,090
when it comes to evolving your codebase

00:15:09,470 --> 00:15:12,650
so one of the first things you should

00:15:11,090 --> 00:15:14,780
try and do is identify your biggest

00:15:12,650 --> 00:15:15,890
bottlenecks and your pain points so

00:15:14,780 --> 00:15:18,410
these could be things that are slowing

00:15:15,890 --> 00:15:19,640
you down as a developer it could be

00:15:18,410 --> 00:15:22,670
things that's slowing down the

00:15:19,640 --> 00:15:24,770
application and it could also be things

00:15:22,670 --> 00:15:27,310
that's just increasing your tech debt

00:15:24,770 --> 00:15:29,840
because everybody hates tech debt

00:15:27,310 --> 00:15:32,750
another point is it's you want to settle

00:15:29,840 --> 00:15:34,340
on a solution as a team so you want to

00:15:32,750 --> 00:15:34,980
have team discussions you want to be

00:15:34,340 --> 00:15:36,149
talking about

00:15:34,980 --> 00:15:38,190
like Thiago was saying we're

00:15:36,149 --> 00:15:40,170
investigating using gatsby for the

00:15:38,190 --> 00:15:41,399
journal we're doing that as a team we're

00:15:40,170 --> 00:15:43,230
trying to make sure it's the right

00:15:41,399 --> 00:15:44,399
solution we think that's definitely the

00:15:43,230 --> 00:15:47,790
right way to do it getting the whole

00:15:44,399 --> 00:15:49,860
team involved again you should try and

00:15:47,790 --> 00:15:52,050
make a plan to tackle everything

00:15:49,860 --> 00:15:56,040
progressively and then avoid big

00:15:52,050 --> 00:15:58,260
rewrites you don't want to rewrite your

00:15:56,040 --> 00:16:03,720
entire replication it's gonna take a

00:15:58,260 --> 00:16:05,880
long time so another point I want to

00:16:03,720 --> 00:16:07,709
basically add is that it's an absolute

00:16:05,880 --> 00:16:10,760
must that your product has to evolve

00:16:07,709 --> 00:16:13,949
over time this is so that you can

00:16:10,760 --> 00:16:15,810
deliver the most value to not only the

00:16:13,949 --> 00:16:18,480
business but to your customers your

00:16:15,810 --> 00:16:22,470
clients whoever and just provide the

00:16:18,480 --> 00:16:24,089
best user experience pretty obvious well

00:16:22,470 --> 00:16:26,459
see the longer you leave stuff like tech

00:16:24,089 --> 00:16:28,589
debt the longer you don't tackle those

00:16:26,459 --> 00:16:30,360
problems much harder it is to migrate

00:16:28,589 --> 00:16:32,880
away I've had bad experiences out in the

00:16:30,360 --> 00:16:36,029
past but we're evolving really quickly

00:16:32,880 --> 00:16:38,220
here at plumb so a fairly obvious point

00:16:36,029 --> 00:16:38,690
legacy code bases don't disappear

00:16:38,220 --> 00:16:42,139
overnight

00:16:38,690 --> 00:16:45,420
so as we keep saying we're evolving very

00:16:42,139 --> 00:16:48,540
rapidly but we've still got parts of the

00:16:45,420 --> 00:16:50,569
application that are still in stage zero

00:16:48,540 --> 00:16:53,160
pretty much for stage ones shall I say

00:16:50,569 --> 00:16:55,920
so don't try migrate your entire code

00:16:53,160 --> 00:16:58,740
base at once you should try and break

00:16:55,920 --> 00:17:00,389
things down into a much smaller chunk so

00:16:58,740 --> 00:17:01,860
as you said here slice your salami I

00:17:00,389 --> 00:17:05,490
didn't realize this was actually a term

00:17:01,860 --> 00:17:07,140
but salami slicing is actually a term so

00:17:05,490 --> 00:17:08,640
it's essentially exploring ways to slice

00:17:07,140 --> 00:17:11,510
your problem into much smaller chunks

00:17:08,640 --> 00:17:14,130
and that's a good way to deal with it so

00:17:11,510 --> 00:17:17,640
things like new features and

00:17:14,130 --> 00:17:20,730
functionality is like prime time to

00:17:17,640 --> 00:17:25,799
start exploring new ideas exploring new

00:17:20,730 --> 00:17:27,630
technologies and as we say migrating

00:17:25,799 --> 00:17:31,140
away from the monolith to things like

00:17:27,630 --> 00:17:33,330
micro services micro front-ends it may

00:17:31,140 --> 00:17:34,830
not always be the right time but as long

00:17:33,330 --> 00:17:36,720
as you're planning far enough in the

00:17:34,830 --> 00:17:39,630
future eventually you'll get to that

00:17:36,720 --> 00:17:42,090
point as you're saying if you manage

00:17:39,630 --> 00:17:45,179
your tech that well you can move rapidly

00:17:42,090 --> 00:17:47,270
as a team but still deliver value to the

00:17:45,179 --> 00:17:47,270
business

00:17:48,090 --> 00:17:52,740
so yeah I think it's best to say that I

00:17:50,670 --> 00:17:54,840
joined plan with a very exciting time

00:17:52,740 --> 00:17:56,880
obviously we're just getting started on

00:17:54,840 --> 00:17:58,800
some really exciting stuff I've only

00:17:56,880 --> 00:18:00,800
been here for a month but everything

00:17:58,800 --> 00:18:03,000
that we talked about today in this talk

00:18:00,800 --> 00:18:05,550
is what got me excited about joining

00:18:03,000 --> 00:18:07,260
plum in the first place if you're as

00:18:05,550 --> 00:18:08,790
excited as I am and you like some of the

00:18:07,260 --> 00:18:10,790
stuff we talked about definitely head to

00:18:08,790 --> 00:18:13,260
our careers page I'd love to talk to you

00:18:10,790 --> 00:18:15,450
but yeah that pretty much wraps up our

00:18:13,260 --> 00:18:18,090
talk so we hope that you found this

00:18:15,450 --> 00:18:19,470
inspirational or useful and of course if

00:18:18,090 --> 00:18:21,870
you got any questions for us and let us

00:18:19,470 --> 00:18:24,870
know otherwise we'll be moving around

00:18:21,870 --> 00:18:27,830
having a couple of beers and yeah we

00:18:24,870 --> 00:18:33,900
just let's say thank you for hosting us

00:18:27,830 --> 00:18:33,900

YouTube URL: https://www.youtube.com/watch?v=58A-yx3Suus


