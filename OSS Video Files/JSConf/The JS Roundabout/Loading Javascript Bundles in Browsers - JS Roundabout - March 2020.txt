Title: Loading Javascript Bundles in Browsers - JS Roundabout - March 2020
Publication date: 2020-03-08
Playlist: The JS Roundabout
Description: 
	Presented by David Merrilees, Principal Engineer at Tesco.

'Async loading JavaScript bundles - how Tesco asynchronously loads itâ€™s JS bundles and demonstrating the difference it makes to performance'.

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,000 --> 00:00:07,770
hi I got microphone and I'm David I work

00:00:03,570 --> 00:00:12,719
at Tesco I'm a developer um let me get

00:00:07,770 --> 00:00:15,299
my notes so I've worked at Tesco since

00:00:12,719 --> 00:00:17,250
2008 I'm very proud to work on the

00:00:15,299 --> 00:00:19,320
grocery home shopping site as we call it

00:00:17,250 --> 00:00:26,400
internally or Tesco groceries or

00:00:19,320 --> 00:00:31,650
whatever you call it and I've been a

00:00:26,400 --> 00:00:33,030
developer since 1995 and primarily on

00:00:31,650 --> 00:00:35,360
front-end that was more of a sort of

00:00:33,030 --> 00:00:37,350
polyglot developer for joining Tesco but

00:00:35,360 --> 00:00:40,110
I've had the opportunity to specialize

00:00:37,350 --> 00:00:45,329
on for an end over the last few years

00:00:40,110 --> 00:00:47,100
we've moved from a set of different

00:00:45,329 --> 00:00:49,260
websites on different stacks and

00:00:47,100 --> 00:00:52,410
different in how many countries win I I

00:00:49,260 --> 00:00:55,170
think I ate eight countries in lots of

00:00:52,410 --> 00:01:00,989
different countries to one stack which

00:00:55,170 --> 00:01:02,160
works for all countries and we've made

00:01:00,989 --> 00:01:09,270
some big achievements along the way

00:01:02,160 --> 00:01:12,630
there so today I'm going to talk about a

00:01:09,270 --> 00:01:14,610
an often considered topic I probably

00:01:12,630 --> 00:01:19,049
expect you all know parts of this but I

00:01:14,610 --> 00:01:21,900
don't see it being done very well in

00:01:19,049 --> 00:01:23,369
parts of Tesco and throughout the web it

00:01:21,900 --> 00:01:24,869
can be done a lot better so I want to

00:01:23,369 --> 00:01:26,759
show you how we've done it over the last

00:01:24,869 --> 00:01:29,130
few years hopefully you can take

00:01:26,759 --> 00:01:32,189
something from that and then I want to

00:01:29,130 --> 00:01:34,290
talk about where I think this topic is

00:01:32,189 --> 00:01:39,270
going over the next few years as well so

00:01:34,290 --> 00:01:43,130
um hmm before I do that and I've got

00:01:39,270 --> 00:01:48,030
some prizes up here and if you can get

00:01:43,130 --> 00:01:51,380
their Tesco themed obviously if anybody

00:01:48,030 --> 00:01:54,329
who doesn't work for Tesco can tell me

00:01:51,380 --> 00:01:57,619
what year the first grocery online

00:01:54,329 --> 00:02:03,320
shopping order was they will win this

00:01:57,619 --> 00:02:03,320
gone Marcel

00:02:04,540 --> 00:02:12,820
no earlier no that's the closest way I'm

00:02:11,060 --> 00:02:17,390
gonna give you the price it's actually

00:02:12,820 --> 00:02:26,740
1984 before the web I'm going to show

00:02:17,390 --> 00:02:36,710
you a sort short video on yeah 1984

00:02:26,740 --> 00:02:38,660
Gateshead a 72 year old grandmother sat

00:02:36,710 --> 00:02:42,870
in her armchair picked up a remote

00:02:38,660 --> 00:02:47,080
control and started a retail revolution

00:02:42,870 --> 00:02:49,790
[Music]

00:02:47,080 --> 00:02:52,100
mrs. James snowball was part of a local

00:02:49,790 --> 00:02:53,560
council initiative to help the elderly

00:02:52,100 --> 00:02:55,450
and infirm

00:02:53,560 --> 00:02:57,849
[Music]

00:02:55,450 --> 00:02:59,860
she'd been given a groundbreaking bit of

00:02:57,849 --> 00:03:03,870
computer technology to order groceries

00:02:59,860 --> 00:03:08,380
from our local tesco it was called

00:03:03,870 --> 00:03:12,550
videotex mrs. snowball never saw a

00:03:08,380 --> 00:03:16,440
computer never mrs. snowball saw a

00:03:12,550 --> 00:03:20,020
television connection to the television

00:03:16,440 --> 00:03:24,340
was a TV remote with an additional

00:03:20,020 --> 00:03:28,290
button which said phone what effectively

00:03:24,340 --> 00:03:32,500
we did was to take a domestic television

00:03:28,290 --> 00:03:33,750
in a home and turn it into the computer

00:03:32,500 --> 00:03:36,849
terminal

00:03:33,750 --> 00:03:36,849
[Music]

00:03:41,200 --> 00:03:47,450
it took just 15 minutes to teach this

00:03:44,629 --> 00:03:52,819
trailblazing silver surfer how to order

00:03:47,450 --> 00:03:56,269
online 1984 and you're doing online

00:03:52,819 --> 00:03:59,299
shopping yeah it was amazing and she

00:03:56,269 --> 00:04:00,830
dubbed it absolutely loved it what what

00:03:59,299 --> 00:04:03,010
do you think of it I think it's really

00:04:00,830 --> 00:04:03,010
different

00:04:03,940 --> 00:04:09,620
mrs. snowball ordered eggs

00:04:06,410 --> 00:04:14,840
marjorine and cold flakes reassuringly

00:04:09,620 --> 00:04:17,359
british five years before the world wide

00:04:14,840 --> 00:04:19,220
web was invented her order was sent down

00:04:17,359 --> 00:04:21,799
the phone line to her local branch of

00:04:19,220 --> 00:04:25,699
Tesco who picked the items off the shelf

00:04:21,799 --> 00:04:28,340
ready for delivery it changed the world

00:04:25,699 --> 00:04:31,850
of shopping when I'd done was to make

00:04:28,340 --> 00:04:34,310
shopping functional that stripped out

00:04:31,850 --> 00:04:37,669
all the theater made it functional

00:04:34,310 --> 00:04:41,660
anytime anyplace anywhere virtual

00:04:37,669 --> 00:04:43,820
merchandise so there's a couple of

00:04:41,660 --> 00:04:45,830
serious points in there and Tesco is

00:04:43,820 --> 00:04:48,470
actually quite innovative um

00:04:45,830 --> 00:04:50,180
access to groceries online is a lifeline

00:04:48,470 --> 00:04:51,530
to people that many people don't really

00:04:50,180 --> 00:04:53,720
appreciate we tend to think of it as a

00:04:51,530 --> 00:04:56,120
kind of big innovative flashy kind of

00:04:53,720 --> 00:04:57,830
front-end but really being able to buy

00:04:56,120 --> 00:04:59,300
food online is an important

00:04:57,830 --> 00:05:01,880
accessibility issue and that's part of

00:04:59,300 --> 00:05:04,639
what keeps me at Tesco because I'm very

00:05:01,880 --> 00:05:07,250
interested in that and so we have big

00:05:04,639 --> 00:05:13,520
social responsibility there which we do

00:05:07,250 --> 00:05:16,220
our best to fulfill and yeah

00:05:13,520 --> 00:05:18,050
anyway right next one okay wait so mmm

00:05:16,220 --> 00:05:20,810
we saw mrs. snowball as this big part of

00:05:18,050 --> 00:05:22,130
them what we do now is except access to

00:05:20,810 --> 00:05:24,200
groceries is extremely important so

00:05:22,130 --> 00:05:27,440
online is a lifeline for a lot of people

00:05:24,200 --> 00:05:31,090
and before I go any further with this

00:05:27,440 --> 00:05:34,940
and I've got a shameless plug for myself

00:05:31,090 --> 00:05:37,760
I nearly died in 2018 I was very ill I

00:05:34,940 --> 00:05:39,860
had to have open-heart surgery um and

00:05:37,760 --> 00:05:41,960
this weekend are gonna run a half

00:05:39,860 --> 00:05:44,900
marathon if anybody wants to sponsor me

00:05:41,960 --> 00:05:50,349
please do so the link is on the slide on

00:05:44,900 --> 00:05:50,349
every screen so

00:05:53,300 --> 00:05:58,830
so I want to talk about loading bundles

00:05:55,620 --> 00:06:00,720
now and so I've created a small

00:05:58,830 --> 00:06:02,340
application which demonstrates what I'm

00:06:00,720 --> 00:06:04,560
talking about so you'll you'll probably

00:06:02,340 --> 00:06:07,830
be used to this kind of execution maybe

00:06:04,560 --> 00:06:12,240
you've used to fur as well and where the

00:06:07,830 --> 00:06:13,740
script is downloaded via script tags and

00:06:12,240 --> 00:06:15,840
then it executes and that's done

00:06:13,740 --> 00:06:18,450
synchronously so I've got a simple

00:06:15,840 --> 00:06:20,570
application which loads some bundles

00:06:18,450 --> 00:06:25,440
you'll be used to this kind of

00:06:20,570 --> 00:06:28,290
implementation and the first example of

00:06:25,440 --> 00:06:31,170
loading bundles runs a just creates a

00:06:28,290 --> 00:06:33,390
HTML page and it loads three different

00:06:31,170 --> 00:06:36,150
script tags so the way that's organized

00:06:33,390 --> 00:06:39,440
like this we've got a script in the head

00:06:36,150 --> 00:06:41,730
like this normal declarative style and

00:06:39,440 --> 00:06:48,570
the effect of doing that when you

00:06:41,730 --> 00:06:53,220
refresh the page is test one two three

00:06:48,570 --> 00:06:55,410
so those script files are loaded in

00:06:53,220 --> 00:06:58,080
order and the execution order is

00:06:55,410 --> 00:07:03,510
preserved because they're synchronous

00:06:58,080 --> 00:07:09,930
too nice and simple so you can you can

00:07:03,510 --> 00:07:12,330
improve that by loading this code in the

00:07:09,930 --> 00:07:14,340
foot because if you if these script

00:07:12,330 --> 00:07:16,140
files take a while to load then

00:07:14,340 --> 00:07:18,680
obviously the page is going to take a

00:07:16,140 --> 00:07:23,220
while so we can see the effects of that

00:07:18,680 --> 00:07:24,180
by throttling these files and they're

00:07:23,220 --> 00:07:25,470
taking the whilst load and you're

00:07:24,180 --> 00:07:26,880
probably used to this kind of thing is

00:07:25,470 --> 00:07:28,740
the script file takes a while to load

00:07:26,880 --> 00:07:31,710
then the page takes a while to appear

00:07:28,740 --> 00:07:33,510
and so the page was requested the

00:07:31,710 --> 00:07:35,520
responses received but it still requests

00:07:33,510 --> 00:07:43,770
the file so loading the scripts in the

00:07:35,520 --> 00:07:45,960
foot obviates that problem but so this

00:07:43,770 --> 00:07:47,190
page appears but you still want to wait

00:07:45,960 --> 00:07:48,990
for these things to come down and

00:07:47,190 --> 00:07:50,580
they're still synchronously loaded so

00:07:48,990 --> 00:07:52,790
they're blocking other requests in the

00:07:50,580 --> 00:07:52,790
meantime

00:08:01,260 --> 00:08:07,000
so loading them in the foot like that

00:08:04,330 --> 00:08:08,440
and just gives you the page a little

00:08:07,000 --> 00:08:10,930
burly oh it's not really doing you many

00:08:08,440 --> 00:08:12,790
favors so what you can do instead of

00:08:10,930 --> 00:08:16,750
that and you probably do this yourselves

00:08:12,790 --> 00:08:23,490
is to add a defer a tribute to your

00:08:16,750 --> 00:08:23,490
script so in this example the

00:08:29,300 --> 00:08:34,790
this allows the the scripts to download

00:08:32,030 --> 00:08:40,670
in parallel to the rest of the downloads

00:08:34,790 --> 00:08:42,980
but it's um it still comes after the Dom

00:08:40,670 --> 00:08:45,230
parser is done now what we have at Tesco

00:08:42,980 --> 00:08:47,120
is a shopping trolley right so your

00:08:45,230 --> 00:08:48,500
pages are shopping trolley and you may

00:08:47,120 --> 00:08:50,360
be used to go into Amazon or something

00:08:48,500 --> 00:08:52,550
to add in a single item maybe two items

00:08:50,360 --> 00:08:54,140
your basket and then checking out when

00:08:52,550 --> 00:08:56,360
it comes to Tesco people check out

00:08:54,140 --> 00:08:58,160
hundreds of items at a time they put you

00:08:56,360 --> 00:09:00,350
know fifty different types of product

00:08:58,160 --> 00:09:02,270
into their basket the DOM is absolutely

00:09:00,350 --> 00:09:04,220
colossal so you have to wait for that to

00:09:02,270 --> 00:09:07,100
come down past and execute before you

00:09:04,220 --> 00:09:09,080
can actually see anything on the screen

00:09:07,100 --> 00:09:15,650
so defer really doesn't get your scripts

00:09:09,080 --> 00:09:17,480
in early enough to the page to work in

00:09:15,650 --> 00:09:20,090
that scenario so to fail will work for

00:09:17,480 --> 00:09:22,940
most so when the page is slow to load

00:09:20,090 --> 00:09:25,280
you you're not starting to request your

00:09:22,940 --> 00:09:26,780
scripts until the bottom of the page is

00:09:25,280 --> 00:09:28,070
received so if you can even put defer on

00:09:26,780 --> 00:09:31,790
them and you can put them at the bottom

00:09:28,070 --> 00:09:33,380
but you're not really loading it any

00:09:31,790 --> 00:09:34,250
quickly you just saw putting it off to a

00:09:33,380 --> 00:09:38,630
bit later

00:09:34,250 --> 00:09:40,970
so you may have come across preload so

00:09:38,630 --> 00:09:46,940
now we can add hints to the head of our

00:09:40,970 --> 00:09:49,250
document to get this stuff going faster

00:09:46,940 --> 00:09:53,360
but preloaded them you get the script in

00:09:49,250 --> 00:09:59,960
earlier into the DOM and but you can

00:09:53,360 --> 00:10:02,810
still do a bit better you can you can

00:09:59,960 --> 00:10:10,790
get your code loading and executing when

00:10:02,810 --> 00:10:14,030
it's ready by using async so so you can

00:10:10,790 --> 00:10:16,910
mark your scripts as async and off they

00:10:14,030 --> 00:10:19,850
go but the problem with async of course

00:10:16,910 --> 00:10:21,740
is that you are not preserving the

00:10:19,850 --> 00:10:24,800
execution order though it will execute

00:10:21,740 --> 00:10:26,710
in the order that it arrives so you need

00:10:24,800 --> 00:10:31,640
something to coordinate those scripts

00:10:26,710 --> 00:10:33,710
which will let execute them in the order

00:10:31,640 --> 00:10:35,690
that they're supposed to rather than the

00:10:33,710 --> 00:10:40,400
order in which they arrive and this gets

00:10:35,690 --> 00:10:41,930
them in a bit earlier in the I'm worried

00:10:40,400 --> 00:10:42,529
of going back to my keynote presentation

00:10:41,930 --> 00:10:44,709
because I find

00:10:42,529 --> 00:10:50,029
really difficult exit from it from here

00:10:44,709 --> 00:10:52,310
hmm but it means that the scripts can

00:10:50,029 --> 00:10:54,139
download and be ready to execute as soon

00:10:52,310 --> 00:10:57,199
as they're ready rather than waiting for

00:10:54,139 --> 00:11:01,699
the footer after a very large Dom object

00:10:57,199 --> 00:11:07,189
and this is what we do at Tesco so a

00:11:01,699 --> 00:11:09,259
simple wrapper script very show you can

00:11:07,189 --> 00:11:12,620
work out if you give it like an

00:11:09,259 --> 00:11:14,240
execution order for your script it can

00:11:12,620 --> 00:11:15,920
work out which script is currently

00:11:14,240 --> 00:11:20,749
executing using the current script

00:11:15,920 --> 00:11:23,089
object and leaks through everything

00:11:20,749 --> 00:11:24,559
that's loaded and then kind of you know

00:11:23,089 --> 00:11:26,839
executes them in the order all you need

00:11:24,559 --> 00:11:31,819
to do is wrap each script with this with

00:11:26,839 --> 00:11:33,439
this what we call it Girja to execute

00:11:31,819 --> 00:11:35,569
them in the intended order rather than

00:11:33,439 --> 00:11:39,499
the order in which they arrive so even

00:11:35,569 --> 00:11:43,009
though in this example these scripts

00:11:39,499 --> 00:11:46,059
have I can't quite expand it enough to

00:11:43,009 --> 00:11:46,059
show you the entire graph

00:11:49,069 --> 00:11:58,500
try and get over there yeah okay so even

00:11:55,949 --> 00:11:59,550
though script three arrived later than

00:11:58,500 --> 00:12:00,690
script for because they've been

00:11:59,550 --> 00:12:03,389
artificially fossils

00:12:00,690 --> 00:12:08,069
executed in the correct order and and

00:12:03,389 --> 00:12:11,069
you can see the effect of this on this

00:12:08,069 --> 00:12:12,540
video that I've prepared so no no disk

00:12:11,069 --> 00:12:14,579
to any of these other peoples but

00:12:12,540 --> 00:12:14,970
they're doing roughly the same thing as

00:12:14,579 --> 00:12:16,949
us

00:12:14,970 --> 00:12:19,110
they've got the same back end they're

00:12:16,949 --> 00:12:20,699
still there you know doing it almost

00:12:19,110 --> 00:12:21,509
functionally exactly the same kind of

00:12:20,699 --> 00:12:24,120
thing there's nothing different

00:12:21,509 --> 00:12:25,529
particularly about the technology except

00:12:24,120 --> 00:12:34,649
there's probably more people on our site

00:12:25,529 --> 00:12:38,639
but this is what happens we've done a to

00:12:34,649 --> 00:12:40,410
go now there's that there's more

00:12:38,639 --> 00:12:42,540
JavaScript on this site than there is on

00:12:40,410 --> 00:12:45,600
these other ones it's because we've let

00:12:42,540 --> 00:12:46,949
them let this page go and sort of freed

00:12:45,600 --> 00:12:48,990
it from the execution cycle of

00:12:46,949 --> 00:12:51,449
JavaScript that we're able to get it

00:12:48,990 --> 00:12:53,399
into the into the browser quicker now

00:12:51,449 --> 00:12:55,769
this is kind of received wisdom at Tesco

00:12:53,399 --> 00:13:01,500
and it's helped us a lot over the last

00:12:55,769 --> 00:13:02,910
few years and it was a bit of a faff to

00:13:01,500 --> 00:13:04,500
get it working and it was quite a lot of

00:13:02,910 --> 00:13:08,399
arguments about browser support because

00:13:04,500 --> 00:13:11,180
if you're when we first introduced it we

00:13:08,399 --> 00:13:13,889
were still supporting IE 9 and 10 and

00:13:11,180 --> 00:13:16,259
there's no current script object in IE 9

00:13:13,889 --> 00:13:17,819
and 10 so we had to kind of it meant

00:13:16,259 --> 00:13:18,990
abandoning script support for those

00:13:17,819 --> 00:13:21,720
browsers so we were just serving them

00:13:18,990 --> 00:13:24,990
HTML but now it's kind of not so

00:13:21,720 --> 00:13:26,670
contentious ie 11 you have to use a

00:13:24,990 --> 00:13:28,949
little bit of a hack which if anybody

00:13:26,670 --> 00:13:30,480
wants to see I will gladly show them

00:13:28,949 --> 00:13:32,040
afterwards but it's a bit difficult to

00:13:30,480 --> 00:13:34,559
demonstrate on here so rather than using

00:13:32,040 --> 00:13:36,959
the current script object you set a sink

00:13:34,559 --> 00:13:38,160
to false in the script property and then

00:13:36,959 --> 00:13:40,649
it will execute in order it's

00:13:38,160 --> 00:13:43,470
effectively giving it a kind of defer

00:13:40,649 --> 00:13:46,889
like mechanism but preserves the execute

00:13:43,470 --> 00:13:53,220
in order anyway mmm so I'd like to show

00:13:46,889 --> 00:13:55,800
where I think this will go now

00:13:53,220 --> 00:13:59,120
so modules have been around for a while

00:13:55,800 --> 00:13:59,120
in various forms and

00:14:00,860 --> 00:14:11,370
their browser support for them is now

00:14:03,449 --> 00:14:14,430
very good so the import using static

00:14:11,370 --> 00:14:17,220
imports can be supported in 90% of

00:14:14,430 --> 00:14:18,720
browsers I have got some can I use kind

00:14:17,220 --> 00:14:20,279
of graphs but it's roughly 90% I'm

00:14:18,720 --> 00:14:23,430
really wary of bringing this back up on

00:14:20,279 --> 00:14:25,230
their screen but I've got an example of

00:14:23,430 --> 00:14:27,629
how that can actually work in browsers

00:14:25,230 --> 00:14:33,029
now so I'm gonna I've got another price

00:14:27,629 --> 00:14:34,829
here I've got um script type module it's

00:14:33,029 --> 00:14:36,689
the first thing that's gonna execute so

00:14:34,829 --> 00:14:39,300
then it's gonna run console.log inline

00:14:36,689 --> 00:14:42,589
module and i've got a normal script

00:14:39,300 --> 00:14:45,120
source i've got scripts defer

00:14:42,589 --> 00:14:49,589
console.log deferred inline script and

00:14:45,120 --> 00:14:53,209
then a deferred module I can't remember

00:14:49,589 --> 00:14:55,439
the answer so good luck with this one

00:14:53,209 --> 00:15:02,550
what or do you think the messages are

00:14:55,439 --> 00:15:05,180
gonna be any any any guesses anybody

00:15:02,550 --> 00:15:05,180
want to hazard a guess

00:15:13,550 --> 00:15:18,290
so it's an inline module a normal script

00:15:16,640 --> 00:15:20,540
file which is synchronously requested

00:15:18,290 --> 00:15:24,019
and executed a deferred script which

00:15:20,540 --> 00:15:31,310
allows the page to proceed and a

00:15:24,019 --> 00:15:36,890
deferred external script therefore you

00:15:31,310 --> 00:15:38,959
can have a guess bc a bt yeah anybody

00:15:36,890 --> 00:15:43,640
else it's worth come on there's Bala

00:15:38,959 --> 00:15:48,079
clunk anybody else ABCD no that is

00:15:43,640 --> 00:15:50,930
definitely not right come on bacd

00:15:48,079 --> 00:15:56,269
okay wait so no one's saying a first so

00:15:50,930 --> 00:16:02,290
apart from their heckler okay right

00:15:56,269 --> 00:16:05,450
let's try it okay here they come

00:16:02,290 --> 00:16:07,940
number one script source deferred inline

00:16:05,450 --> 00:16:12,740
script inline module deferred script no

00:16:07,940 --> 00:16:17,839
one expected that PDAC I'm keeping this

00:16:12,740 --> 00:16:19,220
this is now mine okay

00:16:17,839 --> 00:16:23,300
wait there's another one up in a minute

00:16:19,220 --> 00:16:25,100
um right and if you think about it you

00:16:23,300 --> 00:16:28,690
can see why sorry I'm just gonna have to

00:16:25,100 --> 00:16:31,660
give my notes so that I can remember why

00:16:28,690 --> 00:16:36,260
okay so modules are deferred by default

00:16:31,660 --> 00:16:38,149
so script source was synchronous

00:16:36,260 --> 00:16:39,649
requested and it goes first they always

00:16:38,149 --> 00:16:41,120
go first there's Matt Walter you put it

00:16:39,649 --> 00:16:43,310
in it will always go above a deferred

00:16:41,120 --> 00:16:47,240
thing whether it's a normal deferred

00:16:43,310 --> 00:16:52,250
script or a deferred module so the

00:16:47,240 --> 00:16:53,839
inline mode in inline module then got

00:16:52,250 --> 00:16:55,970
precedent so snore more synchronous

00:16:53,839 --> 00:16:58,220
script sources get preference then

00:16:55,970 --> 00:17:00,470
deferred inline scripts then deferred

00:16:58,220 --> 00:17:01,730
normal scripts inline module and then

00:17:00,470 --> 00:17:04,280
the deferred script I said that wrong

00:17:01,730 --> 00:17:06,260
didn't I the first was lost right okay

00:17:04,280 --> 00:17:10,880
wait it's a bit wait there's a lot to

00:17:06,260 --> 00:17:18,309
remember there right

00:17:10,880 --> 00:17:18,309
static imported modules on the next page

00:17:22,990 --> 00:17:32,380
so okay right so here I've got a single

00:17:30,700 --> 00:17:33,760
module so this is deferred wide fault I

00:17:32,380 --> 00:17:35,830
don't need to put defer on it modules

00:17:33,760 --> 00:17:37,870
that if ever wonderful and it will

00:17:35,830 --> 00:17:39,929
request module one and which I've rather

00:17:37,870 --> 00:17:42,850
happily coded into this template here

00:17:39,929 --> 00:17:45,130
it's great hurry earlier and then I'm

00:17:42,850 --> 00:17:48,809
going to import two more modules from

00:17:45,130 --> 00:17:51,850
this module okay so it's going to import

00:17:48,809 --> 00:17:53,679
module 2 and module 3 which just have a

00:17:51,850 --> 00:17:55,870
default function which log something as

00:17:53,679 --> 00:17:59,020
you might expect a lost module 2 or

00:17:55,870 --> 00:18:00,429
module 3 what idea do you think the

00:17:59,020 --> 00:18:05,730
message is going to be don't forget

00:18:00,429 --> 00:18:10,420
Quantrill clunk so the messages will be

00:18:05,730 --> 00:18:12,400
module 1 is loaded module 2 default

00:18:10,420 --> 00:18:17,679
module 3 default entry in those modules

00:18:12,400 --> 00:18:20,170
I think I left a yeah I did so module 2

00:18:17,679 --> 00:18:22,600
loaded will it will run and then module

00:18:20,170 --> 00:18:24,160
2 says anybody want to have a guess of

00:18:22,600 --> 00:18:31,000
what all of those messages are going to

00:18:24,160 --> 00:18:33,179
be today one no two three one anybody

00:18:31,000 --> 00:18:33,179
else

00:18:39,240 --> 00:18:49,929
yeah okay right let's try it what is it

00:18:46,600 --> 00:18:55,679
two three one you records anymore

00:18:49,929 --> 00:18:58,110
anymore bottle clock three two one Wow

00:18:55,679 --> 00:19:01,890
okay here we go

00:18:58,110 --> 00:19:05,679
here they come two three one two three

00:19:01,890 --> 00:19:07,270
no one got that okay

00:19:05,679 --> 00:19:10,500
so what's happening here these are

00:19:07,270 --> 00:19:13,870
statically imported modules but they are

00:19:10,500 --> 00:19:19,750
synchronously statically imported even

00:19:13,870 --> 00:19:21,940
though they're deferred okay so yeah so

00:19:19,750 --> 00:19:23,650
the these are the in line messages that

00:19:21,940 --> 00:19:28,620
happened when the module the file gets

00:19:23,650 --> 00:19:28,620
loaded in the browser then you get the

00:19:29,490 --> 00:19:37,360
execution of both modules 2 & 3 the I

00:19:33,420 --> 00:19:39,610
did what's really weird though is that

00:19:37,360 --> 00:19:41,290
module 1 loaded when requested by the

00:19:39,610 --> 00:19:45,309
browser using the declarative method

00:19:41,290 --> 00:19:47,230
comes in third after 2 and 3 and it's

00:19:45,309 --> 00:19:49,450
trying to preserve the execution order

00:19:47,230 --> 00:19:53,800
the browser is trying to preserve the

00:19:49,450 --> 00:19:56,050
static execution order that is inferred

00:19:53,800 --> 00:20:02,760
by the declarative kind of syntax that's

00:19:56,050 --> 00:20:02,760
use of these so it gets worse

00:20:06,190 --> 00:20:21,529
right I then have dynamic imports okay

00:20:17,630 --> 00:20:26,600
right so module one is going to be

00:20:21,529 --> 00:20:29,000
requested I've marked at a sink and it

00:20:26,600 --> 00:20:30,710
is going to module one it's going to in

00:20:29,000 --> 00:20:32,270
turn load module two but at this time

00:20:30,710 --> 00:20:34,490
it's not going to use the static method

00:20:32,270 --> 00:20:39,110
it's going to use the import method and

00:20:34,490 --> 00:20:41,720
this returns a promise okay so you could

00:20:39,110 --> 00:20:43,039
write this as async whatever science he

00:20:41,720 --> 00:20:47,690
sent actually want to use or you can use

00:20:43,039 --> 00:20:49,539
their nor yeah but these are inherently

00:20:47,690 --> 00:20:54,260
async

00:20:49,539 --> 00:20:56,600
given that what or did you think these

00:20:54,260 --> 00:21:01,330
are gonna execute say the same

00:20:56,600 --> 00:21:04,940
same as before oops

00:21:01,330 --> 00:21:07,549
so modules here we loaded then motor

00:21:04,940 --> 00:21:09,409
through have you loaded and then module

00:21:07,549 --> 00:21:11,750
one it's going to execute the methods

00:21:09,409 --> 00:21:14,870
from imported from both those modules

00:21:11,750 --> 00:21:17,270
and there's some throttling on these but

00:21:14,870 --> 00:21:18,919
if anybody thinks they want to have a

00:21:17,270 --> 00:21:28,429
guess at this what do you think they can

00:21:18,919 --> 00:21:29,899
run it okay right they're running

00:21:28,429 --> 00:21:33,200
roughly in the order that you declare

00:21:29,899 --> 00:21:36,110
them in so that's what the order that

00:21:33,200 --> 00:21:38,029
they load it right there so there was

00:21:36,110 --> 00:21:39,289
some throttling on this so module two

00:21:38,029 --> 00:21:40,669
there wasn't really fair I'd left the

00:21:39,289 --> 00:21:44,299
throttling on this one sorry I'd copied

00:21:40,669 --> 00:21:46,190
and pasted it but they load in the order

00:21:44,299 --> 00:21:49,309
so they execute in the order that

00:21:46,190 --> 00:21:52,340
they're loaded and async means that they

00:21:49,309 --> 00:21:54,830
that all that kind of control that you

00:21:52,340 --> 00:21:56,630
need over each module needs to be

00:21:54,830 --> 00:21:57,640
restored if you want to use async in

00:21:56,630 --> 00:22:03,740
this manner

00:21:57,640 --> 00:22:05,000
okay right very confusing that's a bit

00:22:03,740 --> 00:22:06,500
disappointing sorry I thought you'd win

00:22:05,000 --> 00:22:08,120
this never mind I'll have to take these

00:22:06,500 --> 00:22:09,470
two bottles of plonk home and I don't

00:22:08,120 --> 00:22:13,950
actually drink I'll just take them home

00:22:09,470 --> 00:22:18,160
look at me okay

00:22:13,950 --> 00:22:20,260
right so what's next thing so how do you

00:22:18,160 --> 00:22:22,539
use this stuff then so I think you still

00:22:20,260 --> 00:22:25,990
need a kind of wrapper script around

00:22:22,539 --> 00:22:30,520
this um this has got some implications

00:22:25,990 --> 00:22:32,470
as well because um if you want to use

00:22:30,520 --> 00:22:34,660
dynamically imported modules which seems

00:22:32,470 --> 00:22:36,220
like the most flexible way to do it then

00:22:34,660 --> 00:22:37,990
you need that kind of wrapper script

00:22:36,220 --> 00:22:39,850
around them but you doesn't need to be

00:22:37,990 --> 00:22:42,160
as onerous as the version which works

00:22:39,850 --> 00:22:43,720
right eleven but then how are you going

00:22:42,160 --> 00:22:45,010
to make it work for I eleven well I did

00:22:43,720 --> 00:22:47,740
you can do it

00:22:45,010 --> 00:22:49,750
but let's not get too deep into that I

00:22:47,740 --> 00:22:52,090
would advocate not doing it I think you

00:22:49,750 --> 00:22:54,700
should just it's now time to serve ie

00:22:52,090 --> 00:23:00,159
eleven some HTML and let go and play

00:22:54,700 --> 00:23:02,320
with its marbles mmm the static imports

00:23:00,159 --> 00:23:04,330
are effectively synchronous although you

00:23:02,320 --> 00:23:06,669
can execute you can have them in your

00:23:04,330 --> 00:23:09,580
site then you're effectively just

00:23:06,669 --> 00:23:11,980
including another static and import and

00:23:09,580 --> 00:23:13,750
everything else in the browser our

00:23:11,980 --> 00:23:15,520
marketers deferred anyway so you don't

00:23:13,750 --> 00:23:18,059
really need to add that anymore

00:23:15,520 --> 00:23:18,059
the

00:23:25,740 --> 00:23:30,480
so I think it is worth doing given the

00:23:28,920 --> 00:23:32,190
performance advantages and there's

00:23:30,480 --> 00:23:36,809
tooling starting to come out to make all

00:23:32,190 --> 00:23:39,210
this work so I'm going to go back into

00:23:36,809 --> 00:23:42,150
keno now I'm gonna brave it okay right

00:23:39,210 --> 00:23:45,059
so this is browser support for script

00:23:42,150 --> 00:23:47,250
type module and it's pretty good it's

00:23:45,059 --> 00:23:49,500
basically this big red lump here that's

00:23:47,250 --> 00:23:51,090
really the problem particularly for

00:23:49,500 --> 00:23:53,040
something like Tesco where to get a lot

00:23:51,090 --> 00:23:55,620
of kind of people with a bit crappy

00:23:53,040 --> 00:23:57,360
technology using the site and I don't

00:23:55,620 --> 00:23:59,730
know you might work on the latest fancy

00:23:57,360 --> 00:24:04,320
startup but we don't get to do that so

00:23:59,730 --> 00:24:08,040
um using dynamic imports are slightly

00:24:04,320 --> 00:24:10,050
lower support but still pretty good and

00:24:08,040 --> 00:24:15,020
it's again it's re 11 that's making up

00:24:10,050 --> 00:24:17,910
the kind of majority of the problems the

00:24:15,020 --> 00:24:19,800
there are some problems of doing this so

00:24:17,910 --> 00:24:21,990
what the current received wisdom of

00:24:19,800 --> 00:24:24,360
loading scripting pages is that you mash

00:24:21,990 --> 00:24:25,980
everything together in a lump and then

00:24:24,360 --> 00:24:28,920
push that down the wire to people when

00:24:25,980 --> 00:24:30,720
they request it so web pack and other

00:24:28,920 --> 00:24:34,080
tools are used to kind of concatenate

00:24:30,720 --> 00:24:36,929
all your files into less requests and

00:24:34,080 --> 00:24:38,610
for a long time since about 2000 as I

00:24:36,929 --> 00:24:43,470
can remember making websites and tesco

00:24:38,610 --> 00:24:46,440
certainly and the fewer requests you

00:24:43,470 --> 00:24:52,470
have the faster your site will load but

00:24:46,440 --> 00:24:56,040
is that true anymore the there's another

00:24:52,470 --> 00:24:58,860
compare and there's a complication with

00:24:56,040 --> 00:25:00,240
modules in that they are inherently kind

00:24:58,860 --> 00:25:01,770
of made up with lots of little kind of

00:25:00,240 --> 00:25:04,890
files that you can post together to make

00:25:01,770 --> 00:25:06,990
one big file um and those are are

00:25:04,890 --> 00:25:09,120
statically analyzed when they load in

00:25:06,990 --> 00:25:10,830
the browser so the browser needs to go

00:25:09,120 --> 00:25:12,809
through okay I've got this module and

00:25:10,830 --> 00:25:14,670
then I'll load these other ones oh that

00:25:12,809 --> 00:25:16,110
import some more modules so this these

00:25:14,670 --> 00:25:18,240
requests are done in series so that

00:25:16,110 --> 00:25:21,210
could get very slow so really to make

00:25:18,240 --> 00:25:24,120
this work in browsers you need something

00:25:21,210 --> 00:25:25,890
which will kind of give the browser some

00:25:24,120 --> 00:25:28,559
idea of what all the modules are up

00:25:25,890 --> 00:25:32,370
front unless you want to concatenate

00:25:28,559 --> 00:25:37,020
them into a giant file still so there is

00:25:32,370 --> 00:25:39,120
also a realm module preload so unlike

00:25:37,020 --> 00:25:41,070
using preload for other

00:25:39,120 --> 00:25:42,660
I said so if you've loaded large images

00:25:41,070 --> 00:25:44,010
on your site before using preload or

00:25:42,660 --> 00:25:45,420
you've got something else something else

00:25:44,010 --> 00:25:49,140
that you need to stuff down the wire to

00:25:45,420 --> 00:25:52,020
people you need to use this there's some

00:25:49,140 --> 00:25:54,330
complexity when using modules with pre

00:25:52,020 --> 00:25:58,770
loads because modules have their own

00:25:54,330 --> 00:26:00,450
kind of security actually you need you

00:25:58,770 --> 00:26:02,250
need to kind of declare to the browser

00:26:00,450 --> 00:26:05,040
what the cause attributes for this thing

00:26:02,250 --> 00:26:08,520
are if they load across origin and and

00:26:05,040 --> 00:26:10,200
you also need to yeah you need to give

00:26:08,520 --> 00:26:14,370
more information about the preload to

00:26:10,200 --> 00:26:16,620
browsers so that it can start to pass

00:26:14,370 --> 00:26:18,330
and well not execute both kind of get

00:26:16,620 --> 00:26:21,929
ready to use it in the way that it's

00:26:18,330 --> 00:26:24,120
intended and browser support for that is

00:26:21,929 --> 00:26:25,580
not great at the moment but it's coming

00:26:24,120 --> 00:26:28,110
but I think this is kind of a

00:26:25,580 --> 00:26:30,270
requirement to use modules in the

00:26:28,110 --> 00:26:32,190
browser so do we need to concatenate

00:26:30,270 --> 00:26:35,190
files anyway I think this needs to be

00:26:32,190 --> 00:26:36,720
answered as well so um so this is

00:26:35,190 --> 00:26:38,520
research done by someone else's and not

00:26:36,720 --> 00:26:40,980
done by me but I thought it was very

00:26:38,520 --> 00:26:42,090
useful so we have HTTP to now I think

00:26:40,980 --> 00:26:49,350
pretty much everyone's using our

00:26:42,090 --> 00:26:52,110
browsers support it the do we need to

00:26:49,350 --> 00:26:54,570
start do we need to concatenate all that

00:26:52,110 --> 00:26:57,150
fire together not really no so if you've

00:26:54,570 --> 00:26:58,620
got a thousand files then yeah you do

00:26:57,150 --> 00:27:00,600
need to reduce the amount of requests

00:26:58,620 --> 00:27:02,730
that's much slower if you're using six

00:27:00,600 --> 00:27:03,390
files then that's great but there's no

00:27:02,730 --> 00:27:05,550
difference

00:27:03,390 --> 00:27:09,270
practically between six files and fifty

00:27:05,550 --> 00:27:14,010
files and that to me is the difference

00:27:09,270 --> 00:27:16,110
between using kind of a bundler with a

00:27:14,010 --> 00:27:18,240
lot of complexity around it and then

00:27:16,110 --> 00:27:21,270
smashing everything together into a few

00:27:18,240 --> 00:27:22,340
bundles and the difference between not

00:27:21,270 --> 00:27:26,990
doing that

00:27:22,340 --> 00:27:29,280
which is obviously much easier and so I

00:27:26,990 --> 00:27:31,530
think you can see where this is kind of

00:27:29,280 --> 00:27:35,040
going the tooling for this the tooling

00:27:31,530 --> 00:27:38,160
to start using modules in the browser

00:27:35,040 --> 00:27:39,630
now and this is why I've been playing

00:27:38,160 --> 00:27:43,410
around with I've not got very far with

00:27:39,630 --> 00:27:45,330
it I've got an example but it statically

00:27:43,410 --> 00:27:49,470
analyzes your module tree for you and

00:27:45,330 --> 00:27:51,840
build a site for you but it doesn't kind

00:27:49,470 --> 00:27:52,920
of smush stuff into into one lump

00:27:51,840 --> 00:27:54,690
anymore

00:27:52,920 --> 00:27:56,400
I recommend trying that and having a go

00:27:54,690 --> 00:28:00,410
over there but this is roughly the

00:27:56,400 --> 00:28:03,330
direction I think all of this kind of

00:28:00,410 --> 00:28:05,910
these related technologies are going so

00:28:03,330 --> 00:28:08,730
we've got modules in browsers using

00:28:05,910 --> 00:28:09,990
dynamic imports if you want to be a sync

00:28:08,730 --> 00:28:12,810
if you've got a good use case for that

00:28:09,990 --> 00:28:17,640
and then we've also got tools like

00:28:12,810 --> 00:28:19,590
snow-packed module changes in the

00:28:17,640 --> 00:28:22,770
browser like module preload and also

00:28:19,590 --> 00:28:26,160
ie11 dying a death but this is roughly

00:28:22,770 --> 00:28:31,080
the direction that's I think this

00:28:26,160 --> 00:28:32,430
technology is going anyway and I think

00:28:31,080 --> 00:28:36,210
that's about everything that I wanted to

00:28:32,430 --> 00:28:38,100
say it's a lot of money so it's it's a

00:28:36,210 --> 00:28:39,990
small percentage but it's a lot of money

00:28:38,100 --> 00:28:41,130
it's also disproportionate for Tesco

00:28:39,990 --> 00:28:44,220
because it's much more of an everyman

00:28:41,130 --> 00:28:47,160
kind of site than say I don't know st.

00:28:44,220 --> 00:28:48,990
really cool so it's it's not in consider

00:28:47,160 --> 00:28:52,470
I'm out of money but with tools like

00:28:48,990 --> 00:28:54,330
reacts and isomorphic kind of rendering

00:28:52,470 --> 00:28:56,220
you can tweak it we can I think

00:28:54,330 --> 00:28:59,940
realistically say to people here's a

00:28:56,220 --> 00:29:02,540
HTML page they'll forgive you for that

00:28:59,940 --> 00:29:04,830
we've done it before and not serve them

00:29:02,540 --> 00:29:06,660
javascript and also miss out a bunch of

00:29:04,830 --> 00:29:11,640
complexity around bundling I think it's

00:29:06,660 --> 00:29:13,020
worth doing and we have shops in a bunch

00:29:11,640 --> 00:29:15,330
of different countries we usually test

00:29:13,020 --> 00:29:19,320
stuff out in Slovakia because there's

00:29:15,330 --> 00:29:21,000
not many people there so yeah if you see

00:29:19,320 --> 00:29:22,440
every shopping on the Slovakian grocery

00:29:21,000 --> 00:29:25,100
site and it goes a lot faster suddenly

00:29:22,440 --> 00:29:25,100

YouTube URL: https://www.youtube.com/watch?v=Bwp4oosmWco


