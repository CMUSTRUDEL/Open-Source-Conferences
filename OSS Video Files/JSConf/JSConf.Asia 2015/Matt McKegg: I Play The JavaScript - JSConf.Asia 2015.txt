Title: Matt McKegg: I Play The JavaScript - JSConf.Asia 2015
Publication date: 2015-12-25
Playlist: JSConf.Asia 2015
Description: 
	Find out how I use JavaScript to power my live electronic music performances. Come see (and hear) Web Audio, MIDI, and electron in action!

A JavaScript hacker and backyard musician and from Wellington, NZ. Lover of all things open and modular. I spend most of my time pressing buttons of various shapes, sizes and colours. Sometimes these buttons make sounds.


JSConf.Asia - Red Dot Design Museum, Singapore - 20 November 2015.

Source: http://2015.jsconf.asia
Slides: https://github.com/mmckegg/jsconfasia-talk-2015

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:06,170 --> 00:00:14,940
hey everyone how's it goin uh yeah I'm

00:00:12,389 --> 00:00:18,500
Matt and I'm from New Zealand as you

00:00:14,940 --> 00:00:21,060
probably didn't know from my accent is

00:00:18,500 --> 00:00:25,590
anyone here from New Zealand by any

00:00:21,060 --> 00:00:27,359
chance yes excellent I was I had this

00:00:25,590 --> 00:00:29,279
whole list of things I was gonna ask so

00:00:27,359 --> 00:00:30,840
no one here was from New Zealand I was

00:00:29,279 --> 00:00:34,050
gonna say well is anyone heard of New

00:00:30,840 --> 00:00:38,010
Zealand and has anyway yeah okay great

00:00:34,050 --> 00:00:41,250
I'm just making sure cool so yeah I I

00:00:38,010 --> 00:00:44,760
make music with computers and the

00:00:41,250 --> 00:00:46,320
JavaScript part is pretty recent I've

00:00:44,760 --> 00:00:49,469
been doing music a lot longer than I've

00:00:46,320 --> 00:00:51,719
been writing JavaScript but I'm gonna

00:00:49,469 --> 00:00:53,640
tell you today about how the two worlds

00:00:51,719 --> 00:00:59,039
collided for me about three years ago

00:00:53,640 --> 00:01:02,370
and you're gonna hear what I'm going to

00:00:59,039 --> 00:01:05,820
tell you basically the entire story so

00:01:02,370 --> 00:01:08,340
yes sit back and enjoy and hopefully at

00:01:05,820 --> 00:01:11,070
the end I'll be able to show you my new

00:01:08,340 --> 00:01:14,760
zakat that I'm developing and I'll try

00:01:11,070 --> 00:01:20,009
and make a song with it based on some

00:01:14,760 --> 00:01:23,220
stuff from yesterday so computer music

00:01:20,009 --> 00:01:27,090
I'm sure a few of us here are familiar

00:01:23,220 --> 00:01:29,100
with the concept so this is Ableton Live

00:01:27,090 --> 00:01:33,990
this is the software that I've used for

00:01:29,100 --> 00:01:35,970
quite a long time now and it's um it's a

00:01:33,990 --> 00:01:38,009
way of making music where you you're

00:01:35,970 --> 00:01:41,130
basically putting all of the individual

00:01:38,009 --> 00:01:45,810
notes in by hand while with the mouse so

00:01:41,130 --> 00:01:48,450
I have about five six different

00:01:45,810 --> 00:01:53,720
instruments here and so the first one

00:01:48,450 --> 00:01:53,720
we've got is a synthesized bell sound

00:01:54,650 --> 00:01:58,170
so all those sounds are hearing I've

00:01:56,790 --> 00:02:00,450
actually gone in here and I have

00:01:58,170 --> 00:02:02,700
manually put them in with a mouse

00:02:00,450 --> 00:02:04,830
actually I may have recorded this using

00:02:02,700 --> 00:02:08,490
a MIDI keyboard but I'll get to it later

00:02:04,830 --> 00:02:10,470
and but but the the point is that I have

00:02:08,490 --> 00:02:12,240
complete control over everything that is

00:02:10,470 --> 00:02:14,280
happening here I I see the entire

00:02:12,240 --> 00:02:17,640
timeline out in front of me very much

00:02:14,280 --> 00:02:21,990
like a composer would I'm not actually

00:02:17,640 --> 00:02:23,580
playing an instrument Here I am telling

00:02:21,990 --> 00:02:25,230
the computer where I want to hear sounds

00:02:23,580 --> 00:02:27,840
so I'm gonna play you a little bit of

00:02:25,230 --> 00:02:53,959
this song just so you can hear how it

00:02:27,840 --> 00:02:57,209
all comes together so you see is a

00:02:53,959 --> 00:02:58,890
marker moving left to right showing the

00:02:57,209 --> 00:03:02,480
position and you can see the events

00:02:58,890 --> 00:03:02,480
being played as it Scrolls past

00:03:24,790 --> 00:03:33,140
Thanks so with this way of making music

00:03:30,200 --> 00:03:37,520
it's more like you're painting your song

00:03:33,140 --> 00:03:39,920
rather than playing your song

00:03:37,520 --> 00:03:43,220
you're in complete control of every

00:03:39,920 --> 00:03:44,599
single thing that happens and it's

00:03:43,220 --> 00:03:45,860
actually quite a fun way to make music

00:03:44,599 --> 00:03:47,959
particularly at first because you don't

00:03:45,860 --> 00:03:50,720
actually have to be particularly skilled

00:03:47,959 --> 00:03:54,709
at anything you can just put things in

00:03:50,720 --> 00:03:57,200
and they make cool sounds and that's

00:03:54,709 --> 00:03:59,510
what I was doing back in 2006 I was just

00:03:57,200 --> 00:04:02,269
having fun making interesting

00:03:59,510 --> 00:04:03,830
compositions on my computer I had a few

00:04:02,269 --> 00:04:05,480
friends that were interested in too and

00:04:03,830 --> 00:04:07,250
we were just just basically hanging out

00:04:05,480 --> 00:04:12,200
at school not doing any work and just

00:04:07,250 --> 00:04:14,150
making music and then I grabbed a bunch

00:04:12,200 --> 00:04:18,979
of all the songs that I've made and I

00:04:14,150 --> 00:04:22,880
uploaded them to the Internet and I made

00:04:18,979 --> 00:04:24,950
some fancy cover art and I don't know

00:04:22,880 --> 00:04:27,710
why but some music blog thought it was

00:04:24,950 --> 00:04:29,450
really good and they wrote this

00:04:27,710 --> 00:04:31,789
wonderful review all about my album and

00:04:29,450 --> 00:04:33,560
then it got on some links sharing

00:04:31,789 --> 00:04:35,270
services and before I knew what I was

00:04:33,560 --> 00:04:37,130
getting hundreds of visitors every day

00:04:35,270 --> 00:04:39,650
and all these people were downloading my

00:04:37,130 --> 00:04:40,820
album and the next thing that happened

00:04:39,650 --> 00:04:46,610
was I started receiving some fan mail

00:04:40,820 --> 00:04:48,500
and I started off you know like oh this

00:04:46,610 --> 00:04:51,380
is great we love your music and the next

00:04:48,500 --> 00:04:54,979
minute was like come play your music at

00:04:51,380 --> 00:04:59,270
our University and how on earth do you

00:04:54,979 --> 00:05:02,600
play this this is not I didn't actually

00:04:59,270 --> 00:05:05,060
perform it it's it was something that I

00:05:02,600 --> 00:05:08,690
it's like asking asking a painter to

00:05:05,060 --> 00:05:10,700
play their work live you can't really do

00:05:08,690 --> 00:05:16,360
that but you can get them to exhibit

00:05:10,700 --> 00:05:16,360
their work so a reproduction of the work

00:05:17,770 --> 00:05:23,150
so yeah how do you play me as a computer

00:05:20,419 --> 00:05:24,590
music laughs and the obvious way is just

00:05:23,150 --> 00:05:26,960
to recruit recruit a bunch of musicians

00:05:24,590 --> 00:05:28,190
to actually play all the individual

00:05:26,960 --> 00:05:30,230
parts live for you

00:05:28,190 --> 00:05:32,360
so maybe you can play the cool synth

00:05:30,230 --> 00:05:34,630
flying or whatever but you have someone

00:05:32,360 --> 00:05:37,900
else playing the drums and someone else

00:05:34,630 --> 00:05:40,580
playing you know the other things and

00:05:37,900 --> 00:05:42,920
there is actually a pretty cool way of

00:05:40,580 --> 00:05:45,980
playing electronic music live I really

00:05:42,920 --> 00:05:48,440
enjoy bands that do that but at the same

00:05:45,980 --> 00:05:50,000
time it's it's a lot of work and it's

00:05:48,440 --> 00:05:52,070
not the same thing you're actually

00:05:50,000 --> 00:05:53,480
having to go back to the beginning and

00:05:52,070 --> 00:05:58,910
refigure out how you gonna play your

00:05:53,480 --> 00:06:00,560
song live so I I have never done this

00:05:58,910 --> 00:06:02,030
and I would love to do this play yeah

00:06:00,560 --> 00:06:03,590
this is this what obviously wasn't the

00:06:02,030 --> 00:06:04,760
way forward you need you to pay them

00:06:03,590 --> 00:06:07,400
obviously you need to pay the musicians

00:06:04,760 --> 00:06:09,560
and yeah I'm I just want to work on my

00:06:07,400 --> 00:06:14,870
own so really the only other option I

00:06:09,560 --> 00:06:16,820
have is to DJ my music and this is

00:06:14,870 --> 00:06:18,710
actually the way the majority of

00:06:16,820 --> 00:06:21,770
electronic musicians or computer

00:06:18,710 --> 00:06:24,950
musicians play their music live they are

00:06:21,770 --> 00:06:28,760
really just playing you what they

00:06:24,950 --> 00:06:31,340
created in their studio it may be as

00:06:28,760 --> 00:06:33,470
simple as changing the tempo a little

00:06:31,340 --> 00:06:35,630
bit and mixing the songs together or it

00:06:33,470 --> 00:06:37,430
could get elaborate and you could split

00:06:35,630 --> 00:06:41,600
all the individual parts of your song up

00:06:37,430 --> 00:06:49,840
you take like that sound there that loop

00:06:41,600 --> 00:06:53,710
and the drums and then put them all on a

00:06:49,840 --> 00:06:53,710
special launcher

00:06:57,810 --> 00:07:02,380
like this where I have all of the

00:07:00,580 --> 00:07:25,420
individual parts of the song laid out in

00:07:02,380 --> 00:07:33,070
front of me synth up here drums and we

00:07:25,420 --> 00:07:36,160
have Hardware controllers so this device

00:07:33,070 --> 00:07:38,530
here is called a launchpad it was

00:07:36,160 --> 00:07:40,360
designed for being used with this

00:07:38,530 --> 00:07:43,000
software here called Ableton Live and

00:07:40,360 --> 00:07:46,390
you can see that this grid of all my

00:07:43,000 --> 00:07:50,590
clips actually corresponds to this grid

00:07:46,390 --> 00:07:53,620
so when I push that there that clip

00:07:50,590 --> 00:07:56,670
launches I push this button here their

00:07:53,620 --> 00:07:56,670
whole line watches

00:07:58,650 --> 00:08:05,610
and I also have some knobs up here which

00:08:02,730 --> 00:08:08,480
control a few parameters like the filter

00:08:05,610 --> 00:08:08,480
so

00:08:36,140 --> 00:08:45,420
so yeah that that works alright but if I

00:08:42,990 --> 00:08:47,190
wanted to veer off the path at all if I

00:08:45,420 --> 00:08:50,250
wanted to just play the synth a little

00:08:47,190 --> 00:08:54,480
bit different I'm kind of stuck with I'm

00:08:50,250 --> 00:08:55,830
just stuck with this pattern here I'm

00:08:54,480 --> 00:08:57,900
not exactly going to come over to my

00:08:55,830 --> 00:09:01,980
computer one plane and start plucking an

00:08:57,900 --> 00:09:07,680
extra notes because that's that's stupid

00:09:01,980 --> 00:09:11,550
and not cool and I want to be cool we

00:09:07,680 --> 00:09:14,000
can add another controller and that will

00:09:11,550 --> 00:09:16,800
let me play one of the instruments live

00:09:14,000 --> 00:09:22,380
so I'm still using this for all my drums

00:09:16,800 --> 00:09:25,350
etc etc but one of the synthesizers I

00:09:22,380 --> 00:09:30,540
could play live on top so to do that I

00:09:25,350 --> 00:09:33,510
would just select it from my list and

00:09:30,540 --> 00:09:35,750
turn the input on and now when I play it

00:09:33,510 --> 00:09:35,750
here

00:09:48,480 --> 00:09:55,140
and here lies the problem I can't even

00:09:51,400 --> 00:10:03,370
play the keyboard so Who am I kidding

00:09:55,140 --> 00:10:05,290
yeah so all this this this is quite a

00:10:03,370 --> 00:10:10,240
kind of quite a reasonable way of

00:10:05,290 --> 00:10:13,030
playing your compositions alive but I

00:10:10,240 --> 00:10:14,470
actually don't really find that that fun

00:10:13,030 --> 00:10:16,810
and I tried doing this for a little

00:10:14,470 --> 00:10:18,580
while and it was just it was just so

00:10:16,810 --> 00:10:19,750
much work setting up everything and

00:10:18,580 --> 00:10:21,220
putting in the perfect place and then

00:10:19,750 --> 00:10:24,460
when you actually went to play it you

00:10:21,220 --> 00:10:26,140
had no control you know I wanted to feel

00:10:24,460 --> 00:10:27,610
like he could tourists they can just get

00:10:26,140 --> 00:10:29,500
up on stage they can just start playing

00:10:27,610 --> 00:10:30,550
their instrument and they can improvise

00:10:29,500 --> 00:10:31,690
they can do it or they like they can

00:10:30,550 --> 00:10:33,400
have other people playing along with

00:10:31,690 --> 00:10:36,580
them and like a jazz band they just

00:10:33,400 --> 00:10:38,980
groove and it's great I want to be able

00:10:36,580 --> 00:10:45,640
to do that with electronic computer

00:10:38,980 --> 00:10:46,990
music and well yeah obviously JavaScript

00:10:45,640 --> 00:10:50,290
you kind of saw that one coming right

00:10:46,990 --> 00:10:51,700
because it's J's cough bs JavaScript

00:10:50,290 --> 00:10:54,730
that was where I went next

00:10:51,700 --> 00:10:57,100
and the reason I went to JavaScript was

00:10:54,730 --> 00:11:03,190
because I know JavaScript I don't know

00:10:57,100 --> 00:11:06,160
any other languages and yeah I thought

00:11:03,190 --> 00:11:09,460
let's just let's just see if we can if

00:11:06,160 --> 00:11:16,450
we can add another layer of expression

00:11:09,460 --> 00:11:19,690
to this software here so instead of me

00:11:16,450 --> 00:11:22,930
having to play everything live

00:11:19,690 --> 00:11:24,850
or having to rely on the clips that I've

00:11:22,930 --> 00:11:31,960
already set up I want something in

00:11:24,850 --> 00:11:33,940
between where I can play something and

00:11:31,960 --> 00:11:38,770
head a button and that will keep looping

00:11:33,940 --> 00:11:40,960
or I can go into a mode where everything

00:11:38,770 --> 00:11:45,970
is triggered perfectly on beat because

00:11:40,960 --> 00:11:48,160
that is kind of the most important sound

00:11:45,970 --> 00:11:49,990
of computer music so everything is

00:11:48,160 --> 00:11:52,780
perfectly quantized with the tempo and

00:11:49,990 --> 00:11:55,780
if you want to make computer music it

00:11:52,780 --> 00:11:58,990
has to be spot-on it has to be perfectly

00:11:55,780 --> 00:12:07,230
in time and playing this isn't going to

00:11:58,990 --> 00:12:07,230
get me that so what I want to do here is

00:12:07,770 --> 00:12:13,150
intercept the messages from my MIDI

00:12:10,390 --> 00:12:21,790
devices do something clever to them and

00:12:13,150 --> 00:12:25,950
then send them to Ableton Live so this

00:12:21,790 --> 00:12:28,960
device here uses a protocol called MIDI

00:12:25,950 --> 00:12:31,000
MIDI was invented in about nineteen

00:12:28,960 --> 00:12:33,220
eighty-something so it's quite an old

00:12:31,000 --> 00:12:38,700
protocol but that makes it really simple

00:12:33,220 --> 00:12:41,170
and every music software today

00:12:38,700 --> 00:12:44,230
implements this protocol and just about

00:12:41,170 --> 00:12:47,050
every hardware controller implements the

00:12:44,230 --> 00:12:49,420
protocol too so just quickly this does

00:12:47,050 --> 00:12:50,970
not make any sound on its own all it is

00:12:49,420 --> 00:12:55,410
capable of doing is sending messages

00:12:50,970 --> 00:12:55,410
saying which button has been pressed

00:12:56,840 --> 00:13:09,990
so using this little bit of JavaScript

00:13:00,920 --> 00:13:11,310
oops we can see what's going what the

00:13:09,990 --> 00:13:21,300
messages are that are coming out of this

00:13:11,310 --> 00:13:22,740
device so that looks pretty simple right

00:13:21,300 --> 00:13:24,300
it's just a bunch of numbers there

00:13:22,740 --> 00:13:25,620
there's only three numbers we can deal

00:13:24,300 --> 00:13:28,680
with three numbers we're not passing

00:13:25,620 --> 00:13:31,470
some complex protocol here so the first

00:13:28,680 --> 00:13:37,040
number sorry the first button I push

00:13:31,470 --> 00:13:42,270
gives us 144 48 and then either at a

00:13:37,040 --> 00:13:45,420
some number or 0 so I push it harder we

00:13:42,270 --> 00:13:52,110
get a high number if I push it softer we

00:13:45,420 --> 00:13:56,280
get a small number and it goes to 0 when

00:13:52,110 --> 00:13:58,170
you let go well this it's complicated

00:13:56,280 --> 00:14:01,380
but that's the easy answer it goes to 0

00:13:58,170 --> 00:14:03,060
when you let go if anyone's done any

00:14:01,380 --> 00:14:07,680
MIDI stuff they'll know what I'm talking

00:14:03,060 --> 00:14:12,890
about there maybe so as I go up the

00:14:07,680 --> 00:14:12,890
scale the number in the middle increases

00:14:17,070 --> 00:14:35,890
and octaves that's the zero note it's

00:14:25,540 --> 00:14:38,260
beautiful now if we wanting to intercept

00:14:35,890 --> 00:14:40,990
the messages we can capture them easy

00:14:38,260 --> 00:14:44,350
enough but how do we then send them back

00:14:40,990 --> 00:14:46,150
to Ableton Live to actually play the

00:14:44,350 --> 00:14:49,270
things we're processing so at the moment

00:14:46,150 --> 00:14:50,380
I'm only peeking in to the things that

00:14:49,270 --> 00:14:52,690
are coming out of here I'm not actually

00:14:50,380 --> 00:14:55,210
able to change it in any way but this

00:14:52,690 --> 00:14:58,660
little bit of code here lets me create

00:14:55,210 --> 00:15:02,020
what's called a virtual midi port so I

00:14:58,660 --> 00:15:06,240
can pretend that I am a MIDI keyboard

00:15:02,020 --> 00:15:06,240
but it's actually my own JavaScript code

00:15:08,580 --> 00:15:18,190
so now if I run this nothing happens yet

00:15:13,980 --> 00:15:22,780
but in this list here we now have a new

00:15:18,190 --> 00:15:26,620
keyboard called JavaScript music so I

00:15:22,780 --> 00:15:29,070
can hook that up here and now if I run

00:15:26,620 --> 00:15:29,070
this again

00:15:32,550 --> 00:15:41,020
so that was node telling Ableton Live

00:15:37,120 --> 00:15:43,150
what sounds to play and for some reason

00:15:41,020 --> 00:15:45,300
it didn't work as well as oh I missed

00:15:43,150 --> 00:15:45,300
one

00:15:49,840 --> 00:15:55,100
so I'm sending messages to both the to

00:15:52,970 --> 00:16:02,150
the two first instruments so they play

00:15:55,100 --> 00:16:04,400
the same thing now this device here both

00:16:02,150 --> 00:16:06,110
of these devices they also use MIDI it's

00:16:04,400 --> 00:16:08,120
the exact same protocol that this is

00:16:06,110 --> 00:16:10,820
using so I can use the exact same

00:16:08,120 --> 00:16:17,590
technique to intercept the messages from

00:16:10,820 --> 00:16:17,590
the launch pads whoops

00:16:19,090 --> 00:16:22,420
frame time

00:16:27,870 --> 00:16:35,810
and now when I push buttons here you can

00:16:31,650 --> 00:16:40,860
see the same messages coming up whoops

00:16:35,810 --> 00:16:42,480
I'm just gonna disconnect from live

00:16:40,860 --> 00:16:46,460
after I'm able to live otherwise things

00:16:42,480 --> 00:16:51,240
would be crazy okay so we've got one

00:16:46,460 --> 00:16:52,620
4401 27 let go it goes to zero so it's

00:16:51,240 --> 00:16:54,270
just counting up from zero all the way

00:16:52,620 --> 00:16:58,080
along we get to the end of the line

00:16:54,270 --> 00:17:02,640
though and it goes to 16 so we've got 8

00:16:58,080 --> 00:17:03,960
here and then 16 and that could make our

00:17:02,640 --> 00:17:05,970
lives a little bit trickier in the

00:17:03,960 --> 00:17:11,970
future but luckily I know how to solve

00:17:05,970 --> 00:17:14,220
it with maths now if we send the same

00:17:11,970 --> 00:17:19,050
message back to the launch pad again

00:17:14,220 --> 00:17:21,870
that we just received it will light up

00:17:19,050 --> 00:17:26,040
that button I don't know if you can see

00:17:21,870 --> 00:17:29,120
that on the projection but that button

00:17:26,040 --> 00:17:29,120
is lighting up when I press it

00:17:38,179 --> 00:17:42,870
it's really loud you can all hear me

00:17:40,830 --> 00:17:46,049
right excellent

00:17:42,870 --> 00:17:50,490
okay I'll just I'll just play along with

00:17:46,049 --> 00:17:54,240
the wonderful rhythm outside so how can

00:17:50,490 --> 00:17:56,220
we turn this stream of MIDI data into an

00:17:54,240 --> 00:17:58,019
object that is really easy for us to

00:17:56,220 --> 00:17:59,940
transform in interesting ways

00:17:58,019 --> 00:18:06,120
so we're talking about being able to

00:17:59,940 --> 00:18:09,779
loop the playback so oops I missed

00:18:06,120 --> 00:18:11,250
something I know I didn't know if I we

00:18:09,779 --> 00:18:14,970
want to better loop the playback we want

00:18:11,250 --> 00:18:18,179
to be able to quantize it align it so

00:18:14,970 --> 00:18:20,940
I'm a real fan of the observable pattern

00:18:18,179 --> 00:18:24,029
and this is my favorite module for

00:18:20,940 --> 00:18:25,620
creating observable objects it's it's

00:18:24,029 --> 00:18:28,590
just JavaScript which is what I like

00:18:25,620 --> 00:18:31,409
about it so really what you're doing is

00:18:28,590 --> 00:18:34,110
you're creating a object sorry a

00:18:31,409 --> 00:18:36,269
function and you can actually set its

00:18:34,110 --> 00:18:40,519
value or you can request its value just

00:18:36,269 --> 00:18:44,129
by calling it and if you instead pass a

00:18:40,519 --> 00:18:46,860
function it will call you back every

00:18:44,129 --> 00:18:50,850
time that changes now this here is a

00:18:46,860 --> 00:18:54,629
very small wrapper around arrays to turn

00:18:50,850 --> 00:18:56,929
them into two dimensions so I specify

00:18:54,629 --> 00:19:00,509
the shape I want of the array which is

00:18:56,929 --> 00:19:03,899
three high and four across and I pass it

00:19:00,509 --> 00:19:08,610
some data and it will data and it will

00:19:03,899 --> 00:19:11,220
stick it like that so I can ask what is

00:19:08,610 --> 00:19:14,820
it position 0 1 what is it position 1 2

00:19:11,220 --> 00:19:17,669
etc etc and then this little bit of code

00:19:14,820 --> 00:19:20,820
here no just the two together it gives

00:19:17,669 --> 00:19:25,500
us an observable grid so every single

00:19:20,820 --> 00:19:27,629
time I play something over here is

00:19:25,500 --> 00:19:30,299
actually returning a whole new immutable

00:19:27,629 --> 00:19:34,519
object that represents the state the

00:19:30,299 --> 00:19:34,519
entire launchpad at that exact moment

00:19:41,920 --> 00:19:45,000
and whoops

00:19:45,300 --> 00:19:48,200
try it out

00:19:52,670 --> 00:19:59,690
so now you can see I have a grid

00:19:56,990 --> 00:20:02,230
representation of the data of my button

00:19:59,690 --> 00:20:02,230
presses here

00:20:06,230 --> 00:20:11,900
and if I want to send that I want to

00:20:08,870 --> 00:20:14,360
translate that grid back into MIDI to

00:20:11,900 --> 00:20:16,100
then forward onto Ableton Live I can use

00:20:14,360 --> 00:20:18,020
this really complicated little function

00:20:16,100 --> 00:20:20,090
here it's actually quite simple when you

00:20:18,020 --> 00:20:22,670
break it down but all its really doing

00:20:20,090 --> 00:20:25,550
is every single time there's a change to

00:20:22,670 --> 00:20:27,620
the object it scans through to see if we

00:20:25,550 --> 00:20:30,190
can find out what's changed and then it

00:20:27,620 --> 00:20:34,610
will send that particular message

00:20:30,190 --> 00:20:38,360
through to Ableton Live so it's kind of

00:20:34,610 --> 00:20:41,860
it's converting our snapshots into back

00:20:38,360 --> 00:20:41,860
into a stream of changes

00:20:49,419 --> 00:20:57,579
so now we can hook it up to our other

00:20:54,039 --> 00:21:00,519
grid by saying whenever the input grid

00:20:57,579 --> 00:21:02,999
changes sit at same value to the output

00:21:00,519 --> 00:21:02,999
grid

00:21:15,550 --> 00:21:21,830
so it may not sound that exciting but

00:21:18,760 --> 00:21:26,240
that message is going from the launch

00:21:21,830 --> 00:21:28,550
pad into JavaScript and then into the

00:21:26,240 --> 00:21:31,130
music application so we can do anything

00:21:28,550 --> 00:21:33,550
we like now at this point we can we can

00:21:31,130 --> 00:21:39,800
transform what I'm doing over here in

00:21:33,550 --> 00:21:41,360
any way that we can imagine and I can

00:21:39,800 --> 00:21:44,800
also send it to the launch pad as well

00:21:41,360 --> 00:21:44,800
just so we get the lights lighting up

00:21:48,640 --> 00:21:54,110
it's it's really hard to see on this

00:21:51,050 --> 00:21:59,030
camera unfortunately but no it's not

00:21:54,110 --> 00:22:02,470
gonna work it's really overexposed get

00:21:59,030 --> 00:22:05,300
my white hands in there then we can know

00:22:02,470 --> 00:22:09,020
that the lights are lighting up though

00:22:05,300 --> 00:22:13,820
believe me okay so this is what we have

00:22:09,020 --> 00:22:15,110
so far like I said now if we want to do

00:22:13,820 --> 00:22:17,330
anything clever with this observable

00:22:15,110 --> 00:22:19,910
object transform it into another another

00:22:17,330 --> 00:22:22,700
form like like I was talking about with

00:22:19,910 --> 00:22:24,230
a looping or the quantization we can use

00:22:22,700 --> 00:22:30,830
this module here called observe

00:22:24,230 --> 00:22:33,980
transform and it's really just a special

00:22:30,830 --> 00:22:35,510
kind of observable object that does

00:22:33,980 --> 00:22:40,120
something to the data as it passes

00:22:35,510 --> 00:22:43,760
through so you set it with one value and

00:22:40,120 --> 00:22:46,100
it will call you to ask a little

00:22:43,760 --> 00:22:50,270
callback and I asked what object do you

00:22:46,100 --> 00:22:52,220
want this to be actually what object you

00:22:50,270 --> 00:22:54,110
want to be notified to everyone else so

00:22:52,220 --> 00:22:59,600
you can transform the data to become

00:22:54,110 --> 00:23:01,730
anything at that point so this here is

00:22:59,600 --> 00:23:05,660
using these two other helper methods

00:23:01,730 --> 00:23:08,990
called connect and send whoops so just

00:23:05,660 --> 00:23:12,890
clean up our code quite a bit so instead

00:23:08,990 --> 00:23:14,780
of having all of this stuff we can just

00:23:12,890 --> 00:23:17,300
do that and it becomes a lot easier to

00:23:14,780 --> 00:23:18,680
see the signal flow here so we're taking

00:23:17,300 --> 00:23:22,790
the launchpad

00:23:18,680 --> 00:23:25,010
and we are sending it to the output grid

00:23:22,790 --> 00:23:28,330
and also sending it back till they walk

00:23:25,010 --> 00:23:28,330
the launchpad to light up the button

00:23:28,780 --> 00:23:39,620
oops I'm just gonna and this is a

00:23:36,590 --> 00:23:42,590
transform using that transform function

00:23:39,620 --> 00:23:45,980
we just imported before and what all it

00:23:42,590 --> 00:23:49,220
does is whenever there's a change it

00:23:45,980 --> 00:23:52,430
then calls keep range on that input

00:23:49,220 --> 00:23:54,320
which is part of the array grid that

00:23:52,430 --> 00:23:57,110
I'll be using they can you can request

00:23:54,320 --> 00:23:59,510
just one little part of it so every

00:23:57,110 --> 00:24:02,360
single time the main grid is changing

00:23:59,510 --> 00:24:04,700
you'll get another grid there is only a

00:24:02,360 --> 00:24:08,780
small portion of the first grid so we

00:24:04,700 --> 00:24:11,950
can just grab that that one whoops that

00:24:08,780 --> 00:24:11,950
one part of the grid

00:24:16,390 --> 00:24:24,190
and oops how did i zoom no ah this there

00:24:23,770 --> 00:24:26,230
we go

00:24:24,190 --> 00:24:33,900
yeah I had three fingers I was resting

00:24:26,230 --> 00:24:33,900
my okay and we'll stick that in there so

00:24:33,929 --> 00:24:40,360
we are slicing the grid up into a bunch

00:24:37,360 --> 00:24:43,030
of smaller grids which are thin so we

00:24:40,360 --> 00:24:47,530
take a slice and then we send it to the

00:24:43,030 --> 00:24:51,760
output so the first range is 3/8 which

00:24:47,530 --> 00:24:53,890
means three down and eight across so

00:24:51,760 --> 00:25:00,100
it's that whole zone there the one below

00:24:53,890 --> 00:25:03,010
it is to eight so it's two two down and

00:25:00,100 --> 00:25:06,010
across and so on and so forth and I am

00:25:03,010 --> 00:25:07,390
seaming 144 for the first one but 145

00:25:06,010 --> 00:25:09,040
for the next one and so on and so forth

00:25:07,390 --> 00:25:14,669
so that actually lets me split it out

00:25:09,040 --> 00:25:14,669
into different channels in my software

00:25:19,570 --> 00:25:31,660
whoops channel 2 channel 3 channel 4

00:25:24,520 --> 00:25:35,020
channel 5 and channel 6 so if I save

00:25:31,660 --> 00:25:38,650
that and then run it I get a big error

00:25:35,020 --> 00:25:40,420
because I deleted the input grid wait

00:25:38,650 --> 00:25:43,170
why is the Empire I probably got console

00:25:40,420 --> 00:25:43,170
that log in here somewhere

00:25:44,220 --> 00:25:48,240
there we go you read that

00:25:53,100 --> 00:25:58,690
so now this first line here the first

00:25:55,960 --> 00:26:02,370
three lines play the the bells

00:25:58,690 --> 00:26:02,370
instrument but the next one down and

00:26:20,250 --> 00:26:28,690
that's working pretty great but as I

00:26:26,050 --> 00:26:30,250
said before the most important thing

00:26:28,690 --> 00:26:32,770
about computer music is that everything

00:26:30,250 --> 00:26:34,720
is perfectly in time and there's just no

00:26:32,770 --> 00:26:36,880
way that I can play as perfect as a

00:26:34,720 --> 00:26:38,740
computer and there are certainly people

00:26:36,880 --> 00:26:40,180
that do have the skills to do this and

00:26:38,740 --> 00:26:42,220
if you look them up on YouTube you can

00:26:40,180 --> 00:26:43,540
find some amazing performances people

00:26:42,220 --> 00:26:45,550
that are actually playing things live

00:26:43,540 --> 00:26:46,840
with your fingers but I can't do that

00:26:45,550 --> 00:26:48,580
and I don't want to do that and I don't

00:26:46,840 --> 00:26:50,260
think it really represents computer

00:26:48,580 --> 00:26:51,730
music anyway it's it's another art form

00:26:50,260 --> 00:26:58,870
and it's great but it's not computer

00:26:51,730 --> 00:27:02,910
music so how do we quantize how do we

00:26:58,870 --> 00:27:02,910
align things perfectly with the clock

00:27:03,540 --> 00:27:08,890
Ableton Live has the ability to send out

00:27:06,490 --> 00:27:12,430
a clock signal and what that really is

00:27:08,890 --> 00:27:14,440
is just a pulse at a certain it's 24

00:27:12,430 --> 00:27:16,350
times it will seem to pulse perfectly

00:27:14,440 --> 00:27:18,790
aligned to the current tempo every beat

00:27:16,350 --> 00:27:22,440
so that's quite a few ticks every second

00:27:18,790 --> 00:27:28,030
at 120 beats per minute that's like 48

00:27:22,440 --> 00:27:31,270
different events and we can hook into

00:27:28,030 --> 00:27:38,530
that clock using another virtual midi

00:27:31,270 --> 00:27:41,500
port like this so we and we're now

00:27:38,530 --> 00:27:45,220
listening on clock input as well and if

00:27:41,500 --> 00:27:47,320
we log that out you'll see a whole bunch

00:27:45,220 --> 00:27:50,140
of messages coming in and that's coming

00:27:47,320 --> 00:27:54,580
in extraordinarily fast it's coming in

00:27:50,140 --> 00:27:58,360
at 107 beats per minute so that'll be 24

00:27:54,580 --> 00:28:01,890
I don't know math had yep so I'm gonna

00:27:58,360 --> 00:28:01,890
use a computer to figure that out for me

00:28:02,169 --> 00:28:08,419
so this little bit of code here creates

00:28:04,519 --> 00:28:11,629
another observable object every single

00:28:08,419 --> 00:28:16,539
time it receives that message 248 it

00:28:11,629 --> 00:28:19,429
increments this value here and it also

00:28:16,539 --> 00:28:22,039
figures out the current beat by then

00:28:19,429 --> 00:28:24,669
dividing another by 24 again so what you

00:28:22,039 --> 00:28:24,669
get out of this

00:28:33,920 --> 00:28:40,610
is the current play that position I've

00:28:37,580 --> 00:28:44,120
got three four five six seven eight nine

00:28:40,610 --> 00:28:45,650
ten and if I change the tempo here you

00:28:44,120 --> 00:28:49,150
can see that number getting faster it's

00:28:45,650 --> 00:29:02,140
incrementing faster if I bring it down

00:28:49,150 --> 00:29:02,140
it goes slower see perfect 120

00:29:04,850 --> 00:29:08,630
okay so now that we've got the current

00:29:06,530 --> 00:29:11,390
position we can use that as part of our

00:29:08,630 --> 00:29:13,610
transformation so instead of just taking

00:29:11,390 --> 00:29:16,070
one little section of the grid we're

00:29:13,610 --> 00:29:17,840
going to be as I guess instead of doing

00:29:16,070 --> 00:29:27,620
a spatial transform we're doing a

00:29:17,840 --> 00:29:29,750
temporal transform and we can hook it up

00:29:27,620 --> 00:29:32,330
so I'll quickly explain how this works

00:29:29,750 --> 00:29:34,730
every single time its value changes

00:29:32,330 --> 00:29:37,010
either the input value or this current

00:29:34,730 --> 00:29:39,140
position which is that new observable we

00:29:37,010 --> 00:29:41,900
just created this function down here

00:29:39,140 --> 00:29:46,100
gets run and we're using a little bit of

00:29:41,900 --> 00:29:49,070
mathematics no just kidding to figure

00:29:46,100 --> 00:29:52,580
out so we've got a rate so we want to

00:29:49,070 --> 00:29:54,980
quantize to every beat for instance so I

00:29:52,580 --> 00:29:56,660
can't play faster than each beat if I

00:29:54,980 --> 00:30:00,500
hold down a note it will just keep re

00:29:56,660 --> 00:30:02,990
triggering that beat so we're just

00:30:00,500 --> 00:30:05,570
voting out if we are at the start of

00:30:02,990 --> 00:30:07,970
that or not and if so we capture that

00:30:05,570 --> 00:30:11,900
frame and then we keep playing that

00:30:07,970 --> 00:30:13,520
frame back until we get to halfway

00:30:11,900 --> 00:30:20,780
through and when then we just return

00:30:13,520 --> 00:30:23,660
nothing and that sounds like it sounds

00:30:20,780 --> 00:30:26,210
really cool I promise you so we stick it

00:30:23,660 --> 00:30:28,640
in here the launchpad flows into the

00:30:26,210 --> 00:30:32,170
repeater and then it gets sent out to

00:30:28,640 --> 00:30:32,170
all the different instruments

00:31:01,660 --> 00:31:12,380
so that's great yeah that's really great

00:31:09,110 --> 00:31:15,170
and like once I discovered that if I M

00:31:12,380 --> 00:31:16,760
she'd tell the story correctly that was

00:31:15,170 --> 00:31:18,620
one of the later things I discovered I

00:31:16,760 --> 00:31:20,480
was doing the looping stuff first and I

00:31:18,620 --> 00:31:22,550
found that's actually the main thing you

00:31:20,480 --> 00:31:25,340
need is be able to hold the buttons down

00:31:22,550 --> 00:31:27,890
and have it trigger perfectly in time so

00:31:25,340 --> 00:31:32,750
it's it's kind of like you are playing

00:31:27,890 --> 00:31:34,490
chords of time that makes sense so I'm

00:31:32,750 --> 00:31:38,570
holding down buttons and instead of it

00:31:34,490 --> 00:31:41,510
creating a nice chord and musical sense

00:31:38,570 --> 00:31:44,180
it's actually creating one over a bigger

00:31:41,510 --> 00:31:47,540
time frame which is yeah never mind I

00:31:44,180 --> 00:31:50,330
don't know it made sense in my head

00:31:47,540 --> 00:31:53,870
before s it is but say we do actually

00:31:50,330 --> 00:31:55,580
want to be able to loop what I've just

00:31:53,870 --> 00:31:57,740
played so say I'm playing a really cool

00:31:55,580 --> 00:31:59,090
drum beat but I want to free up my hand

00:31:57,740 --> 00:31:59,860
again so that I can even play something

00:31:59,090 --> 00:32:01,910
else

00:31:59,860 --> 00:32:04,520
so in order to do that it's actually

00:32:01,910 --> 00:32:07,220
quite simple because we have the entire

00:32:04,520 --> 00:32:11,420
state at all times we can ask what is

00:32:07,220 --> 00:32:20,180
the current state of the launchpad we

00:32:11,420 --> 00:32:24,850
can record each event we can record each

00:32:20,180 --> 00:32:27,290
event and hahahaha it is alive and and

00:32:24,850 --> 00:32:28,910
then we can go back in time and get

00:32:27,290 --> 00:32:31,010
those events later and we can take just

00:32:28,910 --> 00:32:32,750
one little chunk of the of the things

00:32:31,010 --> 00:32:34,970
that have just been played so I can be

00:32:32,750 --> 00:32:36,290
playing something and it's recording

00:32:34,970 --> 00:32:39,820
everything I'm doing at all times and

00:32:36,290 --> 00:32:43,460
then when I push that button there I

00:32:39,820 --> 00:32:44,960
want it to go back in time and retrieve

00:32:43,460 --> 00:32:47,870
everything I just played and keep it

00:32:44,960 --> 00:32:51,410
playing that's what this function here

00:32:47,870 --> 00:32:52,760
does so this is really simple all it's

00:32:51,410 --> 00:32:56,060
doing is every time there is a change

00:32:52,760 --> 00:32:58,340
its thing just pushing it onto the onto

00:32:56,060 --> 00:32:59,960
an array it's really straightforward

00:32:58,340 --> 00:33:02,810
and this one here is just doing a filter

00:32:59,960 --> 00:33:06,320
on that array to get the the range that

00:33:02,810 --> 00:33:08,330
I've asked for and that just lets me

00:33:06,320 --> 00:33:09,770
listen to when I'm pushing the button

00:33:08,330 --> 00:33:12,940
and I want to say is I want to loop and

00:33:09,770 --> 00:33:15,680
it takes the slice and this here plays

00:33:12,940 --> 00:33:18,530
place it back so this is just a reverse

00:33:15,680 --> 00:33:20,900
transform it's taking the current loop

00:33:18,530 --> 00:33:22,700
and it is checking to see what the

00:33:20,900 --> 00:33:24,890
current time is and if the current time

00:33:22,700 --> 00:33:26,570
corresponds just to an event in the loop

00:33:24,890 --> 00:33:31,430
they will change its state and broadcast

00:33:26,570 --> 00:33:33,890
that out so yeah well we that's what we

00:33:31,430 --> 00:33:35,090
want and I would love to the live code

00:33:33,890 --> 00:33:38,930
it for you but I've only got ten more

00:33:35,090 --> 00:33:41,570
minutes so instead I am going to just

00:33:38,930 --> 00:33:43,180
give you one I prepared earlier which is

00:33:41,570 --> 00:33:47,780
right here

00:33:43,180 --> 00:33:50,600
no MIDI and I've also added a few more

00:33:47,780 --> 00:33:53,180
things like of these buttons here up so

00:33:50,600 --> 00:33:55,370
I can see where things are so that's

00:33:53,180 --> 00:33:58,960
like an undo and redo and I've got down

00:33:55,370 --> 00:33:58,960
here I can change the rate of repeating

00:34:10,809 --> 00:34:13,809
absolutely

00:34:20,460 --> 00:34:24,780
I'm gonna stop that again that was

00:34:22,389 --> 00:34:24,780
really weird

00:35:25,290 --> 00:35:42,970
oh yeah so what about Web Audio this is

00:35:39,850 --> 00:35:45,730
not web audio this is node J yes and all

00:35:42,970 --> 00:35:47,020
I'm doing is processing a stream turning

00:35:45,730 --> 00:35:48,940
into another form and then putting it

00:35:47,020 --> 00:35:52,510
straight out this is just like any old

00:35:48,940 --> 00:35:54,990
streaming web server really and but what

00:35:52,510 --> 00:35:57,430
can we just get rid of Ableton Live

00:35:54,990 --> 00:36:01,180
altogether and just do the song we've

00:35:57,430 --> 00:36:03,600
audio and I really wish I'd never asked

00:36:01,180 --> 00:36:06,340
that question I wish I just stuck with

00:36:03,600 --> 00:36:08,110
doing this this is so simple and great

00:36:06,340 --> 00:36:11,620
and you can explain it in one little

00:36:08,110 --> 00:36:13,720
40-minute talk but no I I went down this

00:36:11,620 --> 00:36:17,620
rabbit hole and I have actually gone and

00:36:13,720 --> 00:36:19,270
built my own application based on the

00:36:17,620 --> 00:36:22,810
exact same things I've shown you here

00:36:19,270 --> 00:36:24,760
but it all runs on top of web audio so

00:36:22,810 --> 00:36:27,490
I've got really time to talk about the

00:36:24,760 --> 00:36:31,120
technology behind it but we've got as

00:36:27,490 --> 00:36:36,400
module a wrinkled audio slot which it

00:36:31,120 --> 00:36:37,540
lets you create it's an observable

00:36:36,400 --> 00:36:38,710
object just like everything else so you

00:36:37,540 --> 00:36:40,660
can put it on your grid and do clever

00:36:38,710 --> 00:36:43,120
things with it and you can declare what

00:36:40,660 --> 00:36:46,030
sounds you want and will build the

00:36:43,120 --> 00:36:48,490
necessary web audio stuff like what Paul

00:36:46,030 --> 00:36:49,750
was talking about but it does it for you

00:36:48,490 --> 00:36:50,950
so you don't have to worry about hooking

00:36:49,750 --> 00:36:54,250
everything up it just makes it a lot

00:36:50,950 --> 00:36:57,460
easier to wire everything together so

00:36:54,250 --> 00:36:59,410
I've got that and I know I won't

00:36:57,460 --> 00:37:01,090
I won't show you this I will just show

00:36:59,410 --> 00:37:03,220
you my app so I can play you I can play

00:37:01,090 --> 00:37:03,780
your whole song if we if we do it now so

00:37:03,220 --> 00:37:11,890
let's do it

00:37:03,780 --> 00:37:15,370
okay so we'll close note don't need that

00:37:11,890 --> 00:37:17,200
anymore and that and close Ableton Live

00:37:15,370 --> 00:37:20,650
sorry Ableton

00:37:17,200 --> 00:37:32,290
ah and down here I have my app called

00:37:20,650 --> 00:37:34,510
loop drop and I'll open the project now

00:37:32,290 --> 00:37:43,599
when I was just out the back before I

00:37:34,510 --> 00:37:47,410
quickly put together some sounds yeah I

00:37:43,599 --> 00:37:50,440
I really like Douglas Douglas Crockford

00:37:47,410 --> 00:37:53,589
he's great but it's it's just really

00:37:50,440 --> 00:37:55,990
cool hearing and him like regretting his

00:37:53,589 --> 00:37:57,220
decisions about JavaScript what did he

00:37:55,990 --> 00:37:59,800
say

00:37:57,220 --> 00:38:03,839
oops there's not going oh great here we

00:37:59,800 --> 00:38:03,839
go technical difficulties

00:38:11,530 --> 00:38:20,620
yeah it's gonna have to shuffle my ports

00:38:17,950 --> 00:38:23,320
around of it until they work it's it's

00:38:20,620 --> 00:38:27,370
not my apps fault it is a problem with

00:38:23,320 --> 00:38:31,920
USB 3 and compatibility or something I

00:38:27,370 --> 00:38:31,920
don't know hopefully it'll work now

00:38:42,730 --> 00:38:45,839
now nothing's working

00:38:46,330 --> 00:38:50,560
oh wait no it's cuz I didn't hook it oh

00:38:48,040 --> 00:38:54,580
gosh I didn't hook it up yeah we're good

00:38:50,560 --> 00:38:59,800
we good everything's fine cool so let's

00:38:54,580 --> 00:39:02,220
bring that up so we can see it okay

00:38:59,800 --> 00:39:05,650
javascript is a hot mess

00:39:02,220 --> 00:39:08,700
javascript was designed in 10 days it

00:39:05,650 --> 00:39:08,700
turns out you can

00:40:15,180 --> 00:40:22,609
I don't know anyway I don't know whether

00:40:19,740 --> 00:40:22,609
it was going on this day

00:42:02,880 --> 00:42:15,609
again that was in case I forgot the link

00:42:12,579 --> 00:42:17,710
to the video so yes this is my

00:42:15,609 --> 00:42:20,079
application it's called loop drop it is

00:42:17,710 --> 00:42:22,539
fully open source you can look at the

00:42:20,079 --> 00:42:26,140
code you can hack on it you can do it if

00:42:22,539 --> 00:42:28,599
you like but you can also know you can

00:42:26,140 --> 00:42:30,309
you can buy it as well yeah if you if

00:42:28,599 --> 00:42:34,470
you don't want to like it if you don't

00:42:30,309 --> 00:42:39,339
know how to use NPM then you can buy it

00:42:34,470 --> 00:42:42,730
I'm trying to encourage a new kind of

00:42:39,339 --> 00:42:44,859
open-source where people that can

00:42:42,730 --> 00:42:47,009
develop as sorry can contribute by

00:42:44,859 --> 00:42:50,349
developing you can get it for free but

00:42:47,009 --> 00:42:55,200
people that just want to like use it and

00:42:50,349 --> 00:42:58,690
abuse it they can pay me it's great so

00:42:55,200 --> 00:43:00,700
everything you saw is JavaScript HTML

00:42:58,690 --> 00:43:03,249
CSS all that stuff but I'm using

00:43:00,700 --> 00:43:05,680
electron which is a wonderful tool by

00:43:03,249 --> 00:43:06,849
github to package it all up and turn it

00:43:05,680 --> 00:43:08,920
into an application that actually runs

00:43:06,849 --> 00:43:11,220
on your desktop and it has access to

00:43:08,920 --> 00:43:14,619
everything node has as well so it's

00:43:11,220 --> 00:43:17,559
chrome and nodejs

00:43:14,619 --> 00:43:19,539
smack together so I can have full file

00:43:17,559 --> 00:43:21,160
system access which is great for an

00:43:19,539 --> 00:43:22,269
audio application because it means you

00:43:21,160 --> 00:43:26,289
don't have to be worrying about shifting

00:43:22,269 --> 00:43:28,960
large samples around the internet now

00:43:26,289 --> 00:43:32,769
destroy with science this is the name of

00:43:28,960 --> 00:43:35,200
my band everything gonna go a bit crazy

00:43:32,769 --> 00:43:37,480
once I started playing with the stuff

00:43:35,200 --> 00:43:42,130
and my old band name just didn't seem to

00:43:37,480 --> 00:43:43,569
fit this Luna yeah so you if you want

00:43:42,130 --> 00:43:45,480
you can listen to some of my interesting

00:43:43,569 --> 00:43:49,769
experiments so every every single

00:43:45,480 --> 00:43:55,420
Thursday night I play a live session at

00:43:49,769 --> 00:43:57,609
at a hack group in my city and usually I

00:43:55,420 --> 00:43:59,559
play for an hour along and and I put

00:43:57,609 --> 00:44:01,930
them on soundcloud so you can check them

00:43:59,559 --> 00:44:04,980
out um and yeah I have no idea what I'm

00:44:01,930 --> 00:44:07,210
doing I just did it I just started and

00:44:04,980 --> 00:44:10,960
learnt an awful lot along the way very

00:44:07,210 --> 00:44:11,830
much like what I in a couple of talks

00:44:10,960 --> 00:44:14,350
before about the

00:44:11,830 --> 00:44:16,150
the textiles about for the Knitting is

00:44:14,350 --> 00:44:17,920
the exact same thing you even it's

00:44:16,150 --> 00:44:19,570
amazing what you can learn when you just

00:44:17,920 --> 00:44:22,120
start doing interesting things like this

00:44:19,570 --> 00:44:24,720
and reaching out and but I have learned

00:44:22,120 --> 00:44:28,540
some important takeaways from all this

00:44:24,720 --> 00:44:30,820
so yeah just start writing but you need

00:44:28,540 --> 00:44:32,470
to keep on rewriting over and over and

00:44:30,820 --> 00:44:34,270
over and over and over again but don't

00:44:32,470 --> 00:44:38,890
do the whole thing at once so just throw

00:44:34,270 --> 00:44:40,750
everything away just rewrite the parts

00:44:38,890 --> 00:44:43,960
that bother you right now and try and

00:44:40,750 --> 00:44:45,790
keep it modular so that you don't have

00:44:43,960 --> 00:44:48,370
to throw everything away when you want

00:44:45,790 --> 00:44:48,730
to make a change yeah that's what I've

00:44:48,370 --> 00:44:51,480
got

00:44:48,730 --> 00:44:51,480

YouTube URL: https://www.youtube.com/watch?v=NL0nb8A8FDM


