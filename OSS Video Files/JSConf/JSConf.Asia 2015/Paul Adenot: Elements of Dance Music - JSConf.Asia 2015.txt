Title: Paul Adenot: Elements of Dance Music - JSConf.Asia 2015
Publication date: 2015-12-21
Playlist: JSConf.Asia 2015
Description: 
	Sound in general is a pretty abstract topic for most people. How can one generate and arrange what is, at the end, a simple sum of sine waves going through the air, and make people move on a dance floor?
In this talk, we'll deconstruct a prototypical acid-techno track, by live-coding all the sounds (modeled after old analog gear), from scratch, using the Web Audio API.
We'll cover the basics of sound sequencing, synthesis, with an historical background. And then we'll dance.

Paul is an platform engineer at Mozilla, working on the Firefox web browser. He works on the Firefox Web Audio implementation, as well as the system audio code on all platforms. Sometimes help helps on WebRTC. He also co-edits the Web Audio API specification at the W3C, and dabbles in music production and cooking.

JSConf.Asia - Red Dot Design Museum, Singapore - 19 November 2015.

Source: http://2015.jsconf.asia
Slides: https://github.com/padenot/jsconf.asia-15/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:09,740 --> 00:00:18,260
okay so my talk is called elements of

00:00:14,280 --> 00:00:21,750
dance music um we're going to chat on

00:00:18,260 --> 00:00:25,410
how to make people dance with music is

00:00:21,750 --> 00:00:27,210
that another appropriate title so yeah

00:00:25,410 --> 00:00:31,080
we're going to make music using only

00:00:27,210 --> 00:00:34,730
maths no not a lot of sound samples no

00:00:31,080 --> 00:00:39,290
nothing just like pure mathematics and

00:00:34,730 --> 00:00:42,660
might even work we'll see how it goes so

00:00:39,290 --> 00:00:45,809
I'm Paul I work at Mozilla on the Web

00:00:42,660 --> 00:00:49,860
Audio API implementation I also do the

00:00:45,809 --> 00:00:52,620
spec work at the w3c so we end up like

00:00:49,860 --> 00:00:56,370
we write this massive massive massive

00:00:52,620 --> 00:00:58,559
massive document that ends up telling

00:00:56,370 --> 00:01:04,049
you how exactly where would you EP I

00:00:58,559 --> 00:01:06,960
should work and and when I'm not working

00:01:04,049 --> 00:01:09,600
I actually just make music with like

00:01:06,960 --> 00:01:13,520
normal people not with math and software

00:01:09,600 --> 00:01:18,330
and everything like that so yeah alright

00:01:13,520 --> 00:01:21,869
without further due let's talk about

00:01:18,330 --> 00:01:24,270
what we have for today so we'll do a

00:01:21,869 --> 00:01:28,200
brief introduction and try to define and

00:01:24,270 --> 00:01:30,420
characterize why is music yes big task

00:01:28,200 --> 00:01:33,570
so it's going to be scoped pretty gnarly

00:01:30,420 --> 00:01:35,369
and then we'll chat a bit of a verte a

00:01:33,570 --> 00:01:38,790
specific genre of music school acid

00:01:35,369 --> 00:01:40,140
techno general i like very much and

00:01:38,790 --> 00:01:44,630
maybe do a little bit of the

00:01:40,140 --> 00:01:47,430
construction of an acid techno track so

00:01:44,630 --> 00:01:49,140
yeah listen to a couple tunes we'll see

00:01:47,430 --> 00:01:54,960
how it goes maybe you understand the

00:01:49,140 --> 00:01:57,780
parts of it and then we will learn on

00:01:54,960 --> 00:02:04,229
how to like how Web Audio actually works

00:01:57,780 --> 00:02:06,840
and try to bend these to make do an

00:02:04,229 --> 00:02:08,640
actual technotrack like to make sound to

00:02:06,840 --> 00:02:11,640
make the drums to make the synthesizers

00:02:08,640 --> 00:02:13,410
and to make the yeah the Sun we want and

00:02:11,640 --> 00:02:16,650
then we my

00:02:13,410 --> 00:02:18,420
it's even try to do it live in a text

00:02:16,650 --> 00:02:21,750
editor and just like you know dry too

00:02:18,420 --> 00:02:24,600
quick dirty technotrack like and then

00:02:21,750 --> 00:02:27,510
five and write some more texts and six

00:02:24,600 --> 00:02:30,450
in my work seven if we have a good tune

00:02:27,510 --> 00:02:34,770
me out just get up and dance right all

00:02:30,450 --> 00:02:37,410
right first what is music so it's a

00:02:34,770 --> 00:02:40,800
simplistic a simple definition is not by

00:02:37,410 --> 00:02:45,530
any mean like the one definition react

00:02:40,800 --> 00:02:50,810
academicians use to me and for today

00:02:45,530 --> 00:02:55,860
music is rhythm + melody + timber right

00:02:50,810 --> 00:02:57,660
so rhythm can be characterized the

00:02:55,860 --> 00:02:59,700
absence of presence of a sound at some

00:02:57,660 --> 00:03:02,520
point in time and the duration of its

00:02:59,700 --> 00:03:05,330
sound so for example we have a note HB

00:03:02,520 --> 00:03:10,860
for a quarter beat and we're gonna have

00:03:05,330 --> 00:03:12,630
140 beats per minute right melody is the

00:03:10,860 --> 00:03:16,050
sex session of a sound that have a

00:03:12,630 --> 00:03:18,450
height a pitch and they constitute like

00:03:16,050 --> 00:03:21,060
a unity right so it's a tune you can

00:03:18,450 --> 00:03:23,880
sing and you remember that's desa melody

00:03:21,060 --> 00:03:25,920
and what is more important to me and for

00:03:23,880 --> 00:03:28,680
us today is a chamber so it's the

00:03:25,920 --> 00:03:31,110
entrancing sunny quality of the sound so

00:03:28,680 --> 00:03:33,360
for example is it like a pure tone is it

00:03:31,110 --> 00:03:36,480
pitched like can you can you determine

00:03:33,360 --> 00:03:38,850
the height is it a metallic sound is it

00:03:36,480 --> 00:03:40,530
like bold like a violin is it like a

00:03:38,850 --> 00:03:45,180
vocal like someone is speaking or

00:03:40,530 --> 00:03:48,150
singing so yeah today we're gonna focus

00:03:45,180 --> 00:03:52,290
on on tamron like actually making sound

00:03:48,150 --> 00:03:54,390
that sound nice and yeah the code is

00:03:52,290 --> 00:03:58,770
already written to make it sound where

00:03:54,390 --> 00:04:02,610
it's like when it should happen and and

00:03:58,770 --> 00:04:04,200
the notes already 13 so yeah but yet

00:04:02,610 --> 00:04:08,370
tember isn't what is important for us

00:04:04,200 --> 00:04:12,300
today okay so now we can talk maybe

00:04:08,370 --> 00:04:14,310
about a general music school acid techno

00:04:12,300 --> 00:04:16,760
is going to be a focus for today so the

00:04:14,310 --> 00:04:20,330
sound design that we're going to do

00:04:16,760 --> 00:04:20,330
might sound like that

00:04:33,410 --> 00:04:41,100
alright so say yes electronic music as

00:04:37,080 --> 00:04:46,680
you as you can hear got creating Chicago

00:04:41,100 --> 00:04:51,389
and Detroit in late 80s Early 90s so

00:04:46,680 --> 00:04:54,990
yeah so in this I in this specific track

00:04:51,389 --> 00:04:57,600
that I made quickly the other day you

00:04:54,990 --> 00:05:00,860
can hear two machines so it roland

00:04:57,600 --> 00:05:04,970
tb-303 which is an bass synthesizer

00:05:00,860 --> 00:05:08,520
which is like the little tone very harsh

00:05:04,970 --> 00:05:10,470
very fast and there is like a roland

00:05:08,520 --> 00:05:14,550
tr-808 which is drum machine so it's got

00:05:10,470 --> 00:05:20,820
the kick drum clap hi hats so if we

00:05:14,550 --> 00:05:25,050
listen to it again ok so in here we've

00:05:20,820 --> 00:05:31,729
got the kick drum right and then we have

00:05:25,050 --> 00:05:31,729
America's sound then we have some claps

00:05:34,640 --> 00:05:44,180
right if we mix the drum together okay

00:05:39,240 --> 00:05:44,180
cool then we've got a baseline

00:05:47,720 --> 00:05:52,970
kinnear it changes i'll just play

00:05:50,910 --> 00:05:52,970
you

00:05:57,620 --> 00:06:01,850
and then if you mix everything and add

00:05:59,820 --> 00:06:05,669
some delay and reverb like some effects

00:06:01,850 --> 00:06:08,250
okay so that's the kind of the goal for

00:06:05,669 --> 00:06:10,400
today so while we're doing it techno in

00:06:08,250 --> 00:06:13,440
the first place it sounds good right

00:06:10,400 --> 00:06:15,270
that's one thing it's also very simple

00:06:13,440 --> 00:06:19,440
to code so i can explain you wear with

00:06:15,270 --> 00:06:20,610
your concepts with that so the kick the

00:06:19,440 --> 00:06:24,060
clap in the rad cast we're going to

00:06:20,610 --> 00:06:26,190
we're going to synthesize are actually

00:06:24,060 --> 00:06:27,930
going to be tr-808 simulation that's why

00:06:26,190 --> 00:06:30,210
i was presenting this machine and the

00:06:27,930 --> 00:06:34,530
baseline is going to be a tb-303 like

00:06:30,210 --> 00:06:36,990
sound okay so without further ado let's

00:06:34,530 --> 00:06:39,060
introduce the audio context and now from

00:06:36,990 --> 00:06:41,460
no one's going to be all JavaScript and

00:06:39,060 --> 00:06:44,910
some codes on the slide so please pay

00:06:41,460 --> 00:06:49,440
attention is going to be worthwhile okay

00:06:44,910 --> 00:06:53,729
so you've got this thing fire AC equals

00:06:49,440 --> 00:06:55,650
new audio context and really when you

00:06:53,729 --> 00:06:57,210
talk about where would your API there

00:06:55,650 --> 00:06:58,919
are three main concepts you've gone know

00:06:57,210 --> 00:07:02,330
your context you've got all your nodes

00:06:58,919 --> 00:07:05,130
and you've got audio params right so

00:07:02,330 --> 00:07:06,479
you've got a number of audio nodes like

00:07:05,130 --> 00:07:08,550
a key I've seen this picture and you

00:07:06,479 --> 00:07:11,010
connect them together using the Kinect

00:07:08,550 --> 00:07:13,949
call so if you connect an oscillator

00:07:11,010 --> 00:07:15,479
node to a gain node you will apply the

00:07:13,949 --> 00:07:17,220
processing of the gain node from the

00:07:15,479 --> 00:07:19,620
oscillator node and then if you connect

00:07:17,220 --> 00:07:20,760
something to the destination node then

00:07:19,620 --> 00:07:25,710
you will actually hear it in your

00:07:20,760 --> 00:07:28,080
speakers which is what we need right so

00:07:25,710 --> 00:07:30,780
what can you do with an audio context

00:07:28,080 --> 00:07:33,150
you can you have the destination you

00:07:30,780 --> 00:07:35,340
connect things to his destination you

00:07:33,150 --> 00:07:38,130
have the current time so it's the time

00:07:35,340 --> 00:07:41,430
of the audio context it's always going

00:07:38,130 --> 00:07:43,020
forward you cannot really pose it it

00:07:41,430 --> 00:07:45,690
cannot go backwards so it's always

00:07:43,020 --> 00:07:47,639
progressing then you can create some of

00:07:45,690 --> 00:07:49,710
your notes so for example an audio

00:07:47,639 --> 00:07:53,190
buffer source node I can play another

00:07:49,710 --> 00:07:56,610
buffer a gain node can change the volume

00:07:53,190 --> 00:07:58,380
of its input an oscillator node can play

00:07:56,610 --> 00:08:01,169
a simple wave form like a sine wave

00:07:58,380 --> 00:08:03,210
square wave and things like that and a

00:08:01,169 --> 00:08:04,800
biquad filter node can filter the sound

00:08:03,210 --> 00:08:06,240
and alter its characteristics for

00:08:04,800 --> 00:08:07,860
example removing the high

00:08:06,240 --> 00:08:09,599
frequencies all the low frequencies or

00:08:07,860 --> 00:08:13,319
something like that we will see more

00:08:09,599 --> 00:08:15,060
example in a second what can you do when

00:08:13,319 --> 00:08:16,500
you get an oscillator node so an

00:08:15,060 --> 00:08:19,349
oscillator node can be connected to

00:08:16,500 --> 00:08:21,539
another node you can also disconnect it

00:08:19,349 --> 00:08:23,009
from the other nodes you can set the

00:08:21,539 --> 00:08:26,009
frequency that is the height of the

00:08:23,009 --> 00:08:28,050
sound you can slightly ditch you Nate to

00:08:26,009 --> 00:08:29,880
make it more interesting you can change

00:08:28,050 --> 00:08:33,510
this type for example whether it's a

00:08:29,880 --> 00:08:35,669
sine wave square wave or so to what we

00:08:33,510 --> 00:08:39,450
will see that in a second you can start

00:08:35,669 --> 00:08:44,420
it at some specific time and then also

00:08:39,450 --> 00:08:47,610
stop it at a specific time audio program

00:08:44,420 --> 00:08:50,670
as you can see the frequency here and

00:08:47,610 --> 00:08:52,470
the detune are both audio params right

00:08:50,670 --> 00:08:54,990
so what can you do with an audio

00:08:52,470 --> 00:08:56,700
parameter you can set the value here you

00:08:54,990 --> 00:09:00,480
can set the value at a specific time so

00:08:56,700 --> 00:09:02,850
you say set value at time for 10 at

00:09:00,480 --> 00:09:05,250
exactly 10 seconds the value we jump to

00:09:02,850 --> 00:09:07,740
for you can do an exponential ramp to

00:09:05,250 --> 00:09:10,080
value at time so it will do a smooth

00:09:07,740 --> 00:09:12,360
ramp from the current value to the next

00:09:10,080 --> 00:09:14,700
value using an exponential curve you can

00:09:12,360 --> 00:09:16,649
do the same with a linear ramp and you

00:09:14,700 --> 00:09:22,529
can do a set target at time that will

00:09:16,649 --> 00:09:26,420
gradually become goes to value from the

00:09:22,529 --> 00:09:29,070
time time and with those with a constant

00:09:26,420 --> 00:09:31,320
which is I explain it later with more

00:09:29,070 --> 00:09:33,390
examples so it goes like that when you

00:09:31,320 --> 00:09:38,220
do any do / am so for example here we do

00:09:33,390 --> 00:09:39,930
set value at time 1 20 at 120 seconds it

00:09:38,220 --> 00:09:43,560
jumps and then we do linear rom to

00:09:39,930 --> 00:09:46,320
evaluate I'm 22 seconds at 0 it goes

00:09:43,560 --> 00:09:48,240
down gradually like that and then we set

00:09:46,320 --> 00:09:49,740
value at time again and then we do a

00:09:48,240 --> 00:09:54,779
setter I get a timing decreases

00:09:49,740 --> 00:09:57,839
exponentially like that okay so now we

00:09:54,779 --> 00:10:01,260
will actually hear some sound ok so we

00:09:57,839 --> 00:10:03,899
do an oscillator we create a gain node

00:10:01,260 --> 00:10:06,649
we set it to a sine wave and we set it

00:10:03,899 --> 00:10:10,110
to an a for which is 44 in Hertz and

00:10:06,649 --> 00:10:11,610
then we will see two inputs so we will

00:10:10,110 --> 00:10:13,649
change the frequency and we will change

00:10:11,610 --> 00:10:19,000
the game then we connect everything

00:10:13,649 --> 00:10:25,150
together and we start so it

00:10:19,000 --> 00:10:29,920
change the frequency and we can change

00:10:25,150 --> 00:10:35,290
the game all right so it's just a sine

00:10:29,920 --> 00:10:39,209
wave ok now we can change and use

00:10:35,290 --> 00:10:42,170
different type of wave

00:10:39,209 --> 00:10:42,170
that's a square

00:10:44,410 --> 00:10:50,590
and that's a triangle

00:10:47,970 --> 00:10:53,050
and now we have a sawtooth

00:10:50,590 --> 00:10:56,620
so it's different sounds pretty useful

00:10:53,050 --> 00:10:58,360
all right now what can we do like this

00:10:56,620 --> 00:11:01,900
pretty static not very interesting so we

00:10:58,360 --> 00:11:04,240
can we can change things using the audio

00:11:01,900 --> 00:11:06,490
param methods so for example if we take

00:11:04,240 --> 00:11:09,820
a very low sine wave at a hundred Hertz

00:11:06,490 --> 00:11:13,000
and then we set value at time at 120

00:11:09,820 --> 00:11:15,670
which is no volume reduction and we set

00:11:13,000 --> 00:11:20,460
a look at that time at 0 to 0 which is

00:11:15,670 --> 00:11:20,460
silent it will do something like that

00:11:23,190 --> 00:11:30,430
right can start to hear the start of a

00:11:27,010 --> 00:11:32,290
kick drum maybe I one sec maybe you can

00:11:30,430 --> 00:11:40,030
do a bit more so if you change the pitch

00:11:32,290 --> 00:11:43,540
at the same time maybe yeah start

00:11:40,030 --> 00:11:48,400
sketching like a kick drum okay we'll

00:11:43,540 --> 00:11:50,830
see you later now we need a bass sound

00:11:48,400 --> 00:11:54,190
right so what can we do we get like two

00:11:50,830 --> 00:11:56,980
oscillators maybe to sawtooth set it to

00:11:54,190 --> 00:11:59,170
the same frequency we're going to same

00:11:56,980 --> 00:12:02,770
have two sliders to be able to change

00:11:59,170 --> 00:12:04,570
the value of the day tune and and the

00:12:02,770 --> 00:12:05,800
the value of the frequency and then we

00:12:04,570 --> 00:12:08,730
connect everything together like the

00:12:05,800 --> 00:12:08,730
usual okay

00:12:18,680 --> 00:12:25,510
sounds better right yeah so yeah some

00:12:22,010 --> 00:12:25,510
techniques we can we can learn

00:12:26,280 --> 00:12:31,900
okay we need a bit more okay no need to

00:12:30,280 --> 00:12:33,760
introduce a bit like a bit of a heavy

00:12:31,900 --> 00:12:36,880
beasts like the Fourier transform your

00:12:33,760 --> 00:12:39,070
friends so you can you can look at the

00:12:36,880 --> 00:12:40,960
sound in the time domain where you see a

00:12:39,070 --> 00:12:44,410
sine wave like looks like a sine wave

00:12:40,960 --> 00:12:47,350
you all know we can also you see it in

00:12:44,410 --> 00:12:48,910
the frequency domain where in the x-axis

00:12:47,350 --> 00:12:51,970
you've got the frequency and in the

00:12:48,910 --> 00:13:02,800
y-axis you've got the actual amplitude

00:12:51,970 --> 00:13:07,030
and then if we change the frequency so

00:13:02,800 --> 00:13:13,360
yeah and if you change this he changed

00:13:07,030 --> 00:13:15,570
it to square the number of different

00:13:13,360 --> 00:13:18,180
patterns here

00:13:15,570 --> 00:13:21,270
right so this just thing we're all using

00:13:18,180 --> 00:13:25,140
the next point so now which we can do is

00:13:21,270 --> 00:13:29,700
to filter the bass the bass right so for

00:13:25,140 --> 00:13:32,010
that we use a biquad filter and we'll

00:13:29,700 --> 00:13:35,880
get a saw tooth and we'll debt unit like

00:13:32,010 --> 00:13:38,340
previously and then set a pretty low

00:13:35,880 --> 00:13:40,980
frequency value and then we will get a

00:13:38,340 --> 00:13:43,800
low pass so what the low pass is it lets

00:13:40,980 --> 00:13:46,560
through the bass sound and it cuts the

00:13:43,800 --> 00:13:48,600
high frequencies and then we will change

00:13:46,560 --> 00:13:51,450
various characteristics of the bike

00:13:48,600 --> 00:13:54,960
words so the frequency which is is it

00:13:51,450 --> 00:13:58,710
cutting the high frequency at a very

00:13:54,960 --> 00:14:01,920
high sound or very low sound the queue

00:13:58,710 --> 00:14:08,330
you'll see in a second so what can we do

00:14:01,920 --> 00:14:13,220
with us ok so we have a base right and

00:14:08,330 --> 00:14:13,220
the red line is the filter right

00:14:16,870 --> 00:14:20,850
we can change the characteristic amounts

00:14:26,250 --> 00:14:32,680
all right

00:14:28,640 --> 00:14:32,680
so the QE is little notch

00:14:35,399 --> 00:14:42,549
let's call the resonance filter of

00:14:39,819 --> 00:14:45,089
course you can go get high pass which is

00:14:42,549 --> 00:14:45,089
exactly do

00:14:46,559 --> 00:14:52,540
he cuts the law and like the high

00:14:49,899 --> 00:15:01,360
frequencies like a treble stays here

00:14:52,540 --> 00:15:04,149
right and then you've got various other

00:15:01,360 --> 00:15:06,179
stuff like a like a band pass that lets

00:15:04,149 --> 00:15:12,910
through you're near specific frequency

00:15:06,179 --> 00:15:15,220
but then we won't use it for now okay so

00:15:12,910 --> 00:15:19,629
now what can we do like we go on and on

00:15:15,220 --> 00:15:23,619
and on we create a buffer and then we

00:15:19,629 --> 00:15:25,689
fill it with random noise not random so

00:15:23,619 --> 00:15:29,920
it's noise between minus one and one

00:15:25,689 --> 00:15:34,480
okay what's can Ladd to let me just drop

00:15:29,920 --> 00:15:37,379
the balloon just noise it's gonna be

00:15:34,480 --> 00:15:40,980
very useful to do or America's sound

00:15:37,379 --> 00:15:45,610
just like yeah just random noise really

00:15:40,980 --> 00:15:48,100
okay and then yeah for the clap I didn't

00:15:45,610 --> 00:15:50,709
really feel like synthesizing a clump

00:15:48,100 --> 00:15:52,959
because pretty hard so I'm using all the

00:15:50,709 --> 00:15:54,910
facilities of the web would your API so

00:15:52,959 --> 00:16:00,339
I'm fetching with a new fetch API which

00:15:54,910 --> 00:16:02,649
is the new xhr an OGG file because like

00:16:00,339 --> 00:16:04,449
that's the one one time I'm cheating and

00:16:02,649 --> 00:16:08,040
I'm I've actually sampled the machine

00:16:04,449 --> 00:16:11,410
and sorry it recorded it the sound and

00:16:08,040 --> 00:16:14,529
you can use decode audio data to decode

00:16:11,410 --> 00:16:17,439
the buffer it takes the same codecs as

00:16:14,529 --> 00:16:18,939
the HTML media element and then it gives

00:16:17,439 --> 00:16:21,129
you a decoded buffer and you can just

00:16:18,939 --> 00:16:22,959
play it back right so you just played

00:16:21,129 --> 00:16:25,179
back like that you get a buffer set the

00:16:22,959 --> 00:16:27,459
buffer you set it to loop so it looks

00:16:25,179 --> 00:16:33,279
indefinitely connect your destination

00:16:27,459 --> 00:16:37,800
and start it sorry just just playing

00:16:33,279 --> 00:16:42,040
back the clap yeah

00:16:37,800 --> 00:16:53,829
so without further due let's try to make

00:16:42,040 --> 00:16:59,850
a little something so okay so this is

00:16:53,829 --> 00:16:59,850
just a roof

00:17:02,750 --> 00:17:11,540
ok

00:17:04,640 --> 00:17:17,420
it's just a text editor I'm going to

00:17:11,540 --> 00:17:20,120
just setting this up ok cool and then

00:17:17,420 --> 00:17:25,070
what I need is my actual order Firefox

00:17:20,120 --> 00:17:31,250
so I can run the code ok so this this

00:17:25,070 --> 00:17:33,440
vim thing is running in which Firefox

00:17:31,250 --> 00:17:39,530
I've got so many open yeah and this one

00:17:33,440 --> 00:17:42,230
yeah so yeah let me just explain to you

00:17:39,530 --> 00:17:44,090
what the code is here is doing I didn't

00:17:42,230 --> 00:17:45,260
feel like as I said previously at we are

00:17:44,090 --> 00:17:48,380
focusing on actually making the

00:17:45,260 --> 00:17:52,760
instruments so the notes here I've

00:17:48,380 --> 00:17:55,430
actually always been written so we just

00:17:52,760 --> 00:17:57,320
have a tempo which is 135 beats per

00:17:55,430 --> 00:17:59,960
minute which is normal for technology

00:17:57,320 --> 00:18:03,080
and then we have a kick as we heard

00:17:59,960 --> 00:18:05,180
previously that goes on each beat so one

00:18:03,080 --> 00:18:07,370
silence silence silence once island sat

00:18:05,180 --> 00:18:09,740
in silence and that goes for ever and

00:18:07,370 --> 00:18:12,590
ever the hi-hats goes on the opposite so

00:18:09,740 --> 00:18:15,130
that's going to be kick I had cake I had

00:18:12,590 --> 00:18:19,130
the clap goes in the middle some time

00:18:15,130 --> 00:18:22,310
here and then we've got some notes for

00:18:19,130 --> 00:18:25,220
the base so that's me denotation if you

00:18:22,310 --> 00:18:28,670
know what that is but like just just

00:18:25,220 --> 00:18:32,990
know it's really then what we are doing

00:18:28,670 --> 00:18:35,330
yeah we get s4 since we get to know do

00:18:32,990 --> 00:18:38,870
contacts here we set the track so the

00:18:35,330 --> 00:18:40,730
track is what we have just here we get

00:18:38,870 --> 00:18:41,990
the destination here we get a clap

00:18:40,730 --> 00:18:45,530
sample because I didn't feel like

00:18:41,990 --> 00:18:46,910
synthesizing a clap again then we get a

00:18:45,530 --> 00:18:50,060
noise buffer because we're going to need

00:18:46,910 --> 00:18:52,280
a noise buffer then a couple acidity

00:18:50,060 --> 00:18:54,860
function all the code is going to be a

00:18:52,280 --> 00:18:57,650
liner as well with a lot of explanation

00:18:54,860 --> 00:19:00,980
like text Jewish nation so the clock

00:18:57,650 --> 00:19:03,710
lets us know what time it is in the

00:19:00,980 --> 00:19:05,740
track we count not in seconds but in

00:19:03,710 --> 00:19:09,470
beats that's easier if you want to do

00:19:05,740 --> 00:19:11,720
audio-visual synchronization yeah so we

00:19:09,470 --> 00:19:14,450
start the track and then we have a

00:19:11,720 --> 00:19:17,120
little scheduler here so the scheduler

00:19:14,450 --> 00:19:18,640
is continuously looping in the track and

00:19:17,120 --> 00:19:20,200
telling you which know

00:19:18,640 --> 00:19:22,810
you need to play and when you need to

00:19:20,200 --> 00:19:25,230
play it and which and which instrument

00:19:22,810 --> 00:19:27,670
has to play it so this is not very

00:19:25,230 --> 00:19:31,510
complicated nor important topic for

00:19:27,670 --> 00:19:33,940
today so let's just close it right so we

00:19:31,510 --> 00:19:36,520
have four empty slots here we want to

00:19:33,940 --> 00:19:39,490
kick drum whoops we want to kick drum we

00:19:36,520 --> 00:19:42,610
want hi hats we want to clap and we want

00:19:39,490 --> 00:19:45,250
to base right at the bottom is just the

00:19:42,610 --> 00:19:46,570
initialization with the fetch and or new

00:19:45,250 --> 00:19:51,910
audio context and everything so it's not

00:19:46,570 --> 00:19:56,170
very important ok let's start trying to

00:19:51,910 --> 00:19:57,850
make a kick drum right so it says boom

00:19:56,170 --> 00:20:01,120
boom boom in the comment that's exactly

00:19:57,850 --> 00:20:04,330
what's going to happen right so we're

00:20:01,120 --> 00:20:09,400
going to get a first oscillator ok so we

00:20:04,330 --> 00:20:11,470
do create oscillator and then what can

00:20:09,400 --> 00:20:18,070
we do with an oscillator we can set the

00:20:11,470 --> 00:20:19,630
type to a sine wave we can we also need

00:20:18,070 --> 00:20:22,750
a gain node because we will need an

00:20:19,630 --> 00:20:24,610
envelope so a kick is louder at the

00:20:22,750 --> 00:20:28,260
beginning and quieter by the end so

00:20:24,610 --> 00:20:33,190
let's gates let's get us a game node ok

00:20:28,260 --> 00:20:37,690
create gain ok then of course we need to

00:20:33,190 --> 00:20:42,850
connect the oscillator to the gain node

00:20:37,690 --> 00:20:49,350
and the gain node to the actual

00:20:42,850 --> 00:20:52,510
destination right we need to start the

00:20:49,350 --> 00:20:55,510
oscillator in each function we get the

00:20:52,510 --> 00:20:58,690
time T here so it's the time of which we

00:20:55,510 --> 00:21:01,000
need to start the note and then we also

00:20:58,690 --> 00:21:02,320
need to stop it at some point one second

00:21:01,000 --> 00:21:03,610
is good is going to be shorter than one

00:21:02,320 --> 00:21:05,740
second we need to stop it at some point

00:21:03,610 --> 00:21:10,750
doesn't really matter and then we need

00:21:05,740 --> 00:21:15,640
to decide like which curve we will get

00:21:10,750 --> 00:21:19,630
to for our kick drum so let's start with

00:21:15,640 --> 00:21:23,170
again so it's gonna it's going to start

00:21:19,630 --> 00:21:27,100
at a full volume set value at time so

00:21:23,170 --> 00:21:28,660
full volume is 120 and I was at T it's

00:21:27,100 --> 00:21:32,510
at full volume so beginning of the kick

00:21:28,660 --> 00:21:37,760
drum and then you will guard you leave

00:21:32,510 --> 00:21:42,620
all target at time to 0 at time T as

00:21:37,760 --> 00:21:46,250
well and the constant is how fast it

00:21:42,620 --> 00:21:49,580
will go down so 0 dot one is pretty fast

00:21:46,250 --> 00:21:52,580
but not too fast that's I guess it's

00:21:49,580 --> 00:21:55,970
good then as we saw earlier we need to

00:21:52,580 --> 00:22:00,250
set the we need to drop the frequency a

00:21:55,970 --> 00:22:04,940
notch frequency okay set value at time

00:22:00,250 --> 00:22:06,860
so a kick drum 120 Hertz is good I mean

00:22:04,940 --> 00:22:09,200
I'm just doing those values on the top

00:22:06,860 --> 00:22:11,600
of my head really like I've kind of

00:22:09,200 --> 00:22:15,730
listened to 808 kick sound and it

00:22:11,600 --> 00:22:20,800
sounded good so I yeah I was alright and

00:22:15,730 --> 00:22:27,070
then it'll it also drops to around 50 a

00:22:20,800 --> 00:22:32,690
bit shorter okay so yeah maybe we can

00:22:27,070 --> 00:22:39,460
try to hear do we hear something ok

00:22:32,690 --> 00:22:39,460
let's Britta maybe you can make it a bit

00:22:42,520 --> 00:22:50,450
yeah that's better so it's not that okay

00:22:47,120 --> 00:22:54,500
um we can we can really make the kick

00:22:50,450 --> 00:22:58,640
drum would be better if we do like a bit

00:22:54,500 --> 00:23:01,340
more of an attack sound so I'm just

00:22:58,640 --> 00:23:04,040
typing this real quick what we want is a

00:23:01,340 --> 00:23:05,510
is a sound of the beater on the on the

00:23:04,040 --> 00:23:10,220
kick drum right so it's going to be full

00:23:05,510 --> 00:23:16,550
of high frequencies and yeah I'll see

00:23:10,220 --> 00:23:19,990
how it goes so hmm just like doing

00:23:16,550 --> 00:23:19,990
something real quick here

00:23:22,009 --> 00:23:35,700
a second sound is exactly the same calls

00:23:26,369 --> 00:23:37,889
a very much shorter though um what can

00:23:35,700 --> 00:23:39,799
we do what do you need yeah oh and we

00:23:37,889 --> 00:23:46,590
need to connect everything together

00:23:39,799 --> 00:23:50,279
oscillator 2 with gain too oops into ok

00:23:46,590 --> 00:24:01,350
does that sound better no it doesn't

00:23:50,279 --> 00:24:05,519
what have I forgotten oh yeah so that's

00:24:01,350 --> 00:24:07,019
a bit of a better kick right ok alright

00:24:05,519 --> 00:24:08,669
that's good we've got a kick but we've

00:24:07,019 --> 00:24:13,820
got a number of more instruments to go

00:24:08,669 --> 00:24:17,190
right so let's start with some high hats

00:24:13,820 --> 00:24:21,059
so for the high hats i canna sound like

00:24:17,190 --> 00:24:23,129
a noise bursts but we need to remove the

00:24:21,059 --> 00:24:25,019
low-frequency content because we it

00:24:23,129 --> 00:24:28,799
doesn't have a real bass sound of high

00:24:25,019 --> 00:24:32,279
hat not really so let's see we need to

00:24:28,799 --> 00:24:35,119
play back a noise buffer so for that we

00:24:32,279 --> 00:24:40,850
use the audio buffer source node thing

00:24:35,119 --> 00:24:45,200
source ok and then we set its buffer to

00:24:40,850 --> 00:24:50,100
a noise buffer so in noise buffer is

00:24:45,200 --> 00:24:52,190
where is no its buffer yeah so a noise

00:24:50,100 --> 00:24:55,980
buffer is just a buffer that contains

00:24:52,190 --> 00:24:58,220
random values between minus 1 and 1 so

00:24:55,980 --> 00:25:01,740
yeah it's just playing that box not very

00:24:58,220 --> 00:25:04,159
complicated or anything and then of

00:25:01,740 --> 00:25:07,820
course we always need a gain node

00:25:04,159 --> 00:25:10,649
because percussions have like a

00:25:07,820 --> 00:25:14,809
different amplitude during the of the

00:25:10,649 --> 00:25:19,999
over the course of the sound creates gay

00:25:14,809 --> 00:25:29,249
ok then we will need a high-pass filter

00:25:19,999 --> 00:25:34,409
hpf create biquad filter ok and we will

00:25:29,249 --> 00:25:35,520
set it too high pass so the high pass as

00:25:34,409 --> 00:25:38,100
it I

00:25:35,520 --> 00:25:40,500
name suggests it lets through the high

00:25:38,100 --> 00:25:43,140
frequency let them pass but it cuts it

00:25:40,500 --> 00:25:46,560
cuts the low frequency right and we set

00:25:43,140 --> 00:25:54,840
it to a frequency of randomly chosen

00:25:46,560 --> 00:26:00,000
five thousand Hertz as usual we we

00:25:54,840 --> 00:26:06,030
started at full volume at time T and oh

00:26:00,000 --> 00:26:10,890
it's called gain and then it drops in

00:26:06,030 --> 00:26:12,600
volume to 0 at time zero it's fairly

00:26:10,890 --> 00:26:14,940
short so 0.02 is going to be a very

00:26:12,600 --> 00:26:17,670
short sound then we need to connect

00:26:14,940 --> 00:26:25,620
everything together so source connect

00:26:17,670 --> 00:26:28,890
gain connect I pass filter connect these

00:26:25,620 --> 00:26:33,840
dots sink and then we need to start it

00:26:28,890 --> 00:26:35,310
and then stop it oh no no it will stop

00:26:33,840 --> 00:26:38,100
whenever whenever it reach the end of

00:26:35,310 --> 00:26:44,550
the buffer automatically okay so it does

00:26:38,100 --> 00:26:50,510
that sound alright oh my season yeah so

00:26:44,550 --> 00:26:50,510
that's a little symbol the Americas okay

00:26:51,800 --> 00:26:59,910
okay cool ah ok we go now we need we

00:26:57,120 --> 00:27:02,610
need a clap sound okay so clap is just

00:26:59,910 --> 00:27:06,570
playing back the buffer so and we do

00:27:02,610 --> 00:27:09,470
like virus source equals this AC create

00:27:06,570 --> 00:27:13,230
before Souls exactly like before and

00:27:09,470 --> 00:27:15,990
then we actually don't want it full

00:27:13,230 --> 00:27:18,330
volume we want we want a bit not very

00:27:15,990 --> 00:27:21,990
loud so we all create a gain node for

00:27:18,330 --> 00:27:23,480
that as well you always have a ton of

00:27:21,990 --> 00:27:27,600
game knows where you where would you

00:27:23,480 --> 00:27:29,880
like a ton create gain okay and then we

00:27:27,600 --> 00:27:34,890
connect the source to the game oops no

00:27:29,880 --> 00:27:40,140
connect to the game and then connect the

00:27:34,890 --> 00:27:44,040
game to the sink okay and then we need

00:27:40,140 --> 00:27:47,790
to source dot buffer equals the clap a

00:27:44,040 --> 00:27:49,890
clap is something we just got using this

00:27:47,790 --> 00:27:55,020
fetch thing here

00:27:49,890 --> 00:27:58,320
um and it's the sound of a clap and then

00:27:55,020 --> 00:28:02,120
we start it same thing is going to be

00:27:58,320 --> 00:28:17,610
stopped it's going to stop automatically

00:28:02,120 --> 00:28:20,970
so does it's all right okay okay okay

00:28:17,610 --> 00:28:22,920
and now we need as it is written in your

00:28:20,970 --> 00:28:27,600
strength here we need to drop the bass

00:28:22,920 --> 00:28:30,540
okay so let's do this as we saw to

00:28:27,600 --> 00:28:34,200
sawtooth together slightly detuned sound

00:28:30,540 --> 00:28:38,730
good so you're going to give it a go so

00:28:34,200 --> 00:28:42,090
we need to create two oscillators then

00:28:38,730 --> 00:28:50,040
we create a gain node always great to

00:28:42,090 --> 00:28:53,210
gain node O'Kane okay and then we'll

00:28:50,040 --> 00:29:00,990
need a filter as filters I'll call

00:28:53,210 --> 00:29:12,650
create by quiet ok so we connect all

00:29:00,990 --> 00:29:12,650
this little world together last two okay

00:29:12,900 --> 00:29:18,190
then what can we do we need so as you

00:29:16,240 --> 00:29:20,470
can see here we've got the actual notes

00:29:18,190 --> 00:29:24,520
we need to play passage to us bio

00:29:20,470 --> 00:29:26,640
scheduler isn't it nice so we need to

00:29:24,520 --> 00:29:30,490
set the frequency of the nodes okay so

00:29:26,640 --> 00:29:34,450
oscillator dot frequency dot set value

00:29:30,490 --> 00:29:37,480
at time then we've got a little helper

00:29:34,450 --> 00:29:40,270
at the top so from a note to a frequency

00:29:37,480 --> 00:29:45,070
it's this barbaric formula that you can

00:29:40,270 --> 00:29:50,980
find on Wikipedia so not to frack oh

00:29:45,070 --> 00:29:56,650
it's tea and then same so I follow first

00:29:50,980 --> 00:30:00,430
and the second one then we did tune one

00:29:56,650 --> 00:30:06,720
oscillator like we saw in the slide

00:30:00,430 --> 00:30:11,010
before and then set the two to sawtooth

00:30:06,720 --> 00:30:13,870
so tooth because like in the original

00:30:11,010 --> 00:30:15,610
303 you could choose between so 2000

00:30:13,870 --> 00:30:20,070
square but i think i prefer the so to

00:30:15,610 --> 00:30:23,410
sound so let's let's go with it and then

00:30:20,070 --> 00:30:36,960
give it a little envelope so it doesn't

00:30:23,410 --> 00:30:40,600
sound boring gain gain set target oops

00:30:36,960 --> 00:30:42,400
mm-hmm fairly short as short as the kick

00:30:40,600 --> 00:30:47,380
because the kick was also zero point

00:30:42,400 --> 00:30:52,630
wine in a constant then we will set some

00:30:47,380 --> 00:30:58,890
value on the filter so fairly aggressive

00:30:52,630 --> 00:31:01,510
resonance and then we will automate the

00:30:58,890 --> 00:31:03,670
filter as well so the filter cutoff

00:31:01,510 --> 00:31:06,160
frequency will change over the course of

00:31:03,670 --> 00:31:09,190
the notes so the Sun will not get very I

00:31:06,160 --> 00:31:11,080
will not be boring because boring sound

00:31:09,190 --> 00:31:15,010
you just want to like shut it off and

00:31:11,080 --> 00:31:16,960
really don't want to listen to it mmm so

00:31:15,010 --> 00:31:20,010
let's start at three hundred again just

00:31:16,960 --> 00:31:20,010
picking the value randomly

00:31:20,850 --> 00:31:31,790
yeah and going up to 3,000 fairly short

00:31:27,000 --> 00:31:34,350
again and the filter will let the bass

00:31:31,790 --> 00:31:37,110
through and we'll cut off the high

00:31:34,350 --> 00:31:41,120
frequency right so for that will use a

00:31:37,110 --> 00:31:49,640
low pass because let lets the low pass

00:31:41,120 --> 00:31:49,640
and then we start all that jars start t

00:31:50,900 --> 00:32:03,240
stop at somewhere in the future t plus 1

00:31:57,410 --> 00:32:26,970
okay is that gonna work I think it's

00:32:03,240 --> 00:32:29,300
some licks okay I had for Burton to

00:32:26,970 --> 00:32:34,860
connect it to the actual destination

00:32:29,300 --> 00:32:38,570
yeah wasn't going to work okay let me

00:32:34,860 --> 00:32:38,570
get this one back okay

00:32:59,520 --> 00:33:08,500
alright so maybe we can try to make it a

00:33:04,570 --> 00:33:14,980
little more interesting and can I'll

00:33:08,500 --> 00:33:18,040
know I like 10 minutes okay what we can

00:33:14,980 --> 00:33:26,500
do is to dynamically change the value of

00:33:18,040 --> 00:33:31,390
the filter and so let's try that so

00:33:26,500 --> 00:33:36,460
we'll put variable here prick equals and

00:33:31,390 --> 00:33:43,080
then we'll drop a slider so if I are

00:33:36,460 --> 00:33:47,950
equals document create element inputs

00:33:43,080 --> 00:33:50,940
inputs these days with html5 can do

00:33:47,950 --> 00:33:57,370
really crazy stuff input type range

00:33:50,940 --> 00:34:09,220
input min on a thousand maybe and Max to

00:33:57,370 --> 00:34:19,000
10,000 input step 1 then inputs on

00:34:09,220 --> 00:34:22,360
inputs I'm going to go okay so we're

00:34:19,000 --> 00:34:26,889
going to say Frank equals 0 dot target

00:34:22,360 --> 00:34:30,399
what are you and so that will all change

00:34:26,889 --> 00:34:37,320
the frequency of the filter of course I

00:34:30,399 --> 00:34:37,320
need to do document appendchild oops

00:34:37,770 --> 00:34:43,379
input no slider it's called I it's got

00:34:45,030 --> 00:34:48,030
okay

00:34:49,340 --> 00:35:02,440
is it working

00:34:52,179 --> 00:35:40,839
I lied saw one ah yeah good one okay is

00:35:02,440 --> 00:35:43,930
that dropping a slider nothing is

00:35:40,839 --> 00:35:48,160
starting to to work don't do only

00:35:43,930 --> 00:35:50,319
something else um yeah I think I'm

00:35:48,160 --> 00:35:54,460
pretty much done uh-oh can take

00:35:50,319 --> 00:36:00,460
questions long yep Wow thank you Paul

00:35:54,460 --> 00:36:03,670
big round of Gloucester so this is how

00:36:00,460 --> 00:36:05,680
we learn how to make sounds and music

00:36:03,670 --> 00:36:09,970
eventually I would love to have some

00:36:05,680 --> 00:36:12,549
questions hi that's awesome I got a real

00:36:09,970 --> 00:36:14,849
light away I got one question about the

00:36:12,549 --> 00:36:16,990
way you're constructing the sounds yep

00:36:14,849 --> 00:36:18,910
every time you trigger a sound you

00:36:16,990 --> 00:36:19,990
you're constructing the whole thing is

00:36:18,910 --> 00:36:22,359
there a reason you're doing that as

00:36:19,990 --> 00:36:25,540
opposed to making a once and then doing

00:36:22,359 --> 00:36:27,309
a start and stop each time so I've got

00:36:25,540 --> 00:36:31,000
two answers for you the first answer

00:36:27,309 --> 00:36:33,430
would be yes you could create your note

00:36:31,000 --> 00:36:36,940
once and seek a gain node in front of it

00:36:33,430 --> 00:36:39,940
and mute it the second answer is you

00:36:36,940 --> 00:36:42,640
cannot restart a note once it started

00:36:39,940 --> 00:36:44,880
and stopped you gots garbage collected

00:36:42,640 --> 00:36:48,010
right so it's kind of like a

00:36:44,880 --> 00:36:50,230
fire-and-forget kind of model the nodes

00:36:48,010 --> 00:36:52,390
are extremely cheap to create and are

00:36:50,230 --> 00:36:55,480
extremely cheap to destroy so that's it

00:36:52,390 --> 00:36:56,980
simplifies the model so you don't have

00:36:55,480 --> 00:37:00,490
to keep track of how many voices you

00:36:56,980 --> 00:37:03,549
have and things like that so yeah two

00:37:00,490 --> 00:37:05,319
models either create all the nodes in at

00:37:03,549 --> 00:37:09,249
each time like I'm doing

00:37:05,319 --> 00:37:12,190
here because it's a bit more simple the

00:37:09,249 --> 00:37:14,349
second yeah you can just stick a game

00:37:12,190 --> 00:37:16,569
note and sticking again now in front of

00:37:14,349 --> 00:37:18,999
it is much more like the old analog

00:37:16,569 --> 00:37:21,670
analog way of doing things so when you

00:37:18,999 --> 00:37:24,579
have a voltage controlled amplifier as

00:37:21,670 --> 00:37:26,529
it's called vca so we have two way of

00:37:24,579 --> 00:37:35,410
doing things I picked one for this talk

00:37:26,529 --> 00:37:36,759
really hello what is between this and

00:37:35,410 --> 00:37:40,150
doing something like the cerrado

00:37:36,759 --> 00:37:47,529
software in a browser hard work and

00:37:40,150 --> 00:37:50,049
tears so serato for the people who know

00:37:47,529 --> 00:37:53,199
we don't know about it is a thing where

00:37:50,049 --> 00:37:57,279
you put like kind of fake vinyls and and

00:37:53,199 --> 00:37:58,779
you can play mp3's and the vinyl yeah

00:37:57,279 --> 00:38:01,059
you know the orientation the speed of

00:37:58,779 --> 00:38:03,339
the vinyl on your turntable so you can

00:38:01,059 --> 00:38:07,660
actually scratch with your mp3's right

00:38:03,339 --> 00:38:09,599
so that's the idea about it so no it's

00:38:07,660 --> 00:38:13,269
like I think is very much possible

00:38:09,599 --> 00:38:16,029
people have done turntable applications

00:38:13,269 --> 00:38:17,769
on the web before so if we if you

00:38:16,029 --> 00:38:20,380
haven't even hit me up afterwards I can

00:38:17,769 --> 00:38:22,809
give you some names is yeah it's kind of

00:38:20,380 --> 00:38:25,719
working pretty nicely but yeah I mean

00:38:22,809 --> 00:38:28,690
just work you need you need to do it

00:38:25,719 --> 00:38:33,789
basically I'm making sense maybe you can

00:38:28,690 --> 00:38:36,069
make the next era so on the web so the

00:38:33,789 --> 00:38:38,680
two that you visualize a frequency I

00:38:36,069 --> 00:38:41,499
think it looks really useful to me like

00:38:38,680 --> 00:38:43,049
I think that that's all I've I knew that

00:38:41,499 --> 00:38:45,699
there's the q value that you can play to

00:38:43,049 --> 00:38:47,769
adjust somebody like I could not

00:38:45,699 --> 00:38:50,920
understand and i never knew like what

00:38:47,769 --> 00:38:53,880
that means so how do you draw that red

00:38:50,920 --> 00:38:57,369
line and you know the shape of dirt so

00:38:53,880 --> 00:38:59,440
in the Web Audio API there is this node

00:38:57,369 --> 00:39:02,229
that I have not presented but that

00:38:59,440 --> 00:39:05,410
exists that is called the analyzer node

00:39:02,229 --> 00:39:07,660
so the analyzer node you connect to

00:39:05,410 --> 00:39:09,849
analyze the UConnect other nodes to the

00:39:07,660 --> 00:39:11,739
analyzer node and it gives you either

00:39:09,849 --> 00:39:15,670
time domain or frequency domain

00:39:11,739 --> 00:39:18,009
representation of of the data that in

00:39:15,670 --> 00:39:18,440
input and then it gives you a buffer and

00:39:18,009 --> 00:39:20,150
then you

00:39:18,440 --> 00:39:22,040
I'm just drawing the buffer on the

00:39:20,150 --> 00:39:25,160
canvas I repeatedly using

00:39:22,040 --> 00:39:27,829
requestanimationframe so this one way of

00:39:25,160 --> 00:39:30,650
doing things for the filter for the

00:39:27,829 --> 00:39:33,020
filter there is a method on the bicoid

00:39:30,650 --> 00:39:35,150
filter that can give you what is called

00:39:33,020 --> 00:39:39,050
the frequency response of the filter and

00:39:35,150 --> 00:39:41,660
then you give it a number of frequency

00:39:39,050 --> 00:39:44,150
where you you want the the information

00:39:41,660 --> 00:39:47,000
and it gives you back a buffer that says

00:39:44,150 --> 00:39:48,440
oh I'm catching at this frequency and

00:39:47,000 --> 00:39:50,690
I'm boosting at this frequency and

00:39:48,440 --> 00:39:53,720
things like that so but the code is

00:39:50,690 --> 00:39:56,780
going to be online I have a last slide

00:39:53,720 --> 00:40:02,630
to show with a number of URLs if

00:39:56,780 --> 00:40:07,130
possible okay so thanks starters and and

00:40:02,630 --> 00:40:09,470
the other code I've presented today I've

00:40:07,130 --> 00:40:11,869
made a later literate JavaScript program

00:40:09,470 --> 00:40:16,099
that explains you in-depth how it works

00:40:11,869 --> 00:40:17,869
and possible ways of making it better if

00:40:16,099 --> 00:40:20,660
you want to know more about synthesis

00:40:17,869 --> 00:40:23,510
and how to emulate all the analog gear

00:40:20,660 --> 00:40:26,780
you just search since secrets on google

00:40:23,510 --> 00:40:29,569
and give you like a 60-year something a

00:40:26,780 --> 00:40:31,430
article series so yeah of course Twitter

00:40:29,569 --> 00:40:34,190
get a pad not an email if you if you

00:40:31,430 --> 00:40:37,220
need anything from me but yeah so it is

00:40:34,190 --> 00:40:39,650
like a literate JavaScript program so

00:40:37,220 --> 00:40:41,119
JavaScript on the right and pros on the

00:40:39,650 --> 00:40:44,569
left that explains everything that it's

00:40:41,119 --> 00:40:47,140
doing so yeah that's yeah so it's

00:40:44,569 --> 00:40:49,579
exactly the program that I wrote so I

00:40:47,140 --> 00:40:52,130
mean exactly not because like it was

00:40:49,579 --> 00:40:53,960
improved but like it does kind of the

00:40:52,130 --> 00:40:56,240
same sound it same technique is same

00:40:53,960 --> 00:40:58,280
instruments but yeah so yeah feel free

00:40:56,240 --> 00:41:01,010
to read to read it to read up on that

00:40:58,280 --> 00:41:04,609
because not sure about you that I find

00:41:01,010 --> 00:41:08,570
it pretty fun right thank you so much

00:41:04,609 --> 00:41:10,630
for thank you amazing

00:41:08,570 --> 00:41:10,630

YouTube URL: https://www.youtube.com/watch?v=Ww0jTafmd_w


