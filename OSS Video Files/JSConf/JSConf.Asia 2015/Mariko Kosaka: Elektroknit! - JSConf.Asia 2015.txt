Title: Mariko Kosaka: Elektroknit! - JSConf.Asia 2015
Publication date: 2016-01-02
Playlist: JSConf.Asia 2015
Description: 
	Electroknit is a craft project to convert graphics into knitted patterns for an electric knitting machine. What does it take to turn a digital image into a physical object like a knitted sweater? The answer is series of image processing operations. As web engineer, we take it for granted that an img-tag displays an image because it is a "digital photo." Let's look at what "a Pixel" is & how you can manipulate for fun with Canvas API & JavaScript.

Mariko is an engineer who loves data and knitting. When she is not making software at Scripto, she uses code to help her design textiles & organize local JavaScript meetup in New York City called BrooklynJS.


JSConf.Asia - Red Dot Design Museum, Singapore - 20 November 2015.

Source: http://2015.jsconf.asia
Slides: http://kosamari.com/presentation/jsconfasia-2015/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:07,220 --> 00:00:15,690
hi I'm Mario has introduced my twitter

00:00:12,660 --> 00:00:18,900
handle is this and that's my icon if you

00:00:15,690 --> 00:00:20,939
know me from Twitter I read a JavaScript

00:00:18,900 --> 00:00:23,939
at a company called scripto and I do not

00:00:20,939 --> 00:00:26,910
do this as a job I'm a web application

00:00:23,939 --> 00:00:29,160
engineer company called scripto I also

00:00:26,910 --> 00:00:31,019
co-organized a meet-up in Brooklyn New

00:00:29,160 --> 00:00:34,710
York called Brooklyn Jas and it's

00:00:31,019 --> 00:00:37,260
interesting it's just happening as a

00:00:34,710 --> 00:00:38,850
Thursday night right now in Brooklyn

00:00:37,260 --> 00:00:40,710
joke so like I've been like getting a

00:00:38,850 --> 00:00:43,410
lot of tweets it's our two year

00:00:40,710 --> 00:00:45,360
University so it's really honor to be

00:00:43,410 --> 00:00:48,930
here speaking about this Saturday is

00:00:45,360 --> 00:00:51,239
gone flowering I also make textile with

00:00:48,930 --> 00:00:54,809
JavaScript and that's what I am talking

00:00:51,239 --> 00:00:55,890
today what do you mean by making textile

00:00:54,809 --> 00:00:58,859
with JavaScript

00:00:55,890 --> 00:01:02,160
well that means my weekend desk look

00:00:58,859 --> 00:01:06,060
like this computer in the middle yarns

00:01:02,160 --> 00:01:07,979
and my knitting machine so the title of

00:01:06,060 --> 00:01:10,200
the talk is electro knit pixel to

00:01:07,979 --> 00:01:14,010
textile and I'm going to explain like

00:01:10,200 --> 00:01:15,860
how a digital photo image gets into

00:01:14,010 --> 00:01:20,040
textile pattern - yeah

00:01:15,860 --> 00:01:22,439
so as I mentioned I design and I get in

00:01:20,040 --> 00:01:23,790
JavaScript so I'm going to explain a

00:01:22,439 --> 00:01:27,900
little bit about knitting with

00:01:23,790 --> 00:01:30,689
JavaScript part part first so here's a

00:01:27,900 --> 00:01:34,439
little video of me operating a knitting

00:01:30,689 --> 00:01:37,470
machine so I wrote a code know the base

00:01:34,439 --> 00:01:39,930
code to talk to this machine from 80s

00:01:37,470 --> 00:01:44,490
this machine was developed in 80s or

00:01:39,930 --> 00:01:47,399
it's been made since way way before time

00:01:44,490 --> 00:01:49,590
and in 80s they made this knitting

00:01:47,399 --> 00:01:52,619
machine that is a electro net which is

00:01:49,590 --> 00:01:55,920
computerized knitting machine and this

00:01:52,619 --> 00:01:59,219
year I took on the project to figure out

00:01:55,920 --> 00:02:01,920
how to talk to this machine from my

00:01:59,219 --> 00:02:04,049
computer because this was an 1880s way

00:02:01,920 --> 00:02:07,560
before Apple computer so it's designed

00:02:04,049 --> 00:02:10,950
to talk to a special module that gets a

00:02:07,560 --> 00:02:12,300
frumpy discuss of data and then store

00:02:10,950 --> 00:02:15,150
that they are actually

00:02:12,300 --> 00:02:17,160
he plugs into your your TV monitor and

00:02:15,150 --> 00:02:19,920
then you have a controller joystick to

00:02:17,160 --> 00:02:22,380
program the patterns into it so I wanted

00:02:19,920 --> 00:02:24,020
to do that from my computer a lot of

00:02:22,380 --> 00:02:27,210
people have hacked on this so I

00:02:24,020 --> 00:02:29,070
researched a lot of code written by

00:02:27,210 --> 00:02:32,180
other language and I thought why not

00:02:29,070 --> 00:02:35,820
JavaScript so I started doing this and

00:02:32,180 --> 00:02:39,450
so as I mentioned it has a computer and

00:02:35,820 --> 00:02:42,960
I presented at a J's Kampf us in May and

00:02:39,450 --> 00:02:45,540
it's very nice to get to talk what came

00:02:42,960 --> 00:02:50,760
after that a disease comes Asia in

00:02:45,540 --> 00:02:54,000
Singapore so this is run by computer but

00:02:50,760 --> 00:02:56,730
a model will be full disk knitting

00:02:54,000 --> 00:02:59,400
machine was operated by punch guard much

00:02:56,730 --> 00:03:01,980
like how all the computers were operated

00:02:59,400 --> 00:03:04,020
by punch guard so right after I figure

00:03:01,980 --> 00:03:05,370
out how to operate this machine I got

00:03:04,020 --> 00:03:07,980
really interested in punch card

00:03:05,370 --> 00:03:10,800
mechanism and I kind of like prototype

00:03:07,980 --> 00:03:13,200
my own punch coil computer and program

00:03:10,800 --> 00:03:17,640
that with johnny-five which is a Java

00:03:13,200 --> 00:03:19,800
JavaScript robotics framework so what it

00:03:17,640 --> 00:03:22,830
does is it takes the punch card it's a

00:03:19,800 --> 00:03:25,440
huge punch card I designed it takes it

00:03:22,830 --> 00:03:27,570
if there's a hole it won't push the pin

00:03:25,440 --> 00:03:29,940
if there isn't the hole then it push the

00:03:27,570 --> 00:03:33,660
pin and that gets the input of it and

00:03:29,940 --> 00:03:35,790
this is kind of a little mock-up of a

00:03:33,660 --> 00:03:42,690
web application that is designing the

00:03:35,790 --> 00:03:45,840
textile by punch card input so this

00:03:42,690 --> 00:03:48,780
whole thing about doing JavaScript and

00:03:45,840 --> 00:03:51,810
knitting came when I actually was

00:03:48,780 --> 00:03:55,500
studying JavaScript and to be able to

00:03:51,810 --> 00:03:57,930
code I was another way before I became

00:03:55,500 --> 00:04:00,980
engineer and I noticed that when I was

00:03:57,930 --> 00:04:04,050
learning JavaScript I I noticed that the

00:04:00,980 --> 00:04:07,050
JavaScript is really like knitting or

00:04:04,050 --> 00:04:09,450
coding is like knitting knitting atomic

00:04:07,050 --> 00:04:11,790
unique for knitting is two stitches much

00:04:09,450 --> 00:04:13,980
like computer is ones and zeros it's

00:04:11,790 --> 00:04:16,260
knit stitch and purl stitch

00:04:13,980 --> 00:04:18,810
and it creates a very different face of

00:04:16,260 --> 00:04:21,570
the fabric and the combination of those

00:04:18,810 --> 00:04:24,090
creates a calf of your sweater or

00:04:21,570 --> 00:04:26,550
neckline or like a lab rat pattern in

00:04:24,090 --> 00:04:29,699
there the code

00:04:26,550 --> 00:04:33,090
or pattern for knitting the instruction

00:04:29,699 --> 00:04:36,960
to knit certain sweaters or scarf comes

00:04:33,090 --> 00:04:40,889
in the form of code so that means you

00:04:36,960 --> 00:04:44,069
can knit in JavaScript so first line of

00:04:40,889 --> 00:04:48,960
this instruction it's Co 5 meaning cast

00:04:44,069 --> 00:04:52,220
on 5 start a width of 5 which it's like

00:04:48,960 --> 00:04:56,430
creating a new array of length 5 and

00:04:52,220 --> 00:05:00,840
next one K 5 meaning like put 5 knit

00:04:56,430 --> 00:05:03,900
stitches into that array M 1 is make 1

00:05:00,840 --> 00:05:06,750
so now you're expanding the size of the

00:05:03,900 --> 00:05:09,990
array which is like operating a scarf

00:05:06,750 --> 00:05:13,379
dot price method and there's much more

00:05:09,990 --> 00:05:17,400
clear loop indication in knitting code

00:05:13,379 --> 00:05:19,860
or pattern knit until 2 stitches

00:05:17,400 --> 00:05:23,580
remaining meaning much like wild loop

00:05:19,860 --> 00:05:30,240
until there is a count of 2 just append

00:05:23,580 --> 00:05:35,520
knit stitches into the array so now if

00:05:30,240 --> 00:05:41,880
you can switch to this machine basically

00:05:35,520 --> 00:05:44,039
this machine knit way faster than your

00:05:41,880 --> 00:05:45,719
hand can knit it's doing the same thing

00:05:44,039 --> 00:05:49,620
it's appending the knit stitches inside

00:05:45,719 --> 00:05:52,139
it but it is going to do it way faster

00:05:49,620 --> 00:05:58,590
than you can do so in stuff feed switch

00:05:52,139 --> 00:06:00,710
to the camera yeah if not I can show the

00:05:58,590 --> 00:06:00,710
video

00:06:02,260 --> 00:06:13,350
can we focus the camera to the knitting

00:06:06,220 --> 00:06:16,660
machine instead of the slides to video

00:06:13,350 --> 00:06:20,140
maybe technical difficulties welcome

00:06:16,660 --> 00:06:20,560
back to right Linda you're here all

00:06:20,140 --> 00:06:23,920
right

00:06:20,560 --> 00:06:28,600
so as you can see if you can focus on

00:06:23,920 --> 00:06:33,880
this area this is a width of 60 array to

00:06:28,600 --> 00:06:38,740
me and when you pull this handle it

00:06:33,880 --> 00:06:41,770
knits a 100 fabric and to me this is

00:06:38,740 --> 00:06:45,400
much like leading LA and not appending

00:06:41,770 --> 00:06:49,900
into the matrix so you can see this is

00:06:45,400 --> 00:06:52,420
creating one wall by wall needing a

00:06:49,900 --> 00:06:54,700
little by little but if you have knit

00:06:52,420 --> 00:07:05,290
this is way faster than you do at a

00:06:54,700 --> 00:07:07,810
heart so can you switch to the slide so

00:07:05,290 --> 00:07:10,090
now I figure out how to talk to this

00:07:07,810 --> 00:07:12,070
machine put the data in and then knit

00:07:10,090 --> 00:07:14,860
and I started knitting and I thought

00:07:12,070 --> 00:07:18,100
instead of just taking an image it'll be

00:07:14,860 --> 00:07:21,250
cool if I can JavaScript to make actual

00:07:18,100 --> 00:07:24,990
image too so I started doing this nerdy

00:07:21,250 --> 00:07:28,450
knit project first I did a cleaning a d3

00:07:24,990 --> 00:07:31,510
visualization and exporting it as a

00:07:28,450 --> 00:07:34,720
image and put it into the machine so

00:07:31,510 --> 00:07:38,950
that the pattern for this scarf is

00:07:34,720 --> 00:07:41,560
actually made by JavaScript the other

00:07:38,950 --> 00:07:43,840
project that I did was a creating a

00:07:41,560 --> 00:07:46,660
domain specific language for knitting so

00:07:43,840 --> 00:07:49,420
again this is written in JavaScript web

00:07:46,660 --> 00:07:54,670
application the raw parser is learning

00:07:49,420 --> 00:07:58,720
made by pictures I can type and change

00:07:54,670 --> 00:08:03,370
the pattern interactively and then you

00:07:58,720 --> 00:08:06,580
download and then load it in the other

00:08:03,370 --> 00:08:08,770
one I did was a one day somebody from

00:08:06,580 --> 00:08:11,380
Travis CI tweeted that they had a API

00:08:08,770 --> 00:08:15,440
outage and they had this beautiful

00:08:11,380 --> 00:08:18,170
or maybe sad glass of their day

00:08:15,440 --> 00:08:19,550
dropping down and somebody not knowing

00:08:18,170 --> 00:08:21,320
anything about what I do

00:08:19,550 --> 00:08:23,960
tweet it that it'll be great if I can

00:08:21,320 --> 00:08:26,240
make a scarf out of it my friend if you

00:08:23,960 --> 00:08:27,800
knew I do JavaScript knitting tweet it

00:08:26,240 --> 00:08:31,040
at me saying like maybe you can make

00:08:27,800 --> 00:08:32,960
this and I was like I totally can so I

00:08:31,040 --> 00:08:36,860
made it and then send it to Germany

00:08:32,960 --> 00:08:39,020
office of a travesty I so though this

00:08:36,860 --> 00:08:40,909
thing kind of things JavaScript through

00:08:39,020 --> 00:08:44,570
and through cleaning the image put it

00:08:40,909 --> 00:08:46,550
into the machine is what I do a lot of I

00:08:44,570 --> 00:08:48,590
started after I figured out how to use

00:08:46,550 --> 00:08:50,330
this machine and how to hack on it I

00:08:48,590 --> 00:08:52,190
started making a lot of knitwear and

00:08:50,330 --> 00:08:55,100
then there was a lot of friction and

00:08:52,190 --> 00:08:57,200
friction was using Photoshop just the

00:08:55,100 --> 00:08:59,180
color image is not automatically

00:08:57,200 --> 00:09:01,070
loadable to machine I have to do a lot

00:08:59,180 --> 00:09:03,920
of image processing and I was using

00:09:01,070 --> 00:09:06,500
Photoshop but I was like hey why not do

00:09:03,920 --> 00:09:09,380
it in JavaScript right image processing

00:09:06,500 --> 00:09:11,510
doing JavaScript if you think about

00:09:09,380 --> 00:09:13,340
image processing you immediate to me I

00:09:11,510 --> 00:09:15,230
immediately think oh maybe I should

00:09:13,340 --> 00:09:19,400
learn a language see or using a

00:09:15,230 --> 00:09:21,530
framework like open CV but I'm a kind of

00:09:19,400 --> 00:09:24,040
developer who started making button

00:09:21,530 --> 00:09:27,650
smooth by JavaScript I didn't go to a

00:09:24,040 --> 00:09:29,810
computer science College I just started

00:09:27,650 --> 00:09:33,710
making websites and then learn to code

00:09:29,810 --> 00:09:36,650
so javascript is pretty much my choice

00:09:33,710 --> 00:09:39,320
of language in but what I do so let's do

00:09:36,650 --> 00:09:42,380
this in JavaScript right so the process

00:09:39,320 --> 00:09:44,990
of making a color image into this

00:09:42,380 --> 00:09:47,420
machine is three steps first you need to

00:09:44,990 --> 00:09:49,460
get a lasso graphics which I will

00:09:47,420 --> 00:09:51,380
explain what it is in a minute and then

00:09:49,460 --> 00:09:54,170
do image processing whether you want to

00:09:51,380 --> 00:09:56,780
change the color or invert the color do

00:09:54,170 --> 00:09:58,850
whatever you want and then that step is

00:09:56,780 --> 00:10:02,150
making it to one bit bitmap image which

00:09:58,850 --> 00:10:05,839
I will explain but what it means is that

00:10:02,150 --> 00:10:08,600
just compressing the data so that it is

00:10:05,839 --> 00:10:11,330
representable by just two colors or even

00:10:08,600 --> 00:10:13,610
one color color or no color because my

00:10:11,330 --> 00:10:16,550
machine only takes two color of yarn

00:10:13,610 --> 00:10:20,780
it is not a web-safe color variety of

00:10:16,550 --> 00:10:23,600
you know yarns right so let's start the

00:10:20,780 --> 00:10:26,720
last three graphics what does that mean

00:10:23,600 --> 00:10:28,370
NIDA Laster graphic well the last thing

00:10:26,720 --> 00:10:32,089
I think is best explained by a

00:10:28,370 --> 00:10:34,490
collection of pixels so this is my movie

00:10:32,089 --> 00:10:36,860
that I took from using a color picker

00:10:34,490 --> 00:10:41,089
you can see the magnified version of the

00:10:36,860 --> 00:10:45,139
texture each pixel has a color data so

00:10:41,089 --> 00:10:48,920
you can think that the name is levy like

00:10:45,139 --> 00:10:52,190
a pixel art the stitch cannot be bent

00:10:48,920 --> 00:10:54,589
from point A to B by making straight

00:10:52,190 --> 00:10:59,300
line I have to draw a line saying like

00:10:54,589 --> 00:11:00,920
the left left up left left up so you can

00:10:59,300 --> 00:11:03,800
think of the last two image as like a

00:11:00,920 --> 00:11:06,079
collection of pixels information the one

00:11:03,800 --> 00:11:08,959
that's the opposite of blaster is a

00:11:06,079 --> 00:11:11,569
vector like what I explained you it's

00:11:08,959 --> 00:11:14,720
like a SVG you define I want line from

00:11:11,569 --> 00:11:18,050
point A to point B but that's not how

00:11:14,720 --> 00:11:19,759
knitting works so you need a Laster so I

00:11:18,050 --> 00:11:21,889
need to get a last two image right

00:11:19,759 --> 00:11:23,990
collection of image but like what do you

00:11:21,889 --> 00:11:25,970
mean by like getting a data out of image

00:11:23,990 --> 00:11:28,550
like I only know like using image tag

00:11:25,970 --> 00:11:32,329
and I've never liked Leonard a picture

00:11:28,550 --> 00:11:34,519
pixel by pixel how do I do that well

00:11:32,329 --> 00:11:38,000
actually you can do it as a JavaScript

00:11:34,519 --> 00:11:39,949
engineer using canvas of html5 you

00:11:38,000 --> 00:11:42,199
create a compass and assume that you

00:11:39,949 --> 00:11:46,009
loaded some kind of image into this

00:11:42,199 --> 00:11:50,240
canvas and you use a get image data

00:11:46,009 --> 00:11:53,329
method to get a array of numbers and

00:11:50,240 --> 00:11:58,209
this is a flat LA of numbers which start

00:11:53,329 --> 00:12:01,430
from the top pixel corner of 1 1 X 1 Y

00:11:58,209 --> 00:12:04,639
RGB red green and blue value and then

00:12:01,430 --> 00:12:07,970
the alpha opacity so if you do the CSS

00:12:04,639 --> 00:12:10,939
color in LGB a you or much familiar with

00:12:07,970 --> 00:12:14,089
this format it's basically a flat array

00:12:10,939 --> 00:12:19,130
of all the pixel information of that

00:12:14,089 --> 00:12:22,220
image so now I have a data that means I

00:12:19,130 --> 00:12:26,420
can emulate in canvas how computer

00:12:22,220 --> 00:12:28,160
displays an image and i padded the LA so

00:12:26,420 --> 00:12:31,069
that it's a little a lot easier to read

00:12:28,160 --> 00:12:33,889
so you let's clear our output canvas

00:12:31,069 --> 00:12:36,410
objects another one to have fun with it

00:12:33,889 --> 00:12:37,250
and clear a function of draw draw

00:12:36,410 --> 00:12:39,500
function gets

00:12:37,250 --> 00:12:42,020
like holiness of the pixel and then

00:12:39,500 --> 00:12:44,240
three colors to represent that pixel and

00:12:42,020 --> 00:12:47,350
every time this function is called you

00:12:44,240 --> 00:12:51,290
append a colored rectangle into the

00:12:47,350 --> 00:12:54,340
canvas object so first one is blue which

00:12:51,290 --> 00:12:59,170
is red is zero

00:12:54,340 --> 00:13:02,420
gleen is 43 blue is 125 and opacity of

00:12:59,170 --> 00:13:05,120
no paucity lady and then you get lighter

00:13:02,420 --> 00:13:08,090
blue lighter blue the next one is yellow

00:13:05,120 --> 00:13:10,760
and yellow so this is how computer

00:13:08,090 --> 00:13:14,540
lenders image based on the pixel data

00:13:10,760 --> 00:13:16,340
that you can get from the canvas so that

00:13:14,540 --> 00:13:18,170
means you can manipulate or life

00:13:16,340 --> 00:13:19,010
intercept this draw function and then

00:13:18,170 --> 00:13:21,320
have fun with it

00:13:19,010 --> 00:13:24,230
so let's invert the color inverting the

00:13:21,320 --> 00:13:28,070
color is flipping the the value so

00:13:24,230 --> 00:13:31,520
basically you get a red green and blue

00:13:28,070 --> 00:13:34,130
value subtract it from 255 and then use

00:13:31,520 --> 00:13:37,940
that number instead so you do that and

00:13:34,130 --> 00:13:40,910
then get the inverted image Joe maybe

00:13:37,940 --> 00:13:44,060
you can just increase the value of just

00:13:40,910 --> 00:13:46,850
a blue color in that case you add in

00:13:44,060 --> 00:13:49,990
this demo I edit the 60 and then glue

00:13:46,850 --> 00:13:53,870
gets blue R and yellow gets less yellow

00:13:49,990 --> 00:13:56,720
you can also grayscale an image and I

00:13:53,870 --> 00:13:58,670
use very simple algorithm to do by

00:13:56,720 --> 00:14:01,010
scaling gray scaling there's a many way

00:13:58,670 --> 00:14:03,260
to do it though the way I'm doing it is

00:14:01,010 --> 00:14:06,680
not the most accurate to the human eye

00:14:03,260 --> 00:14:09,500
but my clay scale image what eventually

00:14:06,680 --> 00:14:12,950
goes into this two color and fabric so I

00:14:09,500 --> 00:14:15,620
don't need II need sophisticated I'll

00:14:12,950 --> 00:14:18,800
going to do it so the way to do it or

00:14:15,620 --> 00:14:22,839
the way how you do it is you get a color

00:14:18,800 --> 00:14:26,300
RGB value you find the largest value in

00:14:22,839 --> 00:14:29,720
those LGB repeat that four three times

00:14:26,300 --> 00:14:32,630
and then you get grayscale the color so

00:14:29,720 --> 00:14:34,460
now you manipulated the color let's do

00:14:32,630 --> 00:14:37,280
something more fun like let's blur a

00:14:34,460 --> 00:14:38,839
photo or sharpen the photo or let's find

00:14:37,280 --> 00:14:41,089
the edge because sometimes I take a

00:14:38,839 --> 00:14:43,730
photo of something and I only want to

00:14:41,089 --> 00:14:46,820
represent the outline of the thing and I

00:14:43,730 --> 00:14:49,580
load it into Photoshop and draw the line

00:14:46,820 --> 00:14:50,209
from that object to get the thing but if

00:14:49,580 --> 00:14:52,449
I can

00:14:50,209 --> 00:14:55,490
do it and automatically that'll be cool

00:14:52,449 --> 00:14:57,470
in order to do that all three of them

00:14:55,490 --> 00:14:59,689
use the same method called kernel

00:14:57,470 --> 00:15:02,209
convolution but I like to call it as a

00:14:59,689 --> 00:15:06,860
pixel social water and it really is a

00:15:02,209 --> 00:15:09,199
friendship between pixels so you get an

00:15:06,860 --> 00:15:11,959
image again I'm using a gray scale

00:15:09,199 --> 00:15:14,089
because grayscale image again only has a

00:15:11,959 --> 00:15:16,759
one value per pax also it's easier for

00:15:14,089 --> 00:15:18,589
demo if you want to do it in color you

00:15:16,759 --> 00:15:23,089
just repeat it three times across

00:15:18,589 --> 00:15:26,319
LGV again each pixel has one color on

00:15:23,089 --> 00:15:28,819
one number you introduce this idea of

00:15:26,319 --> 00:15:32,029
convolution and kernel but I'd like to

00:15:28,819 --> 00:15:36,529
think it as a pixel social graph so this

00:15:32,029 --> 00:15:38,749
the center is you you are the kernel you

00:15:36,529 --> 00:15:41,089
give number to yourself how valuable you

00:15:38,749 --> 00:15:43,100
are the surrounding pixels are your

00:15:41,089 --> 00:15:45,709
friends and you also give a number to

00:15:43,100 --> 00:15:48,050
France how valuable they are so you get

00:15:45,709 --> 00:15:51,439
to choose like I like this like a

00:15:48,050 --> 00:15:53,929
left-hand guy too and then later on size

00:15:51,439 --> 00:15:57,259
three you can choose your friendship

00:15:53,929 --> 00:15:59,149
right it's basically how much of your

00:15:57,259 --> 00:16:03,049
friend or which corner of your friend

00:15:59,149 --> 00:16:05,660
you let affects you more you over way

00:16:03,049 --> 00:16:08,720
that invisible window there so let's

00:16:05,660 --> 00:16:12,920
look at this kernel 134 and we're going

00:16:08,720 --> 00:16:13,759
to figure out what to change right start

00:16:12,920 --> 00:16:16,579
from the corner

00:16:13,759 --> 00:16:20,929
you take actual value of the pixel and

00:16:16,579 --> 00:16:23,329
then multiply by the the friendships

00:16:20,929 --> 00:16:26,569
level that you define so in this case 1

00:16:23,329 --> 00:16:30,949
so it stays as 159 next one is 2 so

00:16:26,569 --> 00:16:33,499
doubled into 72 next one status 63 and

00:16:30,949 --> 00:16:36,579
then you do that for Hall 9 pixels and

00:16:33,499 --> 00:16:40,249
then get the total of 2061

00:16:36,579 --> 00:16:44,449
you divide it by the total amount in

00:16:40,249 --> 00:16:47,600
this convolution or your social graph

00:16:44,449 --> 00:16:50,420
divide it by that and then you get 28 so

00:16:47,600 --> 00:16:54,589
next time you lender draw image you use

00:16:50,420 --> 00:16:59,029
28 at 128 instead of 134 you do that for

00:16:54,589 --> 00:17:02,269
every single pixel this 190 gets 80 42

00:16:59,029 --> 00:17:03,460
gets 54 you do that every single one and

00:17:02,269 --> 00:17:06,760
then you can

00:17:03,460 --> 00:17:10,209
get a image processed data so let's look

00:17:06,760 --> 00:17:12,610
at some of the effects so the social

00:17:10,209 --> 00:17:15,730
graph that we used in the example

00:17:12,610 --> 00:17:18,670
creates a blur maybe it's a little

00:17:15,730 --> 00:17:21,790
harder to see but you can see that the

00:17:18,670 --> 00:17:24,280
photo is blurring blur function is not

00:17:21,790 --> 00:17:27,069
only to make image fuzzy it's a way to

00:17:24,280 --> 00:17:29,350
get a little noise so if you have a

00:17:27,069 --> 00:17:31,690
noisy photo you can blur it and then

00:17:29,350 --> 00:17:35,950
sharpen it again and to get the make us

00:17:31,690 --> 00:17:37,840
goose photo next one you decide your

00:17:35,950 --> 00:17:41,679
friends are a little more negative than

00:17:37,840 --> 00:17:44,650
you are right your top down there five

00:17:41,679 --> 00:17:47,860
friends or minus 1 and then the diagonal

00:17:44,650 --> 00:17:52,830
corner so 0 that gets you a sharp edge

00:17:47,860 --> 00:17:56,170
so you can see that before head after

00:17:52,830 --> 00:17:58,210
the next one is edge detection so this

00:17:56,170 --> 00:18:01,030
time you are really valuable but your

00:17:58,210 --> 00:18:03,160
friends are not right and instead of

00:18:01,030 --> 00:18:06,520
dividing by total sum of the number this

00:18:03,160 --> 00:18:08,380
time you divide it by number of pixel or

00:18:06,520 --> 00:18:12,760
the size of the matrix so this time 9

00:18:08,380 --> 00:18:14,890
divided by 9 you get a line from the

00:18:12,760 --> 00:18:18,850
picture may be a little hard to see it

00:18:14,890 --> 00:18:21,370
but you can see it so doing this was

00:18:18,850 --> 00:18:23,380
leaving slow because remember just

00:18:21,370 --> 00:18:26,740
joining the picture is number of pixels

00:18:23,380 --> 00:18:30,309
but then you added the computation 9

00:18:26,740 --> 00:18:33,429
more time to calculate what this value

00:18:30,309 --> 00:18:38,320
would be so I was like can I make this

00:18:33,429 --> 00:18:38,770
like pattern yes you can with web

00:18:38,320 --> 00:18:40,600
workers

00:18:38,770 --> 00:18:42,730
what do you mean parallel with the

00:18:40,600 --> 00:18:43,120
workers way JavaScript this thing was

00:18:42,730 --> 00:18:46,030
ready

00:18:43,120 --> 00:18:47,860
what web worker is magic thing and that

00:18:46,030 --> 00:18:51,429
lives in browser that I did not know

00:18:47,860 --> 00:18:54,400
until now it's a piece of JavaScript

00:18:51,429 --> 00:18:57,280
that lands on the background separate it

00:18:54,400 --> 00:18:59,800
from your browser's J's thread so you

00:18:57,280 --> 00:19:01,990
can hands on the data into Volker Jas

00:18:59,800 --> 00:19:04,900
and while Walker Jas is doing heavy

00:19:01,990 --> 00:19:06,780
computation it will not block your UI

00:19:04,900 --> 00:19:10,090
being animated

00:19:06,780 --> 00:19:12,250
so worker from now on the few slides are

00:19:10,090 --> 00:19:14,320
about web worker so if you know you can

00:19:12,250 --> 00:19:17,770
just you know skip it

00:19:14,320 --> 00:19:20,470
so you start you you make a new worker

00:19:17,770 --> 00:19:26,350
by new worker and then get a pass to the

00:19:20,470 --> 00:19:30,160
worker ejs the hosts JavaScript and the

00:19:26,350 --> 00:19:33,160
Walker JavaScript talks in the method

00:19:30,160 --> 00:19:36,040
called post message and each of them has

00:19:33,160 --> 00:19:42,309
event code a on message and listening to

00:19:36,040 --> 00:19:44,860
the post message fired post message have

00:19:42,309 --> 00:19:47,049
one argument so if you want to pass many

00:19:44,860 --> 00:19:50,200
many data like in this case I am passing

00:19:47,049 --> 00:19:52,240
ID and data you needed to put it into

00:19:50,200 --> 00:19:56,799
the JavaScript just so that the argument

00:19:52,240 --> 00:19:59,350
is one worker je s can be multiplied so

00:19:56,799 --> 00:20:00,429
that you are parallel processing in that

00:19:59,350 --> 00:20:03,190
case hostia

00:20:00,429 --> 00:20:06,790
starts as one but then you fire up many

00:20:03,190 --> 00:20:09,429
work as many workers you want so in my

00:20:06,790 --> 00:20:13,030
case i divided up my image into multiple

00:20:09,429 --> 00:20:16,450
workers get just this area for worker

00:20:13,030 --> 00:20:20,140
one of the data and passing it into a

00:20:16,450 --> 00:20:22,780
workers and doing it it made it faster

00:20:20,140 --> 00:20:27,010
however this is not a magic function for

00:20:22,780 --> 00:20:29,290
everything the trick is you are passing

00:20:27,010 --> 00:20:32,770
and copying a data every time you fire

00:20:29,290 --> 00:20:35,770
up the worker so this data part data

00:20:32,770 --> 00:20:37,240
part you're passing copying the data so

00:20:35,770 --> 00:20:39,429
if you're doing a simple thing and

00:20:37,240 --> 00:20:41,350
copying the data takes more than your

00:20:39,429 --> 00:20:44,530
computation of simple simple computation

00:20:41,350 --> 00:20:47,200
it gets actually slower than just doing

00:20:44,530 --> 00:20:47,950
it in the single process so this is kind

00:20:47,200 --> 00:20:49,270
of give-and-take

00:20:47,950 --> 00:20:51,460
but if you have leaving heavy

00:20:49,270 --> 00:20:55,240
computation work web workers makes it

00:20:51,460 --> 00:20:57,490
faster so we covered what the last

00:20:55,240 --> 00:20:59,380
graphic is and then how to do the image

00:20:57,490 --> 00:21:01,780
processing on the data from last er

00:20:59,380 --> 00:21:03,910
graphic let's talk about how to make it

00:21:01,780 --> 00:21:08,260
into two colors so that I can represent

00:21:03,910 --> 00:21:10,150
it into yarn you can start from color

00:21:08,260 --> 00:21:12,940
image but in that case you needed to

00:21:10,150 --> 00:21:14,890
make it to grayscale first the grayscale

00:21:12,940 --> 00:21:16,870
image you may think it is black and

00:21:14,890 --> 00:21:17,919
white photography so it's already late

00:21:16,870 --> 00:21:20,350
already

00:21:17,919 --> 00:21:24,130
liddie for two colors but in fact

00:21:20,350 --> 00:21:26,260
grayscale image is a white pixel black

00:21:24,130 --> 00:21:29,350
pistol and many shades of grey in

00:21:26,260 --> 00:21:32,110
between so I absolutely need two colors

00:21:29,350 --> 00:21:34,450
like this one way to do it it's

00:21:32,110 --> 00:21:37,870
breathing in half or put the threshold

00:21:34,450 --> 00:21:39,880
somewhere and anything over then that

00:21:37,870 --> 00:21:43,030
number gets white when seeing less than

00:21:39,880 --> 00:21:45,669
that number gets black and you get image

00:21:43,030 --> 00:21:47,650
like this this works very well if you're

00:21:45,669 --> 00:21:49,179
dealing with logo data or graphics data

00:21:47,650 --> 00:21:52,390
not a photography

00:21:49,179 --> 00:21:55,380
sadly you can see the definition of the

00:21:52,390 --> 00:21:58,690
lion male on gets you know washed away

00:21:55,380 --> 00:22:00,880
in order to preserve that like what

00:21:58,690 --> 00:22:05,260
newspaper does you need to do things

00:22:00,880 --> 00:22:08,080
called dithering this ring start again

00:22:05,260 --> 00:22:11,230
with image data that you get from

00:22:08,080 --> 00:22:15,280
greyscale image well each pixel gets one

00:22:11,230 --> 00:22:18,549
number you apply a noise matrix or

00:22:15,280 --> 00:22:20,770
detering matrix and over where you

00:22:18,549 --> 00:22:24,820
compare the under pixel and then the

00:22:20,770 --> 00:22:27,460
overlaid pixel value if it's lower the

00:22:24,820 --> 00:22:30,159
the image input is lower than the desert

00:22:27,460 --> 00:22:32,320
matrix it gets white if it's over then

00:22:30,159 --> 00:22:36,790
it gets black and you can we present

00:22:32,320 --> 00:22:39,309
that in 1 and 0 1 bit image so the

00:22:36,790 --> 00:22:41,350
output of that would look like this so

00:22:39,309 --> 00:22:43,900
you may think this is grey from fallback

00:22:41,350 --> 00:22:47,770
but this is actually represented in just

00:22:43,900 --> 00:22:50,020
white and black pixels and that way I

00:22:47,770 --> 00:22:54,460
can use two yarns to the present this

00:22:50,020 --> 00:22:57,120
image so once I figure that out I was

00:22:54,460 --> 00:22:59,559
like okay I can make I can automate my

00:22:57,120 --> 00:23:04,090
process to create an image for this

00:22:59,559 --> 00:23:06,130
knitting machine I can save that data in

00:23:04,090 --> 00:23:08,290
some kind of JSON or something because

00:23:06,130 --> 00:23:10,360
up until now it is just an array of

00:23:08,290 --> 00:23:12,070
information right I'm just using that a

00:23:10,360 --> 00:23:14,620
layer of information to lender on my

00:23:12,070 --> 00:23:16,690
screen not as an image can i download

00:23:14,620 --> 00:23:19,659
that as an image file because it's a lot

00:23:16,690 --> 00:23:21,250
easier and portable to keep track of it

00:23:19,659 --> 00:23:23,230
should be able to do that right because

00:23:21,250 --> 00:23:28,450
we download image from web all the time

00:23:23,230 --> 00:23:32,770
so my thinking was that okay I know the

00:23:28,450 --> 00:23:33,790
the type of well the the what do you

00:23:32,770 --> 00:23:38,440
call it

00:23:33,790 --> 00:23:40,750
the type of the the la that the canvas

00:23:38,440 --> 00:23:42,670
object takes so let's create that I have

00:23:40,750 --> 00:23:47,380
one zero one zero but then converted

00:23:42,670 --> 00:23:50,800
into 255 255 255 Pasadena 255 pixel and

00:23:47,380 --> 00:23:53,860
then 0 0 0 255 pixel create a new canvas

00:23:50,800 --> 00:23:57,280
object put that data into canvas and

00:23:53,860 --> 00:24:01,540
then once it's in canvas you can use to

00:23:57,280 --> 00:24:03,670
data URL to get a base64 representation

00:24:01,540 --> 00:24:05,140
of that image and then you can just put

00:24:03,670 --> 00:24:09,030
it into your L and then download the

00:24:05,140 --> 00:24:11,860
image however this did not work

00:24:09,030 --> 00:24:16,690
specifically dispar did not work and

00:24:11,860 --> 00:24:19,750
this part what's the problem it was not

00:24:16,690 --> 00:24:22,240
just updating the data and I was looking

00:24:19,750 --> 00:24:24,820
at this inspector and why is it not

00:24:22,240 --> 00:24:26,590
doing this because it's la because I

00:24:24,820 --> 00:24:30,160
assumed that it's la because it came

00:24:26,590 --> 00:24:33,880
back in you know square bracket looking

00:24:30,160 --> 00:24:37,060
closely into it this was something code

00:24:33,880 --> 00:24:41,290
you need a clumped array and I was like

00:24:37,060 --> 00:24:44,680
what is that what is that I mean I have

00:24:41,290 --> 00:24:46,450
never seen this thing in my inspector

00:24:44,680 --> 00:24:48,340
before I mean granted I was in the game

00:24:46,450 --> 00:24:52,120
developer I wasn't dealing there's a lot

00:24:48,340 --> 00:24:54,610
of compass at all but like what this

00:24:52,120 --> 00:24:57,850
thing is called typed array and first of

00:24:54,610 --> 00:25:01,240
all typed it's JavaScript it's not typed

00:24:57,850 --> 00:25:02,020
what do you mean type well let's talk

00:25:01,240 --> 00:25:03,660
about JavaScript

00:25:02,020 --> 00:25:06,640
all right first so they can overlay

00:25:03,660 --> 00:25:09,280
there's a magical saying that takes any

00:25:06,640 --> 00:25:12,520
type of information put it into one

00:25:09,280 --> 00:25:15,490
collection right so you can clear la you

00:25:12,520 --> 00:25:19,720
put you specify index and put the one or

00:25:15,490 --> 00:25:22,360
push two or you can push the object or

00:25:19,720 --> 00:25:26,650
string and then the output of it looks

00:25:22,360 --> 00:25:29,020
like this the JavaScript la to me is

00:25:26,650 --> 00:25:31,030
like a baking tray that you put in and

00:25:29,020 --> 00:25:33,400
then it takes like anything any shape

00:25:31,030 --> 00:25:35,890
any size if you want to bake a chicken

00:25:33,400 --> 00:25:38,410
right next to a snow summer law you can

00:25:35,890 --> 00:25:41,260
also do that too so it's like very very

00:25:38,410 --> 00:25:43,180
useful thing but it needs to expect a

00:25:41,260 --> 00:25:45,940
lot of possibility when it's doing the

00:25:43,180 --> 00:25:46,970
computation the time delay to me is a

00:25:45,940 --> 00:25:49,640
muffin tin

00:25:46,970 --> 00:25:53,539
it is very specifically designed and

00:25:49,640 --> 00:25:56,150
very specific size to hold specific

00:25:53,539 --> 00:25:59,270
thing weight it can be muffin tin it can

00:25:56,150 --> 00:26:01,370
be donut mold it can be I don't know but

00:25:59,270 --> 00:26:03,710
you know the the factory makes it

00:26:01,370 --> 00:26:08,000
specific product or specific shape in

00:26:03,710 --> 00:26:11,120
size so that's type terrain so type

00:26:08,000 --> 00:26:14,960
array the size and shape is defined in

00:26:11,120 --> 00:26:21,340
this part so you need a meaning a bit of

00:26:14,960 --> 00:26:24,559
unsigned integer so that means you put

00:26:21,340 --> 00:26:27,799
anything you put has to be a bit

00:26:24,559 --> 00:26:31,340
unsigned integer if you put more than 8

00:26:27,799 --> 00:26:35,450
bit so a bit is 0 to 255 if you put more

00:26:31,340 --> 00:26:38,720
than 255 then it will just hold over fro

00:26:35,450 --> 00:26:41,299
from that if you put anything that is

00:26:38,720 --> 00:26:43,970
not integer like string it will just not

00:26:41,299 --> 00:26:47,120
put it in there for you it just stays as

00:26:43,970 --> 00:26:50,419
0 and if you put a number that's within

00:26:47,120 --> 00:26:53,539
then it will just keep that number so

00:26:50,419 --> 00:26:55,880
here is a list of typed array and what I

00:26:53,539 --> 00:27:01,030
specifically need it was you need a

00:26:55,880 --> 00:27:05,450
clumped array 8-bit unsigned integer

00:27:01,030 --> 00:27:09,380
parenthesis crumped no explanation what

00:27:05,450 --> 00:27:13,970
does that mean so I did a little bit of

00:27:09,380 --> 00:27:15,559
search and clumped means is that any all

00:27:13,970 --> 00:27:19,010
the rights from the machine just cut it

00:27:15,559 --> 00:27:21,710
off it has to be exactly the same size

00:27:19,010 --> 00:27:24,890
within this defined range so you need

00:27:21,710 --> 00:27:25,520
eight again so 0 to 255 anything more

00:27:24,890 --> 00:27:28,250
than that

00:27:25,520 --> 00:27:30,860
it's get 255 anything less than that

00:27:28,250 --> 00:27:34,640
gets 0 so if you assign 280

00:27:30,860 --> 00:27:35,120
then naked 255 and if you assign minus

00:27:34,640 --> 00:27:40,120
00:27:35,120 --> 00:27:44,179
it gets zero this does good thing when

00:27:40,120 --> 00:27:45,620
computer is only expecting one thing and

00:27:44,179 --> 00:27:48,049
doesn't have to think about many other

00:27:45,620 --> 00:27:50,320
possibility the computation gets faster

00:27:48,049 --> 00:27:53,000
and that's part of the web browser that

00:27:50,320 --> 00:27:58,039
enabling a lot of games and things that

00:27:53,000 --> 00:28:00,570
we feel like it's native so I modify my

00:27:58,039 --> 00:28:03,389
code one thing is that the type

00:28:00,570 --> 00:28:06,120
doesn't have same method as the legal

00:28:03,389 --> 00:28:09,690
array so you can't do the push so i

00:28:06,120 --> 00:28:11,850
specifically define the index and then

00:28:09,690 --> 00:28:14,159
assign the value from my base array and

00:28:11,850 --> 00:28:17,279
I was able to download it so at the end

00:28:14,159 --> 00:28:19,320
of this exercise or journey that I was

00:28:17,279 --> 00:28:21,059
doing I was like surprisingly I just

00:28:19,320 --> 00:28:24,360
wanted to knit but then I learned a lot

00:28:21,059 --> 00:28:27,559
about web by just knitting and I really

00:28:24,360 --> 00:28:29,850
recommend doing that all the things I

00:28:27,559 --> 00:28:33,000
was a web developer I was in the

00:28:29,850 --> 00:28:35,639
hardware hacker I just wanted to do fun

00:28:33,000 --> 00:28:37,620
project with JavaScript and I learn how

00:28:35,639 --> 00:28:40,529
to talk to machines I learned how to

00:28:37,620 --> 00:28:42,389
what the clumped array is around what

00:28:40,529 --> 00:28:46,500
live poker is and like from now on

00:28:42,389 --> 00:28:49,320
whenever I see opportunity in my web

00:28:46,500 --> 00:28:52,769
application coding I totally gonna use

00:28:49,320 --> 00:28:55,409
the web worker and clump dice right so

00:28:52,769 --> 00:28:57,360
my like my suggestion is that like if

00:28:55,409 --> 00:29:00,750
you think and you think that you like

00:28:57,360 --> 00:29:03,690
and possibly compute it by computer you

00:29:00,750 --> 00:29:05,700
should try it and I promise you that you

00:29:03,690 --> 00:29:08,940
will learn something new that you can

00:29:05,700 --> 00:29:13,230
use in daily life so here's a few

00:29:08,940 --> 00:29:14,909
resources of my project so right now the

00:29:13,230 --> 00:29:17,460
loading the data into machine and

00:29:14,909 --> 00:29:19,559
creating images to separate project but

00:29:17,460 --> 00:29:22,049
I'm creating a one application so that

00:29:19,559 --> 00:29:24,870
on the UI just you click on it and then

00:29:22,049 --> 00:29:28,320
load it into machine so that code will

00:29:24,870 --> 00:29:30,659
be up on the repo I specifically like to

00:29:28,320 --> 00:29:32,429
think it's like Lieberman and go for

00:29:30,659 --> 00:29:34,679
poetic computation if you let me sit in

00:29:32,429 --> 00:29:38,070
there pixel class um that's where I

00:29:34,679 --> 00:29:40,289
learned a lot of image processing so

00:29:38,070 --> 00:29:41,909
thank you that's my twitter handle if

00:29:40,289 --> 00:29:46,019
you have any question please tweet at me

00:29:41,909 --> 00:29:49,919
or DM me and I have a feedback form on

00:29:46,019 --> 00:29:51,690
where bitly slash chicks alternate if

00:29:49,919 --> 00:29:54,330
you like the talk or didn't like the

00:29:51,690 --> 00:29:55,649
talk I would love your feedback thank

00:29:54,330 --> 00:29:58,159
you so much thank you

00:29:55,649 --> 00:29:58,159

YouTube URL: https://www.youtube.com/watch?v=Lj4xPkrTPKs


