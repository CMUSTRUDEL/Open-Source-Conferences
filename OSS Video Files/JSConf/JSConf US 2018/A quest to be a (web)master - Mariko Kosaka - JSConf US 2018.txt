Title: A quest to be a (web)master - Mariko Kosaka - JSConf US 2018
Publication date: 2018-11-05
Playlist: JSConf US 2018
Description: 
	
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:24,779
[Music]

00:00:23,250 --> 00:00:27,369
[Applause]

00:00:24,779 --> 00:00:29,410
all right so I wrote a story and I'm

00:00:27,369 --> 00:00:35,020
going to tell you about my story

00:00:29,410 --> 00:00:37,090
so me and my browser so this is me I'm a

00:00:35,020 --> 00:00:39,539
web developer I write code for work

00:00:37,090 --> 00:00:42,489
that's what I get paid to do and

00:00:39,539 --> 00:00:46,930
sometimes I feed that to a thing called

00:00:42,489 --> 00:00:52,570
browser that's the box and then comes up

00:00:46,930 --> 00:00:55,060
as a awesome sauce so when I started it

00:00:52,570 --> 00:00:57,820
was like yes this is really interesting

00:00:55,060 --> 00:01:00,820
so I learned so many other tools like

00:00:57,820 --> 00:01:03,040
jQuery and act and then I figure out the

00:01:00,820 --> 00:01:07,570
browser and browser he buys me back like

00:01:03,040 --> 00:01:10,000
awesome web application you know and

00:01:07,570 --> 00:01:13,210
then I got like used to it so like I'm

00:01:10,000 --> 00:01:17,920
gonna learn more libraries I added on

00:01:13,210 --> 00:01:20,680
top of jQuery and the act d3 right I fed

00:01:17,920 --> 00:01:27,130
them and then suddenly browser became

00:01:20,680 --> 00:01:29,760
unhappy I don't know why but I was told

00:01:27,130 --> 00:01:34,360
that I need to learn my you know tools

00:01:29,760 --> 00:01:37,930
so I added typescript and bubble to my

00:01:34,360 --> 00:01:40,720
Taulbee and I sent it to a browser once

00:01:37,930 --> 00:01:46,540
again and you know it's not quite

00:01:40,720 --> 00:01:49,630
unhappy but it's like janky as hell so

00:01:46,540 --> 00:01:53,830
at this point I'm like I don't like

00:01:49,630 --> 00:01:57,409
browser like I don't know about you why

00:01:53,830 --> 00:01:59,869
are you keeping distance from me

00:01:57,409 --> 00:02:02,479
I just wanted to be friends with you

00:01:59,869 --> 00:02:05,259
like the beginning I really liked

00:02:02,479 --> 00:02:08,599
hanging out with you it was all a song

00:02:05,259 --> 00:02:10,160
you know you write HTML put it into

00:02:08,599 --> 00:02:14,420
browser don't even need a server

00:02:10,160 --> 00:02:17,959
something moose amazing so I started

00:02:14,420 --> 00:02:20,720
realized maybe it's me it's me that's

00:02:17,959 --> 00:02:23,390
outside of the brother who is not

00:02:20,720 --> 00:02:31,580
understanding and maybe what I need to

00:02:23,390 --> 00:02:34,580
do is to understand what is inside so

00:02:31,580 --> 00:02:37,450
when I was a kid so I grew up in Japan

00:02:34,580 --> 00:02:41,180
there's a thing called papers theater or

00:02:37,450 --> 00:02:43,819
Kamishibai which is exactly this you get

00:02:41,180 --> 00:02:45,709
a stack of paper ordered there is a

00:02:43,819 --> 00:02:48,640
story on the back there's gonna read a

00:02:45,709 --> 00:02:51,110
picture and then you work through and

00:02:48,640 --> 00:02:51,920
you know these are the things that you

00:02:51,110 --> 00:02:54,799
would get

00:02:51,920 --> 00:02:57,950
I don't know communal events or library

00:02:54,799 --> 00:02:59,630
you know one of those days that somebody

00:02:57,950 --> 00:03:01,970
needs to book for you instead of the

00:02:59,630 --> 00:03:04,730
book it might be the box and I used to

00:03:01,970 --> 00:03:07,579
love it both performing and being the

00:03:04,730 --> 00:03:10,310
audience because the stories that they

00:03:07,579 --> 00:03:12,170
tell inside of the paper theater box is

00:03:10,310 --> 00:03:15,019
like classic like the stories that

00:03:12,170 --> 00:03:18,859
everybody knows the story is the many

00:03:15,019 --> 00:03:21,530
different paper sorry the the picture

00:03:18,859 --> 00:03:24,079
books are written for kids but the

00:03:21,530 --> 00:03:26,840
people who is producing the deck set for

00:03:24,079 --> 00:03:29,540
paper theater intimately understood the

00:03:26,840 --> 00:03:32,180
the nature of this simple sliding box

00:03:29,540 --> 00:03:34,670
and sometimes on the back of the card

00:03:32,180 --> 00:03:37,549
they have kind of like a direction of

00:03:34,670 --> 00:03:41,239
how to perform them it's a slide halfway

00:03:37,549 --> 00:03:44,480
the dis part and then slide it out so

00:03:41,239 --> 00:03:48,350
they knew the environment and they knew

00:03:44,480 --> 00:03:53,540
the stage and they fed the content that

00:03:48,350 --> 00:04:00,889
it's best suited for the job if you can

00:03:53,540 --> 00:04:04,280
switch to the slides so this was me

00:04:00,889 --> 00:04:05,180
hello genius cool it's been amazing to

00:04:04,280 --> 00:04:07,220
be back

00:04:05,180 --> 00:04:09,680
I spoke three years ago when I spoke

00:04:07,220 --> 00:04:12,409
three years ago this was me I

00:04:09,680 --> 00:04:15,230
still beginning of my journey into doing

00:04:12,409 --> 00:04:18,410
this development thing for work I always

00:04:15,230 --> 00:04:20,449
worked in tech but not getting paid

00:04:18,410 --> 00:04:25,990
writing code so I was trying to figure

00:04:20,449 --> 00:04:29,630
this out and this is maybe me now-ish

00:04:25,990 --> 00:04:32,509
the difference is that I now care about

00:04:29,630 --> 00:04:35,810
my config files I care about what goes

00:04:32,509 --> 00:04:39,919
into my build a pipeline but I don't

00:04:35,810 --> 00:04:44,210
mean II mmm consider myself as a like a

00:04:39,919 --> 00:04:47,660
expert web developer but since the three

00:04:44,210 --> 00:04:51,139
years ago when I spark I got you know to

00:04:47,660 --> 00:04:53,270
new job I guess and you know so I feel

00:04:51,139 --> 00:04:55,430
like confident that I am progressing and

00:04:53,270 --> 00:04:59,449
I am employable and I am doing this for

00:04:55,430 --> 00:05:03,440
work speaking of work beginning of this

00:04:59,449 --> 00:05:06,650
year I was assigned to a project with

00:05:03,440 --> 00:05:11,840
three other engineers who I consider all

00:05:06,650 --> 00:05:14,300
of them advanced than me they were the

00:05:11,840 --> 00:05:16,039
one who is writing a UI framework they

00:05:14,300 --> 00:05:19,039
were the one who is writing spec for

00:05:16,039 --> 00:05:21,949
service workers and CSS they knew their

00:05:19,039 --> 00:05:24,110
craft and you can imagine my

00:05:21,949 --> 00:05:27,590
intimidation on writing a first poly

00:05:24,110 --> 00:05:30,020
quest to them being under microscope of

00:05:27,590 --> 00:05:37,669
the person who react and you were

00:05:30,020 --> 00:05:40,669
writing UI so I felt this like divide a

00:05:37,669 --> 00:05:42,590
between them and me not of the personal

00:05:40,669 --> 00:05:44,389
divide about just the knowledge and the

00:05:42,590 --> 00:05:46,430
level of conversation that they are

00:05:44,389 --> 00:05:47,539
having if you go routine needing that

00:05:46,430 --> 00:05:49,669
their level of accomplish you know that

00:05:47,539 --> 00:05:51,590
they were having is that like oh I don't

00:05:49,669 --> 00:05:54,380
want to use that CSS because it doesn't

00:05:51,590 --> 00:05:56,900
transform whatever that means I don't

00:05:54,380 --> 00:05:58,580
mean like like this API because it

00:05:56,900 --> 00:06:00,800
doesn't use compositor whatever that

00:05:58,580 --> 00:06:02,570
means they're gonna debate on like

00:06:00,800 --> 00:06:07,280
whether to do the event delegation or

00:06:02,570 --> 00:06:09,650
bubbling I'm like either way so I felt

00:06:07,280 --> 00:06:10,669
like they knew the behind the scenes of

00:06:09,650 --> 00:06:13,430
browser and they are making

00:06:10,669 --> 00:06:16,940
sophisticated choice so I decided it's

00:06:13,430 --> 00:06:20,000
time to join them going back on the

00:06:16,940 --> 00:06:21,260
other side and then investigate what the

00:06:20,000 --> 00:06:24,260
heck is going on inside

00:06:21,260 --> 00:06:26,690
the browser so this talk I change the

00:06:24,260 --> 00:06:30,170
talk title from the abstract so this is

00:06:26,690 --> 00:06:33,350
the how to be a web master inside a look

00:06:30,170 --> 00:06:35,300
at modern web browser and I called it

00:06:33,350 --> 00:06:38,480
how to be a master because I consider

00:06:35,300 --> 00:06:41,660
the person master or craftsman to be the

00:06:38,480 --> 00:06:44,780
person who intimately knows their tools

00:06:41,660 --> 00:06:47,270
in order to do their job there is a lot

00:06:44,780 --> 00:06:49,580
of register to traditional masters in

00:06:47,270 --> 00:06:51,620
Japan and all of them like I love

00:06:49,580 --> 00:06:54,050
watching those documentaries all of them

00:06:51,620 --> 00:06:57,440
intimately knows the craft and their

00:06:54,050 --> 00:06:59,540
tools so my intent was that it by

00:06:57,440 --> 00:07:04,340
understanding the to love my job browser

00:06:59,540 --> 00:07:07,400
try to be a web master in order to go

00:07:04,340 --> 00:07:10,220
into how browser internals I need to

00:07:07,400 --> 00:07:12,230
cover a few of the computer concepts

00:07:10,220 --> 00:07:14,200
before going to it because I promised

00:07:12,230 --> 00:07:18,770
the organizers that this talk will be

00:07:14,200 --> 00:07:20,960
nope no requirement for previous

00:07:18,770 --> 00:07:23,240
knowledge so few concepts that I want to

00:07:20,960 --> 00:07:26,770
talk about before go in it and then fair

00:07:23,240 --> 00:07:29,150
warning I am making very very very

00:07:26,770 --> 00:07:31,550
generalization of these concepts if you

00:07:29,150 --> 00:07:35,180
disagree with me please tell me how you

00:07:31,550 --> 00:07:38,030
think so the pool side tomorrow so the

00:07:35,180 --> 00:07:41,060
first thing is a CPU sometimes called

00:07:38,030 --> 00:07:43,280
central processing unit CPU is a

00:07:41,060 --> 00:07:45,110
hardware on your computer that is really

00:07:43,280 --> 00:07:47,120
good at doing a lot of computational

00:07:45,110 --> 00:07:49,700
tasks they can handle a lot of things

00:07:47,120 --> 00:07:52,880
but they can they do it one by one as

00:07:49,700 --> 00:07:55,190
the tasks come as in the modern

00:07:52,880 --> 00:07:58,550
computers case it is there that you only

00:07:55,190 --> 00:08:00,590
have one core the worker for CPU you

00:07:58,550 --> 00:08:03,410
usually have a few of them on your

00:08:00,590 --> 00:08:06,710
computer so they're doing even more work

00:08:03,410 --> 00:08:10,400
all together another concept is a GPU

00:08:06,710 --> 00:08:12,710
graphics processing unit GPU also does

00:08:10,400 --> 00:08:17,150
computations and can perform and there's

00:08:12,710 --> 00:08:22,130
a core but GPU control into CPU is

00:08:17,150 --> 00:08:26,120
really good at doing simple tasks all at

00:08:22,130 --> 00:08:29,720
once with many many many more cores so

00:08:26,120 --> 00:08:31,610
as the name suggests they were primarily

00:08:29,720 --> 00:08:33,170
started to be used by a graphics card

00:08:31,610 --> 00:08:33,750
and I'm putting the graphics on the

00:08:33,170 --> 00:08:36,539
computer

00:08:33,750 --> 00:08:39,210
my aim turning on and off the million

00:08:36,539 --> 00:08:41,250
bits of the pixels in the computer but

00:08:39,210 --> 00:08:43,380
they're gaining a lot more computational

00:08:41,250 --> 00:08:46,410
power so accelerated GPU computing and

00:08:43,380 --> 00:08:49,710
they can do a little more math basically

00:08:46,410 --> 00:08:54,960
to do so but they do it fast all

00:08:49,710 --> 00:08:56,940
together so you might see the machine or

00:08:54,960 --> 00:08:59,820
the computer hardware the CPU and GPU

00:08:56,940 --> 00:09:03,900
lives and your application not just web

00:08:59,820 --> 00:09:06,420
application lives on top of them and CPU

00:09:03,900 --> 00:09:09,530
and GPU is hunting whatever the logic

00:09:06,420 --> 00:09:11,160
that you put into the application well

00:09:09,530 --> 00:09:13,020
not quite

00:09:11,160 --> 00:09:15,120
in between your application and machine

00:09:13,020 --> 00:09:17,190
hardware there is usually a operating

00:09:15,120 --> 00:09:19,560
system that is kind of facilitating

00:09:17,190 --> 00:09:23,340
communications between them so in

00:09:19,560 --> 00:09:26,280
Chrome's case - in order to put a

00:09:23,340 --> 00:09:29,010
graphics on the screen clone publishes a

00:09:26,280 --> 00:09:31,080
OpenGL command that sometimes on some

00:09:29,010 --> 00:09:33,270
other platform just directly fed into

00:09:31,080 --> 00:09:35,850
but on Windows that goes through a

00:09:33,270 --> 00:09:39,030
conversion phase to convert it into like

00:09:35,850 --> 00:09:42,600
X I think that is more suited for a

00:09:39,030 --> 00:09:45,030
graphics on Windows so another concept

00:09:42,600 --> 00:09:48,210
that I want to talk about is a process

00:09:45,030 --> 00:09:51,240
and threat and I apologize in advance a

00:09:48,210 --> 00:09:55,350
fairly abstract visualization contrôlée

00:09:51,240 --> 00:09:57,510
- CPU and GPU but like process since the

00:09:55,350 --> 00:09:59,190
roads are already abstract concept if

00:09:57,510 --> 00:10:01,380
you look up from Hardware point of view

00:09:59,190 --> 00:10:03,930
and on top of that like it doesn't make

00:10:01,380 --> 00:10:05,700
any sense process what's process

00:10:03,930 --> 00:10:08,010
visualize like the way it's like a lot

00:10:05,700 --> 00:10:10,170
of people write like a literal threads

00:10:08,010 --> 00:10:13,590
on the screen but like I don't know to

00:10:10,170 --> 00:10:20,280
me it didn't click so just imagine the

00:10:13,590 --> 00:10:23,250
process is a unit on CPU that is letting

00:10:20,280 --> 00:10:26,730
your applications and the threads that's

00:10:23,250 --> 00:10:30,540
inside of the process and thread is the

00:10:26,730 --> 00:10:34,740
one actually executing that code for the

00:10:30,540 --> 00:10:37,589
process so if you start a any

00:10:34,740 --> 00:10:40,890
application the windows open up behind

00:10:37,589 --> 00:10:45,450
the scenes of that UI is the CPU starts

00:10:40,890 --> 00:10:47,490
a process process use memory so whatever

00:10:45,450 --> 00:10:50,250
you do on the application

00:10:47,490 --> 00:10:52,500
that gets saved into memory in the

00:10:50,250 --> 00:10:54,170
meantime of you learning the application

00:10:52,500 --> 00:10:56,759
and if you cool start application

00:10:54,170 --> 00:10:59,970
process goes away then morning at 3:00

00:10:56,759 --> 00:11:03,569
and then later for other operations the

00:10:59,970 --> 00:11:08,069
process can also store a another process

00:11:03,569 --> 00:11:10,740
to kind of like divide the work focus so

00:11:08,069 --> 00:11:13,470
they start they use different location

00:11:10,740 --> 00:11:15,810
of the memory and they walk together by

00:11:13,470 --> 00:11:19,079
communicating single inter process

00:11:15,810 --> 00:11:22,170
communication or sometimes a IPC and

00:11:19,079 --> 00:11:24,060
good thing about this it's that if one

00:11:22,170 --> 00:11:26,519
of the process gets hung up with

00:11:24,060 --> 00:11:29,519
something the bug or something and then

00:11:26,519 --> 00:11:31,860
just becomes unresponsible then you just

00:11:29,519 --> 00:11:33,990
close it and then the original process

00:11:31,860 --> 00:11:36,089
to live so your application might as

00:11:33,990 --> 00:11:39,149
well still be in running with a few

00:11:36,089 --> 00:11:43,199
blocking bits of UI while that other

00:11:39,149 --> 00:11:46,019
process comes back up so what the

00:11:43,199 --> 00:11:48,720
browser is process and threads look like

00:11:46,019 --> 00:11:52,769
so one browser might look like this the

00:11:48,720 --> 00:11:55,709
one giant process and many threads

00:11:52,769 --> 00:11:59,490
inside or might look like this with a

00:11:55,709 --> 00:12:02,759
few other processes and few threads

00:11:59,490 --> 00:12:07,259
inside of them or it might look like

00:12:02,759 --> 00:12:10,470
this many many more processes and kind

00:12:07,259 --> 00:12:12,899
of like a divided work in fact this is

00:12:10,470 --> 00:12:16,199
where Chrome's architecture is moving

00:12:12,899 --> 00:12:20,370
towards now the idea is that each of the

00:12:16,199 --> 00:12:25,319
tasks or service so that if you are

00:12:20,370 --> 00:12:28,829
learning chrome on low powered device

00:12:25,319 --> 00:12:31,559
member process takes up memory they can

00:12:28,829 --> 00:12:35,130
consolidate them so that there is a less

00:12:31,559 --> 00:12:37,110
process to provide the experience but if

00:12:35,130 --> 00:12:39,540
you were on Mac or something that is

00:12:37,110 --> 00:12:42,920
powerful then they can spin up more

00:12:39,540 --> 00:12:45,720
processes to do a better efficient work

00:12:42,920 --> 00:12:51,660
so for the purpose of the talk I'm going

00:12:45,720 --> 00:12:55,019
to talk about a this model which is mmm

00:12:51,660 --> 00:12:59,009
Colin may be near past architecture or

00:12:55,019 --> 00:13:00,899
bacome which is one browser process it's

00:12:59,009 --> 00:13:04,709
at the top that kicks

00:13:00,899 --> 00:13:07,110
whew multiple of Landru process they

00:13:04,709 --> 00:13:13,069
also kicks a plugin process GPU and then

00:13:07,110 --> 00:13:20,149
of course utility I am it's important to

00:13:13,069 --> 00:13:22,829
mention that this is a this is a

00:13:20,149 --> 00:13:25,230
implementation detail there is no speck

00:13:22,829 --> 00:13:27,749
how to write over browser there is a

00:13:25,230 --> 00:13:29,220
speck way CMS ESS but there's no spec

00:13:27,749 --> 00:13:31,529
for how many processes the browser

00:13:29,220 --> 00:13:33,269
should use so Firefox might be different

00:13:31,529 --> 00:13:34,079
it might be different or might be

00:13:33,269 --> 00:13:36,839
different

00:13:34,079 --> 00:13:40,290
I'm only choosing this model because I

00:13:36,839 --> 00:13:43,759
work for them so it was a lot easier to

00:13:40,290 --> 00:13:46,170
answer questions if I had them so

00:13:43,759 --> 00:13:47,999
looking at this is very abstract so

00:13:46,170 --> 00:13:50,790
let's put it into what you can see in

00:13:47,999 --> 00:13:56,160
visual so imagine you're like your old

00:13:50,790 --> 00:13:58,850
web browser this part everything outside

00:13:56,160 --> 00:14:01,529
of the content that you provide is

00:13:58,850 --> 00:14:03,809
called sometimes called chrome of the

00:14:01,529 --> 00:14:07,009
application where I believe we're named

00:14:03,809 --> 00:14:09,839
chrome come from that browser process

00:14:07,009 --> 00:14:12,660
responsibility they have UI thread that

00:14:09,839 --> 00:14:15,420
controls UI they have networks where to

00:14:12,660 --> 00:14:18,870
get data from network and then the part

00:14:15,420 --> 00:14:22,470
that yoko demands web content or the tab

00:14:18,870 --> 00:14:25,589
is and reprocessed responsibility if

00:14:22,470 --> 00:14:27,990
inside of them have a plugin say flash

00:14:25,589 --> 00:14:31,220
and that is controlled by plugging

00:14:27,990 --> 00:14:35,370
process and then on top of that

00:14:31,220 --> 00:14:37,410
everything visually happening both a the

00:14:35,370 --> 00:14:39,540
chrome part of the application and a web

00:14:37,410 --> 00:14:44,459
content part of the application is

00:14:39,540 --> 00:14:49,670
helped and powered by GPU process cool

00:14:44,459 --> 00:14:52,889
yeah so i mentioned that the multiple

00:14:49,670 --> 00:14:54,929
lender processes for chrome so what does

00:14:52,889 --> 00:14:58,079
that look like well in simple term it

00:14:54,929 --> 00:15:01,379
means that each type that you open it's

00:14:58,079 --> 00:15:03,689
one process with main thread and worker

00:15:01,379 --> 00:15:07,910
thread and you know things like you

00:15:03,689 --> 00:15:11,339
might heard from multi in Chris talk so

00:15:07,910 --> 00:15:13,709
separating these processes into each tab

00:15:11,339 --> 00:15:14,420
gets a little good benefit for this like

00:15:13,709 --> 00:15:17,900
you know

00:15:14,420 --> 00:15:20,500
we know to top two types don't share a

00:15:17,900 --> 00:15:24,410
memory so there is no fear of leaking

00:15:20,500 --> 00:15:28,220
and then if you know one tab gets

00:15:24,410 --> 00:15:30,170
unresponsible some bug memory week

00:15:28,220 --> 00:15:32,780
whatever and then just you know

00:15:30,170 --> 00:15:37,880
completely shuts off you just close them

00:15:32,780 --> 00:15:40,850
and other drought tabs still works right

00:15:37,880 --> 00:15:43,040
I kind of like roughly mentioned that

00:15:40,850 --> 00:15:47,000
one tab process but if you have many

00:15:43,040 --> 00:15:50,060
many toughs like I do Chrome kind of

00:15:47,000 --> 00:15:52,160
starts to be assigning different sites

00:15:50,060 --> 00:15:54,650
into same processes so there is

00:15:52,160 --> 00:15:57,080
depending on the kind of resource that

00:15:54,650 --> 00:15:59,210
your hardware have there is a small

00:15:57,080 --> 00:16:02,330
threshold of how many other processes

00:15:59,210 --> 00:16:04,760
that they this is reason why if you have

00:16:02,330 --> 00:16:06,410
a hundred tabs and then you kill one tub

00:16:04,760 --> 00:16:08,060
because it wasn't responsible

00:16:06,410 --> 00:16:12,320
all of a sudden fifty other tabs die

00:16:08,060 --> 00:16:14,360
right so if all of the tabs were run by

00:16:12,320 --> 00:16:18,380
one process then the process and many

00:16:14,360 --> 00:16:20,810
threads then if one of them gets busy or

00:16:18,380 --> 00:16:23,900
responsible then you have to kill them

00:16:20,810 --> 00:16:27,800
all you have to call the browser so

00:16:23,900 --> 00:16:32,180
that's the idea of multiple process for

00:16:27,800 --> 00:16:35,240
when rendering so let's we now we

00:16:32,180 --> 00:16:38,060
covered a how process works on their

00:16:35,240 --> 00:16:40,730
knees let's cover how those processes

00:16:38,060 --> 00:16:44,000
communicate in order to display whatever

00:16:40,730 --> 00:16:46,190
the code that you give it to browsers so

00:16:44,000 --> 00:16:49,310
today we're going to look at a very

00:16:46,190 --> 00:16:52,190
simple case of loading some website

00:16:49,310 --> 00:16:56,150
loading content download an image and

00:16:52,190 --> 00:16:58,340
then a little bit of scrolling so I

00:16:56,150 --> 00:17:00,680
talked about that the top part of the

00:16:58,340 --> 00:17:03,680
browser is controlled by Landru process

00:17:00,680 --> 00:17:05,120
so I'm sorry browser process browser

00:17:03,680 --> 00:17:07,640
process have a few different threads

00:17:05,120 --> 00:17:10,310
like UI thread that controls all the UI

00:17:07,640 --> 00:17:12,589
built a network thread that goes out to

00:17:10,310 --> 00:17:15,980
get the data from the network and then

00:17:12,589 --> 00:17:17,660
store stories thread basically access to

00:17:15,980 --> 00:17:20,959
your file access Hey and then I'm sure

00:17:17,660 --> 00:17:23,570
there's many more so when you are typing

00:17:20,959 --> 00:17:26,530
things into that omnibox that's browser

00:17:23,570 --> 00:17:28,720
process responsibility because that's UI

00:17:26,530 --> 00:17:30,520
and you already looks at that input

00:17:28,720 --> 00:17:33,220
saying like it's this search query or

00:17:30,520 --> 00:17:35,110
URL because in comm you can either a

00:17:33,220 --> 00:17:38,200
search query and go to a search engine

00:17:35,110 --> 00:17:40,600
or you can request a website and in this

00:17:38,200 --> 00:17:42,820
case it looks like website so it's a URL

00:17:40,600 --> 00:17:45,280
your voicethread calls up a network

00:17:42,820 --> 00:17:47,409
thread saying like hey so this

00:17:45,280 --> 00:17:50,620
navigation is about the start can you go

00:17:47,409 --> 00:17:53,620
get the site and then it works sa thank

00:17:50,620 --> 00:17:56,650
you a lot you thought so they go out and

00:17:53,620 --> 00:17:58,390
get the data by the way this part is the

00:17:56,650 --> 00:18:00,460
very commonly known software engineering

00:17:58,390 --> 00:18:03,100
interview question and what what happens

00:18:00,460 --> 00:18:05,230
when you are type google.com into a

00:18:03,100 --> 00:18:07,299
browser you know go through if you're

00:18:05,230 --> 00:18:10,929
like a hot name and DNS and everything I

00:18:07,299 --> 00:18:13,570
am skipping all of that just you know

00:18:10,929 --> 00:18:16,570
masculine hondo by network thread and

00:18:13,570 --> 00:18:18,760
then when the little bit of data comes

00:18:16,570 --> 00:18:21,309
back maybe server responds with a

00:18:18,760 --> 00:18:22,750
soberly direct so networks the rest this

00:18:21,309 --> 00:18:24,580
to you I hate this

00:18:22,750 --> 00:18:26,200
you know server says to me direct and I

00:18:24,580 --> 00:18:28,120
knew I thoroughly turns same thing I was

00:18:26,200 --> 00:18:31,419
like okay then navigate to that Lee

00:18:28,120 --> 00:18:33,640
direct them but if the actual content

00:18:31,419 --> 00:18:35,890
start to come back the network process

00:18:33,640 --> 00:18:38,740
kind of sniff the beginning of the file

00:18:35,890 --> 00:18:41,049
by mime type sniffing to make sure the

00:18:38,740 --> 00:18:44,830
file that they say they are is the file

00:18:41,049 --> 00:18:48,010
they are and you know in case they are

00:18:44,830 --> 00:18:49,750
getting image file then you don't they

00:18:48,010 --> 00:18:52,539
don't need to lender the page it is a

00:18:49,750 --> 00:18:56,770
downloaded quest so they would pass it

00:18:52,539 --> 00:18:59,140
on to a storage thread I'm sure and this

00:18:56,770 --> 00:19:01,809
is where Safe Browsing check happens so

00:18:59,140 --> 00:19:05,049
I'm sure you might have seen who access

00:19:01,809 --> 00:19:08,500
one some site and then chrome suddenly

00:19:05,049 --> 00:19:10,510
says this might be fishing you might not

00:19:08,500 --> 00:19:12,820
want to click through this is where the

00:19:10,510 --> 00:19:15,400
check happens like if it is much to the

00:19:12,820 --> 00:19:17,500
known malicious content and then the LMS

00:19:15,400 --> 00:19:20,049
is yet so but in this case it looks

00:19:17,500 --> 00:19:22,120
legit so the network's racist I got what

00:19:20,049 --> 00:19:24,429
you requested and browser process

00:19:22,120 --> 00:19:27,909
returns like let me get a render process

00:19:24,429 --> 00:19:31,630
remember be content web content and the

00:19:27,909 --> 00:19:33,790
chrome is a different process so then

00:19:31,630 --> 00:19:37,630
at this point on UI thread mine update

00:19:33,790 --> 00:19:39,880
to like secure UI shows up and then

00:19:37,630 --> 00:19:43,150
you're back and forward button

00:19:39,880 --> 00:19:45,910
navigation gets committed the lender

00:19:43,150 --> 00:19:47,350
process wake up your wife's recess into

00:19:45,910 --> 00:19:49,600
process communication

00:19:47,350 --> 00:19:53,290
hey please render this page and then the

00:19:49,600 --> 00:19:55,060
process says ok get me that HTML we talk

00:19:53,290 --> 00:19:59,140
to network thread and a network thread

00:19:55,060 --> 00:20:01,570
forward stuff stream of HTML into a

00:19:59,140 --> 00:20:05,110
vendor process Landru takes all of that

00:20:01,570 --> 00:20:10,720
do its magic which we will get into and

00:20:05,110 --> 00:20:12,460
then returns be event saying hey page

00:20:10,720 --> 00:20:15,310
has loaded at this point the spinner

00:20:12,460 --> 00:20:18,460
stops spinning and then from browsers

00:20:15,310 --> 00:20:20,710
point of view navigation is complete you

00:20:18,460 --> 00:20:24,280
have the site at this point if you

00:20:20,710 --> 00:20:26,380
decide to type in other URL because as

00:20:24,280 --> 00:20:31,360
Java screen

00:20:26,380 --> 00:20:35,080
on load handler event handler somebody

00:20:31,360 --> 00:20:37,090
types new site again browser UI thread

00:20:35,080 --> 00:20:39,550
wakes up and saying like hey did you

00:20:37,090 --> 00:20:41,650
want to handle this event and then then

00:20:39,550 --> 00:20:43,330
we process looks at it and then like huh

00:20:41,650 --> 00:20:46,690
I might have they been hundred for that

00:20:43,330 --> 00:20:48,430
and then you know they might block that

00:20:46,690 --> 00:20:52,780
navigation or they proceed with

00:20:48,430 --> 00:20:54,430
navigation what gets tricky is a

00:20:52,780 --> 00:20:58,800
introduction of Service Worker so

00:20:54,430 --> 00:21:02,320
Service Worker is a way to write a

00:20:58,800 --> 00:21:03,820
caching and banette Makka pakka sea from

00:21:02,320 --> 00:21:05,950
your front end code so you write

00:21:03,820 --> 00:21:08,440
JavaScript to define which kind of

00:21:05,950 --> 00:21:10,720
resource needs to go to cache needs to

00:21:08,440 --> 00:21:12,580
go out from the network and you write

00:21:10,720 --> 00:21:14,830
your code and then you ship it with your

00:21:12,580 --> 00:21:17,350
application this is your Java square

00:21:14,830 --> 00:21:20,830
which means it lives on the lander

00:21:17,350 --> 00:21:24,940
process but the navigation is handled by

00:21:20,830 --> 00:21:27,250
a browser process so the when site is

00:21:24,940 --> 00:21:30,340
requested a browser process or the UI

00:21:27,250 --> 00:21:34,000
thread checks for known service worker

00:21:30,340 --> 00:21:36,130
scope so the browser process have a left

00:21:34,000 --> 00:21:39,700
France to a known installed

00:21:36,130 --> 00:21:42,610
scope basically a domain of the site and

00:21:39,700 --> 00:21:43,470
then checks for it and now you see oh

00:21:42,610 --> 00:21:47,070
there

00:21:43,470 --> 00:21:49,529
it is a scope serviceworker is installed

00:21:47,070 --> 00:21:51,570
so in this case browser process have to

00:21:49,529 --> 00:21:53,879
wake up the render process asking hey

00:21:51,570 --> 00:21:56,759
you need to align your serviceworker

00:21:53,879 --> 00:21:58,620
code and then the process do that and

00:21:56,759 --> 00:22:00,659
then turns out lando process wanted to

00:21:58,620 --> 00:22:02,879
get a fresh content back so they say

00:22:00,659 --> 00:22:04,320
actually the me like please give me

00:22:02,879 --> 00:22:06,629
about lee service from the freshly

00:22:04,320 --> 00:22:09,090
network and your wife's racist here we

00:22:06,629 --> 00:22:11,639
go get that to network process you might

00:22:09,090 --> 00:22:14,549
see this round trip is unnecessary these

00:22:11,639 --> 00:22:16,110
like possibly making it 0 and this is

00:22:14,549 --> 00:22:17,759
reason why sometimes you see article

00:22:16,110 --> 00:22:20,700
about like serviceworker startup time

00:22:17,759 --> 00:22:23,009
problem there is a proposed both there

00:22:20,700 --> 00:22:25,110
is a new feature that is coming into

00:22:23,009 --> 00:22:28,440
browser called navigation preload which

00:22:25,110 --> 00:22:30,690
basically starting the network request

00:22:28,440 --> 00:22:33,809
while they were checking with

00:22:30,690 --> 00:22:37,110
serviceworker my teammate Jake or wrote

00:22:33,809 --> 00:22:39,710
a great introduction and how to order

00:22:37,110 --> 00:22:44,240
call so if you're curious check that out

00:22:39,710 --> 00:22:47,009
so now moving on to an under process

00:22:44,240 --> 00:22:48,450
where we learn the process have a walk

00:22:47,009 --> 00:22:50,789
with rest that you've might heard of

00:22:48,450 --> 00:22:52,889
from the beginning talk before me and

00:22:50,789 --> 00:22:55,320
they also have compositor thread and

00:22:52,889 --> 00:22:58,740
lustrous thread that we will go and to

00:22:55,320 --> 00:23:00,960
get into but the make oh I need to

00:22:58,740 --> 00:23:04,289
purchase this day that this part is

00:23:00,960 --> 00:23:07,830
where when people talk about website

00:23:04,289 --> 00:23:10,950
performance goes in so there are so many

00:23:07,830 --> 00:23:14,700
details in-depth knowledge many many

00:23:10,950 --> 00:23:16,110
many articles even within my team's own

00:23:14,700 --> 00:23:18,269
documentation site there is like

00:23:16,110 --> 00:23:20,669
hundreds of them so if you're curious of

00:23:18,269 --> 00:23:23,039
any of that bit I recommend you to go

00:23:20,669 --> 00:23:25,279
check that out and just to make sure

00:23:23,039 --> 00:23:28,169
that I'm not just plugging my team

00:23:25,279 --> 00:23:29,700
Mozilla has nearly great blog posts

00:23:28,169 --> 00:23:32,840
especially with the release of serve

00:23:29,700 --> 00:23:35,340
servo and web blender their new engine

00:23:32,840 --> 00:23:37,789
especially when Clark has been writing a

00:23:35,340 --> 00:23:41,100
lot of great explanation

00:23:37,789 --> 00:23:43,559
WebKit blog in between daily beast notes

00:23:41,100 --> 00:23:46,470
they also writes amazing documentation

00:23:43,559 --> 00:23:48,000
about how internal browser works so if

00:23:46,470 --> 00:23:50,100
you're curious about any of this from

00:23:48,000 --> 00:23:53,700
this talk I highly recommend check that

00:23:50,100 --> 00:23:56,240
out so under process last time we talked

00:23:53,700 --> 00:23:59,270
about you know the feed coming in

00:23:56,240 --> 00:24:02,840
but the blender process especially main

00:23:59,270 --> 00:24:05,660
threads job is to get the data and turn

00:24:02,840 --> 00:24:09,440
them into something that's this variable

00:24:05,660 --> 00:24:12,290
on the screen so how does that work the

00:24:09,440 --> 00:24:14,750
first step is loading and parsing as you

00:24:12,290 --> 00:24:18,230
sew they start receiving a stream and

00:24:14,750 --> 00:24:20,780
they start leading them from the top to

00:24:18,230 --> 00:24:23,600
the bottom and then if the browser the

00:24:20,780 --> 00:24:25,370
main thread sees that the link or image

00:24:23,600 --> 00:24:27,350
your script that needs to get out to get

00:24:25,370 --> 00:24:30,490
it they send the request to the network

00:24:27,350 --> 00:24:34,370
thread in browser process together but

00:24:30,490 --> 00:24:38,210
result of this process parsing is a Dom

00:24:34,370 --> 00:24:40,640
tree that we all know this is a browsers

00:24:38,210 --> 00:24:45,140
internal representation of the site as

00:24:40,640 --> 00:24:47,090
well as a API another position to ask

00:24:45,140 --> 00:24:54,440
JavaScript developer interact with via

00:24:47,090 --> 00:24:57,170
JavaScript so in this process if a main

00:24:54,440 --> 00:24:59,390
thread is a JavaScript then they need to

00:24:57,170 --> 00:25:01,250
pause the parsing and then they need to

00:24:59,390 --> 00:25:03,410
get the JavaScript don't know them parse

00:25:01,250 --> 00:25:05,090
them execute them and then once

00:25:03,410 --> 00:25:08,690
everything is done they can go back to

00:25:05,090 --> 00:25:12,560
the list of HTML because javascript can

00:25:08,690 --> 00:25:14,300
modify dong so you know am I do a little

00:25:12,560 --> 00:25:17,270
bit of HTML and you're feeling good and

00:25:14,300 --> 00:25:19,190
then like brow JavaScript comes in and

00:25:17,270 --> 00:25:23,240
document light everything that's

00:25:19,190 --> 00:25:25,220
possibility so they need to stop that's

00:25:23,240 --> 00:25:26,690
this is why a lot of like a kind of

00:25:25,220 --> 00:25:28,550
water wisdom about I could put the

00:25:26,690 --> 00:25:31,970
JavaScript at the bottom comes from and

00:25:28,550 --> 00:25:33,860
then you know modern browsers or more on

00:25:31,970 --> 00:25:37,190
web api is has been introducing a lot of

00:25:33,860 --> 00:25:39,380
ways to hint to the browser how to treat

00:25:37,190 --> 00:25:41,720
those things so if you were sure that

00:25:39,380 --> 00:25:43,400
your JavaScript code is now going to

00:25:41,720 --> 00:25:45,500
interact with Dom then you can put a

00:25:43,400 --> 00:25:47,840
single tree view because that's not

00:25:45,500 --> 00:25:50,270
gonna block a evander if you're curious

00:25:47,840 --> 00:25:51,920
about those resource priority my

00:25:50,270 --> 00:25:56,900
teammate what about those on the same

00:25:51,920 --> 00:26:00,080
site that I'd be showing so now that the

00:25:56,900 --> 00:26:02,600
dome is there the only Dom is not gonna

00:26:00,080 --> 00:26:06,440
construct a website they need style so

00:26:02,600 --> 00:26:08,000
the LED CSS and then they curricula it's

00:26:06,440 --> 00:26:09,080
what's called a computed style

00:26:08,000 --> 00:26:12,020
it's basically

00:26:09,080 --> 00:26:16,340
matching of what kind of CSS is applied

00:26:12,020 --> 00:26:20,270
to this one given domnode you can see

00:26:16,340 --> 00:26:23,960
those in a depth was ha

00:26:20,270 --> 00:26:25,820
you see oops you see their computer part

00:26:23,960 --> 00:26:31,130
that's what you were seeing the computed

00:26:25,820 --> 00:26:33,920
style and once that's done is it

00:26:31,130 --> 00:26:35,690
possible to render the page not really I

00:26:33,920 --> 00:26:38,330
mean I'm looking at it there is a paper

00:26:35,690 --> 00:26:40,790
on top of that paper there's a phone I

00:26:38,330 --> 00:26:43,730
can't really describe how it is a placed

00:26:40,790 --> 00:26:47,090
or it is so they need to figure out

00:26:43,730 --> 00:26:49,250
layout the geometry of the page so the

00:26:47,090 --> 00:26:51,890
main thread goes through like you know

00:26:49,250 --> 00:26:54,080
oh and the layout is tricky like even

00:26:51,890 --> 00:26:55,550
with a simple website like this they

00:26:54,080 --> 00:26:58,070
need to figure out where the line blake

00:26:55,550 --> 00:27:00,440
is going to be and if they line break on

00:26:58,070 --> 00:27:02,990
that point then the top of the box

00:27:00,440 --> 00:27:07,250
expands which means the subsequent box

00:27:02,990 --> 00:27:10,730
all moves down so there is a vertical

00:27:07,250 --> 00:27:13,070
writing on the CSS there is a float and

00:27:10,730 --> 00:27:16,550
flex and layout is quite complicated

00:27:13,070 --> 00:27:18,950
tasks but they work through that and

00:27:16,550 --> 00:27:21,230
then creates what's called layer tree

00:27:18,950 --> 00:27:24,230
it's important to note that layer tree

00:27:21,230 --> 00:27:27,020
is not equal to dom tree sometimes looks

00:27:24,230 --> 00:27:28,850
like it's the same but they all make use

00:27:27,020 --> 00:27:31,760
of all the things that's going to be on

00:27:28,850 --> 00:27:33,800
the screen so they omit the things like

00:27:31,760 --> 00:27:36,410
display now and they add things that's

00:27:33,800 --> 00:27:41,920
not in the dom like a pseudo content

00:27:36,410 --> 00:27:45,500
from CSS so then it's time to paint

00:27:41,920 --> 00:27:47,390
because we have geometry and what's in

00:27:45,500 --> 00:27:49,910
them and style of them you might think

00:27:47,390 --> 00:27:52,220
that you can pay draw the picture

00:27:49,910 --> 00:27:54,560
already but if i'm having this like

00:27:52,220 --> 00:27:56,420
human fax machine game is like Sue's

00:27:54,560 --> 00:27:59,360
who's my friend sitting in front of me i

00:27:56,420 --> 00:28:01,940
can't still can't media just explain

00:27:59,360 --> 00:28:04,700
what exactly i am saying in front of me

00:28:01,940 --> 00:28:08,120
because of the index and all of the

00:28:04,700 --> 00:28:11,300
complicated CSS stuff so if i go through

00:28:08,120 --> 00:28:14,780
this by dumb order then i would paint a

00:28:11,300 --> 00:28:17,660
header and then next is div and the next

00:28:14,780 --> 00:28:20,180
is another div but then there's a d'

00:28:17,660 --> 00:28:20,780
index so this is totally messed up

00:28:20,180 --> 00:28:24,080
so the

00:28:20,780 --> 00:28:26,990
need to figure out exactly how to paint

00:28:24,080 --> 00:28:30,020
the page and that process is called

00:28:26,990 --> 00:28:32,060
paint they go through the layout tree

00:28:30,020 --> 00:28:33,890
and then create what's called a paint Li

00:28:32,060 --> 00:28:37,370
course and it's kind of like if you look

00:28:33,890 --> 00:28:39,980
at used a canvas API then it's similar

00:28:37,370 --> 00:28:43,670
to that you just like have a do this do

00:28:39,980 --> 00:28:47,240
that do this to the create the page it's

00:28:43,670 --> 00:28:49,820
really important to note that in each

00:28:47,240 --> 00:28:53,270
steps the input is from the previous

00:28:49,820 --> 00:28:55,910
step so if you mess something up in the

00:28:53,270 --> 00:28:59,240
middle of this pixel pipeline then all

00:28:55,910 --> 00:29:02,570
of the subsequent trees and data

00:28:59,240 --> 00:29:04,280
structures needs to be regenerated if

00:29:02,570 --> 00:29:06,380
it's like at the end of their maybe it's

00:29:04,280 --> 00:29:08,840
okay but if you do a deep in the lending

00:29:06,380 --> 00:29:11,300
process then you know there's a lot of

00:29:08,840 --> 00:29:12,830
computation to be done and if you were

00:29:11,300 --> 00:29:15,620
doing this kind of thing for your

00:29:12,830 --> 00:29:19,520
animation say then you know you're in

00:29:15,620 --> 00:29:23,300
problem because our display refreshes

00:29:19,520 --> 00:29:25,160
sixteen sixty times a second so you need

00:29:23,300 --> 00:29:28,310
to make sure that all the calculation is

00:29:25,160 --> 00:29:30,200
catching up to that cadence so you might

00:29:28,310 --> 00:29:33,920
be feeling good but then oh you missed a

00:29:30,200 --> 00:29:36,290
frame and page chunks or you know am I

00:29:33,920 --> 00:29:38,720
feeling good you have like a tiny change

00:29:36,290 --> 00:29:41,120
is going in but then keep in mind this

00:29:38,720 --> 00:29:42,890
is main thread so it's also hungry in

00:29:41,120 --> 00:29:45,080
your JavaScript code and your JavaScript

00:29:42,890 --> 00:29:47,150
code is start to throw a heavy

00:29:45,080 --> 00:29:51,950
computation thing and then you make a

00:29:47,150 --> 00:29:54,200
frame and pin chunks there's a way to

00:29:51,950 --> 00:29:56,600
get that timing by calling

00:29:54,200 --> 00:29:58,970
requestanimationframe and there's a way

00:29:56,600 --> 00:30:00,320
to like divide your heavy JavaScript

00:29:58,970 --> 00:30:02,420
tasks so that it doesn't block

00:30:00,320 --> 00:30:04,340
calendaring there is heavily documented

00:30:02,420 --> 00:30:08,390
on optimizing JavaScript execution

00:30:04,340 --> 00:30:10,760
documentation so now that we have all of

00:30:08,390 --> 00:30:13,160
the draw orders and everything maybe

00:30:10,760 --> 00:30:16,130
it's time to draw or last revised the

00:30:13,160 --> 00:30:19,220
page how would you do that well you

00:30:16,130 --> 00:30:21,470
might go through naive way like okay I

00:30:19,220 --> 00:30:23,750
know the viewport I know the layout I

00:30:21,470 --> 00:30:26,210
know how to paint those layout so I'm

00:30:23,750 --> 00:30:29,810
gonna lay them up if person's clothes

00:30:26,210 --> 00:30:34,190
then I'm gonna fill in the list and if

00:30:29,810 --> 00:30:34,740
the UI moves like you know the menu bar

00:30:34,190 --> 00:30:36,570
slides

00:30:34,740 --> 00:30:38,429
something I'm gonna invalidate that

00:30:36,570 --> 00:30:41,370
changed apart and nearly drawn them

00:30:38,429 --> 00:30:44,070
again but you can see this kids kind of

00:30:41,370 --> 00:30:46,110
like a lot of work if you were trying to

00:30:44,070 --> 00:30:49,800
do a 60 frames per second so a modern

00:30:46,110 --> 00:30:53,040
browser have a way to do this a little

00:30:49,800 --> 00:30:55,830
more and efficiently called a composite

00:30:53,040 --> 00:30:58,380
so the idea of composite is that they're

00:30:55,830 --> 00:31:00,510
going to divide all of your elements

00:30:58,380 --> 00:31:05,010
into layers like Photoshop layers and

00:31:00,510 --> 00:31:07,830
they'll a stir them all together that's

00:31:05,010 --> 00:31:10,320
why it's already last Erised image so

00:31:07,830 --> 00:31:11,309
all the browser has to do is moving and

00:31:10,320 --> 00:31:14,190
layering them

00:31:11,309 --> 00:31:16,800
so changing the scrolling doesn't matter

00:31:14,190 --> 00:31:20,250
moving the things that is already in one

00:31:16,800 --> 00:31:22,740
layer as a murderer walk smoothly so

00:31:20,250 --> 00:31:25,050
here's a video of you can check this

00:31:22,740 --> 00:31:27,450
layer on your dev tool so here's a video

00:31:25,050 --> 00:31:30,330
of application that I made which is

00:31:27,450 --> 00:31:32,910
visualizing your image input as a new

00:31:30,330 --> 00:31:35,370
fabric you can see there are two layers

00:31:32,910 --> 00:31:39,179
as I move them you can see that layer

00:31:35,370 --> 00:31:42,120
box is moving I am going to soon turn on

00:31:39,179 --> 00:31:44,700
the paint in flashing which basically is

00:31:42,120 --> 00:31:47,100
a hint see to see which part of the

00:31:44,700 --> 00:31:51,600
lesion of the page is painted oh it's

00:31:47,100 --> 00:31:52,650
just it is a green paint happen so there

00:31:51,600 --> 00:31:54,870
might be some kind of performance

00:31:52,650 --> 00:31:58,320
problem that I have but you can see I

00:31:54,870 --> 00:32:00,090
move all of my pictures and no paint is

00:31:58,320 --> 00:32:02,910
happening it's already last Royce and

00:32:00,090 --> 00:32:06,510
it's just moving so that's the composite

00:32:02,910 --> 00:32:09,720
in order to do this the browser go

00:32:06,510 --> 00:32:14,040
through a layer tree to create a layer

00:32:09,720 --> 00:32:16,890
tree and once that layer tree is created

00:32:14,040 --> 00:32:19,080
they can composite sometimes you might

00:32:16,890 --> 00:32:22,080
find parts of your application that you

00:32:19,080 --> 00:32:23,790
think is a layer might not get layer in

00:32:22,080 --> 00:32:26,220
that case you can hint to the browser

00:32:23,790 --> 00:32:28,410
hey this will change and then bake we're

00:32:26,220 --> 00:32:31,860
there for you for the world change and

00:32:28,410 --> 00:32:33,660
it's tempting to they're all the things

00:32:31,860 --> 00:32:35,790
because it's gonna be plea bastard and

00:32:33,660 --> 00:32:38,070
it's just moving them but that man is

00:32:35,790 --> 00:32:39,750
old in a another performance junk so

00:32:38,070 --> 00:32:41,820
it's always important to measure your

00:32:39,750 --> 00:32:45,690
performance runtime performance before

00:32:41,820 --> 00:32:48,190
deciding how to use those attributes so

00:32:45,690 --> 00:32:51,159
now that all of the trees

00:32:48,190 --> 00:32:53,799
paint order is in main thread' calls up

00:32:51,159 --> 00:32:56,289
a compositor threat which is specialized

00:32:53,799 --> 00:32:58,679
to Honduran dis compositing they commit

00:32:56,289 --> 00:33:04,360
that data and say goal display this page

00:32:58,679 --> 00:33:06,909
so then compositor thread try to Laster

00:33:04,360 --> 00:33:09,490
the page but as you can see the page is

00:33:06,909 --> 00:33:11,379
now bigger it's not just beautiful so

00:33:09,490 --> 00:33:14,830
they have a mechanism to divide that up

00:33:11,379 --> 00:33:18,039
into tile and each of the tile is last

00:33:14,830 --> 00:33:19,960
rise using Laster thread what the last

00:33:18,039 --> 00:33:24,730
of thread is doing is that getting the

00:33:19,960 --> 00:33:27,190
small quad of the page making into a GPU

00:33:24,730 --> 00:33:30,539
texture map and put it into GPU memory

00:33:27,190 --> 00:33:33,789
also keeping the love friends in a

00:33:30,539 --> 00:33:35,620
compositor thread so compositor spread

00:33:33,789 --> 00:33:39,129
also have a idea of where the viewport

00:33:35,620 --> 00:33:41,649
is so they might schedules the around

00:33:39,129 --> 00:33:43,059
the viewport earlier than the one on the

00:33:41,649 --> 00:33:45,789
bottom so they are a little more

00:33:43,059 --> 00:33:48,730
sophisticated but now you have all of

00:33:45,789 --> 00:33:51,070
the draw was compositor thread composite

00:33:48,730 --> 00:33:53,289
the page and then create what's called a

00:33:51,070 --> 00:33:54,659
compositor frame this is the frame of

00:33:53,289 --> 00:33:58,049
your application that you're showing

00:33:54,659 --> 00:34:01,299
this one gets sent to a browser process

00:33:58,049 --> 00:34:03,220
your IPC same vendor this and browser

00:34:01,299 --> 00:34:06,370
process UI process might add another

00:34:03,220 --> 00:34:09,429
composite frame you know to display the

00:34:06,370 --> 00:34:13,359
UI part of the thing and then sent it to

00:34:09,429 --> 00:34:16,389
GPU if the screw comes in remember the

00:34:13,359 --> 00:34:19,149
school input comes in the UI thread says

00:34:16,389 --> 00:34:21,310
hey there is inter compositor thread

00:34:19,149 --> 00:34:23,500
goes no problem I know how to layer

00:34:21,310 --> 00:34:27,190
these things so they create another

00:34:23,500 --> 00:34:28,659
compositor frame send it to GPU and you

00:34:27,190 --> 00:34:30,730
know small screwing because the most

00:34:28,659 --> 00:34:32,889
important part is that a compositor

00:34:30,730 --> 00:34:35,440
surrett could handle all of this they

00:34:32,889 --> 00:34:39,099
didn't need to bother a main thread they

00:34:35,440 --> 00:34:40,389
didn't junk the page so but sometimes

00:34:39,099 --> 00:34:45,190
you might have this kind of application

00:34:40,389 --> 00:34:47,290
where you want to like you know clip the

00:34:45,190 --> 00:34:48,700
only horizontal scroll to one region and

00:34:47,290 --> 00:34:50,290
you might add other event listener and

00:34:48,700 --> 00:34:54,579
and prevent default and then kind of

00:34:50,290 --> 00:34:56,530
trying to force the scroll well that

00:34:54,579 --> 00:34:59,079
event handler lives in the main thread

00:34:56,530 --> 00:35:01,280
in JavaScript so how does dart handled

00:34:59,079 --> 00:35:03,859
so compositor thread

00:35:01,280 --> 00:35:06,530
when their last raising and compositing

00:35:03,859 --> 00:35:08,720
them they mark that part as a known fast

00:35:06,530 --> 00:35:11,000
goal of Allegiant which basically means

00:35:08,720 --> 00:35:14,480
that if an even happens on this point

00:35:11,000 --> 00:35:17,569
then tell me and then I need to ask my

00:35:14,480 --> 00:35:19,790
main threat pause the scroll they say

00:35:17,569 --> 00:35:22,099
hey you need something maybe I might say

00:35:19,790 --> 00:35:26,990
yeah there is event handler so I'm gonna

00:35:22,099 --> 00:35:28,940
block that default move right but there

00:35:26,990 --> 00:35:31,819
is a common technique in JavaScript

00:35:28,940 --> 00:35:34,130
which is event delegation you put it one

00:35:31,819 --> 00:35:36,200
event listener on the top or the big

00:35:34,130 --> 00:35:38,630
lesion of it and then you check which of

00:35:36,200 --> 00:35:40,849
the target it is in this case it's a

00:35:38,630 --> 00:35:43,069
problem everything becomes known fast

00:35:40,849 --> 00:35:45,230
scrollable legion and compositors

00:35:43,069 --> 00:35:47,300
threader is basically just dispatching

00:35:45,230 --> 00:35:50,390
the message to main threat like you need

00:35:47,300 --> 00:35:52,760
it like even though main threat actually

00:35:50,390 --> 00:35:56,359
didn't need those part they need to ask

00:35:52,760 --> 00:35:59,329
to them so as a web developer it's a big

00:35:56,359 --> 00:36:04,490
chunk so as a web developer we can put a

00:35:59,329 --> 00:36:08,270
passive true options and that makes you

00:36:04,490 --> 00:36:10,369
Legion not read basically what it means

00:36:08,270 --> 00:36:12,260
is that I still want to hear about the

00:36:10,369 --> 00:36:14,990
event on the main threat but you can go

00:36:12,260 --> 00:36:19,069
ahead and start scrolling if you want to

00:36:14,990 --> 00:36:21,170
and there is a CSS attribute like touch

00:36:19,069 --> 00:36:23,960
action panics which basically you don't

00:36:21,170 --> 00:36:25,640
need to write any JavaScript logic to

00:36:23,960 --> 00:36:27,349
prevent default and then clip it to

00:36:25,640 --> 00:36:30,109
whatever the gesture that you want just

00:36:27,349 --> 00:36:34,430
write a CSS and browser takes care for

00:36:30,109 --> 00:36:36,890
you so those things also document it on

00:36:34,430 --> 00:36:39,800
our side if you want to check that out

00:36:36,890 --> 00:36:46,010
so hopefully this didn't overwhelm you

00:36:39,800 --> 00:36:48,680
with like so many things I need to know

00:36:46,010 --> 00:36:50,660
well there is a little bit of tools to

00:36:48,680 --> 00:36:53,990
help you when you are trying to develop

00:36:50,660 --> 00:36:56,630
so one is lighthouse lighthouse is a

00:36:53,990 --> 00:36:59,540
plug-in also tool that lives within the

00:36:56,630 --> 00:37:02,270
chrome developer tool if you go open the

00:36:59,540 --> 00:37:04,460
audits tab they run the audit over your

00:37:02,270 --> 00:37:05,930
site and then tells you the score and a

00:37:04,460 --> 00:37:08,270
lot of people cares about the score and

00:37:05,930 --> 00:37:11,030
getting hundred but what I find more

00:37:08,270 --> 00:37:12,610
interesting is a explanation of each

00:37:11,030 --> 00:37:15,400
audit

00:37:12,610 --> 00:37:17,500
and when I started at this team home

00:37:15,400 --> 00:37:19,570
develop operations first thing I did was

00:37:17,500 --> 00:37:22,210
going through all of the audit to learn

00:37:19,570 --> 00:37:24,750
what browser cares about as a

00:37:22,210 --> 00:37:26,920
performance or any other business area

00:37:24,750 --> 00:37:29,140
other thing that's coming to the

00:37:26,920 --> 00:37:31,450
platform is a feature policy so future

00:37:29,140 --> 00:37:33,970
potty is like a content security policy

00:37:31,450 --> 00:37:37,690
but for your feature so you put a little

00:37:33,970 --> 00:37:41,290
bit of a snippet in your header then it

00:37:37,690 --> 00:37:43,180
will block the feature so you might have

00:37:41,290 --> 00:37:46,690
things like fast animation feature

00:37:43,180 --> 00:37:49,330
policy where every CSS animation that is

00:37:46,690 --> 00:37:52,810
not performing it's blocked there is a

00:37:49,330 --> 00:37:55,720
feature policy demos up comm that has

00:37:52,810 --> 00:37:58,120
all of the try and eller type of thing

00:37:55,720 --> 00:37:59,980
and this is super this is very new and

00:37:58,120 --> 00:38:02,200
it's really interesting to see what kind

00:37:59,980 --> 00:38:04,450
of feature policies proposed because it

00:38:02,200 --> 00:38:06,040
tells what kind of performance problems

00:38:04,450 --> 00:38:07,720
what kind of feature problem that the

00:38:06,040 --> 00:38:12,010
web developer and browser engineers are

00:38:07,720 --> 00:38:13,480
having so hopefully through this you

00:38:12,010 --> 00:38:16,000
might thought that oh I already knew

00:38:13,480 --> 00:38:19,960
that you are on the behind the side of

00:38:16,000 --> 00:38:21,760
the browser I was the front side if you

00:38:19,960 --> 00:38:24,010
are like me who is like this is

00:38:21,760 --> 00:38:26,620
interesting but I don't know where to

00:38:24,010 --> 00:38:30,760
start I recommend just building

00:38:26,620 --> 00:38:32,890
applications it doesn't have to be to do

00:38:30,760 --> 00:38:34,810
MVC it doesn't have to be Hakone use

00:38:32,890 --> 00:38:37,510
clone you can pick whatever the thing

00:38:34,810 --> 00:38:39,970
you want to do I like knitting so for

00:38:37,510 --> 00:38:42,370
three years since last year's comes I

00:38:39,970 --> 00:38:46,360
made more than five I'm sure I'm

00:38:42,370 --> 00:38:48,790
forgetting knitting related application

00:38:46,360 --> 00:38:53,590
which all of them have idea of compilers

00:38:48,790 --> 00:38:56,230
a bit operations UI transform smooth

00:38:53,590 --> 00:38:58,240
scrolling all of it and like by the time

00:38:56,230 --> 00:39:00,250
the fifth one knitter if I this is the

00:38:58,240 --> 00:39:02,170
only one that I can proudly say to my

00:39:00,250 --> 00:39:05,170
friend hey use this sauce vacation it's

00:39:02,170 --> 00:39:07,540
actually kind of cool so it takes time

00:39:05,170 --> 00:39:10,360
it's really frustrating but I highly

00:39:07,540 --> 00:39:13,060
recommend learning them and if you

00:39:10,360 --> 00:39:16,000
didn't get anything from it I hope this

00:39:13,060 --> 00:39:17,980
image of q-thruster now engrave into

00:39:16,000 --> 00:39:21,580
your brain and you think about them

00:39:17,980 --> 00:39:23,470
every time you open a browser this has

00:39:21,580 --> 00:39:25,339
been me Marco that's my twitter handle

00:39:23,470 --> 00:39:27,140
this slide is super eye

00:39:25,339 --> 00:39:29,930
in heavy I am planning on publishing

00:39:27,140 --> 00:39:32,029
static version later and all of the

00:39:29,930 --> 00:39:36,140
reference I mean I counted this morning

00:39:32,029 --> 00:39:37,910
I had a 48 tabs of resources to us so

00:39:36,140 --> 00:39:39,410
dough will be coming soon if you took

00:39:37,910 --> 00:39:42,440
any of the pictures or you want to use

00:39:39,410 --> 00:39:46,609
the slice later I consider all of my

00:39:42,440 --> 00:39:48,589
drawing to be CC by NC s a 4.0 whatever

00:39:46,609 --> 00:39:51,890
that was I forgot I decided that was the

00:39:48,589 --> 00:39:53,839
license I'm going to use so if you use

00:39:51,890 --> 00:39:57,259
them in your talk or education no blog

00:39:53,839 --> 00:39:58,820
or whatever do they mean oh please use

00:39:57,259 --> 00:40:06,449
away thank you very much

00:39:58,820 --> 00:40:06,449

YouTube URL: https://www.youtube.com/watch?v=25RovROJUnw


