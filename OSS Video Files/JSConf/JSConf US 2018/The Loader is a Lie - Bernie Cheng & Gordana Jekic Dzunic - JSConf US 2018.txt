Title: The Loader is a Lie - Bernie Cheng & Gordana Jekic Dzunic - JSConf US 2018
Publication date: 2018-11-11
Playlist: JSConf US 2018
Description: 
	How to Elegantly Load a Million or More Data Points
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:28,570
[Music]

00:00:22,919 --> 00:00:30,219
morning everyone and welcome I hope

00:00:28,570 --> 00:00:32,920
everyone had a good first day of talks

00:00:30,219 --> 00:00:37,750
and an even better day yesterday so just

00:00:32,920 --> 00:00:38,980
on unwind relax my name is Bernie and

00:00:37,750 --> 00:00:40,899
we're both software developers at a

00:00:38,980 --> 00:00:43,450
company called geotab which is based out

00:00:40,899 --> 00:00:47,110
of Toronto the side of our talk today is

00:00:43,450 --> 00:00:49,210
called the loader is a lie and whether

00:00:47,110 --> 00:00:52,810
you hate them or whether you love them

00:00:49,210 --> 00:00:55,300
we see loaders every day in web pages on

00:00:52,810 --> 00:00:57,280
our mobile devices you know even when I

00:00:55,300 --> 00:00:58,899
was at the airport printing off my

00:00:57,280 --> 00:01:01,350
boarding pass the little machine had a

00:00:58,899 --> 00:01:04,149
little you know spinning airplane there

00:01:01,350 --> 00:01:06,970
everywhere

00:01:04,149 --> 00:01:09,100
anyways the main problem with with

00:01:06,970 --> 00:01:11,979
loaders is that they're just transparent

00:01:09,100 --> 00:01:17,200
liars and that's the that's the basis of

00:01:11,979 --> 00:01:19,979
our talk today so just a quick outline

00:01:17,200 --> 00:01:22,510
we're gonna go through an introduction

00:01:19,979 --> 00:01:23,430
the history of loading spinners if you

00:01:22,510 --> 00:01:25,420
will

00:01:23,430 --> 00:01:26,799
programs associated the problems

00:01:25,420 --> 00:01:29,110
associated with them and some

00:01:26,799 --> 00:01:31,270
improvements that we can make on loading

00:01:29,110 --> 00:01:38,140
spinners and finally we'll run through a

00:01:31,270 --> 00:01:40,240
couple demos so before we get into the

00:01:38,140 --> 00:01:43,240
heart of this talk I just want explain

00:01:40,240 --> 00:01:47,229
who geotab is and what we do geotab is a

00:01:43,240 --> 00:01:50,020
telematics or jus top is a global leader

00:01:47,229 --> 00:01:52,420
in the telematics space for those of you

00:01:50,020 --> 00:01:54,970
who don't know what telematics is it's

00:01:52,420 --> 00:01:58,150
the connecting of vehicles so your cars

00:01:54,970 --> 00:02:01,119
trucks semis etc and reporting where

00:01:58,150 --> 00:02:02,500
they are and what they're doing we

00:02:01,119 --> 00:02:05,140
currently have more than 1.2 million

00:02:02,500 --> 00:02:08,220
vehicles driving around the world every

00:02:05,140 --> 00:02:12,549
day and those 1.2 million vehicles are

00:02:08,220 --> 00:02:16,989
generating more than 3 billion raw data

00:02:12,549 --> 00:02:20,739
records on a on a day to day basis so as

00:02:16,989 --> 00:02:24,130
you can see from the map we have no

00:02:20,739 --> 00:02:24,760
shortage of GPS points and I think it's

00:02:24,130 --> 00:02:27,459
suffice to say

00:02:24,760 --> 00:02:29,560
we collect a lot of data we also have

00:02:27,459 --> 00:02:32,680
the richest telematics data set in the

00:02:29,560 --> 00:02:34,959
world and in addition to GPS we also

00:02:32,680 --> 00:02:36,549
collect stuff you know such as weather

00:02:34,959 --> 00:02:39,069
your wipers are going on off weather

00:02:36,549 --> 00:02:43,569
your seatbelts plugged in whether you're

00:02:39,069 --> 00:02:44,909
speeding taking corners too sharply or

00:02:43,569 --> 00:02:47,110
you know breaking through too harshly

00:02:44,909 --> 00:02:49,120
pretty much anything that the car spits

00:02:47,110 --> 00:02:51,190
out we are we're ingesting and

00:02:49,120 --> 00:02:52,720
collecting you can kind of think of us

00:02:51,190 --> 00:02:57,420
as like big brother for fleets and

00:02:52,720 --> 00:03:00,430
vehicles but you know in a good way so

00:02:57,420 --> 00:03:02,500
besides the obvious shameless plug

00:03:00,430 --> 00:03:04,329
the reason why I mentioning all this is

00:03:02,500 --> 00:03:07,120
because one of the challenges that we

00:03:04,329 --> 00:03:09,280
have with all this data is you know

00:03:07,120 --> 00:03:11,019
taking it in and showing it into a

00:03:09,280 --> 00:03:13,060
format that people can understand so

00:03:11,019 --> 00:03:16,540
this could be you know dashboards charts

00:03:13,060 --> 00:03:19,359
reports etc you know so for instance if

00:03:16,540 --> 00:03:22,239
we have a chart that's looking at you

00:03:19,359 --> 00:03:24,639
know several months of data it's a lot

00:03:22,239 --> 00:03:27,909
of data and the load times can be fairly

00:03:24,639 --> 00:03:30,129
substantial and you know to alleviate

00:03:27,909 --> 00:03:34,720
this problem we are guilty of using a

00:03:30,129 --> 00:03:39,819
loading spinner as well so by show of

00:03:34,720 --> 00:03:43,329
hands who knows what a throbber is it's

00:03:39,819 --> 00:03:45,790
the robber okay not many of you as

00:03:43,329 --> 00:03:47,560
that's kind of I was in the same boat I

00:03:45,790 --> 00:03:49,419
don't know what if the robber was until

00:03:47,560 --> 00:03:51,849
I researched or until I did some

00:03:49,419 --> 00:03:55,720
research on loading spinners and all

00:03:51,849 --> 00:03:57,340
their counterparts so a throbber is any

00:03:55,720 --> 00:04:00,459
animation that a computer program uses

00:03:57,340 --> 00:04:01,660
to display to the user that work is

00:04:00,459 --> 00:04:03,669
being done in the background so this

00:04:01,660 --> 00:04:05,709
would be like downloading or loading a

00:04:03,669 --> 00:04:10,989
web page or doing some kind of you know

00:04:05,709 --> 00:04:13,269
some kind of crazy calculation and if

00:04:10,989 --> 00:04:17,049
you're as old as I am you will recognize

00:04:13,269 --> 00:04:18,849
these two infamous robbers for those of

00:04:17,049 --> 00:04:22,090
you don't know the one on the left is

00:04:18,849 --> 00:04:24,330
Internet Explorer version three and the

00:04:22,090 --> 00:04:28,930
one on the right is Netscape Navigator

00:04:24,330 --> 00:04:30,099
both of which are long dead so let's

00:04:28,930 --> 00:04:34,180
fast forward a few years into the

00:04:30,099 --> 00:04:36,219
mid-2000s Ajax or when Hejaz was

00:04:34,180 --> 00:04:38,259
introduced I mean the during a time when

00:04:36,219 --> 00:04:40,610
most web pages were

00:04:38,259 --> 00:04:43,039
where most web pages required a full

00:04:40,610 --> 00:04:45,800
page reload whenever the user did some

00:04:43,039 --> 00:04:47,419
kind of interaction you know Ajax came

00:04:45,800 --> 00:04:49,639
in and it wasn't quite the game changer

00:04:47,419 --> 00:04:51,979
you know it allowed portions of the web

00:04:49,639 --> 00:04:54,439
page to change dynamically and because

00:04:51,979 --> 00:04:57,139
of this the robbers kind of came back

00:04:54,439 --> 00:04:59,740
but were needed more embedded in the

00:04:57,139 --> 00:05:01,729
site rather than in the browser

00:04:59,740 --> 00:05:06,069
thankfully the names robbers didn't

00:05:01,729 --> 00:05:09,169
stick sounds sounds kind of gross I

00:05:06,069 --> 00:05:12,770
think they're better now known as

00:05:09,169 --> 00:05:15,849
loading spinners or spinning loaders or

00:05:12,770 --> 00:05:18,020
progress spinners or what have you

00:05:15,849 --> 00:05:20,479
but the problem with them was that they

00:05:18,020 --> 00:05:23,120
were used in judiciously and by that I

00:05:20,479 --> 00:05:25,580
mean they were used without you know

00:05:23,120 --> 00:05:26,960
really much any thought whatsoever now

00:05:25,580 --> 00:05:28,939
pretty much if there was an ajax call

00:05:26,960 --> 00:05:31,279
you know you could be pretty sure that

00:05:28,939 --> 00:05:33,620
there was a loading spinner that a

00:05:31,279 --> 00:05:36,020
company did and i think it's because of

00:05:33,620 --> 00:05:37,819
this that we've now become quite

00:05:36,020 --> 00:05:39,710
accustomed to seeing loading spinners

00:05:37,819 --> 00:05:43,120
you know whatever we're waiting for

00:05:39,710 --> 00:05:43,120
something over anything to happen right

00:05:43,539 --> 00:05:53,419
okay let's see how loading spinners look

00:05:47,449 --> 00:05:57,939
today as you okay this is this is taking

00:05:53,419 --> 00:06:00,080
longer okay whatever I'll just continue

00:05:57,939 --> 00:06:01,999
so as you heard from Bernie we are

00:06:00,080 --> 00:06:05,300
dealing with a lot of data on daily

00:06:01,999 --> 00:06:06,949
basis a billion strikers per day we are

00:06:05,300 --> 00:06:10,999
getting data from different data sources

00:06:06,949 --> 00:06:12,319
like our API or bigquery and it's really

00:06:10,999 --> 00:06:15,199
challenging to work with those data

00:06:12,319 --> 00:06:18,559
since we are getting we are having so

00:06:15,199 --> 00:06:20,870
many so many number of Records of course

00:06:18,559 --> 00:06:28,279
we are guilty for using loading spinners

00:06:20,870 --> 00:06:31,939
for fetching those data so sorry for all

00:06:28,279 --> 00:06:38,300
experience to us those data so we are

00:06:31,939 --> 00:06:38,809
having so many different I'm sorry of

00:06:38,300 --> 00:06:40,159
course

00:06:38,809 --> 00:06:42,319
we are getting for using all the

00:06:40,159 --> 00:06:44,629
spinners when fashion those data which

00:06:42,319 --> 00:06:47,990
is unfortunate because some of those

00:06:44,629 --> 00:06:48,469
queries take so much time they take so

00:06:47,990 --> 00:06:49,630
long

00:06:48,469 --> 00:06:52,060
so you

00:06:49,630 --> 00:06:54,370
are not sure what's happening whether or

00:06:52,060 --> 00:06:57,340
not it's still loading whether or not

00:06:54,370 --> 00:06:58,990
they are its deal fetching whether or

00:06:57,340 --> 00:07:02,050
not they're just staring at some

00:06:58,990 --> 00:07:06,190
animated gif which is exactly what are

00:07:02,050 --> 00:07:08,560
you doing now so slides are not broken

00:07:06,190 --> 00:07:12,640
we are very much connected and online

00:07:08,560 --> 00:07:14,710
and if I pull at least one of you don't

00:07:12,640 --> 00:07:16,240
feel bad because this brings us to a

00:07:14,710 --> 00:07:19,000
first problem with loading spinners

00:07:16,240 --> 00:07:21,790
which is that they don't show any sign

00:07:19,000 --> 00:07:25,290
of progress the main problem with

00:07:21,790 --> 00:07:28,590
loading spinners is that they don't show

00:07:25,290 --> 00:07:32,260
either completed or remaining progress

00:07:28,590 --> 00:07:36,190
let's go back to the previous loading

00:07:32,260 --> 00:07:42,220
spinner the 1i tries to fold you it

00:07:36,190 --> 00:07:44,830
so besides questioning Wi-Fi

00:07:42,220 --> 00:07:47,410
connectivity here I'm sure at least some

00:07:44,830 --> 00:07:49,950
of you we're thinking what's happening

00:07:47,410 --> 00:07:52,420
or how much longer we'll have to wait

00:07:49,950 --> 00:07:56,320
well the answer on both of those

00:07:52,420 --> 00:07:58,600
questions is I don't know so you you

00:07:56,320 --> 00:08:01,090
just accepted the fact that something

00:07:58,600 --> 00:08:05,220
was happening and that something was

00:08:01,090 --> 00:08:07,600
going through a lot right so if we

00:08:05,220 --> 00:08:12,580
replace this loading spinner with some

00:08:07,600 --> 00:08:16,150
cool animation the user experience might

00:08:12,580 --> 00:08:18,550
be better but we are still we're still

00:08:16,150 --> 00:08:20,740
waiting like you are still wondering

00:08:18,550 --> 00:08:24,130
what's happening and how much longer

00:08:20,740 --> 00:08:26,620
we'll have to wait the next issue with

00:08:24,130 --> 00:08:29,200
loading spinners speeders is perception

00:08:26,620 --> 00:08:32,289
of longer loading time time flies when

00:08:29,200 --> 00:08:34,479
you are having fun right when you're

00:08:32,289 --> 00:08:38,110
been watching your favorite TV show on

00:08:34,479 --> 00:08:42,090
Netflix hours just go by it's kind of

00:08:38,110 --> 00:08:45,250
like what happened to me when I watched

00:08:42,090 --> 00:08:50,440
the whole season of stranger things in

00:08:45,250 --> 00:08:53,790
in a day yeah yeah that was me too hey I

00:08:50,440 --> 00:08:56,350
see some of you as well unfortunately

00:08:53,790 --> 00:08:58,780
waiting is the opposite of having fun

00:08:56,350 --> 00:09:01,750
just imagine yourself being in a traffic

00:08:58,780 --> 00:09:04,410
jam for hours and you will know exactly

00:09:01,750 --> 00:09:04,410
what I'm talking about

00:09:05,189 --> 00:09:14,730
sorry so the same can be said about

00:09:10,829 --> 00:09:18,429
loading spinners they make loading

00:09:14,730 --> 00:09:21,579
appear long they make loading appear

00:09:18,429 --> 00:09:24,970
slower so even if you use some animation

00:09:21,579 --> 00:09:27,129
we are still waiting right and we are

00:09:24,970 --> 00:09:30,519
just watching it something that makes

00:09:27,129 --> 00:09:34,899
loading that makes loading appear longer

00:09:30,519 --> 00:09:36,970
than it actually is so the last problem

00:09:34,899 --> 00:09:39,189
with loading spinners is that there is

00:09:36,970 --> 00:09:42,879
there is no sign of what's coming next

00:09:39,189 --> 00:09:45,399
in one second you are watching at on the

00:09:42,879 --> 00:09:47,919
blank page with loading spinner and then

00:09:45,399 --> 00:09:51,369
BAM all content just magically appears

00:09:47,919 --> 00:09:54,189
on the screen right unless it's your

00:09:51,369 --> 00:09:57,249
birthday or you want a Jack what these

00:09:54,189 --> 00:10:00,489
surprises may not have a good impact on

00:09:57,249 --> 00:10:05,529
the user the surprise effect can be

00:10:00,489 --> 00:10:09,029
reduced with with skeleton screams if

00:10:05,529 --> 00:10:12,970
you take a look at those two screenshots

00:10:09,029 --> 00:10:17,009
one of them is more surprising than than

00:10:12,970 --> 00:10:20,439
the other one on the Left we have a

00:10:17,009 --> 00:10:23,589
loading spinner that where data is

00:10:20,439 --> 00:10:27,040
loaded all at once and on the right we

00:10:23,589 --> 00:10:31,389
have skeletal screen this this is less

00:10:27,040 --> 00:10:33,929
surprising because data is content is

00:10:31,389 --> 00:10:38,639
loaded a little bit at a time so

00:10:33,929 --> 00:10:42,579
skeletal screens give users give users

00:10:38,639 --> 00:10:44,819
idea of what's what's coming next

00:10:42,579 --> 00:10:48,549
next a heads-up of what's coming next

00:10:44,819 --> 00:10:49,989
but today really tell us how much longer

00:10:48,549 --> 00:10:54,399
we will have to wait some content to

00:10:49,989 --> 00:10:57,639
load or do they make the deme clothing

00:10:54,399 --> 00:11:01,209
appears for unsurprisingly the answer is

00:10:57,639 --> 00:11:03,579
no so what are some of the best

00:11:01,209 --> 00:11:07,149
practices for loading spinners for

00:11:03,579 --> 00:11:09,160
starters don't use them well that's a

00:11:07,149 --> 00:11:11,799
bit extreme right because they are

00:11:09,160 --> 00:11:15,399
useful and we should use them but I

00:11:11,799 --> 00:11:16,269
would say use them in moderation which

00:11:15,399 --> 00:11:19,240
means

00:11:16,269 --> 00:11:21,879
if pro if process is less than one

00:11:19,240 --> 00:11:22,929
second we really don't need a loading

00:11:21,879 --> 00:11:25,720
spinner right

00:11:22,929 --> 00:11:28,240
but if process takes between two and

00:11:25,720 --> 00:11:29,679
that's ten seconds at most I would

00:11:28,240 --> 00:11:33,220
recommend using loading spinner

00:11:29,679 --> 00:11:35,319
ten seconds might be too much but I will

00:11:33,220 --> 00:11:40,389
leave it up to you like it's really

00:11:35,319 --> 00:11:42,939
depends on on the on each case okay

00:11:40,389 --> 00:11:46,149
Brittany let's let's improve those

00:11:42,939 --> 00:11:48,160
loading spinners okay so we cover a lot

00:11:46,149 --> 00:11:53,170
of ground with the the loading spinners

00:11:48,160 --> 00:11:55,360
let's see how we can become better so

00:11:53,170 --> 00:11:57,850
the first way to improve them is to give

00:11:55,360 --> 00:11:59,769
some feedback to the user from the

00:11:57,850 --> 00:12:01,959
moment a user clicks on something or has

00:11:59,769 --> 00:12:04,689
some kind of user interaction they're

00:12:01,959 --> 00:12:06,249
basically waiting you know and if you

00:12:04,689 --> 00:12:08,170
can give them some kind of context as to

00:12:06,249 --> 00:12:10,240
why they're waiting they might be more

00:12:08,170 --> 00:12:13,149
inclined to wait for the entire process

00:12:10,240 --> 00:12:15,670
to finish this could also include what's

00:12:13,149 --> 00:12:19,089
currently happening as part of the the

00:12:15,670 --> 00:12:20,110
feedback loop I would say for even

00:12:19,089 --> 00:12:22,720
longer operations

00:12:20,110 --> 00:12:25,869
Safa it's also helpful to break down the

00:12:22,720 --> 00:12:28,480
the process into kind of distinct parts

00:12:25,869 --> 00:12:31,470
so for example if your if your process

00:12:28,480 --> 00:12:34,480
is the backing up of data for a month

00:12:31,470 --> 00:12:36,939
each day could be considered a step in a

00:12:34,480 --> 00:12:40,389
series of you know 30 or 31 steps and

00:12:36,939 --> 00:12:46,029
this this pretty much resembles a

00:12:40,389 --> 00:12:49,480
progress bar which kind of goes into

00:12:46,029 --> 00:12:51,179
this so the next way to improve the

00:12:49,480 --> 00:12:54,220
loading spinners to display some kind of

00:12:51,179 --> 00:12:57,610
some indication of process progress

00:12:54,220 --> 00:13:00,970
sorry the most obvious way is with a

00:12:57,610 --> 00:13:03,069
percentage where zero is no work and 100

00:13:00,970 --> 00:13:05,379
is all work you've done it's pretty

00:13:03,069 --> 00:13:07,209
obvious but of course the most obvious

00:13:05,379 --> 00:13:09,759
way is not the prettiest way so you know

00:13:07,209 --> 00:13:12,279
let's introduce progress bars every

00:13:09,759 --> 00:13:15,879
knows these things or progress wheels

00:13:12,279 --> 00:13:17,619
and these things are good for to

00:13:15,879 --> 00:13:19,449
visualize progress because you know

00:13:17,619 --> 00:13:23,740
everyone understands them and their

00:13:19,449 --> 00:13:25,720
behavior is is pretty expected and

00:13:23,740 --> 00:13:28,900
finally finally the last way is to

00:13:25,720 --> 00:13:32,620
provide some kind of time estimate

00:13:28,900 --> 00:13:34,540
time progress can I guess it's useful

00:13:32,620 --> 00:13:36,910
but I find could be detrimental you know

00:13:34,540 --> 00:13:38,170
if your time progresses like an hour and

00:13:36,910 --> 00:13:41,110
34 minutes you might be kind of

00:13:38,170 --> 00:13:45,160
disappointing the better way would be to

00:13:41,110 --> 00:13:46,540
show the time remaining and you know

00:13:45,160 --> 00:13:48,940
depending on the circumstances this can

00:13:46,540 --> 00:13:52,060
be kind of tricky to do but I think an

00:13:48,940 --> 00:13:54,100
approximation of that time is is is is

00:13:52,060 --> 00:13:57,460
enough to keep the user satisfied and

00:13:54,100 --> 00:13:59,320
kind of engaged not sure if you can see

00:13:57,460 --> 00:14:01,000
that but it says the little picture

00:13:59,320 --> 00:14:04,030
there says about 60 seconds remaining so

00:14:01,000 --> 00:14:07,390
they're pretty vague all right so enough

00:14:04,030 --> 00:14:17,770
talk you know let's let's test Murphy's

00:14:07,390 --> 00:14:20,140
Law and do some demos in the first demo

00:14:17,770 --> 00:14:22,900
today I'll show you how we are loading a

00:14:20,140 --> 00:14:24,700
thousands of records and what we did to

00:14:22,900 --> 00:14:27,550
improve those who holding spinners and

00:14:24,700 --> 00:14:31,150
the waiting time I'll load the same data

00:14:27,550 --> 00:14:32,140
on the bar chart and we load them in

00:14:31,150 --> 00:14:34,690
three different ways

00:14:32,140 --> 00:14:37,300
the data represents all trips trips

00:14:34,690 --> 00:14:42,610
happened in periods of four months which

00:14:37,300 --> 00:14:49,390
is approximately about two 120 20

00:14:42,610 --> 00:14:51,850
thousand trips first let's take a look

00:14:49,390 --> 00:14:55,090
at libraries that we used so we are

00:14:51,850 --> 00:14:57,840
using geotab API to get those data then

00:14:55,090 --> 00:15:00,610
we are using material for user interface

00:14:57,840 --> 00:15:03,060
for chart rendering we are using charts

00:15:00,610 --> 00:15:10,030
is chess and at the end we are using

00:15:03,060 --> 00:15:12,760
rxjs to handle a synchronous events in

00:15:10,030 --> 00:15:16,770
the first iteration I have one single

00:15:12,760 --> 00:15:21,520
API request that returns all data and

00:15:16,770 --> 00:15:27,270
I'm using I'm using a simple loading

00:15:21,520 --> 00:15:27,270
spinner so let's go to the dough

00:15:38,620 --> 00:15:41,220
No

00:15:57,860 --> 00:16:13,650
so here we go

00:16:06,290 --> 00:16:15,750
so let's start the demo does this

00:16:13,650 --> 00:16:19,340
loading spinner sounds familiar from the

00:16:15,750 --> 00:16:23,550
beginning this is not give I promise

00:16:19,340 --> 00:16:25,230
so this was something we tried first if

00:16:23,550 --> 00:16:27,030
you remember the problems with loading

00:16:25,230 --> 00:16:29,490
spinners I was talking about

00:16:27,030 --> 00:16:32,480
so this attempt had all of those

00:16:29,490 --> 00:16:35,010
problems so there is no sign of progress

00:16:32,480 --> 00:16:38,730
loading time appears longer than it

00:16:35,010 --> 00:16:42,510
actually is there is not like surprise

00:16:38,730 --> 00:16:45,420
effect is still present and like

00:16:42,510 --> 00:16:50,000
everything went pretty pretty wrong I

00:16:45,420 --> 00:16:52,140
would say so this is still loading I

00:16:50,000 --> 00:16:57,800
wasn't questioning Wi-Fi connectivity

00:16:52,140 --> 00:17:00,210
before but now I'm kinda kinda is I can

00:16:57,800 --> 00:17:03,420
okay this should be soon I promise

00:17:00,210 --> 00:17:07,350
I hope no one is streaming Netflix

00:17:03,420 --> 00:17:11,930
record right now and if someone is I

00:17:07,350 --> 00:17:11,930
hope it's in the other room at least

00:17:12,170 --> 00:17:21,560
okay usually fix it's not that long

00:17:28,059 --> 00:17:35,620
of course I would be shorter I would be

00:17:31,850 --> 00:17:46,520
faster when you're doing a live demo

00:17:35,620 --> 00:17:49,280
let's make it as longer as possible and

00:17:46,520 --> 00:17:51,590
as as I said before now we are really

00:17:49,280 --> 00:17:56,960
wondering what's happening we have no

00:17:51,590 --> 00:18:06,080
idea will this ever end or what's going

00:17:56,960 --> 00:18:08,450
so so be at the end let's wait a little

00:18:06,080 --> 00:18:12,980
bit more if not I will just move on

00:18:08,450 --> 00:18:15,040
because it's really shouldn't take this

00:18:12,980 --> 00:18:15,040
long

00:18:18,440 --> 00:18:28,770
looks like we are not lucky with demos

00:18:21,780 --> 00:18:30,720
today yeah yeah that's fine yeah I don't

00:18:28,770 --> 00:18:34,080
know just keep over I'll just keep going

00:18:30,720 --> 00:18:43,740
to the other demo hopefully oh actually

00:18:34,080 --> 00:18:52,140
here we go she's finally okay I'm so

00:18:43,740 --> 00:18:54,900
happy I was already sweating okay before

00:18:52,140 --> 00:18:56,580
we see the code for this I wanna I want

00:18:54,900 --> 00:18:59,220
to take a look at this chart because it

00:18:56,580 --> 00:19:01,380
shows some pretty interesting some

00:18:59,220 --> 00:19:04,740
pretty pretty interesting data as I said

00:19:01,380 --> 00:19:07,410
the data on this chart represent data

00:19:04,740 --> 00:19:11,160
all three for four months period and

00:19:07,410 --> 00:19:13,890
each bar represents each day we have

00:19:11,160 --> 00:19:16,410
five bars in a row that are pretty

00:19:13,890 --> 00:19:20,130
consistent followed by two lower ones

00:19:16,410 --> 00:19:22,200
and those two longer ones are represent

00:19:20,130 --> 00:19:24,240
the weekends so you can see that people

00:19:22,200 --> 00:19:28,140
are driving less for the weekends which

00:19:24,240 --> 00:19:31,740
is I would say expected the week with

00:19:28,140 --> 00:19:33,900
the spike is March break in Canada so

00:19:31,740 --> 00:19:36,750
you think you can see how number of

00:19:33,900 --> 00:19:39,240
trips increased except especially on

00:19:36,750 --> 00:19:42,470
Monday I guess we can't have kids at

00:19:39,240 --> 00:19:46,740
home we just have to take them somewhere

00:19:42,470 --> 00:19:50,840
so okay let's see the code the code for

00:19:46,740 --> 00:19:50,840
I switch to the slides

00:20:00,630 --> 00:20:14,140
no okay

00:20:10,960 --> 00:20:16,809
sorry about that the code for this

00:20:14,140 --> 00:20:20,590
iteration is very simple so here we are

00:20:16,809 --> 00:20:23,679
just making just making an API call and

00:20:20,590 --> 00:20:28,120
only thing that he said is just start it

00:20:23,679 --> 00:20:30,159
pretty simple after API call is done we

00:20:28,120 --> 00:20:34,029
are generating labels and syria's that

00:20:30,159 --> 00:20:38,260
are used to render charts using Chartist

00:20:34,029 --> 00:20:40,990
library in the second iteration we are

00:20:38,260 --> 00:20:43,990
splitting up API calls into sequences

00:20:40,990 --> 00:20:50,470
and rendering the parts as we receive

00:20:43,990 --> 00:20:55,929
them again we are still using simple

00:20:50,470 --> 00:20:58,409
loading spinner so let's go to the other

00:20:55,929 --> 00:20:58,409
demo

00:21:01,920 --> 00:21:10,620
I hope this one is one take that long is

00:21:06,270 --> 00:21:13,230
previous one so this was this was our

00:21:10,620 --> 00:21:15,750
second attempt and I would say first

00:21:13,230 --> 00:21:18,540
improvement this time we are showing

00:21:15,750 --> 00:21:21,960
some progress right that we didn't have

00:21:18,540 --> 00:21:24,870
before it's more user-friendly because

00:21:21,960 --> 00:21:27,030
it gives users an idea of content that

00:21:24,870 --> 00:21:29,970
will be displayed and there is no

00:21:27,030 --> 00:21:33,290
surprise effect the waiting time feels

00:21:29,970 --> 00:21:36,170
shorter because users are distracted by

00:21:33,290 --> 00:21:40,140
progress that is happening in background

00:21:36,170 --> 00:21:43,140
so as you can see we are rendering how

00:21:40,140 --> 00:21:46,470
we receive data we are rendering we are

00:21:43,140 --> 00:21:50,520
rendering them in the same time so I

00:21:46,470 --> 00:21:53,490
would say with it is really improvement

00:21:50,520 --> 00:21:56,730
comparing to the previous example it's

00:21:53,490 --> 00:21:59,610
really at least for me for us it was and

00:21:56,730 --> 00:22:03,210
for our users it was it was a better

00:21:59,610 --> 00:22:06,000
user experience so you can see here you

00:22:03,210 --> 00:22:09,480
can see a number of records that are

00:22:06,000 --> 00:22:14,730
loaded we are still we are coming to the

00:22:09,480 --> 00:22:17,490
end very soon okay here we go the same

00:22:14,730 --> 00:22:21,090
chart as I promised the same data just

00:22:17,490 --> 00:22:28,320
in a different ways just in different

00:22:21,090 --> 00:22:32,190
way ok let's go back to slides let's see

00:22:28,320 --> 00:22:34,830
the code here we has some simple rxjs

00:22:32,190 --> 00:22:40,920
code so how many of you is using our

00:22:34,830 --> 00:22:44,250
access Wow not many to be honest I also

00:22:40,920 --> 00:22:45,990
started using it recently and I would

00:22:44,250 --> 00:22:47,700
highly recommend for you guys to try

00:22:45,990 --> 00:22:50,610
because I really found it useful for

00:22:47,700 --> 00:22:52,350
things I'm working on and I think it's

00:22:50,610 --> 00:22:58,380
it's really good especially especially

00:22:52,350 --> 00:23:02,190
new new new versions of of rxjs even if

00:22:58,380 --> 00:23:04,290
you're not familiar with our FJs I can

00:23:02,190 --> 00:23:06,360
see a lot of people isn't it's really a

00:23:04,290 --> 00:23:09,210
simple code and you should be able to

00:23:06,360 --> 00:23:12,270
fall to fall so here we are just

00:23:09,210 --> 00:23:15,110
creating a simple observable for the

00:23:12,270 --> 00:23:17,960
start buttons click it calls a start

00:23:15,110 --> 00:23:20,840
following function that fetches the data

00:23:17,960 --> 00:23:24,559
and repeats until some condition is

00:23:20,840 --> 00:23:25,490
satisfied this call here should look

00:23:24,559 --> 00:23:27,529
familiar

00:23:25,490 --> 00:23:31,610
the only difference is that we are now

00:23:27,529 --> 00:23:34,640
loading 10,000 records at a time the

00:23:31,610 --> 00:23:36,919
version is used to keep track of where

00:23:34,640 --> 00:23:43,730
we left off from the from the past API

00:23:36,919 --> 00:23:46,760
call and here we are just subscribing to

00:23:43,730 --> 00:23:50,630
the observable and creating a chart

00:23:46,760 --> 00:23:54,320
until a condition is met one once we

00:23:50,630 --> 00:23:58,490
reach the end date we just stop fetching

00:23:54,320 --> 00:24:01,970
the data finally in the iteration three

00:23:58,490 --> 00:24:04,100
and final iteration I'm I'm splitting up

00:24:01,970 --> 00:24:08,450
the API call again calls again in

00:24:04,100 --> 00:24:11,240
sequences and rendering rendering parts

00:24:08,450 --> 00:24:16,669
how we receive them but this time I have

00:24:11,240 --> 00:24:20,980
a brand-new fancy progress spinner so

00:24:16,669 --> 00:24:25,340
let's see let's see this fancy spinner I

00:24:20,980 --> 00:24:30,019
hope it's not fancy on this movie ok

00:24:25,340 --> 00:24:33,139
let's start so this is the final

00:24:30,019 --> 00:24:36,350
solution that solves all the problems we

00:24:33,139 --> 00:24:37,159
had before so we finally have the full

00:24:36,350 --> 00:24:40,760
progress Pinner

00:24:37,159 --> 00:24:43,490
i was looking for all this time users

00:24:40,760 --> 00:24:45,769
know what kind of content is coming how

00:24:43,490 --> 00:24:50,240
much progress has been completed and how

00:24:45,769 --> 00:24:52,429
much is is remaining and of course this

00:24:50,240 --> 00:24:55,789
only works if you have a definition of

00:24:52,429 --> 00:25:00,070
what's considered complete in our case

00:24:55,789 --> 00:25:10,779
we are done when we reach our end date

00:25:00,070 --> 00:25:10,779
which will happen very soon in about 40%

00:25:10,860 --> 00:25:18,130
so you can also see here how many it's

00:25:15,520 --> 00:25:22,180
very smile yeah you can see in the left

00:25:18,130 --> 00:25:27,880
top corner how many days is loaded so we

00:25:22,180 --> 00:25:32,590
are waiting for April to load and as I

00:25:27,880 --> 00:25:37,930
said before again the same data just in

00:25:32,590 --> 00:25:41,590
some new way and I hope this way is much

00:25:37,930 --> 00:25:43,570
better for for you for you because it's

00:25:41,590 --> 00:25:51,720
definitely much better for us and for

00:25:43,570 --> 00:25:55,480
our users let's let's cool slides again

00:25:51,720 --> 00:25:57,970
to take a quick look at code without

00:25:55,480 --> 00:26:00,100
going into much details the purpose of

00:25:57,970 --> 00:26:02,380
this code is to make a counter that

00:26:00,100 --> 00:26:06,130
gives you the illusion that is

00:26:02,380 --> 00:26:08,670
increasing smoothly I won't explain this

00:26:06,130 --> 00:26:13,330
code in details you can find it in our

00:26:08,670 --> 00:26:15,670
slides later and here we are just

00:26:13,330 --> 00:26:21,910
calculating the percentage and I'm

00:26:15,670 --> 00:26:26,110
animating the recipe let's go to - thank

00:26:21,910 --> 00:26:28,780
you so that's pretty neat I mean a lot

00:26:26,110 --> 00:26:30,400
of loading but it's kind of neat now we

00:26:28,780 --> 00:26:32,320
wouldn't be at all telematics company if

00:26:30,400 --> 00:26:34,000
we didn't show you guys something

00:26:32,320 --> 00:26:39,610
related to the map right so let's load

00:26:34,000 --> 00:26:40,510
him up so at the beginning of the talk I

00:26:39,610 --> 00:26:43,810
showed you guys a map of North America

00:26:40,510 --> 00:26:46,030
and all the GPS points plotted on that

00:26:43,810 --> 00:26:48,070
map and it looks pretty extensive you

00:26:46,030 --> 00:26:52,150
could see you know the major freeways

00:26:48,070 --> 00:26:55,000
the roads or major roads and you could

00:26:52,150 --> 00:26:57,190
really make out all the major cities and

00:26:55,000 --> 00:27:00,790
all of that or that map pretty much

00:26:57,190 --> 00:27:02,740
amounted to about 12 million trips but

00:27:00,790 --> 00:27:05,850
that's not necessarily 12 million GPS

00:27:02,740 --> 00:27:08,680
points I guess I should explain that

00:27:05,850 --> 00:27:10,270
there's many GPS points for one trip so

00:27:08,680 --> 00:27:15,400
maybe there was close to a hundred

00:27:10,270 --> 00:27:17,200
million GPS points but you know as the

00:27:15,400 --> 00:27:19,690
title of our talk says and you know for

00:27:17,200 --> 00:27:21,610
the sake of time at bandwidth we're just

00:27:19,690 --> 00:27:22,480
going to go to million data points or

00:27:21,610 --> 00:27:26,290
trips

00:27:22,480 --> 00:27:29,700
just like just so some of the tech we

00:27:26,290 --> 00:27:33,460
used the data store is a Google bigquery

00:27:29,700 --> 00:27:35,410
the table schema is pretty simple it's

00:27:33,460 --> 00:27:38,049
just a long lab you know a time

00:27:35,410 --> 00:27:39,760
associated with that with that that

00:27:38,049 --> 00:27:44,530
point and we have a couple measurements

00:27:39,760 --> 00:27:47,290
of driving duration in mac speed we're

00:27:44,530 --> 00:27:50,919
using nodejs client library from Google

00:27:47,290 --> 00:27:54,400
to query bigquery from JavaScript we're

00:27:50,919 --> 00:27:57,130
also using deck GL which is a kind of

00:27:54,400 --> 00:28:00,790
like a layer on top of map box that uses

00:27:57,130 --> 00:28:03,370
WebGL I guess for for handling you know

00:28:00,790 --> 00:28:07,169
many data points millions of data points

00:28:03,370 --> 00:28:11,880
if you will and again we're using RS yes

00:28:07,169 --> 00:28:11,880
so let's take a look at the demo right

00:28:15,600 --> 00:28:21,130
so we have a map in North America I'm

00:28:17,740 --> 00:28:23,049
just gonna click play and you know

00:28:21,130 --> 00:28:26,830
fairly shortly we should be seeing some

00:28:23,049 --> 00:28:28,570
points in than that not shipping so we

00:28:26,830 --> 00:28:30,309
have a progress bar instead of the

00:28:28,570 --> 00:28:34,450
spinner this time just to spice things

00:28:30,309 --> 00:28:36,400
up so I'm not sure if you notice but at

00:28:34,450 --> 00:28:38,020
the beginning I only loaded say like a

00:28:36,400 --> 00:28:40,270
small number of records only a thousand

00:28:38,020 --> 00:28:41,799
and then I kind of like gradually

00:28:40,270 --> 00:28:43,360
increase it maybe a thousand two

00:28:41,799 --> 00:28:45,730
thousand five thousand ten thousand and

00:28:43,360 --> 00:28:47,530
so on and this is just to give the user

00:28:45,730 --> 00:28:50,470
something to look at from the very GetGo

00:28:47,530 --> 00:28:53,080
I think about a couple normally it takes

00:28:50,470 --> 00:28:54,970
about a couple seconds for the first

00:28:53,080 --> 00:28:56,950
thousand or so records to come in so it

00:28:54,970 --> 00:28:58,570
gives the the user something to play

00:28:56,950 --> 00:29:00,549
with right off the bat and they don't

00:28:58,570 --> 00:29:05,200
have to wait for you know all 1 million

00:29:00,549 --> 00:29:06,809
to the load so we're at 150 thousand

00:29:05,200 --> 00:29:10,059
records right now which is a little

00:29:06,809 --> 00:29:11,770
behind what I'm used to but let's assume

00:29:10,059 --> 00:29:14,230
in here we're from Toronto so let's take

00:29:11,770 --> 00:29:16,559
a look at Toronto you know it's the

00:29:14,230 --> 00:29:19,570
downtown cores is little point nicely

00:29:16,559 --> 00:29:22,330
you can see there and you know some of

00:29:19,570 --> 00:29:24,400
the surrounding areas are also lit up if

00:29:22,330 --> 00:29:26,470
we zoom in all the way you know we get

00:29:24,400 --> 00:29:28,210
our we going to get a coverage of our

00:29:26,470 --> 00:29:30,160
good indication of the coverage in

00:29:28,210 --> 00:29:32,529
Toronto you'll see that some of the

00:29:30,160 --> 00:29:35,539
circles are different sizes

00:29:32,529 --> 00:29:37,220
and it really is because we made the the

00:29:35,539 --> 00:29:40,220
size of the size of the circle a

00:29:37,220 --> 00:29:43,309
function of speed so the larger the

00:29:40,220 --> 00:29:44,929
circle the larger the match speed was

00:29:43,309 --> 00:29:50,059
for that trip and then vice versa for

00:29:44,929 --> 00:29:51,890
the small ones and then as the as the

00:29:50,059 --> 00:29:53,659
circle is going to overlap each other it

00:29:51,890 --> 00:29:55,720
kind of creates this this highlighting

00:29:53,659 --> 00:29:59,360
effect which I thought was pretty neat

00:29:55,720 --> 00:30:01,039
we can zoom out here yes we can see we

00:29:59,360 --> 00:30:03,200
can start to make out a lot of the major

00:30:01,039 --> 00:30:07,159
cities in on the East Coast here like

00:30:03,200 --> 00:30:10,960
New York Detroit Chicago let's take a

00:30:07,159 --> 00:30:10,960
look at you know Manhattan for example

00:30:11,770 --> 00:30:17,210
so I mean there's a lot of activity in

00:30:15,500 --> 00:30:18,799
Manhattan and it's pretty hustle bustle

00:30:17,210 --> 00:30:22,730
right the one thing I want to notice

00:30:18,799 --> 00:30:25,899
here there is a pretty high point right

00:30:22,730 --> 00:30:28,850
here you know it's pretty bright and

00:30:25,899 --> 00:30:31,100
believe it or not that's Riker Island so

00:30:28,850 --> 00:30:36,049
I'm not sure if you guys know what that

00:30:31,100 --> 00:30:37,370
is but that is a prison so it's from

00:30:36,049 --> 00:30:39,169
from this we can tell that you know

00:30:37,370 --> 00:30:40,610
there's a lot of activity going on in

00:30:39,169 --> 00:30:42,980
the prison you know a lot of trips

00:30:40,610 --> 00:30:45,289
coming in and out whether it's inmates

00:30:42,980 --> 00:30:48,080
or food or whatever we don't know but

00:30:45,289 --> 00:30:48,679
there are a lot of trips I just a word

00:30:48,080 --> 00:30:50,270
of advice

00:30:48,679 --> 00:30:55,399
stay out of there and don't be part of

00:30:50,270 --> 00:30:59,539
that statistic so let's zoom out a bit

00:30:55,399 --> 00:31:05,419
more we're almost reaching the 3/4 mile

00:30:59,539 --> 00:31:06,770
way there or 3/4 way there you know we

00:31:05,419 --> 00:31:10,340
got Florida lit up quite nicely on the

00:31:06,770 --> 00:31:11,960
East Coast again all the major cities we

00:31:10,340 --> 00:31:15,110
come to the west coast we can we can see

00:31:11,960 --> 00:31:17,409
a lot of the you can actually make out

00:31:15,110 --> 00:31:19,880
some of the major major freeways now

00:31:17,409 --> 00:31:22,730
even some of the roads san francisco's

00:31:19,880 --> 00:31:25,549
is is pretty busy looks better when the

00:31:22,730 --> 00:31:27,919
zoom there and LA of course is just you

00:31:25,549 --> 00:31:30,880
know insane it looks like the traffic

00:31:27,919 --> 00:31:35,570
there the traffic map is just it's crazy

00:31:30,880 --> 00:31:36,679
so I mean I'm not gonna wait for the

00:31:35,570 --> 00:31:38,779
rest of it to load it's taking a bit

00:31:36,679 --> 00:31:41,419
longer than usual but you guys get the

00:31:38,779 --> 00:31:43,610
idea right and it's pretty mean when you

00:31:41,419 --> 00:31:44,120
zoom out or Mexico City is just insane

00:31:43,610 --> 00:31:49,400
too but

00:31:44,120 --> 00:31:52,700
whatever all right so let's take a look

00:31:49,400 --> 00:31:53,510
at some of the the code I'm just going

00:31:52,700 --> 00:31:55,850
to go through this pretty quickly

00:31:53,510 --> 00:31:59,660
because you know it's not nothing -

00:31:55,850 --> 00:32:01,130
nothing too crazy we're loading a table

00:31:59,660 --> 00:32:03,050
I called trip to North America which

00:32:01,130 --> 00:32:05,330
completely makes sense and it comes from

00:32:03,050 --> 00:32:08,420
a some kind of data set we had called or

00:32:05,330 --> 00:32:11,720
for this bill for this conference of J's

00:32:08,420 --> 00:32:16,370
cough demo the rest of is just kind of

00:32:11,720 --> 00:32:17,870
for authentication purposes really so we

00:32:16,370 --> 00:32:19,940
take our table and then we're calling

00:32:17,870 --> 00:32:21,440
get rose and get rose takes in two

00:32:19,940 --> 00:32:24,710
parameters that are the first is options

00:32:21,440 --> 00:32:28,100
and the good thing about options that

00:32:24,710 --> 00:32:30,140
it's if resembles our API pretty clear

00:32:28,100 --> 00:32:33,710
pretty pretty closely in that it takes

00:32:30,140 --> 00:32:35,540
in a match results which is say like 50

00:32:33,710 --> 00:32:37,460
thousand records and then with that 50

00:32:35,540 --> 00:32:39,250
thousand and we also get a kind of got

00:32:37,460 --> 00:32:42,470
pointer to the to the very last record

00:32:39,250 --> 00:32:46,610
which we use in our subsequent calls to

00:32:42,470 --> 00:32:48,320
get the next 50 thousand and so on and

00:32:46,610 --> 00:32:50,060
then finally a callback just sends back

00:32:48,320 --> 00:32:56,000
the data and the the pointer that I

00:32:50,060 --> 00:32:58,460
talked about just now so this is just

00:32:56,000 --> 00:33:00,620
some initialization code for map box

00:32:58,460 --> 00:33:03,460
nothing crazy here I guess the only

00:33:00,620 --> 00:33:06,110
thing I want to point out is that Dec GL

00:33:03,460 --> 00:33:07,810
handles all the interactions instead of

00:33:06,110 --> 00:33:13,610
map box so that's why we have this

00:33:07,810 --> 00:33:17,720
interactive flag set to false so with

00:33:13,610 --> 00:33:19,250
deck GL we start by creating a deck this

00:33:17,720 --> 00:33:22,550
is all pretty pretty simple stuff again

00:33:19,250 --> 00:33:25,250
and as mentioned previously whenever the

00:33:22,550 --> 00:33:28,220
state changes it's handled by this

00:33:25,250 --> 00:33:34,670
function and it keeps both deck GL and

00:33:28,220 --> 00:33:38,000
the map in sync some of our X J's code

00:33:34,670 --> 00:33:42,860
so we get back data from the Google

00:33:38,000 --> 00:33:44,290
bigquery API and it's it's putting it to

00:33:42,860 --> 00:33:46,820
an observer or observable

00:33:44,290 --> 00:33:49,940
our observer here we subscribe to it and

00:33:46,820 --> 00:33:53,510
then we're creating a layer that we put

00:33:49,940 --> 00:33:55,730
on to deck GL for our purposes we're

00:33:53,510 --> 00:33:56,980
using a scatter plot layer and we're

00:33:55,730 --> 00:34:00,340
just using the

00:33:56,980 --> 00:34:03,400
we got from bigquery now the data looks

00:34:00,340 --> 00:34:05,320
like this that's pretty simple again

00:34:03,400 --> 00:34:09,460
there's a position which is an array of

00:34:05,320 --> 00:34:11,740
long and lats there's a radius I think

00:34:09,460 --> 00:34:13,720
it's I think it's in pixel but I'm not

00:34:11,740 --> 00:34:16,570
really sure you can also use it you can

00:34:13,720 --> 00:34:18,940
also use a function instead of a number

00:34:16,570 --> 00:34:24,550
and of course we have a color some RGB

00:34:18,940 --> 00:34:29,200
value so that's that's the end of our

00:34:24,550 --> 00:34:30,970
demos and in summary so by no means are

00:34:29,200 --> 00:34:33,639
these what we talked about

00:34:30,970 --> 00:34:36,909
hardened rules for using loading

00:34:33,639 --> 00:34:41,500
spinners or progress spinners but it's

00:34:36,909 --> 00:34:42,700
more it's more for you to consider you

00:34:41,500 --> 00:34:46,240
know that's something to think about the

00:34:42,700 --> 00:34:47,280
next time you're making an async all if

00:34:46,240 --> 00:34:51,340
you're using a loading spinner

00:34:47,280 --> 00:34:54,429
you know just use some good judgment

00:34:51,340 --> 00:34:57,340
for anything else that takes longer if

00:34:54,429 --> 00:34:58,570
you can use a progress spinner or or

00:34:57,340 --> 00:35:02,050
something that at least gives the user

00:34:58,570 --> 00:35:04,150
some kind of feedback right you know if

00:35:02,050 --> 00:35:07,420
you do so your users will probably

00:35:04,150 --> 00:35:09,460
appreciate the the improved loading user

00:35:07,420 --> 00:35:10,900
experience but I think more importantly

00:35:09,460 --> 00:35:14,619
they're going to thank you for not lying

00:35:10,900 --> 00:35:19,770
boldly to your face so that concludes

00:35:14,619 --> 00:35:19,770
our talk thank you guys for listening

00:35:27,860 --> 00:35:32,580
thank you both for that wonderful

00:35:30,210 --> 00:35:39,420
wonderful talk can we get another round

00:35:32,580 --> 00:35:41,610
of applause for both so the next talk is

00:35:39,420 --> 00:35:43,290
going to start at 10:15 unfortunately we

00:35:41,610 --> 00:35:44,910
don't have a spinning loader for the

00:35:43,290 --> 00:35:46,590
next couple minutes so you're just gonna

00:35:44,910 --> 00:35:50,070
have to use the forward progress of time

00:35:46,590 --> 00:35:51,540
as your loader but yeah 10:15 is going

00:35:50,070 --> 00:35:55,070
to be the next talk so have a good

00:35:51,540 --> 00:35:55,070
conversation while you're waiting

00:36:01,600 --> 00:36:03,660

YouTube URL: https://www.youtube.com/watch?v=qZ04VKj9o7s


