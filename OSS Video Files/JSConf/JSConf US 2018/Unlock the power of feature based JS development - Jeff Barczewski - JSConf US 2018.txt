Title: Unlock the power of feature based JS development - Jeff Barczewski - JSConf US 2018
Publication date: 2018-11-06
Playlist: JSConf US 2018
Description: 
	
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:26,289
[Music]

00:00:23,849 --> 00:00:28,210
thank you

00:00:26,289 --> 00:00:30,219
so it's today I wanted to share with you

00:00:28,210 --> 00:00:34,329
the unlock the power a feature based

00:00:30,219 --> 00:00:36,969
JavaScript development my email is Jeff

00:00:34,329 --> 00:00:40,030
at code winds my handle there is Jeff be

00:00:36,969 --> 00:00:41,829
ski on Twitter and github and then the

00:00:40,030 --> 00:00:44,970
slides will be available or they are

00:00:41,829 --> 00:00:47,710
available at code winds calm /j s kampf

00:00:44,970 --> 00:00:53,620
2018 so you can get all the slides and

00:00:47,710 --> 00:00:56,380
notes so have you ever entered into some

00:00:53,620 --> 00:00:58,720
code base and then looking around in it

00:00:56,380 --> 00:01:01,930
and you're like what is all this doing

00:00:58,720 --> 00:01:04,890
and why is it here and you look at some

00:01:01,930 --> 00:01:07,180
of the comments and it doesn't help and

00:01:04,890 --> 00:01:08,229
you know eventually you get you get

00:01:07,180 --> 00:01:10,299
looking through and you just like this

00:01:08,229 --> 00:01:11,469
is just like you know some complicated

00:01:10,299 --> 00:01:12,610
mousetrap or something you know it

00:01:11,469 --> 00:01:15,430
doesn't make any sense why all this

00:01:12,610 --> 00:01:17,530
stuff's here and then you do a get blame

00:01:15,430 --> 00:01:20,940
on it to find out who did it and you

00:01:17,530 --> 00:01:22,870
realize you know it was you you know

00:01:20,940 --> 00:01:25,150
anybody anything happen to anybody

00:01:22,870 --> 00:01:27,790
before I think Michael Chan said that

00:01:25,150 --> 00:01:31,150
you know code that you've written six

00:01:27,790 --> 00:01:33,010
months ago is uh is often code you don't

00:01:31,150 --> 00:01:34,690
like anymore so you know it's it doesn't

00:01:33,010 --> 00:01:37,690
have a you know you always learn more

00:01:34,690 --> 00:01:38,640
things and new things and well that's

00:01:37,690 --> 00:01:42,909
happened to me before

00:01:38,640 --> 00:01:45,640
Who am I married I've got a one grown

00:01:42,909 --> 00:01:49,780
daughter active in our Catholic parish

00:01:45,640 --> 00:01:51,970
and been active in JavaScript wrote of

00:01:49,780 --> 00:01:57,009
past seven years I got some open source

00:01:51,970 --> 00:02:01,030
projects oh it's cutting off on me into

00:01:57,009 --> 00:02:02,290
Dario see there you go so I started a

00:02:01,030 --> 00:02:04,150
small company code winds so I do

00:02:02,290 --> 00:02:06,580
training and consulting so if you need

00:02:04,150 --> 00:02:08,640
any help on any of these things I'd love

00:02:06,580 --> 00:02:12,370
to help you with your project

00:02:08,640 --> 00:02:14,349
so why feature-based development what

00:02:12,370 --> 00:02:16,840
what are we talking about well software

00:02:14,349 --> 00:02:18,939
is is is complex and you know there's

00:02:16,840 --> 00:02:21,819
always more things to keep getting added

00:02:18,939 --> 00:02:23,290
to it and so it's you know it's

00:02:21,819 --> 00:02:24,460
something that's always getting more

00:02:23,290 --> 00:02:27,550
complicated

00:02:24,460 --> 00:02:29,830
you know we've learned to start out and

00:02:27,550 --> 00:02:31,210
do like MVPs you know so we can try to

00:02:29,830 --> 00:02:33,910
get something out to the customer so

00:02:31,210 --> 00:02:36,130
they can see it quicker and those things

00:02:33,910 --> 00:02:37,990
have kind of you know evolve how we do

00:02:36,130 --> 00:02:40,240
software you used to try to plan out

00:02:37,990 --> 00:02:41,620
every possible thing up front and you

00:02:40,240 --> 00:02:43,360
know you never even get started you know

00:02:41,620 --> 00:02:45,580
the project takes years to be for you

00:02:43,360 --> 00:02:49,120
all the planning so now we're at least

00:02:45,580 --> 00:02:50,980
delivering you know value sooner and so

00:02:49,120 --> 00:02:53,920
with Sprint's and trying to evolve the

00:02:50,980 --> 00:02:56,770
code so we've tried to do this feature

00:02:53,920 --> 00:02:58,600
base stuff before you a lot of times we

00:02:56,770 --> 00:03:01,270
use git commits you know and branches to

00:02:58,600 --> 00:03:04,960
try and put whole features together and

00:03:01,270 --> 00:03:06,010
move them in a merge at a time and we

00:03:04,960 --> 00:03:07,720
and the other thing we try to do is

00:03:06,010 --> 00:03:09,130
organize by feature so a lot of times

00:03:07,720 --> 00:03:11,560
you'll see people trying to organize

00:03:09,130 --> 00:03:14,470
their code base so that all the things

00:03:11,560 --> 00:03:17,950
around a particular domain or portion of

00:03:14,470 --> 00:03:19,840
the screen are all handled in one area a

00:03:17,950 --> 00:03:21,670
lot of times you've with feet you know

00:03:19,840 --> 00:03:23,290
features you want to do a/b testing so

00:03:21,670 --> 00:03:25,090
you'll want to turn on a new feature or

00:03:23,290 --> 00:03:27,700
you want to change a feature to a new

00:03:25,090 --> 00:03:29,200
new version so sometimes you might have

00:03:27,700 --> 00:03:31,390
feature switches where you want people

00:03:29,200 --> 00:03:33,280
to be able to do that early adopters

00:03:31,390 --> 00:03:37,240
might you know be able to try some of

00:03:33,280 --> 00:03:38,830
your new code app so what are the

00:03:37,240 --> 00:03:41,500
challenges with with feature base 2

00:03:38,830 --> 00:03:43,930
element well sometimes maintaining

00:03:41,500 --> 00:03:46,480
flexibility so we start to get too rigid

00:03:43,930 --> 00:03:47,470
and we can't use new technology we can't

00:03:46,480 --> 00:03:50,460
it would get locked into certain

00:03:47,470 --> 00:03:52,990
frameworks so that can be a problem

00:03:50,460 --> 00:03:55,660
wiring and boilerplate sometimes it's

00:03:52,990 --> 00:03:57,340
just a mess to try and code this stuff

00:03:55,660 --> 00:04:00,970
up so it even you know hooks together so

00:03:57,340 --> 00:04:03,220
it's a lot of work sharing across

00:04:00,970 --> 00:04:05,440
features can be challenging as far as

00:04:03,220 --> 00:04:08,590
trying to keep things isolated but yet

00:04:05,440 --> 00:04:10,120
still be able to share things and then

00:04:08,590 --> 00:04:11,530
also to be able to fire things off at

00:04:10,120 --> 00:04:13,330
the right time so sometimes things need

00:04:11,530 --> 00:04:15,550
to happen in order and different things

00:04:13,330 --> 00:04:20,890
like that so hooks and dependencies are

00:04:15,550 --> 00:04:22,090
challenges so some previous things that

00:04:20,890 --> 00:04:23,980
you could have done to try and do

00:04:22,090 --> 00:04:26,200
feature based development or you could

00:04:23,980 --> 00:04:28,150
have like I said mention are used pull

00:04:26,200 --> 00:04:30,160
requests and do emerge things together

00:04:28,150 --> 00:04:32,290
but you know sometimes you you get

00:04:30,160 --> 00:04:35,440
through the development of the branch in

00:04:32,290 --> 00:04:37,180
the feature and then it gets held up you

00:04:35,440 --> 00:04:38,300
know maybe it's waiting for something

00:04:37,180 --> 00:04:41,210
else to be done

00:04:38,300 --> 00:04:42,409
or people want to review it again or you

00:04:41,210 --> 00:04:44,690
know those guys are busy on something

00:04:42,409 --> 00:04:46,940
else and so sometimes things don't line

00:04:44,690 --> 00:04:48,440
up and then you know things get merged

00:04:46,940 --> 00:04:49,909
out of order and it's just it's a mess

00:04:48,440 --> 00:04:53,180
you know it can be really challenging to

00:04:49,909 --> 00:04:54,979
try and move the code together it's hard

00:04:53,180 --> 00:04:56,360
to it's hard to a/b test to if you if

00:04:54,979 --> 00:04:58,190
these features are developed you know

00:04:56,360 --> 00:04:59,569
where they be replace each other you

00:04:58,190 --> 00:05:01,220
know with the commits then there's no

00:04:59,569 --> 00:05:02,889
way to go back or you know in all that

00:05:01,220 --> 00:05:05,360
so it's it could be tricky

00:05:02,889 --> 00:05:07,220
so there's some boilerplate projects

00:05:05,360 --> 00:05:10,190
that try to you know kind of take this

00:05:07,220 --> 00:05:11,930
idea of adding features at a time until

00:05:10,190 --> 00:05:14,150
they leave include like a CLI where you

00:05:11,930 --> 00:05:17,389
can you know generate some code that's

00:05:14,150 --> 00:05:20,030
already hooked up you know so that helps

00:05:17,389 --> 00:05:22,069
it can work but you know you're kind of

00:05:20,030 --> 00:05:23,270
locked into whatever they have you know

00:05:22,069 --> 00:05:24,500
what if you know hopefully it's an

00:05:23,270 --> 00:05:26,270
active community and they're still

00:05:24,500 --> 00:05:28,340
developing it and you know upgrading it

00:05:26,270 --> 00:05:30,440
but you kind of are stuck you know if

00:05:28,340 --> 00:05:32,449
they're using the specific technology or

00:05:30,440 --> 00:05:34,099
you're kind of locked into that so it

00:05:32,449 --> 00:05:35,690
can be pretty you know and so it can

00:05:34,099 --> 00:05:38,780
over time it can get stale especially if

00:05:35,690 --> 00:05:40,430
they move on to other things so the

00:05:38,780 --> 00:05:41,900
dependency injection frameworks you know

00:05:40,430 --> 00:05:45,590
there's probably a thousand different

00:05:41,900 --> 00:05:47,150
ones out in MPM a lot of them are kind

00:05:45,590 --> 00:05:49,250
of complicated and they do all kinds of

00:05:47,150 --> 00:05:50,960
different things but from what I've seen

00:05:49,250 --> 00:05:53,110
I haven't really seen any that really

00:05:50,960 --> 00:05:57,139
fit this feature-based development

00:05:53,110 --> 00:05:58,819
process very well you could just take a

00:05:57,139 --> 00:06:01,580
global object and start throwing stuff

00:05:58,819 --> 00:06:03,080
on that but you know there's you can

00:06:01,580 --> 00:06:05,690
obviously have collisions name

00:06:03,080 --> 00:06:07,370
collisions and things so that you don't

00:06:05,690 --> 00:06:09,409
know you know there's no protection

00:06:07,370 --> 00:06:11,990
against overwriting something else and

00:06:09,409 --> 00:06:13,340
no use it's contracts and stuff like

00:06:11,990 --> 00:06:16,430
that so there's there challenges with

00:06:13,340 --> 00:06:18,710
doing that kind of a template so that

00:06:16,430 --> 00:06:21,379
leads me to feature you so this is a

00:06:18,710 --> 00:06:23,539
library that Kevin Bridges wrote one of

00:06:21,379 --> 00:06:25,430
my good friends I worked with Kevin for

00:06:23,539 --> 00:06:29,539
about eight years of our GA in st. Louis

00:06:25,430 --> 00:06:33,139
and Kevin's just he's an inspiring guy

00:06:29,539 --> 00:06:35,539
to me he's he's had the long career you

00:06:33,139 --> 00:06:37,129
know and and I know I've went through my

00:06:35,539 --> 00:06:39,710
career ups and downs and got burned out

00:06:37,129 --> 00:06:40,879
a few times and fired back up and Kevin

00:06:39,710 --> 00:06:42,469
just seems like he's just one little

00:06:40,879 --> 00:06:46,009
solid guys that just you know plows on

00:06:42,469 --> 00:06:49,940
through creates beautiful software great

00:06:46,009 --> 00:06:51,900
documentation and so he was working on a

00:06:49,940 --> 00:06:54,990
react native an expo project

00:06:51,900 --> 00:06:58,320
and he got the idea well if he could try

00:06:54,990 --> 00:07:01,890
and extract this feature you based

00:06:58,320 --> 00:07:03,480
approach from his existing project he

00:07:01,890 --> 00:07:06,180
started to see some similarities and how

00:07:03,480 --> 00:07:08,850
things might be able to pull doubt be

00:07:06,180 --> 00:07:10,140
pulled out from his app and so that's

00:07:08,850 --> 00:07:12,660
how future you kind of came about he

00:07:10,140 --> 00:07:14,550
started from that idea so this is you

00:07:12,660 --> 00:07:16,860
know primarily for a reactor a react

00:07:14,550 --> 00:07:18,780
native or Expo type app but I think the

00:07:16,860 --> 00:07:20,310
ideas are good and I think you know it

00:07:18,780 --> 00:07:22,020
could easily be applied to a lot of

00:07:20,310 --> 00:07:24,780
different frameworks and that so it's

00:07:22,020 --> 00:07:28,350
really more Universal Nass so the

00:07:24,780 --> 00:07:33,570
project is at feature UJS org and his

00:07:28,350 --> 00:07:36,390
github is there with Kevin ast so what

00:07:33,570 --> 00:07:37,620
are the benefits of feature you

00:07:36,390 --> 00:07:39,510
well it's designed for feature

00:07:37,620 --> 00:07:41,820
development I mean he it's that's what

00:07:39,510 --> 00:07:43,170
he built it for it's simple and flexible

00:07:41,820 --> 00:07:44,250
it doesn't have a lot of those

00:07:43,170 --> 00:07:47,280
complicated things that the DI

00:07:44,250 --> 00:07:49,800
frameworks have it makes it easy for

00:07:47,280 --> 00:07:51,750
cross feature sharing it makes it easy

00:07:49,800 --> 00:07:55,170
to capsulate things into into specific

00:07:51,750 --> 00:07:58,470
features organizing by feature testing a

00:07:55,170 --> 00:08:00,270
and B test a and B testing and it's

00:07:58,470 --> 00:08:01,680
dramatically it reduces your boilerplate

00:08:00,270 --> 00:08:03,720
and wiring out when I saw how little

00:08:01,680 --> 00:08:05,550
wiring you have to do once you start

00:08:03,720 --> 00:08:06,930
using this I was like wow this is this

00:08:05,550 --> 00:08:08,940
is good I mean this is good just even

00:08:06,930 --> 00:08:11,790
from you know non-feature development if

00:08:08,940 --> 00:08:13,410
you wanted to get get up and going you

00:08:11,790 --> 00:08:14,240
know it just really dramatically reduces

00:08:13,410 --> 00:08:16,620
that wiring

00:08:14,240 --> 00:08:18,600
he's also got lifecycle hooks where

00:08:16,620 --> 00:08:20,630
things will fire off at the right time

00:08:18,600 --> 00:08:23,490
so you can build that into your features

00:08:20,630 --> 00:08:26,040
he has this the concept of aspects where

00:08:23,490 --> 00:08:28,260
you can extend with new technology so

00:08:26,040 --> 00:08:29,580
this can just be added in and all of a

00:08:28,260 --> 00:08:32,070
sudden now you have a new technology

00:08:29,580 --> 00:08:33,810
that's that's being used and he's got

00:08:32,070 --> 00:08:36,690
really good validation across all this

00:08:33,810 --> 00:08:37,920
and usage contracts so one of these

00:08:36,690 --> 00:08:40,890
things that's kind of difficult with

00:08:37,920 --> 00:08:42,480
with defining stuff across dependencies

00:08:40,890 --> 00:08:44,130
an app is to make sure you've got all

00:08:42,480 --> 00:08:46,410
the things accounted for so if you're

00:08:44,130 --> 00:08:48,450
expecting a widget over here to come

00:08:46,410 --> 00:08:49,710
through you got your you want a widget

00:08:48,450 --> 00:08:51,210
come to come through over here you want

00:08:49,710 --> 00:08:52,680
to make sure it's it's matching up you

00:08:51,210 --> 00:08:54,900
spell everything right you know it's all

00:08:52,680 --> 00:09:00,990
hooked up and you want to know quickly

00:08:54,900 --> 00:09:04,080
if it's if it hasn't so a high-level

00:09:00,990 --> 00:09:05,550
overview how this works we create and

00:09:04,080 --> 00:09:07,019
register features so

00:09:05,550 --> 00:09:09,450
that's the kind of the main main part of

00:09:07,019 --> 00:09:11,250
it you can instantiate and register

00:09:09,450 --> 00:09:15,000
certain aspects if you need them so

00:09:11,250 --> 00:09:16,920
things like Redux or Redux logic or he's

00:09:15,000 --> 00:09:21,029
got a built-in feature router that works

00:09:16,920 --> 00:09:22,350
well with with react native then you

00:09:21,029 --> 00:09:24,600
launch the app with the features and

00:09:22,350 --> 00:09:26,370
assets it actually has a hook where you

00:09:24,600 --> 00:09:29,190
just define what it's going to do when

00:09:26,370 --> 00:09:31,769
it launches and it takes care of it it

00:09:29,190 --> 00:09:34,470
does all the heavy work of wiring things

00:09:31,769 --> 00:09:36,630
up and Verret validating and then

00:09:34,470 --> 00:09:39,870
features themselves can define what he

00:09:36,630 --> 00:09:42,000
calls facets or feature asset and that's

00:09:39,870 --> 00:09:43,079
there for cross cross feature sharing so

00:09:42,000 --> 00:09:44,910
that's I'll show you a little bit more

00:09:43,079 --> 00:09:46,500
about that and features will basically

00:09:44,910 --> 00:09:47,970
define them and other features will use

00:09:46,500 --> 00:09:51,870
them so then that way that's how you get

00:09:47,970 --> 00:09:53,310
the cross sharing and feature you can it

00:09:51,870 --> 00:09:54,839
can help manage and validate those paths

00:09:53,310 --> 00:09:56,640
so like I said it if you define the

00:09:54,839 --> 00:09:58,290
contracts it'll actually make sure that

00:09:56,640 --> 00:10:01,380
they exist and are spelled right and all

00:09:58,290 --> 00:10:03,269
that so I don't don't know if you can

00:10:01,380 --> 00:10:05,310
read this chart very well but you can

00:10:03,269 --> 00:10:06,510
look at the slides later and it kind of

00:10:05,310 --> 00:10:07,709
just summarizes what I was talking about

00:10:06,510 --> 00:10:10,200
we got a bunch of different features

00:10:07,709 --> 00:10:12,930
that make up your app launch app brings

00:10:10,200 --> 00:10:15,089
it all together it exposes it pulls all

00:10:12,930 --> 00:10:16,709
the facets that are defined across all

00:10:15,089 --> 00:10:21,020
the features pulls it together into an

00:10:16,709 --> 00:10:21,020
object and gives it to your to your app

00:10:21,950 --> 00:10:26,070
so here's a just example of kind of the

00:10:24,779 --> 00:10:27,510
structure you might use and you could

00:10:26,070 --> 00:10:29,490
really use whatever structure you want

00:10:27,510 --> 00:10:34,140
but this seemed to work pretty well with

00:10:29,490 --> 00:10:36,180
feature based development and so you

00:10:34,140 --> 00:10:38,220
basically would have you know an index

00:10:36,180 --> 00:10:39,720
file that kicks everything off calls the

00:10:38,220 --> 00:10:41,730
launch app pulls together the features

00:10:39,720 --> 00:10:43,649
and all that and then I like to have

00:10:41,730 --> 00:10:46,290
like a features directory and in each

00:10:43,649 --> 00:10:48,270
directory in the index that accumulates

00:10:46,290 --> 00:10:49,860
all of them and then in different

00:10:48,270 --> 00:10:51,839
directories for each feature so then and

00:10:49,860 --> 00:10:53,970
that might just be an index file or it

00:10:51,839 --> 00:10:55,230
could be an index and actions file and a

00:10:53,970 --> 00:10:56,970
producer file and you know you could

00:10:55,230 --> 00:10:58,560
split it up however you want components

00:10:56,970 --> 00:10:59,880
you know everything everything that's

00:10:58,560 --> 00:11:04,070
related to that feature can all live

00:10:59,880 --> 00:11:04,070
together right there and at one one spot

00:11:04,640 --> 00:11:10,440
so this feature object is a kind of a

00:11:07,649 --> 00:11:12,600
key concept so you basically call create

00:11:10,440 --> 00:11:14,970
feature you give it a unique name and

00:11:12,600 --> 00:11:17,040
this will and if you name it the same

00:11:14,970 --> 00:11:18,329
thing it'll complain got validation and

00:11:17,040 --> 00:11:19,459
make sure you know each features got a

00:11:18,329 --> 00:11:22,050
unique name

00:11:19,459 --> 00:11:23,010
he's got an optional flag for if it's

00:11:22,050 --> 00:11:25,079
enabled or not so you can actually

00:11:23,010 --> 00:11:28,680
toggle this on and off with logic you

00:11:25,079 --> 00:11:30,029
know if you wanted and then the facets

00:11:28,680 --> 00:11:33,389
part that's where you actually would

00:11:30,029 --> 00:11:35,130
define and use facets so you can

00:11:33,389 --> 00:11:37,110
actually define what you assets that you

00:11:35,130 --> 00:11:39,449
provide from your feature and ask that

00:11:37,110 --> 00:11:41,550
you want to use in this case then it

00:11:39,449 --> 00:11:43,949
would validate that those those assets

00:11:41,550 --> 00:11:48,089
those facets live or exist somewhere

00:11:43,949 --> 00:11:51,690
that they're created and then in this

00:11:48,089 --> 00:11:53,310
case if we're using redux then there

00:11:51,690 --> 00:11:55,440
might be a reducer that's associated

00:11:53,310 --> 00:11:57,959
with it and if using Redux logic then

00:11:55,440 --> 00:12:01,980
you might have a logic array if it comes

00:11:57,959 --> 00:12:04,290
with it and then some optional callbacks

00:12:01,980 --> 00:12:06,690
app will start and an app did start and

00:12:04,290 --> 00:12:09,810
it provides you hook then where you can

00:12:06,690 --> 00:12:11,100
provide what what the you know the app

00:12:09,810 --> 00:12:13,350
was gonna start up with with the

00:12:11,100 --> 00:12:15,300
component and also you know fire off

00:12:13,350 --> 00:12:19,260
other things later so it gives you those

00:12:15,300 --> 00:12:21,630
nice hooks and I mentioned in the

00:12:19,260 --> 00:12:23,760
feature directory I had like an index

00:12:21,630 --> 00:12:25,350
file and in there I basically import all

00:12:23,760 --> 00:12:28,709
the features that I'm that I have and

00:12:25,350 --> 00:12:30,329
then export them as a array and so this

00:12:28,709 --> 00:12:32,640
will be the actually the arrays the

00:12:30,329 --> 00:12:36,480
array of features that gets used by our

00:12:32,640 --> 00:12:39,180
launch app and so here's launch app and

00:12:36,480 --> 00:12:40,949
this was in the source index file so we

00:12:39,180 --> 00:12:42,630
might have a couple aspects that I've

00:12:40,949 --> 00:12:44,790
created here I've used in Redux Redux

00:12:42,630 --> 00:12:46,310
logic if you don't have any then those

00:12:44,790 --> 00:12:48,839
will be you know just the empty array I

00:12:46,310 --> 00:12:50,910
got my features coming in from source in

00:12:48,839 --> 00:12:52,940
our source feature index and then

00:12:50,910 --> 00:12:55,320
basically called register root app and

00:12:52,940 --> 00:12:57,600
kind of whatever code I need to do so

00:12:55,320 --> 00:13:00,540
for web app react app then you would

00:12:57,600 --> 00:13:03,480
call react Dom render for an expo app

00:13:00,540 --> 00:13:06,269
you call expo dot register root element

00:13:03,480 --> 00:13:08,339
and you know whatever whatever at you

00:13:06,269 --> 00:13:09,329
need to do for your startup so this

00:13:08,339 --> 00:13:13,440
would work with many you know many

00:13:09,329 --> 00:13:17,180
different types of systems so features

00:13:13,440 --> 00:13:20,819
aspects register facets kind of context

00:13:17,180 --> 00:13:22,980
so this cross feature sharing usage

00:13:20,819 --> 00:13:24,420
contracts so this is a kind of this kind

00:13:22,980 --> 00:13:26,550
of evolved from the first version that

00:13:24,420 --> 00:13:29,819
Kevin created he created the first

00:13:26,550 --> 00:13:31,560
version back in March and like I said he

00:13:29,819 --> 00:13:33,279
specifically was using an expo at the

00:13:31,560 --> 00:13:35,199
time and then when I

00:13:33,279 --> 00:13:37,600
I started to look at it to help him I

00:13:35,199 --> 00:13:39,910
was gonna put a web app with it through

00:13:37,600 --> 00:13:41,410
it through it then we realized there

00:13:39,910 --> 00:13:43,449
needed to be some some changes to make

00:13:41,410 --> 00:13:46,329
it a little simpler and live different

00:13:43,449 --> 00:13:47,949
interfaces for UI sharing and cross

00:13:46,329 --> 00:13:50,829
cross future sharing so basically we

00:13:47,949 --> 00:13:52,389
kind of evolved it and then went through

00:13:50,829 --> 00:13:54,279
you some design sessions and then Kevin

00:13:52,389 --> 00:13:57,970
went back and and implemented version

00:13:54,279 --> 00:13:59,949
one so this is what this usage contracts

00:13:57,970 --> 00:14:02,230
look like for for cross feature sharing

00:13:59,949 --> 00:14:04,480
so basically in this case and the facets

00:14:02,230 --> 00:14:06,970
I've got a I'm saying that I'm going to

00:14:04,480 --> 00:14:08,740
use these types of assets and I'm

00:14:06,970 --> 00:14:11,050
basically I'm looking for a bar link

00:14:08,740 --> 00:14:15,399
component and a cat route component and

00:14:11,050 --> 00:14:17,170
a dog action dot D and I can actually

00:14:15,399 --> 00:14:19,240
you know say whether it's by default

00:14:17,170 --> 00:14:21,579
it'll be required I can say it's not

00:14:19,240 --> 00:14:23,649
required so it won't fail if it's

00:14:21,579 --> 00:14:25,509
missing so maybe it's something that

00:14:23,649 --> 00:14:27,370
you're checking for and you know later

00:14:25,509 --> 00:14:29,920
on that might feature might become

00:14:27,370 --> 00:14:31,420
available and then you know you can have

00:14:29,920 --> 00:14:33,519
a validation function he's got some

00:14:31,420 --> 00:14:35,559
existing ones you can use and then you

00:14:33,519 --> 00:14:37,509
can also supports wild cards so this is

00:14:35,559 --> 00:14:41,500
kind of a neat concept because you could

00:14:37,509 --> 00:14:43,139
say I'm gonna I'm gonna say throw out my

00:14:41,500 --> 00:14:45,009
different features I'm going to specify

00:14:43,139 --> 00:14:48,459
components that are going to show up on

00:14:45,009 --> 00:14:50,250
the main menu of the app you know and so

00:14:48,459 --> 00:14:52,420
so you can different features can all

00:14:50,250 --> 00:14:54,370
you know or a different part that's

00:14:52,420 --> 00:14:56,649
gonna show up on the on the different

00:14:54,370 --> 00:14:58,300
route or whatever so for your app so

00:14:56,649 --> 00:15:00,069
that way you can you can have loud cards

00:14:58,300 --> 00:15:03,430
so then things can be added on the fly

00:15:00,069 --> 00:15:04,990
and you know they'll show up the defined

00:15:03,430 --> 00:15:09,100
part is where your feature is actually

00:15:04,990 --> 00:15:10,509
providing the the facet and so you're

00:15:09,100 --> 00:15:12,100
basically just saying here's a facet

00:15:10,509 --> 00:15:13,509
here's the name and here's what you know

00:15:12,100 --> 00:15:15,339
and I'm defining what it what it is so

00:15:13,509 --> 00:15:18,189
I'm passing like here I'm actions food

00:15:15,339 --> 00:15:20,170
actions and then if you use the the

00:15:18,189 --> 00:15:22,750
third one that define use it basically

00:15:20,170 --> 00:15:25,449
is saying I'm defining it but I also

00:15:22,750 --> 00:15:27,490
expect it to be used somewhere so if

00:15:25,449 --> 00:15:29,350
it's not then then go ahead and throw an

00:15:27,490 --> 00:15:31,089
error because I know this should match

00:15:29,350 --> 00:15:32,499
something that's already out there and

00:15:31,089 --> 00:15:34,179
so I'm gonna use that so it's kind of a

00:15:32,499 --> 00:15:36,459
third third thing is saying its defined

00:15:34,179 --> 00:15:38,019
and used and so this is kind of nice if

00:15:36,459 --> 00:15:39,490
you like I said if you know it should

00:15:38,019 --> 00:15:40,959
match that'll just help catch you know

00:15:39,490 --> 00:15:43,509
spelling spelling errors and stuff like

00:15:40,959 --> 00:15:45,689
that so that'll make sure that it gets

00:15:43,509 --> 00:15:45,689
used

00:15:46,129 --> 00:15:50,119
cross features so this is a diagram that

00:15:47,660 --> 00:15:52,249
shows kind of that in basically says he

00:15:50,119 --> 00:15:55,550
features or defining at facets they're

00:15:52,249 --> 00:15:57,170
using facets and then launch app is

00:15:55,550 --> 00:16:00,170
basically making sure all these things

00:15:57,170 --> 00:16:02,179
exist validating things putting all to

00:16:00,170 --> 00:16:04,249
bring them all together and he does all

00:16:02,179 --> 00:16:05,829
the work for you know for doing that and

00:16:04,249 --> 00:16:08,929
there's different ways to get at it

00:16:05,829 --> 00:16:10,850
so getting at these facets there's a

00:16:08,929 --> 00:16:12,949
there's a higher-order component called

00:16:10,850 --> 00:16:14,269
with facets that you can use to to

00:16:12,949 --> 00:16:17,300
actually get it you know get different

00:16:14,269 --> 00:16:18,709
facets there is also facets that's

00:16:17,300 --> 00:16:20,600
provided and some of those lifecycle

00:16:18,709 --> 00:16:24,589
hooks so in the app did start app will

00:16:20,600 --> 00:16:26,179
start there's also an expand with facets

00:16:24,589 --> 00:16:28,819
feature so sometimes you need this stuff

00:16:26,179 --> 00:16:30,829
at like load time and it's not available

00:16:28,819 --> 00:16:32,679
yet it because it's it's a dependency at

00:16:30,829 --> 00:16:35,569
you'll be of a circular and dependency

00:16:32,679 --> 00:16:38,959
so he actually allows you to provide to

00:16:35,569 --> 00:16:41,389
wrap it your your function with a expand

00:16:38,959 --> 00:16:43,639
with facets and then it'll pass you in

00:16:41,389 --> 00:16:45,019
the facets at the right time then you

00:16:43,639 --> 00:16:46,610
can do whatever you want with that and

00:16:45,019 --> 00:16:48,230
then pass back the result and so that

00:16:46,610 --> 00:16:51,290
that allows you to get around the you

00:16:48,230 --> 00:16:52,819
know dependency dependency problems and

00:16:51,290 --> 00:16:54,499
then finally launch app will also return

00:16:52,819 --> 00:16:56,800
a facets object and so you can use that

00:16:54,499 --> 00:16:59,269
in certain circumstances as well just to

00:16:56,800 --> 00:17:01,160
you know to get at the facets so lots of

00:16:59,269 --> 00:17:03,679
different ways to get get that he's got

00:17:01,160 --> 00:17:06,230
great documentation for this alright so

00:17:03,679 --> 00:17:08,380
the code walkthrough so I got a couple

00:17:06,230 --> 00:17:12,470
different things some samples and stuff

00:17:08,380 --> 00:17:19,490
kind of show you how this works all

00:17:12,470 --> 00:17:21,530
right so let me go over to the where's

00:17:19,490 --> 00:17:29,000
my mouse

00:17:21,530 --> 00:17:31,070
I see it over there okay there we go I

00:17:29,000 --> 00:17:34,040
can see it over there everybody all

00:17:31,070 --> 00:17:36,290
right so here's an example of the the

00:17:34,040 --> 00:17:38,750
source index so it basically just called

00:17:36,290 --> 00:17:40,430
launch app you provided the an array of

00:17:38,750 --> 00:17:43,520
aspects you provide an array of features

00:17:40,430 --> 00:17:44,960
and then you call register root app so

00:17:43,520 --> 00:17:47,180
kind of what we talked about in this

00:17:44,960 --> 00:17:50,330
case it's for a web app so we'll call

00:17:47,180 --> 00:17:51,680
I'll call react Dom render it's actually

00:17:50,330 --> 00:17:53,690
going to give me the root element and I

00:17:51,680 --> 00:17:55,850
just use that and put it where I want on

00:17:53,690 --> 00:17:57,170
the Dom I can also call register

00:17:55,850 --> 00:17:58,400
serviceworker and whatever else you want

00:17:57,170 --> 00:18:01,610
so that's kind of the same stuff that

00:17:58,400 --> 00:18:02,780
comes right out of create react app so

00:18:01,610 --> 00:18:04,490
that's you know that's that get you up

00:18:02,780 --> 00:18:11,150
and going right there no you know not a

00:18:04,490 --> 00:18:12,680
lot of work there okay don't want to be

00:18:11,150 --> 00:18:14,510
modifying stuff I'm just trying to show

00:18:12,680 --> 00:18:16,790
it all right all right so then the next

00:18:14,510 --> 00:18:19,250
thing the features I've got a bunch of

00:18:16,790 --> 00:18:20,540
different features here so I basically

00:18:19,250 --> 00:18:21,800
built this thing up one feature at a

00:18:20,540 --> 00:18:24,290
time just to kind of see how that would

00:18:21,800 --> 00:18:26,360
work and you know and Kevin just got

00:18:24,290 --> 00:18:28,010
this version one done just a few weeks

00:18:26,360 --> 00:18:29,480
ago I've been working he's been working

00:18:28,010 --> 00:18:31,220
really hard on on getting it out so we

00:18:29,480 --> 00:18:33,140
could show it to you guys so I you know

00:18:31,220 --> 00:18:34,550
I really wanted to bring it here to J's

00:18:33,140 --> 00:18:37,010
comp because this is a place where new

00:18:34,550 --> 00:18:38,750
things are shown and new ideas so I

00:18:37,010 --> 00:18:42,590
think it's just really exciting I you

00:18:38,750 --> 00:18:43,790
know library in concept so this is so

00:18:42,590 --> 00:18:46,730
he's different different features I've

00:18:43,790 --> 00:18:49,010
got here and so right now they're all

00:18:46,730 --> 00:18:50,720
commented out like you could also have

00:18:49,010 --> 00:18:54,440
enabled you know turn them on and off

00:18:50,720 --> 00:18:58,670
with an able all right so let me let me

00:18:54,440 --> 00:19:03,530
just go here and turn an app feature on

00:18:58,670 --> 00:19:04,190
and let me jump down and do then do the

00:19:03,530 --> 00:19:06,350
next one

00:19:04,190 --> 00:19:09,590
and when do one more job just don't do

00:19:06,350 --> 00:19:13,030
three at a time here and jump in alright

00:19:09,590 --> 00:19:20,500
so we'll save that go over here to my

00:19:13,030 --> 00:19:20,500
app all right

00:19:21,330 --> 00:19:27,970
okay so it's a basic simple app it's got

00:19:25,750 --> 00:19:30,190
a right now it's got a home screen and

00:19:27,970 --> 00:19:31,660
about paged about page says there's some

00:19:30,190 --> 00:19:32,830
content here the home screen just is

00:19:31,660 --> 00:19:35,050
actually just showing me the features

00:19:32,830 --> 00:19:36,430
that are turned on so even even really

00:19:35,050 --> 00:19:38,350
gotten to the meet yet but that was just

00:19:36,430 --> 00:19:40,540
kind of you know let's let's start with

00:19:38,350 --> 00:19:45,420
something so what does this code look

00:19:40,540 --> 00:19:48,490
like so the app first thing you look at

00:19:45,420 --> 00:19:49,840
I've created a feature name I needed any

00:19:48,490 --> 00:19:51,550
wanted to be camelcase so I just put a

00:19:49,840 --> 00:19:53,020
camel case around it you know obviously

00:19:51,550 --> 00:19:54,520
this is a single single word it's not a

00:19:53,020 --> 00:19:55,900
problem but if you people copy paste

00:19:54,520 --> 00:19:58,060
code so I want to make sure that if they

00:19:55,900 --> 00:20:00,490
use a dash or something at its camelcase

00:19:58,060 --> 00:20:02,050
so it would always work and then

00:20:00,490 --> 00:20:03,640
basically here's my app component I've

00:20:02,050 --> 00:20:05,830
got a browser router so I've got a react

00:20:03,640 --> 00:20:07,780
router implementation here I've got a

00:20:05,830 --> 00:20:10,450
header so it says bookmark notes and

00:20:07,780 --> 00:20:13,060
then I'm passing in some some links and

00:20:10,450 --> 00:20:15,280
some routes and so and again this was

00:20:13,060 --> 00:20:18,060
gonna be this will be provided down

00:20:15,280 --> 00:20:20,140
below here so I'm just rendering those

00:20:18,060 --> 00:20:22,240
in a header and then down here in the

00:20:20,140 --> 00:20:25,000
main and then here's my create feature

00:20:22,240 --> 00:20:28,180
further for app and so here I'm saying

00:20:25,000 --> 00:20:29,500
okay i'm i'm wanting star dot link comp

00:20:28,180 --> 00:20:30,970
so i you know you come up with some kind

00:20:29,500 --> 00:20:32,290
of naming convention of how you want to

00:20:30,970 --> 00:20:34,180
map these things you know maybe there's

00:20:32,290 --> 00:20:36,250
you know you could even put main menu or

00:20:34,180 --> 00:20:38,230
something dot link that component so I'm

00:20:36,250 --> 00:20:40,840
gonna say I need links and I need routes

00:20:38,230 --> 00:20:42,430
and I'm gonna display all those and then

00:20:40,840 --> 00:20:44,410
here I'm taking advantage of the wheel

00:20:42,430 --> 00:20:46,450
start I'm going ahead and I'm gonna get

00:20:44,410 --> 00:20:48,460
the facets object and the current route

00:20:46,450 --> 00:20:50,500
element and I'm actually the one that's

00:20:48,460 --> 00:20:52,360
creating this app so I know that there's

00:20:50,500 --> 00:20:54,430
no there shouldn't be an existing brude

00:20:52,360 --> 00:20:57,430
app and so then I go ahead and do a

00:20:54,430 --> 00:20:59,050
fastest get and get whatever I want in

00:20:57,430 --> 00:21:00,910
this case I'm getting the the link

00:20:59,050 --> 00:21:02,770
components and I'm also saying this with

00:21:00,910 --> 00:21:04,720
keys and that just says I want to go

00:21:02,770 --> 00:21:06,850
ahead and get the name along with the

00:21:04,720 --> 00:21:09,160
the component so since it's got a unique

00:21:06,850 --> 00:21:10,900
name already I want both things and give

00:21:09,160 --> 00:21:13,030
it to me back an array that's optional

00:21:10,900 --> 00:21:14,380
you could just use index or whatever but

00:21:13,030 --> 00:21:16,120
I go ahead and get the link so they get

00:21:14,380 --> 00:21:18,250
the routes and then I pass them in and

00:21:16,120 --> 00:21:19,210
render it so that that's basically gets

00:21:18,250 --> 00:21:22,390
you up and going and that's what

00:21:19,210 --> 00:21:27,580
rendered that that bookmark page and

00:21:22,390 --> 00:21:29,530
then then the next thing let's look at

00:21:27,580 --> 00:21:30,720
the about because that's you know real

00:21:29,530 --> 00:21:35,340
simple

00:21:30,720 --> 00:21:37,500
dear okay alright so again same similar

00:21:35,340 --> 00:21:39,480
thing it's called about I'm saying that

00:21:37,500 --> 00:21:40,890
the URL path is slash about you know you

00:21:39,480 --> 00:21:42,690
could change that if you wanted but I

00:21:40,890 --> 00:21:45,390
just used the that as a neat unique name

00:21:42,690 --> 00:21:47,850
so here I'm creating a link component so

00:21:45,390 --> 00:21:49,320
with link compassing in the the URL and

00:21:47,850 --> 00:21:51,870
here's the route component passing in

00:21:49,320 --> 00:21:53,880
the URL here's my you know great content

00:21:51,870 --> 00:21:55,530
and then down here I'm saying alright

00:21:53,880 --> 00:21:56,790
I'm defining this and expected to be

00:21:55,530 --> 00:21:59,100
used somewhere it should be you should

00:21:56,790 --> 00:22:01,350
match so I'm saying this feature name

00:21:59,100 --> 00:22:02,580
about link dot component you could

00:22:01,350 --> 00:22:03,990
obviously just type it out but I don't

00:22:02,580 --> 00:22:06,060
want to just make this kind of generic

00:22:03,990 --> 00:22:08,640
and so there there that's all you need

00:22:06,060 --> 00:22:10,350
to be able to push that into the to the

00:22:08,640 --> 00:22:13,560
system once it got pulled in by the

00:22:10,350 --> 00:22:15,840
feature index launch app is able to just

00:22:13,560 --> 00:22:18,390
find it and hook it up and match the

00:22:15,840 --> 00:22:20,430
wildcards and then it shows up so then

00:22:18,390 --> 00:22:26,910
the same thing and if we look at the the

00:22:20,430 --> 00:22:29,460
other the home page one it's basically

00:22:26,910 --> 00:22:30,600
just pulling in the features list and

00:22:29,460 --> 00:22:31,830
then iterating through those and

00:22:30,600 --> 00:22:33,150
printing those out so I'm basically just

00:22:31,830 --> 00:22:35,910
want to show you know what features are

00:22:33,150 --> 00:22:37,260
being defined it and and so it's same

00:22:35,910 --> 00:22:40,620
kind of thing it's providing a link and

00:22:37,260 --> 00:22:44,130
a component and alright and so then we

00:22:40,620 --> 00:22:47,280
could go back over to features on see

00:22:44,130 --> 00:22:54,480
there alright so now let's get a couple

00:22:47,280 --> 00:22:55,530
more features going all right so I'm

00:22:54,480 --> 00:22:57,060
gonna this now I'm gonna pull in the

00:22:55,530 --> 00:22:59,160
list feature and a load canned feature

00:22:57,060 --> 00:23:00,270
so let's say you're developing you don't

00:22:59,160 --> 00:23:01,860
even have a you know you're not have the

00:23:00,270 --> 00:23:04,200
data yet so you're gonna go ahead and

00:23:01,860 --> 00:23:11,010
develop the list component and you know

00:23:04,200 --> 00:23:12,630
next and then you know and then I'm

00:23:11,010 --> 00:23:14,700
gonna go ahead and load it in some data

00:23:12,630 --> 00:23:15,990
just some canned data so this is nice

00:23:14,700 --> 00:23:18,090
because if you know maybe the API is not

00:23:15,990 --> 00:23:19,740
even written yet you know so you could

00:23:18,090 --> 00:23:22,190
just pull in an object structure that

00:23:19,740 --> 00:23:22,190
you're used to

00:23:22,760 --> 00:23:27,680
okay so it's one of the warnings so now

00:23:25,560 --> 00:23:30,450
I'm actually since I'm starting to use

00:23:27,680 --> 00:23:31,890
reducers and and and logic now I'm gonna

00:23:30,450 --> 00:23:33,180
I've got to turn those on so I didn't

00:23:31,890 --> 00:23:35,400
have those originally on because I

00:23:33,180 --> 00:23:37,610
didn't need them so let me just flip

00:23:35,400 --> 00:23:40,770
that on so back up here I've got the

00:23:37,610 --> 00:23:43,750
feature Redux has an aspect and create

00:23:40,770 --> 00:23:45,280
logic aspect from rejects logic so

00:23:43,750 --> 00:23:53,320
let me turn those on and then and it'll

00:23:45,280 --> 00:23:57,040
be ready to go all right let's see if

00:23:53,320 --> 00:23:58,780
that solves it okay so now we've got a a

00:23:57,040 --> 00:24:02,020
we can see all the different features

00:23:58,780 --> 00:24:04,930
that are turned on here and then there's

00:24:02,020 --> 00:24:07,750
our about and here's our list and the

00:24:04,930 --> 00:24:11,050
list actually had a search you know so

00:24:07,750 --> 00:24:15,220
we can search by whatever it's doing a

00:24:11,050 --> 00:24:20,770
case insensitive search on this and you

00:24:15,220 --> 00:24:22,150
know we can we can do remove and you

00:24:20,770 --> 00:24:25,240
know and then of course it's the using

00:24:22,150 --> 00:24:26,590
can data so if we refresh it then it

00:24:25,240 --> 00:24:28,300
comes right back so it doesn't really

00:24:26,590 --> 00:24:29,890
you know save anything but at least we

00:24:28,300 --> 00:24:33,910
can make sure everything works and all

00:24:29,890 --> 00:24:37,260
that so let's quickly look at that so

00:24:33,910 --> 00:24:37,260
that what did that look like so the list

00:24:39,360 --> 00:24:45,910
okay so for the list we had we've got a

00:24:43,270 --> 00:24:47,140
we're using we're providing actions in

00:24:45,910 --> 00:24:48,640
case somebody else wants to use some of

00:24:47,140 --> 00:24:51,100
our actions we're creating we're

00:24:48,640 --> 00:24:52,270
providing some selectors and then down

00:24:51,100 --> 00:24:54,160
here I'm providing a link and a

00:24:52,270 --> 00:24:55,570
component I'm saying for sure define and

00:24:54,160 --> 00:24:57,430
use I'm expecting that to be used

00:24:55,570 --> 00:24:58,900
somewhere these other ones may or may

00:24:57,430 --> 00:25:01,900
not be used I'm just saying in future

00:24:58,900 --> 00:25:03,760
somebody might need them and then up

00:25:01,900 --> 00:25:05,290
here I'm you know as my Redux stuff so

00:25:03,760 --> 00:25:07,570
I've got I'm creating some actions

00:25:05,290 --> 00:25:11,170
there's some selectors some initial

00:25:07,570 --> 00:25:13,120
state I've got I'm using a my feature

00:25:11,170 --> 00:25:14,110
name as kind of the namespace for my

00:25:13,120 --> 00:25:16,300
state

00:25:14,110 --> 00:25:18,790
Sophy feature you has a nice way to be

00:25:16,300 --> 00:25:20,380
able to merge your your reducers

00:25:18,790 --> 00:25:22,270
together you just need to know where you

00:25:20,380 --> 00:25:25,150
want it to to map it into the global

00:25:22,270 --> 00:25:26,650
state so I'm just defining that as the

00:25:25,150 --> 00:25:29,380
the path it could be you know something

00:25:26,650 --> 00:25:31,360
dot something or whatever and then down

00:25:29,380 --> 00:25:33,070
here we've got the create actions so

00:25:31,360 --> 00:25:34,390
these are just using the Redux actions

00:25:33,070 --> 00:25:37,360
to create some actions and they're here

00:25:34,390 --> 00:25:40,390
I'm creating a reducer and then here's a

00:25:37,360 --> 00:25:42,850
link again to the path and then here's

00:25:40,390 --> 00:25:47,410
my selecting so I can do the the search

00:25:42,850 --> 00:25:50,680
and then here I'm rendering that rending

00:25:47,410 --> 00:25:52,420
or all my items and then exporting it

00:25:50,680 --> 00:25:56,660
out as the great feature so that's

00:25:52,420 --> 00:26:00,680
that's that and here's my go over to the

00:25:56,660 --> 00:26:04,130
load canned here I've got my I can list

00:26:00,680 --> 00:26:06,200
of data I'm using this expand with

00:26:04,130 --> 00:26:07,640
facets so that I'm providing logic but

00:26:06,200 --> 00:26:09,590
it's going to make a call back and say

00:26:07,640 --> 00:26:12,020
give me facet so I can go ahead and pull

00:26:09,590 --> 00:26:13,280
out the list out actions because that's

00:26:12,020 --> 00:26:14,840
going to be giving me the type that I

00:26:13,280 --> 00:26:17,530
want to match up here for greed X logic

00:26:14,840 --> 00:26:19,520
so I'm creating this I'm doing a

00:26:17,530 --> 00:26:22,280
asynchronous call and I'm just

00:26:19,520 --> 00:26:24,770
responding with a canned list and then

00:26:22,280 --> 00:26:27,050
that gets dispatched out and in rendered

00:26:24,770 --> 00:26:28,400
so that and then here I'm using apt-get

00:26:27,050 --> 00:26:30,950
start so I'm actually kicking that off

00:26:28,400 --> 00:26:32,750
so it'll dispatch this this load when it

00:26:30,950 --> 00:26:36,070
when it launches up so I don't you don't

00:26:32,750 --> 00:26:36,070
have to have any hard-coded stuff there

00:26:36,100 --> 00:26:40,490
all right

00:26:37,550 --> 00:26:42,620
and then so then I think we're about

00:26:40,490 --> 00:26:45,550
we're about wrapping up here but let me

00:26:42,620 --> 00:26:51,950
get to the next the final one so this

00:26:45,550 --> 00:26:54,980
mouse is hard so I think it features

00:26:51,950 --> 00:26:57,380
there we go alright so now now let's say

00:26:54,980 --> 00:26:58,640
let's go ahead and just finish it we

00:26:57,380 --> 00:26:59,990
will go ahead and we're going to bring

00:26:58,640 --> 00:27:01,550
in the air there's an add feature what

00:26:59,990 --> 00:27:04,750
we're gonna add things and then we'll go

00:27:01,550 --> 00:27:07,070
ahead and save things in local forage

00:27:04,750 --> 00:27:11,600
it'll use whatever you know the browser

00:27:07,070 --> 00:27:13,670
has for storage capabilities and so now

00:27:11,600 --> 00:27:17,570
if we go back over here we've got all

00:27:13,670 --> 00:27:21,350
the things turned on and then we can you

00:27:17,570 --> 00:27:23,840
know add a new new thing here and it

00:27:21,350 --> 00:27:28,130
shows up down here you know we still got

00:27:23,840 --> 00:27:32,750
the search and about and lists and all

00:27:28,130 --> 00:27:34,670
that so basically all working and yeah

00:27:32,750 --> 00:27:35,750
so that that you know it basically works

00:27:34,670 --> 00:27:38,060
I mean you can basically build these

00:27:35,750 --> 00:27:40,550
things up you know feature at a time

00:27:38,060 --> 00:27:43,070
make and basically swap the the new

00:27:40,550 --> 00:27:44,960
storage feature in and swapped out the

00:27:43,070 --> 00:27:47,150
old can feature and you know if

00:27:44,960 --> 00:27:49,970
everything is all matched up then it'll

00:27:47,150 --> 00:27:51,290
just boom you're ready to go so you know

00:27:49,970 --> 00:27:53,180
it's pretty nice to build those just to

00:27:51,290 --> 00:27:54,620
upgrade things you can easily roll back

00:27:53,180 --> 00:27:56,150
to the previous thing you could do it

00:27:54,620 --> 00:27:59,030
you know a/b testing and whatever so

00:27:56,150 --> 00:28:01,820
that's kind of nice so let me go back to

00:27:59,030 --> 00:28:06,310
the code and lock her hit the home

00:28:01,820 --> 00:28:06,310
stretch here alright so

00:28:06,580 --> 00:28:11,870
okay and then there's another app that

00:28:10,250 --> 00:28:15,919
the Kevin wrote that's called eatery nod

00:28:11,870 --> 00:28:18,970
and I'll just show you I won't go into

00:28:15,919 --> 00:28:21,470
details with it no that's the only one

00:28:18,970 --> 00:28:24,200
because the run late on time but

00:28:21,470 --> 00:28:27,260
basically it's a you got links to it in

00:28:24,200 --> 00:28:28,789
my and mine show notes he's got it it's

00:28:27,260 --> 00:28:30,770
well documented with Doc diagrams

00:28:28,789 --> 00:28:32,539
everything so this is like a it'll react

00:28:30,770 --> 00:28:34,850
native app that you Expo app that you

00:28:32,539 --> 00:28:36,679
can have restaurants be pulled in and

00:28:34,850 --> 00:28:38,659
then create a list of those and then

00:28:36,679 --> 00:28:39,860
basically it would be a random list so

00:28:38,659 --> 00:28:42,679
if you have trouble deciding where to

00:28:39,860 --> 00:28:44,000
take your your significant other you can

00:28:42,679 --> 00:28:45,409
just pull up this app and press the

00:28:44,000 --> 00:28:47,480
button it'll randomly pick something and

00:28:45,409 --> 00:28:48,890
then you you can use that to to go and

00:28:47,480 --> 00:28:51,919
so that's what he created it just kind

00:28:48,890 --> 00:28:53,480
of wants something fun and so it's all

00:28:51,919 --> 00:28:55,010
well document as far as that goes but he

00:28:53,480 --> 00:28:57,080
does the same concept and since it has

00:28:55,010 --> 00:28:59,419
all those hooks it works great for react

00:28:57,080 --> 00:29:01,940
native and works great for for react web

00:28:59,419 --> 00:29:03,530
so he's got authorization so it's it's

00:29:01,940 --> 00:29:04,880
it's all it's a full app and he's got it

00:29:03,530 --> 00:29:07,580
all blown out in two different separate

00:29:04,880 --> 00:29:09,860
files and everything so I'll just let

00:29:07,580 --> 00:29:21,230
you look at that on your own he is uh

00:29:09,860 --> 00:29:28,190
let's see next all right okay so finally

00:29:21,230 --> 00:29:30,350
the where was they out on here best

00:29:28,190 --> 00:29:33,200
practices of just a few things to note I

00:29:30,350 --> 00:29:35,929
think it's pretty simple to use once you

00:29:33,200 --> 00:29:37,669
try it but you know the good thing is to

00:29:35,929 --> 00:29:39,919
avoid cross feature imports so instead

00:29:37,669 --> 00:29:42,799
of importing from feature a to feature B

00:29:39,919 --> 00:29:44,510
directly use the you know use the facets

00:29:42,799 --> 00:29:45,860
sharing and that makes it plug-and-play

00:29:44,510 --> 00:29:47,330
so then if something else comes along

00:29:45,860 --> 00:29:49,100
and implements those features you can

00:29:47,330 --> 00:29:50,270
turn this one off turn that one up you

00:29:49,100 --> 00:29:51,980
know so you don't have to be changing

00:29:50,270 --> 00:29:54,049
you know a lot of files with imports and

00:29:51,980 --> 00:29:56,419
things so that that's great it also

00:29:54,049 --> 00:29:58,789
helps for swapping and for a/b testing

00:29:56,419 --> 00:30:00,380
for mocking all that kind of stuff take

00:29:58,789 --> 00:30:02,030
advantage of the uses contracts you know

00:30:00,380 --> 00:30:03,890
the define used and they use so that

00:30:02,030 --> 00:30:07,220
basically will catch spelling mistakes

00:30:03,890 --> 00:30:09,490
use wildcards to be able to pull things

00:30:07,220 --> 00:30:11,539
in for like the menus and all that

00:30:09,490 --> 00:30:13,880
feature name is required to be unique

00:30:11,539 --> 00:30:15,559
and it'll complain if it's not and and

00:30:13,880 --> 00:30:16,760
so normally if you're using a single

00:30:15,559 --> 00:30:18,770
file and you can put it right in there

00:30:16,760 --> 00:30:19,800
but if you're using lots of other files

00:30:18,770 --> 00:30:21,570
and you're going to use

00:30:19,800 --> 00:30:22,980
in those files then it's a good practice

00:30:21,570 --> 00:30:24,870
to put it in a separate file and just

00:30:22,980 --> 00:30:26,820
import that into the various things

00:30:24,870 --> 00:30:28,590
that'll prevent circular dependencies

00:30:26,820 --> 00:30:30,780
and all that so that's just a kind of a

00:30:28,590 --> 00:30:32,910
note that once you've been do any stuff

00:30:30,780 --> 00:30:34,380
so so I think it really simplifies

00:30:32,910 --> 00:30:36,150
things I mean it was I was really

00:30:34,380 --> 00:30:38,550
impressed at how it got things up and

00:30:36,150 --> 00:30:41,280
going and in it also just made it very

00:30:38,550 --> 00:30:42,450
easy to get redux up and going and Redux

00:30:41,280 --> 00:30:44,160
logic you didn't really have to mess

00:30:42,450 --> 00:30:45,930
with you know we just pulled in the

00:30:44,160 --> 00:30:47,700
aspect and then it did all the wiring

00:30:45,930 --> 00:30:49,800
and then basically now we just create

00:30:47,700 --> 00:30:52,110
features and define a reducer define a

00:30:49,800 --> 00:30:53,250
logic and and it pulls it in wires add

00:30:52,110 --> 00:30:55,080
up where it needs to go so I thought

00:30:53,250 --> 00:30:57,480
that was really nice you know it's it's

00:30:55,080 --> 00:30:59,790
kind of it's easier to do that than most

00:30:57,480 --> 00:31:01,200
anything so besides to be able to do

00:30:59,790 --> 00:31:03,690
feature development it's also nice for

00:31:01,200 --> 00:31:05,610
just getting wired up flexible in

00:31:03,690 --> 00:31:06,990
extensible this is he's you know is he

00:31:05,610 --> 00:31:08,490
started with a few different

00:31:06,990 --> 00:31:10,080
technologies but you could extend this

00:31:08,490 --> 00:31:12,540
to anything it's really there's nothing

00:31:10,080 --> 00:31:15,330
that's locking it down he's kind of got

00:31:12,540 --> 00:31:17,130
some great documentation here to to show

00:31:15,330 --> 00:31:22,350
that it could be used on other languages

00:31:17,130 --> 00:31:25,320
and frameworks the let me just bring up

00:31:22,350 --> 00:31:27,710
the page here so this is feed chaos

00:31:25,320 --> 00:31:29,910
Kevin a est feature U is his website

00:31:27,710 --> 00:31:33,420
again he's got a lot of great Doc's in

00:31:29,910 --> 00:31:36,150
here he's got a feature UJS that org is

00:31:33,420 --> 00:31:37,560
his documentation site and it's it's

00:31:36,150 --> 00:31:39,000
awesome you know you just goes through

00:31:37,560 --> 00:31:42,120
and explains everything how it works

00:31:39,000 --> 00:31:43,650
down here is the core API you know so it

00:31:42,120 --> 00:31:45,240
breaks out all the things I talked about

00:31:43,650 --> 00:31:48,240
and in difference one thing I didn't

00:31:45,240 --> 00:31:50,700
mention is it kind of uses objects for a

00:31:48,240 --> 00:31:52,440
lot of the parameters and so sometimes

00:31:50,700 --> 00:31:54,000
the way this API there where this

00:31:52,440 --> 00:31:56,520
renders it doesn't really show you those

00:31:54,000 --> 00:31:58,950
are it's like a named parameter or a D

00:31:56,520 --> 00:32:00,690
structured Brammer and so but there is

00:31:58,950 --> 00:32:01,800
basically objects that you're passing

00:32:00,690 --> 00:32:03,600
into for a lot of these parameters and

00:32:01,800 --> 00:32:05,100
so you don't have to necessarily use all

00:32:03,600 --> 00:32:06,780
of them if you just need one or two you

00:32:05,100 --> 00:32:09,480
can just specify the ones you need so

00:32:06,780 --> 00:32:11,490
just just a note of there but yeah this

00:32:09,480 --> 00:32:14,190
is a great he does great Jackman tation

00:32:11,490 --> 00:32:17,850
so this is fantastic for that let's see

00:32:14,190 --> 00:32:20,070
I think we're down to the final thing so

00:32:17,850 --> 00:32:23,780
that slides were at code winds calm /j s

00:32:20,070 --> 00:32:25,860
comp 2018 there's the other repo stuff

00:32:23,780 --> 00:32:27,710
contact me if you've got questions or

00:32:25,860 --> 00:32:30,000
whatever I'm happy to answer that or

00:32:27,710 --> 00:32:32,520
have a beer later you know let me know

00:32:30,000 --> 00:32:33,389
you got ideas or or things you want to

00:32:32,520 --> 00:32:34,979
use it for

00:32:33,389 --> 00:32:37,379
Twitter handle and github is Jeff Biscay

00:32:34,979 --> 00:32:38,800
and I appreciate let me speak to you

00:32:37,379 --> 00:32:45,180
thank you

00:32:38,800 --> 00:32:45,180

YouTube URL: https://www.youtube.com/watch?v=wkFggFuIveY


