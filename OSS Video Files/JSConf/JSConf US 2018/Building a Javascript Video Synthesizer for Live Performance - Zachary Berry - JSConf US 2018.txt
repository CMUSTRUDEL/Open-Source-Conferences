Title: Building a Javascript Video Synthesizer for Live Performance - Zachary Berry - JSConf US 2018
Publication date: 2018-11-14
Playlist: JSConf US 2018
Description: 
	
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:27,779
[Music]

00:00:23,080 --> 00:00:30,189
[Applause]

00:00:27,779 --> 00:00:32,020
okay all right

00:00:30,189 --> 00:00:33,460
so yeah I'm soccerberry this talk is

00:00:32,020 --> 00:00:35,620
about kerning and video sin or

00:00:33,460 --> 00:00:38,320
synthesizer with JavaScript and of

00:00:35,620 --> 00:00:39,370
course the browser a little bit about me

00:00:38,320 --> 00:00:42,010
at thanks for the introduction

00:00:39,370 --> 00:00:43,720
yeah work at UCF and obviously I love

00:00:42,010 --> 00:00:45,130
javascript in the browser which is why

00:00:43,720 --> 00:00:46,660
I'm here

00:00:45,130 --> 00:00:48,250
yeah it's the minimum proposal on the

00:00:46,660 --> 00:00:50,200
last day kind of like a what the heck

00:00:48,250 --> 00:00:53,530
why not really didn't think I'd be

00:00:50,200 --> 00:00:55,870
picked and yet here I am so that's why

00:00:53,530 --> 00:01:00,190
this was the official photo that I gave

00:00:55,870 --> 00:01:01,750
the conference this was my family I was

00:01:00,190 --> 00:01:04,420
visiting back home in Panama City Beach

00:01:01,750 --> 00:01:07,659
and my parents were like hey come down

00:01:04,420 --> 00:01:10,659
to the beach and this was the result and

00:01:07,659 --> 00:01:20,020
her promises wasn't intentional but that

00:01:10,659 --> 00:01:22,060
is indeed a J has come 15 shirt yeah so

00:01:20,020 --> 00:01:24,159
I'm super thrilled to be able to visit

00:01:22,060 --> 00:01:26,080
the conference in Amelia Island and now

00:01:24,159 --> 00:01:27,850
to be able to present so that's super

00:01:26,080 --> 00:01:30,700
cool and a promise it was not

00:01:27,850 --> 00:01:34,150
intentional okay so the inspiration for

00:01:30,700 --> 00:01:35,619
this idea we're gonna start off with a

00:01:34,150 --> 00:01:37,810
little experiment this is some code that

00:01:35,619 --> 00:01:39,909
I'm gonna try to run through real quick

00:01:37,810 --> 00:01:42,369
and I'll show you what it does it's

00:01:39,909 --> 00:01:45,070
going to take the whole body element and

00:01:42,369 --> 00:01:46,630
it's going to shove it into Marky which

00:01:45,070 --> 00:01:48,520
I know if you knew this but Marky does

00:01:46,630 --> 00:01:51,189
have options so you can speed it up and

00:01:48,520 --> 00:01:54,070
reverse it we're also going to select

00:01:51,189 --> 00:01:55,900
all the spans and H ones and so so have

00:01:54,070 --> 00:01:58,200
you and then on each of those want to

00:01:55,900 --> 00:02:01,590
put those in a marquee

00:01:58,200 --> 00:02:03,180
because we can and then we're gonna make

00:02:01,590 --> 00:02:04,409
an angle variable and then send an

00:02:03,180 --> 00:02:07,280
interval and then we're just gonna

00:02:04,409 --> 00:02:09,440
increment that for every dip on the page

00:02:07,280 --> 00:02:19,590
and we're gonna do that every

00:02:09,440 --> 00:02:25,760
millisecond so let's see we have Jes

00:02:19,590 --> 00:02:25,760
comp let's run this and see what happens

00:02:26,510 --> 00:02:32,819
so it'll come back around

00:02:29,209 --> 00:02:34,319
yeah and it's a little bit fast but you

00:02:32,819 --> 00:02:36,090
can still use it if I was able to click

00:02:34,319 --> 00:02:40,370
on a button it would still work I tried

00:02:36,090 --> 00:02:45,090
it I'm not gonna try here cuz it's hard

00:02:40,370 --> 00:02:51,239
but enough of that so what was the point

00:02:45,090 --> 00:02:52,739
of that right so browser is a powerful

00:02:51,239 --> 00:02:54,390
rendering engine I'm kind of surprising

00:02:52,739 --> 00:02:55,830
and put uh Martina Marquis in a monkey

00:02:54,390 --> 00:02:59,430
and you can rotate the whole page in it

00:02:55,830 --> 00:03:06,390
for the most part handles it and the

00:02:59,430 --> 00:03:07,950
marquee tag still works backwards

00:03:06,390 --> 00:03:10,769
compatibility is awesome

00:03:07,950 --> 00:03:12,299
so that's that's I'm kind of trying to

00:03:10,769 --> 00:03:14,160
lay out like kind of the concept of the

00:03:12,299 --> 00:03:16,410
idea that's one little piece of my brain

00:03:14,160 --> 00:03:17,940
the other piece is something that I've

00:03:16,410 --> 00:03:20,220
been kind of excited about which is

00:03:17,940 --> 00:03:22,440
modular synthesis I'm kind of excited -

00:03:20,220 --> 00:03:23,970
yesterday on the Erb not yesterday but

00:03:22,440 --> 00:03:25,620
the first day I talked someone did have

00:03:23,970 --> 00:03:29,579
a photo of like a modular set up which

00:03:25,620 --> 00:03:31,650
was really cool but I will let Andrew

00:03:29,579 --> 00:03:33,750
Huang a famous youtuber explain because

00:03:31,650 --> 00:03:36,680
he can explain it better than I can so

00:03:33,750 --> 00:03:36,680
let's see if this works

00:03:41,300 --> 00:03:47,170
maybe let's see if I can turn this up

00:03:51,010 --> 00:04:00,860
okay well no but I'll try to explain it

00:03:56,030 --> 00:04:04,430
then so each of these pieces is a little

00:04:00,860 --> 00:04:06,680
module and you can plug them together so

00:04:04,430 --> 00:04:08,440
some of them create audio so it's just

00:04:06,680 --> 00:04:10,820
like a simple sine or square waveform

00:04:08,440 --> 00:04:12,920
others can then manipulate and manage

00:04:10,820 --> 00:04:42,770
that audio and and transform it in

00:04:12,920 --> 00:04:45,580
different ways so thank you this

00:04:42,770 --> 00:04:48,400
crowd-sourced okay so output should be

00:04:45,580 --> 00:04:53,000
headphones okay all right thank you all

00:04:48,400 --> 00:04:55,310
right all right so how this relates to

00:04:53,000 --> 00:04:57,230
JavaScript so module sentence this is

00:04:55,310 --> 00:05:00,200
composed of several modules and those

00:04:57,230 --> 00:05:01,340
take input and give output that's kind

00:05:00,200 --> 00:05:02,330
of it's a little bit of a stretch but

00:05:01,340 --> 00:05:03,830
that's kind of like how functional

00:05:02,330 --> 00:05:06,140
programs are made you kind of combine

00:05:03,830 --> 00:05:10,190
and composed several functions they take

00:05:06,140 --> 00:05:12,980
input and give output third piece of my

00:05:10,190 --> 00:05:15,590
brain is I started producing music

00:05:12,980 --> 00:05:17,690
electronic music and I needed something

00:05:15,590 --> 00:05:19,880
to put into the SoundCloud little

00:05:17,690 --> 00:05:22,340
thumbnail thing for album art so I

00:05:19,880 --> 00:05:25,040
generated I wrote this application that

00:05:22,340 --> 00:05:26,270
generates SVG's dynamically and so if I

00:05:25,040 --> 00:05:27,500
clicked on one of these it would

00:05:26,270 --> 00:05:30,080
download a two thousand four two

00:05:27,500 --> 00:05:34,669
thousand PNG and I can reload just to

00:05:30,080 --> 00:05:36,590
show you it's it's live so that was

00:05:34,669 --> 00:05:41,060
really cool I was pretty happy with that

00:05:36,590 --> 00:05:42,710
but the code is terrible and when I I

00:05:41,060 --> 00:05:44,270
would have to go through and edit the

00:05:42,710 --> 00:05:45,740
code and like make changes so like maybe

00:05:44,270 --> 00:05:47,090
I didn't like this one color I wanted

00:05:45,740 --> 00:05:49,070
there to be more circles and more lines

00:05:47,090 --> 00:05:50,960
and that was kind of a tedious process

00:05:49,070 --> 00:05:53,820
and I thought it would be really cool if

00:05:50,960 --> 00:05:56,480
I could tweak these parameters live

00:05:53,820 --> 00:05:59,460
with some sort of user interface and

00:05:56,480 --> 00:06:02,970
then I showed you modular synthesis we

00:05:59,460 --> 00:06:04,980
subtract to explain it audio is another

00:06:02,970 --> 00:06:07,320
signal and so is video so you can do the

00:06:04,980 --> 00:06:10,170
same type of thing with video as well so

00:06:07,320 --> 00:06:12,600
this is the this is a video modular

00:06:10,170 --> 00:06:15,600
synth and it can like take the red

00:06:12,600 --> 00:06:17,280
channel then you can manipulate that and

00:06:15,600 --> 00:06:18,630
transform video in different ways

00:06:17,280 --> 00:06:21,060
hopefully this works but this is a

00:06:18,630 --> 00:06:23,310
friend of mine who has a huge video

00:06:21,060 --> 00:06:24,690
modular set up this is a little demo of

00:06:23,310 --> 00:06:34,050
him kind of tweaking some parameters

00:06:24,690 --> 00:06:45,780
live so he's changing the effect of the

00:06:34,050 --> 00:06:46,920
video here and so it's actually not that

00:06:45,780 --> 00:06:48,930
new

00:06:46,920 --> 00:06:52,320
the first visualizer as far as I

00:06:48,930 --> 00:06:54,630
understand it was back in 1977 with the

00:06:52,320 --> 00:06:56,460
Atari video music and that is the same

00:06:54,630 --> 00:07:00,450
Atari they're thinking of for like the

00:06:56,460 --> 00:07:02,490
2600 and to my knowledge the first time

00:07:00,450 --> 00:07:04,290
it was used was in the background of a

00:07:02,490 --> 00:07:06,380
Devo video so I figured I'd show it to

00:07:04,290 --> 00:07:06,380
you

00:07:21,559 --> 00:07:27,990
so basically the Atari video music works

00:07:26,099 --> 00:07:29,819
by it takes audio signals and then it

00:07:27,990 --> 00:07:32,490
kind of it's it's a little black box but

00:07:29,819 --> 00:07:34,199
it it makes these diamond patterns and

00:07:32,490 --> 00:07:35,729
weird squiggly and this was a good

00:07:34,199 --> 00:07:38,210
example because some of the stuff can be

00:07:35,729 --> 00:07:40,379
super flashy I didn't want to show that

00:07:38,210 --> 00:07:43,729
but there are a few parameters you can

00:07:40,379 --> 00:07:45,930
tweak to them modify how that works so

00:07:43,729 --> 00:07:48,449
all this stuff is really cool I love a

00:07:45,930 --> 00:07:51,089
lot and it's very kind of this VHS low

00:07:48,449 --> 00:07:55,050
fine 90s 80s kind of thing but I also

00:07:51,089 --> 00:07:59,270
like very digital type of aesthetics so

00:07:55,050 --> 00:07:59,270
here's two examples of some of that

00:08:00,919 --> 00:08:03,919
hopefully

00:08:12,170 --> 00:08:26,910
that's one and then here's the other so

00:08:24,870 --> 00:08:28,590
as you can see that's kind of reacting

00:08:26,910 --> 00:08:33,210
to the audio it's very purposely built

00:08:28,590 --> 00:08:34,590
to do that but that got me thinking it'd

00:08:33,210 --> 00:08:36,450
be really cool to be able to create

00:08:34,590 --> 00:08:39,300
these videos live as I was performing

00:08:36,450 --> 00:08:41,669
music and they're simple to the point

00:08:39,300 --> 00:08:42,840
that at least graphically wise they're

00:08:41,669 --> 00:08:44,790
simple so that I could totally make

00:08:42,840 --> 00:08:48,510
these with like a canvas or SVG

00:08:44,790 --> 00:08:50,910
application and then going with that

00:08:48,510 --> 00:08:53,940
it's crazy how much again with the power

00:08:50,910 --> 00:08:55,770
of the browser we have CSS animations 2d

00:08:53,940 --> 00:08:58,770
3d graphics you have SVG we have video

00:08:55,770 --> 00:09:00,360
we have awesome libraries like 3GS pics

00:08:58,770 --> 00:09:02,700
ejs and this is obviously just - and a

00:09:00,360 --> 00:09:04,140
huge multitude of libraries and we have

00:09:02,700 --> 00:09:06,240
all these api's and some of the talks

00:09:04,140 --> 00:09:09,300
that you've seen here talk about some of

00:09:06,240 --> 00:09:12,800
these cool api's so why don't we harness

00:09:09,300 --> 00:09:19,830
this technology and so that's the idea

00:09:12,800 --> 00:09:21,720
so let's see oh right this is this is

00:09:19,830 --> 00:09:24,090
not my app yet this is another site okay

00:09:21,720 --> 00:09:28,140
so and then the idea here is that we

00:09:24,090 --> 00:09:30,270
have all this types of hardware and all

00:09:28,140 --> 00:09:33,780
this Hardware sends different signals so

00:09:30,270 --> 00:09:37,770
here I have a ps4 a gamepad you can see

00:09:33,780 --> 00:09:40,590
that and the mouse audio this is like

00:09:37,770 --> 00:09:46,590
reading the audio level from the MacBook

00:09:40,590 --> 00:09:48,300
and then those are many messages so

00:09:46,590 --> 00:09:51,060
would it be cool if we could then

00:09:48,300 --> 00:09:53,160
harness all of those kind of as a signal

00:09:51,060 --> 00:09:56,880
kind of like drawing inspiration from

00:09:53,160 --> 00:09:58,110
the video modular synth and each of

00:09:56,880 --> 00:10:00,030
these can be harnessed through different

00:09:58,110 --> 00:10:02,640
api's so gamepad is gamepad API

00:10:00,030 --> 00:10:04,110
obviously media capture and streams here

00:10:02,640 --> 00:10:05,160
is just for audio but you can also do

00:10:04,110 --> 00:10:05,550
video which I'll show you in a little

00:10:05,160 --> 00:10:09,960
bit

00:10:05,550 --> 00:10:11,340
and then those can send signals over to

00:10:09,960 --> 00:10:13,530
some sort of application that

00:10:11,340 --> 00:10:16,260
application can harness those libraries

00:10:13,530 --> 00:10:18,960
and those web api s but what we could

00:10:16,260 --> 00:10:21,180
also do is that we could at least the

00:10:18,960 --> 00:10:23,730
idea is to remap those live so we could

00:10:21,180 --> 00:10:27,110
change the configuration and then change

00:10:23,730 --> 00:10:27,110
the visualization as a result

00:10:27,640 --> 00:10:32,840
so let's get into that so this is

00:10:31,760 --> 00:10:36,230
probably built it's an application

00:10:32,840 --> 00:10:39,320
called bit kid let me see if I can make

00:10:36,230 --> 00:10:42,080
it bigger the idea is that we have kind

00:10:39,320 --> 00:10:44,510
of a software version of a visual sense

00:10:42,080 --> 00:10:46,280
so here we have the mouse node that's

00:10:44,510 --> 00:10:48,380
reading the Dom events from the mouse

00:10:46,280 --> 00:10:51,290
and then as I move back and forth it's

00:10:48,380 --> 00:10:54,230
changing these x and y-values and those

00:10:51,290 --> 00:10:56,120
are being put into the inner to the

00:10:54,230 --> 00:10:59,150
display up there which i am calling the

00:10:56,120 --> 00:11:01,310
screen so if I full screen here you can

00:10:59,150 --> 00:11:04,760
see it's simple it's just showing you

00:11:01,310 --> 00:11:12,050
the the pixel values but what I can do

00:11:04,760 --> 00:11:13,580
is an example is let's see look actually

00:11:12,050 --> 00:11:16,190
there's a good example so all of those

00:11:13,580 --> 00:11:17,870
nodes are just JavaScript and they're

00:11:16,190 --> 00:11:19,100
kind of inspired by web components they

00:11:17,870 --> 00:11:22,160
actually are web components but these

00:11:19,100 --> 00:11:24,080
are own life cycle methods so anything

00:11:22,160 --> 00:11:27,140
that you see in the node can be changed

00:11:24,080 --> 00:11:29,480
up here is the inputs so those can be

00:11:27,140 --> 00:11:33,400
defined with like what kind of a value

00:11:29,480 --> 00:11:37,310
they accept as well as other options so

00:11:33,400 --> 00:11:38,900
let me put these together and what I'm

00:11:37,310 --> 00:11:43,490
gonna do is I'm gonna hook up the

00:11:38,900 --> 00:11:46,370
x-value of the mouse to rotate our

00:11:43,490 --> 00:11:47,810
screen so with that little change I'm

00:11:46,370 --> 00:11:50,750
able to now the mouse is kind of

00:11:47,810 --> 00:11:55,670
controlling the rotate the CSS rotation

00:11:50,750 --> 00:11:58,580
of this element here so just a quick

00:11:55,670 --> 00:12:00,890
overview of how it works this is what I

00:11:58,580 --> 00:12:04,130
said this is the screen element these

00:12:00,890 --> 00:12:06,530
are what I call nodes each node has

00:12:04,130 --> 00:12:09,080
optionally a list of inputs and listed

00:12:06,530 --> 00:12:11,810
outputs there's also the web component

00:12:09,080 --> 00:12:14,450
that I spoke about and then each of the

00:12:11,810 --> 00:12:16,280
inputs optionally has a UI that kind of

00:12:14,450 --> 00:12:17,360
lets you set the values if you don't set

00:12:16,280 --> 00:12:21,250
them through some sort of hardware

00:12:17,360 --> 00:12:25,460
method and then those can be connected

00:12:21,250 --> 00:12:27,410
and how it works is each of those like I

00:12:25,460 --> 00:12:29,420
showed you that code that's the node J

00:12:27,410 --> 00:12:30,890
is not I don't mean the framework node

00:12:29,420 --> 00:12:33,830
but I mean like the JavaScript that

00:12:30,890 --> 00:12:37,870
makes up each node and then those gate

00:12:33,830 --> 00:12:41,630
eval into

00:12:37,870 --> 00:12:44,210
basically a web component class and then

00:12:41,630 --> 00:12:46,580
I have a CSS and HTML which then gets

00:12:44,210 --> 00:12:49,130
put into a shadow root and then that

00:12:46,580 --> 00:12:51,590
those combined into my custom web

00:12:49,130 --> 00:12:54,320
component that I built for this and then

00:12:51,590 --> 00:12:55,880
we have a react layer which then that

00:12:54,320 --> 00:12:57,470
was what the graphical interface of

00:12:55,880 --> 00:12:59,660
connecting all of the nodes but also

00:12:57,470 --> 00:13:01,640
each react component has a native web

00:12:59,660 --> 00:13:03,050
component in it which is kind of a

00:13:01,640 --> 00:13:06,260
nightmare

00:13:03,050 --> 00:13:08,090
and then we have the state which this is

00:13:06,260 --> 00:13:09,470
very simple but a simplified view but

00:13:08,090 --> 00:13:10,790
it's basically what note is connected to

00:13:09,470 --> 00:13:13,430
what node and what are the values that

00:13:10,790 --> 00:13:15,140
every any given point in time and then

00:13:13,430 --> 00:13:17,870
we have the screen element at the upper

00:13:15,140 --> 00:13:20,600
right and that's just a web page has

00:13:17,870 --> 00:13:25,010
HTML and CSS and that gets shoved into

00:13:20,600 --> 00:13:26,330
an iframe so I wanted to talk a little

00:13:25,010 --> 00:13:28,880
bit about some of the technology behind

00:13:26,330 --> 00:13:31,190
it web components I'm sure a lot of you

00:13:28,880 --> 00:13:33,110
have seen it but in case you haven't you

00:13:31,190 --> 00:13:35,300
can make any sort of classics and HTML

00:13:33,110 --> 00:13:37,580
element or other HTML elements if you'd

00:13:35,300 --> 00:13:39,320
like like the paragraph tag and you get

00:13:37,580 --> 00:13:40,850
these life cycle events so you get

00:13:39,320 --> 00:13:43,550
connected callback that's when it gets

00:13:40,850 --> 00:13:45,020
attached to the Dom disconnected I want

00:13:43,550 --> 00:13:47,570
to get removed when it gets removed from

00:13:45,020 --> 00:13:49,700
the Dom adopted means has moved to

00:13:47,570 --> 00:13:51,080
another document but the one that I'm

00:13:49,700 --> 00:13:53,210
really harnessing here is observed

00:13:51,080 --> 00:13:56,150
tributes so what you can do is you can

00:13:53,210 --> 00:13:57,830
define different attributes on the HTML

00:13:56,150 --> 00:14:00,650
element and then you get a callback that

00:13:57,830 --> 00:14:05,150
gets fired whenever those attributes

00:14:00,650 --> 00:14:06,530
change and there's real quickly how you

00:14:05,150 --> 00:14:10,190
would use it you might make like for

00:14:06,530 --> 00:14:12,260
example a user icon web element you

00:14:10,190 --> 00:14:14,240
define it using custom elements defined

00:14:12,260 --> 00:14:15,950
I should say this only works I believe

00:14:14,240 --> 00:14:19,130
in Chrome and I think it's coming to

00:14:15,950 --> 00:14:21,230
Firefox soon there's some polyfills but

00:14:19,130 --> 00:14:23,360
you say I whenever I see a user - icon

00:14:21,230 --> 00:14:26,600
tag I want you to use that user icon

00:14:23,360 --> 00:14:29,690
class and then you can make your custom

00:14:26,600 --> 00:14:31,250
element all the code examples I'm going

00:14:29,690 --> 00:14:33,230
to be showing you can get to with this

00:14:31,250 --> 00:14:35,660
bitly URL I just have a code pen

00:14:33,230 --> 00:14:38,720
collection of a bunch of kind of the

00:14:35,660 --> 00:14:40,850
basics of what I'm showing you if you're

00:14:38,720 --> 00:14:43,190
curious

00:14:40,850 --> 00:14:44,570
so writing to the iframe is actually

00:14:43,190 --> 00:14:46,450
surprisingly easy and one of the

00:14:44,570 --> 00:14:48,910
examples I have code pen ink

00:14:46,450 --> 00:14:52,780
pen because all you need to do is you

00:14:48,910 --> 00:14:54,850
can get the the an iframe element you

00:14:52,780 --> 00:14:57,490
can open it document I'll open you can

00:14:54,850 --> 00:14:59,620
shove a bunch of HTML in there you can

00:14:57,490 --> 00:15:01,390
then create a new style element and then

00:14:59,620 --> 00:15:04,150
you can just put that into the head of

00:15:01,390 --> 00:15:05,500
the iframe that you just created so it's

00:15:04,150 --> 00:15:07,450
kind of hacky but what's great about

00:15:05,500 --> 00:15:09,790
this is now you stand box it so if you

00:15:07,450 --> 00:15:11,320
tend to if you write some weird HTML I

00:15:09,790 --> 00:15:13,300
don't have to worry about it throwing

00:15:11,320 --> 00:15:15,120
errors the iframe was just coner sort of

00:15:13,300 --> 00:15:18,970
deal with it

00:15:15,120 --> 00:15:20,440
so I heard somebody laugh with eval this

00:15:18,970 --> 00:15:22,240
is a famous kind of thing from Douglas

00:15:20,440 --> 00:15:24,880
Crockford where he said evil is evil and

00:15:22,240 --> 00:15:26,080
basically you should never use it but I

00:15:24,880 --> 00:15:28,330
wanted to make kind of a little

00:15:26,080 --> 00:15:35,950
amendment except one it's using a weird

00:15:28,330 --> 00:15:38,740
art project then you're good at least

00:15:35,950 --> 00:15:42,250
you have my permission you can blame me

00:15:38,740 --> 00:15:43,660
in fact it's a little punk rock because

00:15:42,250 --> 00:15:45,490
it's kind of impressive that you can do

00:15:43,660 --> 00:15:47,440
this with the language so here's how to

00:15:45,490 --> 00:15:49,120
be evil eval

00:15:47,440 --> 00:15:51,040
maybe you've avoided it for so long you

00:15:49,120 --> 00:15:54,040
actually don't know how it works

00:15:51,040 --> 00:15:56,050
you can give it a string of text and

00:15:54,040 --> 00:15:58,330
then that will be parsed as JavaScript

00:15:56,050 --> 00:15:59,920
runtime and then you'll get back if it

00:15:58,330 --> 00:16:02,230
for example here I'm returning or

00:15:59,920 --> 00:16:05,740
setting the value of x I can then get

00:16:02,230 --> 00:16:08,260
that value back out and then how to be a

00:16:05,740 --> 00:16:09,640
little bit less evil is you can use a

00:16:08,260 --> 00:16:12,580
new function which is actually what I am

00:16:09,640 --> 00:16:15,310
using but what's really cool is you can

00:16:12,580 --> 00:16:17,620
pass attributes as strings to function

00:16:15,310 --> 00:16:19,240
and then the last attribute can be code

00:16:17,620 --> 00:16:21,550
and then when you actually keep that

00:16:19,240 --> 00:16:23,950
function here returns the expect the

00:16:21,550 --> 00:16:25,210
result that adds these numbers so I'm

00:16:23,950 --> 00:16:28,000
not saying that you should probably go

00:16:25,210 --> 00:16:30,280
out with your like Equifax J s like

00:16:28,000 --> 00:16:31,420
server-side application and start

00:16:30,280 --> 00:16:33,520
emailing everything because it's

00:16:31,420 --> 00:16:37,210
incredibly inefficient but for what I

00:16:33,520 --> 00:16:38,500
needed to do it was perfect okay so the

00:16:37,210 --> 00:16:40,330
real point of what I was trying to do is

00:16:38,500 --> 00:16:43,390
I was trying to combine CSS transitions

00:16:40,330 --> 00:16:46,770
and drum machines so I will show that

00:16:43,390 --> 00:16:50,160
here I have a webcam over like a switch

00:16:46,770 --> 00:16:50,160
there's my face

00:16:50,700 --> 00:16:57,310
on seconds this was kind of a way to

00:16:53,920 --> 00:17:00,400
talk because just jammed all the

00:16:57,310 --> 00:17:03,810
technology I could find into a talk and

00:17:00,400 --> 00:17:08,050
hoped it would go well refresh this page

00:17:03,810 --> 00:17:11,020
okay unfortunately no well trust me that

00:17:08,050 --> 00:17:20,709
I have have a drum machine up here it's

00:17:11,020 --> 00:17:24,040
the roland tr-808 the

00:17:20,709 --> 00:17:26,740
these circles will just change their

00:17:24,040 --> 00:17:29,470
setting to a random size and position

00:17:26,740 --> 00:17:31,240
and to get back to what i was talking

00:17:29,470 --> 00:17:33,550
about with the screen this is that

00:17:31,240 --> 00:17:35,950
screen this is just fine H you know this

00:17:33,550 --> 00:17:38,080
is what I shove into the eye frame and

00:17:35,950 --> 00:17:42,250
then the the thing that makes it work is

00:17:38,080 --> 00:17:45,190
just this transition here it's just 200

00:17:42,250 --> 00:17:47,770
millisecond animation so I could change

00:17:45,190 --> 00:17:48,970
that if I wanted to but but it's not

00:17:47,770 --> 00:17:50,890
just about clicking the button it's

00:17:48,970 --> 00:17:55,090
about connecting the hardware so what I

00:17:50,890 --> 00:17:57,280
can do is I have a note here that takes

00:17:55,090 --> 00:17:58,990
the MIDI messages from here and splits

00:17:57,280 --> 00:18:00,820
it out into different channels so I know

00:17:58,990 --> 00:18:04,180
you can't see this but it slipped

00:18:00,820 --> 00:18:06,100
between bass drum snare drum and all the

00:18:04,180 --> 00:18:08,590
different sounds so what I will do is I

00:18:06,100 --> 00:18:10,000
will hook up the bass drum to this guy

00:18:08,590 --> 00:18:15,220
and each of these nodes I'm connecting

00:18:10,000 --> 00:18:18,550
it to those are just I'll show you those

00:18:15,220 --> 00:18:22,480
just oh wait sorry that's just to show

00:18:18,550 --> 00:18:25,420
you those all connect to this circle guy

00:18:22,480 --> 00:18:28,330
and the circle simply just sets the

00:18:25,420 --> 00:18:32,490
attribute of the ID or the element

00:18:28,330 --> 00:18:32,490
that's the XY and the scale of them

00:18:36,690 --> 00:18:48,530
oh sorry

00:18:42,480 --> 00:18:48,530
connecting everything all right

00:18:53,120 --> 00:19:09,360
so you show you whatever reason the pink

00:19:06,600 --> 00:19:11,610
one doesn't want to cooperate but so

00:19:09,360 --> 00:19:17,910
want to hit these buttons it's just

00:19:11,610 --> 00:19:19,880
changing that all over maps so that's

00:19:17,910 --> 00:19:21,740
the idea

00:19:19,880 --> 00:19:26,340
thank you

00:19:21,740 --> 00:19:28,730
[Applause]

00:19:26,340 --> 00:19:31,590
okay so this is just another example

00:19:28,730 --> 00:19:33,600
this is just a static set of SPG's but

00:19:31,590 --> 00:19:40,970
they have two different states so when

00:19:33,600 --> 00:19:40,970
they listen to this and then I can add

00:19:48,010 --> 00:20:02,500
yeah thank you and again if I especially

00:19:59,590 --> 00:20:04,240
that it literally it's just SPG's baked

00:20:02,500 --> 00:20:05,830
and straight from illustrator I didn't

00:20:04,240 --> 00:20:13,270
indent it you know who cares it's an art

00:20:05,830 --> 00:20:15,370
project that's fine okay so many there

00:20:13,270 --> 00:20:17,410
were some talks already about many the

00:20:15,370 --> 00:20:20,080
on the first day there was talks about

00:20:17,410 --> 00:20:21,490
Bimini which is a supercool project it's

00:20:20,080 --> 00:20:23,320
kind of confusing because there's MIDI

00:20:21,490 --> 00:20:26,020
as many files those are kind of like

00:20:23,320 --> 00:20:28,420
plays sound what I'm talking about here

00:20:26,020 --> 00:20:30,100
is MIDI signals so pretend that you are

00:20:28,420 --> 00:20:35,050
an electronic music composer and it's

00:20:30,100 --> 00:20:36,760
1981 and you have a keyboard a sin and

00:20:35,050 --> 00:20:39,190
it plays all some sounds and it's really

00:20:36,760 --> 00:20:41,020
cool but then you like okay I need to

00:20:39,190 --> 00:20:43,210
enhance my sound so I want some drums to

00:20:41,020 --> 00:20:46,780
go with this you get a 1981 drum machine

00:20:43,210 --> 00:20:48,220
and it sounds awesome then you get

00:20:46,780 --> 00:20:51,700
something else because you're addicted

00:20:48,220 --> 00:20:52,510
and you buy too much stuff the problem

00:20:51,700 --> 00:20:55,960
is that they all speak their own

00:20:52,510 --> 00:21:01,150
language so when you want them to talk

00:20:55,960 --> 00:21:03,520
together they can't and then in 1982 the

00:21:01,150 --> 00:21:04,960
MIDI standard comes about to solve this

00:21:03,520 --> 00:21:08,530
problem and now everything can play

00:21:04,960 --> 00:21:16,290
together I realized I think I have flux

00:21:08,530 --> 00:21:19,660
on that's why things look orange okay

00:21:16,290 --> 00:21:21,190
okay so how that works is you have your

00:21:19,660 --> 00:21:23,350
keyboard right and you play a note and

00:21:21,190 --> 00:21:25,330
it makes a sound but if it's MIDI

00:21:23,350 --> 00:21:26,680
enabled that also sends out a message so

00:21:25,330 --> 00:21:29,800
it's going to say hey you've played

00:21:26,680 --> 00:21:34,810
middle C and then you play a lower note

00:21:29,800 --> 00:21:37,180
and hey you've played F and I don't want

00:21:34,810 --> 00:21:39,340
to go super in-depth into it but the

00:21:37,180 --> 00:21:41,560
message is it's just data

00:21:39,340 --> 00:21:43,690
it describes like you press note on

00:21:41,560 --> 00:21:45,640
that's the type Channel there can be 16

00:21:43,690 --> 00:21:49,060
channels how hard you pressed it and

00:21:45,640 --> 00:21:50,350
that's just binary and there's tons of

00:21:49,060 --> 00:21:53,410
different messages I don't want to cover

00:21:50,350 --> 00:21:55,000
them all but like knobs and clock and

00:21:53,410 --> 00:21:57,250
tempo and that thing that's all there

00:21:55,000 --> 00:21:59,350
but what's great is that you can connect

00:21:57,250 --> 00:22:00,970
to that see web MIDI and what that looks

00:21:59,350 --> 00:22:04,510
like is you request many acts

00:22:00,970 --> 00:22:07,150
then you get the mini access and then

00:22:04,510 --> 00:22:10,360
for each of the inputs you can just

00:22:07,150 --> 00:22:12,220
listen for a mini message and then you

00:22:10,360 --> 00:22:14,049
get back event that data is just a

00:22:12,220 --> 00:22:15,130
special array that has the three bytes

00:22:14,049 --> 00:22:17,980
that I showed you on the previous slide

00:22:15,130 --> 00:22:21,309
and that's it it's super low level it's

00:22:17,980 --> 00:22:25,630
great oh I forgot I forgot to show you

00:22:21,309 --> 00:22:33,820
the gamepad demo actually maybe you do

00:22:25,630 --> 00:22:40,169
that okay okay and so here I have the

00:22:33,820 --> 00:22:40,169
gamepad mapped I saw it for a second

00:22:40,620 --> 00:22:44,919
there we go okay so I have this gamepad

00:22:43,659 --> 00:22:46,630
here this is just a PlayStation 4

00:22:44,919 --> 00:22:50,590
controller and I have the axis here to

00:22:46,630 --> 00:22:51,669
find to then set the background probably

00:22:50,590 --> 00:23:01,450
isn't important to show you that but I

00:22:51,669 --> 00:23:03,460
did I remember this part all right yeah

00:23:01,450 --> 00:23:06,370
so how that works is you can just listen

00:23:03,460 --> 00:23:07,840
for gamepad connected you can get the

00:23:06,370 --> 00:23:09,010
index because there's basically I think

00:23:07,840 --> 00:23:12,340
at least on Chrome there's kind of four

00:23:09,010 --> 00:23:15,370
slots of those game pads go go into and

00:23:12,340 --> 00:23:18,070
then you can requestanimationframe you

00:23:15,370 --> 00:23:21,309
basically are gonna pull for the values

00:23:18,070 --> 00:23:24,340
that's that so here you can get the game

00:23:21,309 --> 00:23:27,490
as you do that each time and then you

00:23:24,340 --> 00:23:29,260
can log out the values of that the axes

00:23:27,490 --> 00:23:31,630
or the buttons just a number from

00:23:29,260 --> 00:23:35,380
negative one to one and then you just

00:23:31,630 --> 00:23:42,309
keep pulling it so it's super easy

00:23:35,380 --> 00:23:44,669
next is video in canvas I've never had

00:23:42,309 --> 00:23:48,280
that happen before

00:23:44,669 --> 00:23:52,080
let me try connecting this to another

00:23:48,280 --> 00:23:52,080
USB port and maybe that was

00:24:04,419 --> 00:24:12,740
that seems promising sweet okay all

00:24:08,779 --> 00:24:16,970
right so I'll show you this what this is

00:24:12,740 --> 00:24:19,100
is this is just reading my webcam but

00:24:16,970 --> 00:24:20,840
there's a layer on top that is you say

00:24:19,100 --> 00:24:23,270
it's putting it to canvas and then on

00:24:20,840 --> 00:24:25,100
canvas it's reading the pixel values and

00:24:23,270 --> 00:24:27,529
then just summing up the color of that

00:24:25,100 --> 00:24:35,480
pixel just because why not it looks cool

00:24:27,529 --> 00:24:38,809
so hello Jay has come can't make you

00:24:35,480 --> 00:24:42,289
guys out so yeah that's what this looks

00:24:38,809 --> 00:24:44,720
like to show you the code behind that to

00:24:42,289 --> 00:24:47,840
grab the webcam is also pretty easy

00:24:44,720 --> 00:24:50,630
you ask for user media you ask for video

00:24:47,840 --> 00:24:52,669
you get a stream back you can dump that

00:24:50,630 --> 00:24:54,770
into a video element and just tell it to

00:24:52,669 --> 00:24:58,120
play and it works and then of course

00:24:54,770 --> 00:25:01,669
error callback which you saw right demo

00:24:58,120 --> 00:25:03,080
canvas is easy as well I'm sure canvas

00:25:01,669 --> 00:25:04,100
has been out for a while so you've

00:25:03,080 --> 00:25:05,960
probably messed with it but just in case

00:25:04,100 --> 00:25:07,070
you have it you can make a canvas

00:25:05,960 --> 00:25:09,799
element you can get to make a video

00:25:07,070 --> 00:25:12,409
element you get the context is how you

00:25:09,799 --> 00:25:14,720
work with canvas and then you can draw

00:25:12,409 --> 00:25:17,149
on to the context which draws with the

00:25:14,720 --> 00:25:19,070
canvas an image and that first attribute

00:25:17,149 --> 00:25:20,960
is our video tag so that's what I'm

00:25:19,070 --> 00:25:23,240
dumping the webcam into and I'm just

00:25:20,960 --> 00:25:25,250
reading it back off of that and then I

00:25:23,240 --> 00:25:27,830
can do whatever I want so here's just an

00:25:25,250 --> 00:25:33,950
example of how to grab the color of a

00:25:27,830 --> 00:25:39,080
single pixel and here's another video

00:25:33,950 --> 00:25:42,850
example and this one should work with me

00:25:39,080 --> 00:25:42,850
so let's try it

00:25:45,290 --> 00:25:51,770
okay so what this does is when it hits a

00:25:48,700 --> 00:25:54,020
kick drum it's gonna splash the screen

00:25:51,770 --> 00:25:56,780
but when it gets that chord sound it's

00:25:54,020 --> 00:25:59,480
gonna randomly rotate with a rotate why

00:25:56,780 --> 00:26:01,850
a CSS transition the whole thing and on

00:25:59,480 --> 00:26:04,370
top of that is my pixel canvas and I'm

00:26:01,850 --> 00:26:09,040
kind of changing the height based on

00:26:04,370 --> 00:26:09,040
perspective where that is and hopefully

00:26:23,950 --> 00:26:33,200
thank you so thanks for being here in

00:26:29,660 --> 00:26:35,419
the first year scoff music video all

00:26:33,200 --> 00:26:38,660
right so what are the problems with this

00:26:35,419 --> 00:26:40,309
approach I don't want to get too into it

00:26:38,660 --> 00:26:42,230
because it's nasty and annoying but

00:26:40,309 --> 00:26:45,890
putting a web component in a reactor is

00:26:42,230 --> 00:26:47,360
a terrible idea the virtual DOM and the

00:26:45,890 --> 00:26:48,590
way we act works I think it somehow

00:26:47,360 --> 00:26:50,840
triggers those connected and

00:26:48,590 --> 00:26:53,179
disconnected callbacks all the time

00:26:50,840 --> 00:26:55,130
so I just can't use them I try to get

00:26:53,179 --> 00:26:56,720
around it for a couple of days and I run

00:26:55,130 --> 00:27:00,350
out of time is like okay I'm just not

00:26:56,720 --> 00:27:02,120
going to use it so instead you yeah

00:27:00,350 --> 00:27:04,850
sorry then you just don't use them

00:27:02,120 --> 00:27:07,039
another problem is that the nodes are

00:27:04,850 --> 00:27:09,020
all evil if you edit a node and then

00:27:07,039 --> 00:27:11,240
save it that causes a problem because

00:27:09,020 --> 00:27:14,630
the custom elements already defined and

00:27:11,240 --> 00:27:16,940
I can't redefine it so you can just

00:27:14,630 --> 00:27:20,679
depend the date to the name of the tag

00:27:16,940 --> 00:27:20,679
that you create and you're good

00:27:20,809 --> 00:27:24,860
get attribute in the cut and the element

00:27:23,419 --> 00:27:26,960
always return strings that's just kind

00:27:24,860 --> 00:27:30,919
of how get attribute works so I don't

00:27:26,960 --> 00:27:32,450
use it I get around it so I have my own

00:27:30,919 --> 00:27:34,070
get attribute function and then I have

00:27:32,450 --> 00:27:38,419
the native one that I've overridden that

00:27:34,070 --> 00:27:40,480
you can still get to you also can't at

00:27:38,419 --> 00:27:43,520
least I couldn't catch the errors so

00:27:40,480 --> 00:27:45,380
when when you wrote like some JavaScript

00:27:43,520 --> 00:27:46,909
in the app and then it ran and then you

00:27:45,380 --> 00:27:48,710
got a value it would throw an error at

00:27:46,909 --> 00:27:51,320
the whole thing we kind of just died so

00:27:48,710 --> 00:27:52,970
I needed to basically wrap actually

00:27:51,320 --> 00:27:56,409
change call back and so I have my own

00:27:52,970 --> 00:27:56,409
attribute change call back as well

00:27:56,919 --> 00:28:03,799
performance get a faster computer

00:28:00,909 --> 00:28:05,870
actually no I did do a little bit of

00:28:03,799 --> 00:28:08,690
work with this so react has should

00:28:05,870 --> 00:28:11,210
component update which lets you try to

00:28:08,690 --> 00:28:12,650
optimize the truth is I didn't get that

00:28:11,210 --> 00:28:14,179
far into it and there's only so many

00:28:12,650 --> 00:28:15,950
requests animation frames you can run

00:28:14,179 --> 00:28:19,010
before your browser crawls

00:28:15,950 --> 00:28:20,549
but that's future would so yeah there's

00:28:19,010 --> 00:28:23,399
a lot of problems

00:28:20,549 --> 00:28:24,929
whatever prior art if you've if you've

00:28:23,399 --> 00:28:26,039
done any sort of visualization stuff

00:28:24,929 --> 00:28:27,539
this probably looks somewhat familiar

00:28:26,039 --> 00:28:29,279
turns out there's a lot of things that

00:28:27,539 --> 00:28:30,779
do this when I started out I was

00:28:29,279 --> 00:28:32,459
thinking oh man this is really cool

00:28:30,779 --> 00:28:34,709
I've never seen like a visual like

00:28:32,459 --> 00:28:38,639
modular software and know there's lots

00:28:34,709 --> 00:28:39,839
of examples but these are really cool so

00:28:38,639 --> 00:28:41,940
she I just recently learned about touch

00:28:39,839 --> 00:28:42,899
designer looks super awesome so I

00:28:41,940 --> 00:28:47,099
recommend you check it out if you're

00:28:42,899 --> 00:28:49,289
interested into this last example is

00:28:47,099 --> 00:28:52,229
they have a very cheesy synth wave song

00:28:49,289 --> 00:28:55,259
with a demo so hopefully this works

00:28:52,229 --> 00:28:57,929
so that basically just treating this

00:28:55,259 --> 00:29:00,419
grid thing as input and output I have

00:28:57,929 --> 00:29:02,369
these walls here so it's a little bit

00:29:00,419 --> 00:29:05,399
hard to see but up in the corner I can

00:29:02,369 --> 00:29:08,159
trigger the walls I can trigger the

00:29:05,399 --> 00:29:10,679
background so all the examples have

00:29:08,159 --> 00:29:14,129
shown hardware talking to JavaScript no

00:29:10,679 --> 00:29:16,169
I don't use but you can use a loopback

00:29:14,129 --> 00:29:18,599
meeting device for the software to talk

00:29:16,169 --> 00:29:25,200
to itself so this is a logic file which

00:29:18,599 --> 00:29:27,899
I will play so the walls are done on

00:29:25,200 --> 00:29:30,179
every drum head and the background is

00:29:27,899 --> 00:29:32,669
also pulsing with the drum head and I'll

00:29:30,179 --> 00:29:34,739
use a hue rotate CSS transform in a

00:29:32,669 --> 00:29:37,229
second on the MIDI notes that come in to

00:29:34,739 --> 00:29:40,190
change the color and then after that

00:29:37,229 --> 00:29:40,190
there'll be one more thing

00:30:12,249 --> 00:30:16,509
that's that's this part on the column

00:30:24,640 --> 00:30:29,030
again that's all the code examples the

00:30:27,110 --> 00:30:31,420
app is a big kid app it's on a super

00:30:29,030 --> 00:30:34,880
cheap digital ocean box so I might crash

00:30:31,420 --> 00:30:37,130
the code is public it's a big kid I'd

00:30:34,880 --> 00:30:39,440
love to get pull requests it was made on

00:30:37,130 --> 00:30:40,430
a deadline for this so it's a little bit

00:30:39,440 --> 00:30:42,020
rough

00:30:40,430 --> 00:30:43,220
I don't really is Twitter that much

00:30:42,020 --> 00:30:45,790
anymore so if you want to follow me on

00:30:43,220 --> 00:30:48,770
instagram i'm at zap underscore danger

00:30:45,790 --> 00:30:50,420
and that's all i have the only thing i

00:30:48,770 --> 00:30:52,100
didn't show you was the audio so you can

00:30:50,420 --> 00:30:52,550
also read the microphone and put it in

00:30:52,100 --> 00:30:54,930
there

00:30:52,550 --> 00:31:04,559
so that's all I got

00:30:54,930 --> 00:31:04,559

YouTube URL: https://www.youtube.com/watch?v=8hYf-r-chFo


