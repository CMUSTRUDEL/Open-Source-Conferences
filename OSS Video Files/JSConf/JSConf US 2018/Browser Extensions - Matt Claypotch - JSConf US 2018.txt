Title: Browser Extensions - Matt Claypotch - JSConf US 2018
Publication date: 2018-11-05
Playlist: JSConf US 2018
Description: 
	https://potch.github.io/cross-browser-extensions/#1
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:25,570
[Music]

00:00:22,079 --> 00:00:27,460
good morning everyone who's ready for 10

00:00:25,570 --> 00:00:35,200
tips to get you can use today to get

00:00:27,460 --> 00:00:37,350
rich cool so cross browser browser

00:00:35,200 --> 00:00:41,170
extensions

00:00:37,350 --> 00:00:47,890
I'm posh Matt claypot go by posh there

00:00:41,170 --> 00:00:49,870
are hundred million Matt's I have been

00:00:47,890 --> 00:00:51,610
at Mozilla where I've been a developer

00:00:49,870 --> 00:00:54,250
advocate for three years but I've been

00:00:51,610 --> 00:00:58,660
at Mozilla for eight years which in tech

00:00:54,250 --> 00:01:00,670
years is one hundred thousand years you

00:00:58,660 --> 00:01:07,090
may know me as the creator of does honey

00:01:00,670 --> 00:01:09,969
badger care comm yeah I work for Mozilla

00:01:07,090 --> 00:01:12,280
we are a non-profit who makes a product

00:01:09,969 --> 00:01:14,829
you may have heard of called Firefox we

00:01:12,280 --> 00:01:17,049
are committed to an independent and open

00:01:14,829 --> 00:01:20,440
web and we've been doing that for quite

00:01:17,049 --> 00:01:22,420
some time 20-some odd years if you

00:01:20,440 --> 00:01:24,970
haven't used Firefox recently try it

00:01:22,420 --> 00:01:28,540
there now I've done my job the rest of

00:01:24,970 --> 00:01:30,549
this is just gravy cool so I am here

00:01:28,540 --> 00:01:32,590
today to talk to you about cross browser

00:01:30,549 --> 00:01:34,360
browser extensions so we're gonna start

00:01:32,590 --> 00:01:35,650
with the eighth grade book the eighth

00:01:34,360 --> 00:01:42,909
grade book report version of this which

00:01:35,650 --> 00:01:44,950
is what is an extension an extension is

00:01:42,909 --> 00:01:47,890
a bundle of code and data that modifies

00:01:44,950 --> 00:01:51,220
or augments the functionality of a piece

00:01:47,890 --> 00:01:53,380
of software that's so generic has to be

00:01:51,220 --> 00:01:55,210
useless but we can compare and contrast

00:01:53,380 --> 00:01:58,150
to other things to learn a little bit

00:01:55,210 --> 00:02:00,280
more what's an extension versus what's a

00:01:58,150 --> 00:02:03,460
plug-in a plug-in is a thing that

00:02:00,280 --> 00:02:05,320
doesn't exist anymore but you may have

00:02:03,460 --> 00:02:07,060
flash on your system which is sort of

00:02:05,320 --> 00:02:10,390
the last remaining plug in plugins

00:02:07,060 --> 00:02:12,400
provide sort of extra capabilities to a

00:02:10,390 --> 00:02:14,680
browser but they act in a way that's

00:02:12,400 --> 00:02:16,510
completely disjoint from the browser the

00:02:14,680 --> 00:02:19,510
browser goes hey here's a rectangle on

00:02:16,510 --> 00:02:22,150
the screen you can use that and we'll

00:02:19,510 --> 00:02:24,280
leave you alone and they say great I'm

00:02:22,150 --> 00:02:25,209
gonna overrun my buffers and compromise

00:02:24,280 --> 00:02:29,890
your browser

00:02:25,209 --> 00:02:32,140
and that's how plugins work so that's we

00:02:29,890 --> 00:02:34,150
confused with extensions and extensions

00:02:32,140 --> 00:02:35,709
versus add-ons for the longest time at

00:02:34,150 --> 00:02:38,890
Mozilla we have sort of referred to

00:02:35,709 --> 00:02:41,680
extensions as add-ons and we we use that

00:02:38,890 --> 00:02:44,530
is this big catch-all term because we

00:02:41,680 --> 00:02:45,730
also use the word themes which is in a

00:02:44,530 --> 00:02:47,530
way it's the visual you know visually

00:02:45,730 --> 00:02:49,239
change the browser or dictionaries or

00:02:47,530 --> 00:02:51,549
language packs and all those things so

00:02:49,239 --> 00:02:53,439
really when I if you ever hear you say

00:02:51,549 --> 00:02:55,299
add-on instead of extension I kind of

00:02:53,439 --> 00:02:58,480
usually just mean extension but

00:02:55,299 --> 00:03:00,310
extensions are a subset of add-ons as

00:02:58,480 --> 00:03:05,980
you can see from that subset symbol I

00:03:00,310 --> 00:03:07,989
have read math ever so we're gonna start

00:03:05,980 --> 00:03:10,120
with a brief history of extensions just

00:03:07,989 --> 00:03:11,260
to tell you how we got to where we are

00:03:10,120 --> 00:03:14,889
today

00:03:11,260 --> 00:03:16,599
spoiler today we got to a pretty cool

00:03:14,889 --> 00:03:18,730
place what is with all things with the

00:03:16,599 --> 00:03:20,739
web I want you really to be excited for

00:03:18,730 --> 00:03:23,230
eighteen months from now or two years

00:03:20,739 --> 00:03:25,030
from now but I'm here to get people

00:03:23,230 --> 00:03:27,250
already curious and excited about

00:03:25,030 --> 00:03:29,799
extensions so they can start playing

00:03:27,250 --> 00:03:33,040
with things as the ecosystem matures so

00:03:29,799 --> 00:03:36,690
a brief history of extensions fun fact

00:03:33,040 --> 00:03:40,030
not opera but Internet Explorer had

00:03:36,690 --> 00:03:40,840
extensions first granted they were

00:03:40,030 --> 00:03:46,449
ActiveX

00:03:40,840 --> 00:03:49,209
plugins and they took a form of com

00:03:46,449 --> 00:03:52,389
codes they're really C++ bundles that

00:03:49,209 --> 00:03:56,319
you attach to IE but if you ever used

00:03:52,389 --> 00:04:01,599
the computer with 12 toolbars those

00:03:56,319 --> 00:04:03,370
extensions so really in 1999 IE 5

00:04:01,599 --> 00:04:05,769
actually broke the ground here and said

00:04:03,370 --> 00:04:06,579
we are going to allow extensibility in

00:04:05,769 --> 00:04:08,829
the browser

00:04:06,579 --> 00:04:10,989
turns out the browser is a pretty cool

00:04:08,829 --> 00:04:15,729
thing we haven't decided to commit

00:04:10,989 --> 00:04:17,680
antitrust yet but we're about to but so

00:04:15,729 --> 00:04:21,190
first we're in the extend phase of

00:04:17,680 --> 00:04:24,150
embrace extend extinguish and so

00:04:21,190 --> 00:04:27,849
extensions were born not to be outdone

00:04:24,150 --> 00:04:29,680
five years later the Mozilla project

00:04:27,849 --> 00:04:32,289
which formed out of the ashes of

00:04:29,680 --> 00:04:34,599
Netscape fun fact they're still Netscape

00:04:32,289 --> 00:04:38,310
code in Firefox the good stuff that's

00:04:34,599 --> 00:04:38,310
left behind all the bad stuff in replace

00:04:38,930 --> 00:04:43,650
the Mozilla project had this big

00:04:41,370 --> 00:04:45,450
monolithic suite that was a male browser

00:04:43,650 --> 00:04:47,970
and a composer and all of these things

00:04:45,450 --> 00:04:50,850
and some went in there was like what if

00:04:47,970 --> 00:04:52,980
we just shipped a good web browser so

00:04:50,850 --> 00:04:54,630
they took the Mozilla suite and they

00:04:52,980 --> 00:04:55,800
took all the stuff that wasn't the

00:04:54,630 --> 00:04:58,170
browser out and they made this thing

00:04:55,800 --> 00:05:00,930
called Firefox and that came out in 2004

00:04:58,170 --> 00:05:02,970
and in the Mozilla suite there was a

00:05:00,930 --> 00:05:06,260
concept of extensions so in version 1 a

00:05:02,970 --> 00:05:09,540
Firefox there is a concept of extensions

00:05:06,260 --> 00:05:11,220
opera 5 years later after that in their

00:05:09,540 --> 00:05:15,270
version 10 so this is opera in the

00:05:11,220 --> 00:05:18,960
Presto era still they were using they

00:05:15,270 --> 00:05:20,880
released a model for extensions right

00:05:18,960 --> 00:05:22,800
behind them two years after their launch

00:05:20,880 --> 00:05:26,100
google chrome camera on the chrome icon

00:05:22,800 --> 00:05:28,080
was shiny I really like that I just I

00:05:26,100 --> 00:05:32,520
mean it looks a little bit more GLaDOS

00:05:28,080 --> 00:05:36,030
but it's also like IIIi missed I missed

00:05:32,520 --> 00:05:38,430
the skeuomorphic icons they released

00:05:36,030 --> 00:05:39,990
their extension model this is sort of

00:05:38,430 --> 00:05:42,420
actually a really important moment in

00:05:39,990 --> 00:05:47,520
extensions and you're gonna see why in a

00:05:42,420 --> 00:05:49,530
little bit also in 2010 Safari had

00:05:47,520 --> 00:05:51,930
actually released their own version of

00:05:49,530 --> 00:05:54,300
extensions which is really not just

00:05:51,930 --> 00:05:55,980
similar to Chrome's version and we're

00:05:54,300 --> 00:05:59,490
gonna touch upon that again a bit more

00:05:55,980 --> 00:06:02,010
later as well so first we're going to

00:05:59,490 --> 00:06:03,660
talk about in detail Firefox extensions

00:06:02,010 --> 00:06:06,420
and that's because I work for Mozilla

00:06:03,660 --> 00:06:08,490
and that's literally my job is to talk

00:06:06,420 --> 00:06:10,650
to you about Firefox extensions I also

00:06:08,490 --> 00:06:12,630
think they've come the furthest apart

00:06:10,650 --> 00:06:15,960
from perhaps sort of the IE two edge

00:06:12,630 --> 00:06:17,630
transition Firefox extensions I think

00:06:15,960 --> 00:06:21,420
have come probably the furthest from

00:06:17,630 --> 00:06:26,930
what they were to what they are so

00:06:21,420 --> 00:06:30,810
Firefox 1 it's fun fun fact to this day

00:06:26,930 --> 00:06:33,830
news outlets just use this version box

00:06:30,810 --> 00:06:36,060
logo which was drawn I think on a napkin

00:06:33,830 --> 00:06:38,190
no offense to the original drawers but

00:06:36,060 --> 00:06:41,160
you know it's it has a certain 2004 is

00:06:38,190 --> 00:06:43,350
gonna say quad to it I registered

00:06:41,160 --> 00:06:47,760
Firefox logo com so people can find the

00:06:43,350 --> 00:06:50,190
good version anyway Firefox one had

00:06:47,760 --> 00:06:52,349
extensions but how did they work they

00:06:50,190 --> 00:06:54,750
use something called zoo

00:06:52,349 --> 00:06:59,150
quick Shah has if you've ever heard of

00:06:54,750 --> 00:07:02,819
Zul or use the Zul on purpose

00:06:59,150 --> 00:07:08,039
hey ah the zoo was super cool right this

00:07:02,819 --> 00:07:11,159
is 2004 XML is going to save the web XML

00:07:08,039 --> 00:07:14,520
HTML xhtml is where we're going I picked

00:07:11,159 --> 00:07:18,060
up my O'Reilly copy of the XSLT handbook

00:07:14,520 --> 00:07:20,009
because that was where we were headed

00:07:18,060 --> 00:07:22,949
everyone loved making a small mistake

00:07:20,009 --> 00:07:26,430
and getting a yellow screen instead of a

00:07:22,949 --> 00:07:28,530
webpage so we were so jazzed by that XML

00:07:26,430 --> 00:07:31,110
is the future why not build not just the

00:07:28,530 --> 00:07:34,289
web pages in XML but actually the entire

00:07:31,110 --> 00:07:36,780
user interface of the browser in XML

00:07:34,289 --> 00:07:38,969
which is actually true to this day we're

00:07:36,780 --> 00:07:40,800
slowly working to fix that but on the

00:07:38,969 --> 00:07:43,199
entire interface of Firefox actually

00:07:40,800 --> 00:07:46,139
rendered by a web renderer that knows

00:07:43,199 --> 00:07:48,360
how to use XML and XSLT and things like

00:07:46,139 --> 00:07:51,449
that so the Firefox UI is actually a web

00:07:48,360 --> 00:07:53,129
page sort of and then it uses that same

00:07:51,449 --> 00:07:56,430
engine to render the web pages

00:07:53,129 --> 00:08:03,900
themselves it's powered by zoo and zoo

00:07:56,430 --> 00:08:06,150
stands for XML user interface language

00:08:03,900 --> 00:08:10,349
so it's the extensible markup language

00:08:06,150 --> 00:08:12,060
user interface language and this allows

00:08:10,349 --> 00:08:13,740
you to define actually relatively

00:08:12,060 --> 00:08:15,270
sophisticated kind of early web

00:08:13,740 --> 00:08:18,210
component things they're super neat

00:08:15,270 --> 00:08:20,339
there's a binding language you define

00:08:18,210 --> 00:08:22,379
all this behavior and you can define

00:08:20,339 --> 00:08:24,690
this behavior in C++ and JavaScript and

00:08:22,379 --> 00:08:27,479
define a structure in XML and then apply

00:08:24,690 --> 00:08:30,210
it to a page using CSS you say like the

00:08:27,479 --> 00:08:32,370
behavior of this element in CSS is

00:08:30,210 --> 00:08:36,269
defined by this cieth this C++ file

00:08:32,370 --> 00:08:39,029
super wacky totally works but a little

00:08:36,269 --> 00:08:41,820
little stale and so extensions worked

00:08:39,029 --> 00:08:44,730
the same way when you wanted to extend

00:08:41,820 --> 00:08:45,990
Firefox you provided a bundle of Zul and

00:08:44,730 --> 00:08:48,029
that bundle of Zul was roughly

00:08:45,990 --> 00:08:50,339
structured the same way the browser was

00:08:48,029 --> 00:08:52,500
right if you wanted to change the the

00:08:50,339 --> 00:08:54,240
skin of the browser you put some files

00:08:52,500 --> 00:08:55,410
in a folder called skin it was looked a

00:08:54,240 --> 00:08:57,720
lot but like most like the modding

00:08:55,410 --> 00:09:01,860
community and in fact it was really just

00:08:57,720 --> 00:09:03,380
a big stack of patches monkey patches so

00:09:01,860 --> 00:09:07,040
you had the browser

00:09:03,380 --> 00:09:09,170
and then an extension and then another

00:09:07,040 --> 00:09:10,820
extension that may have been dimly aware

00:09:09,170 --> 00:09:11,870
that the other extension exists maybe to

00:09:10,820 --> 00:09:15,740
touch to different parts of the browser

00:09:11,870 --> 00:09:18,440
and then another extension and this

00:09:15,740 --> 00:09:20,510
diagram sort of shows what might happen

00:09:18,440 --> 00:09:22,070
in that situation and the answer is

00:09:20,510 --> 00:09:24,260
they're gonna stomp all over each other

00:09:22,070 --> 00:09:25,820
right unless you know how to behave

00:09:24,260 --> 00:09:27,920
unless you know how to cooperate

00:09:25,820 --> 00:09:30,080
you're gonna redefine a method that

00:09:27,920 --> 00:09:32,060
another was already redefined and maybe

00:09:30,080 --> 00:09:36,050
you did an alias the most recent version

00:09:32,060 --> 00:09:37,130
etc and you got a lot of griddle flaky

00:09:36,050 --> 00:09:40,160
crashy

00:09:37,130 --> 00:09:42,530
buggy extensions but we had extensions

00:09:40,160 --> 00:09:43,670
and some sanctions actually and the only

00:09:42,530 --> 00:09:46,040
two thousand were one of the defining

00:09:43,670 --> 00:09:48,710
things about Firefox right ad blockers

00:09:46,040 --> 00:09:50,990
and conte and you know user scripts and

00:09:48,710 --> 00:09:52,250
grease monkey it was it was a really

00:09:50,990 --> 00:09:54,910
really awesome time and people have

00:09:52,250 --> 00:09:58,130
figured out how to tame these sort of

00:09:54,910 --> 00:10:02,810
grody extensions that could do anything

00:09:58,130 --> 00:10:06,920
but didn't really know how to behave so

00:10:02,810 --> 00:10:09,200
we had phenomenal cosmic power it's not

00:10:06,920 --> 00:10:12,290
I love Aladdin boat but unfortunately

00:10:09,200 --> 00:10:14,870
it's whether you want it or not matter

00:10:12,290 --> 00:10:16,880
how simple your extension was maybe your

00:10:14,870 --> 00:10:21,560
extent should just turn the word cloud -

00:10:16,880 --> 00:10:24,140
but right doesn't matter you still could

00:10:21,560 --> 00:10:26,780
invoke all of the C++ powers of Firefox

00:10:24,140 --> 00:10:31,370
and you know RM dash RF the entire user

00:10:26,780 --> 00:10:33,170
hard drive because maybe maybe you were

00:10:31,370 --> 00:10:35,960
executing the word but as opposed to

00:10:33,170 --> 00:10:39,260
just replacing it so really kind of

00:10:35,960 --> 00:10:43,430
dangerous and fortunately it was the

00:10:39,260 --> 00:10:46,130
naive era of the late to Thor late early

00:10:43,430 --> 00:10:48,290
2000s right and so we weren't exploiting

00:10:46,130 --> 00:10:50,390
literally everything we possibly could

00:10:48,290 --> 00:10:51,740
yet and we survived with this model for

00:10:50,390 --> 00:10:56,750
a long time without severe security

00:10:51,740 --> 00:11:00,440
problems safe fortunately in the year

00:10:56,750 --> 00:11:01,400
2010 inspired by some of the other sdk

00:11:00,440 --> 00:11:03,500
work that was coming out of other

00:11:01,400 --> 00:11:05,060
browsers for building extensions that

00:11:03,500 --> 00:11:06,350
sort of looked like JavaScript and

00:11:05,060 --> 00:11:09,020
looked like something that web

00:11:06,350 --> 00:11:10,760
developers could use we launched

00:11:09,020 --> 00:11:12,770
originally called jetpack and then

00:11:10,760 --> 00:11:15,290
became called the add-ons SDK and

00:11:12,770 --> 00:11:17,030
originally launched in 2010 I mean any

00:11:15,290 --> 00:11:21,060
of you familiar with that

00:11:17,030 --> 00:11:23,820
okay cool wonwoo perfect um good news

00:11:21,060 --> 00:11:26,400
I'm here to explain it so the SDK was

00:11:23,820 --> 00:11:28,260
informed and influenced by everything

00:11:26,400 --> 00:11:31,830
that had happened on the web since 2004

00:11:28,260 --> 00:11:33,780
the explosion of Ajax event models all

00:11:31,830 --> 00:11:37,620
this wonderful stuff as well as these

00:11:33,780 --> 00:11:39,930
other extension models so it had an API

00:11:37,620 --> 00:11:41,220
surface right we weren't just stomping

00:11:39,930 --> 00:11:42,990
over everything you could actually have

00:11:41,220 --> 00:11:44,160
a there's no specific endpoint from

00:11:42,990 --> 00:11:46,860
messing with tabs and a specific

00:11:44,160 --> 00:11:49,230
endpoint for you know maybe opening a

00:11:46,860 --> 00:11:52,500
port to another process on your computer

00:11:49,230 --> 00:11:55,560
and it was really well defined and then

00:11:52,500 --> 00:11:58,050
it wasn't really updated right we're

00:11:55,560 --> 00:12:00,240
like we did it we shipped an API and we

00:11:58,050 --> 00:12:02,250
were really really slow to ship

00:12:00,240 --> 00:12:04,890
incremental updates to the API that kept

00:12:02,250 --> 00:12:07,470
up with the times this was what happens

00:12:04,890 --> 00:12:09,060
when you have a labs team and then you

00:12:07,470 --> 00:12:12,120
disband the labs team after have you

00:12:09,060 --> 00:12:13,200
shipped which is sort of a shame not

00:12:12,120 --> 00:12:16,380
it's I don't want to denigrate my

00:12:13,200 --> 00:12:18,810
colleagues but we sort of in from the

00:12:16,380 --> 00:12:20,760
position of 2018 can look back and go

00:12:18,810 --> 00:12:24,210
like oh yeah okay we could have done

00:12:20,760 --> 00:12:26,430
that better and so we had this wonderful

00:12:24,210 --> 00:12:29,340
API surface which was miles ahead of

00:12:26,430 --> 00:12:31,920
where we had been and then we had this

00:12:29,340 --> 00:12:36,750
function called component utilities dot

00:12:31,920 --> 00:12:42,030
import and this was phenomenal cosmic

00:12:36,750 --> 00:12:44,250
power um this would let you pull in all

00:12:42,030 --> 00:12:46,400
of the abilities that Zoo add-ons had

00:12:44,250 --> 00:12:47,730
all of them so you have this nice little

00:12:46,400 --> 00:12:49,440
componentized

00:12:47,730 --> 00:12:51,480
API surface bundle that you could reason

00:12:49,440 --> 00:12:53,970
about and then they can construct a call

00:12:51,480 --> 00:12:57,420
to see you dot import and do anything

00:12:53,970 --> 00:12:59,190
they wanted again which meant that we

00:12:57,420 --> 00:13:00,690
didn't necessarily have to update the

00:12:59,190 --> 00:13:02,460
api's because people could just pull in

00:13:00,690 --> 00:13:04,530
the superpowers they needed as opposed

00:13:02,460 --> 00:13:06,810
to getting the API however once again

00:13:04,530 --> 00:13:08,790
phenomenal cosmic powers whether you

00:13:06,810 --> 00:13:11,670
want them or not and whether you know

00:13:08,790 --> 00:13:13,770
how to use them safely or not sort of

00:13:11,670 --> 00:13:15,090
the discussion of safety and computer

00:13:13,770 --> 00:13:17,070
programming is the thing we talk about

00:13:15,090 --> 00:13:18,420
all the time now but back then it was

00:13:17,070 --> 00:13:20,460
still sort of assumed that you would

00:13:18,420 --> 00:13:25,830
just you know will just write safe code

00:13:20,460 --> 00:13:29,240
we find meanwhile like I said chrome

00:13:25,830 --> 00:13:32,149
headship its extension API

00:13:29,240 --> 00:13:33,490
and Chrome extensions how many of you

00:13:32,149 --> 00:13:37,899
for written or use a Chrome extension

00:13:33,490 --> 00:13:41,959
yeah okay cool they are based on HTML

00:13:37,899 --> 00:13:44,809
they use CSS and JavaScript web

00:13:41,959 --> 00:13:47,499
technology so which is great because web

00:13:44,809 --> 00:13:50,179
developers are probably the most common

00:13:47,499 --> 00:13:51,649
implementers of extensions and the early

00:13:50,179 --> 00:13:52,790
days it seemed like maybe browser makers

00:13:51,649 --> 00:13:54,019
we're gonna be able to get extensions

00:13:52,790 --> 00:13:55,189
and it was like oh no wait web

00:13:54,019 --> 00:13:58,399
developers are the audience we're

00:13:55,189 --> 00:14:01,670
looking for more importantly permissions

00:13:58,399 --> 00:14:03,829
so you couldn't just invoke superpowers

00:14:01,670 --> 00:14:07,550
when you wanted them if you wanted to be

00:14:03,829 --> 00:14:09,619
able to capture the page at install time

00:14:07,550 --> 00:14:11,059
you had to say I'm gonna use this

00:14:09,619 --> 00:14:14,119
superpower that lets me take a picture

00:14:11,059 --> 00:14:15,170
of the page and so maybe the users

00:14:14,119 --> 00:14:17,990
prompted about that maybe they're not

00:14:15,170 --> 00:14:19,429
but if later on someone compromises your

00:14:17,990 --> 00:14:22,610
extension and wants to capture the page

00:14:19,429 --> 00:14:25,009
if it's not a feature of the extension

00:14:22,610 --> 00:14:27,860
it doesn't happen the API you do they're

00:14:25,009 --> 00:14:29,209
not there or errors out and you are

00:14:27,860 --> 00:14:31,730
protected from malicious behavior

00:14:29,209 --> 00:14:33,589
because you sort of whitelist upfront

00:14:31,730 --> 00:14:35,179
say here all the things that I'm going

00:14:33,589 --> 00:14:36,649
to do if you've ever installed an

00:14:35,179 --> 00:14:39,009
Android application you get that big

00:14:36,649 --> 00:14:42,860
long list and you go sure sure whatever

00:14:39,009 --> 00:14:44,839
and that's the same model right you it

00:14:42,860 --> 00:14:46,639
does lead to people asking for

00:14:44,839 --> 00:14:49,220
everything up front and that can be sort

00:14:46,639 --> 00:14:51,110
of a messy situation where users start

00:14:49,220 --> 00:14:54,439
properly informed of what they're

00:14:51,110 --> 00:14:57,259
consenting to but compared to I have

00:14:54,439 --> 00:15:02,360
this special plug that lets me do it

00:14:57,259 --> 00:15:04,069
wherever I want way way better and so in

00:15:02,360 --> 00:15:06,470
the year 2018

00:15:04,069 --> 00:15:09,230
now with our updated logos chrome and

00:15:06,470 --> 00:15:11,720
opera and brave and beaker and chromium

00:15:09,230 --> 00:15:13,279
based browsers in general I'm gonna use

00:15:11,720 --> 00:15:14,569
Chrome and opera as the representatives

00:15:13,279 --> 00:15:18,019
of those are my apologies if your

00:15:14,569 --> 00:15:24,439
favorite is not there were the

00:15:18,019 --> 00:15:25,850
beneficiaries so 2015 we publish a blog

00:15:24,439 --> 00:15:27,709
post called the feature of developing

00:15:25,850 --> 00:15:30,799
Firefox add-ons member add-ons means

00:15:27,709 --> 00:15:33,049
extensions in this situation and we were

00:15:30,799 --> 00:15:35,209
implementing a new extension API called

00:15:33,049 --> 00:15:36,769
web extensions largely compatible with

00:15:35,209 --> 00:15:38,329
the model used by Chrome and opera to

00:15:36,769 --> 00:15:42,680
make it easier to develop extensions

00:15:38,329 --> 00:15:44,720
across multiple browsers so yeah

00:15:42,680 --> 00:15:47,480
we decided that we were going to adopt

00:15:44,720 --> 00:15:49,069
another browsers extension model how

00:15:47,480 --> 00:15:51,649
many of you knew that Firefox uses

00:15:49,069 --> 00:15:53,600
Chrome's extension model yeah cool so

00:15:51,649 --> 00:15:57,529
this isn't once again doing my job must

00:15:53,600 --> 00:15:59,029
be very satisfied here so now we have

00:15:57,529 --> 00:16:05,480
extensions that can run in these two

00:15:59,029 --> 00:16:07,639
places and here then we allow a couple

00:16:05,480 --> 00:16:10,610
of the parties went to the w3c and said

00:16:07,639 --> 00:16:12,319
hey what if there was an API surface for

00:16:10,610 --> 00:16:14,300
extensions that was standardized the

00:16:12,319 --> 00:16:18,519
same way there are api surfaces for the

00:16:14,300 --> 00:16:20,749
web that are standardized and we sort of

00:16:18,519 --> 00:16:22,730
haven't made a ton of progress here

00:16:20,749 --> 00:16:25,160
however the browser extension community

00:16:22,730 --> 00:16:28,970
group was founded with the goal of

00:16:25,160 --> 00:16:31,579
creating a cross browser set of API for

00:16:28,970 --> 00:16:34,600
building browser extensions sort of a

00:16:31,579 --> 00:16:37,550
browser level version of web APs and

00:16:34,600 --> 00:16:39,920
that edge came on the scene and they

00:16:37,550 --> 00:16:41,779
were like Microsoft edge extensions

00:16:39,920 --> 00:16:45,829
which are different from IE extensions

00:16:41,779 --> 00:16:48,920
and they also adapted a model based on

00:16:45,829 --> 00:16:50,389
this nebulous notion of these cross

00:16:48,920 --> 00:16:53,029
browser browser extensions so now we

00:16:50,389 --> 00:16:56,149
have extensions that work in these

00:16:53,029 --> 00:16:58,999
places so that's where we are present

00:16:56,149 --> 00:17:01,759
damn we have these extensions called

00:16:58,999 --> 00:17:04,250
browser extensions or web extensions or

00:17:01,759 --> 00:17:05,569
just extensions it's hard to say

00:17:04,250 --> 00:17:07,579
maybe you just call them Chrome

00:17:05,569 --> 00:17:09,620
extensions and they have this

00:17:07,579 --> 00:17:13,010
architecture this is the most detailed

00:17:09,620 --> 00:17:15,110
image in the entire slide deck but if

00:17:13,010 --> 00:17:17,149
you can kind of see we've got a manifest

00:17:15,110 --> 00:17:19,640
and that manifest says here's everything

00:17:17,149 --> 00:17:22,100
I can do and then a big list of things

00:17:19,640 --> 00:17:23,809
you can do you can spawn background

00:17:22,100 --> 00:17:25,250
scripts and content scripts and browser

00:17:23,809 --> 00:17:28,399
actions or to the buttons in your

00:17:25,250 --> 00:17:29,870
toolbar and page actions which interact

00:17:28,399 --> 00:17:32,330
with on the page you're looking at and

00:17:29,870 --> 00:17:34,340
option pages which you know give you

00:17:32,330 --> 00:17:36,440
preferences UI and then you can actually

00:17:34,340 --> 00:17:39,559
manipulate web pages themselves and make

00:17:36,440 --> 00:17:42,350
it resources they can access manifest

00:17:39,559 --> 00:17:44,630
looks a little bit like this it's a JSON

00:17:42,350 --> 00:17:46,659
file and it just lists if you've ever

00:17:44,630 --> 00:17:49,870
seen a package JSON or an app manifest

00:17:46,659 --> 00:17:52,970
use will look very very very familiar

00:17:49,870 --> 00:17:55,860
we've gone to manifest version 2 it'll

00:17:52,970 --> 00:17:58,140
probably be at version 2 forever

00:17:55,860 --> 00:18:00,120
but you define a bunch of properties

00:17:58,140 --> 00:18:03,059
about your extension sure name what it

00:18:00,120 --> 00:18:04,529
does who you are and then you define all

00:18:03,059 --> 00:18:06,120
of your capabilities right you say I

00:18:04,529 --> 00:18:08,070
have a background page that lives here

00:18:06,120 --> 00:18:09,779
in this file I request the following

00:18:08,070 --> 00:18:13,350
permissions these permissions apply to

00:18:09,779 --> 00:18:14,700
the following reg ex on URLs so you

00:18:13,350 --> 00:18:18,059
could even say I don't want to activate

00:18:14,700 --> 00:18:22,710
for you no evil com I want to activate

00:18:18,059 --> 00:18:26,010
for my website dump is and then you have

00:18:22,710 --> 00:18:29,960
the scripts themselves I'm gonna show

00:18:26,010 --> 00:18:34,019
you the fancy es 6e version of this but

00:18:29,960 --> 00:18:36,029
you can within a script actually invoke

00:18:34,019 --> 00:18:38,450
these api's so this one's actually

00:18:36,029 --> 00:18:41,519
looking for a user clicks the button on

00:18:38,450 --> 00:18:42,570
the page or in the browser you know you

00:18:41,519 --> 00:18:44,159
install extension to get those little

00:18:42,570 --> 00:18:45,450
buttons that populate and then you want

00:18:44,159 --> 00:18:49,139
to then you have too many of them you

00:18:45,450 --> 00:18:51,179
drag them off those actions all can be

00:18:49,139 --> 00:18:55,169
listened to and then you actually can

00:18:51,179 --> 00:18:57,000
see if we're manipulating tabs right now

00:18:55,169 --> 00:18:59,100
so I'm creating a tag gross example.org

00:18:57,000 --> 00:19:00,809
and then which actually don't help

00:18:59,100 --> 00:19:04,769
example.org is safe and registered I

00:19:00,809 --> 00:19:07,260
know com is may fix that and then we can

00:19:04,769 --> 00:19:09,360
actually go run scripts injecting them

00:19:07,260 --> 00:19:11,760
into those tabs or we can load other

00:19:09,360 --> 00:19:13,529
scripts from a well defined URL and load

00:19:11,760 --> 00:19:16,350
them into those tabs or mess with that

00:19:13,529 --> 00:19:18,600
tab or whatever right this one if

00:19:16,350 --> 00:19:22,110
someone clicks the button I open a new

00:19:18,600 --> 00:19:24,240
tab and I go extract the text content of

00:19:22,110 --> 00:19:26,220
the first header on that page and

00:19:24,240 --> 00:19:30,570
actually can extract it from the page

00:19:26,220 --> 00:19:31,980
and bring it back to my extension which

00:19:30,570 --> 00:19:34,580
goes you know I keep talking about

00:19:31,980 --> 00:19:38,159
background pages and things like that

00:19:34,580 --> 00:19:41,070
these extension API while awesome sort

00:19:38,159 --> 00:19:42,450
of just predate the idea of workers

00:19:41,070 --> 00:19:44,250
right now we have service workers and

00:19:42,450 --> 00:19:46,529
page workers and shared workers and

00:19:44,250 --> 00:19:48,990
audio worklets and paint worklets and

00:19:46,529 --> 00:19:51,710
all these things and all that technology

00:19:48,990 --> 00:19:56,159
and all that idea of a sort of Dom free

00:19:51,710 --> 00:19:58,350
thread just postdates the creation of

00:19:56,159 --> 00:20:00,539
these extension API so we uh we actually

00:19:58,350 --> 00:20:02,490
had the concept of pages versus workers

00:20:00,539 --> 00:20:03,870
and what that means is that when your

00:20:02,490 --> 00:20:06,779
background script is running it's

00:20:03,870 --> 00:20:08,880
actually running in the context of a web

00:20:06,779 --> 00:20:11,190
page that isn't loaded in a tab

00:20:08,880 --> 00:20:13,800
it's just sort of virtual webpage that

00:20:11,190 --> 00:20:15,060
has a bunch of script tags in it the

00:20:13,800 --> 00:20:17,250
advantage of this is you get access to

00:20:15,060 --> 00:20:18,630
every single Dom API right so which is

00:20:17,250 --> 00:20:20,460
very very valuable you know you have

00:20:18,630 --> 00:20:21,840
access to fetch how you can assume that

00:20:20,460 --> 00:20:24,120
if you can do it from a webpage you can

00:20:21,840 --> 00:20:26,520
do it from an extension the downside is

00:20:24,120 --> 00:20:28,320
it's a little clumsy err you have to

00:20:26,520 --> 00:20:30,960
worry about the overhead of knowing you

00:20:28,320 --> 00:20:32,990
know that you share this shared global

00:20:30,960 --> 00:20:35,520
window object and things like that

00:20:32,990 --> 00:20:37,230
so you know in a manifest you might see

00:20:35,520 --> 00:20:40,740
something that looks like this where you

00:20:37,230 --> 00:20:42,690
say polyfill background or you can

00:20:40,740 --> 00:20:45,810
actually define just say hey you'll use

00:20:42,690 --> 00:20:48,390
this page and a page effectively looks

00:20:45,810 --> 00:20:50,370
like this it's a very very short stub a

00:20:48,390 --> 00:20:52,080
lot of times you just see script tags

00:20:50,370 --> 00:20:54,420
people omit everything else because I

00:20:52,080 --> 00:20:56,910
don't actually care and you get these

00:20:54,420 --> 00:20:59,120
scripts loaded

00:20:56,910 --> 00:21:02,040
this doesn't look valuable at all

00:20:59,120 --> 00:21:03,480
however you can immediately take

00:21:02,040 --> 00:21:05,850
advantage of things that web pages can

00:21:03,480 --> 00:21:08,820
do so in the intervening time we now

00:21:05,850 --> 00:21:10,560
have es6 modules right and if you're

00:21:08,820 --> 00:21:12,210
building a browser extension you know

00:21:10,560 --> 00:21:14,040
what's gonna run in a browser and you

00:21:12,210 --> 00:21:15,620
know which browser it's gonna run in so

00:21:14,040 --> 00:21:19,680
maybe you can do something like this and

00:21:15,620 --> 00:21:21,360
you can load a polyfill and you can load

00:21:19,680 --> 00:21:22,680
a Dom library maybe jQuery maybe

00:21:21,360 --> 00:21:24,840
something else and you can actually do

00:21:22,680 --> 00:21:26,220
some computation on some Dom object

00:21:24,840 --> 00:21:27,570
maybe you have template tags in there

00:21:26,220 --> 00:21:30,240
and you're pulling on template

00:21:27,570 --> 00:21:32,700
information and you can use es6 modules

00:21:30,240 --> 00:21:33,960
right so this way you can say as opposed

00:21:32,700 --> 00:21:36,750
to just loading a static background

00:21:33,960 --> 00:21:38,520
script pretend it's a sweet no actually

00:21:36,750 --> 00:21:41,160
do a script type module and now you have

00:21:38,520 --> 00:21:43,170
access to es modules within extensions

00:21:41,160 --> 00:21:45,330
and we're nice and modern and it's way

00:21:43,170 --> 00:21:47,280
way more pleasant to use speaking of

00:21:45,330 --> 00:21:49,200
modernity and pleasantness to use well

00:21:47,280 --> 00:21:52,470
that's got way bigger than I anticipated

00:21:49,200 --> 00:21:54,240
all right slides so happens when you

00:21:52,470 --> 00:21:57,030
make a diagram like five minutes before

00:21:54,240 --> 00:21:58,950
your presentation this is sort of a

00:21:57,030 --> 00:22:00,120
lightweight architecture here the

00:21:58,950 --> 00:22:02,670
background script acts for the

00:22:00,120 --> 00:22:04,320
background page acts as the core of an

00:22:02,670 --> 00:22:06,180
extension sure the manifest starts

00:22:04,320 --> 00:22:09,390
everything up but if you need to

00:22:06,180 --> 00:22:11,340
coordinate between you know a script

00:22:09,390 --> 00:22:13,380
injected into a page and a dev tools

00:22:11,340 --> 00:22:14,550
panel and the button on the page it may

00:22:13,380 --> 00:22:16,530
be a panel that tips down out of that

00:22:14,550 --> 00:22:18,330
and a side bar and an options page

00:22:16,530 --> 00:22:20,790
because you want to use every single

00:22:18,330 --> 00:22:22,410
feature at this exact same time you can

00:22:20,790 --> 00:22:25,500
do that but you need to coordinate

00:22:22,410 --> 00:22:28,080
via the background script and so there's

00:22:25,500 --> 00:22:31,830
this notion of opening ports it's not

00:22:28,080 --> 00:22:34,470
networking ports it's the same port that

00:22:31,830 --> 00:22:36,210
a worker would have or an iframe has

00:22:34,470 --> 00:22:38,520
right so you have a postmessage channel

00:22:36,210 --> 00:22:40,650
and you can say hey i want to talk you

00:22:38,520 --> 00:22:42,000
know I want to open a port from my

00:22:40,650 --> 00:22:44,160
content script back to my background

00:22:42,000 --> 00:22:45,630
process and I open a port from my dev

00:22:44,160 --> 00:22:47,970
tools panel back to my background script

00:22:45,630 --> 00:22:50,070
and I open a browser action port and all

00:22:47,970 --> 00:22:51,420
these little ports all let you just do

00:22:50,070 --> 00:22:54,210
message passing just like you would with

00:22:51,420 --> 00:22:55,590
workers and you can coordinate and sort

00:22:54,210 --> 00:22:57,600
of respond you can even do kind of a

00:22:55,590 --> 00:22:58,770
redux a pattern where everyone's sending

00:22:57,600 --> 00:23:00,000
their changes back to the background

00:22:58,770 --> 00:23:01,830
page and the background page is the

00:23:00,000 --> 00:23:03,840
source of truth and that maintains the

00:23:01,830 --> 00:23:05,130
state of your extension it's it

00:23:03,840 --> 00:23:10,620
ultimately makes a pretty nice

00:23:05,130 --> 00:23:12,540
architecture so this slide I don't you

00:23:10,620 --> 00:23:14,910
can see these two little lines at the

00:23:12,540 --> 00:23:17,310
bottom of my one of those is my time and

00:23:14,910 --> 00:23:19,100
one of those is my slides so you go to

00:23:17,310 --> 00:23:21,270
the blue lines just advancing

00:23:19,100 --> 00:23:24,720
interactively forward even as I waste

00:23:21,270 --> 00:23:27,840
time explaining it to you and the other

00:23:24,720 --> 00:23:30,240
slide is where I am in my slides but it

00:23:27,840 --> 00:23:33,600
counts some slides which means that this

00:23:30,240 --> 00:23:35,940
slide is my oh I'm moving away faster or

00:23:33,600 --> 00:23:40,320
slower than I need to slide this is a

00:23:35,940 --> 00:23:44,910
good tip so this is an exhaustive list

00:23:40,320 --> 00:23:46,290
of every currently supported API I'm not

00:23:44,910 --> 00:23:49,050
actually gonna read them out to you

00:23:46,290 --> 00:23:50,400
or am I alarms bookmarks bar interaction

00:23:49,050 --> 00:23:51,990
browser settings browser data clipboard

00:23:50,400 --> 00:23:53,340
commands contents credential identities

00:23:51,990 --> 00:23:54,930
cookies dev tools inspector window dev

00:23:53,340 --> 00:23:56,550
tools Network dev tools panels DNS

00:23:54,930 --> 00:23:59,910
downloads events extension extension

00:23:56,550 --> 00:24:01,530
tights fine history I 18n identity idle

00:23:59,910 --> 00:24:03,750
management menus notification zombie box

00:24:01,530 --> 00:24:05,790
page action permissions PK pkcs 11

00:24:03,750 --> 00:24:07,860
privacy proxy runtime search session

00:24:05,790 --> 00:24:10,080
sidebar access storage tabs theme top

00:24:07,860 --> 00:24:12,740
sites x - web navigation web requests

00:24:10,080 --> 00:24:12,740
and windows

00:24:13,309 --> 00:24:23,399
and now I'm ahead of time right feels

00:24:19,289 --> 00:24:24,869
real good so um so you're saying to

00:24:23,399 --> 00:24:27,299
yourself this is wonderful I can do all

00:24:24,869 --> 00:24:29,549
these things and all browsers that

00:24:27,299 --> 00:24:33,809
support extensions oh my gosh I did not

00:24:29,549 --> 00:24:34,979
know this well not really though Chris

00:24:33,809 --> 00:24:37,559
is really the current state of the world

00:24:34,979 --> 00:24:39,239
also this is I realized right before my

00:24:37,559 --> 00:24:40,949
talk that this is a lesson about how pot

00:24:39,239 --> 00:24:43,949
is bad at Venn diagrams and should never

00:24:40,949 --> 00:24:47,399
do them again because it looks like they

00:24:43,949 --> 00:24:49,409
share nothing but really I meant to

00:24:47,399 --> 00:24:50,639
label the circles so I'm never gonna

00:24:49,409 --> 00:24:53,339
yeah this is the last Venn diagram

00:24:50,639 --> 00:24:56,579
you'll ever see for me this green circle

00:24:53,339 --> 00:24:59,549
is Firefox Firefox loves green this red

00:24:56,579 --> 00:25:02,789
circle is chrome and opera and the blue

00:24:59,549 --> 00:25:04,799
circle is edge and in reality you know

00:25:02,789 --> 00:25:07,199
also the problem with real Venn diagrams

00:25:04,799 --> 00:25:10,349
is the actual overlap here is ninety

00:25:07,199 --> 00:25:12,469
percent right it's not zero percent they

00:25:10,349 --> 00:25:15,899
share a lot of the same common core and

00:25:12,469 --> 00:25:17,519
their extensions are there protection

00:25:15,899 --> 00:25:19,829
capabilities that exist in one browser

00:25:17,519 --> 00:25:23,789
and no others and two browsers and no

00:25:19,829 --> 00:25:26,369
others etc however this may look a lot

00:25:23,789 --> 00:25:28,440
like the web right if I pulled this up

00:25:26,369 --> 00:25:29,969
and said here's what web pages can do

00:25:28,440 --> 00:25:34,440
and pull it up this exact same slide

00:25:29,969 --> 00:25:37,019
you'd say I agree and so in the words of

00:25:34,440 --> 00:25:39,239
Steve Jobs what do you do about this

00:25:37,019 --> 00:25:43,159
well we have a really sweet solution for

00:25:39,239 --> 00:25:43,159
you feature detection

00:25:44,360 --> 00:25:50,929
and that's that's the truth right the

00:25:48,110 --> 00:25:55,279
the one the one bond we as browser

00:25:50,929 --> 00:25:57,200
vendors make to you is if the keys there

00:25:55,279 --> 00:26:00,200
you should be able to use it right if

00:25:57,200 --> 00:26:04,159
it's not there it's it's not there um we

00:26:00,200 --> 00:26:06,590
try not to throw a not implemented error

00:26:04,159 --> 00:26:09,649
we try to make it say right if this API

00:26:06,590 --> 00:26:13,370
exists in this namespace then you can

00:26:09,649 --> 00:26:16,460
use it of course you know we're flawed

00:26:13,370 --> 00:26:21,380
human beings you know pity us the wood

00:26:16,460 --> 00:26:27,460
browser makers so here's where we are if

00:26:21,380 --> 00:26:31,190
you use largely speaking the chrome dot

00:26:27,460 --> 00:26:33,080
versions of extension api's everyone

00:26:31,190 --> 00:26:37,190
because compatibility is the new class

00:26:33,080 --> 00:26:39,980
toast will support it right so if you if

00:26:37,190 --> 00:26:41,299
you say chrome dot edge and Firefox

00:26:39,980 --> 00:26:45,340
would be like we don't you mean it's

00:26:41,299 --> 00:26:47,809
cool it's cool it's fine not a problem

00:26:45,340 --> 00:26:51,139
however we've also renamed that entire

00:26:47,809 --> 00:26:52,820
namespace to browser dot you can see

00:26:51,139 --> 00:26:54,679
that of course chrome has no idea what

00:26:52,820 --> 00:26:56,149
we're talking about at the moment we're

00:26:54,679 --> 00:26:59,630
still hanging out chat and see what's

00:26:56,149 --> 00:27:01,519
going on and this spec actually defines

00:26:59,630 --> 00:27:03,679
all of these api's to go from a call

00:27:01,519 --> 00:27:06,130
back model to a promise based model

00:27:03,679 --> 00:27:08,240
which is super rad

00:27:06,130 --> 00:27:10,639
however only Firefox says this at the

00:27:08,240 --> 00:27:11,990
moment edge initially closed the bud

00:27:10,639 --> 00:27:13,760
that said they didn't support promises

00:27:11,990 --> 00:27:15,590
as works as intended but they reopened

00:27:13,760 --> 00:27:17,320
it because that just super super awesome

00:27:15,590 --> 00:27:20,059
at responding to user feedback

00:27:17,320 --> 00:27:21,590
obviously we're working all this out and

00:27:20,059 --> 00:27:22,880
we'd love to even get Chrome's

00:27:21,590 --> 00:27:25,370
extension model updated to support

00:27:22,880 --> 00:27:27,580
promises so we can write pretty async

00:27:25,370 --> 00:27:30,649
await and module II looking for things

00:27:27,580 --> 00:27:32,809
however there is a polyfill called the

00:27:30,649 --> 00:27:34,610
web extension polyfill and this will go

00:27:32,809 --> 00:27:36,769
back and go into chrome and say hey all

00:27:34,610 --> 00:27:38,929
those callback based extensions that are

00:27:36,769 --> 00:27:41,000
on the chrome dot we're gonna polyfill

00:27:38,929 --> 00:27:46,730
all those to be promise based on the

00:27:41,000 --> 00:27:48,919
browser dot edge however we forgot to

00:27:46,730 --> 00:27:52,130
say that right edge doesn't edge does

00:27:48,919 --> 00:27:55,389
support chrome dot but when we detect

00:27:52,130 --> 00:27:57,680
browser dot but we assume it's promises

00:27:55,389 --> 00:28:01,190
and yet we're fixing it okay

00:27:57,680 --> 00:28:03,380
so that's 100% of absolutely everything

00:28:01,190 --> 00:28:07,830
that I have to say about extensions

00:28:03,380 --> 00:28:10,780
there's absolutely nothing else to cover

00:28:07,830 --> 00:28:15,470
[Applause]

00:28:10,780 --> 00:28:19,040
so in 2010 version 5 of a safari

00:28:15,470 --> 00:28:21,740
launched support for extensions and they

00:28:19,040 --> 00:28:22,700
actually did a really really really good

00:28:21,740 --> 00:28:25,060
job

00:28:22,700 --> 00:28:28,460
what they didn't do was get a massive

00:28:25,060 --> 00:28:30,650
market dominating market share that made

00:28:28,460 --> 00:28:33,200
everyone use their model this is not

00:28:30,650 --> 00:28:37,100
their fault the dissent that's anyone's

00:28:33,200 --> 00:28:41,870
fault and Safari has a really cool

00:28:37,100 --> 00:28:44,750
JavaScript CSS HTML extension API that's

00:28:41,870 --> 00:28:47,450
based on the idea of pages versus

00:28:44,750 --> 00:28:50,350
workers and really it's just but it's a

00:28:47,450 --> 00:28:54,590
completely independent parallel

00:28:50,350 --> 00:28:57,550
evolution so now we have something looks

00:28:54,590 --> 00:29:00,080
like this but this is an API is this is

00:28:57,550 --> 00:29:02,450
capabilities right if you want to mess

00:29:00,080 --> 00:29:03,620
with tab as you can it just looks a

00:29:02,450 --> 00:29:06,230
little different it looks completely

00:29:03,620 --> 00:29:08,450
different but it's possible all right so

00:29:06,230 --> 00:29:09,950
now it's Safari that self dot browser

00:29:08,450 --> 00:29:13,790
window dot open tab versus the browser

00:29:09,950 --> 00:29:15,560
tabs dot create but you can see that if

00:29:13,790 --> 00:29:17,930
you took a look at this capability layer

00:29:15,560 --> 00:29:19,580
and said oh we can speak we can read a

00:29:17,930 --> 00:29:24,470
driver that speaks Safari and you

00:29:19,580 --> 00:29:26,900
absolutely can that's a future looking

00:29:24,470 --> 00:29:29,870
thing I'm describing to you and none of

00:29:26,900 --> 00:29:31,040
you should be looking for today cool we

00:29:29,870 --> 00:29:33,200
all cool but then we're all excited

00:29:31,040 --> 00:29:36,830
about the future right the future is

00:29:33,200 --> 00:29:37,280
amazing cool so today what are we doing

00:29:36,830 --> 00:29:38,480
today

00:29:37,280 --> 00:29:42,280
we're gonna start building extensions

00:29:38,480 --> 00:29:42,280
every single one of us lock the doors

00:29:44,160 --> 00:29:49,630
mozilla offers a tool called web - xed

00:29:47,500 --> 00:29:51,790
which comes from when we called the API

00:29:49,630 --> 00:29:53,950
web extensions it's a super nice

00:29:51,790 --> 00:29:56,380
command-line tool lets you scaffold that

00:29:53,950 --> 00:29:59,049
you lint lets you launch a browser and

00:29:56,380 --> 00:30:01,140
do live coding when the distension OTO

00:29:59,049 --> 00:30:05,290
reloads in the browser it's super fancy

00:30:01,140 --> 00:30:06,880
chrome and edge and Firefox all support

00:30:05,290 --> 00:30:08,530
what's called temporary or unpacked

00:30:06,880 --> 00:30:10,929
extension loading where you say this

00:30:08,530 --> 00:30:12,070
folder over here is an extension and as

00:30:10,929 --> 00:30:14,770
long as you're a developer the browser

00:30:12,070 --> 00:30:17,169
says I believe you and runs it and then

00:30:14,770 --> 00:30:18,549
you can do live updating or go hit a

00:30:17,169 --> 00:30:19,510
reload button and actually start

00:30:18,549 --> 00:30:20,830
building these extensions and

00:30:19,510 --> 00:30:23,890
experimenting with what works and what

00:30:20,830 --> 00:30:25,470
doesn't and where the edge cases are or

00:30:23,890 --> 00:30:29,590
if you've already built an extension

00:30:25,470 --> 00:30:31,270
probably for Chrome you can port if you

00:30:29,590 --> 00:30:34,480
have a router the extension that works

00:30:31,270 --> 00:30:39,100
in chrome it will 99.9% work in Firefox

00:30:34,480 --> 00:30:41,230
it will 68.4% work an edge but don't

00:30:39,100 --> 00:30:42,880
want to do it is to try so well we have

00:30:41,230 --> 00:30:44,440
a tool called extension test com it

00:30:42,880 --> 00:30:46,900
takes a CRX file you don't even have to

00:30:44,440 --> 00:30:48,640
give it this code just pack CRX file it

00:30:46,900 --> 00:30:50,620
opens it up it runs a compatibility

00:30:48,640 --> 00:30:52,990
suite against it just got ecstatically

00:30:50,620 --> 00:30:55,840
analyzes for API usage and goes cool you

00:30:52,990 --> 00:30:59,020
use the following for api's that don't

00:30:55,840 --> 00:31:00,880
work in firefox but or hey this totally

00:30:59,020 --> 00:31:04,270
works and you should just go submit it

00:31:00,880 --> 00:31:05,919
to us where I wrote this tool it's

00:31:04,270 --> 00:31:08,530
entirely on me if it doesn't work you

00:31:05,919 --> 00:31:10,630
can come find me and I'm also working on

00:31:08,530 --> 00:31:11,830
adding edge compatibility data so we'll

00:31:10,630 --> 00:31:13,660
say yes it should definitely work in

00:31:11,830 --> 00:31:15,720
Firefox and yes this should definitely

00:31:13,660 --> 00:31:19,020
work an edge as opposed to just Firefox

00:31:15,720 --> 00:31:23,410
so yeah today we can do you can do that

00:31:19,020 --> 00:31:25,470
also you can complain I actually an you

00:31:23,410 --> 00:31:28,270
enly mean this I'm a developer advocate

00:31:25,470 --> 00:31:30,370
my job is not to market to you but to

00:31:28,270 --> 00:31:32,950
listen to you if I come back and say my

00:31:30,370 --> 00:31:35,140
talk went great I did not do my job but

00:31:32,950 --> 00:31:38,020
if I came back and say I on the first

00:31:35,140 --> 00:31:40,270
day of J's confer stage a has coffee in

00:31:38,020 --> 00:31:41,740
the morning told everyone that I know

00:31:40,270 --> 00:31:43,000
about extensions that you should

00:31:41,740 --> 00:31:45,549
complain to me hmm

00:31:43,000 --> 00:31:46,960
and then you all find me during this

00:31:45,549 --> 00:31:48,340
week and talk to me about whether you've

00:31:46,960 --> 00:31:50,080
tried to build an extension and it went

00:31:48,340 --> 00:31:51,970
horribly wrong or what the heck were you

00:31:50,080 --> 00:31:53,650
thinking or why is this also terrible

00:31:51,970 --> 00:31:54,490
I'm gonna listen to you and I'm gonna

00:31:53,650 --> 00:31:56,350
come back

00:31:54,490 --> 00:31:59,080
and this all this stuff is actually in

00:31:56,350 --> 00:32:01,540
flux right Firefox has a fully staffed

00:31:59,080 --> 00:32:04,240
we're hiring engineering team working on

00:32:01,540 --> 00:32:05,830
extensions extend extension api's we

00:32:04,240 --> 00:32:08,740
think it's one of the ways that users

00:32:05,830 --> 00:32:10,900
can take a browser and make it theirs

00:32:08,740 --> 00:32:13,900
and have agency over the web and it's

00:32:10,900 --> 00:32:15,520
super important to us that users be able

00:32:13,900 --> 00:32:18,510
to do that because we believe that we

00:32:15,520 --> 00:32:22,030
are a user agent and not a publisher or

00:32:18,510 --> 00:32:23,980
government agent so you have to find me

00:32:22,030 --> 00:32:25,929
and tell me what's terrible so I can

00:32:23,980 --> 00:32:29,410
make it less terrible you want to find

00:32:25,929 --> 00:32:31,420
me in person I am at Potch and that's

00:32:29,410 --> 00:32:33,429
actually the end of the talk so you can

00:32:31,420 --> 00:32:34,600
read there's a huge huge table on mdn

00:32:33,429 --> 00:32:37,000
that has all the api compatibility

00:32:34,600 --> 00:32:38,440
there's all these tools find me we

00:32:37,000 --> 00:32:40,360
publish stuff on our hacks blog and

00:32:38,440 --> 00:32:42,440
these slides will be available at that

00:32:40,360 --> 00:32:49,910
URL thank you very much for your time

00:32:42,440 --> 00:32:49,910

YouTube URL: https://www.youtube.com/watch?v=Jxe7AXgbYqY


