Title: How to be an a11y - Creating Accessible React Apps - Neha Nivedita - JSConf US 2018
Publication date: 2018-11-14
Playlist: JSConf US 2018
Description: 
	
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:24,050
[Music]

00:00:24,630 --> 00:00:29,260
[Applause]

00:00:30,189 --> 00:00:35,710
I am trying to produce music I think it

00:00:34,270 --> 00:00:43,000
took me two years to produce two tracks

00:00:35,710 --> 00:00:45,100
one of them is listenable okay so we are

00:00:43,000 --> 00:00:48,310
here today and I'm going to talk about

00:00:45,100 --> 00:00:51,850
how we can be allies by creating

00:00:48,310 --> 00:00:54,010
accessible react apps my name is Neha

00:00:51,850 --> 00:00:55,870
nivedita I'm a software engineer with

00:00:54,010 --> 00:00:57,550
node experts which is a global

00:00:55,870 --> 00:01:00,670
consulting firm based out of New Delhi

00:00:57,550 --> 00:01:05,049
that creates custom web apps for clients

00:01:00,670 --> 00:01:09,310
big and small on nodejs react Express

00:01:05,049 --> 00:01:11,200
MongoDB you know the whole shebang so

00:01:09,310 --> 00:01:17,110
let's begin oh yeah i'm also on twitter

00:01:11,200 --> 00:01:18,640
at nick nevada the few one of let's take

00:01:17,110 --> 00:01:22,600
a look at what we'll be discussing about

00:01:18,640 --> 00:01:25,290
today could I have the confidence

00:01:22,600 --> 00:01:25,290
monitor please

00:01:38,250 --> 00:01:43,390
sorry about this I'll just continue

00:01:40,210 --> 00:01:45,399
speaking off of the screen so we will

00:01:43,390 --> 00:01:48,250
talk about what accessibility is why we

00:01:45,399 --> 00:01:51,970
need it what kind of problems we face

00:01:48,250 --> 00:01:53,740
when we try to implement things in gs

00:01:51,970 --> 00:01:54,399
frameworks what accessibility issues

00:01:53,740 --> 00:01:57,100
occur there

00:01:54,399 --> 00:01:59,110
how react works and how we can make our

00:01:57,100 --> 00:02:01,360
react apps accessible then we'll spend a

00:01:59,110 --> 00:02:04,259
little bit of trying talking about the

00:02:01,360 --> 00:02:07,119
importance of colors and react

00:02:04,259 --> 00:02:11,319
accessibility tools and unit testing in

00:02:07,119 --> 00:02:12,850
those before we proceed further on this

00:02:11,319 --> 00:02:15,250
I just want to point out that this talk

00:02:12,850 --> 00:02:17,560
is meant to be a primer only it's

00:02:15,250 --> 00:02:20,260
basically an amalgamation of what I have

00:02:17,560 --> 00:02:22,540
learnt so far in a short amount of time

00:02:20,260 --> 00:02:24,340
about accessibility in react it should

00:02:22,540 --> 00:02:27,819
help guide you on your way if you are

00:02:24,340 --> 00:02:32,319
trying to do similar things in react it

00:02:27,819 --> 00:02:35,430
may not be perfect none of us are but I

00:02:32,319 --> 00:02:38,290
hope it helps you oh and one more thing

00:02:35,430 --> 00:02:41,890
how many of us were here yesterday for

00:02:38,290 --> 00:02:45,070
just insoles talk the one with seven 25

00:02:41,890 --> 00:02:46,810
slides in 30 minutes I just want to say

00:02:45,070 --> 00:02:48,730
that it makes me really happy to see

00:02:46,810 --> 00:02:52,660
that we are at a conference where we

00:02:48,730 --> 00:02:54,670
have live captioning and an amazing team

00:02:52,660 --> 00:02:59,350
of people at white-coat captioning would

00:02:54,670 --> 00:03:02,350
do that I just want to have a big round

00:02:59,350 --> 00:03:04,359
of applause for our awesome heroes who

00:03:02,350 --> 00:03:06,579
have been working very hard to make sure

00:03:04,359 --> 00:03:09,730
that this conference is accessible and

00:03:06,579 --> 00:03:16,380
on top of that you know dealing with

00:03:09,730 --> 00:03:18,100
just ensures brilliant brutal talk okay

00:03:16,380 --> 00:03:22,200
proceeding from here what's

00:03:18,100 --> 00:03:22,200
accessibility and why do we need it

00:03:22,230 --> 00:03:28,750
everyone should be able to access any

00:03:24,970 --> 00:03:32,400
service or product regardless of their

00:03:28,750 --> 00:03:37,359
ability or disability this is a fact

00:03:32,400 --> 00:03:40,030
there should be equality about this so

00:03:37,359 --> 00:03:41,709
far when we think of accessibility how

00:03:40,030 --> 00:03:45,449
many different kinds of accessibility

00:03:41,709 --> 00:03:45,449
can we think of physical

00:03:46,060 --> 00:03:55,939
like when people who cannot walk they

00:03:52,010 --> 00:03:57,980
need wheelchairs right so this is a form

00:03:55,939 --> 00:04:00,110
of accessibility that they should have

00:03:57,980 --> 00:04:02,180
they should be able to go anywhere they

00:04:00,110 --> 00:04:03,640
should have wheelchair ramps they should

00:04:02,180 --> 00:04:06,319
have buses that are able to pick them up

00:04:03,640 --> 00:04:08,269
similarly we have accessibility when it

00:04:06,319 --> 00:04:10,189
comes to web as well people who cannot

00:04:08,269 --> 00:04:13,459
see or cannot hear should be able to use

00:04:10,189 --> 00:04:15,349
web apps just as well as those of us who

00:04:13,459 --> 00:04:18,229
can see and hear

00:04:15,349 --> 00:04:23,030
so that's web accessibility related to

00:04:18,229 --> 00:04:24,380
web services products and apps web

00:04:23,030 --> 00:04:27,289
accessibility is governed by a set of

00:04:24,380 --> 00:04:29,539
features and guidelines that help design

00:04:27,289 --> 00:04:32,030
your app to be fully usable by people

00:04:29,539 --> 00:04:33,949
with disabilities some of these tools

00:04:32,030 --> 00:04:37,310
include screen reader support photo

00:04:33,949 --> 00:04:39,740
captioning and keyboard usability let's

00:04:37,310 --> 00:04:44,449
look at a few terms that are associated

00:04:39,740 --> 00:04:47,090
with web accessibility a11y it is

00:04:44,449 --> 00:04:49,460
pronounced like this a 1:1 by or a 11 by

00:04:47,090 --> 00:04:52,460
although since I'm a terrible punster I

00:04:49,460 --> 00:04:54,560
decided to name my talk how to be an

00:04:52,460 --> 00:04:58,000
ally I like doing that I like hitting

00:04:54,560 --> 00:05:01,880
people with puns sometimes all the time

00:04:58,000 --> 00:05:04,490
then we have Bach AG WCAG that's web

00:05:01,880 --> 00:05:07,510
content accessibility guidelines these

00:05:04,490 --> 00:05:11,510
are the rules set for how we should

00:05:07,510 --> 00:05:13,940
develop any application so that it is

00:05:11,510 --> 00:05:15,470
accessible to everyone the third thing

00:05:13,940 --> 00:05:17,240
that we need to look out for is aria

00:05:15,470 --> 00:05:19,580
it's accessible rich Internet

00:05:17,240 --> 00:05:22,729
applications these are features baked

00:05:19,580 --> 00:05:24,880
into HTML that enable any app to be

00:05:22,729 --> 00:05:29,180
accessible to people

00:05:24,880 --> 00:05:31,430
stats 15% of the population has some

00:05:29,180 --> 00:05:33,620
form of disability if we take a look at

00:05:31,430 --> 00:05:36,860
it and cold hard numbers that's almost 1

00:05:33,620 --> 00:05:41,030
billion people that that's how many 15%

00:05:36,860 --> 00:05:43,580
is now 8% of the population is also

00:05:41,030 --> 00:05:47,539
color blind just trying to think about

00:05:43,580 --> 00:05:50,690
all of these numbers if you try to think

00:05:47,539 --> 00:05:52,490
of exactly how many people are we

00:05:50,690 --> 00:05:56,229
excluding if we are not making sure that

00:05:52,490 --> 00:05:59,300
our app is accessible that's 1 billion

00:05:56,229 --> 00:06:04,220
15% of the population and out of

00:05:59,300 --> 00:06:07,460
8% being colorblind the monitor is off

00:06:04,220 --> 00:06:10,069
again if we are excluding 15% of our

00:06:07,460 --> 00:06:12,229
users then we are failing at our jobs as

00:06:10,069 --> 00:06:16,039
developers I'm sure some of us have

00:06:12,229 --> 00:06:20,690
heard this before accessibility is not a

00:06:16,039 --> 00:06:24,080
feature it is a necessity if by design

00:06:20,690 --> 00:06:26,030
we are excluding a vast number of our

00:06:24,080 --> 00:06:28,340
users then we are actively

00:06:26,030 --> 00:06:30,319
discriminating against them and this is

00:06:28,340 --> 00:06:34,099
wrong this is unfair it should not

00:06:30,319 --> 00:06:36,080
happen therefore if we are excluding

00:06:34,099 --> 00:06:38,919
these many uses we are failing our jobs

00:06:36,080 --> 00:06:42,050
and this should not happen I'm trying to

00:06:38,919 --> 00:06:45,469
work on that myself I did not know

00:06:42,050 --> 00:06:49,129
excessive about accessibility for a long

00:06:45,469 --> 00:06:52,759
time but now I'm trying to learn so this

00:06:49,129 --> 00:06:54,500
is what I'm here for today accessibility

00:06:52,759 --> 00:06:56,840
will ensure that our app is usable by

00:06:54,500 --> 00:06:59,479
persons with disabilities today's talk

00:06:56,840 --> 00:07:01,759
is mainly going to focus on screen

00:06:59,479 --> 00:07:05,150
readers and color blindness not so much

00:07:01,759 --> 00:07:06,469
about people who are deaf unfortunately

00:07:05,150 --> 00:07:10,250
we don't have enough time for that but

00:07:06,469 --> 00:07:13,400
let's see so what kind of issues occur

00:07:10,250 --> 00:07:15,250
when we are using J's frameworks like

00:07:13,400 --> 00:07:20,029
frameworks like react they typically use

00:07:15,250 --> 00:07:22,849
syntactic sugar to create apps syntactic

00:07:20,029 --> 00:07:25,460
sugars are syntactic sugar means that

00:07:22,849 --> 00:07:26,960
they are not pure HTML due to this

00:07:25,460 --> 00:07:30,529
developers sometime end up writing

00:07:26,960 --> 00:07:32,629
non-semantic HTML now tools like screen

00:07:30,529 --> 00:07:36,289
readers are not able to parse

00:07:32,629 --> 00:07:38,900
non semantic content meaningfully what

00:07:36,289 --> 00:07:40,849
does this mean this means that people

00:07:38,900 --> 00:07:43,400
who are disabled who are using those

00:07:40,849 --> 00:07:45,289
screen readers to understand the content

00:07:43,400 --> 00:07:46,909
on your web page they are not able to

00:07:45,289 --> 00:07:49,490
get any meaning out of it they are not

00:07:46,909 --> 00:07:52,430
able to use it your app has become

00:07:49,490 --> 00:07:53,840
inaccessible let's take a look at how

00:07:52,430 --> 00:07:55,460
this happens this is something that I'm

00:07:53,840 --> 00:07:59,599
sure a lot of us are guilty of I know I

00:07:55,460 --> 00:08:01,940
am 10 times over this piece of code is

00:07:59,599 --> 00:08:06,650
supposed to be a button made out of a

00:08:01,940 --> 00:08:09,740
div how many of us have done this quite

00:08:06,650 --> 00:08:11,870
quite a few of us right so what happens

00:08:09,740 --> 00:08:12,230
is that when a screen reader encounters

00:08:11,870 --> 00:08:15,320
this

00:08:12,230 --> 00:08:16,970
for code it fails to read it out loud as

00:08:15,320 --> 00:08:19,360
a button because it doesn't understand

00:08:16,970 --> 00:08:21,650
that it's a button it sees a div and

00:08:19,360 --> 00:08:24,080
something inside it that's it that's all

00:08:21,650 --> 00:08:27,470
it sees this way the user is not aware

00:08:24,080 --> 00:08:31,100
that what they are trying to look at is

00:08:27,470 --> 00:08:33,440
actually a button so if we try to look

00:08:31,100 --> 00:08:36,460
at it this way you could say the verdict

00:08:33,440 --> 00:08:38,270
is that because of JavaScript frameworks

00:08:36,460 --> 00:08:40,940
these frameworks are killing

00:08:38,270 --> 00:08:45,260
accessibility but it doesn't have to be

00:08:40,940 --> 00:08:47,930
like this let's take a pause on that

00:08:45,260 --> 00:08:50,740
thought and think about how react works

00:08:47,930 --> 00:08:53,000
react works with dome and virtual dome

00:08:50,740 --> 00:08:55,130
changes whatever changes we want to

00:08:53,000 --> 00:08:57,350
happen in the app they occur in the

00:08:55,130 --> 00:08:58,790
virtual dome and the reactor econ Seiler

00:08:57,350 --> 00:09:01,460
compares the difference between what is

00:08:58,790 --> 00:09:03,380
already there on the screen and what the

00:09:01,460 --> 00:09:06,580
changes are supposed to be and updates

00:09:03,380 --> 00:09:10,370
those differences on the actual dome

00:09:06,580 --> 00:09:13,280
this is an example of react JSX it looks

00:09:10,370 --> 00:09:15,350
like HTML but it's not HTML it has a

00:09:13,280 --> 00:09:17,690
label but then it has certain attributes

00:09:15,350 --> 00:09:21,230
that are written in camelcase you can

00:09:17,690 --> 00:09:25,340
pass values to it so this is this looks

00:09:21,230 --> 00:09:28,010
like HTML might be react GSX is then

00:09:25,340 --> 00:09:32,210
converted into pure HTML and rendered in

00:09:28,010 --> 00:09:33,800
the dome just like that so if we try to

00:09:32,210 --> 00:09:35,420
think about this we can say that

00:09:33,800 --> 00:09:37,610
essentially whatever code we are going

00:09:35,420 --> 00:09:40,160
to write it is going to turn into HTML

00:09:37,610 --> 00:09:44,420
at some point it's going to be plain old

00:09:40,160 --> 00:09:47,480
HTML so if we start writing some Mantic

00:09:44,420 --> 00:09:51,320
HTML our code can by default be good

00:09:47,480 --> 00:09:53,330
with accessibility so if any of us have

00:09:51,320 --> 00:09:55,550
been holding on to the excuse that hey

00:09:53,330 --> 00:09:57,860
look I'm a reactive I'm an angular

00:09:55,550 --> 00:10:00,950
therefore accessibility is hard for me

00:09:57,860 --> 00:10:03,280
no it's not it doesn't have to be yes it

00:10:00,950 --> 00:10:06,200
will take some effort but we can do it

00:10:03,280 --> 00:10:08,780
react supports Aria natively so

00:10:06,200 --> 00:10:11,330
therefore user property right could

00:10:08,780 --> 00:10:13,580
react code then you get good HTML code

00:10:11,330 --> 00:10:17,320
if you get good HTML code then you have

00:10:13,580 --> 00:10:17,320
better accessibility simple as that

00:10:18,839 --> 00:10:26,250
how to make our react app accessible I'm

00:10:23,980 --> 00:10:28,810
going to take you through a series of

00:10:26,250 --> 00:10:31,449
several types of actions that we can

00:10:28,810 --> 00:10:33,610
take to do this

00:10:31,449 --> 00:10:36,220
react provides several features that

00:10:33,610 --> 00:10:38,320
make accessible design possible first of

00:10:36,220 --> 00:10:39,579
all before we begin on that we need to

00:10:38,320 --> 00:10:41,110
make sure that we get the long

00:10:39,579 --> 00:10:44,920
low-hanging fruit out of the way first

00:10:41,110 --> 00:10:46,570
if you are if you are if you need to

00:10:44,920 --> 00:10:48,639
show an image make sure that it has an

00:10:46,570 --> 00:10:52,510
alt attribute all the attributes are

00:10:48,639 --> 00:10:54,010
important to screen readers do not make

00:10:52,510 --> 00:10:55,660
a button out of something that is not a

00:10:54,010 --> 00:10:57,760
button don't use dips for that don't use

00:10:55,660 --> 00:10:59,110
anchor tags I'm going to keep coming

00:10:57,760 --> 00:11:01,540
back to this point again and again until

00:10:59,110 --> 00:11:05,589
I'm sure that we've got it right

00:11:01,540 --> 00:11:08,019
semantic HTML let's take a look at the

00:11:05,589 --> 00:11:11,410
core accessibility features we can focus

00:11:08,019 --> 00:11:13,600
on setting page titles setting page

00:11:11,410 --> 00:11:17,050
title is important for several reasons

00:11:13,600 --> 00:11:20,139
in a single page application like react

00:11:17,050 --> 00:11:23,050
the page may update we may go to a

00:11:20,139 --> 00:11:26,800
different route but then that page title

00:11:23,050 --> 00:11:29,589
remains the same this creates problem

00:11:26,800 --> 00:11:31,300
because the page title is the first

00:11:29,589 --> 00:11:33,940
thing that screen readers usually read

00:11:31,300 --> 00:11:36,459
out now if a screen reader isn't reading

00:11:33,940 --> 00:11:39,250
out that difference then user may not be

00:11:36,459 --> 00:11:42,339
aware that something has changed that we

00:11:39,250 --> 00:11:45,339
are at a different location so let's

00:11:42,339 --> 00:11:46,990
update our page title in a react app we

00:11:45,339 --> 00:11:49,060
can do it simply like this we can update

00:11:46,990 --> 00:11:51,420
the document or title inside our

00:11:49,060 --> 00:11:53,740
component dead mount lifecycle method

00:11:51,420 --> 00:11:55,930
simple as that or we could use some

00:11:53,740 --> 00:11:57,790
plugins for it there there is react

00:11:55,930 --> 00:12:00,130
document title that does the same thing

00:11:57,790 --> 00:12:01,899
you wrap this component around whatever

00:12:00,130 --> 00:12:05,199
content you want to render and provide

00:12:01,899 --> 00:12:06,790
it a page title or you could reuse react

00:12:05,199 --> 00:12:08,889
helmet it's a this is a very useful

00:12:06,790 --> 00:12:12,420
plug-in that is used not just for

00:12:08,889 --> 00:12:14,709
setting page titles but also for

00:12:12,420 --> 00:12:19,300
basically setting anything that you want

00:12:14,709 --> 00:12:22,389
to on that pages HTML head you can

00:12:19,300 --> 00:12:27,329
include meta tags in it so it's very

00:12:22,389 --> 00:12:32,190
useful for SEO as well header semantics

00:12:27,329 --> 00:12:34,560
so some of us may have used head

00:12:32,190 --> 00:12:38,480
in ways they were not supposed to be

00:12:34,560 --> 00:12:43,759
used how many of us have used headers

00:12:38,480 --> 00:12:43,759
just to set something like font size

00:12:43,820 --> 00:12:51,290
some of us make sure that you're using

00:12:48,029 --> 00:12:54,209
headers the way they are meant to

00:12:51,290 --> 00:12:57,540
headers basically define the structure

00:12:54,209 --> 00:12:59,370
of your content where sections are

00:12:57,540 --> 00:13:02,370
supposed to be which is a subsection and

00:12:59,370 --> 00:13:05,490
so on and so forth the top header should

00:13:02,370 --> 00:13:09,120
always be H 1 followed by n h2 and then

00:13:05,490 --> 00:13:11,699
NH 3 don't try to use headers if if what

00:13:09,120 --> 00:13:13,860
you're looking for is font size and CSS

00:13:11,699 --> 00:13:16,920
never do that

00:13:13,860 --> 00:13:18,779
if you did that in your school homework

00:13:16,920 --> 00:13:23,120
for English your teacher wouldn't

00:13:18,779 --> 00:13:25,350
approve so no need to do that now you

00:13:23,120 --> 00:13:27,959
can also create configurable header

00:13:25,350 --> 00:13:30,360
component like this you can pass it

00:13:27,959 --> 00:13:33,000
content as well as level of the header

00:13:30,360 --> 00:13:35,550
and it will spit out the current the

00:13:33,000 --> 00:13:37,500
correct header tag you can also

00:13:35,550 --> 00:13:43,319
configure it to return next level header

00:13:37,500 --> 00:13:45,529
programmatically unique IDs unique IDs

00:13:43,319 --> 00:13:48,959
are again important for screen readers

00:13:45,529 --> 00:13:53,310
because they specify exactly what

00:13:48,959 --> 00:13:55,500
element a screen reader is focused on to

00:13:53,310 --> 00:13:57,510
generate unique IDs you could use

00:13:55,500 --> 00:14:00,540
something that comes from a database or

00:13:57,510 --> 00:14:03,930
you could use a library like UID to

00:14:00,540 --> 00:14:05,399
generate unique strings so that the

00:14:03,930 --> 00:14:07,350
screen reader knows exactly where

00:14:05,399 --> 00:14:09,240
element is supposed to be and your user

00:14:07,350 --> 00:14:14,339
is able to parse through your content

00:14:09,240 --> 00:14:16,860
meaningfully react fragments react

00:14:14,339 --> 00:14:19,740
fragments they were introduced and react

00:14:16,860 --> 00:14:21,600
16 a while back they are used to group a

00:14:19,740 --> 00:14:22,589
list of elements without adding extra

00:14:21,600 --> 00:14:25,439
notes with doom

00:14:22,589 --> 00:14:28,250
they do a very useful thing in that they

00:14:25,439 --> 00:14:30,779
get rid of x value drop Odom's

00:14:28,250 --> 00:14:34,339
let's take a look at how we used to

00:14:30,779 --> 00:14:37,259
export certain components that had

00:14:34,339 --> 00:14:40,949
sibling elements but nothing wrapping

00:14:37,259 --> 00:14:42,930
them we would have to add an invalid

00:14:40,949 --> 00:14:44,649
empty wrapper div around it just to

00:14:42,930 --> 00:14:48,100
export it as a single

00:14:44,649 --> 00:14:51,459
now if we did this on something like a

00:14:48,100 --> 00:14:56,290
list item or a subset of list items if

00:14:51,459 --> 00:14:57,760
we try to expose that it would it would

00:14:56,290 --> 00:14:59,620
not come out in a way that was

00:14:57,760 --> 00:15:01,329
semantically correct they aren't

00:14:59,620 --> 00:15:04,510
supposed to be any divs inside an

00:15:01,329 --> 00:15:09,790
unordered list unless they're inside the

00:15:04,510 --> 00:15:13,480
list item so what to do about this use

00:15:09,790 --> 00:15:16,990
fragments since react 16 you can use

00:15:13,480 --> 00:15:20,260
react fragment to wrap such items and

00:15:16,990 --> 00:15:23,829
export them so when this renders in the

00:15:20,260 --> 00:15:26,290
dome it is not bound by any empty

00:15:23,829 --> 00:15:29,230
useless invalid wrapper lives your code

00:15:26,290 --> 00:15:33,040
is semantic perfect and ready to be read

00:15:29,230 --> 00:15:37,560
by a screen reader change announcements

00:15:33,040 --> 00:15:41,050
what a change announcements in react app

00:15:37,560 --> 00:15:43,680
since react is dynamic things may be

00:15:41,050 --> 00:15:46,089
updating at any section of the page

00:15:43,680 --> 00:15:49,449
without being picked up by the screen

00:15:46,089 --> 00:15:50,949
reader this creates a problem when

00:15:49,449 --> 00:15:54,160
something is changing we want the user

00:15:50,949 --> 00:15:58,029
to be aware of it for this we can create

00:15:54,160 --> 00:16:01,170
a simple component that makes use of the

00:15:58,029 --> 00:16:05,740
aria-live attribute what is aria-live do

00:16:01,170 --> 00:16:08,769
whenever the underlying content of an

00:16:05,740 --> 00:16:12,930
HTML element with the aria-live tag

00:16:08,769 --> 00:16:16,529
changes it announces that content again

00:16:12,930 --> 00:16:20,529
so here we are doing something that

00:16:16,529 --> 00:16:22,779
basically creates an simple empty

00:16:20,529 --> 00:16:25,810
component that can be put anywhere in

00:16:22,779 --> 00:16:28,779
our app inside it we can put a message

00:16:25,810 --> 00:16:30,370
at firstly message can be empty and when

00:16:28,779 --> 00:16:32,199
we want the announcer to announce

00:16:30,370 --> 00:16:34,540
something we can simply pass it some

00:16:32,199 --> 00:16:36,370
message since it has the aria-live

00:16:34,540 --> 00:16:39,459
attribute the screen reader will pick

00:16:36,370 --> 00:16:41,110
this up and announce it you can see that

00:16:39,459 --> 00:16:43,420
the aria-live value right now is polite

00:16:41,110 --> 00:16:46,360
which means that the screen reader will

00:16:43,420 --> 00:16:50,230
wait until any other announcements have

00:16:46,360 --> 00:16:53,560
been finished to announce this one aria

00:16:50,230 --> 00:16:55,720
atomic true means that whenever any part

00:16:53,560 --> 00:16:57,610
of the content inside this component

00:16:55,720 --> 00:17:00,040
changes it will announce the

00:16:57,610 --> 00:17:04,709
tire thing all over again how to use

00:17:00,040 --> 00:17:07,360
this in any parent component have a

00:17:04,709 --> 00:17:10,030
value in the state like message at first

00:17:07,360 --> 00:17:11,920
it's empty its null then when some event

00:17:10,030 --> 00:17:14,350
occurs certainly state to what you

00:17:11,920 --> 00:17:16,900
wanted to be like professor utonium i'd

00:17:14,350 --> 00:17:18,370
say element x has been added by mistake

00:17:16,900 --> 00:17:22,299
but whatever it will create the

00:17:18,370 --> 00:17:25,000
Powerpuff Girls so this value can then

00:17:22,299 --> 00:17:29,230
go into the announcer by the state and

00:17:25,000 --> 00:17:31,030
whenever the value changes we can the

00:17:29,230 --> 00:17:33,580
screen reader will pick this up and

00:17:31,030 --> 00:17:36,580
announce it pretty simple but very

00:17:33,580 --> 00:17:38,559
useful there are other components like

00:17:36,580 --> 00:17:41,410
this as well that you can use this react

00:17:38,559 --> 00:17:43,510
aria-live and react accessibility

00:17:41,410 --> 00:17:45,490
announcer both of these do the same

00:17:43,510 --> 00:17:47,020
thing there's also something called

00:17:45,490 --> 00:17:50,950
react portal that was recently

00:17:47,020 --> 00:17:53,080
introduced react portal is something

00:17:50,950 --> 00:17:56,410
that is not exactly part of your current

00:17:53,080 --> 00:17:58,000
react dome but you it is outside of it

00:17:56,410 --> 00:17:59,890
but you can still access whatever values

00:17:58,000 --> 00:18:03,299
inside it so this could be potentially

00:17:59,890 --> 00:18:06,400
used for a for an announcer as well

00:18:03,299 --> 00:18:08,679
focus in life focus is important this is

00:18:06,400 --> 00:18:11,559
what I've been told many times by my

00:18:08,679 --> 00:18:14,169
parents by my teachers by some friends I

00:18:11,559 --> 00:18:17,500
never used to listen to them I'm

00:18:14,169 --> 00:18:19,660
terrible at being focused but this is

00:18:17,500 --> 00:18:22,440
again very important when it comes to

00:18:19,660 --> 00:18:22,440
accessibility

00:18:23,160 --> 00:18:30,820
what does focus do when a page loads and

00:18:26,650 --> 00:18:34,830
we want some element to be focused by

00:18:30,820 --> 00:18:37,210
default that that thing is important

00:18:34,830 --> 00:18:40,510
when we're dealing with Jace's JS

00:18:37,210 --> 00:18:43,000
frameworks like react react so far has

00:18:40,510 --> 00:18:46,390
silent routing that means that when the

00:18:43,000 --> 00:18:51,220
route changes nothing much happens the

00:18:46,390 --> 00:18:52,750
browser doesn't refresh so keyboard

00:18:51,220 --> 00:18:54,790
focus doesn't really know where to go by

00:18:52,750 --> 00:18:58,929
default so you need to manage it on your

00:18:54,790 --> 00:19:01,049
own for this you can use refs don't

00:18:58,929 --> 00:19:05,400
overuse the refs use them judiciously

00:19:01,049 --> 00:19:09,309
but for managing focus you can use them

00:19:05,400 --> 00:19:11,330
since react 16.3 using refs has been

00:19:09,309 --> 00:19:14,600
more straightforward and easier

00:19:11,330 --> 00:19:18,800
you can use them like this for any

00:19:14,600 --> 00:19:21,080
component you can create ref using react

00:19:18,800 --> 00:19:22,910
dot create ref as you can see in the

00:19:21,080 --> 00:19:26,710
constructor over there we have a ref

00:19:22,910 --> 00:19:30,620
called section header and then in my

00:19:26,710 --> 00:19:34,340
render section we I have a h3 compete

00:19:30,620 --> 00:19:37,460
tag which I want to be focused so what

00:19:34,340 --> 00:19:42,800
I'll do is that I'll attach this ref to

00:19:37,460 --> 00:19:45,950
the h3 tag next on when this component

00:19:42,800 --> 00:19:48,710
mounts I want the focus to go to that

00:19:45,950 --> 00:19:52,540
particular ref so what will I use I will

00:19:48,710 --> 00:19:55,010
use a component ded mount method and I

00:19:52,540 --> 00:19:58,160
look for that particular ref section

00:19:55,010 --> 00:20:00,110
section header and use dot focus to make

00:19:58,160 --> 00:20:03,560
sure that when this component is mounted

00:20:00,110 --> 00:20:05,810
that header is being focused now when

00:20:03,560 --> 00:20:07,370
the screen reader notices that this

00:20:05,810 --> 00:20:09,830
particular component has the focus it

00:20:07,370 --> 00:20:12,590
will read out its content and it will be

00:20:09,830 --> 00:20:17,000
easier for the user to know where they

00:20:12,590 --> 00:20:19,810
are like we discussed earlier let

00:20:17,000 --> 00:20:22,580
button's be buttons for God's sake

00:20:19,810 --> 00:20:23,870
always remember this again this is not

00:20:22,580 --> 00:20:27,680
just about buttons this could be about

00:20:23,870 --> 00:20:29,240
any element in HTML try to use semantic

00:20:27,680 --> 00:20:32,180
hTML as much as possible

00:20:29,240 --> 00:20:35,570
don't try to repurpose some other some

00:20:32,180 --> 00:20:38,720
type of HTML tag for something it was

00:20:35,570 --> 00:20:41,000
not meant for use anchor tags for links

00:20:38,720 --> 00:20:44,900
use button for buttons use tables if you

00:20:41,000 --> 00:20:47,420
need to that example that we saw earlier

00:20:44,900 --> 00:20:50,780
the button with the made out of Dave

00:20:47,420 --> 00:20:53,780
don't do that use a button attach an

00:20:50,780 --> 00:20:54,890
onclick handler to it if you want it to

00:20:53,780 --> 00:20:57,500
look like something else if you want

00:20:54,890 --> 00:21:01,040
your button to look like anchor tag you

00:20:57,500 --> 00:21:08,600
CSS for it but don't use anchor tag to

00:21:01,040 --> 00:21:10,970
make it next let's talk about SVG's SVG

00:21:08,600 --> 00:21:14,090
is by default they are not passed

00:21:10,970 --> 00:21:16,430
properly by screen readers but still

00:21:14,090 --> 00:21:18,920
SVG's are better than PNG is if you want

00:21:16,430 --> 00:21:21,050
to use icons this is especially

00:21:18,920 --> 00:21:22,580
important for people with low vision who

00:21:21,050 --> 00:21:25,940
might need to zoom

00:21:22,580 --> 00:21:27,679
on the screen to see to read what's in

00:21:25,940 --> 00:21:30,769
there

00:21:27,679 --> 00:21:33,950
now since SVG scale better if if you

00:21:30,769 --> 00:21:39,010
zoom in on it it won't break it won't

00:21:33,950 --> 00:21:40,909
blur it won't be what's it called

00:21:39,010 --> 00:21:43,250
basically you can understand what's in

00:21:40,909 --> 00:21:44,779
there but with some PNG is if we zoom in

00:21:43,250 --> 00:21:46,220
too much you might not be able to see

00:21:44,779 --> 00:21:50,360
what's in there you might not be able to

00:21:46,220 --> 00:21:52,850
understand it it's too blurry so how to

00:21:50,360 --> 00:21:55,549
make SVG's accessible you can use the

00:21:52,850 --> 00:21:58,010
title and description tags that are

00:21:55,549 --> 00:21:59,960
supported by SVG screenreader do read

00:21:58,010 --> 00:22:02,090
this out so make sure you have this

00:21:59,960 --> 00:22:03,830
whenever you're using SVG here is an

00:22:02,090 --> 00:22:10,250
example of how to do it I think I picked

00:22:03,830 --> 00:22:11,690
it off so this SVG has a title and

00:22:10,250 --> 00:22:13,490
description screen reader will read it

00:22:11,690 --> 00:22:16,120
out and the user will be able to

00:22:13,490 --> 00:22:20,539
understand what they're looking at

00:22:16,120 --> 00:22:22,639
context is key context is super super

00:22:20,539 --> 00:22:24,289
important no matter what you're doing

00:22:22,639 --> 00:22:27,200
where you are especially so in

00:22:24,289 --> 00:22:29,750
accessibility take a look at this icon

00:22:27,200 --> 00:22:32,659
over here it's a common enough icon it's

00:22:29,750 --> 00:22:36,139
across sometimes it means close

00:22:32,659 --> 00:22:38,450
sometimes it means delete you need to

00:22:36,139 --> 00:22:40,880
specify exactly what the purpose of that

00:22:38,450 --> 00:22:45,769
icon is in the context you're using it

00:22:40,880 --> 00:22:50,179
if you don't do that you know it's like

00:22:45,769 --> 00:22:53,149
Apple and Apple one of those is super

00:22:50,179 --> 00:22:59,210
popular the other one manufactures fancy

00:22:53,149 --> 00:23:01,190
laptops right so make sure you specify

00:22:59,210 --> 00:23:04,580
the context when you're using icons be

00:23:01,190 --> 00:23:06,440
it SVG PNG whatever add custom titles

00:23:04,580 --> 00:23:09,039
whenever you you can to provide

00:23:06,440 --> 00:23:12,679
contextual info to screen readers and

00:23:09,039 --> 00:23:15,909
make sure that you can do this for any

00:23:12,679 --> 00:23:19,519
type of element you should know this

00:23:15,909 --> 00:23:21,830
next colors are important that can also

00:23:19,519 --> 00:23:23,720
be a problem typically when we design

00:23:21,830 --> 00:23:26,600
our web apps we put a lot of stock in

00:23:23,720 --> 00:23:28,850
colors hey it's green right that means

00:23:26,600 --> 00:23:30,500
success that means say it's red that

00:23:28,850 --> 00:23:33,559
means error

00:23:30,500 --> 00:23:36,380
it means delete blue is for info or for

00:23:33,559 --> 00:23:38,960
update the problem begins to have

00:23:36,380 --> 00:23:41,960
when we begin to rely solely on colors

00:23:38,960 --> 00:23:45,440
to provide meaning that should not

00:23:41,960 --> 00:23:47,060
happen because colorblind people are

00:23:45,440 --> 00:23:49,400
going to have a very very very tough

00:23:47,060 --> 00:23:52,370
time there with it you don't want to

00:23:49,400 --> 00:23:55,250
trouble them so much another type of

00:23:52,370 --> 00:23:58,490
problem that occurs when we are using

00:23:55,250 --> 00:24:02,810
the wrong colors is when there's less

00:23:58,490 --> 00:24:05,090
contrast people with low vision cannot

00:24:02,810 --> 00:24:07,370
differentiate between two colors that

00:24:05,090 --> 00:24:10,670
are of same hue and the contrast between

00:24:07,370 --> 00:24:13,880
them is very less so you might think

00:24:10,670 --> 00:24:18,170
that you have a very visible pale red

00:24:13,880 --> 00:24:19,910
background and dark red foreground but

00:24:18,170 --> 00:24:22,700
someone with low vision may not be able

00:24:19,910 --> 00:24:25,460
to see anything on that screen you don't

00:24:22,700 --> 00:24:28,040
want that to happen so choose your

00:24:25,460 --> 00:24:30,220
colors white wisely and try not to put

00:24:28,040 --> 00:24:33,710
too much talk or too much meaning into

00:24:30,220 --> 00:24:36,740
be colors sure use that but make sure

00:24:33,710 --> 00:24:38,630
you provided additional info you provide

00:24:36,740 --> 00:24:40,760
the contextual information along with

00:24:38,630 --> 00:24:42,800
the color to make sure that your user

00:24:40,760 --> 00:24:44,960
understands what is happening what

00:24:42,800 --> 00:24:47,390
they're doing what they need to do pair

00:24:44,960 --> 00:24:49,490
the color with text or descriptive icons

00:24:47,390 --> 00:24:52,250
that the user can easily understand and

00:24:49,490 --> 00:24:56,440
use and ensure high contrast between

00:24:52,250 --> 00:24:59,600
element background and foreground now

00:24:56,440 --> 00:25:01,490
time for some opinion accessibility

00:24:59,600 --> 00:25:04,820
benefits more people than you would

00:25:01,490 --> 00:25:07,480
think when we talk about or when we

00:25:04,820 --> 00:25:10,220
think about physical disability when we

00:25:07,480 --> 00:25:11,900
talk about places being accessible when

00:25:10,220 --> 00:25:14,600
we even think of the dips in the

00:25:11,900 --> 00:25:17,180
sidewalk that you see are those being

00:25:14,600 --> 00:25:20,420
used only by people who are physically

00:25:17,180 --> 00:25:22,310
disabled who are on wheelchairs or are

00:25:20,420 --> 00:25:27,470
they also being used by other people

00:25:22,310 --> 00:25:29,830
parents with babies in strollers all the

00:25:27,470 --> 00:25:32,390
people older people with low mobility

00:25:29,830 --> 00:25:34,850
people like me who still likes to work

00:25:32,390 --> 00:25:38,330
down that you know even though I can

00:25:34,850 --> 00:25:41,270
step aside and you know the point is not

00:25:38,330 --> 00:25:47,810
that the point is don't exclude anyone

00:25:41,270 --> 00:25:49,630
if you can if if you start thinking of

00:25:47,810 --> 00:25:52,840
accessibility like a feature

00:25:49,630 --> 00:25:57,550
then you are by design excluding people

00:25:52,840 --> 00:26:00,790
and that's harmful so when we talk about

00:25:57,550 --> 00:26:03,040
web accessibility if our apps are

00:26:00,790 --> 00:26:05,590
accessible that does not just mean that

00:26:03,040 --> 00:26:07,930
people who are blind would be able to

00:26:05,590 --> 00:26:10,390
use it but think of older people who

00:26:07,930 --> 00:26:12,100
have a tough time trying to memorize the

00:26:10,390 --> 00:26:16,690
newer interfaces that we come up with

00:26:12,100 --> 00:26:18,910
every day they might be able to grasp it

00:26:16,690 --> 00:26:21,130
better more easily if they are using the

00:26:18,910 --> 00:26:23,620
accessibility options increasing the

00:26:21,130 --> 00:26:29,020
font size they might have an easier time

00:26:23,620 --> 00:26:31,600
with it so try to keep that in mind it

00:26:29,020 --> 00:26:34,150
might seem like a lot of work at first

00:26:31,600 --> 00:26:36,100
but somebody said to me that once you

00:26:34,150 --> 00:26:38,710
get into the flow of it once you start

00:26:36,100 --> 00:26:41,110
writing your code semantically it gets

00:26:38,710 --> 00:26:43,450
very easy and you just start doing it

00:26:41,110 --> 00:26:46,390
without thinking so that is something

00:26:43,450 --> 00:26:48,490
that where we need to get at and for

00:26:46,390 --> 00:26:50,530
that we have several accessibility tools

00:26:48,490 --> 00:26:53,920
as well that will make our life easier

00:26:50,530 --> 00:26:55,450
while we are trying to get there since I

00:26:53,920 --> 00:26:58,810
don't have enough time I just want to

00:26:55,450 --> 00:27:00,250
very briefly depend to unit testing what

00:26:58,810 --> 00:27:01,740
are the kinds of things that we should

00:27:00,250 --> 00:27:04,210
test when we are developing react apps

00:27:01,740 --> 00:27:05,770
we should test whether our area

00:27:04,210 --> 00:27:08,320
attribute values are being set correctly

00:27:05,770 --> 00:27:11,320
whether our page title is being updated

00:27:08,320 --> 00:27:13,990
correctly whether our elements are being

00:27:11,320 --> 00:27:16,740
focused when and when they should where

00:27:13,990 --> 00:27:18,840
whether our announcers are working fine

00:27:16,740 --> 00:27:23,200
everything apart from this should be

00:27:18,840 --> 00:27:26,050
caught in the lender here is a very

00:27:23,200 --> 00:27:29,020
simple unit example here I have a react

00:27:26,050 --> 00:27:31,870
component name button which has a label

00:27:29,020 --> 00:27:34,870
called close he in this test I am

00:27:31,870 --> 00:27:37,810
checking whether the underlying HTML

00:27:34,870 --> 00:27:38,560
button has the Aria label property set

00:27:37,810 --> 00:27:41,530
correctly or not

00:27:38,560 --> 00:27:43,930
this will ensure that the screen reader

00:27:41,530 --> 00:27:46,810
is able to read the value of this button

00:27:43,930 --> 00:27:50,560
correctly so you can think of more tests

00:27:46,810 --> 00:27:51,190
like this time for tools dev tools for

00:27:50,560 --> 00:27:53,140
accessibility

00:27:51,190 --> 00:27:56,830
we have several libraries take your pick

00:27:53,140 --> 00:27:57,850
we have es lint plugin for accessibility

00:27:56,830 --> 00:28:00,250
in JSX

00:27:57,850 --> 00:28:01,750
it's a very cool useful lender that will

00:28:00,250 --> 00:28:03,000
tell you where you are falling short

00:28:01,750 --> 00:28:04,740
what you should do

00:28:03,000 --> 00:28:07,560
and what what things you should correct

00:28:04,740 --> 00:28:11,630
in your code we have react accessibility

00:28:07,560 --> 00:28:15,090
analyser and react acts which throw

00:28:11,630 --> 00:28:16,800
errors into your console so that you

00:28:15,090 --> 00:28:19,620
know where things are going wrong in

00:28:16,800 --> 00:28:23,190
terms of accessibility if you are a

00:28:19,620 --> 00:28:25,350
beginner and you want to start into this

00:28:23,190 --> 00:28:28,680
but are not sure where to begin the

00:28:25,350 --> 00:28:31,560
create react app repo by Facebook is a

00:28:28,680 --> 00:28:34,440
very good starter it also comes with

00:28:31,560 --> 00:28:37,650
several accessibility options configured

00:28:34,440 --> 00:28:40,050
so it would be a good place to start and

00:28:37,650 --> 00:28:42,510
then there are several accessible

00:28:40,050 --> 00:28:44,910
modules available at this link over here

00:28:42,510 --> 00:28:48,690
react not rocks slash tag slash

00:28:44,910 --> 00:28:51,090
accessible there are several other tools

00:28:48,690 --> 00:28:52,620
that you might be able to use when

00:28:51,090 --> 00:28:56,610
you're developing your app there's

00:28:52,620 --> 00:28:59,700
Chrome extension called C this is a very

00:28:56,610 --> 00:29:01,770
cool very useful one in which you are

00:28:59,700 --> 00:29:04,110
able to see your app from the

00:29:01,770 --> 00:29:06,810
perspective of a colorblind person you

00:29:04,110 --> 00:29:11,130
are able to see it the way a colorblind

00:29:06,810 --> 00:29:13,170
person would see it and it really at

00:29:11,130 --> 00:29:18,750
first it can be really jarring but also

00:29:13,170 --> 00:29:20,310
it should generate a lot of empathy and

00:29:18,750 --> 00:29:23,310
then you'll be able to understand better

00:29:20,310 --> 00:29:25,890
and try it better code design better

00:29:23,310 --> 00:29:27,750
apps and make sure that whatever

00:29:25,890 --> 00:29:32,940
shortcomings you have in your code right

00:29:27,750 --> 00:29:36,540
now those are removed then there is

00:29:32,940 --> 00:29:39,030
another tool called contrast checkol it

00:29:36,540 --> 00:29:40,860
will help you decide whether help you

00:29:39,030 --> 00:29:42,150
discover whether the contrast in your

00:29:40,860 --> 00:29:45,600
app is fine or not

00:29:42,150 --> 00:29:47,370
and finally the react Docs and

00:29:45,600 --> 00:29:49,710
accessibility are very useful I have

00:29:47,370 --> 00:29:53,360
that from them personally and I found

00:29:49,710 --> 00:29:56,670
them a good good place to start with

00:29:53,360 --> 00:29:57,540
alright so that was my talk thank you

00:29:56,670 --> 00:29:59,790
for being here today

00:29:57,540 --> 00:30:01,890
please follow me on social media that's

00:29:59,790 --> 00:30:04,650
my twitter handle over there nick nevada

00:30:01,890 --> 00:30:07,410
'the email me if you want to talk want

00:30:04,650 --> 00:30:10,440
to say hi or have questions want to yell

00:30:07,410 --> 00:30:13,200
at me feel free that's high ad anyway

00:30:10,440 --> 00:30:15,390
that taught in and please also visit the

00:30:13,200 --> 00:30:15,900
node experts website node experts calm

00:30:15,390 --> 00:30:17,490
and

00:30:15,900 --> 00:30:20,990
the cool things that we have been doing

00:30:17,490 --> 00:30:20,990
thank you so much

00:30:23,530 --> 00:30:28,569

YouTube URL: https://www.youtube.com/watch?v=u-5_x_YnVN0


