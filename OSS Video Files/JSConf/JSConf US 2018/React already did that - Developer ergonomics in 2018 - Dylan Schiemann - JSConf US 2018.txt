Title: React already did that - Developer ergonomics in 2018 - Dylan Schiemann - JSConf US 2018
Publication date: 2018-11-12
Playlist: JSConf US 2018
Description: 
	
Captions: 
	00:00:00,320 --> 00:00:03,840
[Music]

00:00:02,070 --> 00:00:05,660
[Applause]

00:00:03,840 --> 00:00:07,410
[Music]

00:00:05,660 --> 00:00:09,280
[Applause]

00:00:07,410 --> 00:00:11,020
[Music]

00:00:09,280 --> 00:00:12,780
[Applause]

00:00:11,020 --> 00:00:15,920
[Music]

00:00:12,780 --> 00:00:15,920
[Applause]

00:00:16,870 --> 00:00:24,050
[Music]

00:00:26,250 --> 00:00:31,689
all right I can't see any of you which

00:00:28,660 --> 00:00:33,160
I'm sure you've heard today so if you're

00:00:31,689 --> 00:00:35,050
here for I talked about how to better

00:00:33,160 --> 00:00:37,510
use react you should probably go to the

00:00:35,050 --> 00:00:40,660
a track so this talk is more about fun

00:00:37,510 --> 00:00:42,700
and just silliness quickly I'm Dylan

00:00:40,660 --> 00:00:43,780
I've been working with JavaScript since

00:00:42,700 --> 00:00:46,090
00:00:43,780 --> 00:00:47,980
I was a bit of a masochist picking it up

00:00:46,090 --> 00:00:49,329
that early you really couldn't do that

00:00:47,980 --> 00:00:52,650
much with it at the time I was trying to

00:00:49,329 --> 00:00:54,940
put results of my experiments in

00:00:52,650 --> 00:00:56,500
physical chemistry online at the time

00:00:54,940 --> 00:00:59,470
and about eight years later I could do

00:00:56,500 --> 00:01:03,670
that with dojo so things have changed a

00:00:59,470 --> 00:01:05,530
lot over that time and I had my jokes

00:01:03,670 --> 00:01:07,180
stolen by Janna in her talk this morning

00:01:05,530 --> 00:01:08,920
because my middle name is Carl so I

00:01:07,180 --> 00:01:10,030
thought it would be great to say that

00:01:08,920 --> 00:01:13,450
the reason it's called Carlsbad is

00:01:10,030 --> 00:01:15,729
because I'm bad but anyway Carlsbad has

00:01:13,450 --> 00:01:17,470
an even more unusual history kind of

00:01:15,729 --> 00:01:20,080
like how most things work in JavaScript

00:01:17,470 --> 00:01:22,810
or browsers so the town was discovered

00:01:20,080 --> 00:01:24,520
in late 1800s by someone and they

00:01:22,810 --> 00:01:27,010
collected a water sample and it happened

00:01:24,520 --> 00:01:29,500
to match the water quality and purity of

00:01:27,010 --> 00:01:31,990
a spa in the Czech Republic that had the

00:01:29,500 --> 00:01:34,420
name Carlsbad but with a k' which stands

00:01:31,990 --> 00:01:36,549
for charles's bath which because it was

00:01:34,420 --> 00:01:38,650
like a nice pure water city had a very

00:01:36,549 --> 00:01:41,560
nice spa so of course it's named after

00:01:38,650 --> 00:01:43,270
something spelled wrong with after

00:01:41,560 --> 00:01:45,220
something that no longer has that name

00:01:43,270 --> 00:01:47,140
and no longer has any relationship to

00:01:45,220 --> 00:01:48,549
the original source kind of like almost

00:01:47,140 --> 00:01:50,200
everything that happens today in

00:01:48,549 --> 00:01:53,710
browsers so I thought that was pretty

00:01:50,200 --> 00:01:55,540
fitting I also in searching for the logo

00:01:53,710 --> 00:01:57,369
found this lovely other logo called

00:01:55,540 --> 00:01:59,439
Carlsbad Tech and that reminded me of

00:01:57,369 --> 00:02:01,240
for us his talk about how to build the

00:01:59,439 --> 00:02:02,170
world's worst website so I thought that

00:02:01,240 --> 00:02:05,080
was pretty funny because they probably

00:02:02,170 --> 00:02:10,750
did not intend for it to be Carlsbad

00:02:05,080 --> 00:02:12,909
tech instead of the Carlsbad tank also I

00:02:10,750 --> 00:02:15,790
have never had so many mosquito bites in

00:02:12,909 --> 00:02:17,799
my life I am always the person who

00:02:15,790 --> 00:02:19,660
manages stand on everyone else who gets

00:02:17,799 --> 00:02:22,770
bit and this time that's been me I've

00:02:19,660 --> 00:02:24,760
had 50 bytes or so so I'm gonna remember

00:02:22,770 --> 00:02:28,540
mosquito je s cough

00:02:24,760 --> 00:02:30,129
worker Tom Jen's pixel art for us is

00:02:28,540 --> 00:02:32,230
terrible website and a few other things

00:02:30,129 --> 00:02:33,760
and so so far I'm having a great time

00:02:32,230 --> 00:02:36,220
now how many are here for their first

00:02:33,760 --> 00:02:38,409
time at je s cough raise your hands so

00:02:36,220 --> 00:02:40,599
if I'm not blind it looks like roughly

00:02:38,409 --> 00:02:42,819
half of you it's actually my first time

00:02:40,599 --> 00:02:44,319
as well even though I've had a ticket

00:02:42,819 --> 00:02:45,549
four or five times before and always had

00:02:44,319 --> 00:02:47,519
to give it to someone else because the

00:02:45,549 --> 00:02:51,540
world had conspired against me to attend

00:02:47,519 --> 00:02:53,799
but I'd like to flash back to je s cough

00:02:51,540 --> 00:02:57,060
2013 how many of you were here for that

00:02:53,799 --> 00:03:00,250
event okay roughly ten to twenty percent

00:02:57,060 --> 00:03:02,079
so the first je s cough a few years

00:03:00,250 --> 00:03:05,470
before that Peter Higgins one of our

00:03:02,079 --> 00:03:07,329
dojo contributors early on would pretty

00:03:05,470 --> 00:03:08,829
much troll everyone as well as Kris

00:03:07,329 --> 00:03:10,299
Williams he got into it quite well the

00:03:08,829 --> 00:03:12,519
original creator of je s coffin he would

00:03:10,299 --> 00:03:14,049
say you know someone would come up with

00:03:12,519 --> 00:03:15,310
this talk about some amazing new thing

00:03:14,049 --> 00:03:18,040
and they begged oder already did that

00:03:15,310 --> 00:03:19,930
come on like get with it right and the

00:03:18,040 --> 00:03:22,900
funny thing was jQuery was really

00:03:19,930 --> 00:03:25,510
popular but dojo had like promises it

00:03:22,900 --> 00:03:28,389
had modules and had a build system when

00:03:25,510 --> 00:03:30,310
it had the equivalent of web components

00:03:28,389 --> 00:03:33,160
and it had some V Thomas stuff and have

00:03:30,310 --> 00:03:36,280
all these things like in 2007 and so

00:03:33,160 --> 00:03:38,680
this meme came to happen but J s come

00:03:36,280 --> 00:03:41,410
2013 was also the year that react was

00:03:38,680 --> 00:03:43,449
first announced so it was kind of a cool

00:03:41,410 --> 00:03:45,370
thing and here's Pete Aikens giving the

00:03:43,449 --> 00:03:47,590
talk dojo already did that and they

00:03:45,370 --> 00:03:49,359
managed to capture an awesome screenshot

00:03:47,590 --> 00:03:51,970
of him making a ridiculous face so

00:03:49,359 --> 00:03:53,560
that's why I had to show it and the meme

00:03:51,970 --> 00:03:56,590
is dojo already did that now

00:03:53,560 --> 00:03:59,169
unfortunately the Dadd hashtag has been

00:03:56,590 --> 00:04:00,819
super like taken over by something

00:03:59,169 --> 00:04:02,079
really not worth checking out I don't

00:04:00,819 --> 00:04:05,440
remember where it is but just don't do

00:04:02,079 --> 00:04:07,449
it but the funny thing is I was never

00:04:05,440 --> 00:04:09,099
involved with this but I'd show up when

00:04:07,449 --> 00:04:11,109
I'd meet people like adios Monty who's

00:04:09,099 --> 00:04:13,720
known as like the web performance you

00:04:11,109 --> 00:04:15,250
know God of all talks and he I show up

00:04:13,720 --> 00:04:17,079
in Google a couple years ago in London

00:04:15,250 --> 00:04:18,909
and he's like hey Dylan it's time for

00:04:17,079 --> 00:04:20,739
our selfie man and he's got the dojo I

00:04:18,909 --> 00:04:22,780
already did that you know signs for us

00:04:20,739 --> 00:04:24,820
to take the photos so this meme has

00:04:22,780 --> 00:04:26,020
followed me around forever and I'm

00:04:24,820 --> 00:04:28,030
hoping that this is the year I can

00:04:26,020 --> 00:04:31,510
change it to be react already did that

00:04:28,030 --> 00:04:34,360
also yani a formidable he did this

00:04:31,510 --> 00:04:36,010
really fun tweet a few months ago which

00:04:34,360 --> 00:04:37,840
was looking back at some of the quotes

00:04:36,010 --> 00:04:38,380
when react was first announced at je s

00:04:37,840 --> 00:04:40,870
coffee and

00:04:38,380 --> 00:04:44,290
it was pretty much universally panned it

00:04:40,870 --> 00:04:47,020
was like ohmygod JSX why stop ruining

00:04:44,290 --> 00:04:49,420
j/s people I can see this getting out of

00:04:47,020 --> 00:04:51,130
hand quickly this is terrible so did we

00:04:49,420 --> 00:04:53,200
really not learn anything from the PHP

00:04:51,130 --> 00:04:55,690
days are you seriously gonna mix markup

00:04:53,200 --> 00:04:57,640
and logic again like people just love to

00:04:55,690 --> 00:05:00,460
react after that but it's super you know

00:04:57,640 --> 00:05:03,070
it persevered and listened so the

00:05:00,460 --> 00:05:05,410
question today is has react already done

00:05:03,070 --> 00:05:08,290
that and so you could answer that by has

00:05:05,410 --> 00:05:10,750
react one what will we say in five years

00:05:08,290 --> 00:05:11,310
at je s Kampf 2023 who wherever that

00:05:10,750 --> 00:05:13,600
might be

00:05:11,310 --> 00:05:15,130
will we consider alternatives how many

00:05:13,600 --> 00:05:17,650
of you use react as your primary

00:05:15,130 --> 00:05:23,410
framework of choice so again more than

00:05:17,650 --> 00:05:27,220
half which is great so we started to

00:05:23,410 --> 00:05:29,410
work on dojo back in 2004 and we built

00:05:27,220 --> 00:05:31,510
it over the years we came out with one

00:05:29,410 --> 00:05:33,580
dot Oh in 2007 and we came out with two

00:05:31,510 --> 00:05:34,930
dot Oh a few months ago and then three

00:05:33,580 --> 00:05:36,460
dot o a couple months later because we

00:05:34,930 --> 00:05:40,810
want to catch up to react to sixteen as

00:05:36,460 --> 00:05:43,450
quickly as possible and but we did that

00:05:40,810 --> 00:05:45,070
what we realized is it's time to you

00:05:43,450 --> 00:05:47,980
know pretty much our framework existed

00:05:45,070 --> 00:05:50,530
before es5 was finalized before es6

00:05:47,980 --> 00:05:53,320
before type script before web components

00:05:50,530 --> 00:05:55,960
before html5 before mobile browsers came

00:05:53,320 --> 00:05:57,670
out so it was a pretty heavily technical

00:05:55,960 --> 00:05:58,960
deaded framework and so we said all

00:05:57,670 --> 00:06:00,700
right if we're not just going to use

00:05:58,960 --> 00:06:02,230
react if we want to create our own thing

00:06:00,700 --> 00:06:04,000
and we've primarily been focused on the

00:06:02,230 --> 00:06:05,740
enterprise over the years what are the

00:06:04,000 --> 00:06:08,370
things that matter to us and for us that

00:06:05,740 --> 00:06:10,690
was developer efficiency and ergonomics

00:06:08,370 --> 00:06:13,120
longevity of things our customers have

00:06:10,690 --> 00:06:15,780
apps that they wrote so funny story

00:06:13,120 --> 00:06:18,970
Apple had the Apple store running dojo

00:06:15,780 --> 00:06:20,410
0.44 like eight years which was just we

00:06:18,970 --> 00:06:21,340
would cringe we would beg them to update

00:06:20,410 --> 00:06:24,220
and like now it works

00:06:21,340 --> 00:06:25,600
all right thanks Apple unlike this

00:06:24,220 --> 00:06:27,550
laptop which is on its fourth

00:06:25,600 --> 00:06:29,080
replacement and a year-and-a-half thing

00:06:27,550 --> 00:06:31,020
but at least they keep replacing it so

00:06:29,080 --> 00:06:33,520
that's good

00:06:31,020 --> 00:06:34,960
interoperability I'm kind of tired of

00:06:33,520 --> 00:06:37,690
framework Wars I want things to just

00:06:34,960 --> 00:06:39,310
work together and if any framework says

00:06:37,690 --> 00:06:41,830
it's perfect at everything it's probably

00:06:39,310 --> 00:06:42,910
not perfect at anything so you know when

00:06:41,830 --> 00:06:44,590
you build something you need to be very

00:06:42,910 --> 00:06:45,550
focused on what you're trying to do what

00:06:44,590 --> 00:06:49,450
you're trying to achieve and what you're

00:06:45,550 --> 00:06:51,910
trying to build and so I would say that

00:06:49,450 --> 00:06:52,210
react has some challenges today as it

00:06:51,910 --> 00:06:54,400
grows

00:06:52,210 --> 00:06:56,410
because we have been at the point where

00:06:54,400 --> 00:06:58,090
we were like a dominant framework and

00:06:56,410 --> 00:07:00,699
now we're kind of like this unknown

00:06:58,090 --> 00:07:02,919
framework that no one's using and the

00:07:00,699 --> 00:07:04,870
challenges you have is as you become big

00:07:02,919 --> 00:07:06,430
you have to support legacy you have to

00:07:04,870 --> 00:07:07,960
support all your users because you don't

00:07:06,430 --> 00:07:09,430
want to break them which of course is a

00:07:07,960 --> 00:07:11,710
good thing but that makes it very

00:07:09,430 --> 00:07:13,539
difficult to figure out what you want to

00:07:11,710 --> 00:07:14,979
do next and reinvent yourself to stay

00:07:13,539 --> 00:07:16,990
relevant instead of something else

00:07:14,979 --> 00:07:18,520
coming along to replace you and I think

00:07:16,990 --> 00:07:20,169
that's the fundamental challenge that no

00:07:18,520 --> 00:07:22,599
one has solved in the 20 years of

00:07:20,169 --> 00:07:24,789
JavaScript and that we invent something

00:07:22,599 --> 00:07:26,139
and it's great and then we get fatigued

00:07:24,789 --> 00:07:27,789
from supporting it the early

00:07:26,139 --> 00:07:30,130
contributors get burnout they back off

00:07:27,789 --> 00:07:31,900
and then someone else comes along with

00:07:30,130 --> 00:07:34,440
the next big thing maybe it's view maybe

00:07:31,900 --> 00:07:37,720
it's felt maybe it's new dojo whatever

00:07:34,440 --> 00:07:40,270
there's I find the biggest challenge

00:07:37,720 --> 00:07:42,940
react has today is cohesion across

00:07:40,270 --> 00:07:44,740
project so I imagine if all of you

00:07:42,940 --> 00:07:46,389
raised hands and shared your react

00:07:44,740 --> 00:07:48,340
applications yeah your render functions

00:07:46,389 --> 00:07:49,870
would look similar but I bet you might

00:07:48,340 --> 00:07:51,669
be using different routers different

00:07:49,870 --> 00:07:53,440
components different approaches to your

00:07:51,669 --> 00:07:54,729
build process some of you might be using

00:07:53,440 --> 00:07:56,320
typescript some of you might be using

00:07:54,729 --> 00:07:58,419
flow some of you might be using vanilla

00:07:56,320 --> 00:08:00,820
JavaScript and so on and there's not a

00:07:58,419 --> 00:08:02,409
lot of direction around what's the right

00:08:00,820 --> 00:08:04,449
way to build the perfect react

00:08:02,409 --> 00:08:07,990
application and that's both its strength

00:08:04,449 --> 00:08:11,370
and its weakness and like I said too

00:08:07,990 --> 00:08:13,870
many choices so developer ergonomics

00:08:11,370 --> 00:08:16,300
means many things to many people but to

00:08:13,870 --> 00:08:18,550
me what I'm trying to get at is I want

00:08:16,300 --> 00:08:19,930
to do things that are the right way out

00:08:18,550 --> 00:08:21,849
of the box without having to be an

00:08:19,930 --> 00:08:26,110
expert at every esoteric feature of the

00:08:21,849 --> 00:08:27,699
language so by default and like you know

00:08:26,110 --> 00:08:29,889
something that's nice and ergonomically

00:08:27,699 --> 00:08:31,930
friendly has a consistent architecture

00:08:29,889 --> 00:08:33,610
it doesn't feel like each package or

00:08:31,930 --> 00:08:36,669
each piece of my framework is different

00:08:33,610 --> 00:08:39,099
or feels different or feels inconclusive

00:08:36,669 --> 00:08:40,839
give me some good defaults out of the

00:08:39,099 --> 00:08:42,459
box so don't make me think if I don't

00:08:40,839 --> 00:08:44,290
have to like if I know better than you

00:08:42,459 --> 00:08:46,360
framework author great let me do my

00:08:44,290 --> 00:08:48,250
thing but by default don't make me

00:08:46,360 --> 00:08:50,589
answer 5,000 questions before I get

00:08:48,250 --> 00:08:52,779
started and of course help me facilitate

00:08:50,589 --> 00:08:54,880
the authoring of better code so if a

00:08:52,779 --> 00:08:56,079
framework is getting in my way or it's

00:08:54,880 --> 00:08:57,520
I'm having to go through great

00:08:56,079 --> 00:08:59,380
workarounds to get it to behave

00:08:57,520 --> 00:09:00,940
consistently I've kind of lost the

00:08:59,380 --> 00:09:04,779
benefit of having a framework to begin

00:09:00,940 --> 00:09:05,710
with so I'm a big fan of typescript I'm

00:09:04,779 --> 00:09:07,510
sure that's not

00:09:05,710 --> 00:09:09,460
prising to anyone who has met me I know

00:09:07,510 --> 00:09:10,660
typescript gets mixed ratings in the

00:09:09,460 --> 00:09:13,570
reactive community and I think that's

00:09:10,660 --> 00:09:16,720
okay so and there's flow of course so

00:09:13,570 --> 00:09:18,850
typescript I like it better because it

00:09:16,720 --> 00:09:21,010
supports interfaces and that goes back

00:09:18,850 --> 00:09:22,540
to that interoperability goal of hey

00:09:21,010 --> 00:09:24,640
I've got this dependency and I want to

00:09:22,540 --> 00:09:26,230
replace it with something else in almost

00:09:24,640 --> 00:09:28,660
every other programming language we have

00:09:26,230 --> 00:09:30,310
an interface definition that we know if

00:09:28,660 --> 00:09:31,630
this object has this method and this

00:09:30,310 --> 00:09:33,790
property in this whatever and whatever

00:09:31,630 --> 00:09:35,800
then I can safely swap that out with

00:09:33,790 --> 00:09:36,640
something else in JavaScript we've never

00:09:35,800 --> 00:09:38,830
really had that

00:09:36,640 --> 00:09:40,510
and so typescript facilitates that but

00:09:38,830 --> 00:09:42,400
you need to define some types to then be

00:09:40,510 --> 00:09:44,020
able to define interfaces to then be

00:09:42,400 --> 00:09:48,460
able to say okay I can swap this thing

00:09:44,020 --> 00:09:50,590
out with this other thing the other nice

00:09:48,460 --> 00:09:52,780
benefit of defining types in the

00:09:50,590 --> 00:09:54,850
ergonomic benefit there is that I can't

00:09:52,780 --> 00:09:57,130
remember why I wrote something the way I

00:09:54,850 --> 00:10:00,010
did two months later much less a year or

00:09:57,130 --> 00:10:02,620
two later and so typescript and flow

00:10:00,010 --> 00:10:04,330
sort of forced you to define what you

00:10:02,620 --> 00:10:06,460
were thinking and so that you can

00:10:04,330 --> 00:10:09,220
remember your own code later much less

00:10:06,460 --> 00:10:11,020
your teammates and your colleagues also

00:10:09,220 --> 00:10:12,910
I used to joke that there was no need

00:10:11,020 --> 00:10:14,380
for you know people would come to dojo

00:10:12,910 --> 00:10:17,200
and JavaScript training workshops we

00:10:14,380 --> 00:10:18,430
would lead and they'd be like Oh kid

00:10:17,200 --> 00:10:20,470
Dylan this is cool but I'm a Java

00:10:18,430 --> 00:10:22,330
developer where's my autocomplete and

00:10:20,470 --> 00:10:25,030
I'm like you're an idiot you just

00:10:22,330 --> 00:10:28,090
remember everything in your head like

00:10:25,030 --> 00:10:30,430
why why would you ever want autocomplete

00:10:28,090 --> 00:10:31,870
it makes you a lazy engineer right and

00:10:30,430 --> 00:10:34,840
that's kind of funny until you make

00:10:31,870 --> 00:10:36,820
typos and can't find them and so on so

00:10:34,840 --> 00:10:38,260
actually having first-class IDE support

00:10:36,820 --> 00:10:40,150
with auto-completion is really nice

00:10:38,260 --> 00:10:41,770
especially when you get into more

00:10:40,150 --> 00:10:44,650
involved api's that are difficult to

00:10:41,770 --> 00:10:46,240
remember so last year we wrote a

00:10:44,650 --> 00:10:48,250
framework series and we did a music

00:10:46,240 --> 00:10:50,770
theme and the idea behind it it was a

00:10:48,250 --> 00:10:53,680
200 in some page blog series so it was

00:10:50,770 --> 00:10:55,690
really concise and terse but basically

00:10:53,680 --> 00:10:57,760
we looked at frameworks and asked about

00:10:55,690 --> 00:10:59,380
a thousand questions to help you try to

00:10:57,760 --> 00:11:00,760
evaluate a framework for you and it

00:10:59,380 --> 00:11:02,740
wasn't about telling you which framework

00:11:00,760 --> 00:11:05,560
to use it was to try to help you think

00:11:02,740 --> 00:11:08,080
deeper than music selection so I used to

00:11:05,560 --> 00:11:09,520
joke that if we picked our music like we

00:11:08,080 --> 00:11:11,890
picked our framework we would all be

00:11:09,520 --> 00:11:14,800
using Justin Bieber ojs right because

00:11:11,890 --> 00:11:16,390
and that obviously was not cool in 2013

00:11:14,800 --> 00:11:18,580
and that's definitely not cool today

00:11:16,390 --> 00:11:19,540
so when you're choosing a framework a

00:11:18,580 --> 00:11:24,070
need to sort of get

00:11:19,540 --> 00:11:25,449
on the surface and dig deeper and so you

00:11:24,070 --> 00:11:26,889
know when you look at organ aam --ax I'm

00:11:25,449 --> 00:11:28,750
just gonna look at three things today

00:11:26,889 --> 00:11:31,060
that are different than react and that's

00:11:28,750 --> 00:11:32,920
view spelt and dojo and it's not because

00:11:31,060 --> 00:11:35,649
I'm saying use those instead of react

00:11:32,920 --> 00:11:37,720
but just a sort of a comparison so I'm

00:11:35,649 --> 00:11:39,610
trying to figure out why view is popular

00:11:37,720 --> 00:11:42,040
so I look at it and I think this is kind

00:11:39,610 --> 00:11:44,470
of like react it's not necessarily

00:11:42,040 --> 00:11:46,660
faster but I think the reason people

00:11:44,470 --> 00:11:50,410
like it is I think there's two reasons

00:11:46,660 --> 00:11:52,690
it's gained popularity one you can kind

00:11:50,410 --> 00:11:54,279
of use something that's closer to HTML

00:11:52,690 --> 00:11:56,290
so people who historically hate

00:11:54,279 --> 00:11:58,389
JavaScript frameworks but maybe they

00:11:56,290 --> 00:12:00,759
love to jQuery find it more approachable

00:11:58,389 --> 00:12:02,319
and easier to get started with and yet

00:12:00,759 --> 00:12:04,509
they can still build real applications

00:12:02,319 --> 00:12:07,120
out of it the other reason I think is

00:12:04,509 --> 00:12:08,949
that Evan Yu is just very good at

00:12:07,120 --> 00:12:10,329
communicating with everyone about how

00:12:08,949 --> 00:12:12,430
great the framework is and how to use it

00:12:10,329 --> 00:12:14,350
and he's very passionate and it really

00:12:12,430 --> 00:12:16,389
shows how much a strong leader of her

00:12:14,350 --> 00:12:20,110
project can really drive adoption and

00:12:16,389 --> 00:12:22,480
encourage growth smell I don't know how

00:12:20,110 --> 00:12:24,069
many of you have heard of svelte I can

00:12:22,480 --> 00:12:27,010
barely see I only see like a couple of

00:12:24,069 --> 00:12:29,410
hands going up it's intended to be the

00:12:27,010 --> 00:12:30,760
magical disappearing UI framework and

00:12:29,410 --> 00:12:32,589
the idea behind it is you write some

00:12:30,760 --> 00:12:34,420
code following some conventions that are

00:12:32,589 --> 00:12:36,010
mostly aligned with modern standards and

00:12:34,420 --> 00:12:37,389
you end up with something that doesn't

00:12:36,010 --> 00:12:38,800
feel like you used a framework at all

00:12:37,389 --> 00:12:40,569
because the build process kind of

00:12:38,800 --> 00:12:42,220
removes the pieces you don't need and

00:12:40,569 --> 00:12:43,720
that's really nice because by default

00:12:42,220 --> 00:12:46,990
you're writing code that's aligned with

00:12:43,720 --> 00:12:48,190
modern standards and doing that there

00:12:46,990 --> 00:12:51,160
are a lot of ways to measure performance

00:12:48,190 --> 00:12:52,930
and to me an ergonomic approach to

00:12:51,160 --> 00:12:56,740
building applications is one that's

00:12:52,930 --> 00:12:59,230
performant out-of-the-box so there was

00:12:56,740 --> 00:13:00,760
an article a few months ago there's this

00:12:59,230 --> 00:13:02,860
reference application called the real

00:13:00,760 --> 00:13:05,529
world application and the real world

00:13:02,860 --> 00:13:09,310
application is intended to give a more

00:13:05,529 --> 00:13:11,410
substantial than like to do MVC look at

00:13:09,310 --> 00:13:13,540
how you build applications and to tell

00:13:11,410 --> 00:13:15,189
you how does a framework actually look

00:13:13,540 --> 00:13:17,949
and how does it actually compare in the

00:13:15,189 --> 00:13:19,810
real world and so this person took a

00:13:17,949 --> 00:13:21,910
bunch of the examples basically took all

00:13:19,810 --> 00:13:24,069
the client-side frameworks that were had

00:13:21,910 --> 00:13:25,449
referenced examples embers not on there

00:13:24,069 --> 00:13:27,490
not because he didn't like ember but

00:13:25,449 --> 00:13:31,209
because ember did not provide an example

00:13:27,490 --> 00:13:33,460
so and what they found was that svelt

00:13:31,209 --> 00:13:35,110
and dojo painted much faster

00:13:33,460 --> 00:13:37,210
than any of the other options on there

00:13:35,110 --> 00:13:38,680
and app run I think which I hadn't heard

00:13:37,210 --> 00:13:42,010
of before but that's kind of cool right

00:13:38,680 --> 00:13:44,560
and then a big reason for that is the

00:13:42,010 --> 00:13:47,110
initial bundle size for svelte dojo an

00:13:44,560 --> 00:13:49,120
app run were really small and that's

00:13:47,110 --> 00:13:51,040
because spelt is doing this thing where

00:13:49,120 --> 00:13:52,690
it's basically taking all the stuff and

00:13:51,040 --> 00:13:55,149
we're moving it at Build time that you

00:13:52,690 --> 00:13:57,430
don't need and dojo is basically saying

00:13:55,149 --> 00:13:58,870
I'm only going to include for your

00:13:57,430 --> 00:14:01,600
initial render the stuff you need to

00:13:58,870 --> 00:14:02,890
render upfront so it's doing all the

00:14:01,600 --> 00:14:06,160
different optimizations that you might

00:14:02,890 --> 00:14:09,070
want we also did a hacker news PWA dojo

00:14:06,160 --> 00:14:11,140
example application and I didn't know

00:14:09,070 --> 00:14:12,850
lighthouse could get all 100's which is

00:14:11,140 --> 00:14:15,300
pretty cool it was pretty amazing

00:14:12,850 --> 00:14:18,520
now the reason is we've basically

00:14:15,300 --> 00:14:20,110
cheated by only including what you need

00:14:18,520 --> 00:14:22,270
to actually render your app now it

00:14:20,110 --> 00:14:23,709
sounds simple but a lot of times you're

00:14:22,270 --> 00:14:25,330
like oh just use code splitting just use

00:14:23,709 --> 00:14:26,980
webpack and then you go down seven

00:14:25,330 --> 00:14:29,290
levels of hell and you never actually

00:14:26,980 --> 00:14:30,910
get there and the idea behind a good

00:14:29,290 --> 00:14:32,560
ergonomics solution is to say alright if

00:14:30,910 --> 00:14:34,300
we can have to use webpack you don't

00:14:32,560 --> 00:14:36,160
have to be a web pack expert to get the

00:14:34,300 --> 00:14:38,110
fastest application instead we'll just

00:14:36,160 --> 00:14:43,540
look at what you're doing and we'll

00:14:38,110 --> 00:14:46,540
optimize it for you by default so dojos

00:14:43,540 --> 00:14:48,640
pros you know they're one way to look at

00:14:46,540 --> 00:14:49,779
it obviously when you decide what

00:14:48,640 --> 00:14:51,520
framework to use you need to make your

00:14:49,779 --> 00:14:54,130
own pros and cons lists based on your

00:14:51,520 --> 00:14:56,410
own analysis but the idea is it's got

00:14:54,130 --> 00:14:58,000
components they import an export to web

00:14:56,410 --> 00:15:00,580
components it's using typescript for

00:14:58,000 --> 00:15:02,320
ergonomics it leverages and aligns with

00:15:00,580 --> 00:15:03,610
a bunch of modern standards rather than

00:15:02,320 --> 00:15:05,529
trying to deviate from them or come up

00:15:03,610 --> 00:15:06,640
with its own thing but it's also

00:15:05,529 --> 00:15:08,890
something that's really really

00:15:06,640 --> 00:15:14,980
straightforward and easy to make fast

00:15:08,890 --> 00:15:17,740
and that's kind of nice so optimization

00:15:14,980 --> 00:15:19,300
of ergonomics to me means all right if

00:15:17,740 --> 00:15:21,040
you're gonna have build system how do

00:15:19,300 --> 00:15:22,990
you make an application fast well you

00:15:21,040 --> 00:15:25,600
you follow all of Alex Russell's

00:15:22,990 --> 00:15:27,790
guidelines for pwace Alex Russell is the

00:15:25,600 --> 00:15:29,800
Google standards evangelist who was

00:15:27,790 --> 00:15:31,570
originally a dojo co-founder with me and

00:15:29,800 --> 00:15:34,029
he's pretty much the get off my lawn

00:15:31,570 --> 00:15:36,130
grandfather of JavaScript who talks

00:15:34,029 --> 00:15:37,870
about 3G networks and really slow

00:15:36,130 --> 00:15:39,160
Android phones and we like to troll I'm

00:15:37,870 --> 00:15:42,790
asking him why Google won't buy I'm a

00:15:39,160 --> 00:15:45,220
good device okay so starting out with

00:15:42,790 --> 00:15:47,170
all the recommendations for PWA s having

00:15:45,220 --> 00:15:48,490
a good CLI tooling that will do

00:15:47,170 --> 00:15:50,860
what we call build time rendering which

00:15:48,490 --> 00:15:52,750
is look at what you need to render first

00:15:50,860 --> 00:15:55,389
and build that into the initial bundle

00:15:52,750 --> 00:15:57,700
build that HTML and CSS and JavaScript

00:15:55,389 --> 00:15:59,889
into that page up front to render it

00:15:57,700 --> 00:16:02,649
follow the purple guidelines do code

00:15:59,889 --> 00:16:04,389
splitting but the killer for us is okay

00:16:02,649 --> 00:16:07,720
yeah we still need to support ie 11

00:16:04,389 --> 00:16:09,820
because enterprises but if you don't

00:16:07,720 --> 00:16:12,010
need it let's not include it so the idea

00:16:09,820 --> 00:16:14,410
with dojo is its evergreen by default

00:16:12,010 --> 00:16:16,029
and then you add in the polyfills and

00:16:14,410 --> 00:16:17,800
pony fills and backports support you

00:16:16,029 --> 00:16:19,930
need so you start out with something

00:16:17,800 --> 00:16:22,089
really small and lean whereas dojo one

00:16:19,930 --> 00:16:25,510
started out with everything to support

00:16:22,089 --> 00:16:27,430
back to ie6 and no way to remove it so

00:16:25,510 --> 00:16:29,380
obviously by flipping that around you

00:16:27,430 --> 00:16:31,269
start out by supporting the users that

00:16:29,380 --> 00:16:33,310
can not only new your fastest

00:16:31,269 --> 00:16:35,260
applications first and then you add in

00:16:33,310 --> 00:16:38,769
legacy support as an opt-in rather than

00:16:35,260 --> 00:16:40,690
an opt-out so like I said we've really

00:16:38,769 --> 00:16:42,250
aimed to be lean and I think any organ

00:16:40,690 --> 00:16:44,350
AMA créme work should be focused on that

00:16:42,250 --> 00:16:46,329
so one you need to make it easy and

00:16:44,350 --> 00:16:47,440
consistent to write code you can use

00:16:46,329 --> 00:16:48,910
things like typescript

00:16:47,440 --> 00:16:50,889
you can use other tools like prettier

00:16:48,910 --> 00:16:53,050
and so on and web pack and whatever but

00:16:50,889 --> 00:16:54,970
the idea is organ ah mcc's or something

00:16:53,050 --> 00:16:56,589
where you write code and you're not

00:16:54,970 --> 00:16:58,149
having to make a lot of changes and

00:16:56,589 --> 00:16:58,949
things are just natural and work the way

00:16:58,149 --> 00:17:02,110
they should

00:16:58,949 --> 00:17:04,270
so we aligned with pretty much every

00:17:02,110 --> 00:17:07,120
modern pattern and standard that should

00:17:04,270 --> 00:17:10,689
be followed and the reason for that is

00:17:07,120 --> 00:17:13,329
dojo one was started in 2004 there were

00:17:10,689 --> 00:17:15,309
no mobile devices there was no github

00:17:13,329 --> 00:17:16,780
there was no promises there was no

00:17:15,309 --> 00:17:19,089
module system there was no build

00:17:16,780 --> 00:17:21,459
approach there were no web components

00:17:19,089 --> 00:17:22,870
there were no array iteration methods

00:17:21,459 --> 00:17:25,030
there was no for each there was no

00:17:22,870 --> 00:17:27,520
prototype DUP behind we had to invent

00:17:25,030 --> 00:17:29,290
all of these things and of course we

00:17:27,520 --> 00:17:31,840
didn't invent them the right way we just

00:17:29,290 --> 00:17:33,669
came up with a way and the problem with

00:17:31,840 --> 00:17:36,490
that is it's really cool to innovate and

00:17:33,669 --> 00:17:38,020
and draw things forward but then you

00:17:36,490 --> 00:17:40,000
become incompatible with the rest of the

00:17:38,020 --> 00:17:41,380
web and that's not good so what we've

00:17:40,000 --> 00:17:42,640
done is we've said let's find all the

00:17:41,380 --> 00:17:44,110
modern standards that are out there that

00:17:42,640 --> 00:17:47,320
makes sense that helped you make a fast

00:17:44,110 --> 00:17:49,660
application but let's not impose the

00:17:47,320 --> 00:17:51,250
weight of those standards on you so use

00:17:49,660 --> 00:17:53,530
them the way the language intends them

00:17:51,250 --> 00:17:58,090
and I'll give a couple examples right

00:17:53,530 --> 00:17:59,169
here so for example in dojo and we've

00:17:58,090 --> 00:18:01,059
been doing this for a couple of years

00:17:59,169 --> 00:18:03,730
now all which

00:18:01,059 --> 00:18:06,249
or components by default our importa

00:18:03,730 --> 00:18:08,470
bilawal as web components the idea being

00:18:06,249 --> 00:18:10,090
I create this nice widget with dojo I

00:18:08,470 --> 00:18:11,259
want to use it an angular application or

00:18:10,090 --> 00:18:12,940
a react application or a view

00:18:11,259 --> 00:18:14,470
application as long as I can get a web

00:18:12,940 --> 00:18:16,360
component working there I can import it

00:18:14,470 --> 00:18:17,950
or export it now web components and

00:18:16,360 --> 00:18:20,080
custom elements are not a perfect

00:18:17,950 --> 00:18:21,639
standard but that's sort of the first

00:18:20,080 --> 00:18:23,740
path to interoperability between

00:18:21,639 --> 00:18:26,259
component libraries and systems and

00:18:23,740 --> 00:18:28,749
because dojos bundle size is so small

00:18:26,259 --> 00:18:31,269
it's not inconceivable to think that

00:18:28,749 --> 00:18:33,279
it's a bad idea to include dojo to be

00:18:31,269 --> 00:18:34,840
able to do that how many of you've used

00:18:33,279 --> 00:18:38,019
intersection observers or resize

00:18:34,840 --> 00:18:39,639
observers I'm not seeing any hands go up

00:18:38,019 --> 00:18:42,159
but I might just be blind by the light

00:18:39,639 --> 00:18:44,289
at this point ok so narrow section

00:18:42,159 --> 00:18:46,570
observer and a resize observer are new

00:18:44,289 --> 00:18:48,820
observable style ap eyes that are in

00:18:46,570 --> 00:18:51,190
browsers that help you know if something

00:18:48,820 --> 00:18:54,249
has moved into view of a particular box

00:18:51,190 --> 00:18:55,570
or if the browser has resized itself so

00:18:54,249 --> 00:18:57,100
we used to have to do a lot of hacks to

00:18:55,570 --> 00:18:59,559
do like infinite scrolling lists and

00:18:57,100 --> 00:19:00,970
resize detection and we aligned with

00:18:59,559 --> 00:19:02,740
those as well as web animations and

00:19:00,970 --> 00:19:05,200
focus events now the reason these are

00:19:02,740 --> 00:19:06,580
particularly interesting is in the react

00:19:05,200 --> 00:19:10,539
world I think I'm getting ahead of

00:19:06,580 --> 00:19:12,070
myself yeah in the react world typically

00:19:10,539 --> 00:19:14,049
when you need to do something on a Dom

00:19:12,070 --> 00:19:15,519
node you have to sort of go through a

00:19:14,049 --> 00:19:17,619
bunch of Hoops to get a reference to a

00:19:15,519 --> 00:19:19,570
node to then do something what we've

00:19:17,619 --> 00:19:21,549
done with dojo is we've said instead of

00:19:19,570 --> 00:19:25,600
breaking the reactive architecture with

00:19:21,549 --> 00:19:27,549
a V Dom system we instead say you know

00:19:25,600 --> 00:19:28,869
what those are cool things to expose

00:19:27,549 --> 00:19:31,690
let's make them as available available

00:19:28,869 --> 00:19:33,129
as properties that you can react to it's

00:19:31,690 --> 00:19:34,720
basically anytime we find something

00:19:33,129 --> 00:19:36,549
where it's like man I wish I just had a

00:19:34,720 --> 00:19:38,289
reference to a Dom node instead of

00:19:36,549 --> 00:19:40,539
saying here's a Dom node and breaking

00:19:38,289 --> 00:19:42,580
the architecture we say well why and

00:19:40,539 --> 00:19:45,879
then we provide those properties as

00:19:42,580 --> 00:19:47,320
something you can react to I don't know

00:19:45,879 --> 00:19:49,690
if you can see that because I can't see

00:19:47,320 --> 00:19:52,690
it let me come out of the light yeah so

00:19:49,690 --> 00:19:55,600
the idea here is basically you import

00:19:52,690 --> 00:19:57,970
this meta property and this one's for an

00:19:55,600 --> 00:20:00,249
intersection observer and then you can

00:19:57,970 --> 00:20:02,350
just react to its properties and changes

00:20:00,249 --> 00:20:03,970
later so rather than having to get the

00:20:02,350 --> 00:20:06,009
node and figure out something's inside

00:20:03,970 --> 00:20:08,980
of something else you can just use this

00:20:06,009 --> 00:20:10,690
API and quickly work with it inside of a

00:20:08,980 --> 00:20:12,190
render function to determine if

00:20:10,690 --> 00:20:14,200
something is inside of something else

00:20:12,190 --> 00:20:14,440
and then react to that so the idea is if

00:20:14,200 --> 00:20:16,360
you

00:20:14,440 --> 00:20:17,980
got a long page with a lot of images so

00:20:16,360 --> 00:20:18,669
we've got a newsfeed or some other UI

00:20:17,980 --> 00:20:20,409
like that

00:20:18,669 --> 00:20:24,309
you don't want to load all the the

00:20:20,409 --> 00:20:26,049
content and images down below so as the

00:20:24,309 --> 00:20:27,879
user Scrolls then you start to prefetch

00:20:26,049 --> 00:20:30,070
the images or prefetch the content that

00:20:27,879 --> 00:20:33,730
you want to render it's a really nice

00:20:30,070 --> 00:20:35,529
fast way to do that we've tried to align

00:20:33,730 --> 00:20:37,480
with standards so instead of saying oh

00:20:35,529 --> 00:20:38,889
let's use SAS well let's use less let's

00:20:37,480 --> 00:20:41,169
use stylus we've aligned or something

00:20:38,889 --> 00:20:43,779
called post CSS and what that is is it's

00:20:41,169 --> 00:20:46,330
kind of like babble but for styling so

00:20:43,779 --> 00:20:48,190
it takes all the CSS next properties

00:20:46,330 --> 00:20:49,570
like the variables what I call them

00:20:48,190 --> 00:20:51,970
something else but the variables and the

00:20:49,570 --> 00:20:54,639
nesting of things and whatnot lets you

00:20:51,970 --> 00:20:56,769
write CSS syntax as the spec proposes it

00:20:54,639 --> 00:20:58,899
and then transpires it back to CSS that

00:20:56,769 --> 00:21:00,850
works in today's browsers and then we

00:20:58,899 --> 00:21:05,019
also do something that's kind of fun in

00:21:00,850 --> 00:21:06,669
dojo which is you write CSS modules for

00:21:05,019 --> 00:21:09,009
your components you write a set of

00:21:06,669 --> 00:21:10,960
classes for that component and then we

00:21:09,009 --> 00:21:12,940
scope them unique to that component so

00:21:10,960 --> 00:21:14,470
we kind of break the C part of CSS so

00:21:12,940 --> 00:21:18,100
just be called style sheets right and

00:21:14,470 --> 00:21:20,830
then what we do is we use typescript to

00:21:18,100 --> 00:21:22,779
compile that CSS into a typescript

00:21:20,830 --> 00:21:25,029
module then we can import in your widget

00:21:22,779 --> 00:21:26,500
you're like why would you do that well

00:21:25,029 --> 00:21:28,750
it's just a list of string names but

00:21:26,500 --> 00:21:31,269
then for that IDE experience when you go

00:21:28,750 --> 00:21:33,159
to a theme or style your component you

00:21:31,269 --> 00:21:34,809
can only include the class names that

00:21:33,159 --> 00:21:35,860
have been scoped to that widget so you

00:21:34,809 --> 00:21:38,679
don't have to go back and look at that

00:21:35,860 --> 00:21:40,149
file you don't have to accidentally typo

00:21:38,679 --> 00:21:41,820
the class name and wonder why things

00:21:40,149 --> 00:21:44,230
aren't rendering the way they should

00:21:41,820 --> 00:21:45,970
that sounds like a little tiny thing

00:21:44,230 --> 00:21:48,279
maybe that saves you five or ten seconds

00:21:45,970 --> 00:21:49,600
a day but that's what economics is all

00:21:48,279 --> 00:21:51,190
about it's looking for those silly

00:21:49,600 --> 00:21:53,799
little pain points and trying to refine

00:21:51,190 --> 00:21:55,750
them and make them a bit better we also

00:21:53,799 --> 00:21:57,399
support internationalization and

00:21:55,750 --> 00:21:59,590
accessibility out of the box of all of

00:21:57,399 --> 00:22:02,350
our components internationalization as a

00:21:59,590 --> 00:22:05,980
spec is almost as large as all of atma

00:22:02,350 --> 00:22:07,990
script 2000 whatever year we're in 2018

00:22:05,980 --> 00:22:09,820
plus all the years before it's just a

00:22:07,990 --> 00:22:12,039
very convoluted and involved spec and

00:22:09,820 --> 00:22:13,509
it's still evolving and doing that out

00:22:12,039 --> 00:22:17,620
of the box is really important to be

00:22:13,509 --> 00:22:19,179
able to support that efficiently how

00:22:17,620 --> 00:22:23,470
many of you are British or non-american

00:22:19,179 --> 00:22:25,299
a few ok so you may have heard of this

00:22:23,470 --> 00:22:26,619
called routing and you're probably

00:22:25,299 --> 00:22:28,310
wondering why everyone here calls it

00:22:26,619 --> 00:22:31,790
routing I don't know the answer

00:22:28,310 --> 00:22:34,880
but I'm bilingual here bullet forms of

00:22:31,790 --> 00:22:35,990
English so there we go we we've done is

00:22:34,880 --> 00:22:38,750
we've said you know one of the benefits

00:22:35,990 --> 00:22:41,390
of having a set of things that actually

00:22:38,750 --> 00:22:43,220
work together so previously for years

00:22:41,390 --> 00:22:45,620
they've said microframeworks Vennela je

00:22:43,220 --> 00:22:47,120
s for the win and then you realize when

00:22:45,620 --> 00:22:49,520
you build up a bunch of things you've

00:22:47,120 --> 00:22:51,740
got 500 Meg's of NPM dependencies and

00:22:49,520 --> 00:22:53,050
and you've just got a lot of technical

00:22:51,740 --> 00:22:57,380
debt but you've got a lot of repetition

00:22:53,050 --> 00:22:59,750
so knowing that hey I've got a component

00:22:57,380 --> 00:23:01,460
system that works this way we have a

00:22:59,750 --> 00:23:03,950
routing system that can be added after

00:23:01,460 --> 00:23:05,660
the fact so the idea behind an ergonomic

00:23:03,950 --> 00:23:06,470
routing system is one that's declarative

00:23:05,660 --> 00:23:08,750
where you've written an application

00:23:06,470 --> 00:23:10,430
you've written some components you've

00:23:08,750 --> 00:23:12,590
managed your state in some sort of store

00:23:10,430 --> 00:23:14,120
and then you can add routing on top of

00:23:12,590 --> 00:23:15,590
that without having to rewrite any of

00:23:14,120 --> 00:23:20,060
your components or any of your logic or

00:23:15,590 --> 00:23:22,310
any of your interactions we have an

00:23:20,060 --> 00:23:25,040
application state store it started out

00:23:22,310 --> 00:23:27,080
very similar to redux not surprising but

00:23:25,040 --> 00:23:29,480
we've diverged quite significantly

00:23:27,080 --> 00:23:32,570
probably the biggest thing we don't like

00:23:29,480 --> 00:23:34,310
about redux is it's not always clear

00:23:32,570 --> 00:23:35,720
where and redux you're supposed to do

00:23:34,310 --> 00:23:37,460
things where do you put your business

00:23:35,720 --> 00:23:40,160
logic where do you do your reducers and

00:23:37,460 --> 00:23:41,150
on and on and you ask the redux team and

00:23:40,160 --> 00:23:42,830
they give you different answers and

00:23:41,150 --> 00:23:45,140
sometimes their answers change over time

00:23:42,830 --> 00:23:47,960
so the idea behind our stores we've got

00:23:45,140 --> 00:23:50,390
three separate sort of places in a store

00:23:47,960 --> 00:23:53,300
and it's very clear like this is where

00:23:50,390 --> 00:23:54,590
you do your reduction style code this is

00:23:53,300 --> 00:23:55,130
where you do your business logic and

00:23:54,590 --> 00:23:57,830
this is where you do your

00:23:55,130 --> 00:23:59,690
transformations and so forth and the

00:23:57,830 --> 00:24:01,730
benefit of that is certainty and

00:23:59,690 --> 00:24:03,170
consistency so that if you've worked

00:24:01,730 --> 00:24:05,600
with an odor store in one application

00:24:03,170 --> 00:24:06,770
and you come to another application from

00:24:05,600 --> 00:24:10,010
a different company it won't feel

00:24:06,770 --> 00:24:11,780
completely different hopefully again

00:24:10,010 --> 00:24:14,510
this is talk is not like telling you

00:24:11,780 --> 00:24:16,280
what we did in dojo mostly to sort of

00:24:14,510 --> 00:24:18,530
contrast it with some of the things that

00:24:16,280 --> 00:24:20,120
we observe and react because we do quite

00:24:18,530 --> 00:24:21,890
a bit of work with react as well so it's

00:24:20,120 --> 00:24:23,180
not like I'm trying to say all you react

00:24:21,890 --> 00:24:25,010
users are wrong and you should come you

00:24:23,180 --> 00:24:26,990
stay oh that's not the intent here just

00:24:25,010 --> 00:24:28,100
to sort of tell you the things we do

00:24:26,990 --> 00:24:31,480
because maybe they'll help make your

00:24:28,100 --> 00:24:33,680
react applications better as well

00:24:31,480 --> 00:24:35,390
joe-joe one was particularly how many of

00:24:33,680 --> 00:24:36,710
you actually used dojo one by the way

00:24:35,390 --> 00:24:38,480
okay

00:24:36,710 --> 00:24:41,030
so ten twenty percent more than I

00:24:38,480 --> 00:24:42,350
expected so that's cool so dojo one

00:24:41,030 --> 00:24:44,120
started out with not the

00:24:42,350 --> 00:24:46,370
testsuite I mean it was really difficult

00:24:44,120 --> 00:24:48,919
to do the things we do today dojo to has

00:24:46,370 --> 00:24:50,600
near 100% code coverage analysis on

00:24:48,919 --> 00:24:54,740
everything every kind of test you can

00:24:50,600 --> 00:24:56,090
imagine and also a set of utilities I

00:24:54,740 --> 00:24:58,700
would say it's somewhat similar to

00:24:56,090 --> 00:25:00,559
enzyme but for the idea is you want to

00:24:58,700 --> 00:25:02,690
be able to test components as easily as

00:25:00,559 --> 00:25:03,769
you can test raw dom nodes otherwise it

00:25:02,690 --> 00:25:07,519
can become really difficult and tedious

00:25:03,769 --> 00:25:10,100
to write tests for your widgets so a

00:25:07,519 --> 00:25:11,960
dojo application might just use these

00:25:10,100 --> 00:25:14,210
api so might use the core framework and

00:25:11,960 --> 00:25:15,950
a build system and then you might use

00:25:14,210 --> 00:25:17,659
some widgets and themes maybe the test

00:25:15,950 --> 00:25:19,909
tooling and maybe some interoperability

00:25:17,659 --> 00:25:22,070
the interoperability package includes

00:25:19,909 --> 00:25:23,210
things like support for Redux so if you

00:25:22,070 --> 00:25:24,799
have a Redux tour and you want to

00:25:23,210 --> 00:25:31,100
experiment with the dojo application you

00:25:24,799 --> 00:25:33,620
can do that su dojo and pretty much most

00:25:31,100 --> 00:25:35,389
modern frameworks claim to be reactive

00:25:33,620 --> 00:25:37,370
and that's not something react invented

00:25:35,389 --> 00:25:39,320
like the previous talk said almost

00:25:37,370 --> 00:25:40,549
nothing is new in javascript almost

00:25:39,320 --> 00:25:42,860
everything is pulled from somewhere else

00:25:40,549 --> 00:25:46,159
so the idea of reactive architectures is

00:25:42,860 --> 00:25:48,019
not native JavaScript but these are the

00:25:46,159 --> 00:25:52,100
things that dojo does and that pretty

00:25:48,019 --> 00:25:53,659
much most modern frameworks do so if you

00:25:52,100 --> 00:25:55,519
want to learn about dojo we're in a lot

00:25:53,659 --> 00:25:57,259
of places but the key is if you're

00:25:55,519 --> 00:25:59,330
looking at something that looks like es

00:25:57,259 --> 00:26:01,429
3 or es5 code you're in the wrong place

00:25:59,330 --> 00:26:02,840
that's the old dojo so just forget about

00:26:01,429 --> 00:26:04,460
that unless you still need to support

00:26:02,840 --> 00:26:06,080
that if you're looking for a modern

00:26:04,460 --> 00:26:08,149
typescript framework that's where dojo

00:26:06,080 --> 00:26:13,039
Deo comes into place how many of you

00:26:08,149 --> 00:26:16,580
views code sandbox not a lot okay it is

00:26:13,039 --> 00:26:18,799
the coolest online editor ever because

00:26:16,580 --> 00:26:20,750
it was it's written by a couple of

00:26:18,799 --> 00:26:23,600
people from the Netherlands that are in

00:26:20,750 --> 00:26:25,820
their late teens or early 20s and it is

00:26:23,600 --> 00:26:30,350
phenomenal so it takes Monaco which is

00:26:25,820 --> 00:26:34,610
the editor like the actual IDE portion

00:26:30,350 --> 00:26:36,529
of vs code but it works in a browser but

00:26:34,610 --> 00:26:38,659
then they've taken that and they've

00:26:36,529 --> 00:26:42,190
added like all sorts of support for

00:26:38,659 --> 00:26:44,779
features so we can do like typescript

00:26:42,190 --> 00:26:47,210
typescript basically error detection and

00:26:44,779 --> 00:26:50,120
validation in the browser we can do web

00:26:47,210 --> 00:26:51,350
pack builds on the fly we can do CSS

00:26:50,120 --> 00:26:53,120
compilation on the fly it's just

00:26:51,350 --> 00:26:55,610
phenomenal and they have templates for

00:26:53,120 --> 00:26:57,350
react and angular and dojo and if you

00:26:55,610 --> 00:26:59,600
and developed in a handful of other

00:26:57,350 --> 00:27:00,980
frameworks so it's really quick as like

00:26:59,600 --> 00:27:02,420
you just want to try something out or

00:27:00,980 --> 00:27:07,250
see an example it's a great environment

00:27:02,420 --> 00:27:08,960
to try that out so getting involved with

00:27:07,250 --> 00:27:10,640
dojo we're part of the Jas Foundation

00:27:08,960 --> 00:27:13,010
which is one of the other sponsors here

00:27:10,640 --> 00:27:14,510
the Jas foundation was actually started

00:27:13,010 --> 00:27:17,000
as a merger between the jQuery

00:27:14,510 --> 00:27:19,070
foundation and dojo Foundation and it's

00:27:17,000 --> 00:27:21,110
an open source foundation that the idea

00:27:19,070 --> 00:27:24,680
is to protect a project from turning

00:27:21,110 --> 00:27:26,030
evil so probably the biggest uproar

00:27:24,680 --> 00:27:28,850
until about a year and a half ago with

00:27:26,030 --> 00:27:30,950
react was that react had this weird

00:27:28,850 --> 00:27:33,740
clause about patents that no one

00:27:30,950 --> 00:27:35,060
understood in their licensing and until

00:27:33,740 --> 00:27:36,530
enough people complained I think it was

00:27:35,060 --> 00:27:38,150
WordPress that finally complained and

00:27:36,530 --> 00:27:39,410
they changed the license but the idea

00:27:38,150 --> 00:27:40,610
behind the foundation is to prevent

00:27:39,410 --> 00:27:43,910
those types of issues from ever coming

00:27:40,610 --> 00:27:46,490
up we have a lot of help online as any

00:27:43,910 --> 00:27:47,990
good ergonomic framework should have and

00:27:46,490 --> 00:27:49,520
then we also offer a commercial support

00:27:47,990 --> 00:27:50,750
for people so I'll talk about the site

00:27:49,520 --> 00:27:53,570
pen in a moment but it's not really a

00:27:50,750 --> 00:27:56,750
big deal but so the idea behind

00:27:53,570 --> 00:27:58,370
ergonomics is not one little thing it's

00:27:56,750 --> 00:28:00,020
about looking at all these little pieces

00:27:58,370 --> 00:28:02,120
and finding a way to make things better

00:28:00,020 --> 00:28:03,680
so it's about creating applications that

00:28:02,120 --> 00:28:05,060
are fast it's about looking for pain

00:28:03,680 --> 00:28:08,150
points things that break the

00:28:05,060 --> 00:28:10,940
architecture variable names package

00:28:08,150 --> 00:28:12,800
resources bundle sizes technical debt

00:28:10,940 --> 00:28:15,140
and just not accepting things that don't

00:28:12,800 --> 00:28:17,960
feel right so I've seen a few talks here

00:28:15,140 --> 00:28:19,610
where I admit I kind of got bored with

00:28:17,960 --> 00:28:22,040
the talk and it wasn't that I'm an

00:28:19,610 --> 00:28:23,990
 well okay maybe I am but I

00:28:22,040 --> 00:28:25,730
looked at it I'm like I don't like that

00:28:23,990 --> 00:28:27,320
variable name right and that's such a

00:28:25,730 --> 00:28:29,270
stupid reason to say I don't want to

00:28:27,320 --> 00:28:31,850
listen to this talk but to me it's like

00:28:29,270 --> 00:28:34,250
if you pick a variable name that feels

00:28:31,850 --> 00:28:36,560
like it's giving me cognitive dissonance

00:28:34,250 --> 00:28:37,940
while I'm reading it I'm just

00:28:36,560 --> 00:28:40,960
disagreeing with you as a framework

00:28:37,940 --> 00:28:43,520
author that this is wrong right and so

00:28:40,960 --> 00:28:45,260
when you're caring about your users

00:28:43,520 --> 00:28:47,930
enough to say I want to make it so you

00:28:45,260 --> 00:28:50,150
know what I should look at every object

00:28:47,930 --> 00:28:51,680
or class name or whatever or property

00:28:50,150 --> 00:28:52,070
name and it should be obvious what it

00:28:51,680 --> 00:28:54,410
does

00:28:52,070 --> 00:28:58,760
I shouldn't have to wonder hmm I wonder

00:28:54,410 --> 00:29:00,530
what that is about okay so react already

00:28:58,760 --> 00:29:02,090
did that I would love that to be the new

00:29:00,530 --> 00:29:03,650
meme from this conference so I think it

00:29:02,090 --> 00:29:04,880
would be funny I think it'd be great to

00:29:03,650 --> 00:29:08,600
troll the react team but you don't have

00:29:04,880 --> 00:29:09,410
to so the question is okay in five years

00:29:08,600 --> 00:29:11,570
will react still

00:29:09,410 --> 00:29:14,570
here absolutely it's real going away of

00:29:11,570 --> 00:29:16,250
course not has react heavily inspired

00:29:14,570 --> 00:29:18,500
others so you know the question was like

00:29:16,250 --> 00:29:19,970
all these things from dojo made their

00:29:18,500 --> 00:29:22,250
way into standards made their way into

00:29:19,970 --> 00:29:23,690
react in other frameworks is react doing

00:29:22,250 --> 00:29:27,770
the same thing to other frameworks today

00:29:23,690 --> 00:29:30,560
absolutely like without a doubt does

00:29:27,770 --> 00:29:33,070
everything you do have to be react no I

00:29:30,560 --> 00:29:36,230
mean why not right

00:29:33,070 --> 00:29:37,880
so can we safely say react or did that I

00:29:36,230 --> 00:29:39,350
would say yes now that's my own

00:29:37,880 --> 00:29:41,930
hypothesis you can come to your own

00:29:39,350 --> 00:29:43,910
conclusions of course and could we say

00:29:41,930 --> 00:29:45,410
dojo already did that again we'll ask

00:29:43,910 --> 00:29:50,900
that question now and we'll have certain

00:29:45,410 --> 00:29:51,950
five years hopefully so to conclude work

00:29:50,900 --> 00:29:54,380
with site pen we've been around since

00:29:51,950 --> 00:29:57,380
2000 which is like you know a hundred

00:29:54,380 --> 00:30:00,320
million years in JavaScript time and we

00:29:57,380 --> 00:30:01,640
are also a remote consulting company

00:30:00,320 --> 00:30:03,350
we've been around for a long time and we

00:30:01,640 --> 00:30:05,780
help lots of great companies try to do

00:30:03,350 --> 00:30:07,610
better with JavaScript the fun thing is

00:30:05,780 --> 00:30:09,320
we actually train Facebook back in like

00:30:07,610 --> 00:30:11,240
2008 on how to write JavaScript code

00:30:09,320 --> 00:30:12,890
which is cool so back when they were

00:30:11,240 --> 00:30:14,510
just PHP people who did not know how to

00:30:12,890 --> 00:30:15,650
write good JavaScript we went in and

00:30:14,510 --> 00:30:18,050
taught them that we helped make Facebook

00:30:15,650 --> 00:30:19,690
fast so we've helped lots of companies

00:30:18,050 --> 00:30:23,360
throughout the years make the web better

00:30:19,690 --> 00:30:25,220
we also do some really fun things so if

00:30:23,360 --> 00:30:26,540
you haven't gotten your swag bag yet get

00:30:25,220 --> 00:30:28,730
it if you haven't looked inside of it

00:30:26,540 --> 00:30:31,730
you'll find one of these who's open this

00:30:28,730 --> 00:30:33,050
yet a few people this is a card game we

00:30:31,730 --> 00:30:34,760
created called milestone mam it's not

00:30:33,050 --> 00:30:36,080
just a deck of cards it's a deck of

00:30:34,760 --> 00:30:38,720
cards about everything that goes wrong

00:30:36,080 --> 00:30:40,340
in projects so the mayhem cards are the

00:30:38,720 --> 00:30:41,390
fun cards just like the grim repo who's

00:30:40,340 --> 00:30:43,550
the guy who pushed us to production

00:30:41,390 --> 00:30:45,950
without testing there's the scope creep

00:30:43,550 --> 00:30:47,300
who everyone hates and the idea is the

00:30:45,950 --> 00:30:49,850
game is kind of played like blackjack

00:30:47,300 --> 00:30:51,140
meets Russian roulette which is kind of

00:30:49,850 --> 00:30:53,480
like how software development works

00:30:51,140 --> 00:30:55,220
basically you're a project manager yes

00:30:53,480 --> 00:30:57,200
you're a project manager trying to get

00:30:55,220 --> 00:30:59,090
to 20 story points before your opponent

00:30:57,200 --> 00:31:00,260
so if you come to the fireside chat

00:30:59,090 --> 00:31:03,560
tonight bring your game and I'll show

00:31:00,260 --> 00:31:05,330
you how to play we also run a podcast

00:31:03,560 --> 00:31:07,220
called talk script which is kind of fun

00:31:05,330 --> 00:31:09,350
and on the table out there there should

00:31:07,220 --> 00:31:11,840
still be some MMS that our top script

00:31:09,350 --> 00:31:13,970
branded they taste as good as our

00:31:11,840 --> 00:31:15,620
content is so we've also been

00:31:13,970 --> 00:31:17,000
interviewing a lot of the speakers here

00:31:15,620 --> 00:31:20,330
so that content will be online in the

00:31:17,000 --> 00:31:22,100
next couple weeks so I don't know how

00:31:20,330 --> 00:31:23,149
much time that is but I hope it's about

00:31:22,100 --> 00:31:23,960
the right time so thank

00:31:23,149 --> 00:31:31,019
for coming

00:31:23,960 --> 00:31:31,019

YouTube URL: https://www.youtube.com/watch?v=lHRuIA7cyU0


