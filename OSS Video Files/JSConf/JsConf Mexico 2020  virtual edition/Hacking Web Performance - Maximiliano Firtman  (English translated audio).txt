Title: Hacking Web Performance - Maximiliano Firtman  (English translated audio)
Publication date: 2021-02-03
Playlist: JsConf Mexico 2020  virtual edition
Description: 
	After we understand how important Web Performance is and we've applied basic techniques, what's next? In this session, we will cover extreme techniques that will blow your mind about Web Performance. New compression algorithms? new image formats? Client-Hints? HTTP/3? Let's hack Web Performance.
Captions: 
	00:00:04,000 --> 00:00:09,840
i am from argentina i am currently there

00:00:07,680 --> 00:00:12,559
so the pandemic won't let me leave here

00:00:09,840 --> 00:00:15,839
but i started developing websites

00:00:12,559 --> 00:00:16,240
when this browser was being distributed

00:00:15,839 --> 00:00:18,560
you know

00:00:16,240 --> 00:00:20,640
netscape the first function of netscape

00:00:18,560 --> 00:00:23,680
i don't know if anyone in the audience

00:00:20,640 --> 00:00:24,240
come from that time and then i dedicated

00:00:23,680 --> 00:00:27,760
myself

00:00:24,240 --> 00:00:30,080
to do mobile development i have been

00:00:27,760 --> 00:00:30,880
giving courses training and consulting

00:00:30,080 --> 00:00:33,280
for a lot of

00:00:30,880 --> 00:00:34,480
large companies and small companies in

00:00:33,280 --> 00:00:37,280
latin america

00:00:34,480 --> 00:00:39,360
united states europe and as diego said

00:00:37,280 --> 00:00:41,600
there is a lot of content from me in

00:00:39,360 --> 00:00:43,280
many publishers of online courses and a

00:00:41,600 --> 00:00:46,399
lot of books

00:00:43,280 --> 00:00:48,640
and i write i like to write i

00:00:46,399 --> 00:00:49,680
like to write a lot about the topics

00:00:48,640 --> 00:00:52,719
that i like which

00:00:49,680 --> 00:00:56,160
are web performance the topic of today

00:00:52,719 --> 00:00:57,920
and also progressive web apps recently i

00:00:56,160 --> 00:01:00,480
launched a website which is called

00:00:57,920 --> 00:01:02,000
fruit.dev which is a compendium of all

00:01:00,480 --> 00:01:04,000
my articles

00:01:02,000 --> 00:01:05,680
talks and free content that i have

00:01:04,000 --> 00:01:10,640
generated but today i have

00:01:05,680 --> 00:01:13,520
two objectives today

00:01:10,640 --> 00:01:13,920
the first one is to make you feel bad

00:01:13,520 --> 00:01:17,040
yeah

00:01:13,920 --> 00:01:20,320
i want you to feel bad this is the first

00:01:17,040 --> 00:01:22,080
goal today and the second is to

00:01:20,320 --> 00:01:24,960
for you to learn some tricks some new

00:01:22,080 --> 00:01:27,840
tricks that you may not know

00:01:24,960 --> 00:01:29,439
so let's see if i can achieve the

00:01:27,840 --> 00:01:32,240
following

00:01:29,439 --> 00:01:33,280
goals in the next 25 minutes so we shall

00:01:32,240 --> 00:01:36,640
begin

00:01:33,280 --> 00:01:36,640
i know that you know

00:01:36,880 --> 00:01:43,520
i am going to tell you that i know

00:01:40,159 --> 00:01:47,439
that you know several things

00:01:43,520 --> 00:01:49,439
first your users are sad your users are

00:01:47,439 --> 00:01:52,479
frustrated

00:01:49,439 --> 00:01:56,079
and you know that

00:01:52,479 --> 00:01:58,479
there is money involved here so

00:01:56,079 --> 00:02:00,560
to bring this to education we will put

00:01:58,479 --> 00:02:02,880
some mexican pesos here

00:02:00,560 --> 00:02:03,920
but you are losing money who is losing

00:02:02,880 --> 00:02:06,399
money

00:02:03,920 --> 00:02:09,280
the web developer or the owner of the

00:02:06,399 --> 00:02:12,160
website when we develop a website so the

00:02:09,280 --> 00:02:13,760
the our customer is losing money because

00:02:12,160 --> 00:02:15,599
web is money

00:02:13,760 --> 00:02:16,959
this has been demonstrated i know that

00:02:15,599 --> 00:02:20,239
you know

00:02:16,959 --> 00:02:23,040
so i'm not going to explain this a lot

00:02:20,239 --> 00:02:26,000
but this is mainly because this is the

00:02:23,040 --> 00:02:28,400
responsibility of the front end

00:02:26,000 --> 00:02:30,239
we are in the js conf so this is our

00:02:28,400 --> 00:02:31,360
responsibility maybe not our whole

00:02:30,239 --> 00:02:33,680
responsibility

00:02:31,360 --> 00:02:34,560
but we do have responsibility of the

00:02:33,680 --> 00:02:37,200
performance of

00:02:34,560 --> 00:02:38,480
our website it doesn't have to do with

00:02:37,200 --> 00:02:41,599
the cloud

00:02:38,480 --> 00:02:43,760
but it's always or mostly a front-end

00:02:41,599 --> 00:02:47,200
problem and i know that you know

00:02:43,760 --> 00:02:50,080
that there are user-centric metrics

00:02:47,200 --> 00:02:51,360
lately we have been using about those

00:02:50,080 --> 00:02:55,200
created by google

00:02:51,360 --> 00:02:57,599
which are called core vitals by google

00:02:55,200 --> 00:02:58,319
which are a set of metrics that are

00:02:57,599 --> 00:03:01,519
oriented

00:02:58,319 --> 00:03:04,560
to user perception so how do we measure

00:03:01,519 --> 00:03:07,280
web performance if we're going to do

00:03:04,560 --> 00:03:07,680
it by the procession that i get my phone

00:03:07,280 --> 00:03:09,599
and

00:03:07,680 --> 00:03:11,200
i say well that was fast but i don't

00:03:09,599 --> 00:03:12,480
know how fast was that that's my

00:03:11,200 --> 00:03:14,319
perception

00:03:12,480 --> 00:03:16,959
another problem that we have is that

00:03:14,319 --> 00:03:17,519
page load that was an old metric that we

00:03:16,959 --> 00:03:20,159
used

00:03:17,519 --> 00:03:21,840
when i started in the 90s it is no

00:03:20,159 --> 00:03:24,400
longer it does no longer make sex

00:03:21,840 --> 00:03:25,200
today so the most common today are

00:03:24,400 --> 00:03:28,879
calculated

00:03:25,200 --> 00:03:31,200
over the 75th percentile

00:03:28,879 --> 00:03:33,519
explaining it quickly of all your

00:03:31,200 --> 00:03:36,959
visitors 75 percent

00:03:33,519 --> 00:03:39,519
have to have certain minimum in mobile

00:03:36,959 --> 00:03:42,799
and in desktop

00:03:39,519 --> 00:03:46,080
so metrics today most used are

00:03:42,799 --> 00:03:49,120
largest contentful paint which

00:03:46,080 --> 00:03:50,640
measures the initial load how fast it is

00:03:49,120 --> 00:03:55,200
loading

00:03:50,640 --> 00:03:57,439
the largest content in the first page

00:03:55,200 --> 00:03:59,280
then we have the first input delay that

00:03:57,439 --> 00:04:00,000
measures interactivity and how

00:03:59,280 --> 00:04:03,360
interactive

00:04:00,000 --> 00:04:04,879
our website is or how problematic it is

00:04:03,360 --> 00:04:09,280
when we want to interact

00:04:04,879 --> 00:04:12,560
scroll tap and it doesn't react

00:04:09,280 --> 00:04:13,360
then we have this lay cumulative layout

00:04:12,560 --> 00:04:15,599
shift

00:04:13,360 --> 00:04:17,040
that measured the visual stability i

00:04:15,599 --> 00:04:19,040
think you have seen

00:04:17,040 --> 00:04:20,959
that sometimes we have some trouble when

00:04:19,040 --> 00:04:24,160
we go into a website

00:04:20,959 --> 00:04:26,160
we read and then a banner appears

00:04:24,160 --> 00:04:29,040
or something that moves the information

00:04:26,160 --> 00:04:29,520
that we were reading and we are upset by

00:04:29,040 --> 00:04:32,880
that

00:04:29,520 --> 00:04:35,199
so when we are upset

00:04:32,880 --> 00:04:37,840
uh that makes the user not to like our

00:04:35,199 --> 00:04:41,040
web and that is cls

00:04:37,840 --> 00:04:43,840
there are more metrics speed index time

00:04:41,040 --> 00:04:46,000
to first byte first content will paint

00:04:43,840 --> 00:04:49,040
where that's the first pixel or the

00:04:46,000 --> 00:04:50,960
first background and time to interactive

00:04:49,040 --> 00:04:52,560
which is the moment in which the website

00:04:50,960 --> 00:04:55,280
starts working

00:04:52,560 --> 00:04:56,080
those are user-based metrics but most of

00:04:55,280 --> 00:04:58,240
you would say

00:04:56,080 --> 00:04:59,520
hey that's not my problem my website is

00:04:58,240 --> 00:05:02,800
quick

00:04:59,520 --> 00:05:03,680
because we just are testing it you know

00:05:02,800 --> 00:05:06,880
with our

00:05:03,680 --> 00:05:10,080
phone or we just looked at it or it is

00:05:06,880 --> 00:05:12,320
a better than average mobile and maybe

00:05:10,080 --> 00:05:14,720
with a better than average connection

00:05:12,320 --> 00:05:17,680
but that is not how we measure that

00:05:14,720 --> 00:05:19,919
today our goals that we have to achieve

00:05:17,680 --> 00:05:21,840
which are set by the community and

00:05:19,919 --> 00:05:23,039
sponsored by google if i have to be

00:05:21,840 --> 00:05:24,639
honest

00:05:23,039 --> 00:05:26,320
and followed by the community is that

00:05:24,639 --> 00:05:30,720
the large contentful paint

00:05:26,320 --> 00:05:34,080
is in 2.5 seconds so for 75

00:05:30,720 --> 00:05:34,639
percent visitors 2.5 seconds is the time

00:05:34,080 --> 00:05:37,440
where the

00:05:34,639 --> 00:05:39,680
the most important content should appear

00:05:37,440 --> 00:05:42,960
4 seconds is acceptable but

00:05:39,680 --> 00:05:46,720
it is not ideal the first input delay

00:05:42,960 --> 00:05:47,440
is 100 millisecond 300 milliseconds

00:05:46,720 --> 00:05:50,560
maximum

00:05:47,440 --> 00:05:53,199
and the cls is not measured by seconds

00:05:50,560 --> 00:05:55,440
it's something given by it by the tool

00:05:53,199 --> 00:05:57,440
and that means that the website moves

00:05:55,440 --> 00:06:00,639
little 0.1

00:05:57,440 --> 00:06:02,720
and the maximum is 0.25

00:06:00,639 --> 00:06:04,160
and i know that you know because you are

00:06:02,720 --> 00:06:06,319
in this conference

00:06:04,160 --> 00:06:08,560
that we need to optimize resource

00:06:06,319 --> 00:06:11,199
transfer we need to reduce the amount of

00:06:08,560 --> 00:06:14,400
files that we download from the server

00:06:11,199 --> 00:06:18,000
so that we can give that first paint

00:06:14,400 --> 00:06:20,160
so we have to compress the html the json

00:06:18,000 --> 00:06:22,800
javascript everything that is text needs

00:06:20,160 --> 00:06:24,639
to be compressed from the server side

00:06:22,800 --> 00:06:27,360
so i know that you know that you need to

00:06:24,639 --> 00:06:30,639
work with tls and http 2

00:06:27,360 --> 00:06:33,120
and the site must be safe this is basic

00:06:30,639 --> 00:06:36,720
today for every website

00:06:33,120 --> 00:06:40,240
i know that you know how to use css just

00:06:36,720 --> 00:06:43,039
as an appetizer which means that

00:06:40,240 --> 00:06:45,360
our main meal is the content or the

00:06:43,039 --> 00:06:46,319
service that we offer and the css is the

00:06:45,360 --> 00:06:49,440
appetizer

00:06:46,319 --> 00:06:51,520
it should be the smallest as possible

00:06:49,440 --> 00:06:52,560
we are going to we're not going to eat

00:06:51,520 --> 00:06:55,120
four tacos as an

00:06:52,560 --> 00:06:57,039
as an appetizer it has to come before

00:06:55,120 --> 00:07:00,240
everything and it has to be very small

00:06:57,039 --> 00:07:01,599
because without css the browser will not

00:07:00,240 --> 00:07:04,400
render anything

00:07:01,599 --> 00:07:05,759
and javascript should be desert it's

00:07:04,400 --> 00:07:10,160
going in the end

00:07:05,759 --> 00:07:12,639
it is very sweet and it has a lot of

00:07:10,160 --> 00:07:13,520
energy consumption power it is very

00:07:12,639 --> 00:07:16,400
sweet

00:07:13,520 --> 00:07:18,479
and it needs to be delayed because it

00:07:16,400 --> 00:07:21,039
uses the execution thread

00:07:18,479 --> 00:07:21,919
the same that the web browser uses to

00:07:21,039 --> 00:07:25,440
render

00:07:21,919 --> 00:07:26,000
and to paint the web and i know that you

00:07:25,440 --> 00:07:28,240
know

00:07:26,000 --> 00:07:29,759
how to optimize images you're not going

00:07:28,240 --> 00:07:32,720
to publish a logo that

00:07:29,759 --> 00:07:34,639
is four megabytes heavy and then the

00:07:32,720 --> 00:07:37,840
browser has to make smaller

00:07:34,639 --> 00:07:40,319
we know that that's wrong and then

00:07:37,840 --> 00:07:41,919
you you have created it through a

00:07:40,319 --> 00:07:43,680
compression tool

00:07:41,919 --> 00:07:46,080
and i know that you can use service

00:07:43,680 --> 00:07:46,960
workers something that has been

00:07:46,080 --> 00:07:50,319
mentioned

00:07:46,960 --> 00:07:53,039
before in jsconf yesterday and today

00:07:50,319 --> 00:07:54,160
and you already know that so you're

00:07:53,039 --> 00:07:57,199
doing already

00:07:54,160 --> 00:08:00,479
everything this is basic

00:07:57,199 --> 00:08:03,520
so we are already doing this of course

00:08:00,479 --> 00:08:06,560
i trust you to do this

00:08:03,520 --> 00:08:09,120
so what is the problem why are we

00:08:06,560 --> 00:08:12,960
talking about this in jsconf if we are

00:08:09,120 --> 00:08:17,360
all doing what we have to do the problem

00:08:12,960 --> 00:08:20,639
is that today the media the median

00:08:17,360 --> 00:08:23,520
or the average of

00:08:20,639 --> 00:08:25,680
time to interactive is the time in which

00:08:23,520 --> 00:08:27,120
a website is available to be scrolled to

00:08:25,680 --> 00:08:31,199
be tapped

00:08:27,120 --> 00:08:35,039
the average is 9.3 seconds

00:08:31,199 --> 00:08:38,240
in the world for websites

00:08:35,039 --> 00:08:41,039
9.3 seconds this discount from the

00:08:38,240 --> 00:08:43,680
http archive foundation which analyzes

00:08:41,039 --> 00:08:48,160
this continuously this is updated

00:08:43,680 --> 00:08:55,839
so you will say okay that's not a lot

00:08:48,160 --> 00:08:55,839
well we'll see how much is 9.3 seconds

00:09:02,160 --> 00:09:05,360
9.3 seconds

00:09:06,880 --> 00:09:14,480
that hurts so

00:09:10,800 --> 00:09:18,000
the time is really a lot of time

00:09:14,480 --> 00:09:20,320
imagine that you're waiting for a subway

00:09:18,000 --> 00:09:21,200
or maybe for the boss depending on where

00:09:20,320 --> 00:09:25,600
you are

00:09:21,200 --> 00:09:27,920
and 9.3 seconds may decide

00:09:25,600 --> 00:09:28,880
maybe not in the the time in the middle

00:09:27,920 --> 00:09:31,920
of a pandemic

00:09:28,880 --> 00:09:33,440
taking public transport but maybe you

00:09:31,920 --> 00:09:35,040
should you miss the train because you

00:09:33,440 --> 00:09:38,640
didn't see it

00:09:35,040 --> 00:09:42,000
and 9.3 seconds is a lot of time

00:09:38,640 --> 00:09:43,839
so google says that if a

00:09:42,000 --> 00:09:45,839
page takes more than three seconds to

00:09:43,839 --> 00:09:49,360
load 53 percent

00:09:45,839 --> 00:09:49,360
of the users abandon it

00:09:49,440 --> 00:09:53,680
and we are talking about the average of

00:09:51,519 --> 00:09:55,040
nine so there is a problem there is

00:09:53,680 --> 00:09:58,000
still a problem

00:09:55,040 --> 00:09:59,279
we have always underestimated mobile in

00:09:58,000 --> 00:10:02,000
many ways

00:09:59,279 --> 00:10:03,680
nowadays the mobile is ios and android

00:10:02,000 --> 00:10:04,000
we know this we're not going to argue

00:10:03,680 --> 00:10:07,279
about

00:10:04,000 --> 00:10:08,959
that but does that mean that that means

00:10:07,279 --> 00:10:11,279
that it is safari and chrome

00:10:08,959 --> 00:10:12,160
strictly well that's not that very

00:10:11,279 --> 00:10:14,480
simple

00:10:12,160 --> 00:10:19,839
there are many browsers today with

00:10:14,480 --> 00:10:23,440
enough marker chair

00:10:19,839 --> 00:10:26,480
to make us test our website

00:10:23,440 --> 00:10:28,640
in those browsers so those are samsung

00:10:26,480 --> 00:10:32,320
browser

00:10:28,640 --> 00:10:35,760
uc browser opera mini and the last

00:10:32,320 --> 00:10:39,680
is chrome but not any chrome

00:10:35,760 --> 00:10:42,000
is ios chrome or android chrome

00:10:39,680 --> 00:10:42,800
and the goal for all of you who are

00:10:42,000 --> 00:10:46,079
users of

00:10:42,800 --> 00:10:46,800
iphone and ipad chrome in an iphone is

00:10:46,079 --> 00:10:49,040
not chrome

00:10:46,800 --> 00:10:51,440
it looks like chrome but it is not

00:10:49,040 --> 00:10:51,440
chrome

00:10:53,279 --> 00:10:57,519
it is because uh chrome forbids the

00:10:55,600 --> 00:10:57,760
publication of other engines and there

00:10:57,519 --> 00:11:01,200
is

00:10:57,760 --> 00:11:03,279
another browser that is not considered

00:11:01,200 --> 00:11:04,800
most developers or designers do not

00:11:03,279 --> 00:11:07,600
consider this browser

00:11:04,800 --> 00:11:09,120
have you ever tested in this browser it

00:11:07,600 --> 00:11:12,000
is this one

00:11:09,120 --> 00:11:13,360
facebook facebook has a browser

00:11:12,000 --> 00:11:16,160
incorporated

00:11:13,360 --> 00:11:17,200
it is called facebook mobile browser and

00:11:16,160 --> 00:11:19,760
when you click

00:11:17,200 --> 00:11:20,880
or tap a facebook post and it has an

00:11:19,760 --> 00:11:23,600
external link

00:11:20,880 --> 00:11:24,880
by default it is opened in this browser

00:11:23,600 --> 00:11:27,920
and this is not the same

00:11:24,880 --> 00:11:30,320
engine in the browser that you have

00:11:27,920 --> 00:11:34,720
installed in your phone it is different

00:11:30,320 --> 00:11:37,600
in performance in api capabilities

00:11:34,720 --> 00:11:39,279
and in versions of scripts and things

00:11:37,600 --> 00:11:42,240
that we can do and we cannot

00:11:39,279 --> 00:11:42,880
have you tested your website or your app

00:11:42,240 --> 00:11:45,920
yeah

00:11:42,880 --> 00:11:48,720
from react angular or view in facebook

00:11:45,920 --> 00:11:48,720
mobile browser

00:11:48,880 --> 00:11:55,920
even a friend in twitter last week i

00:11:51,920 --> 00:11:59,040
asked him if he had some data about

00:11:55,920 --> 00:11:59,519
what percentage of people or visits come

00:11:59,040 --> 00:12:03,120
from

00:11:59,519 --> 00:12:03,600
facebook mobile browser he has a report

00:12:03,120 --> 00:12:06,959
that

00:12:03,600 --> 00:12:09,440
he makes called mobile overview report

00:12:06,959 --> 00:12:10,480
where he gets statistic and the latest

00:12:09,440 --> 00:12:14,240
statistics is that

00:12:10,480 --> 00:12:16,399
7.6 of global smartphone traffic

00:12:14,240 --> 00:12:17,519
comes from the facebook app that is

00:12:16,399 --> 00:12:20,160
quite a lot that

00:12:17,519 --> 00:12:22,000
those are millions of users and visits

00:12:20,160 --> 00:12:24,959
and we have never worried

00:12:22,000 --> 00:12:26,880
about testing there another problem that

00:12:24,959 --> 00:12:29,680
we have in mobile is that we use the

00:12:26,880 --> 00:12:33,760
mobile network

00:12:29,680 --> 00:12:39,839
and many of us thinks well we have 4g

00:12:33,760 --> 00:12:39,839
so performance is not really a problem

00:12:40,160 --> 00:12:44,560
so let's let's take a look at that this

00:12:42,160 --> 00:12:48,000
is the latest information

00:12:44,560 --> 00:12:52,480
from the gsma which is the global

00:12:48,000 --> 00:12:54,480
organizations from all mobile operators

00:12:52,480 --> 00:12:56,000
65 percent of the people in the world

00:12:54,480 --> 00:12:59,440
has smartphones so

00:12:56,000 --> 00:13:02,800
35 percent don't

00:12:59,440 --> 00:13:06,079
but those who have 4g at least in 2019

00:13:02,800 --> 00:13:08,160
is 52 that means

00:13:06,079 --> 00:13:09,760
52 percent in the world in latin america

00:13:08,160 --> 00:13:12,000
that depends on the country but latin

00:13:09,760 --> 00:13:15,279
america is a little bit below

00:13:12,000 --> 00:13:16,399
around 47 48 that means that other

00:13:15,279 --> 00:13:19,200
percentage that

00:13:16,399 --> 00:13:19,760
one would say uses 3g but if we look at

00:13:19,200 --> 00:13:24,160
the next

00:13:19,760 --> 00:13:27,040
graphic on the right 3g is 25

00:13:24,160 --> 00:13:28,800
so we have you know this turquoise here

00:13:27,040 --> 00:13:32,839
that is 4g

00:13:28,800 --> 00:13:36,240
then 3g is 25 and the gray area is

00:13:32,839 --> 00:13:36,800
2g a lot of people are still browsing in

00:13:36,240 --> 00:13:40,320
2g

00:13:36,800 --> 00:13:42,959
even if in the united states

00:13:40,320 --> 00:13:45,199
so 4g is not necessarily the solution

00:13:42,959 --> 00:13:47,920
yet

00:13:45,199 --> 00:13:48,720
and when we talk about 2 3 or 4g or

00:13:47,920 --> 00:13:52,720
brain

00:13:48,720 --> 00:13:55,839
just rapidly it identifies bandwidth

00:13:52,720 --> 00:13:58,880
clearly 4g has a better bandwidth than

00:13:55,839 --> 00:14:02,160
2g and 2g 3g

00:13:58,880 --> 00:14:03,839
and 5g has better bandwidth but 5g still

00:14:02,160 --> 00:14:04,399
does not appear in the percentages

00:14:03,839 --> 00:14:07,279
because

00:14:04,399 --> 00:14:08,720
because usage it's still very small but

00:14:07,279 --> 00:14:11,040
bandwidth is not

00:14:08,720 --> 00:14:12,079
the most important thing for improving

00:14:11,040 --> 00:14:14,320
website web

00:14:12,079 --> 00:14:16,000
performance it is more important to be

00:14:14,320 --> 00:14:19,120
able to

00:14:16,000 --> 00:14:22,959
see netflix in 4k

00:14:19,120 --> 00:14:24,720
or today that disney plus

00:14:22,959 --> 00:14:27,360
came out for latin america that's

00:14:24,720 --> 00:14:28,560
important if we want to look at it in 4k

00:14:27,360 --> 00:14:31,519
so we need

00:14:28,560 --> 00:14:33,440
bandwidth for death but when we browse

00:14:31,519 --> 00:14:36,800
the internet we are downloading

00:14:33,440 --> 00:14:39,839
many files and very very small files

00:14:36,800 --> 00:14:42,079
and the bandwidth is not that important

00:14:39,839 --> 00:14:43,279
is the latency the round trip time which

00:14:42,079 --> 00:14:46,480
is the time

00:14:43,279 --> 00:14:48,399
that information takes from going back

00:14:46,480 --> 00:14:52,959
and forth the server

00:14:48,399 --> 00:14:56,079
so the latency is coming down

00:14:52,959 --> 00:14:57,680
but dsl is not 5g dsl is a lock-on

00:14:56,079 --> 00:14:59,440
collection that we have in

00:14:57,680 --> 00:15:01,440
local connection that we have in our

00:14:59,440 --> 00:15:03,920
home a cable

00:15:01,440 --> 00:15:06,320
connected to the router in our home or

00:15:03,920 --> 00:15:09,680
maybe an adsl

00:15:06,320 --> 00:15:13,279
4g latency are is still

00:15:09,680 --> 00:15:16,160
10 times bigger so

00:15:13,279 --> 00:15:16,639
even the percentage that has 4g which is

00:15:16,160 --> 00:15:20,079
not

00:15:16,639 --> 00:15:23,519
everyone that percentage has a greater

00:15:20,079 --> 00:15:24,000
latency so every packet that comes and

00:15:23,519 --> 00:15:26,079
goes

00:15:24,000 --> 00:15:28,720
takes longer so we still have a lot of

00:15:26,079 --> 00:15:30,560
performance problems

00:15:28,720 --> 00:15:32,160
i should tell you something there is

00:15:30,560 --> 00:15:34,480
chrome light pages

00:15:32,160 --> 00:15:36,079
i don't know if you've heard about this

00:15:34,480 --> 00:15:39,680
chrome light pages exist

00:15:36,079 --> 00:15:45,199
from chrome 73 in android if the user

00:15:39,680 --> 00:15:47,120
enables data saver if that is enabled

00:15:45,199 --> 00:15:49,360
because that appears on the first time

00:15:47,120 --> 00:15:53,120
that you open chrome on your android

00:15:49,360 --> 00:15:55,759
you will be shown by chrome

00:15:53,120 --> 00:15:57,360
instead of showing a web app it's going

00:15:55,759 --> 00:16:01,519
to show a light page

00:15:57,360 --> 00:16:05,120
if user is in 2g or

00:16:01,519 --> 00:16:07,120
if you are in 3g or 4g but chrome

00:16:05,120 --> 00:16:09,279
estimates that the first content will

00:16:07,120 --> 00:16:10,160
paint of your website is beyond five

00:16:09,279 --> 00:16:11,920
seconds

00:16:10,160 --> 00:16:13,759
so if the user is not going to see

00:16:11,920 --> 00:16:16,720
anything in the first five seconds

00:16:13,759 --> 00:16:17,040
chrome is going to decide to send the

00:16:16,720 --> 00:16:20,240
light

00:16:17,040 --> 00:16:22,560
page so beyond having

00:16:20,240 --> 00:16:25,120
an icon indicating that it is a light

00:16:22,560 --> 00:16:29,360
page it renders the web app

00:16:25,120 --> 00:16:29,360
in the cloud not in the client

00:16:29,440 --> 00:16:36,639
which changes a little bit and

00:16:32,720 --> 00:16:39,199
those are smart optimizations

00:16:36,639 --> 00:16:40,160
not all images are being loaded by

00:16:39,199 --> 00:16:42,959
default

00:16:40,160 --> 00:16:44,639
so is that what we want in our website

00:16:42,959 --> 00:16:46,000
no we want to have control of what's

00:16:44,639 --> 00:16:48,720
going on

00:16:46,000 --> 00:16:50,720
another topic which is why performance

00:16:48,720 --> 00:16:51,600
is important is progressive web apps you

00:16:50,720 --> 00:16:54,399
know those

00:16:51,600 --> 00:16:55,360
web apps that can be installed those can

00:16:54,399 --> 00:16:58,480
be in the store

00:16:55,360 --> 00:17:01,839
in the google play store

00:16:58,480 --> 00:17:05,679
for example 1 800 flowers is

00:17:01,839 --> 00:17:07,360
a store and kovit 19 official

00:17:05,679 --> 00:17:10,400
application from panama

00:17:07,360 --> 00:17:12,559
called panama covid is in this store but

00:17:10,400 --> 00:17:14,640
you need to have a minimum performance

00:17:12,559 --> 00:17:17,760
of 80

00:17:14,640 --> 00:17:19,839
in this testing app which means that

00:17:17,760 --> 00:17:22,079
this is very important we need to hack

00:17:19,839 --> 00:17:22,959
the web performance we need to make even

00:17:22,079 --> 00:17:25,760
more

00:17:22,959 --> 00:17:27,760
so in the following minutes i hope that

00:17:25,760 --> 00:17:28,640
i have made you feel bad which was my

00:17:27,760 --> 00:17:32,240
goal

00:17:28,640 --> 00:17:35,440
but now it is the second goal which is

00:17:32,240 --> 00:17:36,240
show you the what can we do to improve

00:17:35,440 --> 00:17:38,960
this

00:17:36,240 --> 00:17:40,559
so in the next 10 minutes i'm going to

00:17:38,960 --> 00:17:44,320
give you new tricks

00:17:40,559 --> 00:17:46,799
first we're going to hack the first load

00:17:44,320 --> 00:17:48,960
we're going to avoid more than one round

00:17:46,799 --> 00:17:51,440
trip to the server

00:17:48,960 --> 00:17:52,480
so when the packet comes from the server

00:17:51,440 --> 00:17:56,320
that is enough

00:17:52,480 --> 00:17:57,919
to paint enough in the website for the

00:17:56,320 --> 00:18:01,039
user to be

00:17:57,919 --> 00:18:03,440
comfortable so this is why we're going

00:18:01,039 --> 00:18:05,600
to use tcp slow start

00:18:03,440 --> 00:18:07,280
i'm not going to get very dense in

00:18:05,600 --> 00:18:09,280
network because i don't have time for

00:18:07,280 --> 00:18:12,400
that

00:18:09,280 --> 00:18:16,799
but most servers today are linux based

00:18:12,400 --> 00:18:20,799
servers we have a limit of 14.6

00:18:16,799 --> 00:18:24,960
kilobytes for the first packets

00:18:20,799 --> 00:18:27,200
so if the first server

00:18:24,960 --> 00:18:28,720
reply is more than that you're going to

00:18:27,200 --> 00:18:33,120
take more time

00:18:28,720 --> 00:18:33,120
and well what is a kiwi bite

00:18:33,760 --> 00:18:38,080
i am going to give you a question and

00:18:36,240 --> 00:18:42,720
you can use the chat for the answer

00:18:38,080 --> 00:18:45,039
how many bytes are in a kilobyte

00:18:42,720 --> 00:18:46,320
i know that for many that's a very easy

00:18:45,039 --> 00:18:49,919
question

00:18:46,320 --> 00:18:53,280
like how dare you ask this in a js conf

00:18:49,919 --> 00:18:56,880
well let's check the answers in the chat

00:18:53,280 --> 00:19:00,360
many of you are going to say well uh

00:18:56,880 --> 00:19:03,840
1024 bytes one kilobyte is um

00:19:00,360 --> 00:19:04,320
1024 bytes well i regret to inform you

00:19:03,840 --> 00:19:07,440
that

00:19:04,320 --> 00:19:09,120
no maybe this is the only thing that

00:19:07,440 --> 00:19:12,000
you're going to remember

00:19:09,120 --> 00:19:13,760
but one kilobyte is a thousand bytes and

00:19:12,000 --> 00:19:17,679
if you do not believe me

00:19:13,760 --> 00:19:20,799
ask siri as google

00:19:17,679 --> 00:19:24,240
or ask wikipedia you don't have to

00:19:20,799 --> 00:19:26,960
believe me

00:19:24,240 --> 00:19:28,160
what we really know about a thousand

00:19:26,960 --> 00:19:30,720
twenty-four unit

00:19:28,160 --> 00:19:31,919
is the kibi byte the one that has an i

00:19:30,720 --> 00:19:35,200
in the middle

00:19:31,919 --> 00:19:38,960
the maybe byte tabby byte etc

00:19:35,200 --> 00:19:42,000
so yeah keep white are a thousand 24

00:19:38,960 --> 00:19:42,640
bytes so to avoid more than one round

00:19:42,000 --> 00:19:45,080
trip

00:19:42,640 --> 00:19:47,039
we can send we need to send a packet of

00:19:45,080 --> 00:19:50,559
14.6 gigabytes

00:19:47,039 --> 00:19:53,919
so how much is that how can we achieve

00:19:50,559 --> 00:19:56,480
that our website gets into though that

00:19:53,919 --> 00:19:58,080
size so we need to separate the above

00:19:56,480 --> 00:19:59,840
the fold

00:19:58,080 --> 00:20:01,200
which is what you see in the first

00:19:59,840 --> 00:20:04,000
scroll which was

00:20:01,200 --> 00:20:07,440
below the fold which is of course when

00:20:04,000 --> 00:20:11,120
you scroll later so we need to deliver

00:20:07,440 --> 00:20:14,960
the above the fold in 14.6 gigabytes

00:20:11,120 --> 00:20:17,200
every css every jss that comes in

00:20:14,960 --> 00:20:19,280
and if you still have space add an

00:20:17,200 --> 00:20:22,799
embedded logo in base64

00:20:19,280 --> 00:20:25,840
or low res images but 14.6

00:20:22,799 --> 00:20:28,320
is 0.6 is very little but you need to

00:20:25,840 --> 00:20:31,440
remember that it is compressed

00:20:28,320 --> 00:20:32,480
it is an html and it's zipped so that

00:20:31,440 --> 00:20:35,760
probably means

00:20:32,480 --> 00:20:37,440
70 and 80 kilobytes or kilobytes if you

00:20:35,760 --> 00:20:39,679
want

00:20:37,440 --> 00:20:41,039
but that doesn't sound too bad for that

00:20:39,679 --> 00:20:45,360
little

00:20:41,039 --> 00:20:47,520
windows piece that is the first trick

00:20:45,360 --> 00:20:50,960
the second trick is to avoid redirect

00:20:47,520 --> 00:20:54,640
from http to https if i log in

00:20:50,960 --> 00:20:56,240
if i enter to js confirm x i do not type

00:20:54,640 --> 00:20:59,200
http

00:20:56,240 --> 00:21:00,320
colon slash slash of course not the

00:20:59,200 --> 00:21:03,440
first thing

00:21:00,320 --> 00:21:04,080
the browser does is going to http and

00:21:03,440 --> 00:21:06,559
then

00:21:04,080 --> 00:21:08,080
it redirects to https and that is a

00:21:06,559 --> 00:21:11,120
waste of time

00:21:08,080 --> 00:21:13,600
there is a way called hthsts

00:21:11,120 --> 00:21:14,640
that allows us to define a header that

00:21:13,600 --> 00:21:17,919
tells the client

00:21:14,640 --> 00:21:19,760
the browser hey

00:21:17,919 --> 00:21:22,159
this website that i'm going to go in is

00:21:19,760 --> 00:21:24,400
always going to be https

00:21:22,159 --> 00:21:26,080
so from now on you will always have to

00:21:24,400 --> 00:21:29,360
go to https

00:21:26,080 --> 00:21:30,559
and that redirect can save us half a

00:21:29,360 --> 00:21:34,240
second

00:21:30,559 --> 00:21:38,559
we can also opt-in in htsspreload.org

00:21:34,240 --> 00:21:38,559
so what it does is that it white lists

00:21:39,039 --> 00:21:45,679
it lies it white lists our website so

00:21:42,240 --> 00:21:46,240
the users that have never entered our

00:21:45,679 --> 00:21:49,760
website

00:21:46,240 --> 00:21:52,799
are always going to go directly to https

00:21:49,760 --> 00:21:56,080
next we need to hack data transfer

00:21:52,799 --> 00:21:59,280
it is important to begin using http

00:21:56,080 --> 00:21:59,760
3 which is mounted on a protocol called

00:21:59,280 --> 00:22:03,600
quick

00:21:59,760 --> 00:22:04,400
it is still in beta and it works over

00:22:03,600 --> 00:22:07,280
udp

00:22:04,400 --> 00:22:09,360
those who know networks do not worry

00:22:07,280 --> 00:22:12,320
because quick adds the necessary

00:22:09,360 --> 00:22:14,880
so that packets do not get lost it

00:22:12,320 --> 00:22:17,520
reduces latency and message congestion

00:22:14,880 --> 00:22:19,840
and it can improve performance

00:22:17,520 --> 00:22:20,640
in more than 10 without touching

00:22:19,840 --> 00:22:22,880
anything

00:22:20,640 --> 00:22:26,559
this is available in chrome those are a

00:22:22,880 --> 00:22:28,960
lot of users especially in latin america

00:22:26,559 --> 00:22:31,600
and it is available also and as an

00:22:28,960 --> 00:22:33,840
experiment

00:22:31,600 --> 00:22:36,480
and you have to enable it in the

00:22:33,840 --> 00:22:39,520
settings but soon it will be available

00:22:36,480 --> 00:22:40,320
for all users so it works the same as

00:22:39,520 --> 00:22:42,720
http

00:22:40,320 --> 00:22:45,440
2 so nothing has to be changed only the

00:22:42,720 --> 00:22:48,400
transport protocol has to change

00:22:45,440 --> 00:22:49,440
next is using broadly this is configured

00:22:48,400 --> 00:22:52,159
in the server

00:22:49,440 --> 00:22:54,559
bradley can save even 25 percent of

00:22:52,159 --> 00:22:57,919
transfer compared with gzip this is

00:22:54,559 --> 00:22:59,880
an compression algorithm that allows

00:22:57,919 --> 00:23:03,120
this html this

00:22:59,880 --> 00:23:06,400
14.6 gigabytes can

00:23:03,120 --> 00:23:08,000
have more content inside so you need to

00:23:06,400 --> 00:23:10,960
verify that that is placed in the

00:23:08,000 --> 00:23:12,080
server if you have a service such as

00:23:10,960 --> 00:23:15,120
clutter

00:23:12,080 --> 00:23:18,960
you need to enable them then is hacking

00:23:15,120 --> 00:23:22,240
resource load for example modern cache

00:23:18,960 --> 00:23:23,200
what is that i know that you all know

00:23:22,240 --> 00:23:26,559
how to make

00:23:23,200 --> 00:23:29,280
you know and very neat cache

00:23:26,559 --> 00:23:29,919
i remember that web programmers were

00:23:29,280 --> 00:23:33,840
enemies

00:23:29,919 --> 00:23:37,440
of cache we used it as an excuse

00:23:33,840 --> 00:23:39,360
if the cli if the customer says

00:23:37,440 --> 00:23:42,000
i don't see the change we used as an

00:23:39,360 --> 00:23:45,200
excuse well it must be the cashier

00:23:42,000 --> 00:23:46,400
well the cashier must be used smartly it

00:23:45,200 --> 00:23:50,080
is a static

00:23:46,400 --> 00:23:53,120
every static resource must be

00:23:50,080 --> 00:23:56,320
must have a one year expiration

00:23:53,120 --> 00:23:58,559
it's very long expiration to maximize

00:23:56,320 --> 00:24:00,559
the probability to have this resource

00:23:58,559 --> 00:24:02,960
already in the client

00:24:00,559 --> 00:24:04,080
today it's very common to have a hash in

00:24:02,960 --> 00:24:06,640
the file names that

00:24:04,080 --> 00:24:08,480
is used in react and angular and other

00:24:06,640 --> 00:24:12,000
libraries and frameworks

00:24:08,480 --> 00:24:15,360
that the build process generates a

00:24:12,000 --> 00:24:17,520
hash so the main bundle the js

00:24:15,360 --> 00:24:19,760
is not called main bomb but main bundle

00:24:17,520 --> 00:24:20,480
is called main bundle and the hash and

00:24:19,760 --> 00:24:24,480
that hash

00:24:20,480 --> 00:24:26,799
changes so there is a new header

00:24:24,480 --> 00:24:28,480
so that the browsers do not make a

00:24:26,799 --> 00:24:30,960
conditional request

00:24:28,480 --> 00:24:33,919
that means that the browser has to have

00:24:30,960 --> 00:24:35,840
javascript or html looks for it

00:24:33,919 --> 00:24:38,000
and the browser says maybe there's a new

00:24:35,840 --> 00:24:40,240
version let's ask the server

00:24:38,000 --> 00:24:41,679
and all of that takes a while because

00:24:40,240 --> 00:24:44,559
you have to go to the network

00:24:41,679 --> 00:24:46,000
and since we know that this resource is

00:24:44,559 --> 00:24:48,559
not going to change

00:24:46,000 --> 00:24:50,240
we can use this cache control immutable

00:24:48,559 --> 00:24:51,360
which is compatible with all the

00:24:50,240 --> 00:24:53,520
browsers

00:24:51,360 --> 00:24:55,840
the browser knows that this file is

00:24:53,520 --> 00:24:57,919
never going to change in the server

00:24:55,840 --> 00:25:00,080
so it is never going to make a

00:24:57,919 --> 00:25:03,360
conditional request

00:25:00,080 --> 00:25:05,760
so that's interesting then you need to

00:25:03,360 --> 00:25:08,320
heat up the engines

00:25:05,760 --> 00:25:09,520
we need to download resources from other

00:25:08,320 --> 00:25:12,799
servers

00:25:09,520 --> 00:25:14,960
maybe images javascript files and we can

00:25:12,799 --> 00:25:17,760
help the browser to begin that

00:25:14,960 --> 00:25:21,039
connection with those servers

00:25:17,760 --> 00:25:22,320
as soon as possible for example the dns

00:25:21,039 --> 00:25:25,919
query can take

00:25:22,320 --> 00:25:29,840
a 150 milliseconds and tcp tls

00:25:25,919 --> 00:25:29,840
connections can take 200 milliseconds

00:25:30,000 --> 00:25:36,400
and you can just announce those dns

00:25:33,200 --> 00:25:39,520
queries with dns prefetch with a

00:25:36,400 --> 00:25:42,320
link tag and we let the browser now

00:25:39,520 --> 00:25:44,159
that later we are going to need

00:25:42,320 --> 00:25:45,279
resources from this domain so please

00:25:44,159 --> 00:25:48,240
start making this

00:25:45,279 --> 00:25:49,520
dns query we can even tell it to connect

00:25:48,240 --> 00:25:52,240
to that service

00:25:49,520 --> 00:25:54,320
so start sending those private and

00:25:52,240 --> 00:25:56,240
public keys and all these handshakes

00:25:54,320 --> 00:25:57,840
from secure connection just

00:25:56,240 --> 00:26:00,400
start doing that because we were going

00:25:57,840 --> 00:26:02,799
to need so we need that soon

00:26:00,400 --> 00:26:04,880
and you can announce that in the header

00:26:02,799 --> 00:26:07,200
in the html response

00:26:04,880 --> 00:26:08,640
instead of inside the content of the

00:26:07,200 --> 00:26:11,200
html

00:26:08,640 --> 00:26:12,880
and finally we can do preloading which

00:26:11,200 --> 00:26:14,880
is helping the browser

00:26:12,880 --> 00:26:16,000
to handle the priority of loading the

00:26:14,880 --> 00:26:19,120
resources

00:26:16,000 --> 00:26:20,640
with a link tag and a preload

00:26:19,120 --> 00:26:22,960
telling the browser that we're going to

00:26:20,640 --> 00:26:24,799
require that css file and we can do that

00:26:22,960 --> 00:26:27,120
in the header

00:26:24,799 --> 00:26:28,159
we are going to require for example a

00:26:27,120 --> 00:26:32,080
font

00:26:28,159 --> 00:26:35,520
dot wolf so before the browsers knows

00:26:32,080 --> 00:26:38,400
that there is a css style and that that

00:26:35,520 --> 00:26:39,919
style is going to require that font

00:26:38,400 --> 00:26:41,520
we're telling the browser to start

00:26:39,919 --> 00:26:42,320
downloading that because without

00:26:41,520 --> 00:26:45,279
typography

00:26:42,320 --> 00:26:45,840
you do not have text and without text we

00:26:45,279 --> 00:26:48,720
do not

00:26:45,840 --> 00:26:49,760
have good metrics like the first content

00:26:48,720 --> 00:26:51,760
will paint

00:26:49,760 --> 00:26:54,400
so we're going to tell the browser to

00:26:51,760 --> 00:26:58,640
begin this

00:26:54,400 --> 00:26:58,640
even we could add priority hints

00:26:59,279 --> 00:27:02,480
and for this with the importance

00:27:01,360 --> 00:27:05,520
attribute to

00:27:02,480 --> 00:27:07,520
every links and to every image tags what

00:27:05,520 --> 00:27:10,480
importance do they have

00:27:07,520 --> 00:27:12,080
so we can help the browser to download

00:27:10,480 --> 00:27:16,000
the images that we prefer

00:27:12,080 --> 00:27:19,279
before others so this is interesting

00:27:16,000 --> 00:27:23,200
and talking about images we need to hack

00:27:19,279 --> 00:27:24,080
images that realize that we need we

00:27:23,200 --> 00:27:26,320
realize that

00:27:24,080 --> 00:27:28,159
an image is worth more than a thousand

00:27:26,320 --> 00:27:30,960
word but that is if it

00:27:28,159 --> 00:27:32,559
downloads if we do not see the image it

00:27:30,960 --> 00:27:35,600
was not important

00:27:32,559 --> 00:27:38,159
so it is very important

00:27:35,600 --> 00:27:38,880
many websites add this and improve

00:27:38,159 --> 00:27:42,159
performance

00:27:38,880 --> 00:27:45,279
immediately this is lazy loading

00:27:42,159 --> 00:27:46,240
i think this means that not every image

00:27:45,279 --> 00:27:49,039
is going to

00:27:46,240 --> 00:27:50,640
to download they are going to begin

00:27:49,039 --> 00:27:53,520
downloading when they are about to

00:27:50,640 --> 00:27:56,159
appear on screen

00:27:53,520 --> 00:27:59,520
so for example this works as well for

00:27:56,159 --> 00:28:02,240
iframes or banners

00:27:59,520 --> 00:28:03,840
if you are watching them then they they

00:28:02,240 --> 00:28:05,440
are downloaded but if you are not

00:28:03,840 --> 00:28:07,200
watching them

00:28:05,440 --> 00:28:08,960
then they are not downloaded when you

00:28:07,200 --> 00:28:10,159
start scrolling them then they are

00:28:08,960 --> 00:28:12,480
downloaded so

00:28:10,159 --> 00:28:14,840
that makes that all the resources which

00:28:12,480 --> 00:28:16,320
are more important are big are

00:28:14,840 --> 00:28:19,760
downloaded

00:28:16,320 --> 00:28:23,200
and finally it is time to replace jpg

00:28:19,760 --> 00:28:26,320
and png and for that

00:28:23,200 --> 00:28:29,360
we have other image formats

00:28:26,320 --> 00:28:32,480
for for example webp which can reduce

00:28:29,360 --> 00:28:35,520
34 percent or a beef

00:28:32,480 --> 00:28:38,559
which is new 40 and

00:28:35,520 --> 00:28:40,960
only runs in chrome and desktop

00:28:38,559 --> 00:28:43,120
it will going to come in android soon

00:28:40,960 --> 00:28:47,360
and it's going to arrive in firefox

00:28:43,120 --> 00:28:49,600
soon so we can begin using a beef

00:28:47,360 --> 00:28:51,039
smaller images and if you do not like

00:28:49,600 --> 00:28:53,919
those formats

00:28:51,039 --> 00:28:55,360
at least keep using kng but change the

00:28:53,919 --> 00:28:57,919
compressor

00:28:55,360 --> 00:28:58,960
there is a new compressor called softly

00:28:57,919 --> 00:29:01,200
which reduces

00:28:58,960 --> 00:29:02,000
size in 20 percent and this is even

00:29:01,200 --> 00:29:04,720
compatible

00:29:02,000 --> 00:29:05,360
with internet explorer with everything

00:29:04,720 --> 00:29:08,559
and

00:29:05,360 --> 00:29:08,960
jpgs we can put it through a compressor

00:29:08,559 --> 00:29:11,760
called

00:29:08,960 --> 00:29:13,760
gatsly those are german names so they

00:29:11,760 --> 00:29:16,159
are not easy to pronounce

00:29:13,760 --> 00:29:17,919
so this is important that we know and

00:29:16,159 --> 00:29:20,720
finally we need to hack

00:29:17,919 --> 00:29:20,720
what you know

00:29:22,240 --> 00:29:29,440
use react angular view js

00:29:25,679 --> 00:29:33,279
and other frameworks or client libraries

00:29:29,440 --> 00:29:36,000
but think about what is more important

00:29:33,279 --> 00:29:36,880
weather or love for the library or

00:29:36,000 --> 00:29:38,880
performance

00:29:36,880 --> 00:29:40,320
and even if you do not like the answer

00:29:38,880 --> 00:29:42,640
the more important thing

00:29:40,320 --> 00:29:45,760
is performance we are not doing

00:29:42,640 --> 00:29:47,679
performance for performance itself

00:29:45,760 --> 00:29:48,799
we are not doing it because we're fans

00:29:47,679 --> 00:29:52,240
of it but

00:29:48,799 --> 00:29:54,240
because it is proven that if we have

00:29:52,240 --> 00:29:56,000
better performance we will have better

00:29:54,240 --> 00:29:58,080
conversion and we will have

00:29:56,000 --> 00:29:59,840
more money more money for somebody more

00:29:58,080 --> 00:30:03,919
users more visits

00:29:59,840 --> 00:30:06,960
more more shopping this is proving

00:30:03,919 --> 00:30:10,159
so when we use these libraries

00:30:06,960 --> 00:30:12,320
we need to start changing and

00:30:10,159 --> 00:30:14,159
thinking if we need to do something on

00:30:12,320 --> 00:30:17,840
the server side

00:30:14,159 --> 00:30:20,840
like next js or nox js

00:30:17,840 --> 00:30:23,520
or move to static generator such as

00:30:20,840 --> 00:30:26,559
eleventy

00:30:23,520 --> 00:30:27,679
so for example we have eleventy is

00:30:26,559 --> 00:30:30,240
javascript

00:30:27,679 --> 00:30:33,919
my computer runs it and it generates

00:30:30,240 --> 00:30:33,919
purely static files

00:30:35,360 --> 00:30:39,440
and there is a lot of new tricks to hack

00:30:37,679 --> 00:30:41,120
the web performance

00:30:39,440 --> 00:30:42,880
performance should be the number one

00:30:41,120 --> 00:30:44,880
priority always

00:30:42,880 --> 00:30:46,000
because without performance there is no

00:30:44,880 --> 00:30:48,320
conversion

00:30:46,000 --> 00:30:50,880
and conversion is what brings the money

00:30:48,320 --> 00:30:53,279
in for us to make development

00:30:50,880 --> 00:30:54,080
so we need to push for more and the

00:30:53,279 --> 00:30:57,360
effort

00:30:54,080 --> 00:31:01,039
is worth it so do you feel bad

00:30:57,360 --> 00:31:01,039
already i hope you do feel bad

00:31:01,360 --> 00:31:05,120
so that was all today thank you very

00:31:04,080 --> 00:31:07,679
much

00:31:05,120 --> 00:31:09,120
if you want the book hacking web

00:31:07,679 --> 00:31:12,559
performance you can get it for

00:31:09,120 --> 00:31:16,159
for free from from my website and it has

00:31:12,559 --> 00:31:16,159
some of the topics that we saw in this

00:31:16,840 --> 00:31:20,799
conference

00:31:18,720 --> 00:31:20,799

YouTube URL: https://www.youtube.com/watch?v=ing6mc3Yuhc


