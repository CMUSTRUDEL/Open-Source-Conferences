Title: Micro Frontends, how to evolve to an extensible frontend-Benjamín Martínez(English translated audio)
Publication date: 2021-02-09
Playlist: JsConf Mexico 2020  virtual edition
Description: 
	There will be a review of the history of webapps. What is a micro frontend will be explained and its structure will be analyzed, when to use them, challenges and lessons learned in its use.
Captions: 
	00:00:04,240 --> 00:00:09,519
i've been here for

00:00:05,440 --> 00:00:12,639
a couple of years of a web developer

00:00:09,519 --> 00:00:13,840
and in global also we've been working

00:00:12,639 --> 00:00:17,359
what is

00:00:13,840 --> 00:00:19,600
micro front ends we have

00:00:17,359 --> 00:00:22,080
about some lessons and we want to share

00:00:19,600 --> 00:00:22,080
it with you

00:00:22,240 --> 00:00:25,439
let's start

00:00:25,840 --> 00:00:31,920
analyzing the problem that we have

00:00:28,880 --> 00:00:34,239
or the the challenge

00:00:31,920 --> 00:00:35,520
is something that is happening when we

00:00:34,239 --> 00:00:38,640
are developing

00:00:35,520 --> 00:00:41,760
we have this piece of software that is

00:00:38,640 --> 00:00:46,320
growing and also need to be

00:00:41,760 --> 00:00:49,360
developed faster so you add or

00:00:46,320 --> 00:00:52,399
increase and then is very

00:00:49,360 --> 00:00:55,520
hard to maintain that software piece

00:00:52,399 --> 00:00:58,559
and also there are problems or

00:00:55,520 --> 00:01:01,840
requirements that for example to

00:00:58,559 --> 00:01:02,800
finish very fast or high availability of

00:01:01,840 --> 00:01:05,360
the software

00:01:02,800 --> 00:01:06,320
and with that there are some problems in

00:01:05,360 --> 00:01:09,920
the development

00:01:06,320 --> 00:01:13,439
area to understand

00:01:09,920 --> 00:01:16,159
more let's reflect

00:01:13,439 --> 00:01:18,720
about the evolution of the web

00:01:16,159 --> 00:01:18,720
development

00:01:19,439 --> 00:01:26,000
so let's start in the 1990s

00:01:22,880 --> 00:01:28,880
when we just started in this the

00:01:26,000 --> 00:01:29,439
web it was a great invention in those

00:01:28,880 --> 00:01:32,640
days

00:01:29,439 --> 00:01:35,920
we had a single monolith this

00:01:32,640 --> 00:01:38,840
single monolith it was full

00:01:35,920 --> 00:01:40,079
uh integrated what we sent to the

00:01:38,840 --> 00:01:43,119
browser

00:01:40,079 --> 00:01:44,000
everything was in one project and of

00:01:43,119 --> 00:01:47,119
course

00:01:44,000 --> 00:01:50,240
it was very difficult to maintain

00:01:47,119 --> 00:01:54,240
it had their own problems then

00:01:50,240 --> 00:01:58,240
years go by and about

00:01:54,240 --> 00:02:01,680
in the middle 90s somebody said

00:01:58,240 --> 00:02:04,560
why don't we separate these monoliths

00:02:01,680 --> 00:02:05,520
the back end will be working one side

00:02:04,560 --> 00:02:08,720
and the front and

00:02:05,520 --> 00:02:09,520
in the other side separately and it was

00:02:08,720 --> 00:02:13,040
a surprise

00:02:09,520 --> 00:02:16,879
it was a great advance it was very easy

00:02:13,040 --> 00:02:18,879
to to maintain in one side the front end

00:02:16,879 --> 00:02:22,160
and the other side at the back and

00:02:18,879 --> 00:02:25,840
then more years passed and

00:02:22,160 --> 00:02:29,120
we saw that in the back end area

00:02:25,840 --> 00:02:32,800
they said well this is becoming a

00:02:29,120 --> 00:02:33,120
problem our business logic is so complex

00:02:32,800 --> 00:02:35,280
that

00:02:33,120 --> 00:02:36,319
even though we are super from the front

00:02:35,280 --> 00:02:38,319
end it's

00:02:36,319 --> 00:02:39,680
very complicated to maintain the back

00:02:38,319 --> 00:02:43,360
end why

00:02:39,680 --> 00:02:45,360
don't we either to only have a

00:02:43,360 --> 00:02:46,400
single monolith in the back end let's

00:02:45,360 --> 00:02:50,000
separate

00:02:46,400 --> 00:02:53,480
we say let's have micro services

00:02:50,000 --> 00:02:55,040
each one do performing one task so the

00:02:53,480 --> 00:02:58,080
microservices

00:02:55,040 --> 00:03:01,840
started the task simplified

00:02:58,080 --> 00:03:01,840
and it was a success

00:03:03,280 --> 00:03:06,720
uh that was happening in the back end

00:03:05,360 --> 00:03:09,760
but in the front end

00:03:06,720 --> 00:03:09,760
it was the opposite

00:03:10,159 --> 00:03:17,760
so we started saying why don't

00:03:13,920 --> 00:03:19,080
we mix everything in a just single

00:03:17,760 --> 00:03:22,080
package

00:03:19,080 --> 00:03:22,080
spas

00:03:23,519 --> 00:03:36,159
we create some bundles etc

00:03:32,159 --> 00:03:39,840
um for example i have a web page

00:03:36,159 --> 00:03:40,640
about five pages and just one have an

00:03:39,840 --> 00:03:43,920
error

00:03:40,640 --> 00:03:46,480
and i need to deploy it but

00:03:43,920 --> 00:03:49,440
because it's everything is in a big

00:03:46,480 --> 00:03:52,879
bundle i cannot deploy or display

00:03:49,440 --> 00:03:54,239
that that page so i need to start again

00:03:52,879 --> 00:03:57,280
with my app

00:03:54,239 --> 00:04:00,400
so then we need to go

00:03:57,280 --> 00:04:03,200
this big jump to 2020 because this

00:04:00,400 --> 00:04:04,159
started a single year a couple of years

00:04:03,200 --> 00:04:07,200
ago

00:04:04,159 --> 00:04:11,040
but in 2020 we said

00:04:07,200 --> 00:04:15,519
why instead of having just one

00:04:11,040 --> 00:04:18,400
package for front end let's separate in

00:04:15,519 --> 00:04:18,400
small packages

00:04:20,320 --> 00:04:28,560
and from there we have this question

00:04:24,479 --> 00:04:31,280
as microservices

00:04:28,560 --> 00:04:32,720
had the evolution let's do it in the

00:04:31,280 --> 00:04:35,759
front end

00:04:32,720 --> 00:04:38,639
if we try to have like a

00:04:35,759 --> 00:04:39,919
hard definition of what is micro

00:04:38,639 --> 00:04:42,479
front-end architecture

00:04:39,919 --> 00:04:43,280
it's an approach to develop web

00:04:42,479 --> 00:04:48,160
application

00:04:43,280 --> 00:04:51,199
as a composition of small front and apps

00:04:48,160 --> 00:04:54,240
representing and what is important is

00:04:51,199 --> 00:04:57,040
every app represents a business

00:04:54,240 --> 00:04:59,520
super domain that's the key point in

00:04:57,040 --> 00:05:02,720
order to success

00:04:59,520 --> 00:05:05,840
basically is we're not going to divide

00:05:02,720 --> 00:05:06,479
what we're seeing in the slide is uh is

00:05:05,840 --> 00:05:10,080
in my

00:05:06,479 --> 00:05:13,199
my facebook page and some years

00:05:10,080 --> 00:05:16,560
ago i think 2010 they publish

00:05:13,199 --> 00:05:19,520
an article and they propose something

00:05:16,560 --> 00:05:19,919
similar of micro front edge we can say

00:05:19,520 --> 00:05:23,280
that

00:05:19,919 --> 00:05:26,240
in that point the term was

00:05:23,280 --> 00:05:28,960
for everybody but it was not micro front

00:05:26,240 --> 00:05:34,080
ends but pagelet

00:05:28,960 --> 00:05:37,360
and basically is the dividing section

00:05:34,080 --> 00:05:40,240
so facebook had a

00:05:37,360 --> 00:05:41,120
different sections and work by different

00:05:40,240 --> 00:05:44,320
teams

00:05:41,120 --> 00:05:45,759
and they saw perform a better

00:05:44,320 --> 00:05:49,280
performance and

00:05:45,759 --> 00:05:49,600
and some advantages but let's analyze

00:05:49,280 --> 00:05:52,639
the

00:05:49,600 --> 00:05:56,240
facebook interface uh

00:05:52,639 --> 00:05:59,600
here we have the search box the menu

00:05:56,240 --> 00:06:03,759
in the up in the another

00:05:59,600 --> 00:06:06,880
section to create a publication

00:06:03,759 --> 00:06:11,520
and then histories got into a trend

00:06:06,880 --> 00:06:14,560
and they just added in this area

00:06:11,520 --> 00:06:18,400
then news section chat

00:06:14,560 --> 00:06:20,080
and advertising area so in just one page

00:06:18,400 --> 00:06:21,520
we have a lot of different

00:06:20,080 --> 00:06:26,080
functionalities

00:06:21,520 --> 00:06:29,280
but every one of it is isolated or is it

00:06:26,080 --> 00:06:32,720
independent so let's say

00:06:29,280 --> 00:06:35,759
let's see how this works if you

00:06:32,720 --> 00:06:39,440
realize when we click in any of this

00:06:35,759 --> 00:06:42,880
element we are using just that

00:06:39,440 --> 00:06:47,280
element and the others remains the same

00:06:42,880 --> 00:06:50,960
and what i mean is i'm writing a

00:06:47,280 --> 00:06:55,199
public section and the other things in

00:06:50,960 --> 00:07:00,080
news and other parts are not move

00:06:55,199 --> 00:07:00,080
each section is independent of the other

00:07:01,360 --> 00:07:07,840
let's go to a more

00:07:04,400 --> 00:07:11,759
interest detail for us how

00:07:07,840 --> 00:07:11,759
we can see this but in the code

00:07:12,639 --> 00:07:19,120
so with the chrome tools

00:07:16,160 --> 00:07:19,840
we see something like this how do they

00:07:19,120 --> 00:07:23,120
look

00:07:19,840 --> 00:07:25,039
to the browser so for example in the

00:07:23,120 --> 00:07:26,160
publication area we are going to see

00:07:25,039 --> 00:07:29,360
that they have

00:07:26,160 --> 00:07:32,560
this page led composer

00:07:29,360 --> 00:07:33,720
what they did it was to create this

00:07:32,560 --> 00:07:37,280
small app

00:07:33,720 --> 00:07:40,240
specialized in facebook

00:07:37,280 --> 00:07:41,599
publication not show it just create it

00:07:40,240 --> 00:07:44,800
and it's the same in the hist

00:07:41,599 --> 00:07:47,759
in the stories stories is a

00:07:44,800 --> 00:07:48,720
particular case because they have an

00:07:47,759 --> 00:07:52,240
integration with

00:07:48,720 --> 00:07:55,199
instagram in this case in the

00:07:52,240 --> 00:07:56,400
rear area they have this communication

00:07:55,199 --> 00:07:59,599
channel

00:07:56,400 --> 00:08:00,639
or to histories in the same facebook

00:07:59,599 --> 00:08:03,919
platform

00:08:00,639 --> 00:08:07,520
and they use those data

00:08:03,919 --> 00:08:07,840
and it's a pagelet independent so this

00:08:07,520 --> 00:08:10,879
is

00:08:07,840 --> 00:08:13,520
like the first term to page

00:08:10,879 --> 00:08:15,360
any similar what we know now as a micro

00:08:13,520 --> 00:08:18,560
front end

00:08:15,360 --> 00:08:20,479
and at the end of the day it's a

00:08:18,560 --> 00:08:24,479
separate app

00:08:20,479 --> 00:08:27,759
so let's put attention in this code

00:08:24,479 --> 00:08:31,520
you can see that there's nothing like

00:08:27,759 --> 00:08:31,520
impressive is that death

00:08:32,959 --> 00:08:41,200
and and that's a component

00:08:36,399 --> 00:08:46,560
implementation and yes it is

00:08:41,200 --> 00:08:49,120
we are not reinventing we are using

00:08:46,560 --> 00:08:50,880
uh technologies that existed for a long

00:08:49,120 --> 00:08:54,160
time ago

00:08:50,880 --> 00:08:58,720
we can use also with divs

00:08:54,160 --> 00:08:58,720
or even though with live streams

00:09:03,839 --> 00:09:13,200
the key for this technique

00:09:08,560 --> 00:09:16,720
let's think that it's a rack

00:09:13,200 --> 00:09:20,839
where you place a nap in each

00:09:16,720 --> 00:09:24,000
slot so we can connect or

00:09:20,839 --> 00:09:28,240
disconnect pieces to our

00:09:24,000 --> 00:09:33,040
website and our website

00:09:28,240 --> 00:09:33,040
need to support it through steps maybe

00:09:35,200 --> 00:09:39,760
with with no repetitions let's remember

00:09:38,720 --> 00:09:43,519
a key

00:09:39,760 --> 00:09:46,959
factor is imagine this

00:09:43,519 --> 00:09:50,640
in a way that each

00:09:46,959 --> 00:09:54,480
micro front ends represent a

00:09:50,640 --> 00:09:58,000
business subtle mind and and must be

00:09:54,480 --> 00:09:58,000
isolated from the others

00:10:01,040 --> 00:10:05,680
so now let's see something more

00:10:04,079 --> 00:10:09,920
interesting

00:10:05,680 --> 00:10:09,920
which is a demo how all this works

00:10:10,640 --> 00:10:14,480
but before i would like to highlight

00:10:13,680 --> 00:10:17,600
there's no

00:10:14,480 --> 00:10:20,240
uh strict or uh definitive

00:10:17,600 --> 00:10:22,000
technique of how to apply a micro front

00:10:20,240 --> 00:10:26,160
end

00:10:22,000 --> 00:10:30,079
what we are doing is like a philosophy

00:10:26,160 --> 00:10:33,360
how we are developing this

00:10:30,079 --> 00:10:35,839
currently there are some frameworks that

00:10:33,360 --> 00:10:37,760
help us in this stack but not

00:10:35,839 --> 00:10:41,680
necessarily we need to

00:10:37,760 --> 00:10:45,200
implement them just follow the idea

00:10:41,680 --> 00:10:48,480
that each section of

00:10:45,200 --> 00:10:48,959
sub domain of my business is separated

00:10:48,480 --> 00:10:52,160
and

00:10:48,959 --> 00:10:55,360
isolated from the rest

00:10:52,160 --> 00:10:56,079
in this case the demo that we're going

00:10:55,360 --> 00:11:00,079
to see

00:10:56,079 --> 00:11:03,600
is a small app

00:11:00,079 --> 00:11:03,600
pending or something to do

00:11:05,920 --> 00:11:11,519
and let's think the development team

00:11:09,360 --> 00:11:12,959
already analyzed it and we are going to

00:11:11,519 --> 00:11:17,120
divide it in three

00:11:12,959 --> 00:11:20,240
areas the first one is editor

00:11:17,120 --> 00:11:24,160
editor is where the user is going to

00:11:20,240 --> 00:11:27,200
write down the task the second one

00:11:24,160 --> 00:11:27,200
is the list

00:11:27,600 --> 00:11:34,320
everything that is rightly written and

00:11:30,640 --> 00:11:37,279
saved and the third one is the the rock

00:11:34,320 --> 00:11:38,880
that i already mentioned this app that

00:11:37,279 --> 00:11:42,000
will contain the others

00:11:38,880 --> 00:11:45,760
and maintain the connection all like

00:11:42,000 --> 00:11:45,760
the wires between them

00:11:48,320 --> 00:11:51,279
just one second

00:11:51,839 --> 00:11:57,839
let's start and review

00:11:59,120 --> 00:12:02,880
this rack that i mentioned

00:12:03,760 --> 00:12:10,399
oh all this code is in this hub

00:12:07,519 --> 00:12:13,519
if you want to review it at the end of

00:12:10,399 --> 00:12:17,360
the presentation you will have the link

00:12:13,519 --> 00:12:18,000
but basically the first part that i want

00:12:17,360 --> 00:12:23,040
to

00:12:18,000 --> 00:12:26,560
check out is lines 18 and 19

00:12:23,040 --> 00:12:26,560
we are using iframe

00:12:28,320 --> 00:12:34,720
some years ago i've noticed

00:12:31,600 --> 00:12:38,000
that people doesn't like to use iframe

00:12:34,720 --> 00:12:41,920
but here okay let's do it and

00:12:38,000 --> 00:12:44,480
because it's the simple way to embed

00:12:41,920 --> 00:12:45,200
one up with the other and it's in a

00:12:44,480 --> 00:12:48,000
standard

00:12:45,200 --> 00:12:48,320
all the browsers are there it's included

00:12:48,000 --> 00:12:51,760
in

00:12:48,320 --> 00:12:54,399
all the browsers so why not use it again

00:12:51,760 --> 00:12:55,360
this depends of the your current

00:12:54,399 --> 00:12:58,320
development

00:12:55,360 --> 00:12:59,680
maybe it's not so good so you need to

00:12:58,320 --> 00:13:06,399
change this technique

00:12:59,680 --> 00:13:09,760
but for demo this is enough

00:13:06,399 --> 00:13:13,120
html is pretty simple just two

00:13:09,760 --> 00:13:15,839
iframes one is editor and the other one

00:13:13,120 --> 00:13:15,839
is list

00:13:18,959 --> 00:13:23,680
now we are seeing editor code

00:13:24,160 --> 00:13:29,760
and we can see is pretty much complex

00:13:27,040 --> 00:13:33,760
the html

00:13:29,760 --> 00:13:36,800
we have two fields and two bottoms

00:13:33,760 --> 00:13:39,600
one for the the description

00:13:36,800 --> 00:13:41,920
one from save and another for clear

00:13:39,600 --> 00:13:41,920
clear

00:13:43,360 --> 00:13:46,399
to clear the note

00:13:47,279 --> 00:13:54,240
so continue with our assumptions

00:13:51,360 --> 00:13:55,440
let's say that this small app was

00:13:54,240 --> 00:13:58,560
developed by a

00:13:55,440 --> 00:14:03,839
team they have their own practices

00:13:58,560 --> 00:14:07,199
and code this team said

00:14:03,839 --> 00:14:10,399
let's do this small app take into

00:14:07,199 --> 00:14:14,839
account three things or three objects

00:14:10,399 --> 00:14:17,440
the first one is to be used as apa

00:14:14,839 --> 00:14:20,639
public and through this

00:14:17,440 --> 00:14:24,079
object it will be connected to my app

00:14:20,639 --> 00:14:27,440
the second we are going to handle

00:14:24,079 --> 00:14:31,199
all the business logic and number

00:14:27,440 --> 00:14:34,480
three to wire the ui

00:14:31,199 --> 00:14:34,480
to the business object

00:14:37,040 --> 00:14:43,440
and very fast i'm going to

00:14:40,399 --> 00:14:45,839
show you this reference when you see the

00:14:43,440 --> 00:14:45,839
code

00:14:46,160 --> 00:14:52,240
here is perfectly mentioned

00:14:50,320 --> 00:14:53,839
each and every one of these three

00:14:52,240 --> 00:14:57,040
objects

00:14:53,839 --> 00:15:01,120
let's remember the idea

00:14:57,040 --> 00:15:02,000
is an object and will be used as a

00:15:01,120 --> 00:15:04,480
public

00:15:02,000 --> 00:15:04,480
apa

00:15:06,720 --> 00:15:13,839
next application or micro front end

00:15:10,480 --> 00:15:13,839
is list

00:15:15,959 --> 00:15:22,800
htlm is very easy

00:15:19,839 --> 00:15:24,320
we have a body with an extra element and

00:15:22,800 --> 00:15:28,240
that's it

00:15:24,320 --> 00:15:30,240
but the truth the thing is that

00:15:28,240 --> 00:15:31,519
everything is in javascript adding those

00:15:30,240 --> 00:15:34,959
elements and

00:15:31,519 --> 00:15:36,320
again it's a separate team and decided

00:15:34,959 --> 00:15:39,199
that

00:15:36,320 --> 00:15:40,320
or the simpler way was to create

00:15:39,199 --> 00:15:43,759
functions

00:15:40,320 --> 00:15:44,399
that will handle all these and we will

00:15:43,759 --> 00:15:47,680
have

00:15:44,399 --> 00:15:54,560
a list that we need to notify

00:15:47,680 --> 00:15:58,720
every time an alteration appears

00:15:54,560 --> 00:16:02,399
if we review both micro apps

00:15:58,720 --> 00:16:06,320
they have the object or a way to control

00:16:02,399 --> 00:16:09,519
and are different but they are not

00:16:06,320 --> 00:16:12,959
ones against the other because

00:16:09,519 --> 00:16:15,600
we can say there are two different

00:16:12,959 --> 00:16:15,600
apis

00:16:17,199 --> 00:16:27,199
going back to our container or frame

00:16:23,839 --> 00:16:29,519
it's not enough just to have this iframe

00:16:27,199 --> 00:16:34,399
we need to wire

00:16:29,519 --> 00:16:38,000
and this is as any element of our rack

00:16:34,399 --> 00:16:38,560
that we built is not enough to put the

00:16:38,000 --> 00:16:43,519
server

00:16:38,560 --> 00:16:47,759
in its place we need to wire the server

00:16:43,519 --> 00:16:47,759
and this happens here

00:16:48,000 --> 00:16:53,920
if you notice we call the

00:16:51,279 --> 00:16:53,920
functions

00:16:55,600 --> 00:17:03,440
in the other mini application

00:16:58,800 --> 00:17:07,839
all this wiring and then it works

00:17:03,440 --> 00:17:07,839
let's see how this

00:17:16,839 --> 00:17:19,839
works

00:17:29,600 --> 00:17:46,240
okay this is the app

00:17:32,880 --> 00:17:49,280
that we are developing

00:17:46,240 --> 00:17:49,280
and it's working

00:17:50,400 --> 00:17:56,640
so until now these two

00:17:53,440 --> 00:17:59,760
apps are working okay

00:17:56,640 --> 00:18:00,559
but what is the advantage of this

00:17:59,760 --> 00:18:03,679
technique

00:18:00,559 --> 00:18:04,640
let's suppose that we deploy this to

00:18:03,679 --> 00:18:08,000
production

00:18:04,640 --> 00:18:11,280
and then they say to us you know what

00:18:08,000 --> 00:18:14,320
there is a bug that is in production

00:18:11,280 --> 00:18:17,919
the list of tasks

00:18:14,320 --> 00:18:18,960
is red when the mouse is over or is

00:18:17,919 --> 00:18:22,559
hovering

00:18:18,960 --> 00:18:23,760
but we need to develop but we don't want

00:18:22,559 --> 00:18:26,960
to

00:18:23,760 --> 00:18:29,120
have problems with the server just it's

00:18:26,960 --> 00:18:32,640
a very tiny bug

00:18:29,120 --> 00:18:32,640
and we need just to deploy it

00:18:33,840 --> 00:18:38,559
and so what we can do there is well i'm

00:18:37,120 --> 00:18:42,320
not going to

00:18:38,559 --> 00:18:46,000
go to the trash my entire app i can

00:18:42,320 --> 00:18:50,240
go here to my code ccs

00:18:46,000 --> 00:18:53,840
this this is the the code in the list

00:18:50,240 --> 00:18:58,480
you re you review find the bug

00:18:53,840 --> 00:19:01,760
oh yes of course this property

00:18:58,480 --> 00:19:05,600
was wrong i

00:19:01,760 --> 00:19:05,600
delete it and deploy it again

00:19:07,760 --> 00:19:14,799
let's review it and right now i

00:19:11,679 --> 00:19:19,039
change it and boxy a

00:19:14,799 --> 00:19:22,080
not deployed so

00:19:19,039 --> 00:19:26,880
for show you i did

00:19:22,080 --> 00:19:31,200
this script to deploy

00:19:26,880 --> 00:19:34,400
separate application in this demo

00:19:31,200 --> 00:19:37,520
in real world it can be a container

00:19:34,400 --> 00:19:40,919
a virtual machine whatever

00:19:37,520 --> 00:19:45,600
depends on of your

00:19:40,919 --> 00:19:45,600
infrastructure or your app

00:19:46,160 --> 00:19:50,080
but this is not a it's not against the

00:19:49,200 --> 00:19:55,039
concept

00:19:50,080 --> 00:19:55,039
so i can tell if this is gulp

00:19:56,080 --> 00:19:58,880
deploy list

00:20:03,120 --> 00:20:09,200
and this will deploy just this small

00:20:06,559 --> 00:20:09,840
part of the list we can see it here only

00:20:09,200 --> 00:20:12,159
deployed

00:20:09,840 --> 00:20:12,159
list

00:20:13,520 --> 00:20:20,880
we come back to our demo we reload

00:20:16,960 --> 00:20:24,559
the page and that's it

00:20:20,880 --> 00:20:27,679
we repair the bug also

00:20:24,559 --> 00:20:35,280
we can have a stronger

00:20:27,679 --> 00:20:41,280
errors let's do one for example

00:20:35,280 --> 00:20:41,280
in the list somebody made a mistake

00:20:44,720 --> 00:20:53,760
and he raised a part of the html

00:20:49,280 --> 00:20:56,960
so the app will stop working

00:20:53,760 --> 00:21:03,840
and again we deployed

00:20:56,960 --> 00:21:03,840
this part

00:21:05,039 --> 00:21:12,320
and what we see and of course

00:21:09,280 --> 00:21:14,320
on all these parties without this

00:21:12,320 --> 00:21:18,480
with color and it's an iframe it's

00:21:14,320 --> 00:21:18,480
connected but the rest is working

00:21:21,360 --> 00:21:28,960
and we can say okay

00:21:25,360 --> 00:21:31,840
i find out the bug i solve it and that's

00:21:28,960 --> 00:21:31,840
it

00:21:32,799 --> 00:21:39,679
basically the idea is

00:21:35,840 --> 00:21:41,280
let's separate this or let's imagine

00:21:39,679 --> 00:21:44,480
that they are

00:21:41,280 --> 00:21:46,799
a independent app this is not new it's

00:21:44,480 --> 00:21:49,600
just the perspective

00:21:46,799 --> 00:21:50,080
of how we are going to develop this app

00:21:49,600 --> 00:21:53,200
as

00:21:50,080 --> 00:21:56,400
separate once

00:21:53,200 --> 00:21:58,880
the other day somebody told me well at

00:21:56,400 --> 00:22:00,640
the end of the day is an approximation

00:21:58,880 --> 00:22:04,480
of components yes

00:22:00,640 --> 00:22:04,480
in a way or the other it is

00:22:05,679 --> 00:22:12,240
but we need to take into account imagine

00:22:08,720 --> 00:22:15,919
your component at a separate app

00:22:12,240 --> 00:22:18,240
i can send to production

00:22:15,919 --> 00:22:19,760
that only component and that's the key

00:22:18,240 --> 00:22:23,120
point

00:22:19,760 --> 00:22:27,120
or the great lesson that we

00:22:23,120 --> 00:22:30,039
learn working in global so the value of

00:22:27,120 --> 00:22:31,360
working of micro front end is the

00:22:30,039 --> 00:22:35,120
flexibility

00:22:31,360 --> 00:22:38,000
to deploy fractions or

00:22:35,120 --> 00:22:39,120
areas because there are some times when

00:22:38,000 --> 00:22:41,840
we have

00:22:39,120 --> 00:22:42,240
some problems in production and we just

00:22:41,840 --> 00:22:45,679
want

00:22:42,240 --> 00:22:46,159
need to deploy a very tiny part of the

00:22:45,679 --> 00:22:49,120
app

00:22:46,159 --> 00:22:50,720
and this is very useful and there's a

00:22:49,120 --> 00:22:54,080
lot of flexibility

00:22:50,720 --> 00:22:56,720
when we manipulate or these apps

00:22:54,080 --> 00:22:57,440
sometimes the client says oh you know

00:22:56,720 --> 00:23:01,280
what

00:22:57,440 --> 00:23:03,760
i this will be developed in this way

00:23:01,280 --> 00:23:04,640
with this architecture but at the last

00:23:03,760 --> 00:23:06,480
minute i

00:23:04,640 --> 00:23:08,240
realized that no i don't need it like

00:23:06,480 --> 00:23:11,840
that i need to change it

00:23:08,240 --> 00:23:14,880
and very fast because i have a duty

00:23:11,840 --> 00:23:18,159
limit time so this separation

00:23:14,880 --> 00:23:18,559
it's also help us to isolate problems

00:23:18,159 --> 00:23:20,840
and

00:23:18,559 --> 00:23:22,240
also it's very important this

00:23:20,840 --> 00:23:25,840
flexibility

00:23:22,240 --> 00:23:25,840
let's go back to the presentation

00:23:30,320 --> 00:23:36,640
and working

00:23:33,440 --> 00:23:39,840
in this way is not a definitive

00:23:36,640 --> 00:23:42,720
solution we have to balance

00:23:39,840 --> 00:23:43,679
things i gain one things i can lose

00:23:42,720 --> 00:23:46,880
other

00:23:43,679 --> 00:23:50,159
let's it's a we need to

00:23:46,880 --> 00:23:51,039
analyze if it's correct for what my type

00:23:50,159 --> 00:23:53,760
of project

00:23:51,039 --> 00:23:54,240
so the things these straight up so what

00:23:53,760 --> 00:23:57,360
i

00:23:54,240 --> 00:24:00,720
gain is organizational flexibility

00:23:57,360 --> 00:24:03,120
a lot of flexibility how we can organize

00:24:00,720 --> 00:24:09,120
in our projects

00:24:03,120 --> 00:24:09,120
also we we increase scalability

00:24:09,360 --> 00:24:13,200
and deployability

00:24:14,159 --> 00:24:19,840
we can we will reduce

00:24:20,720 --> 00:24:28,000
we will have a lot of flexibility

00:24:23,760 --> 00:24:28,000
in how we deploy things

00:24:28,080 --> 00:24:34,320
and another point that i love

00:24:31,200 --> 00:24:38,240
in some way there are devs

00:24:34,320 --> 00:24:41,200
news so if it's a very big project

00:24:38,240 --> 00:24:43,039
always is a problem because they don't

00:24:41,200 --> 00:24:44,159
the one the new ones they don't know the

00:24:43,039 --> 00:24:47,760
code base

00:24:44,159 --> 00:24:51,120
so the time that they this

00:24:47,760 --> 00:24:54,159
learning time is very long

00:24:51,120 --> 00:24:54,960
or not as easy as we want so working in

00:24:54,159 --> 00:24:59,039
this way

00:24:54,960 --> 00:25:02,480
is much better because the sections

00:24:59,039 --> 00:25:05,840
that the new developer must focus are

00:25:02,480 --> 00:25:09,360
smaller they she or he didn't

00:25:05,840 --> 00:25:11,360
know know the entire code

00:25:09,360 --> 00:25:12,480
this is someone on the one side but on

00:25:11,360 --> 00:25:15,760
the other side

00:25:12,480 --> 00:25:19,840
will increase complexity and why

00:25:15,760 --> 00:25:23,200
because we need to know the version of

00:25:19,840 --> 00:25:29,279
each microphone deploying for example

00:25:23,200 --> 00:25:32,640
version one of our editor app needs

00:25:29,279 --> 00:25:33,840
of the functionabilities of the list

00:25:32,640 --> 00:25:36,480
element that well

00:25:33,840 --> 00:25:37,679
added in list number two so we need to

00:25:36,480 --> 00:25:41,039
know all this

00:25:37,679 --> 00:25:45,120
so complexity increase

00:25:41,039 --> 00:25:48,320
when we deploy the second thing

00:25:45,120 --> 00:25:51,600
increase uh bundle sizes

00:25:48,320 --> 00:25:54,159
and data transfer let's

00:25:51,600 --> 00:25:54,880
remind because there are separate apps

00:25:54,159 --> 00:25:58,080
each one

00:25:54,880 --> 00:26:01,279
had the same dependencies their own

00:25:58,080 --> 00:26:04,640
resources so that's why this uh

00:26:01,279 --> 00:26:07,679
the data transfer increase so we need to

00:26:04,640 --> 00:26:11,120
watch out that point

00:26:07,679 --> 00:26:14,640
and the third one is very delicate

00:26:11,120 --> 00:26:18,480
we need to emphasize on integration test

00:26:14,640 --> 00:26:21,840
different app is not only to

00:26:18,480 --> 00:26:24,240
test the app but the several apps

00:26:21,840 --> 00:26:27,039
and all the apps that get along together

00:26:24,240 --> 00:26:27,039
one to the other

00:26:29,360 --> 00:26:36,320
and if right now somebody tells me

00:26:32,960 --> 00:26:39,520
when should i use this technique

00:26:36,320 --> 00:26:42,320
or to have this micro front and

00:26:39,520 --> 00:26:43,200
focus i will take into account these two

00:26:42,320 --> 00:26:46,640
aspects

00:26:43,200 --> 00:26:49,360
first of all how simple or diverse

00:26:46,640 --> 00:26:49,360
is the business

00:26:49,919 --> 00:26:56,400
maybe it's as simple as if i

00:26:53,200 --> 00:26:57,919
start uh to implement the microfrontend

00:26:56,400 --> 00:27:00,799
because it's a new trade

00:26:57,919 --> 00:27:02,640
maybe i'm complicated myself so a simple

00:27:00,799 --> 00:27:07,440
business

00:27:02,640 --> 00:27:11,279
for example a calculator

00:27:07,440 --> 00:27:13,840
i can say well maybe with two abs and

00:27:11,279 --> 00:27:16,000
will be one will be like the screen and

00:27:13,840 --> 00:27:17,279
the second one the bottoms and in that

00:27:16,000 --> 00:27:20,880
scenario

00:27:17,279 --> 00:27:24,159
it is really useful

00:27:20,880 --> 00:27:29,440
beyond educational purposes

00:27:24,159 --> 00:27:34,399
but if a diverse business is example

00:27:29,440 --> 00:27:37,919
e-commerce for example

00:27:34,399 --> 00:27:40,640
can tell me well a business

00:27:37,919 --> 00:27:41,440
at the end of the day is sales yes it's

00:27:40,640 --> 00:27:44,880
right

00:27:41,440 --> 00:27:48,080
but on one side

00:27:44,880 --> 00:27:51,520
is the business area of showing the

00:27:48,080 --> 00:27:56,799
product and all there is uh the

00:27:51,520 --> 00:28:00,159
the to have the transaction the sales

00:27:56,799 --> 00:28:03,039
and i can develop each area

00:28:00,159 --> 00:28:03,520
and separately and the third one is the

00:28:03,039 --> 00:28:07,039
cart

00:28:03,520 --> 00:28:10,720
section with the communication channels

00:28:07,039 --> 00:28:14,240
and and at the end

00:28:10,720 --> 00:28:17,600
unify as a bake

00:28:14,240 --> 00:28:20,159
and an entire application

00:28:17,600 --> 00:28:21,360
and the other aspect that i take into

00:28:20,159 --> 00:28:23,279
account is

00:28:21,360 --> 00:28:25,200
when there's a chance to need a

00:28:23,279 --> 00:28:28,000
fragmented release

00:28:25,200 --> 00:28:29,760
what i mean is what i just mentioned if

00:28:28,000 --> 00:28:32,960
there is a possibility

00:28:29,760 --> 00:28:33,600
that for example tell us we need to

00:28:32,960 --> 00:28:37,679
deploy

00:28:33,600 --> 00:28:39,919
this tiny uh part or we want to add this

00:28:37,679 --> 00:28:42,000
new functionality but just in this area

00:28:39,919 --> 00:28:45,120
not affecting the rest of it

00:28:42,000 --> 00:28:48,080
so if there is a chance of this the

00:28:45,120 --> 00:28:50,559
micro front end will be a very good

00:28:48,080 --> 00:28:50,559
solution

00:28:51,120 --> 00:28:54,399
and this is what i prepared to share

00:28:53,120 --> 00:28:58,159
with you

00:28:54,399 --> 00:29:00,960
and you here you have the link of the

00:28:58,159 --> 00:29:02,960
hit hub where you can download the code

00:29:00,960 --> 00:29:06,159
of the demo the qr

00:29:02,960 --> 00:29:08,000
qr is the same my social media my

00:29:06,159 --> 00:29:08,640
website and you will have all the

00:29:08,000 --> 00:29:13,840
information

00:29:08,640 --> 00:29:13,840
with this

00:29:15,600 --> 00:29:17,679

YouTube URL: https://www.youtube.com/watch?v=zuMouDUM7RE


