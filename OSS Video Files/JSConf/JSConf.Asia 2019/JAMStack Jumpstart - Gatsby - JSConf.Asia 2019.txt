Title: JAMStack Jumpstart - Gatsby - JSConf.Asia 2019
Publication date: 2019-07-05
Playlist: JSConf.Asia 2019
Description: 
	Speaker: Shawn Wang @swyx

There is a lot of developer and investment interest in JAMStack technologies, from the serverless movement to new authentication models to continuous atomic deployment to the static site generator renaissance. But with so many new terms and options, it is hard for people to figure out where to start.
This workshop will teach developers to set up a simple but state of the art Gatsby stack, which lets people create blazing fast sites and apps with React and GraphQL, backed up by a continuous deployment and serverless platform complete with authentication and CMS. It has never been easier to get a great Lighthouse score, or to deploy complex, secure webapps for free.

Requirements:
Attendees should have git, Node.js and npm installed, and be proficient with JavaScript and React (including routing with @reach/router or react-router). 
Install the Gatsby CLI's ahead of time: npm install -g gatsby-cli
You do not need to know GraphQL, but you can get a head start by reading https://graphql.org/learn/ and going through the Fundamentals section of https://www.howtographql.com/.

Originally from Singapore, swyx is an Infinite Builder working on Developer Experience at Netlify. In his free time he helps people Learn in Public at Egghead.io and /r/reactjs.

Event Page: https://2019.jsconf.asia/

Produced by Engineers.SG

Help us caption & translate this video!

https://amara.org/v/pl3s/
Captions: 
	00:00:00,000 --> 00:00:05,220
the first like one to two hours and then

00:00:02,610 --> 00:00:06,779
things will will fall apart and I'm

00:00:05,220 --> 00:00:08,970
really relying on you as capable

00:00:06,779 --> 00:00:11,190
developers as people experiencing react

00:00:08,970 --> 00:00:14,490
to figure out stuff on your own ask

00:00:11,190 --> 00:00:16,379
questions as help each other and we're

00:00:14,490 --> 00:00:18,210
definitely all gonna finish much today

00:00:16,379 --> 00:00:20,070
I just want you to get your feet wet and

00:00:18,210 --> 00:00:21,750
understand what is possible so that you

00:00:20,070 --> 00:00:24,869
can go figure it out yourself this is

00:00:21,750 --> 00:00:28,500
all I can do in three hours so bill

00:00:24,869 --> 00:00:31,890
about myself I have done we have for two

00:00:28,500 --> 00:00:34,920
years Gatsby for one year briefly

00:00:31,890 --> 00:00:38,100
drawing a Gatsby a team working on some

00:00:34,920 --> 00:00:42,390
internal stuff and then got a better

00:00:38,100 --> 00:00:46,050
offer another Phi but but I think that

00:00:42,390 --> 00:00:48,239
Gatsby is a significant innovation in

00:00:46,050 --> 00:00:50,539
the react space I think it helps counter

00:00:48,239 --> 00:00:52,620
a lot of the problems with react and

00:00:50,539 --> 00:00:55,140
people y'all about JavaScript frameworks

00:00:52,620 --> 00:00:56,969
being heavy and being having issues with

00:00:55,140 --> 00:00:59,670
performance I think this really solves

00:00:56,969 --> 00:01:01,140
that just like next years as well but in

00:00:59,670 --> 00:01:02,670
a different way and we'll talk a little

00:01:01,140 --> 00:01:06,060
bit about why Java stack I think a lot

00:01:02,670 --> 00:01:08,640
of people are confused by this term I

00:01:06,060 --> 00:01:10,350
was confused even when I joined the

00:01:08,640 --> 00:01:12,299
elephant magnify is not the creator of

00:01:10,350 --> 00:01:14,400
Java stack but strongly promotes it

00:01:12,299 --> 00:01:15,990
because it's a CDN first hosting company

00:01:14,400 --> 00:01:17,220
but I'm here I'm not here to talk about

00:01:15,990 --> 00:01:18,960
alpha I'm just here to talk about the

00:01:17,220 --> 00:01:24,720
idea in general and whether what's the

00:01:18,960 --> 00:01:26,280
use cases it suits so okay so so

00:01:24,720 --> 00:01:31,950
hopefully everyone has downloaded this

00:01:26,280 --> 00:01:34,110
github repo we're about to get started

00:01:31,950 --> 00:01:38,009
the first thing I want you to do is to

00:01:34,110 --> 00:01:38,700
immediately go to the github repo where

00:01:38,009 --> 00:01:41,579
is it

00:01:38,700 --> 00:01:46,200
okay so we have notes in a sample site

00:01:41,579 --> 00:01:48,149
in the github repo and inside the the

00:01:46,200 --> 00:01:49,470
notes this will take a while so I just

00:01:48,149 --> 00:01:52,020
want you to get started with it first

00:01:49,470 --> 00:01:54,149
there's a welcome page it just lists

00:01:52,020 --> 00:01:56,159
some the the the lesson plan for today

00:01:54,149 --> 00:01:58,259
as well as some basics that you probably

00:01:56,159 --> 00:02:01,899
already have

00:01:58,259 --> 00:02:05,649
and then if you go to the first one the

00:02:01,899 --> 00:02:07,630
jam into the Jeff stack so I'm gonna ask

00:02:05,649 --> 00:02:10,060
you to kick off a build while we talk so

00:02:07,630 --> 00:02:11,980
that you can see the whole process start

00:02:10,060 --> 00:02:14,860
to finish so I'm gonna just click to

00:02:11,980 --> 00:02:17,110
deploy my dimension starter it's going

00:02:14,860 --> 00:02:18,730
to link to the amplify console

00:02:17,110 --> 00:02:21,459
that's the desta tool that were using

00:02:18,730 --> 00:02:23,890
for today hopefully everyone has an AWS

00:02:21,459 --> 00:02:25,870
account if not this is where you start

00:02:23,890 --> 00:02:28,540
signing in and all that it may require a

00:02:25,870 --> 00:02:33,340
credit card I'm not sure but I mean

00:02:28,540 --> 00:02:35,170
virtually everyone is this AWS and if

00:02:33,340 --> 00:02:37,769
not you can use magnifier now if I does

00:02:35,170 --> 00:02:43,720
not create record a credit card but I'm

00:02:37,769 --> 00:02:45,760
I'm basing on AWS today so if you if you

00:02:43,720 --> 00:02:47,530
log in you get to this flow it's

00:02:45,760 --> 00:02:49,810
basically just gonna deploy that that

00:02:47,530 --> 00:02:52,060
site that we chose and we're just gonna

00:02:49,810 --> 00:02:54,489
click connect to github I'm already

00:02:52,060 --> 00:02:56,609
connected you may need to login on your

00:02:54,489 --> 00:02:56,609
own

00:02:58,060 --> 00:03:02,200
it says github authorization was

00:02:59,590 --> 00:03:03,400
successful for me again if you're not

00:03:02,200 --> 00:03:04,420
logged in if you're doing this for the

00:03:03,400 --> 00:03:06,430
first time you may need to do some

00:03:04,420 --> 00:03:09,579
authorization I'm gonna go with the

00:03:06,430 --> 00:03:12,880
default name I don't think I have this

00:03:09,579 --> 00:03:14,650
default name already and yep and it's

00:03:12,880 --> 00:03:17,829
creating my app ok so so I want you to

00:03:14,650 --> 00:03:19,989
do that this is the dimension starter

00:03:17,829 --> 00:03:21,730
we're also gonna clone overreacted I oh

00:03:19,989 --> 00:03:23,290
if everyone knows that's Danny Abramoff

00:03:21,730 --> 00:03:24,910
blog from the react core team

00:03:23,290 --> 00:03:30,250
I've also gonna clone that let's just do

00:03:24,910 --> 00:03:33,489
it so I open that link in in the intro

00:03:30,250 --> 00:03:36,010
to jam stack notes is anyone lost rich

00:03:33,489 --> 00:03:40,230
again okay with loss okay

00:03:36,010 --> 00:03:40,230
what's where where did I lose you

00:03:40,610 --> 00:03:47,410
sorry yeah it you you click this you

00:03:45,380 --> 00:03:49,880
click this link and it opens to a new

00:03:47,410 --> 00:03:52,760
opens a new window and you just follow

00:03:49,880 --> 00:03:55,580
the instructions all the way through the

00:03:52,760 --> 00:04:01,600
link is in Jam stack Jeff's like jump

00:03:55,580 --> 00:04:04,460
start notes 0 1 intro to Jam stack yes

00:04:01,600 --> 00:04:05,840
if you don't you can you can choose to

00:04:04,460 --> 00:04:07,430
sign up for one or you can try to use

00:04:05,840 --> 00:04:10,190
the lfi as well but I won't be teaching

00:04:07,430 --> 00:04:16,130
that today I can I can cover that later

00:04:10,190 --> 00:04:17,060
on I realized again I realized I should

00:04:16,130 --> 00:04:18,880
have put that in the instruction it's

00:04:17,060 --> 00:04:21,380
like people should sign up for AWS first

00:04:18,880 --> 00:04:23,630
umm so apologies for that I didn't

00:04:21,380 --> 00:04:26,050
really them really I I think I just

00:04:23,630 --> 00:04:28,430
assumed that people who would have it

00:04:26,050 --> 00:04:30,770
okay and if you're if you're lost I try

00:04:28,430 --> 00:04:32,030
to ask someone next to you okay so so

00:04:30,770 --> 00:04:33,350
I'm just gonna deploy those two sites

00:04:32,030 --> 00:04:35,510
there's other sites that you can deploy

00:04:33,350 --> 00:04:37,160
as well but I just want to give you the

00:04:35,510 --> 00:04:40,880
sense of that's all the work that takes

00:04:37,160 --> 00:04:43,250
to start deployment in a gem step world

00:04:40,880 --> 00:04:44,900
it really is you're taking that source

00:04:43,250 --> 00:04:46,970
code you're copying you cloning it over

00:04:44,900 --> 00:04:50,060
and you're pushing into the servers and

00:04:46,970 --> 00:04:51,410
it's very it's very light oh the one the

00:04:50,060 --> 00:04:54,230
one with overreacted I oh you got to

00:04:51,410 --> 00:04:58,550
change the name of it because they don't

00:04:54,230 --> 00:05:01,070
allow dots in the name so I'm gonna

00:04:58,550 --> 00:05:02,540
clone this again this is this is the

00:05:01,070 --> 00:05:04,760
over reactor that I'll clone if you look

00:05:02,540 --> 00:05:06,590
at the URL it's too small for you to see

00:05:04,760 --> 00:05:09,919
but it's just a github thing that's

00:05:06,590 --> 00:05:12,169
that's all the link does so I click

00:05:09,919 --> 00:05:13,970
connect to github and instead of that

00:05:12,169 --> 00:05:17,020
name I'm gonna change that name to

00:05:13,970 --> 00:05:19,850
something else that has no dots in it

00:05:17,020 --> 00:05:23,150
things are very slow suddenly is it all

00:05:19,850 --> 00:05:26,390
of you guys downloading okay

00:05:23,150 --> 00:05:28,010
overreacted I ljs cough whatever just no

00:05:26,390 --> 00:05:30,830
dots in the name

00:05:28,010 --> 00:05:33,500
I already complained to AWS about the

00:05:30,830 --> 00:05:36,440
validation they should validate properly

00:05:33,500 --> 00:05:37,760
okay so I join you to get started that

00:05:36,440 --> 00:05:41,060
that thing will be building and kicking

00:05:37,760 --> 00:05:42,470
off and we'll talk about that later but

00:05:41,060 --> 00:05:45,140
now I just need to give you this intro

00:05:42,470 --> 00:05:46,370
to gem stack all of you already saw this

00:05:45,140 --> 00:05:48,200
don't worry about it

00:05:46,370 --> 00:05:52,580
what is Gemstar Jeff stack stands for

00:05:48,200 --> 00:05:54,169
JavaScript API is a markup and that's

00:05:52,580 --> 00:05:56,629
that's a very silly name right like

00:05:54,169 --> 00:05:58,849
every app uses JavaScript API is and

00:05:56,629 --> 00:06:01,849
markup in some way why is this such a

00:05:58,849 --> 00:06:03,259
big deal and so I want to give you the

00:06:01,849 --> 00:06:05,779
context from from where we're coming

00:06:03,259 --> 00:06:08,569
from and and may try to make sense of

00:06:05,779 --> 00:06:10,219
what what this all is so in the

00:06:08,569 --> 00:06:12,409
beginning like the very first web site

00:06:10,219 --> 00:06:16,039
was a gem stack site right this is this

00:06:12,409 --> 00:06:18,169
is from I think CERN and it was just

00:06:16,039 --> 00:06:21,590
vanilla HTML and and just some links and

00:06:18,169 --> 00:06:23,270
you could link you can link around and

00:06:21,590 --> 00:06:25,599
then we need it more and then I'm just

00:06:23,270 --> 00:06:28,370
gonna have more memes because I like

00:06:25,599 --> 00:06:30,349
like some presentation stuff and then we

00:06:28,370 --> 00:06:33,229
need it more and we started serving

00:06:30,349 --> 00:06:36,169
things from an origin server and then we

00:06:33,229 --> 00:06:37,849
wanted more dynamic capability so we

00:06:36,169 --> 00:06:40,339
wanted to have a program running behind

00:06:37,849 --> 00:06:41,930
it to dynamically generate some some

00:06:40,339 --> 00:06:44,240
sites so for example I can have a

00:06:41,930 --> 00:06:46,550
counter and it shows the current time as

00:06:44,240 --> 00:06:49,099
of the time that you visit it should I

00:06:46,550 --> 00:06:53,479
be sitting down feel like you can

00:06:49,099 --> 00:06:54,770
actually see it so so then we all need

00:06:53,479 --> 00:06:57,050
some persistence so we started adding

00:06:54,770 --> 00:06:58,339
databases behind us the server so and

00:06:57,050 --> 00:07:01,219
that's how you get Wikipedia for example

00:06:58,339 --> 00:07:04,279
right but then there's a problem with

00:07:01,219 --> 00:07:07,219
this and so the open source stack to all

00:07:04,279 --> 00:07:11,110
this it basically became lamp that was a

00:07:07,219 --> 00:07:11,110
dominant paradigm from 1990 to 2000

00:07:12,789 --> 00:07:16,699
towards the late parts of 2000 so we

00:07:15,050 --> 00:07:18,889
started with one more dynamic stuff on

00:07:16,699 --> 00:07:20,360
the client-side the front end right so

00:07:18,889 --> 00:07:22,189
we started to innovate on the JavaScript

00:07:20,360 --> 00:07:23,810
angle notice there was no JavaScript in

00:07:22,189 --> 00:07:24,770
any of this right and now there's a

00:07:23,810 --> 00:07:26,960
little bit of JavaScript in a

00:07:24,770 --> 00:07:31,120
client-side right we started using

00:07:26,960 --> 00:07:33,409
mootools jQuery UI UI whatever and and

00:07:31,120 --> 00:07:35,770
eventually like we started to run into

00:07:33,409 --> 00:07:38,629
problems on it with this stack because

00:07:35,770 --> 00:07:40,399
we start to have scaling issues and so

00:07:38,629 --> 00:07:42,229
we have to throw in some caching right

00:07:40,399 --> 00:07:43,849
at intermediate layers we have different

00:07:42,229 --> 00:07:47,960
names for all these caches like radius

00:07:43,849 --> 00:07:49,399
or whatever but and then we had

00:07:47,960 --> 00:07:51,229
introduced this idea of a CDN we put a

00:07:49,399 --> 00:07:52,610
CDN in front of our origin layer a lot

00:07:51,229 --> 00:07:54,229
of you have done this in your own setup

00:07:52,610 --> 00:07:56,029
and a lot of you just have been worried

00:07:54,229 --> 00:07:57,979
about it but these are the kinds of

00:07:56,029 --> 00:08:00,379
things that are to be introduced at

00:07:57,979 --> 00:08:01,789
scale and you start having all these

00:08:00,379 --> 00:08:05,269
problems with monitoring versioning

00:08:01,789 --> 00:08:07,729
replication fingerprinting and and even

00:08:05,269 --> 00:08:10,099
more like security stuff basically

00:08:07,729 --> 00:08:12,710
when you wanna raise money from VCU you

00:08:10,099 --> 00:08:14,569
make a deck like this and you put the

00:08:12,710 --> 00:08:17,089
text like slightly askew and you say

00:08:14,569 --> 00:08:18,979
pain points and this is the other pain

00:08:17,089 --> 00:08:20,930
points every song so so basically what

00:08:18,979 --> 00:08:24,800
is the pain points you know what's the

00:08:20,930 --> 00:08:26,689
origin of all this like this is modern

00:08:24,800 --> 00:08:28,520
infrastructure that we build up piece by

00:08:26,689 --> 00:08:31,490
piece never really plan for it to all

00:08:28,520 --> 00:08:34,039
stick together and what is the source of

00:08:31,490 --> 00:08:35,990
it it's really basically the running

00:08:34,039 --> 00:08:38,529
server like we have to scale it we have

00:08:35,990 --> 00:08:41,539
to manage it it'd be ideal if we don't

00:08:38,529 --> 00:08:43,789
so it really was down to security

00:08:41,539 --> 00:08:47,779
reliability and complexity which which

00:08:43,789 --> 00:08:49,910
is correlated with cost I have a I have

00:08:47,779 --> 00:08:53,810
a I have a link actually from this

00:08:49,910 --> 00:08:55,430
everyone know who West bosses West boss

00:08:53,810 --> 00:08:56,630
is one of the best jazz developers in

00:08:55,430 --> 00:09:00,139
the world

00:08:56,630 --> 00:09:03,070
he runs a store and when people order

00:09:00,139 --> 00:09:07,519
his stickers he could see server crashes

00:09:03,070 --> 00:09:10,699
and service lowness you folks totally

00:09:07,519 --> 00:09:12,980
crashed my server someone was trying to

00:09:10,699 --> 00:09:16,069
subscribe to his course the server crash

00:09:12,980 --> 00:09:19,279
so he lost the log in making your own

00:09:16,069 --> 00:09:22,069
server is hard he's on his own site for

00:09:19,279 --> 00:09:25,819
fours just because he just set it up

00:09:22,069 --> 00:09:27,440
wrong like experts get it wrong how can

00:09:25,819 --> 00:09:30,519
we make it easier right so that's the

00:09:27,440 --> 00:09:32,420
that's the context that we start from

00:09:30,519 --> 00:09:34,100
the other thing that started happening

00:09:32,420 --> 00:09:34,550
is JavaScript started eating the world

00:09:34,100 --> 00:09:36,620
right

00:09:34,550 --> 00:09:38,300
we went from John's : on front-end we

00:09:36,620 --> 00:09:41,389
had we had all these like it was a toy

00:09:38,300 --> 00:09:42,709
language from yes one yes to yes three

00:09:41,389 --> 00:09:47,089
and then there was 10 years that we did

00:09:42,709 --> 00:09:48,980
nothing there so fun story and then now

00:09:47,089 --> 00:09:50,300
it's my way of a yearly cadence and tc39

00:09:48,980 --> 00:09:54,050
is actually a pretty serious

00:09:50,300 --> 00:09:55,220
organization will smith again okay so so

00:09:54,050 --> 00:09:57,769
then we started breaking trying to break

00:09:55,220 --> 00:09:59,480
apart so we had frameworks come out of

00:09:57,769 --> 00:10:02,540
it we had went from jQuery to like

00:09:59,480 --> 00:10:04,339
backbone knockout angular and and then

00:10:02,540 --> 00:10:05,389
we also started eating the the we looked

00:10:04,339 --> 00:10:07,940
at the backend we said why you know

00:10:05,389 --> 00:10:09,610
JavaScript so obviously we started

00:10:07,940 --> 00:10:12,529
turning out JavaScript on the back end

00:10:09,610 --> 00:10:15,139
popularized by MongoDB with

00:10:12,529 --> 00:10:16,519
Express angular and node and so now we

00:10:15,139 --> 00:10:19,699
have this full JavaScript landscape by

00:10:16,519 --> 00:10:21,319
full stack GS which is like that's kind

00:10:19,699 --> 00:10:21,529
of what I like to talk about editor GS

00:10:21,319 --> 00:10:24,259
car

00:10:21,529 --> 00:10:26,810
like JavaScript slowly if anything can

00:10:24,259 --> 00:10:28,730
be rewritten in JavaScript it will be

00:10:26,810 --> 00:10:32,689
let's call Edwards law he's one of the

00:10:28,730 --> 00:10:33,980
cofounders of Stack Overflow so this

00:10:32,689 --> 00:10:35,870
this always fine but we're just

00:10:33,980 --> 00:10:38,149
reinventing little parts of like the

00:10:35,870 --> 00:10:41,509
lamp stack just like replacing parts of

00:10:38,149 --> 00:10:43,819
it with Jas and that's why we have the

00:10:41,509 --> 00:10:45,519
myth of the the full stack developer

00:10:43,819 --> 00:10:49,699
like having to know everything from

00:10:45,519 --> 00:10:50,809
Postgres all the way to CSS so the

00:10:49,699 --> 00:10:53,209
problems with but the problems with this

00:10:50,809 --> 00:10:55,790
like we've only replace the lamp stack

00:10:53,209 --> 00:10:58,490
with like Jas versions of the lamp stack

00:10:55,790 --> 00:10:59,839
we haven't really done anything we still

00:10:58,490 --> 00:11:02,540
have this we have different logos but we

00:10:59,839 --> 00:11:04,970
have the same still caching and security

00:11:02,540 --> 00:11:07,339
issues so and and the big one is

00:11:04,970 --> 00:11:11,029
performance the the bigger and bigger

00:11:07,339 --> 00:11:12,559
Jas bundles on the front end get the the

00:11:11,029 --> 00:11:14,569
more the more load it has especially for

00:11:12,559 --> 00:11:16,819
mobile users I'm sure everyone here

00:11:14,569 --> 00:11:17,839
knows about that the the performance

00:11:16,819 --> 00:11:20,089
studies all the scared

00:11:17,839 --> 00:11:21,259
scary numbers but my favorite is the 4%

00:11:20,089 --> 00:11:23,839
of mobile users to throw their phones

00:11:21,259 --> 00:11:27,920
while waiting and being super super

00:11:23,839 --> 00:11:29,779
frustrated yeah I value but I have a

00:11:27,920 --> 00:11:32,059
very thick case on my phone so it's very

00:11:29,779 --> 00:11:35,870
dropped proof but yeah I can probably

00:11:32,059 --> 00:11:37,339
show it if I want to the according to

00:11:35,870 --> 00:11:40,309
Alex Russell wanted on the google chrome

00:11:37,339 --> 00:11:42,170
dev rails the ideal budget for your for

00:11:40,309 --> 00:11:43,759
your first load should be a hundred and

00:11:42,170 --> 00:11:45,589
thirty two hundred seventy GB of

00:11:43,759 --> 00:11:47,779
critical critical path resources let's

00:11:45,589 --> 00:11:51,110
just call it all JavaScript react alone

00:11:47,779 --> 00:11:53,240
is 30 40 KB and you throw in a whole

00:11:51,110 --> 00:11:58,750
bunch of dependencies that you typically

00:11:53,240 --> 00:12:01,790
put in you typically busting 200 before

00:11:58,750 --> 00:12:03,529
because it they care about parsing time

00:12:01,790 --> 00:12:06,050
as well that's the time that interactive

00:12:03,529 --> 00:12:09,410
it all comes in there will have a house

00:12:06,050 --> 00:12:11,329
on charts as well so so this is

00:12:09,410 --> 00:12:13,550
literally doing the math if if like on a

00:12:11,329 --> 00:12:15,679
3G network you want to have a five

00:12:13,550 --> 00:12:18,259
second load you work you work backwards

00:12:15,679 --> 00:12:20,240
on the under transfer rates these set a

00:12:18,259 --> 00:12:22,939
budget of 130 to 170 I recommend his

00:12:20,240 --> 00:12:24,259
blog post is a pretty good read on where

00:12:22,939 --> 00:12:30,110
you need to be in terms of performance

00:12:24,259 --> 00:12:34,069
budgets conversely this is a log of

00:12:30,110 --> 00:12:35,270
general JavaScript bundles overall we we

00:12:34,069 --> 00:12:39,470
passed that

00:12:35,270 --> 00:12:42,860
370 KB mark in 2011 we're currently now

00:12:39,470 --> 00:12:45,560
at 400 KB for the median desktop and

00:12:42,860 --> 00:12:47,870
mobile bundle and that's that's those

00:12:45,560 --> 00:12:49,910
those are the sort of like the fat

00:12:47,870 --> 00:12:51,920
JavaScript bundle like when react

00:12:49,910 --> 00:12:53,180
scripts what reactions does is just it

00:12:51,920 --> 00:12:54,800
generates a Fat Joe scale bundle for you

00:12:53,180 --> 00:12:58,090
right that's a little bit code splitting

00:12:54,800 --> 00:13:00,500
but that's it so it would be nice to

00:12:58,090 --> 00:13:03,700
improve the performance and the time

00:13:00,500 --> 00:13:05,780
very interactive up there and so and so

00:13:03,700 --> 00:13:07,700
this is this is kind of the the

00:13:05,780 --> 00:13:09,290
performance issues that that we we start

00:13:07,700 --> 00:13:11,840
dealing with like we have the initial

00:13:09,290 --> 00:13:13,370
request this is the original nice-nice

00:13:11,840 --> 00:13:15,200
request and then we have all this like

00:13:13,370 --> 00:13:16,610
fat JavaScript and that really blocks

00:13:15,200 --> 00:13:19,310
that the more requests you have they

00:13:16,610 --> 00:13:21,590
really blocks the time to be able to

00:13:19,310 --> 00:13:23,450
render this so if we if we could just

00:13:21,590 --> 00:13:26,900
render everything that we have with the

00:13:23,450 --> 00:13:29,570
original HTML request and slowly load

00:13:26,900 --> 00:13:32,750
the JavaScript we'd be able to rapidly

00:13:29,570 --> 00:13:35,210
increase the time interactive by default

00:13:32,750 --> 00:13:37,520
create react that gives you empty div

00:13:35,210 --> 00:13:39,560
it's just a blank white page that's not

00:13:37,520 --> 00:13:40,610
very good for SEO and not very good for

00:13:39,560 --> 00:13:42,290
performance as well because everything

00:13:40,610 --> 00:13:45,140
is just stuffed in your JavaScript all

00:13:42,290 --> 00:13:46,040
everything that you write so that's

00:13:45,140 --> 00:13:48,020
that's the client-side rendering

00:13:46,040 --> 00:13:50,960
paradigm this is kind of the chart where

00:13:48,020 --> 00:13:52,820
you have your get you you send you get

00:13:50,960 --> 00:13:54,380
request you get the bundle back and

00:13:52,820 --> 00:13:55,430
you're rendering this is all blocking

00:13:54,380 --> 00:13:59,420
and therefore your tender and

00:13:55,430 --> 00:14:01,520
interactive is very far out FCP is first

00:13:59,420 --> 00:14:02,810
content for pain so as opposed to

00:14:01,520 --> 00:14:06,410
server-side rendering why a lot of

00:14:02,810 --> 00:14:07,880
people move to next j/s it's because you

00:14:06,410 --> 00:14:09,140
just have the get request they render on

00:14:07,880 --> 00:14:12,170
a server and then they send you the

00:14:09,140 --> 00:14:14,270
server-side rendered HTML and therefore

00:14:12,170 --> 00:14:17,560
there's no client-side rendering to be

00:14:14,270 --> 00:14:22,250
executed before your site is interactive

00:14:17,560 --> 00:14:24,320
so so the mean stack actually were sent

00:14:22,250 --> 00:14:25,880
from the lamp stack in terms of it has

00:14:24,320 --> 00:14:28,040
the same issues as security reliability

00:14:25,880 --> 00:14:30,770
complexity and cost and then it added a

00:14:28,040 --> 00:14:33,110
performance thing on the front end not

00:14:30,770 --> 00:14:35,240
great not great it's very good news for

00:14:33,110 --> 00:14:37,700
JavaScript engineers because then we're

00:14:35,240 --> 00:14:38,270
just like employed everywhere which is

00:14:37,700 --> 00:14:40,160
really nice

00:14:38,270 --> 00:14:41,600
so there's a spectrum but I think those

00:14:40,160 --> 00:14:43,790
are not the only two choices and that's

00:14:41,600 --> 00:14:45,560
what we are all here to learn there's

00:14:43,790 --> 00:14:47,030
the full client-side rendering on the on

00:14:45,560 --> 00:14:48,310
one end and then there's full server

00:14:47,030 --> 00:14:50,470
side rendering on the other end

00:14:48,310 --> 00:14:53,079
there's a space in the middle to do

00:14:50,470 --> 00:14:55,110
other stuff so we'll talk about that

00:14:53,079 --> 00:14:57,730
that try this from Google by the way

00:14:55,110 --> 00:14:59,560
meanwhile all this is going on I've just

00:14:57,730 --> 00:15:00,370
told the story of the past 20-something

00:14:59,560 --> 00:15:01,689
years

00:15:00,370 --> 00:15:03,129
meanwhile all this is going on other

00:15:01,689 --> 00:15:06,309
stuff is happening in development

00:15:03,129 --> 00:15:08,410
ecosystem as well the API economy Rose

00:15:06,309 --> 00:15:10,089
as well so these are all companies that

00:15:08,410 --> 00:15:13,509
don't have direct customers they're

00:15:10,089 --> 00:15:15,730
their customers are you guys and they're

00:15:13,509 --> 00:15:17,860
massively successful and they just exist

00:15:15,730 --> 00:15:19,329
to make parts of your life easier that

00:15:17,860 --> 00:15:22,089
you don't you shouldn't be writing your

00:15:19,329 --> 00:15:23,259
own stripe in a gray I mean you

00:15:22,089 --> 00:15:26,290
shouldn't be already own payments

00:15:23,259 --> 00:15:27,790
channel right you should not be my

00:15:26,290 --> 00:15:29,439
favorite is plaid a lot of people don't

00:15:27,790 --> 00:15:31,509
know here don't know Claire but plaid

00:15:29,439 --> 00:15:33,790
basically integrates with all banks in

00:15:31,509 --> 00:15:36,069
the US I don't know if they're in Europe

00:15:33,790 --> 00:15:39,399
as well but basically if you want to

00:15:36,069 --> 00:15:41,110
deduct money to like start a startup

00:15:39,399 --> 00:15:43,269
like a Robin Hood you just integrate

00:15:41,110 --> 00:15:45,670
your plan and immediately your customers

00:15:43,269 --> 00:15:48,309
can just send you money from their bank

00:15:45,670 --> 00:15:50,499
accounts it's amazing this is stuff that

00:15:48,309 --> 00:15:52,149
you don't want to build yourself so all

00:15:50,499 --> 00:15:54,730
these ApS are just available for you to

00:15:52,149 --> 00:15:57,129
interact with so then it's like okay

00:15:54,730 --> 00:16:00,189
that the jobs of a back-end developer of

00:15:57,129 --> 00:16:02,199
a developer is increasingly decreased

00:16:00,189 --> 00:16:04,240
like the undifferentiated stuff you

00:16:02,199 --> 00:16:05,709
don't have to do the stuff that really

00:16:04,240 --> 00:16:07,420
makes your company stand out your

00:16:05,709 --> 00:16:08,860
projects and out that's the stuff you

00:16:07,420 --> 00:16:11,649
should be focusing on and just pay these

00:16:08,860 --> 00:16:14,139
guys to do the rest because they're just

00:16:11,649 --> 00:16:19,089
specialists at it the other trend

00:16:14,139 --> 00:16:21,009
serverless launched in 2014 by AWS

00:16:19,089 --> 00:16:23,649
lambda but there is also a Google App

00:16:21,009 --> 00:16:25,959
Engine before that and quickly cloned by

00:16:23,649 --> 00:16:27,220
the other two big giants Google and

00:16:25,959 --> 00:16:31,750
Amazon and Microsoft

00:16:27,220 --> 00:16:35,199
so that's GCP and that's as your other

00:16:31,750 --> 00:16:36,610
way around everyone started using get 10

00:16:35,199 --> 00:16:41,050
years ago people get wasn't a normal

00:16:36,610 --> 00:16:43,750
thing so so we wanted to take advantage

00:16:41,050 --> 00:16:45,519
of all of this to like try to try to see

00:16:43,750 --> 00:16:47,470
like what all these trends are everybody

00:16:45,519 --> 00:16:50,319
started using build tools we went from

00:16:47,470 --> 00:16:51,939
an age of just including scripts in to

00:16:50,319 --> 00:16:53,860
actually putting these things in our

00:16:51,939 --> 00:16:57,550
build processes and and it's part of our

00:16:53,860 --> 00:17:00,179
CI NCD process anyone know let's play

00:16:57,550 --> 00:17:02,080
obviously this is our favorite over here

00:17:00,179 --> 00:17:05,260
what's what's this on

00:17:02,080 --> 00:17:09,100
right rolled up okay

00:17:05,260 --> 00:17:12,430
what's this you know yes lens very nice

00:17:09,100 --> 00:17:14,800
this one it's the challenging one so

00:17:12,430 --> 00:17:16,900
this is Google closure compiler it's the

00:17:14,800 --> 00:17:18,550
one that face react actually uses to

00:17:16,900 --> 00:17:24,070
compile some source code to to actually

00:17:18,550 --> 00:17:26,320
deliverable so so then we then nullify

00:17:24,070 --> 00:17:27,970
we started looking at all these static

00:17:26,320 --> 00:17:30,250
site generators as well it's a rising

00:17:27,970 --> 00:17:31,840
trend of basically build tools coupled

00:17:30,250 --> 00:17:34,450
with getting workflow coupled with all

00:17:31,840 --> 00:17:35,920
these other stuff and and we realized

00:17:34,450 --> 00:17:37,330
something that was very non consensus at

00:17:35,920 --> 00:17:39,040
the time which is static site generators

00:17:37,330 --> 00:17:40,810
at a next big thing like it's rising and

00:17:39,040 --> 00:17:42,580
people are actually using it for to do

00:17:40,810 --> 00:17:44,230
some pretty interesting stuff especially

00:17:42,580 --> 00:17:46,120
with the new generation of static site

00:17:44,230 --> 00:17:47,710
generators like like Gatsby

00:17:46,120 --> 00:17:49,330
you're not just generating static HTML

00:17:47,710 --> 00:17:51,730
like Jekyll

00:17:49,330 --> 00:17:53,290
Hugo those are the first generation just

00:17:51,730 --> 00:17:55,930
generating static HTML that's it you're

00:17:53,290 --> 00:17:57,760
done with Gatsby you're you're

00:17:55,930 --> 00:17:59,320
generating HTML sending it and then

00:17:57,760 --> 00:18:00,970
you're also generating a journey in j/s

00:17:59,320 --> 00:18:05,380
bundle and rehydrating it so it becomes

00:18:00,970 --> 00:18:07,120
a becomes an app we use static gender

00:18:05,380 --> 00:18:10,180
comm to track all these static

00:18:07,120 --> 00:18:11,800
generators and it takes advantage of

00:18:10,180 --> 00:18:13,150
this this new generation I just I just

00:18:11,800 --> 00:18:15,970
jumped ahead of myself I'm sorry over

00:18:13,150 --> 00:18:19,360
there a lot of people don't know what

00:18:15,970 --> 00:18:21,160
rehydration is rehydration is so this

00:18:19,360 --> 00:18:24,040
process of like we switch around the

00:18:21,160 --> 00:18:25,780
client side app thing so we have the

00:18:24,040 --> 00:18:27,550
initial request and we when we send the

00:18:25,780 --> 00:18:30,280
HTML it already looks like that like

00:18:27,550 --> 00:18:32,230
there's a shell of like everything

00:18:30,280 --> 00:18:33,670
that's pre-rendered like it's the the

00:18:32,230 --> 00:18:36,490
perceived performance the perceived

00:18:33,670 --> 00:18:39,010
loading is superfast view painted it can

00:18:36,490 --> 00:18:40,840
be Oh actually yeah so this is still

00:18:39,010 --> 00:18:43,060
HTML view preview painting and then

00:18:40,840 --> 00:18:45,340
javascript by the time the javascript

00:18:43,060 --> 00:18:47,380
bundle arrives it can actually become a

00:18:45,340 --> 00:18:49,210
dynamically loaded app this ER there's

00:18:47,380 --> 00:18:51,610
an uncanny valley here where javascript

00:18:49,210 --> 00:18:54,070
is taking over and rehydrating all the

00:18:51,610 --> 00:18:55,600
elements on the HTML and that's a

00:18:54,070 --> 00:18:59,080
problem that google is actively working

00:18:55,600 --> 00:19:00,460
with the two main with gatsby and next

00:18:59,080 --> 00:19:02,620
year's to solve this which is the

00:19:00,460 --> 00:19:05,140
uncanny valley most of us don't care

00:19:02,620 --> 00:19:06,130
about this detail performance because

00:19:05,140 --> 00:19:11,440
it's on the order of hundreds of

00:19:06,130 --> 00:19:13,360
microseconds milliseconds so anyway just

00:19:11,440 --> 00:19:14,920
to tie it all up all these trends get

00:19:13,360 --> 00:19:16,180
workflow build tools server let's API

00:19:14,920 --> 00:19:19,330
economy static sites

00:19:16,180 --> 00:19:21,820
that is the gem sack that is that is

00:19:19,330 --> 00:19:26,530
that's that's what enables the Jeff Zack

00:19:21,820 --> 00:19:28,660
now versus twenty years ago so the focus

00:19:26,530 --> 00:19:30,610
is really on user experience like we

00:19:28,660 --> 00:19:34,570
just want to send Markham and JavaScript

00:19:30,610 --> 00:19:36,700
to your user you ping api's if you need

00:19:34,570 --> 00:19:38,560
to to generate that markup and but then

00:19:36,700 --> 00:19:41,620
once the bundle wants the app is on the

00:19:38,560 --> 00:19:43,600
user side you just interact with api's

00:19:41,620 --> 00:19:45,750
on your own with javascript there's no

00:19:43,600 --> 00:19:48,460
there's no running server to interactive

00:19:45,750 --> 00:19:50,050
the the best parallel like I can I can

00:19:48,460 --> 00:19:52,540
say about this is basically mobile

00:19:50,050 --> 00:19:54,190
phones like mobile apps like mobile apps

00:19:52,540 --> 00:19:55,570
are all static assets but there no one

00:19:54,190 --> 00:19:59,010
accuses them of being static they're all

00:19:55,570 --> 00:20:01,900
dynamic is it then I make you see one

00:19:59,010 --> 00:20:03,930
will sniff again and then and that kind

00:20:01,900 --> 00:20:06,220
of follows the purple pattern like

00:20:03,930 --> 00:20:08,140
push-pull I actually don't don't really

00:20:06,220 --> 00:20:10,690
know that what the PRP L stands for but

00:20:08,140 --> 00:20:13,330
these are all like best practices as a

00:20:10,690 --> 00:20:14,710
court according to Google I honestly

00:20:13,330 --> 00:20:17,260
don't care enough I just I'm just like

00:20:14,710 --> 00:20:18,220
you just like you're not going to code

00:20:17,260 --> 00:20:19,450
you're gonna call all this by yourself

00:20:18,220 --> 00:20:21,190
you just want to use a framework that

00:20:19,450 --> 00:20:23,410
does it for you and that's what Gaspee

00:20:21,190 --> 00:20:26,380
does best way but by the way that's

00:20:23,410 --> 00:20:31,860
that's why their theme their color theme

00:20:26,380 --> 00:20:35,980
is purple so in a comparison of all the

00:20:31,860 --> 00:20:37,540
rendering rendering paradigms static

00:20:35,980 --> 00:20:38,590
site static rendering is the easiest

00:20:37,540 --> 00:20:41,200
because you do all the work upfront

00:20:38,590 --> 00:20:42,670
ahead of time and when you when the

00:20:41,200 --> 00:20:44,860
request comes in you just send HTML

00:20:42,670 --> 00:20:46,390
where server-side rendering is a little

00:20:44,860 --> 00:20:48,460
bit slower because you do the work on

00:20:46,390 --> 00:20:50,710
request when you when you send a request

00:20:48,460 --> 00:20:52,060
work is done and then and then then

00:20:50,710 --> 00:20:54,430
render comes to you and obviously

00:20:52,060 --> 00:20:56,080
client-side rendering so slowest so

00:20:54,430 --> 00:20:59,320
that's the that's the full spectrum I

00:20:56,080 --> 00:21:01,390
honestly I recommend this so I this blog

00:20:59,320 --> 00:21:01,840
post by addy Osmani again rendering on

00:21:01,390 --> 00:21:04,720
the web

00:21:01,840 --> 00:21:06,370
he goes into a lot more detail about how

00:21:04,720 --> 00:21:08,170
you can achieve I can pick the right

00:21:06,370 --> 00:21:12,850
level of dynamism for your project and

00:21:08,170 --> 00:21:14,290
your performance needs and I liked I

00:21:12,850 --> 00:21:15,490
liked I liked talking about what is Jen

00:21:14,290 --> 00:21:17,470
saying what is not just X so you can

00:21:15,490 --> 00:21:20,140
understand these are Jeff static static

00:21:17,470 --> 00:21:23,200
hosts so natla files on there as well

00:21:20,140 --> 00:21:25,630
and an amplified console so s3 bucket

00:21:23,200 --> 00:21:29,070
github pages these are what is not gem

00:21:25,630 --> 00:21:29,070
stack is like WordPress Drupal

00:21:29,080 --> 00:21:35,139
and it's like running server or

00:21:30,820 --> 00:21:36,159
server-side oriented things yeah I could

00:21:35,139 --> 00:21:38,440
probably do this lite better

00:21:36,159 --> 00:21:40,090
I should put in on Jeff side the

00:21:38,440 --> 00:21:42,190
original Jeff's like site this is still

00:21:40,090 --> 00:21:44,169
up I have this romantic idea of the

00:21:42,190 --> 00:21:45,369
unbreakable web like the the website way

00:21:44,169 --> 00:21:47,139
you don't have to keep a running server

00:21:45,369 --> 00:21:50,049
around this is the original Space Jam

00:21:47,139 --> 00:21:51,850
website and it's still around it's been

00:21:50,049 --> 00:21:54,039
around 20 years he'll be around for many

00:21:51,850 --> 00:21:57,100
more because it's just static assets and

00:21:54,039 --> 00:22:00,220
we can keep that forever and so so

00:21:57,100 --> 00:22:01,659
that's that's the rough intro I think I

00:22:00,220 --> 00:22:04,539
think I think I don't have that much

00:22:01,659 --> 00:22:06,159
time to skip ahead there's a there's a

00:22:04,539 --> 00:22:08,499
trend also of headless EMS those of you

00:22:06,159 --> 00:22:11,590
who work for agencies will be very

00:22:08,499 --> 00:22:15,039
familiar with the so this the rough set

00:22:11,590 --> 00:22:16,840
up which is when we're building we use

00:22:15,039 --> 00:22:18,309
we use get to commit to push to the

00:22:16,840 --> 00:22:21,369
tourists through a static site host and

00:22:18,309 --> 00:22:24,609
we can pull in from Hitler CMS's or

00:22:21,369 --> 00:22:27,489
whatever content sources we want they

00:22:24,609 --> 00:22:29,559
can be markdown files that can be api's

00:22:27,489 --> 00:22:31,659
that we run or someone that we hire to

00:22:29,559 --> 00:22:34,570
do that so hey this wordpress hit ghost

00:22:31,659 --> 00:22:38,919
is a major CMS as well contentful some

00:22:34,570 --> 00:22:40,869
of you have used it I think you Scoob

00:22:38,919 --> 00:22:43,899
you know these are all like very very

00:22:40,869 --> 00:22:45,009
focused on agency use cases like if you

00:22:43,899 --> 00:22:46,480
need to set up a site for a

00:22:45,009 --> 00:22:48,429
non-technical user to start editing

00:22:46,480 --> 00:22:49,960
content and you're the developer that

00:22:48,429 --> 00:22:51,340
you're contracted as a freelancer or

00:22:49,960 --> 00:22:53,730
something and then you hand it off I

00:22:51,340 --> 00:22:56,529
think this is really good or if you just

00:22:53,730 --> 00:22:59,379
like for me personally I can I can do

00:22:56,529 --> 00:23:01,509
all my content on air table and it just

00:22:59,379 --> 00:23:03,549
pulls in from your table as well so I

00:23:01,509 --> 00:23:06,879
really like all that and it's it's all

00:23:03,549 --> 00:23:09,279
it's all collected on a CMS where Gatsby

00:23:06,879 --> 00:23:10,809
comes in is gasps me regards this as all

00:23:09,279 --> 00:23:12,519
the content mesh this is their word for

00:23:10,809 --> 00:23:15,340
it again their blog posts journey to the

00:23:12,519 --> 00:23:17,499
content mesh is is their VC pitch

00:23:15,340 --> 00:23:19,960
basically like why what is going on in

00:23:17,499 --> 00:23:22,239
terms of like why is this an investable

00:23:19,960 --> 00:23:23,889
trend and basically saying like all

00:23:22,239 --> 00:23:24,700
these content systems will ingest it

00:23:23,889 --> 00:23:28,480
into graph QL

00:23:24,700 --> 00:23:30,929
will run it through our react server or

00:23:28,480 --> 00:23:33,820
build tool and then we'll push it out to

00:23:30,929 --> 00:23:35,050
static hosting which is notify amplify

00:23:33,820 --> 00:23:37,420
all this

00:23:35,050 --> 00:23:42,040
Hosting so that's the that's the rough

00:23:37,420 --> 00:23:44,260
idea this is this is Brendan Eich he

00:23:42,040 --> 00:23:46,210
always says always bet on JavaScript so

00:23:44,260 --> 00:23:49,300
I've sort of taken his quote and just

00:23:46,210 --> 00:23:52,540
made it into always bet on gem stack so

00:23:49,300 --> 00:23:54,700
that's the that's the rough intro to gem

00:23:52,540 --> 00:23:56,680
stack like why it's wiser tray and why

00:23:54,700 --> 00:24:00,550
people care about it why why it's such a

00:23:56,680 --> 00:24:02,080
big deal even though and I in fact i

00:24:00,550 --> 00:24:03,580
think javascript api is are the most

00:24:02,080 --> 00:24:04,900
boring parts of gem stack actually

00:24:03,580 --> 00:24:06,370
marked us the more interesting thing

00:24:04,900 --> 00:24:06,790
because markup is no longer static

00:24:06,370 --> 00:24:08,770
markup

00:24:06,790 --> 00:24:11,380
it's markup that that's being run on the

00:24:08,770 --> 00:24:14,320
server and then again on the client and

00:24:11,380 --> 00:24:16,990
that's exactly what gatsby does so so I

00:24:14,320 --> 00:24:20,560
think now we're at a point where so so

00:24:16,990 --> 00:24:23,050
we just finished the intro to gem stack

00:24:20,560 --> 00:24:25,870
piece you can have more reading over

00:24:23,050 --> 00:24:28,870
here I have more information and links I

00:24:25,870 --> 00:24:30,160
I really like Chris coiours talk about

00:24:28,870 --> 00:24:33,070
the all-powerful front-end developer

00:24:30,160 --> 00:24:35,530
basically the more you can do server

00:24:33,070 --> 00:24:37,840
Leslie the less you the less you need to

00:24:35,530 --> 00:24:39,250
do on the server on the server side and

00:24:37,840 --> 00:24:40,480
therefore the more you can do as a

00:24:39,250 --> 00:24:43,090
front-end developer as a product

00:24:40,480 --> 00:24:46,660
developer is suggestive okay so I really

00:24:43,090 --> 00:24:48,940
like that okay so what I'm gonna have

00:24:46,660 --> 00:24:50,800
everyone do now is check their amplify

00:24:48,940 --> 00:24:54,700
console so everything should have

00:24:50,800 --> 00:24:57,400
deployed already and if you see over

00:24:54,700 --> 00:25:01,360
here in my in my console when we started

00:24:57,400 --> 00:25:02,530
this session you should already have had

00:25:01,360 --> 00:25:04,750
this deployed this is more or less

00:25:02,530 --> 00:25:07,930
everyone sees the same page and when you

00:25:04,750 --> 00:25:10,090
click on this you can actually see the

00:25:07,930 --> 00:25:12,010
deployed site it's at it's at some

00:25:10,090 --> 00:25:14,250
random hash and it's something dot

00:25:12,010 --> 00:25:16,180
amplify app comm something like that

00:25:14,250 --> 00:25:20,800
yeah

00:25:16,180 --> 00:25:25,300
cool now I'm also going to go over to my

00:25:20,800 --> 00:25:27,940
overreacted IO clone again that that is

00:25:25,300 --> 00:25:29,710
the same thing I've cloned Danny bro

00:25:27,940 --> 00:25:31,870
mom's blog just by clicking a few

00:25:29,710 --> 00:25:34,510
buttons right so like the potential to

00:25:31,870 --> 00:25:36,400
jam stack is that you're just everything

00:25:34,510 --> 00:25:37,810
is get based and you can if it's open

00:25:36,400 --> 00:25:39,670
source you can fork it and you can

00:25:37,810 --> 00:25:42,820
deploy it very easily it cost you

00:25:39,670 --> 00:25:44,830
nothing and now the main thing I want

00:25:42,820 --> 00:25:46,240
you to do is it not just cloned it also

00:25:44,830 --> 00:25:47,980
force it to your github that's why you

00:25:46,240 --> 00:25:50,560
have to get hub connection so over down

00:25:47,980 --> 00:25:52,840
here there's a there's a link to your

00:25:50,560 --> 00:25:55,480
github so if you click over there it

00:25:52,840 --> 00:25:59,020
links to that that fork of your github

00:25:55,480 --> 00:26:02,290
that you're that they created for you

00:25:59,020 --> 00:26:05,200
and now you can change anything in in

00:26:02,290 --> 00:26:11,280
the content so let's say I'm going to

00:26:05,200 --> 00:26:14,020
change where's the content source pages

00:26:11,280 --> 00:26:15,250
in this is the overreacted Iowa source

00:26:14,020 --> 00:26:16,450
and this is a Gatsby site by the way

00:26:15,250 --> 00:26:19,270
everything we're cloning is a Gatsby

00:26:16,450 --> 00:26:20,890
site let's say I want to change the

00:26:19,270 --> 00:26:23,200
title of this blog post name it name it

00:26:20,890 --> 00:26:27,190
and they will come I'm just gonna change

00:26:23,200 --> 00:26:33,610
it over here index dot MD change it and

00:26:27,190 --> 00:26:36,990
say hello JS Kampf Asia noticed I'm

00:26:33,610 --> 00:26:38,980
working entirely inside of github so

00:26:36,990 --> 00:26:41,830
what this what this is doing right now

00:26:38,980 --> 00:26:44,380
is I just committed that change to get

00:26:41,830 --> 00:26:47,110
right you can do the same thing for the

00:26:44,380 --> 00:26:49,720
Gatsby started dimension as well you can

00:26:47,110 --> 00:26:52,110
change your markdown files you can

00:26:49,720 --> 00:26:54,610
change JavaScript doesn't matter what

00:26:52,110 --> 00:26:57,720
what this actually does is that it will

00:26:54,610 --> 00:26:57,720
start a kick off that build

00:27:00,860 --> 00:27:06,510
right so so and this is the this the

00:27:05,010 --> 00:27:08,520
process it starts to provision a

00:27:06,510 --> 00:27:10,980
billboard for you basically like a build

00:27:08,520 --> 00:27:13,590
server it will build it will run gasps

00:27:10,980 --> 00:27:15,060
rebuild on your on your project it'll do

00:27:13,590 --> 00:27:18,090
for your site and you'll verify by

00:27:15,060 --> 00:27:19,560
checking by taking some screenshots if

00:27:18,090 --> 00:27:21,900
you go back to the build history you can

00:27:19,560 --> 00:27:24,180
see our original build this this build

00:27:21,900 --> 00:27:27,660
is just kicked off based on my updating

00:27:24,180 --> 00:27:28,740
of my markdown file but if you go back

00:27:27,660 --> 00:27:31,230
to the original bill you can see the

00:27:28,740 --> 00:27:34,080
entire process provision cloning

00:27:31,230 --> 00:27:35,870
repository blah blah blah there's no

00:27:34,080 --> 00:27:38,460
back end because I didn't put it back in

00:27:35,870 --> 00:27:39,510
but but they also verify by generating

00:27:38,460 --> 00:27:43,290
all these screenshots so you can see

00:27:39,510 --> 00:27:46,920
that you've you you're deploying what

00:27:43,290 --> 00:27:49,560
you expect yeah this is my clone of or

00:27:46,920 --> 00:27:51,300
overreacted I oh didn't take very much

00:27:49,560 --> 00:27:54,260
and that's a potential jump stack I

00:27:51,300 --> 00:27:56,730
think that if everything is good based

00:27:54,260 --> 00:27:59,520
that's the ultimate version control for

00:27:56,730 --> 00:28:01,650
both your app as well as your content

00:27:59,520 --> 00:28:06,660
and both can go in step with each other

00:28:01,650 --> 00:28:08,460
which is very nice okay so yeah that's

00:28:06,660 --> 00:28:10,140
the that's the first piece I would just

00:28:08,460 --> 00:28:11,670
want to pause you and ask if this if

00:28:10,140 --> 00:28:17,670
there's anyone with questions if they're

00:28:11,670 --> 00:28:19,050
lost I've been talking for a bit no okay

00:28:17,670 --> 00:28:21,720
all right so now we're going to go to

00:28:19,050 --> 00:28:24,000
the intro to Gatsby part because now you

00:28:21,720 --> 00:28:26,670
have you have two Gatsby sites you have

00:28:24,000 --> 00:28:29,850
this site with it which is the started I

00:28:26,670 --> 00:28:31,710
mentioned site and this was created for

00:28:29,850 --> 00:28:34,620
you by by just by clicking that button

00:28:31,710 --> 00:28:38,790
right you have the overreacted i/o site

00:28:34,620 --> 00:28:40,830
and this was created for you again like

00:28:38,790 --> 00:28:42,810
that these are examples or more

00:28:40,830 --> 00:28:43,460
complicated overreacted IO is very

00:28:42,810 --> 00:28:46,440
complicated

00:28:43,460 --> 00:28:49,920
there are Gatsby known has like 200

00:28:46,440 --> 00:28:51,300
lines of just configuration and and I'm

00:28:49,920 --> 00:28:55,010
gonna teach you how to read all this

00:28:51,300 --> 00:28:55,010
that's the that's the hard part

00:28:55,130 --> 00:28:58,770
what we're gonna do now is we're gonna

00:28:56,880 --> 00:29:01,080
go to do to go to part 2 which is the

00:28:58,770 --> 00:29:04,400
intro to Gatsby okay so this one I don't

00:29:01,080 --> 00:29:06,480
have slides but I just have a rough idea

00:29:04,400 --> 00:29:07,800
well so what does Gatsby Gatsby is a

00:29:06,480 --> 00:29:09,929
site for creating websites to be ah yes

00:29:07,800 --> 00:29:12,620
okay so I just wanna I'm just going to

00:29:09,929 --> 00:29:12,620
switch over to the

00:29:12,850 --> 00:29:20,570
thing here ok so what's important about

00:29:18,230 --> 00:29:25,160
knowing nothing to know about Gatsby so

00:29:20,570 --> 00:29:27,170
gas retakes content like also the

00:29:25,160 --> 00:29:29,840
content that's just let's just have

00:29:27,170 --> 00:29:36,160
different kinds of content so that's

00:29:29,840 --> 00:29:41,540
just that like images JSON files

00:29:36,160 --> 00:29:43,640
markdown some API requests for example

00:29:41,540 --> 00:29:45,290
if you want to run a shop a shop on

00:29:43,640 --> 00:29:48,140
Gatsby you can have a campaign the

00:29:45,290 --> 00:29:50,150
Shopify API asked what's available and

00:29:48,140 --> 00:29:52,570
feed that in so all of these become

00:29:50,150 --> 00:29:52,570
nodes

00:29:57,730 --> 00:30:02,270
I'm gonna show you how to do that in a

00:29:59,600 --> 00:30:04,480
minute all these become notes some of

00:30:02,270 --> 00:30:07,760
them need to be transformed so an image

00:30:04,480 --> 00:30:10,930
may need to be transformed into for

00:30:07,760 --> 00:30:13,880
resizing for optimal image compression

00:30:10,930 --> 00:30:17,120
so like better image

00:30:13,880 --> 00:30:18,290
that's what JSON it doesn't need any

00:30:17,120 --> 00:30:20,810
transform so it just goes straight to

00:30:18,290 --> 00:30:23,780
markdown needs transformations from

00:30:20,810 --> 00:30:25,820
markdown into HTML based on markdown so

00:30:23,780 --> 00:30:30,710
you have a remark transformer

00:30:25,820 --> 00:30:32,060
transformer API is also you're fine you

00:30:30,710 --> 00:30:35,510
may need to log in and have some

00:30:32,060 --> 00:30:37,970
authentication here but basically the

00:30:35,510 --> 00:30:41,770
idea is to take all these nodes and wrap

00:30:37,970 --> 00:30:41,770
them up into a single graphical layer

00:30:43,240 --> 00:30:47,140
and then from the graphical everything

00:30:45,950 --> 00:30:53,360
is fungible everything is kind of

00:30:47,140 --> 00:30:56,990
requestable from each other you can have

00:30:53,360 --> 00:30:59,590
pages so the this slash pages folder is

00:30:56,990 --> 00:31:05,050
a special magic folder inside of this

00:30:59,590 --> 00:31:08,480
every every single page like about a s

00:31:05,050 --> 00:31:10,640
index is every single page can make a

00:31:08,480 --> 00:31:13,160
graphical request to request any single

00:31:10,640 --> 00:31:17,650
one of these things so we're using graph

00:31:13,160 --> 00:31:19,520
kill as a unified data layer right

00:31:17,650 --> 00:31:21,590
we've type checking and you can

00:31:19,520 --> 00:31:25,610
prototype the data as well that you get

00:31:21,590 --> 00:31:34,700
from this and so there's there's this

00:31:25,610 --> 00:31:37,640
guy and then there's gatsby no js' so

00:31:34,700 --> 00:31:39,260
pages are just by convention it would

00:31:37,640 --> 00:31:40,670
just run through everything for you but

00:31:39,260 --> 00:31:43,130
anything else that is that is not a

00:31:40,670 --> 00:31:45,200
standard page for example if I have a

00:31:43,130 --> 00:31:48,230
whole bunch of markdown files I'm not

00:31:45,200 --> 00:31:49,640
gonna specify all right day one is day

00:31:48,230 --> 00:31:50,030
to day is day three Dodgers they're

00:31:49,640 --> 00:31:51,860
stupid

00:31:50,030 --> 00:31:56,410
instead I'm going to have a template

00:31:51,860 --> 00:31:56,410
they template

00:31:56,490 --> 00:32:01,950
jas inside of my gat 3-node I'm gonna

00:31:59,760 --> 00:32:03,570
say take all these markdown files and

00:32:01,950 --> 00:32:05,130
run it through gas PJs and

00:32:03,570 --> 00:32:07,320
programmatically generate page one two

00:32:05,130 --> 00:32:09,500
three four five as many as I want

00:32:07,320 --> 00:32:12,570
same thing for images anything for JSON

00:32:09,500 --> 00:32:14,850
basically standard format for for

00:32:12,570 --> 00:32:17,070
consuming all this coming into here

00:32:14,850 --> 00:32:20,010
graph QL and then this is all react

00:32:17,070 --> 00:32:24,180
right you're requesting it so it does

00:32:20,010 --> 00:32:27,750
one server-side render into index into

00:32:24,180 --> 00:32:31,590
HTML as well as a whole bunch of

00:32:27,750 --> 00:32:32,910
different JavaScript bundles sorry so

00:32:31,590 --> 00:32:35,460
there's a there's a lot of different

00:32:32,910 --> 00:32:37,530
HTML as well so every single route has

00:32:35,460 --> 00:32:40,860
its own HTML folder so if you turn

00:32:37,530 --> 00:32:42,840
JavaScript off if your if your SEO is if

00:32:40,860 --> 00:32:44,370
your search engine doesn't run your

00:32:42,840 --> 00:32:46,400
JavaScript is fine because you can read

00:32:44,370 --> 00:32:48,180
everything on your page

00:32:46,400 --> 00:32:49,530
but then it also generates the

00:32:48,180 --> 00:32:51,240
JavaScript bundles so that on the

00:32:49,530 --> 00:32:53,220
client-side it rehydrates into a full

00:32:51,240 --> 00:32:55,080
single page app so as you navigate from

00:32:53,220 --> 00:32:56,880
index to about it no longer across the

00:32:55,080 --> 00:32:58,560
HTML because it's just because the

00:32:56,880 --> 00:33:01,380
remaining data that it needs okay so

00:32:58,560 --> 00:33:05,040
hopefully that was like the first time I

00:33:01,380 --> 00:33:10,880
ever did that but am I missing anything

00:33:05,040 --> 00:33:13,830
no I think I would just show you okay so

00:33:10,880 --> 00:33:17,370
so so this is the exercise that I'm

00:33:13,830 --> 00:33:18,570
gonna hopefully get you to start I hope

00:33:17,370 --> 00:33:22,020
I hope it won't go off the rails that

00:33:18,570 --> 00:33:23,430
quickly uh-huh but we'll see so so the

00:33:22,020 --> 00:33:26,100
repo I have you I have the I had you

00:33:23,430 --> 00:33:28,410
clone has notes right and that's the

00:33:26,100 --> 00:33:31,710
thing that you've been reading but it

00:33:28,410 --> 00:33:33,930
also has a site so over on the site I

00:33:31,710 --> 00:33:36,600
think I've left I left i filled in quite

00:33:33,930 --> 00:33:38,940
a lot of stuff but I want you to be able

00:33:36,600 --> 00:33:41,010
to fill the fill stuff in yourself if

00:33:38,940 --> 00:33:44,070
you if you npm install the dependencies

00:33:41,010 --> 00:33:45,690
inside of sites actually i'm just gonna

00:33:44,070 --> 00:33:48,500
go ahead

00:33:45,690 --> 00:33:48,500
sorry

00:33:52,620 --> 00:33:59,640
no I think I I think I hear so I want to

00:33:57,220 --> 00:34:04,780
do was I had a get subtree I buy sit in

00:33:59,640 --> 00:34:07,650
so I just need to remove get get in it

00:34:04,780 --> 00:34:07,650
get in

00:34:15,690 --> 00:34:30,129
sorry sorry about that I I wasn't hiding

00:34:19,330 --> 00:34:33,300
things from you on purpose okay so if

00:34:30,129 --> 00:34:36,629
you get pull again it's get full force

00:34:33,300 --> 00:34:36,629
it should be

00:34:39,770 --> 00:34:49,770
yep I see I see the site on my on this

00:34:42,360 --> 00:34:53,090
site now okay cool so so we're not going

00:34:49,770 --> 00:34:55,830
to go to the data stuff and I left

00:34:53,090 --> 00:34:59,430
that's just nuke let's just go into

00:34:55,830 --> 00:35:01,760
slash paid sword slash pages can

00:34:59,430 --> 00:35:07,980
everyone see this oh this is dark okay

00:35:01,760 --> 00:35:09,210
color theme light much better right okay

00:35:07,980 --> 00:35:17,970
so we're just gonna nuke all this this

00:35:09,210 --> 00:35:23,490
entire thing so I mean source slash

00:35:17,970 --> 00:35:24,810
index is sloshed source /pages slash and

00:35:23,490 --> 00:35:29,340
I'm just gonna have this simple thing

00:35:24,810 --> 00:35:31,080
here saying page one and that's and

00:35:29,340 --> 00:35:33,480
that's that's that's all the commitment

00:35:31,080 --> 00:35:36,210
that that's all I need to do to to get

00:35:33,480 --> 00:35:38,610
this started so make sure to install NPM

00:35:36,210 --> 00:35:42,060
install so that all the dependencies are

00:35:38,610 --> 00:35:47,640
installed as well sorry I'm not very

00:35:42,060 --> 00:35:51,920
well organized but all right I'm gonna

00:35:47,640 --> 00:35:51,920
run you're gonna start and kick that off

00:35:52,820 --> 00:35:58,050
the main thing that runs is Gatsby

00:35:54,930 --> 00:36:03,859
develop now it's compiling all the pages

00:35:58,050 --> 00:36:03,859
and and so we can see ooh ah

00:36:04,589 --> 00:36:09,109
hang on I have a spare page

00:36:17,549 --> 00:36:26,499
okay okay it looks like it looks like I

00:36:23,619 --> 00:36:29,349
committed something that I should not

00:36:26,499 --> 00:36:31,660
have so I think if you just if you just

00:36:29,349 --> 00:36:34,690
name this site title query - it should

00:36:31,660 --> 00:36:38,140
be fine inside off layout see I'll try

00:36:34,690 --> 00:36:39,369
to like save all the work that you need

00:36:38,140 --> 00:36:40,319
to do unfortunately I don't think I did

00:36:39,369 --> 00:36:42,759
it very well

00:36:40,319 --> 00:36:52,630
I'm gonna I'm gonna commit this again as

00:36:42,759 --> 00:36:55,089
well so you can just pull fix okay so my

00:36:52,630 --> 00:37:00,940
index dot HTML has this has this page

00:36:55,089 --> 00:37:02,289
one can everybody get here oh I'm so

00:37:00,940 --> 00:37:05,489
sorry

00:37:02,289 --> 00:37:05,489
why don't we watch some YouTube

00:37:07,410 --> 00:37:11,489
questions on this does this make sense

00:37:17,560 --> 00:37:24,920
no Gatsby comes with it in fact it's a

00:37:21,500 --> 00:37:26,390
it's a it's a pro and a con the pro is

00:37:24,920 --> 00:37:27,710
that everything has a standard data

00:37:26,390 --> 00:37:29,630
there and you can prototype very easily

00:37:27,710 --> 00:37:33,290
the con is that it takes a lot of spin

00:37:29,630 --> 00:37:35,210
up so it's a bit slower but I think you

00:37:33,290 --> 00:37:37,670
trade the upfront power are you trained

00:37:35,210 --> 00:37:39,790
the upfront startup time for overall

00:37:37,670 --> 00:37:39,790
power

00:37:43,599 --> 00:37:49,420
I'll show you yeah it's a it's a request

00:37:51,970 --> 00:38:03,859
so I know people have npm installing I'm

00:37:55,640 --> 00:38:21,230
not really sure what to cover now let's

00:38:03,859 --> 00:38:24,700
see yeah okay okay I'm sorry about that

00:38:21,230 --> 00:38:24,700
just keep it yeah

00:38:35,630 --> 00:38:42,000
yeah I mean I've just I've just been

00:38:39,869 --> 00:38:43,260
instructed to use a ittle guess for this

00:38:42,000 --> 00:38:44,480
tool but then there's there's other

00:38:43,260 --> 00:38:48,780
static cycles that you can use as well

00:38:44,480 --> 00:38:52,470
okay so I just want to give you the idea

00:38:48,780 --> 00:38:54,089
that just by convention anything inside

00:38:52,470 --> 00:38:56,430
the pages anything with a JavaScript

00:38:54,089 --> 00:38:58,380
file it is and has an export default is

00:38:56,430 --> 00:39:01,710
it is a page that you can you can start

00:38:58,380 --> 00:39:03,660
rendering so it's a little bit like next

00:39:01,710 --> 00:39:06,060
year as well like that's magic pages

00:39:03,660 --> 00:39:08,250
folder and it's and it's different from

00:39:06,060 --> 00:39:09,810
react scripts because react scripts

00:39:08,250 --> 00:39:11,670
doesn't have anything right by default

00:39:09,810 --> 00:39:13,740
so this sets our routing for you as well

00:39:11,670 --> 00:39:15,960
as code splitting every single page is

00:39:13,740 --> 00:39:17,849
code split it based on bits on the page

00:39:15,960 --> 00:39:21,300
boundaries so let's set up a different

00:39:17,849 --> 00:39:28,880
page like about Jas and I'm gonna import

00:39:21,300 --> 00:39:28,880
react as well or I can write my own

00:39:29,540 --> 00:39:45,150
expert default function you turn each

00:39:34,710 --> 00:39:47,280
one about page so so that's it I just

00:39:45,150 --> 00:39:49,410
created that J's file I created the

00:39:47,280 --> 00:39:50,550
about page I think in recompile so I

00:39:49,410 --> 00:39:56,369
didn't don't even have to restart the

00:39:50,550 --> 00:39:59,250
server and now if I go to localhost 8080

00:39:56,369 --> 00:40:05,190
right so very like you didn't even set

00:39:59,250 --> 00:40:06,930
up routing which is fantastic although

00:40:05,190 --> 00:40:11,490
although you probably need to put links

00:40:06,930 --> 00:40:14,099
between them one thing I'd like to show

00:40:11,490 --> 00:40:17,339
people that stuff is being statically

00:40:14,099 --> 00:40:20,130
rendered is in the network tab when i

00:40:17,339 --> 00:40:22,290
refresh I get an about dot HTML this is

00:40:20,130 --> 00:40:26,400
an HTML document

00:40:22,290 --> 00:40:30,450
oh I've actually not surface I rendered

00:40:26,400 --> 00:40:31,829
this okay so so in development this

00:40:30,450 --> 00:40:33,420
doesn't work about in production you

00:40:31,829 --> 00:40:35,130
actually will see inside the preview of

00:40:33,420 --> 00:40:37,770
the the pre rendered page which is

00:40:35,130 --> 00:40:41,220
pretty cool and to prove that it's just

00:40:37,770 --> 00:40:43,619
HTML no yes okay and if you type any

00:40:41,220 --> 00:40:46,400
random characters inside it and just

00:40:43,619 --> 00:40:51,910
like get a 404 page Oh

00:40:46,400 --> 00:40:51,910
I'm sorry I have screwed this up as well

00:40:55,780 --> 00:41:02,030
okay yeah but it gives you a development

00:40:59,960 --> 00:41:03,980
404 page with with all the darts of all

00:41:02,030 --> 00:41:05,840
the pages that you've created so that's

00:41:03,980 --> 00:41:08,660
that's the that's the rough idea okay so

00:41:05,840 --> 00:41:11,690
I'm gonna leave you to it right now in

00:41:08,660 --> 00:41:14,450
terms of the exercises so where we are

00:41:11,690 --> 00:41:17,450
now is intro to Gatsby we're making

00:41:14,450 --> 00:41:20,690
pages and we're gonna make a component

00:41:17,450 --> 00:41:22,220
layout component this is pure react you

00:41:20,690 --> 00:41:23,570
make a you make a folder call it

00:41:22,220 --> 00:41:24,740
whatever the hell you want make a file

00:41:23,570 --> 00:41:26,480
call it whatever how do you want make a

00:41:24,740 --> 00:41:28,250
layout component that renders children

00:41:26,480 --> 00:41:30,950
and you import that into your page and

00:41:28,250 --> 00:41:32,540
we use that code and layout components

00:41:30,950 --> 00:41:34,220
very useful to have consistently else

00:41:32,540 --> 00:41:35,870
between your pages right right now I

00:41:34,220 --> 00:41:38,150
don't have any consistency between my

00:41:35,870 --> 00:41:40,520
page pages what if I made a react

00:41:38,150 --> 00:41:43,010
component imported it from there and

00:41:40,520 --> 00:41:44,780
then used it in both both pages so I

00:41:43,010 --> 00:41:47,210
would like you to do that and just get

00:41:44,780 --> 00:41:49,850
familiar with the development flow and

00:41:47,210 --> 00:41:50,960
look at the rest of the if you're if

00:41:49,850 --> 00:41:53,800
you're slightly ahead of the rest of us

00:41:50,960 --> 00:41:56,990
look at the rest of the the docs as well

00:41:53,800 --> 00:41:58,850
well I'll show you one thing is offer

00:41:56,990 --> 00:41:59,660
for those part those people who had the

00:41:58,850 --> 00:42:06,560
graphic over there

00:41:59,660 --> 00:42:08,780
so localhost 8100 graph duo this is

00:42:06,560 --> 00:42:12,380
where the graphical layer is where you

00:42:08,780 --> 00:42:16,850
can start querying all the pages so here

00:42:12,380 --> 00:42:18,530
I think we have site page you can just

00:42:16,850 --> 00:42:25,930
google you can just look around as to

00:42:18,530 --> 00:42:28,250
like what the nodes are you can see what

00:42:25,930 --> 00:42:32,090
what I talked about like right now we're

00:42:28,250 --> 00:42:36,350
consuming JavaScript files and it's

00:42:32,090 --> 00:42:36,980
sending out pages so these are these are

00:42:36,350 --> 00:42:38,300
pretty helpful

00:42:36,980 --> 00:42:40,190
honestly I don't I don't I don't

00:42:38,300 --> 00:42:43,280
navigate around these a lot just cuz I

00:42:40,190 --> 00:42:46,600
know I don't need it but it's pretty

00:42:43,280 --> 00:42:46,600
helpful for figuring out graphical

00:42:49,080 --> 00:42:57,110
we're psyched title yeah I want to I

00:42:53,970 --> 00:43:02,160
want to it I want to query site metadata

00:42:57,110 --> 00:43:04,680
okay so the place the query is site dot

00:43:02,160 --> 00:43:09,870
site metadata I'm gonna query all of

00:43:04,680 --> 00:43:18,630
this other stuff see if I can get

00:43:09,870 --> 00:43:20,670
anything by the way this Explorer on the

00:43:18,630 --> 00:43:23,280
left is a new addition to the graph your

00:43:20,670 --> 00:43:26,070
ecosystem it was done by my friend Sean

00:43:23,280 --> 00:43:28,260
girl that one graph and it's usually

00:43:26,070 --> 00:43:31,980
used to have to type who has time for

00:43:28,260 --> 00:43:35,700
that right so I think the the wait

00:43:31,980 --> 00:43:39,380
request site motivator I'm not sure I'm

00:43:35,700 --> 00:43:39,380
not sure I'm doing this right hang on

00:43:48,219 --> 00:43:58,670
yeah okay so if I request title

00:43:51,369 --> 00:44:00,799
description off author anything I can I

00:43:58,670 --> 00:44:07,640
can see I can start seeing my site

00:44:00,799 --> 00:44:10,519
metadata so this is configured inside of

00:44:07,640 --> 00:44:12,140
Gatsby - config yes this is the starting

00:44:10,519 --> 00:44:14,119
point for all Gatsby projects all gasp

00:44:12,140 --> 00:44:16,069
we projects must have I guess we can

00:44:14,119 --> 00:44:17,569
figure out yes this is your this is

00:44:16,069 --> 00:44:19,609
where you pass in any data it's a three

00:44:17,569 --> 00:44:20,420
for JSON object you can pass in whatever

00:44:19,609 --> 00:44:22,579
you want

00:44:20,420 --> 00:44:23,660
guess we in first the types here I've

00:44:22,579 --> 00:44:26,269
only pass strings where you can put

00:44:23,660 --> 00:44:27,499
numbers or arrays whatever and it and in

00:44:26,269 --> 00:44:30,650
first the types and you can start

00:44:27,499 --> 00:44:32,329
querying it from your graph QL and so

00:44:30,650 --> 00:44:34,579
where that is starting to become

00:44:32,329 --> 00:44:36,440
interesting is inside of your pages so

00:44:34,579 --> 00:44:37,670
let's say inside of my page and this is

00:44:36,440 --> 00:44:40,519
super annoying I'm gonna get rid of it

00:44:37,670 --> 00:44:42,440
inside of my page inside of index dot GS

00:44:40,519 --> 00:44:45,969
I want to request I want to I want to

00:44:42,440 --> 00:44:48,979
use my site metadata so I'm gonna use

00:44:45,969 --> 00:44:52,039
site data what it was my instructions I

00:44:48,979 --> 00:44:55,699
need to check my own instructions you

00:44:52,039 --> 00:45:00,499
just add a query ok so let's say I use

00:44:55,699 --> 00:45:06,769
static query and I'm gonna use static

00:45:00,499 --> 00:45:10,849
query inside of here data equals sorry

00:45:06,769 --> 00:45:14,229
I'm talking too much but okay and then

00:45:10,849 --> 00:45:14,229
I'm just gonna render it out over here

00:45:17,720 --> 00:45:25,690
I do need to wrap in a graphical tag

00:45:20,930 --> 00:45:28,550
good spot yeah

00:45:25,690 --> 00:45:33,190
okay so let's see what's see what's

00:45:28,550 --> 00:45:33,190
going on in my site localhost:8080

00:45:35,080 --> 00:45:46,580
regular expressions flag okay cool so so

00:45:44,600 --> 00:45:48,860
I can now use graph key law inside of my

00:45:46,580 --> 00:45:51,110
page to request something that is at the

00:45:48,860 --> 00:45:53,330
site level because I've consumed all

00:45:51,110 --> 00:45:55,790
that inference on information into my

00:45:53,330 --> 00:45:58,460
graph I request it pass it into index.js

00:45:55,790 --> 00:46:01,070
because I'm using that graph fuel as a

00:45:58,460 --> 00:46:02,540
graphical query as a static query and

00:46:01,070 --> 00:46:05,600
it's only feed into my statically

00:46:02,540 --> 00:46:07,480
rendered site so so I did this on my

00:46:05,600 --> 00:46:10,370
index ah yes I want you to do it on the

00:46:07,480 --> 00:46:13,730
layout follow the instructions inside

00:46:10,370 --> 00:46:15,230
the inside the markdown file over here I

00:46:13,730 --> 00:46:17,330
think I think I've been very explicit

00:46:15,230 --> 00:46:20,540
about what to do

00:46:17,330 --> 00:46:23,030
so yeah well we'll just do this for the

00:46:20,540 --> 00:46:26,570
next half hour and then I'll start back

00:46:23,030 --> 00:46:28,910
up at 2:30 okay all right yeah and just

00:46:26,570 --> 00:46:31,940
mess around and just and there's extra

00:46:28,910 --> 00:46:36,040
homework if you want at the bottom the

00:46:31,940 --> 00:46:38,270
exercise is as well as the SEO component

00:46:36,040 --> 00:46:43,450
how's that

00:46:38,270 --> 00:46:43,450
I just talked for one hour

00:46:49,250 --> 00:46:55,199
[Applause]

00:46:58,560 --> 00:47:06,670
you know just wondering um I didn't

00:47:04,720 --> 00:47:09,100
catch fully what your experience was

00:47:06,670 --> 00:47:13,150
there you said that you tried I'll get

00:47:09,100 --> 00:47:25,450
to be get some reservations about it

00:47:13,150 --> 00:47:27,220
is there anything kanessa yeah

00:47:25,450 --> 00:47:32,350
basically anything relying on window

00:47:27,220 --> 00:47:34,530
method Sonoma yeah that meant also for

00:47:32,350 --> 00:47:38,380
some reason I get the component day long

00:47:34,530 --> 00:47:40,180
when it shouldn't be called okay we saw

00:47:38,380 --> 00:47:43,720
regular reactive it wouldn't be called

00:47:40,180 --> 00:47:45,550
yeah $0.25 component it updates you

00:47:43,720 --> 00:47:48,700
should have been called a show recently

00:47:45,550 --> 00:48:00,460
gas been some things like that sometimes

00:47:48,700 --> 00:48:03,340
happens there's so many things that it's

00:48:00,460 --> 00:48:06,090
fun so what is the source of yeah and

00:48:03,340 --> 00:48:07,440
this is the problem that I think Kathy

00:48:06,090 --> 00:48:10,829
Gatsby

00:48:07,440 --> 00:48:13,650
similar problems with our next Jas or we

00:48:10,829 --> 00:48:20,280
can see if you want to have Spain on the

00:48:13,650 --> 00:48:22,440
cruise dynamically loaded condiment

00:48:20,280 --> 00:48:24,089
something like coordinates for example

00:48:22,440 --> 00:48:29,550
if you write a love potion stuff in them

00:48:24,089 --> 00:48:31,500
and you want it to be you don't want to

00:48:29,550 --> 00:48:34,410
have a static pages page for all your

00:48:31,500 --> 00:48:44,550
tutorials want them to be dynamically

00:48:34,410 --> 00:48:46,619
generated if you want to have static you

00:48:44,550 --> 00:48:50,010
have I haven't run into this life cycle

00:48:46,619 --> 00:48:52,560
thing the main ways I run into problems

00:48:50,010 --> 00:48:54,660
is is anything that I know when to open

00:48:52,560 --> 00:48:59,099
the method so it just please make sure

00:48:54,660 --> 00:49:01,200
that throughout that I always export it

00:48:59,099 --> 00:49:02,760
into a dedicated module ancient windows

00:49:01,200 --> 00:49:06,089
exists it's not something to like a

00:49:02,760 --> 00:49:09,690
different kind of lame a downer stuff

00:49:06,089 --> 00:49:12,859
like roots the life cycle a weird stuff

00:49:09,690 --> 00:49:12,859
and I don't know why

00:49:13,200 --> 00:49:22,440
that's just mine okay you know father

00:49:17,369 --> 00:49:29,059
issues all that it is it's it is

00:49:22,440 --> 00:49:29,059
early-stage tech and since that year's

00:49:34,160 --> 00:49:40,230
actually not that much how much do you

00:49:36,750 --> 00:49:48,270
think they got three million and they

00:49:40,230 --> 00:49:49,020
hire 35 people it's a lot I don't I

00:49:48,270 --> 00:49:55,640
don't represent them

00:49:49,020 --> 00:49:58,470
I'm just well they're building like a

00:49:55,640 --> 00:50:03,349
preview platform and other enterprise

00:49:58,470 --> 00:50:03,349
services so it's not all developers

00:50:20,339 --> 00:50:26,640
is everything okay

00:50:23,309 --> 00:50:26,640
of whatever

00:50:29,270 --> 00:50:39,240
hello okay that's all timer if you ever

00:50:36,359 --> 00:50:43,820
need a timer just google countdown timer

00:50:39,240 --> 00:50:48,000
and google build it right in for you

00:50:43,820 --> 00:50:54,200
it's pretty nice and the music station

00:50:48,000 --> 00:50:57,119
is free coke AM radio okay cool

00:50:54,200 --> 00:50:59,869
sorry about that

00:50:57,119 --> 00:51:02,460
so again I don't expect everyone to have

00:50:59,869 --> 00:51:04,530
done everything but I just at least you

00:51:02,460 --> 00:51:08,130
get your hands dirty writing your own

00:51:04,530 --> 00:51:10,020
Gatsby stuff and we're just gonna plow

00:51:08,130 --> 00:51:12,720
right on just we don't have that much

00:51:10,020 --> 00:51:13,760
time I'm a little bit behind but I think

00:51:12,720 --> 00:51:17,070
I'm okay

00:51:13,760 --> 00:51:20,030
so just just so just so you're aware

00:51:17,070 --> 00:51:22,859
where we are I'm inside the the repo and

00:51:20,030 --> 00:51:27,930
we're in part three now Gatsby plugins

00:51:22,859 --> 00:51:31,140
okay I think that gets me plugins so

00:51:27,930 --> 00:51:32,910
it's possible to use Gatsby based on the

00:51:31,140 --> 00:51:34,920
starters that you choose you can use a

00:51:32,910 --> 00:51:37,589
whole bunch of starters here's the

00:51:34,920 --> 00:51:39,780
starter library it's gas vgs thought org

00:51:37,589 --> 00:51:41,580
slash starters you can get started just

00:51:39,780 --> 00:51:43,200
by cloning anything one of these things

00:51:41,580 --> 00:51:44,580
click the github you've already been

00:51:43,200 --> 00:51:47,339
through the process pulling it down to

00:51:44,580 --> 00:51:51,359
your repo change a few files all done

00:51:47,339 --> 00:51:56,460
for you 200 start if some of them are

00:51:51,359 --> 00:51:58,200
not so high quality so just so fun fact

00:51:56,460 --> 00:52:00,540
I actually made this I made this real

00:51:58,200 --> 00:52:03,900
case and I was very insistent on the

00:52:00,540 --> 00:52:05,820
fact that I could filter by use case so

00:52:03,900 --> 00:52:08,520
for example if I want to search for

00:52:05,820 --> 00:52:13,290
e-commerce starter this shows me how to

00:52:08,520 --> 00:52:16,490
use gas we will Shopify and stripe if I

00:52:13,290 --> 00:52:16,490
wants authentication

00:52:16,710 --> 00:52:24,000
this has firebase authentication AWS

00:52:21,180 --> 00:52:26,720
simplify authentication this is my

00:52:24,000 --> 00:52:29,400
personal one gems like a coupon starter

00:52:26,720 --> 00:52:31,290
basically you know look through the use

00:52:29,400 --> 00:52:34,700
cases there's a lot of different things

00:52:31,290 --> 00:52:37,680
it's as flexible as JavaScript can be

00:52:34,700 --> 00:52:40,140
but starters are just repos that you

00:52:37,680 --> 00:52:41,690
clone and then once you clone it it's

00:52:40,140 --> 00:52:42,829
you're you're on your own right

00:52:41,690 --> 00:52:47,510
no one's going to maintain your stuff

00:52:42,829 --> 00:52:49,730
for you plugins are a pretty bundled set

00:52:47,510 --> 00:52:53,690
of capabilities and that's where the

00:52:49,730 --> 00:52:56,900
plugins library is it's gasps vgs dot

00:52:53,690 --> 00:53:00,470
org slash plugins you have a whole bunch

00:52:56,900 --> 00:53:02,480
of them a lot of them are like it's not

00:53:00,470 --> 00:53:04,549
very clear why you would use them I

00:53:02,480 --> 00:53:05,750
think in if there's one problem in our

00:53:04,549 --> 00:53:09,230
industry in general is that we don't

00:53:05,750 --> 00:53:10,880
write enough documentation so so if you

00:53:09,230 --> 00:53:13,130
can help with the docs it's always it's

00:53:10,880 --> 00:53:15,650
always a good idea but also I also made

00:53:13,130 --> 00:53:18,380
this thing it's linked see see started

00:53:15,650 --> 00:53:20,180
using this so you can link back to the

00:53:18,380 --> 00:53:23,270
startup page and filter by starters that

00:53:20,180 --> 00:53:24,680
use that thing so you can if you might

00:53:23,270 --> 00:53:26,210
be doing a documentation you can use you

00:53:24,680 --> 00:53:31,750
can see working examples that use it

00:53:26,210 --> 00:53:34,670
which is kind of good enough okay so

00:53:31,750 --> 00:53:36,920
there's a lot of different plugins all

00:53:34,670 --> 00:53:39,230
of them do vaguely different things

00:53:36,920 --> 00:53:44,359
based on the api's that are available to

00:53:39,230 --> 00:53:45,859
get to Gatsby so the the main one that

00:53:44,359 --> 00:53:48,140
we're going to start dealing with is gas

00:53:45,859 --> 00:53:51,289
resource file system guess what as

00:53:48,140 --> 00:53:53,029
fascism looks through or your folder

00:53:51,289 --> 00:53:55,490
that you give it and it ingests

00:53:53,029 --> 00:53:58,190
everything inside it as a node it's very

00:53:55,490 --> 00:53:59,900
dumb that's it it has no idea like it

00:53:58,190 --> 00:54:02,510
like maybe knows like based on the

00:53:59,900 --> 00:54:04,309
extension what file type it is that's it

00:54:02,510 --> 00:54:05,390
it's not going to say it's gonna take in

00:54:04,309 --> 00:54:07,099
a markdown file and you're just gonna

00:54:05,390 --> 00:54:09,380
say alright this note is of type

00:54:07,099 --> 00:54:10,760
markdown but it's not gonna convert it

00:54:09,380 --> 00:54:11,750
to HTML for you you have to do that on

00:54:10,760 --> 00:54:13,250
your own it's not gonna convert it's

00:54:11,750 --> 00:54:16,220
gonna convert it it's not gonna convert

00:54:13,250 --> 00:54:17,420
to like j/s or whatever so I'm gonna

00:54:16,220 --> 00:54:19,160
process the images for you it's just

00:54:17,420 --> 00:54:20,900
gonna say alright I have a path to that

00:54:19,160 --> 00:54:24,579
image that's it

00:54:20,900 --> 00:54:27,049
so I have the source plugin

00:54:24,579 --> 00:54:28,760
there will be a lot of remember remember

00:54:27,049 --> 00:54:30,770
what I said about the API economy that

00:54:28,760 --> 00:54:33,380
all these services with API is out there

00:54:30,770 --> 00:54:38,799
that you want to access there's a lot of

00:54:33,380 --> 00:54:41,059
plugins there's 990 something 908 plug

00:54:38,799 --> 00:54:43,549
plugins and I think this is actually a

00:54:41,059 --> 00:54:45,260
big source of power for Gatsby because

00:54:43,549 --> 00:54:47,450
every plugin that someone else writes is

00:54:45,260 --> 00:54:49,309
immediately code that you can use it's a

00:54:47,450 --> 00:54:51,640
network effect of all the different data

00:54:49,309 --> 00:54:54,950
sources that that can come into your app

00:54:51,640 --> 00:54:56,450
so whatever whatever it is

00:54:54,950 --> 00:55:01,760
you're then going to want to transform

00:54:56,450 --> 00:55:07,730
them so there's this source plugin and

00:55:01,760 --> 00:55:09,220
then there's a transform and there's

00:55:07,730 --> 00:55:14,240
there's other smaller types of plugins

00:55:09,220 --> 00:55:16,609
and fun fact plugins can have plugins so

00:55:14,240 --> 00:55:20,059
even inside of this plug-in I can have

00:55:16,609 --> 00:55:21,920
my little children plugins and this is

00:55:20,059 --> 00:55:24,290
and and that's just that's just because

00:55:21,920 --> 00:55:27,799
how big markdown is so imagine writing a

00:55:24,290 --> 00:55:29,420
markdown folder and you put in a URL of

00:55:27,799 --> 00:55:30,290
a tweet and it just generates that tweet

00:55:29,420 --> 00:55:31,730
component for you

00:55:30,290 --> 00:55:35,869
that's a plug-in that's the OEM bid

00:55:31,730 --> 00:55:37,970
plug-in and and and you know and all

00:55:35,869 --> 00:55:41,390
sorts of and all sorts of things so

00:55:37,970 --> 00:55:44,510
basically the the main the main area you

00:55:41,390 --> 00:55:46,250
search is here the naming syntax is not

00:55:44,510 --> 00:55:47,329
enforced so some of them can be named

00:55:46,250 --> 00:55:51,079
something else but they actually doing

00:55:47,329 --> 00:55:53,119
that job I'm I've complained to them

00:55:51,079 --> 00:55:56,720
about that I think that they should fix

00:55:53,119 --> 00:56:01,130
that but basically let's let's just kind

00:55:56,720 --> 00:56:05,089
of go through the plugin material so so

00:56:01,130 --> 00:56:07,460
yeah so earlier earlier we already I'm

00:56:05,089 --> 00:56:09,079
just gonna go in here so earlier already

00:56:07,460 --> 00:56:11,119
familiarize ourselves with the site

00:56:09,079 --> 00:56:13,460
metadata it's just a JSON blob that we

00:56:11,119 --> 00:56:15,020
can request our title from our site

00:56:13,460 --> 00:56:16,609
title from but now we're going to

00:56:15,020 --> 00:56:19,460
concern ourselves with the plugins array

00:56:16,609 --> 00:56:23,359
inside of here right now it's empty I

00:56:19,460 --> 00:56:27,200
think yeah I've just left it empty as a

00:56:23,359 --> 00:56:30,559
comment field we're going to start using

00:56:27,200 --> 00:56:32,329
gas resource file system so the syntax

00:56:30,559 --> 00:56:34,940
of plugins if you're using it without

00:56:32,329 --> 00:56:36,980
options it's just a string here I have

00:56:34,940 --> 00:56:39,440
gatsby plug-in here it doesn't really

00:56:36,980 --> 00:56:40,760
matter so that's very simple and it's

00:56:39,440 --> 00:56:42,829
nice to see a whole bunch of strings but

00:56:40,760 --> 00:56:45,950
once you need to start to apply once you

00:56:42,829 --> 00:56:47,540
need to supply options that's where you

00:56:45,950 --> 00:56:49,700
get to start this pretty ugly syntax

00:56:47,540 --> 00:56:51,920
where it's like resolved and then the

00:56:49,700 --> 00:56:53,660
plug-in name and then options and then

00:56:51,920 --> 00:56:56,480
it's an arbitrary JSON again of whatever

00:56:53,660 --> 00:56:58,490
you want to pass in this looks like this

00:56:56,480 --> 00:57:00,410
looks ugly but it's very expressive

00:56:58,490 --> 00:57:02,869
because you can use JavaScript to create

00:57:00,410 --> 00:57:04,160
the objects however way you like you can

00:57:02,869 --> 00:57:05,990
combine it in different ways you can

00:57:04,160 --> 00:57:07,880
fetch data from somewhere else and pull

00:57:05,990 --> 00:57:08,810
it in it's really up to you how you want

00:57:07,880 --> 00:57:11,690
to

00:57:08,810 --> 00:57:15,320
create these options so it's maximum

00:57:11,690 --> 00:57:17,210
expressiveness so so what I'm gonna do

00:57:15,320 --> 00:57:18,980
and demo for you here is to implement

00:57:17,210 --> 00:57:21,800
the gas resource file system plugin

00:57:18,980 --> 00:57:23,540
we've already npm installed it most most

00:57:21,800 --> 00:57:25,330
ghastly setups will have it installed

00:57:23,540 --> 00:57:29,450
but just double check in case you get a

00:57:25,330 --> 00:57:31,430
unrecognized error so over here I have a

00:57:29,450 --> 00:57:33,800
guest resource file system

00:57:31,430 --> 00:57:36,080
it's consits I'm teaching it to consume

00:57:33,800 --> 00:57:37,880
one of the folders right here I have

00:57:36,080 --> 00:57:42,680
some sample content inside of source

00:57:37,880 --> 00:57:45,830
slash inside of slash content I have my

00:57:42,680 --> 00:57:47,390
first post this is marked down this

00:57:45,830 --> 00:57:49,040
thing at the top is front matter that's

00:57:47,390 --> 00:57:52,490
metadata for your posts that's data

00:57:49,040 --> 00:57:55,250
about your host that's my second post so

00:57:52,490 --> 00:57:58,520
I wonder if it's consume stuff so I'm

00:57:55,250 --> 00:58:00,860
gonna get it to consume it I'm gonna

00:57:58,520 --> 00:58:03,080
give it a name like content I'm gonna

00:58:00,860 --> 00:58:05,660
give it a path I don't need this path

00:58:03,080 --> 00:58:11,750
that join because I can just use their

00:58:05,660 --> 00:58:15,470
name and I'm gonna say a Content dirty

00:58:11,750 --> 00:58:17,330
name is an OGS concept I think a lot of

00:58:15,470 --> 00:58:19,700
people know but I wasn't I wasn't that

00:58:17,330 --> 00:58:21,860
clear so their name is just the kernel

00:58:19,700 --> 00:58:24,620
working directory of the the folder you

00:58:21,860 --> 00:58:26,600
are running this this process form right

00:58:24,620 --> 00:58:30,100
so so Karl my carnal working directory

00:58:26,600 --> 00:58:32,180
is Jeff's tech jumpstart slash site

00:58:30,100 --> 00:58:35,330
that's my that's my current working

00:58:32,180 --> 00:58:38,920
directory so when I when I say your name

00:58:35,330 --> 00:58:42,530
I have their name slash content that is

00:58:38,920 --> 00:58:44,060
going to be site / content and

00:58:42,530 --> 00:58:45,620
everything inside this folder is going

00:58:44,060 --> 00:58:48,710
to be markdown files that is consumed

00:58:45,620 --> 00:58:49,880
right so so I have that I have that set

00:58:48,710 --> 00:58:52,640
up and that's why that's our first

00:58:49,880 --> 00:58:54,770
plugin and if I want to go and start

00:58:52,640 --> 00:59:03,460
again which is Gatsby develop under the

00:58:54,770 --> 00:59:03,460
hood we're going to see in our graphical

00:59:05,160 --> 00:59:09,120
we're gonna see no graphical new notes

00:59:07,020 --> 00:59:12,200
remember what I said about notes these

00:59:09,120 --> 00:59:15,180
are all notes in this case it's a file

00:59:12,200 --> 00:59:19,230
that's what that's what the source plug

00:59:15,180 --> 00:59:22,670
in as for you it has an ID but it also

00:59:19,230 --> 00:59:26,160
has absolute path let's just do the path

00:59:22,670 --> 00:59:29,010
relative path over so you can see over

00:59:26,160 --> 00:59:34,290
here that now Gatsby has a sense of what

00:59:29,010 --> 00:59:37,920
my what my files are I can add in a

00:59:34,290 --> 00:59:40,110
third post it's just really bang it over

00:59:37,920 --> 00:59:41,490
the head with this one because I think

00:59:40,110 --> 00:59:43,920
this is one this is where people start

00:59:41,490 --> 00:59:48,390
to shape up because it's no longer just

00:59:43,920 --> 00:59:50,490
j/s it's understanding the API so Gatsby

00:59:48,390 --> 00:59:51,750
I don't know if it harvey loads I hope

00:59:50,490 --> 00:59:55,860
so

00:59:51,750 --> 00:59:59,490
hey Harvey loads ok so so pretty clear

00:59:55,860 --> 01:00:01,020
right so now we have to take this and

00:59:59,490 --> 01:00:06,030
then we have to transform it so that's

01:00:01,020 --> 01:00:07,500
the next part of my thing styling a same

01:00:06,030 --> 01:00:09,540
thing you need to do server-side

01:00:07,500 --> 01:00:10,980
rendering it takes advantage of other

01:00:09,540 --> 01:00:12,930
stuff we're just gonna skip that because

01:00:10,980 --> 01:00:15,750
I don't have time but definitely try to

01:00:12,930 --> 01:00:17,880
practice it because that avoids the

01:00:15,750 --> 01:00:20,640
flash of unstyled content that you get

01:00:17,880 --> 01:00:22,230
with CSS NGS right if you want to use

01:00:20,640 --> 01:00:23,670
something CSS guess like style

01:00:22,230 --> 01:00:26,850
components you want to definitely

01:00:23,670 --> 01:00:29,310
server-side render that styling so we

01:00:26,850 --> 01:00:31,320
explain source plugins already this

01:00:29,310 --> 01:00:34,620
gives you an idea of what else plugins

01:00:31,320 --> 01:00:37,410
you can get I just went through this

01:00:34,620 --> 01:00:39,930
exercise I'm sorry ok so now we're gonna

01:00:37,410 --> 01:00:41,880
transform the source the markdown files

01:00:39,930 --> 01:00:43,470
right like here we know here we know

01:00:41,880 --> 01:00:44,640
they're they're markdown files we're

01:00:43,470 --> 01:00:47,280
gonna transform them with Gatsby

01:00:44,640 --> 01:00:53,460
transform a remark that's still where

01:00:47,280 --> 01:00:54,480
the hell is my okay so we're just we

01:00:53,460 --> 01:01:00,680
don't need options we're just gonna

01:00:54,480 --> 01:01:00,680
stick it in there so it's going to be in

01:01:01,220 --> 01:01:08,369
just in here order does matter so you

01:01:05,519 --> 01:01:10,859
want a place you want to place the thing

01:01:08,369 --> 01:01:16,200
that works on the previous thing after

01:01:10,859 --> 01:01:18,539
the thing you know what I mean we mark

01:01:16,200 --> 01:01:21,029
itself has has extra plugins and options

01:01:18,539 --> 01:01:22,740
go definitely go read those things

01:01:21,029 --> 01:01:24,299
because it's very very useful for your

01:01:22,740 --> 01:01:26,490
content writing especially if you're

01:01:24,299 --> 01:01:28,799
writing a pretty dynamic content

01:01:26,490 --> 01:01:30,599
my personal my personal project is I

01:01:28,799 --> 01:01:32,700
want to embed YouTube in like I want to

01:01:30,599 --> 01:01:35,220
put a youtube link and it just inflates

01:01:32,700 --> 01:01:36,359
into a nice YouTube logo inside of my

01:01:35,220 --> 01:01:38,250
markdown which is pretty cool

01:01:36,359 --> 01:01:39,990
the last JSI right the better right yes

01:01:38,250 --> 01:01:42,650
it should only be for a dynamic custom

01:01:39,990 --> 01:01:45,299
stuff but if it's just straight content

01:01:42,650 --> 01:01:49,589
let's just leave it all to markdown so I

01:01:45,299 --> 01:01:52,349
have guess we transform every mark and

01:01:49,589 --> 01:01:56,130
and now I have to do the thing where I

01:01:52,349 --> 01:01:57,930
say okay everything is in graphical I'm

01:01:56,130 --> 01:01:59,010
gonna show I'm gonna show that later but

01:01:57,930 --> 01:02:00,779
now I have to do the thing where I say I

01:01:59,010 --> 01:02:03,839
have a template for all the markdown and

01:02:00,779 --> 01:02:06,210
I'm gonna programmatically generate for

01:02:03,839 --> 01:02:08,000
each file my timer timer down run it

01:02:06,210 --> 01:02:13,079
through the template and generate that

01:02:08,000 --> 01:02:16,799
HTML every time let's actually show you

01:02:13,079 --> 01:02:18,690
the markdown so look here there's

01:02:16,799 --> 01:02:21,000
there's only all they're actually off

01:02:18,690 --> 01:02:23,609
our off-site page it's very small so you

01:02:21,000 --> 01:02:27,450
can see it but okay so no mention of our

01:02:23,609 --> 01:02:31,619
markdown right when I killed it and

01:02:27,450 --> 01:02:34,369
refresh it it should because now I have

01:02:31,619 --> 01:02:34,369
the plugins

01:02:35,270 --> 01:02:42,040
I need to reinstall it what its name

01:02:42,190 --> 01:02:46,070
okay well you're gonna have to reinstall

01:02:44,930 --> 01:02:47,690
it as well because I didn't I didn't

01:02:46,070 --> 01:02:55,190
include it I thought I did

01:02:47,690 --> 01:02:56,720
oh okay my bed yeah you have to install

01:02:55,190 --> 01:03:00,440
the dependency gatsby transformer we

01:02:56,720 --> 01:03:02,680
market that's that's just because I left

01:03:00,440 --> 01:03:02,680
it out

01:03:06,680 --> 01:03:13,080
okay so if i refresh this now you can

01:03:10,440 --> 01:03:16,520
see inside of my graphical I have this

01:03:13,080 --> 01:03:19,170
new thing called all markdown remark

01:03:16,520 --> 01:03:22,890
which is an honest super intuitive name

01:03:19,170 --> 01:03:27,210
but it's good enough where we can start

01:03:22,890 --> 01:03:30,000
seeing the content that we add added in

01:03:27,210 --> 01:03:32,670
so here first post second post their

01:03:30,000 --> 01:03:34,380
posts now it's not just a file path

01:03:32,670 --> 01:03:36,840
right now I'm reading the file and

01:03:34,380 --> 01:03:38,700
parsing it into these things which guess

01:03:36,840 --> 01:03:42,930
what it's I can query from graph Q all

01:03:38,700 --> 01:03:44,280
inside of my react components you've

01:03:42,930 --> 01:03:46,170
already started to do that a little bit

01:03:44,280 --> 01:03:50,550
on the site level now we are doing it on

01:03:46,170 --> 01:03:52,530
the content level so what we need to do

01:03:50,550 --> 01:03:54,510
is we need to we need to basically do

01:03:52,530 --> 01:03:57,840
this query do this all Mart Darby

01:03:54,510 --> 01:04:00,960
mercury get this array of nodes and then

01:03:57,840 --> 01:04:05,220
for each node we will pass this into our

01:04:00,960 --> 01:04:06,930
our template as props the props will do

01:04:05,220 --> 01:04:09,450
whatever you want with them right you

01:04:06,930 --> 01:04:12,600
just render a JSX and then that will be

01:04:09,450 --> 01:04:20,060
your your generated page okay to do that

01:04:12,600 --> 01:04:22,770
oh my computer died no I might okay

01:04:20,060 --> 01:04:24,360
this is this is showing but okay all

01:04:22,770 --> 01:04:26,400
right sorry

01:04:24,360 --> 01:04:28,410
so to do that I'm going to walk you

01:04:26,400 --> 01:04:30,300
through it I'm being extra careful with

01:04:28,410 --> 01:04:36,270
this because this is where people really

01:04:30,300 --> 01:04:37,950
screw up so so I'm gonna I'm just gonna

01:04:36,270 --> 01:04:41,460
use this default template that I put in

01:04:37,950 --> 01:04:42,450
my own notes it's pretty much gonna be

01:04:41,460 --> 01:04:44,550
exactly the same

01:04:42,450 --> 01:04:47,820
actually I think I already provided it

01:04:44,550 --> 01:04:50,940
source templates oh no I don't have it

01:04:47,820 --> 01:04:53,850
so I'm gonna make it a page template GS

01:04:50,940 --> 01:04:56,970
and here I'm gonna paste it in there it

01:04:53,850 --> 01:05:00,450
should be pretty much yeah exactly that

01:04:56,970 --> 01:05:02,340
okay so that's inside my sword slash

01:05:00,450 --> 01:05:04,590
templates folder just be very aware of

01:05:02,340 --> 01:05:07,740
what what folder were working in we have

01:05:04,590 --> 01:05:09,660
some people with issues earlier so

01:05:07,740 --> 01:05:12,600
inside of Gath we know no GS we're gonna

01:05:09,660 --> 01:05:13,920
create pages programmatically I'll copy

01:05:12,600 --> 01:05:16,460
and paste this in and then I'll explain

01:05:13,920 --> 01:05:16,460
what the code does

01:05:17,750 --> 01:05:23,100
okay so that what I copied from from our

01:05:21,300 --> 01:05:25,950
notes should be the only thing that is

01:05:23,100 --> 01:05:29,760
in Kathleen ojs even though I left some

01:05:25,950 --> 01:05:33,380
comments in there for future stuff okay

01:05:29,760 --> 01:05:35,760
so what does it do this uses this has

01:05:33,380 --> 01:05:37,200
here we're using an own API remember

01:05:35,760 --> 01:05:39,120
we're doing server-side rendering in

01:05:37,200 --> 01:05:44,550
known that's why you have this weird

01:05:39,120 --> 01:05:46,500
exports dot syntax we saying create

01:05:44,550 --> 01:05:49,230
create pages it's I guess it's gonna

01:05:46,500 --> 01:05:51,630
pass to us there Redux actions

01:05:49,230 --> 01:05:53,790
gastly internally has all of its

01:05:51,630 --> 01:05:56,460
operations done via redux as well as a

01:05:53,790 --> 01:05:59,700
graphical helper to to transform

01:05:56,460 --> 01:06:01,230
graphical requests okay then we're gonna

01:05:59,700 --> 01:06:04,530
get the page template the one that we

01:06:01,230 --> 01:06:07,040
just created right that's just your J s

01:06:04,530 --> 01:06:10,020
react component then we're going to

01:06:07,040 --> 01:06:12,870
we're going to return a promise the

01:06:10,020 --> 01:06:15,330
promise is graph QL is a graphical query

01:06:12,870 --> 01:06:18,480
it's exactly what we just query just now

01:06:15,330 --> 01:06:20,100
all right don't be mark it has some

01:06:18,480 --> 01:06:22,080
optional fields that feels don't really

01:06:20,100 --> 01:06:25,500
matter probably the one that does matter

01:06:22,080 --> 01:06:26,880
is that you want to sort by date so it's

01:06:25,500 --> 01:06:29,220
all defined here you can play around

01:06:26,880 --> 01:06:31,140
with if you're not sure what it is right

01:06:29,220 --> 01:06:34,670
you can go over here and you can say

01:06:31,140 --> 01:06:41,820
like date sorry all more dumb remark

01:06:34,670 --> 01:06:47,790
sort fields what is the date

01:06:41,820 --> 01:06:49,710
they order ascending so so what what

01:06:47,790 --> 01:06:52,560
graphical is right is is a way for you

01:06:49,710 --> 01:06:55,920
to prototype this exact query and you

01:06:52,560 --> 01:06:59,940
literally just copy and paste into here

01:06:55,920 --> 01:07:02,070
make sense okay so if you need anything

01:06:59,940 --> 01:07:05,730
else if you need any other changes just

01:07:02,070 --> 01:07:07,800
study that understand the API if you

01:07:05,730 --> 01:07:10,410
need Docs is over here this is standard

01:07:07,800 --> 01:07:11,790
graphical stuff again I don't have time

01:07:10,410 --> 01:07:14,280
to cover that and this is probably

01:07:11,790 --> 01:07:15,330
overkill because all auto-generated but

01:07:14,280 --> 01:07:17,880
there's something in there that's gonna

01:07:15,330 --> 01:07:19,650
be pretty helpful personally I like to

01:07:17,880 --> 01:07:22,670
learn by just seeing what other people

01:07:19,650 --> 01:07:25,140
do so I just study other source codes

01:07:22,670 --> 01:07:26,550
but it is very very expressive and

01:07:25,140 --> 01:07:28,500
powerful because the amount that you

01:07:26,550 --> 01:07:30,600
have to code is just very very minimal

01:07:28,500 --> 01:07:32,580
you're just using tools which is very

01:07:30,600 --> 01:07:34,530
nice I think as coders which is we

01:07:32,580 --> 01:07:37,650
should try to do as little coding as we

01:07:34,530 --> 01:07:38,640
want as we can so then the last part is

01:07:37,650 --> 01:07:40,920
very simple right

01:07:38,640 --> 01:07:42,840
we dot then on the promise so now we get

01:07:40,920 --> 01:07:46,380
all the results of the graphical query

01:07:42,840 --> 01:07:48,660
right assuming has no errors we're gonna

01:07:46,380 --> 01:07:50,400
say result data are marked on the edges

01:07:48,660 --> 01:07:54,690
stop for each that's the for each that

01:07:50,400 --> 01:07:58,230
we wanted right so for each node each

01:07:54,690 --> 01:08:00,240
notice is this thing right for each node

01:07:58,230 --> 01:08:01,590
we have frontmatter date format it up

01:08:00,240 --> 01:08:06,240
slug fermented Oh tags

01:08:01,590 --> 01:08:10,890
we're just gonna pass that in as as a

01:08:06,240 --> 01:08:14,940
slug for example and actually I should

01:08:10,890 --> 01:08:17,730
pass in more information than that yeah

01:08:14,940 --> 01:08:19,710
I might regret this but anyway so so

01:08:17,730 --> 01:08:21,540
there was never specify page template

01:08:19,710 --> 01:08:24,089
that's the thing that we that we that we

01:08:21,540 --> 01:08:25,589
resolved earlier in not just with the

01:08:24,089 --> 01:08:28,560
net result that we're passing in

01:08:25,589 --> 01:08:33,990
everything to page template and we have

01:08:28,560 --> 01:08:36,420
this prop called data and now and so so

01:08:33,990 --> 01:08:37,950
so now we've we've generated each page

01:08:36,420 --> 01:08:40,710
and each page will be called first post

01:08:37,950 --> 01:08:42,660
second post their posts and all we need

01:08:40,710 --> 01:08:45,030
has been the path that the slug of these

01:08:42,660 --> 01:08:47,190
things inside the page we'll do another

01:08:45,030 --> 01:08:49,890
query this is this is inside page

01:08:47,190 --> 01:08:53,160
template is we do another query this is

01:08:49,890 --> 01:08:54,869
a page query you export Const page query

01:08:53,160 --> 01:08:56,579
that's a static

01:08:54,869 --> 01:08:58,289
typically in the inner page you have

01:08:56,579 --> 01:08:59,849
like a default export default right

01:08:58,289 --> 01:09:02,039
that's that's your that's what the page

01:08:59,849 --> 01:09:03,900
is if you want to have a page level

01:09:02,039 --> 01:09:05,699
query you just export page query that's

01:09:03,900 --> 01:09:08,339
the magic variable that that gets me

01:09:05,699 --> 01:09:10,889
looks for and you and you do whatever

01:09:08,339 --> 01:09:13,589
query that you need so the incoming

01:09:10,889 --> 01:09:14,940
variable is the path like I know my path

01:09:13,589 --> 01:09:17,219
right now all right I'm gonna query for

01:09:14,940 --> 01:09:19,319
all the things that match my path and I

01:09:17,219 --> 01:09:24,630
need all this on this variable all this

01:09:19,319 --> 01:09:26,849
data so what we're going to do I hope

01:09:24,630 --> 01:09:31,440
that was right I see some errors so I

01:09:26,849 --> 01:09:40,469
might have some copy-paste errors yeah I

01:09:31,440 --> 01:09:43,069
think I have call P Pacers or may have

01:09:40,469 --> 01:09:43,069
slug

01:09:52,759 --> 01:09:59,340
let's see

01:09:54,959 --> 01:10:01,619
yeah okay so so I think I have a I think

01:09:59,340 --> 01:10:02,670
I have a bug in here in my in my own in

01:10:01,619 --> 01:10:05,039
my own code

01:10:02,670 --> 01:10:08,880
we'll see what see what that is so I

01:10:05,039 --> 01:10:10,860
guess showing debugging is helpful so

01:10:08,880 --> 01:10:12,510
I'm gonna take a look at this pipe I'm

01:10:10,860 --> 01:10:14,249
clearly specifying something wrong on

01:10:12,510 --> 01:10:16,530
the type so I'm just gonna look for this

01:10:14,249 --> 01:10:19,469
type and it says title slug date or tags

01:10:16,530 --> 01:10:22,920
so I actually means slug I did not mean

01:10:19,469 --> 01:10:24,900
path so the way to fix it is to show the

01:10:22,920 --> 01:10:28,920
page template and instead of half I'm

01:10:24,900 --> 01:10:34,579
just gonna say slug this should be also

01:10:28,920 --> 01:10:34,579
slug I think this is also slug

01:10:35,150 --> 01:10:42,690
you already fix it for me uh-huh hey

01:10:40,409 --> 01:10:47,070
okay so let's look let's look at the 404

01:10:42,690 --> 01:10:49,530
page assuming my for my former page is

01:10:47,070 --> 01:10:50,969
still okay what whatever your vit I

01:10:49,530 --> 01:10:52,739
don't know what screwed up with my 4

01:10:50,969 --> 01:10:57,510
page I don't have time to look to fix it

01:10:52,739 --> 01:10:59,989
but yours yours should work let me let

01:10:57,510 --> 01:11:02,070
me try and refresh this and have a look

01:10:59,989 --> 01:11:09,599
no don't leave I should I swear I

01:11:02,070 --> 01:11:11,730
promise I said I'm good at this ok you

01:11:09,599 --> 01:11:12,869
know what I don't care anymore like I'm

01:11:11,730 --> 01:11:14,730
gonna I'm gonna what I'm gonna do this

01:11:12,869 --> 01:11:20,610
I'm gonna yarn build and I'm gonna show

01:11:14,730 --> 01:11:22,789
you that build result ah oh did I mean

01:11:20,610 --> 01:11:22,789
date

01:11:25,100 --> 01:11:31,070
what is this markdown remote fun better

01:11:31,100 --> 01:11:45,800
I think I think I skipped something 8:10

01:11:38,060 --> 01:11:45,800
what did I do what's it

01:11:47,040 --> 01:12:03,810
oh they should be slug ah alright run

01:11:58,170 --> 01:12:07,400
the build um yeah this is this is

01:12:03,810 --> 01:12:10,949
something I don't enjoy about working

01:12:07,400 --> 01:12:12,239
this low level you do you do run into a

01:12:10,949 --> 01:12:15,239
lot of debugging and you need to know

01:12:12,239 --> 01:12:16,620
what's going on but that's that makes

01:12:15,239 --> 01:12:20,520
that makes the future a lot brighter

01:12:16,620 --> 01:12:22,020
actually right so I think the path

01:12:20,520 --> 01:12:24,679
variable has to be named path because I

01:12:22,020 --> 01:12:24,679
named it path here

01:12:30,010 --> 01:12:41,690
cannot be properly for a matter of no I

01:12:33,520 --> 01:12:46,160
see some markdown Lamarckism no what

01:12:41,690 --> 01:12:48,860
would happy no I'm not sure okay I'm not

01:12:46,160 --> 01:12:52,670
sure I'm not sure about this this build

01:12:48,860 --> 01:12:53,900
anymore I'm sorry that's just let's just

01:12:52,670 --> 01:12:55,700
try to get it running on the under dev

01:12:53,900 --> 01:13:00,340
server and then I'll fix the the

01:12:55,700 --> 01:13:03,710
production build cool second post

01:13:00,340 --> 01:13:06,140
alright so so my data my data is off how

01:13:03,710 --> 01:13:10,030
would how would fix this is just the

01:13:06,140 --> 01:13:13,010
console log yet because because I'm

01:13:10,030 --> 01:13:15,460
expecting something which doesn't seem

01:13:13,010 --> 01:13:15,460
to be there

01:13:28,430 --> 01:13:35,430
so my data object is has data and its

01:13:31,710 --> 01:13:38,030
markdown remark on now so so something

01:13:35,430 --> 01:13:40,110
in my query is not working it's not

01:13:38,030 --> 01:13:43,050
right

01:13:40,110 --> 01:13:49,470
so how would debug this is I'll go in my

01:13:43,050 --> 01:13:51,770
page template go over here I think this

01:13:49,470 --> 01:13:51,770
is it

01:13:51,810 --> 01:13:55,950
I need my path variable if you spot

01:13:54,840 --> 01:14:04,860
anything I'm doing wrong on them you

01:13:55,950 --> 01:14:09,060
know first first yeah I have my first

01:14:04,860 --> 01:14:11,520
post okay so so right now I'm trying to

01:14:09,060 --> 01:14:13,980
debug like why am i markdown is my

01:14:11,520 --> 01:14:16,350
markdown remark here my margin remark

01:14:13,980 --> 01:14:18,930
here is no and I and I don't expect that

01:14:16,350 --> 01:14:21,580
to happen basically because I think

01:14:18,930 --> 01:14:23,840
something is not matching correctly

01:14:21,580 --> 01:14:26,370
[Music]

01:14:23,840 --> 01:14:30,060
therefore I need to figure this out so

01:14:26,370 --> 01:14:32,430
so if all this is correct this query

01:14:30,060 --> 01:14:36,870
works that means I'm not getting the the

01:14:32,430 --> 01:14:42,890
path query that I that I want I suspect

01:14:36,870 --> 01:14:42,890
this because I'm not getting this page

01:14:43,340 --> 01:14:52,350
I'm so sorry guys

01:14:45,510 --> 01:14:58,200
let me just ninja a ninja debug okay so

01:14:52,350 --> 01:15:01,320
I have my slug working that's helpful

01:14:58,200 --> 01:15:13,170
anyone see it yet and I'm I'm lost I I

01:15:01,320 --> 01:15:33,950
think they should be working first pose

01:15:13,170 --> 01:15:36,330
second post I'm not quite sure okay yeah

01:15:33,950 --> 01:15:39,450
just give me a give me a second while I

01:15:36,330 --> 01:15:42,030
figure this out but in general the the

01:15:39,450 --> 01:15:45,300
plugins are that if are the hardest part

01:15:42,030 --> 01:15:50,310
of Gatsby which is why I should have

01:15:45,300 --> 01:15:52,380
prepped for this more okay you know why

01:15:50,310 --> 01:15:57,290
because I think I changed the name of

01:15:52,380 --> 01:16:00,570
all the thing from slug to post I

01:15:57,290 --> 01:16:03,780
shouldn't have done that I like to I

01:16:00,570 --> 01:16:08,550
like to call it slug rather than 400

01:16:03,780 --> 01:16:13,800
never mind sorry sorry sorry sorry I'm

01:16:08,550 --> 01:16:16,350
fixing interesting I'm just gonna remove

01:16:13,800 --> 01:16:20,520
all mention of slug because it used to

01:16:16,350 --> 01:16:22,130
work before and then I intelligently

01:16:20,520 --> 01:16:25,370
will change things I've asked me to

01:16:22,130 --> 01:16:25,370
don't do that

01:16:28,239 --> 01:16:31,239
so

01:16:38,410 --> 01:16:42,000
still gonna be fun better know

01:16:45,070 --> 01:16:51,010
if anyone if anyone's experience it gets

01:16:47,320 --> 01:16:54,330
me and see something wrong please shout

01:16:51,010 --> 01:16:57,330
out the answer because I'm a bit lost

01:16:54,330 --> 01:16:57,330
yeah

01:17:11,370 --> 01:17:14,370
anything

01:17:25,090 --> 01:17:31,190
yeah so the pace curry I I can I can get

01:17:28,700 --> 01:17:32,300
the exact thing that I want I'm just

01:17:31,190 --> 01:17:35,300
running the quarry this this should be

01:17:32,300 --> 01:17:40,300
in the query it's not no so that means

01:17:35,300 --> 01:17:40,300
that I'm getting the wrong info here

01:17:45,010 --> 01:17:52,430
yeah yeah okay so I'm gonna I'm gonna

01:17:49,820 --> 01:17:54,590
bring up the docs for page Corey sorry I

01:17:52,430 --> 01:17:57,200
just like configure the wrong thing

01:17:54,590 --> 01:17:58,520
feel free to read like the rest of gassy

01:17:57,200 --> 01:18:05,030
plugins so I'm gonna figure this out

01:17:58,520 --> 01:18:07,880
don't worry to be sick that's be great

01:18:05,030 --> 01:18:15,310
fortunately the docs are pretty pretty

01:18:07,880 --> 01:18:15,310
handy so there's a way to have the input

01:18:16,670 --> 01:18:18,700
ah

01:18:36,409 --> 01:18:40,099
that isn't even Paul

01:19:00,400 --> 01:19:07,740
so sorry no I'm still figuring it out if

01:19:04,210 --> 01:19:07,740
anyone knows what's going on let me know

01:19:24,469 --> 01:19:32,120
what do you mean did I doubt did I not

01:19:30,000 --> 01:19:32,120
do that

01:19:35,770 --> 01:19:40,690
be honest I think context is for other

01:19:38,360 --> 01:19:40,690
stuff

01:19:45,730 --> 01:19:48,780
give me a sec

01:19:55,040 --> 01:20:06,020
yeah yes

01:19:56,880 --> 01:20:13,670
stupid SEO yeah we need a past context

01:20:06,020 --> 01:20:13,670
what am i passing context path one line

01:20:17,270 --> 01:20:22,470
okay well that was super annoying you

01:20:20,610 --> 01:20:26,010
needed to pass context into the path so

01:20:22,470 --> 01:20:28,170
basically inside of gatsby node we have

01:20:26,010 --> 01:20:30,330
that string we need to pass the string

01:20:28,170 --> 01:20:32,940
so that it can be the source of that

01:20:30,330 --> 01:20:38,850
query for the page template to query

01:20:32,940 --> 01:20:41,990
things with TI l right TI oh so now we

01:20:38,850 --> 01:20:41,990
have a different error that's progress

01:20:55,349 --> 01:21:06,420
I think I just need to refresh huh

01:21:01,610 --> 01:21:12,150
okay shoot what's up in order to show

01:21:06,420 --> 01:21:16,560
that yeah let me just refresh to confirm

01:21:12,150 --> 01:21:18,630
that I am completely okay oh okay

01:21:16,560 --> 01:21:22,320
oh look look at this that's a cache

01:21:18,630 --> 01:21:23,969
error this happens so sometimes the

01:21:22,320 --> 01:21:26,760
cache invalidation fails because you're

01:21:23,969 --> 01:21:31,829
making some edits that are that are off

01:21:26,760 --> 01:21:36,869
of Gatsby node I need to just delete the

01:21:31,829 --> 01:21:39,449
cache and we run again huh yeah that's

01:21:36,869 --> 01:21:41,099
that's one of the problems that people

01:21:39,449 --> 01:21:46,560
experience I guess you will understand

01:21:41,099 --> 01:21:57,270
is cache invalidation is hard it's still

01:21:46,560 --> 01:21:59,659
it's still not okay you think yeah I

01:21:57,270 --> 01:22:04,340
changed it from slowly it's locked

01:21:59,659 --> 01:22:04,340
okay so let's change it back to slug

01:22:04,760 --> 01:22:11,030
they start from the caffeine oh I didn't

01:22:09,290 --> 01:22:14,710
mess up anything like with the end

01:22:11,030 --> 01:22:18,980
people yeah that's my fault

01:22:14,710 --> 01:22:23,620
okay so I guess we know yeah

01:22:18,980 --> 01:22:23,620
if one is needed to be a slob

01:22:24,070 --> 01:22:27,710
yeah I know I just changed it around

01:22:26,060 --> 01:22:30,350
because I thought that I didn't want to

01:22:27,710 --> 01:22:32,300
confuse the things and then the other

01:22:30,350 --> 01:22:34,070
clear finish and singing I'm not really

01:22:32,300 --> 01:22:43,190
sure but I am looking into the doc you

01:22:34,070 --> 01:22:51,739
needed to sing the part you think that's

01:22:43,190 --> 01:22:53,030
it and oh there's no slug here man I

01:22:51,739 --> 01:22:59,950
hate JavaScript look how many dudes

01:22:53,030 --> 01:22:59,950
touch good thank you

01:23:02,290 --> 01:23:08,150
yeah I've run into this kind of thing a

01:23:05,180 --> 01:23:10,100
lot and it does it does it does really

01:23:08,150 --> 01:23:20,719
suck

01:23:10,100 --> 01:23:22,969
I swear no gasp you guys but the idea

01:23:20,719 --> 01:23:24,770
the idea is there right like hopefully I

01:23:22,969 --> 01:23:28,550
brought you through the process of

01:23:24,770 --> 01:23:30,469
consume transform and then I have a

01:23:28,550 --> 01:23:33,110
template and then you inside of Gatsby

01:23:30,469 --> 01:23:35,719
nodejs programmatically run through and

01:23:33,110 --> 01:23:39,080
generate there's a lot of little pieces

01:23:35,719 --> 01:23:40,550
and things can go wrong and you have to

01:23:39,080 --> 01:23:44,000
be careful it doesn't throw an error for

01:23:40,550 --> 01:23:45,680
example just now one of my mistakes one

01:23:44,000 --> 01:23:47,920
of my mistakes I'm gonna I'm gonna push

01:23:45,680 --> 01:23:50,410
this as well so you can just get pull

01:23:47,920 --> 01:23:52,940
[Music]

01:23:50,410 --> 01:23:54,460
like my commit log is just fix fix fix

01:23:52,940 --> 01:23:57,890
fix fix

01:23:54,460 --> 01:24:00,110
okay you can get Paul now but but but

01:23:57,890 --> 01:24:02,090
basically one of my mistakes if I didn't

01:24:00,110 --> 01:24:06,590
have a variable called slug defined here

01:24:02,090 --> 01:24:09,530
and I just I just said slug I tried to

01:24:06,590 --> 01:24:12,380
be fancy or I try try to be es6 and I

01:24:09,530 --> 01:24:16,310
just did slug slug is not defined and it

01:24:12,380 --> 01:24:17,610
didn't - an error that's that's going to

01:24:16,310 --> 01:24:18,720
be fixed like there there

01:24:17,610 --> 01:24:20,250
they're working on the error messages

01:24:18,720 --> 01:24:22,410
you just have to be aware of it

01:24:20,250 --> 01:24:24,570
especially cuz you're not working in any

01:24:22,410 --> 01:24:25,980
sort of type checking system that these

01:24:24,570 --> 01:24:27,750
these kinds of things might pop up just

01:24:25,980 --> 01:24:32,700
be very careful what you're what you're

01:24:27,750 --> 01:24:34,290
wiring together again they're plugins so

01:24:32,700 --> 01:24:36,600
what we're doing right is we're actually

01:24:34,290 --> 01:24:40,260
writing a small plugin for ourselves

01:24:36,600 --> 01:24:43,620
gets this this every plugin has access

01:24:40,260 --> 01:24:45,690
to the same api the create pages api the

01:24:43,620 --> 01:24:48,270
create an own api on create page life

01:24:45,690 --> 01:24:50,670
cycle hook all these things can be

01:24:48,270 --> 01:24:52,620
bundled up into a plugin so if I wrote

01:24:50,670 --> 01:24:53,790
this plug-in I can publish it on NPM you

01:24:52,620 --> 01:24:55,800
can install it and it will be

01:24:53,790 --> 01:24:57,930
automatically run for you so you don't

01:24:55,800 --> 01:25:00,270
have to code this this is low-level

01:24:57,930 --> 01:25:01,830
custom code that's why it's so funky and

01:25:00,270 --> 01:25:05,460
weird because you can do whatever you

01:25:01,830 --> 01:25:07,470
want right but the goal is to take take

01:25:05,460 --> 01:25:09,570
this low-level API build on top of it

01:25:07,470 --> 01:25:12,690
with plugins and we plugins build on top

01:25:09,570 --> 01:25:17,220
of that with beams so I mean we're

01:25:12,690 --> 01:25:22,140
eventually gonna go there so I'm very

01:25:17,220 --> 01:25:24,480
behind but yeah so I want you to get to

01:25:22,140 --> 01:25:26,730
this left gets this stage have some

01:25:24,480 --> 01:25:29,300
navigation if you want to have a blog

01:25:26,730 --> 01:25:32,880
index like with all the markdown files

01:25:29,300 --> 01:25:35,540
go ahead and do that if you're feeling

01:25:32,880 --> 01:25:37,920
adventurous go ahead and do the image

01:25:35,540 --> 01:25:42,930
plug-in install the image transformation

01:25:37,920 --> 01:25:45,210
I have a ghastly 3a the Gatsby image

01:25:42,930 --> 01:25:46,680
docks I don't expect to cover this here

01:25:45,210 --> 01:25:48,960
but I'll definitely go try it out on

01:25:46,680 --> 01:25:50,760
your own just to give you an intuition

01:25:48,960 --> 01:25:53,130
of why you want to use Gatsby image this

01:25:50,760 --> 01:25:56,970
images are one of the big performance

01:25:53,130 --> 01:25:59,940
bottlenecks in a site typically like

01:25:56,970 --> 01:26:01,200
even my company head is guilty of doing

01:25:59,940 --> 01:26:03,210
this that we will publish like a

01:26:01,200 --> 01:26:04,890
super-fast site but then a two megabyte

01:26:03,210 --> 01:26:05,280
image right there no one no one no one

01:26:04,890 --> 01:26:07,560
needs

01:26:05,280 --> 01:26:10,560
so what guess we image does is it

01:26:07,560 --> 01:26:12,240
transforms resize this and and serves

01:26:10,560 --> 01:26:15,140
the right one based on on your on your

01:26:12,240 --> 01:26:17,430
client and and it has these nice

01:26:15,140 --> 01:26:19,110
progressive loading features so this is

01:26:17,430 --> 01:26:21,450
the blob effect let me refresh you see

01:26:19,110 --> 01:26:24,120
that blur you see that blur it's sorry

01:26:21,450 --> 01:26:26,340
so it just shows that blur in an inline

01:26:24,120 --> 01:26:27,510
SVG and then once the image loads it

01:26:26,340 --> 01:26:29,460
just replaced with hot swaps

01:26:27,510 --> 01:26:31,419
I like this along the background color

01:26:29,460 --> 01:26:33,820
one just fades in very nice

01:26:31,419 --> 01:26:36,070
tres SVG shows the trace and then it

01:26:33,820 --> 01:26:38,889
fades in right these are all pre

01:26:36,070 --> 01:26:41,019
processing stages we have a source image

01:26:38,889 --> 01:26:43,059
file transform create all this like

01:26:41,019 --> 01:26:44,800
random crap and then and then have got

01:26:43,059 --> 01:26:46,179
to be image serve it for you

01:26:44,800 --> 01:26:50,739
web P I don't know what there's just

01:26:46,179 --> 01:26:52,749
whatever but yeah so there is a ton

01:26:50,739 --> 01:26:56,320
of functionality stuffed in here

01:26:52,749 --> 01:26:58,689
basically all to make your user

01:26:56,320 --> 01:27:00,399
experience fast but it also looks nice I

01:26:58,689 --> 01:27:02,229
think that's very impressive I think

01:27:00,399 --> 01:27:04,449
it's it's I seen it used in a bunch of

01:27:02,229 --> 01:27:07,209
e-commerce sites I do want to give you

01:27:04,449 --> 01:27:09,969
some inspiration so if anyone knows of

01:27:07,209 --> 01:27:11,530
Harry's the razor startup they actually

01:27:09,969 --> 01:27:15,550
started they actually launched their

01:27:11,530 --> 01:27:18,280
female brand this is the gatsby site and

01:27:15,550 --> 01:27:20,999
it stores you can see this this fading

01:27:18,280 --> 01:27:23,169
effect that's also progressive loading

01:27:20,999 --> 01:27:24,249
you can tell if something else itís

01:27:23,169 --> 01:27:25,599
guess we are not with this chrome

01:27:24,249 --> 01:27:28,019
plug-in

01:27:25,599 --> 01:27:33,070
it just shows it just shows a purple G

01:27:28,019 --> 01:27:35,019
yeah it's also it's a react site it's

01:27:33,070 --> 01:27:36,749
not another fight site I don't know I

01:27:35,019 --> 01:27:38,769
have I have a bunch of these just

01:27:36,749 --> 01:27:40,959
sniffing headers but you can actually

01:27:38,769 --> 01:27:44,260
look at the elements and just go like

01:27:40,959 --> 01:27:49,329
that's V you can see oh generator gets

01:27:44,260 --> 01:27:50,949
me 2.0 so so you know like there are

01:27:49,329 --> 01:27:52,809
there are a whole bunch of examples oh I

01:27:50,949 --> 01:27:53,139
should also give you okay I'm really bad

01:27:52,809 --> 01:27:54,820
at this

01:27:53,139 --> 01:27:58,570
that's why this is not my full-time job

01:27:54,820 --> 01:27:59,800
but here's the here's an example of size

01:27:58,570 --> 01:28:03,519
you can build good gatsby I should have

01:27:59,800 --> 01:28:05,919
sparked it with this they'll react GS

01:28:03,519 --> 01:28:09,389
Doc's isn't Gatsby you can clone it and

01:28:05,919 --> 01:28:09,389
and look at look at what's in there

01:28:10,499 --> 01:28:16,209
Airbnb is data science blog impossible

01:28:13,359 --> 01:28:21,820
foods the the fake meat the vegetarian

01:28:16,209 --> 01:28:23,139
eating bran calm is on Gatsby there's a

01:28:21,820 --> 01:28:25,479
there's a whole bunch of stuff it's

01:28:23,139 --> 01:28:27,579
mostly static sites are mostly marketing

01:28:25,479 --> 01:28:31,539
sites but increasingly you're going to

01:28:27,579 --> 01:28:33,839
get dynamic applications as well so

01:28:31,539 --> 01:28:38,530
let's see if there's any API sites oh

01:28:33,839 --> 01:28:41,589
this is more for like SendGrid and okay

01:28:38,530 --> 01:28:43,869
so yeah well we're gonna get to that

01:28:41,589 --> 01:28:45,100
part in the service section I just want

01:28:43,869 --> 01:28:48,790
you to go through the

01:28:45,100 --> 01:28:50,230
that I just went through and we have 20

01:28:48,790 --> 01:28:52,210
minutes for that I'll say I'll set some

01:28:50,230 --> 01:28:55,440
timers and we'll reconvene at 3:30 okay

01:28:52,210 --> 01:28:55,440
all right thank you

01:28:57,990 --> 01:29:01,399
[Applause]

01:29:02,340 --> 01:29:07,450
yeah thanks nice way for that I think I

01:29:05,320 --> 01:29:09,790
think one of the purposes that I had you

01:29:07,450 --> 01:29:11,440
clone all those sites is I really wanted

01:29:09,790 --> 01:29:13,450
to look at those the source codes for

01:29:11,440 --> 01:29:15,760
those things and I've given you the

01:29:13,450 --> 01:29:17,860
rough framework to understand what's

01:29:15,760 --> 01:29:20,200
going on in there it's a lot of node

01:29:17,860 --> 01:29:22,600
it's a lot of graph QL makes inside of

01:29:20,200 --> 01:29:24,520
node it's a lot of like is this

01:29:22,600 --> 01:29:29,050
undefined yeah all right let's go fix

01:29:24,520 --> 01:29:32,110
that but just keep in mind it's

01:29:29,050 --> 01:29:33,610
low-level stuff and we will build we'll

01:29:32,110 --> 01:29:35,380
build up over time and we'll just start

01:29:33,610 --> 01:29:38,020
using each other's plugins and and all

01:29:35,380 --> 01:29:40,900
that in fact I really want you to look

01:29:38,020 --> 01:29:42,820
at plug-in source code as well this is a

01:29:40,900 --> 01:29:47,500
really good exercise to understand that

01:29:42,820 --> 01:29:50,170
there's no magic so just pick any random

01:29:47,500 --> 01:29:53,470
plug-in I'm gonna pick a source plug-in

01:29:50,170 --> 01:29:55,810
let's just call it Shopify gasps we saw

01:29:53,470 --> 01:29:58,630
Shopify okay it's an official plug-in

01:29:55,810 --> 01:30:01,180
I'm gonna view plug-in on github so this

01:29:58,630 --> 01:30:04,810
is maintained by the Gaspee team inside

01:30:01,180 --> 01:30:08,800
of here it's got some readme it's got

01:30:04,810 --> 01:30:12,270
some package JSON nothing much like it

01:30:08,800 --> 01:30:15,610
can install its own dependencies right

01:30:12,270 --> 01:30:17,470
and inside of the source code what do

01:30:15,610 --> 01:30:19,870
you have it's got to be no js' it's the

01:30:17,470 --> 01:30:21,640
thing that you just wrote so essentially

01:30:19,870 --> 01:30:23,140
it's just nested gasps three projects

01:30:21,640 --> 01:30:25,900
nesting nesting nesting in in and off

01:30:23,140 --> 01:30:28,540
itself every plugin can basically just

01:30:25,900 --> 01:30:30,820
run this code for you but when when

01:30:28,540 --> 01:30:35,770
you're a user you just use it as gasps

01:30:30,820 --> 01:30:38,350
resource stop if I there's a lot more

01:30:35,770 --> 01:30:42,550
ApS than we did not cover but definitely

01:30:38,350 --> 01:30:46,120
just get a sense of what these what

01:30:42,550 --> 01:30:47,910
plugins are just presets of things that

01:30:46,120 --> 01:30:50,730
you already you could write yourself but

01:30:47,910 --> 01:30:53,200
you only write it as a last resort or

01:30:50,730 --> 01:30:55,720
because you know people haven't written

01:30:53,200 --> 01:30:57,360
the thing that you want it to write okay

01:30:55,720 --> 01:31:02,260
so

01:30:57,360 --> 01:31:06,310
where we get Jeff stacked so we should

01:31:02,260 --> 01:31:09,070
be at for gatsby themes okay so this is

01:31:06,310 --> 01:31:10,210
a very short one because it's a it's a

01:31:09,070 --> 01:31:12,130
feature that has not been released yet

01:31:10,210 --> 01:31:14,890
but it's the biggest thing that is ever

01:31:12,130 --> 01:31:17,050
happened to Gatsby and I would not be

01:31:14,890 --> 01:31:18,520
doing my my job right if I do not tell

01:31:17,050 --> 01:31:23,650
you about it at least

01:31:18,520 --> 01:31:25,360
so plugins on steroids so plugins can

01:31:23,650 --> 01:31:28,030
can implement Gatsby nodejs

01:31:25,360 --> 01:31:31,000
yes we browser yes we config you ask

01:31:28,030 --> 01:31:33,430
SPSS or yes those are all the individual

01:31:31,000 --> 01:31:38,760
API is for different modes of rendering

01:31:33,430 --> 01:31:42,250
from the SSR side to the browser side

01:31:38,760 --> 01:31:46,810
what gasps three themes do is their

01:31:42,250 --> 01:31:51,250
plugins plus presets of components so

01:31:46,810 --> 01:31:52,720
they ship for you so there's there's a

01:31:51,250 --> 01:31:54,220
bunch of reading that you can do I'm

01:31:52,720 --> 01:31:56,650
just gonna show you the theme that I've

01:31:54,220 --> 01:32:00,490
been working on this is the source code

01:31:56,650 --> 01:32:02,140
for that theme and I want to see only to

01:32:00,490 --> 01:32:04,450
see how that's how little code that is

01:32:02,140 --> 01:32:06,370
like I intentionally structured it this

01:32:04,450 --> 01:32:08,830
way because you I want you to feel the

01:32:06,370 --> 01:32:10,360
existing pain of the low-level code and

01:32:08,830 --> 01:32:13,170
I demoed it for you myself

01:32:10,360 --> 01:32:13,170
not on purpose

01:32:13,930 --> 01:32:24,790
so this is a site this is how it looks

01:32:17,110 --> 01:32:26,410
in and as a deployed site and typically

01:32:24,790 --> 01:32:28,560
you'd have to have a whole bunch of code

01:32:26,410 --> 01:32:32,080
just to make a site like this right

01:32:28,560 --> 01:32:34,050
again it's reading from it's it's it's

01:32:32,080 --> 01:32:37,270
applying syntax highlighting to code

01:32:34,050 --> 01:32:41,680
it's that it has you know the emoji

01:32:37,270 --> 01:32:44,110
stuff and it's got an overwritten

01:32:41,680 --> 01:32:46,480
component so the source code for this is

01:32:44,110 --> 01:32:49,060
literally just gatsby config guess I

01:32:46,480 --> 01:32:51,490
have my site metadata and then I have a

01:32:49,060 --> 01:32:54,880
theme that's it I don't have anything

01:32:51,490 --> 01:32:57,720
else I have no page generation : oh the

01:32:54,880 --> 01:33:00,310
stuff that I modeled through earlier

01:32:57,720 --> 01:33:02,770
that's fine that could be a plug-in what

01:33:00,310 --> 01:33:07,360
separates it from a theme is that my

01:33:02,770 --> 01:33:09,490
source slash pages actually it's not the

01:33:07,360 --> 01:33:10,569
pages that's just a components I only

01:33:09,490 --> 01:33:12,099
have one thing

01:33:10,569 --> 01:33:15,579
there's the only that's the only

01:33:12,099 --> 01:33:17,619
component that I have because I've

01:33:15,579 --> 01:33:19,539
overwritten this vital component this is

01:33:17,619 --> 01:33:22,030
the bio component everything else comes

01:33:19,539 --> 01:33:26,079
from the theme so let's look at the

01:33:22,030 --> 01:33:28,539
source code of the theme itself so this

01:33:26,079 --> 01:33:33,819
is Gabbie theme dev blog demo that's

01:33:28,539 --> 01:33:37,149
okay Gatsby themed their blog so inside

01:33:33,819 --> 01:33:40,780
this theme I have basically clones Danny

01:33:37,149 --> 01:33:43,899
whoa mobs site and I included all the

01:33:40,780 --> 01:33:46,719
source components it's got a whole bunch

01:33:43,899 --> 01:33:48,549
of them right layout whatever and I said

01:33:46,719 --> 01:33:51,399
alright I only want to overwrite or

01:33:48,549 --> 01:33:56,260
shadow the bio component the bio

01:33:51,399 --> 01:33:57,879
component this is the source side right

01:33:56,260 --> 01:34:00,129
this is the bio component I'd say I want

01:33:57,879 --> 01:34:02,499
to replace it with my own right so the

01:34:00,129 --> 01:34:05,159
only thing I have to only they have to

01:34:02,499 --> 01:34:09,280
specify is my own bio component source

01:34:05,159 --> 01:34:11,049
components slash Bible is and I can

01:34:09,280 --> 01:34:11,349
write whatever I want I put my name in

01:34:11,049 --> 01:34:16,359
there

01:34:11,349 --> 01:34:17,649
because I can take credit for it but but

01:34:16,359 --> 01:34:20,229
you see you see that you see that the

01:34:17,649 --> 01:34:22,510
theme potential that by default I

01:34:20,229 --> 01:34:24,339
install and I can get layout I can get

01:34:22,510 --> 01:34:29,169
panel I can get the SEO element and it

01:34:24,339 --> 01:34:30,159
all just ships with my theme so it's a

01:34:29,169 --> 01:34:33,519
plugin on steroids

01:34:30,159 --> 01:34:36,849
the goal for gets me what the gallery

01:34:33,519 --> 01:34:38,919
team told me is that you're the ghost

01:34:36,849 --> 01:34:42,069
for you to be able to install them side

01:34:38,919 --> 01:34:44,319
by side so right now I have my gatsby

01:34:42,069 --> 01:34:46,239
config I have only one theme here but

01:34:44,319 --> 01:34:48,579
what if you can install a ecommerce

01:34:46,239 --> 01:34:50,319
theme alongside your blog alongside your

01:34:48,579 --> 01:34:53,859
marketing site and then it's just all

01:34:50,319 --> 01:34:55,719
composers together nicely I think right

01:34:53,859 --> 01:34:56,979
now that is a pipe dream because all

01:34:55,719 --> 01:35:00,309
these things are completely unspecified

01:34:56,979 --> 01:35:01,479
where where things clash so we're all

01:35:00,309 --> 01:35:03,039
gonna have to get together as a

01:35:01,479 --> 01:35:05,919
community to decide what the standards

01:35:03,039 --> 01:35:07,659
are because these all the Gatsby's doing

01:35:05,919 --> 01:35:10,059
is providing the under-underground on

01:35:07,659 --> 01:35:11,559
the underlying tools but this is a

01:35:10,059 --> 01:35:14,319
really good open source opportunity for

01:35:11,559 --> 01:35:16,989
us to build the next WordPress by saying

01:35:14,319 --> 01:35:18,129
installable themes and and then and then

01:35:16,989 --> 01:35:21,969
the only thing you're responsible for

01:35:18,129 --> 01:35:24,129
its content fine so so I just want to

01:35:21,969 --> 01:35:24,910
study the sell you on the idea of themes

01:35:24,129 --> 01:35:28,690
we're not going to

01:35:24,910 --> 01:35:30,940
time to implement it I think it's I have

01:35:28,690 --> 01:35:33,220
some videos they have some videos go

01:35:30,940 --> 01:35:34,930
through the docs and wait for the

01:35:33,220 --> 01:35:37,300
official launch I think it's in one or

01:35:34,930 --> 01:35:40,510
two months but that's the Gatsby theme

01:35:37,300 --> 01:35:41,770
section any questions about themes like

01:35:40,510 --> 01:35:46,540
if you wanted to do anything

01:35:41,770 --> 01:35:57,610
but yeah I I feel like I feel like I've

01:35:46,540 --> 01:36:00,250
hyped it up enough okay yeah yeah so so

01:35:57,610 --> 01:36:04,239
if you see how the shadowing works to

01:36:00,250 --> 01:36:06,520
avoid so let's say I'm shadowing this

01:36:04,239 --> 01:36:08,620
theme I have I have the name of the

01:36:06,520 --> 01:36:10,960
theme that I'm shadowing slash

01:36:08,620 --> 01:36:15,730
components so if I have multiple themes

01:36:10,960 --> 01:36:18,010
installed it won't clash yeah

01:36:15,730 --> 01:36:20,130
and so the yeah the only thing though I

01:36:18,010 --> 01:36:23,200
think I'm specifying it's just my

01:36:20,130 --> 01:36:25,600
content right so this is an extremely

01:36:23,200 --> 01:36:29,520
light vlog like the only thing I mean

01:36:25,600 --> 01:36:32,140
stuff I have like one dependency I have

01:36:29,520 --> 01:36:33,940
I've got to be I have reacted react arm

01:36:32,140 --> 01:36:39,100
and gets me in that blog that's it for

01:36:33,940 --> 01:36:42,400
dependencies right so pretty pretty

01:36:39,100 --> 01:36:44,710
bright future for fur Gatsby I'm sorry

01:36:42,400 --> 01:36:46,120
about all the low-level stuff and I made

01:36:44,710 --> 01:36:48,820
you go through that because that's the

01:36:46,120 --> 01:36:50,980
that's what we have right all this stuff

01:36:48,820 --> 01:36:53,290
that's the underlying system but if you

01:36:50,980 --> 01:36:55,870
think that this has a feature then let's

01:36:53,290 --> 01:36:59,160
build on top of it and and and just make

01:36:55,870 --> 01:37:01,680
it make life easier for everyone okay so

01:36:59,160 --> 01:37:05,320
so we're more or less done with Gatsby

01:37:01,680 --> 01:37:07,630
there was a whirlwind intro one thing I

01:37:05,320 --> 01:37:09,930
one thing I'm really proud of is that I

01:37:07,630 --> 01:37:13,720
actually went through the source code of

01:37:09,930 --> 01:37:16,330
the Gatsby lifecycle method so in detail

01:37:13,720 --> 01:37:18,870
what each API does what each lifecycle

01:37:16,330 --> 01:37:23,770
hook is you have the links for this in

01:37:18,870 --> 01:37:25,450
gatsby lifecycle MB over here if you

01:37:23,770 --> 01:37:28,180
really want to know which what API is

01:37:25,450 --> 01:37:31,060
you can take advantage of and what what

01:37:28,180 --> 01:37:33,580
opportunities there are for you know

01:37:31,060 --> 01:37:35,680
building cool cool stuff definitely read

01:37:33,580 --> 01:37:37,919
like the the process of how Gatsby works

01:37:35,680 --> 01:37:41,189
internally I just don't have time

01:37:37,919 --> 01:37:42,809
to do that here but I'm the guy that

01:37:41,189 --> 01:37:46,199
wrote the docs so ask me anything you

01:37:42,809 --> 01:37:48,899
know it looks a little bit nicer now

01:37:46,199 --> 01:37:51,090
it's just super worthy because like we

01:37:48,899 --> 01:37:54,119
have to like talk to everyone

01:37:51,090 --> 01:37:58,079
it's make everyone happy I'd rather just

01:37:54,119 --> 01:37:59,699
make myself happy so all right so okay

01:37:58,079 --> 01:38:01,860
so so now we're gonna talk about service

01:37:59,699 --> 01:38:06,360
and then and and that's pretty much all

01:38:01,860 --> 01:38:08,880
we have time for together today so this

01:38:06,360 --> 01:38:10,199
is slightly like gasps resolves

01:38:08,880 --> 01:38:13,590
what does gasps be solved gets resolved

01:38:10,199 --> 01:38:16,499
perfect right like it it it's

01:38:13,590 --> 01:38:20,249
data-driven documents as much as react

01:38:16,499 --> 01:38:22,130
is a function of data and it you you put

01:38:20,249 --> 01:38:24,780
data into react I think I'll put an app

01:38:22,130 --> 01:38:27,209
Gatsby lets you put in data in an

01:38:24,780 --> 01:38:31,649
upwards of site and generates all those

01:38:27,209 --> 01:38:33,719
HTML files what it doesn't do is all the

01:38:31,649 --> 01:38:37,679
servers the the responsibilities of a

01:38:33,719 --> 01:38:39,719
server like executing code so that's

01:38:37,679 --> 01:38:41,760
like that's why Jam stack and service

01:38:39,719 --> 01:38:43,800
are very good pairs of each other

01:38:41,760 --> 01:38:46,079
because everything I just I cannot do a

01:38:43,800 --> 01:38:47,939
server list should be able to do so

01:38:46,079 --> 01:38:50,669
we're gonna go through a small

01:38:47,939 --> 01:38:53,550
presentation this is not my presentation

01:38:50,669 --> 01:38:54,989
but I strongly believe in it and this

01:38:53,550 --> 01:38:57,869
will give you a pretty solid

01:38:54,989 --> 01:39:01,039
understanding of service this buzzword

01:38:57,869 --> 01:39:04,469
that everyone is talking about mainly

01:39:01,039 --> 01:39:06,389
don't expect it to do everything yet but

01:39:04,469 --> 01:39:07,169
every single year things get easier and

01:39:06,389 --> 01:39:08,489
easier and easier

01:39:07,169 --> 01:39:10,499
we used to worry about cold start

01:39:08,489 --> 01:39:11,760
problems we don't anymore and anything

01:39:10,499 --> 01:39:14,909
you hear about co-starred is probably

01:39:11,760 --> 01:39:17,010
wrong those talk to the cloud fair

01:39:14,909 --> 01:39:20,820
workers people they start in eight

01:39:17,010 --> 01:39:23,849
milliseconds it's insane so so this

01:39:20,820 --> 01:39:25,709
isn't in an area of intense research and

01:39:23,849 --> 01:39:27,570
that's that's why we wanted to talk

01:39:25,709 --> 01:39:31,579
about it today all right let's see if I

01:39:27,570 --> 01:39:33,929
can pull up this slides slide URLs there

01:39:31,579 --> 01:39:37,159
you have the link as well so don't don't

01:39:33,929 --> 01:39:38,909
don't worry about it

01:39:37,159 --> 01:39:42,800
let's talk a little bit about why

01:39:38,909 --> 01:39:46,459
services again talking about the lamp of

01:39:42,800 --> 01:39:46,459
slash mean model

01:39:46,710 --> 01:39:50,670
imagine you have an app where it like

01:39:48,719 --> 01:39:52,679
hits a cup of hacker news and it just

01:39:50,670 --> 01:39:54,179
gets a billion points right so although

01:39:52,679 --> 01:39:55,949
all things just all people in the world

01:39:54,179 --> 01:39:59,880
come to your things and they're just

01:39:55,949 --> 01:40:01,350
streaming in like massive traffic and at

01:39:59,880 --> 01:40:02,820
some level scale if you have a server

01:40:01,350 --> 01:40:05,429
you're you're fine and it's a very

01:40:02,820 --> 01:40:07,650
simple programming model with more you

01:40:05,429 --> 01:40:09,570
start sweating a bit and then with

01:40:07,650 --> 01:40:11,820
extreme amounts your service starts

01:40:09,570 --> 01:40:13,170
catching fire and at some point it will

01:40:11,820 --> 01:40:16,739
just go down there get the hug of death

01:40:13,170 --> 01:40:18,330
or the slash dotted or whatever or the

01:40:16,739 --> 01:40:22,170
reddit hug the death depending on what

01:40:18,330 --> 01:40:24,360
generation you grew up in Chrome I don't

01:40:22,170 --> 01:40:25,590
the chrome can run on a memory I don't

01:40:24,360 --> 01:40:29,400
know about this site this is not my

01:40:25,590 --> 01:40:31,620
science but like the point is like web

01:40:29,400 --> 01:40:33,810
architecture is as convoluted as

01:40:31,620 --> 01:40:35,460
convoluted as it is if we're going to

01:40:33,810 --> 01:40:37,320
reconstitute this we actually have to

01:40:35,460 --> 01:40:40,860
come out of a different architecture

01:40:37,320 --> 01:40:43,770
that's event-driven so we're gonna we're

01:40:40,860 --> 01:40:45,420
going to come to that in a bit

01:40:43,770 --> 01:40:47,280
service at its core the reason you want

01:40:45,420 --> 01:40:49,890
to adopt service auto-scaling

01:40:47,280 --> 01:40:52,320
paper execution third-party services

01:40:49,890 --> 01:40:54,179
like third party API is right and you

01:40:52,320 --> 01:40:56,610
focus on business logic not like scaling

01:40:54,179 --> 01:40:58,080
up and scaling down your your servers as

01:40:56,610 --> 01:40:59,340
well as event-driven workflows so this

01:40:58,080 --> 01:41:01,560
is the this is the key part to

01:40:59,340 --> 01:41:03,570
understand that anything that you used

01:41:01,560 --> 01:41:05,580
to do on the server you can probably do

01:41:03,570 --> 01:41:07,380
with a web hook here and a callback to

01:41:05,580 --> 01:41:09,900
that web hook there that's about it

01:41:07,380 --> 01:41:12,270
that's that's it's a rough idea

01:41:09,900 --> 01:41:13,980
especially cron jobs a lot of people

01:41:12,270 --> 01:41:15,810
don't understand that cron jobs are free

01:41:13,980 --> 01:41:17,820
basically because you can call like a

01:41:15,810 --> 01:41:21,960
web cast on Io give it an end point and

01:41:17,820 --> 01:41:27,080
we're just ping it on a regular basis if

01:41:21,960 --> 01:41:30,780
it responds oh okay but like Ron dot IO

01:41:27,080 --> 01:41:32,730
con job org basically if you need

01:41:30,780 --> 01:41:34,199
recurring services is also do it's also

01:41:32,730 --> 01:41:36,690
doable without a server you don't need a

01:41:34,199 --> 01:41:39,179
server to like set aside an infinite

01:41:36,690 --> 01:41:41,940
loop or something you can just literally

01:41:39,179 --> 01:41:43,590
ping an API and you put all your

01:41:41,940 --> 01:41:44,130
business logic in that API and let it

01:41:43,590 --> 01:41:48,659
execute

01:41:44,130 --> 01:41:50,100
okay so in other words like you want

01:41:48,659 --> 01:41:51,659
service to be extracted away from the

01:41:50,100 --> 01:41:54,150
developer you're writing just the

01:41:51,659 --> 01:41:56,040
business logic and I really like this

01:41:54,150 --> 01:41:58,170
micro building thing because obviously

01:41:56,040 --> 01:42:01,469
you're not I don't want to pay like you

01:41:58,170 --> 01:42:03,690
know that standard five dollar thing for

01:42:01,469 --> 01:42:05,280
like if I'm not using it I'm not using

01:42:03,690 --> 01:42:09,929
it and I should have to worry about it

01:42:05,280 --> 01:42:14,370
at all it actually is is there's a huge

01:42:09,929 --> 01:42:16,260
ecosystem I think that a lot of people

01:42:14,370 --> 01:42:18,150
only talk about AWS but actually there's

01:42:16,260 --> 01:42:19,350
you know IBM bluemix is pretty

01:42:18,150 --> 01:42:22,170
interesting

01:42:19,350 --> 01:42:23,580
I think like there there's some there's

01:42:22,170 --> 01:42:25,860
some up-and-coming names I think begin

01:42:23,580 --> 01:42:27,780
is a very very interesting service

01:42:25,860 --> 01:42:29,719
platform for people to explore and

01:42:27,780 --> 01:42:32,790
obviously nullify the company I work at

01:42:29,719 --> 01:42:34,320
service is not a so there's like two

01:42:32,790 --> 01:42:36,150
competing terms like function as a

01:42:34,320 --> 01:42:39,210
service and service so there's actually

01:42:36,150 --> 01:42:43,770
the the sexier term because it's the one

01:42:39,210 --> 01:42:45,030
that pisses people off more so the

01:42:43,770 --> 01:42:48,960
people just talk about it it's a really

01:42:45,030 --> 01:42:50,790
good talk III like like what if you you

01:42:48,960 --> 01:42:51,900
didn't learn the server full method from

01:42:50,790 --> 01:42:57,570
the beginning and you start it from

01:42:51,900 --> 01:42:59,760
service and and and focus on the mindset

01:42:57,570 --> 01:43:01,800
that you're trying to work on business

01:42:59,760 --> 01:43:03,630
problems and not like the the

01:43:01,800 --> 01:43:07,469
infrastructural scaling issues that a

01:43:03,630 --> 01:43:10,230
lot of people have to deal with so what

01:43:07,469 --> 01:43:13,679
can you do what can you do what can you

01:43:10,230 --> 01:43:16,230
do a service anything with asterisks

01:43:13,679 --> 01:43:18,780
which is basically long-running jobs if

01:43:16,230 --> 01:43:20,580
you have a long-running process like a

01:43:18,780 --> 01:43:23,489
machine learning job you probably want

01:43:20,580 --> 01:43:25,440
to stick that in a server somewhere so

01:43:23,489 --> 01:43:27,060
functions as of right now functions must

01:43:25,440 --> 01:43:29,760
complete execution in under 15 minutes

01:43:27,060 --> 01:43:31,980
that used to be five minutes that used

01:43:29,760 --> 01:43:34,230
to be ten seconds even earlier as just

01:43:31,980 --> 01:43:36,120
gets longer and longer and now with like

01:43:34,230 --> 01:43:38,489
step functions in it obvious lambda you

01:43:36,120 --> 01:43:44,210
can actually chop things up and execute

01:43:38,489 --> 01:43:47,280
them in in sequence and in batches so

01:43:44,210 --> 01:43:51,030
who's using service all these guys

01:43:47,280 --> 01:43:52,800
I like Coca Cola yeah like the the stuff

01:43:51,030 --> 01:43:54,120
the big of people that you'd think New

01:43:52,800 --> 01:43:56,820
York Public Library actually so I do a

01:43:54,120 --> 01:44:00,600
lot of meetups with them and they're

01:43:56,820 --> 01:44:02,429
surprisingly advanced basically they

01:44:00,600 --> 01:44:05,040
have redefined themselves to be a

01:44:02,429 --> 01:44:07,199
digital library so they serve like three

01:44:05,040 --> 01:44:09,989
times more people online than they serve

01:44:07,199 --> 01:44:14,670
in in person so they are definitely a

01:44:09,989 --> 01:44:16,679
tech company whatever a lot of people

01:44:14,670 --> 01:44:18,870
it's fine so how do you how do you get

01:44:16,679 --> 01:44:21,150
server this choose your cloud you pick

01:44:18,870 --> 01:44:23,880
your deployment to deployment tool can

01:44:21,150 --> 01:44:24,870
come most of us most of us the this like

01:44:23,880 --> 01:44:27,719
second layer there's what they call

01:44:24,870 --> 01:44:32,100
second layer cloud providers can compile

01:44:27,719 --> 01:44:33,630
to the the first layer so it's it's

01:44:32,100 --> 01:44:35,130
regarded as like the first layer of

01:44:33,630 --> 01:44:36,390
cloud is like hard the hardware layer

01:44:35,130 --> 01:44:40,140
and then the second layer card is

01:44:36,390 --> 01:44:45,440
software layer this can be for multiple

01:44:40,140 --> 01:44:47,880
reasons like portability among them

01:44:45,440 --> 01:44:50,550
there's a framework called service the

01:44:47,880 --> 01:44:53,370
service framework service calm it's not

01:44:50,550 --> 01:45:00,810
the same as service in general it's just

01:44:53,370 --> 01:45:03,980
very good SEO so yeah they just bought

01:45:00,810 --> 01:45:06,480
service comm and now they get everything

01:45:03,980 --> 01:45:10,140
ok so yeah I already told you about the

01:45:06,480 --> 01:45:12,929
ecosystem I think I think one skill to

01:45:10,140 --> 01:45:15,890
learn is that you should understand that

01:45:12,929 --> 01:45:18,390
instead of having a server where all the

01:45:15,890 --> 01:45:20,310
pieces are computing just came with it

01:45:18,390 --> 01:45:22,610
like you had a hard disk you had to some

01:45:20,310 --> 01:45:25,350
memory you had you had a running time

01:45:22,610 --> 01:45:28,110
now in a service environment all the

01:45:25,350 --> 01:45:30,060
parts of compute are broken up so you

01:45:28,110 --> 01:45:32,850
have functions for compute you have

01:45:30,060 --> 01:45:35,250
storage like like your file blobs and

01:45:32,850 --> 01:45:37,080
stuff your databases that are separate

01:45:35,250 --> 01:45:38,910
API is these are all separate API is

01:45:37,080 --> 01:45:41,400
even a state machine

01:45:38,910 --> 01:45:45,540
I think it's connect Kinesis anyone to

01:45:41,400 --> 01:45:47,250
use Canisius yeah I don't use it but I

01:45:45,540 --> 01:45:54,660
was surprised that you can have a state

01:45:47,250 --> 01:45:56,850
machine as a as a service I don't know I

01:45:54,660 --> 01:45:59,460
don't I don't use it at all so I'm just

01:45:56,850 --> 01:46:02,310
repeating other people's words for them

01:45:59,460 --> 01:46:04,199
this we even have specialized tooling to

01:46:02,310 --> 01:46:07,830
like connect your Lego blocks together

01:46:04,199 --> 01:46:10,050
the stuff that you don't have to use and

01:46:07,830 --> 01:46:11,040
that's an S call craft Co that's why

01:46:10,050 --> 01:46:12,660
that's where you get all these like

01:46:11,040 --> 01:46:14,940
charts that are very common in the

01:46:12,660 --> 01:46:18,179
industry so like for example spinning up

01:46:14,940 --> 01:46:21,210
a REST API you can actually just model a

01:46:18,179 --> 01:46:23,070
REST API as an API gateway it resolves

01:46:21,210 --> 01:46:25,050
to several different lambda functions

01:46:23,070 --> 01:46:27,690
and if you need persistence they can

01:46:25,050 --> 01:46:28,199
they can be backing the they can have

01:46:27,690 --> 01:46:31,170
you can stay

01:46:28,199 --> 01:46:32,760
DynamoDB behind the graphical API

01:46:31,170 --> 01:46:34,469
basically just one more layer in front

01:46:32,760 --> 01:46:37,889
of your resolvers your visual ways are

01:46:34,469 --> 01:46:39,659
now your lambda functions as well so I

01:46:37,889 --> 01:46:42,659
pretty I like that a lot especially with

01:46:39,659 --> 01:46:44,400
Apollo Federation the new thing that

01:46:42,659 --> 01:46:47,190
they just launched it's very easy to

01:46:44,400 --> 01:46:51,269
break up your graphical schemas web hug

01:46:47,190 --> 01:46:54,659
listeners same thing really it's just

01:46:51,269 --> 01:46:56,789
that it's web hooks are ways for when

01:46:54,659 --> 01:46:59,159
when you have a when you have a job to

01:46:56,789 --> 01:47:00,659
execute you fire off the job it executes

01:46:59,159 --> 01:47:02,550
web books our way for them to call back

01:47:00,659 --> 01:47:04,079
with the with the completed information

01:47:02,550 --> 01:47:06,179
and it tells you that that your

01:47:04,079 --> 01:47:09,090
completed so again now you don't need a

01:47:06,179 --> 01:47:11,369
running instance authentication is a

01:47:09,090 --> 01:47:12,690
pain point for surf or surveillance

01:47:11,369 --> 01:47:15,869
because a lot of times you need a

01:47:12,690 --> 01:47:17,519
running session on the server side to do

01:47:15,869 --> 01:47:18,809
authentication and a lot of people lose

01:47:17,519 --> 01:47:20,039
that model when you when you go serve

01:47:18,809 --> 01:47:21,420
this because everything has to be

01:47:20,039 --> 01:47:22,590
stateless especially when you're when

01:47:21,420 --> 01:47:24,479
you're trying to execute in a

01:47:22,590 --> 01:47:26,309
distributed fashion if this if this

01:47:24,479 --> 01:47:27,719
tributed execution is not a concern to

01:47:26,309 --> 01:47:29,760
you which is not concerned in most

01:47:27,719 --> 01:47:32,459
people then it's no issue at all you can

01:47:29,760 --> 01:47:33,869
you can just call back to a database but

01:47:32,459 --> 01:47:36,059
yeah it's a lot of calling back like

01:47:33,869 --> 01:47:38,369
calling to the off provider already

01:47:36,059 --> 01:47:39,570
calls back to you you confirm you that

01:47:38,369 --> 01:47:41,820
with that particular token and now

01:47:39,570 --> 01:47:43,619
you're allowed to execute something so

01:47:41,820 --> 01:47:45,719
this there's that's the difference

01:47:43,619 --> 01:47:48,690
between off two and OAuth one that

01:47:45,719 --> 01:47:53,280
there's there's support for that for

01:47:48,690 --> 01:47:55,349
these kinds of workflows yeah that's

01:47:53,280 --> 01:47:57,059
what this is the Kinesis thing I which I

01:47:55,349 --> 01:47:58,440
which I don't I don't understand as like

01:47:57,059 --> 01:47:59,820
all right you could ingest a lot of

01:47:58,440 --> 01:48:02,519
things and then so what but apparently

01:47:59,820 --> 01:48:05,999
you can fire off different events based

01:48:02,519 --> 01:48:10,289
on the state of here yeah yeah I've

01:48:05,999 --> 01:48:11,880
never set this up but I think I think

01:48:10,289 --> 01:48:14,999
you have to be in like the millions of

01:48:11,880 --> 01:48:16,260
traffic to to be able to start needing

01:48:14,999 --> 01:48:23,249
this whereas I'm more of a hackathon

01:48:16,260 --> 01:48:24,959
kind of guy let's see yeah abusing so

01:48:23,249 --> 01:48:26,909
good because you can scale up in

01:48:24,959 --> 01:48:30,209
parallel all these functions at once you

01:48:26,909 --> 01:48:32,539
can all send them to a singles endpoint

01:48:30,209 --> 01:48:35,729
we can actually use it as low testing

01:48:32,539 --> 01:48:37,199
which is what Nordstrom did for

01:48:35,729 --> 01:48:38,999
themselves ahead of their big sales

01:48:37,199 --> 01:48:41,850
sales days that they call it service

01:48:38,999 --> 01:48:43,950
artillery and you can go check it out

01:48:41,850 --> 01:48:47,370
which is true right like you I actually

01:48:43,950 --> 01:48:49,340
met this serverless user in LA he told

01:48:47,370 --> 01:48:51,990
me that he has a ecommerce startup and

01:48:49,340 --> 01:48:56,370
95% of his traffic comes on four days of

01:48:51,990 --> 01:48:58,080
the year so what yeah there's no there's

01:48:56,370 --> 01:49:02,340
no server like the traditional server

01:48:58,080 --> 01:49:04,770
model doesn't really apply there so form

01:49:02,340 --> 01:49:07,140
handling okay I'm like drowning you and

01:49:04,770 --> 01:49:09,030
all these use cases to really show that

01:49:07,140 --> 01:49:10,740
people have worked out the the

01:49:09,030 --> 01:49:13,200
architecture it's new it's alien it's

01:49:10,740 --> 01:49:16,080
hard but it will get easier every single

01:49:13,200 --> 01:49:18,270
year and the fundamental simplicity and

01:49:16,080 --> 01:49:21,090
the cost model should be compelling

01:49:18,270 --> 01:49:23,880
enough for those who want to try it for

01:49:21,090 --> 01:49:27,270
for gem stack there's no option you you

01:49:23,880 --> 01:49:29,880
have to use service to to execute

01:49:27,270 --> 01:49:31,530
everything else so I think I think

01:49:29,880 --> 01:49:34,080
that's the that's the rough pitch

01:49:31,530 --> 01:49:36,420
I actually I personally really like

01:49:34,080 --> 01:49:40,010
serve this framework it's a single yamo

01:49:36,420 --> 01:49:42,060
file where you can provision like a

01:49:40,010 --> 01:49:44,070
single llamó config file we can

01:49:42,060 --> 01:49:47,070
provision like a service function a

01:49:44,070 --> 01:49:49,110
database anything that you might need as

01:49:47,070 --> 01:49:52,130
one single piece of code and then send

01:49:49,110 --> 01:49:55,170
it and deploy it so it it has that git

01:49:52,130 --> 01:49:57,900
commit and get git flow workflow with it

01:49:55,170 --> 01:50:01,590
so so you can roll back and and

01:49:57,900 --> 01:50:05,550
reprovision as much as easily as you can

01:50:01,590 --> 01:50:06,690
so yeah I mean you can you can based on

01:50:05,550 --> 01:50:08,760
that you can provision anything like a

01:50:06,690 --> 01:50:11,220
cron job infrastructure stuff rest

01:50:08,760 --> 01:50:14,880
endpoints I just really like the

01:50:11,220 --> 01:50:17,070
flexibility of service framework the

01:50:14,880 --> 01:50:21,150
cost is cost calculators and you can

01:50:17,070 --> 01:50:24,390
model them as as such so here one of our

01:50:21,150 --> 01:50:26,220
one of our Mike my coworker side

01:50:24,390 --> 01:50:28,680
projects is has a thousand daily active

01:50:26,220 --> 01:50:30,810
users 20 API calls the day it cost him

01:50:28,680 --> 01:50:33,540
six dollars a month and it scales up and

01:50:30,810 --> 01:50:36,810
down whenever whenever he wants so

01:50:33,540 --> 01:50:39,480
that's that's super nice so yeah that's

01:50:36,810 --> 01:50:43,440
the that's the overall pitch I think

01:50:39,480 --> 01:50:45,780
that it's very it's very raw like in

01:50:43,440 --> 01:50:46,950
terms of like what I can present to you

01:50:45,780 --> 01:50:48,780
because it's highly dependent on the

01:50:46,950 --> 01:50:50,970
platform in the provider I'm trying to

01:50:48,780 --> 01:50:53,190
give a general intro for anyone who

01:50:50,970 --> 01:50:56,159
hasn't really had that introduction to

01:50:53,190 --> 01:51:00,530
service so let's let's

01:50:56,159 --> 01:51:04,380
jump back to to the slides I really like

01:51:00,530 --> 01:51:08,039
so if you want a real sales pitch

01:51:04,380 --> 01:51:10,919
check out this talk by the VP of AWS

01:51:08,039 --> 01:51:12,599
lambda and AWS reinvent talking about

01:51:10,919 --> 01:51:16,139
all the different use cases from from

01:51:12,599 --> 01:51:19,019
real folks and and just like the pace of

01:51:16,139 --> 01:51:22,679
acceleration if you're worried about

01:51:19,019 --> 01:51:26,579
lock-in the cost of execution only goes

01:51:22,679 --> 01:51:28,679
down in an AWS lehand so so that's

01:51:26,579 --> 01:51:32,429
pretty I mean it's a pretty sweet stack

01:51:28,679 --> 01:51:33,900
to make projects with and and eventually

01:51:32,429 --> 01:51:35,760
you know if you're if you're a service

01:51:33,900 --> 01:51:36,689
native company I think I think that's

01:51:35,760 --> 01:51:39,989
that's probably a good bet

01:51:36,689 --> 01:51:41,639
long term okay examples of apps you can

01:51:39,989 --> 01:51:44,729
build with gatsby's so gatsby press

01:51:41,639 --> 01:51:47,039
service here are some I don't I don't

01:51:44,729 --> 01:51:48,840
have a lot mainly because they're not

01:51:47,039 --> 01:51:51,300
open source so I only focused on open

01:51:48,840 --> 01:51:52,380
source ones a lot of these are closed

01:51:51,300 --> 01:51:56,130
source because there are actual

01:51:52,380 --> 01:51:57,780
companies the gatsby store when you are

01:51:56,130 --> 01:51:59,369
contributor to get free as an open

01:51:57,780 --> 01:52:00,900
source contributor they immediately send

01:51:59,369 --> 01:52:04,139
you a token and you can redeem it for

01:52:00,900 --> 01:52:05,489
swag and and it's all it's all done on

01:52:04,139 --> 01:52:06,479
this on this store it's an e-commerce

01:52:05,489 --> 01:52:08,909
store

01:52:06,479 --> 01:52:11,760
I've already claimed a bunch of I

01:52:08,909 --> 01:52:15,030
can log in write this this breaks your

01:52:11,760 --> 01:52:16,439
model of a static site like this looks

01:52:15,030 --> 01:52:17,809
like an app this looks like there's a

01:52:16,439 --> 01:52:19,979
server behind this there's no server

01:52:17,809 --> 01:52:23,780
it's gonna it's pulling out my details

01:52:19,979 --> 01:52:26,249
it's checking my contributions to Gatsby

01:52:23,780 --> 01:52:27,360
it no it's no longer giving me any

01:52:26,249 --> 01:52:30,780
discount codes because I cleaned

01:52:27,360 --> 01:52:34,369
everything it checks it checks the SKU

01:52:30,780 --> 01:52:41,630
use choose the size it has an order card

01:52:34,369 --> 01:52:44,519
this is dynamic AF and and and you know

01:52:41,630 --> 01:52:46,320
thousands people use this they have they

01:52:44,519 --> 01:52:48,239
have more demos obviously like you know

01:52:46,320 --> 01:52:49,619
this these are this is open source so

01:52:48,239 --> 01:52:51,570
you can actually check it out and and

01:52:49,619 --> 01:52:53,010
you should contribute to Gatsby because

01:52:51,570 --> 01:52:58,050
now you know you have the basic

01:52:53,010 --> 01:52:58,619
knowledge to do it but obviously the my

01:52:58,050 --> 01:53:00,389
go-to

01:52:58,619 --> 01:53:04,169
my go-to example is shell flamingo where

01:53:00,389 --> 01:53:07,130
they're actually trading dollars for for

01:53:04,169 --> 01:53:09,510
actual products and it's a real startup

01:53:07,130 --> 01:53:10,060
gatsby mail is a pretty interesting one

01:53:09,510 --> 01:53:11,800
I don't

01:53:10,060 --> 01:53:18,790
no if I can login I don't think I can

01:53:11,800 --> 01:53:23,160
login so this is my actual meal so don't

01:53:18,790 --> 01:53:26,590
hack me

01:53:23,160 --> 01:53:31,390
what else can I login with I might be

01:53:26,590 --> 01:53:33,490
able to just jeez okay I think I think

01:53:31,390 --> 01:53:36,030
the the token for this expired but do I

01:53:33,490 --> 01:53:36,030
have a video

01:53:38,290 --> 01:53:44,950
no okay anyway email clients built as a

01:53:42,130 --> 01:53:50,020
Gatsby app just like super server this

01:53:44,950 --> 01:53:52,510
okay like because and again and again I

01:53:50,020 --> 01:53:54,430
want to make that comparison like a lot

01:53:52,510 --> 01:53:57,250
of some people I really like this but it

01:53:54,430 --> 01:53:59,760
doesn't appeal to everyone we have an

01:53:57,250 --> 01:54:03,220
existential war between the web and

01:53:59,760 --> 01:54:07,090
closed platforms like and and it was it

01:54:03,220 --> 01:54:08,620
was it and so mobile platforms are

01:54:07,090 --> 01:54:10,090
winning because a lot of people spend

01:54:08,620 --> 01:54:12,520
their time on mobile right like they

01:54:10,090 --> 01:54:14,320
want needed the native app experience if

01:54:12,520 --> 01:54:16,990
we can build rich clients that load

01:54:14,320 --> 01:54:18,730
quickly we have we win a lot of that

01:54:16,990 --> 01:54:21,580
that battle and then we are on the

01:54:18,730 --> 01:54:23,500
feature parity in terms of access to AP

01:54:21,580 --> 01:54:25,960
is and executing stuff we can do exactly

01:54:23,500 --> 01:54:27,280
the same things so really it's the we

01:54:25,960 --> 01:54:29,710
need to work on the delivery mechanism

01:54:27,280 --> 01:54:33,250
for delivering mobile clients that are

01:54:29,710 --> 01:54:34,540
just as good as like app store clients

01:54:33,250 --> 01:54:37,960
right from the Apple App Store Google

01:54:34,540 --> 01:54:40,420
Play Store just as good but way thinner

01:54:37,960 --> 01:54:42,190
because they're their websites right so

01:54:40,420 --> 01:54:44,230
we don't we don't have like the 500

01:54:42,190 --> 01:54:47,140
megabytes that the Facebook dog Facebook

01:54:44,230 --> 01:54:50,800
app takes up we just have 137 kilobytes

01:54:47,140 --> 01:54:52,840
so so we need to we need to engineer our

01:54:50,800 --> 01:54:55,420
way into into that by code splitting by

01:54:52,840 --> 01:54:59,710
by doing all the the performance stuff

01:54:55,420 --> 01:55:03,400
that gets we gets gets you okay that's a

01:54:59,710 --> 01:55:09,190
lot of me talking so the the really

01:55:03,400 --> 01:55:13,720
stupid reach goal for me was to get you

01:55:09,190 --> 01:55:15,340
to to try out amplify CLI so if you if

01:55:13,720 --> 01:55:18,430
you want to go ahead this is for people

01:55:15,340 --> 01:55:20,710
who want to massive AWS and some of you

01:55:18,430 --> 01:55:23,080
cannot so your freedom massive nullify

01:55:20,710 --> 01:55:23,980
as well know if I say alright but if you

01:55:23,080 --> 01:55:25,810
follow these instructions

01:55:23,980 --> 01:55:28,060
options.this this is the remainder of

01:55:25,810 --> 01:55:29,620
the workshop you're free to go here and

01:55:28,060 --> 01:55:32,170
we are near 4:30 anyway we have half an

01:55:29,620 --> 01:55:33,810
hour but I'm gonna stay here I'm gonna

01:55:32,170 --> 01:55:37,450
help you through this

01:55:33,810 --> 01:55:40,630
basically a lotus amplify is all the

01:55:37,450 --> 01:55:42,580
services or AWS put in your CLI and it's

01:55:40,630 --> 01:55:44,350
very easy it's just running one command

01:55:42,580 --> 01:55:47,130
to configure it so I have here

01:55:44,350 --> 01:55:49,840
instructions to set up in AWS amplify

01:55:47,130 --> 01:55:52,480
for an existing project you can amplify

01:55:49,840 --> 01:55:54,100
add off storage functions API analytics

01:55:52,480 --> 01:55:55,090
hosting notification interactions and

01:55:54,100 --> 01:55:57,940
there's more coming

01:55:55,090 --> 01:56:00,310
I think they just added video streaming

01:55:57,940 --> 01:56:02,470
the other day so you can do like HQ

01:56:00,310 --> 01:56:05,470
trivia I don't know if you have that

01:56:02,470 --> 01:56:08,140
here anyway so adding authentication

01:56:05,470 --> 01:56:10,150
amplify add off and in the template that

01:56:08,140 --> 01:56:13,000
I give you and now in the in the repo

01:56:10,150 --> 01:56:15,640
you literally just switched it off off

01:56:13,000 --> 01:56:18,280
versions of all the off layout off

01:56:15,640 --> 01:56:20,980
header off whatever that's already and

01:56:18,280 --> 01:56:21,400
your github repo and then once you're

01:56:20,980 --> 01:56:22,810
done

01:56:21,400 --> 01:56:24,940
always remember to amplify push whatever

01:56:22,810 --> 01:56:27,220
you're done configuring new capability

01:56:24,940 --> 01:56:29,610
always amplify push so we have this for

01:56:27,220 --> 01:56:32,230
service authentication we have this for

01:56:29,610 --> 01:56:34,690
server let's compute with AWS lambda you

01:56:32,230 --> 01:56:36,250
write your lambda functions we have this

01:56:34,690 --> 01:56:37,930
for service storage if you're storing

01:56:36,250 --> 01:56:41,950
images if you're storing

01:56:37,930 --> 01:56:45,730
for blobs and stuff like that and at the

01:56:41,950 --> 01:56:47,860
end of this I think that at home you can

01:56:45,730 --> 01:56:50,620
make an instant Instagram clone with all

01:56:47,860 --> 01:56:53,260
this functionality using using gatsby

01:56:50,620 --> 01:56:54,280
using this material UI theme right this

01:56:53,260 --> 01:56:55,750
is all that's all you need

01:56:54,280 --> 01:57:00,600
yeah you got Gatsby you got this

01:56:55,750 --> 01:57:02,590
material UI theme you got the service

01:57:00,600 --> 01:57:04,300
storage this is going to be super

01:57:02,590 --> 01:57:08,320
important service storage of the files

01:57:04,300 --> 01:57:10,330
and you can display the images yeah and

01:57:08,320 --> 01:57:11,739
then and then authentication for for

01:57:10,330 --> 01:57:15,130
people who need to authenticate into

01:57:11,739 --> 01:57:17,110
their accounts so this is this is the

01:57:15,130 --> 01:57:19,270
homework this is the you if you want to

01:57:17,110 --> 01:57:21,610
get if you want to like make money with

01:57:19,270 --> 01:57:23,110
service you want to make money with

01:57:21,610 --> 01:57:25,480
genocide I think I mean this is this is

01:57:23,110 --> 01:57:28,360
where to learn it has never been easier

01:57:25,480 --> 01:57:30,070
like no one no one no one works at AWS

01:57:28,360 --> 01:57:32,050
like this right it's usually like

01:57:30,070 --> 01:57:34,719
suffering through a whole bunch of like

01:57:32,050 --> 01:57:35,710
walkthroughs on the site now it's all in

01:57:34,719 --> 01:57:36,820
the CLI no there's a guy that

01:57:35,710 --> 01:57:40,990
walkthrough

01:57:36,820 --> 01:57:43,120
and a very dedicated dev team and they

01:57:40,990 --> 01:57:46,050
have they have helper libraries so okay

01:57:43,120 --> 01:57:50,620
look at look at how I access my

01:57:46,050 --> 01:57:52,000
authentication you see here they've

01:57:50,620 --> 01:57:53,380
written all the helper libraries you

01:57:52,000 --> 01:57:58,410
don't need to do anything you just

01:57:53,380 --> 01:58:01,120
import off from AWS - FFI slash off

01:57:58,410 --> 01:58:02,860
right and then off the car not an

01:58:01,120 --> 01:58:07,540
authenticated user set user or whatever

01:58:02,860 --> 01:58:09,820
that's it that's stupid simple so I

01:58:07,540 --> 01:58:11,710
really like this for API is you

01:58:09,820 --> 01:58:16,150
literally API dog yet the name of the

01:58:11,710 --> 01:58:17,160
API and that calls it right so storage

01:58:16,150 --> 01:58:20,530
okay

01:58:17,160 --> 01:58:22,060
storage dog get you're not even like

01:58:20,530 --> 01:58:32,320
you're not even copying pasting the the

01:58:22,060 --> 01:58:34,090
a RN or whatever whatever you have API

01:58:32,320 --> 01:58:37,090
this is service function API API don't

01:58:34,090 --> 01:58:38,800
get they just wrap it they just wrap it

01:58:37,090 --> 01:58:41,170
for you so you don't access the direct

01:58:38,800 --> 01:58:50,710
URL so that's so that's different from

01:58:41,170 --> 01:58:52,420
the other fine yeah yeah so everyone has

01:58:50,710 --> 01:58:53,170
this Google has something similar and

01:58:52,420 --> 01:58:57,010
I'll if I have something similar

01:58:53,170 --> 01:58:58,750
services so I think it'll us probably is

01:58:57,010 --> 01:59:01,660
ahead by the most because they have a

01:58:58,750 --> 01:59:03,730
thousand people on this thing and

01:59:01,660 --> 01:59:06,810
they're they're dead set on making all

01:59:03,730 --> 01:59:09,310
of AWS into this new paradigm of

01:59:06,810 --> 01:59:11,650
literally run a single command to add

01:59:09,310 --> 01:59:14,170
that functionality answer a few

01:59:11,650 --> 01:59:15,850
questions and you're done so I encourage

01:59:14,170 --> 01:59:17,470
you to try it out that's the remainder

01:59:15,850 --> 01:59:19,840
of this workshop and try encourage you

01:59:17,470 --> 01:59:21,370
to try out together with Gatsby and

01:59:19,840 --> 01:59:24,840
obviously feel free to ping me on

01:59:21,370 --> 01:59:29,010
Twitter or github with questions yeah

01:59:24,840 --> 01:59:29,010
okay um enjoy

01:59:29,139 --> 01:59:38,869
thank you thank you yeah I'm gonna put

01:59:36,679 --> 01:59:41,679
on music but I'll be around raise your

01:59:38,869 --> 01:59:41,679

YouTube URL: https://www.youtube.com/watch?v=s-l99ZzR77k


