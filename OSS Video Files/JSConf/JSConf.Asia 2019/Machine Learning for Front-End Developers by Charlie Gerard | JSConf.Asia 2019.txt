Title: Machine Learning for Front-End Developers by Charlie Gerard | JSConf.Asia 2019
Publication date: 2019-06-24
Playlist: JSConf.Asia 2019
Description: 
	Machine learning can have some pretty complicated concepts to grasp if youâ€™re not a data scientist. However, recent developments in tooling make it more and more accessible for developers and people with little or no experience.
One of these advancements is the ability to now train and run machine learning algorithms and models in the browser, opening this world to front-end developers to learn and experiment.
In this presentation, we will talk about the different applications, possibilities, tools and resources, as well as show a few examples and demos, so you can get started building your own experiments using machine learning in JavaScript.

Charlie is a software developer in Sydney. She is passionate about creative coding and building interactive prototypes mixing science, art and technology. She also spends time giving back to the community by mentoring new developers, contributing to open-source projects and speaking at events.


JSConf.Asia - LASALLE College of the Arts, Singapore - 15 June 2019

Source: https://2019.jsconf.asia/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.


Intro animation "something something prisms" by Martin Schuhfuss
https://codepen.io/usefulthink/pen/WogmvW

Intro music "Know" by Matt McKegg
https://soundcloud.com/destroy-with-science/know
Captions: 
	00:00:00,620 --> 00:00:15,820
[Music]

00:00:15,949 --> 00:00:21,900
good morning so first of all before I

00:00:20,430 --> 00:00:24,029
start I really want to thank everybody

00:00:21,900 --> 00:00:26,580
involved in making Jesco aphasia happen

00:00:24,029 --> 00:00:29,340
for having me and for really organizing

00:00:26,580 --> 00:00:31,170
a really cool event so far and thank all

00:00:29,340 --> 00:00:32,550
of you for being here this morning it

00:00:31,170 --> 00:00:35,100
might be a bit early for some of you so

00:00:32,550 --> 00:00:36,300
thanks for coming here to listen to me

00:00:35,100 --> 00:00:38,820
talk about machine learning for

00:00:36,300 --> 00:00:41,250
front-end developers so before I stop

00:00:38,820 --> 00:00:44,100
I've given this talk a couple of times

00:00:41,250 --> 00:00:46,469
before and the feedback or comment I

00:00:44,100 --> 00:00:48,570
usually get is that I speak very fast so

00:00:46,469 --> 00:00:51,360
I'm gonna try to be mindful and slow

00:00:48,570 --> 00:00:53,370
down a little bit on some slides but I

00:00:51,360 --> 00:00:55,920
get really excited about sharing what I

00:00:53,370 --> 00:00:59,670
know with you so my natural pace always

00:00:55,920 --> 00:01:00,809
comes back and also I mean I'd like to

00:00:59,670 --> 00:01:02,730
remind you that we're in a fast-paced

00:01:00,809 --> 00:01:07,470
industry so I'm not you know I'm not

00:01:02,730 --> 00:01:09,930
fast you're slow so I'm kidding I

00:01:07,470 --> 00:01:12,479
already want to try but um so my name is

00:01:09,930 --> 00:01:14,430
Charlie Jerrod I am a developer at a

00:01:12,479 --> 00:01:16,740
product company called Atlassian in

00:01:14,430 --> 00:01:19,020
Sydney and outside of that in the

00:01:16,740 --> 00:01:20,610
community I'm also part of two tech

00:01:19,020 --> 00:01:22,229
community programs called Google

00:01:20,610 --> 00:01:24,060
developer experts and Mozilla Tech

00:01:22,229 --> 00:01:25,200
speakers if you're interested in

00:01:24,060 --> 00:01:28,409
learning more about what it is I know

00:01:25,200 --> 00:01:29,610
that there's a few others here as well

00:01:28,409 --> 00:01:31,799
so there's you know quite a few

00:01:29,610 --> 00:01:33,420
community of people sharing knowledge

00:01:31,799 --> 00:01:35,939
through conferences and blog posts and

00:01:33,420 --> 00:01:37,979
workshops and things like that but I'm

00:01:35,939 --> 00:01:40,799
not here to talk about that I'm here to

00:01:37,979 --> 00:01:42,360
talk about machine learning so usually I

00:01:40,799 --> 00:01:43,770
start because I don't know what you know

00:01:42,360 --> 00:01:45,509
and what you don't know so I usually

00:01:43,770 --> 00:01:47,159
start with an example to try to put

00:01:45,509 --> 00:01:49,470
everybody on the same level about what

00:01:47,159 --> 00:01:50,850
machine learning is but yesterday I

00:01:49,470 --> 00:01:51,810
think Monica did a very nice

00:01:50,850 --> 00:01:53,460
introduction

00:01:51,810 --> 00:01:55,140
talking about how to recognize our

00:01:53,460 --> 00:01:56,939
pictures of cats and dogs and I thought

00:01:55,140 --> 00:01:58,950
that was really simple and well done so

00:01:56,939 --> 00:02:02,009
I kind of removed some of my slides and

00:01:58,950 --> 00:02:04,020
I'm just gonna briefly say if you were

00:02:02,009 --> 00:02:06,060
not here or if you you know don't

00:02:04,020 --> 00:02:08,009
remember that is basically giving the

00:02:06,060 --> 00:02:09,690
ability to computers to find patterns in

00:02:08,009 --> 00:02:12,000
in data without being explicitly

00:02:09,690 --> 00:02:14,460
programmed so if I just take back the

00:02:12,000 --> 00:02:15,780
example from Monica yesterday the

00:02:14,460 --> 00:02:17,700
time that your computer sees a picture

00:02:15,780 --> 00:02:20,250
of a cat it doesn't really know what it

00:02:17,700 --> 00:02:21,870
is it's never seen one before but you

00:02:20,250 --> 00:02:24,420
know by giving it millions of samples of

00:02:21,870 --> 00:02:27,510
data of what a cat looks like in a dog

00:02:24,420 --> 00:02:29,670
looks like using algorithms and machine

00:02:27,510 --> 00:02:31,950
learning models the computer is able to

00:02:29,670 --> 00:02:34,020
understand to find patterns in what

00:02:31,950 --> 00:02:36,780
makes a cat a cat on a picture and what

00:02:34,020 --> 00:02:40,110
makes a dog a dog so at a high level

00:02:36,780 --> 00:02:42,510
this is basically that so at the core of

00:02:40,110 --> 00:02:44,250
a is machine learning models and to

00:02:42,510 --> 00:02:47,310
build a model you need algorithms so

00:02:44,250 --> 00:02:49,320
let's dive a little bit into this so if

00:02:47,310 --> 00:02:50,910
you start looking into machine learning

00:02:49,320 --> 00:02:53,820
you might come across some of these

00:02:50,910 --> 00:02:55,740
algorithms so I know that I when I

00:02:53,820 --> 00:02:58,380
started I definitely heard a lot about

00:02:55,740 --> 00:03:00,750
naive Bayes and K nearest neighbor and

00:02:58,380 --> 00:03:02,010
there's really a lot of them and they're

00:03:00,750 --> 00:03:03,720
good at solving different types of

00:03:02,010 --> 00:03:06,330
problems and dealing with different

00:03:03,720 --> 00:03:08,370
types of data so before even looking

00:03:06,330 --> 00:03:09,960
into what algorithm you want to use you

00:03:08,370 --> 00:03:12,540
have to understand what type of problem

00:03:09,960 --> 00:03:14,760
that you want to solve so there's three

00:03:12,540 --> 00:03:16,740
main types of problem problems in

00:03:14,760 --> 00:03:18,420
machine learning you have supervised

00:03:16,740 --> 00:03:21,150
learning unsupervised learning and

00:03:18,420 --> 00:03:22,380
reinforcement learning for this talk and

00:03:21,150 --> 00:03:24,960
knowing that I only have half an hour

00:03:22,380 --> 00:03:27,750
I'm only gonna cover supervised and

00:03:24,960 --> 00:03:29,580
unsupervised also because a lot of the

00:03:27,750 --> 00:03:31,260
time when you get started the problems

00:03:29,580 --> 00:03:33,420
that you'll want to try and solve can be

00:03:31,260 --> 00:03:35,220
solved with supervised and unsupervised

00:03:33,420 --> 00:03:38,400
so at first maybe don't bother with

00:03:35,220 --> 00:03:40,920
understanding what reinforcement is so

00:03:38,400 --> 00:03:42,720
let's start with supervised learning if

00:03:40,920 --> 00:03:45,570
we start with a Britisher definition

00:03:42,720 --> 00:03:47,400
it's basically creating a predictive

00:03:45,570 --> 00:03:50,220
model based on a set of features and

00:03:47,400 --> 00:03:51,330
labels and there's three main terms in

00:03:50,220 --> 00:03:53,250
this definition that you need to

00:03:51,330 --> 00:03:54,150
understand it's you know what is the

00:03:53,250 --> 00:03:57,930
predictive model

00:03:54,150 --> 00:03:59,400
what's features and what's a label so I

00:03:57,930 --> 00:04:01,650
don't know about you but I learned more

00:03:59,400 --> 00:04:04,020
when I can kind of like relate to

00:04:01,650 --> 00:04:05,460
examples so a classic example of a

00:04:04,020 --> 00:04:08,310
supervised learning problem is

00:04:05,460 --> 00:04:10,410
predicting the price of a house so let's

00:04:08,310 --> 00:04:12,450
imagine you know we're in Singapore we

00:04:10,410 --> 00:04:16,049
have a house if we're lucky enough that

00:04:12,450 --> 00:04:17,190
we want to be able to sell and but we

00:04:16,049 --> 00:04:19,440
don't know how much we should sell it

00:04:17,190 --> 00:04:21,150
for for it to you know for us to make

00:04:19,440 --> 00:04:23,669
profit and you know sell it fast and

00:04:21,150 --> 00:04:25,200
things like that but what we have is a

00:04:23,669 --> 00:04:27,600
lot of data of all the houses in

00:04:25,200 --> 00:04:28,290
Singapore and that's what we have so we

00:04:27,600 --> 00:04:30,360
start with that so

00:04:28,290 --> 00:04:32,430
how can we predict the price of our

00:04:30,360 --> 00:04:34,920
house based on the price of houses in

00:04:32,430 --> 00:04:36,090
the market so the labels in that case is

00:04:34,920 --> 00:04:38,850
the price it's what you're actually

00:04:36,090 --> 00:04:41,190
trying to predict so in your data set

00:04:38,850 --> 00:04:43,440
that you're going to put together it's

00:04:41,190 --> 00:04:44,880
how you would classify each entry so as

00:04:43,440 --> 00:04:46,650
our problem is trying to predict the

00:04:44,880 --> 00:04:48,660
price we would have if you you know

00:04:46,650 --> 00:04:50,670
imagine an Excel spreadsheet we would

00:04:48,660 --> 00:04:53,640
have a column with all the prices of all

00:04:50,670 --> 00:04:55,680
the houses in Singapore and then we

00:04:53,640 --> 00:04:57,510
would have our features and features are

00:04:55,680 --> 00:05:00,000
the characteristics of the entries in

00:04:57,510 --> 00:05:02,610
your data set so for houses it would be

00:05:00,000 --> 00:05:04,560
the number of floors the number of rooms

00:05:02,610 --> 00:05:06,360
bathrooms that you'd have a garden or

00:05:04,560 --> 00:05:10,350
know the neighborhood and things like

00:05:06,360 --> 00:05:12,810
that and using these labels and features

00:05:10,350 --> 00:05:14,130
we're using an algorithm you would try

00:05:12,810 --> 00:05:16,830
to understand the correlation between

00:05:14,130 --> 00:05:18,270
the features and the price so the

00:05:16,830 --> 00:05:22,200
characteristic and the price of a house

00:05:18,270 --> 00:05:23,940
to generate a model that can then and

00:05:22,200 --> 00:05:25,260
being a mathematical representation of

00:05:23,940 --> 00:05:26,910
the outcome of your training

00:05:25,260 --> 00:05:29,190
so using everything that you know about

00:05:26,910 --> 00:05:31,140
the house is you use algorithms that end

00:05:29,190 --> 00:05:32,490
up being like a function that takes new

00:05:31,140 --> 00:05:35,370
parameters of a new house it's never

00:05:32,490 --> 00:05:37,890
seen before and it's able to generate a

00:05:35,370 --> 00:05:39,600
prediction of a price that the house

00:05:37,890 --> 00:05:42,420
should go for based on all the houses

00:05:39,600 --> 00:05:43,380
that it's seen on the market so it's

00:05:42,420 --> 00:05:45,720
important to know that supervised

00:05:43,380 --> 00:05:48,150
learning needs labels and features to

00:05:45,720 --> 00:05:49,980
generate a predictive model and then if

00:05:48,150 --> 00:05:51,900
we look at a type another type of

00:05:49,980 --> 00:05:54,120
learning the unsupervised learning it's

00:05:51,900 --> 00:05:56,100
the ability to create predictions based

00:05:54,120 --> 00:05:57,480
only on a set of features and the end of

00:05:56,100 --> 00:05:59,460
the definition is really important

00:05:57,480 --> 00:06:02,190
because it's the main difference between

00:05:59,460 --> 00:06:03,810
unsupervised and supervised so if we

00:06:02,190 --> 00:06:05,520
think about our problem of predicting

00:06:03,810 --> 00:06:07,500
the price of a house it wouldn't really

00:06:05,520 --> 00:06:09,390
work as an it's not an unsupervised

00:06:07,500 --> 00:06:10,950
problem how can you understand how can

00:06:09,390 --> 00:06:13,170
you predict the price of a house if you

00:06:10,950 --> 00:06:15,090
have never even seen what a price is you

00:06:13,170 --> 00:06:18,480
only know the characteristics of a house

00:06:15,090 --> 00:06:19,680
so in that particular case a type of

00:06:18,480 --> 00:06:22,260
problem that unsupervised learning

00:06:19,680 --> 00:06:24,060
solves is more around clustering so an

00:06:22,260 --> 00:06:26,730
example of that would be predicting

00:06:24,060 --> 00:06:28,410
customer behavior so when you go to the

00:06:26,730 --> 00:06:31,230
supermarket they might not know who you

00:06:28,410 --> 00:06:34,680
are at all but based on what you buy how

00:06:31,230 --> 00:06:37,140
often how expensive it is where they can

00:06:34,680 --> 00:06:39,760
actually really cluster people together

00:06:37,140 --> 00:06:42,610
into different categories and base

00:06:39,760 --> 00:06:44,590
on your buying behavior they wouldn't be

00:06:42,610 --> 00:06:46,300
able to know what advertising to send to

00:06:44,590 --> 00:06:48,430
you because you're more likely to buy

00:06:46,300 --> 00:06:51,310
the same thing that people like you have

00:06:48,430 --> 00:06:52,870
bought as well so so unsupervised

00:06:51,310 --> 00:06:55,240
learning is more around clustering

00:06:52,870 --> 00:06:59,050
rather than getting a particular answer

00:06:55,240 --> 00:07:00,100
out of a question so in this - so now

00:06:59,050 --> 00:07:01,510
that we talked about the types of

00:07:00,100 --> 00:07:02,740
learning I talked about you know

00:07:01,510 --> 00:07:04,390
problems that you're predicting the

00:07:02,740 --> 00:07:05,950
price of a house or customer behavior

00:07:04,390 --> 00:07:08,290
but it might not be something that you

00:07:05,950 --> 00:07:10,210
want to do and yesterday in Monica's

00:07:08,290 --> 00:07:12,790
talk we saw that machine learning can be

00:07:10,210 --> 00:07:14,460
used in a lot of more creative ways so

00:07:12,790 --> 00:07:16,390
let's talk briefly about different

00:07:14,460 --> 00:07:18,340
applications I just put like a short

00:07:16,390 --> 00:07:20,170
list together and the first one I'm

00:07:18,340 --> 00:07:23,260
going to talk about is this example here

00:07:20,170 --> 00:07:25,870
where you upload a picture of a cat and

00:07:23,260 --> 00:07:28,180
then an algorithm generates for you a

00:07:25,870 --> 00:07:31,150
piece of text that you can use as alt

00:07:28,180 --> 00:07:33,130
text for your image tags in your HTML so

00:07:31,150 --> 00:07:34,750
this experiment was built by I'm sorry

00:07:33,130 --> 00:07:37,210
Dresner I put the link there if you want

00:07:34,750 --> 00:07:39,580
to try it a bit later but so maybe for

00:07:37,210 --> 00:07:42,280
one image my Billa oh I can do it myself

00:07:39,580 --> 00:07:43,780
but when you like you can see that using

00:07:42,280 --> 00:07:46,060
machine learning can maybe eventually

00:07:43,780 --> 00:07:47,710
automate some of the things that we do

00:07:46,060 --> 00:07:50,410
as developers so we can actually spend

00:07:47,710 --> 00:07:52,540
time solving some of the logic that we

00:07:50,410 --> 00:07:55,270
want to solve so that's just like a

00:07:52,540 --> 00:07:56,530
quick example another one that would

00:07:55,270 --> 00:07:59,530
have been really useful for me a few

00:07:56,530 --> 00:08:02,410
years ago was it's this framework called

00:07:59,530 --> 00:08:06,220
not-safe-for-work j/s where again you

00:08:02,410 --> 00:08:08,440
upload a picture in in this little

00:08:06,220 --> 00:08:10,270
experiment here and it gives you the

00:08:08,440 --> 00:08:12,880
probability of it being an image that is

00:08:10,270 --> 00:08:16,090
not safe for work and I used to work in

00:08:12,880 --> 00:08:17,590
advertising and when you work for brands

00:08:16,090 --> 00:08:19,290
sometimes they want to put competitions

00:08:17,590 --> 00:08:22,360
together where they want to engage with

00:08:19,290 --> 00:08:25,000
customers so people have to upload a

00:08:22,360 --> 00:08:26,470
selfie or whatever to win a contest so

00:08:25,000 --> 00:08:29,080
people who produce a lot of images and

00:08:26,470 --> 00:08:31,090
most of the time they the brain wants to

00:08:29,080 --> 00:08:33,490
see the images live in a gallery or

00:08:31,090 --> 00:08:35,260
whatever and the thing is that the check

00:08:33,490 --> 00:08:37,540
that you have to do to make sure that

00:08:35,260 --> 00:08:39,849
these images are okay they usually done

00:08:37,540 --> 00:08:43,150
manually either by like a product

00:08:39,849 --> 00:08:45,190
manager or or by the developers so using

00:08:43,150 --> 00:08:46,960
machine learning in the front end you

00:08:45,190 --> 00:08:48,940
could actually do a pre-check of what

00:08:46,960 --> 00:08:50,530
people are uploading before saving into

00:08:48,940 --> 00:08:51,130
the database and before displaying it

00:08:50,530 --> 00:08:53,440
live

00:08:51,130 --> 00:08:55,389
on a page so that's definitely something

00:08:53,440 --> 00:08:57,399
I could have used a few years ago so I

00:08:55,389 --> 00:09:00,100
thought it was very interesting and then

00:08:57,399 --> 00:09:02,230
like another example that is really

00:09:00,100 --> 00:09:03,730
really like totally like awesome

00:09:02,230 --> 00:09:06,430
I got really loved it because it mixes a

00:09:03,730 --> 00:09:07,600
lot of different technologies and it can

00:09:06,430 --> 00:09:09,130
actually help people in terms of

00:09:07,600 --> 00:09:11,500
accessibility so I don't know if you've

00:09:09,130 --> 00:09:15,069
seen this one but this developer called

00:09:11,500 --> 00:09:17,500
Abhishek Singh created a prototype

00:09:15,069 --> 00:09:20,079
around the concept of kind of like

00:09:17,500 --> 00:09:22,569
future interactions so he was thinking

00:09:20,079 --> 00:09:24,910
about if no voice UI when you talk to

00:09:22,569 --> 00:09:27,430
Amazon Alexa what about people who can't

00:09:24,910 --> 00:09:29,079
talk are they are we just gonna

00:09:27,430 --> 00:09:30,250
literally cut them out of you know

00:09:29,079 --> 00:09:32,920
innovation and things like that

00:09:30,250 --> 00:09:35,500
so what he decided to do is to use

00:09:32,920 --> 00:09:38,740
machine learning in JavaScript to look

00:09:35,500 --> 00:09:40,959
at the to capture data from the webcam

00:09:38,740 --> 00:09:43,779
feed train and algorithm to recognize

00:09:40,959 --> 00:09:46,089
and gestures map them to words so he

00:09:43,779 --> 00:09:48,970
could actually communicate with Alexa

00:09:46,089 --> 00:09:50,620
just via via gestures like by training

00:09:48,970 --> 00:09:52,720
and algorithm so I thought it was really

00:09:50,620 --> 00:09:54,519
a creative way and a really interesting

00:09:52,720 --> 00:09:58,329
way of using machine learning in

00:09:54,519 --> 00:10:00,010
JavaScript so let's dive a little bit

00:09:58,329 --> 00:10:02,800
into instead of just talking about what

00:10:00,010 --> 00:10:05,860
you can do let's have a look a little

00:10:02,800 --> 00:10:06,970
bit about first of all why because when

00:10:05,860 --> 00:10:08,470
you think about machine learning

00:10:06,970 --> 00:10:10,480
you probably think about Python before

00:10:08,470 --> 00:10:11,889
you think about JavaScript but I think

00:10:10,480 --> 00:10:13,510
it's really interesting to now be able

00:10:11,889 --> 00:10:15,130
to do that in JavaScript because in

00:10:13,510 --> 00:10:17,829
terms of learning curve it's a lot

00:10:15,130 --> 00:10:19,690
easier for developers to know that they

00:10:17,829 --> 00:10:22,329
only have to understand a few concepts

00:10:19,690 --> 00:10:24,579
of machine learning and and understand

00:10:22,329 --> 00:10:26,199
the syntax of a certain framework rather

00:10:24,579 --> 00:10:29,949
than having to learn an entirely new

00:10:26,199 --> 00:10:32,290
language we learn new syntax like every

00:10:29,949 --> 00:10:34,420
day when we move from jQuery to angular

00:10:32,290 --> 00:10:36,069
to view to react so we kind of used to

00:10:34,420 --> 00:10:38,019
doing that and now it's just

00:10:36,069 --> 00:10:41,050
transferring that skill of being you

00:10:38,019 --> 00:10:42,519
know adaptable to another domain so I

00:10:41,050 --> 00:10:43,990
really love the fact that is you don't

00:10:42,519 --> 00:10:45,160
have to be a data scientist you don't

00:10:43,990 --> 00:10:47,050
have to only know Python

00:10:45,160 --> 00:10:49,449
it's actually out there and you can

00:10:47,050 --> 00:10:50,889
start doing it now and now the point

00:10:49,449 --> 00:10:53,380
that I think is important is around

00:10:50,889 --> 00:10:56,019
rapid prototyping so I really love doing

00:10:53,380 --> 00:10:57,610
that it's you know like this what I'm

00:10:56,019 --> 00:10:59,620
talking about is has nothing to do with

00:10:57,610 --> 00:11:01,600
what I do for work so all of my

00:10:59,620 --> 00:11:04,420
experiments are things that I do outside

00:11:01,600 --> 00:11:06,610
you know after work you know yeah

00:11:04,420 --> 00:11:08,470
or on the weekend so sometimes when I

00:11:06,610 --> 00:11:10,930
want to validate an idea I need it to be

00:11:08,470 --> 00:11:12,040
fast because I don't want to spend like

00:11:10,930 --> 00:11:13,930
I'm not that patient so I don't want to

00:11:12,040 --> 00:11:17,170
spend six months on a project I usually

00:11:13,930 --> 00:11:19,779
want span like two hours so being able

00:11:17,170 --> 00:11:21,220
to to prototype something fast in

00:11:19,779 --> 00:11:23,290
JavaScript is really cool because if you

00:11:21,220 --> 00:11:25,990
want to just you know if you have an

00:11:23,290 --> 00:11:27,940
idea in mind and often if you want to be

00:11:25,990 --> 00:11:29,440
given the time or the money at work to

00:11:27,940 --> 00:11:31,149
explore it more you have to convince

00:11:29,440 --> 00:11:32,800
people that it's worth it and to be able

00:11:31,149 --> 00:11:35,380
to convince them usually you have to

00:11:32,800 --> 00:11:39,220
show them something some kind of MVP or

00:11:35,380 --> 00:11:40,269
approve of concept and and your being

00:11:39,220 --> 00:11:42,220
able to do machine learning in

00:11:40,269 --> 00:11:44,170
JavaScript means that you could validate

00:11:42,220 --> 00:11:45,790
an idea and then eventually move to

00:11:44,170 --> 00:11:48,160
Python if you want to push it further

00:11:45,790 --> 00:11:49,420
but I think that's one of the really

00:11:48,160 --> 00:11:52,000
awesome thing that I like about

00:11:49,420 --> 00:11:53,949
JavaScript and then finally there is a

00:11:52,000 --> 00:11:55,779
bigger and bigger ecosystem of tools

00:11:53,949 --> 00:11:57,430
that you can use in JavaScript and

00:11:55,779 --> 00:11:59,350
there's more and more documentation

00:11:57,430 --> 00:12:01,389
there's a lot of tutorials and courses

00:11:59,350 --> 00:12:02,620
so I think it's a good time to get

00:12:01,389 --> 00:12:06,040
started if you want to get into that

00:12:02,620 --> 00:12:08,079
space so what can you do so you can do

00:12:06,040 --> 00:12:10,990
three things first of all you can import

00:12:08,079 --> 00:12:12,430
an existing pre-trained model so it's a

00:12:10,990 --> 00:12:14,019
model that has already been trained with

00:12:12,430 --> 00:12:16,000
a lot of data for a specific purpose and

00:12:14,019 --> 00:12:19,540
you can just import it in your app and

00:12:16,000 --> 00:12:21,730
use it as is you can also do you can

00:12:19,540 --> 00:12:23,320
also retrain and earn important model

00:12:21,730 --> 00:12:25,269
that we call transfer learning so you

00:12:23,320 --> 00:12:27,250
kind of do the same thing from the step

00:12:25,269 --> 00:12:29,110
one you can you can use a model that is

00:12:27,250 --> 00:12:31,209
open source but you can as you you can

00:12:29,110 --> 00:12:33,550
add your own samples on top of it and

00:12:31,209 --> 00:12:35,290
kind of retrain that ready fast and then

00:12:33,550 --> 00:12:37,180
finally you can do all of it in

00:12:35,290 --> 00:12:40,149
javascript in the browser you can define

00:12:37,180 --> 00:12:43,600
train and run your model entirely in the

00:12:40,149 --> 00:12:46,060
browser so in terms of tools I think the

00:12:43,600 --> 00:12:48,790
most popular is tensorflow j/s but

00:12:46,060 --> 00:12:51,130
sometimes I feel like some of the terms

00:12:48,790 --> 00:12:53,110
that tensorflow gest uses might be a bit

00:12:51,130 --> 00:12:54,880
confusing for people who is just getting

00:12:53,110 --> 00:12:58,149
started so I really like the second one

00:12:54,880 --> 00:13:01,449
on the right ml 5gs the it's a framework

00:12:58,149 --> 00:13:03,160
that tries to abstract some of the terms

00:13:01,449 --> 00:13:04,360
like you know it's trust to make it

00:13:03,160 --> 00:13:06,519
really really easy for you to get

00:13:04,360 --> 00:13:08,079
started so it's a lot simpler and

00:13:06,519 --> 00:13:09,910
there's a few examples I feel like it's

00:13:08,079 --> 00:13:12,670
not it's still kind of like in

00:13:09,910 --> 00:13:14,410
construction there's some examples and

00:13:12,670 --> 00:13:16,449
some algorithms that work but sometimes

00:13:14,410 --> 00:13:17,379
when you look at the docs you can see

00:13:16,449 --> 00:13:20,319
that it's stealing

00:13:17,379 --> 00:13:21,879
yes but definitely have a look and then

00:13:20,319 --> 00:13:23,799
if you don't really want to write any

00:13:21,879 --> 00:13:25,809
code but you just wanna pings on api's

00:13:23,799 --> 00:13:29,709
you can leverage the tools from Amazon

00:13:25,809 --> 00:13:32,649
Google and Microsoft and then the em in

00:13:29,709 --> 00:13:34,119
the middle is for yes so now if you were

00:13:32,649 --> 00:13:36,429
here yesterday you know what that is but

00:13:34,119 --> 00:13:37,749
yes so it's like some some frameworks

00:13:36,429 --> 00:13:39,549
are actually more specialized about

00:13:37,749 --> 00:13:44,709
certain type of data and to do certain

00:13:39,549 --> 00:13:46,919
things okay so we are at this part where

00:13:44,709 --> 00:13:49,659
I'm going to do some demos and code

00:13:46,919 --> 00:13:52,209
because I feel like to get people on

00:13:49,659 --> 00:13:53,439
board sometimes you know you can't just

00:13:52,209 --> 00:13:55,929
say oh it's easy you kind of have to

00:13:53,439 --> 00:13:58,539
hopefully show that it's easy so people

00:13:55,929 --> 00:14:01,059
are a bit more comfortable so to get

00:13:58,539 --> 00:14:03,549
started I'm gonna talk about the quick

00:14:01,059 --> 00:14:08,409
demo that I built around using a pre

00:14:03,549 --> 00:14:11,379
trained model so what I did so I I want

00:14:08,409 --> 00:14:13,089
to get better at recycling but I always

00:14:11,379 --> 00:14:15,489
forget what should go in

00:14:13,089 --> 00:14:17,970
what bin so that is not really helpful

00:14:15,489 --> 00:14:19,989
when you want to recycle so I wanted to

00:14:17,970 --> 00:14:21,909
see if I could use machine learning to

00:14:19,989 --> 00:14:24,369
help me do that you know kind of do it

00:14:21,909 --> 00:14:26,079
automatically so I'm gonna demo out what

00:14:24,369 --> 00:14:28,299
I did in an hour show the code so this

00:14:26,079 --> 00:14:30,129
demo is supposed to I kind of built it

00:14:28,299 --> 00:14:32,739
usually to be used on a phone so I could

00:14:30,129 --> 00:14:36,269
just like move around the desktop like

00:14:32,739 --> 00:14:41,529
it's working because it's a website but

00:14:36,269 --> 00:14:43,029
let me just all right so I'm gonna start

00:14:41,529 --> 00:14:49,829
it's gonna need the camera feed and I

00:14:43,029 --> 00:14:59,709
have a rest sticker hiding my camera I

00:14:49,829 --> 00:15:02,109
need to buy myself for real okay so if

00:14:59,709 --> 00:15:03,339
you've ever alright so I have the camera

00:15:02,109 --> 00:15:04,299
feed so you have to imagine that you

00:15:03,339 --> 00:15:06,369
have it on the phone and it's not

00:15:04,299 --> 00:15:08,139
pointing at you but so I just have like

00:15:06,369 --> 00:15:10,359
a button that here that says you know is

00:15:08,139 --> 00:15:14,439
this recyclable so it works well with

00:15:10,359 --> 00:15:27,069
bottles of water so so I'm going to put

00:15:14,439 --> 00:15:28,050
it my microphone down because I need so

00:15:27,069 --> 00:15:31,760
it is

00:15:28,050 --> 00:15:31,760
[Laughter]

00:15:31,920 --> 00:15:35,550
so then on my phone I would click yes it

00:15:34,020 --> 00:15:37,560
is a bottle and then it says oh it is

00:15:35,550 --> 00:15:39,090
recyclable 3 in the yellow bin so in

00:15:37,560 --> 00:15:43,230
Australia it's yellow actually didn't

00:15:39,090 --> 00:15:46,350
check here if it was yellow oh well ok

00:15:43,230 --> 00:15:47,910
so you can you can start again with

00:15:46,350 --> 00:15:51,500
different objects and I'm gonna exit

00:15:47,910 --> 00:16:00,390
this because I don't need to see myself

00:15:51,500 --> 00:16:02,610
so and and and yeah and so it does the

00:16:00,390 --> 00:16:04,470
whole image recognition using machine

00:16:02,610 --> 00:16:06,840
learning and then you could imagine that

00:16:04,470 --> 00:16:08,880
you could build an API that you know you

00:16:06,840 --> 00:16:10,710
can just ping to say hey this object

00:16:08,880 --> 00:16:13,980
which bin should it go in and things

00:16:10,710 --> 00:16:16,410
like that so in terms of code I used the

00:16:13,980 --> 00:16:18,990
kuku SSD open source model that's an

00:16:16,410 --> 00:16:22,290
object detection model and then I import

00:16:18,990 --> 00:16:25,470
tensorflow J's as well then you load the

00:16:22,290 --> 00:16:29,190
model to be able to use it then you get

00:16:25,470 --> 00:16:30,840
the camera element from the HTML and you

00:16:29,190 --> 00:16:33,240
use some of the tensorflow built-in

00:16:30,840 --> 00:16:36,360
methods to look at the pixels of that

00:16:33,240 --> 00:16:38,190
camera feed you transform the data so

00:16:36,360 --> 00:16:39,810
that it can be in the format that

00:16:38,190 --> 00:16:41,880
tensorflow and the model is expecting

00:16:39,810 --> 00:16:44,160
and then finally you kind of give that

00:16:41,880 --> 00:16:45,630
processed image to the model and you ask

00:16:44,160 --> 00:16:46,950
it for predictions it's kind of like

00:16:45,630 --> 00:16:48,630
here's the de Graaff from the webcam

00:16:46,950 --> 00:16:51,630
feed have you seen this before do you

00:16:48,630 --> 00:16:55,620
know what this is and it recognized that

00:16:51,630 --> 00:16:56,820
you know my bottle so of course you know

00:16:55,620 --> 00:16:58,620
there's a bit more code around like the

00:16:56,820 --> 00:17:00,690
UI and buttons and things but just to be

00:16:58,620 --> 00:17:02,520
able to recognize images using that

00:17:00,690 --> 00:17:04,860
model that's basically just it you load

00:17:02,520 --> 00:17:06,690
the model you get the data from the

00:17:04,860 --> 00:17:08,430
camera feed and then you transform it a

00:17:06,690 --> 00:17:11,220
little bit and you ask the model you

00:17:08,430 --> 00:17:13,100
know can you detect this so at the first

00:17:11,220 --> 00:17:16,010
thing of importing a pre-training model

00:17:13,100 --> 00:17:18,360
that's it so now let's talk about

00:17:16,010 --> 00:17:21,510
transfer learning so transfer learning

00:17:18,360 --> 00:17:23,490
as I said before is using a pre trained

00:17:21,510 --> 00:17:26,190
model by adding your own samples so for

00:17:23,490 --> 00:17:27,630
this one I so I like to try and play

00:17:26,190 --> 00:17:30,480
around with new technologies and mixing

00:17:27,630 --> 00:17:34,320
them with accessibility so I'm just

00:17:30,480 --> 00:17:37,500
gonna launch the oh I'm still here okay

00:17:34,320 --> 00:17:41,190
so this one is gonna use the camera as

00:17:37,500 --> 00:17:42,760
well so say the camera feed is gonna be

00:17:41,190 --> 00:17:44,020
really small but there's

00:17:42,760 --> 00:17:46,720
for that like you're not supposed to see

00:17:44,020 --> 00:17:48,940
it I just showed it so so you would see

00:17:46,720 --> 00:17:51,670
the what's going on but okay so I'm

00:17:48,940 --> 00:17:54,040
gonna go to the right I'm adding samples

00:17:51,670 --> 00:18:00,940
I'm gonna go to the left I'm gonna go

00:17:54,040 --> 00:18:03,520
down then I am testing okay down lift

00:18:00,940 --> 00:18:05,530
right that's pretty good and then I'm

00:18:03,520 --> 00:18:07,360
able to actually unless like you know

00:18:05,530 --> 00:18:09,790
what 30 seconds I trained a model to

00:18:07,360 --> 00:18:18,810
recognize my hand movement my head

00:18:09,790 --> 00:18:18,810
gestures and I can write like why

00:18:25,170 --> 00:18:29,800
all right so I really like this is like

00:18:27,400 --> 00:18:31,870
my favorite feature of using javascript

00:18:29,800 --> 00:18:33,250
for machine learning and in terms of

00:18:31,870 --> 00:18:35,740
code so there's a little bit more code

00:18:33,250 --> 00:18:36,940
that I can't go too much into it because

00:18:35,740 --> 00:18:39,790
I'm looking at the time and I think I'm

00:18:36,940 --> 00:18:41,920
gonna be over time but I'm loading

00:18:39,790 --> 00:18:44,860
another kind of like image recognition

00:18:41,920 --> 00:18:47,230
model called mobile net I'm again

00:18:44,860 --> 00:18:49,060
loading tensorflow GS but I'm also

00:18:47,230 --> 00:18:51,430
adding a classifier because I need to

00:18:49,060 --> 00:18:54,640
kind of reclassify my my personal

00:18:51,430 --> 00:18:56,440
samples with the model then you just

00:18:54,640 --> 00:18:58,180
declare some variables I have four

00:18:56,440 --> 00:19:00,070
classes that I'm trying to classify

00:18:58,180 --> 00:19:02,110
because I had four gestures but it could

00:19:00,070 --> 00:19:05,950
be you know the number that you want the

00:19:02,110 --> 00:19:07,990
image size of 227 that is hard-coded I

00:19:05,950 --> 00:19:11,410
started that from an example I think

00:19:07,990 --> 00:19:12,820
it's because the bigger the image the

00:19:11,410 --> 00:19:14,770
longer it's going to take to train so I

00:19:12,820 --> 00:19:18,040
think if you want it to be fast then 27

00:19:14,770 --> 00:19:20,230
is fine the top K is the K value for K

00:19:18,040 --> 00:19:21,850
nearest neighbor that is kind of

00:19:20,230 --> 00:19:23,470
arbitrary as well you can change it I

00:19:21,850 --> 00:19:25,180
can't go too much into what the

00:19:23,470 --> 00:19:27,570
algorithm actually does but this value

00:19:25,180 --> 00:19:30,160
is needed but it doesn't have to be ten

00:19:27,570 --> 00:19:32,260
but then so the more interesting part is

00:19:30,160 --> 00:19:34,660
we create the classifier you load your

00:19:32,260 --> 00:19:36,190
module then you do the same thing as

00:19:34,660 --> 00:19:38,440
before you look at the data coming from

00:19:36,190 --> 00:19:40,660
the camera feed but instead of giving it

00:19:38,440 --> 00:19:43,390
straight to the model you kind of have

00:19:40,660 --> 00:19:46,090
to like I did with what's going on with

00:19:43,390 --> 00:19:48,280
the model that you loaded so I'm not

00:19:46,090 --> 00:19:49,960
exactly sure exactly what the infamous

00:19:48,280 --> 00:19:52,990
that does before what I understand it

00:19:49,960 --> 00:19:53,910
kind of merges your image data from the

00:19:52,990 --> 00:19:56,160
browser

00:19:53,910 --> 00:19:57,539
to the mobile net module and then it

00:19:56,160 --> 00:19:59,130
adds all of this to the K nearest

00:19:57,539 --> 00:20:01,230
neighbor classifier that you are created

00:19:59,130 --> 00:20:04,860
before and then you're able to predict

00:20:01,230 --> 00:20:06,570
the class of your new samples based on

00:20:04,860 --> 00:20:08,429
this merge of the model and your

00:20:06,570 --> 00:20:11,520
personal samples so then you kind of get

00:20:08,429 --> 00:20:15,539
a prediction of your current position in

00:20:11,520 --> 00:20:16,890
my personal sample like type and yeah

00:20:15,539 --> 00:20:19,140
that's it so that was a very poor

00:20:16,890 --> 00:20:20,789
explanation but in terms of steps you

00:20:19,140 --> 00:20:22,590
create a classifier you load the module

00:20:20,789 --> 00:20:24,780
you look again at the data coming from

00:20:22,590 --> 00:20:26,909
the webcam you kind of do the merge and

00:20:24,780 --> 00:20:28,740
you ask your model to predict and then

00:20:26,909 --> 00:20:30,990
finally you can dispose of the images

00:20:28,740 --> 00:20:32,460
that you got from your webcam because

00:20:30,990 --> 00:20:34,070
you kind of already retrained the

00:20:32,460 --> 00:20:36,210
classifier so you don't need to keep it

00:20:34,070 --> 00:20:38,750
so that was for transfer learning and

00:20:36,210 --> 00:20:42,419
then finally doing everything in

00:20:38,750 --> 00:20:44,909
transcript so for this one this demo I'm

00:20:42,419 --> 00:20:45,870
always a little bit nervous because I

00:20:44,909 --> 00:20:48,780
don't know how people are gonna take it

00:20:45,870 --> 00:20:50,960
but yesterday somebody mentioned pornhub

00:20:48,780 --> 00:20:55,350
on stage I think I'm fine

00:20:50,960 --> 00:20:58,380
what I built is a wheelie detector so

00:20:55,350 --> 00:21:00,030
we're gonna stay on the same level if

00:20:58,380 --> 00:21:03,230
you don't know what a wheelie is a

00:21:00,030 --> 00:21:05,280
wheelie is a penis but it's not pictures

00:21:03,230 --> 00:21:07,559
I'm not crazy

00:21:05,280 --> 00:21:09,809
so and also I'm really not interested in

00:21:07,559 --> 00:21:12,809
pictures of this so I'm just gonna

00:21:09,809 --> 00:21:15,740
launch it quickly I'm just I mean if you

00:21:12,809 --> 00:21:17,520
just go stop this it was still going

00:21:15,740 --> 00:21:20,370
well there's a bit small but that should

00:21:17,520 --> 00:21:22,679
be alright so basically I build

00:21:20,370 --> 00:21:23,669
something from scratch that recognized

00:21:22,679 --> 00:21:27,330
I'm gonna start with something you know

00:21:23,669 --> 00:21:30,419
like safe OOP so it's a Kindle just

00:21:27,330 --> 00:21:32,159
think if that's the Kindle and if I

00:21:30,419 --> 00:21:35,039
predict it tells me it's not a really is

00:21:32,159 --> 00:21:38,669
that yes it's not a wheelie and then I

00:21:35,039 --> 00:21:42,080
can clear a and do I need no I don't

00:21:38,669 --> 00:21:42,080
need two hands for this so

00:21:44,050 --> 00:21:52,510
and Willie okay and what I forgot to say

00:21:50,410 --> 00:21:54,450
I forgot to talk about why I built this

00:21:52,510 --> 00:21:58,480
because I don't just spend my spare time

00:21:54,450 --> 00:21:59,980
drawing release so I built this because

00:21:58,480 --> 00:22:02,170
I wanted to build something else where I

00:21:59,980 --> 00:22:04,360
wanted to let people collaborate on the

00:22:02,170 --> 00:22:06,670
browser you know using WebSockets from

00:22:04,360 --> 00:22:08,050
like anywhere in the world but I you

00:22:06,670 --> 00:22:09,730
when you let people draw stuff on the

00:22:08,050 --> 00:22:11,260
Internet you can be sure that they're

00:22:09,730 --> 00:22:12,640
gonna be trying Willy's and I didn't

00:22:11,260 --> 00:22:14,050
want to spend my time checking you know

00:22:12,640 --> 00:22:15,460
what are people drawing and then

00:22:14,050 --> 00:22:17,350
deleting it and stuff like that so

00:22:15,460 --> 00:22:19,720
that's my way of using machine learning

00:22:17,350 --> 00:22:21,550
to do that for me so at the moment you

00:22:19,720 --> 00:22:23,470
know like I have to click to be able to

00:22:21,550 --> 00:22:25,780
predict if it's really or not but you

00:22:23,470 --> 00:22:28,630
can actually change the code to detect

00:22:25,780 --> 00:22:29,860
as somebody is drawing so I mean you

00:22:28,630 --> 00:22:32,380
would you wouldn't even have time to

00:22:29,860 --> 00:22:33,580
finish the woolie would be gone so I

00:22:32,380 --> 00:22:36,130
still haven't been on that project but

00:22:33,580 --> 00:22:40,090
I'm still happy with that so now let's

00:22:36,130 --> 00:22:44,640
talk about how I put it together okay so

00:22:40,090 --> 00:22:46,900
first of all and because when you do

00:22:44,640 --> 00:22:50,700
yeah I know and that's the only thing

00:22:46,900 --> 00:22:53,890
people remember from the talk so so

00:22:50,700 --> 00:22:55,660
because okay so when you build when you

00:22:53,890 --> 00:22:57,550
do everything from scratch you usually

00:22:55,660 --> 00:22:59,860
have to kind of you have you need data

00:22:57,550 --> 00:23:01,540
right so on the right you have the quick

00:22:59,860 --> 00:23:03,190
road that I said that Google put

00:23:01,540 --> 00:23:05,200
together where they there was a game

00:23:03,190 --> 00:23:06,640
online where people could were asked to

00:23:05,200 --> 00:23:09,220
draw I don't know a strawberry and a

00:23:06,640 --> 00:23:11,140
door and glasses and actually all these

00:23:09,220 --> 00:23:13,360
samples were downloaded so they were

00:23:11,140 --> 00:23:15,640
actually saved in a database and Google

00:23:13,360 --> 00:23:17,590
put this data set open source so you can

00:23:15,640 --> 00:23:19,660
use it the thing is obviously Google did

00:23:17,590 --> 00:23:22,510
not ask people to draw Willie's but I

00:23:19,660 --> 00:23:24,220
needed them for my you know for my

00:23:22,510 --> 00:23:25,390
prototype because if it doesn't know

00:23:24,220 --> 00:23:27,610
what it really is it can't tell me if

00:23:25,390 --> 00:23:29,320
it's one enough so I drew some of them

00:23:27,610 --> 00:23:32,290
definitely know as many as the data set

00:23:29,320 --> 00:23:34,750
because that's like millions but so I

00:23:32,290 --> 00:23:37,210
needed that so I needed to have data

00:23:34,750 --> 00:23:38,940
together the thing is that when I drew

00:23:37,210 --> 00:23:43,000
my own

00:23:38,940 --> 00:23:45,220
but so when I drew it on the canvas on

00:23:43,000 --> 00:23:47,440
the in the browser it was 200 by 200

00:23:45,220 --> 00:23:49,480
pixels but the images in the data set

00:23:47,440 --> 00:23:51,400
were 28 by 28 so for me to be able to

00:23:49,480 --> 00:23:54,119
work with them usually have to do some

00:23:51,400 --> 00:23:56,219
kind of data processing where you have

00:23:54,119 --> 00:23:59,279
you resize so that the whole data set is

00:23:56,219 --> 00:24:01,769
the same size of pixels and then finally

00:23:59,279 --> 00:24:03,869
finally next you do you split between

00:24:01,769 --> 00:24:06,059
the training set and the test set where

00:24:03,869 --> 00:24:08,369
it's usually 80% and 20% and the reason

00:24:06,059 --> 00:24:10,259
why you do that is because you uses 80%

00:24:08,369 --> 00:24:11,789
of your data set to train your models so

00:24:10,259 --> 00:24:14,909
it kind of understands is it a wheelie

00:24:11,789 --> 00:24:16,859
or is it candle and then your test data

00:24:14,909 --> 00:24:18,959
that is already labeled you already know

00:24:16,859 --> 00:24:21,299
what each image is you use that to

00:24:18,959 --> 00:24:23,939
against your model that you created to

00:24:21,299 --> 00:24:25,109
see if the accuracy is right and if it's

00:24:23,939 --> 00:24:28,139
not right you know that you have to

00:24:25,109 --> 00:24:29,729
retrain but then after you split your

00:24:28,139 --> 00:24:31,619
data then you can choose your algorithm

00:24:29,729 --> 00:24:34,619
I don't really think there's a purpose

00:24:31,619 --> 00:24:36,539
to choose it before but I in this

00:24:34,619 --> 00:24:38,879
particular case I used what we call the

00:24:36,539 --> 00:24:41,639
CNN convolutional neural network because

00:24:38,879 --> 00:24:44,279
from what I read it was with images so

00:24:41,639 --> 00:24:48,359
you know I have images then you can do

00:24:44,279 --> 00:24:50,429
some parameter tuning you train you get

00:24:48,359 --> 00:24:51,689
your prediction and depending on you

00:24:50,429 --> 00:24:53,519
know the level of accuracy if you're

00:24:51,689 --> 00:24:55,499
happy or not with it you kind of repeat

00:24:53,519 --> 00:24:57,779
these steps over and over again you will

00:24:55,499 --> 00:25:00,599
rarely get a very good accuracy the

00:24:57,779 --> 00:25:02,549
first time parameter tuning is kind of

00:25:00,599 --> 00:25:04,949
like weird as well like you yeah you

00:25:02,549 --> 00:25:06,899
don't really understand sometimes why

00:25:04,949 --> 00:25:08,219
changing a parameter makes the accuracy

00:25:06,899 --> 00:25:11,219
better but you kind of have to play

00:25:08,219 --> 00:25:13,139
around with it so in terms of code I'm

00:25:11,219 --> 00:25:15,329
gonna show like a really small code

00:25:13,139 --> 00:25:17,699
sample I try to get like the core bits

00:25:15,329 --> 00:25:19,829
of it but what you have to do intensive

00:25:17,699 --> 00:25:22,199
flow you have to create tenses which is

00:25:19,829 --> 00:25:23,849
basically like the way a way to shape

00:25:22,199 --> 00:25:26,009
the data so that tensorflow will

00:25:23,849 --> 00:25:27,539
understand how to deal with it and as I

00:25:26,009 --> 00:25:31,169
said you have to create a training set

00:25:27,539 --> 00:25:33,179
and a test set and then you create your

00:25:31,169 --> 00:25:36,629
model so I have a sequential model and I

00:25:33,179 --> 00:25:38,909
add layers of a convolutional 2d layer

00:25:36,629 --> 00:25:41,459
and then you add different layers as

00:25:38,909 --> 00:25:44,009
well I don't have time to really go into

00:25:41,459 --> 00:25:45,539
this in depth but also the amount of

00:25:44,009 --> 00:25:47,279
layer is it a bit arbitrary some time we

00:25:45,539 --> 00:25:49,289
can remove some add some see how it

00:25:47,279 --> 00:25:51,029
performs the parameters meaning that I

00:25:49,289 --> 00:25:53,429
was talking about is what you see like

00:25:51,029 --> 00:25:55,319
kernel size and filters that's a little

00:25:53,429 --> 00:25:59,249
bit more of a like an art than a science

00:25:55,319 --> 00:26:00,599
you kind of see what works then you get

00:25:59,249 --> 00:26:02,639
your training data you do what we call

00:26:00,599 --> 00:26:04,889
fittings so you give that training data

00:26:02,639 --> 00:26:06,169
in labels to the model you pass it a few

00:26:04,889 --> 00:26:07,309
parameters and

00:26:06,169 --> 00:26:09,200
and what you do is that you get your

00:26:07,309 --> 00:26:12,799
taste data and you test it against the

00:26:09,200 --> 00:26:14,179
model so using them the testing data you

00:26:12,799 --> 00:26:17,239
give it to the model you get the

00:26:14,179 --> 00:26:18,950
prediction and if you get the right

00:26:17,239 --> 00:26:21,499
label that you're expecting then it

00:26:18,950 --> 00:26:22,879
means that it's fine if you want to look

00:26:21,499 --> 00:26:26,600
into this the documentation for

00:26:22,879 --> 00:26:28,850
tensorflow J's is actually really good

00:26:26,600 --> 00:26:30,169
a few limits very quickly so you need a

00:26:28,850 --> 00:26:32,749
large amount of data if you're not using

00:26:30,169 --> 00:26:34,159
a pre trained model you know as we

00:26:32,749 --> 00:26:35,359
talked about before for a computer to

00:26:34,159 --> 00:26:38,809
understand what something is usually

00:26:35,359 --> 00:26:40,369
needs millions of samples it can take a

00:26:38,809 --> 00:26:42,080
lot of time to train your own model

00:26:40,369 --> 00:26:43,609
depending on what you're trying to do

00:26:42,080 --> 00:26:46,239
especially if you're I think dealing

00:26:43,609 --> 00:26:48,109
with images it can take a lot of time I

00:26:46,239 --> 00:26:51,049
remember to think about the mobile

00:26:48,109 --> 00:26:53,090
experience because when I was playing

00:26:51,049 --> 00:26:54,950
with loading like importing a pre train

00:26:53,090 --> 00:26:57,859
model some models can be a few megabytes

00:26:54,950 --> 00:27:00,080
and that kind of hurts so if you're on

00:26:57,859 --> 00:27:02,690
like a low network it's gonna be really

00:27:00,080 --> 00:27:05,090
impossible and even in terms of using

00:27:02,690 --> 00:27:07,070
the battery of a mobile device it can be

00:27:05,090 --> 00:27:08,179
quite expensive so just you know think

00:27:07,070 --> 00:27:11,809
about that if you try to develop

00:27:08,179 --> 00:27:13,669
something liability sometimes when you

00:27:11,809 --> 00:27:14,840
use machine learning models you actually

00:27:13,669 --> 00:27:17,600
don't understand what's going on in the

00:27:14,840 --> 00:27:19,220
background so if you decide to use

00:27:17,600 --> 00:27:21,350
machine learning to build an application

00:27:19,220 --> 00:27:23,499
who decides who gets alone or who gets

00:27:21,350 --> 00:27:25,850
into what expensive school or whatever

00:27:23,499 --> 00:27:27,739
you have to be sure that if you tell

00:27:25,850 --> 00:27:29,570
somebody that they can't get a loan or

00:27:27,739 --> 00:27:31,039
that they can't get accepted and they

00:27:29,570 --> 00:27:33,289
sue you you can't just say oh we use

00:27:31,039 --> 00:27:34,789
machine learning so I don't know you

00:27:33,289 --> 00:27:36,619
have to just be able to explain what

00:27:34,789 --> 00:27:37,909
happened and most of the time people

00:27:36,619 --> 00:27:40,700
don't know well I definitely don't know

00:27:37,909 --> 00:27:42,259
and then finally and really opponent Lee

00:27:40,700 --> 00:27:44,389
even if you're not interested in coding

00:27:42,259 --> 00:27:46,519
machine learning the topic of bias and

00:27:44,389 --> 00:27:49,249
ethics in AI is like super interesting

00:27:46,519 --> 00:27:51,499
and I just like to mention often the

00:27:49,249 --> 00:27:53,869
algorithms are not biased we are I feel

00:27:51,499 --> 00:27:55,429
like we love to push the responsibility

00:27:53,869 --> 00:27:58,970
on a piece of code and not just like

00:27:55,429 --> 00:28:01,700
look at what we do wrong so remember

00:27:58,970 --> 00:28:03,470
algorithms is just code and the reason

00:28:01,700 --> 00:28:05,690
why we say it's biased is because of the

00:28:03,470 --> 00:28:07,450
data that we give it and the data that

00:28:05,690 --> 00:28:09,919
we give it is something that we produce

00:28:07,450 --> 00:28:13,309
so just a quick example here this was

00:28:09,919 --> 00:28:15,139
already a few years ago so I hope they

00:28:13,309 --> 00:28:17,389
fixed it now though if you if you use

00:28:15,139 --> 00:28:19,400
before Google translates with some

00:28:17,389 --> 00:28:21,470
languages are gender neutral and

00:28:19,400 --> 00:28:22,910
if you translate some languages it to

00:28:21,470 --> 00:28:26,420
English then all of a sudden it becomes

00:28:22,910 --> 00:28:29,120
gendered where you have things like he

00:28:26,420 --> 00:28:31,340
is hardworking and she's lazy like all

00:28:29,120 --> 00:28:32,960
of a sudden his gendered I'm not lazy I

00:28:31,340 --> 00:28:36,830
mean you know she's a cook he's an

00:28:32,960 --> 00:28:38,120
engineer that's the worst so it's that

00:28:36,830 --> 00:28:40,250
kind of stuff it's like and then you had

00:28:38,120 --> 00:28:42,740
articles around oh you know a Google

00:28:40,250 --> 00:28:45,170
Translate is sexist it's like well what

00:28:42,740 --> 00:28:46,580
do you think it's the data from so I

00:28:45,170 --> 00:28:49,160
think it's just remember I mean I do

00:28:46,580 --> 00:28:50,840
think that machine learning can help us

00:28:49,160 --> 00:28:52,550
recognize some of our biases and then

00:28:50,840 --> 00:28:56,000
help us you know be better but the

00:28:52,550 --> 00:28:59,000
algorithm itself is not the problem okay

00:28:56,000 --> 00:29:01,160
I'm getting to the end of my talk so the

00:28:59,000 --> 00:29:05,150
story about that one is that so I gave

00:29:01,160 --> 00:29:08,660
this talk I'm just looked at the unicorn

00:29:05,150 --> 00:29:11,330
so I gave this took a few weeks ago in

00:29:08,660 --> 00:29:12,770
Lithuania and a few like just a day

00:29:11,330 --> 00:29:13,940
before or a few days before I had

00:29:12,770 --> 00:29:15,440
finished the prototype that I was

00:29:13,940 --> 00:29:17,120
building that I was like super excited

00:29:15,440 --> 00:29:19,429
about that involved machine learning and

00:29:17,120 --> 00:29:21,770
JavaScript and I wanted to show the

00:29:19,429 --> 00:29:22,700
world but as I showed it well now for

00:29:21,770 --> 00:29:25,940
some people it's not a surprise anymore

00:29:22,700 --> 00:29:28,010
but um I thought that if I didn't show

00:29:25,940 --> 00:29:31,400
it here it would be unfair so I'm gonna

00:29:28,010 --> 00:29:33,050
show it as well and and yeah it's a toy

00:29:31,400 --> 00:29:35,030
it's supposed to be a topic for a talk

00:29:33,050 --> 00:29:36,679
later this year but it is related

00:29:35,030 --> 00:29:37,820
because it uses machine learning so I

00:29:36,679 --> 00:29:42,050
hope it's gonna work so the inspiration

00:29:37,820 --> 00:29:44,450
for this is so this is a prototype built

00:29:42,050 --> 00:29:46,880
by a developer called Minko Jewish who

00:29:44,450 --> 00:29:49,070
used the webcam feed to train their

00:29:46,880 --> 00:29:52,190
algorithm to recognize some gestures to

00:29:49,070 --> 00:29:54,010
then apply it to a game - so to be able

00:29:52,190 --> 00:29:56,660
to have this personalized experience of

00:29:54,010 --> 00:29:58,730
of playing a game the thing I was

00:29:56,660 --> 00:30:00,920
thinking though is that well you have to

00:29:58,730 --> 00:30:02,450
be in front of the webcam so what if all

00:30:00,920 --> 00:30:04,340
of sudden it's dark you can't play

00:30:02,450 --> 00:30:06,080
anymore so there was a bit of a shame as

00:30:04,340 --> 00:30:09,800
I'm home I think I can do something

00:30:06,080 --> 00:30:11,900
about it so I'm gonna try I need to

00:30:09,800 --> 00:30:13,870
remember what I have to do I think I

00:30:11,900 --> 00:30:16,220
have it ready let me think

00:30:13,870 --> 00:30:18,460
I'm gonna have some water if you don't

00:30:16,220 --> 00:30:18,460
mind

00:30:44,809 --> 00:30:50,610
right hopefully is going to work so

00:30:48,419 --> 00:30:55,190
preaching said that we could use the

00:30:50,610 --> 00:30:58,490
unicorn so I'm gonna use the

00:30:55,190 --> 00:31:02,030
it's me and you now unicorn they can

00:30:58,490 --> 00:31:03,770
only be one a rainbow on this stage so

00:31:02,030 --> 00:31:11,120
lemme try something I'm the one on the

00:31:03,770 --> 00:31:13,210
round in red okay it didn't work okay

00:31:11,120 --> 00:31:26,470
wait

00:31:13,210 --> 00:31:26,470
[Music]

00:31:28,890 --> 00:31:32,680
oh I just like to do that mister

00:31:32,530 --> 00:31:34,580
[Music]

00:31:32,680 --> 00:31:42,080
[Applause]

00:31:34,580 --> 00:31:42,080
[Music]

00:31:45,809 --> 00:31:53,669
I love how the music you play okay

00:31:50,850 --> 00:31:58,360
[Music]

00:31:53,669 --> 00:31:59,770
No okay I'll give it one last try this

00:31:58,360 --> 00:32:02,210
is what happens when you get shitty for

00:31:59,770 --> 00:32:05,280
the guys in two hours

00:32:02,210 --> 00:32:07,680
[Music]

00:32:05,280 --> 00:32:08,200
Apple pencil who is using an Apple

00:32:07,680 --> 00:32:10,430
pencil

00:32:08,200 --> 00:32:17,260
[Music]

00:32:10,430 --> 00:32:21,010
you ruined my demo one last time

00:32:17,260 --> 00:32:25,720
no I will not get off this stage until

00:32:21,010 --> 00:32:30,430
it works I'm sorry for the speaker after

00:32:25,720 --> 00:32:32,650
me all right I swear

00:32:30,430 --> 00:32:34,860
okay is somebody using bluetooth and

00:32:32,650 --> 00:32:37,140
they're like that was working this

00:32:34,860 --> 00:32:39,160
[Music]

00:32:37,140 --> 00:32:42,369
don't let me down

00:32:39,160 --> 00:32:42,369
[Music]

00:32:47,170 --> 00:32:50,010
alright let me just

00:32:54,090 --> 00:33:15,119
it's not the way to end

00:32:57,790 --> 00:33:15,119
[Music]

00:33:15,830 --> 00:33:18,830
yes

00:33:20,850 --> 00:33:26,550
[Music]

00:33:26,390 --> 00:33:32,339
[Applause]

00:33:26,550 --> 00:33:32,339
[Music]

00:33:32,629 --> 00:33:40,769
this was like one of my worst life ever

00:33:37,309 --> 00:33:43,470
all right so just very very briefly I

00:33:40,769 --> 00:33:47,190
wish I wish we just like yeah well magic

00:33:43,470 --> 00:33:48,720
not so much I I am you know in the

00:33:47,190 --> 00:33:50,399
process of writing like a post about how

00:33:48,720 --> 00:33:51,389
that works and stuff like that I don't

00:33:50,399 --> 00:33:54,240
know if you want to know that because

00:33:51,389 --> 00:33:56,070
yes so just quickly a few resources I

00:33:54,240 --> 00:33:58,679
can share the slides online later but

00:33:56,070 --> 00:34:01,080
here's a few tools and useful links and

00:33:58,679 --> 00:34:04,549
I'm Way over time that I said and well

00:34:01,080 --> 00:34:04,549

YouTube URL: https://www.youtube.com/watch?v=rwFiFWI23Rw


