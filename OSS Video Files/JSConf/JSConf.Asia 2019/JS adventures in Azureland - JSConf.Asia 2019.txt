Title: JS adventures in Azureland - JSConf.Asia 2019
Publication date: 2019-07-05
Playlist: JSConf.Asia 2019
Description: 
	Speaker: Microsoft - Vito Chin

Come have a whirlwind tour of the Azure cloud where you'll be travelling through the seas of Javascript on a boat christened VSCode.

Vito is the resident Node.js punter at Microsoft APAC where he guides partners and tourists on Azureland tours with his mighty VSCode gondola.

Event Page: https://2019.jsconf.asia/

Produced by Engineers.SG

Help us caption & translate this video!

https://amara.org/v/pl0y/
Captions: 
	00:00:05,490 --> 00:00:18,410
[Music]

00:00:07,640 --> 00:00:28,740
you know right cool hi thanks for coming

00:00:18,410 --> 00:00:33,870
so what's that right so can we do retake

00:00:28,740 --> 00:00:38,400
this mic is really loud no no better

00:00:33,870 --> 00:00:40,380
yeah okay so yeah Jess adventures in

00:00:38,400 --> 00:00:43,980
edulearn what what is it about right

00:00:40,380 --> 00:00:46,590
so really it's less formal than my

00:00:43,980 --> 00:00:48,630
colleague says my colleagues talk so

00:00:46,590 --> 00:00:53,340
it's really about things that I'm doing

00:00:48,630 --> 00:00:56,970
and some of the less normal things right

00:00:53,340 --> 00:00:59,340
right it's a little bit different a

00:00:56,970 --> 00:01:03,960
little bit but I'll let you be the judge

00:00:59,340 --> 00:01:07,170
of it okay so our stats so a couple of

00:01:03,960 --> 00:01:10,620
info about myself I am a cloud solution

00:01:07,170 --> 00:01:14,220
architect for Microsoft so my day job

00:01:10,620 --> 00:01:16,260
consists of working on with partners

00:01:14,220 --> 00:01:21,240
Microsoft partners on blockchain app

00:01:16,260 --> 00:01:26,070
development and general as your stuff I

00:01:21,240 --> 00:01:28,440
could so I maintain a graphic

00:01:26,070 --> 00:01:30,630
manipulation library in PHP called G

00:01:28,440 --> 00:01:35,520
magic I've been doing that for 11 years

00:01:30,630 --> 00:01:38,510
now yeah so let's please fever this is a

00:01:35,520 --> 00:01:43,460
JavaScript conference but yeah anyway I

00:01:38,510 --> 00:01:47,070
also do some personal finance moving

00:01:43,460 --> 00:01:50,640
around Ledger's your life ahead of it so

00:01:47,070 --> 00:01:55,229
I do like a electron I mean I keep

00:01:50,640 --> 00:01:59,119
around like just CLI so that's for fun

00:01:55,229 --> 00:02:04,170
and I also started a automation package

00:01:59,119 --> 00:02:07,129
for kind of like it's kind of like a

00:02:04,170 --> 00:02:13,230
cron for JavaScript so I presented that

00:02:07,129 --> 00:02:14,959
about in gs con 16 yeah so that's kind

00:02:13,230 --> 00:02:19,480
of like my open source

00:02:14,959 --> 00:02:21,980
kind of like and that was so I also

00:02:19,480 --> 00:02:24,440
created a book based on Bertrand

00:02:21,980 --> 00:02:26,950
Russell's conquest of happiness so it's

00:02:24,440 --> 00:02:31,129
really just sticking that book and

00:02:26,950 --> 00:02:33,110
infusing some pictorial illustration of

00:02:31,129 --> 00:02:39,620
what Bertrand Russell was trying to

00:02:33,110 --> 00:02:43,810
explain so yeah let's dive in Jes in

00:02:39,620 --> 00:02:48,230
Nashville and so we're gonna start with

00:02:43,810 --> 00:02:52,400
the entrance the teapot right how this

00:02:48,230 --> 00:02:55,310
how does user actually get into your app

00:02:52,400 --> 00:02:57,260
right so most apps today you need to

00:02:55,310 --> 00:03:02,750
login right or you need to be

00:02:57,260 --> 00:03:04,849
authenticated somehow so so yeah the

00:03:02,750 --> 00:03:08,540
first topic is about as Active Directory

00:03:04,849 --> 00:03:12,140
and and how to work with it right so

00:03:08,540 --> 00:03:15,099
that's there's life is like ad al-adel

00:03:12,140 --> 00:03:19,280
Active Directory authentication library

00:03:15,099 --> 00:03:23,209
and so I'm not using that this is a

00:03:19,280 --> 00:03:27,739
different way and again like I say this

00:03:23,209 --> 00:03:30,200
is like an adventure right so you can

00:03:27,739 --> 00:03:32,359
have a look and see if this is suitable

00:03:30,200 --> 00:03:35,750
for your projects so there is a very

00:03:32,359 --> 00:03:40,010
specific subtlety that require a

00:03:35,750 --> 00:03:41,180
different way in a while so why Active

00:03:40,010 --> 00:03:43,940
Directory right

00:03:41,180 --> 00:03:46,970
I presume some of you may already know

00:03:43,940 --> 00:03:51,340
it's easier to is easier than managing

00:03:46,970 --> 00:03:53,959
your own user base and identity system

00:03:51,340 --> 00:03:55,940
it's scalable obviously is on the cloud

00:03:53,959 --> 00:03:58,579
so you know it's not it's not

00:03:55,940 --> 00:04:03,430
constrained to a server and it's also

00:03:58,579 --> 00:04:10,459
very well integrated with enterprise as

00:04:03,430 --> 00:04:12,709
and such okay so the traditional for

00:04:10,459 --> 00:04:17,000
Active Directory looks like this right

00:04:12,709 --> 00:04:22,070
the user comes from a browser it goes to

00:04:17,000 --> 00:04:25,340
it gets redirected to authorize endpoint

00:04:22,070 --> 00:04:27,680
that endpoint returns an ID token which

00:04:25,340 --> 00:04:29,810
is then passed to a web server the web

00:04:27,680 --> 00:04:33,680
server then does more talk more of

00:04:29,810 --> 00:04:37,280
actually getting the the token another

00:04:33,680 --> 00:04:38,720
token from an API that you can actually

00:04:37,280 --> 00:04:41,240
use to communicate

00:04:38,720 --> 00:04:44,870
I should make API calls the backend

00:04:41,240 --> 00:04:45,800
server right but I wanted to show

00:04:44,870 --> 00:04:47,870
something different

00:04:45,800 --> 00:04:51,860
looking at that yeah that's totally fine

00:04:47,870 --> 00:04:57,560
so what I'm showing here is basically a

00:04:51,860 --> 00:05:00,380
react based active directory what does

00:04:57,560 --> 00:05:01,340
that even mean right I need a I need a a

00:05:00,380 --> 00:05:04,190
a framework

00:05:01,340 --> 00:05:04,880
I need a platform that I can get on

00:05:04,190 --> 00:05:11,930
right

00:05:04,880 --> 00:05:14,570
I found Jason Moss dwt off example I

00:05:11,930 --> 00:05:16,789
have met this guy but I found this on

00:05:14,570 --> 00:05:18,919
github right and I think it's Australian

00:05:16,789 --> 00:05:22,310
but anyway so he did a really good

00:05:18,919 --> 00:05:24,199
example of logging in from a react app

00:05:22,310 --> 00:05:27,710
so as you see from the left side this

00:05:24,199 --> 00:05:31,729
react Redux GWT authentication example

00:05:27,710 --> 00:05:33,770
so perfect for me so yeah is very

00:05:31,729 --> 00:05:37,030
prevalent these days like we get a lot

00:05:33,770 --> 00:05:39,740
more yeah even for intranet applications

00:05:37,030 --> 00:05:41,570
so so I actually found myself in this

00:05:39,740 --> 00:05:44,510
situation but I need a publicly

00:05:41,570 --> 00:05:46,970
demonstrate ball platform so I'm using

00:05:44,510 --> 00:05:49,190
this so what you see on the left is

00:05:46,970 --> 00:05:51,380
react react without the WT

00:05:49,190 --> 00:05:55,490
authentication and what you see on the

00:05:51,380 --> 00:06:00,110
right is a GWT authentication so how

00:05:55,490 --> 00:06:04,010
what happens is the front-end actually

00:06:00,110 --> 00:06:06,979
serves the form for the user to login so

00:06:04,010 --> 00:06:09,229
the user inputs the username and

00:06:06,979 --> 00:06:11,510
password as you know you should practice

00:06:09,229 --> 00:06:15,260
and that username and password gets

00:06:11,510 --> 00:06:17,419
passed gets posted the backend the

00:06:15,260 --> 00:06:21,020
backend authenticates the user and

00:06:17,419 --> 00:06:26,300
returns the GWT token so very vanilla

00:06:21,020 --> 00:06:27,919
things right so my my challenge right

00:06:26,300 --> 00:06:31,250
why I'm doing this why why this

00:06:27,919 --> 00:06:32,559
adventure is because of a specific

00:06:31,250 --> 00:06:36,639
requirement

00:06:32,559 --> 00:06:40,899
so the developers for example in this

00:06:36,639 --> 00:06:42,549
case this particular react I was

00:06:40,899 --> 00:06:45,159
thinking you know if I could find a way

00:06:42,549 --> 00:06:48,399
to not modify the existing way that the

00:06:45,159 --> 00:06:51,669
application does authentication you know

00:06:48,399 --> 00:06:56,589
getting a user into the private parts of

00:06:51,669 --> 00:06:59,409
the application and I wanted to keep

00:06:56,589 --> 00:07:03,609
that process while wrapping around Azure

00:06:59,409 --> 00:07:05,589
ad so that users assisting users that

00:07:03,609 --> 00:07:08,379
are logging in if using a password can

00:07:05,589 --> 00:07:12,429
do so and people can have the additional

00:07:08,379 --> 00:07:16,569
option of logging in via Active

00:07:12,429 --> 00:07:18,129
Directory so the crucial part here is

00:07:16,569 --> 00:07:20,739
it's not like passport or anything this

00:07:18,129 --> 00:07:23,289
is a custom based user name and password

00:07:20,739 --> 00:07:24,519
authentication so again this is this is

00:07:23,289 --> 00:07:25,959
not Passport if you do if you use

00:07:24,519 --> 00:07:27,879
passport you can just use my small right

00:07:25,959 --> 00:07:29,709
but if you find yourself in this

00:07:27,879 --> 00:07:31,629
situation okay I already have username

00:07:29,709 --> 00:07:33,249
password and I need to kind of like wrap

00:07:31,629 --> 00:07:34,839
as we ad around yeah this may be

00:07:33,249 --> 00:07:36,819
interesting to you and even more

00:07:34,839 --> 00:07:40,269
interesting is what I'm using to do this

00:07:36,819 --> 00:07:42,789
right I'm using this thing called a

00:07:40,269 --> 00:07:45,279
state for me right so state is a

00:07:42,789 --> 00:07:48,939
parameter that as your ad actually

00:07:45,279 --> 00:07:52,929
accepts maintain shared knowledge

00:07:48,939 --> 00:07:57,639
between the browser and the ad itself

00:07:52,929 --> 00:08:01,809
and anywhere else that the user gets

00:07:57,639 --> 00:08:04,419
redirected to in this case the it gets

00:08:01,809 --> 00:08:06,069
redirected to the back end and you may

00:08:04,419 --> 00:08:07,389
not necessarily want to redirect the

00:08:06,069 --> 00:08:11,069
user to the back end you can redirect

00:08:07,389 --> 00:08:13,989
the user like some other web servers so

00:08:11,069 --> 00:08:15,909
if you think about as a ad Ryan if you

00:08:13,989 --> 00:08:18,419
think that it is you know something

00:08:15,909 --> 00:08:21,759
constraining it's not actually it's just

00:08:18,419 --> 00:08:23,259
it's just a an endpoint there and you

00:08:21,759 --> 00:08:24,909
can actually redirect any way you want

00:08:23,259 --> 00:08:27,329
and and things with it and this is one

00:08:24,909 --> 00:08:30,539
example of how that is done right so

00:08:27,329 --> 00:08:33,629
moving on if you want to check out my

00:08:30,539 --> 00:08:36,560
quote it's actually over on my github

00:08:33,629 --> 00:08:40,310
yeah

00:08:36,560 --> 00:08:43,159
and let's get started so before I make

00:08:40,310 --> 00:08:46,490
any more right here's how the app looks

00:08:43,159 --> 00:08:51,769
like you log in and then yeah you know

00:08:46,490 --> 00:08:54,139
your login simples right so this is the

00:08:51,769 --> 00:08:56,629
thing right without the modification

00:08:54,139 --> 00:08:58,639
right and because VI is component based

00:08:56,629 --> 00:09:01,189
I actually added like wrapper components

00:08:58,639 --> 00:09:03,740
to make it easy right so the existing

00:09:01,189 --> 00:09:05,209
code remains minimally modified right

00:09:03,740 --> 00:09:07,970
there are some parts I added a link here

00:09:05,209 --> 00:09:09,170
and there so those fast I cannot be read

00:09:07,970 --> 00:09:11,749
because I need to show the link on the

00:09:09,170 --> 00:09:13,249
front page but I can show you how we've

00:09:11,749 --> 00:09:15,980
components actually can wrap things

00:09:13,249 --> 00:09:18,589
around and and you know this I can

00:09:15,980 --> 00:09:21,199
actually achieve the you know the

00:09:18,589 --> 00:09:21,649
outside that I was showing this now so

00:09:21,199 --> 00:09:24,170
yeah

00:09:21,649 --> 00:09:29,420
the icing action is very simple you know

00:09:24,170 --> 00:09:32,779
the user logs in the the action actually

00:09:29,420 --> 00:09:35,269
eventually results in a post the backend

00:09:32,779 --> 00:09:39,800
with the username and password in the

00:09:35,269 --> 00:09:41,930
body right so in the body I mean when

00:09:39,800 --> 00:09:43,309
it's posted through the backend what the

00:09:41,930 --> 00:09:47,209
backend does is this is just an example

00:09:43,309 --> 00:09:50,149
right there's an everyday and what what

00:09:47,209 --> 00:09:52,819
the backend does is it uses the username

00:09:50,149 --> 00:09:55,129
and password that's posted from the user

00:09:52,819 --> 00:09:58,519
it actually use that to fine from the

00:09:55,129 --> 00:10:01,309
array and if you find something great a

00:09:58,519 --> 00:10:03,319
token and return the user object and the

00:10:01,309 --> 00:10:08,079
token along the user object simples

00:10:03,319 --> 00:10:10,639
great so what I want to achieve is after

00:10:08,079 --> 00:10:11,480
after wrapping around right when the

00:10:10,639 --> 00:10:13,009
user wants to login

00:10:11,480 --> 00:10:18,649
it has the option to yeah go to

00:10:13,009 --> 00:10:20,509
Microsoft login ID login and if he's

00:10:18,649 --> 00:10:23,329
already sign-in you know we just go to

00:10:20,509 --> 00:10:26,600
the app obviously so so that's what I

00:10:23,329 --> 00:10:29,029
want to achieve though yeah so okay

00:10:26,600 --> 00:10:31,939
let's get on to how I want to achieve

00:10:29,029 --> 00:10:35,029
this right so here's the first part of

00:10:31,939 --> 00:10:36,769
my mod the first thing is we act as an

00:10:35,029 --> 00:10:39,709
active directory right obviously you

00:10:36,769 --> 00:10:42,230
need we have the tenant ID and the

00:10:39,709 --> 00:10:44,629
application ID specified okay so I'm

00:10:42,230 --> 00:10:47,540
actually just putting this in a constant

00:10:44,629 --> 00:10:50,030
over here and also we need the redirect

00:10:47,540 --> 00:10:52,700
URL so here I'm using

00:10:50,030 --> 00:10:55,280
you can actually place any redirect URL

00:10:52,700 --> 00:10:57,950
but if it's external it has to be I mean

00:10:55,280 --> 00:11:01,700
if it's not kind of local it has to be a

00:10:57,950 --> 00:11:03,560
secure HTTP endpoint right so you can

00:11:01,700 --> 00:11:05,690
actually redirect this anyway

00:11:03,560 --> 00:11:08,930
and Here I am actually redirecting to

00:11:05,690 --> 00:11:11,210
local so moving on when I get those

00:11:08,930 --> 00:11:13,880
things the tenant ID application ID and

00:11:11,210 --> 00:11:17,030
the redirect URI so you get this when

00:11:13,880 --> 00:11:20,150
you actually create a and an app

00:11:17,030 --> 00:11:22,070
instance in asthma ad right so here I'm

00:11:20,150 --> 00:11:25,310
here in registration you can actually

00:11:22,070 --> 00:11:28,760
see application ID tenant ID and the

00:11:25,310 --> 00:11:32,330
redirect URI over in the azure portal so

00:11:28,760 --> 00:11:35,960
getting this I place it in the constants

00:11:32,330 --> 00:11:38,170
in my react M just now so all of that

00:11:35,960 --> 00:11:41,570
right actually it's just a sample

00:11:38,170 --> 00:11:44,750
redirect all I'm doing here is I'm just

00:11:41,570 --> 00:11:50,560
creating a helper construct the redirect

00:11:44,750 --> 00:11:54,920
well as the ad okay so then I add a

00:11:50,560 --> 00:11:57,740
route to my app so this is f dot d s X

00:11:54,920 --> 00:11:59,750
right so this is my main react app

00:11:57,740 --> 00:12:02,300
component right so I just add a route

00:11:59,750 --> 00:12:05,570
nothing very fancy here but there are if

00:12:02,300 --> 00:12:09,260
you notice on line 25 the route actually

00:12:05,570 --> 00:12:11,420
redirects the off URL that I created

00:12:09,260 --> 00:12:13,160
with the helper just now right so what

00:12:11,420 --> 00:12:14,830
this means is if the user hits a browser

00:12:13,160 --> 00:12:18,890
and you know it

00:12:14,830 --> 00:12:24,770
she does slash off she will get

00:12:18,890 --> 00:12:29,660
redirected to the asthma ad login so the

00:12:24,770 --> 00:12:32,960
private routes right so parts of the

00:12:29,660 --> 00:12:35,120
application that are private you

00:12:32,960 --> 00:12:37,790
actually go to this but to a specific

00:12:35,120 --> 00:12:43,130
component so what this component does is

00:12:37,790 --> 00:12:45,710
it actually gets a user object from

00:12:43,130 --> 00:12:48,320
local storage meaning your browser the

00:12:45,710 --> 00:12:51,260
local storage on your browser so if you

00:12:48,320 --> 00:12:55,850
notice earlier right the decent most

00:12:51,260 --> 00:12:58,310
example right login user has a user

00:12:55,850 --> 00:13:00,290
object return the browser and and he

00:12:58,310 --> 00:13:02,810
actually stores this right so the

00:13:00,290 --> 00:13:03,630
presence of a user object indicates that

00:13:02,810 --> 00:13:05,730
the user is

00:13:03,630 --> 00:13:08,699
in and it's authenticated right so if

00:13:05,730 --> 00:13:10,740
the user is authenticated we will show

00:13:08,699 --> 00:13:13,560
the component whatever the user is

00:13:10,740 --> 00:13:16,199
requesting and if it's not then you know

00:13:13,560 --> 00:13:21,870
we redirect to the login page

00:13:16,199 --> 00:13:24,269
okay and at the login page here as I

00:13:21,870 --> 00:13:25,920
mentioned I can modify and wrap around

00:13:24,269 --> 00:13:27,389
but this is one part I couldn't wrap

00:13:25,920 --> 00:13:32,069
around because this is just a link I

00:13:27,389 --> 00:13:34,230
need and authenticated and off link the

00:13:32,069 --> 00:13:35,970
user obviously I can not do this as well

00:13:34,230 --> 00:13:38,100
I can you know redirect straight away as

00:13:35,970 --> 00:13:40,050
well it's uh it's really up to me right

00:13:38,100 --> 00:13:41,730
well here I want to just add a link at

00:13:40,050 --> 00:13:44,069
the bottom of the login page so that

00:13:41,730 --> 00:13:48,720
here you know login with AD right that's

00:13:44,069 --> 00:13:50,579
an option so yeah now let's talk about

00:13:48,720 --> 00:13:54,060
the state parameter that I was using

00:13:50,579 --> 00:13:57,269
right so as I mentioned I was using

00:13:54,060 --> 00:13:58,680
States to do this and and and and it's

00:13:57,269 --> 00:14:01,829
really a wrap around we don't really

00:13:58,680 --> 00:14:03,360
modifying the the application right but

00:14:01,829 --> 00:14:06,110
this state is really where the magic

00:14:03,360 --> 00:14:09,959
happens okay if you read part of this

00:14:06,110 --> 00:14:12,810
this paragraph here the state can be a

00:14:09,959 --> 00:14:15,209
string of any content that you know that

00:14:12,810 --> 00:14:18,329
you wish right so you know I wish for

00:14:15,209 --> 00:14:20,610
the content to be a some kind of a

00:14:18,329 --> 00:14:23,279
unique ID basically it's like a hash

00:14:20,610 --> 00:14:26,310
string right so it's a unique ID that is

00:14:23,279 --> 00:14:28,620
generated at the browser and you see

00:14:26,310 --> 00:14:30,810
what happens to it right so that's the

00:14:28,620 --> 00:14:33,230
state part the state again just as a

00:14:30,810 --> 00:14:39,509
reminder gets carried around the

00:14:33,230 --> 00:14:41,759
authentication of here right yeah so I

00:14:39,509 --> 00:14:47,670
said as I mentioned the state gets

00:14:41,759 --> 00:14:50,699
passed to the IAD as a parameter and as

00:14:47,670 --> 00:14:53,160
rady then once authenticating the user

00:14:50,699 --> 00:14:58,170
passes it on my back-end that I

00:14:53,160 --> 00:15:01,470
specified as a redirect URI okay so the

00:14:58,170 --> 00:15:03,269
back end upon receiving the state right

00:15:01,470 --> 00:15:05,310
remember the state is actually stored in

00:15:03,269 --> 00:15:07,980
a local browser in a browser in local

00:15:05,310 --> 00:15:10,829
storage now the state has arrived at the

00:15:07,980 --> 00:15:12,959
back end so I need to add a route to

00:15:10,829 --> 00:15:15,750
receive the steal right so this is the

00:15:12,959 --> 00:15:17,230
route that I will actually place in the

00:15:15,750 --> 00:15:20,110
redirect URI

00:15:17,230 --> 00:15:22,360
think that steep and this is just a

00:15:20,110 --> 00:15:28,120
controller you know so the controller

00:15:22,360 --> 00:15:32,040
actually sets the the state the token so

00:15:28,120 --> 00:15:34,360
when I actually do this right the I the

00:15:32,040 --> 00:15:37,960
active actually actually passes an ID

00:15:34,360 --> 00:15:40,540
token my my back end over there right

00:15:37,960 --> 00:15:42,220
and also along the states so what i'm

00:15:40,540 --> 00:15:44,530
doing here is i'm using the state as the

00:15:42,220 --> 00:15:46,390
key to local storage so i'm using local

00:15:44,530 --> 00:15:50,350
storage on the server side it's a

00:15:46,390 --> 00:15:52,950
simulated position see right but it's

00:15:50,350 --> 00:15:56,260
pretty nifty so I really like this right

00:15:52,950 --> 00:15:57,880
so I mean here is I know I just want to

00:15:56,260 --> 00:16:01,810
store this somewhere with a key right

00:15:57,880 --> 00:16:03,790
and the key is the state hash okay so

00:16:01,810 --> 00:16:06,370
I'm storing the ID token now and I

00:16:03,790 --> 00:16:09,430
redirect the user back to the front end

00:16:06,370 --> 00:16:10,090
and upon receipt getting this on the

00:16:09,430 --> 00:16:12,970
file

00:16:10,090 --> 00:16:14,790
yeah so one thing more I'm Jason one

00:16:12,970 --> 00:16:17,860
more example actually has this mop

00:16:14,790 --> 00:16:20,440
back-end on the react itself this is

00:16:17,860 --> 00:16:21,910
just for convenience you know if you

00:16:20,440 --> 00:16:23,080
just want to run that rehab you don't

00:16:21,910 --> 00:16:25,600
need to run the backend and you can

00:16:23,080 --> 00:16:27,610
actually simulate that login but in this

00:16:25,600 --> 00:16:31,060
case we actually do have a back-end so

00:16:27,610 --> 00:16:33,340
so yeah but uncheck this this a note

00:16:31,060 --> 00:16:36,550
okay so now we have a state on the front

00:16:33,340 --> 00:16:39,360
end right so if this state I can

00:16:36,550 --> 00:16:43,060
actually get my front end my react app

00:16:39,360 --> 00:16:46,150
authenticate with my back-end

00:16:43,060 --> 00:16:47,830
normally right I say normally but you

00:16:46,150 --> 00:16:49,720
know normally meaning it gets a normal

00:16:47,830 --> 00:16:54,090
that as I sing token that the app

00:16:49,720 --> 00:16:56,500
already uses so what I mean by that is

00:16:54,090 --> 00:16:58,300
practically I'm passing in the state

00:16:56,500 --> 00:17:01,510
that I've start remember I've start a

00:16:58,300 --> 00:17:02,980
state before I redirect they use it as a

00:17:01,510 --> 00:17:05,320
ad right so now I have the state I

00:17:02,980 --> 00:17:09,130
retrieved that user object and I'm

00:17:05,320 --> 00:17:12,400
actually using that state hash login so

00:17:09,130 --> 00:17:16,900
login with state and you have login with

00:17:12,400 --> 00:17:20,890
state action here which is really just a

00:17:16,900 --> 00:17:23,140
very standard reaction and here's where

00:17:20,890 --> 00:17:26,440
the magic happens right the state gets

00:17:23,140 --> 00:17:28,240
full force the post request and I'm

00:17:26,440 --> 00:17:29,680
instead of username and password I'm

00:17:28,240 --> 00:17:32,380
actually passing in

00:17:29,680 --> 00:17:36,220
the state as the as the body of the

00:17:32,380 --> 00:17:39,430
request okay and the end point I call is

00:17:36,220 --> 00:17:41,410
different is now stay off which is you

00:17:39,430 --> 00:17:44,140
know to authenticate we've state so

00:17:41,410 --> 00:17:46,660
passing into the end point now to the

00:17:44,140 --> 00:17:47,170
back end the back end then this the

00:17:46,660 --> 00:17:48,610
state

00:17:47,170 --> 00:17:50,890
remember I've start this earlier in the

00:17:48,610 --> 00:17:56,530
back end right so the back end now uses

00:17:50,890 --> 00:18:00,190
the state retrieve the the ID token

00:17:56,530 --> 00:18:04,780
that's not with that hash okay so if

00:18:00,190 --> 00:18:08,050
that ID token yes way where the user

00:18:04,780 --> 00:18:10,000
objects get created so if that ID token

00:18:08,050 --> 00:18:11,920
retrieve and I find that oh yeah this

00:18:10,000 --> 00:18:14,320
user actually has an ID token it's not

00:18:11,920 --> 00:18:17,080
like some unknown user is already an

00:18:14,320 --> 00:18:20,800
authenticated user I use the ID token I

00:18:17,080 --> 00:18:23,230
which I dig the ID token I obtained some

00:18:20,800 --> 00:18:26,200
of the data from the token and use that

00:18:23,230 --> 00:18:29,890
to construct the app's actual JWT token

00:18:26,200 --> 00:18:31,450
and return the JWT token along with the

00:18:29,890 --> 00:18:35,230
user object as per normal

00:18:31,450 --> 00:18:39,850
so yeah now we get so I hope you see you

00:18:35,230 --> 00:18:42,370
know how the existing kind of like all

00:18:39,850 --> 00:18:46,840
of the app logging in with this token

00:18:42,370 --> 00:18:49,390
creation is actually preserved okay yeah

00:18:46,840 --> 00:18:53,200
so so that's that right the flow is done

00:18:49,390 --> 00:18:55,690
a couple of security considerations if

00:18:53,200 --> 00:18:59,910
you are you know if you're keen on using

00:18:55,690 --> 00:19:02,950
this technique so one of it is here

00:18:59,910 --> 00:19:07,150
remember that you know the user actually

00:19:02,950 --> 00:19:08,530
claims his ID token real estate right so

00:19:07,150 --> 00:19:10,030
one thing to know is when you actually

00:19:08,530 --> 00:19:12,880
when the user actually seems that you

00:19:10,030 --> 00:19:15,520
can remember to expire that token you

00:19:12,880 --> 00:19:18,820
know destroy the token this is to

00:19:15,520 --> 00:19:22,030
prevent the token from being caught from

00:19:18,820 --> 00:19:24,400
being retrieved by any other users right

00:19:22,030 --> 00:19:27,790
so this is just kind of like hygiene

00:19:24,400 --> 00:19:33,580
right so other considerations are there

00:19:27,790 --> 00:19:34,780
as well right you know jump over here so

00:19:33,580 --> 00:19:38,530
there are other considerations so this

00:19:34,780 --> 00:19:40,750
is the token expiry thing there are the

00:19:38,530 --> 00:19:43,050
considerations okay so remember that we

00:19:40,750 --> 00:19:46,530
were using

00:19:43,050 --> 00:19:49,890
this endpoint right this specific

00:19:46,530 --> 00:19:54,450
endpoint slash token so we don't want to

00:19:49,890 --> 00:19:57,210
really allow force attack on on snack

00:19:54,450 --> 00:19:59,400
token and slash state off so what you

00:19:57,210 --> 00:20:03,080
want to do is some rate limiting there

00:19:59,400 --> 00:20:06,540
and as API management actually has

00:20:03,080 --> 00:20:09,270
mechanism that helps you do limiting or

00:20:06,540 --> 00:20:15,440
even to block out any unwanted requests

00:20:09,270 --> 00:20:19,260
from non relevant endpoints or you know

00:20:15,440 --> 00:20:22,170
holes or notes in the flow so one of the

00:20:19,260 --> 00:20:25,200
fool here is active directory actually

00:20:22,170 --> 00:20:27,090
goes to the back end right so you want

00:20:25,200 --> 00:20:30,960
to have any other people calling any

00:20:27,090 --> 00:20:34,230
other not calling slash token for

00:20:30,960 --> 00:20:35,280
example besides Active Directory service

00:20:34,230 --> 00:20:38,100
so that's one thing that you can

00:20:35,280 --> 00:20:40,860
restrict yeah I should I skipped a

00:20:38,100 --> 00:20:44,220
couple of other stuff here but it's not

00:20:40,860 --> 00:20:47,070
really remember earlier I was I was

00:20:44,220 --> 00:20:49,980
saying that we need to actually lock the

00:20:47,070 --> 00:20:55,320
user out right and here's how I'm seeing

00:20:49,980 --> 00:20:59,100
a react component as a wrap so the

00:20:55,320 --> 00:21:02,250
reason why most original original

00:20:59,100 --> 00:21:05,610
example right uses the login component

00:21:02,250 --> 00:21:08,970
logout right so what happens is in the

00:21:05,610 --> 00:21:13,110
login login page constructor it calls a

00:21:08,970 --> 00:21:15,360
dispatch dispatches a logout right but

00:21:13,110 --> 00:21:19,330
which is cool you know but I needed the

00:21:15,360 --> 00:21:21,110
the the logout action Ryan actually thus

00:21:19,330 --> 00:21:23,910
[Music]

00:21:21,110 --> 00:21:26,420
he actually does this it removes the

00:21:23,910 --> 00:21:29,730
user object I need to do more right so

00:21:26,420 --> 00:21:32,850
because I now have a state object so now

00:21:29,730 --> 00:21:35,820
I've wrapped around a login page I

00:21:32,850 --> 00:21:40,020
extend I mean I create a lot of pitch I

00:21:35,820 --> 00:21:41,610
wrap around the login pitch okay as you

00:21:40,020 --> 00:21:44,130
see the render is actually a login page

00:21:41,610 --> 00:21:46,080
render and from there I do a state

00:21:44,130 --> 00:21:48,780
logout so the state logout actually

00:21:46,080 --> 00:21:50,520
removes that state so when the user

00:21:48,780 --> 00:21:53,730
actually goes to the logout page it gets

00:21:50,520 --> 00:21:54,490
a clean slate there's no more any entity

00:21:53,730 --> 00:21:57,850
store

00:21:54,490 --> 00:22:02,890
in local storage okay

00:21:57,850 --> 00:22:06,340
so yeah that's the that's one part of

00:22:02,890 --> 00:22:08,679
the adventure done right so around

00:22:06,340 --> 00:22:11,850
Active Directory logging in and all that

00:22:08,679 --> 00:22:15,400
a alternative way of dealing with it

00:22:11,850 --> 00:22:17,800
yeah so this is quite wrong you are just

00:22:15,400 --> 00:22:19,750
using react and there's some calls

00:22:17,800 --> 00:22:21,400
there's no live reader you were using

00:22:19,750 --> 00:22:22,510
and all that so if you're keen you know

00:22:21,400 --> 00:22:25,679
you could check it out it's on github

00:22:22,510 --> 00:22:30,700
right so the next thing I wanna go to is

00:22:25,679 --> 00:22:33,190
storage okay and and there's also a kind

00:22:30,700 --> 00:22:35,590
of a unique way of using story yes so I

00:22:33,190 --> 00:22:37,480
wanted was I was not happy with you know

00:22:35,590 --> 00:22:39,940
just looking at a portal I wanted to

00:22:37,480 --> 00:22:42,070
actually get that data as a developer

00:22:39,940 --> 00:22:46,330
you know I love my JSON right so I want

00:22:42,070 --> 00:22:49,960
everything in Jason's so yeah so there

00:22:46,330 --> 00:22:54,130
are many stories available in in in in

00:22:49,960 --> 00:22:57,550
in Ezra so that's a geodatabase and it's

00:22:54,130 --> 00:23:01,840
a trial right but my favorite story is

00:22:57,550 --> 00:23:04,929
actually as with table storage okay and

00:23:01,840 --> 00:23:07,000
I like it because of a couple of reasons

00:23:04,929 --> 00:23:09,280
so first it's really convenient to use

00:23:07,000 --> 00:23:11,280
it right that's not oh it's not table

00:23:09,280 --> 00:23:13,809
story the tables are not really

00:23:11,280 --> 00:23:15,250
structured right like there's no you do

00:23:13,809 --> 00:23:17,470
need to define this I mean you don't

00:23:15,250 --> 00:23:19,059
even define a table schema or like you

00:23:17,470 --> 00:23:21,820
know pre-existing structure for the

00:23:19,059 --> 00:23:24,160
table you can just dump any entity into

00:23:21,820 --> 00:23:26,130
it anymore the table will adapt you know

00:23:24,160 --> 00:23:28,990
why were you dumped into it which is

00:23:26,130 --> 00:23:32,230
very convenient for me right the next

00:23:28,990 --> 00:23:33,850
thing is it's really super affordable if

00:23:32,230 --> 00:23:36,370
you think about it right this is the

00:23:33,850 --> 00:23:38,830
this is one storage on the cloud right

00:23:36,370 --> 00:23:40,780
there you can store things and you're

00:23:38,830 --> 00:23:42,280
just trashed by like the megabyte line

00:23:40,780 --> 00:23:44,080
you know like similar to blob storage

00:23:42,280 --> 00:23:46,990
kind of a pricing like almost similar

00:23:44,080 --> 00:23:49,120
and you don't need to like turn on a

00:23:46,990 --> 00:23:51,100
computer it needs to be you know turned

00:23:49,120 --> 00:23:53,050
on all the time so things are like you

00:23:51,100 --> 00:23:55,200
know you just rush like a per

00:23:53,050 --> 00:23:58,090
transaction right and you get a lot of

00:23:55,200 --> 00:24:01,360
free transactions to start with in any

00:23:58,090 --> 00:24:02,770
case so yeah so I've been running this

00:24:01,360 --> 00:24:04,540
for some of my ass and I haven't been

00:24:02,770 --> 00:24:11,080
paying anything actually

00:24:04,540 --> 00:24:13,210
so I really like this so I'm gonna show

00:24:11,080 --> 00:24:15,280
how I use as your table storage I use it

00:24:13,210 --> 00:24:16,750
for all sorts of things right I use it

00:24:15,280 --> 00:24:19,150
to keep track of all sorts of things

00:24:16,750 --> 00:24:21,730
personally and network but I'm gonna

00:24:19,150 --> 00:24:24,669
start get on with it right I'm gonna

00:24:21,730 --> 00:24:30,820
tell you why how one story of how I'm

00:24:24,669 --> 00:24:32,919
using it so so this is a page right so

00:24:30,820 --> 00:24:35,350
it's not really relevant to my story but

00:24:32,919 --> 00:24:38,080
I want to tell this if you go to this

00:24:35,350 --> 00:24:40,000
page and if you click on download what

00:24:38,080 --> 00:24:42,730
typically happens is you get redirected

00:24:40,000 --> 00:24:44,350
to another page right and we did that

00:24:42,730 --> 00:24:45,850
fish there's some JavaScript that gets

00:24:44,350 --> 00:24:47,770
you to where you actually want to

00:24:45,850 --> 00:24:50,290
download things right so I think people

00:24:47,770 --> 00:24:52,750
do this because they actually want to

00:24:50,290 --> 00:24:57,340
analytics on like people downloading

00:24:52,750 --> 00:24:59,799
their stuff so I'm cool with that

00:24:57,340 --> 00:25:04,000
I wanted something even deeper than this

00:24:59,799 --> 00:25:06,940
right so what is my my my question is

00:25:04,000 --> 00:25:08,770
what if you know I go to my portal and I

00:25:06,940 --> 00:25:11,140
download this so it's not tracked right

00:25:08,770 --> 00:25:12,910
and what if people goes to the endpoint

00:25:11,140 --> 00:25:14,230
directly and download and it's not

00:25:12,910 --> 00:25:17,650
tracked and what if this is like a

00:25:14,230 --> 00:25:20,140
private thing you know like this it's

00:25:17,650 --> 00:25:22,059
actually a private blog right and and

00:25:20,140 --> 00:25:24,040
it's not tracking as well you know if

00:25:22,059 --> 00:25:25,780
you go to a page right unless so I

00:25:24,040 --> 00:25:27,790
wanted something that is even at a lower

00:25:25,780 --> 00:25:33,850
layer and you know even though I create

00:25:27,790 --> 00:25:36,130
then pitch base analytics so yeah so I

00:25:33,850 --> 00:25:38,140
went to read you know the docs and I

00:25:36,130 --> 00:25:40,210
realized that yeah you know as usual

00:25:38,140 --> 00:25:44,169
actually provides observation actually

00:25:40,210 --> 00:25:45,520
provides an API and they actually API

00:25:44,169 --> 00:25:47,380
that people are actually calling when

00:25:45,520 --> 00:25:52,120
they actually goes get a blog is

00:25:47,380 --> 00:25:54,700
actually get blog right but when I try

00:25:52,120 --> 00:25:56,049
to charge it so this is May 14 2019 not

00:25:54,700 --> 00:25:59,230
that long ago so this is something

00:25:56,049 --> 00:26:01,890
recent that I was doing right so I went

00:25:59,230 --> 00:26:07,419
as a portal and I try to charge it and

00:26:01,890 --> 00:26:08,890
yeah it's not there so yeah so I was

00:26:07,419 --> 00:26:11,950
slightly disappointed

00:26:08,890 --> 00:26:13,900
but you know I was uh I mean a little

00:26:11,950 --> 00:26:16,090
bit of noise with my team and I don't

00:26:13,900 --> 00:26:17,120
know like some magic happen and on 31st

00:26:16,090 --> 00:26:20,610
of me

00:26:17,120 --> 00:26:23,100
20:19 and i went back to the same chat

00:26:20,610 --> 00:26:26,130
and you know the get blop api is

00:26:23,100 --> 00:26:27,960
actually there so so this is me I mean

00:26:26,130 --> 00:26:29,549
that one download and you know there's

00:26:27,960 --> 00:26:33,929
one download there and I should get my

00:26:29,549 --> 00:26:36,419
chat which is cool but I wanted

00:26:33,929 --> 00:26:38,639
something more because as developer I

00:26:36,419 --> 00:26:40,860
want my JSON I don't just want to cut

00:26:38,639 --> 00:26:43,320
and you know with JSON I can do all

00:26:40,860 --> 00:26:44,700
sorts of stuff with it and what if I

00:26:43,320 --> 00:26:46,110
want to have like you know some of the

00:26:44,700 --> 00:26:47,760
other metrics because now I know that

00:26:46,110 --> 00:26:54,059
there's so many other metrics I can play

00:26:47,760 --> 00:26:56,700
with so yeah

00:26:54,059 --> 00:26:57,929
aside from that there's also some

00:26:56,700 --> 00:27:01,769
constraints right

00:26:57,929 --> 00:27:05,460
these metrics right is trust I can it's

00:27:01,769 --> 00:27:08,580
only for up to 90 days this is because

00:27:05,460 --> 00:27:09,929
the retention period is 93 days but you

00:27:08,580 --> 00:27:13,080
know is extendable there's some ways

00:27:09,929 --> 00:27:14,940
which I'm going to show but yeah if you

00:27:13,080 --> 00:27:17,159
do nothing you know it's there for 93

00:27:14,940 --> 00:27:19,620
days for platform metrics so the

00:27:17,159 --> 00:27:22,289
resources they do some diagnostic locks

00:27:19,620 --> 00:27:24,840
as well and the minimum for that is 30

00:27:22,289 --> 00:27:26,429
days but you can configure that oh you

00:27:24,840 --> 00:27:29,039
know for activities that you do

00:27:26,429 --> 00:27:33,299
unanswered as long as well and that's 90

00:27:29,039 --> 00:27:35,010
days so the other reasons as well like

00:27:33,299 --> 00:27:37,289
you actually own the data right for

00:27:35,010 --> 00:27:39,059
reasons of you know this is one thing

00:27:37,289 --> 00:27:41,549
that is very close to my heart right you

00:27:39,059 --> 00:27:42,899
know my by me or by you using as your

00:27:41,549 --> 00:27:46,250
right it doesn't mean that as you own

00:27:42,899 --> 00:27:48,600
everything right that data is in the

00:27:46,250 --> 00:27:51,059
sufficient agreement itself you know the

00:27:48,600 --> 00:27:53,850
customer actually owns that data alright

00:27:51,059 --> 00:27:55,470
so I've won that data and I want to do I

00:27:53,850 --> 00:27:57,389
want to know that I have the freedom to

00:27:55,470 --> 00:28:00,029
do whatever I want with it right so

00:27:57,389 --> 00:28:02,340
that's one thing and the other thing I

00:28:00,029 --> 00:28:04,289
want to do is maybe I want to reconcile

00:28:02,340 --> 00:28:06,570
my cost right if you know I get this

00:28:04,289 --> 00:28:09,179
amount in my in my bill and the bill

00:28:06,570 --> 00:28:11,190
says I got this you know fifty thousand

00:28:09,179 --> 00:28:13,370
transactions yeah and I want to know

00:28:11,190 --> 00:28:16,769
that you know the transactions are

00:28:13,370 --> 00:28:19,940
tracked at what time and all right and

00:28:16,769 --> 00:28:23,399
you know you may have reasons as well so

00:28:19,940 --> 00:28:25,289
so let's look at how how I actually get

00:28:23,399 --> 00:28:27,210
this data from that you know that's

00:28:25,289 --> 00:28:28,720
actually looking like a chart now from

00:28:27,210 --> 00:28:31,609
as you all right

00:28:28,720 --> 00:28:35,559
so before we move on further into that

00:28:31,609 --> 00:28:41,239
part of things I can explore doing this

00:28:35,559 --> 00:28:42,830
as your storage right there is for some

00:28:41,239 --> 00:28:45,549
services you can actually just use

00:28:42,830 --> 00:28:48,950
diagnostic locks diagnostic settings

00:28:45,549 --> 00:28:52,249
just tell the service you know tell Ezra

00:28:48,950 --> 00:28:53,950
to route these locks to Azure storage

00:28:52,249 --> 00:28:55,190
keep it there for archival purposes

00:28:53,950 --> 00:28:56,869
right

00:28:55,190 --> 00:29:01,820
unfortunately I can't find as a story

00:28:56,869 --> 00:29:04,580
here so then I went I went to look for

00:29:01,820 --> 00:29:07,309
the documentation and in the

00:29:04,580 --> 00:29:10,820
documentation I cannot find any blob

00:29:07,309 --> 00:29:15,049
storage diagnostic locks available okay

00:29:10,820 --> 00:29:17,929
so I look at for metrics and I actually

00:29:15,049 --> 00:29:19,820
found time for metrics and I actually

00:29:17,929 --> 00:29:22,909
found transactions being part of

00:29:19,820 --> 00:29:24,320
platform metrics so now I need to dig

00:29:22,909 --> 00:29:27,769
out that platform metrics form as you

00:29:24,320 --> 00:29:32,929
write and JavaScript to the rescue

00:29:27,769 --> 00:29:37,340
okay so yeah so that's one eventually I

00:29:32,929 --> 00:29:41,629
have as a developer so I use this

00:29:37,340 --> 00:29:45,139
particular package call as a monitor so

00:29:41,629 --> 00:29:47,960
the SDKs actually super comprehensive

00:29:45,139 --> 00:29:50,299
you can actually have one for most of

00:29:47,960 --> 00:29:53,059
the practicum almost all of the services

00:29:50,299 --> 00:29:55,429
that's actually there and and all that

00:29:53,059 --> 00:29:57,769
is is actually on the azure

00:29:55,429 --> 00:29:59,749
documentation as a REST API as well so

00:29:57,769 --> 00:30:04,849
these packages actually wraps around the

00:29:59,749 --> 00:30:07,519
the REST API and use a convenient kind

00:30:04,849 --> 00:30:10,460
of like package that you know developer

00:30:07,519 --> 00:30:13,059
can use straight away so yeah I'm

00:30:10,460 --> 00:30:16,609
monitor so these are a couple of objects

00:30:13,059 --> 00:30:18,590
and classes that are useful to me in you

00:30:16,609 --> 00:30:24,109
know in getting that thing out of Azure

00:30:18,590 --> 00:30:28,330
portal right so yeah as all new

00:30:24,109 --> 00:30:30,950
developers I go start myself in with NPM

00:30:28,330 --> 00:30:35,599
pitch of the package that I want to use

00:30:30,950 --> 00:30:39,070
okay and doing there I get to this page

00:30:35,599 --> 00:30:42,110
and I see actually that ms-office

00:30:39,070 --> 00:30:44,390
actually useful

00:30:42,110 --> 00:30:47,200
but I don't really want to do

00:30:44,390 --> 00:30:51,019
interactive login as you can see right

00:30:47,200 --> 00:30:53,600
there are many ways to authenticate a

00:30:51,019 --> 00:30:56,659
user so interactive login is a very

00:30:53,600 --> 00:30:58,880
useful wave if you're just testing some

00:30:56,659 --> 00:31:01,010
things on the on the time you know right

00:30:58,880 --> 00:31:04,010
so what it does is when you do this

00:31:01,010 --> 00:31:06,980
right and you run new wherever this is

00:31:04,010 --> 00:31:11,000
index not yes but this snippet of this

00:31:06,980 --> 00:31:12,740
sample code what happens is a lime pops

00:31:11,000 --> 00:31:14,990
out there's a URL there and then there's

00:31:12,740 --> 00:31:17,090
like something like a there right so you

00:31:14,990 --> 00:31:20,139
click the URL put in a call on the

00:31:17,090 --> 00:31:26,179
browser and magically or your new app

00:31:20,139 --> 00:31:28,659
gets an authenticated signal from Azure

00:31:26,179 --> 00:31:30,799
and you know you get to run your code

00:31:28,659 --> 00:31:33,320
but I don't want to do this right

00:31:30,799 --> 00:31:37,460
because I have to host my coat on some

00:31:33,320 --> 00:31:40,580
cron job on the cloud somewhere so what

00:31:37,460 --> 00:31:43,100
I want is uh yeah it's actually this

00:31:40,580 --> 00:31:46,100
right so how do I figure out what can I

00:31:43,100 --> 00:31:48,529
do right so this is another thing that I

00:31:46,100 --> 00:31:51,950
really love which is we just view code

00:31:48,529 --> 00:31:57,470
and it's particularly intelligence right

00:31:51,950 --> 00:31:59,360
so I have MS rest off there for me and I

00:31:57,470 --> 00:32:01,190
know that I can use that login well I

00:31:59,360 --> 00:32:04,970
have no idea what method name is call

00:32:01,190 --> 00:32:07,190
right so you know as you know the magic

00:32:04,970 --> 00:32:08,720
of intellisense I type in login and

00:32:07,190 --> 00:32:10,940
suddenly you know these things appear

00:32:08,720 --> 00:32:14,210
and now I know that okay cool I can

00:32:10,940 --> 00:32:15,860
actually log in with maybe service

00:32:14,210 --> 00:32:18,860
principal you know that sounds like it

00:32:15,860 --> 00:32:20,750
yeah so this principle you know research

00:32:18,860 --> 00:32:22,039
me so I don't need to keep my I don't

00:32:20,750 --> 00:32:28,760
need to be authenticated with a browser

00:32:22,039 --> 00:32:30,649
so with that I'm actually just I up so

00:32:28,760 --> 00:32:32,929
that's you know I can even actually go

00:32:30,649 --> 00:32:35,210
further right if I finish type if I tap

00:32:32,929 --> 00:32:37,159
that and then you know the documentation

00:32:35,210 --> 00:32:39,559
is actually in the editor itself right

00:32:37,159 --> 00:32:41,630
and you know this is really cool but

00:32:39,559 --> 00:32:43,070
reading the documentation is also just

00:32:41,630 --> 00:32:44,870
pointing me to service principle which I

00:32:43,070 --> 00:32:48,200
know really but yeah thanks for you know

00:32:44,870 --> 00:32:50,270
telling me any case in that sense but so

00:32:48,200 --> 00:32:55,070
now now I know that I need the service

00:32:50,270 --> 00:32:56,240
principle so so I'm gonna segue a little

00:32:55,070 --> 00:32:59,900
bit too

00:32:56,240 --> 00:33:02,179
as we CLI right so I'm gonna use the CLI

00:32:59,900 --> 00:33:05,090
to get my service principle I can there

00:33:02,179 --> 00:33:11,660
are many other ways but this is what I

00:33:05,090 --> 00:33:13,010
do so log in as command line and the

00:33:11,660 --> 00:33:15,770
next thing is I want to leave my

00:33:13,010 --> 00:33:20,150
subscriptions so I just want to

00:33:15,770 --> 00:33:24,679
emphasize how important it is this right

00:33:20,150 --> 00:33:27,559
because for me I have many subscriptions

00:33:24,679 --> 00:33:30,710
I mean not that many at one time but you

00:33:27,559 --> 00:33:34,580
know I but there's a nice tree lying

00:33:30,710 --> 00:33:36,679
around right so I want to make sure that

00:33:34,580 --> 00:33:38,960
this service principle is created for

00:33:36,679 --> 00:33:40,730
the right subscription because if I do

00:33:38,960 --> 00:33:45,200
get the wrong service referred to the

00:33:40,730 --> 00:33:47,150
right to the wrong resource then you

00:33:45,200 --> 00:33:48,230
know my core is gonna have a right so

00:33:47,150 --> 00:33:51,080
here

00:33:48,230 --> 00:33:54,260
always always specify the subscription

00:33:51,080 --> 00:33:58,580
ID when creating this so I'm here is I'm

00:33:54,260 --> 00:34:01,730
just using the agency are I create a

00:33:58,580 --> 00:34:04,309
service principle for the Auerbach

00:34:01,730 --> 00:34:05,270
purposes okay so then I get my

00:34:04,309 --> 00:34:09,649
credentials here

00:34:05,270 --> 00:34:11,960
so with these credentials I can actually

00:34:09,649 --> 00:34:13,820
go back to my code right and you don't

00:34:11,960 --> 00:34:17,780
go along the way so the next thing that

00:34:13,820 --> 00:34:19,820
I find from the sample code that is this

00:34:17,780 --> 00:34:21,200
I mean I read the sample code right and

00:34:19,820 --> 00:34:23,570
I don't need to actually read that far

00:34:21,200 --> 00:34:26,600
so because the next one seems irrelevant

00:34:23,570 --> 00:34:29,540
to me at least by resource so yeah it's

00:34:26,600 --> 00:34:30,950
like you know is skill right so I'm not

00:34:29,540 --> 00:34:33,710
actually interested in Auto skill I'm

00:34:30,950 --> 00:34:35,990
interested in metrics so but I learned

00:34:33,710 --> 00:34:38,179
from here that you know client this

00:34:35,990 --> 00:34:40,550
monitor measurement client is is pretty

00:34:38,179 --> 00:34:44,869
interesting and maybe very useful to me

00:34:40,550 --> 00:34:48,050
so I need essentially that and again I

00:34:44,869 --> 00:34:51,080
use intellisense to guide my rewrite so

00:34:48,050 --> 00:34:53,899
you know I go to this list and I found

00:34:51,080 --> 00:34:57,350
that there's matrix and matrix don't

00:34:53,899 --> 00:34:59,359
actually has a method called list okay

00:34:57,350 --> 00:35:03,020
that sounds interesting right client

00:34:59,359 --> 00:35:03,470
metrics list right so yeah I can

00:35:03,020 --> 00:35:06,170
actually

00:35:03,470 --> 00:35:08,250
intellisense my way further but

00:35:06,170 --> 00:35:11,940
sometimes this is another

00:35:08,250 --> 00:35:13,710
we things right I I find out is it's

00:35:11,940 --> 00:35:18,300
better to just actually look at the cool

00:35:13,710 --> 00:35:21,120
why is let me pause for a minute really

00:35:18,300 --> 00:35:22,800
because the code is available to you

00:35:21,120 --> 00:35:26,310
this is an NPM package right the moment

00:35:22,800 --> 00:35:28,890
I do this in Vemma just right you just

00:35:26,310 --> 00:35:30,330
to do code I can just do does this for

00:35:28,890 --> 00:35:34,740
me already I mean I can actually just

00:35:30,330 --> 00:35:38,190
come on click on list and okay the

00:35:34,740 --> 00:35:41,190
actual of the package itself get a

00:35:38,190 --> 00:35:43,650
deeper understanding of what the the

00:35:41,190 --> 00:35:45,660
package is doing and I mean looking at

00:35:43,650 --> 00:35:47,280
the documentation is awesome right like

00:35:45,660 --> 00:35:49,710
you know I don't know my code this way

00:35:47,280 --> 00:35:51,720
but it looks really nice here you know

00:35:49,710 --> 00:35:55,050
now I learned that oh I need resource

00:35:51,720 --> 00:35:59,250
you alright so what is this resource all

00:35:55,050 --> 00:36:01,650
right thinking about it obviously I want

00:35:59,250 --> 00:36:04,620
to get a metric from drop storage

00:36:01,650 --> 00:36:06,030
I go to my block storage I first I

00:36:04,620 --> 00:36:07,680
actually went to view it's not there

00:36:06,030 --> 00:36:10,170
then I click on properties oh yeah

00:36:07,680 --> 00:36:12,090
that's this resource ID there that seems

00:36:10,170 --> 00:36:14,310
like a use resource you alright so I use

00:36:12,090 --> 00:36:17,070
that you know plunk it into the resource

00:36:14,310 --> 00:36:19,050
URI and then going further I also need

00:36:17,070 --> 00:36:22,710
to pass in some metrics these optional

00:36:19,050 --> 00:36:24,810
params we think that this is like super

00:36:22,710 --> 00:36:26,970
useful for me to write so you know

00:36:24,810 --> 00:36:31,140
imagine my joy discovering this okay

00:36:26,970 --> 00:36:34,020
this is possible so now I get four

00:36:31,140 --> 00:36:38,130
metrics I get to specify the time spend

00:36:34,020 --> 00:36:41,190
I want the metrics for I get to specify

00:36:38,130 --> 00:36:42,690
the interval the time drain and you get

00:36:41,190 --> 00:36:44,220
to specify the metrics that I'm

00:36:42,690 --> 00:36:46,500
interested in in this case it's

00:36:44,220 --> 00:36:48,510
transactions and I know there's a list

00:36:46,500 --> 00:36:53,010
of other stuff so I get to kind of like

00:36:48,510 --> 00:36:56,430
filter my query on right so yeah running

00:36:53,010 --> 00:36:57,810
that I actually get to this right so if

00:36:56,430 --> 00:36:58,980
you look at the options I'm passing in

00:36:57,810 --> 00:37:01,080
this metric names

00:36:58,980 --> 00:37:03,210
this is comma separator so if you want

00:37:01,080 --> 00:37:05,300
something else you can just put a comma

00:37:03,210 --> 00:37:07,980
there and have another metric the metric

00:37:05,300 --> 00:37:12,180
the possible metrics you know you can

00:37:07,980 --> 00:37:14,640
actually check on the the as website

00:37:12,180 --> 00:37:15,750
that ISO documentation for for block

00:37:14,640 --> 00:37:19,350
service right

00:37:15,750 --> 00:37:22,590
and I'm actually here filtering for

00:37:19,350 --> 00:37:27,290
get block I say API name equals get blob

00:37:22,590 --> 00:37:31,500
so if this call what I get is this

00:37:27,290 --> 00:37:34,650
return okay it is again like you know I

00:37:31,500 --> 00:37:36,270
was excited when I saw this because this

00:37:34,650 --> 00:37:38,730
is exactly what I want right image of my

00:37:36,270 --> 00:37:41,550
chat there you know all the time spans

00:37:38,730 --> 00:37:43,100
and it's super easy to use because okay

00:37:41,550 --> 00:37:46,920
this is not a very good view of this

00:37:43,100 --> 00:37:49,950
yeah so this is the JSON formatted and

00:37:46,920 --> 00:37:52,980
formatted JSON of the the object that

00:37:49,950 --> 00:37:57,060
you saw this now so yeah I can actually

00:37:52,980 --> 00:38:00,030
just use that time series array and you

00:37:57,060 --> 00:38:02,820
know slow that into my table wow you

00:38:00,030 --> 00:38:05,120
know that's fast okay so let's take a

00:38:02,820 --> 00:38:07,560
look at a couple of attributes here

00:38:05,120 --> 00:38:10,170
sometimes man is one I need to know the

00:38:07,560 --> 00:38:12,450
time span that is that is being written

00:38:10,170 --> 00:38:14,460
of the time series as drink returned to

00:38:12,450 --> 00:38:16,500
me right so yeah a little bit of

00:38:14,460 --> 00:38:21,180
dissection here so I realize that this

00:38:16,500 --> 00:38:23,790
is from 537 637 one hour and the green

00:38:21,180 --> 00:38:26,910
the granularity is per minute right so I

00:38:23,790 --> 00:38:31,290
get minute level granularity of that get

00:38:26,910 --> 00:38:36,240
blob count okay so with that let's move

00:38:31,290 --> 00:38:37,740
on I realized that you know looking at

00:38:36,240 --> 00:38:40,250
this right that's you know a lot of

00:38:37,740 --> 00:38:43,410
empty objects if you look at here right

00:38:40,250 --> 00:38:45,510
some of these objects have a total and

00:38:43,410 --> 00:38:47,310
some that's not right so I realized that

00:38:45,510 --> 00:38:51,270
hey I don't really need those objects

00:38:47,310 --> 00:38:53,040
that has no count right plus if I still

00:38:51,270 --> 00:38:54,750
need those objects with count then you

00:38:53,040 --> 00:38:58,440
know I get even more cost-efficiency

00:38:54,750 --> 00:39:01,230
with my table storage so yeah so then I

00:38:58,440 --> 00:39:03,830
start filtering it you know so I am just

00:39:01,230 --> 00:39:06,990
using a very simple array filter here

00:39:03,830 --> 00:39:09,450
you know pass again if the object has a

00:39:06,990 --> 00:39:11,640
total then then I can't then I put it

00:39:09,450 --> 00:39:16,020
into my real metrics right so real

00:39:11,640 --> 00:39:22,680
metrics is the final of things right

00:39:16,020 --> 00:39:25,620
real matrix has an array of time a real

00:39:22,680 --> 00:39:27,960
object that has a time stamp and the

00:39:25,620 --> 00:39:32,060
count of that meaning that the time stem

00:39:27,960 --> 00:39:32,060
represents okay so

00:39:32,660 --> 00:39:37,700
I feel has achieved what I wanted to do

00:39:34,490 --> 00:39:40,880
here so the next step is where I should

00:39:37,700 --> 00:39:43,400
put this into table starvation and here

00:39:40,880 --> 00:39:47,240
I show how easy it is to actually use a

00:39:43,400 --> 00:39:48,710
table storage as well so the first thing

00:39:47,240 --> 00:39:52,730
to do obviously is to go to my portal

00:39:48,710 --> 00:39:56,060
and create a table that for this I can

00:39:52,730 --> 00:39:57,350
actually do this with the no API as well

00:39:56,060 --> 00:39:59,210
but I'm not gonna use if you have

00:39:57,350 --> 00:40:02,120
because simply this is just six away and

00:39:59,210 --> 00:40:03,500
I'm doing this one time right well of

00:40:02,120 --> 00:40:04,850
course you can use the API if it's

00:40:03,500 --> 00:40:07,450
repeatable or if you want to do

00:40:04,850 --> 00:40:09,380
something that you can deploy repeatably

00:40:07,450 --> 00:40:10,520
but anyway the Patil is really

00:40:09,380 --> 00:40:14,690
convenient it is there for you so the

00:40:10,520 --> 00:40:17,480
flexibility is there so with that table

00:40:14,690 --> 00:40:20,360
there I actually went on to this

00:40:17,480 --> 00:40:23,000
discover or look for a what's the SDK

00:40:20,360 --> 00:40:25,400
that I use right and I realized that

00:40:23,000 --> 00:40:28,970
okay I can't use version 10 the latest

00:40:25,400 --> 00:40:30,800
generation of the storage SDK really

00:40:28,970 --> 00:40:33,800
because it doesn't really have table

00:40:30,800 --> 00:40:37,670
support yet all right so then I moved

00:40:33,800 --> 00:40:39,640
the next available one which is v2 okay

00:40:37,670 --> 00:40:42,860
yeah that's fine

00:40:39,640 --> 00:40:48,530
so that's the flexibility of JavaScript

00:40:42,860 --> 00:40:51,980
right so from that v2 I discovered that

00:40:48,530 --> 00:40:56,990
these three these three objects help

00:40:51,980 --> 00:41:00,080
write tip the object obviously the table

00:40:56,990 --> 00:41:05,600
service itself created from the from the

00:41:00,080 --> 00:41:08,450
area and this engen object right the

00:41:05,600 --> 00:41:11,660
engine actually helps with specifying

00:41:08,450 --> 00:41:13,700
the right data types for the table okay

00:41:11,660 --> 00:41:16,700
so here's where the meat is how do I

00:41:13,700 --> 00:41:19,850
insert that object into as the table

00:41:16,700 --> 00:41:23,330
service why do here is simply I run

00:41:19,850 --> 00:41:26,060
through my magnetics array I use that

00:41:23,330 --> 00:41:31,030
objects in the metric arrayed create a

00:41:26,060 --> 00:41:34,340
new entity and this entity has proper

00:41:31,030 --> 00:41:39,110
indicative I mean proper data type

00:41:34,340 --> 00:41:41,930
indicator to table service right so my

00:41:39,110 --> 00:41:44,300
total is integer and metric time is

00:41:41,930 --> 00:41:45,110
actually a time so this is the this

00:41:44,300 --> 00:41:47,960
ensures that

00:41:45,110 --> 00:41:51,560
the table service understands my

00:41:47,960 --> 00:41:53,570
intended datatype so next what I do is I

00:41:51,560 --> 00:41:59,180
then insert anything into the Downloads

00:41:53,570 --> 00:42:02,390
table and yeah I get that entity in

00:41:59,180 --> 00:42:09,940
table storage and yeah that's how easy

00:42:02,390 --> 00:42:13,820
it is to really use the SDK so the

00:42:09,940 --> 00:42:15,350
message from today my you know what I'm

00:42:13,820 --> 00:42:18,340
trying to bring across today is that

00:42:15,350 --> 00:42:23,510
from a new perspective it's really

00:42:18,340 --> 00:42:26,960
useful gives you something beyond the

00:42:23,510 --> 00:42:29,660
portal and it's really easy there's a

00:42:26,960 --> 00:42:32,420
comprehensive API for as you know as a

00:42:29,660 --> 00:42:35,810
developer you can use and if you have

00:42:32,420 --> 00:42:39,800
codified that it can be reused and the

00:42:35,810 --> 00:42:43,850
API is wrapped by some NPM packages that

00:42:39,800 --> 00:42:47,030
easily you know NPM install and friendly

00:42:43,850 --> 00:42:49,250
storages out there such a stable service

00:42:47,030 --> 00:42:50,720
that you can use to persist if you need

00:42:49,250 --> 00:42:53,720
to persist and you probably need to

00:42:50,720 --> 00:42:55,250
persist these days right you know

00:42:53,720 --> 00:42:59,930
creating apps these days

00:42:55,250 --> 00:43:01,880
so I hope you take away some of those

00:42:59,930 --> 00:43:06,790
key messages and if you want to look

00:43:01,880 --> 00:43:09,740
further there's some suggestions for me

00:43:06,790 --> 00:43:13,970
you may want to take the example from

00:43:09,740 --> 00:43:16,730
today and maybe post it on some civiles

00:43:13,970 --> 00:43:19,540
compute which my colleague Darren Evans

00:43:16,730 --> 00:43:22,160
is gonna show in the next presentation

00:43:19,540 --> 00:43:24,320
you may want to sync your table storage

00:43:22,160 --> 00:43:26,840
to local storage so anywhere else just

00:43:24,320 --> 00:43:29,990
for the sake of liberty you know just to

00:43:26,840 --> 00:43:31,370
exercise your liberty and you want to

00:43:29,990 --> 00:43:34,130
check out like some of those other

00:43:31,370 --> 00:43:36,470
extensions of es code and we play around

00:43:34,130 --> 00:43:39,080
with dock chain which is another cool

00:43:36,470 --> 00:43:44,870
thing that Microsoft is coming out with

00:43:39,080 --> 00:43:46,300
a lot yeah so some references here thank

00:43:44,870 --> 00:43:49,300
you for your time

00:43:46,300 --> 00:43:49,300

YouTube URL: https://www.youtube.com/watch?v=JmdeVG71ESA


