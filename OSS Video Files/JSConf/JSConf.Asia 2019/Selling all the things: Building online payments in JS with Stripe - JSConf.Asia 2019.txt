Title: Selling all the things: Building online payments in JS with Stripe - JSConf.Asia 2019
Publication date: 2019-07-05
Playlist: JSConf.Asia 2019
Description: 
	Speaker:

Paul Asjes @paul_asjes
Thorsten Schaeff @thorwebdev
Chris Trudeau @trudeaucj

Ever wondered how to accept payments online from anywhere in the world with JavaScript? Learn how to build a simple payment system for an online shop using React, Node and vanilla JavaScript from Stripe engineers.

Requirements:
Bring a laptop. Attendees should make sure that they have their favourite code editor, an up-to-date browser as well as NodeJS installed (either LTS or Current)

Paul is a developer support engineer at Stripe by day and a sleepy one at night. He helps companies get set up with Stripe in a variety of languages, but JavaScript is his favourite. He's written a book on Slack bots and likes to spend time underwater when not running around Singapore eating all the things.

Event Page: https://2019.jsconf.asia/

Produced by Engineers.SG

Help us caption & translate this video!

https://amara.org/v/pl0v/
Captions: 
	00:00:00,680 --> 00:00:06,060
okay guess I need to speak up a bit more

00:00:04,710 --> 00:00:08,370
we're gonna wait a couple more minutes

00:00:06,060 --> 00:00:13,259
because they're still folks signing in

00:00:08,370 --> 00:00:16,320
but if you want already you can get

00:00:13,259 --> 00:00:19,710
started signing up while not signing up

00:00:16,320 --> 00:00:22,590
sorry connecting to the Wi-Fi so down

00:00:19,710 --> 00:00:24,180
here we have the LaSalle J s con

00:00:22,590 --> 00:00:27,240
the password is just lower case

00:00:24,180 --> 00:00:29,760
altogether j s conf Asia and then you

00:00:27,240 --> 00:00:33,059
can already check out we have a little

00:00:29,760 --> 00:00:35,730
sort of boilerplate repo you can have a

00:00:33,059 --> 00:00:36,329
look at that's just that bitly stripe J

00:00:35,730 --> 00:00:38,219
s conf

00:00:36,329 --> 00:00:40,140
so maybe just have a look at that to see

00:00:38,219 --> 00:00:42,870
that the internet and everything is

00:00:40,140 --> 00:00:45,570
working you know updates to the latest

00:00:42,870 --> 00:00:47,520
stable node version things like that and

00:00:45,570 --> 00:00:48,180
then we'll we'll kick off in a in a

00:00:47,520 --> 00:00:50,570
couple minutes

00:00:48,180 --> 00:00:50,570
Cheers

00:01:05,590 --> 00:01:10,470
at my work it's not money

00:01:30,549 --> 00:01:36,549
oh yeah something else you can do is you

00:01:34,719 --> 00:01:38,799
can if you don't know each other sitting

00:01:36,549 --> 00:01:43,020
you know on your group tables you can

00:01:38,799 --> 00:01:43,020
just introduce yourself to each other

00:01:45,619 --> 00:01:48,619
cool

00:01:50,390 --> 00:01:56,000
we don't are we night

00:02:04,700 --> 00:02:09,700
I think let's kick off into them

00:02:30,870 --> 00:02:33,680
good

00:02:36,330 --> 00:02:45,270
good in general less conferences oh it's

00:02:43,470 --> 00:02:53,450
the recording mic so you might have to

00:02:45,270 --> 00:02:53,450
be careful yeah yeah yeah

00:03:12,070 --> 00:03:18,500
we got some more chairs up here does

00:03:14,720 --> 00:03:20,270
everyone have a chair there's some free

00:03:18,500 --> 00:03:26,200
space over here in the front

00:03:20,270 --> 00:03:29,200
don't worry I'll try not to no spits

00:03:26,200 --> 00:03:29,200
cool

00:03:34,459 --> 00:03:40,540
oh I haven't installed my update screen

00:04:12,660 --> 00:04:19,549
cool should we kick off

00:04:16,600 --> 00:04:25,050
[Music]

00:04:19,549 --> 00:04:27,840
change what oh it's well it's not gonna

00:04:25,050 --> 00:04:32,389
change it's literally just one slice but

00:04:27,840 --> 00:04:32,389
then it's gonna change to the screen

00:04:33,110 --> 00:04:36,110
okay

00:04:40,340 --> 00:04:49,099
but maybe I can do like introductions

00:04:43,110 --> 00:04:49,099
and stuff yeah I'm on miramos yes

00:04:52,090 --> 00:04:56,080
should i unblock Reebok

00:04:58,240 --> 00:05:06,440
does anyone know what that is is that

00:05:00,500 --> 00:05:08,650
the metro oh oh yes national day when is

00:05:06,440 --> 00:05:17,350
when is that Singh Singapore any

00:05:08,650 --> 00:05:17,350
Singaporeans sorry August 8th okay

00:05:19,199 --> 00:05:27,129
cool should I try to unblock replac or

00:05:24,180 --> 00:05:32,620
okay I think it's ten past we're gonna

00:05:27,129 --> 00:05:36,060
kick off hello everyone whoo can you

00:05:32,620 --> 00:05:38,969
hear me in the back is that is that okay

00:05:36,060 --> 00:05:41,259
perfect

00:05:38,969 --> 00:05:44,800
yeah as you can probably see I'm not

00:05:41,259 --> 00:05:47,229
Paul a bit of wrong advertisement there

00:05:44,800 --> 00:05:50,139
on the door but I actually live in

00:05:47,229 --> 00:05:54,069
Paul's home country so I live in

00:05:50,139 --> 00:05:56,740
Amsterdam in the Netherlands the team

00:05:54,069 --> 00:05:59,319
here imported me so to speak because we

00:05:56,740 --> 00:06:01,330
actually all of our engineering team in

00:05:59,319 --> 00:06:04,090
in the Singapore office is currently in

00:06:01,330 --> 00:06:06,969
Europe so they they are doing an

00:06:04,090 --> 00:06:09,969
off-site it's a bit of bad timing but I

00:06:06,969 --> 00:06:13,659
got lucky so I I got to come out here

00:06:09,969 --> 00:06:18,490
and work with you guys which is really

00:06:13,659 --> 00:06:21,580
cool so my name is Thor it's actually

00:06:18,490 --> 00:06:26,979
tossed in which means Thor stone but no

00:06:21,580 --> 00:06:30,969
one can remember that so Thor yeah I'm

00:06:26,979 --> 00:06:34,270
I'm a integration engineer and developer

00:06:30,969 --> 00:06:37,810
advocate at stripe I generally work with

00:06:34,270 --> 00:06:40,569
our users in northern Europe very

00:06:37,810 --> 00:06:45,120
different climate over there speak

00:06:40,569 --> 00:06:49,300
colder but yeah generally help them

00:06:45,120 --> 00:06:52,330
build more sort of complex marketplace

00:06:49,300 --> 00:06:56,169
integration so money goes in money goes

00:06:52,330 --> 00:06:59,110
out yeah that's a marketplace we have

00:06:56,169 --> 00:07:02,259
some other stripes here so we have Paul

00:06:59,110 --> 00:07:05,589
whom you've met at the talk earlier we

00:07:02,259 --> 00:07:08,229
have Daniel and Chris so they're gonna

00:07:05,589 --> 00:07:11,080
be around to you know help you out if

00:07:08,229 --> 00:07:12,520
there are any issues any questions yes

00:07:11,080 --> 00:07:14,819
and Shane way in the back of course

00:07:12,520 --> 00:07:17,919
sorry

00:07:14,819 --> 00:07:19,360
so if you have any questions we're all

00:07:17,919 --> 00:07:23,560
wearing striped tee shirts so you can

00:07:19,360 --> 00:07:24,699
just point at us or you know just kind

00:07:23,560 --> 00:07:28,560
of raise your hand we're going to be

00:07:24,699 --> 00:07:28,560
we're going to be running around

00:07:29,690 --> 00:07:35,460
Wi-Fi so we have the LaSalle J s Khan

00:07:33,180 --> 00:07:36,930
fly fi down here we're gonna need that

00:07:35,460 --> 00:07:41,340
because we're going to need to

00:07:36,930 --> 00:07:45,090
communicate with the stripe API and then

00:07:41,340 --> 00:07:48,270
the password is J s conf Asia just

00:07:45,090 --> 00:07:50,130
lowercase and we have sort of a

00:07:48,270 --> 00:07:53,520
boilerplate repo that I'm just going to

00:07:50,130 --> 00:07:56,760
run you through in a second there which

00:07:53,520 --> 00:08:05,340
you can access by going to bitly slash

00:07:56,760 --> 00:08:06,710
stripe J s conf cool did everyone have a

00:08:05,340 --> 00:08:11,910
good lunch

00:08:06,710 --> 00:08:15,120
are you a bit tired now or no good okay

00:08:11,910 --> 00:08:16,920
so we can we can jump in on the

00:08:15,120 --> 00:08:21,530
recording there are you getting a signal

00:08:16,920 --> 00:08:25,920
August fantastic cool so if you go to

00:08:21,530 --> 00:08:29,310
bitly Wow

00:08:25,920 --> 00:08:32,460
strike J s conf you're going to get to

00:08:29,310 --> 00:08:36,030
this repo here so we've we've set

00:08:32,460 --> 00:08:38,910
together to set up this the spoiler

00:08:36,030 --> 00:08:40,289
plate repo here what we want to do is

00:08:38,910 --> 00:08:43,110
kind of take you through a couple

00:08:40,289 --> 00:08:45,120
different integration approaches with

00:08:43,110 --> 00:08:47,670
stripe so we're gonna kick off in the

00:08:45,120 --> 00:08:49,980
beginning with stripe check out actually

00:08:47,670 --> 00:08:54,870
can I get a quick show of hands who here

00:08:49,980 --> 00:08:58,590
has integrated stripe before okay

00:08:54,870 --> 00:09:01,220
some folks if you've done so have you

00:08:58,590 --> 00:09:03,720
integrated the new check out already

00:09:01,220 --> 00:09:07,160
no okay so we're gonna we're going to

00:09:03,720 --> 00:09:09,360
look at a new version of check out and

00:09:07,160 --> 00:09:11,610
that is actually something we can

00:09:09,360 --> 00:09:15,360
implement there's a client only version

00:09:11,610 --> 00:09:18,590
with check out where for example you can

00:09:15,360 --> 00:09:24,150
implement payments into aesthetic site

00:09:18,590 --> 00:09:25,710
with gets before example yeah that's

00:09:24,150 --> 00:09:27,210
that's actually something that that we

00:09:25,710 --> 00:09:29,460
can do with the client only checkout so

00:09:27,210 --> 00:09:30,990
in that case we don't need a server but

00:09:29,460 --> 00:09:33,540
we're gonna look also add at the

00:09:30,990 --> 00:09:35,490
checkout session peace with which then

00:09:33,540 --> 00:09:37,710
needs a server and from there we're

00:09:35,490 --> 00:09:41,250
gonna move on to a more customized

00:09:37,710 --> 00:09:43,890
checkout using drop in UI components

00:09:41,250 --> 00:09:46,110
called stripe elements Chris is gonna

00:09:43,890 --> 00:09:47,960
take you through that and then lastly we

00:09:46,110 --> 00:09:51,480
want to look at the payment request API

00:09:47,960 --> 00:09:54,920
as well as Apple pay on the web and

00:09:51,480 --> 00:10:00,270
Google pay using the payment request API

00:09:54,920 --> 00:10:04,290
cool in terms of the repo here you can

00:10:00,270 --> 00:10:07,230
see we have two different modes so we

00:10:04,290 --> 00:10:12,480
have a vanilla chase mode and we have a

00:10:07,230 --> 00:10:14,220
react motion now if you're not very

00:10:12,480 --> 00:10:16,740
familiar with react

00:10:14,220 --> 00:10:19,290
I think choose maybe the vanilla J's

00:10:16,740 --> 00:10:23,160
mode or if you have an existing project

00:10:19,290 --> 00:10:24,420
that you want to add payments to you

00:10:23,160 --> 00:10:27,150
know that that you have on your machine

00:10:24,420 --> 00:10:29,460
locally or somewhere you can do that of

00:10:27,150 --> 00:10:33,540
course as well otherwise feel free to

00:10:29,460 --> 00:10:36,089
use the repository for react you know if

00:10:33,540 --> 00:10:41,339
you're familiar with reacts you can use

00:10:36,089 --> 00:10:47,130
the stripe react elements library that

00:10:41,339 --> 00:10:49,860
is linked also here in the docs the

00:10:47,130 --> 00:10:51,900
react stripe elements so if you're

00:10:49,860 --> 00:10:54,510
familiar with react you know you use the

00:10:51,900 --> 00:10:56,070
react mode lastly we have some

00:10:54,510 --> 00:10:58,740
documentation here we're going to we're

00:10:56,070 --> 00:11:02,310
going to jump into that before we do

00:10:58,740 --> 00:11:03,630
that you can use this repo if you're

00:11:02,310 --> 00:11:05,490
using this repo

00:11:03,630 --> 00:11:09,140
you can simply clone it and run it

00:11:05,490 --> 00:11:13,080
locally we have different NPM scripts

00:11:09,140 --> 00:11:16,709
set up to run the vanilla mode as well

00:11:13,080 --> 00:11:20,880
as the react note we've implemented

00:11:16,709 --> 00:11:24,680
end Rock does anyone know what end rock

00:11:20,880 --> 00:11:28,290
is cool who doesn't know what Angra is

00:11:24,680 --> 00:11:31,410
okay everyone's sort of awake so and

00:11:28,290 --> 00:11:34,770
Rock actually allows us to have a tunnel

00:11:31,410 --> 00:11:38,280
from our localhost to the web and

00:11:34,770 --> 00:11:41,160
specifically that is an easy way for us

00:11:38,280 --> 00:11:44,550
to test web hooks if we have the server

00:11:41,160 --> 00:11:46,589
running locally on our machine so we're

00:11:44,550 --> 00:11:49,950
actually going to look at web hooks in a

00:11:46,589 --> 00:11:51,930
bit so these are HTTP requests where

00:11:49,950 --> 00:11:54,240
information from stripe that are sent to

00:11:51,930 --> 00:11:59,150
your server and using em cropped we can

00:11:54,240 --> 00:12:01,800
tunnel those requests to our localhost

00:11:59,150 --> 00:12:04,770
alternatively you know I've seen glitch

00:12:01,800 --> 00:12:06,900
being used quite lot here at Jas con so

00:12:04,770 --> 00:12:09,840
that's something you can do as well in

00:12:06,900 --> 00:12:14,670
clich if you open your new project you

00:12:09,840 --> 00:12:16,950
can simply paste in the URL so here if

00:12:14,670 --> 00:12:18,990
you go into HTTP mode you can paste in

00:12:16,950 --> 00:12:22,590
the the URL and set up the project on

00:12:18,990 --> 00:12:24,150
glitch with that if you if you want to

00:12:22,590 --> 00:12:26,190
do that then you don't have to use n

00:12:24,150 --> 00:12:30,090
grok because it's actually available on

00:12:26,190 --> 00:12:34,320
the internet maybe quick question does

00:12:30,090 --> 00:12:39,810
who does have a UNIX based OS so

00:12:34,320 --> 00:12:41,940
something like Mac OS or Linux ok good

00:12:39,810 --> 00:12:45,300
amount anyone who has a window space

00:12:41,940 --> 00:12:46,650
system ok you're probably used to

00:12:45,300 --> 00:12:49,560
everything being a bit more difficult

00:12:46,650 --> 00:12:51,600
but that's ok

00:12:49,560 --> 00:12:56,010
alternatively you know do feel free to

00:12:51,600 --> 00:13:02,810
use glitch if you know the setup doesn't

00:12:56,010 --> 00:13:02,810
work cool from that

00:13:04,110 --> 00:13:08,450
let's actually jump into the docs

00:13:10,320 --> 00:13:14,029
let's open that and in you tap

00:13:19,680 --> 00:13:26,320
so the new striped checkout if you've

00:13:24,850 --> 00:13:30,520
known if you work with stripe checkout

00:13:26,320 --> 00:13:33,730
before there was actually a modal pop-up

00:13:30,520 --> 00:13:37,290
on your site that was basically an

00:13:33,730 --> 00:13:40,360
iframe that's injected to securely

00:13:37,290 --> 00:13:43,870
submit the card details in the payment

00:13:40,360 --> 00:13:46,060
details to stripe we would then exchange

00:13:43,870 --> 00:13:49,390
these details to a token that can only

00:13:46,060 --> 00:13:51,430
be used with your secret key and then

00:13:49,390 --> 00:13:52,150
using that token you can charge the

00:13:51,430 --> 00:13:55,570
details

00:13:52,150 --> 00:13:58,030
now with the new stripe checkout it's

00:13:55,570 --> 00:14:00,870
actually even easier than that so it's a

00:13:58,030 --> 00:14:03,670
stripe hosted checkout experience and

00:14:00,870 --> 00:14:07,120
what you actually do is you redirect off

00:14:03,670 --> 00:14:10,960
to the stripe checkout page using the

00:14:07,120 --> 00:14:14,860
stripe j/s web SDK so we can quickly

00:14:10,960 --> 00:14:16,990
look at how this works so here if you go

00:14:14,860 --> 00:14:21,880
into the checkout Doc's you can click on

00:14:16,990 --> 00:14:25,630
preview check out we can see we go off

00:14:21,880 --> 00:14:28,210
to a stripe hosted checkout page you can

00:14:25,630 --> 00:14:31,030
specify the product images that should

00:14:28,210 --> 00:14:32,860
be shown if you have a cart that has

00:14:31,030 --> 00:14:35,560
more items you can you can have multiple

00:14:32,860 --> 00:14:38,080
items that are shown on that page and

00:14:35,560 --> 00:14:39,940
you can customize that here you can see

00:14:38,080 --> 00:14:40,360
stripe press we have a little logo up

00:14:39,940 --> 00:14:43,450
there

00:14:40,360 --> 00:14:45,820
so that is a very easy way to get

00:14:43,450 --> 00:14:49,180
started and as I mentioned it offers a

00:14:45,820 --> 00:14:51,160
client client only checkout version that

00:14:49,180 --> 00:14:55,060
allows us to actually use checkout

00:14:51,160 --> 00:14:58,450
without a server component now what I

00:14:55,060 --> 00:15:01,390
can do is I send me an email if you if

00:14:58,450 --> 00:15:05,620
you want to I can use here this is

00:15:01,390 --> 00:15:09,880
running in test mode I can use our test

00:15:05,620 --> 00:15:12,700
cart details if you look in into the

00:15:09,880 --> 00:15:14,290
repo we have a testing section where we

00:15:12,700 --> 00:15:17,050
also link to all the different test

00:15:14,290 --> 00:15:20,290
cards that you can use here I'm just

00:15:17,050 --> 00:15:24,250
using the default test card for two for

00:15:20,290 --> 00:15:27,520
two actually fun facts we a while ago we

00:15:24,250 --> 00:15:30,430
bought that specific bin space so no one

00:15:27,520 --> 00:15:31,970
can actually issue a credit card with

00:15:30,430 --> 00:15:33,430
for two for two

00:15:31,970 --> 00:15:37,189
wanted to make sure that doesn't happen

00:15:33,430 --> 00:15:41,750
well no one except us can do that so we

00:15:37,189 --> 00:15:45,920
actually owned the bin space and we can

00:15:41,750 --> 00:15:48,410
now use this test card and we made a

00:15:45,920 --> 00:15:51,079
successful payment and then upon a

00:15:48,410 --> 00:15:54,910
successful payment we get returned back

00:15:51,079 --> 00:15:59,110
to our success URL and we can see here

00:15:54,910 --> 00:16:05,410
we've completed a successful purchase

00:15:59,110 --> 00:16:08,060
cool now in order to do the client only

00:16:05,410 --> 00:16:11,089
integration so that's something that we

00:16:08,060 --> 00:16:14,959
want to do first we actually do need a

00:16:11,089 --> 00:16:20,930
striper couch so if you don't have a

00:16:14,959 --> 00:16:23,480
test stripe test account yet here in the

00:16:20,930 --> 00:16:29,680
getting started steps you can just click

00:16:23,480 --> 00:16:33,129
on the link open a new test account

00:16:29,680 --> 00:16:33,129
we're just gonna

00:16:34,600 --> 00:16:41,420
yeah so actually just follow along with

00:16:38,000 --> 00:16:46,209
me do do that now open open a quick test

00:16:41,420 --> 00:16:46,209
account GS conf

00:17:02,449 --> 00:17:08,610
he's implementing that I just wanted to

00:17:04,980 --> 00:17:10,049
let you know that this current charges

00:17:08,610 --> 00:17:13,079
for anything for you it actually is

00:17:10,049 --> 00:17:15,959
simply peasant now don't click the

00:17:13,079 --> 00:17:17,250
activate button up in the corner and you

00:17:15,959 --> 00:17:19,290
don't have to put any sort of like

00:17:17,250 --> 00:17:20,910
details or anything this is just a lot

00:17:19,290 --> 00:17:24,360
of you to get started

00:17:20,910 --> 00:17:27,900
and here we're seeing the fun effects

00:17:24,360 --> 00:17:30,059
off our security measures because you're

00:17:27,900 --> 00:17:33,270
all signing up at the moment and you're

00:17:30,059 --> 00:17:37,049
all on the same network we're thinking

00:17:33,270 --> 00:17:41,400
this is some fun card cash

00:17:37,049 --> 00:17:43,140
cashing going on here testing so does

00:17:41,400 --> 00:17:47,429
anyone else get that error message at

00:17:43,140 --> 00:17:49,890
the moment no everyone got their stripe

00:17:47,429 --> 00:17:55,860
account then I might just actually use

00:17:49,890 --> 00:17:58,559
the one I have yeah so this is it this

00:17:55,860 --> 00:18:00,179
is a fun thing because we're probably

00:17:58,559 --> 00:18:03,540
all on the same IP address on the

00:18:00,179 --> 00:18:06,049
network if anyone else runs into that

00:18:03,540 --> 00:18:06,049
let me know

00:18:11,080 --> 00:18:14,519
just gonna try again

00:18:20,180 --> 00:18:24,580
not a roll boss trust me

00:18:25,880 --> 00:18:34,580
there we are fantastic so what we want

00:18:30,270 --> 00:18:41,730
to select is solutions for developers

00:18:34,580 --> 00:18:44,270
and then what we can do here what can we

00:18:41,730 --> 00:18:46,950
do you can get our test API keys

00:18:44,270 --> 00:18:49,290
business information so you don't need

00:18:46,950 --> 00:18:52,400
to activate the account this is just a

00:18:49,290 --> 00:18:55,530
test account now running in test mode

00:18:52,400 --> 00:18:59,790
what we can do now is we can quickly

00:18:55,530 --> 00:19:05,040
look into the settings maybe look at the

00:18:59,790 --> 00:19:09,200
checkout settings here and I think we

00:19:05,040 --> 00:19:12,500
actually need to enable the client

00:19:09,200 --> 00:19:18,960
integration so if we want to use that

00:19:12,500 --> 00:19:20,970
maybe quickly check that now your

00:19:18,960 --> 00:19:25,700
popular seed you generate checkout pages

00:19:20,970 --> 00:19:25,700
yes we want that allow

00:19:26,820 --> 00:19:35,050
so in in test mode we can provide any

00:19:31,810 --> 00:19:37,840
you know we can call the redirect to

00:19:35,050 --> 00:19:40,840
stripe checkout from any domain like

00:19:37,840 --> 00:19:43,830
including localhost but in live mode we

00:19:40,840 --> 00:19:46,420
actually need you to register the domain

00:19:43,830 --> 00:19:49,780
because there's no server component for

00:19:46,420 --> 00:19:51,430
you to actually validate that the

00:19:49,780 --> 00:19:53,470
checkout session because we're creating

00:19:51,430 --> 00:19:55,660
the checkout session client sites we

00:19:53,470 --> 00:19:58,540
actually verify that it is created on

00:19:55,660 --> 00:20:01,980
the client from your domain in life mode

00:19:58,540 --> 00:20:01,980
don't worry about that in test mode

00:20:11,610 --> 00:20:17,679
cool yeah if anyone has problems at any

00:20:14,830 --> 00:20:20,830
point just raise your hand we have some

00:20:17,679 --> 00:20:26,320
folks flying around who will life debug

00:20:20,830 --> 00:20:29,710
with you okay and then we create our

00:20:26,320 --> 00:20:33,160
first product so because with the client

00:20:29,710 --> 00:20:35,860
only integration we don't have a server

00:20:33,160 --> 00:20:40,179
component we actually need stripe to be

00:20:35,860 --> 00:20:43,390
aware of what you're selling as you

00:20:40,179 --> 00:20:45,040
probably know we can't trust the front

00:20:43,390 --> 00:20:46,570
end we can't really trust any

00:20:45,040 --> 00:20:49,179
information that is coming from the

00:20:46,570 --> 00:20:51,549
front end unfortunately someone might

00:20:49,179 --> 00:20:53,500
have tempered with that even just the

00:20:51,549 --> 00:20:56,890
person you know in the in the dev

00:20:53,500 --> 00:20:59,020
console and the developer tools might

00:20:56,890 --> 00:21:01,870
have changed the amount so we we

00:20:59,020 --> 00:21:04,120
actually need to tell stripe this is the

00:21:01,870 --> 00:21:07,000
product we want to sell this is the

00:21:04,120 --> 00:21:11,049
amount so we call that products and SKUs

00:21:07,000 --> 00:21:15,250
so stock keeping unit that's askew so

00:21:11,049 --> 00:21:16,870
let's quickly ask at a test product I'm

00:21:15,250 --> 00:21:20,169
just going to select the one-time

00:21:16,870 --> 00:21:23,700
purchase here you can also create plans

00:21:20,169 --> 00:21:28,480
for subscriptions for recurring payments

00:21:23,700 --> 00:21:31,360
but what I'm just going to do is you

00:21:28,480 --> 00:21:32,770
probably have seen all the issues of

00:21:31,360 --> 00:21:35,620
increment we have there in the back

00:21:32,770 --> 00:21:37,450
which is a magazine that we publish

00:21:35,620 --> 00:21:40,720
about kind of different engineering

00:21:37,450 --> 00:21:45,160
topics and scaling engineering

00:21:40,720 --> 00:21:48,150
organizations we probably want Singapore

00:21:45,160 --> 00:21:48,150
dollars here

00:21:49,309 --> 00:21:56,750
now I'm not sorry I'm not gonna how do I

00:21:53,750 --> 00:21:59,510
get out of this RS I'm not gonna upload

00:21:56,750 --> 00:22:04,950
an image but I'm just gonna say ten

00:21:59,510 --> 00:22:07,990
Singapore dollars create Dutch

00:22:04,950 --> 00:22:13,360
and now we can see here we have a

00:22:07,990 --> 00:22:17,700
product ID and we have a SKU ID does

00:22:13,360 --> 00:22:23,890
everyone have their product and SKU

00:22:17,700 --> 00:22:27,370
awesome so SKU stands for stock keeping

00:22:23,890 --> 00:22:33,430
unit so if you have a product for

00:22:27,370 --> 00:22:36,760
example jas kana t-shirt an SKU is the

00:22:33,430 --> 00:22:39,940
actual version or the variant off that

00:22:36,760 --> 00:22:42,640
t-shirt so for example the size the

00:22:39,940 --> 00:22:45,670
color and you know the printing style

00:22:42,640 --> 00:22:52,000
so those three combinations make up one

00:22:45,670 --> 00:22:54,160
unique SKU correct yeah it's sort of a

00:22:52,000 --> 00:22:55,690
general inventory if you're selling

00:22:54,160 --> 00:22:58,390
physical goods

00:22:55,690 --> 00:23:01,360
it actually makes more sense if you're

00:22:58,390 --> 00:23:04,030
selling digital goods really isn't that

00:23:01,360 --> 00:23:09,190
important what you know the SKU is

00:23:04,030 --> 00:23:11,170
necessarily cool and now what we can

00:23:09,190 --> 00:23:14,980
actually do here is we can click use

00:23:11,170 --> 00:23:19,020
with a checkout and you can fill in your

00:23:14,980 --> 00:23:22,240
success URL and your cancer URL here

00:23:19,020 --> 00:23:24,040
which is going to refer to you know for

00:23:22,240 --> 00:23:26,650
example localhost URLs but we're going

00:23:24,040 --> 00:23:29,860
to copy and paste that into into our

00:23:26,650 --> 00:23:34,590
code I just want to quickly walk you

00:23:29,860 --> 00:23:39,120
through what happens very briefly so

00:23:34,590 --> 00:23:45,820
here we load the stripe j/s javascript

00:23:39,120 --> 00:23:48,130
library we then have a button the button

00:23:45,820 --> 00:23:50,560
actually has a roll link just in terms

00:23:48,130 --> 00:23:52,510
of you know screen readers for example

00:23:50,560 --> 00:23:55,060
to make sure we we know that this is

00:23:52,510 --> 00:23:57,240
actually gonna link us to a different

00:23:55,060 --> 00:23:57,240
page

00:23:57,700 --> 00:24:03,490
we can specify an error message here and

00:24:01,340 --> 00:24:08,990
then we can quickly look at the script

00:24:03,490 --> 00:24:10,790
so we initialize the stripe client

00:24:08,990 --> 00:24:14,120
library the stripe JavaScript library

00:24:10,790 --> 00:24:17,570
with our publishable key so that is

00:24:14,120 --> 00:24:19,310
gonna identify okay this is creating a

00:24:17,570 --> 00:24:21,580
checkout session for my stripe account

00:24:19,310 --> 00:24:25,820
and for example it's going to validate

00:24:21,580 --> 00:24:30,320
the the domain the origin domain in life

00:24:25,820 --> 00:24:32,390
note that you've registered we then here

00:24:30,320 --> 00:24:36,230
have a click listener for our button if

00:24:32,390 --> 00:24:37,910
you look into the boiler place we

00:24:36,230 --> 00:24:40,910
actually have a button in there that you

00:24:37,910 --> 00:24:46,400
can use and then we're simply calling

00:24:40,910 --> 00:24:50,030
stripe redirect to check out and we

00:24:46,400 --> 00:24:53,240
specify a list of views here we have

00:24:50,030 --> 00:24:56,750
only our single SKU we can specify the

00:24:53,240 --> 00:25:00,560
quantity and then our success our cancel

00:24:56,750 --> 00:25:04,970
URLs and as you can see here that is a

00:25:00,560 --> 00:25:07,370
promise so the reason for the promise is

00:25:04,970 --> 00:25:10,910
here there is an API request happening

00:25:07,370 --> 00:25:14,390
to stripe and we're waiting for the

00:25:10,910 --> 00:25:17,630
results to come back now what could the

00:25:14,390 --> 00:25:21,460
results be anyone have an idea here

00:25:17,630 --> 00:25:21,460
looking looking at this can you see that

00:25:27,590 --> 00:25:33,260
not at this point yet so we were just at

00:25:30,230 --> 00:25:37,820
the point where we want to redirect off

00:25:33,260 --> 00:25:39,529
to the strai poster checkout page and so

00:25:37,820 --> 00:25:43,070
the reason that is implemented as a

00:25:39,529 --> 00:25:45,440
promise is we need to validate that the

00:25:43,070 --> 00:25:47,600
SKU ID that was provided actually

00:25:45,440 --> 00:25:51,080
belongs to your account that everything

00:25:47,600 --> 00:25:54,350
is valid and if everything was well at

00:25:51,080 --> 00:25:57,260
what we returned is basically the

00:25:54,350 --> 00:25:59,899
checkout session with a redirect URL to

00:25:57,260 --> 00:26:02,210
the stripe hosted checkout but if there

00:25:59,899 --> 00:26:05,169
is an error we want to actually catch

00:26:02,210 --> 00:26:08,029
that error on our page and react to it

00:26:05,169 --> 00:26:10,250
so if there's no error what actually

00:26:08,029 --> 00:26:12,620
happens is we're going to redirect off

00:26:10,250 --> 00:26:15,710
to the stripe checkout but if there's an

00:26:12,620 --> 00:26:18,080
error we can we can react to it cool and

00:26:15,710 --> 00:26:21,740
I think this is the point where I'm

00:26:18,080 --> 00:26:25,850
going to let you go off to the races and

00:26:21,740 --> 00:26:29,630
implement that yourself if you're very

00:26:25,850 --> 00:26:31,519
quick with the client only checkout it's

00:26:29,630 --> 00:26:34,010
mainly copy and paste here and if you

00:26:31,519 --> 00:26:36,200
run into any issues do do just raise

00:26:34,010 --> 00:26:38,649
your hand but if you're quick you can go

00:26:36,200 --> 00:26:40,639
back here to the check out in

00:26:38,649 --> 00:26:44,299
documentation and you can look at the

00:26:40,639 --> 00:26:46,730
server integration piece where you can

00:26:44,299 --> 00:26:48,620
then actually you don't need to register

00:26:46,730 --> 00:26:50,720
the products with stripe anymore because

00:26:48,620 --> 00:26:53,210
you're doing all of that on your server

00:26:50,720 --> 00:26:56,840
and then you can actually provide a list

00:26:53,210 --> 00:26:59,930
of line items and you can have a look at

00:26:56,840 --> 00:27:03,500
that cool

00:26:59,930 --> 00:27:08,940
everyone happy to sort of race off and

00:27:03,500 --> 00:27:11,540
take some test money awesome yes a

00:27:08,940 --> 00:27:11,540
question

00:27:18,430 --> 00:27:29,450
yeah so here the here yeah so stripe to

00:27:27,800 --> 00:27:30,860
redirect to check out that function

00:27:29,450 --> 00:27:35,200
actually returns a promise

00:27:30,860 --> 00:27:35,200
so can you can use s Inc aways

00:27:39,620 --> 00:27:45,409
oh if the browser's too old is that what

00:27:43,520 --> 00:27:48,590
you mean so the browser doesn't support

00:27:45,409 --> 00:27:52,120
promises it's a good question what

00:27:48,590 --> 00:27:52,120
happens in that case does anyone know

00:27:56,890 --> 00:28:08,110
yeah we so we we just we we ship sort of

00:28:03,350 --> 00:28:08,110
a polyfill I guess yeah

00:28:10,010 --> 00:28:17,460
yeah if you have more questions just ask

00:28:12,840 --> 00:28:20,790
Paul brilliant okay cool

00:28:17,460 --> 00:28:23,010
then yeah I'll let you go off you know

00:28:20,790 --> 00:28:25,920
let's let's see what you what are you

00:28:23,010 --> 00:28:27,440
selling and if you have questions please

00:28:25,920 --> 00:28:31,940
raise your hands

00:28:27,440 --> 00:28:31,940
awesome happy hacking

00:28:56,909 --> 00:29:05,029
you guys ready to learn a little bit

00:28:59,409 --> 00:29:08,070
about stripe elements thank you

00:29:05,029 --> 00:29:11,610
so I want to talk a little bit about how

00:29:08,070 --> 00:29:13,740
you would embed a credit card form into

00:29:11,610 --> 00:29:14,490
your own own website and build a check

00:29:13,740 --> 00:29:17,700
out form

00:29:14,490 --> 00:29:19,610
so now you've implemented how's everyone

00:29:17,700 --> 00:29:21,330
doing on implementing check out

00:29:19,610 --> 00:29:24,269
everyone's kind of got that working

00:29:21,330 --> 00:29:26,820
feeling good about it so now if you

00:29:24,269 --> 00:29:29,460
wanted to build a check out form into

00:29:26,820 --> 00:29:32,340
your website closer all right there we

00:29:29,460 --> 00:29:35,759
go you can use stripe elements for that

00:29:32,340 --> 00:29:37,769
and stripe elements allows your website

00:29:35,759 --> 00:29:40,169
to be PCI compliant because it's hosted

00:29:37,769 --> 00:29:44,429
on stripe servers and it's actually

00:29:40,169 --> 00:29:51,269
embedded in an iframe so what does this

00:29:44,429 --> 00:29:54,480
look like for code if you go to the Jas

00:29:51,269 --> 00:29:58,889
workshop repository we have a link for

00:29:54,480 --> 00:30:03,570
stripe Jas and elements as well as react

00:29:58,889 --> 00:30:06,629
stripe elements and then here you can

00:30:03,570 --> 00:30:09,090
see I'm going to try to live code a

00:30:06,629 --> 00:30:11,519
little bit of this a pile would work so

00:30:09,090 --> 00:30:13,889
you can get an example of what this

00:30:11,519 --> 00:30:18,330
looks like and see that it will tokenize

00:30:13,889 --> 00:30:20,820
cards this form is hosted all on stripe

00:30:18,330 --> 00:30:23,249
and when you submit the payment here on

00:30:20,820 --> 00:30:25,470
the site then it gets you a successful

00:30:23,249 --> 00:30:28,080
token and what you can do with that

00:30:25,470 --> 00:30:30,269
token is go to charge your users and so

00:30:28,080 --> 00:30:31,799
basically we just want to get stripe

00:30:30,269 --> 00:30:33,629
elements set up so that you can start

00:30:31,799 --> 00:30:38,700
collecting those tokens and charging

00:30:33,629 --> 00:30:43,830
your users so it gets started stripe

00:30:38,700 --> 00:30:46,320
elements allows you to put in a div to

00:30:43,830 --> 00:30:55,320
your page and tag it with a card element

00:30:46,320 --> 00:30:56,820
ID so using the vanilla workshop that we

00:30:55,320 --> 00:31:00,869
already have set up you can copy and

00:30:56,820 --> 00:31:03,059
paste this form right into your website

00:31:00,869 --> 00:31:07,640
and as a part of this the form action

00:31:03,059 --> 00:31:09,590
chart goes to forward slash charge

00:31:07,640 --> 00:31:12,670
bigger

00:31:09,590 --> 00:31:16,210
oh it's really that's really dim

00:31:12,670 --> 00:31:16,210
definitely harder to see

00:31:18,390 --> 00:31:21,830
can everyone see that

00:31:24,490 --> 00:31:28,690
the light background I don't know how to

00:31:27,279 --> 00:31:31,019
do that in real-time what do I get where

00:31:28,690 --> 00:31:31,019
do I go

00:31:33,270 --> 00:31:40,270
just do it he'll still do right oh it's

00:31:37,960 --> 00:31:41,470
so much better alright so when you poke

00:31:40,270 --> 00:31:44,800
when you post this in it's actually

00:31:41,470 --> 00:31:50,200
gonna add a forum to your site so we can

00:31:44,800 --> 00:31:53,110
go look at the site and notice that we

00:31:50,200 --> 00:31:55,420
now have a credit and debit card form at

00:31:53,110 --> 00:31:58,840
a submit payment button that goes to

00:31:55,420 --> 00:32:00,670
forward slash charge so once you once

00:31:58,840 --> 00:32:02,500
you have that set up you just need a

00:32:00,670 --> 00:32:04,390
little bit of CSS to give us some

00:32:02,500 --> 00:32:06,880
styling so you can target that stripe

00:32:04,390 --> 00:32:08,920
element that we put in there and using

00:32:06,880 --> 00:32:12,070
this page and get started so you copy

00:32:08,920 --> 00:32:15,460
and paste this in to your style dot CSS

00:32:12,070 --> 00:32:19,000
that we already have set up and then

00:32:15,460 --> 00:32:21,760
let's go check what that looks like it's

00:32:19,000 --> 00:32:24,490
now maybe we have all right so that

00:32:21,760 --> 00:32:28,630
style is going to come in as soon as you

00:32:24,490 --> 00:32:31,060
embed the form from stripe so using a

00:32:28,630 --> 00:32:33,880
little JavaScript this is kind of the

00:32:31,060 --> 00:32:35,560
key the core component of implementing

00:32:33,880 --> 00:32:39,610
elements into your site you're gonna

00:32:35,560 --> 00:32:41,650
pass in styling into stripe because this

00:32:39,610 --> 00:32:44,890
is an iframe that's hosted on stripe

00:32:41,650 --> 00:32:46,390
servers and you need to tell stripe what

00:32:44,890 --> 00:32:48,280
you want this to look like what stripe

00:32:46,390 --> 00:32:50,590
is going to give back to you and hosting

00:32:48,280 --> 00:32:53,680
this iframe and then as part of that

00:32:50,590 --> 00:32:55,920
you're going to create a card element if

00:32:53,680 --> 00:33:00,490
you want to take payments of other types

00:32:55,920 --> 00:33:04,650
then you can go and look for these

00:33:00,490 --> 00:33:07,510
different payment types on the side here

00:33:04,650 --> 00:33:09,760
after after this paul is going to go

00:33:07,510 --> 00:33:13,900
over how to do payment request buttons

00:33:09,760 --> 00:33:18,600
which gives you Apple pay support so

00:33:13,900 --> 00:33:23,470
taking this JavaScript and pasting it in

00:33:18,600 --> 00:33:26,050
to our index touch a s and commenting

00:33:23,470 --> 00:33:29,230
out also I'm using the vanilla J's just

00:33:26,050 --> 00:33:31,720
for this quick code demo only just cuz

00:33:29,230 --> 00:33:34,960
it's easier to get everything started in

00:33:31,720 --> 00:33:38,350
it so hopefully if I've done everything

00:33:34,960 --> 00:33:41,080
right you'll now get an iframe that's

00:33:38,350 --> 00:33:45,190
actually loading from stripes servers

00:33:41,080 --> 00:33:47,650
and you can put in a card and fill it

00:33:45,190 --> 00:33:50,140
out and get a token so once I submit

00:33:47,650 --> 00:33:51,700
this it's going to submit it to forward

00:33:50,140 --> 00:33:54,370
slash charge and that's actually going

00:33:51,700 --> 00:33:57,520
to pass you back a token that you can

00:33:54,370 --> 00:33:59,950
use to charge users so if you look at

00:33:57,520 --> 00:34:02,830
the code that was generated on the

00:33:59,950 --> 00:34:04,900
documentation page you'll see that when

00:34:02,830 --> 00:34:06,490
the submit happens when the user hits

00:34:04,900 --> 00:34:09,070
the submit button there is an event

00:34:06,490 --> 00:34:12,220
listener and that actually calls stripe

00:34:09,070 --> 00:34:15,250
dot create token and from that we can

00:34:12,220 --> 00:34:18,700
print out the results so everyone can

00:34:15,250 --> 00:34:20,050
see actually that will refresh so here

00:34:18,700 --> 00:34:22,480
this code right here is where you can

00:34:20,050 --> 00:34:25,600
get that token to be able to handle the

00:34:22,480 --> 00:34:27,730
payment and if you want to change where

00:34:25,600 --> 00:34:29,290
the users get sent when they actually

00:34:27,730 --> 00:34:32,560
hit that submit button you can change

00:34:29,290 --> 00:34:35,080
this form action right here so that's

00:34:32,560 --> 00:34:40,750
how to get started on getting stripe

00:34:35,080 --> 00:34:42,670
elements onto your page and I didn't do

00:34:40,750 --> 00:34:43,900
any sort of styling or customization but

00:34:42,670 --> 00:34:46,660
now you can kind of play around with

00:34:43,900 --> 00:34:47,560
embedding a form and accept payments

00:34:46,660 --> 00:34:50,920
into your site directly

00:34:47,560 --> 00:34:52,450
so that's stripe elements and getting

00:34:50,920 --> 00:34:54,100
started give you guys some time to

00:34:52,450 --> 00:34:57,580
implement that and change the look and

00:34:54,100 --> 00:35:00,480
feel on this and let us know if you have

00:34:57,580 --> 00:35:02,500
any questions at all

00:35:00,480 --> 00:35:22,390
actually any questions that you'd like

00:35:02,500 --> 00:35:24,670
me to answer yeah so the same as sorry

00:35:22,390 --> 00:35:26,830
the question was is it supposed to

00:35:24,670 --> 00:35:28,840
redirect a forward slash charge is that

00:35:26,830 --> 00:35:32,830
the expected behavior you can think of

00:35:28,840 --> 00:35:35,170
that URL as the same as the success URL

00:35:32,830 --> 00:35:36,730
for a new checkout so the same you could

00:35:35,170 --> 00:35:40,650
change that the same way that you did

00:35:36,730 --> 00:35:40,650
the success for part of the the checkout

00:35:42,600 --> 00:35:48,650
any other questions

00:35:45,870 --> 00:35:48,650
awesome

00:36:25,790 --> 00:36:35,400
just as work call so there's actually so

00:36:33,420 --> 00:36:39,510
the whole reason behind you know stripe

00:36:35,400 --> 00:36:42,900
elements is to give you PCI compliance

00:36:39,510 --> 00:36:45,600
by providing kind of an injecting an

00:36:42,900 --> 00:36:48,960
iframe so only the input fields that the

00:36:45,600 --> 00:36:51,780
car details are typed into only that

00:36:48,960 --> 00:36:53,100
piece is is an iframe and everything

00:36:51,780 --> 00:36:55,500
else in your form you can completely

00:36:53,100 --> 00:36:59,220
customize and even the stripe element

00:36:55,500 --> 00:37:01,890
you can provide a style object to

00:36:59,220 --> 00:37:05,460
actually style the input fields that is

00:37:01,890 --> 00:37:08,490
hosted by stripe and PCI compliance

00:37:05,460 --> 00:37:12,060
means we want to make sure that there is

00:37:08,490 --> 00:37:14,790
no card details ever exposed on our

00:37:12,060 --> 00:37:16,920
server because if that you know if we

00:37:14,790 --> 00:37:19,230
store card details or if we even just

00:37:16,920 --> 00:37:22,920
have the card details hit our server

00:37:19,230 --> 00:37:25,890
there are certain requirements with that

00:37:22,920 --> 00:37:28,590
for handling card details so you know

00:37:25,890 --> 00:37:30,960
let's use the iframe and what actually

00:37:28,590 --> 00:37:33,230
happens in the background the car

00:37:30,960 --> 00:37:36,380
details are securely sent to stripe

00:37:33,230 --> 00:37:39,810
using your publishable key we then

00:37:36,380 --> 00:37:42,240
encrypt the card details and exchange

00:37:39,810 --> 00:37:48,600
them for a token and that token can only

00:37:42,240 --> 00:37:55,290
be used with your stripe account now has

00:37:48,600 --> 00:37:59,430
anyone here heard of 3d secure yes fun

00:37:55,290 --> 00:38:02,250
so actually in Europe there is a there's

00:37:59,430 --> 00:38:03,960
a new regulation coming into effects in

00:38:02,250 --> 00:38:06,960
September which is called strong

00:38:03,960 --> 00:38:08,940
customer authentication and strong

00:38:06,960 --> 00:38:12,210
custom authentication will demand that

00:38:08,940 --> 00:38:15,080
any payments between European merchants

00:38:12,210 --> 00:38:19,050
and European card holders are strongly

00:38:15,080 --> 00:38:23,400
authenticated and one mechanism for that

00:38:19,050 --> 00:38:27,600
will be 3d secure now even though that

00:38:23,400 --> 00:38:29,730
only effects merchants in Europe kind of

00:38:27,600 --> 00:38:33,360
looking out into 2020

00:38:29,730 --> 00:38:35,200
you know Singapore and Australia Brazil

00:38:33,360 --> 00:38:39,990
and other countries around the

00:38:35,200 --> 00:38:43,990
are looking at that as well as a way to

00:38:39,990 --> 00:38:48,220
tackle online fraud and so what we've

00:38:43,990 --> 00:38:52,660
done at stripe is we've built 3d secure

00:38:48,220 --> 00:38:55,300
authentication into our client SDKs to

00:38:52,660 --> 00:38:59,610
help you to handle that dynamically and

00:38:55,300 --> 00:39:03,940
we call it dynamic authentication Oh

00:38:59,610 --> 00:39:06,750
so the way this works is first on our

00:39:03,940 --> 00:39:09,340
server we create a payment intent and

00:39:06,750 --> 00:39:13,120
you can think of the payment intent as

00:39:09,340 --> 00:39:16,380
an object to basically track our

00:39:13,120 --> 00:39:21,070
customers intent to purchase something

00:39:16,380 --> 00:39:23,650
so we create the payment intent by

00:39:21,070 --> 00:39:28,540
simply specifying the amount and the

00:39:23,650 --> 00:39:31,360
currency that we want to collect so this

00:39:28,540 --> 00:39:34,930
is something that we need to do once we

00:39:31,360 --> 00:39:39,580
know ok we want to collect 10 Singapore

00:39:34,930 --> 00:39:43,090
dollars from our customer we want to

00:39:39,580 --> 00:39:46,450
create the payment intent and then the

00:39:43,090 --> 00:39:50,020
payment intent itself has a client

00:39:46,450 --> 00:39:54,970
secret and so the client secret we need

00:39:50,020 --> 00:39:58,300
to sent down to our front end and then

00:39:54,970 --> 00:40:01,840
we can use stripe Jas and the elements

00:39:58,300 --> 00:40:05,760
that we just used to call handle card

00:40:01,840 --> 00:40:09,900
payment do you have that on you in your

00:40:05,760 --> 00:40:09,900
client client yes

00:40:11,340 --> 00:40:19,480
so using using the payment intent client

00:40:16,990 --> 00:40:22,480
secret so the payment intent we create

00:40:19,480 --> 00:40:27,100
on our server and then we share the

00:40:22,480 --> 00:40:30,220
client secret with our our front-end and

00:40:27,100 --> 00:40:32,050
then we can simply call stripe dot

00:40:30,220 --> 00:40:35,560
handle card payment so that's part of

00:40:32,050 --> 00:40:39,610
stripe Jas and we pass in the client

00:40:35,560 --> 00:40:43,990
secret and card here is the reference to

00:40:39,610 --> 00:40:47,680
our stripe card element okay so what you

00:40:43,990 --> 00:40:50,530
just setup that's where the cardi toads

00:40:47,680 --> 00:40:55,150
are and then what we do here with stripe

00:40:50,530 --> 00:40:58,300
J s we attach the card details to our

00:40:55,150 --> 00:41:01,530
payment intent and at that point we

00:40:58,300 --> 00:41:04,330
actually evaluate you know we run our

00:41:01,530 --> 00:41:08,020
real-time machine learning based wrists

00:41:04,330 --> 00:41:10,120
fraud score detection and depending on

00:41:08,020 --> 00:41:13,540
rules you can actually in the stripe

00:41:10,120 --> 00:41:16,420
dashboard you can write rules when 3d

00:41:13,540 --> 00:41:20,170
secure should be triggered so by default

00:41:16,420 --> 00:41:23,200
we evaluate the regulation rules so for

00:41:20,170 --> 00:41:26,290
example in September in Europe we will

00:41:23,200 --> 00:41:29,350
identify okay this is a European card it

00:41:26,290 --> 00:41:32,050
requires to be strongly authenticated so

00:41:29,350 --> 00:41:35,680
let's bring up 3d secure and you can see

00:41:32,050 --> 00:41:38,200
here in test mode we render a test 3d

00:41:35,680 --> 00:41:41,730
secure page where you can then off the

00:41:38,200 --> 00:41:44,950
rise or fail the authentication step and

00:41:41,730 --> 00:41:48,070
depending on that we then resolve the

00:41:44,950 --> 00:41:50,260
promise so stripe dot handle car payment

00:41:48,070 --> 00:41:52,140
is a function again that returns a

00:41:50,260 --> 00:41:55,630
promise bless you

00:41:52,140 --> 00:41:58,660
which then resolves with either a

00:41:55,630 --> 00:42:01,480
successful payment intent status or a

00:41:58,660 --> 00:42:03,810
failed status depending on whether it

00:42:01,480 --> 00:42:03,810
was successful

00:42:05,760 --> 00:42:12,610
yes and so to test this actually you can

00:42:10,000 --> 00:42:14,950
use a test card that requires 3d secure

00:42:12,610 --> 00:42:20,250
authentication we've linked that for you

00:42:14,950 --> 00:42:22,900
in the repo as well but so going back

00:42:20,250 --> 00:42:26,800
yeah so here the payment and ten stocks

00:42:22,900 --> 00:42:29,220
so if you if you pull those up so what

00:42:26,800 --> 00:42:33,400
we need to do first now is when our

00:42:29,220 --> 00:42:35,790
customer gets to our checkout page we

00:42:33,400 --> 00:42:39,310
need to create a payment intent

00:42:35,790 --> 00:42:41,200
so either we send an a check request to

00:42:39,310 --> 00:42:45,640
our back-end to to create a payment

00:42:41,200 --> 00:42:47,770
intent or if you you know render your

00:42:45,640 --> 00:42:49,740
page on the server you can just create

00:42:47,770 --> 00:42:53,110
that before you actually render out

00:42:49,740 --> 00:42:56,170
anything once you've got the payment

00:42:53,110 --> 00:43:00,460
intent created you need to then call

00:42:56,170 --> 00:43:02,760
stripe J s Handel card payment with the

00:43:00,460 --> 00:43:06,810
client secret of your payment intent and

00:43:02,760 --> 00:43:09,400
the reference to your stripe element and

00:43:06,810 --> 00:43:14,140
that will then dynamically handle

00:43:09,400 --> 00:43:19,240
authentication okay everyone fully

00:43:14,140 --> 00:43:26,550
confused now good now any questions

00:43:19,240 --> 00:43:26,550
about the payment intent yes

00:43:29,390 --> 00:43:34,860
correct so the question is does the

00:43:32,190 --> 00:43:39,420
promise only resolved when the customer

00:43:34,860 --> 00:43:41,600
has authenticated the payment so yes in

00:43:39,420 --> 00:43:44,190
the case that authentication is required

00:43:41,600 --> 00:43:46,680
the promise will only resolve when

00:43:44,190 --> 00:43:49,800
either the customer has successfully

00:43:46,680 --> 00:43:53,060
authenticated or they've cancelled the

00:43:49,800 --> 00:43:53,060
authentication step for example

00:43:57,530 --> 00:44:06,110
yeah what if they just pass in that case

00:44:01,980 --> 00:44:10,140
it does timeout depending on your bank

00:44:06,110 --> 00:44:14,400
so what is actually shown is the issuer

00:44:10,140 --> 00:44:17,400
page from the bank and depending on that

00:44:14,400 --> 00:44:19,080
it can timeout that is correct and in

00:44:17,400 --> 00:44:26,460
that case if it times out the promise

00:44:19,080 --> 00:44:28,530
resolves with an error yeah okay so the

00:44:26,460 --> 00:44:34,110
first thing we need to do now is on our

00:44:28,530 --> 00:44:37,800
server create a payment intent and from

00:44:34,110 --> 00:44:40,380
the repository you can click on in the

00:44:37,800 --> 00:44:46,610
documentation section on payment intent

00:44:40,380 --> 00:44:49,500
and then follow the steps there okay

00:44:46,610 --> 00:44:55,120
cool

00:44:49,500 --> 00:44:58,620
yay authentication and again if you have

00:44:55,120 --> 00:45:02,580
any questions you know please ask us

00:44:58,620 --> 00:45:02,580
awesome thanks

00:45:06,200 --> 00:45:16,130
this does it in a very nice way I do so

00:45:12,530 --> 00:45:19,730
I do realize that was a maybe a bit fast

00:45:16,130 --> 00:45:22,220
so let me actually run through this and

00:45:19,730 --> 00:45:22,670
like if you know sort of what you're

00:45:22,220 --> 00:45:24,650
doing

00:45:22,670 --> 00:45:29,510
feel free to just ignore me and and run

00:45:24,650 --> 00:45:30,700
along but yeah let me actually kind of

00:45:29,510 --> 00:45:37,460
run through this

00:45:30,700 --> 00:45:42,080
so if we use payment and tens the first

00:45:37,460 --> 00:45:45,010
thing we need to do and let's go into

00:45:42,080 --> 00:45:45,010
the quick start here

00:45:45,270 --> 00:45:53,800
and let's not use darknets so we need to

00:45:51,040 --> 00:45:59,140
create our payment intent so what we

00:45:53,800 --> 00:46:02,050
actually do is on our server now that

00:45:59,140 --> 00:46:04,910
that's not the server this is the server

00:46:02,050 --> 00:46:08,470
yeah

00:46:04,910 --> 00:46:08,470
we see if I can

00:46:11,430 --> 00:46:15,650
okay maybe like that a bit smaller

00:46:17,210 --> 00:46:27,770
cool yeah our account code references

00:46:29,150 --> 00:46:34,260
references and there's color theme I

00:46:31,470 --> 00:46:42,750
just picked that likely just to get one

00:46:34,260 --> 00:46:45,660
light yes okay call me even bigger how

00:46:42,750 --> 00:46:50,870
am I supposed to coat them okay so what

00:46:45,660 --> 00:46:53,510
we need is a new route on our back end

00:46:50,870 --> 00:46:56,580
and we're actually so I'm going to use

00:46:53,510 --> 00:46:59,760
an HX request to create my payment

00:46:56,580 --> 00:47:06,030
intent from from the front end so I'm

00:46:59,760 --> 00:47:12,410
gonna do a post request here I'm gonna

00:47:06,030 --> 00:47:17,130
call it payment intent and then what we

00:47:12,410 --> 00:47:20,700
actually want to do is create our

00:47:17,130 --> 00:47:25,080
payment and cents actually do I have to

00:47:20,700 --> 00:47:29,580
have stripe set up yeah so I have my

00:47:25,080 --> 00:47:32,940
require stripe up here if you haven't in

00:47:29,580 --> 00:47:36,060
the dot end file add your stripe secret

00:47:32,940 --> 00:47:37,920
key so there's an end file in here don't

00:47:36,060 --> 00:47:41,880
share that with anyone so not like I'm

00:47:37,920 --> 00:47:44,880
doing right now and make sure to set

00:47:41,880 --> 00:47:49,580
your secret key from from the stripe

00:47:44,880 --> 00:47:49,580
dashboard so you have that in there cool

00:47:49,960 --> 00:48:00,010
so we have thoughts and I actually we

00:47:54,640 --> 00:48:03,069
can just so the thing is we need to make

00:48:00,010 --> 00:48:07,210
sure it's an async function so I'm gonna

00:48:03,069 --> 00:48:09,700
use async a ways so make sure here our

00:48:07,210 --> 00:48:13,690
function that's executed when the post

00:48:09,700 --> 00:48:17,770
request hits as asynchronous and then we

00:48:13,690 --> 00:48:22,380
can simply say that we want to create

00:48:17,770 --> 00:48:26,740
the payment intent so payment intent

00:48:22,380 --> 00:48:30,339
create and I'm just gonna say we want 10

00:48:26,740 --> 00:48:32,710
so we need to specify it in the smallest

00:48:30,339 --> 00:48:35,650
unit off the currency so with Singapore

00:48:32,710 --> 00:48:40,869
dollars is it cents do you call it cents

00:48:35,650 --> 00:48:43,660
I guess so ten hundred cents so 10

00:48:40,869 --> 00:48:46,210
Singapore dollars here and then actually

00:48:43,660 --> 00:48:52,099
what we want to return is let's use

00:48:46,210 --> 00:48:53,960
camel case here the payment in tent

00:48:52,099 --> 00:48:57,880
yeah

00:48:53,960 --> 00:48:57,880
I can't just use dosh

00:48:58,390 --> 00:49:09,370
cool oh age sounds good give that save

00:49:03,880 --> 00:49:09,370
so now on in the front end

00:49:11,320 --> 00:49:25,190
let's use vanilla Jas so we have here

00:49:17,390 --> 00:49:30,160
our a sink main function and now we need

00:49:25,190 --> 00:49:30,160
to here we have a net conflict

00:49:32,740 --> 00:49:40,089
and let's just hear when we look after

00:49:36,460 --> 00:49:49,170
we loaded the stripe library let's just

00:49:40,089 --> 00:49:49,170
fetch basically creates payment intent

00:49:49,610 --> 00:49:58,270
and I never like I can't ever remember

00:49:54,490 --> 00:49:58,270
fetch most

00:50:03,660 --> 00:50:10,620
you know that was example do we need

00:50:08,400 --> 00:50:13,699
that much stuff

00:50:10,620 --> 00:50:13,699
[Music]

00:50:17,100 --> 00:50:22,540
soon your method first we don't really

00:50:19,900 --> 00:50:26,650
take so generally you know when you do

00:50:22,540 --> 00:50:29,710
this you you have a cart on your front

00:50:26,650 --> 00:50:33,250
end and the card probably has a list of

00:50:29,710 --> 00:50:35,950
SKU IDs or item IDs that are in the cart

00:50:33,250 --> 00:50:38,560
and then generally you would post that

00:50:35,950 --> 00:50:40,270
cart through your back-end on your

00:50:38,560 --> 00:50:43,060
back-end you would then check in the

00:50:40,270 --> 00:50:44,980
database based on you know the items

00:50:43,060 --> 00:50:47,770
that are in the carts this is the amount

00:50:44,980 --> 00:50:49,869
that I need to charge with just how did

00:50:47,770 --> 00:50:51,790
the hard-coded the amount at the moment

00:50:49,869 --> 00:50:53,680
so we're not going to actually send

00:50:51,790 --> 00:50:58,590
anything so I think the only thing I

00:50:53,680 --> 00:51:05,220
need to do is say that we want to post

00:50:58,590 --> 00:51:05,220
so let me just quickly take that space

00:51:07,589 --> 00:51:16,049
and French URL and then the options okay

00:51:13,279 --> 00:51:23,180
so here we called our route payment

00:51:16,049 --> 00:51:23,180
intent and then we say we want method

00:51:23,470 --> 00:51:30,490
that's a string gonna be lowercase

00:51:25,870 --> 00:51:33,520
doesn't matter maybe do the uppercase

00:51:30,490 --> 00:51:36,610
give that safe and what we're actually

00:51:33,520 --> 00:51:39,900
doing here so the fetch method returns a

00:51:36,610 --> 00:51:43,360
promise and then on that promise we call

00:51:39,900 --> 00:51:45,970
we basically turn the results into JSON

00:51:43,360 --> 00:51:52,270
and then we want to store the Chaisson

00:51:45,970 --> 00:51:55,870
in to say payment intent equals weight

00:51:52,270 --> 00:52:00,210
and then maybe for now actually just log

00:51:55,870 --> 00:52:00,210
out that payment intent

00:52:03,229 --> 00:52:07,739
and what I'd like to do is just log it

00:52:05,670 --> 00:52:11,999
out as an object then we can interact

00:52:07,739 --> 00:52:15,569
with it nicely in the console now let's

00:52:11,999 --> 00:52:19,249
actually start this up

00:52:15,569 --> 00:52:19,249
NPM run vanilla

00:52:28,450 --> 00:52:34,310
cool you see first we're fetching the

00:52:30,770 --> 00:52:37,060
config then we're posting here to our

00:52:34,310 --> 00:52:40,040
payment intent can you actually see that

00:52:37,060 --> 00:52:42,470
journey to make that bigger but if we go

00:52:40,040 --> 00:52:45,340
into the preview here we can now see the

00:52:42,470 --> 00:52:50,990
payment intent object that we've created

00:52:45,340 --> 00:52:55,280
and here we can see we have a client

00:52:50,990 --> 00:52:58,700
secret and the neat thing here is

00:52:55,280 --> 00:53:01,910
actually by exposing the client secret

00:52:58,700 --> 00:53:06,610
to our client we can now use our

00:53:01,910 --> 00:53:09,260
publishable key to create a payment and

00:53:06,610 --> 00:53:14,150
we can actually sort of hand everything

00:53:09,260 --> 00:53:17,900
up to stripe j/s including the handling

00:53:14,150 --> 00:53:20,660
of the authentication requirements by

00:53:17,900 --> 00:53:23,540
just handing over that client secret to

00:53:20,660 --> 00:53:27,260
the payment that client secret to stripe

00:53:23,540 --> 00:53:29,620
j/s and we need our element as well okay

00:53:27,260 --> 00:53:29,620
so

00:53:30,210 --> 00:53:37,060
does everyone have a way to create their

00:53:34,900 --> 00:53:39,340
payment intent yes or should I give you

00:53:37,060 --> 00:53:43,780
some time before we continue what do you

00:53:39,340 --> 00:53:47,470
think who's got their payment intent

00:53:43,780 --> 00:53:52,260
created at this point okay I'll give you

00:53:47,470 --> 00:53:52,260
some time to to implement that

00:54:13,450 --> 00:54:16,530
[Music]

00:55:08,610 --> 00:55:11,090
yeah

00:55:16,380 --> 00:55:19,510
[Music]

00:58:58,530 --> 00:59:07,720
okay I've I've quickly added the

00:59:02,620 --> 00:59:11,890
elements to my pages well and so now I'm

00:59:07,720 --> 00:59:14,410
gonna quickly run through bringing our

00:59:11,890 --> 00:59:19,780
payment intent together with the card

00:59:14,410 --> 00:59:22,630
details using the card element so you

00:59:19,780 --> 00:59:27,820
can see here I've got my element in the

00:59:22,630 --> 00:59:32,650
page we we got it here within the card

00:59:27,820 --> 00:59:34,930
element so that's our reference to to

00:59:32,650 --> 00:59:38,860
our card element which then in takes the

00:59:34,930 --> 00:59:46,090
card details so now here in payment

00:59:38,860 --> 00:59:48,970
intent what we do is when our button is

00:59:46,090 --> 00:59:51,340
clicked the the submit payment button we

00:59:48,970 --> 00:59:56,140
then call the handle card payment as I

00:59:51,340 --> 00:59:58,510
mentioned with the client secret and we

00:59:56,140 --> 01:00:03,330
can submit additional billing details

00:59:58,510 --> 01:00:03,330
here for example the the cardholder name

01:00:04,210 --> 01:00:09,820
so that make copy that

01:00:22,170 --> 01:00:30,449
to my smaller

01:00:25,339 --> 01:00:33,959
so actually my client secret here I

01:00:30,449 --> 01:00:36,359
don't have it on the button but as

01:00:33,959 --> 01:00:41,399
you've seen here I have it on the

01:00:36,359 --> 01:00:44,579
payment intent that I've fetched wire my

01:00:41,399 --> 01:00:52,709
HX post requests so I can say payment

01:00:44,579 --> 01:00:58,289
intent Josh client secret so that's my

01:00:52,709 --> 01:01:00,959
client secret if you remember here you

01:00:58,289 --> 01:01:03,979
can see in the network tab so that's my

01:01:00,959 --> 01:01:03,979
payment intent object

01:01:05,260 --> 01:01:19,420
and so payment intent so you

01:01:14,690 --> 01:01:19,420
secret and then my card element is this

01:01:19,810 --> 01:01:25,819
and so because I've already used the

01:01:23,119 --> 01:01:29,450
payment intent name let me actually do

01:01:25,819 --> 01:01:31,990
the following let's not do structure it

01:01:29,450 --> 01:01:36,589
here but let's just call it result and

01:01:31,990 --> 01:01:40,940
then what we're going to do is we're

01:01:36,589 --> 01:01:44,150
gonna await this so I'm going to wait

01:01:40,940 --> 01:01:48,880
for the promise to resolve and then

01:01:44,150 --> 01:01:51,880
we're just going to console.log the

01:01:48,880 --> 01:01:51,880
results

01:01:54,500 --> 01:02:00,440
oh yeah and I didn't actually add

01:01:58,490 --> 01:02:04,720
anything to collect the cardholder name

01:02:00,440 --> 01:02:09,920
I'm just gonna put in Thor here

01:02:04,720 --> 01:02:15,820
Thor is buying everything oh cool

01:02:09,920 --> 01:02:24,070
and that should be it so if I go back to

01:02:15,820 --> 01:02:27,290
my page so upon load I got my config I

01:02:24,070 --> 01:02:30,250
create my payment intent I set up my

01:02:27,290 --> 01:02:33,920
element and now I'm going to use the

01:02:30,250 --> 01:02:39,109
test card details that require 3d secure

01:02:33,920 --> 01:02:43,310
authentication and when I click

01:02:39,109 --> 01:02:46,910
pre-order I get an error yes card button

01:02:43,310 --> 01:02:51,640
is not defined and see that's what you

01:02:46,910 --> 01:02:51,640
get from copying things

01:02:56,850 --> 01:03:04,200
oh wait I already have my pre-order

01:03:00,780 --> 01:03:04,410
button so I don't actually need this do

01:03:04,200 --> 01:03:13,070
I

01:03:04,410 --> 01:03:13,070
I just need where is it

01:03:16,269 --> 01:03:24,579
yeah so that that event listener is I

01:03:20,699 --> 01:03:25,959
already have my event listener here the

01:03:24,579 --> 01:03:31,329
only thing I need to make sure now

01:03:25,959 --> 01:03:33,899
because I'm using a wait for the handle

01:03:31,329 --> 01:03:38,949
card payment promise I need to make this

01:03:33,899 --> 01:03:44,339
an async function I'm not actually using

01:03:38,949 --> 01:03:44,339
the events cool let's try that again

01:03:48,840 --> 01:03:56,970
here we are requires authentication

01:03:53,970 --> 01:03:56,970
submits

01:03:57,200 --> 01:04:06,049
well you should be a client secret

01:03:59,630 --> 01:04:08,710
string so what am i submitted probably

01:04:06,049 --> 01:04:08,710
not a strength

01:04:09,670 --> 01:04:12,820
[Music]

01:04:16,380 --> 01:04:27,549
anyone see what I'm doing wrong no no I

01:04:21,279 --> 01:04:30,569
mean this should be globally scopes my

01:04:27,549 --> 01:04:30,569
client see her

01:04:34,590 --> 01:04:39,609
did I spell it correctly

01:04:36,530 --> 01:04:39,609
[Music]

01:04:52,310 --> 01:04:56,840
okay three time's the charm

01:05:05,500 --> 01:05:10,180
if I still get an airline probably

01:05:19,459 --> 01:05:25,369
do you see what I'm doing wrong okay

01:05:22,559 --> 01:05:25,369
let's try this

01:05:34,070 --> 01:05:39,110
it is undefined fantastic

01:05:41,100 --> 01:05:49,880
oh wait am i clicking - quick now I mean

01:05:44,610 --> 01:05:49,880
I thought there might be sounds here say

01:06:02,349 --> 01:06:12,979
you mean on fetch yeah so we get we're

01:06:09,079 --> 01:06:17,449
gonna sort of change now so the payment

01:06:12,979 --> 01:06:23,979
intent here is fine I think the problem

01:06:17,449 --> 01:06:23,979
is when we set up two Broughton

01:06:26,210 --> 01:06:31,510
I think we got something funky going on

01:06:39,920 --> 01:06:43,580
yeah so this is

01:06:46,380 --> 01:06:53,480
and I mean it's just the just option

01:06:53,500 --> 01:07:01,140
things that change should be fun now

01:06:57,790 --> 01:07:01,140
you're turning on the survey machine

01:07:07,560 --> 01:07:14,870
is a payment until payment oh it is okay

01:07:22,950 --> 01:07:31,269
yeah so should a mother finder stammer

01:07:26,529 --> 01:07:34,269
oh yeah so that is my faults here I'm

01:07:31,269 --> 01:07:36,549
actually returning in objects on my

01:07:34,269 --> 01:07:42,279
server I'm returning an object that then

01:07:36,549 --> 01:07:46,210
intends the objects so I might actually

01:07:42,279 --> 01:07:52,170
just do this so now we should actually

01:07:46,210 --> 01:07:55,499
have the right objects did that restart

01:07:52,170 --> 01:07:55,499
let's see

01:08:00,080 --> 01:08:09,080
okay yeah now cool

01:08:09,950 --> 01:08:16,920
so now we've got the client secret we're

01:08:12,510 --> 01:08:20,120
evaluating the car T sales we recognize

01:08:16,920 --> 01:08:25,410
that we need to perform authentication

01:08:20,120 --> 01:08:30,860
so we're going to approve this and then

01:08:25,410 --> 01:08:30,860
the error is not defined that is great

01:08:32,930 --> 01:08:43,589
because I change the results so we

01:08:41,190 --> 01:08:47,819
actually here need to say so result dog

01:08:43,589 --> 01:08:51,239
era but we can already see I think a

01:08:47,819 --> 01:08:54,690
console logs icon select the results

01:08:51,239 --> 01:08:57,060
here so when the promise resolves we

01:08:54,690 --> 01:08:59,819
actually get back our payment intent and

01:08:57,060 --> 01:09:03,480
we can now see we have an updated status

01:08:59,819 --> 01:09:05,700
here that says succeeded so if we go

01:09:03,480 --> 01:09:08,450
into the dashboard and we go into

01:09:05,700 --> 01:09:08,450
payments

01:09:10,699 --> 01:09:14,650
now I need to give those a refresh

01:09:19,200 --> 01:09:25,759
[Music]

01:09:20,380 --> 01:09:26,920
okay oh I'm using a different account I

01:09:25,759 --> 01:09:29,989
just realized

01:09:26,920 --> 01:09:29,989
[Music]

01:09:31,249 --> 01:09:37,909
which account am i using so in the

01:09:36,769 --> 01:09:39,799
dashboard you would then see your

01:09:37,909 --> 01:09:42,589
payment once you're using the right

01:09:39,799 --> 01:09:45,889
account so actually let me quickly do

01:09:42,589 --> 01:09:49,729
the following just gonna update my API

01:09:45,889 --> 01:09:52,429
keys in the and file the thing is if you

01:09:49,729 --> 01:09:54,800
update your API keys indeed and file you

01:09:52,429 --> 01:10:01,539
actually need to restart the server

01:09:54,800 --> 01:10:01,539
manually so here in the durant file

01:10:03,610 --> 01:10:10,110
and you should never show anyone you'd

01:10:06,460 --> 01:10:19,140
end file just calling that out here

01:10:10,110 --> 01:10:19,140
cool so nice let's restart

01:10:35,380 --> 01:10:44,930
pre-order call 3d secure authentication

01:10:41,890 --> 01:10:47,540
Europe is happy oh yeah we actually

01:10:44,930 --> 01:10:49,820
didn't implement any success metric

01:10:47,540 --> 01:10:53,090
message but now if we go back to our

01:10:49,820 --> 01:10:57,940
dashboard we can see the successful

01:10:53,090 --> 01:10:57,940
payment were made for our customer Thor

01:10:58,600 --> 01:11:01,600
cool

01:11:03,850 --> 01:11:09,260
yeah maybe should we do 10 more minutes

01:11:06,620 --> 01:11:11,780
for you to glue things together and then

01:11:09,260 --> 01:11:13,820
I'm gonna hand over to Paul to give you

01:11:11,780 --> 01:11:17,840
a quick look at the payment request API

01:11:13,820 --> 01:11:21,760
and using Apple pay in in the browser

01:11:17,840 --> 01:11:27,040
and then we're going to wrap things up

01:11:21,760 --> 01:11:27,040
at some point cool thanks

01:11:42,350 --> 01:11:53,460
yes okay I think we lost a couple people

01:11:49,830 --> 01:11:58,530
there that's a bummer because we sort of

01:11:53,460 --> 01:12:01,760
kept the coolest thing for the end have

01:11:58,530 --> 01:12:04,050
you heard of the payment requests API

01:12:01,760 --> 01:12:08,430
who has heard of the payment requests

01:12:04,050 --> 01:12:12,570
API call so I think everyone has heard

01:12:08,430 --> 01:12:15,840
of the w3c the world wide web consortium

01:12:12,570 --> 01:12:22,100
so the governing body of kind of the web

01:12:15,840 --> 01:12:22,100
standards and the payment request API is

01:12:22,700 --> 01:12:26,940
something that's part of the web

01:12:24,570 --> 01:12:28,860
payments working group so there's the

01:12:26,940 --> 01:12:34,380
payment request API and the payments

01:12:28,860 --> 01:12:39,330
handler API and what it aims at is to

01:12:34,380 --> 01:12:42,390
provide a native browser interface to

01:12:39,330 --> 01:12:44,900
collect payment details so instead of

01:12:42,390 --> 01:12:48,390
everyone having to build their own

01:12:44,900 --> 01:12:54,930
checkout page the idea is that the

01:12:48,390 --> 01:12:57,960
browser can natively render a UI that is

01:12:54,930 --> 01:13:02,250
a native UI to collect payment details

01:12:57,960 --> 01:13:04,820
and so if we here look at we can

01:13:02,250 --> 01:13:04,820
actually go

01:13:05,330 --> 01:13:11,760
into the payment request button

01:13:08,010 --> 01:13:16,350
so it's stripe we actually part off the

01:13:11,760 --> 01:13:18,030
w3c web payments working group which is

01:13:16,350 --> 01:13:23,430
working on this standards to build

01:13:18,030 --> 01:13:27,150
native browser payment detail collection

01:13:23,430 --> 01:13:30,150
api's whoo and we've wrapped the payment

01:13:27,150 --> 01:13:33,780
requests API into an element that you

01:13:30,150 --> 01:13:36,510
can use to trigger that UI and securely

01:13:33,780 --> 01:13:39,030
collect those Carty sets so for example

01:13:36,510 --> 01:13:42,270
here on Chrome we can get a Pay Now

01:13:39,030 --> 01:13:47,700
button that will actually trigger the

01:13:42,270 --> 01:13:49,650
payment request API maybe let me let me

01:13:47,700 --> 01:13:55,940
zoom in there a little so you can see

01:13:49,650 --> 01:13:58,560
that and here the payment request API

01:13:55,940 --> 01:14:03,300
bundles various different payment

01:13:58,560 --> 01:14:06,600
methods or payment vehicles into the

01:14:03,300 --> 01:14:09,390
native browser UI and so for example

01:14:06,600 --> 01:14:13,050
here via the payment request API I can

01:14:09,390 --> 01:14:16,400
access google pay and google pay uses

01:14:13,050 --> 01:14:20,820
what is called the payments handler API

01:14:16,400 --> 01:14:23,280
to provide via a serviceworker the

01:14:20,820 --> 01:14:25,380
Google payment methods into in this

01:14:23,280 --> 01:14:27,900
native browser fields so so this is

01:14:25,380 --> 01:14:31,710
actually not a pop-up this is a native

01:14:27,900 --> 01:14:34,620
chrome UI so here if we select Google

01:14:31,710 --> 01:14:37,230
pay and we click on pay this actually

01:14:34,620 --> 01:14:39,810
uses the payment handler API so Google

01:14:37,230 --> 01:14:41,940
uses the payment handler API to show me

01:14:39,810 --> 01:14:44,460
the Google pay our interface natively

01:14:41,940 --> 01:14:47,610
within the browser and then I can just

01:14:44,460 --> 01:14:52,620
select my stored payment method here and

01:14:47,610 --> 01:14:55,260
I can pay with that and the details so

01:14:52,620 --> 01:14:58,800
so now the card details that I've stored

01:14:55,260 --> 01:15:01,620
in my Google account are securely shared

01:14:58,800 --> 01:15:04,620
with with stripe so that the merchants

01:15:01,620 --> 01:15:07,290
can actually access those details and

01:15:04,620 --> 01:15:10,140
use them for payment now the cool thing

01:15:07,290 --> 01:15:13,130
is if we actually open this in the

01:15:10,140 --> 01:15:13,130
Safari browser

01:15:15,980 --> 01:15:19,070
[Music]

01:15:21,380 --> 01:15:29,730
we now get an Apple pay button now the

01:15:25,350 --> 01:15:32,010
reason for that is that so Apple does

01:15:29,730 --> 01:15:34,110
implement the payment request API Apple

01:15:32,010 --> 01:15:36,810
is part of the the web payments working

01:15:34,110 --> 01:15:41,810
group as well but they only allow access

01:15:36,810 --> 01:15:44,520
to Apple pay as a payment method so

01:15:41,810 --> 01:15:47,850
that's why we only get Apple pay here as

01:15:44,520 --> 01:15:49,590
a button but we can use Apple pay and I

01:15:47,850 --> 01:15:51,660
can then actually access and

01:15:49,590 --> 01:15:55,470
unfortunately only on Safari

01:15:51,660 --> 01:15:58,740
I can access the car details that are

01:15:55,470 --> 01:16:00,960
stored in my Apple account it couldn't

01:15:58,740 --> 01:16:02,580
connect to my phone there but I don't

01:16:00,960 --> 01:16:04,980
have the fingerprint if I had the new

01:16:02,580 --> 01:16:08,370
Mac with the fingerprint sensor I could

01:16:04,980 --> 01:16:10,260
actually prove it on on the laptop

01:16:08,370 --> 01:16:14,910
otherwise it here it tries to handoff to

01:16:10,260 --> 01:16:18,380
my phone so with the payment request

01:16:14,910 --> 01:16:22,200
button we can actually access native

01:16:18,380 --> 01:16:24,870
wallets and and and sort of native

01:16:22,200 --> 01:16:27,030
payment interfaces are here for example

01:16:24,870 --> 01:16:29,610
instead of Google pay so on Chrome we

01:16:27,030 --> 01:16:33,740
actually have the center we can also

01:16:29,610 --> 01:16:36,240
access card details that are saved on my

01:16:33,740 --> 01:16:39,690
Chrome so for example these are saved

01:16:36,240 --> 01:16:42,930
with autofill my car details and I can I

01:16:39,690 --> 01:16:46,520
can access those as well or using Google

01:16:42,930 --> 01:16:49,320
pane so that's really nice because on

01:16:46,520 --> 01:16:52,140
mobile phones especially if you build a

01:16:49,320 --> 01:16:53,790
mobile website it's very convenient you

01:16:52,140 --> 01:16:56,340
know to pay with Google Play or Apple

01:16:53,790 --> 01:16:59,520
pay and it's cool that you know with

01:16:56,340 --> 01:17:03,810
with so the payment request API is part

01:16:59,520 --> 01:17:06,030
of the whole progressive web app idea so

01:17:03,810 --> 01:17:07,860
it's great that we can build experiences

01:17:06,030 --> 01:17:12,120
that actually allow us to to access

01:17:07,860 --> 01:17:14,520
native functionality and payment details

01:17:12,120 --> 01:17:20,310
that are stored natively on on the

01:17:14,520 --> 01:17:24,390
device what you can do so if you wanted

01:17:20,310 --> 01:17:26,460
to put this into your application now we

01:17:24,390 --> 01:17:31,540
can actually go

01:17:26,460 --> 01:17:34,870
dude where is it so here there is a

01:17:31,540 --> 01:17:39,370
toggle to implement the payment request

01:17:34,870 --> 01:17:44,650
API with payment and tens so we actually

01:17:39,370 --> 01:17:46,750
have a callback listener here when what

01:17:44,650 --> 01:17:49,150
when we when we access the payment

01:17:46,750 --> 01:17:52,240
details on the phone they are shared

01:17:49,150 --> 01:17:55,000
directly with stripe stripe then

01:17:52,240 --> 01:17:57,400
exchange it it for a token and once we

01:17:55,000 --> 01:18:00,520
have the token we fire this callback

01:17:57,400 --> 01:18:01,720
handler to tell you that we've got a

01:18:00,520 --> 01:18:05,470
payment method

01:18:01,720 --> 01:18:08,110
token that you can use and then what you

01:18:05,470 --> 01:18:10,960
do is you basically confirm the payment

01:18:08,110 --> 01:18:14,080
intent that you created so the payment

01:18:10,960 --> 01:18:16,780
intent client secret here again with the

01:18:14,080 --> 01:18:20,440
payment method that was shared fired the

01:18:16,780 --> 01:18:23,340
payment request API and then we can

01:18:20,440 --> 01:18:28,290
react to the results so either it is

01:18:23,340 --> 01:18:33,190
successful or we might actually have to

01:18:28,290 --> 01:18:35,140
handle authentication so if this uses

01:18:33,190 --> 01:18:37,270
Apple pay as a payment method in the

01:18:35,140 --> 01:18:40,200
background authentication is actually

01:18:37,270 --> 01:18:42,790
handled via the the fingerprint sensor

01:18:40,200 --> 01:18:46,080
within the phone but if we for example

01:18:42,790 --> 01:18:49,750
via the payment request API if we use

01:18:46,080 --> 01:18:52,450
just stored card details that are stored

01:18:49,750 --> 01:18:54,160
on the Chrome browser then potentially

01:18:52,450 --> 01:18:56,440
we might need to additionally perform

01:18:54,160 --> 01:19:00,360
authentication and that's what we do

01:18:56,440 --> 01:19:03,730
here with with handler card payment

01:19:00,360 --> 01:19:06,070
looking at the time I don't think we

01:19:03,730 --> 01:19:08,410
have enough time to actually hook that

01:19:06,070 --> 01:19:11,560
into the application if you want to do

01:19:08,410 --> 01:19:14,650
that you know feel free to run here

01:19:11,560 --> 01:19:19,630
through the payment request QuickStart

01:19:14,650 --> 01:19:21,700
you can see it uses it's very similar to

01:19:19,630 --> 01:19:25,120
using elements you know with with the

01:19:21,700 --> 01:19:27,640
card element but instead what you do you

01:19:25,120 --> 01:19:30,310
actually create the payment request with

01:19:27,640 --> 01:19:33,400
the details so here you need to provide

01:19:30,310 --> 01:19:36,820
the payment details that should be shown

01:19:33,400 --> 01:19:38,940
on Apple pay on Google pay so that's why

01:19:36,820 --> 01:19:44,790
you put them in here

01:19:38,940 --> 01:19:47,520
adjacent object and then we create a

01:19:44,790 --> 01:19:51,000
payment request button element here with

01:19:47,520 --> 01:19:53,610
our payment request object and we then

01:19:51,000 --> 01:19:56,100
can check wired the browser so why are

01:19:53,610 --> 01:19:58,890
the payment request API we can check if

01:19:56,100 --> 01:20:02,060
we can make a payment so if any of the

01:19:58,890 --> 01:20:05,160
native methods or Apple pay Google pay

01:20:02,060 --> 01:20:07,860
the payment request API with with stored

01:20:05,160 --> 01:20:12,270
card details or even a Microsoft pay is

01:20:07,860 --> 01:20:15,810
apparently thing we can check if any of

01:20:12,270 --> 01:20:18,420
those methods are available and then if

01:20:15,810 --> 01:20:22,850
they are available basically we mount

01:20:18,420 --> 01:20:27,600
the payment request button into our form

01:20:22,850 --> 01:20:32,400
cool so that's how we can actually get

01:20:27,600 --> 01:20:34,470
access to Apple pay on the web why are

01:20:32,400 --> 01:20:41,989
the payment requests API the payment

01:20:34,470 --> 01:20:41,989
request button any questions on that yes

01:20:53,810 --> 01:20:59,060
with you mean was the the hosted

01:20:56,880 --> 01:20:59,060
checkout

01:21:02,040 --> 01:21:05,700
sorry can you repeat that

01:21:06,980 --> 01:21:11,250
[Music]

01:21:22,880 --> 01:21:31,170
so the question is if I use the payment

01:21:27,240 --> 01:21:35,580
request API within a react native

01:21:31,170 --> 01:21:41,160
application does it show the the native

01:21:35,580 --> 01:21:46,160
Apple pay behavior I think the answer is

01:21:41,160 --> 01:21:46,160
yes Janeway view yes yes

01:21:54,640 --> 01:22:03,040
okay yeah so if you want to feel free to

01:21:58,930 --> 01:22:08,200
stick around I think the talks continue

01:22:03,040 --> 01:22:10,150
again at 4:30 but if you you know if you

01:22:08,200 --> 01:22:11,560
want to continue we could we can we're

01:22:10,150 --> 01:22:14,950
going to stick around to answer

01:22:11,560 --> 01:22:16,770
questions thank you very much for

01:22:14,950 --> 01:22:19,510
joining us for this workshop we have

01:22:16,770 --> 01:22:22,650
some t-shirts in the back as well as

01:22:19,510 --> 01:22:26,980
some issues of increment feel free to

01:22:22,650 --> 01:22:28,660
take one there and yeah thank you for

01:22:26,980 --> 01:22:31,380
for joining us and if you have any

01:22:28,660 --> 01:22:35,110
questions in general about stripe or

01:22:31,380 --> 01:22:38,380
stripe in a pack in Singapore feel free

01:22:35,110 --> 01:22:41,250
to ask us thanks a lot and enjoy the

01:22:38,380 --> 01:22:41,250

YouTube URL: https://www.youtube.com/watch?v=TGGajVx0Sn8


