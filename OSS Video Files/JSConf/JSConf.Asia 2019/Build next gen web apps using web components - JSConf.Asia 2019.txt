Title: Build next gen web apps using web components - JSConf.Asia 2019
Publication date: 2019-07-05
Playlist: JSConf.Asia 2019
Description: 
	Speaker: Sumit Chaudhari @sumit_nitsurat

In today`s world the front end technology is evolving really fast. New frameworks are getting launched to simplify the developers life. But with the changing technology it`s really hard to move from one framework to another or update to the newest version. 
Web components is a relatively new standard enabling front end developers to create cross frameworks compatible components. it lets you write reusable components with native browser Api with zero external dependencies. 
In this workshop we will learn to build a web app with reusable components using web components (custom elements, Shadow DOM, Html templates, Modules). We will also get acquainted with helper library lit-element and how we can integrate these components with existing frameworks.

Requirements:
Prior knowledge of HTML, JavaScript and CSS required in order to follow along.
Please bring a laptop, preferably with NodeJS and administrator permissions to install new software. Donâ€™t forget your favourite IDE for JavaScript development.

Sumit is a Software Consultant at Zenika Singapore. Curious and always interested in new technologies, he helps people to use the best practices known such as CI/CD, BDD, TDD, code reviews and so on. Sumit likes to share his knowledge with one and all via trainings, meet-ups and other tech events.

Event Page: https://2019.jsconf.asia/

Produced by Engineers.SG

Help us caption & translate this video!

https://amara.org/v/pl3t/
Captions: 
	00:00:00,000 --> 00:00:05,190
which is basically first blockchain

00:00:02,490 --> 00:00:08,870
platform in syncopal to issue the

00:00:05,190 --> 00:00:08,870
education certificate on blockchain

00:00:13,400 --> 00:00:18,020
and I've been in software development

00:00:16,760 --> 00:00:22,160
swirling

00:00:18,020 --> 00:00:24,430
and also building and the rest stops

00:00:22,160 --> 00:00:24,430
using

00:00:25,820 --> 00:00:34,829
so today again guys we will go through

00:00:31,080 --> 00:00:36,660
the basics of web components and then we

00:00:34,829 --> 00:00:39,690
will talk about the elements of web

00:00:36,660 --> 00:00:43,070
components and we will be like to do

00:00:39,690 --> 00:00:43,070
demo using web components

00:00:46,649 --> 00:00:49,520
can listen

00:00:50,330 --> 00:00:55,219
[Music]

00:00:56,280 --> 00:01:02,560
and after that we will build check

00:01:00,340 --> 00:01:05,100
application using the element which is

00:01:02,560 --> 00:01:07,840
one of three web component framework and

00:01:05,100 --> 00:01:09,670
then we will talk about how we can

00:01:07,840 --> 00:01:12,280
integrate web components with the

00:01:09,670 --> 00:01:14,140
existing project which you just type I

00:01:12,280 --> 00:01:23,040
kill I really like see I can with all

00:01:14,140 --> 00:01:27,610
those Fugees exciting yeah Facebook okay

00:01:23,040 --> 00:01:30,220
so web components is the set of

00:01:27,610 --> 00:01:34,360
standards to like modulars useable an

00:01:30,220 --> 00:01:36,280
encapsulated HTML elements basically in

00:01:34,360 --> 00:01:39,070
today's world if you are working on the

00:01:36,280 --> 00:01:40,270
front and side so before proceeding I

00:01:39,070 --> 00:01:42,759
just want to ask one thing

00:01:40,270 --> 00:01:46,690
how many of you have worked on web

00:01:42,759 --> 00:01:51,759
components like raise your hand ever

00:01:46,690 --> 00:01:52,990
heard of web components okay how many of

00:01:51,759 --> 00:01:55,750
you are working on the front-end

00:01:52,990 --> 00:02:00,729
framework like any framework heard of

00:01:55,750 --> 00:02:02,950
components okay so basically in today

00:02:00,729 --> 00:02:04,500
put the edge work everything is on the

00:02:02,950 --> 00:02:07,770
components

00:02:04,500 --> 00:02:11,319
everything is component which can be

00:02:07,770 --> 00:02:16,709
reused encapsulated and can't be

00:02:11,319 --> 00:02:20,470
modernized for your application so every

00:02:16,709 --> 00:02:22,959
Apple every framework react.js angular

00:02:20,470 --> 00:02:26,080
by google or anything they have all

00:02:22,959 --> 00:02:28,630
introduced components but the only

00:02:26,080 --> 00:02:32,319
problem is like technology is evolving

00:02:28,630 --> 00:02:35,950
really fast so if any of you have worked

00:02:32,319 --> 00:02:38,200
on angular 1 and when X which 2 and we

00:02:35,950 --> 00:02:40,630
were to it was the drastic change the

00:02:38,200 --> 00:02:43,690
whole application were broken and there

00:02:40,630 --> 00:02:46,060
was aching from the scratch again so you

00:02:43,690 --> 00:02:50,709
cannot depend on the third-party library

00:02:46,060 --> 00:02:52,540
framework always for that web components

00:02:50,709 --> 00:02:56,170
has been there for since quite a long

00:02:52,540 --> 00:02:58,780
time but since quite furiously support

00:02:56,170 --> 00:03:02,500
on the browser form for web components

00:02:58,780 --> 00:03:04,480
has been drastically moved and now most

00:03:02,500 --> 00:03:07,819
of the latest browser supports the web

00:03:04,480 --> 00:03:10,340
components so why they are huge

00:03:07,819 --> 00:03:12,920
that framework agnostic they don't

00:03:10,340 --> 00:03:15,019
depend on any framework and there are

00:03:12,920 --> 00:03:17,900
the Kenyan vanilla JavaScript you don't

00:03:15,019 --> 00:03:22,819
need any kind of secondary language for

00:03:17,900 --> 00:03:26,329
that so via web components

00:03:22,819 --> 00:03:28,760
it's basically extremal is not romantic

00:03:26,329 --> 00:03:32,329
enough to understand there is no

00:03:28,760 --> 00:03:34,730
standard templating system there is no

00:03:32,329 --> 00:03:39,469
native encapsulation in browser

00:03:34,730 --> 00:03:41,840
basically you can not encapsulate all

00:03:39,469 --> 00:03:44,209
the styles or your markup so that it

00:03:41,840 --> 00:03:48,049
don't get oversights by the global or

00:03:44,209 --> 00:03:51,590
parent CSS there is no way to reuse the

00:03:48,049 --> 00:03:55,129
existing HTML and everything is

00:03:51,590 --> 00:03:57,560
component as we talk so what are the

00:03:55,129 --> 00:04:01,669
goals of web components it's basically

00:03:57,560 --> 00:04:04,400
to the use of a existing code to

00:04:01,669 --> 00:04:07,129
encapsulate the styling and markups it

00:04:04,400 --> 00:04:11,000
provides the separation of concerns it

00:04:07,129 --> 00:04:13,069
provides the better composition and for

00:04:11,000 --> 00:04:15,349
theming purpose it's really best when

00:04:13,069 --> 00:04:17,539
you want to provide this theme to your

00:04:15,349 --> 00:04:19,729
application and it's pretty much

00:04:17,539 --> 00:04:24,460
expressive because you define your

00:04:19,729 --> 00:04:27,080
elements by yourself and it's semantics

00:04:24,460 --> 00:04:29,900
this is the browser support basically if

00:04:27,080 --> 00:04:32,539
you see most of the latest browser

00:04:29,900 --> 00:04:35,090
supports web components except for the

00:04:32,539 --> 00:04:36,830
Internet Explorer which is a skill are

00:04:35,090 --> 00:04:40,370
developing the support for especially

00:04:36,830 --> 00:04:42,440
custom elements and shadow Dom and apart

00:04:40,370 --> 00:04:47,349
from that chrome opera and Safari

00:04:42,440 --> 00:04:50,360
pretty much support web components so

00:04:47,349 --> 00:04:52,970
these are the four parts of a standard

00:04:50,360 --> 00:04:57,310
web components basically templates

00:04:52,970 --> 00:05:00,710
imports I go Dom and custom M elements

00:04:57,310 --> 00:05:04,039
templates are nothing but we will java

00:05:00,710 --> 00:05:07,009
HTML which you can define and we use in

00:05:04,039 --> 00:05:11,030
other application imports it basically

00:05:07,009 --> 00:05:13,699
introduced in es6 if you know they are

00:05:11,030 --> 00:05:15,950
basically to import the HTML file in

00:05:13,699 --> 00:05:18,620
your application it gives you

00:05:15,950 --> 00:05:21,120
flexibility so that you can write or web

00:05:18,620 --> 00:05:24,060
components and dot HTML file and you

00:05:21,120 --> 00:05:26,610
in another HTML shadow Dom it's

00:05:24,060 --> 00:05:33,930
basically to encapsulate two markups all

00:05:26,610 --> 00:05:35,850
CSS and custom elements which basically

00:05:33,930 --> 00:05:43,220
gives you the flexibility to define your

00:05:35,850 --> 00:05:45,780
own elements so let's talk about every

00:05:43,220 --> 00:05:47,669
standard of web components so custom

00:05:45,780 --> 00:05:50,160
elements it basically gives you the

00:05:47,669 --> 00:05:52,380
flexibility to alter your own component

00:05:50,160 --> 00:05:56,580
you can name your own component my cool

00:05:52,380 --> 00:05:59,430
component or whatever you want and you

00:05:56,580 --> 00:06:02,100
can define your component and tell the

00:05:59,430 --> 00:06:06,540
parcel how you want to pass it in your

00:06:02,100 --> 00:06:08,450
application what are the events you want

00:06:06,540 --> 00:06:10,620
to handle on that event what all the

00:06:08,450 --> 00:06:15,120
markups you want to handle on that

00:06:10,620 --> 00:06:17,789
particular element so how elements of

00:06:15,120 --> 00:06:19,860
that particular class will react to some

00:06:17,789 --> 00:06:21,870
changes you can pass the props you can

00:06:19,860 --> 00:06:24,060
pass the exhibits you can define

00:06:21,870 --> 00:06:29,340
properties on that particular elements

00:06:24,060 --> 00:06:34,760
and customer events always define in a

00:06:29,340 --> 00:06:37,830
prefix - name so you will always have a

00:06:34,760 --> 00:06:39,900
hyphen between the custom elements so

00:06:37,830 --> 00:06:45,630
that it doesn't get messed up within

00:06:39,900 --> 00:06:48,900
native HTML elements next one is shadow

00:06:45,630 --> 00:06:52,229
Dom which is basically to encapsulate

00:06:48,900 --> 00:06:55,919
your styling and markups so whenever you

00:06:52,229 --> 00:06:59,550
define a shadow Dom it's basically a

00:06:55,919 --> 00:07:03,570
catcher gone subtree to your dome root

00:06:59,550 --> 00:07:05,669
and that dome subtree is encapsulated

00:07:03,570 --> 00:07:09,450
and the junk I cover they didn't buy

00:07:05,669 --> 00:07:11,430
your global scope CSS all markups it's

00:07:09,450 --> 00:07:14,639
really great for modularity so that you

00:07:11,430 --> 00:07:18,570
can just use that modular components

00:07:14,639 --> 00:07:21,810
anywhere in your application is module

00:07:18,570 --> 00:07:24,990
is nothing but it's for reuse and

00:07:21,810 --> 00:07:28,650
inclusion of the J's documents impact

00:07:24,990 --> 00:07:33,469
it's also you can use it for HTML and

00:07:28,650 --> 00:07:33,469
CSS to import in your other application

00:07:33,800 --> 00:07:37,740
HTML templates

00:07:35,460 --> 00:07:44,130
it's basically defined using template

00:07:37,740 --> 00:07:46,860
tags and it's good because this extremal

00:07:44,130 --> 00:07:51,510
template code reject the judgment by

00:07:46,860 --> 00:07:55,470
itself until you activate this code so

00:07:51,510 --> 00:07:59,160
any kind of image any kind of a script

00:07:55,470 --> 00:08:01,290
written inside that HTML tag won't get

00:07:59,160 --> 00:08:07,590
loaded until you will activate this

00:08:01,290 --> 00:08:09,720
particular code these are the life cycle

00:08:07,590 --> 00:08:12,990
provided with the custom elements it's

00:08:09,720 --> 00:08:16,860
basically a constructor is by default

00:08:12,990 --> 00:08:20,700
with any class you can define connected

00:08:16,860 --> 00:08:23,310
callback is every time you lower

00:08:20,700 --> 00:08:26,640
components get created and it gets

00:08:23,310 --> 00:08:29,550
attached to the Dom tree similarly

00:08:26,640 --> 00:08:31,910
disconnected to clear your memory and

00:08:29,550 --> 00:08:35,300
can usually attach all the events

00:08:31,910 --> 00:08:37,919
attribute change callback it's similarly

00:08:35,300 --> 00:08:40,469
whenever you pass a property or

00:08:37,919 --> 00:08:42,140
attribute to components this particular

00:08:40,469 --> 00:08:45,830
lifecycle method will get called and

00:08:42,140 --> 00:08:50,640
adopted callback is nothing when you

00:08:45,830 --> 00:08:55,920
reuse your custom elements from vendÃ´me

00:08:50,640 --> 00:08:58,080
elements to another dome elements so

00:08:55,920 --> 00:09:00,380
here is the sorts definitions when you

00:08:58,080 --> 00:09:03,210
can use the Constructors basically

00:09:00,380 --> 00:09:06,300
whenever your elemental gets created

00:09:03,210 --> 00:09:08,880
your constructor gets executed and it's

00:09:06,300 --> 00:09:10,920
good for setting up the initial State

00:09:08,880 --> 00:09:14,960
event listeners binding the event

00:09:10,920 --> 00:09:14,960
listeners and creating this atom

00:09:15,500 --> 00:09:23,370
connected callback age venule custom

00:09:19,740 --> 00:09:25,620
elements inserted into the dome and it's

00:09:23,370 --> 00:09:28,140
basically good for fetching data making

00:09:25,620 --> 00:09:32,250
ejects calls and setting the default

00:09:28,140 --> 00:09:34,320
attributes in your application in this

00:09:32,250 --> 00:09:36,360
connected callback similarly to detach

00:09:34,320 --> 00:09:38,040
your event listener or cancel time

00:09:36,360 --> 00:09:41,030
interval for your memory of your

00:09:38,040 --> 00:09:41,030
application

00:09:41,290 --> 00:09:46,690
attribute change callback is called like

00:09:44,570 --> 00:09:49,760
any time element observed like stable

00:09:46,690 --> 00:09:51,860
changes so there's one this static

00:09:49,760 --> 00:09:55,070
method which is provided in the custom

00:09:51,860 --> 00:09:59,150
elements observed attribute where you

00:09:55,070 --> 00:10:02,060
can define your variables or observables

00:09:59,150 --> 00:10:06,650
which is going to change in the future

00:10:02,060 --> 00:10:09,170
and these attributes can file this

00:10:06,650 --> 00:10:11,210
executes change callback a life cycle

00:10:09,170 --> 00:10:13,850
method every time so it has three

00:10:11,210 --> 00:10:15,920
parameters named old value and new value

00:10:13,850 --> 00:10:17,870
name it basically the name of your

00:10:15,920 --> 00:10:20,330
attribute which you have defined all

00:10:17,870 --> 00:10:21,740
values the previous value and name new

00:10:20,330 --> 00:10:28,250
values the change value of that

00:10:21,740 --> 00:10:32,570
particular elements adopt a call back as

00:10:28,250 --> 00:10:35,000
I told you like whenever you change your

00:10:32,570 --> 00:10:37,970
dome or move your dome to a new

00:10:35,000 --> 00:10:40,520
documents it get caught called it's

00:10:37,970 --> 00:10:44,480
basically useful manually using iframe

00:10:40,520 --> 00:10:46,850
in your application and there's one more

00:10:44,480 --> 00:10:49,430
method of a change available which is

00:10:46,850 --> 00:10:52,700
custom elements not defined which is

00:10:49,430 --> 00:10:55,430
used to register other elements into the

00:10:52,700 --> 00:10:58,160
JavaScript and it uses custom elements

00:10:55,430 --> 00:11:00,380
registry and it defined using window dot

00:10:58,160 --> 00:11:02,570
customer you might store define you will

00:11:00,380 --> 00:11:04,790
give the name of to your element and

00:11:02,570 --> 00:11:09,680
provide the class you have created for

00:11:04,790 --> 00:11:11,990
that particular element so this is the

00:11:09,680 --> 00:11:15,920
application we are going to base now so

00:11:11,990 --> 00:11:19,520
before that I'm going to start with one

00:11:15,920 --> 00:11:21,920
basic example which is hello world and

00:11:19,520 --> 00:11:25,750
for that I think everyone is connected

00:11:21,920 --> 00:11:25,750
with the Wi-Fi right

00:11:26,200 --> 00:11:35,620
so one thing everyone can do can

00:11:31,880 --> 00:11:35,620
download HTTP server

00:11:46,870 --> 00:11:56,019
everyone has npm with them like install

00:11:50,360 --> 00:12:00,040
on their computer yeah just install this

00:11:56,019 --> 00:12:03,680
HTTP server which will help us to come

00:12:00,040 --> 00:12:08,800
basically I'll sign our server and we

00:12:03,680 --> 00:12:08,800
will use this to sign our website

00:13:21,339 --> 00:13:24,549
sorry guys

00:13:45,710 --> 00:13:50,830
a place to sit

00:14:35,750 --> 00:14:38,850
[Music]

00:15:29,630 --> 00:15:32,630
we

00:15:35,150 --> 00:15:38,230
Thank You Sunday

00:16:28,910 --> 00:16:36,480
okay so for the new people who had just

00:16:32,130 --> 00:16:39,000
arrived we have just gone through the

00:16:36,480 --> 00:16:41,730
basics of web component six definition

00:16:39,000 --> 00:16:45,180
and what are the parts we are going to

00:16:41,730 --> 00:16:47,370
use to create our web component so we

00:16:45,180 --> 00:16:49,709
are going to start with the demo of

00:16:47,370 --> 00:16:53,070
hello world which is the basic demo and

00:16:49,709 --> 00:16:56,790
we will modify that demo to create a

00:16:53,070 --> 00:16:59,399
to-do app later on so I hope everyone

00:16:56,790 --> 00:17:03,320
has installed the HTTP server which I am

00:16:59,399 --> 00:17:03,320
going to use to learn my server

00:17:22,230 --> 00:17:30,500
I think everyone has installed the HTTP

00:17:25,679 --> 00:17:37,830
servers right let's just start with

00:17:30,500 --> 00:17:43,019
adding one index dot HTML file and we

00:17:37,830 --> 00:17:45,510
will like the body tag in it and if you

00:17:43,019 --> 00:17:47,750
want you can add the tag tag with it

00:17:45,510 --> 00:17:47,750
also

00:17:53,000 --> 00:17:56,000
okay

00:17:58,809 --> 00:18:07,129
with day we are going to include our

00:18:04,360 --> 00:18:10,039
javascript file which we are going to

00:18:07,129 --> 00:18:13,100
create so i'm going to give a script

00:18:10,039 --> 00:18:14,090
tiger source that i'm going to create

00:18:13,100 --> 00:18:16,789
one file

00:18:14,090 --> 00:18:21,710
hello world gorgeous which will be

00:18:16,789 --> 00:18:24,830
included here and this a lowboy file we

00:18:21,710 --> 00:18:28,490
define a web component which it has a

00:18:24,830 --> 00:18:30,700
world which later on i am going to use

00:18:28,490 --> 00:18:30,700
it

00:18:34,679 --> 00:18:37,679
okay

00:18:38,679 --> 00:18:44,990
this is the very basic HTML file in

00:18:42,440 --> 00:18:50,659
which I have a body tag and I am loading

00:18:44,990 --> 00:18:59,950
one script and I'm defining one web

00:18:50,659 --> 00:19:03,289
component let's open a new tab and write

00:18:59,950 --> 00:19:05,629
JavaScript files so we are going to use

00:19:03,289 --> 00:19:10,549
the self invoking function basically we

00:19:05,629 --> 00:19:14,210
don't want to expose our context to our

00:19:10,549 --> 00:19:16,100
outside so I'm going to do the self

00:19:14,210 --> 00:19:20,710
invoking function inside which I am

00:19:16,100 --> 00:19:23,240
going to define a function basically

00:19:20,710 --> 00:19:27,799
this is the self invoking function in

00:19:23,240 --> 00:19:30,789
our hello world dot j us and in with

00:19:27,799 --> 00:19:42,080
this I am going to define a class

00:19:30,789 --> 00:19:44,029
HelloWorld and so every web component

00:19:42,080 --> 00:19:49,730
every custom elements will define it

00:19:44,029 --> 00:19:54,580
extends one class which is HTML elements

00:19:49,730 --> 00:19:54,580
I am going to inherit that class

00:19:59,179 --> 00:20:11,760
okay so let me just save this file so

00:20:03,299 --> 00:20:18,980
that it will I will give it a name index

00:20:11,760 --> 00:20:18,980
dot HTML and I will save this file as

00:20:19,039 --> 00:20:26,899
HelloWorld gorgeous okay

00:20:32,850 --> 00:20:38,620
so first of all we have defined the

00:20:35,890 --> 00:20:41,770
class and we have extended the HTML

00:20:38,620 --> 00:20:45,880
element HTML elements gives us the

00:20:41,770 --> 00:20:48,549
flexibility to attach all the native

00:20:45,880 --> 00:20:53,230
HTML elements properties to our custom

00:20:48,549 --> 00:20:55,750
defined elements so now we are going to

00:20:53,230 --> 00:21:03,760
use the custom elements not defined

00:20:55,750 --> 00:21:05,409
property to define our element so we

00:21:03,760 --> 00:21:11,710
will like and we will give it a name

00:21:05,409 --> 00:21:14,010
hello world and we will type the class

00:21:11,710 --> 00:21:14,010
here

00:21:19,470 --> 00:21:25,090
so this line tells JavaScript okay this

00:21:23,200 --> 00:21:27,820
is the hello Boyle tag which has been

00:21:25,090 --> 00:21:31,060
defined by the user and it can be used

00:21:27,820 --> 00:21:41,920
as a world in my index dot HTML where I

00:21:31,060 --> 00:21:46,870
have loaded this everyone's okay now I'm

00:21:41,920 --> 00:21:48,760
going to define the constructor and I'm

00:21:46,870 --> 00:21:51,750
going to call the super super is

00:21:48,760 --> 00:21:54,700
basically to inherit the props from your

00:21:51,750 --> 00:22:04,470
parent class which is in our case HTML

00:21:54,700 --> 00:22:09,310
element so before that I'm going to need

00:22:04,470 --> 00:22:16,690
my template also so I'm going to define

00:22:09,310 --> 00:22:20,130
a constant template and I'm going to

00:22:16,690 --> 00:22:20,130
create my temperature

00:22:26,890 --> 00:22:29,890
okay

00:22:33,769 --> 00:22:45,950
now I'll say I'll just put the innerhtml

00:22:39,320 --> 00:22:45,950
to some day

00:22:46,130 --> 00:22:52,470
I know

00:22:49,470 --> 00:22:52,470
and

00:22:52,790 --> 00:22:57,620
currently I am just going to protect

00:22:55,049 --> 00:22:57,620
eyes oh boy

00:23:07,820 --> 00:23:10,420
yeah

00:23:13,450 --> 00:23:16,720
and now

00:23:19,150 --> 00:23:28,850
I'm going to attach this shadow with the

00:23:24,470 --> 00:23:34,670
mode open I will explain this mode later

00:23:28,850 --> 00:23:38,170
like why I have used this mode and I

00:23:34,670 --> 00:23:38,170
will tell you I like

00:23:41,200 --> 00:23:43,800
good

00:23:43,820 --> 00:23:47,030
by that

00:24:21,850 --> 00:24:28,720
and I'm going to obtain this as a child

00:24:28,990 --> 00:24:34,420
my can take and order

00:24:39,700 --> 00:24:41,730
Oh

00:24:45,360 --> 00:24:49,070
I turn and God

00:24:58,870 --> 00:25:07,669
okay so what I am doing here I am in

00:25:04,789 --> 00:25:10,730
this current context I am attaching this

00:25:07,669 --> 00:25:13,600
I go DOM and in the shadow root I am

00:25:10,730 --> 00:25:19,820
appending my template content you and

00:25:13,600 --> 00:25:25,630
cloning its content - it's a code so now

00:25:19,820 --> 00:25:25,630
let's try to execute this code

00:25:29,090 --> 00:25:35,860
you can just run your server using a

00:25:31,400 --> 00:25:35,860
10px HTTP - server

00:25:40,540 --> 00:25:44,920
and just copy-paste

00:25:54,600 --> 00:25:58,429
no realistic

00:26:46,429 --> 00:26:49,389
hmm

00:26:51,740 --> 00:26:54,309
nope

00:27:05,890 --> 00:27:08,580
hmm

00:27:20,580 --> 00:27:24,000
another experiment

00:27:29,809 --> 00:27:32,809
okay

00:27:38,560 --> 00:27:51,820
yeah so okay so we have overhead over

00:27:46,090 --> 00:27:58,960
here let's try to modify this hello

00:27:51,820 --> 00:28:02,020
world code and I'm going to put dynamic

00:27:58,960 --> 00:28:05,110
content here with the hello

00:28:02,020 --> 00:28:10,300
so much awesome thing and we will pass

00:28:05,110 --> 00:28:12,780
this name as a property to our web

00:28:10,300 --> 00:28:12,780
component

00:28:16,690 --> 00:28:19,679
so

00:28:22,249 --> 00:28:30,960
so as we said before of what all these

00:28:27,359 --> 00:28:33,389
selectors all the template exciting will

00:28:30,960 --> 00:28:35,419
be here in connected callback so we are

00:28:33,389 --> 00:28:38,869
going to define another cycle method

00:28:35,419 --> 00:28:38,869
connected callback

00:28:42,820 --> 00:28:51,549
and I'm going to say this document is

00:28:49,070 --> 00:28:51,549
equal to

00:28:53,580 --> 00:29:00,400
[Music]

00:28:55,090 --> 00:29:05,040
in this got side door query selector and

00:29:00,400 --> 00:29:05,040
I'm going to select the strong here

00:29:08,870 --> 00:29:11,870
anger

00:29:14,000 --> 00:29:19,530
I'm going to use the attribute change

00:29:16,710 --> 00:29:22,980
callback a lifecycle method also which

00:29:19,530 --> 00:29:25,820
is going to update our another schema

00:29:22,980 --> 00:29:25,820
love this strong

00:29:37,010 --> 00:29:43,800
it's basically takes three parameters

00:29:39,780 --> 00:29:45,830
your name rose oil value and the new

00:29:43,800 --> 00:29:45,830
value

00:29:50,419 --> 00:30:04,049
so I'm just going to do this dot and ice

00:29:59,160 --> 00:30:10,220
cause element and got tax content is go

00:30:04,049 --> 00:30:10,220
to new value

00:30:19,350 --> 00:30:28,410
so when we define a variable properties

00:30:24,820 --> 00:30:30,880
or attribute on a custom elements we

00:30:28,410 --> 00:30:33,130
learned before that we have to define a

00:30:30,880 --> 00:30:35,559
static method which is observed

00:30:33,130 --> 00:30:38,080
attribute inside which we are going to

00:30:35,559 --> 00:30:42,390
define the attribute so we are going to

00:30:38,080 --> 00:30:50,470
define this method here expected get

00:30:42,390 --> 00:30:52,630
observed attribute which basically

00:30:50,470 --> 00:30:55,059
returns the array of all the observed

00:30:52,630 --> 00:31:02,260
value we are going to give this

00:30:55,059 --> 00:31:04,919
attribute or name or name and even you

00:31:02,260 --> 00:31:04,919
can check it

00:31:08,970 --> 00:31:12,800
you can just call it curve

00:31:17,349 --> 00:31:24,009
and we are going to pass this name as a

00:31:21,139 --> 00:31:24,009
property here

00:31:27,010 --> 00:31:31,930
okay

00:31:29,670 --> 00:31:41,420
so

00:31:31,930 --> 00:31:43,250
everyone is following here yeah this

00:31:41,420 --> 00:31:46,010
basically defines in your custom

00:31:43,250 --> 00:31:49,130
elements what are the variables are

00:31:46,010 --> 00:31:51,440
observable in your custom elements so

00:31:49,130 --> 00:31:53,990
which are the observable variables you

00:31:51,440 --> 00:31:57,490
are going to define in this area so any

00:31:53,990 --> 00:32:00,950
other property if you want to pass like

00:31:57,490 --> 00:32:03,560
anything name surname or year date of

00:32:00,950 --> 00:32:06,290
birth you can define it here and

00:32:03,560 --> 00:32:11,350
whenever you will use this attribute and

00:32:06,290 --> 00:32:16,360
you define different kind of name here

00:32:11,350 --> 00:32:19,280
suppose I am going to say so this

00:32:16,360 --> 00:32:26,590
observed value will call this attribute

00:32:19,280 --> 00:32:26,590
change callback method one like Lex

00:32:39,450 --> 00:32:42,620
- hey

00:32:47,220 --> 00:32:49,880
a little

00:32:53,190 --> 00:32:56,149
and you might

00:32:58,019 --> 00:33:01,019
fun

00:33:39,280 --> 00:33:42,280
sweet

00:33:43,510 --> 00:33:46,599
[Music]

00:34:24,169 --> 00:34:30,409
except a little problem over again the

00:34:26,760 --> 00:34:30,409
next morning and look at together

00:34:34,070 --> 00:34:37,720
into Chance Qualifier

00:34:39,990 --> 00:34:43,470
so the tool

00:35:09,079 --> 00:35:12,289
which one

00:35:25,290 --> 00:35:32,480
you know exactly the stick

00:35:33,320 --> 00:35:38,369
[Music]

00:35:34,559 --> 00:35:38,369
thank you lord

00:35:46,630 --> 00:35:49,630
okay

00:35:59,619 --> 00:36:05,460
I think I could define her

00:36:08,560 --> 00:36:16,270
yeah okay

00:36:13,240 --> 00:36:18,010
so there was one problem we need to

00:36:16,270 --> 00:36:20,260
define the element inside the

00:36:18,010 --> 00:36:24,220
constructor where we are using our query

00:36:20,260 --> 00:36:26,740
selector and inside the attribute change

00:36:24,220 --> 00:36:31,120
callback we are defining the text

00:36:26,740 --> 00:36:34,180
content using the new value and if we

00:36:31,120 --> 00:36:37,810
use an act you will see like four

00:36:34,180 --> 00:36:39,640
different instance of our has a void

00:36:37,810 --> 00:36:42,420
component you will have the different

00:36:39,640 --> 00:36:42,420
value with it

00:36:42,660 --> 00:36:48,520
and you will see the source code for

00:36:45,610 --> 00:36:56,020
this you can see the shadows vote in

00:36:48,520 --> 00:36:59,460
your inspect element and you can see it

00:36:56,020 --> 00:37:02,200
opens again after this I do shadowed

00:36:59,460 --> 00:37:05,110
this open basically gives you the

00:37:02,200 --> 00:37:10,170
flexibility to access the strength of

00:37:05,110 --> 00:37:13,630
your custom said all outside the dome so

00:37:10,170 --> 00:37:16,360
after this set if you want to suppress

00:37:13,630 --> 00:37:19,210
your differential hello alga element

00:37:16,360 --> 00:37:20,800
support document dot query selector has

00:37:19,210 --> 00:37:24,430
no void and you want to perform any

00:37:20,800 --> 00:37:26,470
operation with the open method you can

00:37:24,430 --> 00:37:29,110
do that as soon as you will make it

00:37:26,470 --> 00:37:31,240
close you won't be able to access the

00:37:29,110 --> 00:37:35,640
reference to the hello world of Sega

00:37:31,240 --> 00:37:35,640
wrote outside this particular context

00:37:37,480 --> 00:37:40,480
so

00:37:41,090 --> 00:37:46,680
these are this is the dynamic method

00:37:43,800 --> 00:37:59,310
next method we are going to try using

00:37:46,680 --> 00:38:01,320
slots so everyone is following okay so

00:37:59,310 --> 00:38:07,050
next method we are going to try using

00:38:01,320 --> 00:38:09,630
slots slots has nothing but placeholders

00:38:07,050 --> 00:38:12,270
in your template which gives you the

00:38:09,630 --> 00:38:18,000
flexibility to dynamically change the

00:38:12,270 --> 00:38:24,540
content of your template so instead of

00:38:18,000 --> 00:38:31,020
using the strong I am going to use this

00:38:24,540 --> 00:38:34,110
slot and I will give slug like this name

00:38:31,020 --> 00:38:38,580
property with which you can say friends

00:38:34,110 --> 00:38:43,680
this lock in your application so it's

00:38:38,580 --> 00:38:48,170
basically I am going to say okay my

00:38:43,680 --> 00:38:48,170
gamma is the name of this lot

00:38:48,670 --> 00:38:56,140
and I'm going to comment this agony

00:38:56,430 --> 00:39:12,990
so whenever you use flawed you don't

00:39:03,280 --> 00:39:16,570
need to pass this property instead you

00:39:12,990 --> 00:39:20,320
define your native HTML elements and it

00:39:16,570 --> 00:39:22,180
like give and you give it a slot

00:39:20,320 --> 00:39:24,460
property and inside this you will

00:39:22,180 --> 00:39:33,420
reference your slot name which is

00:39:24,460 --> 00:39:33,420
basically my demo and you will pass it

00:39:37,730 --> 00:39:42,110
and I'm going to like something

00:39:43,819 --> 00:39:49,039
finger D I'm going to use it here

00:39:49,069 --> 00:40:00,289
another group and I'm going to die and

00:39:57,960 --> 00:40:00,289
they of course

00:40:14,510 --> 00:40:17,530
next time

00:40:17,790 --> 00:40:20,790
yeah

00:40:29,060 --> 00:40:31,300
yeah

00:40:34,550 --> 00:40:41,030
in jeaious instead of a strong selected

00:40:37,070 --> 00:40:47,240
I have used this lot and I have given it

00:40:41,030 --> 00:40:49,490
a name my demo then I don't need to use

00:40:47,240 --> 00:40:51,880
the query selector or anything in my

00:40:49,490 --> 00:40:51,880
campaign

00:41:09,060 --> 00:41:14,530
so this log will give you the

00:41:12,250 --> 00:41:17,260
flexibility to add the dynamic elements

00:41:14,530 --> 00:41:20,140
in your custom elements suppose you have

00:41:17,260 --> 00:41:22,960
to find some you will attribute and you

00:41:20,140 --> 00:41:25,600
want to have the dynamic as I attribute

00:41:22,960 --> 00:41:34,990
inside it you can define that using

00:41:25,600 --> 00:41:38,280
slots in your application sorry it's

00:41:34,990 --> 00:41:38,280
this it's just closure

00:41:49,950 --> 00:41:56,460
Indian beauty hold on a little there is

00:41:54,150 --> 00:41:58,650
nothing as all the golden age commented

00:41:56,460 --> 00:42:00,859
you just directly put this like that

00:41:58,650 --> 00:42:00,859
check

00:42:20,220 --> 00:42:24,900
the second award is blocked

00:42:25,150 --> 00:42:35,690
which one yeah I'm the friend thing the

00:42:32,510 --> 00:42:39,190
same slog but the contented changing

00:42:35,690 --> 00:42:39,190
between both elements

00:42:42,010 --> 00:42:48,080
this is the same element but the inside

00:42:45,620 --> 00:42:52,090
content is different there is a s

00:42:48,080 --> 00:42:52,090
context the Zestimate

00:42:53,110 --> 00:43:00,580
yeah that same so flock is a placeholder

00:42:57,290 --> 00:43:05,290
in your components elements basically

00:43:00,580 --> 00:43:09,550
which is dynamic it's basically the

00:43:05,290 --> 00:43:14,050
children of your elements which is

00:43:09,550 --> 00:43:14,050
purely dynamic and variable

00:43:23,320 --> 00:43:33,920
so this section which is here I have to

00:43:31,160 --> 00:43:36,470
find this slot I have given it a name to

00:43:33,920 --> 00:43:41,180
the forensic into my HTML to the

00:43:36,470 --> 00:43:43,670
forensic into my any other HTML or

00:43:41,180 --> 00:43:54,220
components where I want to use this lot

00:43:43,670 --> 00:43:54,220
in my template okay second part

00:43:59,380 --> 00:44:02,380
yeah

00:44:07,040 --> 00:44:09,640
okay

00:44:11,210 --> 00:44:19,270
I have only the first of all you have to

00:44:14,359 --> 00:44:19,270
find this door okay let's go

00:44:19,730 --> 00:44:29,750
you find the device works

00:44:23,280 --> 00:44:29,750
hello we're closing the closing of edges

00:44:30,140 --> 00:44:34,700
you can start by return

00:44:40,170 --> 00:44:43,170
toldja

00:45:12,339 --> 00:45:32,529
I hear you're running this boat actually

00:45:28,630 --> 00:45:34,509
the just this is a which you are using

00:45:32,529 --> 00:45:36,099
you have to find this launcher on your

00:45:34,509 --> 00:45:48,059
element you have to defined it into a

00:45:36,099 --> 00:45:48,059
little element this is going to

00:45:52,200 --> 00:45:57,710
but although inspector came

00:46:07,410 --> 00:46:13,470
you had ingested to define this Lord

00:46:11,140 --> 00:46:13,470
here

00:46:14,560 --> 00:46:22,980
so you have to find this log here you

00:46:17,210 --> 00:46:26,019
need to define this load on your element

00:46:22,980 --> 00:46:26,019
[Music]

00:46:28,480 --> 00:46:31,480
yeah

00:46:41,630 --> 00:46:48,890
my demo this is wrong you cannot

00:46:58,320 --> 00:47:04,110
yeah that's why it's not working

00:47:09,880 --> 00:47:15,860
the flood should be on your native HTML

00:47:13,670 --> 00:47:18,470
elements where you are going to define

00:47:15,860 --> 00:47:20,870
all which part you want to make the

00:47:18,470 --> 00:47:26,810
variable and say French in your template

00:47:20,870 --> 00:47:30,050
basically so this Park is going to be

00:47:26,810 --> 00:47:32,090
variable for a placeholder for my custom

00:47:30,050 --> 00:47:38,590
elements so I'm going to define this log

00:47:32,090 --> 00:47:41,720
here and give it the text so if anyone's

00:47:38,590 --> 00:47:44,330
coded not working please make sure that

00:47:41,720 --> 00:47:47,230
you have to find the slots on the native

00:47:44,330 --> 00:47:47,230
HTML element

00:48:16,839 --> 00:48:23,890
everyone is okay okay

00:48:42,530 --> 00:48:48,710
okay so pausing to do demo

00:49:00,400 --> 00:49:06,890
can you please clone this code on your

00:49:04,279 --> 00:49:09,069
local system we are going to use this

00:49:06,890 --> 00:49:12,039
project tree which is basically for our

00:49:09,069 --> 00:49:14,509
to do demo and the next application

00:49:12,039 --> 00:49:17,930
check applications we are going to use

00:49:14,509 --> 00:49:19,670
it it has two folders one is completed

00:49:17,930 --> 00:49:22,730
code which you can use it for reference

00:49:19,670 --> 00:49:25,269
and one is our demo which we are going

00:49:22,730 --> 00:49:25,269
to work on

00:49:52,410 --> 00:49:57,750
I'm going to paste the

00:50:15,340 --> 00:50:17,850
now

00:50:53,440 --> 00:50:56,619
[Music]

00:51:21,100 --> 00:51:27,280
so everyone has cloned the depo

00:51:30,210 --> 00:51:33,210
pleasure

00:51:45,590 --> 00:51:49,280
it should be right

00:52:11,950 --> 00:52:16,420
the season runs

00:52:22,440 --> 00:52:29,440
tiny to check it and this would be

00:52:27,180 --> 00:52:31,080
freaking should be to drink with this

00:52:29,440 --> 00:52:36,570
somehow

00:52:31,080 --> 00:52:36,570
if you not fetch it from

00:52:39,000 --> 00:52:41,690
there's that clean

00:52:46,400 --> 00:52:52,319
normally doesn't do that actually like

00:52:49,079 --> 00:52:55,739
flexibility of web components it just

00:52:52,319 --> 00:52:58,789
only changes the tax itself so that it

00:52:55,739 --> 00:52:58,789
won't give you the flicker

00:53:11,490 --> 00:53:14,600
[Music]

00:53:33,089 --> 00:53:37,200
everyone had cloned this repo

00:53:43,350 --> 00:53:47,130
Wi-Fi password is here

00:53:57,040 --> 00:54:02,750
Wi-Fi Wi-Fi password reject in here

00:54:00,080 --> 00:54:07,700
password DJ's corn fascia Wi-Fi La Jolla

00:54:02,750 --> 00:54:10,240
J scones so and even eject please copy

00:54:07,700 --> 00:54:10,240
and pasted

00:55:15,900 --> 00:55:23,650
okay so in your codebase there would be

00:55:20,380 --> 00:55:27,100
two folders one is the child demo and

00:55:23,650 --> 00:55:29,620
one is the to do embassy we are going to

00:55:27,100 --> 00:55:32,290
cover to do MVC right now later on we

00:55:29,620 --> 00:55:37,110
will check the check demo which is

00:55:32,290 --> 00:55:40,810
basically using the lake element and

00:55:37,110 --> 00:55:42,490
fall for your friends there is completed

00:55:40,810 --> 00:55:44,950
code is also they can in the demo

00:55:42,490 --> 00:55:48,480
complete which you can check out later

00:55:44,950 --> 00:55:48,480
on if you need the difference

00:56:26,570 --> 00:56:35,640
so for to do MVC we have defined three

00:56:32,640 --> 00:56:37,710
components for our application one is

00:56:35,640 --> 00:56:43,290
the parent component which is to go demo

00:56:37,710 --> 00:56:45,570
and then to do list and to-do item to do

00:56:43,290 --> 00:56:48,420
this case the diaper component which is

00:56:45,570 --> 00:56:54,140
going to triangle do all the equal to

00:56:48,420 --> 00:56:54,140
items inside you so

00:56:55,480 --> 00:57:00,710
let's start with the goo-goo demo of a

00:56:58,609 --> 00:57:03,339
change our first component which we are

00:57:00,710 --> 00:57:03,339
going to hide

00:57:03,700 --> 00:57:09,470
similarly like hello world we have to

00:57:07,760 --> 00:57:14,030
find the template see I created a

00:57:09,470 --> 00:57:16,369
template and put one in the HTML here in

00:57:14,030 --> 00:57:19,820
the inner HTML I have defined three

00:57:16,369 --> 00:57:23,990
sections basically head of section and

00:57:19,820 --> 00:57:27,079
footer Peggle is nothing but your input

00:57:23,990 --> 00:57:30,349
box where we are going to type the to do

00:57:27,079 --> 00:57:32,570
demo section is the Lisp which will show

00:57:30,349 --> 00:57:34,849
you the to do list and for tell it show

00:57:32,570 --> 00:57:38,900
you the count of decoders which are

00:57:34,849 --> 00:57:41,270
active right now so this is our template

00:57:38,900 --> 00:57:47,210
which is going to render in our

00:57:41,270 --> 00:57:55,460
application legs we have defined this to

00:57:47,210 --> 00:58:02,180
do demo class and we are going to define

00:57:55,460 --> 00:58:06,099
this element first so let's use bring

00:58:02,180 --> 00:58:06,099
those odd custom elements not defined

00:58:07,240 --> 00:58:16,680
and I will give it a name to go demo and

00:58:13,060 --> 00:58:16,680
I will pass the class here

00:58:24,900 --> 00:58:27,589
okay

00:58:27,710 --> 00:58:38,869
now let's go to our constructor itself

00:58:32,460 --> 00:58:45,770
we need to bind this to method first so

00:58:38,869 --> 00:58:45,770
we are going to bind the method this dot

00:58:46,069 --> 00:58:49,849
new to Dukey up

00:58:56,539 --> 00:59:01,880
and we are going to bind another night

00:58:59,279 --> 00:59:01,880
Rodolfo

00:59:39,380 --> 00:59:48,890
now in our connected callback we are

00:59:43,469 --> 00:59:58,380
going to append the host so before that

00:59:48,890 --> 01:00:00,839
we also need to define the we have also

00:59:58,380 --> 01:00:03,299
defined the disconnected callback which

01:00:00,839 --> 01:00:05,640
is basically just to remove the event

01:00:03,299 --> 01:00:09,959
listeners or the necessary cleanup on

01:00:05,640 --> 01:00:19,920
our code so we are just going to use

01:00:09,959 --> 01:00:25,789
this dot inner HTML and we are going to

01:00:19,920 --> 01:00:25,789
assign it append determined

01:00:35,750 --> 01:00:41,859
Oh God a pencil

01:00:42,880 --> 01:00:49,540
we are just going to open the content of

01:00:46,700 --> 01:00:49,540
the camp liquor

01:01:04,979 --> 01:01:14,229
next we are going to bind some event

01:01:08,409 --> 01:01:16,029
listeners which we are going to use I'm

01:01:14,229 --> 01:01:20,429
going to the friends them from the

01:01:16,029 --> 01:01:20,429
complete demo again but actually

01:01:21,499 --> 01:01:24,499


01:01:29,940 --> 01:01:33,079
[Music]

01:01:35,210 --> 01:01:38,360
[Music]

01:01:38,810 --> 01:01:50,220
so we are going to use key up and to do

01:01:43,260 --> 01:01:52,200
this change event listeners so key up is

01:01:50,220 --> 01:01:54,690
basically nothing when we press the

01:01:52,200 --> 01:01:59,180
Intel to open input box we are going to

01:01:54,690 --> 01:02:02,100
egg the egg back to do into our demo and

01:01:59,180 --> 01:02:07,010
to do this changes nothing but to

01:02:02,100 --> 01:02:07,010
refresh the count in our application

01:02:13,290 --> 01:02:19,980
we are going to remove this is never in

01:02:16,270 --> 01:02:19,980
our disconnected call back

01:02:29,229 --> 01:02:37,009
so I had just copy pasted this

01:02:34,239 --> 01:02:45,380
additional cleanup from the completed

01:02:37,009 --> 01:02:47,569
file so I have added to listeners key

01:02:45,380 --> 01:02:49,430
append to do this change and remove

01:02:47,569 --> 01:02:54,109
deliciousness in our disconnected

01:02:49,430 --> 01:02:58,369
callback to clean up it apart from that

01:02:54,109 --> 01:03:00,950
I am going to need few query selector to

01:02:58,369 --> 01:03:04,700
put the operations to put the event on

01:03:00,950 --> 01:03:06,650
my to do list so these are the query

01:03:04,700 --> 01:03:09,069
selectors which is basically I am going

01:03:06,650 --> 01:03:09,069
to use

01:03:13,650 --> 01:03:22,750
and so our to do next query selector is

01:03:19,690 --> 01:03:25,690
nothing but the placeholder which is

01:03:22,750 --> 01:03:31,480
going to show the list of all the to do

01:03:25,690 --> 01:03:35,530
is in the weather application and you to

01:03:31,480 --> 01:03:38,470
do class I have selected to check the I

01:03:35,530 --> 01:03:46,599
catch the event to our input box in our

01:03:38,470 --> 01:03:49,619
to do demo then another main class which

01:03:46,599 --> 01:03:52,180
is basically nothing but this X in class

01:03:49,619 --> 01:03:55,119
the list of to do is we are going to

01:03:52,180 --> 01:03:59,230
perform some operations there like delay

01:03:55,119 --> 01:04:02,500
to move all the idea and the last word

01:03:59,230 --> 01:04:04,540
not least to do count which is basically

01:04:02,500 --> 01:04:07,920
we are going to show the count of our

01:04:04,540 --> 01:04:07,920
todos in our application

01:04:14,040 --> 01:04:16,700
good

01:04:22,880 --> 01:04:30,890
let's try to learn this code for now and

01:04:27,120 --> 01:04:30,890
see the UI like how it looks

01:05:09,490 --> 01:05:17,020
okay so if we will then this code they

01:05:14,710 --> 01:05:18,850
say however you I will look we have

01:05:17,020 --> 01:05:23,920
worked the CSS and everything all they

01:05:18,850 --> 01:05:26,800
did there in a HTML file kind of

01:05:23,920 --> 01:05:29,640
currently I will do anything I will do

01:05:26,800 --> 01:05:29,640
nothing for me

01:05:36,300 --> 01:05:40,570
so what we have done till now till now

01:05:38,920 --> 01:05:43,810
we have defined that to do their more

01:05:40,570 --> 01:05:46,450
custom elements and inside the element

01:05:43,810 --> 01:05:49,750
we have defined our templates for to do

01:05:46,450 --> 01:05:51,850
demo which is basically the input box

01:05:49,750 --> 01:05:56,470
and the list we are going to solve and

01:05:51,850 --> 01:05:58,870
the focus action inside that template we

01:05:56,470 --> 01:06:03,160
have also introduced one another custom

01:05:58,870 --> 01:06:12,370
elements like to-do list where we are

01:06:03,160 --> 01:06:14,950
going to wrangle all our tools inside

01:06:12,370 --> 01:06:17,020
our connected callback we have used all

01:06:14,950 --> 01:06:18,970
the query selector for to perform the

01:06:17,020 --> 01:06:21,880
different operations and we have

01:06:18,970 --> 01:06:25,480
attached all the events key append to do

01:06:21,880 --> 01:06:29,920
change and then we did the cleanup in

01:06:25,480 --> 01:06:34,590
our disconnected callback and grease

01:06:29,920 --> 01:06:34,590
methods I'm going to explain it later on

01:06:34,740 --> 01:06:42,060
let's go to our to-do list file

01:06:43,390 --> 01:06:49,000
so to-do list inside to-do list if you

01:06:46,960 --> 01:06:54,850
will see we have created the template

01:06:49,000 --> 01:06:58,090
elements and give it a slot so slot is

01:06:54,850 --> 01:07:03,460
nothing but the variable content inside

01:06:58,090 --> 01:07:05,620
your template so here in this section we

01:07:03,460 --> 01:07:08,500
are going to define some content we are

01:07:05,620 --> 01:07:11,260
going to add some content which it will

01:07:08,500 --> 01:07:13,420
be all particular to those contents or

01:07:11,260 --> 01:07:20,830
text which are going to we are going to

01:07:13,420 --> 01:07:24,400
show there so as we saw enable hello

01:07:20,830 --> 01:07:26,920
world example we are going to append

01:07:24,400 --> 01:07:32,740
complex to a beside those would so

01:07:26,920 --> 01:07:36,660
before that we are going to attach this

01:07:32,740 --> 01:07:36,660
I do the de mode open

01:07:51,089 --> 01:07:57,540
and we are going to cloneable template

01:08:08,420 --> 01:08:11,499
[Music]

01:08:39,409 --> 01:08:43,339
okay everyone is following

01:08:51,089 --> 01:08:58,380
sorry before that we also need to define

01:08:55,000 --> 01:08:58,380
our components actually

01:09:34,329 --> 01:09:41,359
in our kinetic callback we are going to

01:09:37,519 --> 01:09:43,759
add one listener to listen for the slot

01:09:41,359 --> 01:09:46,779
change every time the content of this

01:09:43,759 --> 01:09:46,779
Lord to fill change

01:09:58,710 --> 01:10:04,920
and in our disconnected callback will

01:10:01,540 --> 01:10:04,920
similarly remove the listener

01:10:20,880 --> 01:10:28,870
so every time I will slow content will

01:10:25,300 --> 01:10:31,780
change what we will do we will remove

01:10:28,870 --> 01:10:35,949
all these nodes which are unknown to G

01:10:31,780 --> 01:10:41,410
to do this elements so for that we are

01:10:35,949 --> 01:10:45,100
going to use the node type element which

01:10:41,410 --> 01:10:47,560
is nothing but we are going to look

01:10:45,100 --> 01:10:50,560
through all the child nodes and we are

01:10:47,560 --> 01:10:52,690
going to check for the node type if node

01:10:50,560 --> 01:10:56,530
type is one which is basically tells

01:10:52,690 --> 01:10:58,840
it's a native HTML element and we are

01:10:56,530 --> 01:11:01,840
going to check it check tag name if it's

01:10:58,840 --> 01:11:08,380
not a to-do item we are going to remove

01:11:01,840 --> 01:11:12,300
it from our list and then we are going

01:11:08,380 --> 01:11:12,300
to dispatch the event basically

01:11:35,640 --> 01:11:38,749
[Music]

01:11:45,860 --> 01:11:52,040
so I'm going to dispatch this custom

01:11:49,670 --> 01:11:55,310
event to do this change and with that I

01:11:52,040 --> 01:11:57,830
am going to deliver the to-do item

01:11:55,310 --> 01:12:00,470
element counts which are basically that

01:11:57,830 --> 01:12:07,700
all the counts which I have assigned to

01:12:00,470 --> 01:12:10,010
my slot here so this can be accessible

01:12:07,700 --> 01:12:12,430
through assign nodes to that particular

01:12:10,010 --> 01:12:12,430
slot

01:12:17,640 --> 01:12:26,140
and dislike is nothing but the query

01:12:24,490 --> 01:12:30,300
selector of this vlog which we have

01:12:26,140 --> 01:12:30,300
initialized in the world constructor

01:12:40,440 --> 01:12:44,700
let's see what it will change

01:13:14,850 --> 01:13:17,850
cool

01:14:38,670 --> 01:14:44,250
it's a No I have created return object

01:14:44,580 --> 01:14:47,580
okay

01:15:18,239 --> 01:15:21,989
these seeds

01:15:24,429 --> 01:15:28,560
he could release thinkable is designed

01:15:29,250 --> 01:15:33,060
to do is change

01:15:36,699 --> 01:15:41,020
go to itemize my count

01:16:06,310 --> 01:16:17,650
the cutest check it from the store just

01:16:14,140 --> 01:16:17,650
dispersing the scene

01:16:23,540 --> 01:16:26,810
are they

01:16:28,280 --> 01:16:31,989
you want to be here

01:16:36,640 --> 01:16:45,440
okay so this to-do list is going give

01:16:43,190 --> 01:16:48,230
going to give us the functionality to

01:16:45,440 --> 01:16:52,090
listen for that to do change event and

01:16:48,230 --> 01:16:55,970
update the number of tools we have at it

01:16:52,090 --> 01:17:01,760
so now we need to add the list of todos

01:16:55,970 --> 01:17:05,920
which we are going to sew down here for

01:17:01,760 --> 01:17:05,920
that we are going to work on to go item

01:17:09,680 --> 01:17:18,960
so by default whenever you define a

01:17:14,660 --> 01:17:23,450
template and say those would its host

01:17:18,960 --> 01:17:26,910
element has this tiling markup of inline

01:17:23,450 --> 01:17:31,170
so by default it doesn't take the high

01:17:26,910 --> 01:17:36,420
convict so it's better for you to define

01:17:31,170 --> 01:17:38,550
some height and width on your host so

01:17:36,420 --> 01:17:42,300
you can either change the styling of

01:17:38,550 --> 01:17:45,270
your host or put some and if you don't

01:17:42,300 --> 01:17:49,760
need the height and width on your host

01:17:45,270 --> 01:17:52,920
you can just use the existing styling so

01:17:49,760 --> 01:17:56,540
here I'm going to give it some styling

01:17:52,920 --> 01:17:56,540
from my go to item

01:18:09,750 --> 01:18:17,170
so for my goal type make it this little

01:18:14,800 --> 01:18:21,130
block and I did some borders and so on

01:18:17,170 --> 01:18:25,620
sighs you know we we like the all these

01:18:21,130 --> 01:18:25,620
guiding letters on it see this part

01:18:30,020 --> 01:18:35,750
again we are going to similarly define

01:18:32,640 --> 01:18:35,750
the elements first

01:18:48,680 --> 01:18:59,040
and similarly we are going to attach

01:18:56,100 --> 01:19:01,490
this I do and clone the Templar conclude

01:18:59,040 --> 01:19:01,490
this ago

01:19:18,810 --> 01:19:22,740
Dark Lord

01:19:40,170 --> 01:19:49,410
apart from that I have added few methods

01:19:46,440 --> 01:19:52,030
which are basically check box or

01:19:49,410 --> 01:19:57,040
different operation on our to do which

01:19:52,030 --> 01:19:59,350
we are going to see later and similarly

01:19:57,040 --> 01:20:03,250
I have selected few elements from my

01:19:59,350 --> 01:20:05,410
to-do list templates so this is my

01:20:03,250 --> 01:20:08,170
templates project to do you will see

01:20:05,410 --> 01:20:11,530
there is an input box label to assign

01:20:08,170 --> 01:20:13,240
the label for my to-do destroy button

01:20:11,530 --> 01:20:15,820
which is basically to remove the to do

01:20:13,240 --> 01:20:19,650
and there would be an ident button to

01:20:15,820 --> 01:20:19,650
perform the addition on my Kudo

01:20:27,119 --> 01:20:32,840
inside connected callback I have just

01:20:29,579 --> 01:20:35,489
added all these listeners on different

01:20:32,840 --> 01:20:41,130
for the particular to do what I am going

01:20:35,489 --> 01:20:44,489
to do I am going to add the addicted to

01:20:41,130 --> 01:20:48,869
D change the attached remove the to do

01:20:44,489 --> 01:20:51,090
and update the to do so I have added

01:20:48,869 --> 01:20:55,219
different kinds of operations click

01:20:51,090 --> 01:20:58,530
events and double-click and block events

01:20:55,219 --> 01:21:07,610
and in the disconnected callback I just

01:20:58,530 --> 01:21:11,369
remove all the listeners attached and

01:21:07,610 --> 01:21:13,530
electable change callback I am going to

01:21:11,369 --> 01:21:15,659
just check for the switch case which

01:21:13,530 --> 01:21:18,119
will check for if it's a label all

01:21:15,659 --> 01:21:24,530
completed and I'm going to assign the

01:21:18,119 --> 01:21:24,530
value to it so it's nothing but 2

01:21:25,639 --> 01:21:29,179
in this cold

01:21:32,139 --> 01:21:39,080
so what I'm going to do if my attribute

01:21:36,260 --> 01:21:42,440
name is Ray well I'm just going to make

01:21:39,080 --> 01:21:45,170
it text content to the new value and my

01:21:42,440 --> 01:21:48,679
activity is completed I'm going to mark

01:21:45,170 --> 01:21:55,400
its checkbox as a child with this dot

01:21:48,679 --> 01:21:58,010
completed property one thing you can

01:21:55,400 --> 01:22:02,389
also notice we are going to define these

01:21:58,010 --> 01:22:08,300
two properties as our observable also so

01:22:02,389 --> 01:22:11,139
I am going to define these here label

01:22:08,300 --> 01:22:11,139
and computed

01:22:23,019 --> 01:22:25,800
mmm

01:22:38,999 --> 01:22:45,310
pick

01:22:41,320 --> 01:22:45,310
let's try to sign it

01:23:38,679 --> 01:23:44,409
second great recycling it was for the

01:23:42,110 --> 01:23:44,409
ones

01:23:55,590 --> 01:23:58,580
hmm

01:24:06,320 --> 01:24:10,160
the satellite also

01:24:45,370 --> 01:24:48,370
sorry

01:24:57,820 --> 01:25:00,820
okay

01:25:04,800 --> 01:25:13,960
once we define I have put some code in

01:25:10,330 --> 01:25:18,010
hay gate current cycle code inside it

01:25:13,960 --> 01:25:20,410
which is basically used to set or gate

01:25:18,010 --> 01:25:24,820
or observable properties in your custom

01:25:20,410 --> 01:25:28,570
elements so I've used two methods said

01:25:24,820 --> 01:25:31,390
completed and site level and similarly

01:25:28,570 --> 01:25:34,240
guy completed and gate level which is

01:25:31,390 --> 01:25:36,870
basically to say our observable

01:25:34,240 --> 01:25:36,870
attribute

01:25:40,010 --> 01:25:43,010
and

01:25:47,969 --> 01:25:55,150
these are the different methods which we

01:25:50,710 --> 01:25:57,239
are going to use to make our to-do list

01:25:55,150 --> 01:26:00,190
to perform different operations

01:25:57,239 --> 01:26:02,760
basically we are going to blur the text

01:26:00,190 --> 01:26:08,920
as soon as you click on the check box

01:26:02,760 --> 01:26:12,630
and you can click a double click on the

01:26:08,920 --> 01:26:12,630
to-do list to educate

01:26:18,140 --> 01:26:25,430
and there should be removed by time

01:26:36,170 --> 01:26:40,510
so what's a completely

01:27:03,320 --> 01:27:10,230
okay so we are missing some CSS here we

01:27:08,430 --> 01:27:14,930
are going to I am going to copy pasted

01:27:10,230 --> 01:27:14,930
it from the original elements

01:27:51,780 --> 01:27:59,679
yeah so this is all this is our to-do

01:27:55,060 --> 01:28:01,510
list demo using vanilla JavaScript next

01:27:59,679 --> 01:28:04,630
we are going to look into lake element

01:28:01,510 --> 01:28:06,550
which marking is going to explain but

01:28:04,630 --> 01:28:09,119
before that we are going to take a break

01:28:06,550 --> 01:28:09,119
for ten minutes

01:28:13,750 --> 01:28:23,450
for the second part of our vulture

01:28:16,550 --> 01:28:26,720
so yeah we just witness how we can able

01:28:23,450 --> 01:28:28,940
to build web components using just

01:28:26,720 --> 01:28:34,130
vanilla jazz without using any library

01:28:28,940 --> 01:28:36,110
or using any framework but for this

01:28:34,130 --> 01:28:41,510
second part of the workshop we will be

01:28:36,110 --> 01:28:44,570
using lip element so there are already

01:28:41,510 --> 01:28:47,360
libraries and frameworks that helps us

01:28:44,570 --> 01:28:50,810
to build web components so libraries

01:28:47,360 --> 01:28:55,130
such as hybrid polymers Kate Jas little

01:28:50,810 --> 01:28:57,230
element slim Jas this already libraries

01:28:55,130 --> 01:28:59,930
that we can use for us to be able to

01:28:57,230 --> 01:29:04,550
build web components a bit faster and

01:28:59,930 --> 01:29:07,490
easier so for the frameworks we also

01:29:04,550 --> 01:29:13,340
have this custom elements everywhere

01:29:07,490 --> 01:29:16,220
calm we're in it lists all the it shows

01:29:13,340 --> 01:29:19,370
us how compatible the framework is when

01:29:16,220 --> 01:29:24,800
it comes to the web components so we can

01:29:19,370 --> 01:29:28,100
try to take a quick look so for for this

01:29:24,800 --> 01:29:36,820
one we can see that angular has a good

01:29:28,100 --> 01:29:43,190
rating angularjs hyper HTML lip element

01:29:36,820 --> 01:29:45,980
polymer thing crack is somehow a bit low

01:29:43,190 --> 01:29:49,370
when it comes to web component support

01:29:45,980 --> 01:29:53,420
but hopefully in the future they will

01:29:49,370 --> 01:29:58,909
cover most of the features and yet

01:29:53,420 --> 01:30:05,239
circle as blue multi and view so

01:29:58,909 --> 01:30:07,800
yeah also a apart from that I guess

01:30:05,239 --> 01:30:11,369
frameworks like angular and view also

01:30:07,800 --> 01:30:13,679
had their own tools for instance for

01:30:11,369 --> 01:30:18,179
angular they have this angular element

01:30:13,679 --> 01:30:19,889
for view they have this view web web

01:30:18,179 --> 01:30:23,190
component wrapper Internet I'm not

01:30:19,889 --> 01:30:25,710
mistaken and also a stencil also is a

01:30:23,190 --> 01:30:30,570
framework that helped us to build web

01:30:25,710 --> 01:30:35,520
components so yeah we're going to use

01:30:30,570 --> 01:30:38,820
lip but what is lead element so little

01:30:35,520 --> 01:30:40,860
Ahmet is basically just a base class for

01:30:38,820 --> 01:30:43,290
creating fast lightweight web components

01:30:40,860 --> 01:30:46,830
that work in any webpage without any

01:30:43,290 --> 01:30:49,409
framework it is lit HTML properties are

01:30:46,830 --> 01:30:51,810
observed by default elements update as

01:30:49,409 --> 01:30:57,150
synchronously when their property change

01:30:51,810 --> 01:31:00,119
so we can think of somehow lip element

01:30:57,150 --> 01:31:04,460
like an enhancement or an improved

01:31:00,119 --> 01:31:04,460
version of the HTML element

01:31:05,240 --> 01:31:13,020
so lip hTML is the templating library

01:31:10,290 --> 01:31:18,650
that we're going to use later on

01:31:13,020 --> 01:31:23,480
so basically lit HTML allows us to

01:31:18,650 --> 01:31:27,230
define or write our HTML templates using

01:31:23,480 --> 01:31:31,500
just plain JavaScript with the use of

01:31:27,230 --> 01:31:35,600
template literals so if you notice on my

01:31:31,500 --> 01:31:41,130
right side you'll see this is how pre-op

01:31:35,600 --> 01:31:43,440
video right rear Enders or reruns every

01:31:41,130 --> 01:31:46,740
time they have an update while on the

01:31:43,440 --> 01:31:52,280
left side this is how lit HTML does this

01:31:46,740 --> 01:31:56,220
rendering so if if we take a look at the

01:31:52,280 --> 01:32:00,150
h1 element what happens is the whole

01:31:56,220 --> 01:32:04,470
node is actually being rendered while

01:32:00,150 --> 01:32:07,440
Inlet HTML only the dynamic tags which

01:32:04,470 --> 01:32:12,500
are the with those numbers represents

01:32:07,440 --> 01:32:12,500
art the only ones to is changing so

01:32:12,890 --> 01:32:20,940
thank you for code words for the image

01:32:15,960 --> 01:32:24,450
and yeah so basically somehow lip hTML

01:32:20,940 --> 01:32:28,050
is a bit or a slightly faster compared

01:32:24,450 --> 01:32:30,620
to video it's like 30 to 40 percent

01:32:28,050 --> 01:32:35,670
faster depending on your browser and

01:32:30,620 --> 01:32:39,140
then the I think the only slight problem

01:32:35,670 --> 01:32:42,360
that we have for the LM HTML is actually

01:32:39,140 --> 01:32:47,010
during its first render it's somehow a

01:32:42,360 --> 01:32:49,590
bit slow but yeah I think in the future

01:32:47,010 --> 01:32:53,100
they will improve that because actually

01:32:49,590 --> 01:32:56,970
lip HTML it's not using any video

01:32:53,100 --> 01:32:59,730
overhead or it's not using any different

01:32:56,970 --> 01:33:04,380
algorithm it's purely using web

01:32:59,730 --> 01:33:08,030
standards so it's leveraging the web

01:33:04,380 --> 01:33:09,240
standards like it uses the built-in

01:33:08,030 --> 01:33:12,090
parser

01:33:09,240 --> 01:33:13,260
HTML parser of the browser it is a swig

01:33:12,090 --> 01:33:21,420
map

01:33:13,260 --> 01:33:27,180
type template literal so for this slide

01:33:21,420 --> 01:33:29,280
I want you to somehow focus a bit on the

01:33:27,180 --> 01:33:32,940
template binding bindings because this

01:33:29,280 --> 01:33:36,030
is what we're going to use mostly later

01:33:32,940 --> 01:33:38,940
on when we're building our chat

01:33:36,030 --> 01:33:42,870
component so - do you attribute binding

01:33:38,940 --> 01:33:47,280
we just simply do let's say class

01:33:42,870 --> 01:33:49,440
attribute then the data CSS class

01:33:47,280 --> 01:33:52,890
nothing that's special but when it comes

01:33:49,440 --> 01:33:56,730
to boolean attribute we need to use

01:33:52,890 --> 01:34:00,780
question mark for property binding we

01:33:56,730 --> 01:34:07,020
need to use the period and for event

01:34:00,780 --> 01:34:12,020
binding we need to use the add sign so

01:34:07,020 --> 01:34:16,590
as I mentioned earlier let element is

01:34:12,020 --> 01:34:18,750
like an extension of HTML element so all

01:34:16,590 --> 01:34:22,650
the life cycle that was mentioned by

01:34:18,750 --> 01:34:25,560
Suman earlier can still be used when

01:34:22,650 --> 01:34:29,810
building lead element but apart from

01:34:25,560 --> 01:34:33,450
that little element added some couple of

01:34:29,810 --> 01:34:36,600
life cycle but I won't be able to

01:34:33,450 --> 01:34:39,150
discuss discuss each one by one because

01:34:36,600 --> 01:34:42,900
we won't be able to tackle everything

01:34:39,150 --> 01:34:45,900
for this workshop as we don't have that

01:34:42,900 --> 01:34:52,020
much of a time but just too quick to

01:34:45,900 --> 01:34:55,140
give you a quick overview the lead

01:34:52,020 --> 01:35:00,000
element update cycle starts when we set

01:34:55,140 --> 01:35:03,090
a property so then afterwards lead

01:35:00,000 --> 01:35:06,030
element will request an update if there

01:35:03,090 --> 01:35:08,580
is a change in the property so by

01:35:06,030 --> 01:35:13,850
default it tracks whether the old value

01:35:08,580 --> 01:35:16,680
is equal or not equal to the new value

01:35:13,850 --> 01:35:19,290
so after that it will do the D perform

01:35:16,680 --> 01:35:22,110
date then she'll update this should

01:35:19,290 --> 01:35:24,660
update is somehow similar to I guess the

01:35:22,110 --> 01:35:26,099
react lifecycle component should update

01:35:24,660 --> 01:35:28,289
we're in

01:35:26,099 --> 01:35:32,070
by default this one returns true but if

01:35:28,289 --> 01:35:34,380
you want to somehow prevent the

01:35:32,070 --> 01:35:38,849
component from rendering you can return

01:35:34,380 --> 01:35:40,139
false on this part for the update no

01:35:38,849 --> 01:35:46,309
need to override no need to implement

01:35:40,139 --> 01:35:48,960
it's just we just lit element has this

01:35:46,309 --> 01:35:51,840
life cycle after in between should

01:35:48,960 --> 01:35:55,769
update and render were in in this update

01:35:51,840 --> 01:35:58,469
the reflection or properties to

01:35:55,769 --> 01:36:02,519
attributes is happening and then we have

01:35:58,469 --> 01:36:05,639
this render this one we will use this

01:36:02,519 --> 01:36:09,150
one most of the time this is where we

01:36:05,639 --> 01:36:15,389
define our HTML template the first

01:36:09,150 --> 01:36:18,090
updated it's like this one is once the

01:36:15,389 --> 01:36:21,420
template has been created it will call

01:36:18,090 --> 01:36:24,960
it will be called but this one only

01:36:21,420 --> 01:36:27,559
happened one so any one time work that

01:36:24,960 --> 01:36:31,880
you need can be implemented here and

01:36:27,559 --> 01:36:38,130
then the updated this is this happens

01:36:31,880 --> 01:36:41,519
once the the updated or the element has

01:36:38,130 --> 01:36:43,380
been rendered and finally the apt a

01:36:41,519 --> 01:36:46,260
complete actually this update complete

01:36:43,380 --> 01:36:51,539
is not a method it's more on a property

01:36:46,260 --> 01:36:54,210
that resolves in to a promise but this

01:36:51,539 --> 01:37:01,710
one we also won't be covering for this

01:36:54,210 --> 01:37:04,320
workshop so in let element we have we we

01:37:01,710 --> 01:37:09,179
declare properties somehow like this we

01:37:04,320 --> 01:37:11,309
need to to type in static properties

01:37:09,179 --> 01:37:13,440
then return at just an object with the

01:37:11,309 --> 01:37:15,750
property name then the property options

01:37:13,440 --> 01:37:19,199
so for the property of shots mostly will

01:37:15,750 --> 01:37:21,599
will be using the type reflect and no

01:37:19,199 --> 01:37:25,860
access are so for the type these are the

01:37:21,599 --> 01:37:30,159
types the or D the default types that we

01:37:25,860 --> 01:37:34,290
have for lead element is

01:37:30,159 --> 01:37:40,150
string object are a boolean and number

01:37:34,290 --> 01:37:41,980
so for the attribute this is we're not

01:37:40,150 --> 01:37:48,610
also going to tackle that but if you see

01:37:41,980 --> 01:37:51,130
if by default if we do reflect if we

01:37:48,610 --> 01:37:54,730
mentioned that reflux is true then if we

01:37:51,130 --> 01:37:59,050
change the property to value to

01:37:54,730 --> 01:38:01,659
something it will get reflected to an

01:37:59,050 --> 01:38:04,420
attribute also called as property T so

01:38:01,659 --> 01:38:09,670
if we specify an attribute is like just

01:38:04,420 --> 01:38:12,610
whenever prop one has changed the value

01:38:09,670 --> 01:38:17,800
will be set to D or will be reflected to

01:38:12,610 --> 01:38:20,679
the mine - attribute attr so I guess

01:38:17,800 --> 01:38:26,770
that's this are the property options

01:38:20,679 --> 01:38:29,920
that available for little hello so what

01:38:26,770 --> 01:38:32,730
we're going to do for today is we're

01:38:29,920 --> 01:38:37,810
going to build just a simple chat

01:38:32,730 --> 01:38:39,969
component so it has four components so

01:38:37,810 --> 01:38:42,790
the first one is the demo this is the

01:38:39,969 --> 01:38:46,750
main component or the entry point

01:38:42,790 --> 01:38:50,020
component so this in this one we will

01:38:46,750 --> 01:38:52,989
just need to identify whether we should

01:38:50,020 --> 01:38:56,590
show chat lobby where you can see once

01:38:52,989 --> 01:38:59,080
were so at first we will display the

01:38:56,590 --> 01:39:02,380
chat lobby then afterwards once we enter

01:38:59,080 --> 01:39:09,130
the user name we now see the chat room

01:39:02,380 --> 01:39:12,369
with the chat messages so I think we can

01:39:09,130 --> 01:39:16,400
now start

01:39:12,369 --> 01:39:20,539
so I hope that a while ago that you have

01:39:16,400 --> 01:39:23,869
already downloaded the repos that was

01:39:20,539 --> 01:39:26,239
mentioned by assume it so if you can go

01:39:23,869 --> 01:39:29,300
to the inside

01:39:26,239 --> 01:39:31,510
demo chat folder you'll find the client

01:39:29,300 --> 01:39:31,510
folder

01:39:37,510 --> 01:39:40,510
so

01:39:41,420 --> 01:39:55,440
so for for this one we have we have five

01:39:48,720 --> 01:39:58,200
folders one is angular yeah one is for

01:39:55,440 --> 01:40:01,640
angular one is for react one is for view

01:39:58,200 --> 01:40:04,860
server and lion so for the integration

01:40:01,640 --> 01:40:08,700
it will be covered by submit afterwards

01:40:04,860 --> 01:40:11,520
so basically in these folders this

01:40:08,700 --> 01:40:14,790
angular react and view folder we will

01:40:11,520 --> 01:40:17,280
see how we we can integrate ditch a

01:40:14,790 --> 01:40:21,989
component that we built into these

01:40:17,280 --> 01:40:24,600
frameworks so for now the client

01:40:21,989 --> 01:40:28,980
component that we are going to build is

01:40:24,600 --> 01:40:32,960
located in the client folder I also have

01:40:28,980 --> 01:40:38,520
server folder it's just a plain

01:40:32,960 --> 01:40:41,730
WebSocket server if you want to try or

01:40:38,520 --> 01:40:45,650
run but it's this server is actually not

01:40:41,730 --> 01:40:49,890
necessary if you you can skip it for now

01:40:45,650 --> 01:40:54,720
we but we will be able just we will see

01:40:49,890 --> 01:40:59,880
just a single error when we're building

01:40:54,720 --> 01:41:02,100
it's like WS our WebSocket connectivity

01:40:59,880 --> 01:41:05,370
error or something like that but it's

01:41:02,100 --> 01:41:08,880
okay because it will not crash our

01:41:05,370 --> 01:41:11,330
application so running server is like an

01:41:08,880 --> 01:41:17,340
optional thing

01:41:11,330 --> 01:41:20,760
so before we begin first as we look into

01:41:17,340 --> 01:41:25,500
the package that today's I'm so what I

01:41:20,760 --> 01:41:28,110
have here is just I'm using of course

01:41:25,500 --> 01:41:32,100
the little man and I'm also using the

01:41:28,110 --> 01:41:35,760
old WC dev server but you can also use

01:41:32,100 --> 01:41:40,380
polymer CLI if you want to run a server

01:41:35,760 --> 01:41:43,800
or any server but for this workshop I

01:41:40,380 --> 01:41:49,820
prefer to use Adobe's see if that server

01:41:43,800 --> 01:41:52,800
and we just have roll up for bundling

01:41:49,820 --> 01:41:55,160
maybe afterwards afterwards we will be

01:41:52,800 --> 01:41:59,250
we will use this paneling just to

01:41:55,160 --> 01:42:05,850
somehow integrate the chat component

01:41:59,250 --> 01:42:10,890
into react or view and yeah I only have

01:42:05,850 --> 01:42:14,370
start and build script so first what we

01:42:10,890 --> 01:42:17,000
need to do is I guess is we need to npm

01:42:14,370 --> 01:42:17,000
install

01:42:35,219 --> 01:42:37,850
yeah

01:42:38,570 --> 01:42:45,889
so now let's create a source folder

01:42:47,090 --> 01:42:58,070
it's our seed and in here we'll create

01:42:52,070 --> 01:43:01,570
the first grade the chat message by the

01:42:58,070 --> 01:43:04,100
way for for this one we'll just use

01:43:01,570 --> 01:43:08,540
thank JavaScript but you can also use

01:43:04,100 --> 01:43:12,790
typescript if you want but yeah for this

01:43:08,540 --> 01:43:12,790
workshop that's just really JavaScript

01:43:13,530 --> 01:43:26,610
so first thing to do is to import the

01:43:19,380 --> 01:43:29,610
lit element and the HTML and the CSS

01:43:26,610 --> 01:43:29,610
helpers

01:43:35,820 --> 01:43:46,630
so yeah now let's start creating our

01:43:42,340 --> 01:43:53,410
glass so let's name this one as a chat

01:43:46,630 --> 01:44:00,160
message which extends instead of HTML we

01:43:53,410 --> 01:44:03,880
use lead element so somehow this is look

01:44:00,160 --> 01:44:05,920
familiar because somehow this is similar

01:44:03,880 --> 01:44:08,860
to what we did earlier when we're

01:44:05,920 --> 01:44:16,000
building what components using vanilla

01:44:08,860 --> 01:44:24,480
dress also we need to define let's call

01:44:16,000 --> 01:44:24,480
it chat - message and each child message

01:44:28,870 --> 01:44:38,780
so for lip element that they basic or

01:44:35,860 --> 01:44:42,230
requirements that we need is first this

01:44:38,780 --> 01:44:46,630
we need to define our template second is

01:44:42,230 --> 01:44:46,630
also we need to provide our Styles and

01:44:46,720 --> 01:44:57,010
yeah we need to render it so let's start

01:44:50,990 --> 01:45:01,780
first by creating a render function so

01:44:57,010 --> 01:45:06,970
we need to read this is where we will

01:45:01,780 --> 01:45:06,970
write our HTML template

01:45:12,909 --> 01:45:22,650
so just to check that this is somehow

01:45:18,179 --> 01:45:30,850
working we can just write chat message

01:45:22,650 --> 01:45:36,370
and then go into the index.html then for

01:45:30,850 --> 01:45:43,719
this one we'll use es6 module so the

01:45:36,370 --> 01:45:48,929
type should be module ten source let's

01:45:43,719 --> 01:45:48,929
point it to the chat message

01:46:00,480 --> 01:46:08,540
and now we use be chat message

01:46:09,680 --> 01:46:16,160
so to run this one you should just

01:46:12,850 --> 01:46:18,460
should be able to run it this NPM start

01:46:16,160 --> 01:46:18,460
and

01:46:19,230 --> 01:46:24,200
yeah should be good to go

01:46:25,879 --> 01:46:35,090
yeah so yeah we were able to create our

01:46:31,820 --> 01:46:37,729
first component but of course this is

01:46:35,090 --> 01:46:42,199
not final yet but we can somehow see

01:46:37,729 --> 01:46:52,459
that we already have our chat message

01:46:42,199 --> 01:46:58,479
working so what to do next the next

01:46:52,459 --> 01:47:01,479
thing to do is we should define our own

01:46:58,479 --> 01:47:01,479
styles

01:47:05,090 --> 01:47:15,500
and just simply so for this one you need

01:47:12,080 --> 01:47:20,540
to use the CSS helper it's similar on

01:47:15,500 --> 01:47:24,380
what we did for the render and then we

01:47:20,540 --> 01:47:29,350
put in our style so for now let's just

01:47:24,380 --> 01:47:33,010
see whether we can add background and

01:47:29,350 --> 01:47:36,010
let's just say that this one display

01:47:33,010 --> 01:47:36,010
that

01:47:40,609 --> 01:47:52,189
yeah so we were able to apply our style

01:47:45,729 --> 01:47:57,199
so as actually we can add our Styles

01:47:52,189 --> 01:48:00,699
here as well we can add this style or

01:47:57,199 --> 01:48:06,619
external style sheet we can add it here

01:48:00,699 --> 01:48:09,919
however as per lead element it is highly

01:48:06,619 --> 01:48:13,820
recommended to use the static get Styles

01:48:09,919 --> 01:48:18,619
instead because somehow what lead

01:48:13,820 --> 01:48:22,609
element does is it tries to use the

01:48:18,619 --> 01:48:25,760
constructible style sheets objects so if

01:48:22,609 --> 01:48:31,280
the browser supports the constructible

01:48:25,760 --> 01:48:34,419
size its object somehow what's that the

01:48:31,280 --> 01:48:39,619
constructible style sheet object does is

01:48:34,419 --> 01:48:42,139
it allows us to parse and reuse these

01:48:39,619 --> 01:48:46,999
style sheets only once so for maximum

01:48:42,139 --> 01:48:50,149
efficiency they're using constructible

01:48:46,999 --> 01:48:53,109
style sheets as well if only if the VARs

01:48:50,149 --> 01:48:53,109
are supported so

01:48:55,929 --> 01:49:02,770
I think one more thing that we need to

01:49:00,550 --> 01:49:08,440
do of course later on we're going to

01:49:02,770 --> 01:49:14,820
change the styles and the template so we

01:49:08,440 --> 01:49:14,820
can also define the properties

01:49:16,520 --> 01:49:24,570
so for this we need to return an object

01:49:19,820 --> 01:49:26,760
then let's say I think for the hello

01:49:24,570 --> 01:49:30,500
world sample if I'm not mistaken we is

01:49:26,760 --> 01:49:33,800
named as the D property so we can also

01:49:30,500 --> 01:49:33,800
do it that

01:49:34,840 --> 01:49:41,050
then for the type it's just string

01:49:46,550 --> 01:49:55,260
then with a lead element to reflect

01:49:52,100 --> 01:49:59,910
whenever the property changes us we tell

01:49:55,260 --> 01:50:08,630
little element to reflect the value to

01:49:59,910 --> 01:50:08,630
the attribute so this seed that happens

01:50:16,410 --> 01:50:22,570
let's use

01:50:19,210 --> 01:50:27,790
the property that we define under

01:50:22,570 --> 01:50:27,790
properties inside D render

01:50:35,340 --> 01:50:43,390
by the way if we need to somehow

01:50:39,750 --> 01:50:51,250
initialize or have a default value for

01:50:43,390 --> 01:50:53,800
our for our properties we should do it

01:50:51,250 --> 01:50:57,570
in the constructor so let's say the

01:50:53,800 --> 01:51:00,570
default value for name is equals to

01:50:57,570 --> 01:51:00,570
hello

01:51:02,290 --> 01:51:14,700
so yeah we see sorry it's not that clear

01:51:10,510 --> 01:51:14,700
maybe we can change the color to white

01:51:16,929 --> 01:51:24,310
yeah so now we have the name property

01:51:21,690 --> 01:51:28,570
the name property developed value is

01:51:24,310 --> 01:51:32,320
hello so there's two things that we can

01:51:28,570 --> 01:51:34,570
check here is first is since we

01:51:32,320 --> 01:51:37,960
mentioned that whenever our property

01:51:34,570 --> 01:51:42,000
changes us it should reflect to this

01:51:37,960 --> 01:51:42,000
attribute so

01:51:44,989 --> 01:51:59,360
yeah we can try that here let's say we

01:51:49,130 --> 01:52:03,170
change the name to well we see that this

01:51:59,360 --> 01:52:07,270
changes as well as the attribute here

01:52:03,170 --> 01:52:11,630
the attribute name here but what if we

01:52:07,270 --> 01:52:19,120
change this or we remove this one what

01:52:11,630 --> 01:52:24,730
will happen so what will happen is

01:52:19,120 --> 01:52:24,730
whenever we change the name property

01:52:29,260 --> 01:52:37,720
yeah it will not just reflect so if we

01:52:34,480 --> 01:52:44,370
want for a property to get reflected to

01:52:37,720 --> 01:52:51,640
the HTML element we just say reflect to

01:52:44,370 --> 01:52:53,830
so I guess that's the I mean basic to

01:52:51,640 --> 01:52:58,330
get us started for building this shat

01:52:53,830 --> 01:53:02,670
message so starting now

01:52:58,330 --> 01:53:10,170
I might need a bit of a copy/paste skill

01:53:02,670 --> 01:53:10,170
so let's go on to

01:53:12,429 --> 01:53:23,040
the chat message so for this one I'll be

01:53:15,880 --> 01:53:23,040
copying this one first

01:53:32,250 --> 01:53:38,910
and then for the properties we're going

01:53:35,040 --> 01:53:46,650
to have two properties one is from and

01:53:38,910 --> 01:53:50,130
the other one is outgoing so what this

01:53:46,650 --> 01:53:55,010
is is from Isla it's more on the name of

01:53:50,130 --> 01:53:58,080
the server so that we will be able to

01:53:55,010 --> 01:54:00,240
see in the chat message where the

01:53:58,080 --> 01:54:04,470
message came from who who's the sender

01:54:00,240 --> 01:54:07,080
of the message and outgoing is just a

01:54:04,470 --> 01:54:14,270
flag for us to identify whether it

01:54:07,080 --> 01:54:14,270
should be a line ripe or aligned left

01:54:18,510 --> 01:54:26,550
so I also need to copy all the styles

01:54:27,980 --> 01:54:30,550
yeah

01:54:38,079 --> 01:54:44,500
yeah

01:54:40,560 --> 01:54:49,540
so I think we now have or we have now

01:54:44,500 --> 01:54:54,820
completed the chat message but for just

01:54:49,540 --> 01:54:58,180
to have a quick idea of what is

01:54:54,820 --> 01:55:04,510
happening on this render portion so

01:54:58,180 --> 01:55:08,860
first is when I'm ready the dis or the

01:55:04,510 --> 01:55:16,390
from property changeless we will get the

01:55:08,860 --> 01:55:21,490
value and if be from as null or

01:55:16,390 --> 01:55:24,820
undefined or it's not set so by default

01:55:21,490 --> 01:55:28,180
we will have the anonymous as a value

01:55:24,820 --> 01:55:34,890
then the initial is just like the first

01:55:28,180 --> 01:55:34,890
we will get the first letter of the name

01:55:39,139 --> 01:55:46,790
then for the HTML template first is just

01:55:42,800 --> 01:55:51,020
the badge wherein we just pass in or

01:55:46,790 --> 01:55:56,350
bind the initial also we did the same

01:55:51,020 --> 01:56:03,230
for the name and we're also using slots

01:55:56,350 --> 01:56:06,850
because for slots we want the content or

01:56:03,230 --> 01:56:11,870
the yeah the content of the template of

01:56:06,850 --> 01:56:18,139
our HTML tag to be projected on this

01:56:11,870 --> 01:56:26,889
person so if we now try to modify this

01:56:18,139 --> 01:56:31,159
shut message and we add let's say Martin

01:56:26,889 --> 01:56:34,150
then say hello

01:56:31,159 --> 01:56:34,150
they ask on

01:56:44,139 --> 01:56:56,790
yeah so now we have this element so we

01:56:51,969 --> 01:56:56,790
can also see how it looks when

01:56:58,429 --> 01:57:05,290
it is an outgoing oops sorry

01:57:05,610 --> 01:57:14,129
so basically if it's outgoing the

01:57:10,959 --> 01:57:19,749
direction will be on the right side

01:57:14,129 --> 01:57:23,820
portion but if it's not you should see

01:57:19,749 --> 01:57:28,619
it on the left side so if we since we do

01:57:23,820 --> 01:57:28,619
reflect so we should see outgoing here

01:57:36,400 --> 01:57:43,760
so I guess since now we have the chat

01:57:40,250 --> 01:57:49,070
message we can now proceed on creating

01:57:43,760 --> 01:57:56,930
our chat room so we first create a file

01:57:49,070 --> 01:58:00,260
new file so since we already done the

01:57:56,930 --> 01:58:06,830
basic stuff so as much as possible I

01:58:00,260 --> 01:58:12,040
want you to create this chat room maybe

01:58:06,830 --> 01:58:14,780
just the skeleton or in you add the

01:58:12,040 --> 01:58:17,600
re-import delete element then you write

01:58:14,780 --> 01:58:21,860
in the class with a chatroom message

01:58:17,600 --> 01:58:24,710
that extends that element then add the

01:58:21,860 --> 01:58:26,930
static add properties static add styles

01:58:24,710 --> 01:58:34,240
and the render also don't forget to

01:58:26,930 --> 01:58:34,240
define your element TV chat - true

01:59:20,080 --> 01:59:30,240
so yeah so I hope that you able to come

01:59:24,940 --> 01:59:30,240
up with this structure

01:59:37,610 --> 01:59:44,249
so first what I'm going to do is first

01:59:41,190 --> 01:59:48,590
as we need to have new properties

01:59:44,249 --> 01:59:48,590
username and the message list

01:59:49,730 --> 01:59:53,200
so we can type in

02:00:06,030 --> 02:00:11,550
string and message list which is an

02:00:09,130 --> 02:00:11,550
array

02:00:22,679 --> 02:00:27,840
so for this one I'll just copy the

02:00:25,270 --> 02:00:27,840
styles

02:00:33,790 --> 02:00:36,970
[Music]

02:00:45,300 --> 02:00:51,210
and I'll just quickly copy

02:00:53,210 --> 02:00:56,210
yonder

02:01:13,080 --> 02:01:25,260
so if one thing that we use in these

02:01:21,480 --> 02:01:27,840
styles is if you're familiar with a CSS

02:01:25,260 --> 02:01:30,870
variables D native CSS variables or the

02:01:27,840 --> 02:01:34,380
psy.d custom CSS properties we're

02:01:30,870 --> 02:01:39,860
currently using that here because later

02:01:34,380 --> 02:01:43,500
on when we try to integrate this one in

02:01:39,860 --> 02:01:45,930
react or in view we will be able to

02:01:43,500 --> 02:01:48,830
somehow change the look and feel of our

02:01:45,930 --> 02:01:48,830
chat component

02:01:51,610 --> 02:02:05,060
so for for this one it's I think it will

02:01:59,390 --> 02:02:08,510
be somehow I know I think every I assume

02:02:05,060 --> 02:02:10,640
that everyone have this H I mean that is

02:02:08,510 --> 02:02:14,270
familiar with type template letters or

02:02:10,640 --> 02:02:17,750
template literals so for this one we can

02:02:14,270 --> 02:02:21,830
do the look here but we need to return

02:02:17,750 --> 02:02:25,520
the HTML element if not we won't be able

02:02:21,830 --> 02:02:29,150
to see this one rendered if we're not

02:02:25,520 --> 02:02:37,580
using the HTML element for displaying

02:02:29,150 --> 02:02:44,750
the element so if one thing that we need

02:02:37,580 --> 02:02:51,980
to DC is this one so this we use the

02:02:44,750 --> 02:02:55,580
boolean attribute binding so if in case

02:02:51,980 --> 02:02:57,320
you're wondering why we need to use the

02:02:55,580 --> 02:03:05,180
boolean attribute binding for this one

02:02:57,320 --> 02:03:09,260
if we change this one to this we might

02:03:05,180 --> 02:03:15,640
get some error earlier big in the future

02:03:09,260 --> 02:03:15,640
because what will happen by default

02:03:16,840 --> 02:03:25,929
is if this message outgoing is not false

02:03:21,909 --> 02:03:32,949
or undefined the outgoing value will be

02:03:25,929 --> 02:03:37,179
undefined string since which is not what

02:03:32,949 --> 02:03:41,679
we supposed to do that's why we're using

02:03:37,179 --> 02:03:45,420
the boolean because if we use the

02:03:41,679 --> 02:03:48,639
boolean what happens is the value that

02:03:45,420 --> 02:03:52,389
this outgoing property will receive is

02:03:48,639 --> 02:03:58,530
just bully it's pure just through or

02:03:52,389 --> 02:03:58,530
false now not string boolean

02:04:07,780 --> 02:04:16,450
so I'll also be copying the rest of the

02:04:13,430 --> 02:04:16,450
code yes

02:04:49,870 --> 02:04:58,530
so

02:04:52,760 --> 02:05:01,250
what what we're doing here is first we

02:04:58,530 --> 02:05:07,860
define our own custom setter and getter

02:05:01,250 --> 02:05:11,880
if if you still remember earlier in the

02:05:07,860 --> 02:05:16,110
slide I'm I have mentioned the no access

02:05:11,880 --> 02:05:21,870
er so by default lit element provides

02:05:16,110 --> 02:05:24,210
the provides us the access or so they do

02:05:21,870 --> 02:05:30,710
implement the setter and getter by

02:05:24,210 --> 02:05:34,620
default but for this case we did our own

02:05:30,710 --> 02:05:37,770
accessors so we added our own setter and

02:05:34,620 --> 02:05:41,030
getter so for this one we actually don't

02:05:37,770 --> 02:05:44,820
need these requests update because the

02:05:41,030 --> 02:05:48,630
user n-- word we're not using the user

02:05:44,820 --> 02:05:53,550
name for the rendering so we don't want

02:05:48,630 --> 02:05:57,660
the lead element to re-render whenever

02:05:53,550 --> 02:06:00,360
the user name property change so one of

02:05:57,660 --> 02:06:06,390
the things that we need to take notice

02:06:00,360 --> 02:06:08,910
if we add our own custom access or we

02:06:06,390 --> 02:06:15,440
need to trigger the request update

02:06:08,910 --> 02:06:18,540
manually and pass in the name like what

02:06:15,440 --> 02:06:20,610
we're doing here earlier you need to

02:06:18,540 --> 02:06:27,239
pass an name for this case username and

02:06:20,610 --> 02:06:30,180
the old value for D lip HTML to do its

02:06:27,239 --> 02:06:34,680
rendering again we need to trigger this

02:06:30,180 --> 02:06:37,739
Wed manually when writing our own custom

02:06:34,680 --> 02:06:39,989
accessories but for this case as I

02:06:37,739 --> 02:06:44,190
mentioned we don't need this as we don't

02:06:39,989 --> 02:06:48,300
need lead element to re-render whenever

02:06:44,190 --> 02:06:51,360
the user name changes what this does is

02:06:48,300 --> 02:06:55,230
just whenever we provide him the user

02:06:51,360 --> 02:06:56,470
name it will try to connect us WebSocket

02:06:55,230 --> 02:07:01,680
server

02:06:56,470 --> 02:07:03,910
and for the one of the lifecycle hooks

02:07:01,680 --> 02:07:09,160
that was mentioned earlier is the first

02:07:03,910 --> 02:07:13,170
updated so in here we can have our

02:07:09,160 --> 02:07:18,850
reference to the input in this case and

02:07:13,170 --> 02:07:21,580
also you can also put your let's say if

02:07:18,850 --> 02:07:24,760
you're going to do focus on the input

02:07:21,580 --> 02:07:27,660
after the element has been created for

02:07:24,760 --> 02:07:31,440
the first time you can do that on this

02:07:27,660 --> 02:07:31,440
cycle life cycle

02:07:31,600 --> 02:07:43,220
so I think that's it for the chat room

02:07:39,160 --> 02:07:50,740
so if we go on to the index that HTML

02:07:43,220 --> 02:07:50,740
and if we replace this the chat room

02:07:51,150 --> 02:07:57,470
I hope we should be able to see

02:07:57,789 --> 02:08:06,369
yeah we're inside the chat room

02:08:00,969 --> 02:08:14,739
so one thing I want you to take note of

02:08:06,369 --> 02:08:17,670
is if you see whenever we are then oh I

02:08:14,739 --> 02:08:17,670
have an error

02:08:18,590 --> 02:08:28,900
oh we for need also to import the chat

02:08:27,680 --> 02:08:34,040
room

02:08:28,900 --> 02:08:39,250
add the chat message rather because we

02:08:34,040 --> 02:08:44,810
remove the chat message from this one

02:08:39,250 --> 02:08:48,920
from index and since we need the chat

02:08:44,810 --> 02:08:53,360
message inside the chat room we need to

02:08:48,920 --> 02:09:01,160
import the chat message so now we should

02:08:53,360 --> 02:09:03,460
be there so yeah so yeah we just have

02:09:01,160 --> 02:09:03,460
this

02:09:05,619 --> 02:09:13,959
undefined error because we didn't

02:09:09,050 --> 02:09:13,959
provide a username

02:09:22,590 --> 02:09:28,940
I think what we can do is instead of

02:09:32,710 --> 02:09:36,240
yeah we need to prevent it

02:09:43,489 --> 02:09:52,910
yeah so yeah now we have this name and

02:09:49,310 --> 02:09:55,730
the message and the initial so if you

02:09:52,910 --> 02:09:58,300
notice we have this error but we can

02:09:55,730 --> 02:10:02,120
ignore this one as I mentioned earlier

02:09:58,300 --> 02:10:09,380
but for this one I want you to take note

02:10:02,120 --> 02:10:12,590
of this because what we did is whenever

02:10:09,380 --> 02:10:16,520
we add a message to the message list

02:10:12,590 --> 02:10:19,580
it's like we're getting all the message

02:10:16,520 --> 02:10:23,239
and concatenating it with the new

02:10:19,580 --> 02:10:28,910
message this is because by default if we

02:10:23,239 --> 02:10:31,610
do mutation change on our array or

02:10:28,910 --> 02:10:34,730
object lead element will not be able to

02:10:31,610 --> 02:10:41,300
know if something has changed on that

02:10:34,730 --> 02:10:46,930
object or on this array so one thing we

02:10:41,300 --> 02:10:53,600
can do is we can actually try to use

02:10:46,930 --> 02:10:59,440
push we can push the new message object

02:10:53,600 --> 02:10:59,440
instead but for

02:11:00,160 --> 02:11:08,360
for the lip element to be rendered we

02:11:04,070 --> 02:11:13,160
need to mention the request update

02:11:08,360 --> 02:11:17,510
manually but first I just comment this

02:11:13,160 --> 02:11:21,200
one first so that we can see that our

02:11:17,510 --> 02:11:26,330
app is not working I mean we were adding

02:11:21,200 --> 02:11:29,690
but it's not rear-ending because as I

02:11:26,330 --> 02:11:33,800
mentioned if we do mutate the object or

02:11:29,690 --> 02:11:37,640
D RA by default lit will not be able to

02:11:33,800 --> 02:11:42,260
identify whether change happened in an

02:11:37,640 --> 02:11:46,390
array or object so we need to trigger

02:11:42,260 --> 02:11:46,390
request update manually

02:11:47,790 --> 02:11:53,820
so now if we type in we see the same

02:11:51,340 --> 02:11:53,820
result

02:11:57,290 --> 02:12:07,980
so we can keep that get this one Jan

02:12:02,730 --> 02:12:13,070
this and now I guess we can start

02:12:07,980 --> 02:12:15,960
creating D chat lobby

02:12:13,070 --> 02:12:22,410
so let's first create a new file and

02:12:15,960 --> 02:12:26,910
call it chat lobby so we're just going

02:12:22,410 --> 02:12:32,280
to do the same thing first we need to

02:12:26,910 --> 02:12:35,360
import the other man then the HTML and

02:12:32,280 --> 02:12:35,360
CSS helpers

02:12:38,520 --> 02:12:51,580
then create our class let's name it chat

02:12:42,610 --> 02:12:56,200
lobby and extent lip element also we

02:12:51,580 --> 02:13:04,090
need to define our element

02:12:56,200 --> 02:13:07,530
we call it chat lobby and we pass in the

02:13:04,090 --> 02:13:07,530
chat lobby class

02:13:09,100 --> 02:13:16,690
next thing to do is to write the static

02:13:12,520 --> 02:13:18,820
get properties if we need but for this

02:13:16,690 --> 02:13:21,030
case I think we need if I remember it

02:13:18,820 --> 02:13:25,440
correctly we also need of course to

02:13:21,030 --> 02:13:25,440
provide our styles

02:13:27,050 --> 02:13:38,159
and lastly the render so for this one

02:13:33,449 --> 02:13:44,610
I'm also going to copy and paste I guess

02:13:38,159 --> 02:13:48,380
we don't have that much time yeah so I

02:13:44,610 --> 02:13:48,380
need to copy these stars first

02:13:49,370 --> 02:13:54,980
or maybe yes copy everything

02:13:57,590 --> 02:14:05,010
so what is new here I guess there's

02:14:02,639 --> 02:14:09,239
nothing here it's just we're doing the

02:14:05,010 --> 02:14:17,809
same we also have provided our exposing

02:14:09,239 --> 02:14:17,809
our CSS variables for the chat lobby

02:14:21,370 --> 02:14:29,350
and then I think the new thing that

02:14:27,040 --> 02:14:34,180
we're doing here is we're dispatching an

02:14:29,350 --> 02:14:36,970
event a host of event which we did it

02:14:34,180 --> 02:14:38,530
earlier I guess and to-do lists up if

02:14:36,970 --> 02:14:44,350
you remember correctly we also dispatch

02:14:38,530 --> 02:14:47,290
our own custom event so we just we also

02:14:44,350 --> 02:14:52,170
added that here so this is for us to

02:14:47,290 --> 02:14:56,170
identify whether the user have entered

02:14:52,170 --> 02:14:58,030
his name or not or he if he already

02:14:56,170 --> 02:15:01,600
wants to enter the room or not

02:14:58,030 --> 02:15:10,600
so we dispatch an event once the room

02:15:01,600 --> 02:15:17,500
the the user clicks on the join room so

02:15:10,600 --> 02:15:19,900
for this one we we all did as well as we

02:15:17,500 --> 02:15:23,850
bind the event as I mentioned earlier

02:15:19,900 --> 02:15:25,270
one binding event we need to use the @

02:15:23,850 --> 02:15:31,500
at-sign

02:15:25,270 --> 02:15:31,500
and then yet there's

02:15:32,710 --> 02:15:44,000
yeah I guess we also did the event

02:15:35,480 --> 02:15:48,440
binding earlier so we can or should we

02:15:44,000 --> 02:15:51,010
should now try the event at lobby

02:15:48,440 --> 02:15:51,010
rather

02:15:57,610 --> 02:16:06,230
for the chutney we don't have any

02:16:02,080 --> 02:16:07,520
properties required so you should notice

02:16:06,230 --> 02:16:10,510
we don't have these static yet

02:16:07,520 --> 02:16:10,510
properties

02:16:14,650 --> 02:16:23,110
yeah and by default if you remember

02:16:19,270 --> 02:16:26,680
earlier were manually cleaning up all

02:16:23,110 --> 02:16:32,770
the events that we have added for thee

02:16:26,680 --> 02:16:35,260
to do this up but in this case let HTML

02:16:32,770 --> 02:16:37,900
handles that one for us so we don't need

02:16:35,260 --> 02:16:42,580
to worry about cleaning up the events

02:16:37,900 --> 02:16:46,230
that we have here but if of course if we

02:16:42,580 --> 02:16:50,400
do R or if we add manually our own

02:16:46,230 --> 02:16:53,290
listener and this one then we should

02:16:50,400 --> 02:16:58,620
remove that manually but by default if

02:16:53,290 --> 02:17:01,600
we use the lead HTML event binding

02:16:58,620 --> 02:17:08,800
cleaning up the events is being taken

02:17:01,600 --> 02:17:12,780
care of us by little HTML so we now have

02:17:08,800 --> 02:17:17,800
we now added the chat lobby in the index

02:17:12,780 --> 02:17:26,980
so yeah we're now able to see that this

02:17:17,800 --> 02:17:29,190
is the chat lobby so I guess finally we

02:17:26,980 --> 02:17:29,190
need

02:17:29,679 --> 02:17:41,139
to create last component with which is

02:17:33,950 --> 02:17:41,139
shot demo so I'll just copy everything

02:17:45,670 --> 02:17:53,000
so for this one there's only a few lines

02:17:50,420 --> 02:17:58,189
on the chat demo because what this does

02:17:53,000 --> 02:18:06,340
is it actually just toggles the chat

02:17:58,189 --> 02:18:10,269
lobby and chat room but for for this one

02:18:06,340 --> 02:18:10,269
let's try it first

02:18:18,769 --> 02:18:27,690
for D chat demo if you notice we also

02:18:21,540 --> 02:18:31,170
imported via chat lobby and chat room so

02:18:27,690 --> 02:18:34,740
we only have two properties disjoint and

02:18:31,170 --> 02:18:39,660
the username so joint is just an

02:18:34,740 --> 02:18:46,769
indicator whether the user joined the

02:18:39,660 --> 02:18:53,780
room or not and username so for for this

02:18:46,769 --> 02:19:02,389
one if we can now see if we type in our

02:18:53,780 --> 02:19:10,559
name and join the room we were able to

02:19:02,389 --> 02:19:14,219
yes successfully hide the lobby and show

02:19:10,559 --> 02:19:18,740
the chat room instead so another thing

02:19:14,219 --> 02:19:26,309
that we can do here is instead of doing

02:19:18,740 --> 02:19:31,070
this hidden boolean attribute binding we

02:19:26,309 --> 02:19:34,940
can also have conditionals inside so

02:19:31,070 --> 02:19:34,940
let's try that

02:19:35,849 --> 02:19:47,820
so what we do instead of hidden we

02:19:42,190 --> 02:19:47,820
remove this hidden or the

02:19:50,860 --> 02:19:53,760
yeah we can

02:19:55,890 --> 02:20:04,150
yeah we're so we remove the boolean

02:20:00,910 --> 02:20:11,410
attribute binding so we can then check

02:20:04,150 --> 02:20:15,070
whether it's not if it if the user is

02:20:11,410 --> 02:20:21,690
not yet joined then we shall the chat

02:20:15,070 --> 02:20:21,690
lobby otherwise we shall the chat room

02:20:37,830 --> 02:20:45,870
so for this one you also need to return

02:20:46,149 --> 02:20:51,790
a template

02:20:48,979 --> 02:20:51,790
result

02:21:00,170 --> 02:21:07,399
so yeah so we were just doing some

02:21:03,850 --> 02:21:12,080
ternary here so we're checking if the

02:21:07,399 --> 02:21:15,080
user has joined or not if the user is

02:21:12,080 --> 02:21:17,989
not yet entered the room so we will

02:21:15,080 --> 02:21:22,380
display the chat lobby otherwise we'll

02:21:17,989 --> 02:21:25,040
show chat room yeah

02:21:22,380 --> 02:21:25,040
yes

02:21:25,051 --> 02:21:28,051
sorry

02:21:31,109 --> 02:21:36,779
yeah sorry

02:21:41,620 --> 02:21:45,810
if this joint at River this HTML

02:21:46,570 --> 02:21:55,300
sorry I don't you disjoint conditional

02:21:50,600 --> 02:21:55,300
copy to the random methods oh oh

02:21:56,271 --> 02:22:00,561
okay we can try it happen try that

02:22:00,050 --> 02:22:07,210
actually

02:22:00,561 --> 02:22:07,210
mostly I but I think it will still work

02:22:08,330 --> 02:22:13,700
so

02:22:10,380 --> 02:22:13,700
it's like this one

02:22:21,740 --> 02:22:28,790
yeah both will work I believe so that's

02:22:26,609 --> 02:22:28,790
right

02:22:42,820 --> 02:22:46,560
yeah this fact

02:22:50,740 --> 02:23:04,080
yeah it's still the same but just to

02:22:54,729 --> 02:23:04,080
make sure that we have sorry

02:23:06,470 --> 02:23:20,670
just to make sure that this has changed

02:23:13,730 --> 02:23:22,390
let's try to add fake attribute or say

02:23:20,670 --> 02:23:25,229
class

02:23:22,390 --> 02:23:25,229
a glass

02:23:28,400 --> 02:23:31,960
so if we

02:23:33,291 --> 02:23:45,711
and third yeah so any approach this will

02:23:41,631 --> 02:23:47,951
work but I think yeah this one is a bit

02:23:45,711 --> 02:23:47,951
cleaner

02:23:48,900 --> 02:24:01,181
so I guess that's it for the shot demo

02:23:56,820 --> 02:24:13,801
for the integration of the shot demo it

02:24:01,181 --> 02:24:18,480
will be done by some in web components

02:24:13,801 --> 02:24:22,091
to basically see how we can integrate

02:24:18,480 --> 02:24:23,920
them with our existing projects which we

02:24:22,091 --> 02:24:28,301
have all the idea that Union side FICO

02:24:23,920 --> 02:24:32,980
framework so do you guys need a break

02:24:28,301 --> 02:24:35,051
before like okay so we can have a

02:24:32,980 --> 02:24:37,660
10-minute break and then we can see how

02:24:35,051 --> 02:24:40,051
we can integrate it in our existing

02:24:37,660 --> 02:24:40,051
projects

02:24:44,650 --> 02:24:49,811
with any third-party library framework

02:24:47,320 --> 02:24:52,780
so I'm going to show you how we can

02:24:49,811 --> 02:24:55,080
integrate it with react and there are

02:24:52,780 --> 02:24:57,730
similar steps which we can follow with

02:24:55,080 --> 02:25:04,480
mostly angular of UGS or any other

02:24:57,730 --> 02:25:06,460
third-party library so there is polyfill

02:25:04,480 --> 02:25:08,561
you will need to install if you want to

02:25:06,460 --> 02:25:10,630
application to supports for all the

02:25:08,561 --> 02:25:14,170
browsers especially for the Internet

02:25:10,630 --> 02:25:17,260
explosion and there is one polyfill

02:25:14,170 --> 02:25:19,570
available web component J's which you

02:25:17,260 --> 02:25:21,610
can always install to support it apart

02:25:19,570 --> 02:25:25,000
from like the Bengal copy which is

02:25:21,610 --> 02:25:27,420
available for the edgiest to copy all

02:25:25,000 --> 02:25:31,690
the Bengal files into your own

02:25:27,420 --> 02:25:33,670
repository so in your packet go Jason

02:25:31,690 --> 02:25:36,160
you can write a post install the script

02:25:33,670 --> 02:25:39,250
which is basically will whenever you do

02:25:36,160 --> 02:25:42,370
npm install this PostScript post install

02:25:39,250 --> 02:25:45,280
will get executed and it will execute a

02:25:42,370 --> 02:25:49,540
bengal copy script which basically

02:25:45,280 --> 02:25:52,540
wander takes the custom elements es5 by

02:25:49,540 --> 02:25:55,120
depth earth and polyfill which is web

02:25:52,540 --> 02:25:58,780
components from Wendell dodges and copy

02:25:55,120 --> 02:26:02,620
it into your public folder so that later

02:25:58,780 --> 02:26:06,851
on we can utilize this in our index dot

02:26:02,620 --> 02:26:09,700
HTML and in your index dot HTML you need

02:26:06,851 --> 02:26:12,150
to add these three files in a three

02:26:09,700 --> 02:26:15,010
lines basically you are including the

02:26:12,150 --> 02:26:17,050
same computed file in your index dot

02:26:15,010 --> 02:26:20,640
HTML that's it

02:26:17,050 --> 02:26:24,730
that's how you can support it in your

02:26:20,640 --> 02:26:26,771
react or any existing application where

02:26:24,730 --> 02:26:30,630
you want to integrate the web components

02:26:26,771 --> 02:26:34,750
so if you'll see we have like one of the

02:26:30,630 --> 02:26:37,120
we have put all the code for the angular

02:26:34,750 --> 02:26:39,271
react and view into this project tree if

02:26:37,120 --> 02:26:43,120
you want to look at it look at them

02:26:39,271 --> 02:26:45,750
apart from that if you will see here in

02:26:43,120 --> 02:26:45,750
the code base

02:26:45,880 --> 02:26:47,880
Oh

02:26:58,370 --> 02:27:04,740
so in my packing on Jason I have ended I

02:27:01,801 --> 02:27:08,040
did my vendor copy script which will do

02:27:04,740 --> 02:27:12,330
the copy of all the web components

02:27:08,040 --> 02:27:14,311
polyfills and US v by delta for me and i

02:27:12,330 --> 02:27:16,200
have written this into a post install

02:27:14,311 --> 02:27:19,710
script so whenever I go into misconduct

02:27:16,200 --> 02:27:23,130
will get sexy critic and in my app

02:27:19,710 --> 02:27:25,440
gorgeous I will just if I am citing my

02:27:23,130 --> 02:27:28,490
web components in this folder directory

02:27:25,440 --> 02:27:29,940
structure I can directly import it here

02:27:28,490 --> 02:27:32,341
for this

02:27:29,940 --> 02:27:34,110
I have created that as a package and I

02:27:32,341 --> 02:27:36,540
have installed that package and I'm

02:27:34,110 --> 02:27:39,091
importing from that package a demo and

02:27:36,540 --> 02:27:43,650
I'm using that directly as a component

02:27:39,091 --> 02:27:46,891
inside my F gorgeous and if you will

02:27:43,650 --> 02:27:50,730
than this it will be similar as we saw

02:27:46,891 --> 02:27:55,801
previously and we can just execute this

02:27:50,730 --> 02:27:58,110
and use this command so it's really

02:27:55,801 --> 02:28:00,420
simple to use web component in your

02:27:58,110 --> 02:28:03,540
legacy project or any existing project

02:28:00,420 --> 02:28:07,771
you can plug it in anytime you know any

02:28:03,540 --> 02:28:10,351
kind of project and similarly it's

02:28:07,771 --> 02:28:15,181
really simple to integrate with view for

02:28:10,351 --> 02:28:16,950
angular it's a bit complicated but we

02:28:15,181 --> 02:28:18,900
have provided some reference for them

02:28:16,950 --> 02:28:23,070
and you can always go through those

02:28:18,900 --> 02:28:24,811
links and check that there are some best

02:28:23,070 --> 02:28:29,250
practices while you are working on web

02:28:24,811 --> 02:28:30,780
components always creative side those

02:28:29,250 --> 02:28:34,141
who would whenever you want to

02:28:30,780 --> 02:28:37,221
encapsulate all this tiles create two

02:28:34,141 --> 02:28:40,380
side doors open real constructor always

02:28:37,221 --> 02:28:42,240
place any children the elements create

02:28:40,380 --> 02:28:45,230
into this add those hood so that it

02:28:42,240 --> 02:28:48,181
should be inside the dome elements

02:28:45,230 --> 02:28:51,000
sighted all the hosts displaced Kyle

02:28:48,181 --> 02:28:54,181
by default Xin line means it doesn't

02:28:51,000 --> 02:28:57,301
take the height and width so it's better

02:28:54,181 --> 02:28:59,630
to set it to block or the line local

02:28:57,301 --> 02:28:59,630
flags

02:29:01,440 --> 02:29:08,381
it's always better to set the display

02:29:05,920 --> 02:29:11,320
property for the hidden hidden attribute

02:29:08,381 --> 02:29:14,261
on the host it's basically you will

02:29:11,320 --> 02:29:18,400
never be able to assign sin and property

02:29:14,261 --> 02:29:20,620
to a host element do not overnight or

02:29:18,400 --> 02:29:23,830
set of global attributes the default

02:29:20,620 --> 02:29:26,980
property which are used in the native

02:29:23,830 --> 02:29:30,400
element do not try to override them in

02:29:26,980 --> 02:29:32,650
your custom elements always accept

02:29:30,400 --> 02:29:35,530
amitabh data as either extra boots or

02:29:32,650 --> 02:29:39,330
prop property so whenever you are

02:29:35,530 --> 02:29:42,221
passing the data or passing some kind of

02:29:39,330 --> 02:29:44,681
bullies numbers of a string tried to

02:29:42,221 --> 02:29:48,450
pass them as a property as we saw like

02:29:44,681 --> 02:29:53,021
name it never has a world example do not

02:29:48,450 --> 02:29:56,110
dispatch event anytime from a host to

02:29:53,021 --> 02:29:58,950
downward to a children always passed

02:29:56,110 --> 02:30:01,811
them as a property or the attribute

02:29:58,950 --> 02:30:05,230
dispatch events from a children's to

02:30:01,811 --> 02:30:07,811
your presence so as we saw we sought to

02:30:05,230 --> 02:30:13,721
do change all the events which we pass

02:30:07,811 --> 02:30:16,240
from our children's I don't forget it's

02:30:13,721 --> 02:30:19,080
basically tells us like what you should

02:30:16,240 --> 02:30:22,721
always keep in mind when developing any

02:30:19,080 --> 02:30:25,120
custom element accessibility of those

02:30:22,721 --> 02:30:27,730
elements it should like be accessible

02:30:25,120 --> 02:30:30,011
using these all actually we look if it's

02:30:27,730 --> 02:30:32,230
taking all the area actually built if it

02:30:30,011 --> 02:30:34,690
can define you should always put the

02:30:32,230 --> 02:30:37,780
accessibility of your custom elements

02:30:34,690 --> 02:30:38,740
performance try to not use much of

02:30:37,780 --> 02:30:41,681
debounce

02:30:38,740 --> 02:30:43,631
or any other performance legging method

02:30:41,681 --> 02:30:47,160
which can impact the performance of your

02:30:43,631 --> 02:30:51,190
element script isn't always the answer

02:30:47,160 --> 02:30:54,761
if there is sometimes like you can use

02:30:51,190 --> 02:30:57,851
the native HTML only don't always go

02:30:54,761 --> 02:31:00,670
with the web components custom elements

02:30:57,851 --> 02:31:02,820
be responsive try to define your

02:31:00,670 --> 02:31:07,030
components in a responsive manner and

02:31:02,820 --> 02:31:10,271
always test your components as much as

02:31:07,030 --> 02:31:12,410
possible these are the references we

02:31:10,271 --> 02:31:14,689
went through to collect all the content

02:31:12,410 --> 02:31:18,439
if you want to go through it especially

02:31:14,689 --> 02:31:20,090
the last three which are used for to

02:31:18,439 --> 02:31:22,580
integrate your web component with the

02:31:20,090 --> 02:31:25,370
angular glue ends yet these are really

02:31:22,580 --> 02:31:31,930
useful when you are trying to set it

02:31:25,370 --> 02:31:34,939
into a project that's it

02:31:31,930 --> 02:31:38,830
because the workshop and if you have any

02:31:34,939 --> 02:31:38,830

YouTube URL: https://www.youtube.com/watch?v=024ValVz1-8


