Title: Variable Fonts and the Flexible Nature of Screens and Devices by Mandy Michael | JSConf.Asia 2019
Publication date: 2019-06-21
Playlist: JSConf.Asia 2019
Description: 
	Variable Fonts allow typography on the web to adapt to the flexible nature of screens, environments and devices. We can use variable fonts with pre-existing technologies to improve our font performance, design, accessibility and usability of our websites.
We can start to design our typography to adjust to various inputs, situations or events which might allow us to modify our fonts to aid in storytelling, or achieve improved readability and legibility in different situations, environments or on larger or smaller screens.
Let’s begin to explore new and exciting creative opportunities for storytelling, design and expression in ways standard fonts could never provide us. This is just the beginning of our journey to discover what we can do with variable fonts.

Mandy’s passion is CSS, HTML and JS, she has a particular interest in web typography, accessibility and modern layouts, and hopes to inspire that passion in others. With the aim to create a community of web developers who can share, mentor, learn and grow together she is a co-organiser and Director of Mixin Conf, the founder and co-organiser of Perth’s front-end developer meetup Fenders and currently works as a Development Manager at Seven West Media in Western Australia.


JSConf.Asia - LASALLE College of the Arts, Singapore - 14 June 2019

Source: https://2019.jsconf.asia/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.


Intro animation "something something prisms" by Martin Schuhfuss
https://codepen.io/usefulthink/pen/WogmvW

Intro music "Know" by Matt McKegg
https://soundcloud.com/destroy-with-science/know
Captions: 
	00:00:00,000 --> 00:00:15,820
[Music]

00:00:17,359 --> 00:00:21,930
hello excellent I do have a loud voice

00:00:20,460 --> 00:00:23,430
so it probably doesn't really matter if

00:00:21,930 --> 00:00:26,580
I have a microphone or not but anyway

00:00:23,430 --> 00:00:28,080
this is probably better so that was a

00:00:26,580 --> 00:00:32,489
really great introduction so I can just

00:00:28,080 --> 00:00:34,530
skip all the stuff about me this is last

00:00:32,489 --> 00:00:35,790
year I attended jazz con for ages so

00:00:34,530 --> 00:00:39,180
it's really cool to actually be standing

00:00:35,790 --> 00:00:40,710
on stage this time but what I'm gonna do

00:00:39,180 --> 00:00:41,850
is jump right in and tell you about the

00:00:40,710 --> 00:00:44,760
talk today I'm going to talk about

00:00:41,850 --> 00:00:46,559
variable fonts we're gonna do a quick

00:00:44,760 --> 00:00:49,020
explanation of what they are for

00:00:46,559 --> 00:00:51,750
everyone that doesn't know I will very

00:00:49,020 --> 00:00:52,800
very briefly touch on performance and

00:00:51,750 --> 00:00:54,600
then we'll just look at some ways that

00:00:52,800 --> 00:00:57,750
you can implement them to do some

00:00:54,600 --> 00:00:59,250
practical things but my favorite demos

00:00:57,750 --> 00:01:02,789
are the ones that are a bit fun so

00:00:59,250 --> 00:01:04,470
there's quite a few of those so what's

00:01:02,789 --> 00:01:08,250
important to know is that I'm a

00:01:04,470 --> 00:01:13,280
developer I love to design that looks

00:01:08,250 --> 00:01:18,299
really terrible but oh well hopefully oh

00:01:13,280 --> 00:01:21,240
wow it looks so pixelated that's so sad

00:01:18,299 --> 00:01:23,939
okay well I guess we'll just have to

00:01:21,240 --> 00:01:25,470
live with that so I started creating

00:01:23,939 --> 00:01:28,860
text effects like a couple of years ago

00:01:25,470 --> 00:01:30,299
and during my experiments I started

00:01:28,860 --> 00:01:32,700
playing with variable fonts and it

00:01:30,299 --> 00:01:34,320
became really clear to me very quickly

00:01:32,700 --> 00:01:36,390
that they offer a lot of unique

00:01:34,320 --> 00:01:40,710
opportunities that standard fonts just

00:01:36,390 --> 00:01:43,890
can't provide us so the reason for that

00:01:40,710 --> 00:01:45,689
is that mobile fonts are basically one

00:01:43,890 --> 00:01:48,210
font file that acts like multiple fonts

00:01:45,689 --> 00:01:50,340
and that's basically the crux of what

00:01:48,210 --> 00:01:53,220
they are and what that means is that

00:01:50,340 --> 00:01:55,649
where we might have normally had maybe

00:01:53,220 --> 00:01:58,320
six different font styles as separate

00:01:55,649 --> 00:02:02,450
individual files you can now have all of

00:01:58,320 --> 00:02:04,860
that information in the one file instead

00:02:02,450 --> 00:02:07,500
that looks not too bad so that's good

00:02:04,860 --> 00:02:09,420
the way this is achieved all comes down

00:02:07,500 --> 00:02:12,540
to the way that the font itself is

00:02:09,420 --> 00:02:13,150
created so a variable font can have one

00:02:12,540 --> 00:02:15,579
or more

00:02:13,150 --> 00:02:17,349
maxi's and what they do is provide

00:02:15,579 --> 00:02:20,200
different variations between different

00:02:17,349 --> 00:02:21,640
extremes so in this case we have a light

00:02:20,200 --> 00:02:24,790
- a bold weight

00:02:21,640 --> 00:02:27,790
now along that axis you can have named

00:02:24,790 --> 00:02:29,439
instances like regular and bold which is

00:02:27,790 --> 00:02:32,500
things that we're used to seeing in our

00:02:29,439 --> 00:02:36,370
code on the web but you also gain the

00:02:32,500 --> 00:02:39,280
ability to interpolate between those

00:02:36,370 --> 00:02:41,829
values and this allows for intermediate

00:02:39,280 --> 00:02:44,950
designs providing much finer control

00:02:41,829 --> 00:02:47,230
over the font itself so along with those

00:02:44,950 --> 00:02:51,310
standard values you can have everything

00:02:47,230 --> 00:02:53,970
in between as well like I don't know 207

00:02:51,310 --> 00:02:56,709
and that includes decimal places and

00:02:53,970 --> 00:02:58,870
because the axis is interpolated it

00:02:56,709 --> 00:03:00,280
means that we can animate between the

00:02:58,870 --> 00:03:03,849
values creating really smooth

00:03:00,280 --> 00:03:06,099
transitions between the variations but

00:03:03,849 --> 00:03:08,019
we're not just limited to a single axis

00:03:06,099 --> 00:03:11,920
at a time a variable font can contain

00:03:08,019 --> 00:03:14,079
thousands of axes and what you get out

00:03:11,920 --> 00:03:16,209
of this is the interpolation isn't just

00:03:14,079 --> 00:03:17,799
applied to one axis at a time it's

00:03:16,209 --> 00:03:18,910
applied to the combinations of those

00:03:17,799 --> 00:03:22,599
axes as well

00:03:18,910 --> 00:03:25,569
so if you wanted to have a wide heavy

00:03:22,599 --> 00:03:28,889
font or a really narrow thin font you

00:03:25,569 --> 00:03:32,260
can have that all within the one file so

00:03:28,889 --> 00:03:34,419
in essence a variable font gives us a

00:03:32,260 --> 00:03:36,669
single file with a greater amount of

00:03:34,419 --> 00:03:39,159
variation and a significant increase in

00:03:36,669 --> 00:03:41,199
style choices and they don't just have

00:03:39,159 --> 00:03:43,690
to be standard things like font weight

00:03:41,199 --> 00:03:46,180
or width it can be something totally

00:03:43,690 --> 00:03:48,430
different or a little bit weird like

00:03:46,180 --> 00:03:52,000
deco bar this is probably my favorite

00:03:48,430 --> 00:03:54,519
font it's by a designer called David

00:03:52,000 --> 00:03:56,620
bellow it's the first one that I ever

00:03:54,519 --> 00:03:58,659
played with and it has a lot of

00:03:56,620 --> 00:04:00,129
different creative axes in it that you

00:03:58,659 --> 00:04:03,940
can do awesome things with then we'll

00:04:00,129 --> 00:04:06,190
have a look at some demos later now the

00:04:03,940 --> 00:04:07,900
way that we use variable fonts is really

00:04:06,190 --> 00:04:12,069
similar to how we would normally use

00:04:07,900 --> 00:04:13,870
fonts on the web for the most part we

00:04:12,069 --> 00:04:15,970
set it up exactly the same way as we

00:04:13,870 --> 00:04:18,880
normally would in our CSS using font

00:04:15,970 --> 00:04:21,130
face the main difference is how we

00:04:18,880 --> 00:04:23,710
define variations for descriptors like

00:04:21,130 --> 00:04:26,350
font weight font stretch and font style

00:04:23,710 --> 00:04:28,150
so in this example

00:04:26,350 --> 00:04:30,430
might have previously set a font face

00:04:28,150 --> 00:04:32,470
block for the light version and then we

00:04:30,430 --> 00:04:34,200
do another one for the bold version and

00:04:32,470 --> 00:04:36,310
so on until we'd hit all of our styles

00:04:34,200 --> 00:04:38,440
but with variable fonts you don't need

00:04:36,310 --> 00:04:40,420
to do that you can simply define a range

00:04:38,440 --> 00:04:45,670
for the font weight so in this case I'm

00:04:40,420 --> 00:04:48,400
going to hundred to 700 and then from

00:04:45,670 --> 00:04:49,810
here when we reference it in our CSS we

00:04:48,400 --> 00:04:51,610
do it exactly the same way that we

00:04:49,810 --> 00:04:55,750
normally would but instead of being

00:04:51,610 --> 00:04:58,810
limited to values like bold or 700 you

00:04:55,750 --> 00:05:03,070
can pick any number between 200 and 700

00:04:58,810 --> 00:05:04,900
like 658 now this is really really good

00:05:03,070 --> 00:05:07,630
for something like weight because we've

00:05:04,900 --> 00:05:10,780
already got a CSS property that we can

00:05:07,630 --> 00:05:12,970
use in the land of variable fonts this

00:05:10,780 --> 00:05:14,290
is known as a registered axis and all

00:05:12,970 --> 00:05:16,960
that means is that it's been

00:05:14,290 --> 00:05:19,270
standardized in the spec at the moment

00:05:16,960 --> 00:05:23,170
there are five registered axes weight

00:05:19,270 --> 00:05:25,690
with slant italic and optical sized and

00:05:23,170 --> 00:05:28,000
they're all matched to preexisting CSS

00:05:25,690 --> 00:05:29,950
properties but if you want to use

00:05:28,000 --> 00:05:31,840
something more custom like the deck of

00:05:29,950 --> 00:05:34,330
our examples we're going to need a new

00:05:31,840 --> 00:05:37,030
CSS property and that's called font

00:05:34,330 --> 00:05:39,550
variation settings now this is an

00:05:37,030 --> 00:05:42,280
example of a font that I have invented

00:05:39,550 --> 00:05:44,200
called my jello font jello is the name

00:05:42,280 --> 00:05:47,140
of my dog he does feature in this

00:05:44,200 --> 00:05:50,500
presentation so look out he's very cute

00:05:47,140 --> 00:05:52,870
and in font variation settings you can

00:05:50,500 --> 00:05:55,480
define as many registered or custom axes

00:05:52,870 --> 00:05:57,460
as you want so here I have two custom

00:05:55,480 --> 00:05:59,560
axes one is called jello and one is

00:05:57,460 --> 00:06:02,680
called fellow and they both have an

00:05:59,560 --> 00:06:04,870
Associated number value custom access

00:06:02,680 --> 00:06:07,150
codes are defined by the font creator

00:06:04,870 --> 00:06:09,550
inside the font and they're always four

00:06:07,150 --> 00:06:13,480
characters whereas a registered axis

00:06:09,550 --> 00:06:15,460
that's defined in the spec now as I said

00:06:13,480 --> 00:06:17,620
you can use registered axes in front

00:06:15,460 --> 00:06:19,390
variation settings however it is

00:06:17,620 --> 00:06:21,730
strongly recommended that you use their

00:06:19,390 --> 00:06:24,370
map CSS property instead so we like font

00:06:21,730 --> 00:06:26,740
weight and the reason for this is it's

00:06:24,370 --> 00:06:29,140
not really this is kind of like a backup

00:06:26,740 --> 00:06:31,270
if the axis doesn't exist because

00:06:29,140 --> 00:06:33,580
there's a lot of custom stuff but to be

00:06:31,270 --> 00:06:35,440
honest it's way easier to manage your

00:06:33,580 --> 00:06:39,850
typography if you use the map properties

00:06:35,440 --> 00:06:40,240
when you can anyway and I'm sure people

00:06:39,850 --> 00:06:41,919
one

00:06:40,240 --> 00:06:43,569
about browser support it's actually

00:06:41,919 --> 00:06:45,850
really really good

00:06:43,569 --> 00:06:47,740
ie doesn't support it but that's not

00:06:45,850 --> 00:06:48,190
unexpected they're not developing that

00:06:47,740 --> 00:06:53,229
anymore

00:06:48,190 --> 00:06:56,050
so you know it's fair the only caveat to

00:06:53,229 --> 00:06:59,169
this browser support is you do need more

00:06:56,050 --> 00:07:01,210
modern operating systems so on Mac I

00:06:59,169 --> 00:07:03,569
believe it's high sierra some of the

00:07:01,210 --> 00:07:08,199
browser's rely on the operating system

00:07:03,569 --> 00:07:09,910
versions in order to for it to render if

00:07:08,199 --> 00:07:11,560
you are worried about browser support

00:07:09,910 --> 00:07:15,550
and you have to support ie still which a

00:07:11,560 --> 00:07:18,130
lot of us do you can use the CSS feature

00:07:15,550 --> 00:07:20,560
detection to detect for support of font

00:07:18,130 --> 00:07:25,060
variation settings and then you can fall

00:07:20,560 --> 00:07:26,590
back to a standard font if variable

00:07:25,060 --> 00:07:29,110
fonts are not supported so there are

00:07:26,590 --> 00:07:30,430
options there for us if we need to

00:07:29,110 --> 00:07:32,409
support it in browsers that don't

00:07:30,430 --> 00:07:34,120
currently support variable fonts but to

00:07:32,409 --> 00:07:35,590
be honest it's pretty good and you're

00:07:34,120 --> 00:07:41,199
probably going to get away with it I'm

00:07:35,590 --> 00:07:43,300
using them for most use cases so as I

00:07:41,199 --> 00:07:45,099
said earlier I did want to briefly talk

00:07:43,300 --> 00:07:46,690
about performance because it's a

00:07:45,099 --> 00:07:48,310
question people often ask there's a

00:07:46,690 --> 00:07:51,759
whole lot of stuff around web font

00:07:48,310 --> 00:07:54,370
performance that can impact this I'm not

00:07:51,759 --> 00:07:56,289
gonna go into it because that's like 40

00:07:54,370 --> 00:07:57,909
minutes of a talk on its own but

00:07:56,289 --> 00:08:00,400
essentially everything that you apply to

00:07:57,909 --> 00:08:02,440
web fonts on the web now also apply to

00:08:00,400 --> 00:08:04,180
variable fonts but there are a couple of

00:08:02,440 --> 00:08:05,650
things that I wanted to specifically

00:08:04,180 --> 00:08:08,139
mention because I get asked about it a

00:08:05,650 --> 00:08:10,150
lot the first one is the number of font

00:08:08,139 --> 00:08:13,800
requests and the second one is font file

00:08:10,150 --> 00:08:16,120
size so often when we think about

00:08:13,800 --> 00:08:18,099
reducing the number of font requests to

00:08:16,120 --> 00:08:19,780
improve our font performance it means

00:08:18,099 --> 00:08:21,520
that we would plan our typography

00:08:19,780 --> 00:08:23,889
choices and we'd weigh up the cost of

00:08:21,520 --> 00:08:26,409
design over the cost of performance and

00:08:23,889 --> 00:08:28,270
this is why we have that rule where you

00:08:26,409 --> 00:08:32,050
can only have like three fonts in your

00:08:28,270 --> 00:08:34,750
website that's an employee's limitation

00:08:32,050 --> 00:08:36,789
because of things like performance but

00:08:34,750 --> 00:08:39,279
because variable fonts can contain all

00:08:36,789 --> 00:08:41,140
that information in one file that means

00:08:39,279 --> 00:08:43,209
we've immediately reduced the number of

00:08:41,140 --> 00:08:48,279
font requests simply by using a variable

00:08:43,209 --> 00:08:50,940
font however if all of that information

00:08:48,279 --> 00:08:53,600
now exists in one file instead of three

00:08:50,940 --> 00:08:57,890
what's that going to do to file size

00:08:53,600 --> 00:08:59,810
so that brings me to file sizes you'd be

00:08:57,890 --> 00:09:01,820
right in assuming that a variable phone

00:08:59,810 --> 00:09:05,060
is going to be larger than a standard

00:09:01,820 --> 00:09:07,220
font typically not always but typically

00:09:05,060 --> 00:09:09,650
so I want to give you a bit of a

00:09:07,220 --> 00:09:11,830
comparison I'm gonna use source sans Pro

00:09:09,650 --> 00:09:14,840
which is on github

00:09:11,830 --> 00:09:16,460
the single weight of source sans Pro is

00:09:14,840 --> 00:09:18,290
approximately two hundred and thirty

00:09:16,460 --> 00:09:20,330
four kilobytes it varies a little bit

00:09:18,290 --> 00:09:23,390
depending on the style but about that in

00:09:20,330 --> 00:09:25,220
the OTF file version now if we use a

00:09:23,390 --> 00:09:26,930
more efficient front weight format like

00:09:25,220 --> 00:09:29,120
wofe two that will drop down to about

00:09:26,930 --> 00:09:30,740
one hundred and eleven kilobytes that

00:09:29,120 --> 00:09:32,480
still seems like a lot but keep in mind

00:09:30,740 --> 00:09:34,040
that source hands have like lots of

00:09:32,480 --> 00:09:35,750
language characters and stuff in it so

00:09:34,040 --> 00:09:38,210
you can subset this to make them even

00:09:35,750 --> 00:09:40,070
smaller I'm pretty sure when I subsetted

00:09:38,210 --> 00:09:42,470
this to like English characters it came

00:09:40,070 --> 00:09:47,180
down to sixteen so that is always an

00:09:42,470 --> 00:09:49,370
option now the variable phone the ODF is

00:09:47,180 --> 00:09:51,890
very large it's four hundred and five

00:09:49,370 --> 00:09:54,920
kilobytes but the wolf 2 is only a

00:09:51,890 --> 00:09:58,130
hundred and twelve which is only one

00:09:54,920 --> 00:10:01,640
kilobyte more than a single weight and I

00:09:58,130 --> 00:10:03,440
get a lot more options with that so to

00:10:01,640 --> 00:10:07,730
me in this case if you're using

00:10:03,440 --> 00:10:09,350
efficient font formats you get a lot

00:10:07,730 --> 00:10:13,460
more design opportunity with very

00:10:09,350 --> 00:10:15,110
minimal impact to performance but as I

00:10:13,460 --> 00:10:18,440
alluded to this is obviously going to

00:10:15,110 --> 00:10:19,880
depend on a font a font basis it's not

00:10:18,440 --> 00:10:21,530
always going to be better to use a

00:10:19,880 --> 00:10:23,150
variable font it's not always going to

00:10:21,530 --> 00:10:25,280
be better to use a standard font so you

00:10:23,150 --> 00:10:28,250
do need to do your research and check

00:10:25,280 --> 00:10:29,450
this stuff out beforehand if anyone

00:10:28,250 --> 00:10:31,010
wants to talk about parable font

00:10:29,450 --> 00:10:32,570
performance come see me afterwards I

00:10:31,010 --> 00:10:34,850
haven't done a presentation on it before

00:10:32,570 --> 00:10:37,150
so we can have beautiful in-depth

00:10:34,850 --> 00:10:40,460
discussions about it

00:10:37,150 --> 00:10:42,020
so we talked about browser support we

00:10:40,460 --> 00:10:43,160
kind of know what they are hopefully

00:10:42,020 --> 00:10:44,750
talk about a little bit about

00:10:43,160 --> 00:10:48,590
performance and how we can use them in

00:10:44,750 --> 00:10:53,270
our CSS we're all across that with that

00:10:48,590 --> 00:10:56,210
in mind now we can start to shift our

00:10:53,270 --> 00:10:58,400
focus we no longer need to really trade

00:10:56,210 --> 00:10:59,840
off design for performance in my opinion

00:10:58,400 --> 00:11:02,480
variable fonts are a really great way to

00:10:59,840 --> 00:11:04,420
move past that and we gained much more

00:11:02,480 --> 00:11:06,530
flexibility in our design opportunities

00:11:04,420 --> 00:11:07,340
designs which would have previously been

00:11:06,530 --> 00:11:10,160
a really

00:11:07,340 --> 00:11:11,870
burden on performance or impossible

00:11:10,160 --> 00:11:14,090
because of technical limitations like

00:11:11,870 --> 00:11:14,690
the font weights or whatever not

00:11:14,090 --> 00:11:17,870
existing

00:11:14,690 --> 00:11:19,730
they're now completely possible and we

00:11:17,870 --> 00:11:21,830
can start to forget about a lot of the

00:11:19,730 --> 00:11:23,600
perceived limitations and figure out how

00:11:21,830 --> 00:11:25,580
we can use this technology to create

00:11:23,600 --> 00:11:28,070
better or more interesting experiences

00:11:25,580 --> 00:11:29,510
for our users and the tone and the

00:11:28,070 --> 00:11:32,030
intent of our words can be more

00:11:29,510 --> 00:11:34,250
effectively represented with less worry

00:11:32,030 --> 00:11:38,360
over the impacts of loading in too many

00:11:34,250 --> 00:11:41,330
font weights and more importantly and

00:11:38,360 --> 00:11:43,160
this kind of goes towards the first

00:11:41,330 --> 00:11:44,900
presentation is that we can start to

00:11:43,160 --> 00:11:47,390
embrace the learnings and the growth of

00:11:44,900 --> 00:11:49,010
print design I am gonna add here

00:11:47,390 --> 00:11:52,640
the reason I'm not a designer is because

00:11:49,010 --> 00:11:56,540
of stuff like this it's really ugly but

00:11:52,640 --> 00:11:59,600
it's so cute so I've left it in that's

00:11:56,540 --> 00:12:02,360
my dog's Instagram too by the way should

00:11:59,600 --> 00:12:04,340
follow him he's very cute well unlike

00:12:02,360 --> 00:12:05,930
print design right we can benefit from

00:12:04,340 --> 00:12:08,900
the flexibility and the interactive

00:12:05,930 --> 00:12:11,120
nature of the web because variable fonts

00:12:08,900 --> 00:12:13,610
can have an interpolated range of values

00:12:11,120 --> 00:12:15,950
we can create animations or transitions

00:12:13,610 --> 00:12:19,460
with the text itself without relying on

00:12:15,950 --> 00:12:24,710
things like SVG or canvas or you know

00:12:19,460 --> 00:12:26,960
complex JavaScript stuff and we can

00:12:24,710 --> 00:12:28,970
achieve these effects using techniques

00:12:26,960 --> 00:12:31,940
we might already be familiar with like

00:12:28,970 --> 00:12:33,770
CSS animations transitions or JavaScript

00:12:31,940 --> 00:12:35,930
events like viewport resize scroll

00:12:33,770 --> 00:12:39,440
position sensor API that kind of stuff

00:12:35,930 --> 00:12:41,360
so what we gonna do now is we're gonna

00:12:39,440 --> 00:12:43,220
look at how we can animate and interact

00:12:41,360 --> 00:12:45,020
with variable fonts to create things

00:12:43,220 --> 00:12:46,850
that are practical to use but also a

00:12:45,020 --> 00:12:48,710
little bit fun and we're going to start

00:12:46,850 --> 00:12:53,660
with that grass effect that I just

00:12:48,710 --> 00:12:55,880
showed you so the grass or grow effect I

00:12:53,660 --> 00:12:57,890
use a font called deco var which I

00:12:55,880 --> 00:13:01,070
showed you earlier I'm going to use two

00:12:57,890 --> 00:13:04,340
of its axes one is called inline and one

00:13:01,070 --> 00:13:07,100
is called skeleton worm so this is what

00:13:04,340 --> 00:13:09,890
inline looks like on its own it's kind

00:13:07,100 --> 00:13:13,000
of like a hedge it's pretty nice I put

00:13:09,890 --> 00:13:16,100
my clicker down I should've done that oh

00:13:13,000 --> 00:13:18,200
yeah and this one is skeleton worm so we

00:13:16,100 --> 00:13:20,330
add its maximum value of a thousand it's

00:13:18,200 --> 00:13:21,150
like little novel things now when you

00:13:20,330 --> 00:13:22,680
combine these two

00:13:21,150 --> 00:13:27,320
that's how we get the leaves from the

00:13:22,680 --> 00:13:30,420
effect so once we've set up that base

00:13:27,320 --> 00:13:34,020
CSS with the font family and our two

00:13:30,420 --> 00:13:36,120
axes we can create our animation now I'm

00:13:34,020 --> 00:13:39,540
just going to use a keyframe animation

00:13:36,120 --> 00:13:41,220
it's got starts at zero we set both

00:13:39,540 --> 00:13:44,250
inline and skeleton worm to their

00:13:41,220 --> 00:13:46,530
maximum values of a thousand at 50% we

00:13:44,250 --> 00:13:48,090
set skeleton went back to zero and then

00:13:46,530 --> 00:13:49,350
it's just going to loop back round and

00:13:48,090 --> 00:13:51,360
what this will do is we'll start

00:13:49,350 --> 00:13:54,510
expanded it'll disappear and then it'll

00:13:51,360 --> 00:13:57,450
come back out again we add the animation

00:13:54,510 --> 00:14:01,680
to our h1 it runs infinitely it's called

00:13:57,450 --> 00:14:04,170
grow four seconds and that's it that's

00:14:01,680 --> 00:14:07,320
how I made that all I did was add a

00:14:04,170 --> 00:14:09,090
little bit of extra CSS for texture it's

00:14:07,320 --> 00:14:12,000
a couple of tax shadows and a background

00:14:09,090 --> 00:14:15,480
image for the most part the heavy

00:14:12,000 --> 00:14:18,000
lifting is done by the font I'm a bit of

00:14:15,480 --> 00:14:20,250
a lazy developer the least I can write

00:14:18,000 --> 00:14:23,460
the better and variable fonts make this

00:14:20,250 --> 00:14:25,260
stuff so easy because they've already

00:14:23,460 --> 00:14:28,140
done all of the work for you in the font

00:14:25,260 --> 00:14:31,620
itself so with just a little bit of CSS

00:14:28,140 --> 00:14:34,800
you can make all sorts of things you can

00:14:31,620 --> 00:14:38,700
do writing text this is a font by

00:14:34,800 --> 00:14:43,770
underwear this one's Dec over again this

00:14:38,700 --> 00:14:45,600
uses blend modes this is a simple one

00:14:43,770 --> 00:14:48,360
using a hover state with transition

00:14:45,600 --> 00:14:51,090
changing the weight as you hover over it

00:14:48,360 --> 00:14:55,760
it's called gingham I don't really know

00:14:51,090 --> 00:14:58,740
how to describe this one but it's cool

00:14:55,760 --> 00:15:00,060
this is my favorite demo and the reason

00:14:58,740 --> 00:15:01,650
that I love this demo it's a daiquiri

00:15:00,060 --> 00:15:04,170
bar again daiquiri bar is like the best

00:15:01,650 --> 00:15:06,270
font David bellow is the best what I

00:15:04,170 --> 00:15:07,800
love about this is if you have a look at

00:15:06,270 --> 00:15:09,390
it it's got a really long text shadow

00:15:07,800 --> 00:15:13,050
applied to it but what it demonstrates

00:15:09,390 --> 00:15:15,180
is that as you modify the variable font

00:15:13,050 --> 00:15:17,880
the text shadow disappears with it

00:15:15,180 --> 00:15:20,430
because we're actually changing the font

00:15:17,880 --> 00:15:22,260
itself we're not just applying effects

00:15:20,430 --> 00:15:24,120
over the top of it and I think that is a

00:15:22,260 --> 00:15:25,620
really beautiful and perfect

00:15:24,120 --> 00:15:30,000
demonstration of what makes variable

00:15:25,620 --> 00:15:31,500
fonts so different but it's not just

00:15:30,000 --> 00:15:33,040
that they're beautiful or they're cool

00:15:31,500 --> 00:15:34,690
or any of that kind of stuff

00:15:33,040 --> 00:15:37,029
what they demonstrate is that as

00:15:34,690 --> 00:15:39,550
developers and designers we can control

00:15:37,029 --> 00:15:42,190
the font itself and that means that

00:15:39,550 --> 00:15:44,290
variable fonts allowed typography on the

00:15:42,190 --> 00:15:46,089
web to adapt to the flexible nature of

00:15:44,290 --> 00:15:48,940
our screens our environments and our

00:15:46,089 --> 00:15:51,130
devices and there's currently a lot of

00:15:48,940 --> 00:15:53,500
work being done with CSS media queries

00:15:51,130 --> 00:15:55,690
the level 5 spec it's in draft at the

00:15:53,500 --> 00:15:57,940
moment but it aims to give us control

00:15:55,690 --> 00:16:01,750
over our designs based on environments

00:15:57,940 --> 00:16:04,060
like contrast and color schemes and even

00:16:01,750 --> 00:16:06,490
though it's in draft stages there's one

00:16:04,060 --> 00:16:09,130
which I'm sure some of you know about

00:16:06,490 --> 00:16:13,329
which we can play with called prefers

00:16:09,130 --> 00:16:16,209
color scheme and dark mode I'm going to

00:16:13,329 --> 00:16:17,620
show you a really cool example I've just

00:16:16,209 --> 00:16:20,649
talked it up I hope you still think it's

00:16:17,620 --> 00:16:23,230
cool anyway what I've got here I'm using

00:16:20,649 --> 00:16:26,019
a font called Qi it's by owner type code

00:16:23,230 --> 00:16:28,509
it's got a axis called temp I'm gonna

00:16:26,019 --> 00:16:30,579
set that at 0 to start with mounting a

00:16:28,509 --> 00:16:34,029
transition so you can see it animate for

00:16:30,579 --> 00:16:35,829
demo purposes but then we use a media

00:16:34,029 --> 00:16:37,690
query of prefer color scheme and we

00:16:35,829 --> 00:16:39,069
check for dark and if it's in dark mode

00:16:37,690 --> 00:16:42,029
I'm gonna change the access to a

00:16:39,069 --> 00:16:48,310
thousand this is what it looks like

00:16:42,029 --> 00:16:53,290
so as you switch to dark it oozes cuz

00:16:48,310 --> 00:16:55,389
it's dark right and when it goes back to

00:16:53,290 --> 00:16:58,300
light it goes back to the normal state

00:16:55,389 --> 00:17:00,160
that looks so bad on that screen at

00:16:58,300 --> 00:17:04,929
least it kind of works with the ooze but

00:17:00,160 --> 00:17:07,179
sorry the interface is not great but we

00:17:04,929 --> 00:17:09,010
can apply that kind of concept to our

00:17:07,179 --> 00:17:11,409
typography to adjust all sorts of things

00:17:09,010 --> 00:17:13,770
like screen widths and that might allow

00:17:11,409 --> 00:17:16,120
us to change the font weight based on

00:17:13,770 --> 00:17:18,610
whether the screen is larger or smaller

00:17:16,120 --> 00:17:21,970
or other things like width and optical

00:17:18,610 --> 00:17:24,669
size as well and where the viewport is

00:17:21,970 --> 00:17:26,559
wide we might have more detail or it's

00:17:24,669 --> 00:17:29,950
small line or more confined space we can

00:17:26,559 --> 00:17:31,299
reduce the width of the font and we can

00:17:29,950 --> 00:17:34,419
make the most of different JavaScript

00:17:31,299 --> 00:17:36,690
events like resize scroll Mouse move and

00:17:34,419 --> 00:17:39,190
we can create all kinds of interesting

00:17:36,690 --> 00:17:41,020
storytelling and experiences on the web

00:17:39,190 --> 00:17:42,280
I spent more time trying to figure out

00:17:41,020 --> 00:17:45,730
what word to put in this and they did

00:17:42,280 --> 00:17:46,900
writing the code for it to work I really

00:17:45,730 --> 00:17:48,490
like this example

00:17:46,900 --> 00:17:50,620
it's not everyone else's favorite but I

00:17:48,490 --> 00:17:54,610
think it's great now the good thing

00:17:50,620 --> 00:17:56,230
about these kinds of examples is that

00:17:54,610 --> 00:17:58,210
once you have the formula for modifying

00:17:56,230 --> 00:18:00,460
the font you can apply it to basically

00:17:58,210 --> 00:18:02,560
anything and I'm going to show you what

00:18:00,460 --> 00:18:04,360
that formula is so that you can go away

00:18:02,560 --> 00:18:07,270
and you can make all sorts of fun things

00:18:04,360 --> 00:18:09,850
with variable fonts so what we're going

00:18:07,270 --> 00:18:13,000
to do is if the font if the viewport

00:18:09,850 --> 00:18:14,290
size is big or small like as it changes

00:18:13,000 --> 00:18:19,000
we're going to change the font weight as

00:18:14,290 --> 00:18:20,950
a simple demonstration the problem is we

00:18:19,000 --> 00:18:23,800
might have a font weight of say 200 to

00:18:20,950 --> 00:18:26,680
900 and a viewport size of 320 pixels to

00:18:23,800 --> 00:18:28,840
1440 pixels so we need to align these

00:18:26,680 --> 00:18:30,760
two sets of values which are not only

00:18:28,840 --> 00:18:33,760
different ranges but also different

00:18:30,760 --> 00:18:35,830
measurements so what we're going to do

00:18:33,760 --> 00:18:39,250
is start off with our minimum and

00:18:35,830 --> 00:18:40,870
maximum access and event values which is

00:18:39,250 --> 00:18:43,240
what these numbers are so two hundred

00:18:40,870 --> 00:18:47,230
and nine hundred for the font and 320 to

00:18:43,240 --> 00:18:49,360
1440 for the viewport it's basically

00:18:47,230 --> 00:18:53,440
setting the start and end points so that

00:18:49,360 --> 00:18:54,580
it doesn't just go on infinitely so now

00:18:53,440 --> 00:18:56,710
that we've got our minimum or maximum

00:18:54,580 --> 00:18:58,210
values we're going to get the current

00:18:56,710 --> 00:19:00,460
viewport width so the current event

00:18:58,210 --> 00:19:04,300
value and we can do that with something

00:19:00,460 --> 00:19:06,840
like window in a width for example now

00:19:04,300 --> 00:19:09,730
once we have that what we want to do is

00:19:06,840 --> 00:19:10,870
change the pixel values to something

00:19:09,730 --> 00:19:14,320
more useable so we're going to convert

00:19:10,870 --> 00:19:17,020
it to a decimal place so what we do here

00:19:14,320 --> 00:19:19,110
is we take the current size that we just

00:19:17,020 --> 00:19:22,030
set with window don't inner width and

00:19:19,110 --> 00:19:24,880
then we minus the minimum size of the

00:19:22,030 --> 00:19:27,310
viewport and then we divide that by the

00:19:24,880 --> 00:19:29,650
maximum minus the minimum and that's

00:19:27,310 --> 00:19:33,100
going to give us a value between 0 and

00:19:29,650 --> 00:19:35,260
0.99 which we can then use to determine

00:19:33,100 --> 00:19:37,960
what our font weight is going to be so

00:19:35,260 --> 00:19:40,180
we take that new decimal and we multiply

00:19:37,960 --> 00:19:42,220
it by the minimum weight minus the

00:19:40,180 --> 00:19:45,850
maximum weight and then we add the

00:19:42,220 --> 00:19:47,800
maximum weight back on again what that's

00:19:45,850 --> 00:19:51,990
going to do is give us a value between

00:19:47,800 --> 00:19:55,210
200 to 900 based on the viewport size

00:19:51,990 --> 00:19:57,510
then you can update the value in your

00:19:55,210 --> 00:19:59,930
CSS however you normally would I'm using

00:19:57,510 --> 00:20:02,210
CSS custom properties

00:19:59,930 --> 00:20:05,690
I have a custom property called weight

00:20:02,210 --> 00:20:07,040
so I'm basically saying update my custom

00:20:05,690 --> 00:20:09,740
property of weight with my new

00:20:07,040 --> 00:20:12,560
calculated front weight and then that

00:20:09,740 --> 00:20:14,270
will update it in my CSS so you can

00:20:12,560 --> 00:20:16,610
chuck that in a function or something

00:20:14,270 --> 00:20:19,510
like that and then what we're gonna do

00:20:16,610 --> 00:20:23,120
is add an event listener for resize

00:20:19,510 --> 00:20:25,250
Chuck our function in there and what

00:20:23,120 --> 00:20:27,980
that's going to do in its simplest form

00:20:25,250 --> 00:20:29,270
is change the font weight based on the

00:20:27,980 --> 00:20:30,890
viewport width now you can do all sorts

00:20:29,270 --> 00:20:33,560
of things for performance and stuff but

00:20:30,890 --> 00:20:37,760
in its simplest form that's what it does

00:20:33,560 --> 00:20:43,700
and it might be something like this so

00:20:37,760 --> 00:20:45,350
pixelated so sorry now what I'm doing

00:20:43,700 --> 00:20:46,820
here is I'm actually changing the font

00:20:45,350 --> 00:20:48,560
weight based on the viewport weight so

00:20:46,820 --> 00:20:50,720
as it gets smaller the front weight gets

00:20:48,560 --> 00:20:52,940
heavier and I'm changing it at different

00:20:50,720 --> 00:20:54,650
rates depending on the paragraph but

00:20:52,940 --> 00:20:56,480
what I'm also doing is changing the

00:20:54,650 --> 00:20:58,730
width of the headline so that it doesn't

00:20:56,480 --> 00:21:00,620
wrap onto a new line and what this means

00:20:58,730 --> 00:21:03,020
is that I can maintain the integrity of

00:21:00,620 --> 00:21:04,640
my design rather than just wrapping it

00:21:03,020 --> 00:21:06,500
onto a new line and stacking everything

00:21:04,640 --> 00:21:08,900
and I think this is really valuable and

00:21:06,500 --> 00:21:10,970
really really useful when we're talking

00:21:08,900 --> 00:21:13,150
about all of the different screen sizes

00:21:10,970 --> 00:21:15,560
and devices that are out there now and

00:21:13,150 --> 00:21:20,210
as I said this code can be used to

00:21:15,560 --> 00:21:22,580
change all sorts of things when I made

00:21:20,210 --> 00:21:25,040
this I didn't associate it with the fact

00:21:22,580 --> 00:21:26,920
that my phone is completely smashed but

00:21:25,040 --> 00:21:30,380
it's actually quite funny in hindsight

00:21:26,920 --> 00:21:34,370
so this uses the device position and

00:21:30,380 --> 00:21:35,210
orientation or we can do something

00:21:34,370 --> 00:21:38,330
really interesting

00:21:35,210 --> 00:21:39,980
this one will respond to audio input so

00:21:38,330 --> 00:21:41,780
I'm gonna switch in a minute but um

00:21:39,980 --> 00:21:43,880
there's a couple of things I wanted to

00:21:41,780 --> 00:21:45,740
mention about it special thanks to Ruth

00:21:43,880 --> 00:21:47,660
I don't know if she's here yet but she's

00:21:45,740 --> 00:21:49,700
gonna be here doing stuff tomorrow I

00:21:47,660 --> 00:21:51,470
originally wrote the code for this with

00:21:49,700 --> 00:21:53,150
a library and I didn't think it was

00:21:51,470 --> 00:21:54,890
quite right and she gave me some new

00:21:53,150 --> 00:21:58,120
code for it which is super cool all

00:21:54,890 --> 00:21:58,120
right let's try switching

00:22:05,100 --> 00:22:13,889
so I'm just gonna let it use my

00:22:07,200 --> 00:22:16,559
microphone yay I have a really loud

00:22:13,889 --> 00:22:18,389
voice so it triggers it oh I probably

00:22:16,559 --> 00:22:19,830
shouldn't have made it so sensitive but

00:22:18,389 --> 00:22:21,419
as you can see what's happening here is

00:22:19,830 --> 00:22:23,750
it's responding to the sound of my voice

00:22:21,419 --> 00:22:26,039
and it's taking that audio input and

00:22:23,750 --> 00:22:27,590
reacting accordingly and this is really

00:22:26,039 --> 00:22:29,759
interesting for things like

00:22:27,590 --> 00:22:32,580
conversational you eyes so that you can

00:22:29,759 --> 00:22:34,440
visually represent the tone or the

00:22:32,580 --> 00:22:35,730
intent of a person's input so like if

00:22:34,440 --> 00:22:37,559
they're really loud maybe it's like

00:22:35,730 --> 00:22:41,039
super bold or if they're really quiet

00:22:37,559 --> 00:22:44,240
maybe it's you know really thin and I

00:22:41,039 --> 00:22:46,919
just I think this is like a really cool

00:22:44,240 --> 00:22:49,919
future possibility for us as things like

00:22:46,919 --> 00:22:58,279
the Google home and Alexa become more

00:22:49,919 --> 00:23:00,200
and more prevalent so what's next this

00:22:58,279 --> 00:23:07,049
is really cool

00:23:00,200 --> 00:23:11,220
one moment please so I'm just gonna

00:23:07,049 --> 00:23:14,389
where's my mouse switch back over I'm

00:23:11,220 --> 00:23:17,759
gonna go full screen for this one so

00:23:14,389 --> 00:23:20,789
this font is called wool which I just

00:23:17,759 --> 00:23:23,159
heard some of you say bye scribble tone

00:23:20,789 --> 00:23:24,659
I kind of wish they called it slinky but

00:23:23,159 --> 00:23:26,759
whoa kind of wax

00:23:24,659 --> 00:23:29,129
what this is doing is it's changing

00:23:26,759 --> 00:23:33,029
based on the mouse position and it's got

00:23:29,129 --> 00:23:35,460
three axes that you can modify there's a

00:23:33,029 --> 00:23:37,799
vertical horizontal and then there's a

00:23:35,460 --> 00:23:41,009
rotation and I'm just passing the X&Y

00:23:37,799 --> 00:23:42,809
coordinates or to the variable font with

00:23:41,009 --> 00:23:50,639
that code that I just showed you to

00:23:42,809 --> 00:23:52,440
update the axes I really like that

00:23:50,639 --> 00:23:54,799
example because the fonts so cool the

00:23:52,440 --> 00:23:57,629
thing to note about this is that

00:23:54,799 --> 00:23:59,029
essentially again all the hard work is

00:23:57,629 --> 00:24:01,470
done in the font like that is an

00:23:59,029 --> 00:24:03,919
incredible creation what they've done

00:24:01,470 --> 00:24:06,330
there and it's just simply spectacular

00:24:03,919 --> 00:24:08,429
this is a good opportunity to bring

00:24:06,330 --> 00:24:10,230
yourself closer to people who create

00:24:08,429 --> 00:24:12,389
fonts because I kind of feel like at the

00:24:10,230 --> 00:24:14,429
moment we're very separate but now that

00:24:12,389 --> 00:24:16,379
we can start to control the font in our

00:24:14,429 --> 00:24:18,000
code and on the web I think this is a

00:24:16,379 --> 00:24:18,810
really good opportunity to come together

00:24:18,000 --> 00:24:20,990
and like

00:24:18,810 --> 00:24:23,790
on things and solve problems together

00:24:20,990 --> 00:24:26,100
but we can also do some other

00:24:23,790 --> 00:24:28,170
interesting things like improve the

00:24:26,100 --> 00:24:29,790
legibility of our text with new features

00:24:28,170 --> 00:24:31,920
that allow us to query the

00:24:29,790 --> 00:24:34,620
characteristics of the users display or

00:24:31,920 --> 00:24:36,060
light level so this demo that I'm going

00:24:34,620 --> 00:24:39,210
to show you it currently only works

00:24:36,060 --> 00:24:41,010
behind a flag so the support isn't great

00:24:39,210 --> 00:24:43,020
but it is a good demonstration of the

00:24:41,010 --> 00:24:44,640
opportunities for the future what I'm

00:24:43,020 --> 00:24:48,120
gonna do first is show you a little bit

00:24:44,640 --> 00:24:49,860
of code so I didn't show you this before

00:24:48,120 --> 00:24:52,560
but this is essentially what the CSS

00:24:49,860 --> 00:24:54,720
looks like with the custom property the

00:24:52,560 --> 00:24:57,600
font I'm going to use is called tiny and

00:24:54,720 --> 00:24:59,490
it's what I'm doing is passing a value

00:24:57,600 --> 00:25:04,050
to my custom property and then updating

00:24:59,490 --> 00:25:07,830
it in the font weight value we set up

00:25:04,050 --> 00:25:09,630
our default base ranges just like before

00:25:07,830 --> 00:25:12,650
but instead of viewport width we're

00:25:09,630 --> 00:25:15,510
using an ambient light sensor value and

00:25:12,650 --> 00:25:18,420
then we're going to set up the ambient

00:25:15,510 --> 00:25:20,010
light sensor so in this case we check if

00:25:18,420 --> 00:25:23,190
we have access to the ambient light

00:25:20,010 --> 00:25:26,610
sensor if we do we create a new instance

00:25:23,190 --> 00:25:29,190
of that sensor and then what we can do

00:25:26,610 --> 00:25:31,440
is start to gather readings from the

00:25:29,190 --> 00:25:34,100
sensor using the on reading event

00:25:31,440 --> 00:25:37,020
handler now the reading frequency is

00:25:34,100 --> 00:25:39,180
decided by you you can pass an optional

00:25:37,020 --> 00:25:40,860
value to the sensors constructor and

00:25:39,180 --> 00:25:42,540
that will specify the number of readings

00:25:40,860 --> 00:25:45,030
per second I'm not going to do that for

00:25:42,540 --> 00:25:47,100
simplicity but you can do it and then

00:25:45,030 --> 00:25:49,290
what we do is we pass that same function

00:25:47,100 --> 00:25:51,720
that I showed you before I've called it

00:25:49,290 --> 00:25:54,330
fluid access variation with all of our

00:25:51,720 --> 00:25:57,240
values including the sensor dot

00:25:54,330 --> 00:26:01,200
illuminance reading which is what we get

00:25:57,240 --> 00:26:03,300
our current value from and then the

00:26:01,200 --> 00:26:07,140
final step is telling the sensor to

00:26:03,300 --> 00:26:08,460
start so the function with the values in

00:26:07,140 --> 00:26:12,810
it manually might look something like

00:26:08,460 --> 00:26:15,180
this but now I'm gonna show you what it

00:26:12,810 --> 00:26:17,370
actually looks like this is probably I

00:26:15,180 --> 00:26:20,960
say a lot of demos are my favorite but I

00:26:17,370 --> 00:26:23,960
think this one really is my favorite a

00:26:20,960 --> 00:26:23,960
promise

00:26:32,530 --> 00:26:39,250
all right I'm just gonna get my handy

00:26:36,010 --> 00:26:44,710
device here I'm gonna change the light

00:26:39,250 --> 00:26:46,750
input so sorry if I'm shining my light

00:26:44,710 --> 00:26:50,260
in anyone's eyes in the front row the

00:26:46,750 --> 00:26:52,690
perils of the front row so what I'm

00:26:50,260 --> 00:26:55,090
doing is it's detecting a change in the

00:26:52,690 --> 00:26:57,340
light around my computer laptop sensor

00:26:55,090 --> 00:27:00,160
and then the font is responding to it

00:26:57,340 --> 00:27:03,250
now this is like really cool right it's

00:27:00,160 --> 00:27:07,360
it's responding to the users environment

00:27:03,250 --> 00:27:09,460
and you can use this to change the way

00:27:07,360 --> 00:27:11,470
things are represented in low light

00:27:09,460 --> 00:27:13,480
environments to improve legibility

00:27:11,470 --> 00:27:17,260
accessibility and usability of your

00:27:13,480 --> 00:27:20,380
sites but also and this is fun for me

00:27:17,260 --> 00:27:22,930
you could create some really cool

00:27:20,380 --> 00:27:24,730
like storytelling experiences like if it

00:27:22,930 --> 00:27:26,560
was really dark you could make something

00:27:24,730 --> 00:27:29,050
like cool thing where it gets all dark

00:27:26,560 --> 00:27:30,940
and creepy I'm all the reverse of that

00:27:29,050 --> 00:27:34,750
unicorns could appear to make people

00:27:30,940 --> 00:27:37,000
feel safe unicorns I wish I wore my

00:27:34,750 --> 00:27:39,640
unicorn pants instead of MySpace ones

00:27:37,000 --> 00:27:44,160
I'll have to like work that out next

00:27:39,640 --> 00:27:44,160
time hang on one second why switch back

00:27:45,450 --> 00:27:54,550
cool so basically it's only because

00:27:51,540 --> 00:27:56,560
variable fonts give us this more greater

00:27:54,550 --> 00:27:58,480
control over each of these elements that

00:27:56,560 --> 00:28:00,400
we can start to fine-tune the different

00:27:58,480 --> 00:28:02,500
font characteristics to maximize the

00:28:00,400 --> 00:28:04,540
legibility the readability and the

00:28:02,500 --> 00:28:06,280
accessibility of our website text and

00:28:04,540 --> 00:28:08,560
while they might seem a little bit

00:28:06,280 --> 00:28:11,470
trivial and you might be like well I'll

00:28:08,560 --> 00:28:13,420
never use that their demonstrations of

00:28:11,470 --> 00:28:15,820
the possibilities and like I said like

00:28:13,420 --> 00:28:18,130
this isn't just about fun stuff it does

00:28:15,820 --> 00:28:20,080
give us an opportunity to respond to our

00:28:18,130 --> 00:28:22,870
users environments and at their unique

00:28:20,080 --> 00:28:25,300
circumstances it's a level of control

00:28:22,870 --> 00:28:30,910
over fonts that's unprecedented for us

00:28:25,300 --> 00:28:33,040
and I hope by the end of this conference

00:28:30,910 --> 00:28:34,750
you'll agree but in my opinion it's

00:28:33,040 --> 00:28:36,390
never been a better time to be a

00:28:34,750 --> 00:28:39,130
developer or a designer on the web

00:28:36,390 --> 00:28:40,840
variable fonts which is one of the many

00:28:39,130 --> 00:28:43,090
things that open up doors that have

00:28:40,840 --> 00:28:45,010
never existed for us before and we can

00:28:43,090 --> 00:28:45,799
combine these things in any number of

00:28:45,010 --> 00:28:48,259
ways

00:28:45,799 --> 00:28:50,539
to think more creatively for our users

00:28:48,259 --> 00:28:54,769
and to solve problems in more creative

00:28:50,539 --> 00:28:57,470
ways and with variable fonts at the very

00:28:54,769 --> 00:29:01,039
least we have the opportunity to improve

00:28:57,470 --> 00:29:03,080
performance but at its best we can make

00:29:01,039 --> 00:29:06,440
websites that are more usable more

00:29:03,080 --> 00:29:08,720
accessible and more meaningful and that

00:29:06,440 --> 00:29:11,059
to me is what gets me really really

00:29:08,720 --> 00:29:13,549
really excited about the future of web

00:29:11,059 --> 00:29:16,220
typography so I have some resources

00:29:13,549 --> 00:29:17,210
which I'll share out should follow Ruth

00:29:16,220 --> 00:29:20,899
for her awesome

00:29:17,210 --> 00:29:29,739
audio stuff um specifically though I

00:29:20,899 --> 00:29:29,739
made this website where are we

00:29:29,889 --> 00:29:34,279
it's called variable fonts for

00:29:32,059 --> 00:29:37,009
developers here's another cool fun Hey

00:29:34,279 --> 00:29:37,999
I forget what this one's called I should

00:29:37,009 --> 00:29:42,039
know this because I made it the other

00:29:37,999 --> 00:29:48,080
day it's got this has kicked in mobile

00:29:42,039 --> 00:29:50,980
version sad whoo the aspect ratio of

00:29:48,080 --> 00:29:53,179
this is very low anyway it's got

00:29:50,980 --> 00:29:55,789
tutorials for how to make the light

00:29:53,179 --> 00:29:57,950
sensor demo and the gray demo and I will

00:29:55,789 --> 00:29:59,989
add a whole bunch more on here in the

00:29:57,950 --> 00:30:02,419
next few weeks there's also a getting

00:29:59,989 --> 00:30:05,029
started page which will go through the

00:30:02,419 --> 00:30:06,739
basics of setting up and using variable

00:30:05,029 --> 00:30:07,940
fonts that you can go through and have a

00:30:06,739 --> 00:30:11,889
look at if you want

00:30:07,940 --> 00:30:11,889
it's called variable fonts dot dev

00:30:13,690 --> 00:30:20,289
putting this microphone down and

00:30:15,440 --> 00:30:20,289

YouTube URL: https://www.youtube.com/watch?v=BBWMIxXqr-E


