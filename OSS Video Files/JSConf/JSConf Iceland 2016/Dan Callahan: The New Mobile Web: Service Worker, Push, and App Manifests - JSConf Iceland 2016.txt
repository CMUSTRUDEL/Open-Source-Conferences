Title: Dan Callahan: The New Mobile Web: Service Worker, Push, and App Manifests - JSConf Iceland 2016
Publication date: 2016-09-16
Playlist: JSConf Iceland 2016
Description: 
	Compared to native apps, mobile websites have historically been at a disadvantage: no installation, no push notifications, and they only work when you're online. This year, that changed. Browser vendors have worked together to implement open standards that address each of these shortcomings. This session examines how the Service Worker, Push, and App Manifest specifications fill the gap between web and native.

Slides & links
https://github.com/callahad/jsis-newweb
Captions: 
	00:00:12,910 --> 00:00:18,740
thank you so can everyone hear me we're

00:00:16,550 --> 00:00:21,320
good they gave me a laser pointer which

00:00:18,740 --> 00:00:23,330
is a terrible idea but I can't point

00:00:21,320 --> 00:00:25,369
that high otherwise so I've tweeted a

00:00:23,330 --> 00:00:27,439
link to the slides my Twitter handrails

00:00:25,369 --> 00:00:28,430
Calla had if you want to follow along if

00:00:27,439 --> 00:00:30,290
you want to experiment instead of

00:00:28,430 --> 00:00:32,150
listening to me feel free to go there

00:00:30,290 --> 00:00:35,840
there's all sorts of information other

00:00:32,150 --> 00:00:39,650
demos to look at other resources check

00:00:35,840 --> 00:00:41,000
that out spoiler alright so I'm not

00:00:39,650 --> 00:00:43,070
talked about the new mobile web because

00:00:41,000 --> 00:00:45,800
we tried that once we tried an old

00:00:43,070 --> 00:00:47,570
mobile web we had whap we had wml who

00:00:45,800 --> 00:00:51,080
here remembers like Nokia feature phones

00:00:47,570 --> 00:00:54,410
with wet ok hey I guess you come close

00:00:51,080 --> 00:00:57,910
to to where Nokia is from and you get

00:00:54,410 --> 00:01:00,650
people who remember that that's great um

00:00:57,910 --> 00:01:02,060
the the power of the web and the reason

00:01:00,650 --> 00:01:03,230
whap failed and the reason the iphone

00:01:02,060 --> 00:01:05,960
and things like that I've succeeded is

00:01:03,230 --> 00:01:08,869
that the web is one platform there's

00:01:05,960 --> 00:01:11,689
only one web it's open its universal

00:01:08,869 --> 00:01:15,050
it's decentralized the same web is on my

00:01:11,689 --> 00:01:17,570
phone that is on my laptop there's no

00:01:15,050 --> 00:01:19,250
single gatekeeper there's no web store

00:01:17,570 --> 00:01:21,380
that I have to go to and convince

00:01:19,250 --> 00:01:23,659
someone to let me publish on the web

00:01:21,380 --> 00:01:26,090
there are many new domain providers mini

00:01:23,659 --> 00:01:27,500
hosting providers have many options and

00:01:26,090 --> 00:01:30,170
this is the power of the web as a medium

00:01:27,500 --> 00:01:32,870
it's a very very low barrier to entry

00:01:30,170 --> 00:01:36,800
very low friction Democratic medium and

00:01:32,870 --> 00:01:39,010
I think that's important so I work for

00:01:36,800 --> 00:01:41,690
Mozilla and Mozilla works for the web

00:01:39,010 --> 00:01:43,370
Mozilla's a nonprofit that in its

00:01:41,690 --> 00:01:46,220
manifesto states that the Internet is a

00:01:43,370 --> 00:01:48,979
global public resource that must remain

00:01:46,220 --> 00:01:50,620
open and accessible and a key to that is

00:01:48,979 --> 00:01:53,810
ensuring that there's a balance between

00:01:50,620 --> 00:01:56,720
private interest on the web and public

00:01:53,810 --> 00:01:59,330
interest on the web the way that we work

00:01:56,720 --> 00:02:02,060
to ensure that balance is about building

00:01:59,330 --> 00:02:04,040
firefox firefox is a completely free

00:02:02,060 --> 00:02:05,840
open-source web browser you can hack on

00:02:04,040 --> 00:02:07,729
the code we're rewriting our dev tools

00:02:05,840 --> 00:02:10,129
and react so if you know react you can

00:02:07,729 --> 00:02:11,150
make a huge contribution come talk to me

00:02:10,129 --> 00:02:13,730
later if you want to learn how to get

00:02:11,150 --> 00:02:15,790
involved but we build Firefox so that

00:02:13,730 --> 00:02:19,310
when the world's largest corporations

00:02:15,790 --> 00:02:20,780
meet to determine what is going into the

00:02:19,310 --> 00:02:23,060
web platform what the web is going to

00:02:20,780 --> 00:02:24,350
look like that we have earned a place at

00:02:23,060 --> 00:02:26,060
that table as a pea

00:02:24,350 --> 00:02:29,420
and as a fellow implementer of the web

00:02:26,060 --> 00:02:32,060
and that we can influence that we can

00:02:29,420 --> 00:02:33,970
speak for the public good as someone

00:02:32,060 --> 00:02:35,840
that doesn't have a profit motive I

00:02:33,970 --> 00:02:37,520
think that's really important i think

00:02:35,840 --> 00:02:39,380
the web is is a global resource it's a

00:02:37,520 --> 00:02:41,090
public resource it needs to be preserved

00:02:39,380 --> 00:02:43,850
feel free to talk to me about that

00:02:41,090 --> 00:02:45,950
afterwards so part of the power of the

00:02:43,850 --> 00:02:47,270
web is its ubiquity this is the internet

00:02:45,950 --> 00:02:50,030
of twitter account talking about

00:02:47,270 --> 00:02:52,370
all the failures in the iot field and

00:02:50,030 --> 00:02:56,750
it's being displayed on a samsung smart

00:02:52,370 --> 00:02:59,930
fridge in a showroom at a home appliance

00:02:56,750 --> 00:03:03,400
store the power of this is that that's

00:02:59,930 --> 00:03:05,570
mobile.twitter.com on that smart fridge

00:03:03,400 --> 00:03:07,490
samsung didn't have to go out to twitter

00:03:05,570 --> 00:03:11,750
and say hey will you please implement

00:03:07,490 --> 00:03:13,490
twitter for fridge OS 10 and then they

00:03:11,750 --> 00:03:14,630
didn't have another company say LG or

00:03:13,490 --> 00:03:16,220
someone else coming and say ah but we

00:03:14,630 --> 00:03:17,240
have a better fridge OS can you

00:03:16,220 --> 00:03:19,700
implement for hours no they just

00:03:17,240 --> 00:03:21,320
implement the web and they have access

00:03:19,700 --> 00:03:23,500
to all the contents of the web has and

00:03:21,320 --> 00:03:26,360
so the web has this this ability to

00:03:23,500 --> 00:03:28,550
shape itself into new forms that we

00:03:26,360 --> 00:03:32,090
hadn't imagined yet but all that content

00:03:28,550 --> 00:03:33,230
is there it's hugely powerful if you

00:03:32,090 --> 00:03:36,830
look closely there a couple things you

00:03:33,230 --> 00:03:40,700
can you can learn about this this fridge

00:03:36,830 --> 00:03:42,080
for one it's not using it's using the

00:03:40,700 --> 00:03:44,900
Samsung built-in browser it's not using

00:03:42,080 --> 00:03:45,980
Chrome or Firefox that's custom UI if

00:03:44,900 --> 00:03:48,290
you scroll down further you can actually

00:03:45,980 --> 00:03:51,200
see it's running Android but you also

00:03:48,290 --> 00:03:52,970
know that it has a web connection inside

00:03:51,200 --> 00:03:54,470
the showroom floor which means if you

00:03:52,970 --> 00:03:56,900
buy the floor model depth of that fridge

00:03:54,470 --> 00:03:59,570
you probably get access to home depot or

00:03:56,900 --> 00:04:02,000
Sears Wi-Fi network so that's a pretty

00:03:59,570 --> 00:04:03,470
good deal and we know that because if it

00:04:02,000 --> 00:04:05,240
didn't have a web connection and we

00:04:03,470 --> 00:04:07,340
tried to load mobile.twitter.com we'd

00:04:05,240 --> 00:04:11,750
see something like this the connection

00:04:07,340 --> 00:04:13,280
appears to be offline try again so the

00:04:11,750 --> 00:04:16,220
web is ubiquitous but the web isn't

00:04:13,280 --> 00:04:17,690
resilient the Twitter app will never do

00:04:16,220 --> 00:04:20,450
this you never open twitter on your foam

00:04:17,690 --> 00:04:22,760
and you're on a train or on a flight and

00:04:20,450 --> 00:04:24,560
say oh I'm sorry just twitter isn't

00:04:22,760 --> 00:04:25,940
available right now no you see what data

00:04:24,560 --> 00:04:28,640
it had the last time it was available

00:04:25,940 --> 00:04:30,620
and you can still compose tweets it'll

00:04:28,640 --> 00:04:31,970
just say hey I can't send this until I'm

00:04:30,620 --> 00:04:34,490
back online or I can't retrieve new

00:04:31,970 --> 00:04:36,940
tweets until I'm back online so apps

00:04:34,490 --> 00:04:38,390
have had this this user experience and

00:04:36,940 --> 00:04:41,990
reliability

00:04:38,390 --> 00:04:45,110
win over the web this talk is going to

00:04:41,990 --> 00:04:46,550
talk about how to fix that before we go

00:04:45,110 --> 00:04:49,060
on I'm going to be showing a fair amount

00:04:46,550 --> 00:04:51,800
of code that uses some es6 features in

00:04:49,060 --> 00:04:53,690
particular arrow functions you can think

00:04:51,800 --> 00:04:56,150
of them as just a shorthand if you look

00:04:53,690 --> 00:04:59,210
for that fat arrow there on the left

00:04:56,150 --> 00:05:01,040
hand side are the parameters on the

00:04:59,210 --> 00:05:03,110
right hand side is the return value so

00:05:01,040 --> 00:05:06,350
these two lines are equivalent take X

00:05:03,110 --> 00:05:07,880
return x times two there are some

00:05:06,350 --> 00:05:09,830
nuances about how error functions are

00:05:07,880 --> 00:05:11,510
different from normal functions but this

00:05:09,830 --> 00:05:14,290
is a j/s conference you can ask anyone

00:05:11,510 --> 00:05:16,220
else at your table and someone will know

00:05:14,290 --> 00:05:18,080
the second thing you're going to see a

00:05:16,220 --> 00:05:20,620
lot of our promises the signifier of

00:05:18,080 --> 00:05:24,230
promises are this dot then method

00:05:20,620 --> 00:05:26,030
promises are an official es6 codified

00:05:24,230 --> 00:05:28,010
way of handling a synchronicity in

00:05:26,030 --> 00:05:29,420
JavaScript we used to have to nest call

00:05:28,010 --> 00:05:31,850
back inside call back inside call back

00:05:29,420 --> 00:05:33,940
inside callback which worked but admit

00:05:31,850 --> 00:05:36,860
that the order of execution of our code

00:05:33,940 --> 00:05:38,120
wasn't a syntactic thing it wasn't this

00:05:36,860 --> 00:05:40,580
statement than this statement this since

00:05:38,120 --> 00:05:43,400
then this statement it was a side effect

00:05:40,580 --> 00:05:45,080
of the nesting of our code makes a code

00:05:43,400 --> 00:05:47,240
harder to reason about makes things

00:05:45,080 --> 00:05:49,700
harder air is hard to deal with promises

00:05:47,240 --> 00:05:51,410
let you just say do this dot then

00:05:49,700 --> 00:05:54,020
whenever that finishes call this

00:05:51,410 --> 00:05:55,880
callback then call this callback and if

00:05:54,020 --> 00:05:58,850
any of them fail pass the error to this

00:05:55,880 --> 00:06:00,710
handler you'll see this a lot fetch also

00:05:58,850 --> 00:06:03,830
if you haven't seen it promisee

00:06:00,710 --> 00:06:05,960
replacement for xml httprequest that's

00:06:03,830 --> 00:06:08,120
valid syntax you say fetched you give it

00:06:05,960 --> 00:06:11,720
a URL you can optionally pass like

00:06:08,120 --> 00:06:13,790
method post I cannot I'm a professional

00:06:11,720 --> 00:06:16,280
software developer I cannot write an xhr

00:06:13,790 --> 00:06:17,570
request by hand thus intact can anyone

00:06:16,280 --> 00:06:19,760
in the room do you remember the syntax

00:06:17,570 --> 00:06:22,840
well enough all right you turn to

00:06:19,760 --> 00:06:22,840
someone at your table improve it

00:06:22,970 --> 00:06:26,310
fetch on the other game fetch data you

00:06:25,350 --> 00:06:28,740
get a promise back the promise

00:06:26,310 --> 00:06:30,240
eventually returns the data promises are

00:06:28,740 --> 00:06:32,640
everywhere now that we have a way to

00:06:30,240 --> 00:06:33,780
handle a synchronicity you'll see them

00:06:32,640 --> 00:06:36,240
coming up in standards like fetch

00:06:33,780 --> 00:06:38,910
service workers push background sync the

00:06:36,240 --> 00:06:41,250
new es 2017 a sink and wait keywords are

00:06:38,910 --> 00:06:42,780
just syntactic sugar around promises so

00:06:41,250 --> 00:06:45,240
you'll have to understand how these work

00:06:42,780 --> 00:06:46,830
I really recommend investing the time to

00:06:45,240 --> 00:06:48,450
to go through some blog articles go

00:06:46,830 --> 00:06:51,870
through some experiments figure these

00:06:48,450 --> 00:06:54,510
things out so back on track reliability

00:06:51,870 --> 00:06:58,130
how does service workers help us solve

00:06:54,510 --> 00:07:00,390
reliability what's the service worker

00:06:58,130 --> 00:07:04,800
showing hands who here knows what a

00:07:00,390 --> 00:07:08,490
service worker is all right who here has

00:07:04,800 --> 00:07:10,050
used them in production oh okay so maybe

00:07:08,490 --> 00:07:11,970
if you can write an xhr by handed UV

00:07:10,050 --> 00:07:14,910
service workers in production I believe

00:07:11,970 --> 00:07:17,190
you on both of those counts there are

00:07:14,910 --> 00:07:19,230
people doing this it's it's available

00:07:17,190 --> 00:07:22,560
it's in the release versions of Firefox

00:07:19,230 --> 00:07:25,380
and Chrome and opera basically service

00:07:22,560 --> 00:07:26,490
workers are like script tags but for a

00:07:25,380 --> 00:07:28,530
whole domain instead of for an

00:07:26,490 --> 00:07:30,180
individual page so when you open a new

00:07:28,530 --> 00:07:32,160
tab the scripts on the page run you

00:07:30,180 --> 00:07:34,500
close the tab the scripts die service

00:07:32,160 --> 00:07:36,750
workers aren't quite like that service

00:07:34,500 --> 00:07:38,430
workers could be running without any

00:07:36,750 --> 00:07:40,410
tabs open at all or you could have 10

00:07:38,430 --> 00:07:45,180
tabs open all sharing the same service

00:07:40,410 --> 00:07:47,130
worker so it's a way to start providing

00:07:45,180 --> 00:07:49,260
an alternative to the page model of the

00:07:47,130 --> 00:07:50,340
web not a replacement for an alternative

00:07:49,260 --> 00:07:52,970
because there are some things in the

00:07:50,340 --> 00:07:54,870
page model just doesn't work for of

00:07:52,970 --> 00:07:56,490
course service workers are going to have

00:07:54,870 --> 00:07:58,770
some some superpowers if they can run

00:07:56,490 --> 00:07:59,730
without any tabs open and if they're

00:07:58,770 --> 00:08:02,070
going to be able to do things like

00:07:59,730 --> 00:08:04,080
making the web work offline so like any

00:08:02,070 --> 00:08:05,880
other powerful API service workers

00:08:04,080 --> 00:08:09,840
require a secure connection you have to

00:08:05,880 --> 00:08:12,570
have a TLS certificate show hands let's

00:08:09,840 --> 00:08:13,830
encrypt if people heard of used it okay

00:08:12,570 --> 00:08:15,000
for those of you I haven't let's encrypt

00:08:13,830 --> 00:08:16,260
as a joint venture between the

00:08:15,000 --> 00:08:19,340
Electronic Frontier Foundation and

00:08:16,260 --> 00:08:22,590
Mozilla to provide free TLS certificates

00:08:19,340 --> 00:08:24,240
that are trusted by every browser that

00:08:22,590 --> 00:08:26,310
are usable for anything private use

00:08:24,240 --> 00:08:29,340
personal use corporate use for profit

00:08:26,310 --> 00:08:30,990
whatever security should it shouldn't be

00:08:29,340 --> 00:08:33,839
a choice between security and your

00:08:30,990 --> 00:08:35,190
wallet so that's super great this tip if

00:08:33,839 --> 00:08:35,790
you remember nothing else is worth at

00:08:35,190 --> 00:08:38,460
least

00:08:35,790 --> 00:08:40,410
two thousand kronor which to put it in

00:08:38,460 --> 00:08:44,370
even further local terms is about for

00:08:40,410 --> 00:08:45,900
pizza and a coke so so you could either

00:08:44,370 --> 00:08:49,170
have a certificate or you could have a

00:08:45,900 --> 00:08:53,070
certificate and some pizza I know what I

00:08:49,170 --> 00:08:54,840
choose so how do these work you use a

00:08:53,070 --> 00:08:56,610
script tag to do can I have per page

00:08:54,840 --> 00:08:59,460
JavaScript for a service worker you have

00:08:56,610 --> 00:09:02,670
to install the service worker file using

00:08:59,460 --> 00:09:04,410
javascript so somewhere in a script tag

00:09:02,670 --> 00:09:05,790
you check for support so you do feature

00:09:04,410 --> 00:09:08,190
detection if service worker and

00:09:05,790 --> 00:09:09,840
navigator then navigate our service

00:09:08,190 --> 00:09:11,220
worker register and you pass it the

00:09:09,840 --> 00:09:13,800
script to your JavaScript or the path to

00:09:11,220 --> 00:09:15,630
your javascript file you can also set

00:09:13,800 --> 00:09:17,460
the scope of the service worker by

00:09:15,630 --> 00:09:19,620
default it would just be the folder that

00:09:17,460 --> 00:09:22,140
the worker itself is N and this kind of

00:09:19,620 --> 00:09:24,510
says what what page is my URL bar say

00:09:22,140 --> 00:09:26,760
and what service worker gets to control

00:09:24,510 --> 00:09:28,860
that page so by setting the scope to the

00:09:26,760 --> 00:09:29,940
root any page on my domain could

00:09:28,860 --> 00:09:32,760
potentially be controlled by this

00:09:29,940 --> 00:09:34,530
service worker you can have multiple

00:09:32,760 --> 00:09:36,030
service workers for your domain only one

00:09:34,530 --> 00:09:39,860
will work at a time and the most

00:09:36,030 --> 00:09:39,860
specific one is the one that's selected

00:09:40,490 --> 00:09:44,640
one of the most immediate things you

00:09:42,510 --> 00:09:45,840
might want to do is preload a cache we

00:09:44,640 --> 00:09:47,070
want to make the web work offline there

00:09:45,840 --> 00:09:48,060
are things you're going to want to have

00:09:47,070 --> 00:09:49,110
available you're going to want your

00:09:48,060 --> 00:09:52,410
stylesheet you're going to want your

00:09:49,110 --> 00:09:54,720
basic a pelagic a service worker because

00:09:52,410 --> 00:09:57,330
it's running in a separate thread it's

00:09:54,720 --> 00:10:01,050
running independent of tabs every API

00:09:57,330 --> 00:10:02,880
uses is event-based an asynchronous so

00:10:01,050 --> 00:10:05,340
when we do this install step the

00:10:02,880 --> 00:10:06,840
serviceworker file we downloaded saved

00:10:05,340 --> 00:10:08,970
in the browser and it'll start running

00:10:06,840 --> 00:10:10,590
the browser will then give it an install

00:10:08,970 --> 00:10:13,170
event so we can add an event listener

00:10:10,590 --> 00:10:15,200
for install and say alright don't

00:10:13,170 --> 00:10:18,360
resolve this init like wait until we

00:10:15,200 --> 00:10:21,900
open a cache and then add all these URLs

00:10:18,360 --> 00:10:24,030
to the cash the caches API you say

00:10:21,900 --> 00:10:25,590
caches that open and give it a name of a

00:10:24,030 --> 00:10:29,430
cash if it doesn't exist it gets created

00:10:25,590 --> 00:10:32,070
and then you get a cash reference to

00:10:29,430 --> 00:10:34,770
that opened cash and you can do things

00:10:32,070 --> 00:10:37,770
like add requests go and synthesize

00:10:34,770 --> 00:10:39,750
requests delete things you can inspect

00:10:37,770 --> 00:10:41,100
the whole cache the only things that

00:10:39,750 --> 00:10:43,410
ever appear in this cache are things

00:10:41,100 --> 00:10:44,820
that you put there it's subject to a

00:10:43,410 --> 00:10:46,740
normal browser quotas like you would see

00:10:44,820 --> 00:10:48,330
for index TV or other things if the

00:10:46,740 --> 00:10:49,059
browser ever needs more space it'll stop

00:10:48,330 --> 00:10:50,769
it will start

00:10:49,059 --> 00:10:53,379
dropping from the least recently used

00:10:50,769 --> 00:10:55,029
cash entire caches at once so you'll

00:10:53,379 --> 00:10:56,619
never have a situation where like half

00:10:55,029 --> 00:10:58,179
of your cash is missing either

00:10:56,619 --> 00:11:01,599
everything you put in there is there or

00:10:58,179 --> 00:11:03,159
nothing is there so I say all right on

00:11:01,599 --> 00:11:04,539
the install event go and cash these

00:11:03,159 --> 00:11:05,889
things for us they can be on other

00:11:04,539 --> 00:11:08,889
domains they could be other resources

00:11:05,889 --> 00:11:10,959
but we can say we want these files in

00:11:08,889 --> 00:11:13,569
the cache and then the service worker

00:11:10,959 --> 00:11:15,969
and this oh it's actually may be legible

00:11:13,569 --> 00:11:17,469
a screen is huge if you're looking at

00:11:15,969 --> 00:11:18,789
the slides yourself this is much more

00:11:17,469 --> 00:11:24,489
legible but more important thing is just

00:11:18,789 --> 00:11:27,399
these these graphics the serviceworker

00:11:24,489 --> 00:11:30,279
can act as a proxy inside the users

00:11:27,399 --> 00:11:32,469
browser that can intercept and modify

00:11:30,279 --> 00:11:34,749
requests it can intercept and modify

00:11:32,469 --> 00:11:36,239
responses so when a page goes and

00:11:34,749 --> 00:11:38,079
request something like a style sheet

00:11:36,239 --> 00:11:40,239
instead of going directly to the

00:11:38,079 --> 00:11:44,349
Internet first a fetch event will happen

00:11:40,239 --> 00:11:45,369
inside the serviceworker the

00:11:44,349 --> 00:11:46,659
serviceworker could say all right well I

00:11:45,369 --> 00:11:47,649
have that my cash I can respond from the

00:11:46,659 --> 00:11:51,489
cache and that request will never

00:11:47,649 --> 00:11:52,779
actually hit the network and it codes

00:11:51,489 --> 00:11:53,829
pretty straightforward you can say all

00:11:52,779 --> 00:11:57,159
right add an event listener for fetch

00:11:53,829 --> 00:11:59,439
and then event respond with caches match

00:11:57,159 --> 00:12:02,829
so caches match will search every cash

00:11:59,439 --> 00:12:05,199
in that domain look for that events

00:12:02,829 --> 00:12:08,979
request so that request object has the

00:12:05,199 --> 00:12:11,409
URL the mode the method the headers and

00:12:08,979 --> 00:12:13,379
then if we get a response back if the

00:12:11,409 --> 00:12:17,019
response is truth if we had a cache hit

00:12:13,379 --> 00:12:18,939
return from the cash otherwise go and

00:12:17,019 --> 00:12:22,539
fetch out to the network just resend

00:12:18,939 --> 00:12:26,409
that request it looks a little bit like

00:12:22,539 --> 00:12:27,609
this started a page page once a file it

00:12:26,409 --> 00:12:30,009
goes to the serviceworker service worker

00:12:27,609 --> 00:12:31,629
says wait I'm going to check my cash if

00:12:30,009 --> 00:12:35,079
that fails I'll go to the network and

00:12:31,629 --> 00:12:36,549
I'll return that to the browser you can

00:12:35,079 --> 00:12:38,169
also flip this and say actually I want

00:12:36,549 --> 00:12:40,359
to try to go to the network first but if

00:12:38,169 --> 00:12:41,919
that fails show the cash version so you

00:12:40,359 --> 00:12:45,669
you're preferring the up-to-date version

00:12:41,919 --> 00:12:48,189
and falling back to the cash you could

00:12:45,669 --> 00:12:50,109
even build a hybrid that says I want to

00:12:48,189 --> 00:12:53,169
try I want to immediately return the

00:12:50,109 --> 00:12:54,249
cash version but in parallel I want to

00:12:53,169 --> 00:12:57,209
go to the network and get an updated

00:12:54,249 --> 00:12:57,209
version for the next time

00:12:58,410 --> 00:13:02,190
as an example I've got a video here of

00:13:00,720 --> 00:13:03,660
something happening on phone but there's

00:13:02,190 --> 00:13:06,470
only one web so we're going to do it on

00:13:03,660 --> 00:13:09,269
my desktop my normal browser instead

00:13:06,470 --> 00:13:11,040
this is pokedex org which I previously

00:13:09,269 --> 00:13:13,529
didn't understand anything about but

00:13:11,040 --> 00:13:16,860
then Pokemon go happened and I can tell

00:13:13,529 --> 00:13:18,480
you all about it so no one loss in the

00:13:16,860 --> 00:13:20,069
author of pouch DB you wrote this as a

00:13:18,480 --> 00:13:23,370
demo to show all sorts of techniques for

00:13:20,069 --> 00:13:25,620
making sites work well offline one of

00:13:23,370 --> 00:13:27,300
the things you'll notice is that in the

00:13:25,620 --> 00:13:30,180
inspector all of the style sheets using

00:13:27,300 --> 00:13:32,160
CSS spriting but it's just a normal link

00:13:30,180 --> 00:13:36,870
rel stylesheet tag and it's a normal

00:13:32,160 --> 00:13:40,680
script source j s main DJ s from the

00:13:36,870 --> 00:13:41,850
perspective of this website it has no

00:13:40,680 --> 00:13:43,259
idea that there's going to be a

00:13:41,850 --> 00:13:44,819
serviceworker between it and the

00:13:43,259 --> 00:13:51,389
internet it has no idea it's behind a

00:13:44,819 --> 00:13:54,000
proxy but if i turn my Wi-Fi off what's

00:13:51,389 --> 00:13:55,529
the network tab that's you know this

00:13:54,000 --> 00:14:01,589
isn't surprising javascript can do this

00:13:55,529 --> 00:14:03,720
but what if i refresh the page but still

00:14:01,589 --> 00:14:04,949
worked if you look over the transferred

00:14:03,720 --> 00:14:06,269
we can see that this is coming from a

00:14:04,949 --> 00:14:07,699
serviceworker instead of the network and

00:14:06,269 --> 00:14:11,819
we can actually go into any of these and

00:14:07,699 --> 00:14:13,709
see the response headers we can see the

00:14:11,819 --> 00:14:15,630
actual response this looks to the

00:14:13,709 --> 00:14:17,730
browser just like a normal network

00:14:15,630 --> 00:14:20,040
requests all the headers are there the

00:14:17,730 --> 00:14:21,360
body is there it went out and just

00:14:20,040 --> 00:14:22,620
instead of making it all the way to the

00:14:21,360 --> 00:14:24,060
internet before it realized it didn't

00:14:22,620 --> 00:14:25,620
have a network connection the

00:14:24,060 --> 00:14:27,750
serviceworker stuff didn't said wait I

00:14:25,620 --> 00:14:30,660
have that my cash I'm going to return

00:14:27,750 --> 00:14:34,339
that in Firefox you can also go into the

00:14:30,660 --> 00:14:36,329
storage panel look into cash storage and

00:14:34,339 --> 00:14:38,339
see all of the files that are actually

00:14:36,329 --> 00:14:40,980
cached by the site you also go into

00:14:38,339 --> 00:14:42,959
index DB and see all the the pokemon

00:14:40,980 --> 00:14:46,170
data is stored in there this whole site

00:14:42,959 --> 00:14:48,209
is open source if you click on the about

00:14:46,170 --> 00:14:51,059
link you get that super great resource

00:14:48,209 --> 00:14:58,740
to look at and learn if we actually go

00:14:51,059 --> 00:15:01,920
into the the worker another broke i'm

00:14:58,740 --> 00:15:04,199
using a nightly build with some weird

00:15:01,920 --> 00:15:05,699
settings so i'll go into about debugging

00:15:04,199 --> 00:15:09,300
in firefox which will list all the

00:15:05,699 --> 00:15:11,640
workers and so i can start this worker

00:15:09,300 --> 00:15:14,400
up i can debug it

00:15:11,640 --> 00:15:17,130
and then in here all right it's all

00:15:14,400 --> 00:15:19,170
Babel if I'd whatever if we go into the

00:15:17,130 --> 00:15:20,490
repo will do this later or you can do

00:15:19,170 --> 00:15:23,520
this later on your own you'll see that

00:15:20,490 --> 00:15:27,630
the code that Nolan's using literally is

00:15:23,520 --> 00:15:29,730
these seven lines six lines we're saying

00:15:27,630 --> 00:15:32,550
look in the cache if there's a response

00:15:29,730 --> 00:15:33,900
return it otherwise go to the network so

00:15:32,550 --> 00:15:36,510
you can do this for real and it it makes

00:15:33,900 --> 00:15:42,570
a website that you know I can close it I

00:15:36,510 --> 00:15:44,970
can open it again pokedex org just as if

00:15:42,570 --> 00:15:46,260
I was online I'm not if I was in a

00:15:44,970 --> 00:15:48,510
browser that didn't support service

00:15:46,260 --> 00:15:50,310
workers like Safari and I try to go a

00:15:48,510 --> 00:15:52,410
pokedex torg not connected to the

00:15:50,310 --> 00:15:53,790
Internet so this is an interesting

00:15:52,410 --> 00:15:55,770
property of service workers the first

00:15:53,790 --> 00:15:57,120
time you hit the site you don't have the

00:15:55,770 --> 00:15:59,970
serviceworker either even if your

00:15:57,120 --> 00:16:02,010
browser supports it so your site always

00:15:59,970 --> 00:16:04,230
has to work as if service workers

00:16:02,010 --> 00:16:05,700
weren't there but if they are you get a

00:16:04,230 --> 00:16:08,040
better experience when you come back and

00:16:05,700 --> 00:16:09,840
when Apple finally decides to support

00:16:08,040 --> 00:16:11,580
service workers so far our users will

00:16:09,840 --> 00:16:14,190
also get a better experience without you

00:16:11,580 --> 00:16:15,330
having to change any code the the nice

00:16:14,190 --> 00:16:16,920
thing about service workers is that it

00:16:15,330 --> 00:16:18,870
falls back to a traditional Internet

00:16:16,920 --> 00:16:20,460
experience instead of being something

00:16:18,870 --> 00:16:22,290
that locks people out you're not

00:16:20,460 --> 00:16:26,040
splitting the web into the serviceworker

00:16:22,290 --> 00:16:32,130
people and the people that don't let's

00:16:26,040 --> 00:16:33,750
turn Wi-Fi back on service workers also

00:16:32,130 --> 00:16:35,640
give you complete programmatic control

00:16:33,750 --> 00:16:38,070
over requests and responses you don't

00:16:35,640 --> 00:16:40,590
just have to do simple caching there's a

00:16:38,070 --> 00:16:43,500
link in the slides to this project SW

00:16:40,590 --> 00:16:46,050
delta which will intercept requests and

00:16:43,500 --> 00:16:49,290
append the version you have so if you

00:16:46,050 --> 00:16:51,090
ask for URL main DJ s and the version

00:16:49,290 --> 00:16:53,160
your cash is one dot one dot one this

00:16:51,090 --> 00:16:54,900
will attend a query parameter cash one

00:16:53,160 --> 00:16:56,400
that one not one and then it has a

00:16:54,900 --> 00:16:58,560
server-side implementation it looks at

00:16:56,400 --> 00:17:01,020
the difference between the latest

00:16:58,560 --> 00:17:03,450
version and the cash version creates a

00:17:01,020 --> 00:17:05,040
diff ships the diff back the service

00:17:03,450 --> 00:17:07,110
worker applies the diff to the the

00:17:05,040 --> 00:17:09,540
cached version puts that back in the

00:17:07,110 --> 00:17:13,140
cache and then returns that and so this

00:17:09,540 --> 00:17:14,570
is a way to kind of ship deltas and save

00:17:13,140 --> 00:17:18,120
a lot of band let's save a lot of time

00:17:14,570 --> 00:17:20,339
for questionable increases are

00:17:18,120 --> 00:17:21,510
non-trivial increases in complexity but

00:17:20,339 --> 00:17:23,730
it gives you an idea of the sorts of

00:17:21,510 --> 00:17:25,410
creative uses you could use this for

00:17:23,730 --> 00:17:31,590
it's not just

00:17:25,410 --> 00:17:35,190
or this file as it is unmodified the

00:17:31,590 --> 00:17:36,960
second big gap with web versus apps is

00:17:35,190 --> 00:17:38,220
engagement throughout the rest of the

00:17:36,960 --> 00:17:40,980
conference think about how many times

00:17:38,220 --> 00:17:42,150
you take your phone out turn on the

00:17:40,980 --> 00:17:45,000
screen just glance at what notifications

00:17:42,150 --> 00:17:46,530
are there or how many times you pull

00:17:45,000 --> 00:17:48,450
your phone out of your pocket because it

00:17:46,530 --> 00:17:52,890
vibrated to tell you you how to

00:17:48,450 --> 00:17:54,060
notification apps can tell you when

00:17:52,890 --> 00:17:55,140
they're done with something you don't

00:17:54,060 --> 00:17:56,910
have to go in and check I don't have to

00:17:55,140 --> 00:17:59,040
go and see has dr finished uploading

00:17:56,910 --> 00:18:01,260
this file by switching the tab or

00:17:59,040 --> 00:18:03,660
refreshing it it'll tell me when it's

00:18:01,260 --> 00:18:06,210
done and the web has had the ability to

00:18:03,660 --> 00:18:07,260
provide notifications and they can show

00:18:06,210 --> 00:18:09,480
up just like any other native

00:18:07,260 --> 00:18:11,580
notification but they've been limited to

00:18:09,480 --> 00:18:12,810
being on a single page as long as you

00:18:11,580 --> 00:18:16,010
have the page open it can give you a

00:18:12,810 --> 00:18:19,230
desktop notification slack does this

00:18:16,010 --> 00:18:21,270
service workers get you away from that

00:18:19,230 --> 00:18:23,820
page model they give you a script that

00:18:21,270 --> 00:18:24,870
can run independent of the tabs so you

00:18:23,820 --> 00:18:27,780
could actually have a service worker

00:18:24,870 --> 00:18:30,000
that when it got an event show in a

00:18:27,780 --> 00:18:31,710
notification even if the tab wasn't open

00:18:30,000 --> 00:18:34,980
so you can close your gmail tab and

00:18:31,710 --> 00:18:36,510
still get notifications of new mail in

00:18:34,980 --> 00:18:38,610
fact Facebook is doing this in

00:18:36,510 --> 00:18:40,140
production these are notifications

00:18:38,610 --> 00:18:42,630
native notifications on Android coming

00:18:40,140 --> 00:18:47,100
from facebook com without the browser

00:18:42,630 --> 00:18:48,810
being open at all again service workers

00:18:47,100 --> 00:18:52,620
are vented so we'll use the push event

00:18:48,810 --> 00:18:54,330
for this when we get a push event we say

00:18:52,620 --> 00:18:58,380
okay show notification with a title and

00:18:54,330 --> 00:18:59,550
a body done so we've looked at three

00:18:58,380 --> 00:19:01,590
events so far and service workers

00:18:59,550 --> 00:19:03,450
install which is when you first get the

00:19:01,590 --> 00:19:04,920
serviceworker fetch which is when a

00:19:03,450 --> 00:19:07,800
network request goes out trigger by an

00:19:04,920 --> 00:19:10,410
image tag or a script tag or an xhr push

00:19:07,800 --> 00:19:13,410
which is when the site wants to notify

00:19:10,410 --> 00:19:15,720
the browser somehow there are many other

00:19:13,410 --> 00:19:18,390
events that exist or will be coming a

00:19:15,720 --> 00:19:19,530
background sync is one that says wake up

00:19:18,390 --> 00:19:21,990
the service worker and let it do some

00:19:19,530 --> 00:19:23,820
work when I come back online there are

00:19:21,990 --> 00:19:25,350
proposals and ideas for things like

00:19:23,820 --> 00:19:27,570
geofencing wake up the service worker

00:19:25,350 --> 00:19:30,150
and let it run a call back when I enter

00:19:27,570 --> 00:19:33,060
a geographic area or wake it up at this

00:19:30,150 --> 00:19:34,650
time and date the service worker story

00:19:33,060 --> 00:19:38,100
is much more generic and much more

00:19:34,650 --> 00:19:39,030
general a general purpose than the

00:19:38,100 --> 00:19:43,830
specific application

00:19:39,030 --> 00:19:47,220
of make it offline suggests so where

00:19:43,830 --> 00:19:50,550
does this push up and come from well

00:19:47,220 --> 00:19:52,670
first when you push it'll look like a

00:19:50,550 --> 00:19:54,750
completely neat browser native OS native

00:19:52,670 --> 00:19:57,600
notification right inside it you can

00:19:54,750 --> 00:19:58,590
disable notifications because that can

00:19:57,600 --> 00:20:02,700
be annoying of course you have to give

00:19:58,590 --> 00:20:04,980
permission the way you get permission is

00:20:02,700 --> 00:20:07,710
in your JavaScript on your page you say

00:20:04,980 --> 00:20:09,000
navigator serviceworker ready then once

00:20:07,710 --> 00:20:13,560
the serviceworker is ready you can call

00:20:09,000 --> 00:20:14,970
push manager subscribe and then if the

00:20:13,560 --> 00:20:17,490
user clicks ok you get a subscription

00:20:14,970 --> 00:20:19,590
object that subscription object has all

00:20:17,490 --> 00:20:23,160
the metadata you need to show

00:20:19,590 --> 00:20:24,090
notifications on your users computers so

00:20:23,160 --> 00:20:26,190
what you'll want to do is you want to

00:20:24,090 --> 00:20:28,950
take that subscription object turn into

00:20:26,190 --> 00:20:30,750
JSON post it to your back-end somewhere

00:20:28,950 --> 00:20:32,880
and save it have a database row that

00:20:30,750 --> 00:20:38,340
says this user account has this

00:20:32,880 --> 00:20:39,390
subscription metadata Mozilla has a

00:20:38,340 --> 00:20:42,720
website called the serviceworker

00:20:39,390 --> 00:20:48,210
cookbook at the ever so klever service

00:20:42,720 --> 00:20:51,330
work ers domain that has annotated

00:20:48,210 --> 00:20:53,820
examples of all of this for the push

00:20:51,330 --> 00:20:55,800
example what you'll see is when you get

00:20:53,820 --> 00:20:59,400
that subscription back inside is this

00:20:55,800 --> 00:21:02,610
enormously ridiculous URL at updates top

00:20:59,400 --> 00:21:09,390
pushed at services mozilla com and if

00:21:02,610 --> 00:21:16,440
you post to that URL and if the Wi-Fi

00:21:09,390 --> 00:21:19,590
works there we go hello world I get a

00:21:16,440 --> 00:21:21,210
notification you see that the domain

00:21:19,590 --> 00:21:23,910
returned in 201 created which lets me

00:21:21,210 --> 00:21:26,370
know that that message was successfully

00:21:23,910 --> 00:21:29,640
in queued for delivery to the browser do

00:21:26,370 --> 00:21:30,930
it again and because these are native

00:21:29,640 --> 00:21:33,060
operating system messages they show up

00:21:30,930 --> 00:21:37,440
in my notification drawer and dismiss

00:21:33,060 --> 00:21:41,480
them and mass what the heck is happening

00:21:37,440 --> 00:21:41,480
here where did this URL come from I

00:21:42,320 --> 00:21:46,710
learned graph is about an hour ago and

00:21:44,610 --> 00:21:51,570
built a graph for us instead of a

00:21:46,710 --> 00:21:53,490
whiteboard what happens is the website

00:21:51,570 --> 00:21:55,539
does that get

00:21:53,490 --> 00:21:57,659
request it says I want to be able to

00:21:55,539 --> 00:22:00,279
show you service show you notifications

00:21:57,659 --> 00:22:02,770
the browser asks the user the user can

00:22:00,279 --> 00:22:04,600
sense the browser will go up to a third

00:22:02,770 --> 00:22:06,760
party service operated by your browser

00:22:04,600 --> 00:22:08,830
manufacturer so chrome ones what chrome

00:22:06,760 --> 00:22:11,740
run runs one of these Mozilla runs one

00:22:08,830 --> 00:22:14,529
of these I'll say hey I need a URL that

00:22:11,740 --> 00:22:17,230
I can give to a site to notify me that's

00:22:14,529 --> 00:22:20,080
number two you for service will generate

00:22:17,230 --> 00:22:21,850
a random URL set it back to the browser

00:22:20,080 --> 00:22:23,919
the browser will generate some

00:22:21,850 --> 00:22:26,649
cryptographic keys client-side and pass

00:22:23,919 --> 00:22:29,470
the URL and the crypto keys in step 4

00:22:26,649 --> 00:22:32,440
back to the website that's where this

00:22:29,470 --> 00:22:34,929
massive string comes from that's in the

00:22:32,440 --> 00:22:36,279
the subscription object then when the

00:22:34,929 --> 00:22:38,049
website wants to communicate with the

00:22:36,279 --> 00:22:40,330
browser does it through this push

00:22:38,049 --> 00:22:41,980
service so it sends a message to that

00:22:40,330 --> 00:22:44,260
service and that service access message

00:22:41,980 --> 00:22:46,620
queue because your laptop may be turned

00:22:44,260 --> 00:22:49,210
off your phone maybe an airplane mode

00:22:46,620 --> 00:22:50,770
you'll notice that i sent the header TTL

00:22:49,210 --> 00:22:52,570
60 this says that I want this to be

00:22:50,770 --> 00:22:54,549
queued for a maximum of 60 seconds

00:22:52,570 --> 00:22:56,710
before it expires so if user comes

00:22:54,549 --> 00:23:01,419
online in the next 60 seconds deliver

00:22:56,710 --> 00:23:02,620
the message otherwise drop it of course

00:23:01,419 --> 00:23:04,029
this is all open source you want to see

00:23:02,620 --> 00:23:07,059
how this works our implementation is out

00:23:04,029 --> 00:23:09,610
there the benefit to this architecture

00:23:07,059 --> 00:23:11,169
is it gives you a persistent location to

00:23:09,610 --> 00:23:13,870
queue messages compared to you trying to

00:23:11,169 --> 00:23:15,100
talk to the browser directly and it

00:23:13,870 --> 00:23:17,590
saves battery life because the browser

00:23:15,100 --> 00:23:19,210
can have a single WebSocket connected to

00:23:17,590 --> 00:23:20,890
this one service instead of an arbitrary

00:23:19,210 --> 00:23:22,419
number so for instance on Android

00:23:20,890 --> 00:23:24,429
Firefox for Android actually uses the

00:23:22,419 --> 00:23:26,140
push service will go and use Google

00:23:24,429 --> 00:23:28,149
Cloud messaging because an android phone

00:23:26,140 --> 00:23:31,470
will always have a connection to that

00:23:28,149 --> 00:23:33,789
service so we kind of proxy to that

00:23:31,470 --> 00:23:35,679
again everything in here is encrypted we

00:23:33,789 --> 00:23:38,980
don't want access we don't want to

00:23:35,679 --> 00:23:40,870
anything about what metadata or what

00:23:38,980 --> 00:23:42,100
messages you're sending we don't want

00:23:40,870 --> 00:23:44,740
have that responsibility we don't want

00:23:42,100 --> 00:23:48,070
to have that potential for privacy

00:23:44,740 --> 00:23:49,779
invasion so without any message body all

00:23:48,070 --> 00:23:52,419
this does is just wake up the push event

00:23:49,779 --> 00:23:53,679
and say hey I've got something if you

00:23:52,419 --> 00:23:55,750
want to send a message by you have to

00:23:53,679 --> 00:23:58,360
encrypt it to the keys that the browser

00:23:55,750 --> 00:24:02,080
passes to you at the same time it sends

00:23:58,360 --> 00:24:05,919
the URL if we take this example again we

00:24:02,080 --> 00:24:06,790
go back into about debugging so you can

00:24:05,919 --> 00:24:08,290
see that all the service work

00:24:06,790 --> 00:24:09,790
are asleep right now because they wake

00:24:08,290 --> 00:24:11,230
up they handle their event they go back

00:24:09,790 --> 00:24:13,330
to sleep that's all you had those event

00:24:11,230 --> 00:24:15,640
wait and tell and event respond with

00:24:13,330 --> 00:24:18,250
functions or methods they say like wait

00:24:15,640 --> 00:24:19,620
until this is done until you turn the

00:24:18,250 --> 00:24:24,820
service worker off like I'm not done yet

00:24:19,620 --> 00:24:26,590
so I start this up and I hit debug we

00:24:24,820 --> 00:24:27,820
see the push of nth listener show

00:24:26,590 --> 00:24:33,660
notification let's go ahead and set a

00:24:27,820 --> 00:24:33,660
breakpoint there I come over here thing

00:24:34,290 --> 00:24:39,070
whoops sorry that's a different instance

00:24:37,080 --> 00:24:45,400
alright so I got the break point there

00:24:39,070 --> 00:24:46,870
let's say I'm offline so normally if i

00:24:45,400 --> 00:24:48,220
want to receive these push events i

00:24:46,870 --> 00:24:49,630
would need to be connected to that

00:24:48,220 --> 00:24:52,390
service but now that i'm offline i don't

00:24:49,630 --> 00:24:53,620
have that connection inside about

00:24:52,390 --> 00:24:55,150
debugging I've got this push button

00:24:53,620 --> 00:25:01,180
which will actually synthesize a push

00:24:55,150 --> 00:25:04,600
event client side so I can hit this wow

00:25:01,180 --> 00:25:05,740
why isn't the debugger working so this

00:25:04,600 --> 00:25:08,740
is what happens when you run a nightly

00:25:05,740 --> 00:25:10,990
build this literally worked last week

00:25:08,740 --> 00:25:12,970
but we have been splitting Firefox into

00:25:10,990 --> 00:25:16,840
multiple processes and that sometimes

00:25:12,970 --> 00:25:17,950
causes issues I will file a bug about

00:25:16,840 --> 00:25:19,270
that once we're gone and I will tweet

00:25:17,950 --> 00:25:21,730
the link you can all follow it and be

00:25:19,270 --> 00:25:28,720
like this messed up dan on stage please

00:25:21,730 --> 00:25:31,030
fix faster yeah oh wait no I'm an idiot

00:25:28,720 --> 00:25:32,080
hang on check this out that's the

00:25:31,030 --> 00:25:33,940
breakpoint inside the body because the

00:25:32,080 --> 00:25:35,200
functions are even registered right or

00:25:33,940 --> 00:25:37,600
the listeners always been already been

00:25:35,200 --> 00:25:40,780
registered so if i run this now bing it

00:25:37,600 --> 00:25:42,310
works another thing that's messing up on

00:25:40,780 --> 00:25:43,780
stage is apple will turn on do not

00:25:42,310 --> 00:25:45,220
disturb mode when you connect to a

00:25:43,780 --> 00:25:46,870
projector so i've been sitting there

00:25:45,220 --> 00:25:48,040
like why aren't there any notifications

00:25:46,870 --> 00:25:50,740
and they're all just piling up in the

00:25:48,040 --> 00:25:54,100
background alright so we've got this

00:25:50,740 --> 00:25:58,420
event we look at it we can see it's a

00:25:54,100 --> 00:26:00,070
push on it we can pop this open you know

00:25:58,420 --> 00:26:02,290
see there's no data associate with it

00:26:00,070 --> 00:26:05,490
whatever it's a debugger you can step

00:26:02,290 --> 00:26:08,890
through it play with that on your own

00:26:05,490 --> 00:26:12,940
the last thing at manifests these are

00:26:08,890 --> 00:26:15,090
how we solve installation what do I mean

00:26:12,940 --> 00:26:15,090
by that

00:26:15,700 --> 00:26:19,340
when we think about apps native apps you

00:26:18,080 --> 00:26:20,480
can install them you can put them on

00:26:19,340 --> 00:26:22,549
your home screen you can rearrange them

00:26:20,480 --> 00:26:23,990
give them a place of prominence on your

00:26:22,549 --> 00:26:25,070
device if I'm going to be using the bus

00:26:23,990 --> 00:26:27,350
schedule a lot if I'm going to be using

00:26:25,070 --> 00:26:30,799
the weather website a lot I want to have

00:26:27,350 --> 00:26:32,480
one tap access to that the web has

00:26:30,799 --> 00:26:34,309
historically either you have bookmarks

00:26:32,480 --> 00:26:36,740
which like gets super ugly 16 by 16

00:26:34,309 --> 00:26:38,929
images scaled up to be the size of

00:26:36,740 --> 00:26:40,429
whatever the launcher needs to be or you

00:26:38,929 --> 00:26:42,140
have to go into your browser then into

00:26:40,429 --> 00:26:43,429
the bookmark menu then go past all the

00:26:42,140 --> 00:26:45,470
things you swear you were going to read

00:26:43,429 --> 00:26:47,419
later and dig out the the thing you

00:26:45,470 --> 00:26:49,850
wanted it'd be way nicer if we get add

00:26:47,419 --> 00:26:51,679
stuff to the home screen that's what

00:26:49,850 --> 00:26:54,200
manifests do you manifest act kind of

00:26:51,679 --> 00:26:57,320
like head tags they provide metadata but

00:26:54,200 --> 00:27:00,049
for multi-page contexts like web apps or

00:26:57,320 --> 00:27:02,120
larger sites this is the production

00:27:00,049 --> 00:27:05,779
manifester most of it for flipkart which

00:27:02,120 --> 00:27:06,950
is an indian e-commerce retailer in the

00:27:05,779 --> 00:27:10,330
head of their document they'll say link

00:27:06,950 --> 00:27:13,399
rel manifest and point to this JSON file

00:27:10,330 --> 00:27:16,419
then they can provide a name a short

00:27:13,399 --> 00:27:19,130
name icons with various sizes and types

00:27:16,419 --> 00:27:22,039
they can set the start URL to say the

00:27:19,130 --> 00:27:24,320
experience for the site begins on this

00:27:22,039 --> 00:27:27,500
page even if you're on some other page

00:27:24,320 --> 00:27:29,210
later and you want to to interact with

00:27:27,500 --> 00:27:31,159
this as an app it knows that that's the

00:27:29,210 --> 00:27:34,159
home that's the initial starting

00:27:31,159 --> 00:27:35,480
location you can launch our lock the

00:27:34,159 --> 00:27:37,909
orientation into a portrait so when you

00:27:35,480 --> 00:27:41,210
launch the app the phone turns the

00:27:37,909 --> 00:27:43,010
correct way you can set display to stand

00:27:41,210 --> 00:27:45,640
alone which hides the URL bar and makes

00:27:43,010 --> 00:27:47,899
it look more like a nap appy experience

00:27:45,640 --> 00:27:50,840
you can set a theme color background

00:27:47,899 --> 00:27:53,770
color this display stand alone thing is

00:27:50,840 --> 00:27:56,390
kind of interesting this is a video of

00:27:53,770 --> 00:28:01,760
adding flipkart like to an android home

00:27:56,390 --> 00:28:03,529
screen menu add to homescreen add if you

00:28:01,760 --> 00:28:04,940
go home you can see the icon pops up the

00:28:03,529 --> 00:28:06,890
name and icon are taken from the

00:28:04,940 --> 00:28:08,870
manifest it looks just like a native app

00:28:06,890 --> 00:28:12,140
when you tap it you get a launch screen

00:28:08,870 --> 00:28:14,270
just like a native app and there's no

00:28:12,140 --> 00:28:17,210
browser Chrome there's no URL bar no

00:28:14,270 --> 00:28:18,890
back forward button if you weren't a

00:28:17,210 --> 00:28:21,080
developer if you hadn't seen that

00:28:18,890 --> 00:28:25,070
initial step you would have no idea that

00:28:21,080 --> 00:28:26,149
this wasn't a native application in fact

00:28:25,070 --> 00:28:27,320
a very well could have been I in the

00:28:26,149 --> 00:28:27,929
same exact technologies you could be

00:28:27,320 --> 00:28:29,220
using corto

00:28:27,929 --> 00:28:30,960
or something and have built this already

00:28:29,220 --> 00:28:31,950
as a native app it's just now you can

00:28:30,960 --> 00:28:36,840
get there from the web instead of

00:28:31,950 --> 00:28:38,610
proprietary paths but that's also kind

00:28:36,840 --> 00:28:40,289
of weird because there's no URL bar and

00:28:38,610 --> 00:28:44,940
the web is the web and how do you get

00:28:40,289 --> 00:28:47,730
back to it the manifest spec is I think

00:28:44,940 --> 00:28:49,799
the weakest of this trio of service

00:28:47,730 --> 00:28:51,360
workers push and manifests because we

00:28:49,799 --> 00:28:52,950
don't know how to surface it we don't

00:28:51,360 --> 00:28:55,350
know how to tell users it like hey this

00:28:52,950 --> 00:28:56,460
app those website wants to act like an

00:28:55,350 --> 00:28:58,950
app it wants to be on your home screen

00:28:56,460 --> 00:29:01,080
it's capable of doing that it knows how

00:28:58,950 --> 00:29:02,879
to work offline and once you're in there

00:29:01,080 --> 00:29:04,200
we don't really know how to say actually

00:29:02,879 --> 00:29:06,629
if you want to send somebody link here's

00:29:04,200 --> 00:29:08,039
how you get the URL we've experiment

00:29:06,629 --> 00:29:10,529
with long pressing but that conflicts

00:29:08,039 --> 00:29:13,700
with other things opera has recently

00:29:10,529 --> 00:29:16,740
experimented with a rather interesting

00:29:13,700 --> 00:29:21,179
option so where you swipe down and then

00:29:16,740 --> 00:29:23,190
to the side and that pops from the app

00:29:21,179 --> 00:29:25,830
experience into the browser experience

00:29:23,190 --> 00:29:30,590
and then to get back they have this

00:29:25,830 --> 00:29:32,730
little mobile phone badge by the URL bar

00:29:30,590 --> 00:29:33,899
and soul I don't know clearly there's a

00:29:32,730 --> 00:29:36,450
need for this sort of stuff there's a

00:29:33,899 --> 00:29:38,070
need to be able to say here's my site's

00:29:36,450 --> 00:29:39,570
name here's where it starts it really

00:29:38,070 --> 00:29:42,029
only works in portrait mode though if

00:29:39,570 --> 00:29:43,230
you're doing that you're maybe haven't

00:29:42,029 --> 00:29:46,860
learned the lesson that the web can show

00:29:43,230 --> 00:29:48,240
up on a fridge but I don't know about

00:29:46,860 --> 00:29:51,059
this whole display stand alone thing

00:29:48,240 --> 00:29:55,619
because is the web without URLs still

00:29:51,059 --> 00:29:57,869
the web at all if you can't cut and

00:29:55,619 --> 00:30:00,720
paste if you can't edit a URL like what

00:29:57,869 --> 00:30:02,009
what is that so I don't know but we need

00:30:00,720 --> 00:30:03,539
the rest of the metadata and we'll

00:30:02,009 --> 00:30:05,519
figure it out this is somewhere that you

00:30:03,539 --> 00:30:06,929
as developers by adopting this by

00:30:05,519 --> 00:30:08,669
experiment with this can actually

00:30:06,929 --> 00:30:10,889
provide a lot of meaningful input and

00:30:08,669 --> 00:30:14,399
shape the direction of the web in the

00:30:10,889 --> 00:30:16,379
the links on the slides repo and github

00:30:14,399 --> 00:30:18,899
there's a link to the Firefox bug we've

00:30:16,379 --> 00:30:20,490
just now started preparing to implement

00:30:18,899 --> 00:30:23,700
display stand alone in Firefox for

00:30:20,490 --> 00:30:24,779
Android there are a lot of open

00:30:23,700 --> 00:30:25,649
questions you can come in you can

00:30:24,779 --> 00:30:27,629
actually say well I've been thinking

00:30:25,649 --> 00:30:30,200
about this of experiment with this this

00:30:27,629 --> 00:30:32,309
doesn't work well this does work well so

00:30:30,200 --> 00:30:33,860
it's something that we have to we have

00:30:32,309 --> 00:30:36,240
to learn how to get there together

00:30:33,860 --> 00:30:39,090
something that that's been very humbling

00:30:36,240 --> 00:30:40,289
as a as a browser manufacturers we're

00:30:39,090 --> 00:30:41,130
finally starting to realize that we

00:30:40,289 --> 00:30:44,310
don't know how

00:30:41,130 --> 00:30:47,490
to build websites we know how to build

00:30:44,310 --> 00:30:49,230
web browsers but like those are big C++

00:30:47,490 --> 00:30:51,810
code bases that are compiled and shipped

00:30:49,230 --> 00:30:53,450
over the wire every couple of weeks or

00:30:51,810 --> 00:30:57,690
every couple days for for hot patches

00:30:53,450 --> 00:30:58,890
that don't resemble the web at all we've

00:30:57,690 --> 00:31:00,720
had experiments like app cache that

00:30:58,890 --> 00:31:03,000
totally failed app cache work great if

00:31:00,720 --> 00:31:04,800
you were used it exactly how we wanted

00:31:03,000 --> 00:31:06,420
you to use it to make the web work

00:31:04,800 --> 00:31:09,480
offline but if you want to do something

00:31:06,420 --> 00:31:11,880
fancy like that patching the response in

00:31:09,480 --> 00:31:14,490
flight or if you want to say I want

00:31:11,880 --> 00:31:17,610
specifically these things cached as a

00:31:14,490 --> 00:31:19,230
fallback not as the primary resource we

00:31:17,610 --> 00:31:20,880
didn't have have the tools for that so

00:31:19,230 --> 00:31:21,990
the the browser manufacturers have

00:31:20,880 --> 00:31:23,580
started trying to say all right let's

00:31:21,990 --> 00:31:26,970
give the developers let's give you all

00:31:23,580 --> 00:31:28,650
in this room and a set of tools a tool

00:31:26,970 --> 00:31:30,180
box instead of a specific tool will give

00:31:28,650 --> 00:31:31,860
you a tool box and we'll see what you do

00:31:30,180 --> 00:31:33,780
and we'll try to learn from that it's

00:31:31,860 --> 00:31:36,780
the same way that jQuery influenced the

00:31:33,780 --> 00:31:38,850
document query selector method there was

00:31:36,780 --> 00:31:40,680
a time when jquery and prototype and

00:31:38,850 --> 00:31:42,420
moved to mootools and all these other

00:31:40,680 --> 00:31:44,880
libraries competed on how fast they

00:31:42,420 --> 00:31:47,040
could parse CSS selectors to find Dom

00:31:44,880 --> 00:31:48,600
nodes because before those libraries the

00:31:47,040 --> 00:31:51,870
way you selected Dom nodes was using an

00:31:48,600 --> 00:31:53,460
xml query language called xpath because

00:31:51,870 --> 00:31:56,100
browser manufacturers don't know how to

00:31:53,460 --> 00:31:57,510
make websites but we can learn and when

00:31:56,100 --> 00:32:00,560
we see these emergent properties and we

00:31:57,510 --> 00:32:02,760
see people build things that make sense

00:32:00,560 --> 00:32:03,480
then we can codify it so that's kind of

00:32:02,760 --> 00:32:05,250
where we're starting with service

00:32:03,480 --> 00:32:06,990
workers here's a bunch of tools or

00:32:05,250 --> 00:32:10,410
toolbox we'll see what tools come out of

00:32:06,990 --> 00:32:13,890
that the important things that we try to

00:32:10,410 --> 00:32:15,180
work with the web I've seen people light

00:32:13,890 --> 00:32:17,370
up at the suggestion they can hide the

00:32:15,180 --> 00:32:19,620
URL bar like oh that's wonderful i can

00:32:17,370 --> 00:32:21,240
finally disguise the fact that i'm using

00:32:19,620 --> 00:32:24,270
the web I don't have to be a shame that

00:32:21,240 --> 00:32:26,400
i'm using the web anymore and i think

00:32:24,270 --> 00:32:29,340
that's that's not going to work

00:32:26,400 --> 00:32:31,800
long-term the web has a lot of a lot of

00:32:29,340 --> 00:32:33,480
quirks but when we work with them we get

00:32:31,800 --> 00:32:34,560
to a better place so think about these

00:32:33,480 --> 00:32:36,750
tools those things that you can use to

00:32:34,560 --> 00:32:40,140
enhance your experience not replace the

00:32:36,750 --> 00:32:42,570
web's experience i'm going to be around

00:32:40,140 --> 00:32:44,550
all all day all day tomorrow please come

00:32:42,570 --> 00:32:46,050
ask me more questions like I said the

00:32:44,550 --> 00:32:48,480
the slides are online i tweeted the link

00:32:46,050 --> 00:32:50,940
we also have two other m'zullians here

00:32:48,480 --> 00:32:52,980
sitting in the back floki and ender who

00:32:50,940 --> 00:32:54,570
will be doing a free workshop on these

00:32:52,980 --> 00:32:56,759
technologies on monday

00:32:54,570 --> 00:32:58,980
meetup.com / javascript iceland the

00:32:56,759 --> 00:33:02,159
registration will open tomorrow just

00:32:58,980 --> 00:33:03,990
after noon and kudos to these folks who

00:33:02,159 --> 00:33:06,450
shared photos of the fridge in the pizza

00:33:03,990 --> 00:33:10,940
so thank you so much I have stickers up

00:33:06,450 --> 00:33:10,940

YouTube URL: https://www.youtube.com/watch?v=JF-e12S2ZAY


