Title: Mihai Cîrlănaru: Speech Recognition on the Web - JSConf Iceland 2016
Publication date: 2016-09-16
Playlist: JSConf Iceland 2016
Description: 
	We've all been impressed by the likes of Siri, Google Now, and Cortana, for understanding our spoken words, but is it possible to take advantage of the powerful speech recognition behind such services on the web? This talk will explore the Web Speech API and how it can empower web apps for improved accessibility and new ways of user interaction.
Captions: 
	00:00:15,439 --> 00:00:21,480
thank you very much for having me here

00:00:17,849 --> 00:00:23,579
and I hope people are not yet sleepy so

00:00:21,480 --> 00:00:27,000
just to make sure we'll do another

00:00:23,579 --> 00:00:31,070
exercise can I have everyone raising

00:00:27,000 --> 00:00:33,570
your left hands and now both hands and

00:00:31,070 --> 00:00:43,500
stay there for a second i promised my

00:00:33,570 --> 00:00:46,010
mom awesome thank you guys so thanks so

00:00:43,500 --> 00:00:49,340
much for having me here it's amazing

00:00:46,010 --> 00:00:52,560
Iceland Reykjavik it's beautiful and

00:00:49,340 --> 00:00:55,710
it's also quite awesome to be surrounded

00:00:52,560 --> 00:00:59,460
by so many JavaScript enthusiasts eager

00:00:55,710 --> 00:01:01,800
to learn and share their experiences for

00:00:59,460 --> 00:01:04,589
the next half an hour hopefully less

00:01:01,800 --> 00:01:06,689
I'll be quick to not keep you longer

00:01:04,589 --> 00:01:09,299
here I'll be talking to you about the

00:01:06,689 --> 00:01:12,479
topic I'm very passionate about speech

00:01:09,299 --> 00:01:15,240
recognition and most excitingly of all

00:01:12,479 --> 00:01:18,479
I'll show you how you can empower web

00:01:15,240 --> 00:01:22,950
applications with voice triggered

00:01:18,479 --> 00:01:29,430
interactions first off let me just tell

00:01:22,950 --> 00:01:32,250
you a bit about myself one second so I

00:01:29,430 --> 00:01:36,570
work for sports technology company

00:01:32,250 --> 00:01:40,290
called huddle which builds analytics

00:01:36,570 --> 00:01:49,970
tools for Cote coaches and athletes at

00:01:40,290 --> 00:01:49,970
all level to help them win and second

00:01:53,200 --> 00:01:59,320
have a technical difficulty here

00:02:08,350 --> 00:02:19,660
just my spit always happens speaker

00:02:11,110 --> 00:02:23,860
notes going on so going back I want to

00:02:19,660 --> 00:02:25,720
tell you a short story so I've been

00:02:23,860 --> 00:02:28,090
playing around with speech recognition

00:02:25,720 --> 00:02:31,090
for about four years when I was studying

00:02:28,090 --> 00:02:34,780
it for my master's degree and I was

00:02:31,090 --> 00:02:38,050
quite intrigued by how hard of a problem

00:02:34,780 --> 00:02:42,180
this is just imagine all the various

00:02:38,050 --> 00:02:45,250
factors like accent pronunciation

00:02:42,180 --> 00:02:48,760
articulation roughness masala tea pitch

00:02:45,250 --> 00:02:55,810
volume and speed that influences how it

00:02:48,760 --> 00:02:59,220
performs in practice speech looks a lot

00:02:55,810 --> 00:03:02,080
like this it's continuous sound wave

00:02:59,220 --> 00:03:04,990
whose amplitude varies based on the

00:03:02,080 --> 00:03:08,530
sounds involve the speech recognition

00:03:04,990 --> 00:03:10,480
process typically goes through the

00:03:08,530 --> 00:03:13,870
following steps first is pleased the

00:03:10,480 --> 00:03:17,020
sound wave by silences into what are

00:03:13,870 --> 00:03:20,980
called utterances it's basically words

00:03:17,020 --> 00:03:23,940
or other non linguistic sounds then each

00:03:20,980 --> 00:03:27,580
utterance is split split in frames and

00:03:23,940 --> 00:03:30,130
for each frame we have something that's

00:03:27,580 --> 00:03:32,440
called a feature vector which is

00:03:30,130 --> 00:03:35,710
basically a sort of number representing

00:03:32,440 --> 00:03:39,910
distinguishable properties of that sound

00:03:35,710 --> 00:03:42,700
and once we have all these things we

00:03:39,910 --> 00:03:46,450
employ a classifier that takes a series

00:03:42,700 --> 00:03:48,790
of models to identify and do the

00:03:46,450 --> 00:03:51,430
matching process based on them those

00:03:48,790 --> 00:03:55,950
properties and figure out what the

00:03:51,430 --> 00:03:59,350
speech is about so just a quick brief

00:03:55,950 --> 00:04:02,860
overview have an acoustic model that

00:03:59,350 --> 00:04:05,170
contains coup stick properties for

00:04:02,860 --> 00:04:07,900
distinct units of sound a phonetic

00:04:05,170 --> 00:04:10,300
dictionary with maps the words to their

00:04:07,900 --> 00:04:12,730
respective phonemes as they're called

00:04:10,300 --> 00:04:15,340
these units of sounds that constitute

00:04:12,730 --> 00:04:20,799
words and the language model that allows

00:04:15,340 --> 00:04:22,170
to make the search space easier based on

00:04:20,799 --> 00:04:25,950
already recognized where

00:04:22,170 --> 00:04:30,330
to be able to find the relevant ones

00:04:25,950 --> 00:04:32,630
based on probability quicker and the

00:04:30,330 --> 00:04:36,390
speech if you wonder it is actually

00:04:32,630 --> 00:04:40,020
hello world just in case you're

00:04:36,390 --> 00:04:43,100
wondering in practice speech recognizers

00:04:40,020 --> 00:04:48,210
are assessed based on two things

00:04:43,100 --> 00:04:52,200
accuracy and speed for accuracy it's the

00:04:48,210 --> 00:04:55,050
word error rate which looks at the ratio

00:04:52,200 --> 00:04:57,540
between the insertions substitutions and

00:04:55,050 --> 00:04:59,820
deletions over the total number of words

00:04:57,540 --> 00:05:01,350
in the reference feet and you can see

00:04:59,820 --> 00:05:05,160
quickly in an example there what that

00:05:01,350 --> 00:05:08,180
means and speed is the real time factor

00:05:05,160 --> 00:05:11,010
the decoding time over the speech time

00:05:08,180 --> 00:05:12,960
so now just to make sure I didn't lose

00:05:11,010 --> 00:05:15,360
you can we do that exercise again so

00:05:12,960 --> 00:05:21,270
everyone left hand quickly right hand

00:05:15,360 --> 00:05:23,850
and wait a bit awesome perfect so let's

00:05:21,270 --> 00:05:25,680
see some use cases so probably a lot of

00:05:23,850 --> 00:05:28,110
you are familiar and you might already

00:05:25,680 --> 00:05:32,820
use personal assistant apps like Siri

00:05:28,110 --> 00:05:36,270
and in practice speech recognition

00:05:32,820 --> 00:05:41,400
engines like the one that powers empower

00:05:36,270 --> 00:05:43,650
Siri are of two types the ones that are

00:05:41,400 --> 00:05:45,330
speaker independent so basically

00:05:43,650 --> 00:05:47,160
regardless of the speaker so all the

00:05:45,330 --> 00:05:48,510
things like pronunciation accent they

00:05:47,160 --> 00:05:50,700
don't matter they're supposed to

00:05:48,510 --> 00:05:54,300
recognize their speech and speaker

00:05:50,700 --> 00:05:56,790
dependent which basically it involves an

00:05:54,300 --> 00:05:59,310
extra training step for a particular

00:05:56,790 --> 00:06:01,860
speaker where they need to read some

00:05:59,310 --> 00:06:03,930
predefined template sentences to

00:06:01,860 --> 00:06:08,730
fine-tune the recognition process and

00:06:03,930 --> 00:06:12,980
increase the accuracy and just to

00:06:08,730 --> 00:06:15,660
continue on with my story earlier

00:06:12,980 --> 00:06:18,060
towards the end of my studies I had a

00:06:15,660 --> 00:06:19,740
great opportunity to put in practice

00:06:18,060 --> 00:06:25,050
what I learned about speech recognition

00:06:19,740 --> 00:06:26,460
in the research team at Mozilla and the

00:06:25,050 --> 00:06:30,210
project was to build a speech

00:06:26,460 --> 00:06:31,350
recognition engine for Firefox OS and

00:06:30,210 --> 00:06:33,900
for those of you who are not familiar

00:06:31,350 --> 00:06:35,280
with Firefox OS does the mobile

00:06:33,900 --> 00:06:37,920
operating system at

00:06:35,280 --> 00:06:40,350
missoula built and they're heavily

00:06:37,920 --> 00:06:43,860
developing it that's based on web

00:06:40,350 --> 00:06:46,350
technologies so being a research project

00:06:43,860 --> 00:06:47,700
for focus was more on exploring what's

00:06:46,350 --> 00:06:49,650
even possible in terms of speech

00:06:47,700 --> 00:06:52,290
recognition on the web mainly using

00:06:49,650 --> 00:06:56,100
javascript rather than having something

00:06:52,290 --> 00:06:58,110
solid solid production ready so during

00:06:56,100 --> 00:07:00,330
my time there I've built a pure

00:06:58,110 --> 00:07:03,450
JavaScript speech recognizer that

00:07:00,330 --> 00:07:07,050
performs the speech recognition process

00:07:03,450 --> 00:07:09,360
on the client without the need of any

00:07:07,050 --> 00:07:11,280
cloud-based solution that where you just

00:07:09,360 --> 00:07:15,030
send the speech and it you get the

00:07:11,280 --> 00:07:20,669
results back and I would show you a

00:07:15,030 --> 00:07:22,830
quick demo of that feel free to ignore

00:07:20,669 --> 00:07:25,740
all the details there they're not very

00:07:22,830 --> 00:07:29,270
relevant for the scope of this talk so

00:07:25,740 --> 00:07:33,540
the idea is I'll show you an example for

00:07:29,270 --> 00:07:36,720
recognizing digits which is made

00:07:33,540 --> 00:07:40,350
possible given four digits the models

00:07:36,720 --> 00:07:42,060
the language model phonetic dictionary

00:07:40,350 --> 00:07:45,419
and acoustic model are quite small and

00:07:42,060 --> 00:07:53,000
can be easily loaded on the client so

00:07:45,419 --> 00:07:55,710
let's try out some numbers three two one

00:07:53,000 --> 00:07:58,800
here you go and as you can see in the

00:07:55,710 --> 00:08:00,979
console it basically shows you the

00:07:58,800 --> 00:08:04,080
result it also shows it on the page and

00:08:00,979 --> 00:08:06,960
some performance I was talking about

00:08:04,080 --> 00:08:09,450
real time factor here you can see 0.0 82

00:08:06,960 --> 00:08:11,520
basically a real factor of 1 means the

00:08:09,450 --> 00:08:13,080
decoding happens in real time it takes

00:08:11,520 --> 00:08:17,250
the same time as it took for the speech

00:08:13,080 --> 00:08:21,360
and for this example you also see three

00:08:17,250 --> 00:08:23,039
different solutions which are one

00:08:21,360 --> 00:08:25,530
different than the other that's

00:08:23,039 --> 00:08:29,370
basically in the process of recognizing

00:08:25,530 --> 00:08:31,140
speech it takes different probabilities

00:08:29,370 --> 00:08:33,030
and you see some various kors there

00:08:31,140 --> 00:08:36,210
which might not make much sense but it

00:08:33,030 --> 00:08:38,250
ranks the possible outcomes and in this

00:08:36,210 --> 00:08:40,890
case as I chose here the what's called

00:08:38,250 --> 00:08:44,830
an best hypothesis I chose free so I got

00:08:40,890 --> 00:08:50,530
the top free awesome

00:08:44,830 --> 00:08:52,360
going back to the this project that I

00:08:50,530 --> 00:08:55,540
built if you are interested to know how

00:08:52,360 --> 00:08:58,510
it works and all these kind of details

00:08:55,540 --> 00:09:02,020
feel free to fly me after the stock or

00:08:58,510 --> 00:09:07,750
ping me on Twitter or the J's comp slack

00:09:02,020 --> 00:09:11,590
and little did I know around the same

00:09:07,750 --> 00:09:14,230
time I was researching this and building

00:09:11,590 --> 00:09:17,500
that speech recognizer at Mozilla a team

00:09:14,230 --> 00:09:22,020
for from google were writing up a spec

00:09:17,500 --> 00:09:24,430
for what they call the web speech API is

00:09:22,020 --> 00:09:26,250
basically defining JavaScript API is

00:09:24,430 --> 00:09:29,530
that would allow developers to

00:09:26,250 --> 00:09:33,160
incorporate speech recognition into

00:09:29,530 --> 00:09:37,780
their web pages and about a year later

00:09:33,160 --> 00:09:42,720
in 2013 these were supported

00:09:37,780 --> 00:09:45,880
experimentally in chrome version 25 and

00:09:42,720 --> 00:09:48,340
these were building up on top of a

00:09:45,880 --> 00:09:52,120
feature that chrome released from

00:09:48,340 --> 00:09:54,970
version 11 which was to have speech

00:09:52,120 --> 00:09:58,780
input with this attribute called X

00:09:54,970 --> 00:10:04,990
WebKit speech for input fields to allow

00:09:58,780 --> 00:10:11,080
to users to use the voice to input data

00:10:04,990 --> 00:10:14,650
into forms and now let's see how these

00:10:11,080 --> 00:10:16,750
api is looking practice you first need

00:10:14,650 --> 00:10:20,230
to instantiate the speech recognition

00:10:16,750 --> 00:10:23,740
object and since the api's are still

00:10:20,230 --> 00:10:29,310
experimental they do need a browser

00:10:23,740 --> 00:10:32,860
prefix for chrome not for firefox though

00:10:29,310 --> 00:10:35,500
some of the most relevant configuration

00:10:32,860 --> 00:10:38,620
attributes for speech recognition are

00:10:35,500 --> 00:10:42,780
the language one which allows you to set

00:10:38,620 --> 00:10:46,230
the language that will be recognized and

00:10:42,780 --> 00:10:50,350
chrome google supports 32 of them

00:10:46,230 --> 00:10:52,330
including icelandic as i found out an

00:10:50,350 --> 00:10:56,920
attribute that allows you to specify if

00:10:52,330 --> 00:10:58,300
you are interested in interim results so

00:10:56,920 --> 00:11:07,740
as the speech

00:10:58,300 --> 00:11:11,080
goes on you get results up might liver

00:11:07,740 --> 00:11:14,700
also the continuous if the speech should

00:11:11,080 --> 00:11:18,310
be listening continuously and finally

00:11:14,700 --> 00:11:19,990
the max alternatives which is something

00:11:18,310 --> 00:11:26,260
similar to what I showed you with the

00:11:19,990 --> 00:11:28,060
end best hypothesis and there are a few

00:11:26,260 --> 00:11:30,010
event handlers provided for the speech

00:11:28,060 --> 00:11:31,930
recognition in their face and I would

00:11:30,010 --> 00:11:34,720
recommend you check the full API at that

00:11:31,930 --> 00:11:36,820
link there however the minimum needed to

00:11:34,720 --> 00:11:38,500
get you started our own result which

00:11:36,820 --> 00:11:41,890
gets called whenever you have a speech

00:11:38,500 --> 00:11:43,390
recognition result on no match when no

00:11:41,890 --> 00:11:50,620
match was found for the current speech

00:11:43,390 --> 00:11:53,590
and one error when an error look for in

00:11:50,620 --> 00:11:57,010
terms of controlling the recognizer have

00:11:53,590 --> 00:12:02,800
a pretty self-explanatory API start and

00:11:57,010 --> 00:12:04,810
stop and before we wrap things up I just

00:12:02,800 --> 00:12:13,060
want to show you how the speech

00:12:04,810 --> 00:12:16,920
recognition result format looks like so

00:12:13,060 --> 00:12:21,940
this is basically the event that comes

00:12:16,920 --> 00:12:25,510
into the own result event handler and it

00:12:21,940 --> 00:12:27,700
has a few properties is final which says

00:12:25,510 --> 00:12:30,400
if does the final result that the

00:12:27,700 --> 00:12:34,090
recognizer has the high confidence about

00:12:30,400 --> 00:12:36,910
the index in the result so that the

00:12:34,090 --> 00:12:39,210
speech has multiple results and then an

00:12:36,910 --> 00:12:43,150
array of speech recognition results

00:12:39,210 --> 00:12:46,720
which contain again various properties

00:12:43,150 --> 00:12:49,060
but the one you're interested in is the

00:12:46,720 --> 00:12:50,560
transcript which tells you what it

00:12:49,060 --> 00:12:52,720
actually recognized those who has one

00:12:50,560 --> 00:12:57,240
that says the confidence which gives you

00:12:52,720 --> 00:13:03,720
confidence score so this seems quite

00:12:57,240 --> 00:13:07,780
straightforward and did anyone notice

00:13:03,720 --> 00:13:12,330
anything and I guess you probably

00:13:07,780 --> 00:13:12,330
already see as a spoiler on the

00:13:13,680 --> 00:13:20,350
for the past few slides I was actually

00:13:17,680 --> 00:13:26,890
not clicking anything to switch between

00:13:20,350 --> 00:13:31,360
them i was using speech recognition to

00:13:26,890 --> 00:13:33,160
talk about speech recognition and let me

00:13:31,360 --> 00:13:46,660
just reset this so that you see it

00:13:33,160 --> 00:13:52,180
happening live so as i was saying come

00:13:46,660 --> 00:13:57,640
on you can do it as I was saying I was

00:13:52,180 --> 00:14:02,380
using speech recognition to talk about

00:13:57,640 --> 00:14:06,160
speech recognition and how meta is that

00:14:02,380 --> 00:14:12,190
right it's quite cool and you can see as

00:14:06,160 --> 00:14:20,130
a type well it likes to make jokes as I

00:14:12,190 --> 00:14:22,870
talk as well so the grayed out text is

00:14:20,130 --> 00:14:27,520
what I was mentioning earlier the

00:14:22,870 --> 00:14:29,880
interim results and now we detected a

00:14:27,520 --> 00:14:34,030
keyword and it decided to go crazy on me

00:14:29,880 --> 00:14:41,290
so the grayed out text was the interim

00:14:34,030 --> 00:14:45,370
results and start out again perfect here

00:14:41,290 --> 00:14:50,320
you go and when it becomes wide that

00:14:45,370 --> 00:14:58,350
becomes the final result exactly you

00:14:50,320 --> 00:15:01,650
know it best so you might be wondering

00:14:58,350 --> 00:15:06,100
can I use this now is where is it behind

00:15:01,650 --> 00:15:09,430
those like crazy browser flags and that

00:15:06,100 --> 00:15:13,710
no user will know how to turn on when

00:15:09,430 --> 00:15:13,710
they're using your application and

00:15:15,570 --> 00:15:23,020
unfortunately the support is not that

00:15:19,750 --> 00:15:25,390
great it's only chrome and opera that's

00:15:23,020 --> 00:15:29,500
poured it out of the box

00:15:25,390 --> 00:15:33,610
and Firefox with the special web speech

00:15:29,500 --> 00:15:36,190
recognition flag and as far as I know

00:15:33,610 --> 00:15:41,290
Microsoft is working on adding support

00:15:36,190 --> 00:15:45,100
for that and that might be unfortunate

00:15:41,290 --> 00:15:47,500
but as we all know with web api's takes

00:15:45,100 --> 00:15:51,880
a while until they become the norm and

00:15:47,500 --> 00:15:55,570
all the browsers implement them and on

00:15:51,880 --> 00:15:59,800
that note I hope you will use this

00:15:55,570 --> 00:16:02,550
knowledge to build very exciting apps so

00:15:59,800 --> 00:16:02,550

YouTube URL: https://www.youtube.com/watch?v=FDsPUNlANkQ


