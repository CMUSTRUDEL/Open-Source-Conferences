Title: Katrina Uychaco: Spinning up an Electron App - Desktop Apps in JavaScript - JSConf Iceland 2016
Publication date: 2016-09-16
Playlist: JSConf Iceland 2016
Description: 
	Building a compelling desktop app experience doesn’t have to be a major undertaking; Electron is a free and open source framework from GitHub that allows you to build desktop applications using the HTML, CSS, and JavaScript skills you already know.

In this talk, we’ll look at how Electron works, explore some of its most useful APIs, and be entertained by a dancing BB8 Sphero robot, who will be helping to demonstrate some of the fun and interesting things you can do with Electron. You'll leave the session knowing how you can get started building your own cross-platform desktop apps with ease.

Electron
http://electron.atom.io/

BB8 Demo App
https://github.com/kuychaco/bb8-electron-app
Captions: 
	00:00:12,410 --> 00:00:20,400
thank you can everybody hear me okay

00:00:16,670 --> 00:00:24,029
okay great um thank you all for coming I

00:00:20,400 --> 00:00:26,430
hope you had a nice lunch um so again my

00:00:24,029 --> 00:00:28,800
name is Katrina Chaco and I'm an

00:00:26,430 --> 00:00:31,040
engineer at github and I work on Adam

00:00:28,800 --> 00:00:33,450
github free and open source text editor

00:00:31,040 --> 00:00:37,530
but today I'm here to talk to you about

00:00:33,450 --> 00:00:39,300
electron and so can I get a quick raise

00:00:37,530 --> 00:00:40,829
of hands before we start how many of you

00:00:39,300 --> 00:00:43,950
before hearing about this talk had

00:00:40,829 --> 00:00:47,010
already heard of electron awesome and

00:00:43,950 --> 00:00:50,430
how many of you have tried building

00:00:47,010 --> 00:00:52,710
something using electron also awesome

00:00:50,430 --> 00:00:55,500
any chance anyone here in the audience

00:00:52,710 --> 00:01:00,060
has tried to use electron to control a

00:00:55,500 --> 00:01:01,620
robot yeah we have one person okay this

00:01:00,060 --> 00:01:04,799
is what we're going to do today I

00:01:01,620 --> 00:01:07,860
brought my trusty assistant bb-8 Sphero

00:01:04,799 --> 00:01:09,810
robot here and he is going to help

00:01:07,860 --> 00:01:11,009
demonstrate some of the fun and

00:01:09,810 --> 00:01:14,670
interesting things that we can do with

00:01:11,009 --> 00:01:17,340
electron but first we're going to talk

00:01:14,670 --> 00:01:20,789
about what electron is and how it came

00:01:17,340 --> 00:01:22,890
to be so electron is a library that

00:01:20,789 --> 00:01:24,710
allows you to build cross-platform

00:01:22,890 --> 00:01:29,609
desktop apps using web technologies

00:01:24,710 --> 00:01:32,189
javascript HTML and CSS and it was born

00:01:29,609 --> 00:01:34,670
out of github desire to build Adam it's

00:01:32,189 --> 00:01:36,659
free and open source text editor and

00:01:34,670 --> 00:01:39,689
again this is what I have the pleasure

00:01:36,659 --> 00:01:42,780
working on and github decided to build

00:01:39,689 --> 00:01:45,389
Adam using web technologies because the

00:01:42,780 --> 00:01:48,359
dream was to build the ultimate tool for

00:01:45,389 --> 00:01:51,090
writing software so something that was

00:01:48,359 --> 00:01:53,729
highly customizable and hackable much

00:01:51,090 --> 00:01:59,429
like Emacs and vim but packaged in a

00:01:53,729 --> 00:02:01,409
nice beautiful easy-to-use GUI so no

00:01:59,429 --> 00:02:04,649
matter where you're at whether it's your

00:02:01,409 --> 00:02:07,469
first day writing code or you're an

00:02:04,649 --> 00:02:11,880
experienced hacker Adam is designed to

00:02:07,469 --> 00:02:16,430
be a tool suited to your needs thus Adam

00:02:11,880 --> 00:02:18,840
was written in languages of the web and

00:02:16,430 --> 00:02:21,300
because while native desktop UI

00:02:18,840 --> 00:02:22,860
technologies come and go with time the

00:02:21,300 --> 00:02:23,550
web is a standard that becomes more

00:02:22,860 --> 00:02:27,240
capable and

00:02:23,550 --> 00:02:29,580
buddhist with each passing year so it

00:02:27,240 --> 00:02:31,950
made sense to write adam in a technology

00:02:29,580 --> 00:02:35,460
that was approachable and accessible to

00:02:31,950 --> 00:02:37,200
many and it would adam was written in

00:02:35,460 --> 00:02:39,570
web technologies and open source so that

00:02:37,200 --> 00:02:42,030
anyone could hack on it and get have

00:02:39,570 --> 00:02:44,160
realized that the technology used to

00:02:42,030 --> 00:02:46,260
enable adam to be built in HTML

00:02:44,160 --> 00:02:50,700
Javascript would be useful to other

00:02:46,260 --> 00:02:53,130
developers so electron was extracted

00:02:50,700 --> 00:02:57,530
from adam khor and open source does its

00:02:53,130 --> 00:03:07,020
own library made available to the public

00:02:57,530 --> 00:03:09,900
so um electron so electron is a library

00:03:07,020 --> 00:03:12,230
that combines chromium which is the main

00:03:09,900 --> 00:03:15,780
part of the chrome web browser and

00:03:12,230 --> 00:03:20,040
nodejs to allow you to build desktop

00:03:15,780 --> 00:03:29,880
apps that run across Mac Windows and

00:03:20,040 --> 00:03:31,739
Linux and it's a library that and it

00:03:29,880 --> 00:03:34,560
aims to make the hard parts of desktop

00:03:31,739 --> 00:03:38,040
app development easy like managing

00:03:34,560 --> 00:03:40,940
automatic updates dealing with native

00:03:38,040 --> 00:03:44,220
operating system menus and dialogues

00:03:40,940 --> 00:03:47,730
handling crash reporting and profiling

00:03:44,220 --> 00:03:49,680
and debugging and if your web developer

00:03:47,730 --> 00:03:51,330
you're probably familiar with the pain

00:03:49,680 --> 00:03:56,100
of dealing with cross-browser

00:03:51,330 --> 00:04:00,810
compatibility but with electron all you

00:03:56,100 --> 00:04:02,540
need to do is develop for Chrome and you

00:04:00,810 --> 00:04:08,310
have an application that works across

00:04:02,540 --> 00:04:09,989
platforms and electron is kept very up

00:04:08,310 --> 00:04:11,520
to date with the latest versions of

00:04:09,989 --> 00:04:13,200
chromium so whenever there is a new

00:04:11,520 --> 00:04:15,480
version of chromium the electronic team

00:04:13,200 --> 00:04:18,330
works hard to release a new version of

00:04:15,480 --> 00:04:21,299
electron that uses it within a couple

00:04:18,330 --> 00:04:22,770
months or so so you get access to all of

00:04:21,299 --> 00:04:25,919
the latest and greatest chromium

00:04:22,770 --> 00:04:29,070
features you can use most of the es6

00:04:25,919 --> 00:04:31,320
features and you also have CSS variables

00:04:29,070 --> 00:04:33,650
and source maps they come right out of

00:04:31,320 --> 00:04:33,650
the box

00:04:33,740 --> 00:04:39,139
and since each electron app window is

00:04:36,800 --> 00:04:41,930
just a chrome page you have access to

00:04:39,139 --> 00:04:44,660
Chrome's powerful debugging tools so

00:04:41,930 --> 00:04:47,720
this is Adam and you can see that on the

00:04:44,660 --> 00:04:50,900
bottom we have devtools open you can use

00:04:47,720 --> 00:04:53,990
the timeline take heap snapshots you can

00:04:50,900 --> 00:04:55,310
do interactive debugging and these are

00:04:53,990 --> 00:04:57,050
all extremely helpful while building

00:04:55,310 --> 00:05:01,030
desktop apps just as they are while

00:04:57,050 --> 00:05:04,490
building web apps so as I mentioned

00:05:01,030 --> 00:05:07,069
electron is free and open source and

00:05:04,490 --> 00:05:08,960
it's being used to build a variety of

00:05:07,069 --> 00:05:11,259
different types of apps there are

00:05:08,960 --> 00:05:15,650
several editors in addition to Adam a

00:05:11,259 --> 00:05:17,470
brave web browser chat client it's being

00:05:15,650 --> 00:05:23,659
used at companies like Microsoft

00:05:17,470 --> 00:05:26,060
Facebook slack and docker and so now

00:05:23,659 --> 00:05:28,220
let's talk a bit about how electron

00:05:26,060 --> 00:05:29,479
works we're going to talk about it in

00:05:28,220 --> 00:05:34,190
the context of the app that we're going

00:05:29,479 --> 00:05:35,960
to walk through today so um like I

00:05:34,190 --> 00:05:39,380
mentioned today we're going to build an

00:05:35,960 --> 00:05:44,030
app that we will use to control bb-8

00:05:39,380 --> 00:05:46,699
here and when we start the app the

00:05:44,030 --> 00:05:49,430
process that is started is known as the

00:05:46,699 --> 00:05:53,050
main process you can think of this as a

00:05:49,430 --> 00:05:56,860
typical node process but with additional

00:05:53,050 --> 00:05:59,300
electron api's that allow you to control

00:05:56,860 --> 00:06:04,520
components of your operating systems you

00:05:59,300 --> 00:06:07,819
I so we can do things like add a an icon

00:06:04,520 --> 00:06:11,030
to our menu bar and when we click on

00:06:07,819 --> 00:06:15,080
this icon the main process will then

00:06:11,030 --> 00:06:16,759
create a browser window and thus browser

00:06:15,080 --> 00:06:20,000
window will have an associated renderer

00:06:16,759 --> 00:06:23,210
process and you can think of the render

00:06:20,000 --> 00:06:26,270
process as basically a typical chrome

00:06:23,210 --> 00:06:29,150
page but with note integrations built

00:06:26,270 --> 00:06:31,310
right into it and you also have other

00:06:29,150 --> 00:06:35,030
electron a P is available to you in the

00:06:31,310 --> 00:06:38,659
renderer process you can create as many

00:06:35,030 --> 00:06:40,849
renderer processes as you like and you

00:06:38,659 --> 00:06:44,659
can even create an invisible renderer

00:06:40,849 --> 00:06:47,240
process that just execute JavaScript in

00:06:44,659 --> 00:06:51,229
the background and doesn't affect

00:06:47,240 --> 00:06:53,750
performance of your application and in

00:06:51,229 --> 00:06:55,400
our app today our main process will also

00:06:53,750 --> 00:06:59,870
be connecting with bb-8 through

00:06:55,400 --> 00:07:02,840
bluetooth and so now let's take a closer

00:06:59,870 --> 00:07:04,849
look at all of these processes like I

00:07:02,840 --> 00:07:07,240
mentioned the renderer process is

00:07:04,849 --> 00:07:09,259
associated with the UI of our app and

00:07:07,240 --> 00:07:12,229
we're just going to have a few buttons

00:07:09,259 --> 00:07:14,569
it's going to be a menu bar app and when

00:07:12,229 --> 00:07:16,160
you click the button then bb-8 is going

00:07:14,569 --> 00:07:22,069
to do something fun and entertain us a

00:07:16,160 --> 00:07:24,259
bit and so the question is how do the

00:07:22,069 --> 00:07:26,419
two processes or the main process and

00:07:24,259 --> 00:07:28,099
all the renderer processes interact well

00:07:26,419 --> 00:07:31,400
all the process our processes are

00:07:28,099 --> 00:07:33,500
completely isolated so the only way to

00:07:31,400 --> 00:07:37,490
communicate between them is through IPC

00:07:33,500 --> 00:07:40,130
or inter process communication so when

00:07:37,490 --> 00:07:42,440
we click on the button that tells bb-8

00:07:40,130 --> 00:07:44,509
to do a dance we're going to send an IPC

00:07:42,440 --> 00:07:46,460
message over to the main process from

00:07:44,509 --> 00:07:48,349
the renderer process and then the main

00:07:46,460 --> 00:07:51,080
process is going to communicate with

00:07:48,349 --> 00:07:56,840
bb-8 over bluetooth and have them do a

00:07:51,080 --> 00:08:00,710
little dance for us okay so it's time to

00:07:56,840 --> 00:08:02,360
look at some code and first off I want

00:08:00,710 --> 00:08:05,870
to mention that all of the code is

00:08:02,360 --> 00:08:09,740
already up on github it's a repo under

00:08:05,870 --> 00:08:11,810
my user name KO Chaco and you can feel

00:08:09,740 --> 00:08:13,430
free to take a look at this and you can

00:08:11,810 --> 00:08:15,530
look at the commit history to see how

00:08:13,430 --> 00:08:18,800
the progression of how the app was built

00:08:15,530 --> 00:08:20,509
and use it as a way to familiarize

00:08:18,800 --> 00:08:22,069
yourself with electron maybe help you

00:08:20,509 --> 00:08:27,560
get started with building your own fun

00:08:22,069 --> 00:08:31,909
electron apps so I've got Adam fired up

00:08:27,560 --> 00:08:34,849
and for the sake of time I'm going to be

00:08:31,909 --> 00:08:36,349
checking out commits that I've tagged

00:08:34,849 --> 00:08:38,839
and we're going to be taking a look at

00:08:36,349 --> 00:08:41,029
the code I've aliased my get check out

00:08:38,839 --> 00:08:46,430
is GC oh we're going to start out with

00:08:41,029 --> 00:08:48,860
hello a commit tagged hello and we start

00:08:46,430 --> 00:08:51,350
out as we would any node program with a

00:08:48,860 --> 00:08:53,209
package.json and we've got some

00:08:51,350 --> 00:08:56,660
dependencies that i've already installed

00:08:53,209 --> 00:08:59,720
and a start script that runs the elect

00:08:56,660 --> 00:09:00,860
the bundled electron binary and we pass

00:08:59,720 --> 00:09:04,310
it the path

00:09:00,860 --> 00:09:07,370
of this project and when electron starts

00:09:04,310 --> 00:09:08,930
it looks in your package.json to figure

00:09:07,370 --> 00:09:11,510
out what the entry point of your app is

00:09:08,930 --> 00:09:13,220
an arse is file called mange is so it

00:09:11,510 --> 00:09:22,190
takes this code and it runs it in the

00:09:13,220 --> 00:09:23,900
main process and our main GS code right

00:09:22,190 --> 00:09:25,790
now is pretty simple it's the simplest

00:09:23,900 --> 00:09:28,820
electron app that you can conceive of

00:09:25,790 --> 00:09:31,130
your typical hello world type of app you

00:09:28,820 --> 00:09:33,290
can see that we're using es6 here no

00:09:31,130 --> 00:09:35,270
trans piling we just get it right out of

00:09:33,290 --> 00:09:40,010
the box because we're using the latest

00:09:35,270 --> 00:09:43,660
version of chromium and so we've got

00:09:40,010 --> 00:09:48,620
known and we've also got electron api's

00:09:43,660 --> 00:09:51,380
and so the app module controls the

00:09:48,620 --> 00:09:54,230
applications event lifecycle and you

00:09:51,380 --> 00:09:57,590
emits a ready event one the app when

00:09:54,230 --> 00:09:59,630
electron has finished initializing so

00:09:57,590 --> 00:10:01,640
when the app is ready we're going to

00:09:59,630 --> 00:10:05,360
create a window and we're going to use

00:10:01,640 --> 00:10:06,980
the browser window API and specify the

00:10:05,360 --> 00:10:12,980
dimensions that we want the window to be

00:10:06,980 --> 00:10:15,650
and load our HTML so here we've created

00:10:12,980 --> 00:10:17,960
a renderer process from our brows render

00:10:15,650 --> 00:10:21,530
process from our main process and if we

00:10:17,960 --> 00:10:23,840
look at that index dot HTML it simply

00:10:21,530 --> 00:10:26,300
says hello world for now and we're

00:10:23,840 --> 00:10:27,920
printing out versions of node and

00:10:26,300 --> 00:10:30,650
chromium and electron that we're using

00:10:27,920 --> 00:10:34,190
and you'll notice that embedded in our

00:10:30,650 --> 00:10:38,750
HTML we have node we have access to all

00:10:34,190 --> 00:10:41,330
of nodes built in modules and AP is we

00:10:38,750 --> 00:10:44,780
also have access to any module that's up

00:10:41,330 --> 00:10:50,090
any of the 330,000 packages that are up

00:10:44,780 --> 00:10:52,130
on NPM and this is really powerful if we

00:10:50,090 --> 00:10:55,580
look at what's in renderer j/s right now

00:10:52,130 --> 00:10:58,250
simply console.log that says hello from

00:10:55,580 --> 00:11:03,350
the dev tools we're going to start up

00:10:58,250 --> 00:11:07,160
this app with mm p.m. start then we have

00:11:03,350 --> 00:11:09,020
it we have a simple desktop app and you

00:11:07,160 --> 00:11:12,260
can pop up in the dev tools we see our

00:11:09,020 --> 00:11:13,260
hello from the dev tools and and you can

00:11:12,260 --> 00:11:16,110
see that

00:11:13,260 --> 00:11:18,360
with very little we've got an electron

00:11:16,110 --> 00:11:20,910
app up and running if you already are

00:11:18,360 --> 00:11:23,600
familiar with web technologies and node

00:11:20,910 --> 00:11:26,190
you can get to this point really quickly

00:11:23,600 --> 00:11:29,550
so the next step is we're going to turn

00:11:26,190 --> 00:11:35,730
this into a menu bar app and I'm going

00:11:29,550 --> 00:11:38,070
to check out another commit and now in

00:11:35,730 --> 00:11:39,960
our main process code we're also going

00:11:38,070 --> 00:11:45,300
to use a tray module provided by

00:11:39,960 --> 00:11:49,170
electron and this this module will place

00:11:45,300 --> 00:11:51,180
an icon in our menu bar so on Mac it's

00:11:49,170 --> 00:11:52,470
going to be on the top right if I was on

00:11:51,180 --> 00:11:56,580
a Windows machine it would be on the

00:11:52,470 --> 00:11:59,160
bottom right and we're going to use this

00:11:56,580 --> 00:12:01,820
electron positioner module to place our

00:11:59,160 --> 00:12:03,960
browser window right underneath the icon

00:12:01,820 --> 00:12:06,060
what I want to point out about this is

00:12:03,960 --> 00:12:08,670
this is actually a third-party module is

00:12:06,060 --> 00:12:10,560
created by someone out in the community

00:12:08,670 --> 00:12:14,670
it's not created by an electron team

00:12:10,560 --> 00:12:17,340
member and like Adam is open sourced and

00:12:14,670 --> 00:12:20,460
has a thriving open source community

00:12:17,340 --> 00:12:23,310
electron does as well and there are a

00:12:20,460 --> 00:12:25,710
lot of great packages out there electron

00:12:23,310 --> 00:12:29,820
actually has over 400 open-source

00:12:25,710 --> 00:12:33,060
contributors at this point so we're

00:12:29,820 --> 00:12:38,100
going to use this awesome module I think

00:12:33,060 --> 00:12:40,050
it's made by yawns and Sweden and now

00:12:38,100 --> 00:12:41,430
when our app is ready we're instead of

00:12:40,050 --> 00:12:45,000
creating window we're going to create a

00:12:41,430 --> 00:12:48,660
tray icon will pass the path to the icon

00:12:45,000 --> 00:12:50,100
and when we click on the the icon we're

00:12:48,660 --> 00:12:53,250
going to toggle the visibility of our

00:12:50,100 --> 00:12:54,930
window an electron provides us the tray

00:12:53,250 --> 00:12:56,310
bounds so that we know exactly where on

00:12:54,930 --> 00:12:58,500
the screen the icon is and we can

00:12:56,310 --> 00:13:01,080
position our window accordingly so we'll

00:12:58,500 --> 00:13:04,410
pass those through down to show window

00:13:01,080 --> 00:13:06,780
and use the positioner module to

00:13:04,410 --> 00:13:09,660
calculate the position to set our main

00:13:06,780 --> 00:13:14,070
window at and then we'll show the window

00:13:09,660 --> 00:13:15,840
and focus it and now when we create our

00:13:14,070 --> 00:13:18,240
window in addition to specifying the

00:13:15,840 --> 00:13:19,770
dimensions we're also going to indicate

00:13:18,240 --> 00:13:23,220
that we want it to be hidden at first

00:13:19,770 --> 00:13:25,860
and we want it to be frameless and we

00:13:23,220 --> 00:13:26,860
won't be allowing the user to fullscreen

00:13:25,860 --> 00:13:31,090
the window

00:13:26,860 --> 00:13:32,410
or resize it and when we click away from

00:13:31,090 --> 00:13:36,130
the window and we get the blur event

00:13:32,410 --> 00:13:37,870
we're going to hide it and lastly we're

00:13:36,130 --> 00:13:42,640
going to hide the dock icon that would

00:13:37,870 --> 00:13:46,690
normally appear on a Mac so let's start

00:13:42,640 --> 00:13:50,380
this up again and you can see now we

00:13:46,690 --> 00:13:54,160
have a little bb-8 icon up in our menu

00:13:50,380 --> 00:13:59,950
bar and we can click on him to toggle

00:13:54,160 --> 00:14:02,560
the visibility and still the dev tools

00:13:59,950 --> 00:14:06,070
so you'll notice that i restarted the

00:14:02,560 --> 00:14:08,500
app entirely and one thing to recognize

00:14:06,070 --> 00:14:10,630
is when you're working with electron

00:14:08,500 --> 00:14:13,420
apps if you change any of the code in

00:14:10,630 --> 00:14:16,030
your main process code you're going to

00:14:13,420 --> 00:14:19,050
need to restart the app entirely this is

00:14:16,030 --> 00:14:21,730
because that code is loaded into memory

00:14:19,050 --> 00:14:24,670
upon initialization when you first start

00:14:21,730 --> 00:14:27,130
electron or as if we'd only changed code

00:14:24,670 --> 00:14:29,260
in the renderer process then all we

00:14:27,130 --> 00:14:34,440
would need to do is refresh to see those

00:14:29,260 --> 00:14:38,590
changes as is the case with any web page

00:14:34,440 --> 00:14:41,440
so now we have a menu bar app it's

00:14:38,590 --> 00:14:44,860
pretty plain so we're going to throw

00:14:41,440 --> 00:14:50,950
some styles at it and I'll check out

00:14:44,860 --> 00:14:52,180
another commit and now when we click on

00:14:50,950 --> 00:14:57,400
the app will see that we've turned our

00:14:52,180 --> 00:15:00,640
hello world app into a Hello bb-8 app so

00:14:57,400 --> 00:15:03,010
we want to do bb-8 justice here okay so

00:15:00,640 --> 00:15:05,290
now the exciting part we're going to

00:15:03,010 --> 00:15:08,830
hook everything up so that when we click

00:15:05,290 --> 00:15:12,850
a button on our UI that ultimately ends

00:15:08,830 --> 00:15:17,080
up and bb-8 here doing a little dance so

00:15:12,850 --> 00:15:22,120
and if you recall we communicate between

00:15:17,080 --> 00:15:25,930
processes through IPC so now we've added

00:15:22,120 --> 00:15:28,330
a button in our index dot HTML and has

00:15:25,930 --> 00:15:33,640
an ID of dance and in our render process

00:15:28,330 --> 00:15:35,050
code we add a listener that uses the IPC

00:15:33,640 --> 00:15:38,620
renderer module that we get from

00:15:35,050 --> 00:15:40,480
electron and we send a dance message

00:15:38,620 --> 00:15:45,370
over to the main process

00:15:40,480 --> 00:15:47,079
and in our main process code once the

00:15:45,370 --> 00:15:49,690
app is ready now we're going to use the

00:15:47,079 --> 00:15:52,089
APC main module from electron and when

00:15:49,690 --> 00:15:55,209
we receive the dance message will have

00:15:52,089 --> 00:15:59,500
bb-8 do a dance so now the question is

00:15:55,209 --> 00:16:03,250
how do we hook up bb-8 and for that

00:15:59,500 --> 00:16:06,940
we'll check out another commit so bb-8

00:16:03,250 --> 00:16:11,290
here is built by Sphero and Sphero has a

00:16:06,940 --> 00:16:15,190
handy node module that we use it uses a

00:16:11,290 --> 00:16:18,130
bluetooth library called noble and all

00:16:15,190 --> 00:16:21,399
we need to do is pass the UID of bb-8

00:16:18,130 --> 00:16:24,399
and we have this bb-8 object that we can

00:16:21,399 --> 00:16:27,459
use to control the robot I've also

00:16:24,399 --> 00:16:28,870
created a separate file bb-8 commands

00:16:27,459 --> 00:16:31,510
that has all the commands that will be

00:16:28,870 --> 00:16:34,260
using today and now when the app is

00:16:31,510 --> 00:16:36,880
ready we're going to connect to bb-8 and

00:16:34,260 --> 00:16:38,320
put something to console and have them

00:16:36,880 --> 00:16:42,490
change a random color just so that we

00:16:38,320 --> 00:16:44,500
know he's awake and now when we get the

00:16:42,490 --> 00:16:47,680
dance message we're going to call our

00:16:44,500 --> 00:16:52,870
dance command and we'll take a look at

00:16:47,680 --> 00:16:55,569
that so it's pretty simple it just sets

00:16:52,870 --> 00:16:58,420
a couple of intervals and has bb-8 role

00:16:55,569 --> 00:17:00,970
in a random for random distance in a

00:16:58,420 --> 00:17:03,880
random direction and change a random

00:17:00,970 --> 00:17:07,089
color and we also want to play some

00:17:03,880 --> 00:17:14,260
music for bb-8 to dance to so we're

00:17:07,089 --> 00:17:17,169
going to use the Audio API and we're

00:17:14,260 --> 00:17:19,630
going to send a sound message to our

00:17:17,169 --> 00:17:22,900
render process and the name of the file

00:17:19,630 --> 00:17:25,660
the sound file that we want to play so

00:17:22,900 --> 00:17:27,549
again we're using IPC sending sound to

00:17:25,660 --> 00:17:31,090
the main process or the renderer process

00:17:27,549 --> 00:17:34,830
and when we receive that message and the

00:17:31,090 --> 00:17:41,350
name of our audio file we're going to

00:17:34,830 --> 00:17:44,440
play the song okay so now comes the

00:17:41,350 --> 00:17:47,919
moment of truth see if we can get bb-8

00:17:44,440 --> 00:17:51,330
to dance for us but first since bb-8 is

00:17:47,919 --> 00:17:54,130
so small I brought a webcam so that

00:17:51,330 --> 00:17:59,650
everyone can get a better

00:17:54,130 --> 00:18:01,750
you of his dance moves and I have

00:17:59,650 --> 00:18:04,420
another menu bar app that was created

00:18:01,750 --> 00:18:08,980
specifically for this presentation it's

00:18:04,420 --> 00:18:13,540
another electron app that uses WebRTC to

00:18:08,980 --> 00:18:15,940
display the feed from a given webcam so

00:18:13,540 --> 00:18:24,010
hopefully y'all can see you bb-8 better

00:18:15,940 --> 00:18:27,430
now and I'll stick this down here okay

00:18:24,010 --> 00:18:32,530
now for the moment of truth pray to the

00:18:27,430 --> 00:18:36,250
demo gods but this works wait for bb-8

00:18:32,530 --> 00:18:39,370
to connect and there we go and we see

00:18:36,250 --> 00:18:45,120
he's turned a pretty blue and he's ready

00:18:39,370 --> 00:18:49,230
for some dance moves okay so now let's

00:18:45,120 --> 00:18:52,860
we see that we have our dance button and

00:18:49,230 --> 00:18:52,860
when we click it

00:19:03,070 --> 00:19:11,530
thank you haha all right so you can see

00:19:08,390 --> 00:19:14,450
that pretty quickly we were able to

00:19:11,530 --> 00:19:17,809
throw some code together and control

00:19:14,450 --> 00:19:22,610
bb-8 here and we can have them do more

00:19:17,809 --> 00:19:31,000
than just dance so check out another

00:19:22,610 --> 00:19:35,030
commits and start the app so we can also

00:19:31,000 --> 00:19:38,299
turn bb-8 into a disco bb-8 ball have

00:19:35,030 --> 00:19:40,870
them change some pretty colors and spin

00:19:38,299 --> 00:19:40,870
around for us

00:19:46,900 --> 00:19:54,770
and we can also use bb-8 as a magic bb-8

00:19:52,580 --> 00:19:56,900
ball and for those of you who aren't

00:19:54,770 --> 00:19:59,000
familiar with magic eight balls they're

00:19:56,900 --> 00:20:02,840
basically these toys they're kind of for

00:19:59,000 --> 00:20:04,490
fortune-telling and you can ask them

00:20:02,840 --> 00:20:07,120
simple yes or no questions and shake

00:20:04,490 --> 00:20:11,690
them and they'll give you a response so

00:20:07,120 --> 00:20:14,570
we can ask bb-8 questions like BBA do

00:20:11,690 --> 00:20:17,720
you think that will have any luck seeing

00:20:14,570 --> 00:20:22,220
the northern lights tonight and see if

00:20:17,720 --> 00:20:26,350
he says yes or no oh hello okay he's not

00:20:22,220 --> 00:20:30,290
very optimistic um but we can be helpful

00:20:26,350 --> 00:20:36,860
let's see a let's ask him bb-8 are you

00:20:30,290 --> 00:20:38,450
having fun today oh hello huh um okay

00:20:36,860 --> 00:20:40,040
maybe after this next portion you'll be

00:20:38,450 --> 00:20:41,600
having fun let's see if we can get him

00:20:40,040 --> 00:20:48,370
to say yes because I want you to hear

00:20:41,600 --> 00:20:50,900
that yeah okay um so magic bb-8 ball and

00:20:48,370 --> 00:20:52,850
lastly there's a way for you all to

00:20:50,900 --> 00:20:56,330
interact with bb-8 by tweeting at him

00:20:52,850 --> 00:20:57,890
and I'll let you I'll tell you exactly

00:20:56,330 --> 00:21:00,500
how if you want to take out your phones

00:20:57,890 --> 00:21:02,150
tweet out of him one lucky tweeter is

00:21:00,500 --> 00:21:05,030
going to get a free github shirt so a

00:21:02,150 --> 00:21:07,520
little extra incentive there and we're

00:21:05,030 --> 00:21:13,220
going to take a look at this code before

00:21:07,520 --> 00:21:16,420
we do this so we're going to be using

00:21:13,220 --> 00:21:21,020
the twitter api we have it's a twitter

00:21:16,420 --> 00:21:26,240
npm module and i have code that will get

00:21:21,020 --> 00:21:30,620
me a random tweet and if you tweet at

00:21:26,240 --> 00:21:33,080
bb-8 will be looking for tweets with a

00:21:30,620 --> 00:21:37,520
hashtag bb-8 electron all one word

00:21:33,080 --> 00:21:40,570
lowercase so tweet at bb-8 and you can

00:21:37,520 --> 00:21:43,880
either ask them to dance or disco and

00:21:40,570 --> 00:21:47,270
once we get a tweet with a hit he will

00:21:43,880 --> 00:21:51,140
do the thing that was said and will also

00:21:47,270 --> 00:21:53,090
be displaying a desktop notification

00:21:51,140 --> 00:21:54,530
that says the name or the user name of

00:21:53,090 --> 00:21:59,360
the person that tweeted and shows their

00:21:54,530 --> 00:22:02,660
profile picture and so go ahead

00:21:59,360 --> 00:22:04,340
tweet now we'll give it a bit because it

00:22:02,660 --> 00:22:08,210
does take some time for the tweets to

00:22:04,340 --> 00:22:15,770
come through and I'll get the webcam

00:22:08,210 --> 00:22:17,570
back up so we can still see bb-8 okay so

00:22:15,770 --> 00:22:19,309
I'm going to click the button now it's

00:22:17,570 --> 00:22:24,470
going to give another like 10 seconds so

00:22:19,309 --> 00:22:25,640
you still have time and actually first

00:22:24,470 --> 00:22:27,200
I'm going to turn my notifications back

00:22:25,640 --> 00:22:31,010
on otherwise we will not see the

00:22:27,200 --> 00:22:33,830
notification that comes through oh also

00:22:31,010 --> 00:22:36,169
let's take a look there so the way that

00:22:33,830 --> 00:22:38,900
we display the notification is we use

00:22:36,169 --> 00:22:40,610
the html5 notification API which we only

00:22:38,900 --> 00:22:43,280
have access to in the renderer process

00:22:40,610 --> 00:22:45,169
so what we need to do is from our main

00:22:43,280 --> 00:22:49,450
process code send the information about

00:22:45,169 --> 00:22:54,049
the tweet to the renderer process and

00:22:49,450 --> 00:22:57,850
when we get this tweet found message

00:22:54,049 --> 00:23:03,830
we're going to use the notification API

00:22:57,850 --> 00:23:08,299
so another instance of IPC alright so I

00:23:03,830 --> 00:23:13,010
think we have some tweets in and let's

00:23:08,299 --> 00:23:14,480
see what we get a little bit more time

00:23:13,010 --> 00:23:16,510
so more time to get treats in if you

00:23:14,480 --> 00:23:16,510
want

00:23:25,520 --> 00:23:47,549
and the winner is Ehlert's mari that's a

00:23:35,159 --> 00:23:49,919
disco all right and there we go um so I

00:23:47,549 --> 00:23:51,149
will get you all tweet back at you and

00:23:49,919 --> 00:23:55,440
let you know how you get your free

00:23:51,149 --> 00:23:58,470
github t-shirt so that's it for the bb-8

00:23:55,440 --> 00:24:00,360
show today thank you all for coming and

00:23:58,470 --> 00:24:03,120
i'll throw another slide up with the

00:24:00,360 --> 00:24:05,130
resources with a list of resources in

00:24:03,120 --> 00:24:11,100
case you want to get started with

00:24:05,130 --> 00:24:13,169
electron and learn more and here we go

00:24:11,100 --> 00:24:15,020
my contact information is on the bottom

00:24:13,169 --> 00:24:18,510
right if you have any questions and

00:24:15,020 --> 00:24:22,020
thank you all for coming I hope you had

00:24:18,510 --> 00:24:24,890
fun with bb-8 and good luck building

00:24:22,020 --> 00:24:24,890
your own electron apps

00:24:29,400 --> 00:24:31,460

YouTube URL: https://www.youtube.com/watch?v=QkfXZ2IFIck


