Title: Animations in React Native - Bristol JS - July 2019
Publication date: 2019-08-07
Playlist: Bristol JS
Description: 
	Presented by Tom Hicks

Let’s make some pixels move!

A run through of three ways to animate stuff in React Native. I’ll cover three different libraries, their use cases, performance characteristics and a bit of the meta “why do we animate?”

Expect live demos, code samples and plenty of hand-waving explanations!
_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:05,520
right and before I start to say thanks

00:00:02,070 --> 00:00:06,629
to Adam for putting this on we also

00:00:05,520 --> 00:00:09,830
rolled on to well for his talk was

00:00:06,629 --> 00:00:13,110
really good and also the alternative

00:00:09,830 --> 00:00:15,210
obvious thing if you haven't seen Gavin

00:00:13,110 --> 00:00:17,369
strange talk before highly recommend it

00:00:15,210 --> 00:00:20,490
like you really said he's mental but

00:00:17,369 --> 00:00:22,439
he's brilliant so right I'm gonna talk a

00:00:20,490 --> 00:00:25,769
bit about animating stuff in react

00:00:22,439 --> 00:00:29,369
native so have to start a presentation

00:00:25,769 --> 00:00:35,100
with poll so who here regularly writes

00:00:29,369 --> 00:00:37,850
stuff in react native okay few if used

00:00:35,100 --> 00:00:42,570
it once or twice okay

00:00:37,850 --> 00:00:46,440
heard of it but never used it okay never

00:00:42,570 --> 00:00:49,230
heard of it cool nobody put their hand

00:00:46,440 --> 00:00:54,930
up for the last one that's good I don't

00:00:49,230 --> 00:00:56,280
even bother with that slide and so why

00:00:54,930 --> 00:00:59,730
do we animate stuff when we're building

00:00:56,280 --> 00:01:01,230
applications so I'm going to cover like

00:00:59,730 --> 00:01:02,370
three different things I like to break

00:01:01,230 --> 00:01:04,710
this down to three different things of

00:01:02,370 --> 00:01:06,150
why we animate things this is a bit of

00:01:04,710 --> 00:01:09,390
an oversimplification but I find it

00:01:06,150 --> 00:01:11,760
quite helpful so one of the things we

00:01:09,390 --> 00:01:13,470
want to know is what just happened in

00:01:11,760 --> 00:01:14,700
application so the state is changing if

00:01:13,470 --> 00:01:18,270
things are popping in and out of the

00:01:14,700 --> 00:01:20,750
screen like without animating it can be

00:01:18,270 --> 00:01:22,500
quite quite jarring and disorienting

00:01:20,750 --> 00:01:25,470
aesthetic so you just want to give a

00:01:22,500 --> 00:01:27,270
particular feel to to something and

00:01:25,470 --> 00:01:29,280
interactivity so gestures and swipes and

00:01:27,270 --> 00:01:31,979
drags and drops and all that kind of

00:01:29,280 --> 00:01:33,450
stuff so I'm going to cover each of

00:01:31,979 --> 00:01:35,369
these three and talk about some

00:01:33,450 --> 00:01:38,189
libraries that exist in react native

00:01:35,369 --> 00:01:40,829
that can help you do each of those three

00:01:38,189 --> 00:01:42,930
things so first of all we're going to

00:01:40,829 --> 00:01:43,909
cover orientation about what just

00:01:42,930 --> 00:01:47,610
happened

00:01:43,909 --> 00:01:51,180
so I'm on the wrong side really but

00:01:47,610 --> 00:01:53,430
here's some examples of why we need to

00:01:51,180 --> 00:01:56,820
animate things when we're changing state

00:01:53,430 --> 00:01:58,259
so I see here a screen comes up and lets

00:01:56,820 --> 00:02:01,280
you know that that screen again when

00:01:58,259 --> 00:02:03,450
you're finished whenever you're finished

00:02:01,280 --> 00:02:04,799
come on there we go it's going to go

00:02:03,450 --> 00:02:07,140
away again you expect it to go go away

00:02:04,799 --> 00:02:08,429
and also in the state is changing here

00:02:07,140 --> 00:02:10,349
these buttons are animating in and

00:02:08,429 --> 00:02:11,340
things are animating animating in and

00:02:10,349 --> 00:02:14,420
out and it helps you like ground

00:02:11,340 --> 00:02:14,420
yourself in the application

00:02:14,939 --> 00:02:20,620
another example here we've gone from

00:02:17,200 --> 00:02:23,049
having a big camera on screen to having

00:02:20,620 --> 00:02:25,719
something small if that was to just pop

00:02:23,049 --> 00:02:31,810
from the big square to the small circle

00:02:25,719 --> 00:02:33,639
it could be quite quite disorienting so

00:02:31,810 --> 00:02:36,389
do a quick demo everything called layout

00:02:33,639 --> 00:02:39,609
animation mage exists in react native

00:02:36,389 --> 00:02:44,500
it's a core part of react native I think

00:02:39,609 --> 00:02:46,150
is not particularly like heard of but

00:02:44,500 --> 00:02:48,939
it's really really good so we're going

00:02:46,150 --> 00:02:51,370
to show you a demo of what we can do to

00:02:48,939 --> 00:02:56,109
get some of these kind of like orienting

00:02:51,370 --> 00:02:59,739
animations so I have made a little react

00:02:56,109 --> 00:03:03,400
native app and I got this thing here

00:02:59,739 --> 00:03:05,590
where you click on these numbers and

00:03:03,400 --> 00:03:07,269
they disappear out of the list I can

00:03:05,590 --> 00:03:09,579
bring back there's not really filters

00:03:07,269 --> 00:03:13,060
but some kind of controls and restore

00:03:09,579 --> 00:03:15,730
everything so it's not particularly easy

00:03:13,060 --> 00:03:18,280
to see what exactly is going on like

00:03:15,730 --> 00:03:21,069
you've got these like 6 is turning into

00:03:18,280 --> 00:03:23,190
9 here and like just like 1 pixel often

00:03:21,069 --> 00:03:26,729
it's just it's just weird

00:03:23,190 --> 00:03:29,319
so with layer animation in react native

00:03:26,729 --> 00:03:30,819
with pretty much one line of code

00:03:29,319 --> 00:03:35,439
actually with one line of code you can

00:03:30,819 --> 00:03:40,479
do it so what's happening here can't

00:03:35,439 --> 00:03:43,150
really read that very well so this is

00:03:40,479 --> 00:03:44,859
just a class done just got a list of

00:03:43,150 --> 00:03:48,099
numbers and then filtering outs and some

00:03:44,859 --> 00:03:49,479
items in state so I've got emitted items

00:03:48,099 --> 00:03:54,909
and I just add that one whenever I tap

00:03:49,479 --> 00:03:56,979
on something but I've got a method here

00:03:54,909 --> 00:03:58,000
which we call prepare animation and it

00:03:56,979 --> 00:04:00,280
will run this thing called layout

00:03:58,000 --> 00:04:03,250
animation configure next and what this

00:04:00,280 --> 00:04:04,870
does is it works out the position that

00:04:03,250 --> 00:04:07,000
we reviews are in before and after your

00:04:04,870 --> 00:04:08,919
state transition I just animate it for

00:04:07,000 --> 00:04:12,430
you you don't have to do any kind of

00:04:08,919 --> 00:04:16,239
like like tweening or like any of that

00:04:12,430 --> 00:04:18,729
kind of stuff it just kind of works this

00:04:16,239 --> 00:04:21,190
here is these are saying what happens

00:04:18,729 --> 00:04:22,840
when I have a new element or what

00:04:21,190 --> 00:04:24,700
happens when elements disappeared so you

00:04:22,840 --> 00:04:25,990
can tell it to animate either the scale

00:04:24,700 --> 00:04:27,530
of something so it will exhume in and

00:04:25,990 --> 00:04:30,830
out or you can get it to

00:04:27,530 --> 00:04:33,860
animate the opacity of something so with

00:04:30,830 --> 00:04:35,840
one line code and the joys of hot

00:04:33,860 --> 00:04:41,570
reloading which may have worked so look

00:04:35,840 --> 00:04:44,560
II so that's much more kind of see

00:04:41,570 --> 00:04:47,360
what's going on and then when we restore

00:04:44,560 --> 00:04:51,050
you get this nice little then you can do

00:04:47,360 --> 00:05:01,190
this really quickly it's quite fun cool

00:04:51,050 --> 00:05:06,470
so that's that so yeah you literally can

00:05:01,190 --> 00:05:07,910
do in in one line of code it does feel

00:05:06,470 --> 00:05:12,890
like cheating I've got to admit it's a

00:05:07,910 --> 00:05:14,450
bit too easy but it's really powerful so

00:05:12,890 --> 00:05:15,590
the next thing is aesthetics in an

00:05:14,450 --> 00:05:16,820
application so how you want to make

00:05:15,590 --> 00:05:21,800
someone feel when they when they're

00:05:16,820 --> 00:05:23,090
using it so here's another example so

00:05:21,800 --> 00:05:26,180
imagine you've received a gift from

00:05:23,090 --> 00:05:28,790
somebody and you don't know what that

00:05:26,180 --> 00:05:30,020
gift is so a little bit of animation can

00:05:28,790 --> 00:05:32,090
just kind of build a bit of tension and

00:05:30,020 --> 00:05:33,500
a bit of drama and also like make you

00:05:32,090 --> 00:05:34,700
wait for this thing to happen before you

00:05:33,500 --> 00:05:38,290
press the back button so you really have

00:05:34,700 --> 00:05:38,290
to take everything take everything in

00:05:41,500 --> 00:05:46,970
and again just some little transitions

00:05:44,539 --> 00:05:49,669
that kind of make you like makes the out

00:05:46,970 --> 00:05:52,580
feel nicer and contra describe it any

00:05:49,669 --> 00:05:54,620
better than that so let's have another

00:05:52,580 --> 00:05:57,350
demo there's a thing called react native

00:05:54,620 --> 00:05:58,850
animatable and there's a library that

00:05:57,350 --> 00:06:01,330
comes with a bunch of like pre-canned

00:05:58,850 --> 00:06:03,770
animations that you can control like the

00:06:01,330 --> 00:06:08,330
delay in duration you can also write

00:06:03,770 --> 00:06:11,710
your own kind of keyframed animations so

00:06:08,330 --> 00:06:11,710
I'll show you a demo with that

00:06:13,349 --> 00:06:18,509
I'll sit down for this one cool so we've

00:06:16,529 --> 00:06:24,659
got cats I haven't got jokes but I got

00:06:18,509 --> 00:06:26,969
cats so here's a mock-up of what we do I

00:06:24,659 --> 00:06:29,339
was showing before so you get a get a

00:06:26,969 --> 00:06:30,869
reward and I've just realized I've left

00:06:29,339 --> 00:06:33,169
all the good code in I'm supposed to

00:06:30,869 --> 00:06:37,979
take it more like before I started so

00:06:33,169 --> 00:06:40,169
give me two seconds that's kind of

00:06:37,979 --> 00:06:43,819
blowing it a bit isn't it this is me

00:06:40,169 --> 00:06:43,819
practicing my slides before I started

00:06:49,219 --> 00:06:53,879
let's try that again

00:06:50,809 --> 00:06:56,249
cool so we come to claim our reward and

00:06:53,879 --> 00:06:59,939
it just pops up on screen and it's a bit

00:06:56,249 --> 00:07:02,459
underwhelming so with a few lines of

00:06:59,939 --> 00:07:05,969
code which you've just seen me delete we

00:07:02,459 --> 00:07:06,990
can we can bring back we can bring back

00:07:05,969 --> 00:07:09,779
what I was going to give you a lot a

00:07:06,990 --> 00:07:14,449
nice way moment but so the thing here is

00:07:09,779 --> 00:07:17,610
we import view from react native

00:07:14,449 --> 00:07:20,039
animatable rather than from rather than

00:07:17,610 --> 00:07:22,379
from react native directly and that has

00:07:20,039 --> 00:07:26,459
a bunch of extra props which it will

00:07:22,379 --> 00:07:29,159
accept so the first thing we will tell

00:07:26,459 --> 00:07:35,629
like the wrapper component we want it to

00:07:29,159 --> 00:07:41,969
fade in so now that looks like that and

00:07:35,629 --> 00:07:44,729
we want our card component to zoom in

00:07:41,969 --> 00:07:51,160
and we'll give it duration in

00:07:44,729 --> 00:07:58,630
milliseconds so now it does that

00:07:51,160 --> 00:07:59,950
and here there's a bunch of these things

00:07:58,630 --> 00:08:01,360
you can look in the documentation like

00:07:59,950 --> 00:08:09,270
what all the different names of them

00:08:01,360 --> 00:08:09,270
names of them are something like that

00:08:09,900 --> 00:08:14,950
right so you get the idea I won't finish

00:08:12,790 --> 00:08:16,330
the rest of it but hopefully you can see

00:08:14,950 --> 00:08:17,410
it's pretty easy to build up these kinds

00:08:16,330 --> 00:08:19,120
of animations that you would have to

00:08:17,410 --> 00:08:21,730
normally kind of orchestrate and like

00:08:19,120 --> 00:08:22,380
again tweens and callbacks and horrible

00:08:21,730 --> 00:08:24,460
stuff like that

00:08:22,380 --> 00:08:27,640
so it's really easy to get going with

00:08:24,460 --> 00:08:33,910
just adding a bit of like a bit of

00:08:27,640 --> 00:08:35,890
something to your app when you have a

00:08:33,910 --> 00:08:38,700
bunch of these animations running you

00:08:35,890 --> 00:08:41,950
can actually get a little bit choppy

00:08:38,700 --> 00:08:44,500
I'll explain why and in a bit but

00:08:41,950 --> 00:08:46,900
there's a curiously named thing that you

00:08:44,500 --> 00:08:49,570
can give us the name prop which is use

00:08:46,900 --> 00:08:50,800
native driver and generally if you're

00:08:49,570 --> 00:08:52,870
using this library you want to stick

00:08:50,800 --> 00:08:55,000
that on all your views I'll explain what

00:08:52,870 --> 00:08:57,640
is going on there basically it's it

00:08:55,000 --> 00:09:01,290
avoids having to keep coming back into

00:08:57,640 --> 00:09:01,290
JavaScript to do your animations

00:09:05,430 --> 00:09:10,380
so this is react native animatable you

00:09:07,920 --> 00:09:13,380
can't really see that but basically wrap

00:09:10,380 --> 00:09:15,300
your replace your views with animatable

00:09:13,380 --> 00:09:17,550
dot views and they have a bunch of

00:09:15,300 --> 00:09:18,630
different canned animations that you can

00:09:17,550 --> 00:09:20,960
run you can also declare your own

00:09:18,630 --> 00:09:23,520
keyframes and stuff like that

00:09:20,960 --> 00:09:28,650
this also feels like cheating's I think

00:09:23,520 --> 00:09:31,190
it's a bit too easy then this thing so

00:09:28,650 --> 00:09:35,280
use native driver that's a performance

00:09:31,190 --> 00:09:38,240
performance optimisation which we will

00:09:35,280 --> 00:09:39,990
cover when we get to interactivity so

00:09:38,240 --> 00:09:41,970
interactivity is like gestures and

00:09:39,990 --> 00:09:44,010
swipes and drags and drops all the kinds

00:09:41,970 --> 00:09:46,530
of things that people kind of expect of

00:09:44,010 --> 00:09:48,300
native applications these days they kind

00:09:46,530 --> 00:09:50,370
of the thing that kind of sets you your

00:09:48,300 --> 00:09:51,510
app apart from from a web app you can do

00:09:50,370 --> 00:09:56,250
these things in web apps but they

00:09:51,510 --> 00:09:58,230
generally don't quite feel right and you

00:09:56,250 --> 00:09:59,880
can do them in react native with lots of

00:09:58,230 --> 00:10:02,850
callbacks and stuff but again they tend

00:09:59,880 --> 00:10:04,230
to be tend to feel feels it doesn't

00:10:02,850 --> 00:10:08,370
quite animate as smoothly as a native

00:10:04,230 --> 00:10:11,490
app should so here's some examples this

00:10:08,370 --> 00:10:14,400
is Gmail on my phone so you got swipe to

00:10:11,490 --> 00:10:15,720
dismiss and in a minute are you an

00:10:14,400 --> 00:10:18,420
animates back in and then you can sort

00:10:15,720 --> 00:10:20,040
of like play with this side draw it just

00:10:18,420 --> 00:10:24,090
gives you a nice like connected feel to

00:10:20,040 --> 00:10:26,100
that something like this if you know iOS

00:10:24,090 --> 00:10:29,690
you've probably seen these types of

00:10:26,100 --> 00:10:31,890
parallax e animations and then the

00:10:29,690 --> 00:10:36,570
headers transitioning as well and then

00:10:31,890 --> 00:10:38,550
also like a Banksy zoom thing these are

00:10:36,570 --> 00:10:41,850
all things that they give your app a bit

00:10:38,550 --> 00:10:43,260
of like a bit of life and they need to

00:10:41,850 --> 00:10:45,540
run at 60 frames a second if they're not

00:10:43,260 --> 00:10:49,530
running at 60 frames per second you're

00:10:45,540 --> 00:10:51,330
gonna you're gonna feel janky so these

00:10:49,530 --> 00:10:55,590
types of things so like the swipes for

00:10:51,330 --> 00:10:56,610
goog for Gmail they mean you'd have to

00:10:55,590 --> 00:10:57,750
put lots of buttons everywhere they'd

00:10:56,610 --> 00:10:59,640
have to have like a delete button on

00:10:57,750 --> 00:11:02,160
every single row you can swipe things

00:10:59,640 --> 00:11:04,830
away it's a bit of a trade-off for

00:11:02,160 --> 00:11:08,580
discoverability of things but what can

00:11:04,830 --> 00:11:10,350
you do on small screens so now here's

00:11:08,580 --> 00:11:11,520
something else as well so something that

00:11:10,350 --> 00:11:14,670
just fades back this is all stuff done

00:11:11,520 --> 00:11:16,850
interact native by the way so things

00:11:14,670 --> 00:11:19,160
that are kind of like bit springy and

00:11:16,850 --> 00:11:23,509
yeah plating things and all kinds of

00:11:19,160 --> 00:11:29,179
stuff so the use native driver prop they

00:11:23,509 --> 00:11:32,779
talked about earlier hmm that's the

00:11:29,179 --> 00:11:34,879
performance optimization to avoid how

00:11:32,779 --> 00:11:36,669
the rendering usually happens when

00:11:34,879 --> 00:11:40,879
you're animating stuff in react native

00:11:36,669 --> 00:11:43,879
so in react native user this is a graph

00:11:40,879 --> 00:11:46,279
or a chart of time going along that way

00:11:43,879 --> 00:11:49,850
here we've got the native UI so this is

00:11:46,279 --> 00:11:52,100
where we were views and and text and and

00:11:49,850 --> 00:11:54,799
whatever I rendered on your native

00:11:52,100 --> 00:11:57,919
platform so this is iOS and Android so

00:11:54,799 --> 00:11:59,239
iOS WI views Android isn't what they're

00:11:57,919 --> 00:12:01,579
called but they'll have to have an

00:11:59,239 --> 00:12:04,189
equivalent and then you've got your

00:12:01,579 --> 00:12:06,829
JavaScript code that runs that's all all

00:12:04,189 --> 00:12:09,319
the normal react stuff between them they

00:12:06,829 --> 00:12:11,769
have this they have to pass data between

00:12:09,319 --> 00:12:15,529
each other to tell it how to update your

00:12:11,769 --> 00:12:17,269
Styles and they have to cross what's

00:12:15,529 --> 00:12:18,859
called the bridge I don't know if that's

00:12:17,269 --> 00:12:22,579
actually the technical term but everyone

00:12:18,859 --> 00:12:23,539
calls it you can tell it's a bridge that

00:12:22,579 --> 00:12:29,059
you've got go over cuz they've got a

00:12:23,539 --> 00:12:30,679
little rower and a duck so this is what

00:12:29,059 --> 00:12:34,699
normally happens if you're interacting

00:12:30,679 --> 00:12:35,869
with something in react native so the

00:12:34,699 --> 00:12:37,850
native view I'll be firing these

00:12:35,869 --> 00:12:39,529
touchstart events and touchmove events

00:12:37,850 --> 00:12:43,809
and that kind of stuff you can't see

00:12:39,529 --> 00:12:46,639
this but that says set style so the

00:12:43,809 --> 00:12:50,299
information the data like payload comes

00:12:46,639 --> 00:12:53,659
over the bridge comes into react native

00:12:50,299 --> 00:12:55,459
you handle it in JavaScript and you call

00:12:53,659 --> 00:12:57,409
you do something to set the style or set

00:12:55,459 --> 00:12:59,419
some state or which ultimately set some

00:12:57,409 --> 00:13:01,519
style and that goes back over the bridge

00:12:59,419 --> 00:13:02,989
to update the UI then you move your

00:13:01,519 --> 00:13:05,209
finger like one pixel and it comes back

00:13:02,989 --> 00:13:08,959
over again and then it does a set style

00:13:05,209 --> 00:13:10,789
it updates the UI every time something

00:13:08,959 --> 00:13:13,819
goes over the bridge it has to be

00:13:10,789 --> 00:13:18,470
serialized and unsee realized on like

00:13:13,819 --> 00:13:19,999
life aside usually this is okay if your

00:13:18,470 --> 00:13:21,739
app is doing something else other than

00:13:19,999 --> 00:13:23,720
just literally exactly what you're doing

00:13:21,739 --> 00:13:27,429
well sometimes happen there's something

00:13:23,720 --> 00:13:30,620
else something else pops up and

00:13:27,429 --> 00:13:33,260
JavaScript being single threaded

00:13:30,620 --> 00:13:37,430
is busy doing like decoding a payload of

00:13:33,260 --> 00:13:39,740
Jason or something and you never get you

00:13:37,430 --> 00:13:42,320
miss a frame so this calls to set style

00:13:39,740 --> 00:13:44,660
here got missed and you drop a frame and

00:13:42,320 --> 00:13:46,070
that's when you feel like jank and its

00:13:44,660 --> 00:13:47,510
really noticeable it won't show up in

00:13:46,070 --> 00:13:49,850
the videos I can show or anything but

00:13:47,510 --> 00:13:53,920
it's noticeable when you use it in your

00:13:49,850 --> 00:13:56,780
own hands so there's a way to avoid this

00:13:53,920 --> 00:13:59,510
look at that animation so it's called

00:13:56,780 --> 00:14:01,010
declarative animation so this is what

00:13:59,510 --> 00:14:04,730
this use native driver thing is doing

00:14:01,010 --> 00:14:06,740
and instead of every single touch update

00:14:04,730 --> 00:14:09,560
every single one having to cross the

00:14:06,740 --> 00:14:11,950
bridge what you do is you send that's

00:14:09,560 --> 00:14:15,020
this config so you send your

00:14:11,950 --> 00:14:17,530
configuration of how to animate over to

00:14:15,020 --> 00:14:19,580
the native UI and then from then on

00:14:17,530 --> 00:14:21,700
everything else happens on the native UI

00:14:19,580 --> 00:14:24,110
so your touch start it just updates

00:14:21,700 --> 00:14:26,860
updates locally and it knows it's had

00:14:24,110 --> 00:14:28,700
this config that tells it how to update

00:14:26,860 --> 00:14:30,650
and that means you don't get dropped

00:14:28,700 --> 00:14:33,200
frames like you it will run at 60 frames

00:14:30,650 --> 00:14:36,980
per second and unless something's really

00:14:33,200 --> 00:14:38,210
wrong with your phone so good things

00:14:36,980 --> 00:14:40,670
about this it's declarative and not

00:14:38,210 --> 00:14:42,380
imperative it means that you can

00:14:40,670 --> 00:14:45,260
basically describe or you have to

00:14:42,380 --> 00:14:47,330
describe the all over that conditions of

00:14:45,260 --> 00:14:51,200
your animation before it actually

00:14:47,330 --> 00:14:52,880
happens so you have to say given given

00:14:51,200 --> 00:14:54,170
this condition this is what this is what

00:14:52,880 --> 00:14:56,000
it will build this is what it will do

00:14:54,170 --> 00:14:57,380
you're not like writing callbacks and

00:14:56,000 --> 00:15:00,530
saying update this value or not take

00:14:57,380 --> 00:15:01,910
that value when you see this written

00:15:00,530 --> 00:15:03,590
down it looks a lot like functional

00:15:01,910 --> 00:15:05,270
programming if people use like Randor

00:15:03,590 --> 00:15:09,230
and stuff like that you see a lot of

00:15:05,270 --> 00:15:11,990
like cons and sets and then like those

00:15:09,230 --> 00:15:13,850
types of things the config crosses a

00:15:11,990 --> 00:15:16,850
bridge once and not once per event and

00:15:13,850 --> 00:15:19,190
that's why that's why it works so

00:15:16,850 --> 00:15:22,460
there's two libraries they work together

00:15:19,190 --> 00:15:23,960
to do this one is called react native

00:15:22,460 --> 00:15:26,300
gesture handler and when it's called

00:15:23,960 --> 00:15:28,210
react native reanimated I always forget

00:15:26,300 --> 00:15:30,710
the name of that whenever I'm doing this

00:15:28,210 --> 00:15:33,760
I'm going to try and do a little demo of

00:15:30,710 --> 00:15:33,760
that and some more cats

00:15:38,100 --> 00:15:46,720
okay

00:15:39,449 --> 00:15:48,519
so all we've got here you've probably

00:15:46,720 --> 00:15:50,740
seen this kind of thing in Google Maps

00:15:48,519 --> 00:15:53,290
or Apple maps or whatever it's like a

00:15:50,740 --> 00:15:59,949
bottom a bottom card you can kind of

00:15:53,290 --> 00:16:01,600
move up and down and move it to a

00:15:59,949 --> 00:16:02,800
certain point and it will snap to the

00:16:01,600 --> 00:16:07,959
top and move it to a certain point it'll

00:16:02,800 --> 00:16:12,550
snap to the bottom so I'll show you how

00:16:07,959 --> 00:16:17,110
that is implemented so it starts off by

00:16:12,550 --> 00:16:20,529
importing pan gesture Handler and from

00:16:17,110 --> 00:16:23,920
back native gesture Handler and animated

00:16:20,529 --> 00:16:27,899
from react native reanimated these have

00:16:23,920 --> 00:16:31,059
got so react native reanimated has a

00:16:27,899 --> 00:16:32,110
bunch of these things so instead of so

00:16:31,059 --> 00:16:33,970
if you want to add two numbers together

00:16:32,110 --> 00:16:37,329
I said of writing a function that is a

00:16:33,970 --> 00:16:38,740
plus B you declare that a and B will be

00:16:37,329 --> 00:16:41,019
added together at some point

00:16:38,740 --> 00:16:43,290
same with sovereign this is a condition

00:16:41,019 --> 00:16:46,240
so instead of writing if you write cons

00:16:43,290 --> 00:16:48,730
there's yeah predicates for greater than

00:16:46,240 --> 00:16:54,069
and defined and all kinds of useful

00:16:48,730 --> 00:16:55,559
stuff there is this thing which I've

00:16:54,069 --> 00:16:58,059
just literally copied from the

00:16:55,559 --> 00:17:01,209
documentation which does the spring

00:16:58,059 --> 00:17:02,470
animation I think everybody uses library

00:17:01,209 --> 00:17:05,319
basically just copies of this and use it

00:17:02,470 --> 00:17:09,669
everywhere no idea had to implement that

00:17:05,319 --> 00:17:14,439
myself and then so how this is

00:17:09,669 --> 00:17:17,589
implemented is we have this pan gesture

00:17:14,439 --> 00:17:18,970
handler we say on gesture event and on

00:17:17,589 --> 00:17:21,640
handle state change so whenever you do

00:17:18,970 --> 00:17:24,370
anything so handler state changes when

00:17:21,640 --> 00:17:28,720
you start and end a touch and gesture

00:17:24,370 --> 00:17:32,610
event is like when you move we will use

00:17:28,720 --> 00:17:32,610
this one gesture event now that is not

00:17:34,020 --> 00:17:40,240
there's not like a traditional callback

00:17:36,940 --> 00:17:42,820
so this is what this is doing is it's

00:17:40,240 --> 00:17:45,280
telling react native gesture handler to

00:17:42,820 --> 00:17:48,280
extract these properties from the native

00:17:45,280 --> 00:17:49,360
event and apply them to these animated

00:17:48,280 --> 00:17:52,570
values

00:17:49,360 --> 00:17:54,700
so instead of like normal variables with

00:17:52,570 --> 00:17:57,059
numbers in we have these animated values

00:17:54,700 --> 00:18:00,460
they are like live values that you can

00:17:57,059 --> 00:18:02,980
sort of it's really hard to describe you

00:18:00,460 --> 00:18:04,600
don't like you don't directly you don't

00:18:02,980 --> 00:18:07,620
directly change the value you never read

00:18:04,600 --> 00:18:10,750
the value you just tell it for instance

00:18:07,620 --> 00:18:12,700
you could tell it that a plus B will be

00:18:10,750 --> 00:18:14,019
C and that will be true of in all cases

00:18:12,700 --> 00:18:16,720
you know it's never actually going to

00:18:14,019 --> 00:18:19,870
like do that an of the addition on the J

00:18:16,720 --> 00:18:22,240
side so these kind of like containers

00:18:19,870 --> 00:18:30,159
for values that probably like monads or

00:18:22,240 --> 00:18:31,809
something but I don't know so this is

00:18:30,159 --> 00:18:35,769
the bit that's doing the the animation

00:18:31,809 --> 00:18:39,580
as we drag up and down so the first

00:18:35,769 --> 00:18:42,070
thing is we can as a condition so we

00:18:39,580 --> 00:18:43,990
check first of all is the gesture stay

00:18:42,070 --> 00:18:47,590
actives that mean that means have we put

00:18:43,990 --> 00:18:50,559
our finger down on the screen

00:18:47,590 --> 00:18:52,659
I'll cover the else condition first so

00:18:50,559 --> 00:18:54,580
the touch isn't happening then we forget

00:18:52,659 --> 00:18:59,289
some there's something like values that

00:18:54,580 --> 00:19:00,700
we that we that we drive which remember

00:18:59,289 --> 00:19:02,470
if you ever done like drag and drop you

00:19:00,700 --> 00:19:04,690
always have to do like last drag X and

00:19:02,470 --> 00:19:06,610
last drag Y and this try get a current

00:19:04,690 --> 00:19:08,139
NEX and do one subtracted from the other

00:19:06,610 --> 00:19:10,809
it's all the same here but it's done

00:19:08,139 --> 00:19:12,370
with these declarations instead so we

00:19:10,809 --> 00:19:18,700
forget our previous drag position and

00:19:12,370 --> 00:19:21,519
then we set translate Y value will

00:19:18,700 --> 00:19:26,100
obtain internally the value that's

00:19:21,519 --> 00:19:27,760
derived from all of this stuff so

00:19:26,100 --> 00:19:29,740
conditionally and whether we've ever

00:19:27,760 --> 00:19:34,419
touched this thing before if we haven't

00:19:29,740 --> 00:19:37,000
touched this thing before then our our

00:19:34,419 --> 00:19:40,419
offset wise that is all trying to

00:19:37,000 --> 00:19:41,950
produce a value here I'll offset Y will

00:19:40,419 --> 00:19:43,899
be at the snap to bottom so snap to

00:19:41,950 --> 00:19:45,130
bottom is just there's just a magic

00:19:43,899 --> 00:19:48,000
number there's like near the bottom of

00:19:45,130 --> 00:19:48,000
the screen I just made that up

00:19:49,890 --> 00:19:54,720
and yeah so that's if we've never

00:19:52,020 --> 00:19:57,570
interacted with it if we have previously

00:19:54,720 --> 00:20:00,510
interacted and we've let go then we call

00:19:57,570 --> 00:20:01,590
this run spring and then where do we go

00:20:00,510 --> 00:20:04,800
do we go to the top or to the bottom

00:20:01,590 --> 00:20:06,770
because there's two snap points so the

00:20:04,800 --> 00:20:10,650
way this works now is it saying if the

00:20:06,770 --> 00:20:13,500
translate Y value is greater than the

00:20:10,650 --> 00:20:16,560
midpoint then it will go to the bottom

00:20:13,500 --> 00:20:19,350
otherwise it will go to the top so what

00:20:16,560 --> 00:20:23,220
this means if I drag up here and stop

00:20:19,350 --> 00:20:25,560
and let go it will it will stay to the

00:20:23,220 --> 00:20:29,660
bottom if I kind of like flick it up

00:20:25,560 --> 00:20:29,660
it's going to return to the bottom

00:20:35,720 --> 00:20:45,039
hmm oh I need to I need to rerun this

00:20:39,230 --> 00:20:45,039
one yeah so just go the other direction

00:20:46,900 --> 00:20:51,559
yeah so so that's that's actually like

00:20:49,789 --> 00:20:53,809
so what's going on here this this

00:20:51,559 --> 00:20:55,490
private this thing is not a function

00:20:53,809 --> 00:20:57,919
that runs it's a declaration of like how

00:20:55,490 --> 00:21:00,230
a thing will animate that is run when

00:20:57,919 --> 00:21:02,630
our class instantiates and he's never

00:21:00,230 --> 00:21:05,120
run again so I had to reload the back

00:21:02,630 --> 00:21:07,850
component so if you into react stuff

00:21:05,120 --> 00:21:10,159
then that'll make sense yeah so now this

00:21:07,850 --> 00:21:11,419
is doing like the wrong thing so this is

00:21:10,159 --> 00:21:17,590
like if I let go it at the bottom it

00:21:11,419 --> 00:21:17,590
will snap to the top where was that yeah

00:21:18,760 --> 00:21:24,440
yeah so then well the touch is happening

00:21:21,789 --> 00:21:26,960
it stops the clock the clock is what it

00:21:24,440 --> 00:21:27,559
is it's like a I dunno how to describe

00:21:26,960 --> 00:21:29,809
it again

00:21:27,559 --> 00:21:33,890
it's a kind of like declarative timer

00:21:29,809 --> 00:21:36,500
thing again look it in the docs like it

00:21:33,890 --> 00:21:39,409
is easy to just copy it from examples

00:21:36,500 --> 00:21:40,370
honestly so this is the the kind of

00:21:39,409 --> 00:21:41,659
stuff that you know we have to do with

00:21:40,370 --> 00:21:44,000
drag and drop animations where you're

00:21:41,659 --> 00:21:46,220
subtracting one value from another and

00:21:44,000 --> 00:21:47,929
adding it to the current one that it had

00:21:46,220 --> 00:21:50,780
and then setting it to this value and

00:21:47,929 --> 00:21:53,090
all that kind of stuff and then copy it

00:21:50,780 --> 00:21:54,380
from when you finished you copy the

00:21:53,090 --> 00:22:01,309
current drag wire on to the previous

00:21:54,380 --> 00:22:02,990
drag Y and then like move on so if we

00:22:01,309 --> 00:22:05,780
wanted to change the behavior of this so

00:22:02,990 --> 00:22:07,640
instead of I don't need to go back and

00:22:05,780 --> 00:22:10,760
do that again so instead of when we let

00:22:07,640 --> 00:22:14,960
go here or if we flick it rather than it

00:22:10,760 --> 00:22:18,950
depending on where we let go we could do

00:22:14,960 --> 00:22:22,250
something like drag V Y so that's our

00:22:18,950 --> 00:22:24,320
velocity so if I drag velocity is

00:22:22,250 --> 00:22:26,630
greater than zero then go to the bottom

00:22:24,320 --> 00:22:32,330
otherwise go to the top and what that

00:22:26,630 --> 00:22:34,429
gives us is so if I let go up here but

00:22:32,330 --> 00:22:36,380
pulling down it's going to go to the

00:22:34,429 --> 00:22:39,890
bottom if I do go from the bottom and

00:22:36,380 --> 00:22:41,120
kind of like kind of flick it and then

00:22:39,890 --> 00:22:42,890
if you can really see exactly what's

00:22:41,120 --> 00:22:44,510
happening but kind of flick it and let

00:22:42,890 --> 00:22:46,520
go it knows right you are moving this

00:22:44,510 --> 00:22:47,720
thing up so just that point becomes the

00:22:46,520 --> 00:22:51,110
top and then run

00:22:47,720 --> 00:22:52,610
the existing spring spring animation the

00:22:51,110 --> 00:22:56,090
spring animation will take into account

00:22:52,610 --> 00:22:57,980
your the velocity of the thing so if you

00:22:56,090 --> 00:22:59,780
collector like run various spring

00:22:57,980 --> 00:23:01,670
animations at different times it will

00:22:59,780 --> 00:23:05,840
kind of like follow as a natural natural

00:23:01,670 --> 00:23:07,520
spring would which is really nice one of

00:23:05,840 --> 00:23:09,110
the nice thing about this because these

00:23:07,520 --> 00:23:12,260
are all just like declarations and not

00:23:09,110 --> 00:23:14,030
like functions that are running so I

00:23:12,260 --> 00:23:17,120
don't I'm not really a big fan of

00:23:14,030 --> 00:23:21,110
comments in code and yeah

00:23:17,120 --> 00:23:23,570
controversial but so rather than have to

00:23:21,110 --> 00:23:28,040
do this kind of stuff where should we go

00:23:23,570 --> 00:23:34,180
I can actually extract that to be this

00:23:28,040 --> 00:23:34,180
thought where should we go and then

00:23:38,299 --> 00:23:42,580
so that is actually the same thing now

00:23:40,009 --> 00:23:46,519
because it's just a declaration of

00:23:42,580 --> 00:23:48,469
configuration of how to acts so you can

00:23:46,519 --> 00:23:54,639
do this for all kinds of things to get

00:23:48,469 --> 00:24:00,529
rid of all these nasty comments have so

00:23:54,639 --> 00:24:01,820
that is that whilst we have so yeah this

00:24:00,529 --> 00:24:04,969
doesn't feel like cheating it can be a

00:24:01,820 --> 00:24:06,739
bit tricky the code looks a bit weird if

00:24:04,969 --> 00:24:09,139
you used to writing callbacks and you

00:24:06,739 --> 00:24:10,599
get to like process and follow things

00:24:09,139 --> 00:24:14,479
from top to bottom

00:24:10,599 --> 00:24:15,559
you bit more kind of just bit more

00:24:14,479 --> 00:24:17,809
difficult to work with if you use to

00:24:15,559 --> 00:24:20,299
that kind of thing but it's performance

00:24:17,809 --> 00:24:22,369
that's really important its declarative

00:24:20,299 --> 00:24:24,169
it's composable as well so any of those

00:24:22,369 --> 00:24:26,239
values can be replaced with like another

00:24:24,169 --> 00:24:28,219
value like another conditional value

00:24:26,239 --> 00:24:32,450
because they will just represent an

00:24:28,219 --> 00:24:35,349
animated value ultimately so yeah come

00:24:32,450 --> 00:24:36,919
back to like why we do animations so

00:24:35,349 --> 00:24:38,419
orientation if you want to do those

00:24:36,919 --> 00:24:40,159
kinds of things and layout animation is

00:24:38,419 --> 00:24:42,289
really really good they'll get you like

00:24:40,159 --> 00:24:45,259
most of the way there too a nicely

00:24:42,289 --> 00:24:46,909
interactive app if you want to do some

00:24:45,259 --> 00:24:50,239
basic aesthetic stuff react native

00:24:46,909 --> 00:24:51,709
animatable is great and gesture handler

00:24:50,239 --> 00:24:55,969
and reanimated are really good for the

00:24:51,709 --> 00:24:58,549
interactive stuff react native reanimate

00:24:55,969 --> 00:25:01,190
it has got a an experimental thing that

00:24:58,549 --> 00:25:04,129
does this and you can anything which you

00:25:01,190 --> 00:25:07,099
can describe using react native

00:25:04,129 --> 00:25:10,099
animatable can be described as react

00:25:07,099 --> 00:25:11,539
native reanimated components so react

00:25:10,099 --> 00:25:13,489
native reanimated if you want to do any

00:25:11,539 --> 00:25:14,929
animation and you've got the time to

00:25:13,489 --> 00:25:19,399
learn it it's worth it's definitely

00:25:14,929 --> 00:25:21,079
worth learning so just like a bit of a

00:25:19,399 --> 00:25:24,289
sort of philosophical thing on on

00:25:21,079 --> 00:25:26,450
animation as well like why do we do it

00:25:24,289 --> 00:25:29,809
and when is it good to do it and when is

00:25:26,450 --> 00:25:31,489
it good not to we've got a Venn diagram

00:25:29,809 --> 00:25:32,869
and the best bit of a Venn diagram as we

00:25:31,489 --> 00:25:34,759
all know is in the middle so if you've

00:25:32,869 --> 00:25:37,399
got something which help is an animation

00:25:34,759 --> 00:25:40,489
which is designed to keep users oriented

00:25:37,399 --> 00:25:42,859
in your app to give a feeling of of how

00:25:40,489 --> 00:25:44,359
you want your app to feel and to be

00:25:42,859 --> 00:25:47,889
interactive and make your app feel alive

00:25:44,359 --> 00:25:47,889
that's the best place to be

00:25:48,490 --> 00:25:54,190
when you've done this show your UI

00:25:50,620 --> 00:25:56,980
designer was very two things first of

00:25:54,190 --> 00:25:58,810
all they would like to see like what

00:25:56,980 --> 00:26:00,370
kind of things are easy to achieve and

00:25:58,810 --> 00:26:01,900
what kinds of things you can animate and

00:26:00,370 --> 00:26:03,070
they would absolutely love it especially

00:26:01,900 --> 00:26:04,780
if they used to kind of like web apps

00:26:03,070 --> 00:26:07,030
where things are a bit clunky and like

00:26:04,780 --> 00:26:08,680
that kind of thing the other thing is

00:26:07,030 --> 00:26:11,620
you can go a bit nuts through this stuff

00:26:08,680 --> 00:26:15,760
and animate everything and the UI

00:26:11,620 --> 00:26:17,410
designers tend to have taste so look so

00:26:15,760 --> 00:26:18,970
many times I've like put all this stuff

00:26:17,410 --> 00:26:22,750
and then show it to Nick who sits next

00:26:18,970 --> 00:26:24,400
to me and he's like get rid of most of

00:26:22,750 --> 00:26:28,930
that just put like a little transition

00:26:24,400 --> 00:26:30,610
on or something beibei's good fun so to

00:26:28,930 --> 00:26:35,200
close off that was pretty quickly I

00:26:30,610 --> 00:26:39,280
think I'm Tom I work for a Candide we

00:26:35,200 --> 00:26:42,220
make this it's a like social network for

00:26:39,280 --> 00:26:45,370
gardeners and has like like client ID

00:26:42,220 --> 00:26:46,510
and all that kind of stuff this I've

00:26:45,370 --> 00:26:49,750
just presented is probably the least

00:26:46,510 --> 00:26:52,510
interesting thing we do so here's our

00:26:49,750 --> 00:26:54,790
website we are hiring so if you want to

00:26:52,510 --> 00:26:56,650
do some react native or node or machine

00:26:54,790 --> 00:26:59,550
learning or anything like that then call

00:26:56,650 --> 00:27:07,220
speak to me that's it

00:26:59,550 --> 00:27:07,220

YouTube URL: https://www.youtube.com/watch?v=YPxblsVCp8k


