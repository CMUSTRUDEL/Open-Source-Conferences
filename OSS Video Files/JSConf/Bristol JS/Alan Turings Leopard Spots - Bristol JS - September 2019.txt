Title: Alan Turings Leopard Spots - Bristol JS - September 2019
Publication date: 2019-10-07
Playlist: Bristol JS
Description: 
	Will Heslam:
Alan Turing's Leopard Spots 
An exploration of Alan Turing's lasting 
contribution to biology: a surprisingly 
simple mathematical description of how 
animals like leopards, zebras and puffer fish 
may get their spots and stripes. 

There will be lots of bright colours, 
gooey-looking shapes and 
hardware-accelerated matrix convolutions, 
running in the browser with Shadertoy.

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:04,230
hi I'm will I'm gonna be giving you a

00:00:01,620 --> 00:00:05,879
talk on Alan Turing's leopard spots now

00:00:04,230 --> 00:00:07,170
some of you might be thinking what does

00:00:05,879 --> 00:00:08,940
this have to do with the overall theme

00:00:07,170 --> 00:00:10,950
of refactoring well if you're paying

00:00:08,940 --> 00:00:14,670
attention at some point during the talk

00:00:10,950 --> 00:00:16,590
I'll give a clue or hint and yeah you'll

00:00:14,670 --> 00:00:20,640
know exactly what's going on Alan

00:00:16,590 --> 00:00:23,970
Turing's leopard spots question what do

00:00:20,640 --> 00:00:27,420
lipids zebras puffer fish and I'll

00:00:23,970 --> 00:00:32,130
ensure it cheering have in common they

00:00:27,420 --> 00:00:35,719
all have yeah go ahead yeah that is that

00:00:32,130 --> 00:00:43,710
is one it's not what I got on the cars

00:00:35,719 --> 00:00:46,230
lost the car is very true I don't know

00:00:43,710 --> 00:00:49,320
if puffer fish have hair but there we go

00:00:46,230 --> 00:00:51,600
fish hair where was I Oh what do they

00:00:49,320 --> 00:00:53,190
all have in common the actual punchline

00:00:51,600 --> 00:00:58,379
is going to be is a lot less funny of

00:00:53,190 --> 00:00:58,800
them they all have distinctive spots and

00:00:58,379 --> 00:01:00,539
stripes

00:00:58,800 --> 00:01:04,979
except for ensuring who's just a famous

00:01:00,539 --> 00:01:07,409
computer scientist oh god okay massively

00:01:04,979 --> 00:01:09,299
misjudged the whole thing

00:01:07,409 --> 00:01:12,270
okay so cheering was a man of many

00:01:09,299 --> 00:01:14,850
talents he invented cheering machines

00:01:12,270 --> 00:01:16,530
when he was working on his thesis the

00:01:14,850 --> 00:01:18,900
church cheering thesis with his PhD

00:01:16,530 --> 00:01:20,040
supervisor Alonzo Church so that's

00:01:18,900 --> 00:01:22,890
pretty impressive invented computers

00:01:20,040 --> 00:01:25,170
that's why we're all here now god knows

00:01:22,890 --> 00:01:27,060
what would be doing otherwise he also

00:01:25,170 --> 00:01:32,670
invented the cheering test so arguably

00:01:27,060 --> 00:01:34,860
is the founding father of AI and also he

00:01:32,670 --> 00:01:36,600
cracked the Enigma code while working at

00:01:34,860 --> 00:01:38,909
Bletchley Park so he basically people

00:01:36,600 --> 00:01:40,409
Nazis during World War two so that was

00:01:38,909 --> 00:01:43,290
in the thirties even better computers in

00:01:40,409 --> 00:01:44,909
the forties he beat Hitler so by the end

00:01:43,290 --> 00:01:46,680
of the forties has had a fairly storied

00:01:44,909 --> 00:01:48,570
career at this point and he's getting a

00:01:46,680 --> 00:01:51,030
bit bored so he thought his about 39 he

00:01:48,570 --> 00:01:52,380
thought well what I'm into what up what

00:01:51,030 --> 00:01:54,689
am i interested in well he became

00:01:52,380 --> 00:01:55,740
interested near the end of his life in

00:01:54,689 --> 00:01:59,700
life itself

00:01:55,740 --> 00:02:01,979
okay he was very interested in how life

00:01:59,700 --> 00:02:05,280
can go from a single cell single

00:02:01,979 --> 00:02:07,530
homogeneous little cell subdividing and

00:02:05,280 --> 00:02:10,470
reproducing how it can then turn into

00:02:07,530 --> 00:02:11,730
one of these fantastical forms we see

00:02:10,470 --> 00:02:13,260
before us today

00:02:11,730 --> 00:02:18,180
how can a single cell turn into a cute

00:02:13,260 --> 00:02:21,480
puppy or dolphin or sad bro or anything

00:02:18,180 --> 00:02:24,269
you can imagine and uh yeah he was he

00:02:21,480 --> 00:02:27,330
was fascinated by this and at the time

00:02:24,269 --> 00:02:29,190
there was DNA hadn't been discovered or

00:02:27,330 --> 00:02:30,420
extracted yet happened in the 60s they

00:02:29,190 --> 00:02:32,330
knew about genetics so he was familiar

00:02:30,420 --> 00:02:34,470
with the other way by biology

00:02:32,330 --> 00:02:35,220
potentially worked but it was still kind

00:02:34,470 --> 00:02:37,829
of a mystery

00:02:35,220 --> 00:02:40,230
so in 1952 when he was 39 he published

00:02:37,829 --> 00:02:43,739
an important paper on biology called the

00:02:40,230 --> 00:02:45,480
chemical basis of morphogenesis which

00:02:43,739 --> 00:02:47,340
sounds quite wordy there's actually

00:02:45,480 --> 00:02:49,500
pretty straightforward morph shape

00:02:47,340 --> 00:02:52,099
Genesis the beginning so it's the

00:02:49,500 --> 00:02:54,840
beginning of shapes from chemicals and

00:02:52,099 --> 00:02:56,549
yeah in doing so arguably founded the

00:02:54,840 --> 00:02:59,099
discipline of computational biology so

00:02:56,549 --> 00:03:03,030
kind of rounded out the start of the

00:02:59,099 --> 00:03:05,849
decade that's fine for yeah the chemical

00:03:03,030 --> 00:03:08,329
basis of morphogenesis and he postulated

00:03:05,849 --> 00:03:10,200
that there's a hypothetical set of

00:03:08,329 --> 00:03:12,690
interacting chemicals that equals

00:03:10,200 --> 00:03:15,209
morphogens that as long as they follow a

00:03:12,690 --> 00:03:19,040
certain set of rules very very simple

00:03:15,209 --> 00:03:21,599
mathematical rules could hypothetically

00:03:19,040 --> 00:03:24,060
generate all the interesting intricate

00:03:21,599 --> 00:03:26,430
complex fractal patterns that we see on

00:03:24,060 --> 00:03:29,220
for example a zebras hide or a leopard

00:03:26,430 --> 00:03:32,099
skin or puffer fish or all all the

00:03:29,220 --> 00:03:32,459
different things even plants working for

00:03:32,099 --> 00:03:34,590
anything

00:03:32,459 --> 00:03:36,780
he was very candid about the fact that

00:03:34,590 --> 00:03:38,880
he was thinking in very simplified terms

00:03:36,780 --> 00:03:40,560
and actually in real biology it's a lot

00:03:38,880 --> 00:03:42,389
Messier it's more than just two

00:03:40,560 --> 00:03:46,919
chemicals in biology if you can imagine

00:03:42,389 --> 00:03:48,989
such a thing so yeah he yeah he thought

00:03:46,919 --> 00:03:52,049
I could explain stripes random spots

00:03:48,989 --> 00:03:55,440
intricate coral-like patterns he could

00:03:52,049 --> 00:03:58,049
explain the transformation from blastula

00:03:55,440 --> 00:04:03,150
two gastrula right which is when a cell

00:03:58,049 --> 00:04:04,049
kind of inverts and forms kind of a kind

00:04:03,150 --> 00:04:06,660
of concave

00:04:04,049 --> 00:04:09,239
type structure and these morphogens he

00:04:06,660 --> 00:04:11,069
imagined were simulated using a process

00:04:09,239 --> 00:04:12,480
called reaction diffusion now I don't

00:04:11,069 --> 00:04:14,940
know if he invented reaction diffusion

00:04:12,480 --> 00:04:16,709
or if it was an idea beforehand but the

00:04:14,940 --> 00:04:19,890
paper just mentions it so reaction

00:04:16,709 --> 00:04:21,209
diffusion imagine a 2d grid okay you've

00:04:19,890 --> 00:04:23,070
got a series of cells and each one of

00:04:21,209 --> 00:04:25,389
these cells has a certain chemical

00:04:23,070 --> 00:04:29,560
concentration let's imagine that red is

00:04:25,389 --> 00:04:31,000
a and blue is chemical B okay any given

00:04:29,560 --> 00:04:33,400
point when we want to find out what

00:04:31,000 --> 00:04:37,000
happens next in our reactive diffusive

00:04:33,400 --> 00:04:40,270
system we simulate first of all reaction

00:04:37,000 --> 00:04:43,750
so for any given cell it detects let's

00:04:40,270 --> 00:04:47,830
say I'm this blue cell here I have some

00:04:43,750 --> 00:04:49,659
red chemical near me so I take some red

00:04:47,830 --> 00:04:53,139
chemical I take my blue chemical and I

00:04:49,659 --> 00:04:55,689
put back two units of blue chemical okay

00:04:53,139 --> 00:05:00,400
so the chemical a is feeding into

00:04:55,689 --> 00:05:01,629
chemical B and then you defuse the

00:05:00,400 --> 00:05:03,879
chemicals so you essentially just

00:05:01,629 --> 00:05:07,210
average it each cell out with its

00:05:03,879 --> 00:05:09,370
neighbors okay and it's that simple and

00:05:07,210 --> 00:05:11,680
from that he argued that interesting

00:05:09,370 --> 00:05:13,090
things can happen he called the

00:05:11,680 --> 00:05:15,759
diffusion step is often called a

00:05:13,090 --> 00:05:17,500
convolution and so how lot of things

00:05:15,759 --> 00:05:19,629
like Photoshop works okay if you've used

00:05:17,500 --> 00:05:21,490
the first shot blur or a motion there

00:05:19,629 --> 00:05:23,259
are any kind of image filtering

00:05:21,490 --> 00:05:25,210
technique for example edge detection

00:05:23,259 --> 00:05:28,240
sharpening they're all based around this

00:05:25,210 --> 00:05:31,779
idea of convolutions so what is a

00:05:28,240 --> 00:05:35,830
convolution looks complicated don't

00:05:31,779 --> 00:05:37,539
panic a convolution is just doesn't have

00:05:35,830 --> 00:05:40,210
to be a three by three kids but in the

00:05:37,539 --> 00:05:43,389
simplest case it is a three by three

00:05:40,210 --> 00:05:45,339
grid of numbers we're going from zero to

00:05:43,389 --> 00:05:47,139
one here but you could use larger

00:05:45,339 --> 00:05:49,569
numbers if you wanted to these are known

00:05:47,139 --> 00:05:52,569
as your weights and then you have your

00:05:49,569 --> 00:05:54,550
input data okay and your Impa data this

00:05:52,569 --> 00:05:56,169
these might be pixels in an image for

00:05:54,550 --> 00:05:59,199
example this could be your face and

00:05:56,169 --> 00:06:02,889
you're wanting to I don't know sharpen

00:05:59,199 --> 00:06:05,589
your face in this case we're actually

00:06:02,889 --> 00:06:08,800
going to be doing an averaging effect

00:06:05,589 --> 00:06:11,379
this is this is a Gaussian blur and the

00:06:08,800 --> 00:06:13,509
way it works is every single pixel or

00:06:11,379 --> 00:06:16,060
input cell lines up with its weight

00:06:13,509 --> 00:06:19,180
they're multiplied together and that

00:06:16,060 --> 00:06:20,860
gives you a final answer I've only done

00:06:19,180 --> 00:06:22,569
this so I mean please do check my maths

00:06:20,860 --> 00:06:24,490
if any of you got a mass spec for

00:06:22,569 --> 00:06:27,039
example would be zero point seven times

00:06:24,490 --> 00:06:29,770
zero point zero five zero point six

00:06:27,039 --> 00:06:31,479
eight times zero point 2 so on for all

00:06:29,770 --> 00:06:33,550
the rows the middle here zero point two

00:06:31,479 --> 00:06:36,310
nine x minus one which seems kind of

00:06:33,550 --> 00:06:38,409
confusing but the idea is that the

00:06:36,310 --> 00:06:39,040
cardinal directions you each get a zero

00:06:38,409 --> 00:06:41,560
point two so if you

00:06:39,040 --> 00:06:43,840
shows up that's four six eight add up

00:06:41,560 --> 00:06:46,870
the ordinal directions diagonal

00:06:43,840 --> 00:06:48,840
directions you get well that's the

00:06:46,870 --> 00:06:51,520
remainder so now that's adding up to one

00:06:48,840 --> 00:06:53,260
but then you take the center cell and

00:06:51,520 --> 00:06:55,840
you multiply that by minus 1 so it

00:06:53,260 --> 00:06:58,780
averages out instead of adding it

00:06:55,840 --> 00:07:00,160
dissipates and it's that simple you can

00:06:58,780 --> 00:07:01,600
have other weights that have different

00:07:00,160 --> 00:07:03,520
behaviors so for example edge detection

00:07:01,600 --> 00:07:05,320
would have some positive numbers along

00:07:03,520 --> 00:07:07,990
here made sorry some higher numbers and

00:07:05,320 --> 00:07:11,800
then they would be inverted along the

00:07:07,990 --> 00:07:15,100
top all sorts of things you can do so as

00:07:11,800 --> 00:07:19,210
an aside one of the breakthroughs behind

00:07:15,100 --> 00:07:21,370
the recent AI bubble or fad or fantastic

00:07:19,210 --> 00:07:28,540
invents in investment opportunity is

00:07:21,370 --> 00:07:29,890
that my call is the I don't see

00:07:28,540 --> 00:07:33,100
discovery but rather efficient

00:07:29,890 --> 00:07:34,360
implementation or or yeah look the

00:07:33,100 --> 00:07:36,370
ability to implement something called a

00:07:34,360 --> 00:07:38,940
convolutional neural network now a

00:07:36,370 --> 00:07:40,720
convolutional neural network is

00:07:38,940 --> 00:07:43,210
essentially based on the idea of these

00:07:40,720 --> 00:07:45,850
convolutions so in the past in their 70s

00:07:43,210 --> 00:07:47,470
and 80s they imagine that all neural

00:07:45,850 --> 00:07:50,110
networks would just have fully connected

00:07:47,470 --> 00:07:51,190
layers maybe say five or ten layers so

00:07:50,110 --> 00:07:53,470
all the neurons are connected linked

00:07:51,190 --> 00:07:55,030
learn some kind of thing the problem

00:07:53,470 --> 00:07:56,650
with that is to get anything useful you

00:07:55,030 --> 00:07:58,090
need huge numbers of layers I'm

00:07:56,650 --> 00:07:59,170
massively simplifying if anyone here is

00:07:58,090 --> 00:08:00,250
interested in AI they're probably

00:07:59,170 --> 00:08:01,750
twitching

00:08:00,250 --> 00:08:03,730
just calm down it's fine it's not

00:08:01,750 --> 00:08:07,900
accurate but it's works for the analogy

00:08:03,730 --> 00:08:10,510
if you put some convolutional matrices

00:08:07,900 --> 00:08:11,980
in front then you can dramatically

00:08:10,510 --> 00:08:14,290
reduce the number of layers you need

00:08:11,980 --> 00:08:15,370
because here's a concrete example let's

00:08:14,290 --> 00:08:18,040
say you're trying to recognize a cute

00:08:15,370 --> 00:08:21,010
puppy in a field okay there are in there

00:08:18,040 --> 00:08:22,690
is information about in that photo for

00:08:21,010 --> 00:08:24,940
example that bobbies in the top right of

00:08:22,690 --> 00:08:26,290
the photo it's actually not relevant to

00:08:24,940 --> 00:08:27,520
it being a puppy doesn't matter where

00:08:26,290 --> 00:08:30,280
it's sewn in loose in the photo it's

00:08:27,520 --> 00:08:33,010
still a puppy so by averaging out that

00:08:30,280 --> 00:08:35,620
information using a convolutional matrix

00:08:33,010 --> 00:08:37,810
like this you essentially remove that

00:08:35,620 --> 00:08:40,360
information and then if you want to

00:08:37,810 --> 00:08:42,190
detect it's got cute floppy ears well

00:08:40,360 --> 00:08:44,470
you could have a convolutional matrix

00:08:42,190 --> 00:08:46,570
with the weights designed to detect the

00:08:44,470 --> 00:08:49,180
lovely shape the undulating shape of its

00:08:46,570 --> 00:08:50,500
little is the crucial innovation of

00:08:49,180 --> 00:08:52,120
convolutional neural networks is that

00:08:50,500 --> 00:08:52,930
the weights themselves are not

00:08:52,120 --> 00:08:55,170
hard-coded

00:08:52,930 --> 00:08:57,160
so we're hard-coding them here but

00:08:55,170 --> 00:08:59,950
convolutional neural networks learn

00:08:57,160 --> 00:09:03,430
their weights they learn automatically

00:08:59,950 --> 00:09:06,220
what to average out what to detect yeah

00:09:03,430 --> 00:09:09,910
it really was only made possible by the

00:09:06,220 --> 00:09:12,700
advent of highly programmable and fast

00:09:09,910 --> 00:09:13,900
powerful consumer graphics cards because

00:09:12,700 --> 00:09:15,640
if you're doing 3d games doing a lot

00:09:13,900 --> 00:09:17,620
some lots of matrix multiplications lots

00:09:15,640 --> 00:09:21,790
of multiplying of numbers turns out you

00:09:17,620 --> 00:09:25,690
can use some fitting convolutions moving

00:09:21,790 --> 00:09:30,250
on that's not the button I meant to

00:09:25,690 --> 00:09:33,910
press ok so this is all very difficult

00:09:30,250 --> 00:09:35,500
to visualize we've heard some vague

00:09:33,910 --> 00:09:36,670
terms but what does it what does it

00:09:35,500 --> 00:09:39,880
actually mean what would it actually

00:09:36,670 --> 00:09:42,010
look like if you imagine this this set

00:09:39,880 --> 00:09:43,630
of chemicals well luckily ensuring his

00:09:42,010 --> 00:09:46,180
original paper he actually sketched out

00:09:43,630 --> 00:09:49,120
what this might look like he's chewing

00:09:46,180 --> 00:09:50,410
patterns so this is cheering's own

00:09:49,120 --> 00:09:52,210
handiwork

00:09:50,410 --> 00:09:53,740
yeah they actually took them a few hours

00:09:52,210 --> 00:09:55,870
to compute this because he wasn't using

00:09:53,740 --> 00:09:57,550
a computer in 1952 he's doing all by

00:09:55,870 --> 00:10:01,180
hand and it took him earth let's say an

00:09:57,550 --> 00:10:02,230
evening or two and yeah according to his

00:10:01,180 --> 00:10:05,050
rules remember that you've got these

00:10:02,230 --> 00:10:07,300
grid of chemicals that are reacting and

00:10:05,050 --> 00:10:10,060
diffusing he imagined it would look

00:10:07,300 --> 00:10:13,170
something like this but nowadays we have

00:10:10,060 --> 00:10:17,170
computers so let's do it properly this

00:10:13,170 --> 00:10:19,030
is an approximation of what I think he

00:10:17,170 --> 00:10:21,130
was trying to simulate oh the paper the

00:10:19,030 --> 00:10:22,690
the way the parameters and the formulas

00:10:21,130 --> 00:10:24,580
are rearranged it makes it quite hard to

00:10:22,690 --> 00:10:25,540
transcribe directly into code so this is

00:10:24,580 --> 00:10:28,480
my interpretation

00:10:25,540 --> 00:10:29,770
hopefully it's a accurate let's see what

00:10:28,480 --> 00:10:32,070
happens we'll see if it loads because he

00:10:29,770 --> 00:10:32,070
might not

00:10:36,129 --> 00:10:40,699
so this is being simulated versus

00:10:39,290 --> 00:10:42,980
recording but it's being simulated on a

00:10:40,699 --> 00:10:45,319
computer as you can imagine so it's kind

00:10:42,980 --> 00:10:46,699
of vaguely what he drew right does that

00:10:45,319 --> 00:10:48,740
make sense there's kind of roughly

00:10:46,699 --> 00:10:52,040
analogous it's hard to recreate exactly

00:10:48,740 --> 00:10:53,689
here's an alternative which is pretty

00:10:52,040 --> 00:10:55,579
similar to sit so it's a very different

00:10:53,689 --> 00:10:59,319
way of doing it but comes out with the

00:10:55,579 --> 00:10:59,319
same kind of imagery shoot he showed

00:10:59,589 --> 00:11:10,730
this one doesn't compress as well so you

00:11:08,720 --> 00:11:12,379
can see that his still frame that he's

00:11:10,730 --> 00:11:18,829
sketched out hypothetically could have

00:11:12,379 --> 00:11:20,769
been still from this how exciting yeah

00:11:18,829 --> 00:11:24,379
yeah let's get let's get pumped up

00:11:20,769 --> 00:11:31,339
sharing patterns it's like something

00:11:24,379 --> 00:11:32,930
from the 60s but ten years before this

00:11:31,339 --> 00:11:35,800
is what a typical cheering pattern would

00:11:32,930 --> 00:11:38,540
look like using some pretty

00:11:35,800 --> 00:11:41,110
straightforward rules the other ones I

00:11:38,540 --> 00:11:44,449
showed you were a bit more adventurous

00:11:41,110 --> 00:11:46,490
so this is a single blob of chemical B

00:11:44,449 --> 00:11:48,920
which is in blue you've got this big

00:11:46,490 --> 00:11:51,889
wash of chemical a in red a bit like the

00:11:48,920 --> 00:11:52,879
the table we saw earlier so I don't know

00:11:51,889 --> 00:11:54,470
if you can see this because the contrast

00:11:52,879 --> 00:11:57,920
isn't great but you've got this kind of

00:11:54,470 --> 00:12:00,290
celtic cross shape slowly evolving on

00:11:57,920 --> 00:12:00,800
the screen and i'll keep doing that for

00:12:00,290 --> 00:12:04,000
a while

00:12:00,800 --> 00:12:06,439
terr does its own thing each one of the

00:12:04,000 --> 00:12:08,750
you can't really see the individual

00:12:06,439 --> 00:12:09,470
cells here but you can imagine they're

00:12:08,750 --> 00:12:10,970
in there somewhere

00:12:09,470 --> 00:12:12,620
and they were all working on local rules

00:12:10,970 --> 00:12:14,779
remember they're reacting and then

00:12:12,620 --> 00:12:17,300
diffusing and it's interesting into

00:12:14,779 --> 00:12:19,759
capacitors comes from that simple

00:12:17,300 --> 00:12:24,769
process so now we've seen what it looks

00:12:19,759 --> 00:12:25,939
like let's look at the formula so I

00:12:24,769 --> 00:12:29,809
don't think this needs explaining so

00:12:25,939 --> 00:12:33,319
we'll go on oh okay you want me to

00:12:29,809 --> 00:12:34,399
explain it on a term by term basis okay

00:12:33,319 --> 00:12:37,399
fair enough

00:12:34,399 --> 00:12:38,870
so this I will admit is not my formula

00:12:37,399 --> 00:12:41,029
and it's not cheering this formula it's

00:12:38,870 --> 00:12:42,559
by a guy called Karl Sims who has got a

00:12:41,029 --> 00:12:44,179
fantastic website with much better

00:12:42,559 --> 00:12:46,189
images and pictures and descriptions and

00:12:44,179 --> 00:12:48,030
I have but I'm ripping off hopefully you

00:12:46,189 --> 00:12:52,620
won't mind

00:12:48,030 --> 00:12:54,300
that's the a and B these are two

00:12:52,620 --> 00:12:59,430
separate lines for different chemicals

00:12:54,300 --> 00:13:01,800
aim B it's a previous value okay da and

00:12:59,430 --> 00:13:03,300
DB are how much each chemical should

00:13:01,800 --> 00:13:04,860
diffuse now you can see here there are

00:13:03,300 --> 00:13:07,380
no numbers because that's configurable

00:13:04,860 --> 00:13:09,630
but the point is that we multiply da for

00:13:07,380 --> 00:13:13,110
example by this term here which is the

00:13:09,630 --> 00:13:15,840
convolution earlier the diffusion of a

00:13:13,110 --> 00:13:20,100
so multiply these two together and then

00:13:15,840 --> 00:13:22,080
subtract a times B times B here B

00:13:20,100 --> 00:13:23,310
squared now what that is is the actual

00:13:22,080 --> 00:13:25,530
definition of the reaction between

00:13:23,310 --> 00:13:28,050
chemical a and chemical B and

00:13:25,530 --> 00:13:30,930
effectively what it describes is for one

00:13:28,050 --> 00:13:32,820
chemical a and two chemical B's you get

00:13:30,930 --> 00:13:35,250
back three chemical B's hopefully my

00:13:32,820 --> 00:13:36,780
math is correct there we subtract that

00:13:35,250 --> 00:13:41,130
from chemical a because it's taking away

00:13:36,780 --> 00:13:42,900
from chemical a we then add a feed term

00:13:41,130 --> 00:13:43,770
now this is not a function call it looks

00:13:42,900 --> 00:13:45,570
like a function call

00:13:43,770 --> 00:13:47,550
it's just brackets when there's symbols

00:13:45,570 --> 00:13:49,590
and extra uses multiplying right but F

00:13:47,550 --> 00:13:51,210
here feed is it's just an arbitrary

00:13:49,590 --> 00:13:52,410
number that's configurable that's your

00:13:51,210 --> 00:13:54,180
expected to change that which is why

00:13:52,410 --> 00:13:57,660
it's not to find you but you multiply it

00:13:54,180 --> 00:13:59,160
by one subtract a and the effect of that

00:13:57,660 --> 00:14:01,470
is essentially it means that the feeder

00:13:59,160 --> 00:14:03,300
chemical chemical a asymptotic Li

00:14:01,470 --> 00:14:06,390
reaches one it will no we'd never go

00:14:03,300 --> 00:14:08,430
above one because when you remove some

00:14:06,390 --> 00:14:11,280
of the chemical a when it reacts to

00:14:08,430 --> 00:14:14,570
chemical B you then add some more feed

00:14:11,280 --> 00:14:17,610
chemical but you'll never add more than

00:14:14,570 --> 00:14:20,580
when so let's say it's 0.9 you would

00:14:17,610 --> 00:14:22,440
then times that by one subtract 0.9 0.1

00:14:20,580 --> 00:14:24,620
or PI over that so it never goes above

00:14:22,440 --> 00:14:27,330
one and then you multiply by the time

00:14:24,620 --> 00:14:28,740
Delta which in this case for our

00:14:27,330 --> 00:14:29,820
purposes we'll just say it's fixed you'd

00:14:28,740 --> 00:14:31,500
have to worry about that just assume

00:14:29,820 --> 00:14:33,570
that's one then you've got the same

00:14:31,500 --> 00:14:36,180
thing for B okay so you say taking B

00:14:33,570 --> 00:14:39,990
you're adding the diffusion of B with

00:14:36,180 --> 00:14:43,380
the with the the diffusion rates for B

00:14:39,990 --> 00:14:44,580
for B then you add the reactions so

00:14:43,380 --> 00:14:46,530
before with chemical a you're taking

00:14:44,580 --> 00:14:47,640
away now you're adding it's exactly the

00:14:46,530 --> 00:14:51,390
same calculation but you're adding it

00:14:47,640 --> 00:14:52,470
and then you subtract feed plus the kill

00:14:51,390 --> 00:14:54,360
rate which again is just another

00:14:52,470 --> 00:14:57,390
constant I wouldn't read too much into

00:14:54,360 --> 00:14:59,790
the facts feed and kill but you add them

00:14:57,390 --> 00:15:01,680
together and then you multiply by B so

00:14:59,790 --> 00:15:04,319
if B goes down

00:15:01,680 --> 00:15:05,759
the slower the closer to zero it gets

00:15:04,319 --> 00:15:08,459
the less you're going to subtract

00:15:05,759 --> 00:15:10,379
because if it's 0.1 then you multiply

00:15:08,459 --> 00:15:13,230
the subtraction but everyone gets less

00:15:10,379 --> 00:15:18,089
so it never goes below zero so that's a

00:15:13,230 --> 00:15:20,309
formula let's let's implement it so in

00:15:18,089 --> 00:15:22,230
JavaScript you do like this let's

00:15:20,309 --> 00:15:23,220
implement the convolution first so we've

00:15:22,230 --> 00:15:25,110
got our weights you saw those before

00:15:23,220 --> 00:15:27,300
it's just an averaging set of

00:15:25,110 --> 00:15:29,459
convolutional weights this is just your

00:15:27,300 --> 00:15:33,569
simple nested for loop going through for

00:15:29,459 --> 00:15:35,220
Y for X add up to the sum all the

00:15:33,569 --> 00:15:36,779
weights multiplied by the previous value

00:15:35,220 --> 00:15:39,959
and this is just a multi-dimensional

00:15:36,779 --> 00:15:43,579
matrix that's pretty much right so

00:15:39,959 --> 00:15:47,059
that's just that aspect of the equation

00:15:43,579 --> 00:15:49,619
the rest of it CS so you've got feed as

00:15:47,059 --> 00:15:50,670
0.055 actually Carlson's website

00:15:49,619 --> 00:15:52,800
recommended these because they work

00:15:50,670 --> 00:15:54,959
quite well the original animation of the

00:15:52,800 --> 00:15:56,999
kind of red and green Celtic crosses

00:15:54,959 --> 00:15:57,809
based on these parameters they were

00:15:56,999 --> 00:16:01,740
actually really simple

00:15:57,809 --> 00:16:03,149
a times B times B and then as you can

00:16:01,740 --> 00:16:05,309
see these kind of directly correlate

00:16:03,149 --> 00:16:07,740
you've got the previous value of a plus

00:16:05,309 --> 00:16:10,499
one times diffuse so the chemical a

00:16:07,740 --> 00:16:12,480
diffuses at a constant rate one and then

00:16:10,499 --> 00:16:14,069
you subtract the reaction add the feed

00:16:12,480 --> 00:16:16,259
value Mount multiplied by the inverse of

00:16:14,069 --> 00:16:18,420
a and B hopefully you can see this

00:16:16,259 --> 00:16:21,329
diffuses at a slower rate it diffuses at

00:16:18,420 --> 00:16:23,819
0.5 times so it's half as fast at

00:16:21,329 --> 00:16:25,199
diffusing as chemical a you add the

00:16:23,819 --> 00:16:29,249
reaction then you subtract the feed

00:16:25,199 --> 00:16:31,230
first kill multiplied by B so yeah we've

00:16:29,249 --> 00:16:33,720
implemented it you probably have this

00:16:31,230 --> 00:16:37,889
drawing to the canvas put it in a web

00:16:33,720 --> 00:16:41,670
page you're done walk away let's go home

00:16:37,889 --> 00:16:43,679
oh there's a problem and the problem is

00:16:41,670 --> 00:16:47,009
that I tried doing this and JavaScript

00:16:43,679 --> 00:16:48,569
is way too slow even if you rewrite your

00:16:47,009 --> 00:16:50,670
JavaScript to be like a C program you

00:16:48,569 --> 00:16:51,600
pre allocate your arrays you treat it as

00:16:50,670 --> 00:16:53,910
though you've got this constant amount

00:16:51,600 --> 00:16:56,009
of memory it's still still way too slow

00:16:53,910 --> 00:16:57,449
so what's the solution well if you were

00:16:56,009 --> 00:16:59,759
paying attention earlier you'd know that

00:16:57,449 --> 00:17:03,169
there is something out there that's very

00:16:59,759 --> 00:17:04,679
good at doing lots of convolutions yeah

00:17:03,169 --> 00:17:11,270
that's right

00:17:04,679 --> 00:17:11,270
graphics cards so let's refactor

00:17:12,930 --> 00:17:17,290
our JavaScript to run on a graphics card

00:17:15,580 --> 00:17:19,960
instead it can't be jammed for

00:17:17,290 --> 00:17:21,430
JavaScript anymore so I'm gonna have to

00:17:19,960 --> 00:17:23,890
explain a little bit about how to do

00:17:21,430 --> 00:17:25,390
this this is we'll be doing something

00:17:23,890 --> 00:17:27,910
called GPGPU which stands for

00:17:25,390 --> 00:17:30,520
general-purpose computing on a graphics

00:17:27,910 --> 00:17:32,260
processing unit and now on the desktop

00:17:30,520 --> 00:17:34,210
you would use something like OpenCL or

00:17:32,260 --> 00:17:36,580
CUDA you can probably do that on mobile

00:17:34,210 --> 00:17:38,860
as well and it means it makes there

00:17:36,580 --> 00:17:40,870
those are protocols languages and

00:17:38,860 --> 00:17:42,970
framework so make it very easy to do

00:17:40,870 --> 00:17:46,660
parallel computation on a graphics card

00:17:42,970 --> 00:17:48,550
in a nice easy easy to view where

00:17:46,660 --> 00:17:51,520
there's nice tooling you can simulate

00:17:48,550 --> 00:17:53,890
it's debugging tools this is the web so

00:17:51,520 --> 00:17:55,420
we don't have any of that Apple are

00:17:53,890 --> 00:17:57,730
planning to introduce that with

00:17:55,420 --> 00:17:59,740
something called web shading language

00:17:57,730 --> 00:18:01,570
and web GPU but I mean that'll be a long

00:17:59,740 --> 00:18:03,610
way off they're demoing it in Safari but

00:18:01,570 --> 00:18:04,630
it won't be usable for a long time so

00:18:03,610 --> 00:18:07,000
we're gonna have to do it the old-school

00:18:04,630 --> 00:18:08,740
way and the old-school way that you do

00:18:07,000 --> 00:18:11,560
maybe ten years ago is you would

00:18:08,740 --> 00:18:13,180
represent your data as colors because

00:18:11,560 --> 00:18:14,980
graphics cards work with colors they're

00:18:13,180 --> 00:18:16,150
good at rendering scenes if you can just

00:18:14,980 --> 00:18:19,390
translate the data you're working with

00:18:16,150 --> 00:18:24,100
into colors you're all good an RGBA

00:18:19,390 --> 00:18:26,770
pixel is for 8 bit numbers yeah so 0 to

00:18:24,100 --> 00:18:31,120
255 if you're using a high def or sorry

00:18:26,770 --> 00:18:32,590
a higher color bandwidth from monitoring

00:18:31,120 --> 00:18:34,600
breaths got maybe 11 more space and

00:18:32,590 --> 00:18:36,580
there are ways to trick the graphics

00:18:34,600 --> 00:18:37,720
card into having more accuracy but we

00:18:36,580 --> 00:18:39,850
won't go into that we can't do on the

00:18:37,720 --> 00:18:42,630
web particularly easily anyway so let's

00:18:39,850 --> 00:18:45,940
represent our chemical concentrations as

00:18:42,630 --> 00:18:47,410
colored pixels I'm gonna have to very

00:18:45,940 --> 00:18:50,200
quickly explain how graphics programming

00:18:47,410 --> 00:18:52,630
works essentially 3d programming is

00:18:50,200 --> 00:18:54,730
split into two stages the vertex stage

00:18:52,630 --> 00:18:56,230
in the fragment stage these are two

00:18:54,730 --> 00:18:57,400
small programs that you provide to the

00:18:56,230 --> 00:18:59,800
graphics card and you write it in this

00:18:57,400 --> 00:19:02,850
simplified effectively a version of C

00:18:59,800 --> 00:19:07,600
called GLSL if you're doing Microsoft

00:19:02,850 --> 00:19:09,610
develop maybe HLSL and the vertex

00:19:07,600 --> 00:19:11,590
program run set every single point in

00:19:09,610 --> 00:19:12,820
the triangle you can't see any triangles

00:19:11,590 --> 00:19:16,180
here but imagine these shape these

00:19:12,820 --> 00:19:18,460
polygons made of triangles the fragment

00:19:16,180 --> 00:19:20,740
shader runs for every single pixel

00:19:18,460 --> 00:19:22,780
inside every single triangle so it's

00:19:20,740 --> 00:19:25,330
running quite a lot depending on your

00:19:22,780 --> 00:19:26,500
resolution and the

00:19:25,330 --> 00:19:28,300
called a fragment shader because there's

00:19:26,500 --> 00:19:29,920
not a one-to-one mapping between pixels

00:19:28,300 --> 00:19:31,300
and fragments if you're using

00:19:29,920 --> 00:19:33,010
anti-aliasing for example there might be

00:19:31,300 --> 00:19:33,940
four fragments - everyone picks on the

00:19:33,010 --> 00:19:34,510
average to give you a better picture

00:19:33,940 --> 00:19:35,980
quality

00:19:34,510 --> 00:19:37,480
they're called shaders because

00:19:35,980 --> 00:19:39,340
historically they use the lighting only

00:19:37,480 --> 00:19:42,610
but we're gonna make opting them to do

00:19:39,340 --> 00:19:45,280
arbitrary computation yeah

00:19:42,610 --> 00:19:48,400
graphics cards can also be instructed to

00:19:45,280 --> 00:19:49,990
render to two different targets they can

00:19:48,400 --> 00:19:51,610
render to the screen so you see the

00:19:49,990 --> 00:19:53,470
monkey head on the screen or they can

00:19:51,610 --> 00:19:56,830
meant as a memory and if is often known

00:19:53,470 --> 00:19:58,060
as a frame buffer and given that you're

00:19:56,830 --> 00:19:59,200
rendering just somewhere in the

00:19:58,060 --> 00:20:00,670
computer's memory so you can put on the

00:19:59,200 --> 00:20:04,990
screen it'll be the screen frame buffer

00:20:00,670 --> 00:20:06,790
and an off-screen frame buffer if you

00:20:04,990 --> 00:20:08,470
represent your data as a 2d critic

00:20:06,790 --> 00:20:10,690
colors and iteratively right to an

00:20:08,470 --> 00:20:13,360
off-screen buffer you can use a previous

00:20:10,690 --> 00:20:14,740
off-screen buffer and a data the model

00:20:13,360 --> 00:20:16,930
you're putting in and the program you're

00:20:14,740 --> 00:20:19,420
running to iteratively compute more

00:20:16,930 --> 00:20:22,480
information this is obvious from the

00:20:19,420 --> 00:20:24,070
diagram really red monkey head add to

00:20:22,480 --> 00:20:26,530
yellow monkey a dad to blue monkey hair

00:20:24,070 --> 00:20:28,450
dad's to light brown monkey it makes a

00:20:26,530 --> 00:20:30,310
lovely shaded monkey head right yeah

00:20:28,450 --> 00:20:33,310
it's obvious but I think goes back

00:20:30,310 --> 00:20:34,270
against you use the old frame buffer it

00:20:33,310 --> 00:20:36,700
allows you to do huge amounts of

00:20:34,270 --> 00:20:39,670
calculations at once in this case we're

00:20:36,700 --> 00:20:41,080
simulating a simple 2d grid so we don't

00:20:39,670 --> 00:20:43,030
need a complex 3d model we're just

00:20:41,080 --> 00:20:44,560
having two triangles stuck together into

00:20:43,030 --> 00:20:47,050
one rectangle you can see the individual

00:20:44,560 --> 00:20:48,790
pixels here they're blown up massive so

00:20:47,050 --> 00:20:51,580
yeah I'm going to be using an online ID

00:20:48,790 --> 00:20:54,100
called shader toy it reduces a lot of

00:20:51,580 --> 00:20:55,630
the hassle I could have done this myself

00:20:54,100 --> 00:20:57,220
but I didn't have the time I thought I

00:20:55,630 --> 00:20:59,050
wanted to learn shader toy it

00:20:57,220 --> 00:21:01,210
deliberately forces you to write all of

00:20:59,050 --> 00:21:02,920
your graphics processing as fragment

00:21:01,210 --> 00:21:04,780
shaders there are no way to input

00:21:02,920 --> 00:21:06,400
complex 3d models so it's kind of it's

00:21:04,780 --> 00:21:10,090
almost like code golf all the way it's

00:21:06,400 --> 00:21:12,760
very easy to share it's quite fun yeah

00:21:10,090 --> 00:21:14,820
so this is a JavaScript compared to GLSL

00:21:12,760 --> 00:21:17,710
I don't know if everyone can see that

00:21:14,820 --> 00:21:21,580
but very very similar here this is our

00:21:17,710 --> 00:21:23,370
convolution with js4 loop adding things

00:21:21,580 --> 00:21:25,360
up in GL I fell I'm using a

00:21:23,370 --> 00:21:26,590
two-dimensional vector basically just

00:21:25,360 --> 00:21:28,420
means two numbers because we've got

00:21:26,590 --> 00:21:29,680
chemical and chemical be if I was doing

00:21:28,420 --> 00:21:32,650
it properly in JavaScript I'd also have

00:21:29,680 --> 00:21:34,540
two numbers maybe an array adding up the

00:21:32,650 --> 00:21:35,680
coordinates here slightly different is

00:21:34,540 --> 00:21:36,700
running on the graphics card coordinate

00:21:35,680 --> 00:21:38,830
system so it different doesn't matter

00:21:36,700 --> 00:21:41,110
adding up the weights exactly saying

00:21:38,830 --> 00:21:42,490
loading it from a texture this is like a

00:21:41,110 --> 00:21:45,660
texture read but we're loading in

00:21:42,490 --> 00:21:47,680
previous mayor the previous stored beta

00:21:45,660 --> 00:21:53,590
which is exactly the same as what you're

00:21:47,680 --> 00:21:58,360
doing that so let's see what it looks

00:21:53,590 --> 00:22:01,030
like the nice thing about this example

00:21:58,360 --> 00:22:02,740
is that there's it's going to show you

00:22:01,030 --> 00:22:05,170
the exact chemical concentration

00:22:02,740 --> 00:22:07,470
involved at any post processing it also

00:22:05,170 --> 00:22:09,370
looks most like a puffer fish or coral I

00:22:07,470 --> 00:22:18,400
don't know if it's gonna work we'll see

00:22:09,370 --> 00:22:20,290
weapons like this good it worked ok cool

00:22:18,400 --> 00:22:22,150
so this is what you saw before but now

00:22:20,290 --> 00:22:23,830
it's running in real time as you can see

00:22:22,150 --> 00:22:27,610
if you click and drag can add more

00:22:23,830 --> 00:22:28,900
chemical be well uh as you can see it's

00:22:27,610 --> 00:22:32,590
evolving in front of you is undulating

00:22:28,900 --> 00:22:33,940
in this interesting pattern remember

00:22:32,590 --> 00:22:35,890
that you've seen all of the maths

00:22:33,940 --> 00:22:36,430
involved in this now that formula that's

00:22:35,890 --> 00:22:38,580
simple

00:22:36,430 --> 00:22:41,830
me over there was like 15 lines of code

00:22:38,580 --> 00:22:43,660
and most of that was just indentation so

00:22:41,830 --> 00:22:45,670
this is a this is doing some really

00:22:43,660 --> 00:22:49,090
fascinating stuff you can see it's kind

00:22:45,670 --> 00:22:50,320
of self-healing as you drag and try and

00:22:49,090 --> 00:22:51,910
destroy something chemicals just comes

00:22:50,320 --> 00:22:53,920
back and it automatically creates this

00:22:51,910 --> 00:22:57,070
kind of pufferfish effect I want to show

00:22:53,920 --> 00:22:58,750
you very very quickly how easy hit

00:22:57,070 --> 00:23:02,500
escape and then nothing happens so I

00:22:58,750 --> 00:23:04,270
hope I haven't hit escape so you won't

00:23:02,500 --> 00:23:05,410
be able to particularly see the the code

00:23:04,270 --> 00:23:06,930
here but I want to show you that there's

00:23:05,410 --> 00:23:09,760
I'm not lying to you

00:23:06,930 --> 00:23:11,560
very very small Matt's code here you can

00:23:09,760 --> 00:23:13,750
change the reaction coefficient if you

00:23:11,560 --> 00:23:15,780
want we could do something weird like

00:23:13,750 --> 00:23:25,260
see what happens to be put in for here

00:23:15,780 --> 00:23:25,260
take play not a lot let's go down to 2

00:23:29,940 --> 00:23:33,820
something's happening sort of increasing

00:23:32,259 --> 00:23:35,289
the density again that's really hard to

00:23:33,820 --> 00:23:37,600
see but if you're up close to be easy to

00:23:35,289 --> 00:23:38,950
see it's also I'm also going to show you

00:23:37,600 --> 00:23:41,590
how easy it is to change the colors

00:23:38,950 --> 00:23:45,009
involved some ugly codes that I didn't

00:23:41,590 --> 00:23:48,120
delete here but just bet so the best way

00:23:45,009 --> 00:23:50,220
to do it would be something like this

00:23:48,120 --> 00:23:58,919
what's your favorite color

00:23:50,220 --> 00:23:58,919
an easy one for to do in RGB peach Oh

00:24:01,139 --> 00:24:06,940
the unfortunate doesn't accept see CSS

00:24:03,850 --> 00:24:11,529
names let's make it something like let's

00:24:06,940 --> 00:24:15,220
mix between let's go with a lovely right

00:24:11,529 --> 00:24:16,269
sickly green so this is a vet for you

00:24:15,220 --> 00:24:18,929
can't see this because it's absolutely

00:24:16,269 --> 00:24:21,730
tiny but I'm not gonna make it bigger

00:24:18,929 --> 00:24:30,309
and then let's mix tween that and maybe

00:24:21,730 --> 00:24:35,200
like a bright yellow sorry for always

00:24:30,309 --> 00:24:40,679
fascinating watching people work first

00:24:35,200 --> 00:24:45,789
time should you've got eager eyesight

00:24:40,679 --> 00:24:49,659
there we go get you in a fighter jet oh

00:24:45,789 --> 00:24:50,919
it's green Wow now the reason why

00:24:49,659 --> 00:24:53,889
there's not much red is because there's

00:24:50,919 --> 00:24:55,539
not much chemical B so if we did

00:24:53,889 --> 00:24:59,200
something like I don't know divided by

00:24:55,539 --> 00:25:00,370
0.1 the nice thing about fragments is

00:24:59,200 --> 00:25:01,690
you have to think very kind of this way

00:25:00,370 --> 00:25:06,419
there we go we've gone too far so let's

00:25:01,690 --> 00:25:10,299
try and go wow that was the other way

00:25:06,419 --> 00:25:11,559
let's go one five you can kind of see a

00:25:10,299 --> 00:25:16,000
little bit of green let's make it a

00:25:11,559 --> 00:25:19,509
lovely yellow ah there you go can you

00:25:16,000 --> 00:25:22,509
see that so now you can see how easy it

00:25:19,509 --> 00:25:24,929
is to make garish ugly things

00:25:22,509 --> 00:25:28,720
it doesn't quite a bit messing around so

00:25:24,929 --> 00:25:31,299
that's the first simple demo so again

00:25:28,720 --> 00:25:33,039
here's the the code involved I'm put

00:25:31,299 --> 00:25:35,710
this here so you can contrast and

00:25:33,039 --> 00:25:38,700
compare to the next couple of demos so

00:25:35,710 --> 00:25:38,700
let's see what the next one looks like

00:25:39,690 --> 00:25:49,470
oh that did not actually link up

00:25:43,320 --> 00:25:51,990
oh that's too far okay there we go

00:25:49,470 --> 00:25:53,880
zebra so let's see if we can simulate a

00:25:51,990 --> 00:25:55,620
zebra and the interesting thing here the

00:25:53,880 --> 00:25:56,970
only I've changed a few things because

00:25:55,620 --> 00:25:58,350
sometimes you need to do a lot of

00:25:56,970 --> 00:25:59,490
filling around with the maths but the

00:25:58,350 --> 00:26:01,410
main interesting thing is I've changed

00:25:59,490 --> 00:26:03,300
my weights I've now got two sets of

00:26:01,410 --> 00:26:05,370
weights and you can see there there's a

00:26:03,300 --> 00:26:07,020
symmetric okay so on the right there's

00:26:05,370 --> 00:26:08,910
zero point three on the left zero point

00:26:07,020 --> 00:26:11,010
one so we'll see what happens there this

00:26:08,910 --> 00:26:12,060
one's the inverse and then this bit here

00:26:11,010 --> 00:26:14,070
which you might be able to see I'm

00:26:12,060 --> 00:26:15,570
basically adding up the weights but I'm

00:26:14,070 --> 00:26:19,160
using a function called mix which in

00:26:15,570 --> 00:26:21,660
GLSL basically picks between linearly

00:26:19,160 --> 00:26:23,280
interpolate between first two arguments

00:26:21,660 --> 00:26:27,690
based on the third so this has to be a

00:26:23,280 --> 00:26:31,470
float between 0.01 so I'm saying mix

00:26:27,690 --> 00:26:33,170
between 0.5 of the left weight and 0-4

00:26:31,470 --> 00:26:35,460
oh no that's not true I'm mixing between

00:26:33,170 --> 00:26:37,920
the left weight in the right way based

00:26:35,460 --> 00:26:42,450
on the UV coordinates just imagine that

00:26:37,920 --> 00:26:43,740
stir the dimensions of the x-axis so

00:26:42,450 --> 00:26:46,410
it's going to pick either side naturally

00:26:43,740 --> 00:26:49,290
I'm stepping I'm not mixing I'm stepping

00:26:46,410 --> 00:26:51,960
between zero and one and then after that

00:26:49,290 --> 00:26:55,950
in the y-axis I'm mixing between that

00:26:51,960 --> 00:26:56,910
and as a weighted effectively zero you

00:26:55,950 --> 00:27:05,370
might not be able to predict what

00:26:56,910 --> 00:27:06,360
happened but let's see if it's gonna

00:27:05,370 --> 00:27:10,860
take a little while so I'm just gonna

00:27:06,360 --> 00:27:13,350
click and drag and get it go in so again

00:27:10,860 --> 00:27:18,390
exactly same rules fiddling around with

00:27:13,350 --> 00:27:20,190
some of the coefficients but and and the

00:27:18,390 --> 00:27:21,720
the main effect here is still with the

00:27:20,190 --> 00:27:24,800
weights though there's the consequence

00:27:21,720 --> 00:27:27,720
of picking between those two weights I

00:27:24,800 --> 00:27:30,000
know I think this looks like a zebra

00:27:27,720 --> 00:27:35,250
personally I never never seen one in

00:27:30,000 --> 00:27:40,950
real life but if yeah and as as we see

00:27:35,250 --> 00:27:42,990
it evolve over time ah well that's

00:27:40,950 --> 00:27:44,490
because I'm I'm picking between the two

00:27:42,990 --> 00:27:47,330
weights I was kind of hoping that

00:27:44,490 --> 00:27:49,700
wouldn't be obvious it sounds

00:27:47,330 --> 00:27:50,870
that sounds arbitrary but I mean this is

00:27:49,700 --> 00:27:53,330
a laboratory so it's fine

00:27:50,870 --> 00:27:55,400
the point is I'm not putting in a rule

00:27:53,330 --> 00:27:56,590
called make it like a zebra I'm putting

00:27:55,400 --> 00:27:59,600
in some very simple rules that

00:27:56,590 --> 00:28:01,790
emergently the worst my worst crime is

00:27:59,600 --> 00:28:08,480
is having two sets of weights arbitrate

00:28:01,790 --> 00:28:16,580
between exactly and that is how zebras

00:28:08,480 --> 00:28:18,380
are made there you go you can cause you

00:28:16,580 --> 00:28:20,750
see you've seen that on zebras before

00:28:18,380 --> 00:28:24,020
it's just like a zebra and look you can

00:28:20,750 --> 00:28:26,510
mess around with the zebra oh stop it

00:28:24,020 --> 00:28:31,150
saying I'm adding more chemicals for the

00:28:26,510 --> 00:28:36,350
zebra yeah I have been warned for that

00:28:31,150 --> 00:28:38,960
okay so let's let's move on I have to go

00:28:36,350 --> 00:28:41,510
out of this again so I press go back

00:28:38,960 --> 00:28:43,100
here sorry I'm having to X out of shade

00:28:41,510 --> 00:28:46,820
of toys full screen mode it's a little

00:28:43,100 --> 00:28:48,400
bit janky good now you might be thinking

00:28:46,820 --> 00:28:50,720
what if you're running all these

00:28:48,400 --> 00:28:52,730
cheering patterns at once well it's

00:28:50,720 --> 00:28:54,560
shaded shaded toys using the request

00:28:52,730 --> 00:28:56,540
animation frame function that the

00:28:54,560 --> 00:28:58,820
browser exposes so the moment the tabs

00:28:56,540 --> 00:29:00,440
hidden stops doing any work that also

00:28:58,820 --> 00:29:02,000
means that you have to run at 60 frames

00:29:00,440 --> 00:29:03,860
a second so if you wanted to run the

00:29:02,000 --> 00:29:04,820
simulation faster you're out of luck you

00:29:03,860 --> 00:29:06,380
wouldn't you need to build it yourself

00:29:04,820 --> 00:29:08,180
in you could drive the graphics card as

00:29:06,380 --> 00:29:10,190
hard as you like this it's just it's

00:29:08,180 --> 00:29:12,800
just messing around it's just toy so

00:29:10,190 --> 00:29:15,380
next one this is my favorite I call this

00:29:12,800 --> 00:29:16,760
one brains now this is exactly the same

00:29:15,380 --> 00:29:19,460
rules as before actually so we've gone

00:29:16,760 --> 00:29:20,990
back to the original bytes but the

00:29:19,460 --> 00:29:22,670
interesting thing is when I'm rendering

00:29:20,990 --> 00:29:25,130
this to the screen I'm doing a bit more

00:29:22,670 --> 00:29:26,960
interesting shiny stuff I'm actually

00:29:25,130 --> 00:29:29,030
using a convolution that does edge

00:29:26,960 --> 00:29:31,400
detection here okay so you can see that

00:29:29,030 --> 00:29:34,640
there's an asymmetric corner here one

00:29:31,400 --> 00:29:36,500
one one one five minus two minus two and

00:29:34,640 --> 00:29:38,780
it kind of all adds up we'll see what

00:29:36,500 --> 00:29:40,940
happens I'm also cheating a little bit

00:29:38,780 --> 00:29:42,350
shada Tory makes it easy to add textures

00:29:40,940 --> 00:29:44,840
in and I'm mixing some textures

00:29:42,350 --> 00:29:46,780
interesting flavor so that's not to do

00:29:44,840 --> 00:29:52,250
with cheering that's just to do with me

00:29:46,780 --> 00:29:54,700
what happens if you're squeamish look

00:29:52,250 --> 00:29:54,700
away now

00:29:56,320 --> 00:30:01,560
hopefully you guys can see the lighting

00:29:59,600 --> 00:30:08,340
effect of the

00:30:01,560 --> 00:30:17,580
edge detection what do you think do you

00:30:08,340 --> 00:30:19,140
like it yeah well you're very welcome I

00:30:17,580 --> 00:30:22,980
mean the links on here and it will just

00:30:19,140 --> 00:30:24,660
run on a any connect to your TV let's

00:30:22,980 --> 00:30:27,960
destroy the brain oh it's kind of

00:30:24,660 --> 00:30:29,250
growing back so there you go that's

00:30:27,960 --> 00:30:30,690
exactly the same rules that you saw

00:30:29,250 --> 00:30:32,640
before but just dressed up in a way that

00:30:30,690 --> 00:30:37,230
looks gooey and disgusting so there you

00:30:32,640 --> 00:30:39,270
go that's that's brains and then you can

00:30:37,230 --> 00:30:41,310
see you you know the the texturing is

00:30:39,270 --> 00:30:42,930
extremely subtle at the back you won't

00:30:41,310 --> 00:30:44,940
be able to see it but without it looks

00:30:42,930 --> 00:30:47,970
just kind of flat and a bit boring so

00:30:44,940 --> 00:30:54,030
trust me it really helps so we're going

00:30:47,970 --> 00:30:58,200
to go to the next demo now so this one I

00:30:54,030 --> 00:31:01,530
call mitosis and this is honestly

00:30:58,200 --> 00:31:04,110
gobsmacked it's God gobsmacking it's

00:31:01,530 --> 00:31:04,920
quite hard to say because we're changing

00:31:04,110 --> 00:31:06,450
the rules very slightly

00:31:04,920 --> 00:31:07,500
we're introducing a third chemical

00:31:06,450 --> 00:31:09,150
because we always have to feed a

00:31:07,500 --> 00:31:11,040
chemical chemical B now we've got

00:31:09,150 --> 00:31:14,010
chemical C and you can see the reaction

00:31:11,040 --> 00:31:16,830
is exactly the same okay so a times B

00:31:14,010 --> 00:31:20,940
times B a times C times C but now

00:31:16,830 --> 00:31:23,970
chemical a is subtracted from the

00:31:20,940 --> 00:31:27,810
reaction term reaction b-plus reaction C

00:31:23,970 --> 00:31:29,310
and C is taking on reaction see what's

00:31:27,810 --> 00:31:30,300
gonna happen oh the other thing I

00:31:29,310 --> 00:31:32,340
haven't talked about is the fact I've

00:31:30,300 --> 00:31:33,900
slightly adjusted the kill rate the feed

00:31:32,340 --> 00:31:35,940
rate the feed rate has been reduced from

00:31:33,900 --> 00:31:38,520
zero point zero five five to zero point

00:31:35,940 --> 00:31:40,080
zero to eight I know those off behind by

00:31:38,520 --> 00:31:42,030
harks have been looking them a lot and

00:31:40,080 --> 00:31:43,590
started tweaking them there's something

00:31:42,030 --> 00:31:45,240
amazing that happens this you wouldn't

00:31:43,590 --> 00:31:46,890
need a second a third chemical to get

00:31:45,240 --> 00:31:47,670
this effect a third chemical just makes

00:31:46,890 --> 00:31:51,080
it even better

00:31:47,670 --> 00:31:55,460
but with that feed rate pulled down

00:31:51,080 --> 00:31:55,460
something incredible happens

00:31:56,390 --> 00:31:59,660
so I click-and-drag

00:32:00,260 --> 00:32:04,040
hopefully you can see this in the back

00:32:04,370 --> 00:32:07,370
yeah

00:32:07,420 --> 00:32:13,250
same math same formally you saw just

00:32:10,550 --> 00:32:15,140
with some of the some of the variables

00:32:13,250 --> 00:32:17,780
slightly tweaked I mean the difference

00:32:15,140 --> 00:32:20,030
between that and the first one you saw

00:32:17,780 --> 00:32:21,410
the brains was well the difference in

00:32:20,030 --> 00:32:24,890
zero point from zero five five and zero

00:32:21,410 --> 00:32:27,170
point zero two eight that's pretty

00:32:24,890 --> 00:32:29,950
incredible right that's amazing don't

00:32:27,170 --> 00:32:32,030
know what the practical implications

00:32:29,950 --> 00:32:36,530
it's incredible they're competing

00:32:32,030 --> 00:32:38,960
they're fighting over chemicals Wow okay

00:32:36,530 --> 00:32:40,280
so that one's mitosis and as you can see

00:32:38,960 --> 00:32:42,620
I've applied the same lighting effect to

00:32:40,280 --> 00:32:44,390
make it look more gooey I've gone with a

00:32:42,620 --> 00:32:47,410
pink and purple to make it look like a

00:32:44,390 --> 00:32:50,920
gram-negative and gram-positive bacteria

00:32:47,410 --> 00:32:55,790
it's a very bacterial and organic

00:32:50,920 --> 00:32:57,140
fixation and again you can see the code

00:32:55,790 --> 00:32:58,310
it's a there's a lot of comments because

00:32:57,140 --> 00:33:00,020
I was desperately working on this as

00:32:58,310 --> 00:33:02,090
quickly as I could but it's actually not

00:33:00,020 --> 00:33:04,430
a lot to it look I mean there's ignoring

00:33:02,090 --> 00:33:06,830
the comments very very simple stuff okay

00:33:04,430 --> 00:33:11,690
next one we're going to go back to the

00:33:06,830 --> 00:33:15,020
old presentation there I call this

00:33:11,690 --> 00:33:16,610
predator slash prey now this is based

00:33:15,020 --> 00:33:19,760
off of mitosis but I've slightly

00:33:16,610 --> 00:33:21,800
adjusted the the rules now chemical

00:33:19,760 --> 00:33:23,990
reaction B is the same a times B times B

00:33:21,800 --> 00:33:26,000
we actually see is really complicated

00:33:23,990 --> 00:33:28,880
it's gauge is two minutes or stayed up

00:33:26,000 --> 00:33:32,090
really late to make your work kitten

00:33:28,880 --> 00:33:34,210
chemical a has been has it been slightly

00:33:32,090 --> 00:33:37,130
tweaked it looks pretty similar actually

00:33:34,210 --> 00:33:40,820
the interesting thing is with B we're

00:33:37,130 --> 00:33:41,710
now making B the fuse a slower rate now

00:33:40,820 --> 00:33:44,120
okay

00:33:41,710 --> 00:33:45,590
chemical chemical B diffuses of slow

00:33:44,120 --> 00:33:48,230
rate chemical see diffuse at the same

00:33:45,590 --> 00:33:50,930
rate that chemical be used to and you've

00:33:48,230 --> 00:33:54,260
got this term here B to C as you might

00:33:50,930 --> 00:33:57,500
be thinking it's a transforming chemical

00:33:54,260 --> 00:33:59,690
B into chemical C and then there's a

00:33:57,500 --> 00:34:02,150
slight term here that makes C slowly

00:33:59,690 --> 00:34:03,830
ever way over time this one will blow

00:34:02,150 --> 00:34:06,640
your minds it blew my mind when I saw

00:34:03,830 --> 00:34:06,640
yes

00:34:18,410 --> 00:34:28,070
can everyone see that at the back yeah

00:34:25,610 --> 00:34:30,350
thanks man that's incredible

00:34:28,070 --> 00:34:31,460
same maths I've just slightly tweaked

00:34:30,350 --> 00:34:33,410
some of it and made some slightly

00:34:31,460 --> 00:34:35,900
arbitrary changes when I first got this

00:34:33,410 --> 00:34:38,060
working it would quickly blow up even a

00:34:35,900 --> 00:34:39,560
Greenwood win or or redwood win and then

00:34:38,060 --> 00:34:40,790
you know they'd all die out so I have

00:34:39,560 --> 00:34:42,320
had to tweak it to make it kind of

00:34:40,790 --> 00:34:43,730
stable I don't know how long this will

00:34:42,320 --> 00:34:45,310
go on for this is like the ultimate

00:34:43,730 --> 00:34:51,400
screensaver I could watch this forever

00:34:45,310 --> 00:34:53,870
and I got and I plan to quit him a job

00:34:51,400 --> 00:34:55,550
but I don't know how long this will last

00:34:53,870 --> 00:34:57,500
I've watched it for maybe 10 minutes

00:34:55,550 --> 00:34:59,510
before but oh no that makes you sound

00:34:57,500 --> 00:35:04,100
weird doesn't it it's just just too long

00:34:59,510 --> 00:35:07,610
to me think what's he really it could

00:35:04,100 --> 00:35:08,840
last for an hour 50 hours 10 years but

00:35:07,610 --> 00:35:10,700
it can keep going forever we don't know

00:35:08,840 --> 00:35:14,050
hopefully the better Green does the

00:35:10,700 --> 00:35:19,940
better red does and vice versa yeah I

00:35:14,050 --> 00:35:23,270
just I love this one alright let's help

00:35:19,940 --> 00:35:25,370
out there red my my point is just

00:35:23,270 --> 00:35:27,350
alternating between red and green every

00:35:25,370 --> 00:35:28,610
couple of seconds there's no easy way to

00:35:27,350 --> 00:35:31,100
mess around this stuff this keyboard

00:35:28,610 --> 00:35:32,630
inputs but by the way this stuff works

00:35:31,100 --> 00:35:35,150
on mobile not particularly well it runs

00:35:32,630 --> 00:35:38,960
beautifully shader toys just awkward you

00:35:35,150 --> 00:35:41,540
can't really drag but there you go there

00:35:38,960 --> 00:35:43,010
you go Red's winning now but then green

00:35:41,540 --> 00:35:45,800
stopped taking over again in the middle

00:35:43,010 --> 00:35:48,680
I often five thing is quite sad look at

00:35:45,800 --> 00:35:50,480
these two right they're like butch got

00:35:48,680 --> 00:35:51,230
star-crossed lovers eating away at the

00:35:50,480 --> 00:35:56,180
green and then when they come

00:35:51,230 --> 00:35:59,570
face-to-face no and they'd I feel like

00:35:56,180 --> 00:36:00,760
me and my girlfriend there I don't know

00:35:59,570 --> 00:36:08,720
what that means

00:36:00,760 --> 00:36:10,220
okay moving on very very quickly so you

00:36:08,720 --> 00:36:12,050
might be thinking well how does this all

00:36:10,220 --> 00:36:16,990
relate to leopard spots

00:36:12,050 --> 00:36:16,990
well here's for the finale

00:36:17,460 --> 00:36:22,450
Cheeta sports yeah it turns out leopard

00:36:21,130 --> 00:36:23,980
spots are really hard to do because

00:36:22,450 --> 00:36:25,600
they're they're kind of a brown patch

00:36:23,980 --> 00:36:27,250
with a little bits of black splotches

00:36:25,600 --> 00:36:28,990
and I need like a three chemical

00:36:27,250 --> 00:36:30,369
solution to make that work I spent ages

00:36:28,990 --> 00:36:31,840
this lunchtime working and it just

00:36:30,369 --> 00:36:32,950
couldn't figure it out so in the end I

00:36:31,840 --> 00:36:35,980
went with cheetahs would you only have a

00:36:32,950 --> 00:36:37,750
little round spots and to treat you guys

00:36:35,980 --> 00:36:39,369
I did some textures and have a bit of

00:36:37,750 --> 00:36:41,230
color so it should look a bit nicer and

00:36:39,369 --> 00:36:43,540
you can see him doing the texture access

00:36:41,230 --> 00:36:45,580
here this is just to prove I'm honest

00:36:43,540 --> 00:36:46,690
this is not you don't have to understand

00:36:45,580 --> 00:36:51,160
exactly what's going on here this is

00:36:46,690 --> 00:36:56,619
sort of a nice yellowy colour alan

00:36:51,160 --> 00:36:58,150
turing's cheetah sports matter if it

00:36:56,619 --> 00:37:00,190
hadn't worked what a disappointing

00:36:58,150 --> 00:37:05,440
finale and as you can see actually this

00:37:00,190 --> 00:37:07,390
is just a modified mitosis it's kind of

00:37:05,440 --> 00:37:09,280
almost there you can just kind of see

00:37:07,390 --> 00:37:11,770
that right so from these big bits that's

00:37:09,280 --> 00:37:26,830
more like a giraffe it's like a it's

00:37:11,770 --> 00:37:28,060
like a half cheetah half giraffe yeah so

00:37:26,830 --> 00:37:32,170
there there you go that's our ensuring

00:37:28,060 --> 00:37:33,250
in the cheetah spots in six months time

00:37:32,170 --> 00:37:36,010
I'll get back to you with the leopard

00:37:33,250 --> 00:37:37,450
spots there's actually a paper about how

00:37:36,010 --> 00:37:39,040
to make leopard spots with this stuff

00:37:37,450 --> 00:37:40,330
and they I mean they had to write paper

00:37:39,040 --> 00:37:42,460
on it so the chance to me doing it at

00:37:40,330 --> 00:37:43,930
lunchtime is quite low but the beautiful

00:37:42,460 --> 00:37:45,369
thing about all of this is messing

00:37:43,930 --> 00:37:46,750
around the colours so easy messing with

00:37:45,369 --> 00:37:48,160
the maths it's really not log code here

00:37:46,750 --> 00:37:49,720
so it saves you 20 minutes to come up

00:37:48,160 --> 00:37:51,160
with something really fun there's loads

00:37:49,720 --> 00:37:52,650
of ones on there that I came up with I

00:37:51,160 --> 00:37:54,670
want to show you but I don't have time

00:37:52,650 --> 00:37:57,420
if you're interested I'll send you links

00:37:54,670 --> 00:38:00,310
later so what's next

00:37:57,420 --> 00:38:01,450
conclusion why am I telling you this so

00:38:00,310 --> 00:38:03,310
I kind of wanted to make the point that

00:38:01,450 --> 00:38:05,790
first of all you don't need to have a

00:38:03,310 --> 00:38:08,980
maths degree and have fun with maths I

00:38:05,790 --> 00:38:14,170
have no education but I can follow it

00:38:08,980 --> 00:38:16,180
along I got to see it GCSE maths general

00:38:14,170 --> 00:38:17,350
processing on GPUs is not an arcane

00:38:16,180 --> 00:38:18,820
science it's easy straightforward

00:38:17,350 --> 00:38:20,500
there's something an evening to put

00:38:18,820 --> 00:38:22,900
together and then tweaking internets

00:38:20,500 --> 00:38:24,940
with slides but the actual code very

00:38:22,900 --> 00:38:27,940
straightforward procedurally generated

00:38:24,940 --> 00:38:29,440
are I want to talk about that this has a

00:38:27,940 --> 00:38:30,160
lot of the the kind of qualities that

00:38:29,440 --> 00:38:32,110
you see with

00:38:30,160 --> 00:38:33,940
procedurally-generated art has emergent

00:38:32,110 --> 00:38:35,680
effects change a small thing get this

00:38:33,940 --> 00:38:37,120
beautiful thing you can maybe never

00:38:35,680 --> 00:38:39,100
capture again if you don't save the

00:38:37,120 --> 00:38:41,860
exact parameters this was invented by a

00:38:39,100 --> 00:38:42,640
cheering in 1952 and he didn't even use

00:38:41,860 --> 00:38:43,900
a computer

00:38:42,640 --> 00:38:46,600
that's incredible what was he thinking

00:38:43,900 --> 00:38:50,950
but he was using it just for biology is

00:38:46,600 --> 00:38:54,040
still used now as a model and actually

00:38:50,950 --> 00:38:57,430
that was was my three points I wanted to

00:38:54,040 --> 00:38:59,140
I want to finally say um I'm will I work

00:38:57,430 --> 00:39:00,580
for Iike tricity we're a green energy

00:38:59,140 --> 00:39:02,230
company we're a dark green energy

00:39:00,580 --> 00:39:04,420
company we actually make our own energy

00:39:02,230 --> 00:39:06,760
as well as just trade it agree I'll make

00:39:04,420 --> 00:39:08,440
her own green energy we're based in God

00:39:06,760 --> 00:39:10,720
listen Bristol's with these guys around

00:39:08,440 --> 00:39:13,780
we're on the fifth floor and we're

00:39:10,720 --> 00:39:16,750
hiring for no devs and for QA automation

00:39:13,780 --> 00:39:18,720
QA and manual but also no devs anyone

00:39:16,750 --> 00:39:23,870
who likes AWS will want to learn AWS

00:39:18,720 --> 00:39:32,600
speak to me afterwards yeah that's it

00:39:23,870 --> 00:39:32,600
[Applause]

00:39:33,390 --> 00:39:39,490
yes yes I'm really glad you asked that

00:39:38,830 --> 00:39:41,470
question

00:39:39,490 --> 00:39:43,210
it'd almost be a plant for you're not a

00:39:41,470 --> 00:39:45,220
plant so yeah that's a really good

00:39:43,210 --> 00:39:47,440
question so it's very similar to the

00:39:45,220 --> 00:39:48,610
game of life and as I don't know how

00:39:47,440 --> 00:39:50,380
many of you guys know about Game of Life

00:39:48,610 --> 00:39:52,720
but essentially Conway's Game of Life

00:39:50,380 --> 00:39:55,360
it's it's almost like that but discrete

00:39:52,720 --> 00:39:58,600
you don't have this nice or gooeyness

00:39:55,360 --> 00:39:59,740
it's just individuals digital cells that

00:39:58,600 --> 00:40:02,850
have these certain rules if I'm

00:39:59,740 --> 00:40:06,370
surrounded by some cells that are on I

00:40:02,850 --> 00:40:08,380
go dark or vice versa and you can

00:40:06,370 --> 00:40:11,050
produce these amazing credit I mean you

00:40:08,380 --> 00:40:13,750
could spend forever researching you one

00:40:11,050 --> 00:40:16,060
of the Conway's Game of Life rules he is

00:40:13,750 --> 00:40:17,890
cool it's like rule 71 at all 72 they

00:40:16,060 --> 00:40:19,240
found was actually curing complete so

00:40:17,890 --> 00:40:23,200
with enough space enough time you can

00:40:19,240 --> 00:40:25,930
encode anything in this game of life

00:40:23,200 --> 00:40:29,290
pattern there was a paper that came out

00:40:25,930 --> 00:40:32,560
that proved that cheering patterns can

00:40:29,290 --> 00:40:34,540
encode that rule in game in the in

00:40:32,560 --> 00:40:36,670
commerce game of life so you can

00:40:34,540 --> 00:40:38,680
simulate game of life using cheering

00:40:36,670 --> 00:40:41,050
patterns which can then simulate any

00:40:38,680 --> 00:40:43,530
other computer so given enough graphics

00:40:41,050 --> 00:40:47,040
cards and enough lunchtimes

00:40:43,530 --> 00:40:48,300
you could compute anything so yeah I

00:40:47,040 --> 00:40:50,940
mean they're though they're intimately

00:40:48,300 --> 00:40:52,410
linked I bet it would be really hard to

00:40:50,940 --> 00:41:00,570
figure I mean how are they figured out

00:40:52,410 --> 00:41:02,850
how to do that I don't know yeah that's

00:41:00,570 --> 00:41:05,460
a really good question I suspect him he

00:41:02,850 --> 00:41:07,200
must have graphed some of our the the

00:41:05,460 --> 00:41:08,730
way he talks about this is interesting

00:41:07,200 --> 00:41:10,680
because it's from a kind of it's right

00:41:08,730 --> 00:41:13,740
there the point where computers are just

00:41:10,680 --> 00:41:16,500
becoming a thing that people can

00:41:13,740 --> 00:41:17,580
consider he talks about it some in some

00:41:16,500 --> 00:41:19,020
ways he talks about it in a way that we

00:41:17,580 --> 00:41:21,000
wouldn't recognize he's talking about it

00:41:19,020 --> 00:41:22,350
was very very mathematical formulas

00:41:21,000 --> 00:41:23,670
he's very vague on the biological

00:41:22,350 --> 00:41:26,010
details intention almost

00:41:23,670 --> 00:41:27,330
self-consciously so but then in other

00:41:26,010 --> 00:41:29,070
ways he's talking about it in a way that

00:41:27,330 --> 00:41:32,220
seems very modern his description of the

00:41:29,070 --> 00:41:33,660
reaction diffusion yeah it's really easy

00:41:32,220 --> 00:41:36,300
to follow he's talking about a grid of

00:41:33,660 --> 00:41:39,060
uniformly placed concentrations of

00:41:36,300 --> 00:41:42,000
chemicals whether he actually was able

00:41:39,060 --> 00:41:44,060
to compute this I don't know I think so

00:41:42,000 --> 00:41:48,390
the the graph that used that sort of the

00:41:44,060 --> 00:41:50,250
image you saw at the start was I think a

00:41:48,390 --> 00:41:52,440
very very small number of cells that he

00:41:50,250 --> 00:41:54,630
computed and then he I made it look a

00:41:52,440 --> 00:41:57,330
bit rounder after the fact so it would

00:41:54,630 --> 00:41:59,130
be you know maybe like a 10 by 10 set of

00:41:57,330 --> 00:42:00,960
cells as opposed to ours which was

00:41:59,130 --> 00:42:03,960
however large the frame buffer of this

00:42:00,960 --> 00:42:07,110
screen is there we go

00:42:03,960 --> 00:42:07,110

YouTube URL: https://www.youtube.com/watch?v=SL-vlH_aDxE


