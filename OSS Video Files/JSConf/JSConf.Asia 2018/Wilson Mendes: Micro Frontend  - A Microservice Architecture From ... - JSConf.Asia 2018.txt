Title: Wilson Mendes: Micro Frontend  - A Microservice Architecture From ... - JSConf.Asia 2018
Publication date: 2018-02-06
Playlist: JSConf.Asia 2018
Description: 
	Are you working with a big Frontend application and you are facing some problems in your project? Do you want migrate your frontend from another framework or library and donâ€™t know how? Don't you know how to manage different layers of complexity in your application or share these components between applications? 
In this talk, I will share my experience and decisions creating micro frontend applications, how to manage quality, deployment and more that makes your team deliver more valuable features giving you the power to migrate, improve, evolve and experiment in your product.

Wilson is a Google Developer Expert on Angular and Web Technologies and international speaker. He is passionate OSS contributor and active in the communities around Angular, JavaScript, HTML5, CSS3, Workflow, web performance, security and Internet of things.


JSConf.Asia - Capitol Theatre, Singapore - 25 January 2018

Source: https://2018.jsconf.asia/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:00,180 --> 00:00:18,480
[Music]

00:00:14,690 --> 00:00:20,130
I'm here my name is Wilson - originally

00:00:18,480 --> 00:00:23,070
from Brazil live in two years Australia

00:00:20,130 --> 00:00:25,949
and today I will talk some point some

00:00:23,070 --> 00:00:29,330
tips and tricks things that can help you

00:00:25,949 --> 00:00:31,800
to evolve your application like from

00:00:29,330 --> 00:00:35,780
mono leaf application to a micro surfs

00:00:31,800 --> 00:00:39,870
application but first of all let's talk

00:00:35,780 --> 00:00:43,370
few things like I'm not that good with

00:00:39,870 --> 00:00:46,079
jokes but trust me I'll do my best and

00:00:43,370 --> 00:00:51,180
one thing that really interesting about

00:00:46,079 --> 00:00:54,449
myself like I really like products so I

00:00:51,180 --> 00:01:00,180
just want to call you guys to take a

00:00:54,449 --> 00:01:09,150
small picture here and hey do something

00:01:00,180 --> 00:01:12,930
crazy yeah I'm recording guys but yeah I

00:01:09,150 --> 00:01:14,189
really love that things so you guys know

00:01:12,930 --> 00:01:18,360
about me and know a little bit about

00:01:14,189 --> 00:01:21,540
yourselves but let's talk about our

00:01:18,360 --> 00:01:24,119
story once upon a time in the web

00:01:21,540 --> 00:01:30,450
because every good story starts with

00:01:24,119 --> 00:01:33,780
this phrase we had a few people who just

00:01:30,450 --> 00:01:36,329
come together as a startup and they

00:01:33,780 --> 00:01:39,869
create an application called my amaze

00:01:36,329 --> 00:01:43,049
app larmes app came your idea of MVP

00:01:39,869 --> 00:01:46,380
just to validate few few points about

00:01:43,049 --> 00:01:51,450
the business and it works pretty well

00:01:46,380 --> 00:01:52,079
but in a business way but in besides the

00:01:51,450 --> 00:01:56,240
code

00:01:52,079 --> 00:01:58,979
the initial version had some issues

00:01:56,240 --> 00:02:01,170
first of all it was a mono life

00:01:58,979 --> 00:02:03,570
application so after six months after

00:02:01,170 --> 00:02:05,909
one year they realized that was an

00:02:03,570 --> 00:02:08,879
application was hard to evolve hard to

00:02:05,909 --> 00:02:10,830
maintain like add the feature or remove

00:02:08,879 --> 00:02:13,140
a feature or evolve a feature was

00:02:10,830 --> 00:02:16,980
something really painful for the team

00:02:13,140 --> 00:02:21,000
and why because it was highly called

00:02:16,980 --> 00:02:23,100
corporate code like it was presentation

00:02:21,000 --> 00:02:25,410
layers and data based layers and

00:02:23,100 --> 00:02:27,180
back-end layers everything was you guys

00:02:25,410 --> 00:02:29,160
in the same place like we're talking

00:02:27,180 --> 00:02:32,970
about an application that starts 10

00:02:29,160 --> 00:02:35,430
years ago so that was something that in

00:02:32,970 --> 00:02:38,100
that moment was not the main focus but

00:02:35,430 --> 00:02:42,330
it started to be and because of mix of

00:02:38,100 --> 00:02:45,150
layers they had some issues one of the

00:02:42,330 --> 00:02:48,000
issues was related to the page load like

00:02:45,150 --> 00:02:52,019
as you guys can see you have three HTTP

00:02:48,000 --> 00:02:54,720
requests each one for each component but

00:02:52,019 --> 00:02:57,690
you have some issues around like the

00:02:54,720 --> 00:03:02,040
first ATP ATP call it was successfully

00:02:57,690 --> 00:03:06,090
the second was just failed and the third

00:03:02,040 --> 00:03:07,920
one it is still painting and the

00:03:06,090 --> 00:03:14,280
application was not resilient for those

00:03:07,920 --> 00:03:17,310
things so that was another point let's

00:03:14,280 --> 00:03:19,890
talk about mobile website ten years ago

00:03:17,310 --> 00:03:23,220
this was something that was interesting

00:03:19,890 --> 00:03:25,320
for some companies and after that they

00:03:23,220 --> 00:03:28,730
realized okay now we have two code bases

00:03:25,320 --> 00:03:31,730
we have to duplicate a logic which is

00:03:28,730 --> 00:03:31,730
insane

00:03:33,200 --> 00:03:42,450
another point pretty much this company

00:03:36,510 --> 00:03:44,910
had to care a lot about SEO and Google's

00:03:42,450 --> 00:03:47,430
not benevolent if you're not following

00:03:44,910 --> 00:03:49,019
the rules not only Google every surgeon

00:03:47,430 --> 00:03:51,930
team if you're not following some

00:03:49,019 --> 00:03:55,340
cereals SEO rules you just being

00:03:51,930 --> 00:03:59,220
punished all right this is one of

00:03:55,340 --> 00:04:02,010
auditions and as you guys can see we

00:03:59,220 --> 00:04:05,070
have really really bad numbers like ten

00:04:02,010 --> 00:04:09,359
performers and this was just example

00:04:05,070 --> 00:04:13,310
using a tool called lighthouse and it's

00:04:09,359 --> 00:04:15,810
enough so okay we know those points and

00:04:13,310 --> 00:04:17,729
we know the code wedgie time when you

00:04:15,810 --> 00:04:19,979
look is something like that you have

00:04:17,729 --> 00:04:23,640
that feeling it really have that feeling

00:04:19,979 --> 00:04:25,289
geez it's hard to maintain so what

00:04:23,640 --> 00:04:26,850
happens every time there had that

00:04:25,289 --> 00:04:29,760
feeling you try to avoid

00:04:26,850 --> 00:04:31,800
that behavior okay if I just wanted to

00:04:29,760 --> 00:04:34,340
add something of just add more code add

00:04:31,800 --> 00:04:36,890
more code it's a natural behavior

00:04:34,340 --> 00:04:45,510
it's not a good way to play this game

00:04:36,890 --> 00:04:50,160
not at all so okay we came into this

00:04:45,510 --> 00:04:53,700
idea why not now that we have the

00:04:50,160 --> 00:04:56,610
business values totally validated let's

00:04:53,700 --> 00:04:59,640
start improving because improvements are

00:04:56,610 --> 00:05:04,650
cycle right so let's start with MVP our

00:04:59,640 --> 00:05:09,020
main P now version 2 with few ideas in

00:05:04,650 --> 00:05:13,140
your mind one of them is first do it

00:05:09,020 --> 00:05:15,660
second gen do it right and then do it

00:05:13,140 --> 00:05:18,570
better it's one of the phrase who came

00:05:15,660 --> 00:05:20,400
long time ago of Russia agile manifest

00:05:18,570 --> 00:05:24,420
it just another interpretation of the

00:05:20,400 --> 00:05:27,900
same idea who is released early release

00:05:24,420 --> 00:05:32,220
often do do it better do it always

00:05:27,900 --> 00:05:34,740
better yeah let's talk about make it

00:05:32,220 --> 00:05:36,000
better so we have few things that we

00:05:34,740 --> 00:05:39,090
need to keep in mind right

00:05:36,000 --> 00:05:42,990
our current application had to care

00:05:39,090 --> 00:05:46,020
about SEO should be easy to maintain now

00:05:42,990 --> 00:05:49,070
the company grow and it it's working

00:05:46,020 --> 00:05:52,860
distributed across three three three

00:05:49,070 --> 00:05:55,740
countries like Australia Brazil and

00:05:52,860 --> 00:05:59,490
India for example we have really really

00:05:55,740 --> 00:06:01,820
huge gaps on the stem zones should be

00:05:59,490 --> 00:06:05,360
easy to maintain should be reusable

00:06:01,820 --> 00:06:08,940
however every time they look those codes

00:06:05,360 --> 00:06:12,240
you you can say ok I won't have this

00:06:08,940 --> 00:06:15,480
feeling but in the end that's the first

00:06:12,240 --> 00:06:18,750
idea who came in your mind just let it

00:06:15,480 --> 00:06:21,840
be right because you can create a brand

00:06:18,750 --> 00:06:24,660
new application from scratch it should

00:06:21,840 --> 00:06:26,580
be great know you can use all the real

00:06:24,660 --> 00:06:30,270
green technologies but in the other hand

00:06:26,580 --> 00:06:32,580
you need to have empathy not only with

00:06:30,270 --> 00:06:34,710
the code but with the whole history

00:06:32,580 --> 00:06:37,710
dairy have all validations that that

00:06:34,710 --> 00:06:40,140
code which not simple to read but

00:06:37,710 --> 00:06:44,100
already had all the experience

00:06:40,140 --> 00:06:47,240
so this is not a possibility a big bang

00:06:44,100 --> 00:06:51,750
is not a possibility and what it can do

00:06:47,240 --> 00:06:55,560
mark restraints few things we just

00:06:51,750 --> 00:06:58,890
realized that you shouldn't have in any

00:06:55,560 --> 00:07:01,350
important this mobile website all the

00:06:58,890 --> 00:07:04,050
things should be the same codebase you

00:07:01,350 --> 00:07:04,740
need to duplicate logic now doesn't make

00:07:04,050 --> 00:07:08,640
any sense

00:07:04,740 --> 00:07:11,190
like before it doesn't make two but it

00:07:08,640 --> 00:07:15,630
was something that that company couldn't

00:07:11,190 --> 00:07:17,880
see and locus architectures some ideas

00:07:15,630 --> 00:07:21,630
some approaches should be something

00:07:17,880 --> 00:07:23,970
component based like because right now

00:07:21,630 --> 00:07:26,280
if we talk about front-end if we talk

00:07:23,970 --> 00:07:27,990
about web applications it's pretty much

00:07:26,280 --> 00:07:31,980
one of the good things that came to

00:07:27,990 --> 00:07:34,050
right should be worth web friendly now

00:07:31,980 --> 00:07:36,660
we have different browsers we have html5

00:07:34,050 --> 00:07:39,680
API we have all the things I can use to

00:07:36,660 --> 00:07:44,490
improve the usability they use a journey

00:07:39,680 --> 00:07:48,270
from starting application until do what

00:07:44,490 --> 00:07:54,960
they want to do and last but not least

00:07:48,270 --> 00:07:57,420
it should migrate page by page but what

00:07:54,960 --> 00:07:59,730
that means how can you just migrate one

00:07:57,420 --> 00:08:06,000
page in the home on a leaf let's talk

00:07:59,730 --> 00:08:09,770
about the monolith few years ago we just

00:08:06,000 --> 00:08:13,080
heard about microservice it's a cool

00:08:09,770 --> 00:08:16,950
architecture pattern so you can use it's

00:08:13,080 --> 00:08:19,320
pretty pretty pretty heavily used and we

00:08:16,950 --> 00:08:23,880
start with one question can I use micro

00:08:19,320 --> 00:08:28,680
services as pwe application using react

00:08:23,880 --> 00:08:30,780
or angular or vgs or any other framework

00:08:28,680 --> 00:08:33,500
library we create frameworks and

00:08:30,780 --> 00:08:37,160
libraries javascript every single minute

00:08:33,500 --> 00:08:40,890
and yes we can

00:08:37,160 --> 00:08:43,920
why firstly first of all let's talk

00:08:40,890 --> 00:08:46,710
about architecture some i really a

00:08:43,920 --> 00:08:48,330
really top layer when we talk about

00:08:46,710 --> 00:08:50,850
micro services and those things micro

00:08:48,330 --> 00:08:54,490
frameworks and micro bundles we are talk

00:08:50,850 --> 00:08:57,950
about a micro way

00:08:54,490 --> 00:09:02,030
the first goal is how is it is to

00:08:57,950 --> 00:09:04,520
upgrade your application they start with

00:09:02,030 --> 00:09:06,530
these ideas and the polenta together in

00:09:04,520 --> 00:09:08,360
the car and now micro services like if

00:09:06,530 --> 00:09:09,620
you have a bundle in you don't need to

00:09:08,360 --> 00:09:12,860
care about a lot of things you have a

00:09:09,620 --> 00:09:14,270
micro bundle and if you have a framework

00:09:12,860 --> 00:09:16,490
they need to care about a specific

00:09:14,270 --> 00:09:18,590
boundary you can you can use a micro

00:09:16,490 --> 00:09:21,470
framework and so on and so forth

00:09:18,590 --> 00:09:31,490
so long time ago angularjs just called

00:09:21,470 --> 00:09:37,190
this as micro whatever and VW and micro

00:09:31,490 --> 00:09:43,130
fronting okay so it's a micro service so

00:09:37,190 --> 00:09:43,640
a front-end quick quiz what is a micro

00:09:43,130 --> 00:09:46,430
fronting

00:09:43,640 --> 00:09:50,600
is that a new tooling is that a new

00:09:46,430 --> 00:09:56,960
framework like Zen a new Chrome

00:09:50,600 --> 00:09:59,900
extension it's a technique so every time

00:09:56,960 --> 00:10:03,080
someone talk about you like to use these

00:09:59,900 --> 00:10:04,780
you can you should use this primer or to

00:10:03,080 --> 00:10:08,090
use that you need to use this tooling

00:10:04,780 --> 00:10:10,160
it's not totally related we talk about

00:10:08,090 --> 00:10:16,010
approaches we'll talk about abductor

00:10:10,160 --> 00:10:18,770
things and about architectural patterns

00:10:16,010 --> 00:10:24,590
who here have you heard about strangle

00:10:18,770 --> 00:10:26,440
pattern okay few people the interest

00:10:24,590 --> 00:10:29,240
point of strangle partner is one of the

00:10:26,440 --> 00:10:31,610
foundations of Microsoft's but people

00:10:29,240 --> 00:10:33,530
usually don't talk too much about it but

00:10:31,610 --> 00:10:36,260
what is a strangle partner at the end of

00:10:33,530 --> 00:10:38,990
the day and how can these will be useful

00:10:36,260 --> 00:10:42,680
for application let's give a small

00:10:38,990 --> 00:10:44,570
example let's say that we have a

00:10:42,680 --> 00:10:48,320
monolith application which this is

00:10:44,570 --> 00:10:50,810
tagged to and you have a brand new stack

00:10:48,320 --> 00:10:55,670
with only one page that we want to

00:10:50,810 --> 00:10:58,340
migrate you need our vex arrest proxy so

00:10:55,670 --> 00:11:02,900
you say when you let's think about the

00:10:58,340 --> 00:11:07,230
rest proxy like when you go to a shop

00:11:02,900 --> 00:11:10,320
market and they ask you hey Jonah pay by

00:11:07,230 --> 00:11:13,050
by card you have different cues depend

00:11:10,320 --> 00:11:15,870
of your gangster this guy that we call

00:11:13,050 --> 00:11:18,870
reverse proxy just say okay you're going

00:11:15,870 --> 00:11:20,670
to the new page so go to that side oh no

00:11:18,870 --> 00:11:21,270
it's not that page it's not the page

00:11:20,670 --> 00:11:23,730
emigrate

00:11:21,270 --> 00:11:26,730
go to the old one and you can't start to

00:11:23,730 --> 00:11:28,620
say okay let me just check 10% of the

00:11:26,730 --> 00:11:30,870
new page it works fine

00:11:28,620 --> 00:11:32,880
no eros it's working so far so good

00:11:30,870 --> 00:11:34,620
twenty percent thirty percent and

00:11:32,880 --> 00:11:37,140
carefully date for the thanks you can

00:11:34,620 --> 00:11:46,230
use some matrix so the game starts will

00:11:37,140 --> 00:11:47,490
be cool and hot so called problems now

00:11:46,230 --> 00:11:51,360
we will talk about the texture thing

00:11:47,490 --> 00:11:53,250
okay we understand how the broad and

00:11:51,360 --> 00:11:55,680
concept among about micro front-end but

00:11:53,250 --> 00:11:57,360
about code because we are talking about

00:11:55,680 --> 00:12:01,110
the mono live application right so we

00:11:57,360 --> 00:12:02,480
need to clean the kitchen before start

00:12:01,110 --> 00:12:06,050
cook

00:12:02,480 --> 00:12:09,480
first of all online design teams and

00:12:06,050 --> 00:12:11,970
your developer teams to they should work

00:12:09,480 --> 00:12:14,940
together and they have a lot of approach

00:12:11,970 --> 00:12:17,970
talk about front-end right now one of

00:12:14,940 --> 00:12:22,830
old code but really really useful is

00:12:17,970 --> 00:12:25,050
atomic design by Brad Frost concept is

00:12:22,830 --> 00:12:28,230
quite it's quite interesting like you

00:12:25,050 --> 00:12:31,620
have atoms molecules start to be

00:12:28,230 --> 00:12:35,790
granular until you become with a page

00:12:31,620 --> 00:12:37,320
and but it was a long time ago that was

00:12:35,790 --> 00:12:40,560
created now you have a lot of other

00:12:37,320 --> 00:12:42,690
options so keep open like like we have

00:12:40,560 --> 00:12:45,210
here at the bottom we are talking about

00:12:42,690 --> 00:12:48,210
material design which pretty much same

00:12:45,210 --> 00:12:50,760
idea outline everything all the teams

00:12:48,210 --> 00:12:56,280
should be thinking together we have the

00:12:50,760 --> 00:13:00,000
same goal and things interesting about

00:12:56,280 --> 00:13:03,540
those two approaches at the end they

00:13:00,000 --> 00:13:06,780
have the same goal this same idea so the

00:13:03,540 --> 00:13:11,700
page one component is a composition of

00:13:06,780 --> 00:13:14,520
components page two you can use or not

00:13:11,700 --> 00:13:18,280
one of those components and it starts to

00:13:14,520 --> 00:13:22,750
be things they start to be plug and play

00:13:18,280 --> 00:13:25,620
and everything's a component like if you

00:13:22,750 --> 00:13:28,180
go back here with talk about pages and

00:13:25,620 --> 00:13:30,610
other protectress parts pretty much

00:13:28,180 --> 00:13:35,200
component page one is a component and

00:13:30,610 --> 00:13:40,150
all the UI components are creating our

00:13:35,200 --> 00:13:42,370
kupuna still so Y components it's all

00:13:40,150 --> 00:13:46,660
scope so you really have well-defined

00:13:42,370 --> 00:13:49,540
boundaries about that idea okay I'm

00:13:46,660 --> 00:13:51,700
doing a search box I don't need to know

00:13:49,540 --> 00:13:55,030
about the whole world I just need to

00:13:51,700 --> 00:13:56,080
know how to do a search and sometimes

00:13:55,030 --> 00:13:57,670
that doesn't I just

00:13:56,080 --> 00:13:59,350
even need to know like if you have a

00:13:57,670 --> 00:14:01,480
really component totally the corporate

00:13:59,350 --> 00:14:03,880
you don't even know any to know that we

00:14:01,480 --> 00:14:07,840
have to cop something in some way and

00:14:03,880 --> 00:14:10,480
should work and everything component is

00:14:07,840 --> 00:14:13,000
kind of plug and play which is great

00:14:10,480 --> 00:14:22,230
that was the first idea of the component

00:14:13,000 --> 00:14:24,700
and that was the idea right beautiful

00:14:22,230 --> 00:14:27,070
other things we talked about teams

00:14:24,700 --> 00:14:30,280
distributed teams so when you do a small

00:14:27,070 --> 00:14:32,170
component it doesn't matter if a small

00:14:30,280 --> 00:14:35,880
component which has been used in only

00:14:32,170 --> 00:14:39,640
one page or 30 pages please think about

00:14:35,880 --> 00:14:42,070
empathy all the teens shouldn't prove

00:14:39,640 --> 00:14:45,520
that that code should evolve that code

00:14:42,070 --> 00:14:48,940
it is one idea create demo page in this

00:14:45,520 --> 00:14:51,280
case it's being used storybook which is

00:14:48,940 --> 00:14:54,700
a pretty cool library then you can you

00:14:51,280 --> 00:14:57,130
can integrate if all the best frameworks

00:14:54,700 --> 00:14:58,660
that we have right now and in the other

00:14:57,130 --> 00:15:00,820
side you have Auto validation so you can

00:14:58,660 --> 00:15:03,400
read easily prologue in play you can

00:15:00,820 --> 00:15:05,830
create scenarios create some fixtures

00:15:03,400 --> 00:15:08,589
okay you have this component and when

00:15:05,830 --> 00:15:11,020
this component app receives a specific

00:15:08,589 --> 00:15:13,390
property or when this property changed

00:15:11,020 --> 00:15:16,570
what should happen you have all the

00:15:13,390 --> 00:15:18,460
things together so easy it's easy to

00:15:16,570 --> 00:15:21,130
read it me someone who don't know how to

00:15:18,460 --> 00:15:27,960
code know what that cop that component

00:15:21,130 --> 00:15:27,960
thus and on think that now is

00:15:28,029 --> 00:15:31,930
really really up a string and it's

00:15:30,519 --> 00:15:33,939
interesting that we have this discussion

00:15:31,930 --> 00:15:37,600
right now because years ago we didn't

00:15:33,939 --> 00:15:40,629
have it's about zero config part forms I

00:15:37,600 --> 00:15:42,939
would say you can have bundles with the

00:15:40,629 --> 00:15:46,930
your config you can have a setup with 0

00:15:42,939 --> 00:15:48,610
config and so on but a long time ago we

00:15:46,930 --> 00:15:50,319
didn't have this discussion so we didn't

00:15:48,610 --> 00:15:53,889
have a lot of packages open source

00:15:50,319 --> 00:15:56,709
packages so in some scenarios you just

00:15:53,889 --> 00:15:58,420
can't use one of those zero configs

00:15:56,709 --> 00:16:01,110
because of a lot of reasons internal

00:15:58,420 --> 00:16:05,829
reasons and some business reasons or

00:16:01,110 --> 00:16:08,410
even some rules based on the country in

00:16:05,829 --> 00:16:11,740
those and others think and boilerplates

00:16:08,410 --> 00:16:14,939
as a solution I will explain a little

00:16:11,740 --> 00:16:19,449
bit more about it like why zero config

00:16:14,939 --> 00:16:22,439
first of all opinions everyone here has

00:16:19,449 --> 00:16:27,750
a really and great opinion about all

00:16:22,439 --> 00:16:30,939
those steps bundle tests publish linked

00:16:27,750 --> 00:16:36,040
we have a lot of tool is for linked

00:16:30,939 --> 00:16:38,290
right now reporter and so on and if you

00:16:36,040 --> 00:16:40,509
look at github right now it's pretty

00:16:38,290 --> 00:16:42,490
impressive because when we start the

00:16:40,509 --> 00:16:44,470
discussions you can find a lot of other

00:16:42,490 --> 00:16:47,459
packages talking about zero

00:16:44,470 --> 00:16:53,920
configuration such as great react app or

00:16:47,459 --> 00:16:57,269
angular CLI ember CLI and this is great

00:16:53,920 --> 00:17:05,049
for us because there's a lot of opinions

00:16:57,269 --> 00:17:07,510
that we can integrate or extend however

00:17:05,049 --> 00:17:11,110
as I said before in some scenarios you

00:17:07,510 --> 00:17:14,530
cannot just use one of this okay let's

00:17:11,110 --> 00:17:16,299
think about a good way to integrate you

00:17:14,530 --> 00:17:19,120
have a tooling for example can be you

00:17:16,299 --> 00:17:21,610
just use a yeoman generator just for a

00:17:19,120 --> 00:17:23,589
small piece as we said before we are

00:17:21,610 --> 00:17:25,720
working with components so we can create

00:17:23,589 --> 00:17:30,460
a small piece and can create as a

00:17:25,720 --> 00:17:32,740
standard in your team's and photos for

00:17:30,460 --> 00:17:35,770
those if you have to improve or like

00:17:32,740 --> 00:17:37,840
your boilerplate just upgraded and have

00:17:35,770 --> 00:17:38,470
to upgrade the components who are using

00:17:37,840 --> 00:17:40,840
this boilerplate

00:17:38,470 --> 00:17:41,980
you can use this package called update

00:17:40,840 --> 00:17:46,030
yeoman generator

00:17:41,980 --> 00:17:48,670
it's pretty fun it just is solid in that

00:17:46,030 --> 00:17:51,970
case is globally go to your component

00:17:48,670 --> 00:17:56,310
folder and around the common and when

00:17:51,970 --> 00:18:00,610
you read this comment it will be updated

00:17:56,310 --> 00:18:05,890
magic that's what we like don't repeat

00:18:00,610 --> 00:18:08,200
yourself and other thing that you can

00:18:05,890 --> 00:18:11,710
have some benefits using this

00:18:08,200 --> 00:18:13,770
architecture is you have a lot of firing

00:18:11,710 --> 00:18:16,720
validations let's think about it like

00:18:13,770 --> 00:18:19,990
first of all when you doing a bundle

00:18:16,720 --> 00:18:22,510
when you do a deployment you had to burn

00:18:19,990 --> 00:18:25,270
create a build bundle file for your

00:18:22,510 --> 00:18:27,220
vendors or your page one you're paid to

00:18:25,270 --> 00:18:30,250
sometimes we just put up there together

00:18:27,220 --> 00:18:33,040
we talk about application long years ago

00:18:30,250 --> 00:18:35,580
and now you can have different

00:18:33,040 --> 00:18:39,340
approaches like now have different pages

00:18:35,580 --> 00:18:43,180
you can create specific files for the

00:18:39,340 --> 00:18:44,710
page one page two page three and when

00:18:43,180 --> 00:18:47,980
you have in validations instead of

00:18:44,710 --> 00:18:49,750
having validations for the specific

00:18:47,980 --> 00:18:52,170
vendor you can have for the specific

00:18:49,750 --> 00:18:55,030
file when we talk about validations USA

00:18:52,170 --> 00:18:59,190
is a different files and you fire your

00:18:55,030 --> 00:19:03,970
browser need to download anymore again

00:18:59,190 --> 00:19:07,750
if you don't know more about it Sam did

00:19:03,970 --> 00:19:09,820
a really really good talk and at chrome

00:19:07,750 --> 00:19:13,030
dev summit last year about the future

00:19:09,820 --> 00:19:15,130
the future of loading or web which

00:19:13,030 --> 00:19:18,220
pretty interesting talk about this and

00:19:15,130 --> 00:19:24,700
other points and how the web platform is

00:19:18,220 --> 00:19:27,460
evolving to help all of us so we have a

00:19:24,700 --> 00:19:30,640
checklist from China Kentucky right now

00:19:27,460 --> 00:19:33,940
is great so we have volved the

00:19:30,640 --> 00:19:38,560
application and we are happy with this

00:19:33,940 --> 00:19:41,380
and its component based as we saw a lot

00:19:38,560 --> 00:19:43,360
of applications the market is using a

00:19:41,380 --> 00:19:47,560
component based application its web

00:19:43,360 --> 00:19:49,750
friendly so every single developer who

00:19:47,560 --> 00:19:52,600
is using that has the whole knowledge

00:19:49,750 --> 00:19:54,450
and can use all the power of the web

00:19:52,600 --> 00:19:58,770
platform

00:19:54,450 --> 00:20:01,950
it's mind-blowing like we'll talk about

00:19:58,770 --> 00:20:03,450
one thing that we had a real really

00:20:01,950 --> 00:20:06,120
application that we had ten years ago

00:20:03,450 --> 00:20:09,360
and now we let's talk a brand new

00:20:06,120 --> 00:20:14,010
architecture it was validated we had all

00:20:09,360 --> 00:20:18,840
the steps it's a production and metrics

00:20:14,010 --> 00:20:22,620
but metrics pretty much everywhere after

00:20:18,840 --> 00:20:24,660
you just deployed the first page you

00:20:22,620 --> 00:20:27,360
think okay the first page done let's

00:20:24,660 --> 00:20:30,150
keep the flow let's create some metrics

00:20:27,360 --> 00:20:32,790
to validate and those much kusa can be a

00:20:30,150 --> 00:20:36,060
mix of combinations can be a usual

00:20:32,790 --> 00:20:38,600
conversion can be errors errors that you

00:20:36,060 --> 00:20:42,350
have in that page you can create your

00:20:38,600 --> 00:20:46,260
what makes sense for your application

00:20:42,350 --> 00:20:48,900
there is one just one example screenshot

00:20:46,260 --> 00:20:50,970
of a platform called New Relic so you

00:20:48,900 --> 00:20:57,600
can just go there and do some searched

00:20:50,970 --> 00:21:01,020
and create your your visualization for

00:20:57,600 --> 00:21:03,720
that data and start to see hey this just

00:21:01,020 --> 00:21:06,000
increased a little bit probably we're

00:21:03,720 --> 00:21:08,940
having memory leak we can work on that

00:21:06,000 --> 00:21:10,530
or okay it was it they use the

00:21:08,940 --> 00:21:12,600
conversion just increased that's really

00:21:10,530 --> 00:21:14,640
good let's start work at that new relic

00:21:12,600 --> 00:21:17,330
is just example you can use a lot of

00:21:14,640 --> 00:21:23,730
them for example Google tag manager and

00:21:17,330 --> 00:21:28,790
adopted manager and all of them all

00:21:23,730 --> 00:21:32,580
those steps are related to one thing

00:21:28,790 --> 00:21:35,400
release early release often when you

00:21:32,580 --> 00:21:37,430
have only one page you don't need to do

00:21:35,400 --> 00:21:41,070
a deployment for the whole application

00:21:37,430 --> 00:21:44,670
what that means things can have full

00:21:41,070 --> 00:21:48,180
ownership of that thing at that code

00:21:44,670 --> 00:21:49,950
that that behavior usually they should

00:21:48,180 --> 00:21:51,660
have since since the beginning but

00:21:49,950 --> 00:21:53,850
sometimes I thought something happened

00:21:51,660 --> 00:21:58,940
in the mirror of the process and they

00:21:53,850 --> 00:22:01,440
just lost this truck and release early

00:21:58,940 --> 00:22:05,070
you have something you can easily

00:22:01,440 --> 00:22:07,320
validate ship the production or ship and

00:22:05,070 --> 00:22:08,300
other environments before do some

00:22:07,320 --> 00:22:10,910
validations business

00:22:08,300 --> 00:22:12,380
validation or even front-end validations

00:22:10,910 --> 00:22:16,700
performance validations and so on

00:22:12,380 --> 00:22:20,420
and now we have our amazing happen the

00:22:16,700 --> 00:22:23,330
Division two is mobile-friendly so it's

00:22:20,420 --> 00:22:30,020
totally web platform friendly and this

00:22:23,330 --> 00:22:34,850
so nice and about SEO google now loves

00:22:30,020 --> 00:22:36,200
this application if you see their last

00:22:34,850 --> 00:22:40,990
edition it was great

00:22:36,200 --> 00:22:44,120
91 of 100 pretty cool

00:22:40,990 --> 00:22:46,010
everyone is happy the users happy the

00:22:44,120 --> 00:22:57,080
developer team is happy the business

00:22:46,010 --> 00:22:59,530
team is happy and how should be now

00:22:57,080 --> 00:23:04,790
another point next steps right

00:22:59,530 --> 00:23:07,970
we always think and ok we did that it's

00:23:04,790 --> 00:23:10,250
a cycle make it make it work make it

00:23:07,970 --> 00:23:12,890
better and we need to think about it

00:23:10,250 --> 00:23:17,120
like now we have a micro service but

00:23:12,890 --> 00:23:20,660
things like zero downtime what zero

00:23:17,120 --> 00:23:23,720
downtime is what happens if your server

00:23:20,660 --> 00:23:30,050
just goes down what's happened for the

00:23:23,720 --> 00:23:33,110
user just see your page or the person

00:23:30,050 --> 00:23:35,480
just don't see anything how can you work

00:23:33,110 --> 00:23:37,840
with that so you can use some tools for

00:23:35,480 --> 00:23:41,810
this one example is you create a service

00:23:37,840 --> 00:23:44,060
function and store your HTML in some

00:23:41,810 --> 00:23:47,300
place just example or you create our

00:23:44,060 --> 00:23:50,390
engine X and store some cash so at least

00:23:47,300 --> 00:23:53,450
for the user when it goes it access that

00:23:50,390 --> 00:23:56,120
page it can see something and you can

00:23:53,450 --> 00:23:59,090
make sure that at least specific or

00:23:56,120 --> 00:24:02,000
features are available so in case like

00:23:59,090 --> 00:24:05,420
your application if your page just goes

00:24:02,000 --> 00:24:08,720
down for 10 minutes for the user

00:24:05,420 --> 00:24:11,140
it's transparent the person didn't

00:24:08,720 --> 00:24:11,140
notice that

00:24:13,320 --> 00:24:23,290
and more about code if you wanna see a

00:24:19,390 --> 00:24:25,690
real case just a proof of concept so you

00:24:23,290 --> 00:24:29,470
can have first your monolith application

00:24:25,690 --> 00:24:31,720
and after you can check page by page my

00:24:29,470 --> 00:24:35,020
grade a if you wanna see those things

00:24:31,720 --> 00:24:38,710
and play around this is a github repo

00:24:35,020 --> 00:24:40,930
quick that I created so just download it

00:24:38,710 --> 00:24:43,000
and start to play around it's required

00:24:40,930 --> 00:24:45,880
talker but it's really straightforward

00:24:43,000 --> 00:24:52,360
you just need to install it and run a

00:24:45,880 --> 00:24:52,990
comment easy how should be yeah that's

00:24:52,360 --> 00:24:55,720
it

00:24:52,990 --> 00:24:58,360
I hope you guys enjoy as much as I enjoy

00:24:55,720 --> 00:25:04,770
it and thanks so much

00:24:58,360 --> 00:25:04,770

YouTube URL: https://www.youtube.com/watch?v=Kphwg2IsJfA


