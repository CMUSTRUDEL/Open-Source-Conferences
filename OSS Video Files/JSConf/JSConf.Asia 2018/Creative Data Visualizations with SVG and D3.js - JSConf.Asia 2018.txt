Title: Creative Data Visualizations with SVG and D3.js - JSConf.Asia 2018
Publication date: 2018-02-20
Playlist: JSConf.Asia 2018
Description: 
	Speaker:
Shirley Wu @sxywu
Nadieh Bremer @NadiehBremer

In this workshop, we will cover the basics of SVG - especially SVG paths and the cubic bezier curve command - as well as an introduction to D3.js's selection, data-binding, and enter-update-exit patterns. The culmination of the workshop will be to create a set of flowers out of movie data, a simpler version of the film flowers here. 

Requirements: Just a laptop and working knowledge of Javascript and the web.

Shirley is a freelance software engineer specializing in data visualization. She combines her love of art, math, and code into colorful, interactive data visualizations. She enjoys finding fun insights in data and weaving them into stories and exploratory tools for the reader to discover. Her work can be found at sxywu.com. 

Nadieh is a graduated Astronomer, turned Data Scientist, turned self-taught Data Visualization Designer. After working for a consultancy & fintech companies where she discovered her passion for the visualization of data, she's now working as a freelancing data visualization designer under the name Visual Cinnamon.

Event Page: https://2018.jsconf.asia

Produced by Engineers.SG
Recorded by: Amy Pan

Help us caption & translate this video!

https://amara.org/v/eoMQ/
Captions: 
	00:00:00,030 --> 00:00:07,379
hey everyone hi hello thanks so much for

00:00:04,859 --> 00:00:09,059
joining I'm so first of all thank you so

00:00:07,379 --> 00:00:12,210
much for signing up for this workshop

00:00:09,059 --> 00:00:14,280
I'm if you have not signed up and you're

00:00:12,210 --> 00:00:16,680
crashing you're more than welcome if

00:00:14,280 --> 00:00:23,310
there are there if there is room is

00:00:16,680 --> 00:00:25,710
there any more in room I'm if anybody

00:00:23,310 --> 00:00:28,619
who wants to be like kind and squeeze in

00:00:25,710 --> 00:00:31,109
like four in a row or anything um that's

00:00:28,619 --> 00:00:35,160
more than welcome but yeah thank you so

00:00:31,109 --> 00:00:37,410
much for signing up and joining and uh

00:00:35,160 --> 00:00:39,629
do you like my setup I have like two

00:00:37,410 --> 00:00:41,070
microphones this is the first time

00:00:39,629 --> 00:00:44,190
that's happened so I asked for a

00:00:41,070 --> 00:00:46,379
microphone for their room because I'm

00:00:44,190 --> 00:00:50,430
getting a little bit sick or was getting

00:00:46,379 --> 00:00:52,469
sick or um and my throat is a little bit

00:00:50,430 --> 00:00:53,730
sore so I can't quite project so that's

00:00:52,469 --> 00:00:55,379
why I have a microphone and then

00:00:53,730 --> 00:00:57,420
apparently the other microphone is for

00:00:55,379 --> 00:01:00,870
the YouTube livestream which is really

00:00:57,420 --> 00:01:03,420
cool so hey everyone my name is Shirley

00:01:00,870 --> 00:01:07,380
um hopefully maybe you saw naughty and

00:01:03,420 --> 00:01:11,850
nice talk yesterday um and then that's

00:01:07,380 --> 00:01:13,020
naughty in the back um and she is

00:01:11,850 --> 00:01:15,390
absolutely amazing

00:01:13,020 --> 00:01:17,970
I think she's overqualified to be a TA

00:01:15,390 --> 00:01:20,340
but if you have any questions during the

00:01:17,970 --> 00:01:23,670
so I'm primarily running the workshop

00:01:20,340 --> 00:01:25,409
and then Nadi is going to answer any

00:01:23,670 --> 00:01:27,810
questions during the exercises or

00:01:25,409 --> 00:01:29,640
anything she's gonna like help actually

00:01:27,810 --> 00:01:31,079
if you want to just like you know help

00:01:29,640 --> 00:01:33,329
answer questions that's fine too

00:01:31,079 --> 00:01:35,880
but if you have any questions during the

00:01:33,329 --> 00:01:37,860
exercises or anything then you're more

00:01:35,880 --> 00:01:41,840
than welcome to ask me or Nadi and

00:01:37,860 --> 00:01:46,680
whoever one of us look less busy so yeah

00:01:41,840 --> 00:01:49,890
yeah I'm so I guess we can get started

00:01:46,680 --> 00:01:52,100
cool anybody uncomfortable were with

00:01:49,890 --> 00:02:00,869
like where they're sitting or like oh

00:01:52,100 --> 00:02:03,149
well there's I guess that that area yeah

00:02:00,869 --> 00:02:08,789
like if you can find a chair then you

00:02:03,149 --> 00:02:11,800
can sit there maybe we can ask the hotel

00:02:08,789 --> 00:02:17,070
for more chairs me me

00:02:11,800 --> 00:02:20,770
we're going to be a fire hazard yeah so

00:02:17,070 --> 00:02:23,470
this is the workshop slice and then if

00:02:20,770 --> 00:02:26,830
you just go to this URL that I've

00:02:23,470 --> 00:02:34,510
written and then um it's the very first

00:02:26,830 --> 00:02:36,550
one so you should link that once you

00:02:34,510 --> 00:02:39,130
link here and then the very first one so

00:02:36,550 --> 00:02:48,970
if you can open that up and then I'm and

00:02:39,130 --> 00:02:53,830
then you can follow along there is that

00:02:48,970 --> 00:02:57,340
is there wait do I have a oh yeah go

00:02:53,830 --> 00:02:59,680
bears and I'm like do I have like a

00:02:57,340 --> 00:03:02,470
password on it or something I guess you

00:02:59,680 --> 00:03:07,240
and I are both from Berkeley yes go

00:03:02,470 --> 00:03:10,450
Paris um yeah so open this one up and

00:03:07,240 --> 00:03:12,160
then I'm by the way how's everybody's

00:03:10,450 --> 00:03:17,260
energy levels this afternoon cuz I just

00:03:12,160 --> 00:03:19,660
say a lot at that buffet I'm scared wait

00:03:17,260 --> 00:03:25,470
I like how after you said go bears

00:03:19,660 --> 00:03:29,110
you pulled out a Stanford jacket yeah so

00:03:25,470 --> 00:03:31,480
hopefully everybody feels awake so um

00:03:29,110 --> 00:03:33,880
today I'm really excited to do this

00:03:31,480 --> 00:03:40,600
workshop and we're going to recreate

00:03:33,880 --> 00:03:44,200
this so this is if you um were at the if

00:03:40,600 --> 00:03:46,420
you were at the talk yesterday this was

00:03:44,200 --> 00:03:54,990
one of the ones that I mentioned it's

00:03:46,420 --> 00:03:54,990
called film flowers yeah so let's see

00:04:00,790 --> 00:04:06,470
so it's this one um and I think it's a

00:04:04,310 --> 00:04:08,720
it's basically every single one of these

00:04:06,470 --> 00:04:10,069
flowers are a movie you can like click

00:04:08,720 --> 00:04:12,800
on one of them and then see the

00:04:10,069 --> 00:04:15,890
corresponding movie and then the petals

00:04:12,800 --> 00:04:18,590
are prendick eyes and guidance readings

00:04:15,890 --> 00:04:20,780
colors and number of petals and size of

00:04:18,590 --> 00:04:24,410
petals I'm and this is one of those like

00:04:20,780 --> 00:04:26,930
fun ones that are it's like yeah it's

00:04:24,410 --> 00:04:30,100
just kind of fun to do so today for this

00:04:26,930 --> 00:04:32,990
workshop our goal is to recreate to

00:04:30,100 --> 00:04:34,729
recreate this visualization and we're

00:04:32,990 --> 00:04:36,830
not gonna put in the colors but we'll

00:04:34,729 --> 00:04:39,110
get as far as this so like we'll be one

00:04:36,830 --> 00:04:40,610
step away from the colors and then maybe

00:04:39,110 --> 00:04:43,130
the stretch goal is you figure out how

00:04:40,610 --> 00:04:45,919
to put in the colors yeah how does that

00:04:43,130 --> 00:04:48,500
sound awesome

00:04:45,919 --> 00:04:50,389
so yeah um I know it's right after lunch

00:04:48,500 --> 00:04:52,340
I know that buffet was freaking amazing

00:04:50,389 --> 00:04:53,810
I like how the second plate that I

00:04:52,340 --> 00:04:56,630
shouldn't have because I'm like this is

00:04:53,810 --> 00:04:58,550
really great food but uh um

00:04:56,630 --> 00:05:01,820
if you have any questions raise your

00:04:58,550 --> 00:05:02,330
hand interrupt me um but please do it

00:05:01,820 --> 00:05:05,600
nicely

00:05:02,330 --> 00:05:07,460
um and then any given point like you

00:05:05,600 --> 00:05:09,979
know I might ask like hallo is it going

00:05:07,460 --> 00:05:13,100
like and then just just let me know yeah

00:05:09,979 --> 00:05:15,979
so let's get started so for this

00:05:13,100 --> 00:05:19,810
particular workshop I'll be covering

00:05:15,979 --> 00:05:23,889
these things so SVG paths d3

00:05:19,810 --> 00:05:26,660
introduction to d3 so d3 scale selection

00:05:23,889 --> 00:05:29,389
data binding enter append and finally

00:05:26,660 --> 00:05:31,760
nesting elements and if we have some if

00:05:29,389 --> 00:05:35,539
we have some time at the end then we can

00:05:31,760 --> 00:05:38,090
also cover d3s enter update exit pattern

00:05:35,539 --> 00:05:42,020
so yeah how many people have worked with

00:05:38,090 --> 00:05:46,490
SVG before hands up just just like the

00:05:42,020 --> 00:05:48,380
back I'm awesome

00:05:46,490 --> 00:05:51,800
and then how many people have tried out

00:05:48,380 --> 00:05:55,430
d3 before how brilliant ok cool so

00:05:51,800 --> 00:05:57,740
hopefully and by the end of the day

00:05:55,430 --> 00:06:00,410
today you'll have like a decent good

00:05:57,740 --> 00:06:04,700
grasp of how SVG paths work and then a

00:06:00,410 --> 00:06:08,330
good grasp of like basic core d3 at how

00:06:04,700 --> 00:06:11,750
D 3 works so that's the goal so let's

00:06:08,330 --> 00:06:16,330
get started here's like I sew my face

00:06:11,750 --> 00:06:19,100
for basic SVG elements I'm so here's

00:06:16,330 --> 00:06:23,270
actually let me back up really quickly

00:06:19,100 --> 00:06:26,090
and say SVG elements are very similar to

00:06:23,270 --> 00:06:27,800
HTML in that it's an XML dialect but

00:06:26,090 --> 00:06:30,170
there's like a little bit of differences

00:06:27,800 --> 00:06:34,490
in how you might style them or how you

00:06:30,170 --> 00:06:36,470
might position them so here's four of

00:06:34,490 --> 00:06:37,910
the SVG elements that use the most and

00:06:36,470 --> 00:06:40,100
SVG elements are really great for

00:06:37,910 --> 00:06:41,870
visualizations because it's like a like

00:06:40,100 --> 00:06:44,480
the building blocks of SVG are like

00:06:41,870 --> 00:06:49,370
rectangles and circles and lines and

00:06:44,480 --> 00:06:51,800
paths I'm so for rectangles for example

00:06:49,370 --> 00:06:53,780
you need to be able to define the XY

00:06:51,800 --> 00:06:55,910
coordinates and the width and height to

00:06:53,780 --> 00:06:59,960
draw a rectangle can you guys see it

00:06:55,910 --> 00:07:00,440
fine in the back or is it too small too

00:06:59,960 --> 00:07:04,390
small

00:07:00,440 --> 00:07:11,320
I actually don't okay actually let me um

00:07:04,390 --> 00:07:11,320
try and see if I can make the resolution

00:07:14,880 --> 00:07:25,540
okay get any better no right um okay so

00:07:21,310 --> 00:07:27,070
how about this just have it open on your

00:07:25,540 --> 00:07:29,500
laptop because everybody has a laptop

00:07:27,070 --> 00:07:31,570
right okay

00:07:29,500 --> 00:07:37,780
I've been open on your laptop and then

00:07:31,570 --> 00:07:40,150
follow along yeah cuz this uh this like

00:07:37,780 --> 00:07:44,680
service I use if you can see like I'm

00:07:40,150 --> 00:07:47,350
zooming in and like it's so it's great

00:07:44,680 --> 00:07:49,240
because like it's it's scale to fit the

00:07:47,350 --> 00:07:51,760
screen exactly as it should but it means

00:07:49,240 --> 00:07:53,710
that I can't actually zoom so yeah so if

00:07:51,760 --> 00:07:55,300
you can't see anything please just refer

00:07:53,710 --> 00:07:56,800
to the slides and you have you should

00:07:55,300 --> 00:07:59,140
have the slides open anyways because

00:07:56,800 --> 00:08:01,630
there's links to the exercises links to

00:07:59,140 --> 00:08:05,080
code snippets and everything so yeah so

00:08:01,630 --> 00:08:06,730
this is all of the SVG elements I use

00:08:05,080 --> 00:08:12,190
the most often and today we'll be

00:08:06,730 --> 00:08:15,130
playing with the path primarily so SVG

00:08:12,190 --> 00:08:20,170
paths I actually like asking this

00:08:15,130 --> 00:08:21,640
question which is how many of you use

00:08:20,170 --> 00:08:25,060
illustrator or know how to use

00:08:21,640 --> 00:08:26,800
illustrator awesome so for those of you

00:08:25,060 --> 00:08:29,380
that have ever used illustrator or

00:08:26,800 --> 00:08:32,070
actually even the if you use Photoshop a

00:08:29,380 --> 00:08:37,210
lot and there's a pen tool in Photoshop

00:08:32,070 --> 00:08:38,650
remember how I'm when you draw a path in

00:08:37,210 --> 00:08:41,680
Illustrator with the pen tool in

00:08:38,650 --> 00:08:45,550
Photoshop you basically like put down

00:08:41,680 --> 00:08:48,630
your first Anchor Point right and then

00:08:45,550 --> 00:08:50,290
you put down and then you click again

00:08:48,630 --> 00:08:52,030
and you put down

00:08:50,290 --> 00:08:53,500
sorry not anchor point sorry you put

00:08:52,030 --> 00:08:55,210
down your first point you click and you

00:08:53,500 --> 00:08:56,890
put down your first point and then you

00:08:55,210 --> 00:08:58,900
click and you put down your second point

00:08:56,890 --> 00:09:02,460
and then it like draws is temporarily

00:08:58,900 --> 00:09:04,510
line between them right and then

00:09:02,460 --> 00:09:06,730
actually and then it kind of looks like

00:09:04,510 --> 00:09:10,570
that and then there's like two little

00:09:06,730 --> 00:09:14,440
anchor points that show up and then you

00:09:10,570 --> 00:09:16,120
and then you can drag those out like

00:09:14,440 --> 00:09:17,860
maybe the anchor point will come out to

00:09:16,120 --> 00:09:20,290
here and maybe you'll drag the anchor

00:09:17,860 --> 00:09:23,560
point out to here and as you drag those

00:09:20,290 --> 00:09:25,420
two anchor points the path starts

00:09:23,560 --> 00:09:27,450
curving like that's right

00:09:25,420 --> 00:09:35,020
do you guys have experience with that

00:09:27,450 --> 00:09:39,330
cool so I'm in SVG paths when you draw

00:09:35,020 --> 00:09:43,960
curves so there's a few different um

00:09:39,330 --> 00:09:48,810
yeah you can't really see but there's a

00:09:43,960 --> 00:09:48,810
few different commands for SVG paths

00:09:51,930 --> 00:10:01,600
there's the first there's mm so that's

00:09:55,510 --> 00:10:06,340
the Move command and the way you would

00:10:01,600 --> 00:10:10,560
use this is we might say M 0 0 and that

00:10:06,340 --> 00:10:16,510
means move my cursor basically move to

00:10:10,560 --> 00:10:18,400
position 0 0 where 0 is X and 0 is y so

00:10:16,510 --> 00:10:26,440
in this case it might happen that you

00:10:18,400 --> 00:10:29,740
said okay move me to 0 0 and then for us

00:10:26,440 --> 00:10:37,680
to draw a curve and SVG pops the command

00:10:29,740 --> 00:10:48,930
is C and this one I'm gonna so C goes

00:10:37,680 --> 00:10:54,220
first anchor point a x1aa y1 and then

00:10:48,930 --> 00:10:59,020
second anchor point and then finally

00:10:54,220 --> 00:11:04,540
your x2 y2 and I will explain that right

00:10:59,020 --> 00:11:11,940
now so let's say so actually let me try

00:11:04,540 --> 00:11:11,940
and color code this this is this

00:11:15,220 --> 00:11:27,050
and this is this and finally this is

00:11:25,100 --> 00:11:32,450
this wow these are great markers

00:11:27,050 --> 00:11:35,680
I just heard it ah yeah yeah is it gonna

00:11:32,450 --> 00:11:35,680
be alright if I told ya

00:11:41,080 --> 00:11:52,640
yeah cool so yeah did that make sense

00:11:50,030 --> 00:11:54,710
and I can explain more like I can do

00:11:52,640 --> 00:12:02,680
more examples so let's do it this way

00:11:54,710 --> 00:12:03,890
so let's actually draw her so let's see

00:12:02,680 --> 00:12:11,780
okay

00:12:03,890 --> 00:12:14,000
let's define here is my x-axis here's my

00:12:11,780 --> 00:12:17,660
y-axis here's my zero zero

00:12:14,000 --> 00:12:22,220
um and then can anybody tell me why I

00:12:17,660 --> 00:12:28,340
drew the Y going down yeah the screen

00:12:22,220 --> 00:12:31,550
the screen always um with SVG your x

00:12:28,340 --> 00:12:35,390
increases as you go right and your Y

00:12:31,550 --> 00:12:37,340
increases as you go down that's how it

00:12:35,390 --> 00:12:41,810
is for like most drawing if not all

00:12:37,340 --> 00:12:46,130
drawing programs right I think yeah yeah

00:12:41,810 --> 00:12:54,290
I think um so yeah let's do this

00:12:46,130 --> 00:13:01,940
um let us draw a curve mm should we call

00:12:54,290 --> 00:13:07,390
this maybe 10 wait that's 10 over and 10

00:13:01,940 --> 00:13:14,410
down let's say our ending point is at

00:13:07,390 --> 00:13:19,010
that's probably 100 so 100 and then 10

00:13:14,410 --> 00:13:20,390
so this is our beginning actually so

00:13:19,010 --> 00:13:24,710
this is our beginning and this is our

00:13:20,390 --> 00:13:27,770
end and let's actually together start

00:13:24,710 --> 00:13:33,430
draw a start writing down the SVG path

00:13:27,770 --> 00:13:33,430
command yeah so help me with this so

00:13:34,960 --> 00:13:40,960
for this point the way that we tell SVG

00:13:38,980 --> 00:13:44,589
paths that we want to keep begin at this

00:13:40,960 --> 00:13:47,589
point we say move right because we start

00:13:44,589 --> 00:13:50,260
we always move is like you tell us VG

00:13:47,589 --> 00:13:52,990
path like pick up the pen and drop it at

00:13:50,260 --> 00:13:58,060
this point so we start at this point and

00:13:52,990 --> 00:14:01,450
we say move ten ten and then let's do

00:13:58,060 --> 00:14:08,160
this so let's say our first anchor point

00:14:01,450 --> 00:14:17,740
is right here and let's call this 20

00:14:08,160 --> 00:14:26,380
maybe 2000 second anchor point let's

00:14:17,740 --> 00:14:31,860
call this an e zero and so we're going

00:14:26,380 --> 00:14:31,860
to draw I should have done this in red

00:14:39,380 --> 00:14:45,920
and so the final curve will look like

00:14:44,430 --> 00:14:50,820
this

00:14:45,920 --> 00:14:53,699
yeah so help me with this um what should

00:14:50,820 --> 00:14:55,920
my SVG path command look like now that I

00:14:53,699 --> 00:15:01,709
have M 1010 what should be the next come

00:14:55,920 --> 00:15:03,600
in hey I hear you yes see

00:15:01,709 --> 00:15:10,410
and then what's my x and y the first x

00:15:03,600 --> 00:15:14,610
and y awesome thank you and then the

00:15:10,410 --> 00:15:23,990
next one cool

00:15:14,610 --> 00:15:26,220
a t0 and finally that was easy huh

00:15:23,990 --> 00:15:28,019
that's it that's all you need to draw a

00:15:26,220 --> 00:15:29,670
curve and that's like pretty much the

00:15:28,019 --> 00:15:34,050
most powerful thing you can do with an

00:15:29,670 --> 00:15:38,000
SVG path like draw a curve and that's

00:15:34,050 --> 00:15:40,889
all I took so as long as you remember

00:15:38,000 --> 00:15:44,670
your first starting point you move to it

00:15:40,889 --> 00:15:46,079
and then you give it your first anchor

00:15:44,670 --> 00:15:49,410
point your second anchor point and your

00:15:46,079 --> 00:15:52,019
ending point and that's your curve then

00:15:49,410 --> 00:15:55,709
let me teach you another one that I use

00:15:52,019 --> 00:15:58,889
a lot of times which is L do you guys

00:15:55,709 --> 00:16:06,110
want to guess what L is yeah

00:15:58,889 --> 00:16:06,110
line two I'm gonna fit that down here

00:16:07,720 --> 00:16:15,350
and that one is also just thanks why

00:16:13,179 --> 00:16:18,799
it's very straightforward so basically

00:16:15,350 --> 00:16:21,220
that one is wherever it basically says

00:16:18,799 --> 00:16:25,249
wherever um

00:16:21,220 --> 00:16:27,649
wherever your cursor is right now do not

00:16:25,249 --> 00:16:29,839
pick up your pen or basically wherever

00:16:27,649 --> 00:16:31,480
your pen is do not pick up your pen and

00:16:29,839 --> 00:16:36,859
just draw a straight line there so

00:16:31,480 --> 00:16:43,040
basically this is your ending point so

00:16:36,859 --> 00:16:45,470
if let me see so then I guess I will now

00:16:43,040 --> 00:16:48,889
just keep calling any but I'm gonna use

00:16:45,470 --> 00:17:01,299
red for my ending points so this is

00:16:48,889 --> 00:17:02,769
basically an ending point so let's do

00:17:01,299 --> 00:17:06,380
hmm

00:17:02,769 --> 00:17:09,169
shall we try doing that uh the cherry

00:17:06,380 --> 00:17:10,669
ball blossom petal from yesterday are

00:17:09,169 --> 00:17:14,899
you guys interested in that we'll go

00:17:10,669 --> 00:17:17,089
through that together because because

00:17:14,899 --> 00:17:20,449
the goal is for you to make your own

00:17:17,089 --> 00:17:22,459
cuddles so once we figure out how to do

00:17:20,449 --> 00:17:24,409
the cherry blossom petal then I'm going

00:17:22,459 --> 00:17:26,870
to give you guys about 30 minutes to try

00:17:24,409 --> 00:17:29,090
and come up with three petals of your

00:17:26,870 --> 00:17:32,059
own I'm and that's why you should also

00:17:29,090 --> 00:17:35,029
have pens and paper right next to you

00:17:32,059 --> 00:17:37,279
because I found that um it's it actually

00:17:35,029 --> 00:17:39,470
really helps if you can like write out

00:17:37,279 --> 00:17:42,980
for yourself like all of the different

00:17:39,470 --> 00:17:45,700
paths as you're coding along so let's

00:17:42,980 --> 00:17:45,700
start out with this

00:17:51,380 --> 00:18:01,950
uh-huh let's start out with this time

00:17:56,670 --> 00:18:08,820
let's do like huh here's my eggs here's

00:18:01,950 --> 00:18:10,380
my Y let's start up huh hold on oh wait

00:18:08,820 --> 00:18:12,390
I don't know I shouldn't do it that way

00:18:10,380 --> 00:18:18,480
okay let's do this

00:18:12,390 --> 00:18:24,480
you know that here's my zero zero here

00:18:18,480 --> 00:18:29,930
is my a hundred zero here's my zero a

00:18:24,480 --> 00:18:29,930
hundred and then how did I draw my pedal

00:18:35,129 --> 00:18:38,730
cool okay

00:18:40,180 --> 00:18:46,960
I am torn oh well we'll do it this way

00:18:44,020 --> 00:18:52,180
okay so let's draw a petal that looks

00:18:46,960 --> 00:18:54,550
something like this and then we're gonna

00:18:52,180 --> 00:18:57,820
figure this out together so very first

00:18:54,550 --> 00:19:05,490
point this probably looks like 50 zero

00:18:57,820 --> 00:19:10,680
right so what's my first command M and

00:19:05,490 --> 00:19:13,540
then 50 zero right okay now we have

00:19:10,680 --> 00:19:16,750
let's figure out all the points for this

00:19:13,540 --> 00:19:25,090
one okay this one let's see this looks

00:19:16,750 --> 00:19:29,590
like 75 75 and then what my Y would be a

00:19:25,090 --> 00:19:30,880
hundred right great right okay yeah I'm

00:19:29,590 --> 00:19:34,590
pretty bad at math so you need to

00:19:30,880 --> 00:19:37,180
correct me okay so many five a hundred

00:19:34,590 --> 00:19:45,780
actually let me do it with the right

00:19:37,180 --> 00:19:45,780
colors then first Anchor Point is blue

00:19:47,890 --> 00:19:53,300
okay so we're gonna just like

00:19:49,820 --> 00:19:55,580
guesstimate cuz obviously like we can't

00:19:53,300 --> 00:19:58,840
quite figure it out right so guesstimate

00:19:55,580 --> 00:20:06,590
for me what that anchor point might be

00:19:58,840 --> 00:20:08,930
eighty and then this one thirty yeah

00:20:06,590 --> 00:20:10,610
there's like no wrong answer it's just

00:20:08,930 --> 00:20:16,600
like the pedo might look a little bit

00:20:10,610 --> 00:20:23,420
different from that is all yeah I'm then

00:20:16,600 --> 00:20:25,540
second anchor point oh it's probably it

00:20:23,420 --> 00:20:32,470
probably should be eighty right huh

00:20:25,540 --> 00:20:35,470
should we try 90 and then the why

00:20:32,470 --> 00:20:35,470
somebody

00:20:35,700 --> 00:20:42,530
and so now it should be the command is

00:20:42,650 --> 00:20:54,800
what should the command be now we're

00:20:45,720 --> 00:20:54,800
drawing from here to here now see 80 30

00:20:57,680 --> 00:21:12,420
yeah cool 75 100 I'm just to make sure

00:21:10,890 --> 00:21:14,480
I'm writing big enough for the bath

00:21:12,420 --> 00:21:19,200
right can you guys see you in the back

00:21:14,480 --> 00:21:26,850
this is all right no bigger okay I'll

00:21:19,200 --> 00:21:35,000
start writing bigger okay I know right

00:21:26,850 --> 00:21:35,000
here what should this be 50

00:21:40,190 --> 00:21:50,160
16:56 t-55 wait Hana well then remember

00:21:48,780 --> 00:21:54,330
remember that this is a hundred

00:21:50,160 --> 00:21:57,570
fifty-five would be like really yeah

00:21:54,330 --> 00:21:59,430
sooo 65 you guys want to do 65 we're

00:21:57,570 --> 00:22:01,320
gonna put this all in the computer soon

00:21:59,430 --> 00:22:05,250
just to see what it looks like by the

00:22:01,320 --> 00:22:10,440
way yes so let's do that so I'm gonna

00:22:05,250 --> 00:22:15,030
try and write bigger is this B is that

00:22:10,440 --> 00:22:23,300
good in the back okay um all right cool

00:22:15,030 --> 00:22:23,300
so now again another line thank you

00:22:24,260 --> 00:22:32,880
another line twenty-five and a hundred

00:22:28,500 --> 00:22:35,460
and finally another curve back remember

00:22:32,880 --> 00:22:37,620
this time around we're trying to curve

00:22:35,460 --> 00:22:45,360
this way so our first anchor point is

00:22:37,620 --> 00:22:48,540
actually over here and then our second

00:22:45,360 --> 00:22:54,090
anchor point is over here so let's do

00:22:48,540 --> 00:22:59,640
that so this one I heard 10 just now ten

00:22:54,090 --> 00:23:06,890
seventy cool then I'm getting confused

00:22:59,640 --> 00:23:06,890
with my clothes okay 2020 right 2030

00:23:09,270 --> 00:23:32,020
yeah so that's a what what do I do now

00:23:16,860 --> 00:23:37,150
see see ten seventy twenty thirty and

00:23:32,020 --> 00:23:41,710
then we end here right fifty oh wait

00:23:37,150 --> 00:23:43,360
that's a red so this is this point is

00:23:41,710 --> 00:23:50,800
both our beginning and our end

00:23:43,360 --> 00:23:52,450
so 50 zero that's it there anybody put

00:23:50,800 --> 00:23:53,380
in the numbers and then it's like really

00:23:52,450 --> 00:23:57,160
weird looking

00:23:53,380 --> 00:24:03,060
oh and a final note if I you can put in

00:23:57,160 --> 00:24:03,060
Z and Z just means closed path

00:24:12,320 --> 00:24:21,660
yeah let's try putting that in you're

00:24:20,070 --> 00:24:28,010
gonna have to read it to me because I

00:24:21,660 --> 00:24:35,210
can't see it okay we start with it was M

00:24:28,010 --> 00:24:35,210
50 zero right and then see what was C a

00:24:35,570 --> 00:24:55,640
30 oh yeah right what oh really

00:24:50,520 --> 00:25:01,470
wait wait I don't

00:24:55,640 --> 00:25:10,010
okay I don't know oh there we go

00:25:01,470 --> 00:25:13,830
wait humming oops cool thank you

00:25:10,010 --> 00:25:15,630
does that help I'll try that in a little

00:25:13,830 --> 00:25:19,410
bit okay

00:25:15,630 --> 00:25:22,140
oh I forgot to mention click here for

00:25:19,410 --> 00:25:24,360
started code and then I'm and let me

00:25:22,140 --> 00:25:26,370
actually go through this is like a

00:25:24,360 --> 00:25:31,500
little bit of an online editor that a

00:25:26,370 --> 00:25:37,320
lot of the d3 community uses it's called

00:25:31,500 --> 00:25:40,680
block builder org and then all you need

00:25:37,320 --> 00:25:46,110
to do is sign in with your github so

00:25:40,680 --> 00:25:48,780
where I have my little picture um it

00:25:46,110 --> 00:25:53,070
should have a login for you I'm login

00:25:48,780 --> 00:25:56,340
with your github hmm and then I just

00:25:53,070 --> 00:25:57,960
fork my starter code for kit for

00:25:56,340 --> 00:26:03,000
yourself so that you can like start

00:25:57,960 --> 00:26:06,480
saving it for yourself and then it's

00:26:03,000 --> 00:26:09,930
pretty straightforward um it live

00:26:06,480 --> 00:26:14,610
updates um and then the one that I like

00:26:09,930 --> 00:26:17,360
using the most is a that little oh you

00:26:14,610 --> 00:26:17,360
can't see it on

00:26:19,120 --> 00:26:23,049
and let's see

00:26:28,790 --> 00:26:35,910
okay so I typically like hitting this

00:26:32,820 --> 00:26:37,890
one so that like the editor is right by

00:26:35,910 --> 00:26:39,750
the preview section and I think for now

00:26:37,890 --> 00:26:43,590
that's all you need to know I think and

00:26:39,750 --> 00:26:46,710
then I'm for that piece of code and you

00:26:43,590 --> 00:26:48,720
can this is basically my original code

00:26:46,710 --> 00:26:52,680
for the flower petal and then we're

00:26:48,720 --> 00:26:57,120
gonna put in another one right now and

00:26:52,680 --> 00:27:02,070
then I should have yeah huh oh thank you

00:26:57,120 --> 00:27:11,940
ninety seventy seventy-five a hundred

00:27:02,070 --> 00:27:16,320
and then fifty sixty five Oh do you see

00:27:11,940 --> 00:27:23,420
it showing up right there and then the

00:27:16,320 --> 00:27:23,420
next one is another l/100 thank you

00:27:24,360 --> 00:27:37,290
and ten seventy twenty thirty thank you

00:27:32,520 --> 00:27:41,190
well how does it feel it's just like

00:27:37,290 --> 00:27:45,740
it's a little bit like narrow huh I like

00:27:41,190 --> 00:27:45,740
it okay cool okay

00:27:48,250 --> 00:28:08,300
was that fun was that fun with friends

00:27:51,340 --> 00:28:10,130
okay all right so what Mike Mike look it

00:28:08,300 --> 00:28:12,100
actually is pretty good right now yeah

00:28:10,130 --> 00:28:15,170
yeah yep

00:28:12,100 --> 00:28:17,990
okay so we're moving on and we're going

00:28:15,170 --> 00:28:20,900
to cover two things before we break off

00:28:17,990 --> 00:28:26,110
for an exercise again and we're gonna

00:28:20,900 --> 00:28:26,110
cover scales and we're gonna cover a

00:28:26,620 --> 00:28:33,310
selection and data binding so from now

00:28:31,370 --> 00:28:38,120
on we're actually covering a d3

00:28:33,310 --> 00:28:38,690
functionality so I guess before we get

00:28:38,120 --> 00:28:41,750
going

00:28:38,690 --> 00:28:44,660
um I guess let's talk about d3 a little

00:28:41,750 --> 00:28:47,180
bit so I'm guessing everybody in here

00:28:44,660 --> 00:28:52,010
has heard of c3 and a lot of you have

00:28:47,180 --> 00:28:57,200
tried T 3 I'm so for reference here is

00:28:52,010 --> 00:29:01,070
the d3 website and here is the

00:28:57,200 --> 00:29:04,190
documentation and I tend to go to the

00:29:01,070 --> 00:29:06,140
API reference all the time and which I

00:29:04,190 --> 00:29:10,400
have to admit is like really humongous

00:29:06,140 --> 00:29:11,780
and kind of intimidating and just

00:29:10,400 --> 00:29:13,610
because there are so many different

00:29:11,780 --> 00:29:18,050
modules that have like so many different

00:29:13,610 --> 00:29:21,110
things that you can do so my goal for

00:29:18,050 --> 00:29:23,270
today is that hopefully I will cover

00:29:21,110 --> 00:29:26,270
enough of the basics that you feel or

00:29:23,270 --> 00:29:30,110
right going through the reference we'll

00:29:26,270 --> 00:29:32,150
see um but for now the first thing we're

00:29:30,110 --> 00:29:34,520
going to talk about is this one right

00:29:32,150 --> 00:29:36,980
here with the scales and then we're

00:29:34,520 --> 00:29:40,450
going to talk about selections which is

00:29:36,980 --> 00:29:40,450
like the one right after that

00:29:41,260 --> 00:29:48,770
yeah see okay so let's start out with

00:29:45,020 --> 00:29:52,480
the scales does anybody want to guess

00:29:48,770 --> 00:29:52,480
what skills are good for before we start

00:29:54,130 --> 00:30:10,910
Thanks Thanks and okay I guess I guess I

00:30:06,200 --> 00:30:18,320
did walk myself into that one um thanks

00:30:10,910 --> 00:30:21,200
okay so um I don't know if I should be

00:30:18,320 --> 00:30:25,430
standing up or send us okay so this is

00:30:21,200 --> 00:30:28,790
what a very typical d3 scale looks like

00:30:25,430 --> 00:30:31,550
so one of the one of the most basic ones

00:30:28,790 --> 00:30:34,550
is scale linear which just means that

00:30:31,550 --> 00:30:37,370
I'm with your domain you have an input

00:30:34,550 --> 00:30:39,620
your domain and you have an output your

00:30:37,370 --> 00:30:41,810
range and it is basically a one-to-one

00:30:39,620 --> 00:30:44,660
mapping so it's a linear one-to-one

00:30:41,810 --> 00:30:47,780
mapping between your input and your

00:30:44,660 --> 00:30:50,450
output and there's a few others that

00:30:47,780 --> 00:30:52,910
I'll mention uh further down the line

00:30:50,450 --> 00:30:55,370
but for now like let's just use scale

00:30:52,910 --> 00:30:57,320
linearize our example and so the way

00:30:55,370 --> 00:30:59,420
that I like to think about scales is

00:30:57,320 --> 00:31:01,640
like I'm sure you've done a lot of

00:30:59,420 --> 00:31:03,200
skills and like math class back when you

00:31:01,640 --> 00:31:06,380
were in school or maybe even though I

00:31:03,200 --> 00:31:09,500
don't know I'm but like I guess when I

00:31:06,380 --> 00:31:12,140
was um the way that I like to think

00:31:09,500 --> 00:31:15,230
about scales in the sense of d3 in terms

00:31:12,140 --> 00:31:20,120
of data visualization is that we use

00:31:15,230 --> 00:31:23,230
scales to map from the input data to the

00:31:20,120 --> 00:31:26,210
display and what I mean by that is

00:31:23,230 --> 00:31:30,320
oftentimes in data visualization we

00:31:26,210 --> 00:31:33,890
might have data set that's like you know

00:31:30,320 --> 00:31:36,200
there's the date and there's some sort

00:31:33,890 --> 00:31:38,540
of a value let's take for example you

00:31:36,200 --> 00:31:40,550
know average city temperature across a

00:31:38,540 --> 00:31:44,600
year or something and maybe you want to

00:31:40,550 --> 00:31:46,910
put that as a scatterplot or like a line

00:31:44,600 --> 00:31:49,070
chart or something as your visualization

00:31:46,910 --> 00:31:52,760
and so in that case you might think of

00:31:49,070 --> 00:31:54,890
it as your x-axis is your time to like

00:31:52,760 --> 00:31:58,160
the date across

00:31:54,890 --> 00:32:01,070
say a year and your y-axis might be say

00:31:58,160 --> 00:32:04,549
the temperature across time and so in

00:32:01,070 --> 00:32:09,590
that case your domain would be the date

00:32:04,549 --> 00:32:12,980
or the time and that date you can map it

00:32:09,590 --> 00:32:15,440
to the x axis the x value and that's

00:32:12,980 --> 00:32:21,410
your output so your domain in that case

00:32:15,440 --> 00:32:24,020
is the date and I'm your range your

00:32:21,410 --> 00:32:28,190
output is the x value and then me you

00:32:24,020 --> 00:32:31,549
have another one that your temperature

00:32:28,190 --> 00:32:37,490
is the domain so your input and your

00:32:31,549 --> 00:32:39,620
output is the Y value and maybe for

00:32:37,490 --> 00:32:43,070
whatever reason you also decide to map

00:32:39,620 --> 00:32:46,820
some other data attribute to opacity etc

00:32:43,070 --> 00:32:50,510
etc so in data visualization we think of

00:32:46,820 --> 00:32:53,299
the input the domain as the data

00:32:50,510 --> 00:32:56,210
attribute and we think of it as we're

00:32:53,299 --> 00:33:00,169
trying to map the data to something on

00:32:56,210 --> 00:33:08,570
the screen so let's take for example

00:33:00,169 --> 00:33:09,950
some of these things um so I just drew

00:33:08,570 --> 00:33:12,500
something like I just wrote down some

00:33:09,950 --> 00:33:15,770
things I'm so for example maybe your

00:33:12,500 --> 00:33:18,440
domain is your minimum is zero and your

00:33:15,770 --> 00:33:21,140
maximum is 100 and your range your

00:33:18,440 --> 00:33:24,440
minimum is zero and your maximum is one

00:33:21,140 --> 00:33:26,630
so if you put input zero you'll get back

00:33:24,440 --> 00:33:29,510
zero if you input 20 you'll get back to

00:33:26,630 --> 00:33:32,780
zero point two if you input 75 you'll

00:33:29,510 --> 00:33:36,380
get 0.75 a hundred and you get one or

00:33:32,780 --> 00:33:38,270
like maybe for this example and maybe

00:33:36,380 --> 00:33:41,030
you want to do something like your data

00:33:38,270 --> 00:33:43,669
has a min and Max of 0 to 100 and then

00:33:41,030 --> 00:33:45,590
maybe for your range you want to do 500

00:33:43,669 --> 00:33:47,630
is your minimum like you want to map

00:33:45,590 --> 00:33:48,559
your 0 to 500 and you want to map your

00:33:47,630 --> 00:33:51,350
100 to 0

00:33:48,559 --> 00:33:52,970
um and the reason why this might be

00:33:51,350 --> 00:33:57,500
something you want to do and the reason

00:33:52,970 --> 00:34:03,940
why we use scales so often in d3 and in

00:33:57,500 --> 00:34:03,940
data visualization is because this work

00:34:05,090 --> 00:34:08,270
[Applause]

00:34:09,780 --> 00:34:31,359
whoa cool

00:34:13,329 --> 00:34:45,220
who wants this if not I'm just looking

00:34:31,359 --> 00:34:46,960
at here okay thanks for taking them okay

00:34:45,220 --> 00:34:49,869
so the reason why we might want to do

00:34:46,960 --> 00:34:53,579
something like the input being zero 100

00:34:49,869 --> 00:34:57,790
and the output being five hundred and

00:34:53,579 --> 00:35:00,809
zero it's because maybe sometimes you'll

00:34:57,790 --> 00:35:03,790
have say maybe this is your temperature

00:35:00,809 --> 00:35:05,140
let's say in Fahrenheit cuz there's that

00:35:03,790 --> 00:35:07,950
would be really shitty if your city goes

00:35:05,140 --> 00:35:10,900
to 100 Celsius so let's do Fahrenheit

00:35:07,950 --> 00:35:14,880
there's my mic still okay back there

00:35:10,900 --> 00:35:19,680
okay um and then maybe this is your Y

00:35:14,880 --> 00:35:23,520
this is your Y value which means that

00:35:19,680 --> 00:35:23,520
let's say this is your screen

00:35:24,999 --> 00:35:31,609
which means that this should be your

00:35:27,499 --> 00:35:38,660
zero zero and this is your zero five

00:35:31,609 --> 00:35:40,869
hundred so then that means that for what

00:35:38,660 --> 00:35:44,960
we're trying to do we're saying okay if

00:35:40,869 --> 00:35:47,720
you know one of these days the sari

00:35:44,960 --> 00:35:50,660
temperature is zero then we will want to

00:35:47,720 --> 00:35:52,609
map it to 500 so for example what the

00:35:50,660 --> 00:35:55,970
exact for that what we have is like

00:35:52,609 --> 00:35:59,329
maybe the first day is 0 so we map it to

00:35:55,970 --> 00:36:04,009
here and then the next day we have 20 so

00:35:59,329 --> 00:36:08,809
we map it here and the next one is 50

00:36:04,009 --> 00:36:11,690
and it's 250 here and it's so many five

00:36:08,809 --> 00:36:17,390
so it's about right here 125 on the

00:36:11,690 --> 00:36:19,670
screen and then a hundred is here and

00:36:17,390 --> 00:36:22,549
that's just nice because so this was a

00:36:19,670 --> 00:36:24,470
zero degrees one and this was the twenty

00:36:22,549 --> 00:36:27,829
degrees one and this is the fifty

00:36:24,470 --> 00:36:31,400
degrees one this is 75 degrees and this

00:36:27,829 --> 00:36:35,059
is a hundred degrees and this was nice

00:36:31,400 --> 00:36:36,680
because like without that scale maybe

00:36:35,059 --> 00:36:39,529
you will have had to do something like

00:36:36,680 --> 00:36:41,420
okay so it's zero degrees but then like

00:36:39,529 --> 00:36:43,309
we need to or it's zero degrees but then

00:36:41,420 --> 00:36:44,960
like you know we need to like put it all

00:36:43,309 --> 00:36:46,880
the way down here so like you have to do

00:36:44,960 --> 00:36:49,640
like the calculation yourself of like

00:36:46,880 --> 00:36:51,079
you know inverting and inverting the

00:36:49,640 --> 00:36:53,059
things for the screen because like Y

00:36:51,079 --> 00:36:55,309
axis goes down like that but now if you

00:36:53,059 --> 00:36:58,460
have a scale you just say okay mat money

00:36:55,309 --> 00:37:02,059
like mat my minimum two down here I'm at

00:36:58,460 --> 00:37:03,529
my maximum I'm to right here and so it's

00:37:02,059 --> 00:37:05,779
just like you don't even need to do with

00:37:03,529 --> 00:37:07,759
the math yourself so scales is like the

00:37:05,779 --> 00:37:09,380
way I like to think about it is it does

00:37:07,759 --> 00:37:12,940
all the math I don't want to do for me

00:37:09,380 --> 00:37:12,940
to put things onto the screen

00:37:18,380 --> 00:37:24,690
so this is what I'm the code might look

00:37:21,510 --> 00:37:27,780
like for a scale again a little bit

00:37:24,690 --> 00:37:33,720
small so follow along on your screen I'm

00:37:27,780 --> 00:37:38,910
so I have some I have some there's just

00:37:33,720 --> 00:37:42,089
kind of fake data but um so maybe I have

00:37:38,910 --> 00:37:44,550
a I say I want a screen height or I want

00:37:42,089 --> 00:37:47,220
a height of 600 as in like I might I

00:37:44,550 --> 00:37:49,190
want my visualization to fit into you

00:37:47,220 --> 00:37:52,230
know a height of 600 pixels let's say

00:37:49,190 --> 00:37:54,450
and then let's say I have a data set and

00:37:52,230 --> 00:37:56,010
maybe it's something like it has a date

00:37:54,450 --> 00:37:59,369
attribute and the temperature attribute

00:37:56,010 --> 00:38:01,140
and then here and then maybe I only

00:37:59,369 --> 00:38:03,060
listed out two but like maybe there's

00:38:01,140 --> 00:38:04,650
like you know 50 or a hundred of them or

00:38:03,060 --> 00:38:06,630
something like that or like 200 points

00:38:04,650 --> 00:38:12,780
data points however many there is and

00:38:06,630 --> 00:38:19,140
all I have to do is say D 3 dot min pass

00:38:12,780 --> 00:38:24,780
in my data array and um give me back the

00:38:19,140 --> 00:38:27,680
minimum date D 3 max give me back my

00:38:24,780 --> 00:38:27,680
maximum day

00:38:29,110 --> 00:38:34,820
is that pretty straightforward take in

00:38:32,330 --> 00:38:38,030
this data array and give me back

00:38:34,820 --> 00:38:41,240
whatever the minimum date is and

00:38:38,030 --> 00:38:42,920
whatever the maximum date is really

00:38:41,240 --> 00:38:47,200
straightforward right cuz you guys all

00:38:42,920 --> 00:38:52,430
do JavaScript right wait yeah right

00:38:47,200 --> 00:38:55,700
sorry sometimes so I've taught a lot of

00:38:52,430 --> 00:38:57,710
work and sometimes if you teach data

00:38:55,700 --> 00:38:59,390
visualization workshops sometimes the

00:38:57,710 --> 00:39:01,250
audience are like data scientists or

00:38:59,390 --> 00:39:03,170
designers and sometimes they won't know

00:39:01,250 --> 00:39:06,170
they won't have like coding much and

00:39:03,170 --> 00:39:08,390
like beforehand so like sometimes I

00:39:06,170 --> 00:39:10,610
can't like sometimes I have to explain

00:39:08,390 --> 00:39:12,860
like JavaScript concepts and stuff to

00:39:10,610 --> 00:39:14,840
them so like sometimes so ask me what

00:39:12,860 --> 00:39:16,430
this arrow is like what the fat arrow is

00:39:14,840 --> 00:39:19,310
and all of that so just make sure

00:39:16,430 --> 00:39:21,800
everybody is like perfectly good with it

00:39:19,310 --> 00:39:26,870
like fat arrow and all of the syntax is

00:39:21,800 --> 00:39:28,880
okay yeah cool okay so the mathematics

00:39:26,870 --> 00:39:33,800
is really straightforward um there's

00:39:28,880 --> 00:39:35,990
another one um there's a another d3

00:39:33,800 --> 00:39:38,090
functionality that's like really useful

00:39:35,990 --> 00:39:41,120
and it's called d3 extent and what

00:39:38,090 --> 00:39:44,120
extent does is it gives back and you

00:39:41,120 --> 00:39:46,190
tell it what attribute essentially like

00:39:44,120 --> 00:39:48,470
you tell it like what you want them in a

00:39:46,190 --> 00:39:51,320
massive and then it returns that in an

00:39:48,470 --> 00:39:53,180
array so like here you're the same d3

00:39:51,320 --> 00:39:55,670
that extent paths in the data array and

00:39:53,180 --> 00:39:59,480
then you say okay out of that data array

00:39:55,670 --> 00:40:03,170
and for each of the data objects I'm

00:39:59,480 --> 00:40:06,920
give me back the data the date attribute

00:40:03,170 --> 00:40:09,440
and then d3 will give it back to you as

00:40:06,920 --> 00:40:12,830
an array of men and Macs and that's cool

00:40:09,440 --> 00:40:17,270
because um you want to pass the the

00:40:12,830 --> 00:40:20,960
domain d3 is dot domain takes in an

00:40:17,270 --> 00:40:23,510
array of min and Max so I'm in this case

00:40:20,960 --> 00:40:25,940
it's a where we're basically taking the

00:40:23,510 --> 00:40:29,780
min and Max from here and passing it

00:40:25,940 --> 00:40:31,850
into the domain but um you could also

00:40:29,780 --> 00:40:33,740
have just put in like I called this

00:40:31,850 --> 00:40:36,380
extent here right we could have just a

00:40:33,740 --> 00:40:39,010
dot domain extent and that would be the

00:40:36,380 --> 00:40:39,010
exact same thing

00:40:39,280 --> 00:40:44,720
and then of course here what I'm doing

00:40:41,660 --> 00:40:47,390
is saying the range is I want to map the

00:40:44,720 --> 00:40:50,300
minimum to height so like I want to map

00:40:47,390 --> 00:40:52,760
the minimum to the bottom of that

00:40:50,300 --> 00:40:55,070
visualization and I want to map the max

00:40:52,760 --> 00:40:56,230
to zero which is like you know basically

00:40:55,070 --> 00:40:58,100
the top of the visualization

00:40:56,230 --> 00:41:00,140
alternatively I could have like you know

00:40:58,100 --> 00:41:02,630
giving it some padding or something and

00:41:00,140 --> 00:41:04,250
be like okay I wanted to map it map the

00:41:02,630 --> 00:41:07,640
top to like you know 20 or something

00:41:04,250 --> 00:41:12,260
like that but that's that that's that's

00:41:07,640 --> 00:41:15,290
how I commonly use scales I'm and some

00:41:12,260 --> 00:41:19,210
of those Oh before I go on how does that

00:41:15,290 --> 00:41:23,210
sound quite straightforward right yeah

00:41:19,210 --> 00:41:25,400
no confusion okay cuz you're going to

00:41:23,210 --> 00:41:26,840
use scales later in an exercise so if

00:41:25,400 --> 00:41:32,330
you have questions you should ask them

00:41:26,840 --> 00:41:36,530
now okay okay so here are some of the

00:41:32,330 --> 00:41:38,240
scales I use the most often and I use

00:41:36,530 --> 00:41:43,760
scale linear which is like basically

00:41:38,240 --> 00:41:46,310
like a sounds of linear um a linear

00:41:43,760 --> 00:41:49,660
mapping from the domain to the range and

00:41:46,310 --> 00:41:54,620
I also use scale log a lot so that's a

00:41:49,660 --> 00:41:57,500
logarithmic mapping yeah from the domain

00:41:54,620 --> 00:42:01,010
to the range so um

00:41:57,500 --> 00:42:02,840
scale time is really great for dates so

00:42:01,010 --> 00:42:06,250
you put in so for that one the input

00:42:02,840 --> 00:42:09,110
needs to be a JavaScript date object and

00:42:06,250 --> 00:42:12,230
then you can the range could be anything

00:42:09,110 --> 00:42:14,300
the range could be like usually the

00:42:12,230 --> 00:42:17,120
range is actually the range should be

00:42:14,300 --> 00:42:18,950
numbers um and so that one's really

00:42:17,120 --> 00:42:21,800
helpful especially if you have like for

00:42:18,950 --> 00:42:25,190
example an x-axis again that's like the

00:42:21,800 --> 00:42:27,560
input the data input is date objects and

00:42:25,190 --> 00:42:33,280
then you want to like map it to your

00:42:27,560 --> 00:42:37,100
x-axis and then the there's some scales

00:42:33,280 --> 00:42:38,810
for ordinal scales so um the previous

00:42:37,100 --> 00:42:41,570
three are the continuous skills that I

00:42:38,810 --> 00:42:43,880
use the most often I mean for ordinal

00:42:41,570 --> 00:42:46,160
ordinal just means that your data might

00:42:43,880 --> 00:42:48,620
be categorical so instead of categoric

00:42:46,160 --> 00:42:51,230
categorical and has an order

00:42:48,620 --> 00:42:52,640
so whereas continuous could be like 0 1

00:42:51,230 --> 00:42:55,310
2 3 or like you know 0

00:42:52,640 --> 00:43:01,180
0.1 0.2 like it's it's a continuous

00:42:55,310 --> 00:43:06,020
scale ordinal could be something like mm

00:43:01,180 --> 00:43:08,840
something categorical Nadi what's a good

00:43:06,020 --> 00:43:20,390
ordinal scale example I'm gonna call on

00:43:08,840 --> 00:43:28,400
you thank you I really like was it I

00:43:20,390 --> 00:43:31,940
couldn't remember one thank you huh we

00:43:28,400 --> 00:43:35,330
did yeah yes this is good one

00:43:31,940 --> 00:43:38,120
uh yeah t-shirt sizes yeah and you being

00:43:35,330 --> 00:43:39,470
categorical and you being discreet you

00:43:38,120 --> 00:43:52,000
it's been--it's it's kind of hard

00:43:39,470 --> 00:43:52,000
thinking up here sorry what orders

00:43:59,530 --> 00:44:04,460
what's the discrete one that doesn't

00:44:01,610 --> 00:44:08,030
have order no no I mean what's it called

00:44:04,460 --> 00:44:18,220
I can't remember like scale cuz it

00:44:08,030 --> 00:44:20,990
because so okay okay okay thank you um

00:44:18,220 --> 00:44:23,510
yeah those were good ones okay so scale

00:44:20,990 --> 00:44:31,760
band um for that one

00:44:23,510 --> 00:44:36,740
let's see d3 so here is um the reference

00:44:31,760 --> 00:44:38,870
for a d3 scale and so some of the ones I

00:44:36,740 --> 00:44:41,110
mentioned so there's continuous and you

00:44:38,870 --> 00:44:43,430
can have linear power log identity time

00:44:41,110 --> 00:44:46,820
sorry the order know once I mentioned

00:44:43,430 --> 00:44:50,900
just now was a sub and it's like

00:44:46,820 --> 00:44:54,620
basically I'm what happens is for so

00:44:50,900 --> 00:44:58,400
each of these blue like boxes are

00:44:54,620 --> 00:45:01,610
basically a cat like a like this could

00:44:58,400 --> 00:45:03,800
be Monday Tuesday Wednesday so like your

00:45:01,610 --> 00:45:05,970
domain is like Monday Tuesday Wednesday

00:45:03,800 --> 00:45:08,609
or you know

00:45:05,970 --> 00:45:10,380
medium/large and then your range will be

00:45:08,609 --> 00:45:16,349
like it will literally calculate for you

00:45:10,380 --> 00:45:18,300
and so this first box should start at 10

00:45:16,349 --> 00:45:20,880
pixels and the next one should start at

00:45:18,300 --> 00:45:22,530
like 30 pixels and then 40 pixels or

00:45:20,880 --> 00:45:24,240
something like that you can just set you

00:45:22,530 --> 00:45:27,599
can tell it I want the padding between

00:45:24,240 --> 00:45:29,280
each of these boxes to be 10 pixels or

00:45:27,599 --> 00:45:30,720
something and then like it will

00:45:29,280 --> 00:45:36,540
calculate all of that for you it's

00:45:30,720 --> 00:45:38,490
really nice um so yeah so it looks like

00:45:36,540 --> 00:45:40,920
it looks like so this is like d3 scale

00:45:38,490 --> 00:45:43,200
band and you can say my domain and you

00:45:40,920 --> 00:45:45,839
can say the range that it should take up

00:45:43,200 --> 00:45:48,930
so like maybe here it's like the domain

00:45:45,839 --> 00:45:50,910
was the three the three things and maybe

00:45:48,930 --> 00:45:52,440
you're right yeah yeah she says that

00:45:50,910 --> 00:45:54,420
really nicely so your range maybe this

00:45:52,440 --> 00:45:56,760
was like zero to 600 or something like

00:45:54,420 --> 00:45:59,670
that and then maybe I like told it that

00:45:56,760 --> 00:46:01,859
the padding's were ten each and they

00:45:59,670 --> 00:46:04,530
will calculate the starting and ending

00:46:01,859 --> 00:46:08,099
point essentially or sorry it would

00:46:04,530 --> 00:46:10,170
calculate for you yeah it would

00:46:08,099 --> 00:46:13,200
calculate for you the start and end for

00:46:10,170 --> 00:46:15,630
each of the domains that you put in the

00:46:13,200 --> 00:46:17,670
categorical domains that you put in so

00:46:15,630 --> 00:46:20,579
some really nice functionality in here

00:46:17,670 --> 00:46:25,290
and that you can check out if you have

00:46:20,579 --> 00:46:31,160
the time but uh yes so those are the

00:46:25,290 --> 00:46:31,160
ones that I use the most often yep

00:46:31,880 --> 00:46:40,380
okay and so we're gonna so that's the

00:46:35,160 --> 00:46:45,900
end of scales yeah yeah skew order no

00:46:40,380 --> 00:47:04,410
it's not a thing is it not great wait oh

00:46:45,900 --> 00:47:06,980
my god it's a thing oh my god Nadia I

00:47:04,410 --> 00:47:09,090
told you you should teach this workshop

00:47:06,980 --> 00:47:12,900
yesterday I told that everybody that's

00:47:09,090 --> 00:47:17,460
not he's teaching this workshop thank

00:47:12,900 --> 00:47:19,680
you I learned something actually so it

00:47:17,460 --> 00:47:22,260
was actually I think I remember it being

00:47:19,680 --> 00:47:25,890
in v3 and then when they went to v4 I

00:47:22,260 --> 00:47:28,920
think I just like didn't find it like I

00:47:25,890 --> 00:47:30,570
think I just like always just went

00:47:28,920 --> 00:47:34,080
straight here or something and like

00:47:30,570 --> 00:47:39,300
thought that he took out ordinal like I

00:47:34,080 --> 00:47:41,550
thought he took out scale or doe so yeah

00:47:39,300 --> 00:47:47,670
yeah I mean really there's scale orders

00:47:41,550 --> 00:47:50,490
all hope so

00:47:47,670 --> 00:47:54,320
oh yeah and then this is the colors that

00:47:50,490 --> 00:47:54,320
Nadia is talking about so you can have

00:47:56,530 --> 00:48:03,079
yeah so you can input usually it assumes

00:48:00,680 --> 00:48:05,810
we give in the number T in the range

00:48:03,079 --> 00:48:08,869
serial ones yeah so assumes like you

00:48:05,810 --> 00:48:12,260
give it some number between 0 1 and it

00:48:08,869 --> 00:48:16,760
will give you return you a color just

00:48:12,260 --> 00:48:22,670
really nice cool

00:48:16,760 --> 00:48:27,859
let's move on okay so we're gonna get

00:48:22,670 --> 00:48:30,740
into D 3 D 3 now I'm so let's start with

00:48:27,859 --> 00:48:33,290
selection and data and let's start out

00:48:30,740 --> 00:48:37,339
with this piece of code so this piece of

00:48:33,290 --> 00:48:39,609
code basically draws this very ugly bar

00:48:37,339 --> 00:48:39,609
chart

00:48:42,570 --> 00:48:48,490
and so let's talk about how it's doing

00:48:46,300 --> 00:48:53,080
that now let's talk about first of all

00:48:48,490 --> 00:48:59,290
here's our SVG and there are five

00:48:53,080 --> 00:49:03,100
rectangle elements in there and here

00:48:59,290 --> 00:49:05,470
we're saying okay d3 can you go and

00:49:03,100 --> 00:49:09,640
select all of the rectangle elements

00:49:05,470 --> 00:49:12,790
that you find that you find in this Dom

00:49:09,640 --> 00:49:15,000
this document so select all the records

00:49:12,790 --> 00:49:18,100
and rectangle elements that exist in

00:49:15,000 --> 00:49:21,040
which case it will go and select all

00:49:18,100 --> 00:49:22,680
five of these rectangle elements because

00:49:21,040 --> 00:49:26,020
that's what's in the Dom right now and

00:49:22,680 --> 00:49:30,430
if you actually console.log what d3 does

00:49:26,020 --> 00:49:34,750
select our rectangle returns this is

00:49:30,430 --> 00:49:37,390
what it looks like and this is what this

00:49:34,750 --> 00:49:41,320
is how D 3 represents its selections

00:49:37,390 --> 00:49:43,300
underneath the hood and in a bit we'll

00:49:41,320 --> 00:49:45,160
play with this and then I'll ask you

00:49:43,300 --> 00:49:47,950
guys to like also a lot of things and

00:49:45,160 --> 00:49:50,920
then I'm but for now what you need to

00:49:47,950 --> 00:49:54,430
know is that underneath the hood at d3

00:49:50,920 --> 00:49:57,490
selection is basically an array of a

00:49:54,430 --> 00:50:01,300
race weight it's a it basically wraps

00:49:57,490 --> 00:50:04,090
all of their Dom elements into an array

00:50:01,300 --> 00:50:10,000
that you can then do like a bunch of

00:50:04,090 --> 00:50:12,850
operations on and then here we say dot

00:50:10,000 --> 00:50:15,100
data and we pass in our data set and our

00:50:12,850 --> 00:50:17,470
data set always has to be an array it

00:50:15,100 --> 00:50:19,930
can be an array of numbers it can be an

00:50:17,470 --> 00:50:23,290
array of you know strings it can be an

00:50:19,930 --> 00:50:25,000
array of objects but it always always

00:50:23,290 --> 00:50:29,440
has to be an array and that's just

00:50:25,000 --> 00:50:31,120
because um this is what's happening

00:50:29,440 --> 00:50:35,050
underneath the hood so when you do dot

00:50:31,120 --> 00:50:38,760
data when you bind data what diri is

00:50:35,050 --> 00:50:41,200
essentially doing is it's saying okay

00:50:38,760 --> 00:50:44,590
we've just selected all of these

00:50:41,200 --> 00:50:48,240
rectangle L events and now I've been

00:50:44,590 --> 00:50:51,760
given this data set this array of data

00:50:48,240 --> 00:50:53,740
we're going to map them one-to-one so

00:50:51,760 --> 00:50:55,810
here was the date

00:50:53,740 --> 00:50:59,290
right like this is the data and it's a

00:50:55,810 --> 00:51:01,530
hundred 250 175 200 120 and here's all

00:50:59,290 --> 00:51:05,230
of the rectangle elements that Gaara

00:51:01,530 --> 00:51:09,880
selected so d3 underneath the hood when

00:51:05,230 --> 00:51:11,980
you do data just says okay 100 goes so

00:51:09,880 --> 00:51:14,770
the first data element goes to the first

00:51:11,980 --> 00:51:16,869
da first rectangle element second one to

00:51:14,770 --> 00:51:19,599
the second third one to the third fourth

00:51:16,869 --> 00:51:22,180
one to the fourth etc that's why both of

00:51:19,599 --> 00:51:24,970
them like that's why the the Dom

00:51:22,180 --> 00:51:26,470
selection the rectangle selection is in

00:51:24,970 --> 00:51:28,839
the array underneath the hood and that's

00:51:26,470 --> 00:51:30,310
why the data that are you passing needs

00:51:28,839 --> 00:51:36,160
to be in the ring because it's gonna do

00:51:30,310 --> 00:51:38,440
that one-to-one mapping and again this

00:51:36,160 --> 00:51:43,450
is what I'm it looks like underneath the

00:51:38,440 --> 00:51:47,380
hood so if you go and now console.log

00:51:43,450 --> 00:51:49,660
what d3 select all dot data returns this

00:51:47,380 --> 00:51:50,349
is what it returns so now here's the

00:51:49,660 --> 00:51:57,550
interesting thing

00:51:50,349 --> 00:52:02,349
how does d3 bind data and so it

00:51:57,550 --> 00:52:04,450
literally is putting in an for it's it's

00:52:02,349 --> 00:52:06,790
literally putting into the rect element

00:52:04,450 --> 00:52:08,670
like this attribute underscore

00:52:06,790 --> 00:52:13,900
underscore data underscore underscore

00:52:08,670 --> 00:52:15,520
one twenty and so if you open up any of

00:52:13,900 --> 00:52:17,980
the previous rectangles you'll see that

00:52:15,520 --> 00:52:21,010
if you open up the first rectangle it

00:52:17,980 --> 00:52:24,760
will have underscore underscore data 100

00:52:21,010 --> 00:52:27,580
and this one will say 250 175 200 and

00:52:24,760 --> 00:52:29,680
that's how later on when we talk about

00:52:27,580 --> 00:52:35,320
how to use the data that's been bound

00:52:29,680 --> 00:52:37,060
and that's how D 3 is getting the data

00:52:35,320 --> 00:52:40,630
that's been bound to the element and

00:52:37,060 --> 00:52:42,940
using that so let me show you what I

00:52:40,630 --> 00:52:46,359
mean by that so now that we've bound

00:52:42,940 --> 00:52:48,369
data to the elements we are going we

00:52:46,359 --> 00:52:51,310
want to say so right now we're doing

00:52:48,369 --> 00:52:53,290
attribute X attribute Y attribute with

00:52:51,310 --> 00:52:55,560
and attribute hi and that's how you draw

00:52:53,290 --> 00:53:10,680
a rectangle

00:52:55,560 --> 00:53:10,680
[Laughter]

00:53:11,309 --> 00:53:19,750
so yeah so I attribute X Y width and

00:53:16,329 --> 00:53:21,700
height um and so essentially what's

00:53:19,750 --> 00:53:23,740
happening here is we're looping through

00:53:21,700 --> 00:53:27,160
each of the rectangles in the selection

00:53:23,740 --> 00:53:30,670
and we get passed in a data and then

00:53:27,160 --> 00:53:34,089
index so you can see here for example

00:53:30,670 --> 00:53:38,079
for the X attribute I'm getting passed

00:53:34,089 --> 00:53:42,730
in a D and then I and that D is that

00:53:38,079 --> 00:53:45,940
data that got bound to that element so a

00:53:42,730 --> 00:53:48,790
little tiny little thing that's what

00:53:45,940 --> 00:53:52,890
happens if I console.log the index the

00:53:48,790 --> 00:53:52,890
data and the element itself

00:53:55,719 --> 00:54:13,339
so let me try and see if I can walk us

00:54:03,710 --> 00:54:16,400
through it okay let's do this let's walk

00:54:13,339 --> 00:54:24,079
through the XY with height attributes

00:54:16,400 --> 00:54:34,150
together so we have data a hundred we

00:54:24,079 --> 00:54:34,150
have data 250 we have 175 200 and 120

00:54:34,930 --> 00:54:51,170
okay and then we have rectangles 1 2 3 4

00:54:46,869 --> 00:55:00,650
5 and let's together calculate what our

00:54:51,170 --> 00:55:05,079
X Y width height is for each of the

00:55:00,650 --> 00:55:08,180
rectangles yeah okay so help me here I'm

00:55:05,079 --> 00:55:12,650
essential so okay so X is supposed to be

00:55:08,180 --> 00:55:17,140
I times and I think wrecked with I

00:55:12,650 --> 00:55:21,950
define us thank you

00:55:17,140 --> 00:55:26,150
wrecked with is equal to 100 so wrecked

00:55:21,950 --> 00:55:28,989
with I just realized you guys in the

00:55:26,150 --> 00:55:28,989
back can't see this huh

00:55:29,529 --> 00:55:37,509
okay uh okay all right bigger okay so

00:55:35,119 --> 00:55:43,299
for the first rectangle

00:55:37,509 --> 00:55:43,299
what's my eggs thank you

00:55:44,180 --> 00:56:05,850
why is height oh cool wait on a height -

00:55:52,730 --> 00:56:07,740
- D wait but what's my D yeah yeah hey

00:56:05,850 --> 00:56:13,260
hold on actually let me do this really

00:56:07,740 --> 00:56:18,060
quickly sue D is equal to 100 sorry you

00:56:13,260 --> 00:56:22,050
guys in the back I is equal to 0 D let's

00:56:18,060 --> 00:56:30,200
say D is 250 for the second one right

00:56:22,050 --> 00:56:36,840
and then this is 175 200 120

00:56:30,200 --> 00:56:38,150
okay so what's why what's why for my

00:56:36,840 --> 00:56:46,130
first one

00:56:38,150 --> 00:56:49,580
thank you and then what is w for my

00:56:46,130 --> 00:56:49,580
first one Oh

00:56:50,580 --> 00:57:00,300
thank you and then height is high with

00:56:59,060 --> 00:57:05,640
deep

00:57:00,300 --> 00:57:12,300
so do you would be a 100 cool okay all

00:57:05,640 --> 00:57:12,920
right let's do X for this one is thank

00:57:12,300 --> 00:57:29,060
you

00:57:12,920 --> 00:57:33,600
100 y is 600 - my data was my data 350

00:57:29,060 --> 00:57:34,890
my width is the same is a hundred okay

00:57:33,600 --> 00:57:36,080
we don't have to do with because it's

00:57:34,890 --> 00:57:42,650
the same every time

00:57:36,080 --> 00:57:42,650
hi cool

00:57:44,130 --> 00:57:48,160
we'll do the third one and then and then

00:57:46,990 --> 00:57:54,000
we'll move on because I'm pretty sure

00:57:48,160 --> 00:58:02,710
you guys got the idea right yeah so eggs

00:57:54,000 --> 00:58:03,840
thank you why 600 minus 175 five thank

00:58:02,710 --> 00:58:14,190
you

00:58:03,840 --> 00:58:15,790
and then hikes five seven five cool so

00:58:14,190 --> 00:58:19,260
did that help

00:58:15,790 --> 00:58:22,869
that's essentially what d3 is doing

00:58:19,260 --> 00:58:25,109
underneath the hood because I'm it just

00:58:22,869 --> 00:58:30,369
basically for each of the attributes um

00:58:25,109 --> 00:58:35,099
it executes the function that I passed

00:58:30,369 --> 00:58:35,099
in given the data and the index

00:58:41,160 --> 00:58:52,860
so here I want you guys to take like ten

00:58:45,640 --> 00:59:04,690
minutes and I'm I believe Oh fun

00:58:52,860 --> 00:59:07,680
do I not have oil mmm I don't have to

00:59:04,690 --> 00:59:07,680
code for this one

00:59:27,080 --> 00:59:37,560
okay give me like a minute to try and

00:59:31,320 --> 00:59:43,070
find that block or sorry about that code

00:59:37,560 --> 00:59:43,070
so that you can play with it actually

01:00:23,940 --> 01:00:27,079
[Music]

01:00:35,140 --> 01:00:37,739
No

01:00:53,619 --> 01:00:56,619
No

01:00:58,039 --> 01:01:03,259
okay so now try refreshing

01:01:08,490 --> 01:01:16,180
then go to this link so it should be

01:01:13,600 --> 01:01:19,450
right after this slide there will be

01:01:16,180 --> 01:01:24,340
this link and open it up and that will

01:01:19,450 --> 01:01:26,680
be that will be the bar chart this ugly

01:01:24,340 --> 01:01:30,490
bar chart and then what I want you to do

01:01:26,680 --> 01:01:37,900
is take five to ten minutes I'm open up

01:01:30,490 --> 01:01:40,930
your dev console and just like try you

01:01:37,900 --> 01:01:44,970
know like comment out pieces and then

01:01:40,930 --> 01:01:44,970
just console.log for example just

01:01:46,200 --> 01:01:55,990
console.log direct down here and then

01:01:52,840 --> 01:01:58,120
try looking at what that outputs so here

01:01:55,990 --> 01:02:02,800
for example when i console.log just the

01:01:58,120 --> 01:02:05,080
d3 selection you can see if I open up

01:02:02,800 --> 01:02:06,880
groups it gives me this array of

01:02:05,080 --> 01:02:12,190
rectangles and those are actually

01:02:06,880 --> 01:02:14,880
rectangles in the DOM and then for

01:02:12,190 --> 01:02:20,260
example if I uncomment the dot data part

01:02:14,880 --> 01:02:22,660
then the array of if you go on their

01:02:20,260 --> 01:02:25,030
groups you see that array and if you

01:02:22,660 --> 01:02:27,550
open up these rectangles all the way at

01:02:25,030 --> 01:02:29,740
the bottom you'll see the underscore

01:02:27,550 --> 01:02:32,950
underscore data that's bound right here

01:02:29,740 --> 01:02:36,360
and that's how D 3 is quote-unquote

01:02:32,950 --> 01:02:39,520
binding the data to your selection of

01:02:36,360 --> 01:02:42,160
Dom elements and that's how underneath

01:02:39,520 --> 01:02:47,170
the hood d3 is basically when they loops

01:02:42,160 --> 01:02:49,780
through the dom elements to you know

01:02:47,170 --> 01:02:51,820
apply your function to like you know if

01:02:49,780 --> 01:02:53,650
you want to set X attributes or Y

01:02:51,820 --> 01:02:55,990
attributes and all of that that's where

01:02:53,650 --> 01:03:00,550
it's getting the data from that you

01:02:55,990 --> 01:03:06,130
found so let's give ourselves five

01:03:00,550 --> 01:03:08,710
minutes to just go through this code and

01:03:06,130 --> 01:03:10,810
you know common things out console.log

01:03:08,710 --> 01:03:13,270
things just so that you can get a little

01:03:10,810 --> 01:03:16,810
bit of an intuitive understanding try to

01:03:13,270 --> 01:03:19,690
like you know um I'll all socially just

01:03:16,810 --> 01:03:22,869
trying to put like for example in terms

01:03:19,690 --> 01:03:24,700
instead of like doing return items with

01:03:22,869 --> 01:03:26,050
or something in chili just doing zero or

01:03:24,700 --> 01:03:28,089
seeing something and like seeing what

01:03:26,050 --> 01:03:30,579
happens like play around with what the

01:03:28,089 --> 01:03:32,680
functions return so you can kind of you

01:03:30,579 --> 01:03:37,540
can get a intuitive feeling of what's

01:03:32,680 --> 01:03:40,030
happening you know if you want to like

01:03:37,540 --> 01:03:41,770
do it with your table partners and then

01:03:40,030 --> 01:03:44,500
like you guys can kind of explore I

01:03:41,770 --> 01:03:46,359
think the two most important things is

01:03:44,500 --> 01:03:48,460
understanding what each of these

01:03:46,359 --> 01:03:51,640
functions return or sorry each of these

01:03:48,460 --> 01:03:55,660
lines return and number two and playing

01:03:51,640 --> 01:03:58,000
around with what each of these functions

01:03:55,660 --> 01:03:59,819
return for each of the attributes and

01:03:58,000 --> 01:04:09,480
how that affects the overall

01:03:59,819 --> 01:04:09,480
visualization cool let's go on to 320

01:04:14,970 --> 01:04:21,900
particular moment there is no rectangle

01:04:17,650 --> 01:04:21,900
elements so it selects nothing zero

01:04:22,859 --> 01:04:30,490
answer is an empty selection so how are

01:04:27,160 --> 01:04:35,460
those bars those five blue bars even

01:04:30,490 --> 01:04:37,990
appearing and the answer is that part

01:04:35,460 --> 01:04:40,050
that's the magic that's what I like to

01:04:37,990 --> 01:04:49,000
call a d3 is black magic

01:04:40,050 --> 01:04:51,880
so those three and those three are not

01:04:49,000 --> 01:04:54,430
functions yeah those three functions

01:04:51,880 --> 01:04:57,490
that are chained together the dot data

01:04:54,430 --> 01:05:00,280
entered append those three together are

01:04:57,490 --> 01:05:02,020
what creates those rectangle elements

01:05:00,280 --> 01:05:05,230
that you saw earlier so let's go into

01:05:02,020 --> 01:05:08,170
how that's working so first of all we

01:05:05,230 --> 01:05:10,420
have the function data and you saw like

01:05:08,170 --> 01:05:14,920
if you saw previously that dot data what

01:05:10,420 --> 01:05:17,470
it did was it looks at the selection the

01:05:14,920 --> 01:05:20,920
d3 selection and then compares it to the

01:05:17,470 --> 01:05:22,750
data that we pass in right so previously

01:05:20,920 --> 01:05:25,119
I have five rectangular elements and

01:05:22,750 --> 01:05:28,210
they have five data elements and then

01:05:25,119 --> 01:05:31,350
was able to just kind of one-to-one map

01:05:28,210 --> 01:05:35,280
each of them but this time around

01:05:31,350 --> 01:05:37,830
as you can see no d3 is like well wait I

01:05:35,280 --> 01:05:41,550
have 0 rectangle elements so it's like

01:05:37,830 --> 01:05:45,060
completely empty over here and I have 5

01:05:41,550 --> 01:05:48,180
data elements on this side and d3 goes

01:05:45,060 --> 01:05:50,070
oh okay so for me to be able to sync

01:05:48,180 --> 01:05:52,470
that like I need to be able to match

01:05:50,070 --> 01:05:55,530
them up one-to-one so for that to be

01:05:52,470 --> 01:05:58,560
able to happen I need 5 rectangles to

01:05:55,530 --> 01:06:03,930
match the data right super

01:05:58,560 --> 01:06:05,910
straightforward and so then it will

01:06:03,930 --> 01:06:07,890
return that imp like that data will

01:06:05,910 --> 01:06:12,690
return that information and then we'll

01:06:07,890 --> 01:06:15,300
say ok you know to have the data and the

01:06:12,690 --> 01:06:19,500
rectangle is the tablet data and the Dom

01:06:15,300 --> 01:06:22,530
be in sync we need to create five new

01:06:19,500 --> 01:06:27,120
rectangle elements and then and then da

01:06:22,530 --> 01:06:29,610
enter will go and say okay I'm dot enter

01:06:27,120 --> 01:06:32,340
we'll say okay so we need five new

01:06:29,610 --> 01:06:35,820
rectangles put in place holders and bind

01:06:32,340 --> 01:06:38,490
that data and finally that append will

01:06:35,820 --> 01:06:41,280
say okay create a rectangle element for

01:06:38,490 --> 01:06:44,610
every one of those placeholders that's

01:06:41,280 --> 01:06:46,170
the three functions I'm that's being

01:06:44,610 --> 01:06:48,710
chained together and that's what's

01:06:46,170 --> 01:06:53,150
happening for each of those functions

01:06:48,710 --> 01:06:56,790
that's it that's how that's how those uh

01:06:53,150 --> 01:06:58,760
rectangles get made super

01:06:56,790 --> 01:07:03,300
straightforward right like it's like

01:06:58,760 --> 01:07:05,310
that was it I'm and I always forget

01:07:03,300 --> 01:07:07,290
actually how like quick this explanation

01:07:05,310 --> 01:07:11,450
is so do you guys want to learn how to

01:07:07,290 --> 01:07:15,620
do update and actually also yeah awesome

01:07:11,450 --> 01:07:21,660
and originally I didn't have it India

01:07:15,620 --> 01:07:25,110
India plans but so to follow along for

01:07:21,660 --> 01:07:27,570
that one go back to my website or like

01:07:25,110 --> 01:07:31,920
the slides the slides calm / early woo

01:07:27,570 --> 01:07:35,280
and go to this slide this set of slides

01:07:31,920 --> 01:07:38,390
called a front-end masters d3 v4 and

01:07:35,280 --> 01:07:38,390
open that up

01:07:38,970 --> 01:07:44,289
and so I'm gonna really quickly go to

01:07:41,829 --> 01:07:46,450
the section that's a update and exiting

01:07:44,289 --> 01:07:52,359
here which I'll tell you in a little bit

01:07:46,450 --> 01:07:56,230
what slide number that is because I feel

01:07:52,359 --> 01:07:57,880
like this is actually the fun part did

01:07:56,230 --> 01:08:01,539
anybody's good - oh there we go

01:07:57,880 --> 01:08:06,609
okay so update and exit is slide 25 I

01:08:01,539 --> 01:08:08,309
should start with slide 26 and yeah so

01:08:06,609 --> 01:08:11,499
um

01:08:08,309 --> 01:08:15,099
just now we covered enter a pen which as

01:08:11,499 --> 01:08:19,299
you can guess and what it does is it

01:08:15,099 --> 01:08:23,400
helps us create Dom elements that don't

01:08:19,299 --> 01:08:27,909
yet exist based on the data we pass in

01:08:23,400 --> 01:08:30,819
right so when when a user may be first

01:08:27,909 --> 01:08:32,679
when when I'm when someone you know

01:08:30,819 --> 01:08:34,630
first gets to our visualization like

01:08:32,679 --> 01:08:37,540
when we first load a web page and we

01:08:34,630 --> 01:08:39,730
start our visualization it might be that

01:08:37,540 --> 01:08:42,429
like we just need to create a bunch of

01:08:39,730 --> 01:08:43,480
elements like a bunch of bars a bunch of

01:08:42,429 --> 01:08:46,270
rectangles or something like that

01:08:43,480 --> 01:08:47,350
because they're coming into the web page

01:08:46,270 --> 01:08:49,150
for the very first time

01:08:47,350 --> 01:08:51,670
obviously the Dom is going to be empty

01:08:49,150 --> 01:08:53,290
so then um we're going to be entering

01:08:51,670 --> 01:08:56,219
and appending a lot of rectangle

01:08:53,290 --> 01:08:59,739
elements but let's say after that uh

01:08:56,219 --> 01:09:01,719
maybe you have like a you know a

01:08:59,739 --> 01:09:03,819
real-time visualization or something

01:09:01,719 --> 01:09:06,580
like that and maybe that real-time

01:09:03,819 --> 01:09:11,080
visualization is a series of bar charts

01:09:06,580 --> 01:09:13,739
and then every let's say minute you know

01:09:11,080 --> 01:09:17,350
it updates or something like that so um

01:09:13,739 --> 01:09:20,529
in that case maybe some of the bars have

01:09:17,350 --> 01:09:22,960
to get exited like maybe some of the

01:09:20,529 --> 01:09:25,270
bars have to be removed from the table

01:09:22,960 --> 01:09:27,850
maybe some of the bars need to be

01:09:25,270 --> 01:09:31,299
updated and maybe some new bars will

01:09:27,850 --> 01:09:35,560
happen and it needs to be entered and

01:09:31,299 --> 01:09:40,600
and so how do we do that and that's what

01:09:35,560 --> 01:09:44,230
d3 Center update exit pattern takes care

01:09:40,600 --> 01:09:47,790
of so that enter update exit is so that

01:09:44,230 --> 01:09:51,609
we can go from one state to the next and

01:09:47,790 --> 01:09:52,359
update accordingly so the way that it

01:09:51,609 --> 01:10:10,540
works

01:09:52,359 --> 01:10:17,130
yes I said 26 okay I think I sing so I'm

01:10:10,540 --> 01:10:19,810
oh yeah this is a pretty good example so

01:10:17,130 --> 01:10:21,280
the reason why we have the enter update

01:10:19,810 --> 01:10:24,010
exit paradigm is this thing called

01:10:21,280 --> 01:10:25,930
object constancy because you might have

01:10:24,010 --> 01:10:29,530
in the data set like for example this

01:10:25,930 --> 01:10:31,630
one is I guess top states by H bracket

01:10:29,530 --> 01:10:35,320
and you know it says Florida and

01:10:31,630 --> 01:10:38,200
Pennsylvania West Virginia etc and when

01:10:35,320 --> 01:10:40,170
I change the data the underlying data

01:10:38,200 --> 01:10:42,580
so this one is 65 years and older

01:10:40,170 --> 01:10:44,920
actually this data set is always fun cuz

01:10:42,580 --> 01:10:47,110
like Florida is like far above the

01:10:44,920 --> 01:10:48,970
others in terms of like 65 years old or

01:10:47,110 --> 01:10:52,270
older because like Florida has a lot of

01:10:48,970 --> 01:10:56,530
we retire people and let's see like you

01:10:52,270 --> 01:10:59,530
know maybe let's see what under five

01:10:56,530 --> 01:11:01,930
years like which states have the most

01:10:59,530 --> 01:11:02,790
haulers actually yeah I don't know who

01:11:01,930 --> 01:11:11,620
that would be

01:11:02,790 --> 01:11:20,050
apparently it's Utah Wow are you are you

01:11:11,620 --> 01:11:21,520
from there okay that makes sense but did

01:11:20,050 --> 01:11:23,350
you guys see also see what happened I

01:11:21,520 --> 01:11:25,720
guess it's a little bit hard to like

01:11:23,350 --> 01:11:27,670
okay let me switch back see 61 do you

01:11:25,720 --> 01:11:29,290
see how like you know they there was an

01:11:27,670 --> 01:11:33,100
animation there was a transition like it

01:11:29,290 --> 01:11:35,110
you know it went from like because

01:11:33,100 --> 01:11:37,600
Florida is no longer you know in the top

01:11:35,110 --> 01:11:39,940
10 so it like got pushed down and then

01:11:37,600 --> 01:11:43,900
there's a bunch of new ones that that

01:11:39,940 --> 01:11:46,600
appeared and there's that so that you

01:11:43,900 --> 01:11:49,060
can see some of them move down some of

01:11:46,600 --> 01:11:52,390
them move up um let's try this

01:11:49,060 --> 01:11:55,780
I do see that some of them remain on the

01:11:52,390 --> 01:11:57,640
screen some of them do you see how some

01:11:55,780 --> 01:12:04,380
of them are remaining some of them might

01:11:57,640 --> 01:12:04,380
get updated and some of them get removed

01:12:06,150 --> 01:12:12,610
cool yeah and so this is the concept of

01:12:10,270 --> 01:12:16,530
object constancy that like for example

01:12:12,610 --> 01:12:21,699
if you have Florida and Florida you know

01:12:16,530 --> 01:12:24,010
drops like say all the way out of the

01:12:21,699 --> 01:12:26,920
age bracket like all the way out of this

01:12:24,010 --> 01:12:28,780
visualization and then you want to be

01:12:26,920 --> 01:12:30,190
able to show that between one state and

01:12:28,780 --> 01:12:33,040
the next like you don't want just like

01:12:30,190 --> 01:12:34,449
you know like this is Florida and then

01:12:33,040 --> 01:12:35,770
suddenly it's Arkansas but like you

01:12:34,449 --> 01:12:37,900
don't you don't get that like

01:12:35,770 --> 01:12:49,860
consistency between the first state and

01:12:37,900 --> 01:12:55,870
the next and I think and I shoot that

01:12:49,860 --> 01:12:59,199
okay so to do that I'm the secret of

01:12:55,870 --> 01:13:03,040
being able to map being able to kind of

01:12:59,199 --> 01:13:05,770
maintain that across different data

01:13:03,040 --> 01:13:10,330
states from one data set to the next is

01:13:05,770 --> 01:13:12,730
this key function so up until now for

01:13:10,330 --> 01:13:14,889
the dot data function we pass in a data

01:13:12,730 --> 01:13:17,920
array right and I was it all we did was

01:13:14,889 --> 01:13:20,320
pass in a data array now what we can do

01:13:17,920 --> 01:13:23,800
is pass in this thing called a key

01:13:20,320 --> 01:13:26,469
function and when a key function does is

01:13:23,800 --> 01:13:30,100
controls which data which datum is

01:13:26,469 --> 01:13:32,110
assigned to which element and so for the

01:13:30,100 --> 01:13:37,300
key function we always always want to

01:13:32,110 --> 01:13:42,880
return whatever is the ID of that data

01:13:37,300 --> 01:13:46,900
datum and so that it can get assigned to

01:13:42,880 --> 01:13:49,900
route the right Dom element so let's

01:13:46,900 --> 01:13:53,679
take this for example let's say for

01:13:49,900 --> 01:13:55,270
example that this is what's currently on

01:13:53,679 --> 01:13:57,790
their screen so let's say for example

01:13:55,270 --> 01:14:00,610
that we've already created our first set

01:13:57,790 --> 01:14:01,719
of rectangles and this is actually

01:14:00,610 --> 01:14:03,310
what's currently on the screen and

01:14:01,719 --> 01:14:05,469
here's all of the data that's already

01:14:03,310 --> 01:14:09,280
been found right this is actually our

01:14:05,469 --> 01:14:12,219
previous data set now 101 250 175 200

01:14:09,280 --> 01:14:14,230
and let's pretend for now that this is

01:14:12,219 --> 01:14:16,960
also our data this data that's been

01:14:14,230 --> 01:14:18,969
found is also our key

01:14:16,960 --> 01:14:21,489
and then now let's look at the next data

01:14:18,969 --> 01:14:23,020
set this to 31:20 the first thing you

01:14:21,489 --> 01:14:25,030
can notice is that there's now six

01:14:23,020 --> 01:14:29,680
elements instead of the fight

01:14:25,030 --> 01:14:32,560
so what da Deena does is the first thing

01:14:29,680 --> 01:14:35,560
it calculates is it calculates the

01:14:32,560 --> 01:14:39,270
update selection and it says oh hey in

01:14:35,560 --> 01:14:44,320
the new data set there's 120 and 250 and

01:14:39,270 --> 01:14:46,510
that's also in the current selection of

01:14:44,320 --> 01:14:49,540
rectangles so that must mean that these

01:14:46,510 --> 01:14:52,750
two rectangles match the data so they'll

01:14:49,540 --> 01:14:59,140
remain on the screen this is our update

01:14:52,750 --> 01:15:01,090
selection remember that term update

01:14:59,140 --> 01:15:03,219
selection update selection is the

01:15:01,090 --> 01:15:04,810
selected and selection of rectangles or

01:15:03,219 --> 01:15:09,969
a selection of elements that will remain

01:15:04,810 --> 01:15:13,750
on the screen and then d3 will say okay

01:15:09,969 --> 01:15:16,980
now let's figure out what's extra in the

01:15:13,750 --> 01:15:19,870
data the new data set that's not in the

01:15:16,980 --> 01:15:24,130
rectangle elements on their screen and

01:15:19,870 --> 01:15:26,170
it says oh it's these ones to 3301 4575

01:15:24,130 --> 01:15:27,850
none of that is over here in the

01:15:26,170 --> 01:15:30,700
rectangle elements and so I would say

01:15:27,850 --> 01:15:33,700
okay I need to be able to create four

01:15:30,700 --> 01:15:38,469
rectangles to match the data and that's

01:15:33,700 --> 01:15:42,580
the enter selection and finally that

01:15:38,469 --> 01:15:45,520
data will say what are the rectangle

01:15:42,580 --> 01:15:48,940
elements that are that do not exist in

01:15:45,520 --> 01:15:51,940
the data and that's the 100 the 175 and

01:15:48,940 --> 01:15:55,210
the 200 and so d3 will say okay this is

01:15:51,940 --> 01:15:57,219
the exit selection and these are the

01:15:55,210 --> 01:15:58,780
rectangles that we need to get rid of

01:15:57,219 --> 01:16:01,390
these are the three rectangles that we

01:15:58,780 --> 01:16:05,590
need to get rid of so that we can match

01:16:01,390 --> 01:16:09,040
the new data set oh yeah so enter update

01:16:05,590 --> 01:16:11,440
exit selection now that we have that oh

01:16:09,040 --> 01:16:14,350
this is where I show you what console

01:16:11,440 --> 01:16:17,440
logging it looks like so what this whole

01:16:14,350 --> 01:16:19,480
thing returns is this so this is your

01:16:17,440 --> 01:16:22,840
enter selection the enter placeholders

01:16:19,480 --> 01:16:24,910
here is the exit selection the three

01:16:22,840 --> 01:16:27,969
rectangle laments that were supposed to

01:16:24,910 --> 01:16:30,610
remove and then here is the

01:16:27,969 --> 01:16:32,860
- this is the update selection the -

01:16:30,610 --> 01:16:36,520
rectangle elements that can remain on

01:16:32,860 --> 01:16:39,219
the screen so if you if you console.log

01:16:36,520 --> 01:16:41,320
right here oh sorry this bar is right

01:16:39,219 --> 01:16:43,750
here that's what it looks like

01:16:41,320 --> 01:16:46,210
underneath the hood the enter selection

01:16:43,750 --> 01:16:49,360
the enter placeholders exit selection

01:16:46,210 --> 01:16:52,510
and update selection and then we want to

01:16:49,360 --> 01:16:56,560
save that into a variable in this case I

01:16:52,510 --> 01:17:01,330
call it bars so that right here I can

01:16:56,560 --> 01:17:06,280
say bars dot exit and that gets me in

01:17:01,330 --> 01:17:08,230
that exit selection and then take that

01:17:06,280 --> 01:17:11,280
exit selection and remove them from the

01:17:08,230 --> 01:17:13,390
screen that gets rid of all of the

01:17:11,280 --> 01:17:17,280
rectangle elements that aren't in the

01:17:13,390 --> 01:17:21,969
new data that removes them from the Dom

01:17:17,280 --> 01:17:22,600
next this should look this part should

01:17:21,969 --> 01:17:25,330
look familiar

01:17:22,600 --> 01:17:27,219
right this bars that enter the append

01:17:25,330 --> 01:17:37,330
right that's exactly the same as before

01:17:27,219 --> 01:17:39,880
and then that basically will say I get

01:17:37,330 --> 01:17:43,989
the enter selection for each of those

01:17:39,880 --> 01:17:46,030
four rectangle elements append or sorry

01:17:43,989 --> 01:17:48,790
for each of those four placeholders

01:17:46,030 --> 01:17:51,520
append a rectangle and then we want to

01:17:48,790 --> 01:17:53,800
set the attributes with and Stroke and

01:17:51,520 --> 01:17:55,449
for the enter selection I like to chain

01:17:53,800 --> 01:17:57,969
the attribute attributes that don't

01:17:55,449 --> 01:18:00,550
depend on data so like if you can see in

01:17:57,969 --> 01:18:02,969
here it's just a rectangle with and the

01:18:00,550 --> 01:18:07,330
stroke because neither of these are

01:18:02,969 --> 01:18:10,030
dependent on like it will not change no

01:18:07,330 --> 01:18:14,260
matter what the new data set is and

01:18:10,030 --> 01:18:17,770
finally here um we basically say give me

01:18:14,260 --> 01:18:20,620
give me the enter selection as well as

01:18:17,770 --> 01:18:24,850
the update selection so the bars one is

01:18:20,620 --> 01:18:26,560
the update selection so combines the two

01:18:24,850 --> 01:18:28,630
selections the enter and update

01:18:26,560 --> 01:18:31,870
selections into one and that's

01:18:28,630 --> 01:18:36,190
essentially basically what is what

01:18:31,870 --> 01:18:39,190
should be on the screen for the new data

01:18:36,190 --> 01:18:42,610
set and then

01:18:39,190 --> 01:18:46,270
and then calculate the XY height and

01:18:42,610 --> 01:18:49,510
fill for the enter and update selection

01:18:46,270 --> 01:18:51,909
basically update the attributes that are

01:18:49,510 --> 01:18:55,510
based on the data for the enter and

01:18:51,909 --> 01:19:00,550
update selection and that's it so

01:18:55,510 --> 01:19:04,750
actually with these few lines of code

01:19:00,550 --> 01:19:06,219
you can actually um actually with these

01:19:04,750 --> 01:19:09,250
few lines of a code you can actually

01:19:06,219 --> 01:19:10,739
have that same effect that we looked at

01:19:09,250 --> 01:19:14,139
earlier with the

01:19:10,739 --> 01:19:17,310
age population oh yeah the only thing

01:19:14,139 --> 01:19:19,780
that we're missing with this one is um

01:19:17,310 --> 01:19:21,460
we just how don't have the line for

01:19:19,780 --> 01:19:24,100
animation and that land line for

01:19:21,460 --> 01:19:27,610
animation is just like one line um but

01:19:24,100 --> 01:19:30,040
this will take care of drawing all the

01:19:27,610 --> 01:19:32,739
rectangles and updating them on any data

01:19:30,040 --> 01:19:34,929
change isn't that really cool that it's

01:19:32,739 --> 01:19:37,239
like only like what that's like 15 lines

01:19:34,929 --> 01:19:38,800
or something and then takes care of like

01:19:37,239 --> 01:19:42,310
basically all of the animations and

01:19:38,800 --> 01:19:43,679
transitions that you saw earlier yeah

01:19:42,310 --> 01:19:48,900
that's all you need

01:19:43,679 --> 01:19:55,980
that's t3 that's the core of t3 cool um

01:19:48,900 --> 01:19:58,270
so it is 340 woo okay so is 340 so um

01:19:55,980 --> 01:20:00,010
this is the thing that I want to do next

01:19:58,270 --> 01:20:03,250
I'm kind of pretty excited for this one

01:20:00,010 --> 01:20:06,730
so I'm go back to go back to the

01:20:03,250 --> 01:20:09,760
workshop slides and what we're going to

01:20:06,730 --> 01:20:15,429
do is turn the petals that you created

01:20:09,760 --> 01:20:22,060
earlier into a flower are you excited

01:20:15,429 --> 01:20:26,520
I'm pretty excited um so um here's what

01:20:22,060 --> 01:20:26,520
we're going to do um I'm

01:20:28,950 --> 01:20:46,460
I click on that starter coat and this is

01:20:43,410 --> 01:20:50,090
the same movie data that I use in my

01:20:46,460 --> 01:20:56,190
visualization and I've already kind of

01:20:50,090 --> 01:21:00,239
like I've what's the word I cleaned it a

01:20:56,190 --> 01:21:02,940
little bit for you um so use this movie

01:21:00,239 --> 01:21:06,180
data and you can say you can see there's

01:21:02,940 --> 01:21:09,900
like data for the rating the IMDB rating

01:21:06,180 --> 01:21:13,230
and the number of votes the title the

01:21:09,900 --> 01:21:14,760
parental guidence rating etc um so

01:21:13,230 --> 01:21:18,960
here's the three things that you want to

01:21:14,760 --> 01:21:21,810
do and these here's the mapping so the

01:21:18,960 --> 01:21:25,260
type of petal is your parental guidance

01:21:21,810 --> 01:21:28,590
reading the size of the flower is IMDB

01:21:25,260 --> 01:21:31,950
rating out of 10 and the number of

01:21:28,590 --> 01:21:33,960
petals is the number of IMDB ratings so

01:21:31,950 --> 01:21:37,350
I've created the scales for you in this

01:21:33,960 --> 01:21:40,080
starter code right here so what you have

01:21:37,350 --> 01:21:42,720
to do is figure out your domains for the

01:21:40,080 --> 01:21:46,560
size and the number of petals and then

01:21:42,720 --> 01:21:48,960
here's basically the path lookup so like

01:21:46,560 --> 01:21:51,540
I just say the these are the parental

01:21:48,960 --> 01:21:54,510
guidence ratings and you just need to

01:21:51,540 --> 01:21:59,700
add in three more petal paths to right

01:21:54,510 --> 01:22:02,370
here does that make sense and then add

01:21:59,700 --> 01:22:06,720
three in there and then right down here

01:22:02,370 --> 01:22:08,989
um I've given you instructions I've also

01:22:06,720 --> 01:22:17,880
given you instructions right here and

01:22:08,989 --> 01:22:21,630
let's do this for about let's try until

01:22:17,880 --> 01:22:26,190
four I'm tentatively and then we can go

01:22:21,630 --> 01:22:29,810
through the solutions together um and do

01:22:26,190 --> 01:22:29,810
this with your table partners

01:22:51,329 --> 01:23:00,449
oh and I four and I forgot to mention

01:22:57,150 --> 01:23:03,360
for this one um you don't eat the update

01:23:00,449 --> 01:23:04,290
exit all you need is the scales data

01:23:03,360 --> 01:23:07,889
enter a pen

01:23:04,290 --> 01:23:28,650
um so for this one all you need to do is

01:23:07,889 --> 01:23:31,219
take the data and create the petals you

01:23:28,650 --> 01:23:31,219
are amazing

01:23:57,000 --> 01:24:04,920
oh and I will not be offended at all if

01:24:02,070 --> 01:24:09,540
you want to click on the complete code

01:24:04,920 --> 01:24:12,360
and then take a look at this like so

01:24:09,540 --> 01:24:14,070
this is the complete code um but if

01:24:12,360 --> 01:24:16,740
you're going to look at the complete

01:24:14,070 --> 01:24:18,990
code I would urge you to not copy and

01:24:16,740 --> 01:24:20,160
paste things over for like rather like

01:24:18,990 --> 01:24:23,850
type it out yourself

01:24:20,160 --> 01:24:25,710
like oh okay um I'm just like have a

01:24:23,850 --> 01:24:27,540
side-by-side type it out yourself and

01:24:25,710 --> 01:24:29,730
try and figure out what each line is

01:24:27,540 --> 01:24:33,030
doing and like try and solve that with

01:24:29,730 --> 01:24:35,760
your table partners um and then the hint

01:24:33,030 --> 01:24:38,270
I give you is that you need to use SVG

01:24:35,760 --> 01:24:41,850
transforms translate rotate and scale

01:24:38,270 --> 01:24:44,430
functions to do to be able to get all

01:24:41,850 --> 01:24:52,110
the petals but you should end up with

01:24:44,430 --> 01:24:57,690
something like that Bunyan yep awesome

01:24:52,110 --> 01:24:58,410
good luck well there we go yeah how did

01:24:57,690 --> 01:25:00,600
that go

01:24:58,410 --> 01:25:08,370
they just go from my zero to sixty

01:25:00,600 --> 01:25:15,620
really fast on you know okay so how many

01:25:08,370 --> 01:25:23,540
people were able to get a flower awesome

01:25:15,620 --> 01:25:23,540
Nadi you don't count um but thank you so

01:25:23,570 --> 01:25:31,370
shall we go through it together

01:25:27,710 --> 01:25:31,370
awesome okay

01:25:33,020 --> 01:25:43,220
so everybody's gonna help me okay let's

01:25:41,100 --> 01:25:46,290
get started

01:25:43,220 --> 01:25:50,220
so first let's set the domain for scales

01:25:46,290 --> 01:25:53,880
and we agreed that there were two scales

01:25:50,220 --> 01:25:57,240
so the size scale is with the rating

01:25:53,880 --> 01:26:05,880
right and then the number of petals

01:25:57,240 --> 01:26:08,250
scale is with number of votes so let's

01:26:05,880 --> 01:26:16,140
use c3 that extent like we talked about

01:26:08,250 --> 01:26:19,770
earlier so let's call that const size

01:26:16,140 --> 01:26:23,670
extent it's equal to t3 extent and we

01:26:19,770 --> 01:26:30,870
pass in the movies data and then we use

01:26:23,670 --> 01:26:37,230
d dot rating you can console.log of that

01:26:30,870 --> 01:26:40,440
size extent and then cost let's do the

01:26:37,230 --> 01:26:46,160
same thing for numb petal so let's say

01:26:40,440 --> 01:26:48,750
numb pedalos extent is equal to t3 dot

01:26:46,160 --> 01:26:50,460
can you guys see it in the back or do

01:26:48,750 --> 01:26:56,340
you should we turn off the lights with

01:26:50,460 --> 01:26:57,720
that hope in the back were yeah now we

01:26:56,340 --> 01:26:58,110
need to figure out how to turn off the

01:26:57,720 --> 01:27:03,120
lights

01:26:58,110 --> 01:27:06,920
oh you can see it okay okay i'm t3d

01:27:03,120 --> 01:27:13,830
extant movies and then this time we use

01:27:06,920 --> 01:27:19,350
devotees lets console.log that to known

01:27:13,830 --> 01:27:22,280
petals extent inspect element here hold

01:27:19,350 --> 01:27:22,280
on i'll move it out of way

01:27:33,090 --> 01:27:40,030
awesome so the minimum that we have is

01:27:36,730 --> 01:27:41,530
five point six for rating out of 10 and

01:27:40,030 --> 01:27:44,530
the maximum is that Wow

01:27:41,530 --> 01:27:49,510
I know which movie is out of 10 out of

01:27:44,530 --> 01:27:59,770
10 and then the number of votes minimum

01:27:49,510 --> 01:28:02,080
is 16,000 maximum is 1.6 million okay so

01:27:59,770 --> 01:28:04,690
far so good yeah so we figure out the

01:28:02,080 --> 01:28:08,820
min and Max domain for both of the

01:28:04,690 --> 01:28:08,820
skills and now we have to set the skills

01:28:09,180 --> 01:28:23,470
sure sorry set domain on skills and that

01:28:14,230 --> 01:28:25,930
would be the size scale so the size

01:28:23,470 --> 01:28:28,420
skill that we've defined up above right

01:28:25,930 --> 01:28:31,690
here so you can see the size scale is a

01:28:28,420 --> 01:28:34,390
scale linear with a range of 0.1 to 1

01:28:31,690 --> 01:28:36,310
and then the numpad or scale is scale

01:28:34,390 --> 01:28:38,500
quantized and I don't know if anybody

01:28:36,310 --> 01:28:40,210
looked it up but scale quantized is this

01:28:38,500 --> 01:28:44,230
super useful thing that takes a

01:28:40,210 --> 01:28:46,840
continuous and and continuous domain and

01:28:44,230 --> 01:28:48,730
maps it to a discrete range so what that

01:28:46,840 --> 01:28:51,370
means is if you think about it number of

01:28:48,730 --> 01:28:54,520
votes I'm just now you saw the number of

01:28:51,370 --> 01:28:59,200
votes is like 16,000 oh here you guys

01:28:54,520 --> 01:29:00,820
can from 16,000 to sit 1.6 million right

01:28:59,200 --> 01:29:03,520
so that's like a continuous number

01:29:00,820 --> 01:29:05,410
that's our domain but number of petals

01:29:03,520 --> 01:29:07,420
we want that to be discrete we want that

01:29:05,410 --> 01:29:11,350
to be 5 petals 6 petals seventh petal

01:29:07,420 --> 01:29:15,880
eight petal nine petal etc so scale

01:29:11,350 --> 01:29:22,390
quantized will help us will help us map

01:29:15,880 --> 01:29:25,360
that continuous 16,000 and to a discrete

01:29:22,390 --> 01:29:28,750
number of petals and that's what scale

01:29:25,360 --> 01:29:34,300
quantized is doing so we said size skill

01:29:28,750 --> 01:29:41,370
that domain is size extent and then num

01:29:34,300 --> 01:29:41,370
it'll scale domain is num petals extent

01:29:48,329 --> 01:29:53,090
yeah now that we have the domain figure

01:29:52,050 --> 01:29:56,790
it out

01:29:53,090 --> 01:30:01,199
let's just make the petal data for just

01:29:56,790 --> 01:30:04,250
the first movie and so first of all

01:30:01,199 --> 01:30:09,570
let's figure out the number of petals

01:30:04,250 --> 01:30:13,500
for that first movie and so we're using

01:30:09,570 --> 01:30:15,150
numb paddle scale and thank you so much

01:30:13,500 --> 01:30:19,699
thank you so much for pointing it out

01:30:15,150 --> 01:30:22,320
because uh there was actually a bug in

01:30:19,699 --> 01:30:24,690
this version in the complete version

01:30:22,320 --> 01:30:27,389
where I forgot to use that vote so let

01:30:24,690 --> 01:30:30,750
me so number the number of non petal

01:30:27,389 --> 01:30:33,630
scale and then we just pass ending the

01:30:30,750 --> 01:30:35,250
the number that so we just pass in the

01:30:33,630 --> 01:30:35,790
number of votes for the first movie

01:30:35,250 --> 01:30:38,429
right

01:30:35,790 --> 01:30:40,949
so that would look like movie first

01:30:38,429 --> 01:30:48,659
movie dot votes so number of votes for

01:30:40,949 --> 01:30:50,579
the first movie a movies movies okay

01:30:48,659 --> 01:30:56,210
let's call so log that and see how much

01:30:50,579 --> 01:31:04,139
that is so movies zero dot that's

01:30:56,210 --> 01:31:07,199
namitha petals and cool so it's three

01:31:04,139 --> 01:31:11,599
hundred fifty four thousand and we're

01:31:07,199 --> 01:31:11,599
going to make six petals here

01:31:12,190 --> 01:31:14,850
wait

01:31:25,170 --> 01:31:28,530
so far so good

01:31:33,770 --> 01:31:43,320
okay now that we've figured out the

01:31:38,040 --> 01:31:45,570
number of petals for our first movie we

01:31:43,320 --> 01:31:49,889
now need to create our data array right

01:31:45,570 --> 01:31:53,100
so we want so basically we want to

01:31:49,889 --> 01:31:55,050
create five petals so that's five paths

01:31:53,100 --> 01:31:57,230
and path elements right we're sorry we

01:31:55,050 --> 01:32:02,940
want to make six petals so that's six

01:31:57,230 --> 01:32:05,010
data elements in our array right and so

01:32:02,940 --> 01:32:06,840
you can do this a number of ways but the

01:32:05,010 --> 01:32:09,810
lot of way that I like to do is I like

01:32:06,840 --> 01:32:13,550
to use lodash pass in the metals which

01:32:09,810 --> 01:32:22,170
is six and that just gives me the index

01:32:13,550 --> 01:32:25,500
I'm so and this low dash dot x all it

01:32:22,170 --> 01:32:28,530
does is you pass in a integer and it

01:32:25,500 --> 01:32:31,290
just does of four loops that number of

01:32:28,530 --> 01:32:33,980
times and I think you can also just do

01:32:31,290 --> 01:32:36,659
for loops you know that number of times

01:32:33,980 --> 01:32:38,520
whatever that you're happy with I like

01:32:36,659 --> 01:32:43,980
using underscore or low - times

01:32:38,520 --> 01:32:46,610
underscore times numbers and then for

01:32:43,980 --> 01:32:46,610
each of the petals

01:32:47,769 --> 01:32:58,159
we want to do we want three things right

01:32:51,530 --> 01:33:00,530
so for each of the petals I'm actually

01:32:58,159 --> 01:33:02,630
I'm paying me I'll just comment it for

01:33:00,530 --> 01:33:04,760
each of the petals to draw them the

01:33:02,630 --> 01:33:08,150
first thing we need to know is the

01:33:04,760 --> 01:33:10,280
rotation of the petal and the second

01:33:08,150 --> 01:33:13,070
thing is we need to know the type of

01:33:10,280 --> 01:33:15,249
pedal or the petal at the path of the

01:33:13,070 --> 01:33:18,110
petal right so the the three different

01:33:15,249 --> 01:33:19,610
petals that you guys made earlier we

01:33:18,110 --> 01:33:22,249
need to know which one we're using and

01:33:19,610 --> 01:33:26,090
so that's parental guidance ratings and

01:33:22,249 --> 01:33:28,639
finally um we want to use we want to

01:33:26,090 --> 01:33:31,729
know the size of the petals the size of

01:33:28,639 --> 01:33:37,119
the flowers so that is size of petals

01:33:31,729 --> 01:33:40,459
and that's we're using the IMDB ratings

01:33:37,119 --> 01:33:45,639
okay which means that what we want to do

01:33:40,459 --> 01:33:50,989
is first of all the rotation is um

01:33:45,639 --> 01:33:54,559
basically you want to rotate it so SVG's

01:33:50,989 --> 01:33:59,059
rotate takes degrees so anywhere between

01:33:54,559 --> 01:34:09,789
0 to 360 degrees so our rotation should

01:33:59,059 --> 01:34:09,789
be our index out of our number of petals

01:34:10,030 --> 01:34:15,619
right because that that will give you

01:34:12,229 --> 01:34:18,860
like it's the first petal so that's 0 or

01:34:15,619 --> 01:34:19,880
and then like and then 1 out of 6 and

01:34:18,860 --> 01:34:25,010
then 2 out of 6

01:34:19,880 --> 01:34:29,800
2/6 etc i'm x 360 which is our number of

01:34:25,010 --> 01:34:29,800
degrees so that's our rotation

01:34:30,580 --> 01:34:41,120
so rotate and then path of petal is we

01:34:34,940 --> 01:34:43,400
can just say I called it path look up so

01:34:41,120 --> 01:34:47,510
up here I have

01:34:43,400 --> 01:34:49,840
oh yeah path look up so path look up and

01:34:47,510 --> 01:34:49,840
then

01:34:53,110 --> 01:35:05,720
movies zero and the parental guidance of

01:34:56,990 --> 01:35:08,450
that movie and finally the size of the

01:35:05,720 --> 01:35:13,730
petals so size and we're using size

01:35:08,450 --> 01:35:16,280
scale and for size is we said I am DB

01:35:13,730 --> 01:35:25,510
reading some movies the first movie dot

01:35:16,280 --> 01:35:32,260
rating cool oh and then I need to uh I

01:35:25,510 --> 01:35:32,260
need to actually return that to

01:35:33,280 --> 01:35:36,940
console.log petal data

01:35:42,800 --> 01:35:51,080
oh look at that path is undefined

01:35:46,540 --> 01:35:53,360
did something wrong but uh

01:35:51,080 --> 01:35:57,590
oh yeah look so the rotation is right

01:35:53,360 --> 01:35:59,570
0-60 120 and 180 240 300 and the size

01:35:57,590 --> 01:36:04,370
should be the same because it's it's the

01:35:59,570 --> 01:36:07,520
same movie so let's figure out what went

01:36:04,370 --> 01:36:09,380
wrong with the path so path we said path

01:36:07,520 --> 01:36:15,200
look up maybe I said paths look up no

01:36:09,380 --> 01:36:20,450
path look up movie 0 PG why would that

01:36:15,200 --> 01:36:34,850
be wrong path look up I don't have

01:36:20,450 --> 01:36:37,420
enough pedals ha thank you so much so

01:36:34,850 --> 01:36:37,420
let's see

01:36:38,880 --> 01:36:43,950
yep into

01:36:47,910 --> 01:36:53,710
No

01:36:49,330 --> 01:36:56,260
yay so I have the pass and I have the

01:36:53,710 --> 01:36:58,300
rotation and I have the size so I have

01:36:56,260 --> 01:37:03,580
all of the data I need to make my path

01:36:58,300 --> 01:37:07,750
or make my pedals so far does this all

01:37:03,580 --> 01:37:10,200
sound good okay I'll take your silence

01:37:07,750 --> 01:37:10,200
as a yes

01:37:11,370 --> 01:37:21,040
and so now that we have the data and

01:37:17,830 --> 01:37:25,240
then delete all my console logs all we

01:37:21,040 --> 01:37:32,050
have to do is do the data data entered

01:37:25,240 --> 01:37:38,590
the append from earlier so SVG dot

01:37:32,050 --> 01:37:43,750
select all paths that data put in the

01:37:38,590 --> 01:37:47,830
petal data dot enter dot append path so

01:37:43,750 --> 01:37:50,050
that's the that's that's that's what we

01:37:47,830 --> 01:37:55,050
talked about earlier data that entered

01:37:50,050 --> 01:37:55,050
the pen and now if you actually inspect

01:37:55,200 --> 01:38:03,990
if you inspect the Dom oh my god

01:38:05,650 --> 01:38:12,830
you can see there's six paths that were

01:38:08,660 --> 01:38:18,020
made just as we expected so let's do the

01:38:12,830 --> 01:38:21,740
first thing and that is um the first

01:38:18,020 --> 01:38:25,070
thing that we need for a path is the

01:38:21,740 --> 01:38:27,380
path string and that's we set that on

01:38:25,070 --> 01:38:30,800
the D attribute which I just realized I

01:38:27,380 --> 01:38:34,460
never said I forgot to mention that

01:38:30,800 --> 01:38:35,870
earlier so for to draw a path B all of

01:38:34,460 --> 01:38:37,880
the path strings that we were doing

01:38:35,870 --> 01:38:40,520
earlier with the the curves and then

01:38:37,880 --> 01:38:43,910
lines and the move twos that needs to be

01:38:40,520 --> 01:38:45,200
set on the D attribute of a path that

01:38:43,910 --> 01:38:48,170
will probably have been important for me

01:38:45,200 --> 01:38:51,020
to a mention so sorry about that and so

01:38:48,170 --> 01:38:55,610
for the TA attribute what we want to do

01:38:51,020 --> 01:38:59,960
is use the path that's been belt so D

01:38:55,610 --> 01:39:05,590
that pal I look yeah we already have a

01:38:59,960 --> 01:39:05,590
little like thing that's been drawn here

01:39:07,090 --> 01:39:13,880
and then we want to actually before we

01:39:11,150 --> 01:39:17,830
do that there any when you look up SVG

01:39:13,880 --> 01:39:20,090
transforms so for the people that did

01:39:17,830 --> 01:39:22,630
does anybody want to talk about it

01:39:20,090 --> 01:39:22,630
briefly

01:39:33,929 --> 01:39:38,039
the SVG transform

01:39:46,100 --> 01:39:54,180
so it is basically you can apply these

01:39:50,760 --> 01:39:56,580
transforms to any of the SVG elements

01:39:54,180 --> 01:40:01,500
and the ones that I use the most often

01:39:56,580 --> 01:40:02,820
is translate scale and rotate and they

01:40:01,500 --> 01:40:06,150
do exactly what they sound like

01:40:02,820 --> 01:40:11,300
so translate will move over that element

01:40:06,150 --> 01:40:14,840
by an X Y position scale would be a

01:40:11,300 --> 01:40:18,180
scale of one is a hundred percent and

01:40:14,840 --> 01:40:19,530
scale of 0.5 would be fifty percent a

01:40:18,180 --> 01:40:25,980
scale of two would be two hundred

01:40:19,530 --> 01:40:28,800
percent etc oh and then it'd be if you

01:40:25,980 --> 01:40:31,890
put in only one number then it will be

01:40:28,800 --> 01:40:34,620
scaled to both direct both the x and y

01:40:31,890 --> 01:40:37,590
direction but if you put in two numbers

01:40:34,620 --> 01:40:40,560
then it'll be scaled to the x direction

01:40:37,590 --> 01:40:42,630
and then the y direction and then you

01:40:40,560 --> 01:40:47,400
have a rotation and you put in the angle

01:40:42,630 --> 01:40:52,760
out of 360 so let's do that

01:40:47,400 --> 01:40:52,760
um let's first do the translate

01:40:58,050 --> 01:41:06,070
so if you notice right now this uh this

01:41:03,460 --> 01:41:07,780
pedal is right here because that's my

01:41:06,070 --> 01:41:11,469
zero zero there's absolutely no

01:41:07,780 --> 01:41:15,130
translation um and if you notice I

01:41:11,469 --> 01:41:21,940
actually start I think I Center all of

01:41:15,130 --> 01:41:23,920
my petals at zero zero so the first

01:41:21,940 --> 01:41:30,270
thing I want to do is move the pedals

01:41:23,920 --> 01:41:34,840
over and so I'm just gonna say translate

01:41:30,270 --> 01:41:39,179
100 100 oops 100 100 and that's just

01:41:34,840 --> 01:41:42,520
like a random I'm just picking up random

01:41:39,179 --> 01:41:46,750
magic numbers of 100 and 100 but I do

01:41:42,520 --> 01:41:48,250
want to say very briefly that when I'm

01:41:46,750 --> 01:41:51,730
translating something what's actually

01:41:48,250 --> 01:41:58,780
happening is um you can think of it this

01:41:51,730 --> 01:42:04,869
way so let's say we have an SVG and this

01:41:58,780 --> 01:42:06,880
is zero zero um the the way that I like

01:42:04,869 --> 01:42:09,610
to think about it is that when you set

01:42:06,880 --> 01:42:16,380
the x and y coordinate of an SVG element

01:42:09,610 --> 01:42:20,050
um whatever so basically everything um

01:42:16,380 --> 01:42:24,340
let's say I draw this rectangle and this

01:42:20,050 --> 01:42:27,130
is at 10 10 this 10 10 is relative to

01:42:24,340 --> 01:42:29,409
the parent SVG so it's kind of like you

01:42:27,130 --> 01:42:32,710
know how if you do like a div within a

01:42:29,409 --> 01:42:34,659
div and then you set the outside div to

01:42:32,710 --> 01:42:36,849
position:relative and you set the inside

01:42:34,659 --> 01:42:39,579
div to position:absolute that's kind of

01:42:36,849 --> 01:42:42,760
what's what happens with SVG naturally

01:42:39,579 --> 01:42:48,849
so like that's like so that's like if

01:42:42,760 --> 01:42:53,619
you did div is position:relative and

01:42:48,849 --> 01:42:58,780
this is div is position:absolute it's

01:42:53,619 --> 01:43:02,550
kind of like what's happening inside but

01:42:58,780 --> 01:43:07,809
here's an interesting thing so right now

01:43:02,550 --> 01:43:08,330
this one is X is equal to 10 y is equal

01:43:07,809 --> 01:43:12,950
to 10

01:43:08,330 --> 01:43:15,080
so like for this rectangle I'm saying X

01:43:12,950 --> 01:43:18,080
is equal to 10 and Y is equal to 10 and

01:43:15,080 --> 01:43:22,400
that's being position absolutely

01:43:18,080 --> 01:43:24,710
relative to the parent SVG but if I do

01:43:22,400 --> 01:43:28,940
want to translate then here's the

01:43:24,710 --> 01:43:37,250
interesting thing if I do this rectangle

01:43:28,940 --> 01:43:41,480
and I translate it ten to ten and I have

01:43:37,250 --> 01:43:47,090
ice is 10 and Y is 10 something really

01:43:41,480 --> 01:43:50,750
interesting happens which is that it

01:43:47,090 --> 01:43:54,260
actually gets let's say this is 20 and

01:43:50,750 --> 01:44:03,440
this is 20 it actually gets positioned

01:43:54,260 --> 01:44:04,600
here this ends up with this isn't that

01:44:03,440 --> 01:44:10,490
fascinating

01:44:04,600 --> 01:44:15,170
okay so anybody have a guess why this

01:44:10,490 --> 01:44:19,370
actually results in this so this is this

01:44:15,170 --> 01:44:27,530
is 2020 anybody have a guess why this is

01:44:19,370 --> 01:44:30,040
happening so the reason huh yeah exactly

01:44:27,530 --> 01:44:30,040
so

01:44:33,140 --> 01:44:38,340
hello ok so the reason why this is

01:44:36,540 --> 01:44:41,070
happening is that when we do our

01:44:38,340 --> 01:44:41,760
translations essentially we're saying

01:44:41,070 --> 01:44:45,680
okay

01:44:41,760 --> 01:44:49,380
like pretend that there's like this

01:44:45,680 --> 01:44:54,080
pretend that this element has this like

01:44:49,380 --> 01:44:59,730
invisible parent div and that parent div

01:44:54,080 --> 01:45:04,980
has moved down to ten ten so instead of

01:44:59,730 --> 01:45:09,800
four now now for this rectangle the new

01:45:04,980 --> 01:45:09,800
coordinate system is now here

01:45:09,830 --> 01:45:16,740
so this actually is the zero zero for

01:45:12,870 --> 01:45:22,860
this rectangle now and then this is the

01:45:16,740 --> 01:45:26,070
new ten ten for this rectangle with it

01:45:22,860 --> 01:45:29,610
fascinating I love the translation No

01:45:26,070 --> 01:45:32,010
okay I'm but I'm saying this only

01:45:29,610 --> 01:45:36,060
because this will also come in handy and

01:45:32,010 --> 01:45:41,780
when we're doing the next step we have

01:45:36,060 --> 01:45:41,780
one more exercise after this so yeah

01:45:43,280 --> 01:45:49,680
so essentially this is really helpful

01:45:46,740 --> 01:45:53,130
because as you can imagine all of our

01:45:49,680 --> 01:45:55,170
paths are relative to 0-0 like we've

01:45:53,130 --> 01:45:57,690
defined all of these paths as like you

01:45:55,170 --> 01:46:00,060
know like start at zero zero or at zero

01:45:57,690 --> 01:46:02,070
50 or 50 0 or whatever and then it's

01:46:00,060 --> 01:46:03,840
like curving to like 100 or something

01:46:02,070 --> 01:46:06,720
it's still it's still got its own

01:46:03,840 --> 01:46:09,240
coordinate system but when we use

01:46:06,720 --> 01:46:12,390
transform and translate we don't

01:46:09,240 --> 01:46:14,400
actually have to like you know make up

01:46:12,390 --> 01:46:18,660
new numbers or anything we just have to

01:46:14,400 --> 01:46:20,760
say translate 100 a hundred and then it

01:46:18,660 --> 01:46:27,030
will basically shift the coordinate

01:46:20,760 --> 01:46:29,430
system around so that yeah so that that

01:46:27,030 --> 01:46:32,040
happens I'm okay so I'm not that great

01:46:29,430 --> 01:46:43,020
at CSS I'm pretty sure this is how CSS

01:46:32,040 --> 01:46:49,010
transforms work - is it true okay like

01:46:43,020 --> 01:46:49,010
if you do CSS transforms in session mmm

01:46:50,210 --> 01:46:57,930
yeah so let's translate it 100 100 and

01:46:55,040 --> 01:47:03,360
then the next thing we want to do is we

01:46:57,930 --> 01:47:06,840
want to rotate so previously we've

01:47:03,360 --> 01:47:11,400
calculated our rotate so all we have to

01:47:06,840 --> 01:47:15,120
do is use that we say d dot rotate oh oh

01:47:11,400 --> 01:47:22,110
then I'm using our string literal so

01:47:15,120 --> 01:47:24,150
dollar sign open bracket whoo did it and

01:47:22,110 --> 01:47:25,650
you I mean did that happen for any of

01:47:24,150 --> 01:47:28,920
you wait you haven't been typing along

01:47:25,650 --> 01:47:31,080
or anything right okay sometimes

01:47:28,920 --> 01:47:32,880
sometimes people type along and then

01:47:31,080 --> 01:47:38,490
they're also like because that happens

01:47:32,880 --> 01:47:41,030
for them and so yeah so that happens cuz

01:47:38,490 --> 01:47:46,560
we will now rotate at all six petals and

01:47:41,030 --> 01:47:48,510
then finally we want to scale so scale

01:47:46,560 --> 01:47:52,050
and then we use what we've previously

01:47:48,510 --> 01:47:54,980
calculated so that's D size and it just

01:47:52,050 --> 01:47:54,980
gets scaled smaller

01:47:55,280 --> 01:48:03,150
and then because I don't want it to be

01:47:58,680 --> 01:48:12,560
filled I just say fill none and then

01:48:03,150 --> 01:48:12,560
stroke I'm gonna say black that's it

01:48:13,970 --> 01:48:17,150
how's that

01:48:18,579 --> 01:48:28,699
and your part that you want me to

01:48:21,739 --> 01:48:36,349
elaborate on do you have your own

01:48:28,699 --> 01:48:42,020
flowers were you able to get your own

01:48:36,349 --> 01:48:45,489
flowers mmm cool okay are you ready to

01:48:42,020 --> 01:48:49,550
move on because it is I believe 436 and

01:48:45,489 --> 01:48:52,730
so we have 24 minutes to make the rest

01:48:49,550 --> 01:48:56,710
of the flowers are you ready to make the

01:48:52,730 --> 01:49:10,789
rest of the flowers nope

01:48:56,710 --> 01:49:15,800
was that you though okay wait let me ask

01:49:10,789 --> 01:49:18,079
you this way so how we did we cover it

01:49:15,800 --> 01:49:20,329
enough such that if you go back and look

01:49:18,079 --> 01:49:22,579
at the code yourselves you'll be able to

01:49:20,329 --> 01:49:24,860
get it or do you want me to elaborate on

01:49:22,579 --> 01:49:26,630
any of the parts so that when you go

01:49:24,860 --> 01:49:28,340
home and look at it yourselves you can

01:49:26,630 --> 01:49:32,869
understand it because that's my goal

01:49:28,340 --> 01:49:34,670
right now out of the 3 steps that we

01:49:32,869 --> 01:49:37,070
talked about tell me about any of the

01:49:34,670 --> 01:49:41,110
parts where it didn't feel quite

01:49:37,070 --> 01:49:41,110
intuitive and you want me to cover again

01:49:46,239 --> 01:49:54,679
the person that said no back there what

01:49:49,579 --> 01:49:57,709
do you want me to elaborate on are you

01:49:54,679 --> 01:50:04,099
sure it's fine okay are you ready to

01:49:57,709 --> 01:50:11,929
move on oh oh there's okay yeah oh yeah

01:50:04,099 --> 01:50:13,189
yeah yeah huh oh yeah yes please go do

01:50:11,929 --> 01:50:14,899
that yeah

01:50:13,189 --> 01:50:16,249
because you guys have been here in here

01:50:14,899 --> 01:50:19,249
for the last three and a half hour

01:50:16,249 --> 01:50:24,499
no three hours or so yeah I went to a

01:50:19,249 --> 01:50:28,969
pee break though so I snuck out for that

01:50:24,499 --> 01:50:30,469
and yeah yeah please go and then in that

01:50:28,969 --> 01:50:35,169
case are you alright with it running

01:50:30,469 --> 01:50:39,409
over a little bit yeah yeah a tiny bit

01:50:35,169 --> 01:50:41,929
okay so five minutes relax go outside

01:50:39,409 --> 01:50:44,059
and then we're gonna make the rest of

01:50:41,929 --> 01:50:49,719
the flowers get back into it it is now

01:50:44,059 --> 01:50:49,719
for 53 so I'm gonna try and finish up

01:50:50,260 --> 01:50:57,439
thank you okay it is for 53 and we're

01:50:55,130 --> 01:51:03,969
going to try and finish up the last few

01:50:57,439 --> 01:51:03,969
part of the last part yeah thank you

01:51:08,709 --> 01:51:13,880
okay so we're gonna try and finish up

01:51:11,959 --> 01:51:16,340
the last part as quickly as we can and

01:51:13,880 --> 01:51:18,139
that is to finish we're going to draw

01:51:16,340 --> 01:51:20,449
the rest of the flowers and to do that

01:51:18,139 --> 01:51:22,269
we need to be able to ness elements so

01:51:20,449 --> 01:51:24,919
the nesting elements is basically like

01:51:22,269 --> 01:51:26,300
we want to do that in SPG we want to do

01:51:24,919 --> 01:51:28,130
that when we want to apply the same

01:51:26,300 --> 01:51:31,189
styles and transforms to a group of

01:51:28,130 --> 01:51:33,739
elements and so in the case of the

01:51:31,189 --> 01:51:35,840
flowers basically we have a group

01:51:33,739 --> 01:51:37,939
element in this case that consists of

01:51:35,840 --> 01:51:41,329
both the petals and leaves and I've

01:51:37,939 --> 01:51:44,630
applied the transform applied translate

01:51:41,329 --> 01:51:47,119
and scales on them and then within them

01:51:44,630 --> 01:51:50,419
I have the past that I make up the

01:51:47,119 --> 01:51:53,510
petals and it just has a rotation apply

01:51:50,419 --> 01:51:54,949
because the rotation is unique to the

01:51:53,510 --> 01:51:57,739
petals whereas the

01:51:54,949 --> 01:51:59,929
and the scale is applied to all the

01:51:57,739 --> 01:52:01,850
petals so we can do the translation

01:51:59,929 --> 01:52:04,910
scale on the group elements and we can

01:52:01,850 --> 01:52:08,830
do the rotation on the path elements so

01:52:04,910 --> 01:52:11,660
that's what we're gonna go for for it

01:52:08,830 --> 01:52:14,120
and do and hopefully we'll be able to

01:52:11,660 --> 01:52:21,199
finish before the 5:30 group picture and

01:52:14,120 --> 01:52:22,610
the food so let's start out with Camden

01:52:21,199 --> 01:52:25,760
and go through this as quickly as I can

01:52:22,610 --> 01:52:29,750
so this is the next piece of code and

01:52:25,760 --> 01:52:32,690
this is just shows you how to nest

01:52:29,750 --> 01:52:36,910
element so essentially this is here's

01:52:32,690 --> 01:52:41,360
the data set I'm and then we have a

01:52:36,910 --> 01:52:44,000
group of G elements and a set of circles

01:52:41,360 --> 01:52:47,690
on and within those group elements and

01:52:44,000 --> 01:52:50,540
when that looks like is on Oh so as you

01:52:47,690 --> 01:52:52,820
can see the data is there's a set of

01:52:50,540 --> 01:52:55,219
circles that have a red fill and a set

01:52:52,820 --> 01:52:56,390
of circles that have a blue show so

01:52:55,219 --> 01:53:02,570
let's see how that's working

01:52:56,390 --> 01:53:05,949
I'm an so at the very here and I'm using

01:53:02,570 --> 01:53:08,410
I'm saying SVG select all groups and

01:53:05,949 --> 01:53:12,650
most einie

01:53:08,410 --> 01:53:14,390
and then so I'm using the SVG group

01:53:12,650 --> 01:53:17,570
element and that's child elements

01:53:14,390 --> 01:53:19,730
because in SVG Oh Mike HTML so with HTML

01:53:17,570 --> 01:53:21,500
you know we'll be doing will like nest

01:53:19,730 --> 01:53:23,360
all these different elements right we

01:53:21,500 --> 01:53:26,719
can nest divs with in dibs we can nest

01:53:23,360 --> 01:53:30,380
like paragraphs we can nest like spans

01:53:26,719 --> 01:53:32,390
we can nest begin that's almost pretty

01:53:30,380 --> 01:53:34,280
much everything we want with HTML right

01:53:32,390 --> 01:53:37,210
and then you can like apply styles to

01:53:34,280 --> 01:53:41,480
them or like you can translate things or

01:53:37,210 --> 01:53:44,870
but within the SVG the only element that

01:53:41,480 --> 01:53:48,770
you are allowed to nest children is the

01:53:44,870 --> 01:53:51,080
group element so if you try to nest a

01:53:48,770 --> 01:53:54,030
rectangle within a rectangle a circle

01:53:51,080 --> 01:53:56,090
within a rectangle any of those

01:53:54,030 --> 01:53:58,740
thing will happen like it will not work

01:53:56,090 --> 01:54:00,660
only group elements can have things and

01:53:58,740 --> 01:54:03,660
group elements can have group elements

01:54:00,660 --> 01:54:05,520
and that stay within it and yeah so

01:54:03,660 --> 01:54:07,410
group and group elements circles

01:54:05,520 --> 01:54:09,450
rectangles and stuff you can that's all

01:54:07,410 --> 01:54:13,050
of that within a parent group component

01:54:09,450 --> 01:54:19,170
and so in this case what we're doing is

01:54:13,050 --> 01:54:22,080
um we're saying the same data enter

01:54:19,170 --> 01:54:25,770
append pattern as before and we're

01:54:22,080 --> 01:54:30,420
saying I'm you know here's my set of

01:54:25,770 --> 01:54:34,170
data and basically my data is that first

01:54:30,420 --> 01:54:37,500
like combined that first object to my

01:54:34,170 --> 01:54:39,810
first group and bind the second object

01:54:37,500 --> 01:54:41,670
to the second group so then what I'm

01:54:39,810 --> 01:54:44,400
doing is basically saying the first

01:54:41,670 --> 01:54:47,330
group of the first data set or sorry the

01:54:44,400 --> 01:54:50,730
first data object has a fill right and

01:54:47,330 --> 01:54:53,160
so once I found that I'm using it in the

01:54:50,730 --> 01:54:54,960
outer fill and then I'm returning d dot

01:54:53,160 --> 01:54:57,270
fill and that's why previously you saw

01:54:54,960 --> 01:55:01,170
all those circles have a red fill and

01:54:57,270 --> 01:55:04,470
then the second one is um has a fill or

01:55:01,170 --> 01:55:08,370
blue so then like back here you saw all

01:55:04,470 --> 01:55:13,050
of these circles how to fill a blue so

01:55:08,370 --> 01:55:19,410
that's what's happening yeah so this

01:55:13,050 --> 01:55:21,960
gets created to groups and then down

01:55:19,410 --> 01:55:24,510
here when we're doing the when we're

01:55:21,960 --> 01:55:27,120
creating a circle for what we want to

01:55:24,510 --> 01:55:29,370
create a bunch of circles for jeunesse

01:55:27,120 --> 01:55:33,560
within their group I'm essentially what

01:55:29,370 --> 01:55:36,330
I'm doing is for the circle as I say I'm

01:55:33,560 --> 01:55:38,160
select all the circles in those groups

01:55:36,330 --> 01:55:40,560
so they're groups that we just created

01:55:38,160 --> 01:55:44,370
I'm select the circle within those

01:55:40,560 --> 01:55:47,970
groups and then and for the data notice

01:55:44,370 --> 01:55:51,840
here notice that I'm instead of passing

01:55:47,970 --> 01:55:54,450
in a data into a data array like we did

01:55:51,840 --> 01:55:57,990
before we're actually passing in a

01:55:54,450 --> 01:55:59,730
function this is interesting and so I

01:55:57,990 --> 01:56:02,460
like here when we're doing a data array

01:55:59,730 --> 01:56:04,180
we're passing in a function what this is

01:56:02,460 --> 01:56:11,230
saying is basically

01:56:04,180 --> 01:56:14,680
with d3 if you create if you nest

01:56:11,230 --> 01:56:17,290
elements and those nested on the the

01:56:14,680 --> 01:56:20,530
children actually inherit the data of

01:56:17,290 --> 01:56:23,730
the pant so what that's what's happening

01:56:20,530 --> 01:56:25,840
here is it saying okay so here's the

01:56:23,730 --> 01:56:28,690
here's the data that's already been

01:56:25,840 --> 01:56:34,030
bound to the parents so this fill red

01:56:28,690 --> 01:56:36,970
and a circle array tell me what tell me

01:56:34,030 --> 01:56:40,210
the data array you want for the child

01:56:36,970 --> 01:56:42,940
circles and so here what I'm doing is

01:56:40,210 --> 01:56:45,550
I'm saying okay cool this data that's

01:56:42,940 --> 01:56:47,920
been bound to the parent and for these

01:56:45,550 --> 01:56:51,520
circles what I want is to use the array

01:56:47,920 --> 01:56:56,920
of circles right so here I'm saying on

01:56:51,520 --> 01:56:59,110
the circle array of two 2515 return that

01:56:56,920 --> 01:57:04,390
so the child data is essentially this

01:56:59,110 --> 01:57:08,590
like take that array of two 2550 and

01:57:04,390 --> 01:57:15,400
return that and that's the data array

01:57:08,590 --> 01:57:18,610
from my child circles and then we do the

01:57:15,400 --> 01:57:21,610
senate same enter a pen oh yeah so we do

01:57:18,610 --> 01:57:23,020
the data enter a pen and so here's

01:57:21,610 --> 01:57:24,970
what's happening right so we're

01:57:23,020 --> 01:57:28,330
basically saying here's the parent group

01:57:24,970 --> 01:57:32,290
with the with the data and then we're

01:57:28,330 --> 01:57:36,220
going to just grab the array the child

01:57:32,290 --> 01:57:38,710
array and that's the new set of data and

01:57:36,220 --> 01:57:42,190
that data gets mapped to the circles

01:57:38,710 --> 01:57:44,380
that we want to enter so it's basically

01:57:42,190 --> 01:57:47,140
like what we talked about before with a

01:57:44,380 --> 01:57:51,970
data enter a pen except now instead of

01:57:47,140 --> 01:57:55,450
you know like I'm having well okay yeah

01:57:51,970 --> 01:57:57,490
so it's basically like before when we

01:57:55,450 --> 01:58:00,220
had data enter a pen except now we're

01:57:57,490 --> 01:58:02,710
inheriting some data that we can do

01:58:00,220 --> 01:58:04,240
something with as long as we return an

01:58:02,710 --> 01:58:09,280
array again because remember thought

01:58:04,240 --> 01:58:10,760
data always always expects an array so

01:58:09,280 --> 01:58:18,480
that's what's happening here

01:58:10,760 --> 01:58:22,080
I'm and so all of this results in a

01:58:18,480 --> 01:58:25,710
group container with a data that says

01:58:22,080 --> 01:58:29,580
fill and circle and within there and we

01:58:25,710 --> 01:58:36,210
have the circles that have those data

01:58:29,580 --> 01:58:37,320
that data that data bound to it I let

01:58:36,210 --> 01:58:42,600
the words out really fast

01:58:37,320 --> 01:58:46,590
um do you want me to repeat should I

01:58:42,600 --> 01:58:53,820
repeat that okay let me try repeating

01:58:46,590 --> 01:58:57,200
that again really quickly okay let me

01:58:53,820 --> 01:58:57,200
see if I can draw that really quick

01:59:03,520 --> 01:59:11,480
so I have two objects the first one has

01:59:07,580 --> 01:59:14,750
filled is bright and then let's call

01:59:11,480 --> 01:59:28,480
this just child and that child has an

01:59:14,750 --> 01:59:28,480
array to 2550 fill blue child

01:59:30,020 --> 01:59:44,470
10 100 150 so when they bind this data

01:59:39,740 --> 01:59:44,470
or when I use this data set it creates

01:59:45,310 --> 02:00:01,090
two group elements right and then this

01:59:49,820 --> 02:00:03,890
is this red one gets bound to this and

02:00:01,090 --> 02:00:08,020
this blue one gets bound to the second

02:00:03,890 --> 02:00:12,920
one now the fun thing is when we try to

02:00:08,020 --> 02:00:15,590
create any child elements to this so

02:00:12,920 --> 02:00:19,670
like now if we say okay like this

02:00:15,590 --> 02:00:21,590
selection of groups now try to create

02:00:19,670 --> 02:00:26,780
any children like let's say the children

02:00:21,590 --> 02:00:33,140
are the circles these children actually

02:00:26,780 --> 02:00:35,210
get they actually inherit the the data

02:00:33,140 --> 02:00:41,570
that's been balanced to the parent

02:00:35,210 --> 02:00:44,360
so they actually inherit this data and

02:00:41,570 --> 02:00:49,630
they will also be able to say they will

02:00:44,360 --> 02:00:54,530
also know oh I am like fill red so blue

02:00:49,630 --> 02:00:57,110
but I'm because we want to make a circle

02:00:54,530 --> 02:01:02,630
for each one of these child arrays we

02:00:57,110 --> 02:01:06,860
just say okay actually give me back for

02:01:02,630 --> 02:01:11,660
the selection of circles and I want to

02:01:06,860 --> 02:01:13,700
create a circle for every element in the

02:01:11,660 --> 02:01:17,210
child array so that's why we're

02:01:13,700 --> 02:01:21,350
returning the child and then we're

02:01:17,210 --> 02:01:23,360
saying I want this to be applied to this

02:01:21,350 --> 02:01:27,290
one that's to be applied to this one and

02:01:23,360 --> 02:01:29,810
this to be applied to this one and then

02:01:27,290 --> 02:01:34,270
for the second for the second group I

02:01:29,810 --> 02:01:36,760
want this here this here and

02:01:34,270 --> 02:01:43,300
here but that's what's happening that's

02:01:36,760 --> 02:01:46,750
a lot of lights so yes so we're saying

02:01:43,300 --> 02:01:49,990
for its children I want to use this

02:01:46,750 --> 02:02:01,330
array of data to create my children

02:01:49,990 --> 02:02:03,190
elements okay and then so the last thing

02:02:01,330 --> 02:02:05,380
we want to do is make all the flowers

02:02:03,190 --> 02:02:07,150
and this might sound like a lot of work

02:02:05,380 --> 02:02:08,890
but it's actually a very very minimal

02:02:07,150 --> 02:02:10,900
work now that we've created one flower

02:02:08,890 --> 02:02:15,330
since you go from one flower to many

02:02:10,900 --> 02:02:16,650
flowers is actually very little work and

02:02:15,330 --> 02:02:24,180
[Applause]

02:02:16,650 --> 02:02:24,180
I'm just gonna go straight into it yeah

02:02:30,930 --> 02:02:39,180
okay so set the main four scales is the

02:02:36,670 --> 02:02:39,180
same as before

02:02:41,870 --> 02:02:45,430
I'm just gonna copy that over

02:02:48,699 --> 02:02:55,030
and then number two is now instead of

02:02:51,820 --> 02:02:59,559
creating data for the petals now we need

02:02:55,030 --> 02:03:01,809
to create a group for each flower right

02:02:59,559 --> 02:03:05,469
and then we need to translate and scale

02:03:01,809 --> 02:03:09,039
those flowers so let's do that so we

02:03:05,469 --> 02:03:11,860
have let's call each of those flowers

02:03:09,039 --> 02:03:15,010
let's call that selection of group

02:03:11,860 --> 02:03:20,760
elements flowers and we say SVG not

02:03:15,010 --> 02:03:20,760
select all group

02:03:22,119 --> 02:03:30,399
and then the the data in this case is

02:03:27,189 --> 02:03:34,869
the array of movies right because each

02:03:30,399 --> 02:03:43,149
flower is equal to each movie so we do

02:03:34,869 --> 02:03:46,260
the movie or data is movies oh yeah if

02:03:43,149 --> 02:03:46,260
you want to type long ooh

02:03:46,959 --> 02:03:58,659
movies enter dot append and append

02:03:52,629 --> 02:04:01,389
groups now if we inspect element if we

02:03:58,659 --> 02:04:03,309
inspect the sweetie we'll see like a few

02:04:01,389 --> 02:04:10,599
hundred group elements that have been

02:04:03,309 --> 02:04:12,789
made or we should that seems like okay

02:04:10,599 --> 02:04:14,800
so now we've created all the group

02:04:12,789 --> 02:04:18,669
elements we've created a group element

02:04:14,800 --> 02:04:25,349
for each movie and then right now let's

02:04:18,669 --> 02:04:28,659
just apply the translate and scale so

02:04:25,349 --> 02:04:31,929
transform is what the attribute is

02:04:28,659 --> 02:04:37,769
called and then what I want to do is

02:04:31,929 --> 02:04:47,280
pass in both the data and index big and

02:04:37,769 --> 02:04:53,709
for the X I'm just gonna say I believe

02:04:47,280 --> 02:04:58,510
so index mod to me so I'm just going to

02:04:53,709 --> 02:05:03,249
help be on each row so mod three times

02:04:58,510 --> 02:05:05,349
uh it's just yeah let's just uh move

02:05:03,249 --> 02:05:07,739
them over by no but let's move him over

02:05:05,349 --> 02:05:07,739
by

02:05:10,730 --> 02:05:22,790
I think it's yeah let's move them over

02:05:13,790 --> 02:05:28,670
by I'm going to move them over by 200

02:05:22,790 --> 02:05:32,230
and then I'm off me plus 0.5 which just

02:05:28,670 --> 02:05:39,470
means like just move them over by 1/2 uh

02:05:32,230 --> 02:05:42,200
and then um for the Y basically math top

02:05:39,470 --> 02:05:45,140
floor I into PI by 3 so basically

02:05:42,200 --> 02:05:49,510
whatever my index is divided by 3 and

02:05:45,140 --> 02:05:53,870
that's the road that I'm on and again

02:05:49,510 --> 02:05:59,570
this is just so just do those 0.5 times

02:05:53,870 --> 02:06:05,570
200 and then I want to do the scale

02:05:59,570 --> 02:06:10,870
transform so that was scale is equal to

02:06:05,570 --> 02:06:16,000
a size scale and then we pass in the

02:06:10,870 --> 02:06:24,760
rating yes the reading for that movie

02:06:16,000 --> 02:06:31,630
and now will we return translate x

02:06:24,760 --> 02:06:31,630
translate X Y and scale

02:06:33,080 --> 02:06:40,290
yeah thank you and then nothing you

02:06:37,950 --> 02:06:43,560
should show up but now you'll see for

02:06:40,290 --> 02:06:47,000
each of the groups you'll see their

02:06:43,560 --> 02:06:47,000
translate and the scale

02:07:06,389 --> 02:07:14,850
okay now we have the flowers so let's

02:07:10,929 --> 02:07:14,850
make even at the petals for each bar

02:07:19,610 --> 02:07:28,430
so now instead of selecting them from

02:07:23,180 --> 02:07:34,570
the SVG we want to select them from the

02:07:28,430 --> 02:07:36,800
flowers so basically instead of looking

02:07:34,570 --> 02:07:39,380
instead of working within the SVG

02:07:36,800 --> 02:07:42,590
container now we want to work within

02:07:39,380 --> 02:07:46,310
each of the flower groups as our parent

02:07:42,590 --> 02:07:49,460
container so for each flower select all

02:07:46,310 --> 02:07:54,560
the path elements that are going to be

02:07:49,460 --> 02:07:59,480
our petals and then here's a bumper so

02:07:54,560 --> 02:08:02,900
um if you want to you are more than

02:07:59,480 --> 02:08:04,040
welcome to do let's do it this way so

02:08:02,900 --> 02:08:11,870
dot data

02:08:04,040 --> 02:08:13,910
let's first console.log oh yeah

02:08:11,870 --> 02:08:15,680
that's just the first console long and

02:08:13,910 --> 02:08:19,100
see what happens and as you can see when

02:08:15,680 --> 02:08:21,350
they call us a lot here it's the it's

02:08:19,100 --> 02:08:23,230
the data from the movie it's it's the

02:08:21,350 --> 02:08:27,200
data that's been bound to the parent

02:08:23,230 --> 02:08:30,050
flower group container and so what we

02:08:27,200 --> 02:08:32,630
want is like we did before we want to

02:08:30,050 --> 02:08:34,730
use this movie data to create the right

02:08:32,630 --> 02:08:39,530
number of petals right and rotate them

02:08:34,730 --> 02:08:43,190
accordingly so use this to use this data

02:08:39,530 --> 02:08:47,210
so now we want to say numb petals is

02:08:43,190 --> 02:08:52,190
equal two of them

02:08:47,210 --> 02:09:02,090
it was enough thank you num puddle scale

02:08:52,190 --> 02:09:07,190
and then now we use d dot foot know if

02:09:02,090 --> 02:09:11,870
we do mum petals so still 6s any sense

02:09:07,190 --> 02:09:14,810
and now we want to return return the

02:09:11,870 --> 02:09:17,750
array of petals right now we want to

02:09:14,810 --> 02:09:29,989
return the array of petals so I'm still

02:09:17,750 --> 02:09:36,730
being x so six petals and then now now

02:09:29,989 --> 02:09:41,060
all I want to do is the rotation i /

02:09:36,730 --> 02:09:44,830
numpy dole's times 360 same as before

02:09:41,060 --> 02:09:47,710
and then the right path so it was path

02:09:44,830 --> 02:09:58,330
pads

02:09:47,710 --> 02:10:03,080
lookup and we use d dot thank you but i

02:09:58,330 --> 02:10:05,680
need to do i need to add in here breast

02:10:03,080 --> 02:10:05,680
of the pencil

02:10:12,250 --> 02:10:20,840
cool so diva peachy thank you and now

02:10:17,719 --> 02:10:24,640
let's see if we have the right number of

02:10:20,840 --> 02:10:24,640
petals being made for each of the groups

02:10:29,080 --> 02:10:35,980
enter the Ovid didn't enjoy that thank

02:10:35,030 --> 02:10:40,000
you

02:10:35,980 --> 02:10:40,000
you are saving me right now

02:10:44,030 --> 02:10:54,450
yay yeah I try opening them up see all

02:10:51,150 --> 02:10:56,910
six right no okay except yeah so now the

02:10:54,450 --> 02:11:01,920
paths are being made for each of the

02:10:56,910 --> 02:11:05,520
flowers so now we only have a few more

02:11:01,920 --> 02:11:07,710
steps so so we need to set the attribute

02:11:05,520 --> 02:11:10,200
for the path so the D attribute for the

02:11:07,710 --> 02:11:12,960
paths for each of the petals and then we

02:11:10,200 --> 02:11:16,110
also need to rotate them that's it so

02:11:12,960 --> 02:11:30,650
let's do that let's first rotate them so

02:11:16,110 --> 02:11:37,560
transform D turn up rotate d dot rotate

02:11:30,650 --> 02:11:47,400
and then add er a deep return D doctor

02:11:37,560 --> 02:11:51,960
oh yeah did that happen for you that's

02:11:47,400 --> 02:11:53,870
it right now we just need to do actually

02:11:51,960 --> 02:11:58,650
tied to something really awesome and

02:11:53,870 --> 02:12:02,550
which was that you said Waylon I'm gonna

02:11:58,650 --> 02:12:04,770
say Phil Nunn and then tell me what was

02:12:02,550 --> 02:12:08,910
the for their strokes you do something

02:12:04,770 --> 02:12:11,070
where you used the color scale so

02:12:08,910 --> 02:12:13,370
there's you is it just here you also say

02:12:11,070 --> 02:12:13,370
color

02:12:19,969 --> 02:12:26,369
ooh do you three that interpolate

02:12:23,659 --> 02:12:40,170
rainbow and they should do that I divide

02:12:26,369 --> 02:12:48,539
by non petal skin cool and then GG choke

02:12:40,170 --> 02:12:52,650
with pie yeah so we're better than the

02:12:48,539 --> 02:12:55,769
black great yes all the colors all the

02:12:52,650 --> 02:13:02,639
colors and you even did a blend mode

02:12:55,769 --> 02:13:09,630
that style was a blend mode then it does

02:13:02,639 --> 02:13:17,599
not mix okay let me explain mode and

02:13:09,630 --> 02:13:17,599
multiply yeah no hey I make that bigger

02:13:18,650 --> 02:13:26,090
yeah no just showing off

02:13:21,510 --> 02:13:26,090
I'm not showing off tie it's showing off

02:13:33,320 --> 02:13:38,429
does that make you happy to see me happy

02:13:36,030 --> 02:13:41,900
actually let's try actually doing it as

02:13:38,429 --> 02:13:41,900
a fill instead of this photo

02:13:43,870 --> 02:13:48,750
oh this makes me happy

02:14:04,890 --> 02:14:17,050
okay not rainbow at the end makes all

02:14:12,370 --> 02:14:23,050
the difference okay so I'm gonna put

02:14:17,050 --> 02:14:25,810
this into the complete code see so that

02:14:23,050 --> 02:14:29,350
you can take a look items with of course

02:14:25,810 --> 02:14:36,400
their rainbow oh my chuckles all the

02:14:29,350 --> 02:14:40,780
rainbows meryl streep uh type its his

02:14:36,400 --> 02:14:42,970
brilliance look at all of that and I

02:14:40,780 --> 02:14:48,100
really sincerely hope that you got

02:14:42,970 --> 02:14:50,380
something like this too and I knew that

02:14:48,100 --> 02:14:53,110
three and a half hours is still like not

02:14:50,380 --> 02:14:55,510
that much time to like you know we get

02:14:53,110 --> 02:14:58,600
all cover all of that we did today but

02:14:55,510 --> 02:15:00,850
hopefully um it helps you get at least a

02:14:58,600 --> 02:15:03,250
little bit familiar with SVG pods and

02:15:00,850 --> 02:15:05,080
with the basics of d3 and then hopefully

02:15:03,250 --> 02:15:08,050
you got some pretty flowers out of it

02:15:05,080 --> 02:15:10,990
I'm and if you are really proud of your

02:15:08,050 --> 02:15:13,060
flowers and I hope you are I really

02:15:10,990 --> 02:15:15,720
really want to see them so please like

02:15:13,060 --> 02:15:25,090
screenshot them and tweet them to me

02:15:15,720 --> 02:15:28,990
and my handle is this is my handle right

02:15:25,090 --> 02:15:50,980
here please tweet me so I can be really

02:15:28,990 --> 02:15:54,130
really proud of my initials my initials

02:15:50,980 --> 02:15:56,610
are surely still Musa as X Y W you I

02:15:54,130 --> 02:15:59,500
actually made the handle without

02:15:56,610 --> 02:16:04,120
realizing the implementations of my

02:15:59,500 --> 02:16:05,830
initials and then my my ta at the time

02:16:04,120 --> 02:16:07,570
was like surely really and I'm like what

02:16:05,830 --> 02:16:10,150
are you talking about just like your a

02:16:07,570 --> 02:16:11,860
handle your github handle and I was like

02:16:10,150 --> 02:16:15,940
what about it just like we did a lot and

02:16:11,860 --> 02:16:17,500
I was like I was like crap and that was

02:16:15,940 --> 02:16:22,150
like seven years ago and I have now

02:16:17,500 --> 02:16:27,430
fully embraced it so if you need to just

02:16:22,150 --> 02:16:33,340
remember it as this sexy without the

02:16:27,430 --> 02:16:37,800
ease and if that makes it easier for you

02:16:33,340 --> 02:16:37,800
to tweet me your flowers then so be it

02:16:38,310 --> 02:16:45,580
so thank you so much for joining today

02:16:41,050 --> 02:16:50,070
thank you so much for all the funds and

02:16:45,580 --> 02:16:54,760
the the participation and the rainbows

02:16:50,070 --> 02:16:55,599
and I hope you have a great rest of the

02:16:54,760 --> 02:16:58,290
conference

02:16:55,599 --> 02:16:58,290
yeah

02:17:01,090 --> 02:17:04,229

YouTube URL: https://www.youtube.com/watch?v=TKv_cUZd9sM


