Title: Imagine This: A Web Without Servers - Tara Vancil - JSConf EU 2018
Publication date: 2018-07-26
Playlist: JSConf EU 2018
Description: 
	The Web was envisioned as an open platform for publishing and sharing information, but that vision has been lost: most people will never publish independently on the Web. What went wrong?

We’ll see how a core facet of the Web platform—setting up and running a server—locks the vast majority of users out of participating in the Web. Finally, we’ll take a look at the peer-to-peer Web, an experiment to re-imagine Web publishing, this time without servers.

Feeling skeptical? I’ll build and deploy a website on-stage using only my browser and text editor.

OMG JSConf EU is coming back in 2019 https://2019.jsconf.eu/
Captions: 
	00:00:09,800 --> 00:00:13,110
Well, if you think it's bad that they made you stand up, can you believe they're making

00:00:13,110 --> 00:00:15,120
me stand up here for this whole talk!

00:00:15,120 --> 00:00:17,970
Hi, everyone, my tame is Tara.

00:00:17,970 --> 00:00:24,449
Today, I will ask you to use your imagination, to think about the web in a way you never

00:00:24,449 --> 00:00:26,480
have before.

00:00:26,480 --> 00:00:32,189
What I'm going to ask you to imagine is a web without servers.

00:00:32,189 --> 00:00:37,970
If your immediate reaction is confusion or scepticism, that's okay, because it doesn't

00:00:37,970 --> 00:00:41,270
make much sense in the way the web works today.

00:00:41,270 --> 00:00:46,950
If I tell but my background and what I work on now, it will all start to come together.

00:00:46,950 --> 00:00:52,960
My name is Tara Vancil, and I'm a web developer.

00:00:52,960 --> 00:00:57,710
For me, it means that I spend most of my time thinking about the web or building things

00:00:57,710 --> 00:00:59,030
on the web.

00:00:59,030 --> 00:01:04,170
I'm really interested in peer-to-peer protocols and I love anything to do with nails.

00:01:04,170 --> 00:01:11,299
If you have an interest in nail art, or nail polish, we should definitely talk later.

00:01:11,299 --> 00:01:14,969
The web is a huge part of my life now, but that wasn't always the case.

00:01:14,969 --> 00:01:17,249
I actually didn't grow up online.

00:01:17,249 --> 00:01:21,929
My family didn't have a computer and we lived in a rural area with spotty internet.

00:01:21,929 --> 00:01:26,329
My only access to computers was at school where we mostly used them for learning how

00:01:26,329 --> 00:01:28,590
to type.

00:01:28,590 --> 00:01:34,609
I did get on to Facebook, MySpace, and Sparknotes in my teenage years, but my object line experiences

00:01:34,609 --> 00:01:36,590
were mostly about consuming things.

00:01:36,590 --> 00:01:40,759
I was pretty much looking at pictures of my crush and catching up on the book I didn't

00:01:40,759 --> 00:01:43,350
read for English class.

00:01:43,350 --> 00:01:48,840
It wasn't until much, much later when I learned about the existence of HTML, JavaScript, and

00:01:48,840 --> 00:01:52,899
CSS that I realised that I could build things on the web.

00:01:52,899 --> 00:01:55,820
This was just something I had never considered before.

00:01:55,820 --> 00:02:01,770
I assumed that building websites was reserved for super talented programmers.

00:02:01,770 --> 00:02:05,060
This was a really, really exciting moment for me.

00:02:05,060 --> 00:02:09,590
Because it totally changed my conception of what the web was, and how I could participate

00:02:09,590 --> 00:02:11,400
on it.

00:02:11,400 --> 00:02:16,989
But I eventually realised, after learning how to put together a web page with HTML,

00:02:16,989 --> 00:02:21,629
there was an important question that I needed to answer which was: how do I share the things

00:02:21,629 --> 00:02:23,120
that I'm building?

00:02:23,120 --> 00:02:26,739
Thankfully, the answer to that question is really simple.

00:02:26,739 --> 00:02:33,040
You just install webpack with MPM, set up your local web server and SSH into a server

00:02:33,040 --> 00:02:35,159
you've already set up on AWS.

00:02:35,159 --> 00:02:37,930
Okay, so it is actually not that simple.

00:02:37,930 --> 00:02:41,189
Now, to be clear, I'm poking fun at webpack.

00:02:41,189 --> 00:02:47,349
I don't think that tools are complex and bad, I think tools are awesome because they help

00:02:47,349 --> 00:02:51,900
us build things, and it doesn't really matter which tool you pick, as long as it helps you

00:02:51,900 --> 00:02:55,000
build something that a browser can understand.

00:02:55,000 --> 00:03:01,260
Whether you write a simple HTML file or build something more complex, your choice is valid.

00:03:01,260 --> 00:03:05,799
The point is that composing web pages is flexible and forgiving.

00:03:05,799 --> 00:03:10,340
There is room for the most beginner-beginner and the most expert-expert to build something

00:03:10,340 --> 00:03:15,590
meaningful which is what makes the web such an awesome tool set.

00:03:15,590 --> 00:03:21,689
When I was a beginner, it was actually kind of burden some to build and share things on

00:03:21,689 --> 00:03:22,689
the web.

00:03:22,689 --> 00:03:26,829
I can tell you it wasn't the tools that made me feel that way.

00:03:26,829 --> 00:03:28,110
It was servers.

00:03:28,110 --> 00:03:34,890
Now, I mean this in the nicest way possible, but servers suck.

00:03:34,890 --> 00:03:39,049
I think I feel this way because I started building things on the web in this sweet spot

00:03:39,049 --> 00:03:46,170
period when GeoCities had already been shut down but tools like Netlify and Glitch didn't

00:03:46,170 --> 00:03:47,830
exist yet.

00:03:47,830 --> 00:03:52,079
GitHub pages were around but I wasn't comfortable working with git at that point.

00:03:52,079 --> 00:03:56,549
As far as I could tell, the best option for me to share the websites I was making was

00:03:56,549 --> 00:03:58,370
to set up a server.

00:03:58,370 --> 00:04:04,620
This was frustrating because I didn't have the time, expertise been or money to do that.

00:04:04,620 --> 00:04:05,969
Really, who does?

00:04:05,969 --> 00:04:11,720
There is like a super tiny sliver of the human population who knows how to set up a server,

00:04:11,720 --> 00:04:14,129
and, let alone enjoys doing it.

00:04:14,129 --> 00:04:19,430
I can set up servers now, and there are days when I'm in the mood to play with engine X

00:04:19,430 --> 00:04:25,160
but most of the time it is the very last thing I want to do.

00:04:25,160 --> 00:04:29,150
I'm sure some people in this room are good at running servers but I don't think it is

00:04:29,150 --> 00:04:32,230
fair to expect the rest of the world to be.

00:04:32,230 --> 00:04:37,560
There are three billion people on the internet today, and that number is only going to grow.

00:04:37,560 --> 00:04:41,530
They are using tools like Facebook, Instagram, and WeChat to welcoming.

00:04:41,530 --> 00:04:42,930
That is awesome.

00:04:42,930 --> 00:04:48,780
We are seeing human connection at a scale once unimaginable.

00:04:48,780 --> 00:04:52,860
But I think it is fair to say that the vast majority of these people are never going to

00:04:52,860 --> 00:04:56,819
participate in the web outside of the bounds of these tools.

00:04:56,819 --> 00:05:02,080
The post tweets, the share life updates on Facebook, or show pictures of Berlin street

00:05:02,080 --> 00:05:09,330
cats on Instagram, but they will never craft an HTML page, never make a fan site for their

00:05:09,330 --> 00:05:10,430
favourite band.

00:05:10,430 --> 00:05:15,120
They will never get to experience the creative joy of building something on the web that

00:05:15,120 --> 00:05:17,560
is truly theirs.

00:05:17,560 --> 00:05:24,650
I think we have to sit with that and think really hard about whether or not that's okay.

00:05:24,650 --> 00:05:26,050
Maybe it is.

00:05:26,050 --> 00:05:29,660
Maybe not everybody wants to learn how to build websites.

00:05:29,660 --> 00:05:33,910
But I think we should be certain that the web itself doesn't get in the way of those

00:05:33,910 --> 00:05:35,599
who do.

00:05:35,599 --> 00:05:38,830
Personally, I'm afraid that it does.

00:05:38,830 --> 00:05:41,970
I'm afraid afraid that publishing on the web is a bottleneck.

00:05:41,970 --> 00:05:46,389
That something as simple as sending an HTML file to a friend is far too complicated.

00:05:46,389 --> 00:05:50,740
I mean, think about it: if you knew the web, you could spend months and months wrapping

00:05:50,740 --> 00:05:56,539
your head around how to write an HTML page, vertically centre divs or navigate the latest

00:05:56,539 --> 00:05:58,449
JavaScript frameworks.

00:05:58,449 --> 00:06:02,990
After all of that, you gained your bearings, you have some confidence, and maybe built

00:06:02,990 --> 00:06:04,460
something you're proud of.

00:06:04,460 --> 00:06:07,849
You still have to figure out servers.

00:06:07,849 --> 00:06:09,300
And I just think the web can do better.

00:06:09,300 --> 00:06:13,270
In fact, I think it is essential that the web do better.

00:06:13,270 --> 00:06:16,220
Because of the barrier to entry remains — if the barrier to entry remains this high, I

00:06:16,220 --> 00:06:21,330
hate to think about what the web looks like in ten or 20 years.

00:06:21,330 --> 00:06:26,430
Remember, the web has only been around since 1990, and we are already seeing the early

00:06:26,430 --> 00:06:32,819
stages of what happens when most people use a handful of platforms to participate.

00:06:32,819 --> 00:06:34,330
So how does this play out for the long-term?

00:06:34,330 --> 00:06:41,259
What does it look like if 28 years from today, most people are still using a tool like Facebook,

00:06:41,259 --> 00:06:44,970
or WeChat, or Instagram.

00:06:44,970 --> 00:06:51,690
Will it still be the web or will the providers have shaped it into something entirely different?

00:06:51,690 --> 00:06:56,930
I don't know, but it seems plausible, but I don't think that's a risk we should be willing

00:06:56,930 --> 00:06:58,690
to take.

00:06:58,690 --> 00:06:59,990
The web is too precious.

00:06:59,990 --> 00:07:05,690
It is this weird social experiment where we've built a global language for building things.

00:07:05,690 --> 00:07:07,780
How cool is that?

00:07:07,780 --> 00:07:15,669
At the very least, I think a web like this looks kind of boring to me.

00:07:15,669 --> 00:07:19,470
If you were here last year, you might remember one of our emcees, Rachel White made a talk

00:07:19,470 --> 00:07:23,569
called Keep the Web Weird.

00:07:23,569 --> 00:07:29,550
I interpreted it as a love letter to the kind of creativity the web inspires when communities

00:07:29,550 --> 00:07:31,979
are nice and tools are accessible.

00:07:31,979 --> 00:07:37,729
She called back to the days of GeoCities and Angel Fire, when there were several tools

00:07:37,729 --> 00:07:45,610
available for folks just to jump into a browser, write HTML, and publish a website for free.

00:07:45,610 --> 00:07:52,690
But you might know that GeoCities was shut down in 2009 and took 38 million sites with

00:07:52,690 --> 00:07:53,690
it.

00:07:53,690 --> 00:08:01,509
The archive put up a valiant effort to save those sites and saved the precious gifts that

00:08:01,509 --> 00:08:05,669
came out of the GeoCities era but not able to save all the 38 million sites.

00:08:05,669 --> 00:08:09,710
They're gone.

00:08:09,710 --> 00:08:16,310
I think the coming and going of GeoCities and the rise of Neocities and Glitch tells

00:08:16,310 --> 00:08:21,069
us something about the web and what is missing from it.

00:08:21,069 --> 00:08:26,199
I think that it tells us setting up a server is so far out of reach for most people that

00:08:26,199 --> 00:08:31,680
they simply can't do it and they instead have to rely on tools like this.

00:08:31,680 --> 00:08:36,320
Now, I love Neocities, I love Glitch, in fact, which I think they're doing some of the most

00:08:36,320 --> 00:08:39,360
important work on the web right now.

00:08:39,360 --> 00:08:45,610
We've been here before 3 Neocities and Glitch help us circumvent the fact that publishing

00:08:45,610 --> 00:08:50,480
on the web is difficult, but I think we should be asking why is it so damned difficult in

00:08:50,480 --> 00:08:51,529
the first place?

00:08:51,529 --> 00:08:57,380
What can we do to make it easier in a way that has the kind of longevity we expect out

00:08:57,380 --> 00:09:02,010
of the web platform?

00:09:02,010 --> 00:09:05,720
I think we can make it easier, and I want to share with you my vision of what that might

00:09:05,720 --> 00:09:07,100
look like.

00:09:07,100 --> 00:09:11,570
I want to ask what if we just didn't need servers to share a website?

00:09:11,570 --> 00:09:17,220
What if we could press a button in our browser, and, with one click, create a new web page?

00:09:17,220 --> 00:09:22,640
That would certainly be nice but how in the world could we pull that off?

00:09:22,640 --> 00:09:24,260
We have these pretty powerful devices.

00:09:24,260 --> 00:09:27,779
We have we have our phones, our laptops, right?

00:09:27,779 --> 00:09:30,420
Maybe we could just turn them into servers?

00:09:30,420 --> 00:09:33,180
Sadly, it's not that easy.

00:09:33,180 --> 00:09:38,890
There is a lot that is wrong with this idea, but to put it simply, our personal devices

00:09:38,890 --> 00:09:41,550
are just not built to be servers.

00:09:41,550 --> 00:09:44,680
First of all, we shut them off sometimes, whether it is because we've gone to sleep

00:09:44,680 --> 00:09:46,450
or the battery's dead.

00:09:46,450 --> 00:09:51,230
They don't always have a dedicated IP address, and they're simply not built to handle the

00:09:51,230 --> 00:09:54,200
kind of traffic that servers do.

00:09:54,200 --> 00:09:57,519
Imagine publishing a video from your personal computer and having it go viral.

00:09:57,519 --> 00:10:02,440
Your computer would be flooded with millions of requests, and your home network would probably

00:10:02,440 --> 00:10:04,900
fall over in a few minutes.

00:10:04,900 --> 00:10:10,490
So, if this idea of one-click publishing is going to work, we have to think outside of

00:10:10,490 --> 00:10:15,920
the server box, because, again, our personal devices just are not servers.

00:10:15,920 --> 00:10:22,180
Luckily, some smart people flipped this problem on its head and have found a way for regular

00:10:22,180 --> 00:10:28,320
devices to do the sorts of things that servers do without actually needing to be a server.

00:10:28,320 --> 00:10:35,100
BitTorrent was created in the early 2000s and what you call a peer-to-peer network.

00:10:35,100 --> 00:10:42,300
The key innovation was to ask what if, instead of one computer, a server, handling all of

00:10:42,300 --> 00:10:47,700
the responsibility for hosting files, what if we split up that responsibility across

00:10:47,700 --> 00:10:52,880
a network of a bunch of different computers so that any device could hop on to the network

00:10:52,880 --> 00:10:55,440
and contribute some bandwidth?

00:10:55,440 --> 00:11:00,390
Maybe some of those devices are server-like devices that live up in the cloud and surely

00:11:00,390 --> 00:11:07,630
sometimes some devices will go offline, but the big idea is that regular devices can help

00:11:07,630 --> 00:11:10,529
contribute resources to hosting files on a network?

00:11:10,529 --> 00:11:13,390
And this was a really big deal.

00:11:13,390 --> 00:11:18,040
Now, I'm sure most of you know BitTorrent because of its infamy.

00:11:18,040 --> 00:11:24,519
It was used largely for downloading movies and music and other media illegally, but I

00:11:24,519 --> 00:11:29,880
want to point out it's a really incredible innovation that has tons of legal and other

00:11:29,880 --> 00:11:32,740
legitimate use cases.

00:11:32,740 --> 00:11:37,300
Most importantly being that it made it possible for regular people with regular devices to

00:11:37,300 --> 00:11:41,970
be able to host files, and I just think that's so cool.

00:11:41,970 --> 00:11:46,470
So what if we took this approach and we applied it to the web?

00:11:46,470 --> 00:11:49,610
Websites are just files after all.

00:11:49,610 --> 00:11:54,940
If a website is just a collection of files, then what a if we could use a peer-to-peer

00:11:54,940 --> 00:11:58,800
networks to get a website from one computer to another?

00:11:58,800 --> 00:12:04,620
It turns out you can, and I'm really excited to tell you more about that.

00:12:04,620 --> 00:12:07,500
I work with these two guys — P Frazee and Macintosh.

00:12:07,500 --> 00:12:10,830
They're both here today.

00:12:10,830 --> 00:12:17,089
Together, the three of us work on a project called the Beaker browser.

00:12:17,089 --> 00:12:21,779
Beaker is an experimental browser which means that we don't always follow web standards.

00:12:21,779 --> 00:12:26,500
But it is not because we don't think they're important, it's just that we have a few experiments

00:12:26,500 --> 00:12:30,420
in mind that we wanted to run, and we think they're worthwhile to run, even though they're

00:12:30,420 --> 00:12:33,579
not standards-compliant.

00:12:33,579 --> 00:12:38,510
The core experiment we are running is what happens when you take one of these peer-to-peer

00:12:38,510 --> 00:12:42,149
networks and you put it inside of a browser?

00:12:42,149 --> 00:12:48,390
So, we wanted to keep the web mostly the same, keep the browser pretty familiar, but make

00:12:48,390 --> 00:12:49,560
it peer to peer.

00:12:49,560 --> 00:12:53,660
We're in a really lucky position to be able to do this experiment.

00:12:53,660 --> 00:12:59,790
Because Macintosh is the core developer of a peer-to-peer protocol called Dat which is

00:12:59,790 --> 00:13:04,709
similar to BitTorrent but has key improvements that make it really well suited for the kinds

00:13:04,709 --> 00:13:06,019
of things we do on the web.

00:13:06,019 --> 00:13:12,150
We took it and put it into the browser, put it into Beaker, and found out some really

00:13:12,150 --> 00:13:18,399
interesting things happened, like enabling one-click publishing, giving view source cool

00:13:18,399 --> 00:13:23,140
new capabilities, and making it possible to provide new web APIs to developers.

00:13:23,140 --> 00:13:26,260
Why don't I show you?

00:13:26,260 --> 00:13:28,290
Okay.

00:13:28,290 --> 00:13:29,290
This is Beaker.

00:13:29,290 --> 00:13:31,670
I apologise that the tabs and the URL bar are small.

00:13:31,670 --> 00:13:34,740
I will try to point out what is important.

00:13:34,740 --> 00:13:39,610
In first glance, it probably looks spectacular to any browser that you are familiar with.

00:13:39,610 --> 00:13:43,230
So it is not remarkable in that regard.

00:13:43,230 --> 00:13:47,110
Before showing you anything exciting, let me show you what a peer-to-peer website looks

00:13:47,110 --> 00:13:49,230
like.

00:13:49,230 --> 00:13:54,430
This is my website, and you might notice that, instead of HTTPS, the protocol in the URL

00:13:54,430 --> 00:13:55,430
is DAT.

00:13:55,430 --> 00:13:58,320
It is really small but that is what it says.

00:13:58,320 --> 00:14:04,420
It looks like what you would expect a website to look like — links work just like you

00:14:04,420 --> 00:14:10,070
would expect to, images work just the same as they do in other browsers, and so does

00:14:10,070 --> 00:14:11,070
CSS.

00:14:11,070 --> 00:14:14,009
This was an intention al choice on our part.

00:14:14,009 --> 00:14:23,259
We didn't want to up end the web, we wanted to see what happened what would if we put

00:14:23,259 --> 00:14:41,690
a peer-to-peer network in it.

00:14:41,690 --> 00:14:55,480
[Sound feed distorted].

00:14:55,480 --> 00:15:01,740
We did literally treat this device kind of like a server but not actually.

00:15:01,740 --> 00:15:05,880
So I'm going to jump to Beaker's main menu, and click this button that says Create New.

00:15:05,880 --> 00:15:09,170
I will click the website template.

00:15:09,170 --> 00:15:12,340
You can make an empty project or import an existing one.

00:15:12,340 --> 00:15:15,680
I will import this template for the sake of time.

00:15:15,680 --> 00:15:20,860
What happened here is that Beaker minted a brand new website.

00:15:20,860 --> 00:15:26,210
It has got information about how to get started, change the background colour here, nothing

00:15:26,210 --> 00:15:27,260
too fancy.

00:15:27,260 --> 00:15:33,279
What I think is exciting to point out is that this website has its own URL.

00:15:33,279 --> 00:15:35,259
I could share this URL with any of you.

00:15:35,259 --> 00:15:39,240
If you were to open it in Beaker, because we're the only ones that support it, you can

00:15:39,240 --> 00:15:41,470
download the website from my computer.

00:15:41,470 --> 00:15:43,940
There's no server involved here.

00:15:43,940 --> 00:15:47,139
Now, this URL's not very pretty.

00:15:47,139 --> 00:15:48,389
You couldn't remember it.

00:15:48,389 --> 00:15:52,399
Just like IP addresses are tricky to remember as well.

00:15:52,399 --> 00:15:58,200
How might a URL like this work with the domain-name system? Turns out it works out pretty nicely.

00:15:58,200 --> 00:16:02,010
I set up a website to show you how that works.

00:16:02,010 --> 00:16:07,889
This is the JSConf EU subdomain on my website.

00:16:07,889 --> 00:16:11,829
I was able to get this nice time by using a txt record.

00:16:11,829 --> 00:16:18,069
I set this up with my domain registrar — Google — and I pointed the subdomain to the long

00:16:18,069 --> 00:16:20,970
ugly URL, and that's all it took.

00:16:20,970 --> 00:16:24,370
I didn't have to fuss with any servers to get that nice URL.

00:16:24,370 --> 00:16:32,540
I promised you I would show you view source, so let's look what that is like in beak Beck.

00:16:32,540 --> 00:16:36,440
What we are seeing here is all of the files that compose the website we were just looking

00:16:36,440 --> 00:16:37,810
at.

00:16:37,810 --> 00:16:44,470
You can see the favicon here, we can take a look at the styles, and, of course, we can

00:16:44,470 --> 00:16:47,830
see the HTML that we were just looking at.

00:16:47,830 --> 00:16:49,580
These files live on my computer.

00:16:49,580 --> 00:16:52,720
If they live on my computer, should I not be able to edit them?

00:16:52,720 --> 00:16:54,660
Yes, you can.

00:16:54,660 --> 00:16:58,610
We made it possible to actually edit files inside of view source, so I can click in button

00:16:58,610 --> 00:16:59,990
right here.

00:16:59,990 --> 00:17:04,310
I'm going to add a few exclamation points to this heading.

00:17:04,310 --> 00:17:12,220
When I save it and go back to that tab, we will see those changes just like that.

00:17:12,220 --> 00:17:14,880
[Applause].

00:17:14,880 --> 00:17:21,360
Okay, that's pretty cool, but we are all developers, and we probably have preferences about our

00:17:21,360 --> 00:17:23,320
editing environments, right?

00:17:23,320 --> 00:17:26,230
Some of us like Sublime, some like DS Code.

00:17:26,230 --> 00:17:32,310
Again, these files are on my computer, so I can open them up in my preferred editor.

00:17:32,310 --> 00:17:36,410
Before I do that, I want to turn on a cool little feature we have — library loading

00:17:36,410 --> 00:17:49,190
— and I'm going to jump over — I want to jump over to the view source tool

00:17:49,190 --> 00:17:50,190
again.

00:17:50,190 --> 00:17:56,200
I'm going to copy the path to where those files are in my computer.

00:17:56,200 --> 00:18:03,340
And open those files up.

00:18:03,340 --> 00:18:11,410
I want to open the index.html file, and I'm going to say "Hello from Sublime".

00:18:11,410 --> 00:18:16,370
As soon as I hit save and head over to the tab, we can see the change without needing

00:18:16,370 --> 00:18:17,370
to refresh.

00:18:17,370 --> 00:18:18,370
[Applause].

00:18:18,370 --> 00:18:19,941
That's a fun little tool.

00:18:19,941 --> 00:18:30,140
So I showed you one-click publishing, I showed

00:18:30,140 --> 00:18:34,071
you some of the new things we enabled in view source but I haven't told you about the new

00:18:34,071 --> 00:18:36,060
web APIs yet.

00:18:36,060 --> 00:18:40,340
Before I do that, I want to give a backstory why we thought this was necessary.

00:18:40,340 --> 00:18:44,830
When we first started building Beaker, we were happy with the fact that we would could

00:18:44,830 --> 00:18:50,900
pull off one-click publishing but we realised that the web is not a collection of static

00:18:50,900 --> 00:18:54,150
websites, although it might be a nicer place if it were.

00:18:54,150 --> 00:19:01,540
We thought is there any way we can recreate the behaviour that apps on the web use using

00:19:01,540 --> 00:19:03,690
a pee-to-peer network?

00:19:03,690 --> 00:19:08,780
Can we make it problem to do user profiles, databases, or anything like that?

00:19:08,780 --> 00:19:11,230
The answer is yes.

00:19:11,230 --> 00:19:16,490
If you think about it, a database, or a user profile is typically represented with just

00:19:16,490 --> 00:19:17,490
files, right?

00:19:17,490 --> 00:19:23,020
And, if websites are also just files, then maybe we can represent user data and user

00:19:23,020 --> 00:19:26,590
profiles inside of websites.

00:19:26,590 --> 00:19:30,980
That's exactly what we and other people were building on these tool sets are experimenting

00:19:30,980 --> 00:19:32,540
with.

00:19:32,540 --> 00:19:35,870
This is a profile.json file.

00:19:35,870 --> 00:19:41,970
This is a profile I use on a peer-to-peer social media site.

00:19:41,970 --> 00:19:46,341
You can see the properties are my name, bio, and avatar.

00:19:46,341 --> 00:19:51,620
I think it would be easier if I show this later to make it sink in.

00:19:51,620 --> 00:19:56,600
If we're going to make it possible for developers to build peer-to-peer apps to use user data,

00:19:56,600 --> 00:20:00,280
we need to make sure they can read and rye write the data.

00:20:00,280 --> 00:20:04,270
The new web APIs look a little bit like this.

00:20:04,270 --> 00:20:08,220
Again, it is easier if I just show you.

00:20:08,220 --> 00:20:13,150
I'm going to jump into the console on this website here.

00:20:13,150 --> 00:20:17,030
Let's see.

00:20:17,030 --> 00:20:22,850
I'm going to start up by getting an object that represents this Dat website that we're

00:20:22,850 --> 00:20:23,850
on.

00:20:23,850 --> 00:20:31,710
I'm going to use this, do this using the Dat archive APIs that we have, and Beaker.

00:20:31,710 --> 00:20:35,930
Do window.location.

00:20:35,930 --> 00:20:38,330
We now this this object, and we can do a lot with it.

00:20:38,330 --> 00:20:42,830
I want to show you one thing that we can write a new HTML file to this website.

00:20:42,830 --> 00:20:46,830
We will have a website writing to itself.

00:20:46,830 --> 00:21:01,560
Okay, so website.writefile and called it api.html and write simple markup to it.

00:21:01,560 --> 00:21:09,160
We've written the file, and now, if we go to api.ptml, we can see that we've created

00:21:09,160 --> 00:21:11,300
a new HTML file.

00:21:11,300 --> 00:21:12,960
[Applause].

00:21:12,960 --> 00:21:20,570
It might not be totally intuitive at first what this enables, but it enables a lot.

00:21:20,570 --> 00:21:27,330
We have a whole social media application using these APIs to write user profiles.

00:21:27,330 --> 00:21:31,770
It's looks a bit like Twitter, you might have noticed, and that was intentional.

00:21:31,770 --> 00:21:35,770
We wanted to see if we could replicate a lot of the behaviour that Twitter provides, so

00:21:35,770 --> 00:21:41,720
we have a feed, we can look at people's posts, we can like post and reply to them of course.

00:21:41,720 --> 00:21:51,470
I think I will actually say "Hello from JSConf", and anybody who is following me will sync

00:21:51,470 --> 00:21:53,419
these changes from my profile.

00:21:53,419 --> 00:21:56,300
—- sync these changes."

00:21:56,300 --> 00:22:08,330
I want — I want to show you by what I mean by putting

00:22:08,330 --> 00:22:15,060
user data in user profiles into websites.

00:22:15,060 --> 00:22:19,560
These are all of my posts.

00:22:19,560 --> 00:22:24,230
The object that represent my posts are pretty simple: text and a timestamp.

00:22:24,230 --> 00:22:32,330
If this were a reply, it would also contain information about who I was replying to.

00:22:32,330 --> 00:22:34,140
I think this is so cool.

00:22:34,140 --> 00:22:38,910
Interesting things happen when you separate user data from the application layer.

00:22:38,910 --> 00:22:43,700
The application layer in this case is just sort of a view on top of my profile.

00:22:43,700 --> 00:22:46,950
And over the top of all my friends' profiles.

00:22:46,950 --> 00:22:52,630
This means that the app and the data are no longer tied together, so, I can actually customise

00:22:52,630 --> 00:22:57,670
the app with little consequence, so, let's just do that, and let's see how that would

00:22:57,670 --> 00:22:58,670
work.

00:22:58,670 --> 00:23:00,790
I'm going to open this up in ViewSource.

00:23:00,790 --> 00:23:03,760
I don't only this website, so I can't just edit them.

00:23:03,760 --> 00:23:05,850
I have to make a copy.

00:23:05,850 --> 00:23:08,860
I'm going to go ahead and make a copy.

00:23:08,860 --> 00:23:10,500
I don't like that fritter.

00:23:10,500 --> 00:23:11,800
This app has round buttons.

00:23:11,800 --> 00:23:13,890
I'm going to make it square.

00:23:13,890 --> 00:23:21,059
I'm going to jump into the CSS file here, and search for the button class.

00:23:21,059 --> 00:23:23,450
Here is the border radius that I want to get rid of.

00:23:23,450 --> 00:23:27,480
We will save it.

00:23:27,480 --> 00:23:31,910
We're going to see an entirely new social media application.

00:23:31,910 --> 00:23:36,440
And we can see that the buttons are now square.

00:23:36,440 --> 00:23:38,170
[Applause].

00:23:38,170 --> 00:23:45,150
I haven't given this specific instance of app permission to write to my profile which

00:23:45,150 --> 00:23:49,980
is why it looks a bit different, but if I were to select my profile and load everything

00:23:49,980 --> 00:23:52,020
up, I wouldn't lose any of my friends.

00:23:52,020 --> 00:23:56,200
I wouldn't lose my network or content or anything.

00:23:56,200 --> 00:24:00,390
Even though this change I made was kind of trivial, you can imagine being in a situation

00:24:00,390 --> 00:24:04,480
on social media where a change you would like to make is not trivial.

00:24:04,480 --> 00:24:10,480
Maybe you would like to have some say over how the colour scheme works because you are

00:24:10,480 --> 00:24:13,580
colour-blind, or maybe you want better moderation tools.

00:24:13,580 --> 00:24:18,390
You're empowered to do that with this model, and I think that's just fantastic.

00:24:18,390 --> 00:24:25,090
Now, I'm not going to make any promises that this type of model, a peer-to-peer web is

00:24:25,090 --> 00:24:28,910
going to fix everything that is wrong with the web, and I'm not going to promise that

00:24:28,910 --> 00:24:33,960
an app like Fritter is ever going to become as popular as Facebook or Twitter because

00:24:33,960 --> 00:24:39,120
they're already pretty darned popular, but I can promise that a peer-to-peer web does

00:24:39,120 --> 00:24:43,610
make apps like this possible, and I can say this with confidence because I use Fritter

00:24:43,610 --> 00:24:47,000
every single day, and so do a lot of my friends.

00:24:47,000 --> 00:24:52,930
If you want to learn more about Beaker, please talk to me afterwards, I'm excited to share

00:24:52,930 --> 00:24:53,930
about it.

00:24:53,930 --> 00:24:55,740
You can visit these links to learn more.

00:24:55,740 --> 00:25:03,530
I wanted to end with this and say fundamentally, a peer-to-peer web is a more fun web, that,

00:25:03,530 --> 00:25:12,330
no matter what your technical expertise is, it's a web you can contribute, build, and

00:25:12,330 --> 00:25:13,330
share.

00:25:13,330 --> 00:25:16,960
I think that makes it a worthwhile experiment to run, not just in Beaker, but in every single

00:25:16,960 --> 00:25:17,960
browser.

00:25:17,960 --> 00:25:19,951
Thank you so much for imagining with me.

00:25:19,951 --> 00:25:20,951
[Applause].

00:25:20,951 --> 00:25:21,451

YouTube URL: https://www.youtube.com/watch?v=rJ_WvfF3FN8


