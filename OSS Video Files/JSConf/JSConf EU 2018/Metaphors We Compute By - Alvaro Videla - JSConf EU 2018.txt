Title: Metaphors We Compute By - Alvaro Videla - JSConf EU 2018
Publication date: 2018-06-26
Playlist: JSConf EU 2018
Description: 
	We think in words, we talk with words, we understand the world thanks to words. Metaphors take words to the next level explaining concepts that were escaping our understanding before. In 1980 George Lakoff revolutionised the linguistic and philosophic worlds when he studied how metaphors affect our thinking, how they influence our actions and even shape who we are. What happens with the metaphors that we use in the software Industry?

In this talk we are going to review the importance that metaphors have in our code quality, in the algorithms we choose, and the products we ship.

As a practical example, we are going to see why Microservices and Containers have been so successful in the past couple of years. We’ll try to understand why they have redefined how we package and ship products in our industry today.

OMG JSConf EU is coming back in 2019 https://2019.jsconf.eu/
Captions: 
	00:00:09,599 --> 00:00:11,780
Thank you for having having me.

00:00:11,780 --> 00:00:13,059
My name is Alvaro Videla.

00:00:13,059 --> 00:00:16,160
I'm from Uruguay.

00:00:16,160 --> 00:00:22,279
I work as an engineer on a SQL database.

00:00:22,279 --> 00:00:29,270
Please visit the websites so my manager knows I'm here!

00:00:29,270 --> 00:00:31,050
[Laughter].

00:00:31,050 --> 00:00:36,850
I wrote this article laugh year which got 100,000 visits.

00:00:36,850 --> 00:00:39,000
Basically explaining my story on how I got into programming.

00:00:39,000 --> 00:00:47,249
Ten years ago, I was basically selling food in the streets in the countryside of Uruguay.

00:00:47,249 --> 00:00:53,640
But this talk is called metaphors we compute by and you can read it on the ACMQ website,

00:00:53,640 --> 00:00:59,640
and the communications of the ACM.

00:00:59,640 --> 00:01:03,559
The year is 1980, one year earlier for me being born.

00:01:03,559 --> 00:01:09,970
There is a book published called Metaphors We Live By, so you can tell the title of my

00:01:09,970 --> 00:01:16,850
talk is nothing original, it is a copy of that ing, because this work was so influential

00:01:16,850 --> 00:01:29,159
that, after it came, metaphors we socialise by, so, this work the idea was to study the

00:01:29,159 --> 00:01:35,490
brain because they would scientists, but you cannot go and open people's brains and see

00:01:35,490 --> 00:01:36,490
what is there inside.

00:01:36,490 --> 00:01:39,780
That's kind of illegal — it tends to be.

00:01:39,780 --> 00:01:45,679
So they say, okay, try to understand the brain, by using a proxy, which is language.

00:01:45,679 --> 00:01:55,210
And they found out that metaphor isn't just a matter of poetry, like rhetoric al flourish.

00:01:55,210 --> 00:02:05,399
Metaphors dictate how we think, behave, how we perceive, and how our conceptual system

00:02:05,399 --> 00:02:08,050
is built.

00:02:08,050 --> 00:02:14,370
To give you an example, the first from their book, they say argument is war.

00:02:14,370 --> 00:02:17,970
War is a metaphor in which we frame argument.

00:02:17,970 --> 00:02:21,580
I think this is kind of in line with the previous talk.

00:02:21,580 --> 00:02:25,260
Why people have these flame wars on the internet?

00:02:25,260 --> 00:02:32,580
If we think of argument as war, we will say things like, "Your claims are indefensible."

00:02:32,580 --> 00:02:37,370
"He attacked every weak point in my argument.

00:02:37,370 --> 00:02:40,110
I demolished his argument.

00:02:40,110 --> 00:02:43,280
I never won an argument with him.

00:02:43,280 --> 00:02:46,420
His criticisms were right on target."

00:02:46,420 --> 00:02:53,630
The point being, because of this framing of as a war, we literally tried to destroy the

00:02:53,630 --> 00:02:55,260
other person.

00:02:55,260 --> 00:03:00,962
And they ask in this book, asked like what if argument will be dance which is a kind

00:03:00,962 --> 00:03:08,090
of metaphor using, and then thinking about arguments, because we need to collaborate

00:03:08,090 --> 00:03:12,740
together to reach a common goal, and then maybe a metaphor would be you should not be

00:03:12,740 --> 00:03:15,690
stepping on my toes or something like that.

00:03:15,690 --> 00:03:18,690
It will be a more collaborative thing.

00:03:18,690 --> 00:03:21,860
But I can see your favourites that you're not convinced.

00:03:21,860 --> 00:03:26,680
When people are not convinced, we talk about politics, right?

00:03:26,680 --> 00:03:34,110
There was a really nice article from the BBC called How metaphors Shape Women's Lives,

00:03:34,110 --> 00:03:42,210
but but it talked about all this glass-ceiling metaphor, what not, how you're stopped from

00:03:42,210 --> 00:03:47,010
progressing at companies, but for me, even more interesting in that article, was this

00:03:47,010 --> 00:03:54,480
research done where they grabbed a group of student, and they tell them there is a wild

00:03:54,480 --> 00:03:57,260
beast preying on the city.

00:03:57,260 --> 00:04:00,260
Crime is a wild beet preying on the city.

00:04:00,260 --> 00:04:04,700
The other they say that a virus is infecting the city.

00:04:04,700 --> 00:04:08,210
Both groups get the same data, statistics and so on.

00:04:08,210 --> 00:04:11,010
They have a different framing metaphor.

00:04:11,010 --> 00:04:22,230
When people are asked what are the solutions they propose, 75 per cent of the beast students,

00:04:22,230 --> 00:04:26,560
they wanted to put people in jail and do strong punishments.

00:04:26,560 --> 00:04:33,100
The people in the virus case wanted to help the other and help them, improve, progress,

00:04:33,100 --> 00:04:34,100
and so on.

00:04:34,100 --> 00:04:37,960
When they asked them why did you choose that kind of punishment, or why do you want to

00:04:37,960 --> 00:04:40,910
kill people, get better, and so on?

00:04:40,910 --> 00:04:43,870
They say, "Because the data says so."

00:04:43,870 --> 00:04:48,360
None of them realised they were primed with a particular metaphor.

00:04:48,360 --> 00:04:58,240
There is also a book from the 1980s called Feminism Confronts Technology, and it's really

00:04:58,240 --> 00:05:04,430
good if you want to have a deep dive into feminist point of view into technology.

00:05:04,430 --> 00:05:10,840
And it is like how the words "hard" and "soft "have been changing across the history of

00:05:10,840 --> 00:05:12,780
technology.

00:05:12,780 --> 00:05:19,000
At some point, intellectual work was not considered interesting, whatever, and the machos out

00:05:19,000 --> 00:05:26,960
there deemed the work soft, and suddenly, we have computers, so all this macho mentality

00:05:26,960 --> 00:05:34,810
brought the "hard" word into programming with these aggressive metaphors, like you need

00:05:34,810 --> 00:05:44,830
to be coding 24/7, pushing for that release, about your stamina, and so on.

00:05:44,830 --> 00:05:56,090
She said no matter how masculinity is defined, it always construes women as ill-suited to

00:05:56,090 --> 00:05:57,870
technological pursuits.

00:05:57,870 --> 00:06:06,610
Language is also important, even if how we approach different groups if you want to make,

00:06:06,610 --> 00:06:11,040
for example, technology frame there for women, friendly for women or other groups like in

00:06:11,040 --> 00:06:14,440
Latin America, for example.

00:06:14,440 --> 00:06:17,260
Still not convinced?

00:06:17,260 --> 00:06:20,290
Human resource management.

00:06:20,290 --> 00:06:25,220
If you think with this metaphor, you will think that the same way that you replace a

00:06:25,220 --> 00:06:31,120
hard drive on a server, you replace a programmer on your team, and there are many managers

00:06:31,120 --> 00:06:38,120
that think this way, but we need to understand that people are not resources, like we are

00:06:38,120 --> 00:06:44,370
not here ... [Cheering].

00:06:44,370 --> 00:06:50,460
We bring more to the world that can be replaced.

00:06:50,460 --> 00:06:56,700
We build interpersonal relationships, organise things to happen in certain times, and so

00:06:56,700 --> 00:06:57,700
on.

00:06:57,700 --> 00:07:04,320
We are very rich living beings.

00:07:04,320 --> 00:07:10,340
Finally, giving platform to racist people.

00:07:10,340 --> 00:07:15,919
There is a conference in the United States, I won't name them, that they like to have

00:07:15,919 --> 00:07:18,900
keynoters, like racist people.

00:07:18,900 --> 00:07:24,100
Last year, the keynoter, was one that considered women to be inferior, and so on.

00:07:24,100 --> 00:07:30,199
When the community came against this conference, and they criticised them for having a racist

00:07:30,199 --> 00:07:39,680
person as a keynoter, they wrote a blog post, and it was called "wrestling with inclusion"

00:07:39,680 --> 00:07:44,900
at whatever the name of that conf.

00:07:44,900 --> 00:07:47,260
I wonder "wrestling".

00:07:47,260 --> 00:07:50,090
Why do you need to wrestle with inclusion?

00:07:50,090 --> 00:07:56,320
Why can't you have a dialogue or talk with people involved in these communities?

00:07:56,320 --> 00:08:03,940
No, they decided to wrestle very, "I'm going to beat you down", right?

00:08:03,940 --> 00:08:09,470
I guess you're here to talk about computers, right?

00:08:09,470 --> 00:08:16,302
So computers: have you seen the movie "hidden figures" where this astronaut from the States,

00:08:16,302 --> 00:08:23,760
this the black women helped put a man, an American in space, the Russians had done that

00:08:23,760 --> 00:08:28,510
already?

00:08:28,510 --> 00:08:29,790
They were doing calculation.

00:08:29,790 --> 00:08:33,370
They were doing computing by hand.

00:08:33,370 --> 00:08:37,620
So these women were called computers.

00:08:37,620 --> 00:08:46,029
But at some point, we had this very fast electronic machine that was doing what they were doing

00:08:46,029 --> 00:08:52,660
really fast, so how do we call those things that do what these people are already doing,

00:08:52,660 --> 00:08:53,660
okay?

00:08:53,660 --> 00:08:54,660
Automatic computers.

00:08:54,660 --> 00:09:00,220
The automatic word was dropped, and now we just call them computers.

00:09:00,220 --> 00:09:01,220
Why is this?

00:09:01,220 --> 00:09:04,620
Because metaphors, they enable understanding.

00:09:04,620 --> 00:09:10,860
When we don't know how to talk about something, we probably will use some sort of a metaphor.

00:09:10,860 --> 00:09:19,720
I don't remember yesterday if you give me a second, I was watching a talk here about

00:09:19,720 --> 00:09:33,749
simulation for blind people, he said additional screen real estate that you account for.

00:09:33,749 --> 00:09:38,129
Now there is real estate that we account for.

00:09:38,129 --> 00:09:43,850
This is a metaphorical way of understanding what is going on that is just the screen is

00:09:43,850 --> 00:09:47,690
bigger and we need to do something with that bigger screen.

00:09:47,690 --> 00:09:55,660
But when I say the metaphor to enable understanding, the typical metaphor is from Shakespeare,

00:09:55,660 --> 00:09:59,490
that says Juliet is like the sun.

00:09:59,490 --> 00:10:04,970
And we need to understand that metaphors aren't a one-to-one mapping between source domain

00:10:04,970 --> 00:10:07,149
and target domain.

00:10:07,149 --> 00:10:13,910
Metaphors just illuminate some areas so we understand what is meant but Juliet means

00:10:13,910 --> 00:10:17,950
for Romeo in this case, his life depends on her.

00:10:17,950 --> 00:10:22,259
He resolves around her all day, he thought, whatever.

00:10:22,259 --> 00:10:24,290
She is the light of his life.

00:10:24,290 --> 00:10:31,639
We don't think Juliet gave him skin cancer because we are smart enough to understand

00:10:31,639 --> 00:10:37,910
that metaphors are not a one-to-one mapping, like Juliet is not an atomic bomb walking

00:10:37,910 --> 00:10:40,300
around Italy, right?

00:10:40,300 --> 00:10:51,240
There is a book by a guy I think from either the Netherlands or Belgium, called the Geometry

00:10:51,240 --> 00:10:54,809
of Meaning, semantics based on conceptual spaces.

00:10:54,809 --> 00:11:03,639
Long story short: somebody got paid in Europe for doing geometry research of language.

00:11:03,639 --> 00:11:05,560
These things in South America don't happen.

00:11:05,560 --> 00:11:11,940
We try to make sure that our cows make better meat, basically!

00:11:11,940 --> 00:11:16,889
In that book, it is really interesting because he said that metaphorical mappings preserve

00:11:16,889 --> 00:11:22,420
the cognitive topology of the source domain in a way that is consistent with inherent

00:11:22,420 --> 00:11:29,929
structure of the target domain, so, source, sun, target, Juliet.

00:11:29,929 --> 00:11:36,000
Metaphor transfers information from one conceptual domain to another, and what is transferred

00:11:36,000 --> 00:11:39,450
is a pattern rather than domain-specific information.

00:11:39,450 --> 00:11:45,689
Juliet is not giving you cancer, and a metaphor can thus be used to identify structure in

00:11:45,689 --> 00:11:49,529
a domain that will not have been discovered otherwise.

00:11:49,529 --> 00:11:55,139
So that is the power that metaphor brings us when we need to understand how the world

00:11:55,139 --> 00:11:56,300
actually works.

00:11:56,300 --> 00:12:03,800
And, for me, I stole this animation from that link town there, this is what we are doing

00:12:03,800 --> 00:12:05,709
in a way with our brain, with metaphors.

00:12:05,709 --> 00:12:11,940
We're doing like a problem that we solve constantly when we're able to apply a method in a context

00:12:11,940 --> 00:12:14,259
that has nothing to do with it.

00:12:14,259 --> 00:12:20,720
This is how metaphors create new knowledge.

00:12:20,720 --> 00:12:26,829
But the problem with metaphors is that they also obscure understanding.

00:12:26,829 --> 00:12:34,699
Back in the 18th century when they tried to create the telegraph, the metaphor was the

00:12:34,699 --> 00:12:37,199
"far writing" tele graph.

00:12:37,199 --> 00:12:41,399
Because of this metaphor, they were so tied to the metaphor, this they would create a

00:12:41,399 --> 00:12:46,860
device that would write remotely instead of [unclear] having something like Morse code

00:12:46,860 --> 00:12:56,279
or whatever, because Morse code was not a thing, thanks to — they started encoding

00:12:56,279 --> 00:13:03,269
on language, our language, in a different code that is not the one that we use for speaking,

00:13:03,269 --> 00:13:09,319
humanity realised like okay, we can trust that we talk in a different way before Morse

00:13:09,319 --> 00:13:17,370
code, before telegraph, we hadn't realised as a species or society that we could do these

00:13:17,370 --> 00:13:20,160
things with language.

00:13:20,160 --> 00:13:31,170
In this book The Shadows said sometimes our tools do what we tell them to, but otherwise,

00:13:31,170 --> 00:13:35,259
we adapt ourselves to our tool's requirements.

00:13:35,259 --> 00:13:36,749
We need to be careful with this.

00:13:36,749 --> 00:13:43,110
We're today adapted to having a phone and Twitter every day, let's say.

00:13:43,110 --> 00:13:46,980
Or back in the day when people invented this in Switzerland.

00:13:46,980 --> 00:13:51,410
I'm sure it wasn't invented in Switzerland but I live there so I need to say these kinds

00:13:51,410 --> 00:13:53,279
of things!

00:13:53,279 --> 00:13:59,589
Before people didn't live by the second or the minute, whenever the church bell rang

00:13:59,589 --> 00:14:04,879
before the going to mass, or whatever this be , they knew they had to gather at the town

00:14:04,879 --> 00:14:11,430
square, or something like that, but it wasn't like they were clocking every single thing.

00:14:11,430 --> 00:14:17,089
This is also, for example, I learned in London, like this is why they know the exact locations

00:14:17,089 --> 00:14:21,180
when Jack the Ripper was doing things because there are so many churches in London, that

00:14:21,180 --> 00:14:25,929
they were hearing the bells, so after this many bells, Jack the Ripper did something

00:14:25,929 --> 00:14:26,929
somewhere.

00:14:26,929 --> 00:14:29,399
That was a way of tracking time back then.

00:14:29,399 --> 00:14:37,410
Today, we're totally adapted to having this super precise information.

00:14:37,410 --> 00:14:43,029
Metaphors are the tools of thought, so, going back to the beginning of the talk, depending

00:14:43,029 --> 00:14:47,930
on the metaphors we use, it's how we understand the world around us.

00:14:47,930 --> 00:14:53,679
And also, how we can understand code.

00:14:53,679 --> 00:15:08,600
This paper, no-one knows who wrote this paper, it would be to me is the best unknown paper.

00:15:08,600 --> 00:15:13,350
It is from back in the 1960s, if I'm not mistaken.

00:15:13,350 --> 00:15:22,640
And they say to programme is to write to another parameter about our solution to a problem.

00:15:22,640 --> 00:15:28,959
So programming is forget about the computer, it's just a tool, what we are doing with programmes

00:15:28,959 --> 00:15:33,089
is communicating ideas, communicating solutions.

00:15:33,089 --> 00:15:38,259
And, as they say also in the structure and interpretation of computer programmes, programmes

00:15:38,259 --> 00:15:45,070
must be written for people to read, and only incidentally for machines to execute.

00:15:45,070 --> 00:15:46,809
And this is not something new.

00:15:46,809 --> 00:15:56,160
If we go back to the 1955/54, David Wheeler from England, he invented the sub routine,

00:15:56,160 --> 00:15:59,769
because that's what people in do in England, they invent sub routines and computers, stuff

00:15:59,769 --> 00:16:01,829
like that.

00:16:01,829 --> 00:16:07,279
Anyway, at the end of the paper, he says that there is no need for the sub routine when

00:16:07,279 --> 00:16:15,089
you have assembly code, because the above remarks might be summarised by saying sub

00:16:15,089 --> 00:16:21,489
routines are useful but not absolutely necessary, and that the thing to be borne in mind when

00:16:21,489 --> 00:16:27,730
won instructing them is simplicity of use, correctness of code.

00:16:27,730 --> 00:16:31,889
All complexity shall be, if possible, be buried out of site.

00:16:31,889 --> 00:16:33,839
Yes, there is no need for a sub routine.

00:16:33,839 --> 00:16:35,800
There is no need for refactoring code.

00:16:35,800 --> 00:16:41,089
But because we are communicating between people, we want make sure we understand what they

00:16:41,089 --> 00:16:42,670
Waugh in that particular problem.

00:16:42,670 --> 00:16:50,730
By the way, this woman here, this is a picture from a book that David Woolly wrote because

00:16:50,730 --> 00:16:58,910
he wrote the first programming back in 1956 maybe or earlier, and this is the first programmer

00:16:58,910 --> 00:17:02,819
ever pictured in a programming book.

00:17:02,819 --> 00:17:10,960
So there you go with your — anyway — machitos are the only ones programming.

00:17:10,960 --> 00:17:16,189
If you look at the text below.

00:17:16,189 --> 00:17:20,470
Look at the text back then that were not metaphors.

00:17:20,470 --> 00:17:29,740
She has a library of tapes where the sub routines are punched, that was a natural library of

00:17:29,740 --> 00:17:33,830
sub routines like some paper thing that they will punch into the machine.

00:17:33,830 --> 00:17:36,910
I don't even know.

00:17:36,910 --> 00:17:39,690
Everything we talk is metaphorical in a way.

00:17:39,690 --> 00:17:42,210
You will see more later.

00:17:42,210 --> 00:17:45,420
But metaphors and code.

00:17:45,420 --> 00:17:55,070
In code, I say that types are the characters telling the story of your programmes, but

00:17:55,070 --> 00:18:04,250
for the Haskell people cheering behind, chillax, because I'm not talking about those — data

00:18:04,250 --> 00:18:06,590
types by Barbara Liskov.

00:18:06,590 --> 00:18:14,790
She had to fight, you know this that we have today on, if it was Twitter times, she was

00:18:14,790 --> 00:18:24,100
full of those telling her that you don't need, the construction was wrong, because they were

00:18:24,100 --> 00:18:33,460
already in the post-war of go-to, and they managed to move away from go-do in 1964, and

00:18:33,460 --> 00:18:42,440
so on, so in 1974, but we also can do instruction, and people were all fighting against her ideas.

00:18:42,440 --> 00:18:46,679
But the problem is is that if we don't have types, we just have operations on a stream

00:18:46,679 --> 00:18:48,269
of bytes.

00:18:48,269 --> 00:18:52,510
So let's talk about choosing the right data structure.

00:18:52,510 --> 00:18:56,919
We have a problem where we needed, for example, to count or to keep somewhere all the people

00:18:56,919 --> 00:19:00,600
that came to the JSConf EU.

00:19:00,600 --> 00:19:04,100
You can use an array that works perfectly.

00:19:04,100 --> 00:19:08,720
Put everybody inside there — fine.

00:19:08,720 --> 00:19:17,690
If you use a metaphor that has a meaning, it is telling you that that bunch of whatever

00:19:17,690 --> 00:19:24,179
it is, in this case of users, those users have to be unique, so just like changing the

00:19:24,179 --> 00:19:28,990
data type, you're telling me a lot of information about how you solve your programme.

00:19:28,990 --> 00:19:32,559
If you use a living list, you're telling me you can traverse this in this way but you

00:19:32,559 --> 00:19:35,700
can do inserts however you want.

00:19:35,700 --> 00:19:40,570
If you have a queue, you're telling me, first in, first out.

00:19:40,570 --> 00:19:44,720
Stuck the reverse operation.

00:19:44,720 --> 00:19:51,230
Because a programme, explanatory power, is the measure of its own elegance.

00:19:51,230 --> 00:19:58,059
If your programme can't explain what we are trying to do, can't satisfy the initial goal.

00:19:58,059 --> 00:20:06,419
The data structures, they have explanatory power that can give us cognitive lips.

00:20:06,419 --> 00:20:08,510
For example, scaling.

00:20:08,510 --> 00:20:15,160
We want to be able to serve food based on the order in which people arrive at the counter,

00:20:15,160 --> 00:20:20,770
and blah, and their country's food, maybe we need to bring another person to — too

00:20:20,770 --> 00:20:24,720
boring, but if we start talking about queuing theory, we understand this is a problem in

00:20:24,720 --> 00:20:29,920
queuing theory, not only we have a bunch of languages to talk about that problem, there's

00:20:29,920 --> 00:20:37,420
a whole theory of queuing that was developed by airlines back in the 1930s for telecommunications,

00:20:37,420 --> 00:20:43,789
and we can base analysis of the problem on actual mathematical theory.

00:20:43,789 --> 00:20:47,320
The same here: how do I get from here to Tegel Airport?

00:20:47,320 --> 00:20:51,309
Number one, don't take the bus!

00:20:51,309 --> 00:20:57,299
You can try to guess and try many things, but at some point, you will know, you have

00:20:57,299 --> 00:21:00,230
a graph theory problem here.

00:21:00,230 --> 00:21:04,020
With there, we have the mathematics to solve this.

00:21:04,020 --> 00:21:10,919
By the way, not only that map is not a map of the territory — if you have heard that

00:21:10,919 --> 00:21:17,120
sentence — the graph is a metaphor of that territory, and that graph is enabling you

00:21:17,120 --> 00:21:23,179
to do things to the territory, and also it's for forbidding you to do things with the territory,

00:21:23,179 --> 00:21:31,580
so that metaphor of the graph in graph theory and maps is what I was saying before: it has

00:21:31,580 --> 00:21:33,580
constraining powers.

00:21:33,580 --> 00:21:41,380
But I think the most interesting example from the replication.

00:21:41,380 --> 00:21:49,200
They tried to build an algorithm to spread data using rumour-mongering, basically.

00:21:49,200 --> 00:21:53,980
I am a computer, I have some data, I say to this computer, and this other computer, and

00:21:53,980 --> 00:21:58,980
then this computer spread the rumour to other computers, and so on, like a Latin American

00:21:58,980 --> 00:22:01,830
TV novella, the way to spread rumours.

00:22:01,830 --> 00:22:06,059
This is the way we spread the word.

00:22:06,059 --> 00:22:14,210
The problem is really easy to explain with this metaphor but it is really hard to reason

00:22:14,210 --> 00:22:19,090
of about the correct ness of the algorithms.

00:22:19,090 --> 00:22:32,990
But they saw that this also mapped to epidemics, and, an epidemic, there is a book that is

00:22:32,990 --> 00:22:39,780
the mathematical fear from the 1940s and 1950s, using the math in that book to prove their

00:22:39,780 --> 00:22:45,110
algorithm will spread the data to all those in the replication because they understood

00:22:45,110 --> 00:22:50,100
another metaphor, the same way an epidemic goes through a population is how you can send

00:22:50,100 --> 00:22:52,900
data through a bunch of nodes.

00:22:52,900 --> 00:22:58,399
And is everything a metaphor, then, like this is what you're trying to say?

00:22:58,399 --> 00:22:59,669
Yes.

00:22:59,669 --> 00:23:07,550
Actually, when I was watching this film, I heard her saying, "Metaphors be with you"

00:23:07,550 --> 00:23:11,159
because I was so in this thing.

00:23:11,159 --> 00:23:14,179
Did she really say metaphors be with you?

00:23:14,179 --> 00:23:15,309
Yes, she did!

00:23:15,309 --> 00:23:16,309
Everything is a metaphor.

00:23:16,309 --> 00:23:20,140
I don't believe you, I just read one slide, because I don't have much time.

00:23:20,140 --> 00:23:23,740
This is the distributed system literature.

00:23:23,740 --> 00:23:30,789
Whenever nosed needs to agree on a common value, we start a consensus algorithm to — there's

00:23:30,789 --> 00:23:36,010
usually a leader process that takes care of making the final decision based on the vote

00:23:36,010 --> 00:23:38,399
it was it has received from its peers.

00:23:38,399 --> 00:23:44,350
We send messages on a channel, the channel gets congested, too much traffic, we get bottlenecks,

00:23:44,350 --> 00:23:50,850
and so on, and end up with partitions, and the response of the computer — is it dead?

00:23:50,850 --> 00:23:55,090
This is all metaphorical language, and there are more metaphors there than I want to bore

00:23:55,090 --> 00:23:56,900
you with.

00:23:56,900 --> 00:24:02,570
Yes, when we don't know how to explain something, we use metaphorical language all the time.

00:24:02,570 --> 00:24:09,820
Yes, it is time that we don't talk any more about master-slave.

00:24:09,820 --> 00:24:11,120
Take it out.

00:24:11,120 --> 00:24:15,539
It's very, very easy!

00:24:15,539 --> 00:24:16,639
[Applause].

00:24:16,639 --> 00:24:19,730
Let's talk about passwords.

00:24:19,730 --> 00:24:23,669
You know this one, right?

00:24:23,669 --> 00:24:25,429
Containers.

00:24:25,429 --> 00:24:28,940
I was wondering why containers picked up so much?

00:24:28,940 --> 00:24:34,820
If we think about containers like the actual physical cache, it is a standard thing that

00:24:34,820 --> 00:24:38,159
can be shipped anywhere, fits on trains, ships, and trucks.

00:24:38,159 --> 00:24:40,920
You can stack and reuse them, and so on.

00:24:40,920 --> 00:24:47,730
It is a very good language to speak about this thing I'm trying to build or sell you.

00:24:47,730 --> 00:24:53,600
I wonder at some point if people will have a start-up to recover from shipping containers,

00:24:53,600 --> 00:24:55,549
I don't know.

00:24:55,549 --> 00:25:00,740
But another password is microservices.

00:25:00,740 --> 00:25:09,769
When I read this blog post ... isolation collaboration, small is better, big is cumbersome, David

00:25:09,769 --> 00:25:14,580
versus Goliath, whatever, when you read the next, you say this is Erlang.

00:25:14,580 --> 00:25:22,950
I don't know if any of you worked in Erlang?

00:25:22,950 --> 00:25:27,500
But, I was like, these guys literally stole everything from he recall Lang and gave them

00:25:27,500 --> 00:25:33,980
a new name in the very last paragraph on the footnote, it says, "In another direction,

00:25:33,980 --> 00:25:38,379
one could argue that microservices are the same thing as the Erlang model but applied

00:25:38,379 --> 00:25:42,909
to an enterprise application context" are you crying little Erlang boy because I don't

00:25:42,909 --> 00:25:43,919
use Erlang?

00:25:43,919 --> 00:25:48,769
My yes is what it Erlang's elevators' pitch.

00:25:48,769 --> 00:25:54,590
These are the metaphors in Erlang: kill children, you spawn children.

00:25:54,590 --> 00:26:00,620
You have supervisors on those children, and the actor model, what is even the actor model?

00:26:00,620 --> 00:26:05,010
Imagine trying to sell Erlang with this type of vocabulary.

00:26:05,010 --> 00:26:06,840
Very hard.

00:26:06,840 --> 00:26:14,860
First, get people to understand things, and then explain how things actually work.

00:26:14,860 --> 00:26:21,200
For example, RabbitMQ, a server, also a developer advocate.

00:26:21,200 --> 00:26:26,250
When people ask me this question, I say no, it's not, it's a Q server.

00:26:26,250 --> 00:26:29,220
A message is a higher attraction than jobs.

00:26:29,220 --> 00:26:37,909
You can do — it is a job server, yes, understand rabbit, with that metaphor, and then we can

00:26:37,909 --> 00:26:43,070
go deeper to see what it actually is.

00:26:43,070 --> 00:26:50,230
Conclusion: we need to master the art of metaphor selection, we need to master the art of meaning

00:26:50,230 --> 00:26:59,820
amplification, and, finally, our programme is a metaphor for the solution we found.

00:26:59,820 --> 00:27:04,509
If you want references, some of the books I read, some of the pictures I stole from

00:27:04,509 --> 00:27:21,360
the internet.

00:27:21,360 --> 00:27:22,360
Thank you.

00:27:22,360 --> 00:27:23,840
[Cheering and Applause].

00:27:23,840 --> 00:27:29,879
I want to say thanks to the organisers, because it's not objective that you see a conference

00:27:29,879 --> 00:27:35,330
where Latinos are not only serving food, they are speaking, they are there in the crowd,

00:27:35,330 --> 00:27:36,330
so, thanks!

00:27:36,330 --> 00:27:36,331

YouTube URL: https://www.youtube.com/watch?v=JrjbX-KX6wQ


