Title: Landing On The Desktop with Electron - JS Monthly - February 2020
Publication date: 2020-03-09
Playlist: JS Monthly London
Description: 
	Landing on the Desktop with Electron // Nathaniel Okenwa

As web developers, it can be easy to feel handcuffed to the browser. Thankfully, Electron enables you to use HTML, CSS, and JavaScript to create cross-platform desktop applications. By the end of this talk, youâ€™ll have a basic understanding of how to set up your first desktop app.

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:05,879
hi thank you for coming everyone without

00:00:02,850 --> 00:00:07,919
an audience I would be speaking to empty

00:00:05,879 --> 00:00:09,269
air so you've all made this possible for

00:00:07,919 --> 00:00:12,059
me to be here thanks again to the

00:00:09,269 --> 00:00:14,070
organizers and it's great to be here so

00:00:12,059 --> 00:00:17,279
I'm going to be talking about landing on

00:00:14,070 --> 00:00:19,859
the desktop with electron and I'll just

00:00:17,279 --> 00:00:20,939
tell you a little bit about the level

00:00:19,859 --> 00:00:23,400
that we're gonna be going I'm not going

00:00:20,939 --> 00:00:25,439
to necessarily dive too deeply into

00:00:23,400 --> 00:00:27,210
advanced code I just because I know

00:00:25,439 --> 00:00:29,070
there's various levels of JavaScript

00:00:27,210 --> 00:00:31,230
developers in the room I'm going to give

00:00:29,070 --> 00:00:33,630
us an overview of what electron is how I

00:00:31,230 --> 00:00:35,430
came in contact with it and hopefully

00:00:33,630 --> 00:00:37,500
give you with enough that if you want to

00:00:35,430 --> 00:00:40,710
explore it you can go around and play

00:00:37,500 --> 00:00:42,660
around with it yourself so a little bit

00:00:40,710 --> 00:00:45,390
about me my name is nathaniel ken watt

00:00:42,660 --> 00:00:47,340
and i am a developer evangelist at a

00:00:45,390 --> 00:00:48,840
company called Swilly oh just out of

00:00:47,340 --> 00:00:52,379
curiosity how many people have heard

00:00:48,840 --> 00:00:54,210
about with you okay fair few for the few

00:00:52,379 --> 00:00:57,539
of you in the room that maybe don't know

00:00:54,210 --> 00:00:59,309
about video we are a cloud communication

00:00:57,539 --> 00:01:02,789
platform and we have different tools

00:00:59,309 --> 00:01:04,830
api's SDKs all sorts of things to give

00:01:02,789 --> 00:01:07,049
developers the tools that they need to

00:01:04,830 --> 00:01:09,900
communicate with users if that's sending

00:01:07,049 --> 00:01:11,820
a text receiving a reply no tax building

00:01:09,900 --> 00:01:14,790
a smart bot all of those things you can

00:01:11,820 --> 00:01:16,500
do with trivia I'm not necessarily here

00:01:14,790 --> 00:01:18,750
to talk just about video but you may

00:01:16,500 --> 00:01:21,090
hear it will come up at points and you

00:01:18,750 --> 00:01:23,040
can follow me online at chatterbox coder

00:01:21,090 --> 00:01:24,450
and if you come over and talk to me

00:01:23,040 --> 00:01:27,570
during the breaks you will find out why

00:01:24,450 --> 00:01:30,570
I'm called chatterbox code on but I

00:01:27,570 --> 00:01:33,479
joined Twitter seven months ago now

00:01:30,570 --> 00:01:35,640
who's coming and one of the first things

00:01:33,479 --> 00:01:37,829
that I was asked to do was to help work

00:01:35,640 --> 00:01:40,020
on this Twitter your quest which is a

00:01:37,829 --> 00:01:42,329
game that they released last year which

00:01:40,020 --> 00:01:44,460
teaches basically fancy documentation

00:01:42,329 --> 00:01:47,070
it's a game that you play through and it

00:01:44,460 --> 00:01:48,420
teaches you how to use Twitter and at

00:01:47,070 --> 00:01:50,310
first I was super excited because

00:01:48,420 --> 00:01:53,159
Twitter your quest building a game this

00:01:50,310 --> 00:01:55,380
is so cool and then I was terrified the

00:01:53,159 --> 00:01:58,560
reason why I was terrified or because of

00:01:55,380 --> 00:02:01,170
these logos over here I am a JavaScript

00:01:58,560 --> 00:02:01,530
developer these logos means something

00:02:01,170 --> 00:02:04,380
else

00:02:01,530 --> 00:02:06,360
they are that meant that we were going

00:02:04,380 --> 00:02:08,759
to be building a desktop application and

00:02:06,360 --> 00:02:11,099
a desktop application because we are

00:02:08,759 --> 00:02:13,020
going to have lots of people using the

00:02:11,099 --> 00:02:13,710
application playing the game we needed

00:02:13,020 --> 00:02:17,220
to have it on

00:02:13,710 --> 00:02:19,710
Windows Linux and Mac and I was even

00:02:17,220 --> 00:02:21,870
more nervous I had no idea how we were

00:02:19,710 --> 00:02:23,190
going to pull this off well I understood

00:02:21,870 --> 00:02:24,960
how they were gonna pull this off I

00:02:23,190 --> 00:02:29,160
didn't know how I was going to be a part

00:02:24,960 --> 00:02:31,560
of that and what I know is web

00:02:29,160 --> 00:02:34,350
technologies now the good thing about

00:02:31,560 --> 00:02:36,030
web technologies is they are well at

00:02:34,350 --> 00:02:39,090
least in my opinion this is what I know

00:02:36,030 --> 00:02:41,310
and they are quite there's so many

00:02:39,090 --> 00:02:44,490
resources about them for you to learn

00:02:41,310 --> 00:02:47,580
how to use them and that's one of the

00:02:44,490 --> 00:02:50,490
widest platforms around the web everyone

00:02:47,580 --> 00:02:52,140
uses it everywhere as opposed to desktop

00:02:50,490 --> 00:02:55,740
applications where each of these

00:02:52,140 --> 00:02:57,210
different os's have very strict rules

00:02:55,740 --> 00:02:59,420
and guidelines of how you should build

00:02:57,210 --> 00:03:02,280
on each of them very very differently

00:02:59,420 --> 00:03:04,590
but this is where electron steps in and

00:03:02,280 --> 00:03:07,410
electron allows us to use those web

00:03:04,590 --> 00:03:09,630
technologies that we know and love HTML

00:03:07,410 --> 00:03:12,030
CSS and JavaScript and use those to

00:03:09,630 --> 00:03:14,460
build cross-platform desktop

00:03:12,030 --> 00:03:16,050
applications which means that a web

00:03:14,460 --> 00:03:20,070
developer can now build an application

00:03:16,050 --> 00:03:23,640
that is downloaded on a user's computer

00:03:20,070 --> 00:03:26,400
and it can run on a Mac on a Linux and

00:03:23,640 --> 00:03:28,410
on a Windows and what's really cool

00:03:26,400 --> 00:03:30,750
about that is that electron does a lot

00:03:28,410 --> 00:03:32,970
of the hard work for you integrating

00:03:30,750 --> 00:03:35,220
with all of those different os's

00:03:32,970 --> 00:03:37,050
and gives you a lot of functionality

00:03:35,220 --> 00:03:39,210
that you may not have from the browser

00:03:37,050 --> 00:03:42,060
and I'll talk a little bit about that

00:03:39,210 --> 00:03:44,640
but first let's talk about how electron

00:03:42,060 --> 00:03:47,610
came to be and we're gonna talk about

00:03:44,640 --> 00:03:50,010
what electron is let's go back in time

00:03:47,610 --> 00:03:51,780
and back to the future too I'm gonna

00:03:50,010 --> 00:03:54,420
tell you a story that you probably have

00:03:51,780 --> 00:03:56,130
already heard but to the wonderful to

00:03:54,420 --> 00:04:00,570
one of my favorite years it is my number

00:03:56,130 --> 00:04:03,420
one year for literally Lion King the

00:04:00,570 --> 00:04:06,660
original Lion King was the top of the

00:04:03,420 --> 00:04:09,360
box office the PlayStation had just been

00:04:06,660 --> 00:04:11,250
released again my favorite console and a

00:04:09,360 --> 00:04:13,860
small company was formed in a garage

00:04:11,250 --> 00:04:15,600
called amazon.com but another really

00:04:13,860 --> 00:04:16,950
important thing especially to all of us

00:04:15,600 --> 00:04:21,510
JavaScript developers in the room

00:04:16,950 --> 00:04:23,520
started in 1994 and Netscape came out

00:04:21,510 --> 00:04:27,090
with JavaScript the first iteration of

00:04:23,520 --> 00:04:27,720
JavaScript fast forward today most of us

00:04:27,090 --> 00:04:30,440
are used

00:04:27,720 --> 00:04:33,060
chromium or chromium brace based browser

00:04:30,440 --> 00:04:36,390
and a lot of JavaScript in the world

00:04:33,060 --> 00:04:39,840
goes through this to render things on

00:04:36,390 --> 00:04:42,300
user screens but also in 2009 another

00:04:39,840 --> 00:04:45,360
JavaScript innovation happened we had no

00:04:42,300 --> 00:04:47,880
Jess and no js' suddenly released us

00:04:45,360 --> 00:04:49,700
JavaScript developers from only the

00:04:47,880 --> 00:04:51,600
browser and we could actually build

00:04:49,700 --> 00:04:53,520
applications that would live on

00:04:51,600 --> 00:04:57,000
computers and because of that a lot of

00:04:53,520 --> 00:05:00,600
server-side application and stations of

00:04:57,000 --> 00:05:04,200
node using JavaScript spun up now a

00:05:00,600 --> 00:05:05,550
couple of years ago forgotten a word and

00:05:04,200 --> 00:05:07,890
I don't have my speaking notes with me

00:05:05,550 --> 00:05:10,380
right now the exact year but a couple of

00:05:07,890 --> 00:05:11,190
years ago github were working on a new

00:05:10,380 --> 00:05:14,280
editor

00:05:11,190 --> 00:05:16,200
Adam how many of you may have used Adam

00:05:14,280 --> 00:05:18,690
for a short while okay good most of us

00:05:16,200 --> 00:05:20,520
and when they were building a team they

00:05:18,690 --> 00:05:22,520
wanted to be able to build it once and

00:05:20,520 --> 00:05:24,870
deploy it over many different

00:05:22,520 --> 00:05:28,230
architectures so again on Windows on Mac

00:05:24,870 --> 00:05:31,830
and on Linux and what they did was they

00:05:28,230 --> 00:05:35,390
combined a node runtime and a chromium

00:05:31,830 --> 00:05:38,669
engine in this beautiful marriage and

00:05:35,390 --> 00:05:43,169
Noah and chromium had a child and the

00:05:38,669 --> 00:05:46,290
child was electron and and that's how

00:05:43,169 --> 00:05:48,390
electron was born and electron is used

00:05:46,290 --> 00:05:51,180
quite widely around the world how many

00:05:48,390 --> 00:05:53,730
of you maybe use Vyas code you use

00:05:51,180 --> 00:05:56,790
electron how many of you have the slack

00:05:53,730 --> 00:05:58,770
desktop client you use electron those

00:05:56,790 --> 00:06:01,050
things are built by a lecturer are built

00:05:58,770 --> 00:06:04,050
using electron and it can build some

00:06:01,050 --> 00:06:08,640
really powerful and tools and desktop

00:06:04,050 --> 00:06:12,720
applications so let's talk about how it

00:06:08,640 --> 00:06:15,510
works so electron is built out of three

00:06:12,720 --> 00:06:18,840
main JavaScript processes right so

00:06:15,510 --> 00:06:20,850
electron has a main process and the main

00:06:18,840 --> 00:06:23,070
process does a lot of the heavy lifting

00:06:20,850 --> 00:06:26,060
and the great thing about the main

00:06:23,070 --> 00:06:29,970
process is it has access to all of the

00:06:26,060 --> 00:06:31,830
computers api's or the api's on from

00:06:29,970 --> 00:06:34,830
node that you can have with node and

00:06:31,830 --> 00:06:36,870
then you also have renderer processes

00:06:34,830 --> 00:06:39,720
now these renderer processes are

00:06:36,870 --> 00:06:41,400
attached to different views or really

00:06:39,720 --> 00:06:44,759
and truly they're just attached to

00:06:41,400 --> 00:06:48,150
print HTML files you have a HTML file

00:06:44,759 --> 00:06:50,400
and you have some CSS as well and in the

00:06:48,150 --> 00:06:53,400
java scripts that you would have along

00:06:50,400 --> 00:06:55,800
with that HTML file will represent a

00:06:53,400 --> 00:06:57,840
renderer process now the render process

00:06:55,800 --> 00:07:00,479
in the main process can talk to each

00:06:57,840 --> 00:07:02,910
other and pass information through in

00:07:00,479 --> 00:07:04,770
the renderer process you have all of the

00:07:02,910 --> 00:07:07,139
api's that you would usually have on a

00:07:04,770 --> 00:07:09,360
web and in the main process you have all

00:07:07,139 --> 00:07:11,160
of the api's that you haven't note there

00:07:09,360 --> 00:07:13,139
are some extra functionalities to allow

00:07:11,160 --> 00:07:15,389
you to access node from here but you

00:07:13,139 --> 00:07:19,560
need to do some extra configuration as

00:07:15,389 --> 00:07:21,780
well and I just forgot about these

00:07:19,560 --> 00:07:25,590
lights and now I'm gonna do the most

00:07:21,780 --> 00:07:28,260
basic demo using a veteran so I'm going

00:07:25,590 --> 00:07:30,030
to show you some code that I have got

00:07:28,260 --> 00:07:33,990
that's the wrong one I need this one

00:07:30,030 --> 00:07:36,270
okay so this is the main j/s filed I

00:07:33,990 --> 00:07:40,949
spoke about and this is for the most

00:07:36,270 --> 00:07:42,750
simple electronic ation we require app

00:07:40,949 --> 00:07:45,150
and browsers that we bring in app and

00:07:42,750 --> 00:07:48,590
browser window and what we do is when we

00:07:45,150 --> 00:07:51,900
start when we start our electron process

00:07:48,590 --> 00:07:54,180
we are going to say that whenever it is

00:07:51,900 --> 00:07:57,150
ready we want to run a create window

00:07:54,180 --> 00:07:59,639
create window is going to create a

00:07:57,150 --> 00:08:02,190
browser window and it's going to load a

00:07:59,639 --> 00:08:04,500
file here we've got source index dot

00:08:02,190 --> 00:08:07,620
HTML I'm gonna go over here and show you

00:08:04,500 --> 00:08:09,750
index dot HTML and here it's just saying

00:08:07,620 --> 00:08:12,150
hello Jace month for the hope all is

00:08:09,750 --> 00:08:14,250
well I have got a button that I'm gonna

00:08:12,150 --> 00:08:17,699
talk about later and then we have a

00:08:14,250 --> 00:08:21,419
script this script is a renderer JSF arm

00:08:17,699 --> 00:08:24,650
and I've got this running over here and

00:08:21,419 --> 00:08:27,840
you can see it is an actual window and

00:08:24,650 --> 00:08:31,380
you've got your HTML hello Jonas monthly

00:08:27,840 --> 00:08:36,089
and hope all is well and that's how you

00:08:31,380 --> 00:08:38,729
can get HTML running on electrum but

00:08:36,089 --> 00:08:41,700
then with the renderer Jess we have

00:08:38,729 --> 00:08:42,750
access to certain API so and one of the

00:08:41,700 --> 00:08:47,850
ones that I just want to demonstrate

00:08:42,750 --> 00:08:51,660
here is the notification API so I can

00:08:47,850 --> 00:08:53,160
create a new notification and give it

00:08:51,660 --> 00:08:54,940
some information and say that whenever

00:08:53,160 --> 00:08:57,510
someone clicks

00:08:54,940 --> 00:09:03,280
should trigger this notification now

00:08:57,510 --> 00:09:06,070
this is actually a html5 API and I'm

00:09:03,280 --> 00:09:10,930
using it from renderer j/s which is

00:09:06,070 --> 00:09:14,880
simple I could also write it in the main

00:09:10,930 --> 00:09:17,860
dot yes and use the computers native

00:09:14,880 --> 00:09:20,260
native notification API if that makes

00:09:17,860 --> 00:09:22,360
sense and what that would do is using an

00:09:20,260 --> 00:09:26,050
electron electron will still produce the

00:09:22,360 --> 00:09:28,720
same notification and just a little demo

00:09:26,050 --> 00:09:31,990
and this is why I should not have Do Not

00:09:28,720 --> 00:09:34,240
Disturb off the reason I know that

00:09:31,990 --> 00:09:36,520
that's the problem is because once I did

00:09:34,240 --> 00:09:38,560
a live demo and it took me five SEC like

00:09:36,520 --> 00:09:41,200
five minutes to realize that Do Not

00:09:38,560 --> 00:09:45,280
Disturb was blocking the notification so

00:09:41,200 --> 00:09:47,740
this is the most simple of api's however

00:09:45,280 --> 00:09:49,810
sorry the most simple of examples of how

00:09:47,740 --> 00:09:51,490
you can use electron however electron

00:09:49,810 --> 00:09:54,940
has so many other api is and i'm going

00:09:51,490 --> 00:09:57,130
to show you some of them so electron

00:09:54,940 --> 00:10:00,190
have released an electron app that shows

00:09:57,130 --> 00:10:05,530
you all of their are very pis so you can

00:10:00,190 --> 00:10:09,580
create new windows you can create new

00:10:05,530 --> 00:10:12,820
windows as you go along view demo i'm

00:10:09,580 --> 00:10:15,640
going to escape that you can handle

00:10:12,820 --> 00:10:18,580
window crashes you can customize the

00:10:15,640 --> 00:10:20,440
menus that come and if you think about a

00:10:18,580 --> 00:10:24,640
windows how many people use windows here

00:10:20,440 --> 00:10:27,370
and so in a Windows computer I use a

00:10:24,640 --> 00:10:30,490
Windows computer as well this menu that

00:10:27,370 --> 00:10:33,640
is here or will will show up where

00:10:30,490 --> 00:10:35,830
you've got the file and and so on and so

00:10:33,640 --> 00:10:38,080
forth and you can change those as well

00:10:35,830 --> 00:10:40,930
you can also create context menus which

00:10:38,080 --> 00:10:43,930
is what happens when you right-click you

00:10:40,930 --> 00:10:46,150
can handle you can also access the file

00:10:43,930 --> 00:10:49,000
you can use system dialogues you can put

00:10:46,150 --> 00:10:53,230
your application in the tray as well and

00:10:49,000 --> 00:10:55,420
you can go onto electron J s org to

00:10:53,230 --> 00:10:59,170
download this demo and it's got all of

00:10:55,420 --> 00:11:01,530
these handy code snippets that you can

00:10:59,170 --> 00:11:05,020
use to include them into your project

00:11:01,530 --> 00:11:06,030
it's quite quite easy to get going

00:11:05,020 --> 00:11:08,700
with that

00:11:06,030 --> 00:11:11,250
now one thing about electron is that

00:11:08,700 --> 00:11:13,440
after you have built using your

00:11:11,250 --> 00:11:14,730
different web technologies and the great

00:11:13,440 --> 00:11:16,890
thing about electron as well as you can

00:11:14,730 --> 00:11:19,050
use reacts you can use maybe Ghats but

00:11:16,890 --> 00:11:20,430
you can use any of the JavaScript

00:11:19,050 --> 00:11:22,290
frameworks that you already know and

00:11:20,430 --> 00:11:24,770
love as long as they're producing an

00:11:22,290 --> 00:11:27,720
index file that electron can then access

00:11:24,770 --> 00:11:33,200
into so it's really cool I was actually

00:11:27,720 --> 00:11:35,940
working on a little react a react based

00:11:33,200 --> 00:11:38,070
application myself too just for

00:11:35,940 --> 00:11:39,690
something to do to learn electron but

00:11:38,070 --> 00:11:43,710
more importantly so when you want to

00:11:39,690 --> 00:11:45,270
package your application when you want

00:11:43,710 --> 00:11:47,550
to package your application you can use

00:11:45,270 --> 00:11:50,040
an electron builder and what this will

00:11:47,550 --> 00:11:51,810
do is this will give you a file that

00:11:50,040 --> 00:11:53,430
goes from Mac and a fire that can go for

00:11:51,810 --> 00:11:55,890
Linux and a file that can go on Windows

00:11:53,430 --> 00:11:59,730
and then they can install it now I'm

00:11:55,890 --> 00:12:01,680
going to talk about electron and how it

00:11:59,730 --> 00:12:04,850
was used when we were building its

00:12:01,680 --> 00:12:08,810
whittier quest so it's really a quest is

00:12:04,850 --> 00:12:11,550
the game is built using a game engine

00:12:08,810 --> 00:12:14,130
called phaser a game framework called

00:12:11,550 --> 00:12:16,680
phaser IO and it's it's really cool you

00:12:14,130 --> 00:12:19,200
should check it out and this handles all

00:12:16,680 --> 00:12:23,100
of the sprites and the rendering of the

00:12:19,200 --> 00:12:24,839
page and game controls as well however

00:12:23,100 --> 00:12:27,870
one thing that we noticed is that when

00:12:24,839 --> 00:12:30,000
you're building a game you often have

00:12:27,870 --> 00:12:31,860
patches that we need to release and you

00:12:30,000 --> 00:12:35,430
need to get these to the come to the

00:12:31,860 --> 00:12:37,620
users computer quite regularly and so

00:12:35,430 --> 00:12:40,080
because of this this made us have to

00:12:37,620 --> 00:12:43,580
rethink our architecture and not just go

00:12:40,080 --> 00:12:46,290
with the most basic electron build and

00:12:43,580 --> 00:12:48,720
we have something that looks like this

00:12:46,290 --> 00:12:52,110
so I'll sort of walk us through it

00:12:48,720 --> 00:12:54,600
so we actually have an electron app

00:12:52,110 --> 00:12:58,020
which is the Twilio quest launcher app

00:12:54,600 --> 00:13:00,120
and what that does is it first goes over

00:12:58,020 --> 00:13:02,910
to our firebase and checks if it's got

00:13:00,120 --> 00:13:04,830
the latest version of the game and

00:13:02,910 --> 00:13:07,110
because we release updates like nearly

00:13:04,830 --> 00:13:09,450
every day or nearly every couple of days

00:13:07,110 --> 00:13:11,550
there's nearly always a version that

00:13:09,450 --> 00:13:14,339
needs to be downloading and it downloads

00:13:11,550 --> 00:13:16,950
the latest game version and the latest

00:13:14,339 --> 00:13:19,980
game version is just react

00:13:16,950 --> 00:13:22,380
wrapping phase are controlling our game

00:13:19,980 --> 00:13:27,090
and when you break it down is just a

00:13:22,380 --> 00:13:29,220
series of HTML files in the end and what

00:13:27,090 --> 00:13:31,560
will happen is when it downloads that it

00:13:29,220 --> 00:13:35,550
creates a new browser window a new game

00:13:31,560 --> 00:13:38,820
window and that game window holds all of

00:13:35,550 --> 00:13:41,670
those HTML CSS and JavaScript files that

00:13:38,820 --> 00:13:44,310
we downloaded and I'm going to just

00:13:41,670 --> 00:13:49,560
quickly show you what the game looks

00:13:44,310 --> 00:13:52,110
like so played on a quest and the hit

00:13:49,560 --> 00:13:58,350
play and then it loads and you can move

00:13:52,110 --> 00:14:00,180
around once it's loaded and it's got a

00:13:58,350 --> 00:14:02,580
whole thing now the cool thing about

00:14:00,180 --> 00:14:04,830
trivia quest and because we wanted to

00:14:02,580 --> 00:14:07,200
use it to teach people how to code with

00:14:04,830 --> 00:14:09,990
Twitter is because we're using an

00:14:07,200 --> 00:14:13,080
electron inside the game we have a

00:14:09,990 --> 00:14:15,000
node.js runtime and this allows us to do

00:14:13,080 --> 00:14:18,240
some really cool things the most

00:14:15,000 --> 00:14:22,020
important one that was refound really

00:14:18,240 --> 00:14:24,210
cool if I can I won't be able to demo it

00:14:22,020 --> 00:14:27,840
because I've cleared all my missions and

00:14:24,210 --> 00:14:30,120
but we have an inbuilt code editor an

00:14:27,840 --> 00:14:32,670
inbuilt code editor that can run

00:14:30,120 --> 00:14:34,320
JavaScript code so what we do is we have

00:14:32,670 --> 00:14:36,120
a mission where we say run some

00:14:34,320 --> 00:14:38,310
JavaScript code that makes a phone call

00:14:36,120 --> 00:14:40,740
with Twitter and because we're using a

00:14:38,310 --> 00:14:42,840
letch one we can run that code and give

00:14:40,740 --> 00:14:45,630
them an error message or we can spin up

00:14:42,840 --> 00:14:48,240
a server inside the game for them to

00:14:45,630 --> 00:14:50,370
actually interact with trivia and then

00:14:48,240 --> 00:14:52,440
we go off and check their status but

00:14:50,370 --> 00:14:54,330
what's because we are using 20 O's api's

00:14:52,440 --> 00:14:56,520
even if people want to work on their own

00:14:54,330 --> 00:14:58,920
environments we can still do that and we

00:14:56,520 --> 00:15:00,840
can still interact with their local host

00:14:58,920 --> 00:15:02,880
as long as they are spinning up a server

00:15:00,840 --> 00:15:08,100
somewhere else and that's because we are

00:15:02,880 --> 00:15:10,080
using electron so I have gone through my

00:15:08,100 --> 00:15:12,780
talk much faster than I expected

00:15:10,080 --> 00:15:15,510
yeah thank you very much for listening

00:15:12,780 --> 00:15:18,030
I'm free here if you want to ask me more

00:15:15,510 --> 00:15:19,770
questions about our implementation of

00:15:18,030 --> 00:15:21,840
electron or just about electron in

00:15:19,770 --> 00:15:23,040
general and hopefully you found this

00:15:21,840 --> 00:15:25,410
interesting and maybe wants to play

00:15:23,040 --> 00:15:28,850
around with with electron or check out

00:15:25,410 --> 00:15:28,850
Swilley requests if you want thank you

00:15:29,440 --> 00:15:36,019
well I have the opportunity to work with

00:15:32,920 --> 00:15:38,600
something similar that is not similar

00:15:36,019 --> 00:15:41,089
but the same philosophy yummy so we

00:15:38,600 --> 00:15:45,380
build to cook my CSS in JavaScript that

00:15:41,089 --> 00:15:47,779
we use an iOS and unpredicted there was

00:15:45,380 --> 00:15:50,959
a problem that sometimes we had to work

00:15:47,779 --> 00:15:52,670
natively with the Java horse reached in

00:15:50,959 --> 00:15:54,800
this case electrons there is the same

00:15:52,670 --> 00:15:59,180
problem sometimes we need is needed to

00:15:54,800 --> 00:16:01,579
work on net ability or is his llama in

00:15:59,180 --> 00:16:05,029
the way that you don't need at all so

00:16:01,579 --> 00:16:08,360
there are so there is that it's done in

00:16:05,029 --> 00:16:09,440
a way that with most basic use cases you

00:16:08,360 --> 00:16:12,350
don't necessarily need to write native

00:16:09,440 --> 00:16:14,389
code however some people I have never

00:16:12,350 --> 00:16:16,550
come across a situation but I've read a

00:16:14,389 --> 00:16:18,050
blog post about other people who wanted

00:16:16,550 --> 00:16:19,220
to and I can't remember exactly what

00:16:18,050 --> 00:16:20,720
they were trying to do off the top of my

00:16:19,220 --> 00:16:23,420
head but they wanted to do something

00:16:20,720 --> 00:16:26,120
specific with their application and to

00:16:23,420 --> 00:16:28,730
integrate with something in the OS for

00:16:26,120 --> 00:16:31,459
it for a particular OS and then you can

00:16:28,730 --> 00:16:34,339
extend electron with your own code as

00:16:31,459 --> 00:16:36,980
well natively electron is built in a way

00:16:34,339 --> 00:16:39,110
that you shouldn't have to do that and

00:16:36,980 --> 00:16:41,779
as they grow I believe they're adding

00:16:39,110 --> 00:16:45,410
more and more native API is to allow you

00:16:41,779 --> 00:16:47,420
to interact with the OS more so I can't

00:16:45,410 --> 00:16:50,660
remember specific examples but I know

00:16:47,420 --> 00:16:52,519
that there are examples they tried to

00:16:50,660 --> 00:16:55,040
make it as rare as possible I can't tell

00:16:52,519 --> 00:16:56,630
you how much of it that is I've not come

00:16:55,040 --> 00:16:58,910
across them myself but I'm pretty sure

00:16:56,630 --> 00:17:00,110
if you spoke to vias code editors they

00:16:58,910 --> 00:17:10,189
will tell you about a lot of them

00:17:00,110 --> 00:17:11,990
because they they're experts in it yes

00:17:10,189 --> 00:17:15,880
it's Ivar stateless and then we clean it

00:17:11,990 --> 00:17:15,880
up as well yeah

00:17:22,190 --> 00:17:28,350
we've steam you can upload a version of

00:17:25,290 --> 00:17:29,940
your game that can be downloaded so it

00:17:28,350 --> 00:17:32,340
is pretty easy because all we're doing

00:17:29,940 --> 00:17:36,000
is hosting a version of our electron app

00:17:32,340 --> 00:17:37,710
in different four different OSS so we

00:17:36,000 --> 00:17:40,260
say here is a version 4 and it's the

00:17:37,710 --> 00:17:41,670
same as if you went to our website and

00:17:40,260 --> 00:17:43,680
downloaded it that's the same download

00:17:41,670 --> 00:17:45,630
you'd get from steam steam is just this

00:17:43,680 --> 00:17:51,030
nice once you put on Steam people think

00:17:45,630 --> 00:17:55,890
it's a real game yeah which allows you

00:17:51,030 --> 00:18:11,940
to get events which are also yes yes she

00:17:55,890 --> 00:18:13,380
can so debugging is you can debug it

00:18:11,940 --> 00:18:16,410
like YouTube world caprara it has

00:18:13,380 --> 00:18:19,320
because it's a chromium engine you can I

00:18:16,410 --> 00:18:21,300
didn't show the dev tools there there I

00:18:19,320 --> 00:18:25,020
heard someone speak about security and

00:18:21,300 --> 00:18:26,940
there is you can D compile it I other

00:18:25,020 --> 00:18:29,490
than that I don't know I wouldn't

00:18:26,940 --> 00:18:32,790
necessarily keep anything secret on on

00:18:29,490 --> 00:18:33,560
on a native app you'd still want to talk

00:18:32,790 --> 00:18:36,810
somewhere else

00:18:33,560 --> 00:18:41,390
cool thank you so much

00:18:36,810 --> 00:18:41,390

YouTube URL: https://www.youtube.com/watch?v=9He6hWzp-4g


