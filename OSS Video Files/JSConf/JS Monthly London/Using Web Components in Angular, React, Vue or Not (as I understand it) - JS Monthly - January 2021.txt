Title: Using Web Components in Angular, React, Vue or Not (as I understand it) - JS Monthly - January 2021
Publication date: 2021-02-11
Playlist: JS Monthly London
Description: 
	Dwane Hemmings
Using Web Components in Angular, React, Vue or Not (as I understand it)

An interactive walk-through with examples of how to include Web Components into Angular, React, Vue and Vanilla JavaScript applications.


Chapters & Excerpts:
Welcome 00:00:00

Getting Started [00:01:01]
Hi, I'm Dwayne. A JavaScript developer advocate advantage. If you're not familiar with Vonage, we are a cloud communication platform. RFE.

Web Components TLDR [00:03:38]
T L D R think of a web component as your own black box in your application. The user of your web component can pass in properties and set attributes. Then they can even call methods. You want them to use, but you want to let them use if your web component emits some custom events, the user can listen for those in their app.

Example with Vanilla JS - CDN [00:07:02]
Okay. So now let's get into the first example. Let's start with vanilla JavaScript. Now, first we need to load our web component. For this example, we will be using a CDN. So I'm using unpackage. There's so many, like we spoke about before, there's a lot of different new technologies out there.

Reference to web components [00:08:52]
And we're going to get into more examples of that, but continuing on now, then we need to get a reference to the web components. And so we're doing that there. Like I said, it's just a regular element. So we're going to do a document dot query selector and that you can do, if you put an ID there, you can do that.

Example with Angular [00:11:53]
Now up next, we're going to go in alphabetical order here. So we're going to start off with angular, cause I don't want to show any favouritism or anything. So now this image is from custom custom dash elements, dash everywhere.com and they do the work of making sure frameworks and custom elements are, can be BFFs.

View Child Decorator [00:16:11]
Now we use the view child decorator to find the key pad component using that hashtag key pad that I mentioned earlier. And then we create a key pad components, reference of class element ref, and that's being done on line 31 right there.

Issues with React and Web Components [00:17:53]
And as you can see, the relationship with web components is a rocky one. The issues lie with how react handles data and events react string of FYS data going into the web component. So for strings that's fine, but everything else like objects or race, or they're considered rich data that can cause problems.

Examples for older versions and legacy code [00:19:53]
And here's an example for versions older than 16.3, because there may be some legacy code and you will want to put in your web component so that when you upgrade, you don't have to rewrite all those things. And so now, like before we load our web component from a CDN, you can also use NPM installing and important as we did with the angular.

Using Create Ref [00:22:05]
Now, if you're using version 16.3 or later, you may want to use create ref. Now the way it's done in this example. So the way it was done in the previous example of 16, three or earlier earlier than 16.3, the example there would be considered legacy and will probably be removed in later versions.

Composition API [00:29:32] 
One of the newest additions to view is the composition API. It was created to help address some limitation. Developers were facing as applications grew over time and became more complex. Now, remember what I said that view three. 

Conclusion [00:31:12] 
So yeah, so you can see right there, we're importing ref from view, and then we're setting up the key pad  with a Knol, initially. 

Q&A [00:32:40]
_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,480 --> 00:00:03,520
all righty great so uh thanks again for

00:00:02,879 --> 00:00:06,480
having me

00:00:03,520 --> 00:00:08,240
and before i start i like to experiment

00:00:06,480 --> 00:00:10,639
with things and try things so

00:00:08,240 --> 00:00:11,519
if you would like to check out my slides

00:00:10,639 --> 00:00:14,639
page

00:00:11,519 --> 00:00:17,520
it's actually at myslides.page

00:00:14,639 --> 00:00:19,039
and there the slides will be in sync so

00:00:17,520 --> 00:00:21,760
as i'm scrolling through them

00:00:19,039 --> 00:00:23,039
they'll also update on your end uh

00:00:21,760 --> 00:00:23,840
higher quality because there's no video

00:00:23,039 --> 00:00:25,840
compression and

00:00:23,840 --> 00:00:27,119
you know it's as big as your monitor so

00:00:25,840 --> 00:00:29,119
if you want to check that out

00:00:27,119 --> 00:00:30,240
i have some interactive examples i'd

00:00:29,119 --> 00:00:33,120
like you to play with

00:00:30,240 --> 00:00:35,360
as well and uh now this is super beta so

00:00:33,120 --> 00:00:37,280
i'm going to be using speech recognition

00:00:35,360 --> 00:00:39,120
and so it's actually as i'm saying

00:00:37,280 --> 00:00:40,079
things it will put it like a little

00:00:39,120 --> 00:00:42,800
speech bubble

00:00:40,079 --> 00:00:43,680
above my little avatar on the website so

00:00:42,800 --> 00:00:46,160
hopefully

00:00:43,680 --> 00:00:48,320
you uh get a chance to check that out

00:00:46,160 --> 00:00:51,360
let me start some things on my end

00:00:48,320 --> 00:00:52,079
so if someone could put the my i had my

00:00:51,360 --> 00:00:54,559
slides

00:00:52,079 --> 00:00:56,320
dot page in the chat but before i got to

00:00:54,559 --> 00:00:59,199
press enter everything kind of went away

00:00:56,320 --> 00:00:59,760
and i'm scared to put anything back i'll

00:00:59,199 --> 00:01:01,680
put it in

00:00:59,760 --> 00:01:03,760
i'll put it in for you dwayne awesome

00:01:01,680 --> 00:01:07,439
thank you very much all right so

00:01:03,760 --> 00:01:07,439
let us get started

00:01:07,600 --> 00:01:12,799
okay so we're starting there let me move

00:01:10,000 --> 00:01:16,479
this over

00:01:12,799 --> 00:01:19,680
and now hopefully you can see my screen

00:01:16,479 --> 00:01:23,119
with my slides and with

00:01:19,680 --> 00:01:26,400
uh this little speech recognition

00:01:23,119 --> 00:01:29,360
button happening hopefully and again

00:01:26,400 --> 00:01:32,960
disclaimer it's super beta

00:01:29,360 --> 00:01:35,840
all right so now this

00:01:32,960 --> 00:01:37,360
cool all right so uh using web

00:01:35,840 --> 00:01:40,400
components

00:01:37,360 --> 00:01:43,520
in your favorite framework slash library

00:01:40,400 --> 00:01:46,720
or not it's your choice

00:01:43,520 --> 00:01:50,079
it's cool either way as i understand it

00:01:46,720 --> 00:01:51,680
january 2021 because the web is always

00:01:50,079 --> 00:01:54,720
changing

00:01:51,680 --> 00:01:55,520
hi i'm duane a javascript developer

00:01:54,720 --> 00:01:57,840
advocate

00:01:55,520 --> 00:01:59,600
advantage if you're not familiar with

00:01:57,840 --> 00:02:02,719
vonage we are a cloud

00:01:59,600 --> 00:02:03,600
communication platform our our apis

00:02:02,719 --> 00:02:06,719
allow you to

00:02:03,600 --> 00:02:08,399
make video and phone calls send sms

00:02:06,719 --> 00:02:12,400
facebook messenger whatsapp

00:02:08,399 --> 00:02:15,040
and viber messages and so much more

00:02:12,400 --> 00:02:16,720
so like i said my presentation is about

00:02:15,040 --> 00:02:21,440
using web components

00:02:16,720 --> 00:02:23,680
why and how i use them and uh

00:02:21,440 --> 00:02:24,640
and i'm going to show a lot of examples

00:02:23,680 --> 00:02:28,000
and uh

00:02:24,640 --> 00:02:28,000
just gotta double check something

00:02:30,160 --> 00:02:33,440
all right so i was not recording great

00:02:32,959 --> 00:02:36,480
uh

00:02:33,440 --> 00:02:40,560
okay okay so uh yeah

00:02:36,480 --> 00:02:42,640
so now as they uh it goes without saying

00:02:40,560 --> 00:02:43,840
that oh my bad so like i said my

00:02:42,640 --> 00:02:44,800
presentation is about using web

00:02:43,840 --> 00:02:47,200
components

00:02:44,800 --> 00:02:48,400
why why and how i'm using them and show

00:02:47,200 --> 00:02:50,160
a lot of examples

00:02:48,400 --> 00:02:51,920
so i'm hoping by the end you become a

00:02:50,160 --> 00:02:53,840
part of the fandom

00:02:51,920 --> 00:02:55,360
and it goes without saying that as a

00:02:53,840 --> 00:02:58,959
javascript developer advocate

00:02:55,360 --> 00:03:00,159
i'm a fan of the dom and i live in a van

00:02:58,959 --> 00:03:01,840
called dom

00:03:00,159 --> 00:03:03,200
and i pretty much called it dom so i can

00:03:01,840 --> 00:03:03,599
make this following joke so hopefully

00:03:03,200 --> 00:03:06,800
it's

00:03:03,599 --> 00:03:10,640
funny light dom

00:03:06,800 --> 00:03:12,560
shadow dom virtual dumb

00:03:10,640 --> 00:03:14,879
now uh if you're not familiar with web

00:03:12,560 --> 00:03:17,519
components anna siegerty

00:03:14,879 --> 00:03:18,480
gave a really good talk on the basics at

00:03:17,519 --> 00:03:21,120
a previous

00:03:18,480 --> 00:03:21,519
uh js monthly meetup and there's the

00:03:21,120 --> 00:03:24,720
link

00:03:21,519 --> 00:03:27,040
to the video there i've also been

00:03:24,720 --> 00:03:29,200
writing a series of blog posts that

00:03:27,040 --> 00:03:30,720
compares various tools

00:03:29,200 --> 00:03:32,560
to help create web components and

00:03:30,720 --> 00:03:35,120
actually build and publish

00:03:32,560 --> 00:03:36,799
a web component and uh use them which

00:03:35,120 --> 00:03:38,959
goes deeper into what

00:03:36,799 --> 00:03:40,400
than what i will be presenting today so

00:03:38,959 --> 00:03:43,599
so you can always find those

00:03:40,400 --> 00:03:48,159
at that site there but

00:03:43,599 --> 00:03:49,440
for the tldr think of a web component as

00:03:48,159 --> 00:03:52,640
your own black box

00:03:49,440 --> 00:03:54,720
in your application the user of your web

00:03:52,640 --> 00:03:57,920
component can pass in properties

00:03:54,720 --> 00:03:58,799
and set attributes then they can even

00:03:57,920 --> 00:04:00,640
call methods

00:03:58,799 --> 00:04:02,480
you want them to use that you want to

00:04:00,640 --> 00:04:04,720
let them use

00:04:02,480 --> 00:04:07,519
if your web component emits some custom

00:04:04,720 --> 00:04:10,480
events the user can listen for those

00:04:07,519 --> 00:04:10,480
in their application

00:04:11,599 --> 00:04:19,120
now i like to build projects

00:04:14,640 --> 00:04:21,280
as you can see like a lot of projects

00:04:19,120 --> 00:04:22,240
and one thing i don't like is having to

00:04:21,280 --> 00:04:24,160
keep creating

00:04:22,240 --> 00:04:25,680
or recreating about pages for each

00:04:24,160 --> 00:04:28,160
project

00:04:25,680 --> 00:04:29,759
uh especially if there are built using

00:04:28,160 --> 00:04:32,560
different technologies

00:04:29,759 --> 00:04:34,639
ain't nobody got time for that so for my

00:04:32,560 --> 00:04:35,440
newer projects i've been using a web

00:04:34,639 --> 00:04:39,040
component

00:04:35,440 --> 00:04:40,320
uh duane dash made and what happens is i

00:04:39,040 --> 00:04:43,440
fetch data

00:04:40,320 --> 00:04:44,000
from an endpoint on each project and

00:04:43,440 --> 00:04:47,360
pass

00:04:44,000 --> 00:04:49,520
that into the web component that changes

00:04:47,360 --> 00:04:51,199
some of the sections pertaining to that

00:04:49,520 --> 00:04:53,600
project

00:04:51,199 --> 00:04:54,960
another reason why i like web components

00:04:53,600 --> 00:04:56,000
is that they're almost like the swiss

00:04:54,960 --> 00:04:57,759
army knife

00:04:56,000 --> 00:04:59,040
you can have the same component for

00:04:57,759 --> 00:05:01,759
multiple uses

00:04:59,040 --> 00:05:03,520
so uh think of the humble input element

00:05:01,759 --> 00:05:06,479
i've always found it amazing that

00:05:03,520 --> 00:05:09,120
just by changing the type attribute its

00:05:06,479 --> 00:05:12,639
functionalities can change so much

00:05:09,120 --> 00:05:14,720
so for example we have the the button

00:05:12,639 --> 00:05:16,000
check box and now the color the color

00:05:14,720 --> 00:05:19,280
has always been

00:05:16,000 --> 00:05:19,759
pretty amazing to me like just changing

00:05:19,280 --> 00:05:24,160
that

00:05:19,759 --> 00:05:25,759
to color and you have a color picker

00:05:24,160 --> 00:05:27,680
uh that's amazing and then of course

00:05:25,759 --> 00:05:28,320
this one is super cool now imagine if

00:05:27,680 --> 00:05:31,440
you had to

00:05:28,320 --> 00:05:34,320
pick create a date picker every time

00:05:31,440 --> 00:05:36,000
like this this is great to me so it's

00:05:34,320 --> 00:05:36,720
the small things that really get me

00:05:36,000 --> 00:05:39,199
excited

00:05:36,720 --> 00:05:40,960
and then of course you can choose files

00:05:39,199 --> 00:05:44,639
uh there's the radio

00:05:40,960 --> 00:05:47,680
range and then of course the og

00:05:44,639 --> 00:05:50,080
text so now

00:05:47,680 --> 00:05:51,600
what we're going to do is uh we try to

00:05:50,080 --> 00:05:53,840
accomplish both

00:05:51,600 --> 00:05:55,680
features in the web component example

00:05:53,840 --> 00:05:57,840
used in the blog series that i mentioned

00:05:55,680 --> 00:06:01,280
earlier

00:05:57,840 --> 00:06:04,319
and here it is it's a keypad element

00:06:01,280 --> 00:06:07,280
and so it was created using open wc and

00:06:04,319 --> 00:06:09,120
material web components

00:06:07,280 --> 00:06:10,319
uh some of the properties and attributes

00:06:09,120 --> 00:06:12,080
on there

00:06:10,319 --> 00:06:14,000
are the you can customize the

00:06:12,080 --> 00:06:16,479
placeholder text

00:06:14,000 --> 00:06:17,280
you can set button you can set the

00:06:16,479 --> 00:06:20,319
buttons

00:06:17,280 --> 00:06:20,880
on the pad or the keys and then you can

00:06:20,319 --> 00:06:24,479
set

00:06:20,880 --> 00:06:26,479
uh text for start and end action buttons

00:06:24,479 --> 00:06:27,680
and then you can also show or hide the

00:06:26,479 --> 00:06:31,039
asterisk and

00:06:27,680 --> 00:06:34,880
uh hashtag keys or the pound sign keys

00:06:31,039 --> 00:06:36,400
as well as the input box

00:06:34,880 --> 00:06:38,319
now there's a method on there so there's

00:06:36,400 --> 00:06:40,080
the create action method

00:06:38,319 --> 00:06:41,919
and it lets the web component know that

00:06:40,080 --> 00:06:43,919
an action has started

00:06:41,919 --> 00:06:45,759
and as far as custom events you can

00:06:43,919 --> 00:06:47,680
listen for the digit added

00:06:45,759 --> 00:06:50,479
which is sent when a when a button is

00:06:47,680 --> 00:06:52,560
pressed there is a digit sent

00:06:50,479 --> 00:06:54,560
that's sent when the action when the

00:06:52,560 --> 00:06:58,000
start action is pressed

00:06:54,560 --> 00:06:59,199
and then finally the action ended uh is

00:06:58,000 --> 00:07:02,319
sent when the

00:06:59,199 --> 00:07:04,000
end action button is pressed hopefully

00:07:02,319 --> 00:07:06,000
that all made sense

00:07:04,000 --> 00:07:07,360
okay so now let's get into the first

00:07:06,000 --> 00:07:10,479
example

00:07:07,360 --> 00:07:11,919
let's start with vanilla javascript now

00:07:10,479 --> 00:07:14,400
first we need to load

00:07:11,919 --> 00:07:17,199
our web component for this example we

00:07:14,400 --> 00:07:20,080
will be using a cdn

00:07:17,199 --> 00:07:21,599
uh so i'm using unpackage there's so

00:07:20,080 --> 00:07:22,720
many like we spoke about before there's

00:07:21,599 --> 00:07:25,199
a lot of different

00:07:22,720 --> 00:07:26,639
new technologies out there and so along

00:07:25,199 --> 00:07:28,720
with the web component

00:07:26,639 --> 00:07:30,720
we will also load any polyfills that we

00:07:28,720 --> 00:07:33,199
need so that

00:07:30,720 --> 00:07:35,440
line lines one through five accomplish

00:07:33,199 --> 00:07:35,440
that

00:07:38,080 --> 00:07:42,479
and uh cool so now so go ahead and play

00:07:40,960 --> 00:07:44,240
around with the component you can

00:07:42,479 --> 00:07:46,400
actually go ahead and

00:07:44,240 --> 00:07:48,879
uh you know press buttons in there and

00:07:46,400 --> 00:07:50,879
you kind of see it pop up

00:07:48,879 --> 00:07:52,319
and it doesn't do anything now so oh it

00:07:50,879 --> 00:07:53,360
does do something i totally forgot about

00:07:52,319 --> 00:07:56,479
it so uh

00:07:53,360 --> 00:07:57,520
so right now it's as if it's a basic uh

00:07:56,479 --> 00:07:58,879
dialer so

00:07:57,520 --> 00:08:00,639
it's kind of like do you want to call it

00:07:58,879 --> 00:08:01,520
and then you say yes and then it turned

00:08:00,639 --> 00:08:04,720
to cancel

00:08:01,520 --> 00:08:07,199
then you can end it so that's the basics

00:08:04,720 --> 00:08:08,879
of the web component that we built for

00:08:07,199 --> 00:08:11,840
the blogs

00:08:08,879 --> 00:08:12,400
all right so now next we place our web

00:08:11,840 --> 00:08:16,160
component

00:08:12,400 --> 00:08:17,440
on the page and it's it's actually if

00:08:16,160 --> 00:08:20,720
anything

00:08:17,440 --> 00:08:21,759
uh that you get from this is that your

00:08:20,720 --> 00:08:24,240
custom element

00:08:21,759 --> 00:08:25,280
is just like a regular element so it's

00:08:24,240 --> 00:08:29,280
like an h1

00:08:25,280 --> 00:08:31,199
tag or a paragraph tag and so

00:08:29,280 --> 00:08:32,320
you can place it on your page as if it's

00:08:31,199 --> 00:08:35,919
just like that

00:08:32,320 --> 00:08:39,839
and so i have it here so you can see it

00:08:35,919 --> 00:08:41,200
so i oh and um i had to add spaces

00:08:39,839 --> 00:08:43,039
around the brackets

00:08:41,200 --> 00:08:44,640
because my slides were trying to

00:08:43,039 --> 00:08:47,760
actually load the web component

00:08:44,640 --> 00:08:48,800
so so you can see here duane's hyphen

00:08:47,760 --> 00:08:50,560
keypad

00:08:48,800 --> 00:08:52,480
got a placeholder and that's what's

00:08:50,560 --> 00:08:54,560
showing up there

00:08:52,480 --> 00:08:55,760
and we're going to get into uh more

00:08:54,560 --> 00:08:58,800
examples of that

00:08:55,760 --> 00:09:00,640
but continuing on now then

00:08:58,800 --> 00:09:02,880
we need to get a reference to the web

00:09:00,640 --> 00:09:05,519
components and so we're doing that there

00:09:02,880 --> 00:09:07,360
like i said it's just a regular element

00:09:05,519 --> 00:09:08,240
so we're going to do a document.query

00:09:07,360 --> 00:09:10,480
selector

00:09:08,240 --> 00:09:11,680
and that you can do if you put an id

00:09:10,480 --> 00:09:14,399
there you can do

00:09:11,680 --> 00:09:16,880
oh that okay i knew something like that

00:09:14,399 --> 00:09:16,880
was gonna happen

00:09:18,640 --> 00:09:20,959
uh

00:09:21,680 --> 00:09:25,680
this is what happens when you experiment

00:09:23,120 --> 00:09:25,680
with stuff

00:09:33,360 --> 00:09:39,200
okay cool

00:09:37,760 --> 00:09:41,360
all right so yeah we're now we're

00:09:39,200 --> 00:09:44,560
getting the query selector

00:09:41,360 --> 00:09:44,560
make sure i don't go back again

00:09:44,720 --> 00:09:53,360
all right oh i almost did it again

00:09:48,880 --> 00:09:53,360
oh okay i do not like oh

00:09:53,519 --> 00:09:59,200
okay all right so we're going to keep on

00:09:56,959 --> 00:09:59,200
going

00:10:00,399 --> 00:10:04,640
all right cool so now all right so we

00:10:03,760 --> 00:10:07,680
got the reference

00:10:04,640 --> 00:10:09,600
to the web component and then here we

00:10:07,680 --> 00:10:13,040
are listening uh for the

00:10:09,600 --> 00:10:13,040
digit added custom event

00:10:13,519 --> 00:10:20,800
uh now this uh we'll call the

00:10:16,560 --> 00:10:22,560
create the keypad's create action method

00:10:20,800 --> 00:10:24,800
and then if we wanted to

00:10:22,560 --> 00:10:25,519
programmatically change the action text

00:10:24,800 --> 00:10:28,800
the button

00:10:25,519 --> 00:10:30,640
we can do that like this all right so

00:10:28,800 --> 00:10:34,240
now let's take a look at some

00:10:30,640 --> 00:10:37,760
other options so let's see uh

00:10:34,240 --> 00:10:47,839
now this is a codepen and so

00:10:37,760 --> 00:10:47,839
we saw the default function there let me

00:10:51,040 --> 00:10:55,440
all right so now you refresh this so now

00:10:54,320 --> 00:11:01,839
you see the action

00:10:55,440 --> 00:11:01,839
text the button has changed to call

00:11:10,000 --> 00:11:14,079
and now see right here remove the actual

00:11:13,200 --> 00:11:17,440
display

00:11:14,079 --> 00:11:19,200
and the asterisk and the hashtag buttons

00:11:17,440 --> 00:11:20,640
and now one that's kind of like pushing

00:11:19,200 --> 00:11:23,839
the limits which is

00:11:20,640 --> 00:11:25,440
super cool kind of shows the versatility

00:11:23,839 --> 00:11:29,839
of web components

00:11:25,440 --> 00:11:29,839
at least hopefully hopefully

00:11:32,079 --> 00:11:35,200
now let's say if you wanted to create

00:11:33,440 --> 00:11:36,800
like a little game pad

00:11:35,200 --> 00:11:38,800
and so you'd be able to kind of move

00:11:36,800 --> 00:11:41,360
your thing around that you can

00:11:38,800 --> 00:11:42,880
press this for the fire and then you can

00:11:41,360 --> 00:11:45,760
have like how many times the person

00:11:42,880 --> 00:11:48,000
crashed and end the game

00:11:45,760 --> 00:11:48,000
cool

00:11:48,880 --> 00:11:51,440
all righty

00:11:53,519 --> 00:11:57,440
now up next we're going to go in

00:11:56,160 --> 00:11:58,959
alphabetical order here so we're going

00:11:57,440 --> 00:12:00,480
to start off with angular because i

00:11:58,959 --> 00:12:00,959
don't want to show any favoritism or

00:12:00,480 --> 00:12:04,240
anything

00:12:00,959 --> 00:12:06,880
so now this image is from um

00:12:04,240 --> 00:12:07,760
custom custom dash elements dash

00:12:06,880 --> 00:12:10,800
everywhere

00:12:07,760 --> 00:12:11,200
dot com and they do the work of making

00:12:10,800 --> 00:12:13,360
sure

00:12:11,200 --> 00:12:15,440
frameworks and custom elements are can

00:12:13,360 --> 00:12:18,160
be bffs

00:12:15,440 --> 00:12:20,320
they run various tests and give a score

00:12:18,160 --> 00:12:23,600
based on how well a framework

00:12:20,320 --> 00:12:24,800
works with web components so uh first up

00:12:23,600 --> 00:12:26,320
is angular

00:12:24,800 --> 00:12:27,839
and you can see that from the results

00:12:26,320 --> 00:12:29,600
and how it handles data going

00:12:27,839 --> 00:12:31,920
into an event coming out of a web

00:12:29,600 --> 00:12:33,760
component they are bffs

00:12:31,920 --> 00:12:36,240
now let's explore this more with an

00:12:33,760 --> 00:12:38,320
example

00:12:36,240 --> 00:12:40,320
all right so now uh in this in this

00:12:38,320 --> 00:12:43,760
example the keypad component

00:12:40,320 --> 00:12:45,920
is used to enter a user's answer

00:12:43,760 --> 00:12:46,880
to a question so it's kind of like a

00:12:45,920 --> 00:12:50,480
gamepad

00:12:46,880 --> 00:12:52,320
uh quiz thing and then go ahead and give

00:12:50,480 --> 00:12:54,959
it a try uh do you know the answer

00:12:52,320 --> 00:12:55,839
so in what year was the first release

00:12:54,959 --> 00:12:57,920
candidate

00:12:55,839 --> 00:12:59,279
published of angular because it's

00:12:57,920 --> 00:13:01,680
angular answer so it's referring to

00:12:59,279 --> 00:13:01,680
angular

00:13:02,000 --> 00:13:06,639
now let me uh where's the mouse here we

00:13:06,160 --> 00:13:10,399
go

00:13:06,639 --> 00:13:10,399
all right so let's say if it's one

00:13:11,600 --> 00:13:14,480
submit the answer

00:13:17,920 --> 00:13:24,560
oh wrong answer and since i actually uh

00:13:21,200 --> 00:13:24,560
wrote the question i know it's three

00:13:25,920 --> 00:13:31,600
oh mac okay

00:13:29,200 --> 00:13:32,880
there we gotta write congrats so now

00:13:31,600 --> 00:13:35,839
let's talk about how

00:13:32,880 --> 00:13:35,839
all this was kind of put together

00:13:38,959 --> 00:13:45,360
so now first we install the keypad

00:13:42,880 --> 00:13:47,279
web component now i tried to link to a

00:13:45,360 --> 00:13:49,040
cdn but i couldn't get it to work

00:13:47,279 --> 00:13:50,480
so if anyone is really familiar with

00:13:49,040 --> 00:13:54,199
angular and has any suggestions

00:13:50,480 --> 00:13:55,360
please let me know now in the

00:13:54,199 --> 00:13:59,120
app.module.ts

00:13:55,360 --> 00:14:02,079
file we need to let angular know

00:13:59,120 --> 00:14:03,199
that if it comes across and any elements

00:14:02,079 --> 00:14:05,680
in the dom

00:14:03,199 --> 00:14:06,800
that it doesn't recognize not to worry

00:14:05,680 --> 00:14:09,680
we got it

00:14:06,800 --> 00:14:10,800
uh that is accomplished with custom

00:14:09,680 --> 00:14:14,240
elements schema

00:14:10,800 --> 00:14:17,600
i'm really hoping i don't go back again

00:14:14,240 --> 00:14:20,880
so that's oh that's here

00:14:17,600 --> 00:14:22,399
so we're importing that here

00:14:20,880 --> 00:14:24,639
at the top and it's coming from angular

00:14:22,399 --> 00:14:24,639
core

00:14:25,120 --> 00:14:30,480
and then uh so we import that from

00:14:28,639 --> 00:14:34,320
angular core and then

00:14:30,480 --> 00:14:37,519
uh it included in the module schema

00:14:34,320 --> 00:14:37,519
which you can see right here

00:14:38,880 --> 00:14:44,399
then we place our keypad component in

00:14:41,839 --> 00:14:47,519
the app.component.html file

00:14:44,399 --> 00:14:49,199
now notice the hashtag keypad

00:14:47,519 --> 00:14:50,880
that will help us get a reference to the

00:14:49,199 --> 00:14:52,399
element

00:14:50,880 --> 00:14:54,320
those familiar with angular will

00:14:52,399 --> 00:14:54,959
recognize the square brackets which

00:14:54,320 --> 00:14:57,360
denote

00:14:54,959 --> 00:14:58,000
a one-way binding to our property or

00:14:57,360 --> 00:15:00,800
attribute

00:14:58,000 --> 00:15:02,639
of the component and the parentheses uh

00:15:00,800 --> 00:15:05,920
for one-way binding to events

00:15:02,639 --> 00:15:07,120
coming from the web component so you see

00:15:05,920 --> 00:15:10,160
we have the keys

00:15:07,120 --> 00:15:10,880
placeholder action text and then just to

00:15:10,160 --> 00:15:13,920
show that you can

00:15:10,880 --> 00:15:16,560
statically if you set it just to a

00:15:13,920 --> 00:15:17,760
um string you can do that there so it's

00:15:16,560 --> 00:15:19,600
not linked to like a

00:15:17,760 --> 00:15:21,440
variable that you want to change and

00:15:19,600 --> 00:15:22,000
then the digits sent we're listening for

00:15:21,440 --> 00:15:26,399
that

00:15:22,000 --> 00:15:29,959
custom event cool

00:15:26,399 --> 00:15:31,680
then we place our keypad component into

00:15:29,959 --> 00:15:35,440
app.component.html file

00:15:31,680 --> 00:15:35,440
oh i just said that okay

00:15:38,839 --> 00:15:44,320
uh okay

00:15:40,639 --> 00:15:48,279
again apple okay

00:15:44,320 --> 00:15:50,720
cool so here we go um yes now in the

00:15:48,279 --> 00:15:53,680
app.component.tas file we import

00:15:50,720 --> 00:15:54,800
element ref view child and our web

00:15:53,680 --> 00:15:57,440
component

00:15:54,800 --> 00:15:58,480
and i don't want to scroll on here

00:15:57,440 --> 00:16:01,680
because it's going to

00:15:58,480 --> 00:16:03,920
mess up again but as you can see here

00:16:01,680 --> 00:16:05,759
we have a component view child element

00:16:03,920 --> 00:16:08,000
ref from angular core

00:16:05,759 --> 00:16:10,079
and then we're importing our web

00:16:08,000 --> 00:16:12,480
component right there

00:16:10,079 --> 00:16:12,480
all right

00:16:14,240 --> 00:16:20,399
now uh we use the view child decorator

00:16:17,600 --> 00:16:22,240
to find the keypad component using that

00:16:20,399 --> 00:16:25,279
hashtag keypad that i mentioned

00:16:22,240 --> 00:16:26,320
earlier and then we create a keypad

00:16:25,279 --> 00:16:29,199
component

00:16:26,320 --> 00:16:32,800
reference of class element ref and

00:16:29,199 --> 00:16:32,800
that's being done on line 31

00:16:33,519 --> 00:16:39,360
right there okay

00:16:36,880 --> 00:16:39,360
go back

00:16:40,800 --> 00:16:44,880
okay and then also you can see that

00:16:42,880 --> 00:16:47,600
we're um

00:16:44,880 --> 00:16:49,279
setting the keys the action text and the

00:16:47,600 --> 00:16:50,639
placeholder

00:16:49,279 --> 00:16:52,720
so that we're setting those properties

00:16:50,639 --> 00:16:56,079
as well

00:16:52,720 --> 00:16:57,519
now this here on line 42 we'll call the

00:16:56,079 --> 00:17:00,480
cancel action method

00:16:57,519 --> 00:17:02,000
of the keypad component and so make sure

00:17:00,480 --> 00:17:04,640
to include

00:17:02,000 --> 00:17:05,839
so we see this dot keypad and then right

00:17:04,640 --> 00:17:08,480
here is important

00:17:05,839 --> 00:17:10,559
native element and then the method that

00:17:08,480 --> 00:17:13,039
you want to call

00:17:10,559 --> 00:17:15,039
and that native element comes from

00:17:13,039 --> 00:17:18,319
element ref

00:17:15,039 --> 00:17:22,480
so that lets angular know okay this

00:17:18,319 --> 00:17:26,000
um this element on the page has a

00:17:22,480 --> 00:17:28,319
a method called cancel action

00:17:26,000 --> 00:17:28,319
okay

00:17:30,240 --> 00:17:34,480
now uh here we are programmatically

00:17:32,559 --> 00:17:37,840
setting the properties

00:17:34,480 --> 00:17:40,000
uh that were set initially from before

00:17:37,840 --> 00:17:40,880
and uh that's pretty much it getting a

00:17:40,000 --> 00:17:44,320
web component

00:17:40,880 --> 00:17:44,320
working in an angular project

00:17:44,480 --> 00:17:48,240
and so see what he having here so just

00:17:46,559 --> 00:17:49,760
this dot equals whatever you'd like it

00:17:48,240 --> 00:17:53,520
to be

00:17:49,760 --> 00:17:54,400
great up next in alphabetical order once

00:17:53,520 --> 00:17:57,520
again

00:17:54,400 --> 00:17:59,120
is uh react and as you can see the

00:17:57,520 --> 00:18:00,480
relationship with web components is a

00:17:59,120 --> 00:18:03,919
rocky one

00:18:00,480 --> 00:18:07,600
uh the issues lie with how react handles

00:18:03,919 --> 00:18:09,200
data and events react stringifies data

00:18:07,600 --> 00:18:11,440
going into the web component

00:18:09,200 --> 00:18:13,360
so for strings that's fine but

00:18:11,440 --> 00:18:14,960
everything else like objects or arrays

00:18:13,360 --> 00:18:16,960
or they're considered rich data

00:18:14,960 --> 00:18:18,559
that can cause problems like the

00:18:16,960 --> 00:18:19,440
infamous object object

00:18:18,559 --> 00:18:22,160
i don't know how many people have

00:18:19,440 --> 00:18:23,760
actually dealt with react you think you

00:18:22,160 --> 00:18:25,200
pass in something and on the other end

00:18:23,760 --> 00:18:28,000
it comes out as object object

00:18:25,200 --> 00:18:29,440
that's why so and as for events react

00:18:28,000 --> 00:18:32,320
has its own synthetic

00:18:29,440 --> 00:18:34,320
event system so it can't so it can't

00:18:32,320 --> 00:18:36,960
listen to the native dom

00:18:34,320 --> 00:18:38,240
and those events so let's see what we

00:18:36,960 --> 00:18:40,720
need to do to get things working

00:18:38,240 --> 00:18:40,720
properly

00:18:41,280 --> 00:18:47,760
now our keep our keypad web component

00:18:45,280 --> 00:18:48,720
will be used in a react application as a

00:18:47,760 --> 00:18:50,559
dialer

00:18:48,720 --> 00:18:52,960
to make phone calls and then save the

00:18:50,559 --> 00:18:55,600
contact when completed

00:18:52,960 --> 00:18:56,640
and so i can give it a shot and uh no

00:18:55,600 --> 00:18:59,120
you cannot

00:18:56,640 --> 00:19:01,120
actually make phone calls right now but

00:18:59,120 --> 00:19:03,520
uh we go through how to

00:19:01,120 --> 00:19:06,559
actually make that happen in the blog

00:19:03,520 --> 00:19:09,919
posts using the vantage voice api

00:19:06,559 --> 00:19:12,080
so now go ahead so uh let me

00:19:09,919 --> 00:19:13,280
down here hopefully i don't go back

00:19:12,080 --> 00:19:16,559
again

00:19:13,280 --> 00:19:17,360
there it is so we can see here here's

00:19:16,559 --> 00:19:20,720
the dialer

00:19:17,360 --> 00:19:20,720
in our react rolodex

00:19:22,840 --> 00:19:28,480
alrighty call

00:19:26,480 --> 00:19:30,160
so we assumed that the call was went

00:19:28,480 --> 00:19:33,600
through then we can hang up

00:19:30,160 --> 00:19:35,039
and it asks us for a name and everything

00:19:33,600 --> 00:19:37,120
is in local storage

00:19:35,039 --> 00:19:38,160
so and there we go you can edit delete

00:19:37,120 --> 00:19:41,200
it and

00:19:38,160 --> 00:19:42,480
select it to bring it back into there

00:19:41,200 --> 00:19:45,360
cool so hopefully you're playing around

00:19:42,480 --> 00:19:47,679
with that all right

00:19:45,360 --> 00:19:47,679
now

00:19:48,960 --> 00:19:52,400
so we're going to give examples using

00:19:51,200 --> 00:19:55,440
different versions of

00:19:52,400 --> 00:19:58,080
react and here's an example uh

00:19:55,440 --> 00:19:59,760
for versions older than 16.3 because

00:19:58,080 --> 00:20:01,760
there may be some legacy code

00:19:59,760 --> 00:20:03,280
and you want to put in your web

00:20:01,760 --> 00:20:05,200
component so that

00:20:03,280 --> 00:20:07,760
when you upgrade you don't have to

00:20:05,200 --> 00:20:10,640
rewrite all those things

00:20:07,760 --> 00:20:12,000
and so now like before we load our web

00:20:10,640 --> 00:20:13,840
component from a cdn

00:20:12,000 --> 00:20:15,600
you can also use npm install and import

00:20:13,840 --> 00:20:19,600
it as we did with

00:20:15,600 --> 00:20:21,840
the angular example now we place the web

00:20:19,600 --> 00:20:21,840
component

00:20:22,240 --> 00:20:28,320
don't wanna so here

00:20:25,919 --> 00:20:29,280
is uh the web component in the render

00:20:28,320 --> 00:20:32,840
function

00:20:29,280 --> 00:20:34,480
now notice that it has towards the end

00:20:32,840 --> 00:20:37,679
here

00:20:34,480 --> 00:20:39,919
a ref keypad and

00:20:37,679 --> 00:20:41,360
it works like the hashtag keypad from

00:20:39,919 --> 00:20:43,280
the angular example

00:20:41,360 --> 00:20:46,000
and it lets react know to pay attention

00:20:43,280 --> 00:20:46,000
to this element

00:20:46,880 --> 00:20:52,720
now on line 41 here

00:20:49,919 --> 00:20:53,600
uh then in the component did mount

00:20:52,720 --> 00:20:57,039
section

00:20:53,600 --> 00:20:57,039
uh here here we are

00:20:57,440 --> 00:21:01,039
here we're adding an event listener for

00:20:59,520 --> 00:21:04,240
the web components digits

00:21:01,039 --> 00:21:05,360
sent custom event so let me move this

00:21:04,240 --> 00:21:09,840
over here so

00:21:05,360 --> 00:21:09,840
let me highlight that so it moves over

00:21:10,799 --> 00:21:13,840
right there so you can see it's a digit

00:21:12,880 --> 00:21:16,480
sent event

00:21:13,840 --> 00:21:18,640
that's coming from our web components

00:21:16,480 --> 00:21:21,840
and then uh

00:21:18,640 --> 00:21:26,559
cool so now notice uh the this

00:21:21,840 --> 00:21:26,559
dot refs dot keypad syntax

00:21:28,720 --> 00:21:34,640
right here now if we had set the ref

00:21:32,000 --> 00:21:35,360
equal to let's say example then it would

00:21:34,640 --> 00:21:38,960
be this

00:21:35,360 --> 00:21:41,360
dot refs dot example

00:21:38,960 --> 00:21:43,120
and now you can use the same syntax to

00:21:41,360 --> 00:21:44,559
call methods on the elements so we're

00:21:43,120 --> 00:21:47,600
doing that here so this

00:21:44,559 --> 00:21:51,120
dot refs dot keypad create

00:21:47,600 --> 00:21:53,200
action now

00:21:51,120 --> 00:21:54,880
here is how you would set a property

00:21:53,200 --> 00:21:56,559
programmatically

00:21:54,880 --> 00:21:58,000
here you can pass in the rich data that

00:21:56,559 --> 00:21:58,480
we mentioned earlier but right now we're

00:21:58,000 --> 00:22:01,360
just

00:21:58,480 --> 00:22:01,360
passing in the string

00:22:05,360 --> 00:22:09,760
now if you're using version 16.3 or

00:22:08,880 --> 00:22:12,960
later

00:22:09,760 --> 00:22:17,360
you may want to use create ref

00:22:12,960 --> 00:22:18,880
now the way it's done in this example

00:22:17,360 --> 00:22:22,000
so the way it was done in the previous

00:22:18,880 --> 00:22:25,200
example 16-3 or earlier

00:22:22,000 --> 00:22:27,440
or earlier than 16.3 the example

00:22:25,200 --> 00:22:29,200
there uh would be considered legacy and

00:22:27,440 --> 00:22:29,919
will probably be removed in later

00:22:29,200 --> 00:22:31,840
versions

00:22:29,919 --> 00:22:33,679
so kind of make sure before you start

00:22:31,840 --> 00:22:36,400
using web component which version you're

00:22:33,679 --> 00:22:38,799
using so now let's look at the example

00:22:36,400 --> 00:22:39,600
and just like before bring in our web

00:22:38,799 --> 00:22:42,320
component

00:22:39,600 --> 00:22:42,320
just like that

00:22:42,640 --> 00:22:45,919
and then uh we add it to the render

00:22:44,400 --> 00:22:49,360
function again but notice

00:22:45,919 --> 00:22:51,600
the ref has changed so let me uh scroll

00:22:49,360 --> 00:22:51,600
over

00:22:51,919 --> 00:22:57,200
as you can see here now uh the ref is no

00:22:54,880 --> 00:23:00,720
longer a string

00:22:57,200 --> 00:23:00,720
and so this is because of how

00:23:02,320 --> 00:23:06,880
uh how react is creating the reference

00:23:05,200 --> 00:23:08,799
and so now it's using create

00:23:06,880 --> 00:23:11,360
ref as you can see right here on line

00:23:08,799 --> 00:23:11,360
18.

00:23:12,240 --> 00:23:16,559
now the way to add event listeners and

00:23:14,480 --> 00:23:19,360
call methods is also a little different

00:23:16,559 --> 00:23:20,000
and so as you can see before uh now it

00:23:19,360 --> 00:23:23,120
says this

00:23:20,000 --> 00:23:26,400
dot keypad dot current

00:23:23,120 --> 00:23:29,440
and that was different from before

00:23:26,400 --> 00:23:30,159
all right and then so now this also

00:23:29,440 --> 00:23:32,960
carries over

00:23:30,159 --> 00:23:34,080
into uh setting properties and it's also

00:23:32,960 --> 00:23:36,880
this dot keypad

00:23:34,080 --> 00:23:36,880
instead of like this

00:23:37,400 --> 00:23:42,159
this.keypad.this.ref.keypad

00:23:38,640 --> 00:23:46,000
now it's this dot keypad dot current

00:23:42,159 --> 00:23:48,720
so that's the difference there all right

00:23:46,000 --> 00:23:50,159
and so as i mentioned before the web is

00:23:48,720 --> 00:23:51,679
always changing and frameworks and

00:23:50,159 --> 00:23:52,480
libraries are no different so kind of

00:23:51,679 --> 00:23:55,360
keep

00:23:52,480 --> 00:23:56,640
aware of where your versions are but the

00:23:55,360 --> 00:23:58,320
one cool thing is that your web

00:23:56,640 --> 00:24:01,440
component isn't changing

00:23:58,320 --> 00:24:02,320
it's just how it's being referenced so

00:24:01,440 --> 00:24:05,600
now

00:24:02,320 --> 00:24:06,960
as of react 16.8 web hooks were

00:24:05,600 --> 00:24:09,039
introduced

00:24:06,960 --> 00:24:11,279
and they uh help with a lot of heavy

00:24:09,039 --> 00:24:13,520
lifting so let's see how we can use them

00:24:11,279 --> 00:24:15,760
uh load the web deployment from cdn or

00:24:13,520 --> 00:24:18,480
npm install again

00:24:15,760 --> 00:24:20,480
and like the previous examples uh place

00:24:18,480 --> 00:24:22,480
the web component in the render function

00:24:20,480 --> 00:24:23,919
but again notice a slight difference in

00:24:22,480 --> 00:24:26,080
the ref property

00:24:23,919 --> 00:24:27,039
now the only real difference in between

00:24:26,080 --> 00:24:28,480
react versions

00:24:27,039 --> 00:24:30,480
is the way reference to the web

00:24:28,480 --> 00:24:35,200
component is created and used

00:24:30,480 --> 00:24:35,200
so if you look here on line 102

00:24:37,520 --> 00:24:40,640
now see uh it doesn't have the this dot

00:24:39,919 --> 00:24:44,799
anymore

00:24:40,640 --> 00:24:48,880
there so it's just keypad all right

00:24:44,799 --> 00:24:49,840
so now uh so in this case we're going to

00:24:48,880 --> 00:24:53,200
be using hooks

00:24:49,840 --> 00:24:54,080
to create the reference so here is the

00:24:53,200 --> 00:24:57,919
use

00:24:54,080 --> 00:25:00,559
ref hook and that creates the reference

00:24:57,919 --> 00:25:01,600
and then in use effect in the user's

00:25:00,559 --> 00:25:04,640
effect hook

00:25:01,600 --> 00:25:06,799
you add the event listeners

00:25:04,640 --> 00:25:07,919
and then uh here's how to call the

00:25:06,799 --> 00:25:11,600
create action

00:25:07,919 --> 00:25:14,559
uh custom event so again it's keep so

00:25:11,600 --> 00:25:15,679
before was this dot dot current but

00:25:14,559 --> 00:25:18,159
since we're using

00:25:15,679 --> 00:25:19,440
uh hooks it's just keypad dot current

00:25:18,159 --> 00:25:21,039
create action

00:25:19,440 --> 00:25:22,559
so a slight difference from the one

00:25:21,039 --> 00:25:24,880
before but it's doing a lot more things

00:25:22,559 --> 00:25:28,240
under the hood

00:25:24,880 --> 00:25:30,320
okay and so now uh

00:25:28,240 --> 00:25:31,679
if we want to set a property on the web

00:25:30,320 --> 00:25:33,279
component this is how we do it

00:25:31,679 --> 00:25:35,200
pretty much the same thing just without

00:25:33,279 --> 00:25:38,640
this dot from version

00:25:35,200 --> 00:25:42,320
uh 16.3 up

00:25:38,640 --> 00:25:45,120
cool so now like i said before

00:25:42,320 --> 00:25:45,520
um i go into more depth into the blog

00:25:45,120 --> 00:25:47,840
post

00:25:45,520 --> 00:25:48,559
i wrote and then we even build a working

00:25:47,840 --> 00:25:50,080
dialer

00:25:48,559 --> 00:25:52,880
that can make phone calls using the

00:25:50,080 --> 00:25:56,559
vonage advantage voice api

00:25:52,880 --> 00:25:58,720
now finally let's talk about view

00:25:56,559 --> 00:26:01,120
according to custom element custom dash

00:25:58,720 --> 00:26:02,799
elements dash everywhere dot com

00:26:01,120 --> 00:26:04,720
using web components in a view

00:26:02,799 --> 00:26:07,840
application should be smooth sailing

00:26:04,720 --> 00:26:10,240
so let's take a look at some examples

00:26:07,840 --> 00:26:10,960
in our view application the key

00:26:10,240 --> 00:26:13,360
component

00:26:10,960 --> 00:26:14,720
will be used to enter in a security code

00:26:13,360 --> 00:26:18,400
to open a vault

00:26:14,720 --> 00:26:21,679
or should i say view alt huh

00:26:18,400 --> 00:26:24,000
anyone fine all right give it a try

00:26:21,679 --> 00:26:27,279
so you see the security code there let

00:26:24,000 --> 00:26:27,279
me uh where's my mouse

00:26:27,600 --> 00:26:34,080
so let's go with six five

00:26:31,200 --> 00:26:35,600
four let's see if that's right oh nope

00:26:34,080 --> 00:26:37,520
wrong code

00:26:35,600 --> 00:26:39,840
and then it's one two three four the

00:26:37,520 --> 00:26:43,600
most secure passcode ever

00:26:39,840 --> 00:26:46,320
no one ever thinks of that enter

00:26:43,600 --> 00:26:46,880
success and then we have a minion there

00:26:46,320 --> 00:26:50,159
you know

00:26:46,880 --> 00:26:50,559
telling you you succeeded all right so

00:26:50,159 --> 00:26:53,279
now

00:26:50,559 --> 00:26:54,960
just like before we start by loading the

00:26:53,279 --> 00:26:56,960
web component and putting the element

00:26:54,960 --> 00:26:59,440
in the application so that's what line

00:26:56,960 --> 00:27:01,840
one through six is doing right now

00:26:59,440 --> 00:27:02,880
uh notice that the ref property is just

00:27:01,840 --> 00:27:06,400
like in react

00:27:02,880 --> 00:27:07,919
so ref equals something

00:27:06,400 --> 00:27:10,240
view has a similar way of binding to

00:27:07,919 --> 00:27:13,600
properties and events just like angular

00:27:10,240 --> 00:27:17,760
except using uh a colon

00:27:13,600 --> 00:27:20,159
for a v or v bind and an at symbol

00:27:17,760 --> 00:27:22,399
let me uh highlight it over here so you

00:27:20,159 --> 00:27:26,240
can see it

00:27:22,399 --> 00:27:28,640
so here is a cool all right

00:27:26,240 --> 00:27:29,360
all right here's the colon placeholder

00:27:28,640 --> 00:27:32,159
and so

00:27:29,360 --> 00:27:33,200
that's going to bind to the placeholder

00:27:32,159 --> 00:27:36,640
variable

00:27:33,200 --> 00:27:39,919
and then digits so there's the at symbol

00:27:36,640 --> 00:27:42,960
in front of digits dash sent because

00:27:39,919 --> 00:27:44,399
that digits sent is the

00:27:42,960 --> 00:27:47,039
custom event that comes from the web

00:27:44,399 --> 00:27:50,320
component and you listen for events

00:27:47,039 --> 00:27:53,600
on in in view with at sign

00:27:50,320 --> 00:27:56,799
or v dash on

00:27:53,600 --> 00:27:57,919
great so now again as with angular we

00:27:56,799 --> 00:27:59,919
need to tell vue

00:27:57,919 --> 00:28:01,039
not to worry about any elements in our

00:27:59,919 --> 00:28:03,840
application that

00:28:01,039 --> 00:28:04,159
it doesn't know about so in view two we

00:28:03,840 --> 00:28:07,200
use

00:28:04,159 --> 00:28:09,360
ignored elements

00:28:07,200 --> 00:28:11,200
and uh it's an array that contains

00:28:09,360 --> 00:28:12,799
strings and or regular expressions that

00:28:11,200 --> 00:28:15,200
expose the tag names

00:28:12,799 --> 00:28:17,679
of the web components so it is then

00:28:15,200 --> 00:28:19,679
passed into the view configuration

00:28:17,679 --> 00:28:21,919
so that it knows to ignore those

00:28:19,679 --> 00:28:23,760
elements

00:28:21,919 --> 00:28:25,600
now here is the initial value for the

00:28:23,760 --> 00:28:28,240
placeholder property so we set it as

00:28:25,600 --> 00:28:28,880
enter security code and then in the

00:28:28,240 --> 00:28:31,919
methods

00:28:28,880 --> 00:28:34,799
section of the view app we call the

00:28:31,919 --> 00:28:36,320
keypad's cancel action method and notice

00:28:34,799 --> 00:28:39,600
the dollar sign refs

00:28:36,320 --> 00:28:41,520
dot name and in this case is keypad

00:28:39,600 --> 00:28:42,720
used in the ref tag in the element in

00:28:41,520 --> 00:28:43,760
the element

00:28:42,720 --> 00:28:45,840
and then to pro and then

00:28:43,760 --> 00:28:47,039
programmatically set the placeholder is

00:28:45,840 --> 00:28:50,159
right below there on line

00:28:47,039 --> 00:28:52,399
27. and now

00:28:50,159 --> 00:28:54,159
let's talk about view three the newer

00:28:52,399 --> 00:28:56,240
version so everything starts out the

00:28:54,159 --> 00:28:58,480
same as in view two

00:28:56,240 --> 00:29:00,320
but the way to let view know about our

00:28:58,480 --> 00:29:04,240
web component has changed

00:29:00,320 --> 00:29:08,159
is no longer ignored elements but is now

00:29:04,240 --> 00:29:12,240
is custom element so instead of an array

00:29:08,159 --> 00:29:14,080
uh is custom element expects a function

00:29:12,240 --> 00:29:17,200
and so you see here line 43 let me move

00:29:14,080 --> 00:29:20,240
over so it expects a function

00:29:17,200 --> 00:29:21,039
uh that describes what to look for now

00:29:20,240 --> 00:29:24,399
also uh

00:29:21,039 --> 00:29:26,960
now in view three uh the check to see

00:29:24,399 --> 00:29:28,240
if the element is a web component is

00:29:26,960 --> 00:29:30,240
done during the template

00:29:28,240 --> 00:29:32,159
compilation and that'll be important

00:29:30,240 --> 00:29:34,960
later

00:29:32,159 --> 00:29:38,000
so now other than that everything else

00:29:34,960 --> 00:29:40,399
is the same as in view 2.

00:29:38,000 --> 00:29:42,159
now one of the newest additions to vue

00:29:40,399 --> 00:29:44,080
is the composition api

00:29:42,159 --> 00:29:45,919
it was created to help address some

00:29:44,080 --> 00:29:47,039
limitations developers were facing as

00:29:45,919 --> 00:29:49,840
applications grew

00:29:47,039 --> 00:29:52,000
over time and became more complex now

00:29:49,840 --> 00:29:53,520
remember when i said that view three now

00:29:52,000 --> 00:29:55,440
checks this t if there are

00:29:53,520 --> 00:29:56,799
any web components during template

00:29:55,440 --> 00:29:59,200
compilation

00:29:56,799 --> 00:30:00,480
so well uh there are two examples so the

00:29:59,200 --> 00:30:03,200
two examples before

00:30:00,480 --> 00:30:04,480
the view two and view three uh the way

00:30:03,200 --> 00:30:08,159
they were done they're known as

00:30:04,480 --> 00:30:09,600
on the fly template compilation and you

00:30:08,159 --> 00:30:11,279
can kind of tell when it's not so when

00:30:09,600 --> 00:30:11,679
you ever have like a file that ends in

00:30:11,279 --> 00:30:14,960
dot

00:30:11,679 --> 00:30:16,559
view vue.view there's a compilation step

00:30:14,960 --> 00:30:19,200
that needs to turn it into something the

00:30:16,559 --> 00:30:22,480
browser can understand

00:30:19,200 --> 00:30:25,760
um so now in the in this composition api

00:30:22,480 --> 00:30:27,840
example webpack is the compiler so we

00:30:25,760 --> 00:30:30,480
need to look for the web

00:30:27,840 --> 00:30:32,080
pack we need to look for uh the web

00:30:30,480 --> 00:30:34,559
components in its con

00:30:32,080 --> 00:30:35,360
in the webpack configuration so now

00:30:34,559 --> 00:30:38,080
there's different

00:30:35,360 --> 00:30:39,440
sorts of uh compilers that you use that

00:30:38,080 --> 00:30:42,159
you can put use for view

00:30:39,440 --> 00:30:42,880
so just look for like the config file

00:30:42,159 --> 00:30:44,799
and so

00:30:42,880 --> 00:30:45,919
you'll add this bit of code here so

00:30:44,799 --> 00:30:48,480
that's what that's doing

00:30:45,919 --> 00:30:49,440
is letting webpack know anytime you see

00:30:48,480 --> 00:30:52,000
this

00:30:49,440 --> 00:30:53,919
return the custom element so that vue

00:30:52,000 --> 00:30:55,279
knows not to worry about it

00:30:53,919 --> 00:30:58,640
and that we know what we're doing with

00:30:55,279 --> 00:31:01,039
it now the ref

00:30:58,640 --> 00:31:02,799
has grown in the composition api to

00:31:01,039 --> 00:31:05,679
include tracking other values

00:31:02,799 --> 00:31:07,679
not just dom elements so it now needs to

00:31:05,679 --> 00:31:11,120
be imported and initialized

00:31:07,679 --> 00:31:11,120
in inside setup

00:31:12,640 --> 00:31:16,640
right there there we go um so yeah so

00:31:15,279 --> 00:31:19,840
you can see right there we're importing

00:31:16,640 --> 00:31:24,000
ref from view and then we're setting up

00:31:19,840 --> 00:31:28,799
the keypad with a null initially

00:31:24,000 --> 00:31:31,760
so now notice that uh oh here we go

00:31:28,799 --> 00:31:32,960
cool so now if you notice here hopefully

00:31:31,760 --> 00:31:36,720
i don't mess this

00:31:32,960 --> 00:31:38,799
up if you notice

00:31:36,720 --> 00:31:40,159
the dot value here whenever we're

00:31:38,799 --> 00:31:44,000
setting

00:31:40,159 --> 00:31:48,399
uh the either the placeholder or

00:31:44,000 --> 00:31:50,399
uh activating the cancel action method

00:31:48,399 --> 00:31:51,919
uh so that's just a thing to kind of

00:31:50,399 --> 00:31:53,840
make sure notice if it's not working

00:31:51,919 --> 00:31:57,279
make sure you have a dot value

00:31:53,840 --> 00:31:59,440
and then uh that's it

00:31:57,279 --> 00:32:00,640
uh so we've just gone through using the

00:31:59,440 --> 00:32:02,240
same web component

00:32:00,640 --> 00:32:04,080
in different configurations with

00:32:02,240 --> 00:32:05,120
different functionality in different

00:32:04,080 --> 00:32:06,320
environments

00:32:05,120 --> 00:32:07,440
so i hope that gets you interested

00:32:06,320 --> 00:32:08,799
enough to learn more about web

00:32:07,440 --> 00:32:12,159
components if it did

00:32:08,799 --> 00:32:14,640
i invite you to join the ride and um

00:32:12,159 --> 00:32:16,159
thanks so if you'd like a deeper dive

00:32:14,640 --> 00:32:19,399
into what i presented

00:32:16,159 --> 00:32:21,120
uh you can find the blog post here at

00:32:19,399 --> 00:32:24,720
dwayne.invonace

00:32:21,120 --> 00:32:26,159
and uh lifelong.dev is my website so if

00:32:24,720 --> 00:32:28,240
you'd like to get in contact

00:32:26,159 --> 00:32:29,440
and here is a link to our developer

00:32:28,240 --> 00:32:32,320
documentation

00:32:29,440 --> 00:32:33,919
and then also here is a coupon code for

00:32:32,320 --> 00:32:35,840
10 euros to start you off

00:32:33,919 --> 00:32:37,039
to build uh something cool just press

00:32:35,840 --> 00:32:38,320
that and it'll show you the code i don't

00:32:37,039 --> 00:32:41,279
want to show it on here

00:32:38,320 --> 00:32:43,200
and then uh yeah thanks again brilliant

00:32:41,279 --> 00:32:45,519
thanks so much dwayne that was awesome

00:32:43,200 --> 00:32:46,559
i mean that was quite a whistle-stop

00:32:45,519 --> 00:32:50,080
tour of

00:32:46,559 --> 00:32:51,919
a lot of different approaches so

00:32:50,080 --> 00:32:53,600
yeah thanks for squeezing that in and

00:32:51,919 --> 00:32:55,760
you know what it's the kind of talk

00:32:53,600 --> 00:32:57,440
that i personally been waiting for for

00:32:55,760 --> 00:33:00,240
ages i really

00:32:57,440 --> 00:33:00,720
uh think web components um solve a lot

00:33:00,240 --> 00:33:03,600
of

00:33:00,720 --> 00:33:04,799
or yeah long-standing problems for us

00:33:03,600 --> 00:33:07,840
developers and

00:33:04,799 --> 00:33:09,360
i think a lot of people um have

00:33:07,840 --> 00:33:11,279
yeah have struggled to understand how to

00:33:09,360 --> 00:33:13,760
actually integrate them into

00:33:11,279 --> 00:33:15,039
into their ui framework of choice uh so

00:33:13,760 --> 00:33:16,559
that was super useful

00:33:15,039 --> 00:33:18,159
there was some there was a couple of

00:33:16,559 --> 00:33:21,039
questions in the chat so

00:33:18,159 --> 00:33:21,840
uh yeah if um if those of you that asked

00:33:21,039 --> 00:33:25,200
questions

00:33:21,840 --> 00:33:29,039
uh in the chat wanna uh unmute and

00:33:25,200 --> 00:33:32,399
uh asked wayne directly please go for it

00:33:29,039 --> 00:33:32,399
chris i think you had a question

00:33:32,720 --> 00:33:36,720
yeah hi uh you mentioned that start your

00:33:34,960 --> 00:33:37,840
loading is in via a cdn

00:33:36,720 --> 00:33:40,080
i was wondering if there was a

00:33:37,840 --> 00:33:41,919
performance impact from for that because

00:33:40,080 --> 00:33:44,320
i read the other day that um loading

00:33:41,919 --> 00:33:47,200
google fonts in virus cdn is actually

00:33:44,320 --> 00:33:49,039
negative for performance it all depends

00:33:47,200 --> 00:33:50,720
on your uh use case so you

00:33:49,039 --> 00:33:52,720
that's what's cool about web components

00:33:50,720 --> 00:33:53,919
you can do it both ways so whatever your

00:33:52,720 --> 00:33:56,960
use case

00:33:53,919 --> 00:33:58,080
is so it that would depend on the cdn

00:33:56,960 --> 00:34:01,039
pretty much so if you have like your own

00:33:58,080 --> 00:34:02,960
cdn as dedicated that might be uh

00:34:01,039 --> 00:34:04,240
may fit your needs because if you do

00:34:02,960 --> 00:34:04,799
that then you don't actually have to

00:34:04,240 --> 00:34:07,279
keep

00:34:04,799 --> 00:34:09,040
let's say you you update your that web

00:34:07,279 --> 00:34:10,639
component quite a bit

00:34:09,040 --> 00:34:12,320
so anytime you would have to if you ever

00:34:10,639 --> 00:34:13,760
updated it then you'd have to update

00:34:12,320 --> 00:34:16,560
your packages

00:34:13,760 --> 00:34:17,119
and install it again if you did the npm

00:34:16,560 --> 00:34:18,960
install

00:34:17,119 --> 00:34:19,839
whereas if you do a cdn you can do that

00:34:18,960 --> 00:34:20,960
but if you know something that's going

00:34:19,839 --> 00:34:22,240
to be there for a while

00:34:20,960 --> 00:34:24,480
and you're going to keep that version

00:34:22,240 --> 00:34:26,720
then you might as well like npm install

00:34:24,480 --> 00:34:27,679
okay so the web components are very

00:34:26,720 --> 00:34:30,879
versatile which is

00:34:27,679 --> 00:34:31,599
a thing that i hope i got across yeah

00:34:30,879 --> 00:34:33,040
definitely

00:34:31,599 --> 00:34:35,200
uh yeah and it was a really good

00:34:33,040 --> 00:34:36,720
question because um yeah the beauty of

00:34:35,200 --> 00:34:39,280
them obviously or anything like this

00:34:36,720 --> 00:34:40,639
that can be easily distributed across

00:34:39,280 --> 00:34:43,359
different applications

00:34:40,639 --> 00:34:44,000
uh comes with that uh yeah do you do it

00:34:43,359 --> 00:34:46,079
at

00:34:44,000 --> 00:34:47,280
runtime or at build time you know yeah

00:34:46,079 --> 00:34:49,520
when do you request the thing

00:34:47,280 --> 00:34:51,040
and how do you keep it up to date so uh

00:34:49,520 --> 00:34:54,560
yeah good question good answer

00:34:51,040 --> 00:34:55,119
um okay so who else uh asked a question

00:34:54,560 --> 00:34:58,079
ak

00:34:55,119 --> 00:34:59,359
i can see yours yeah um hi there um

00:34:58,079 --> 00:35:00,800
thanks a lot dwayne for your

00:34:59,359 --> 00:35:04,160
presentation

00:35:00,800 --> 00:35:06,240
i just want to check have you um

00:35:04,160 --> 00:35:08,079
i know you you showed building the web

00:35:06,240 --> 00:35:12,079
components from scratch

00:35:08,079 --> 00:35:14,079
there are use cases say if you

00:35:12,079 --> 00:35:16,079
you know in a company you say using

00:35:14,079 --> 00:35:17,599
angular you got reusable angular

00:35:16,079 --> 00:35:18,720
components you merge with another

00:35:17,599 --> 00:35:20,320
company

00:35:18,720 --> 00:35:22,400
that has react they've got reusable

00:35:20,320 --> 00:35:24,000
components and you want to start you

00:35:22,400 --> 00:35:25,599
don't want to build from scratch but you

00:35:24,000 --> 00:35:28,320
want to convert

00:35:25,599 --> 00:35:30,000
current components into web components

00:35:28,320 --> 00:35:31,920
so you can use across the board so

00:35:30,000 --> 00:35:32,560
angular has like angular element

00:35:31,920 --> 00:35:35,359
elements

00:35:32,560 --> 00:35:37,520
yep so i just want to know if you found

00:35:35,359 --> 00:35:39,599
any sort of limitations

00:35:37,520 --> 00:35:41,599
on this conversion pattern so if you

00:35:39,599 --> 00:35:45,359
convert in stuff from angular

00:35:41,599 --> 00:35:47,599
components to web components using a

00:35:45,359 --> 00:35:48,960
react and converting the react component

00:35:47,599 --> 00:35:51,359
or view component

00:35:48,960 --> 00:35:52,880
into web components and using it across

00:35:51,359 --> 00:35:55,520
um frameworks

00:35:52,880 --> 00:35:56,400
that are sort of limitations you found

00:35:55,520 --> 00:35:58,960
actually say

00:35:56,400 --> 00:35:59,920
x kind of component won't work uh

00:35:58,960 --> 00:36:02,320
converting

00:35:59,920 --> 00:36:04,480
native components you already have built

00:36:02,320 --> 00:36:06,560
into web components can you

00:36:04,480 --> 00:36:08,400
pretty much convert any kind of

00:36:06,560 --> 00:36:08,880
component into web component and use

00:36:08,400 --> 00:36:11,280
across

00:36:08,880 --> 00:36:12,960
frameworks or some frameworks it's like

00:36:11,280 --> 00:36:13,920
actually you can't use this type of

00:36:12,960 --> 00:36:15,760
component

00:36:13,920 --> 00:36:17,440
so like you mentioned uh angular has

00:36:15,760 --> 00:36:19,440
angular elements and so

00:36:17,440 --> 00:36:21,119
that's a way of doing that i think vue

00:36:19,440 --> 00:36:23,920
has one as well

00:36:21,119 --> 00:36:25,440
i'm not quite too sure about react

00:36:23,920 --> 00:36:26,720
because react is more like

00:36:25,440 --> 00:36:28,720
like a library so it just handles kind

00:36:26,720 --> 00:36:32,160
of like the ui stuff so i'm not sure

00:36:28,720 --> 00:36:33,599
if there's one there but the thing is it

00:36:32,160 --> 00:36:35,520
now for your example if you already have

00:36:33,599 --> 00:36:37,119
all these things in angular and you want

00:36:35,520 --> 00:36:37,599
to convert it over to react or what have

00:36:37,119 --> 00:36:39,680
you

00:36:37,599 --> 00:36:41,119
it may depending on how much stuff there

00:36:39,680 --> 00:36:44,000
is it may be easier

00:36:41,119 --> 00:36:44,480
just to go from using angular elements

00:36:44,000 --> 00:36:47,040
but then

00:36:44,480 --> 00:36:47,680
the thing is you kind of like bring

00:36:47,040 --> 00:36:50,560
along

00:36:47,680 --> 00:36:51,359
the whole angular framework with it yeah

00:36:50,560 --> 00:36:53,119
because

00:36:51,359 --> 00:36:54,720
it still has because you still need

00:36:53,119 --> 00:36:55,839
angular to kind of decipher what's

00:36:54,720 --> 00:36:57,599
happening

00:36:55,839 --> 00:36:59,119
whereas if you're just creating uh

00:36:57,599 --> 00:37:02,800
native web components

00:36:59,119 --> 00:37:04,720
it's just using you know native uh apis

00:37:02,800 --> 00:37:06,480
that come with the browser so again like

00:37:04,720 --> 00:37:07,599
with any you know developer question it

00:37:06,480 --> 00:37:09,839
depends

00:37:07,599 --> 00:37:11,520
yeah because our scenario is not sort of

00:37:09,839 --> 00:37:14,640
our choice it's just

00:37:11,520 --> 00:37:16,320
uh the business grows you merge and

00:37:14,640 --> 00:37:17,760
every company you merge with has their

00:37:16,320 --> 00:37:19,680
own uh js

00:37:17,760 --> 00:37:21,440
frameworks you know well let's move to

00:37:19,680 --> 00:37:22,240
web components and then you get this

00:37:21,440 --> 00:37:24,160
problem

00:37:22,240 --> 00:37:26,240
so now what you could probably do is uh

00:37:24,160 --> 00:37:28,480
carry over what you have now

00:37:26,240 --> 00:37:29,839
in uh using angular elements and then

00:37:28,480 --> 00:37:32,960
you create any new ones

00:37:29,839 --> 00:37:35,359
just use a native web component

00:37:32,960 --> 00:37:36,240
exactly and then you can kind of go back

00:37:35,359 --> 00:37:39,440
and

00:37:36,240 --> 00:37:42,560
recreate them as you have time

00:37:39,440 --> 00:37:44,560
sounds good thank you oh thank you i

00:37:42,560 --> 00:37:45,680
think that might be all the questions

00:37:44,560 --> 00:37:47,359
well it's all the questions that i can

00:37:45,680 --> 00:37:49,839
see in the chat does anyone

00:37:47,359 --> 00:37:50,960
else want to ask a question we've got a

00:37:49,839 --> 00:37:52,560
couple more minutes

00:37:50,960 --> 00:37:55,280
i was gonna ask a question how do you

00:37:52,560 --> 00:37:57,680
deal with like styling and

00:37:55,280 --> 00:37:58,400
uh if you've got different frameworks

00:37:57,680 --> 00:38:01,680
like sas

00:37:58,400 --> 00:38:04,560
or you just kind of take the css

00:38:01,680 --> 00:38:06,400
or you wanna customize it in different

00:38:04,560 --> 00:38:09,040
applications i suppose is it just

00:38:06,400 --> 00:38:09,760
a similar sort of thing you can import

00:38:09,040 --> 00:38:12,320
it

00:38:09,760 --> 00:38:13,599
yeah so what you can do is uh because

00:38:12,320 --> 00:38:15,119
there's actually depending on what

00:38:13,599 --> 00:38:16,960
you're using to kind of create

00:38:15,119 --> 00:38:18,720
uh the web components because i go

00:38:16,960 --> 00:38:19,839
through a bunch of tools and things that

00:38:18,720 --> 00:38:22,400
may help make it easier

00:38:19,839 --> 00:38:23,680
so you can actually um because there's

00:38:22,400 --> 00:38:26,800
like the uh

00:38:23,680 --> 00:38:30,160
the the layer the uh the shadow layer

00:38:26,800 --> 00:38:31,599
so uh anything you do inside of the web

00:38:30,160 --> 00:38:32,720
component so like stays within the web

00:38:31,599 --> 00:38:35,040
component

00:38:32,720 --> 00:38:37,680
but there are ways to be able to apply

00:38:35,040 --> 00:38:39,920
styling to the web component

00:38:37,680 --> 00:38:40,960
so you can have it where you don't want

00:38:39,920 --> 00:38:42,400
because normally you don't want the

00:38:40,960 --> 00:38:43,280
styling to leak out of your web

00:38:42,400 --> 00:38:44,880
component

00:38:43,280 --> 00:38:46,560
and then you're able to because again

00:38:44,880 --> 00:38:50,000
it's just like a regular

00:38:46,560 --> 00:38:52,400
uh dom element and so you can you know

00:38:50,000 --> 00:38:53,359
apply styles to it if you want and so

00:38:52,400 --> 00:38:56,960
there's different ways

00:38:53,359 --> 00:38:59,119
of making that happen yeah i mean

00:38:56,960 --> 00:39:00,880
one of the beauties of web components is

00:38:59,119 --> 00:39:02,320
that they are completely encapsulated

00:39:00,880 --> 00:39:04,079
right they they

00:39:02,320 --> 00:39:06,320
they're protected from one another but

00:39:04,079 --> 00:39:09,200
um yeah us but yeah you could

00:39:06,320 --> 00:39:10,079
theme using sas and and have them

00:39:09,200 --> 00:39:12,320
inherit right

00:39:10,079 --> 00:39:13,440
but but still have their own styles

00:39:12,320 --> 00:39:14,960
within them

00:39:13,440 --> 00:39:16,800
um i think it's kind of nice that you

00:39:14,960 --> 00:39:18,800
can just basically put a web component

00:39:16,800 --> 00:39:19,760
in in a completely different context and

00:39:18,800 --> 00:39:21,440
they'll look

00:39:19,760 --> 00:39:22,880
it should look identical right it should

00:39:21,440 --> 00:39:24,480
work exactly the same

00:39:22,880 --> 00:39:26,000
hopefully all of this lets people look

00:39:24,480 --> 00:39:27,440
more into because the more people

00:39:26,000 --> 00:39:29,119
into web components the more people that

00:39:27,440 --> 00:39:30,400
ask questions and then it can kind of

00:39:29,119 --> 00:39:33,200
grow and get better

00:39:30,400 --> 00:39:33,680
and you know easier and uh you know more

00:39:33,200 --> 00:39:36,400
useful

00:39:33,680 --> 00:39:37,680
for everyone yeah i couldn't agree more

00:39:36,400 --> 00:39:41,359
i think it's been um

00:39:37,680 --> 00:39:43,599
a a topic of um

00:39:41,359 --> 00:39:45,200
yeah many a meet up and many a

00:39:43,599 --> 00:39:46,640
discussion online right about whether

00:39:45,200 --> 00:39:48,320
they're really going to take off or not

00:39:46,640 --> 00:39:51,280
and they kind of never really

00:39:48,320 --> 00:39:52,240
hit the big time um but i think yeah

00:39:51,280 --> 00:39:53,680
talks like yours

00:39:52,240 --> 00:39:55,200
um are really going to help with that i

00:39:53,680 --> 00:39:56,960
think maybe it's maybe it's a slow

00:39:55,200 --> 00:39:58,640
banner well you know it's uh always good

00:39:56,960 --> 00:40:02,000
to be you know then flame out quick

00:39:58,640 --> 00:40:04,319
kind of you know consistent

00:40:02,000 --> 00:40:05,440
and um but yeah so if anybody has any

00:40:04,319 --> 00:40:08,240
questions or anything please

00:40:05,440 --> 00:40:11,839
feel free to uh reach out and stuff so

00:40:08,240 --> 00:40:11,839
thanks once again

00:40:18,680 --> 00:40:28,750

YouTube URL: https://www.youtube.com/watch?v=SsijT3pEo8Q


