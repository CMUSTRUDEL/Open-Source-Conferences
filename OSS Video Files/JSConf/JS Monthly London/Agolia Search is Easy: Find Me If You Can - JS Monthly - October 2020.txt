Title: Agolia Search is Easy: Find Me If You Can - JS Monthly - October 2020
Publication date: 2020-11-12
Playlist: JS Monthly London
Description: 
	Find Me If You Can: Algolia Search is Easy // Gleb Bahmutov
This talk was presented live at JS Monthly, you can see the Q&A by viewing the original live-stream: https://youtu.be/OArbAGhVIF4

Having a good text search is the key to successful documentation, especially as the number of pages, examples, code recipes, answers, and other =user-facing text snippets grows. In this presentation, I will show how to set up the Algolia search index and use it from a static site to make sure your users find _everything_ they are looking for.

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,320 --> 00:00:06,080
hello everyone uh thank you for

00:00:03,360 --> 00:00:07,759
joining i'm gleo bachmatov vp of

00:00:06,080 --> 00:00:09,280
engineering at cypress detail you can

00:00:07,759 --> 00:00:11,920
find me on twitter you can find me on

00:00:09,280 --> 00:00:14,960
github you can find my personal site

00:00:11,920 --> 00:00:15,360
and i i'm here to talk about something

00:00:14,960 --> 00:00:17,680
else

00:00:15,360 --> 00:00:18,800
not about testing not about javascript

00:00:17,680 --> 00:00:20,240
code

00:00:18,800 --> 00:00:22,720
we'll kind of look at javascript code

00:00:20,240 --> 00:00:25,519
but my main point today is

00:00:22,720 --> 00:00:27,279
to talk about documentation search right

00:00:25,519 --> 00:00:28,000
and how to make a good documentation

00:00:27,279 --> 00:00:31,359
search

00:00:28,000 --> 00:00:34,800
using algolia before we do that

00:00:31,359 --> 00:00:38,079
i'll start how i usually start with

00:00:34,800 --> 00:00:41,840
uh a warning um so right now we

00:00:38,079 --> 00:00:44,559
are in a huge climate crisis if you read

00:00:41,840 --> 00:00:45,120
guardian this week you'll find that the

00:00:44,559 --> 00:00:49,520
arctic

00:00:45,120 --> 00:00:51,680
is not freezing over like it used to

00:00:49,520 --> 00:00:54,000
but the methane that sits right now

00:00:51,680 --> 00:00:57,440
frozen is actually started bubbling

00:00:54,000 --> 00:00:59,199
and we are pretty much on course to 3.5

00:00:57,440 --> 00:01:02,559
celsius degrees

00:00:59,199 --> 00:01:06,080
but if methane starts melting its

00:01:02,559 --> 00:01:08,240
runaway reaction which causes 5 maybe 10

00:01:06,080 --> 00:01:12,159
degrees celsius average rise

00:01:08,240 --> 00:01:14,560
so everything we do will have to stop

00:01:12,159 --> 00:01:16,400
all javascript all coding jobs will

00:01:14,560 --> 00:01:19,200
fight for survival

00:01:16,400 --> 00:01:19,840
um good thing is that we can actually

00:01:19,200 --> 00:01:22,400
stop it

00:01:19,840 --> 00:01:23,119
but we have to act we cannot delete any

00:01:22,400 --> 00:01:26,240
more

00:01:23,119 --> 00:01:29,439
you can change your life eat less meat

00:01:26,240 --> 00:01:31,360
don't uh don't fly but the most

00:01:29,439 --> 00:01:34,479
important is to join organization

00:01:31,360 --> 00:01:35,280
so in london extinction rebellion is

00:01:34,479 --> 00:01:37,840
huge

00:01:35,280 --> 00:01:38,640
uh but find organization and just start

00:01:37,840 --> 00:01:41,680
acting

00:01:38,640 --> 00:01:45,280
that's all i'm asking okay a little bit

00:01:41,680 --> 00:01:46,880
to a better topic so in this talk i'll

00:01:45,280 --> 00:01:48,479
talk about the documentation and how

00:01:46,880 --> 00:01:50,960
important is to the funnel

00:01:48,479 --> 00:01:52,960
of users in your organization i'll show

00:01:50,960 --> 00:01:54,560
a couple of examples how i set up

00:01:52,960 --> 00:01:56,479
documentation search

00:01:54,560 --> 00:01:57,920
and then i'll share a couple tips and

00:01:56,479 --> 00:02:01,280
answer any questions

00:01:57,920 --> 00:02:03,040
at the end okay let's go

00:02:01,280 --> 00:02:04,880
so imagine you work at a company you

00:02:03,040 --> 00:02:06,079
sell software right it could be

00:02:04,880 --> 00:02:08,080
something users install

00:02:06,079 --> 00:02:10,000
something maybe they use online so there

00:02:08,080 --> 00:02:12,959
is always a funnel

00:02:10,000 --> 00:02:14,640
and a funnel is how you lose customers

00:02:12,959 --> 00:02:16,800
the funnel looks kind of like this

00:02:14,640 --> 00:02:18,239
at the top you have first time visitors

00:02:16,800 --> 00:02:19,680
people just checking out

00:02:18,239 --> 00:02:22,000
maybe they heard the name of your

00:02:19,680 --> 00:02:24,400
company maybe they found a tweet about

00:02:22,000 --> 00:02:26,480
you maybe someone mentioned them so they

00:02:24,400 --> 00:02:26,879
come and they take a look just to figure

00:02:26,480 --> 00:02:29,680
out

00:02:26,879 --> 00:02:31,680
what are you doing if they can use it uh

00:02:29,680 --> 00:02:32,800
just a percentage of those visitors will

00:02:31,680 --> 00:02:35,200
actually say yeah

00:02:32,800 --> 00:02:36,400
this looks interesting let me try it so

00:02:35,200 --> 00:02:39,200
this is the first time

00:02:36,400 --> 00:02:40,959
users after a while some of those first

00:02:39,200 --> 00:02:43,120
time users will be converted to

00:02:40,959 --> 00:02:44,800
repeat users you like the product you

00:02:43,120 --> 00:02:48,080
use it again and again

00:02:44,800 --> 00:02:51,360
and what we're trying to do right is

00:02:48,080 --> 00:02:52,000
we're trying to convert users to paying

00:02:51,360 --> 00:02:55,120
users

00:02:52,000 --> 00:02:57,599
that will of course will lose a couple

00:02:55,120 --> 00:02:59,040
and the but most important are promoters

00:02:57,599 --> 00:03:01,519
so these are heavy users

00:02:59,040 --> 00:03:03,200
who actually pay for a product but they

00:03:01,519 --> 00:03:05,440
also recommend the product

00:03:03,200 --> 00:03:06,239
to someone else right and they actually

00:03:05,440 --> 00:03:09,360
allow you to

00:03:06,239 --> 00:03:12,560
to get more customers so

00:03:09,360 --> 00:03:13,920
the best case scenario right even if you

00:03:12,560 --> 00:03:17,680
write awesome thing

00:03:13,920 --> 00:03:21,120
right it's probably 10

00:03:17,680 --> 00:03:24,000
20 of first time users will be converted

00:03:21,120 --> 00:03:25,599
to paying customers it's ridiculously

00:03:24,000 --> 00:03:29,440
small percentage

00:03:25,599 --> 00:03:32,080
uh so imagine that you convert

00:03:29,440 --> 00:03:32,720
all first-time visitors or first time

00:03:32,080 --> 00:03:36,239
users

00:03:32,720 --> 00:03:37,200
into paying customers imagine what it

00:03:36,239 --> 00:03:40,400
will do to your

00:03:37,200 --> 00:03:43,519
revenue right

00:03:40,400 --> 00:03:44,799
it will blow you out of a water because

00:03:43,519 --> 00:03:47,440
it you'll convert

00:03:44,799 --> 00:03:50,000
to five maybe 10 times the revenue

00:03:47,440 --> 00:03:53,120
imagine what it will do to your company

00:03:50,000 --> 00:03:55,439
uh unfortunately you always lose people

00:03:53,120 --> 00:03:56,480
through this funnel right they're

00:03:55,439 --> 00:03:59,200
dropping out

00:03:56,480 --> 00:04:00,400
so i kind of think about people and why

00:03:59,200 --> 00:04:02,879
they drop out

00:04:00,400 --> 00:04:03,439
in two ways so for example first time

00:04:02,879 --> 00:04:06,480
visitor

00:04:03,439 --> 00:04:09,200
comes in says uh pistol doesn't do

00:04:06,480 --> 00:04:11,360
what i need uh maybe it doesn't work on

00:04:09,200 --> 00:04:12,640
my operating system so i consider both

00:04:11,360 --> 00:04:15,519
valid reasons

00:04:12,640 --> 00:04:16,560
yeah it's fine to lose people who cannot

00:04:15,519 --> 00:04:18,639
run your tool

00:04:16,560 --> 00:04:20,079
but maybe a user drops out because they

00:04:18,639 --> 00:04:23,520
say this tool doesn't do

00:04:20,079 --> 00:04:25,440
what i need but it does uh does not work

00:04:23,520 --> 00:04:26,160
on my platform but it does work on that

00:04:25,440 --> 00:04:28,639
platform

00:04:26,160 --> 00:04:29,919
so i consider both the wrong reasons to

00:04:28,639 --> 00:04:32,800
drop out

00:04:29,919 --> 00:04:33,280
uh let's say you're trying to say oh

00:04:32,800 --> 00:04:35,680
this

00:04:33,280 --> 00:04:37,360
tool doesn't run on ci though okay yeah

00:04:35,680 --> 00:04:39,120
it doesn't run doesn't run

00:04:37,360 --> 00:04:41,360
but imagine they drop out because they

00:04:39,120 --> 00:04:43,120
don't know how to set it up to run on ci

00:04:41,360 --> 00:04:44,720
so that's a wrong reason to for dropping

00:04:43,120 --> 00:04:47,040
out imagine

00:04:44,720 --> 00:04:47,840
uh a user says uh your tool is great

00:04:47,040 --> 00:04:50,800
tried it

00:04:47,840 --> 00:04:53,360
love it uh i cannot afford it but it's a

00:04:50,800 --> 00:04:55,360
valid reason for dropout

00:04:53,360 --> 00:04:56,720
but if a user drops out saying i don't

00:04:55,360 --> 00:04:58,800
know what value

00:04:56,720 --> 00:05:00,080
it gives me i don't know how to justify

00:04:58,800 --> 00:05:01,440
your price that's absolutely wrong

00:05:00,080 --> 00:05:04,560
reason

00:05:01,440 --> 00:05:06,880
uh finally maybe uh someone

00:05:04,560 --> 00:05:08,960
says i'm you know happy i'm not

00:05:06,880 --> 00:05:12,320
recommend to anyone but it works for me

00:05:08,960 --> 00:05:13,919
okay fine but maybe

00:05:12,320 --> 00:05:15,759
they don't recommend it to someone who

00:05:13,919 --> 00:05:16,880
asked because they didn't know it was

00:05:15,759 --> 00:05:20,000
possible to do

00:05:16,880 --> 00:05:20,000
so that's the wrong reason

00:05:20,320 --> 00:05:25,440
so kind of a valid reasons are

00:05:23,360 --> 00:05:27,440
you know it's your market fit maybe you

00:05:25,440 --> 00:05:29,440
should pivot a little bit and add a

00:05:27,440 --> 00:05:31,280
feature maybe you should fix some bugs

00:05:29,440 --> 00:05:33,360
this is absolutely you know the green

00:05:31,280 --> 00:05:36,000
area that's our day-to-day work

00:05:33,360 --> 00:05:37,199
right we identify maybe a feature that

00:05:36,000 --> 00:05:40,479
people want to pay for

00:05:37,199 --> 00:05:41,280
we implement it no problem but on the

00:05:40,479 --> 00:05:43,199
left

00:05:41,280 --> 00:05:44,960
these are all the reasons that you lose

00:05:43,199 --> 00:05:47,520
customers but you could actually

00:05:44,960 --> 00:05:48,240
keep and convert you know bad user

00:05:47,520 --> 00:05:51,199
interface

00:05:48,240 --> 00:05:52,320
bad documentation lack of examples all

00:05:51,199 --> 00:05:55,199
the wrong reasons

00:05:52,320 --> 00:05:55,520
for uh potential customers dropping out

00:05:55,199 --> 00:05:58,720
so

00:05:55,520 --> 00:05:59,759
our goal is to drive that like red area

00:05:58,720 --> 00:06:02,080
or orange area

00:05:59,759 --> 00:06:04,000
to zero because then we'll get so much

00:06:02,080 --> 00:06:05,919
more revenue because we'll stop

00:06:04,000 --> 00:06:08,639
dropping these people out from our

00:06:05,919 --> 00:06:10,560
funnel so imagine

00:06:08,639 --> 00:06:12,479
if you get twice as many people going

00:06:10,560 --> 00:06:15,199
all the way from first-time visitors

00:06:12,479 --> 00:06:15,919
all the way down to paying customers or

00:06:15,199 --> 00:06:18,720
promoters

00:06:15,919 --> 00:06:20,000
your revenue will increase end times not

00:06:18,720 --> 00:06:23,680
like percentage but

00:06:20,000 --> 00:06:25,520
end times so another point where i think

00:06:23,680 --> 00:06:27,600
it's very important if you compare how

00:06:25,520 --> 00:06:28,800
hard it is for you to work on features

00:06:27,600 --> 00:06:30,800
and bugs compared

00:06:28,800 --> 00:06:33,199
to how hard it is to actually do better

00:06:30,800 --> 00:06:36,479
documentation and more examples

00:06:33,199 --> 00:06:38,080
it is so much easier

00:06:36,479 --> 00:06:40,319
to write documentation for things you

00:06:38,080 --> 00:06:43,600
already have it's hard to

00:06:40,319 --> 00:06:46,160
you know write a new product

00:06:43,600 --> 00:06:47,360
it's easy to have a nice guide that

00:06:46,160 --> 00:06:49,520
works for

00:06:47,360 --> 00:06:52,800
so how do you create better

00:06:49,520 --> 00:06:56,319
documentation so you don't lose

00:06:52,800 --> 00:06:57,520
customers through a funnel well you just

00:06:56,319 --> 00:07:00,400
don't start blindly writing

00:06:57,520 --> 00:07:02,960
documentation you think about by users

00:07:00,400 --> 00:07:04,000
and you kind of create a couple personas

00:07:02,960 --> 00:07:07,120
so for example

00:07:04,000 --> 00:07:09,919
a persona could be a first-time visitor

00:07:07,120 --> 00:07:10,800
right maybe what kind of question do

00:07:09,919 --> 00:07:12,960
they want answered

00:07:10,800 --> 00:07:14,479
by your documentation uh what does this

00:07:12,960 --> 00:07:16,240
service do

00:07:14,479 --> 00:07:18,080
how does it work will it work for me so

00:07:16,240 --> 00:07:20,080
you want to answer those questions

00:07:18,080 --> 00:07:22,000
the trick there is to put like hello

00:07:20,080 --> 00:07:23,360
world example first in your

00:07:22,000 --> 00:07:26,240
documentation so that you

00:07:23,360 --> 00:07:26,639
immediately understand what battle does

00:07:26,240 --> 00:07:29,120
how

00:07:26,639 --> 00:07:30,319
great the tool is so they don't drop out

00:07:29,120 --> 00:07:32,160
because they don't understand what's

00:07:30,319 --> 00:07:34,960
going on

00:07:32,160 --> 00:07:35,840
uh imagine first time user not a visitor

00:07:34,960 --> 00:07:38,560
but the user

00:07:35,840 --> 00:07:40,800
well they might want to ask a couple

00:07:38,560 --> 00:07:41,680
specific questions does it do x how does

00:07:40,800 --> 00:07:44,000
it do why

00:07:41,680 --> 00:07:45,440
so in that case you probably want more

00:07:44,000 --> 00:07:48,080
examples

00:07:45,440 --> 00:07:50,479
under or after hello world kind of

00:07:48,080 --> 00:07:52,639
showing basic use cases

00:07:50,479 --> 00:07:53,759
you don't want the user to kind of give

00:07:52,639 --> 00:07:56,720
up after trying

00:07:53,759 --> 00:07:58,240
the first time another user persona

00:07:56,720 --> 00:08:00,160
could be a repeat user

00:07:58,240 --> 00:08:01,759
they want to know how to do specific

00:08:00,160 --> 00:08:05,120
things how to solve

00:08:01,759 --> 00:08:06,960
errors right in that case

00:08:05,120 --> 00:08:08,160
you have to write more examples so after

00:08:06,960 --> 00:08:10,639
a couple of inline

00:08:08,160 --> 00:08:12,319
you want to give links to all potential

00:08:10,639 --> 00:08:16,000
use cases of the software

00:08:12,319 --> 00:08:19,360
that you foresee people hitting

00:08:16,000 --> 00:08:21,360
a repeat visitor same questions but

00:08:19,360 --> 00:08:24,080
once training wants to be efficient

00:08:21,360 --> 00:08:26,639
right is there a support available

00:08:24,080 --> 00:08:28,560
so you know you probably won't create

00:08:26,639 --> 00:08:29,440
more complicated recipes not just

00:08:28,560 --> 00:08:33,120
individual

00:08:29,440 --> 00:08:34,959
kind of do how to do x examples

00:08:33,120 --> 00:08:36,640
uh finally promoters with people who

00:08:34,959 --> 00:08:40,320
recommend things the people who

00:08:36,640 --> 00:08:42,800
love your tool you probably want to push

00:08:40,320 --> 00:08:45,279
updates tell them what's coming up the

00:08:42,800 --> 00:08:47,279
roadmap and so on

00:08:45,279 --> 00:08:48,480
the point is your documentation will

00:08:47,279 --> 00:08:51,519
keep growing right

00:08:48,480 --> 00:08:54,320
in our like we do test runner

00:08:51,519 --> 00:08:57,839
just the index is painful to watch right

00:08:54,320 --> 00:08:59,600
because it keeps expanding and expanding

00:08:57,839 --> 00:09:00,880
well the worst thing about creating a

00:08:59,600 --> 00:09:03,360
lot of documentation

00:09:00,880 --> 00:09:03,920
is that when you go back to our support

00:09:03,360 --> 00:09:05,920
channel

00:09:03,920 --> 00:09:07,040
you know like the online chat channel

00:09:05,920 --> 00:09:09,519
and you look at that

00:09:07,040 --> 00:09:11,519
you start crying because you like you

00:09:09,519 --> 00:09:15,040
see all these questions

00:09:11,519 --> 00:09:17,519
where you're like how come

00:09:15,040 --> 00:09:18,320
it's a question like i know it can do it

00:09:17,519 --> 00:09:19,760
right

00:09:18,320 --> 00:09:21,440
every question that you see in your

00:09:19,760 --> 00:09:24,080
support channel

00:09:21,440 --> 00:09:25,200
that is a failure it's a failure of your

00:09:24,080 --> 00:09:27,120
tax

00:09:25,200 --> 00:09:28,560
and bad failure means you either have

00:09:27,120 --> 00:09:30,880
support where you have to

00:09:28,560 --> 00:09:32,480
yourself answer it which costs money or

00:09:30,880 --> 00:09:33,360
you're potentially losing a customer

00:09:32,480 --> 00:09:36,399
which again

00:09:33,360 --> 00:09:38,160
is a huge money living on table

00:09:36,399 --> 00:09:39,600
i kind of like to measure that

00:09:38,160 --> 00:09:42,080
percentage kind of

00:09:39,600 --> 00:09:43,279
look at all the questions across all

00:09:42,080 --> 00:09:46,880
support things

00:09:43,279 --> 00:09:50,720
right like your github issues your

00:09:46,880 --> 00:09:52,000
chat channel final equations then

00:09:50,720 --> 00:09:53,760
look at the questions that you think

00:09:52,000 --> 00:09:54,320
your documentation answers like right

00:09:53,760 --> 00:09:56,800
now

00:09:54,320 --> 00:09:57,440
and look at this as a percentage because

00:09:56,800 --> 00:10:00,240
then

00:09:57,440 --> 00:10:01,760
you can say okay if i have less than 50

00:10:00,240 --> 00:10:03,279
of both questions

00:10:01,760 --> 00:10:05,760
answered by my documentation i just have

00:10:03,279 --> 00:10:09,200
to write more documentation

00:10:05,760 --> 00:10:11,519
right but if it's above 50 that means

00:10:09,200 --> 00:10:12,320
that you wrote documentation you have it

00:10:11,519 --> 00:10:15,760
it's just

00:10:12,320 --> 00:10:17,600
users cannot find it right and the trick

00:10:15,760 --> 00:10:19,440
is that you want the users to answer

00:10:17,600 --> 00:10:21,680
their own questions

00:10:19,440 --> 00:10:22,720
by themselves like finding how to do

00:10:21,680 --> 00:10:24,800
things not you

00:10:22,720 --> 00:10:26,399
answering because that doesn't scale

00:10:24,800 --> 00:10:28,160
unfortunately

00:10:26,399 --> 00:10:29,920
good documentation that answers

00:10:28,160 --> 00:10:33,120
everyone's questions is very hard

00:10:29,920 --> 00:10:35,920
and the thing is hard because it's all

00:10:33,120 --> 00:10:36,800
contradictory all those personas right

00:10:35,920 --> 00:10:38,720
like imagine

00:10:36,800 --> 00:10:39,920
first time user versus repeat user

00:10:38,720 --> 00:10:42,240
versus power users

00:10:39,920 --> 00:10:43,279
they have completely different questions

00:10:42,240 --> 00:10:45,200
so you

00:10:43,279 --> 00:10:46,720
if you try to organize your

00:10:45,200 --> 00:10:48,640
documentation

00:10:46,720 --> 00:10:49,839
focused on particular persona you're

00:10:48,640 --> 00:10:52,560
gonna fail

00:10:49,839 --> 00:10:53,440
right like what do you put first right

00:10:52,560 --> 00:10:56,640
um

00:10:53,440 --> 00:11:00,160
easy always optimize for

00:10:56,640 --> 00:11:02,000
for beginners for hello world right

00:11:00,160 --> 00:11:05,760
that's your first question

00:11:02,000 --> 00:11:07,519
because for every pretend like beginners

00:11:05,760 --> 00:11:09,600
10 first time users compared to

00:11:07,519 --> 00:11:11,200
one advanced user and every advanced

00:11:09,600 --> 00:11:13,040
user used to be a beginner who

00:11:11,200 --> 00:11:15,040
successfully was converted

00:11:13,040 --> 00:11:16,480
so all is optimized at the top of a

00:11:15,040 --> 00:11:19,120
funnel that's where

00:11:16,480 --> 00:11:20,480
like the number of potentials is the

00:11:19,120 --> 00:11:22,640
highest

00:11:20,480 --> 00:11:23,839
okay for everything else put

00:11:22,640 --> 00:11:26,640
documentation

00:11:23,839 --> 00:11:29,600
maybe have some structure don't worry

00:11:26,640 --> 00:11:32,640
about much but what you can do next

00:11:29,600 --> 00:11:34,560
is make sure that your documentation

00:11:32,640 --> 00:11:36,240
search is really really good like

00:11:34,560 --> 00:11:38,240
i'm searching here like things

00:11:36,240 --> 00:11:41,120
interesting to beginners

00:11:38,240 --> 00:11:42,160
things to more advanced you know maybe

00:11:41,120 --> 00:11:45,440
advanced users

00:11:42,160 --> 00:11:48,880
the search finds everything so

00:11:45,440 --> 00:11:51,200
another thing what i can recommend is

00:11:48,880 --> 00:11:52,560
uh don't answer support questions right

00:11:51,200 --> 00:11:54,320
don't go to your support channel and

00:11:52,560 --> 00:11:57,040
start adding things

00:11:54,320 --> 00:11:57,920
instead and especially for for private

00:11:57,040 --> 00:12:00,320
troopers because

00:11:57,920 --> 00:12:02,240
that is one single operation nobody

00:12:00,320 --> 00:12:05,040
benefits but one user

00:12:02,240 --> 00:12:07,519
instead every time you see a question

00:12:05,040 --> 00:12:10,639
update your documentation

00:12:07,519 --> 00:12:11,760
answer with a link so that everyone

00:12:10,639 --> 00:12:14,160
after that user

00:12:11,760 --> 00:12:14,880
benefits from your work so that's just

00:12:14,160 --> 00:12:16,720
my thing

00:12:14,880 --> 00:12:18,480
uh that's what your support team should

00:12:16,720 --> 00:12:20,399
be doing they should be automating

00:12:18,480 --> 00:12:23,600
themselves or writing themselves

00:12:20,399 --> 00:12:26,160
out of existence so

00:12:23,600 --> 00:12:27,519
i talk about documentation kind of my

00:12:26,160 --> 00:12:30,320
view of a value

00:12:27,519 --> 00:12:31,519
let's see how we can set up a search so

00:12:30,320 --> 00:12:33,279
i have this example

00:12:31,519 --> 00:12:35,279
it's a small little website with a

00:12:33,279 --> 00:12:38,240
couple pages i can use search

00:12:35,279 --> 00:12:40,160
uh let's say i want to search for maybe

00:12:38,240 --> 00:12:42,880
right and it finds maybe

00:12:40,160 --> 00:12:44,000
because it's right here if i search for

00:12:42,880 --> 00:12:47,600
about

00:12:44,000 --> 00:12:49,680
it finds about page and

00:12:47,600 --> 00:12:50,720
about on the main page because i have

00:12:49,680 --> 00:12:53,279
both

00:12:50,720 --> 00:12:55,600
great just a little you know kind of

00:12:53,279 --> 00:12:57,440
static site

00:12:55,600 --> 00:12:59,519
the question you might ask yourself is

00:12:57,440 --> 00:13:02,000
well a majority

00:12:59,519 --> 00:13:02,639
of frameworks right they kind of have

00:13:02,000 --> 00:13:06,079
this

00:13:02,639 --> 00:13:09,120
like search widget already

00:13:06,079 --> 00:13:12,399
built in like you know viewpress has it

00:13:09,120 --> 00:13:15,920
all of those client-side widgets they're

00:13:12,399 --> 00:13:18,079
very very simple they just index h1 h2

00:13:15,920 --> 00:13:20,639
headers so for example in this case

00:13:18,079 --> 00:13:21,440
by using this client-side thing uh

00:13:20,639 --> 00:13:24,240
client-side

00:13:21,440 --> 00:13:26,079
organization search it only finds about

00:13:24,240 --> 00:13:26,639
on the second page it doesn't find the

00:13:26,079 --> 00:13:28,880
text

00:13:26,639 --> 00:13:29,680
about on the first page so they're a lot

00:13:28,880 --> 00:13:33,200
a lot

00:13:29,680 --> 00:13:36,399
more primitive and do not work long term

00:13:33,200 --> 00:13:37,040
so the thing that really kind of i like

00:13:36,399 --> 00:13:39,279
using

00:13:37,040 --> 00:13:40,399
is algolia and it's not big i'm not

00:13:39,279 --> 00:13:42,880
affiliated

00:13:40,399 --> 00:13:44,639
completely outside company but you

00:13:42,880 --> 00:13:46,639
notice that most of the

00:13:44,639 --> 00:13:48,240
javascript projects are using algolia

00:13:46,639 --> 00:13:50,560
it's actually unbelievable

00:13:48,240 --> 00:13:52,399
right they give you free resources so

00:13:50,560 --> 00:13:55,519
it's nice but it's unbelievable

00:13:52,399 --> 00:13:56,399
they got like 90 search market right now

00:13:55,519 --> 00:13:59,440
which is

00:13:56,399 --> 00:14:01,279
quite huge uh especially considering

00:13:59,440 --> 00:14:04,320
google completely missed about that

00:14:01,279 --> 00:14:04,880
so um i came to to kind of like look at

00:14:04,320 --> 00:14:06,639
alcohol

00:14:04,880 --> 00:14:09,040
as like when i searched vgs

00:14:06,639 --> 00:14:10,079
documentation like this works so well so

00:14:09,040 --> 00:14:13,360
how do i do

00:14:10,079 --> 00:14:15,279
myself okay so here's how you do it

00:14:13,360 --> 00:14:17,120
you create a algolia app they have a

00:14:15,279 --> 00:14:17,920
free plan you can start using it for

00:14:17,120 --> 00:14:19,519
your sites

00:14:17,920 --> 00:14:20,959
like right away you create an

00:14:19,519 --> 00:14:22,959
application

00:14:20,959 --> 00:14:24,240
then inside application you create a

00:14:22,959 --> 00:14:27,440
search index

00:14:24,240 --> 00:14:28,240
that's where all those records will be

00:14:27,440 --> 00:14:30,240
stored

00:14:28,240 --> 00:14:31,760
so when you search it will find a record

00:14:30,240 --> 00:14:34,880
return it which will link

00:14:31,760 --> 00:14:37,760
to a particular part on your page so

00:14:34,880 --> 00:14:38,880
after every deploy you scrape the site

00:14:37,760 --> 00:14:42,399
creates a record

00:14:38,880 --> 00:14:45,279
and then you'll just use some search we

00:14:42,399 --> 00:14:45,920
widget but we'll go to that index find

00:14:45,279 --> 00:14:48,240
relevant

00:14:45,920 --> 00:14:49,279
information and algolia runs with

00:14:48,240 --> 00:14:51,120
back-end service

00:14:49,279 --> 00:14:53,120
so every time you scrape a site you

00:14:51,120 --> 00:14:54,639
recreate the whole index

00:14:53,120 --> 00:14:56,240
because you recreate a whole website

00:14:54,639 --> 00:14:57,120
right so it completely blows away

00:14:56,240 --> 00:15:00,240
existing

00:14:57,120 --> 00:15:03,279
index creates you a new one

00:15:00,240 --> 00:15:05,839
so when you create algolia app it

00:15:03,279 --> 00:15:08,160
creates a couple of api keys

00:15:05,839 --> 00:15:09,839
so if you want to scrape that means add

00:15:08,160 --> 00:15:11,120
new records because it blows away

00:15:09,839 --> 00:15:13,920
previous

00:15:11,120 --> 00:15:16,240
search index but puts new records you

00:15:13,920 --> 00:15:18,399
need application id and the private

00:15:16,240 --> 00:15:20,160
admin api key so keyboard secrets

00:15:18,399 --> 00:15:24,240
otherwise someone can just destroy

00:15:20,160 --> 00:15:27,120
or inject bad information if you want to

00:15:24,240 --> 00:15:27,920
search you just need the public search

00:15:27,120 --> 00:15:30,399
api key

00:15:27,920 --> 00:15:33,680
let's just read only key so you're safe

00:15:30,399 --> 00:15:37,199
that's what you put on your website

00:15:33,680 --> 00:15:39,120
so scraping aside is pretty simple you

00:15:37,199 --> 00:15:42,240
just need the url

00:15:39,120 --> 00:15:44,079
and all the records will go into the

00:15:42,240 --> 00:15:45,680
index on algolia

00:15:44,079 --> 00:15:47,199
you have to actually look at the

00:15:45,680 --> 00:15:49,600
structure of your

00:15:47,199 --> 00:15:51,040
web page and see how do you like where

00:15:49,600 --> 00:15:51,680
is the main content that you want to

00:15:51,040 --> 00:15:55,279
scrape

00:15:51,680 --> 00:15:56,639
does it have specific article does it

00:15:55,279 --> 00:15:58,480
you know what's the structure what's

00:15:56,639 --> 00:16:01,680
more important h1

00:15:58,480 --> 00:16:03,120
is where like h2 or h3 right

00:16:01,680 --> 00:16:05,519
so once you know the structure of your

00:16:03,120 --> 00:16:07,920
documentation you create a json file

00:16:05,519 --> 00:16:09,040
that's algolia config file where you

00:16:07,920 --> 00:16:12,639
have different

00:16:09,040 --> 00:16:15,920
levels ld level zero level one

00:16:12,639 --> 00:16:17,440
from most important to least important

00:16:15,920 --> 00:16:18,959
so when you search for let's say

00:16:17,440 --> 00:16:20,880
something and it matches

00:16:18,959 --> 00:16:23,920
level zero that's the most important

00:16:20,880 --> 00:16:25,759
page result it will return

00:16:23,920 --> 00:16:27,839
if it's just somewhere in a text of my

00:16:25,759 --> 00:16:29,120
document that will be the text level

00:16:27,839 --> 00:16:32,720
which is the lowest

00:16:29,120 --> 00:16:35,199
level okay so you create this

00:16:32,720 --> 00:16:36,639
and then to actually scrape it you just

00:16:35,199 --> 00:16:37,360
run the docker image with alcohol

00:16:36,639 --> 00:16:39,839
provides

00:16:37,360 --> 00:16:40,560
you put your application and api keys

00:16:39,839 --> 00:16:43,600
and you say

00:16:40,560 --> 00:16:46,639
go and it will go and fi it actually

00:16:43,600 --> 00:16:48,639
runs a selenium scraper

00:16:46,639 --> 00:16:50,000
traverses all the pages that it can

00:16:48,639 --> 00:16:52,320
reach and

00:16:50,000 --> 00:16:53,440
returns all the records so for each page

00:16:52,320 --> 00:16:56,000
it will say

00:16:53,440 --> 00:16:56,639
found eight different records and free

00:16:56,000 --> 00:16:58,800
records

00:16:56,639 --> 00:17:00,480
so that's it it create windows it runs

00:16:58,800 --> 00:17:02,079
very quickly

00:17:00,480 --> 00:17:04,319
if you want to search for example on

00:17:02,079 --> 00:17:07,760
view press there is a built-in

00:17:04,319 --> 00:17:11,199
widget you provide the search api key

00:17:07,760 --> 00:17:11,839
and index name and api app id and that's

00:17:11,199 --> 00:17:14,799
it

00:17:11,839 --> 00:17:16,640
so now when you search you will see that

00:17:14,799 --> 00:17:19,280
algolia widget

00:17:16,640 --> 00:17:20,720
creates all the markup and when you

00:17:19,280 --> 00:17:21,520
search you will actually see all those

00:17:20,720 --> 00:17:24,480
queries

00:17:21,520 --> 00:17:25,679
going on right and hitting the algorithm

00:17:24,480 --> 00:17:27,520
server

00:17:25,679 --> 00:17:30,559
and you can look at the response it's

00:17:27,520 --> 00:17:33,520
literally like json objects

00:17:30,559 --> 00:17:36,080
json records from most important to

00:17:33,520 --> 00:17:39,280
least important

00:17:36,080 --> 00:17:41,280
okay um but that's the simple side

00:17:39,280 --> 00:17:43,760
imagine you have documentation side and

00:17:41,280 --> 00:17:44,480
you also have a blog that has technical

00:17:43,760 --> 00:17:47,200
content

00:17:44,480 --> 00:17:48,559
and maybe you have more examples maybe

00:17:47,200 --> 00:17:51,600
some secondary side with

00:17:48,559 --> 00:17:54,720
just examples in that case

00:17:51,600 --> 00:17:57,200
take with algolia config file

00:17:54,720 --> 00:17:58,400
right and you can define multiple

00:17:57,200 --> 00:18:01,039
starting urls

00:17:58,400 --> 00:18:02,320
so you can start you know scraping the

00:18:01,039 --> 00:18:04,960
main side

00:18:02,320 --> 00:18:07,039
your secondary side and a block and you

00:18:04,960 --> 00:18:09,200
can give different selectors of it

00:18:07,039 --> 00:18:10,480
you can define different selectors for

00:18:09,200 --> 00:18:13,280
each site

00:18:10,480 --> 00:18:15,039
and you look at html in each one and you

00:18:13,280 --> 00:18:17,520
say okay on my main side

00:18:15,039 --> 00:18:19,679
these are the selectors and elements in

00:18:17,520 --> 00:18:22,720
this particular hierarchy

00:18:19,679 --> 00:18:23,679
on my um i know blog completely

00:18:22,720 --> 00:18:27,120
different ones

00:18:23,679 --> 00:18:30,080
so it will scrape each site differently

00:18:27,120 --> 00:18:31,200
and the scraping is is pretty fast so

00:18:30,080 --> 00:18:33,360
our large

00:18:31,200 --> 00:18:34,320
documentation site plus blog plus

00:18:33,360 --> 00:18:38,799
everything

00:18:34,320 --> 00:18:41,200
um 21 000 different blocks of text

00:18:38,799 --> 00:18:45,600
only took exactly two minutes so it's

00:18:41,200 --> 00:18:45,600
pretty fast to run after each deploy

00:18:45,760 --> 00:18:51,120
and then you know it just works and

00:18:48,960 --> 00:18:52,559
this video shows that it finds something

00:18:51,120 --> 00:18:54,640
on our documentation

00:18:52,559 --> 00:18:56,960
and another heat result is from our

00:18:54,640 --> 00:19:00,080
example side so it actually

00:18:56,960 --> 00:19:03,360
finds things from multiple sources

00:19:00,080 --> 00:19:05,200
and it actually you can define which one

00:19:03,360 --> 00:19:07,360
is more important and priority

00:19:05,200 --> 00:19:08,320
of each source of information so what we

00:19:07,360 --> 00:19:11,360
always display

00:19:08,320 --> 00:19:11,919
main documentation first and maybe a

00:19:11,360 --> 00:19:17,039
blog

00:19:11,919 --> 00:19:17,039
second okay

00:19:17,679 --> 00:19:24,880
so i describe what this you know

00:19:20,720 --> 00:19:27,280
index is how it works a couple of

00:19:24,880 --> 00:19:27,280
tips

00:19:29,280 --> 00:19:33,600
so because we are developers we

00:19:33,679 --> 00:19:40,160
wanna make sure that our code is

00:19:36,880 --> 00:19:44,320
searchable and algolia documentation

00:19:40,160 --> 00:19:47,280
tells you that you should not scrape

00:19:44,320 --> 00:19:47,919
blocks of code right because it doesn't

00:19:47,280 --> 00:19:51,200
know what to do

00:19:47,919 --> 00:19:54,480
right it's alcohol is optimized for

00:19:51,200 --> 00:19:56,960
natural text it doesn't know how

00:19:54,480 --> 00:19:57,600
how to do how to parse tokens and create

00:19:56,960 --> 00:20:00,160
ast

00:19:57,600 --> 00:20:01,200
and do all the types and so on so

00:20:00,160 --> 00:20:04,000
everything that greg

00:20:01,200 --> 00:20:06,159
said like for goalies like completely is

00:20:04,000 --> 00:20:08,400
beyond its understanding

00:20:06,159 --> 00:20:10,159
so what i've done myself because we have

00:20:08,400 --> 00:20:12,400
a lot of examples

00:20:10,159 --> 00:20:13,600
in my examples i use a lot of comments

00:20:12,400 --> 00:20:16,159
because they do

00:20:13,600 --> 00:20:18,320
provide valuable information about what

00:20:16,159 --> 00:20:21,679
each code sample does

00:20:18,320 --> 00:20:22,400
so what i've done in my algolia scraping

00:20:21,679 --> 00:20:24,799
thing

00:20:22,400 --> 00:20:26,240
is that i actually allowed it to scrape

00:20:24,799 --> 00:20:28,720
just the comment lines

00:20:26,240 --> 00:20:29,280
not you know anything else but just the

00:20:28,720 --> 00:20:32,640
comments

00:20:29,280 --> 00:20:36,000
and the way it works is that if i look

00:20:32,640 --> 00:20:38,640
at the structure of my page

00:20:36,000 --> 00:20:40,320
when i create the static site before it

00:20:38,640 --> 00:20:44,080
gets scraped

00:20:40,320 --> 00:20:46,799
the page is static and the page

00:20:44,080 --> 00:20:47,679
is all the code examples are syntax

00:20:46,799 --> 00:20:50,720
highlighted

00:20:47,679 --> 00:20:53,280
that means that they are tokenized and

00:20:50,720 --> 00:20:55,200
like a variable common everything has

00:20:53,280 --> 00:20:59,200
its own class because that

00:20:55,200 --> 00:21:02,400
class is used to properly

00:20:59,200 --> 00:21:04,320
attach css with different colors so for

00:21:02,400 --> 00:21:07,440
example in this case the comment

00:21:04,320 --> 00:21:08,799
would have a class comment because

00:21:07,440 --> 00:21:11,840
that's what it shows up

00:21:08,799 --> 00:21:14,480
as gray so i know but my comments have a

00:21:11,840 --> 00:21:17,200
specific selector

00:21:14,480 --> 00:21:17,760
and so what i've done in my algolia

00:21:17,200 --> 00:21:20,799
config

00:21:17,760 --> 00:21:23,840
is that i defined the selectors for

00:21:20,799 --> 00:21:26,640
h1 level h2 like least

00:21:23,840 --> 00:21:28,000
important and so on and all the way at

00:21:26,640 --> 00:21:30,960
the bottom

00:21:28,000 --> 00:21:31,440
i have a text selector like this is the

00:21:30,960 --> 00:21:35,120
main

00:21:31,440 --> 00:21:37,919
thing like with the text on your site

00:21:35,120 --> 00:21:38,960
but it's not h1 or h2 like not the

00:21:37,919 --> 00:21:42,880
heading

00:21:38,960 --> 00:21:45,919
and so usually that would be html tag

00:21:42,880 --> 00:21:49,600
for a paragraph p for example

00:21:45,919 --> 00:21:53,440
so what i've done i just added a comma

00:21:49,600 --> 00:21:56,480
and i added class comment

00:21:53,440 --> 00:21:59,840
so it will take both paragraphs

00:21:56,480 --> 00:22:01,840
and the code comments together

00:21:59,840 --> 00:22:04,080
all right and so my algolia will

00:22:01,840 --> 00:22:06,320
actually scrape it and we'll consider

00:22:04,080 --> 00:22:08,559
the code comments as well during

00:22:06,320 --> 00:22:10,159
scraping

00:22:08,559 --> 00:22:12,960
what you can do when you're actually

00:22:10,159 --> 00:22:14,640
defining this you can open your browser

00:22:12,960 --> 00:22:18,080
and you can take that selector because

00:22:14,640 --> 00:22:20,640
it's a normal css selector

00:22:18,080 --> 00:22:22,000
and you can just copy paste it into your

00:22:20,640 --> 00:22:25,520
dev tools and use

00:22:22,000 --> 00:22:26,000
double dollar sign which is like query

00:22:25,520 --> 00:22:27,919
selector

00:22:26,000 --> 00:22:30,159
old and then it will give you all

00:22:27,919 --> 00:22:32,320
elements matching that selector so you

00:22:30,159 --> 00:22:35,039
can see on this page

00:22:32,320 --> 00:22:36,559
what are all the elements that algolia

00:22:35,039 --> 00:22:38,640
will consider

00:22:36,559 --> 00:22:40,080
and scrape so you can see how i hover

00:22:38,640 --> 00:22:43,600
and actually has

00:22:40,080 --> 00:22:44,159
like a p block a common block so it will

00:22:43,600 --> 00:22:47,200
actually

00:22:44,159 --> 00:22:49,280
grab those and each one of those will

00:22:47,200 --> 00:22:51,039
become a record

00:22:49,280 --> 00:22:52,880
in this index and that means it's

00:22:51,039 --> 00:22:56,000
searchable

00:22:52,880 --> 00:22:59,039
right and it works out very well because

00:22:56,000 --> 00:23:02,159
then it encourages you to actually

00:22:59,039 --> 00:23:04,559
explain everything in your code examples

00:23:02,159 --> 00:23:06,159
using comments and the users benefit

00:23:04,559 --> 00:23:08,480
from that because when they search

00:23:06,159 --> 00:23:09,440
something for like a regular expression

00:23:08,480 --> 00:23:13,919
it will be

00:23:09,440 --> 00:23:16,480
found as i um

00:23:13,919 --> 00:23:18,799
well i don't show here but they'll be

00:23:16,480 --> 00:23:18,799
found

00:23:19,280 --> 00:23:23,200
the second thing that i think is

00:23:21,840 --> 00:23:25,360
extremely important

00:23:23,200 --> 00:23:27,200
so you should look at your support

00:23:25,360 --> 00:23:29,360
channels once in a while

00:23:27,200 --> 00:23:30,640
your chat your github issues your

00:23:29,360 --> 00:23:32,559
private support

00:23:30,640 --> 00:23:34,400
and you you should look at the questions

00:23:32,559 --> 00:23:37,440
that people ask

00:23:34,400 --> 00:23:40,080
and if you see a lot of questions

00:23:37,440 --> 00:23:44,080
right that are answered by your

00:23:40,080 --> 00:23:47,039
documentation but people still ask them

00:23:44,080 --> 00:23:48,480
that means but your search is bad right

00:23:47,039 --> 00:23:49,919
people don't don't find it

00:23:48,480 --> 00:23:51,760
or they don't even know that they can

00:23:49,919 --> 00:23:52,799
find it right sometimes your search box

00:23:51,760 --> 00:23:54,400
is hidden somewhere and

00:23:52,799 --> 00:23:56,320
people have no idea about it actually

00:23:54,400 --> 00:23:59,679
it's not useful so

00:23:56,320 --> 00:24:02,400
um sometimes you will have those queries

00:23:59,679 --> 00:24:04,080
right like in this case have that text

00:24:02,400 --> 00:24:06,799
that have no results

00:24:04,080 --> 00:24:08,480
so algola just says no results found i

00:24:06,799 --> 00:24:11,520
give up

00:24:08,480 --> 00:24:13,120
but interesting thing on a free algolia

00:24:11,520 --> 00:24:16,400
plan

00:24:13,120 --> 00:24:19,440
you will just get an email once a week

00:24:16,400 --> 00:24:20,320
right but we'll say um out of all

00:24:19,440 --> 00:24:24,480
queries that

00:24:20,320 --> 00:24:26,799
users entered 40 had no results

00:24:24,480 --> 00:24:28,080
and this is uh really important that

00:24:26,799 --> 00:24:30,159
means

00:24:28,080 --> 00:24:32,080
people uh you have users they came into

00:24:30,159 --> 00:24:32,880
your documentation site try to find an

00:24:32,080 --> 00:24:36,240
answer

00:24:32,880 --> 00:24:37,919
and fail you have nothing and alcohol

00:24:36,240 --> 00:24:40,799
actually tells you all the queries

00:24:37,919 --> 00:24:41,279
right so in this case the user search

00:24:40,799 --> 00:24:43,200
for

00:24:41,279 --> 00:24:46,000
have the text and stop it you know

00:24:43,200 --> 00:24:48,240
things for testing

00:24:46,000 --> 00:24:49,279
if you had paid alcohol plan you could

00:24:48,240 --> 00:24:51,520
actually go in

00:24:49,279 --> 00:24:53,279
you know in real time and see it like

00:24:51,520 --> 00:24:53,840
right there on that dashboard and you

00:24:53,279 --> 00:24:56,799
could

00:24:53,840 --> 00:24:58,480
understand it in detail right away but

00:24:56,799 --> 00:25:00,480
for even for free plan they actually

00:24:58,480 --> 00:25:03,919
tell you how square is

00:25:00,480 --> 00:25:06,240
so what do you do you go back

00:25:03,919 --> 00:25:09,279
and you write documentation for those

00:25:06,240 --> 00:25:12,640
queries so they no longer

00:25:09,279 --> 00:25:15,039
are empty because you know right

00:25:12,640 --> 00:25:15,760
this is what people are searching for

00:25:15,039 --> 00:25:18,559
you know but

00:25:15,760 --> 00:25:18,799
if they don't find it they either give

00:25:18,559 --> 00:25:21,919
up

00:25:18,799 --> 00:25:23,840
right away or lower their opinion of

00:25:21,919 --> 00:25:27,039
your documentation and software

00:25:23,840 --> 00:25:27,679
or they ask privately or for support

00:25:27,039 --> 00:25:29,520
right

00:25:27,679 --> 00:25:31,039
in in a support channel and that costs

00:25:29,520 --> 00:25:34,320
money to answer

00:25:31,039 --> 00:25:35,919
so i i find it extremely easy just look

00:25:34,320 --> 00:25:39,039
at the questions that people

00:25:35,919 --> 00:25:42,240
search for and feel the gaps

00:25:39,039 --> 00:25:44,799
in your documentation

00:25:42,240 --> 00:25:45,360
another thing that i want to finish with

00:25:44,799 --> 00:25:48,559
just

00:25:45,360 --> 00:25:51,760
tips and tricks

00:25:48,559 --> 00:25:55,360
algolia is not just

00:25:51,760 --> 00:25:59,760
a website widget

00:25:55,360 --> 00:26:02,799
right algolia is the indexing service

00:25:59,760 --> 00:26:06,640
most of all and very fast api

00:26:02,799 --> 00:26:10,159
so you can take the same api key

00:26:06,640 --> 00:26:11,600
right and the same application id which

00:26:10,159 --> 00:26:14,080
are public

00:26:11,600 --> 00:26:14,720
and you can execute both queries but

00:26:14,080 --> 00:26:16,640
search

00:26:14,720 --> 00:26:17,840
algol and they have npm library you can

00:26:16,640 --> 00:26:20,960
execute yourself

00:26:17,840 --> 00:26:23,120
from any client right

00:26:20,960 --> 00:26:25,200
which means but for example for my you

00:26:23,120 --> 00:26:28,480
know job

00:26:25,200 --> 00:26:30,640
i built a node terminal you know

00:26:28,480 --> 00:26:33,440
documentation search

00:26:30,640 --> 00:26:35,200
so you can use it without installing it

00:26:33,440 --> 00:26:37,840
you start running it

00:26:35,200 --> 00:26:39,520
and then just type text as you would

00:26:37,840 --> 00:26:43,520
normally search on a website

00:26:39,520 --> 00:26:46,400
and it shows all the found hits

00:26:43,520 --> 00:26:48,080
with urls and you just select in a

00:26:46,400 --> 00:26:50,559
terminal the one that you

00:26:48,080 --> 00:26:51,600
think you want to see and it opens your

00:26:50,559 --> 00:26:54,720
browser at

00:26:51,600 --> 00:26:55,919
url pretty straightforward right and

00:26:54,720 --> 00:26:56,960
allows you to quickly find the

00:26:55,919 --> 00:26:59,279
communication

00:26:56,960 --> 00:27:01,360
now i haven't explored it more but i

00:26:59,279 --> 00:27:03,520
think i would love to have those search

00:27:01,360 --> 00:27:04,400
widgets to be built into our support

00:27:03,520 --> 00:27:07,600
channel

00:27:04,400 --> 00:27:10,799
uh in our sales force right and

00:27:07,600 --> 00:27:13,760
and things like that it's it's extremely

00:27:10,799 --> 00:27:14,559
straightforward to access the index and

00:27:13,760 --> 00:27:16,640
search it

00:27:14,559 --> 00:27:18,320
because they've done the hard part of

00:27:16,640 --> 00:27:23,200
scraping

00:27:18,320 --> 00:27:25,200
right and organizing your information

00:27:23,200 --> 00:27:26,480
okay so i want to finish my

00:27:25,200 --> 00:27:28,399
documentation with

00:27:26,480 --> 00:27:31,039
again reiterating that good

00:27:28,399 --> 00:27:33,039
documentation is essential

00:27:31,039 --> 00:27:34,480
to the success of your project and the

00:27:33,039 --> 00:27:38,000
company

00:27:34,480 --> 00:27:38,880
all right open source and commercial

00:27:38,000 --> 00:27:41,760
products

00:27:38,880 --> 00:27:43,360
they live and die by how well people can

00:27:41,760 --> 00:27:46,399
use them

00:27:43,360 --> 00:27:49,520
and it's hard to write a software that

00:27:46,399 --> 00:27:50,640
has no bugs has all the features so

00:27:49,520 --> 00:27:53,679
obvious that you

00:27:50,640 --> 00:27:57,760
but users are never stuck never

00:27:53,679 --> 00:27:59,279
feel uh silly i would say using it

00:27:57,760 --> 00:28:00,960
so they'll go to your documentation

00:27:59,279 --> 00:28:04,080
trying to understand how to use it

00:28:00,960 --> 00:28:05,120
what to do what else it can do if you

00:28:04,080 --> 00:28:09,120
don't have

00:28:05,120 --> 00:28:11,520
answers you'll losing all right

00:28:09,120 --> 00:28:12,960
famous example in front-end world

00:28:11,520 --> 00:28:16,559
angularjs

00:28:12,960 --> 00:28:18,799
famously bad documentation vgs came in

00:28:16,559 --> 00:28:19,840
with extremely good documentation from

00:28:18,799 --> 00:28:22,240
day one

00:28:19,840 --> 00:28:23,440
and people were like absolutely blown

00:28:22,240 --> 00:28:26,559
away and really like

00:28:23,440 --> 00:28:29,679
yeah i think view documentation

00:28:26,559 --> 00:28:31,760
but like that's it so um

00:28:29,679 --> 00:28:34,000
as i kind of explained in in my view of

00:28:31,760 --> 00:28:37,360
documentation and how to set up

00:28:34,000 --> 00:28:40,720
personas and organized documentation uh

00:28:37,360 --> 00:28:42,880
focused on each persona it's hard

00:28:40,720 --> 00:28:44,480
right and it's often contradictory so

00:28:42,880 --> 00:28:47,039
other thing you can create

00:28:44,480 --> 00:28:48,240
perfect website where every user who

00:28:47,039 --> 00:28:50,159
comes in

00:28:48,240 --> 00:28:53,120
can see their question answered right

00:28:50,159 --> 00:28:54,640
away of even find the answers like just

00:28:53,120 --> 00:28:58,559
by looking at index

00:28:54,640 --> 00:28:58,880
but right so it's it might be impossible

00:28:58,559 --> 00:29:01,279
to

00:28:58,880 --> 00:29:02,159
to create organization luckily the

00:29:01,279 --> 00:29:05,600
search

00:29:02,159 --> 00:29:08,159
allows us to bypass that question and

00:29:05,600 --> 00:29:08,720
allow any user at any level if they can

00:29:08,159 --> 00:29:11,440
come in

00:29:08,720 --> 00:29:13,600
and use the search they can find

00:29:11,440 --> 00:29:15,679
information and i think we will call it

00:29:13,600 --> 00:29:17,200
we even with pretty simple setup i i

00:29:15,679 --> 00:29:18,399
didn't configure anything else i did not

00:29:17,200 --> 00:29:22,000
configure

00:29:18,399 --> 00:29:22,720
you know keywords alice's synonyms

00:29:22,000 --> 00:29:26,559
nothing just

00:29:22,720 --> 00:29:28,000
straight out of a box thanks just select

00:29:26,559 --> 00:29:30,240
in the structure of my document it

00:29:28,000 --> 00:29:33,840
turned out to be pretty simple

00:29:30,240 --> 00:29:36,159
and i would say um much better

00:29:33,840 --> 00:29:37,679
uh than what we had before or much

00:29:36,159 --> 00:29:41,039
better than i expected

00:29:37,679 --> 00:29:44,640
and now whenever i see a support channel

00:29:41,039 --> 00:29:47,919
right question i go and use the search

00:29:44,640 --> 00:29:50,240
and when i like receive a result i just

00:29:47,919 --> 00:29:51,120
maybe do a screenshot of my search box

00:29:50,240 --> 00:29:54,240
and the result

00:29:51,120 --> 00:29:55,679
and i answer not even with a link but

00:29:54,240 --> 00:29:59,120
with a search box

00:29:55,679 --> 00:30:01,440
screenshot kind of trying to teach

00:29:59,120 --> 00:30:03,440
the user you could find the answer to

00:30:01,440 --> 00:30:06,240
your question by searching

00:30:03,440 --> 00:30:07,200
and then i hope you know but when the

00:30:06,240 --> 00:30:10,399
users can find

00:30:07,200 --> 00:30:13,120
all answers in the future perfect

00:30:10,399 --> 00:30:15,840
so you can find these slides online i

00:30:13,120 --> 00:30:18,159
have a blog post explaining how i set up

00:30:15,840 --> 00:30:19,600
with the search and the scraping for

00:30:18,159 --> 00:30:22,960
this simple website

00:30:19,600 --> 00:30:26,159
so you can do that um the

00:30:22,960 --> 00:30:28,880
documentation but you can you can see my

00:30:26,159 --> 00:30:30,720
kind of approach to cyprus in action

00:30:28,880 --> 00:30:33,440
yourself and kind of try it out

00:30:30,720 --> 00:30:33,760
and algolia has a lot of documentation

00:30:33,440 --> 00:30:36,960
and

00:30:33,760 --> 00:30:40,320
very good and maybe some somewhat

00:30:36,960 --> 00:30:43,360
even scary documentation

00:30:40,320 --> 00:30:45,039
search themselves so

00:30:43,360 --> 00:30:47,360
just check it out they explain

00:30:45,039 --> 00:30:50,159
everything very well again

00:30:47,360 --> 00:30:51,679
uh in london and great britain join

00:30:50,159 --> 00:30:53,919
rebellion global because

00:30:51,679 --> 00:30:55,279
bad stuff is the most important thing

00:30:53,919 --> 00:30:58,240
right now and

00:30:55,279 --> 00:30:59,600
if you want to ask me a question or if

00:30:58,240 --> 00:31:01,919
you really set up a very good

00:30:59,600 --> 00:31:05,120
documentation site and you set up

00:31:01,919 --> 00:31:05,919
documentation scraping and you see the

00:31:05,120 --> 00:31:09,519
difference

00:31:05,919 --> 00:31:13,279
let me know like i'm looking for more

00:31:09,519 --> 00:31:14,799
i would say um i want to suffer from

00:31:13,279 --> 00:31:17,360
confirmation bias so if you're

00:31:14,799 --> 00:31:20,000
successful let me know if you're not

00:31:17,360 --> 00:31:22,159
don't let me know okay don't tell me so

00:31:20,000 --> 00:31:23,919
i'm on twitter at bachman

00:31:22,159 --> 00:31:27,600
thank you very much i really appreciate

00:31:23,919 --> 00:31:27,600

YouTube URL: https://www.youtube.com/watch?v=z_RutLs0W70


