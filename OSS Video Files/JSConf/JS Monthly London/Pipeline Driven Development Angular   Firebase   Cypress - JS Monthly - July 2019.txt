Title: Pipeline Driven Development Angular   Firebase   Cypress - JS Monthly - July 2019
Publication date: 2019-08-06
Playlist: JS Monthly London
Description: 
	Angular, Cypress, Cucumber with CI and CD // Eddie Jaoude / Andrew Cunliffe

Best practices are not hard or costly. However, the consequences of delaying these things typically are. How often have you heard or said “it’s ok we will add the tests later” but later never comes around while everyone is firefighting...we will talk about best practices and show how simple it is to set up a project from scratch including automated testing and deployment with; Cypress, Cucumber and Circle CI

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,060 --> 00:00:04,170
so pipeline driven development it's

00:00:02,669 --> 00:00:06,180
actually perfect because they follow on

00:00:04,170 --> 00:00:08,130
from the last talk we mentioned or exact

00:00:06,180 --> 00:00:11,790
we're using angular in our example so

00:00:08,130 --> 00:00:14,429
that works out I think quite well your

00:00:11,790 --> 00:00:16,529
turn well what any hasn't mentioned is

00:00:14,429 --> 00:00:17,760
firebase in Cyprus as well we angle is a

00:00:16,529 --> 00:00:19,980
small part of what we're going to talk

00:00:17,760 --> 00:00:21,060
about we're going to look a bit what do

00:00:19,980 --> 00:00:23,340
you do when you're building up a

00:00:21,060 --> 00:00:25,170
pipeline how do you set yourself up I'll

00:00:23,340 --> 00:00:26,519
say for success but what are some of the

00:00:25,170 --> 00:00:28,470
things you can do and how do we actually

00:00:26,519 --> 00:00:29,609
do that so we're going to talk a very

00:00:28,470 --> 00:00:31,380
high-level obviously that you can get

00:00:29,609 --> 00:00:32,880
really deep on this stuff but we haven't

00:00:31,380 --> 00:00:34,469
time for near that by all means talk to

00:00:32,880 --> 00:00:35,820
us after if you want to know more so

00:00:34,469 --> 00:00:39,540
we're going to talk a high-level on how

00:00:35,820 --> 00:00:41,370
you set up angular firebase Cyprus and

00:00:39,540 --> 00:00:43,079
get yourself that initial pipeline all

00:00:41,370 --> 00:00:46,200
set up so you're nice and smooth going

00:00:43,079 --> 00:00:48,870
forward we forgot pipeline we buy

00:00:46,200 --> 00:00:50,309
pipeline we mean the full to deployment

00:00:48,870 --> 00:00:52,199
all the way from beginning to end so

00:00:50,309 --> 00:00:54,690
we're gonna use circle CI as an example

00:00:52,199 --> 00:00:56,699
for this as well yes

00:00:54,690 --> 00:00:58,109
so we're from the code multiple scene

00:00:56,699 --> 00:00:59,760
we're live streaming here tonight so

00:00:58,109 --> 00:01:00,930
support us by subscribing to our YouTube

00:00:59,760 --> 00:01:06,330
channel we really appreciate it

00:01:00,930 --> 00:01:10,740
which we go mine it's angular 2 who he

00:01:06,330 --> 00:01:13,950
is used angular before who here prefers

00:01:10,740 --> 00:01:15,930
anger at night written I'm joking right

00:01:13,950 --> 00:01:17,580
okay good so you know aster was for the

00:01:15,930 --> 00:01:18,540
for the live stream who can't see the

00:01:17,580 --> 00:01:20,880
people in the audience that was a

00:01:18,540 --> 00:01:23,369
hundred percent love and I was joking

00:01:20,880 --> 00:01:26,130
there's about fifty percent okay fine so

00:01:23,369 --> 00:01:27,360
angle is by Google these are all the the

00:01:26,130 --> 00:01:29,280
great things that it does you've

00:01:27,360 --> 00:01:30,659
probably seen it on its website we think

00:01:29,280 --> 00:01:32,939
it's we think it's really good I have

00:01:30,659 --> 00:01:35,490
used react I've only used fewer little

00:01:32,939 --> 00:01:36,720
bits I can't I can't compare though

00:01:35,490 --> 00:01:39,780
hollow the point we practice not

00:01:36,720 --> 00:01:41,280
forgotten I think it's jump in yeah I

00:01:39,780 --> 00:01:43,259
mean this loss you can do it angular

00:01:41,280 --> 00:01:45,810
right so it's cross-platform likewise

00:01:43,259 --> 00:01:46,680
react has their comparisons by

00:01:45,810 --> 00:01:48,420
cross-platform they're saying things

00:01:46,680 --> 00:01:51,210
like you go ionic available so you can

00:01:48,420 --> 00:01:53,759
build a mobile app a PWA a website all

00:01:51,210 --> 00:01:56,219
out of one code base they focus a lot on

00:01:53,759 --> 00:01:57,600
performance these days so they do a lot

00:01:56,219 --> 00:02:00,119
of tree shaking when you build up your

00:01:57,600 --> 00:02:01,500
minified javascript it will remove

00:02:00,119 --> 00:02:02,939
anything that you're not using even if

00:02:01,500 --> 00:02:04,409
you've got those libraries available it

00:02:02,939 --> 00:02:05,909
will just removal and bundle up the

00:02:04,409 --> 00:02:07,619
smallest thing possible and certainly

00:02:05,909 --> 00:02:10,050
with angular 8 and the new ivy engine

00:02:07,619 --> 00:02:11,730
even better still they focus a lot on

00:02:10,050 --> 00:02:13,410
productivity there's a lot of built in

00:02:11,730 --> 00:02:16,260
CLI tools you can use that

00:02:13,410 --> 00:02:17,430
generate code for you and yeah it's

00:02:16,260 --> 00:02:19,650
designed around a full development

00:02:17,430 --> 00:02:21,330
lifecycle so when you set up a project

00:02:19,650 --> 00:02:23,730
you will have Jasmine in there you will

00:02:21,330 --> 00:02:25,680
have protractor which runs on selenium

00:02:23,730 --> 00:02:26,880
in there we're going to talk about how

00:02:25,680 --> 00:02:28,350
we set things up differently because

00:02:26,880 --> 00:02:30,270
whilst those come out the box

00:02:28,350 --> 00:02:32,760
we think there's a smoother way you can

00:02:30,270 --> 00:02:34,650
do things that make development more

00:02:32,760 --> 00:02:36,330
enjoyable as well when using angular so

00:02:34,650 --> 00:02:39,060
getting started so if you want to setup

00:02:36,330 --> 00:02:42,960
an angular project one line we need to

00:02:39,060 --> 00:02:45,300
install angular globally after that you

00:02:42,960 --> 00:02:47,250
run a simple command engine you in this

00:02:45,300 --> 00:02:48,960
case code mortals because we're using

00:02:47,250 --> 00:02:51,900
the example of our website through some

00:02:48,960 --> 00:02:53,130
of this there's questions it will guide

00:02:51,900 --> 00:02:54,420
you through there's only about three or

00:02:53,130 --> 00:02:55,950
four questions you get asked the first

00:02:54,420 --> 00:02:58,170
one will be do you want routing so if

00:02:55,950 --> 00:02:59,610
you want multiple pages effectively so

00:02:58,170 --> 00:03:01,140
we say yes typically to that because

00:02:59,610 --> 00:03:03,020
it's very rare you build a website it's

00:03:01,140 --> 00:03:07,400
truly just one page but some people do

00:03:03,020 --> 00:03:11,850
we then like to use s CSS for doing our

00:03:07,400 --> 00:03:13,380
CSS work at which point you've got a

00:03:11,850 --> 00:03:16,320
project working so you just change that

00:03:13,380 --> 00:03:17,580
directory we run NPM start and go to the

00:03:16,320 --> 00:03:20,010
browser and that would be what you will

00:03:17,580 --> 00:03:21,209
see that's it it's as simple as that to

00:03:20,010 --> 00:03:22,980
get an angular project and running for

00:03:21,209 --> 00:03:24,990
anyone that hasn't used angular everyone

00:03:22,980 --> 00:03:27,780
seems a bit scared of it these days but

00:03:24,990 --> 00:03:29,310
it really isn't difficult at which point

00:03:27,780 --> 00:03:30,150
we can move over to the CI so that was

00:03:29,310 --> 00:03:31,590
all we're going to say angular is

00:03:30,150 --> 00:03:33,510
literally just this is all we're doing

00:03:31,590 --> 00:03:35,040
cuz we're setting up the basic pipeline

00:03:33,510 --> 00:03:36,720
right so we have a working project now

00:03:35,040 --> 00:03:38,580
you can see it on the internet if you

00:03:36,720 --> 00:03:40,350
wanted to but you're not yet deploying

00:03:38,580 --> 00:03:41,520
it anyway you've just got a project

00:03:40,350 --> 00:03:44,820
that's running on your machine so what

00:03:41,520 --> 00:03:46,350
do we need next so the next next thing

00:03:44,820 --> 00:03:47,580
we would do is set up our CI so you've

00:03:46,350 --> 00:03:49,140
got hello well we haven't put any

00:03:47,580 --> 00:03:51,120
business logic in there any custom

00:03:49,140 --> 00:03:52,440
designs just a hello world project and

00:03:51,120 --> 00:03:54,510
the next thing we would do on a project

00:03:52,440 --> 00:03:57,900
is set up CI so everyone know what

00:03:54,510 --> 00:03:59,520
continuous integration is lot of people

00:03:57,900 --> 00:04:01,950
nodding okay awesome so again for

00:03:59,520 --> 00:04:04,470
example we've used circle and what

00:04:01,950 --> 00:04:06,120
you'll see some cycle shortly but it's

00:04:04,470 --> 00:04:07,739
the kind of there the the automation

00:04:06,120 --> 00:04:09,690
engine of your entire pipeline it will

00:04:07,739 --> 00:04:10,830
do so much more I won't give too much

00:04:09,690 --> 00:04:14,220
away but you'll see that coming up

00:04:10,830 --> 00:04:15,720
shortly but we find it it makes the team

00:04:14,220 --> 00:04:18,780
work so much better together because

00:04:15,720 --> 00:04:20,010
you're getting frequent you know can

00:04:18,780 --> 00:04:21,630
feed back all the time every time you do

00:04:20,010 --> 00:04:23,340
a commit in a push or raise a pull

00:04:21,630 --> 00:04:25,140
request you're getting that feedback all

00:04:23,340 --> 00:04:26,470
the time so it's really really important

00:04:25,140 --> 00:04:27,640
and

00:04:26,470 --> 00:04:29,200
there's so much many more things you can

00:04:27,640 --> 00:04:31,540
don't see again I won't give that away

00:04:29,200 --> 00:04:33,910
we save that for later but we find it it

00:04:31,540 --> 00:04:36,100
just allows us to develop faster as a

00:04:33,910 --> 00:04:37,690
team and we get a lot of I guess less

00:04:36,100 --> 00:04:40,180
less issues less defects that's

00:04:37,690 --> 00:04:41,380
conflicts we've are short-lived branches

00:04:40,180 --> 00:04:43,030
I won't go into the whole branching

00:04:41,380 --> 00:04:45,040
discussion but we're happy to talk about

00:04:43,030 --> 00:04:46,180
that afterwards go on and so yeah I mean

00:04:45,040 --> 00:04:47,980
just talking to the points very quickly

00:04:46,180 --> 00:04:50,170
so superfine team processes if you've

00:04:47,980 --> 00:04:51,910
got a CI in place you're sort of

00:04:50,170 --> 00:04:53,890
embracing standard practices you're

00:04:51,910 --> 00:04:55,420
doing pull requests mole ice most likely

00:04:53,890 --> 00:04:57,400
the pull request will be coming back

00:04:55,420 --> 00:04:58,810
saying yes this has all gone through the

00:04:57,400 --> 00:05:00,550
tests don't worry about running it all

00:04:58,810 --> 00:05:02,230
on your local machine and just make some

00:05:00,550 --> 00:05:03,910
of those steps a bit easier for you then

00:05:02,230 --> 00:05:06,190
feedback obviously every single branch

00:05:03,910 --> 00:05:08,710
we set it up that every branch will run

00:05:06,190 --> 00:05:10,480
the full automation suite for example we

00:05:08,710 --> 00:05:13,060
have a reasonably a few clients with

00:05:10,480 --> 00:05:14,500
reasonably complicated projects but the

00:05:13,060 --> 00:05:16,480
whole thing runs in solve less than five

00:05:14,500 --> 00:05:18,490
minutes typically and that's that would

00:05:16,480 --> 00:05:22,180
be a thousand plus tests typically

00:05:18,490 --> 00:05:23,500
running yeah upgrade your project

00:05:22,180 --> 00:05:25,390
confidence I mean that we're talking

00:05:23,500 --> 00:05:26,950
about the stakeholders involved in your

00:05:25,390 --> 00:05:28,140
projects and all those people everyone

00:05:26,950 --> 00:05:30,280
can see it's happening all the time

00:05:28,140 --> 00:05:31,870
build companies yeah okay you see the

00:05:30,280 --> 00:05:33,669
occasional failure that got caught great

00:05:31,870 --> 00:05:36,640
and so forth you can iterate on that and

00:05:33,669 --> 00:05:38,020
improve it and yeah delivery overheads I

00:05:36,640 --> 00:05:39,730
mean a lot of people focus and think oh

00:05:38,020 --> 00:05:41,230
if we're going to introduce tests and

00:05:39,730 --> 00:05:43,120
all this other complicated stuff it's

00:05:41,230 --> 00:05:45,460
gonna take us so much time but it really

00:05:43,120 --> 00:05:46,900
doesn't I mean we probably have ten

00:05:45,460 --> 00:05:48,580
fifteen percent overhead to just

00:05:46,900 --> 00:05:49,600
maintain this or on top of all the work

00:05:48,580 --> 00:05:50,830
you're doing that that includes writing

00:05:49,600 --> 00:05:53,470
all the updated tests and everything

00:05:50,830 --> 00:05:54,940
else it's around about 15% of our time

00:05:53,470 --> 00:05:56,680
goes into making sure this is all there

00:05:54,940 --> 00:05:58,090
and working when the rest of our time we

00:05:56,680 --> 00:06:00,669
can focus on building that functionality

00:05:58,090 --> 00:06:02,740
up but don't take our word for it we're

00:06:00,669 --> 00:06:04,120
gonna we're gonna show you so don't take

00:06:02,740 --> 00:06:05,980
our word for it we will show you some

00:06:04,120 --> 00:06:08,140
videos recorded earlier on today so it

00:06:05,980 --> 00:06:10,270
should be good okay so funny one this

00:06:08,140 --> 00:06:11,890
use circle there's basically two main

00:06:10,270 --> 00:06:13,330
things to worry about you have yeah jobs

00:06:11,890 --> 00:06:14,919
and worthless the jobs are basically the

00:06:13,330 --> 00:06:16,720
scripts you want it to run and the

00:06:14,919 --> 00:06:18,220
workflow defines how you want those

00:06:16,720 --> 00:06:19,240
scripts to be executed one after the

00:06:18,220 --> 00:06:22,419
other whether they need to wait for

00:06:19,240 --> 00:06:24,880
other things so on the next slide an

00:06:22,419 --> 00:06:26,200
example of a very simple job might be to

00:06:24,880 --> 00:06:27,580
build your code so we're going to have

00:06:26,200 --> 00:06:29,140
an image and there's loads of docker

00:06:27,580 --> 00:06:31,000
images out there circle comes with lots

00:06:29,140 --> 00:06:33,370
of them in this case it can you run a

00:06:31,000 --> 00:06:35,620
node image we can first check out the

00:06:33,370 --> 00:06:37,360
code we'll do an NPM install and run a

00:06:35,620 --> 00:06:39,340
build that that could be your most

00:06:37,360 --> 00:06:40,270
simple script to get you started now

00:06:39,340 --> 00:06:43,120
you're just building the code

00:06:40,270 --> 00:06:44,410
No does this create a minified document

00:06:43,120 --> 00:06:45,820
does it do you get any errors coming up

00:06:44,410 --> 00:06:48,640
other things you can do you can build

00:06:45,820 --> 00:06:51,310
Docs I mean we build readme officer I

00:06:48,640 --> 00:06:53,590
say manuals within here and those

00:06:51,310 --> 00:06:54,760
manuals we want to automate that and get

00:06:53,590 --> 00:06:56,140
those building every single time so you

00:06:54,760 --> 00:06:58,000
can put all these things into your steps

00:06:56,140 --> 00:06:59,920
you don't have to focus purely on

00:06:58,000 --> 00:07:04,240
writing tests there's a lot more we see

00:06:59,920 --> 00:07:05,920
see I can give you gone next up so and

00:07:04,240 --> 00:07:07,840
again a simple workflow can literally be

00:07:05,920 --> 00:07:10,600
build the code build the docs runs those

00:07:07,840 --> 00:07:12,040
both in parallel so you don't have to

00:07:10,600 --> 00:07:13,570
wait for one or the other obviously

00:07:12,040 --> 00:07:15,340
later on we will show a little bit more

00:07:13,570 --> 00:07:16,540
of a complicated CI but then circle

00:07:15,340 --> 00:07:18,340
gives you this you get to see every

00:07:16,540 --> 00:07:19,960
workflow that builds through whether

00:07:18,340 --> 00:07:21,280
that succeeded or failed and that can be

00:07:19,960 --> 00:07:24,520
notified we notify on to things like

00:07:21,280 --> 00:07:26,050
slack you'll see errors on there and in

00:07:24,520 --> 00:07:28,060
more details you can drill into them you

00:07:26,050 --> 00:07:29,860
can keep drilling him we weren't showing

00:07:28,060 --> 00:07:34,360
you more slides on that cos take it too

00:07:29,860 --> 00:07:36,040
long so who here uses see I know yeah

00:07:34,360 --> 00:07:38,650
people nobody is a lot of people use it

00:07:36,040 --> 00:07:40,840
that's great who here does CD continuous

00:07:38,650 --> 00:07:42,280
delivery who deploys on the CI well a

00:07:40,840 --> 00:07:44,680
few hands I've gone down but still

00:07:42,280 --> 00:07:46,390
looking good even if you go all the way

00:07:44,680 --> 00:07:48,220
to production it's still really good to

00:07:46,390 --> 00:07:50,200
at least go you know one before

00:07:48,220 --> 00:07:54,100
obviously ideally production be best

00:07:50,200 --> 00:07:56,050
so whatever CI platform you're using you

00:07:54,100 --> 00:07:59,110
can add an extra step if it's a certain

00:07:56,050 --> 00:08:01,600
branch you can then deploy out so if

00:07:59,110 --> 00:08:03,010
you're in a feature branch and it's

00:08:01,600 --> 00:08:05,020
building on CI you probably don't want

00:08:03,010 --> 00:08:07,030
that to deploy although for some of our

00:08:05,020 --> 00:08:08,890
clients we do deploy to a whole

00:08:07,030 --> 00:08:11,350
production like environment but that's a

00:08:08,890 --> 00:08:12,820
separate a separate story so when it

00:08:11,350 --> 00:08:13,870
gets merged into say develop then you'll

00:08:12,820 --> 00:08:15,490
probably go to a development environment

00:08:13,870 --> 00:08:16,870
and you might have a staging Brian Joe

00:08:15,490 --> 00:08:21,280
so staging when you go to master it go

00:08:16,870 --> 00:08:24,250
to production this allows us us to the

00:08:21,280 --> 00:08:26,740
deploy with ease of confidence that

00:08:24,250 --> 00:08:28,120
anyone who's got the permission can just

00:08:26,740 --> 00:08:30,040
merge a pull request into the right

00:08:28,120 --> 00:08:32,080
branch and the automatic gets deployed

00:08:30,040 --> 00:08:34,450
so therefore you can protect it for

00:08:32,080 --> 00:08:36,700
certain people and also it's repeatable

00:08:34,450 --> 00:08:38,410
it's fast you know roughly how long it's

00:08:36,700 --> 00:08:40,840
going to take because it might increase

00:08:38,410 --> 00:08:43,170
over time as you add more things to your

00:08:40,840 --> 00:08:45,970
you know automated test as you add more

00:08:43,170 --> 00:08:47,620
steps to your CI for example we

00:08:45,970 --> 00:08:50,200
mentioned a few earlier automated tests

00:08:47,620 --> 00:08:52,180
but you also get things like okay one

00:08:50,200 --> 00:08:53,490
lint automate tests you might even run

00:08:52,180 --> 00:08:55,980
performance tests

00:08:53,490 --> 00:08:57,060
accessibility tools to do all those

00:08:55,980 --> 00:08:58,589
sorts of checks and we've got we've got

00:08:57,060 --> 00:09:01,440
I think a slide for that in a bit so

00:08:58,589 --> 00:09:03,000
I'll go too much into too much detail it

00:09:01,440 --> 00:09:05,160
enables a change I think it's really

00:09:03,000 --> 00:09:06,510
important it's repeatable and people are

00:09:05,160 --> 00:09:08,459
confident to make little changes and

00:09:06,510 --> 00:09:11,370
often so if you could deploy every week

00:09:08,459 --> 00:09:12,360
if something goes wrong then hopefully I

00:09:11,370 --> 00:09:13,560
shouldn't because you've tested it in

00:09:12,360 --> 00:09:15,630
production life environments all the way

00:09:13,560 --> 00:09:16,980
up but if it does you can easily just

00:09:15,630 --> 00:09:19,680
roll forwards I don't understand why

00:09:16,980 --> 00:09:21,750
people roll back its 2019 you just make

00:09:19,680 --> 00:09:23,670
a quick fix hot fix front however you do

00:09:21,750 --> 00:09:25,649
it and then deploy out 10-15 minutes

00:09:23,670 --> 00:09:26,700
later because with the automated tests

00:09:25,649 --> 00:09:29,160
you're gonna get your full regression

00:09:26,700 --> 00:09:33,240
suite won every time so we're using

00:09:29,160 --> 00:09:35,430
firebase Azhar to host our site and it's

00:09:33,240 --> 00:09:37,470
by Google it's pretty good call he's a

00:09:35,430 --> 00:09:40,470
lot of hackathons and we've used it for

00:09:37,470 --> 00:09:42,390
a few clients and mostly GCP and AWS or

00:09:40,470 --> 00:09:44,490
even get hub pages if it's a static site

00:09:42,390 --> 00:09:46,830
but the principles are still the same it

00:09:44,490 --> 00:09:49,620
is you can get your CI to deploy

00:09:46,830 --> 00:09:51,450
straight out but it's as simple it is so

00:09:49,620 --> 00:09:53,610
when people say I haven't got time to do

00:09:51,450 --> 00:09:55,589
C D it is so simple you could have to do

00:09:53,610 --> 00:09:57,240
this locally on your machine and when

00:09:55,589 --> 00:09:59,880
you get someone else to join they're

00:09:57,240 --> 00:10:01,950
gonna have to do do the same and it's

00:09:59,880 --> 00:10:03,329
not you have to do that but it's not so

00:10:01,950 --> 00:10:04,380
repeatable and you can't check it

00:10:03,329 --> 00:10:05,940
someone else might do it different might

00:10:04,380 --> 00:10:09,060
get a different version whereas if you

00:10:05,940 --> 00:10:10,920
got it in your in your CI then it makes

00:10:09,060 --> 00:10:15,029
it it makes it better so just install

00:10:10,920 --> 00:10:16,860
firebase tools you log in and it will

00:10:15,029 --> 00:10:19,230
open up a browser you can jug in with

00:10:16,860 --> 00:10:22,380
your Google credentials and you

00:10:19,230 --> 00:10:25,140
initialize your project as a firebase

00:10:22,380 --> 00:10:26,850
project it will just selecting hosting

00:10:25,140 --> 00:10:28,230
but you can take all the other if you

00:10:26,850 --> 00:10:32,550
want real-time databases and all the

00:10:28,230 --> 00:10:34,529
rest yeah and then if you got multiple

00:10:32,550 --> 00:10:35,700
projects you can either pick the project

00:10:34,529 --> 00:10:39,149
you've got if you've created it by the

00:10:35,700 --> 00:10:42,690
UI or create a new project really really

00:10:39,149 --> 00:10:47,700
simple I think that's just the yeah so

00:10:42,690 --> 00:10:49,250
that's it yeah we use this by default

00:10:47,700 --> 00:10:52,620
that's what angular deployed out

00:10:49,250 --> 00:10:56,070
compiles to so ya pick the directory if

00:10:52,620 --> 00:10:58,260
it's single page app yeah index.html

00:10:56,070 --> 00:11:00,750
that's it literally this whole process

00:10:58,260 --> 00:11:02,160
takes minutes it's great and it just

00:11:00,750 --> 00:11:03,150
creates those two farms as well so

00:11:02,160 --> 00:11:05,400
that's all you get at the end of these

00:11:03,150 --> 00:11:06,959
two farms sorry the very end we get two

00:11:05,400 --> 00:11:07,529
files created so there's a firebase

00:11:06,959 --> 00:11:09,329
Jason

00:11:07,529 --> 00:11:10,620
the RC file that city says it's done

00:11:09,329 --> 00:11:12,509
obviously you can have a look inside

00:11:10,620 --> 00:11:14,220
those two files it will show you what's

00:11:12,509 --> 00:11:15,870
been set up but they really aren't

00:11:14,220 --> 00:11:17,129
complicated file so you can manually

00:11:15,870 --> 00:11:19,709
edit the menu create them there's

00:11:17,129 --> 00:11:21,509
there's not a great deal to them if you

00:11:19,709 --> 00:11:23,579
do want to see the some of these files

00:11:21,509 --> 00:11:25,079
and how they run we obviously all the

00:11:23,579 --> 00:11:26,730
stuff we do is open source you can check

00:11:25,079 --> 00:11:28,319
out our github website project and

00:11:26,730 --> 00:11:29,249
you'll see it all on there if you want

00:11:28,319 --> 00:11:31,050
to see what goes into those files

00:11:29,249 --> 00:11:32,610
without setting up yourself but it

00:11:31,050 --> 00:11:36,870
really is as simple as running one

00:11:32,610 --> 00:11:38,699
command answering the questions finally

00:11:36,870 --> 00:11:40,439
when it comes to the CI when you do want

00:11:38,699 --> 00:11:43,110
to put this to a continued integration

00:11:40,439 --> 00:11:44,430
server you will need a token firebase

00:11:43,110 --> 00:11:47,069
has a method for doing that you just run

00:11:44,430 --> 00:11:48,870
firebase login CI it will generate a

00:11:47,069 --> 00:11:50,550
token of building a web page first and

00:11:48,870 --> 00:11:52,079
then as an example at the bottom that's

00:11:50,550 --> 00:11:54,509
all you need to run is firebase deploy

00:11:52,079 --> 00:11:56,069
with that token from your CI well get to

00:11:54,509 --> 00:11:57,209
this cypress stuff or no eric's is

00:11:56,069 --> 00:12:00,839
really keen for us to show the cypher

00:11:57,209 --> 00:12:03,629
stuff so yeah we can talk about this is

00:12:00,839 --> 00:12:05,790
also this is our CI and the image that

00:12:03,629 --> 00:12:07,800
we're using some of these steps you'd a

00:12:05,790 --> 00:12:10,110
few more steps in so before you might

00:12:07,800 --> 00:12:12,000
have seen write the beginning the it was

00:12:10,110 --> 00:12:14,189
building now we're adding it to to

00:12:12,000 --> 00:12:16,379
deploy it or to use this key and then to

00:12:14,189 --> 00:12:18,029
deploy the code and that's really it

00:12:16,379 --> 00:12:21,420
that's how simple it is every project

00:12:18,029 --> 00:12:23,790
needs to start with hello world CI CD

00:12:21,420 --> 00:12:26,279
and all those great stuff and keep

00:12:23,790 --> 00:12:30,480
banging on about that and there's the

00:12:26,279 --> 00:12:32,610
workflow update for us to comment okay

00:12:30,480 --> 00:12:34,680
you can just add more and more this is

00:12:32,610 --> 00:12:36,720
your section I can about right now yes

00:12:34,680 --> 00:12:39,600
we've been using Cypress for probably a

00:12:36,720 --> 00:12:40,589
year now and we used selenium protractor

00:12:39,600 --> 00:12:42,269
and a few other things in the past they

00:12:40,589 --> 00:12:44,250
were great we had lots of stability

00:12:42,269 --> 00:12:46,290
issues certainly when we moved from

00:12:44,250 --> 00:12:48,059
angular 1 through to the latest versions

00:12:46,290 --> 00:12:49,620
of angular protractor is really unstable

00:12:48,059 --> 00:12:51,959
it's not built for the latest version of

00:12:49,620 --> 00:12:54,059
angular even though by default it comes

00:12:51,959 --> 00:12:58,259
out the box with that so we tried a few

00:12:54,059 --> 00:12:59,759
things Nightwatch webdriver IO but we

00:12:58,259 --> 00:13:02,069
settled on Cypress because it was just

00:12:59,759 --> 00:13:04,230
it was really stable really easy to use

00:13:02,069 --> 00:13:05,399
whilst there are some limitations like

00:13:04,230 --> 00:13:07,050
you can only run it in Google Chrome

00:13:05,399 --> 00:13:08,490
they're working on that they're going to

00:13:07,050 --> 00:13:09,749
improve that but to be fair if it worked

00:13:08,490 --> 00:13:13,290
in Google Chrome that's all we care

00:13:09,749 --> 00:13:15,179
about something yes so anyway there's

00:13:13,290 --> 00:13:17,069
flaws it's fast it's reliable and so

00:13:15,179 --> 00:13:18,569
we've got test suites that have thousand

00:13:17,069 --> 00:13:19,250
plus tests and they will run in a matter

00:13:18,569 --> 00:13:21,620
of minutes

00:13:19,250 --> 00:13:24,110
it doesn't it's a bit slow on the CLI to

00:13:21,620 --> 00:13:25,550
be fair so if you are running it locally

00:13:24,110 --> 00:13:26,689
on a desktop you will probably see it

00:13:25,550 --> 00:13:29,600
runs quick bit quicker which is

00:13:26,689 --> 00:13:30,769
interesting it does real-time reloading

00:13:29,600 --> 00:13:32,060
so if you wanted to just run a

00:13:30,769 --> 00:13:33,980
particular feature fine you're just

00:13:32,060 --> 00:13:35,569
working on one area you can monitor that

00:13:33,980 --> 00:13:37,040
as you make the changes to the code it

00:13:35,569 --> 00:13:38,240
will just keep on rerunning that in the

00:13:37,040 --> 00:13:40,069
background you can see you're getting it

00:13:38,240 --> 00:13:41,089
better or worse and it also supports

00:13:40,069 --> 00:13:44,089
time drop you'll see we've got little

00:13:41,089 --> 00:13:45,319
video in a minute when it run this when

00:13:44,089 --> 00:13:46,819
you run the test you can click back to

00:13:45,319 --> 00:13:48,889
the history and actually look and see

00:13:46,819 --> 00:13:50,329
what's going on you can then even open

00:13:48,889 --> 00:13:51,649
the inspect console see everything that

00:13:50,329 --> 00:13:52,910
was going on at that point in time so

00:13:51,649 --> 00:13:54,259
even if all your tests are running

00:13:52,910 --> 00:13:55,519
they've taken a couple of minutes you

00:13:54,259 --> 00:13:56,720
can go back to the first test see what

00:13:55,519 --> 00:13:58,759
actually happened and follow that

00:13:56,720 --> 00:14:01,189
through manually by clicking down the

00:13:58,759 --> 00:14:02,509
interface which is quite cool and

00:14:01,189 --> 00:14:04,040
obviously it's all there for continued

00:14:02,509 --> 00:14:05,750
regression testing you should be always

00:14:04,040 --> 00:14:07,579
regression testing there's no reason in

00:14:05,750 --> 00:14:09,139
it in today that you wait till the very

00:14:07,579 --> 00:14:10,670
end to regression test all your code

00:14:09,139 --> 00:14:12,110
people still talk about it because

00:14:10,670 --> 00:14:13,639
they're stuck in the past but the

00:14:12,110 --> 00:14:15,019
reality is regression testing you can do

00:14:13,639 --> 00:14:17,240
it all the time you don't need a big

00:14:15,019 --> 00:14:19,970
manual process to run it all you can

00:14:17,240 --> 00:14:21,680
really can do it with Cypress so also

00:14:19,970 --> 00:14:23,060
someone the benefits of using a tool

00:14:21,680 --> 00:14:25,670
like Cypress new move about the way so

00:14:23,060 --> 00:14:28,610
you can see is when it's running on CI

00:14:25,670 --> 00:14:31,519
and it's heading headless you also

00:14:28,610 --> 00:14:33,019
records videos so if something does go

00:14:31,519 --> 00:14:34,939
wrong in his screen shots just like

00:14:33,019 --> 00:14:36,139
protractor and selenium but also record

00:14:34,939 --> 00:14:37,699
videos you can actually watch the video

00:14:36,139 --> 00:14:39,889
being played which is actually really

00:14:37,699 --> 00:14:41,779
interesting so same fails on CI and you

00:14:39,889 --> 00:14:44,959
can't replicate it locally you do get a

00:14:41,779 --> 00:14:50,000
video of off of the tests running which

00:14:44,959 --> 00:14:52,220
we're hoping to show you but if not it's

00:14:50,000 --> 00:14:53,329
in the repo again I'll slides I can talk

00:14:52,220 --> 00:14:56,449
about our slides really quickly they're

00:14:53,329 --> 00:14:58,430
open source and on github so we've coded

00:14:56,449 --> 00:14:59,600
our slides so if there's anything wrong

00:14:58,430 --> 00:15:00,740
with our slides any typos or any

00:14:59,600 --> 00:15:03,139
mistakes or anything else you'd like to

00:15:00,740 --> 00:15:04,939
add then please you know send a pull

00:15:03,139 --> 00:15:07,910
request through we're using the

00:15:04,939 --> 00:15:09,259
reveal.js framework for that right I

00:15:07,910 --> 00:15:10,699
think this is my contribution they're

00:15:09,259 --> 00:15:13,009
still label on the right hand side it

00:15:10,699 --> 00:15:15,920
did take me like a hot 10 minutes this

00:15:13,009 --> 00:15:17,240
is what it looked like on on CI when

00:15:15,920 --> 00:15:20,540
it's running on CI so it'll look like

00:15:17,240 --> 00:15:22,699
and in a second it will switch to to the

00:15:20,540 --> 00:15:24,259
UI this is what you would see on your UI

00:15:22,699 --> 00:15:26,449
that's how you locally when it's running

00:15:24,259 --> 00:15:28,579
on your laptop you actually see it

00:15:26,449 --> 00:15:31,030
running through the steps and you can

00:15:28,579 --> 00:15:33,520
see the steps down the left you can

00:15:31,030 --> 00:15:36,340
jump back in time as Andrew said and you

00:15:33,520 --> 00:15:39,220
can even even inspect okay you've got

00:15:36,340 --> 00:15:40,810
this what's next but you can even expect

00:15:39,220 --> 00:15:41,890
inspect the console and see what's

00:15:40,810 --> 00:15:45,880
happened to the code at that particular

00:15:41,890 --> 00:15:47,890
time which is just great sorry see you

00:15:45,880 --> 00:15:51,100
again okay it was like 20 second video

00:15:47,890 --> 00:15:52,300
so quick though as Aris isn't throwing

00:15:51,100 --> 00:15:55,180
anything at us we're I think we're okay

00:15:52,300 --> 00:16:06,970
for a few more minutes we're almost done

00:15:55,180 --> 00:16:08,770
now I think anyway but yeah it's it's

00:16:06,970 --> 00:16:10,270
pretty cool and it's gonna run like a

00:16:08,770 --> 00:16:12,220
second you said it can run a thousand

00:16:10,270 --> 00:16:13,630
tests in five minutes and then we do

00:16:12,220 --> 00:16:16,210
another three four minutes to a

00:16:13,630 --> 00:16:19,750
deployment to we do deploy the GCP at

00:16:16,210 --> 00:16:23,050
the moment yeah well so proceed again

00:16:19,750 --> 00:16:24,850
everything here's an NPM install Cypress

00:16:23,050 --> 00:16:26,230
we use cucumber with Cypress and we're

00:16:24,850 --> 00:16:28,120
gonna talk about a little bit about why

00:16:26,230 --> 00:16:30,850
we're using cucumber with Cypress

00:16:28,120 --> 00:16:33,100
Cypress is great there's lots of really

00:16:30,850 --> 00:16:35,380
cool stuff you can do but if you're just

00:16:33,100 --> 00:16:38,140
writing it raw from their docks it can

00:16:35,380 --> 00:16:39,400
become quite a pain to maintain but yeah

00:16:38,140 --> 00:16:41,080
well you need to set it up is literally

00:16:39,400 --> 00:16:43,030
install it we have a couple of scripts

00:16:41,080 --> 00:16:45,130
which just pop them on there yeah we run

00:16:43,030 --> 00:16:46,720
a build we start it up and then once it

00:16:45,130 --> 00:16:49,180
started up you can run Cypress either

00:16:46,720 --> 00:16:51,460
Cypress run will give you at the CLI or

00:16:49,180 --> 00:16:54,700
open will give you the interface on the

00:16:51,460 --> 00:16:56,470
desktop this is what a typical Cypress

00:16:54,700 --> 00:16:59,140
test would like if you were not using

00:16:56,470 --> 00:17:00,460
cucumber this is more Jasmine driven so

00:16:59,140 --> 00:17:03,010
you can see you doing a describe the

00:17:00,460 --> 00:17:04,930
tour percent user authentication we're

00:17:03,010 --> 00:17:06,339
going to do a successful user login the

00:17:04,930 --> 00:17:10,060
first thing it does is visits the login

00:17:06,339 --> 00:17:11,350
page it grabs the form element we then

00:17:10,060 --> 00:17:13,660
grab each of the inputs they get the

00:17:11,350 --> 00:17:15,550
idea so get us off in a minute it is

00:17:13,660 --> 00:17:17,500
this is what you don't do it looks awful

00:17:15,550 --> 00:17:20,199
let's move to what you do do but it does

00:17:17,500 --> 00:17:22,000
work it doesn't work yep but cucumber on

00:17:20,199 --> 00:17:24,130
the other hand we get the gherkin syntax

00:17:22,000 --> 00:17:25,930
with this so by gherkin we're talking

00:17:24,130 --> 00:17:28,390
about a given when then so given this

00:17:25,930 --> 00:17:29,590
precondition when I perform some kind of

00:17:28,390 --> 00:17:31,360
action then there's going to be

00:17:29,590 --> 00:17:35,770
something that happens does anyone use

00:17:31,360 --> 00:17:40,000
cucumber similar hands in the room every

00:17:35,770 --> 00:17:41,380
time yes so by comparison we can write

00:17:40,000 --> 00:17:43,510
something that looks like this to the

00:17:41,380 --> 00:17:44,540
user benefits here obviously are if

00:17:43,510 --> 00:17:46,280
you're talking to the business

00:17:44,540 --> 00:17:47,390
they can read this they can understand

00:17:46,280 --> 00:17:48,800
it whereas if you're I've given them

00:17:47,390 --> 00:17:51,830
that previous script there look at it

00:17:48,800 --> 00:17:52,820
and probably just walk away so we want

00:17:51,830 --> 00:17:54,800
to have a conversation with them we

00:17:52,820 --> 00:17:55,820
don't want them to walk away but you

00:17:54,800 --> 00:17:57,650
have all right this we can say okay

00:17:55,820 --> 00:17:59,060
we're gonna go to the login page we find

00:17:57,650 --> 00:18:01,250
the username field we put a value in

00:17:59,060 --> 00:18:02,720
they find it's the positive field login

00:18:01,250 --> 00:18:05,660
button should them become enabled click

00:18:02,720 --> 00:18:07,250
it page opens likewise we can do pretty

00:18:05,660 --> 00:18:09,230
much the same thing for the sad path so

00:18:07,250 --> 00:18:10,550
if you look almost all those steps are

00:18:09,230 --> 00:18:11,930
the same as I switch on between those

00:18:10,550 --> 00:18:14,360
different spin that we put a different

00:18:11,930 --> 00:18:15,860
password in was not valid and we have a

00:18:14,360 --> 00:18:17,270
different condition we're expecting the

00:18:15,860 --> 00:18:18,680
end we're staying on the login page and

00:18:17,270 --> 00:18:21,370
we're seeing a message to say that the

00:18:18,680 --> 00:18:21,370
credentials were bad

00:18:21,380 --> 00:18:24,470
well sits behind that well it still

00:18:22,970 --> 00:18:26,000
cypress behind that so every step

00:18:24,470 --> 00:18:28,310
definition you do still have to add a

00:18:26,000 --> 00:18:30,560
bit of code so in this case we've got

00:18:28,310 --> 00:18:32,720
the example just of opening the page up

00:18:30,560 --> 00:18:34,370
so when I open a particular page and now

00:18:32,720 --> 00:18:36,140
we can reuse that step we can put any

00:18:34,370 --> 00:18:37,670
URL we want in as a replacement for a

00:18:36,140 --> 00:18:39,980
string it's just a regular expression at

00:18:37,670 --> 00:18:42,380
the end of the day and it will visit

00:18:39,980 --> 00:18:43,670
that page likewise for each of these

00:18:42,380 --> 00:18:45,740
steps there will be a bit of code bind

00:18:43,670 --> 00:18:47,300
each one a couple of lines long the nice

00:18:45,740 --> 00:18:49,070
thing there is as we want to do more

00:18:47,300 --> 00:18:50,330
things like we could add an additional

00:18:49,070 --> 00:18:52,670
check within this page to actually

00:18:50,330 --> 00:18:53,990
validate did you get to that page so you

00:18:52,670 --> 00:18:55,220
can iterate on each of these steps as

00:18:53,990 --> 00:18:57,130
well and everywhere you've used that

00:18:55,220 --> 00:18:59,930
step will benefit from it straight away

00:18:57,130 --> 00:19:02,810
so yeah cucumber pretty awesome makes

00:18:59,930 --> 00:19:04,670
like really simple reusable and if the

00:19:02,810 --> 00:19:06,050
areas of major upgrade to Cypress that

00:19:04,670 --> 00:19:07,820
occurs that changes the name of things

00:19:06,050 --> 00:19:09,170
all you're doing is updating step

00:19:07,820 --> 00:19:10,940
difference I think on our project one of

00:19:09,170 --> 00:19:12,260
the most complicated one has maybe 50/50

00:19:10,940 --> 00:19:14,300
step definitions that we use in there

00:19:12,260 --> 00:19:16,310
there's not many but it can drive a

00:19:14,300 --> 00:19:18,800
thousand tests from that and people can

00:19:16,310 --> 00:19:21,080
read those tests now so some of the

00:19:18,800 --> 00:19:22,310
benefits already mentioned a few but

00:19:21,080 --> 00:19:23,810
John it's all three and wild quite a bit

00:19:22,310 --> 00:19:24,950
just there yeah sure I mean I mean

00:19:23,810 --> 00:19:26,300
everyone can read that so I probably not

00:19:24,950 --> 00:19:27,620
gonna just read it out I was quite keen

00:19:26,300 --> 00:19:29,090
to to build on what you were saying it's

00:19:27,620 --> 00:19:32,300
that kind of guy which is it bridges the

00:19:29,090 --> 00:19:34,340
gap between the tech and non tech so I

00:19:32,300 --> 00:19:37,070
mean even in some projects we've gone as

00:19:34,340 --> 00:19:39,020
far as having the business analyst when

00:19:37,070 --> 00:19:40,520
they want to make changes or sorry

00:19:39,020 --> 00:19:42,500
business will write some of those

00:19:40,520 --> 00:19:44,510
gherkin syntax and we will just bring it

00:19:42,500 --> 00:19:46,040
into our project and then we run the

00:19:44,510 --> 00:19:47,540
tests and you'd get like ten failures

00:19:46,040 --> 00:19:49,160
and one by one would make them pass and

00:19:47,540 --> 00:19:51,200
we know we've satisfied what they want

00:19:49,160 --> 00:19:53,510
and if they do want any changes you've

00:19:51,200 --> 00:19:55,100
got I guess business analyst or product

00:19:53,510 --> 00:19:57,020
owners a little bit more technical they

00:19:55,100 --> 00:19:57,830
can just you know hit edit button on

00:19:57,020 --> 00:19:59,630
github

00:19:57,830 --> 00:20:00,920
change the the if they after you login

00:19:59,630 --> 00:20:01,820
for example they don't want to go to the

00:20:00,920 --> 00:20:03,920
accounts page they want to go to a

00:20:01,820 --> 00:20:06,260
dashboard page they can edit on that

00:20:03,920 --> 00:20:08,930
test file and just change what the where

00:20:06,260 --> 00:20:10,670
it goes and submit created PR it's gonna

00:20:08,930 --> 00:20:13,310
fail and then I know I've got a PR to

00:20:10,670 --> 00:20:15,440
make go green I cannot let the code to

00:20:13,310 --> 00:20:16,760
me that test pass and then when the

00:20:15,440 --> 00:20:17,960
clients happy they can merge it and it

00:20:16,760 --> 00:20:19,370
just a ploy straight out to production I

00:20:17,960 --> 00:20:21,590
mean you can just keep it really slick

00:20:19,370 --> 00:20:24,710
put on how many layers and what kind of

00:20:21,590 --> 00:20:25,910
you know yes and stuff you have but yeah

00:20:24,710 --> 00:20:28,970
you can keep it simple and slick and

00:20:25,910 --> 00:20:30,860
little not them but yeah I think that's

00:20:28,970 --> 00:20:32,090
yeah it's just we use it a lot now I

00:20:30,860 --> 00:20:33,590
lost quite a few years and it's just

00:20:32,090 --> 00:20:38,240
yeah I made allies a lot easier will you

00:20:33,590 --> 00:20:40,580
bridge the gap well so we got so yeah

00:20:38,240 --> 00:20:44,120
automate everything is what we want to

00:20:40,580 --> 00:20:45,230
say is a bottom line to on CI as I

00:20:44,120 --> 00:20:47,150
mentioned before or we've mentioned

00:20:45,230 --> 00:20:48,560
function tests I mentioned earlier on

00:20:47,150 --> 00:20:50,540
you can do performance and accessibility

00:20:48,560 --> 00:20:52,010
you can also add security there's like

00:20:50,540 --> 00:20:53,480
from the wasp you've got a said attack

00:20:52,010 --> 00:20:54,410
proxy and all the other bits of pieces

00:20:53,480 --> 00:20:56,360
you can add to your CI

00:20:54,410 --> 00:20:58,520
and we've mentioned deployment so you

00:20:56,360 --> 00:21:01,340
can keep building on your CI and then

00:20:58,520 --> 00:21:02,960
with circle C I which Travis can't do is

00:21:01,340 --> 00:21:05,090
you can do things in parallel so I think

00:21:02,960 --> 00:21:06,800
it's or those two two boxes you can

00:21:05,090 --> 00:21:08,180
actually have a whole kind of which have

00:21:06,800 --> 00:21:09,470
taken on a picture of one of our more

00:21:08,180 --> 00:21:11,720
complicated ones you know a whole spider

00:21:09,470 --> 00:21:14,000
diagram where you can't continue past a

00:21:11,720 --> 00:21:14,780
certain gate until all the although all

00:21:14,000 --> 00:21:16,250
these have passed

00:21:14,780 --> 00:21:17,960
say for example deployment won't happen

00:21:16,250 --> 00:21:20,450
until all these are green and then it

00:21:17,960 --> 00:21:22,520
would happen and so forth so you can

00:21:20,450 --> 00:21:24,560
have all these all this great stuff but

00:21:22,520 --> 00:21:26,300
yeah automate everything ultimate

00:21:24,560 --> 00:21:28,790
yourself out of a job definitely that's

00:21:26,300 --> 00:21:30,140
all we try and do right yeah you all

00:21:28,790 --> 00:21:32,240
might a white one because I think tie

00:21:30,140 --> 00:21:33,950
scripts amazing should always use it and

00:21:32,240 --> 00:21:36,620
you really like this last one so I'll

00:21:33,950 --> 00:21:38,660
let him set keywords on that one though

00:21:36,620 --> 00:21:40,810
that was put there is mostly a case if

00:21:38,660 --> 00:21:43,520
you have read the documents but

00:21:40,810 --> 00:21:45,170
documentation it very so much we have a

00:21:43,520 --> 00:21:48,800
great struggle with party documentation

00:21:45,170 --> 00:21:50,000
so if you do work and build api's

00:21:48,800 --> 00:21:51,590
third-party way for other people to

00:21:50,000 --> 00:21:53,390
consume make your documentation

00:21:51,590 --> 00:21:55,850
open-source so we can fix it because the

00:21:53,390 --> 00:21:59,360
number of times I've used documentation

00:21:55,850 --> 00:22:01,580
that is wrong out-of-date or just really

00:21:59,360 --> 00:22:02,930
difficult to follow it yeah but read it

00:22:01,580 --> 00:22:04,310
anyway because if you don't read the

00:22:02,930 --> 00:22:05,750
documentation you don't find some of the

00:22:04,310 --> 00:22:08,510
gems and you learn a lot by reading it

00:22:05,750 --> 00:22:10,550
and having problems as well but yeah I

00:22:08,510 --> 00:22:11,370
had one more to that and if you find a

00:22:10,550 --> 00:22:13,440
mistake in open

00:22:11,370 --> 00:22:15,030
source documentation just razorpaw

00:22:13,440 --> 00:22:16,380
requesters fix it and if you figure

00:22:15,030 --> 00:22:18,270
something out like if he went from step

00:22:16,380 --> 00:22:20,430
one for two and there's like a one-lap a

00:22:18,270 --> 00:22:21,990
step one-and-a-half that kind of it's

00:22:20,430 --> 00:22:23,640
easy when you know how but if you don't

00:22:21,990 --> 00:22:25,080
know and you slogan on it just add that

00:22:23,640 --> 00:22:27,270
back the amount of open source

00:22:25,080 --> 00:22:29,850
contributions I've made which are just

00:22:27,270 --> 00:22:31,800
adding in like a hidden step which I

00:22:29,850 --> 00:22:33,510
think most people just assume it's easy

00:22:31,800 --> 00:22:34,830
or all the authors of the project

00:22:33,510 --> 00:22:37,650
assumed it was easy but when you're

00:22:34,830 --> 00:22:38,490
coming to use it it's not and then that

00:22:37,650 --> 00:22:39,960
will just help your open source

00:22:38,490 --> 00:22:41,790
contributions helps the community in it

00:22:39,960 --> 00:22:43,590
okay always say helps you find your next

00:22:41,790 --> 00:22:45,600
job or more money that's a different

00:22:43,590 --> 00:22:47,460
conversation as well I think I can

00:22:45,600 --> 00:22:48,600
answer this one because Andrew or your

00:22:47,460 --> 00:22:49,890
welcome to honestly Andrew didn't want

00:22:48,600 --> 00:22:52,200
to use firebase for this demo he want to

00:22:49,890 --> 00:22:53,370
use AWS for TCP so it's just for the

00:22:52,200 --> 00:22:56,190
demo we actually do we don't use

00:22:53,370 --> 00:22:59,640
firebase for our clients so I haven't

00:22:56,190 --> 00:23:01,620
built any huge scale projects on fire I

00:22:59,640 --> 00:23:03,780
need to add to that we do sometimes you

00:23:01,620 --> 00:23:05,100
say oh no wouldn't say we don't when we

00:23:03,780 --> 00:23:06,300
approach typing and you're in the early

00:23:05,100 --> 00:23:07,740
phases and you're doing the proof of

00:23:06,300 --> 00:23:10,920
concepts and the user base is low

00:23:07,740 --> 00:23:13,350
firebase is really easy gets you going

00:23:10,920 --> 00:23:15,780
actually we recently did have one

00:23:13,350 --> 00:23:17,309
project that then jump from firebase

00:23:15,780 --> 00:23:19,559
becomes so quickly and used we have to

00:23:17,309 --> 00:23:22,230
move somewhere else and it we actually

00:23:19,559 --> 00:23:24,630
moved to GCP storage with a low balance

00:23:22,230 --> 00:23:25,860
for on the front it took about half a

00:23:24,630 --> 00:23:28,530
day to make that transition and then

00:23:25,860 --> 00:23:29,040
deployments URLs all it was wasn't that

00:23:28,530 --> 00:23:30,510
difficult

00:23:29,040 --> 00:23:31,860
it does depend on your project though it

00:23:30,510 --> 00:23:33,960
really does so if you've really got a

00:23:31,860 --> 00:23:35,550
very complicated project with and you're

00:23:33,960 --> 00:23:37,080
running lots and microsites on the front

00:23:35,550 --> 00:23:40,350
end I mean on the back end we're not

00:23:37,080 --> 00:23:42,000
necessarily running firebase for logging

00:23:40,350 --> 00:23:44,190
we news 5 store for stuff vitals quite

00:23:42,000 --> 00:23:45,540
cool for real time but yeah it really

00:23:44,190 --> 00:23:47,910
varies on your project needs as you say

00:23:45,540 --> 00:23:50,070
you can't there's not one shoe fits

00:23:47,910 --> 00:23:51,809
always you've got to think about your

00:23:50,070 --> 00:23:53,309
project think about the user base but

00:23:51,809 --> 00:23:55,080
for a small project getting started

00:23:53,309 --> 00:23:57,929
proving things firebase is really good

00:23:55,080 --> 00:23:59,100
and it is cheaper that level could you

00:23:57,929 --> 00:24:00,840
tell us a little bit more about

00:23:59,100 --> 00:24:05,090
challenges and uses ivories

00:24:00,840 --> 00:24:07,129
especially in comparison to good

00:24:05,090 --> 00:24:08,450
I don't say one thing I'm gonna pass it

00:24:07,129 --> 00:24:10,610
to Andrew because one thing that comes

00:24:08,450 --> 00:24:12,499
to mind when people say that is I won't

00:24:10,610 --> 00:24:13,879
cross browser from selenium I won't be

00:24:12,499 --> 00:24:17,149
able to stay in grid go cross browser

00:24:13,879 --> 00:24:18,649
use tools like what's what's making I

00:24:17,149 --> 00:24:19,879
can't think of other site where you can

00:24:18,649 --> 00:24:21,230
kind of follow them out things videos

00:24:19,879 --> 00:24:23,509
and all the mobile devices all those

00:24:21,230 --> 00:24:27,200
source labs all sorts making a free

00:24:23,509 --> 00:24:29,629
place but how often do projects actually

00:24:27,200 --> 00:24:31,519
go grid and go cross browser a lot at

00:24:29,629 --> 00:24:33,350
the time I think nine times out of ten

00:24:31,519 --> 00:24:35,059
most projects have just used what pick

00:24:33,350 --> 00:24:36,499
one browser Chrome the fastest one

00:24:35,059 --> 00:24:40,070
usually because they want a test suite

00:24:36,499 --> 00:24:42,350
to one really fast so yeah that's my

00:24:40,070 --> 00:24:44,590
answer and I've know Andrews got some

00:24:42,350 --> 00:24:46,580
passionate thoughts or something -

00:24:44,590 --> 00:24:49,970
there's always problems everything's got

00:24:46,580 --> 00:24:51,049
problems there's no there's no idea I

00:24:49,970 --> 00:24:52,850
think some of the problems we've had

00:24:51,049 --> 00:24:54,679
responsive stuff whilst you can have

00:24:52,850 --> 00:24:56,059
different configs for Cypress and say

00:24:54,679 --> 00:24:57,289
different break points and all the rest

00:24:56,059 --> 00:24:58,879
you don't necessarily go on the mobile

00:24:57,289 --> 00:24:59,899
headers in there and things like that so

00:24:58,879 --> 00:25:02,539
if you do want to do all the cross

00:24:59,899 --> 00:25:03,619
browser cross responsive stuff and

00:25:02,539 --> 00:25:05,149
you've got a big need for that then

00:25:03,619 --> 00:25:06,710
press Cypress isn't quite ready yet they

00:25:05,149 --> 00:25:08,600
are doing a lot of work to get into that

00:25:06,710 --> 00:25:09,889
space but they're not ready yet it's one

00:25:08,600 --> 00:25:12,200
of the bigger problems

00:25:09,889 --> 00:25:15,139
well I don't need his cypress specific

00:25:12,200 --> 00:25:16,580
but mocking data so a lot of the time on

00:25:15,139 --> 00:25:17,659
the front end we like to run a test

00:25:16,580 --> 00:25:19,909
suite that just mocked all the backend

00:25:17,659 --> 00:25:21,830
you can do that they have fixtures that

00:25:19,909 --> 00:25:23,840
you can run and just load and integrate

00:25:21,830 --> 00:25:26,389
interact with the network on there that

00:25:23,840 --> 00:25:28,700
works quite well when we're doing stuff

00:25:26,389 --> 00:25:29,720
with firestore so on are the website

00:25:28,700 --> 00:25:31,700
we've been building for code mortals

00:25:29,720 --> 00:25:33,110
we're using firestore that was really

00:25:31,700 --> 00:25:34,820
fun trying to get the fixtures to work

00:25:33,110 --> 00:25:36,529
we looked at different ways of doing

00:25:34,820 --> 00:25:38,360
that but we managed to guess anyone who

00:25:36,529 --> 00:25:39,860
was I very much manually inspecting it

00:25:38,360 --> 00:25:41,419
but that's a problem you get everywhere

00:25:39,860 --> 00:25:43,399
or so are there any real problems that

00:25:41,419 --> 00:25:44,360
I've had with Cypress i'd say i haven't

00:25:43,399 --> 00:25:46,159
actually experienced anything there's

00:25:44,360 --> 00:25:47,720
been that problematic it's it's been

00:25:46,159 --> 00:25:49,309
fairly smooth running for the last year

00:25:47,720 --> 00:25:50,990
here I haven't I couldn't say there was

00:25:49,309 --> 00:25:53,149
anything apart from the questions around

00:25:50,990 --> 00:25:55,039
cross browser that come up everything

00:25:53,149 --> 00:25:58,009
else when it runs on the sit on C I find

00:25:55,039 --> 00:25:59,809
it runs locally fine it's quick I

00:25:58,009 --> 00:26:02,119
haven't really hit anything that I'd say

00:25:59,809 --> 00:26:03,860
has been a major blocker for any client

00:26:02,119 --> 00:26:06,820
that has a particular corner so I need

00:26:03,860 --> 00:26:06,820
this and you haven't got it

00:26:07,240 --> 00:26:10,779

YouTube URL: https://www.youtube.com/watch?v=WW_Qd-SgFWw


