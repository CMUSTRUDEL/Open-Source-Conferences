Title: What's New to LTS with Node.js 12 - London Node User Group - October 2019
Publication date: 2019-11-13
Playlist: London Node User Group
Description: 
	@BethGriggs_ : What's new to LTS with Node.js 12

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,269 --> 00:00:04,680
hello everyone my name is Beth Brooks

00:00:02,129 --> 00:00:07,319
and I work for IBM in their no chance

00:00:04,680 --> 00:00:08,849
and runtimes team I'm kind of an open

00:00:07,319 --> 00:00:12,330
source engineer or I get to spend about

00:00:08,849 --> 00:00:14,660
50% of my time contributing to no core

00:00:12,330 --> 00:00:17,039
or some projects around the know Jayhawk

00:00:14,660 --> 00:00:19,310
the rest of my time is kind of looking

00:00:17,039 --> 00:00:24,060
at IBM cloud and deployment techniques

00:00:19,310 --> 00:00:25,470
for cloud I'm an HSE member and what I'm

00:00:24,060 --> 00:00:28,460
going to be talking about today is

00:00:25,470 --> 00:00:32,369
what's due to long-term support in no 12

00:00:28,460 --> 00:00:35,250
so no 12 went into long-term support on

00:00:32,369 --> 00:00:37,469
Monday and just for those of you may not

00:00:35,250 --> 00:00:41,610
know node.js follows a release schedule

00:00:37,469 --> 00:00:44,660
and the main factor of that is that

00:00:41,610 --> 00:00:47,039
every year we do two major releases

00:00:44,660 --> 00:00:49,379
even-numbered releases will graduate to

00:00:47,039 --> 00:00:51,870
long-term support odd ones will not and

00:00:49,379 --> 00:00:54,149
we're currently we've just gone from the

00:00:51,870 --> 00:00:58,320
current to active transition for node 12

00:00:54,149 --> 00:01:00,510
and no 13 was released yesterday so

00:00:58,320 --> 00:01:02,940
that's where we are what current means

00:01:00,510 --> 00:01:06,420
is Alder fixes and features that random

00:01:02,940 --> 00:01:07,049
master will be back ported into that

00:01:06,420 --> 00:01:09,450
release

00:01:07,049 --> 00:01:12,659
active we're a bit more picky we look at

00:01:09,450 --> 00:01:15,290
the stable features and all bug fixes so

00:01:12,659 --> 00:01:18,240
just summarize the last slide this slide

00:01:15,290 --> 00:01:20,970
odd-numbered releases don't graduate 12

00:01:18,240 --> 00:01:23,549
yes evil ones do current get some fixes

00:01:20,970 --> 00:01:25,110
and features from master active gets all

00:01:23,549 --> 00:01:27,210
features and fixes but we're a bit more

00:01:25,110 --> 00:01:29,759
picky we actually order every single

00:01:27,210 --> 00:01:32,130
commit individually and say should this

00:01:29,759 --> 00:01:34,259
go back into the into LTS hasn't been

00:01:32,130 --> 00:01:35,970
known to cause any problems so we do try

00:01:34,259 --> 00:01:38,610
to honor our long-term support with

00:01:35,970 --> 00:01:41,150
greater stability and maintenance you

00:01:38,610 --> 00:01:44,430
will only get severe bug fixes and

00:01:41,150 --> 00:01:46,140
security fixes sometimes there's a

00:01:44,430 --> 00:01:48,060
little bit of leeway to callback

00:01:46,140 --> 00:01:50,280
features that might help the migration

00:01:48,060 --> 00:01:54,659
on to newer release lines but that's the

00:01:50,280 --> 00:01:57,060
general stance that we have and no 12

00:01:54,659 --> 00:01:58,799
when LTS on Monday so this means you can

00:01:57,060 --> 00:02:00,689
start using it in production advise you

00:01:58,799 --> 00:02:03,420
not to use current releases in

00:02:00,689 --> 00:02:05,909
production because they're not stable

00:02:03,420 --> 00:02:07,079
and we don't make so many guarantees

00:02:05,909 --> 00:02:09,470
about the stability

00:02:07,079 --> 00:02:12,810
I just swap everyone to this

00:02:09,470 --> 00:02:15,569
so yet went to LTS on Monday it will be

00:02:12,810 --> 00:02:20,160
active LTS for 12 months so it will

00:02:15,569 --> 00:02:22,650
continue to have new features and fixes

00:02:20,160 --> 00:02:24,720
for a year and then it will have 18

00:02:22,650 --> 00:02:26,250
months worth of maintenance and we've

00:02:24,720 --> 00:02:28,620
actually flipped this they used to get

00:02:26,250 --> 00:02:30,690
18 months worth of new features but now

00:02:28,620 --> 00:02:33,660
it's only twelve and that's due to the

00:02:30,690 --> 00:02:36,150
doubters in release lines it's just too

00:02:33,660 --> 00:02:37,739
hard to keep up so after 12 months it's

00:02:36,150 --> 00:02:39,750
so out of sync with master that pulling

00:02:37,739 --> 00:02:41,790
anything back into the for example made

00:02:39,750 --> 00:02:45,060
12 branch will just be too difficult so

00:02:41,790 --> 00:02:46,980
we've swapped these round but mr.

00:02:45,060 --> 00:02:49,500
honoring these 30 months of support for

00:02:46,980 --> 00:02:52,350
long term release slides and it will go

00:02:49,500 --> 00:02:54,030
end-of-life april 2022 so it's a good

00:02:52,350 --> 00:02:56,069
version to be using and thinking about

00:02:54,030 --> 00:02:58,230
using now because that buys you two and

00:02:56,069 --> 00:03:00,120
a half years worth of support and

00:02:58,230 --> 00:03:02,160
there's a good blog article and no J's

00:03:00,120 --> 00:03:04,200
Foundation which will detail some of the

00:03:02,160 --> 00:03:08,310
features but I'll go through some of the

00:03:04,200 --> 00:03:10,980
notable ones now first v8 was updated to

00:03:08,310 --> 00:03:13,829
be eight seven seven that came with

00:03:10,980 --> 00:03:15,690
mainly making things faster so a stack

00:03:13,829 --> 00:03:17,730
trace is faster cool sort of argument

00:03:15,690 --> 00:03:20,010
mismatched faster weight faster

00:03:17,730 --> 00:03:24,000
JavaScript pausing so it was pretty much

00:03:20,010 --> 00:03:26,250
all about speed and we also had es6

00:03:24,000 --> 00:03:29,340
module support this is currently behind

00:03:26,250 --> 00:03:31,470
the flag experimental modules so you

00:03:29,340 --> 00:03:34,019
have to pass that to your node process

00:03:31,470 --> 00:03:35,930
to be able to use it at the moment and

00:03:34,019 --> 00:03:40,079
what this provides is things like

00:03:35,930 --> 00:03:42,150
exports so import export statements we

00:03:40,079 --> 00:03:43,950
are considering in the LTS team about

00:03:42,150 --> 00:03:44,549
whether we should unflagged this in

00:03:43,950 --> 00:03:46,260
no.12

00:03:44,549 --> 00:03:48,269
and that may happen in the future

00:03:46,260 --> 00:03:53,850
there's still a discussion and in person

00:03:48,269 --> 00:03:55,530
progress we also have diagnostic reports

00:03:53,850 --> 00:03:57,900
in May 12

00:03:55,530 --> 00:04:01,319
they're also experimental behind a flag

00:03:57,900 --> 00:04:03,510
experimental report and if anyone's ever

00:04:01,319 --> 00:04:05,430
worked with Java this kind of lets you

00:04:03,510 --> 00:04:07,620
create things like cool faults it's

00:04:05,430 --> 00:04:09,870
basically a report that gives you

00:04:07,620 --> 00:04:12,930
information when you're perhaps when you

00:04:09,870 --> 00:04:16,260
process crashes about the state of the

00:04:12,930 --> 00:04:20,190
stacking things like that so it's there

00:04:16,260 --> 00:04:21,799
to help you diagnose diagnose problems

00:04:20,190 --> 00:04:23,540
and crashes

00:04:21,799 --> 00:04:25,340
I think the idea is normally don't say

00:04:23,540 --> 00:04:27,620
you experience a crash in production you

00:04:25,340 --> 00:04:29,150
turn this flag on you run the same

00:04:27,620 --> 00:04:31,340
processes against them you could

00:04:29,150 --> 00:04:32,120
actually have some information to debunk

00:04:31,340 --> 00:04:35,509
that crash

00:04:32,120 --> 00:04:38,630
and actually this PR was probably one of

00:04:35,509 --> 00:04:40,699
the most commented on PRS of all time in

00:04:38,630 --> 00:04:43,940
note it had like almost a thousand

00:04:40,699 --> 00:04:45,830
comments and where this feature came

00:04:43,940 --> 00:04:47,930
from there was an external module called

00:04:45,830 --> 00:04:49,910
node report in the node foundation and

00:04:47,930 --> 00:04:54,620
not many people were using it

00:04:49,910 --> 00:04:56,240
so to help Diagnostics we thought if we

00:04:54,620 --> 00:04:57,860
merge it into core and put it there by

00:04:56,240 --> 00:04:59,840
default there may be more people who

00:04:57,860 --> 00:05:04,100
will use it and that the module will get

00:04:59,840 --> 00:05:06,860
more adoption also in no.12

00:05:04,100 --> 00:05:11,289
we had heap size configuration changes

00:05:06,860 --> 00:05:15,530
so at the moment in node 11 and prior

00:05:11,289 --> 00:05:17,660
the JavaScript heap space would just be

00:05:15,530 --> 00:05:20,419
given some set defaults from v8 and

00:05:17,660 --> 00:05:23,210
these defaults were based on browser

00:05:20,419 --> 00:05:28,460
defaults so it was like 700 Meg for

00:05:23,210 --> 00:05:29,720
32-bit and 64-bit was 1,400 Meg seduced

00:05:28,460 --> 00:05:30,860
with defaults from the browser bit

00:05:29,720 --> 00:05:33,440
didn't really makes sense

00:05:30,860 --> 00:05:35,270
so some changes have gone into no.12

00:05:33,440 --> 00:05:39,500
that means that node were actually look

00:05:35,270 --> 00:05:41,630
at the available memory and then

00:05:39,500 --> 00:05:43,970
allocate that to the process so it's not

00:05:41,630 --> 00:05:45,110
using more than what's available and I

00:05:43,970 --> 00:05:46,550
think this has been particularly useful

00:05:45,110 --> 00:05:48,560
for people using node and docker

00:05:46,550 --> 00:05:50,389
containers obviously you can limit their

00:05:48,560 --> 00:05:53,360
memory and by default making space will

00:05:50,389 --> 00:05:55,340
be assigned that much memory more

00:05:53,360 --> 00:05:57,500
features in May 12 worker threads are

00:05:55,340 --> 00:06:01,360
stable so don't if anyone's work to work

00:05:57,500 --> 00:06:05,389
a friends but use those two are flowed

00:06:01,360 --> 00:06:09,169
off load heavy processes and in your

00:06:05,389 --> 00:06:12,409
note kate private past fields source map

00:06:09,169 --> 00:06:15,590
support TLS one free support the default

00:06:12,409 --> 00:06:18,949
max protocol is now TLS one free

00:06:15,590 --> 00:06:22,490
we have NPM 612 and no 12 at the moment

00:06:18,949 --> 00:06:24,770
and this comes with postman free support

00:06:22,490 --> 00:06:29,539
for no chip so it means you can build

00:06:24,770 --> 00:06:32,300
native add-ons with Python free and the

00:06:29,539 --> 00:06:36,010
default parser was switched to ll HTTP

00:06:32,300 --> 00:06:40,870
this was done for maintainability reason

00:06:36,010 --> 00:06:44,000
and note fur team got released yesterday

00:06:40,870 --> 00:06:47,270
1300 1301 came out today because the

00:06:44,000 --> 00:06:50,120
release was a little bit flaky the the

00:06:47,270 --> 00:06:52,400
actual issue was that we normally

00:06:50,120 --> 00:06:53,990
coordinate with ven p.m. and MPI

00:06:52,400 --> 00:06:56,360
maintains a list of supportive release

00:06:53,990 --> 00:06:58,220
lines and note 13 wasn't been there yet

00:06:56,360 --> 00:06:59,930
so when he took 10km install everyone

00:06:58,220 --> 00:07:01,810
got a warning saying note 14 wasn't

00:06:59,930 --> 00:07:05,360
supported but we've patched that and

00:07:01,810 --> 00:07:07,250
1301 was released this morning and to be

00:07:05,360 --> 00:07:10,310
honest the main feature the big feature

00:07:07,250 --> 00:07:12,530
of meanness is it builds with Phil I see

00:07:10,310 --> 00:07:16,760
you by default so you don't need to

00:07:12,530 --> 00:07:19,280
install I see you separately and just a

00:07:16,760 --> 00:07:22,040
public service announcement no date goes

00:07:19,280 --> 00:07:23,840
end-of-life at the end of this year it's

00:07:22,040 --> 00:07:25,970
actually going end-of-life for months

00:07:23,840 --> 00:07:28,190
sooner than we anticipated according to

00:07:25,970 --> 00:07:31,070
our release schedule and that's because

00:07:28,190 --> 00:07:33,380
the version if open SSL dis bundled with

00:07:31,070 --> 00:07:35,060
no date actually goes end-of-life at the

00:07:33,380 --> 00:07:38,510
end of this year so we've bought the

00:07:35,060 --> 00:07:42,710
note j/s end-of-life to align with that

00:07:38,510 --> 00:07:45,650
so yeah from after in 2020 you will get

00:07:42,710 --> 00:07:49,910
new security fixes or bug fixes on a no

00:07:45,650 --> 00:07:52,130
date release line and just 2019 in

00:07:49,910 --> 00:07:55,490
numbers for no call we've had we've got

00:07:52,130 --> 00:07:59,480
like 2500 contributions now we've had

00:07:55,490 --> 00:08:02,450
3,000 pool requests this year 40 plus

00:07:59,480 --> 00:08:04,370
releases and this takes a lot of work so

00:08:02,450 --> 00:08:06,110
if anyone's interested in getting

00:08:04,370 --> 00:08:08,990
involved for viewing yards

00:08:06,110 --> 00:08:11,030
helping triage issues helping with the

00:08:08,990 --> 00:08:13,190
releases or helping maintain our build

00:08:11,030 --> 00:08:16,580
infrastructure feel free to reach out

00:08:13,190 --> 00:08:19,760
it's definitely more work to do and so

00:08:16,580 --> 00:08:21,970
please reach out to me and yeah thank

00:08:19,760 --> 00:08:25,979
you for listening to my talk

00:08:21,970 --> 00:08:25,979

YouTube URL: https://www.youtube.com/watch?v=DIW5Pce0biE


