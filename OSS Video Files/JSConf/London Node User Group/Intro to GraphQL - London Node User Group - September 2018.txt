Title: Intro to GraphQL - London Node User Group - September 2018
Publication date: 2018-10-02
Playlist: London Node User Group
Description: 
	Presented by Alex Dytrych.

GraphQL is kind of a buzzword right now - but what even is this new API tech from Facebook? In this talk, we’ll take a look at GraphQL and understand what it is, why you might use it, and how it fits in with the existing API landscape. We’ll have a go at writing some simple GraphQL queries together, and hopefully you’ll go away excited about using this awesome tech in your own work & projects.

About the Speaker:

Alex (@somehats) is a freelance full-stack designer, developer, and educator. When she’s not creating apps, games, and tools for the web, she’s teaching other people how to. Alex has been using GraphQL in production on a number of projects since early 2016, and is super excited about introducing more people to the tech. You can follow her on Twitter at @somehats

https://twitter.com/somehats
https://github.com/somehats

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,000 --> 00:00:08,940
I'm Alex I use she/her pronouns I'm a

00:00:04,319 --> 00:00:12,840
freelance like developer / designer /

00:00:08,940 --> 00:00:15,389
like educators / like I don't know

00:00:12,840 --> 00:00:17,460
basically if it's sort of tech related

00:00:15,389 --> 00:00:26,189
you can pay me and I'll probably give it

00:00:17,460 --> 00:00:28,800
a go anyway I'm I'm some hats on the

00:00:26,189 --> 00:00:31,199
internet and today I'm gonna be talking

00:00:28,800 --> 00:00:34,649
about graph celts specifically like an

00:00:31,199 --> 00:00:39,750
introduction to graph QL what even is it

00:00:34,649 --> 00:00:42,000
I don't know so according to Facebook

00:00:39,750 --> 00:00:43,410
who like would probably know because

00:00:42,000 --> 00:00:48,149
they invented it

00:00:43,410 --> 00:00:50,850
it's a query language for api's would

00:00:48,149 --> 00:00:55,260
you like I know those are those sure are

00:00:50,850 --> 00:00:59,550
some words I guess so I like to I don't

00:00:55,260 --> 00:01:01,230
really know what that means so I like to

00:00:59,550 --> 00:01:06,240
think of it as like a way of like

00:01:01,230 --> 00:01:08,040
talking to some external thing which I

00:01:06,240 --> 00:01:09,420
guess is like like what the API bit is

00:01:08,040 --> 00:01:11,549
it's like normally when you're using an

00:01:09,420 --> 00:01:14,880
API you're like talking to some external

00:01:11,549 --> 00:01:17,100
thing from your app or website or

00:01:14,880 --> 00:01:19,170
whatever it is and maybe you want to

00:01:17,100 --> 00:01:21,570
like I'm gonna bring in some like

00:01:19,170 --> 00:01:23,820
external data or like your own data or

00:01:21,570 --> 00:01:25,890
like whatever it is but it's not in the

00:01:23,820 --> 00:01:28,320
like device or like app at the moment

00:01:25,890 --> 00:01:31,409
need to get it from somewhere and graph

00:01:28,320 --> 00:01:34,560
kyo is a language a way of asking for

00:01:31,409 --> 00:01:36,900
that stuff and getting it back and also

00:01:34,560 --> 00:01:38,520
asking for it to like do certain things

00:01:36,900 --> 00:01:44,909
like make updates like that sort of

00:01:38,520 --> 00:01:47,700
thing so it kind of divides into like

00:01:44,909 --> 00:01:51,930
two main sort of categories you have

00:01:47,700 --> 00:01:53,250
your like read reading stuff type of

00:01:51,930 --> 00:01:55,229
thing so it's like asking asking

00:01:53,250 --> 00:01:58,049
questions of whatever remote thing

00:01:55,229 --> 00:02:00,090
you're integrating it with like can I

00:01:58,049 --> 00:02:03,000
have all the comments for this post or

00:02:00,090 --> 00:02:04,680
wherever it is and you also have the

00:02:03,000 --> 00:02:08,039
sort of other side of that which is

00:02:04,680 --> 00:02:12,500
performing updates writing data creating

00:02:08,039 --> 00:02:12,500
new comments or like likes

00:02:12,870 --> 00:02:16,519
or thanks car

00:02:16,980 --> 00:02:21,540
yeah and like this is probably something

00:02:19,769 --> 00:02:24,030
that like what people like come across

00:02:21,540 --> 00:02:25,349
is like like we generally when we're

00:02:24,030 --> 00:02:27,540
working with like data or either like

00:02:25,349 --> 00:02:29,879
consuming it and doing stuff with it or

00:02:27,540 --> 00:02:32,370
we're like telling it to do stuff like

00:02:29,879 --> 00:02:35,819
can you change in this way like whatever

00:02:32,370 --> 00:02:40,080
that's like a thing right okay cool

00:02:35,819 --> 00:02:43,470
not just me great actually

00:02:40,080 --> 00:02:46,739
has anyone here like how to play with

00:02:43,470 --> 00:02:47,880
Bracco before yeah some people awesome

00:02:46,739 --> 00:02:52,110
awesome

00:02:47,880 --> 00:02:55,769
what about like who's maybe like is

00:02:52,110 --> 00:03:07,560
anyone here using it work some people

00:02:55,769 --> 00:03:08,730
yay cool so typically when we like when

00:03:07,560 --> 00:03:10,440
we've got this whole thing going on of

00:03:08,730 --> 00:03:14,519
like we got our app it's like a browser

00:03:10,440 --> 00:03:16,110
it's a mobile app maybe I don't know and

00:03:14,519 --> 00:03:20,040
we want to get some likes and data into

00:03:16,110 --> 00:03:21,690
it we have this idea of like client and

00:03:20,040 --> 00:03:23,430
server which like is everyone like more

00:03:21,690 --> 00:03:25,709
or less familiar with client server like

00:03:23,430 --> 00:03:30,299
you got one you got the other one they

00:03:25,709 --> 00:03:36,780
talk like great pals if it's real it's

00:03:30,299 --> 00:03:38,250
real nice everyone's have anyway so the

00:03:36,780 --> 00:03:41,910
where the place to sort of graph chaos

00:03:38,250 --> 00:03:44,280
it's in in this like whole thing is it's

00:03:41,910 --> 00:03:45,930
the way that like the client can ask a

00:03:44,280 --> 00:03:48,840
question to the server so let's say

00:03:45,930 --> 00:03:50,280
we're building some sort of egg app the

00:03:48,840 --> 00:03:52,799
climb I want to ask like how many eggs

00:03:50,280 --> 00:03:56,040
are available in whatever are like

00:03:52,799 --> 00:03:59,579
external data store thing is and it'll

00:03:56,040 --> 00:04:01,139
use graph QL to ask that question so

00:03:59,579 --> 00:04:03,630
this is like a little graph curl query

00:04:01,139 --> 00:04:05,609
we're saying it's a query we you know

00:04:03,630 --> 00:04:09,480
for all of the eggs what's like the

00:04:05,609 --> 00:04:11,880
total count of them that we have and the

00:04:09,480 --> 00:04:14,099
server's going to take that it's gonna

00:04:11,880 --> 00:04:17,459
look at the graph chaos intact and like

00:04:14,099 --> 00:04:19,260
read and understand it and then it's

00:04:17,459 --> 00:04:21,269
gonna like do whatever it needs to do to

00:04:19,260 --> 00:04:22,830
like answer that question so in this

00:04:21,269 --> 00:04:25,580
case it's probably gonna like open up

00:04:22,830 --> 00:04:28,580
the fridge and like look at the egg

00:04:25,580 --> 00:04:31,340
count them and everything's great I

00:04:28,580 --> 00:04:33,879
guess I don't know I suppose like egg

00:04:31,340 --> 00:04:36,560
management isn't like a super common

00:04:33,879 --> 00:04:41,419
like use case forth it but I don't know

00:04:36,560 --> 00:04:43,639
I feel like I I don't know how many eggs

00:04:41,419 --> 00:04:50,300
I have in my fridge right now like this

00:04:43,639 --> 00:04:51,590
where's my VC money so so anyway once

00:04:50,300 --> 00:04:53,150
the server is like figured out where the

00:04:51,590 --> 00:04:55,449
answer this question is it's gonna make

00:04:53,150 --> 00:04:57,229
a response which is just plain old happy

00:04:55,449 --> 00:04:59,300
Jason data

00:04:57,229 --> 00:05:03,520
Jason is always happy I didn't know if

00:04:59,300 --> 00:05:06,379
you were aware of that sends it back to

00:05:03,520 --> 00:05:08,539
our client and now we know we can like

00:05:06,379 --> 00:05:10,370
update our UI or maybe if we're using

00:05:08,539 --> 00:05:12,289
something like react with like one of

00:05:10,370 --> 00:05:14,590
the cool graph Cal clients are you what

00:05:12,289 --> 00:05:20,360
you I will just update automatically

00:05:14,590 --> 00:05:21,590
which is which is kind of cool and one

00:05:20,360 --> 00:05:24,259
of the most important things about graph

00:05:21,590 --> 00:05:26,509
QL is that these two things your query

00:05:24,259 --> 00:05:29,870
and your response the data that you get

00:05:26,509 --> 00:05:31,340
back kind of look the same like dude

00:05:29,870 --> 00:05:33,949
does everyone notice how these sort of

00:05:31,340 --> 00:05:35,930
have like like query and data like

00:05:33,949 --> 00:05:40,699
different but what's inside those is

00:05:35,930 --> 00:05:45,199
sort of the exact the exact same sort of

00:05:40,699 --> 00:05:48,289
like structure so this is like one of

00:05:45,199 --> 00:05:51,379
the the main like points of graph y but

00:05:48,289 --> 00:05:54,110
anyway the whole sort of purpose of it

00:05:51,379 --> 00:05:57,370
is to do this like fetching and updating

00:05:54,110 --> 00:06:01,129
of server-side data from some sort of

00:05:57,370 --> 00:06:03,740
client app and it's tries to do that in

00:06:01,129 --> 00:06:05,930
a way that's like pretty efficient and

00:06:03,740 --> 00:06:08,539
also in a way that's like super like

00:06:05,930 --> 00:06:15,469
nice and consistent all the way across

00:06:08,539 --> 00:06:17,870
your your API so how do we actually like

00:06:15,469 --> 00:06:22,460
maybe get started with like creating a

00:06:17,870 --> 00:06:24,500
graphic UI OPI or like using graph QL so

00:06:22,460 --> 00:06:29,270
any graph QL service is made out of

00:06:24,500 --> 00:06:34,669
three main bits there's the schema then

00:06:29,270 --> 00:06:36,289
queries and mutations so the schema is a

00:06:34,669 --> 00:06:39,320
description of all other data that's

00:06:36,289 --> 00:06:41,210
available so it lists like about

00:06:39,320 --> 00:06:42,500
your type so maybe you're like maybe

00:06:41,210 --> 00:06:45,410
these the eggs that we have won before

00:06:42,500 --> 00:06:48,290
actually like penguin eggs I don't know

00:06:45,410 --> 00:06:52,280
and like we have like a certain bit of

00:06:48,290 --> 00:06:53,930
information about a penguin and in our

00:06:52,280 --> 00:06:55,640
schema we can describe the type of a

00:06:53,930 --> 00:06:59,030
penguin we have some sort of like unique

00:06:55,640 --> 00:07:01,670
identifier maybe penguins have like four

00:06:59,030 --> 00:07:07,370
recent like really cute names and like

00:07:01,670 --> 00:07:13,040
an age it is a good sort of neutral and

00:07:07,370 --> 00:07:14,750
ages actually anyway so it just as

00:07:13,040 --> 00:07:17,210
another example maybe our penguins like

00:07:14,750 --> 00:07:19,280
love apples and we might have like an

00:07:17,210 --> 00:07:22,190
Apple type as well with some different

00:07:19,280 --> 00:07:24,080
properties this is the the syntax that

00:07:22,190 --> 00:07:27,650
you would use if you were writing a

00:07:24,080 --> 00:07:30,790
graph QL server to like define all of

00:07:27,650 --> 00:07:35,510
the types and like shapes of everything

00:07:30,790 --> 00:07:37,010
then the graph naming graph kill kind of

00:07:35,510 --> 00:07:39,080
comes from the relationships between

00:07:37,010 --> 00:07:40,100
these things like we have our penguins

00:07:39,080 --> 00:07:42,020
we've got our apples

00:07:40,100 --> 00:07:43,580
the Penguins really wanna like have some

00:07:42,020 --> 00:07:46,850
apples but we have no way of like

00:07:43,580 --> 00:07:48,380
relating those two things together and

00:07:46,850 --> 00:07:50,780
that's where like the relationships of

00:07:48,380 --> 00:07:52,340
in graph kill sort of come into things

00:07:50,780 --> 00:07:54,560
and it's sort of where it gets its name

00:07:52,340 --> 00:07:56,210
as well once you start like connecting

00:07:54,560 --> 00:07:59,330
these things together you end up with

00:07:56,210 --> 00:08:01,640
this like whole giant graph of penguins

00:07:59,330 --> 00:08:06,380
and apples or maybe like whatever you're

00:08:01,640 --> 00:08:08,900
like clearly inferior app is like stuff

00:08:06,380 --> 00:08:11,600
by connecting which is pretty cool and

00:08:08,900 --> 00:08:14,660
it's graph Co makes it like very easy to

00:08:11,600 --> 00:08:16,460
sort of go from here and like find other

00:08:14,660 --> 00:08:21,740
things that like related to whatever

00:08:16,460 --> 00:08:24,110
you're looking at at the time so if we

00:08:21,740 --> 00:08:27,500
take our two type definitions from

00:08:24,110 --> 00:08:29,150
before our penguin and our Apple it's

00:08:27,500 --> 00:08:34,030
really easy in graph QL to add a

00:08:29,150 --> 00:08:37,460
relationship between the two to say that

00:08:34,030 --> 00:08:41,210
maybe a penguin has a bunch of apples

00:08:37,460 --> 00:08:42,890
and an apple I guess these penguins

00:08:41,210 --> 00:08:45,680
maybe like they live on some sort of

00:08:42,890 --> 00:08:46,670
Apple commune now I don't know I guess

00:08:45,680 --> 00:08:48,790
if there's owners it wouldn't be a

00:08:46,670 --> 00:08:53,180
commune

00:08:48,790 --> 00:08:58,970
anyway these clearly like I guess

00:08:53,180 --> 00:09:03,050
like a system of like barter so we've

00:08:58,970 --> 00:09:04,850
got like like you know this like square

00:09:03,050 --> 00:09:07,610
Braddock bracket syntax to indicate that

00:09:04,850 --> 00:09:09,860
like one penguin can have some sort of

00:09:07,610 --> 00:09:12,709
rate can have like a lot of apples which

00:09:09,860 --> 00:09:15,050
is good probably for the penguin and a

00:09:12,709 --> 00:09:18,140
penguin Apple can either have can have

00:09:15,050 --> 00:09:23,240
an odor penguin and a grower penguin but

00:09:18,140 --> 00:09:26,300
no other penguins than that how's that

00:09:23,240 --> 00:09:29,570
how's that sound so we're like

00:09:26,300 --> 00:09:31,220
describing this like shape of the data

00:09:29,570 --> 00:09:32,930
that's like available to us in our app

00:09:31,220 --> 00:09:35,029
you know obviously this would be like

00:09:32,930 --> 00:09:36,350
specific to your thing that you're

00:09:35,029 --> 00:09:39,140
building maybe you'd have like a user

00:09:36,350 --> 00:09:42,830
and comments and like documents and

00:09:39,140 --> 00:09:44,200
photos or something I guess it depends

00:09:42,830 --> 00:09:48,760
on what you're building

00:09:44,200 --> 00:09:51,290
so queries are the the second part and

00:09:48,760 --> 00:09:54,830
queries are how we actually get stuff

00:09:51,290 --> 00:09:58,120
from our graph QL server if we think

00:09:54,830 --> 00:09:59,900
back to before when we had that like

00:09:58,120 --> 00:10:01,550
distinction of like the two two

00:09:59,900 --> 00:10:03,560
different things that Greco as for the

00:10:01,550 --> 00:10:05,660
reading and writing queries are all the

00:10:03,560 --> 00:10:11,060
reading side of things so ideally a

00:10:05,660 --> 00:10:13,220
query would like never change any of the

00:10:11,060 --> 00:10:14,589
like data in your in your service a

00:10:13,220 --> 00:10:18,350
little bit like if you're doing rest

00:10:14,589 --> 00:10:20,810
like a get request so we would describe

00:10:18,350 --> 00:10:23,839
in our query exactly what we want so

00:10:20,810 --> 00:10:26,330
we're asking for penguin and then giving

00:10:23,839 --> 00:10:30,260
penguin some like extra arguments we're

00:10:26,330 --> 00:10:35,060
saying name Liz penguin called Liz Liz I

00:10:30,260 --> 00:10:38,480
think is not the best name for a penguin

00:10:35,060 --> 00:10:39,950
that I could have come up with I will be

00:10:38,480 --> 00:10:42,680
accepting better penguin name

00:10:39,950 --> 00:10:45,170
suggestions anyway so we're asking for

00:10:42,680 --> 00:10:46,850
like a penguin called Liz and we're

00:10:45,170 --> 00:10:50,510
asking for the ID and name of that

00:10:46,850 --> 00:10:52,040
penguin back from the server and sure

00:10:50,510 --> 00:10:54,529
enough the server is going to do that

00:10:52,040 --> 00:10:58,270
it's going to look at our query and give

00:10:54,529 --> 00:11:01,760
us back some data that matches that and

00:10:58,270 --> 00:11:03,770
if we change our query so we add in age

00:11:01,760 --> 00:11:06,410
we're asking for a little bit more data

00:11:03,770 --> 00:11:06,940
now then the response changes in the

00:11:06,410 --> 00:11:14,590
same way

00:11:06,940 --> 00:11:17,470
we got like a really old penguin which

00:11:14,590 --> 00:11:19,840
is like really really powerful it means

00:11:17,470 --> 00:11:23,050
that if you're building like a client

00:11:19,840 --> 00:11:24,520
application you can ask for exactly the

00:11:23,050 --> 00:11:26,230
right data that you want and no you're

00:11:24,520 --> 00:11:29,260
not gonna get back any more or any less

00:11:26,230 --> 00:11:31,690
than exactly what you need which is

00:11:29,260 --> 00:11:33,930
super great so we can do the same thing

00:11:31,690 --> 00:11:35,800
you know we could ask for apples

00:11:33,930 --> 00:11:37,450
although we have to be a little bit more

00:11:35,800 --> 00:11:40,090
specific here because apples aren't just

00:11:37,450 --> 00:11:42,250
a simple primitive data type like a

00:11:40,090 --> 00:11:44,020
number or a string we have to say

00:11:42,250 --> 00:11:46,240
exactly what we want from the Apple so

00:11:44,020 --> 00:11:51,070
maybe here we're interested in the size

00:11:46,240 --> 00:11:53,470
and color of them and then our API

00:11:51,070 --> 00:11:56,500
response is going to change to match the

00:11:53,470 --> 00:11:58,960
shape of the query so here we've got

00:11:56,500 --> 00:12:04,270
back an array of apples each with a size

00:11:58,960 --> 00:12:07,390
and a color and what this means because

00:12:04,270 --> 00:12:10,360
this like relationship structure is like

00:12:07,390 --> 00:12:13,110
the same every way everywhere it means

00:12:10,360 --> 00:12:16,540
your API is like super super consistent

00:12:13,110 --> 00:12:17,980
all the way across like every single

00:12:16,540 --> 00:12:20,560
part of it because it is everything

00:12:17,980 --> 00:12:21,970
comes back to those types so yeah we've

00:12:20,560 --> 00:12:24,150
graph code you get exactly what you

00:12:21,970 --> 00:12:29,370
asked for no more no less

00:12:24,150 --> 00:12:34,720
which i think is is pretty cool no

00:12:29,370 --> 00:12:37,240
mutations I like the third part of graph

00:12:34,720 --> 00:12:40,000
graph QL and this sort of cool so

00:12:37,240 --> 00:12:41,470
mutation is a word that like people like

00:12:40,000 --> 00:12:42,790
JavaScript people really like to use the

00:12:41,470 --> 00:12:44,260
web mutations maybe it's not just

00:12:42,790 --> 00:12:46,390
JavaScript people maybe it's programmers

00:12:44,260 --> 00:12:48,220
in general I really don't like the word

00:12:46,390 --> 00:12:51,040
mutations because I always hear it I'm

00:12:48,220 --> 00:12:53,830
like oh great I'm like in the x-men now

00:12:51,040 --> 00:12:56,370
there's like probably some sort of weird

00:12:53,830 --> 00:12:59,530
like maybe there's some like weird

00:12:56,370 --> 00:13:03,460
animals changing into other animals or

00:12:59,530 --> 00:13:06,780
like like that play really bad film with

00:13:03,460 --> 00:13:10,480
the aliens and the shampoo I don't know

00:13:06,780 --> 00:13:14,800
so mutations doesn't mean like some sort

00:13:10,480 --> 00:13:17,340
of weird like genetic like stuff going

00:13:14,800 --> 00:13:20,950
on in a spooky way thing it just means

00:13:17,340 --> 00:13:22,330
changing data making a

00:13:20,950 --> 00:13:26,130
to be different to what it was before

00:13:22,330 --> 00:13:28,270
and the typical like three ways that

00:13:26,130 --> 00:13:31,450
people might have heard of are like

00:13:28,270 --> 00:13:33,010
create update and delete have people

00:13:31,450 --> 00:13:34,660
come across these things before they

00:13:33,010 --> 00:13:36,670
kind of fit in with that like query side

00:13:34,660 --> 00:13:39,550
the reads to be the whole like crud

00:13:36,670 --> 00:13:42,550
thing people like talking about crud

00:13:39,550 --> 00:13:46,960
sometimes there's some nodding that's

00:13:42,550 --> 00:13:50,950
encouraging okay so that's all mutation

00:13:46,960 --> 00:13:54,070
means it just means changing data so

00:13:50,950 --> 00:13:56,740
here we have another example of mutation

00:13:54,070 --> 00:14:03,190
so we might want to like krei an apple

00:13:56,740 --> 00:14:03,970
and here in the parenthesis next to

00:14:03,190 --> 00:14:05,680
create Apple

00:14:03,970 --> 00:14:08,710
I need like a big stick or something I

00:14:05,680 --> 00:14:10,060
guess for pointing we're like giving it

00:14:08,710 --> 00:14:13,260
a little bit of information so we're

00:14:10,060 --> 00:14:16,210
saying create Apple with size 13

00:14:13,260 --> 00:14:19,990
now we're including ID size and color

00:14:16,210 --> 00:14:21,400
inside that mutation but they're not

00:14:19,990 --> 00:14:26,590
actually going to have any effect on

00:14:21,400 --> 00:14:29,380
what gets created what happens they're

00:14:26,590 --> 00:14:31,830
just there that ID size in color to say

00:14:29,380 --> 00:14:36,250
this is the information I want back

00:14:31,830 --> 00:14:37,990
after you've like made these changes so

00:14:36,250 --> 00:14:39,310
all of the mutations in graph Cal kind

00:14:37,990 --> 00:14:41,340
of have like a little query in them as

00:14:39,310 --> 00:14:41,340
well

00:14:41,370 --> 00:14:46,120
so if we look back on the other side

00:14:44,020 --> 00:14:49,450
here we've got our crate apple response

00:14:46,120 --> 00:14:52,480
and we can see that the size has been

00:14:49,450 --> 00:14:55,150
set to 13 as we passed it in in there

00:14:52,480 --> 00:14:58,120
and we've got back our ID in color as

00:14:55,150 --> 00:15:03,550
well because we asked for those does

00:14:58,120 --> 00:15:09,480
that kind of sort of make sense ok demo

00:15:03,550 --> 00:15:09,480
I hope it doesn't go horribly wrong so

00:15:10,260 --> 00:15:18,340
here's a come across github it's like a

00:15:14,200 --> 00:15:21,910
weird website site I don't know it's

00:15:18,340 --> 00:15:24,400
kind of it's I don't know so graph cars

00:15:21,910 --> 00:15:29,230
sorry github has this really cool grotty

00:15:24,400 --> 00:15:30,370
API that you can use for like playing

00:15:29,230 --> 00:15:31,780
around like exploring all of github

00:15:30,370 --> 00:15:34,899
state but it's also a really great

00:15:31,780 --> 00:15:36,279
example of why

00:15:34,899 --> 00:15:38,709
Groff cow and how it works so here we

00:15:36,279 --> 00:15:40,689
have a little graph Gale query but I can

00:15:38,709 --> 00:15:43,779
run and get the response back for my

00:15:40,689 --> 00:15:46,360
current github account and you know I

00:15:43,779 --> 00:15:50,550
can go in and add some more information

00:15:46,360 --> 00:15:53,439
here like it get my email there we go

00:15:50,550 --> 00:15:55,439
that all works and you know I can query

00:15:53,439 --> 00:15:59,110
for those like relationships on that big

00:15:55,439 --> 00:16:01,269
graph of information that github has so

00:15:59,110 --> 00:16:06,929
maybe I'd look for my like starred

00:16:01,269 --> 00:16:09,429
repositories and get like the last three

00:16:06,929 --> 00:16:12,279
we have to do this knows things for like

00:16:09,429 --> 00:16:15,939
reasons and maybe we get like the name

00:16:12,279 --> 00:16:17,439
and owner of those repositories so

00:16:15,939 --> 00:16:19,660
here's like some random stuff I've got

00:16:17,439 --> 00:16:23,559
parent oh the owner is like an ID that's

00:16:19,660 --> 00:16:27,550
a bit rubbish do we get name login okay

00:16:23,559 --> 00:16:29,740
that seems cool so like here are some

00:16:27,550 --> 00:16:34,809
repositories that I've been starring on

00:16:29,740 --> 00:16:37,600
on github which is it's kind of cool I

00:16:34,809 --> 00:16:39,790
really recommend you have a go with the

00:16:37,600 --> 00:16:44,529
github graph QL API the other thing it

00:16:39,790 --> 00:16:46,059
has is this awesome Doc's section where

00:16:44,529 --> 00:16:49,720
you can go through and explore all of

00:16:46,059 --> 00:16:51,189
the different types of query and

00:16:49,720 --> 00:16:53,529
mutation that you can run on github and

00:16:51,189 --> 00:16:57,970
it's incredible and I think the coolest

00:16:53,529 --> 00:17:01,569
part of this is this graphical tool that

00:16:57,970 --> 00:17:04,659
they've embedded in their website work

00:17:01,569 --> 00:17:07,689
with any graph cure API github hasn't

00:17:04,659 --> 00:17:09,610
done anything to like create this like

00:17:07,689 --> 00:17:12,130
interactive documentation thing it's

00:17:09,610 --> 00:17:14,409
just there because the graph Cal schema

00:17:12,130 --> 00:17:17,679
has all of this information associated

00:17:14,409 --> 00:17:19,899
with it and graphical this interface is

00:17:17,679 --> 00:17:23,559
just exposing it to us as developers in

00:17:19,899 --> 00:17:26,709
kind of a friendly way so that's pretty

00:17:23,559 --> 00:17:29,020
cool just as a quick example of a

00:17:26,709 --> 00:17:32,169
mutation I've got the graph care

00:17:29,020 --> 00:17:37,090
repository open here and as you can see

00:17:32,169 --> 00:17:40,899
I have not starred it currently I know I

00:17:37,090 --> 00:17:44,889
know but I have this little example of a

00:17:40,899 --> 00:17:48,790
graph KO mutation here so the mutation

00:17:44,889 --> 00:17:50,980
is is ad star and I'm giving an input

00:17:48,790 --> 00:17:54,310
with a stareable ID which is this like

00:17:50,980 --> 00:17:56,110
big long complicated ID thingy and I'm

00:17:54,310 --> 00:17:59,410
just asking for like whatever the idea

00:17:56,110 --> 00:18:03,940
of what I starred is back so if I run

00:17:59,410 --> 00:18:07,720
this now and switch back to here and we

00:18:03,940 --> 00:18:14,070
load the page I've started the repo yay

00:18:07,720 --> 00:18:14,070
it works what a relief

00:18:15,690 --> 00:18:20,800
okay so I wanted to talk a little bit

00:18:19,180 --> 00:18:22,450
about graph your armrest

00:18:20,800 --> 00:18:25,000
I was mentioned a bit earlier on but

00:18:22,450 --> 00:18:27,310
like how graph carol sort of compares to

00:18:25,000 --> 00:18:28,510
rest and where it like fits in with like

00:18:27,310 --> 00:18:33,820
the other ways that you might want to

00:18:28,510 --> 00:18:35,110
like communicate with an api so a lot of

00:18:33,820 --> 00:18:37,960
people on the internet like to think

00:18:35,110 --> 00:18:40,630
that like graph QL is some sort of like

00:18:37,960 --> 00:18:42,730
rest killer like so they get like graph

00:18:40,630 --> 00:18:45,550
codes just gonna replace rest and rest

00:18:42,730 --> 00:18:50,530
is gonna go far away and like live in a

00:18:45,550 --> 00:18:54,190
living a igloo guru arctic thing going

00:18:50,530 --> 00:18:57,370
on but I don't I don't really I don't

00:18:54,190 --> 00:18:59,260
really think that's that's true I think

00:18:57,370 --> 00:19:00,930
that actually graph Cairo and rest kind

00:18:59,260 --> 00:19:02,710
of have like some some different

00:19:00,930 --> 00:19:06,460
strengths and can't complement each

00:19:02,710 --> 00:19:10,420
other quite well I think they do kind of

00:19:06,460 --> 00:19:12,850
go quite well together and yeah it's

00:19:10,420 --> 00:19:17,680
it's lovely in all of the projects what

00:19:12,850 --> 00:19:19,030
I've used graph cow we've had a few okay

00:19:17,680 --> 00:19:20,530
so this is where like the rest thing

00:19:19,030 --> 00:19:23,430
gets a little bit tenuous we've had a

00:19:20,530 --> 00:19:25,630
few like just other HTTP endpoints

00:19:23,430 --> 00:19:27,730
scattered around doing bits and pieces

00:19:25,630 --> 00:19:30,400
which isn't really what rest is but like

00:19:27,730 --> 00:19:32,320
in my experience of working literally

00:19:30,400 --> 00:19:38,140
anywhere it's kind of how people do rest

00:19:32,320 --> 00:19:39,130
they just have anyway but yeah they kind

00:19:38,140 --> 00:19:41,170
of they kind of do work quite well

00:19:39,130 --> 00:19:44,440
together and I found that when I've been

00:19:41,170 --> 00:19:46,600
using graph Carol like it's been great

00:19:44,440 --> 00:19:49,090
for like all of the sort of normal

00:19:46,600 --> 00:19:50,740
routine like reading and writing of data

00:19:49,090 --> 00:19:52,240
but then like there'll be some weird

00:19:50,740 --> 00:19:54,540
like extra thing that needs to integrate

00:19:52,240 --> 00:19:56,350
with something else or like for

00:19:54,540 --> 00:19:58,300
sometimes for like login or

00:19:56,350 --> 00:20:01,450
authentication just falling back to like

00:19:58,300 --> 00:20:02,610
a normal like restful or like other

00:20:01,450 --> 00:20:06,210
random HTTP

00:20:02,610 --> 00:20:08,549
point is like kind of a perfectly okay

00:20:06,210 --> 00:20:09,720
thing to do as well so they they kind of

00:20:08,549 --> 00:20:12,179
work quite well together but I think

00:20:09,720 --> 00:20:14,910
Groff cure definitely has like a bunch

00:20:12,179 --> 00:20:16,740
of benefits one of the most important

00:20:14,910 --> 00:20:20,090
ones is this thing about getting exactly

00:20:16,740 --> 00:20:24,020
what you asked for in a single query

00:20:20,090 --> 00:20:28,140
I've worked on and used a lot of restful

00:20:24,020 --> 00:20:30,059
apps where if you have three different

00:20:28,140 --> 00:20:33,240
components on your page maybe you have

00:20:30,059 --> 00:20:35,880
an article a like User Profile and a

00:20:33,240 --> 00:20:38,309
comment section on your page that turns

00:20:35,880 --> 00:20:40,980
into three different API requests when

00:20:38,309 --> 00:20:42,270
you load your page which is going to

00:20:40,980 --> 00:20:44,070
slow things down it's going to maybe

00:20:42,270 --> 00:20:46,470
mean that like some stuff loads and the

00:20:44,070 --> 00:20:49,860
rest dozen or whatever generally like

00:20:46,470 --> 00:20:53,059
not an ideal experience it's also kind

00:20:49,860 --> 00:20:56,010
of can be like harder to coordinate as

00:20:53,059 --> 00:20:58,740
like a developer roast with graph

00:20:56,010 --> 00:21:00,330
Carroll you typically would have your

00:20:58,740 --> 00:21:03,900
three core three components on the page

00:21:00,330 --> 00:21:07,860
and have I gets crushed into one single

00:21:03,900 --> 00:21:10,669
query that would get just the data the

00:21:07,860 --> 00:21:13,500
scene for that page no extras no like or

00:21:10,669 --> 00:21:16,380
having to make like repeated requests to

00:21:13,500 --> 00:21:17,730
get like the same amount of data

00:21:16,380 --> 00:21:21,840
everything gets squished into one

00:21:17,730 --> 00:21:26,610
request so it little bit like more like

00:21:21,840 --> 00:21:29,370
a comparison I guess graph code

00:21:26,610 --> 00:21:32,570
generally I think like the benefits are

00:21:29,370 --> 00:21:35,210
you know that that single requesting

00:21:32,570 --> 00:21:37,559
it's also like I find like a lot more

00:21:35,210 --> 00:21:39,809
consistent in your API you can get that

00:21:37,559 --> 00:21:41,460
level of consistency with breast but in

00:21:39,809 --> 00:21:47,070
my experience it takes a lot more work

00:21:41,460 --> 00:21:48,900
for it as with graph QL one area where

00:21:47,070 --> 00:21:52,500
rest does tend to do better is with

00:21:48,900 --> 00:21:55,140
caching generally because you have like

00:21:52,500 --> 00:21:57,000
those more granular requests being made

00:21:55,140 --> 00:21:59,640
you can cache those requests on an

00:21:57,000 --> 00:22:01,110
individual basis and the browser or

00:21:59,640 --> 00:22:01,860
whatever you're using will probably do

00:22:01,110 --> 00:22:04,950
that automatically

00:22:01,860 --> 00:22:06,870
whereas with graph QL generally we we

00:22:04,950 --> 00:22:09,540
have to use like if you want that level

00:22:06,870 --> 00:22:12,840
of caching we need like a smart like

00:22:09,540 --> 00:22:14,280
graph curl caching library but the good

00:22:12,840 --> 00:22:15,030
news is there's like tons of them out

00:22:14,280 --> 00:22:16,980
there well

00:22:15,030 --> 00:22:22,400
there's like two that are any good but

00:22:16,980 --> 00:22:22,400
that's like almost tons so it's fine I

00:22:22,790 --> 00:22:26,520
find that the tooling for RQ is really

00:22:25,260 --> 00:22:30,960
amazing as well although it's a

00:22:26,520 --> 00:22:33,660
relatively like new thing it has like

00:22:30,960 --> 00:22:35,340
some really really great tools and

00:22:33,660 --> 00:22:37,530
everything is sort of standardized

00:22:35,340 --> 00:22:39,510
whereas with rest there are some awesome

00:22:37,530 --> 00:22:41,790
tools out there but they don't fit

00:22:39,510 --> 00:22:45,860
together in a way that is sort of as

00:22:41,790 --> 00:22:48,390
satisfying well so quirky always shinier

00:22:45,860 --> 00:22:51,060
so getting started you couldn't use

00:22:48,390 --> 00:22:54,210
graphical and basically any language

00:22:51,060 --> 00:22:58,740
including these ones note is good I like

00:22:54,210 --> 00:23:00,090
that and there's a bunch of like awesome

00:22:58,740 --> 00:23:03,480
tools out there as well that works well

00:23:00,090 --> 00:23:05,460
with node graph cool is really neat it's

00:23:03,480 --> 00:23:07,920
like a great graph curl prototyping tool

00:23:05,460 --> 00:23:10,350
and if you're like into databases and

00:23:07,920 --> 00:23:13,230
enjoy writing sequel sequel because

00:23:10,350 --> 00:23:15,870
you're like weird like me then post

00:23:13,230 --> 00:23:17,820
graph file is a really neat tool that

00:23:15,870 --> 00:23:19,470
will create a graph cure API from your

00:23:17,820 --> 00:23:26,910
postcards database and it's like super

00:23:19,470 --> 00:23:29,190
awesome on the client side typically

00:23:26,910 --> 00:23:32,280
like the most the most popular to Apollo

00:23:29,190 --> 00:23:33,900
and relay Apollo is is really cool it's

00:23:32,280 --> 00:23:35,790
made by the same people who make Gruff

00:23:33,900 --> 00:23:37,770
no it's not it's made by the same people

00:23:35,790 --> 00:23:39,390
who make meteor which they used to be a

00:23:37,770 --> 00:23:40,980
thing but isn't as cool now

00:23:39,390 --> 00:23:43,830
Apollo is like the new cool thing that

00:23:40,980 --> 00:23:46,800
they're doing and that will work with

00:23:43,830 --> 00:23:50,910
like vanilla Jas like react angular like

00:23:46,800 --> 00:23:52,470
all of the all of them relay is

00:23:50,910 --> 00:23:54,990
Facebook's one which is a lot more

00:23:52,470 --> 00:23:59,580
opinionated but it kind of only works

00:23:54,990 --> 00:24:01,410
with react so just to quickly sum up

00:23:59,580 --> 00:24:03,750
it's a crew language for api's what does

00:24:01,410 --> 00:24:06,330
that mean it's just like a thing for

00:24:03,750 --> 00:24:09,300
talking to things that are external to

00:24:06,330 --> 00:24:10,860
your app in some way it's for

00:24:09,300 --> 00:24:14,190
efficiently fetching and updating data

00:24:10,860 --> 00:24:15,960
and it's made up of schema a schema a

00:24:14,190 --> 00:24:19,920
bunch of queries and a bunch of

00:24:15,960 --> 00:24:22,110
mutations so you get exactly the data

00:24:19,920 --> 00:24:25,080
that you need with just a single request

00:24:22,110 --> 00:24:27,510
which is cool and yeah if you want to

00:24:25,080 --> 00:24:28,530
get started I would recommend having a

00:24:27,510 --> 00:24:30,990
go with graph

00:24:28,530 --> 00:24:34,650
cool and a poet because they're pretty

00:24:30,990 --> 00:24:36,570
neat here's like a bunch of resources

00:24:34,650 --> 00:24:39,150
which I'm not gonna go through because I

00:24:36,570 --> 00:24:40,980
don't want to but my slides are online

00:24:39,150 --> 00:24:44,910
so that's cool

00:24:40,980 --> 00:24:46,050
so anyway this is me if you follow me on

00:24:44,910 --> 00:24:49,230
Twitter I would like that

00:24:46,050 --> 00:24:50,580
I wonder yet I'm trying to like be like

00:24:49,230 --> 00:24:52,620
I already got like a lot more followers

00:24:50,580 --> 00:24:54,120
than K but like she's been catching up

00:24:52,620 --> 00:24:55,890
and I want to get to a thousand by the

00:24:54,120 --> 00:24:58,020
end of the year so this is my current

00:24:55,890 --> 00:25:04,920
like goal so you should follow me on the

00:24:58,020 --> 00:25:06,510
internet because I want you to yeah

00:25:04,920 --> 00:25:11,480
thanks for listening

00:25:06,510 --> 00:25:16,569
I Thanks yeah thanks

00:25:11,480 --> 00:25:16,569

YouTube URL: https://www.youtube.com/watch?v=byz4uY8M90I


