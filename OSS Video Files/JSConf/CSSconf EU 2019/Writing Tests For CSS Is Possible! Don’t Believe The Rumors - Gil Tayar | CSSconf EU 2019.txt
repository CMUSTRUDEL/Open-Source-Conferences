Title: Writing Tests For CSS Is Possible! Don’t Believe The Rumors - Gil Tayar | CSSconf EU 2019
Publication date: 2019-07-08
Playlist: CSSconf EU 2019
Description: 
	You know that fear. The fear of changing something in your CSS. Deleting a CSS rule is a lesson in getting yourself to calm down, telling yourself that it’s OK, you are absolutely sure that deleting that rule won’t change anything.

And only manual testing can assuage that fear. And yet, even then, you’re still frightened that you haven’t checked _everything_, and that you missed something. Not to mention that it’s amazingly boring.

Never fear again! Testing your CSS code, testing the visual aspects of your code, is now possible, and I will show how. A slew of new Saas tools have come to the forefront which enable us to write tests that check that everything is the same that it was (even if we moved from BEM to CSS-in-JS).

So grab that keyboard, refactor your CSS, because writing tests for it is now possible!
Captions: 
	[Music]hi everyone Wowthank you for having me III have to sayI'm not a I'm not a front-end developerI've been switching back and forthbetween front-end and back-endcurrently I'm in my back-end face andthe presentation is not loading waitturn Wi-Fi off there we go hopefully butone thing I did notice both in Jing'spresentation and in Jason's is this dideverybody knows that they were bothshowing us how responsive the things areand I was thinking to myself oh wow andthey were like it this is simple truebut what if I change the CSS that thatthat that's problematic because I haveto check it every time time and timeagain hi I'm a guilty our testing is iswhat is it's been my passion since aboutsoftware developer mostly softwaredeveloper at applitoolsand what we do is we specialize invisual testing tools and I want to talkabout fear definitely fear and we'lltalk about fear of what in a sec butfirst I want to talk about webdevelopers first let's start with theback end developers back-end developershave been there since before the web andI'm a back-end developer right now theyuse words like you know thread pools andmessage queues and Scala's and you knowthey're back there and without them comeon we wouldn't be able to do our frontend so round of applause there you gowhat about front and front end isdivided front and let's talk aboutfront-end JavaScript with developersthey're wizards they deal with thingslike JavaScript and angular and reactand state management and Dom and and allthat kind of stuff and they're reallywizards and the way they handled thingswhat about front-end CSS developersfronting CSS developers are beautifulthat's for you come on a round ofapplause for youthere we go not only are you allbeautiful you create beautiful thingsusing CSS and I'm constantly amazed bythese things and how you manage to workwith them so you deal with responsivedesign media queries and flexboxand something has wonderful is happeningin the web development world a reallywonderful thing and what is itdevelopers are starting to write teststhat test their own code this has beentrue for something like five years or soobviously a lot of people be testingbefore that but it's become slightlymainstream this night last five or sevenyears but why why are developers writingtests the word I use is a go programaphobia anybody know what a go programaphobia is probably not given that I'vejust invented it it's fear of one's owncode okay it's and I'll explain that youknow the manager he says you know justadd that feature and and the way theythink about it is just you know addingthat Lego to the existing code and whenwe're done the truth as we all know issomething like this that's fear the fearof doing that kind of thing doesn'talways happen usually doesn't but whenit does out removing code we want torefactor this is especially true in CSSwe think about it as just you knowremoving that one single line or in CSSjustneed that rule that rule shouldn't bethere let's just take it out but we allknow what happens in the real world whenI take out that CSS somewhere some pageis gonna break yeahrefactoring I really want to refactor Ireally want to refactor that JavaScriptbut I'm afraid this will happen to meand it doesn't matter whether our codeis a horribly written pile of spaghettior a wonderfully beautiful crafted setof loosely coupled modules we reallyfear our own code which we fear changingit because changing code may meanbreaking the app and web developers asall developers have have discovered thatdeveloper testing or testing in shortremoves the need for this manual testingafter code changes and developer testingis writing code that tests your own codeas part of writing the code itself soit's not QA automation engineers doingthat for you it is you doing that foryourselves and testing abolish is thatfear it makes that fear mostly go awaybecause you code and then you write thetest for that code and it doesn't reallymatter whether you're writing it beforeyou write the code TDD style or after Idon't read here and you know you runthose tests and they break and you fixthe pods etc and it works and once youchange your code you just run the testsagain and you're done testing abolishesfear that is the most important thingtesting abolishing the fear of one's owncode who's writing tests who'sabolishing that fearwell back-end developers have beenwriting tests for quite some timethey've had that methodology even beforethe web the methodologies and toolingare mostly established they've beenworking on it for quite a whilefront-end JavaScript developers well theWeber's is young in terms ofmethodologies it's not totally there yetit's slightly confusing nobody reallyknows exactly what it's but the toolingis almost there it's happening it'shappening we've been happening for quitesome times a lot of mentors and teacherscan't see das just in serials Kevin Lambpain Gleb ajamu Tov Shai Resnick andothers hopefully including me we areslowly building for JavaScriptdevelopers a methodology based on unittesting component and multi componenttesting using JS DOM and things likeCypress and selenium and webdriver IOwhat about you you're sadno tests for you you don't know and whywhy is that well I'll explain a secondfront let's talk about front-endJavaScript tests they're functionallet's say I have a function you put aninput it does its thing you grab theoutput you check that the output iscorrect you're done you've written yourunit tests what about the you know UItests not a problemyou open the browser using alsoautomation tools you write you do theclick click clicks and the type typetypes and then you check that this fieldis the correct value in that field isthe correct value and this field is thegreat value same stuff and that nothingchanged but how do I functionally testsomething like this I could check thewidth of the columns when I you knowwhen I do the responsive design it'spossible but it's a huge amount of codeand you are not testing everything andyou're saying quite rightly we can't dofunctional testing and you're right youcan't I tried a few years ago right wigswe did I was my front end face and Itried writing functional tests yeah whooit worked not no problem the tools intooling as I said is there and then Itried to do visual testing couldn'tsucceed testing CSS and testing visualsis a hard problem you're not why becauseit's visual not functional anything todo with vision is problematic but don'tbelieve the rumors writing tests for CSSis possible and the point is not thewriting test is for CSS as possible isthat you should be starting to write thetests for CSS it is time for that howI've been doing a lot of talks on thisissue and talking to a lot of peoplepeople think the developers think itgoes like thisyou navigate to a page using webautomation tools like the selenium orCypress take a screenshot and then youtell the tool whatever library you'reusing for testingdoes this look good right they reallythink that or or maybe does this conformto a certain design system okay this ismy design system does this UI conform toit and the answer is no unfortunatelywe're not there are machine learningalgorithms in our AIand we need AI for this type of stuff isjust not that good yet but right now sohow does it workwe're not actually doing visual testingwe're doing visual regression testingwhat chain we're checking that what hasbeen still is okay that nothing hasregressed or changed and this is atypical visual test it's that simple I'musing a Cypress I love Cypress it's mygo-to automation tool but there are tonsof other selenium-webdriver i'll testcafe all of them support visual testingto once at one point or another first ofall we set the viewport because settingthe viewport as we all learned and weall know in responsive design is crazyimportant then we use Cypress to visitand then it opens that you know browserto whatever site we want then we do thetyping and the clicking to get towhatever page in whatever state of theUI we want and we call the tool withvisual testing tool just call it and itdoes its magic this is where the magichappensand what is that magic the tool first ofall takes a screenshot of the app itcompares the screenshot with a baselinethat was previously given and I'llexplain what when it was given it checksfor differences if there are nodifferences good your test pass if thereare differences it doesn't know whetherthat difference is a bug which itusually is or a feature I've just addeda button I've just changed the stylingso you need to check manually accept orreject that difference and where doesthat baseline come from that baselinecomes from a previous test the firsttime this tool runs it accepts all thescreenshots theand ask anything that's the baselinewhen you accept a difference becauseit's a feature not about that becomesthe new baseline and so on and so onthis is visual testing in a nutshellthat's how you test your CSS thank youvery much questions now just joking Iwish there's an elephant in the roombecause it's visual it's hard it's notthat easy for elephants in the roomlet's talk about elephant number one I'mgoodwe've seen dogs we've seen cats now wehave elephants first of all taking ascreenshot is hard it's actually thesmallest elephant but it's still thereare you using Cypress that's easytaking a screenshot in Cypress is greatCypress runs under chrome chrome hasgreat screenshot taking facilities youwant only the viewport only the windowfine you want the whole full page fineyou want a specific region or a specificelement we're good we don't always needthe full page sometimes want to take aspecific segment of that page otherwiseif you're using if your JavaScriptdevelopers are using selenium orwebdriver IO or others that's a problemouch you can only do window how do youtake a full page when you can only takea screen shot of a window so what if myJavaScript if our JavaScript developersuse selenium we just you know I won't dovisual testing I'll just do thismanually all day and the answer is no asI said don't believe the rumors taking ascreenshot is possible if you're usingCypress you're done if you're usingselenium or others one there are opensource and commercialtools that know how to do it in weirdand wonderful ways basically take ascreenshot viewport of the viewport thenCSS transform the body up take anotherscreenshot sisters transform the body upetc etc until we stitched all thescreenshots together and we're doneso tooling knows how to do that justlook for it that's the easy partelephant number two I think this is thebiggest one but comparing thescreenshots is hard so you have yourbaseline screenshot and you have yourcurrent screenshot how do you comparethem most open-source tools and othersdo pixel by pixel just check pixel bypixel to see whether anything haschanged that's easy to do but look atthis these are two screenshots of acertain page from the my Windows machine and this is Iwill use Mac but nothing more this iswhat the top one is my machine and thebottom is my friends machine they lookexactly the same but notice they're notwhy is that why is the same machine sameChrome or Firefox or whatever same wellWindows operating system giving usdifferent results and the answerincredibly enough is graphics driversgraphics drivers graphics a car graphiccards etc the difference are reallyslight but they are there let's doanother one this is a picture fromChrome we found it out during the movefrom chrome this is chrome JPEG look exactly the same right nopethis is the difference in the pixelsyeah most of the pixels are differentbasically it's probable they probablychange the library that they used torender the JPEG or something I don'tknow but there isthe difference remember the testingbookstore will see a demo shortly thisone written on the same and this what Iwas doing while while preparing the talkI found that out using a pixel-by-pixelMaya library the same one same machinethese are the two screenshots you cansee zero difference right nope reallyslight I have no idea why really I wasactually surprised and somebody whodeals with these pixel differences a lotI have no idea why there was adifference there but there was like inone of why all the tools have this it's aslider which says do you want it do youwant false positives or false negativesit's it's basically it's basicallysaying how much percentage of error isokay if you say no percentage of errorsyou'll get a lot of false negatives ifyou move that slider to the right you'llget a lot of false positives or theother way around I can never figure itout but you have to tweak it constantlyand per page as I said that's it andthat's the biggest problem because wedon't want to constantly manage ourscreenshots nope it's not the samebecause a lot of these tools employadvanced screenshot comparisonalgorithms AI machine learning justreally really complex algorithms whatthey do is they don't look at the pixelsthey try and find the elements in thepage and look at the elements andcompare them if there are slightdifferences there they just ignore themthey're actually seeing as a human wouldsee or at least trying to do that so nofalse positives no false negatives ifyou're using advanced comparisonalgorithms it is possible and that isthe biggest advance andtesting that we've seen in the last fewyears and all of these if there arecommercial tools they all have free andOSs plans so go ahead and use themelephant number three managing thosecomparisons is hard okay so we've got adifference and it's like we're doing ahundred screenshots and a lot of themlet's say I change the header all ofthem have changes there that's the partwhere you accept or reject thedifference you have to do that manuallyand as I said hundreds of comparisons isthat a problem let's see one way to dealwith it is we're doing deltassmall Delta's so a lot of times it's thesame difference in all the screenshotsso I just use the tool and say yeah fineupdate update the baseline they're allfine because if it's a bug there is noproblem I don't need to do anything butif it is a feature if there's anaddition I just acceptable go away theother way is taking like dragging fromthe folder that has the currentscreenshots dragging it to the baselinescreenshots and dealing with that everyway looking at the day of saying okaythis is above this is a feature this isabout this is a feature and draggingwhichever way you want other toolsmostly commercial deal with it using adashboard where you can accept or rejectthe differences as you wish it'sbasically a salt problem each tool inits own way but you have to think youneed to manage those screenshots andthis comes to this one the big onetesting all those responsive wits andbrowsers we're talking we've seen that and it's getting moreand more interesting because more andmore sites are becoming responsive notonly that it's not just responsivenessits Chrome Firefox Safari etc etcdifferent pixel densitywe're talking different pixel densitiesalso do we abandon ship because oh mygod how do we do thatone solution is just run the testmultiple times I have a on all the sizes I want I phone iPad etcon each I run the test multiple timesand change the viewport accordingly andtake the screenshot and we're donedefinitely doablethe other solution well that's thesolution but it takes a lot of time if Ihave a hundred tests now I have tests the other solution is do the samebut paralyze the testing that takes alot of infrastructure but it'sdefinitely doable and a lot of companiesdo that solution number three is let acloud provider do that for you send overnot the screenshot but sent over asnapshot of your Dom in your CSS etc andthen run all those tests all thosescreenshots on a lot of browsers in theend it really is as easy as this I wantto show a demo because I do have somemore time No let's see a demolet's let's start with the applicationunder test this is the application undertest I can filter right here test and itfilters it obviously it's all responsivebut you've seen that already now let'slook at the test let's look at theregular OSS tool as I said it's just asit were but viewport visit get type typethe testing and we're done I will beusing an apple tools eyes where I haveto open the test and close the test butit's basically very simple simple I runthe actions and then do a check windowvery similar same tooling as I said theyare all the same let's run the test wecan run it non interactively but Cypressis really cool so let's do thatthere we go the test is runninghopefully are we good yes Wi-Fi isworking at least the ethernet is workingit's running it did the check window butnow it's waiting for the answer fromfrom Apple tools from eyes and let's goto the dashboard and there it is we'vejust passed notice that it doesn't giveone screenshot although we did give onescreenshot it's running for tests inChrome and one test in eye this is actually an iPhone X emulationso you get the responsive design as Isaid we're give we're letting the clouddo our work for us okay now let's breaksomething sorry about the artificialityof it this is it no that's not theextent of my CSS I know it better butokay so let's change the title to read Iwill close itthere we go and we'll run it again soit's running now you can you can seethat the testing book store is now redand it's running it's throwing overthose dumb snapshots to the cloud andwaiting for the results of those testslet's go to wherever I need to go and wehave an error in all the pages okay asyou can see it's this error I'll show itlike this okay now we need to saywhether this is a bug or a feature let'ssay that it's a feature we wanted tochange it to red sorry my designabilities are really low what I can dois I can group all of them and approvethe two that it grouped on and save thechanges I won't save the changes somaybe if I give the talk another time Ican do that again so basically this isthe level of sit it's it's basicallythat easy remember just write the codethat uses the tool does the visits doesthe clicks wherever you want to take ascreenshot you use the tool to take thatscreenshot and then you do have themanaging of the screenshots soas I said it really is as easy as thatas long as you take care of those fourelephants that's important I'm insummary so do we believe the rumors nowriting tests for CSS is possible and sojoin the backend and the front-endJavaScript developers start testing yourCSS you can cure your CSS ego programmerphobia it's a hard problem don't don'tworry it is a hard problem because it'sa visual one and visual stuff is alwayshard taking the screenshots managingthose screenshots comparing thescreenshots and take testing acrossvarious browser widths and Heights andand platforms is really really difficultbut it is solvable with open source andcommercial tools so who knows what thisis come on raise your hands anybody readdo you and thank you by Frank Herbertwe're gonna get a movie soon I must notfear we're talking about fear fear isthe mind killer fear is the little deaththat brings total obliteration I willtest my CSS I will permit it to passover and through me and when it has gonepast I will turn the inner eye to seeits path where their fear has gone wherethe fear is gone there will be nothingonly my tests will remain thank you verymuch[Applause][Music]
YouTube URL: https://www.youtube.com/watch?v=Dl_XMd_1F6E


