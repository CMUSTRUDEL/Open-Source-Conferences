Title: Kenneth Ormandy: Syntax Highlight Everything - CSSConf.Asia 2016
Publication date: 2016-12-01
Playlist: CSSConf.Asia 2016
Description: 
	A developer employs syntax highlighting to visually differentiate portions of her code; for centuries, designers, printers, and scribes have done the same for readers. Today, advanced features built into fonts can subtly signify types of content, increase a text’s authority, and are actually necessary for many languages.
This talk introduces designers and developers to highlighting
syntaxes beyond code. Learn how to access these advanced typographic features using CSS and JavaScript, and—more importantly—where to apply them.
Kenneth is an independent designer specialising in web typography. He organises Vancouver’s typography meetup Type
Brigade, and contributes to The Lost Type Co-op. Previously he studied type design at Type@Paris, and helped launch the front-end development tool Surge.sh.

Source: https://2016.cssconf.asia/
Slides: 

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:10,630 --> 00:00:15,740
it's unlikely you see code in black and

00:00:13,640 --> 00:00:17,960
white and I mean that literally a

00:00:15,740 --> 00:00:19,970
developer uses syntax highlighting to

00:00:17,960 --> 00:00:22,699
visually visually differentiate portions

00:00:19,970 --> 00:00:24,380
of her code but these signifiers between

00:00:22,699 --> 00:00:25,730
different kinds of content aren't

00:00:24,380 --> 00:00:28,489
something that we interpret consciously

00:00:25,730 --> 00:00:30,339
they're typographic cues that add to the

00:00:28,489 --> 00:00:33,410
conventions of the programming language

00:00:30,339 --> 00:00:35,300
you the developer are reading and

00:00:33,410 --> 00:00:37,340
skimming code and how effectively you're

00:00:35,300 --> 00:00:38,899
able to do this is actually be informed

00:00:37,340 --> 00:00:40,640
by many of the same principles that

00:00:38,899 --> 00:00:43,850
determine how effectively you can read

00:00:40,640 --> 00:00:45,920
anything else syntax highlighting is

00:00:43,850 --> 00:00:48,500
designed and its success is informed at

00:00:45,920 --> 00:00:49,940
least in part by the typography just

00:00:48,500 --> 00:00:52,429
like with any other discipline specific

00:00:49,940 --> 00:00:53,899
typography there are some details that

00:00:52,429 --> 00:00:56,120
are unique to the subject matter but

00:00:53,899 --> 00:00:58,030
many are generally applicable as well

00:00:56,120 --> 00:01:00,559
and because of this typographic

00:00:58,030 --> 00:01:02,300
conventions in syntax highlighting can

00:01:00,559 --> 00:01:04,879
teach us about using type in many other

00:01:02,300 --> 00:01:06,470
situations designing longer form

00:01:04,879 --> 00:01:08,240
articles visual identities user

00:01:06,470 --> 00:01:11,600
interface design and other things

00:01:08,240 --> 00:01:14,060
entirely when syntax highlighting is

00:01:11,600 --> 00:01:15,979
successful we don't stop to appreciate

00:01:14,060 --> 00:01:17,210
it and this is a good thing but it's

00:01:15,979 --> 00:01:19,369
something like it I'd like us to

00:01:17,210 --> 00:01:22,250
dedicate some time to and its time and

00:01:19,369 --> 00:01:24,470
attention to today our work uses type

00:01:22,250 --> 00:01:26,030
extensively and you probably know more

00:01:24,470 --> 00:01:27,710
about how to apply some advanced

00:01:26,030 --> 00:01:29,719
typographic features than you realize

00:01:27,710 --> 00:01:33,710
directly through your familiarity with

00:01:29,719 --> 00:01:35,149
typographic conventions in code syntax

00:01:33,710 --> 00:01:37,189
highlighting creates a visual hierarchy

00:01:35,149 --> 00:01:39,680
and just as they do in graphic design

00:01:37,189 --> 00:01:41,740
just all principles help explain how you

00:01:39,680 --> 00:01:43,579
interpret the code you're reading

00:01:41,740 --> 00:01:45,079
similarity through color is what we

00:01:43,579 --> 00:01:46,969
think of when we think of syntax

00:01:45,079 --> 00:01:48,469
highlighting typically the syntax is

00:01:46,969 --> 00:01:50,270
categorized for you with different hues

00:01:48,469 --> 00:01:52,039
it helps you immediately associate

00:01:50,270 --> 00:01:54,189
pieces of code know that they're similar

00:01:52,039 --> 00:01:57,289
or dissimilar but this is just one way

00:01:54,189 --> 00:01:59,180
how pieces of sin taxes are highlighted

00:01:57,289 --> 00:02:02,270
and how typographic principles are used

00:01:59,180 --> 00:02:04,250
within code various graphic design have

00:02:02,270 --> 00:02:06,320
instructors have reminded me over the

00:02:04,250 --> 00:02:08,200
years if it's the same make it the same

00:02:06,320 --> 00:02:10,729
and if it's different make it different

00:02:08,200 --> 00:02:12,290
color is far from the only method we

00:02:10,729 --> 00:02:13,790
have to associate and disassociate

00:02:12,290 --> 00:02:15,260
things visually

00:02:13,790 --> 00:02:16,879
type style typeface weight and

00:02:15,260 --> 00:02:19,640
background color are a few that we see

00:02:16,879 --> 00:02:22,189
in our code editors for example you

00:02:19,640 --> 00:02:24,829
might use bolding to create sort of a

00:02:22,189 --> 00:02:27,379
headline for a class name or you might

00:02:24,829 --> 00:02:29,060
use a background color you might have a

00:02:27,379 --> 00:02:31,670
background color applied when you type

00:02:29,060 --> 00:02:33,439
something incorrectly and this is always

00:02:31,670 --> 00:02:35,120
faster than running tests to capture

00:02:33,439 --> 00:02:38,900
typos so I guess that's qualifies as a

00:02:35,120 --> 00:02:41,060
talk on testing now but syntax

00:02:38,900 --> 00:02:42,439
highlighting there isn't a single

00:02:41,060 --> 00:02:44,450
correct way to do things there's

00:02:42,439 --> 00:02:47,930
conventions and they can be followed

00:02:44,450 --> 00:02:49,370
ignored or intentionally broken and I

00:02:47,930 --> 00:02:51,799
think comments are one of my favorite

00:02:49,370 --> 00:02:53,150
examples of this how their design can

00:02:51,799 --> 00:02:55,370
place them anywhere in the hierarchy of

00:02:53,150 --> 00:02:57,439
a document or your code editor they can

00:02:55,370 --> 00:03:00,409
be subtle encouraging you to focus on

00:02:57,439 --> 00:03:01,760
the code or they can be the most

00:03:00,409 --> 00:03:05,000
prominent piece of your text editor

00:03:01,760 --> 00:03:07,129
demanding to be read here they are side

00:03:05,000 --> 00:03:10,540
by side the same piece of CSS but they

00:03:07,129 --> 00:03:10,540
have a very different visual hierarchy

00:03:14,680 --> 00:03:18,590
continuity and symmetry are some other

00:03:17,450 --> 00:03:20,120
principles that apply when we're

00:03:18,590 --> 00:03:23,389
thinking about how syntax highlighting

00:03:20,120 --> 00:03:25,609
is designed particularly for when we're

00:03:23,389 --> 00:03:27,440
writing code aligning a like elements

00:03:25,609 --> 00:03:29,319
and other contextual features can help

00:03:27,440 --> 00:03:32,720
you keep your place while writing code

00:03:29,319 --> 00:03:35,690
one bracket might be highlighted when

00:03:32,720 --> 00:03:37,370
you select a different one and so that

00:03:35,690 --> 00:03:39,530
you are matched or if you're writing a

00:03:37,370 --> 00:03:40,760
white space significant language or

00:03:39,530 --> 00:03:43,099
using a white space significant

00:03:40,760 --> 00:03:45,620
preprocessor you might have white space

00:03:43,099 --> 00:03:48,229
character shown or rules or lines appear

00:03:45,620 --> 00:03:50,000
to guide your eye vertically and by

00:03:48,229 --> 00:03:51,440
maintaining the same syntax highlighting

00:03:50,000 --> 00:03:52,940
theme for an extended period of time you

00:03:51,440 --> 00:03:55,579
might actually find it your code easier

00:03:52,940 --> 00:03:57,319
to read certainly familiarity influences

00:03:55,579 --> 00:03:59,530
our perception of code we become

00:03:57,319 --> 00:04:02,150
accustomed to our own theme and settings

00:03:59,530 --> 00:04:04,129
when speaking about typefaces themselves

00:04:02,150 --> 00:04:06,019
type designers whose an Atletico said

00:04:04,129 --> 00:04:09,439
readers read best what they read most

00:04:06,019 --> 00:04:11,269
and this has more to do explaining while

00:04:09,439 --> 00:04:13,400
black letter and older books look

00:04:11,269 --> 00:04:14,810
challenging to read to us today but once

00:04:13,400 --> 00:04:17,380
once the norm but on a much smaller

00:04:14,810 --> 00:04:19,699
level I think it also is true for code

00:04:17,380 --> 00:04:21,639
familiarity influences our perception of

00:04:19,699 --> 00:04:23,479
code when it's displayed elsewhere to

00:04:21,639 --> 00:04:26,300
consider these two pieces of

00:04:23,479 --> 00:04:27,570
documentation both are familiar but for

00:04:26,300 --> 00:04:29,280
very different reasons

00:04:27,570 --> 00:04:33,570
on a first glance which are you more

00:04:29,280 --> 00:04:34,860
likely to trust one common graphic

00:04:33,570 --> 00:04:37,620
design tool that is noticeably absent

00:04:34,860 --> 00:04:39,840
from this list is sighs sighs can very

00:04:37,620 --> 00:04:41,160
clearly establish a visual hierarchy but

00:04:39,840 --> 00:04:42,960
and this is something we do in

00:04:41,160 --> 00:04:44,310
typography and book typography and on

00:04:42,960 --> 00:04:46,380
the web of course through a type scale

00:04:44,310 --> 00:04:47,610
but within our code editors most of us

00:04:46,380 --> 00:04:49,590
would find it pretty strange if

00:04:47,610 --> 00:04:52,260
different pieces of code were different

00:04:49,590 --> 00:04:54,180
type sizes monospaced typefaces lose a

00:04:52,260 --> 00:04:56,130
lot of their benefit for us if we start

00:04:54,180 --> 00:04:59,880
changing the size of things at different

00:04:56,130 --> 00:05:01,770
points and this is why I think Santa

00:04:59,880 --> 00:05:03,120
exciting is a particularly interesting

00:05:01,770 --> 00:05:05,820
to way to look look at some other

00:05:03,120 --> 00:05:07,380
advanced typographic features syntax

00:05:05,820 --> 00:05:08,730
highlighting cues developers on what

00:05:07,380 --> 00:05:10,950
they're about to read without ever

00:05:08,730 --> 00:05:13,770
involving type size and your familiarity

00:05:10,950 --> 00:05:15,690
with typographic principles within code

00:05:13,770 --> 00:05:17,580
means you already know how to

00:05:15,690 --> 00:05:19,650
communicate these sorts of things within

00:05:17,580 --> 00:05:21,270
other kinds of text as well this is

00:05:19,650 --> 00:05:22,860
useful because whatever kind of project

00:05:21,270 --> 00:05:24,480
you're working on it involves syntax

00:05:22,860 --> 00:05:26,880
highlighting beyond code code doesn't

00:05:24,480 --> 00:05:28,740
have an exclusive license on this color

00:05:26,880 --> 00:05:30,030
and other forms of visual emphasis have

00:05:28,740 --> 00:05:32,220
long been used within written and

00:05:30,030 --> 00:05:34,620
typographic communication showing

00:05:32,220 --> 00:05:37,530
relationships within writing is relevant

00:05:34,620 --> 00:05:38,940
to all kinds of text and a prevalent

00:05:37,530 --> 00:05:40,620
form of something you could call syntax

00:05:38,940 --> 00:05:43,080
highlighting on the web is linked text

00:05:40,620 --> 00:05:44,940
the distinct blue hyperlink signifies

00:05:43,080 --> 00:05:46,680
that this text is different from the

00:05:44,940 --> 00:05:48,750
rest around it these words are different

00:05:46,680 --> 00:05:50,520
it says you can interact with them and

00:05:48,750 --> 00:05:53,400
color has long been used to emphasize

00:05:50,520 --> 00:05:55,350
content and this is a reproduction of an

00:05:53,400 --> 00:05:57,630
earhart rat-boy page from the 15th

00:05:55,350 --> 00:05:59,940
century where color is used in line for

00:05:57,630 --> 00:06:01,980
emphasis what about the beginning and

00:05:59,940 --> 00:06:03,660
the end of a sentence period or other

00:06:01,980 --> 00:06:05,550
punctuation hasn't always been used to

00:06:03,660 --> 00:06:07,650
show this even our idea of the paragraph

00:06:05,550 --> 00:06:11,760
wasn't always around the idea of using

00:06:07,650 --> 00:06:14,100
space to separate ideas visually jumping

00:06:11,760 --> 00:06:15,930
way way ahead even the idea of a type

00:06:14,100 --> 00:06:18,150
family that can work in tandem is still

00:06:15,930 --> 00:06:20,160
relatively new this is the typeface

00:06:18,150 --> 00:06:22,170
univera designed by adrian frutiger a

00:06:20,160 --> 00:06:23,910
multi-axis typeface system with

00:06:22,170 --> 00:06:26,130
different styles for weights and widths

00:06:23,910 --> 00:06:28,230
and it's design is inspired by the

00:06:26,130 --> 00:06:31,140
periodic table which includes how it's

00:06:28,230 --> 00:06:33,090
presented to other designers type

00:06:31,140 --> 00:06:34,740
designer Peter belak said thanks to

00:06:33,090 --> 00:06:36,419
fruit ogre it is now common practice to

00:06:34,740 --> 00:06:38,190
produce a dozen or more Styles when

00:06:36,419 --> 00:06:40,560
working on a new type family and you can

00:06:38,190 --> 00:06:41,490
see that in his own typeface Greta this

00:06:40,560 --> 00:06:43,620
is just Greta San

00:06:41,490 --> 00:06:46,139
there's also a serif and a monospaced

00:06:43,620 --> 00:06:47,970
version so this is something this is a

00:06:46,139 --> 00:06:50,400
way of working for type designers now

00:06:47,970 --> 00:06:52,169
but that's even true for someone who's

00:06:50,400 --> 00:06:54,599
much much newer to type design like me

00:06:52,169 --> 00:06:56,580
I'm working with the application super

00:06:54,599 --> 00:06:58,830
polite or here and I've designed three

00:06:56,580 --> 00:07:01,349
master styles and I can interpolate and

00:06:58,830 --> 00:07:04,800
generate the other ideas the other

00:07:01,349 --> 00:07:06,569
potential styles in between this kind of

00:07:04,800 --> 00:07:07,800
power is actually moving even closer to

00:07:06,569 --> 00:07:09,569
designers working on the web with

00:07:07,800 --> 00:07:10,979
variable fonts which I'm not going to

00:07:09,569 --> 00:07:12,960
really cover in this talk but it means

00:07:10,979 --> 00:07:14,370
that the tools we have around us to

00:07:12,960 --> 00:07:18,060
distinguish content for readers will

00:07:14,370 --> 00:07:19,830
continue to be in transition in addition

00:07:18,060 --> 00:07:21,870
to a variety of styles many

00:07:19,830 --> 00:07:23,669
comprehensive contemporary typefaces

00:07:21,870 --> 00:07:25,229
also include advanced typographic

00:07:23,669 --> 00:07:27,690
features that allow us to suggest

00:07:25,229 --> 00:07:29,159
different kinds of content or make

00:07:27,690 --> 00:07:32,340
things more subtle for our readers in

00:07:29,159 --> 00:07:33,750
specific situations these advanced

00:07:32,340 --> 00:07:35,490
typographic features have been included

00:07:33,750 --> 00:07:37,050
and improved within fonts for many years

00:07:35,490 --> 00:07:38,940
and are now viable to use on the web

00:07:37,050 --> 00:07:40,949
they're called open type features and

00:07:38,940 --> 00:07:42,840
just as we differentiate content using

00:07:40,949 --> 00:07:44,940
bold italic anchors and other visual

00:07:42,840 --> 00:07:46,949
cues we can signify different kinds of

00:07:44,940 --> 00:07:50,370
content using these advanced typographic

00:07:46,949 --> 00:07:51,719
features to our readers using CSS so one

00:07:50,370 --> 00:07:53,940
you might already be familiar with is

00:07:51,719 --> 00:07:56,250
ligatures which in opentype is also

00:07:53,940 --> 00:07:57,570
abbreviated to lyga and you might think

00:07:56,250 --> 00:07:59,280
of ligatures as a beautiful way to

00:07:57,570 --> 00:08:01,080
connect two letters and that's true but

00:07:59,280 --> 00:08:03,270
often the real goal is to resolve a

00:08:01,080 --> 00:08:05,370
spacing issue within the typeface here

00:08:03,270 --> 00:08:06,780
the F and the dot of the IR are too

00:08:05,370 --> 00:08:09,330
close together especially when used as

00:08:06,780 --> 00:08:11,250
small sizes and a ligature can be a

00:08:09,330 --> 00:08:14,610
functional and beautiful way to resolve

00:08:11,250 --> 00:08:16,620
that spacing issue but as type designer

00:08:14,610 --> 00:08:18,300
James T Edmondson has said sometimes you

00:08:16,620 --> 00:08:20,659
need a ligature and sometimes you need

00:08:18,300 --> 00:08:23,639
an F that just can just chill the F out

00:08:20,659 --> 00:08:26,130
in his thesis typeface Kovach you can

00:08:23,639 --> 00:08:27,419
see here in the regular version that

00:08:26,130 --> 00:08:29,639
there are some collisions happening

00:08:27,419 --> 00:08:31,380
ended the italics and one way to resolve

00:08:29,639 --> 00:08:32,789
these would be a traditional more

00:08:31,380 --> 00:08:34,919
traditional idea of a ligature where

00:08:32,789 --> 00:08:37,880
these things connect but he actually oh

00:08:34,919 --> 00:08:40,169
here you go so that's highlighted and

00:08:37,880 --> 00:08:42,390
but he actually designed the ligatures

00:08:40,169 --> 00:08:44,039
and the regular version so the flag of

00:08:42,390 --> 00:08:46,350
the F and the dot of the iron moved

00:08:44,039 --> 00:08:48,660
closer or further apart and the F and

00:08:46,350 --> 00:08:50,100
the L don't collide anymore and then in

00:08:48,660 --> 00:08:52,500
the italic version which is more

00:08:50,100 --> 00:08:54,029
influenced by brush lettering he did a

00:08:52,500 --> 00:08:54,520
more traditional literature where those

00:08:54,029 --> 00:08:56,740
things

00:08:54,520 --> 00:08:58,510
act so these spacing issues can be

00:08:56,740 --> 00:09:00,520
solved through the open type ligatures

00:08:58,510 --> 00:09:02,920
feature in a variety of different ways

00:09:00,520 --> 00:09:04,480
in a typeface and you can enable this in

00:09:02,920 --> 00:09:07,060
the fonts you're already using in your

00:09:04,480 --> 00:09:08,410
CSS using the font variant ligatures

00:09:07,060 --> 00:09:10,600
property and setting it to common

00:09:08,410 --> 00:09:14,650
ligatures but this is really the best

00:09:10,600 --> 00:09:16,750
case scenario CSS font variant ligatures

00:09:14,650 --> 00:09:19,060
is a lower level property you can think

00:09:16,750 --> 00:09:20,740
of it kind of like margin bottom where

00:09:19,060 --> 00:09:23,050
we only set one direction of the margin

00:09:20,740 --> 00:09:24,700
at once and then the higher level

00:09:23,050 --> 00:09:27,160
version of that is margin where we can

00:09:24,700 --> 00:09:29,620
set all four directions at once the

00:09:27,160 --> 00:09:31,810
higher level property for font variant

00:09:29,620 --> 00:09:33,670
ligatures is font feature settings and

00:09:31,810 --> 00:09:35,290
this lets us set multiple open type

00:09:33,670 --> 00:09:38,800
features at once so that's where that

00:09:35,290 --> 00:09:40,330
lyga abbreviation comes into play so

00:09:38,800 --> 00:09:44,920
here we're saying font feature settings

00:09:40,330 --> 00:09:45,970
will use ligatures but that actually the

00:09:44,920 --> 00:09:47,620
problem with this even though it has

00:09:45,970 --> 00:09:50,800
better browser support as it breaks the

00:09:47,620 --> 00:09:52,900
Cascade if I later want to set a

00:09:50,800 --> 00:09:54,400
headline and define different open type

00:09:52,900 --> 00:09:56,080
features I'm going to have to read

00:09:54,400 --> 00:09:58,630
Eclair everything I've set on the body

00:09:56,080 --> 00:10:00,130
which is really inconvenient but as

00:09:58,630 --> 00:10:03,010
Rachel said like five minutes ago

00:10:00,130 --> 00:10:06,460
anything new in CSS you can use feature

00:10:03,010 --> 00:10:08,530
queries to detect support so we already

00:10:06,460 --> 00:10:10,990
had a really nice setup for future

00:10:08,530 --> 00:10:13,930
queries in the last talk but I'm

00:10:10,990 --> 00:10:16,150
actually using supports not here so this

00:10:13,930 --> 00:10:18,760
is sort of an inversion of those feature

00:10:16,150 --> 00:10:20,440
queries if font variant ligatures aren't

00:10:18,760 --> 00:10:22,630
supported then we'll use font feature

00:10:20,440 --> 00:10:26,020
settings otherwise we can use font

00:10:22,630 --> 00:10:27,760
variant ligatures now this is kind of

00:10:26,020 --> 00:10:29,890
confusing and we're only on the first

00:10:27,760 --> 00:10:31,600
open type features so I can understand

00:10:29,890 --> 00:10:35,170
if you're saying I'm not going to do all

00:10:31,600 --> 00:10:36,970
that just to get ligatures fair enough I

00:10:35,170 --> 00:10:39,490
put together a little library for you

00:10:36,970 --> 00:10:41,830
called utility open type which takes all

00:10:39,490 --> 00:10:43,510
these advanced typographic features I'm

00:10:41,830 --> 00:10:46,600
going to be talking about and assigns

00:10:43,510 --> 00:10:49,030
them to those single to a single class

00:10:46,600 --> 00:10:51,130
name those four-letter opentype feature

00:10:49,030 --> 00:10:52,990
abbreviations so you can install it

00:10:51,130 --> 00:10:55,690
through NPM link to the CSS file

00:10:52,990 --> 00:10:57,610
whatever build process you're using and

00:10:55,690 --> 00:10:59,020
then you'll have easy access to these

00:10:57,610 --> 00:11:02,290
features without having to write those

00:10:59,020 --> 00:11:04,420
feature queries so to look at another

00:11:02,290 --> 00:11:05,890
application of that ligatures should

00:11:04,420 --> 00:11:07,960
really be on by default in the browser

00:11:05,890 --> 00:11:08,440
but one that won't be is discretionary

00:11:07,960 --> 00:11:10,300
ligature

00:11:08,440 --> 00:11:13,660
they're ligatures that are applied at

00:11:10,300 --> 00:11:16,480
your discretion here in this typeface

00:11:13,660 --> 00:11:17,770
clinics lab there's an ST and a th

00:11:16,480 --> 00:11:19,960
ligature which you probably wouldn't

00:11:17,770 --> 00:11:21,580
want on through the entirety of the body

00:11:19,960 --> 00:11:24,250
copy in your text but you might want it

00:11:21,580 --> 00:11:26,410
in a beautiful headline setting so you

00:11:24,250 --> 00:11:27,880
could use font variant ligatures and

00:11:26,410 --> 00:11:30,460
instead of common ligatures you could

00:11:27,880 --> 00:11:31,780
say discretionary ligatures or for

00:11:30,460 --> 00:11:33,820
better browser support you could write

00:11:31,780 --> 00:11:37,780
that kind of complicated supports query

00:11:33,820 --> 00:11:39,610
or at least hard to remember or you can

00:11:37,780 --> 00:11:42,490
use my utility opentype library if you

00:11:39,610 --> 00:11:46,120
want and a pro I the d-league class name

00:11:42,490 --> 00:11:49,000
and then you'll have discretionary

00:11:46,120 --> 00:11:51,820
ligatures in your headlines or wherever

00:11:49,000 --> 00:11:53,620
you choose to apply them another really

00:11:51,820 --> 00:11:56,680
interesting feature is contextual

00:11:53,620 --> 00:11:58,210
alternates this is a lavanderia typeface

00:11:56,680 --> 00:12:01,210
available through the lost type co-op

00:11:58,210 --> 00:12:03,790
it's a a lettering typeface or a

00:12:01,210 --> 00:12:05,880
typeface inspired by lettering so there

00:12:03,790 --> 00:12:08,530
are features included that make it more

00:12:05,880 --> 00:12:10,750
make it feel more like true lettering

00:12:08,530 --> 00:12:11,950
done by hand and not a font to take

00:12:10,750 --> 00:12:13,840
advantage of these features they'll

00:12:11,950 --> 00:12:15,520
become if you take advantage of these

00:12:13,840 --> 00:12:18,730
features that the typeface will be more

00:12:15,520 --> 00:12:21,550
script like in this case in a at the end

00:12:18,730 --> 00:12:23,110
of a word or phrase can get a flourish

00:12:21,550 --> 00:12:25,330
and there's many other features like

00:12:23,110 --> 00:12:27,340
that another one of my favorites is in

00:12:25,330 --> 00:12:29,890
this typeface enemy by Shivan alla para

00:12:27,340 --> 00:12:31,960
Mel it's supposed to it's a stencil

00:12:29,890 --> 00:12:35,230
typeface but when you zoom in and look

00:12:31,960 --> 00:12:36,790
closer you can see that the O's and the

00:12:35,230 --> 00:12:39,160
case and the ease aren't actually the

00:12:36,790 --> 00:12:40,690
same there's been different versions of

00:12:39,160 --> 00:12:42,820
the glyph designs so when they sit

00:12:40,690 --> 00:12:44,590
alongside each other it feels more like

00:12:42,820 --> 00:12:49,090
an organic stencil and less like a

00:12:44,590 --> 00:12:51,070
repeating font so you can use this in

00:12:49,090 --> 00:12:54,339
your CSS with font variant ligatures

00:12:51,070 --> 00:12:59,020
contextual or the C alt class in my

00:12:54,339 --> 00:13:01,240
library now we're halfway through the

00:12:59,020 --> 00:13:03,790
second talk today and no one's talked

00:13:01,240 --> 00:13:05,260
about emoji yet so I'm happy to be the

00:13:03,790 --> 00:13:09,010
first person to mention emojis at this

00:13:05,260 --> 00:13:12,040
conference this is a emoji icon set

00:13:09,010 --> 00:13:15,640
thing I designed for sad magazine and

00:13:12,040 --> 00:13:18,850
magazine in Vancouver this is for their

00:13:15,640 --> 00:13:21,610
secrets themed issue so this is what the

00:13:18,850 --> 00:13:22,209
Apple emojis like look like there's no

00:13:21,610 --> 00:13:24,999
contextual

00:13:22,209 --> 00:13:27,910
alternates feature in this icon set or

00:13:24,999 --> 00:13:29,860
this emoji typeface I designed for this

00:13:27,910 --> 00:13:31,660
magazine it's supposed to look kind of

00:13:29,860 --> 00:13:33,429
sketchy and hand-drawn so there's

00:13:31,660 --> 00:13:35,170
actually variations of each one of the

00:13:33,429 --> 00:13:37,149
glyphs so when you type them in a row

00:13:35,170 --> 00:13:38,889
they swap out and make it feel more like

00:13:37,149 --> 00:13:41,499
it was drawn by hand and it's less like

00:13:38,889 --> 00:13:43,720
a font and the reason I made it a font

00:13:41,499 --> 00:13:45,910
instead of just a series of images was

00:13:43,720 --> 00:13:48,160
because it was for this secrets themed

00:13:45,910 --> 00:13:51,879
issue and it let the designers of the

00:13:48,160 --> 00:13:55,689
magazine Pam Ernest the art director i

00:13:51,879 --> 00:13:57,579
worked with used use it and encode

00:13:55,689 --> 00:14:00,699
secret messages with it without having

00:13:57,579 --> 00:14:02,230
to do that manually so it was used on

00:14:00,699 --> 00:14:04,420
things like the social media campaign

00:14:02,230 --> 00:14:05,410
and I wasn't going to put this example

00:14:04,420 --> 00:14:07,839
in but then I was like all right

00:14:05,410 --> 00:14:11,259
developers like stickers so there's it's

00:14:07,839 --> 00:14:14,429
on stickers postcards and then people

00:14:11,259 --> 00:14:18,459
can go to the website and decode those

00:14:14,429 --> 00:14:19,839
secret messages before you ask yes I am

00:14:18,459 --> 00:14:24,610
currently available for cryptography

00:14:19,839 --> 00:14:26,649
work a more practical example of this

00:14:24,610 --> 00:14:28,809
idea was done earlier this year by kimya

00:14:26,649 --> 00:14:31,089
Gandhi she wrote a really great article

00:14:28,809 --> 00:14:34,269
for alphabet org a blog I highly

00:14:31,089 --> 00:14:35,920
recommend you check out this is a Devon

00:14:34,269 --> 00:14:38,350
Gary typeface she did with many

00:14:35,920 --> 00:14:39,639
contextual alternates the challenges of

00:14:38,350 --> 00:14:41,170
doing this in a different in this

00:14:39,639 --> 00:14:42,490
language aren't one that I'm personally

00:14:41,170 --> 00:14:45,160
familiar with but I'm excited about

00:14:42,490 --> 00:14:47,499
other designers type designers linguists

00:14:45,160 --> 00:14:49,089
what linguists web developers talking

00:14:47,499 --> 00:14:51,579
about what it means to bring those

00:14:49,089 --> 00:14:53,259
things to the web the language specific

00:14:51,579 --> 00:14:54,970
considerations that are available in

00:14:53,259 --> 00:14:56,679
tight face is very but there are

00:14:54,970 --> 00:15:00,639
features that help with that sort of

00:14:56,679 --> 00:15:02,980
thing for example in Dutch the IJ can be

00:15:00,639 --> 00:15:05,049
treated as one glyph instead of two so

00:15:02,980 --> 00:15:08,249
that this typeface by the type foundry

00:15:05,049 --> 00:15:10,360
underwear has a variation for that

00:15:08,249 --> 00:15:12,670
sometimes you also get to work with

00:15:10,360 --> 00:15:15,549
people who are experts in their field so

00:15:12,670 --> 00:15:18,459
I got to work with Americo takagi for a

00:15:15,549 --> 00:15:20,709
project for Google Fonts early access

00:15:18,459 --> 00:15:23,019
Japanese typefaces and the specimens we

00:15:20,709 --> 00:15:26,290
design she really coached me through

00:15:23,019 --> 00:15:29,350
what it meant to deal with some Japanese

00:15:26,290 --> 00:15:31,120
typography specific issues and you're

00:15:29,350 --> 00:15:32,589
particularly lucky here in Singapore

00:15:31,120 --> 00:15:34,290
because there's a really great series

00:15:32,589 --> 00:15:36,209
called letter love or

00:15:34,290 --> 00:15:40,440
by relay room there was an event last

00:15:36,209 --> 00:15:42,509
night talk about designing bilingual

00:15:40,440 --> 00:15:44,070
multilingual typefaces and if you're

00:15:42,509 --> 00:15:45,420
interested in typography I highly

00:15:44,070 --> 00:15:49,410
recommend you go check out this event

00:15:45,420 --> 00:15:50,519
series it runs every quarter and what

00:15:49,410 --> 00:15:53,519
another feature I wanted to talk about

00:15:50,519 --> 00:15:56,430
is stylistic alternate so this one is

00:15:53,519 --> 00:15:58,380
abbreviated as salt this is the same

00:15:56,430 --> 00:16:00,870
typeface lavanderia that we were looking

00:15:58,380 --> 00:16:02,850
at in one of the other examples and so

00:16:00,870 --> 00:16:04,649
is this by using some different

00:16:02,850 --> 00:16:05,850
stylistic alternates you can get a

00:16:04,649 --> 00:16:07,920
pretty different feeling from the

00:16:05,850 --> 00:16:10,170
typeface and this might be an

00:16:07,920 --> 00:16:12,300
interesting way if you're already using

00:16:10,170 --> 00:16:13,649
a set of typefaces for a company you're

00:16:12,300 --> 00:16:15,149
working for or something like that where

00:16:13,649 --> 00:16:17,250
it might actually be more versatile than

00:16:15,149 --> 00:16:19,139
you realized sometimes there's just a

00:16:17,250 --> 00:16:20,880
few key glyphs in a typeface that really

00:16:19,139 --> 00:16:22,649
define its character and by having those

00:16:20,880 --> 00:16:26,550
swapped out you can get a different

00:16:22,649 --> 00:16:28,470
feeling and I worked on the web based

00:16:26,550 --> 00:16:30,029
type tester for the lost type co-op a

00:16:28,470 --> 00:16:31,980
couple years ago where we tried to

00:16:30,029 --> 00:16:34,380
highlight these features in line for

00:16:31,980 --> 00:16:35,699
people so as you're trying things out on

00:16:34,380 --> 00:16:37,110
the website as they're trying out the

00:16:35,699 --> 00:16:40,110
typefaces those features are all

00:16:37,110 --> 00:16:42,269
highlighted for you and this is where

00:16:40,110 --> 00:16:44,220
the font feature settings property comes

00:16:42,269 --> 00:16:46,260
into play a bit more here we're setting

00:16:44,220 --> 00:16:48,149
contextual alternates and stylistic

00:16:46,260 --> 00:16:50,069
alternates so this is an idea of

00:16:48,149 --> 00:16:53,579
chaining together multiple open type

00:16:50,069 --> 00:16:55,550
features case sensitive forms are

00:16:53,579 --> 00:16:58,199
another category abbreviated as case

00:16:55,550 --> 00:17:00,420
it's particularly I think it's becoming

00:16:58,199 --> 00:17:03,540
more and more applicable because we keep

00:17:00,420 --> 00:17:05,790
using glyphs in ways that maybe they

00:17:03,540 --> 00:17:08,449
weren't used that way before so the at

00:17:05,790 --> 00:17:12,240
symbol is one of those if you're setting

00:17:08,449 --> 00:17:14,640
handles and usernames with an at and you

00:17:12,240 --> 00:17:16,049
set it in all caps now that at symbol

00:17:14,640 --> 00:17:18,600
kind of looks too small or like it's

00:17:16,049 --> 00:17:20,549
sitting too low compared to the all caps

00:17:18,600 --> 00:17:22,530
letters so there are open type features

00:17:20,549 --> 00:17:24,209
and some typefaces that will correct

00:17:22,530 --> 00:17:26,250
that issue so you have a version that's

00:17:24,209 --> 00:17:28,740
specifically for sitting alongside the

00:17:26,250 --> 00:17:32,460
the all caps settings and you can use

00:17:28,740 --> 00:17:35,700
that with case an extension of that is

00:17:32,460 --> 00:17:37,169
small capitals small capitals are

00:17:35,700 --> 00:17:39,210
specifically designed to sit along the

00:17:37,169 --> 00:17:40,740
lower case letters and these can sort of

00:17:39,210 --> 00:17:43,140
highlight things for our readers like

00:17:40,740 --> 00:17:45,750
acronyms within a paragraph of text if

00:17:43,140 --> 00:17:46,530
you have an all-caps word in the middle

00:17:45,750 --> 00:17:49,080
of

00:17:46,530 --> 00:17:50,700
in the middle of a paragraph sometimes

00:17:49,080 --> 00:17:53,280
it might draw a reader's attention away

00:17:50,700 --> 00:17:54,930
when we don't want to do that so small

00:17:53,280 --> 00:17:56,730
caps are designed specifically to sit

00:17:54,930 --> 00:17:58,380
alongside the lowercase letters they can

00:17:56,730 --> 00:18:00,660
still show someone that something is an

00:17:58,380 --> 00:18:03,570
acronym but they stick out less in a

00:18:00,660 --> 00:18:05,460
paragraph that said no small caps is

00:18:03,570 --> 00:18:08,010
better than pho or fake small caps

00:18:05,460 --> 00:18:09,450
sometimes people will just scale down

00:18:08,010 --> 00:18:11,340
the uppercase letters to the height of

00:18:09,450 --> 00:18:13,650
the lowercase letters with the intent of

00:18:11,340 --> 00:18:16,590
making them look like small caps which

00:18:13,650 --> 00:18:18,750
is sort of in an attempt to mimic book

00:18:16,590 --> 00:18:21,780
typography but what this ends up doing

00:18:18,750 --> 00:18:23,280
is actually making the all cat the small

00:18:21,780 --> 00:18:25,920
caps letters more distracting because

00:18:23,280 --> 00:18:28,380
they feel much lighter or they feel

00:18:25,920 --> 00:18:29,940
skewed in some way so this is a great

00:18:28,380 --> 00:18:31,470
example that shows that by Matthew

00:18:29,940 --> 00:18:33,150
butterick from his book practical

00:18:31,470 --> 00:18:35,430
typography which I highly recommend you

00:18:33,150 --> 00:18:37,590
can see the fake small caps feel much

00:18:35,430 --> 00:18:39,090
lighter compared to the capital letters

00:18:37,590 --> 00:18:42,020
where the real ones feel like they're

00:18:39,090 --> 00:18:44,760
properly designed to sit alongside them

00:18:42,020 --> 00:18:46,650
so don't use the old font variant small

00:18:44,760 --> 00:18:49,050
caps feature that creates fake small

00:18:46,650 --> 00:18:52,350
caps the new property you're looking for

00:18:49,050 --> 00:18:54,180
is font variant caps small caps this is

00:18:52,350 --> 00:18:57,360
all documented on that utility opens

00:18:54,180 --> 00:18:59,670
type site as well so I use that on the

00:18:57,360 --> 00:19:01,050
surge pricing page for the acronyms as

00:18:59,670 --> 00:19:03,840
an example and you might say that's

00:19:01,050 --> 00:19:06,090
pretty annoying to go through and wrap

00:19:03,840 --> 00:19:07,380
all those acronyms and span tags but

00:19:06,090 --> 00:19:11,010
there's actually a lot of tools that

00:19:07,380 --> 00:19:13,170
will do that for you like typographers

00:19:11,010 --> 00:19:15,300
in Ruby and for WordPress and a lot of

00:19:13,170 --> 00:19:17,910
other things so you can continue writing

00:19:15,300 --> 00:19:19,830
your content or letting your clients

00:19:17,910 --> 00:19:21,330
write your content and have some of

00:19:19,830 --> 00:19:25,470
these spans applied to your markup for

00:19:21,330 --> 00:19:27,000
you another category there's other

00:19:25,470 --> 00:19:28,290
categories specifically for numbers

00:19:27,000 --> 00:19:30,990
since we've mostly been talking about

00:19:28,290 --> 00:19:34,080
Latin letters so far old style and

00:19:30,990 --> 00:19:36,720
lining numbers lining numbers typically

00:19:34,080 --> 00:19:38,340
are the default in sans-serif typefaces

00:19:36,720 --> 00:19:42,180
and they are designed to sit alongside

00:19:38,340 --> 00:19:43,530
the uppercase letters old style numbers

00:19:42,180 --> 00:19:45,720
are designed to sit alongside the

00:19:43,530 --> 00:19:48,510
lowercase letters and there they tend to

00:19:45,720 --> 00:19:51,630
be the default in serif typefaces a good

00:19:48,510 --> 00:19:53,940
way to remember that is the top one here

00:19:51,630 --> 00:19:55,950
is verdana and the bottom is Georgia so

00:19:53,940 --> 00:19:57,930
in verdana the lining numbers or the

00:19:55,950 --> 00:19:59,260
default and in Georgia the old style of

00:19:57,930 --> 00:20:02,740
a default

00:19:59,260 --> 00:20:04,690
both designed by Matthew Carter but in

00:20:02,740 --> 00:20:06,790
that case you know that those features

00:20:04,690 --> 00:20:09,430
are potentially available for you in the

00:20:06,790 --> 00:20:12,640
typefaces even when the default is

00:20:09,430 --> 00:20:15,820
different proportional and tabular

00:20:12,640 --> 00:20:17,860
numbers help us align numbers vertically

00:20:15,820 --> 00:20:19,680
rather than horizontally so if we're

00:20:17,860 --> 00:20:21,850
setting a whole table of information

00:20:19,680 --> 00:20:23,410
it's really annoying when things don't

00:20:21,850 --> 00:20:26,580
line up properly this makes it difficult

00:20:23,410 --> 00:20:29,110
for our readers to scan for information

00:20:26,580 --> 00:20:31,210
tabular numbers are essentially

00:20:29,110 --> 00:20:35,260
monospaced numbers that are designed to

00:20:31,210 --> 00:20:36,880
fit in with your typeface so I've see

00:20:35,260 --> 00:20:38,770
some people sometimes switch to just a

00:20:36,880 --> 00:20:40,720
monospaced font for their tables but

00:20:38,770 --> 00:20:42,400
this way things are preserved

00:20:40,720 --> 00:20:43,570
horizontally and vertically and if

00:20:42,400 --> 00:20:45,130
you're already loading in a web phone

00:20:43,570 --> 00:20:49,450
with tabular numbers you might as well

00:20:45,130 --> 00:20:52,480
use them it also applies in animation

00:20:49,450 --> 00:20:54,160
and user interface design when the

00:20:52,480 --> 00:20:55,420
frames are stacked rather than having

00:20:54,160 --> 00:20:57,820
the numbers jump around they can all

00:20:55,420 --> 00:20:59,440
stay in place this was really bugging me

00:20:57,820 --> 00:21:01,000
on the plane if you're on the plane next

00:20:59,440 --> 00:21:02,620
to me I guess you can have the window

00:21:01,000 --> 00:21:04,510
seat apparently I'm going to be thinking

00:21:02,620 --> 00:21:07,810
about proportional versus tabular

00:21:04,510 --> 00:21:11,410
numbers here's a proper execution of it

00:21:07,810 --> 00:21:14,260
at a different airport where things are

00:21:11,410 --> 00:21:18,760
lined up so you can use that with font

00:21:14,260 --> 00:21:20,290
variant numeric tabular numbs and it's

00:21:18,760 --> 00:21:22,150
important to remember not all typefaces

00:21:20,290 --> 00:21:23,710
have all these features you want to

00:21:22,150 --> 00:21:25,870
choose a typeface that has the feature

00:21:23,710 --> 00:21:28,810
load the web font and then enable the

00:21:25,870 --> 00:21:31,030
features typefaces are different this is

00:21:28,810 --> 00:21:33,040
morriston by design by Riley cran I've

00:21:31,030 --> 00:21:37,260
set the schedule here in this typeface

00:21:33,040 --> 00:21:39,940
and I can switch to the tabular numbers

00:21:37,260 --> 00:21:42,310
but if I switch to this typeface sq fina

00:21:39,940 --> 00:21:44,080
also designed by Riley cran that option

00:21:42,310 --> 00:21:45,880
isn't available that's really because

00:21:44,080 --> 00:21:48,340
this is a ridiculous way to set this

00:21:45,880 --> 00:21:49,600
table this is a typeface intended for

00:21:48,340 --> 00:21:51,070
large display setting so it looks

00:21:49,600 --> 00:21:52,720
beautiful like this but I wouldn't want

00:21:51,070 --> 00:21:55,840
to set a whole spreadsheet in that

00:21:52,720 --> 00:21:57,340
typeface so open type features can

00:21:55,840 --> 00:21:59,080
actually be a really good way to help

00:21:57,340 --> 00:22:01,330
you figure out what your typeface is

00:21:59,080 --> 00:22:02,710
good for when you're evaluating k faces

00:22:01,330 --> 00:22:04,210
I know that can be a challenging task

00:22:02,710 --> 00:22:06,520
sometimes but these features show you

00:22:04,210 --> 00:22:08,410
that oh this is good for setting large

00:22:06,520 --> 00:22:09,970
tables of information or this has a

00:22:08,410 --> 00:22:13,529
bunch of swashes which means it's

00:22:09,970 --> 00:22:16,269
probably more for display settings

00:22:13,529 --> 00:22:18,429
if you're using a web font service you

00:22:16,269 --> 00:22:20,499
just have to make sure that you are

00:22:18,429 --> 00:22:22,240
including these features when you're

00:22:20,499 --> 00:22:24,249
loading your web fonts or if your self

00:22:22,240 --> 00:22:27,249
hosting web fonts just don't sub set

00:22:24,249 --> 00:22:29,320
them out there tends to be documentation

00:22:27,249 --> 00:22:31,840
for all of this based on whatever web

00:22:29,320 --> 00:22:33,759
font service you're using and it it's

00:22:31,840 --> 00:22:35,529
usually a simple if ticking one box but

00:22:33,759 --> 00:22:37,210
it differs slightly between each one but

00:22:35,529 --> 00:22:40,149
i'll link to those pages on on my

00:22:37,210 --> 00:22:42,159
website and then lastly you want to

00:22:40,149 --> 00:22:44,169
enable the tabular numbers in your CSS

00:22:42,159 --> 00:22:46,210
so again you can use this library if you

00:22:44,169 --> 00:22:49,090
want which means then you would just

00:22:46,210 --> 00:22:51,669
have to apply the teen um class to your

00:22:49,090 --> 00:22:55,210
table and then the small caps class to

00:22:51,669 --> 00:22:57,340
the abbreviation here this is all

00:22:55,210 --> 00:22:59,409
documented with lots lots of examples on

00:22:57,340 --> 00:23:01,809
the site but I think it's more important

00:22:59,409 --> 00:23:03,340
it was more important to go through some

00:23:01,809 --> 00:23:05,440
examples of how this worked within

00:23:03,340 --> 00:23:07,779
typefaces rather than get too deep into

00:23:05,440 --> 00:23:09,249
the specifics of the CSS since it's

00:23:07,779 --> 00:23:12,119
really just the names of the features

00:23:09,249 --> 00:23:15,659
what's more interesting is how these

00:23:12,119 --> 00:23:17,919
what features these fonts actually have

00:23:15,659 --> 00:23:19,389
developers have frequently demystified

00:23:17,919 --> 00:23:21,369
their craft for me including some of the

00:23:19,389 --> 00:23:23,619
incredible people you're going to see

00:23:21,369 --> 00:23:25,690
speaking here later throughout the day

00:23:23,619 --> 00:23:27,700
including some people who helped make

00:23:25,690 --> 00:23:29,350
font face of reality and someone who

00:23:27,700 --> 00:23:32,379
wrote an amazing syntax highlighting

00:23:29,350 --> 00:23:33,970
library so I appreciate you having me

00:23:32,379 --> 00:23:36,970
here to geek out about some specific

00:23:33,970 --> 00:23:38,440
type of graphic details with you I hope

00:23:36,970 --> 00:23:40,600
you can see that typography can be just

00:23:38,440 --> 00:23:42,999
demystified to yes you need to develop

00:23:40,600 --> 00:23:44,710
an your eye and that takes time but you

00:23:42,999 --> 00:23:45,970
can also research and get excited about

00:23:44,710 --> 00:23:48,039
the advanced typographic features

00:23:45,970 --> 00:23:50,169
already included within the fonts to

00:23:48,039 --> 00:23:51,730
help you you also know more about

00:23:50,169 --> 00:23:53,679
typography than you give yourself credit

00:23:51,730 --> 00:23:56,350
for directly through your familiarity

00:23:53,679 --> 00:23:58,240
with principles in syntax highlighting

00:23:56,350 --> 00:24:00,369
these typographic conventions in code

00:23:58,240 --> 00:24:02,200
and because of this when you design for

00:24:00,369 --> 00:24:05,519
readers i'm sure you'll syntax highlight

00:24:02,200 --> 00:24:05,519
everything thanks

00:24:09,930 --> 00:24:17,830
I'm sure hello thank you so much Kenneth

00:24:16,360 --> 00:24:21,430
I think that's a very insightful

00:24:17,830 --> 00:24:23,140
information on typefaces and I have like

00:24:21,430 --> 00:24:27,520
a little bit of slight envy looking at

00:24:23,140 --> 00:24:29,020
your slight designs so is there anyone

00:24:27,520 --> 00:24:31,450
who's interested in we're going to take

00:24:29,020 --> 00:24:34,570
a few questions so any of you has

00:24:31,450 --> 00:24:39,090
questions for Kenneth please raise up

00:24:34,570 --> 00:24:47,490
your hand cell will give you the Mike

00:24:39,090 --> 00:24:47,490
any questions come on questions anyone

00:24:47,730 --> 00:24:53,770
ok i'm going to ask your questions I'm

00:24:51,610 --> 00:24:57,040
curious about as someone who's

00:24:53,770 --> 00:24:59,560
interested in typography but I only know

00:24:57,040 --> 00:25:01,870
one source which is google web fun I was

00:24:59,560 --> 00:25:03,790
wondering where do you get like your

00:25:01,870 --> 00:25:06,100
resources when it comes to web points

00:25:03,790 --> 00:25:09,880
other than google web fun and yeah you

00:25:06,100 --> 00:25:14,080
get your inspiration um I I work with

00:25:09,880 --> 00:25:15,520
the last type co-op a lot and we have a

00:25:14,080 --> 00:25:18,100
lot of typefaces that you should check

00:25:15,520 --> 00:25:20,110
out so that's lost type calm and tebow

00:25:18,100 --> 00:25:23,970
tech i mentioned peterby lacks typeface

00:25:20,110 --> 00:25:27,970
Greta sends they have an amazing catalog

00:25:23,970 --> 00:25:29,740
webtype is one but I think the best

00:25:27,970 --> 00:25:31,330
advice i really could offer you is to

00:25:29,740 --> 00:25:34,720
check out that letter love series that's

00:25:31,330 --> 00:25:37,360
based here in singapore it's run by an

00:25:34,720 --> 00:25:39,220
amazing type designer who studied in the

00:25:37,360 --> 00:25:41,320
netherlands and came back to singapore

00:25:39,220 --> 00:25:42,670
and puts on these great events so if

00:25:41,320 --> 00:25:44,020
you're if you're interested in type you

00:25:42,670 --> 00:25:46,060
should check that out and you'll find

00:25:44,020 --> 00:25:49,780
people recommending you a lot of new

00:25:46,060 --> 00:25:53,670
things there as well ok thank you any

00:25:49,780 --> 00:25:57,190
questions from the audience um hi

00:25:53,670 --> 00:26:00,280
actually have a question about the OTF

00:25:57,190 --> 00:26:02,470
font format because a lot of the things

00:26:00,280 --> 00:26:06,670
that you talked about like ligatures and

00:26:02,470 --> 00:26:09,370
swatches are part of the OTF font so how

00:26:06,670 --> 00:26:12,670
is browser support for this because

00:26:09,370 --> 00:26:15,520
normally when I declare font faces you

00:26:12,670 --> 00:26:20,740
have like all the fall backs you have

00:26:15,520 --> 00:26:23,410
your right off to Worf's so I is it how

00:26:20,740 --> 00:26:25,540
safe is it is it too just grab declare

00:26:23,410 --> 00:26:27,160
an OTF browser support is great actually

00:26:25,540 --> 00:26:28,510
um that you brought up an important

00:26:27,160 --> 00:26:30,340
point these are called open type

00:26:28,510 --> 00:26:34,180
features but they're not exclusive to

00:26:30,340 --> 00:26:37,560
the opentype font format wafaa and waft

00:26:34,180 --> 00:26:40,810
to both include open type features and

00:26:37,560 --> 00:26:43,780
since Safari 10 came out all the major

00:26:40,810 --> 00:26:45,160
browsers support all the font feature or

00:26:43,780 --> 00:26:47,650
the majority of the font feature

00:26:45,160 --> 00:26:50,260
settings certainly for Latin based

00:26:47,650 --> 00:26:51,940
languages it gets a bit different for

00:26:50,260 --> 00:26:54,940
other languages but you can also check

00:26:51,940 --> 00:26:57,400
out state of webtype com which is like

00:26:54,940 --> 00:27:00,550
the can I use for these features

00:26:57,400 --> 00:27:02,200
basically but yeah you don't need to use

00:27:00,550 --> 00:27:08,320
opentype font formats this will all work

00:27:02,200 --> 00:27:14,020
with woof woof to as well thanks great

00:27:08,320 --> 00:27:17,050
questions the audience green um well if

00:27:14,020 --> 00:27:19,870
you want to talk type Oh find me oh it's

00:27:17,050 --> 00:27:23,140
so yeah one last one yeah sure hi um

00:27:19,870 --> 00:27:25,300
first thank you so much I'm in second uh

00:27:23,140 --> 00:27:27,640
this is really cool just because I

00:27:25,300 --> 00:27:30,430
didn't know about open type features so

00:27:27,640 --> 00:27:34,150
the question I had was I'm one of the

00:27:30,430 --> 00:27:37,060
first examples you had and you said that

00:27:34,150 --> 00:27:39,880
you can set font variant ligatures but

00:27:37,060 --> 00:27:41,980
then the higher class way was the

00:27:39,880 --> 00:27:45,100
feature settings and then you went into

00:27:41,980 --> 00:27:46,810
about support like support I'm and I

00:27:45,100 --> 00:27:49,860
think I missed the part where you were

00:27:46,810 --> 00:27:52,660
explaining why this is important or else

00:27:49,860 --> 00:27:56,170
what would blow up if I don't do it okay

00:27:52,660 --> 00:27:58,780
um it's not really the browser support

00:27:56,170 --> 00:28:00,490
for font feature settings is very good

00:27:58,780 --> 00:28:02,440
and if you just want to use font feature

00:28:00,490 --> 00:28:05,890
settings that's totally fine and that

00:28:02,440 --> 00:28:07,960
will probably work for most cases if you

00:28:05,890 --> 00:28:09,760
are using a lot of open type features in

00:28:07,960 --> 00:28:13,540
different ways those things won't

00:28:09,760 --> 00:28:15,190
cascade down the document so if you set

00:28:13,540 --> 00:28:17,350
certain open type features on the body

00:28:15,190 --> 00:28:19,750
you're going to have to read Eclair all

00:28:17,350 --> 00:28:22,300
of those on the heading so in the case

00:28:19,750 --> 00:28:23,860
of me writing a library to help people

00:28:22,300 --> 00:28:26,860
with that I needed to avoid that issue

00:28:23,860 --> 00:28:28,360
but in most situations you can just use

00:28:26,860 --> 00:28:31,750
font feature settings and no

00:28:28,360 --> 00:28:34,170
we'll have good browser support hey

00:28:31,750 --> 00:28:34,170

YouTube URL: https://www.youtube.com/watch?v=ulilqtlRzqc


