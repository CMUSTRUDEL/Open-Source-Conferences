Title: Shiya Luo: 3D On The Web - CSSConf.Asia 2016
Publication date: 2016-12-14
Playlist: CSSConf.Asia 2016
Description: 
	What are the latest trends in developing immersive visual 3D experiences in the browser and what can a JavaScript developer start working on after hearing this talk.

Shiya is a developer advocate at Autodesk. She has been advocating for 3D on the Web and things you don't always get to work on a day to day basis as a JavaScript developer, but still written in JavaScript. She has been an active member in the JavaScript community in the San Francisco Bay Area and China.


CSSConf.Asia - Capitol Theatre, Singapore - 24 November 2016.

Source: https://2016.cssconf.asia/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:11,309 --> 00:00:19,320
okay hi everyone um doesn't help that

00:00:14,379 --> 00:00:21,939
the the talk in front of me was called

00:00:19,320 --> 00:00:23,560
how did you how you can teach JavaScript

00:00:21,939 --> 00:00:26,380
because today I'm actually gonna talk

00:00:23,560 --> 00:00:28,929
about JavaScript I thought I was gonna

00:00:26,380 --> 00:00:32,470
talk at J's cough but unfortunately I

00:00:28,929 --> 00:00:34,720
got put on CSS cause I know for a fact

00:00:32,470 --> 00:00:36,520
that you can do 3d on the web with CSS

00:00:34,720 --> 00:00:39,010
but that's not something that I'm gonna

00:00:36,520 --> 00:00:43,719
talk about today so apologize for those

00:00:39,010 --> 00:00:46,000
who has that idea so about me my name is

00:00:43,719 --> 00:00:50,079
Sheila I am a developer advocate and all

00:00:46,000 --> 00:00:52,170
the desk so all of this is a 3d computer

00:00:50,079 --> 00:00:55,300
software company if you guys don't know

00:00:52,170 --> 00:00:58,390
so basically we have built a lot of

00:00:55,300 --> 00:01:00,760
products around 3d and also in the

00:00:58,390 --> 00:01:04,420
browser so I was I just wanted to show

00:01:00,760 --> 00:01:08,080
you guys this today so I'm gonna go

00:01:04,420 --> 00:01:11,670
through a very simple and very small

00:01:08,080 --> 00:01:16,450
example for for writing 3d on the web

00:01:11,670 --> 00:01:19,030
and it's basically gonna resemble this

00:01:16,450 --> 00:01:23,140
I'm gonna only take you through from

00:01:19,030 --> 00:01:25,439
step 1 through 4 here and from step 4 to

00:01:23,140 --> 00:01:29,340
5 really requires a lot of study and

00:01:25,439 --> 00:01:32,350
I'll show you what I exactly mean later

00:01:29,340 --> 00:01:37,140
so basically it's really on the web is

00:01:32,350 --> 00:01:39,790
WebGL and WebGL 101 it's based on a

00:01:37,140 --> 00:01:42,460
WebGL is based on something called open

00:01:39,790 --> 00:01:45,130
to you yes it's not the same thing but

00:01:42,460 --> 00:01:47,439
it's a very similar syntax if you guys

00:01:45,130 --> 00:01:49,060
have any experience it's meant for the

00:01:47,439 --> 00:01:52,719
browser's and it's very very difficult

00:01:49,060 --> 00:01:57,000
and I'm gonna show you guys exactly what

00:01:52,719 --> 00:02:00,490
it is here is a very simple simple

00:01:57,000 --> 00:02:03,610
sample code of drawing one triangle with

00:02:00,490 --> 00:02:09,550
WebGL it's about 100 lines of code and

00:02:03,610 --> 00:02:11,230
you get a triangle like this so if this

00:02:09,550 --> 00:02:14,500
is geo programming so it's basically

00:02:11,230 --> 00:02:15,010
calling API an API and draws from the

00:02:14,500 --> 00:02:15,880
GPU

00:02:15,010 --> 00:02:20,410
so if you

00:02:15,880 --> 00:02:23,920
doing very graphics heavy stuff on the

00:02:20,410 --> 00:02:26,770
browser this is what you want to use and

00:02:23,920 --> 00:02:29,020
luckily there are a lot of ways to

00:02:26,770 --> 00:02:32,920
simplify this there's a lot of existing

00:02:29,020 --> 00:02:35,110
libraries and frameworks that lets you

00:02:32,920 --> 00:02:37,440
do this so today I'm just gonna talk

00:02:35,110 --> 00:02:42,970
about something that is very versatile

00:02:37,440 --> 00:02:44,170
an easier way of 3d on the web so there

00:02:42,970 --> 00:02:46,090
are a lot of different libraries to

00:02:44,170 --> 00:02:48,610
choose from there's like three J's Babel

00:02:46,090 --> 00:02:49,930
and J has a frame it sometimes someone

00:02:48,610 --> 00:02:51,310
from Mozilla is gonna talk about a

00:02:49,930 --> 00:02:53,920
frames I don't like too thick and steal

00:02:51,310 --> 00:02:56,860
their thunder there are game engines

00:02:53,920 --> 00:02:59,020
like unity that exports to WebGL but

00:02:56,860 --> 00:03:01,030
it's very it's for very very specific

00:02:59,020 --> 00:03:02,350
use cases so I'm just gonna talk about

00:03:01,030 --> 00:03:05,290
something that's very versatile right

00:03:02,350 --> 00:03:08,680
here which is three gears and this is a

00:03:05,290 --> 00:03:11,050
link to say so three kids basically

00:03:08,680 --> 00:03:13,510
abstract away in triangles in GL

00:03:11,050 --> 00:03:16,480
programming instead of doing all that

00:03:13,510 --> 00:03:19,060
like this is these three lines are doing

00:03:16,480 --> 00:03:21,790
more stuff than what that hundred lines

00:03:19,060 --> 00:03:25,270
did back there so in to draw a cylinder

00:03:21,790 --> 00:03:27,490
in 3d space you basically specify a

00:03:25,270 --> 00:03:30,520
number of triangles that makes up a

00:03:27,490 --> 00:03:33,910
cylinder instead of writing all those

00:03:30,520 --> 00:03:37,990
triangles by yourself with vertices you

00:03:33,910 --> 00:03:43,570
could just vark cylinder equals new 3d

00:03:37,990 --> 00:03:45,250
mesh and new cylinder geometry so if you

00:03:43,570 --> 00:03:48,910
want to draw a square it's like a score

00:03:45,250 --> 00:03:51,760
square of geometry so to get started

00:03:48,910 --> 00:03:53,260
with three j/s there are four things

00:03:51,760 --> 00:03:56,709
that you need you need asking a scene

00:03:53,260 --> 00:03:59,350
camera renderer and your control and you

00:03:56,709 --> 00:04:01,510
want to fill stuff in your scene and you

00:03:59,350 --> 00:04:06,510
want to animate the scene so that's like

00:04:01,510 --> 00:04:08,650
very basic 3d scene things that you need

00:04:06,510 --> 00:04:10,450
so here I'm gonna talk about three

00:04:08,650 --> 00:04:12,280
functions so the innate function is

00:04:10,450 --> 00:04:14,410
gonna init initialize the scene camera

00:04:12,280 --> 00:04:15,970
renderer and controls the field ceiling

00:04:14,410 --> 00:04:19,420
thing is gonna put stuff in the scene

00:04:15,970 --> 00:04:22,180
and then I'm gonna animate it it should

00:04:19,420 --> 00:04:26,650
be quite straightforward so in three.js

00:04:22,180 --> 00:04:28,750
when you initialize the scene there's a

00:04:26,650 --> 00:04:31,480
news and three scene and

00:04:28,750 --> 00:04:33,610
you get a camera which is a which I'm

00:04:31,480 --> 00:04:37,990
gonna use a perspective camera here is a

00:04:33,610 --> 00:04:40,510
very very commonly used 3d camera as

00:04:37,990 --> 00:04:43,000
opposed to orthographic camera which is

00:04:40,510 --> 00:04:46,360
like viewing 2d on 3d but we don't have

00:04:43,000 --> 00:04:48,400
to go to go into deep here you passing a

00:04:46,360 --> 00:04:50,980
bunch of variables basically the inner

00:04:48,400 --> 00:04:53,710
clipping form complained outer clipping

00:04:50,980 --> 00:04:57,970
pointing and how big you want you want

00:04:53,710 --> 00:04:59,950
your camera to view and then you passing

00:04:57,970 --> 00:05:03,070
the review you instantiate the renderer

00:04:59,950 --> 00:05:06,910
and set the color of the renderer and

00:05:03,070 --> 00:05:09,340
the size and then for the control here

00:05:06,910 --> 00:05:13,690
I'm using again a very generic 3d

00:05:09,340 --> 00:05:15,970
control that that is commonly used in 3d

00:05:13,690 --> 00:05:17,590
scenes and they in the end you just use

00:05:15,970 --> 00:05:21,640
your renderer to render your scene and

00:05:17,590 --> 00:05:23,230
camera so in the beginning after you

00:05:21,640 --> 00:05:25,990
initialize everything it's very it's

00:05:23,230 --> 00:05:29,140
it's just a scene it's it's not special

00:05:25,990 --> 00:05:32,880
at all right now so the next step what I

00:05:29,140 --> 00:05:37,000
did is you fill seeing basically I've

00:05:32,880 --> 00:05:39,580
instantiated a bunch of particles all in

00:05:37,000 --> 00:05:44,020
all with the 3js material and this is

00:05:39,580 --> 00:05:47,350
very very basic 3d mesh and it's a

00:05:44,020 --> 00:05:49,360
particle it's it's the particle geometry

00:05:47,350 --> 00:05:50,950
and particle material is you know

00:05:49,360 --> 00:05:54,490
basically what you want to passing as

00:05:50,950 --> 00:05:56,710
parameters and I said I randomized the

00:05:54,490 --> 00:05:59,290
positions and randomized the directions

00:05:56,710 --> 00:06:02,620
I want to take because I want to animate

00:05:59,290 --> 00:06:06,580
those particles and I add that particles

00:06:02,620 --> 00:06:09,400
into the scene so I have a randomized

00:06:06,580 --> 00:06:11,170
set of particles in the 3d space we

00:06:09,400 --> 00:06:13,210
can't really do anything right now yet

00:06:11,170 --> 00:06:17,470
it's still nothing special it's it

00:06:13,210 --> 00:06:19,110
doesn't move but we're getting there so

00:06:17,470 --> 00:06:24,580
the last thing I want to do is the enemy

00:06:19,110 --> 00:06:26,530
animating is less of a actual animating

00:06:24,580 --> 00:06:31,780
you want to consider it less as

00:06:26,530 --> 00:06:33,880
animating the objects but more to tell

00:06:31,780 --> 00:06:36,310
the browser what to do each time it

00:06:33,880 --> 00:06:37,570
calls request animation frame so request

00:06:36,310 --> 00:06:39,640
animation frame there's something that

00:06:37,570 --> 00:06:41,590
you know whenever the browser refreshes

00:06:39,640 --> 00:06:43,840
the frame you

00:06:41,590 --> 00:06:46,720
it will call the function within

00:06:43,840 --> 00:06:48,700
requestanimationframe so in computer

00:06:46,720 --> 00:06:50,170
vendor animation it needs to be 60

00:06:48,700 --> 00:06:52,050
frames per second and that's exactly

00:06:50,170 --> 00:06:54,400
what requests and information frame does

00:06:52,050 --> 00:06:56,770
with a lot of graphics programmers they

00:06:54,400 --> 00:07:02,380
like still use this at timeout which is

00:06:56,770 --> 00:07:04,900
something that I really so basically the

00:07:02,380 --> 00:07:09,610
in my code I'm gonna call animate in the

00:07:04,900 --> 00:07:12,100
request animation frame function so

00:07:09,610 --> 00:07:14,590
again I'm up

00:07:12,100 --> 00:07:17,980
I added my control so I I'm updating my

00:07:14,590 --> 00:07:22,270
controls and I run a four loop through

00:07:17,980 --> 00:07:25,420
each of the particles and I move the

00:07:22,270 --> 00:07:27,760
particles every time the the

00:07:25,420 --> 00:07:31,270
requestanimationframe is called and then

00:07:27,760 --> 00:07:33,270
I also said a boundary where if the

00:07:31,270 --> 00:07:36,340
particle reaches an edge it bounces back

00:07:33,270 --> 00:07:42,670
so it's still very simple code and I

00:07:36,340 --> 00:07:45,160
render it again each time I enemy so

00:07:42,670 --> 00:07:49,740
here it's moving very slowly and this is

00:07:45,160 --> 00:07:49,740
a 3d scene so I can use orbit controls

00:07:51,600 --> 00:07:58,450
so yeah this is still very very basic so

00:07:56,080 --> 00:08:00,850
this is a source code and if you want to

00:07:58,450 --> 00:08:03,850
get a VR like effect you basically

00:08:00,850 --> 00:08:06,400
replace the camera the some of the

00:08:03,850 --> 00:08:07,930
parameters in the camera and replace the

00:08:06,400 --> 00:08:10,560
control with something called device

00:08:07,930 --> 00:08:14,050
orientation controls so basically that

00:08:10,560 --> 00:08:19,120
hooks up your camera your your phone or

00:08:14,050 --> 00:08:21,760
or VR device orientation with with the

00:08:19,120 --> 00:08:24,220
scene so here's the demo if you guys

00:08:21,760 --> 00:08:25,690
have cured ghosts and sienar I encourage

00:08:24,220 --> 00:08:28,200
you to try it I'm just gonna give you

00:08:25,690 --> 00:08:28,200
guys a minute

00:08:33,310 --> 00:08:39,880
it's basically goes to a website that I

00:08:36,430 --> 00:08:39,880
built for this

00:08:49,340 --> 00:08:55,270
so if you have a phone that you

00:08:51,920 --> 00:08:59,120
purchased after 2014

00:08:55,270 --> 00:09:06,760
you should have 3d enabled and be able

00:08:59,120 --> 00:09:12,740
to see it rendered with the devices okay

00:09:06,760 --> 00:09:15,620
so everyone got it so again this is step

00:09:12,740 --> 00:09:20,089
four to really make really cool

00:09:15,620 --> 00:09:22,160
animations in the in a 3d space I'm

00:09:20,089 --> 00:09:25,880
gonna show you guys what we've done and

00:09:22,160 --> 00:09:28,910
and this may be some inspiration of what

00:09:25,880 --> 00:09:30,950
you could really do with three days so

00:09:28,910 --> 00:09:37,520
so this is the library that we've both

00:09:30,950 --> 00:09:40,970
on top of three years with this is like

00:09:37,520 --> 00:09:43,760
a computer-aided design model and and I

00:09:40,970 --> 00:09:46,430
mean the browser so you can look at how

00:09:43,760 --> 00:09:49,490
just how good the rendering is and the

00:09:46,430 --> 00:09:57,950
materials are so you can zoom into each

00:09:49,490 --> 00:10:00,770
of the particle where the and basically

00:09:57,950 --> 00:10:05,089
look at these engineering drawings and

00:10:00,770 --> 00:10:07,250
this was built with a with a industrial

00:10:05,089 --> 00:10:10,820
design this model was strong with the

00:10:07,250 --> 00:10:12,740
industrial design software so everything

00:10:10,820 --> 00:10:15,730
that was in the was in the design

00:10:12,740 --> 00:10:19,640
actually got ported into the browser and

00:10:15,730 --> 00:10:20,990
and it's the library behind it is three

00:10:19,640 --> 00:10:24,730
years and that's why I'm talking about

00:10:20,990 --> 00:10:28,670
it today so with this you can basically

00:10:24,730 --> 00:10:31,550
where we have tied a bunch of JavaScript

00:10:28,670 --> 00:10:34,070
functions with this everything is

00:10:31,550 --> 00:10:36,709
basically a JavaScript object so we have

00:10:34,070 --> 00:10:39,490
typed a lot of JavaScript functions so

00:10:36,709 --> 00:10:42,170
you can do like expo fold or rotate and

00:10:39,490 --> 00:10:44,270
this what this basically is doing is

00:10:42,170 --> 00:10:51,130
doing a transferring transformation to

00:10:44,270 --> 00:10:54,500
your to the object in your 3d scene and

00:10:51,130 --> 00:10:57,680
it's just very significant how far we've

00:10:54,500 --> 00:10:59,690
gotten to to render 3d and in the

00:10:57,680 --> 00:11:03,020
website because in a website because

00:10:59,690 --> 00:11:06,980
this we have not done any optim

00:11:03,020 --> 00:11:10,730
optimization to render this because we

00:11:06,980 --> 00:11:12,770
what we what we do as a company is we do

00:11:10,730 --> 00:11:14,750
imaging engineering data so none of

00:11:12,770 --> 00:11:17,480
these data can be lost and we do no

00:11:14,750 --> 00:11:19,700
optimization to the number of Polly's

00:11:17,480 --> 00:11:28,400
like we don't we don't reduce the number

00:11:19,700 --> 00:11:32,120
of Polly's in in this drawing so so

00:11:28,400 --> 00:11:35,020
there's a bunch of demos we have also

00:11:32,120 --> 00:11:39,280
like both a lot of functions with these

00:11:35,020 --> 00:11:42,710
type of 3d models you could you could

00:11:39,280 --> 00:11:47,080
again like expose exploded or you could

00:11:42,710 --> 00:11:47,080
do a sectioning

00:11:53,600 --> 00:12:03,950
like you can section this whatever model

00:11:59,120 --> 00:12:06,530
3d model you have so sometimes I would

00:12:03,950 --> 00:12:08,720
hear people that have touched that

00:12:06,530 --> 00:12:10,790
front-end developers that have touched a

00:12:08,720 --> 00:12:12,890
little bit on WebGL and said that WebGL

00:12:10,790 --> 00:12:18,230
isn't really promising this is like a

00:12:12,890 --> 00:12:21,290
proof against that and because this is

00:12:18,230 --> 00:12:27,040
again engineering data you have like all

00:12:21,290 --> 00:12:34,150
the properties and and all the all the

00:12:27,040 --> 00:12:37,610
statistics on on each of the part and

00:12:34,150 --> 00:12:41,920
there there's just another thing I

00:12:37,610 --> 00:12:48,160
wanted to show you guys what we've both

00:12:41,920 --> 00:12:50,990
this is project Apollo and we basically

00:12:48,160 --> 00:12:56,780
collaborated with it with the university

00:12:50,990 --> 00:13:00,830
and putting the model of the stem space

00:12:56,780 --> 00:13:03,440
space capsule and and showed it to the

00:13:00,830 --> 00:13:06,230
public and and you can click on their

00:13:03,440 --> 00:13:09,260
link and look at everything and honestly

00:13:06,230 --> 00:13:11,270
this is really best achieved with WebGL

00:13:09,260 --> 00:13:16,010
you can't really do it with anything any

00:13:11,270 --> 00:13:17,780
other technology and let's see I just

00:13:16,010 --> 00:13:20,030
want to finish off with this beautiful

00:13:17,780 --> 00:13:22,580
rendering and that's what also one of

00:13:20,030 --> 00:13:25,030
the things that people said about WebGL

00:13:22,580 --> 00:13:29,690
is it doesn't have as much textures as

00:13:25,030 --> 00:13:33,560
OpenGL however you can really write very

00:13:29,690 --> 00:13:37,760
very beautiful rendering and graphics in

00:13:33,560 --> 00:13:41,000
the browser okay that's it all my talk

00:13:37,760 --> 00:13:45,100
and this is a QR code for the slides if

00:13:41,000 --> 00:13:45,100
you guys want to check it out

00:13:46,190 --> 00:13:48,250
you

00:13:54,499 --> 00:13:56,559

YouTube URL: https://www.youtube.com/watch?v=wvmllSN2RLA


