Title: Strike a Pose: Gesture Recognition in JS with Machine Learning - Charlie Gerard | JSConf Hawaii 2020
Publication date: 2020-03-09
Playlist: JSConf HI 2020
Description: 
	Most of our interactions with technology aren’t really intuitive. We’ve had to adapt to it by learning to type, swipe, execute specific voice commands, etc… but what if we could train technology to adapt to us?

Programming for hardware in JavaScript has already been made accessible with frameworks like Johnny- five, but, combining it with machine learning, we have the opportunity to create new and smarter interactions.

In this presentation, I will talk about how to build a simple gesture recognition system using JavaScript, Arduino and Machine learning.

Slides & Resources: https://docs.google.com/presentation/d/1kgRu53RZ09cVaAktWYnvVWuNUjLskoX__05qedC4SNI/edit#slide=id.g5bc3345d74_0_16

JSConf Hawaii will return in 2021
https://www.jsconfhi.com/
Captions: 
	00:00:08,179 --> 00:00:11,900
all right so what we're going to talk

00:00:09,980 --> 00:00:13,699
about today is building a gesture

00:00:11,900 --> 00:00:16,180
recognition system with machine learning

00:00:13,699 --> 00:00:18,650
Arduino and JavaScript so all together

00:00:16,180 --> 00:00:20,869
but before I start just a little bit

00:00:18,650 --> 00:00:23,509
about me my name is Charlie Gerard I'm

00:00:20,869 --> 00:00:26,060
recently a senior content of apparently

00:00:23,509 --> 00:00:27,949
fie and outside of my job I'm also part

00:00:26,060 --> 00:00:29,990
of two tech communities called the

00:00:27,949 --> 00:00:31,550
Google developer experts and Mozilla

00:00:29,990 --> 00:00:33,080
tech speaker I'm not going to go too

00:00:31,550 --> 00:00:34,910
much in detail right now but if you have

00:00:33,080 --> 00:00:37,010
any questions about these two we can

00:00:34,910 --> 00:00:39,710
talk about it afterwards what this talk

00:00:37,010 --> 00:00:41,570
is more related to is my passion about

00:00:39,710 --> 00:00:43,430
human-computer interaction so if you

00:00:41,570 --> 00:00:45,290
don't know what this is it is kind of

00:00:43,430 --> 00:00:47,839
like the study or the research of how

00:00:45,290 --> 00:00:48,949
humans interact with computers so when

00:00:47,839 --> 00:00:50,570
you think about the way you interact

00:00:48,949 --> 00:00:52,100
normally with technology on a day to day

00:00:50,570 --> 00:00:54,229
basis you might be typing on your

00:00:52,100 --> 00:00:56,089
keyboard or swiping on your phone but

00:00:54,229 --> 00:00:57,650
there's a lot more types of interactions

00:00:56,089 --> 00:00:59,030
that we could actually program that

00:00:57,650 --> 00:01:01,939
would be a lot more playful and a lot

00:00:59,030 --> 00:01:03,320
more interesting than that and well the

00:01:01,939 --> 00:01:04,879
like one thing that I'm going to talk

00:01:03,320 --> 00:01:07,850
about today that this talk is about is

00:01:04,879 --> 00:01:09,710
to build prototype of a street fighter

00:01:07,850 --> 00:01:11,869
game that you play with your own body

00:01:09,710 --> 00:01:14,270
movements so instead of punching with a

00:01:11,869 --> 00:01:15,440
keyboard you actually what we're going

00:01:14,270 --> 00:01:17,480
to talk about we're going to go through

00:01:15,440 --> 00:01:19,070
the process of how you can play that but

00:01:17,480 --> 00:01:21,050
with your own body movements so when you

00:01:19,070 --> 00:01:23,630
punch you actually punch and how do you

00:01:21,050 --> 00:01:26,150
can and then uppercut so we're gonna

00:01:23,630 --> 00:01:28,130
have three different gestures so this

00:01:26,150 --> 00:01:30,350
was the idea that I started with so what

00:01:28,130 --> 00:01:31,970
are we going to need to build this so we

00:01:30,350 --> 00:01:33,680
start with some hardware because we need

00:01:31,970 --> 00:01:35,720
to gather data about motions about

00:01:33,680 --> 00:01:37,159
unlocking body movements so to do that

00:01:35,720 --> 00:01:38,210
to be able to gather the data we're

00:01:37,159 --> 00:01:40,400
going to use a bit of hardware that

00:01:38,210 --> 00:01:41,770
we're going to hold in our hands the

00:01:40,400 --> 00:01:43,880
second thing that we're going to need is

00:01:41,770 --> 00:01:46,130
machine learning to kind of find

00:01:43,880 --> 00:01:47,510
patterns in the data that we gather and

00:01:46,130 --> 00:01:50,030
put that we're going to use tensorflow

00:01:47,510 --> 00:01:51,320
but we are at a scomp so we're going to

00:01:50,030 --> 00:01:51,920
use JavaScript so we're gonna use

00:01:51,320 --> 00:01:54,049
tensorflow

00:01:51,920 --> 00:01:56,060
GS all right so this is the material

00:01:54,049 --> 00:01:57,680
that we're gonna need and now that we

00:01:56,060 --> 00:01:59,180
kind of know what we want to build and

00:01:57,680 --> 00:02:02,720
what we're going to need the first step

00:01:59,180 --> 00:02:04,430
is gathering data again we it's machine

00:02:02,720 --> 00:02:06,740
learning so we need a bit of data to

00:02:04,430 --> 00:02:08,539
find patterns and recognize what makes a

00:02:06,740 --> 00:02:10,039
punch or what makes a Hydra cane or an

00:02:08,539 --> 00:02:13,700
uppercut so we're going to start with

00:02:10,039 --> 00:02:15,379
that and to gather data as I said we're

00:02:13,700 --> 00:02:16,760
going to use a bit of hardware so the

00:02:15,379 --> 00:02:19,129
first time is that I put the type this

00:02:16,760 --> 00:02:20,840
little project I used this so this is an

00:02:19,129 --> 00:02:21,280
Arduino but this is not like the you

00:02:20,840 --> 00:02:22,840
know that

00:02:21,280 --> 00:02:25,000
with my if you just get started without

00:02:22,840 --> 00:02:26,380
we know this is a maker 1000 and the

00:02:25,000 --> 00:02:28,360
reason why I use that one is because it

00:02:26,380 --> 00:02:30,130
has built-in Wi-Fi if you play with an

00:02:28,360 --> 00:02:31,510
Arduino Uno you have to be plugged to

00:02:30,130 --> 00:02:32,980
your computer so you're not really free

00:02:31,510 --> 00:02:34,150
in the movements that you make you know

00:02:32,980 --> 00:02:35,440
if you punch you might just like totally

00:02:34,150 --> 00:02:38,560
disconnect from your computer's which is

00:02:35,440 --> 00:02:40,540
not really what you want so this one is

00:02:38,560 --> 00:02:41,950
so it has beauty in my face you can just

00:02:40,540 --> 00:02:43,330
be you know remotely connected to your

00:02:41,950 --> 00:02:45,280
laptop you can be anywhere in the room

00:02:43,330 --> 00:02:47,530
and play that game so it just felt like

00:02:45,280 --> 00:02:50,260
it would be easier but the board itself

00:02:47,530 --> 00:02:51,760
doesn't actually gather any data it runs

00:02:50,260 --> 00:02:53,620
a program but you don't actually get

00:02:51,760 --> 00:02:56,110
anything from the board itself so to be

00:02:53,620 --> 00:02:58,390
able to get data from motion we're gonna

00:02:56,110 --> 00:03:00,550
add an accelerometer and gyroscope so

00:02:58,390 --> 00:03:02,470
this module gathers both accelerometer

00:03:00,550 --> 00:03:05,560
and gyroscope so it means that you get

00:03:02,470 --> 00:03:07,660
data for X Y z axis of how fast you're

00:03:05,560 --> 00:03:08,860
moving but also in terms of the

00:03:07,660 --> 00:03:11,050
gyroscope that takes care of the

00:03:08,860 --> 00:03:12,130
rotation so when you're you know if you

00:03:11,050 --> 00:03:13,390
think about when you're punching you

00:03:12,130 --> 00:03:15,489
kind of like retaining your arm that way

00:03:13,390 --> 00:03:17,620
so you're mixing speed and rotation and

00:03:15,489 --> 00:03:19,690
this particular module can give you the

00:03:17,620 --> 00:03:21,640
data about both so in the end we end up

00:03:19,690 --> 00:03:24,730
with six points of data XY 0 of

00:03:21,640 --> 00:03:26,230
accelerometer and XYZ of gyroscope but

00:03:24,730 --> 00:03:29,230
that's not it to make it a bit easier

00:03:26,230 --> 00:03:30,970
for me to build this I also added a bit

00:03:29,230 --> 00:03:33,160
and the reason why I did over N is

00:03:30,970 --> 00:03:34,959
because when I gather data I want to

00:03:33,160 --> 00:03:36,340
gather data only what I'm doing the

00:03:34,959 --> 00:03:37,630
punch I don't want to gather data on

00:03:36,340 --> 00:03:39,940
when I'm resting because that's kind of

00:03:37,630 --> 00:03:41,140
a pollute my data set so the reason why

00:03:39,940 --> 00:03:43,420
I did Oberon is that I want to be able

00:03:41,140 --> 00:03:44,890
to press do my punch and record the data

00:03:43,420 --> 00:03:47,230
while I'm doing it is only when I

00:03:44,890 --> 00:03:48,519
release only gathered the data so while

00:03:47,230 --> 00:03:50,440
the button is pressed and I'm doing the

00:03:48,519 --> 00:03:52,000
gesture I only save this so that then I

00:03:50,440 --> 00:03:54,160
can do whatever that is not the gesture

00:03:52,000 --> 00:03:56,290
that I want and it won't be recorded so

00:03:54,160 --> 00:03:58,269
if we imagine that we wired all of this

00:03:56,290 --> 00:04:00,430
together we have a Burin extramental

00:03:58,269 --> 00:04:01,390
java scope and arduino this is for the

00:04:00,430 --> 00:04:03,310
hardware this is what we're going to

00:04:01,390 --> 00:04:05,709
hold in our hand but in terms of code

00:04:03,310 --> 00:04:08,109
we're going to use a bit of node.js so

00:04:05,709 --> 00:04:10,180
we start by requiring the support module

00:04:08,109 --> 00:04:12,280
is called client to establish the

00:04:10,180 --> 00:04:14,290
communication between our Arduino and a

00:04:12,280 --> 00:04:15,790
laptop then we use johnny-five

00:04:14,290 --> 00:04:17,859
which is the main JavaScript framework

00:04:15,790 --> 00:04:21,900
to interact with hardware and the last

00:04:17,859 --> 00:04:27,270
one that we're going to need is oh no I

00:04:21,900 --> 00:04:30,909
don't want that what right so way back

00:04:27,270 --> 00:04:32,950
ok so so yeah so we're gonna we're gonna

00:04:30,909 --> 00:04:34,659
need the final system module because

00:04:32,950 --> 00:04:34,960
we're going to record our data but we

00:04:34,659 --> 00:04:37,120
need to

00:04:34,960 --> 00:04:38,680
fabien file so we can use it later then

00:04:37,120 --> 00:04:40,060
we accentuate our board where we

00:04:38,680 --> 00:04:42,039
establish the connection with the host

00:04:40,060 --> 00:04:45,370
and the port of our of our Arduino and

00:04:42,039 --> 00:04:46,780
when the board is ready we have to tell

00:04:45,370 --> 00:04:49,750
it where the button is connected to so

00:04:46,780 --> 00:04:51,940
mine was on pin a zero but it can be

00:04:49,750 --> 00:04:53,199
anything then we create the stream that

00:04:51,940 --> 00:04:55,660
we saw the file that we're going to

00:04:53,199 --> 00:04:58,030
write to for this little code simple you

00:04:55,660 --> 00:04:59,410
know I had like simple punch zeroes like

00:04:58,030 --> 00:05:00,910
the first punch that I'm going to train

00:04:59,410 --> 00:05:02,800
I'm going to call you know I'm gonna

00:05:00,910 --> 00:05:04,750
save it in a text file but as to repeat

00:05:02,800 --> 00:05:06,130
the gesture a lot of times to create

00:05:04,750 --> 00:05:08,199
your data set you would change that name

00:05:06,130 --> 00:05:10,240
of the file over time then we also

00:05:08,199 --> 00:05:11,710
accentuate an IMU sensor which is our

00:05:10,240 --> 00:05:13,840
motion sensor we give it the pins that

00:05:11,710 --> 00:05:17,789
is connected to and the type of model

00:05:13,840 --> 00:05:19,990
which was an MP u 60 50 and unchanged so

00:05:17,789 --> 00:05:21,460
every time that we're moving every time

00:05:19,990 --> 00:05:23,830
that you get data from that little

00:05:21,460 --> 00:05:25,330
module you actually keep all of those

00:05:23,830 --> 00:05:26,710
six points of data into a variable and

00:05:25,330 --> 00:05:28,570
when you're holding the button you're

00:05:26,710 --> 00:05:29,979
writing to the file system so you're

00:05:28,570 --> 00:05:32,169
writing to the stream all of the data

00:05:29,979 --> 00:05:33,849
that you get and on when you release you

00:05:32,169 --> 00:05:35,349
close the stream so you end it so all of

00:05:33,849 --> 00:05:37,630
a sudden you're not writing to the text

00:05:35,349 --> 00:05:39,610
file anymore and what this code sample

00:05:37,630 --> 00:05:40,960
gives you in the end is a file like this

00:05:39,610 --> 00:05:42,430
so that's like a sample there's a lot

00:05:40,960 --> 00:05:44,409
more lines depending on how long you do

00:05:42,430 --> 00:05:46,810
the gesture for but you expect that kind

00:05:44,409 --> 00:05:48,880
of data on the x-axis of the file you

00:05:46,810 --> 00:05:51,520
have your six points of data so X Y Z of

00:05:48,880 --> 00:05:53,530
X parameter and XYZ or gyroscope and the

00:05:51,520 --> 00:05:55,990
number of lines is how long you're doing

00:05:53,530 --> 00:05:57,340
the gesture force so and you know like

00:05:55,990 --> 00:05:58,750
you don't have to read all the numbers

00:05:57,340 --> 00:06:00,460
but it's quite precise so it means that

00:05:58,750 --> 00:06:02,229
there's quite a difference that it

00:06:00,460 --> 00:06:03,849
really records your entire gesture for

00:06:02,229 --> 00:06:05,770
how long as you're pressing the button

00:06:03,849 --> 00:06:08,169
so that's really cool so we did step one

00:06:05,770 --> 00:06:10,780
we got the data this is like for only

00:06:08,169 --> 00:06:12,520
one sample the first punch but you would

00:06:10,780 --> 00:06:13,750
imagine that you would have to record it

00:06:12,520 --> 00:06:15,460
probably a hundred times for each

00:06:13,750 --> 00:06:17,830
gesture so you wind up with a lot of

00:06:15,460 --> 00:06:19,810
files so the step two that we have to go

00:06:17,830 --> 00:06:21,130
through is that our processing because

00:06:19,810 --> 00:06:23,289
at the moment all that we did is

00:06:21,130 --> 00:06:26,080
recording data into text files but we

00:06:23,289 --> 00:06:29,169
didn't do anything else so if we go back

00:06:26,080 --> 00:06:31,509
to our data that looks like this it is

00:06:29,169 --> 00:06:32,500
just strings inside text files and we

00:06:31,509 --> 00:06:34,120
know that indian we want to use

00:06:32,500 --> 00:06:35,919
tensorflow J's and ten topologist

00:06:34,120 --> 00:06:38,310
doesn't really work with strings so we

00:06:35,919 --> 00:06:41,320
have to transform a data data by little

00:06:38,310 --> 00:06:43,630
so first of all we're going to have to

00:06:41,320 --> 00:06:45,930
transform it into objects of features

00:06:43,630 --> 00:06:48,099
and labels and features and labels are

00:06:45,930 --> 00:06:48,820
words that are related to machine

00:06:48,099 --> 00:06:49,780
learning so

00:06:48,820 --> 00:06:53,020
what it means is that we're actually

00:06:49,780 --> 00:06:54,850
transforming text files into so features

00:06:53,020 --> 00:06:57,010
is the content of the text file so what

00:06:54,850 --> 00:06:59,020
makes a punch and the label is going to

00:06:57,010 --> 00:07:01,690
be like the name but again we don't use

00:06:59,020 --> 00:07:02,890
string so we transform the name into an

00:07:01,690 --> 00:07:06,580
index so if we have a gesture of

00:07:02,890 --> 00:07:09,280
Hadouken punch and uppercut label one is

00:07:06,580 --> 00:07:10,420
index 1 which is going to be punch so

00:07:09,280 --> 00:07:12,460
it's kind of like a way of transforming

00:07:10,420 --> 00:07:15,280
our data so we end up with numbers and

00:07:12,460 --> 00:07:17,170
no strings so this would be for only one

00:07:15,280 --> 00:07:19,870
gesture so my first punch all of the

00:07:17,170 --> 00:07:22,030
data would be in the features and label

00:07:19,870 --> 00:07:23,740
one would be punched but as I said you

00:07:22,030 --> 00:07:25,420
have to gather quite a lot of data so

00:07:23,740 --> 00:07:26,920
you end up creating the same thing for

00:07:25,420 --> 00:07:29,080
each of your files so each of your text

00:07:26,920 --> 00:07:30,880
file actually becomes an object and you

00:07:29,080 --> 00:07:33,640
end up with a giant array of all of your

00:07:30,880 --> 00:07:35,350
data sample ok so that's the first step

00:07:33,640 --> 00:07:37,030
the thing is tensorflow doesn't really

00:07:35,350 --> 00:07:39,580
work with objects it works more with

00:07:37,030 --> 00:07:40,810
something that you know like arrays this

00:07:39,580 --> 00:07:42,730
would there be another step afterwards

00:07:40,810 --> 00:07:46,060
but so how would you then transform

00:07:42,730 --> 00:07:48,750
these objects into another arrays so

00:07:46,060 --> 00:07:50,650
what you have to do you end up with

00:07:48,750 --> 00:07:51,790
multi-dimensional arrays and this is

00:07:50,650 --> 00:07:54,460
where it gets a bit complicated to

00:07:51,790 --> 00:07:55,780
explain but I'm gonna try my best so if

00:07:54,460 --> 00:07:58,330
you look at you're going to split the

00:07:55,780 --> 00:08:00,190
labels and the features so if we look at

00:07:58,330 --> 00:08:02,470
the first layer of our multi-dimensional

00:08:00,190 --> 00:08:04,600
labels array you have all of the zeros

00:08:02,470 --> 00:08:06,730
so you have all of the hydrogens that

00:08:04,600 --> 00:08:09,040
you trained and it's mapped to the first

00:08:06,730 --> 00:08:11,200
layer of the features multi-dimensional

00:08:09,040 --> 00:08:13,390
arrays so if we go a bit further and we

00:08:11,200 --> 00:08:15,190
say our first ever hadouken that we

00:08:13,390 --> 00:08:18,250
trained it's going to be mapped to the

00:08:15,190 --> 00:08:22,060
first the first array of features in the

00:08:18,250 --> 00:08:23,170
first layer of peaches and then so if

00:08:22,060 --> 00:08:24,700
you do the second one is going to be

00:08:23,170 --> 00:08:26,440
mapped as well so your second hydrogen

00:08:24,700 --> 00:08:29,050
is going to be mapped to the second

00:08:26,440 --> 00:08:30,640
array of features etc and then we move

00:08:29,050 --> 00:08:32,380
on to the punches it's going to be the

00:08:30,640 --> 00:08:33,550
same everything is mapped so it's in

00:08:32,380 --> 00:08:37,360
like the same position but it's in

00:08:33,550 --> 00:08:39,219
different arrays because in the end now

00:08:37,360 --> 00:08:41,530
we're finally getting to a format that

00:08:39,219 --> 00:08:43,150
tensorflow can work with now we don't

00:08:41,530 --> 00:08:44,950
have strings we don't have objects we

00:08:43,150 --> 00:08:47,080
have multi-dimensional arrays which is

00:08:44,950 --> 00:08:48,970
closer to what to what tensorflow works

00:08:47,080 --> 00:08:50,620
with and so I don't know if you noticed

00:08:48,970 --> 00:08:52,360
well I didn't show any actual code

00:08:50,620 --> 00:08:54,280
sample because so far it's not any

00:08:52,360 --> 00:08:56,800
tensorflow specific code its

00:08:54,280 --> 00:08:57,850
transformation of of data in a race and

00:08:56,800 --> 00:08:59,700
objects that you would do in like

00:08:57,850 --> 00:09:02,140
standard JavaScript if I could say so

00:08:59,700 --> 00:09:04,840
but now now that we have

00:09:02,140 --> 00:09:06,280
that resembles what what test we can

00:09:04,840 --> 00:09:09,610
work with we can we can finally

00:09:06,280 --> 00:09:12,130
transform that into tenses so if you

00:09:09,610 --> 00:09:14,020
can't it's a bit small but don't worry

00:09:12,130 --> 00:09:15,310
about really understanding what these

00:09:14,020 --> 00:09:17,110
lines of code do because if you've never

00:09:15,310 --> 00:09:18,970
played with tensorflow before it's going

00:09:17,110 --> 00:09:21,460
to be like reading it will not really

00:09:18,970 --> 00:09:22,780
make sense it's more about I only put it

00:09:21,460 --> 00:09:24,310
there to show the amount of coordinated

00:09:22,780 --> 00:09:26,560
to do that but what is really more

00:09:24,310 --> 00:09:28,240
important well I'd be happy with is if

00:09:26,560 --> 00:09:29,770
you understand more the process to go

00:09:28,240 --> 00:09:31,930
through if you know if you want to know

00:09:29,770 --> 00:09:33,700
exactly how to write a the repos are on

00:09:31,930 --> 00:09:34,870
github or the documentation is pretty

00:09:33,700 --> 00:09:37,210
good I'm sure that you'll figure out

00:09:34,870 --> 00:09:39,130
later on the understanding the steps is

00:09:37,210 --> 00:09:41,140
the most important thing so first of all

00:09:39,130 --> 00:09:43,420
before transforming the our data to

00:09:41,140 --> 00:09:44,530
tenses we have to shuffle it because if

00:09:43,420 --> 00:09:47,140
I just go back to the slide before

00:09:44,530 --> 00:09:48,550
everything is in order and you don't

00:09:47,140 --> 00:09:50,620
really want to give your data that way

00:09:48,550 --> 00:09:51,820
to a machine learning algorithm because

00:09:50,620 --> 00:09:53,830
it's just going to get used to the way

00:09:51,820 --> 00:09:56,110
you feed it so for example it's going to

00:09:53,830 --> 00:09:58,000
look at it's gonna be like oh well the

00:09:56,110 --> 00:09:59,680
five previous samples that you gave me

00:09:58,000 --> 00:10:01,060
we're all hadoukens so this mean one

00:09:59,680 --> 00:10:03,100
must be a hadouken it's not really going

00:10:01,060 --> 00:10:04,180
to try to find any pattern in the data

00:10:03,100 --> 00:10:06,160
and that's not what you want you wanted

00:10:04,180 --> 00:10:07,960
to really understand what makes how do

00:10:06,160 --> 00:10:09,780
you know what makes a punch based on the

00:10:07,960 --> 00:10:11,950
data so it's not by shuffling it and

00:10:09,780 --> 00:10:14,680
then you're gonna use the tensorflow

00:10:11,950 --> 00:10:17,530
methods like tensor 2d because our

00:10:14,680 --> 00:10:19,240
gestures are two-dimensional we have six

00:10:17,530 --> 00:10:20,860
numbers over a certain amount of lines

00:10:19,240 --> 00:10:23,620
so it's like an x and y axis for your

00:10:20,860 --> 00:10:25,540
data and the labels is a one-dimensional

00:10:23,620 --> 00:10:29,470
tensor because the label is only one

00:10:25,540 --> 00:10:31,200
thing it's either either 0 1 or 2 or

00:10:29,470 --> 00:10:33,730
more if you decide to do more classes

00:10:31,200 --> 00:10:35,680
the next step is to splitting between

00:10:33,730 --> 00:10:38,260
training set and test it so you just

00:10:35,680 --> 00:10:40,210
have to calculate the amount of your

00:10:38,260 --> 00:10:42,250
data that you're gonna split so the

00:10:40,210 --> 00:10:44,620
reason why you do that is because you

00:10:42,250 --> 00:10:46,450
have your entire label data set and the

00:10:44,620 --> 00:10:48,610
training set is going to be given to

00:10:46,450 --> 00:10:51,460
create the model so you keep 80% of your

00:10:48,610 --> 00:10:53,770
data set to to create the model and you

00:10:51,460 --> 00:10:54,940
keep 20% of it for the test set so the

00:10:53,770 --> 00:10:56,860
test that is going to be used to

00:10:54,940 --> 00:10:59,020
validate against the model that you

00:10:56,860 --> 00:11:00,820
created because your test set is already

00:10:59,020 --> 00:11:02,260
labeled again it's something that you

00:11:00,820 --> 00:11:04,120
trained and you labeled yourself and

00:11:02,260 --> 00:11:05,950
just to check that the accuracy of your

00:11:04,120 --> 00:11:09,340
model is good you're going to use 20% of

00:11:05,950 --> 00:11:10,990
your data set to train it against so so

00:11:09,340 --> 00:11:12,850
yeah you end up doing that so you slice

00:11:10,990 --> 00:11:14,620
your cereal tensors between training

00:11:12,850 --> 00:11:15,370
features and testing features training

00:11:14,620 --> 00:11:18,160
levels

00:11:15,370 --> 00:11:19,420
testing levels once again if the code

00:11:18,160 --> 00:11:22,420
doesn't make sense it's fine it's more

00:11:19,420 --> 00:11:25,240
about the steps and now finally our data

00:11:22,420 --> 00:11:27,100
is processed so it's it's ready but we

00:11:25,240 --> 00:11:28,360
still haven't done anything so the step

00:11:27,100 --> 00:11:30,279
3 is to create the model at the moment

00:11:28,360 --> 00:11:33,040
we just reformatted the data so that we

00:11:30,279 --> 00:11:35,770
can do something with it so to create

00:11:33,040 --> 00:11:37,029
the model so this is more this at the

00:11:35,770 --> 00:11:39,940
part where it's more of an art than a

00:11:37,029 --> 00:11:41,110
science when you want to play with

00:11:39,940 --> 00:11:42,700
machine learning you might not know in

00:11:41,110 --> 00:11:44,740
advance what model you can use or what

00:11:42,700 --> 00:11:46,330
parameters do you see it's more a step

00:11:44,740 --> 00:11:48,370
where you play around here I use the

00:11:46,330 --> 00:11:51,460
sequential model I could not explain why

00:11:48,370 --> 00:11:53,290
it just worked so I used it and then

00:11:51,460 --> 00:11:55,779
there's this other types of models but

00:11:53,290 --> 00:11:58,150
it works for me sardine changing then in

00:11:55,779 --> 00:12:00,880
terms of the amount of layers in your in

00:11:58,150 --> 00:12:02,050
your own neural network you have to but

00:12:00,880 --> 00:12:03,880
you can have four or five and the

00:12:02,050 --> 00:12:05,320
parameters can be changing as well so

00:12:03,880 --> 00:12:08,170
I'm not going to go in-depth into this

00:12:05,320 --> 00:12:11,380
because again what works for you just

00:12:08,170 --> 00:12:13,870
keep it then we we just add like an

00:12:11,380 --> 00:12:15,339
optimizer layer as well and then finally

00:12:13,870 --> 00:12:17,529
what's important here is that the fit

00:12:15,339 --> 00:12:19,120
method is what is going to train the

00:12:17,529 --> 00:12:20,620
model so you pass it your training

00:12:19,120 --> 00:12:22,690
features and training labels and you

00:12:20,620 --> 00:12:24,790
have a parameter of validation data when

00:12:22,690 --> 00:12:26,290
you give your test set as well so this

00:12:24,790 --> 00:12:28,209
step is actually going to be the

00:12:26,290 --> 00:12:29,920
training process and in the end once

00:12:28,209 --> 00:12:32,140
this is done with all of the data that

00:12:29,920 --> 00:12:34,630
you gave it you can save your model in

00:12:32,140 --> 00:12:36,070
your file system so now we actually

00:12:34,630 --> 00:12:40,029
gathered our data which once formed it

00:12:36,070 --> 00:12:41,529
we created the model but okay step for

00:12:40,029 --> 00:12:42,459
prediction you actually want to use that

00:12:41,529 --> 00:12:45,040
model you're not going to go through all

00:12:42,459 --> 00:12:47,170
of this to like know run predictions

00:12:45,040 --> 00:12:50,370
later on so the final step of all of

00:12:47,170 --> 00:12:52,720
this is the prediction so to do this I

00:12:50,370 --> 00:12:54,790
like my application was more of like you

00:12:52,720 --> 00:12:57,610
know GS fine but you can do that in the

00:12:54,790 --> 00:12:59,920
browser you don't require tensorflow GS

00:12:57,610 --> 00:13:02,920
instead of Tesla J's node but basically

00:12:59,920 --> 00:13:05,110
you you import the framework we have a

00:13:02,920 --> 00:13:08,589
gesture classes arrays that has how you

00:13:05,110 --> 00:13:11,080
can punch and uppercut we load our model

00:13:08,589 --> 00:13:13,660
to be able to use it and then if we go

00:13:11,080 --> 00:13:15,130
back to our our code to get the data

00:13:13,660 --> 00:13:18,250
from the accelerometer and gyroscope

00:13:15,130 --> 00:13:19,690
when we hold the button we we save all

00:13:18,250 --> 00:13:21,700
of our data into a variable we push it

00:13:19,690 --> 00:13:23,230
into an array and this time we're not

00:13:21,700 --> 00:13:25,270
setting it to the first system because

00:13:23,230 --> 00:13:26,709
we are not training an algorithm we're

00:13:25,270 --> 00:13:27,339
predicting life data that it's never

00:13:26,709 --> 00:13:28,780
seen before

00:13:27,339 --> 00:13:30,940
so we tip Laura in the variable

00:13:28,780 --> 00:13:32,320
and when we release the button we're

00:13:30,940 --> 00:13:34,660
sending all of that data to a predict

00:13:32,320 --> 00:13:36,580
function and what our predict question

00:13:34,660 --> 00:13:38,080
does it's going to transform a live data

00:13:36,580 --> 00:13:39,910
that we just had in a variable into a

00:13:38,080 --> 00:13:42,880
tensor as well so it can be compared to

00:13:39,910 --> 00:13:44,770
what the model was trained with we call

00:13:42,880 --> 00:13:46,480
the predict method with that input

00:13:44,770 --> 00:13:47,890
that's been transformed and in the end

00:13:46,480 --> 00:13:49,780
the prediction that you get is going to

00:13:47,890 --> 00:13:51,640
be an index just the same way that our

00:13:49,780 --> 00:13:52,930
label was a number the prediction is

00:13:51,640 --> 00:13:54,760
going to come back as a number as well

00:13:52,930 --> 00:13:56,620
so we have to look up what it means in

00:13:54,760 --> 00:13:58,930
the gesture classes array so if the

00:13:56,620 --> 00:14:00,280
prediction comes back as 0 it means that

00:13:58,930 --> 00:14:01,750
is the first index in our gesture

00:14:00,280 --> 00:14:04,500
classes which is going to be the

00:14:01,750 --> 00:14:07,450
Hadouken or punch or a pocket whatever

00:14:04,500 --> 00:14:10,450
okay so this is this was like a very

00:14:07,450 --> 00:14:12,160
short version of everything that you

00:14:10,450 --> 00:14:14,380
have to go through but as we can see

00:14:12,160 --> 00:14:16,780
it's not it's not that much code I think

00:14:14,380 --> 00:14:18,940
then the like the thing that takes

00:14:16,780 --> 00:14:20,380
longer is to record the data and to

00:14:18,940 --> 00:14:22,210
understand what's going on but once you

00:14:20,380 --> 00:14:24,220
have an understanding of the steps it's

00:14:22,210 --> 00:14:26,170
about finding the right syntax it's the

00:14:24,220 --> 00:14:27,550
same way that you would do if you were I

00:14:26,170 --> 00:14:28,900
don't know migrating from reactor to

00:14:27,550 --> 00:14:31,390
view you know what you have to do but

00:14:28,900 --> 00:14:33,700
you have to learn the syntax okay so now

00:14:31,390 --> 00:14:37,270
that I told you what you should do or

00:14:33,700 --> 00:14:41,140
what yeah I thought I would try to show

00:14:37,270 --> 00:14:42,700
you how it works and this is where I'm

00:14:41,140 --> 00:14:46,750
always like so excited but then it

00:14:42,700 --> 00:14:48,430
doesn't work okay so I'm gonna try but I

00:14:46,750 --> 00:14:53,560
have quite a bit of time so I can try it

00:14:48,430 --> 00:14:55,030
like until it works so yeah so I'll just

00:14:53,560 --> 00:14:56,200
put like a little gift in case it

00:14:55,030 --> 00:14:57,820
doesn't work but what is supposed to

00:14:56,200 --> 00:14:58,900
happen I'm supposed to do this and then

00:14:57,820 --> 00:15:01,870
it's a point so there's a delay but

00:14:58,900 --> 00:15:03,400
let's not talk about the delay and this

00:15:01,870 --> 00:15:05,170
normal that there's a delay but yeah

00:15:03,400 --> 00:15:06,690
that's another talk but I'm supposed to

00:15:05,170 --> 00:15:10,690
be able to read these three gestures

00:15:06,690 --> 00:15:15,940
okay sorry okay so I'm going to exit my

00:15:10,690 --> 00:15:23,110
slides okay so Bluetooth is on and I

00:15:15,940 --> 00:15:25,150
have that okay I okay I just need to

00:15:23,110 --> 00:15:26,290
check that you didn't break oh yeah

00:15:25,150 --> 00:15:28,620
there's errors in the console but not

00:15:26,290 --> 00:15:28,620
everybody

00:15:28,850 --> 00:15:38,899
okay so if I do like sorry I was

00:15:37,189 --> 00:15:40,039
thinking it's not gonna work okay let me

00:15:38,899 --> 00:15:44,079
try again I just want to

00:15:40,039 --> 00:15:44,079
oh it's still okay still on so if I do

00:15:45,189 --> 00:15:59,869
wait can I do like oh sorry

00:15:50,839 --> 00:16:01,669
Wow they work the first time like it's

00:15:59,869 --> 00:16:05,410
the first time that it actually works

00:16:01,669 --> 00:16:07,639
the first time so I'm like super excited

00:16:05,410 --> 00:16:09,169
cool like there's once I had to try it

00:16:07,639 --> 00:16:11,109
ten times and I think people wanted me

00:16:09,169 --> 00:16:12,259
off the stage I was like I'm not leaving

00:16:11,109 --> 00:16:15,589
okay

00:16:12,259 --> 00:16:16,669
so this was for Street Fighter okay cool

00:16:15,589 --> 00:16:18,709
but maybe you don't like Street Fighter

00:16:16,669 --> 00:16:20,479
so I built another one hopefully it's

00:16:18,709 --> 00:16:23,649
gonna work as well but I put a little

00:16:20,479 --> 00:16:23,649
bit hint I don't know if it's gonna load

00:16:27,279 --> 00:16:34,639
okay so once movements so maybe you

00:16:33,169 --> 00:16:37,100
don't like Street Fighter maybe you like

00:16:34,639 --> 00:16:39,319
Harry Potter so I know you know that

00:16:37,100 --> 00:16:40,579
spells have a name you can say hello for

00:16:39,319 --> 00:16:42,859
more our experiments but they're also

00:16:40,579 --> 00:16:45,079
happy shape so you can be a real wizard

00:16:42,859 --> 00:16:51,559
now hopefully okay let's see if it works

00:16:45,079 --> 00:16:54,470
so for this demo I'm I'm hopeful that

00:16:51,559 --> 00:17:00,889
it's really gonna work cool okay so I

00:16:54,470 --> 00:17:03,100
still still know okay so steel air is

00:17:00,889 --> 00:17:09,259
still fine

00:17:03,100 --> 00:17:11,449
wait okay so I'm just gonna check it I'm

00:17:09,259 --> 00:17:19,009
still I'm still on okay so I have I

00:17:11,449 --> 00:17:19,970
think I have like experience nope so it

00:17:19,009 --> 00:17:21,649
was too good to be true

00:17:19,970 --> 00:17:23,059
it did crash so then that would be

00:17:21,649 --> 00:17:24,769
another talk about why it crashes I

00:17:23,059 --> 00:17:30,429
dunno why it crushes but I don't want to

00:17:24,769 --> 00:17:30,429
talk about it so if I do like

00:17:30,630 --> 00:17:41,010
oh we're good so this is how I spend my

00:17:39,360 --> 00:17:42,240
weekend I have another one I don't so

00:17:41,010 --> 00:17:45,720
the only one is Loomis I don't know if

00:17:42,240 --> 00:17:47,250
it's gonna work no I'm gonna try again

00:17:45,720 --> 00:17:51,930
because now I have time I have time

00:17:47,250 --> 00:18:07,110
crushed okay okay I want to do there

00:17:51,930 --> 00:18:08,880
Loomis I think it's funny all right all

00:18:07,110 --> 00:18:11,550
right anyway it's just to show you that

00:18:08,880 --> 00:18:13,740
the process is the same like I was still

00:18:11,550 --> 00:18:14,850
recording data I was still processing it

00:18:13,740 --> 00:18:16,530
still training a machine learning model

00:18:14,850 --> 00:18:18,510
it's just that NBN I was training

00:18:16,530 --> 00:18:19,950
different gestures so you had Hadouken

00:18:18,510 --> 00:18:23,010
punch and a poker the name the other one

00:18:19,950 --> 00:18:24,360
you had experiments and dumas but the

00:18:23,010 --> 00:18:26,220
process is the same so then you can just

00:18:24,360 --> 00:18:27,540
replace bits to create what you want you

00:18:26,220 --> 00:18:30,210
probably might have liked better ideas

00:18:27,540 --> 00:18:32,010
than what I just did the what else so

00:18:30,210 --> 00:18:33,240
the thing is that I really the reason

00:18:32,010 --> 00:18:34,830
why I like playing with that stuff is

00:18:33,240 --> 00:18:36,870
because I want more people to do it but

00:18:34,830 --> 00:18:38,610
in the first versions that I use so I

00:18:36,870 --> 00:18:40,380
used an Arduino and everybody has we

00:18:38,610 --> 00:18:42,450
knows where I also used like a daydream

00:18:40,380 --> 00:18:45,000
controller sensor that is kind of like

00:18:42,450 --> 00:18:46,800
the same but different and but the thing

00:18:45,000 --> 00:18:48,360
is it's stuff that you have to buy and I

00:18:46,800 --> 00:18:50,250
don't think that's really cool I think

00:18:48,360 --> 00:18:51,720
it stops people from trying so I was

00:18:50,250 --> 00:18:54,470
thinking do you know what else has a

00:18:51,720 --> 00:18:56,910
gyroscope and accelerometer your phone

00:18:54,470 --> 00:18:59,430
so the phone that you have in your

00:18:56,910 --> 00:19:01,560
pocket if you have one of the motor it

00:18:59,430 --> 00:19:03,260
doesn't even have to be an iPhone X or

00:19:01,560 --> 00:19:05,550
tennis you don't know how to say but

00:19:03,260 --> 00:19:07,530
none of these like even even an older

00:19:05,550 --> 00:19:09,510
phone probably still has an X parameter

00:19:07,530 --> 00:19:11,880
and a gyroscope and the way to access

00:19:09,510 --> 00:19:14,640
this data in JavaScript is using the

00:19:11,880 --> 00:19:16,380
generic sensor API so again you might

00:19:14,640 --> 00:19:17,700
you would probably have to refactor the

00:19:16,380 --> 00:19:19,620
code because all of a sudden window in

00:19:17,700 --> 00:19:21,450
node anymore we can just do it directly

00:19:19,620 --> 00:19:22,980
in the browser but the way you would do

00:19:21,450 --> 00:19:24,300
this is you would essentially eight and

00:19:22,980 --> 00:19:26,520
it's really too small I'm sorry I'll

00:19:24,300 --> 00:19:28,680
share the slides later but you have a

00:19:26,520 --> 00:19:30,480
gyroscope and you have an event listener

00:19:28,680 --> 00:19:32,520
for reading so whenever the it's

00:19:30,480 --> 00:19:34,170
streaming data you have the same for

00:19:32,520 --> 00:19:36,510
accelerometer and it gives you the same

00:19:34,170 --> 00:19:38,880
data it gives you the XYZ axis of the

00:19:36,510 --> 00:19:40,710
gyroscope and accelerometer and when I

00:19:38,880 --> 00:19:42,150
say that you can do that I actually I

00:19:40,710 --> 00:19:45,029
did so I did I'm not going to show it

00:19:42,150 --> 00:19:47,220
because now I have less time but

00:19:45,029 --> 00:19:48,749
I have like the repo is on github so you

00:19:47,220 --> 00:19:50,460
can play around with it as well so it

00:19:48,749 --> 00:19:51,990
means that without having to buy any

00:19:50,460 --> 00:19:53,519
hardware you can actually play with

00:19:51,990 --> 00:19:55,590
training a machine learning algorithm

00:19:53,519 --> 00:19:58,110
just by using your phone all of it in

00:19:55,590 --> 00:20:01,110
JavaScript so I think this is pretty

00:19:58,110 --> 00:20:02,730
cool but anyway just a little bit of a

00:20:01,110 --> 00:20:04,320
recap because there was a lot of code

00:20:02,730 --> 00:20:06,570
and if you've never done that before it

00:20:04,320 --> 00:20:08,759
can be a bit overwhelming but again I

00:20:06,570 --> 00:20:10,830
think the steps are what's important so

00:20:08,759 --> 00:20:12,600
you have to get data somehow I used

00:20:10,830 --> 00:20:15,539
Arduino daydream and the phone but any

00:20:12,600 --> 00:20:17,549
other any other piece of hardware that

00:20:15,539 --> 00:20:19,919
you know transmits data you can actually

00:20:17,549 --> 00:20:21,179
use that as well then you have to

00:20:19,919 --> 00:20:22,740
process the data because when you say

00:20:21,179 --> 00:20:25,200
that it's just strings so you have to

00:20:22,740 --> 00:20:27,119
transform it into tenses it somehow then

00:20:25,200 --> 00:20:28,710
you have to split to be able to test and

00:20:27,119 --> 00:20:31,110
validate that your predictions are

00:20:28,710 --> 00:20:33,119
accurate then you have to Train

00:20:31,110 --> 00:20:34,590
well yeah you have to train to generate

00:20:33,119 --> 00:20:36,389
a model in the end and then you have to

00:20:34,590 --> 00:20:37,649
run the predictions so once you know

00:20:36,389 --> 00:20:39,690
that this is the steps that you have to

00:20:37,649 --> 00:20:41,279
go through then you can you know look at

00:20:39,690 --> 00:20:43,740
the documentation of a few different

00:20:41,279 --> 00:20:45,389
frameworks and you'll get there

00:20:43,740 --> 00:20:46,950
but anyway I'm almost done but just

00:20:45,389 --> 00:20:48,210
before I finish I really wanted to say I

00:20:46,950 --> 00:20:50,789
say that all the time but I feel like I

00:20:48,210 --> 00:20:51,840
still need to say it so I know that all

00:20:50,789 --> 00:20:53,549
of that stuff is not something that

00:20:51,840 --> 00:20:55,409
you're gonna go back to work and you

00:20:53,549 --> 00:20:57,720
know make millions with definitely not

00:20:55,409 --> 00:20:59,730
but I know that it's maybe you know what

00:20:57,720 --> 00:21:02,190
you came here for maybe you wanted to

00:20:59,730 --> 00:21:04,080
learn something that you call useful but

00:21:02,190 --> 00:21:05,669
to me it's really you I'm not making fun

00:21:04,080 --> 00:21:08,639
of people who think this is useful

00:21:05,669 --> 00:21:09,929
anyway so the reason why I'm saying that

00:21:08,639 --> 00:21:11,730
is that I learned a lot during the

00:21:09,929 --> 00:21:13,110
process and for example there's a lot of

00:21:11,730 --> 00:21:14,549
times where you look at machine learning

00:21:13,110 --> 00:21:16,409
and you're like oh I don't want to like

00:21:14,549 --> 00:21:18,869
just crunch data into spreadsheets it's

00:21:16,409 --> 00:21:20,389
like boring but the thing is you end up

00:21:18,869 --> 00:21:22,860
being able to take machine learning and

00:21:20,389 --> 00:21:24,570
put it into something playful and that

00:21:22,860 --> 00:21:26,879
you know that makes you keep going to

00:21:24,570 --> 00:21:28,499
learn more about that technology by just

00:21:26,879 --> 00:21:31,259
playing something that gets you excited

00:21:28,499 --> 00:21:32,850
and you just you know so much if you if

00:21:31,259 --> 00:21:34,440
you end up doing that kind of stuff you

00:21:32,850 --> 00:21:36,269
would learn about Arduino and machine

00:21:34,440 --> 00:21:38,249
running and WebSockets to go from a node

00:21:36,269 --> 00:21:39,149
to the browser and just play like

00:21:38,249 --> 00:21:40,679
industry would learn about

00:21:39,149 --> 00:21:42,450
human-computer interaction as well which

00:21:40,679 --> 00:21:44,249
is I think well something I'm really

00:21:42,450 --> 00:21:45,720
passionate about but anyway that

00:21:44,249 --> 00:21:47,639
sometimes I really wish that I was

00:21:45,720 --> 00:21:49,110
seeing more of these playful things that

00:21:47,639 --> 00:21:50,759
play with technology rather than you

00:21:49,110 --> 00:21:53,879
know some of the fights that we have on

00:21:50,759 --> 00:21:56,070
twitter / CSS engineers but it's like

00:21:53,879 --> 00:21:58,080
that's what I know that to me useless is

00:21:56,070 --> 00:21:59,880
not worthless it's definitely worth it

00:21:58,080 --> 00:22:01,380
if it just makes you excited for like an

00:21:59,880 --> 00:22:03,870
hour that's definitely worth it

00:22:01,380 --> 00:22:06,630
but anyway I spoke very fast as always

00:22:03,870 --> 00:22:08,580
so I am done I will share the slides

00:22:06,630 --> 00:22:10,230
later on on Twitter if you have any

00:22:08,580 --> 00:22:12,360
questions I'll be around as well for the

00:22:10,230 --> 00:22:13,980
next few days but thank you so much for

00:22:12,360 --> 00:22:15,160
having me and thank you thank you so

00:22:13,980 --> 00:22:20,189
much

00:22:15,160 --> 00:22:20,189

YouTube URL: https://www.youtube.com/watch?v=m-C2A7IENBg


