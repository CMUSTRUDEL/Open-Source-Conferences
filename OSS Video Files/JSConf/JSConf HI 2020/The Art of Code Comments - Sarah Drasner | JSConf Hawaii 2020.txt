Title: The Art of Code Comments - Sarah Drasner | JSConf Hawaii 2020
Publication date: 2020-03-26
Playlist: JSConf HI 2020
Description: 
	Commenting code is a more nuanced thing than we give it credit for.

There are a couple of schools of thought on this. One states that if you feel a comment is necessary, you should rewrite it to be more legible. This is true. But it's also not true. In the process of writing a comment, you can often find things that could be written better, but it's not an either/or, for the following reason: Code can describe how, but it cannot explain why.

There is just not one right way or one reason to write a comment.In this session, we'll dig into some of the many beneficial types of comments that might all serve a different purpose, followed by patterns we might want to avoid. In the process we'll talk about being good teammates, collaborating, and writing the most legible code we can.

JSConf Hawaii will return soon
https://www.jsconfhi.com/
Captions: 
	00:00:08,170 --> 00:00:14,380
all right so to kick it off here we're

00:00:11,380 --> 00:00:16,740
gonna do a vote I'm gonna show you two

00:00:14,380 --> 00:00:20,020
pieces of code they do the same thing

00:00:16,740 --> 00:00:23,110
and you're gonna decide which piece of

00:00:20,020 --> 00:00:24,970
code does it in it expresses it in the

00:00:23,110 --> 00:00:27,279
most clean way which piece of code is

00:00:24,970 --> 00:00:30,700
the most clean we'll do it by a raise of

00:00:27,279 --> 00:00:33,240
hands okay so look at it read it I'll

00:00:30,700 --> 00:00:33,240
give you a minute

00:00:37,500 --> 00:00:44,530
okay which piece of code is more clean a

00:00:40,870 --> 00:00:48,239
raise your hand for a raise your hand

00:00:44,530 --> 00:00:53,469
for B okay great

00:00:48,239 --> 00:01:00,429
all right whoo which one is clean all

00:00:53,469 --> 00:01:04,300
right read it which one's a okay now how

00:01:00,429 --> 00:01:09,660
about B all right great we're about

00:01:04,300 --> 00:01:12,490
50/50 for each one what what is what

00:01:09,660 --> 00:01:18,549
does this block of code do you can go

00:01:12,490 --> 00:01:20,619
ahead and just yell it out at me all

00:01:18,549 --> 00:01:21,310
right we've got a user agent all right

00:01:20,619 --> 00:01:24,130
cool

00:01:21,310 --> 00:01:26,140
how many of you read by a show of hands

00:01:24,130 --> 00:01:29,079
have heard this phrase you don't need

00:01:26,140 --> 00:01:31,390
comments if you write clean code yeah

00:01:29,079 --> 00:01:34,299
almost everybody so this is where I

00:01:31,390 --> 00:01:37,810
think a lot of misconceptions lie in the

00:01:34,299 --> 00:01:40,570
book the clean code by Robert C Martin

00:01:37,810 --> 00:01:42,490
he talks about how comments shouldn't be

00:01:40,570 --> 00:01:44,890
necessary because code should be self

00:01:42,490 --> 00:01:45,759
documenting that if you feel a comment

00:01:44,890 --> 00:01:47,950
is necessary

00:01:45,759 --> 00:01:53,799
you should rewrite it to be more legible

00:01:47,950 --> 00:01:55,780
I both agree and disagree with this in

00:01:53,799 --> 00:01:57,310
the process of writing a comment you can

00:01:55,780 --> 00:01:59,799
often find things that could be written

00:01:57,310 --> 00:02:02,200
better but it's not an either/or I might

00:01:59,799 --> 00:02:04,600
still be able to rewrite that comment to

00:02:02,200 --> 00:02:06,579
be more self documenting and also write

00:02:04,600 --> 00:02:10,420
a comment as well for the following

00:02:06,579 --> 00:02:13,090
reason code can describe how but it

00:02:10,420 --> 00:02:15,520
cannot explain why now this isn't a new

00:02:13,090 --> 00:02:17,500
premise at all but it's a common theme

00:02:15,520 --> 00:02:19,810
that I see in helpful comments that I've

00:02:17,500 --> 00:02:21,340
come across the ability to communicate

00:02:19,810 --> 00:02:24,819
something that code can

00:02:21,340 --> 00:02:28,030
or can't precisely and all of that said

00:02:24,819 --> 00:02:30,849
there's not just one way or right or

00:02:28,030 --> 00:02:33,340
correct way to write a comment I believe

00:02:30,849 --> 00:02:37,390
that our collective discourse about code

00:02:33,340 --> 00:02:39,640
comments is far too shallow there are

00:02:37,390 --> 00:02:41,080
good comments and there are bad comments

00:02:39,640 --> 00:02:43,239
they can make our code bases more

00:02:41,080 --> 00:02:45,519
legible and they can mislead us they can

00:02:43,239 --> 00:02:47,980
guide us and they can be a crutch so for

00:02:45,519 --> 00:02:50,730
that reason today we're going to be

00:02:47,980 --> 00:02:53,709
talking about the art of code comments

00:02:50,730 --> 00:02:55,930
I'm Sara Dresner I am a View korma

00:02:53,709 --> 00:02:57,940
member of view I also am head of

00:02:55,930 --> 00:03:00,280
developer experience at nella Phi which

00:02:57,940 --> 00:03:03,879
is neither Netflix or Shopify as

00:03:00,280 --> 00:03:06,099
confusing as it is for my parents it is

00:03:03,879 --> 00:03:08,170
a really awesome way to deploy sites and

00:03:06,099 --> 00:03:10,870
apps that I love that's why I asked them

00:03:08,170 --> 00:03:13,109
if I could work there so I'm really

00:03:10,870 --> 00:03:15,430
pleased to be to be with you all today

00:03:13,109 --> 00:03:17,709
especially in Hawaii I'm sure we all I

00:03:15,430 --> 00:03:18,310
appreciate the gap day yesterday that

00:03:17,709 --> 00:03:20,349
was awesome

00:03:18,310 --> 00:03:21,910
so I mentioned there's some nuance to

00:03:20,349 --> 00:03:23,260
this there's good comments and there's

00:03:21,910 --> 00:03:25,480
bad comments so we're gonna go over both

00:03:23,260 --> 00:03:29,139
of them we're gonna start with the good

00:03:25,480 --> 00:03:31,389
comments first what is the why many

00:03:29,139 --> 00:03:34,060
examples of good comments can be housed

00:03:31,389 --> 00:03:35,739
under this category code explains what

00:03:34,060 --> 00:03:37,090
you'd like the computer to take action

00:03:35,739 --> 00:03:38,950
on and you'll hear people talk about

00:03:37,090 --> 00:03:41,079
declarative code where they're saying

00:03:38,950 --> 00:03:42,700
rather than you know imperative code

00:03:41,079 --> 00:03:44,500
where things are steps in a recipe

00:03:42,700 --> 00:03:46,510
you're basically telling the computer

00:03:44,500 --> 00:03:49,030
what you want it to do in the computer

00:03:46,510 --> 00:03:52,239
does the heavy lifting well our comments

00:03:49,030 --> 00:03:53,680
can also be more complete Clara t'v we

00:03:52,239 --> 00:03:55,599
had to write this function because the

00:03:53,680 --> 00:03:58,060
browser interprets everything is a box

00:03:55,599 --> 00:04:00,489
this code doesn't describe what the code

00:03:58,060 --> 00:04:02,620
below it will do it doesn't describe the

00:04:00,489 --> 00:04:04,840
actions that we'll take if you found a

00:04:02,620 --> 00:04:07,209
more elegant way of writing this you'd

00:04:04,840 --> 00:04:08,829
feel confident that you could do you

00:04:07,209 --> 00:04:11,260
could refactor it and because of this

00:04:08,829 --> 00:04:13,239
less maintenance is required in order to

00:04:11,260 --> 00:04:15,579
keep these comments around so if you

00:04:13,239 --> 00:04:17,320
found a better way to write this you

00:04:15,579 --> 00:04:19,720
probably wouldn't have to rewrite this

00:04:17,320 --> 00:04:22,150
comment I think the funniest version of

00:04:19,720 --> 00:04:24,610
this is from the former manager of react

00:04:22,150 --> 00:04:26,979
course Sophie Alpert posted this this

00:04:24,610 --> 00:04:30,430
comment is longer than the readme to

00:04:26,979 --> 00:04:33,219
some of my repos the only piece of code

00:04:30,430 --> 00:04:34,310
is that tiny little bit at the bottom

00:04:33,219 --> 00:04:36,110
there

00:04:34,310 --> 00:04:38,479
but this you know all of that

00:04:36,110 --> 00:04:41,180
explanation was really necessary why

00:04:38,479 --> 00:04:43,759
because it was a particularly nasty code

00:04:41,180 --> 00:04:46,580
bit of code that and bug that she spent

00:04:43,759 --> 00:04:48,440
a really long time debugging and so it

00:04:46,580 --> 00:04:50,300
wasn't very straightforward and just

00:04:48,440 --> 00:04:53,240
that one line of code doesn't express

00:04:50,300 --> 00:04:56,930
all of the things that that one piece of

00:04:53,240 --> 00:04:59,090
code does it can also clarify what's not

00:04:56,930 --> 00:05:00,919
lit typically legible by humans

00:04:59,090 --> 00:05:03,289
remember the user-agent thing that we

00:05:00,919 --> 00:05:04,849
saw before that wasn't super legible

00:05:03,289 --> 00:05:09,199
what about this does anybody know what

00:05:04,849 --> 00:05:12,530
this does right this does anybody know

00:05:09,199 --> 00:05:15,080
what this does probably not this targets

00:05:12,530 --> 00:05:18,349
Firefox versions two to three this

00:05:15,080 --> 00:05:20,840
targets Chrome Safari and opera I've

00:05:18,349 --> 00:05:23,389
written code that needs something like

00:05:20,840 --> 00:05:25,849
this and in order to avoid another

00:05:23,389 --> 00:05:27,380
maintainer or future me assuming I took

00:05:25,849 --> 00:05:29,000
some mushrooms on the way to work it's

00:05:27,380 --> 00:05:31,699
great to tell people what the heck

00:05:29,000 --> 00:05:34,159
that's for especially in preparation for

00:05:31,699 --> 00:05:36,919
a time when you no longer need it maybe

00:05:34,159 --> 00:05:38,659
they solve that browser issue or maybe

00:05:36,919 --> 00:05:41,539
you're not supporting that browser

00:05:38,659 --> 00:05:43,539
anymore and you can remove it who's

00:05:41,539 --> 00:05:49,759
smart we are

00:05:43,539 --> 00:05:50,900
who writes clean code we do it but you

00:05:49,759 --> 00:05:53,120
don't have to look at you don't have to

00:05:50,900 --> 00:05:55,550
comment look at how clear your code is

00:05:53,120 --> 00:05:57,919
but think back to that first exercise we

00:05:55,550 --> 00:06:00,560
did we weren't all on the same page

00:05:57,919 --> 00:06:03,620
about what was clean the room was

00:06:00,560 --> 00:06:06,680
divided at 50/50 on what was clean and

00:06:03,620 --> 00:06:08,449
what wasn't people don't always agree on

00:06:06,680 --> 00:06:10,610
these things and it's can be really

00:06:08,449 --> 00:06:13,159
subjective and you can always assume

00:06:10,610 --> 00:06:15,229
that what you're doing is the most clean

00:06:13,159 --> 00:06:16,310
way of representing it but that even

00:06:15,229 --> 00:06:18,380
changes over time

00:06:16,310 --> 00:06:20,330
the code that I think is clean was clean

00:06:18,380 --> 00:06:22,190
five years ago is not what I think is

00:06:20,330 --> 00:06:24,349
clean today and you level up in

00:06:22,190 --> 00:06:26,090
different ways another thing is that

00:06:24,349 --> 00:06:27,979
we're all knowledgeable in different

00:06:26,090 --> 00:06:29,630
ways if you're on a team where

00:06:27,979 --> 00:06:31,610
everybody's skill set is more tightly

00:06:29,630 --> 00:06:33,349
tightly knit you might have more

00:06:31,610 --> 00:06:35,330
overlaps for what you think is clean you

00:06:33,349 --> 00:06:37,909
might be more on the same page so maybe

00:06:35,330 --> 00:06:40,370
this isn't as much of an issue but on a

00:06:37,909 --> 00:06:43,550
team where the skill sets are more of a

00:06:40,370 --> 00:06:45,139
Venn diagram you might not have the same

00:06:43,550 --> 00:06:46,840
opinions might not have the same

00:06:45,139 --> 00:06:48,910
background and that's okay it

00:06:46,840 --> 00:06:51,160
look like I'm advocating for the smaller

00:06:48,910 --> 00:06:53,550
skill set circle but look at how much

00:06:51,160 --> 00:06:56,440
more ground this covers you have a

00:06:53,550 --> 00:06:58,990
larger spread of expertise when you have

00:06:56,440 --> 00:07:01,180
a team that looks like this or say you

00:06:58,990 --> 00:07:02,919
get junior developers on your project on

00:07:01,180 --> 00:07:04,960
bigger teams where you have a lot of

00:07:02,919 --> 00:07:07,030
junior developers and engineers from all

00:07:04,960 --> 00:07:08,560
types of backgrounds people might not

00:07:07,030 --> 00:07:10,030
outright tell you that they need you to

00:07:08,560 --> 00:07:13,720
comment but a lot of times they'll

00:07:10,030 --> 00:07:15,790
express gratitude when you do comments

00:07:13,720 --> 00:07:17,590
can be like chapters of a book if you

00:07:15,790 --> 00:07:19,419
think of a book it's the same amount of

00:07:17,590 --> 00:07:22,870
information whether you have paragraphs

00:07:19,419 --> 00:07:25,780
or chapters or indexes but we split

00:07:22,870 --> 00:07:27,610
those up why so that you can skim easier

00:07:25,780 --> 00:07:29,650
so that you can pick things back up if

00:07:27,610 --> 00:07:32,710
you've been out gone from time away and

00:07:29,650 --> 00:07:34,720
that's true of our code - commenting or

00:07:32,710 --> 00:07:36,910
section sections of code allows people

00:07:34,720 --> 00:07:39,190
to get to the piece that's most relevant

00:07:36,910 --> 00:07:41,229
to them but you might say we have

00:07:39,190 --> 00:07:43,300
imports and modules and functional

00:07:41,229 --> 00:07:45,490
programming absolutely that is awesome

00:07:43,300 --> 00:07:48,250
and I'm so excited about that but

00:07:45,490 --> 00:07:50,169
necessarily there's gonna be a time when

00:07:48,250 --> 00:07:53,320
you get to a larger piece of code that

00:07:50,169 --> 00:07:55,000
just has to exist sometimes commenting

00:07:53,320 --> 00:07:56,830
different sections or making some

00:07:55,000 --> 00:08:00,280
separation can help people find their

00:07:56,830 --> 00:08:02,220
way more quickly a guide to keep the

00:08:00,280 --> 00:08:04,419
logic straight while writing the code

00:08:02,220 --> 00:08:06,610
sometimes I do this thing where if I

00:08:04,419 --> 00:08:08,440
have a you know a big project where I'm

00:08:06,610 --> 00:08:10,030
managing a ton of state from a bunch of

00:08:08,440 --> 00:08:11,889
different things I'll write something

00:08:10,030 --> 00:08:13,870
like this out get the request for the

00:08:11,889 --> 00:08:15,580
server give us an error if it failed do

00:08:13,870 --> 00:08:17,650
X thing with a request format the data

00:08:15,580 --> 00:08:19,539
slit like so and so on and so forth just

00:08:17,650 --> 00:08:21,130
making a long to-do list of little

00:08:19,539 --> 00:08:23,919
sections so that I can break down my

00:08:21,130 --> 00:08:25,960
tasks now these are weird one because

00:08:23,919 --> 00:08:27,910
these aren't the kind of comments you

00:08:25,960 --> 00:08:29,680
want to keep around if you keep them

00:08:27,910 --> 00:08:31,450
around they can be misleading and we'll

00:08:29,680 --> 00:08:33,190
get to that in a minute but they're

00:08:31,450 --> 00:08:35,050
really helpful while you're writing the

00:08:33,190 --> 00:08:39,159
code so you can break your tasks down

00:08:35,050 --> 00:08:41,020
into smaller bits so in the process of

00:08:39,159 --> 00:08:43,330
writing all of this code it can be

00:08:41,020 --> 00:08:45,940
really helpful to write it like this but

00:08:43,330 --> 00:08:47,770
then you should probably be remove it

00:08:45,940 --> 00:08:49,930
because when left in your code as is

00:08:47,770 --> 00:08:53,260
these comments can be a little screwy to

00:08:49,930 --> 00:08:54,910
read later my perfect world suggestion

00:08:53,260 --> 00:08:56,800
would be to use these comments at the

00:08:54,910 --> 00:08:58,810
time of writing and then revisit them

00:08:56,800 --> 00:09:00,740
after as you delete them you can ask

00:08:58,810 --> 00:09:02,690
yourself does this do this

00:09:00,740 --> 00:09:04,310
the most elegant way that I could is

00:09:02,690 --> 00:09:06,560
there are not another comment that I

00:09:04,310 --> 00:09:09,050
could write that might explain why this

00:09:06,560 --> 00:09:11,060
is necessary what would I think is most

00:09:09,050 --> 00:09:14,720
useful to express to another from

00:09:11,060 --> 00:09:17,480
another mother this is okay Dora Factor

00:09:14,720 --> 00:09:19,850
now this is an interesting one this

00:09:17,480 --> 00:09:22,850
isn't this isn't my best work but we had

00:09:19,850 --> 00:09:25,010
to get it in by the deadline how many of

00:09:22,850 --> 00:09:28,760
you had have had a really aggressive

00:09:25,010 --> 00:09:30,560
product deadline most of you okay maybe

00:09:28,760 --> 00:09:33,080
you implemented a feature that you

00:09:30,560 --> 00:09:34,760
yourself disagreed with and you were

00:09:33,080 --> 00:09:37,100
like I don't know about this and there

00:09:34,760 --> 00:09:40,790
are like oh don't worry it's an a/b test

00:09:37,100 --> 00:09:43,850
or don't worry don't worry it's just

00:09:40,790 --> 00:09:48,980
temporary and then it lived on forever

00:09:43,850 --> 00:09:50,810
ever queue horror music as embarrassing

00:09:48,980 --> 00:09:53,330
as it is to write a comment like this

00:09:50,810 --> 00:09:55,339
sometimes it's super helpful as a

00:09:53,330 --> 00:09:57,470
maintainer if I come across a comment

00:09:55,339 --> 00:09:58,850
like this I'm not thinking like what's

00:09:57,470 --> 00:10:02,290
wrong with this person how can I

00:09:58,850 --> 00:10:02,290
sabotage their morning community I

00:10:02,450 --> 00:10:06,649
I'm thinking okay I know that they were

00:10:05,240 --> 00:10:08,270
probably under a lot of pressure and

00:10:06,649 --> 00:10:10,579
it's okay for me to refactor I don't

00:10:08,270 --> 00:10:12,529
even spend that much time thinking

00:10:10,579 --> 00:10:14,480
through their process I'm all about like

00:10:12,529 --> 00:10:17,060
alright let's get in the mode where I

00:10:14,480 --> 00:10:18,950
can improve on this so that can be

00:10:17,060 --> 00:10:21,589
really helpful for a maintainer I will

00:10:18,950 --> 00:10:23,690
say don't use this as a crutch though

00:10:21,589 --> 00:10:26,779
you can't just put this on every block

00:10:23,690 --> 00:10:28,070
of code and call it a day right so but

00:10:26,779 --> 00:10:31,430
it can be helpful to let other people

00:10:28,070 --> 00:10:32,120
know what's going on commenting as a

00:10:31,430 --> 00:10:34,310
teaching tool

00:10:32,120 --> 00:10:35,570
are you a node shop that's been given a

00:10:34,310 --> 00:10:37,640
client that's all Ruby

00:10:35,570 --> 00:10:39,410
maybe it's totally standard Ruby but

00:10:37,640 --> 00:10:41,779
everyone's in a little over their head

00:10:39,410 --> 00:10:44,510
are you writing a tutorial for someone

00:10:41,779 --> 00:10:47,209
these are limited examples when writing

00:10:44,510 --> 00:10:49,370
out the how can actually be helpful the

00:10:47,209 --> 00:10:51,649
person is literally learning on the spot

00:10:49,370 --> 00:10:53,390
and might not be able to in just infer

00:10:51,649 --> 00:10:55,910
something because they've never seen

00:10:53,390 --> 00:10:58,459
that code before in their lives comment

00:10:55,910 --> 00:11:00,980
that learning is humbling enough as

00:10:58,459 --> 00:11:02,750
it is without them having to ask aloud

00:11:00,980 --> 00:11:06,260
what you could they could more easily

00:11:02,750 --> 00:11:07,610
infer on their own commenting doesn't

00:11:06,260 --> 00:11:10,040
just have to be a teaching tool either

00:11:07,610 --> 00:11:11,630
this this person did a really cool thing

00:11:10,040 --> 00:11:13,610
where they held themselves accountable

00:11:11,630 --> 00:11:16,279
for a tutorial by commenting

00:11:13,610 --> 00:11:18,440
above every line of code exactly what it

00:11:16,279 --> 00:11:20,089
was doing that's awesome he's holding

00:11:18,440 --> 00:11:22,519
himself accountable for learning that

00:11:20,089 --> 00:11:25,010
material line by line so it can be a way

00:11:22,519 --> 00:11:26,690
for you to also you know keep yourself

00:11:25,010 --> 00:11:30,680
accountable for what you're learning and

00:11:26,690 --> 00:11:34,940
teaching as well I stack overflowed the

00:11:30,680 --> 00:11:38,320
bejesus out of this did you just copy a

00:11:34,940 --> 00:11:41,690
whole block of code from Stack Overflow

00:11:38,320 --> 00:11:42,890
that's ok we've all been there something

00:11:41,690 --> 00:11:45,260
that I've done that saved me in the past

00:11:42,890 --> 00:11:47,149
is to put a link from where I got it

00:11:45,260 --> 00:11:48,800
where I found it and so many times

00:11:47,149 --> 00:11:50,329
people say to me but then I don't get

00:11:48,800 --> 00:11:52,399
credit for writing that code and I would

00:11:50,329 --> 00:11:53,149
tell them you're optimizing for the

00:11:52,399 --> 00:11:55,220
wrong thing

00:11:53,149 --> 00:11:57,950
inevitably people have different coding

00:11:55,220 --> 00:12:00,950
styles and this is important because

00:11:57,950 --> 00:12:02,899
what if you level up later what if

00:12:00,950 --> 00:12:04,010
you're smarter later on and you revisit

00:12:02,899 --> 00:12:05,600
this block of code and it's in a

00:12:04,010 --> 00:12:08,300
completely different style than you're

00:12:05,600 --> 00:12:09,860
used to and you actually know more you

00:12:08,300 --> 00:12:11,839
might spend a lot of time sitting there

00:12:09,860 --> 00:12:14,360
going wait why did I write it like this

00:12:11,839 --> 00:12:16,820
when I know X is true another thing is

00:12:14,360 --> 00:12:19,010
Stack Overflow is got a lot of traffic

00:12:16,820 --> 00:12:20,510
you might go to that post later and find

00:12:19,010 --> 00:12:23,390
out there's a better response that

00:12:20,510 --> 00:12:25,279
happens all the time so this is a really

00:12:23,390 --> 00:12:27,850
good way of for you to keep track of

00:12:25,279 --> 00:12:30,800
those things as you move forward

00:12:27,850 --> 00:12:32,570
comments can be really helpful April

00:12:30,800 --> 00:12:36,079
Wenzel wrote this really awesome post

00:12:32,570 --> 00:12:38,390
called it's time to retire RTFM and this

00:12:36,079 --> 00:12:41,209
is why I think it's useful to add these

00:12:38,390 --> 00:12:44,360
comments sometimes she makes a really

00:12:41,209 --> 00:12:46,490
good point in this that in tech we get

00:12:44,360 --> 00:12:48,680
comfortable with a sort of survivorship

00:12:46,490 --> 00:12:50,630
bias and what I mean by that is well I

00:12:48,680 --> 00:12:52,970
had to go through it so you have to go

00:12:50,630 --> 00:12:55,699
through it too but the job of a senior

00:12:52,970 --> 00:12:57,769
engineer the job of a more advanced

00:12:55,699 --> 00:13:00,769
engineer is to make sure that the other

00:12:57,769 --> 00:13:02,420
team can scale efficiently the job of a

00:13:00,769 --> 00:13:04,610
senior engineer is to make sure that

00:13:02,420 --> 00:13:06,680
everyone else can get going and be as

00:13:04,610 --> 00:13:09,019
productive as humanly possible and

00:13:06,680 --> 00:13:13,190
sometimes comments can help with that

00:13:09,019 --> 00:13:15,440
and that means helping not letting

00:13:13,190 --> 00:13:19,070
leaving people on their own if you know

00:13:15,440 --> 00:13:21,589
the path all right let's say going into

00:13:19,070 --> 00:13:23,209
the bad writing comments gets a bad rap

00:13:21,589 --> 00:13:26,149
sometimes and that's because bad

00:13:23,209 --> 00:13:27,139
comments exist so let's talk about some

00:13:26,149 --> 00:13:29,179
ways

00:13:27,139 --> 00:13:32,499
we can avoid doing this while writing

00:13:29,179 --> 00:13:35,149
them they just saying what it's already

00:13:32,499 --> 00:13:36,619
doing I think a lot of people get

00:13:35,149 --> 00:13:38,660
frustrated because they see comments

00:13:36,619 --> 00:13:41,209
like this stuff like this is a big pain

00:13:38,660 --> 00:13:44,329
why because you're reading the same

00:13:41,209 --> 00:13:46,459
thing twice in two different formats it

00:13:44,329 --> 00:13:48,379
gives you no more information and in

00:13:46,459 --> 00:13:50,989
fact it makes you process things twice

00:13:48,379 --> 00:13:53,149
it's mental overhead rather than helpful

00:13:50,989 --> 00:13:54,769
I've written comments like this but for

00:13:53,149 --> 00:13:56,419
whatever the reason you have to take a

00:13:54,769 --> 00:13:58,879
step back and be honest with yourself

00:13:56,419 --> 00:14:01,749
and acknowledge that this comment isn't

00:13:58,879 --> 00:14:05,239
helpful from a readers perspective it

00:14:01,749 --> 00:14:07,279
wasn't well maintained bad documentation

00:14:05,239 --> 00:14:09,139
can be worse than no documentation

00:14:07,279 --> 00:14:11,569
there's no nothing more frustrating than

00:14:09,139 --> 00:14:13,819
coming across a block of code where a

00:14:11,569 --> 00:14:15,529
comment says something other than what

00:14:13,819 --> 00:14:17,119
the code beneath it does and I think

00:14:15,529 --> 00:14:19,299
that that really frustrates people and

00:14:17,119 --> 00:14:22,730
they tend to get in the comments or bad

00:14:19,299 --> 00:14:26,149
area but the comment is in your code

00:14:22,730 --> 00:14:27,949
it's your job to work on it even if it

00:14:26,149 --> 00:14:29,119
means deleting it so I think sometimes

00:14:27,949 --> 00:14:31,759
people see comments and they're like

00:14:29,119 --> 00:14:33,439
well that's optional that's not you know

00:14:31,759 --> 00:14:35,600
I'm working on the code I don't really

00:14:33,439 --> 00:14:37,730
have to you know mess around with the

00:14:35,600 --> 00:14:39,439
comments here but the comment is

00:14:37,730 --> 00:14:41,720
literally part of your code and you're

00:14:39,439 --> 00:14:44,689
also trying not to you know mess up the

00:14:41,720 --> 00:14:46,519
people who come after you so even if you

00:14:44,689 --> 00:14:48,499
disagree with code comments and you see

00:14:46,519 --> 00:14:50,269
a code comment just get rid of it if you

00:14:48,499 --> 00:14:51,739
don't want to maintain it otherwise you

00:14:50,269 --> 00:14:53,809
should be maintaining that along with

00:14:51,739 --> 00:14:56,419
the code if you don't

00:14:53,809 --> 00:14:58,399
it's worse than time-wasting it's

00:14:56,419 --> 00:15:01,790
misleading it can lead people down the

00:14:58,399 --> 00:15:04,220
wrong path if you write your code to be

00:15:01,790 --> 00:15:06,860
good quality to begin with that express

00:15:04,220 --> 00:15:09,019
the why and not the how you might find

00:15:06,860 --> 00:15:11,749
that the maintenance issue actually goes

00:15:09,019 --> 00:15:13,339
away so if we say we need to use the

00:15:11,749 --> 00:15:16,220
flip technique to be more performant in

00:15:13,339 --> 00:15:18,259
every browser if you switch it the code

00:15:16,220 --> 00:15:20,600
from using get bound and client wrecked

00:15:18,259 --> 00:15:22,369
to get Bbox which do similar but

00:15:20,600 --> 00:15:24,799
different things because you didn't

00:15:22,369 --> 00:15:27,019
write out the how you're not gonna have

00:15:24,799 --> 00:15:29,029
to read rewrite everything you're

00:15:27,019 --> 00:15:32,359
actually using the same thing because

00:15:29,029 --> 00:15:34,759
that comment is expressing the why so

00:15:32,359 --> 00:15:36,559
then you don't have to refactor the code

00:15:34,759 --> 00:15:38,670
comments as well if you write really

00:15:36,559 --> 00:15:43,330
clean code comments

00:15:38,670 --> 00:15:48,640
orders but for code you changed

00:15:43,330 --> 00:15:50,710
something you changed something you know

00:15:48,640 --> 00:15:54,910
you like the new code but you just can't

00:15:50,710 --> 00:15:56,470
quite get rid of that old code yet this

00:15:54,910 --> 00:15:57,970
one's tricky because if you're not sure

00:15:56,470 --> 00:15:59,650
if you're done yet it's okay to keep

00:15:57,970 --> 00:16:02,020
these in because maybe you do need to

00:15:59,650 --> 00:16:04,960
keep it in and use it again later but

00:16:02,020 --> 00:16:07,090
hopefully hopefully you're all working

00:16:04,960 --> 00:16:09,880
with version control and you're all

00:16:07,090 --> 00:16:12,550
writing good commit messages so those

00:16:09,880 --> 00:16:14,260
comments those pieces of code that

00:16:12,550 --> 00:16:16,720
you're commenting should be retrievable

00:16:14,260 --> 00:16:19,150
for you you should be able to look back

00:16:16,720 --> 00:16:20,950
at the thing that you refactored and be

00:16:19,150 --> 00:16:23,980
able to see what you refactored and

00:16:20,950 --> 00:16:25,660
retrieve them if you don't and you move

00:16:23,980 --> 00:16:28,060
away from the project in the future the

00:16:25,660 --> 00:16:30,010
future you or your future teammates will

00:16:28,060 --> 00:16:32,590
spend a few minutes trying to figure out

00:16:30,010 --> 00:16:34,990
what went on here do we need this will

00:16:32,590 --> 00:16:37,240
we need this it's time wasting to do

00:16:34,990 --> 00:16:40,030
this to people trust your instincts and

00:16:37,240 --> 00:16:42,580
your version control system get rid of

00:16:40,030 --> 00:16:45,310
it you could have used a better name

00:16:42,580 --> 00:16:46,840
I've done this before I've definitely

00:16:45,310 --> 00:16:48,580
seen a lot of other people write code

00:16:46,840 --> 00:16:51,340
like this before where the variable or

00:16:48,580 --> 00:16:54,160
functions names are one letter and then

00:16:51,340 --> 00:16:57,340
you comment what the thing is here in

00:16:54,160 --> 00:16:59,590
the file this is a waste I know we all

00:16:57,340 --> 00:17:01,780
hate typing but if you're using or a

00:16:59,590 --> 00:17:03,790
variable or a function name repeatedly I

00:17:01,780 --> 00:17:05,980
don't want to scan up the whole document

00:17:03,790 --> 00:17:07,870
where you explained what the name did

00:17:05,980 --> 00:17:10,180
where you could just use the name

00:17:07,870 --> 00:17:13,650
precisely I can read this code now

00:17:10,180 --> 00:17:16,570
previously I couldn't if I go back here

00:17:13,650 --> 00:17:18,490
but if I look at this okay I know what

00:17:16,570 --> 00:17:20,890
everything does right away that's much

00:17:18,490 --> 00:17:23,140
more useful and much more legible and if

00:17:20,890 --> 00:17:25,090
you're writing those comments to explain

00:17:23,140 --> 00:17:28,840
what a name can do you're not naming

00:17:25,090 --> 00:17:30,610
correctly I love this tweet by Mike care

00:17:28,840 --> 00:17:32,140
I like the rule in functional

00:17:30,610 --> 00:17:34,000
programming that if it's hard to name

00:17:32,140 --> 00:17:34,930
perhaps you're giving the function too

00:17:34,000 --> 00:17:37,000
much responsibility

00:17:34,930 --> 00:17:40,120
refactoring has helped me name and

00:17:37,000 --> 00:17:44,020
likewise trying to name has also made my

00:17:40,120 --> 00:17:45,910
function smaller the comments are an

00:17:44,020 --> 00:17:47,950
excuse for not writing the code better

00:17:45,910 --> 00:17:49,930
to begin with and this is the crux of

00:17:47,950 --> 00:17:51,610
the issue for a lot of people if you're

00:17:49,930 --> 00:17:52,060
writing code that's half hazard and

00:17:51,610 --> 00:17:54,610
you're

00:17:52,060 --> 00:17:56,410
leaning on your comments to clarify this

00:17:54,610 --> 00:17:58,570
means the comments are holding back your

00:17:56,410 --> 00:18:00,190
programming this is a kind of horse

00:17:58,570 --> 00:18:02,500
behind the cart scenario and

00:18:00,190 --> 00:18:04,240
unfortunately even as the author it's

00:18:02,500 --> 00:18:05,740
kind of hard to distinguish which is

00:18:04,240 --> 00:18:08,140
which is which when you're really

00:18:05,740 --> 00:18:11,470
getting going on a project we lie to

00:18:08,140 --> 00:18:13,330
ourselves in myriad ways we spend time

00:18:11,470 --> 00:18:15,670
writing a comment that could be better

00:18:13,330 --> 00:18:17,320
spent making the code a little cleaner

00:18:15,670 --> 00:18:19,180
to begin with we might also tell

00:18:17,320 --> 00:18:20,680
ourselves we don't need to comment our

00:18:19,180 --> 00:18:24,100
code because our code is so well written

00:18:20,680 --> 00:18:24,730
even if other people don't agree just do

00:18:24,100 --> 00:18:27,310
your best

00:18:24,730 --> 00:18:29,800
there's not one true way when you're

00:18:27,310 --> 00:18:32,470
writing comments it's not no comments or

00:18:29,800 --> 00:18:34,540
yes comments it's thoughtful comments

00:18:32,470 --> 00:18:36,550
that are good for the maintainer to read

00:18:34,540 --> 00:18:38,920
try to envision that you're both the

00:18:36,550 --> 00:18:41,350
author and the reader when you're

00:18:38,920 --> 00:18:43,990
looking at that code when you're writing

00:18:41,350 --> 00:18:45,940
your code you're both the person writing

00:18:43,990 --> 00:18:46,330
it and the person maintaining it in the

00:18:45,940 --> 00:18:48,850
future

00:18:46,330 --> 00:18:50,260
what information do you need to be as

00:18:48,850 --> 00:18:53,980
productive as possible

00:18:50,260 --> 00:18:56,680
what would a younger you need it said

00:18:53,980 --> 00:18:59,200
that 30% of time a developer's time is

00:18:56,680 --> 00:19:01,330
spent writing code and 70% is spent

00:18:59,200 --> 00:19:03,100
reading code my suggestion would be to

00:19:01,330 --> 00:19:05,260
spend a moment after you think you're

00:19:03,100 --> 00:19:07,210
done with a project and review with

00:19:05,260 --> 00:19:09,880
commenting and legibility in mind and

00:19:07,210 --> 00:19:12,250
I'll even submit PRS to myself when I

00:19:09,880 --> 00:19:13,840
work alone I work alone on a lot of open

00:19:12,250 --> 00:19:15,850
source projects I learned this from

00:19:13,840 --> 00:19:18,580
Stacey Kivar in MO and it really helps

00:19:15,850 --> 00:19:21,370
me look evaluate that code from a new

00:19:18,580 --> 00:19:22,930
from new eyes I write it as the person

00:19:21,370 --> 00:19:25,150
who's just trying to get this stuff done

00:19:22,930 --> 00:19:27,220
and then when I submit the pr2 myself I

00:19:25,150 --> 00:19:28,630
read it as a maintainer and someone who

00:19:27,220 --> 00:19:31,600
has to maintain the code later I

00:19:28,630 --> 00:19:34,390
encourage this practice more than one

00:19:31,600 --> 00:19:36,190
thing can be true at a time people tend

00:19:34,390 --> 00:19:38,080
to get on one side or the other of

00:19:36,190 --> 00:19:39,820
whether or not you should write comments

00:19:38,080 --> 00:19:42,330
but I would argue that the conversation

00:19:39,820 --> 00:19:44,800
isn't really nuanced enough why not both

00:19:42,330 --> 00:19:46,810
hopefully opening the floor to a deeper

00:19:44,800 --> 00:19:49,090
conversation about this can help you

00:19:46,810 --> 00:19:51,220
have write more meaningful comments and

00:19:49,090 --> 00:19:55,270
it bridges the gap even so it can be a

00:19:51,220 --> 00:19:57,130
lot to parse good anyways I'll leave you

00:19:55,270 --> 00:19:58,840
with some better humor a while back

00:19:57,130 --> 00:20:00,880
there was a Stack Overflow post where

00:19:58,840 --> 00:20:02,170
people wrote the best comments that

00:20:00,880 --> 00:20:04,480
they've ever seen and you can definitely

00:20:02,170 --> 00:20:05,370
waste some time in here here's some here

00:20:04,480 --> 00:20:07,740
some of them there

00:20:05,370 --> 00:20:09,390
we're really good when I wrote this only

00:20:07,740 --> 00:20:15,870
God and I understood what I was doing

00:20:09,390 --> 00:20:18,330
now only God knows I dedicate all this

00:20:15,870 --> 00:20:19,740
code all my work to my wife Darlene who

00:20:18,330 --> 00:20:21,300
will have to support me in our three

00:20:19,740 --> 00:20:28,400
children and the dog once it gets

00:20:21,300 --> 00:20:28,400
released into the hover drunk fix later

00:20:29,000 --> 00:20:37,800
burst of images are deleted by GDI plus

00:20:32,600 --> 00:20:39,960
second dev I'm not sure about that some

00:20:37,800 --> 00:20:42,190
dev one adding temporary tracking of

00:20:39,960 --> 00:20:48,150
login screen five years later

00:20:42,190 --> 00:20:48,150
[Laughter]

00:20:48,700 --> 00:20:52,820
I'll leave you with this example that I

00:20:50,900 --> 00:20:54,290
particularly like from Kelly Vaughan she

00:20:52,820 --> 00:20:55,700
tweeted this out saying sometimes you

00:20:54,290 --> 00:20:57,500
need to be your own cheerleader if you

00:20:55,700 --> 00:20:59,750
can't read it it says this is not a

00:20:57,500 --> 00:21:03,200
useful comment but you are useful and

00:20:59,750 --> 00:21:05,250
you can do this that's true for all of

00:21:03,200 --> 00:21:13,230
us - thank you so much

00:21:05,250 --> 00:21:13,230

YouTube URL: https://www.youtube.com/watch?v=yhF7OmuIILc


