Title: Hannes Diercks: Frontend Testing - JSUnconf 2016
Publication date: 2016-06-09
Playlist: JSUnconf 2016
Description: 
	
Captions: 
	00:00:12,760 --> 00:00:17,750
yeah thank you very much

00:00:15,040 --> 00:00:21,020
I'd like to start with a kind of

00:00:17,750 --> 00:00:22,910
question because as I said I didn't

00:00:21,020 --> 00:00:25,160
really prepare something and this would

00:00:22,910 --> 00:00:27,439
be a live coding session and so I'd like

00:00:25,160 --> 00:00:31,430
to know why what you're interested in

00:00:27,439 --> 00:00:36,110
and I show you two projects of mine who

00:00:31,430 --> 00:00:39,470
we can write tests for right now and one

00:00:36,110 --> 00:00:41,360
is a note project is that that's a

00:00:39,470 --> 00:00:45,140
helper for writing better commit

00:00:41,360 --> 00:00:48,050
messages you see I sneak in some parts

00:00:45,140 --> 00:00:53,090
of my part of my talk that has been

00:00:48,050 --> 00:01:00,080
rejected I show you how that works so I

00:00:53,090 --> 00:01:02,180
have a project here that's and add some

00:01:00,080 --> 00:01:05,990
community it's big enough can you read

00:01:02,180 --> 00:01:08,960
this ok I for the whole talk if you have

00:01:05,990 --> 00:01:11,630
anything any ideas anything how to make

00:01:08,960 --> 00:01:15,409
the think better if I should talk slower

00:01:11,630 --> 00:01:18,860
or you just want to say something or see

00:01:15,409 --> 00:01:23,060
an arrow i do just yell at me and feel

00:01:18,860 --> 00:01:31,670
free to interrupt that would be nice so

00:01:23,060 --> 00:01:35,120
I add the package Jason here and there's

00:01:31,670 --> 00:01:44,210
a tool called committed sin and I can

00:01:35,120 --> 00:01:49,130
say get it set and now here is proposing

00:01:44,210 --> 00:01:51,190
types for for this commit so the package

00:01:49,130 --> 00:01:53,780
Jason will probably show commit and

00:01:51,190 --> 00:01:57,860
that's on the package and now i can

00:01:53,780 --> 00:02:03,020
write something here I don't yeah I

00:01:57,860 --> 00:02:07,940
don't know basically the note package is

00:02:03,020 --> 00:02:10,489
a small tool that can help that's part

00:02:07,940 --> 00:02:14,480
of this chain to write better commit

00:02:10,489 --> 00:02:17,209
messages so in depth that's untested

00:02:14,480 --> 00:02:21,730
right now and we could write notes unit

00:02:17,209 --> 00:02:23,950
tests for that too the other thing is i

00:02:21,730 --> 00:02:34,180
work at gym no

00:02:23,950 --> 00:02:37,080
and we do have this UI library it looks

00:02:34,180 --> 00:02:40,420
like this it's basically a long list of

00:02:37,080 --> 00:02:44,769
how i can scroll somehow so a long list

00:02:40,420 --> 00:02:50,890
of patterns that we can use in our you

00:02:44,769 --> 00:02:53,410
is and I don't know if there's that's

00:02:50,890 --> 00:02:56,140
not really a use case but a lack of a

00:02:53,410 --> 00:02:59,650
better project to chest we could write

00:02:56,140 --> 00:03:03,040
some entry and chest for this library so

00:02:59,650 --> 00:03:11,019
basically we can switch from production

00:03:03,040 --> 00:03:14,290
to better state and see marcos for

00:03:11,019 --> 00:03:17,079
example and yeah we can basically use

00:03:14,290 --> 00:03:20,950
selenium to click on that and Maggie

00:03:17,079 --> 00:03:24,400
make some screenshots so that these are

00:03:20,950 --> 00:03:27,280
the two projects i propose and now by a

00:03:24,400 --> 00:03:33,760
sign of hand who would like to see you

00:03:27,280 --> 00:03:38,440
know chest 44 no project okay and enter

00:03:33,760 --> 00:03:49,889
and test for for another okay we do nain

00:03:38,440 --> 00:03:49,889
test i can close this

00:03:52,190 --> 00:04:06,350
I reset this commit so i won't go into

00:04:03,830 --> 00:04:11,270
the details of setting up this stuff

00:04:06,350 --> 00:04:14,720
because i use not that fancy new

00:04:11,270 --> 00:04:18,860
technology i will use Night Watch which

00:04:14,720 --> 00:04:22,520
is kind of a yeah and then not a hipster

00:04:18,860 --> 00:04:29,560
just new project that came up but some

00:04:22,520 --> 00:04:34,010
some good software that in my opinion is

00:04:29,560 --> 00:04:37,070
stable and I won't be really opinionated

00:04:34,010 --> 00:04:41,060
about what to use for for that stuff but

00:04:37,070 --> 00:04:45,740
instead I'd like to show you the

00:04:41,060 --> 00:04:49,250
concepts that I think you can apply on

00:04:45,740 --> 00:04:51,710
other frameworks like protractor or some

00:04:49,250 --> 00:04:54,770
new newer stuff so I worked a lot with

00:04:51,710 --> 00:04:56,780
projector for angular halves and s you

00:04:54,770 --> 00:05:01,070
might hurt all angular apps are now

00:04:56,780 --> 00:05:09,890
dying and we skip to react and stuff so

00:05:01,070 --> 00:05:12,820
a protractor is not that really think so

00:05:09,890 --> 00:05:12,820
let's go to Night Watch

00:05:16,720 --> 00:05:24,130
I prepared what i did is i installed

00:05:19,960 --> 00:05:27,490
Night Watch npm install Night Watch you

00:05:24,130 --> 00:05:34,050
can get it and installed a selenium

00:05:27,490 --> 00:05:38,710
helper that is called webdriver manager

00:05:34,050 --> 00:05:49,690
and that can help me to set up a

00:05:38,710 --> 00:05:52,480
selenium server locally here we go

00:05:49,690 --> 00:05:59,100
selenium service up and running so what

00:05:52,480 --> 00:05:59,100
we now can do is start the demo app I

00:06:02,160 --> 00:06:15,630
think I killed the summer so yeah that

00:06:07,090 --> 00:06:15,630
might take a little while and then

00:06:21,849 --> 00:06:25,960
Night Watch is testing something

00:06:35,770 --> 00:06:40,900
I'm not really sure but because the

00:06:37,840 --> 00:06:45,849
screen is so small maybe we can we will

00:06:40,900 --> 00:06:51,039
run into issues because of that but we

00:06:45,849 --> 00:06:53,319
will see no actually okay my first chest

00:06:51,039 --> 00:06:58,000
I prepared is passing so everything is

00:06:53,319 --> 00:07:02,259
fine here's what I did we have a Night

00:06:58,000 --> 00:07:07,870
Watch Jason oh that's a wrong project

00:07:02,259 --> 00:07:11,229
one moment we take this one he's a Night

00:07:07,870 --> 00:07:15,630
Watch Jason basically this is just cargo

00:07:11,229 --> 00:07:18,639
coding from the Night Watch home page

00:07:15,630 --> 00:07:22,780
interesting is that we connect to a

00:07:18,639 --> 00:07:26,650
selenium here so we started a selenium

00:07:22,780 --> 00:07:35,800
server and that's running on my local

00:07:26,650 --> 00:07:37,990
machine here on port 44 44 and here

00:07:35,800 --> 00:07:43,449
we're saying Night Watch to connect to

00:07:37,990 --> 00:07:45,669
you this that could be also some cloud

00:07:43,449 --> 00:07:49,750
service like sauce labs or browser stack

00:07:45,669 --> 00:07:54,610
or something anything that can that

00:07:49,750 --> 00:07:56,620
provides a selenium API and we are

00:07:54,610 --> 00:07:58,960
saying hey we want to use a chrome and

00:07:56,620 --> 00:08:04,060
the rest of this fire is pretty much

00:07:58,960 --> 00:08:06,159
just cargo coding setup here's my first

00:08:04,060 --> 00:08:08,590
test so basically what we're doing is

00:08:06,159 --> 00:08:12,699
we're assigning the browser to weigh

00:08:08,590 --> 00:08:16,800
more than you know can show us so every

00:08:12,699 --> 00:08:16,800
600 to 800 800 600

00:08:21,229 --> 00:08:33,209
then we want to test something so let's

00:08:24,389 --> 00:08:36,149
test the production check what we first

00:08:33,209 --> 00:08:39,089
need to do we tell the client to go on

00:08:36,149 --> 00:08:41,729
this website so that's exactly the one

00:08:39,089 --> 00:08:43,620
that I showed you here running on my

00:08:41,729 --> 00:08:47,910
local machine could be anywhere I could

00:08:43,620 --> 00:08:49,770
run this test against a production side

00:08:47,910 --> 00:08:55,770
icon could run it against Google or

00:08:49,770 --> 00:09:00,209
whatever and then I'm just asserting

00:08:55,770 --> 00:09:04,250
that there is an element with this CSS

00:09:00,209 --> 00:09:08,339
selector on the page it's a UI check

00:09:04,250 --> 00:09:10,920
that's active and I want to ensure that

00:09:08,339 --> 00:09:14,940
this is production so basically this

00:09:10,920 --> 00:09:20,250
would be a chest to ensure that we see

00:09:14,940 --> 00:09:24,870
this state when we land on this page it

00:09:20,250 --> 00:09:26,579
could be that some person things that

00:09:24,870 --> 00:09:29,339
would good would be good to it we have

00:09:26,579 --> 00:09:33,120
the beta enabled by default and then

00:09:29,339 --> 00:09:36,500
this check this chest would fail so if

00:09:33,120 --> 00:09:38,820
we say we would like to have the beta

00:09:36,500 --> 00:09:47,220
enabled by default and run the test

00:09:38,820 --> 00:09:51,990
again I can watch it here yeah and now

00:09:47,220 --> 00:09:56,670
it says hey the element was this

00:09:51,990 --> 00:10:00,149
selector contains the text beta that was

00:09:56,670 --> 00:10:05,149
our assertion but we got production so

00:10:00,149 --> 00:10:05,149
something is wrong

00:10:09,880 --> 00:10:17,360
it will but we actually want to have it

00:10:12,950 --> 00:10:21,230
to be production and now let's change

00:10:17,360 --> 00:10:25,340
that lets say hey what happens if we do

00:10:21,230 --> 00:10:27,320
this we land on the page we click this

00:10:25,340 --> 00:10:30,050
button and then we click this button now

00:10:27,320 --> 00:10:36,410
we want to have one to ensure that the

00:10:30,050 --> 00:10:49,100
beta button as a active it's simple as

00:10:36,410 --> 00:10:52,120
that we say click here now we should

00:10:49,100 --> 00:10:57,380
have a state where where there is no

00:10:52,120 --> 00:10:59,470
active check and then we click on the

00:10:57,380 --> 00:10:59,470
other

00:11:03,350 --> 00:11:10,580
check when I'm searching for a selector

00:11:05,420 --> 00:11:13,600
that we can actually click on you I take

00:11:10,580 --> 00:11:13,600
better looks promising

00:11:26,279 --> 00:11:36,240
and now we assert that this is Vita and

00:11:34,110 --> 00:11:39,300
in case you wonder I have a palace here

00:11:36,240 --> 00:11:43,499
just to have a chance to see the stage

00:11:39,300 --> 00:11:47,730
before the browser quits if we would run

00:11:43,499 --> 00:11:50,610
that in CI or some headless draw that is

00:11:47,730 --> 00:11:53,040
pretty much useless so we can skip that

00:11:50,610 --> 00:11:56,839
but right now it's kind of interesting

00:11:53,040 --> 00:12:01,410
to see the state that we are after

00:11:56,839 --> 00:12:12,089
having menu eadha manually clicked not

00:12:01,410 --> 00:12:16,579
manually click I rerun this and that

00:12:12,089 --> 00:12:18,959
word so these are our two assertions

00:12:16,579 --> 00:12:22,350
then we have production better and

00:12:18,959 --> 00:12:26,490
everything is fine I think you get the

00:12:22,350 --> 00:12:34,769
idea you can basically go crazy with

00:12:26,490 --> 00:12:36,300
this and we could yeah normally on the

00:12:34,769 --> 00:12:38,430
left side here would be a navigation we

00:12:36,300 --> 00:12:40,920
could check if the navigation works so

00:12:38,430 --> 00:12:44,519
we see the exact pattern that we

00:12:40,920 --> 00:12:47,250
navigated to we can check the context

00:12:44,519 --> 00:12:51,809
switch that we have here but i think

00:12:47,250 --> 00:12:54,750
that would be repetitive so let's dig a

00:12:51,809 --> 00:12:58,649
little bit into a regression visual

00:12:54,750 --> 00:13:02,670
regression stuff what we just recently

00:12:58,649 --> 00:13:05,309
did is to use exactly this tool to do

00:13:02,670 --> 00:13:13,679
then screenshots of this page so what we

00:13:05,309 --> 00:13:21,149
can do is say hey please screen shot

00:13:13,679 --> 00:13:28,879
here and i think i have to it's safe

00:13:21,149 --> 00:13:28,879
screenshot and i have to say beta

00:13:30,269 --> 00:13:36,810
something like that I don't actually

00:13:33,160 --> 00:13:36,810
know if this works that's chick

00:13:42,810 --> 00:13:44,870
you

00:13:49,490 --> 00:14:06,680
doesn't look like it and so them oh here

00:13:55,020 --> 00:14:09,900
it is nice we have a screenshot so and

00:14:06,680 --> 00:14:14,880
we could now take this screenshot and

00:14:09,900 --> 00:14:17,070
run some image analysis against it and

00:14:14,880 --> 00:14:20,160
compared with another to ensure that we

00:14:17,070 --> 00:14:23,070
made made few years ago and say hey we

00:14:20,160 --> 00:14:27,860
want to have want to ensure that there's

00:14:23,070 --> 00:14:31,710
no difference between this and that

00:14:27,860 --> 00:14:35,250
there are tools that do all that out of

00:14:31,710 --> 00:14:39,780
the box like phantom CSS and webdriver

00:14:35,250 --> 00:14:43,440
io problem is right now I feel that both

00:14:39,780 --> 00:14:49,320
of these projects are kind of not that

00:14:43,440 --> 00:14:53,010
stable State so that's why we used Night

00:14:49,320 --> 00:14:56,220
Watch but i highly recommend to to check

00:14:53,010 --> 00:14:59,280
for pro for projects that do all that

00:14:56,220 --> 00:15:03,360
out of the box before you try to to make

00:14:59,280 --> 00:15:11,640
come up with some solution for your own

00:15:03,360 --> 00:15:19,460
m so what's the time that was just a 50

00:15:11,640 --> 00:15:19,460
minutes ok what we do now any ideas

00:15:29,500 --> 00:15:38,660
that's a really good question I kind of

00:15:34,430 --> 00:15:41,420
hope that we just came into a situation

00:15:38,660 --> 00:15:46,060
where that happened and then I forgot

00:15:41,420 --> 00:15:48,950
about that thing so there are a

00:15:46,060 --> 00:15:54,290
synchronous things so maybe the web page

00:15:48,950 --> 00:15:57,260
will load some scripts after user

00:15:54,290 --> 00:15:59,570
clicked on a specific pattern or maybe

00:15:57,260 --> 00:16:01,820
you have a really big JavaScript app

00:15:59,570 --> 00:16:06,560
that just takes some time to calculate a

00:16:01,820 --> 00:16:09,080
state or whatever one thing I really

00:16:06,560 --> 00:16:12,500
loved about protector is that protractor

00:16:09,080 --> 00:16:17,360
can hook into angular and kind of asks

00:16:12,500 --> 00:16:21,170
angular if there is a state that that is

00:16:17,360 --> 00:16:22,880
stable so you can if you know a little

00:16:21,170 --> 00:16:25,370
bit of the insides of angular angular

00:16:22,880 --> 00:16:27,590
has this digest loops so basically

00:16:25,370 --> 00:16:31,160
whenever I click on a button angular

00:16:27,590 --> 00:16:35,980
just runs and waits for state where

00:16:31,160 --> 00:16:39,500
there's no change and with protractor

00:16:35,980 --> 00:16:41,420
these angular can tell hey I have a

00:16:39,500 --> 00:16:43,960
state where where I don't expect any

00:16:41,420 --> 00:16:47,960
changes and now you can make assertions

00:16:43,960 --> 00:16:49,850
um so and basically if you happen to

00:16:47,960 --> 00:16:51,740
work on an angular app i highly

00:16:49,850 --> 00:16:54,440
recommend to use project over because

00:16:51,740 --> 00:16:58,730
you normally don't need to think about

00:16:54,440 --> 00:17:01,940
that but let's just assume we are not a

00:16:58,730 --> 00:17:07,699
name on an angular app and we have some

00:17:01,940 --> 00:17:11,620
asynchronous stuff here so as you see

00:17:07,699 --> 00:17:15,220
when I read out that page maybe can

00:17:11,620 --> 00:17:15,220
throttle that a bit

00:17:20,970 --> 00:17:28,750
there's this loading screen and if I

00:17:26,829 --> 00:17:32,909
happen to make assertions by this

00:17:28,750 --> 00:17:32,909
loading screen is active normally what

00:17:33,360 --> 00:17:38,200
what selenium will say hey and this

00:17:36,640 --> 00:17:41,559
button that you try to click on it's not

00:17:38,200 --> 00:17:42,789
visible to me right now so right now if

00:17:41,559 --> 00:17:48,630
I click here nothing will happen because

00:17:42,789 --> 00:17:48,630
the button is not there and therefore

00:17:49,860 --> 00:17:57,059
mostly all so there's not not a nice

00:17:53,620 --> 00:18:01,840
what Night Watch specific thing most

00:17:57,059 --> 00:18:13,169
yeah most implementations for selenium

00:18:01,840 --> 00:18:23,250
do have such things I'm it's a wait for

00:18:13,169 --> 00:18:26,230
state so I could say hey um I know that

00:18:23,250 --> 00:18:29,320
when I go to this URL there's some kind

00:18:26,230 --> 00:18:33,519
of loading overlay or some asynchronous

00:18:29,320 --> 00:18:36,429
stuff and I could say hey let's wait

00:18:33,519 --> 00:18:40,559
until this loading overlay is not

00:18:36,429 --> 00:18:45,309
present I'm not visible would be another

00:18:40,559 --> 00:18:48,279
thing so the the difference between

00:18:45,309 --> 00:18:50,620
presence and visibility is basically an

00:18:48,279 --> 00:18:52,419
element could be on the page so the dumb

00:18:50,620 --> 00:18:55,929
notice on the page but it's on this

00:18:52,419 --> 00:18:58,450
plane on or hidden between after another

00:18:55,929 --> 00:19:00,909
element or something and in that case it

00:18:58,450 --> 00:19:03,760
wouldn't be visible and if that dumb

00:19:00,909 --> 00:19:11,110
mode simply doesn't exist it isn't

00:19:03,760 --> 00:19:15,029
present so let's try to figure out how

00:19:11,110 --> 00:19:15,029
that loading overlay

00:19:22,230 --> 00:19:28,350
if I just had watched the war and the

00:19:25,029 --> 00:19:28,350
talk about service workers yesterday

00:19:49,690 --> 00:19:58,950
it's just this loading class on the body

00:19:52,230 --> 00:20:12,360
so there was actually this one that was

00:19:58,950 --> 00:20:12,360
correct let's check if that works nope

00:20:21,530 --> 00:20:34,640
so he expected a second parameter on

00:20:24,300 --> 00:20:34,640
that I think it's a timeout

00:20:45,290 --> 00:20:51,560
okay yeah and that's not actually what

00:20:47,930 --> 00:20:54,380
we wanted but it's traits the the issue

00:20:51,560 --> 00:20:57,770
here because now we're getting an error

00:20:54,380 --> 00:21:04,760
that we timed out while waiting for the

00:20:57,770 --> 00:21:08,240
element loading to be present and we

00:21:04,760 --> 00:21:15,860
expected it to become not visible but it

00:21:08,240 --> 00:21:20,240
wasn't actually found so we need to

00:21:15,860 --> 00:21:24,130
ensure that this element where the

00:21:20,240 --> 00:21:27,020
selector loading is not present after we

00:21:24,130 --> 00:21:37,760
go to this website and wait for five

00:21:27,020 --> 00:21:41,990
seconds for at most five seconds okay

00:21:37,760 --> 00:21:45,110
here we go element loading was not

00:21:41,990 --> 00:21:50,140
present after 33 milliseconds and then

00:21:45,110 --> 00:21:50,140
all the rest of our sessions were okay

00:21:54,140 --> 00:22:05,070
that's a bit tricky because yes you can

00:21:59,430 --> 00:22:10,380
do that but maybe if you any made an

00:22:05,070 --> 00:22:12,660
element in the view and you say hey wait

00:22:10,380 --> 00:22:15,360
for this element to be to become visible

00:22:12,660 --> 00:22:20,520
it will be visible when it just enters

00:22:15,360 --> 00:22:23,520
the view a little bit so I know how

00:22:20,520 --> 00:22:25,560
angular is solving that and I don't know

00:22:23,520 --> 00:22:27,570
if I assume that other animation

00:22:25,560 --> 00:22:32,970
frameworks have another approach so I

00:22:27,570 --> 00:22:36,540
think if you have I guess jquery can do

00:22:32,970 --> 00:22:39,600
that too that you just manually inject

00:22:36,540 --> 00:22:42,840
the JavaScript into the page that sets

00:22:39,600 --> 00:22:46,140
all animations 20 so it just happened

00:22:42,840 --> 00:22:48,210
instantaneously that's the magic one of

00:22:46,140 --> 00:22:50,010
the testing magic behind angular animate

00:22:48,210 --> 00:22:52,380
and I think other animation framework

00:22:50,010 --> 00:22:54,660
can support something simular so the

00:22:52,380 --> 00:22:57,750
ideas that you just disable animations

00:22:54,660 --> 00:23:01,560
for inch and tests and what I just did

00:22:57,750 --> 00:23:04,950
in a case where I wasn't able to do that

00:23:01,560 --> 00:23:09,090
is work with palaces but that's not

00:23:04,950 --> 00:23:10,890
elegant so we checked what is the

00:23:09,090 --> 00:23:13,140
longest animation that we can expect and

00:23:10,890 --> 00:23:15,390
then when there was a state that we know

00:23:13,140 --> 00:23:17,700
here an animation is happening here we

00:23:15,390 --> 00:23:20,160
just waited for 500 milliseconds but I

00:23:17,700 --> 00:23:22,050
see that this is not a good nada not an

00:23:20,160 --> 00:23:27,620
elegant solution but it works for all in

00:23:22,050 --> 00:23:27,620
our case so

00:23:33,049 --> 00:23:40,970
no sorry the question was if I had

00:23:37,019 --> 00:23:44,370
problems with scroll events not really

00:23:40,970 --> 00:23:49,129
ran into problems why not try to scroll

00:23:44,370 --> 00:23:53,309
in phantom ge'ez because that kind of

00:23:49,129 --> 00:23:56,549
don't support scroll events but I

00:23:53,309 --> 00:24:00,539
haven't into that so we just

00:23:56,549 --> 00:24:04,909
didn't use phantom j/s then I think it

00:24:00,539 --> 00:24:07,259
would be possible somehow that we used

00:24:04,909 --> 00:24:10,259
native products or Firefox and Chrome

00:24:07,259 --> 00:24:13,590
for most parts and there the scrolling

00:24:10,259 --> 00:24:20,659
was we had no problems did you have any

00:24:13,590 --> 00:24:20,659
problems concretely or okay

00:24:24,809 --> 00:24:31,889
okay so the problem was with phantom Jas

00:24:29,220 --> 00:24:35,269
yeah I can relate to that but I haven't

00:24:31,889 --> 00:24:37,379
I don't have a good solution for that

00:24:35,269 --> 00:24:41,460
should we just continue with some

00:24:37,379 --> 00:25:01,070
questions or should any thing in that

00:24:41,460 --> 00:25:01,070
you want to see or I can show you the

00:25:02,779 --> 00:25:10,259
the visual regression stuff we did but

00:25:07,619 --> 00:25:14,419
as a disclaimer we didn't actually test

00:25:10,259 --> 00:25:16,529
it so right now that's just a tool that

00:25:14,419 --> 00:25:19,080
produces screenshots and we are in the

00:25:16,529 --> 00:25:20,999
process of using that screenshots to to

00:25:19,080 --> 00:25:23,309
actually test that against in other

00:25:20,999 --> 00:25:26,669
states so basically it's just what you

00:25:23,309 --> 00:25:30,899
just saw we are going on a page like

00:25:26,669 --> 00:25:33,179
this and clicking around two to produce

00:25:30,899 --> 00:25:35,490
a state that we want to test and then we

00:25:33,179 --> 00:25:37,769
make a screenshot of that and the next

00:25:35,490 --> 00:25:41,279
step would offer used to be be to have

00:25:37,769 --> 00:25:42,929
some kind of image dipping 20 to say hey

00:25:41,279 --> 00:25:47,909
we have a change and we don't have a

00:25:42,929 --> 00:25:49,679
change and the big question that is most

00:25:47,909 --> 00:25:55,019
of the parts not really solved in my

00:25:49,679 --> 00:25:56,369
opinion is how to say how to to come up

00:25:55,019 --> 00:26:00,389
with a state that we want to test

00:25:56,369 --> 00:26:03,720
against with so it's kind of easy to

00:26:00,389 --> 00:26:06,090
make a screenshot of a page but how do

00:26:03,720 --> 00:26:12,600
what's the state that we compared

00:26:06,090 --> 00:26:14,460
against so well if this runs on a Cir I

00:26:12,600 --> 00:26:16,889
have a pull request test that makes

00:26:14,460 --> 00:26:19,379
automated three shots what is the state

00:26:16,889 --> 00:26:20,610
that we want to achieve here I do a pull

00:26:19,379 --> 00:26:24,869
request because I want to change

00:26:20,610 --> 00:26:28,640
something and when the two were just

00:26:24,869 --> 00:26:31,340
said maybe it fails because it's

00:26:28,640 --> 00:26:35,960
hey the button that you just changed its

00:26:31,340 --> 00:26:39,140
now no red instead of green maybe that's

00:26:35,960 --> 00:26:45,830
exactly what I wanted to have so the big

00:26:39,140 --> 00:26:50,500
question is how how do do we create the

00:26:45,830 --> 00:26:50,500
input for the test so what's this date

00:26:58,210 --> 00:27:08,440
so when we are in a great point with

00:27:02,590 --> 00:27:08,440
lesson two young two of them the contest

00:27:10,110 --> 00:27:13,380
no sorry

00:27:14,290 --> 00:27:16,620
this

00:27:19,040 --> 00:27:28,460
okay so what was it anyway Galen yeah so

00:27:26,150 --> 00:27:31,490
there was just a comment about the Galen

00:27:28,460 --> 00:27:34,880
framework and I haven't had it looked at

00:27:31,490 --> 00:27:37,130
it but that what maybe that maybe in

00:27:34,880 --> 00:27:39,920
framework to solve exactly the issue

00:27:37,130 --> 00:27:42,290
that I just said and I have ideas on

00:27:39,920 --> 00:27:46,010
that and would like to talk about that

00:27:42,290 --> 00:27:48,700
but these are not in this presentable

00:27:46,010 --> 00:27:48,700

YouTube URL: https://www.youtube.com/watch?v=eQt39xpUc3s


