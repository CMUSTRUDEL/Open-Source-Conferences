Title: Opher Vishnia: Web Animation: from Disney to SASS | JSConf Budapest 2017
Publication date: 2017-12-01
Playlist: JSConf Budapest 2017
Description: 
	Staggered animation, also known as Follow through or Overlapping motion is one of the 12 principles of classical animation as defined by Disney. Itâ€™s a way of giving life to an object with some planning and minimal effort. In this talk I will present several ways of implementing this - with native CSS animations using SASS as well as with GSAP

http://jsconfbp.com/speakers/opher-vishnia/
Captions: 
	00:00:00,000 --> 00:00:08,639
Hey okay so I want to start by telling

00:00:04,830 --> 00:00:11,340
you a story about three and a half years

00:00:08,639 --> 00:00:11,929
ago me and my wife decided to adopt a

00:00:11,340 --> 00:00:16,170
puppy

00:00:11,929 --> 00:00:21,080
this is Blizzard and you know as time

00:00:16,170 --> 00:00:26,369
went by lizard grew larger fluffier

00:00:21,080 --> 00:00:29,550
larger still even larger and then winter

00:00:26,369 --> 00:00:32,480
came became horrible that roof and I'm

00:00:29,550 --> 00:00:36,059
going to show you a video of blizzard

00:00:32,480 --> 00:00:39,090
this is a very active and fun dog he

00:00:36,059 --> 00:00:43,290
like runs around like a devil jumping on

00:00:39,090 --> 00:00:45,930
stuff going here going there and in this

00:00:43,290 --> 00:00:49,050
video I'm going to show you I want you

00:00:45,930 --> 00:00:52,350
to look at his ears as he's jumping and

00:00:49,050 --> 00:00:55,440
if you can kind of figure out what goes

00:00:52,350 --> 00:00:57,960
on with his ears then you understand

00:00:55,440 --> 00:01:01,800
everything that I have to tell you about

00:00:57,960 --> 00:01:03,809
today so uh you guys ready you don't

00:01:01,800 --> 00:01:06,030
know you maybe you haven't had your

00:01:03,809 --> 00:01:09,420
coffee but like need you to be with me

00:01:06,030 --> 00:01:12,380
you guys ready okay we'll work on that

00:01:09,420 --> 00:01:12,380
okay

00:01:20,240 --> 00:01:27,930
awesome so thank you very much it's fine

00:01:25,680 --> 00:01:30,300
my name is offer I'm creative developer

00:01:27,930 --> 00:01:31,560
of the company called echo where I work

00:01:30,300 --> 00:01:33,960
on interactive videos

00:01:31,560 --> 00:01:36,300
what are interactive videos so remember

00:01:33,960 --> 00:01:38,280
as kids you had books where you'd really

00:01:36,300 --> 00:01:41,070
need to say if you want to save the

00:01:38,280 --> 00:01:42,810
princess go to page 91 and if you want

00:01:41,070 --> 00:01:45,030
to chill out and have some beer go to

00:01:42,810 --> 00:01:48,900
page 80 so that's the exact same thing

00:01:45,030 --> 00:01:51,990
only on the web with video and an

00:01:48,900 --> 00:01:54,840
interesting tidbit is that my name is in

00:01:51,990 --> 00:01:57,780
Hebrew in Hebrew most names have an

00:01:54,840 --> 00:02:01,979
actual meaning to them so offer is a

00:01:57,780 --> 00:02:04,830
young deer or a fawn or Bambi if you

00:02:01,979 --> 00:02:07,380
will and I'm not here to talk about

00:02:04,830 --> 00:02:10,920
Bambi but I do want to talk about a

00:02:07,380 --> 00:02:13,970
different Disney movie one that came out

00:02:10,920 --> 00:02:18,450
in 1994 do you know which one that is

00:02:13,970 --> 00:02:21,660
and he guessed right so that's true

00:02:18,450 --> 00:02:24,420
that's the Lion King and the ranking is

00:02:21,660 --> 00:02:26,700
a very special movie for me because it

00:02:24,420 --> 00:02:28,500
was the first time I looked at one of

00:02:26,700 --> 00:02:31,170
these amazing amazing animation movies

00:02:28,500 --> 00:02:33,630
and realized that there's something more

00:02:31,170 --> 00:02:37,140
going on here I mean there's so much

00:02:33,630 --> 00:02:39,060
more than the story there is some magic

00:02:37,140 --> 00:02:42,030
in this in this movie The Lion King

00:02:39,060 --> 00:02:44,489
tells a story of a young lion Simba who

00:02:42,030 --> 00:02:50,220
gets this in French right for from his

00:02:44,489 --> 00:02:52,470
pride and by his evil uncle Jafar or

00:02:50,220 --> 00:02:54,330
something and then comes back to take

00:02:52,470 --> 00:02:56,310
his place that doesn't matter

00:02:54,330 --> 00:03:01,769
The Lion King was a really good movie

00:02:56,310 --> 00:03:05,549
but it wasn't perfect and it wasn't this

00:03:01,769 --> 00:03:07,590
mean his most original movie either but

00:03:05,549 --> 00:03:10,860
there was just something so special

00:03:07,590 --> 00:03:13,590
about this movie at least for me because

00:03:10,860 --> 00:03:15,720
this was the first time I saw I saw

00:03:13,590 --> 00:03:18,120
scenes like this and I thought well

00:03:15,720 --> 00:03:20,220
these are in fact just moving pictures

00:03:18,120 --> 00:03:24,450
these are drawings people made and it

00:03:20,220 --> 00:03:26,310
they convey so much emotion and I wanted

00:03:24,450 --> 00:03:29,040
to realize I wanted to understand how

00:03:26,310 --> 00:03:32,940
come we're looking at this and we have

00:03:29,040 --> 00:03:35,070
so much feels in us

00:03:32,940 --> 00:03:38,400
so you know I grew up I read about it

00:03:35,070 --> 00:03:41,340
and I came across this book the illusion

00:03:38,400 --> 00:03:43,500
of life by Frank Thomas and Ollie

00:03:41,340 --> 00:03:47,100
Johnston we came which came out in 1981

00:03:43,500 --> 00:03:50,430
these guys are two of Disney's master

00:03:47,100 --> 00:03:53,130
animators from the Golden Age and in

00:03:50,430 --> 00:03:56,910
this book they lay out 12 principles of

00:03:53,130 --> 00:03:58,980
classical animations these principles

00:03:56,910 --> 00:04:01,370
include squash and stretch and

00:03:58,980 --> 00:04:05,670
dissipations

00:04:01,370 --> 00:04:07,140
arcs actions timings exaggerations we're

00:04:05,670 --> 00:04:08,580
not going to go through all of them

00:04:07,140 --> 00:04:10,230
because that would take like an entire

00:04:08,580 --> 00:04:12,840
curriculum of classical animation

00:04:10,230 --> 00:04:15,210
studies but I want to focus on one in

00:04:12,840 --> 00:04:17,940
particular and that is follow through

00:04:15,210 --> 00:04:19,650
and overlapping action so what exactly

00:04:17,940 --> 00:04:23,010
is follow through and overlapping action

00:04:19,650 --> 00:04:25,380
so take a look at this character for

00:04:23,010 --> 00:04:28,170
example and it's Cape and seeing how the

00:04:25,380 --> 00:04:30,480
character and the Kate interact let's

00:04:28,170 --> 00:04:33,090
zoom in a bit further have a look at

00:04:30,480 --> 00:04:35,760
this carrot you see how there's the

00:04:33,090 --> 00:04:37,770
carrot body and there is the leaf an

00:04:35,760 --> 00:04:40,470
extension of the body and the leaf

00:04:37,770 --> 00:04:42,810
starts moving before the carrot and ends

00:04:40,470 --> 00:04:44,700
moving after the carrot it's like a

00:04:42,810 --> 00:04:47,510
really simple thing with a very powerful

00:04:44,700 --> 00:04:52,560
thing let's break it apart even further

00:04:47,510 --> 00:04:55,800
fall through as the act of the leaf

00:04:52,560 --> 00:04:58,460
starting before and ending after the

00:04:55,800 --> 00:05:02,669
moving of the main body of the carrot

00:04:58,460 --> 00:05:05,430
overlying overlapping action is a offset

00:05:02,669 --> 00:05:07,919
between the direction of the leaf and

00:05:05,430 --> 00:05:11,040
the direction of the carrot body and the

00:05:07,919 --> 00:05:17,390
two of these actually define different

00:05:11,040 --> 00:05:21,330
aspect of the same thing so this also

00:05:17,390 --> 00:05:23,100
gives a lot of life to an animation so

00:05:21,330 --> 00:05:25,830
you can take a look at this animation

00:05:23,100 --> 00:05:28,790
it's really nice but it kind of feels

00:05:25,830 --> 00:05:32,160
weird in robotic and if you add

00:05:28,790 --> 00:05:35,750
overlapping action suddenly this thing

00:05:32,160 --> 00:05:35,750
feels much more alive

00:05:36,000 --> 00:05:42,000
it also allows you to define the type of

00:05:38,210 --> 00:05:44,640
material or or different feel something

00:05:42,000 --> 00:05:45,860
has and this is see the same same exact

00:05:44,640 --> 00:05:48,379
drawing with the same

00:05:45,860 --> 00:05:50,840
timing but only this overlapping action

00:05:48,379 --> 00:05:53,599
then fall through makes it makes the

00:05:50,840 --> 00:05:56,419
material appear different so let me show

00:05:53,599 --> 00:05:59,990
you some more examples from a show I'm

00:05:56,419 --> 00:06:01,939
not going to name this is an Israeli

00:05:59,990 --> 00:06:04,460
animator by name's Aaron Mendel who does

00:06:01,939 --> 00:06:07,449
did these for each and every episodes

00:06:04,460 --> 00:06:10,849
like little tidbits really cool stuff

00:06:07,449 --> 00:06:12,949
this one is super cool I like take a

00:06:10,849 --> 00:06:16,009
look at the little strand of hair as the

00:06:12,949 --> 00:06:17,689
Hound chops off heads and the log is how

00:06:16,009 --> 00:06:21,409
it just continues moving past be

00:06:17,689 --> 00:06:27,229
animation or this one because it has a

00:06:21,409 --> 00:06:30,590
dog and who can forget the season finale

00:06:27,229 --> 00:06:33,229
and I'm sorry if I'm spoiling anyone but

00:06:30,590 --> 00:06:35,090
like the date has been due so the

00:06:33,229 --> 00:06:42,669
amazing season feel and finality that we

00:06:35,090 --> 00:06:45,560
just had a couple of months ago okay so

00:06:42,669 --> 00:06:48,379
you might ask okay this is super cool

00:06:45,560 --> 00:06:50,000
but like where the J's conf and what why

00:06:48,379 --> 00:06:53,629
am I talking about

00:06:50,000 --> 00:06:55,819
these sorts of things so this is very

00:06:53,629 --> 00:06:58,580
applicable to what we do as developers

00:06:55,819 --> 00:07:00,830
as web developers take a look at this

00:06:58,580 --> 00:07:02,629
example from code drops I'm going to

00:07:00,830 --> 00:07:06,830
open up this dialog and see how it

00:07:02,629 --> 00:07:09,830
whizzes past as it flies in and flies

00:07:06,830 --> 00:07:13,430
out from the from the screen just by

00:07:09,830 --> 00:07:17,810
animating the borders of this of this

00:07:13,430 --> 00:07:21,680
window or this example where you have

00:07:17,810 --> 00:07:25,460
modal and if you drag and stop dragging

00:07:21,680 --> 00:07:27,289
then you have this really nice staggered

00:07:25,460 --> 00:07:30,259
motion which you know gives a lot of

00:07:27,289 --> 00:07:32,719
character to simple really simple things

00:07:30,259 --> 00:07:35,089
but more like a modal it conveys a

00:07:32,719 --> 00:07:41,629
motion and give some levity to the whole

00:07:35,089 --> 00:07:43,430
thing okay so you can trust me but you

00:07:41,629 --> 00:07:46,009
know Google says the same thing this is

00:07:43,430 --> 00:07:50,180
from Google's material design page and

00:07:46,009 --> 00:07:52,699
they say okay if you have an app then

00:07:50,180 --> 00:07:55,399
you need to show some elements at the

00:07:52,699 --> 00:07:57,919
same time for 2d users don't have them

00:07:55,399 --> 00:07:59,630
all appear exactly at the same time

00:07:57,919 --> 00:08:02,240
because that's really this

00:07:59,630 --> 00:08:04,790
anything for the user instead have them

00:08:02,240 --> 00:08:07,280
peer one after the other in a staggered

00:08:04,790 --> 00:08:11,030
map instead staggered matter again

00:08:07,280 --> 00:08:14,240
overlapping overlapping each other and

00:08:11,030 --> 00:08:18,560
staggering okay this is another example

00:08:14,240 --> 00:08:21,830
where they show you how to have elements

00:08:18,560 --> 00:08:24,620
view one after the other or how about

00:08:21,830 --> 00:08:26,270
this one where they animate a card by

00:08:24,620 --> 00:08:31,610
showing first the image moving and then

00:08:26,270 --> 00:08:33,020
the tenÃ¨nte icon and then the text this

00:08:31,610 --> 00:08:35,630
is something I made at work

00:08:33,020 --> 00:08:37,940
it's a little spinner thing that user

00:08:35,630 --> 00:08:40,550
sees before the video actual actually

00:08:37,940 --> 00:08:42,080
loads which uses the same principle it's

00:08:40,550 --> 00:08:44,060
a simple animation it's just like three

00:08:42,080 --> 00:08:44,660
circles moving sounds like not a big

00:08:44,060 --> 00:08:47,090
deal right

00:08:44,660 --> 00:08:49,250
and in a sense it isn't but there is

00:08:47,090 --> 00:08:51,320
some trick to the implementation it's

00:08:49,250 --> 00:08:53,210
not as straightforward as you might

00:08:51,320 --> 00:08:56,270
think and I'll show you how to implement

00:08:53,210 --> 00:08:59,720
this in various in a bit in a few

00:08:56,270 --> 00:09:01,940
different ways but first like let's take

00:08:59,720 --> 00:09:04,400
inventory of what are you going to do so

00:09:01,940 --> 00:09:07,430
we have four circles y 4 and not 3

00:09:04,400 --> 00:09:10,610
because one always exit stage right and

00:09:07,430 --> 00:09:12,410
one enters stage left and there's a

00:09:10,610 --> 00:09:14,960
total iteration time which is how much

00:09:12,410 --> 00:09:17,300
time the entire looping animation takes

00:09:14,960 --> 00:09:19,130
that's one second there is a circle

00:09:17,300 --> 00:09:22,400
movement time how much time does each

00:09:19,130 --> 00:09:24,380
circle take to move that's 0.5 seconds

00:09:22,400 --> 00:09:26,600
and there is the stagger time which is

00:09:24,380 --> 00:09:29,180
how much time does each circle wait

00:09:26,600 --> 00:09:32,420
before the last circle move that's point

00:09:29,180 --> 00:09:36,080
15 seconds okay these are the specs for

00:09:32,420 --> 00:09:37,730
our animation and I'm going to show

00:09:36,080 --> 00:09:40,190
three different options on how to

00:09:37,730 --> 00:09:42,410
implement them these are not the only

00:09:40,190 --> 00:09:44,920
options but these are the options that I

00:09:42,410 --> 00:09:48,680
oftentimes use the first one is

00:09:44,920 --> 00:09:52,210
classical CSS you just do the CSS the

00:09:48,680 --> 00:09:56,120
second one is with a green sock or G SAP

00:09:52,210 --> 00:09:58,610
JavaScript animation library and the

00:09:56,120 --> 00:10:01,210
third one it's kinda a new contender to

00:09:58,610 --> 00:10:04,700
the game it's the web animation API or

00:10:01,210 --> 00:10:07,060
wrappi which is a new API currently

00:10:04,700 --> 00:10:10,370
being implemented in modern browsers

00:10:07,060 --> 00:10:12,800
wacky doesn't really have a cool logo at

00:10:10,370 --> 00:10:13,040
least not that I found but to me it kind

00:10:12,800 --> 00:10:14,660
of

00:10:13,040 --> 00:10:20,660
sounds like the sound this meme would

00:10:14,660 --> 00:10:25,820
make so uh there I made a logo cool so

00:10:20,660 --> 00:10:27,709
let's start with CSS and just to start

00:10:25,820 --> 00:10:31,550
off let's talk about a little bit of the

00:10:27,709 --> 00:10:33,380
pros is that CSS has good animation good

00:10:31,550 --> 00:10:39,250
performance for the animation if you're

00:10:33,380 --> 00:10:41,540
using the proper performance properties

00:10:39,250 --> 00:10:43,279
and anna is going to be hopefully

00:10:41,540 --> 00:10:47,300
talking about that later so do check out

00:10:43,279 --> 00:10:49,970
her talk and also it is fine using only

00:10:47,300 --> 00:10:52,690
CSS so you can kind of separate your

00:10:49,970 --> 00:10:56,029
logic from your animation if you will

00:10:52,690 --> 00:11:00,350
but it isn't perfect because nothing is

00:10:56,029 --> 00:11:02,149
so CSS is kind of a has a limited

00:11:00,350 --> 00:11:05,180
feature set in what you can achieve with

00:11:02,149 --> 00:11:06,829
it and if you have to make complex

00:11:05,180 --> 00:11:09,110
animations ones that we lie on each

00:11:06,829 --> 00:11:11,959
other and synchronize and all sorts of

00:11:09,110 --> 00:11:13,639
things it gets really difficult and you

00:11:11,959 --> 00:11:16,220
can't do the dynamic animations so

00:11:13,639 --> 00:11:17,839
dynamic animations are ones where you

00:11:16,220 --> 00:11:20,870
want to do physics for example where a

00:11:17,839 --> 00:11:22,430
ball jumps differently depending on how

00:11:20,870 --> 00:11:24,860
you move the mouse or something like

00:11:22,430 --> 00:11:29,540
that so that will be much harder to

00:11:24,860 --> 00:11:31,600
achieve with CSS it's really hard to

00:11:29,540 --> 00:11:35,000
debug the tools are getting better but

00:11:31,600 --> 00:11:37,279
you can't kind of like scrub the time

00:11:35,000 --> 00:11:42,350
like you would in the back of the good

00:11:37,279 --> 00:11:45,589
old flash days cool so just a really

00:11:42,350 --> 00:11:48,319
quick short recap on CSS animations so

00:11:45,589 --> 00:11:50,600
essentially you have a keyframe which is

00:11:48,319 --> 00:11:54,430
this thing here which defines several

00:11:50,600 --> 00:12:00,829
frames and their percentage so it's 0%

00:11:54,430 --> 00:12:04,959
we move by nothing at 25% we move by 100

00:12:00,829 --> 00:12:07,880
pixels and at 100% we move by 400 pixels

00:12:04,959 --> 00:12:09,620
then we apply it to the span which is

00:12:07,880 --> 00:12:13,880
just like the only thing that we have

00:12:09,620 --> 00:12:17,660
here with the animation property give it

00:12:13,880 --> 00:12:19,040
the name move then number of seconds the

00:12:17,660 --> 00:12:20,899
amount of time that the innovation is

00:12:19,040 --> 00:12:23,480
going to take and whether it's going to

00:12:20,899 --> 00:12:25,680
repeat how many times or infinitely in

00:12:23,480 --> 00:12:29,160
this case and so you see this

00:12:25,680 --> 00:12:34,680
little circle moving cool so let's

00:12:29,160 --> 00:12:39,869
implement our circles let's first do it

00:12:34,680 --> 00:12:41,249
without any staggering motion so I'm not

00:12:39,869 --> 00:12:43,800
going to go through this just to show

00:12:41,249 --> 00:12:47,459
you there's a keyframe here and you

00:12:43,800 --> 00:12:51,179
translate it from zero to sixty pixels

00:12:47,459 --> 00:12:54,389
that's it okay so let's make the

00:12:51,179 --> 00:12:56,999
staggering effect add animation delay a

00:12:54,389 --> 00:13:02,279
CSS property which delays the animation

00:12:56,999 --> 00:13:05,970
and as you'd expect cool so kind of same

00:13:02,279 --> 00:13:08,249
thing only this time for the first

00:13:05,970 --> 00:13:10,019
circle I give it the animation until I

00:13:08,249 --> 00:13:11,999
have zero the second line this point 15

00:13:10,019 --> 00:13:18,410
the third one is point six five so on so

00:13:11,999 --> 00:13:23,249
forth let's see how that works and yeah

00:13:18,410 --> 00:13:26,369
that's not what we wanted so what just

00:13:23,249 --> 00:13:29,540
happened essentially a mission delay

00:13:26,369 --> 00:13:33,240
only delays the first run iteration of

00:13:29,540 --> 00:13:35,819
every animation it doesn't delay every

00:13:33,240 --> 00:13:39,120
time the animation repeats which is kind

00:13:35,819 --> 00:13:42,899
of annoying and leads to this thing

00:13:39,120 --> 00:13:45,149
where if you take a look at the at how

00:13:42,899 --> 00:13:48,420
the animation flows the first circle

00:13:45,149 --> 00:13:50,339
started then the third but before the

00:13:48,420 --> 00:13:52,470
second finished the fourth started as

00:13:50,339 --> 00:13:57,179
well and that's like not what we wanted

00:13:52,470 --> 00:13:59,339
at all so this is what we want we want

00:13:57,179 --> 00:14:01,620
the fourth one to start then the third

00:13:59,339 --> 00:14:03,959
then second then the first and then the

00:14:01,620 --> 00:14:05,610
whole thing repeats after one second so

00:14:03,959 --> 00:14:08,160
let's take a look at how this animation

00:14:05,610 --> 00:14:10,559
would look like what are the key frames

00:14:08,160 --> 00:14:15,259
that we know about so two of them will

00:14:10,559 --> 00:14:18,449
really simple at 0% which is here you

00:14:15,259 --> 00:14:22,529
don't move the thing so you don't move

00:14:18,449 --> 00:14:23,309
it and at 100% you want it to be at the

00:14:22,529 --> 00:14:25,949
end of the animation

00:14:23,309 --> 00:14:28,079
so that's 60 pixels that's this one here

00:14:25,949 --> 00:14:30,990
what about these two the one here and

00:14:28,079 --> 00:14:33,509
the one here so we don't know the the

00:14:30,990 --> 00:14:35,519
percent is yet once we know that this is

00:14:33,509 --> 00:14:36,420
the actual animation so it moves from 0

00:14:35,519 --> 00:14:39,780
to 60

00:14:36,420 --> 00:14:42,000
so let's hopefully

00:14:39,780 --> 00:14:43,950
now whether we're much more awake we can

00:14:42,000 --> 00:14:45,120
do some math it's not a lot of math I

00:14:43,950 --> 00:14:47,900
promise

00:14:45,120 --> 00:14:52,980
but let's use math to figure out the

00:14:47,900 --> 00:14:55,830
transition so zero percent is zero

00:14:52,980 --> 00:14:56,340
second we know that 100% is in one

00:14:55,830 --> 00:15:00,420
second

00:14:56,340 --> 00:15:03,120
we know that this one letter here means

00:15:00,420 --> 00:15:05,340
that we want to start at a delay what is

00:15:03,120 --> 00:15:08,100
the delay twice because there were two

00:15:05,340 --> 00:15:11,610
circles before so that's point 15 5

00:15:08,100 --> 00:15:14,640
point 3 divided by 1 times 100 you get

00:15:11,610 --> 00:15:16,680
30% this one is the exact same thing I

00:15:14,640 --> 00:15:20,130
mean we add the animation time which was

00:15:16,680 --> 00:15:24,270
point 5 and now we have 0.3 plus point 5

00:15:20,130 --> 00:15:29,540
divided by 180 yay okay we know the

00:15:24,270 --> 00:15:33,210
exact exactly where to put our keyframes

00:15:29,540 --> 00:15:35,370
how do we implement this well we can

00:15:33,210 --> 00:15:36,870
leverage the power of SAS because we

00:15:35,370 --> 00:15:38,610
need a different animation for each

00:15:36,870 --> 00:15:41,430
different circles so stats allows us to

00:15:38,610 --> 00:15:43,500
do this quite concisely okay I said

00:15:41,430 --> 00:15:46,320
concisely so let's take a look at the

00:15:43,500 --> 00:15:48,990
first the the first and the only mixin

00:15:46,320 --> 00:15:51,390
that we need which is exactly what I

00:15:48,990 --> 00:15:54,030
just said but implemented in code so you

00:15:51,390 --> 00:15:56,820
have a mixin that takes the circle

00:15:54,030 --> 00:16:01,440
number the animation time the total time

00:15:56,820 --> 00:16:03,930
and the delay amount and does the same

00:16:01,440 --> 00:16:06,950
keyframes that we just saw one for zero

00:16:03,930 --> 00:16:09,780
percent one for the percentage the

00:16:06,950 --> 00:16:12,600
calculated percentage for the frames one

00:16:09,780 --> 00:16:16,350
for 100% and one for the calculated

00:16:12,600 --> 00:16:20,970
percentage for the third frame okay and

00:16:16,350 --> 00:16:24,720
then how do you use this you just make a

00:16:20,970 --> 00:16:26,820
for loop with SAS and for each circle

00:16:24,720 --> 00:16:29,160
you use this mixin to create an

00:16:26,820 --> 00:16:31,890
animation the animation proper animation

00:16:29,160 --> 00:16:35,670
for the circle and you apply it like we

00:16:31,890 --> 00:16:37,320
saw earlier by the way this code is

00:16:35,670 --> 00:16:41,610
gonna be up later if you want to take a

00:16:37,320 --> 00:16:45,600
look at as a reference blah blah blah we

00:16:41,610 --> 00:16:49,530
have our animations and it kind of looks

00:16:45,600 --> 00:16:53,910
a bit like this so yeah we have our

00:16:49,530 --> 00:16:57,630
animation with with CSS and sass

00:16:53,910 --> 00:17:00,240
do note that this creates a whole lot of

00:16:57,630 --> 00:17:01,980
CSS cues you have to create four

00:17:00,240 --> 00:17:04,589
different animations for each of these

00:17:01,980 --> 00:17:08,370
circles and if you had 20 they need the

00:17:04,589 --> 00:17:12,630
20 animations which is kind of know a

00:17:08,370 --> 00:17:15,689
lot more than you'd want but I've used

00:17:12,630 --> 00:17:18,270
this animation for loading so it makes

00:17:15,689 --> 00:17:20,459
sense to have just something ready and

00:17:18,270 --> 00:17:22,500
so you don't need to load the library to

00:17:20,459 --> 00:17:27,030
show the users something so that he can

00:17:22,500 --> 00:17:32,159
load while he loads cool so that was a

00:17:27,030 --> 00:17:35,340
bit to take in how many people work from

00:17:32,159 --> 00:17:41,640
home sometimes okay yeah so we have a

00:17:35,340 --> 00:17:42,960
few I can't do that because of this you

00:17:41,640 --> 00:17:46,460
try to concentrate with that thing

00:17:42,960 --> 00:17:49,440
staring at you anyhow let's move on

00:17:46,460 --> 00:17:55,799
green sock is a JavaScript library for

00:17:49,440 --> 00:17:57,390
animations and let's take a little break

00:17:55,799 --> 00:17:59,549
down a bit about the pros and cons of

00:17:57,390 --> 00:18:02,400
green sock so first it has a really

00:17:59,549 --> 00:18:06,059
great robust API so you can do quite a

00:18:02,400 --> 00:18:09,240
lot with it every conceivable type of

00:18:06,059 --> 00:18:12,120
animation that gets complex the API

00:18:09,240 --> 00:18:13,710
allows you to do it allows you to do

00:18:12,120 --> 00:18:15,720
dynamic animations like I said earlier

00:18:13,710 --> 00:18:18,900
if you need something that changes

00:18:15,720 --> 00:18:21,659
dynamically or that has uses physics or

00:18:18,900 --> 00:18:24,750
something like that you can hook into a

00:18:21,659 --> 00:18:26,880
green sock and use that and in handles

00:18:24,750 --> 00:18:29,130
browser inconsistencies so this is

00:18:26,880 --> 00:18:32,039
especially true in cases where you work

00:18:29,130 --> 00:18:35,190
with SVG's and SVG is notorious

00:18:32,039 --> 00:18:37,380
notoriously differently implemented

00:18:35,190 --> 00:18:40,289
across different browsers so greens are

00:18:37,380 --> 00:18:43,799
kind of unifies that but nothing is

00:18:40,289 --> 00:18:45,960
perfect like I said earlier you know

00:18:43,799 --> 00:18:48,049
it's a Java library so you need to load

00:18:45,960 --> 00:18:50,280
that JavaScript features extra bandwidth

00:18:48,049 --> 00:18:54,299
parsing time it's not a big library but

00:18:50,280 --> 00:18:55,710
still JavaScript as you might have

00:18:54,299 --> 00:18:58,980
already come across that is

00:18:55,710 --> 00:19:01,740
implementation sensitive so if you have

00:18:58,980 --> 00:19:03,630
stuff running on your main thread which

00:19:01,740 --> 00:19:06,330
locks up the main thread maybe you're

00:19:03,630 --> 00:19:06,990
doing complex calculation or analytics

00:19:06,330 --> 00:19:08,640
goals

00:19:06,990 --> 00:19:11,790
that takes too long for some reason or

00:19:08,640 --> 00:19:15,210
something like that that would halt the

00:19:11,790 --> 00:19:17,280
execution and make the animation jacket

00:19:15,210 --> 00:19:21,750
so you need to be sure that your

00:19:17,280 --> 00:19:23,340
JavaScript execution is as optimal as

00:19:21,750 --> 00:19:27,020
possible so that the animations

00:19:23,340 --> 00:19:30,300
themselves don't stagger or Jakob and

00:19:27,020 --> 00:19:32,190
lastly some advanced feature of this

00:19:30,300 --> 00:19:33,809
library cost money which is not

00:19:32,190 --> 00:19:36,179
necessarily a bad thing because I guess

00:19:33,809 --> 00:19:39,120
the amazing team behind it do need to

00:19:36,179 --> 00:19:43,559
feed themselves somehow so like I'm all

00:19:39,120 --> 00:19:44,880
up for giving them money but I'm not one

00:19:43,559 --> 00:19:48,030
of them so it's not like Philly or

00:19:44,880 --> 00:19:54,150
something and how do you do the same

00:19:48,030 --> 00:19:57,590
thing with green sock that's it so let's

00:19:54,150 --> 00:20:00,030
take a look at how this thing works

00:19:57,590 --> 00:20:02,700
in green sock we have something called a

00:20:00,030 --> 00:20:05,309
timeline which is if you ever work with

00:20:02,700 --> 00:20:09,090
flash is kind of like the same concept

00:20:05,309 --> 00:20:11,100
where you post animations on stream of

00:20:09,090 --> 00:20:12,960
events called the timeline and so we

00:20:11,100 --> 00:20:17,309
create a new timeline called timeline

00:20:12,960 --> 00:20:20,520
Max and we make it repeat minus 1 which

00:20:17,309 --> 00:20:23,700
means repeat this animation exactly not

00:20:20,520 --> 00:20:27,300
one time actually means repeated

00:20:23,700 --> 00:20:29,840
infinitely and we specify repeatedly

00:20:27,300 --> 00:20:33,300
that means after the animation is done

00:20:29,840 --> 00:20:42,600
wait a bit and then repeat it and then

00:20:33,300 --> 00:20:46,770
we use this we use this stagger from two

00:20:42,600 --> 00:20:50,940
handy function call which essentially

00:20:46,770 --> 00:20:54,900
means take a bunch of elements spans in

00:20:50,940 --> 00:20:59,550
this case these are these are the spans

00:20:54,900 --> 00:21:02,220
that I'm talking about and stagger each

00:20:59,550 --> 00:21:04,860
and every one of them so stagger animate

00:21:02,220 --> 00:21:06,510
them one after the other this is the

00:21:04,860 --> 00:21:10,800
duration of the staggered we saw earlier

00:21:06,510 --> 00:21:17,280
0.5 seconds and the start the from

00:21:10,800 --> 00:21:19,110
second is from 0 pixels to 60 pixels and

00:21:17,280 --> 00:21:20,820
then the stagger time is the amount of

00:21:19,110 --> 00:21:23,640
time again that you wait between

00:21:20,820 --> 00:21:29,460
and then you have it like with few lines

00:21:23,640 --> 00:21:31,650
of code which is pretty cool okay but we

00:21:29,460 --> 00:21:35,130
can do more so I talked about doing

00:21:31,650 --> 00:21:41,610
dynamic animations how does that work

00:21:35,130 --> 00:21:45,690
let's have an example how come my errors

00:21:41,610 --> 00:21:47,820
was so large okay

00:21:45,690 --> 00:21:53,270
so in this example I have the exact same

00:21:47,820 --> 00:21:58,800
animation only now I can click on it and

00:21:53,270 --> 00:22:03,000
it reverses me animation and this is one

00:21:58,800 --> 00:22:06,600
of the strengths of dynamic animations

00:22:03,000 --> 00:22:09,840
you can once you have a timeline you can

00:22:06,600 --> 00:22:12,030
hook into the API of that timeline to

00:22:09,840 --> 00:22:13,320
control it so you kind of scrub through

00:22:12,030 --> 00:22:16,290
the timeline the same way you would

00:22:13,320 --> 00:22:16,650
scrub through a song or something like

00:22:16,290 --> 00:22:18,870
that

00:22:16,650 --> 00:22:22,110
you just take the animation start

00:22:18,870 --> 00:22:29,460
playing with it and that's that pretty

00:22:22,110 --> 00:22:33,630
cool okay huapi I'm just like I have so

00:22:29,460 --> 00:22:35,670
much fun saying that even though so YP

00:22:33,630 --> 00:22:41,730
is an animation API that's currently

00:22:35,670 --> 00:22:45,180
implemented in Firefox Chrome and if I

00:22:41,730 --> 00:22:46,830
remember correctly but not fully you

00:22:45,180 --> 00:22:48,180
have to look at the table to see what

00:22:46,830 --> 00:22:50,820
you thought because it's constantly

00:22:48,180 --> 00:22:54,410
changes and the idea behind it is that

00:22:50,820 --> 00:22:57,630
as developer you can hook into the

00:22:54,410 --> 00:23:01,170
JavaScript into the CSS rendering engine

00:22:57,630 --> 00:23:03,450
that you have when you do CSS animations

00:23:01,170 --> 00:23:06,360
but you hook into them using javascript

00:23:03,450 --> 00:23:09,030
so instead of animating using javascript

00:23:06,360 --> 00:23:11,340
you just set up the animation using

00:23:09,030 --> 00:23:13,710
javascript and then the browser takes

00:23:11,340 --> 00:23:18,000
care of the animation as it would have

00:23:13,710 --> 00:23:22,370
if you would implement it in CSS button

00:23:18,000 --> 00:23:22,370
and dynamically what did I just say okay

00:23:23,150 --> 00:23:32,160
so here is the same exactly mation but

00:23:26,610 --> 00:23:34,000
this time it's implemented in in wacky

00:23:32,160 --> 00:23:35,650
so

00:23:34,000 --> 00:23:37,390
not going to go through each of the

00:23:35,650 --> 00:23:39,630
lines but essentially the same

00:23:37,390 --> 00:23:43,780
calculation that we saw for the CSS is

00:23:39,630 --> 00:23:45,670
applied here you calculate the offset of

00:23:43,780 --> 00:23:48,700
each frame using the same calculation

00:23:45,670 --> 00:23:50,800
and give it the same property that you

00:23:48,700 --> 00:23:53,080
would and for each of the circles you

00:23:50,800 --> 00:23:55,300
use the wacky function animate to tell

00:23:53,080 --> 00:23:57,400
it okay this is the animation that you

00:23:55,300 --> 00:24:00,070
want to make so instead of having to now

00:23:57,400 --> 00:24:01,900
specify in CSS for different animations

00:24:00,070 --> 00:24:04,270
and loading them you specify them in

00:24:01,900 --> 00:24:05,590
runtime and have the browser take care

00:24:04,270 --> 00:24:07,990
of them so it's kind of like a mix

00:24:05,590 --> 00:24:12,010
between having an all-out JavaScript

00:24:07,990 --> 00:24:13,150
library do do the thing and in all CSS

00:24:12,010 --> 00:24:15,820
animation in doing it's kind of like

00:24:13,150 --> 00:24:19,210
taking some of both worlds to create

00:24:15,820 --> 00:24:22,390
this new thing okay so by now you must

00:24:19,210 --> 00:24:24,940
be asking great I just showed you three

00:24:22,390 --> 00:24:29,050
ways of doing the exact same thing which

00:24:24,940 --> 00:24:32,740
one should you use and the answer like

00:24:29,050 --> 00:24:33,910
with any other of these type of things

00:24:32,740 --> 00:24:41,340
that you ask yourself when you're doing

00:24:33,910 --> 00:24:44,440
development for the web is it depends

00:24:41,340 --> 00:24:47,830
simply because the by the way this this

00:24:44,440 --> 00:24:51,220
is a amazing code penned by yeah but by

00:24:47,830 --> 00:24:53,350
a Rachel Smith which just I love ok

00:24:51,220 --> 00:24:57,190
anyhow why should you use one over the

00:24:53,350 --> 00:24:59,980
other it really depends on your use case

00:24:57,190 --> 00:25:03,280
so like I said earlier in my news case I

00:24:59,980 --> 00:25:04,810
did the loading animation so you don't

00:25:03,280 --> 00:25:06,340
when are you doing loading animations

00:25:04,810 --> 00:25:08,590
you don't want to users to load and

00:25:06,340 --> 00:25:10,360
other things just so you can see the

00:25:08,590 --> 00:25:13,210
loading animation but if you have

00:25:10,360 --> 00:25:15,310
complex load like animations that you

00:25:13,210 --> 00:25:17,170
need to synchronize with one another and

00:25:15,310 --> 00:25:20,230
the unit they need to start at a certain

00:25:17,170 --> 00:25:23,080
point or start at a certain time or stop

00:25:20,230 --> 00:25:25,030
or maybe you have an animation where it

00:25:23,080 --> 00:25:26,950
happens on a mouse over something starts

00:25:25,030 --> 00:25:29,770
to happen but then on a mass huh mass

00:25:26,950 --> 00:25:32,290
out something else needs to happen it's

00:25:29,770 --> 00:25:34,930
really really difficult to do this with

00:25:32,290 --> 00:25:37,840
with CSS it's easier to do them with

00:25:34,930 --> 00:25:39,990
JavaScript but maybe there's a way to do

00:25:37,840 --> 00:25:42,640
the with webby as well so it's really

00:25:39,990 --> 00:25:46,330
not a one solution for everything

00:25:42,640 --> 00:25:47,270
instead it's best if you kind of know

00:25:46,330 --> 00:25:48,920
the method

00:25:47,270 --> 00:25:50,930
that you have like the tools your

00:25:48,920 --> 00:25:56,150
disposal like the ones I just showed you

00:25:50,930 --> 00:25:58,610
and use the ones appropriately okay if

00:25:56,150 --> 00:26:01,130
you need want to read more about this in

00:25:58,610 --> 00:26:03,220
not a talk form but an article form I

00:26:01,130 --> 00:26:05,150
wrote an article CSS tricks called

00:26:03,220 --> 00:26:07,730
repeatable staggered animation three

00:26:05,150 --> 00:26:11,060
ways jiseop and web animation API catchy

00:26:07,730 --> 00:26:12,470
I know but it has all the or at least

00:26:11,060 --> 00:26:15,590
most of the information that you just

00:26:12,470 --> 00:26:18,050
saw and you can kind of dive deep into

00:26:15,590 --> 00:26:19,370
it into both the calculations and

00:26:18,050 --> 00:26:20,930
different options that you might have

00:26:19,370 --> 00:26:22,520
and there's some good discussion in the

00:26:20,930 --> 00:26:27,200
comments there on different

00:26:22,520 --> 00:26:32,500
implementation methods so thank you so

00:26:27,200 --> 00:26:32,500
much both for me and from Glaser

00:26:35,390 --> 00:26:42,260
and before you go out to fetch your

00:26:39,740 --> 00:26:45,350
coffee I have one tiny small request

00:26:42,260 --> 00:26:47,540
from you and that is my wife is left

00:26:45,350 --> 00:26:50,000
home taking care of lizard and I want to

00:26:47,540 --> 00:26:51,799
show her that it was worth it for me to

00:26:50,000 --> 00:26:52,250
go here so I'm gonna take a selfie with

00:26:51,799 --> 00:26:56,750
you

00:26:52,250 --> 00:27:05,920
can we have the house lights please yes

00:26:56,750 --> 00:27:05,920
no yes no yes no please okay I'll do it

00:27:06,970 --> 00:27:15,799
just prepare myself for these selfie

00:27:09,620 --> 00:27:22,700
pose this is by the way kind of like the

00:27:15,799 --> 00:27:26,960
normal size of lizard yay okay now you

00:27:22,700 --> 00:27:33,460
need to look happy lucky like you

00:27:26,960 --> 00:27:33,460

YouTube URL: https://www.youtube.com/watch?v=d3SP_wi23i0


