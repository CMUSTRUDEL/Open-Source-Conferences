Title: Vaidehi Joshi: Goldilocks And The Three Code Reviews | JSConf Budapest 2017
Publication date: 2017-12-01
Playlist: JSConf Budapest 2017
Description: 
	We’ve probably all heard that peer code reviews can do wonders to a codebase. But not all type of code reviews are effective. This talk explores what makes a strong code review. Join Goldilocks as she seeks to find a code review process that’s neither too long nor too short, but just right!

http://jsconfbp.com/speakers/vaidehi-joshi/
Captions: 
	00:00:07,790 --> 00:00:21,650
all right what's good Budapest oh we are

00:00:17,670 --> 00:00:21,650
do that again how's it going Budapest

00:00:22,850 --> 00:00:36,360
better b-plus good job all right

00:00:30,679 --> 00:00:40,469
hi my name is Vita he um and I want to

00:00:36,360 --> 00:00:44,309
kind of get a sense of the room how many

00:00:40,469 --> 00:00:45,899
of you grew up hearing oh this is good I

00:00:44,309 --> 00:00:47,940
was not used I'm not used to like

00:00:45,899 --> 00:00:49,980
looking up but I you are all here I'm

00:00:47,940 --> 00:00:52,680
gonna look up more often all right how

00:00:49,980 --> 00:00:55,620
many of you grew up hearing fairy tales

00:00:52,680 --> 00:00:58,500
as a kid all right

00:00:55,620 --> 00:01:00,329
good that's good because this talk

00:00:58,500 --> 00:01:03,480
probably is not gonna make sense if you

00:01:00,329 --> 00:01:06,090
didn't so I'm glad I bet on that

00:01:03,480 --> 00:01:10,860
how many of you have heard the fairy

00:01:06,090 --> 00:01:14,159
tale Goldilocks and the three bears okay

00:01:10,860 --> 00:01:19,020
most everybody for those of you who

00:01:14,159 --> 00:01:20,759
haven't a quick plot summary the story

00:01:19,020 --> 00:01:22,560
of Goldilocks and the three bears is

00:01:20,759 --> 00:01:26,430
basically that there's this girl named

00:01:22,560 --> 00:01:29,460
Goldilocks and she breaks into a house

00:01:26,430 --> 00:01:32,189
in the woods I don't know why she's in

00:01:29,460 --> 00:01:35,130
the woods but she's there and she breaks

00:01:32,189 --> 00:01:37,369
into this house and she like it's

00:01:35,130 --> 00:01:40,200
totally abandoned like nobody is at home

00:01:37,369 --> 00:01:43,920
and it turns out this is the house of

00:01:40,200 --> 00:01:46,140
three bears and she like tries out all

00:01:43,920 --> 00:01:50,189
their stuff like she sleeps in their bed

00:01:46,140 --> 00:01:52,290
and she eats their porridge and like the

00:01:50,189 --> 00:01:54,060
Papa bear's porridge is too hot and the

00:01:52,290 --> 00:01:56,159
mama bears porridge is too cold and the

00:01:54,060 --> 00:01:59,670
whole story is like her basically going

00:01:56,159 --> 00:02:02,969
through people's stuff or bear stuff and

00:01:59,670 --> 00:02:05,159
it's like in retrospect as an adult I

00:02:02,969 --> 00:02:08,129
realize it's probably not a wise thing

00:02:05,159 --> 00:02:09,890
to teach children like if it was

00:02:08,129 --> 00:02:12,819
Goldilocks and the three bunny rabbits

00:02:09,890 --> 00:02:14,260
probably better but three bears

00:02:12,819 --> 00:02:17,620
feel like I don't know I don't think

00:02:14,260 --> 00:02:21,310
that's the best thing but needless to

00:02:17,620 --> 00:02:22,930
say I did some research on Goldilocks

00:02:21,310 --> 00:02:26,319
and the three bears and it turns out

00:02:22,930 --> 00:02:31,620
that this fairytale dates back to the

00:02:26,319 --> 00:02:35,590
year 1837 so it's over 150 years old and

00:02:31,620 --> 00:02:38,290
I got to thinking about what Goldilocks

00:02:35,590 --> 00:02:40,840
and the three bears would be like with a

00:02:38,290 --> 00:02:45,180
modern day twist if we were to tell that

00:02:40,840 --> 00:02:47,669
same story what would that story be like

00:02:45,180 --> 00:02:52,930
and that's what we're gonna do today

00:02:47,669 --> 00:02:54,400
so modern-day Goldilocks she doesn't

00:02:52,930 --> 00:02:57,719
break into houses anymore she's over

00:02:54,400 --> 00:03:01,629
that she learned her lesson instead

00:02:57,719 --> 00:03:04,930
modern-day Goldilocks is a JavaScript

00:03:01,629 --> 00:03:07,569
available developer obviously cuz why

00:03:04,930 --> 00:03:09,849
wouldn't she be and modern-day

00:03:07,569 --> 00:03:15,189
Goldilocks is working at her first dev

00:03:09,849 --> 00:03:16,719
job and she loves it so she's writing

00:03:15,189 --> 00:03:19,569
JavaScript she's like working with

00:03:16,719 --> 00:03:23,530
frameworks like angular and ember and

00:03:19,569 --> 00:03:25,180
even a little react and she's having a

00:03:23,530 --> 00:03:26,889
great time because she's learning a lot

00:03:25,180 --> 00:03:30,030
from the other developers on her team

00:03:26,889 --> 00:03:32,949
and this company that she's working at

00:03:30,030 --> 00:03:35,590
it's pretty small she's the first junior

00:03:32,949 --> 00:03:37,449
developer that they have and she gets to

00:03:35,590 --> 00:03:39,489
ask a lot of questions and learn a lot

00:03:37,449 --> 00:03:42,069
from these other developers by writing

00:03:39,489 --> 00:03:44,139
code that's in production which is the

00:03:42,069 --> 00:03:50,049
first time she's ever done that so

00:03:44,139 --> 00:03:53,349
that's really exciting but after like

00:03:50,049 --> 00:03:56,169
six months of being at this company she

00:03:53,349 --> 00:03:58,049
realizes that they're definitely some

00:03:56,169 --> 00:04:02,949
places where this company has drawbacks

00:03:58,049 --> 00:04:06,099
so after about six months she starts

00:04:02,949 --> 00:04:07,299
wondering am I actually getting better

00:04:06,099 --> 00:04:10,629
at writing code

00:04:07,299 --> 00:04:13,120
I don't know and she talks to other

00:04:10,629 --> 00:04:15,969
developer friends of hers and she finds

00:04:13,120 --> 00:04:17,650
out that at other companies one of the

00:04:15,969 --> 00:04:19,840
ways that a lot of junior developers

00:04:17,650 --> 00:04:21,940
realize that they're getting better or

00:04:19,840 --> 00:04:26,150
learn what they can improve on and get

00:04:21,940 --> 00:04:29,550
feedback is through the process of code

00:04:26,150 --> 00:04:32,580
so Goldilocks gets to thinking and she

00:04:29,550 --> 00:04:34,910
realizes we don't actually have any

00:04:32,580 --> 00:04:38,730
formal code review process at my company

00:04:34,910 --> 00:04:41,570
in fact whenever I want review I have to

00:04:38,730 --> 00:04:47,640
ask another engineer to look at my code

00:04:41,570 --> 00:04:49,170
and if I forget what I did wrong on like

00:04:47,640 --> 00:04:51,240
a feature or like something that I could

00:04:49,170 --> 00:04:53,520
have improved on I don't have that

00:04:51,240 --> 00:04:57,510
feedback written down or documented

00:04:53,520 --> 00:05:00,240
anywhere and she starts to think about

00:04:57,510 --> 00:05:01,890
whether this is like going to be a

00:05:00,240 --> 00:05:05,790
long-term sustainable place for her to

00:05:01,890 --> 00:05:08,640
stay and she realizes after talking to

00:05:05,790 --> 00:05:11,700
other developers that even junior

00:05:08,640 --> 00:05:13,530
developers on other teams can understand

00:05:11,700 --> 00:05:15,330
and learn from what senior developers

00:05:13,530 --> 00:05:18,030
are working on by reviewing their code

00:05:15,330 --> 00:05:23,730
and at her company they're not doing any

00:05:18,030 --> 00:05:25,170
of that so it's not great and after

00:05:23,730 --> 00:05:28,140
about a year or so

00:05:25,170 --> 00:05:31,010
Goldilocks decides I've learned a lot

00:05:28,140 --> 00:05:35,880
here but it's time for me to move on and

00:05:31,010 --> 00:05:38,960
she goes to her second dev job so at her

00:05:35,880 --> 00:05:41,820
second dev job things are different and

00:05:38,960 --> 00:05:43,680
one of the things that's very very

00:05:41,820 --> 00:05:46,860
different from her first step' job is

00:05:43,680 --> 00:05:51,390
the fact that they take code reviews

00:05:46,860 --> 00:05:53,610
pretty seriously every single PR that is

00:05:51,390 --> 00:05:57,000
made at this company on this engineering

00:05:53,610 --> 00:05:59,250
team is reviewed which she's like that's

00:05:57,000 --> 00:06:01,200
awesome that's exactly what I was

00:05:59,250 --> 00:06:02,910
looking for now I'll finally get like

00:06:01,200 --> 00:06:04,800
the feedback that I need and I'll learn

00:06:02,910 --> 00:06:10,710
and I'll make fewer mistakes and I'm

00:06:04,800 --> 00:06:13,800
gonna grow it's gonna be great on her

00:06:10,710 --> 00:06:15,510
first week at this new job she's super

00:06:13,800 --> 00:06:18,510
excited because she gets to review the

00:06:15,510 --> 00:06:21,690
CTOs code so now she's doing things that

00:06:18,510 --> 00:06:29,010
she couldn't do before and this is

00:06:21,690 --> 00:06:32,490
really exciting but after about 6 or 7

00:06:29,010 --> 00:06:34,100
months again she realizes that even this

00:06:32,490 --> 00:06:37,290
company has its drawbacks

00:06:34,100 --> 00:06:38,410
they have code review processes but it's

00:06:37,290 --> 00:06:40,420
small

00:06:38,410 --> 00:06:44,890
it's a small team it's a small start-up

00:06:40,420 --> 00:06:48,550
and really their process is just as long

00:06:44,890 --> 00:06:51,520
as one person gives it a thumbs up that

00:06:48,550 --> 00:06:55,330
code can be merged in and like sometimes

00:06:51,520 --> 00:06:59,410
those PRS will devolve intellect long

00:06:55,330 --> 00:07:01,900
discussions or many comments and

00:06:59,410 --> 00:07:03,730
sometimes they're debating like do we

00:07:01,900 --> 00:07:07,060
want to put a semicolon here she'll use

00:07:03,730 --> 00:07:09,820
tabs and spaces you know those types of

00:07:07,060 --> 00:07:12,970
discussions but the code review process

00:07:09,820 --> 00:07:18,240
is working fine and they're merging code

00:07:12,970 --> 00:07:22,360
in there merging a lot of code in and

00:07:18,240 --> 00:07:27,880
everything is fine and it seems to be ok

00:07:22,360 --> 00:07:29,710
until one day so one day Goldilocks

00:07:27,880 --> 00:07:31,120
decides that she's finally ready to

00:07:29,710 --> 00:07:33,340
merge in this feature that she's been

00:07:31,120 --> 00:07:35,770
working on and she's been working on it

00:07:33,340 --> 00:07:39,220
for like three weeks and she's like okay

00:07:35,770 --> 00:07:41,320
good to go she merges it in and before

00:07:39,220 --> 00:07:42,940
she merges it it's reviewed it's

00:07:41,320 --> 00:07:47,620
reviewed by two other engineers on the

00:07:42,940 --> 00:07:49,780
team and then she's like okay I'm gonna

00:07:47,620 --> 00:07:54,580
push this to staging and I'm gonna go

00:07:49,780 --> 00:07:57,460
get a coffee she gets back from getting

00:07:54,580 --> 00:08:01,900
her coffee and 20 minutes later she

00:07:57,460 --> 00:08:05,800
walks into the office and everyone is

00:08:01,900 --> 00:08:08,680
having a minor panic attack because the

00:08:05,800 --> 00:08:12,370
code that she merged in totally broke

00:08:08,680 --> 00:08:17,500
staging and the entire environment is

00:08:12,370 --> 00:08:22,270
down so everybody's like Goldilocks what

00:08:17,500 --> 00:08:24,250
did you do what did you deploy and she's

00:08:22,270 --> 00:08:26,080
like I mean you looked at the code I

00:08:24,250 --> 00:08:31,080
don't know what I did wrong we all

00:08:26,080 --> 00:08:32,380
reviewed it but not to be deterred

00:08:31,080 --> 00:08:34,590
Goldilocks

00:08:32,380 --> 00:08:38,860
sets out to try to put out this fire and

00:08:34,590 --> 00:08:43,270
figure out what she did wrong as it

00:08:38,860 --> 00:08:45,600
turns out she made a pull request with

00:08:43,270 --> 00:08:47,980
two files that were named the same and

00:08:45,600 --> 00:08:49,880
one of them had code in it and one of

00:08:47,980 --> 00:08:52,310
them was totally empty and she

00:08:49,880 --> 00:08:57,230
Adelita except she forgot to delete it

00:08:52,310 --> 00:08:58,910
and nobody caught that and then a whole

00:08:57,230 --> 00:09:03,140
of staging went down and everybody

00:08:58,910 --> 00:09:05,030
freaked out and when she sees this

00:09:03,140 --> 00:09:07,220
mistake and she sees that nobody on her

00:09:05,030 --> 00:09:12,980
team caught this mistake she gets to

00:09:07,220 --> 00:09:14,750
thinking and she's like oh no we really

00:09:12,980 --> 00:09:22,250
thought that we had this code review

00:09:14,750 --> 00:09:24,590
thing down but maybe we don't and she

00:09:22,250 --> 00:09:27,170
realizes that these two teams that she's

00:09:24,590 --> 00:09:29,540
worked on she's been looking for this

00:09:27,170 --> 00:09:32,990
perfect balance of which code review

00:09:29,540 --> 00:09:37,850
workflow works the best and she doesn't

00:09:32,990 --> 00:09:39,860
really know if she's found it yet so she

00:09:37,850 --> 00:09:44,180
does what probably all of us in this

00:09:39,860 --> 00:09:46,700
room would do in this situation she

00:09:44,180 --> 00:09:50,120
asked the internet and she does some

00:09:46,700 --> 00:09:54,490
googling and she hears about this really

00:09:50,120 --> 00:09:57,680
ancient book called

00:09:54,490 --> 00:09:59,560
code complete and she starts thinking oh

00:09:57,680 --> 00:10:04,730
my god there must be a better way of

00:09:59,560 --> 00:10:09,440
doing code reviews right so she decides

00:10:04,730 --> 00:10:13,220
to dive into the theory of code reviews

00:10:09,440 --> 00:10:16,280
and she opens up this book called code

00:10:13,220 --> 00:10:19,610
complete which is so old it dates back

00:10:16,280 --> 00:10:26,300
to the Year 1993 so I mean like really

00:10:19,610 --> 00:10:29,600
old and she reads a lot of the theory

00:10:26,300 --> 00:10:31,490
and research behind code reviews code

00:10:29,600 --> 00:10:33,320
complete was written by a man named

00:10:31,490 --> 00:10:36,350
Steve McConnell it's a really great book

00:10:33,320 --> 00:10:39,350
and I recommend it to all of you to pick

00:10:36,350 --> 00:10:43,610
up and he's done a lot of research in

00:10:39,350 --> 00:10:47,090
this book Goldilocks Pines and it turns

00:10:43,610 --> 00:10:50,120
out that there are three different types

00:10:47,090 --> 00:10:52,970
of code reviews that came about in about

00:10:50,120 --> 00:10:54,650
the late 80s and they're kind of the

00:10:52,970 --> 00:10:56,480
fundamental core of the code reviews

00:10:54,650 --> 00:11:01,550
that we do today theoretically

00:10:56,480 --> 00:11:03,080
and so she seeks to understand why did

00:11:01,550 --> 00:11:03,209
we start doing code reviews and what are

00:11:03,080 --> 00:11:05,429
they

00:11:03,209 --> 00:11:08,100
good for what is the ideal code review

00:11:05,429 --> 00:11:09,779
process supposed to be like because if I

00:11:08,100 --> 00:11:11,670
can understand that then maybe I can

00:11:09,779 --> 00:11:17,970
bring it to my team and try to improve

00:11:11,670 --> 00:11:22,759
our process so encode complete Steve

00:11:17,970 --> 00:11:25,110
McConnell writes this one part of

00:11:22,759 --> 00:11:29,490
managing a software engineering process

00:11:25,110 --> 00:11:33,689
is catching problems at the lowest value

00:11:29,490 --> 00:11:36,079
stage that is at the time at which the

00:11:33,689 --> 00:11:41,550
least investment has been made and

00:11:36,079 --> 00:11:44,369
problems cost the least to correct the

00:11:41,550 --> 00:11:47,069
idea that Steve McConnell try it kind of

00:11:44,369 --> 00:11:49,589
gets that in this book is that code

00:11:47,069 --> 00:11:53,670
reviews should act as quality gates for

00:11:49,589 --> 00:11:57,269
our code code bases similar to if we

00:11:53,670 --> 00:12:01,170
create a product and we test it and we

00:11:57,269 --> 00:12:04,800
check its quality through QA or generic

00:12:01,170 --> 00:12:09,410
testing in general code reviews should

00:12:04,800 --> 00:12:09,410
act as similar gates for our code bases

00:12:10,399 --> 00:12:15,540
so she starts thinking about this and

00:12:12,720 --> 00:12:18,480
she's like I don't know if our team's

00:12:15,540 --> 00:12:21,119
code review process like if our code

00:12:18,480 --> 00:12:23,459
review our quality gates are actually of

00:12:21,119 --> 00:12:28,170
good quality sometimes it feels like

00:12:23,459 --> 00:12:33,720
we're just doing it as a formality so

00:12:28,170 --> 00:12:36,119
she keeps reading and she finds that the

00:12:33,720 --> 00:12:39,299
most effective code reviews according to

00:12:36,119 --> 00:12:42,119
research are the ones that are based on

00:12:39,299 --> 00:12:44,790
this idea of the collective ownership of

00:12:42,119 --> 00:12:47,160
construction which is the idea that if

00:12:44,790 --> 00:12:49,860
all of us have a hand and all of us have

00:12:47,160 --> 00:12:52,040
an investment in our code base and we

00:12:49,860 --> 00:12:57,179
feel like we're building it together

00:12:52,040 --> 00:13:00,360
then code reviews actually improve the

00:12:57,179 --> 00:13:02,279
lifespan of our code base so one of the

00:13:00,360 --> 00:13:05,069
examples that Steve McConnell gives is

00:13:02,279 --> 00:13:08,339
that if you have more sets of eyes on

00:13:05,069 --> 00:13:11,249
your code base through code reviews this

00:13:08,339 --> 00:13:12,509
might seem obvious but your code base

00:13:11,249 --> 00:13:15,660
will actually get better because you

00:13:12,509 --> 00:13:16,560
have more people looking at it another

00:13:15,660 --> 00:13:18,960
great benefit

00:13:16,560 --> 00:13:22,950
is the fact that if someone leaves your

00:13:18,960 --> 00:13:25,830
team the rest of the team can still pick

00:13:22,950 --> 00:13:27,510
up and function because even if they

00:13:25,830 --> 00:13:30,360
haven't written the code that that

00:13:27,510 --> 00:13:33,390
person wrote who left they've at least

00:13:30,360 --> 00:13:35,940
reviewed it so they're somewhat familiar

00:13:33,390 --> 00:13:39,720
with the problems that they were working

00:13:35,940 --> 00:13:43,440
on and the features that they built in a

00:13:39,720 --> 00:13:46,800
similar vein being able to detect bugs

00:13:43,440 --> 00:13:49,290
and solve them is a lot easier for

00:13:46,800 --> 00:13:51,180
anyone on the team if you've reviewed

00:13:49,290 --> 00:13:54,810
code that you might have not necessarily

00:13:51,180 --> 00:13:56,970
written these are cycles of defect

00:13:54,810 --> 00:13:59,100
correction so when you identify

00:13:56,970 --> 00:14:01,290
something that's problematic in the code

00:13:59,100 --> 00:14:04,550
whether it's a bug or a design flaw and

00:14:01,290 --> 00:14:09,180
you can actually fix those things faster

00:14:04,550 --> 00:14:10,610
through code reviews but what are the

00:14:09,180 --> 00:14:13,170
different types of code reviews

00:14:10,610 --> 00:14:15,290
Goldilocks is sold she's like okay

00:14:13,170 --> 00:14:17,610
all this theory seems great but like

00:14:15,290 --> 00:14:21,540
what different types of code reviews

00:14:17,610 --> 00:14:25,160
were created because she doesn't really

00:14:21,540 --> 00:14:29,040
know about the history of code reviews

00:14:25,160 --> 00:14:31,410
as it turns out one of the earliest

00:14:29,040 --> 00:14:35,820
instances of code reviews dates back to

00:14:31,410 --> 00:14:38,610
the 70s and there was a small team at

00:14:35,820 --> 00:14:43,350
IBM that started implementing something

00:14:38,610 --> 00:14:47,660
called inspections this was basically a

00:14:43,350 --> 00:14:50,850
kind of long form code review where

00:14:47,660 --> 00:14:53,130
three people would come into a room the

00:14:50,850 --> 00:14:54,900
person who wrote the code the person who

00:14:53,130 --> 00:14:57,690
was reviewing the code and a moderator

00:14:54,900 --> 00:14:59,550
and all three of them would come in with

00:14:57,690 --> 00:15:01,380
this checklist of things that they had

00:14:59,550 --> 00:15:05,209
looked for and things that they were

00:15:01,380 --> 00:15:09,060
accountable while reviewing the code and

00:15:05,209 --> 00:15:11,700
the idea was that you would look at the

00:15:09,060 --> 00:15:14,430
code and look for possible defects

00:15:11,700 --> 00:15:17,160
within it so it might be design flaws or

00:15:14,430 --> 00:15:18,810
bugs or other things that might be

00:15:17,160 --> 00:15:22,800
problematic when you merge that code

00:15:18,810 --> 00:15:24,240
into the larger code base and the idea

00:15:22,800 --> 00:15:26,280
was that you weren't trying to

00:15:24,240 --> 00:15:28,320
necessarily fix the code in that moment

00:15:26,280 --> 00:15:30,530
you are just trying to look for gaping

00:15:28,320 --> 00:15:30,530
holes

00:15:30,540 --> 00:15:38,090
so inspections were very long types of

00:15:35,370 --> 00:15:42,030
code reviews that took 30 to 60 minutes

00:15:38,090 --> 00:15:44,970
but as Goldilocks found there is another

00:15:42,030 --> 00:15:49,820
type of code review as well and these

00:15:44,970 --> 00:15:53,970
are short reviews short reviews

00:15:49,820 --> 00:15:57,480
basically hinge on the idea that back in

00:15:53,970 --> 00:15:59,190
the 70s and even early 80s a lot of

00:15:57,480 --> 00:16:01,500
teams were not reviewing code and

00:15:59,190 --> 00:16:06,060
especially not reviewing code that was

00:16:01,500 --> 00:16:07,650
like one or two line changes and Steve

00:16:06,060 --> 00:16:09,480
McConnell did some research on this and

00:16:07,650 --> 00:16:13,290
encode complete he writes about how

00:16:09,480 --> 00:16:15,390
teams that started checking code and

00:16:13,290 --> 00:16:20,160
reviewing it when it was under a five

00:16:15,390 --> 00:16:22,170
line change saw drastic results so one

00:16:20,160 --> 00:16:24,930
of the examples he gives is that there

00:16:22,170 --> 00:16:27,660
was a team that had a 55% error rate in

00:16:24,930 --> 00:16:30,300
their code base and they started

00:16:27,660 --> 00:16:32,670
implementing short reviews where even if

00:16:30,300 --> 00:16:34,400
he was a one line change they would make

00:16:32,670 --> 00:16:36,630
sure that code was reviewed and that

00:16:34,400 --> 00:16:39,270
team went from a fifty five percent

00:16:36,630 --> 00:16:41,790
error rate to a two percent error rate

00:16:39,270 --> 00:16:45,480
which is kind of wild if you think about

00:16:41,790 --> 00:16:48,780
it in a similar vein there was another

00:16:45,480 --> 00:16:51,060
engineering team that had an 86 percent

00:16:48,780 --> 00:16:54,540
correctness rate and once they

00:16:51,060 --> 00:16:56,820
implemented short code reviews they went

00:16:54,540 --> 00:17:00,330
from an 86 percent correctness rate to

00:16:56,820 --> 00:17:03,300
ninety nine point six so this was kind

00:17:00,330 --> 00:17:06,990
of a game changer in the world and the

00:17:03,300 --> 00:17:12,810
theory of code reviews like 30 or so

00:17:06,990 --> 00:17:15,030
years ago the third type of code review

00:17:12,810 --> 00:17:16,440
that she reads about sounds similar to

00:17:15,030 --> 00:17:18,930
things that she's experienced with

00:17:16,440 --> 00:17:21,740
senior engineers on her team and this is

00:17:18,930 --> 00:17:24,000
something called a walkthrough

00:17:21,740 --> 00:17:26,250
walkthroughs are basically working

00:17:24,000 --> 00:17:28,199
meetings so the idea is that you have

00:17:26,250 --> 00:17:30,690
like a senior engineer and maybe a more

00:17:28,199 --> 00:17:34,950
junior a mid-level engineer and the two

00:17:30,690 --> 00:17:36,990
of them sit down and they talk about the

00:17:34,950 --> 00:17:39,630
design decisions made in the code in a

00:17:36,990 --> 00:17:42,990
code change and things that could

00:17:39,630 --> 00:17:44,240
possibly go wrong or things that maybe

00:17:42,990 --> 00:17:48,260
could be reconsidered

00:17:44,240 --> 00:17:49,730
refactored in a different way in Steve

00:17:48,260 --> 00:17:52,399
McConnell's research he found that

00:17:49,730 --> 00:17:56,809
walkthroughs aren't as effective but

00:17:52,399 --> 00:17:59,120
they can have some benefits they can

00:17:56,809 --> 00:18:01,149
reduce up to 30% of errors and programs

00:17:59,120 --> 00:18:05,000
but they're more learning opportunities

00:18:01,149 --> 00:18:10,100
then opportunities to actually find tons

00:18:05,000 --> 00:18:12,740
and tons of bugs in your code and as

00:18:10,100 --> 00:18:14,210
she's reading Goldilocks stumbles upon

00:18:12,740 --> 00:18:17,120
something called the peer-review

00:18:14,210 --> 00:18:20,539
sophistication scale and this is

00:18:17,120 --> 00:18:23,750
something that has been around since the

00:18:20,539 --> 00:18:25,370
late 70s and early 80s back when code

00:18:23,750 --> 00:18:28,700
reviews were kind of getting formulated

00:18:25,370 --> 00:18:31,880
and the idea was that any engineering

00:18:28,700 --> 00:18:35,570
team could look at this and kind of self

00:18:31,880 --> 00:18:39,740
assess where they fell on this review

00:18:35,570 --> 00:18:42,669
sophistication scale and as Goldilocks

00:18:39,740 --> 00:18:45,200
looks at this she starts thinking I

00:18:42,669 --> 00:18:48,830
don't think I've ever worked on a team

00:18:45,200 --> 00:18:54,169
that's been a for probably not even a

00:18:48,830 --> 00:18:55,820
three and she's like is it just me has

00:18:54,169 --> 00:18:58,789
everybody else got code reviews down or

00:18:55,820 --> 00:19:00,980
is like is everyone else feeling the

00:18:58,789 --> 00:19:05,330
same discontentment with code reviews

00:19:00,980 --> 00:19:06,919
and she's read a lot of the theory but

00:19:05,330 --> 00:19:08,899
she doesn't feel like she's able to

00:19:06,919 --> 00:19:12,350
debug what went wrong in her team's code

00:19:08,899 --> 00:19:17,409
review process so she decides to take

00:19:12,350 --> 00:19:21,620
theory and build on it one level further

00:19:17,409 --> 00:19:23,840
she decides to actually figure out what

00:19:21,620 --> 00:19:29,929
code reviews are like in the industry in

00:19:23,840 --> 00:19:33,279
practice so she does what most of us

00:19:29,929 --> 00:19:35,720
would do she asked the internet

00:19:33,279 --> 00:19:38,029
specifically she asked Twitter which

00:19:35,720 --> 00:19:41,990
sometimes goes well and sometimes does

00:19:38,029 --> 00:19:44,149
not go well but she basically asked

00:19:41,990 --> 00:19:46,029
everyone hey I'm collecting data on code

00:19:44,149 --> 00:19:51,130
reviews can you tell me what you think

00:19:46,029 --> 00:19:53,670
and what she finds is really interesting

00:19:51,130 --> 00:19:56,940
so she starts

00:19:53,670 --> 00:20:00,299
looking at this data and a quick

00:19:56,940 --> 00:20:03,630
disclaimer about this data she is not a

00:20:00,299 --> 00:20:05,100
data scientist so it's obviously not a

00:20:03,630 --> 00:20:09,120
great representation of the entire

00:20:05,100 --> 00:20:11,340
industry for one thing people who

00:20:09,120 --> 00:20:13,280
answered the survey are only gonna be

00:20:11,340 --> 00:20:16,170
people who saw her tweet and

00:20:13,280 --> 00:20:18,179
self-selected into it but it's still

00:20:16,170 --> 00:20:19,799
better than nothing so she decides to

00:20:18,179 --> 00:20:21,390
see what she can learn from this data

00:20:19,799 --> 00:20:26,520
even if it might not be the most

00:20:21,390 --> 00:20:28,380
accurate it's a start so the first

00:20:26,520 --> 00:20:31,230
things she finds is that the majority of

00:20:28,380 --> 00:20:35,690
people who answered her survey worked in

00:20:31,230 --> 00:20:40,620
Java in Ruby and rails and in JavaScript

00:20:35,690 --> 00:20:42,090
and she asked them a few quality dove

00:20:40,620 --> 00:20:45,840
questions and a few quantitative

00:20:42,090 --> 00:20:49,950
questions so the first thing she asked

00:20:45,840 --> 00:20:52,350
was half code reviews personally made

00:20:49,950 --> 00:20:54,480
you a better developer because you can't

00:20:52,350 --> 00:20:58,860
really assume that it's helped everybody

00:20:54,480 --> 00:21:01,140
so she wants to be sure and it turns out

00:20:58,860 --> 00:21:04,500
most people tend to tended to agree with

00:21:01,140 --> 00:21:06,179
her the average answer for code reviews

00:21:04,500 --> 00:21:08,970
have made me a personal developer on a

00:21:06,179 --> 00:21:11,520
scale of one to ten was about an eight

00:21:08,970 --> 00:21:13,559
point six so it seemed like most people

00:21:11,520 --> 00:21:19,549
felt like code reviews were a good thing

00:21:13,559 --> 00:21:21,660
for them personally and she saw that

00:21:19,549 --> 00:21:24,690
most people found code reviews

00:21:21,660 --> 00:21:26,760
beneficial to their entire team and the

00:21:24,690 --> 00:21:29,309
interesting thing about this was that it

00:21:26,760 --> 00:21:31,080
wasn't like just JavaScript developers

00:21:29,309 --> 00:21:34,080
or just Java developers or Swift

00:21:31,080 --> 00:21:36,510
developers everybody seemed to agree

00:21:34,080 --> 00:21:39,179
that having code reviews on their team

00:21:36,510 --> 00:21:46,140
was a good thing for the entire team and

00:21:39,179 --> 00:21:49,440
their codebase however she did notice

00:21:46,140 --> 00:21:51,799
that most people have engineering teams

00:21:49,440 --> 00:21:56,460
that had code reviews as a requirement

00:21:51,799 --> 00:22:01,380
but there was still about around 10% of

00:21:56,460 --> 00:22:03,540
people who had to request review so it's

00:22:01,380 --> 00:22:06,909
not like all teams had code reviews as a

00:22:03,540 --> 00:22:08,859
formality there were still some team

00:22:06,909 --> 00:22:14,109
that were merging code without ever

00:22:08,859 --> 00:22:16,359
actually having it reviewed but it was

00:22:14,109 --> 00:22:20,139
interesting because her data seemed to

00:22:16,359 --> 00:22:22,769
suggest that it didn't really matter

00:22:20,139 --> 00:22:26,590
what language or framework you worked in

00:22:22,769 --> 00:22:29,799
rather whether your team implemented

00:22:26,590 --> 00:22:32,529
code reviews as a actual part of your

00:22:29,799 --> 00:22:34,049
workflow or whether they didn't had

00:22:32,529 --> 00:22:36,729
nothing to do with your language and

00:22:34,049 --> 00:22:40,629
instead everything to do with your team

00:22:36,729 --> 00:22:42,489
dynamics your framework has nothing to

00:22:40,629 --> 00:22:45,369
do with how well your code review

00:22:42,489 --> 00:22:48,279
process is actually contributing to your

00:22:45,369 --> 00:22:52,979
codebase but rather it's you and your

00:22:48,279 --> 00:22:52,979
teammates was Goldilocks his guess

00:22:53,700 --> 00:22:59,440
interestingly she found that most teams

00:22:57,070 --> 00:23:03,159
only required one person to actually

00:22:59,440 --> 00:23:05,769
review the code there were some team may

00:23:03,159 --> 00:23:07,899
be around 20% 7% that said I need two to

00:23:05,769 --> 00:23:12,220
three people to review my code but for

00:23:07,899 --> 00:23:15,190
the most part one person was enough but

00:23:12,220 --> 00:23:18,279
people could wait up to five to twenty

00:23:15,190 --> 00:23:21,549
minutes or even sometimes like up to an

00:23:18,279 --> 00:23:25,179
hour spending that time to actually

00:23:21,549 --> 00:23:27,159
review code for the most part though no

00:23:25,179 --> 00:23:29,859
one was spending more than an hour

00:23:27,159 --> 00:23:31,090
really reviewing a pull request people

00:23:29,859 --> 00:23:33,009
didn't really want to spend too much

00:23:31,090 --> 00:23:37,840
time they wanted to like do it very

00:23:33,009 --> 00:23:42,669
quickly and it seemed like most people

00:23:37,840 --> 00:23:44,619
had to wait a few hours until code was

00:23:42,669 --> 00:23:49,239
actually reviewed by one of their peers

00:23:44,619 --> 00:23:51,489
so people weren't spending too much time

00:23:49,239 --> 00:23:52,869
reviewing what people had to spend a

00:23:51,489 --> 00:23:59,710
decent amount of time waiting for

00:23:52,869 --> 00:24:02,229
someone else to review this COIs all of

00:23:59,710 --> 00:24:05,080
this qualitative data or quantitative

00:24:02,229 --> 00:24:08,830
data was fine but Goldilocks was really

00:24:05,080 --> 00:24:12,429
interested in reading the results of her

00:24:08,830 --> 00:24:15,009
qualitative data so part of her survey

00:24:12,429 --> 00:24:19,119
was asking very broad open-ended

00:24:15,009 --> 00:24:21,000
questions and the responses that she got

00:24:19,119 --> 00:24:24,909
from other developed

00:24:21,000 --> 00:24:26,980
we're really interesting she started

00:24:24,909 --> 00:24:30,580
reading through the responses and she

00:24:26,980 --> 00:24:33,190
saw that there were two main things two

00:24:30,580 --> 00:24:37,000
main characteristics that would either

00:24:33,190 --> 00:24:40,149
make or break a code review and these

00:24:37,000 --> 00:24:47,039
two characteristics can kind of be

00:24:40,149 --> 00:24:50,370
summarized as energy and substance so

00:24:47,039 --> 00:24:53,440
when we say energy what do we mean well

00:24:50,370 --> 00:24:58,210
energy really boils down to who is doing

00:24:53,440 --> 00:25:01,539
the code review and how much time are

00:24:58,210 --> 00:25:05,110
they spending on it it seemed like a lot

00:25:01,539 --> 00:25:07,419
of people would either hate their code

00:25:05,110 --> 00:25:09,760
review process or love it based on the

00:25:07,419 --> 00:25:15,580
amount of energy that was spent on the

00:25:09,760 --> 00:25:20,470
code review workflow one developer Roden

00:25:15,580 --> 00:25:24,880
and they said it's not just the act of

00:25:20,470 --> 00:25:28,360
doing a code review everyone on the team

00:25:24,880 --> 00:25:30,789
should receive equal review I feel like

00:25:28,360 --> 00:25:33,610
it's so common for senior people to get

00:25:30,789 --> 00:25:39,090
no feedback because people assume they

00:25:33,610 --> 00:25:43,059
can do no wrong they totally can and

00:25:39,090 --> 00:25:45,850
senior people might want feedback junior

00:25:43,059 --> 00:25:50,289
people get nitpick to death and people

00:25:45,850 --> 00:25:52,950
forget that self-esteem is likely to be

00:25:50,289 --> 00:25:59,649
affected and people are being vulnerable

00:25:52,950 --> 00:26:01,720
when they submit a code review someone

00:25:59,649 --> 00:26:03,610
else wrote in and they said code reviews

00:26:01,720 --> 00:26:07,360
need to be acknowledged as first-class

00:26:03,610 --> 00:26:09,789
citizens in a dev team they need to be a

00:26:07,360 --> 00:26:17,260
legitimate activity that requires time

00:26:09,789 --> 00:26:20,200
and focus and it was interesting because

00:26:17,260 --> 00:26:22,450
it seemed like some people on certain

00:26:20,200 --> 00:26:25,539
teams really felt strongly about code

00:26:22,450 --> 00:26:27,970
reviews and other people didn't and that

00:26:25,539 --> 00:26:30,840
would very much leave a sour taste in

00:26:27,970 --> 00:26:30,840
their colleagues mouths

00:26:30,900 --> 00:26:36,840
one person wrote in and said we have one

00:26:34,140 --> 00:26:40,790
developer who blindly thumbs up every

00:26:36,840 --> 00:26:43,980
pull request and rarely leaves comments

00:26:40,790 --> 00:26:46,559
they're trying to game the rule of at

00:26:43,980 --> 00:26:48,450
least two approvals and it's easy to

00:26:46,559 --> 00:26:50,700
tell because inside of one minute

00:26:48,450 --> 00:26:56,340
they've approved two to three pull

00:26:50,700 --> 00:26:59,250
requests someone else said the second

00:26:56,340 --> 00:27:02,040
and third people to review a PR are more

00:26:59,250 --> 00:27:04,020
likely to have a rubber stamp of

00:27:02,040 --> 00:27:08,900
approval after seeing someone else

00:27:04,020 --> 00:27:11,100
without actually reading the code so

00:27:08,900 --> 00:27:14,640
some of the overarching themes that

00:27:11,100 --> 00:27:21,200
Goldilocks notice was that things like

00:27:14,640 --> 00:27:24,929
very large commits or very large PRS

00:27:21,200 --> 00:27:26,429
with no context would make people more

00:27:24,929 --> 00:27:30,540
likely to give a thumbs up without

00:27:26,429 --> 00:27:32,520
actually reading the code and things

00:27:30,540 --> 00:27:35,070
that really really got under some

00:27:32,520 --> 00:27:36,750
developers skin was the fact that not

00:27:35,070 --> 00:27:41,880
everybody on the team was reviewed

00:27:36,750 --> 00:27:44,100
equally unequal reviews seem to be a

00:27:41,880 --> 00:27:48,750
theme that came up again and again in

00:27:44,100 --> 00:27:50,580
her survey data and there were a lot of

00:27:48,750 --> 00:27:52,650
developers who wrote in and said I want

00:27:50,580 --> 00:27:54,150
to do code reviews more but our upper

00:27:52,650 --> 00:27:56,010
management doesn't think that they're

00:27:54,150 --> 00:27:58,410
important when they're like second-class

00:27:56,010 --> 00:28:02,150
citizens so we can't spend the time that

00:27:58,410 --> 00:28:02,150
we want to spend reviewing code

00:28:02,720 --> 00:28:09,870
Goldilocks kept reading and she saw that

00:28:06,679 --> 00:28:12,150
the idea of substance was something else

00:28:09,870 --> 00:28:14,850
that came up a lot so when we say

00:28:12,150 --> 00:28:17,880
substance what we mean is what exactly

00:28:14,850 --> 00:28:21,450
are people saying or doing while

00:28:17,880 --> 00:28:23,820
reviewing it's fine if everybody reviews

00:28:21,450 --> 00:28:26,130
and is reviewed equally but what they're

00:28:23,820 --> 00:28:32,910
saying and how they're saying those

00:28:26,130 --> 00:28:36,470
things really matters so one developer

00:28:32,910 --> 00:28:39,960
answered her survey and they said this

00:28:36,470 --> 00:28:42,630
if I ever find myself going back and

00:28:39,960 --> 00:28:43,510
forth on something in comments on a pull

00:28:42,630 --> 00:28:45,820
request

00:28:43,510 --> 00:28:49,060
I'll ping the other person and ask them

00:28:45,820 --> 00:28:53,860
to pair sometimes it's just really hard

00:28:49,060 --> 00:28:57,610
to talk to someone another developer

00:28:53,860 --> 00:29:01,240
wrote this we need to review the code

00:28:57,610 --> 00:29:04,330
and not the person we should let tools

00:29:01,240 --> 00:29:06,520
handle styling changes for us so that we

00:29:04,330 --> 00:29:11,170
as a team don't need to spend time on

00:29:06,520 --> 00:29:13,690
this and another developer wrote in and

00:29:11,170 --> 00:29:15,820
said that on their team people actually

00:29:13,690 --> 00:29:18,160
trolled each other's code in pull

00:29:15,820 --> 00:29:20,140
requests and there is no code of conduct

00:29:18,160 --> 00:29:21,700
so there was no way to enforce if people

00:29:20,140 --> 00:29:26,920
were actually being kind to one another

00:29:21,700 --> 00:29:28,540
or not and what was really interesting

00:29:26,920 --> 00:29:32,530
was as she read through some of these

00:29:28,540 --> 00:29:34,870
comments she just did like a quick find

00:29:32,530 --> 00:29:39,730
and file through all of her survey data

00:29:34,870 --> 00:29:42,580
and she saw that around 5% of people who

00:29:39,730 --> 00:29:45,520
responded actually used the word nitpick

00:29:42,580 --> 00:29:48,700
when talking about code reviews they had

00:29:45,520 --> 00:29:51,100
such a negative reaction to people

00:29:48,700 --> 00:29:55,480
picking on their code and doing it in a

00:29:51,100 --> 00:29:58,300
really unkind way so some of the themes

00:29:55,480 --> 00:30:01,420
that she took away was that people got

00:29:58,300 --> 00:30:04,240
really really frustrated and irritated

00:30:01,420 --> 00:30:06,970
when pull requests would turn into lots

00:30:04,240 --> 00:30:08,020
and lots of comments and it seemed like

00:30:06,970 --> 00:30:10,000
people would rather just have a

00:30:08,020 --> 00:30:13,500
conversation with another human rather

00:30:10,000 --> 00:30:13,500
than leaving comments on a pull request

00:30:14,940 --> 00:30:20,380
the nitpicking thing came up again and

00:30:17,650 --> 00:30:23,920
again and it seemed like pull requests

00:30:20,380 --> 00:30:27,300
that turned into a free-for-all where

00:30:23,920 --> 00:30:30,220
everybody's focusing on style and syntax

00:30:27,300 --> 00:30:31,990
was just generally something that was

00:30:30,220 --> 00:30:34,180
going to lead to a really negative code

00:30:31,990 --> 00:30:36,310
review experience and this was

00:30:34,180 --> 00:30:41,740
particularly the case for people who

00:30:36,310 --> 00:30:45,490
were more junior or new in the field but

00:30:41,740 --> 00:30:48,850
the biggest one was developers who wrote

00:30:45,490 --> 00:30:50,950
in anonymously and said all of my

00:30:48,850 --> 00:30:53,590
negative experiences with code reviews

00:30:50,950 --> 00:30:56,559
have stemmed from situations when

00:30:53,590 --> 00:30:59,080
someone has been egotistical and

00:30:56,559 --> 00:31:01,929
see empathy whether they were the one

00:30:59,080 --> 00:31:10,299
being reviewed or they were the one

00:31:01,929 --> 00:31:13,509
doing the reviewing so as Goldilocks

00:31:10,299 --> 00:31:16,029
look through all this data she realized

00:31:13,509 --> 00:31:18,190
that there was kind of a disconnect

00:31:16,029 --> 00:31:19,629
between the theory of code reviews and

00:31:18,190 --> 00:31:24,190
what was actually happening in practice

00:31:19,629 --> 00:31:27,940
and the disconnect was that nobody was

00:31:24,190 --> 00:31:29,889
talking about what was being done in

00:31:27,940 --> 00:31:32,679
practice and whether it was actually

00:31:29,889 --> 00:31:34,950
working people were going through the

00:31:32,679 --> 00:31:37,720
actions and a lot of teams were

00:31:34,950 --> 00:31:39,820
implementing code reviews but based on

00:31:37,720 --> 00:31:43,659
all of this data from engineers who

00:31:39,820 --> 00:31:48,909
worked in all these languages a lot of

00:31:43,659 --> 00:31:51,340
people weren't happy with it so there

00:31:48,909 --> 00:31:53,200
was this strange disconnect between what

00:31:51,340 --> 00:31:54,669
code reviews were meant to be and how

00:31:53,200 --> 00:31:57,309
they were actually functioning in the

00:31:54,669 --> 00:31:59,139
industry today and the biggest problem

00:31:57,309 --> 00:32:01,600
she saw was that nobody was talking

00:31:59,139 --> 00:32:03,100
about it she had felt so alone in her

00:32:01,600 --> 00:32:06,369
own team that she thought it was just

00:32:03,100 --> 00:32:13,740
her but now she realized it wasn't it

00:32:06,369 --> 00:32:15,789
was all the people around her too so I

00:32:13,740 --> 00:32:18,669
started this talk by saying that this is

00:32:15,789 --> 00:32:22,749
a fairy tale and this is modern-day

00:32:18,669 --> 00:32:28,470
Goldilocks I haven't been entirely

00:32:22,749 --> 00:32:35,679
honest with you because I'm Goldilocks

00:32:28,470 --> 00:32:37,990
surprised these days I actually don't

00:32:35,679 --> 00:32:39,909
work at either of those two companies I

00:32:37,990 --> 00:32:42,730
work at a company called tilde in

00:32:39,909 --> 00:32:46,119
Portland and we build a product called

00:32:42,730 --> 00:32:49,269
sky life which is a profiler for rails

00:32:46,119 --> 00:32:57,639
applications but some of you might know

00:32:49,269 --> 00:32:59,320
tilde as the creators of ember and to

00:32:57,639 --> 00:33:02,740
tell you the truth since we're being

00:32:59,320 --> 00:33:05,220
honest I don't actually know if we've

00:33:02,740 --> 00:33:07,210
got our code review process down I'm

00:33:05,220 --> 00:33:10,049
sure there are things about it that are

00:33:07,210 --> 00:33:10,049
still problematic

00:33:10,580 --> 00:33:15,440
but what I do know is that every single

00:33:13,039 --> 00:33:18,230
person on our team feels comfortable

00:33:15,440 --> 00:33:20,929
talking about it in fact one of my

00:33:18,230 --> 00:33:22,720
colleagues actually submitted an RFC to

00:33:20,929 --> 00:33:25,640
totally change our code review process

00:33:22,720 --> 00:33:26,899
because they were so frustrated with the

00:33:25,640 --> 00:33:28,610
way that I was working they were like we

00:33:26,899 --> 00:33:30,559
should do this differently and they

00:33:28,610 --> 00:33:34,360
wrote a proposal and everybody in our

00:33:30,559 --> 00:33:36,769
company looked at it and reviewed it and

00:33:34,360 --> 00:33:38,630
we ended up changing how we did code

00:33:36,769 --> 00:33:40,970
reviews and it's something that we still

00:33:38,630 --> 00:33:47,299
discuss often whenever it comes up as a

00:33:40,970 --> 00:33:49,820
point of contention so based on all of

00:33:47,299 --> 00:33:51,139
this research that I collected and all

00:33:49,820 --> 00:33:53,210
of the things that I've learned about

00:33:51,139 --> 00:33:55,460
code reviews over this past year I

00:33:53,210 --> 00:33:57,620
wanted to share a couple things that

00:33:55,460 --> 00:33:59,720
I've learned are small wins that you can

00:33:57,620 --> 00:34:03,799
do that you can take back to your team

00:33:59,720 --> 00:34:09,050
and a couple big ones too so let's start

00:34:03,799 --> 00:34:11,030
with a small stuff first a really easy

00:34:09,050 --> 00:34:14,629
way to make your code review process

00:34:11,030 --> 00:34:16,010
better is by using commit hooks so I

00:34:14,629 --> 00:34:18,440
recently learned about something called

00:34:16,010 --> 00:34:20,750
Huskie which I haven't actually used but

00:34:18,440 --> 00:34:22,460
I've heard good things about which

00:34:20,750 --> 00:34:24,830
allows you to basically create commit

00:34:22,460 --> 00:34:27,290
hooks so that things like running tests

00:34:24,830 --> 00:34:28,780
or linters or anything that needs to

00:34:27,290 --> 00:34:31,399
happen before creating a pull request

00:34:28,780 --> 00:34:33,560
even before making the plural requests

00:34:31,399 --> 00:34:35,270
before you commit you can make sure all

00:34:33,560 --> 00:34:37,580
of those little things are taken care of

00:34:35,270 --> 00:34:40,129
so that you never have a pull request

00:34:37,580 --> 00:34:41,690
that devolves into comments about how

00:34:40,129 --> 00:34:43,369
something didn't happen that should have

00:34:41,690 --> 00:34:48,740
happened before the pull request was

00:34:43,369 --> 00:34:50,480
made another small win github has an

00:34:48,740 --> 00:34:54,649
amazing feature where you can actually

00:34:50,480 --> 00:34:59,660
create PR templates so here's our PR

00:34:54,649 --> 00:35:02,089
template that we use and sidenote

00:34:59,660 --> 00:35:03,109
awesome full request is a terrible name

00:35:02,089 --> 00:35:05,869
don't have our name your pull request

00:35:03,109 --> 00:35:08,030
that there's no context in that but

00:35:05,869 --> 00:35:10,130
basically all of the things that we

00:35:08,030 --> 00:35:12,589
expect every single pull request to have

00:35:10,130 --> 00:35:15,890
we create that and add it as part of the

00:35:12,589 --> 00:35:19,160
template my favorite thing about our

00:35:15,890 --> 00:35:21,650
template is the section that says this

00:35:19,160 --> 00:35:23,569
pull request is required before you can

00:35:21,650 --> 00:35:24,060
merge it the authors have to be proud of

00:35:23,569 --> 00:35:25,370
it

00:35:24,060 --> 00:35:28,020
which i think is really important

00:35:25,370 --> 00:35:29,760
acknowledging the positive things in a

00:35:28,020 --> 00:35:32,970
code review and in the code that's being

00:35:29,760 --> 00:35:36,680
added not just the things that you know

00:35:32,970 --> 00:35:36,680
could use some constructive criticism

00:35:36,830 --> 00:35:44,040
another great thing is using screenshots

00:35:39,630 --> 00:35:47,280
or gifs if you give your colleagues

00:35:44,040 --> 00:35:49,160
context of what's happening in your pull

00:35:47,280 --> 00:35:51,840
request whether it's fixing a bug or

00:35:49,160 --> 00:35:54,120
adding a new feature they're less likely

00:35:51,840 --> 00:35:56,250
to look like confused puppies when

00:35:54,120 --> 00:35:57,870
they're looking at your code because

00:35:56,250 --> 00:36:03,380
you've given them all the context that

00:35:57,870 --> 00:36:03,380
they need linters

00:36:04,990 --> 00:36:12,130
you should just use them they're awesome

00:36:08,550 --> 00:36:15,640
and you will never have a discussion

00:36:12,130 --> 00:36:17,560
about what syntax your team wants in a

00:36:15,640 --> 00:36:20,380
pull request because you've already

00:36:17,560 --> 00:36:23,110
agreed upon what linter styles and what

00:36:20,380 --> 00:36:24,970
you want to adopt and not use ahead of

00:36:23,110 --> 00:36:27,610
time so nobody ever needs to feel

00:36:24,970 --> 00:36:31,420
nitpicked and your code review process

00:36:27,610 --> 00:36:33,250
can actually focus on larger things that

00:36:31,420 --> 00:36:37,410
don't involve things that could be fixed

00:36:33,250 --> 00:36:40,080
with a linter another great thing is

00:36:37,410 --> 00:36:45,850
encapsulating pull requests into smaller

00:36:40,080 --> 00:36:48,160
bite-sized things I like to think of how

00:36:45,850 --> 00:36:50,380
we're always talking about encapsulating

00:36:48,160 --> 00:36:53,980
code into like little you know packages

00:36:50,380 --> 00:36:55,420
that are like small contained don't

00:36:53,980 --> 00:36:58,540
necessarily lean on a lot of other

00:36:55,420 --> 00:37:00,460
things in a similar way if you make a

00:36:58,540 --> 00:37:03,369
pull request that is encapsulated and

00:37:00,460 --> 00:37:05,260
provides context it's a lot easier for

00:37:03,369 --> 00:37:08,350
people to look at this isolated thing

00:37:05,260 --> 00:37:10,090
and then the barrier to entry for

00:37:08,350 --> 00:37:12,369
reviewing your pull request is a lot

00:37:10,090 --> 00:37:14,560
lower people are gonna be less likely to

00:37:12,369 --> 00:37:17,560
wait until the end of the day because

00:37:14,560 --> 00:37:20,260
it's an encapsulated small pull request

00:37:17,560 --> 00:37:21,820
with obvious commits and it's a lot

00:37:20,260 --> 00:37:27,670
clearer for someone to see what you're

00:37:21,820 --> 00:37:30,400
trying to do if you have a team that

00:37:27,670 --> 00:37:32,790
this actually can work for having

00:37:30,400 --> 00:37:35,560
specific reviewers can be really awesome

00:37:32,790 --> 00:37:37,750
so if you have specific reviewers you

00:37:35,560 --> 00:37:40,630
can ensure that everybody on the team is

00:37:37,750 --> 00:37:43,030
actually getting reviewed and is being

00:37:40,630 --> 00:37:45,070
reviewed equally and it helps distribute

00:37:43,030 --> 00:37:46,800
the workloads so that it's never just

00:37:45,070 --> 00:37:49,210
one or two people reviewing code

00:37:46,800 --> 00:37:51,880
everybody is taking that on and it

00:37:49,210 --> 00:37:58,710
really helps the idea of collective

00:37:51,880 --> 00:38:00,730
ownership of a codebase so big ones a

00:37:58,710 --> 00:38:03,609
lot of little things you can do but

00:38:00,730 --> 00:38:09,430
these take a little bit more time but in

00:38:03,609 --> 00:38:12,910
my opinion they're really worth it so in

00:38:09,430 --> 00:38:15,040
reviewing everyone equally part of that

00:38:12,910 --> 00:38:17,440
is pushing for a larger culture on your

00:38:15,040 --> 00:38:18,210
team we're gonna bill 'ti is actually

00:38:17,440 --> 00:38:21,090
valued

00:38:18,210 --> 00:38:23,860
this is hard to do because it involves

00:38:21,090 --> 00:38:26,290
changing the languages you use in pull

00:38:23,860 --> 00:38:28,270
requests and in you know even in

00:38:26,290 --> 00:38:30,460
conversations about code and slack or

00:38:28,270 --> 00:38:32,200
something like that it involves changing

00:38:30,460 --> 00:38:36,400
how you talk to each other on the team

00:38:32,200 --> 00:38:38,470
and perhaps that it involves refocusing

00:38:36,400 --> 00:38:40,780
on reviewing a person to reviewing the

00:38:38,470 --> 00:38:43,900
code which can be hard to do and takes

00:38:40,780 --> 00:38:46,480
time but it's really worth it and can

00:38:43,900 --> 00:38:50,040
totally change the dynamic for everybody

00:38:46,480 --> 00:38:50,040
on the team regardless of skill level

00:38:51,690 --> 00:39:00,970
developing empathy so you saw an example

00:38:55,720 --> 00:39:02,980
of this in our RP our template but

00:39:00,970 --> 00:39:06,670
making a habit of calling out the good

00:39:02,980 --> 00:39:09,940
stuff in a code review is super

00:39:06,670 --> 00:39:11,590
important a lot of the times people feel

00:39:09,940 --> 00:39:13,840
that code reviews are just really

00:39:11,590 --> 00:39:15,700
negative and that you're putting

00:39:13,840 --> 00:39:17,500
yourself out there to be vulnerable that

00:39:15,700 --> 00:39:19,930
people are gonna jump on and attack all

00:39:17,500 --> 00:39:23,170
the things you did but if you changed

00:39:19,930 --> 00:39:25,990
the paradigm of your code review flow so

00:39:23,170 --> 00:39:27,910
that people are also equally calling out

00:39:25,990 --> 00:39:30,760
all the awesome things that someone did

00:39:27,910 --> 00:39:33,840
they're gonna feel more confident in

00:39:30,760 --> 00:39:40,120
being vulnerable with their team mates

00:39:33,840 --> 00:39:44,920
again hard to do but worth it this one

00:39:40,120 --> 00:39:47,080
was the most important iterate it's so

00:39:44,920 --> 00:39:51,400
important I'll say it again it's her

00:39:47,080 --> 00:39:53,380
rate and what I mean by this is start a

00:39:51,400 --> 00:39:55,900
conversation if you feel like your code

00:39:53,380 --> 00:39:57,970
review flow isn't working well and if

00:39:55,900 --> 00:40:01,570
it's not working well after six months

00:39:57,970 --> 00:40:02,860
or things are going maybe not as

00:40:01,570 --> 00:40:04,990
smoothly as you'd like have a

00:40:02,860 --> 00:40:06,670
conversation about it again maybe

00:40:04,990 --> 00:40:09,850
introduce a process where someone can

00:40:06,670 --> 00:40:12,580
write an RFC or someone can anonymously

00:40:09,850 --> 00:40:14,410
send a message in slack about something

00:40:12,580 --> 00:40:16,960
that might not be working for them in

00:40:14,410 --> 00:40:20,170
the code review process or discuss it in

00:40:16,960 --> 00:40:22,630
your retros if you have them the most

00:40:20,170 --> 00:40:23,950
important thing you can do and the thing

00:40:22,630 --> 00:40:26,230
that I hope all of you will take away

00:40:23,950 --> 00:40:29,410
from this talk is to have a conversation

00:40:26,230 --> 00:40:31,480
about whether your code review process

00:40:29,410 --> 00:40:34,810
is actually working

00:40:31,480 --> 00:40:37,300
I hope you'll reflect on whether your

00:40:34,810 --> 00:40:39,780
quality gates are actually of good

00:40:37,300 --> 00:40:42,760
quality because if I've learned anything

00:40:39,780 --> 00:40:46,090
in researching and talking to other

00:40:42,760 --> 00:40:49,450
developers about code reviews it's that

00:40:46,090 --> 00:40:52,080
a lot of us are unhappy and we're just

00:40:49,450 --> 00:40:57,550
not talking about it hopefully we will

00:40:52,080 --> 00:40:59,950
and I think this quote which somebody

00:40:57,550 --> 00:41:02,100
wrote in to the survey really summarizes

00:40:59,950 --> 00:41:05,710
it better than I ever could

00:41:02,100 --> 00:41:10,750
they said I love code reviews in theory

00:41:05,710 --> 00:41:13,630
in practice they are only as good as the

00:41:10,750 --> 00:41:18,910
group that's responsible for conducting

00:41:13,630 --> 00:41:22,540
them in the right manner the hard stuff

00:41:18,910 --> 00:41:25,660
about code isn't the code it's the

00:41:22,540 --> 00:41:27,400
people who write the code and code

00:41:25,660 --> 00:41:30,430
reviews are kind of the intersect

00:41:27,400 --> 00:41:33,760
intersection of the humans who write the

00:41:30,430 --> 00:41:35,670
code and the code that they write we

00:41:33,760 --> 00:41:39,670
could all do a little bit better job of

00:41:35,670 --> 00:41:41,680
making sure that we respect the humans

00:41:39,670 --> 00:41:47,020
that are involved in making software

00:41:41,680 --> 00:41:48,220
that we all consume and use so if you

00:41:47,020 --> 00:41:50,590
are interested in learning more about

00:41:48,220 --> 00:41:52,780
code reviews or if you'd like to

00:41:50,590 --> 00:41:55,630
contribute to the survey you can go to

00:41:52,780 --> 00:41:58,390
better code reviews and there's also a

00:41:55,630 --> 00:42:00,970
much longer in-depth written version of

00:41:58,390 --> 00:42:05,080
this talk that you can go to and fitly

00:42:00,970 --> 00:42:06,760
better code reviews and thank you so

00:42:05,080 --> 00:42:09,300
very much for your time you've been an

00:42:06,760 --> 00:42:09,300

YouTube URL: https://www.youtube.com/watch?v=d2CMwgm2pXk


