Title: Sara Soueudan: The [svg] of .svg | CSSConf Budapest 2017
Publication date: 2018-02-16
Playlist: CSSConf Budapest 2017
Description: 
	Scalable Vector Graphics, or Documents? Both. SVG may be known more as an image format, perfect for displaying icons and illustrations, including animated ones. But there are other aspects of SVG that make it as powerful as it is, and those aspects stem from its nature as a document format, as well as its graphical nature. In this talk, Sara is going to highlight some SVG's document side and show you how it can be leveraged to improve and optimize the way we deliver content such as text and images for the Web, including SVG itself.
Captions: 
	00:00:03,080 --> 00:00:10,050
hello good morning everyone

00:00:07,560 --> 00:00:12,630
I hope you're ready because my talk is

00:00:10,050 --> 00:00:16,859
gonna be a really big change of context

00:00:12,630 --> 00:00:18,480
as pace as well as content I'm gonna be

00:00:16,859 --> 00:00:20,970
talking about a lot more technical stuff

00:00:18,480 --> 00:00:22,740
there's gonna be a lot of code I'm

00:00:20,970 --> 00:00:25,380
specifically going to talk about the

00:00:22,740 --> 00:00:26,789
document side of SVG so over a lot over

00:00:25,380 --> 00:00:28,289
the last three years I've been working a

00:00:26,789 --> 00:00:31,230
lot with SVG and I've been seeing a lot

00:00:28,289 --> 00:00:32,790
of developers use SVG a lot more than

00:00:31,230 --> 00:00:35,460
they used to do before which is amazing

00:00:32,790 --> 00:00:38,100
but I've been seeing them like they're

00:00:35,460 --> 00:00:40,320
there's usually to focus on two specific

00:00:38,100 --> 00:00:43,160
things and SVG either using them oh

00:00:40,320 --> 00:00:43,160
there's a dog in here

00:00:43,550 --> 00:00:48,360
use them using them either to display

00:00:46,140 --> 00:00:50,700
small icons and illustrations or to

00:00:48,360 --> 00:00:51,989
animate icons and illustrations or even

00:00:50,700 --> 00:00:53,699
bigger stuff but usually either

00:00:51,989 --> 00:00:56,370
displaying simple static images or

00:00:53,699 --> 00:00:58,140
animating them but SVG because of its

00:00:56,370 --> 00:01:00,090
nature as both an image format and the

00:00:58,140 --> 00:01:02,730
document format it can do a lot more

00:01:00,090 --> 00:01:04,500
than that and the document side of SVG

00:01:02,730 --> 00:01:06,360
is not usually touched a lot I'm not

00:01:04,500 --> 00:01:09,180
sure if it's because developers don't

00:01:06,360 --> 00:01:11,040
know of what's possible with SVG or

00:01:09,180 --> 00:01:13,049
maybe they haven't had the time to look

00:01:11,040 --> 00:01:14,610
into it so I'm going to go over just

00:01:13,049 --> 00:01:17,040
some of the things that you can do with

00:01:14,610 --> 00:01:19,500
SVG hopefully they will be able to

00:01:17,040 --> 00:01:21,720
inspire you to do more actually did you

00:01:19,500 --> 00:01:24,990
know that SVG is so powerful that and

00:01:21,720 --> 00:01:28,400
dr. whose season 7 episode 2 missiles

00:01:24,990 --> 00:01:31,200
are being guided by the power of SVG

00:01:28,400 --> 00:01:33,509
that's pretty cool huh now seriously

00:01:31,200 --> 00:01:35,189
though there is so much that you can do

00:01:33,509 --> 00:01:37,350
and I'm going to be only be gonna be

00:01:35,189 --> 00:01:39,270
covering like four or five things I'm

00:01:37,350 --> 00:01:41,250
gonna be starting with cropping scaling

00:01:39,270 --> 00:01:43,200
and preserving aspect ratio using using

00:01:41,250 --> 00:01:45,840
SVG now in particular I'm gonna be

00:01:43,200 --> 00:01:48,450
showing you how you can use SVG SVG can

00:01:45,840 --> 00:01:49,680
be used to replace certain CSS features

00:01:48,450 --> 00:01:51,390
when the browser support for those

00:01:49,680 --> 00:01:53,340
features is not really that good now

00:01:51,390 --> 00:01:55,350
this is not an SVG versus CSS thing

00:01:53,340 --> 00:01:57,119
these two work fantastically together

00:01:55,350 --> 00:01:58,920
but there are certain things that we can

00:01:57,119 --> 00:02:01,409
do with with CSS that were actually

00:01:58,920 --> 00:02:02,729
imported from SVG and browser support

00:02:01,409 --> 00:02:05,009
for those features is not really that

00:02:02,729 --> 00:02:07,049
good yet so in the meantime you can use

00:02:05,009 --> 00:02:09,420
SVG as long as you know about how those

00:02:07,049 --> 00:02:11,700
things work in SVG now when we talk

00:02:09,420 --> 00:02:13,420
about cropping scaling and preserving

00:02:11,700 --> 00:02:15,130
aspect ratio SVG there

00:02:13,420 --> 00:02:17,530
two attributes in particular that we

00:02:15,130 --> 00:02:19,720
usually talk about that they will do all

00:02:17,530 --> 00:02:21,610
of this work for us the SVG view box

00:02:19,720 --> 00:02:24,700
what I call or what I like to call the

00:02:21,610 --> 00:02:26,800
SVG superpowers and the SVG preserve

00:02:24,700 --> 00:02:28,270
aspect ratio attribute I like to call

00:02:26,800 --> 00:02:29,410
the cousin of the view box or the best

00:02:28,270 --> 00:02:32,470
friend because they do amazing things

00:02:29,410 --> 00:02:36,580
together now these two are the most

00:02:32,470 --> 00:02:39,160
powerful and possibly less or underused

00:02:36,580 --> 00:02:40,569
attributes of SVG now before we get into

00:02:39,160 --> 00:02:41,440
how these two work together and how

00:02:40,569 --> 00:02:42,730
we're going to use them

00:02:41,440 --> 00:02:44,980
I want to go we need to be able to

00:02:42,730 --> 00:02:47,350
differentiate between the SVG view box

00:02:44,980 --> 00:02:50,319
and the SVG view port because there are

00:02:47,350 --> 00:02:52,299
two different concepts now the sq2 view

00:02:50,319 --> 00:02:54,069
port is the viewing area of the SVG you

00:02:52,299 --> 00:02:56,290
can think of it as a window through

00:02:54,069 --> 00:02:58,510
which you see an inset a certain scene

00:02:56,290 --> 00:03:00,549
just like a regular window this the

00:02:58,510 --> 00:03:03,310
scene could be visible in its entirety

00:03:00,549 --> 00:03:04,840
or just partially within that window now

00:03:03,310 --> 00:03:07,180
the size of that window every window has

00:03:04,840 --> 00:03:08,739
a finite size the finite size of this

00:03:07,180 --> 00:03:10,720
window is determined by the width and

00:03:08,739 --> 00:03:13,330
height attributes on the route SVG

00:03:10,720 --> 00:03:15,040
element for example in this SVG here the

00:03:13,330 --> 00:03:16,840
black borders in this example are the

00:03:15,040 --> 00:03:18,489
borders of the SVG and they are defined

00:03:16,840 --> 00:03:21,160
using the width and height attributes on

00:03:18,489 --> 00:03:23,980
the SVG element and they establish what

00:03:21,160 --> 00:03:26,019
is known as the viewport of the SVG the

00:03:23,980 --> 00:03:27,970
viewport is what the browser uses to

00:03:26,019 --> 00:03:30,160
determine how the SVG behaves in the

00:03:27,970 --> 00:03:31,810
context of the page just like any other

00:03:30,160 --> 00:03:33,489
HTML element that has a width and a

00:03:31,810 --> 00:03:35,320
height the browser uses those dimensions

00:03:33,489 --> 00:03:37,180
in order to layout the entire page and

00:03:35,320 --> 00:03:38,709
if you change the width and height of an

00:03:37,180 --> 00:03:39,790
HTML element it's going to affect the

00:03:38,709 --> 00:03:41,890
entire layout and there's going to be

00:03:39,790 --> 00:03:43,600
repainting and we layout this is the

00:03:41,890 --> 00:03:45,640
kind of width and height that SVG also

00:03:43,600 --> 00:03:46,959
has and just like HTML elements the

00:03:45,640 --> 00:03:48,549
width and the height establish a

00:03:46,959 --> 00:03:50,260
coordinate system on the SVG that

00:03:48,549 --> 00:03:52,900
coordinate system is called the initial

00:03:50,260 --> 00:03:54,790
coordinate system but this coordinate

00:03:52,900 --> 00:03:56,470
system is not what it may seem at first

00:03:54,790 --> 00:03:59,530
so what you see here the cat inside of

00:03:56,470 --> 00:04:01,540
the borders the browser does not use the

00:03:59,530 --> 00:04:03,609
initial coordinate system of the SVG of

00:04:01,540 --> 00:04:07,690
the viewport to draw the SVG on the

00:04:03,609 --> 00:04:11,829
canvas because conceptually the canvas

00:04:07,690 --> 00:04:13,660
is infinite in both dimensions so just a

00:04:11,829 --> 00:04:15,400
quickly finishing the canvas is the

00:04:13,660 --> 00:04:17,320
space or the area where the SVG content

00:04:15,400 --> 00:04:19,419
is drawn conceptually it's infinite in

00:04:17,320 --> 00:04:20,799
both dimensions however it is rendered

00:04:19,419 --> 00:04:22,990
on the screen relative to a finite

00:04:20,799 --> 00:04:24,280
region known as the viewport our

00:04:22,990 --> 00:04:26,020
rectangle

00:04:24,280 --> 00:04:27,670
areas of the SVG that lie beyond the

00:04:26,020 --> 00:04:29,770
boundaries of the viewport are clipped

00:04:27,670 --> 00:04:31,480
off and not visible now I like to think

00:04:29,770 --> 00:04:34,030
about SVG is in the sense as being

00:04:31,480 --> 00:04:35,680
similar to Google Maps so you have this

00:04:34,030 --> 00:04:37,660
small finite area just like an iframe

00:04:35,680 --> 00:04:39,250
you see only part of that map but if you

00:04:37,660 --> 00:04:41,590
drag that map around in the background

00:04:39,250 --> 00:04:43,090
you can see a lot more so whenever I

00:04:41,590 --> 00:04:45,010
think about SVG and I have to think

00:04:43,090 --> 00:04:47,620
about viewport versus canvas I think

00:04:45,010 --> 00:04:49,720
about it literally as two layers there's

00:04:47,620 --> 00:04:51,400
the front layer just like a stencil with

00:04:49,720 --> 00:04:53,169
a small rectangle and then there's the

00:04:51,400 --> 00:04:55,900
back layer where all of my drawing is

00:04:53,169 --> 00:04:57,370
taking place now in order for the

00:04:55,900 --> 00:04:59,260
browser to be able to draw on that

00:04:57,370 --> 00:05:01,300
infinite canvas that needs a coordinate

00:04:59,260 --> 00:05:03,310
system and because it does not use the

00:05:01,300 --> 00:05:04,840
coordinate system of the SVG width and

00:05:03,310 --> 00:05:07,300
height it's going to need another

00:05:04,840 --> 00:05:11,020
coordinate system so yes we have two

00:05:07,300 --> 00:05:13,360
coordinate systems and SVG the

00:05:11,020 --> 00:05:15,430
coordinate system created inside of the

00:05:13,360 --> 00:05:17,110
SVG on the canvas is created using the

00:05:15,430 --> 00:05:18,970
SVG view box that's what the view box is

00:05:17,110 --> 00:05:20,680
for so we have the U port which is the

00:05:18,970 --> 00:05:22,360
window width and height and we have the

00:05:20,680 --> 00:05:28,330
view box which is the coordinate system

00:05:22,360 --> 00:05:30,100
on the canvas the coordinate system on

00:05:28,330 --> 00:05:32,410
the canvas has a different name so we

00:05:30,100 --> 00:05:34,630
had initial initial chord in a system on

00:05:32,410 --> 00:05:36,010
the viewport I still like there's I

00:05:34,630 --> 00:05:37,990
think you're doing this for three years

00:05:36,010 --> 00:05:39,400
and I still have to work viewport versus

00:05:37,990 --> 00:05:41,229
view box initial coordinate system

00:05:39,400 --> 00:05:42,729
versus the user coordinate system you're

00:05:41,229 --> 00:05:44,710
rarely going to be using those names

00:05:42,729 --> 00:05:47,200
anyway so it's usually viewport versus

00:05:44,710 --> 00:05:49,870
view box now the viewport takes four

00:05:47,200 --> 00:05:51,280
numerical numerical values the first

00:05:49,870 --> 00:05:53,200
made up four values the first to

00:05:51,280 --> 00:05:55,479
determine determine the coordinates of

00:05:53,200 --> 00:05:57,340
the top left corner of the of the

00:05:55,479 --> 00:05:58,720
coordinate system so initially basically

00:05:57,340 --> 00:06:00,550
where the coordinate system starts and

00:05:58,720 --> 00:06:01,720
then you have the the width and the

00:06:00,550 --> 00:06:04,600
height of the coordinate system because

00:06:01,720 --> 00:06:06,700
even though the canvas is infinite the

00:06:04,600 --> 00:06:08,590
coordinate system has to be finite now

00:06:06,700 --> 00:06:10,410
together these values make up the

00:06:08,590 --> 00:06:13,210
coordinate system and they are initially

00:06:10,410 --> 00:06:15,460
initially identical to the initial

00:06:13,210 --> 00:06:17,020
coordinate system so when you create an

00:06:15,460 --> 00:06:18,669
SVG in Illustrator for example and you

00:06:17,020 --> 00:06:20,260
export that SVG you're going to find

00:06:18,669 --> 00:06:21,520
that the view box the width and the

00:06:20,260 --> 00:06:23,080
height on the view box are going to be

00:06:21,520 --> 00:06:23,860
identical and equal to the width on the

00:06:23,080 --> 00:06:26,470
height on the SVG

00:06:23,860 --> 00:06:28,360
this is the default state but things

00:06:26,470 --> 00:06:30,400
start to get a little bit confusing and

00:06:28,360 --> 00:06:32,289
too exciting when you start changing

00:06:30,400 --> 00:06:33,590
these values and this is where I'm going

00:06:32,289 --> 00:06:36,740
to be using

00:06:33,590 --> 00:06:45,500
my different accordant Gordian system

00:06:36,740 --> 00:06:47,270
demo bigger so I create it just I'm

00:06:45,500 --> 00:06:49,220
gonna make them identical at first so

00:06:47,270 --> 00:06:50,660
the gray coordinate system that you see

00:06:49,220 --> 00:06:53,180
here is the coordinate system

00:06:50,660 --> 00:06:55,520
established on the SVG so the SVG is 800

00:06:53,180 --> 00:06:58,670
pixels wide by 600 pixels high and

00:06:55,520 --> 00:07:00,350
initially the coordinate system on the

00:06:58,670 --> 00:07:03,290
canvas which is the view box is

00:07:00,350 --> 00:07:06,410
identical this is what we have here okay

00:07:03,290 --> 00:07:08,330
now by changing the values I created

00:07:06,410 --> 00:07:10,580
this demo three years ago when I was

00:07:08,330 --> 00:07:12,040
first getting into SVG I was started

00:07:10,580 --> 00:07:14,690
changing the values of the view box

00:07:12,040 --> 00:07:15,950
unexpected things happened I banged my

00:07:14,690 --> 00:07:18,040
head against the wall for two weeks

00:07:15,950 --> 00:07:20,300
before I got finally to the aha moment

00:07:18,040 --> 00:07:22,010
where I figure out the difference

00:07:20,300 --> 00:07:23,780
between them and the only reason I was

00:07:22,010 --> 00:07:25,310
able to do it is because I created this

00:07:23,780 --> 00:07:28,550
to visualize them otherwise it would

00:07:25,310 --> 00:07:30,260
have been really difficult so view box

00:07:28,550 --> 00:07:31,850
viewport there initially the same but

00:07:30,260 --> 00:07:33,710
you can change the value of the width

00:07:31,850 --> 00:07:37,160
and the height of the view box inside so

00:07:33,710 --> 00:07:39,110
if you make it bigger the aspect ratio

00:07:37,160 --> 00:07:41,120
of the view box inside of the SVG is

00:07:39,110 --> 00:07:44,600
different now but by default the browser

00:07:41,120 --> 00:07:46,580
is going to the browser Maps the the

00:07:44,600 --> 00:07:48,560
user the view box coordinate system to

00:07:46,580 --> 00:07:51,230
the viewport coordinate system so by

00:07:48,560 --> 00:07:53,390
default even no matter how big the view

00:07:51,230 --> 00:07:56,450
box becomes it's going to be contained

00:07:53,390 --> 00:07:57,800
inside of the viewport contained or not

00:07:56,450 --> 00:08:01,190
contained that depends you can also

00:07:57,800 --> 00:08:02,630
control that say you also want to change

00:08:01,190 --> 00:08:05,360
this now the first thing you may have

00:08:02,630 --> 00:08:07,190
noticed is by changing the values of the

00:08:05,360 --> 00:08:09,260
view box by making them bigger you're

00:08:07,190 --> 00:08:11,870
scaling the contents of the SVG down if

00:08:09,260 --> 00:08:16,220
you make it smaller you can scale the

00:08:11,870 --> 00:08:18,320
contents of the SVG up so this is one of

00:08:16,220 --> 00:08:20,240
the ways that you can manipulate SVG is

00:08:18,320 --> 00:08:22,490
using the view box now the MINIX and min

00:08:20,240 --> 00:08:24,710
y the x and y are outside the scope of

00:08:22,490 --> 00:08:25,190
the structure I'm gonna be not going

00:08:24,710 --> 00:08:27,320
over them

00:08:25,190 --> 00:08:29,540
so right now assume that you have some

00:08:27,320 --> 00:08:30,950
content inside of the SVG the view box

00:08:29,540 --> 00:08:32,960
has a different aspect ratio from the

00:08:30,950 --> 00:08:34,550
SVG so you have some white space at the

00:08:32,960 --> 00:08:36,770
top white space at the bottom that's

00:08:34,550 --> 00:08:40,219
fine just like background images and CSS

00:08:36,770 --> 00:08:42,020
you are able in SVG you can tell the

00:08:40,219 --> 00:08:43,070
browser if you want the entire view box

00:08:42,020 --> 00:08:45,020
to be

00:08:43,070 --> 00:08:46,340
ximenos if you want the entire view

00:08:45,020 --> 00:08:47,990
books to be contained inside the

00:08:46,340 --> 00:08:50,090
viewport or if you wanted to cover the

00:08:47,990 --> 00:08:52,160
entire viewport area background images

00:08:50,090 --> 00:08:53,960
in CSS if you set the background size to

00:08:52,160 --> 00:08:56,180
contain you're gonna get this result if

00:08:53,960 --> 00:08:57,380
the background of the of the element has

00:08:56,180 --> 00:08:59,390
a different aspect ratio from the

00:08:57,380 --> 00:09:01,010
element itself you can tell the browser

00:08:59,390 --> 00:09:02,840
to either make it can't be contained

00:09:01,010 --> 00:09:04,370
inside of the element which means that

00:09:02,840 --> 00:09:07,250
you will get some white space on top on

00:09:04,370 --> 00:09:09,050
and on the bottom or left and right or

00:09:07,250 --> 00:09:11,090
you can tell the browser that you want

00:09:09,050 --> 00:09:13,010
it to scale it up as much as possible to

00:09:11,090 --> 00:09:15,650
cover the entire background area even if

00:09:13,010 --> 00:09:17,300
that means cropping out some parts of

00:09:15,650 --> 00:09:18,980
the image now you can do exactly the

00:09:17,300 --> 00:09:21,230
same thing with SVG if you use the

00:09:18,980 --> 00:09:24,440
preserve aspect ratio attribute now this

00:09:21,230 --> 00:09:26,360
is what I have here keep in mind that

00:09:24,440 --> 00:09:28,550
this drawing here you could have

00:09:26,360 --> 00:09:30,620
anything on the view box I just happen

00:09:28,550 --> 00:09:33,200
to have a parrot here because I'm a bird

00:09:30,620 --> 00:09:35,270
person I don't like I don't have much

00:09:33,200 --> 00:09:36,650
against cats but I'm a bird person so I

00:09:35,270 --> 00:09:38,450
have a parrot here and I have a lot of

00:09:36,650 --> 00:09:41,630
white space here but you can imagine an

00:09:38,450 --> 00:09:43,040
entire SVG scene or illustration now if

00:09:41,630 --> 00:09:45,320
I change the value of the preserve

00:09:43,040 --> 00:09:48,830
aspect ratio from meet which is the same

00:09:45,320 --> 00:09:52,400
as contained in CSS to slice which is

00:09:48,830 --> 00:09:54,680
the same as cover I get this I don't

00:09:52,400 --> 00:09:56,180
have any white space and that at the top

00:09:54,680 --> 00:09:58,100
and the bottom so this is the view box

00:09:56,180 --> 00:10:00,860
where the view box starts now at the top

00:09:58,100 --> 00:10:02,690
but what's happening here is the view

00:10:00,860 --> 00:10:04,340
box via canvas has been scaled up as

00:10:02,690 --> 00:10:06,920
much as possible to cover the entire

00:10:04,340 --> 00:10:09,080
viewport area and it happens to be white

00:10:06,920 --> 00:10:10,910
in my case but you know it has been

00:10:09,080 --> 00:10:12,770
scaled up initially it is centered just

00:10:10,910 --> 00:10:14,840
like the background position Center

00:10:12,770 --> 00:10:17,330
Center you can change the position of

00:10:14,840 --> 00:10:19,220
that image as well for example sometimes

00:10:17,330 --> 00:10:21,650
you position a background image in CSS

00:10:19,220 --> 00:10:23,270
by saying top left so it starts at the

00:10:21,650 --> 00:10:26,810
top left corner you can do that as well

00:10:23,270 --> 00:10:29,390
using x-men women it's the similar to

00:10:26,810 --> 00:10:32,090
top left you can get this you can also

00:10:29,390 --> 00:10:33,770
the default value is x-men Twyman which

00:10:32,090 --> 00:10:37,340
is the center you're centering it this

00:10:33,770 --> 00:10:40,940
way you can also choose xmax ymax so now

00:10:37,340 --> 00:10:42,670
I'm showing the bottom right area of my

00:10:40,940 --> 00:10:46,970
canvas inside of the viewport

00:10:42,670 --> 00:10:48,620
now imagine using this so suppose you

00:10:46,970 --> 00:10:50,900
have an image here any kind of image

00:10:48,620 --> 00:10:52,610
that has a different aspect ratio from

00:10:50,900 --> 00:10:54,980
the container of that image and you want

00:10:52,610 --> 00:10:56,600
to be able to crop that image and

00:10:54,980 --> 00:10:59,240
position it inside of that container any

00:10:56,600 --> 00:11:05,630
way you want this is possible with SPG

00:10:59,240 --> 00:11:07,810
so let's get back to no not yeah that's

00:11:05,630 --> 00:11:07,810
it

00:11:11,560 --> 00:11:15,999
so as you can imagine just to recap

00:11:13,689 --> 00:11:17,439
because of our ability to use and

00:11:15,999 --> 00:11:19,180
manipulate the under coordinate system

00:11:17,439 --> 00:11:21,040
we are able to create all kinds of great

00:11:19,180 --> 00:11:22,990
effects and techniques to do a myriad of

00:11:21,040 --> 00:11:24,720
things in SVG one of these things is

00:11:22,990 --> 00:11:28,839
cropping and preserving aspect ratio of

00:11:24,720 --> 00:11:30,639
non SVG images so CSS currently does

00:11:28,839 --> 00:11:32,519
that we currently have the object fit

00:11:30,639 --> 00:11:35,410
and object position properties in CSS

00:11:32,519 --> 00:11:37,240
using object fit you can the contents of

00:11:35,410 --> 00:11:39,759
an image or a video for example could be

00:11:37,240 --> 00:11:42,040
also video can be set to scale up and

00:11:39,759 --> 00:11:43,660
down shrink or stretch as necessary to

00:11:42,040 --> 00:11:47,139
fit into the width and the height you

00:11:43,660 --> 00:11:49,480
specify so further for example suppose

00:11:47,139 --> 00:11:51,579
that you have an avatar image all of the

00:11:49,480 --> 00:11:53,050
avatar images need to be square ok and

00:11:51,579 --> 00:11:55,059
you have a CMS like WordPress and you're

00:11:53,050 --> 00:11:58,059
allowing your authors to upload upload

00:11:55,059 --> 00:11:59,589
images of their own they don't upload a

00:11:58,059 --> 00:12:01,569
square image so you're going to have to

00:11:59,589 --> 00:12:03,639
be able to crop that image and scale it

00:12:01,569 --> 00:12:05,680
and put it inside of that square area

00:12:03,639 --> 00:12:07,180
that you have this is possible in CSS

00:12:05,680 --> 00:12:09,850
using objects with an object position

00:12:07,180 --> 00:12:11,829
object position tells you how you can

00:12:09,850 --> 00:12:14,170
position the image and object fit does

00:12:11,829 --> 00:12:17,559
something like this so I have an image

00:12:14,170 --> 00:12:19,029
here again a doc and I have a square so

00:12:17,559 --> 00:12:21,550
you can tell the browser if you want the

00:12:19,029 --> 00:12:23,410
image to be fit inside of the square

00:12:21,550 --> 00:12:25,779
without preserving the aspect ratio so

00:12:23,410 --> 00:12:27,100
it kind of shrinks horizontally here you

00:12:25,779 --> 00:12:28,930
can tell it that you want it to be

00:12:27,100 --> 00:12:30,730
contained which creates white space at

00:12:28,930 --> 00:12:32,649
the top at the top and bottom you can

00:12:30,730 --> 00:12:35,050
tell it to cover it which is the most

00:12:32,649 --> 00:12:38,649
used value so it covers the entire

00:12:35,050 --> 00:12:41,319
square area and crops out any extras and

00:12:38,649 --> 00:12:44,079
it's going to be centered by by default

00:12:41,319 --> 00:12:45,730
none means that it's not going to be

00:12:44,079 --> 00:12:47,620
doing any scaling or stretching at all

00:12:45,730 --> 00:12:49,120
and scale down is very similar to

00:12:47,620 --> 00:12:51,430
contain with very minor minor

00:12:49,120 --> 00:12:53,500
differences this is pretty cool so using

00:12:51,430 --> 00:12:55,179
just one line of CSS you can allow your

00:12:53,500 --> 00:12:57,040
users to upload any kind of images that

00:12:55,179 --> 00:12:58,779
they want while preserving the aspect

00:12:57,040 --> 00:13:01,089
ratio and your designs but the browser

00:12:58,779 --> 00:13:02,649
support is not really good and as usual

00:13:01,089 --> 00:13:04,600
our main problem is Internet Explorer

00:13:02,649 --> 00:13:06,939
even a message currently doesn't support

00:13:04,600 --> 00:13:10,329
it but it's coming in this upcoming edge

00:13:06,939 --> 00:13:14,259
version so suppose that you do still

00:13:10,329 --> 00:13:15,429
need us to provide support for IE so you

00:13:14,259 --> 00:13:17,499
will probably want to look for a

00:13:15,429 --> 00:13:19,660
different solution so you can either use

00:13:17,499 --> 00:13:22,839
this as an enhancement if you don't care

00:13:19,660 --> 00:13:23,590
about IE if you can start supporting

00:13:22,839 --> 00:13:25,180
only the

00:13:23,590 --> 00:13:27,370
versions of all browsers I do have

00:13:25,180 --> 00:13:30,700
clients who do that by the way which is

00:13:27,370 --> 00:13:32,530
amazing means 2017

00:13:30,700 --> 00:13:35,920
so you can check the port for object

00:13:32,530 --> 00:13:39,040
fill by using the supports rule you like

00:13:35,920 --> 00:13:40,990
you only apply the CSS styling of the

00:13:39,040 --> 00:13:42,370
images if the object property is

00:13:40,990 --> 00:13:44,650
supported which is pretty cool but if

00:13:42,370 --> 00:13:46,870
you want to support older browsers you

00:13:44,650 --> 00:13:48,370
may come up with a solution I think a

00:13:46,870 --> 00:13:50,260
lot of developers already do this on the

00:13:48,370 --> 00:13:51,910
back end so they do all of the cropping

00:13:50,260 --> 00:13:53,920
on the back end before sending the

00:13:51,910 --> 00:13:56,110
cropped image image to the front end but

00:13:53,920 --> 00:13:59,140
you don't even need to do that using

00:13:56,110 --> 00:14:01,630
this small SVG snippet you can do

00:13:59,140 --> 00:14:04,780
exactly that so instead of embedding can

00:14:01,630 --> 00:14:06,720
you see the code so some of you are

00:14:04,780 --> 00:14:10,090
doing this some are just some are this

00:14:06,720 --> 00:14:12,460
so using I'm gonna go through the code

00:14:10,090 --> 00:14:14,410
shortly using the snippet you can

00:14:12,460 --> 00:14:16,240
instead of embedding an image tag on

00:14:14,410 --> 00:14:19,300
your page you would be embedding an SVG

00:14:16,240 --> 00:14:20,050
okay the SVG has a width and a height a

00:14:19,300 --> 00:14:22,000
view box

00:14:20,050 --> 00:14:24,070
it always has a view box and it has a

00:14:22,000 --> 00:14:25,810
preserve aspect ratio usually you can

00:14:24,070 --> 00:14:26,950
omit the preserve aspect ratio and let

00:14:25,810 --> 00:14:28,000
the browser handle everything but if

00:14:26,950 --> 00:14:29,680
you're going to be doing something like

00:14:28,000 --> 00:14:31,600
this you want it to be there and you

00:14:29,680 --> 00:14:34,900
want to change the value now inside of

00:14:31,600 --> 00:14:38,950
the SVG you have an image tag I am a GE

00:14:34,900 --> 00:14:41,020
the SVG the XML image tag you link to

00:14:38,950 --> 00:14:43,270
the user uploaded image inside of the

00:14:41,020 --> 00:14:45,760
image tag okay the width and the height

00:14:43,270 --> 00:14:48,190
of the image are set to be 100% by 100%

00:14:45,760 --> 00:14:50,290
which means that they will scale up to

00:14:48,190 --> 00:14:51,490
fill the entire view books not the

00:14:50,290 --> 00:14:54,070
viewport okay

00:14:51,490 --> 00:14:56,080
the SVG width and height determined the

00:14:54,070 --> 00:14:58,210
viewport so which is going to be for

00:14:56,080 --> 00:15:01,810
example a square on your page the image

00:14:58,210 --> 00:15:03,610
may not be square so you have some white

00:15:01,810 --> 00:15:06,970
space inside of the SVG the view box

00:15:03,610 --> 00:15:08,860
value is going to be 0 0 image X and

00:15:06,970 --> 00:15:10,270
image Y at the image X and image Y are

00:15:08,860 --> 00:15:12,160
going to be the width and the height of

00:15:10,270 --> 00:15:15,130
the user uploaded image so try to

00:15:12,160 --> 00:15:17,080
imagine it you have s Square and you

00:15:15,130 --> 00:15:19,090
have which is the SVG and you have an

00:15:17,080 --> 00:15:21,520
image inside of the SVG with a different

00:15:19,090 --> 00:15:23,920
aspect ratio the view box has the same

00:15:21,520 --> 00:15:26,110
dimensions as that image so we get the

00:15:23,920 --> 00:15:27,720
exact same thing we got earlier the

00:15:26,110 --> 00:15:31,180
white space on top and on the bottom

00:15:27,720 --> 00:15:34,660
okay so in this case what's happening

00:15:31,180 --> 00:15:36,620
here is you've used s we just as the

00:15:34,660 --> 00:15:38,570
regular container for your

00:15:36,620 --> 00:15:40,700
jpg image or whatever PNG image or

00:15:38,570 --> 00:15:42,800
Ruster image okay it's not you're not

00:15:40,700 --> 00:15:44,540
using SVG as an image format anymore

00:15:42,800 --> 00:15:47,450
using it as dog meat just like a div and

00:15:44,540 --> 00:15:49,070
and an HTML it's just a wrapper here now

00:15:47,450 --> 00:15:51,200
using the preserve aspect ratio you can

00:15:49,070 --> 00:15:52,550
specify the alignment if you wanted to

00:15:51,200 --> 00:15:54,170
be contained if you wanted to be covered

00:15:52,550 --> 00:15:57,170
if you want to move it inside of it

00:15:54,170 --> 00:15:59,690
cropping scaling everything happens like

00:15:57,170 --> 00:16:01,490
this so an example would be the width

00:15:59,690 --> 00:16:04,460
and height of the SVG could be 140

00:16:01,490 --> 00:16:07,670
pixels the user uploads an 800 by 500

00:16:04,460 --> 00:16:09,350
pixels image you link to that image and

00:16:07,670 --> 00:16:12,440
then all of the work is done in the

00:16:09,350 --> 00:16:14,090
preserve aspect ratio you probably if

00:16:12,440 --> 00:16:16,640
you want to do the kind of cropping that

00:16:14,090 --> 00:16:18,530
CSS does by default most of the time it

00:16:16,640 --> 00:16:21,140
would be preserved aspect ratio slice

00:16:18,530 --> 00:16:24,770
which is similar to cover and eczema

00:16:21,140 --> 00:16:26,600
Twyman so the image is cropped to a

00:16:24,770 --> 00:16:28,610
square without using a single line of

00:16:26,600 --> 00:16:31,340
CSS and with browser support that go

00:16:28,610 --> 00:16:33,110
away that goes way back are you gonna

00:16:31,340 --> 00:16:35,750
see it shortly this code is missing

00:16:33,110 --> 00:16:37,880
something so you've replaced an image

00:16:35,750 --> 00:16:42,220
tag with an SVG but it's missing

00:16:37,880 --> 00:16:45,770
something what is it say out loud

00:16:42,220 --> 00:16:47,960
yeah the alt tag you should never serve

00:16:45,770 --> 00:16:49,760
an image without an alt tag even if the

00:16:47,960 --> 00:16:51,680
image is just decoration keep the alt

00:16:49,760 --> 00:16:54,650
tag empty as long as you keep it there

00:16:51,680 --> 00:16:56,660
okay so we don't have any alt tags on

00:16:54,650 --> 00:16:59,030
image elements inside of SVG but we do

00:16:56,660 --> 00:17:01,250
have an alternative we have the title

00:16:59,030 --> 00:17:03,440
element inside of the SVG the title

00:17:01,250 --> 00:17:05,600
element is similar to an alt tag so you

00:17:03,440 --> 00:17:07,580
can give your image a title you should

00:17:05,600 --> 00:17:09,530
always include a title for all of your

00:17:07,580 --> 00:17:12,470
SVG images if you can or if they are not

00:17:09,530 --> 00:17:14,090
simply just a creation you can even add

00:17:12,470 --> 00:17:15,620
the desk element which is short for

00:17:14,090 --> 00:17:17,150
description so if you I want to add the

00:17:15,620 --> 00:17:19,310
title and a description to your image

00:17:17,150 --> 00:17:21,830
you can add that and this snippet here

00:17:19,310 --> 00:17:24,800
gives you all kinds of scaling and

00:17:21,830 --> 00:17:27,770
preserving aspect ratios in HTML all the

00:17:24,800 --> 00:17:33,700
way back to IE 9 because i 8 does not

00:17:27,770 --> 00:17:35,630
support SVG's know CSS required now

00:17:33,700 --> 00:17:38,090
suppose you've cropped your image to

00:17:35,630 --> 00:17:40,580
square dimensions the next step is to

00:17:38,090 --> 00:17:42,560
make it responsive okay the maintaining

00:17:40,580 --> 00:17:45,620
aspect ratio and CSS while making the

00:17:42,560 --> 00:17:47,570
image image fluid is not very easy so if

00:17:45,620 --> 00:17:49,700
the browser width if the if the width of

00:17:47,570 --> 00:17:50,660
the image is 100% how do you tell the

00:17:49,700 --> 00:17:52,250
browser that you want

00:17:50,660 --> 00:17:54,350
the height of the image to always be

00:17:52,250 --> 00:17:56,600
equal to the width of the image now in

00:17:54,350 --> 00:17:59,120
the future and future CSS specifications

00:17:56,600 --> 00:18:00,530
there there will be away so tab Atkins

00:17:59,120 --> 00:18:02,299
told me that they will be specking out

00:18:00,530 --> 00:18:04,130
something so that we will be able to

00:18:02,299 --> 00:18:07,789
preserve aspect ratio CSS sometime soon

00:18:04,130 --> 00:18:10,100
but right now we cannot do that so this

00:18:07,789 --> 00:18:13,100
is particularly a problem for inline SVG

00:18:10,100 --> 00:18:15,020
s or SVG is embedded using an iframe by

00:18:13,100 --> 00:18:17,780
default the default size for replaced

00:18:15,020 --> 00:18:20,240
elements in CSS is 300 pixels by 150

00:18:17,780 --> 00:18:22,340
pixels diff replaced elements are

00:18:20,240 --> 00:18:24,590
elements like an iframe where the size

00:18:22,340 --> 00:18:26,390
of the item is not really defined by the

00:18:24,590 --> 00:18:28,159
iframe itself its defined by the

00:18:26,390 --> 00:18:29,570
contents and because you don't really

00:18:28,159 --> 00:18:30,799
know the size of the contents the

00:18:29,570 --> 00:18:32,630
browser doesn't know the size of the

00:18:30,799 --> 00:18:35,510
iframe and it's going to give it in that

00:18:32,630 --> 00:18:38,659
case a default size of 350 pixels by 150

00:18:35,510 --> 00:18:40,789
pixels an inline SVG if the SVD doesn't

00:18:38,659 --> 00:18:42,409
contain any content and it doesn't have

00:18:40,789 --> 00:18:45,140
any dimensions or anything if you've

00:18:42,409 --> 00:18:46,549
ever maybe created an SVG sprite the SVG

00:18:45,140 --> 00:18:48,289
sprite contains symbols that are not

00:18:46,549 --> 00:18:50,299
displayed on the page maybe some of you

00:18:48,289 --> 00:18:52,370
may have run into this where you get

00:18:50,299 --> 00:18:53,720
some empty white area on the page and

00:18:52,370 --> 00:18:54,200
you don't really know where where that

00:18:53,720 --> 00:18:56,510
came from

00:18:54,200 --> 00:18:57,980
it's because of that SVG is a replaced

00:18:56,510 --> 00:19:00,260
element and the browser is going to be

00:18:57,980 --> 00:19:03,200
giving it 350 pixels by 150 pixels

00:19:00,260 --> 00:19:05,780
unless you tell it otherwise now when

00:19:03,200 --> 00:19:07,370
you embed an SVG in line it's going to

00:19:05,780 --> 00:19:09,169
be as long as it has a view box it's

00:19:07,370 --> 00:19:11,510
going to scale as you expect it to and

00:19:09,169 --> 00:19:13,730
all of the browser's expect and accept

00:19:11,510 --> 00:19:15,919
and ie so what II's gonna do it's gonna

00:19:13,730 --> 00:19:17,600
make the width of the SVG scale as you

00:19:15,919 --> 00:19:20,330
would want it to scale but it's gonna

00:19:17,600 --> 00:19:22,460
fix the height 150 pixels because it's

00:19:20,330 --> 00:19:23,840
done so in order to fix that and in

00:19:22,460 --> 00:19:26,659
order to preserve aspect ratio for

00:19:23,840 --> 00:19:28,909
anything essentially in CSS you need a

00:19:26,659 --> 00:19:31,100
technique which is commonly commonly

00:19:28,909 --> 00:19:33,980
known as the padding hack so I'm gonna

00:19:31,100 --> 00:19:36,530
go over how it works I'm gonna show you

00:19:33,980 --> 00:19:38,900
an example so to make an SVG responsive

00:19:36,530 --> 00:19:42,260
with a preserve aspect ratio first you

00:19:38,900 --> 00:19:44,360
wrap the SVG in a container now I want

00:19:42,260 --> 00:19:47,120
you to remember the last thing that we

00:19:44,360 --> 00:19:48,980
did okay so we have an image or an SVG

00:19:47,120 --> 00:19:51,049
with a specific aspect ratio and that

00:19:48,980 --> 00:19:52,520
SVG contains an image a raster image

00:19:51,049 --> 00:19:54,679
inside of it with a different aspect

00:19:52,520 --> 00:19:56,600
ratio now what you need to do is you

00:19:54,679 --> 00:19:58,220
need to make sure that the SVG scales up

00:19:56,600 --> 00:20:01,120
and down while maintaining the aspect

00:19:58,220 --> 00:20:03,610
ratio of the image inside of it

00:20:01,120 --> 00:20:06,220
so in order to do that you wrap the SVG

00:20:03,610 --> 00:20:09,070
in a container you collapse the

00:20:06,220 --> 00:20:10,480
containers height you give it any width

00:20:09,070 --> 00:20:12,490
value that you want it could be 100

00:20:10,480 --> 00:20:16,090
percent 70 percent 50 percent whatever

00:20:12,490 --> 00:20:17,560
and then you apply the padding top as

00:20:16,090 --> 00:20:19,270
Dennis mentioned something at the

00:20:17,560 --> 00:20:22,120
beginning of his talk when you set the

00:20:19,270 --> 00:20:23,830
padding in CSS using percentage values

00:20:22,120 --> 00:20:25,900
it's going to be relative to the width

00:20:23,830 --> 00:20:28,900
of the element not the height so even if

00:20:25,900 --> 00:20:31,720
you say padding top 50% padding top is

00:20:28,900 --> 00:20:34,510
going to be set 50% of the width of the

00:20:31,720 --> 00:20:37,030
element not 50% of the height so if

00:20:34,510 --> 00:20:38,680
suppose you've collapsed the height of

00:20:37,030 --> 00:20:40,510
the container it doesn't have a height

00:20:38,680 --> 00:20:43,390
anymore its height zero and then you

00:20:40,510 --> 00:20:45,790
apply a top padding to that element so

00:20:43,390 --> 00:20:47,850
you're extending expanding the height

00:20:45,790 --> 00:20:50,680
again but the height this time is

00:20:47,850 --> 00:20:52,840
created by the padding and the padding

00:20:50,680 --> 00:20:55,390
is set and percentages which is relative

00:20:52,840 --> 00:20:56,920
to the width so you have the height that

00:20:55,390 --> 00:20:59,410
is relative to the width and you've

00:20:56,920 --> 00:21:00,790
established an aspect ratio so we want

00:20:59,410 --> 00:21:03,490
our container here to have the same

00:21:00,790 --> 00:21:04,990
aspect ratio as the SVG view box which

00:21:03,490 --> 00:21:07,150
is the image inside of it I know this is

00:21:04,990 --> 00:21:09,970
a little bit too much but it's it's

00:21:07,150 --> 00:21:12,220
really cool so how do you determine the

00:21:09,970 --> 00:21:14,050
value of the padding top it's with this

00:21:12,220 --> 00:21:17,590
formula so you get the aspect ratio of

00:21:14,050 --> 00:21:19,270
the SVG view bucks in this case as good

00:21:17,590 --> 00:21:22,630
you hide over SVG width and then you

00:21:19,270 --> 00:21:25,570
multiply it by this value all right so

00:21:22,630 --> 00:21:28,450
you have SVG contained inside of a

00:21:25,570 --> 00:21:29,980
container the SVG is still there you've

00:21:28,450 --> 00:21:32,410
collapsed the height of the container

00:21:29,980 --> 00:21:34,810
okay so now the SVG is hanging outside

00:21:32,410 --> 00:21:38,350
of it and then you've added a padding to

00:21:34,810 --> 00:21:40,900
the container cool but the SVG has been

00:21:38,350 --> 00:21:42,190
pushed down now so in order to put it

00:21:40,900 --> 00:21:45,100
back into the container you're going to

00:21:42,190 --> 00:21:46,960
need to be using absolute positioning so

00:21:45,100 --> 00:21:49,240
you have to start by creating an aspect

00:21:46,960 --> 00:21:51,640
for creating a positioning context on

00:21:49,240 --> 00:21:54,250
the container by using position:relative

00:21:51,640 --> 00:21:56,560
and then you position the SVG absolutely

00:21:54,250 --> 00:21:59,350
inside of the container and you've

00:21:56,560 --> 00:22:03,390
established an aspect ratio responsively

00:21:59,350 --> 00:22:03,390
and this is what it looks like

00:22:03,750 --> 00:22:14,010
this is a video it should work yeah so I

00:22:08,190 --> 00:22:16,679
have an SVG here oh I don't see it here

00:22:14,010 --> 00:22:18,600
if I change the preserve aspect ratio

00:22:16,679 --> 00:22:20,669
value now I've cropped the image inside

00:22:18,600 --> 00:22:27,809
of it so this is one of the things you

00:22:20,669 --> 00:22:29,669
can do I don't see the cursor now you

00:22:27,809 --> 00:22:33,510
can also change the aspect ratio of the

00:22:29,669 --> 00:22:35,549
entire viewport and it's responsive no

00:22:33,510 --> 00:22:37,290
matter what the aspect ratio of the SVG

00:22:35,549 --> 00:22:39,860
is going to be fully fluid and

00:22:37,290 --> 00:22:39,860
responsive

00:22:43,640 --> 00:22:47,900
another thing you can do with SPG so the

00:22:46,160 --> 00:22:50,090
first section recovered how SVG is used

00:22:47,900 --> 00:22:52,730
just as a mere container for raster

00:22:50,090 --> 00:22:54,470
images in order to crop scale and

00:22:52,730 --> 00:22:56,330
manipulate them any way you want by

00:22:54,470 --> 00:22:59,000
preserving with while also preserving

00:22:56,330 --> 00:23:02,360
aspect ratio now JPEGs have better

00:22:59,000 --> 00:23:04,370
compression rate ratios than PNG is for

00:23:02,360 --> 00:23:05,960
photographic data JPEGs generally

00:23:04,370 --> 00:23:07,970
speaking they always have smaller file

00:23:05,960 --> 00:23:10,970
sizes than PNG s now what if you could

00:23:07,970 --> 00:23:14,210
get the compression ratio of a JPEG

00:23:10,970 --> 00:23:17,000
while serving a PNG image so you would

00:23:14,210 --> 00:23:18,230
serve a PNG image with transparency but

00:23:17,000 --> 00:23:21,559
you would get the compression ratio of

00:23:18,230 --> 00:23:24,559
the JPEG surprise-surprise you can do

00:23:21,559 --> 00:23:26,390
that using using SVG now again our SVG

00:23:24,559 --> 00:23:28,400
will serve as a mere container for a

00:23:26,390 --> 00:23:32,419
bitmap image and then we'll use some SVG

00:23:28,400 --> 00:23:34,250
magic which aks SVG masks to get the

00:23:32,419 --> 00:23:36,169
transparency of the PNG while serving

00:23:34,250 --> 00:23:38,270
the JPEG now the idea behind this

00:23:36,169 --> 00:23:40,520
technique is to use an SVG mask to clip

00:23:38,270 --> 00:23:41,750
out the areas of the JPEG that you do

00:23:40,520 --> 00:23:44,000
not want to see that you want to be

00:23:41,750 --> 00:23:46,580
transparent so we end up serving a JPEG

00:23:44,000 --> 00:23:49,309
with simulated alpha channels thus

00:23:46,580 --> 00:23:51,890
combining the transparency of a PNG with

00:23:49,309 --> 00:23:53,240
the compression rate of a JPEG for

00:23:51,890 --> 00:23:55,820
example suppose we have the following

00:23:53,240 --> 00:23:58,070
image here the image on the left is what

00:23:55,820 --> 00:24:01,070
we want to display it is a PNG image

00:23:58,070 --> 00:24:03,980
with another bird is out of it so we

00:24:01,070 --> 00:24:06,410
start with a jpg JPEG version of the

00:24:03,980 --> 00:24:07,910
image in the middle it doesn't have any

00:24:06,410 --> 00:24:10,490
transparent areas and then you create a

00:24:07,910 --> 00:24:13,220
mask illuminance mask in this case to

00:24:10,490 --> 00:24:16,490
mask out the areas of the end of the

00:24:13,220 --> 00:24:18,320
JPEG image that you do not want okay so

00:24:16,490 --> 00:24:19,850
the luminance mask means that the

00:24:18,320 --> 00:24:21,350
luminance areas of the mask represent

00:24:19,850 --> 00:24:23,780
the areas of the SVG that you that you

00:24:21,350 --> 00:24:25,669
want to keep so the white area here is

00:24:23,780 --> 00:24:26,630
the DOE which we want to keep and

00:24:25,669 --> 00:24:28,280
everything in black

00:24:26,630 --> 00:24:29,570
when this mask is applied to the image

00:24:28,280 --> 00:24:33,710
in the middle we're going to get the

00:24:29,570 --> 00:24:35,870
result over there using SVG so we use

00:24:33,710 --> 00:24:37,940
SVG to apply the mask so you have an SVG

00:24:35,870 --> 00:24:40,610
you have a depths element depths element

00:24:37,940 --> 00:24:42,650
is short for definitions anything you

00:24:40,610 --> 00:24:43,940
put inside of a depth element in SVG is

00:24:42,650 --> 00:24:46,160
not going to be rendered on the page

00:24:43,940 --> 00:24:47,929
you're literally just defining templates

00:24:46,160 --> 00:24:50,390
that you want to be used or applied

00:24:47,929 --> 00:24:53,030
somewhere else so inside of the Deaf's

00:24:50,390 --> 00:24:55,280
element i create a mask that mask is

00:24:53,030 --> 00:24:55,740
actually an image so you're using an

00:24:55,280 --> 00:24:58,770
image

00:24:55,740 --> 00:25:00,270
as a mosque straight forward so we have

00:24:58,770 --> 00:25:03,059
the pigeon mosque we're referencing it

00:25:00,270 --> 00:25:05,280
here and then you embed your JPEG image

00:25:03,059 --> 00:25:08,700
with a really cool compression rates and

00:25:05,280 --> 00:25:12,110
you apply the mask to it at the bottom I

00:25:08,700 --> 00:25:16,200
hope it's visible I hope you can see it

00:25:12,110 --> 00:25:19,230
and the SVG the mask and the image

00:25:16,200 --> 00:25:21,570
element have the same dimensions because

00:25:19,230 --> 00:25:26,760
it's the same image and this is all you

00:25:21,570 --> 00:25:28,230
need you're serving a JPEG and a JPEG so

00:25:26,760 --> 00:25:29,700
will you get the compression of the JPEG

00:25:28,230 --> 00:25:31,770
and you're making it transparent using

00:25:29,700 --> 00:25:34,260
SVG masks now one of the most frequent

00:25:31,770 --> 00:25:37,320
questions that I get here is how does

00:25:34,260 --> 00:25:39,390
this work with responsive images so if I

00:25:37,320 --> 00:25:41,070
only serve the 1x or 2x versions of the

00:25:39,390 --> 00:25:42,690
image what if I want to serve 1 X 2 X 3

00:25:41,070 --> 00:25:44,970
X depending on the resolution of the

00:25:42,690 --> 00:25:47,370
image I've not tried that yet but I

00:25:44,970 --> 00:25:49,500
imagine it could use a foreign object so

00:25:47,370 --> 00:25:52,320
a foreign object is an element in SVG

00:25:49,500 --> 00:25:54,630
which tells the XML parser that the

00:25:52,320 --> 00:25:57,300
content inside of me is not really XML

00:25:54,630 --> 00:25:59,340
so you could use picture and source that

00:25:57,300 --> 00:26:01,170
I imagine I haven't tested it yet so but

00:25:59,340 --> 00:26:03,450
you could use maybe picture source set

00:26:01,170 --> 00:26:05,309
all kinds of HTML stuff inside of the

00:26:03,450 --> 00:26:07,050
SVG so you would replace the image

00:26:05,309 --> 00:26:09,420
element here with a foreign object that

00:26:07,050 --> 00:26:11,190
contains picture and source set and you

00:26:09,420 --> 00:26:15,960
would still apply the mask to it and you

00:26:11,190 --> 00:26:18,120
get the compression that you want now

00:26:15,960 --> 00:26:20,850
just like you can optimize raster image

00:26:18,120 --> 00:26:24,720
delivery with SVG can also optimize SVG

00:26:20,850 --> 00:26:26,640
delivery with SVG so I was I worked on

00:26:24,720 --> 00:26:28,200
the new Smashing Magazine redesign which

00:26:26,640 --> 00:26:29,730
I don't know one well I think it will

00:26:28,200 --> 00:26:31,050
get public soon but we've been saying

00:26:29,730 --> 00:26:34,230
some for like a year so I'm not really

00:26:31,050 --> 00:26:35,760
sure you should ask Vitaly one of the

00:26:34,230 --> 00:26:37,620
things that we had in the new magazine

00:26:35,760 --> 00:26:39,000
is we have these three new membership

00:26:37,620 --> 00:26:41,640
plans ok

00:26:39,000 --> 00:26:43,860
I built the front and so I had to embed

00:26:41,640 --> 00:26:45,660
all of these things now for every

00:26:43,860 --> 00:26:47,760
membership plan on the membership page

00:26:45,660 --> 00:26:49,890
we have a title and name for each

00:26:47,760 --> 00:26:50,370
membership type one of them a supporter

00:26:49,890 --> 00:26:52,350
member

00:26:50,370 --> 00:26:54,120
I feel smashing they have changed these

00:26:52,350 --> 00:26:55,590
illustrations I've also changed but the

00:26:54,120 --> 00:26:57,510
technique behind them is still the same

00:26:55,590 --> 00:26:58,140
plus the cute little illustration is

00:26:57,510 --> 00:27:01,500
really nice

00:26:58,140 --> 00:27:03,750
so one thing there are a couple of

00:27:01,500 --> 00:27:06,720
important things to note here the text

00:27:03,750 --> 00:27:08,390
inside of these images or no first of

00:27:06,720 --> 00:27:11,060
all these images are used

00:27:08,390 --> 00:27:12,980
instead of the headings so you have a

00:27:11,060 --> 00:27:14,870
section that describes the supporter

00:27:12,980 --> 00:27:16,670
plan but that section does not have a

00:27:14,870 --> 00:27:17,210
title so when it comes to accessibility

00:27:16,670 --> 00:27:19,310
or

00:27:17,210 --> 00:27:21,560
reading in general you need a title for

00:27:19,310 --> 00:27:23,750
that section right the title is inside

00:27:21,560 --> 00:27:25,040
of the image which means that the text

00:27:23,750 --> 00:27:27,830
inside of this image needs to be

00:27:25,040 --> 00:27:29,270
selectable searchable and accessible now

00:27:27,830 --> 00:27:31,850
there are a couple of things when you

00:27:29,270 --> 00:27:33,680
when you have an SVG even though this is

00:27:31,850 --> 00:27:36,050
a perfect candidate for SVG you need to

00:27:33,680 --> 00:27:38,090
first test that SVG is actually a good

00:27:36,050 --> 00:27:39,440
candidate for the image so at first when

00:27:38,090 --> 00:27:42,530
I saw these illustrations they have a

00:27:39,440 --> 00:27:44,270
lot of details I imagine that well when

00:27:42,530 --> 00:27:46,550
an SVG contains a lot of effects a lot

00:27:44,270 --> 00:27:49,070
of details a lot of information the file

00:27:46,550 --> 00:27:51,590
size of the SVG can get so big that

00:27:49,070 --> 00:27:53,930
you're better off using a PNG instead so

00:27:51,590 --> 00:27:56,270
at first I thought okay I need the text

00:27:53,930 --> 00:27:57,970
to be accessible so I need as an SVG but

00:27:56,270 --> 00:28:00,890
I need to test the performance first

00:27:57,970 --> 00:28:03,230
luckily the SVG size was exactly the

00:28:00,890 --> 00:28:05,750
same as the PNG size so I was good I was

00:28:03,230 --> 00:28:07,820
able to use this I can use SVG I can

00:28:05,750 --> 00:28:09,620
have the text inside of it the text

00:28:07,820 --> 00:28:12,350
inside of the SVG unless you turn it

00:28:09,620 --> 00:28:13,550
into outlines which means shapes it's

00:28:12,350 --> 00:28:16,220
going to be searchable selectable

00:28:13,550 --> 00:28:19,280
accessible just like HTML text users can

00:28:16,220 --> 00:28:21,950
select it with the mouse SEO all kinds

00:28:19,280 --> 00:28:23,510
of stuff comes with it by default so

00:28:21,950 --> 00:28:26,260
after deciding I was going to go with

00:28:23,510 --> 00:28:28,850
SVG I had to start decide to think about

00:28:26,260 --> 00:28:30,560
what kind of embedding technique am I am

00:28:28,850 --> 00:28:32,480
I going to use we have seven ways to

00:28:30,560 --> 00:28:34,430
embed SVG is on a page which one should

00:28:32,480 --> 00:28:35,870
you use the the answer to that question

00:28:34,430 --> 00:28:37,880
is always it depends it depends it

00:28:35,870 --> 00:28:39,650
depends so since I want the text to be

00:28:37,880 --> 00:28:41,690
searchable selectable accessible and I

00:28:39,650 --> 00:28:44,720
want to be able to apply the font face

00:28:41,690 --> 00:28:47,480
Miha in this case to that text the easy

00:28:44,720 --> 00:28:50,570
there are two ways you can do that first

00:28:47,480 --> 00:28:53,300
of all you can have the SVG be external

00:28:50,570 --> 00:28:54,920
reference that SVG externally but in

00:28:53,300 --> 00:28:57,350
that case you would have to go into the

00:28:54,920 --> 00:28:59,270
SVG define the font face there and then

00:28:57,350 --> 00:29:01,220
apply to the text which means that you

00:28:59,270 --> 00:29:04,160
would have to maintain two sets of

00:29:01,220 --> 00:29:06,920
styles in the main CSS and in the SVG I

00:29:04,160 --> 00:29:08,360
didn't want that so I try to only have

00:29:06,920 --> 00:29:12,050
one source of truth as much as possible

00:29:08,360 --> 00:29:13,970
so I figured I could do it inline if I

00:29:12,050 --> 00:29:15,830
am betty's SVG's inline I will get all

00:29:13,970 --> 00:29:17,540
the benefits and I will go into the main

00:29:15,830 --> 00:29:20,809
stylesheet I will apply the front face

00:29:17,540 --> 00:29:24,139
to this text and it works it does work

00:29:20,809 --> 00:29:29,950
but I couldn't really like imagine

00:29:24,139 --> 00:29:35,179
having to embed this inline in your HTML

00:29:29,950 --> 00:29:37,789
it's not done yet not yet this is only

00:29:35,179 --> 00:29:40,190
one of them not all three of them

00:29:37,789 --> 00:29:43,070
every one of those illustrations was so

00:29:40,190 --> 00:29:45,649
huge so I didn't want to embed the SVG

00:29:43,070 --> 00:29:48,019
externally I didn't I wasn't able I

00:29:45,649 --> 00:29:50,299
wasn't going to embed it and line like

00:29:48,019 --> 00:29:52,820
this so I needed to come up with a

00:29:50,299 --> 00:29:54,919
better solution and that is when I

00:29:52,820 --> 00:29:57,289
started thinking I mean I can go into

00:29:54,919 --> 00:30:00,110
the SVG and I can change the code inside

00:29:57,289 --> 00:30:03,379
of it so I thought why don't I get the

00:30:00,110 --> 00:30:05,360
benefits of SVG text also serve the

00:30:03,379 --> 00:30:08,629
benefits of an SVG illustration but

00:30:05,360 --> 00:30:11,419
separate them so I thought I could

00:30:08,629 --> 00:30:15,889
separate the illustration from the text

00:30:11,419 --> 00:30:17,509
inside of it and see how that works so I

00:30:15,889 --> 00:30:22,700
ended up doing something like this

00:30:17,509 --> 00:30:24,470
I had an inline SVG and the text I went

00:30:22,700 --> 00:30:26,299
into each one of those illustrations and

00:30:24,470 --> 00:30:28,490
I removed the text from them okay so

00:30:26,299 --> 00:30:32,840
right now I'm referencing an SVG

00:30:28,490 --> 00:30:35,059
inside of an inline SVG I'm getting HTTP

00:30:32,840 --> 00:30:37,190
cache I mean I'm getting caching there's

00:30:35,059 --> 00:30:39,559
gonna be an extra HTTP request but

00:30:37,190 --> 00:30:41,269
that's okay the file size wasn't really

00:30:39,559 --> 00:30:43,129
big and we're gonna be able to cache the

00:30:41,269 --> 00:30:45,259
image which is really good but the image

00:30:43,129 --> 00:30:48,100
does not now have any text so I thought

00:30:45,259 --> 00:30:51,710
I could just add the text in line and

00:30:48,100 --> 00:30:53,899
you position the text because both the

00:30:51,710 --> 00:30:56,360
illustration and the text here are part

00:30:53,899 --> 00:30:58,070
of the same SVG so you have an SVG that

00:30:56,360 --> 00:30:59,929
contains an SVG and that also contains a

00:30:58,070 --> 00:31:02,059
piece of text what you're left with in

00:30:59,929 --> 00:31:04,309
this case is to just position the text

00:31:02,059 --> 00:31:07,460
on the illustration in a way that gives

00:31:04,309 --> 00:31:10,999
you the result that you initially had so

00:31:07,460 --> 00:31:13,129
then if you want to go on and style the

00:31:10,999 --> 00:31:15,529
text apply a font face apply a full

00:31:13,129 --> 00:31:17,090
color make it bold style that you can do

00:31:15,529 --> 00:31:20,929
that from the main see a style sheet

00:31:17,090 --> 00:31:24,470
without having to maintain to like the

00:31:20,929 --> 00:31:28,309
SVG in one place and the page and

00:31:24,470 --> 00:31:30,710
another page but I have something wrong

00:31:28,309 --> 00:31:33,230
here and it's intentional I didn't know

00:31:30,710 --> 00:31:33,840
it when I bothe the site but later I did

00:31:33,230 --> 00:31:36,110
but

00:31:33,840 --> 00:31:38,580
I keep it on the slide intentionally so

00:31:36,110 --> 00:31:41,010
supporter is written all caps inside of

00:31:38,580 --> 00:31:42,870
the HTML this is not good screen errors

00:31:41,010 --> 00:31:45,929
are going to read this out loud as su

00:31:42,870 --> 00:31:48,809
ppor ter and you don't want them to do

00:31:45,929 --> 00:31:50,669
that so FYI always make sure that your

00:31:48,809 --> 00:31:52,380
text is set in regular caps inside of

00:31:50,669 --> 00:31:59,220
your HTML and if you want to make it all

00:31:52,380 --> 00:32:03,299
caps do that and CSS conditional

00:31:59,220 --> 00:32:07,200
processing now you can again use SVG to

00:32:03,299 --> 00:32:10,110
handle SVG's or other SVG's or you can

00:32:07,200 --> 00:32:13,529
use SVG to serve SVG while also

00:32:10,110 --> 00:32:15,990
providing non SVG as a fallback and this

00:32:13,529 --> 00:32:18,120
is like okay the SVG document structure

00:32:15,990 --> 00:32:20,580
specification defines elements and

00:32:18,120 --> 00:32:23,130
attributes family the switch element

00:32:20,580 --> 00:32:25,620
with three attributes that give us the

00:32:23,130 --> 00:32:27,240
ability to specify alternate viewing

00:32:25,620 --> 00:32:29,279
depending on the capable a blah blah

00:32:27,240 --> 00:32:31,409
which essentially means that it checks

00:32:29,279 --> 00:32:35,190
if the browser is going to if it has

00:32:31,409 --> 00:32:36,929
support for SVG if it does its you serve

00:32:35,190 --> 00:32:38,669
a specific thing and if it does not it

00:32:36,929 --> 00:32:40,350
gives you the ability to to provide

00:32:38,669 --> 00:32:42,899
another thing as an alternative viewing

00:32:40,350 --> 00:32:44,880
experience now the three attributes on

00:32:42,899 --> 00:32:47,010
the switch element serve as sort of an

00:32:44,880 --> 00:32:48,899
if statement or conditions if the

00:32:47,010 --> 00:32:51,450
conditions are met then the switch

00:32:48,899 --> 00:32:53,429
statement is true and the first element

00:32:51,450 --> 00:32:57,720
inside of the switch statement is going

00:32:53,429 --> 00:33:01,320
to be rendered so this is an example

00:32:57,720 --> 00:33:04,770
here suppose you have a spreadsheet that

00:33:01,320 --> 00:33:07,350
contains a set of icons every icon is

00:33:04,770 --> 00:33:08,220
defined inside of a symbol element you

00:33:07,350 --> 00:33:11,429
have a spreadsheet

00:33:08,220 --> 00:33:13,080
essentially this is an inline SVG inside

00:33:11,429 --> 00:33:15,029
of an SVG I have the switch element

00:33:13,080 --> 00:33:17,850
which is like switch case in Java Script

00:33:15,029 --> 00:33:20,010
or as else the first element is that of

00:33:17,850 --> 00:33:22,110
the switch element is the use use is

00:33:20,010 --> 00:33:25,500
referencing some icon Twitter

00:33:22,110 --> 00:33:30,029
so it's an SVG icon okay and it's the

00:33:25,500 --> 00:33:31,799
first element inside of the SVG okay the

00:33:30,029 --> 00:33:33,390
second element is a foreign object which

00:33:31,799 --> 00:33:35,610
I mentioned before the foreign object

00:33:33,390 --> 00:33:39,179
means that everything inside of this

00:33:35,610 --> 00:33:40,830
area this foreign object is not XML so

00:33:39,179 --> 00:33:44,700
the foreign object allows you to embed

00:33:40,830 --> 00:33:46,380
none non SVG inside of an SVG okay

00:33:44,700 --> 00:33:48,930
inside of the foreign object I have an

00:33:46,380 --> 00:33:51,120
empty div which will serve as a fallback

00:33:48,930 --> 00:33:53,430
the that div is going to have a

00:33:51,120 --> 00:33:56,370
background which is the icon but as an

00:33:53,430 --> 00:33:59,970
SVG as a PNG format so what happens here

00:33:56,370 --> 00:34:01,860
is if the browser supports SVG it's

00:33:59,970 --> 00:34:03,930
going to come to the switch statement

00:34:01,860 --> 00:34:06,060
it knows SVG so it's going to render the

00:34:03,930 --> 00:34:09,240
first element inside of it which is our

00:34:06,060 --> 00:34:11,130
SVG icon if a browser does not support

00:34:09,240 --> 00:34:13,530
SVG is going to ignore the first line

00:34:11,130 --> 00:34:15,420
it's going to a can't see my mouse

00:34:13,530 --> 00:34:17,190
you can't know it's going to ignore the

00:34:15,420 --> 00:34:18,660
first SVG root element it's going to

00:34:17,190 --> 00:34:20,010
ignore the switch because it doesn't

00:34:18,660 --> 00:34:21,480
know what it is it's going to ignore

00:34:20,010 --> 00:34:23,550
they use because it doesn't know what it

00:34:21,480 --> 00:34:25,080
is it's going to ignore for an object so

00:34:23,550 --> 00:34:27,540
this is just the parser going through

00:34:25,080 --> 00:34:29,460
the elements it ignores for an object

00:34:27,540 --> 00:34:32,430
and then it comes to at the hey I do

00:34:29,460 --> 00:34:35,010
know HTML so I am going to render this

00:34:32,430 --> 00:34:37,980
div and this div happens to be an empty

00:34:35,010 --> 00:34:42,620
div with a PNG background image which is

00:34:37,980 --> 00:34:42,620
our fallback for the SVG icon

00:34:45,000 --> 00:34:51,570
now some browsers that are that do

00:34:49,649 --> 00:34:53,070
support SVG are going to download both

00:34:51,570 --> 00:34:55,260
adventures or request both images

00:34:53,070 --> 00:34:56,760
they're going to show the SVG icon but

00:34:55,260 --> 00:34:58,890
they're also going to request the PNG

00:34:56,760 --> 00:35:00,510
which is something you do not want so in

00:34:58,890 --> 00:35:03,330
order to prevent that you can add

00:35:00,510 --> 00:35:04,080
another SVG to the same page both of

00:35:03,330 --> 00:35:07,349
them are in line

00:35:04,080 --> 00:35:10,349
now in the second SVG you hide the

00:35:07,349 --> 00:35:12,450
background image in the first SVG any

00:35:10,349 --> 00:35:16,040
Styles in the first SVG will affect the

00:35:12,450 --> 00:35:16,040
elements in the second and vice versa

00:35:16,190 --> 00:35:23,010
pretty cool there's a lot of SVG

00:35:20,400 --> 00:35:24,900
inception but it's really like and I

00:35:23,010 --> 00:35:26,670
know I'm going fast but I don't want to

00:35:24,900 --> 00:35:31,680
be taking up all of your lunch break or

00:35:26,670 --> 00:35:33,210
your coffee break this is also you also

00:35:31,680 --> 00:35:35,070
have the same problem if you use an

00:35:33,210 --> 00:35:36,570
object to display and as we an SVG

00:35:35,070 --> 00:35:38,160
object is my absolute favorite

00:35:36,570 --> 00:35:39,780
SVG embedding technique because it

00:35:38,160 --> 00:35:42,180
allows you to script the SVG using

00:35:39,780 --> 00:35:43,710
JavaScript animates a style it you get

00:35:42,180 --> 00:35:45,450
the caching you get the performance and

00:35:43,710 --> 00:35:47,609
everything so between the opening and

00:35:45,450 --> 00:35:50,190
closing object tags you provide the full

00:35:47,609 --> 00:35:52,470
back for the SVG your reference the SVG

00:35:50,190 --> 00:35:54,480
and the object type attribute all good

00:35:52,470 --> 00:35:56,070
if a browser supports SVG is going to

00:35:54,480 --> 00:35:59,160
display that if a browser does not

00:35:56,070 --> 00:36:01,619
support SVG or if the SVG fails to load

00:35:59,160 --> 00:36:04,290
if it doesn't find the SVG it's going to

00:36:01,619 --> 00:36:05,849
go into the object tag the contents of

00:36:04,290 --> 00:36:07,950
that and it's going to use the content

00:36:05,849 --> 00:36:10,710
inside of it as a fallback for the SVG

00:36:07,950 --> 00:36:12,900
now you can also again use an empty div

00:36:10,710 --> 00:36:16,020
with a background image but make sure

00:36:12,900 --> 00:36:20,400
that you hide that as well to prevent

00:36:16,020 --> 00:36:21,869
any multiple downloads now SVG can do

00:36:20,400 --> 00:36:24,890
more and I'm going to show these

00:36:21,869 --> 00:36:24,890
examples again live

00:36:27,680 --> 00:36:31,040
one of the things that one of my

00:36:28,940 --> 00:36:33,470
attendees at frontiers showed me was

00:36:31,040 --> 00:36:36,619
this map here so they have this history

00:36:33,470 --> 00:36:39,410
map for the history of Syria this map

00:36:36,619 --> 00:36:41,660
the actual map is an image a raster

00:36:39,410 --> 00:36:43,880
image inside of the this viewport which

00:36:41,660 --> 00:36:45,320
is an SVG so you have an SVG container

00:36:43,880 --> 00:36:47,480
an SVG document and you're referencing

00:36:45,320 --> 00:36:50,030
an image inside of it and these paths

00:36:47,480 --> 00:36:51,859
here these circles like if you go to the

00:36:50,030 --> 00:36:53,300
places and you want to highlight stuff

00:36:51,859 --> 00:36:55,460
you can do that all this using

00:36:53,300 --> 00:36:58,339
javascript and then you can use even a

00:36:55,460 --> 00:37:01,130
little bit more of the SPG features to

00:36:58,339 --> 00:37:03,230
do this like each one of these colored

00:37:01,130 --> 00:37:05,900
areas as a path that has a fill color

00:37:03,230 --> 00:37:09,800
and then some of them I think it's

00:37:05,900 --> 00:37:12,560
already here somewhere no but one of the

00:37:09,800 --> 00:37:15,109
things that they have here is there you

00:37:12,560 --> 00:37:17,240
can also use a blur on each one of these

00:37:15,109 --> 00:37:20,060
so it's like you're doing heat mapping

00:37:17,240 --> 00:37:23,270
so you would have a path a colored path

00:37:20,060 --> 00:37:24,980
applied apply a blur to that so you get

00:37:23,270 --> 00:37:27,950
some sort of heat maps which is pretty

00:37:24,980 --> 00:37:29,270
cool but but what's even nicer is you

00:37:27,950 --> 00:37:33,230
can do this which has been making the

00:37:29,270 --> 00:37:35,510
rounds on Twitter for the few days so

00:37:33,230 --> 00:37:38,089
you're using SVG here to serve JPEGs or

00:37:35,510 --> 00:37:39,530
PNG s again but you're you're doing

00:37:38,089 --> 00:37:41,540
you're making the experience a little

00:37:39,530 --> 00:37:44,390
bit nicer so you're serving an outline

00:37:41,540 --> 00:37:46,010
which is an SVG path you're serving an

00:37:44,390 --> 00:37:47,810
outline of the actual image that you're

00:37:46,010 --> 00:37:50,570
loading so if i refresh it again these

00:37:47,810 --> 00:37:52,280
are SVG's and an SVG container and once

00:37:50,570 --> 00:37:53,330
the images are lazy lazy loaded and

00:37:52,280 --> 00:37:56,210
they're ready to be displayed you

00:37:53,330 --> 00:37:57,710
display them inside of these SPG's which

00:37:56,210 --> 00:38:01,369
is pretty cool and because it is really

00:37:57,710 --> 00:38:03,619
useful someone on Twitter mu he he

00:38:01,369 --> 00:38:06,680
created this WebP a coder that exports

00:38:03,619 --> 00:38:08,180
traced outlines as images so you give it

00:38:06,680 --> 00:38:11,060
your images it's going to create those

00:38:08,180 --> 00:38:12,980
SPG outlines for you and then you can

00:38:11,060 --> 00:38:15,619
embed it he even created other stuff

00:38:12,980 --> 00:38:18,589
like you can you can create these

00:38:15,619 --> 00:38:23,660
learned previews as well which is pretty

00:38:18,589 --> 00:38:25,770
cool and my last slide is thank you

00:38:23,660 --> 00:38:31,020
slide so thank you

00:38:25,770 --> 00:38:31,020

YouTube URL: https://www.youtube.com/watch?v=hhISb-cpFgM


