Title: Getting Browser Bugs Fixed by Alan Stearns | CSSConf BP 2019
Publication date: 2019-11-04
Playlist: CSSConf Budapest 2019
Description: 
	When you run into a browser bug, what can you do? I’ll give how-to steps ranging from a quick vote on a bug through submitting a test case, all with real-life stories on how effective some extra effort can be. At the end of the talk listeners will have the resources to submit bug reports with W3C cross-browser tests that can be incorporated in every browser’s test systems. This gives the best chances for fixing the problem, and ensures browsers will regression test the fix for eternity.

Alan does Web standards and web component development at Adobe, also Co-chair of the CSS Working Group at the W3C
Captions: 
	00:00:00,130 --> 00:00:02,349
[Applause]

00:00:03,799 --> 00:00:10,349
well hips all right

00:00:07,440 --> 00:00:12,480
so yes I work on web standards at Adobe

00:00:10,349 --> 00:00:16,500
I am co-chair of the CSS working group

00:00:12,480 --> 00:00:20,789
but last week it was my other co-chair

00:00:16,500 --> 00:00:23,160
who managed to get riding modes resolved

00:00:20,789 --> 00:00:26,939
to go to propose recommendations so I

00:00:23,160 --> 00:00:30,000
don't get to claim much for that one I'm

00:00:26,939 --> 00:00:34,020
going to talk to you today about how all

00:00:30,000 --> 00:00:35,850
of you can help getting browser bugs

00:00:34,020 --> 00:00:39,510
fast I'm going to start with a little

00:00:35,850 --> 00:00:41,610
bit of audience participation everybody

00:00:39,510 --> 00:00:44,219
here does some kind of web development

00:00:41,610 --> 00:00:48,870
how many people here raise your hand if

00:00:44,219 --> 00:00:52,590
you have run into a browser bug so many

00:00:48,870 --> 00:00:54,090
bugs all right of all you people which

00:00:52,590 --> 00:00:56,010
is almost everybody who has run into a

00:00:54,090 --> 00:00:59,690
browser bug how many people have

00:00:56,010 --> 00:01:03,239
actually reported the bug that you found

00:00:59,690 --> 00:01:09,330
that's about what I usually see maybe

00:01:03,239 --> 00:01:13,560
10% yeah I'm hoping by the time I end

00:01:09,330 --> 00:01:18,600
this presentation more people will feel

00:01:13,560 --> 00:01:21,259
empowered to log browser bugs help them

00:01:18,600 --> 00:01:25,080
nudge them along the way to being fixed

00:01:21,259 --> 00:01:27,240
and I'm gonna tell you about the things

00:01:25,080 --> 00:01:29,280
that I've found have been effective at

00:01:27,240 --> 00:01:33,720
getting browser developers to actually

00:01:29,280 --> 00:01:36,840
do something for you so why should you

00:01:33,720 --> 00:01:39,930
care you run into a browser bug you find

00:01:36,840 --> 00:01:46,439
a solution and you go along your merry

00:01:39,930 --> 00:01:49,710
way if you're anything like me you find

00:01:46,439 --> 00:01:53,250
the bug you figure out a solution you go

00:01:49,710 --> 00:01:55,259
along and sometime later months years

00:01:53,250 --> 00:01:57,149
maybe even weeks you run into the same

00:01:55,259 --> 00:01:59,310
bug again and you've forgotten what the

00:01:57,149 --> 00:02:03,659
solution was and you have to go through

00:01:59,310 --> 00:02:04,330
the effort of solving some of the else's

00:02:03,659 --> 00:02:07,780
problem

00:02:04,330 --> 00:02:09,910
again so yes you managed to get a

00:02:07,780 --> 00:02:11,410
browser bug fixed that means there's one

00:02:09,910 --> 00:02:15,730
less thing that you have to do you're

00:02:11,410 --> 00:02:20,680
helping future you but it's not just

00:02:15,730 --> 00:02:22,390
yourself you're also helping hundreds or

00:02:20,680 --> 00:02:24,310
thousands and developers around the

00:02:22,390 --> 00:02:26,170
world who will also run into this bug

00:02:24,310 --> 00:02:28,300
maybe some other people in this room

00:02:26,170 --> 00:02:32,860
will run into the same bug that you do

00:02:28,300 --> 00:02:35,140
and if you all can manage to get the bug

00:02:32,860 --> 00:02:40,050
fixed that's one less thing for other

00:02:35,140 --> 00:02:40,050
developers to worry about but also a

00:02:40,650 --> 00:02:49,210
more bug free web helps users of the web

00:02:45,660 --> 00:02:52,270
a better environment for browsing is

00:02:49,210 --> 00:02:54,640
better for everybody and the less bugs

00:02:52,270 --> 00:02:57,130
there are the more that web developers

00:02:54,640 --> 00:03:00,010
like yourselves can do things for your

00:02:57,130 --> 00:03:02,050
users and getting a browser bug fixed

00:03:00,010 --> 00:03:04,540
means that billions of people around the

00:03:02,050 --> 00:03:10,989
world have a better time in their

00:03:04,540 --> 00:03:13,690
browsers and I apologize I don't maybe I

00:03:10,989 --> 00:03:16,239
need to shave my beard for presentations

00:03:13,690 --> 00:03:19,709
the microphone always seems to rustle a

00:03:16,239 --> 00:03:22,270
little bit and I'm sorry about that so

00:03:19,709 --> 00:03:26,050
what can you do to fix about well

00:03:22,270 --> 00:03:28,000
browsers are open source so your

00:03:26,050 --> 00:03:31,780
developers you could go fix the bug

00:03:28,000 --> 00:03:34,239
yourself it is possible I worked at a

00:03:31,780 --> 00:03:36,489
team on Adobe that did this very thing

00:03:34,239 --> 00:03:41,860
we fix bugs in lots of browsers we added

00:03:36,489 --> 00:03:47,290
features to lots of browsers but it's

00:03:41,860 --> 00:03:49,450
not really what I expect anybody to do

00:03:47,290 --> 00:03:51,100
we no longer do it ourselves it wasn't

00:03:49,450 --> 00:03:53,080
really a cost-effective thing we

00:03:51,100 --> 00:03:55,360
couldn't really justify the expense of

00:03:53,080 --> 00:03:58,060
having a team fixing bugs in browsers

00:03:55,360 --> 00:03:59,770
because there are people where it's

00:03:58,060 --> 00:04:02,410
their job to fix bugs

00:03:59,770 --> 00:04:05,860
there are browser engineers funded in

00:04:02,410 --> 00:04:08,350
some cases by companies that have lots

00:04:05,860 --> 00:04:09,630
of money so they really should do their

00:04:08,350 --> 00:04:13,420
job and

00:04:09,630 --> 00:04:16,000
there are ways in which we as users of

00:04:13,420 --> 00:04:18,940
the platform we as developers can help

00:04:16,000 --> 00:04:22,600
them to nudge them along to fixing the

00:04:18,940 --> 00:04:26,020
bugs that are the worst things in our

00:04:22,600 --> 00:04:28,840
development life so what I'm going to

00:04:26,020 --> 00:04:31,200
talk to you today about is how to

00:04:28,840 --> 00:04:35,080
influence browser developers how to

00:04:31,200 --> 00:04:38,500
nudge them along things that I found

00:04:35,080 --> 00:04:40,450
effective both in my own life and in

00:04:38,500 --> 00:04:43,120
what I hear from other people and

00:04:40,450 --> 00:04:48,840
getting browser browser developers to

00:04:43,120 --> 00:04:55,330
fix the bugs that are important the one

00:04:48,840 --> 00:04:57,310
basic if nothing else just do this one

00:04:55,330 --> 00:05:00,850
thing it's just make sure the bug is

00:04:57,310 --> 00:05:03,490
reported there are a number of search

00:05:00,850 --> 00:05:06,340
engines this is one of them that will

00:05:03,490 --> 00:05:08,080
search through all of the bug bases for

00:05:06,340 --> 00:05:10,270
all of the browser's all placed all the

00:05:08,080 --> 00:05:13,060
major browsers and let you know whether

00:05:10,270 --> 00:05:14,740
a bug has already been reported so at

00:05:13,060 --> 00:05:17,110
the very least you can go and see

00:05:14,740 --> 00:05:22,360
whether something needs to be done about

00:05:17,110 --> 00:05:27,390
this rug if you find the bug that is

00:05:22,360 --> 00:05:29,979
causing you trouble the easiest most

00:05:27,390 --> 00:05:33,280
cost-effective thing you can do is just

00:05:29,979 --> 00:05:35,860
a vote for it you might not think that

00:05:33,280 --> 00:05:38,590
this would make much of a difference but

00:05:35,860 --> 00:05:40,870
it actually does I've been in meetings

00:05:38,590 --> 00:05:44,139
with browser developers talking about a

00:05:40,870 --> 00:05:46,419
particular bug sometimes about that they

00:05:44,139 --> 00:05:51,250
know has been around for a long time but

00:05:46,419 --> 00:05:52,990
they've told me point-blank I can't get

00:05:51,250 --> 00:05:55,479
anybody to fix this bug because it only

00:05:52,990 --> 00:05:57,820
has ten votes and these other bugs over

00:05:55,479 --> 00:06:00,430
here have 200 votes and so these are the

00:05:57,820 --> 00:06:03,810
ones that I'm gonna actually spend some

00:06:00,430 --> 00:06:06,490
time fixing so if you can find a bug

00:06:03,810 --> 00:06:09,280
please and it's kind of causing you pain

00:06:06,490 --> 00:06:12,820
please vote for it there's like a plus

00:06:09,280 --> 00:06:14,330
one a favorite a follow in these bug

00:06:12,820 --> 00:06:18,059
systems

00:06:14,330 --> 00:06:20,729
that gives the browser developers some

00:06:18,059 --> 00:06:23,519
sense of priority on what actually needs

00:06:20,729 --> 00:06:27,449
to be fixed element platforms and it's

00:06:23,519 --> 00:06:31,080
not just bugs new features are all

00:06:27,449 --> 00:06:35,489
listed in these bug in these but

00:06:31,080 --> 00:06:40,889
repositories has bugs so if say you were

00:06:35,489 --> 00:06:43,110
interested in having paintwork let's be

00:06:40,889 --> 00:06:44,519
implemented in more browsers you can go

00:06:43,110 --> 00:06:47,129
to the browsers that don't implement

00:06:44,519 --> 00:06:49,409
them and find a bug that says implement

00:06:47,129 --> 00:06:52,889
paint worklet and vote for that bug and

00:06:49,409 --> 00:06:55,199
that will help the browser engineers get

00:06:52,889 --> 00:06:56,699
around to implementing pig worklets and

00:06:55,199 --> 00:07:02,369
making them something that you can use

00:06:56,699 --> 00:07:06,659
all over the web you can also put new

00:07:02,369 --> 00:07:08,459
information in bug comments if you came

00:07:06,659 --> 00:07:12,479
at the bug from a slightly different

00:07:08,459 --> 00:07:14,759
direction putting new steps in is a

00:07:12,479 --> 00:07:16,529
really good thing to do the only thing

00:07:14,759 --> 00:07:18,569
that you should not do in a bug comment

00:07:16,529 --> 00:07:20,789
is actually just do a plus one because

00:07:18,569 --> 00:07:25,439
the voting mechanisms are there for that

00:07:20,789 --> 00:07:29,189
and if you can't find the bug just write

00:07:25,439 --> 00:07:31,139
it up it can be a very quick thing or it

00:07:29,189 --> 00:07:32,610
can be a very involved thing depending

00:07:31,139 --> 00:07:33,929
on how much effort you want to put into

00:07:32,610 --> 00:07:37,919
it

00:07:33,929 --> 00:07:40,439
and don't worry about adding a duplicate

00:07:37,919 --> 00:07:43,740
bug to these systems if you've made a

00:07:40,439 --> 00:07:44,699
good-faith effort to find the bug and

00:07:43,740 --> 00:07:48,839
you haven't found it

00:07:44,699 --> 00:07:50,999
riding a bug and letting some browser

00:07:48,839 --> 00:07:53,849
engineer do some triaging and say oh no

00:07:50,999 --> 00:07:56,249
it's actually this mug over here is

00:07:53,849 --> 00:07:58,019
perfectly fine and that just means that

00:07:56,249 --> 00:08:01,169
the next person that goes and tries to

00:07:58,019 --> 00:08:02,819
find the that bug with the search terms

00:08:01,169 --> 00:08:04,860
that you used they'll find your

00:08:02,819 --> 00:08:07,829
duplicate it'll link to the actual bug

00:08:04,860 --> 00:08:11,570
and so in some cases like this

00:08:07,829 --> 00:08:16,490
duplicates are a fine and good thing

00:08:11,570 --> 00:08:18,740
so you've gone and logged a bug or you

00:08:16,490 --> 00:08:24,610
found the bug and you voted on it so

00:08:18,740 --> 00:08:24,610
you're done right all bugs get fixed or

00:08:25,750 --> 00:08:32,540
sometimes they just hang out forever and

00:08:29,240 --> 00:08:38,090
get closed as one fixed after 20 years

00:08:32,540 --> 00:08:39,770
of being around so there are some things

00:08:38,090 --> 00:08:44,030
that you can do to improve your chances

00:08:39,770 --> 00:08:47,750
of getting a bug fixed and they're

00:08:44,030 --> 00:08:51,500
mainly just writing a good bug making

00:08:47,750 --> 00:08:53,210
sure that the steps to the bug are the

00:08:51,500 --> 00:08:55,820
smallest number of steps that can

00:08:53,210 --> 00:08:57,950
possibly be quite a few bugs that

00:08:55,820 --> 00:09:01,780
browser developers get from outside

00:08:57,950 --> 00:09:06,110
their projects or load this URL and

00:09:01,780 --> 00:09:06,860
things don't look good that's not much

00:09:06,110 --> 00:09:10,790
to go on

00:09:06,860 --> 00:09:12,590
so if you can reduce the thing that is

00:09:10,790 --> 00:09:15,740
going wrong to just a few lines of code

00:09:12,590 --> 00:09:18,890
and say here's what needs to be fixed to

00:09:15,740 --> 00:09:21,590
make things better for me it's much more

00:09:18,890 --> 00:09:24,200
likely that a browser engineer is going

00:09:21,590 --> 00:09:26,870
to actually do something about it

00:09:24,200 --> 00:09:31,190
you can add examples to a bug you can

00:09:26,870 --> 00:09:34,040
show what the repercussions of the bug

00:09:31,190 --> 00:09:38,300
are that will give the browser developer

00:09:34,040 --> 00:09:40,340
more to go on when they go and have to

00:09:38,300 --> 00:09:43,250
fight for spending time to fix a

00:09:40,340 --> 00:09:45,800
particular bug and finally the most

00:09:43,250 --> 00:09:49,070
effective thing that you can do is to is

00:09:45,800 --> 00:09:50,870
to add a test case the browser developer

00:09:49,070 --> 00:09:52,970
when they fix the bug they're going to

00:09:50,870 --> 00:09:55,670
have to go add a test case or a set of

00:09:52,970 --> 00:09:58,490
test cases themselves so you can do a

00:09:55,670 --> 00:10:00,620
little bit of work to help the browser

00:09:58,490 --> 00:10:02,500
developer and that'll make it more

00:10:00,620 --> 00:10:06,340
likely that they'll actually get around

00:10:02,500 --> 00:10:06,340
to fixing the bug for you

00:10:06,680 --> 00:10:15,499
so I'm going to talk to you a little bit

00:10:07,910 --> 00:10:17,240
about test cases ten years ago before I

00:10:15,499 --> 00:10:20,300
got started in this web platform stuff

00:10:17,240 --> 00:10:24,290
all of the browser's had their own test

00:10:20,300 --> 00:10:28,360
sets that only ran on their own browser

00:10:24,290 --> 00:10:31,309
and there was no sharing of tests and

00:10:28,360 --> 00:10:33,860
over the last 10 years there's been this

00:10:31,309 --> 00:10:38,839
thing that is now called the web

00:10:33,860 --> 00:10:42,620
platform tests project that is a

00:10:38,839 --> 00:10:44,689
repository of cross cross browser tests

00:10:42,620 --> 00:10:50,389
that the browser's are now all sharing

00:10:44,689 --> 00:10:52,759
and so if browser developer on Firefox

00:10:50,389 --> 00:10:55,309
writes a cross browser test they can

00:10:52,759 --> 00:10:57,800
upload it to web platform tests and that

00:10:55,309 --> 00:11:01,189
test gets synced to all of the other

00:10:57,800 --> 00:11:04,970
browsers that are sharing and so it's a

00:11:01,189 --> 00:11:07,189
multiplier effect and somebody who

00:11:04,970 --> 00:11:10,879
doesn't work on a browser can add a bug

00:11:07,189 --> 00:11:13,730
to this repository and it will get moved

00:11:10,879 --> 00:11:17,319
out to all of the browsers testing

00:11:13,730 --> 00:11:20,930
environments and be tested in perpetuity

00:11:17,319 --> 00:11:25,660
using some shared infrastructure that

00:11:20,930 --> 00:11:28,879
they have been working on together and

00:11:25,660 --> 00:11:33,819
the set of tests are run independently

00:11:28,879 --> 00:11:36,800
and reported on every test there are

00:11:33,819 --> 00:11:39,649
millions of these tests every test gets

00:11:36,800 --> 00:11:42,079
run four times a day on all the major

00:11:39,649 --> 00:11:46,430
browsers and the results get recorded

00:11:42,079 --> 00:11:48,980
and so it's a second indicator for the

00:11:46,430 --> 00:11:51,709
browser developer that something is

00:11:48,980 --> 00:11:54,829
going wrong in their browser and it's a

00:11:51,709 --> 00:11:58,759
second nudge towards fixing the thing

00:11:54,829 --> 00:12:01,220
it's not only a failure in their own

00:11:58,759 --> 00:12:03,980
test system it's a failure in this

00:12:01,220 --> 00:12:06,620
external test system that they have to

00:12:03,980 --> 00:12:08,740
look at and triage and decide whether or

00:12:06,620 --> 00:12:08,740
not

00:12:09,430 --> 00:12:13,070
bugs that have tests in this

00:12:12,350 --> 00:12:16,550
cross-browser

00:12:13,070 --> 00:12:18,470
test repository are much more likely to

00:12:16,550 --> 00:12:21,800
be fixed especially over the last couple

00:12:18,470 --> 00:12:25,550
years they've shown how the trajectory

00:12:21,800 --> 00:12:28,690
of tests that run and pass in more than

00:12:25,550 --> 00:12:34,400
one browser or in all browsers has been

00:12:28,690 --> 00:12:36,140
increasing and the the velocity of these

00:12:34,400 --> 00:12:42,130
tests working in more than one browser

00:12:36,140 --> 00:12:47,720
has increased as this web platform tests

00:12:42,130 --> 00:12:49,970
project has been going on so there is a

00:12:47,720 --> 00:12:53,090
bunch of documentation at web platform

00:12:49,970 --> 00:12:57,080
tests about how to contribute how to

00:12:53,090 --> 00:13:01,400
write tests and there are a few formats

00:12:57,080 --> 00:13:05,390
that they talk about and the two I want

00:13:01,400 --> 00:13:09,080
to mention are test harness digest tests

00:13:05,390 --> 00:13:11,090
they're basically unit tests and so if

00:13:09,080 --> 00:13:13,190
you know any sort of unit testing

00:13:11,090 --> 00:13:16,490
framework this is just a test in

00:13:13,190 --> 00:13:18,650
JavaScript with assertions much like any

00:13:16,490 --> 00:13:21,170
other unit testing framework if you

00:13:18,650 --> 00:13:23,390
don't know what unit tests are go find

00:13:21,170 --> 00:13:27,140
out they are one of the best things that

00:13:23,390 --> 00:13:28,370
you can add to your own development but

00:13:27,140 --> 00:13:29,870
I think most people know about them so

00:13:28,370 --> 00:13:31,700
I'm not going to mention much about of

00:13:29,870 --> 00:13:35,020
this except that this is one way that

00:13:31,700 --> 00:13:37,850
you can add a test to web platform tests

00:13:35,020 --> 00:13:40,540
the second one that I'm going to talk

00:13:37,850 --> 00:13:44,810
about is ref tests which are a kind of

00:13:40,540 --> 00:13:47,810
visual comparison test but they're

00:13:44,810 --> 00:13:50,020
different from regular snapshot tests

00:13:47,810 --> 00:13:52,790
that are actually just testing against

00:13:50,020 --> 00:13:55,670
say an image that you've taken a

00:13:52,790 --> 00:13:58,880
snapshot of a test result they're set up

00:13:55,670 --> 00:14:00,990
a little differently and they're set up

00:13:58,880 --> 00:14:03,750
such that

00:14:00,990 --> 00:14:08,460
they can run across all browsers across

00:14:03,750 --> 00:14:14,450
all environments across all say font

00:14:08,460 --> 00:14:17,760
setups graphics setups and there's no

00:14:14,450 --> 00:14:19,950
picture of the test result that you have

00:14:17,760 --> 00:14:21,870
to maintain they're actually the only

00:14:19,950 --> 00:14:25,290
snap choice tests that are actually

00:14:21,870 --> 00:14:27,149
worth anything if you look at this

00:14:25,290 --> 00:14:29,760
documentation there's a bunch of other

00:14:27,149 --> 00:14:31,850
tests test formats that they mentioned

00:14:29,760 --> 00:14:37,610
but you should ignore all of them

00:14:31,850 --> 00:14:40,170
they're mainly just test formats that

00:14:37,610 --> 00:14:41,610
the browser's used in their legacy

00:14:40,170 --> 00:14:44,279
systems and nobody should ever write

00:14:41,610 --> 00:14:47,459
them again test harness dot J's tests

00:14:44,279 --> 00:14:51,270
and rec tests are the only way to go so

00:14:47,459 --> 00:14:54,240
a little bit more about ref tests here's

00:14:51,270 --> 00:14:59,010
how they're set out you have two files

00:14:54,240 --> 00:15:02,850
that get rendered in a browser one file

00:14:59,010 --> 00:15:06,420
has what they expect the tests to render

00:15:02,850 --> 00:15:09,660
as and it doesn't use the feature under

00:15:06,420 --> 00:15:13,940
test at all in a lot of cases it's just

00:15:09,660 --> 00:15:16,709
a green box of our certain dimension and

00:15:13,940 --> 00:15:19,279
then you have another file that actually

00:15:16,709 --> 00:15:21,750
uses the thing that you're testing that

00:15:19,279 --> 00:15:24,390
produces exactly the same rendering as

00:15:21,750 --> 00:15:26,220
the reference and that can be a little

00:15:24,390 --> 00:15:28,950
tricky to set up but sometimes it's

00:15:26,220 --> 00:15:31,020
actually pretty easy and you have the

00:15:28,950 --> 00:15:32,730
browser in a particular environment with

00:15:31,020 --> 00:15:35,730
a particular font setup and all of this

00:15:32,730 --> 00:15:37,320
rendered both files and then compare the

00:15:35,730 --> 00:15:39,089
two against each other so there's

00:15:37,320 --> 00:15:41,820
nothing to maintain

00:15:39,089 --> 00:15:44,250
you're just rendering stuff doing the

00:15:41,820 --> 00:15:48,570
pixel comparison and if the pixels match

00:15:44,250 --> 00:15:52,110
the test is good so I want to show you a

00:15:48,570 --> 00:15:54,440
simple ref test that I recently added to

00:15:52,110 --> 00:15:59,310
web platform tests

00:15:54,440 --> 00:16:00,300
the situation was there's a typography

00:15:59,310 --> 00:16:04,230
slack I'm on

00:16:00,300 --> 00:16:07,110
and one of the people there mentioned a

00:16:04,230 --> 00:16:17,040
bug they were seeing in Firefox they had

00:16:07,110 --> 00:16:19,830
a they had a JavaScript file that was

00:16:17,040 --> 00:16:22,860
comparing the widths of various bits of

00:16:19,830 --> 00:16:24,870
text and then doing fitted so he would

00:16:22,860 --> 00:16:26,640
make the text bigger to fit a wider

00:16:24,870 --> 00:16:30,240
thing or make the text smaller to fit a

00:16:26,640 --> 00:16:33,870
smaller thing so you could measure in

00:16:30,240 --> 00:16:35,940
JavaScript and get the text to fit the

00:16:33,870 --> 00:16:39,900
environments you wanted it in and

00:16:35,940 --> 00:16:43,080
Firefox was just giving bad nets for a

00:16:39,900 --> 00:16:47,730
particular set of features first letter

00:16:43,080 --> 00:16:52,550
and text transfer so I went and found

00:16:47,730 --> 00:16:55,560
the bug for this it's about 10 years old

00:16:52,550 --> 00:16:58,710
Firefox knows about the bug it's not

00:16:55,560 --> 00:17:03,300
that important to fix so it's never

00:16:58,710 --> 00:17:05,730
gotten fixed but I voted for it and got

00:17:03,300 --> 00:17:08,730
my friend on slack to vote for it as

00:17:05,730 --> 00:17:11,520
well and then since I had a talk to

00:17:08,730 --> 00:17:18,420
prepare about testing I decided right a

00:17:11,520 --> 00:17:20,930
ret test for it and let's see let me

00:17:18,420 --> 00:17:20,930
show you

00:17:23,210 --> 00:17:33,020
the test so here is the reference it's

00:17:30,350 --> 00:17:34,460
got a green box it's got some text that

00:17:33,020 --> 00:17:36,680
describes what you should see on the

00:17:34,460 --> 00:17:40,820
screen that there should be no red

00:17:36,680 --> 00:17:43,280
that's not actually necessary but it's a

00:17:40,820 --> 00:17:46,250
style that people use for rep tests that

00:17:43,280 --> 00:17:48,320
I kind of like and it's not using any of

00:17:46,250 --> 00:17:51,250
the features that I want to test it's

00:17:48,320 --> 00:17:58,460
not using first letter it's not using

00:17:51,250 --> 00:18:02,450
text transfer and then I have the start

00:17:58,460 --> 00:18:06,790
of the test that in season first letter

00:18:02,450 --> 00:18:06,790
and is using text transform and

00:18:06,910 --> 00:18:17,000
measuring the width in a visual way by

00:18:10,250 --> 00:18:21,140
adding a background color and here is

00:18:17,000 --> 00:18:25,820
the text reference in Firefox and the

00:18:21,140 --> 00:18:29,450
test start in Firefox which on first

00:18:25,820 --> 00:18:34,240
rendering does it that you can see

00:18:29,450 --> 00:18:36,890
there's the extra bit in the red part

00:18:34,240 --> 00:18:41,810
who knows why that width is actually

00:18:36,890 --> 00:18:45,650
there so I'm going to be a coward and

00:18:41,810 --> 00:18:48,680
not do any live coding I'm just going to

00:18:45,650 --> 00:18:51,590
show you the complete test which is

00:18:48,680 --> 00:18:54,050
adding a couple things I had those two

00:18:51,590 --> 00:18:55,730
spans that were in line walks and I've

00:18:54,050 --> 00:18:59,390
just said that their position happen

00:18:55,730 --> 00:19:01,730
absolute so they will overlap and

00:18:59,390 --> 00:19:03,650
actually I need to redo this because it

00:19:01,730 --> 00:19:05,330
is only on first rendering that the bug

00:19:03,650 --> 00:19:07,899
shows up

00:19:05,330 --> 00:19:11,809
so the two things are overlapping and

00:19:07,899 --> 00:19:14,029
I've made the text transparent because

00:19:11,809 --> 00:19:16,519
the actual text rendering isn't part of

00:19:14,029 --> 00:19:21,739
this bug it's just the width that we're

00:19:16,519 --> 00:19:22,159
concerned about and on Chrome everything

00:19:21,739 --> 00:19:25,779
looks great

00:19:22,159 --> 00:19:28,909
there's no red because those two things

00:19:25,779 --> 00:19:32,239
the test and control spans are exactly

00:19:28,909 --> 00:19:35,749
the same width and in Firefox the red

00:19:32,239 --> 00:19:42,139
pokes out so this is going to be a

00:19:35,749 --> 00:19:42,739
failure for Firefox and so that's

00:19:42,139 --> 00:19:45,080
basically it

00:19:42,739 --> 00:19:48,919
- a rough test you have two files and

00:19:45,080 --> 00:19:53,480
they have the same rendering and if you

00:19:48,919 --> 00:19:55,940
were looking very very closely it's

00:19:53,480 --> 00:19:58,279
probably hard to see the rendering is

00:19:55,940 --> 00:20:00,799
actually different between browsers the

00:19:58,279 --> 00:20:03,980
green box and Firefox is a little white

00:20:00,799 --> 00:20:07,279
is a little taller and that just happens

00:20:03,980 --> 00:20:09,950
to be because I have a default font that

00:20:07,279 --> 00:20:12,289
is a little bit taller than the default

00:20:09,950 --> 00:20:14,239
font that's used in Chrome but this

00:20:12,289 --> 00:20:15,980
doesn't matter because we're comparing

00:20:14,239 --> 00:20:18,999
chrome rendering to chrome rendering and

00:20:15,980 --> 00:20:24,769
Firefox rendering to Firefox rendering

00:20:18,999 --> 00:20:31,549
so I put this into web platform tests

00:20:24,769 --> 00:20:35,509
and it's now being run four times a day

00:20:31,549 --> 00:20:39,440
and you can see that the latest Firefox

00:20:35,509 --> 00:20:42,230
that was tested is showing a failure so

00:20:39,440 --> 00:20:46,070
there's now a test result that is

00:20:42,230 --> 00:20:49,119
showing up four times a day for two

00:20:46,070 --> 00:20:53,480
basically shame the Firefox engineers

00:20:49,119 --> 00:20:58,929
into eventually fixing this bug

00:20:53,480 --> 00:20:58,929
and hopefully they will get around to it

00:21:03,700 --> 00:21:11,100
all right

00:21:06,240 --> 00:21:14,310
so adding a test case is really the best

00:21:11,100 --> 00:21:16,260
way to get some attention to the bug and

00:21:14,310 --> 00:21:19,590
adding a test case to web platform tests

00:21:16,260 --> 00:21:22,950
is a way of getting more people to look

00:21:19,590 --> 00:21:27,290
at the problem and hopefully get

00:21:22,950 --> 00:21:29,570
somebody to actually commit to the VIX

00:21:27,290 --> 00:21:32,010
but another thing that you can do is

00:21:29,570 --> 00:21:34,530
just to tell people about the problem

00:21:32,010 --> 00:21:37,410
that you're running into my friend on

00:21:34,530 --> 00:21:40,530
slack told everybody in the slack

00:21:37,410 --> 00:21:43,110
Channel about this problem and I happen

00:21:40,530 --> 00:21:44,880
to read it and do some extra work to

00:21:43,110 --> 00:21:49,980
make it slightly more likely that this

00:21:44,880 --> 00:21:52,830
bug is going to be fixed mentioned

00:21:49,980 --> 00:21:54,450
people that you're updating or voting on

00:21:52,830 --> 00:21:58,650
a bug maybe you'll get more people to

00:21:54,450 --> 00:22:03,510
vote on it in solidarity and you can

00:21:58,650 --> 00:22:05,940
show people the test case I showed the

00:22:03,510 --> 00:22:08,990
test case to some people that I work

00:22:05,940 --> 00:22:11,880
with in the CSS working group and they

00:22:08,990 --> 00:22:12,990
showed me a few things to fix in it to

00:22:11,880 --> 00:22:15,210
make it a little bit more bulletproof

00:22:12,990 --> 00:22:18,080
the test that's actually in web platform

00:22:15,210 --> 00:22:20,820
tests is a little bit more complicated

00:22:18,080 --> 00:22:23,460
but I only got those improvements

00:22:20,820 --> 00:22:27,330
because I told people about it and Here

00:22:23,460 --> 00:22:29,370
I am today telling you about this bug

00:22:27,330 --> 00:22:33,020
perhaps some of you will go take a look

00:22:29,370 --> 00:22:33,020
at it and vote for yourselves

00:22:35,550 --> 00:22:40,040
letting people know the problems that

00:22:37,320 --> 00:22:42,540
you're running into letting people know

00:22:40,040 --> 00:22:46,110
what it is that you've done to try to

00:22:42,540 --> 00:22:47,580
fix the problem you can get better

00:22:46,110 --> 00:22:50,010
solutions two things you can get people

00:22:47,580 --> 00:22:52,470
talking about the problem and you can

00:22:50,010 --> 00:22:55,890
get browser developers to notice

00:22:52,470 --> 00:22:59,070
something's going wrong this is an

00:22:55,890 --> 00:23:00,570
example from about a year ago there was

00:22:59,070 --> 00:23:04,590
a developer who had a site that was

00:23:00,570 --> 00:23:09,150
written great in all of the browsers and

00:23:04,590 --> 00:23:10,740
he tested on Chrome Canary which is an

00:23:09,150 --> 00:23:12,330
excellent thing to do you should take a

00:23:10,740 --> 00:23:13,890
look at all the developer versions of

00:23:12,330 --> 00:23:16,410
browsers and see how your site is

00:23:13,890 --> 00:23:19,530
working in them to get some idea of what

00:23:16,410 --> 00:23:21,750
is going to happen for your users in the

00:23:19,530 --> 00:23:24,990
upcoming weeks and months and he found

00:23:21,750 --> 00:23:26,670
that his site in Chrome Canary regular

00:23:24,990 --> 00:23:30,360
chrome is fine but in Chrome Canary just

00:23:26,670 --> 00:23:32,640
broke and so he wrote a bug saying you

00:23:30,360 --> 00:23:35,850
know here's my code here's what's going

00:23:32,640 --> 00:23:38,250
wrong why did you change this you're

00:23:35,850 --> 00:23:41,730
making the web worse and he didn't have

00:23:38,250 --> 00:23:44,280
to wait 20 years to have his bug closed

00:23:41,730 --> 00:23:46,200
this won't fix almost immediately the

00:23:44,280 --> 00:23:49,050
browser developer went and closed it as

00:23:46,200 --> 00:23:51,390
won't fix because the spec said it was

00:23:49,050 --> 00:23:53,580
supposed to be this the spec had changed

00:23:51,390 --> 00:23:56,100
and so the chrome engineer was being

00:23:53,580 --> 00:24:00,059
diligent and changed chrome to match the

00:23:56,100 --> 00:24:02,730
spec so this guy of the developer said

00:24:00,059 --> 00:24:04,290
no this is not good enough he looked at

00:24:02,730 --> 00:24:06,660
the spec and found the email addresses

00:24:04,290 --> 00:24:08,640
of the spec authors and said why did you

00:24:06,660 --> 00:24:10,740
change the spec and it turns out the

00:24:08,640 --> 00:24:13,050
spec change was bad they hadn't

00:24:10,740 --> 00:24:16,220
considered this case and because of this

00:24:13,050 --> 00:24:19,940
guy's diligence he fix the spec and

00:24:16,220 --> 00:24:23,400
fixed Chrome Canary before the bug or

00:24:19,940 --> 00:24:25,570
the spec conformance actually shipped in

00:24:23,400 --> 00:24:30,740
the browser

00:24:25,570 --> 00:24:34,160
here's another example from just a few

00:24:30,740 --> 00:24:35,360
months ago this guy said you know hey

00:24:34,160 --> 00:24:40,490
I'm running into this problem anybody

00:24:35,360 --> 00:24:42,890
knows why this is going on and he got a

00:24:40,490 --> 00:24:44,210
browser developer to reply saying well

00:24:42,890 --> 00:24:46,280
it works for me what are you talking

00:24:44,210 --> 00:24:48,620
about and they went back and forth for a

00:24:46,280 --> 00:24:50,720
while came up with a jsfiddle that

00:24:48,620 --> 00:24:56,150
actually demonstrated the problem and it

00:24:50,720 --> 00:24:59,059
was an actual problem and just recently

00:24:56,150 --> 00:25:05,690
this got fixed and it's going to be

00:24:59,059 --> 00:25:08,150
fixed in mainline Firefox next month so

00:25:05,690 --> 00:25:09,470
telling people about things letting

00:25:08,150 --> 00:25:13,150
people know the problems that you're

00:25:09,470 --> 00:25:18,070
running into on Twitter in a blog post

00:25:13,150 --> 00:25:21,740
in a conference talk in a lightning talk

00:25:18,070 --> 00:25:25,100
grousing to your fellow employees all of

00:25:21,740 --> 00:25:27,620
these things can be a good way of moving

00:25:25,100 --> 00:25:32,730
the platform along making it better for

00:25:27,620 --> 00:25:35,210
everybody so

00:25:32,730 --> 00:25:37,410
I hope I've convinced a few of you that

00:25:35,210 --> 00:25:40,260
there are little things that you can do

00:25:37,410 --> 00:25:45,810
low effort and medium effort things that

00:25:40,260 --> 00:25:49,590
you can do to try to get browser bugs

00:25:45,810 --> 00:25:51,360
fixed when you run into them so

00:25:49,590 --> 00:25:54,600
hopefully the next time you run into a

00:25:51,360 --> 00:25:57,090
browser bug you can go find the bug and

00:25:54,600 --> 00:26:00,270
vote on it or log the bug if you can't

00:25:57,090 --> 00:26:02,310
find it if it's a bug that is really

00:26:00,270 --> 00:26:05,040
holding you back consider spending some

00:26:02,310 --> 00:26:08,070
time looking in to writing a cross

00:26:05,040 --> 00:26:09,690
browser test so that you're saving time

00:26:08,070 --> 00:26:12,450
for the browser developer they can more

00:26:09,690 --> 00:26:15,600
easily justify spending time fixing it

00:26:12,450 --> 00:26:19,110
and tell other people about the problem

00:26:15,600 --> 00:26:21,360
maybe you can crowdsource a bit of help

00:26:19,110 --> 00:26:23,820
and getting some of these things done so

00:26:21,360 --> 00:26:27,300
that your bug can get fixed so please go

00:26:23,820 --> 00:26:29,430
out and improve the web platform for

00:26:27,300 --> 00:26:35,000
future you your fellow web developers

00:26:29,430 --> 00:26:35,000
and everyone else in the world thank you

00:26:38,000 --> 00:26:40,060

YouTube URL: https://www.youtube.com/watch?v=l4lwLCGRrAc


