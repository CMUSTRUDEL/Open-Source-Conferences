Title: CSS in JS - beware the Hype! by Kathrin Holzmann | CSSConf BP 2019
Publication date: 2019-10-31
Playlist: CSSConf Budapest 2019
Description: 
	http://cssconfbp.rocks/speakers/kathrin/

Everyone is hyped about CSS in JS - but is it really worth the hype? Or are there already ways to solve the Problems - maybe even in a better way?

We are living in a mostly hype-driven world, where many people have the fear of missing out on the latest technologies. Rockstar developers are pitching their favorite cutting edge technologies almost every day. But mostly in a un-balanced way focusing only on the benefits. In my talk i will visit the hype around CSS in JS as an example. I will have a closer look on the reasons why we should use CSS in JS and why not. This will enable the audience to take a better, non-biased decision about the right technology for them and their projects.

I am a frontend engineer of more than 10 years. I currently live in Berlin where I am also a Mentor for female students. I always want to share my passion about frontend with everyone.
Captions: 
	00:00:00,250 --> 00:00:02,330
[Applause]

00:00:06,799 --> 00:00:12,150
hi everyone welcome to my talks here

00:00:10,019 --> 00:00:16,710
some days we were - hi my name is

00:00:12,150 --> 00:00:24,300
Catherine and not a next thing isn't

00:00:16,710 --> 00:00:26,430
working ok so at first I have to make

00:00:24,300 --> 00:00:29,340
confession to you and the confession is

00:00:26,430 --> 00:00:33,059
I love makeup tutorials and I really

00:00:29,340 --> 00:00:37,170
enjoy watching them on YouTube and so I

00:00:33,059 --> 00:00:39,360
have one favorite YouTube artist and so

00:00:37,170 --> 00:00:41,430
this person is a professional makeup

00:00:39,360 --> 00:00:44,969
artist and special effects makeup artist

00:00:41,430 --> 00:00:47,280
in Hollywood and I love her videos

00:00:44,969 --> 00:00:52,020
because she focuses mostly on tutorials

00:00:47,280 --> 00:00:54,000
some of our about beauty makeup others

00:00:52,020 --> 00:00:56,550
are about special effects makeup like

00:00:54,000 --> 00:00:59,820
zombies and stuff and on top she has a

00:00:56,550 --> 00:01:03,780
very cute dog and for me it is enough to

00:00:59,820 --> 00:01:07,290
love her but she has many many fans that

00:01:03,780 --> 00:01:08,820
love her too and so because they love

00:01:07,290 --> 00:01:10,830
her and because she's a professional

00:01:08,820 --> 00:01:11,880
makeup artist in Hollywood a lot of

00:01:10,830 --> 00:01:14,880
people ask her for product

00:01:11,880 --> 00:01:18,150
recommendations because she knows her

00:01:14,880 --> 00:01:20,580
stuff and also people want to recreate

00:01:18,150 --> 00:01:22,710
the look she is creating and hopefully

00:01:20,580 --> 00:01:25,650
with the same products it gives the same

00:01:22,710 --> 00:01:28,080
outcome and also other people like to

00:01:25,650 --> 00:01:31,619
feel closer to this artist by using

00:01:28,080 --> 00:01:33,299
their products so far so good that's

00:01:31,619 --> 00:01:36,479
more or less a win-win situation for

00:01:33,299 --> 00:01:40,259
everybody but sometimes bad things

00:01:36,479 --> 00:01:43,110
happens and this is when the product

00:01:40,259 --> 00:01:45,780
becomes equal to the person and then

00:01:43,110 --> 00:01:49,890
someone maybe has something to criticize

00:01:45,780 --> 00:01:52,320
maybe it's a legit criticism about one

00:01:49,890 --> 00:01:53,970
of the products but then for fans it

00:01:52,320 --> 00:01:56,850
becomes that they are criticizing the

00:01:53,970 --> 00:01:59,549
artist and fans really march in and say

00:01:56,850 --> 00:02:01,619
oh yeah you cannot do that and this

00:01:59,549 --> 00:02:03,899
creates a very toxic environment where

00:02:01,619 --> 00:02:06,450
people are silenced or too afraid to

00:02:03,899 --> 00:02:10,170
speak up even though there is a legit

00:02:06,450 --> 00:02:13,140
point on criticizing something but this

00:02:10,170 --> 00:02:13,740
is not track on does a CSS con so let's

00:02:13,140 --> 00:02:16,950
talk a little

00:02:13,740 --> 00:02:18,930
at CSS birthdays things see this is the

00:02:16,950 --> 00:02:24,030
makeup of the web because you can put

00:02:18,930 --> 00:02:27,440
litter on it and so here we as a family

00:02:24,030 --> 00:02:30,750
the deaf community and we also have our

00:02:27,440 --> 00:02:33,540
influencers and ninja developers ten

00:02:30,750 --> 00:02:37,680
times developers our rock stars and we

00:02:33,540 --> 00:02:40,590
love them and also their products me

00:02:37,680 --> 00:02:43,920
love and products that get criticized

00:02:40,590 --> 00:02:47,460
and why are we criticizing again the

00:02:43,920 --> 00:02:49,620
person so we have the same toxic

00:02:47,460 --> 00:02:51,720
environment as the people on YouTube and

00:02:49,620 --> 00:02:53,760
makeup oh my god

00:02:51,720 --> 00:02:56,280
things like when you're get happen so

00:02:53,760 --> 00:02:59,340
everybody maybe follow that link if they

00:02:56,280 --> 00:03:02,850
want to know what's on so let's just say

00:02:59,340 --> 00:03:04,680
the hyper suil and the thing is the hack

00:03:02,850 --> 00:03:07,170
was not only real ever since we have

00:03:04,680 --> 00:03:10,470
things like YouTube and Instagram and

00:03:07,170 --> 00:03:13,080
everything no does assault justice as

00:03:10,470 --> 00:03:17,760
old as the you are a society that formed

00:03:13,080 --> 00:03:20,070
in 1660 and asked this problem of having

00:03:17,760 --> 00:03:23,550
influences back in the day it was mostly

00:03:20,070 --> 00:03:25,890
a Lord that said something is very old

00:03:23,550 --> 00:03:28,140
and then you had someone else that wants

00:03:25,890 --> 00:03:29,700
to criticize the sword and they say yeah

00:03:28,140 --> 00:03:32,400
but you cannot criticize this person

00:03:29,700 --> 00:03:35,220
he's rich she's wealthy he's a lord and

00:03:32,400 --> 00:03:38,340
so I said you know what no yours Envy

00:03:35,220 --> 00:03:42,000
ever that's our motto no Leo's endeavor

00:03:38,340 --> 00:03:47,010
is Latin and translates to take nobody's

00:03:42,000 --> 00:03:49,850
word for it and it is described as an

00:03:47,010 --> 00:03:54,480
expression after determination our

00:03:49,850 --> 00:03:57,810
fellows to withstand the authority of to

00:03:54,480 --> 00:04:02,280
verify all statements by an appeal to

00:03:57,810 --> 00:04:04,470
facts determined by experiment because

00:04:02,280 --> 00:04:08,130
my should you believe me I don't even

00:04:04,470 --> 00:04:12,780
have 500 followers on Twitter instead I

00:04:08,130 --> 00:04:14,580
want to let the facts speak for me okay

00:04:12,780 --> 00:04:18,390
but before we jump into shiny tools and

00:04:14,580 --> 00:04:21,030
stuff let's ask a question what is wrong

00:04:18,390 --> 00:04:23,870
with CSS I mean y'all here we all love

00:04:21,030 --> 00:04:23,870
CSS but

00:04:24,080 --> 00:04:32,509
something is wrong and yeah one thing

00:04:28,490 --> 00:04:35,599
that is very wrong is the first paint

00:04:32,509 --> 00:04:38,150
because science and statistics have

00:04:35,599 --> 00:04:40,699
shown that when the first paint is

00:04:38,150 --> 00:04:42,919
delayed already by half a second the

00:04:40,699 --> 00:04:45,470
user satisfaction really decreases and

00:04:42,919 --> 00:04:49,160
also with the user satisfaction our

00:04:45,470 --> 00:04:51,919
conversion rate decreases because in

00:04:49,160 --> 00:04:56,180
classic web the browser does dis it

00:04:51,919 --> 00:04:58,039
starts downloading the HTML and then

00:04:56,180 --> 00:05:00,830
when it's finished with the HTML it

00:04:58,039 --> 00:05:03,409
starts downloading the CSS and only when

00:05:00,830 --> 00:05:06,349
it has both downloaded and interpreted

00:05:03,409 --> 00:05:09,560
it can start painting so which means

00:05:06,349 --> 00:05:12,169
that he is as render blocking so it

00:05:09,560 --> 00:05:14,960
keeps our user from seeing our page and

00:05:12,169 --> 00:05:17,750
therefore sees as the bad guy and so we

00:05:14,960 --> 00:05:21,830
have to bring it as quick and as soon as

00:05:17,750 --> 00:05:24,919
possible to our users ok so what can we

00:05:21,830 --> 00:05:27,349
do about that let's let's fix it so

00:05:24,919 --> 00:05:30,380
first of all there is a very nice thing

00:05:27,349 --> 00:05:32,710
that people from browsers and other

00:05:30,380 --> 00:05:36,759
people have done and this is HTTP 2

00:05:32,710 --> 00:05:40,340
because HTTP 2 has the approach of

00:05:36,759 --> 00:05:42,590
starting HTML and starting C that's at

00:05:40,340 --> 00:05:44,630
the same time because this is able to

00:05:42,590 --> 00:05:47,539
have multiple downloads with the same

00:05:44,630 --> 00:05:52,460
TCP connection which means we are faster

00:05:47,539 --> 00:05:55,039
but still sometimes the CSS file can be

00:05:52,460 --> 00:05:57,380
very big I can tell you like in one

00:05:55,039 --> 00:06:02,030
company I worked I had a CSS file that

00:05:57,380 --> 00:06:09,560
was nearly 1 megabyte so this was a ruby

00:06:02,030 --> 00:06:13,280
monolith so yes so what can we do we can

00:06:09,560 --> 00:06:15,979
also split our CSS into meaningful parts

00:06:13,280 --> 00:06:19,550
because we only need to have two CSS of

00:06:15,979 --> 00:06:21,710
the stuff we show and so we are already

00:06:19,550 --> 00:06:24,590
very smart and putting our HTML on our

00:06:21,710 --> 00:06:28,849
JavaScript so why not create one chunk

00:06:24,590 --> 00:06:32,719
of both of them and only render stuff we

00:06:28,849 --> 00:06:35,199
need to see right now and cut this in

00:06:32,719 --> 00:06:37,360
small chunks which means

00:06:35,199 --> 00:06:39,999
this great solution because we only

00:06:37,360 --> 00:06:44,080
download what is necessary and don't

00:06:39,999 --> 00:06:49,419
delay any rendering okay now finally

00:06:44,080 --> 00:06:52,719
tools so one very very popular tool to

00:06:49,419 --> 00:06:55,180
approach the CSS and J's thing is called

00:06:52,719 --> 00:06:59,590
sty components it is an NPM package for

00:06:55,180 --> 00:07:01,810
react and yeah in nine components you

00:06:59,590 --> 00:07:04,360
are now finally allowed to get rid of

00:07:01,810 --> 00:07:07,870
that dot CSS file you just write all

00:07:04,360 --> 00:07:10,419
your Styles in your JavaScript and then

00:07:07,870 --> 00:07:13,770
you can probably configure it with the

00:07:10,419 --> 00:07:16,449
use of bubble and here Jeremy screaming

00:07:13,770 --> 00:07:18,339
and if you don't want to use sty

00:07:16,449 --> 00:07:21,330
components there are other packages some

00:07:18,339 --> 00:07:24,759
would be mentioning worth mentioning is

00:07:21,330 --> 00:07:27,729
emotional and then you just add it to

00:07:24,759 --> 00:07:31,029
your package in your react and then you

00:07:27,729 --> 00:07:33,069
import style from stock components then

00:07:31,029 --> 00:07:34,960
you write your CSS and your JavaScript

00:07:33,069 --> 00:07:36,759
and then you can return it as a

00:07:34,960 --> 00:07:39,490
higher-order component and just use it

00:07:36,759 --> 00:07:42,490
as any other react up on it great

00:07:39,490 --> 00:07:45,789
another approach is a different kind

00:07:42,490 --> 00:07:48,370
where you let your build process work

00:07:45,789 --> 00:07:51,430
for you and for that there are bungalo -

00:07:48,370 --> 00:07:55,449
it's like web pack so this is a bundle

00:07:51,430 --> 00:07:57,939
for node and this works like that that

00:07:55,449 --> 00:07:59,979
it's collecting all your assets like

00:07:57,939 --> 00:08:02,319
your CSS combines it with your

00:07:59,979 --> 00:08:05,560
JavaScript and then splits it into small

00:08:02,319 --> 00:08:07,919
chunks so exactly what we want and then

00:08:05,560 --> 00:08:11,409
of course it has a huge configuration

00:08:07,919 --> 00:08:13,629
possibility yada yada and if you don't

00:08:11,409 --> 00:08:16,620
want to use webpack there's a popular

00:08:13,629 --> 00:08:19,509
alternative which is called parcel and

00:08:16,620 --> 00:08:22,509
so as I said you just can import a

00:08:19,509 --> 00:08:25,870
normal vanilla CSS file or a CSS file if

00:08:22,509 --> 00:08:30,029
you want and then configure in the

00:08:25,870 --> 00:08:33,639
bubble convict as CSS our CSS loader

00:08:30,029 --> 00:08:36,789
great okay so as I said we're doing

00:08:33,639 --> 00:08:39,099
fact-checking here this is science so

00:08:36,789 --> 00:08:41,019
what are we going to look into so first

00:08:39,099 --> 00:08:43,029
of all we want to solve our render

00:08:41,019 --> 00:08:47,150
blocking problems so we want to go fast

00:08:43,029 --> 00:08:49,460
and then another very famous problem

00:08:47,150 --> 00:08:56,120
we heard from Mike is scoping and naming

00:08:49,460 --> 00:08:58,940
and um has to be heard from earlier we

00:08:56,120 --> 00:09:02,750
also are super fancy about stage so

00:08:58,940 --> 00:09:05,900
let's you state question number one now

00:09:02,750 --> 00:09:08,380
have you fast yet I said we're going to

00:09:05,900 --> 00:09:11,780
experiment but we just my cat call and

00:09:08,380 --> 00:09:13,250
for Karl I built a website which I'm

00:09:11,780 --> 00:09:15,740
going to use to experiment

00:09:13,250 --> 00:09:18,260
it's called Park Club and it pops up you

00:09:15,740 --> 00:09:20,800
can upload a picture wait something

00:09:18,260 --> 00:09:23,120
about you and other cats can comment and

00:09:20,800 --> 00:09:26,210
if you want to also play along with it

00:09:23,120 --> 00:09:29,060
after this talk and here's to get up to

00:09:26,210 --> 00:09:32,420
it and so does my experiment it's just a

00:09:29,060 --> 00:09:35,450
very tiny react application and I have

00:09:32,420 --> 00:09:37,700
set it up in three variations one is

00:09:35,450 --> 00:09:41,030
with vanilla CSS this is going to be my

00:09:37,700 --> 00:09:43,820
control group and so there I just have

00:09:41,030 --> 00:09:46,870
written one CSS file and this one CSS

00:09:43,820 --> 00:09:50,540
file I included in the index dot HTML

00:09:46,870 --> 00:09:53,000
the other one version is the one with

00:09:50,540 --> 00:09:55,700
backpack where I have also set up a CSS

00:09:53,000 --> 00:09:59,450
loader and then of course the third

00:09:55,700 --> 00:10:01,760
variation is the components and then I

00:09:59,450 --> 00:10:06,290
have used the performance tool on the

00:10:01,760 --> 00:10:10,880
Chrome browser and as you can see in the

00:10:06,290 --> 00:10:13,190
frame part of the performance tool we

00:10:10,880 --> 00:10:15,770
can see that on the mark of 250

00:10:13,190 --> 00:10:17,720
milliseconds we have our first

00:10:15,770 --> 00:10:20,180
meaningful render so the thing I said

00:10:17,720 --> 00:10:22,550
earlier that we have a blank page before

00:10:20,180 --> 00:10:24,590
we actually see it is true and it takes

00:10:22,550 --> 00:10:27,680
around 500 milliseconds for our tiny

00:10:24,590 --> 00:10:29,360
tests to fully be loaded and in a

00:10:27,680 --> 00:10:31,420
summary part of the performance so you

00:10:29,360 --> 00:10:34,550
can see how many time we spend on

00:10:31,420 --> 00:10:38,540
rendering loading and scripting and

00:10:34,550 --> 00:10:41,930
painting but I focused mostly on loading

00:10:38,540 --> 00:10:44,870
and scripting because so loading is

00:10:41,930 --> 00:10:47,320
influenced by the file of file size and

00:10:44,870 --> 00:10:49,310
of course by the connection of the user

00:10:47,320 --> 00:10:51,280
because nobody wants to travel the

00:10:49,310 --> 00:10:54,480
deutsche bahn and surf

00:10:51,280 --> 00:10:56,770
so and then scripting time which is

00:10:54,480 --> 00:10:59,770
influenced by the complexity of our

00:10:56,770 --> 00:11:02,550
script and of course again the file size

00:10:59,770 --> 00:11:05,710
which goes along with the complexity and

00:11:02,550 --> 00:11:08,230
then it is also dependent on the user's

00:11:05,710 --> 00:11:12,160
device so if someone has a very old

00:11:08,230 --> 00:11:14,710
cranky phone this will also be heavily

00:11:12,160 --> 00:11:16,930
influencing our scripting time and so I

00:11:14,710 --> 00:11:20,530
did just test several times and

00:11:16,930 --> 00:11:24,310
calculated an average and so we can see

00:11:20,530 --> 00:11:28,030
data for the vanilla CSS we have around

00:11:24,310 --> 00:11:31,270
60 milliseconds floating around 100

00:11:28,030 --> 00:11:33,160
milliseconds of scripting and to prove

00:11:31,270 --> 00:11:35,890
my other argument that the bigger the

00:11:33,160 --> 00:11:39,930
file the more loading time we have I

00:11:35,890 --> 00:11:42,640
just added for fun bootstrap CSS to it I

00:11:39,930 --> 00:11:45,070
didn't even use any of the bootstrap I

00:11:42,640 --> 00:11:48,280
just included it also in the HTML file

00:11:45,070 --> 00:11:51,190
and when I had done that the loading

00:11:48,280 --> 00:11:54,010
time increased already significantly as

00:11:51,190 --> 00:11:57,010
I set aside average numbers I calculated

00:11:54,010 --> 00:11:59,410
over I don't know how many times so then

00:11:57,010 --> 00:12:02,050
the next approach was the web pack one

00:11:59,410 --> 00:12:04,240
where we decreased again our loading

00:12:02,050 --> 00:12:06,790
time because even though the bootstrap

00:12:04,240 --> 00:12:10,600
was still there it wasn't used so it's

00:12:06,790 --> 00:12:13,660
not downloaded and also understand

00:12:10,600 --> 00:12:16,420
component side we had an even more

00:12:13,660 --> 00:12:19,060
decrease of the loading time but if you

00:12:16,420 --> 00:12:21,430
look close there is a huge and

00:12:19,060 --> 00:12:23,710
significant increase on the scripting

00:12:21,430 --> 00:12:25,990
time and you might have heard this

00:12:23,710 --> 00:12:30,760
already the people say the CSS and J's

00:12:25,990 --> 00:12:34,330
is bad on your performance and so we

00:12:30,760 --> 00:12:38,770
asked ourselves why is that so if you

00:12:34,330 --> 00:12:41,320
now look in the virtual DOM and denotes

00:12:38,770 --> 00:12:44,080
that the visual Thomas rendering so as I

00:12:41,320 --> 00:12:47,290
said I have the same set up for all of

00:12:44,080 --> 00:12:49,330
my variations and on the component side

00:12:47,290 --> 00:12:52,900
it's the same so this is the few of the

00:12:49,330 --> 00:12:55,600
components for the vanilla CSS and the

00:12:52,900 --> 00:12:58,120
web pack version so where we can see I

00:12:55,600 --> 00:12:59,950
have a blog I have a button component

00:12:58,120 --> 00:13:01,930
and all those kind of things but when we

00:12:59,950 --> 00:13:02,750
have a look at the one from site

00:13:01,930 --> 00:13:04,370
components

00:13:02,750 --> 00:13:08,540
it doesn't even fit on the screen and

00:13:04,370 --> 00:13:12,470
now we can read that okay so

00:13:08,540 --> 00:13:14,450
implementation looks like this I have my

00:13:12,470 --> 00:13:16,940
style block container and then I

00:13:14,450 --> 00:13:19,160
returned this higher-order component

00:13:16,940 --> 00:13:23,090
which I have to do in order to be able

00:13:19,160 --> 00:13:26,360
to use the style components while on the

00:13:23,090 --> 00:13:29,320
epic variation I only can just add a

00:13:26,360 --> 00:13:32,930
class to it like I would normally do and

00:13:29,320 --> 00:13:35,210
this means that instead components for

00:13:32,930 --> 00:13:38,180
every normal container I have a

00:13:35,210 --> 00:13:42,080
higher-order container that is giving me

00:13:38,180 --> 00:13:45,520
my CSS and this is also context using so

00:13:42,080 --> 00:13:49,700
I have around four nodes instead of one

00:13:45,520 --> 00:13:52,790
when I have to backpack variation so

00:13:49,700 --> 00:13:54,800
what did we learn now so yeah if you

00:13:52,790 --> 00:13:59,660
have a very small website you still can

00:13:54,800 --> 00:14:03,470
use modular CSS but be warned so if the

00:13:59,660 --> 00:14:05,150
CSS and J's approach is very strong the

00:14:03,470 --> 00:14:07,670
bigger hue application is growing

00:14:05,150 --> 00:14:09,440
because it can not grow over a certain

00:14:07,670 --> 00:14:14,120
threshold by chunking your JavaScript

00:14:09,440 --> 00:14:16,070
and your CSS together but be aware there

00:14:14,120 --> 00:14:18,170
is definitely a scripting time increase

00:14:16,070 --> 00:14:21,560
so your performance is getting lower the

00:14:18,170 --> 00:14:25,520
more of the JavaScript you're using okay

00:14:21,560 --> 00:14:29,230
number two can we finally scope now okey

00:14:25,520 --> 00:14:31,190
the promise of style component is that

00:14:29,230 --> 00:14:33,980
we don't have to think about this

00:14:31,190 --> 00:14:36,320
anymore so it's a common problem you

00:14:33,980 --> 00:14:38,980
probably have everybody can not think a

00:14:36,320 --> 00:14:42,350
second about what color this button has

00:14:38,980 --> 00:14:45,710
it's plum of course even though the

00:14:42,350 --> 00:14:49,970
primary classes later in the file the

00:14:45,710 --> 00:14:52,790
class that is combining two class names

00:14:49,970 --> 00:14:55,850
is stronger and this is why we very

00:14:52,790 --> 00:14:58,550
often end up in a complex thing like

00:14:55,850 --> 00:15:01,310
this we just add more classes to a

00:14:58,550 --> 00:15:03,770
component in order to give it finally

00:15:01,310 --> 00:15:06,710
the style we want it and this is bad

00:15:03,770 --> 00:15:09,589
nobody can remember any of these classes

00:15:06,710 --> 00:15:12,140
later and also just brings you in a spot

00:15:09,589 --> 00:15:12,560
where you don't feel safe to delete any

00:15:12,140 --> 00:15:15,440
of

00:15:12,560 --> 00:15:17,980
CSS and this is how you end up in a CSS

00:15:15,440 --> 00:15:20,930
file that's one megabyte big

00:15:17,980 --> 00:15:23,570
okay so sty components what can you do

00:15:20,930 --> 00:15:26,210
for us as I said we have this component

00:15:23,570 --> 00:15:29,750
with style and the higher-order

00:15:26,210 --> 00:15:32,750
component and when we render this it

00:15:29,750 --> 00:15:35,000
generates a class for us and the package

00:15:32,750 --> 00:15:38,060
itself promises us that this is more or

00:15:35,000 --> 00:15:41,029
less an ID so it's unique and it will

00:15:38,060 --> 00:15:45,620
only be used one time on the same

00:15:41,029 --> 00:15:48,410
component and it also uses this giberish

00:15:45,620 --> 00:15:51,170
class name to add our Styles here so

00:15:48,410 --> 00:15:53,990
we're sure this no leaking it is always

00:15:51,170 --> 00:15:56,510
one strong selector awesome

00:15:53,990 --> 00:15:58,930
six months later someone comes in and

00:15:56,510 --> 00:16:01,790
says oh we have a park on that component

00:15:58,930 --> 00:16:05,240
so you look in your development tools

00:16:01,790 --> 00:16:07,040
and the questions start evolving like

00:16:05,240 --> 00:16:11,210
where the heck is that code from income

00:16:07,040 --> 00:16:14,150
coming from and what do these classes

00:16:11,210 --> 00:16:16,670
mean I mean why is it purple is it meant

00:16:14,150 --> 00:16:19,930
to be like the main action is it only

00:16:16,670 --> 00:16:28,460
for this page I have no clue and why

00:16:19,930 --> 00:16:31,400
always so I did go to github and looked

00:16:28,460 --> 00:16:33,800
at the issues but if I did something

00:16:31,400 --> 00:16:37,280
wrong and one of the contributors

00:16:33,800 --> 00:16:40,370
answered and said like oh this is done

00:16:37,280 --> 00:16:42,890
by intent we want to have two classes

00:16:40,370 --> 00:16:46,040
with only one is styled so one of them

00:16:42,890 --> 00:16:48,230
is used for identifying this in our site

00:16:46,040 --> 00:16:49,910
component context and I'm like yeah

00:16:48,230 --> 00:16:52,220
great that you can identify your

00:16:49,910 --> 00:16:55,280
component and I can so please how can I

00:16:52,220 --> 00:16:56,230
do it oh yeah I said Bubble Bobble for

00:16:55,280 --> 00:17:00,920
the rescue yes

00:16:56,230 --> 00:17:04,850
it's Jeremy already crying and so we add

00:17:00,920 --> 00:17:09,079
bubble to our system it's another NPM

00:17:04,850 --> 00:17:12,530
package and then we top-level did we

00:17:09,079 --> 00:17:14,150
have this plug-in and if you don't want

00:17:12,530 --> 00:17:17,179
to configure bubble or ourselves because

00:17:14,150 --> 00:17:19,610
we are lazy and use create react app or

00:17:17,179 --> 00:17:23,120
we don't have access to our context we

00:17:19,610 --> 00:17:24,530
can also use bubble macros and import

00:17:23,120 --> 00:17:28,580
then the macro instead

00:17:24,530 --> 00:17:31,040
of the actual site component and then

00:17:28,580 --> 00:17:32,630
finally we have a meaningful readable

00:17:31,040 --> 00:17:35,420
name on this thing that doesn't change

00:17:32,630 --> 00:17:42,070
every time we load the freaking page so

00:17:35,420 --> 00:17:45,590
yes okay but beware our apocalypse

00:17:42,070 --> 00:17:49,160
because you once started very meaningful

00:17:45,590 --> 00:17:51,560
by creating one component named wrapper

00:17:49,160 --> 00:17:53,720
and then you start to add something

00:17:51,560 --> 00:17:56,360
general to it to it because it's your

00:17:53,720 --> 00:17:58,780
layout things so you add some more CSS

00:17:56,360 --> 00:18:00,980
and call it web component and then

00:17:58,780 --> 00:18:04,190
somewhere in a block container is

00:18:00,980 --> 00:18:08,810
somebody named it again wrapper and edit

00:18:04,190 --> 00:18:13,880
more style to it and yeah so I have

00:18:08,810 --> 00:18:16,520
again this long class names that nobody

00:18:13,880 --> 00:18:19,130
can understand and read and this is to

00:18:16,520 --> 00:18:21,170
see this that goes with it but don't

00:18:19,130 --> 00:18:23,000
think you will find any of the CSS in

00:18:21,170 --> 00:18:24,950
any of the classes you have written on

00:18:23,000 --> 00:18:27,620
there because for example I can assure

00:18:24,950 --> 00:18:29,630
you that border is not living in la

00:18:27,620 --> 00:18:33,680
crapper I don't know where it is coming

00:18:29,630 --> 00:18:35,780
from okay web pack so what can you do

00:18:33,680 --> 00:18:38,510
for us nothing because web pack is a

00:18:35,780 --> 00:18:43,310
bundler and has nothing to do with how

00:18:38,510 --> 00:18:45,410
we architect our power system but when

00:18:43,310 --> 00:18:47,660
you're all listen to Mike we have some

00:18:45,410 --> 00:18:49,490
tools we can use because we can use

00:18:47,660 --> 00:18:52,370
naming conventions like BEM

00:18:49,490 --> 00:18:56,120
so we can make a card and take hard

00:18:52,370 --> 00:18:59,080
image and have modifiers and we also can

00:18:56,120 --> 00:19:03,200
use design patterns like atomic design

00:18:59,080 --> 00:19:05,810
where we have small big and large things

00:19:03,200 --> 00:19:09,980
and if you are combine this we maybe end

00:19:05,810 --> 00:19:15,350
up with a design system so architecture

00:19:09,980 --> 00:19:17,690
can help us here and so then we maybe

00:19:15,350 --> 00:19:20,000
have class name which we have written

00:19:17,690 --> 00:19:22,160
ourselves which is then like something

00:19:20,000 --> 00:19:23,960
like comment from text field and if you

00:19:22,160 --> 00:19:26,750
compare this to this like components

00:19:23,960 --> 00:19:28,820
once it's not even that far away so sky

00:19:26,750 --> 00:19:31,820
component also uses naming convention

00:19:28,820 --> 00:19:33,979
and still uses your names

00:19:31,820 --> 00:19:36,919
and then I hear somebody screaming

00:19:33,979 --> 00:19:38,960
naming his heart I don't know what I

00:19:36,919 --> 00:19:42,289
should name the things my designer comes

00:19:38,960 --> 00:19:47,149
up with after a long weekend on the pub

00:19:42,289 --> 00:19:49,580
and yeah I have experienced the same so

00:19:47,149 --> 00:19:51,440
sometimes my designer comes up and shows

00:19:49,580 --> 00:19:53,749
me something and I don't know what I

00:19:51,440 --> 00:19:55,850
should frickin name it and then some

00:19:53,749 --> 00:20:00,159
people just call it shining our fancy

00:19:55,850 --> 00:20:04,309
and then it's the fancy rapper but I

00:20:00,159 --> 00:20:07,340
have an utter solution yeah if you can't

00:20:04,309 --> 00:20:09,739
name it you don't need it seriously

00:20:07,340 --> 00:20:11,779
because when my designer comes up with

00:20:09,739 --> 00:20:14,149
something and I only want to call it

00:20:11,779 --> 00:20:17,840
fancy rapper I go back to my designer

00:20:14,149 --> 00:20:22,489
and ask them some questions like what

00:20:17,840 --> 00:20:24,289
problem of our user is this solving is

00:20:22,489 --> 00:20:27,769
it maybe a variation of something we

00:20:24,289 --> 00:20:30,769
already have or is it a combination of

00:20:27,769 --> 00:20:32,869
some things we already have and also

00:20:30,769 --> 00:20:34,960
what is it semantic meaning is it a

00:20:32,869 --> 00:20:39,349
primary thing is it a call to action

00:20:34,960 --> 00:20:41,720
what are we doing and if you two people

00:20:39,349 --> 00:20:44,059
or more still not able to answer these

00:20:41,720 --> 00:20:46,820
questions and now still not able to find

00:20:44,059 --> 00:20:49,220
a name for the thing then please just

00:20:46,820 --> 00:20:54,440
get rid of it I promise you you will not

00:20:49,220 --> 00:20:57,590
miss it learning's so the generated

00:20:54,440 --> 00:20:59,629
names as helpful they might be they also

00:20:57,590 --> 00:21:02,929
do a lot of harm especially when you

00:20:59,629 --> 00:21:05,359
want to maintain your stuff please

00:21:02,929 --> 00:21:09,229
collaborate with your designers makes

00:21:05,359 --> 00:21:11,450
things so much easier and yeah pattern

00:21:09,229 --> 00:21:13,429
and conventions they're always helpful

00:21:11,450 --> 00:21:15,979
no matter if you used our components or

00:21:13,429 --> 00:21:20,779
not it will help you keep the oversight

00:21:15,979 --> 00:21:22,970
off your coat okay number three props

00:21:20,779 --> 00:21:27,080
state I want to have it

00:21:22,970 --> 00:21:29,809
I live in JavaScript and I live in a

00:21:27,080 --> 00:21:31,879
stateful environment so I have a couple

00:21:29,809 --> 00:21:34,369
of buttons and all of them are able to

00:21:31,879 --> 00:21:36,019
get inactive and so when they're

00:21:34,369 --> 00:21:40,700
inactive they of course have to reflect

00:21:36,019 --> 00:21:43,190
the state to my user wire visually okay

00:21:40,700 --> 00:21:44,340
the classic approach as we already have

00:21:43,190 --> 00:21:46,230
seen is just adding

00:21:44,340 --> 00:21:49,100
a couple of classes to it nobody wants

00:21:46,230 --> 00:21:52,110
to remember that and it's that we want

00:21:49,100 --> 00:21:54,630
yeah having variation on it and then

00:21:52,110 --> 00:21:56,580
using the state so this is where we want

00:21:54,630 --> 00:22:00,120
to go and sty components is here to help

00:21:56,580 --> 00:22:03,510
us because we are in JavaScript so we

00:22:00,120 --> 00:22:06,690
can write JavaScript in RS CSS which is

00:22:03,510 --> 00:22:12,870
in JavaScript so we can use error

00:22:06,690 --> 00:22:16,980
functions and if and more ifs Morris

00:22:12,870 --> 00:22:20,669
okay so I think now Mike is crying and I

00:22:16,980 --> 00:22:24,690
am crying so but maybe maybe this is all

00:22:20,669 --> 00:22:27,870
worth it let's have a look so oh yes we

00:22:24,690 --> 00:22:29,190
have one class name yes yes yes and I

00:22:27,870 --> 00:22:32,640
don't need to remember this class and

00:22:29,190 --> 00:22:36,330
great because there's a so generate it

00:22:32,640 --> 00:22:38,789
and I can see the props but somehow I

00:22:36,330 --> 00:22:42,240
don't have a connection between the used

00:22:38,789 --> 00:22:43,950
attribute and the props so yes and then

00:22:42,240 --> 00:22:45,630
my designer comes in and says oh yeah I

00:22:43,950 --> 00:22:47,880
have a new variation we now have an

00:22:45,630 --> 00:22:54,840
alternative button and I'm getting a

00:22:47,880 --> 00:22:56,399
headache web pack so web pack now here

00:22:54,840 --> 00:22:58,020
same problem as before where peck

00:22:56,399 --> 00:23:01,169
doesn't do anything for you in this case

00:22:58,020 --> 00:23:05,250
you just can go back to our architecture

00:23:01,169 --> 00:23:09,690
and so we just try to write some BEM

00:23:05,250 --> 00:23:11,600
classes with modifiers and then we are

00:23:09,690 --> 00:23:15,149
now writing our own higher-order

00:23:11,600 --> 00:23:17,940
function component which is now our

00:23:15,149 --> 00:23:19,890
button and I'm using a very small tool I

00:23:17,940 --> 00:23:22,440
found it very helpful which is called

00:23:19,890 --> 00:23:24,750
class names and this is basically just

00:23:22,440 --> 00:23:28,080
doing some string operations for me

00:23:24,750 --> 00:23:31,500
because I'm lazy and so I have no my

00:23:28,080 --> 00:23:35,190
props the same as before variant and the

00:23:31,500 --> 00:23:38,669
inactive state and then I use those

00:23:35,190 --> 00:23:40,770
class names package where I'm like

00:23:38,669 --> 00:23:44,640
combining my classes based on those

00:23:40,770 --> 00:23:46,649
props and the state and then I'm just

00:23:44,640 --> 00:23:49,110
adding these classes to this component

00:23:46,649 --> 00:23:51,840
button component and then I just can't

00:23:49,110 --> 00:23:54,690
return it and also there's this very

00:23:51,840 --> 00:23:56,559
helpful thing called prop types and

00:23:54,690 --> 00:24:00,159
there I can define like

00:23:56,559 --> 00:24:02,499
example what variations are possible so

00:24:00,159 --> 00:24:04,929
I can expose to everybody that is using

00:24:02,499 --> 00:24:08,409
this component what props are there and

00:24:04,929 --> 00:24:11,980
what they can use and also I can set

00:24:08,409 --> 00:24:13,659
default props which is very helpful if I

00:24:11,980 --> 00:24:16,840
just want to use one button without

00:24:13,659 --> 00:24:18,549
thinking too much and it is used like

00:24:16,840 --> 00:24:20,049
this and that looks like the thing from

00:24:18,549 --> 00:24:23,110
the beginning we wanted it looks the

00:24:20,049 --> 00:24:24,759
same and rendered it looks like the

00:24:23,110 --> 00:24:26,769
thing we didn't want but we don't care

00:24:24,759 --> 00:24:30,279
because we didn't write this ourselves

00:24:26,769 --> 00:24:33,309
and this is this looks now as we know it

00:24:30,279 --> 00:24:35,889
so we have our modifier clusters and we

00:24:33,309 --> 00:24:39,519
can clearly see what attribute is

00:24:35,889 --> 00:24:43,899
triggered by which modifier so thank you

00:24:39,519 --> 00:24:47,860
architecture you helped us yeah so the

00:24:43,899 --> 00:24:51,970
learnings here is that there is a hard

00:24:47,860 --> 00:24:54,009
way to connect the attributes from CSS

00:24:51,970 --> 00:24:57,070
to the attributes you put on our

00:24:54,009 --> 00:25:00,730
components so the development tools are

00:24:57,070 --> 00:25:04,809
not there yet to support us in this way

00:25:00,730 --> 00:25:07,749
so maybe this will change hopefully then

00:25:04,809 --> 00:25:11,289
one thing that is dangerous in most

00:25:07,749 --> 00:25:13,929
cases which is mixing props that are

00:25:11,289 --> 00:25:16,450
only there for styling with props that

00:25:13,929 --> 00:25:17,740
are there for functions because

00:25:16,450 --> 00:25:19,629
sometimes when you didn't change

00:25:17,740 --> 00:25:22,570
something you are not sure entirely

00:25:19,629 --> 00:25:24,909
which is triggering a style and which is

00:25:22,570 --> 00:25:27,600
triggering a function so this is a

00:25:24,909 --> 00:25:32,259
warning I want to just announce for all

00:25:27,600 --> 00:25:34,899
solutions then yes again architectural

00:25:32,259 --> 00:25:36,730
pattern conventions even though we hope

00:25:34,899 --> 00:25:38,429
the tools are going to solve this for us

00:25:36,730 --> 00:25:41,740
are always helpful

00:25:38,429 --> 00:25:44,289
let's summarize our three effects we

00:25:41,740 --> 00:25:47,200
wanted to check so

00:25:44,289 --> 00:25:48,610
sty components fast loading but it

00:25:47,200 --> 00:25:50,619
definitely comes with a cost of

00:25:48,610 --> 00:25:53,470
performance so you have to watch out

00:25:50,619 --> 00:25:57,179
what you're doing there web pack yeah

00:25:53,470 --> 00:26:00,999
sure a little bit but it's JavaScript so

00:25:57,179 --> 00:26:03,399
yeah naming I'm scoping it has good

00:26:00,999 --> 00:26:06,460
approach but I'm not too sure about it

00:26:03,399 --> 00:26:08,679
so I definitely would not go without

00:26:06,460 --> 00:26:11,159
conventions namings architecture as

00:26:08,679 --> 00:26:11,159
these

00:26:11,350 --> 00:26:17,170
yes and I can use the same architecture

00:26:13,860 --> 00:26:20,860
tools for going with whatever other

00:26:17,170 --> 00:26:25,060
solution I want the same is for the

00:26:20,860 --> 00:26:27,100
props and a styling part and I can use

00:26:25,060 --> 00:26:29,890
some little tools like the class names

00:26:27,100 --> 00:26:33,760
package to help me solving my

00:26:29,890 --> 00:26:37,690
architectural problems to be honest the

00:26:33,760 --> 00:26:39,580
prop thingy it really scares me a lot so

00:26:37,690 --> 00:26:44,140
I would not use it without any

00:26:39,580 --> 00:26:47,280
conventions of patterns so should we use

00:26:44,140 --> 00:26:50,110
tools of our conventions and patterns I

00:26:47,280 --> 00:26:53,470
say it's not a nor question we can have

00:26:50,110 --> 00:26:56,890
both because tools should always support

00:26:53,470 --> 00:27:00,040
to retain our patterns and conventions

00:26:56,890 --> 00:27:02,740
so tools should not be necessarily there

00:27:00,040 --> 00:27:05,290
to solve all your problems but to help

00:27:02,740 --> 00:27:07,570
you solving your problems to make it

00:27:05,290 --> 00:27:09,930
easy for you to follow the conventions

00:27:07,570 --> 00:27:13,720
and parents no matter if you want to

00:27:09,930 --> 00:27:15,310
choose now the architecture Mike and I

00:27:13,720 --> 00:27:16,900
have shown to you or if you want to come

00:27:15,310 --> 00:27:19,690
up with your own solutions in your own

00:27:16,900 --> 00:27:21,550
team but as long as we have some and you

00:27:19,690 --> 00:27:25,000
have tools that support you you are

00:27:21,550 --> 00:27:28,390
going to be great so thank you all for

00:27:25,000 --> 00:27:30,370
listening and yeah here's my Twitter

00:27:28,390 --> 00:27:33,850
handle maybe we get over 500 at some

00:27:30,370 --> 00:27:37,510
point I don't know and if you want to

00:27:33,850 --> 00:27:40,330
check out all the things I have done you

00:27:37,510 --> 00:27:43,390
can go to the github repository of our

00:27:40,330 --> 00:27:47,370
little Park lab experiment and also you

00:27:43,390 --> 00:27:47,370
can find the slides there

00:27:53,700 --> 00:27:57,270

YouTube URL: https://www.youtube.com/watch?v=L4vIAGPPuDQ


