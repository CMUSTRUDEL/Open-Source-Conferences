Title: A privacy first period tracker? Is it even possible? by Benedicte Raae | JSConf Budapest 2019
Publication date: 2019-10-16
Playlist: JSConf Budapest 2019
Description: 
	https://2019.jsconfbp.com/speakers/benedicte_raae

Do I want to track my cycles? Yes. Do I want the tracker to push my data to a third party? Hell NO! Do I want the data lying around unencrypted in a database somewhere? Not really. Do I want backup and access from multiple devices? Kinda.. What would I need to learn and is it even possible? Come along on my journey, as a run of the mill web developer, to create a secure and private web-based period tracker.

Benedicte Raae is a independent contractor, working as a full stack developer. With a developer mom she had free access to Internet from an early age, but it was actually her Norwegian teacher that introduced her to HTML in 1997. Since then, she has created countless apps, services and sites. Both for fun and profit.
Captions: 
	00:00:00,440 --> 00:00:07,620
[Applause]

00:00:04,160 --> 00:00:09,469
so hello as you said my name is

00:00:07,620 --> 00:00:11,639
Benedicta and I'm a full-stack

00:00:09,469 --> 00:00:15,780
JavaScript developer from Oslo Norway

00:00:11,639 --> 00:00:18,240
I'm so still Europe and today I'm gonna

00:00:15,780 --> 00:00:20,520
share with you what I learned so far

00:00:18,240 --> 00:00:22,680
about encryption and that more

00:00:20,520 --> 00:00:25,170
importantly key management when it comes

00:00:22,680 --> 00:00:29,390
to encryption on my quest to figuring

00:00:25,170 --> 00:00:32,520
out how to make a privacy first period

00:00:29,390 --> 00:00:34,860
period tracker or menstrual cycle cycle

00:00:32,520 --> 00:00:37,829
tracker it depends on the but where do

00:00:34,860 --> 00:00:40,649
you use and I hope I can help lower the

00:00:37,829 --> 00:00:42,420
bar when it comes to encryption so that

00:00:40,649 --> 00:00:45,090
maybe you also will use encryption in

00:00:42,420 --> 00:00:50,190
your next side project and maybe later

00:00:45,090 --> 00:00:52,620
at work but first we'll have some story

00:00:50,190 --> 00:00:55,789
time for years and years I've been able

00:00:52,620 --> 00:00:58,890
to keep consumer Benedicta away from

00:00:55,789 --> 00:01:01,199
developer Benedicta consumer Benedicta

00:00:58,890 --> 00:01:03,239
has been using apps and services like

00:01:01,199 --> 00:01:05,850
most regular users you know I have

00:01:03,239 --> 00:01:09,090
nothing to hide and if I did like I just

00:01:05,850 --> 00:01:14,939
don't have the time but then to care

00:01:09,090 --> 00:01:17,280
about it but then this winter the first

00:01:14,939 --> 00:01:19,229
kind of major leak that health apps and

00:01:17,280 --> 00:01:20,729
especially menstrual cycle trackers were

00:01:19,229 --> 00:01:24,180
leaking data to Facebook through

00:01:20,729 --> 00:01:25,799
facebook analytics and later just a

00:01:24,180 --> 00:01:28,920
couple of weeks ago a new report came

00:01:25,799 --> 00:01:31,740
out where their attention sharing that

00:01:28,920 --> 00:01:33,390
data with other people some companies

00:01:31,740 --> 00:01:36,030
selling it and some using it for reach

00:01:33,390 --> 00:01:37,680
research which is a good cause but it's

00:01:36,030 --> 00:01:40,829
still something we need to know about as

00:01:37,680 --> 00:01:43,049
a consumer when we make choices so

00:01:40,829 --> 00:01:44,610
Benedicta a developer abandoned exciting

00:01:43,049 --> 00:01:51,540
consumer benedict's i had to have a

00:01:44,610 --> 00:01:53,610
little talk because right after this

00:01:51,540 --> 00:01:56,219
leak came out my period tracker clue

00:01:53,610 --> 00:01:59,159
which is one of the nicer ones sent me

00:01:56,219 --> 00:02:01,320
this email and it says that only a few

00:01:59,159 --> 00:02:03,930
people have access to the tools we use

00:02:01,320 --> 00:02:05,610
to look into the databases and that

00:02:03,930 --> 00:02:07,439
that's the point where consumer

00:02:05,610 --> 00:02:09,660
Benedicta realized you know what

00:02:07,439 --> 00:02:12,150
developer Bendix has always known and

00:02:09,660 --> 00:02:13,050
that's this data is just there in plain

00:02:12,150 --> 00:02:15,270
text I mean it's

00:02:13,050 --> 00:02:18,240
in the database and somebody needs to

00:02:15,270 --> 00:02:19,980
have access to that database and it

00:02:18,240 --> 00:02:22,560
could be any of you it could be me could

00:02:19,980 --> 00:02:24,060
my in my friend from University and with

00:02:22,560 --> 00:02:27,270
some types of data that could just be

00:02:24,060 --> 00:02:28,920
you know very awkward conversations or

00:02:27,270 --> 00:02:31,410
not like trying to pretend that I

00:02:28,920 --> 00:02:33,150
haven't seen the data so for me kind of

00:02:31,410 --> 00:02:35,400
hit home more personally when I started

00:02:33,150 --> 00:02:41,040
thinking about that scenario then kind

00:02:35,400 --> 00:02:43,560
of like the big data scenario so in the

00:02:41,040 --> 00:02:45,200
back of my mind I've always felt like

00:02:43,560 --> 00:02:47,760
these apps have been very invasive

00:02:45,200 --> 00:02:50,160
they're very detailed they don't care

00:02:47,760 --> 00:02:52,410
about only when my period is it's like

00:02:50,160 --> 00:02:55,020
how much and for how long and like all

00:02:52,410 --> 00:02:56,820
these kinds of weird questions and my

00:02:55,020 --> 00:02:59,130
friend who's been single for months

00:02:56,820 --> 00:03:01,140
she's tired of getting the question

00:02:59,130 --> 00:03:05,280
every day is like have you had sex like

00:03:01,140 --> 00:03:06,570
you know yet and like there's been like

00:03:05,280 --> 00:03:09,030
this thing in the back of my mind is

00:03:06,570 --> 00:03:10,440
like why are they so invasive and I've

00:03:09,030 --> 00:03:12,810
realized of course it's because they're

00:03:10,440 --> 00:03:14,700
going to use this data for something

00:03:12,810 --> 00:03:17,910
else so they need a certain kind of

00:03:14,700 --> 00:03:19,110
detailed level so my idea of making so

00:03:17,910 --> 00:03:21,930
in the back of my mind I've always

00:03:19,110 --> 00:03:25,530
wanted to make a less invasive and less

00:03:21,930 --> 00:03:28,020
detailed app that would fit fit my cycle

00:03:25,530 --> 00:03:30,930
better and I thought if I'm ever gonna

00:03:28,020 --> 00:03:33,660
make this I need to learn how to shield

00:03:30,930 --> 00:03:36,780
myself from my users data I want to be

00:03:33,660 --> 00:03:40,110
one of those can't be evil apps I don't

00:03:36,780 --> 00:03:42,300
want to be the one don't be evil so I

00:03:40,110 --> 00:03:44,190
sat down and I did what any sane

00:03:42,300 --> 00:03:46,500
developer would do is that I made the

00:03:44,190 --> 00:03:49,230
proposal that got me on the stage today

00:03:46,500 --> 00:03:51,030
saying stating I'm gonna learn what I

00:03:49,230 --> 00:03:57,090
need to learn to make a privacy first

00:03:51,030 --> 00:03:59,910
app so that's what I did and also while

00:03:57,090 --> 00:04:01,489
I was like any old the same developer do

00:03:59,910 --> 00:04:04,170
as well while I was procrastinating

00:04:01,489 --> 00:04:06,870
finishing these slides I actually took a

00:04:04,170 --> 00:04:08,880
stab at making the app so it's called

00:04:06,870 --> 00:04:11,010
pal and I launched it on product and

00:04:08,880 --> 00:04:14,130
it's a very minimal version and on the

00:04:11,010 --> 00:04:16,830
same day that new leak came out so you

00:04:14,130 --> 00:04:19,799
know could think that I actually had an

00:04:16,830 --> 00:04:22,260
agreement with these journalists because

00:04:19,799 --> 00:04:25,790
it was just hours after I released Palin

00:04:22,260 --> 00:04:27,230
on product hunt and this

00:04:25,790 --> 00:04:28,700
support and attention has been really

00:04:27,230 --> 00:04:30,650
it's blown my mind like people are

00:04:28,700 --> 00:04:32,810
really interested they really want such

00:04:30,650 --> 00:04:35,390
an app so I've decided to just keep

00:04:32,810 --> 00:04:38,420
focusing on actually making the app and

00:04:35,390 --> 00:04:40,400
we'll try to launch on March 8th 2020

00:04:38,420 --> 00:04:42,080
and for those who you don't know what

00:04:40,400 --> 00:04:45,740
that day is it's the International

00:04:42,080 --> 00:04:47,240
Women's Day so I'm happy to say it seems

00:04:45,740 --> 00:04:50,030
like privacy is becoming more mainstream

00:04:47,240 --> 00:04:52,700
and people are getting interested in

00:04:50,030 --> 00:04:55,340
knowing where their data is going and

00:04:52,700 --> 00:05:00,980
also maybe having a say in where it's

00:04:55,340 --> 00:05:04,580
going before I go into encryption I just

00:05:00,980 --> 00:05:05,360
need to thank Jeffrey Jeffrey from

00:05:04,580 --> 00:05:07,790
1password

00:05:05,360 --> 00:05:11,260
it was really hard trying to find

00:05:07,790 --> 00:05:13,640
information on this topic from a webapp

00:05:11,260 --> 00:05:16,460
perspective there's a lot of more

00:05:13,640 --> 00:05:20,150
theoretical knowledge but the only real

00:05:16,460 --> 00:05:24,320
real content I found on how the full

00:05:20,150 --> 00:05:29,060
flow of a web application goes it's it's

00:05:24,320 --> 00:05:30,200
this security white paper by Jeffrey who

00:05:29,060 --> 00:05:33,080
works at 1password

00:05:30,200 --> 00:05:35,180
which is a great app so if you want to

00:05:33,080 --> 00:05:37,490
look into it more after my talk which is

00:05:35,180 --> 00:05:42,470
very introductory you should try to read

00:05:37,490 --> 00:05:43,910
this white paper and I'm a noob I just

00:05:42,470 --> 00:05:47,510
learned this and I'm gonna try to

00:05:43,910 --> 00:05:49,280
explain how to use encryption algorithms

00:05:47,510 --> 00:05:52,220
I will not go into how they actually

00:05:49,280 --> 00:05:53,930
work and you will should not try to make

00:05:52,220 --> 00:05:56,810
your own encryption that is something

00:05:53,930 --> 00:05:58,220
that will take about 20 years to be able

00:05:56,810 --> 00:06:00,200
to do if you're gonna do it on the state

00:05:58,220 --> 00:06:01,820
secret level yeah you first need your

00:06:00,200 --> 00:06:03,170
PhD and then about 15 years of

00:06:01,820 --> 00:06:05,720
experience and then you're allowed to

00:06:03,170 --> 00:06:09,260
make a ssin so that's not for us

00:06:05,720 --> 00:06:11,240
mmm and I will not go through all the

00:06:09,260 --> 00:06:13,550
attack vectors I will look more into how

00:06:11,240 --> 00:06:19,370
would you actually do it because that's

00:06:13,550 --> 00:06:21,680
what I found lacking so I'm actually I

00:06:19,370 --> 00:06:24,110
have a master of computer science and I

00:06:21,680 --> 00:06:28,070
remember talks about in Christian but I

00:06:24,110 --> 00:06:30,770
feel like I know way way too new too

00:06:28,070 --> 00:06:33,110
little about it and I'm still as I said

00:06:30,770 --> 00:06:36,080
in all of the people making encryption

00:06:33,110 --> 00:06:39,169
algorithms but we're gonna go and look

00:06:36,080 --> 00:06:42,259
at how to use them and especially key

00:06:39,169 --> 00:06:43,909
management as I realized using algorithm

00:06:42,259 --> 00:06:46,039
using the encryption algorithms are

00:06:43,909 --> 00:06:49,550
fairly easy but what to do about all the

00:06:46,039 --> 00:06:53,120
keys we're gonna get into so this is a

00:06:49,550 --> 00:06:55,430
basic encryption algorithm or encryption

00:06:53,120 --> 00:06:57,139
flow you have your plaintext and you

00:06:55,430 --> 00:06:59,449
have a key and then you encrypt it and

00:06:57,139 --> 00:07:01,520
what comes out is called cipher or

00:06:59,449 --> 00:07:03,800
ciphertext and then to get your

00:07:01,520 --> 00:07:08,300
plaintext back your reverse t3 order

00:07:03,800 --> 00:07:10,610
Commission your decryption algorithm one

00:07:08,300 --> 00:07:12,560
of the things that I spent an

00:07:10,610 --> 00:07:14,900
embarrassing long amount of time to

00:07:12,560 --> 00:07:16,849
figure out this what is this key it's

00:07:14,900 --> 00:07:19,339
usually just drawn that's a key the same

00:07:16,849 --> 00:07:21,439
way I did and I was like this key it's

00:07:19,339 --> 00:07:23,389
you know this sort of magical thing but

00:07:21,439 --> 00:07:28,999
it turns out it's a very long sequence

00:07:23,389 --> 00:07:31,719
of characters and but you use different

00:07:28,999 --> 00:07:34,009
algorithms to make them for specific

00:07:31,719 --> 00:07:35,900
generate them for specific algorithms

00:07:34,009 --> 00:07:39,919
but basically they're just real long

00:07:35,900 --> 00:07:42,319
random strings of characters and it

00:07:39,919 --> 00:07:44,000
turns out that random long random

00:07:42,319 --> 00:07:46,099
strings of character is really important

00:07:44,000 --> 00:07:50,479
in encryption and so they even have a

00:07:46,099 --> 00:07:52,099
word for it called entropy and because

00:07:50,479 --> 00:07:54,979
if you have something that's easy to

00:07:52,099 --> 00:07:56,689
guess then the whole thing would fall

00:07:54,979 --> 00:07:59,839
apart then you would just guess the key

00:07:56,689 --> 00:08:04,520
or guess the password and encryption

00:07:59,839 --> 00:08:05,930
would fall apart and if you now you know

00:08:04,520 --> 00:08:09,409
very obvious crypt developers if you're

00:08:05,930 --> 00:08:12,349
thinking math.random right now then that

00:08:09,409 --> 00:08:14,689
is not a true random algorithm that's

00:08:12,349 --> 00:08:16,759
something called a pseudo-random they

00:08:14,689 --> 00:08:19,729
gives you pseudo random values but what

00:08:16,759 --> 00:08:25,099
we need is crypto cryptographically

00:08:19,729 --> 00:08:27,139
strong random values therefore showing a

00:08:25,099 --> 00:08:29,120
code example and we're going to look at

00:08:27,139 --> 00:08:31,069
the net analogy that's often used in the

00:08:29,120 --> 00:08:33,079
crypto world a way to think about

00:08:31,069 --> 00:08:34,789
encryption is how we secure our

00:08:33,079 --> 00:08:37,399
belongings by locking them in to our

00:08:34,789 --> 00:08:40,339
house only somebody with the correct key

00:08:37,399 --> 00:08:42,620
can unlock the door and get a hold of

00:08:40,339 --> 00:08:45,230
your belongings the big difference

00:08:42,620 --> 00:08:47,360
though is we look something inside well

00:08:45,230 --> 00:08:49,490
with the cripton we actually transform

00:08:47,360 --> 00:08:50,930
your belongings so the furniture would

00:08:49,490 --> 00:08:53,480
no longer be there it would be something

00:08:50,930 --> 00:08:56,899
different but we're still going to use

00:08:53,480 --> 00:08:59,089
this analogy because it's used a lot and

00:08:56,899 --> 00:09:01,430
it's easier than like transforming

00:08:59,089 --> 00:09:07,370
things into different as substance

00:09:01,430 --> 00:09:10,819
matter so luckily for us the browsers

00:09:07,370 --> 00:09:13,459
now come with dead crypto API embedded

00:09:10,819 --> 00:09:17,959
so we don't have to do any crypto stuff

00:09:13,459 --> 00:09:19,610
ourselves as we should not do and the

00:09:17,959 --> 00:09:22,040
first thing we need to do is make that

00:09:19,610 --> 00:09:25,069
key that we saw in our Krypton algorithm

00:09:22,040 --> 00:09:27,079
and before we can make the key we need

00:09:25,069 --> 00:09:28,819
to decide on what encryption algorithm

00:09:27,079 --> 00:09:31,250
to use and from what I've gathered this

00:09:28,819 --> 00:09:33,439
is the algorithm we want the advanced

00:09:31,250 --> 00:09:37,310
encryption standard with geleris counter

00:09:33,439 --> 00:09:39,890
mode so we start by generating a key for

00:09:37,310 --> 00:09:45,230
that algorithm and here we say that we

00:09:39,890 --> 00:09:47,779
want the length to be 256 256 but it

00:09:45,230 --> 00:09:49,760
could just as well be 128 and Jeff

00:09:47,779 --> 00:09:52,939
Jeffery from one password has a long

00:09:49,760 --> 00:09:54,860
blog post about it not really being that

00:09:52,939 --> 00:09:57,649
it's not that much more secure with the

00:09:54,860 --> 00:10:00,649
250 bit encryption as it's called as a

00:09:57,649 --> 00:10:04,490
128 bit encryption it's like going from

00:10:00,649 --> 00:10:06,829
infinity to infinity he says but but for

00:10:04,490 --> 00:10:10,880
the users they they liked the sound of

00:10:06,829 --> 00:10:13,459
256 over 128 it just sounds more secure

00:10:10,880 --> 00:10:16,130
it sounds better so I found that also in

00:10:13,459 --> 00:10:18,649
security there's a lot of usability

00:10:16,130 --> 00:10:21,050
issues and it's not only like the hard

00:10:18,649 --> 00:10:22,519
science that they might want you to

00:10:21,050 --> 00:10:28,790
believe in you read most of their

00:10:22,519 --> 00:10:30,680
literature so we have the key and now

00:10:28,790 --> 00:10:33,829
we're going to encrypt our little note

00:10:30,680 --> 00:10:35,480
and as some people might notice we're

00:10:33,829 --> 00:10:38,449
not allowed to work on strings we have

00:10:35,480 --> 00:10:40,040
to make buf buffers which I find quite

00:10:38,449 --> 00:10:43,579
annoying because that's not something I

00:10:40,040 --> 00:10:46,699
usually do in my day to day work so as

00:10:43,579 --> 00:10:50,860
we as we saw on the diagram we input the

00:10:46,699 --> 00:10:54,500
key and the note and out we get a cipher

00:10:50,860 --> 00:10:58,160
and but there's another thing here in

00:10:54,500 --> 00:11:03,160
addition it's called it's in a celeste

00:10:58,160 --> 00:11:07,210
installation in init vector because

00:11:03,160 --> 00:11:09,670
and to counter against something called

00:11:07,210 --> 00:11:12,070
cipher attacks that I don't totally

00:11:09,670 --> 00:11:15,280
understand we need a different random

00:11:12,070 --> 00:11:17,380
value as well but we could save that

00:11:15,280 --> 00:11:19,330
together with our ciphertext because it

00:11:17,380 --> 00:11:21,630
does not have to be secret so we and we

00:11:19,330 --> 00:11:27,820
generated here with that cryptographic

00:11:21,630 --> 00:11:30,580
safe random value generator so it has to

00:11:27,820 --> 00:11:32,650
be a unique for every piece of data you

00:11:30,580 --> 00:11:37,390
encrypt but it doesn't have but it

00:11:32,650 --> 00:11:39,640
doesn't have to be secret and to get our

00:11:37,390 --> 00:11:42,640
note back we decrypt decrypt using the

00:11:39,640 --> 00:11:44,920
same installation vector key vector the

00:11:42,640 --> 00:11:48,010
key and we have our cipher test text we

00:11:44,920 --> 00:11:52,600
get the buffer back and then we make it

00:11:48,010 --> 00:11:55,510
into our string again so that was basic

00:11:52,600 --> 00:11:57,550
encryption we generated the key the red

00:11:55,510 --> 00:12:01,900
key we encrypted our data and then we

00:11:57,550 --> 00:12:04,120
decrypted our data again so I was very

00:12:01,900 --> 00:12:07,330
pleased with myself when I got this far

00:12:04,120 --> 00:12:12,190
in my exploration but I quickly realized

00:12:07,330 --> 00:12:14,260
that there's a lot more more to it I was

00:12:12,190 --> 00:12:17,440
a lot closer to those two circles than

00:12:14,260 --> 00:12:19,360
the owl so I'm going to try not to walk

00:12:17,440 --> 00:12:22,240
you through how we generate keys and

00:12:19,360 --> 00:12:25,110
when we use what key to hopefully make

00:12:22,240 --> 00:12:28,980
you better equipped to read they've read

00:12:25,110 --> 00:12:28,980
content around encryption

00:12:28,990 --> 00:12:32,800
we're gonna start start by just assuming

00:12:31,270 --> 00:12:36,190
everything is in your client your mobile

00:12:32,800 --> 00:12:38,230
phone or your or your laptop and it's

00:12:36,190 --> 00:12:40,300
easy peasy we just save our ciphertext

00:12:38,230 --> 00:12:43,350
to the local storage but where do we

00:12:40,300 --> 00:12:46,000
keep the key so this is our first

00:12:43,350 --> 00:12:47,880
encounter with key management if we

00:12:46,000 --> 00:12:49,810
stored the key together with our

00:12:47,880 --> 00:12:52,810
ciphertext then you know there wouldn't

00:12:49,810 --> 00:12:56,860
have been much point in encrypting at

00:12:52,810 --> 00:13:00,100
all so let's go back to our house and in

00:12:56,860 --> 00:13:02,020
this scenario we're we're gonna look at

00:13:00,100 --> 00:13:03,730
a way to do this so it's a little bit of

00:13:02,020 --> 00:13:05,500
a stretching so we would probably not do

00:13:03,730 --> 00:13:07,870
this with houses in real life but just

00:13:05,500 --> 00:13:10,240
bear with me so in this scenario we're

00:13:07,870 --> 00:13:13,240
looking at where we'd actually just like

00:13:10,240 --> 00:13:15,330
hide the key next to the house some

00:13:13,240 --> 00:13:17,050
people would do that for convenience

00:13:15,330 --> 00:13:19,029
maybe it would be under

00:13:17,050 --> 00:13:20,830
the flowerpot on the veranda or like a

00:13:19,029 --> 00:13:23,110
secret spot under the stairs something

00:13:20,830 --> 00:13:24,790
like that it's convenient but it's not

00:13:23,110 --> 00:13:27,360
really recommended because anybody could

00:13:24,790 --> 00:13:30,940
get in your house if they found the key

00:13:27,360 --> 00:13:33,370
so therefore you decide to get one of

00:13:30,940 --> 00:13:35,380
those key boxes that are more popular

00:13:33,370 --> 00:13:37,480
now especially with Airbnb where you pop

00:13:35,380 --> 00:13:40,269
your key into key box and then you set a

00:13:37,480 --> 00:13:42,430
code on the keyed box and in this way

00:13:40,269 --> 00:13:44,680
you can access only you can access the

00:13:42,430 --> 00:13:54,040
key with something you remember not

00:13:44,680 --> 00:13:58,029
something that's stored anywhere so for

00:13:54,040 --> 00:14:01,209
to do this we can implement we can do

00:13:58,029 --> 00:14:08,200
this in our code as well we can import

00:14:01,209 --> 00:14:10,300
key by from a password and with this

00:14:08,200 --> 00:14:11,500
function called import key and we want

00:14:10,300 --> 00:14:15,190
to use the password-based key derivation

00:14:11,500 --> 00:14:16,690
function to we ask the user for their

00:14:15,190 --> 00:14:19,240
password and then we transform the

00:14:16,690 --> 00:14:21,040
password in turkey by using this

00:14:19,240 --> 00:14:25,660
function and then again we have to

00:14:21,040 --> 00:14:30,430
encode our strings and using that

00:14:25,660 --> 00:14:31,930
password key we can derive a key and as

00:14:30,430 --> 00:14:34,510
the name implies it's really good at

00:14:31,930 --> 00:14:36,910
making keys from passwords but since

00:14:34,510 --> 00:14:39,490
user selected passwords are often easier

00:14:36,910 --> 00:14:44,709
to guess than something we generated

00:14:39,490 --> 00:14:48,930
randomly we also need a truly random key

00:14:44,709 --> 00:14:51,790
and we add that and we call it the salt

00:14:48,930 --> 00:14:54,250
so this function derived key is

00:14:51,790 --> 00:14:55,839
determined amidst deterministic meaning

00:14:54,250 --> 00:14:58,779
that as long as he prided with the same

00:14:55,839 --> 00:15:01,570
salt on the same password the output

00:14:58,779 --> 00:15:03,610
will be the same so we can generate it

00:15:01,570 --> 00:15:07,300
again and/or derive it again and again

00:15:03,610 --> 00:15:10,000
and in our case so far we would have to

00:15:07,300 --> 00:15:12,550
save that salt together with our cipher

00:15:10,000 --> 00:15:14,740
text so it doesn't provide the password

00:15:12,550 --> 00:15:16,810
provides us with some extra security but

00:15:14,740 --> 00:15:19,120
the salt is not giving us much extra

00:15:16,810 --> 00:15:23,350
right now but later on we will see how

00:15:19,120 --> 00:15:25,899
the salt can shine so let's go back to

00:15:23,350 --> 00:15:27,820
our house there we only had a key luck

00:15:25,899 --> 00:15:30,470
with the passcode on it

00:15:27,820 --> 00:15:33,860
so we need to get one of those

00:15:30,470 --> 00:15:36,200
that has a code and a regular luck I

00:15:33,860 --> 00:15:38,480
don't think those exist yet that's what

00:15:36,200 --> 00:15:41,330
we're getting and then we take that salt

00:15:38,480 --> 00:15:43,550
or that key for the regular lock and we

00:15:41,330 --> 00:15:45,529
put that one under the flowerpot so to

00:15:43,550 --> 00:15:47,600
get in we need to find the key that

00:15:45,529 --> 00:15:49,760
we've hidden very secretly under the

00:15:47,600 --> 00:15:51,830
flowerpot and we need to remember our

00:15:49,760 --> 00:16:01,930
code then we can get our house key and

00:15:51,830 --> 00:16:04,730
we can get into our house so that um

00:16:01,930 --> 00:16:08,779
yeah so that was this is our basic

00:16:04,730 --> 00:16:11,149
encryption and as you can see the

00:16:08,779 --> 00:16:13,700
encryption stays the same but we're now

00:16:11,149 --> 00:16:18,440
deriving the key instead of generating

00:16:13,700 --> 00:16:21,080
the key so let's move over to cloud

00:16:18,440 --> 00:16:23,839
storage so there could be a case where a

00:16:21,080 --> 00:16:26,630
menstrual cycle tracker app could just

00:16:23,839 --> 00:16:29,690
store everything locally but consumer

00:16:26,630 --> 00:16:32,420
Benedicta has gotten some fancy habits

00:16:29,690 --> 00:16:34,250
and she likes her data in the cloud so

00:16:32,420 --> 00:16:37,339
she can get access from multiple clients

00:16:34,250 --> 00:16:41,450
and also backup so we'll keep going on

00:16:37,339 --> 00:16:42,890
our encryption and key journey will

00:16:41,450 --> 00:16:45,890
start by what goes where

00:16:42,890 --> 00:16:49,220
so we'll put our ciphertext in the cloud

00:16:45,890 --> 00:16:50,839
we'll keep our salt on the client and

00:16:49,220 --> 00:16:53,209
then everything else is kept in memory

00:16:50,839 --> 00:16:55,850
the password kept in you know our own

00:16:53,209 --> 00:16:59,720
human memory and then everything else in

00:16:55,850 --> 00:17:02,779
the clients memory and this looks like

00:16:59,720 --> 00:17:04,970
this for the user in one password when

00:17:02,779 --> 00:17:06,829
you're gonna move between devices this

00:17:04,970 --> 00:17:09,470
is where our salt shines because you

00:17:06,829 --> 00:17:11,270
can't if you pick up a new device you

00:17:09,470 --> 00:17:12,860
will need the password but you also need

00:17:11,270 --> 00:17:15,230
the salt so you need access to your

00:17:12,860 --> 00:17:17,360
other device to get that salt and you

00:17:15,230 --> 00:17:20,240
need to manually transfer it so this

00:17:17,360 --> 00:17:21,410
gives us some added benefit instead of

00:17:20,240 --> 00:17:25,579
just hiding it in the player of

00:17:21,410 --> 00:17:27,679
flowerpot next to the house and one

00:17:25,579 --> 00:17:29,720
password calls it the secret key and

00:17:27,679 --> 00:17:31,520
they also give us a QR code so it's

00:17:29,720 --> 00:17:34,340
easier to set up on a new mobile device

00:17:31,520 --> 00:17:36,559
by just taking a photo they also really

00:17:34,340 --> 00:17:40,059
want you to print this out and put it

00:17:36,559 --> 00:17:42,080
somewhere safe and they have a little

00:17:40,059 --> 00:17:43,340
field where you can write in the

00:17:42,080 --> 00:17:43,790
password that you're supposed to only

00:17:43,340 --> 00:17:45,890
remem

00:17:43,790 --> 00:17:48,020
in your mind and the reason for this is

00:17:45,890 --> 00:17:51,230
that in these kind of privacy first

00:17:48,020 --> 00:17:54,830
focused apps if you forget your password

00:17:51,230 --> 00:17:56,510
then they can't give you any account

00:17:54,830 --> 00:17:58,370
recovery because they don't know your

00:17:56,510 --> 00:18:02,210
password and they don't have access to

00:17:58,370 --> 00:18:04,850
your content anymore so you really need

00:18:02,210 --> 00:18:06,920
the users to remember that password or

00:18:04,850 --> 00:18:08,570
print but their secret key and their

00:18:06,920 --> 00:18:10,730
password out and put it in a safe or

00:18:08,570 --> 00:18:12,890
some or somewhere because you cannot

00:18:10,730 --> 00:18:16,970
give their content back to them if they

00:18:12,890 --> 00:18:20,210
forget so it's a very interesting from a

00:18:16,970 --> 00:18:22,370
user standpoint we need to help our

00:18:20,210 --> 00:18:24,410
users to get new mental models about

00:18:22,370 --> 00:18:26,390
where data is stored and how it's stored

00:18:24,410 --> 00:18:28,910
because a lot of people are very used to

00:18:26,390 --> 00:18:34,640
just hitting the recovery or I've forgot

00:18:28,910 --> 00:18:36,830
my password link a nice thing with this

00:18:34,640 --> 00:18:38,450
setup is that something that sounds

00:18:36,830 --> 00:18:40,390
really fancy or at least for me sound

00:18:38,450 --> 00:18:43,400
very fancy and to end encryption

00:18:40,390 --> 00:18:46,460
something that's people say whenever

00:18:43,400 --> 00:18:48,380
they talk about cloud and it's not as

00:18:46,460 --> 00:18:50,510
hard as it sounds or special as it

00:18:48,380 --> 00:18:53,650
sounds it just means that all encryption

00:18:50,510 --> 00:18:56,000
and decryption happens on the client and

00:18:53,650 --> 00:18:58,850
you know that's what we're already doing

00:18:56,000 --> 00:19:00,980
so we have intent encryption down

00:18:58,850 --> 00:19:05,900
without much extra effort or with no

00:19:00,980 --> 00:19:07,700
extra effort effort again you might say

00:19:05,900 --> 00:19:10,730
you know what the sharing have to do

00:19:07,700 --> 00:19:13,100
with a period tracker app and over these

00:19:10,730 --> 00:19:15,230
last weeks of making it up and started

00:19:13,100 --> 00:19:18,830
talking about menstrual cycles I've

00:19:15,230 --> 00:19:20,540
talked talked more to more about cycles

00:19:18,830 --> 00:19:22,070
with my friends and and other random

00:19:20,540 --> 00:19:24,740
people then I think I have in my

00:19:22,070 --> 00:19:28,130
lifetime combined and this ID that I've

00:19:24,740 --> 00:19:31,220
had and that we've had at home where I

00:19:28,130 --> 00:19:33,290
want I maybe want to share some of my

00:19:31,220 --> 00:19:36,170
data with my significant others there

00:19:33,290 --> 00:19:37,100
are parts of the days in the cycle where

00:19:36,170 --> 00:19:39,050
I don't really want to communicate

00:19:37,100 --> 00:19:41,930
that's a regular human I just want my

00:19:39,050 --> 00:19:43,700
have to do it for me and other people

00:19:41,930 --> 00:19:46,010
some people think it's it's a horrible

00:19:43,700 --> 00:19:47,600
horrible idea and other people love it

00:19:46,010 --> 00:19:49,250
so we're gonna go with the people who

00:19:47,600 --> 00:19:55,610
loves it and we're also going to share

00:19:49,250 --> 00:19:57,740
some of our data so to share data we

00:19:55,610 --> 00:20:01,910
need some different encryption

00:19:57,740 --> 00:20:03,410
floo and it's called a async encryption

00:20:01,910 --> 00:20:07,940
because I'm I always have a problem

00:20:03,410 --> 00:20:10,040
saying a is asynchronous encryption and

00:20:07,940 --> 00:20:12,410
in this type of async encryption and

00:20:10,040 --> 00:20:15,770
there's a different key for encryption

00:20:12,410 --> 00:20:18,230
and decryption so see we have the orange

00:20:15,770 --> 00:20:22,309
key old old school looking key there on

00:20:18,230 --> 00:20:25,100
the left and the purple on the right you

00:20:22,309 --> 00:20:27,559
could switch these up and use the other

00:20:25,100 --> 00:20:30,290
one for encryption and the first one for

00:20:27,559 --> 00:20:31,400
decryption and and this this was really

00:20:30,290 --> 00:20:33,200
hard for me to understand in the

00:20:31,400 --> 00:20:35,960
beginning because they're usually taught

00:20:33,200 --> 00:20:38,000
and they labeled public and private so I

00:20:35,960 --> 00:20:39,350
thought it was always the public that

00:20:38,000 --> 00:20:41,030
had to encrypt on the private that had

00:20:39,350 --> 00:20:42,770
to decrypt or the other way around but

00:20:41,030 --> 00:20:45,860
you can switch these up and they have

00:20:42,770 --> 00:20:47,450
different use cases but for our use case

00:20:45,860 --> 00:20:49,490
this is the one we want we want to

00:20:47,450 --> 00:20:51,290
encrypt with the public key which is

00:20:49,490 --> 00:20:53,360
something that you can freely share and

00:20:51,290 --> 00:20:59,210
then we want to decrypt with the private

00:20:53,360 --> 00:21:02,300
key so let's go back to our houses

00:20:59,210 --> 00:21:06,110
you know hatton you now have a neighbor

00:21:02,300 --> 00:21:08,690
and the neighbor has very complementary

00:21:06,110 --> 00:21:10,429
tools to use you want to be able to

00:21:08,690 --> 00:21:12,410
share your tools with your neighbor and

00:21:10,429 --> 00:21:13,910
she wants to share her tools with you

00:21:12,410 --> 00:21:16,790
which is really nice as a nice

00:21:13,910 --> 00:21:18,500
neighborhood yeah but you don't want to

00:21:16,790 --> 00:21:20,510
always have to be at home when she comes

00:21:18,500 --> 00:21:26,570
over and you want some way to coordinate

00:21:20,510 --> 00:21:28,730
the sharing and you could just give you

00:21:26,570 --> 00:21:32,360
know give give it to her in the physical

00:21:28,730 --> 00:21:35,660
world but this is a special case well

00:21:32,360 --> 00:21:37,250
anyway so you put your you can put all

00:21:35,660 --> 00:21:40,220
of your tools and she can put all of her

00:21:37,250 --> 00:21:41,870
tools in your respective sheds but how

00:21:40,220 --> 00:21:43,460
are you supposed to be able to give her

00:21:41,870 --> 00:21:46,100
the key if you're not kind of if you

00:21:43,460 --> 00:21:49,700
don't have time to meet her and meet her

00:21:46,100 --> 00:21:51,380
imperfect person and one way to do that

00:21:49,700 --> 00:21:53,870
is that all your other neighbors have

00:21:51,380 --> 00:21:55,730
lockable mailboxes so you can take your

00:21:53,870 --> 00:21:57,559
shed a copy of her shed key and then you

00:21:55,730 --> 00:21:59,720
can drop it in her mailbox and she will

00:21:57,559 --> 00:22:02,540
be the only one able to unlock that and

00:21:59,720 --> 00:22:04,309
get the key to your shed and the same

00:22:02,540 --> 00:22:06,380
the other way around she could take a

00:22:04,309 --> 00:22:08,840
copy of her shed key and drop it into

00:22:06,380 --> 00:22:11,450
your public mailbox and then you will be

00:22:08,840 --> 00:22:14,630
the only one able to

00:22:11,450 --> 00:22:16,070
open it with the key to your mailbox but

00:22:14,630 --> 00:22:17,419
then if you have a key again so you have

00:22:16,070 --> 00:22:19,760
the key to the mailbox and what should

00:22:17,419 --> 00:22:22,970
you do with this well we'll put it into

00:22:19,760 --> 00:22:25,100
that key box again that has a code and

00:22:22,970 --> 00:22:29,929
then it has to lock and then you put

00:22:25,100 --> 00:22:33,970
that key under your flower button and to

00:22:29,929 --> 00:22:36,769
generate these async keys you can use

00:22:33,970 --> 00:22:40,370
this algorithm I won't go much further

00:22:36,769 --> 00:22:42,470
into that they will look at the flow so

00:22:40,370 --> 00:22:47,659
for sharing data you'll take your plain

00:22:42,470 --> 00:22:52,159
text and you'll let's see no there's

00:22:47,659 --> 00:22:56,990
something wrong yeah no yes sir

00:22:52,159 --> 00:22:58,639
ah you'll take you'll first generate a

00:22:56,990 --> 00:23:00,200
key like we did all the way in the

00:22:58,639 --> 00:23:02,539
beginning and you'll encrypt the data

00:23:00,200 --> 00:23:05,570
with that and you get your ciphertext

00:23:02,539 --> 00:23:07,580
but then you take your generated key and

00:23:05,570 --> 00:23:10,100
you encrypt that with the other person's

00:23:07,580 --> 00:23:12,740
public key and you get an encrypted

00:23:10,100 --> 00:23:17,690
generated key and you can share both of

00:23:12,740 --> 00:23:21,409
those and put it in the cloud and then

00:23:17,690 --> 00:23:23,590
to decrypt the other person will take

00:23:21,409 --> 00:23:26,779
their private key decrypt encrypted

00:23:23,590 --> 00:23:30,429
generated key get the generated key and

00:23:26,779 --> 00:23:33,200
then decrypt the ciphertext to plaintext

00:23:30,429 --> 00:23:35,059
so as you can see with all these keys we

00:23:33,200 --> 00:23:40,309
got a really stay sharp

00:23:35,059 --> 00:23:42,080
to not mess it up but where you know

00:23:40,309 --> 00:23:45,380
that private key can't just be laying

00:23:42,080 --> 00:23:49,130
around so this is what we do with our

00:23:45,380 --> 00:23:51,799
private keys we encrypted with the

00:23:49,130 --> 00:23:53,570
derived key and then we can decrypt it

00:23:51,799 --> 00:23:56,630
again so if you then look at the whole

00:23:53,570 --> 00:23:59,840
flow if I want to decrypt something

00:23:56,630 --> 00:24:02,690
shared with me I first have to get my

00:23:59,840 --> 00:24:04,909
derived key decrypt my encrypted private

00:24:02,690 --> 00:24:07,370
key then I use my private creek to

00:24:04,909 --> 00:24:09,200
decrypt my encrypted generated key I get

00:24:07,370 --> 00:24:11,899
my generated key and I can finally

00:24:09,200 --> 00:24:14,480
decrypt my text and I get my plaintext

00:24:11,899 --> 00:24:16,940
back and this is actually what we

00:24:14,480 --> 00:24:19,610
usually do also with things we only want

00:24:16,940 --> 00:24:22,220
to share with ourselves we do the same

00:24:19,610 --> 00:24:24,590
flow so that it will be the equal

00:24:22,220 --> 00:24:27,200
process so then you just use your

00:24:24,590 --> 00:24:29,440
public-key when encrypted and then you

00:24:27,200 --> 00:24:36,740
do this whole song and dance to get your

00:24:29,440 --> 00:24:38,720
content back so intent ocation I kind of

00:24:36,740 --> 00:24:40,309
just skipped the whole authentication

00:24:38,720 --> 00:24:42,289
part as you might have noticed we just

00:24:40,309 --> 00:24:45,110
put things on the cloud and without

00:24:42,289 --> 00:24:46,669
knowing who anyone was and the reason

00:24:45,110 --> 00:24:48,970
for that that it it becomes more

00:24:46,669 --> 00:24:52,010
problematic than in a normal web app

00:24:48,970 --> 00:24:54,080
since we use our password to generate

00:24:52,010 --> 00:24:56,450
keys we don't really the password

00:24:54,080 --> 00:24:58,730
becomes much more sensitive than in a

00:24:56,450 --> 00:25:00,529
regular app so we don't want to send the

00:24:58,730 --> 00:25:03,890
password even if it's hashed back and

00:25:00,529 --> 00:25:05,630
forth between the server to log in and I

00:25:03,890 --> 00:25:08,179
haven't been able and one password

00:25:05,630 --> 00:25:10,130
called this they've solved this using

00:25:08,179 --> 00:25:12,350
something called secure remote password

00:25:10,130 --> 00:25:15,890
where you never send the password over

00:25:12,350 --> 00:25:17,929
you just do a lot of really cool math on

00:25:15,890 --> 00:25:19,760
both sides and you're able to say like

00:25:17,929 --> 00:25:21,289
we both know the same secret but you

00:25:19,760 --> 00:25:23,950
don't send the password back and forth

00:25:21,289 --> 00:25:27,169
but I've not been able to find any

00:25:23,950 --> 00:25:28,880
services that gives us this because all

00:25:27,169 --> 00:25:30,919
the regular back-end as a service

00:25:28,880 --> 00:25:33,110
providers and auth providers they do

00:25:30,919 --> 00:25:36,980
regular authentication flow

00:25:33,110 --> 00:25:39,590
I found one random package on node which

00:25:36,980 --> 00:25:41,539
you know I can't just jump jump and use

00:25:39,590 --> 00:25:41,750
that without knowing anything more about

00:25:41,539 --> 00:25:45,440
it

00:25:41,750 --> 00:25:47,690
one password has open source to go

00:25:45,440 --> 00:25:50,360
implementation if you want to try to

00:25:47,690 --> 00:25:53,840
host your own and secure patent remote

00:25:50,360 --> 00:25:55,730
password solution but for pow I find

00:25:53,840 --> 00:25:58,669
something else it's called block stack

00:25:55,730 --> 00:26:00,740
it's a fairly seems to be fairly a new

00:25:58,669 --> 00:26:03,860
framework for creating decentralized

00:26:00,740 --> 00:26:05,899
apps so they have authentication on you

00:26:03,860 --> 00:26:07,610
know the blockchain which is very

00:26:05,899 --> 00:26:10,039
popular word to say these days but I

00:26:07,610 --> 00:26:12,140
find it to be able to use this for POW

00:26:10,039 --> 00:26:14,929
is a very practical example of when it's

00:26:12,140 --> 00:26:16,610
needed and they're they do a similar

00:26:14,929 --> 00:26:19,190
thing where you intend to authenticate

00:26:16,610 --> 00:26:21,740
without sending the password over any

00:26:19,190 --> 00:26:23,210
wires they also help you with encryption

00:26:21,740 --> 00:26:25,039
so if you're just going to do simple

00:26:23,210 --> 00:26:27,559
encryption it's much easier you don't

00:26:25,039 --> 00:26:30,260
have to work with buffer so you can just

00:26:27,559 --> 00:26:33,500
encrypt strings like you know normal

00:26:30,260 --> 00:26:35,330
JavaScript developers would like so

00:26:33,500 --> 00:26:38,710
check that out if you want to if you

00:26:35,330 --> 00:26:42,350
just want to do some fun side projects

00:26:38,710 --> 00:26:45,140
so we're to the main question is it

00:26:42,350 --> 00:26:46,610
possible so for my use case it's

00:26:45,140 --> 00:26:50,690
definitely possible because we can

00:26:46,610 --> 00:26:53,090
encrypt and I have made a version of the

00:26:50,690 --> 00:26:54,980
app but I think what is more important

00:26:53,090 --> 00:26:56,870
is that more of us especially in the

00:26:54,980 --> 00:26:59,240
developers start using encryption and

00:26:56,870 --> 00:27:02,060
really taking privacy first to help our

00:26:59,240 --> 00:27:04,370
users and educate our users to know when

00:27:02,060 --> 00:27:07,580
they share and how that whole flow works

00:27:04,370 --> 00:27:10,130
when you do encrypted apps and there

00:27:07,580 --> 00:27:12,920
will always be a trust issue because I

00:27:10,130 --> 00:27:15,110
could of course do things in the brows

00:27:12,920 --> 00:27:17,240
or in addition to encrypting and just

00:27:15,110 --> 00:27:19,430
sending off the data if I wanted to and

00:27:17,240 --> 00:27:22,760
that's one of the things side projects

00:27:19,430 --> 00:27:25,670
and indie developers I think it comes in

00:27:22,760 --> 00:27:27,590
our favor is that it's maybe easier to

00:27:25,670 --> 00:27:29,270
get the trust and you start with your

00:27:27,590 --> 00:27:32,900
friends than it is for the bigger

00:27:29,270 --> 00:27:35,210
company corporation so maybe we we might

00:27:32,900 --> 00:27:38,870
have a competitive advantage as in the

00:27:35,210 --> 00:27:42,980
developers if you take privacy seriously

00:27:38,870 --> 00:27:45,080
so my I would like everybody to just go

00:27:42,980 --> 00:27:46,670
out and start making your own private

00:27:45,080 --> 00:27:48,860
apps and if you want to copy whatever

00:27:46,670 --> 00:27:53,090
I've made feel free to do that and let

00:27:48,860 --> 00:27:55,700
me know how it goes if you want to see

00:27:53,090 --> 00:27:57,970
the slides or codes or a code or

00:27:55,700 --> 00:28:01,270
anything you can go to add this address

00:27:57,970 --> 00:28:04,370
it's gonna leave it up there for a while

00:28:01,270 --> 00:28:07,000
and please come talk to me in the in the

00:28:04,370 --> 00:28:10,430
lunch break if you have any questions

00:28:07,000 --> 00:28:13,060
and that was all thank you

00:28:10,430 --> 00:28:13,060
and I also

00:28:14,520 --> 00:28:23,730
oh she got lost yeah and also just want

00:28:20,790 --> 00:28:25,120
to thank Lilian who made all of the the

00:28:23,730 --> 00:28:35,450
beaded illustrations

00:28:25,120 --> 00:28:35,450

YouTube URL: https://www.youtube.com/watch?v=nS36D2zUkvA


