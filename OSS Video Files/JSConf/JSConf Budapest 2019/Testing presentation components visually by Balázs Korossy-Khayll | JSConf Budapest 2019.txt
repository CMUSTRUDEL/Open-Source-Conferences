Title: Testing presentation components visually by Balázs Korossy-Khayll | JSConf Budapest 2019
Publication date: 2019-11-04
Playlist: JSConf Budapest 2019
Description: 
	https://2019.jsconfbp.com/speakers/balazs_korossy-khayll

You have written all the unit tests, integration and e2e tests imaginable to your project, your code coverage is in the skies, you are sure that everything is in working order, your application is ready to ship. Or is it? Frontend developers often face the challenge that even a plethora of tests don’t cover visual differences, and while the functionality might be working and protected by tests, we don’t know much about the layout’s and visual styles’ correctness. Writing unit tests or manual testing for visual styles is tiresome and error-prone, so at BlackRock we came up with a better solution.

Using Storybook we have developed a way of comparing visual differences of the rendered images of our presentational components. This solution enabled us to discover unwanted visual changes at once without manual testing the entire application with every release. Presentation, or dumb  components are a function of their inputs, from the components point of view, their state is immutable, which enabled us to individually test the possible variations of the components, simply by providing them different inputs.

In this talk I’m going through the technicalities of our approach, and discuss how any team could implement a similar solution. I’m also going to discuss how we integrated visual testing the continuous development process and how we involved the UX and UI designers in the testing process.

Balazs is a passionate software engineer and leader, who takes inspiration from his studies in both computer science and industrial design. As a VP of engineering he’s responsible for a user experience and development team at BlackRock that delivers software products in the Aladdin platform.
Captions: 
	00:00:00,240 --> 00:00:05,370
[Applause]

00:00:00,949 --> 00:00:08,040
Hey hello so I hope you're doing fine

00:00:05,370 --> 00:00:09,389
my name is Velasco Raquel I work for a

00:00:08,040 --> 00:00:11,790
company called Blackrock

00:00:09,389 --> 00:00:14,429
and yeah it's a financial company but

00:00:11,790 --> 00:00:16,440
also a software company because we are

00:00:14,429 --> 00:00:18,900
selling our platform asset management

00:00:16,440 --> 00:00:22,170
platform Aladin to other companies as

00:00:18,900 --> 00:00:24,359
well so we have a nice office in

00:00:22,170 --> 00:00:26,789
Budapest in a building called the white

00:00:24,359 --> 00:00:28,830
house so you might say that I'm a

00:00:26,789 --> 00:00:31,199
vice-president from the White House not

00:00:28,830 --> 00:00:38,219
the president though and it's a not a

00:00:31,199 --> 00:00:40,920
good joke nowadays so the bridge between

00:00:38,219 --> 00:00:43,230
people and the underlying software

00:00:40,920 --> 00:00:49,680
systems that the V developers build is

00:00:43,230 --> 00:00:51,719
the user interface and it could be it

00:00:49,680 --> 00:00:53,940
can can come in different variations

00:00:51,719 --> 00:01:01,859
just think about the smart speakers that

00:00:53,940 --> 00:01:04,110
are pretty popular today and most of the

00:01:01,859 --> 00:01:06,659
applications have a visual interface now

00:01:04,110 --> 00:01:10,530
you need really need to pay attention to

00:01:06,659 --> 00:01:14,490
this visual interface because if you

00:01:10,530 --> 00:01:19,490
break this link then it will make your

00:01:14,490 --> 00:01:19,490
users lose trust in your business so

00:01:20,270 --> 00:01:26,479
later in in the hands-on part of the

00:01:24,119 --> 00:01:31,740
talk I'm going to show you how you can

00:01:26,479 --> 00:01:33,689
use the tool called storybook to render

00:01:31,740 --> 00:01:36,990
your components in isolation in your

00:01:33,689 --> 00:01:39,869
angular project so I'm going to use

00:01:36,990 --> 00:01:42,570
angular for this example and then I'm

00:01:39,869 --> 00:01:46,590
going to show you how you can use a the

00:01:42,570 --> 00:01:49,229
add-on called story shots to create

00:01:46,590 --> 00:01:51,030
snapshots and then later how you can

00:01:49,229 --> 00:01:53,460
automate this whole process to compare

00:01:51,030 --> 00:01:56,250
the old snapshots with the new snapshots

00:01:53,460 --> 00:02:01,689
as you're changing your code and running

00:01:56,250 --> 00:02:05,329
the test again okay

00:02:01,689 --> 00:02:09,160
so hands up if you have used this

00:02:05,329 --> 00:02:11,810
software okay

00:02:09,160 --> 00:02:14,930
okay I thought it would be a bit less

00:02:11,810 --> 00:02:17,180
but but yeah so I think this is a really

00:02:14,930 --> 00:02:20,110
great example of a well sold out user

00:02:17,180 --> 00:02:22,940
interface it really made life easier

00:02:20,110 --> 00:02:25,549
compared to copying files on the

00:02:22,940 --> 00:02:28,849
personal computers in the 90s in fact

00:02:25,549 --> 00:02:31,790
everybody pretty much had this had

00:02:28,849 --> 00:02:34,790
norton commander on their PC it was the

00:02:31,790 --> 00:02:39,170
first thing you installed or just copied

00:02:34,790 --> 00:02:43,670
right and for those who don't know it

00:02:39,170 --> 00:02:46,760
it's it has two panels side by side now

00:02:43,670 --> 00:02:48,500
on this image I just only have one panel

00:02:46,760 --> 00:02:50,269
open and the other is just showing the

00:02:48,500 --> 00:02:52,910
information about this but could be two

00:02:50,269 --> 00:02:54,500
panels with different locations on your

00:02:52,910 --> 00:02:58,000
file system and you can easily copy

00:02:54,500 --> 00:03:01,700
files from one panel to the other now

00:02:58,000 --> 00:03:05,150
people don't believe this anymore do you

00:03:01,700 --> 00:03:07,670
think why do you know why so I think the

00:03:05,150 --> 00:03:12,049
reason is because people don't use

00:03:07,670 --> 00:03:14,930
computers anymore you know what is the

00:03:12,049 --> 00:03:20,000
personal computer anyway so instead what

00:03:14,930 --> 00:03:24,579
they do is they watch movies they browse

00:03:20,000 --> 00:03:28,730
the Internet they message each other and

00:03:24,579 --> 00:03:30,590
if you're talking about design in the

00:03:28,730 --> 00:03:33,680
software industry you pretty much have

00:03:30,590 --> 00:03:36,470
to talk about Steve Jobs and his team at

00:03:33,680 --> 00:03:39,650
Apple right because Apple had this

00:03:36,470 --> 00:03:43,190
vision that computers will one day be

00:03:39,650 --> 00:03:46,910
just a part of our everyday life as just

00:03:43,190 --> 00:03:51,349
just tools and pretty much hiding the

00:03:46,910 --> 00:03:59,090
underlining technology and it turned out

00:03:51,349 --> 00:04:01,639
to be true and I think this is this

00:03:59,090 --> 00:04:04,160
image really kind of represents apples

00:04:01,639 --> 00:04:07,669
philosophy and although I have an iPad

00:04:04,160 --> 00:04:10,370
here it was really around 2007 with the

00:04:07,669 --> 00:04:13,609
introduction of the iPhone and then all

00:04:10,370 --> 00:04:15,110
the other smartphones when things really

00:04:13,609 --> 00:04:18,739
changed because this

00:04:15,110 --> 00:04:22,430
new form factor required people to be

00:04:18,739 --> 00:04:26,330
more creative and figure out new ways to

00:04:22,430 --> 00:04:35,930
to do wijl interfaces and you know use

00:04:26,330 --> 00:04:42,050
gestures and so on so now let's look at

00:04:35,930 --> 00:04:44,600
some also I want to mention that a lot

00:04:42,050 --> 00:04:47,240
of these changes that people figured out

00:04:44,600 --> 00:04:48,950
on the smart phones were transferred

00:04:47,240 --> 00:04:53,380
back to the desktop so let's see a

00:04:48,950 --> 00:04:58,720
couple of examples of what changed okay

00:04:53,380 --> 00:05:01,460
so this is a form that was previously a

00:04:58,720 --> 00:05:04,370
registration form maybe it's pretty

00:05:01,460 --> 00:05:07,730
static yeah you have some input fields

00:05:04,370 --> 00:05:09,380
there but you get the error message once

00:05:07,730 --> 00:05:11,390
you submitted the form and it was

00:05:09,380 --> 00:05:16,250
rendered on the server side and sent

00:05:11,390 --> 00:05:19,970
back with a new page yeah it's pretty

00:05:16,250 --> 00:05:22,910
boring so now we have more sophisticated

00:05:19,970 --> 00:05:26,270
form controls right they have different

00:05:22,910 --> 00:05:32,180
states they have different ways to input

00:05:26,270 --> 00:05:34,090
data as you type they show you whether

00:05:32,180 --> 00:05:39,620
you have an error in the field or not

00:05:34,090 --> 00:05:43,100
and yeah we can hopefully see in a

00:05:39,620 --> 00:05:46,760
moment it you know it turns if you enter

00:05:43,100 --> 00:05:50,840
a valid email and we have form controls

00:05:46,760 --> 00:05:52,100
that even present you with a pop-up so

00:05:50,840 --> 00:05:57,229
in one word they are more sophisticated

00:05:52,100 --> 00:06:00,650
and of course it's more complex to

00:05:57,229 --> 00:06:03,140
implement so luckily we have designed

00:06:00,650 --> 00:06:05,930
systems widely available for example

00:06:03,140 --> 00:06:12,229
Google's material design but also maybe

00:06:05,930 --> 00:06:15,830
bootstrap however and you as a front-end

00:06:12,229 --> 00:06:19,850
developer quino's can always just use

00:06:15,830 --> 00:06:22,820
this but companies today are realizing

00:06:19,850 --> 00:06:25,190
more and more that they actually have to

00:06:22,820 --> 00:06:29,150
have their own branding their own design

00:06:25,190 --> 00:06:33,530
system and inherently that means more

00:06:29,150 --> 00:06:35,300
right because one design system wears

00:06:33,530 --> 00:06:44,060
this many design systems you know it

00:06:35,300 --> 00:06:48,070
cannot possibly be as good so let's now

00:06:44,060 --> 00:06:48,070
take a look at one more example

00:06:49,210 --> 00:06:53,960
previously this could have been a

00:06:51,410 --> 00:06:58,070
banking application and a screen where

00:06:53,960 --> 00:06:59,630
you transfer money from you know from

00:06:58,070 --> 00:07:02,660
the image you can tell that it's packed

00:06:59,630 --> 00:07:07,540
with features and you know what happens

00:07:02,660 --> 00:07:10,310
if if the interface is slightly off well

00:07:07,540 --> 00:07:13,120
you don't even notice it right you you

00:07:10,310 --> 00:07:17,660
don't really dub that it will work now

00:07:13,120 --> 00:07:19,580
today a startup company might offer you

00:07:17,660 --> 00:07:22,940
an application in your smartphone so

00:07:19,580 --> 00:07:25,070
this and they are using their own design

00:07:22,940 --> 00:07:26,450
system right not using any native

00:07:25,070 --> 00:07:30,260
components because they want to

00:07:26,450 --> 00:07:31,910
distinguish themselves and so they come

00:07:30,260 --> 00:07:34,010
up with a nice-looking application and

00:07:31,910 --> 00:07:35,930
then they promise that it's gonna be the

00:07:34,010 --> 00:07:39,230
easiest ever experience and the most

00:07:35,930 --> 00:07:41,840
convenient and you start using it but

00:07:39,230 --> 00:07:45,230
what happens if the developers screw up

00:07:41,840 --> 00:07:49,400
and the user interface is slightly off

00:07:45,230 --> 00:07:51,920
well in this case you quickly you lose

00:07:49,400 --> 00:07:54,680
trust in the whole application and the

00:07:51,920 --> 00:07:56,360
company because you know I mean it

00:07:54,680 --> 00:08:02,600
should look professional but this

00:07:56,360 --> 00:08:04,220
doesn't look professional and there are

00:08:02,600 --> 00:08:06,740
some other things as well

00:08:04,220 --> 00:08:10,520
that today make life harder for the

00:08:06,740 --> 00:08:13,340
front-end developers so of course you

00:08:10,520 --> 00:08:14,840
need to support multiple devices of

00:08:13,340 --> 00:08:19,250
course you need to support multiple

00:08:14,840 --> 00:08:21,680
locales and slow connections and you

00:08:19,250 --> 00:08:24,230
need to think about accessibility so

00:08:21,680 --> 00:08:27,350
user interfaces are more complex and

00:08:24,230 --> 00:08:28,780
it's easier than ever to break them so

00:08:27,350 --> 00:08:33,380
what do we do about that

00:08:28,780 --> 00:08:36,460
well for one we are we do we create our

00:08:33,380 --> 00:08:39,200
architecture in a way that supports

00:08:36,460 --> 00:08:42,769
testing supports unit testing so as you

00:08:39,200 --> 00:08:44,420
can see here there is a unit direct

00:08:42,769 --> 00:08:47,929
shanell flow of the data along the

00:08:44,420 --> 00:08:50,569
yellow arrows data flows from somewhere

00:08:47,929 --> 00:08:52,819
the state through a container component

00:08:50,569 --> 00:08:54,829
to a presentation component you can call

00:08:52,819 --> 00:08:59,059
them smart or dumb components as well

00:08:54,829 --> 00:09:01,459
and then if the user clicks something

00:08:59,059 --> 00:09:04,059
then that action has an effect and that

00:09:01,459 --> 00:09:06,379
along the purple arrows it flows back

00:09:04,059 --> 00:09:08,480
ultimately into the state and from the

00:09:06,379 --> 00:09:13,639
state the new data flows to the

00:09:08,480 --> 00:09:16,309
presentation components right so of

00:09:13,639 --> 00:09:17,989
course the presentation components can

00:09:16,309 --> 00:09:21,850
have multiple layers depending on your

00:09:17,989 --> 00:09:24,529
composition and we all will test these

00:09:21,850 --> 00:09:27,309
components in isolation for their

00:09:24,529 --> 00:09:29,749
functionality with unit tests I think

00:09:27,309 --> 00:09:34,519
today probably everybody is familiar

00:09:29,749 --> 00:09:38,420
with unit testing in angular but what

00:09:34,519 --> 00:09:42,259
about visual testing wouldn't it be nice

00:09:38,420 --> 00:09:46,339
if without the whole application you can

00:09:42,259 --> 00:09:48,970
just test this component visually what

00:09:46,339 --> 00:09:54,110
if you could render it in isolation so

00:09:48,970 --> 00:10:00,499
that's what I'm going to show you now

00:09:54,110 --> 00:10:03,920
and it's gonna be a live example so

00:10:00,499 --> 00:10:06,410
fingers crossed and what I will do is I

00:10:03,920 --> 00:10:08,420
will click quickly show you a sample

00:10:06,410 --> 00:10:12,499
application that I created for this

00:10:08,420 --> 00:10:15,319
purpose and then I will tell you how you

00:10:12,499 --> 00:10:19,279
can add storybook it's really easy and

00:10:15,319 --> 00:10:21,889
storybook will help you with just that

00:10:19,279 --> 00:10:23,990
so you can render your visual components

00:10:21,889 --> 00:10:26,059
in isolation it's also good for

00:10:23,990 --> 00:10:28,790
documenting all your visual components

00:10:26,059 --> 00:10:31,730
then I will show you how you can create

00:10:28,790 --> 00:10:34,399
a simple story a story is the unit test

00:10:31,730 --> 00:10:35,959
in storybook or the equivalent of the

00:10:34,399 --> 00:10:38,089
unit test I will show you what you can

00:10:35,959 --> 00:10:41,019
do with more complex components that

00:10:38,089 --> 00:10:43,309
have downward dependencies and

00:10:41,019 --> 00:10:45,679
ultimately how what you can do with a

00:10:43,309 --> 00:10:47,329
container component that has maybe a

00:10:45,679 --> 00:10:52,309
dependency on an asynchronous data

00:10:47,329 --> 00:10:55,470
source so then we move on to capturing

00:10:52,309 --> 00:10:57,570
images with the story shots Pauline

00:10:55,470 --> 00:11:01,350
and storing those images for each

00:10:57,570 --> 00:11:03,180
component and then later when we change

00:11:01,350 --> 00:11:05,850
the code you can run it again and

00:11:03,180 --> 00:11:08,280
compare the new snapshots with the old

00:11:05,850 --> 00:11:10,380
snapshots so when ultimately you can

00:11:08,280 --> 00:11:28,550
turn that into an automated visual

00:11:10,380 --> 00:11:28,550
regression test okay change a bit okay

00:11:28,790 --> 00:11:42,420
okay all right so is it running it's

00:11:34,380 --> 00:11:45,870
running okay who likes Star Wars not so

00:11:42,420 --> 00:11:48,090
many people well okay I'm gonna afford

00:11:45,870 --> 00:11:50,490
those who lifestyle bores I'm gonna give

00:11:48,090 --> 00:11:53,100
you a sneak peek into the new movie

00:11:50,490 --> 00:11:55,770
that's coming in December of course I'm

00:11:53,100 --> 00:11:58,790
joking right this has nothing to do with

00:11:55,770 --> 00:12:02,160
a new movie which we're all eager to see

00:11:58,790 --> 00:12:07,550
but instead it's just a silly game that

00:12:02,160 --> 00:12:10,700
I developed now in this game some virus

00:12:07,550 --> 00:12:13,260
spread over the galaxy and some

00:12:10,700 --> 00:12:16,050
well-known Star Wars characters turned

00:12:13,260 --> 00:12:19,020
into zombies and now your test will be

00:12:16,050 --> 00:12:22,140
in the game to fight against the zombies

00:12:19,020 --> 00:12:24,030
so all right here we have the zombies

00:12:22,140 --> 00:12:26,070
the team zombies and then on the other

00:12:24,030 --> 00:12:27,900
side we have the so-called renegades

00:12:26,070 --> 00:12:31,260
there they are

00:12:27,900 --> 00:12:33,660
people from both sides right and the

00:12:31,260 --> 00:12:36,480
computer already chose me an opponent

00:12:33,660 --> 00:12:40,680
from the zombies so let me choose

00:12:36,480 --> 00:12:44,100
somebody well let me choose Bo and let's

00:12:40,680 --> 00:12:47,100
fight okay so pong po1 it's by the way a

00:12:44,100 --> 00:12:48,960
sophisticated machine learning algorithm

00:12:47,100 --> 00:12:54,270
that calculates the winner based on

00:12:48,960 --> 00:12:57,900
different properties okay okay so

00:12:54,270 --> 00:13:03,480
another fight oh not looking good

00:12:57,900 --> 00:13:05,820
so yeah as you can see unfortunately who

00:13:03,480 --> 00:13:08,839
did I choose well anyway it turned into

00:13:05,820 --> 00:13:12,819
a zombie so I only have two team

00:13:08,839 --> 00:13:17,600
let's hope okay okay I'm doing good oh

00:13:12,819 --> 00:13:21,470
nice so I might actually even this oh

00:13:17,600 --> 00:13:25,910
yeah I defeated the zombies great so

00:13:21,470 --> 00:13:27,350
that's the the application now okay so

00:13:25,910 --> 00:13:29,059
let's let's take a look at this

00:13:27,350 --> 00:13:33,410
application so you can kind of imagine

00:13:29,059 --> 00:13:35,509
that maybe this is a component write a

00:13:33,410 --> 00:13:38,360
low-level presentation component and

00:13:35,509 --> 00:13:41,769
then the whole team is rendered with

00:13:38,360 --> 00:13:46,660
another component there kind of has a

00:13:41,769 --> 00:13:50,709
dependency on this component so let's

00:13:46,660 --> 00:13:54,259
okay so let's take a look at the

00:13:50,709 --> 00:13:56,600
structure quickly so I'm not going to go

00:13:54,259 --> 00:13:59,089
into the details but I'm serving the the

00:13:56,600 --> 00:14:01,249
backend for this application from my

00:13:59,089 --> 00:14:03,110
local machine so I have a rest server

00:14:01,249 --> 00:14:08,149
and on top of that I have a graph cure

00:14:03,110 --> 00:14:10,069
server for another talk but for now I'm

00:14:08,149 --> 00:14:16,669
going to just going to focus on the

00:14:10,069 --> 00:14:19,819
clients part and in this clients I have

00:14:16,669 --> 00:14:21,919
a couple of libraries and most

00:14:19,819 --> 00:14:24,829
importantly I have the presentation

00:14:21,919 --> 00:14:26,419
components right so in the presentation

00:14:24,829 --> 00:14:29,779
components I have all the components

00:14:26,419 --> 00:14:36,019
that are dumb components operate with

00:14:29,779 --> 00:14:39,949
inputs and outputs okay so how can I

00:14:36,019 --> 00:14:43,999
then take this component and render it

00:14:39,949 --> 00:14:46,160
in isolation so for this I can install

00:14:43,999 --> 00:14:48,949
storybook storybook I'm not going to

00:14:46,160 --> 00:14:53,089
actually install it I cheated and I

00:14:48,949 --> 00:14:56,779
already installed it but then I'm gonna

00:14:53,089 --> 00:15:02,989
just stop the application and run

00:14:56,779 --> 00:15:09,769
storybook and if I run storybook evil in

00:15:02,989 --> 00:15:13,339
a second just building it's really quick

00:15:09,769 --> 00:15:14,460
by the way compared to maybe compiling a

00:15:13,339 --> 00:15:18,750
larger application

00:15:14,460 --> 00:15:23,130
okay so by default I don't have any

00:15:18,750 --> 00:15:26,730
stories right so let's create one story

00:15:23,130 --> 00:15:28,529
which as I said is a unit test for

00:15:26,730 --> 00:15:32,130
original digital company you can think

00:15:28,529 --> 00:15:37,459
about a unit test like unit so I'm going

00:15:32,130 --> 00:15:40,560
to go here make it larger

00:15:37,459 --> 00:15:43,170
okay I'm gonna copy the name of this

00:15:40,560 --> 00:15:49,459
component and then create a new file I'm

00:15:43,170 --> 00:15:54,029
gonna name it dot stories dot yes okay

00:15:49,459 --> 00:15:57,720
so it's an empty file so how do I create

00:15:54,029 --> 00:16:00,839
a unit test here okay I'm writing

00:15:57,720 --> 00:16:04,050
stories off and I'm obviously there can

00:16:00,839 --> 00:16:06,750
be multiple test cases for this

00:16:04,050 --> 00:16:11,459
component but this is going to bundle

00:16:06,750 --> 00:16:16,589
the test cases here so I'm going to just

00:16:11,459 --> 00:16:24,300
name it after the component okay and

00:16:16,589 --> 00:16:28,800
then I'm going to I'm going to name this

00:16:24,300 --> 00:16:31,260
test case and I'm going to name it

00:16:28,800 --> 00:16:38,970
renegade view because I want to render a

00:16:31,260 --> 00:16:41,490
renegade character there so okay I'm

00:16:38,970 --> 00:16:49,410
adding the function that configures this

00:16:41,490 --> 00:16:56,610
story and what I do just simply yes I'm

00:16:49,410 --> 00:16:59,490
specifying the component so with that so

00:16:56,610 --> 00:17:03,029
with that if I go back tada

00:16:59,490 --> 00:17:05,250
storybook recognize my story and it

00:17:03,029 --> 00:17:07,500
already rendered something now of course

00:17:05,250 --> 00:17:09,929
this component has a couple of inputs

00:17:07,500 --> 00:17:11,939
that I am not supplying here so it

00:17:09,929 --> 00:17:13,439
doesn't look good right now but you can

00:17:11,939 --> 00:17:16,110
see that on the left side I have the

00:17:13,439 --> 00:17:19,650
collection of my stories just currently

00:17:16,110 --> 00:17:24,300
just one okay so what do I do about it

00:17:19,650 --> 00:17:26,049
well in this props property I can supply

00:17:24,300 --> 00:17:32,039
some inputs to my

00:17:26,049 --> 00:17:39,960
opponent so I can say I want this name

00:17:32,039 --> 00:17:39,960
and I have an image URL as well and it's

00:17:48,470 --> 00:17:58,009
if I did it right

00:17:51,820 --> 00:18:02,059
no just one more zero all right sorry

00:17:58,009 --> 00:18:04,250
as you can see I have I have worked with

00:18:02,059 --> 00:18:06,289
this particular presentation component

00:18:04,250 --> 00:18:09,049
without any other parts of the

00:18:06,289 --> 00:18:11,720
application I supply the inputs and I

00:18:09,049 --> 00:18:14,419
got it rendered on the screen very nice

00:18:11,720 --> 00:18:16,190
but if you go into this component you

00:18:14,419 --> 00:18:21,049
can see that there are some other inputs

00:18:16,190 --> 00:18:24,639
here that I am missing already so what I

00:18:21,049 --> 00:18:27,259
can do is just copy this part right and

00:18:24,639 --> 00:18:30,980
I'm gonna name it

00:18:27,259 --> 00:18:37,759
zombie view why not and then I'm going

00:18:30,980 --> 00:18:40,909
to say zombie true and okay I have this

00:18:37,759 --> 00:18:45,220
other story here so yeah

00:18:40,909 --> 00:18:50,500
renegades Amba view I have some other

00:18:45,220 --> 00:18:50,500
some other things here as well so I can

00:18:50,620 --> 00:19:01,720
say selected I'm gonna say zombie true

00:18:57,590 --> 00:19:09,830
and so at the - and I will name it some

00:19:01,720 --> 00:19:12,710
selected okay and it's there but I have

00:19:09,830 --> 00:19:15,740
one problem in the CSS there is some

00:19:12,710 --> 00:19:18,799
negative margins there so what do I do

00:19:15,740 --> 00:19:21,440
about it so you can get you get the idea

00:19:18,799 --> 00:19:23,120
you can define these stories with

00:19:21,440 --> 00:19:26,870
multiple combinations of the input

00:19:23,120 --> 00:19:30,139
properties and storable storybook will

00:19:26,870 --> 00:19:34,090
just pick up those and it will render

00:19:30,139 --> 00:19:40,460
them so now I have this problem that

00:19:34,090 --> 00:19:42,710
it's slightly off the screen okay so

00:19:40,460 --> 00:19:46,250
what I can do about that is that I can

00:19:42,710 --> 00:19:51,950
say instead of this part I can say

00:19:46,250 --> 00:19:55,480
template template and I can just put an

00:19:51,950 --> 00:19:55,480
HTML template there

00:19:59,420 --> 00:20:10,950
just a second okay okay so here I have

00:20:07,650 --> 00:20:11,790
the component and put it to some work

00:20:10,950 --> 00:20:15,630
right

00:20:11,790 --> 00:20:18,720
why doesn't it work well if I am

00:20:15,630 --> 00:20:24,560
specifying the template I will I will

00:20:18,720 --> 00:20:29,660
also have to add a decorator here and

00:20:24,560 --> 00:20:29,660
what I'm doing with this really is

00:20:30,200 --> 00:20:39,900
something very similar to an angular

00:20:33,000 --> 00:20:43,200
module okay so I'm going to say

00:20:39,900 --> 00:20:50,820
declarations I need to declare this

00:20:43,200 --> 00:20:52,380
component and I can also do imports okay

00:20:50,820 --> 00:20:54,450
so this is what I need for this

00:20:52,380 --> 00:20:57,570
component right and if I go back well

00:20:54,450 --> 00:21:01,650
it's there the only problem is whatever

00:20:57,570 --> 00:21:06,540
the properties yeah that's not there so

00:21:01,650 --> 00:21:11,430
what I can do here as well yes I'm just

00:21:06,540 --> 00:21:14,730
going to maybe do the name property so I

00:21:11,430 --> 00:21:18,030
can do something like this I can use the

00:21:14,730 --> 00:21:20,750
regular way of data binding that you

00:21:18,030 --> 00:21:24,360
have in angular and you can see it works

00:21:20,750 --> 00:21:27,600
so you know this is what you can do with

00:21:24,360 --> 00:21:30,510
just a simple component so now what I'm

00:21:27,600 --> 00:21:33,150
going to do is I'm going to write all

00:21:30,510 --> 00:21:35,630
the stories for all the components just

00:21:33,150 --> 00:21:35,630
pretty quickly

00:21:48,700 --> 00:21:56,730
just a second don't need this anymore

00:21:55,040 --> 00:22:00,539
[Music]

00:21:56,730 --> 00:22:03,609
and let's jump over to the master ban so

00:22:00,539 --> 00:22:07,720
in the background story book runs and

00:22:03,609 --> 00:22:12,549
picks up everything from the master ban

00:22:07,720 --> 00:22:15,039
so you can see that I have this all all

00:22:12,549 --> 00:22:16,779
kinds of you know visual tests for this

00:22:15,039 --> 00:22:21,359
component now some of these components

00:22:16,779 --> 00:22:25,090
for example the team view is a component

00:22:21,359 --> 00:22:31,119
that depends on other components so

00:22:25,090 --> 00:22:34,330
let's take a look at the HTML okay so

00:22:31,119 --> 00:22:36,519
you can see that there is a ng4 here and

00:22:34,330 --> 00:22:40,409
then in within the ng 4 I'm using the

00:22:36,519 --> 00:22:44,529
character box so what happens here is

00:22:40,409 --> 00:22:46,720
I'm using well first of all if I'm if

00:22:44,529 --> 00:22:49,539
I'm doing multiple stories it's a good

00:22:46,720 --> 00:22:52,779
idea right - to just create your

00:22:49,539 --> 00:22:56,739
properties as constants so you can reuse

00:22:52,779 --> 00:22:58,389
them and then in the stories when I'm

00:22:56,739 --> 00:22:59,080
adding the decorator and the module

00:22:58,389 --> 00:23:02,619
metadata

00:22:59,080 --> 00:23:06,999
I'm just specifying both components here

00:23:02,619 --> 00:23:09,460
right and in this case I'm using this

00:23:06,999 --> 00:23:11,799
template but I could just use the

00:23:09,460 --> 00:23:14,859
regular component version but what's

00:23:11,799 --> 00:23:18,460
important here is that I am pretty much

00:23:14,859 --> 00:23:20,619
mocking all the upwards dependencies but

00:23:18,460 --> 00:23:23,999
I am NOT mocking the downwards

00:23:20,619 --> 00:23:26,980
dependencies because they I need them to

00:23:23,999 --> 00:23:31,749
render this component so this is how I

00:23:26,980 --> 00:23:33,879
do it and then finally let's take a look

00:23:31,749 --> 00:23:39,429
at the container component so by the way

00:23:33,879 --> 00:23:43,690
as you can see I can I can use this pipe

00:23:39,429 --> 00:23:45,789
to to put my stories into different

00:23:43,690 --> 00:23:47,499
categories right here I have the

00:23:45,789 --> 00:23:50,649
presentation component and then I have

00:23:47,499 --> 00:23:53,470
the container components so this is a

00:23:50,649 --> 00:23:59,350
container component that depends on some

00:23:53,470 --> 00:24:08,110
asynchronous data if you if you go

00:23:59,350 --> 00:24:12,250
look at the cold air right here you can

00:24:08,110 --> 00:24:16,059
see that it has observable data bindings

00:24:12,250 --> 00:24:17,890
from a service well so what do you do

00:24:16,059 --> 00:24:21,429
about this well actually it's no

00:24:17,890 --> 00:24:23,799
surprise it's just like other unit tests

00:24:21,429 --> 00:24:26,620
you need to mock them so you just create

00:24:23,799 --> 00:24:31,870
a more class and then in the module

00:24:26,620 --> 00:24:35,860
metadata you just use it you know as as

00:24:31,870 --> 00:24:40,299
the class to provide the real service so

00:24:35,860 --> 00:24:46,419
that's all right okay so now very

00:24:40,299 --> 00:24:51,039
quickly what can you do to store the

00:24:46,419 --> 00:24:53,470
images of these components well so there

00:24:51,039 --> 00:24:55,450
is this plugin called story shots for

00:24:53,470 --> 00:24:57,250
story book that you can install I'm not

00:24:55,450 --> 00:25:00,309
going to go into the installation

00:24:57,250 --> 00:25:02,200
because it's a bit more complicated but

00:25:00,309 --> 00:25:05,230
ultimately what's important here is that

00:25:02,200 --> 00:25:10,600
I have created a separate library just

00:25:05,230 --> 00:25:15,460
for the story shots test file it's just

00:25:10,600 --> 00:25:17,860
one one test file right and the

00:25:15,460 --> 00:25:20,380
important part in this file is this

00:25:17,860 --> 00:25:22,299
well I'm where I'm initializing the

00:25:20,380 --> 00:25:25,270
story shots plug-in so I just tell that

00:25:22,299 --> 00:25:26,830
it's the angular framework I give it

00:25:25,270 --> 00:25:29,799
some configuration now the configuration

00:25:26,830 --> 00:25:33,340
you don't need to understand it too much

00:25:29,799 --> 00:25:38,650
but it does just point to the stories

00:25:33,340 --> 00:25:43,539
files and then I am also specifying that

00:25:38,650 --> 00:25:47,320
I want to compare newer and older

00:25:43,539 --> 00:25:51,630
versions of this component with images I

00:25:47,320 --> 00:25:59,140
could also do an HTML template compare

00:25:51,630 --> 00:26:01,470
but I want to do the images part okay so

00:25:59,140 --> 00:26:05,879
if I

00:26:01,470 --> 00:26:10,950
run this just like a unit test by the

00:26:05,879 --> 00:26:12,990
way you need to use jest so it's part of

00:26:10,950 --> 00:26:15,059
the configuration if you're not using

00:26:12,990 --> 00:26:18,000
just in your angular project you need to

00:26:15,059 --> 00:26:22,649
come to your just to run the story shots

00:26:18,000 --> 00:26:28,399
plug-in well yeah that's life yeah

00:26:22,649 --> 00:26:31,529
and so when I run it it will create

00:26:28,399 --> 00:26:34,559
these image snapshots the reason it's it

00:26:31,529 --> 00:26:36,659
is a bit slow it's because I configured

00:26:34,559 --> 00:26:39,899
the plug-in to wait one second before

00:26:36,659 --> 00:26:42,029
taking the screen shot because I'm

00:26:39,899 --> 00:26:45,509
loading images and although I'm loading

00:26:42,029 --> 00:26:47,549
them from my local machine well just to

00:26:45,509 --> 00:26:52,200
be sure I configure it for one second

00:26:47,549 --> 00:26:54,179
now the result of the oh by the way so

00:26:52,200 --> 00:26:56,940
you know as you can see everything is

00:26:54,179 --> 00:26:58,950
green right when you run it the first

00:26:56,940 --> 00:27:02,580
time it will just create the snapshots

00:26:58,950 --> 00:27:04,950
like that and you can for example take a

00:27:02,580 --> 00:27:08,179
look at it so this is the image created

00:27:04,950 --> 00:27:11,039
from my component from my you know my

00:27:08,179 --> 00:27:15,179
visual unit test that I made in

00:27:11,039 --> 00:27:18,389
storybook okay so now what can you do

00:27:15,179 --> 00:27:24,480
with this why is it useful well you can

00:27:18,389 --> 00:27:27,419
go into the CSS variables for example

00:27:24,480 --> 00:27:29,039
and you know you're wondering what would

00:27:27,419 --> 00:27:35,070
happen what would be the effect of

00:27:29,039 --> 00:27:37,919
changing this well let's run the visual

00:27:35,070 --> 00:27:44,700
regression test right it takes some time

00:27:37,919 --> 00:27:47,700
and here because storybook is watching

00:27:44,700 --> 00:27:50,669
all the files you can actually see if it

00:27:47,700 --> 00:27:53,220
found something because it will just

00:27:50,669 --> 00:27:57,779
reload all the files when a new file is

00:27:53,220 --> 00:28:01,480
written and I hope people to demonstrate

00:27:57,779 --> 00:28:10,030
I'm saying come on

00:28:01,480 --> 00:28:15,710
spits low yes one failed okay

00:28:10,030 --> 00:28:22,330
one failed and I can go here to my image

00:28:15,710 --> 00:28:27,260
snapshots and I can see a diff and well

00:28:22,330 --> 00:28:29,480
okay I hope you can see so there is the

00:28:27,260 --> 00:28:31,640
old version there is the new version and

00:28:29,480 --> 00:28:35,840
in the middle you can see the difference

00:28:31,640 --> 00:28:38,840
now this algorithm works by subtracting

00:28:35,840 --> 00:28:40,250
the two images and so when you're

00:28:38,840 --> 00:28:43,450
configuring this whole thing you can

00:28:40,250 --> 00:28:47,000
specify a threshold in percent

00:28:43,450 --> 00:28:49,220
percentage because sometimes there's

00:28:47,000 --> 00:28:51,790
slight changes between you know the

00:28:49,220 --> 00:29:00,410
images that you don't want to actually

00:28:51,790 --> 00:29:03,130
treat as an error yeah so that's it and

00:29:00,410 --> 00:29:07,880
so back to this slide

00:29:03,130 --> 00:29:10,610
okay so right so so we took a quick look

00:29:07,880 --> 00:29:12,440
at how you know that the sample

00:29:10,610 --> 00:29:14,930
application how to add the new story

00:29:12,440 --> 00:29:17,810
which is the visual unit test equivalent

00:29:14,930 --> 00:29:20,900
in storybook what you can do with more

00:29:17,810 --> 00:29:23,570
complex components how you can then

00:29:20,900 --> 00:29:26,480
create image snapshots store them and

00:29:23,570 --> 00:29:28,820
compare them to newer versions and well

00:29:26,480 --> 00:29:31,160
automated vision regression test is just

00:29:28,820 --> 00:29:32,930
as easy as running this process in your

00:29:31,160 --> 00:29:36,470
continuous integration as part of your

00:29:32,930 --> 00:29:40,010
continuous integration okay

00:29:36,470 --> 00:29:43,040
so visual testing is here

00:29:40,010 --> 00:29:44,870
don't use your losers trust and there is

00:29:43,040 --> 00:29:48,200
really no excuse not to do it because

00:29:44,870 --> 00:29:56,950
it's so easy thank you

00:29:48,200 --> 00:29:56,950

YouTube URL: https://www.youtube.com/watch?v=JrO3qjBSddY


