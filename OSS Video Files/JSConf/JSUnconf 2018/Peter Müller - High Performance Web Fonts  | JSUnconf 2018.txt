Title: Peter MÃ¼ller - High Performance Web Fonts  | JSUnconf 2018
Publication date: 2018-05-14
Playlist: JSUnconf 2018
Description: 
	
Captions: 
	00:00:02,330 --> 00:00:05,359
[Music]

00:00:08,010 --> 00:00:13,270
thank you and you can hear me fine

00:00:10,390 --> 00:00:16,150
everybody yes okay welcome back from

00:00:13,270 --> 00:00:17,950
lunch I hope you're not too sleepy I'll

00:00:16,150 --> 00:00:19,810
try to make it dramatic I certainly had

00:00:17,950 --> 00:00:21,910
some drama in the in the break here

00:00:19,810 --> 00:00:24,400
turns out my laptop did not connect to

00:00:21,910 --> 00:00:26,020
the display so that was my break and I

00:00:24,400 --> 00:00:28,990
was working what I'm still have a mild

00:00:26,020 --> 00:00:31,720
state of panic yeah my name is Peter I'm

00:00:28,990 --> 00:00:34,050
from Copenhagen I've been a front-end

00:00:31,720 --> 00:00:38,499
developer for 15 years now

00:00:34,050 --> 00:00:41,649
time flies I'm very much into tooling I

00:00:38,499 --> 00:00:45,670
want to I want to enable people to do

00:00:41,649 --> 00:00:49,569
complex stuff in a simple way and this

00:00:45,670 --> 00:00:52,269
talk is about techniques how to load web

00:00:49,569 --> 00:00:55,809
fonts fast and also tooling that I built

00:00:52,269 --> 00:00:58,239
to help you do that so first of all

00:00:55,809 --> 00:01:01,420
according to the HTTP archive which

00:00:58,239 --> 00:01:03,639
scrapes like millions of pages based on

00:01:01,420 --> 00:01:05,409
Alexa rank so like the most popular

00:01:03,639 --> 00:01:07,689
pages on the Internet

00:01:05,409 --> 00:01:10,840
70% of those pages are using web fonts

00:01:07,689 --> 00:01:13,659
and that is a performance problem

00:01:10,840 --> 00:01:15,729
because if you don't do something extra

00:01:13,659 --> 00:01:17,109
to make a web fonts perform then they

00:01:15,729 --> 00:01:20,140
will actually detract from your

00:01:17,109 --> 00:01:22,140
performance and that has to do with the

00:01:20,140 --> 00:01:24,579
wave fonts are loaded but I'm gonna

00:01:22,140 --> 00:01:26,259
preempt myself and actually start out

00:01:24,579 --> 00:01:29,020
with a demo and then we can look at the

00:01:26,259 --> 00:01:31,450
difference between what default web

00:01:29,020 --> 00:01:33,670
fonts performance profile could be and

00:01:31,450 --> 00:01:35,289
what an optimized one could be so I'm

00:01:33,670 --> 00:01:37,479
gonna start out with showing you the

00:01:35,289 --> 00:01:39,189
tool and then I'll walk you through the

00:01:37,479 --> 00:01:41,619
techniques applied which you could also

00:01:39,189 --> 00:01:47,049
apply manually and then I'll explain

00:01:41,619 --> 00:01:49,719
things as we go so first of all I have a

00:01:47,049 --> 00:01:54,310
blog very rarely updated like two years

00:01:49,719 --> 00:01:57,670
ago so this is a standard jackhole site

00:01:54,310 --> 00:01:59,979
it's hosted on net Liffe I so I get

00:01:57,670 --> 00:02:02,649
static file hosting which is fast I have

00:01:59,979 --> 00:02:04,630
a CDN which which delivers things fast I

00:02:02,649 --> 00:02:06,579
run a static build system on this so

00:02:04,630 --> 00:02:08,140
everything is optimized there's bundling

00:02:06,579 --> 00:02:13,220
this minification there's compression

00:02:08,140 --> 00:02:15,920
all those things and the performer

00:02:13,220 --> 00:02:18,080
profiles actually not that good so I can

00:02:15,920 --> 00:02:21,980
show you first of all I'm gonna run the

00:02:18,080 --> 00:02:25,490
demo here if Network permitting I'm

00:02:21,980 --> 00:02:27,320
gonna run my tool here I'm gonna install

00:02:25,490 --> 00:02:29,150
the tool called sub font which is an

00:02:27,320 --> 00:02:30,830
open source tool I built if the network

00:02:29,150 --> 00:02:33,710
doesn't work we'll just skip ahead

00:02:30,830 --> 00:02:34,220
because I have a fallback it looks like

00:02:33,710 --> 00:02:36,260
it's working

00:02:34,220 --> 00:02:38,600
thank you for not running Dropbox right

00:02:36,260 --> 00:02:41,000
now nice of you okay

00:02:38,600 --> 00:02:43,370
I installed sub font so I'm gonna I'm

00:02:41,000 --> 00:02:48,050
gonna open my package JSON and I'm gonna

00:02:43,370 --> 00:02:50,630
autumn and my build system my build

00:02:48,050 --> 00:02:52,540
system is currently bundled x''k Jake

00:02:50,630 --> 00:02:55,520
you'll build so it's a Jekyll page and

00:02:52,540 --> 00:03:00,020
after I've done that I'm gonna say soft

00:02:55,520 --> 00:03:01,850
font bill slash index dot HTML which is

00:03:00,020 --> 00:03:05,450
where the build artifacts from Jekyll

00:03:01,850 --> 00:03:07,370
will be I'm gonna say - I which means

00:03:05,450 --> 00:03:09,170
that it'll clobber the files which I'm

00:03:07,370 --> 00:03:14,650
fine with because it's a build artifact

00:03:09,170 --> 00:03:19,489
and then I'm gonna say inline CSS save

00:03:14,650 --> 00:03:21,709
and I'm gonna do npm run build so what

00:03:19,489 --> 00:03:23,810
will happen now is the Jekyll build will

00:03:21,709 --> 00:03:26,510
will run I will have a build artifact

00:03:23,810 --> 00:03:28,520
and index.html sup font the tool will go

00:03:26,510 --> 00:03:30,290
in a statically analyze the page figure

00:03:28,520 --> 00:03:32,510
out that I have google fonts and then

00:03:30,290 --> 00:03:35,540
it'll do magic which I will show you in

00:03:32,510 --> 00:03:37,220
in a moment Network permitting because

00:03:35,540 --> 00:03:40,000
now it's actually going on the network

00:03:37,220 --> 00:03:43,610
to fetch funds from from Google Fonts

00:03:40,000 --> 00:03:47,840
and then my post optimization tool is

00:03:43,610 --> 00:03:51,410
ran just like normally and I cheated I

00:03:47,840 --> 00:03:54,650
already prepared a web page test or run

00:03:51,410 --> 00:04:00,200
on my master before the optimization and

00:03:54,650 --> 00:04:02,209
one after and it looks like this so I

00:04:00,200 --> 00:04:05,420
don't know if you can see this the upper

00:04:02,209 --> 00:04:08,590
timeline is my blog as I just showed it

00:04:05,420 --> 00:04:11,030
to you on the different tab it takes

00:04:08,590 --> 00:04:14,170
four and a half to five seconds before I

00:04:11,030 --> 00:04:16,850
get the first paint and then it takes

00:04:14,170 --> 00:04:18,739
slightly somewhere in between six and a

00:04:16,850 --> 00:04:21,500
half seconds and seven seconds to get

00:04:18,739 --> 00:04:23,960
the fonts that's a long time this is

00:04:21,500 --> 00:04:25,729
done on a moto 4G and a slow 3G

00:04:23,960 --> 00:04:26,170
connection that is deemed to be the

00:04:25,729 --> 00:04:28,810
current

00:04:26,170 --> 00:04:30,490
global average so if you have pages that

00:04:28,810 --> 00:04:34,270
you're interested in also serving in

00:04:30,490 --> 00:04:37,330
South America Africa Asia then you want

00:04:34,270 --> 00:04:40,090
to perform on this profile the bottom

00:04:37,330 --> 00:04:42,610
timeline timeline is the after after I

00:04:40,090 --> 00:04:45,190
ran this tool and you can see that I

00:04:42,610 --> 00:04:47,620
have a first paint at four seconds

00:04:45,190 --> 00:04:49,990
instead of seven seconds because I

00:04:47,620 --> 00:04:53,230
already have the fonts that's a massive

00:04:49,990 --> 00:04:54,820
difference and obviously the difference

00:04:53,230 --> 00:04:57,640
will be less pronounced if you have a

00:04:54,820 --> 00:04:59,520
fast Network and a fast CPU but the

00:04:57,640 --> 00:05:03,250
difference will still be perceivable

00:04:59,520 --> 00:05:06,070
so let's look into why why is there this

00:05:03,250 --> 00:05:10,540
massive difference and the upper the

00:05:06,070 --> 00:05:12,850
upper line is running Google Fonts as as

00:05:10,540 --> 00:05:15,310
suggested by Google Fonts it's included

00:05:12,850 --> 00:05:16,900
with a link tag it's including the style

00:05:15,310 --> 00:05:19,270
sheet from Google Fonts which will then

00:05:16,900 --> 00:05:24,420
eventually point at the font files which

00:05:19,270 --> 00:05:26,710
are needed so let's look at the timeline

00:05:24,420 --> 00:05:28,930
is this big enough that you can see it

00:05:26,710 --> 00:05:29,230
you think I can up it one more there we

00:05:28,930 --> 00:05:32,920
go

00:05:29,230 --> 00:05:35,050
alright so this is a this is my page you

00:05:32,920 --> 00:05:37,180
can see the initial request has a slow

00:05:35,050 --> 00:05:40,780
T&S it has a slow connection time it has

00:05:37,180 --> 00:05:42,430
an SSL handshake then it has a roundtrip

00:05:40,780 --> 00:05:45,310
for waiting for the data and then the

00:05:42,430 --> 00:05:48,400
index.html drops in that's at around 2.2

00:05:45,310 --> 00:05:51,700
seconds then a bunch of new connections

00:05:48,400 --> 00:05:53,410
are triggered my CSS some images and the

00:05:51,700 --> 00:05:55,540
Google Fonts CSS and then you see oh I

00:05:53,410 --> 00:05:57,610
need to know the DNS I need another

00:05:55,540 --> 00:05:59,650
connection I need another SSL roundtrip

00:05:57,610 --> 00:06:03,160
and then I need another entre for the

00:05:59,650 --> 00:06:04,690
data and then the green line indicates

00:06:03,160 --> 00:06:07,750
that now the browser is ready to render

00:06:04,690 --> 00:06:11,050
now it has loaded this external blocking

00:06:07,750 --> 00:06:13,570
Google style sheet and and it says oh

00:06:11,050 --> 00:06:16,990
there are some fonts and I need to fetch

00:06:13,570 --> 00:06:19,180
them and then it does another DNS lookup

00:06:16,990 --> 00:06:20,860
and another connection and another SSL

00:06:19,180 --> 00:06:24,450
handshakes and then it and then it

00:06:20,860 --> 00:06:27,430
downloads the fonts this is very slow

00:06:24,450 --> 00:06:30,310
and this is like what what Google serves

00:06:27,430 --> 00:06:31,930
you as the default it doesn't even serve

00:06:30,310 --> 00:06:34,390
the fonts from the same domain as the

00:06:31,930 --> 00:06:36,160
CSS so you don't already have a warmed

00:06:34,390 --> 00:06:38,860
up connection which you can request the

00:06:36,160 --> 00:06:39,590
fonts on if you use google fonts

00:06:38,860 --> 00:06:42,050
out-of-the-box

00:06:39,590 --> 00:06:45,770
this is what you'll get and we can do

00:06:42,050 --> 00:06:47,030
better so this is the after timeline I'm

00:06:45,770 --> 00:06:50,060
going to switch back and forth so you

00:06:47,030 --> 00:06:51,790
can just see later so what happens here

00:06:50,060 --> 00:06:53,960
is that my index file comes in

00:06:51,790 --> 00:06:56,150
approximately the same time that there's

00:06:53,960 --> 00:06:59,660
no difference and then immediately I

00:06:56,150 --> 00:07:03,650
download the four fonts in parallel with

00:06:59,660 --> 00:07:05,870
requesting my my stylesheet and and all

00:07:03,650 --> 00:07:07,910
those things and then you can see later

00:07:05,870 --> 00:07:10,340
after after the paint after the three

00:07:07,910 --> 00:07:12,440
point two ish seconds the green line

00:07:10,340 --> 00:07:15,920
where the browser has already rendered

00:07:12,440 --> 00:07:18,290
with fonts it does some more things it

00:07:15,920 --> 00:07:20,120
downloads the google fonts CSS and then

00:07:18,290 --> 00:07:21,860
it downs upload and loads another file

00:07:20,120 --> 00:07:26,630
that's a part I can't explain right now

00:07:21,860 --> 00:07:28,550
I'll fix that eventually so you can kind

00:07:26,630 --> 00:07:32,300
of perceive the difference that here you

00:07:28,550 --> 00:07:35,060
have a very very horizontal waterfall

00:07:32,300 --> 00:07:36,880
chart and here it becomes more vertical

00:07:35,060 --> 00:07:40,370
so it does more things at the same time

00:07:36,880 --> 00:07:43,490
leverage is http/2 and and downloads

00:07:40,370 --> 00:07:46,490
things in parallel so I'll show you

00:07:43,490 --> 00:07:49,940
which techniques I I used to achieve

00:07:46,490 --> 00:07:54,760
this but let's first do a small video

00:07:49,940 --> 00:07:59,360
comparison so just to have a feeling for

00:07:54,760 --> 00:08:03,560
what the perceived difference is that's

00:07:59,360 --> 00:08:06,110
what the user experience is right okay

00:08:03,560 --> 00:08:08,600
let's let's dive into what what actually

00:08:06,110 --> 00:08:15,280
happened here this should probably be

00:08:08,600 --> 00:08:19,390
smaller and this should be prettier okay

00:08:15,280 --> 00:08:23,750
so this is where things get interesting

00:08:19,390 --> 00:08:26,060
my tool looked at the original link

00:08:23,750 --> 00:08:28,130
include from from from google fonts for

00:08:26,060 --> 00:08:31,480
the star seed and that it analyzed the

00:08:28,130 --> 00:08:34,130
page pulled down the pages to local

00:08:31,480 --> 00:08:37,040
which means that now I can download the

00:08:34,130 --> 00:08:38,900
font or it pulled on the fonts to to my

00:08:37,040 --> 00:08:41,360
local server which means that now I can

00:08:38,900 --> 00:08:44,660
reuse my already warm HTTP to connection

00:08:41,360 --> 00:08:47,270
from my host and I preload the fonts

00:08:44,660 --> 00:08:49,340
which have a known file name the trick

00:08:47,270 --> 00:08:51,500
is with google fonts and with any web

00:08:49,340 --> 00:08:52,400
phone provider out there like Typekit or

00:08:51,500 --> 00:08:54,740
similar

00:08:52,400 --> 00:08:57,590
none of them provide stable URLs for the

00:08:54,740 --> 00:08:59,840
font files so you cannot even put a

00:08:57,590 --> 00:09:01,250
preload header and and say I want to

00:08:59,840 --> 00:09:03,950
preload this well file because

00:09:01,250 --> 00:09:05,240
eventually it might change the URL so we

00:09:03,950 --> 00:09:07,040
cannot guarantee that it actually works

00:09:05,240 --> 00:09:08,600
the worst case is you'll spend the

00:09:07,040 --> 00:09:10,340
download time and downloading the font

00:09:08,600 --> 00:09:11,870
file and then you download a different

00:09:10,340 --> 00:09:14,840
font file which is essentially the same

00:09:11,870 --> 00:09:17,630
thing so by pulling it down on your own

00:09:14,840 --> 00:09:20,360
server you can leverage the preload by a

00:09:17,630 --> 00:09:22,070
by having a guaranteed file name and you

00:09:20,360 --> 00:09:25,160
can use your already warmed up already

00:09:22,070 --> 00:09:26,840
connected HTTP to connection if you

00:09:25,160 --> 00:09:29,930
remember one thing then then it's this

00:09:26,840 --> 00:09:32,120
one this is like 80 to 90 percent of the

00:09:29,930 --> 00:09:35,990
speed-up you just saw all the rest is

00:09:32,120 --> 00:09:38,930
just geekery like preload and get your

00:09:35,990 --> 00:09:40,430
fonts local so this one more thing I'm

00:09:38,930 --> 00:09:41,930
doing which is cheap which you can do

00:09:40,430 --> 00:09:46,430
yourself when you have the funds local

00:09:41,930 --> 00:09:49,060
you can add a font display font display

00:09:46,430 --> 00:09:51,830
has a few options on how to deal with

00:09:49,060 --> 00:09:54,380
the limbo in between the page being

00:09:51,830 --> 00:09:56,720
render and font being downloaded and I

00:09:54,380 --> 00:09:58,640
recommend having fun to play swap which

00:09:56,720 --> 00:10:00,080
will immediately draw the fallback font

00:09:58,640 --> 00:10:02,120
as soon as it as soon as your page

00:10:00,080 --> 00:10:04,730
renders and then whenever the web font

00:10:02,120 --> 00:10:06,500
comes in and switches them because this

00:10:04,730 --> 00:10:08,480
means that the time the time to

00:10:06,500 --> 00:10:10,670
meaningful paint the time where the user

00:10:08,480 --> 00:10:13,400
can actually read the page and see if

00:10:10,670 --> 00:10:15,620
it's useful is the same as the time to

00:10:13,400 --> 00:10:18,260
first paint so the larger uses to

00:10:15,620 --> 00:10:19,940
immediately see do I want to do even

00:10:18,260 --> 00:10:21,560
want to be here do I want to scroll or

00:10:19,940 --> 00:10:23,270
engage with this page and then

00:10:21,560 --> 00:10:28,520
eventually the nice experience will come

00:10:23,270 --> 00:10:29,840
in when the web font drops in so in

00:10:28,520 --> 00:10:32,510
order to serve it from local I'm using

00:10:29,840 --> 00:10:36,320
the same technique as Google toss prefer

00:10:32,510 --> 00:10:38,690
local otherwise use this URL for both -

00:10:36,320 --> 00:10:40,460
and this URL for what you don't need to

00:10:38,690 --> 00:10:43,610
make anymore gymnastics these days the

00:10:40,460 --> 00:10:45,050
process are good enough that basically

00:10:43,610 --> 00:10:49,160
all the process you want to support or

00:10:45,050 --> 00:10:50,720
any support wofe and I'm pre loading

00:10:49,160 --> 00:10:53,930
only there were two files because

00:10:50,720 --> 00:10:56,960
preload support is a subset of waft of

00:10:53,930 --> 00:10:58,940
to support so it's safe to say preload

00:10:56,960 --> 00:11:00,710
above two files because if the browser

00:10:58,940 --> 00:11:03,020
doesn't understand it it's a guarantee

00:11:00,710 --> 00:11:05,320
that it probably doesn't understand what

00:11:03,020 --> 00:11:05,320
you either

00:11:05,939 --> 00:11:11,149
and then I'm doing something tricky so

00:11:08,819 --> 00:11:14,309
there's a little script down here

00:11:11,149 --> 00:11:18,359
preload is supported by around 60% of

00:11:14,309 --> 00:11:20,129
all browsers but there exists a CSS

00:11:18,359 --> 00:11:22,859
front loading API which you can access

00:11:20,129 --> 00:11:25,109
through JavaScript and through this you

00:11:22,859 --> 00:11:27,299
can actually trigger a load of the font

00:11:25,109 --> 00:11:29,489
even for browsers that don't have P load

00:11:27,299 --> 00:11:31,049
support yet this is what fun face

00:11:29,489 --> 00:11:34,319
observer does if you've ever heard of

00:11:31,049 --> 00:11:35,970
that which lets you like do a promise

00:11:34,319 --> 00:11:37,679
based thing where I say I want to load

00:11:35,970 --> 00:11:40,079
this font and when you're done I can

00:11:37,679 --> 00:11:41,970
switch classes so I can like do a

00:11:40,079 --> 00:11:44,129
loading spinner or or control the

00:11:41,970 --> 00:11:45,569
experience in the in between in the

00:11:44,129 --> 00:11:48,239
limbo between not having the fund and

00:11:45,569 --> 00:11:50,399
having written at the page this is the

00:11:48,239 --> 00:11:52,589
very short version what it's doing it

00:11:50,399 --> 00:11:55,979
says it's iterating through the fonts on

00:11:52,589 --> 00:11:57,749
on the on page and then I'm saying if it

00:11:55,979 --> 00:11:59,459
has this specific name underscore

00:11:57,749 --> 00:12:03,299
underscore subset which I'll come back

00:11:59,459 --> 00:12:06,139
to all of these above have the have

00:12:03,299 --> 00:12:08,339
underscore underscore subset in the name

00:12:06,139 --> 00:12:10,769
so if it has underscore underscore

00:12:08,339 --> 00:12:13,049
subset in the name please try and load

00:12:10,769 --> 00:12:14,999
it and there's a try-catch around it

00:12:13,049 --> 00:12:18,359
because this API isn't supported by all

00:12:14,999 --> 00:12:19,919
browsers so I'll just do an empty error

00:12:18,359 --> 00:12:21,059
handling I don't care about the result I

00:12:19,919 --> 00:12:24,629
just want to trigger that download

00:12:21,059 --> 00:12:26,399
immediately if it's available again if

00:12:24,629 --> 00:12:27,809
you remember anything these are these

00:12:26,399 --> 00:12:31,409
are the preload things you can do to get

00:12:27,809 --> 00:12:35,399
like 90% of the speed-up I just got so

00:12:31,409 --> 00:12:39,059
now let's talk about the hairy stuff I'm

00:12:35,399 --> 00:12:42,449
not ok with 90% I want to enable people

00:12:39,059 --> 00:12:46,220
to get perfect results with very little

00:12:42,449 --> 00:12:49,829
work so I thought this sub setting thing

00:12:46,220 --> 00:12:51,629
selecting a subset of glyphs that are

00:12:49,829 --> 00:12:54,239
used on my page and excluding the ones

00:12:51,629 --> 00:12:56,249
that are not using on my page that seems

00:12:54,239 --> 00:12:57,869
like a doable thing right there are

00:12:56,249 --> 00:13:00,089
tools to do it if you know what glyphs

00:12:57,869 --> 00:13:02,429
you have you can apply a tool on your

00:13:00,089 --> 00:13:04,979
font and then you can get a reduced font

00:13:02,429 --> 00:13:08,879
that only has the glyphs you need easy

00:13:04,979 --> 00:13:11,819
right after so after we did this we

00:13:08,879 --> 00:13:14,369
coined a concept called hybrids driven

00:13:11,819 --> 00:13:15,959
development and that's what this is you

00:13:14,369 --> 00:13:18,629
think it's easy and then just keeps

00:13:15,959 --> 00:13:19,209
going so let's dive into what's actually

00:13:18,629 --> 00:13:23,379
happening

00:13:19,209 --> 00:13:27,009
so you see that after I've figured out

00:13:23,379 --> 00:13:31,300
how to how to know what cliffs I have on

00:13:27,009 --> 00:13:34,269
my page that's hard I do this thing

00:13:31,300 --> 00:13:36,939
where I have a new name for the font the

00:13:34,269 --> 00:13:38,499
original name was notice Arif now the

00:13:36,939 --> 00:13:42,369
name is notice Arif on the score on the

00:13:38,499 --> 00:13:45,129
score subset so I'm actually including

00:13:42,369 --> 00:13:48,339
the subset here and I've modified my CSS

00:13:45,129 --> 00:13:51,399
so it points at the subset this is not

00:13:48,339 --> 00:13:53,679
recommended practice in fact web font

00:13:51,399 --> 00:13:55,660
experts will specifically tell you to

00:13:53,679 --> 00:13:56,259
not too aggressive subsetting it is an

00:13:55,660 --> 00:14:00,879
anti-pattern

00:13:56,259 --> 00:14:02,559
and it just so happens that so this is

00:14:00,879 --> 00:14:05,649
an example of a subset where only the

00:14:02,559 --> 00:14:07,839
English character sets are downloaded

00:14:05,649 --> 00:14:11,709
but it has this effect if you do it

00:14:07,839 --> 00:14:15,040
wrong you might recognize this as as

00:14:11,709 --> 00:14:15,610
Germans I have a um loud in my in my

00:14:15,040 --> 00:14:17,319
last name

00:14:15,610 --> 00:14:20,740
I've had many different renderings of

00:14:17,319 --> 00:14:23,970
you or not both both this one and also

00:14:20,740 --> 00:14:26,379
different characters especially Airlines

00:14:23,970 --> 00:14:28,660
but what happened here was there was a

00:14:26,379 --> 00:14:32,139
subset that and somebody forgot to

00:14:28,660 --> 00:14:34,089
include um lab in the font so that one

00:14:32,139 --> 00:14:35,679
glyph is rendered with a fallback font

00:14:34,089 --> 00:14:37,360
and in this case the fallback font

00:14:35,679 --> 00:14:43,869
doesn't really look anything like the

00:14:37,360 --> 00:14:45,999
web font if you only serve a subset then

00:14:43,869 --> 00:14:48,160
you might run into this especially if

00:14:45,999 --> 00:14:50,499
dynamic stuff is happening on your page

00:14:48,160 --> 00:14:53,230
our comment by somebody is loaded

00:14:50,499 --> 00:14:54,850
they're Chinese and they write in

00:14:53,230 --> 00:14:58,569
Chinese then it will definitely not be

00:14:54,850 --> 00:15:03,069
in the web form that you anticipated so

00:14:58,569 --> 00:15:06,279
I came up with a new technique to load a

00:15:03,069 --> 00:15:08,829
subset and use a subset but still have a

00:15:06,279 --> 00:15:12,459
proper fallback so at the time where a

00:15:08,829 --> 00:15:16,749
new cliff loads or is needed it will

00:15:12,459 --> 00:15:18,519
actually load the original font so that

00:15:16,749 --> 00:15:20,139
is on demand and I have not seen this

00:15:18,519 --> 00:15:22,959
technique before so I'm gonna try and

00:15:20,139 --> 00:15:27,579
show you if if I can find where this is

00:15:22,959 --> 00:15:30,999
used so I'm pre connecting to two more -

00:15:27,579 --> 00:15:32,350
two more URLs one is fun stuff Google

00:15:30,999 --> 00:15:36,190
API is calm once

00:15:32,350 --> 00:15:37,840
funky static calm those are the the

00:15:36,190 --> 00:15:39,670
places where the CSS and the fonts are

00:15:37,840 --> 00:15:41,620
hosted on Google Fonts so I'm already

00:15:39,670 --> 00:15:44,470
warming up the connection just in case I

00:15:41,620 --> 00:15:50,460
need to look the fallbacks then all the

00:15:44,470 --> 00:15:52,900
way at the bottom I have this ugly block

00:15:50,460 --> 00:15:56,200
which is a script and an L script and

00:15:52,900 --> 00:15:58,150
that's essentially loading the CSS the

00:15:56,200 --> 00:16:02,620
original CSS from from google fonts that

00:15:58,150 --> 00:16:05,170
I had but in an asynchronous way when

00:16:02,620 --> 00:16:07,240
you when a script append a link tag like

00:16:05,170 --> 00:16:10,330
this it'll load asynchronously so I've

00:16:07,240 --> 00:16:12,730
just removed that slow connection time

00:16:10,330 --> 00:16:15,910
and round-trip to Google Fonts from my

00:16:12,730 --> 00:16:17,620
critical rendering path but I still get

00:16:15,910 --> 00:16:20,740
this stuff but it's just not in my

00:16:17,620 --> 00:16:23,380
critical path anymore so I'm warming up

00:16:20,740 --> 00:16:25,750
these connections and in order to both

00:16:23,380 --> 00:16:29,260
use the subset and enable me to fall

00:16:25,750 --> 00:16:32,200
back to the original web font I will

00:16:29,260 --> 00:16:36,730
need to look into build something that's

00:16:32,200 --> 00:16:38,710
CSS main that's users probably know what

00:16:36,730 --> 00:16:42,280
to say there we go so I've rewritten all

00:16:38,710 --> 00:16:45,610
the usages so this was my original usage

00:16:42,280 --> 00:16:46,930
as I said I want to use no Caesaria and

00:16:45,610 --> 00:16:49,780
fall back to serife but now our

00:16:46,930 --> 00:16:52,630
prepended this this subset so the effect

00:16:49,780 --> 00:16:57,640
of this is that if a glyph is missing in

00:16:52,630 --> 00:16:59,680
a web font these these declarations will

00:16:57,640 --> 00:17:01,840
be tried in order so it'll start with my

00:16:59,680 --> 00:17:03,820
subset figure out this glyph is missing

00:17:01,840 --> 00:17:07,000
then I'd load the next one at least

00:17:03,820 --> 00:17:09,820
that's the spec and Chrome and opera

00:17:07,000 --> 00:17:11,710
does it correct Firefox has a bug which

00:17:09,820 --> 00:17:13,330
I'm tracking right now it also has a

00:17:11,710 --> 00:17:15,400
park where they load these things

00:17:13,330 --> 00:17:17,830
upfront which means that you pay more

00:17:15,400 --> 00:17:19,930
bytes but it actually doesn't infect

00:17:17,830 --> 00:17:21,540
your your time - first meaningful paint

00:17:19,930 --> 00:17:23,560
because the subset is already

00:17:21,540 --> 00:17:26,410
pre-empting and and you can already

00:17:23,560 --> 00:17:27,790
render before so even though some

00:17:26,410 --> 00:17:31,210
browsers are loading a few more bites

00:17:27,790 --> 00:17:33,040
there's still no downsides if your goal

00:17:31,210 --> 00:17:37,960
is to get a first meaningful for paint

00:17:33,040 --> 00:17:40,960
faster so I skipped over the hard part

00:17:37,960 --> 00:17:41,990
which was figuring out which glyphs I'm

00:17:40,960 --> 00:17:44,200
using

00:17:41,990 --> 00:17:47,529
[Music]

00:17:44,200 --> 00:17:52,510
it sounds easy and that's what we said

00:17:47,529 --> 00:17:54,730
I happen to be a former colleague of one

00:17:52,510 --> 00:17:57,610
of the web's foremost web font experts

00:17:54,730 --> 00:18:00,340
Rammstein years ago we worked at the

00:17:57,610 --> 00:18:02,289
same company and so we were having a

00:18:00,340 --> 00:18:03,700
reunion birria like two years ago and I

00:18:02,289 --> 00:18:05,830
was sitting there with another different

00:18:03,700 --> 00:18:07,779
colleague and we were like hah I'm this

00:18:05,830 --> 00:18:09,580
subsetting stuff how hard can that be

00:18:07,779 --> 00:18:12,340
like you could just statically analyze

00:18:09,580 --> 00:18:14,620
the the font or the text on the page and

00:18:12,340 --> 00:18:18,190
then you know what cliffs you use right

00:18:14,620 --> 00:18:19,750
and he goes no you cannot you cannot do

00:18:18,190 --> 00:18:21,190
that there's all sorts of things and

00:18:19,750 --> 00:18:23,380
we're drunk and we're not listening to

00:18:21,190 --> 00:18:26,799
him we're like yeah yeah yeah we can do

00:18:23,380 --> 00:18:29,620
this so the reason why we were that

00:18:26,799 --> 00:18:31,809
cocky is that we spend a lot of time

00:18:29,620 --> 00:18:34,929
building static analysis tools which

00:18:31,809 --> 00:18:36,880
look at at a page as a whole as a one

00:18:34,929 --> 00:18:39,309
single data model it has access to the

00:18:36,880 --> 00:18:41,169
Dom to the CSS to JavaScript everything

00:18:39,309 --> 00:18:43,450
at the same time which means that we

00:18:41,169 --> 00:18:46,000
have the basis to do a static analysis

00:18:43,450 --> 00:18:49,899
that would know which CSS applies to

00:18:46,000 --> 00:18:52,389
which text so that's a tool set called

00:18:49,899 --> 00:18:55,269
asset graph and it's using JSON

00:18:52,389 --> 00:18:56,950
internally to model HTML so when we

00:18:55,269 --> 00:18:58,539
started doing this Hybris driven

00:18:56,950 --> 00:19:01,149
development we thought we'll just get

00:18:58,539 --> 00:19:02,860
computed style and then we have the font

00:19:01,149 --> 00:19:05,289
properties that we're interested in and

00:19:02,860 --> 00:19:07,090
then we can figure out how they group to

00:19:05,289 --> 00:19:09,159
the font files and then everything is

00:19:07,090 --> 00:19:11,980
good handed off to a sub setting tool

00:19:09,159 --> 00:19:13,990
and then we have a result jsm does not

00:19:11,980 --> 00:19:19,480
have get computed style for inherited

00:19:13,990 --> 00:19:22,779
properties so we implemented it which

00:19:19,480 --> 00:19:25,570
turns out to teach me a lot about how

00:19:22,779 --> 00:19:28,990
CSS font resolution is actually working

00:19:25,570 --> 00:19:32,169
so just to do a short walk through you

00:19:28,990 --> 00:19:34,929
you see the the the declaration you use

00:19:32,169 --> 00:19:36,970
you see which selector applies to its

00:19:34,929 --> 00:19:39,820
dom nodes the no declarations followed

00:19:36,970 --> 00:19:42,750
you figure out this a specific font you

00:19:39,820 --> 00:19:45,789
look up the front face declaration you

00:19:42,750 --> 00:19:48,399
see which weights it has and if it's

00:19:45,789 --> 00:19:51,309
italic and not and that classifies it to

00:19:48,399 --> 00:19:52,929
which fonts you need to download so now

00:19:51,309 --> 00:19:54,730
you have the weights and and the

00:19:52,929 --> 00:19:56,440
approximate font and then if you don't

00:19:54,730 --> 00:19:58,060
have all the funds for all the weights

00:19:56,440 --> 00:20:00,100
that you specified it'll snap

00:19:58,060 --> 00:20:02,650
- the ones available and then you need

00:20:00,100 --> 00:20:04,540
to take care of things like you can set

00:20:02,650 --> 00:20:07,690
a CSS property called font-weight:bold

00:20:04,540 --> 00:20:09,550
er which means that after all this

00:20:07,690 --> 00:20:12,040
snapping has happened it's gonna say oh

00:20:09,550 --> 00:20:13,930
you want it I'm in a contact I've

00:20:12,040 --> 00:20:17,080
already built but I want Boulder I'm

00:20:13,930 --> 00:20:18,640
gonna do one higher of whatever is

00:20:17,080 --> 00:20:21,490
available so all of these things are

00:20:18,640 --> 00:20:24,180
very dynamic and very hard to track then

00:20:21,490 --> 00:20:26,830
you have CSS generated content you have

00:20:24,180 --> 00:20:30,040
visible attributes like placeholder

00:20:26,830 --> 00:20:32,680
attributes then you have potentially

00:20:30,040 --> 00:20:34,750
different states hover States active

00:20:32,680 --> 00:20:37,480
states in CSS you have media queries

00:20:34,750 --> 00:20:39,250
suddenly this problem is not just I have

00:20:37,480 --> 00:20:42,280
a text node and I'm getting the computer

00:20:39,250 --> 00:20:45,430
style its multi-dimensional multiple

00:20:42,280 --> 00:20:48,010
states at the same time which all might

00:20:45,430 --> 00:20:52,360
affect which glyphs and end up in which

00:20:48,010 --> 00:20:55,870
pocket for which font file we ended up

00:20:52,360 --> 00:20:58,030
actually implementing all of this and I

00:20:55,870 --> 00:21:00,130
have not seen an implementation of this

00:20:58,030 --> 00:21:02,920
before so I think this is genuinely a

00:21:00,130 --> 00:21:05,080
new contribution there exists a

00:21:02,920 --> 00:21:07,960
different tool called cliffhanger which

00:21:05,080 --> 00:21:10,150
does get computed style for for text

00:21:07,960 --> 00:21:13,480
nodes for also for attributes but

00:21:10,150 --> 00:21:15,280
doesn't do the State thing so if you're

00:21:13,480 --> 00:21:17,370
interested in in trying to look into

00:21:15,280 --> 00:21:21,130
that cliffhanger is easier code to read

00:21:17,370 --> 00:21:22,810
look at that and if you're taunting then

00:21:21,130 --> 00:21:25,120
come speak to me and I'll walk you

00:21:22,810 --> 00:21:32,770
through through our code and how we did

00:21:25,120 --> 00:21:37,630
this so this tool only works for static

00:21:32,770 --> 00:21:39,610
files for static pages so this means

00:21:37,630 --> 00:21:43,690
that if you have a static page like

00:21:39,610 --> 00:21:44,950
Jekyll or if they use Hugo or I don't

00:21:43,690 --> 00:21:48,040
know there's a lot of different static

00:21:44,950 --> 00:21:51,850
page generators these days this is a

00:21:48,040 --> 00:21:54,790
tool for you you can keep doing the the

00:21:51,850 --> 00:21:56,890
default recommended style of including

00:21:54,790 --> 00:21:59,980
google fonts like this it also works

00:21:56,890 --> 00:22:01,510
with local funds there is a there is a

00:21:59,980 --> 00:22:04,060
Python dependency if you want to do

00:22:01,510 --> 00:22:08,410
local subsetting it'll help you install

00:22:04,060 --> 00:22:10,720
that when you when you hit that but if

00:22:08,410 --> 00:22:12,020
you have a dynamic page you might be out

00:22:10,720 --> 00:22:14,670
of luck

00:22:12,020 --> 00:22:17,040
dynamic pages take several forms some

00:22:14,670 --> 00:22:19,320
maybe have a static loading screen or a

00:22:17,040 --> 00:22:20,550
static header then you could still run

00:22:19,320 --> 00:22:22,800
this and you could get immediate

00:22:20,550 --> 00:22:25,140
rendering of your static header but the

00:22:22,800 --> 00:22:28,050
dynamic parts it doesn't really cover so

00:22:25,140 --> 00:22:31,140
if you want to do fonts upsetting again

00:22:28,050 --> 00:22:34,140
I cannot repeat this enough don't don't

00:22:31,140 --> 00:22:35,700
do funds upsetting for that just don't

00:22:34,140 --> 00:22:37,590
like it will not be enough to know

00:22:35,700 --> 00:22:39,690
what's in your words in your translation

00:22:37,590 --> 00:22:41,940
system or what's in on your pages

00:22:39,690 --> 00:22:43,560
because there are weird States you could

00:22:41,940 --> 00:22:46,190
get into and you cannot predict them

00:22:43,560 --> 00:22:48,900
when you do dynamic JavaScript that said

00:22:46,190 --> 00:22:52,430
preload preload print up preload

00:22:48,900 --> 00:22:55,470
remember that go home and do it it's

00:22:52,430 --> 00:22:57,090
it's like a half an hour change you can

00:22:55,470 --> 00:22:59,580
download the web fonts from Google the

00:22:57,090 --> 00:23:01,320
license allows you to they're available

00:22:59,580 --> 00:23:04,710
on github I think they're even available

00:23:01,320 --> 00:23:07,740
as NPM installs you can point a preload

00:23:04,710 --> 00:23:09,780
link you can use an HTTP header if you

00:23:07,740 --> 00:23:11,730
have access to to set your HTTP headers

00:23:09,780 --> 00:23:17,550
this increases your performance

00:23:11,730 --> 00:23:20,430
immensely so go and do that so I

00:23:17,550 --> 00:23:21,930
encourage you to try this I want to help

00:23:20,430 --> 00:23:23,970
you like if you have time in a break

00:23:21,930 --> 00:23:26,190
I'll help you set this up if you have a

00:23:23,970 --> 00:23:27,960
static page and and see it break in all

00:23:26,190 --> 00:23:31,880
the funny ways that it can and then I'll

00:23:27,960 --> 00:23:34,350
have Bakri posts that I can fix but I

00:23:31,880 --> 00:23:37,980
want to close off with with this is just

00:23:34,350 --> 00:23:40,860
one instance of a tool as I think it

00:23:37,980 --> 00:23:43,070
should it should be built I think there

00:23:40,860 --> 00:23:47,430
are not enough tools that allow you to

00:23:43,070 --> 00:23:49,050
work in in a non complex way and then

00:23:47,430 --> 00:23:52,590
abstract the complexity away from you

00:23:49,050 --> 00:23:55,320
most of the tools that exist expose you

00:23:52,590 --> 00:23:57,990
to tons of complexity with configuration

00:23:55,320 --> 00:23:59,840
because you have to tell it everything

00:23:57,990 --> 00:24:02,190
you have to tell at every entry point

00:23:59,840 --> 00:24:04,140
everything to do you have to tell it how

00:24:02,190 --> 00:24:08,370
to do it and you don't tell it what to

00:24:04,140 --> 00:24:11,130
do so I I want to build tools that and I

00:24:08,370 --> 00:24:14,100
want others to build tools that let you

00:24:11,130 --> 00:24:17,070
achieve the goal and then just look at

00:24:14,100 --> 00:24:20,040
your code and does the right thing and I

00:24:17,070 --> 00:24:21,900
think this is one example of such tool I

00:24:20,040 --> 00:24:24,630
might do a lightning talk later where

00:24:21,900 --> 00:24:25,980
there might be another one I

00:24:24,630 --> 00:24:29,190
what these tools to give people

00:24:25,980 --> 00:24:31,800
abilities without having to know all the

00:24:29,190 --> 00:24:34,140
crazy stuff that is behind it that's

00:24:31,800 --> 00:24:36,510
upsetting stuff is so hard I don't

00:24:34,140 --> 00:24:38,790
expect anybody to know it like I don't

00:24:36,510 --> 00:24:41,820
even expect web font experts to do it

00:24:38,790 --> 00:24:44,040
because it is so error-prone so I'm

00:24:41,820 --> 00:24:47,190
really hoping that I can contribute that

00:24:44,040 --> 00:24:52,500
people can do this and win something

00:24:47,190 --> 00:24:55,050
from it but again subsetting that's just

00:24:52,500 --> 00:24:57,870
the geekery I'm loading slightly less

00:24:55,050 --> 00:25:03,000
fonts it's not where the gains come from

00:24:57,870 --> 00:25:05,190
do pre loading so I'm really also hoping

00:25:03,000 --> 00:25:08,970
that there might be designers in the

00:25:05,190 --> 00:25:12,330
room or people who specialized in HTML

00:25:08,970 --> 00:25:14,400
and CSS only and don't necessarily geek

00:25:12,330 --> 00:25:16,140
out on web performance like I do and I

00:25:14,400 --> 00:25:18,540
hope that they can they can use this and

00:25:16,140 --> 00:25:22,790
that they can build faster experiences

00:25:18,540 --> 00:25:24,810
so I think that's all the words I had I

00:25:22,790 --> 00:25:26,670
think this room is not so good for

00:25:24,810 --> 00:25:28,590
questions so I think we'll forego them

00:25:26,670 --> 00:25:30,000
I'll be I'll be in front of the stage

00:25:28,590 --> 00:25:32,490
and you can come and ask me questions if

00:25:30,000 --> 00:25:35,970
you're interested and I'll leave you

00:25:32,490 --> 00:25:38,340
with those words take a look at ads up

00:25:35,970 --> 00:25:40,770
front you can install it from NPM

00:25:38,340 --> 00:25:42,930
if you want to and give it a go and

00:25:40,770 --> 00:25:44,770
tweet at me if it doesn't work I'll fix

00:25:42,930 --> 00:25:51,700
it for you thank you

00:25:44,770 --> 00:25:51,700

YouTube URL: https://www.youtube.com/watch?v=xRMc0JtQEG0


