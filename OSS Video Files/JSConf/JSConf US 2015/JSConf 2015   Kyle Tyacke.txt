Title: JSConf 2015   Kyle Tyacke
Publication date: 2015-06-17
Playlist: JSConf US 2015
Description: 
	
Captions: 
	00:00:14,150 --> 00:00:17,940
so as you mentioned my name is Kyle

00:00:16,020 --> 00:00:20,520
kayak the divide alup it's talk is

00:00:17,940 --> 00:00:21,900
communicate all the things what that

00:00:20,520 --> 00:00:23,670
means we're going to talk about web

00:00:21,900 --> 00:00:25,560
communications and more specifically

00:00:23,670 --> 00:00:28,110
about the capabilities that you now have

00:00:25,560 --> 00:00:32,700
access to as front-end developers to do

00:00:28,110 --> 00:00:34,350
communications on the web so well we're

00:00:32,700 --> 00:00:35,760
kind of late and last couple people to

00:00:34,350 --> 00:00:37,530
get in if you guys want to follow along

00:00:35,760 --> 00:00:39,030
this is a live deck it should update

00:00:37,530 --> 00:00:44,490
automatically if you just head to this

00:00:39,030 --> 00:00:47,850
URL it's goo GL / AP capital j capital f

00:00:44,490 --> 00:00:49,530
capital N and the number 7 that'll be

00:00:47,850 --> 00:00:50,970
important later we'll do some demos and

00:00:49,530 --> 00:00:52,740
I'd love to actually get some audience

00:00:50,970 --> 00:00:54,930
interaction will try doing a video call

00:00:52,740 --> 00:00:55,860
and maybe a little screen share so if

00:00:54,930 --> 00:00:58,680
you guys want to go ahead and hit that

00:00:55,860 --> 00:01:03,030
URL will run that throughout the session

00:00:58,680 --> 00:01:04,799
here all right so everybody ready let's

00:01:03,030 --> 00:01:06,299
do this thing so what we're going to

00:01:04,799 --> 00:01:08,700
talk about today we're going to take a

00:01:06,299 --> 00:01:11,040
look at WebRTC sort of what it is what

00:01:08,700 --> 00:01:13,320
it allows you to do is devs what the

00:01:11,040 --> 00:01:14,729
spec looks like how it functions I don't

00:01:13,320 --> 00:01:16,770
talk a little bit of our spoke company I

00:01:14,729 --> 00:01:18,600
work with what that framework allows you

00:01:16,770 --> 00:01:20,790
to do how it simplifies your lives a bit

00:01:18,600 --> 00:01:24,930
and we'll look at some code samples some

00:01:20,790 --> 00:01:26,700
implementations of WebRTC using response

00:01:24,930 --> 00:01:28,770
Crean sharing talk about messaging a bit

00:01:26,700 --> 00:01:31,590
and if we have time at the end we'll get

00:01:28,770 --> 00:01:34,320
into QA this is a bit of a short session

00:01:31,590 --> 00:01:35,610
30 minutes isn't a ton of time so we're

00:01:34,320 --> 00:01:37,710
actually going to kind of cruise through

00:01:35,610 --> 00:01:38,820
this rather quickly um if you guys can

00:01:37,710 --> 00:01:43,470
just hold questions till the end that'd

00:01:38,820 --> 00:01:45,299
be great too so Who am I and why should

00:01:43,470 --> 00:01:47,490
you actually listen to anything I have

00:01:45,299 --> 00:01:49,530
to say like you mentioned my name is

00:01:47,490 --> 00:01:51,270
Kyle taya I'm a flash and web developer

00:01:49,530 --> 00:01:52,560
it's been about 10 years is a flash

00:01:51,270 --> 00:01:54,540
freelancer doing ton of ActionScript

00:01:52,560 --> 00:01:56,220
work which kind of led the foundation

00:01:54,540 --> 00:01:58,080
for where I found myself today with web

00:01:56,220 --> 00:01:59,970
communications flash did a lot of

00:01:58,080 --> 00:02:02,310
peer-to-peer stuff video streaming audio

00:01:59,970 --> 00:02:03,960
I mean sort of laid the foundation work

00:02:02,310 --> 00:02:06,420
for where javascript is now coming up to

00:02:03,960 --> 00:02:07,979
speed with this communication stuff then

00:02:06,420 --> 00:02:09,090
I got back into front ends and now as i

00:02:07,979 --> 00:02:11,280
mentioned i'm a developer evangelist for

00:02:09,090 --> 00:02:12,720
smoke coming out to conferences like

00:02:11,280 --> 00:02:14,730
this and talking to great folks like you

00:02:12,720 --> 00:02:16,230
about web communications i'm also a huge

00:02:14,730 --> 00:02:18,510
beer geek so if we have any home brewers

00:02:16,230 --> 00:02:19,980
in the audience find me at the karaoke

00:02:18,510 --> 00:02:22,260
party tonight or at the beach tomorrow

00:02:19,980 --> 00:02:23,540
I'd love to talk beer and talk about

00:02:22,260 --> 00:02:28,830
that fall day

00:02:23,540 --> 00:02:31,440
so what the heck is web RTC it's defined

00:02:28,830 --> 00:02:33,210
by the Mozilla Foundation as a free open

00:02:31,440 --> 00:02:35,460
project that enables web browsers with

00:02:33,210 --> 00:02:37,590
real-time communications it's the RTC

00:02:35,460 --> 00:02:40,050
portion capabilities via simple

00:02:37,590 --> 00:02:43,980
JavaScript API so what does that mean

00:02:40,050 --> 00:02:45,690
exactly free it's free you can use it

00:02:43,980 --> 00:02:47,670
it's built into the browser it's part of

00:02:45,690 --> 00:02:49,500
the html5 spec or is at least being

00:02:47,670 --> 00:02:51,480
proposed to be part of the html5 spec

00:02:49,500 --> 00:02:52,890
meaning you just have access to it for

00:02:51,480 --> 00:02:55,410
free you don't have to buy a license you

00:02:52,890 --> 00:02:57,390
can just play around with it open its

00:02:55,410 --> 00:02:58,980
open sourced into the BSD license so if

00:02:57,390 --> 00:03:00,390
you're one of those crafty developers it

00:02:58,980 --> 00:03:02,850
likes to contribute to projects and i

00:03:00,390 --> 00:03:04,170
highly recommend all of you do on you

00:03:02,850 --> 00:03:05,880
can actually add your own features into

00:03:04,170 --> 00:03:07,459
this and make contributions to the spec

00:03:05,880 --> 00:03:09,959
and might actually see them go live

00:03:07,459 --> 00:03:12,390
real-time communications this is sort of

00:03:09,959 --> 00:03:14,850
the the meat of it all it's audio and

00:03:12,390 --> 00:03:16,709
video and data in real time so basically

00:03:14,850 --> 00:03:18,600
what WebRTC does is to figure out how to

00:03:16,709 --> 00:03:20,370
connect to browsers and create a peer to

00:03:18,600 --> 00:03:21,840
peer connection between them so if you

00:03:20,370 --> 00:03:23,340
think about kind of how the WebSockets

00:03:21,840 --> 00:03:25,080
work but you take that middle layer out

00:03:23,340 --> 00:03:27,600
and just connect the browsers directly

00:03:25,080 --> 00:03:29,160
one to one that's what period of your

00:03:27,600 --> 00:03:32,130
communications does and the real-time

00:03:29,160 --> 00:03:33,540
portion of it is real time so think

00:03:32,130 --> 00:03:34,470
about video and audio in real time the

00:03:33,540 --> 00:03:36,750
way you talk to somebody on the phone

00:03:34,470 --> 00:03:38,400
that's a real time conversation the same

00:03:36,750 --> 00:03:40,410
communications capabilities are coming

00:03:38,400 --> 00:03:41,820
to the web browser so if you think a

00:03:40,410 --> 00:03:44,040
Skype or Google Hangouts those are kind

00:03:41,820 --> 00:03:46,560
of good examples of this type of

00:03:44,040 --> 00:03:48,360
technology being utilized today and

00:03:46,560 --> 00:03:49,530
JavaScript API is as I mentioned it's

00:03:48,360 --> 00:03:51,690
built into the browser it's part of the

00:03:49,530 --> 00:03:53,519
html5 spec so it's stuff that you can

00:03:51,690 --> 00:03:55,260
just access natively with the JavaScript

00:03:53,519 --> 00:03:57,180
you know and love today and I'm assuming

00:03:55,260 --> 00:03:58,530
I have a very large audience of j/s

00:03:57,180 --> 00:04:00,930
developers in this room given the

00:03:58,530 --> 00:04:02,280
conference yeah all right so this would

00:04:00,930 --> 00:04:03,600
be a stuff that you guys can easily work

00:04:02,280 --> 00:04:04,590
with you don't need to know anything new

00:04:03,600 --> 00:04:06,690
you don't need to learn anything new

00:04:04,590 --> 00:04:08,269
other than the api's and you can just

00:04:06,690 --> 00:04:11,489
start working with it using javascript

00:04:08,269 --> 00:04:14,370
the contributors Google Mozilla and

00:04:11,489 --> 00:04:15,390
opera are the big ones IE is kind of

00:04:14,370 --> 00:04:17,910
Microsoft working on their own

00:04:15,390 --> 00:04:19,950
implementation of RTC which sort of

00:04:17,910 --> 00:04:22,169
mimics WebRTC with a few tweaks of

00:04:19,950 --> 00:04:23,760
course no shock there but they're

00:04:22,169 --> 00:04:25,770
actually also contributing back to the

00:04:23,760 --> 00:04:27,510
main spec so there is some back and

00:04:25,770 --> 00:04:30,780
forth going on between google and

00:04:27,510 --> 00:04:32,250
mozilla and ie which is good because the

00:04:30,780 --> 00:04:33,960
hope is that one day when they finalize

00:04:32,250 --> 00:04:35,310
a spec and things firm up and sort of

00:04:33,960 --> 00:04:36,270
they decide on and how everything is

00:04:35,310 --> 00:04:38,610
going to really look and we're

00:04:36,270 --> 00:04:41,640
uh that everyone will implement one

00:04:38,610 --> 00:04:44,250
version of this spec again that's that's

00:04:41,640 --> 00:04:45,450
a hope it's maybe a dream but things are

00:04:44,250 --> 00:04:49,260
actually looking like they might go in

00:04:45,450 --> 00:04:50,520
that direction so WebRTC in the wild

00:04:49,260 --> 00:04:52,800
what are people doing with this stuff

00:04:50,520 --> 00:04:54,930
already you guys may have seen Amazon

00:04:52,800 --> 00:05:00,810
made a some time ago the Kindle Fire X

00:04:54,930 --> 00:05:05,840
was launched updating and we have our

00:05:00,810 --> 00:05:07,680
first demo issue here wow that's awesome

00:05:05,840 --> 00:05:09,920
alright guys bear with me i'm going to

00:05:07,680 --> 00:05:14,370
go go a little bit rogue on this oh

00:05:09,920 --> 00:05:15,960
we're up alright so Amazon Mayday when

00:05:14,370 --> 00:05:16,770
Kindle launched they added this new

00:05:15,960 --> 00:05:18,330
feature called the Mayday button

00:05:16,770 --> 00:05:19,920
basically allowed you to click a button

00:05:18,330 --> 00:05:22,260
and be immediately connected with a

00:05:19,920 --> 00:05:24,780
sport rep at Amazon who would then be

00:05:22,260 --> 00:05:26,520
able to access your screen circle the

00:05:24,780 --> 00:05:28,860
mail button to show you how to use email

00:05:26,520 --> 00:05:30,870
apparently given this example um and

00:05:28,860 --> 00:05:33,630
then shut you know with a video with a

00:05:30,870 --> 00:05:35,250
shiny happy support rep from amazon i

00:05:33,630 --> 00:05:37,470
have tests of the service this is not

00:05:35,250 --> 00:05:39,600
the person you talked to i can tell you

00:05:37,470 --> 00:05:42,150
that very plainly they were very helpful

00:05:39,600 --> 00:05:44,090
but not nearly as shiny or happy as

00:05:42,150 --> 00:05:46,350
portrayed in their marketing campaigns

00:05:44,090 --> 00:05:48,390
that being said it's a really cool use

00:05:46,350 --> 00:05:49,980
case right you've got live video

00:05:48,390 --> 00:05:50,970
conversation happening with the support

00:05:49,980 --> 00:05:52,770
representative you're getting immediate

00:05:50,970 --> 00:05:54,300
feedback it beats the heck out of the

00:05:52,770 --> 00:05:55,890
you know the existing kind of chat

00:05:54,300 --> 00:05:57,660
support or even the worse and more

00:05:55,890 --> 00:05:59,670
standard phone support that you get for

00:05:57,660 --> 00:06:01,440
most companies and they built this using

00:05:59,670 --> 00:06:03,480
WebRTC implemented on top of their

00:06:01,440 --> 00:06:05,580
existing phone systems so they used web

00:06:03,480 --> 00:06:07,980
RTC for the video portion at least from

00:06:05,580 --> 00:06:09,240
what we can tell and then the existing

00:06:07,980 --> 00:06:10,470
stuff went through their their normal

00:06:09,240 --> 00:06:13,170
phone support line that they already had

00:06:10,470 --> 00:06:15,810
in place one you guys might have seen a

00:06:13,170 --> 00:06:17,130
little bit more is google hangouts this

00:06:15,810 --> 00:06:18,510
is one that i'm guessing most people in

00:06:17,130 --> 00:06:20,580
this room have used at some point you

00:06:18,510 --> 00:06:22,050
may have noticed in the past you had to

00:06:20,580 --> 00:06:24,600
download a plug-in to use google

00:06:22,050 --> 00:06:26,040
hangouts no longer as of about six or

00:06:24,600 --> 00:06:27,930
eight months ago they rolled it over to

00:06:26,040 --> 00:06:30,420
officially use WebRTC so kind of eaten

00:06:27,930 --> 00:06:32,220
their own dog food there to do the

00:06:30,420 --> 00:06:34,080
functionality for things like the data

00:06:32,220 --> 00:06:36,480
transfers and the live video

00:06:34,080 --> 00:06:38,370
conversations as well as messaging i

00:06:36,480 --> 00:06:39,480
believe so a good example kind of

00:06:38,370 --> 00:06:43,320
showcasing a lot of the functionality

00:06:39,480 --> 00:06:46,290
built into WebRTC apollo is actually a

00:06:43,320 --> 00:06:47,760
chat client we built it respond we

00:06:46,290 --> 00:06:50,129
didn't like hangouts for specific

00:06:47,760 --> 00:06:52,110
reasons so we built our own

00:06:50,129 --> 00:06:54,479
we used our own tools to roll our own

00:06:52,110 --> 00:06:55,979
version of a communications out this

00:06:54,479 --> 00:06:58,649
actually has things like screen sharing

00:06:55,979 --> 00:07:00,389
file sharing group messaging phone

00:06:58,649 --> 00:07:02,069
conversations you can dialect somebody's

00:07:00,389 --> 00:07:04,919
phone or you can dial them directly over

00:07:02,069 --> 00:07:05,909
the web using a video call and again it

00:07:04,919 --> 00:07:07,589
was just something that we built a

00:07:05,909 --> 00:07:11,669
custom tailor a solution for what we

00:07:07,589 --> 00:07:13,259
needed as a remote team pure CDN this is

00:07:11,669 --> 00:07:16,499
actually a really cool implementation

00:07:13,259 --> 00:07:18,689
these guys built it's essentially a CDN

00:07:16,499 --> 00:07:20,550
on your website so what you do is drop

00:07:18,689 --> 00:07:22,709
in a JavaScript library and it scrubs

00:07:20,550 --> 00:07:25,110
your web your website for static assets

00:07:22,709 --> 00:07:26,999
so things like PDFs large video files

00:07:25,110 --> 00:07:28,259
images anything that's static that you

00:07:26,999 --> 00:07:30,569
would normally just have every user

00:07:28,259 --> 00:07:32,309
download from your web server and what

00:07:30,569 --> 00:07:34,319
it does is to look and see if anybody

00:07:32,309 --> 00:07:36,749
else currently on the site has those

00:07:34,319 --> 00:07:38,399
files already if it does it creates a

00:07:36,749 --> 00:07:40,289
peer to peer connection between the new

00:07:38,399 --> 00:07:42,089
user and the user with the files and

00:07:40,289 --> 00:07:43,740
actually sends the files directly across

00:07:42,089 --> 00:07:45,300
that peer-to-peer channel and what

00:07:43,740 --> 00:07:47,069
that's doing is saving you a ton of

00:07:45,300 --> 00:07:48,479
bandwidth costs so instead of everyone

00:07:47,069 --> 00:07:50,429
in this room going to a website and

00:07:48,479 --> 00:07:52,229
downloading every single file thus

00:07:50,429 --> 00:07:54,839
charging us a bunch of bandwidth they're

00:07:52,229 --> 00:07:56,339
actually creating a network around the

00:07:54,839 --> 00:07:58,619
people in the room and streaming those

00:07:56,339 --> 00:08:00,569
files when possible directly from person

00:07:58,619 --> 00:08:03,389
to person so kind of akin to a bit

00:08:00,569 --> 00:08:04,860
torrent client in a way and again then

00:08:03,389 --> 00:08:05,849
with savings can be really huge on that

00:08:04,860 --> 00:08:07,679
especially when you think about things

00:08:05,849 --> 00:08:09,509
like large video files that you might

00:08:07,679 --> 00:08:11,189
want to share you know 10 10 megs at a

00:08:09,509 --> 00:08:13,829
time through a bunch of users could cost

00:08:11,189 --> 00:08:15,719
you a lot of money in bandwidth cube

00:08:13,829 --> 00:08:20,699
slam this was an example Google built to

00:08:15,719 --> 00:08:24,240
kind of there we go to kind of showcase

00:08:20,699 --> 00:08:25,619
the gaming potential for WebRTC so they

00:08:24,240 --> 00:08:27,749
actually take advantage of that peer to

00:08:25,619 --> 00:08:29,669
peer connection to stream JSON objects

00:08:27,749 --> 00:08:30,869
with live game updates so if you think

00:08:29,669 --> 00:08:32,880
about normally how you'd set up a game

00:08:30,869 --> 00:08:34,800
online you have some sort of a gaming

00:08:32,880 --> 00:08:36,389
server in between all the data would go

00:08:34,800 --> 00:08:38,039
from one user up to the gaming server

00:08:36,389 --> 00:08:39,689
and out to the rest in this

00:08:38,039 --> 00:08:42,000
implementation they built a sort of a

00:08:39,689 --> 00:08:43,529
pong style game where they're using

00:08:42,000 --> 00:08:45,029
video to actually show you the user

00:08:43,529 --> 00:08:46,800
you're playing against and audio so you

00:08:45,029 --> 00:08:48,209
can talk back and forth and then using

00:08:46,800 --> 00:08:50,519
that same channel to just send simple

00:08:48,209 --> 00:08:52,139
JSON objects with the game data so as

00:08:50,519 --> 00:08:53,490
updates are happening in the game the

00:08:52,139 --> 00:08:55,019
position of your paddle the position of

00:08:53,490 --> 00:08:57,449
the puck it's sending all that stuff

00:08:55,019 --> 00:09:01,139
across using just just json through the

00:08:57,449 --> 00:09:02,790
the data channel some more altruistic

00:09:01,139 --> 00:09:03,779
examples that I think are actually

00:09:02,790 --> 00:09:05,249
really cool speak

00:09:03,779 --> 00:09:07,800
exchange is one that I was just recently

00:09:05,249 --> 00:09:09,749
shown this is basically connecting

00:09:07,800 --> 00:09:12,089
elderly retirees or folks in retirement

00:09:09,749 --> 00:09:14,310
homes in the US with non-native English

00:09:12,089 --> 00:09:15,720
speakers or students in Brazil and what

00:09:14,310 --> 00:09:17,129
it does is to connect them via video

00:09:15,720 --> 00:09:18,990
chat to allow them to practice their

00:09:17,129 --> 00:09:20,339
English so it's taking folks that are

00:09:18,990 --> 00:09:21,899
rather lonely and just looking for

00:09:20,339 --> 00:09:23,459
somebody to talk to you with kids that

00:09:21,899 --> 00:09:25,980
are trying to learn English and bringing

00:09:23,459 --> 00:09:28,259
them together via just a simple web chat

00:09:25,980 --> 00:09:29,910
built on top of WebRTC and again all

00:09:28,259 --> 00:09:31,709
they need to do this is to go into the

00:09:29,910 --> 00:09:33,870
browsers that support WebRTC so Chrome

00:09:31,709 --> 00:09:35,279
and Firefox are the big ones and they're

00:09:33,870 --> 00:09:36,509
able to have this video communication

00:09:35,279 --> 00:09:37,860
happen there's no plugins there's no

00:09:36,509 --> 00:09:40,019
software to download that's kind of a

00:09:37,860 --> 00:09:41,220
big thing and again as speaking exchange

00:09:40,019 --> 00:09:43,350
building this they're not paying all

00:09:41,220 --> 00:09:44,699
these huge bandwidth bills to host a

00:09:43,350 --> 00:09:47,279
server and actually stream all that

00:09:44,699 --> 00:09:48,990
video data through that server and

00:09:47,279 --> 00:09:51,540
another one that's a personal favorite

00:09:48,990 --> 00:09:53,040
of mine is be my eyes these guys came up

00:09:51,540 --> 00:09:55,529
with a concept to build an app that

00:09:53,040 --> 00:09:57,839
would allow site challenge people or

00:09:55,529 --> 00:10:00,360
blind folks to actually dial into this

00:09:57,839 --> 00:10:01,949
app and request help so imagine you're

00:10:00,360 --> 00:10:03,180
blind and you're in your apartment and

00:10:01,949 --> 00:10:04,920
you need to know if the milk is spoiled

00:10:03,180 --> 00:10:06,120
right or you're on a subway and they

00:10:04,920 --> 00:10:07,319
don't have a Braille system you just

00:10:06,120 --> 00:10:09,269
need to know which track you need to be

00:10:07,319 --> 00:10:11,189
standing by this app actually allows you

00:10:09,269 --> 00:10:13,199
to open up the app request help from a

00:10:11,189 --> 00:10:15,180
sighted person they then connect via

00:10:13,199 --> 00:10:16,500
WebRTC over a video chat you can show

00:10:15,180 --> 00:10:18,329
them what it is you're looking at or

00:10:16,500 --> 00:10:19,949
trying to look at and they can explain

00:10:18,329 --> 00:10:22,139
it to you or describe what it is you're

00:10:19,949 --> 00:10:25,079
seeing or read the text that isn't in

00:10:22,139 --> 00:10:26,939
Braille so again kind of a cool way to

00:10:25,079 --> 00:10:29,220
look at you know use or potentially use

00:10:26,939 --> 00:10:31,259
for this type of technology so it's just

00:10:29,220 --> 00:10:33,600
giving developers like ourselves a new

00:10:31,259 --> 00:10:35,189
way to to work with communications in

00:10:33,600 --> 00:10:36,930
the existing stuff that we know so in

00:10:35,189 --> 00:10:39,300
JavaScript in our language we don't to

00:10:36,930 --> 00:10:41,550
go out and learn actionscript or use god

00:10:39,300 --> 00:10:43,439
I even suggested flash to accomplish

00:10:41,550 --> 00:10:45,839
something like this we can just do this

00:10:43,439 --> 00:10:48,389
stuff using javascript so how does it

00:10:45,839 --> 00:10:50,009
work kind of like this everybody

00:10:48,389 --> 00:10:51,750
remembers the old tin cans and strings

00:10:50,009 --> 00:10:53,129
as a kid right you got a tin can on one

00:10:51,750 --> 00:10:54,750
in a tin can on the other end you've got

00:10:53,129 --> 00:10:56,610
a big string in between well if you

00:10:54,750 --> 00:10:57,990
place the tin cans with a browser and a

00:10:56,610 --> 00:10:59,610
string with that peer-to-peer channel

00:10:57,990 --> 00:11:01,529
that we were talking about this is kind

00:10:59,610 --> 00:11:03,509
of how WebRTC works you've got two

00:11:01,529 --> 00:11:04,620
people that want to connect WebRTC

00:11:03,509 --> 00:11:06,120
figures out how to make that connection

00:11:04,620 --> 00:11:07,439
happen and then once you have that

00:11:06,120 --> 00:11:08,910
channel open you can send whatever you

00:11:07,439 --> 00:11:11,519
want to cross it whether it's video it's

00:11:08,910 --> 00:11:14,100
audio data it all streams directly

00:11:11,519 --> 00:11:15,179
across so to kind of bring this example

00:11:14,100 --> 00:11:17,760
home a little bit more we're gonna talk

00:11:15,179 --> 00:11:19,680
about Bob and Alice Bob and Alice met

00:11:17,760 --> 00:11:22,260
an online dating site like many of us

00:11:19,680 --> 00:11:24,630
today and we're using the example of

00:11:22,260 --> 00:11:26,370
caveman date calm I wanted to use paleo

00:11:24,630 --> 00:11:29,610
date calm but apparently that site

00:11:26,370 --> 00:11:31,620
actually exists for paleo eating folks

00:11:29,610 --> 00:11:34,050
that want to date so if you're really

00:11:31,620 --> 00:11:36,270
into meat and nuts and you want to meet

00:11:34,050 --> 00:11:38,460
a you know another person that's into

00:11:36,270 --> 00:11:40,230
that same thing check out paleo date but

00:11:38,460 --> 00:11:42,450
caveman date calm is our example for

00:11:40,230 --> 00:11:44,580
today so Bob and Alice Medicaid mandate

00:11:42,450 --> 00:11:46,110
and doing the smart thing in the world

00:11:44,580 --> 00:11:48,030
we live in today they wanted to have a

00:11:46,110 --> 00:11:49,230
video chat and kind of test the waters

00:11:48,030 --> 00:11:52,590
before they went out on their first date

00:11:49,230 --> 00:11:54,060
so in an ideal world the browser would

00:11:52,590 --> 00:11:56,280
update quickly enough that I could

00:11:54,060 --> 00:11:58,980
actually talk to it it would look

00:11:56,280 --> 00:12:00,090
something like this Bob and Alice would

00:11:58,980 --> 00:12:01,830
exchange some information through a

00:12:00,090 --> 00:12:03,330
process known as signaling and what

00:12:01,830 --> 00:12:04,620
signaling does is to basically say hey

00:12:03,330 --> 00:12:06,150
I've got the capabilities to share a

00:12:04,620 --> 00:12:08,310
webcam I've got the capabilities to

00:12:06,150 --> 00:12:10,080
share my microphone and here's some

00:12:08,310 --> 00:12:12,330
information about how to access me so my

00:12:10,080 --> 00:12:14,040
local IP address of my port then share

00:12:12,330 --> 00:12:15,180
that stuff back and forth and from that

00:12:14,040 --> 00:12:16,230
they would be able to establish this

00:12:15,180 --> 00:12:18,510
peer to peer connection we've been

00:12:16,230 --> 00:12:21,120
talking about but as we all know the

00:12:18,510 --> 00:12:22,620
real world isn't so much I deal in the

00:12:21,120 --> 00:12:25,020
real world we have NAT which is the

00:12:22,620 --> 00:12:26,160
network address translation which is

00:12:25,020 --> 00:12:27,780
what allows us to have these vast

00:12:26,160 --> 00:12:30,150
networks that we have today so things

00:12:27,780 --> 00:12:32,760
like your your router at home or maybe a

00:12:30,150 --> 00:12:34,920
firewall at your workplace these are the

00:12:32,760 --> 00:12:36,180
things that both allow us to have the

00:12:34,920 --> 00:12:38,040
networks and connections that we have

00:12:36,180 --> 00:12:40,320
existing today but also block us from

00:12:38,040 --> 00:12:42,570
connecting to one another fortunately

00:12:40,320 --> 00:12:45,720
there's a thing called ice this is a

00:12:42,570 --> 00:12:48,330
technique used by WebRTC to sort of

00:12:45,720 --> 00:12:50,280
traverse that network translation issues

00:12:48,330 --> 00:12:51,900
so around that it basically figures out

00:12:50,280 --> 00:12:53,280
regardless of your network topology how

00:12:51,900 --> 00:12:56,400
to make those browsers talk to one

00:12:53,280 --> 00:12:59,280
another so if alice is at work browsing

00:12:56,400 --> 00:13:01,320
online dating and Bob's at home or at a

00:12:59,280 --> 00:13:03,060
coffee shop somewhere public let's say

00:13:01,320 --> 00:13:05,250
Alice has a big firewall in place and

00:13:03,060 --> 00:13:06,990
Bob's wide open Bob's going to try to

00:13:05,250 --> 00:13:08,670
figure out okay how do I talk to Alice

00:13:06,990 --> 00:13:09,840
he's not actually doing this is what's

00:13:08,670 --> 00:13:11,850
happening sort of on the back end

00:13:09,840 --> 00:13:12,960
through WebRTC in the browser but he's

00:13:11,850 --> 00:13:14,940
going to use a thing called a stun

00:13:12,960 --> 00:13:16,590
server and what the stun server does

00:13:14,940 --> 00:13:18,090
it's got one role and it's essentially

00:13:16,590 --> 00:13:19,920
just to say you know how do you look to

00:13:18,090 --> 00:13:21,030
the public so when Bob wants to talk to

00:13:19,920 --> 00:13:22,410
Alice first thing he's going to do is

00:13:21,030 --> 00:13:24,180
send a little packet to the stun server

00:13:22,410 --> 00:13:25,710
the stun server is going to say hey Bob

00:13:24,180 --> 00:13:27,900
you're wide open here's your IP address

00:13:25,710 --> 00:13:29,610
here's a port I can access you at you're

00:13:27,900 --> 00:13:30,840
good to go buddy Bob's going to get that

00:13:29,610 --> 00:13:31,209
little bit of information back he's

00:13:30,840 --> 00:13:33,040
going to

00:13:31,209 --> 00:13:34,269
send that over to alice alice is going

00:13:33,040 --> 00:13:35,619
to receive it then she's going to say

00:13:34,269 --> 00:13:37,720
okay well now how do i connect to Bob

00:13:35,619 --> 00:13:39,399
well alice is at work right so there's a

00:13:37,720 --> 00:13:41,319
big fire wall in place she can't really

00:13:39,399 --> 00:13:42,429
be accessed publicly so she's going to

00:13:41,319 --> 00:13:44,110
send a packet out to the stun server

00:13:42,429 --> 00:13:44,949
they're gonna say well Alice I don't I

00:13:44,110 --> 00:13:46,749
don't really know what you look like

00:13:44,949 --> 00:13:48,759
you're behind a firewall I can't get

00:13:46,749 --> 00:13:50,379
right at you so that's where this third

00:13:48,759 --> 00:13:52,809
piece this turn server comes in that you

00:13:50,379 --> 00:13:55,209
see here basically that's a way to relay

00:13:52,809 --> 00:13:57,339
around nap so normally in an ideal world

00:13:55,209 --> 00:13:59,350
and this is about eighty-six percent of

00:13:57,339 --> 00:14:00,639
the time given statistics Bob and Alice

00:13:59,350 --> 00:14:01,929
would both be open enough that they

00:14:00,639 --> 00:14:03,399
could connect straight away so they both

00:14:01,929 --> 00:14:04,779
get their IP addresses they both get

00:14:03,399 --> 00:14:06,429
their ports they'd connect and

00:14:04,779 --> 00:14:08,019
everything would be done we'd have that

00:14:06,429 --> 00:14:09,579
peer to peer connection but given the

00:14:08,019 --> 00:14:11,319
case of the firewall which is that odd

00:14:09,579 --> 00:14:12,779
fourteen percent time where there is

00:14:11,319 --> 00:14:14,800
something preventing that from happening

00:14:12,779 --> 00:14:17,439
the turn server is going to come in and

00:14:14,800 --> 00:14:18,579
basically act as a relay so alice is

00:14:17,439 --> 00:14:20,079
going to send some information back to

00:14:18,579 --> 00:14:21,189
Bob saying hey here's the turn server

00:14:20,079 --> 00:14:23,410
this is how you're going to get access

00:14:21,189 --> 00:14:25,720
to me Bob sent Alice the public IP and

00:14:23,410 --> 00:14:27,730
port when Bob sends information over to

00:14:25,720 --> 00:14:29,709
Alice it's actually going to go from Bob

00:14:27,730 --> 00:14:31,540
to that turn server and then down to

00:14:29,709 --> 00:14:33,249
Alice when Alice sends information to

00:14:31,540 --> 00:14:35,019
Bob it's going to go straight across so

00:14:33,249 --> 00:14:35,949
in an ideal world what we're hoping to

00:14:35,019 --> 00:14:37,660
accomplish is you're going to have a

00:14:35,949 --> 00:14:39,730
peer to peer connection where the data

00:14:37,660 --> 00:14:43,420
goes directly across and both in both

00:14:39,730 --> 00:14:45,160
both directions but in the case of you

00:14:43,420 --> 00:14:46,809
know network issues or something like a

00:14:45,160 --> 00:14:48,519
firewall you're going to reuse that

00:14:46,809 --> 00:14:50,889
relay server that turn server is sort of

00:14:48,519 --> 00:14:53,799
a backup so what this ends up giving you

00:14:50,889 --> 00:14:55,119
is a hundred percent coverage or 99.9

00:14:53,799 --> 00:14:56,589
I'm guessing it's probably some weird

00:14:55,119 --> 00:14:58,660
scenario out there that won't work still

00:14:56,589 --> 00:15:00,459
but the the piece of takeaway from this

00:14:58,660 --> 00:15:02,290
is through this technique known as ice

00:15:00,459 --> 00:15:04,929
we have the capability to connect pretty

00:15:02,290 --> 00:15:06,009
much everyone peer-to-peer so that small

00:15:04,929 --> 00:15:07,209
percentage of the time you're going to

00:15:06,009 --> 00:15:08,379
go through that relay server you're

00:15:07,209 --> 00:15:09,429
still going to pay some bandwidth there

00:15:08,379 --> 00:15:10,990
but the rest of the time you're

00:15:09,429 --> 00:15:12,879
basically going directly across that

00:15:10,990 --> 00:15:15,879
channel and hopefully saving a ton of

00:15:12,879 --> 00:15:16,749
money on bandwidth so the complete

00:15:15,879 --> 00:15:18,699
connection would look something like

00:15:16,749 --> 00:15:20,679
this Bob and Alice would exchange

00:15:18,699 --> 00:15:22,059
information ideally they'd share stuff

00:15:20,679 --> 00:15:24,429
across that period if your channel in

00:15:22,059 --> 00:15:25,689
non perfect worlds they'd share some

00:15:24,429 --> 00:15:29,019
stuff through the turn server and the

00:15:25,689 --> 00:15:30,369
rest would go across directly simple

00:15:29,019 --> 00:15:32,439
right you guys ready to run out there

00:15:30,369 --> 00:15:34,929
today spin up a couple servers configure

00:15:32,439 --> 00:15:37,209
them learn all about the api's and start

00:15:34,929 --> 00:15:41,620
playing with this stuff that's kind of

00:15:37,209 --> 00:15:42,970
where we spoke comes in so resposta

00:15:41,620 --> 00:15:44,190
bella purrs the ability to easily add

00:15:42,970 --> 00:15:47,040
real-time communication

00:15:44,190 --> 00:15:49,530
so their app the key being easy it's

00:15:47,040 --> 00:15:51,180
sort of like WebRTC but we wrap

00:15:49,530 --> 00:15:52,620
everything up for you guys so the turns

00:15:51,180 --> 00:15:53,970
server the stun server all that

00:15:52,620 --> 00:15:55,350
signaling process the whole connection

00:15:53,970 --> 00:15:57,090
piece you don't have to worry about that

00:15:55,350 --> 00:15:59,760
you can just focus on doing what you do

00:15:57,090 --> 00:16:01,440
which is developing applications so if

00:15:59,760 --> 00:16:03,120
you remember Bob and Alice the signaling

00:16:01,440 --> 00:16:05,040
process is done server the turn server

00:16:03,120 --> 00:16:06,840
with your spoke it looks something more

00:16:05,040 --> 00:16:09,210
like this you connect out to respond

00:16:06,840 --> 00:16:11,070
that whole handshaking process for you

00:16:09,210 --> 00:16:12,180
figure out how to connect you up and

00:16:11,070 --> 00:16:14,520
then all you have to worry about as a

00:16:12,180 --> 00:16:15,540
dev is really creating the application

00:16:14,520 --> 00:16:16,410
and how they're going to connect so

00:16:15,540 --> 00:16:17,760
whether they're going to have a video

00:16:16,410 --> 00:16:19,110
call or they're going to have an audio

00:16:17,760 --> 00:16:21,420
call or they're going to share some data

00:16:19,110 --> 00:16:23,160
back and forth that's really all you got

00:16:21,420 --> 00:16:25,890
to worry about so we take care of kind

00:16:23,160 --> 00:16:28,770
of the the harder bits for you good old

00:16:25,890 --> 00:16:30,450
Billy banks my homie but wait there's

00:16:28,770 --> 00:16:32,100
more there's a few features that we've

00:16:30,450 --> 00:16:33,330
added to kind of round out the stack so

00:16:32,100 --> 00:16:34,670
you might be wondering well ki could

00:16:33,330 --> 00:16:37,950
still go and turn out those servers

00:16:34,670 --> 00:16:39,690
myself what's the value here one it's

00:16:37,950 --> 00:16:41,130
open source our javascript libraries are

00:16:39,690 --> 00:16:42,780
at least that you can edit and add

00:16:41,130 --> 00:16:44,760
features to yourself cross browser

00:16:42,780 --> 00:16:46,890
supports so all of those nights prefixes

00:16:44,760 --> 00:16:48,630
that we love and hate so much we're

00:16:46,890 --> 00:16:50,280
taking care of those for you concepts

00:16:48,630 --> 00:16:51,900
like endpoint discovery and this is kind

00:16:50,280 --> 00:16:53,850
of a big one that's not taken care of by

00:16:51,900 --> 00:16:55,320
WebRTC so how do you find people within

00:16:53,850 --> 00:16:57,060
the network right how do you find people

00:16:55,320 --> 00:16:58,500
within your application framework that

00:16:57,060 --> 00:16:59,820
you want to talk to you that stuff

00:16:58,500 --> 00:17:01,410
doesn't really exist natively in WebRTC

00:16:59,820 --> 00:17:03,810
so you have to sort of bake it out

00:17:01,410 --> 00:17:05,939
yourself we add capabilities and methods

00:17:03,810 --> 00:17:08,400
to handle that stuff for you concepts

00:17:05,939 --> 00:17:09,870
like groups messaging features so if you

00:17:08,400 --> 00:17:11,280
want to send messages out to a group or

00:17:09,870 --> 00:17:12,990
to a single individual we added those

00:17:11,280 --> 00:17:14,730
capabilities as well things like

00:17:12,990 --> 00:17:17,310
presence whether or not you're online

00:17:14,730 --> 00:17:19,140
offline available we had capabilities

00:17:17,310 --> 00:17:21,569
for that and a really cool one phone

00:17:19,140 --> 00:17:24,089
system support so if you want to have

00:17:21,569 --> 00:17:25,770
your mobile or web app talk out to the

00:17:24,089 --> 00:17:26,910
traditional phone network so you wanted

00:17:25,770 --> 00:17:27,930
to have a button on your site that

00:17:26,910 --> 00:17:29,790
allows you to call up somebody else's

00:17:27,930 --> 00:17:31,980
phone or vice versa you want to have a

00:17:29,790 --> 00:17:33,420
phone call into your web app we added

00:17:31,980 --> 00:17:35,850
that support as well and there's also

00:17:33,420 --> 00:17:38,580
mobile SDKs WebRTC is currently not

00:17:35,850 --> 00:17:41,490
supported in most if not almost all

00:17:38,580 --> 00:17:43,260
mobile devices so we added the

00:17:41,490 --> 00:17:44,760
capabilities to do those as native

00:17:43,260 --> 00:17:47,430
applications and tie them into your

00:17:44,760 --> 00:17:50,010
existing web apps all right let's get

00:17:47,430 --> 00:17:51,060
down to the good stuff the code first

00:17:50,010 --> 00:17:52,320
thing you want to do if you want to play

00:17:51,060 --> 00:17:53,640
around with remote for a mark to set

00:17:52,320 --> 00:17:54,900
over torr spoke that I oh and get a free

00:17:53,640 --> 00:17:57,600
developer account start playing around

00:17:54,900 --> 00:17:58,080
plug their getting connected to sort of

00:17:57,600 --> 00:17:59,490
the first

00:17:58,080 --> 00:18:09,000
and I'm going to actually switch this

00:17:59,490 --> 00:18:10,529
out to show some code view here so

00:18:09,000 --> 00:18:12,029
sublime text a little easier is that big

00:18:10,529 --> 00:18:13,230
enough for everybody not sure we're

00:18:12,029 --> 00:18:17,750
going to get everybody all the way in

00:18:13,230 --> 00:18:20,159
the back but thumbs up thumbs down up

00:18:17,750 --> 00:18:21,179
all right I see pretty far back there

00:18:20,159 --> 00:18:25,110
sorry bud you're gonna have to come a

00:18:21,179 --> 00:18:27,029
little closer um okay so getting started

00:18:25,110 --> 00:18:28,890
with this how it all works it's just a

00:18:27,029 --> 00:18:31,639
JavaScript library so you dumped in and

00:18:28,890 --> 00:18:33,659
include and you're off and running

00:18:31,639 --> 00:18:34,980
getting connected like I said it's kind

00:18:33,659 --> 00:18:36,029
of the first part that whole signaling

00:18:34,980 --> 00:18:37,769
portion we talked about exchanging

00:18:36,029 --> 00:18:39,120
information how we connect two browsers

00:18:37,769 --> 00:18:41,100
together that's going to happen during

00:18:39,120 --> 00:18:42,809
this connection phase and to do that

00:18:41,100 --> 00:18:44,700
you're going to have an app ID this is

00:18:42,809 --> 00:18:47,220
kind of how you identify yourself within

00:18:44,700 --> 00:18:49,350
their spokes and how you identify your

00:18:47,220 --> 00:18:51,570
application it acts as a container of

00:18:49,350 --> 00:18:53,460
sorts so anything that connects users

00:18:51,570 --> 00:18:55,440
into that app ID is going to be sort of

00:18:53,460 --> 00:18:56,909
your container for all your users so if

00:18:55,440 --> 00:18:58,139
you guys all connected under this app ID

00:18:56,909 --> 00:19:00,750
here we'd be able to find each other

00:18:58,139 --> 00:19:02,250
everybody in this room if we split half

00:19:00,750 --> 00:19:03,899
of the room into one app ID and half on

00:19:02,250 --> 00:19:05,429
the other it would split that the group

00:19:03,899 --> 00:19:06,990
down so the half on the left wouldn't

00:19:05,429 --> 00:19:08,669
know about the half on the right so your

00:19:06,990 --> 00:19:11,370
app idea is basically your container for

00:19:08,669 --> 00:19:12,990
your application there's concepts you'll

00:19:11,370 --> 00:19:14,909
hear me to mention endpoints and peers

00:19:12,990 --> 00:19:17,220
those are basically just users or

00:19:14,909 --> 00:19:19,980
browsers so an endpoint is somebody that

00:19:17,220 --> 00:19:21,299
you're trying to connect to so the first

00:19:19,980 --> 00:19:23,549
step is creating an instance of the

00:19:21,299 --> 00:19:25,860
client object to do that with respond

00:19:23,549 --> 00:19:27,570
respond yet client we're going to pass

00:19:25,860 --> 00:19:29,159
in that application ID and then there's

00:19:27,570 --> 00:19:31,019
a key piece here called development mode

00:19:29,159 --> 00:19:32,429
we're gonna set that to true basically

00:19:31,019 --> 00:19:33,840
what this does is handle all the token

00:19:32,429 --> 00:19:35,159
authentication for you so in a

00:19:33,840 --> 00:19:36,299
production application like most

00:19:35,159 --> 00:19:38,460
frameworks you're going to have to take

00:19:36,299 --> 00:19:42,090
care of token off indication and

00:19:38,460 --> 00:19:44,100
management of user privileges with

00:19:42,090 --> 00:19:45,750
development mode we're just like leave

00:19:44,100 --> 00:19:47,549
that wide open so you can just connect

00:19:45,750 --> 00:19:49,830
in play with all the different AP is all

00:19:47,549 --> 00:19:50,880
users have access to everything it makes

00:19:49,830 --> 00:19:52,320
it a lot easier to get up and running

00:19:50,880 --> 00:19:53,700
and start doing proof-of-concept work

00:19:52,320 --> 00:19:55,049
once you're ready to go into production

00:19:53,700 --> 00:19:56,870
you're going to have some simple stuff

00:19:55,049 --> 00:20:01,350
you plug in using a node library maybe

00:19:56,870 --> 00:20:02,820
to handle token authentication so once

00:20:01,350 --> 00:20:04,620
we get that client object we can start

00:20:02,820 --> 00:20:06,179
calling some listeners on it and calling

00:20:04,620 --> 00:20:07,830
some methods the listener we're going to

00:20:06,179 --> 00:20:09,360
add here is connect and that's basically

00:20:07,830 --> 00:20:10,770
the event saying hey you're connected in

00:20:09,360 --> 00:20:11,100
the framework start playing around your

00:20:10,770 --> 00:20:12,419
video

00:20:11,100 --> 00:20:14,429
calls are ready to rock your you're

00:20:12,419 --> 00:20:15,929
ready to start going and then to

00:20:14,429 --> 00:20:18,450
actually get connected we're going to

00:20:15,929 --> 00:20:20,669
call client connect and pass through an

00:20:18,450 --> 00:20:22,410
endpoint ID and in this case it would be

00:20:20,669 --> 00:20:24,299
the idea that I wanted to connect us so

00:20:22,410 --> 00:20:26,910
if i connect it in his Kyle I'd pass in

00:20:24,299 --> 00:20:28,799
the username Kyle or an email address or

00:20:26,910 --> 00:20:30,120
a grid however you store your users in

00:20:28,799 --> 00:20:31,980
your database it's up to you as the dev

00:20:30,120 --> 00:20:33,510
tough to pass that stuff through but the

00:20:31,980 --> 00:20:34,650
endpoint ID'd the takeaway from that is

00:20:33,510 --> 00:20:36,510
that's how you're going to find people

00:20:34,650 --> 00:20:38,850
within the system so if I login is Kyle

00:20:36,510 --> 00:20:40,140
you guys can look me up by Kyle so

00:20:38,850 --> 00:20:41,309
that's going to connect us the kinect

00:20:40,140 --> 00:20:48,590
event will fire off and we'll be ready

00:20:41,309 --> 00:20:48,590
to roll jump back over here for a second

00:20:57,200 --> 00:21:01,880
so yeah is it a little bit of glitch

00:20:59,580 --> 00:21:01,880
here

00:21:07,840 --> 00:21:13,990
alright so messaging given the time here

00:21:12,100 --> 00:21:19,270
we're going to just look at the code for

00:21:13,990 --> 00:21:20,919
this so messaging very simple you

00:21:19,270 --> 00:21:22,510
connect up once you're connected you can

00:21:20,919 --> 00:21:23,799
start accessing the methods available to

00:21:22,510 --> 00:21:25,150
you in the framework so a messaging

00:21:23,799 --> 00:21:26,590
would be I want to send a message to

00:21:25,150 --> 00:21:28,900
another user this is an example of

00:21:26,590 --> 00:21:31,390
point-to-point messaging so me to one

00:21:28,900 --> 00:21:33,640
other person and to do that you would

00:21:31,390 --> 00:21:34,779
call client listen for a message event

00:21:33,640 --> 00:21:36,880
that's when you receive a message from

00:21:34,779 --> 00:21:38,799
someone and you just get back an event

00:21:36,880 --> 00:21:40,630
containing the message data and all that

00:21:38,799 --> 00:21:42,399
is is a simple JSON object just

00:21:40,630 --> 00:21:44,230
JavaScript object so you can access you

00:21:42,399 --> 00:21:45,370
see here event message message that's

00:21:44,230 --> 00:21:47,860
going to be the message value of what

00:21:45,370 --> 00:21:50,380
you've received to send a message you're

00:21:47,860 --> 00:21:51,610
going to first get the ID of the person

00:21:50,380 --> 00:21:53,860
you want to talk to you so in this case

00:21:51,610 --> 00:21:55,299
we're talking about remote ID and this

00:21:53,860 --> 00:21:58,990
is just some jQuery I've used here to

00:21:55,299 --> 00:22:00,279
access some inputs endpoint that's the

00:21:58,990 --> 00:22:01,840
person you want to talk to you so we're

00:22:00,279 --> 00:22:03,700
going to call client get endpoint

00:22:01,840 --> 00:22:05,230
passing in the ID of the person we'd

00:22:03,700 --> 00:22:06,940
like to talk to so in this case if it

00:22:05,230 --> 00:22:08,919
was John I'd passing the idea of John

00:22:06,940 --> 00:22:10,120
and once I have access to that end point

00:22:08,919 --> 00:22:12,399
i can start communicating with that

00:22:10,120 --> 00:22:15,580
person so I'm going to call n points n

00:22:12,399 --> 00:22:17,169
message here with the object containing

00:22:15,580 --> 00:22:18,429
a message property and the value of the

00:22:17,169 --> 00:22:20,289
message I want to send to that person

00:22:18,429 --> 00:22:21,820
and that's really it for sending

00:22:20,289 --> 00:22:23,140
messages so you could get a simple chat

00:22:21,820 --> 00:22:27,429
application going with that pretty

00:22:23,140 --> 00:22:29,289
quickly so group messaging will actually

00:22:27,429 --> 00:22:30,669
look at a quick demo on this one so if

00:22:29,289 --> 00:22:32,409
anybody's following along out there if I

00:22:30,669 --> 00:22:37,240
get a couple people to click on that

00:22:32,409 --> 00:22:38,559
link the DN XV you see link there and

00:22:37,240 --> 00:22:44,470
that should open up the group messaging

00:22:38,559 --> 00:22:45,909
window you'll see here I've got not

00:22:44,470 --> 00:22:47,020
connected to respond out connected to

00:22:45,909 --> 00:22:48,340
the group so what's going to happen here

00:22:47,020 --> 00:22:51,220
is I'm going to put in a user name i'm

00:22:48,340 --> 00:22:52,240
just going to use kyle hit connect it's

00:22:51,220 --> 00:22:53,590
going to call out to her spoke go

00:22:52,240 --> 00:22:55,179
through that connections process that we

00:22:53,590 --> 00:22:56,289
talked about and then it's actually

00:22:55,179 --> 00:22:58,210
going to automatically join a group

00:22:56,289 --> 00:23:00,039
called foo and we'll look at how we did

00:22:58,210 --> 00:23:05,340
that in a second you can see I am typing

00:23:00,039 --> 00:23:07,210
things that's an awesome message Rutgers

00:23:05,340 --> 00:23:09,010
so you can see here it's just really

00:23:07,210 --> 00:23:10,600
simple but it's sending messages out to

00:23:09,010 --> 00:23:13,630
an entire group of people and the UI is

00:23:10,600 --> 00:23:16,840
purposefully dumb it's meant to be just

00:23:13,630 --> 00:23:20,200
for for showcasing here so to look at

00:23:16,840 --> 00:23:21,549
the code for that it's very similar to

00:23:20,200 --> 00:23:21,760
the code we had in the original except

00:23:21,549 --> 00:23:24,520
we

00:23:21,760 --> 00:23:25,540
some functionality to create a group so

00:23:24,520 --> 00:23:27,070
we're going to listen for that connect

00:23:25,540 --> 00:23:28,510
event again and when the kinect event

00:23:27,070 --> 00:23:31,180
actually happens we're going to join

00:23:28,510 --> 00:23:33,100
this group I passing a group ID and

00:23:31,180 --> 00:23:35,410
there's on success in a non message

00:23:33,100 --> 00:23:37,000
handler inside the group so on success

00:23:35,410 --> 00:23:39,160
I'm just going to store that group as a

00:23:37,000 --> 00:23:41,020
variable on message I'm actually going

00:23:39,160 --> 00:23:42,580
to pass the message out to that

00:23:41,020 --> 00:23:44,410
unordered list that I'm showing in the

00:23:42,580 --> 00:23:46,540
window there and then to send a message

00:23:44,410 --> 00:23:47,770
to a group it's the same as sending your

00:23:46,540 --> 00:23:49,300
message to a single person or an

00:23:47,770 --> 00:23:50,620
endpoint which is called group Sun

00:23:49,300 --> 00:23:53,410
message we pass through the value that

00:23:50,620 --> 00:23:54,820
we want to send out so pretty simple

00:23:53,410 --> 00:23:56,530
stuff there to send messaging to a group

00:23:54,820 --> 00:23:58,300
you know 10 15 lines of code you can get

00:23:56,530 --> 00:24:01,000
group messaging work for a chat type

00:23:58,300 --> 00:24:04,300
application so to get into something a

00:24:01,000 --> 00:24:06,820
little bit more interesting take a look

00:24:04,300 --> 00:24:09,100
at video and pray to the demo gods that

00:24:06,820 --> 00:24:10,810
this all works perfectly if somebody

00:24:09,100 --> 00:24:12,400
could go ahead and just click on this

00:24:10,810 --> 00:24:13,840
link that's falling along there and then

00:24:12,400 --> 00:24:15,760
just give me a little hands up that

00:24:13,840 --> 00:24:22,120
you're you're going to participate here

00:24:15,760 --> 00:24:23,110
in the demo please all right if you just

00:24:22,120 --> 00:24:28,360
let me know the name that you actually

00:24:23,110 --> 00:24:29,860
logged in with Rob all lowercase ok so

00:24:28,360 --> 00:24:30,820
I'm connecting in this Kyle you can see

00:24:29,860 --> 00:24:32,440
there the whole connection process

00:24:30,820 --> 00:24:34,180
happen and then i'm going to call out to

00:24:32,440 --> 00:24:39,060
connect to rob so I'm just typing in

00:24:34,180 --> 00:24:42,400
Rob's name here it's kind of tiny and

00:24:39,060 --> 00:24:43,450
I'm going to hit call first thing you're

00:24:42,400 --> 00:24:45,250
going to see happen here is this little

00:24:43,450 --> 00:24:46,690
pop-up it's asking me to allow access to

00:24:45,250 --> 00:24:48,940
my camera and microphone that's a

00:24:46,690 --> 00:24:50,260
security feature once I click allow Rob

00:24:48,940 --> 00:24:52,300
should see the same thing on his end

00:24:50,260 --> 00:24:54,210
we'll see my video clicks in here and

00:24:52,300 --> 00:25:00,860
now hopefully we're going to see Rob's

00:24:54,210 --> 00:25:03,650
nice hmm

00:25:00,860 --> 00:25:06,150
so you're live on camera all right so

00:25:03,650 --> 00:25:07,560
this is actually a hell of a lot simpler

00:25:06,150 --> 00:25:09,210
than you might expect and this is kind

00:25:07,560 --> 00:25:10,590
of the cool stuff with WebRTC use I'm

00:25:09,210 --> 00:25:12,600
able to start up a video call using

00:25:10,590 --> 00:25:16,650
nothing but a couple dibs gives some

00:25:12,600 --> 00:25:22,470
simple jQuery and the remark library so

00:25:16,650 --> 00:25:24,210
looking at this example here we've got a

00:25:22,470 --> 00:25:25,710
couple new things here we did the whole

00:25:24,210 --> 00:25:28,260
connection process and I'm not showing

00:25:25,710 --> 00:25:29,520
that here just keep the code simple but

00:25:28,260 --> 00:25:30,990
you've got this div / remote video

00:25:29,520 --> 00:25:32,790
source in the Dib for the local video

00:25:30,990 --> 00:25:36,480
source if we jump back here there's your

00:25:32,790 --> 00:25:38,310
remote there's your local once we get

00:25:36,480 --> 00:25:39,870
past that we've got some call options

00:25:38,310 --> 00:25:41,940
here and this is just an object that

00:25:39,870 --> 00:25:43,560
passes through constraints constraints

00:25:41,940 --> 00:25:46,500
are basically what I want to allow

00:25:43,560 --> 00:25:48,750
access to so I as the developer or I as

00:25:46,500 --> 00:25:50,820
the user so if you wanted to add you

00:25:48,750 --> 00:25:52,020
know some sort of a UI feature that

00:25:50,820 --> 00:25:53,670
allowed users to turn off the microphone

00:25:52,020 --> 00:25:54,720
or to turn off their web camera and

00:25:53,670 --> 00:25:56,490
choose which one they wanted to share

00:25:54,720 --> 00:25:58,710
out this is where you would update those

00:25:56,490 --> 00:26:00,360
properties so in this case i'm sharing

00:25:58,710 --> 00:26:03,060
out audio and video meaning we're going

00:26:00,360 --> 00:26:05,160
to go share everything and have a full

00:26:03,060 --> 00:26:07,140
video call with Rob then we've got

00:26:05,160 --> 00:26:09,270
methods here for on local media which is

00:26:07,140 --> 00:26:11,070
when my video becomes available and on

00:26:09,270 --> 00:26:13,110
connect which is when Rob's video became

00:26:11,070 --> 00:26:14,760
available so these handler methods here

00:26:13,110 --> 00:26:16,980
basically say you know what I want to do

00:26:14,760 --> 00:26:18,000
when that becomes available to me what

00:26:16,980 --> 00:26:20,010
you're going to get back in that event

00:26:18,000 --> 00:26:22,200
is actually a video element so we hand

00:26:20,010 --> 00:26:24,000
that back we wrap up the the binary

00:26:22,200 --> 00:26:26,160
stream or the raw stream of video data

00:26:24,000 --> 00:26:27,300
in a video element pass it back to you

00:26:26,160 --> 00:26:29,160
and then all you have to do is attach it

00:26:27,300 --> 00:26:30,870
to a dip and I did that by calling this

00:26:29,160 --> 00:26:32,130
set video method and all this really

00:26:30,870 --> 00:26:34,050
does is take the dip that I want to

00:26:32,130 --> 00:26:35,220
attach the stream 2 and then passes out

00:26:34,050 --> 00:26:37,440
the element so you can see here I'm

00:26:35,220 --> 00:26:38,820
calling event element that's going to be

00:26:37,440 --> 00:26:41,010
the actual video element that's getting

00:26:38,820 --> 00:26:43,800
returned and local video source was the

00:26:41,010 --> 00:26:45,930
damn that I wanted to access so then

00:26:43,800 --> 00:26:47,250
we're listening for a call event this is

00:26:45,930 --> 00:26:50,280
what's going to listen for when an

00:26:47,250 --> 00:26:51,870
incoming call is happening so here you

00:26:50,280 --> 00:26:53,310
can see I'm calling active call equals

00:26:51,870 --> 00:26:55,110
event call that's going to be the call

00:26:53,310 --> 00:26:56,400
object that's gets passed back from that

00:26:55,110 --> 00:26:58,190
call and that's how you interact with

00:26:56,400 --> 00:27:00,270
things like video calls or audio calls

00:26:58,190 --> 00:27:01,890
and then when doing a simple check here

00:27:00,270 --> 00:27:03,240
for active call caller that's going to

00:27:01,890 --> 00:27:04,560
say whether or not I'm the one that

00:27:03,240 --> 00:27:06,300
initiated this call I don't want to

00:27:04,560 --> 00:27:08,400
answer myself obviously so this little

00:27:06,300 --> 00:27:10,020
check here takes care of that and then

00:27:08,400 --> 00:27:11,340
to answer a call we're going to SiC an

00:27:10,020 --> 00:27:13,260
active called out answer so when I

00:27:11,340 --> 00:27:13,830
placed a call to rob his browser checked

00:27:13,260 --> 00:27:15,210
for this he says

00:27:13,830 --> 00:27:16,740
okay I'm not the guy that made this call

00:27:15,210 --> 00:27:18,029
I'm going to call active called out

00:27:16,740 --> 00:27:20,640
answer and pass through those call

00:27:18,029 --> 00:27:21,990
options that we supplied and then he's

00:27:20,640 --> 00:27:24,029
going to accident add a listener for a

00:27:21,990 --> 00:27:26,519
hang-up event hang-up is basically when

00:27:24,029 --> 00:27:28,289
any disconnect occurs and to actually

00:27:26,519 --> 00:27:29,610
make the call happen we're going to get

00:27:28,289 --> 00:27:31,500
access to that end point the same way we

00:27:29,610 --> 00:27:33,210
did for messaging by calling client get

00:27:31,500 --> 00:27:34,679
endpoint passing through the recipient

00:27:33,210 --> 00:27:36,720
idea of the person we want to talk to so

00:27:34,679 --> 00:27:38,279
Rob in this case once I have access to

00:27:36,720 --> 00:27:40,169
that end point i'm going to call start

00:27:38,279 --> 00:27:42,299
video call on and pass through those

00:27:40,169 --> 00:27:44,070
call options so as the person initiating

00:27:42,299 --> 00:27:46,380
the call all i have to do to kick things

00:27:44,070 --> 00:27:48,149
off is call endpoint start video call

00:27:46,380 --> 00:27:50,279
pass through those few options which was

00:27:48,149 --> 00:27:52,559
just a simple JavaScript object and then

00:27:50,279 --> 00:27:53,909
wait for the call to come back and from

00:27:52,559 --> 00:27:55,350
there here's my set video method I

00:27:53,909 --> 00:27:56,970
mention all I'm doing is using just

00:27:55,350 --> 00:27:59,070
straight-up JavaScript you in document

00:27:56,970 --> 00:28:00,330
document by ID clearing out anything

00:27:59,070 --> 00:28:01,799
that's already existing and appending

00:28:00,330 --> 00:28:03,269
the video element that I pass through I

00:28:01,799 --> 00:28:04,470
got back from the event and that's

00:28:03,269 --> 00:28:07,289
really all there is to start a video

00:28:04,470 --> 00:28:09,570
call you know we're looking at 55 lines

00:28:07,289 --> 00:28:12,480
of code here with some some fluff for

00:28:09,570 --> 00:28:17,760
the jquery stuff and the UI so pretty

00:28:12,480 --> 00:28:21,539
simple yeah so we'll go ahead and kill

00:28:17,760 --> 00:28:23,460
this one so you're up and we'll look at

00:28:21,539 --> 00:28:25,380
something very similar which is screen

00:28:23,460 --> 00:28:27,149
sharing this actually functions almost

00:28:25,380 --> 00:28:28,710
exactly the same I'm going to pick on

00:28:27,149 --> 00:28:33,299
Rob and ask for his help again you don't

00:28:28,710 --> 00:28:34,799
mind following along there I'm going to

00:28:33,299 --> 00:28:36,899
hit connect connect up the same way we

00:28:34,799 --> 00:28:38,429
hit in the other examples and then once

00:28:36,899 --> 00:28:40,440
I get the thumbs-up from Rob that he's

00:28:38,429 --> 00:28:41,789
connected I'm going to go ahead and call

00:28:40,440 --> 00:28:43,980
it to rob only this time instead of

00:28:41,789 --> 00:28:44,970
sharing my web camera is the video

00:28:43,980 --> 00:28:48,210
stream source it's going to actually

00:28:44,970 --> 00:28:49,320
take capture of my desktop so you're

00:28:48,210 --> 00:28:51,720
going to see here this little pop-up

00:28:49,320 --> 00:28:53,130
this is very familiar to anybody that's

00:28:51,720 --> 00:28:55,649
used screen sharing and Google Hangouts

00:28:53,130 --> 00:28:57,210
it's the exact same UI I can choose

00:28:55,649 --> 00:28:58,799
which screen i want to share out so if i

00:28:57,210 --> 00:29:04,320
want to share my whole screen or maybe

00:28:58,799 --> 00:29:06,000
just sublime text i'm going to hit share

00:29:04,320 --> 00:29:08,370
and it's going to bump me over to the

00:29:06,000 --> 00:29:10,470
app that i shared out and then you can

00:29:08,370 --> 00:29:11,669
see here this is actually my screen

00:29:10,470 --> 00:29:13,649
being shared out and Rob should be

00:29:11,669 --> 00:29:14,700
seeing the same thing on his end sounds

00:29:13,649 --> 00:29:16,019
interesting for the rest of you out in

00:29:14,700 --> 00:29:19,169
the audience I'm sorry this is a one to

00:29:16,019 --> 00:29:20,460
one screen sharing demo but the screen

00:29:19,169 --> 00:29:23,220
should share out he should be able to

00:29:20,460 --> 00:29:26,440
see any updates on making on my side and

00:29:23,220 --> 00:29:30,370
I'm hoping for a thumbs up rub

00:29:26,440 --> 00:29:33,600
want want demo problems is there any

00:29:30,370 --> 00:29:33,600
sort of allow that came up or anything

00:29:38,220 --> 00:29:42,129
so what should happen when the demo

00:29:40,509 --> 00:29:44,289
works properly is that Rob should shade

00:29:42,129 --> 00:29:46,750
of screen so we'll just push past that

00:29:44,289 --> 00:29:48,309
it's probably a simple fix of something

00:29:46,750 --> 00:29:50,169
with the security going on there but I

00:29:48,309 --> 00:29:53,889
want to show you guys the code that's

00:29:50,169 --> 00:29:55,330
the the more interesting part of this ok

00:29:53,889 --> 00:29:56,620
so again we've got a video element for

00:29:55,330 --> 00:29:59,259
local we've got a video element for

00:29:56,620 --> 00:30:01,779
remote similar stuff that we did in the

00:29:59,259 --> 00:30:03,279
video screen example of the video

00:30:01,779 --> 00:30:04,779
sharing example the only main difference

00:30:03,279 --> 00:30:07,570
here is that we've got to install small

00:30:04,779 --> 00:30:09,190
plugging this is sort of a polyfill for

00:30:07,570 --> 00:30:10,720
Chrome right now and tell screen sharing

00:30:09,190 --> 00:30:12,909
gets rolled into the new release of

00:30:10,720 --> 00:30:14,350
chrome once that happens you won't have

00:30:12,909 --> 00:30:16,029
to do this plugin mess anymore I

00:30:14,350 --> 00:30:17,470
mentioned this stuff doesn't require

00:30:16,029 --> 00:30:18,639
plugins the only time it required

00:30:17,470 --> 00:30:20,259
plugins is when you're on the bleeding

00:30:18,639 --> 00:30:22,389
edge and the features haven't been fully

00:30:20,259 --> 00:30:24,549
rolled out into the browser yet so this

00:30:22,389 --> 00:30:25,809
code here is basically handling a check

00:30:24,549 --> 00:30:28,450
to say hey do they have the chrome

00:30:25,809 --> 00:30:30,159
extension yet if not we're going to go

00:30:28,450 --> 00:30:31,750
ahead and let them install it luckily

00:30:30,159 --> 00:30:33,039
it's an inline installation meaning they

00:30:31,750 --> 00:30:34,120
don't have to leave your page they don't

00:30:33,039 --> 00:30:35,740
have to go out to another website to

00:30:34,120 --> 00:30:38,230
download the plugin we can download it

00:30:35,740 --> 00:30:39,909
all right in that one page so it's

00:30:38,230 --> 00:30:41,830
actually go out find the plugin for me

00:30:39,909 --> 00:30:43,659
install it for the user if they don't

00:30:41,830 --> 00:30:44,889
have it give me a notification it's

00:30:43,659 --> 00:30:47,559
already rock and then we're going to

00:30:44,889 --> 00:30:50,080
move on so once this extension excel

00:30:47,559 --> 00:30:51,519
success happens or if I already have the

00:30:50,080 --> 00:30:53,080
extension which was my case which is why

00:30:51,519 --> 00:30:55,000
you did not see any sort of installation

00:30:53,080 --> 00:30:58,509
process happening and probably stop

00:30:55,000 --> 00:30:59,620
sharing my screen too we're going to get

00:30:58,509 --> 00:31:01,450
into the start screen share portion

00:30:59,620 --> 00:31:02,889
which is the same thing we saw our video

00:31:01,450 --> 00:31:04,360
sharing so I'm going to get access to

00:31:02,889 --> 00:31:06,279
that client endpoint and try to talk to

00:31:04,360 --> 00:31:07,899
rob here I'm going to get access to the

00:31:06,279 --> 00:31:09,580
local in the video element and then i'm

00:31:07,899 --> 00:31:11,559
going to call endpoint start screen

00:31:09,580 --> 00:31:12,759
share passing in the video element here

00:31:11,559 --> 00:31:14,110
this is a little bit different than the

00:31:12,759 --> 00:31:15,820
video example in that I'm actually just

00:31:14,110 --> 00:31:19,299
going to pass the local and remote video

00:31:15,820 --> 00:31:20,649
elements objects into the the method

00:31:19,299 --> 00:31:21,970
here and they're actually going to

00:31:20,649 --> 00:31:23,620
attach the video for me automatically

00:31:21,970 --> 00:31:24,700
this is just sort of a helper feature

00:31:23,620 --> 00:31:26,049
that was built in as part of the

00:31:24,700 --> 00:31:27,279
framework so you have options and how

00:31:26,049 --> 00:31:29,080
you actually connect things out

00:31:27,279 --> 00:31:31,360
depending on how you want to interact

00:31:29,080 --> 00:31:33,070
with that with that code so if you need

00:31:31,360 --> 00:31:35,529
more more access do you want to do some

00:31:33,070 --> 00:31:37,000
some more UI updates in between you can

00:31:35,529 --> 00:31:38,230
get that actual element back and edit it

00:31:37,000 --> 00:31:39,700
yourself if you want it just to

00:31:38,230 --> 00:31:40,330
automatically connect to a div and start

00:31:39,700 --> 00:31:42,279
screening you

00:31:40,330 --> 00:31:43,419
do it this way as well but basically to

00:31:42,279 --> 00:31:44,860
start a screen share it's the same way

00:31:43,419 --> 00:31:46,539
you just call endpoint start screen

00:31:44,860 --> 00:31:49,299
share instead of endpoint start video

00:31:46,539 --> 00:31:51,159
call you get the same thing back you get

00:31:49,299 --> 00:31:52,870
a video element return and it's just

00:31:51,159 --> 00:31:55,510
going to use your your screen as the

00:31:52,870 --> 00:31:57,659
source of sharing or screen video

00:31:55,510 --> 00:31:59,470
streaming as opposed to your webcam and

00:31:57,659 --> 00:32:01,870
then there's a handling method here at

00:31:59,470 --> 00:32:07,480
the bottom for if the extension fails to

00:32:01,870 --> 00:32:09,730
install properly so that's screen

00:32:07,480 --> 00:32:11,409
sharing docks and additional examples

00:32:09,730 --> 00:32:12,820
there's more stuff up on Doc's Tetris

00:32:11,409 --> 00:32:14,080
poke that I owe you can check out kind

00:32:12,820 --> 00:32:16,720
of how all this stuff functions and play

00:32:14,080 --> 00:32:17,799
around with it so to kind of wrap up a

00:32:16,720 --> 00:32:19,929
little bit i mean what's all this stuff

00:32:17,799 --> 00:32:22,919
mean what's the point of WebRTC why is

00:32:19,929 --> 00:32:25,149
it valuable why should you guys care a

00:32:22,919 --> 00:32:26,440
framework lycra spoke ads faster

00:32:25,149 --> 00:32:28,690
development so there's kind of a key

00:32:26,440 --> 00:32:30,399
takeaway there it's better user

00:32:28,690 --> 00:32:32,320
experience this is a really big one for

00:32:30,399 --> 00:32:34,419
me I like to harp on this this one

00:32:32,320 --> 00:32:35,860
specific point how many people in this

00:32:34,419 --> 00:32:37,510
room have gone to a website in the last

00:32:35,860 --> 00:32:39,850
couple months where they've been logged

00:32:37,510 --> 00:32:41,679
in people on the website they know who

00:32:39,850 --> 00:32:43,269
you are your session identifies you your

00:32:41,679 --> 00:32:44,950
account information maybe you're on your

00:32:43,269 --> 00:32:46,899
cell phone site or trying to pay a bill

00:32:44,950 --> 00:32:48,340
for utility or something they know

00:32:46,899 --> 00:32:49,539
everything about you basically they know

00:32:48,340 --> 00:32:51,220
the page you're looking at it's all

00:32:49,539 --> 00:32:52,870
there in the session but then when you

00:32:51,220 --> 00:32:54,190
need help you have to go dig up an 800

00:32:52,870 --> 00:32:55,389
number somewhere buried on their site

00:32:54,190 --> 00:32:56,860
that they don't want you to find you

00:32:55,389 --> 00:32:58,149
have to dial that number and you have to

00:32:56,860 --> 00:32:59,289
enter your account information and

00:32:58,149 --> 00:33:01,059
probably some other personal

00:32:59,289 --> 00:33:02,620
identification stuff to your security

00:33:01,059 --> 00:33:04,419
then you get somebody on the phone if

00:33:02,620 --> 00:33:06,010
you're lucky who then asks you for your

00:33:04,419 --> 00:33:07,299
account information and your mother's

00:33:06,010 --> 00:33:09,279
maiden name and all this identifying

00:33:07,299 --> 00:33:11,080
info all over again we've all been

00:33:09,279 --> 00:33:13,090
through that process it's painful it's

00:33:11,080 --> 00:33:14,919
usually ends up and getting hung up on a

00:33:13,090 --> 00:33:17,110
few times it takes an hour to get any

00:33:14,919 --> 00:33:18,700
kind of information you might want I'd

00:33:17,110 --> 00:33:19,980
like to propose that as developers we

00:33:18,700 --> 00:33:22,539
kind of have the power to change that

00:33:19,980 --> 00:33:24,279
given these tools in that same scenario

00:33:22,539 --> 00:33:26,320
there could simply be a button on the

00:33:24,279 --> 00:33:29,590
website that says click to call write or

00:33:26,320 --> 00:33:31,600
just call so you click the button it

00:33:29,590 --> 00:33:32,950
pops up a video chat you take all that

00:33:31,600 --> 00:33:35,200
session information that we already have

00:33:32,950 --> 00:33:37,059
access to through J us wrap it up in a

00:33:35,200 --> 00:33:38,139
simple j/s object and pass it across

00:33:37,059 --> 00:33:39,970
that channel to the support

00:33:38,139 --> 00:33:42,340
representative on the other end you can

00:33:39,970 --> 00:33:44,919
decrypt that information put it into a

00:33:42,340 --> 00:33:46,240
UI and give all the info access to that

00:33:44,919 --> 00:33:47,860
support rep that they need so they know

00:33:46,240 --> 00:33:49,750
who they're talking to they know what

00:33:47,860 --> 00:33:51,549
account information you have they know

00:33:49,750 --> 00:33:52,649
what page you're looking at and they can

00:33:51,549 --> 00:33:54,050
more readily help you with your problem

00:33:52,649 --> 00:33:55,010
so I just

00:33:54,050 --> 00:33:56,390
like to challenge you guys to start

00:33:55,010 --> 00:33:57,650
thinking about things in new ways I mean

00:33:56,390 --> 00:33:59,150
we haven't really had access to things

00:33:57,650 --> 00:34:01,100
like the microphone the camera and

00:33:59,150 --> 00:34:03,980
streaming media in JavaScript until

00:34:01,100 --> 00:34:06,980
recently and we just we have a chance to

00:34:03,980 --> 00:34:08,510
change the way things work with that so

00:34:06,980 --> 00:34:09,800
happy boss's yeah you build some cool

00:34:08,510 --> 00:34:11,390
app makes you guys a million dollars

00:34:09,800 --> 00:34:12,890
they're going to be pretty stoked but

00:34:11,390 --> 00:34:15,290
happy users it's kind of the bigger take

00:34:12,890 --> 00:34:16,760
away from me you know we have a chance

00:34:15,290 --> 00:34:18,770
to connect people you look at be my eyes

00:34:16,760 --> 00:34:20,030
you look at speaking exchange right

00:34:18,770 --> 00:34:21,140
there's a really a chance to you to

00:34:20,030 --> 00:34:22,910
change lives with the code you're

00:34:21,140 --> 00:34:25,250
creating and these tools are going to

00:34:22,910 --> 00:34:25,940
give you a chance to do that so the

00:34:25,250 --> 00:34:27,920
thing I'd like to leave you with

00:34:25,940 --> 00:34:29,990
communication should be a feature not a

00:34:27,920 --> 00:34:31,490
product I'd like to again challenge you

00:34:29,990 --> 00:34:33,110
to think about how communications could

00:34:31,490 --> 00:34:34,940
be built into your app instead of asking

00:34:33,110 --> 00:34:36,440
your users to go and open up skype or go

00:34:34,940 --> 00:34:38,660
jump over to Google hangout so we can

00:34:36,440 --> 00:34:40,429
have a call if you're on a remote team

00:34:38,660 --> 00:34:41,600
this is hugely important i mentioned

00:34:40,429 --> 00:34:43,280
that Apollo app that we built internally

00:34:41,600 --> 00:34:45,320
to use that was part of the driver for

00:34:43,280 --> 00:34:46,820
it is we wanted communications to happen

00:34:45,320 --> 00:34:48,110
in a seamless fashion and we wanted

00:34:46,820 --> 00:34:50,300
multiple ways to do it in very specific

00:34:48,110 --> 00:34:52,040
use cases so we built that tool out

00:34:50,300 --> 00:34:53,420
another thing I played around with as a

00:34:52,040 --> 00:34:54,860
demo is a technical interview

00:34:53,420 --> 00:34:56,480
application I'll give you a white

00:34:54,860 --> 00:34:58,220
boarding and code challenges and screen

00:34:56,480 --> 00:35:00,350
sharing all live over a video with a

00:34:58,220 --> 00:35:01,880
video chat in the background you know

00:35:00,350 --> 00:35:04,220
it's all stuff you can build so if you

00:35:01,880 --> 00:35:05,750
see use cases out there I mean there's

00:35:04,220 --> 00:35:07,790
ton of nails this is kind of the new

00:35:05,750 --> 00:35:09,530
hammer right so look at ways that you

00:35:07,790 --> 00:35:11,060
can start building communications into

00:35:09,530 --> 00:35:13,000
your applications as features rather

00:35:11,060 --> 00:35:15,380
than creating separate products for

00:35:13,000 --> 00:35:17,750
that's it for me again my name is Kyle

00:35:15,380 --> 00:35:19,700
tyack Kate I ever spoke do you can catch

00:35:17,750 --> 00:35:21,110
me on the twitters at geek gone nomad

00:35:19,700 --> 00:35:23,570
and if you guys want to play around with

00:35:21,110 --> 00:35:24,770
this stuff we spoke that IO are the

00:35:23,570 --> 00:35:26,300
holes example and source is all

00:35:24,770 --> 00:35:28,070
available to at that github URL at the

00:35:26,300 --> 00:35:30,470
bottom if you can't read it feel free to

00:35:28,070 --> 00:35:33,950
come up and I'll open it up to questions

00:35:30,470 --> 00:35:36,140
if we have time if not no questions no

00:35:33,950 --> 00:35:37,430
questions all right well then just find

00:35:36,140 --> 00:35:38,900
me afterwards I also brought a bunch of

00:35:37,430 --> 00:35:41,150
koozies for you guys if anybody wants a

00:35:38,900 --> 00:35:45,730
beer koozie for their cold drinks at the

00:35:41,150 --> 00:35:45,730
event come in stop up front thanks

00:36:12,110 --> 00:36:14,170

YouTube URL: https://www.youtube.com/watch?v=wjpix0VCeoE


