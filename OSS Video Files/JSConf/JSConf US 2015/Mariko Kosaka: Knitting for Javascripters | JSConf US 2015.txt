Title: Mariko Kosaka: Knitting for Javascripters | JSConf US 2015
Publication date: 2015-06-17
Playlist: JSConf US 2015
Description: 
	Wouldn't it be cool if you could "print out" your own javascript generated bitmap art as a knitted scarf ? Well, you can ! Knitting textiles is a lot like programing computers. You write your knit pattern (code), your brain compiles it, and your hands render knit stitches (1s) and purl stitches (0s). It means you can decipher knitting nomenclature like "k2, m1L, k1, m1L, k until 3 sts remain, m1R, k1, m1R, k2" into JavaScript. This talk will cover how you can program knitting patterns in JavaScript and then use an electronic knitting machine from the 1980's to make beautiful knitted textiles.

Transcript: https://gist.github.com/voodootikigod/a575bcb3cffc767f79a3
Captions: 
	00:00:15,179 --> 00:00:16,179
Is that working?

00:00:16,179 --> 00:00:17,179
Great.

00:00:17,179 --> 00:00:18,179
Hi!

00:00:18,179 --> 00:00:19,179
I'm super excited to be here and speaking at

00:00:19,179 --> 00:00:20,179
JSConf.

00:00:20,179 --> 00:00:21,179
My name is Mariko.

00:00:21,179 --> 00:00:22,480
That's my Twitter handle.

00:00:22,480 --> 00:00:25,599
I should be automatically tweeting this slide, linked

00:00:25,599 --> 00:00:29,689
to this slide, so if you're in the back and you want to see that, you can find

00:00:29,689 --> 00:00:30,689
it there.

00:00:30,689 --> 00:00:33,201
I will be joining a company called (inaudible) next week, which

00:00:33,201 --> 00:00:35,780
-- I'm super excited about that.

00:00:35,780 --> 00:00:38,640
But today I'm not going to talk about software engineering.

00:00:38,640 --> 00:00:40,910
I'm going to talk about knitting.

00:00:40,910 --> 00:00:42,690
And just in case you're wondering, like if you are

00:00:42,690 --> 00:00:46,870
at the wrong conference, I will assure you that I will have enough math and

00:00:46,870 --> 00:00:49,440
code examples for you to be interested.

00:00:49,440 --> 00:00:54,140
Just for the guideline, I have a visual relation down on the slide.

00:00:54,140 --> 00:00:58,820
So the blue dots are indications that the slide has some kind of math reference,

00:00:58,820 --> 00:01:00,220
computer science reference.

00:01:00,220 --> 00:01:06,880
The radius of the circle is how many scoops of ice cream I served myself after

00:01:06,880 --> 00:01:08,790
I figured that out.

00:01:08,790 --> 00:01:15,450
The yellow dots are some random GIF animations, because why not?

00:01:15,450 --> 00:01:16,450
So I like knitting.

00:01:16,450 --> 00:01:18,690
I've been doing knitting for quite a while.

00:01:18,690 --> 00:01:21,990
I think the first time I was doing it I was seven years old.

00:01:21,990 --> 00:01:23,729
It's something I've always done.

00:01:23,729 --> 00:01:28,860
Once a year, come winter, I knit a scarf or mitten.

00:01:28,860 --> 00:01:30,270
Something very simple.

00:01:30,270 --> 00:01:32,920
Nothing crazy like having an Etsy store or anything.

00:01:32,920 --> 00:01:37,550
So here's a few of my projects that I've done in recent years.

00:01:37,550 --> 00:01:40,869
One winter, I think three years ago, was a very

00:01:40,869 --> 00:01:45,900
special winter for me, because I learned to JavaScript while I was

00:01:45,900 --> 00:01:49,770
also working on this green scarf project.

00:01:49,770 --> 00:01:52,930
And I started to notice really interesting power of

00:01:52,930 --> 00:01:55,490
computer programming and the process of knitting.

00:01:55,490 --> 00:02:00,070
So, for example, when you get started -- like, if you've never knit

00:02:00,070 --> 00:02:03,610
something, knitting might look like this.

00:02:03,610 --> 00:02:05,840
Seven-year-old me was like -- I'm never going to be able to

00:02:05,840 --> 00:02:09,209
figure this out, this thing that mom and Grandma is doing.

00:02:09,209 --> 00:02:11,039
So intimidating.

00:02:11,039 --> 00:02:15,930
My experiences programming, the first time, was just installing NPM install

00:02:15,930 --> 00:02:17,650
on a terminal.

00:02:17,650 --> 00:02:19,590
It was so confusing.

00:02:19,590 --> 00:02:22,890
Words flying around, and is my laptop being hacked?

00:02:22,890 --> 00:02:25,760
And like what's going on?

00:02:25,760 --> 00:02:29,590
But we all know that once you've done it, once, and know, like, what

00:02:29,590 --> 00:02:35,010
exactly it's doing, you know, it's not so scary at all.

00:02:35,010 --> 00:02:38,439
The other thing -- computer programming is very binary.

00:02:38,439 --> 00:02:41,040
Knitting is very binary.

00:02:41,040 --> 00:02:44,269
The atomic unit, the smallest unit that you can do is

00:02:44,269 --> 00:02:46,760
two stitches, which is knit stitch and purl stitch.

00:02:46,760 --> 00:02:50,540
Knit stitch is the stitch that you pull the yarn from

00:02:50,540 --> 00:02:55,040
the back of the loop, and purl stitch is the yarn -- you push the yarn

00:02:55,040 --> 00:02:56,909
in front of the loop.

00:02:56,909 --> 00:03:00,870
And those two stitches create two distinct faces

00:03:00,870 --> 00:03:02,309
of fabric.

00:03:02,309 --> 00:03:05,989
And the combination of those two, much like we say -- programming

00:03:05,989 --> 00:03:10,430
is ones and zeroes -- creates a pattern in the fabric.

00:03:10,430 --> 00:03:13,960
So the green side of the fabric, which is 2x2 ribbing, which

00:03:13,960 --> 00:03:17,730
is commonly used for the cuff of your sweater or the neckline of your sweater,

00:03:17,730 --> 00:03:22,750
is two knit stitch, two purl stitch, alternating each other, and then

00:03:22,750 --> 00:03:24,269
going row by row.

00:03:24,269 --> 00:03:28,749
The other side of the pattern is the one I took from

00:03:28,749 --> 00:03:34,260
my sweater, which is a little more intricate, making a diagonal line.

00:03:34,260 --> 00:03:38,989
But if you look closely, it's just knit and purl stitch.

00:03:38,989 --> 00:03:41,680
Just one stitch by one stitch, shifting to the

00:03:41,680 --> 00:03:43,900
left to create a diagonal line.

00:03:43,900 --> 00:03:47,359
Knitters have a Github, actually.

00:03:47,359 --> 00:03:49,729
It's called Ravelry.

00:03:49,729 --> 00:03:52,650
People log in, you can put your patterns, sell your

00:03:52,650 --> 00:03:57,309
patterns, star somebody's projects, and show your photos.

00:03:57,309 --> 00:04:03,449
It's a central repository of knowledge that you do with knitting.

00:04:03,449 --> 00:04:07,819
And speaking of a central repository, code for knitting -- the knitting

00:04:07,819 --> 00:04:10,469
pattern -- looks like this.

00:04:10,469 --> 00:04:15,079
And I thought this was totally -- looked like code.

00:04:15,079 --> 00:04:18,709
Because there is, like, some letters that are kind of repeating,

00:04:18,709 --> 00:04:23,170
and maybe kind of like a variable, that's accessing the same information

00:04:23,170 --> 00:04:24,170
again and again.

00:04:24,170 --> 00:04:27,610
And there's more explicit loop indications.

00:04:27,610 --> 00:04:30,560
Like knit until two stitches remaining.

00:04:30,560 --> 00:04:34,199
Or repeat row one to four, for ten times.

00:04:34,199 --> 00:04:38,300
This brings me to -- I could pseudoknit in JavaScript.

00:04:38,300 --> 00:04:43,710
So I took this code, which was a scarf pattern, very simple scarf pattern, put it

00:04:43,710 --> 00:04:51,830
into 30 lines of JavaScript, to visualize what this would look like, virtually.

00:04:51,830 --> 00:04:53,370
And this is what I came out.

00:04:53,370 --> 00:04:55,139
You know, it is...

00:04:55,139 --> 00:04:56,990
It turned out it's only using a knit stitch.

00:04:56,990 --> 00:04:57,990
It's not a purl stitch.

00:04:57,990 --> 00:04:58,990
So it's okay.

00:04:58,990 --> 00:05:00,830
And it's a knit scarf.

00:05:00,830 --> 00:05:02,620
So making a triangular shape.

00:05:02,620 --> 00:05:03,620
Which is all right.

00:05:03,620 --> 00:05:04,900
I can understand that.

00:05:04,900 --> 00:05:08,150
So I actually knit that pattern myself, and I have

00:05:08,150 --> 00:05:09,240
it here.

00:05:09,240 --> 00:05:12,470
But it turns out it didn't quite become triangular.

00:05:12,470 --> 00:05:15,139
Instead, it became like an arc.

00:05:15,139 --> 00:05:19,680
So in my code, those yellow stripes should be straight,

00:05:19,680 --> 00:05:20,680
flat lines.

00:05:20,680 --> 00:05:22,020
But then it became an arc.

00:05:22,020 --> 00:05:23,080
And I was like...

00:05:23,080 --> 00:05:24,530
This is only 30 lines of JavaScript.

00:05:24,530 --> 00:05:26,460
And I write JavaScript professionally.

00:05:26,460 --> 00:05:28,229
Like, where is my bug?

00:05:28,229 --> 00:05:30,699
I can't figure that out.

00:05:30,699 --> 00:05:32,949
So I have it here.

00:05:32,949 --> 00:05:37,810
Where my four stitches started here, two inches or so, and

00:05:37,810 --> 00:05:39,060
I knit it down.

00:05:39,060 --> 00:05:42,689
And if I force the fabric to see it, you could say

00:05:42,689 --> 00:05:49,009
this is like a straight line, but in fact, it ended up being an arc of a scarf.

00:05:49,009 --> 00:05:50,009
So why?

00:05:50,009 --> 00:05:53,650
I did a little bit of research and found out that what I was discovering

00:05:53,650 --> 00:05:56,790
was something called hyperbolic geometry in math.

00:05:56,790 --> 00:05:58,290
And I was like...

00:05:58,290 --> 00:05:59,290
Okay.

00:05:59,290 --> 00:06:06,849
In knitting, we call it ruffles.

00:06:06,849 --> 00:06:11,770
So I did some more research, and there were three kinds of geometry to describe,

00:06:11,770 --> 00:06:15,250
and they both use one perfectly straight line.

00:06:15,250 --> 00:06:18,509
The one we're familiar is Euclidean space, which -- you have a

00:06:18,509 --> 00:06:21,909
baseline, and then parallel to that, you have another line that will

00:06:21,909 --> 00:06:23,789
never meet the baseline again.

00:06:23,789 --> 00:06:25,810
So it's very 2D.

00:06:25,810 --> 00:06:31,349
The other one is spherical space, where the straight lines are on the

00:06:31,349 --> 00:06:32,370
sphere.

00:06:32,370 --> 00:06:37,180
However you place it, it will always meet each other.

00:06:37,180 --> 00:06:43,650
And the third one is a hyperbolic space, which -- there is a baseline, and the straight line,

00:06:43,650 --> 00:06:47,780
infinite number of straight lines, can be drawn.

00:06:47,780 --> 00:06:50,830
And it turns out this hyperbolic geometry is a

00:06:50,830 --> 00:06:57,360
hard problem to solve in computer graphics, because it's hard to model.

00:06:57,360 --> 00:07:01,789
Researcher at Cornell actually created a physical model of hyperbolic

00:07:01,789 --> 00:07:04,440
geometry in knitted fabric.

00:07:04,440 --> 00:07:06,759
In her case, created in crotchet.

00:07:06,759 --> 00:07:12,220
And here's her paper about how she created the hyperbolic

00:07:12,220 --> 00:07:13,220
plane.

00:07:13,220 --> 00:07:18,180
So when I discovered this, I just stumbled upon a problem making ruffles.

00:07:18,180 --> 00:07:21,939
But when I discovered this is an actual math problem behind my ruffle, I

00:07:21,939 --> 00:07:23,789
was like -- this is great.

00:07:23,789 --> 00:07:25,790
I want to do more of this.

00:07:25,790 --> 00:07:28,180
I want to discover more about pattern making, and I

00:07:28,180 --> 00:07:29,389
want to do this.

00:07:29,389 --> 00:07:33,460
The problem was that knitting is a very slow process.

00:07:33,460 --> 00:07:37,580
Like, this scarf -- itself, take maybe five days

00:07:37,580 --> 00:07:38,789
of solid work.

00:07:38,789 --> 00:07:39,789
So...

00:07:39,789 --> 00:07:41,639
Eight hours a day?

00:07:41,639 --> 00:07:44,060
And if you think about software engineer salary -- this is

00:07:44,060 --> 00:07:47,819
a very expensive piece of scarf.

00:07:47,819 --> 00:07:52,820
So I did more research about -- how can I test out my patterns?

00:07:52,820 --> 00:07:55,340
And stumbled upon this thing, called a knitting machine.

00:07:55,340 --> 00:07:58,719
Which I have never knew that this existed.

00:07:58,719 --> 00:08:03,479
But apparently it existed for home use, available to your house,

00:08:03,479 --> 00:08:07,020
since 1890.

00:08:07,020 --> 00:08:08,870
And this is the ad from that era.

00:08:08,870 --> 00:08:13,570
And furthermore, interesting, as a native Japanese, was that the knitting machine was

00:08:13,570 --> 00:08:20,289
a very popular thing to own in the household, in the '70s and '80s Japan.

00:08:20,289 --> 00:08:24,759
And people were offering local classes, people owned a knitting machine like

00:08:24,759 --> 00:08:26,319
you would own a sewing machine.

00:08:26,319 --> 00:08:30,699
I found one TV commercial on YouTube about this knitting machine from 1979.

00:08:30,699 --> 00:08:31,699
If you can get the audio.

00:08:31,699 --> 00:08:40,140
(song in Japanese with female vocalist)

00:08:40,140 --> 00:08:48,390
(male narrator speaking Japanese)

00:08:48,390 --> 00:08:58,699
(female vocalist singing in Japanese)

00:08:58,699 --> 00:09:02,830
All right.

00:09:02,830 --> 00:09:09,060
So I am as confused as you are to see this TV commercial for

00:09:09,060 --> 00:09:10,450
one different reason.

00:09:10,450 --> 00:09:13,000
The song that was in the background, the lyrics said

00:09:13,000 --> 00:09:18,690
that creating a special original pattern knitwear is like sending a secret

00:09:18,690 --> 00:09:20,269
love letter to your loved one.

00:09:20,269 --> 00:09:23,069
And I thought that was kind of creepy, but apparently...

00:09:23,069 --> 00:09:26,329
Things to do in the '70s!

00:09:26,329 --> 00:09:29,810
I lived in New York City when I discovered this, so I couldn't really go down

00:09:29,810 --> 00:09:31,110
to local classes.

00:09:31,110 --> 00:09:35,820
So I don't even know if that's offered in Tokyo now.

00:09:35,820 --> 00:09:38,760
But I made a short trip to eBay.

00:09:38,760 --> 00:09:41,870
Spent a couple hundred dollars to buy this machine.

00:09:41,870 --> 00:09:44,880
And I got it, I set it up, and I was like...

00:09:44,880 --> 00:09:45,880
Okay.

00:09:45,880 --> 00:09:47,030
I'm going to set this up.

00:09:47,030 --> 00:09:51,699
And create all of the patterns, and I'm going to be awesome,

00:09:51,699 --> 00:09:53,260
and create sweaters.

00:09:53,260 --> 00:09:55,930
Turns out...

00:09:55,930 --> 00:09:59,070
Operating the machine, even before going into creating a pattern,

00:09:59,070 --> 00:10:00,490
was a lot of work.

00:10:00,490 --> 00:10:02,540
The machine was made in the '80s.

00:10:02,540 --> 00:10:05,320
It was sitting in somebody's closet for a long time.

00:10:05,320 --> 00:10:06,889
It was missing the manuals.

00:10:06,889 --> 00:10:12,310
So I ended up -- the next two months, just researching all kinds of stuff on Japanese

00:10:12,310 --> 00:10:16,770
blog posts about machine knitting.

00:10:16,770 --> 00:10:19,570
Possibly watched every single YouTube video about machine

00:10:19,570 --> 00:10:20,990
knitting that's posted.

00:10:20,990 --> 00:10:22,990
Many of them are Japanese.

00:10:22,990 --> 00:10:27,410
Occasional trip to a free preview version of Google books, because I

00:10:27,410 --> 00:10:30,680
couldn't go to a Japanese bookstore down the street from my parents'

00:10:30,680 --> 00:10:33,750
house and pick up the book.

00:10:33,750 --> 00:10:37,470
I never thanked myself enough to be able to

00:10:37,470 --> 00:10:39,320
speak Japanese.

00:10:39,320 --> 00:10:42,959
Because all of the stuff, great stuff, was available in Japanese.

00:10:42,959 --> 00:10:49,550
And I just get to angry, when software only offers documentation in

00:10:49,550 --> 00:10:50,550
English.

00:10:50,550 --> 00:10:52,769
Certain things I could not understand.

00:10:52,769 --> 00:10:56,320
But in knitting, at least I got my turn to just do

00:10:56,320 --> 00:10:59,870
things in Japanese.

00:10:59,870 --> 00:11:03,230
On top of figuring out how to operate the machine, I

00:11:03,230 --> 00:11:05,810
actually needed to fix the machine.

00:11:05,810 --> 00:11:08,279
So I figured out how to operate this machine.

00:11:08,279 --> 00:11:10,170
Moving back and forth.

00:11:10,170 --> 00:11:13,589
But it wasn't knitting quite right.

00:11:13,589 --> 00:11:15,070
Something was missing.

00:11:15,070 --> 00:11:18,139
And basically I flipped the carriers, looking at

00:11:18,139 --> 00:11:25,060
examining what exactly it's supposed to do, and what each path is doing.

00:11:25,060 --> 00:11:29,230
And after looking at maybe four hours of, like, mechanics of things, I

00:11:29,230 --> 00:11:33,770
found out that one piece of thing was stuck in there.

00:11:33,770 --> 00:11:38,230
And just a jiggle -- it worked perfectly!

00:11:38,230 --> 00:11:42,100
And so finally, I got to knit a fabric out of the

00:11:42,100 --> 00:11:43,240
machine.

00:11:43,240 --> 00:11:44,240
And I was like...

00:11:44,240 --> 00:11:45,329
This is great.

00:11:45,329 --> 00:11:50,490
One thing about this machine is it's known for something called Jacquard knit

00:11:50,490 --> 00:11:57,100
or Fair Isle knit, or pattern knit, if you're familiar with those terms.

00:11:57,100 --> 00:12:00,829
The term Jacquard comes directly from the Jacquard loom, which is

00:12:00,829 --> 00:12:08,579
a different kind of machine that creates a fabric, and uses a punch card

00:12:08,579 --> 00:12:11,319
to input the data.

00:12:11,319 --> 00:12:14,330
And this punch card system, the punch card loom, became

00:12:14,330 --> 00:12:16,389
the base of the modern computer.

00:12:16,389 --> 00:12:18,389
Which -- I thought this was a great discovery.

00:12:18,389 --> 00:12:24,250
When I did the research and learned about it, I was so excited.

00:12:24,250 --> 00:12:27,400
So...

00:12:27,400 --> 00:12:29,259
The machine is based on that.

00:12:29,259 --> 00:12:33,660
And you see on the '70s ad -- the machine actually had a punch card

00:12:33,660 --> 00:12:34,660
feeder.

00:12:34,660 --> 00:12:36,850
So you create your own punch card, and then feed it into the punch

00:12:36,850 --> 00:12:40,520
card feeder, and that will translate the pattern for you.

00:12:40,520 --> 00:12:45,399
My machine is coming from the '80s, so it is an Electroknit.

00:12:45,399 --> 00:12:47,279
It's actually the name of the model.

00:12:47,279 --> 00:12:49,029
It's called the Electroknit.

00:12:49,029 --> 00:12:50,819
And what does that mean?

00:12:50,819 --> 00:12:53,850
It no longer has a feeder for a bunch card.

00:12:53,850 --> 00:12:56,670
But it has a mother board and chip and magnetic strip.

00:12:56,670 --> 00:13:01,690
You use an electromagnet to push and pull the needles

00:13:01,690 --> 00:13:06,300
automatically.

00:13:06,300 --> 00:13:10,600
It's a lot like dot matrix printing, if you are familiar with a dot matrix

00:13:10,600 --> 00:13:11,839
printer.

00:13:11,839 --> 00:13:14,800
One pixel becomes one stitch.

00:13:14,800 --> 00:13:21,480
So in this machine's case, I feed it a yellow and blue yarn, the needle that's pushed

00:13:21,480 --> 00:13:25,920
forward is grabbing a contrasting color, which is blue, and then

00:13:25,920 --> 00:13:31,370
the needle that was left behind is grabbing a base color, which is yellow.

00:13:31,370 --> 00:13:33,640
That's how they create a pattern.

00:13:33,640 --> 00:13:36,180
So that means I can create some kind of graphic -- anything.

00:13:36,180 --> 00:13:38,709
In this case, the JSConf logo.

00:13:38,709 --> 00:13:41,480
And then put it into knitted fabric.

00:13:41,480 --> 00:13:42,480
And I was like...

00:13:42,480 --> 00:13:45,770
I found out how to operate this machine, I fixed this

00:13:45,770 --> 00:13:46,770
machine.

00:13:46,770 --> 00:13:47,810
This shouldn't be a problem.

00:13:47,810 --> 00:13:49,810
I'm going to do this.

00:13:49,810 --> 00:13:52,579
Turns out it was not that easy.

00:13:52,579 --> 00:13:54,319
Not even...

00:13:54,319 --> 00:13:56,649
So there was so many things that you needed to figure out.

00:13:56,649 --> 00:14:00,750
Which is indicated in that blue dot.

00:14:00,750 --> 00:14:05,600
Even before you actually put the data into the machine.

00:14:05,600 --> 00:14:10,420
So first question was like -- how do I even make bitmap image?

00:14:10,420 --> 00:14:14,250
Because if you're using Photoshop, you just load the colored photo

00:14:14,250 --> 00:14:19,670
in, select grayscale, and select the bitmap method, and it will automatically

00:14:19,670 --> 00:14:22,339
feed the bitmap for you.

00:14:22,339 --> 00:14:24,450
But I need to do this in code.

00:14:24,450 --> 00:14:27,360
How do I programmatically do that?

00:14:27,360 --> 00:14:33,879
Let's start with just learning about images, and loading the image.

00:14:33,879 --> 00:14:36,759
I used a library called graphics magic and then

00:14:36,759 --> 00:14:39,759
NPM package GM, which wraps that library.

00:14:39,759 --> 00:14:44,250
I actually started by using PhantomJS, creating a

00:14:44,250 --> 00:14:49,640
canvas in Phantom, loading the image, and using the Phantom API to extract

00:14:49,640 --> 00:14:54,530
all of the data, which worked fine, but it was very slow.

00:14:54,530 --> 00:14:57,730
And GM was suggested to me as a faster alternative.

00:14:57,730 --> 00:14:59,070
And it worked perfectly.

00:14:59,070 --> 00:15:04,040
So when you load a file into GM as a text file, this is what you get.

00:15:04,040 --> 00:15:06,550
XY coordinates of the pixel.

00:15:06,550 --> 00:15:10,290
RGB value of the color, and then also the hex value

00:15:10,290 --> 00:15:11,529
for that color.

00:15:11,529 --> 00:15:16,180
So all you do is a handy-dandy regexing, and create an

00:15:16,180 --> 00:15:19,870
array of arrays for each pixel.

00:15:19,870 --> 00:15:23,990
So now I have RGB color for each pixel.

00:15:23,990 --> 00:15:27,470
Let's get on it and make it grayscale?

00:15:27,470 --> 00:15:29,509
But how do I grayscale?

00:15:29,509 --> 00:15:34,610
I spent two hours just looking at a single Wikipedia page

00:15:34,610 --> 00:15:43,190
about grayscaling, and the engineer from Adobe confirmed that's okay.

00:15:43,190 --> 00:15:47,200
So I'm confident about my explanation here.

00:15:47,200 --> 00:15:49,709
You have RGB value for each color.

00:15:49,709 --> 00:15:52,649
In this case, pink and green.

00:15:52,649 --> 00:15:56,080
You find the highest value for each color.

00:15:56,080 --> 00:15:58,319
In this case, pink, red is the highest value.

00:15:58,319 --> 00:16:00,779
Green, green is the highest value.

00:16:00,779 --> 00:16:06,339
You repeat that number, and then you get the grayscale

00:16:06,339 --> 00:16:08,600
color.

00:16:08,600 --> 00:16:10,700
So now you load the image in GM.

00:16:10,700 --> 00:16:12,829
You get all of the color.

00:16:12,829 --> 00:16:17,100
And you have three color -- RGB value array.

00:16:17,100 --> 00:16:21,959
You just find the max value out of the array, and then you have an array of just the max

00:16:21,959 --> 00:16:22,959
value.

00:16:22,959 --> 00:16:26,510
And you can use that to create a grayscale image.

00:16:26,510 --> 00:16:27,680
So I was like...

00:16:27,680 --> 00:16:30,110
This is black and white photography.

00:16:30,110 --> 00:16:33,170
So I can just load it in, because it's black and white.

00:16:33,170 --> 00:16:36,079
But the grey scale image is actually black and

00:16:36,079 --> 00:16:39,209
white and many shades of grey in between.

00:16:39,209 --> 00:16:41,100
And my machine only has two colors.

00:16:41,100 --> 00:16:44,300
So it has to be just two colors.

00:16:44,300 --> 00:16:47,190
Nothing in the shades of grey.

00:16:47,190 --> 00:16:50,870
So my first upload was to split it in half.

00:16:50,870 --> 00:16:54,569
Anything closer to white side gets white, and anything closer to black

00:16:54,569 --> 00:16:56,410
side gets black.

00:16:56,410 --> 00:16:57,670
And it turns out like this.

00:16:57,670 --> 00:16:59,000
Something like...

00:16:59,000 --> 00:17:00,740
What came out of a fax machine.

00:17:00,740 --> 00:17:02,850
I wasn't really happy with that.

00:17:02,850 --> 00:17:03,850
So I was like...

00:17:03,850 --> 00:17:06,449
This is my favorite game when I grew up.

00:17:06,449 --> 00:17:08,939
When I was growing up.

00:17:08,939 --> 00:17:11,060
And this only used, like, black and white, and it

00:17:11,060 --> 00:17:14,160
operated beautifully in my tiny Apple computer.

00:17:14,160 --> 00:17:19,700
So I literally Googled Cosmic Osmo graphics and figured out that I needed

00:17:19,700 --> 00:17:21,960
to do something called dithering.

00:17:21,960 --> 00:17:27,360
Which -- the Wikipedia article said it was an intentionally applied form

00:17:27,360 --> 00:17:30,940
of noise.

00:17:30,940 --> 00:17:32,990
I don't really understand, but okay.

00:17:32,990 --> 00:17:35,320
GM has built-in methods for it.

00:17:35,320 --> 00:17:36,760
So I did that.

00:17:36,760 --> 00:17:38,900
It turns out better than my method.

00:17:38,900 --> 00:17:39,900
But still...

00:17:39,900 --> 00:17:42,650
Somewhere around the area is missing a definition.

00:17:42,650 --> 00:17:45,240
And I wasn't quite happy with it.

00:17:45,240 --> 00:17:49,470
I did more research, and something -- discovered that the thing I

00:17:49,470 --> 00:17:52,890
needed to do was something called ordered dithering, or half tone

00:17:52,890 --> 00:17:57,700
screening, which is used for newspapers to translate that picture into

00:17:57,700 --> 00:18:02,760
a newspaper, which is just one color of ink.

00:18:02,760 --> 00:18:05,390
So you have a base image.

00:18:05,390 --> 00:18:09,320
Which you extracted the value for the grayscale.

00:18:09,320 --> 00:18:13,270
And then you have this noise matrix part.

00:18:13,270 --> 00:18:14,930
You laid it over.

00:18:14,930 --> 00:18:17,800
You compare the overlapping pixels.

00:18:17,800 --> 00:18:20,980
And if the base image has a lower value than your

00:18:20,980 --> 00:18:23,970
noise matrix, then it gets zero.

00:18:23,970 --> 00:18:25,970
If it's over, then it gets one.

00:18:25,970 --> 00:18:29,900
And that's how you make it into two color images.

00:18:29,900 --> 00:18:31,350
And of course, if it's like...

00:18:31,350 --> 00:18:36,760
One and two, you can put it into ones and zeroes -- matrix.

00:18:36,760 --> 00:18:39,590
Here's a few examples of that noise matrix.

00:18:39,590 --> 00:18:44,510
And a lot of people explore their own matrix to create a better dithered image.

00:18:44,510 --> 00:18:50,520
I ended up using Bayer, because I like the output most.

00:18:50,520 --> 00:18:56,790
So now I loaded the JSConf logo and outputted it as ones and zero pictures.

00:18:56,790 --> 00:19:02,580
And if I replace the zero with no value and one with asterisk, you can see something

00:19:02,580 --> 00:19:03,580
like this.

00:19:03,580 --> 00:19:06,550
And it's starting to look like something on the knitted

00:19:06,550 --> 00:19:07,550
fabric.

00:19:07,550 --> 00:19:08,590
So I'm like -- great.

00:19:08,590 --> 00:19:10,300
I've got files.

00:19:10,300 --> 00:19:13,630
Let's just put it into the machine and just knit.

00:19:13,630 --> 00:19:16,300
Let's make knitting pattern files.

00:19:16,300 --> 00:19:20,880
The file format for this is something called .dat.

00:19:20,880 --> 00:19:24,450
Which I think stands for digital audio tape?

00:19:24,450 --> 00:19:25,810
No idea.

00:19:25,810 --> 00:19:29,990
If you open it up, you get ones and zeroes.

00:19:29,990 --> 00:19:30,990
Okay.

00:19:30,990 --> 00:19:31,990
Great.

00:19:31,990 --> 00:19:32,990
Binary file.

00:19:32,990 --> 00:19:36,650
Just replace my one and zero matrix and put it in.

00:19:36,650 --> 00:19:41,770
But I found out if the pattern is in there, it's actually hex.

00:19:41,770 --> 00:19:44,140
So I'm like...

00:19:44,140 --> 00:19:47,270
Something needs to be done in my one and zero matrix.

00:19:47,270 --> 00:19:48,430
Into this file.

00:19:48,430 --> 00:19:49,430
What do I do?

00:19:49,430 --> 00:19:53,970
There was one guy, Steve Conklin, who is writing the same kind of project in

00:19:53,970 --> 00:19:54,970
Python.

00:19:54,970 --> 00:20:00,430
So I studied his code, and discovered this line.

00:20:00,430 --> 00:20:05,240
And at the time, I was a newbie Python developer.

00:20:05,240 --> 00:20:06,450
So I was learning Python.

00:20:06,450 --> 00:20:07,450
And I'm like...

00:20:07,450 --> 00:20:09,650
What is this?

00:20:09,650 --> 00:20:12,470
I just went through Python's tutorial.

00:20:12,470 --> 00:20:15,350
Nothing was mentioned about bitwise operator.

00:20:15,350 --> 00:20:17,560
How could I not have heard of this?

00:20:17,560 --> 00:20:19,650
I just went through training.

00:20:19,650 --> 00:20:22,740
And I felt like this.

00:20:22,740 --> 00:20:26,321
I also found out that the bitwise operator existed in JavaScript, and

00:20:26,321 --> 00:20:32,700
read an article, and still couldn't really get what it is.

00:20:32,700 --> 00:20:38,440
So what I concluded, after two days of, like, you know...

00:20:38,440 --> 00:20:42,900
Throwing balls against walls, was that this is

00:20:42,900 --> 00:20:43,900
like magic.

00:20:43,900 --> 00:20:48,370
And this is my interpretation of what bitwise operator and bit

00:20:48,370 --> 00:20:50,010
shifting is.

00:20:50,010 --> 00:20:52,210
So I'm going to give you two examples.

00:20:52,210 --> 00:20:56,580
Two operations that I use for this machine.

00:20:56,580 --> 00:20:58,910
One is a bitwise left shift.

00:20:58,910 --> 00:21:04,090
Left shift is a guy or fellow who pushes you to the left.

00:21:04,090 --> 00:21:07,610
And he's a magician, because it's a bitwise operator.

00:21:07,610 --> 00:21:08,930
So he has a magic hat.

00:21:08,930 --> 00:21:12,030
So A is the small value of one.

00:21:12,030 --> 00:21:15,600
And let's bit shift forward to the left.

00:21:15,600 --> 00:21:19,460
So the representation of this small one is that.

00:21:19,460 --> 00:21:24,340
And this left shift guy comes in, pushes you four times

00:21:24,340 --> 00:21:28,620
to the left, and because he is a magician, he makes it to 16.

00:21:28,620 --> 00:21:29,940
Like, how...

00:21:29,940 --> 00:21:30,940
What...

00:21:30,940 --> 00:21:32,840
How could that happen?

00:21:32,840 --> 00:21:34,090
Okay.

00:21:34,090 --> 00:21:36,900
And the bitwise OR operator -- the same thing.

00:21:36,900 --> 00:21:42,110
This person favors one over zero, and he's also a magician.

00:21:42,110 --> 00:21:46,370
So let's do bitwise OR, with 1 and 5.

00:21:46,370 --> 00:21:52,130
Representation of the 1 and 5 is that.

00:21:52,130 --> 00:21:54,220
First compares 1 and 1.

00:21:54,220 --> 00:21:56,290
There is only 1, so he chooses 1.

00:21:56,290 --> 00:21:58,380
There's 0 and 0.

00:21:58,380 --> 00:22:00,630
So there's no 1, so okay.

00:22:00,630 --> 00:22:01,630
0.

00:22:01,630 --> 00:22:03,190
And next one is 1 and 0.

00:22:03,190 --> 00:22:04,270
So okay...

00:22:04,270 --> 00:22:05,350
1.

00:22:05,350 --> 00:22:10,230
And because it's magic, it stays as 5, even though you just did something.

00:22:10,230 --> 00:22:13,540
But it stays as 5.

00:22:13,540 --> 00:22:14,940
So...

00:22:14,940 --> 00:22:17,690
I needed to do bitshifting, and if you're interested, I'm

00:22:17,690 --> 00:22:24,160
happy to share the code, but my one and zero matrix shifted into one set of

00:22:24,160 --> 00:22:28,470
the decimal value of A, shifted again, became one number, and then turned

00:22:28,470 --> 00:22:32,690
that decimal number into hex, and I can finally put it into my knitting

00:22:32,690 --> 00:22:34,500
machine.

00:22:34,500 --> 00:22:39,220
So now I have the file prepared.

00:22:39,220 --> 00:22:40,220
And put it into the machine.

00:22:40,220 --> 00:22:46,350
And now I want to demo the machine.

00:22:46,350 --> 00:22:50,410
Okay.

00:22:50,410 --> 00:22:51,410
So I just turned it in.

00:22:51,410 --> 00:22:54,000
I pre-loaded a file this morning.

00:22:54,000 --> 00:22:57,800
I used USB to serial port cable.

00:22:57,800 --> 00:23:01,890
Which the tutorial of how to make is available online.

00:23:01,890 --> 00:23:03,070
And...

00:23:03,070 --> 00:23:05,430
Just select...

00:23:05,430 --> 00:23:08,800
You might not be able to see it.

00:23:08,800 --> 00:23:11,870
But I'm selecting a custom pattern that I created.

00:23:11,870 --> 00:23:13,220
It says one time.

00:23:13,220 --> 00:23:14,220
Stitch of 90.

00:23:14,220 --> 00:23:15,220
Okay.

00:23:15,220 --> 00:23:16,220
Start.

00:23:16,220 --> 00:23:17,220
I changed the setting.

00:23:17,220 --> 00:23:19,270
Make sure this is okay.

00:23:19,270 --> 00:23:21,390
And now...

00:23:21,390 --> 00:23:29,870
Something interesting should happen.

00:23:29,870 --> 00:23:34,110
(grinding noises)

00:23:34,110 --> 00:23:36,230
See?

00:23:36,230 --> 00:23:38,330
These needles are pushed forward.

00:23:38,330 --> 00:23:43,620
This means that this carriage uses magnetics to pull those needles, and

00:23:43,620 --> 00:23:53,010
now these needles that are pushed forward are picking up this blue yarn.

00:23:53,010 --> 00:23:56,070
And...

00:23:56,070 --> 00:24:02,190
(grinding noises)

00:24:02,190 --> 00:24:08,310
All right!

00:24:08,310 --> 00:24:20,340
Now the pattern is done.

00:24:20,340 --> 00:24:21,340
I can just discharge this.

00:24:21,340 --> 00:24:22,340
Take this out.

00:24:22,340 --> 00:24:23,669
Actually, just leave it there.

00:24:23,669 --> 00:24:26,290
You may not be able to see it from the front.

00:24:26,290 --> 00:24:31,020
But it actually printed out the JSConf 2015 logo.

00:24:31,020 --> 00:24:35,590
And after that, I'll finish this scarf, and I can show it to you

00:24:35,590 --> 00:24:37,710
in person, if you're interested.

00:24:37,710 --> 00:24:39,170
(applause)

00:24:39,170 --> 00:24:40,640
Woo!

00:24:40,640 --> 00:24:45,030
Oh, how kind!

00:24:45,030 --> 00:24:47,970
Thank you!

00:24:47,970 --> 00:24:51,850
So going into this project, I had no idea what

00:24:51,850 --> 00:24:52,850
I was doing.

00:24:52,850 --> 00:24:54,830
I just wanted to do knitting.

00:24:54,830 --> 00:24:57,910
And I discovered that knitting and JavaScript are kind of related.

00:24:57,910 --> 00:25:04,290
That turned into, like, finding out about this machine, and I wanted to do this.

00:25:04,290 --> 00:25:06,820
I had no reservation about trying to sound smart.

00:25:06,820 --> 00:25:08,210
This wasn't my job.

00:25:08,210 --> 00:25:13,351
So whenever I go into a problem, I just tweet out or send emails about it, and so

00:25:13,351 --> 00:25:17,960
many people just jumped right in, sending me code samples, and giving me

00:25:17,960 --> 00:25:18,980
encouragement and all of that.

00:25:18,980 --> 00:25:22,160
So I just want to give a shout out.

00:25:22,160 --> 00:25:23,160
Thank you!

00:25:23,160 --> 00:25:29,050
And most of the code will be available on Electroknit repo, which

00:25:29,050 --> 00:25:32,250
right now is empty, but I promise I will put it up.

00:25:32,250 --> 00:25:35,220
And a subset from that project -- the part I was

00:25:35,220 --> 00:25:38,390
doing, the color math -- I was super interested in it.

00:25:38,390 --> 00:25:43,760
And I added more features about translation between color spaces

00:25:43,760 --> 00:25:46,360
and created a small library for you to...

00:25:46,360 --> 00:25:49,340
What do you call it?

00:25:49,340 --> 00:25:51,020
Explore the color.

00:25:51,020 --> 00:25:55,020
And that's available on the color mixer repo, or NPM module.

00:25:55,020 --> 00:25:56,230

YouTube URL: https://www.youtube.com/watch?v=X1Cc1vrvjdY


