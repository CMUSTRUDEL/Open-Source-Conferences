Title: JSConf 2015   Myles Borins
Publication date: 2015-06-17
Playlist: JSConf US 2015
Description: 
	
Captions: 
	00:00:14,400 --> 00:00:25,720
everyone hello there my name is miles I

00:00:23,699 --> 00:00:28,029
work at a company called famous

00:00:25,720 --> 00:00:32,500
industries heading up the famous org

00:00:28,029 --> 00:00:35,470
project believe it or not but I actually

00:00:32,500 --> 00:00:38,860
got into programming through music and

00:00:35,470 --> 00:00:41,579
art this is an example of one of my

00:00:38,860 --> 00:00:45,809
installations that I did in my undergrad

00:00:41,579 --> 00:00:50,079
it was called string theory it involved

00:00:45,809 --> 00:00:52,690
cnc milling a bunch of wood a whole

00:00:50,079 --> 00:00:57,129
bunch string a lot of string some lasers

00:00:52,690 --> 00:00:59,680
some water some cold rolled steel I have

00:00:57,129 --> 00:01:01,660
some scars from learning to weld it was

00:00:59,680 --> 00:01:04,089
a great project and it involved

00:01:01,660 --> 00:01:07,240
internally a bit of code with an Arduino

00:01:04,089 --> 00:01:09,880
a bit of like hacking with the DMX

00:01:07,240 --> 00:01:12,550
protocol it was just like I actually

00:01:09,880 --> 00:01:15,759
found art was a really great way to

00:01:12,550 --> 00:01:17,490
learn about coat and learn about systems

00:01:15,759 --> 00:01:19,750
and how to build these large things

00:01:17,490 --> 00:01:22,840
another project that I did was the

00:01:19,750 --> 00:01:35,289
speaker bot this is a really quick demo

00:01:22,840 --> 00:01:37,599
so I'll just let it play out so the

00:01:35,289 --> 00:01:39,489
speaker bot had an embedded Linux system

00:01:37,599 --> 00:01:41,530
and a Wi-Fi router in it and then there

00:01:39,489 --> 00:01:43,750
was a connect hidden in the wall and so

00:01:41,530 --> 00:01:45,729
using Skelton tracking I was able to

00:01:43,750 --> 00:01:49,270
essentially make like a little theremin

00:01:45,729 --> 00:01:51,190
type device another project that I did

00:01:49,270 --> 00:01:54,610
was the voxel meter this is a fun

00:01:51,190 --> 00:01:56,590
project using voxels to represent sound

00:01:54,610 --> 00:01:58,840
and so what we're going to be talking

00:01:56,590 --> 00:02:01,330
about today is a little bit of kind of

00:01:58,840 --> 00:02:03,879
what what you're seeing visualized here

00:02:01,330 --> 00:02:05,950
what does that mean what is sampling how

00:02:03,879 --> 00:02:08,739
does audio get represented digitally on

00:02:05,950 --> 00:02:11,890
a system so actually I should probably

00:02:08,739 --> 00:02:14,590
pause that great so all of this started

00:02:11,890 --> 00:02:16,030
with the device called a mano it's a

00:02:14,590 --> 00:02:17,950
grid of buttons it does absolutely

00:02:16,030 --> 00:02:20,170
nothing unless you program it to do

00:02:17,950 --> 00:02:22,840
things and through that I learned a

00:02:20,170 --> 00:02:24,099
programming language called max/msp it's

00:02:22,840 --> 00:02:25,360
a visually based programming language

00:02:24,099 --> 00:02:27,970
node based programming it's

00:02:25,360 --> 00:02:29,710
really fantastic if you're an artist or

00:02:27,970 --> 00:02:32,740
you know someone who's an artist or

00:02:29,710 --> 00:02:35,110
wants to learn about sound or music or

00:02:32,740 --> 00:02:39,160
GL it's a really great platform for

00:02:35,110 --> 00:02:41,200
learning this it also allows access to

00:02:39,160 --> 00:02:43,090
the entire internal API through

00:02:41,200 --> 00:02:43,990
JavaScript and this is one of the ways

00:02:43,090 --> 00:02:45,640
in which I originally got into

00:02:43,990 --> 00:02:49,510
JavaScript was actually scripting in

00:02:45,640 --> 00:02:51,010
max/msp for making installation art it

00:02:49,510 --> 00:02:52,810
also if any of you are music producers

00:02:51,010 --> 00:02:54,940
and use Ableton you can use Mac's to

00:02:52,810 --> 00:02:56,890
control all of Ableton and all its inner

00:02:54,940 --> 00:02:58,540
workings and this is just an example of

00:02:56,890 --> 00:03:00,790
you know like how hairy a patch can get

00:02:58,540 --> 00:03:02,130
it's a really kind of crazy way of

00:03:00,790 --> 00:03:04,660
programming and if you thought you know

00:03:02,130 --> 00:03:08,200
closures shifting right was bad just

00:03:04,660 --> 00:03:10,570
look at some crazy max code but so my

00:03:08,200 --> 00:03:12,489
love of music and technology brought me

00:03:10,570 --> 00:03:13,840
to California to study at Karma the

00:03:12,489 --> 00:03:16,390
Center for computer research and music

00:03:13,840 --> 00:03:18,610
and acoustics wellick arm I had an

00:03:16,390 --> 00:03:20,890
opportunity to learn about sound the

00:03:18,610 --> 00:03:22,959
math behind it physics behind it how we

00:03:20,890 --> 00:03:24,700
compute it Electrical Engineering and

00:03:22,959 --> 00:03:29,050
most interestingly you know like how our

00:03:24,700 --> 00:03:30,790
brains interpret sound so this brings us

00:03:29,050 --> 00:03:32,830
to the topic that we're going to be

00:03:30,790 --> 00:03:35,170
looking at today which is what is

00:03:32,830 --> 00:03:37,150
sampling and so many of you might think

00:03:35,170 --> 00:03:39,820
that I'm talking about sampling like in

00:03:37,150 --> 00:03:41,350
the classic MPC sense of sampling blocks

00:03:39,820 --> 00:03:43,000
of sound but that's not what we're

00:03:41,350 --> 00:03:44,140
actually talking about today it's

00:03:43,000 --> 00:03:45,580
technically correct but we're going to

00:03:44,140 --> 00:03:48,269
go a little deeper we're going to talk

00:03:45,580 --> 00:03:51,040
about sampling sound in the sense of

00:03:48,269 --> 00:03:53,860
sampling individual chunks of sound so

00:03:51,040 --> 00:03:55,720
that we can represent it digitally so a

00:03:53,860 --> 00:03:58,840
definition of sampling is sampling as a

00:03:55,720 --> 00:04:01,600
method of converting data converting an

00:03:58,840 --> 00:04:03,220
analog signal to digital data digital

00:04:01,600 --> 00:04:06,910
data which can eventually be turned back

00:04:03,220 --> 00:04:08,260
into an analog signal so well we can

00:04:06,910 --> 00:04:09,400
make sample many things today we're

00:04:08,260 --> 00:04:12,340
going to specifically talk about

00:04:09,400 --> 00:04:14,890
sampling sound so you can also sample

00:04:12,340 --> 00:04:17,019
any sort of signal and a signal could be

00:04:14,890 --> 00:04:19,930
you know like a potentiometer or a

00:04:17,019 --> 00:04:21,400
button or a twitter feed could be

00:04:19,930 --> 00:04:23,050
considered a signal I mean if you get

00:04:21,400 --> 00:04:24,970
into really deep in sample theory like

00:04:23,050 --> 00:04:28,960
everything is a signal and everything

00:04:24,970 --> 00:04:32,400
can be sampled but we sample sound every

00:04:28,960 --> 00:04:35,530
single time we make a digital recording

00:04:32,400 --> 00:04:37,120
an unlike analog recording which happens

00:04:35,530 --> 00:04:39,129
in constant time a digital recording

00:04:37,120 --> 00:04:41,709
needs to be represented in sample blocks

00:04:39,129 --> 00:04:47,139
you can kind of think of a sample as a

00:04:41,709 --> 00:04:49,749
pixel for sound so I'm going to give you

00:04:47,139 --> 00:04:51,669
a bit of a primer on some sound terms

00:04:49,749 --> 00:04:53,229
that we're going to use to make sure

00:04:51,669 --> 00:04:55,839
that you're all on the same page as me

00:04:53,229 --> 00:04:57,249
as we're getting started sample rate

00:04:55,839 --> 00:04:58,899
you're going to hear this a lot and the

00:04:57,249 --> 00:05:01,509
sample rate is the number of samples

00:04:58,899 --> 00:05:04,449
used to represent a second of sound and

00:05:01,509 --> 00:05:06,369
a common sample rate is 44.1 thousand

00:05:04,449 --> 00:05:09,819
samples and we're going to get into that

00:05:06,369 --> 00:05:11,740
and why that is that number in a bit bit

00:05:09,819 --> 00:05:14,409
depth and the bit depth is the number of

00:05:11,740 --> 00:05:18,330
bits that's used per sample to encode

00:05:14,409 --> 00:05:21,610
the data a common bit depth is 16 bits

00:05:18,330 --> 00:05:24,189
codec a codec is an algorithm used to

00:05:21,610 --> 00:05:28,360
encode a signal into digital data a very

00:05:24,189 --> 00:05:29,889
common codec that we use is mp3 so let's

00:05:28,360 --> 00:05:31,599
tie all of those things together and

00:05:29,889 --> 00:05:34,449
kind of like figure out how this works

00:05:31,599 --> 00:05:37,959
and we'll start by talking about a CD so

00:05:34,449 --> 00:05:42,300
it's ed is encoded using PCM at 16 bits

00:05:37,959 --> 00:05:45,969
per sample at 44100 samples per second

00:05:42,300 --> 00:05:48,429
the algorithm is called PCM and it

00:05:45,969 --> 00:05:50,229
involves basically taking each channel

00:05:48,429 --> 00:05:53,110
and encoding it as a floating point

00:05:50,229 --> 00:05:54,519
number between minus 1 and 1 there's

00:05:53,110 --> 00:05:56,050
this is a floating-point way of

00:05:54,519 --> 00:05:57,579
representing it there's integer

00:05:56,050 --> 00:06:00,009
algorithms as well but this is just like

00:05:57,579 --> 00:06:01,929
the simplest agrestic rock so we're just

00:06:00,009 --> 00:06:03,879
going to talk about that and you can

00:06:01,929 --> 00:06:06,429
actually think about PCM encoding as an

00:06:03,879 --> 00:06:08,829
array and each channel gets interleaved

00:06:06,429 --> 00:06:11,439
so we can think about the array of

00:06:08,829 --> 00:06:12,999
samples that are on a CD as the first

00:06:11,439 --> 00:06:14,289
sample left channel than the first

00:06:12,999 --> 00:06:15,699
sample the right channel all the way to

00:06:14,289 --> 00:06:18,699
like n number of samples that you have

00:06:15,699 --> 00:06:20,829
in your recording and so this will be

00:06:18,699 --> 00:06:23,139
referred to as a lossless form of

00:06:20,829 --> 00:06:25,240
encoding I mean it's not entirely

00:06:23,139 --> 00:06:28,059
lossless when you sample a nun sample

00:06:25,240 --> 00:06:30,309
like that does disrupt the signal but as

00:06:28,059 --> 00:06:34,059
far as encoding methods are concerned

00:06:30,309 --> 00:06:37,089
PCM is considered lossless a form of

00:06:34,059 --> 00:06:39,819
lossy encoding would be mp3 mp3 actually

00:06:37,089 --> 00:06:41,679
uses a variety of heuristics based on

00:06:39,819 --> 00:06:42,849
Psychlo acoustics to essentially say hey

00:06:41,679 --> 00:06:44,379
we don't need all these bits and throw

00:06:42,849 --> 00:06:48,309
them out and then like it's actually

00:06:44,379 --> 00:06:49,809
lossy so there are limitations to

00:06:48,309 --> 00:06:51,789
sampling though and those limitations

00:06:49,809 --> 00:06:52,540
are part of the reason why we have these

00:06:51,789 --> 00:06:57,070
random number

00:06:52,540 --> 00:07:02,290
like 44100 so this makes sense to

00:06:57,070 --> 00:07:05,260
everyone right no okay this something

00:07:02,290 --> 00:07:07,780
that's called the Nyquist limit its name

00:07:05,260 --> 00:07:09,520
it after Harold Nyquist his work was

00:07:07,780 --> 00:07:10,690
built upon by Claude Shannon creating

00:07:09,520 --> 00:07:15,730
what we know today is the fields of

00:07:10,690 --> 00:07:18,040
sampling and information theory yeah the

00:07:15,730 --> 00:07:20,800
Nyquist limit like really simply states

00:07:18,040 --> 00:07:22,810
that the rate in which you sample a

00:07:20,800 --> 00:07:24,310
system will dictate the maximum

00:07:22,810 --> 00:07:28,240
frequency that can be represented in

00:07:24,310 --> 00:07:30,730
that system so at 44100 we can only

00:07:28,240 --> 00:07:34,660
represent samples and frequencies up to

00:07:30,730 --> 00:07:36,820
20 2050 which sounds like kind of a

00:07:34,660 --> 00:07:38,800
random number and anything higher than

00:07:36,820 --> 00:07:41,470
that actually gets aliased around back

00:07:38,800 --> 00:07:42,550
to the beginning and we'll come back to

00:07:41,470 --> 00:07:47,200
that again and that's kind of like I'm

00:07:42,550 --> 00:07:49,570
Metta thing but so 44.1 kilohertz not

00:07:47,200 --> 00:07:53,620
gigawatts it's the standard sampling

00:07:49,570 --> 00:07:56,650
rate used in audio but why it's actually

00:07:53,620 --> 00:07:58,600
the human ear is the reason so the human

00:07:56,650 --> 00:08:01,450
here only the human ear only hears

00:07:58,600 --> 00:08:05,050
frequencies up to and around 20,000

00:08:01,450 --> 00:08:06,670
Hertz so because of that we can know and

00:08:05,050 --> 00:08:09,310
it's just a basic heuristic well there's

00:08:06,670 --> 00:08:11,380
no need to encode any more samples we

00:08:09,310 --> 00:08:14,140
could take 44100 samples we can

00:08:11,380 --> 00:08:15,520
represent signals up to 20,000 Hertz and

00:08:14,140 --> 00:08:17,380
pretty much everything that was in the

00:08:15,520 --> 00:08:19,450
signal that a human would hear would be

00:08:17,380 --> 00:08:21,310
represent would be represented it's an

00:08:19,450 --> 00:08:22,840
optimization for compression it

00:08:21,310 --> 00:08:26,500
minimizes the data that we need about

00:08:22,840 --> 00:08:29,890
the samples so you may ask why would we

00:08:26,500 --> 00:08:31,540
sample higher so some recording studios

00:08:29,890 --> 00:08:34,120
will actually record at 96 kilohertz

00:08:31,540 --> 00:08:36,430
this partially allows you to avoid

00:08:34,120 --> 00:08:38,169
aliasing in 96 kilohertz I have a

00:08:36,430 --> 00:08:39,880
diagram here to show it gives you a lot

00:08:38,169 --> 00:08:41,680
more Headroom so you'll have what's

00:08:39,880 --> 00:08:43,479
known as like supersonic noise that will

00:08:41,680 --> 00:08:45,040
end up in a signal so if you're doing

00:08:43,479 --> 00:08:46,540
like live recording in a studio one

00:08:45,040 --> 00:08:49,450
thing you may want to do is actually

00:08:46,540 --> 00:08:52,330
like record your drums at 96 k do a

00:08:49,450 --> 00:08:54,460
filter of those top samples and then

00:08:52,330 --> 00:08:56,170
sample down to 40 41 so you don't end up

00:08:54,460 --> 00:08:58,330
having those high frequencies aliasing

00:08:56,170 --> 00:08:59,740
and creating noise now when you just

00:08:58,330 --> 00:09:00,940
have one signal it doesn't really make a

00:08:59,740 --> 00:09:03,640
big difference but as you start

00:09:00,940 --> 00:09:05,370
combining 5 10 15 different signals all

00:09:03,640 --> 00:09:06,630
that noise starts adding up and you

00:09:05,370 --> 00:09:09,420
start having a recording that doesn't

00:09:06,630 --> 00:09:11,250
sound very professional so what is a a

00:09:09,420 --> 00:09:13,440
lower sample rate sound like that's a

00:09:11,250 --> 00:09:15,570
really interesting question a telephone

00:09:13,440 --> 00:09:17,520
a telephone actually filters are

00:09:15,570 --> 00:09:21,240
actually samples things at 8,000 Hertz

00:09:17,520 --> 00:09:25,140
and I've got a really great live demo to

00:09:21,240 --> 00:09:28,080
show us so here is an example of a

00:09:25,140 --> 00:09:30,800
recording of a voicemail message sample

00:09:28,080 --> 00:09:30,800
dick 44 1

00:09:37,580 --> 00:09:44,320
I must be out or I pick up the phone

00:09:40,660 --> 00:09:44,320
where could I

00:09:48,880 --> 00:09:53,450
so if we were to resample that at 8,000

00:09:52,160 --> 00:09:55,160
Hertz we're going to notice it actually

00:09:53,450 --> 00:10:06,530
sounds exactly the way we would expect

00:09:55,160 --> 00:10:10,210
it to sound on a telephone I must be out

00:10:06,530 --> 00:10:10,210
all right pick up the phone

00:10:16,230 --> 00:10:21,450
and that's actually not random that

00:10:19,200 --> 00:10:23,160
phone is sampled at 8,000 Hertz the

00:10:21,450 --> 00:10:25,260
human voice most of what is part of the

00:10:23,160 --> 00:10:27,810
human voice that the ear recognizes sits

00:10:25,260 --> 00:10:29,610
around you know like 3,000 to 4,000

00:10:27,810 --> 00:10:32,070
Hertz so there's no real reason to

00:10:29,610 --> 00:10:33,990
encode all that extra information and by

00:10:32,070 --> 00:10:35,670
only encoding at 8,000 Hertz we could

00:10:33,990 --> 00:10:38,220
send a whole bunch more data over the

00:10:35,670 --> 00:10:40,080
water so let's go back to the human ear

00:10:38,220 --> 00:10:41,370
and like let's get into some really cool

00:10:40,080 --> 00:10:45,120
stuff and talk about what might why

00:10:41,370 --> 00:10:47,070
music works so the human ear inside the

00:10:45,120 --> 00:10:48,570
cochlea actually has an exponential

00:10:47,070 --> 00:10:50,430
response so you have all these little

00:10:48,570 --> 00:10:52,050
hairs so if we go and look at that

00:10:50,430 --> 00:10:53,850
diagram starting at the center the hairs

00:10:52,050 --> 00:10:56,880
kind of go out and they react to

00:10:53,850 --> 00:10:59,610
frequencies in an exponential pattern so

00:10:56,880 --> 00:11:01,680
as it goes out you know the response

00:10:59,610 --> 00:11:03,090
rate I'm just describing something by

00:11:01,680 --> 00:11:04,950
saying what I said it doesn't really

00:11:03,090 --> 00:11:07,920
help so I'll actually show some diagrams

00:11:04,950 --> 00:11:12,930
so an example would be a for the note a

00:11:07,920 --> 00:11:14,730
4 is 440 Hertz the note a 5 is 880 hurts

00:11:12,930 --> 00:11:16,530
this is like really crazy when you think

00:11:14,730 --> 00:11:18,510
about it because as we actually

00:11:16,530 --> 00:11:20,820
experience sound exponentially we

00:11:18,510 --> 00:11:22,680
experience pitch linearly so there's

00:11:20,820 --> 00:11:24,270
actually like this tie between an

00:11:22,680 --> 00:11:27,240
empirical fact and kind of like an

00:11:24,270 --> 00:11:28,770
emotional response as frequency grows

00:11:27,240 --> 00:11:31,800
exponentially we experience pitch

00:11:28,770 --> 00:11:33,660
linearly boom like that is so cool and

00:11:31,800 --> 00:11:36,600
like all of music is built on top of

00:11:33,660 --> 00:11:38,310
this this idea it was actually

00:11:36,600 --> 00:11:41,400
originally discovered by Pythagoras as

00:11:38,310 --> 00:11:43,620
far as I know and he discovered what we

00:11:41,400 --> 00:11:46,980
allot of what we now have created and

00:11:43,620 --> 00:11:50,610
know as the Western musical canon the

00:11:46,980 --> 00:11:55,310
chromatic scale Pythagoras the diatonic

00:11:50,610 --> 00:11:58,170
scale Pythagoras the circle of fifths

00:11:55,310 --> 00:12:00,510
Pythagoras the greatest musical

00:11:58,170 --> 00:12:02,370
achievement in the modern era well that

00:12:00,510 --> 00:12:04,290
was actually fishes set to rotation jam

00:12:02,370 --> 00:12:08,310
during deer creek sunday august 10th

00:12:04,290 --> 00:12:11,630
1997 but yeah like they couldn't have

00:12:08,310 --> 00:12:15,690
done that if it wasn't for Pythagoras

00:12:11,630 --> 00:12:17,880
musical notes as we know them have

00:12:15,690 --> 00:12:21,980
existed longer as a means of

00:12:17,880 --> 00:12:21,980
communication than the English language

00:12:24,770 --> 00:12:29,010
that's like crazy that gets me like so

00:12:27,450 --> 00:12:30,150
excited it's like the idea that if

00:12:29,010 --> 00:12:31,560
you're like playing guitar and you're

00:12:30,150 --> 00:12:33,120
playing in a key that's like positive

00:12:31,560 --> 00:12:35,510
like that's been communication between

00:12:33,120 --> 00:12:38,190
people longer than the English language

00:12:35,510 --> 00:12:41,010
now I know I'm probably wrapping up like

00:12:38,190 --> 00:12:44,340
way quickly here wow it's been like 13

00:12:41,010 --> 00:12:45,690
minutes I'm supposed to have 30 but I

00:12:44,340 --> 00:12:48,720
think that's all that I have right now

00:12:45,690 --> 00:12:51,120
on paper but that does give us time I

00:12:48,720 --> 00:12:53,580
think for a couple questions about music

00:12:51,120 --> 00:12:55,590
and sound if anyone has any but that's

00:12:53,580 --> 00:13:15,150
all that I have for right now thank you

00:12:55,590 --> 00:13:23,370
all go oh yes mm-hmm I can do a live

00:13:15,150 --> 00:13:26,100
demo so you mentioned max/msp as in a

00:13:23,370 --> 00:13:28,410
really great environment for artists to

00:13:26,100 --> 00:13:31,550
look into music I was wondering what

00:13:28,410 --> 00:13:34,290
kind of capabilities you had in that

00:13:31,550 --> 00:13:38,600
yeah totally I'll just do a quick live

00:13:34,290 --> 00:13:42,680
demo because we've got a bit of time so

00:13:38,600 --> 00:13:42,680
let's take a look so this is max

00:13:46,700 --> 00:13:55,640
we can go and we can start a new project

00:13:49,000 --> 00:13:59,030
and we can start by just making a cycle

00:13:55,640 --> 00:14:07,850
at 440 Hertz and we'll connect that to

00:13:59,030 --> 00:14:09,170
the output we got some sound going so

00:14:07,850 --> 00:14:11,360
what we can do that's really interesting

00:14:09,170 --> 00:14:13,790
too is like any time you're actually

00:14:11,360 --> 00:14:16,700
changing the amplitude is just

00:14:13,790 --> 00:14:18,230
multiplying so we can take you know the

00:14:16,700 --> 00:14:24,110
output of this and put it into a

00:14:18,230 --> 00:14:26,120
multiplier here we can connect it then

00:14:24,110 --> 00:14:28,520
we can make another cycle that's running

00:14:26,120 --> 00:14:29,840
it like 10 Earth's we can connect that

00:14:28,520 --> 00:14:32,800
and multiply by it and now we're going

00:14:29,840 --> 00:14:32,800
to get amplitude modulation

00:14:33,630 --> 00:14:37,800
and then we can take you know another

00:14:36,390 --> 00:14:41,610
one of these and we can do frequency

00:14:37,800 --> 00:14:43,890
modulation as well so we take another

00:14:41,610 --> 00:14:46,800
cycle will put it through like a number

00:14:43,890 --> 00:14:50,310
object turn that signal into like an

00:14:46,800 --> 00:14:56,010
actual number then we want to do we want

00:14:50,310 --> 00:14:57,780
to take it we want to add one to it so

00:14:56,010 --> 00:15:02,780
that it's not zero based anymore and

00:14:57,780 --> 00:15:02,780
then we can multiply it by like 220

00:15:16,870 --> 00:15:21,279
we can just start kind of like changing

00:15:19,130 --> 00:15:21,279
that

00:15:39,449 --> 00:15:44,089
we could like literally just copy this

00:15:41,429 --> 00:15:47,019
whole thing we can encapsulate it

00:15:44,089 --> 00:15:47,019
we can duplicate it

00:15:47,550 --> 00:15:53,029
add another one

00:15:49,860 --> 00:15:53,029
popping this one

00:15:53,120 --> 00:15:56,589
change this one to be like

00:16:33,370 --> 00:16:44,420
that's music I guess so this is the

00:16:43,130 --> 00:16:45,560
monome that I was talking before and

00:16:44,420 --> 00:16:50,210
just let me know when we need to stop

00:16:45,560 --> 00:16:53,330
because I'll just keep going so I built

00:16:50,210 --> 00:16:55,640
this one a couple years ago I think I

00:16:53,330 --> 00:16:57,500
can just kind of like yeah so the case

00:16:55,640 --> 00:17:01,400
comes out and there's like electronics

00:16:57,500 --> 00:17:03,950
in there it's really pretty and so the

00:17:01,400 --> 00:17:06,440
case the top part is steel milled

00:17:03,950 --> 00:17:09,170
aluminum and then this was like hand

00:17:06,440 --> 00:17:10,760
routed it actually was another ma noms

00:17:09,170 --> 00:17:12,500
case and then I got it secondhand

00:17:10,760 --> 00:17:14,390
through a form you could tell the edges

00:17:12,500 --> 00:17:17,690
where I roughly routed it to shove this

00:17:14,390 --> 00:17:20,300
case in so that it all fit so we plug

00:17:17,690 --> 00:17:21,620
this in it's going to give a light and

00:17:20,300 --> 00:17:23,600
so there's some fun things that we can

00:17:21,620 --> 00:17:28,700
do like really quickly with this so we

00:17:23,600 --> 00:17:30,740
can open up monome cereal which is this

00:17:28,700 --> 00:17:32,810
communicates the computer through cereal

00:17:30,740 --> 00:17:34,190
monome cereal picks up the serial

00:17:32,810 --> 00:17:36,860
communication and then converts that

00:17:34,190 --> 00:17:38,660
into osc which is open sound control

00:17:36,860 --> 00:17:41,180
it's an alternative to MIDI it's really

00:17:38,660 --> 00:17:43,190
nice because it does everything over UDP

00:17:41,180 --> 00:17:45,130
so you can do a lot more than you can

00:17:43,190 --> 00:17:48,200
with MIDI MIDI you really only have like

00:17:45,130 --> 00:17:51,700
128 messages osc is kind of like

00:17:48,200 --> 00:17:55,930
infinite so here's an example of a patch

00:17:51,700 --> 00:17:58,310
for a spectrometer so we can go and grab

00:17:55,930 --> 00:18:03,260
my voice and then we can just see like

00:17:58,310 --> 00:18:04,790
really quickly that and this is this is

00:18:03,260 --> 00:18:07,040
like totally building on everything that

00:18:04,790 --> 00:18:10,070
we were talking about earlier too we're

00:18:07,040 --> 00:18:11,540
taking a sample of my voice we're

00:18:10,070 --> 00:18:13,640
putting them through a Fourier transform

00:18:11,540 --> 00:18:15,890
and so a Fourier transform what it's

00:18:13,640 --> 00:18:17,600
going to do is going to take the sound

00:18:15,890 --> 00:18:19,430
that's currently being represented in

00:18:17,600 --> 00:18:21,020
the time domain is going to put it

00:18:19,430 --> 00:18:22,670
through a transform and represent it in

00:18:21,020 --> 00:18:24,440
the frequency domain so each one of

00:18:22,670 --> 00:18:26,720
these bins is actually representing a

00:18:24,440 --> 00:18:28,850
chunk of frequencies and then over time

00:18:26,720 --> 00:18:30,170
were able to basically say hey you know

00:18:28,850 --> 00:18:32,540
like I just care about the granularity

00:18:30,170 --> 00:18:34,430
of an eight-by-eight grid and so we can

00:18:32,540 --> 00:18:36,410
kind of like take a look at max

00:18:34,430 --> 00:18:38,470
programming a little bit here if we dig

00:18:36,410 --> 00:18:42,050
in this was this patch was written by

00:18:38,470 --> 00:18:45,440
Brian Crabtree was online noticed n teh

00:18:42,050 --> 00:18:48,850
n is the creator of the mono he's really

00:18:45,440 --> 00:18:48,850
cool guy that this is basically

00:18:49,600 --> 00:18:57,560
what's going on under the hood which you

00:18:52,460 --> 00:18:58,880
know makes a ton of sense but I mean

00:18:57,560 --> 00:19:01,280
like there's other fun things that we

00:18:58,880 --> 00:19:04,310
could do to so like in Ableton for

00:19:01,280 --> 00:19:09,290
example let's see if this works I can go

00:19:04,310 --> 00:19:11,510
to my mu max for live folder I have this

00:19:09,290 --> 00:19:15,860
one thing I really love using called

00:19:11,510 --> 00:19:21,170
Raptor we throw a raptor in here that's

00:19:15,860 --> 00:19:24,140
not raptor that's Raptors so there's

00:19:21,170 --> 00:19:25,880
raptor and i connect raptor to the

00:19:24,140 --> 00:19:27,830
monome and now it shouldn't be yeah

00:19:25,880 --> 00:19:29,720
that's exactly what I'm expecting and we

00:19:27,830 --> 00:19:32,600
can go and grab like there's this synth

00:19:29,720 --> 00:19:33,830
I really love I'm called boards and it's

00:19:32,600 --> 00:19:37,280
like a boards of canada ripoff

00:19:33,830 --> 00:19:38,750
instrument everything sounds good like

00:19:37,280 --> 00:19:40,880
you don't even need to like think it's

00:19:38,750 --> 00:19:42,710
just like you throw this in i'm going to

00:19:40,880 --> 00:19:52,940
like make up like a hit right now it's

00:19:42,710 --> 00:19:55,550
amazing so raptor like i'm not a huge

00:19:52,940 --> 00:19:57,860
fan of see so let's go into G and we'll

00:19:55,550 --> 00:20:01,150
set up this loop group to be four bars

00:19:57,860 --> 00:20:01,150
so we can kind of start

00:20:34,740 --> 00:20:39,940
so we can kind of just like let that go

00:20:36,940 --> 00:20:41,380
and just duplicate it and then just like

00:20:39,940 --> 00:20:42,970
put in another syntha someone made that

00:20:41,380 --> 00:20:44,620
I don't have to think about like we'll

00:20:42,970 --> 00:20:49,390
just do something that has the word base

00:20:44,620 --> 00:20:50,830
in it down that's not easy well you know

00:20:49,390 --> 00:20:52,300
what's actually really great for not

00:20:50,830 --> 00:20:55,870
having to think of it I really love not

00:20:52,300 --> 00:20:57,880
thinking about things there isn't it the

00:20:55,870 --> 00:21:01,680
instrument racking here has these like

00:20:57,880 --> 00:21:08,920
evolving sits that are really awesome

00:21:01,680 --> 00:21:11,920
yeah these rhythmic ones know the

00:21:08,920 --> 00:21:14,910
ambient involving yeah something like

00:21:11,920 --> 00:21:14,910
that it's gonna be music

00:21:53,090 --> 00:21:55,150
you

00:21:59,460 --> 00:22:02,160
what's awesome is out of everyone in

00:22:01,409 --> 00:22:06,260
there

00:22:02,160 --> 00:22:06,260
track so i can just go and

00:22:07,000 --> 00:22:10,870
we put him on time

00:22:17,159 --> 00:22:21,440
it's the one analytical GG

00:22:22,150 --> 00:22:30,740
you know what my able to do

00:22:24,809 --> 00:22:30,740
yeah yeah you know the rest on backwards

00:22:44,020 --> 00:22:51,360
you got together always good

00:22:48,550 --> 00:22:51,360
yo

00:23:44,520 --> 00:23:56,399
so something like that you can do really

00:23:46,510 --> 00:23:56,399
easily are there any other questions I

00:23:57,270 --> 00:24:04,020
cool i'll call it now thank you so much

00:23:59,830 --> 00:24:04,020

YouTube URL: https://www.youtube.com/watch?v=gmQ1kcj8Q2k


