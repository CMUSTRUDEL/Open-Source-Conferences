Title: Raiders of the Javascript-based Malware    Pranshu Bajpai    CascadiaJS 2018
Publication date: 2018-12-10
Playlist: CascadiaJS 2018
Description: 
	Some modern malware are designed entirely in Javascript and executed using the default Windows Script Host or within the user's browser. In this talk, we discuss the design, operation, and implementation intricacies of Javascript-based ransomware and cryptojacking malware.

https://2018.cascadiajs.com/
Captions: 
	00:00:00,000 --> 00:00:08,370
all right Thank You Marci

00:00:03,449 --> 00:00:12,179
so hello Cascadia Jas welcome to this

00:00:08,370 --> 00:00:15,269
talk how many people are feeling drowsy

00:00:12,179 --> 00:00:16,800
after lunch shine some light on these

00:00:15,269 --> 00:00:20,220
people right here we want to make sure

00:00:16,800 --> 00:00:23,189
that I asked a few questions during my

00:00:20,220 --> 00:00:24,689
talk wake people up alright so for the

00:00:23,189 --> 00:00:26,490
next half an hour or so I'm going to

00:00:24,689 --> 00:00:28,470
pretend to know a few things about

00:00:26,490 --> 00:00:30,630
JavaScript but like Marcy said I do

00:00:28,470 --> 00:00:32,070
security research so hopefully you'll go

00:00:30,630 --> 00:00:37,079
along with the facade and not call me

00:00:32,070 --> 00:00:39,149
out if I say something wrong but but I

00:00:37,079 --> 00:00:40,530
spend my time looking at malware and I

00:00:39,149 --> 00:00:42,450
thought I could share some of the

00:00:40,530 --> 00:00:46,170
JavaScript malware they've been seeing

00:00:42,450 --> 00:00:48,149
lately on the Internet in the wild so

00:00:46,170 --> 00:00:51,270
this talk is called Raiders or the

00:00:48,149 --> 00:00:53,550
JavaScript based malware all right so

00:00:51,270 --> 00:00:55,829
the two important threats that I wanted

00:00:53,550 --> 00:00:57,539
to discuss is an example of a ransomware

00:00:55,829 --> 00:01:00,359
that is written entirely in JavaScript

00:00:57,539 --> 00:01:01,859
which is which is something we didn't

00:01:00,359 --> 00:01:03,120
even know could happen as security

00:01:01,859 --> 00:01:05,040
researchers because we always see

00:01:03,120 --> 00:01:06,409
ransomware written in C or C++ one of

00:01:05,040 --> 00:01:08,189
those languages right but this

00:01:06,409 --> 00:01:10,170
ransomware is written entirely in

00:01:08,189 --> 00:01:11,700
JavaScript the second thing the second

00:01:10,170 --> 00:01:13,670
important thing we want to discuss was

00:01:11,700 --> 00:01:16,049
crypto jacking and crypto jacking is

00:01:13,670 --> 00:01:17,340
proliferating on the Internet and what

00:01:16,049 --> 00:01:20,939
we want to discuss a little bit about

00:01:17,340 --> 00:01:22,950
that as well so let's go ahead and get

00:01:20,939 --> 00:01:24,780
started a little bit about me a little

00:01:22,950 --> 00:01:26,250
bit about a group I work as part of the

00:01:24,780 --> 00:01:28,470
security research group at Michigan

00:01:26,250 --> 00:01:32,880
State University before I was a PhD

00:01:28,470 --> 00:01:35,009
candidate there before I started my PhD

00:01:32,880 --> 00:01:37,500
there I used to do independent

00:01:35,009 --> 00:01:39,630
penetration testing so you know finding

00:01:37,500 --> 00:01:41,070
flaws security weaknesses for clients

00:01:39,630 --> 00:01:42,990
and then getting them a report at the

00:01:41,070 --> 00:01:46,229
end of it so that they can fix the

00:01:42,990 --> 00:01:47,549
security holes so I am an active speaker

00:01:46,229 --> 00:01:48,899
or security conferences this is the

00:01:47,549 --> 00:01:50,790
first time I'm speaking at a conference

00:01:48,899 --> 00:01:52,500
which is not a security conference so

00:01:50,790 --> 00:01:57,860
this is pretty exciting for me and a

00:01:52,500 --> 00:02:00,299
little nerve-wracking but but so this

00:01:57,860 --> 00:02:04,259
slide kind of introduces some of the

00:02:00,299 --> 00:02:06,240
threats some of the new stories that

00:02:04,259 --> 00:02:08,310
I've seen over the past week so these

00:02:06,240 --> 00:02:09,629
are pretty recent so Ransome is not a

00:02:08,310 --> 00:02:11,489
ransomware it's not going anywhere

00:02:09,629 --> 00:02:13,760
you know financially motivated cyber

00:02:11,489 --> 00:02:15,709
criminals love to use rants

00:02:13,760 --> 00:02:17,120
we're encrypted jackin attacks to make

00:02:15,709 --> 00:02:18,950
the money and it's not going anywhere

00:02:17,120 --> 00:02:20,209
because because it keeps making them

00:02:18,950 --> 00:02:23,480
money so why would they

00:02:20,209 --> 00:02:26,980
you know discard of this amazing method

00:02:23,480 --> 00:02:32,239
they have to to make money and and

00:02:26,980 --> 00:02:33,980
what's new is we is is the JavaScript

00:02:32,239 --> 00:02:37,310
based ransomware that we've just seen so

00:02:33,980 --> 00:02:39,079
the the elements of a ransomware before

00:02:37,310 --> 00:02:40,940
I go ahead and jump into the JavaScript

00:02:39,079 --> 00:02:44,049
based ransomware called Raa ransomware

00:02:40,940 --> 00:02:46,159
and focus on the code and the JavaScript

00:02:44,049 --> 00:02:48,019
details of the JavaScript involved there

00:02:46,159 --> 00:02:48,650
I want to discuss the basic elements of

00:02:48,019 --> 00:02:51,500
a ransomware

00:02:48,650 --> 00:02:53,090
so it starts with an initial entry right

00:02:51,500 --> 00:02:55,489
so just like any other infection you

00:02:53,090 --> 00:02:57,079
want to gain an entry into the host so

00:02:55,489 --> 00:02:58,519
there's a bunch of ways to do that I'm

00:02:57,079 --> 00:03:01,159
sure all of you are familiar with social

00:02:58,519 --> 00:03:02,450
engineering attacks you know so you know

00:03:01,159 --> 00:03:04,250
traditional phishing emails they have a

00:03:02,450 --> 00:03:06,799
document attached if you if you get an

00:03:04,250 --> 00:03:09,049
unsuspecting you know user to download

00:03:06,799 --> 00:03:10,639
and double click it then it executes the

00:03:09,049 --> 00:03:12,799
malicious functionality on their system

00:03:10,639 --> 00:03:15,079
right and then there are other ways that

00:03:12,799 --> 00:03:17,180
we've seen recently which they're

00:03:15,079 --> 00:03:19,160
they're using which is exporting known

00:03:17,180 --> 00:03:22,699
vulnerabilities if you're not updating

00:03:19,160 --> 00:03:25,310
your PC's regularly and they also love

00:03:22,699 --> 00:03:27,709
to exploit weakly secured RDP sessions

00:03:25,310 --> 00:03:29,900
or Isis s sessions if you if you haven't

00:03:27,709 --> 00:03:32,780
got got a strong password on there and

00:03:29,900 --> 00:03:33,889
and that sort of thing so the next thing

00:03:32,780 --> 00:03:36,019
they need to do is get an encryption

00:03:33,889 --> 00:03:38,629
secret which means that all right they

00:03:36,019 --> 00:03:40,370
need to have a unique key per victim if

00:03:38,629 --> 00:03:43,010
for every infection they need to have a

00:03:40,370 --> 00:03:45,530
unique key why because you're a part of

00:03:43,010 --> 00:03:47,329
their big ransomware campaign and if

00:03:45,530 --> 00:03:50,329
they have the same key for every victim

00:03:47,329 --> 00:03:52,669
then vicked once a victim pays let's say

00:03:50,329 --> 00:03:54,709
300 dollars for for the ransom and gets

00:03:52,669 --> 00:03:55,760
the key back then that key can be shared

00:03:54,709 --> 00:03:57,409
with the rest of the users and that

00:03:55,760 --> 00:03:59,120
neutralizes the entire ransomware

00:03:57,409 --> 00:04:01,220
campaign so it's important for them to

00:03:59,120 --> 00:04:03,650
get this unique encryption secret per

00:04:01,220 --> 00:04:05,959
victim right and then and then they go

00:04:03,650 --> 00:04:07,940
ahead and start with file encryption so

00:04:05,959 --> 00:04:09,139
they search for specific file types they

00:04:07,940 --> 00:04:11,690
don't want to encrypt dll's

00:04:09,139 --> 00:04:14,239
that doesn't do them any good because

00:04:11,690 --> 00:04:16,909
you can just restore that but what you

00:04:14,239 --> 00:04:19,010
cannot restore which is your personal

00:04:16,909 --> 00:04:21,769
data so if you don't have a backup right

00:04:19,010 --> 00:04:23,630
so they are looking to encrypt docx

00:04:21,769 --> 00:04:25,950
xlsx and so that's that sort of thing so

00:04:23,630 --> 00:04:27,750
you know they they like to

00:04:25,950 --> 00:04:29,430
finally they like to demand ransom which

00:04:27,750 --> 00:04:31,590
is usually around $300 in

00:04:29,430 --> 00:04:33,210
cryptocurrencies so with the

00:04:31,590 --> 00:04:35,100
understanding of the general elements of

00:04:33,210 --> 00:04:37,350
ransomware let's take a look at our a

00:04:35,100 --> 00:04:39,450
ransomware so this is the first

00:04:37,350 --> 00:04:41,940
ransomware like I like I've said that's

00:04:39,450 --> 00:04:43,890
written entirely in JavaScript and it

00:04:41,940 --> 00:04:46,260
uses the default windows script host no

00:04:43,890 --> 00:04:48,870
I did not know that by default Windows

00:04:46,260 --> 00:04:50,580
has the windows script host which is a

00:04:48,870 --> 00:04:54,210
scripting engine that executes

00:04:50,580 --> 00:04:55,590
JavaScript on Windows so if a user so

00:04:54,210 --> 00:04:58,860
what they do is they send a phishing

00:04:55,590 --> 00:05:01,080
email to a user and the attachment is

00:04:58,860 --> 00:05:04,110
something likes something underscore doc

00:05:01,080 --> 00:05:06,930
underscored dot je s now the users users

00:05:04,110 --> 00:05:09,270
are generally trained to think that it's

00:05:06,930 --> 00:05:10,560
normally exe s or executable files that

00:05:09,270 --> 00:05:12,300
are malicious so they would they're more

00:05:10,560 --> 00:05:14,070
likely to download a CSV file thinking

00:05:12,300 --> 00:05:16,080
that it's benign right so they'll

00:05:14,070 --> 00:05:18,090
download it and then double-clicking it

00:05:16,080 --> 00:05:21,390
means that windows script host will

00:05:18,090 --> 00:05:24,330
execute it all right so now they have

00:05:21,390 --> 00:05:25,800
execution capability on host then they

00:05:24,330 --> 00:05:28,800
use a bunch of JavaScript obfuscation

00:05:25,800 --> 00:05:31,050
tactics because in case of C and C++ the

00:05:28,800 --> 00:05:33,210
code isn't always visible you have to

00:05:31,050 --> 00:05:35,280
the source code is invisible to us as

00:05:33,210 --> 00:05:36,990
malware analysts but in case of

00:05:35,280 --> 00:05:39,450
JavaScript the source code is right

00:05:36,990 --> 00:05:40,890
there so for that reason they want to

00:05:39,450 --> 00:05:42,600
make it hard for us to understand what's

00:05:40,890 --> 00:05:44,070
going on and for that reason they use a

00:05:42,600 --> 00:05:45,810
lot of obfuscation tactics which

00:05:44,070 --> 00:05:47,400
basically means they break anything

00:05:45,810 --> 00:05:48,840
you've learned about coding standards

00:05:47,400 --> 00:05:51,090
and good coding practices they do the

00:05:48,840 --> 00:05:53,220
opposite of that so it makes it

00:05:51,090 --> 00:05:56,240
difficult to read this one likes to add

00:05:53,220 --> 00:05:59,190
insult to injury this is not a primary

00:05:56,240 --> 00:06:01,230
functionality of a ransomware but this

00:05:59,190 --> 00:06:02,880
one likes to also drop a Trojan in the

00:06:01,230 --> 00:06:06,360
background that spies on you and steals

00:06:02,880 --> 00:06:09,750
your information so you know no ethics

00:06:06,360 --> 00:06:11,370
in the cyber criminal you know in the

00:06:09,750 --> 00:06:13,940
cyber criminal world anymore like what's

00:06:11,370 --> 00:06:13,940
the world coming to

00:06:15,080 --> 00:06:19,290
so these are these are what we call

00:06:17,130 --> 00:06:21,570
indicators of compromise which means

00:06:19,290 --> 00:06:24,570
these are symptoms of an infection in

00:06:21,570 --> 00:06:27,570
the security industry we like to you

00:06:24,570 --> 00:06:29,640
know use these as a metric towards okay

00:06:27,570 --> 00:06:32,730
do you have this specific and in you

00:06:29,640 --> 00:06:34,980
know infection so a primary way to do it

00:06:32,730 --> 00:06:37,820
is to look at hashes in this particular

00:06:34,980 --> 00:06:40,340
J's file these are the sha

00:06:37,820 --> 00:06:41,660
and md5 hashes that are you know that

00:06:40,340 --> 00:06:43,700
indicated that okay you're hit with this

00:06:41,660 --> 00:06:45,350
particular ransomware then you can look

00:06:43,700 --> 00:06:46,760
at dropped files so once it once it

00:06:45,350 --> 00:06:48,290
executes on a system you can see the

00:06:46,760 --> 00:06:50,540
files it drops in this particular case

00:06:48,290 --> 00:06:53,360
it drops st dot exe which is that pony

00:06:50,540 --> 00:06:55,010
trojan that steals your information so

00:06:53,360 --> 00:06:57,650
that's another indicator and then

00:06:55,010 --> 00:07:00,410
network activity it makes a dns request

00:06:57,650 --> 00:07:01,820
to start wave now calm which is its

00:07:00,410 --> 00:07:02,930
command and control server i'll be

00:07:01,820 --> 00:07:07,100
discussing that in a little bit but

00:07:02,930 --> 00:07:09,020
that's where it goes to for commands so

00:07:07,100 --> 00:07:10,700
once you execute this what i'm going to

00:07:09,020 --> 00:07:12,800
do is i'm going to show you the system

00:07:10,700 --> 00:07:14,570
impact and then I'll discuss the

00:07:12,800 --> 00:07:17,720
JavaScript code that leads to that

00:07:14,570 --> 00:07:20,930
system impact so this is the process

00:07:17,720 --> 00:07:22,490
graph once you execute it W script exe

00:07:20,930 --> 00:07:25,670
is the window scripting host that I was

00:07:22,490 --> 00:07:29,630
talking about and that basically creates

00:07:25,670 --> 00:07:32,630
two processes WordPad exe and st dot exe

00:07:29,630 --> 00:07:34,490
SC dot exe is the Tony the pony Trojan

00:07:32,630 --> 00:07:36,440
that I was talking about and warpath dot

00:07:34,490 --> 00:07:38,450
exe just puts a diversion screen in

00:07:36,440 --> 00:07:40,070
front of your face which distracts you

00:07:38,450 --> 00:07:42,920
while it's executing malicious

00:07:40,070 --> 00:07:45,890
functionality in the background so this

00:07:42,920 --> 00:07:48,020
is the example this is that divergence

00:07:45,890 --> 00:07:51,160
screen that I was talking about it's in

00:07:48,020 --> 00:07:55,940
Russian you know a big surprise there

00:07:51,160 --> 00:07:58,970
it's so this is an error code they are

00:07:55,940 --> 00:08:01,670
basically telling users that you know

00:07:58,970 --> 00:08:03,860
this particular version of Microsoft

00:08:01,670 --> 00:08:06,440
Word or whatever cannot open this

00:08:03,860 --> 00:08:07,820
document for this reason so while you're

00:08:06,440 --> 00:08:11,600
busy dealing with that and while you're

00:08:07,820 --> 00:08:13,310
trying to click close it jumps around so

00:08:11,600 --> 00:08:14,570
when you try to get to the close button

00:08:13,310 --> 00:08:16,040
it jumps around so while you're trying

00:08:14,570 --> 00:08:18,080
to figure out how can I close this

00:08:16,040 --> 00:08:21,860
particular window it execute malicious

00:08:18,080 --> 00:08:23,210
functionality in the background so and

00:08:21,860 --> 00:08:24,980
it doesn't need a lot of time to do that

00:08:23,210 --> 00:08:27,650
a few seconds is enough a network

00:08:24,980 --> 00:08:29,450
activity in the meanwhile you know in

00:08:27,650 --> 00:08:30,650
the in the meantime network activity

00:08:29,450 --> 00:08:33,320
something like this it makes several

00:08:30,650 --> 00:08:35,570
requests to DNS requests to start wave

00:08:33,320 --> 00:08:37,430
now calm which is its command and

00:08:35,570 --> 00:08:39,110
control server and it's the potential

00:08:37,430 --> 00:08:40,430
source of the unique encryption key that

00:08:39,110 --> 00:08:42,110
I was talking about when I was talking

00:08:40,430 --> 00:08:43,970
about the primary elements of ransomware

00:08:42,110 --> 00:08:46,880
so that's where it acquires this unique

00:08:43,970 --> 00:08:47,270
encryption key from right but the CNC

00:08:46,880 --> 00:08:50,330
server

00:08:47,270 --> 00:08:51,300
in case of many of these infections the

00:08:50,330 --> 00:08:53,010
malicious domains get

00:08:51,300 --> 00:08:55,529
taken down obviously once they're

00:08:53,010 --> 00:08:57,000
recognized so this particular CNC server

00:08:55,529 --> 00:08:58,620
has been taken down now so we can't

00:08:57,000 --> 00:09:03,510
really study what response it gets back

00:08:58,620 --> 00:09:06,000
to from the server anymore but if you

00:09:03,510 --> 00:09:07,980
look at the code so two of the things

00:09:06,000 --> 00:09:10,050
that I didn't show was it then encrypts

00:09:07,980 --> 00:09:13,050
the files so if it let's say if it found

00:09:10,050 --> 00:09:14,550
your docx or your xlsx it will then

00:09:13,050 --> 00:09:17,430
replace that with an encrypted version

00:09:14,550 --> 00:09:22,529
and then what it will do next is you

00:09:17,430 --> 00:09:25,470
know have a ransom note in every folder

00:09:22,529 --> 00:09:27,120
of your computer so you know because

00:09:25,470 --> 00:09:30,959
having a ransom note on one computer

00:09:27,120 --> 00:09:33,180
isn't enough so it's on one folder isn't

00:09:30,959 --> 00:09:35,430
enough so it just goes ahead and in

00:09:33,180 --> 00:09:36,839
every folder you have you've got on your

00:09:35,430 --> 00:09:41,790
computer it will put a ransom note up

00:09:36,839 --> 00:09:44,279
there so so crypto j/s library is a big

00:09:41,790 --> 00:09:46,709
part of this ransomware we've seen that

00:09:44,279 --> 00:09:50,640
ransomware developers are at coding

00:09:46,709 --> 00:09:52,140
so well so what they do is they engage

00:09:50,640 --> 00:09:53,490
in a lot of cargo called programming

00:09:52,140 --> 00:09:56,610
they steal code from each other they

00:09:53,490 --> 00:09:59,370
copy paste code from let's say wiki CPP

00:09:56,610 --> 00:10:02,010
and things like that so they already

00:09:59,370 --> 00:10:03,450
can't get many things right so why would

00:10:02,010 --> 00:10:04,740
they want to implement crypto

00:10:03,450 --> 00:10:06,779
functionality from scratch because

00:10:04,740 --> 00:10:08,070
there's a lot of room for error there so

00:10:06,779 --> 00:10:10,020
what they do is they use some kind of

00:10:08,070 --> 00:10:12,149
cryptographic library in this particular

00:10:10,020 --> 00:10:14,370
case they use the crypto JS library so

00:10:12,149 --> 00:10:16,980
the first 800 lines of this ransomware

00:10:14,370 --> 00:10:20,160
contains the crypto J's code has just

00:10:16,980 --> 00:10:22,110
copy paste in so that's where it gets

00:10:20,160 --> 00:10:25,950
its crypto functionality from now the

00:10:22,110 --> 00:10:27,990
next part is the the diversion message

00:10:25,950 --> 00:10:30,120
so the the message that I showed you on

00:10:27,990 --> 00:10:32,010
the screen on WordPad Exe in Russian

00:10:30,120 --> 00:10:34,440
that comes from here so if you look at

00:10:32,010 --> 00:10:36,899
this part right here by the way also

00:10:34,440 --> 00:10:38,279
notice the code obfuscation here the

00:10:36,899 --> 00:10:40,380
function names and the variable names

00:10:38,279 --> 00:10:41,490
there they're very difficult to read

00:10:40,380 --> 00:10:44,610
they're just a bunch of random

00:10:41,490 --> 00:10:47,640
characters so that makes it hard for you

00:10:44,610 --> 00:10:50,040
to follow along with their code so in

00:10:47,640 --> 00:10:52,290
this particular function this variable

00:10:50,040 --> 00:10:55,649
holds a long string which is you know

00:10:52,290 --> 00:10:59,339
then basics before decoded and then it

00:10:55,649 --> 00:11:02,040
drops this particular you know decoded

00:10:59,339 --> 00:11:03,990
string in my documents then creates this

00:11:02,040 --> 00:11:04,740
doc underscore attached underscore a

00:11:03,990 --> 00:11:07,680
random story

00:11:04,740 --> 00:11:10,920
and and then puts it in front of your

00:11:07,680 --> 00:11:13,170
face by opening WordPad exe and pasting

00:11:10,920 --> 00:11:16,290
this on there so that's what that

00:11:13,170 --> 00:11:18,390
diversion screen was all right so then

00:11:16,290 --> 00:11:21,290
we talked about decrypting the pony

00:11:18,390 --> 00:11:23,880
Trojan because like I said st dot exe is

00:11:21,290 --> 00:11:27,029
pertains to the pony trojan that spies

00:11:23,880 --> 00:11:28,800
on your information right so this

00:11:27,029 --> 00:11:30,120
function is responsible for creating

00:11:28,800 --> 00:11:31,800
that and this is pretty impressive

00:11:30,120 --> 00:11:35,550
because they use JavaScript to create a

00:11:31,800 --> 00:11:38,339
binary executable file by and by

00:11:35,550 --> 00:11:41,070
encoding and encrypting the whole binary

00:11:38,339 --> 00:11:43,529
in the in string format in there so it's

00:11:41,070 --> 00:11:46,230
hard coded in there so what it does is

00:11:43,529 --> 00:11:48,540
this is the this is a very long string

00:11:46,230 --> 00:11:50,190
by the way it's truncated over here but

00:11:48,540 --> 00:11:53,660
it's a very long string which contains

00:11:50,190 --> 00:11:58,020
the entire code for Pony Trojan and then

00:11:53,660 --> 00:12:00,450
and then it decrypt it by using the AES

00:11:58,020 --> 00:12:03,149
encryption algorithm or decryption

00:12:00,450 --> 00:12:04,890
algorithm and then and then the the key

00:12:03,149 --> 00:12:07,649
for that is also encoded as part of the

00:12:04,890 --> 00:12:10,380
ransomware and then it uses that eval

00:12:07,649 --> 00:12:13,320
command to basically get to this point

00:12:10,380 --> 00:12:15,270
so that eval evaluates to over here and

00:12:13,320 --> 00:12:18,630
so this is what it evaluates to and this

00:12:15,270 --> 00:12:20,790
is what drops the Pony Trojan where it

00:12:18,630 --> 00:12:24,770
goes in the my documents' creates that

00:12:20,790 --> 00:12:29,990
file SP dot exe which is the Trojan and

00:12:24,770 --> 00:12:33,900
care set 437 pertains to well it lets it

00:12:29,990 --> 00:12:36,420
figure out how to handle this executable

00:12:33,900 --> 00:12:37,560
binary data in string formats so that's

00:12:36,420 --> 00:12:39,510
what that pertains to you'll see that

00:12:37,560 --> 00:12:43,740
throughout this ransomware is code and

00:12:39,510 --> 00:12:44,940
then you see write text safety file

00:12:43,740 --> 00:12:47,190
close that file

00:12:44,940 --> 00:12:49,770
so obviously it's creating that file now

00:12:47,190 --> 00:12:51,720
on in the My Documents folder and then

00:12:49,770 --> 00:12:53,610
finally it runs the file so now the

00:12:51,720 --> 00:12:55,770
trojan is executing on your computer

00:12:53,610 --> 00:12:57,990
next thing it needs to do is now it

00:12:55,770 --> 00:12:59,610
needs to actually perform its ransomware

00:12:57,990 --> 00:13:02,550
functionality which is to encrypt drives

00:12:59,610 --> 00:13:05,670
so to do that what it does is it uses

00:13:02,550 --> 00:13:08,459
the basic object available as part of

00:13:05,670 --> 00:13:09,810
the windows script host to create to go

00:13:08,459 --> 00:13:11,940
through the drives and enumerate the

00:13:09,810 --> 00:13:13,890
drives dry letters and then access

00:13:11,940 --> 00:13:15,120
different files and folders and you know

00:13:13,890 --> 00:13:16,560
source through the files and their

00:13:15,120 --> 00:13:18,820
extensions to know which files to

00:13:16,560 --> 00:13:21,710
encrypt and so on

00:13:18,820 --> 00:13:24,170
so you'll see things like this else

00:13:21,710 --> 00:13:26,600
continue and then there's this is the

00:13:24,170 --> 00:13:29,090
equivalent of a go-to statement you know

00:13:26,600 --> 00:13:30,950
and this makes this code further

00:13:29,090 --> 00:13:32,780
complicated to understand because this

00:13:30,950 --> 00:13:34,880
makes it a spaghetti code if they have a

00:13:32,780 --> 00:13:37,250
bunch of random go-to jumps at random

00:13:34,880 --> 00:13:41,270
spots it makes this hard to follow along

00:13:37,250 --> 00:13:44,690
the the execution flow of their of their

00:13:41,270 --> 00:13:47,180
bite of their code so further off the

00:13:44,690 --> 00:13:52,030
station tactics that these the ransom

00:13:47,180 --> 00:13:54,200
note comes from here and and then this

00:13:52,030 --> 00:13:57,110
pertains to encrypting the users files

00:13:54,200 --> 00:14:00,490
which which means that this particular

00:13:57,110 --> 00:14:04,850
function right here calls this function

00:14:00,490 --> 00:14:07,520
in a loop once for every file that it

00:14:04,850 --> 00:14:08,900
wants to encrypt so this particular

00:14:07,520 --> 00:14:10,960
function that is called in the loop

00:14:08,900 --> 00:14:13,370
within the other function will be

00:14:10,960 --> 00:14:15,170
encrypting each and every file going

00:14:13,370 --> 00:14:16,970
through deriving functionality from the

00:14:15,170 --> 00:14:19,040
crypto jeaious library that's that I

00:14:16,970 --> 00:14:21,230
showed you in the beginning and you know

00:14:19,040 --> 00:14:27,770
they use the AES encryption algorithm to

00:14:21,230 --> 00:14:30,890
do this so a quick summary you know it

00:14:27,770 --> 00:14:33,830
obviously encrypts files on the user's

00:14:30,890 --> 00:14:36,200
computer on the user's computer but it

00:14:33,830 --> 00:14:38,060
also deletes VSS files what I didn't

00:14:36,200 --> 00:14:40,100
show you for the sake of brevity is it

00:14:38,060 --> 00:14:42,170
also performs certain other tasks like

00:14:40,100 --> 00:14:43,520
deleting VSS files these are volumes

00:14:42,170 --> 00:14:46,580
shadow copies that are maintained on

00:14:43,520 --> 00:14:49,130
windows so you know you can use Windows

00:14:46,580 --> 00:14:52,130
Restore to restore to an earlier point

00:14:49,130 --> 00:14:54,620
so if you do that obviously ransomware

00:14:52,130 --> 00:14:56,210
has lost its leverage on you so what

00:14:54,620 --> 00:14:59,590
what they like to do is make sure they

00:14:56,210 --> 00:15:02,870
eliminate any backups in any form so

00:14:59,590 --> 00:15:06,050
because of that they want to get rid of

00:15:02,870 --> 00:15:08,630
those VSS volume shadow copies so it

00:15:06,050 --> 00:15:08,990
likes to do that as well like I said it

00:15:08,630 --> 00:15:11,240
drops

00:15:08,990 --> 00:15:14,840
you know the the Trojan horse which is

00:15:11,240 --> 00:15:18,440
not which is not really something every

00:15:14,840 --> 00:15:21,880
ransomware does but this one does so so

00:15:18,440 --> 00:15:25,160
that's unique to this ransomware and and

00:15:21,880 --> 00:15:27,680
the Trojan is dropped in My Documents

00:15:25,160 --> 00:15:29,700
folder so you know in in summary it was

00:15:27,680 --> 00:15:32,190
very interesting for us as

00:15:29,700 --> 00:15:35,360
to see that there's a ransomware now

00:15:32,190 --> 00:15:37,800
written entirely in JavaScript I mean

00:15:35,360 --> 00:15:43,230
who knew that JavaScript is a full-blown

00:15:37,800 --> 00:15:45,450
programming language you know so that so

00:15:43,230 --> 00:15:47,070
the next threat is scripted right Jackie

00:15:45,450 --> 00:15:48,360
and I want to quickly touch upon this as

00:15:47,070 --> 00:15:51,300
well because this is the second biggest

00:15:48,360 --> 00:15:53,670
thing we're seeing in 2018 so ransomware

00:15:51,300 --> 00:15:55,320
has been you know continuing since 2005

00:15:53,670 --> 00:15:57,900
2006 is when it took off and now it's

00:15:55,320 --> 00:16:01,320
steadily growing right but cryptid

00:15:57,900 --> 00:16:02,670
jacking took off after following the

00:16:01,320 --> 00:16:04,050
rise in the valuation of

00:16:02,670 --> 00:16:05,640
cryptocurrencies so around the end of

00:16:04,050 --> 00:16:09,480
2017 Bitcoin and other cryptocurrencies

00:16:05,640 --> 00:16:11,430
took off and and so of course it took

00:16:09,480 --> 00:16:14,220
other cryptocurrencies like maneras

00:16:11,430 --> 00:16:18,020
valuation up with it and then we are

00:16:14,220 --> 00:16:20,460
introduced to web crypto jacking and and

00:16:18,020 --> 00:16:21,630
it's the unauthorized use of processing

00:16:20,460 --> 00:16:22,860
power and electricity to mine

00:16:21,630 --> 00:16:24,960
cryptocurrencies so if you go on a

00:16:22,860 --> 00:16:27,060
website I'll show you the web examples

00:16:24,960 --> 00:16:30,150
of this because that is more relevant to

00:16:27,060 --> 00:16:32,460
JavaScript and so so the web-based

00:16:30,150 --> 00:16:36,480
examples of this would be something like

00:16:32,460 --> 00:16:38,010
this where you'll go on a website and if

00:16:36,480 --> 00:16:40,200
you look through the source code you'll

00:16:38,010 --> 00:16:42,000
see a little script being called from

00:16:40,200 --> 00:16:45,480
coin Hyper's of particular is a popular

00:16:42,000 --> 00:16:47,400
source for these scripts where they'll

00:16:45,480 --> 00:16:50,070
import the script from coin hive and it

00:16:47,400 --> 00:16:53,450
will initiate a coin hive instance in

00:16:50,070 --> 00:16:55,830
the browser and that is the that that

00:16:53,450 --> 00:16:58,320
number that unique string you see in the

00:16:55,830 --> 00:17:00,660
box is the ID of the attacker and that

00:16:58,320 --> 00:17:03,930
is where you know it credits all the all

00:17:00,660 --> 00:17:05,579
the money so you mind you're basically

00:17:03,930 --> 00:17:07,410
mining for someone else while you're

00:17:05,579 --> 00:17:09,480
visiting this web page so you can see

00:17:07,410 --> 00:17:11,209
how it can get lucrative if you have

00:17:09,480 --> 00:17:14,970
thousands and thousands of visitors

00:17:11,209 --> 00:17:17,610
visiting on your website and say staying

00:17:14,970 --> 00:17:19,980
on that web page for a long amount of

00:17:17,610 --> 00:17:20,310
time so how do you do that how do you do

00:17:19,980 --> 00:17:22,470
that

00:17:20,310 --> 00:17:24,600
you you just you just give that you just

00:17:22,470 --> 00:17:27,300
tell them that there's like HD porn free

00:17:24,600 --> 00:17:32,300
HD porn on this on this link and people

00:17:27,300 --> 00:17:32,300
will click it's amazing so you know

00:17:33,070 --> 00:17:37,130
so here we go

00:17:34,730 --> 00:17:38,870
so you know scripts as seen on the

00:17:37,130 --> 00:17:41,210
crypto jackin websites more examples of

00:17:38,870 --> 00:17:42,590
that this one is an example with crypto

00:17:41,210 --> 00:17:44,030
loot doing the same thing so it's not

00:17:42,590 --> 00:17:45,890
just coin hive it's sometimes also

00:17:44,030 --> 00:17:49,130
crypto loot and there's other sources as

00:17:45,890 --> 00:17:50,630
well so what are the impact on on system

00:17:49,130 --> 00:17:52,760
resources alright we did a little

00:17:50,630 --> 00:17:54,020
experiment just to see how much what

00:17:52,760 --> 00:17:55,340
they do and this was when this threat

00:17:54,020 --> 00:17:58,310
was very new so just the beginning of

00:17:55,340 --> 00:17:59,900
2018 so you know that's the that's the

00:17:58,310 --> 00:18:01,940
before and after shot and you know

00:17:59,900 --> 00:18:03,530
before you see that the course you know

00:18:01,940 --> 00:18:06,050
that this the computer is at normal

00:18:03,530 --> 00:18:08,210
usage and then you visit one website you

00:18:06,050 --> 00:18:10,190
know one webpage with with this crypto

00:18:08,210 --> 00:18:12,380
jacking script enabled in the background

00:18:10,190 --> 00:18:14,930
and you see that all four cores are not

00:18:12,380 --> 00:18:20,180
being used 200 percent of their capacity

00:18:14,930 --> 00:18:22,460
and the CPU temperature rises and and if

00:18:20,180 --> 00:18:24,830
you look at the top process is the web

00:18:22,460 --> 00:18:26,480
content that's draining ninety seven

00:18:24,830 --> 00:18:28,730
point five percent of your CPU power

00:18:26,480 --> 00:18:30,860
right now which is you know kind of

00:18:28,730 --> 00:18:33,740
stupid of them because this makes it

00:18:30,860 --> 00:18:35,900
really easy to notice but they'll get

00:18:33,740 --> 00:18:37,580
cleverer and that's what that's what the

00:18:35,900 --> 00:18:39,530
problem is that is they're they're in a

00:18:37,580 --> 00:18:41,120
learning phase right now at least as far

00:18:39,530 --> 00:18:44,210
as crypto jacking attacks are concerned

00:18:41,120 --> 00:18:46,280
so they will figure out that it's better

00:18:44,210 --> 00:18:49,940
to mine slower and you know get away

00:18:46,280 --> 00:18:51,530
with it for a long duration than to do

00:18:49,940 --> 00:18:52,760
something like this where you'll

00:18:51,530 --> 00:18:54,230
probably notice it pretty quickly

00:18:52,760 --> 00:18:56,210
because your computer slows down as well

00:18:54,230 --> 00:18:58,670
you know you're draining electricity and

00:18:56,210 --> 00:19:02,930
you know that sort of thing so you know

00:18:58,670 --> 00:19:04,970
it this is more obvious then we see

00:19:02,930 --> 00:19:06,770
examples like this so in this particular

00:19:04,970 --> 00:19:09,410
case if you look at the source code of

00:19:06,770 --> 00:19:11,690
the website you won't really see right

00:19:09,410 --> 00:19:13,130
away where the cryptid jacking script is

00:19:11,690 --> 00:19:14,900
hidden so if you're looking for coin

00:19:13,130 --> 00:19:17,060
high or crypto loot or some one of those

00:19:14,900 --> 00:19:19,400
other you know miners you won't really

00:19:17,060 --> 00:19:22,340
see it right away but there's that eval

00:19:19,400 --> 00:19:24,950
function again I I recently read

00:19:22,340 --> 00:19:26,990
something about evil isn't evil it's

00:19:24,950 --> 00:19:29,300
just misunderstood yeah right you know I

00:19:26,990 --> 00:19:32,870
see see it and ransomware seen in crypto

00:19:29,300 --> 00:19:36,200
jackin so so this is the this is that

00:19:32,870 --> 00:19:38,330
eval function taken from the taken from

00:19:36,200 --> 00:19:40,340
the source code and this is what it

00:19:38,330 --> 00:19:42,470
evaluates to so again as you can see

00:19:40,340 --> 00:19:43,820
it's it's the it's the same old coin

00:19:42,470 --> 00:19:45,740
hive script that is

00:19:43,820 --> 00:19:49,130
porting and mining on people's computer

00:19:45,740 --> 00:19:52,370
and and the problem with this is that

00:19:49,130 --> 00:19:54,500
now if you want to help by writing a

00:19:52,370 --> 00:19:56,750
crawler or something that crawls the web

00:19:54,500 --> 00:19:58,460
looking for different cryptid jacking

00:19:56,750 --> 00:19:59,870
websites and let's say that the string

00:19:58,460 --> 00:20:01,910
you put in there is look for coin hive

00:19:59,870 --> 00:20:03,260
in crypto loot and things like that this

00:20:01,910 --> 00:20:05,000
makes it harder for you to get there

00:20:03,260 --> 00:20:06,560
because you know now that now it's

00:20:05,000 --> 00:20:08,120
hidden behind this eval statements how

00:20:06,560 --> 00:20:10,730
would you write that curie you know how

00:20:08,120 --> 00:20:13,340
would you how would you make an

00:20:10,730 --> 00:20:15,950
automatic analysis towards you know if

00:20:13,340 --> 00:20:17,870
if there's you know crypto jacking on

00:20:15,950 --> 00:20:20,840
this website or not so that that makes

00:20:17,870 --> 00:20:23,180
it a little more complicated so I did a

00:20:20,840 --> 00:20:25,400
preliminary analysis basically I was

00:20:23,180 --> 00:20:28,010
looking to crawl the internet looking

00:20:25,400 --> 00:20:30,530
for what websites are involved encrypted

00:20:28,010 --> 00:20:32,090
jacking and that sort of thing it didn't

00:20:30,530 --> 00:20:34,130
go very well because there's a lot a lot

00:20:32,090 --> 00:20:36,320
of roadblocks but what I was able to do

00:20:34,130 --> 00:20:37,970
is identify using my automated analysis

00:20:36,320 --> 00:20:40,160
identify 212 websites in Walled

00:20:37,970 --> 00:20:42,680
encrypted jacking and what I wanted to

00:20:40,160 --> 00:20:44,300
do is resolve these categories resolve

00:20:42,680 --> 00:20:46,460
these websites to category see what kind

00:20:44,300 --> 00:20:48,140
of categories are involved more likely

00:20:46,460 --> 00:20:49,910
to get in Walled encrypted jackin so if

00:20:48,140 --> 00:20:51,800
you visit a website and it's crypto

00:20:49,910 --> 00:20:54,080
jackin is it a pornographic website or

00:20:51,800 --> 00:20:56,270
you know is it a is it already serving

00:20:54,080 --> 00:20:58,370
other kinds of malware or what kind of

00:20:56,270 --> 00:21:00,940
website is that so for that i used for

00:20:58,370 --> 00:21:03,620
40 guard has 40 guard web filter

00:21:00,940 --> 00:21:07,430
categorizes websites in several

00:21:03,620 --> 00:21:09,590
categories like you know pornography and

00:21:07,430 --> 00:21:12,560
you see the examples in that little

00:21:09,590 --> 00:21:14,690
chart i'm showing so so what it does is

00:21:12,560 --> 00:21:16,970
curies so that little python script on

00:21:14,690 --> 00:21:19,460
the right it Curie's the 40 guard server

00:21:16,970 --> 00:21:20,870
for a particular websites once I've

00:21:19,460 --> 00:21:22,700
determined that this website is cryptid

00:21:20,870 --> 00:21:24,740
jacking then I resolve it to a

00:21:22,700 --> 00:21:27,140
particular category and then see how

00:21:24,740 --> 00:21:29,810
many we can find you know a lot a lot of

00:21:27,140 --> 00:21:32,600
them in already are malicious websites a

00:21:29,810 --> 00:21:35,450
lot of them are pornography websites and

00:21:32,600 --> 00:21:36,590
that sort of thing but there's a lot of

00:21:35,450 --> 00:21:38,810
problems like I said during this

00:21:36,590 --> 00:21:40,910
analysis because you how do you crawl

00:21:38,810 --> 00:21:43,420
the web that's a big task so for that

00:21:40,910 --> 00:21:46,370
what I did was I utilized public.www

00:21:43,420 --> 00:21:48,320
nerdy data senses they've already got

00:21:46,370 --> 00:21:49,550
caches maintained where they because

00:21:48,320 --> 00:21:52,660
they already have crawlers that are

00:21:49,550 --> 00:21:54,800
crawling the the internet looking for

00:21:52,660 --> 00:21:56,720
webpages and they're looking at web

00:21:54,800 --> 00:21:57,620
pages and their source codes so if you

00:21:56,720 --> 00:21:58,970
just Curie their cache

00:21:57,620 --> 00:22:00,170
you don't have to write it on crawler

00:21:58,970 --> 00:22:03,200
which was take which would take forever

00:22:00,170 --> 00:22:05,420
so okay we can kind of get away with

00:22:03,200 --> 00:22:06,920
doing that but how how do we determine

00:22:05,420 --> 00:22:09,940
the unauthorized part doing this

00:22:06,920 --> 00:22:13,130
automated automated analysis right

00:22:09,940 --> 00:22:15,800
because there's legitimate uses of

00:22:13,130 --> 00:22:17,800
cryptocurrency mining on a webpage for

00:22:15,800 --> 00:22:20,510
example there's an example of a website

00:22:17,800 --> 00:22:22,850
where they're asking to donate to

00:22:20,510 --> 00:22:24,710
charity by clicking on you know Stark

00:22:22,850 --> 00:22:26,720
mining and then staying on that page and

00:22:24,710 --> 00:22:29,000
you can then donate money to charity

00:22:26,720 --> 00:22:30,920
that way so we obviously don't want to

00:22:29,000 --> 00:22:32,179
include that on the cryptid jacking so

00:22:30,920 --> 00:22:34,400
how do we determine the unauthorized

00:22:32,179 --> 00:22:36,440
part that requires manual analysis to

00:22:34,400 --> 00:22:38,120
see if they're seeking permission from

00:22:36,440 --> 00:22:40,880
the user somewhere so that makes it more

00:22:38,120 --> 00:22:42,650
complicated so then how do we validate

00:22:40,880 --> 00:22:45,050
the results some websites are now and

00:22:42,650 --> 00:22:47,330
available so you can some websites have

00:22:45,050 --> 00:22:49,010
cleaned their source code so an

00:22:47,330 --> 00:22:50,360
obfuscation how do we get around code

00:22:49,010 --> 00:22:52,070
obfuscation like I showed that eval

00:22:50,360 --> 00:22:53,780
statement so if you're just looking for

00:22:52,070 --> 00:22:55,700
coin hive or crypto loot scripts or

00:22:53,780 --> 00:22:57,800
things like that then you know if

00:22:55,700 --> 00:22:59,210
they've got a they've got a clever eval

00:22:57,800 --> 00:23:00,740
statement over there then it doesn't

00:22:59,210 --> 00:23:02,750
work that way so maybe there's another

00:23:00,740 --> 00:23:06,410
better way of doing this that you know

00:23:02,750 --> 00:23:10,970
you guys can figure out so you know in

00:23:06,410 --> 00:23:13,190
in conclusion there's probably better

00:23:10,970 --> 00:23:16,070
ways to discover crypto jacking websites

00:23:13,190 --> 00:23:18,440
on the on the Internet this is not

00:23:16,070 --> 00:23:20,900
really my area to write you know a lot

00:23:18,440 --> 00:23:22,460
of web crawling scripts and you know

00:23:20,900 --> 00:23:24,020
determining maybe there's a better way

00:23:22,460 --> 00:23:27,140
that you guys can think of and talk to

00:23:24,020 --> 00:23:29,179
me about of doing this and you know

00:23:27,140 --> 00:23:30,679
maybe we can protect our users better so

00:23:29,179 --> 00:23:32,480
you know some people are coming with

00:23:30,679 --> 00:23:33,880
coming up with browser based extensions

00:23:32,480 --> 00:23:37,160
that automatically block all

00:23:33,880 --> 00:23:39,710
cryptocurrency mining and but they don't

00:23:37,160 --> 00:23:42,320
always work so there's maybe you know

00:23:39,710 --> 00:23:43,820
some room there for improvement and we

00:23:42,320 --> 00:23:45,500
have to stay a step ahead of the

00:23:43,820 --> 00:23:46,730
attackers because that's what we do in

00:23:45,500 --> 00:23:50,090
the security industry is the constant

00:23:46,730 --> 00:23:52,429
cat-and-mouse game and so we have to

00:23:50,090 --> 00:23:53,840
determine like this windows script using

00:23:52,429 --> 00:23:55,880
the windows script host to execute a

00:23:53,840 --> 00:23:57,800
JavaScript based malware is something we

00:23:55,880 --> 00:23:59,179
did not really see coming so what are

00:23:57,800 --> 00:24:00,710
the other possibilities where they can

00:23:59,179 --> 00:24:02,150
use you know JavaScript for malicious

00:24:00,710 --> 00:24:03,470
purposes because if we can figure that

00:24:02,150 --> 00:24:05,480
out ahead of time then we can maybe

00:24:03,470 --> 00:24:10,070
think about you know working around that

00:24:05,480 --> 00:24:10,720
so and like I said before the cleverer

00:24:10,070 --> 00:24:12,490
ransom

00:24:10,720 --> 00:24:14,830
we're encrypted jackin attacks or the

00:24:12,490 --> 00:24:17,110
future where they won't mind hundred

00:24:14,830 --> 00:24:20,350
percent you know 100 percent of your CPU

00:24:17,110 --> 00:24:21,820
they'll be more subtle and sometimes

00:24:20,350 --> 00:24:25,600
we've seen instances where what they do

00:24:21,820 --> 00:24:27,820
is they open up a so when you go to a

00:24:25,600 --> 00:24:30,429
particular website and they're cryptic

00:24:27,820 --> 00:24:32,350
jackin you they open us a window in the

00:24:30,429 --> 00:24:34,720
background and then they make it really

00:24:32,350 --> 00:24:36,789
small and they hide it under the under

00:24:34,720 --> 00:24:39,940
the taskbar next to the next to the

00:24:36,789 --> 00:24:43,150
clock and and so even if you close the

00:24:39,940 --> 00:24:45,100
original webpage or used that other

00:24:43,150 --> 00:24:47,350
webpage is still open and continuously

00:24:45,100 --> 00:24:48,190
mining and you never notice it so until

00:24:47,350 --> 00:24:50,409
the next time you shut down your

00:24:48,190 --> 00:24:52,210
computer that's mining for them so

00:24:50,409 --> 00:24:54,640
they're getting more cleverer by the day

00:24:52,210 --> 00:24:57,280
so we want us to stay a step ahead of

00:24:54,640 --> 00:24:59,230
them so yeah if you've got any ideas you

00:24:57,280 --> 00:25:01,270
know please get in touch and this is

00:24:59,230 --> 00:25:04,419
just a quick introduction to you know

00:25:01,270 --> 00:25:06,130
two big problems and and I would love to

00:25:04,419 --> 00:25:08,460
talk to you more about that so thank you

00:25:06,130 --> 00:25:08,460

YouTube URL: https://www.youtube.com/watch?v=aoCRE0WoFx8


