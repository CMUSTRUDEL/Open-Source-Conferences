Title: CSSconf EU 2018 | Trent Willis: It’s Dangerous To Go Alone! Take This Team
Publication date: 2018-06-02
Playlist: CSSconf EU 2018
Description: 
	What makes a team successful? Innovative? Great?

As software developers, many of us spend a fair amount of time working alone behind our computers, but when we come together as a team we can build truly great products for people. So how do we build effective teams?

In this talk at CSSconf EU 2018, Trent Willis explores the concept of “safe” teams and how they enable us to build and design software faster and with more innovation than other teams. We’ll see how these concepts apply not just to our day jobs but also to the larger Open Source and CSS communities to which we belong.

CSSconf EU will be back on May 31st 2019: https://2019.cssconf.eu/
Captions: 
	00:00:05,580 --> 00:00:07,580
Good morning, everyone.

00:00:07,580 --> 00:00:12,330
I want to start today with a question: how many of you - raise your hand - would consider

00:00:12,330 --> 00:00:16,020
software development a dangerous activity?

00:00:16,020 --> 00:00:19,279
Okay, not that many of you.

00:00:19,279 --> 00:00:25,800
How many would consider an activity that involves hostile or bad relationships, mental or physical

00:00:25,800 --> 00:00:31,390
stress, and something called a "death march", how much of you would describe that as dangerous?

00:00:31,390 --> 00:00:33,050
Okay.

00:00:33,050 --> 00:00:34,050
A good number more.

00:00:34,050 --> 00:00:37,840
Now, what if I told you that software development had all those risks and even more?

00:00:37,840 --> 00:00:41,510
Probably wouldn't take me that long to convince you because many of you can probably relate

00:00:41,510 --> 00:00:43,440
in some way or another.

00:00:43,440 --> 00:00:47,900
In talking with developers all over the world, I found there are a lot of small risks in

00:00:47,900 --> 00:00:54,829
what we do, whether it's poor working conditions, or horrendously managed projects, or even

00:00:54,829 --> 00:00:57,050
just abusive managers and bad team-mates.

00:00:57,050 --> 00:01:00,870
There are a lot of tiny risks in what we do as our job.

00:01:00,870 --> 00:01:05,759
And so, because of that, I say software engineering is dangerous.

00:01:05,759 --> 00:01:08,600
Just not dangerous in the way that you might expect it to be.

00:01:08,600 --> 00:01:14,240
Even when we have good salaries, nice offices, comfy jobs, basically, there are still - there's

00:01:14,240 --> 00:01:16,310
still a lot of risk in what we do.

00:01:16,310 --> 00:01:19,520
There is in every field across the world.

00:01:19,520 --> 00:01:22,479
But our feel is focused on creativity, right?

00:01:22,479 --> 00:01:27,649
And problem-solving, and really approaching unique and new challenges.

00:01:27,649 --> 00:01:31,670
Unfortunately, it's not so focused on how we interact with one another, how we take

00:01:31,670 --> 00:01:36,709
care of ourselves, and how we build our teams.

00:01:36,709 --> 00:01:41,270
So this is a combination that easily and unfortunately leads us to a lot of stress, right?

00:01:41,270 --> 00:01:45,869
It can lead to physical mental illness, and burn-out.

00:01:45,869 --> 00:01:49,499
We see people leave our industry all the time because of issues like these.

00:01:49,499 --> 00:01:52,619
Is to so we can't do it alone.

00:01:52,619 --> 00:01:54,200
We need a team, right?

00:01:54,200 --> 00:01:59,219
Not just any team, but a team that will support us, to take that dangerous environment we

00:01:59,219 --> 00:02:03,689
work in and turn it into a safe one.

00:02:03,689 --> 00:02:05,920
What does that team look like?

00:02:05,920 --> 00:02:11,040
What kind of traits should we be looking for in a team and ourselves?

00:02:11,040 --> 00:02:13,550
How do we build effective successful teams?

00:02:13,550 --> 00:02:16,460
That's why I want to talk - that's what I want to talk about this morning.

00:02:16,460 --> 00:02:20,170
I think it is a great way to kick off this conference as we talk about a lot of the cutting-edge

00:02:20,170 --> 00:02:24,960
things that are happening in the CSS community.

00:02:24,960 --> 00:02:28,830
My name is Trent Willis, currently a senior UI engineer at Netflix.

00:02:28,830 --> 00:02:29,960
I love my job.

00:02:29,960 --> 00:02:30,960
I think it's wonderful.

00:02:30,960 --> 00:02:36,710
I get a ton of freedom, work on things that interest me, and, most importantly, they give

00:02:36,710 --> 00:02:37,710
me free food!

00:02:37,710 --> 00:02:41,070
So what is not to like about that, right?

00:02:41,070 --> 00:02:46,110
What are the primary reasons that I really, really enjoy the team that I work on it's

00:02:46,110 --> 00:02:49,340
because what I would consider a safe team.

00:02:49,340 --> 00:02:54,610
It's this relatively ambiguous idea of a safe team that I want to talk about today because

00:02:54,610 --> 00:02:58,320
I would argue that many of us don't actually work on a teem like this.

00:02:58,320 --> 00:03:03,070
You might say, "Trent, what are you talking about?

00:03:03,070 --> 00:03:06,860
It's not like I fear going to the office of course my team is safe."

00:03:06,860 --> 00:03:09,630
That's not the takeaway safety I'm actually referring to.

00:03:09,630 --> 00:03:15,090
I'm talking about safety in a more interpersonal sense, a sense that you can fully and completely

00:03:15,090 --> 00:03:18,200
engage with your team and with your work.

00:03:18,200 --> 00:03:23,180
A sense that you can challenge the status quo if you need to, you can suggest new potentially

00:03:23,180 --> 00:03:24,940
controversial ideas.

00:03:24,940 --> 00:03:30,340
At the very least, you should be able to let your team know when something about your job,

00:03:30,340 --> 00:03:36,210
or your work, sucks, and you're not having fun and you're not enjoying it.

00:03:36,210 --> 00:03:41,060
As I mentioned earlier, many of us don't find ourselves in situations like that often.

00:03:41,060 --> 00:03:46,950
Late last year, there was a well-known management company in the United States called Gallup,

00:03:46,950 --> 00:03:53,400
and they did some research that showed that only three out of ten workers actually believed

00:03:53,400 --> 00:03:57,950
or could strongly agree that their opinion mattered at work.

00:03:57,950 --> 00:03:59,010
Three out of ten.

00:03:59,010 --> 00:04:01,650
That's an insanely low number, in my opinion.

00:04:01,650 --> 00:04:08,250
At best, that means we have 70 per cent quieter offices, but at worst, means we are missing

00:04:08,250 --> 00:04:14,540
out of 70 per cent of ideas that could be changing our team, and community, and potentially

00:04:14,540 --> 00:04:18,430
the world for the better through the use of what we develop.

00:04:18,430 --> 00:04:20,340
You might be lucky.

00:04:20,340 --> 00:04:24,690
Make you consider yourself one of those three in ten workers who actually feels their opinion

00:04:24,690 --> 00:04:28,500
really matters, and, if so, that's wonderful, and I'm happy for you.

00:04:28,500 --> 00:04:32,610
But it's in your best interest, actually, to be striving to build that type of environment

00:04:32,610 --> 00:04:33,970
for everyone else on your team as well.

00:04:33,970 --> 00:04:41,090
Gall aluminium found that - Gallup found that if you could increase it to six out of ten,

00:04:41,090 --> 00:04:46,720
you saw a bunch of benefits such as fewer team members leaving, fewer incidents occurring,

00:04:46,720 --> 00:04:48,060
and an increase in productivity.

00:04:48,060 --> 00:04:53,870
I don't know about you been but that sounds like a win across the board for everyone for

00:04:53,870 --> 00:04:54,870
me.

00:04:54,870 --> 00:04:55,870
Sign me up for that.

00:04:55,870 --> 00:05:01,100
But with all this in mind, the question still remains: how do we actually do that?

00:05:01,100 --> 00:05:02,840
How do we build a team like this?

00:05:02,840 --> 00:05:07,790
Today, I have three short stories that I want to share that will hopefully provide a framework

00:05:07,790 --> 00:05:14,190
for us to start thinking about what a team like this might look like.

00:05:14,190 --> 00:05:17,900
So my first software development job, we practised code reviews.

00:05:17,900 --> 00:05:24,560
Being a super junior developer at the time, my contributions were often heavily scrutinised.

00:05:24,560 --> 00:05:25,750
Which was totally fair.

00:05:25,750 --> 00:05:30,080
I was very bad at the time and I learned a lot from this process.

00:05:30,080 --> 00:05:34,120
But, unfortunately, each code review could take days.

00:05:34,120 --> 00:05:40,770
It meant that, even for tiny changes, it would take multiple days to land it into our codebase.

00:05:40,770 --> 00:05:43,840
After this happened for a long time, I started to get really frustrated, right?

00:05:43,840 --> 00:05:47,870
I didn't feel my contributions were a value for the team so they didn't seem like a priority

00:05:47,870 --> 00:05:51,950
for anyone else.

00:05:51,950 --> 00:05:57,000
I started to work more slowly, slacked off more, and the result was that no-one really

00:05:57,000 --> 00:06:00,060
noticed.

00:06:00,060 --> 00:06:04,410
And so the lesson I took from this was that this team wasn't safe for me from feeling

00:06:04,410 --> 00:06:09,260
worthless, for feeling that my work didn't have meaning, that I was kind of there as

00:06:09,260 --> 00:06:12,590
another body.

00:06:12,590 --> 00:06:16,580
The result was poor productivity and lack of engagement with the office.

00:06:16,580 --> 00:06:17,820
And the work that I was doing.

00:06:17,820 --> 00:06:22,930
Now, in this story, it would be really easy to say that the root issue here, the root

00:06:22,930 --> 00:06:27,320
cause, the thing that we should be focusing on fixing was the code-review process, and

00:06:27,320 --> 00:06:29,330
that it was flawed.

00:06:29,330 --> 00:06:33,220
That may not necessarily be the wrong, but I don't think it was the root problem.

00:06:33,220 --> 00:06:37,360
Oftentimes, when things go wrong, we want to point to something that's really easy to

00:06:37,360 --> 00:06:38,360
fix.

00:06:38,360 --> 00:06:43,490
So, what happens, is we often fix a bunch of symptoms, and we wind up with a whole lot

00:06:43,490 --> 00:06:49,930
of processes, rules, and guidelines, but root frustrations for our developers and for our

00:06:49,930 --> 00:06:52,990
team are often still there.

00:06:52,990 --> 00:06:56,389
When it comes to building a great team, we need to make sure we're fixing those deep

00:06:56,389 --> 00:06:59,949
problems, those root frustrations.

00:06:59,949 --> 00:07:04,270
We could have fixed the speed probably of the code reviews by mandating that every code

00:07:04,270 --> 00:07:08,270
review be done in a certain amount of time, and we could have written code and bots to

00:07:08,270 --> 00:07:10,139
help enforce the time limits.

00:07:10,139 --> 00:07:13,020
What would have happened?

00:07:13,020 --> 00:07:16,590
Myself and other junior developers on the team probably would have felt we were being

00:07:16,590 --> 00:07:19,990
a burden to the senior engineers on the team.

00:07:19,990 --> 00:07:22,900
Because we're now dictating what they are spending their time on, and that's not a healthy

00:07:22,900 --> 00:07:24,979
environment to be in.

00:07:24,979 --> 00:07:30,740
That root frustration of being unsure of my contribution actually mattering was boiling

00:07:30,740 --> 00:07:31,820
under the surface.

00:07:31,820 --> 00:07:38,150
In this story, the real root problem here was my team wasn't good at sharing encouragement

00:07:38,150 --> 00:07:40,020
and positive feedback.

00:07:40,020 --> 00:07:45,320
Now, ironically, to point that out to someone, you have to give them some negative feedback

00:07:45,320 --> 00:07:47,790
but no-one was willing to go that far.

00:07:47,790 --> 00:07:52,780
So, what happened, is I had no signal that the work I was doing was good, but I had a

00:07:52,780 --> 00:07:58,770
pretty strong signal that my contributions weren't that valued.

00:07:58,770 --> 00:08:00,449
The answer here is not more process.

00:08:00,449 --> 00:08:02,180
It rarely is ever is.

00:08:02,180 --> 00:08:10,400
Oftentimes, we can solve technical problems through better process, or improved work flows,

00:08:10,400 --> 00:08:14,210
but rarely does that actually help us with interpersonal problems.

00:08:14,210 --> 00:08:18,949
Instead, we need to focus on fixing these sort of issues, primarily by communicating

00:08:18,949 --> 00:08:22,050
better, communicating carefully.

00:08:22,050 --> 00:08:26,930
Apply some purpose, some empathy to how you communicate with your team.

00:08:26,930 --> 00:08:30,850
Maybe you see a junior developer, and they're struggling with the code-review process.

00:08:30,850 --> 00:08:34,440
So, be sure to add some positive comments.

00:08:34,440 --> 00:08:38,740
Let them know they're doing a good job, even if they are having lots of issues with the

00:08:38,740 --> 00:08:41,190
code they're submitting.

00:08:41,190 --> 00:08:44,870
Or you interact with the team lead and you see they're really stressed out.

00:08:44,870 --> 00:08:49,120
Maybe let them know your request wasn't that urgent, or, if you can, offer to take some

00:08:49,120 --> 00:08:50,370
of their workload off.

00:08:50,370 --> 00:08:56,480
The idea is that our communication, both in our team as well as the larger software engineering

00:08:56,480 --> 00:09:01,930
community we're in, should always have this constant purpose of trying to build a better

00:09:01,930 --> 00:09:03,810
environment.

00:09:03,810 --> 00:09:07,550
One where relationships are solid and people actually feel meaningfully connected to the

00:09:07,550 --> 00:09:09,890
work they're doing.

00:09:09,890 --> 00:09:13,640
Imagine the impact these sorts of things would have on the open-source community, right?

00:09:13,640 --> 00:09:18,510
Maybe new contributors would feel more welcomed and actually want to get involved more.

00:09:18,510 --> 00:09:24,040
Maintainers might not feel so overwhelmed and burn out as frequently.

00:09:24,040 --> 00:09:28,610
This idea of communicating carefully is really just a subset of a larger idea that I want

00:09:28,610 --> 00:09:33,770
to talk about, and that is mindfulness, which is this practice of paying attention in a

00:09:33,770 --> 00:09:36,390
particular way.

00:09:36,390 --> 00:09:40,990
On purpose, in the present moment, and non-judgmentally.

00:09:40,990 --> 00:09:45,410
Purpose ful non-judgmental attention to what is going on around you is var to what I was

00:09:45,410 --> 00:09:48,450
talking, right?

00:09:48,450 --> 00:09:53,310
It's a relatively broad subject.

00:09:53,310 --> 00:09:56,930
But at its core, mindfulness is simply about training yourself to really engage with what

00:09:56,930 --> 00:10:03,760
is going on around you, which is why it's often defined by practices like yoga or meditation,

00:10:03,760 --> 00:10:10,860
structured purposeful activities, but maybe you're like me, I don't know, yoga and meditation

00:10:10,860 --> 00:10:14,430
seem a little new agey and unscientific.

00:10:14,430 --> 00:10:21,620
But there's been an amount of scientific evidence and research coming out, and tons of anecdotal

00:10:21,620 --> 00:10:27,320
evidence that these things tremendously improve your personal life which translates into benefits

00:10:27,320 --> 00:10:29,190
and improvements in your professional life.

00:10:29,190 --> 00:10:35,310
As a brief example, the health care company Aetna started conducting mindfulness training

00:10:35,310 --> 00:10:37,440
with its employees.

00:10:37,440 --> 00:10:42,470
After 13,000 employees took out at least one somethings, they found compelling results:

00:10:42,470 --> 00:10:48,370
a 28 per cent reduction in stress levels and a 20 per cent improvement in their quality

00:10:48,370 --> 00:10:50,200
of sleep.

00:10:50,200 --> 00:10:53,870
I don't know about the rest of you, but there are definitely times when I could use better

00:10:53,870 --> 00:10:56,120
sleep and less stress in my life.

00:10:56,120 --> 00:11:00,850
If doing so is going to benefit the rest of my team, then it's really a pretty compelling

00:11:00,850 --> 00:11:04,790
reason for me at least to give this a shot.

00:11:04,790 --> 00:11:11,200
I would recommend you start with an app called Headspace.

00:11:11,200 --> 00:11:17,610
It lets you try out mindfulness meditation in your own time.

00:11:17,610 --> 00:11:22,030
You can build it into your life on your own time and in your own terms, and, if you don't

00:11:22,030 --> 00:11:27,990
like it, it at least provides a really nice way to start a nap.

00:11:27,990 --> 00:11:36,220
Research has shown that mega mindfulness enables us to be more mindful around other people.

00:11:36,220 --> 00:11:40,550
When you start to be more mindful, it benefits your team, because you engage in more meaningful

00:11:40,550 --> 00:11:41,550
ways.

00:11:41,550 --> 00:11:45,150
We think about what we could be doing all the time instead of focusing on what we are

00:11:45,150 --> 00:11:46,520
doing with our team.

00:11:46,520 --> 00:11:51,850
We put away our phones more, to listen to people when they're actually talking to us.

00:11:51,850 --> 00:11:56,680
We close our laptops during meetings to give presenters our full attention.

00:11:56,680 --> 00:11:57,790
We show more interest.

00:11:57,790 --> 00:12:02,460
We have likely all had interactions where the other person was distracted.

00:12:02,460 --> 00:12:05,390
What that conveys to you is what it being said is not important.

00:12:05,390 --> 00:12:09,950
If it happens repeatedly, you start to internalise these feelings.

00:12:09,950 --> 00:12:14,680
No longer is the thing I'm not talking about is important, it starts to become "I'm not

00:12:14,680 --> 00:12:15,680
important."

00:12:15,680 --> 00:12:21,650
That's dangerous if you want to build a cohesive, collaborative environment.

00:12:21,650 --> 00:12:26,420
Try to be mindful, purposeful, practise empathy when you communicate.

00:12:26,420 --> 00:12:33,040
Applying this to all spheres of software development will make it accessible to everyone.

00:12:33,040 --> 00:12:41,280
Instead of the culture filled with fear and insecurity, fear, in particular, I think is

00:12:41,280 --> 00:12:46,120
a really compelling reason for us to strive towards building safe teams, because fear

00:12:46,120 --> 00:12:53,620
is a huge enemy of innovation in creativity which brings me to my next story.

00:12:53,620 --> 00:12:59,260
So my second job, I got to work on an important piece of infrastructure for a very large application.

00:12:59,260 --> 00:13:04,250
Now, still relatively junior at the time so I solicited advice from senior engineers and

00:13:04,250 --> 00:13:07,720
even design committees before deciding to move forward.

00:13:07,720 --> 00:13:11,490
When we moved forward, I was super proud of my work.

00:13:11,490 --> 00:13:15,930
These people I respected, these senior engineers, had said this seems like a good idea, and

00:13:15,930 --> 00:13:18,269
that was wonderful.

00:13:18,269 --> 00:13:21,630
But when performance-review came around, it was a different story.

00:13:21,630 --> 00:13:24,510
There were problems with the project.

00:13:24,510 --> 00:13:28,010
And they were ultimately used as justification not to give me a promotion.

00:13:28,010 --> 00:13:33,399
Now, obviously, that's a huge bummer, but the real frustrating part is they had left

00:13:33,399 --> 00:13:41,670
comments stating that I had acted too independently, that I should have involved more senior engineers.

00:13:41,670 --> 00:13:44,540
But that's what I felt I had done.

00:13:44,540 --> 00:13:49,100
And this experience led me to avoid responsibility in the future.

00:13:49,100 --> 00:13:53,670
I didn't want to take responsibility, be the point person if all the blame for what I felt

00:13:53,670 --> 00:13:56,870
was a team decision was just going to come back on me.

00:13:56,870 --> 00:14:02,230
Eventually, due to that and other reasons, I left the organisation entirely.

00:14:02,230 --> 00:14:07,779
Now, as before, it would be easy to find a solution to this problem, right?

00:14:07,779 --> 00:14:13,399
You might say, "You should have got that promotion" but the promotion is just a distraction.

00:14:13,399 --> 00:14:18,210
The real problem here is that the reality of the work that I was doing wasn't get properly

00:14:18,210 --> 00:14:22,110
communicated to the people that could make decisions about it.

00:14:22,110 --> 00:14:26,240
What that told me is that this team isn't state of safe to take risks on, I had to be

00:14:26,240 --> 00:14:32,050
careful about the work I chose to pursue to make sure that perceptions wouldn't be skewed,

00:14:32,050 --> 00:14:37,980
and that I would be reflected the way that I want people to know me.

00:14:37,980 --> 00:14:41,380
So this problem is known as "impression management".

00:14:41,380 --> 00:14:45,600
Which is this idea that you have to act a certain way to ensure a favourable perception

00:14:45,600 --> 00:14:47,420
of yourself for other people.

00:14:47,420 --> 00:14:50,930
Basically, you need to manipulate them in order to feel safe.

00:14:50,930 --> 00:14:55,020
We see this all the time in small ways.

00:14:55,020 --> 00:14:58,270
Maybe you don't ask that question in your team meeting because you don't want to look

00:14:58,270 --> 00:14:59,270
stupid.

00:14:59,270 --> 00:15:04,200
Or maybe you don't challenge that idea that you think is bad because that might hurt your

00:15:04,200 --> 00:15:06,070
chances of getting a promotion.

00:15:06,070 --> 00:15:11,970
Right, these sorts of behaviours are poison to building good collaborative teams.

00:15:11,970 --> 00:15:14,570
Because everyone's more worried about the impression that they are leaving than they

00:15:14,570 --> 00:15:17,830
are about the actual work that they're doing.

00:15:17,830 --> 00:15:21,450
And that's really at the heart of what is wrong in the story I just shared.

00:15:21,450 --> 00:15:25,880
No longer was I willing to take risks to be responsible because I was concerned about

00:15:25,880 --> 00:15:28,550
the impression I was going to leave.

00:15:28,550 --> 00:15:33,840
This sort of fear leads teams to stagnation, and potentially to ruin.

00:15:33,840 --> 00:15:38,740
And it does it in much the same way as technical debt in your project does.

00:15:38,740 --> 00:15:42,950
When you have lots of tech debt in your project, as I'm sure many of us have experienced, especially

00:15:42,950 --> 00:15:47,800
because we work on CSS, it becomes difficult, or, in some cases, impossible to make any

00:15:47,800 --> 00:15:51,930
sort of major changes, and even small ones become risk which right?

00:15:51,930 --> 00:15:57,579
In the very same way, when you have a culture of impression-management and fear of openly

00:15:57,579 --> 00:16:02,230
sharing ideas with each other, it becomes difficult and in some cases truly impossible

00:16:02,230 --> 00:16:06,610
to enact any sort of lasting change.

00:16:06,610 --> 00:16:08,610
So how do we combat this?

00:16:08,610 --> 00:16:10,540
How do we combat this type of culture?

00:16:10,540 --> 00:16:13,740
We have to strive in the opposite direction.

00:16:13,740 --> 00:16:19,090
To build a culture where you can show up and fully employ yourself in your work, without

00:16:19,090 --> 00:16:23,459
being worried of negative consequences to your self-image, to your status, or even to

00:16:23,459 --> 00:16:25,779
your career.

00:16:25,779 --> 00:16:30,100
This type of environment is known as being a psychologically safe one, and it stands

00:16:30,100 --> 00:16:34,880
in direct contrast to that team where you have to be scared of the impression you're

00:16:34,880 --> 00:16:36,120
leaving.

00:16:36,120 --> 00:16:40,370
Psychologically safe teams feel comfortable, taking interpersonal risks, which are things

00:16:40,370 --> 00:16:46,209
like suggesting new potentially controversial ideas to solving problems.

00:16:46,209 --> 00:16:50,160
Or actually acknowledging and owning up to your failures but then actually learning from

00:16:50,160 --> 00:16:51,160
them.

00:16:51,160 --> 00:16:55,800
They are risks because you could find yourself in a position where you're embarrassed or

00:16:55,800 --> 00:17:01,730
maybe even punished for your actions by your team.

00:17:01,730 --> 00:17:05,350
The sort of team where you can take these risks give everyone a chance to contribute

00:17:05,350 --> 00:17:06,760
their voice to discussion.

00:17:06,760 --> 00:17:14,860
Right, their cognizant of how they are interacting with each other.

00:17:14,860 --> 00:17:21,651
Major players have shown that these teams learn more quickly, more innovative, and they

00:17:21,651 --> 00:17:25,120
perform better overall.

00:17:25,120 --> 00:17:27,150
How do we develop this?

00:17:27,150 --> 00:17:32,960
How do we get to a place where we are comfortable taking interpersonal risks with each other?

00:17:32,960 --> 00:17:37,610
The short answer is you have to start by experimenting and learning rapidly.

00:17:37,610 --> 00:17:42,940
I like to this about interpersonal risks, like software deployments.

00:17:42,940 --> 00:17:47,160
If you have an effective continuous deployment set up, then the impact of any one bad commit

00:17:47,160 --> 00:17:49,299
that goes out is usually small, right?

00:17:49,299 --> 00:17:53,540
If an issue occurs, you get feedback about it real quick, you make corrections, and you

00:17:53,540 --> 00:17:54,710
deploy again.

00:17:54,710 --> 00:18:00,750
And, in a similar fashion, your team should have a methodology of continuously learning.

00:18:00,750 --> 00:18:06,770
If someone makes a mistake, give them quick and timely feedback, you made corrections

00:18:06,770 --> 00:18:08,350
as needed, and you move forward.

00:18:08,350 --> 00:18:13,510
You don't dwell on issues unnecessarily, and you don't safe feedback for a later dated.

00:18:13,510 --> 00:18:19,920
Otherwise, that just begets a culture of score keeping where everyone is unsure who is tracking

00:18:19,920 --> 00:18:24,070
their every move.

00:18:24,070 --> 00:18:27,910
As soon as I noticed there was a problem, we could have dealt with it a lot more effectively,

00:18:27,910 --> 00:18:28,910
right?

00:18:28,910 --> 00:18:30,510
We could have learned from it.

00:18:30,510 --> 00:18:36,150
Instead, I only received the feedback as I was being denied a promotion.

00:18:36,150 --> 00:18:41,040
That doesn't communicate there's an opportunity learned, and it doesn't communicate that the

00:18:41,040 --> 00:18:45,020
safety and taking risks on your projects.

00:18:45,020 --> 00:18:50,660
All that it really communicates is there are personalities for the actions that you have.

00:18:50,660 --> 00:18:53,860
Critical point is you have to give feedback.

00:18:53,860 --> 00:18:58,490
Feedback helps us build trust, and it lets us avoid additional process, and it develops

00:18:58,490 --> 00:19:02,270
better working relationships between the people that are involved in it.

00:19:02,270 --> 00:19:06,570
And we can use those pieces to help us inform our future decisions.

00:19:06,570 --> 00:19:12,230
To learn faster, and be better as individuals, as a team, and as a whole community.

00:19:12,230 --> 00:19:14,070
So, give feedback.

00:19:14,070 --> 00:19:18,870
Give it early, give it transparently, and give it often to each other.

00:19:18,870 --> 00:19:23,130
Learn rapidly from your failures, don't be afraid of.

00:19:23,130 --> 00:19:28,950
You have to be courageous to step out and build this culture in your workplace.

00:19:28,950 --> 00:19:31,890
One last point to hit on in this realm of taking risks.

00:19:31,890 --> 00:19:34,179
How do you generate effective feedback?

00:19:34,179 --> 00:19:40,570
As we've seen, it is easy to over simplify solutions to problems or identify the wrong

00:19:40,570 --> 00:19:41,570
problem.

00:19:41,570 --> 00:19:45,500
I'm a fan of this model.

00:19:45,500 --> 00:19:51,890
When you're repeat - presented with a problem, you ask why did this happen until you reach

00:19:51,890 --> 00:19:56,140
a root cause that you should fix.

00:19:56,140 --> 00:20:01,360
Let's consider the scenario where I push some broken CSS to production.

00:20:01,360 --> 00:20:07,059
Maybe our site looks like this.

00:20:07,059 --> 00:20:09,960
My product manager comes over and says, "Why does the site look weird?"

00:20:09,960 --> 00:20:14,630
Well, I pushed some bad CSS.

00:20:14,630 --> 00:20:16,770
Why did you push bad CSS?

00:20:16,770 --> 00:20:21,070
Well, we didn't test it thoroughly.

00:20:21,070 --> 00:20:22,980
Why didn't we test it thoroughly?

00:20:22,980 --> 00:20:27,170
Well, we needed to ship to hit the deadline.

00:20:27,170 --> 00:20:30,162
Why didn't the deadline time to properly QA it and test it?

00:20:30,162 --> 00:20:34,429
We didn't include it in the estimate.

00:20:34,429 --> 00:20:36,970
Why didn't we include it in the estimate?

00:20:36,970 --> 00:20:41,630
Well, we didn't consider it to be part of delivering the feature.

00:20:41,630 --> 00:20:44,059
Maybe we should change that.

00:20:44,059 --> 00:20:48,820
Right, if we had stopped off the first question here, all the blame would have been placed

00:20:48,820 --> 00:20:53,500
on my shoulders, and we would have been done with it.

00:20:53,500 --> 00:20:56,750
And that leaves the developers feeling unsafe in their position, and that's often what we

00:20:56,750 --> 00:21:02,220
do unfortunately, because we want the easy fix, the quick fix.

00:21:02,220 --> 00:21:07,860
So the five whys approach here has this direct benefit of letting you identify deep issues

00:21:07,860 --> 00:21:10,890
in your culture the way you approach working.

00:21:10,890 --> 00:21:16,550
But it also lets you build a safe team where people can take smart risks.

00:21:16,550 --> 00:21:20,720
Because mistakes get treated as gaps in your tooling, or your training, or your technology,

00:21:20,720 --> 00:21:23,820
not necessarily as personal failures.

00:21:23,820 --> 00:21:26,289
Which makes it safe for you to take those smart risks.

00:21:26,289 --> 00:21:30,290
There are two quotes that really hammer home this point.

00:21:30,290 --> 00:21:34,920
The first is that you must never place a worker only one defence away from failure.

00:21:34,920 --> 00:21:38,610
And the reason for this is because people aren't really afraid of failure, they're afraid

00:21:38,610 --> 00:21:40,220
of being blamed.

00:21:40,220 --> 00:21:44,880
We're all going to fail at some point - it's human nature.

00:21:44,880 --> 00:21:50,250
Some of us, such as myself, might fail multiple times.

00:21:50,250 --> 00:21:52,120
Accidents and mistakes happen.

00:21:52,120 --> 00:21:58,620
If you spend every moment of your life doing that, you won't do anything super noteworthy.

00:21:58,620 --> 00:22:05,820
That's why psychological safety is so important for us involved in a creative, technological

00:22:05,820 --> 00:22:13,110
industry, because it lets us take risks with the technology, with the tools that we are

00:22:13,110 --> 00:22:15,100
using.

00:22:15,100 --> 00:22:19,960
Psychological safety is vital for us to avoid stagnation to innovate.

00:22:19,960 --> 00:22:25,299
Having a safe team makes it easier for you to do frameworks, try out new programming

00:22:25,299 --> 00:22:28,260
paradigms that we will hear about today.

00:22:28,260 --> 00:22:48,820
And best practice was also

00:22:48,820 --> 00:22:56,039
we have today.

00:22:56,039 --> 00:23:00,390
... quickly leading to burnout which brings me so satisfy final story here.

00:23:00,390 --> 00:23:08,350
I had a senior title of being a developer, and it seemed like a wonderful role.

00:23:08,350 --> 00:23:13,590
I was really excited about it.

00:23:13,590 --> 00:23:23,570
When work started to pile up, there was no-one I could really talk to about it.

00:23:23,570 --> 00:23:31,600
I am not sure a environment and I like to complain about things!

00:23:31,600 --> 00:23:32,850
I started to feel burned out.

00:23:32,850 --> 00:23:34,360
I wanted to quit.

00:23:34,360 --> 00:23:40,400
I get it's the dream of many developers to work independently and autonomously on projects

00:23:40,400 --> 00:23:42,070
that interest you.

00:23:42,070 --> 00:23:44,700
But as I've experienced first hand, there's a lot of risk in doing this.

00:23:44,700 --> 00:23:49,049
If you don't have a good support system in place, then it's really easy for independence

00:23:49,049 --> 00:23:50,990
to feel like isolation.

00:23:50,990 --> 00:23:54,809
When work begins to pile up, you're going to feel like your shouldering this gigantic

00:23:54,809 --> 00:23:57,549
burden all on your own.

00:23:57,549 --> 00:24:03,710
You can't just slug that off or ignore it - shrug that off or ignore it.

00:24:03,710 --> 00:24:09,690
We get stressed out by work but we feel it's the amount of work that's causing the stress.

00:24:09,690 --> 00:24:14,820
Because we are smart and we think we're efficiently developers, we just work harder.

00:24:14,820 --> 00:24:19,270
We do more work, and we build more stress, thinking that it's actually paying it down,

00:24:19,270 --> 00:24:20,980
but it doesn't.

00:24:20,980 --> 00:24:25,130
So this cycle will continue until eventually you burn out and crash or someone close to

00:24:25,130 --> 00:24:28,590
you recognises it and points it out to you.

00:24:28,590 --> 00:24:34,559
So the issue of my story was a lack of transparency into what was going on and not noticing the

00:24:34,559 --> 00:24:40,650
trend that was going on in my life, and my team was also unaware.

00:24:40,650 --> 00:24:45,520
Before moving into talking about how we prevent this, I want to hit on what burnout and work

00:24:45,520 --> 00:24:50,270
fatigue mean for those of us in this industry.

00:24:50,270 --> 00:24:54,100
We talk about those terms a lot, and I think they've lost some meaning for some folks.

00:24:54,100 --> 00:25:00,179
Burn-out is a serious issue, a state of chronic stress that leads you to physical and emotional

00:25:00,179 --> 00:25:05,090
exhaustion, and it makes you cynical and detached, not just in your work but in everything in

00:25:05,090 --> 00:25:06,090
your life.

00:25:06,090 --> 00:25:13,410
It will make you feel ineffective, unaccomplished, despite any evidence you might see to the

00:25:13,410 --> 00:25:15,059
contrary.

00:25:15,059 --> 00:25:19,500
You likely won't recognise it until it gets really bad.

00:25:19,500 --> 00:25:23,170
As software developers, as those of us in this industry, we are susceptible to this

00:25:23,170 --> 00:25:25,990
sort of ailment because we are hyper connected.

00:25:25,990 --> 00:25:28,960
It's easy for us to stay connected to our work all the time.

00:25:28,960 --> 00:25:34,650
So as a creative pursuit, we often feel a personal attachment, maybe even obligation

00:25:34,650 --> 00:25:36,809
to our work.

00:25:36,809 --> 00:25:38,200
Since many of us are passionate.

00:25:38,200 --> 00:25:43,340
It, we write code in our spare time that contributes even more.

00:25:43,340 --> 00:25:46,820
As I mentioned earlier, our industry is constantly evolving, and you have to be constantly learning

00:25:46,820 --> 00:25:49,330
and that's a lot of pressure.

00:25:49,330 --> 00:25:50,330
What do we do?

00:25:50,330 --> 00:25:53,630
How do we combat this when it feels like the deck is stacked against us?

00:25:53,630 --> 00:25:58,280
I actually believe the answer from a team perspective is the combination of the two

00:25:58,280 --> 00:26:01,220
traits: psychological safety and mindfulness.

00:26:01,220 --> 00:26:07,220
They form a virtues cycle that combats that vicious cycle I mentioned early.

00:26:07,220 --> 00:26:11,040
That idea might be a bit abstract, so let's talk about some simple examples that you can

00:26:11,040 --> 00:26:13,120
try out.

00:26:13,120 --> 00:26:18,830
First idea: non-judgmentally track participation from the rest of your team.

00:26:18,830 --> 00:26:24,090
Make mental or physical notes, even, of who is engaging in your meetings, and who isn't.

00:26:24,090 --> 00:26:25,950
Who seems to be engaged with the team and who is not?

00:26:25,950 --> 00:26:28,460
Who is speaking up?

00:26:28,460 --> 00:26:34,049
This forces you to be present, to be mindful of what is going on in your team.

00:26:34,049 --> 00:26:37,230
When you recognise that someone isn't engaged, you can follow up with them which will help

00:26:37,230 --> 00:26:43,159
them feel valued and feel like they're actually part of a team.

00:26:43,159 --> 00:26:48,230
Another easy idea is to simply incorporate and acknowledge what other people are saying.

00:26:48,230 --> 00:26:52,240
This doesn't mean repeat what they said word-for-word but try to incorporate aspects of what they

00:26:52,240 --> 00:26:57,130
say in your responses, maybe something like, "Sue had a really great idea the other day,

00:26:57,130 --> 00:27:00,860
and we should make sure we incorporate that."

00:27:00,860 --> 00:27:04,260
This forces you to be present and mindful of what going on.

00:27:04,260 --> 00:27:07,530
It allows your co-workers to feel heard and valued.

00:27:07,530 --> 00:27:12,659
Now, these little tricks don't seem like of but they can have a profound impact on your

00:27:12,659 --> 00:27:15,770
team's dynamics over the long haul.

00:27:15,770 --> 00:27:19,799
In addition to these, we need to ensure we are focusing on taking care of ourselves as

00:27:19,799 --> 00:27:20,799
well.

00:27:20,799 --> 00:27:25,130
To that, I want to talk about this idea of emotional fitness which is simply the idea

00:27:25,130 --> 00:27:28,940
that your emotional and mental health needs to be looked after in much the same way as

00:27:28,940 --> 00:27:30,460
your physical health does.

00:27:30,460 --> 00:27:34,820
You can't doing the and expect to be emotionally strong.

00:27:34,820 --> 00:27:37,320
This impacts your whole life, including your team at work.

00:27:37,320 --> 00:27:40,210
Think about the last time you got stressed out.

00:27:40,210 --> 00:27:41,640
Did you withdraw from your work?

00:27:41,640 --> 00:27:44,730
Maybe the last time I threw you a curve ball.

00:27:44,730 --> 00:27:49,950
Did you handle it in a way that you were proud of or, like me, maybe, did you start getting

00:27:49,950 --> 00:27:53,160
frustrated more easily and lash out at your co-workers on occasion?

00:27:53,160 --> 00:27:57,299
These are the sort of things that show whether we are emotionally fit or not, and a lot of

00:27:57,299 --> 00:28:00,860
us - myself included - need a lot of improvement.

00:28:00,860 --> 00:28:02,270
How do we become emotionally fit?

00:28:02,270 --> 00:28:09,460
I would recommend that you look at at all times from Dr Emily Arnhalt.

00:28:09,460 --> 00:28:15,299
I want to recommend one easy thing that you can do: simply find a couple of hours a week

00:28:15,299 --> 00:28:16,299
to play.

00:28:16,299 --> 00:28:20,590
What I mean by play is engage in something purely for enjoyment rather than a practical

00:28:20,590 --> 00:28:21,590
purpose.

00:28:21,590 --> 00:28:24,070
Maybe put together a puzzle with a loved one.

00:28:24,070 --> 00:28:26,809
Start writing that fan fic finally.

00:28:26,809 --> 00:28:29,320
Or pick up another hobby.

00:28:29,320 --> 00:28:32,360
Probably step away from the computer for a little while.

00:28:32,360 --> 00:28:37,940
It is easy for us to think we are relaxing when we're still working in some capacity.

00:28:37,940 --> 00:28:42,170
Which is why I said we need to play, and not that we need to relax.

00:28:42,170 --> 00:28:47,980
Playing has been found to reduce stress, builds better relationships between those involved

00:28:47,980 --> 00:28:51,450
in it and enables you to respond better when things go wrong.

00:28:51,450 --> 00:28:56,730
If you're not sure if you're engaged in a playful activity, there's a simple litmus

00:28:56,730 --> 00:28:59,350
west that you can use.

00:28:59,350 --> 00:29:03,539
Inspired by a member of the boy band One Direction.

00:29:03,539 --> 00:29:08,770
He once said when someone asked him why he wants to play the guitar more, he said, "Someone

00:29:08,770 --> 00:29:12,620
told me the smile on my face gets bigger when I play the guitar."

00:29:12,620 --> 00:29:17,820
My question is: what makes you smile more?

00:29:17,820 --> 00:29:20,460
Try to do it for a couple of hours a week.

00:29:20,460 --> 00:29:25,539
Don't turn it into an obligation but it will be tremendously beneficial.

00:29:25,539 --> 00:29:29,630
Becoming emotionally fit is an ongoing process and commitment, but it's one that's going

00:29:29,630 --> 00:29:33,600
to help us build a safe work culture for ourselves and those around us.

00:29:33,600 --> 00:29:38,659
It's going to help you improve your overall quality of life as well.

00:29:38,659 --> 00:29:42,330
To that end, I want you to encourage the model behaviour you want to see in your team.

00:29:42,330 --> 00:29:48,010
One of my first days at Netflix, my officer came to me and said you've been here for eight

00:29:48,010 --> 00:29:49,580
hours, you should go home.

00:29:49,580 --> 00:29:56,400
It was a small, intentional act that communicated through his actions and words was that I wasn't

00:29:56,400 --> 00:30:01,539
expected to work long hours, that I was expected to take care of myself.

00:30:01,539 --> 00:30:02,860
We need to take care of ourselves.

00:30:02,860 --> 00:30:06,550
If you're in a position of leadership where someone others look up to, make sure you're

00:30:06,550 --> 00:30:10,630
intentional about setting that example.

00:30:10,630 --> 00:30:15,840
I think doing these things will go a long way towards combating burn-out in our industry.

00:30:15,840 --> 00:30:18,860
We work in a very creative, a very exciting field, right?

00:30:18,860 --> 00:30:21,380
That offers plenty of rewarding opportunities.

00:30:21,380 --> 00:30:25,179
But as software becomes a more and more important part of our society, chances are working conditions

00:30:25,179 --> 00:30:31,169
will get bores for many of us, because most modern ideas of how to scale businesses are

00:30:31,169 --> 00:30:39,200
geared at repeatedly solving the same problems through process, which is against the idea

00:30:39,200 --> 00:30:41,730
of being creative and being innovative.

00:30:41,730 --> 00:30:44,309
So we have to respond to this by building safe teams.

00:30:44,309 --> 00:30:51,150
We must be intentional about the type of culture we want our team in our environment and our

00:30:51,150 --> 00:30:55,299
community to have, which I believe should be one of safety.

00:30:55,299 --> 00:30:59,720
At this point, we looked at some personal examples from my life, some studies, and even

00:30:59,720 --> 00:31:01,919
a few tips of how to build safe teams.

00:31:01,919 --> 00:31:06,480
I hope that all of you walk out of here at the end of today, and as you're hearing the

00:31:06,480 --> 00:31:11,770
other talks, thinking about these ideas, but under all these thoughts I've shared my strongest

00:31:11,770 --> 00:31:16,590
motivating factor is that we should focus on making people awesome.

00:31:16,590 --> 00:31:20,840
People like you all, people like me, people like everyone that we work with, all have

00:31:20,840 --> 00:31:25,799
the ability to be awesome if they're put into the right environment to grow and thrive.

00:31:25,799 --> 00:31:31,020
For the vast majority of people, that's one of the safety security, where they can take

00:31:31,020 --> 00:31:36,789
risks confidently, where they feel their contributions matter, and they're encouraged to focus on

00:31:36,789 --> 00:31:38,740
both their physical and mental health.

00:31:38,740 --> 00:31:42,880
So, if we want to make people you a Sol, then it's only reasonable that we make safety a

00:31:42,880 --> 00:31:44,480
requirement.

00:31:44,480 --> 00:31:49,030
In the same way that we make tests a requirement for our products so that we can confidently

00:31:49,030 --> 00:31:53,640
ship them, we need to make safety a requirement for our teams so that we can confidently grow

00:31:53,640 --> 00:31:57,520
our peel. -- people.

00:31:57,520 --> 00:32:02,760
If you want to build a ship, don't drum up the people to gather wood, divide the work

00:32:02,760 --> 00:32:06,650
and give orders, instead, teach them to yearn for the vast and endless sea.

00:32:06,650 --> 00:32:12,520
Similarly, if you want to build a great team, don't drum up people to share their feels

00:32:12,520 --> 00:32:19,840
and implement you in processes, we have to teach ourselves, teach others, really to yearn

00:32:19,840 --> 00:32:23,570
for the vast and untapped potential of everyone around us.

00:32:23,570 --> 00:32:24,610
Thank you.

00:32:24,610 --> 00:32:25,130

YouTube URL: https://www.youtube.com/watch?v=2aPjsb-kIks


