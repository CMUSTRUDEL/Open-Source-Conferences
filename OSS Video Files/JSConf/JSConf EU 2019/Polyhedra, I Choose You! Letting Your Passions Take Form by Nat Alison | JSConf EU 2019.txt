Title: Polyhedra, I Choose You! Letting Your Passions Take Form by Nat Alison | JSConf EU 2019
Publication date: 2019-06-11
Playlist: JSConf EU 2019
Description: 
	For millennia, mathematicians and artists have been fascinated by polyhedra, 3D shapes that encode complex symmetries and relationships. My name is [anonymized], and for the last ten years I have dedicated my life to sharing the beauty of these shapes with the world. Join me on an epic quest filled with ancient 3D libraries, arcane mathematical data structures, and PokÃ©mon GIFs as I strive to make my vision a reality the only way I know how: an interactive web app. Come and twist, expand, and gyroelongate polyhedra with me, and let my journey inspire you to use the web to make your own passions come to life.

https://2019.jsconf.eu/nat-alison/polyhedra-i-choose-you-letting-your-passions-take-form.html
Captions: 
	00:00:00,429 --> 00:00:15,360
NAT: Hello, JSConf EU.

00:00:15,360 --> 00:00:21,690
My name is Nat Alison and I'm going to make all of you fall in love with polyhedra.

00:00:21,690 --> 00:00:26,090
Your first question is, what is a polyhedron.

00:00:26,090 --> 00:00:35,620
It's a solid in three dimensions with flat faces, sharp corners or verity seize.

00:00:35,620 --> 00:00:41,720
For example, some of you may know of the platonic solid, the cube in the tetrahedron, they have

00:00:41,720 --> 00:00:44,650
a single type of face and are really symmetric.

00:00:44,650 --> 00:00:51,280
So whichever way you turn them, you get the same figure.

00:00:51,280 --> 00:00:59,090
And the relatives, the Archimedean solids, they're highly symmetric and you can rotate

00:00:59,090 --> 00:01:01,289
and get the same shape.

00:01:01,289 --> 00:01:08,140
And the Johnson solids which can be made of any regular polygon in whatever order.

00:01:08,140 --> 00:01:15,640
These can range from a simple square pyramid to a triangular habesphenorotunda.

00:01:15,640 --> 00:01:19,900
Anyways, I love polyhedra.

00:01:19,900 --> 00:01:21,880
And I'm not the only one.

00:01:21,880 --> 00:01:27,790
They have been used in art and architecture and games and films for centuries.

00:01:27,790 --> 00:01:30,350
They're beautiful and symmetrical and found in nature.

00:01:30,350 --> 00:01:34,600
They're simple, but somehow extremely alien to us.

00:01:34,600 --> 00:01:36,630
But there's another reason that I like them.

00:01:36,630 --> 00:01:40,320
And it has to do with Pokemon.

00:01:40,320 --> 00:01:44,240
And this isn't really it's kind of silly but not really.

00:01:44,240 --> 00:01:49,979
Both polyhedra and Pokemon have data associated with them.

00:01:49,979 --> 00:01:57,829
Polyhedra have symmetries, Pokemon have different sets and rarities.

00:01:57,829 --> 00:01:59,970
There's like a butt load of each of them.

00:01:59,970 --> 00:02:13,969
Of a lot of unique polyhedra in Pokemon to discover and that involve in different ways.

00:02:13,969 --> 00:02:16,540
The Pokemon just gets bigger and stronger.

00:02:16,540 --> 00:02:20,769
And sometimes can branch off and become two different Pokemon or more.

00:02:20,769 --> 00:02:25,090
But with polyhedra, it's more difficult.

00:02:25,090 --> 00:02:35,500
You can do this weird twisty thing, snubification.

00:02:35,500 --> 00:02:42,760
And when I was a kid, I spent hours poring over websites looking at models in VR and

00:02:42,760 --> 00:02:47,809
origami which was really fun but also made me kind of sad.

00:02:47,809 --> 00:02:52,499
The thing was, lots of people love and know about Pokemon, me included.

00:02:52,499 --> 00:02:57,450
In fact, I loved Pokemon so much that the first thing I did in Europe was catch one

00:02:57,450 --> 00:02:59,519
in Pokemon, it's a regional exclusive.

00:02:59,519 --> 00:03:00,900
I just had to.

00:03:00,900 --> 00:03:07,400
But not as many people know about polyhedra and that's kind of a shame and sad.

00:03:07,400 --> 00:03:12,239
I wanted to make the best polyhedra website that ever was.

00:03:12,239 --> 00:03:17,280
To have my quest and understand them as my cause.

00:03:17,280 --> 00:03:21,469
Today I'm going to share my journey to becoming a polyhedra master.

00:03:21,469 --> 00:03:23,909
But before that, before talking about code.

00:03:23,909 --> 00:03:27,569
Let's talk about the other ways that I tried to bring my love of polyhedra to life.

00:03:27,569 --> 00:03:29,729
I went through several attempts.

00:03:29,729 --> 00:03:32,709
The first of which is origami.

00:03:32,709 --> 00:03:38,329
It's cool and artsy and I thought, why not make my own?

00:03:38,329 --> 00:03:42,950
I made one cube and I got a paper cut and didn't want to do it anymore.

00:03:42,950 --> 00:03:44,849
I got tired quickly.

00:03:44,849 --> 00:03:48,650
I thought, maybe I could 3D print them and make cool jewelry.

00:03:48,650 --> 00:03:51,400
You know, 3D printing technology advanced a lot.

00:03:51,400 --> 00:03:57,650
You need to upload a model and, oh, my god, it's too expensive.

00:03:57,650 --> 00:04:01,569
The next step which followed was writing polyhedra fan fiction.

00:04:01,569 --> 00:04:07,569
[ Laughter ] But less said about that phase, the better.

00:04:07,569 --> 00:04:10,469
And after this I decided you know what?

00:04:10,469 --> 00:04:11,680
Let me just make a website.

00:04:11,680 --> 00:04:13,739
That's what I know how to do.

00:04:13,739 --> 00:04:15,479
So, I got started.

00:04:15,479 --> 00:04:17,709
Our journey begins in May 2015.

00:04:17,709 --> 00:04:23,250
I was working as an internal tools engineer making code for engineers who make code for

00:04:23,250 --> 00:04:26,439
engineers who make code for other people.

00:04:26,439 --> 00:04:31,500
It felt like a Pikachu in the generator just grinding away.

00:04:31,500 --> 00:04:33,659
So, wait.

00:04:33,659 --> 00:04:39,150
So, I asked my boss, I really wanted to do frontend and I asked him, can I work on frontend

00:04:39,150 --> 00:04:40,150
stuff.

00:04:40,150 --> 00:04:44,039
And eventually he got back to me and said well, you know, I heard you like this.

00:04:44,039 --> 00:04:45,630
We have a new project coming up.

00:04:45,630 --> 00:04:47,970
I have just the thing for you, Jenkins.

00:04:47,970 --> 00:04:50,259
[ Laughter ] It's a UI.

00:04:50,259 --> 00:04:52,280
You should work on that.

00:04:52,280 --> 00:04:56,590
Needless to say, I was not very happy with this, so I decided to take matters into my

00:04:56,590 --> 00:04:57,699
own hands.

00:04:57,699 --> 00:05:02,270
And what better way to do that than by making something that I already love.

00:05:02,270 --> 00:05:08,389
When I started, I had a bunch of big brain ideas about collecting every single fact about

00:05:08,389 --> 00:05:11,880
polyhedra in Wikipedia and putting them on my page, I wanted to do VR.

00:05:11,880 --> 00:05:16,840
I wanted to do cool transformations, transforming them into once another.

00:05:16,840 --> 00:05:20,129
And I still had my job going Jenkins.

00:05:20,129 --> 00:05:25,540
In Pokemon, before you challenge the elite four, you have to get your first gym badge.

00:05:25,540 --> 00:05:27,210
That's what I did.

00:05:27,210 --> 00:05:33,719
I narrowed it down to an updated version of the sites that hi loved as a kid where I could

00:05:33,719 --> 00:05:37,919
see my favorite polyhedra.

00:05:37,919 --> 00:05:41,270
I downloaded from one of my favorite websites.

00:05:41,270 --> 00:05:46,360
JS was a little too low level and I didn't to want struggle with lighting and buffers.

00:05:46,360 --> 00:05:55,990
But I knew D3 and the data binding model and I found a library, xFreedom, letting me express

00:05:55,990 --> 00:06:00,620
3D modelling data as dominoes like D3.

00:06:00,620 --> 00:06:03,990
It worked perfectly.

00:06:03,990 --> 00:06:09,430
It took me about a week of part time work to get it working.

00:06:09,430 --> 00:06:10,620
And I'll just bring this over here.

00:06:10,620 --> 00:06:14,440
And you can see I have a little tetrahedron.

00:06:14,440 --> 00:06:16,520
A cube.

00:06:16,520 --> 00:06:22,900
An Archimedean solid.

00:06:22,900 --> 00:06:24,090
Different Johnson solids.

00:06:24,090 --> 00:06:26,270
But that was kind of it.

00:06:26,270 --> 00:06:28,639
Let me close this out.

00:06:28,639 --> 00:06:32,229
I showed that to a few friends, but kind of left.

00:06:32,229 --> 00:06:37,289
it was a good start, but also too simple and not really interactive and I found myself

00:06:37,289 --> 00:06:39,669
being unsatisfied by it.

00:06:39,669 --> 00:06:44,970
Fast forward two years later, I got fired because I hated Jenkins.

00:06:44,970 --> 00:06:52,969
I took a sabbatical and wrote a video game and more science fiction and started a job

00:06:52,969 --> 00:06:54,409
with frontend.

00:06:54,409 --> 00:06:56,569
It was Angular 1, but baby steps.

00:06:56,569 --> 00:07:03,610
I did that and we were in the process of switching out our frontend from Angular to React and

00:07:03,610 --> 00:07:08,310
I thought that I should be a good employee and learn about it in a side project.

00:07:08,310 --> 00:07:13,830
But I didn't want to do the basic TD app that everyone does with learning a new frontend

00:07:13,830 --> 00:07:14,830
framework.

00:07:14,830 --> 00:07:19,770
So, I thought, why not make my old polyhedra viewer into React.

00:07:19,770 --> 00:07:24,970
After all, Nintendo has been making the same Pokemon game for decades and we love them.

00:07:24,970 --> 00:07:26,330
I got started.

00:07:26,330 --> 00:07:32,900
And it turns out that React as a framework, it works really well with X3 DOM just like

00:07:32,900 --> 00:07:33,900
D3.

00:07:33,900 --> 00:07:39,690
Moreover, I found that React was easier to add in reactivity such as a configuration

00:07:39,690 --> 00:07:46,789
panel or a search bar or an index page where you can see my collection at once.

00:07:46,789 --> 00:07:48,900
And I don't have a live version of this running.

00:07:48,900 --> 00:07:52,819
But I showed it to my boss and teammates and that was it.

00:07:52,819 --> 00:07:55,240
Oh, get back to work.

00:07:55,240 --> 00:07:58,349
It was more interactive, but still esthetic.

00:07:58,349 --> 00:08:02,419
You can change the colors but doesn't tell you about polyhedra.

00:08:02,419 --> 00:08:07,900
What I wanted was the cool transitions, but I didn't have time because I was busy refactoring

00:08:07,900 --> 00:08:12,379
an Angular app, so I had to put it away again.

00:08:12,379 --> 00:08:13,659
Fast forward another couple of months.

00:08:13,659 --> 00:08:19,060
And in October, left my job due to burnout and depression and kind of just wanted to

00:08:19,060 --> 00:08:23,210
take a break from all the coding and focus on my other hobbies.

00:08:23,210 --> 00:08:25,930
Like fan fiction.

00:08:25,930 --> 00:08:33,469
But somehow writing polyhedra fan fiction did not make me forget about polyhedra.

00:08:33,469 --> 00:08:38,500
And old habits die hard and I kept coming back to the polyhedra and making improvements

00:08:38,500 --> 00:08:39,839
to it.

00:08:39,839 --> 00:08:46,089
More specifically, I wanted to arrange the polyhedra into sort of a periodic table based

00:08:46,089 --> 00:08:47,810
on their properties.

00:08:47,810 --> 00:08:53,399
And seeing all the polyhedra related to each other and correlating it like that made me

00:08:53,399 --> 00:08:57,100
think, why not just do what I wanted to do in the first place?

00:08:57,100 --> 00:09:01,440
I finally feel I have the skills to do it, and more importantly, I have the time.

00:09:01,440 --> 00:09:06,110
I got started on the long, laborious process of finally making the final evolution of my

00:09:06,110 --> 00:09:08,620
polyhedra viewer.

00:09:08,620 --> 00:09:10,990
I have no idea what I'm doing.

00:09:10,990 --> 00:09:17,860
But the very first step was to determine what operations were possible and actually valid.

00:09:17,860 --> 00:09:21,660
After all, not over Pokemon can evolve or combine into one another.

00:09:21,660 --> 00:09:27,230
And you don't want to allow free form combinations in polyhedra as cool as they might look.

00:09:27,230 --> 00:09:31,940
I had the relations for the periodic table.

00:09:31,940 --> 00:09:38,490
And when you see lines connecting dots like this, you're looking at a state machine or

00:09:38,490 --> 00:09:42,709
a graph with the polyhedra's notes and the operations at the edges.

00:09:42,709 --> 00:09:45,940
And there's a pretty straight forward to represent this as an object.

00:09:45,940 --> 00:09:52,630
You can it's just like an object of an object of a list of objects.

00:09:52,630 --> 00:09:56,880
You just label it with metadata to differentiate between multiple results.

00:09:56,880 --> 00:10:01,110
But there's a lot of polyhedra and a lot of relationships to encode.

00:10:01,110 --> 00:10:05,040
And it's all really but luckily, it's all really structured.

00:10:05,040 --> 00:10:11,100
And through an advanced programming technique called foreloops, we can save time from manually

00:10:11,100 --> 00:10:12,610
coding the entire graph.

00:10:12,610 --> 00:10:13,610
Okay.

00:10:13,610 --> 00:10:17,320
Now that we have this graph, we can figure out what configurations and options to transfer

00:10:17,320 --> 00:10:19,380
a polyhedra to another one.

00:10:19,380 --> 00:10:24,320
And you can disable operations, if they're invalid.

00:10:24,320 --> 00:10:30,839
You can test whether an operation leads to a result that matches the model that we currently

00:10:30,839 --> 00:10:31,839
have.

00:10:31,839 --> 00:10:36,540
You can mock the applications and click the next polyhedron instead of animating them.

00:10:36,540 --> 00:10:40,190
Now that we have that out of the way, let's talk about the transitions.

00:10:40,190 --> 00:10:46,730
At the beginning, I didn't know what I was doing and how many operations or what I wanted.

00:10:46,730 --> 00:10:52,090
So, it would be nice to have an abstract interface that I can plug in.

00:10:52,090 --> 00:10:56,350
Hi to think to myself, what is a transition?

00:10:56,350 --> 00:10:59,170
Think about what we're doing.

00:10:59,170 --> 00:11:07,550
We're interpolating verities from a start to an end.

00:11:07,550 --> 00:11:12,540
The faces and edges are defined by the Vertices.

00:11:12,540 --> 00:11:17,010
They don't change even if they're invisible at some point or overlap.

00:11:17,010 --> 00:11:20,889
But there's a problem with doing duplication.

00:11:20,889 --> 00:11:24,170
And that's that we want to be able to chain operations like this.

00:11:24,170 --> 00:11:27,730
We want to be able to blow stuff up and contract stuff.

00:11:27,730 --> 00:11:32,889
And it would be too complicated to keep track of all the due my cushions for every operation.

00:11:32,889 --> 00:11:44,029
And we have the switch, and it's hard to see which is which, it's impossible to tell the

00:11:44,029 --> 00:11:47,640
duplicate, but one has extra vertices and faces.

00:11:47,640 --> 00:11:50,480
And we can define an interface.

00:11:50,480 --> 00:11:56,339
And as long as the functions return the interface, we can animate all of them the same way.

00:11:56,339 --> 00:12:04,839
And the algorithm is one, replace the vertices with the duplicated versions, and interpolate

00:12:04,839 --> 00:12:09,400
and switch out the end result with the D duplicated version.

00:12:09,400 --> 00:12:11,829
This is kind of what it looks like in code.

00:12:11,829 --> 00:12:17,921
We have the state function, set it to the start and interpolate and set it to the D

00:12:17,921 --> 00:12:20,079
duplicated end.

00:12:20,079 --> 00:12:22,960
And finally, you need an interpolation function.

00:12:22,960 --> 00:12:26,769
There's a lot of libraries you can use for animation in JavaScript.

00:12:26,769 --> 00:12:31,329
Half don't exist anymore because animation in JavaScript is a crap shoot.

00:12:31,329 --> 00:12:36,410
Or you can Google and roll out your own.

00:12:36,410 --> 00:12:37,730
It's great.

00:12:37,730 --> 00:12:41,190
We don't have anything to test it on, though.

00:12:41,190 --> 00:12:45,529
So, let's talk about the actual operations we're going to make.

00:12:45,529 --> 00:12:47,110
I'm not going to go over all of them.

00:12:47,110 --> 00:12:52,230
But I wanted to share one example that's kind of easy and it's this operation called rectify.

00:12:52,230 --> 00:12:54,019
You have this shape, a cuboctahedron.

00:12:54,019 --> 00:13:03,329
And you have the cube and draw the points and draw lines and cut them up and slice them

00:13:03,329 --> 00:13:04,329
up.

00:13:04,329 --> 00:13:08,649
But we don't want to go back and forth, we want a smooth transition.

00:13:08,649 --> 00:13:16,220
In order to get the smooth transition, to animate it, we duplicate each twice so there

00:13:16,220 --> 00:13:18,920
are three vertices at each corner.

00:13:18,920 --> 00:13:24,829
Pull them to the midpoints and if there are two sets of vertices, we consolidate them

00:13:24,829 --> 00:13:26,279
into one.

00:13:26,279 --> 00:13:31,000
The algorithm is just duplicate and then map to the end.

00:13:31,000 --> 00:13:33,390
The duplication is annoying and not interesting.

00:13:33,390 --> 00:13:38,860
It's making sure that the old stuff maps to the new stuff and allow cross referencing

00:13:38,860 --> 00:13:39,860
vertices.

00:13:39,860 --> 00:13:47,540
Finding the vertex is just picking the one that is not one of your duplicates and calculating

00:13:47,540 --> 00:13:50,710
the midpoint through a map library.

00:13:50,710 --> 00:13:55,829
And finally, you put it all together and return the interface that we just defined.

00:13:55,829 --> 00:13:58,949
And here we go.

00:13:58,949 --> 00:14:00,279
Squash and stretch.

00:14:00,279 --> 00:14:05,260
[ Applause ] that really wasn't that impressive.

00:14:05,260 --> 00:14:11,910
I don't know why you all are clapping.

00:14:11,910 --> 00:14:18,399
So, I think I made about half the operation before realizing, math is kind of hard, y'all.

00:14:18,399 --> 00:14:24,709
In particular, the way that you usually represent polyhedral geometry is through a list of coordinates

00:14:24,709 --> 00:14:29,730
and a list of faces that refer to the indices of the vertices that are in the faces.

00:14:29,730 --> 00:14:34,149
Which is fine for 3D modelling, but that doesn't always translate well to the math stuff we

00:14:34,149 --> 00:14:35,399
want to do.

00:14:35,399 --> 00:14:43,339
How you combine two polyhedra together?

00:14:43,339 --> 00:14:50,060
Or the selected faces of the polyhedra, it's hard.

00:14:50,060 --> 00:14:54,440
And what you end up doing is a lot of index manipulation.

00:14:54,440 --> 00:14:58,050
The face indices, you have indices of indices.

00:14:58,050 --> 00:15:00,560
And I'm so tired of indices.

00:15:00,560 --> 00:15:03,320
Did you know the plural of index is indices?

00:15:03,320 --> 00:15:05,050
Now I do.

00:15:05,050 --> 00:15:08,569
How to solve this problem?

00:15:08,569 --> 00:15:10,569
Different types of Pokemon are strong against each other.

00:15:10,569 --> 00:15:16,829
If you're fighting a water Pokemon, use an electric Pokemon, that's what's effective.

00:15:16,829 --> 00:15:19,569
And different types of programming have different solutions.

00:15:19,569 --> 00:15:24,880
In this case, the solution we're going to use is object oriented programming.

00:15:24,880 --> 00:15:28,339
They have their weaknesses, but useful here.

00:15:28,339 --> 00:15:34,769
You can, of course, encapsulate method in the polyhedra like getting a centroid or combining

00:15:34,769 --> 00:15:35,769
two together.

00:15:35,769 --> 00:15:43,829
And you can keep track of metadata like the custom data like vector format that the vertices

00:15:43,829 --> 00:15:45,839
are stored in.

00:15:45,839 --> 00:15:49,620
And in particular this is there's a really useful structure called a doubly connected

00:15:49,620 --> 00:15:50,899
edge list.

00:15:50,899 --> 00:15:57,460
It's a link list where each face has links to adjacent facets, and it was easy to do

00:15:57,460 --> 00:15:58,879
with the class structure.

00:15:58,879 --> 00:16:03,300
I could have stopped at making the polyhedron class.

00:16:03,300 --> 00:16:10,399
They could stop with Pokemon, but then Nintendo couldn't make money with the Pokemon.

00:16:10,399 --> 00:16:15,550
I made everything a class, the edges, the faces, I have no idea if that was a good idea

00:16:15,550 --> 00:16:16,550
or not.

00:16:16,550 --> 00:16:21,930
But didn't have to see the word indices again so I was happy.

00:16:21,930 --> 00:16:25,569
But even with this, it was hard.

00:16:25,569 --> 00:16:29,290
For example, determining a solid.

00:16:29,290 --> 00:16:33,880
Sometimes they do different things depending on platonic or Archimedean.

00:16:33,880 --> 00:16:43,459
And you can see if they have the same, and there's this asshole, an elongated structure,

00:16:43,459 --> 00:16:54,100
it looks like an Archimedean solid, but it's annoying and it's like the Mr. Mime of polyhedra.

00:16:54,100 --> 00:16:56,140
And to do it right is more involved.

00:16:56,140 --> 00:16:58,439
How to solve this problem.?

00:16:58,439 --> 00:17:06,270
In Pokemon, there's a mythical Pokemon called Mu that you can only get in Tokyo.

00:17:06,270 --> 00:17:11,620
But when I played the first Pokemon game, I couldn't go to Tokyo because I was 8 years

00:17:11,620 --> 00:17:12,620
old.

00:17:12,620 --> 00:17:17,260
You can use this glitch to get the Mu much easier.

00:17:17,260 --> 00:17:18,480
Let's just cheat.

00:17:18,480 --> 00:17:25,270
We know there are only 13 Archimedean solid known since the Renaissance, it's proven.

00:17:25,270 --> 00:17:31,230
Since we have the list, why not just list them all and check if it's one of those.

00:17:31,230 --> 00:17:37,270
And this turns out making these shortcuts was actually a lot really useful in a lot

00:17:37,270 --> 00:17:42,280
of areas because there are a lot of places where it's significantly easier to code when

00:17:42,280 --> 00:17:45,660
you know what thing you're turning into when you have the graph.

00:17:45,660 --> 00:17:47,630
Anyways, that's a lot of math.

00:17:47,630 --> 00:17:51,470
So, let's go focus on art.

00:17:51,470 --> 00:17:54,800
Like I said in the beginning, a lot of these polyhedra sites are really old.

00:17:54,800 --> 00:17:58,210
They're often done by math professors on their spare time.

00:17:58,210 --> 00:18:01,890
For example, this is kind of the state of the art of polyhedra websites.

00:18:01,890 --> 00:18:06,210
I took this screenshot not in 1995, but two weeks ago.

00:18:06,210 --> 00:18:09,970
They're so old a lot don't work anymore.

00:18:09,970 --> 00:18:14,920
You can't see the polyhedra models or view or upload them.

00:18:14,920 --> 00:18:20,880
I wanted my website to be a new destination for polyhedra lovers.

00:18:20,880 --> 00:18:24,260
I wanted it to work on mobile phones so you could play with it anywhere.

00:18:24,260 --> 00:18:26,270
Or if you don't have access to a desktop.

00:18:26,270 --> 00:18:30,980
I wanted to make sure that there are a lot of visual aids so you can press around on

00:18:30,980 --> 00:18:36,840
the buttons even if you don't know what they do or know the math.

00:18:36,840 --> 00:18:44,920
And I made sure to pass the site even if you have a bad connection or a disability or you

00:18:44,920 --> 00:18:51,200
don't have Wi Fi on a plane and need screenshots for your talk at JSConf EU.

00:18:51,200 --> 00:18:56,080
So, after much work, I was ready to present it.

00:18:56,080 --> 00:18:58,610
So, here is the polyhedra viewer.

00:18:58,610 --> 00:19:01,420
Here is the home page.

00:19:01,420 --> 00:19:05,650
You have the periodic table of polyhedra showing all of them.

00:19:05,650 --> 00:19:08,220
Let's start out with a simple tetrahedron.

00:19:08,220 --> 00:19:11,900
You can truncate it.

00:19:11,900 --> 00:19:13,170
Sharpen it.

00:19:13,170 --> 00:19:19,280
You can augment it.

00:19:19,280 --> 00:19:21,470
Or diminish it.

00:19:21,470 --> 00:19:25,850
You can do that operation that we coded together called rectification.

00:19:25,850 --> 00:19:30,930
And you can do that animation where you expand the polyhedron.

00:19:30,930 --> 00:19:36,420
And you can contract it back until it's a cube.

00:19:36,420 --> 00:19:39,100
And finally, you can do this weird thing called snubification.

00:19:39,100 --> 00:19:46,670
And you can see it's expanding the faces, but it's like twist them.

00:19:46,670 --> 00:19:51,640
And you can also search and filter.

00:19:51,640 --> 00:19:54,300
Change the colors.

00:19:54,300 --> 00:19:58,760
The color thing is like on my other screen.

00:19:58,760 --> 00:20:03,200
Or look at info about each polyhedron.

00:20:03,200 --> 00:20:08,000
Anyways, the link is up over there.

00:20:08,000 --> 00:20:13,860
And so, you can just play around with it instead of listening to me for the rest of the talk.

00:20:13,860 --> 00:20:16,150
Ah.

00:20:16,150 --> 00:20:21,700
So, I kind of released it and expected it to just sync.

00:20:21,700 --> 00:20:28,080
After all, polyhedra are really obscure and the last couple of times I just showed it

00:20:28,080 --> 00:20:29,960
to friends and they were like, that's nice.

00:20:29,960 --> 00:20:31,120
Get back to work.

00:20:31,120 --> 00:20:34,750
But to my surprise, a lot of people loved it.

00:20:34,750 --> 00:20:40,450
A lot of people I admired in the development community Retweeted it.

00:20:40,450 --> 00:20:42,780
I got interviewed we math publications.

00:20:42,780 --> 00:20:48,680
I was able to connect with a lot of people both in the tech and art and math space who

00:20:48,680 --> 00:20:49,990
really enjoyed it.

00:20:49,990 --> 00:20:53,420
I had parents telling me their kids can't stop playing with it.

00:20:53,420 --> 00:20:57,150
Teachers telling me they want to use it to teach about polyhedron in the classroom.

00:20:57,150 --> 00:21:02,520
I was able to learn about other polyhedra projects by others obsessed with aspects of

00:21:02,520 --> 00:21:05,040
polyhedra.

00:21:05,040 --> 00:21:08,850
And I was able to connect with artists who loved polyhedra and expressed it in a different

00:21:08,850 --> 00:21:12,210
way through their art.

00:21:12,210 --> 00:21:17,470
But at the end of my long, long journey, the message that I want to impart is, even if

00:21:17,470 --> 00:21:22,800
you think your passions are too obscure or weird, there's always a way to share it with

00:21:22,800 --> 00:21:26,340
the world and make other people fall in love with them as well.

00:21:26,340 --> 00:21:29,940
No matter if it's polyhedra or Pokemon.

00:21:29,940 --> 00:21:36,170
And it's okay to take your time to evolve and grow whatever your passions are to transform

00:21:36,170 --> 00:21:37,170
them.

00:21:37,170 --> 00:21:41,850
And eventually I'm sure that you can create something amazing.

00:21:41,850 --> 00:21:47,080
Thank you.

00:21:47,080 --> 00:21:49,690

YouTube URL: https://www.youtube.com/watch?v=jhdJHBD9Fts


