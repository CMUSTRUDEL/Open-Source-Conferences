Title: Offline-first data: Getting Bigger by Kevin Doran | JSConf EU 2019
Publication date: 2019-08-21
Playlist: JSConf EU 2019
Description: 
	Offline capable web apps have come a long way in just a few years. Tools like service workers, PouchDB & CouchDB gave answers to the first questions of “can we do this, where do we begin?”, pushing new possibilities to the browser.

But taking the medical supply system online & offline for Africa’s most populous country asked us a whole new set of questions. How do you model distributed data and scalable code for 30,000 clinics? What about that growth is easy to mess up, and how do we plan for it?

https://2019.jsconf.eu/kevin-doran/offline-first-data-getting-bigger.html
Captions: 
	00:00:00,760 --> 00:00:09,000
[Music]

00:00:11,450 --> 00:00:19,380
cool thanks guys you can hear me okay

00:00:16,080 --> 00:00:22,740
all right yeah so good morning I'm

00:00:19,380 --> 00:00:26,010
really excited to be speaking at Jay s

00:00:22,740 --> 00:00:28,460
conf I've never really spoken at a

00:00:26,010 --> 00:00:36,239
conference before or at least one with

00:00:28,460 --> 00:00:39,390
thanks so yeah and it's really exciting

00:00:36,239 --> 00:00:42,239
because in 2015

00:00:39,390 --> 00:00:43,410
Patricia Garcia gave a talk here in

00:00:42,239 --> 00:00:46,590
Berlin at Jay s conf

00:00:43,410 --> 00:00:48,450
on an offline first data and I wasn't

00:00:46,590 --> 00:00:52,170
there for it but I saw it a year or two

00:00:48,450 --> 00:00:54,600
later on YouTube and kind of figured out

00:00:52,170 --> 00:00:57,210
where her LinkedIn profile was there was

00:00:54,600 --> 00:01:01,170
no job so I found her github profile and

00:00:57,210 --> 00:01:04,739
I found a link to a repo at Justin's

00:01:01,170 --> 00:01:08,460
organization which is field intelligence

00:01:04,739 --> 00:01:10,260
where I work now so I emailed Justin in

00:01:08,460 --> 00:01:12,630
two weeks later I was on a plane to

00:01:10,260 --> 00:01:16,009
Nigeria and now Patricia and I are

00:01:12,630 --> 00:01:20,970
colleagues and I'm speaking here about

00:01:16,009 --> 00:01:23,790
offline first stuff so the work we do is

00:01:20,970 --> 00:01:26,670
in trying to deliver health care

00:01:23,790 --> 00:01:30,619
commodities where it's a bit tougher to

00:01:26,670 --> 00:01:32,939
deliver them expanding access with

00:01:30,619 --> 00:01:37,710
partnering with federal governments and

00:01:32,939 --> 00:01:40,950
with down to small pharmacy traders and

00:01:37,710 --> 00:01:44,670
doing that with software supply chain

00:01:40,950 --> 00:01:48,060
software so we were headquartered in

00:01:44,670 --> 00:01:51,899
Abuja where we work it's in the middle

00:01:48,060 --> 00:01:56,299
of the that just below the red part in

00:01:51,899 --> 00:01:58,770
Nigeria and this map is population and

00:01:56,299 --> 00:02:00,840
kind of one of the reasons why Nigeria

00:01:58,770 --> 00:02:03,719
is because it's huge and it's growing

00:02:00,840 --> 00:02:06,719
like crazy it has a massive market and

00:02:03,719 --> 00:02:10,800
it's like about one-sixth of the

00:02:06,719 --> 00:02:13,800
continent like 200 million people we're

00:02:10,800 --> 00:02:15,450
a small team of software developers

00:02:13,800 --> 00:02:17,640
for Asians people we have an office

00:02:15,450 --> 00:02:20,910
there a small one here in Berlin and

00:02:17,640 --> 00:02:25,380
then a couple operations offices in

00:02:20,910 --> 00:02:27,360
Lagos and in Nairobi so three years ago

00:02:25,380 --> 00:02:29,250
four years ago when the company started

00:02:27,360 --> 00:02:32,970
you kind of asked the question okay what

00:02:29,250 --> 00:02:36,570
tech stack are we gonna use for pharmacy

00:02:32,970 --> 00:02:38,520
supply chain management you can buy one

00:02:36,570 --> 00:02:41,340
you can use one that's already built

00:02:38,520 --> 00:02:45,420
there's a lot of them you can customize

00:02:41,340 --> 00:02:48,570
on top of a development platform like an

00:02:45,420 --> 00:02:51,900
Oracle or in s AP a lot of warehouses

00:02:48,570 --> 00:02:53,730
and places and G RIA do this

00:02:51,900 --> 00:02:55,320
or you do what a lot of large companies

00:02:53,730 --> 00:02:58,620
do a lot of large tech companies in

00:02:55,320 --> 00:03:00,810
Fortune 500 companies where they just

00:02:58,620 --> 00:03:04,920
build their own and if you're gonna do

00:03:00,810 --> 00:03:07,500
that and it's 2015 2016 you're probably

00:03:04,920 --> 00:03:09,680
gonna choose like a very boring but

00:03:07,500 --> 00:03:13,500
sensible stack maybe something like

00:03:09,680 --> 00:03:16,590
c-sharp net or Django with Python or

00:03:13,500 --> 00:03:18,810
Ruby on Rails something with a Postgres

00:03:16,590 --> 00:03:21,900
or some sort of sequel relational

00:03:18,810 --> 00:03:25,110
backend which works really nice with

00:03:21,900 --> 00:03:27,630
enterprise resource planning you get a

00:03:25,110 --> 00:03:30,750
lot of stuff out of the box a lot of

00:03:27,630 --> 00:03:34,170
tools that can really help you but for

00:03:30,750 --> 00:03:38,580
us our requirements were a lot different

00:03:34,170 --> 00:03:40,410
than that and the contrast that I kind

00:03:38,580 --> 00:03:42,000
of like to invent people will talk about

00:03:40,410 --> 00:03:44,850
these cities in different ways but I

00:03:42,000 --> 00:03:47,850
like to think of Abuja and Lagos as the

00:03:44,850 --> 00:03:49,680
two places we need to operate and Lagos

00:03:47,850 --> 00:03:51,989
for people who have been there is a mega

00:03:49,680 --> 00:03:55,800
city it's like a country it's it's 20

00:03:51,989 --> 00:03:58,920
million people it has tons of growth

00:03:55,800 --> 00:04:02,040
tons of money tons of opportunities and

00:03:58,920 --> 00:04:03,660
then it also has networks that sometimes

00:04:02,040 --> 00:04:06,300
work and sometimes don't work you're a

00:04:03,660 --> 00:04:09,330
small pharmacy you connect to the

00:04:06,300 --> 00:04:10,980
internet on a cell tower there's tons of

00:04:09,330 --> 00:04:13,019
cell towers you see them everywhere but

00:04:10,980 --> 00:04:16,019
then there's a traffic jam right outside

00:04:13,019 --> 00:04:17,820
of your business and suddenly 10,000

00:04:16,019 --> 00:04:20,820
people are trying to use the same cell

00:04:17,820 --> 00:04:24,120
tower and you don't have network but you

00:04:20,820 --> 00:04:25,870
need to keep working and then Abuja is a

00:04:24,120 --> 00:04:29,080
planned administrator

00:04:25,870 --> 00:04:30,910
city of just like a million people and I

00:04:29,080 --> 00:04:33,760
always have internet there people don't

00:04:30,910 --> 00:04:36,520
carry cash they pay with bank cards our

00:04:33,760 --> 00:04:39,669
partners at the federal government have

00:04:36,520 --> 00:04:42,400
this giant command center room that has

00:04:39,669 --> 00:04:44,530
network it has HD TVs it has a rotating

00:04:42,400 --> 00:04:46,300
web camera that follows you as you talk

00:04:44,530 --> 00:04:48,660
and they need to see what's going on in

00:04:46,300 --> 00:04:48,660
the whole country

00:04:48,810 --> 00:04:54,250
so we want to make something that's

00:04:51,790 --> 00:04:56,260
better than just a traditional boring

00:04:54,250 --> 00:04:59,949
web application we need something that

00:04:56,260 --> 00:05:01,000
can work in both of these places and so

00:04:59,949 --> 00:05:04,410
that means doing something that's

00:05:01,000 --> 00:05:07,810
offline capable and offline is not

00:05:04,410 --> 00:05:09,760
binary it's not a it's an offline

00:05:07,810 --> 00:05:12,610
capable app or it's or it's an online

00:05:09,760 --> 00:05:14,590
app you have well it looks crazy on the

00:05:12,610 --> 00:05:17,260
screen you have like a lot of different

00:05:14,590 --> 00:05:19,510
options the first one is what we call

00:05:17,260 --> 00:05:22,330
small offline these are names we made up

00:05:19,510 --> 00:05:24,280
for these categories and it's kind of

00:05:22,330 --> 00:05:27,160
like a marketing gimmick that a lot of

00:05:24,280 --> 00:05:29,680
web-based apps use where they say we're

00:05:27,160 --> 00:05:31,150
offline capable and people who aren't

00:05:29,680 --> 00:05:32,950
software developers don't know what that

00:05:31,150 --> 00:05:34,539
means but like we know what this means

00:05:32,950 --> 00:05:36,280
it's like kind of like you're working on

00:05:34,539 --> 00:05:38,320
an issue ticket and github and you lose

00:05:36,280 --> 00:05:41,560
the network connectivity you can like

00:05:38,320 --> 00:05:41,919
keep typing you know the data will stay

00:05:41,560 --> 00:05:44,110
there

00:05:41,919 --> 00:05:45,669
maybe it's thrown into local storage but

00:05:44,110 --> 00:05:47,320
you don't want to like refresh you don't

00:05:45,669 --> 00:05:49,830
want to click around so we couldn't use

00:05:47,320 --> 00:05:52,300
this model it's not going to work for us

00:05:49,830 --> 00:05:55,240
medium offline which is our word for

00:05:52,300 --> 00:05:58,539
like just using a native app like a

00:05:55,240 --> 00:06:02,169
iPhone app an Android app or writing for

00:05:58,539 --> 00:06:04,440
a plot like Windows or Mac OS is a lot

00:06:02,169 --> 00:06:07,000
more attractive and I've done work on

00:06:04,440 --> 00:06:07,720
apps like that before for pharmacy

00:06:07,000 --> 00:06:10,150
supply chain

00:06:07,720 --> 00:06:11,590
our company has as well and it's not

00:06:10,150 --> 00:06:13,750
something that we're necessarily going

00:06:11,590 --> 00:06:17,110
to rule out in the future but it is

00:06:13,750 --> 00:06:19,389
still very manual there's question marks

00:06:17,110 --> 00:06:21,370
for how offline it is because it totally

00:06:19,389 --> 00:06:22,599
depends on you as the developer what

00:06:21,370 --> 00:06:24,820
kind of database are you working with

00:06:22,599 --> 00:06:26,710
what rules are you setting up and how

00:06:24,820 --> 00:06:29,050
are you syncing with remote so like the

00:06:26,710 --> 00:06:31,960
example is like you pay to have offline

00:06:29,050 --> 00:06:34,690
features in consumer apps like like

00:06:31,960 --> 00:06:37,930
Spotify and like duolingo that give you

00:06:34,690 --> 00:06:39,520
offline features that duolingo seems to

00:06:37,930 --> 00:06:40,960
work really well but like Spotify

00:06:39,520 --> 00:06:44,080
seems like every time I get on a plane

00:06:40,960 --> 00:06:48,940
it forgets what I said to download

00:06:44,080 --> 00:06:50,710
offline big offline is really important

00:06:48,940 --> 00:06:53,979
to think about because this is how

00:06:50,710 --> 00:06:56,440
hospital IT systems work most of them

00:06:53,979 --> 00:06:57,970
historically this is changing but what

00:06:56,440 --> 00:07:03,069
you've had over the past couple decades

00:06:57,970 --> 00:07:05,050
is excuse me like a very large on-site

00:07:03,069 --> 00:07:06,580
deployment of servers even a server

00:07:05,050 --> 00:07:08,740
warehouse

00:07:06,580 --> 00:07:12,280
you have IT staff you have a local area

00:07:08,740 --> 00:07:14,050
network and it's because clinicians need

00:07:12,280 --> 00:07:16,870
their software to work offline it's not

00:07:14,050 --> 00:07:21,430
like offline is new to tech companies in

00:07:16,870 --> 00:07:22,870
this industry but as I said like that's

00:07:21,430 --> 00:07:26,380
not going to work for us we can't put a

00:07:22,870 --> 00:07:29,919
server in like right now we're working

00:07:26,380 --> 00:07:34,090
with about 30,000 pharmacies and there's

00:07:29,919 --> 00:07:37,060
hundreds of thousands to plan for so we

00:07:34,090 --> 00:07:39,490
went with the web with offline first in

00:07:37,060 --> 00:07:41,860
the web that gets us kind of the things

00:07:39,490 --> 00:07:44,080
we want low IT support you can do the

00:07:41,860 --> 00:07:47,560
whole thing offline but it's still the

00:07:44,080 --> 00:07:50,320
internet it's still sinking and there's

00:07:47,560 --> 00:07:53,919
a lot of talks on which distributed

00:07:50,320 --> 00:07:57,280
database to use like the basic setup for

00:07:53,919 --> 00:07:59,590
an offline app web app is you put a

00:07:57,280 --> 00:08:02,469
service worker in you tell it to cache

00:07:59,590 --> 00:08:04,509
the static application and then you work

00:08:02,469 --> 00:08:06,039
with local storage in the browser which

00:08:04,509 --> 00:08:08,259
has become a lot more attractive over

00:08:06,039 --> 00:08:11,020
the last several years you get to use a

00:08:08,259 --> 00:08:13,630
lot of the users available disk space a

00:08:11,020 --> 00:08:17,080
percentage of it but how do you work

00:08:13,630 --> 00:08:20,650
with the in browser database and what do

00:08:17,080 --> 00:08:23,009
you replicate with and couchdb and pouch

00:08:20,650 --> 00:08:26,919
TV which some people at this conference

00:08:23,009 --> 00:08:28,750
helps build are kind of like the tools

00:08:26,919 --> 00:08:32,380
that most people end up using we're

00:08:28,750 --> 00:08:34,779
really happy with the area that they

00:08:32,380 --> 00:08:39,390
cover for us if you know of some cool

00:08:34,779 --> 00:08:42,250
tool that somebody has or like this

00:08:39,390 --> 00:08:44,560
question that I often get is like oh why

00:08:42,250 --> 00:08:48,430
don't you just write your own super cool

00:08:44,560 --> 00:08:51,370
like replicating thing that that uses

00:08:48,430 --> 00:08:54,160
blockchain and Kafka and is

00:08:51,370 --> 00:08:56,320
Torsten and the thing is that like with

00:08:54,160 --> 00:08:59,260
these two our problem is never in the

00:08:56,320 --> 00:09:00,370
actual replication protocol whenever we

00:08:59,260 --> 00:09:02,410
don't have engineer's sitting around

00:09:00,370 --> 00:09:04,180
wasting time trying to figure out what

00:09:02,410 --> 00:09:06,820
steps went wrong if there's a little bit

00:09:04,180 --> 00:09:09,839
of network the document sink so these

00:09:06,820 --> 00:09:12,550
two have been really useful for that

00:09:09,839 --> 00:09:14,020
like somebody gave a talk a while ago

00:09:12,550 --> 00:09:15,960
where they said friends don't let

00:09:14,020 --> 00:09:21,100
friends build their own replication

00:09:15,960 --> 00:09:25,870
protocols Gregor said this and yeah all

00:09:21,100 --> 00:09:29,850
of our problems are elsewhere we have

00:09:25,870 --> 00:09:32,220
our stack we're sticking with it and

00:09:29,850 --> 00:09:37,320
like what could go wrong with this

00:09:32,220 --> 00:09:39,670
somewhat non-traditional application and

00:09:37,320 --> 00:09:44,470
for those of you who've maybe done work

00:09:39,670 --> 00:09:46,570
in like global public health you know

00:09:44,470 --> 00:09:49,089
that it's not actually this very well

00:09:46,570 --> 00:09:51,310
clearly administered highly educated

00:09:49,089 --> 00:09:55,570
system of people with clear incentives

00:09:51,310 --> 00:10:00,010
like it's constantly in a state of

00:09:55,570 --> 00:10:02,080
emergency the whatever the current

00:10:00,010 --> 00:10:04,360
situation is or or however the current

00:10:02,080 --> 00:10:06,310
administration's are working there's

00:10:04,360 --> 00:10:09,430
just this constant need to build things

00:10:06,310 --> 00:10:12,010
quickly and make things happen and very

00:10:09,430 --> 00:10:13,900
sort of unclear incentives it's not like

00:10:12,010 --> 00:10:19,300
a market economy that's just working off

00:10:13,900 --> 00:10:21,370
of a bottom line taller so we started

00:10:19,300 --> 00:10:22,660
hitting like a lot of problems right

00:10:21,370 --> 00:10:24,459
away even though all of us had had

00:10:22,660 --> 00:10:27,160
experience in building these kinds of

00:10:24,459 --> 00:10:30,550
applications we were building them at a

00:10:27,160 --> 00:10:32,650
very much bigger scale than what we've

00:10:30,550 --> 00:10:37,690
done before and the first problem you

00:10:32,650 --> 00:10:39,760
hit right away is what do you sync you

00:10:37,690 --> 00:10:41,740
have to segment the data somehow you

00:10:39,760 --> 00:10:43,779
can't I mean we did we started by just

00:10:41,740 --> 00:10:45,610
giving all of the data to every client

00:10:43,779 --> 00:10:47,980
we say like you get the whole database

00:10:45,610 --> 00:10:50,740
but then over time you need to start

00:10:47,980 --> 00:10:51,790
segmenting on something because if it's

00:10:50,740 --> 00:10:53,680
all gonna get stored in the users

00:10:51,790 --> 00:10:56,020
browser it doesn't matter how much space

00:10:53,680 --> 00:10:58,450
they have the data is growing linearly

00:10:56,020 --> 00:11:00,970
over time we're getting hundreds of

00:10:58,450 --> 00:11:02,950
thousands of documents of reports and

00:11:00,970 --> 00:11:03,939
shipments so you can't just tell the

00:11:02,950 --> 00:11:08,799
user take

00:11:03,939 --> 00:11:12,159
everything and the way you segment data

00:11:08,799 --> 00:11:15,819
using these databases using CouchDB is

00:11:12,159 --> 00:11:17,709
you set up a partition per a user you

00:11:15,819 --> 00:11:19,539
say this user is going to get these

00:11:17,709 --> 00:11:21,399
documents and the way you get it from

00:11:19,539 --> 00:11:24,849
the main database is you just sync them

00:11:21,399 --> 00:11:29,049
so your rules for setting this up are

00:11:24,849 --> 00:11:31,119
just entirely custom code your it's

00:11:29,049 --> 00:11:33,519
entirely up to you so you have to take

00:11:31,119 --> 00:11:36,579
into consideration all right what are

00:11:33,519 --> 00:11:38,559
our rules we need to you know somebody

00:11:36,579 --> 00:11:40,599
in Delta state should not be seeing the

00:11:38,559 --> 00:11:45,069
same data as somebody in Lego state

00:11:40,599 --> 00:11:47,259
ok cool geography next time time-based

00:11:45,069 --> 00:11:51,159
data becomes a really big issue because

00:11:47,259 --> 00:11:54,009
you need to sync some of it but not all

00:11:51,159 --> 00:11:57,909
of it but then this comes into like the

00:11:54,009 --> 00:12:02,199
domain model of what is okay to cut off

00:11:57,909 --> 00:12:04,929
because like to calculate how much stuff

00:12:02,199 --> 00:12:06,669
you have at a store or how much money

00:12:04,929 --> 00:12:08,349
you have in your bank account it's

00:12:06,669 --> 00:12:10,749
usually like what was the opening

00:12:08,349 --> 00:12:14,049
transaction and then let's add all of

00:12:10,749 --> 00:12:17,529
the debits and credits over time until I

00:12:14,049 --> 00:12:20,349
get the current balance but if I only

00:12:17,529 --> 00:12:22,389
sync your last ten transactions that's

00:12:20,349 --> 00:12:25,809
not gonna give you the right data to get

00:12:22,389 --> 00:12:28,419
the right and number so you look at what

00:12:25,809 --> 00:12:30,069
to sync as a developer and you have all

00:12:28,419 --> 00:12:31,479
of these different choices the other

00:12:30,069 --> 00:12:32,889
thing that I'm not going to spend a lot

00:12:31,479 --> 00:12:35,559
of time on is that with supply chain

00:12:32,889 --> 00:12:38,919
management you have really crazy access

00:12:35,559 --> 00:12:41,019
rules you have tons of dynamic lists of

00:12:38,919 --> 00:12:42,879
who's allowed to see which certain

00:12:41,019 --> 00:12:47,379
sponsored commodities at which certain

00:12:42,879 --> 00:12:50,799
locations two years ago at this month so

00:12:47,379 --> 00:12:56,889
there's not like a ton of yeah really

00:12:50,799 --> 00:12:59,079
clear ways to model your your data next

00:12:56,889 --> 00:13:02,769
is network storage and this is kind of

00:12:59,079 --> 00:13:06,429
exciting normally in an application you

00:13:02,769 --> 00:13:10,059
have a database that you're working with

00:13:06,429 --> 00:13:13,149
and so your code to access the the data

00:13:10,059 --> 00:13:15,009
is just in one place and you try and

00:13:13,149 --> 00:13:16,089
keep it extracted maybe someday you're

00:13:15,009 --> 00:13:17,100
going to reap lat form and you're going

00:13:16,089 --> 00:13:18,570
to choose a different database

00:13:17,100 --> 00:13:21,600
but typically you're working from one

00:13:18,570 --> 00:13:24,200
type of data store if we had gone the

00:13:21,600 --> 00:13:30,420
traditional like web framework

00:13:24,200 --> 00:13:34,140
application and with online offline you

00:13:30,420 --> 00:13:37,260
have data that can be coming from the

00:13:34,140 --> 00:13:39,360
index TV browser database through pouch

00:13:37,260 --> 00:13:40,230
you have data that could just be like in

00:13:39,360 --> 00:13:44,610
an in-memory

00:13:40,230 --> 00:13:46,230
excuse me cache you have requests from

00:13:44,610 --> 00:13:48,860
the browser to get remote data that you

00:13:46,230 --> 00:13:51,330
don't have locally and then you have

00:13:48,860 --> 00:13:53,820
back-end service functions that are also

00:13:51,330 --> 00:13:56,240
talking to the same database that need

00:13:53,820 --> 00:13:59,970
to do similar business logic so

00:13:56,240 --> 00:14:02,550
developers don't really have a framework

00:13:59,970 --> 00:14:04,980
for where we're busy we need to throw

00:14:02,550 --> 00:14:06,390
our code somewhere if this was rails I'd

00:14:04,980 --> 00:14:08,430
have an endpoint I'd have a new table

00:14:06,390 --> 00:14:10,380
and set up a new entity and I put the

00:14:08,430 --> 00:14:12,540
code under it and even if it's messy

00:14:10,380 --> 00:14:14,850
everybody in the organization is used to

00:14:12,540 --> 00:14:17,280
that pattern but for us it was just like

00:14:14,850 --> 00:14:18,900
just put it wherever you want like let's

00:14:17,280 --> 00:14:22,290
put it in the lambda let's put it in

00:14:18,900 --> 00:14:24,510
this back-end script let's put it you

00:14:22,290 --> 00:14:26,310
know in the front end and then over time

00:14:24,510 --> 00:14:27,750
you don't have like an isolated place

00:14:26,310 --> 00:14:32,580
because you're working with different

00:14:27,750 --> 00:14:34,590
network storage adapters the biggest one

00:14:32,580 --> 00:14:37,890
of the bigger problems that isn't just

00:14:34,590 --> 00:14:41,060
us on the front end doing web-based

00:14:37,890 --> 00:14:45,000
applications is is modeling JSON

00:14:41,060 --> 00:14:49,050
modeling sort of without a relational

00:14:45,000 --> 00:14:50,850
database and there isn't as far as we

00:14:49,050 --> 00:14:53,730
know so far like there isn't one clear

00:14:50,850 --> 00:14:55,740
way to do this that always wins there's

00:14:53,730 --> 00:14:58,860
a lot of different strategies to deal

00:14:55,740 --> 00:15:03,030
with the problems so normalization like

00:14:58,860 --> 00:15:05,160
you want this table and this table and

00:15:03,030 --> 00:15:07,020
this table to be neatly separated and

00:15:05,160 --> 00:15:08,790
you have foreign keys between between

00:15:07,020 --> 00:15:10,620
them like this is a database that's

00:15:08,790 --> 00:15:12,150
awesome that's what you want and so you

00:15:10,620 --> 00:15:13,740
you're a developer and you're like I'm

00:15:12,150 --> 00:15:15,150
going to do this in JSON so I'm going to

00:15:13,740 --> 00:15:17,430
create a document and a document and a

00:15:15,150 --> 00:15:20,430
document and a document and then to get

00:15:17,430 --> 00:15:22,590
this document and to join on them you're

00:15:20,430 --> 00:15:24,330
making HTTP requests over a network

00:15:22,590 --> 00:15:27,690
because you don't know what the relation

00:15:24,330 --> 00:15:29,550
is yet so so then you say oh okay that's

00:15:27,690 --> 00:15:30,750
too much I'm gonna put everything in the

00:15:29,550 --> 00:15:32,250
JSON document

00:15:30,750 --> 00:15:34,080
and then a user says hey we need to

00:15:32,250 --> 00:15:35,700
change the name of this item you say

00:15:34,080 --> 00:15:37,530
okay let me just do a bulk update on

00:15:35,700 --> 00:15:39,930
half a gig of data and hope that there

00:15:37,530 --> 00:15:41,820
aren't any conflicts so and it's not

00:15:39,930 --> 00:15:43,050
always clear what the right strategy is

00:15:41,820 --> 00:15:44,400
for this sometimes it helps to

00:15:43,050 --> 00:15:48,930
denormalize sometimes it helps to

00:15:44,400 --> 00:15:51,060
normalize and document conflicts

00:15:48,930 --> 00:15:53,670
Patricia Garcia's talk had some really

00:15:51,060 --> 00:15:56,880
cool in-depth details about strategies

00:15:53,670 --> 00:15:58,710
for using multiple documents to have two

00:15:56,880 --> 00:16:03,900
users working on the same entity at the

00:15:58,710 --> 00:16:08,060
same time without causing conflicts yeah

00:16:03,900 --> 00:16:10,980
and then the other one is like around

00:16:08,060 --> 00:16:13,220
what you sync to who so like kind of

00:16:10,980 --> 00:16:15,300
access stuff you might have a list of

00:16:13,220 --> 00:16:18,900
pharmacy commodities that you need to

00:16:15,300 --> 00:16:21,150
send to a supplier but it turns out

00:16:18,900 --> 00:16:22,800
there's two suppliers one for cold chain

00:16:21,150 --> 00:16:24,300
commodities one for non cold chain

00:16:22,800 --> 00:16:26,730
commodities so you need to split the

00:16:24,300 --> 00:16:28,230
document so it's it's like a business

00:16:26,730 --> 00:16:31,890
rule that impacts how you're modeling

00:16:28,230 --> 00:16:34,890
the JSON and when a user says hey I need

00:16:31,890 --> 00:16:37,290
to make a new type of database table you

00:16:34,890 --> 00:16:39,300
know couch people what do I do you say

00:16:37,290 --> 00:16:42,660
like it really depends on what you're

00:16:39,300 --> 00:16:46,620
doing so it makes having a single

00:16:42,660 --> 00:16:50,250
framework for everything difficult so

00:16:46,620 --> 00:16:52,740
deciding how to segment data and what to

00:16:50,250 --> 00:16:55,440
sync to users we created this thing we

00:16:52,740 --> 00:16:58,110
call an ID dispenser and it's just a

00:16:55,440 --> 00:17:01,290
remote endpoint that when a user starts

00:16:58,110 --> 00:17:03,660
may initialize the application we have

00:17:01,290 --> 00:17:06,720
the browser make a call to a lambda and

00:17:03,660 --> 00:17:08,850
the lambda takes the user who it is

00:17:06,720 --> 00:17:10,589
what their location is what programs

00:17:08,850 --> 00:17:12,180
they have access to and it goes and it

00:17:10,589 --> 00:17:14,850
talks to CouchDB in it says hey what

00:17:12,180 --> 00:17:17,130
what documents does this user need couch

00:17:14,850 --> 00:17:19,800
says ok based on your business logic its

00:17:17,130 --> 00:17:21,689
X Y & Z lambda says thanks sends it to

00:17:19,800 --> 00:17:24,780
the browser and then the user has a

00:17:21,689 --> 00:17:28,530
subset of the data that they get to use

00:17:24,780 --> 00:17:31,440
and as an aside like this is so far been

00:17:28,530 --> 00:17:34,650
working for us but if you're going to

00:17:31,440 --> 00:17:40,710
use like infinitely scalable serverless

00:17:34,650 --> 00:17:42,679
functions on behalf of clients remember

00:17:40,710 --> 00:17:44,670
that other resources of yours are not

00:17:42,679 --> 00:17:50,690
infinitely scalable

00:17:44,670 --> 00:17:53,490
you might DDoS your own database so yeah

00:17:50,690 --> 00:17:55,740
this is really exciting like what we

00:17:53,490 --> 00:17:58,620
started to do in our API is with this

00:17:55,740 --> 00:18:00,030
problem of sometimes your network

00:17:58,620 --> 00:18:01,710
storage adapter is a local database

00:18:00,030 --> 00:18:04,290
sometimes it's a remote database

00:18:01,710 --> 00:18:06,840
sometimes you're a node is having api's

00:18:04,290 --> 00:18:10,020
that have all of that to find in them

00:18:06,840 --> 00:18:12,030
per entity it's one API that we use in

00:18:10,020 --> 00:18:13,470
all of our different places in lambdas

00:18:12,030 --> 00:18:18,270
in the back end and on the front end in

00:18:13,470 --> 00:18:21,360
scripts and your API can know what kind

00:18:18,270 --> 00:18:26,970
of network storage adapter you're using

00:18:21,360 --> 00:18:29,490
so you have situations where you ask hey

00:18:26,970 --> 00:18:31,830
give me all of the reports and the API

00:18:29,490 --> 00:18:34,830
goes okay cool I'm looking in the

00:18:31,830 --> 00:18:37,800
database I have found three months worth

00:18:34,830 --> 00:18:40,740
of reports and that's what I know about

00:18:37,800 --> 00:18:42,810
that's offline and the user then says

00:18:40,740 --> 00:18:45,240
but I want to page back further than

00:18:42,810 --> 00:18:47,820
that this isn't fair that I should only

00:18:45,240 --> 00:18:49,650
see what's offline and the API at that

00:18:47,820 --> 00:18:51,720
point says I'm gonna switch network

00:18:49,650 --> 00:18:58,860
storage adapters and I'm gonna go fetch

00:18:51,720 --> 00:19:01,500
the remote Docs and give that to you and

00:18:58,860 --> 00:19:04,860
then a lot of this ties back into like

00:19:01,500 --> 00:19:09,320
how do you design this kind of

00:19:04,860 --> 00:19:13,020
application for the user you have to

00:19:09,320 --> 00:19:16,740
tell the user what's going on if they

00:19:13,020 --> 00:19:18,540
look for a report on their facility some

00:19:16,740 --> 00:19:20,460
facility of its remote maybe they don't

00:19:18,540 --> 00:19:21,960
submit reports that often and they want

00:19:20,460 --> 00:19:24,780
to know has this report then submitted

00:19:21,960 --> 00:19:26,910
and they're working offline the ID

00:19:24,780 --> 00:19:28,620
dispenser told them you should know

00:19:26,910 --> 00:19:30,900
about this range of documents you should

00:19:28,620 --> 00:19:32,670
have these offline so if you go and

00:19:30,900 --> 00:19:35,190
check and the documents not there

00:19:32,670 --> 00:19:37,050
display to the user this thing doesn't

00:19:35,190 --> 00:19:39,450
exist I don't care about what's on the

00:19:37,050 --> 00:19:41,010
remote I know that this document was

00:19:39,450 --> 00:19:44,130
just never submitted in the first place

00:19:41,010 --> 00:19:46,740
or that it's there then if you're going

00:19:44,130 --> 00:19:49,140
too far back to a segment of the data

00:19:46,740 --> 00:19:53,100
that we can't sync something that's much

00:19:49,140 --> 00:19:55,410
older we tell the user and we display in

00:19:53,100 --> 00:19:57,240
the UI like this has got to be an online

00:19:55,410 --> 00:19:58,530
resource this is something that you're

00:19:57,240 --> 00:19:59,880
not going to have offline

00:19:58,530 --> 00:20:02,760
so if you have network you make the

00:19:59,880 --> 00:20:04,560
remote call comes back says yep we don't

00:20:02,760 --> 00:20:06,690
know about that report or yep here's the

00:20:04,560 --> 00:20:10,140
report display it but if you're offline

00:20:06,690 --> 00:20:12,930
you have to display to the user hey like

00:20:10,140 --> 00:20:15,480
we don't know like we were offline we

00:20:12,930 --> 00:20:21,780
don't know if this report exists or if

00:20:15,480 --> 00:20:26,040
it doesn't exist so yeah the last thing

00:20:21,780 --> 00:20:30,260
is some pictures where this is like a

00:20:26,040 --> 00:20:32,820
remote clinic that has a pharmacy and

00:20:30,260 --> 00:20:35,580
you can see there's like a little bit of

00:20:32,820 --> 00:20:40,890
a VSAT which is for satellite internet

00:20:35,580 --> 00:20:44,730
and this clinic had pretty good internet

00:20:40,890 --> 00:20:48,270
at the time it was like 2014 and they

00:20:44,730 --> 00:20:50,280
had like 512 kilobits a second down and

00:20:48,270 --> 00:20:52,050
that was fine like they could have an

00:20:50,280 --> 00:20:54,780
application on site on a laptop and

00:20:52,050 --> 00:20:57,300
dispense point of care to patients so as

00:20:54,780 --> 00:20:59,040
patients would come up still for the

00:20:57,300 --> 00:21:01,560
supply chain not for the clinicians

00:20:59,040 --> 00:21:05,360
necessarily but you would track the

00:21:01,560 --> 00:21:05,360
movement of pharmaceuticals

00:21:05,450 --> 00:21:09,930
electronically and so when you're

00:21:08,550 --> 00:21:11,850
designing for this place you think well

00:21:09,930 --> 00:21:15,300
hey we can just use a network we'll just

00:21:11,850 --> 00:21:17,340
really make sure that that VSAT always

00:21:15,300 --> 00:21:20,010
works well we'll talk to the IT team

00:21:17,340 --> 00:21:23,130
will be really serious about it but

00:21:20,010 --> 00:21:25,890
that's not the case this VSAT would very

00:21:23,130 --> 00:21:28,710
frequently get slightly misaligned and

00:21:25,890 --> 00:21:32,820
the clinic would lose internet and

00:21:28,710 --> 00:21:34,410
what's really kind of the point of using

00:21:32,820 --> 00:21:37,650
this somewhat difficult and

00:21:34,410 --> 00:21:41,220
non-traditional application is that for

00:21:37,650 --> 00:21:43,230
that pharmacy like it didn't matter the

00:21:41,220 --> 00:21:45,210
application worked fine it continued to

00:21:43,230 --> 00:21:47,190
work they could create patients they

00:21:45,210 --> 00:21:49,200
could create dispenses they could look

00:21:47,190 --> 00:21:53,910
up their stock they could transfer stock

00:21:49,200 --> 00:21:56,370
internally and then oh I should show the

00:21:53,910 --> 00:21:58,320
pharmacy the pharmacy is like that one

00:21:56,370 --> 00:22:01,890
in the back they're all red and looked

00:21:58,320 --> 00:22:03,960
the same but the the cool part was that

00:22:01,890 --> 00:22:10,110
when a shipment would come once a month

00:22:03,960 --> 00:22:11,700
from the central warehouse what would

00:22:10,110 --> 00:22:12,299
you do you would have to manually enter

00:22:11,700 --> 00:22:15,149
that

00:22:12,299 --> 00:22:17,909
like you're using an offline system and

00:22:15,149 --> 00:22:19,799
then also worse is that you have

00:22:17,909 --> 00:22:23,190
hundreds and hundreds of transactions

00:22:19,799 --> 00:22:26,879
daily about really important commodities

00:22:23,190 --> 00:22:29,209
that the central team needs to plan and

00:22:26,879 --> 00:22:32,190
think about that's why they asked us

00:22:29,209 --> 00:22:34,320
programmers to build something so if

00:22:32,190 --> 00:22:36,779
you're not gonna send that data back

00:22:34,320 --> 00:22:38,099
home then it's like why are you you know

00:22:36,779 --> 00:22:40,049
why are you tracking it in the first

00:22:38,099 --> 00:22:41,609
place unless it's something later some

00:22:40,049 --> 00:22:44,879
analysis or something which is what a

00:22:41,609 --> 00:22:46,079
lot of systems end up being used for so

00:22:44,879 --> 00:22:48,119
the team would do is they would walk to

00:22:46,079 --> 00:22:51,690
this River and I like this photo because

00:22:48,119 --> 00:22:53,579
it looks really nice but this River was

00:22:51,690 --> 00:22:56,509
like really directly behind the pharmacy

00:22:53,579 --> 00:22:59,989
it's like just less than a kilometer and

00:22:56,509 --> 00:23:02,639
there's a cell tower over there now that

00:22:59,989 --> 00:23:05,279
when you're at the river and you have a

00:23:02,639 --> 00:23:08,639
cellphone and you're tethering to your

00:23:05,279 --> 00:23:10,499
laptop you have fine connectivity and

00:23:08,639 --> 00:23:12,269
they didn't really do this every day

00:23:10,499 --> 00:23:13,649
they didn't need to but they could just

00:23:12,269 --> 00:23:15,359
go over there whenever a shipment would

00:23:13,649 --> 00:23:16,229
come they would learn from the remote

00:23:15,359 --> 00:23:17,729
about the shipment

00:23:16,229 --> 00:23:19,799
it would update their inventory levels

00:23:17,729 --> 00:23:21,959
and then they would sink to the central

00:23:19,799 --> 00:23:23,339
server and the central team these are

00:23:21,959 --> 00:23:24,779
all the commodities we dispensed over

00:23:23,339 --> 00:23:26,879
the last couple of weeks and the central

00:23:24,779 --> 00:23:29,399
team could see oh hey cool they need

00:23:26,879 --> 00:23:31,709
more of this they're good on that and we

00:23:29,399 --> 00:23:34,709
can know what to do next

00:23:31,709 --> 00:23:40,349
even though they're VSAT is misaligned

00:23:34,709 --> 00:23:43,679
and the IT team is busy so yeah that's

00:23:40,349 --> 00:23:45,839
kind of like the it's really exciting

00:23:43,679 --> 00:23:50,190
work like we have to know a lot about

00:23:45,839 --> 00:23:52,739
JavaScript and we have to do new things

00:23:50,190 --> 00:23:55,859
and try and talk our own team and our

00:23:52,739 --> 00:23:58,079
own self into trying to use patterns and

00:23:55,859 --> 00:24:01,279
put code in the right place so it can

00:23:58,079 --> 00:24:04,259
feel really frustrating and at times we

00:24:01,279 --> 00:24:05,940
many times we will kind of look at each

00:24:04,259 --> 00:24:08,219
other and be like what are we even doing

00:24:05,940 --> 00:24:11,429
like what why don't we just make a rails

00:24:08,219 --> 00:24:13,979
app or a django app like this is so hard

00:24:11,429 --> 00:24:16,829
but like ultimately it means an

00:24:13,979 --> 00:24:19,589
application that is more like robust

00:24:16,829 --> 00:24:21,929
like it can get us more data and it can

00:24:19,589 --> 00:24:24,269
work in the places we want to work in so

00:24:21,929 --> 00:24:26,040
even though like a year or two ago it

00:24:24,269 --> 00:24:29,360
was looking pretty scary

00:24:26,040 --> 00:24:34,580
there's been a lot of learnings from us

00:24:29,360 --> 00:24:37,590
about stuff we've done wrong that have

00:24:34,580 --> 00:24:40,290
made it possible to kind of safely start

00:24:37,590 --> 00:24:43,890
delivering this type of application at a

00:24:40,290 --> 00:24:46,350
pretty large scale so I'm out of time

00:24:43,890 --> 00:24:48,700
but thanks very much guys for your time

00:24:46,350 --> 00:24:50,200
and it's happy to talk to you today

00:24:48,700 --> 00:24:58,170
[Applause]

00:24:50,200 --> 00:24:58,170

YouTube URL: https://www.youtube.com/watch?v=_deWuTbHb5I


