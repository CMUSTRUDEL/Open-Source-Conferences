Title: About life, robots and cats! by Constanza Yáñez Calderón | JSConf EU 2019
Publication date: 2019-07-30
Playlist: JSConf EU 2019
Description: 
	When I was a child I dreamt a lot about creating robots that helped me in my daily life, like tidying up my bedroom. That was just a dream till I grow up and found out that there’s something called home automation. So I decided to build Sasha, my cats’ pet sitter, that helps me by feeding my cats when I have to get home a little bit late. Sasha changed my life and my cats are stressless, because they can eat their meal at the right time.

In this talk I will share my experience on using JavaScript to build Sasha and will walkthrough its features. Last, I’ll talk about other possible use cases and the potential of home automation with JavaScript.

https://2019.jsconf.eu/constanza-yanez-calderon/about-life-robots-and-cats.html
Captions: 
	00:00:12,680 --> 00:00:13,880
I'm Constanza.

00:00:13,880 --> 00:00:17,450
I'm from Buenos Aries, Argentina.

00:00:17,450 --> 00:00:23,660
And I'm a frontend developer at an E Commerce country from South America.

00:00:23,660 --> 00:00:39,120
I'm part of Chica its program, we are women and we host meetups and create a platform

00:00:39,120 --> 00:00:47,220
for displaying with women and nonbinary Devs to give them more visibility.

00:00:47,220 --> 00:01:00,310
But now I'm here to talk about life, robots, and cats!

00:01:00,310 --> 00:01:06,950
Three of the most popular things on the Internet, right?

00:01:06,950 --> 00:01:17,060
We're going to see in this presentation with life and designing and it's main part.

00:01:17,060 --> 00:01:24,450
Building the building process and potential use cases of home automation.

00:01:24,450 --> 00:01:32,549
So, when I was a 4yearold child my family made me clean up my bedroom, put the toys

00:01:32,549 --> 00:01:36,320
away in boxes and do the dishes.

00:01:36,320 --> 00:01:40,130
And sometimes sweep the patio.

00:01:40,130 --> 00:01:47,579
By then I was so angry because all I wanted to do was to play with my friends and toys.

00:01:47,579 --> 00:01:48,579
Right?

00:01:48,579 --> 00:02:04,329
So, I

00:02:04,329 --> 00:02:12,079
used to have this dream that was about creating robots that could help me with these chores

00:02:12,079 --> 00:02:14,590
I had.

00:02:14,590 --> 00:02:18,349
But then I grew up.

00:02:18,349 --> 00:02:25,439
And I still have chores even more than before.

00:02:25,439 --> 00:02:28,150
And now I have two cats.

00:02:28,150 --> 00:02:30,069
Orson and Heckl.

00:02:30,069 --> 00:02:36,599
And sometimes they had to be they had to wait for me to be fed.

00:02:36,599 --> 00:02:40,379
Needless to say, I rarely get home early.

00:02:40,379 --> 00:02:53,040
If I give them the day serving in the morning, they ate it by noon and when I get home at

00:02:53,040 --> 00:02:54,659
night, they're hungry.

00:02:54,659 --> 00:03:03,569
So, I needed to figure out a way to give them their serving twice a day.

00:03:03,569 --> 00:03:04,819
Right?

00:03:04,819 --> 00:03:06,079
Okay?

00:03:06,079 --> 00:03:15,719
And so, now I know that's why I decided to build this.

00:03:15,719 --> 00:03:22,749
I know nowadays there are a lot of options that fill our needs.

00:03:22,749 --> 00:03:29,639
But some are expensive, and I can't afford them.

00:03:29,639 --> 00:03:34,180
That's the reason why I built the pet feeder.

00:03:34,180 --> 00:03:43,870
So, then I started Googling similar projects that could guide me in the development.

00:03:43,870 --> 00:03:46,379
I saw a lot of the examples.

00:03:46,379 --> 00:03:52,719
Most of them were built, and the structure was just for one cup.

00:03:52,719 --> 00:04:00,689
However, what I needed was something that could feed both cats at the same time.

00:04:00,689 --> 00:04:09,680
Because I don't have much space in my home and because it's cheaper than having two machines,

00:04:09,680 --> 00:04:10,680
right?

00:04:10,680 --> 00:04:16,539
So, I knew that I will need a dispenser as a container.

00:04:16,539 --> 00:04:19,789
Several motors to move the container legs.

00:04:19,789 --> 00:04:23,409
And a microcontroller to run program.

00:04:23,409 --> 00:04:27,550
But I didn't know which one.

00:04:27,550 --> 00:04:30,650
Because there are a lot of it in the market.

00:04:30,650 --> 00:04:40,629
So, I had to decide if I will use a Raspberry Pi or an Arduino or something else.

00:04:40,629 --> 00:04:49,970
For some reason I thought that a Raspberry Pi would be the best option due to how easy

00:04:49,970 --> 00:04:55,060
to work is its operating system.

00:04:55,060 --> 00:05:04,610
So, someone lent me a Raspberry Pi which I had to configure it from scratch as well.

00:05:04,610 --> 00:05:12,639
And I decided to use JavaScript develop the feeder because I'm learning to program with

00:05:12,639 --> 00:05:13,639
this language.

00:05:13,639 --> 00:05:22,840
So, I made research and found a platform called Johnny 5 that allows you to work in robotic

00:05:22,840 --> 00:05:27,650
systems with JavaScript.

00:05:27,650 --> 00:05:40,419
But before using Johnny 5, I installed RasPiO which is a plugin that allows you to use Johnny

00:05:40,419 --> 00:05:45,830
5 in the Raspberry Pi.

00:05:45,830 --> 00:05:50,300
I used packages for run for all of this stuff.

00:05:50,300 --> 00:05:52,639
I used NodeJS.

00:05:52,639 --> 00:05:58,240
So, the configure of RasPiO and Johnny 5 is pretty easy.

00:05:58,240 --> 00:06:05,550
You just have to start it and acquire the module in your JS file.

00:06:05,550 --> 00:06:19,939
I'd never built something like that and my knowledge on the subject was new.

00:06:19,939 --> 00:06:29,280
All I know from movies that there are conventions for connecting the wires.

00:06:29,280 --> 00:06:40,819
So, all I wanted to do was not to burn my house because it would be terrible.

00:06:40,819 --> 00:06:50,220
So, after the setup of the Raspberry Pi, the first thing I tried was to turn on tiny lights.

00:06:50,220 --> 00:06:55,050
And to my surprise, it worked.

00:06:55,050 --> 00:07:00,699
So thank you.

00:07:00,699 --> 00:07:07,560
[ Applause ] So, I got into the world of several motors

00:07:07,560 --> 00:07:09,879
and I tried to make one work.

00:07:09,879 --> 00:07:11,789
But that part wasn't that easy.

00:07:11,789 --> 00:07:15,550
As I was suspecting.

00:07:15,550 --> 00:07:21,949
So, the Raspberry Pi has a lot of pins to put the wires.

00:07:21,949 --> 00:07:25,350
But you can't use any.

00:07:25,350 --> 00:07:30,120
I connected wires to different pins on the server motor.

00:07:30,120 --> 00:07:37,120
It didn't work until I found out that there are some things that need to be connected

00:07:37,120 --> 00:07:38,550
to a specific pin.

00:07:38,550 --> 00:07:44,020
For example, controlling the server module place.

00:07:44,020 --> 00:07:53,370
So, to do that you need to connect to a PWN which is a pulse with modulation pin.

00:07:53,370 --> 00:07:58,699
And the Raspberry Pi has just four of them.

00:07:58,699 --> 00:08:02,229
So, I connected to a wire.

00:08:02,229 --> 00:08:03,990
GPO18.

00:08:03,990 --> 00:08:15,069
And the other wires must be connected to a 5volt pin and a ground pin.

00:08:15,069 --> 00:08:24,680
So, during the process I learned that not all server modules are the same.

00:08:24,680 --> 00:08:27,979
Some of them turn 45 degrees.

00:08:27,979 --> 00:08:29,090
Others, 180 degrees.

00:08:29,090 --> 00:08:34,909
And there's some with continuous rotation.

00:08:34,909 --> 00:08:41,560
I used all of them until I found the one I needed.

00:08:41,560 --> 00:08:44,010
Okay.

00:08:44,010 --> 00:08:54,090
You know that you must consider the weight of what you want to move.

00:08:54,090 --> 00:08:59,660
So, I had to try several modules for different weights.

00:08:59,660 --> 00:09:03,710
My house was full of servers.

00:09:03,710 --> 00:09:08,380
But I chose the one that can receive 3.2 kilos.

00:09:08,380 --> 00:09:09,380
So, I'm sorry.

00:09:09,380 --> 00:09:17,520
[ Laughter ] Yes, that was a problem.

00:09:17,520 --> 00:09:23,279
Because I can't stop I can't make it stop the server modules.

00:09:23,279 --> 00:09:30,760
And so, the food overflowed a lot of times all over the table.

00:09:30,760 --> 00:09:32,829
That drove my cats crazy.

00:09:32,829 --> 00:09:40,770
So, in fact, they heard the sound of the food getting out of the feeder and came running

00:09:40,770 --> 00:09:45,250
to me and started meowing and at first it was very funny.

00:09:45,250 --> 00:09:46,270
Okay.

00:09:46,270 --> 00:09:55,139
But it turns out that to move a server motor with continuous rotation, you need to move

00:09:55,139 --> 00:09:56,570
the blade clockwise.

00:09:56,570 --> 00:10:09,110
So, it’s necessary to set the top speed of the server blades when you want to stop.

00:10:09,110 --> 00:10:17,070
So, I set the feeder to give them the food twice a day.

00:10:17,070 --> 00:10:22,209
For that I used an npm package.

00:10:22,209 --> 00:10:25,480
You just have to set the minutes.

00:10:25,480 --> 00:10:27,960
Every 15 minutes.

00:10:27,960 --> 00:10:30,040
And then the hours.

00:10:30,040 --> 00:10:31,180
That's it.

00:10:31,180 --> 00:10:38,980
They eat at 8:15 and 9:15 p.m.

00:10:38,980 --> 00:10:48,630
So, thanks to that, I left the pet feeder running.

00:10:48,630 --> 00:10:54,370
And thanks to that, I realized that the feeder wasn't working properly because it was letting

00:10:54,370 --> 00:10:58,029
out the food every hour.

00:10:58,029 --> 00:11:03,250
So, they were crazy.

00:11:03,250 --> 00:11:05,060
Yes.

00:11:05,060 --> 00:11:12,360
They wanted to eat all the food they can see.

00:11:12,360 --> 00:11:14,079
I'm sorry.

00:11:14,079 --> 00:11:22,430
So, for I spent a lot of time trying to figure out what was the problem.

00:11:22,430 --> 00:11:31,230
And I found out that the library, the package wasn't working properly.

00:11:31,230 --> 00:11:35,329
So, I replaced that package for another one.

00:11:35,329 --> 00:11:39,160
And everything was all right.

00:11:39,160 --> 00:11:42,720
So, the feeder was almost done.

00:11:42,720 --> 00:11:48,699
But one day my cats got up really, really early.

00:11:48,699 --> 00:11:51,420
Like 5 a.m.

00:11:51,420 --> 00:11:53,510
And they started mewing loudly.

00:11:53,510 --> 00:11:56,910
I was a little bit sleepy.

00:11:56,910 --> 00:12:00,860
And tried to get up and fill their bowls.

00:12:00,860 --> 00:12:06,120
But I knew that if I didn't get up, they would keep crying.

00:12:06,120 --> 00:12:15,089
And so, that was the point where I thought that I should include a new feature.

00:12:15,089 --> 00:12:25,570
Send an email from the comfort of my bed and go back to sleep.

00:12:25,570 --> 00:12:32,680
So, I started looking for other packages.

00:12:32,680 --> 00:12:43,220
And by the time I felt like this little cat sticking its nose in every package, his tongue.

00:12:43,220 --> 00:12:48,280
Until I got the right one for this project.

00:12:48,280 --> 00:12:57,380
So, to then develop this new feature, I found this package that allows you to set up the

00:12:57,380 --> 00:12:58,870
configuration.

00:12:58,870 --> 00:13:04,430
It was very easy to include this package in my project.

00:13:04,430 --> 00:13:14,300
And in this case, I wanted the feeder to start working only if I was the immediate sender.

00:13:14,300 --> 00:13:21,470
So, this was the feeder before it became a robot.

00:13:21,470 --> 00:13:26,610
And after a lot of time developing and testing yeah.

00:13:26,610 --> 00:13:32,220
The feeder is called Sascha.

00:13:32,220 --> 00:13:36,110
I finished it with this final structure.

00:13:36,110 --> 00:13:39,130
That's awesome.

00:13:39,130 --> 00:13:47,449
With the help of my friend because there are a lot of things that I can't do.

00:13:47,449 --> 00:13:51,410
So, we included those.

00:13:51,410 --> 00:13:58,149
Before that it was just one tube.

00:13:58,149 --> 00:14:08,060
I want to say this separation of those two is made by was made by that.

00:14:08,060 --> 00:14:22,320
So, I can say that the dream that I had when I was a child came true.

00:14:22,320 --> 00:14:48,139
[ Applause ] So, I'm building Sascha and getting all these

00:14:48,139 --> 00:14:54,589
made me know I wanted to do more projects involving robotics.

00:14:54,589 --> 00:15:00,370
That there are a lot of potential use cases of home automation that I would love to implement

00:15:00,370 --> 00:15:08,870
like controlling nonsmart things like lights or the airconditioner.

00:15:08,870 --> 00:15:13,990
Or controlling the temperature of the room.

00:15:13,990 --> 00:15:24,339
So, I think that it's you can build this feeder just with a little JavaScript knowledge.

00:15:24,339 --> 00:15:26,300
It's not too complicated.

00:15:26,300 --> 00:15:34,529
And it's a nice activity to teach you how to code.

00:15:34,529 --> 00:15:41,019
Even if there are parts that involve not coding like building the structure and gluing pieces,

00:15:41,019 --> 00:15:49,880
et cetera, why is it a nice activity to code?

00:15:49,880 --> 00:15:57,779
You can teach conditionals and setting up packages and the microcontroller so you can

00:15:57,779 --> 00:16:03,110
introducing beginners to the art of setting up their computers.

00:16:03,110 --> 00:16:17,959
I don't know much JavaScript because I started learning to program like two years ago.

00:16:17,959 --> 00:16:24,939
But I'm sure that there are amazing projects to be built and to be shown.

00:16:24,939 --> 00:16:32,889
Maybe those projects can inspire others other people to the things to facilitate chores

00:16:32,889 --> 00:16:40,850
or change how they interact with their home just with a little bit of code.

00:16:40,850 --> 00:16:49,200
So, that's all I have.

00:16:49,200 --> 00:16:55,230

YouTube URL: https://www.youtube.com/watch?v=GJ7zLofY1V8


