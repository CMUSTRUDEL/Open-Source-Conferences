Title: Vito Chin: Automate Your Electronic Life With The JS Ecosystem - JSConf.Asia 2016
Publication date: 2016-12-20
Playlist: JSConf.Asia 2016
Description: 
	Bots and machine learning are all the rave these days. But does it feel like we’re being force-fed pre-packaged AI that we do not have much autonomy over? The greatest potential in leveraging computer-based automation for the individual should be one that we can teach to serve the need of its personal owner. Sometimes, we may need robots that drives for us less than an automated process that helps us with the increasing chores that we do online, repetitively and sometimes seemingly futile. For example, how many times had you wondered if the computer can just download the CSV of your bank statement for you (in the absence of proper APIs), process it and augment it to your ledger automatically? Or the times where you wish there could be an easier way to tell the computer to do something on bash than to issue a command with 5 parameters? Javascript has all the answer for you, with tools such as Nightmare.JS to automate browser-based activities, CLI frameworks such as Vorpal and of course the biggest collection of packages in the world that is npm. The trick to continuous harmony is to find something that can gel all of these cool Javascript tech together and run itself as a continuous concern, essentially becoming a simpler computer-based version of yourself, augmented. In this quick talk, I will share my little adventure and experiment trying to automate the boring bits of my electronic life with such a JavaScript tool called Jodot.

Vito had been looking for that special something that can maximise his code and family time for quite some number of years. Recently, he believe he might just had found it within the asynchronous nature of JavaScript and npm. That aside, he’s into cloud and software development stuffs. He co-authored PHP Development in the Cloud and maintains Gmagick (pecl.php.net/gmagick)


JSConf.Asia - Capitol Theatre, Singapore - 25+26 November 2016.

Source: https://2016.jsconf.asia/
Slides: https://speakerdeck.com/vitoc/automate-your-electronic-life-with-the-js-ecosystem#

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:20,100 --> 00:00:29,650
everyone so this is me in a garden on

00:00:24,940 --> 00:00:33,850
the weekend reading a book right so very

00:00:29,650 --> 00:00:37,480
chill and here's the cognitive channel

00:00:33,850 --> 00:00:39,100
between the book and my brain as you can

00:00:37,480 --> 00:00:42,610
see there's a clear bandwidth and this

00:00:39,100 --> 00:00:44,650
is where the bandwidth between the

00:00:42,610 --> 00:00:50,890
cognitive load and the brain is at its

00:00:44,650 --> 00:00:53,590
highest so here's someone on the train

00:00:50,890 --> 00:00:57,310
that I took a photograph of without

00:00:53,590 --> 00:01:00,190
permission so he's looking at his phone

00:00:57,310 --> 00:01:05,080
and while looking at his phone he might

00:01:00,190 --> 00:01:06,960
have been inspired to catch a new Star

00:01:05,080 --> 00:01:09,970
Wars movie that's coming out soon right

00:01:06,960 --> 00:01:12,760
so you might want to do it on a weekend

00:01:09,970 --> 00:01:16,659
on a specific date that the movie is

00:01:12,760 --> 00:01:17,979
launching so then he goes about setting

00:01:16,659 --> 00:01:20,320
a reminder because you would want to do

00:01:17,979 --> 00:01:25,420
it right then and he doesn't want to

00:01:20,320 --> 00:01:29,409
remember the launch deal so this is how

00:01:25,420 --> 00:01:33,250
the community channel looks like on your

00:01:29,409 --> 00:01:35,650
left is the screen on the phone and on

00:01:33,250 --> 00:01:38,470
your right is the brain right in the

00:01:35,650 --> 00:01:42,780
train the cognitive resistances and

00:01:38,470 --> 00:01:47,590
friction is higher and therefore the

00:01:42,780 --> 00:01:49,720
bandwidth is lower right so there are

00:01:47,590 --> 00:01:52,030
the noises and the distraction right so

00:01:49,720 --> 00:01:55,360
while thinking about the next Star Wars

00:01:52,030 --> 00:01:57,159
movie he might have recollected his

00:01:55,360 --> 00:02:00,040
experience with the previous novels

00:01:57,159 --> 00:02:01,900
movie and the cycle goes on right and

00:02:00,040 --> 00:02:04,570
then you know there might be remembering

00:02:01,900 --> 00:02:07,570
one of the characters in it and you know

00:02:04,570 --> 00:02:10,659
on and on so sometimes this resistance

00:02:07,570 --> 00:02:14,230
may cause partial absorption of the

00:02:10,659 --> 00:02:19,540
cognitive load or even worse total loss

00:02:14,230 --> 00:02:23,560
of intention so comparing this situation

00:02:19,540 --> 00:02:26,769
and the situation of myself reading the

00:02:23,560 --> 00:02:30,040
book right you'll find that this is

00:02:26,769 --> 00:02:33,430
actually a stressful situation France is

00:02:30,040 --> 00:02:38,109
introduced subconsciously into that act

00:02:33,430 --> 00:02:40,719
itself so in our lives there are many of

00:02:38,109 --> 00:02:43,019
these subconsciously stressful

00:02:40,719 --> 00:02:46,389
situations that can be avoided

00:02:43,019 --> 00:02:50,639
electronically setting reminder is just

00:02:46,389 --> 00:02:54,639
one of the example so expenses claim

00:02:50,639 --> 00:02:57,430
online bills etc alright so I said about

00:02:54,639 --> 00:02:59,949
thinking could there be a better way of

00:02:57,430 --> 00:03:03,219
interacting with computers where we get

00:02:59,949 --> 00:03:06,309
to a point where we can be continuously

00:03:03,219 --> 00:03:08,139
and lightened rather than continuously

00:03:06,309 --> 00:03:12,099
torturing ourselves with this repetitive

00:03:08,139 --> 00:03:15,909
cha computers can be the bicycle of our

00:03:12,099 --> 00:03:20,680
mind pouring from steve jobs so I said

00:03:15,909 --> 00:03:24,459
about delegating a lot of my chores into

00:03:20,680 --> 00:03:29,169
a note process die named Joe dot so Joe

00:03:24,459 --> 00:03:31,049
dot is a NPM package that you can

00:03:29,169 --> 00:03:36,969
install and it helps you absorb

00:03:31,049 --> 00:03:39,430
repetitive electronic duties so the

00:03:36,969 --> 00:03:42,309
first thing that we need to know is when

00:03:39,430 --> 00:03:44,799
dealing with Joe da is to have a list of

00:03:42,309 --> 00:03:47,919
these duties so I thought it would be

00:03:44,799 --> 00:03:50,349
nice to have it centralized so that we

00:03:47,919 --> 00:03:52,269
know that we know the number of duties

00:03:50,349 --> 00:03:54,519
that do not is handling it's much

00:03:52,269 --> 00:03:58,839
clearer that way right so I said about

00:03:54,519 --> 00:04:03,699
doing this and I chose JSON as the as

00:03:58,839 --> 00:04:06,339
the definition structure for this and I

00:04:03,699 --> 00:04:09,339
use I use this package called histories

00:04:06,339 --> 00:04:13,089
on which is which allows me to get

00:04:09,339 --> 00:04:15,609
comments into in within the text

00:04:13,089 --> 00:04:17,170
definition itself so the comments are

00:04:15,609 --> 00:04:17,739
very helpful as you can see otherwise it

00:04:17,170 --> 00:04:22,090
seems

00:04:17,739 --> 00:04:26,110
it machine is right so once you have

00:04:22,090 --> 00:04:29,199
that least I said about constructing the

00:04:26,110 --> 00:04:32,830
duties itself so the first duty that

00:04:29,199 --> 00:04:35,349
Jojo has to do for me as something that

00:04:32,830 --> 00:04:38,169
i delegated to is to tell me that it's a

00:04:35,349 --> 00:04:40,870
life because I wouldn't want process

00:04:38,169 --> 00:04:42,940
that you know i delegate duties to to to

00:04:40,870 --> 00:04:46,710
die off and i don't know you and my

00:04:42,940 --> 00:04:48,880
bills doesn't get paid or my you know my

00:04:46,710 --> 00:04:51,759
my electronic choice doesn't get done

00:04:48,880 --> 00:04:55,539
right so the first base case is to tell

00:04:51,759 --> 00:04:59,229
it to tell me that I'm a life that he's

00:04:55,539 --> 00:05:04,900
a life dude I mean it is a life so okay

00:04:59,229 --> 00:05:08,199
so any duties can be packaged as and

00:05:04,900 --> 00:05:11,889
shared publicly on NPM or it could be

00:05:08,199 --> 00:05:18,460
ran locally as with a local install flag

00:05:11,889 --> 00:05:20,770
set to true so what does is it gets the

00:05:18,460 --> 00:05:23,979
least that we saw previously it runs

00:05:20,770 --> 00:05:26,650
through it and for each item in the

00:05:23,979 --> 00:05:30,820
array it actually installs the package

00:05:26,650 --> 00:05:37,150
from NPM via the NPM I package that's

00:05:30,820 --> 00:05:40,750
also from the song also for mpm so once

00:05:37,150 --> 00:05:46,599
its installed the duty it actually Fox a

00:05:40,750 --> 00:05:51,460
duty process as a child process and it

00:05:46,599 --> 00:05:56,919
starts sending duty calls to the trial

00:05:51,460 --> 00:05:59,469
process duty so this duty call can be

00:05:56,919 --> 00:06:03,940
scheduled with this definition here it's

00:05:59,469 --> 00:06:06,909
a crown expression or a duty can be

00:06:03,940 --> 00:06:13,210
called from another duty this is useful

00:06:06,909 --> 00:06:16,270
I will see very soon so duties can have

00:06:13,210 --> 00:06:18,909
parameters as well right so within this

00:06:16,270 --> 00:06:21,789
Duty definition I've included five

00:06:18,909 --> 00:06:23,880
parameters to a duty cocktail and mill

00:06:21,789 --> 00:06:27,400
so this Duty is essentially about

00:06:23,880 --> 00:06:30,039
killing that lock file so this closes

00:06:27,400 --> 00:06:31,639
the loop of Judah telling me is alive

00:06:30,039 --> 00:06:33,830
but it's actually logging it too

00:06:31,639 --> 00:06:36,020
Oh a lot far right so but now I need it

00:06:33,830 --> 00:06:38,960
to actually tell me and the interface

00:06:36,020 --> 00:06:42,439
between me and Jo dot can be you know a

00:06:38,960 --> 00:06:45,680
meal a meal from Joe dot so what we have

00:06:42,439 --> 00:06:48,499
here is till this lock file look out for

00:06:45,680 --> 00:06:54,050
this string and if you find it you know

00:06:48,499 --> 00:06:57,590
send it to me email so this is the

00:06:54,050 --> 00:06:59,900
implementation of the duty so the idea

00:06:57,590 --> 00:07:03,469
is that all of these duties can be

00:06:59,900 --> 00:07:05,360
assembled with NPM packages and NPM as

00:07:03,469 --> 00:07:08,659
we know it has so many features and

00:07:05,360 --> 00:07:10,580
functionalities right so these features

00:07:08,659 --> 00:07:13,639
and functionalities as time Sanjay was

00:07:10,580 --> 00:07:15,319
saying later earlier are very capable

00:07:13,639 --> 00:07:19,520
you know we could use nightmare we could

00:07:15,319 --> 00:07:20,960
use all sorts of here I used till you

00:07:19,520 --> 00:07:22,340
know to do all of these electronic

00:07:20,960 --> 00:07:24,949
charts and you don't have to be it

00:07:22,340 --> 00:07:26,479
doesn't have to be very complex you just

00:07:24,949 --> 00:07:29,240
need to know how to string together a

00:07:26,479 --> 00:07:33,680
couple of NPM packages facet some

00:07:29,240 --> 00:07:35,060
parameters and that's it so these are

00:07:33,680 --> 00:07:38,509
some of the ideas that I'm currently

00:07:35,060 --> 00:07:41,180
working on bashful file adding prices

00:07:38,509 --> 00:07:44,569
downloading remembering nuggets of

00:07:41,180 --> 00:07:47,210
information commit doing something when

00:07:44,569 --> 00:07:49,520
I commit easier way to do revolve and

00:07:47,210 --> 00:07:50,990
check links on my webpage for you know

00:07:49,520 --> 00:07:53,089
things that are links are no longer

00:07:50,990 --> 00:07:55,370
valid so these are some of the duties

00:07:53,089 --> 00:07:59,060
that if I do not delegate to Georgia I

00:07:55,370 --> 00:08:01,099
have to do and it's again it's a

00:07:59,060 --> 00:08:03,740
repetitive torture because it doesn't

00:08:01,099 --> 00:08:06,740
seems like a creative thing that I want

00:08:03,740 --> 00:08:10,669
to deal with on my computer so these are

00:08:06,740 --> 00:08:14,060
simple duties so I thought there might

00:08:10,669 --> 00:08:16,669
be an opportunity to add slightly more

00:08:14,060 --> 00:08:22,370
complex duties that make Joe doubt more

00:08:16,669 --> 00:08:25,610
useful so we could add a duty that gives

00:08:22,370 --> 00:08:29,949
me a volt power interface like this that

00:08:25,610 --> 00:08:33,979
deals with do this so it's like a mating

00:08:29,949 --> 00:08:39,130
so I could use a head of bots that deals

00:08:33,979 --> 00:08:41,990
with doodle as well so there are areas

00:08:39,130 --> 00:08:45,500
there are automation tools like grant

00:08:41,990 --> 00:08:47,780
and God that's similar in

00:08:45,500 --> 00:08:50,390
in terms of automation right it does

00:08:47,780 --> 00:08:52,520
automation as well right on there is

00:08:50,390 --> 00:08:54,740
another room for something like judo too

00:08:52,520 --> 00:08:58,220
because the domain is personal

00:08:54,740 --> 00:09:01,010
automation also there is another tool

00:08:58,220 --> 00:09:04,250
called p.m. to that does process

00:09:01,010 --> 00:09:10,100
handling but it doesn't do the ecosystem

00:09:04,250 --> 00:09:12,590
of duties that we can actually create so

00:09:10,100 --> 00:09:14,920
there are few more areas that car is

00:09:12,590 --> 00:09:18,590
currently i'm currently looking at

00:09:14,920 --> 00:09:25,430
making duties easier to create share

00:09:18,590 --> 00:09:28,760
fine install and configure so the

00:09:25,430 --> 00:09:31,280
written up a some documentation here if

00:09:28,760 --> 00:09:33,410
you want to check it out the current

00:09:31,280 --> 00:09:38,240
state is available everything is wave on

00:09:33,410 --> 00:09:41,710
github and that's it life can be better

00:09:38,240 --> 00:09:41,710
with javascript thank you

00:09:51,080 --> 00:09:53,140

YouTube URL: https://www.youtube.com/watch?v=HzjwmFv_MWk


