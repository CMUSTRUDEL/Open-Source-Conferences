Title: Tyson Hackwood & Hemanth Madhavarao: The API in 2017 - JSConf.Asia 2016
Publication date: 2016-12-15
Playlist: JSConf.Asia 2016
Description: 
	Let’s talk developer programs, standards, scale, SDKs, REST, good and bad practices, documentation, business, security, and regulation. Let's talk APIs.

Tyson has been actively involved in both Online Payments and Mobile Payments for 15 Years, with extensive experience working with both traditional and next generation businesses. He has worked with many of these organisations through his time in Braintree, PayPal and Vodafone.
He is excited by projects and businesses that are trying to enhance ‘mobile’ experiences and drive commerce by using the ‘invisible payments’ like Uber, Hotel Quickly, Hailo and many others in the Asia region.
Currently expanding the Asia footprint of Braintree, is involved with expanding access to the traditional payment methods as well as the emerging payment technologies. Is an avid mentor and educationalist, spending much of his time explaining ‘payments’ and how they can be used to grow commerce. Related to this is his love of ‘start-up’ t- shirts and stickers.

Hemanth ...
is a computer polyglot CLI, web and unix philosophy lover.
works as a Senior software engineer at PayPal Bangalore.
blog's about his experiments and experiences in programming.
contributes to FOSS via Github and is a part of the Yeoman, Webpack and many other notable teams.
curates Node Module Of The Week, JSfeatures.in. Coordinates BangaloreJS meetups.
mentors at GeeksKool.
is a community leader at DuckDuckGo and
is a Google Developer Expert.


JSConf.Asia - Capitol Theatre, Singapore - 25+26 November 2016.

Source: https://2016.jsconf.asia/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:00,500 --> 00:00:18,250
[Music]

00:00:19,800 --> 00:00:29,890
so good afternoon has to know so I gotta

00:00:28,120 --> 00:00:34,630
give a quick introduction on the topic

00:00:29,890 --> 00:00:36,070
the API I think everybody literally if I

00:00:34,630 --> 00:00:39,690
would ask for hands I would be surprised

00:00:36,070 --> 00:00:41,890
if I don't see anybody has used an API I

00:00:39,690 --> 00:00:43,510
I'm a hundred percent certain you have

00:00:41,890 --> 00:00:45,970
it's that you big quiz these days but it

00:00:43,510 --> 00:00:49,540
it's kind of assassin on in them for a

00:00:45,970 --> 00:00:51,280
rest api these days although pretty much

00:00:49,540 --> 00:00:54,130
everything that is interface' belitz can

00:00:51,280 --> 00:00:56,620
of an api if you think about it even if

00:00:54,130 --> 00:00:58,210
you go to your bank clerk you're

00:00:56,620 --> 00:01:01,390
interfacing with them you reach out your

00:00:58,210 --> 00:01:03,670
credit card form right it's essentially

00:01:01,390 --> 00:01:05,560
an interface it's not very it automated

00:01:03,670 --> 00:01:07,479
it's not an application programmable

00:01:05,560 --> 00:01:12,190
interface but it is an interface so if

00:01:07,479 --> 00:01:13,750
you think around the world or you think

00:01:12,190 --> 00:01:16,210
the world in the sense of these

00:01:13,750 --> 00:01:18,030
interfaces you see how how much

00:01:16,210 --> 00:01:20,380
interfacing day is going on every day

00:01:18,030 --> 00:01:22,870
now we want to go into these interfaces

00:01:20,380 --> 00:01:25,060
that we work with more so we're going to

00:01:22,870 --> 00:01:27,940
talk about rest we're going to talk

00:01:25,060 --> 00:01:29,920
about other forms of AP is we're going

00:01:27,940 --> 00:01:32,530
to talk about things that are happening

00:01:29,920 --> 00:01:34,000
inside companies and outside companies

00:01:32,530 --> 00:01:35,890
because let's face it wherever

00:01:34,000 --> 00:01:39,220
integration needs to happen is typically

00:01:35,890 --> 00:01:41,979
add these borders and before we go deep

00:01:39,220 --> 00:01:43,119
into this topic I want to have Tyson at

00:01:41,979 --> 00:01:46,119
him and introduce themselves really

00:01:43,119 --> 00:01:49,150
quick in a few sentences so maybe you

00:01:46,119 --> 00:01:52,420
can do that if you get a few sentences

00:01:49,150 --> 00:01:56,590
so yes my name's Tyson heck would I work

00:01:52,420 --> 00:01:59,200
for for Braintree i started Braintree in

00:01:56,590 --> 00:02:02,619
Asia as first employee I actually had

00:01:59,200 --> 00:02:04,420
left a company called paypal and joined

00:02:02,619 --> 00:02:06,280
a start-up out of Chicago and then was

00:02:04,420 --> 00:02:09,850
acquired by that company

00:02:06,280 --> 00:02:12,190
ended back in inside paypal so my paypal

00:02:09,850 --> 00:02:15,670
korea is six and a half years in total

00:02:12,190 --> 00:02:17,440
and it been here for about two and a

00:02:15,670 --> 00:02:18,940
half in singapore and still a very

00:02:17,440 --> 00:02:20,410
technical person though in one way or

00:02:18,940 --> 00:02:22,900
the other night comes to the top yeah

00:02:20,410 --> 00:02:26,319
exactly sort of technical here technical

00:02:22,900 --> 00:02:28,480
enough a month yeah I a workers pay

00:02:26,319 --> 00:02:32,080
paralyzer full stacks off for engineers

00:02:28,480 --> 00:02:34,330
and I'm a free software enthusiast I've

00:02:32,080 --> 00:02:35,590
been doing a lot of open source from two

00:02:34,330 --> 00:02:38,590
thousand eight or so and things like

00:02:35,590 --> 00:02:41,019
that I've been part of open source

00:02:38,590 --> 00:02:43,300
projects like yo men are web pack and

00:02:41,019 --> 00:02:47,530
things like that so that keeps me

00:02:43,300 --> 00:02:49,450
running off work and let's meet me so

00:02:47,530 --> 00:02:50,860
far alright so how did I come up with

00:02:49,450 --> 00:02:52,330
this topic well it turns out I was

00:02:50,860 --> 00:02:54,130
actually working for Standard Chartered

00:02:52,330 --> 00:02:55,840
as I mentioned for the last three months

00:02:54,130 --> 00:02:58,690
and there's a push here in singapore

00:02:55,840 --> 00:03:00,580
from the monetary authority that every

00:02:58,690 --> 00:03:03,459
financial institution of a certain size

00:03:00,580 --> 00:03:06,190
has to open up AP ice and i think that's

00:03:03,459 --> 00:03:07,600
a pretty interesting move that have not

00:03:06,190 --> 00:03:08,800
never thought about that like suddenly

00:03:07,600 --> 00:03:10,660
we have to deal with government

00:03:08,800 --> 00:03:12,549
regulations on interfaces we create or

00:03:10,660 --> 00:03:15,130
something i don't it's not that bad yet

00:03:12,549 --> 00:03:18,420
but like it's just one step away from

00:03:15,130 --> 00:03:20,440
that and I'm like wow this is crazy like

00:03:18,420 --> 00:03:22,209
how does that happen and for those that

00:03:20,440 --> 00:03:24,760
are not from here the Singapore

00:03:22,209 --> 00:03:26,380
government has a scheme or push called

00:03:24,760 --> 00:03:28,390
smart nation that is going on over the

00:03:26,380 --> 00:03:33,100
next year's where they want to automate

00:03:28,390 --> 00:03:35,680
and enhance integrate ability with big

00:03:33,100 --> 00:03:38,890
companies customs postage services

00:03:35,680 --> 00:03:42,269
financial institutions you name it to

00:03:38,890 --> 00:03:45,190
increase the efficiency of the labor

00:03:42,269 --> 00:03:47,709
essentially because the bank clerk that

00:03:45,190 --> 00:03:48,940
takes your forms what are they doing who

00:03:47,709 --> 00:03:50,920
are we kidding they're just taking a

00:03:48,940 --> 00:03:52,600
form typing it into computer right if

00:03:50,920 --> 00:03:54,459
you take that part out you might

00:03:52,600 --> 00:03:57,970
actually end up with less mistakes in

00:03:54,459 --> 00:03:59,440
the data it's the human factor so this

00:03:57,970 --> 00:04:00,910
is what made me think about it and I was

00:03:59,440 --> 00:04:03,160
trying to help them about okay how do we

00:04:00,910 --> 00:04:05,549
set up an API and what is required to do

00:04:03,160 --> 00:04:08,320
an API and here we have people that

00:04:05,549 --> 00:04:10,769
essentially work in businesses who do

00:04:08,320 --> 00:04:13,930
nothing else but being a really good API

00:04:10,769 --> 00:04:15,760
so maybe you want to drag us to the

00:04:13,930 --> 00:04:17,950
beginnings of braintree because I think

00:04:15,760 --> 00:04:19,180
it was very much set out to be exactly

00:04:17,950 --> 00:04:21,039
that

00:04:19,180 --> 00:04:23,020
payment platform as a service and like

00:04:21,039 --> 00:04:28,090
how you thought about creating a product

00:04:23,020 --> 00:04:30,430
that is an API well I think you know

00:04:28,090 --> 00:04:32,110
braintree had a life as developer for

00:04:30,430 --> 00:04:34,330
developers for a particular reason it

00:04:32,110 --> 00:04:36,669
started with you know there were no

00:04:34,330 --> 00:04:38,259
sales people in the organization at the

00:04:36,669 --> 00:04:41,979
start and worked for many many years

00:04:38,259 --> 00:04:43,660
because developers have driven the

00:04:41,979 --> 00:04:46,030
requirements of the product and or

00:04:43,660 --> 00:04:48,880
service not just in payments in general

00:04:46,030 --> 00:04:52,960
but Braintree has it its core is a

00:04:48,880 --> 00:04:55,780
requirement to both me meet the needs or

00:04:52,960 --> 00:04:57,910
meet the needs for payments but probably

00:04:55,780 --> 00:05:01,060
more importantly Braintree started with

00:04:57,910 --> 00:05:04,360
an idea which was it shouldn't be so

00:05:01,060 --> 00:05:06,520
hard right so anyone that's integrated

00:05:04,360 --> 00:05:08,500
payments here knows that it's not being

00:05:06,520 --> 00:05:11,199
it's not always pleasurable or fun or

00:05:08,500 --> 00:05:14,050
interesting most of times it's difficult

00:05:11,199 --> 00:05:15,340
because it's usually from businesses

00:05:14,050 --> 00:05:17,139
that have been around a very long time

00:05:15,340 --> 00:05:19,780
and may not have the services that

00:05:17,139 --> 00:05:24,090
plug-in easily it's usually a push

00:05:19,780 --> 00:05:26,860
rather than pull concept in payments

00:05:24,090 --> 00:05:31,030
Braintree set out to do it differently

00:05:26,860 --> 00:05:34,510
not just from even a code base but also

00:05:31,030 --> 00:05:36,460
from a commercial base so again anyone

00:05:34,510 --> 00:05:38,860
that had the joy of starting a start-up

00:05:36,460 --> 00:05:39,970
knows it's not easy to either even get a

00:05:38,860 --> 00:05:41,320
bank account get your business

00:05:39,970 --> 00:05:43,330
registered I mean it's a lot easier

00:05:41,320 --> 00:05:45,789
today but let's think back seven eight

00:05:43,330 --> 00:05:49,000
years ago surprising it doesn't seem

00:05:45,789 --> 00:05:52,479
that long but it was and is you know has

00:05:49,000 --> 00:05:54,639
difficulty so Braintree like a lack of a

00:05:52,479 --> 00:05:56,889
number of other of the emerging

00:05:54,639 --> 00:05:59,500
companies in the infant act said which

00:05:56,889 --> 00:06:00,849
shouldn't be so hard so at the core what

00:05:59,500 --> 00:06:03,550
we believe and I guess this is what

00:06:00,849 --> 00:06:05,800
others should build for is make your

00:06:03,550 --> 00:06:08,620
product easy make it accessible make it

00:06:05,800 --> 00:06:10,690
like it that something that ships is

00:06:08,620 --> 00:06:12,220
essentially user experience right that's

00:06:10,690 --> 00:06:14,110
what you think about if you create a UI

00:06:12,220 --> 00:06:17,460
on the web or for mobile it's like you

00:06:14,110 --> 00:06:20,259
think about Oh easy fast you know like

00:06:17,460 --> 00:06:22,210
don't overload me make it a wizard like

00:06:20,259 --> 00:06:24,190
so is there such a thing like developer

00:06:22,210 --> 00:06:26,229
experience and that sends it was all

00:06:24,190 --> 00:06:27,789
developer late I mean it you know each

00:06:26,229 --> 00:06:29,300
person that came into the business was

00:06:27,789 --> 00:06:31,789
you know not from a

00:06:29,300 --> 00:06:33,560
they didn't have experience in you know

00:06:31,789 --> 00:06:35,360
fintech services what the hadn't

00:06:33,560 --> 00:06:36,710
experiences were building for other

00:06:35,360 --> 00:06:41,479
products and finding it hard to

00:06:36,710 --> 00:06:43,210
integrate a FinTech I mean look banks do

00:06:41,479 --> 00:06:45,560
a great job at many different pillars

00:06:43,210 --> 00:06:47,479
when it comes to integration when it

00:06:45,560 --> 00:06:49,909
comes to innovation it hasn't been great

00:06:47,479 --> 00:06:51,860
for a number of years in many respects

00:06:49,909 --> 00:06:53,569
and we often say if they'll really good

00:06:51,860 --> 00:06:54,979
their job companies like Braintree

00:06:53,569 --> 00:06:56,180
shouldn't exist companies like PayPal

00:06:54,979 --> 00:06:58,069
shouldn't exist because they should have

00:06:56,180 --> 00:06:59,800
got it right a long time ago the

00:06:58,069 --> 00:07:02,090
advantage now as we work closely with

00:06:59,800 --> 00:07:04,039
banks and other financial institutions

00:07:02,090 --> 00:07:05,810
because again it's it's now that that

00:07:04,039 --> 00:07:08,750
middleware or being invisible in making

00:07:05,810 --> 00:07:10,789
sure commerce works so our hope premise

00:07:08,750 --> 00:07:12,919
are all promises just to make commerce

00:07:10,789 --> 00:07:14,870
work use this because we're quick and

00:07:12,919 --> 00:07:17,300
easy and we take the pain out of

00:07:14,870 --> 00:07:18,560
payments and make sure it works but

00:07:17,300 --> 00:07:20,120
actually get on to the function which is

00:07:18,560 --> 00:07:21,500
the most important to you which is your

00:07:20,120 --> 00:07:24,379
business you know you shouldn't you

00:07:21,500 --> 00:07:26,449
shouldn't need to be and ever spend that

00:07:24,379 --> 00:07:28,669
much time on being payment experts so

00:07:26,449 --> 00:07:31,400
yeah and their topic came Anthea you are

00:07:28,669 --> 00:07:33,740
in a proper developer in that sense

00:07:31,400 --> 00:07:38,330
working for paypal and when you

00:07:33,740 --> 00:07:40,279
integrate with api's on all times what's

00:07:38,330 --> 00:07:41,719
maybe the most painful experience you

00:07:40,279 --> 00:07:44,330
had with API so you don't need to name

00:07:41,719 --> 00:07:47,449
who it was it was just what about it is

00:07:44,330 --> 00:07:49,490
the most annoying piece so that you if

00:07:47,449 --> 00:07:53,180
you build api's ever can maybe avoid

00:07:49,490 --> 00:07:54,830
these things yeah the most painful part

00:07:53,180 --> 00:07:56,029
like there are many painful parts like

00:07:54,830 --> 00:07:58,550
probably have to talk about the most

00:07:56,029 --> 00:08:00,770
painful part rather I think this is just

00:07:58,550 --> 00:08:02,900
very much common I not not any

00:08:00,770 --> 00:08:05,120
particular company as such but most of

00:08:02,900 --> 00:08:07,789
the people who use API sand integrate

00:08:05,120 --> 00:08:09,650
them face this issue one of the major

00:08:07,789 --> 00:08:12,259
ones being up the document is out of

00:08:09,650 --> 00:08:14,419
sync say say you have a schema based on

00:08:12,259 --> 00:08:16,969
which you are trying to build your UI so

00:08:14,419 --> 00:08:18,919
you're kind of not wait assumes it use

00:08:16,969 --> 00:08:20,750
case where the back end isn't ready it

00:08:18,919 --> 00:08:23,090
with their services but you just have

00:08:20,750 --> 00:08:25,190
the schema with you and your being your

00:08:23,090 --> 00:08:26,599
friend and assuming that mocking a

00:08:25,190 --> 00:08:29,060
response that the back and would give

00:08:26,599 --> 00:08:31,520
but sometime down the line the schema

00:08:29,060 --> 00:08:34,399
got changed and once the back and

00:08:31,520 --> 00:08:36,740
integrates the API whatever response you

00:08:34,399 --> 00:08:39,560
get is out of sync that's one of the

00:08:36,740 --> 00:08:41,539
major pain factors all right so quality

00:08:39,560 --> 00:08:42,419
of documentation against interface

00:08:41,539 --> 00:08:44,790
obviously I guess

00:08:42,419 --> 00:08:46,380
it's for most of us kind of a pain point

00:08:44,790 --> 00:08:48,240
if it's out of date and not maintained

00:08:46,380 --> 00:08:51,120
very well which which leads right into

00:08:48,240 --> 00:08:52,769
the developer program almost right

00:08:51,120 --> 00:08:54,570
because if you don't have an intentional

00:08:52,769 --> 00:08:57,120
effort supporting these interfaces that

00:08:54,570 --> 00:08:59,010
you're building documenting them well

00:08:57,120 --> 00:09:00,660
keeping it up-to-date which needs to go

00:08:59,010 --> 00:09:04,019
hand in hand with the development of the

00:09:00,660 --> 00:09:05,820
AP is how do you think about a developer

00:09:04,019 --> 00:09:07,800
program that's more for outside facing

00:09:05,820 --> 00:09:10,589
API is rather than inside facing api's

00:09:07,800 --> 00:09:12,389
with a new corporation right what makes

00:09:10,589 --> 00:09:14,399
a good developer program then maybe you

00:09:12,389 --> 00:09:17,639
have examples outside of PayPal

00:09:14,399 --> 00:09:19,800
braintree yeah i would like to quote an

00:09:17,639 --> 00:09:22,170
interesting node module called swagger

00:09:19,800 --> 00:09:25,620
here I assume two of them are using it

00:09:22,170 --> 00:09:28,260
already that the advantage of that being

00:09:25,620 --> 00:09:30,510
is it or Auto generates the documents

00:09:28,260 --> 00:09:32,550
for you as as a menu update or schema

00:09:30,510 --> 00:09:35,070
you have the document which is

00:09:32,550 --> 00:09:36,690
reflecting your current schema something

00:09:35,070 --> 00:09:38,970
like that would really be advantageous

00:09:36,690 --> 00:09:42,899
the other pain factor would be a

00:09:38,970 --> 00:09:45,360
debugging stuff say if I could cut an

00:09:42,899 --> 00:09:47,310
example of Sailor there was a case where

00:09:45,360 --> 00:09:49,440
there was a missing transaction from

00:09:47,310 --> 00:09:50,850
from a merchant right so the merchant

00:09:49,440 --> 00:09:53,430
has done a transaction but he doesn't

00:09:50,850 --> 00:09:55,440
see it in the list of transactions so

00:09:53,430 --> 00:09:59,579
how do you how do you go about debugging

00:09:55,440 --> 00:10:01,860
it like at what layer this i read it

00:09:59,579 --> 00:10:03,480
really occur was it was it the API

00:10:01,860 --> 00:10:06,630
failed to fetch the data from the DB or

00:10:03,480 --> 00:10:09,089
the UI fetched a failed to fetch the API

00:10:06,630 --> 00:10:11,550
or did the UI misinterpret the API or

00:10:09,089 --> 00:10:13,860
did did the the API misinterpret the

00:10:11,550 --> 00:10:15,990
data which is which it fetched from the

00:10:13,860 --> 00:10:18,170
DB so there are a lot of combinations

00:10:15,990 --> 00:10:20,670
and scenarios that can happen there so

00:10:18,170 --> 00:10:23,040
debugging sums and some scenarios which

00:10:20,670 --> 00:10:25,410
you can't reproduce easily becomes very

00:10:23,040 --> 00:10:27,300
painful at times yeah so people at the

00:10:25,410 --> 00:10:30,000
time I remember had XCOM like funny

00:10:27,300 --> 00:10:32,310
story in 2007 I was a certified paypal

00:10:30,000 --> 00:10:34,500
engineer my got to go to all these tests

00:10:32,310 --> 00:10:36,390
and you know fill out forms and answer

00:10:34,500 --> 00:10:38,190
questions about how the hippie I said

00:10:36,390 --> 00:10:39,990
paypal work they did this at the sight

00:10:38,190 --> 00:10:41,310
of their their big conferences in the US

00:10:39,990 --> 00:10:42,600
and you could sign up for it I go

00:10:41,310 --> 00:10:44,940
through a bunch of courses and then you

00:10:42,600 --> 00:10:46,760
go to certification there's really funny

00:10:44,940 --> 00:10:50,040
nobody does that anymore right like an

00:10:46,760 --> 00:10:52,040
open-source API interface certificate

00:10:50,040 --> 00:10:54,950
and like you know now how to do

00:10:52,040 --> 00:10:56,390
integrate with an open-source API on

00:10:54,950 --> 00:10:58,310
or build one and Express or something

00:10:56,390 --> 00:11:00,170
but companies did this at the time and

00:10:58,310 --> 00:11:02,000
then there was a whole range of SDKs

00:11:00,170 --> 00:11:06,440
which eventually moved the interface

00:11:02,000 --> 00:11:08,840
from being on the web like a web service

00:11:06,440 --> 00:11:10,100
to like being inside of your coat right

00:11:08,840 --> 00:11:15,230
so that you can integrate with the

00:11:10,100 --> 00:11:18,080
library instead of an API now you can't

00:11:15,230 --> 00:11:20,810
really say API without what is the most

00:11:18,080 --> 00:11:23,720
modern trend in all most modern maybe

00:11:20,810 --> 00:11:26,900
depends on where you are and how to

00:11:23,720 --> 00:11:29,150
design any more ambitious application

00:11:26,900 --> 00:11:30,740
which would be the micro service

00:11:29,150 --> 00:11:32,960
architecture I think ten years ago they

00:11:30,740 --> 00:11:34,730
called it so ax and a service-oriented

00:11:32,960 --> 00:11:35,900
architecture it actually have something

00:11:34,730 --> 00:11:37,190
on that line I don't know if you

00:11:35,900 --> 00:11:41,260
remember this can we go to the slides

00:11:37,190 --> 00:11:44,840
really quick anybody remember that one

00:11:41,260 --> 00:11:49,730
it was the gravestone of the misled so I

00:11:44,840 --> 00:11:51,470
engineer so you know there was this joke

00:11:49,730 --> 00:11:54,140
that happened in an interview like I

00:11:51,470 --> 00:11:56,990
asked the candidate up do you use soap

00:11:54,140 --> 00:12:01,180
and he was like he was pretty end of

00:11:56,990 --> 00:12:01,180
episode is like yeah I use it every day

00:12:01,210 --> 00:12:08,000
so like these are all the buzz words I

00:12:04,910 --> 00:12:09,980
believe we had soap and then we had

00:12:08,000 --> 00:12:13,100
things like then the rest thing happened

00:12:09,980 --> 00:12:14,870
and then we had the full stack thing

00:12:13,100 --> 00:12:17,690
happening then we'll be like server less

00:12:14,870 --> 00:12:21,320
the cloud I feel it's all the buzz words

00:12:17,690 --> 00:12:24,110
but it's still the the old game with a

00:12:21,320 --> 00:12:25,310
new phase it's just a face and it will

00:12:24,110 --> 00:12:28,070
just face off with some other new

00:12:25,310 --> 00:12:29,990
buzzword but if you if you consider

00:12:28,070 --> 00:12:32,690
future of api's it would be more AP ice

00:12:29,990 --> 00:12:34,700
and probably a pas for AP ice so is that

00:12:32,690 --> 00:12:36,200
all going to be HTTP rest like I don't

00:12:34,700 --> 00:12:38,150
know you're like Braintree offers a

00:12:36,200 --> 00:12:41,080
bunch of AP ice is that always if you

00:12:38,150 --> 00:12:43,700
rest or what kind of API is are there

00:12:41,080 --> 00:12:45,440
what's even a bigger question me that's

00:12:43,700 --> 00:12:47,480
for sure but the nice part it's on the

00:12:45,440 --> 00:12:49,670
website you see so I mean to the point

00:12:47,480 --> 00:12:52,120
thing but let me know that you bring up

00:12:49,670 --> 00:12:55,850
more that it's not even just about today

00:12:52,120 --> 00:12:57,440
we we spend probably more time on making

00:12:55,850 --> 00:12:59,860
sure that we're available for all the

00:12:57,440 --> 00:13:01,940
modern platforms and emerging platforms

00:12:59,860 --> 00:13:03,800
we also know that there's a lot of

00:13:01,940 --> 00:13:05,780
legacy out there as well so we actually

00:13:03,800 --> 00:13:07,190
look to the communities to build those

00:13:05,780 --> 00:13:08,030
linkages as well because it's only so

00:13:07,190 --> 00:13:10,640
far you can go and

00:13:08,030 --> 00:13:12,320
the other aspect and I think importantly

00:13:10,640 --> 00:13:14,500
is there is only so far you can build

00:13:12,320 --> 00:13:17,090
with the financial service products

00:13:14,500 --> 00:13:19,570
especially in payments because if you go

00:13:17,090 --> 00:13:22,340
too far into someone else's backyard and

00:13:19,570 --> 00:13:24,230
there's a problem you know we're talking

00:13:22,340 --> 00:13:27,650
about real money here so you know we can

00:13:24,230 --> 00:13:29,390
actually have a detrimental impact so I

00:13:27,650 --> 00:13:31,370
think there's also you know if you're

00:13:29,390 --> 00:13:33,920
looking at the requirement of of any

00:13:31,370 --> 00:13:36,770
sort of service just always appreciate

00:13:33,920 --> 00:13:40,370
that you can only go so far before you

00:13:36,770 --> 00:13:42,410
know they might go into the wrong side

00:13:40,370 --> 00:13:44,570
of the the house to play with so we're

00:13:42,410 --> 00:13:46,640
really conscious that we provide the

00:13:44,570 --> 00:13:49,010
best version across whatever platform

00:13:46,640 --> 00:13:51,070
you're playing with so that you can draw

00:13:49,010 --> 00:13:54,230
down and create a transaction and and

00:13:51,070 --> 00:13:56,420
monitor and or you know protect yourself

00:13:54,230 --> 00:13:58,070
from fraud and or capture card details I

00:13:56,420 --> 00:14:00,890
mean look you know if you're not doing

00:13:58,070 --> 00:14:03,260
tokenization in your product you should

00:14:00,890 --> 00:14:06,920
have been for two or three years yeah so

00:14:03,260 --> 00:14:08,660
to me you know we have plenty of

00:14:06,920 --> 00:14:11,000
resource it comes down to making sure

00:14:08,660 --> 00:14:12,650
you integrate it right and it's like it

00:14:11,000 --> 00:14:14,960
needs to be purpose-built right and then

00:14:12,650 --> 00:14:16,730
that sounds so I think a good indicator

00:14:14,960 --> 00:14:18,230
like I've I know few companies these

00:14:16,730 --> 00:14:21,350
days specifically in Southeast Asia and

00:14:18,230 --> 00:14:23,690
maybe no to that build api's as a

00:14:21,350 --> 00:14:28,720
product like the the so-called platform

00:14:23,690 --> 00:14:31,460
as a service or integration as a service

00:14:28,720 --> 00:14:34,370
like that hasn't that typically thing we

00:14:31,460 --> 00:14:36,320
consume or use from companies that came

00:14:34,370 --> 00:14:40,130
up in Europe of the US but like here I

00:14:36,320 --> 00:14:41,870
have not seen like startups which is one

00:14:40,130 --> 00:14:43,910
of the industry's that you can't really

00:14:41,870 --> 00:14:46,940
disconnect from Singapore these days I

00:14:43,910 --> 00:14:49,340
haven't seen many come up with the

00:14:46,940 --> 00:14:52,730
product like that specifically targeted

00:14:49,340 --> 00:14:57,950
to enterprises for integrate ability it

00:14:52,730 --> 00:14:59,990
exists for sure but not not as much so

00:14:57,950 --> 00:15:02,390
purpose-built very important part there

00:14:59,990 --> 00:15:04,850
and I think a good indicator that its

00:15:02,390 --> 00:15:06,380
purpose build should be the fact that

00:15:04,850 --> 00:15:08,630
it's already a service you offer and

00:15:06,380 --> 00:15:10,880
people are liking it and they just would

00:15:08,630 --> 00:15:13,760
like to use it more efficiently like you

00:15:10,880 --> 00:15:15,440
know credit card applications things

00:15:13,760 --> 00:15:16,790
like that if banks move into the

00:15:15,440 --> 00:15:18,200
direction to make these things

00:15:16,790 --> 00:15:19,430
automations and Singapore is even

00:15:18,200 --> 00:15:22,040
talking about

00:15:19,430 --> 00:15:25,070
having a unified ID I think it's called

00:15:22,040 --> 00:15:27,380
my info that financial institutions can

00:15:25,070 --> 00:15:28,910
get access to which i think in other

00:15:27,380 --> 00:15:31,520
countries would raise every privacy flag

00:15:28,910 --> 00:15:32,990
on the planet here in Singapore it's

00:15:31,520 --> 00:15:34,370
like okay yeah we have all the citizen

00:15:32,990 --> 00:15:37,310
data why don't we make that available

00:15:34,370 --> 00:15:38,570
for institutions to use so that they

00:15:37,310 --> 00:15:40,310
don't need to ask you to fill out your

00:15:38,570 --> 00:15:41,600
form you just need to confirm that you

00:15:40,310 --> 00:15:44,060
would like to share your data with them

00:15:41,600 --> 00:15:45,950
and they can get your data set in the

00:15:44,060 --> 00:15:48,890
most current form from a government

00:15:45,950 --> 00:15:51,649
institution it's a interesting way to

00:15:48,890 --> 00:15:53,779
think about it and then well yeah I'm

00:15:51,649 --> 00:15:55,970
sure for those who shop online you've

00:15:53,779 --> 00:15:58,160
actually probably shared more data with

00:15:55,970 --> 00:16:00,589
the online store than you will your bank

00:15:58,160 --> 00:16:03,080
or government yet you feel people feel

00:16:00,589 --> 00:16:04,820
worried about where the data is and into

00:16:03,080 --> 00:16:06,500
certain point people should but I think

00:16:04,820 --> 00:16:08,660
the responsibility of anyone that's

00:16:06,500 --> 00:16:11,120
building a service needs to be to make

00:16:08,660 --> 00:16:13,220
sure the data is protected have service

00:16:11,120 --> 00:16:15,500
providers that can protect the data in

00:16:13,220 --> 00:16:19,209
the best fashion they can tokenization

00:16:15,500 --> 00:16:21,950
is a great first step especially if you

00:16:19,209 --> 00:16:23,180
have that secure that's not on site I

00:16:21,950 --> 00:16:26,570
think most people know that that's

00:16:23,180 --> 00:16:28,850
pretty much the yeah that's a gone idea

00:16:26,570 --> 00:16:32,209
you know there's no point storing

00:16:28,850 --> 00:16:33,529
anyone's data centrally or in your own

00:16:32,209 --> 00:16:36,050
servers anymore you know everything

00:16:33,529 --> 00:16:38,240
needs to be tokenized but to your point

00:16:36,050 --> 00:16:39,950
around you know building for purpose and

00:16:38,240 --> 00:16:42,620
for AP eyes and seeing the growth of AP

00:16:39,950 --> 00:16:44,510
is my thing would be that if you are if

00:16:42,620 --> 00:16:47,870
you are doing that this is two aspects

00:16:44,510 --> 00:16:50,480
to a really good a p.i usually number

00:16:47,870 --> 00:16:52,700
one is it's been built for a purpose but

00:16:50,480 --> 00:16:54,860
number two if you build it for your

00:16:52,700 --> 00:16:56,540
biggest customers or your biggest the

00:16:54,860 --> 00:16:58,459
biggest service provider you're working

00:16:56,540 --> 00:17:00,470
with there's a high chance that your

00:16:58,459 --> 00:17:02,180
other customers are going to require the

00:17:00,470 --> 00:17:04,970
same requirements or a subset of those

00:17:02,180 --> 00:17:06,500
will so if you look at braintree a lot

00:17:04,970 --> 00:17:08,720
of the product and service you see is

00:17:06,500 --> 00:17:10,459
because one of the customers we've

00:17:08,720 --> 00:17:12,709
worked with or many of the customers we

00:17:10,459 --> 00:17:14,270
work with have had that requirement so

00:17:12,709 --> 00:17:15,920
we build out a lot based on those

00:17:14,270 --> 00:17:18,020
requirements so the advantage is that

00:17:15,920 --> 00:17:19,579
you get to share in a lot of resource

00:17:18,020 --> 00:17:21,650
and development done by other large

00:17:19,579 --> 00:17:23,390
organizations and I think that's what

00:17:21,650 --> 00:17:25,880
you've got to look at yourselves for

00:17:23,390 --> 00:17:27,589
anything your building or using make

00:17:25,880 --> 00:17:28,820
sure it's building built by people that

00:17:27,589 --> 00:17:30,980
are you being used for the next

00:17:28,820 --> 00:17:32,169
generation not the previous make sure

00:17:30,980 --> 00:17:34,419
they built it in

00:17:32,169 --> 00:17:37,359
using it that the who else who ever else

00:17:34,419 --> 00:17:38,950
is using it also likes it and has helped

00:17:37,359 --> 00:17:40,299
develop it in some format now you're

00:17:38,950 --> 00:17:43,539
never going to know we're never going to

00:17:40,299 --> 00:17:45,070
say our this was built by X or Y or you

00:17:43,539 --> 00:17:46,809
know this is why this feature set is

00:17:45,070 --> 00:17:49,149
with ours yeah but you can pretty much

00:17:46,809 --> 00:17:50,859
assume it's been built for someone who

00:17:49,149 --> 00:17:53,080
we've worked with for for a while

00:17:50,859 --> 00:17:55,210
because they see a need and generally

00:17:53,080 --> 00:17:56,769
the need is customer LED and they want

00:17:55,210 --> 00:18:00,399
their customer to have a better

00:17:56,769 --> 00:18:02,799
experience do you have some something

00:18:00,399 --> 00:18:04,690
that you when you did you create ap ice

00:18:02,799 --> 00:18:06,879
in your life like yourself that we're

00:18:04,690 --> 00:18:08,289
exposed like things that developers

00:18:06,879 --> 00:18:10,779
definitely should take care of when

00:18:08,289 --> 00:18:13,659
creating an API I always start with with

00:18:10,779 --> 00:18:15,700
one of mine which is check whatever is

00:18:13,659 --> 00:18:17,529
your input data first before you do

00:18:15,700 --> 00:18:20,950
anything else and if it's even qualified

00:18:17,529 --> 00:18:24,489
to do anything for you and have proper

00:18:20,950 --> 00:18:26,499
errors but maybe yeah so add on so i

00:18:24,489 --> 00:18:29,679
would probably open the token ization

00:18:26,499 --> 00:18:32,919
probably have a single sign-on zorro

00:18:29,679 --> 00:18:34,679
tokens and things like that and the

00:18:32,919 --> 00:18:37,480
other one now everyone tend to do is

00:18:34,679 --> 00:18:39,429
have have a rate limit on your api's if

00:18:37,480 --> 00:18:42,129
you're opening it to the public so that

00:18:39,429 --> 00:18:43,659
it's not really misused and sometimes it

00:18:42,129 --> 00:18:45,820
gets tricky right so you are trying to

00:18:43,659 --> 00:18:47,980
block them probably on an IP or they

00:18:45,820 --> 00:18:50,049
could be switching on dynamic IPS or

00:18:47,980 --> 00:18:51,399
probably using some combination of their

00:18:50,049 --> 00:18:53,200
location that predict and probably even

00:18:51,399 --> 00:18:54,989
mocks or you can mock mock up everything

00:18:53,200 --> 00:18:57,970
so it sometimes get tricky to handle

00:18:54,989 --> 00:19:00,549
rate limits on how many requests App

00:18:57,970 --> 00:19:02,200
Engine on your open API is the

00:19:00,549 --> 00:19:03,429
other one that the other paradigm some

00:19:02,200 --> 00:19:05,200
of the companies are following or like

00:19:03,429 --> 00:19:08,919
like Google for example is like on in

00:19:05,200 --> 00:19:10,779
white api's I don't know how good go to

00:19:08,919 --> 00:19:13,210
go to design is that like you get a user

00:19:10,779 --> 00:19:14,440
API is only on in white there might be a

00:19:13,210 --> 00:19:16,450
designer there might be a reason behind

00:19:14,440 --> 00:19:18,519
there might be a business that might be

00:19:16,450 --> 00:19:20,379
a business decision as well but that's

00:19:18,519 --> 00:19:22,480
that's a new paradigm that's opening up

00:19:20,379 --> 00:19:24,820
on interesting now on the last thing

00:19:22,480 --> 00:19:27,249
looking forward this talk is about 2017

00:19:24,820 --> 00:19:29,590
so what's coming up maybe some of you

00:19:27,249 --> 00:19:32,139
have read this I saw that like they're

00:19:29,590 --> 00:19:35,139
certain website that have gone to web

00:19:32,139 --> 00:19:37,480
sockets for serving advertisements yeah

00:19:35,139 --> 00:19:39,100
yeah so that it can't be blocked by your

00:19:37,480 --> 00:19:41,019
ad blocker anymore because it's a socket

00:19:39,100 --> 00:19:42,580
connection to their default data

00:19:41,019 --> 00:19:43,330
connection and it's just that all the

00:19:42,580 --> 00:19:47,020
advertisements

00:19:43,330 --> 00:19:48,730
fet through the web socket so you know

00:19:47,020 --> 00:19:51,250
like it's one way of integrating and

00:19:48,730 --> 00:19:54,280
surrounding things like now I he read

00:19:51,250 --> 00:19:57,130
that firebase is actually has gone back

00:19:54,280 --> 00:19:59,020
to XMPP because they thought web sockets

00:19:57,130 --> 00:20:04,390
was too heavy for what they were doing

00:19:59,020 --> 00:20:05,980
to have the fast like API that they need

00:20:04,390 --> 00:20:08,710
to be a real-time database that's

00:20:05,980 --> 00:20:11,260
cloud-based right where do you see this

00:20:08,710 --> 00:20:13,180
going yeah uh so as I was studying it

00:20:11,260 --> 00:20:14,980
well it's all the buzzwords and history

00:20:13,180 --> 00:20:17,260
will kind of repeat itself in a new and

00:20:14,980 --> 00:20:21,340
a different fashion like XMPP being one

00:20:17,260 --> 00:20:22,680
of the examples or in the front in word

00:20:21,340 --> 00:20:25,180
you should say that don't mix up your

00:20:22,680 --> 00:20:26,920
JavaScript and CSS and keep them all sup

00:20:25,180 --> 00:20:28,720
right and these days it's like inland

00:20:26,920 --> 00:20:30,250
everything doesn't matter the browser is

00:20:28,720 --> 00:20:32,800
smart enough to figure out what goes

00:20:30,250 --> 00:20:34,420
where right so it's like the history is

00:20:32,800 --> 00:20:37,240
repeating itself but in a different

00:20:34,420 --> 00:20:40,240
fashion and more powerful sense but in

00:20:37,240 --> 00:20:42,490
terms of API is like I speak I feel

00:20:40,240 --> 00:20:45,340
building with purpose of course it's the

00:20:42,490 --> 00:20:47,500
major priority but building smarter

00:20:45,340 --> 00:20:49,960
api's is the new thing like if he could

00:20:47,500 --> 00:20:52,030
code few companies like apathy or API

00:20:49,960 --> 00:20:54,370
dot say i right they are building

00:20:52,030 --> 00:20:57,190
smarter aps that could recognize a

00:20:54,370 --> 00:21:00,340
natural language some natural language

00:20:57,190 --> 00:21:02,200
processing and return an API internship

00:21:00,340 --> 00:21:04,180
say for example you could just say set

00:21:02,200 --> 00:21:06,550
my room temperature to 30 degrees and it

00:21:04,180 --> 00:21:08,140
will respond with JSON saying that but

00:21:06,550 --> 00:21:10,360
this is the current temperature and this

00:21:08,140 --> 00:21:12,040
is what I'm setting it to and this is

00:21:10,360 --> 00:21:14,500
the device ID something like that that's

00:21:12,040 --> 00:21:18,460
building with purpose and smarter api's

00:21:14,500 --> 00:21:20,710
is a new way and the way the aps going

00:21:18,460 --> 00:21:23,680
at I feel so I'd like to hear from you

00:21:20,710 --> 00:21:26,950
exact with your hands again on who is

00:21:23,680 --> 00:21:29,500
currently working on like exposing some

00:21:26,950 --> 00:21:30,580
kind of API express API Ruby API I don't

00:21:29,500 --> 00:21:32,770
really care but something that like

00:21:30,580 --> 00:21:34,930
somebody outside of your department or

00:21:32,770 --> 00:21:36,100
company needs to integrate with that

00:21:34,930 --> 00:21:40,060
would be really interesting for me to

00:21:36,100 --> 00:21:42,910
see so yeah very little actually so

00:21:40,060 --> 00:21:45,130
maybe interesting so the rest is mostly

00:21:42,910 --> 00:21:48,040
consumer because I assume like everybody

00:21:45,130 --> 00:21:51,370
else has at some point used an API Oh

00:21:48,040 --> 00:21:55,160
interface to work with because it's like

00:21:51,370 --> 00:21:57,380
the common theme developer programs who

00:21:55,160 --> 00:21:59,630
those that were developing ap is

00:21:57,380 --> 00:22:01,490
actually have thought about the

00:21:59,630 --> 00:22:04,340
ecosystem were surrounding this API how

00:22:01,490 --> 00:22:05,330
people will interact with it like to go

00:22:04,340 --> 00:22:07,760
back to the point of developer

00:22:05,330 --> 00:22:10,010
experience which was part of my

00:22:07,760 --> 00:22:13,070
engagement like how do you work with

00:22:10,010 --> 00:22:14,930
developers on that sense so are you

00:22:13,070 --> 00:22:17,090
thinking about developer programs or is

00:22:14,930 --> 00:22:18,980
it literally just an integrated API

00:22:17,090 --> 00:22:20,600
maybe for those that raise the hand on

00:22:18,980 --> 00:22:23,980
those can I can I see a few hands on

00:22:20,600 --> 00:22:26,870
those that think of it more holistically

00:22:23,980 --> 00:22:31,670
that down to three enterprise companies

00:22:26,870 --> 00:22:35,540
great speaking of Microsoft arm and

00:22:31,670 --> 00:22:38,720
Standard Chartered great select to add

00:22:35,540 --> 00:22:40,490
on Thomas especially in paypal right

00:22:38,720 --> 00:22:43,730
like we have this concept of inner

00:22:40,490 --> 00:22:45,230
sourcing so in a sourcing as I says like

00:22:43,730 --> 00:22:46,970
how the open so free and open source

00:22:45,230 --> 00:22:48,770
model works we're trying to integrate

00:22:46,970 --> 00:22:51,620
the same model within the company so

00:22:48,770 --> 00:22:54,080
since it for example a be a be on work

00:22:51,620 --> 00:22:55,400
across teams and the communication

00:22:54,080 --> 00:22:57,440
across the teams would be very much

00:22:55,400 --> 00:22:59,510
similar to what happens in a open source

00:22:57,440 --> 00:23:01,070
project like like github we internally

00:22:59,510 --> 00:23:02,720
use get up as well the enterprise get up

00:23:01,070 --> 00:23:05,210
so we could just go at create an issue

00:23:02,720 --> 00:23:07,550
ask for them or say like hey your schema

00:23:05,210 --> 00:23:09,350
is there but your aps reckoning this how

00:23:07,550 --> 00:23:11,750
do we fix it or how we go about creating

00:23:09,350 --> 00:23:12,860
a new attribute in the indira question

00:23:11,750 --> 00:23:14,840
that's interesting something we talked

00:23:12,860 --> 00:23:16,430
about before it I guess one of the most

00:23:14,840 --> 00:23:17,750
common things to use api's for use you

00:23:16,430 --> 00:23:21,050
have a front end and then you have a

00:23:17,750 --> 00:23:22,400
back end so like show of hands again

00:23:21,050 --> 00:23:24,770
just to get a bit more feedback from you

00:23:22,400 --> 00:23:27,440
guys on who creates fully static front

00:23:24,770 --> 00:23:31,730
ends that just talked to the to a

00:23:27,440 --> 00:23:35,870
back-end service two three four five six

00:23:31,730 --> 00:23:37,430
and okay like for me for the last few

00:23:35,870 --> 00:23:39,200
years i think it's the way to go forward

00:23:37,430 --> 00:23:40,880
in the sense that you disconnect these

00:23:39,200 --> 00:23:44,180
two quite well but then we ran into this

00:23:40,880 --> 00:23:45,980
discussion earlier where you have

00:23:44,180 --> 00:23:47,930
feature requests coming from the top and

00:23:45,980 --> 00:23:49,940
they want to have it in the front end

00:23:47,930 --> 00:23:51,470
right and then suddenly the back end

00:23:49,940 --> 00:23:53,060
doesn't have the functionality so it

00:23:51,470 --> 00:23:54,410
needs to trickle down into it right and

00:23:53,060 --> 00:23:56,410
I thought like you guys have a really

00:23:54,410 --> 00:24:02,510
interesting approach to to work with

00:23:56,410 --> 00:24:04,910
this environment maybe you can yeah so

00:24:02,510 --> 00:24:07,520
it's talking about the inner sourcing a

00:24:04,910 --> 00:24:08,360
paradigm but I still feel one thing that

00:24:07,520 --> 00:24:10,760
that lack

00:24:08,360 --> 00:24:14,090
or I don't know how all of you guys are

00:24:10,760 --> 00:24:17,059
doing is when we call ourselves a

00:24:14,090 --> 00:24:20,500
full-stack team or what I feel is like n

00:24:17,059 --> 00:24:23,420
to n maybe querying the database

00:24:20,500 --> 00:24:25,549
generating the API consuming at creating

00:24:23,420 --> 00:24:27,710
the UI so the end-to-end process should

00:24:25,549 --> 00:24:29,360
be done by the single team so the

00:24:27,710 --> 00:24:31,370
advantage of this would be is like you

00:24:29,360 --> 00:24:32,929
you're not waiting for the other team or

00:24:31,370 --> 00:24:35,150
you're you're not running on assumptions

00:24:32,929 --> 00:24:37,610
that the API would respond in a certain

00:24:35,150 --> 00:24:39,260
manner or or the schema would be so and

00:24:37,610 --> 00:24:40,880
so so that that would be a nice

00:24:39,260 --> 00:24:42,919
experiment to do but it's it's it's

00:24:40,880 --> 00:24:44,750
really a hard thing to do when it comes

00:24:42,919 --> 00:24:46,669
to an enterprising there there's some

00:24:44,750 --> 00:24:49,280
legacy code that's running then there's

00:24:46,669 --> 00:24:51,230
there's a lot of untouched score like in

00:24:49,280 --> 00:24:53,720
probably fear of touching of breaking or

00:24:51,230 --> 00:24:55,370
slow-moving things and but they're on

00:24:53,720 --> 00:24:56,990
the contrast there is a lot of migration

00:24:55,370 --> 00:24:59,030
that's happening from legacy stack to

00:24:56,990 --> 00:25:02,059
the new stack like like in our case it's

00:24:59,030 --> 00:25:05,299
more of C++ and Java to node right so

00:25:02,059 --> 00:25:06,590
thanks to bring it back to open source

00:25:05,299 --> 00:25:09,320
actually with this conference is in

00:25:06,590 --> 00:25:10,850
parts about right like great tools in

00:25:09,320 --> 00:25:14,330
open source that to help you creating

00:25:10,850 --> 00:25:15,679
better interfaces these days like like

00:25:14,330 --> 00:25:17,900
swagger being one of the very good

00:25:15,679 --> 00:25:20,230
exists and being one of those any

00:25:17,900 --> 00:25:23,870
contributions or things that that

00:25:20,230 --> 00:25:26,720
Braintree is doing on that line oh look

00:25:23,870 --> 00:25:30,049
i think the look what we've always I

00:25:26,720 --> 00:25:32,210
said it's very large to develop a base I

00:25:30,049 --> 00:25:33,650
mean still eighty eighty percent of the

00:25:32,210 --> 00:25:36,770
people that work for our business right

00:25:33,650 --> 00:25:39,260
on the developer side we're so we're

00:25:36,770 --> 00:25:40,669
very developer laid the I think just

00:25:39,260 --> 00:25:41,900
using any tool available because I'm

00:25:40,669 --> 00:25:43,910
guessing those teams in here that a

00:25:41,900 --> 00:25:45,710
could be quite small so you don't have

00:25:43,910 --> 00:25:47,720
the joy of having a large team you can

00:25:45,710 --> 00:25:49,610
bring together you may be your only team

00:25:47,720 --> 00:25:51,679
or you might be one of two therefore you

00:25:49,610 --> 00:25:55,010
are the both it back of house front of

00:25:51,679 --> 00:25:56,390
house all her house whatever is i think

00:25:55,010 --> 00:25:58,910
is about working together and trying to

00:25:56,390 --> 00:26:02,179
ship things that are that you know ship

00:25:58,910 --> 00:26:04,130
products which make sense so if you're

00:26:02,179 --> 00:26:05,809
on enterprise side what are the real

00:26:04,130 --> 00:26:07,790
requirements versus the nice to haves

00:26:05,809 --> 00:26:10,429
you know I think you know we've got to

00:26:07,790 --> 00:26:12,230
prioritize you know it's probably our

00:26:10,429 --> 00:26:14,660
biggest challenge is we have no shortage

00:26:12,230 --> 00:26:16,840
of requirements we what we have a

00:26:14,660 --> 00:26:19,400
shortages of time and a shortage of

00:26:16,840 --> 00:26:21,919
people potentially or the amount of time

00:26:19,400 --> 00:26:24,510
that you want to change your code and or

00:26:21,919 --> 00:26:26,640
talk you know make make changes in

00:26:24,510 --> 00:26:28,049
general so make sure that any changes

00:26:26,640 --> 00:26:29,460
are worthwhile make sure that when

00:26:28,049 --> 00:26:31,679
you're shipping them that they have a

00:26:29,460 --> 00:26:34,679
direct impact to the customer consumer

00:26:31,679 --> 00:26:36,270
or whoever your the end user is just

00:26:34,679 --> 00:26:38,790
because they seem to be a nice to have

00:26:36,270 --> 00:26:40,980
for a person or organization it's always

00:26:38,790 --> 00:26:43,880
worth checking you know what was it for

00:26:40,980 --> 00:26:46,830
I think in anything to do with

00:26:43,880 --> 00:26:48,390
architecture you know from our end and

00:26:46,830 --> 00:26:51,480
because I drive from a business

00:26:48,390 --> 00:26:53,700
requirements you know often it's when

00:26:51,480 --> 00:26:55,290
you ask the question of questions you'll

00:26:53,700 --> 00:26:57,990
understand what the real requirement is

00:26:55,290 --> 00:26:59,790
and again there is no point reinventing

00:26:57,990 --> 00:27:01,320
the wheel often the answers or the

00:26:59,790 --> 00:27:03,750
product you've got is already exists

00:27:01,320 --> 00:27:06,870
you've used in somewhere else try and

00:27:03,750 --> 00:27:08,730
make it repurpose it to make it fit for

00:27:06,870 --> 00:27:10,020
purpose sometimes you have to build it

00:27:08,730 --> 00:27:11,520
new but if you're going to build it new

00:27:10,020 --> 00:27:12,750
go back into your business or go to the

00:27:11,520 --> 00:27:14,820
businesses you're talking to and see how

00:27:12,750 --> 00:27:15,929
many other people could have the same

00:27:14,820 --> 00:27:17,549
requirement I think this is the

00:27:15,929 --> 00:27:19,559
advantage of being larger and for the

00:27:17,549 --> 00:27:21,570
larger organizations you have this you

00:27:19,559 --> 00:27:24,330
have this because you have multiple

00:27:21,570 --> 00:27:26,370
customers multiple stakeholders you have

00:27:24,330 --> 00:27:27,720
the advantage that you know have it you

00:27:26,370 --> 00:27:29,100
need to have a voice you need to say

00:27:27,720 --> 00:27:30,900
we're making changes and this what

00:27:29,100 --> 00:27:32,130
making them for who else has this

00:27:30,900 --> 00:27:34,320
requirement because you can build your

00:27:32,130 --> 00:27:36,780
business case really fast or I'll tell

00:27:34,320 --> 00:27:38,429
you can you know kill that product or

00:27:36,780 --> 00:27:39,960
project and focus on something that's

00:27:38,429 --> 00:27:41,790
far more important you only have a

00:27:39,960 --> 00:27:44,250
couple of shots a year or whatever your

00:27:41,790 --> 00:27:46,950
cycle is to make it work make sure it

00:27:44,250 --> 00:27:50,190
really works Thomas like sorry to break

00:27:46,950 --> 00:27:51,870
but this just reminded me like six six

00:27:50,190 --> 00:27:54,270
or seven months back in the node word

00:27:51,870 --> 00:27:59,160
specifically there was this oting done

00:27:54,270 --> 00:28:00,299
on different clients on or either node

00:27:59,160 --> 00:28:03,750
modules that would help you to build

00:28:00,299 --> 00:28:06,120
restful interfaces and based on a lot of

00:28:03,750 --> 00:28:08,190
parameters I I record it right it was

00:28:06,120 --> 00:28:10,799
rest if I there's a module called rest

00:28:08,190 --> 00:28:12,780
if I that kind of one in terms of all

00:28:10,799 --> 00:28:15,720
the different parameters that was

00:28:12,780 --> 00:28:17,010
considered the oat so so along its wagon

00:28:15,720 --> 00:28:19,410
maybe rest if I is one of our very good

00:28:17,010 --> 00:28:21,150
candidates these days so I want to leave

00:28:19,410 --> 00:28:24,960
you with one last message as well I

00:28:21,150 --> 00:28:28,380
think ap is an open source you should do

00:28:24,960 --> 00:28:30,000
api's in open source properly as well

00:28:28,380 --> 00:28:32,220
it's like the fact that other people can

00:28:30,000 --> 00:28:34,620
see your code should not prevent you

00:28:32,220 --> 00:28:35,250
from also creating great interfaces into

00:28:34,620 --> 00:28:37,860
your coat

00:28:35,250 --> 00:28:40,380
and ideally I don't have to look in your

00:28:37,860 --> 00:28:42,390
code at all if I want to use something

00:28:40,380 --> 00:28:44,580
that you're creating maintaining or

00:28:42,390 --> 00:28:46,460
contributing to and like the interface

00:28:44,580 --> 00:28:50,670
is still well documented well laid out

00:28:46,460 --> 00:28:52,500
and works well right that's one thing

00:28:50,670 --> 00:28:56,010
that I've come over and open source

00:28:52,500 --> 00:28:58,620
quite quite often is that it's like yeah

00:28:56,010 --> 00:29:00,150
I just go in and like work around

00:28:58,620 --> 00:29:02,010
specifically JavaScript kind of invites

00:29:00,150 --> 00:29:04,740
you to do it because if you can look

00:29:02,010 --> 00:29:06,390
into any package you can go around like

00:29:04,740 --> 00:29:09,780
change prototypes and all this kind of

00:29:06,390 --> 00:29:12,690
stuff I think the fact that developers

00:29:09,780 --> 00:29:14,100
can do this makes those libraries that

00:29:12,690 --> 00:29:15,990
actually do a really good job and

00:29:14,100 --> 00:29:19,500
creating interfaces stand out even more

00:29:15,990 --> 00:29:22,320
so just to that the one thing I would

00:29:19,500 --> 00:29:24,060
say that I would challenge everyone to

00:29:22,320 --> 00:29:25,470
do and if you get the opportunity and

00:29:24,060 --> 00:29:27,210
you're playing with some sort of our

00:29:25,470 --> 00:29:28,770
code if you see so were you playing with

00:29:27,210 --> 00:29:32,100
anything to do with the API so if you

00:29:28,770 --> 00:29:33,870
see something you'd like let us know hi

00:29:32,100 --> 00:29:36,390
seriously the best feedback we get is

00:29:33,870 --> 00:29:38,190
from you and I think sometimes you hear

00:29:36,390 --> 00:29:39,750
I why didn't you have this and why don't

00:29:38,190 --> 00:29:42,690
you have that that's really actually a

00:29:39,750 --> 00:29:44,280
good question don't don't ever not think

00:29:42,690 --> 00:29:45,780
to put the feedback in and I think large

00:29:44,280 --> 00:29:49,020
organizations that are represented here

00:29:45,780 --> 00:29:52,200
all feel the same way we don't want to

00:29:49,020 --> 00:29:54,570
have a back office or your people in a

00:29:52,200 --> 00:29:56,040
room pushing out this is what our

00:29:54,570 --> 00:29:57,930
product is that's the old way of doing

00:29:56,040 --> 00:29:59,790
things in new ways tell us what you

00:29:57,930 --> 00:30:01,920
think so we can only go as fast as you

00:29:59,790 --> 00:30:03,930
tell us all the things you need yeah and

00:30:01,920 --> 00:30:06,420
it's quite easy to relate whenever you

00:30:03,930 --> 00:30:08,370
build an interface you know the guy on

00:30:06,420 --> 00:30:11,160
the other side is also going to be a

00:30:08,370 --> 00:30:12,840
developer so all the pains that you

00:30:11,160 --> 00:30:14,670
received in the past from integrating

00:30:12,840 --> 00:30:16,560
with anything is something you shouldn't

00:30:14,670 --> 00:30:18,060
want to put on the people on the other

00:30:16,560 --> 00:30:20,640
side that you're building for when

00:30:18,060 --> 00:30:22,470
creating an interface they are also

00:30:20,640 --> 00:30:26,610
developers and they also like their time

00:30:22,470 --> 00:30:28,080
insanity so please build great api's and

00:30:26,610 --> 00:30:30,120
please contribute more to open source

00:30:28,080 --> 00:30:31,530
with that i want to thank tyson and

00:30:30,120 --> 00:30:34,800
haven't for being you on the panel as

00:30:31,530 --> 00:30:36,120
well goes up to them outside round of

00:30:34,800 --> 00:30:41,750
applause if you like this

00:30:36,120 --> 00:30:41,750
[Applause]

00:30:46,770 --> 00:30:48,830

YouTube URL: https://www.youtube.com/watch?v=bHaH1Trqa-4


