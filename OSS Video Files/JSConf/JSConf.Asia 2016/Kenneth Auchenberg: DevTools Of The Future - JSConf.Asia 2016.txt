Title: Kenneth Auchenberg: DevTools Of The Future - JSConf.Asia 2016
Publication date: 2016-12-08
Playlist: JSConf.Asia 2016
Description: 
	The web has gained the capabilities to offer app-like experience, and with the recent additions the web is ready to replace many native apps. What does that mean for our developer tools? In this talk I‘ll share Microsoft‘s view on web tooling and what we do to make building for the web easier and more productive, regardless of the platform.

Kenneth is a Program Manager, focused on DevTools and Remote Debugging at Microsoft, and is obsessed with tooling.
He started the RemoteDebug initiative to unify remote debugging and lives in Vancouver, Canada and is the organizer of the ColdFront Conference in Copenhagen, Denmark. 
Kenneth blogs occasionally at kenneth.io, and tweets as @auchenberg


JSConf.Asia - Capitol Theatre, Singapore - 25+26 November 2016

Source: https://2016.jsconf.asia/
Slides: https://speakerdeck.com/auchenberg/devtools-of-the-future-jsconf-asia-2016-singapore

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:01,100 --> 00:00:18,850
[Music]

00:00:19,750 --> 00:00:28,340
so yeah like here one I'm Kenneth I'm

00:00:25,670 --> 00:00:30,740
originally from Copenhagen Denmark I

00:00:28,340 --> 00:00:34,370
recently took a little rocket or plane

00:00:30,740 --> 00:00:37,449
and moved to Canada and I work for this

00:00:34,370 --> 00:00:40,519
tiny little company called Microsoft and

00:00:37,449 --> 00:00:43,129
what I do at Microsoft is really all

00:00:40,519 --> 00:00:45,829
about dev tools so I'm a program manager

00:00:43,129 --> 00:00:47,690
so that means I do product strategy I do

00:00:45,829 --> 00:00:49,909
a lot of prototyping working closely

00:00:47,690 --> 00:00:51,679
with my engineers to basically figure

00:00:49,909 --> 00:00:54,229
out like what the diff tools of the

00:00:51,679 --> 00:00:56,239
future should be and I think personally

00:00:54,229 --> 00:00:57,709
I spent the past many years in the

00:00:56,239 --> 00:00:59,269
community doing a lot of diff tools kind

00:00:57,709 --> 00:01:01,369
of hacking and then this year joined

00:00:59,269 --> 00:01:04,070
Microsoft to do it as a full-time paid

00:01:01,369 --> 00:01:06,170
job I think we as developers is like we

00:01:04,070 --> 00:01:08,450
really care about the tools we use each

00:01:06,170 --> 00:01:10,670
and every day so I'm basically here to

00:01:08,450 --> 00:01:12,440
talk about how we think about the future

00:01:10,670 --> 00:01:14,150
for furtive tools and how we think about

00:01:12,440 --> 00:01:16,640
we can maybe do things a bit in a

00:01:14,150 --> 00:01:19,760
different way but first I would like to

00:01:16,640 --> 00:01:21,740
quite a bit of context I am on the web

00:01:19,760 --> 00:01:25,100
platform and and how we need to think

00:01:21,740 --> 00:01:26,510
about dev tools and going forward so I

00:01:25,100 --> 00:01:29,150
think it's pretty clear for all of us

00:01:26,510 --> 00:01:30,680
that we all real big developer Joel

00:01:29,150 --> 00:01:32,620
using javascript and but the big

00:01:30,680 --> 00:01:34,910
platform has changed quite significantly

00:01:32,620 --> 00:01:37,160
over the past I would say five years

00:01:34,910 --> 00:01:39,020
like when I started building from the

00:01:37,160 --> 00:01:41,600
web it was all about documents doing

00:01:39,020 --> 00:01:42,770
simple text documents and that was

00:01:41,600 --> 00:01:44,540
basically like that's why we have

00:01:42,770 --> 00:01:46,580
hypertext markup language to do a

00:01:44,540 --> 00:01:48,590
scientific report we had a CSS we would

00:01:46,580 --> 00:01:50,480
style the documents but if you actually

00:01:48,590 --> 00:01:53,120
look at like how the majority of us are

00:01:50,480 --> 00:01:55,190
using the platform and the browser today

00:01:53,120 --> 00:01:57,170
is all about applications this is just

00:01:55,190 --> 00:01:58,909
animated gave her like Netflix that

00:01:57,170 --> 00:02:00,710
majority of America is used in each and

00:01:58,909 --> 00:02:02,210
every day and which actually quite a

00:02:00,710 --> 00:02:05,270
complicated application when you think

00:02:02,210 --> 00:02:06,860
about it and even if you look at the

00:02:05,270 --> 00:02:10,369
devices we're using each and every day

00:02:06,860 --> 00:02:13,410
they've also changed and I remember like

00:02:10,369 --> 00:02:15,210
the good old workstation Mac or like the

00:02:13,410 --> 00:02:17,010
the good old laptop I had plenty of

00:02:15,210 --> 00:02:20,070
these with the noble guys over the years

00:02:17,010 --> 00:02:22,020
so like if you look at the devices were

00:02:20,070 --> 00:02:23,340
using today they at least from Microsoft

00:02:22,020 --> 00:02:24,900
they look quite a bit different we have

00:02:23,340 --> 00:02:27,120
like service to studios all about

00:02:24,900 --> 00:02:29,280
charged surface where services if used a

00:02:27,120 --> 00:02:31,020
macbook if you're the ipad the devices

00:02:29,280 --> 00:02:33,120
has changed quite fundamentally from

00:02:31,020 --> 00:02:34,580
being this workstation kind of thing to

00:02:33,120 --> 00:02:38,190
something thats a bit more mobile and

00:02:34,580 --> 00:02:39,900
and really when we talk about the what

00:02:38,190 --> 00:02:42,330
devices people are using to browse the

00:02:39,900 --> 00:02:45,150
web it's really about mobile devices and

00:02:42,330 --> 00:02:47,040
like today mobile phones and then large

00:02:45,150 --> 00:02:48,810
phones tablets kind of thing comes in a

00:02:47,040 --> 00:02:50,190
lot of different sizes and that's been a

00:02:48,810 --> 00:02:52,800
lot of stuff happening in terms of i

00:02:50,190 --> 00:02:55,200
remember my good old naka 3210 that way

00:02:52,800 --> 00:02:58,080
i could play snake to like my my iphone

00:02:55,200 --> 00:03:00,350
7 i'm using today right so our mobile

00:02:58,080 --> 00:03:03,180
devices has changed quite a bit too and

00:03:00,350 --> 00:03:04,950
even the browser's all of us are using

00:03:03,180 --> 00:03:07,470
every day our customers using every day

00:03:04,950 --> 00:03:09,600
has changed like today we have like

00:03:07,470 --> 00:03:12,810
chrome as a market leader we actually

00:03:09,600 --> 00:03:15,420
have safari a hat with if we include

00:03:12,810 --> 00:03:17,040
like a iPads as a pretty significant

00:03:15,420 --> 00:03:19,920
disk top market share because the ipass

00:03:17,040 --> 00:03:21,360
are grown so big today and and then we

00:03:19,920 --> 00:03:23,850
have like if you look at our market

00:03:21,360 --> 00:03:25,740
share like for Microsoft our itch marga

00:03:23,850 --> 00:03:28,110
chair still growing we're still trying

00:03:25,740 --> 00:03:30,780
to kill the remaining bits of IE but one

00:03:28,110 --> 00:03:32,640
day I'm sure we will succeed and so like

00:03:30,780 --> 00:03:35,310
that this desktop landscape has changed

00:03:32,640 --> 00:03:37,950
quite a bit and I just want to touch

00:03:35,310 --> 00:03:40,860
upon like I'm i'm on the edge devtools

00:03:37,950 --> 00:03:43,650
team and as a part of a new our effort

00:03:40,860 --> 00:03:46,560
of I've actually reinvesting in the web

00:03:43,650 --> 00:03:49,440
then we decided to kill I we doing edge

00:03:46,560 --> 00:03:50,970
and that was basically because what

00:03:49,440 --> 00:03:53,160
Microsoft did previously was basically

00:03:50,970 --> 00:03:54,750
just Mike dropping out of the the stage

00:03:53,160 --> 00:03:57,060
after doing re 6 because there was an

00:03:54,750 --> 00:03:59,130
awesome browser at least back then and

00:03:57,060 --> 00:04:02,670
but we're basically reinventing or

00:03:59,130 --> 00:04:06,930
trying to reinvent a our approach to how

00:04:02,670 --> 00:04:08,550
we build for the web and and another

00:04:06,930 --> 00:04:10,860
interesting thing we look alike our

00:04:08,550 --> 00:04:12,450
devices has changed our browsers we use

00:04:10,860 --> 00:04:15,450
each every day has changed but also

00:04:12,450 --> 00:04:18,480
internet adoption has changed and like

00:04:15,450 --> 00:04:20,400
now I know now we're in Singapore but

00:04:18,480 --> 00:04:22,650
but when I show this and in the Western

00:04:20,400 --> 00:04:24,900
world people are amazed there are more

00:04:22,650 --> 00:04:26,640
people living inside the circle and then

00:04:24,900 --> 00:04:27,150
outside of it let's just so show

00:04:26,640 --> 00:04:29,759
something

00:04:27,150 --> 00:04:31,350
about how the next billion will go

00:04:29,759 --> 00:04:33,150
online or what markets are that are

00:04:31,350 --> 00:04:35,520
relevant and what kind of devices people

00:04:33,150 --> 00:04:37,169
use in when they go online and we need

00:04:35,520 --> 00:04:39,300
to think about this when we build our

00:04:37,169 --> 00:04:40,650
websites when we optimize our user

00:04:39,300 --> 00:04:44,370
experiences but also when we build our

00:04:40,650 --> 00:04:46,050
tools and it's just another interesting

00:04:44,370 --> 00:04:47,520
fact that I think many people tend to

00:04:46,050 --> 00:04:50,370
forget it's like that's more people

00:04:47,520 --> 00:04:52,680
online in China then there's population

00:04:50,370 --> 00:04:54,419
in Europe it's a mind-boggling number

00:04:52,680 --> 00:04:57,449
when you think of it but people forget

00:04:54,419 --> 00:04:59,250
and to me that's interesting because it

00:04:57,449 --> 00:05:01,380
shows a lot of opportunity yeah but it's

00:04:59,250 --> 00:05:07,199
also tells me that we maybe need to

00:05:01,380 --> 00:05:09,570
rethink our approach to 225 tools and I

00:05:07,199 --> 00:05:12,150
just want to code Bennett Evans here

00:05:09,570 --> 00:05:14,820
it's like saying mobile Internet is the

00:05:12,150 --> 00:05:16,919
same as saying color TV it's kind of

00:05:14,820 --> 00:05:19,020
implied when you watch TV today that is

00:05:16,919 --> 00:05:20,940
in color and kind of when you go online

00:05:19,020 --> 00:05:22,560
today it's kind of implied that you do

00:05:20,940 --> 00:05:24,900
it from your mobile phone or you do it

00:05:22,560 --> 00:05:27,470
for from a wearable like this mobile

00:05:24,900 --> 00:05:31,680
thing is just the way we do things and

00:05:27,470 --> 00:05:33,419
and when we think about mobile the

00:05:31,680 --> 00:05:36,930
mobile landscape has also changed quite

00:05:33,419 --> 00:05:39,180
a bit and actually if we look alike over

00:05:36,930 --> 00:05:42,120
market shares you see browsers more

00:05:39,180 --> 00:05:43,380
popular than sapphire mobile that's

00:05:42,120 --> 00:05:45,419
almost eighteen percent of the global

00:05:43,380 --> 00:05:48,180
market share we are still seeing a

00:05:45,419 --> 00:05:49,500
significant chunk of Android the stock

00:05:48,180 --> 00:05:51,539
android browser on all the android

00:05:49,500 --> 00:05:53,699
phones we're seeing new browsers like

00:05:51,539 --> 00:05:57,840
the purple one that is sam some internet

00:05:53,699 --> 00:05:59,849
growing the triple-digit market shares

00:05:57,840 --> 00:06:01,590
every every month because it's now the

00:05:59,849 --> 00:06:04,110
new default browser on samsung devices

00:06:01,590 --> 00:06:06,510
so we're basic seeing a whole shift here

00:06:04,110 --> 00:06:08,400
from traditional browsers to new players

00:06:06,510 --> 00:06:10,500
that are entering the market we're also

00:06:08,400 --> 00:06:12,060
seeing players like grave and Yandex

00:06:10,500 --> 00:06:15,150
actually gaining pretty good market

00:06:12,060 --> 00:06:17,310
shares so the more interesting thing is

00:06:15,150 --> 00:06:19,289
we responded engineers of web developers

00:06:17,310 --> 00:06:21,240
what we care about is like the engine We

00:06:19,289 --> 00:06:23,729
Need to Talk it and we're seeing like

00:06:21,240 --> 00:06:25,380
you you three engine actually being

00:06:23,729 --> 00:06:27,510
larger than safari but most of us don't

00:06:25,380 --> 00:06:29,760
know how you you see browsers working on

00:06:27,510 --> 00:06:32,400
the inside because it's a proprietary

00:06:29,760 --> 00:06:34,470
lipid fork no one has access to it and

00:06:32,400 --> 00:06:36,779
that's interesting and then we have like

00:06:34,470 --> 00:06:38,669
the good old players like Babe kid we

00:06:36,779 --> 00:06:39,009
have playing HTML our engine we have

00:06:38,669 --> 00:06:41,349
cake

00:06:39,009 --> 00:06:43,419
but we also see like new browsers coming

00:06:41,349 --> 00:06:45,189
around like brave that is just using

00:06:43,419 --> 00:06:47,110
whatever engine that is available on the

00:06:45,189 --> 00:06:49,779
underlying platform so when you use

00:06:47,110 --> 00:06:52,330
brave on Windows is right now as an

00:06:49,779 --> 00:06:54,939
electron app if you use it on your

00:06:52,330 --> 00:06:56,830
iPhone is using lip kit if using on all

00:06:54,939 --> 00:06:58,479
Android device it's using Android

00:06:56,830 --> 00:07:01,360
browser so kind of switching the

00:06:58,479 --> 00:07:03,279
underlying engine when it's relevant and

00:07:01,360 --> 00:07:06,039
to me that's interesting because this

00:07:03,279 --> 00:07:07,599
shows that that the web world and we

00:07:06,039 --> 00:07:09,339
have gained so much compatibility that

00:07:07,599 --> 00:07:11,469
just doing the engine itself it's the

00:07:09,339 --> 00:07:13,479
longer competitive advantage this also

00:07:11,469 --> 00:07:17,469
changes our perspective when we build

00:07:13,479 --> 00:07:21,099
stuff for the web and then we are seeing

00:07:17,469 --> 00:07:23,439
all of this the this whole trend of the

00:07:21,099 --> 00:07:26,050
progressive web and we like my bed here

00:07:23,439 --> 00:07:27,759
is that in a few years you introduces

00:07:26,050 --> 00:07:29,770
and you as the developer won't know that

00:07:27,759 --> 00:07:32,469
you're using a browser anymore because

00:07:29,770 --> 00:07:34,149
what we are already seeing on mobile

00:07:32,469 --> 00:07:36,339
platforms is the bit being embedded

00:07:34,149 --> 00:07:38,349
inside native we see that on Android

00:07:36,339 --> 00:07:40,599
with chrome custom tabs as the Pinterest

00:07:38,349 --> 00:07:42,819
app that can just embed like an advanced

00:07:40,599 --> 00:07:44,830
VIP you inside the native shell we're

00:07:42,819 --> 00:07:47,199
seeing it on iOS chew with Safari view

00:07:44,830 --> 00:07:49,419
controllers so we've seen this full

00:07:47,199 --> 00:07:50,680
emergence of like native platforms and

00:07:49,419 --> 00:07:53,439
the web melding together in this

00:07:50,680 --> 00:07:55,419
combined experience and on a desktop

00:07:53,439 --> 00:07:58,269
we're seeing the bib used as a runtime

00:07:55,419 --> 00:08:00,519
too so we see that in slag that she's an

00:07:58,269 --> 00:08:02,169
electron app at Microsoft we should we

00:08:00,519 --> 00:08:04,899
shall studio code our open source editor

00:08:02,169 --> 00:08:07,689
it's just a bit app chip inside electron

00:08:04,899 --> 00:08:09,939
and so we're basically seeing the VIP

00:08:07,689 --> 00:08:12,249
being being merged into all of the

00:08:09,939 --> 00:08:13,990
different categories of apps we use from

00:08:12,249 --> 00:08:15,580
our mobile phones to all desktops and

00:08:13,990 --> 00:08:16,870
that's really exciting because that

00:08:15,580 --> 00:08:19,419
means we can ship more as with

00:08:16,870 --> 00:08:21,339
developers and and then we have this

00:08:19,419 --> 00:08:23,559
whole progressive web app movement where

00:08:21,339 --> 00:08:26,080
we're suddenly a you can go to a ul and

00:08:23,559 --> 00:08:28,659
the website can be promoted to your home

00:08:26,080 --> 00:08:30,159
screen and and live outside of the

00:08:28,659 --> 00:08:31,749
regular browser you are in the browser

00:08:30,159 --> 00:08:33,760
Chrome which I find really interesting

00:08:31,749 --> 00:08:35,529
and that's some of the thing is that it

00:08:33,760 --> 00:08:37,750
would be a Microsoft spending a lot of

00:08:35,529 --> 00:08:40,300
time looking at so right now we have

00:08:37,750 --> 00:08:42,130
service worker fetch cash push bit

00:08:40,300 --> 00:08:43,959
manifest all in development in edge and

00:08:42,130 --> 00:08:45,490
the reason for this is because we want

00:08:43,959 --> 00:08:47,829
to bring the progressive bit to the

00:08:45,490 --> 00:08:50,380
desktop and we have still have quite a

00:08:47,829 --> 00:08:52,480
significant chunk of users using a

00:08:50,380 --> 00:08:54,670
our platforms and specially using

00:08:52,480 --> 00:08:56,380
desktops and right now we find it

00:08:54,670 --> 00:08:59,590
relatively that you have to install an

00:08:56,380 --> 00:09:01,600
electron app and it's a kind of a clunky

00:08:59,590 --> 00:09:02,800
experience what if the desktop

00:09:01,600 --> 00:09:05,020
experience could just be you go to

00:09:02,800 --> 00:09:07,150
Netflix and certainly it's on your

00:09:05,020 --> 00:09:09,250
desktop the terms a lot of interesting

00:09:07,150 --> 00:09:10,900
questions because what is a home screen

00:09:09,250 --> 00:09:12,580
around this top how does all these

00:09:10,900 --> 00:09:14,200
things work what if you open up the

00:09:12,580 --> 00:09:16,780
desktop browser and you go to Netflix

00:09:14,200 --> 00:09:17,980
should open up the PVA you have on your

00:09:16,780 --> 00:09:19,150
desktop or should you stay inside the

00:09:17,980 --> 00:09:20,530
browser that's a lot of interesting

00:09:19,150 --> 00:09:22,120
challenges with that will be working

00:09:20,530 --> 00:09:24,820
hard and trying to crack this not

00:09:22,120 --> 00:09:27,760
because we think that's the way and that

00:09:24,820 --> 00:09:29,170
is the future for the web and another

00:09:27,760 --> 00:09:31,450
interesting thing when we look at all

00:09:29,170 --> 00:09:33,790
this changed new devices new platforms

00:09:31,450 --> 00:09:36,070
do rendering engines we also seen this

00:09:33,790 --> 00:09:38,050
next paradigm shift that is going to

00:09:36,070 --> 00:09:40,150
happen it's basically bit assembly so

00:09:38,050 --> 00:09:41,980
all major browser vendors are shipping

00:09:40,150 --> 00:09:43,930
at least an experimental implementation

00:09:41,980 --> 00:09:46,930
of live assembly that basically allows

00:09:43,930 --> 00:09:49,480
any native developer to take their C++

00:09:46,930 --> 00:09:51,610
code compile it by a.m script not

00:09:49,480 --> 00:09:53,800
something that can generate bassam code

00:09:51,610 --> 00:09:56,320
and run it inside the browser that is

00:09:53,800 --> 00:09:58,300
being that vapor simply code bassam code

00:09:56,320 --> 00:10:00,280
is being run by the JavaScript engine

00:09:58,300 --> 00:10:03,040
and then ultimately is being rendered by

00:10:00,280 --> 00:10:04,450
a bit GL and this it like it's an

00:10:03,040 --> 00:10:06,730
interesting challenge a lot of us whip

00:10:04,450 --> 00:10:09,130
developers because here there's no HTML

00:10:06,730 --> 00:10:10,870
or JavaScript involved anymore it's just

00:10:09,130 --> 00:10:14,890
your native game the Sun can run in the

00:10:10,870 --> 00:10:16,330
browser and kind of my point here is

00:10:14,890 --> 00:10:18,640
that the front-end role is being

00:10:16,330 --> 00:10:21,430
redefined these years like a lot of us

00:10:18,640 --> 00:10:24,340
we care about HTML and JavaScript but as

00:10:21,430 --> 00:10:25,090
the VIP and native ameri and we're

00:10:24,340 --> 00:10:27,910
trying to bring more advanced

00:10:25,090 --> 00:10:30,490
capabilities into the platform front end

00:10:27,910 --> 00:10:32,620
is being redefined and a good example of

00:10:30,490 --> 00:10:34,780
this is for example my my android watch

00:10:32,620 --> 00:10:37,000
that can show push notifications so I

00:10:34,780 --> 00:10:39,340
can get a push notification from chrome

00:10:37,000 --> 00:10:41,350
running in a service worker that it was

00:10:39,340 --> 00:10:43,780
excavated but by a few lines of

00:10:41,350 --> 00:10:46,420
JavaScript and the question I'm asking

00:10:43,780 --> 00:10:48,910
myself are you a front-end developer if

00:10:46,420 --> 00:10:51,040
you write JavaScript in a service worker

00:10:48,910 --> 00:10:54,430
to show push notification that is

00:10:51,040 --> 00:10:57,340
rendered natively no HTML know CSS on

00:10:54,430 --> 00:10:58,660
your watch I your front-end developer

00:10:57,340 --> 00:11:00,880
because you just wrote a back at an

00:10:58,660 --> 00:11:01,660
integration right and i think that's

00:11:00,880 --> 00:11:03,300
that's going to be an interesting

00:11:01,660 --> 00:11:04,830
challenge for us

00:11:03,300 --> 00:11:07,610
when we think tooling but also we think

00:11:04,830 --> 00:11:09,330
our identity because JavaScript

00:11:07,610 --> 00:11:11,990
emergencies this might not be as

00:11:09,330 --> 00:11:15,240
relevant in the future as you think and

00:11:11,990 --> 00:11:16,950
kind of my job at Microsoft is to think

00:11:15,240 --> 00:11:18,600
about all these things and and try to

00:11:16,950 --> 00:11:22,230
make sense of it and say so how does

00:11:18,600 --> 00:11:24,089
devtools fit into all this and and kind

00:11:22,230 --> 00:11:25,680
of when I look at like the dev tools we

00:11:24,089 --> 00:11:29,190
are shipping today they all were we

00:11:25,680 --> 00:11:31,079
similar if we look at like and if you

00:11:29,190 --> 00:11:33,269
look at the dev tools we shipping we

00:11:31,079 --> 00:11:35,910
ship an edge like Google shipping chrome

00:11:33,269 --> 00:11:38,579
and they're all kind of the same kind of

00:11:35,910 --> 00:11:40,620
had the same functionality and my point

00:11:38,579 --> 00:11:42,720
here is that I think our industry has a

00:11:40,620 --> 00:11:44,370
dev tools dogma we kind of had this

00:11:42,720 --> 00:11:46,110
preconception and a diff tool is

00:11:44,370 --> 00:11:47,820
something that is installed as a patio

00:11:46,110 --> 00:11:49,649
desktop browser so it has to be docked

00:11:47,820 --> 00:11:51,390
at the bottom of your screen it has to

00:11:49,649 --> 00:11:53,850
have like a dominicks lower script tab

00:11:51,390 --> 00:11:57,060
maybe a network tool and then is a divot

00:11:53,850 --> 00:11:59,490
tool and I'm really asking myself like

00:11:57,060 --> 00:12:00,870
is this really can we do better here

00:11:59,490 --> 00:12:02,430
because if I look at AG mark what my

00:12:00,870 --> 00:12:06,779
team did back in the good old days like

00:12:02,430 --> 00:12:08,010
2007 I developer toolbar yay and and I

00:12:06,779 --> 00:12:10,709
look alike the tools we're shipping

00:12:08,010 --> 00:12:12,390
today they're quite alike the Dom

00:12:10,709 --> 00:12:15,180
Explorer you can see like some some

00:12:12,390 --> 00:12:17,100
style but technically is kind of the

00:12:15,180 --> 00:12:19,350
same tool and if I look alike what

00:12:17,100 --> 00:12:22,560
chrome is shipping it's kind of the same

00:12:19,350 --> 00:12:24,990
from each tip tools they they have the

00:12:22,560 --> 00:12:27,870
same kind of thing like network sources

00:12:24,990 --> 00:12:29,459
and like I'm really asking myself in a

00:12:27,870 --> 00:12:32,579
world where the web is running outside

00:12:29,459 --> 00:12:34,740
of the browser running on a new range of

00:12:32,579 --> 00:12:35,970
devices is this really the best we can

00:12:34,740 --> 00:12:40,170
do when we think about the whole

00:12:35,970 --> 00:12:41,790
development experience and because if

00:12:40,170 --> 00:12:43,860
you try to break down like the tools

00:12:41,790 --> 00:12:45,660
that all of us shipping today modern div

00:12:43,860 --> 00:12:47,820
to the basic a collection of tools it's

00:12:45,660 --> 00:12:49,470
a mini ide that has a dom explorer

00:12:47,820 --> 00:12:51,570
console debugger network tool

00:12:49,470 --> 00:12:53,190
performance profiler maybe has some

00:12:51,570 --> 00:12:54,630
memory profiling has some emulation

00:12:53,190 --> 00:12:56,190
features it's actually really

00:12:54,630 --> 00:12:59,820
complicated set of tools that all

00:12:56,190 --> 00:13:01,410
browsers are shipping and yet again they

00:12:59,820 --> 00:13:03,240
are like at the bottom of our screens

00:13:01,410 --> 00:13:07,920
they're basically in a fraction of our

00:13:03,240 --> 00:13:09,959
of our screens and we use them when we

00:13:07,920 --> 00:13:12,750
are debugging so we could sit in our

00:13:09,959 --> 00:13:14,520
editor we open our dev tools which debug

00:13:12,750 --> 00:13:15,820
something and then we switch back to our

00:13:14,520 --> 00:13:18,490
authoring context

00:13:15,820 --> 00:13:21,130
and basically if you think about this is

00:13:18,490 --> 00:13:22,870
what we do all day long which have

00:13:21,130 --> 00:13:26,290
between debugging and authoring

00:13:22,870 --> 00:13:27,760
debugging and watering and I'm just

00:13:26,290 --> 00:13:30,340
trying to like is this really optimal

00:13:27,760 --> 00:13:32,650
when we actually think of it because if

00:13:30,340 --> 00:13:34,390
i look at the wire workflow like it's

00:13:32,650 --> 00:13:36,160
completely broken because our authoring

00:13:34,390 --> 00:13:39,130
tools is not the same as our debugging

00:13:36,160 --> 00:13:41,890
tools and if i actually look alike the

00:13:39,130 --> 00:13:43,570
workflow then this is still a typical

00:13:41,890 --> 00:13:45,430
development workflow we open your editor

00:13:43,570 --> 00:13:47,500
or your browser you navigate your page

00:13:45,430 --> 00:13:49,510
you'll find the file you editor you make

00:13:47,500 --> 00:13:51,340
a change you go back to your browser

00:13:49,510 --> 00:13:52,810
refresh the page you open the dev tool

00:13:51,340 --> 00:13:54,790
you go to the scripts tap you find the

00:13:52,810 --> 00:13:56,500
same value just edit it you go to the

00:13:54,790 --> 00:13:58,840
Edit line you set your break point you

00:13:56,500 --> 00:14:00,520
debug you figure out what's wrong you go

00:13:58,840 --> 00:14:02,470
back to your edit so you make a change

00:14:00,520 --> 00:14:04,870
step back to to the browser and then you

00:14:02,470 --> 00:14:06,220
repeat this all day long unless you have

00:14:04,870 --> 00:14:07,540
installed like I guess Saudi enough all

00:14:06,220 --> 00:14:09,370
the tools that are running in like five

00:14:07,540 --> 00:14:11,290
different command lines and refreshing a

00:14:09,370 --> 00:14:12,850
lot of things for you but this is still

00:14:11,290 --> 00:14:15,790
the de facto way that you're building

00:14:12,850 --> 00:14:17,530
for the web this was fine when the web

00:14:15,790 --> 00:14:19,300
was just about the scientific documents

00:14:17,530 --> 00:14:21,760
but when we're building applications is

00:14:19,300 --> 00:14:23,320
this really good enough and the funny

00:14:21,760 --> 00:14:26,830
thing here is like when I talk to

00:14:23,320 --> 00:14:28,840
developers and I developers don't

00:14:26,830 --> 00:14:30,610
realize that this is a problem they

00:14:28,840 --> 00:14:32,500
don't realize that we can do better as

00:14:30,610 --> 00:14:34,450
an industry and I call this the bib

00:14:32,500 --> 00:14:36,310
develop of Stockholm Syndrome that we

00:14:34,450 --> 00:14:38,590
think is perfectly all right and it's

00:14:36,310 --> 00:14:41,050
perfectly okay the way we both for the

00:14:38,590 --> 00:14:43,990
web and I think I really think with an

00:14:41,050 --> 00:14:46,180
industry we can do better add just a few

00:14:43,990 --> 00:14:47,890
thoughts here like if you take a step

00:14:46,180 --> 00:14:49,750
back and look at our tools that all of

00:14:47,890 --> 00:14:51,370
us using every day why do I have to

00:14:49,750 --> 00:14:55,810
learn a new diff tool for each browser

00:14:51,370 --> 00:14:57,460
why is it given in 2016 why do I have to

00:14:55,810 --> 00:15:00,460
use different tools which in autumn and

00:14:57,460 --> 00:15:02,170
debugging why is that still a thing why

00:15:00,460 --> 00:15:04,570
is my edits a bit more integrated with

00:15:02,170 --> 00:15:06,700
Mario browsers and like why addicts will

00:15:04,570 --> 00:15:09,850
still bundle with our disturb browsers

00:15:06,700 --> 00:15:11,440
it's not like you can open a iphone app

00:15:09,850 --> 00:15:14,170
and open motive to land your iPhone or

00:15:11,440 --> 00:15:15,760
on your iPad why is diff tool still this

00:15:14,170 --> 00:15:18,700
thing we consider mandatory power of the

00:15:15,760 --> 00:15:20,080
browser and if you look at it that's

00:15:18,700 --> 00:15:23,350
basically this massive disconnect

00:15:20,080 --> 00:15:24,970
between and the authoring side and the

00:15:23,350 --> 00:15:27,070
debugging side and there's some of the

00:15:24,970 --> 00:15:28,220
things like weird Microsoft over the

00:15:27,070 --> 00:15:29,450
past months

00:15:28,220 --> 00:15:31,970
and some time trying to figure out if we

00:15:29,450 --> 00:15:33,920
can do better and because the way we

00:15:31,970 --> 00:15:36,350
view about the tools that we think that

00:15:33,920 --> 00:15:37,820
the diff tools and editors are basically

00:15:36,350 --> 00:15:39,020
complimentary to each other they

00:15:37,820 --> 00:15:40,640
shouldn't replace each other but they

00:15:39,020 --> 00:15:43,520
should have a way to work together

00:15:40,640 --> 00:15:45,200
somehow ahem plus basically what we've

00:15:43,520 --> 00:15:47,120
been spending a little time and trying

00:15:45,200 --> 00:15:48,590
to basically connect the two walls and

00:15:47,120 --> 00:15:50,120
having a more integrated experience when

00:15:48,590 --> 00:15:51,890
you're building for the web because it's

00:15:50,120 --> 00:15:54,740
too goddamn complicated to build for the

00:15:51,890 --> 00:15:55,940
web these days and so what if the

00:15:54,740 --> 00:15:57,590
workflow was more like you open your

00:15:55,940 --> 00:15:59,630
editor it will be your file you make a

00:15:57,590 --> 00:16:02,570
change inside your editor you open your

00:15:59,630 --> 00:16:04,700
browser you set a breakpoint inside your

00:16:02,570 --> 00:16:05,840
editor you debug it from your editor you

00:16:04,700 --> 00:16:08,000
make a change and you just see the

00:16:05,840 --> 00:16:09,290
browser update what if you get this cut

00:16:08,000 --> 00:16:11,320
the same experience where you're not

00:16:09,290 --> 00:16:14,420
forced to use a lot of different tools

00:16:11,320 --> 00:16:15,980
so actually back in March we ship like

00:16:14,420 --> 00:16:17,660
was something we call vias code chrome

00:16:15,980 --> 00:16:19,630
debugger and basically what you're

00:16:17,660 --> 00:16:23,330
seeing here is basically animated gif of

00:16:19,630 --> 00:16:24,680
vs cote bug in chrome and so you can

00:16:23,330 --> 00:16:26,840
basically just say press the debug

00:16:24,680 --> 00:16:28,400
button and then vs code connects to to

00:16:26,840 --> 00:16:31,070
to chrome and you can set your break

00:16:28,400 --> 00:16:32,630
point straight from your editor no need

00:16:31,070 --> 00:16:35,000
to leave the editor where you're a

00:16:32,630 --> 00:16:37,130
co-author and write the code so this was

00:16:35,000 --> 00:16:38,840
like a first experiment we did and I

00:16:37,130 --> 00:16:40,220
should turned out that this is quite

00:16:38,840 --> 00:16:41,900
popular because this is like the most

00:16:40,220 --> 00:16:43,640
public extension we have for Felicia

00:16:41,900 --> 00:16:45,280
pieces to decode these days because

00:16:43,640 --> 00:16:47,540
people love this integrated experience

00:16:45,280 --> 00:16:49,970
so we thought hey like we have our own

00:16:47,540 --> 00:16:52,520
proud of what can we do here and so a

00:16:49,970 --> 00:16:53,870
few months later we did a blog post or I

00:16:52,520 --> 00:16:55,700
did about Poe story announce that we are

00:16:53,870 --> 00:16:57,560
now integrated edge with sublime text

00:16:55,700 --> 00:16:59,180
and visual studio code because

00:16:57,560 --> 00:17:02,780
developers kind of wanted the same

00:16:59,180 --> 00:17:05,000
integrated experience and the way we did

00:17:02,780 --> 00:17:07,100
this was kind of in in a new i would say

00:17:05,000 --> 00:17:09,080
nun microsoft way because we released a

00:17:07,100 --> 00:17:11,270
component called the HD Gnostics adapter

00:17:09,080 --> 00:17:13,700
and that is basically the protocol

00:17:11,270 --> 00:17:15,770
adapter that enables a third-party tools

00:17:13,700 --> 00:17:17,930
to interface with edge but instead of

00:17:15,770 --> 00:17:21,680
inventing yet another API a proprietary

00:17:17,930 --> 00:17:23,150
API and then we did that because if you

00:17:21,680 --> 00:17:24,470
look at like modern dev tools they're

00:17:23,150 --> 00:17:26,870
both upon something called remote

00:17:24,470 --> 00:17:29,090
debugging protocols and tools like

00:17:26,870 --> 00:17:30,860
Visual Studio code or chrome tip school

00:17:29,090 --> 00:17:32,330
so any other tool were already

00:17:30,860 --> 00:17:34,580
integrating with the chrome a bargain

00:17:32,330 --> 00:17:36,770
protocol and so we just wrote an adapter

00:17:34,580 --> 00:17:39,110
for edge to implement the same API so

00:17:36,770 --> 00:17:40,490
that way then we could enable our

00:17:39,110 --> 00:17:42,230
existing debuggers for visual studio

00:17:40,490 --> 00:17:43,790
Visual Studio code and other two

00:17:42,230 --> 00:17:47,570
we'll just work with H out of the box

00:17:43,790 --> 00:17:49,580
and kind of the point I want to get

00:17:47,570 --> 00:17:52,130
through here that we do support an open

00:17:49,580 --> 00:17:54,679
ecosystem web browser and torn vendors

00:17:52,130 --> 00:17:56,900
can work together we don't want to like

00:17:54,679 --> 00:17:59,600
in enable this closed ecosystem in this

00:17:56,900 --> 00:18:01,940
closed world where we try to force you

00:17:59,600 --> 00:18:04,220
to use one particular product we want to

00:18:01,940 --> 00:18:07,520
enable as many tools working with our

00:18:04,220 --> 00:18:10,340
our platform and another interesting

00:18:07,520 --> 00:18:12,370
thing here in happened recently

00:18:10,340 --> 00:18:14,990
devastating an effort by google is

00:18:12,370 --> 00:18:17,179
google committed a new project called v8

00:18:14,990 --> 00:18:19,790
inspector to note and that basically

00:18:17,179 --> 00:18:22,549
means that node now has embraced the

00:18:19,790 --> 00:18:23,780
same a chrome debugging protocol so you

00:18:22,549 --> 00:18:26,690
can use chrome dev tools you can use

00:18:23,780 --> 00:18:30,679
Visual Studio code to debug node because

00:18:26,690 --> 00:18:32,660
it's the same API and this opens up some

00:18:30,679 --> 00:18:36,080
really interesting possibilities that

00:18:32,660 --> 00:18:40,490
hasn't been possible before because by

00:18:36,080 --> 00:18:42,169
having the same API for both the line

00:18:40,490 --> 00:18:44,540
side and the back end side of the server

00:18:42,169 --> 00:18:47,870
side that means we can actually have

00:18:44,540 --> 00:18:49,760
simultaneous debugging and I call this

00:18:47,870 --> 00:18:50,900
like the knee ivana of debugging because

00:18:49,760 --> 00:18:52,910
that basically means you can keep up

00:18:50,900 --> 00:18:54,950
both parts of your application if your

00:18:52,910 --> 00:18:57,500
full stack developer as many of us are

00:18:54,950 --> 00:19:00,850
today and so I just want to show a quick

00:18:57,500 --> 00:19:03,830
demo on how how that actually works so

00:19:00,850 --> 00:19:05,240
what I have open here switches to decode

00:19:03,830 --> 00:19:08,840
it's the text biggest big enough to the

00:19:05,240 --> 00:19:11,299
zoom in ok I didn't hear any or anything

00:19:08,840 --> 00:19:13,910
so I think it's ok so basically what I

00:19:11,299 --> 00:19:16,580
have here is a visa to decode have a

00:19:13,910 --> 00:19:18,860
little note abusing express what you

00:19:16,580 --> 00:19:20,179
guys can see here is I serve my my

00:19:18,860 --> 00:19:22,570
bundle da housecat allocation with

00:19:20,179 --> 00:19:24,830
browserify so it's was bundling my full

00:19:22,570 --> 00:19:28,820
application and generating a source map

00:19:24,830 --> 00:19:30,740
and and my console application is just

00:19:28,820 --> 00:19:33,169
an angular app it can basically view

00:19:30,740 --> 00:19:34,940
like a time zone I can see what time it

00:19:33,169 --> 00:19:37,220
is in Vancouver and what is in Singapore

00:19:34,940 --> 00:19:39,500
and that's about it but the cool thing

00:19:37,220 --> 00:19:42,559
here is like what I now can do is that

00:19:39,500 --> 00:19:44,720
again just go to the debug mode in visit

00:19:42,559 --> 00:19:47,360
to the code and press debug and what

00:19:44,720 --> 00:19:50,000
your then seeing is like now I'm avid

00:19:47,360 --> 00:19:52,100
the debugger enabled so if i go to my

00:19:50,000 --> 00:19:53,750
server side code here i can set a

00:19:52,100 --> 00:19:55,020
breakpoint always set it so if i refresh

00:19:53,750 --> 00:19:56,610
the page

00:19:55,020 --> 00:19:59,460
what you're seeing here is that I'm now

00:19:56,610 --> 00:20:01,560
debugging my note code I can step debug

00:19:59,460 --> 00:20:03,450
and continue if I go down here I have

00:20:01,560 --> 00:20:05,190
the full call stack or what's going on

00:20:03,450 --> 00:20:07,980
you know back in time and I going to say

00:20:05,190 --> 00:20:10,170
continue that's that's like cool because

00:20:07,980 --> 00:20:12,660
then you have visual visual debugging if

00:20:10,170 --> 00:20:14,370
a node but one of the things that we

00:20:12,660 --> 00:20:16,920
just released and that's a part of like

00:20:14,370 --> 00:20:18,510
at the insider build officials to decode

00:20:16,920 --> 00:20:21,540
that's why the icon down here is green

00:20:18,510 --> 00:20:24,180
is that we have a support for move to

00:20:21,540 --> 00:20:28,020
target debugging so what I can do while

00:20:24,180 --> 00:20:29,280
my my my debug has now attached to note

00:20:28,020 --> 00:20:33,840
is that I can actually just select

00:20:29,280 --> 00:20:35,910
chrome up here if I press a debug again

00:20:33,840 --> 00:20:37,260
what you're seeing is that I have

00:20:35,910 --> 00:20:38,910
another instance of chrome running I'm

00:20:37,260 --> 00:20:40,640
now hitting the same server side break

00:20:38,910 --> 00:20:43,410
point because the page is loading and

00:20:40,640 --> 00:20:45,420
then my avocation is open but now i can

00:20:43,410 --> 00:20:47,280
do is that i can just open up my client

00:20:45,420 --> 00:20:49,500
side code so i can time to go to a

00:20:47,280 --> 00:20:53,640
controller here let's just browse a bit

00:20:49,500 --> 00:20:56,730
around on add new click i want to set a

00:20:53,640 --> 00:20:58,980
breakpoint i was to see what happens

00:20:56,730 --> 00:21:00,690
here is that what you're seeing is like

00:20:58,980 --> 00:21:03,360
chrome is now being tossed because

00:21:00,690 --> 00:21:05,910
support from Visual Studio code and I

00:21:03,360 --> 00:21:07,770
can do step debugging of what's

00:21:05,910 --> 00:21:09,900
happening in my client side code and

00:21:07,770 --> 00:21:11,790
what you see here is basically you have

00:21:09,900 --> 00:21:12,990
like both threads because the our debug

00:21:11,790 --> 00:21:14,760
is connected to both parts of your

00:21:12,990 --> 00:21:17,010
application and you can basically just

00:21:14,760 --> 00:21:19,950
continue to have a continuous debugging

00:21:17,010 --> 00:21:22,020
experience across run times and also

00:21:19,950 --> 00:21:23,400
across stacks I think this is like the

00:21:22,020 --> 00:21:25,260
first step we're taking on bringing a

00:21:23,400 --> 00:21:27,240
more simple workflow to your development

00:21:25,260 --> 00:21:29,100
workflow because you why would you knew

00:21:27,240 --> 00:21:31,100
why would you use a different tool and

00:21:29,100 --> 00:21:33,270
when you can just use the same

00:21:31,100 --> 00:21:35,100
experience regardless what you need to

00:21:33,270 --> 00:21:37,950
debug and kind of the point here that

00:21:35,100 --> 00:21:39,810
this is just node and chrome our

00:21:37,950 --> 00:21:42,330
architecture of Visual Studio code

00:21:39,810 --> 00:21:44,580
allows you to debug edge with you and

00:21:42,330 --> 00:21:46,230
would you go back end because we have

00:21:44,580 --> 00:21:47,550
debuggers available for that so we can

00:21:46,230 --> 00:21:49,710
provide this consistent experience

00:21:47,550 --> 00:21:52,170
across your stack you could imagine

00:21:49,710 --> 00:21:53,400
you're hitting an API that is running on

00:21:52,170 --> 00:21:56,730
your staging server you could just

00:21:53,400 --> 00:21:58,500
configure the debugger to connect a tool

00:21:56,730 --> 00:22:02,130
richer to your staging server wish I

00:21:58,500 --> 00:22:03,930
find really really cool so another thing

00:22:02,130 --> 00:22:06,390
we did was basically we thought okay if

00:22:03,930 --> 00:22:07,980
the web is all about mobile devices why

00:22:06,390 --> 00:22:10,380
don't we just enable

00:22:07,980 --> 00:22:12,960
on iOS so we did the same experience and

00:22:10,380 --> 00:22:14,580
while you can debug your iOS device when

00:22:12,960 --> 00:22:15,840
we should suit your coat same same

00:22:14,580 --> 00:22:17,730
intimate experience but the key thing

00:22:15,840 --> 00:22:20,940
here is that this was actually the first

00:22:17,730 --> 00:22:22,710
time if your Windows you could debug iOS

00:22:20,940 --> 00:22:24,270
from your Windows machine before we

00:22:22,710 --> 00:22:26,850
release this you could you had to go out

00:22:24,270 --> 00:22:29,280
and buy a mac or mac mini just a debug

00:22:26,850 --> 00:22:32,549
your iOS device that's no longer needed

00:22:29,280 --> 00:22:34,620
and it's the same concept again we used

00:22:32,549 --> 00:22:37,530
our same debugger we use the same API

00:22:34,620 --> 00:22:39,179
and then we use a protocol adapter to

00:22:37,530 --> 00:22:43,559
enable iOS devices to work with our

00:22:39,179 --> 00:22:46,049
stuff and a thing i want to touch upon

00:22:43,559 --> 00:22:47,340
here it's like when we think about it

00:22:46,049 --> 00:22:48,900
it's like now we have like a more

00:22:47,340 --> 00:22:50,669
integrated web development workflow

00:22:48,900 --> 00:22:53,010
where we can try to avoid a lot of

00:22:50,669 --> 00:22:55,590
different tools as a part of our stack

00:22:53,010 --> 00:22:57,510
but why is the web one of the few

00:22:55,590 --> 00:22:59,880
platforms also bundles a full

00:22:57,510 --> 00:23:03,780
development environment with the runtime

00:22:59,880 --> 00:23:06,419
i can if i do an android app but do a

00:23:03,780 --> 00:23:08,370
native c++ ever my desktop there's no

00:23:06,419 --> 00:23:10,200
full ID included as a part of my

00:23:08,370 --> 00:23:11,910
application it's not a part that the

00:23:10,200 --> 00:23:15,990
user can hit like f12 and suddenly they

00:23:11,910 --> 00:23:18,390
see a magic editor right because if you

00:23:15,990 --> 00:23:20,340
look at what what induces are

00:23:18,390 --> 00:23:24,179
experiencing normal VIP users are

00:23:20,340 --> 00:23:27,000
confused this is a screenshot of a

00:23:24,179 --> 00:23:29,309
confused user talks about like child

00:23:27,000 --> 00:23:30,960
abuse and like it's really being it

00:23:29,309 --> 00:23:33,090
feeling confused and the point of this

00:23:30,960 --> 00:23:34,740
is because of this is because there's a

00:23:33,090 --> 00:23:37,290
warning witnessing here force all of his

00:23:34,740 --> 00:23:40,440
children to be wrapped in a block and

00:23:37,290 --> 00:23:42,270
like it makes sense likes toolbox for

00:23:40,440 --> 00:23:44,700
development contains an inline span

00:23:42,270 --> 00:23:48,059
child what the heck is that right and

00:23:44,700 --> 00:23:50,460
like imagine that the do of regular whip

00:23:48,059 --> 00:23:52,910
used and you just by mistake press

00:23:50,460 --> 00:23:55,650
inspect element open this then like

00:23:52,910 --> 00:23:58,410
cyber attack what's going on here right

00:23:55,650 --> 00:24:00,809
this is really crazy and the thing is

00:23:58,410 --> 00:24:03,480
like this is Firefox this is from our

00:24:00,809 --> 00:24:05,820
backtrack and edge like normal BIP users

00:24:03,480 --> 00:24:07,290
don't know what inspect element is here

00:24:05,820 --> 00:24:09,720
there's a person that has played a

00:24:07,290 --> 00:24:11,730
facebook game a suddenly clicked inspect

00:24:09,720 --> 00:24:13,979
element and now the devtools been open

00:24:11,730 --> 00:24:16,389
for three days

00:24:13,979 --> 00:24:20,019
like they don't know what's going on

00:24:16,389 --> 00:24:21,909
right which is which is kind of scary

00:24:20,019 --> 00:24:25,539
because to us as developers is the most

00:24:21,909 --> 00:24:27,039
natural thing in the world and if you

00:24:25,539 --> 00:24:29,049
open up chrome devtools and you go to

00:24:27,039 --> 00:24:30,580
Facebook and Google property your basic

00:24:29,049 --> 00:24:32,739
seeing the same that normal dip users

00:24:30,580 --> 00:24:35,080
are hacking themselves so Facebook is

00:24:32,739 --> 00:24:36,879
forced to like at this massive like

00:24:35,080 --> 00:24:38,739
console warning this is a browser

00:24:36,879 --> 00:24:40,720
feature in Jennifer developers don't

00:24:38,739 --> 00:24:43,779
copy paste stuff in here because

00:24:40,720 --> 00:24:45,519
apparently people are copy pasting weird

00:24:43,779 --> 00:24:47,499
javascript in here to get more friends

00:24:45,519 --> 00:24:49,840
or bit more likes or whatever right but

00:24:47,499 --> 00:24:51,429
to me like when we look at this

00:24:49,840 --> 00:24:53,679
holistically this is kind of a problem

00:24:51,429 --> 00:24:55,419
for the web platform that users of the

00:24:53,679 --> 00:25:00,609
web basic hacking himself or feeling

00:24:55,419 --> 00:25:02,049
feeling scared right so um we will at

00:25:00,609 --> 00:25:04,989
least a blog post the thing was like

00:25:02,049 --> 00:25:06,909
yesterday or the day before because in

00:25:04,989 --> 00:25:09,309
the edge team we've been looking at our

00:25:06,909 --> 00:25:12,970
relatively simple telemetry we have for

00:25:09,309 --> 00:25:14,739
its dev tools and this is a graph that

00:25:12,970 --> 00:25:16,779
shows that this distribution on on

00:25:14,739 --> 00:25:19,119
basically how long how many seconds

00:25:16,779 --> 00:25:20,889
people are using our tool and we

00:25:19,119 --> 00:25:23,289
basically saw that the majority of our

00:25:20,889 --> 00:25:25,539
users of assistive tools are opening the

00:25:23,289 --> 00:25:28,690
tools clicking a bit around and then

00:25:25,539 --> 00:25:30,519
closing it within 15 seconds and we

00:25:28,690 --> 00:25:32,289
basically seen this as an indicator of

00:25:30,519 --> 00:25:36,099
people are opening the dips pools by

00:25:32,289 --> 00:25:38,739
mistake and because we also can we can

00:25:36,099 --> 00:25:41,139
see like if people click inside the tool

00:25:38,739 --> 00:25:43,059
and people open it have it open for

00:25:41,139 --> 00:25:44,229
maybe six six seconds and then they find

00:25:43,059 --> 00:25:46,239
the close button and it closed it again

00:25:44,229 --> 00:25:47,379
they're really confused about this thing

00:25:46,239 --> 00:25:50,080
and this makes sense when you think

00:25:47,379 --> 00:25:52,779
about it because H is right now is

00:25:50,080 --> 00:25:54,220
mainly in user browser not a lot of

00:25:52,779 --> 00:25:56,649
developers are using it because our

00:25:54,220 --> 00:25:58,690
compel compatibility are great but that

00:25:56,649 --> 00:26:00,249
basically meant that we looked at this

00:25:58,690 --> 00:26:02,409
data and as a part of our last release

00:26:00,249 --> 00:26:04,359
we should be a few months ago we've

00:26:02,409 --> 00:26:06,820
decided to hide a chip tools by default

00:26:04,359 --> 00:26:08,559
so all the developer options like view

00:26:06,820 --> 00:26:10,869
souls and inspect element are now hidden

00:26:08,559 --> 00:26:12,639
because regular users don't care about

00:26:10,869 --> 00:26:15,820
these things they just want to go to

00:26:12,639 --> 00:26:17,349
Netflix or go to Facebook and and yet

00:26:15,820 --> 00:26:19,509
again we are trying to balance the

00:26:17,349 --> 00:26:21,519
balance like the user experience so you

00:26:19,509 --> 00:26:23,799
can go to about flags and you can it

00:26:21,519 --> 00:26:25,119
like enable it here and say you want to

00:26:23,799 --> 00:26:26,289
show you souls in a speculum in the

00:26:25,119 --> 00:26:26,950
consequent you click it a new habit

00:26:26,289 --> 00:26:29,139
again

00:26:26,950 --> 00:26:31,360
like Safari but we also have kept in the

00:26:29,139 --> 00:26:33,070
this top shortcut so if you press f12 or

00:26:31,360 --> 00:26:34,840
put something that can open the dev

00:26:33,070 --> 00:26:37,210
tools to Meereen able the mode again but

00:26:34,840 --> 00:26:38,950
we basically like doing this as an

00:26:37,210 --> 00:26:41,350
experiment and looking at the data and

00:26:38,950 --> 00:26:42,730
then reevaluating it and like I would

00:26:41,350 --> 00:26:44,380
love to hear your feedback and turn

00:26:42,730 --> 00:26:46,299
stuff like if this is confusing for you

00:26:44,380 --> 00:26:48,399
as a developer we basically just trying

00:26:46,299 --> 00:26:52,389
to shield and use a much as possible for

00:26:48,399 --> 00:26:55,299
these really powerful tools and I just

00:26:52,389 --> 00:26:57,669
want to open I don't have like an answer

00:26:55,299 --> 00:26:59,529
to this question but why a dev tools

00:26:57,669 --> 00:27:00,940
them still bundled with our browsers if

00:26:59,529 --> 00:27:02,230
you look at all the change that has

00:27:00,940 --> 00:27:04,269
happened to the web is about

00:27:02,230 --> 00:27:07,090
applications that the biggest now

00:27:04,269 --> 00:27:08,620
running in pwas without any browser

00:27:07,090 --> 00:27:10,179
chrome the babe is running inside

00:27:08,620 --> 00:27:12,250
electron shells on your desktop

00:27:10,179 --> 00:27:13,720
basically the browser chrome the address

00:27:12,250 --> 00:27:16,090
bar the refresh button all these things

00:27:13,720 --> 00:27:18,340
are now gone and if you look at like the

00:27:16,090 --> 00:27:20,080
devices people are the next billion are

00:27:18,340 --> 00:27:21,909
going to experience a web app it's going

00:27:20,080 --> 00:27:23,980
to be none desktop devices it's going to

00:27:21,909 --> 00:27:25,720
be mobile phones it's going to be a new

00:27:23,980 --> 00:27:27,669
kind of variables whole lenses kind of

00:27:25,720 --> 00:27:30,490
new experiences that doesn't have the

00:27:27,669 --> 00:27:33,460
traditional keyboard and mouse and then

00:27:30,490 --> 00:27:35,950
yet again we as an industry we insist on

00:27:33,460 --> 00:27:37,990
shipping the diff tool use each and

00:27:35,950 --> 00:27:40,840
every day to debug or all of these other

00:27:37,990 --> 00:27:42,090
devices in a desktop browser and bundle

00:27:40,840 --> 00:27:44,830
it at the bottom percent of your screen

00:27:42,090 --> 00:27:48,130
for example if you want to debug samsung

00:27:44,830 --> 00:27:49,960
internet and i am not aware that samsung

00:27:48,130 --> 00:27:51,490
shipping a desktop browsers all right so

00:27:49,960 --> 00:27:54,100
maybe we need to take a step back and

00:27:51,490 --> 00:27:55,809
enable the dev tools to work out of the

00:27:54,100 --> 00:27:57,700
desktop context that maybe work with

00:27:55,809 --> 00:28:01,840
some of these new device factors in the

00:27:57,700 --> 00:28:04,360
future and really when i think about the

00:28:01,840 --> 00:28:06,010
future of diff tools is looking rather

00:28:04,360 --> 00:28:08,019
complicated because the future of diff

00:28:06,010 --> 00:28:10,539
tools is basically going to be a bunch

00:28:08,019 --> 00:28:12,340
of different tools we use microsoft we

00:28:10,539 --> 00:28:13,899
will probably continue to ship it stiff

00:28:12,340 --> 00:28:16,059
tools will public continues ship Visual

00:28:13,899 --> 00:28:17,700
Studio Visual Studio code but what we

00:28:16,059 --> 00:28:20,049
imagine is basically world where these

00:28:17,700 --> 00:28:21,820
different tools are more integrated

00:28:20,049 --> 00:28:23,080
because you as a bit developer you

00:28:21,820 --> 00:28:24,340
should have the choice if you want to

00:28:23,080 --> 00:28:26,740
use a step to the chrome dev tools

00:28:24,340 --> 00:28:28,630
without browser and we already enabled

00:28:26,740 --> 00:28:30,010
that and the world is also going to be

00:28:28,630 --> 00:28:31,419
that you need you want to have your

00:28:30,010 --> 00:28:32,919
favorite editor that could be at them

00:28:31,419 --> 00:28:34,480
there could be them or whatever but that

00:28:32,919 --> 00:28:36,610
needs to be more integrated with the

00:28:34,480 --> 00:28:37,610
runtimes and game developers when we

00:28:36,610 --> 00:28:40,340
need to publish their

00:28:37,610 --> 00:28:42,350
the games like we cannot force them into

00:28:40,340 --> 00:28:43,880
a trip to the chrome dev tools and say

00:28:42,350 --> 00:28:45,710
you need to debug your paper simply game

00:28:43,880 --> 00:28:47,510
in this bottom of the screen they will

00:28:45,710 --> 00:28:50,000
probably prefer to sit inside the editor

00:28:47,510 --> 00:28:52,640
where they wrote the code and so we need

00:28:50,000 --> 00:28:54,799
to enable all these tools to work with

00:28:52,640 --> 00:28:56,240
all the runtimes and we look at the run

00:28:54,799 --> 00:28:58,370
time to run times are going to be much

00:28:56,240 --> 00:29:00,170
more complicated because as Sam some of

00:28:58,370 --> 00:29:02,570
the internet that's UC browser this edge

00:29:00,170 --> 00:29:04,010
so far I that's a whole new range of

00:29:02,570 --> 00:29:06,830
devices that's probably going to be like

00:29:04,010 --> 00:29:08,570
five different variants of electron wave

00:29:06,830 --> 00:29:11,330
runtimes you need to check it so these

00:29:08,570 --> 00:29:14,240
tools need to be able to work with a

00:29:11,330 --> 00:29:15,650
broad set of run times before you as a

00:29:14,240 --> 00:29:17,390
developer can be successful and

00:29:15,650 --> 00:29:21,290
productive and then if you look at the

00:29:17,390 --> 00:29:22,640
basis that that these tools these

00:29:21,290 --> 00:29:24,200
browsers or run times are running on

00:29:22,640 --> 00:29:26,630
it's going to be a broad range of

00:29:24,200 --> 00:29:28,309
devices and if you are sitting here in

00:29:26,630 --> 00:29:30,710
Singapore and you need to roll out in

00:29:28,309 --> 00:29:33,140
India maybe you need access to devices

00:29:30,710 --> 00:29:35,330
Japan up by hand Singapore because they

00:29:33,140 --> 00:29:37,190
use a different set of hardware so I

00:29:35,330 --> 00:29:39,260
also imagine a future where we have

00:29:37,190 --> 00:29:41,240
device clouds where you can say I want

00:29:39,260 --> 00:29:44,299
to roll out in Indonesia give me the

00:29:41,240 --> 00:29:46,100
five most used devices and then you get

00:29:44,299 --> 00:29:47,720
them screencast to you or something like

00:29:46,100 --> 00:29:49,630
that we need to solve this because

00:29:47,720 --> 00:29:52,880
availability of low-end high-end

00:29:49,630 --> 00:29:54,290
hardware is a problem for for all of us

00:29:52,880 --> 00:29:57,200
regardless of where we are in the world

00:29:54,290 --> 00:30:00,500
so I imagine that you can use s dev

00:29:57,200 --> 00:30:03,049
tools to debug safari internet or Sam

00:30:00,500 --> 00:30:05,179
some internet and you can add have the

00:30:03,049 --> 00:30:06,890
code running on a stream device coming

00:30:05,179 --> 00:30:09,559
from the cloud I think this is the

00:30:06,890 --> 00:30:12,620
direction we need to go go towards to

00:30:09,559 --> 00:30:17,120
enable you as an us as developers to be

00:30:12,620 --> 00:30:18,650
much more successful and as the bib

00:30:17,120 --> 00:30:19,910
grows out of the browser which is

00:30:18,650 --> 00:30:22,190
happening these days as the whole

00:30:19,910 --> 00:30:26,030
progressive bit movement we need to

00:30:22,190 --> 00:30:27,380
reimagine our dev tools and and at

00:30:26,030 --> 00:30:30,650
Microsoft free spending a lot of time

00:30:27,380 --> 00:30:32,990
trying to figure this out and as of a

00:30:30,650 --> 00:30:35,360
few weeks ago we decided to scale up our

00:30:32,990 --> 00:30:36,710
or a stiff tools quite significantly so

00:30:35,360 --> 00:30:38,540
if you're interested in trying to help

00:30:36,710 --> 00:30:41,600
out and build the future of dip tools

00:30:38,540 --> 00:30:44,660
like check out this ul and by that I'm

00:30:41,600 --> 00:30:46,820
20 seconds over time so thank you so

00:30:44,660 --> 00:30:49,570
much thank you for having me and if

00:30:46,820 --> 00:30:51,670
you're interested tag along on Twitter

00:30:49,570 --> 00:30:54,450
that's the decibel the future clips all

00:30:51,670 --> 00:30:54,450
together thanks

00:31:01,630 --> 00:31:03,690

YouTube URL: https://www.youtube.com/watch?v=KxRX_HRGRo4


