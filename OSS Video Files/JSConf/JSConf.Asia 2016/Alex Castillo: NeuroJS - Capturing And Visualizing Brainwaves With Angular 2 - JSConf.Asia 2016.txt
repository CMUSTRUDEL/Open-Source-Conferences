Title: Alex Castillo: NeuroJS - Capturing And Visualizing Brainwaves With Angular 2 - JSConf.Asia 2016
Publication date: 2016-12-14
Playlist: JSConf.Asia 2016
Description: 
	*** Watch an additional demo at minute 30:30 of this video ***

Come and see a demonstration on how to interact with an open-source brain-computer interface via JavaScript. I have been working with the OpenBCI team in order to visualize brainwaves in the browser with Angular 2. Find out how your thoughts are captured and how to get involved in the NeuroTech community.

Alex is a Software Engineer at Netflix and specializes in enterprise single-page applications.
He is very passionate about the human brain and how we can use technology to understand it better.
Alex has contributed to the open source community and focuses on Angular and NeuroTech. In his spare time, he likes experimenting with guitars and IoT.


JSConf.Asia - Capitol Theatre, Singapore - 26 November 2016.

Source: https://2016.jsconf.asia/

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:00,500 --> 00:00:20,970
[Music]

00:00:17,600 --> 00:00:24,890
great awesome thank you Justin for

00:00:20,970 --> 00:00:27,779
introducing me my name is Alex Castilla

00:00:24,890 --> 00:00:30,900
I'm a software engineer in Netflix but

00:00:27,779 --> 00:00:38,280
today I'm here to talk to you about my

00:00:30,900 --> 00:00:41,670
side project so I build software to

00:00:38,280 --> 00:00:44,570
understand human behavior and one of the

00:00:41,670 --> 00:00:49,079
sources that I based my research on is

00:00:44,570 --> 00:00:52,170
electricity the human body is an ocean

00:00:49,079 --> 00:00:55,469
of electricity everything we do is

00:00:52,170 --> 00:00:58,190
controlled and facilitated by electrical

00:00:55,469 --> 00:01:02,160
signals are running through our bodies

00:00:58,190 --> 00:01:04,519
well today I'm very excited to tell you

00:01:02,160 --> 00:01:07,650
that we're going to use JavaScript to

00:01:04,519 --> 00:01:13,799
witness some of these electricity in

00:01:07,650 --> 00:01:16,740
real time but before I proceed I will

00:01:13,799 --> 00:01:19,530
actually like to get a volunteer that is

00:01:16,740 --> 00:01:23,040
going to join me on stage and it's going

00:01:19,530 --> 00:01:24,840
to wear the nerdy hat anyone up for the

00:01:23,040 --> 00:01:28,350
challenges raise your hands I have one

00:01:24,840 --> 00:01:30,030
here two here I see someone jump in

00:01:28,350 --> 00:01:37,650
there I'm a little blind but you can

00:01:30,030 --> 00:01:40,820
come yeah thank you whoops whoa what's

00:01:37,650 --> 00:01:44,009
your name sir a mint payment payment

00:01:40,820 --> 00:01:47,810
yeah all right nice to meet you all

00:01:44,009 --> 00:01:47,810
right please come here

00:01:48,940 --> 00:01:55,760
take a seat and I'm just going to put

00:01:53,900 --> 00:01:57,290
this on your head did you look like you

00:01:55,760 --> 00:02:00,260
don't have a huge head which is a great

00:01:57,290 --> 00:02:02,690
thing because sometimes this doesn't

00:02:00,260 --> 00:02:08,720
feed and people have to you know exit

00:02:02,690 --> 00:02:14,380
but electrocute you we'll get to that

00:02:08,720 --> 00:02:20,600
part yeah

00:02:14,380 --> 00:02:24,590
you scare me man all right so you're

00:02:20,600 --> 00:02:27,230
gonna feel a little bit of spikes but we

00:02:24,590 --> 00:02:29,030
actually want that because those are the

00:02:27,230 --> 00:02:33,800
electrodes are going to make contact

00:02:29,030 --> 00:02:38,090
with your head make sure if it heard

00:02:33,800 --> 00:02:40,900
just let me know it shouldn't but yeah

00:02:38,090 --> 00:02:44,620
you do have a good head for this headset

00:02:40,900 --> 00:02:48,319
god bless your parents so I'm going to

00:02:44,620 --> 00:02:53,440
put this your lobes here that is just so

00:02:48,319 --> 00:02:56,959
your head doesn't explode so just okay

00:02:53,440 --> 00:02:58,880
I'm going to turn it on if you can just

00:02:56,959 --> 00:03:01,670
stand up real quick and turn around so

00:02:58,880 --> 00:03:03,579
they can see that it's on just turn

00:03:01,670 --> 00:03:07,579
around you're gonna see a blue light

00:03:03,579 --> 00:03:10,640
take a seat relax and and just so we're

00:03:07,579 --> 00:03:13,250
clear I'm gonna have pseudo access to

00:03:10,640 --> 00:03:14,510
your brain just relax

00:03:13,250 --> 00:03:17,750
and don't think of anything

00:03:14,510 --> 00:03:19,400
inappropriate all right all right if

00:03:17,750 --> 00:03:20,989
you're not the guy for this just let me

00:03:19,400 --> 00:03:24,590
know how we can save you the

00:03:20,989 --> 00:03:26,299
embarrassment all right and I hope you

00:03:24,590 --> 00:03:33,739
got some time to read the fine print in

00:03:26,299 --> 00:03:40,040
here it's not yeah all right so I'm

00:03:33,739 --> 00:03:41,900
gonna take what is going to capture the

00:03:40,040 --> 00:03:45,040
signals from the hats and I'm just gonna

00:03:41,900 --> 00:03:45,040
plug it into my computer

00:03:47,750 --> 00:03:58,460
good I'm gonna exit my slice and just

00:03:50,750 --> 00:03:59,810
start running node all right so I'm just

00:03:58,460 --> 00:04:05,030
gonna run and no doubt that I'm gonna

00:03:59,810 --> 00:04:13,700
walk you through a little later but what

00:04:05,030 --> 00:04:17,690
we want is to visualize it's just gonna

00:04:13,700 --> 00:04:19,970
take a few seconds it's gonna enter your

00:04:17,690 --> 00:04:25,400
brain and we should start seeing

00:04:19,970 --> 00:04:26,800
something real real soon if you have

00:04:25,400 --> 00:04:31,250
something on your head

00:04:26,800 --> 00:04:33,110
all right of course

00:04:31,250 --> 00:04:36,950
I should have turned these on after that

00:04:33,110 --> 00:04:39,470
so let me just fix it real quick all

00:04:36,950 --> 00:04:40,000
right there you go are you comfortable

00:04:39,470 --> 00:04:44,350
there

00:04:40,000 --> 00:04:44,350
awesome I'm gonna give this one more try

00:04:50,180 --> 00:05:01,690
oh there must be something wrong with

00:05:00,470 --> 00:05:07,610
you man

00:05:01,690 --> 00:05:09,590
exception yeah for sure there's

00:05:07,610 --> 00:05:11,030
something completely wrong with you

00:05:09,590 --> 00:05:13,759
I'm gonna try to fix something here and

00:05:11,030 --> 00:05:15,770
see are you thinking of something

00:05:13,759 --> 00:05:23,380
inappropriate right now that would do it

00:05:15,770 --> 00:05:30,370
for sure oh no man yeah yeah

00:05:23,380 --> 00:05:37,140
this is this is not great I have to kill

00:05:30,370 --> 00:05:37,140
the process it's your name process

00:05:40,830 --> 00:05:44,559
I'm not running anything else let's give

00:05:43,809 --> 00:05:46,709
this another try

00:05:44,559 --> 00:05:51,339
otherwise I'll have to kill the process

00:05:46,709 --> 00:05:56,229
okay I'll have to what is the command

00:05:51,339 --> 00:05:59,429
again kill or no - nine

00:05:56,229 --> 00:05:59,429
now kill oh yeah

00:06:25,360 --> 00:06:33,260
okay this is embarrassing part when I'm

00:06:28,220 --> 00:06:37,480
going to go to stack overflow you know

00:06:33,260 --> 00:06:37,480
you all do this right you all do this I

00:06:41,980 --> 00:06:46,450
don't know how many times I've had to do

00:06:45,350 --> 00:06:54,230
this before

00:06:46,450 --> 00:06:54,950
all right I knew we had a nine I knew

00:06:54,230 --> 00:06:58,220
had a nine

00:06:54,950 --> 00:07:04,060
there you go up what I don't have is a

00:06:58,220 --> 00:07:04,060
PID and I have to do a grab first yeah

00:07:07,240 --> 00:07:11,650
no you're making this very difficult

00:07:16,870 --> 00:07:31,180
11:07 fifty which one Jesus where is it

00:07:31,510 --> 00:07:42,460
kill and the PID is 1050

00:07:48,070 --> 00:07:52,780
[Music]

00:07:49,380 --> 00:08:02,949
thank you thank you for your patience

00:07:52,780 --> 00:08:04,800
but that didn't work I'm gonna give this

00:08:02,949 --> 00:08:06,520
another try

00:08:04,800 --> 00:08:18,569
although what is it gonna have to be

00:08:06,520 --> 00:08:18,569
honest with us again yeah

00:08:31,339 --> 00:08:37,580
well I give me one second of this one

00:08:38,899 --> 00:08:48,360
second I try this one off plug this one

00:08:45,480 --> 00:09:06,199
in turn this one on again

00:08:48,360 --> 00:09:08,480
oh no comment oh there you go

00:09:06,199 --> 00:09:11,550
thank you guys you do have something

00:09:08,480 --> 00:09:13,050
great thank you for your patience is not

00:09:11,550 --> 00:09:15,360
easy interacting with the human brain

00:09:13,050 --> 00:09:18,959
with JavaScript alright so what we have

00:09:15,360 --> 00:09:21,180
in here I'll walk you through but first

00:09:18,959 --> 00:09:25,199
let's just see the fun stuff right and

00:09:21,180 --> 00:09:31,230
let's start by checking out some actual

00:09:25,199 --> 00:09:34,350
brain waves all right we are getting

00:09:31,230 --> 00:09:36,089
some signals in here what I do see is

00:09:34,350 --> 00:09:38,910
that there are some channels that are

00:09:36,089 --> 00:09:44,370
not making contact with the scalp that

00:09:38,910 --> 00:09:48,449
will be channel 1 2 3 4 5 5 & 6 okay so

00:09:44,370 --> 00:09:55,170
I think this one here there you don't

00:09:48,449 --> 00:09:55,800
move okay this relax if that one doesn't

00:09:55,170 --> 00:09:57,630
work

00:09:55,800 --> 00:10:13,889
it could mean you have nothing in this

00:09:57,630 --> 00:10:15,389
area I'm just being honest here is it a

00:10:13,889 --> 00:10:17,819
little tight I think it's that I think

00:10:15,389 --> 00:10:19,949
this is just way too tight that means

00:10:17,819 --> 00:10:21,990
you have probably a whitehead there's

00:10:19,949 --> 00:10:26,240
nothing wrong with that though can you

00:10:21,990 --> 00:10:26,240
feel that all right we have one

00:10:29,269 --> 00:10:33,019
there you go now

00:10:40,209 --> 00:10:47,490
one two three one two three this one

00:10:43,269 --> 00:10:47,490
here almost almost almost

00:11:01,240 --> 00:11:05,160
all right I think we can proceed with

00:11:02,680 --> 00:11:05,160
what we have

00:11:10,460 --> 00:11:15,529
don't shut down that part of your head

00:11:12,320 --> 00:11:19,700
just you know it's just think of

00:11:15,529 --> 00:11:25,880
beautiful things all right we'll work

00:11:19,700 --> 00:11:29,690
with those seven okay all right so this

00:11:25,880 --> 00:11:31,250
is some of the brainwaves visualized in

00:11:29,690 --> 00:11:35,150
what we call a time series all the

00:11:31,250 --> 00:11:37,279
contract is it's not great in here but

00:11:35,150 --> 00:11:39,110
what you're seeing is the electrical

00:11:37,279 --> 00:11:41,830
signals being captured by the headset

00:11:39,110 --> 00:11:44,210
and being displayed in a web browser and

00:11:41,830 --> 00:11:49,310
for a second time I'm going to show you

00:11:44,210 --> 00:12:00,279
different ways we can visualize this if

00:11:49,310 --> 00:12:00,279
my window would just all right fine

00:12:11,640 --> 00:12:21,610
or right right

00:12:18,340 --> 00:12:24,060
so I'm going to stop it and run in one

00:12:21,610 --> 00:12:24,060
more time

00:12:44,900 --> 00:12:52,180
with your server ok I think I have to

00:12:47,510 --> 00:13:01,420
the trick of stopping again the process

00:12:52,180 --> 00:13:01,420
to 1015 1172 it's okay

00:13:04,680 --> 00:13:09,209
right this is good foot before it for

00:13:07,470 --> 00:13:10,559
now I'm gonna stop here and I want to

00:13:09,209 --> 00:13:13,170
walk you through what just happened okay

00:13:10,559 --> 00:13:16,610
so please give it up for our volunteer

00:13:13,170 --> 00:13:24,629
here thank you

00:13:16,610 --> 00:13:25,980
yeah wait careful right thank you so

00:13:24,629 --> 00:13:26,220
much fun thank you we really appreciate

00:13:25,980 --> 00:13:30,660
it

00:13:26,220 --> 00:13:32,819
all right okay so what just happened

00:13:30,660 --> 00:13:36,029
here

00:13:32,819 --> 00:13:38,910
this is what I called New York

00:13:36,029 --> 00:13:42,059
JavaScript and what is New York

00:13:38,910 --> 00:13:47,160
JavaScript new javascript is not this

00:13:42,059 --> 00:13:49,490
keyboard helper at all but it's a

00:13:47,160 --> 00:13:52,009
combination of some concepts right

00:13:49,490 --> 00:13:56,429
isomorphic javascript is one of them

00:13:52,009 --> 00:14:00,209
newer technology data science data

00:13:56,429 --> 00:14:01,529
visualization open source and more so

00:14:00,209 --> 00:14:04,170
I'm going to walk you through step by

00:14:01,529 --> 00:14:08,610
step how we came to visualizes brain

00:14:04,170 --> 00:14:11,100
waves in the web browser okay so the

00:14:08,610 --> 00:14:15,120
first thing we need to know is that here

00:14:11,100 --> 00:14:20,519
I have a headset and that headset it's

00:14:15,120 --> 00:14:22,769
from a company called open BCI and the

00:14:20,519 --> 00:14:24,990
great thing and what make this headset

00:14:22,769 --> 00:14:27,269
so special is the fact that this is

00:14:24,990 --> 00:14:30,179
completely open source and it's mostly

00:14:27,269 --> 00:14:32,879
truly printed so as you can see here

00:14:30,179 --> 00:14:37,589
this mostly plastic what you see is in

00:14:32,879 --> 00:14:39,329
white and in red this is all plastic the

00:14:37,589 --> 00:14:42,749
other part of it is actually the board

00:14:39,329 --> 00:14:44,730
that is actually doing you know all the

00:14:42,749 --> 00:14:47,249
computing and then you have cables that

00:14:44,730 --> 00:14:49,949
end up in some sensors and these sensors

00:14:47,249 --> 00:14:52,860
are called electrodes these electrodes

00:14:49,949 --> 00:14:56,249
are actually make contact with your head

00:14:52,860 --> 00:14:59,100
and you can see here animation of how

00:14:56,249 --> 00:15:03,240
actually comes together it's a lot of

00:14:59,100 --> 00:15:06,509
tiny parts you can actually go to the

00:15:03,240 --> 00:15:09,029
github repo download all the 3d files

00:15:06,509 --> 00:15:11,069
print it yourself order the board

00:15:09,029 --> 00:15:15,720
separately and you split it together and

00:15:11,069 --> 00:15:18,420
get up and running the next part that I

00:15:15,720 --> 00:15:22,230
want to show you is the use

00:15:18,420 --> 00:15:26,209
dangal the USB dongle is this guy right

00:15:22,230 --> 00:15:34,350
here that is what actually connects via

00:15:26,209 --> 00:15:36,149
bluetooth to this board then it gets to

00:15:34,350 --> 00:15:40,680
the computer right as it's plugged in is

00:15:36,149 --> 00:15:46,709
USB via serial port and that is exactly

00:15:40,680 --> 00:15:48,449
where node takes it in and let me tell

00:15:46,709 --> 00:15:51,870
you a little bit of how known takes it

00:15:48,449 --> 00:15:55,079
in just probably doing an NPM style for

00:15:51,870 --> 00:15:57,389
the open PCI SDK you are able to start

00:15:55,079 --> 00:16:00,000
interacting with this so what i've done

00:15:57,389 --> 00:16:01,529
i've created a series of like classes

00:16:00,000 --> 00:16:05,279
that i've strike this process in order

00:16:01,529 --> 00:16:07,410
for me to use that data that you saw and

00:16:05,279 --> 00:16:09,630
start doing stuff with that so i broke

00:16:07,410 --> 00:16:13,440
it down into some concepts I have some

00:16:09,630 --> 00:16:16,920
connectors and connectors they basically

00:16:13,440 --> 00:16:19,649
transmit the data right and right now

00:16:16,920 --> 00:16:22,290
the connector is like Bluetooth via

00:16:19,649 --> 00:16:24,060
serial port I cleared it in an abstract

00:16:22,290 --> 00:16:25,949
class so you can choose from other

00:16:24,060 --> 00:16:27,720
connectors that might be available in

00:16:25,949 --> 00:16:30,019
the future for example maybe one of

00:16:27,720 --> 00:16:32,279
these this dongle maybe we can just

00:16:30,019 --> 00:16:33,779
connect the Bluetooth directly to the

00:16:32,279 --> 00:16:35,970
computer maybe we can just do it through

00:16:33,779 --> 00:16:39,060
Wi-Fi maybe we can do it with the next

00:16:35,970 --> 00:16:41,190
thing that comes out then we have

00:16:39,060 --> 00:16:44,310
providers these providers actually

00:16:41,190 --> 00:16:47,010
capture that signal and they facilitate

00:16:44,310 --> 00:16:50,010
and they basically distributed to our

00:16:47,010 --> 00:16:52,380
node application then we have modules

00:16:50,010 --> 00:16:55,740
that they take these data they transform

00:16:52,380 --> 00:16:57,810
it into different formats one of those

00:16:55,740 --> 00:17:00,029
formats for example is a time series

00:16:57,810 --> 00:17:02,310
another format could be a fast Fourier

00:17:00,029 --> 00:17:06,799
transform and I'm going to walk you

00:17:02,310 --> 00:17:11,669
through it by simply just instantiating

00:17:06,799 --> 00:17:15,120
some of the connectors and signals we

00:17:11,669 --> 00:17:17,880
can then start and instantiate and

00:17:15,120 --> 00:17:21,809
initialize our modules in this case we

00:17:17,880 --> 00:17:24,000
have some FFT we have some topographic

00:17:21,809 --> 00:17:25,559
data we're going to be I might be

00:17:24,000 --> 00:17:28,620
showing you later and then the time

00:17:25,559 --> 00:17:30,040
series which is exactly the lines that I

00:17:28,620 --> 00:17:33,370
show you first

00:17:30,040 --> 00:17:37,870
they all take the signal which is the

00:17:33,370 --> 00:17:40,390
provider that I was talking about and

00:17:37,870 --> 00:17:45,250
lastly we can just invoke a method

00:17:40,390 --> 00:17:47,560
called stream that basically makes

00:17:45,250 --> 00:17:49,990
available the data and we pass it to

00:17:47,560 --> 00:17:52,420
different providers like the signal

00:17:49,990 --> 00:17:56,110
provider or motion capture signal

00:17:52,420 --> 00:17:58,480
provider is that data that is is sent to

00:17:56,110 --> 00:18:01,870
the front end and for example motion

00:17:58,480 --> 00:18:05,740
capture in this example this bore

00:18:01,870 --> 00:18:08,200
actually contains accelerometer data so

00:18:05,740 --> 00:18:10,300
that's something that we can also use so

00:18:08,200 --> 00:18:12,640
you will get coordinates of like XY and

00:18:10,300 --> 00:18:16,260
Z as you're moving the headset which is

00:18:12,640 --> 00:18:18,610
something that you can also play with

00:18:16,260 --> 00:18:21,070
you're going to be getting one sample

00:18:18,610 --> 00:18:25,090
every four milliseconds right which

00:18:21,070 --> 00:18:27,310
makes a 250 sample rate and a sample is

00:18:25,090 --> 00:18:28,990
what I show you from the node terminal

00:18:27,310 --> 00:18:30,490
and it looks something like that the

00:18:28,990 --> 00:18:33,130
most relevant information here it's

00:18:30,490 --> 00:18:37,720
actually the channel data that is what

00:18:33,130 --> 00:18:41,560
has the signal from each different sides

00:18:37,720 --> 00:18:43,810
each different part of your brain so in

00:18:41,560 --> 00:18:46,720
here we have eight and that is what

00:18:43,810 --> 00:18:48,580
you're getting some of the actual nodes

00:18:46,720 --> 00:18:50,140
are just for comfort so they sit on top

00:18:48,580 --> 00:18:52,060
of your head the other ones are actual

00:18:50,140 --> 00:18:55,300
electrodes and those are the one that

00:18:52,060 --> 00:18:56,980
pick up the signal ox data is emotion

00:18:55,300 --> 00:18:59,590
accelerometer data that I was telling

00:18:56,980 --> 00:19:01,890
you about and then we have over type of

00:18:59,590 --> 00:19:07,810
metadata like the start by the sample

00:19:01,890 --> 00:19:11,590
number stop byte etcetera lastly we're

00:19:07,810 --> 00:19:14,800
using WebSockets from node to send this

00:19:11,590 --> 00:19:17,950
data treated in a different format that

00:19:14,800 --> 00:19:20,320
I talked about FFT teleport I'm serious

00:19:17,950 --> 00:19:24,700
and we use WebSockets to send it to the

00:19:20,320 --> 00:19:26,830
client to the web browser and in the

00:19:24,700 --> 00:19:28,420
example that I show you there are many

00:19:26,830 --> 00:19:30,880
technologies that are being used one of

00:19:28,420 --> 00:19:34,450
them is flatly we have smoothie charts

00:19:30,880 --> 00:19:38,470
for the time series we have three GS for

00:19:34,450 --> 00:19:39,130
some WebGL data visualizations that I'm

00:19:38,470 --> 00:19:40,880
working on

00:19:39,130 --> 00:19:43,100
we have charged a s we

00:19:40,880 --> 00:19:47,300
Angra to which is the actual app and

00:19:43,100 --> 00:19:51,020
what is putting everything together the

00:19:47,300 --> 00:19:56,840
time series looks something like this

00:19:51,020 --> 00:19:59,810
most of the time on a very well headset

00:19:56,840 --> 00:20:01,990
that is calibrated and everything in it

00:19:59,810 --> 00:20:06,560
has data coming from all the channels

00:20:01,990 --> 00:20:09,050
and I'm going to walk you through some

00:20:06,560 --> 00:20:11,810
code samples with angular 2 that show

00:20:09,050 --> 00:20:13,700
you how you can capture this data from

00:20:11,810 --> 00:20:20,180
WebSockets and how to display it on the

00:20:13,700 --> 00:20:22,010
browser so who has these tight script or

00:20:20,180 --> 00:20:24,830
angular 2 here can you please raise your

00:20:22,010 --> 00:20:28,490
hands all right we have like a few

00:20:24,830 --> 00:20:31,940
people good so I chose angular 2 because

00:20:28,490 --> 00:20:33,950
I build the app using other different

00:20:31,940 --> 00:20:36,080
libraries and angler two is where I

00:20:33,950 --> 00:20:39,440
finally landed it had great performance

00:20:36,080 --> 00:20:43,160
benefits that really helped me

00:20:39,440 --> 00:20:46,790
accomplish this in a way that was

00:20:43,160 --> 00:20:48,140
effective and scalable so I'm important

00:20:46,790 --> 00:20:50,900
from dependencies including some

00:20:48,140 --> 00:20:54,530
components from the element reference

00:20:50,900 --> 00:20:57,620
and some component lifecycle hooks for

00:20:54,530 --> 00:20:59,600
example the component is ready and when

00:20:57,620 --> 00:21:01,670
it's destroyed then I'm importing some

00:20:59,600 --> 00:21:03,920
dependencies for like the smoothie chart

00:21:01,670 --> 00:21:06,430
this example is going to show you that

00:21:03,920 --> 00:21:09,110
that time series I was telling you about

00:21:06,430 --> 00:21:14,860
and before I do that I'm gonna quickly

00:21:09,110 --> 00:21:14,860
fire on my simulated data

00:21:38,480 --> 00:21:48,730
right so skinny if I see in the meantime

00:21:43,779 --> 00:21:48,730
let me keep showing you some of the code

00:21:49,029 --> 00:21:55,359
this is an annotation that you can do

00:21:53,600 --> 00:21:57,289
with type script which is angular 2

00:21:55,359 --> 00:22:01,070
specific you can see the add component

00:21:57,289 --> 00:22:02,960
which basically points to a selector

00:22:01,070 --> 00:22:05,899
which is like the BCI time series we

00:22:02,960 --> 00:22:09,109
have a template URL we have a styles and

00:22:05,899 --> 00:22:10,369
we have some providers this the angular

00:22:09,109 --> 00:22:12,909
2 AP a-- has changed a little bit since

00:22:10,369 --> 00:22:15,710
then but it's pretty much very similar

00:22:12,909 --> 00:22:19,059
but if we're looking at the template of

00:22:15,710 --> 00:22:22,429
this if we're looking at the template of

00:22:19,059 --> 00:22:26,320
this component the most important part

00:22:22,429 --> 00:22:30,679
is that it has a canvas element because

00:22:26,320 --> 00:22:33,950
it's Moody Jes is foodie charts uses

00:22:30,679 --> 00:22:37,279
canvas so then you're gonna see some

00:22:33,950 --> 00:22:41,470
angular to specific syntax here where

00:22:37,279 --> 00:22:41,470
you have the brackets for binding and

00:22:41,889 --> 00:22:49,639
then you have the actual class

00:22:44,899 --> 00:22:53,509
definition which is just an es es in es6

00:22:49,639 --> 00:22:56,359
class that implements the on in it and

00:22:53,509 --> 00:23:01,299
on destroy from angular 2 some

00:22:56,359 --> 00:23:04,489
dependency injection via constructor and

00:23:01,299 --> 00:23:06,320
finally then some data structures that

00:23:04,489 --> 00:23:09,980
we're going to be using in order to fill

00:23:06,320 --> 00:23:12,379
our data so we have some smoothie chart

00:23:09,980 --> 00:23:14,779
containers for the time series the

00:23:12,379 --> 00:23:16,389
amplitudes are the values are shown to

00:23:14,779 --> 00:23:19,090
the right the numbers change

00:23:16,389 --> 00:23:21,950
positive and negative energy in

00:23:19,090 --> 00:23:23,600
microvolts then you have a time line

00:23:21,950 --> 00:23:26,529
which is the second that you have at the

00:23:23,600 --> 00:23:30,200
bottom telling you exactly where in time

00:23:26,529 --> 00:23:33,190
that data to be expressed and then we

00:23:30,200 --> 00:23:37,100
have lines which are eight lines from

00:23:33,190 --> 00:23:38,480
different parts of our head all day all

00:23:37,100 --> 00:23:42,470
of them they map to a time series

00:23:38,480 --> 00:23:44,840
container so when the component

00:23:42,470 --> 00:23:46,460
initializes we're going to be calling a

00:23:44,840 --> 00:23:49,789
function that is going to basically

00:23:46,460 --> 00:23:50,630
initialize our smoothie data structures

00:23:49,789 --> 00:23:53,630
and then

00:23:50,630 --> 00:23:56,090
we're going to be using socket IO to

00:23:53,630 --> 00:23:58,970
listen for events that are related to

00:23:56,090 --> 00:24:01,640
time once we capture those events are

00:23:58,970 --> 00:24:03,740
related to time what we do is that we

00:24:01,640 --> 00:24:07,880
get data back so this is exactly the

00:24:03,740 --> 00:24:09,890
data that is coming from the server but

00:24:07,880 --> 00:24:11,390
pipe through the connectors the

00:24:09,890 --> 00:24:15,260
providers the signals that I told you

00:24:11,390 --> 00:24:17,240
about that are basically reciting the

00:24:15,260 --> 00:24:22,640
data to be kind of like fun and friendly

00:24:17,240 --> 00:24:25,250
so we're not sending a data event to the

00:24:22,640 --> 00:24:27,530
client every 4 milliseconds we actually

00:24:25,250 --> 00:24:29,179
have a buffer a node that we're

00:24:27,530 --> 00:24:34,520
aggregating a certain amount of data I

00:24:29,179 --> 00:24:36,799
think probably every like 64 samples and

00:24:34,520 --> 00:24:39,110
then we're passing it through some

00:24:36,799 --> 00:24:41,470
filters and there was something into the

00:24:39,110 --> 00:24:41,470
front end

00:24:47,670 --> 00:24:57,480
ok Calendar so once we get that data we

00:24:53,790 --> 00:25:02,340
replace the amplitudes object these

00:24:57,480 --> 00:25:04,350
amplitudes is basically what is what

00:25:02,340 --> 00:25:06,660
we're binding to in our template so

00:25:04,350 --> 00:25:09,630
amplitudes is an object that we have in

00:25:06,660 --> 00:25:11,700
our template and we can have that data

00:25:09,630 --> 00:25:14,880
available for us to basically

00:25:11,700 --> 00:25:17,970
semantically Express we have a time line

00:25:14,880 --> 00:25:20,970
which is basically an array of seconds

00:25:17,970 --> 00:25:23,930
and then we're appending time lines when

00:25:20,970 --> 00:25:23,930
we append time lines

00:25:31,990 --> 00:25:38,029
when we append timelines here we're just

00:25:35,929 --> 00:25:40,809
going for each one of those channels in

00:25:38,029 --> 00:25:44,630
this case 8 and we are basically

00:25:40,809 --> 00:25:46,940
appending a data point right in this

00:25:44,630 --> 00:25:50,149
case a line that is over calling aligned

00:25:46,940 --> 00:25:52,880
so each one of those eight lines they

00:25:50,149 --> 00:25:56,690
directly correlate with this part here

00:25:52,880 --> 00:25:57,799
so each time we'll receive an event we

00:25:56,690 --> 00:26:00,769
go through each one of the channels

00:25:57,799 --> 00:26:02,690
we're appending with the current date

00:26:00,769 --> 00:26:04,510
and time right with the current time and

00:26:02,690 --> 00:26:07,279
we're passing an amplitude that

00:26:04,510 --> 00:26:08,990
amplitude is just that data set that I

00:26:07,279 --> 00:26:10,730
told you about here

00:26:08,990 --> 00:26:16,639
from each other the different channels

00:26:10,730 --> 00:26:19,130
and in this case when we're adding the

00:26:16,639 --> 00:26:21,909
time series initially right that's

00:26:19,130 --> 00:26:24,679
function that I show you right here

00:26:21,909 --> 00:26:28,070
we're just making sure that they have a

00:26:24,679 --> 00:26:30,799
stroke style that map to the color that

00:26:28,070 --> 00:26:33,429
we want to use in this case is just a

00:26:30,799 --> 00:26:38,419
lid an array with eight different colors

00:26:33,429 --> 00:26:40,610
so we can classify a by color something

00:26:38,419 --> 00:26:44,000
that is very important to mention is

00:26:40,610 --> 00:26:46,299
that because there's going to be a lot

00:26:44,000 --> 00:26:48,919
of events being received by the client

00:26:46,299 --> 00:26:50,539
you know on the browser is very

00:26:48,919 --> 00:26:52,519
important that if the component is

00:26:50,539 --> 00:26:56,240
actually not being displayed in the

00:26:52,519 --> 00:26:58,010
application basically when it fires the

00:26:56,240 --> 00:26:59,809
undestroyed event from the angular 2

00:26:58,010 --> 00:27:01,580
component life cycle we need to make

00:26:59,809 --> 00:27:03,860
sure that we remove that event listener

00:27:01,580 --> 00:27:06,019
because if we have all these events

00:27:03,860 --> 00:27:08,600
still lingering from other components

00:27:06,019 --> 00:27:11,779
are also showing data visualizations

00:27:08,600 --> 00:27:16,820
then it's going to overwhelm the browser

00:27:11,779 --> 00:27:18,110
it's going to probably freeze ultimately

00:27:16,820 --> 00:27:21,710
this is just a little bit of more

00:27:18,110 --> 00:27:24,200
angular 2 template that shows how to do

00:27:21,710 --> 00:27:26,240
a repeater in angular 1 it was like it

00:27:24,200 --> 00:27:31,970
and you repeat in angular 2 we have an

00:27:26,240 --> 00:27:34,309
NG 4 and then we have a more es6 style

00:27:31,970 --> 00:27:38,630
type of declaration here when you have

00:27:34,309 --> 00:27:41,809
read amplitude of amplitudes and that is

00:27:38,630 --> 00:27:44,620
exactly the amplitude element that has

00:27:41,809 --> 00:27:44,620
been shown to the

00:27:46,120 --> 00:27:52,550
the same for the time line were

00:27:48,559 --> 00:27:54,980
iterating through each one of the of the

00:27:52,550 --> 00:27:57,530
time line elements that we have I

00:27:54,980 --> 00:27:59,960
believe in this case like 18 where

00:27:57,530 --> 00:28:02,890
actually is in an html5 time element

00:27:59,960 --> 00:28:06,490
with a game time attribute that

00:28:02,890 --> 00:28:10,510
basically formats that formats that time

00:28:06,490 --> 00:28:14,179
in seconds into readable human seconds

00:28:10,510 --> 00:28:16,240
great so that being said I want to talk

00:28:14,179 --> 00:28:19,220
to you about this product a little bit

00:28:16,240 --> 00:28:22,420
I've been taking this in phases right

00:28:19,220 --> 00:28:26,179
now it's just phase one which is simply

00:28:22,420 --> 00:28:28,490
visualization right and we've put a lot

00:28:26,179 --> 00:28:30,559
of work into just making sure we can

00:28:28,490 --> 00:28:33,130
visualize brain waves but there's so

00:28:30,559 --> 00:28:35,570
much more that we still need yet to do

00:28:33,130 --> 00:28:38,270
second phase is going to be about

00:28:35,570 --> 00:28:40,070
experimentation so we can actually take

00:28:38,270 --> 00:28:42,020
that data do something useful with it

00:28:40,070 --> 00:28:44,480
right and I will give you few examples

00:28:42,020 --> 00:28:47,870
ultimately interpretation which is

00:28:44,480 --> 00:28:49,730
really just really thoughts I believe is

00:28:47,870 --> 00:28:51,980
possible and I believe that each one of

00:28:49,730 --> 00:28:54,800
you with your JavaScript skills could

00:28:51,980 --> 00:28:57,080
get to contribute or to be part of

00:28:54,800 --> 00:28:58,600
something as big as this this is why all

00:28:57,080 --> 00:29:00,950
of this work that I've shown you today

00:28:58,600 --> 00:29:04,400
including the hardware everything is

00:29:00,950 --> 00:29:08,179
open-source and very affordable just to

00:29:04,400 --> 00:29:10,309
put together a simple headset this is

00:29:08,179 --> 00:29:12,200
just an example of some experiments all

00:29:10,309 --> 00:29:14,059
the people have done this one is in a

00:29:12,200 --> 00:29:15,980
JavaScript as specific but there's

00:29:14,059 --> 00:29:17,780
nothing that is actually stopping us

00:29:15,980 --> 00:29:19,820
from starting to control things and

00:29:17,780 --> 00:29:23,600
doing things with our current skills

00:29:19,820 --> 00:29:26,179
here imagine you can control user

00:29:23,600 --> 00:29:27,710
interface with this headset maybe

00:29:26,179 --> 00:29:30,320
someone's disabled and now has the

00:29:27,710 --> 00:29:34,700
ability to do something with their

00:29:30,320 --> 00:29:36,830
computer and there are so many other

00:29:34,700 --> 00:29:39,170
things including like maybe controlling

00:29:36,830 --> 00:29:42,080
your wheelchair accessibility for the

00:29:39,170 --> 00:29:43,970
web and actually just getting to know

00:29:42,080 --> 00:29:46,130
ourselves a little better think about it

00:29:43,970 --> 00:29:47,540
all the data is right here and we

00:29:46,130 --> 00:29:49,760
struggle with knowing ourselves

00:29:47,540 --> 00:29:51,810
sometimes but I think now we have the

00:29:49,760 --> 00:29:54,450
power to take that information and

00:29:51,810 --> 00:29:56,700
with something meaningful with it so I

00:29:54,450 --> 00:29:59,340
encourage you to get involved there are

00:29:56,700 --> 00:30:01,560
many many meetups about New York tech I

00:29:59,340 --> 00:30:04,790
used to go to one in New York City but

00:30:01,560 --> 00:30:07,020
there are in many parts of the world

00:30:04,790 --> 00:30:09,450
github repo that I've been doing all

00:30:07,020 --> 00:30:11,340
this work in is New York is in there you

00:30:09,450 --> 00:30:14,370
can find exactly where sure today that

00:30:11,340 --> 00:30:16,890
whole app and there is an open beside

00:30:14,370 --> 00:30:18,900
community it's not JavaScript specific

00:30:16,890 --> 00:30:21,630
voice from your tech oriented and

00:30:18,900 --> 00:30:24,420
everyone is welcome there so that being

00:30:21,630 --> 00:30:35,520
said please keep in touch and let me

00:30:24,420 --> 00:30:36,590
know if you have any questions let's

00:30:35,520 --> 00:30:40,760
give this another try

00:30:36,590 --> 00:30:44,660
I came from very far and I'm gonna let

00:30:40,760 --> 00:30:49,880
the cold or jetlag get in the way so

00:30:44,660 --> 00:30:49,880
thank you for joining again let's see

00:31:01,840 --> 00:31:07,510
all right so you have only one channel

00:31:04,870 --> 00:31:11,250
that is not really connecting well that

00:31:07,510 --> 00:31:11,250
is 1 2 3 4 5 6

00:31:23,890 --> 00:31:29,650
I think he doesn't have anything on the

00:31:26,950 --> 00:31:31,059
side of the head but these are their

00:31:29,650 --> 00:31:39,130
real brainwaves that I meant to show you

00:31:31,059 --> 00:31:41,679
so thank you so here you can see to the

00:31:39,130 --> 00:31:43,120
right you can see the voltage and you're

00:31:41,679 --> 00:31:45,460
gonna see that fluctuating between

00:31:43,120 --> 00:31:47,620
positive and negative values because

00:31:45,460 --> 00:31:50,080
that's the way electrical signals work

00:31:47,620 --> 00:31:52,299
they don't mean anything like positive

00:31:50,080 --> 00:31:55,540
energy is not with them negative energy

00:31:52,299 --> 00:31:56,710
is going to fluctuate so something else

00:31:55,540 --> 00:32:00,820
I wanted to show you it's actually the

00:31:56,710 --> 00:32:03,580
frequency when you pass a signal to a

00:32:00,820 --> 00:32:05,620
fast for a transform this is actually

00:32:03,580 --> 00:32:08,230
the frequency this is not like going in

00:32:05,620 --> 00:32:13,059
time this is actually in real time the

00:32:08,230 --> 00:32:15,910
way the frequencies translate so the

00:32:13,059 --> 00:32:17,830
channel let's see the yellow one is

00:32:15,910 --> 00:32:20,590
channel 6 that's the channel that's

00:32:17,830 --> 00:32:22,510
we're not getting anything from that's

00:32:20,590 --> 00:32:24,280
what you can see use today alright and

00:32:22,510 --> 00:32:27,370
it towards the middle you're going to

00:32:24,280 --> 00:32:29,200
see around this area here that things

00:32:27,370 --> 00:32:31,990
are changed much is because in that part

00:32:29,200 --> 00:32:34,419
of the frequency is being picked up by

00:32:31,990 --> 00:32:40,630
like so I'm even like the background

00:32:34,419 --> 00:32:43,090
noise so yeah just like the ambience

00:32:40,630 --> 00:32:45,490
right like your body's receptive to that

00:32:43,090 --> 00:32:56,470
so it's actually going to be translated

00:32:45,490 --> 00:32:59,790
so you can see some of that well yeah

00:32:56,470 --> 00:33:02,410
yeah and also is worth mentioning that

00:32:59,790 --> 00:33:05,650
this headset in particular is also going

00:33:02,410 --> 00:33:08,770
to pick up some emoji which is like the

00:33:05,650 --> 00:33:12,910
muscular signals so let's do a little

00:33:08,770 --> 00:33:16,810
experiment try blinking a couple of

00:33:12,910 --> 00:33:20,470
times to

00:33:16,810 --> 00:33:22,060
right regular horror yeah yeah so you

00:33:20,470 --> 00:33:24,790
can see some of that being picked up

00:33:22,060 --> 00:33:27,240
around here it gets very interesting

00:33:24,790 --> 00:33:31,030
when you start seeing the frequency

00:33:27,240 --> 00:33:33,790
categorize by different categorize by

00:33:31,030 --> 00:33:35,650
different frequency bands so if you're

00:33:33,790 --> 00:33:37,900
familiar with like data data alpha and

00:33:35,650 --> 00:33:41,500
beta I can tell you for example

00:33:37,900 --> 00:33:43,900
according to some experiment if you want

00:33:41,500 --> 00:33:48,910
to measure hunger occurring to some

00:33:43,900 --> 00:33:51,040
doctors some of the Delta band is going

00:33:48,910 --> 00:33:53,830
to get lower and some of the alpha and

00:33:51,040 --> 00:33:56,320
beta is going to get higher right so

00:33:53,830 --> 00:33:57,930
this is also used to like measure

00:33:56,320 --> 00:34:02,890
progress when it comes to like

00:33:57,930 --> 00:34:05,200
concentration and meditation take a

00:34:02,890 --> 00:34:07,350
screenshot take a screenshot yeah there

00:34:05,200 --> 00:34:07,350
you go

00:34:07,960 --> 00:34:15,460
this is just another way of showing

00:34:10,030 --> 00:34:20,020
frequency in a 3-quart type of layout so

00:34:15,460 --> 00:34:21,460
try to sleep in your jaw like like you

00:34:20,020 --> 00:34:24,250
were like chewing something you can see

00:34:21,460 --> 00:34:28,570
that being okay you can see that

00:34:24,250 --> 00:34:37,270
actually the manifested here yeah yeah

00:34:28,570 --> 00:34:42,289
but whatever you do okay thank you guys

00:34:37,270 --> 00:34:42,289

YouTube URL: https://www.youtube.com/watch?v=S7M2Dj-_fwU


