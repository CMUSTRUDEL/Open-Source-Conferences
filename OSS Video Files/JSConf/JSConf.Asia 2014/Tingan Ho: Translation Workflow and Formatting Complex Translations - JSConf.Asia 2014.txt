Title: Tingan Ho: Translation Workflow and Formatting Complex Translations - JSConf.Asia 2014
Publication date: 2015-01-05
Playlist: JSConf.Asia 2014
Description: 
	Supporting a multilingual application has been a difficult for a very long time and we are now in a brink of entering a new state where we can do it more easily. Data such as CLDR and technologies such ICUâ€™s MessageFormat is unheard for most people. Yet they are used by global companies such as Google, IBM and Apple. These technologies is now included in a project I have been working on called L10ns(). In addition to solving complex translation formatting with the help of ICUâ€™s MessageFormat and CLDR, L10ns also solves a very difficult workflow problem associated with translation. My session will focus on all the mayor problems in internationalizing applications and help people use efficient industry best practices and solutions for producing multilingual applications.

Tingan is a designer, coder & thinker from China and loves innovation in web, design, and OOS. He is the author of SASS-Inspector and get-translation and contributes to many other open-source projects.

JSConf.Asia is the JavaScript, web and mobile developer conference for Asia. Amara Sanctuary, Singapore - 20 + 21 November 2014.

Source: http://2014.jsconf.asia/#speakers
Project link: http://l10ns.org

License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.
Captions: 
	00:00:00,000 --> 00:00:17,310
I'll tell my camera I could my fingers

00:00:04,140 --> 00:00:20,820
away I'm tinghu and I'm the crater of a

00:00:17,310 --> 00:00:23,699
project called Elton s.l tennis is a CLI

00:00:20,820 --> 00:00:27,060
tool for solving complex translation

00:00:23,699 --> 00:00:30,840
workflow and complex formatting which is

00:00:27,060 --> 00:00:32,640
mostly what my talk will be about let's

00:00:30,840 --> 00:00:35,010
go through the structure of this talk i

00:00:32,640 --> 00:00:38,340
will have demos of problems and

00:00:35,010 --> 00:00:40,920
solutions regarding i18n i think it's

00:00:38,340 --> 00:00:42,420
important for people to understand the

00:00:40,920 --> 00:00:45,750
problem before they see solution

00:00:42,420 --> 00:00:49,020
especially in the eye 18 subject because

00:00:45,750 --> 00:00:51,660
many developers tends to be naive and

00:00:49,020 --> 00:00:55,469
think that i 18 n it's not a problem

00:00:51,660 --> 00:00:58,440
when in fact it is and it's usually not

00:00:55,469 --> 00:01:00,809
until they see a demonstration of a

00:00:58,440 --> 00:01:03,629
problem where they recognize a problem

00:01:00,809 --> 00:01:06,000
being a problem my presentation will be

00:01:03,629 --> 00:01:08,130
divided into two parts one part

00:01:06,000 --> 00:01:11,130
explaining complex translation

00:01:08,130 --> 00:01:14,430
formatting and the other part explaining

00:01:11,130 --> 00:01:20,430
i ate in workflow and at the end of this

00:01:14,430 --> 00:01:22,470
talk i will publish my tool to NPM so

00:01:20,430 --> 00:01:26,159
let's begin with hot one complex

00:01:22,470 --> 00:01:28,380
translation work formatting I will talk

00:01:26,159 --> 00:01:31,409
about CLD are and I see us message

00:01:28,380 --> 00:01:33,630
format pure formatting context-based

00:01:31,409 --> 00:01:38,369
formatting and number formatting and

00:01:33,630 --> 00:01:42,090
date formatting so let's begin with

00:01:38,369 --> 00:01:44,729
pluralization what we see here is a very

00:01:42,090 --> 00:01:47,820
common mistake people make when dealing

00:01:44,729 --> 00:01:50,880
with plural is asia we have blocks of

00:01:47,820 --> 00:01:54,570
code where the execution is dependent on

00:01:50,880 --> 00:01:59,610
a locale so we have if locale equals e

00:01:54,570 --> 00:02:01,619
HC n LC flick l equals en doc us and

00:01:59,610 --> 00:02:06,060
then we have block to code inside those

00:02:01,619 --> 00:02:10,440
if statements and this is bad makes me

00:02:06,060 --> 00:02:12,160
want to cry because we have local

00:02:10,440 --> 00:02:16,150
dependent code blocks

00:02:12,160 --> 00:02:18,760
and it's bad because the translator

00:02:16,150 --> 00:02:21,790
needs to depend on a programmer to

00:02:18,760 --> 00:02:25,060
translate anything and it's also bad

00:02:21,790 --> 00:02:27,850
because a programmer it's no local

00:02:25,060 --> 00:02:31,270
specific data which in the pluralization

00:02:27,850 --> 00:02:36,910
case means you're remembering or

00:02:31,270 --> 00:02:38,980
memorizing clear rules and remember

00:02:36,910 --> 00:02:42,280
include our rules for one or two locals

00:02:38,980 --> 00:02:44,800
might be fine but try to remember to our

00:02:42,280 --> 00:02:48,580
rules for free more which is very hard

00:02:44,800 --> 00:02:53,560
and having Luke out specific code box

00:02:48,580 --> 00:02:57,520
just makes your code base much more

00:02:53,560 --> 00:03:01,330
complex so how do we solve this problem

00:02:57,520 --> 00:03:05,470
or how do we make people not crying over

00:03:01,330 --> 00:03:08,860
their code base first time explaining

00:03:05,470 --> 00:03:13,660
like what is still they are what does it

00:03:08,860 --> 00:03:15,490
stand for and why is it useful seal the

00:03:13,660 --> 00:03:20,709
R stands for a common local data

00:03:15,490 --> 00:03:23,950
repository its data is used as a helper

00:03:20,709 --> 00:03:26,050
for localizing strings and it's maybe

00:03:23,950 --> 00:03:29,830
the largest repost here in the world if

00:03:26,050 --> 00:03:34,959
not only and it's used by Apple Google

00:03:29,830 --> 00:03:39,490
IBM yahoo etc here's some example data

00:03:34,959 --> 00:03:43,090
taken from CL dr and in first xml tag we

00:03:39,490 --> 00:03:45,280
see plural rules and it defines a number

00:03:43,090 --> 00:03:48,580
of languages and one of them is english

00:03:45,280 --> 00:03:52,060
and inside the xmltype laura rules we

00:03:48,580 --> 00:03:58,630
have other plural rule or plural forms

00:03:52,060 --> 00:04:01,420
that is defined inside there so let's

00:03:58,630 --> 00:04:04,060
move on to plural forms in spoken

00:04:01,420 --> 00:04:08,739
English we just have to define plural

00:04:04,060 --> 00:04:14,440
forms namely singular and plural the

00:04:08,739 --> 00:04:17,380
plural to singular is one and the pure

00:04:14,440 --> 00:04:22,180
form of parole for plural is everything

00:04:17,380 --> 00:04:25,610
but one but because we have languages

00:04:22,180 --> 00:04:29,599
such as Arabic Arabic have

00:04:25,610 --> 00:04:32,930
six pure forms so seal dr needs to

00:04:29,599 --> 00:04:35,569
define up to 6000 forms and they are

00:04:32,930 --> 00:04:41,500
called did they are named secure for now

00:04:35,569 --> 00:04:41,500
and they are called 012 few many another

00:04:41,650 --> 00:04:48,620
so try to remember it 012 few many

00:04:45,830 --> 00:04:51,199
another because it will be most likely

00:04:48,620 --> 00:04:55,189
be used in any future i ate an end

00:04:51,199 --> 00:04:58,039
library out there why is that Sylvia CL

00:04:55,189 --> 00:05:02,900
DRS plural form is becoming de facto

00:04:58,039 --> 00:05:06,319
standard to use and its use already by

00:05:02,900 --> 00:05:08,870
the iOS SDK and Android escape that

00:05:06,319 --> 00:05:11,240
means iOS developers and Android

00:05:08,870 --> 00:05:15,349
developers needs to know this plural

00:05:11,240 --> 00:05:18,620
forms 012 a few many another and I think

00:05:15,349 --> 00:05:23,180
so does you as the JavaScript or try to

00:05:18,620 --> 00:05:26,229
remember 012 a few many another and the

00:05:23,180 --> 00:05:31,610
plural form 012 does not necessarily

00:05:26,229 --> 00:05:34,430
correspond to the numbers 0 12 here is

00:05:31,610 --> 00:05:36,889
some example of plural forms like for

00:05:34,430 --> 00:05:40,539
English the seal dr defines the pure

00:05:36,889 --> 00:05:45,409
form one another for the arabic language

00:05:40,539 --> 00:05:48,620
CLD are defines 0 1 2 view many nada or

00:05:45,409 --> 00:05:51,710
chinese we just have other for french we

00:05:48,620 --> 00:05:54,610
have one another and remember that the

00:05:51,710 --> 00:05:57,889
plural form 0 1 2 does not necessarily

00:05:54,610 --> 00:06:00,319
correspond to the numbers 0 1 2 & French

00:05:57,889 --> 00:06:03,259
is a good example of that where the

00:06:00,319 --> 00:06:08,449
plural form 1 correspond to the numbers

00:06:03,259 --> 00:06:13,009
0 & 1 and not just one so that is still

00:06:08,449 --> 00:06:17,539
they are pure form let's move on to ICUs

00:06:13,009 --> 00:06:20,539
message format but before we move on to

00:06:17,539 --> 00:06:24,169
something more specific like I see you

00:06:20,539 --> 00:06:27,110
message format let's talk about message

00:06:24,169 --> 00:06:29,839
format in generally in JavaScript we do

00:06:27,110 --> 00:06:32,360
message form up using two methods in

00:06:29,839 --> 00:06:36,589
JavaScript we have string concatenation

00:06:32,360 --> 00:06:39,560
and template strings and I think

00:06:36,589 --> 00:06:44,010
everyone is familiar with this

00:06:39,560 --> 00:06:46,889
but this kind of message format is only

00:06:44,010 --> 00:06:51,240
used for like trivial things like string

00:06:46,889 --> 00:06:53,520
interpolation and it's not suitable for

00:06:51,240 --> 00:06:56,940
something complex like pure formatting

00:06:53,520 --> 00:06:59,790
and that is where I see use message

00:06:56,940 --> 00:07:02,669
format comes in ICU stands for

00:06:59,790 --> 00:07:06,000
international components for unicode and

00:07:02,669 --> 00:07:08,430
it's written in C++ and Java icu's

00:07:06,000 --> 00:07:14,100
message format it's a component in nice

00:07:08,430 --> 00:07:17,580
you for having message dreams and here's

00:07:14,100 --> 00:07:20,639
an example of chloroform at the market

00:07:17,580 --> 00:07:23,490
begins with curly bracket and ends with

00:07:20,639 --> 00:07:26,010
the curly bracket and we pass in a

00:07:23,490 --> 00:07:29,340
variable which is the counter and in

00:07:26,010 --> 00:07:30,840
this example it's called likes the

00:07:29,340 --> 00:07:33,120
second argument is the type of

00:07:30,840 --> 00:07:37,050
formatting which is plural in the

00:07:33,120 --> 00:07:40,320
pluralization case and in the third you

00:07:37,050 --> 00:07:43,919
can see we need to define some some

00:07:40,320 --> 00:07:46,919
messages it corresponds to each pure for

00:07:43,919 --> 00:07:49,200
and for the English we need to define at

00:07:46,919 --> 00:07:56,280
least to some messages because there are

00:07:49,200 --> 00:07:58,880
two plural forms one another but this

00:07:56,280 --> 00:08:01,560
syntax looks a little bit complex and

00:07:58,880 --> 00:08:05,630
very difficult to grasp at first time

00:08:01,560 --> 00:08:10,169
and I will try to do to explain my best

00:08:05,630 --> 00:08:13,289
that this syntax is near optimal because

00:08:10,169 --> 00:08:15,750
try to define a simpler syntax using at

00:08:13,289 --> 00:08:19,200
least one variable which is the counter

00:08:15,750 --> 00:08:22,700
the type of formatting and then you need

00:08:19,200 --> 00:08:25,560
some messages for each plural form I

00:08:22,700 --> 00:08:28,650
need to think a little bit you will end

00:08:25,560 --> 00:08:34,400
up something like this which is quite

00:08:28,650 --> 00:08:38,940
what we wanted it's quite optimal also

00:08:34,400 --> 00:08:42,900
and for arabic language we needed to

00:08:38,940 --> 00:08:47,339
find some messages for 630 forms and not

00:08:42,900 --> 00:08:49,640
just too so i'm going to do a live demo

00:08:47,339 --> 00:08:49,640
now

00:08:50,840 --> 00:09:00,890
I'll open the editor of my choice and I

00:08:55,910 --> 00:09:05,300
got some code already ready here I'll

00:09:00,890 --> 00:09:08,350
just hit save and then I need to run the

00:09:05,300 --> 00:09:13,390
command it's called Elton s update I

00:09:08,350 --> 00:09:17,780
will open the translation interface to

00:09:13,390 --> 00:09:20,960
translate this I will explain the code

00:09:17,780 --> 00:09:24,710
here we require some localization

00:09:20,960 --> 00:09:29,320
strings and then we set set it to use

00:09:24,710 --> 00:09:32,420
the locale en not use a and at us and

00:09:29,320 --> 00:09:35,810
the L function call here is just a

00:09:32,420 --> 00:09:38,270
localization string getter and then we

00:09:35,810 --> 00:09:45,290
will output the message so it's very

00:09:38,270 --> 00:09:48,400
simple ok so let's go to the translation

00:09:45,290 --> 00:09:53,090
interface I will just go into the

00:09:48,400 --> 00:09:54,860
translation i want to translate and it

00:09:53,090 --> 00:09:56,510
will begin with the sorting curly

00:09:54,860 --> 00:09:59,380
bracket and ends with the curly bracket

00:09:56,510 --> 00:10:01,910
while passing the variable likes and

00:09:59,380 --> 00:10:06,020
then the type of formatting which is

00:10:01,910 --> 00:10:08,720
plural and then i need to find a sub

00:10:06,020 --> 00:10:16,640
message for each 30 for and the pure

00:10:08,720 --> 00:10:21,380
form one and other and the string i

00:10:16,640 --> 00:10:29,060
wanted to translate was I like explode

00:10:21,380 --> 00:10:38,890
post so i will type in I like square

00:10:29,060 --> 00:10:42,580
blog post and then square blog post i

00:10:38,890 --> 00:10:42,580
will just hit save

00:10:44,179 --> 00:10:54,509
go back to my terminal and then compile

00:10:48,389 --> 00:10:56,910
the translation with Elton s compile now

00:10:54,509 --> 00:11:00,119
I need to test if it works or not so

00:10:56,910 --> 00:11:04,259
we'll just run the example just know the

00:11:00,119 --> 00:11:08,209
index I like 10 blog post and it ends

00:11:04,259 --> 00:11:15,059
with the S so that worked I will try to

00:11:08,209 --> 00:11:19,399
set out 10 likes we have just one I like

00:11:15,059 --> 00:11:25,139
one blog post so the pluralization works

00:11:19,399 --> 00:11:28,349
so let's go back to the presentation so

00:11:25,139 --> 00:11:32,549
there was chloroform out let's move on

00:11:28,349 --> 00:11:35,759
to select format the use case for select

00:11:32,549 --> 00:11:41,249
for mass is context-based formatting and

00:11:35,759 --> 00:11:44,459
what is that an example is X likes this

00:11:41,249 --> 00:11:48,029
conference where X is substituted with

00:11:44,459 --> 00:11:50,609
eec or day he likes this conference she

00:11:48,029 --> 00:11:55,169
likes this contrast or day likes this

00:11:50,609 --> 00:11:59,429
conference and this is how this syntax

00:11:55,169 --> 00:12:01,289
looks like for select format and it

00:11:59,429 --> 00:12:04,350
starts with the curly bracket and ends

00:12:01,289 --> 00:12:07,429
with the curly bracket we input a

00:12:04,350 --> 00:12:10,559
variable and the second argument takes a

00:12:07,429 --> 00:12:13,589
select keyword for select format and

00:12:10,559 --> 00:12:18,689
then we need to define some messages for

00:12:13,589 --> 00:12:21,989
each case and here's an example of

00:12:18,689 --> 00:12:25,199
gender context space formatting we

00:12:21,989 --> 00:12:28,289
passing the variable gender and then we

00:12:25,199 --> 00:12:31,679
define for the case male we define the

00:12:28,289 --> 00:12:34,859
sub message p or the case female we

00:12:31,679 --> 00:12:39,709
define the sub message she and for all

00:12:34,859 --> 00:12:44,729
other just stay so that is select format

00:12:39,709 --> 00:12:47,249
let's move on to number format this is

00:12:44,729 --> 00:12:49,619
how I see you the pines number format

00:12:47,249 --> 00:12:53,939
it's quite familiar with the other

00:12:49,619 --> 00:12:56,590
formats or markup start with curly

00:12:53,939 --> 00:13:00,220
brackets and then with curly brackets

00:12:56,590 --> 00:13:01,810
passing variable of type number and then

00:13:00,220 --> 00:13:05,590
the second argument is the type of

00:13:01,810 --> 00:13:10,000
formatting which is number and the third

00:13:05,590 --> 00:13:11,530
argument we have a couple of options in

00:13:10,000 --> 00:13:14,710
the first example we have something

00:13:11,530 --> 00:13:18,040
called a decimal pattern and you can see

00:13:14,710 --> 00:13:21,070
it's with squares and zeros there and I

00:13:18,040 --> 00:13:23,290
want won't go into detail or how to

00:13:21,070 --> 00:13:25,240
define your decimal pattern or how it

00:13:23,290 --> 00:13:28,240
works you can check out the dogs at the

00:13:25,240 --> 00:13:29,770
Internet to see how it works but if you

00:13:28,240 --> 00:13:32,080
don't want to define your decimal

00:13:29,770 --> 00:13:35,320
pattern you can just use some key words

00:13:32,080 --> 00:13:41,440
like interior percent pramila to define

00:13:35,320 --> 00:13:43,900
like into the format you want and before

00:13:41,440 --> 00:13:46,060
I came here I was checking out our bin

00:13:43,900 --> 00:13:49,630
beasts website to see if there was

00:13:46,060 --> 00:13:51,970
something good at tuesdaya and I noticed

00:13:49,630 --> 00:13:55,270
that their price tag if you look at the

00:13:51,970 --> 00:13:59,320
symbol their currency symbol it's with

00:13:55,270 --> 00:14:01,420
the super element and this is a perfect

00:13:59,320 --> 00:14:03,820
use case for using decimal pattern

00:14:01,420 --> 00:14:09,520
number format you wrap the currency

00:14:03,820 --> 00:14:11,170
symbol its with an open four legs with

00:14:09,520 --> 00:14:13,570
super element and then when we in

00:14:11,170 --> 00:14:18,190
compile it it will have that HTML

00:14:13,570 --> 00:14:22,510
elements so that is number format let's

00:14:18,190 --> 00:14:26,230
move on to date format this is how I see

00:14:22,510 --> 00:14:30,070
you defiance date format and it's quite

00:14:26,230 --> 00:14:32,470
familiar we have variable and date date

00:14:30,070 --> 00:14:36,060
defines the type of formatting and the

00:14:32,470 --> 00:14:39,250
further argument is just a date pattern

00:14:36,060 --> 00:14:42,640
the date pattern is quite intuitive why

00:14:39,250 --> 00:14:47,080
why is for years mmm is for mom didi

00:14:42,640 --> 00:14:50,680
days and so on and I won't go into

00:14:47,080 --> 00:14:54,730
detail because the date pattern have a

00:14:50,680 --> 00:14:57,670
long specification so we can like do

00:14:54,730 --> 00:15:01,410
whatever date format you want it's very

00:14:57,670 --> 00:15:04,650
flexible let's move on to part two

00:15:01,410 --> 00:15:08,530
translation workflow I will talk about

00:15:04,650 --> 00:15:10,220
syncing translation keys translator and

00:15:08,530 --> 00:15:15,710
programmer workflow

00:15:10,220 --> 00:15:19,310
and translation key naming in the left

00:15:15,710 --> 00:15:23,240
we have storage which in this example is

00:15:19,310 --> 00:15:28,280
a JSON file and in the right we have the

00:15:23,240 --> 00:15:31,460
source code and in order for them to

00:15:28,280 --> 00:15:34,400
work they must be synched the storage

00:15:31,460 --> 00:15:37,490
must have the the translation keys that

00:15:34,400 --> 00:15:43,840
the source code has if not they won't

00:15:37,490 --> 00:15:47,630
work we usually do this sinking manually

00:15:43,840 --> 00:15:49,580
and when we do it manually that means

00:15:47,630 --> 00:15:52,550
when you delete the key in your source

00:15:49,580 --> 00:15:55,010
you need to delete it from storage when

00:15:52,550 --> 00:15:57,890
you add a key in your store source need

00:15:55,010 --> 00:16:00,230
to additives or storage when you change

00:15:57,890 --> 00:16:03,980
a key in your source you need to change

00:16:00,230 --> 00:16:09,890
it in your storage and that's a hell I

00:16:03,980 --> 00:16:11,900
mean just explaining it is Helen so most

00:16:09,890 --> 00:16:19,370
projects stay out of sync because of

00:16:11,900 --> 00:16:22,790
that how can we fix it we can fix it

00:16:19,370 --> 00:16:25,580
with something called auto sync what is

00:16:22,790 --> 00:16:27,740
that so when you delete the key in your

00:16:25,580 --> 00:16:30,050
source it will delete it from the

00:16:27,740 --> 00:16:32,320
storage when you add a key in your

00:16:30,050 --> 00:16:35,330
source it will add it in your storage

00:16:32,320 --> 00:16:41,000
when you change a key in your source it

00:16:35,330 --> 00:16:43,100
will migrate to the new key but in order

00:16:41,000 --> 00:16:46,370
for our thing to work we need some kind

00:16:43,100 --> 00:16:48,680
of workflow and you already seen some

00:16:46,370 --> 00:16:51,530
part of it you write your source code

00:16:48,680 --> 00:16:54,290
and then you update your translation

00:16:51,530 --> 00:16:58,520
keys you tell a translator to translate

00:16:54,290 --> 00:17:00,830
it or you can translate it yourself then

00:16:58,520 --> 00:17:02,300
you compile your translation and then

00:17:00,830 --> 00:17:06,140
you just run your application and you

00:17:02,300 --> 00:17:14,840
are done so let's have a demo of auto

00:17:06,140 --> 00:17:18,820
sync I will go back to sublime and I

00:17:14,840 --> 00:17:18,820
will define a new message now

00:17:20,449 --> 00:17:37,590
and it's called demo auto-sync I will

00:17:32,130 --> 00:17:41,610
demo the bad part first in this folder

00:17:37,590 --> 00:17:46,140
we have the storage you can see this

00:17:41,610 --> 00:17:50,870
JSON files but this jason has just have

00:17:46,140 --> 00:17:56,970
one entry for the key demo plural and

00:17:50,870 --> 00:17:58,860
the index of KS is my source files we

00:17:56,970 --> 00:18:02,430
just have them accrual at the beginning

00:17:58,860 --> 00:18:05,670
i just added them or sink but in order

00:18:02,430 --> 00:18:09,810
for it to work a most ad demo or the

00:18:05,670 --> 00:18:15,440
sink in my storage and that means going

00:18:09,810 --> 00:18:15,440
through each file and add it in here

00:18:17,210 --> 00:18:28,110
oops and then yeah type it manually and

00:18:24,710 --> 00:18:34,290
go not just do it for one file but all

00:18:28,110 --> 00:18:39,210
these files and that's a hell and but

00:18:34,290 --> 00:18:45,960
with Elton s you just wait we must hit

00:18:39,210 --> 00:18:49,080
save here first with Elton s we can just

00:18:45,960 --> 00:18:51,360
run the command Elton s update and you

00:18:49,080 --> 00:18:55,110
can see that it added the translation

00:18:51,360 --> 00:18:58,880
key demo auto sync and we can check the

00:18:55,110 --> 00:18:58,880
storage to see if it's added there

00:19:08,850 --> 00:19:17,880
yeah you can see them all the sink here

00:19:13,920 --> 00:19:22,140
instead HCM or you are you them out

00:19:17,880 --> 00:19:25,010
seeing jjp have our demo auditing and

00:19:22,140 --> 00:19:27,600
all of this file have the motors inc now

00:19:25,010 --> 00:19:34,620
but let's say that we want to remove

00:19:27,600 --> 00:19:37,620
them or other thing remove it here then

00:19:34,620 --> 00:19:41,010
if we did manually we need to remove

00:19:37,620 --> 00:19:46,530
this entry in all of these storage files

00:19:41,010 --> 00:19:50,540
and that's a help what we tell 10s you

00:19:46,530 --> 00:19:56,270
just do Elton s update and it will work

00:19:50,540 --> 00:19:59,250
hopefully yeah so it removed that entry

00:19:56,270 --> 00:20:02,640
demo or sink it's not there just demo

00:19:59,250 --> 00:20:07,310
clear all you can check all this power

00:20:02,640 --> 00:20:12,330
there is no demo or think anymore and

00:20:07,310 --> 00:20:14,820
finally to the migration part let's say

00:20:12,330 --> 00:20:18,030
you want to change this translation key

00:20:14,820 --> 00:20:20,010
you don't think think it's a fit like I

00:20:18,030 --> 00:20:23,990
want to change this translation key to

00:20:20,010 --> 00:20:27,900
demo blue rolls with the next sat there

00:20:23,990 --> 00:20:30,150
if you change this key then you need to

00:20:27,900 --> 00:20:33,930
go through each of the storage files and

00:20:30,150 --> 00:20:36,600
change it with ness at them you need to

00:20:33,930 --> 00:20:41,040
do it for all these files and that's

00:20:36,600 --> 00:20:46,470
also a help but with Elton s you just

00:20:41,040 --> 00:20:50,490
hit save and then L 10s update and it

00:20:46,470 --> 00:20:52,620
will tell me the key demo role is now

00:20:50,490 --> 00:20:56,550
gone in source what do you want to do

00:20:52,620 --> 00:21:00,480
with it we have two options migrate to

00:20:56,550 --> 00:21:08,910
the new or delete it and in this case we

00:21:00,480 --> 00:21:11,630
want to migrate to the new one so back

00:21:08,910 --> 00:21:11,630
to the presentation

00:21:17,169 --> 00:21:25,869
so that was demo of auto sync let's talk

00:21:21,769 --> 00:21:25,869
about translator and programmer workflow

00:21:26,469 --> 00:21:32,139
try to always store the English

00:21:29,269 --> 00:21:35,299
translation when you do your development

00:21:32,139 --> 00:21:37,779
because then the translator can relate

00:21:35,299 --> 00:21:40,940
to the English translation all the time

00:21:37,779 --> 00:21:43,519
and let the translator learn about ICUs

00:21:40,940 --> 00:21:46,969
message format because they will use in

00:21:43,519 --> 00:21:49,690
any future product project and it's very

00:21:46,969 --> 00:21:52,820
easy to learn eyes use message form and

00:21:49,690 --> 00:21:57,769
have a web translation interface

00:21:52,820 --> 00:22:00,619
available for them at all time to ease

00:21:57,769 --> 00:22:05,149
your workflow let's talk about

00:22:00,619 --> 00:22:08,749
translation key naming don't use English

00:22:05,149 --> 00:22:11,389
text as translation keys because you

00:22:08,749 --> 00:22:16,159
will have namespace issues and not it's

00:22:11,389 --> 00:22:20,229
not future proof but I recommend instead

00:22:16,159 --> 00:22:23,509
is defining a sort of content structure

00:22:20,229 --> 00:22:26,929
you can see we have a facebook as an

00:22:23,509 --> 00:22:29,809
example I just put the feed is in the

00:22:26,929 --> 00:22:34,219
center and then we have a side menu here

00:22:29,809 --> 00:22:37,279
and we namespace it with double

00:22:34,219 --> 00:22:40,969
underscore we need space feed and then

00:22:37,279 --> 00:22:43,779
the label name for side menu it's sign

00:22:40,969 --> 00:22:49,129
menu underscore and then the label name

00:22:43,779 --> 00:22:53,869
this makes it more scalable status

00:22:49,129 --> 00:23:04,059
translation workflow so let's move on to

00:22:53,869 --> 00:23:04,059
the launch I'll just CD into the project

00:23:04,570 --> 00:23:23,389
and of type NPM publish and it will take

00:23:17,210 --> 00:23:24,960
a while let me just go through some

00:23:23,389 --> 00:23:27,960
relevant links

00:23:24,960 --> 00:23:30,090
for Elton s you just go to elton st org

00:23:27,960 --> 00:23:33,840
you can check out the dogs also there

00:23:30,090 --> 00:23:38,600
for ICU you have the link here side I

00:23:33,840 --> 00:23:38,600
see you project aboard and seal they are

00:23:40,580 --> 00:23:52,169
so thank you for listening thank you

00:23:49,080 --> 00:23:54,600
husband being published going on yay

00:23:52,169 --> 00:23:57,419
it's published so go ahead one point

00:23:54,600 --> 00:24:07,799
zero point zero eight a.m. install l 10

00:23:57,419 --> 00:24:10,169
ms any questions front again yes thanks

00:24:07,799 --> 00:24:12,360
for the talk I was wondering about if

00:24:10,169 --> 00:24:15,029
you could describe a bit the web

00:24:12,360 --> 00:24:18,120
interface that you'd have people use for

00:24:15,029 --> 00:24:21,899
translation and also how that works with

00:24:18,120 --> 00:24:25,110
auto sync okay and also possibly having

00:24:21,899 --> 00:24:28,260
multiple developers and or translators

00:24:25,110 --> 00:24:32,370
working on the same code base yeah of

00:24:28,260 --> 00:24:35,610
course so I will go to the translation

00:24:32,370 --> 00:24:43,020
interface just have a home button here

00:24:35,610 --> 00:24:45,510
and it will list in Chronicle order when

00:24:43,020 --> 00:24:50,100
you run l 10 s update release the latest

00:24:45,510 --> 00:24:52,890
here so this is just having demo parole

00:24:50,100 --> 00:25:00,750
but we fled more we listed in Chronicle

00:24:52,890 --> 00:25:04,380
order and you can search here I ok why

00:25:00,750 --> 00:25:06,620
it's not working because I haven't put

00:25:04,380 --> 00:25:06,620
it up

00:25:12,300 --> 00:25:15,300
ok

00:25:19,239 --> 00:25:26,840
well if everyone can like if program are

00:25:25,219 --> 00:25:32,269
going to work with programmer on this

00:25:26,840 --> 00:25:34,609
then you will just commit like if you're

00:25:32,269 --> 00:25:37,279
using it you just commit your transition

00:25:34,609 --> 00:25:40,340
in the storage and then just passed on

00:25:37,279 --> 00:25:43,070
up and it will be good like if you have

00:25:40,340 --> 00:25:46,059
a staging server and just run elton

00:25:43,070 --> 00:25:49,219
async based on that staging server and

00:25:46,059 --> 00:25:51,379
when you need someone need to translate

00:25:49,219 --> 00:25:53,899
something you just ask your translator

00:25:51,379 --> 00:25:57,679
to translate through the web interface

00:25:53,899 --> 00:26:01,159
in the staging server so that kind of

00:25:57,679 --> 00:26:03,080
workflow I think it's the best give a

00:26:01,159 --> 00:26:05,320
round of applause hang on thank you so

00:26:03,080 --> 00:26:05,320

YouTube URL: https://www.youtube.com/watch?v=4ZXagCR9urg


