Title: "Game Dev for Web Designers" - Werther Azevedo
Publication date: 2016-12-02
Playlist: CSSconf Argentina 2016
Description: 
	Werther Azevedo presenting at CSSConf Argentina 2016
Captions: 
	00:00:14,810 --> 00:00:26,240
where r sub R a game dev for web

00:00:21,020 --> 00:00:30,140
designers hmm so we're dead for you may

00:00:26,240 --> 00:00:32,900
call me better or better as they call me

00:00:30,140 --> 00:00:35,120
in Brazil or with her if you're an

00:00:32,900 --> 00:00:36,800
English speaker whatever man my name is

00:00:35,120 --> 00:00:40,880
weird and hard so you may call me

00:00:36,800 --> 00:00:42,770
anywhere anything you want I think it's

00:00:40,880 --> 00:00:45,440
good to understand where I'm coming from

00:00:42,770 --> 00:00:47,570
I worked as a web designer for six years

00:00:45,440 --> 00:00:50,140
and then I got into the gaming industry

00:00:47,570 --> 00:00:54,820
and worked there for another six years

00:00:50,140 --> 00:00:59,270
so that's where my experience comes I

00:00:54,820 --> 00:01:01,700
also teach classes at a university in

00:00:59,270 --> 00:01:05,210
Brazil I also teach all your classes and

00:01:01,700 --> 00:01:08,270
web technology classes so when I hope

00:01:05,210 --> 00:01:10,790
that I can get my experience to join

00:01:08,270 --> 00:01:13,909
these both worlds here today and I'm

00:01:10,790 --> 00:01:18,350
also a music composer so I do a lot of

00:01:13,909 --> 00:01:21,679
stuff these days after I've been working

00:01:18,350 --> 00:01:25,789
for four years in a company called nano

00:01:21,679 --> 00:01:28,670
studio which was a small but like 15

00:01:25,789 --> 00:01:30,999
people can company in Rio I became an

00:01:28,670 --> 00:01:34,189
indie game developer so this is me in my

00:01:30,999 --> 00:01:38,630
partner eager and we are mini pixel we

00:01:34,189 --> 00:01:40,759
are small indie game developer and we

00:01:38,630 --> 00:01:43,249
are we've been working in this game

00:01:40,759 --> 00:01:46,249
called warlocks tower warlock star it's

00:01:43,249 --> 00:01:48,350
a puzzle game it's been awarded in two

00:01:46,249 --> 00:01:51,679
categories in Brazil so we've been very

00:01:48,350 --> 00:01:55,310
glad about that and we've been dedicated

00:01:51,679 --> 00:01:58,219
full time to warlocks tower but where

00:01:55,310 --> 00:02:01,280
else i will come later now i want to

00:01:58,219 --> 00:02:03,619
speak a little disclaimer here i will be

00:02:01,280 --> 00:02:05,509
talking about to the games okay because

00:02:03,619 --> 00:02:08,479
if you really want to become a

00:02:05,509 --> 00:02:13,520
professional game developer working on

00:02:08,479 --> 00:02:17,270
tripod games like GTA or Skyrim and

00:02:13,520 --> 00:02:20,360
these kinds of games well the web isn't

00:02:17,270 --> 00:02:22,909
ready yet WebGL is great it's cool but

00:02:20,360 --> 00:02:25,849
you can make Skyrim to run on a browser

00:02:22,909 --> 00:02:28,340
yet we'll eventually get there so if you

00:02:25,849 --> 00:02:28,670
want to do this now do yourself a favor

00:02:28,340 --> 00:02:32,390
and

00:02:28,670 --> 00:02:34,670
go learn C++ or C sharp and play with

00:02:32,390 --> 00:02:37,760
unity and all these kind of kinds of

00:02:34,670 --> 00:02:40,520
engines but I had my background as i

00:02:37,760 --> 00:02:43,700
told you is as a web designer so I'm

00:02:40,520 --> 00:02:46,220
taking a different route here so don't

00:02:43,700 --> 00:02:48,620
four games I'm so glad that I'm speaking

00:02:46,220 --> 00:02:51,650
after Rachel because she have shown you

00:02:48,620 --> 00:02:53,630
how amazing the dome can be so it's

00:02:51,650 --> 00:02:56,959
pretty it's a little bit easier for me

00:02:53,630 --> 00:03:00,010
to get my point across so you may ask me

00:02:56,959 --> 00:03:03,620
really come on WebGL is far better

00:03:00,010 --> 00:03:08,480
canvas is far better why on earth would

00:03:03,620 --> 00:03:12,170
you use the dome for games well first of

00:03:08,480 --> 00:03:15,620
all this is not a new idea back in 2005

00:03:12,170 --> 00:03:20,269
when people called website animations d

00:03:15,620 --> 00:03:23,690
HTML who was there back man only a few

00:03:20,269 --> 00:03:27,819
of you yeah this guy was already making

00:03:23,690 --> 00:03:32,660
cool games at the time when browser

00:03:27,819 --> 00:03:35,150
browsers weren't that fast so in 2009

00:03:32,660 --> 00:03:38,930
another guy called Trevor collie he made

00:03:35,150 --> 00:03:41,600
an engine called GMP which is largely

00:03:38,930 --> 00:03:44,000
based off jQuery it has a similar API

00:03:41,600 --> 00:03:46,730
and all the objects that you're seeing

00:03:44,000 --> 00:03:51,680
here our dome objects are Dom node so

00:03:46,730 --> 00:03:54,590
plenty of dips in short and then in 2010

00:03:51,680 --> 00:03:56,840
these other guys selling our server I

00:03:54,590 --> 00:04:01,010
hope I'm getting his name right he came

00:03:56,840 --> 00:04:05,090
with game query who gets the gas we

00:04:01,010 --> 00:04:07,630
changing it's based off right so but all

00:04:05,090 --> 00:04:10,820
these engines these pioneering engines

00:04:07,630 --> 00:04:13,989
of which i'm sure most of you haven't

00:04:10,820 --> 00:04:17,419
heard about have one problem back then

00:04:13,989 --> 00:04:19,519
the work kind of slow because all we

00:04:17,419 --> 00:04:22,340
have to make animations back then were a

00:04:19,519 --> 00:04:25,010
set time out and set interval and today

00:04:22,340 --> 00:04:26,930
we know that these methods aren't they

00:04:25,010 --> 00:04:29,300
were never fast and they are not fast

00:04:26,930 --> 00:04:33,350
today even though they're faster but

00:04:29,300 --> 00:04:35,450
they can't cut it and the standard

00:04:33,350 --> 00:04:38,510
against which we compared everything

00:04:35,450 --> 00:04:41,150
back then was our good old friend flesh

00:04:38,510 --> 00:04:42,110
so everyone who was playing on the web

00:04:41,150 --> 00:04:45,020
or making

00:04:42,110 --> 00:04:47,870
further for the web were making on flash

00:04:45,020 --> 00:04:51,110
because flesh may be a lot of things but

00:04:47,870 --> 00:04:53,390
it wasn't slow back then it was a pretty

00:04:51,110 --> 00:04:58,850
fast engine for for the browser it was

00:04:53,390 --> 00:05:01,340
the best thing we had so in 2010 you all

00:04:58,850 --> 00:05:04,280
know what happened right Steve Jobs

00:05:01,340 --> 00:05:07,070
killed flash all together which is a

00:05:04,280 --> 00:05:11,290
good thing for us right oui oui people

00:05:07,070 --> 00:05:14,630
that like web standards so from then on

00:05:11,290 --> 00:05:17,750
HTML game engines flourished there is a

00:05:14,630 --> 00:05:21,260
lot of HTML game engines these days you

00:05:17,750 --> 00:05:23,930
may have heard of some of them but most

00:05:21,260 --> 00:05:25,640
of them are canvas engines people don't

00:05:23,930 --> 00:05:28,780
don't care about the dawn they are

00:05:25,640 --> 00:05:30,890
canvas they are WebGL most of them don't

00:05:28,780 --> 00:05:34,670
don't contemplate the dumb as a

00:05:30,890 --> 00:05:36,740
rendering target most but these these

00:05:34,670 --> 00:05:39,140
for example they do present an

00:05:36,740 --> 00:05:43,810
alternative so you can switch a

00:05:39,140 --> 00:05:46,700
rendering target and render to done so

00:05:43,810 --> 00:05:49,250
you may think that you're getting what

00:05:46,700 --> 00:05:51,740
I'm talking right Oh game dev by web

00:05:49,250 --> 00:05:54,410
designer so you'll just develop your

00:05:51,740 --> 00:05:56,480
game on a traditional gaming engine and

00:05:54,410 --> 00:05:59,990
then switch the target and that's it

00:05:56,480 --> 00:06:03,580
that's dumb game development well not

00:05:59,990 --> 00:06:07,550
exactly my idea is a little different

00:06:03,580 --> 00:06:10,640
because there's a small problem game dev

00:06:07,550 --> 00:06:13,120
is totally unlike front end dev it's a

00:06:10,640 --> 00:06:15,830
totally different way of thinking and

00:06:13,120 --> 00:06:18,680
I'm not a professional developer by all

00:06:15,830 --> 00:06:21,980
means I've been noise a designer or an

00:06:18,680 --> 00:06:24,470
artist or a musician so for me to think

00:06:21,980 --> 00:06:28,250
in terms of game development was always

00:06:24,470 --> 00:06:30,530
pretty hard and why is that let's take a

00:06:28,250 --> 00:06:33,980
look at our classic fronting approach

00:06:30,530 --> 00:06:36,860
that we all love which is with throw

00:06:33,980 --> 00:06:40,190
content at our HTML and we see this

00:06:36,860 --> 00:06:43,010
content we visually format it via CSS

00:06:40,190 --> 00:06:45,560
these days we have auto refresh but back

00:06:43,010 --> 00:06:47,570
then we will go at five ffff over some

00:06:45,560 --> 00:06:52,970
of you are who I bet are still doing

00:06:47,570 --> 00:06:55,009
this so the thing is while we are f5 in

00:06:52,970 --> 00:06:57,499
our browsers we're

00:06:55,009 --> 00:07:01,249
what we're working on we don't have to

00:06:57,499 --> 00:07:03,229
abstract it in our minds and then after

00:07:01,249 --> 00:07:06,050
everything is laid out we'll make it

00:07:03,229 --> 00:07:10,759
come alive with JavaScript so how many

00:07:06,050 --> 00:07:15,589
of you use this workflow here nope okay

00:07:10,759 --> 00:07:18,050
some of you this is called in computer

00:07:15,589 --> 00:07:21,379
graphics we call this the retain mode

00:07:18,050 --> 00:07:24,979
the retain mode is when you don't have

00:07:21,379 --> 00:07:27,499
to worry about the drawing loop the

00:07:24,979 --> 00:07:33,620
things they are being draw draw on

00:07:27,499 --> 00:07:35,839
screen so the classic game game dev

00:07:33,620 --> 00:07:37,849
approach on the other side is a little

00:07:35,839 --> 00:07:40,759
different you have a game loop that

00:07:37,849 --> 00:07:42,710
takes like a clock and at each tick of

00:07:40,759 --> 00:07:45,169
this clock you make lots of

00:07:42,710 --> 00:07:49,309
verifications like victory conditions

00:07:45,169 --> 00:07:51,529
States collisions or except at each tick

00:07:49,309 --> 00:07:53,330
of the clock you're verifying this but

00:07:51,529 --> 00:07:57,589
because there's no other way to develop

00:07:53,330 --> 00:08:00,589
games and verify if your if your player

00:07:57,589 --> 00:08:02,659
is colliding verify player input so if

00:08:00,589 --> 00:08:05,539
you're making games that are heavily

00:08:02,659 --> 00:08:07,939
reliant on player reflexes that's the

00:08:05,539 --> 00:08:09,709
way we should develop games this is

00:08:07,939 --> 00:08:12,709
called immediate mode when you have

00:08:09,709 --> 00:08:15,469
control over your drawing loop you have

00:08:12,709 --> 00:08:19,249
control over each and every frame that

00:08:15,469 --> 00:08:22,159
goes into the screen this is your right

00:08:19,249 --> 00:08:25,580
approach the right way however and

00:08:22,159 --> 00:08:27,529
however no no not however it is faster

00:08:25,580 --> 00:08:30,080
it is more efficient and it's more

00:08:27,529 --> 00:08:33,260
flexible so you have full control over

00:08:30,080 --> 00:08:35,479
your game so it is the right way if any

00:08:33,260 --> 00:08:38,360
of you want to be a professional game

00:08:35,479 --> 00:08:40,519
developer this is the way you should go

00:08:38,360 --> 00:08:42,610
this is the way you should learn this is

00:08:40,519 --> 00:08:45,769
the way games are made to be honest

00:08:42,610 --> 00:08:48,010
however if you're like me you will find

00:08:45,769 --> 00:08:50,690
it that it's also more complex more

00:08:48,010 --> 00:08:53,899
abstract as I told you before you have

00:08:50,690 --> 00:08:56,000
to think beforehand before you get to

00:08:53,899 --> 00:09:00,889
see things happening on screen you have

00:08:56,000 --> 00:09:02,779
to program a lot it's less friendly for

00:09:00,889 --> 00:09:05,810
visual thinkers because of this very

00:09:02,779 --> 00:09:08,780
reason I find it to be so and it's a

00:09:05,810 --> 00:09:12,770
completely different way of coding so

00:09:08,780 --> 00:09:15,410
if you use to coding websites and you ok

00:09:12,770 --> 00:09:17,300
now I'm going to run phaser it's a

00:09:15,410 --> 00:09:20,210
completely way of cording you have to

00:09:17,300 --> 00:09:22,430
relearn everything you know and in my

00:09:20,210 --> 00:09:25,430
life I have procrastinated a lot of

00:09:22,430 --> 00:09:28,340
times I started learning a game engine

00:09:25,430 --> 00:09:31,190
and I haven't gone to the end because I

00:09:28,340 --> 00:09:35,750
found two different I I didn't have time

00:09:31,190 --> 00:09:37,910
back then so in 2014 I read this book

00:09:35,750 --> 00:09:39,920
jquery the game developed many

00:09:37,910 --> 00:09:43,670
essentials and this book is all about

00:09:39,920 --> 00:09:46,010
making games with the dawn after that I

00:09:43,670 --> 00:09:49,010
made these games which happened to be

00:09:46,010 --> 00:09:52,360
client works these are simple games but

00:09:49,010 --> 00:09:56,330
they were made with DOM and I was

00:09:52,360 --> 00:09:58,520
amazing bleh I was like man I can make

00:09:56,330 --> 00:10:01,280
games I can finally make games and

00:09:58,520 --> 00:10:05,000
what's best i can make games exactly

00:10:01,280 --> 00:10:07,400
like i make websites so what i really

00:10:05,000 --> 00:10:09,890
mean by game dev for web designers is

00:10:07,400 --> 00:10:11,900
not take a traditional engine switch

00:10:09,890 --> 00:10:17,060
you're arranging target and you're set

00:10:11,900 --> 00:10:19,940
no I want you to I want you to see the

00:10:17,060 --> 00:10:24,590
beauty of developing games by using HTML

00:10:19,940 --> 00:10:28,730
CSS and JavaScript and to convince you I

00:10:24,590 --> 00:10:30,560
made a proof of concept here which is

00:10:28,730 --> 00:10:32,870
our game warlocks tower I made a

00:10:30,560 --> 00:10:36,500
simplified version of warlocks hour

00:10:32,870 --> 00:10:42,890
which is running on the dawn and i will

00:10:36,500 --> 00:10:49,760
show you right now let me put this here

00:10:42,890 --> 00:10:55,340
so i can use my mouth okay so this is

00:10:49,760 --> 00:10:58,340
warlocks tower as you can see the

00:10:55,340 --> 00:11:01,430
inspector is open so if i put my mouse

00:10:58,340 --> 00:11:04,550
here well walls are let me explain to

00:11:01,430 --> 00:11:08,990
you play as mailman team which is this

00:11:04,550 --> 00:11:11,360
guy here and he must take as i told you

00:11:08,990 --> 00:11:14,540
this is a version of a larger game which

00:11:11,360 --> 00:11:16,250
was developing lure in this game you

00:11:14,540 --> 00:11:18,500
play as mailman team and you have to

00:11:16,250 --> 00:11:21,550
take a ladder to the evil warlock who

00:11:18,500 --> 00:11:25,149
lives on the top of the tower however

00:11:21,550 --> 00:11:29,790
the tower is cursed so at each step you

00:11:25,149 --> 00:11:35,529
take you lose one life okay so if I

00:11:29,790 --> 00:11:39,250
screw up I die these controls are for

00:11:35,529 --> 00:11:42,160
mobile use so if you wish to access the

00:11:39,250 --> 00:11:46,029
URL later you can try it it's mostly

00:11:42,160 --> 00:11:48,610
working on Chrome mobile chrome and I

00:11:46,029 --> 00:11:50,980
think I follow as well but it's a little

00:11:48,610 --> 00:11:54,910
worried and I would explain why but

00:11:50,980 --> 00:11:59,860
let's stick to it if you can see where

00:11:54,910 --> 00:12:04,240
if I expect here Tim himself is a div so

00:11:59,860 --> 00:12:07,630
he's here okay and there is JavaScript

00:12:04,240 --> 00:12:09,910
animation going on well he walks and oh

00:12:07,630 --> 00:12:12,730
I forgot to tell you there are three

00:12:09,910 --> 00:12:14,740
live gems in five live gems so the

00:12:12,730 --> 00:12:17,440
puzzle is that I must get to the exit

00:12:14,740 --> 00:12:21,880
that I conveniently painted blue for you

00:12:17,440 --> 00:12:24,160
and by taking the gems so if we had time

00:12:21,880 --> 00:12:25,720
I would ask one of you to come here and

00:12:24,160 --> 00:12:28,060
play because I love to see people

00:12:25,720 --> 00:12:31,120
playing it were lost our however I'll

00:12:28,060 --> 00:12:36,940
just play for you so you saw me dying

00:12:31,120 --> 00:12:39,670
already well die again and the idea in

00:12:36,940 --> 00:12:42,339
this level is that I have to pick I

00:12:39,670 --> 00:12:45,700
don't need this gem I'd have to pick

00:12:42,339 --> 00:12:53,550
this one this one and then go straight

00:12:45,700 --> 00:12:56,860
to the exit okay my main idea here

00:12:53,550 --> 00:12:59,970
besides proving to you that I can take

00:12:56,860 --> 00:13:02,529
our commercial product which is a

00:12:59,970 --> 00:13:04,360
award-winning product that will take to

00:13:02,529 --> 00:13:08,860
the market in two or three months and

00:13:04,360 --> 00:13:11,350
make with HTML and CSS I also wanted to

00:13:08,860 --> 00:13:13,870
make a proof of concept of something I

00:13:11,350 --> 00:13:17,800
find very interesting which is using

00:13:13,870 --> 00:13:20,949
HTML as a level design too ok if you use

00:13:17,800 --> 00:13:24,519
a live server as I'm doing here a node

00:13:20,949 --> 00:13:26,790
live server and I most of you how many

00:13:24,519 --> 00:13:30,310
of you are using life service these days

00:13:26,790 --> 00:13:32,740
most of you the ones who aren't should

00:13:30,310 --> 00:13:35,350
because it makes her life really easier

00:13:32,740 --> 00:13:39,040
so if you're using a live server

00:13:35,350 --> 00:13:41,650
i coded it so as to make the level

00:13:39,040 --> 00:13:44,680
design process as streamlined as I could

00:13:41,650 --> 00:13:47,530
so all we have to do I'm using tables

00:13:44,680 --> 00:13:50,470
here not because I think that you see

00:13:47,530 --> 00:13:53,410
the tables for your website because it's

00:13:50,470 --> 00:13:56,230
a grid-based game so i found it i found

00:13:53,410 --> 00:13:59,500
the tables to be more intuitive as a

00:13:56,230 --> 00:14:01,720
level design tool in this case instead

00:13:59,500 --> 00:14:04,060
of using just dips with classes or

00:14:01,720 --> 00:14:07,480
section and a div inside a section or an

00:14:04,060 --> 00:14:09,850
article i just use a table here so if i

00:14:07,480 --> 00:14:13,690
want to create a new event here i will

00:14:09,850 --> 00:14:17,290
create for example a number three Jen

00:14:13,690 --> 00:14:20,650
here in the last column okay then I'll

00:14:17,290 --> 00:14:23,560
just put the question 3 and when it

00:14:20,650 --> 00:14:26,350
refreshes here's my jam so I can make my

00:14:23,560 --> 00:14:30,310
level in real time by using good and old

00:14:26,350 --> 00:14:32,590
HTML I can make it pretty fast I'm used

00:14:30,310 --> 00:14:36,250
to making levels using a level editor

00:14:32,590 --> 00:14:38,860
called tiled and I wanted to reproduce

00:14:36,250 --> 00:14:41,830
this workflow as good as I could with

00:14:38,860 --> 00:14:44,710
HTML I took this idea from the the

00:14:41,830 --> 00:14:47,380
system i usually used to author my

00:14:44,710 --> 00:14:49,690
slides when i teach classes which is

00:14:47,380 --> 00:14:52,840
revealed Jas and after some years of

00:14:49,690 --> 00:14:56,110
using reveal Jas I was amazed of how

00:14:52,840 --> 00:14:58,720
fast I could work authoring with HTML

00:14:56,110 --> 00:15:02,200
and I bet you also can author pretty

00:14:58,720 --> 00:15:04,090
fast with HML so of course I won't be

00:15:02,200 --> 00:15:07,870
making a fool ever here because you have

00:15:04,090 --> 00:15:10,600
to think for that but you can see that I

00:15:07,870 --> 00:15:12,640
have the main events here that allow me

00:15:10,600 --> 00:15:16,090
to make a warlock star level which are

00:15:12,640 --> 00:15:19,390
the three jam the five gem and the whole

00:15:16,090 --> 00:15:22,810
with that you can make a lot of levels I

00:15:19,390 --> 00:15:25,300
also implemented a quick level oder so i

00:15:22,810 --> 00:15:30,060
can switch levels here and load on

00:15:25,300 --> 00:15:35,350
another level so i could for instance

00:15:30,060 --> 00:15:38,560
die and well here's the first level

00:15:35,350 --> 00:15:40,750
again as i told you this is a prototype

00:15:38,560 --> 00:15:42,940
it's a prototype i made just for this

00:15:40,750 --> 00:15:45,670
talk then of course there are some

00:15:42,940 --> 00:15:48,190
quirks here and there but it's totally

00:15:45,670 --> 00:15:49,059
playable and it's so the levels are

00:15:48,190 --> 00:15:51,459
totally do

00:15:49,059 --> 00:15:54,009
there's a levels folder and if you

00:15:51,459 --> 00:15:55,899
create a new HTML for it will appear

00:15:54,009 --> 00:15:58,839
here on the list for you to load and

00:15:55,899 --> 00:16:00,939
you've gotten yourself a new level so if

00:15:58,839 --> 00:16:03,039
you want to experiment with it I will

00:16:00,939 --> 00:16:05,439
make it available through github and

00:16:03,039 --> 00:16:14,529
cold pan later and you can design your

00:16:05,439 --> 00:16:17,589
own warlocks tower levels so my main

00:16:14,529 --> 00:16:20,499
takeaways here one of one of which i

00:16:17,589 --> 00:16:23,649
have talked a lot about is that HTML is

00:16:20,499 --> 00:16:26,429
a great level design to not only because

00:16:23,649 --> 00:16:28,659
we're used to it but because our IDEs

00:16:26,429 --> 00:16:31,749
autocomplete a lot of stuff so we can

00:16:28,659 --> 00:16:35,679
work really fast with it and if you want

00:16:31,749 --> 00:16:40,719
prefer to use a preprocessor like a

00:16:35,679 --> 00:16:44,979
hammer or such an elegant language you

00:16:40,719 --> 00:16:48,099
probably work even faster I've used a

00:16:44,979 --> 00:16:51,219
lot of CSS pseudo elements so to create

00:16:48,099 --> 00:16:55,089
the gems to create the holes the events

00:16:51,219 --> 00:16:57,999
and to make the the lab the level design

00:16:55,089 --> 00:17:01,119
process as straightforward as I could so

00:16:57,999 --> 00:17:04,299
my main objective was I just add classes

00:17:01,119 --> 00:17:06,610
and stuff will happen so I use a lot of

00:17:04,299 --> 00:17:09,279
pseudo elements for that of course I use

00:17:06,610 --> 00:17:11,230
CSS animations for the gems and a cool

00:17:09,279 --> 00:17:14,019
thing about using CSS animations for

00:17:11,230 --> 00:17:17,439
that is that you can specify different

00:17:14,019 --> 00:17:19,600
animation timings which in normal game

00:17:17,439 --> 00:17:22,299
engines it's kind of a pain to make

00:17:19,600 --> 00:17:24,999
stuff happen at different rates so by

00:17:22,299 --> 00:17:27,009
using CSS for our animations for the

00:17:24,999 --> 00:17:28,990
static objects like the gems the gym

00:17:27,009 --> 00:17:31,480
doesn't have to move around they are

00:17:28,990 --> 00:17:34,710
there and they are just a sprite sprite

00:17:31,480 --> 00:17:40,299
sheet being played through CSS with the

00:17:34,710 --> 00:17:42,730
steps function so it's pretty CSS is an

00:17:40,299 --> 00:17:45,519
amazing tool and CSS is also great if

00:17:42,730 --> 00:17:47,169
you're like we are a developer working

00:17:45,519 --> 00:17:49,840
on the game logic and you have a

00:17:47,169 --> 00:17:52,899
designer or artists working on the

00:17:49,840 --> 00:17:56,649
visual side you can parallel eyes the

00:17:52,899 --> 00:17:58,539
work pretty pretty easily with CSS your

00:17:56,649 --> 00:18:00,429
designer may make just like we do on

00:17:58,539 --> 00:18:01,170
websites right that your designer may

00:18:00,429 --> 00:18:05,040
make

00:18:01,170 --> 00:18:07,710
new level themes new spreadsheets new

00:18:05,040 --> 00:18:10,290
monsters and may test all of it just by

00:18:07,710 --> 00:18:12,420
using CSS he doesn't have to get his

00:18:10,290 --> 00:18:15,330
hands dirty with JavaScript if he

00:18:12,420 --> 00:18:18,030
doesn't why doesn't want it jquery is

00:18:15,330 --> 00:18:21,990
too very handy for this kind of stuff

00:18:18,030 --> 00:18:24,420
because when you're working with with an

00:18:21,990 --> 00:18:27,630
engine where everything our downloads

00:18:24,420 --> 00:18:31,050
there are jquery is a very good tool to

00:18:27,630 --> 00:18:33,720
query the dome as you may know and it

00:18:31,050 --> 00:18:36,360
returns you the jquery object with which

00:18:33,720 --> 00:18:40,320
already comes with a lot of information

00:18:36,360 --> 00:18:42,750
that you can use for for your game so it

00:18:40,320 --> 00:18:45,720
is still a handy tool for this uses but

00:18:42,750 --> 00:18:48,230
you can still go vanilla JavaScript no

00:18:45,720 --> 00:18:51,840
problem with that and and do the same

00:18:48,230 --> 00:18:54,600
another thing I use I use a lot is image

00:18:51,840 --> 00:18:59,820
rendering pixelated which is a fairly

00:18:54,600 --> 00:19:03,440
recent CSS rule and it's not supported

00:18:59,820 --> 00:19:07,350
in all major browsers yet for instance i

00:19:03,440 --> 00:19:10,050
founded that on mobile iOS the game is

00:19:07,350 --> 00:19:12,570
too blurry because the idea will be

00:19:10,050 --> 00:19:15,270
image rendering pixelated because this

00:19:12,570 --> 00:19:17,790
kind of image rendering mode uses the

00:19:15,270 --> 00:19:19,590
nearest neighbourhood algorithm which is

00:19:17,790 --> 00:19:23,490
the algorithm you need to scale your

00:19:19,590 --> 00:19:25,770
pixel art and pixel art is it is always

00:19:23,490 --> 00:19:29,480
a good fit for the web because it's

00:19:25,770 --> 00:19:33,960
small i'm using 16 by 16 sprites so it's

00:19:29,480 --> 00:19:36,630
ultra fast my CSS files my javascript

00:19:33,960 --> 00:19:41,490
files are probably larger than my images

00:19:36,630 --> 00:19:44,760
and and they scale well it so if you're

00:19:41,490 --> 00:19:47,280
using a preprocessor like less or says

00:19:44,760 --> 00:19:50,280
you can just create a variable with a

00:19:47,280 --> 00:19:53,160
scale factor and then just scale the

00:19:50,280 --> 00:19:56,250
screen and because of the nearest

00:19:53,160 --> 00:19:59,340
neighbor already algorithm if you scale

00:19:56,250 --> 00:20:00,960
the screen it will adjust pretty well so

00:19:59,340 --> 00:20:03,690
you can write some media queries and

00:20:00,960 --> 00:20:05,760
scale the screen according to your

00:20:03,690 --> 00:20:09,600
resolutions so these are the takeaways

00:20:05,760 --> 00:20:11,580
and I wanted to talk about what's

00:20:09,600 --> 00:20:15,090
different now because I told you that

00:20:11,580 --> 00:20:19,140
back then those pioneering

00:20:15,090 --> 00:20:21,540
engines were slow right so these days as

00:20:19,140 --> 00:20:24,420
we know browser Jas engines are way

00:20:21,540 --> 00:20:27,270
faster because the vendors are trying to

00:20:24,420 --> 00:20:29,580
provide a native life experience these

00:20:27,270 --> 00:20:32,040
days we also have a request animation

00:20:29,580 --> 00:20:35,250
frame we don't have to rely we also have

00:20:32,040 --> 00:20:38,070
of course at all the school high-tech

00:20:35,250 --> 00:20:40,380
stuff that rachel has shown you so you

00:20:38,070 --> 00:20:42,630
won't need even to rely on request

00:20:40,380 --> 00:20:45,270
animation frame in the future then of

00:20:42,630 --> 00:20:49,080
course we have optimized libraries like

00:20:45,270 --> 00:20:51,330
gzip and velocity that take care of all

00:20:49,080 --> 00:20:53,550
the optimization you need with repaints

00:20:51,330 --> 00:20:55,860
and reflows that is the major

00:20:53,550 --> 00:20:58,350
performance bottleneck when you're

00:20:55,860 --> 00:21:01,890
trying to manipulate the Dom and move

00:20:58,350 --> 00:21:05,820
things to the dome however since I'm

00:21:01,890 --> 00:21:07,860
using CSS animations as well the most of

00:21:05,820 --> 00:21:11,550
the animations the static animations get

00:21:07,860 --> 00:21:14,970
uploaded to the GPU anyway so using gzip

00:21:11,550 --> 00:21:18,330
in combination is a good choice until we

00:21:14,970 --> 00:21:21,570
start using the web animations API and

00:21:18,330 --> 00:21:23,940
one thing that we never had and as a

00:21:21,570 --> 00:21:27,120
musician I was always really sad about

00:21:23,940 --> 00:21:30,030
that it's cross-browser audio support so

00:21:27,120 --> 00:21:32,130
now we have that through the audio

00:21:30,030 --> 00:21:34,680
element which is a little quirky and of

00:21:32,130 --> 00:21:37,890
course through the Web Audio API the Web

00:21:34,680 --> 00:21:40,110
Audio API is amazing it provides a lot

00:21:37,890 --> 00:21:44,790
of possibilities for games like spatial

00:21:40,110 --> 00:21:46,650
audio and dynamic audio and we are

00:21:44,790 --> 00:21:52,050
really close to having it supported

00:21:46,650 --> 00:21:54,810
widespread so another thing if I have

00:21:52,050 --> 00:21:58,680
time do I have time ok I wanted to talk

00:21:54,810 --> 00:22:01,860
about is the types of games that we can

00:21:58,680 --> 00:22:04,560
make is that of course we can make we

00:22:01,860 --> 00:22:09,150
cannot make every type of game by using

00:22:04,560 --> 00:22:12,150
the dawn but we can make fairly a fairly

00:22:09,150 --> 00:22:14,730
good quantity of genres such as of

00:22:12,150 --> 00:22:17,160
course rapid prototyping genre is not a

00:22:14,730 --> 00:22:20,100
joiner I start with it with it because i

00:22:17,160 --> 00:22:22,260
find that HTML and CSS and javascript

00:22:20,100 --> 00:22:24,240
are really good for rapid prototyping

00:22:22,260 --> 00:22:27,030
you can just throw your code there and

00:22:24,240 --> 00:22:28,470
test game ideas because in traditional

00:22:27,030 --> 00:22:30,419
game design

00:22:28,470 --> 00:22:33,210
we usually test our ideas with pen and

00:22:30,419 --> 00:22:35,549
paper will test our ideas with board

00:22:33,210 --> 00:22:38,039
games if you study in a game design

00:22:35,549 --> 00:22:41,280
class and you problem your teacher will

00:22:38,039 --> 00:22:43,230
probably take you one step back and tell

00:22:41,280 --> 00:22:45,690
you to design board games to test your

00:22:43,230 --> 00:22:48,210
rule set so we can take one step further

00:22:45,690 --> 00:22:52,230
from that then test our rule set by

00:22:48,210 --> 00:22:53,850
using an HTML Javascript and CSS you can

00:22:52,230 --> 00:22:56,720
make digital card games you can make

00:22:53,850 --> 00:23:00,299
digital board games you could make

00:22:56,720 --> 00:23:04,289
management simulators and this one which

00:23:00,299 --> 00:23:06,299
is game dev tycoon and was made by using

00:23:04,289 --> 00:23:08,549
web technologies and it's a great game

00:23:06,299 --> 00:23:11,940
it's an awesome game if I haven't played

00:23:08,549 --> 00:23:14,490
you should strategy RPGs like

00:23:11,940 --> 00:23:17,190
TextExpander Fantasy Tactics vandal

00:23:14,490 --> 00:23:19,320
hearts Fire Emblem this kind of kinds of

00:23:17,190 --> 00:23:21,210
games are easy to easy easily doable

00:23:19,320 --> 00:23:23,429
they are pretty similar to what I've

00:23:21,210 --> 00:23:25,679
shown you in war all-star of course a

00:23:23,429 --> 00:23:28,470
point-and-click adventure games are

00:23:25,679 --> 00:23:32,070
totally but doable with Dom puzzles of

00:23:28,470 --> 00:23:34,890
course as I have proven you and most

00:23:32,070 --> 00:23:38,610
turn based games can be achieved by

00:23:34,890 --> 00:23:41,909
using John technologies okay if you rely

00:23:38,610 --> 00:23:44,669
on the player taking actions

00:23:41,909 --> 00:23:47,669
turn-by-turn if you don't rely on a game

00:23:44,669 --> 00:23:50,100
clock on very fun events at each tick of

00:23:47,669 --> 00:23:52,830
a clock you can make it by using the Dom

00:23:50,100 --> 00:23:56,270
you just react to play events and you

00:23:52,830 --> 00:23:58,860
react to the terms there are some jurors

00:23:56,270 --> 00:24:02,010
however that you shouldn't even try

00:23:58,860 --> 00:24:04,620
because these are the games based off

00:24:02,010 --> 00:24:06,510
reflexes that i told you about where you

00:24:04,620 --> 00:24:08,809
have to make lots of verifications and

00:24:06,510 --> 00:24:12,090
you couldn't you it would be quickly

00:24:08,809 --> 00:24:14,400
drain by callback hell by using the DOM

00:24:12,090 --> 00:24:17,750
and you probably wouldn't have a

00:24:14,400 --> 00:24:19,830
performance anyway so action platformers

00:24:17,750 --> 00:24:22,260
first-person shooters shoot em ups

00:24:19,830 --> 00:24:24,030
fighting games anything with frantic

00:24:22,260 --> 00:24:27,270
gameplay lots of sprites collisions

00:24:24,030 --> 00:24:29,400
real-time events for that stick to

00:24:27,270 --> 00:24:31,919
traditional engines you don't have to

00:24:29,400 --> 00:24:36,270
get out of the web you may use for

00:24:31,919 --> 00:24:39,080
instance craft tjs which is a pretty

00:24:36,270 --> 00:24:41,700
easy engine to use you may use phaser

00:24:39,080 --> 00:24:44,370
you may also use construct

00:24:41,700 --> 00:24:48,029
which is a technology in which you make

00:24:44,370 --> 00:24:49,980
games by pointing and clicking so if you

00:24:48,029 --> 00:24:52,769
don't want to call whatsoever if you're

00:24:49,980 --> 00:24:54,679
getting home tired from a day of code in

00:24:52,769 --> 00:24:58,980
JavaScript and you just want to play

00:24:54,679 --> 00:25:02,039
constructed nice tool and it's all it

00:24:58,980 --> 00:25:06,539
renders to WebGL so it's also web based

00:25:02,039 --> 00:25:09,779
rendering wise and the last thing I want

00:25:06,539 --> 00:25:11,519
I want to say is of course i know i'm

00:25:09,779 --> 00:25:13,200
talking about the heck here and i hope

00:25:11,519 --> 00:25:16,860
you also know i'm talking about a hack

00:25:13,200 --> 00:25:19,740
the dome were was made for you I for

00:25:16,860 --> 00:25:23,039
using interfaces for content heavy stuff

00:25:19,740 --> 00:25:26,130
it wasn't made for her game so I'm aware

00:25:23,039 --> 00:25:29,000
that I'm advocating here for a heck but

00:25:26,130 --> 00:25:32,309
it's a good heck it's a hack that will I

00:25:29,000 --> 00:25:34,710
hope hopefully will will encourage you

00:25:32,309 --> 00:25:37,409
who already have this skill set who

00:25:34,710 --> 00:25:40,019
already know how to code website to code

00:25:37,409 --> 00:25:43,169
games i wish i can open your mind to how

00:25:40,019 --> 00:25:46,950
many games you could be doing so don't

00:25:43,169 --> 00:25:49,710
procrastinate don't wait for the day

00:25:46,950 --> 00:25:53,580
when you finally learn phaser or unity

00:25:49,710 --> 00:25:58,289
or unreal engine just start making your

00:25:53,580 --> 00:26:02,130
games with what you know i think that's

00:25:58,289 --> 00:26:05,130
it you can reach me at better at midi

00:26:02,130 --> 00:26:07,590
pixel com I'm w mythical pixel at

00:26:05,130 --> 00:26:09,779
Twitter and you should definitely check

00:26:07,590 --> 00:26:13,710
out the original warlocks are we have a

00:26:09,779 --> 00:26:16,080
built for pc mac and linux and we have

00:26:13,710 --> 00:26:19,100
already in this build and this demo

00:26:16,080 --> 00:26:21,990
build which is free of course we have

00:26:19,100 --> 00:26:24,299
30-something levels and i hope you can

00:26:21,990 --> 00:26:26,850
play it and enjoy it and hopefully

00:26:24,299 --> 00:26:29,530
provide me with feedback so i can make

00:26:26,850 --> 00:26:40,180
the game better so gracias

00:26:29,530 --> 00:26:40,180

YouTube URL: https://www.youtube.com/watch?v=tjnk1zjsWUY


