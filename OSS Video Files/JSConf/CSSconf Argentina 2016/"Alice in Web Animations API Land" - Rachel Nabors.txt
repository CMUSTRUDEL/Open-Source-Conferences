Title: "Alice in Web Animations API Land" - Rachel Nabors
Publication date: 2016-12-02
Playlist: CSSconf Argentina 2016
Description: 
	Rachel Nabors presenting at CSSConf Argentina 2016
Captions: 
	00:00:14,440 --> 00:00:22,289
so hi there I'm curious in the audience

00:00:17,920 --> 00:00:26,470
who here is excited about animation whoo

00:00:22,289 --> 00:00:31,360
my faithful I'm so happy okay how many

00:00:26,470 --> 00:00:34,180
of you use CSS animations how many of

00:00:31,360 --> 00:00:37,870
you use a javascript animation library

00:00:34,180 --> 00:00:39,570
like gee sap okay fewer if your hands

00:00:37,870 --> 00:00:43,510
it's okay we're here to talk about

00:00:39,570 --> 00:00:45,730
bridging those two today and so Before

00:00:43,510 --> 00:00:48,820
we jump in and what I do i help clients

00:00:45,730 --> 00:00:51,809
with motion design systems and animating

00:00:48,820 --> 00:00:54,579
their user interfaces I worked with

00:00:51,809 --> 00:00:56,199
Salesforce on their motion design system

00:00:54,579 --> 00:00:59,530
portion of the lighting design system

00:00:56,199 --> 00:01:02,589
but back in the day I used to be a

00:00:59,530 --> 00:01:05,350
cartoonist and this is how I started my

00:01:02,589 --> 00:01:07,510
long path to where I am now I used to be

00:01:05,350 --> 00:01:09,909
a professional cartoonist I had I drew

00:01:07,510 --> 00:01:12,460
comics had many fans all over the world

00:01:09,909 --> 00:01:15,130
this was my goodness like a decade ago

00:01:12,460 --> 00:01:17,680
and then one day I needed to get some

00:01:15,130 --> 00:01:19,540
surgery and cartoonists in the United

00:01:17,680 --> 00:01:22,510
States of America do not make enough to

00:01:19,540 --> 00:01:25,600
get surgery so I had to go find a real

00:01:22,510 --> 00:01:28,480
job and I ended up making comics for a

00:01:25,600 --> 00:01:30,820
living I ended up I ended up moving into

00:01:28,480 --> 00:01:32,800
web development I put my web skills to

00:01:30,820 --> 00:01:35,200
use turning my back on creativity and I

00:01:32,800 --> 00:01:37,660
thought I will never tell stories again

00:01:35,200 --> 00:01:39,760
i am a i'm a web developer now i am a

00:01:37,660 --> 00:01:41,770
front-end developer everything is CSS

00:01:39,760 --> 00:01:44,320
everything is typography nothing moves

00:01:41,770 --> 00:01:50,560
not even room for illustrations it's

00:01:44,320 --> 00:01:53,470
over I thought so few years passed and I

00:01:50,560 --> 00:01:57,070
remembered all of a sudden Scott McCloud

00:01:53,470 --> 00:01:59,590
this guy he is the who has read making

00:01:57,070 --> 00:02:03,010
comics understanding comics reinventing

00:01:59,590 --> 00:02:05,380
comics if you haven't read it it's a

00:02:03,010 --> 00:02:08,259
great book by scott mccloud he is the

00:02:05,380 --> 00:02:10,149
godfather of the future of comics and he

00:02:08,259 --> 00:02:11,769
wrote a really beautiful book called

00:02:10,149 --> 00:02:15,220
reinventing comics which was all about

00:02:11,769 --> 00:02:16,810
the infinite canvas and what you know

00:02:15,220 --> 00:02:18,970
was saying earlier really spoke to me

00:02:16,810 --> 00:02:20,739
about arcing the web for it because i

00:02:18,970 --> 00:02:22,450
was looking at all these AP is that were

00:02:20,739 --> 00:02:24,440
coming out for speech recognition and

00:02:22,450 --> 00:02:25,940
audio generation and

00:02:24,440 --> 00:02:27,800
animation and I was thinking oh my

00:02:25,940 --> 00:02:29,780
goodness it's what Scott MacLeod said

00:02:27,800 --> 00:02:31,820
there is an infinite canvas in my

00:02:29,780 --> 00:02:34,550
browser and I can realize stories I

00:02:31,820 --> 00:02:37,910
don't need flash I can use JavaScript

00:02:34,550 --> 00:02:43,010
and CSS we can do this yes yes so I quit

00:02:37,910 --> 00:02:47,300
my job and I keep falling in love with

00:02:43,010 --> 00:02:48,800
the wrong jobs uh so I quit my job and I

00:02:47,300 --> 00:02:50,420
gave myself fully to it I started

00:02:48,800 --> 00:02:53,300
traveling and making cool things and

00:02:50,420 --> 00:02:55,040
speaking and you know coming to places

00:02:53,300 --> 00:02:56,510
like Argentina thank you so much for

00:02:55,040 --> 00:02:59,690
having me it's so good to be here I've

00:02:56,510 --> 00:03:03,110
never been to South American continent

00:02:59,690 --> 00:03:09,860
so it's like wow it's huge located well

00:03:03,110 --> 00:03:13,100
here Wow very exciting great steak so

00:03:09,860 --> 00:03:15,530
yes my first project was Alice in video

00:03:13,100 --> 00:03:18,140
land and I do not mean the Swedish

00:03:15,530 --> 00:03:20,600
electroclash rock band although I'm a

00:03:18,140 --> 00:03:23,030
big fan of theirs Alison video land was

00:03:20,600 --> 00:03:25,370
a project I did with adobe's inspire

00:03:23,030 --> 00:03:27,800
magazine to showcase some ways that you

00:03:25,370 --> 00:03:29,930
could use CSS animation to tell stories

00:03:27,800 --> 00:03:32,720
that until this time had been largely

00:03:29,930 --> 00:03:35,120
the domain of flash which everyone was

00:03:32,720 --> 00:03:37,190
morning and couldn't use I still get

00:03:35,120 --> 00:03:39,050
emails from designers because more

00:03:37,190 --> 00:03:41,150
designers and web developers saw this I

00:03:39,050 --> 00:03:43,520
still get emails from designers saying I

00:03:41,150 --> 00:03:45,500
saw that it really inspired me to get

00:03:43,520 --> 00:03:47,390
into using code and front-end

00:03:45,500 --> 00:03:49,250
development to tell new and unusual

00:03:47,390 --> 00:03:51,530
stories in different ways that's pretty

00:03:49,250 --> 00:03:53,630
powerful it's exciting reminds me a lot

00:03:51,530 --> 00:03:56,120
of the emails I used to get from young

00:03:53,630 --> 00:03:58,040
women who read my comics online so that

00:03:56,120 --> 00:04:00,200
was a video that I showed you I could

00:03:58,040 --> 00:04:01,820
use After Effects to just record that

00:04:00,200 --> 00:04:03,290
and show it to you there wasn't a whole

00:04:01,820 --> 00:04:04,850
lot of interaction happening there's a

00:04:03,290 --> 00:04:07,489
lot of animation but not a lot of

00:04:04,850 --> 00:04:09,140
interaction CSS animations are really

00:04:07,489 --> 00:04:11,630
declarative they're not very interactive

00:04:09,140 --> 00:04:14,660
if you want to do interactive animations

00:04:11,630 --> 00:04:18,080
you need a library like G sap or snap

00:04:14,660 --> 00:04:21,970
SVG or another kind of JavaScript thing

00:04:18,080 --> 00:04:24,560
a mochis we don't have a lot of

00:04:21,970 --> 00:04:26,120
interactive animation libraries but we

00:04:24,560 --> 00:04:28,340
have some good standards and solid

00:04:26,120 --> 00:04:31,160
standards it's still tough though

00:04:28,340 --> 00:04:34,190
because browsers let's face it browsers

00:04:31,160 --> 00:04:37,280
were designed for scrolling animation

00:04:34,190 --> 00:04:39,620
used to be the only the only realm of

00:04:37,280 --> 00:04:41,389
was in flash the only thing that

00:04:39,620 --> 00:04:44,030
browsers could animate was the page

00:04:41,389 --> 00:04:45,560
scrolling so when CSS animations and

00:04:44,030 --> 00:04:47,090
transitions came out of course browsers

00:04:45,560 --> 00:04:49,490
are like oh no this isn't very

00:04:47,090 --> 00:04:51,590
performant oh when is that thing start

00:04:49,490 --> 00:04:55,850
moving around ah they went a little

00:04:51,590 --> 00:04:58,460
crazy it's not it's not a game engine

00:04:55,850 --> 00:05:00,950
it's a it's a document reader it's a

00:04:58,460 --> 00:05:04,070
text document reader and now it's got to

00:05:00,950 --> 00:05:08,570
make things move and everything is about

00:05:04,070 --> 00:05:11,090
to change so before CSS animations and

00:05:08,570 --> 00:05:12,770
transitions over a decade ago there was

00:05:11,090 --> 00:05:16,550
this thing called synchronized

00:05:12,770 --> 00:05:19,970
multimedia integration language that's a

00:05:16,550 --> 00:05:23,570
lot but we know it as smile pronounced

00:05:19,970 --> 00:05:25,400
like the smile it's it's used to animate

00:05:23,570 --> 00:05:28,070
SVG's and this was one of the first

00:05:25,400 --> 00:05:30,460
animation ap is that was written it was

00:05:28,070 --> 00:05:36,169
created via that slow process we know as

00:05:30,460 --> 00:05:38,750
standards committees so in 2009 oh my

00:05:36,169 --> 00:05:42,050
goodness like a decade later safaris

00:05:38,750 --> 00:05:45,110
developers were working on trying to

00:05:42,050 --> 00:05:47,900
make the iOS safari experience feel and

00:05:45,110 --> 00:05:50,510
look as good as native web apps you know

00:05:47,900 --> 00:05:52,880
people are browsing the apple site on

00:05:50,510 --> 00:05:54,650
their iPhone shouldn't it look as cool

00:05:52,880 --> 00:05:58,700
as all the apps they're using on their

00:05:54,650 --> 00:06:01,370
iPhone so without the standards process

00:05:58,700 --> 00:06:03,289
they sort of introduced two new specs of

00:06:01,370 --> 00:06:04,580
their own because the standards

00:06:03,289 --> 00:06:06,440
committees had been chasing each other

00:06:04,580 --> 00:06:08,510
in a circle going how do we make

00:06:06,440 --> 00:06:11,300
animations no one could agree on

00:06:08,510 --> 00:06:13,850
anything it wasn't getting done so

00:06:11,300 --> 00:06:17,660
safaris team just came in and said boom

00:06:13,850 --> 00:06:20,090
you have them now when Internet Explorer

00:06:17,660 --> 00:06:22,370
saw this they were like you want us to

00:06:20,090 --> 00:06:25,039
implement all these different animation

00:06:22,370 --> 00:06:28,160
engines smile and CSS animations and

00:06:25,039 --> 00:06:30,260
transitions and each these are 33

00:06:28,160 --> 00:06:32,030
animation engines each one of them with

00:06:30,260 --> 00:06:33,890
a slightly different interpretation all

00:06:32,030 --> 00:06:35,630
the browsers are interpreting these in

00:06:33,890 --> 00:06:39,650
different ways this is this is getting

00:06:35,630 --> 00:06:41,300
way too difficult tell you what we will

00:06:39,650 --> 00:06:46,490
implement these all of these animations

00:06:41,300 --> 00:06:49,099
if you w3c can give us one API that will

00:06:46,490 --> 00:06:50,960
dictate how each of them should behave

00:06:49,099 --> 00:06:53,840
the one API to

00:06:50,960 --> 00:06:55,940
rule them all if you will an API that

00:06:53,840 --> 00:06:58,759
could underlie all of the current

00:06:55,940 --> 00:07:00,710
animation specifications and any future

00:06:58,759 --> 00:07:02,630
ones that would come along one that

00:07:00,710 --> 00:07:04,910
would bring animation to the browser and

00:07:02,630 --> 00:07:08,449
let the browser animate more than just

00:07:04,910 --> 00:07:10,310
scrolling and this would also of course

00:07:08,449 --> 00:07:12,860
open up this rendering engine to

00:07:10,310 --> 00:07:15,620
JavaScript developers so they could form

00:07:12,860 --> 00:07:19,430
their own animations in the future it

00:07:15,620 --> 00:07:22,130
was a really big API it took a long time

00:07:19,430 --> 00:07:24,440
to write and after several years of

00:07:22,130 --> 00:07:26,690
drafting spec authors finally are

00:07:24,440 --> 00:07:30,440
nailing down the edge cases and even

00:07:26,690 --> 00:07:34,910
edge has moved to adopt it we call it

00:07:30,440 --> 00:07:38,750
the web animations API unfortunately in

00:07:34,910 --> 00:07:41,360
the interim smile died at chrome

00:07:38,750 --> 00:07:44,479
deprecated smile and so Internet

00:07:41,360 --> 00:07:47,000
Explorer's like oh edge doesn't have to

00:07:44,479 --> 00:07:50,630
implement smile wow how they dodged that

00:07:47,000 --> 00:07:52,069
bullet well done way of saying mmm come

00:07:50,630 --> 00:07:56,659
back to me on Friday and then the

00:07:52,069 --> 00:07:58,729
problem just disappears so you can

00:07:56,659 --> 00:08:00,800
already see this API at work in browser

00:07:58,729 --> 00:08:02,570
animation in browser dev tools for

00:08:00,800 --> 00:08:04,789
instance these are the Firefox dev tools

00:08:02,570 --> 00:08:07,280
you can use them you see these timelines

00:08:04,789 --> 00:08:10,310
you can scrub that is possible because

00:08:07,280 --> 00:08:12,680
of the web animations API before the API

00:08:10,310 --> 00:08:14,870
doing this each browser would have had

00:08:12,680 --> 00:08:16,400
to write their own very weird code to do

00:08:14,870 --> 00:08:19,880
this now they all can use the web

00:08:16,400 --> 00:08:22,039
animations API to make timelines tools

00:08:19,880 --> 00:08:23,479
that you can scrub etc so it really does

00:08:22,039 --> 00:08:25,400
open up the engine not only for the

00:08:23,479 --> 00:08:29,570
browsers but for individual developers

00:08:25,400 --> 00:08:31,639
like you and I so it's an awesome it's

00:08:29,570 --> 00:08:33,560
an awesome API the web animations API is

00:08:31,639 --> 00:08:35,209
totally a big deal I believe in it it's

00:08:33,560 --> 00:08:37,339
going to change how we do animation on

00:08:35,209 --> 00:08:39,260
the web and I wanted to get the word out

00:08:37,339 --> 00:08:41,959
so I teamed up with the Mozilla

00:08:39,260 --> 00:08:43,399
developer network to get a grant so that

00:08:41,959 --> 00:08:49,399
I could document it because it is such a

00:08:43,399 --> 00:08:52,550
big API so I was like we got to document

00:08:49,399 --> 00:08:55,700
this let's do it and who better to help

00:08:52,550 --> 00:08:57,890
bring this API to developers and

00:08:55,700 --> 00:09:00,470
designers everywhere then our good old

00:08:57,890 --> 00:09:03,949
friend Alice the modern Alice in

00:09:00,470 --> 00:09:04,819
Wonderland so with that we would like to

00:09:03,949 --> 00:09:06,829
welcome you

00:09:04,819 --> 00:09:11,149
to jump down the rabbit hole to web

00:09:06,829 --> 00:09:14,359
animations API land so let's get start

00:09:11,149 --> 00:09:16,669
with these core concepts the web

00:09:14,359 --> 00:09:19,519
animations API is based on two models

00:09:16,669 --> 00:09:21,229
it's got a timing model and it's got an

00:09:19,519 --> 00:09:24,499
animation model or as I like to think of

00:09:21,229 --> 00:09:25,789
it as the when and the what one handles

00:09:24,499 --> 00:09:29,229
when things are happening the other

00:09:25,789 --> 00:09:32,389
handles what things should be happening

00:09:29,229 --> 00:09:35,319
now the web animations API is time-based

00:09:32,389 --> 00:09:38,479
all the animations must have durations

00:09:35,319 --> 00:09:40,789
currently these durations create

00:09:38,479 --> 00:09:43,189
timelines let's talk a little bit about

00:09:40,789 --> 00:09:45,259
the Cheshire Cat now let's say the

00:09:43,189 --> 00:09:47,359
Cheshire Cat takes eight seconds to

00:09:45,259 --> 00:09:51,139
disappear to go from being there to

00:09:47,359 --> 00:09:55,249
being not all there we go from zero at

00:09:51,139 --> 00:09:57,979
their 28 when he's not all there now the

00:09:55,249 --> 00:10:01,279
web animation API takes these two values

00:09:57,979 --> 00:10:04,220
makes a timeline and it's create

00:10:01,279 --> 00:10:06,739
snapshots of how he should look all the

00:10:04,220 --> 00:10:10,220
way down to milliseconds so any

00:10:06,739 --> 00:10:13,339
particular time the browser knows what

00:10:10,220 --> 00:10:15,529
he should look like here or here that's

00:10:13,339 --> 00:10:17,059
very performant because it means it's

00:10:15,529 --> 00:10:19,579
inherently see keable and searchable

00:10:17,059 --> 00:10:21,319
it's not procedural the browser can jump

00:10:19,579 --> 00:10:29,959
to any point in this timeline without

00:10:21,319 --> 00:10:31,220
having to expend too much energy so one

00:10:29,959 --> 00:10:33,559
of the ways i like to think about this

00:10:31,220 --> 00:10:35,779
even in the spec it says it states this

00:10:33,559 --> 00:10:37,699
that the time may be shifted backwards

00:10:35,779 --> 00:10:39,529
and forwards scaled reverse paused

00:10:37,699 --> 00:10:41,509
repeated this is the point you can you

00:10:39,529 --> 00:10:43,579
can manipulate time with this API and

00:10:41,509 --> 00:10:45,589
it's lets us do all kinds of wonderful

00:10:43,579 --> 00:10:47,449
things which i'm going to show you we

00:10:45,589 --> 00:10:51,499
call this kind of animation stainless

00:10:47,449 --> 00:10:54,470
and unlike request animation frame rate

00:10:51,499 --> 00:10:56,779
which is limited by how often the page

00:10:54,470 --> 00:10:59,689
is repainted there are some benefits to

00:10:56,779 --> 00:11:01,669
using this kind of timeline for this

00:10:59,689 --> 00:11:04,819
kind of animation for instance you can

00:11:01,669 --> 00:11:07,129
easily run animations at forwards or

00:11:04,819 --> 00:11:09,439
backwards you can create inherently see

00:11:07,129 --> 00:11:11,449
keable animations you can plunk down

00:11:09,439 --> 00:11:16,429
animations pretty much anywhere in the

00:11:11,449 --> 00:11:18,570
timeline so here's an example of

00:11:16,429 --> 00:11:21,450
something you can't do with CSS

00:11:18,570 --> 00:11:24,300
timelines have an inherent our hierarchy

00:11:21,450 --> 00:11:27,840
and today inherit here are two

00:11:24,300 --> 00:11:30,660
animations that on the left you can see

00:11:27,840 --> 00:11:32,730
the CSS animations as we add cats each

00:11:30,660 --> 00:11:34,440
cat starts at a different point so their

00:11:32,730 --> 00:11:37,050
timelines are out of sync but over here

00:11:34,440 --> 00:11:39,180
with the web animations API each one of

00:11:37,050 --> 00:11:41,520
these cloned cats we make you're making

00:11:39,180 --> 00:11:44,040
it inherent the timeline and its current

00:11:41,520 --> 00:11:45,960
position of the parent cat this is

00:11:44,040 --> 00:11:48,210
something we could not do with CSS alone

00:11:45,960 --> 00:11:51,830
but we are able to tap the browser's

00:11:48,210 --> 00:11:54,030
rendering engine and do it with this API

00:11:51,830 --> 00:11:56,850
now timelines have children called

00:11:54,030 --> 00:11:59,190
animations an animation connects a

00:11:56,850 --> 00:12:01,170
single tween to the timeline what is a

00:11:59,190 --> 00:12:06,000
tween I will explain that in a moment

00:12:01,170 --> 00:12:08,880
but basically what happens is that this

00:12:06,000 --> 00:12:12,180
tween from here from there to not all

00:12:08,880 --> 00:12:15,090
there right here is called a keyframe

00:12:12,180 --> 00:12:17,760
effect basically how the cat looks from

00:12:15,090 --> 00:12:21,230
being there to just being his smile we

00:12:17,760 --> 00:12:24,630
call that a key frame or keyframe effect

00:12:21,230 --> 00:12:26,160
so you have a timeline and you know what

00:12:24,630 --> 00:12:30,000
the thing should look like at any given

00:12:26,160 --> 00:12:32,310
time but how do you make it go now the

00:12:30,000 --> 00:12:34,290
animation allows you to play a key frame

00:12:32,310 --> 00:12:38,790
effect along a timeline the same way a

00:12:34,290 --> 00:12:41,160
DVD player would play a DVD so if you

00:12:38,790 --> 00:12:43,530
can think of a DVD player as being the

00:12:41,160 --> 00:12:45,330
animation object the key frame of flat

00:12:43,530 --> 00:12:48,210
effect would be the DVD you put in there

00:12:45,330 --> 00:12:50,100
keyframe effect holds all the different

00:12:48,210 --> 00:12:51,390
ways this thing should look the way the

00:12:50,100 --> 00:12:53,430
cat looks in the beginning all the way

00:12:51,390 --> 00:12:55,890
to the way he looks in the end but until

00:12:53,430 --> 00:12:57,870
you put it inside that key until you put

00:12:55,890 --> 00:13:00,360
it inside that animation you can't play

00:12:57,870 --> 00:13:02,640
it you can't sink it so the controls are

00:13:00,360 --> 00:13:05,840
in animation the information for how it

00:13:02,640 --> 00:13:05,840
should look is in the keyframe

00:13:06,890 --> 00:13:10,260
unfortunately I don't think people even

00:13:08,700 --> 00:13:12,660
remember this metaphor anymore let's

00:13:10,260 --> 00:13:15,120
move along so with these two models

00:13:12,660 --> 00:13:18,240
combined the timing and the animation

00:13:15,120 --> 00:13:20,850
the web animation API runs all animation

00:13:18,240 --> 00:13:23,940
engines in the browser now well now ish

00:13:20,850 --> 00:13:26,760
it's a this is this is all on a bleeding

00:13:23,940 --> 00:13:28,530
edge most recent Firefox and Chrome have

00:13:26,760 --> 00:13:30,790
this stuff available from out from

00:13:28,530 --> 00:13:33,460
underneath flags it's really exciting

00:13:30,790 --> 00:13:37,150
so why don't I show you all how it's how

00:13:33,460 --> 00:13:39,940
it does that with CSS animations now I'm

00:13:37,150 --> 00:13:42,460
assuming because I saw so many hands up

00:13:39,940 --> 00:13:44,320
that everyone here has a really good

00:13:42,460 --> 00:13:50,350
grasp of CSS animations and transitions

00:13:44,320 --> 00:13:54,100
by now yes okay well just in case just

00:13:50,350 --> 00:13:55,300
in case somebody doesn't i do have a non

00:13:54,100 --> 00:13:56,530
line course for that and there's a

00:13:55,300 --> 00:13:59,860
special price for you because you're

00:13:56,530 --> 00:14:02,500
awesome my goodness it's the same as the

00:13:59,860 --> 00:14:04,000
hashtag so anyway back to what we were

00:14:02,500 --> 00:14:05,710
talking about we got the animation

00:14:04,000 --> 00:14:07,420
player and it takes a keyframe effect

00:14:05,710 --> 00:14:09,400
let's take a closer look at this

00:14:07,420 --> 00:14:11,200
keyframe effect let's make one a

00:14:09,400 --> 00:14:13,210
keyframe of that constructor we're going

00:14:11,200 --> 00:14:15,550
to make some CSS animations using the

00:14:13,210 --> 00:14:18,010
web animations API I'll show you how the

00:14:15,550 --> 00:14:20,260
browser is doing this on the back end so

00:14:18,010 --> 00:14:22,450
in a traditional animation we get these

00:14:20,260 --> 00:14:25,090
two things called keys your key poses

00:14:22,450 --> 00:14:30,130
we've got tuna in point a we got to an

00:14:25,090 --> 00:14:32,050
end point B he's the cat Gina these in

00:14:30,130 --> 00:14:34,660
interaction development are referred to

00:14:32,050 --> 00:14:37,210
as keyframes not keep poses because

00:14:34,660 --> 00:14:39,850
you're not always animating animals that

00:14:37,210 --> 00:14:43,510
would pose you're animating interfaces

00:14:39,850 --> 00:14:45,670
so everything in between usually in

00:14:43,510 --> 00:14:48,220
traditional animation you would pay an

00:14:45,670 --> 00:14:49,900
intern or send us overseas where people

00:14:48,220 --> 00:14:52,540
can work many hours for very little

00:14:49,900 --> 00:14:53,920
money and this is why animation left

00:14:52,540 --> 00:14:56,050
America I go to these conferences

00:14:53,920 --> 00:14:59,110
likewise animation evening American it's

00:14:56,050 --> 00:15:03,910
like how could you afford to make it

00:14:59,110 --> 00:15:05,650
anyway so these are the in betweens but

00:15:03,910 --> 00:15:08,710
in interaction development we no

00:15:05,650 --> 00:15:10,260
in-betweens as teens you may have heard

00:15:08,710 --> 00:15:12,460
that if you've worked with flash

00:15:10,260 --> 00:15:16,600
speaking of anyone here ever work with

00:15:12,460 --> 00:15:18,380
flash any all right okay I feel your

00:15:16,600 --> 00:15:24,060
frustrations

00:15:18,380 --> 00:15:26,430
mmm so in the API the keyframe effect

00:15:24,060 --> 00:15:28,620
tells us what it should look like at

00:15:26,430 --> 00:15:32,370
those key points right it basically

00:15:28,620 --> 00:15:38,279
handles both the keep the key poses the

00:15:32,370 --> 00:15:40,970
keys and the tweens the animation model

00:15:38,279 --> 00:15:43,110
is the one that actually pardon the

00:15:40,970 --> 00:15:44,970
keyframe effect handles the key poses

00:15:43,110 --> 00:15:46,800
you can remember because it says key but

00:15:44,970 --> 00:15:48,899
the animation model it's up to it to

00:15:46,800 --> 00:15:51,029
decide what's going to look like in

00:15:48,899 --> 00:15:55,680
between it's the one that figures out

00:15:51,029 --> 00:15:57,810
those tweens it interpolates those now

00:15:55,680 --> 00:15:59,730
this is from the original alice in

00:15:57,810 --> 00:16:01,589
wonderland this is a CSS transition

00:15:59,730 --> 00:16:04,260
where when you click on the bunny rabbit

00:16:01,589 --> 00:16:06,300
he goes down the hole right and that's

00:16:04,260 --> 00:16:08,670
done like this we've got the transition

00:16:06,300 --> 00:16:10,290
transform takes three seconds and when

00:16:08,670 --> 00:16:12,870
you click on him he gets a class of

00:16:10,290 --> 00:16:15,980
interactive which changed his transform

00:16:12,870 --> 00:16:18,630
to translate why it pops them down

00:16:15,980 --> 00:16:22,290
that's straight forward here's the same

00:16:18,630 --> 00:16:24,449
interaction again without CSS just using

00:16:22,290 --> 00:16:27,420
the web animations API you can't even

00:16:24,449 --> 00:16:30,000
tell the difference amazing right how

00:16:27,420 --> 00:16:31,860
did I do that well the first thing you

00:16:30,000 --> 00:16:34,230
do is you make a new keyframe effect and

00:16:31,860 --> 00:16:36,690
in this case I went out and I got the

00:16:34,230 --> 00:16:39,630
White Rabbit object and here's a

00:16:36,690 --> 00:16:41,930
keyframe object that I'm passing it it's

00:16:39,630 --> 00:16:45,810
an array with two objects holding

00:16:41,930 --> 00:16:48,660
holding key value pairs of styles and

00:16:45,810 --> 00:16:51,300
their properties and then you pass it a

00:16:48,660 --> 00:16:53,880
timing properties object which specifies

00:16:51,300 --> 00:16:56,459
the duration in milliseconds and that

00:16:53,880 --> 00:16:58,620
the film OG forwards because it is

00:16:56,459 --> 00:17:03,120
basically a transition is an animation

00:16:58,620 --> 00:17:06,780
with the film modes for words sweetness

00:17:03,120 --> 00:17:09,959
and we just save that into a variable

00:17:06,780 --> 00:17:11,819
called rabbit down keyframes now here's

00:17:09,959 --> 00:17:14,329
what happens if you don't set that that

00:17:11,819 --> 00:17:14,329
Phil mode

00:17:19,800 --> 00:17:24,180
it just goes right back to the beginning

00:17:21,480 --> 00:17:26,640
Phil modes are handy they dictate how

00:17:24,180 --> 00:17:28,530
the animation should respond when it's

00:17:26,640 --> 00:17:31,530
finished and before it's begun whether

00:17:28,530 --> 00:17:34,910
or not the keyframes should have effect

00:17:31,530 --> 00:17:37,140
before the animation is actually played

00:17:34,910 --> 00:17:39,660
we know a lot of these options from

00:17:37,140 --> 00:17:41,100
their CSS counterparts if this if this

00:17:39,660 --> 00:17:45,150
just made your eyes roll back in your

00:17:41,100 --> 00:17:46,980
head here's a refresher duration is well

00:17:45,150 --> 00:17:49,400
instead of transition or animation

00:17:46,980 --> 00:17:53,580
duration it's now duration delay

00:17:49,400 --> 00:17:55,560
familiar Phil is Phil mode iterations

00:17:53,580 --> 00:17:57,930
it's so much shorter now instead of

00:17:55,560 --> 00:18:00,900
animation iteration count you can just

00:17:57,930 --> 00:18:02,870
call them iterations direction of course

00:18:00,900 --> 00:18:05,340
and my particular favorite instead of

00:18:02,870 --> 00:18:07,680
animation timing function it's it's what

00:18:05,340 --> 00:18:10,980
we all know it is it's easing its easing

00:18:07,680 --> 00:18:13,110
call it what it is this is what happens

00:18:10,980 --> 00:18:16,910
when you don't build things by committee

00:18:13,110 --> 00:18:20,550
you end up with these crazy words so

00:18:16,910 --> 00:18:23,130
these end delay is a new one you haven't

00:18:20,550 --> 00:18:25,290
seen this one before it's milliseconds

00:18:23,130 --> 00:18:27,900
to delay after an animation has ended

00:18:25,290 --> 00:18:32,730
these are more important for sequencing

00:18:27,900 --> 00:18:34,520
for instance I would shoot I had a good

00:18:32,730 --> 00:18:37,530
example but it skipped my mind

00:18:34,520 --> 00:18:39,690
iterations start when the iteration of

00:18:37,530 --> 00:18:42,090
the animation should start of course and

00:18:39,690 --> 00:18:43,410
there's composite iteration composite

00:18:42,090 --> 00:18:44,820
and spacing and we're not even going to

00:18:43,410 --> 00:18:47,390
go there today because these things

00:18:44,820 --> 00:18:50,370
aren't implemented on any browsers yet

00:18:47,390 --> 00:18:52,470
so let's take take a moment to play that

00:18:50,370 --> 00:18:53,850
animation we we can do that with the

00:18:52,470 --> 00:18:56,190
animation object we have a keyframe

00:18:53,850 --> 00:18:57,960
object now we've got to get it into an

00:18:56,190 --> 00:18:59,760
animation object we're going to take

00:18:57,960 --> 00:19:02,220
this keyframe and we're going to

00:18:59,760 --> 00:19:04,620
put it into the DVD player I mean the

00:19:02,220 --> 00:19:07,470
animation object so how are we going to

00:19:04,620 --> 00:19:09,870
do that take rabbit down keyframes we're

00:19:07,470 --> 00:19:13,290
going to make a new animation we pass it

00:19:09,870 --> 00:19:14,850
the keyframes object and we also pass it

00:19:13,290 --> 00:19:17,340
a timeline we're going to pass it the

00:19:14,850 --> 00:19:18,900
document timeline right now the reason

00:19:17,340 --> 00:19:21,000
for this is that there's only one kind

00:19:18,900 --> 00:19:23,670
of timeline right now it's your

00:19:21,000 --> 00:19:25,320
documents timeline the API is written in

00:19:23,670 --> 00:19:27,270
such a way that it allows for other

00:19:25,320 --> 00:19:29,640
timelines to be created in the future

00:19:27,270 --> 00:19:31,690
for instance imagine a timeline based on

00:19:29,640 --> 00:19:33,070
your scrolling position

00:19:31,690 --> 00:19:35,889
is one that people are really excited

00:19:33,070 --> 00:19:37,389
about for parallax effects the API is

00:19:35,889 --> 00:19:39,639
really beautifully written in that it

00:19:37,389 --> 00:19:41,769
needs a lot of room open for future

00:19:39,639 --> 00:19:44,740
iterations of the web animations API to

00:19:41,769 --> 00:19:46,629
kind of blow things open so maybe future

00:19:44,740 --> 00:19:48,899
timelines will be open-ended they don't

00:19:46,629 --> 00:19:53,409
have to have a set ending we'll find out

00:19:48,899 --> 00:19:55,389
so then we of course put it inside a

00:19:53,409 --> 00:19:59,500
variable called the rabbit down and

00:19:55,389 --> 00:20:01,210
animation now we can do some things with

00:19:59,500 --> 00:20:03,909
these animation objects we can pause

00:20:01,210 --> 00:20:06,850
them we can play them we can reverse

00:20:03,909 --> 00:20:08,500
them we can finish them if we just want

00:20:06,850 --> 00:20:12,220
to skip right to the end and here's one

00:20:08,500 --> 00:20:14,470
that's super exciting cancel cancel is

00:20:12,220 --> 00:20:16,570
not something we have access to with CSS

00:20:14,470 --> 00:20:18,879
animation right now but you could use

00:20:16,570 --> 00:20:20,769
this for instance if you're halfway like

00:20:18,879 --> 00:20:23,110
halfway to completing an animation but

00:20:20,769 --> 00:20:25,000
up users said they didn't want to do

00:20:23,110 --> 00:20:27,100
that action it's a little bit different

00:20:25,000 --> 00:20:31,120
from finish because canceling would be

00:20:27,100 --> 00:20:32,950
an interruption all right so we're going

00:20:31,120 --> 00:20:35,379
to play it we take the rabbit down

00:20:32,950 --> 00:20:37,090
animation and we just call its method of

00:20:35,379 --> 00:20:40,090
play on it we're going to put that

00:20:37,090 --> 00:20:42,039
inside the function down he goes and

00:20:40,090 --> 00:20:44,799
we're going to add an event listener to

00:20:42,039 --> 00:20:46,870
that click on the rabbit and we're going

00:20:44,799 --> 00:20:49,769
to play the down he goes function

00:20:46,870 --> 00:20:51,909
whenever it's clicked and of course

00:20:49,769 --> 00:20:52,899
after he's clicked we remove that event

00:20:51,909 --> 00:21:01,419
listener because we don't need it

00:20:52,899 --> 00:21:02,950
anymore whoo it worked wow that was a

00:21:01,419 --> 00:21:05,830
lot of freaking work for two lines of

00:21:02,950 --> 00:21:08,710
CSS but now you can appreciate how your

00:21:05,830 --> 00:21:10,809
browser does it how all browsers will be

00:21:08,710 --> 00:21:13,269
doing it in the future but there there

00:21:10,809 --> 00:21:14,830
is some good news we do have a shortcut

00:21:13,269 --> 00:21:16,600
I'm sure you did not come here today for

00:21:14,830 --> 00:21:19,659
me to show you how to write really long

00:21:16,600 --> 00:21:22,059
examples of CSS animations so i'm going

00:21:19,659 --> 00:21:23,710
to show you the fun short way we have

00:21:22,059 --> 00:21:26,049
this thing called the animate method

00:21:23,710 --> 00:21:28,360
which we can call on any animatable

00:21:26,049 --> 00:21:29,889
object on the page don't don't try to

00:21:28,360 --> 00:21:32,500
call it on a head element that's not

00:21:29,889 --> 00:21:34,570
going to work but if it's an element

00:21:32,500 --> 00:21:38,409
that can be animated you can call

00:21:34,570 --> 00:21:41,139
animate on it so if you're a CSS

00:21:38,409 --> 00:21:43,600
animations won't like I am you may have

00:21:41,139 --> 00:21:44,490
noticed that the web animations API

00:21:43,600 --> 00:21:47,400
handled this

00:21:44,490 --> 00:21:50,880
transition more like this kind of

00:21:47,400 --> 00:21:54,210
animation that gives you an idea of how

00:21:50,880 --> 00:21:55,890
flexible the API is when I was first

00:21:54,210 --> 00:21:58,740
learning how to do CSS animations

00:21:55,890 --> 00:22:01,290
sometimes I did transitions like this in

00:21:58,740 --> 00:22:03,120
certain cases and it's good to know that

00:22:01,290 --> 00:22:05,429
the web animations API can handle both

00:22:03,120 --> 00:22:09,450
so let's try doing an animation next

00:22:05,429 --> 00:22:11,670
using the shortcut method so here we

00:22:09,450 --> 00:22:13,080
have two CSS animations happening on

00:22:11,670 --> 00:22:14,940
Alice we have another animation

00:22:13,080 --> 00:22:16,860
happening on the background but ignore

00:22:14,940 --> 00:22:22,620
that we're most concerned with alice

00:22:16,860 --> 00:22:25,290
alice is rotating all right okay cool I

00:22:22,620 --> 00:22:27,600
get it you don't want to show with me so

00:22:25,290 --> 00:22:30,630
alice is rotating but she's also

00:22:27,600 --> 00:22:33,450
slightly fading changing her color so

00:22:30,630 --> 00:22:38,309
she's rotating but she's also changed in

00:22:33,450 --> 00:22:41,010
color this is what that CSS looks like

00:22:38,309 --> 00:22:43,260
got Alice up here she's using the

00:22:41,010 --> 00:22:45,120
animation Alice tumbling it's running

00:22:43,260 --> 00:22:48,120
infinitely it takes three seconds for

00:22:45,120 --> 00:22:51,030
each loop it's got a linear easing

00:22:48,120 --> 00:22:54,210
function the keyframes specify at zero

00:22:51,030 --> 00:22:56,760
percent her color is black and she has

00:22:54,210 --> 00:22:59,309
no rotation at thirty percent her color

00:22:56,760 --> 00:23:01,410
transforms to a kind of a burgundy and

00:22:59,309 --> 00:23:04,230
then at one hundred percent it goes back

00:23:01,410 --> 00:23:08,010
to black and her transform completes to

00:23:04,230 --> 00:23:11,130
a 360 degree rotation just keep in mind

00:23:08,010 --> 00:23:12,570
that thirty percent is important this is

00:23:11,130 --> 00:23:15,720
how that shortcut I was talking about

00:23:12,570 --> 00:23:17,309
looks you get the element call animate

00:23:15,720 --> 00:23:21,630
on it you pass it keyframes and you pass

00:23:17,309 --> 00:23:24,420
it timing options very familiar so this

00:23:21,630 --> 00:23:29,130
is the keyframe object we could we could

00:23:24,420 --> 00:23:31,950
pass it note that there's this offset

00:23:29,130 --> 00:23:33,800
here so at zero percent this key we've

00:23:31,950 --> 00:23:38,460
got the rotate zero of the color of

00:23:33,800 --> 00:23:40,800
black butt down here on on the second

00:23:38,460 --> 00:23:43,530
one we have to specify this offset of 0

00:23:40,800 --> 00:23:46,650
point three the fun thing is if I didn't

00:23:43,530 --> 00:23:48,720
if I didn't specify point three the web

00:23:46,650 --> 00:23:51,150
animations API is so clever that it

00:23:48,720 --> 00:23:53,190
would just take these keys and split

00:23:51,150 --> 00:23:54,990
them up to happen at equidistant points

00:23:53,190 --> 00:23:56,610
on the timeline so her color we changed

00:23:54,990 --> 00:23:58,380
at fifty percent don't like fifty

00:23:56,610 --> 00:24:00,270
percent specify you want

00:23:58,380 --> 00:24:04,380
happen at pool you know thirty percent

00:24:00,270 --> 00:24:07,710
point three it can take a what is it 1 /

00:24:04,380 --> 00:24:10,230
3 2 it can take math it's JavaScript its

00:24:07,710 --> 00:24:12,230
ass is a lot of fun because you can get

00:24:10,230 --> 00:24:15,570
into some dynamic timing things there

00:24:12,230 --> 00:24:18,360
now for the timing object I made this

00:24:15,570 --> 00:24:20,730
Alice timing variable and you'll notice

00:24:18,360 --> 00:24:23,610
that I have specified the duration in

00:24:20,730 --> 00:24:25,080
milliseconds unlike CSS it does not take

00:24:23,610 --> 00:24:27,420
seconds value like the rest of

00:24:25,080 --> 00:24:29,250
JavaScript everything is milliseconds if

00:24:27,420 --> 00:24:31,620
you're not using milliseconds in your

00:24:29,250 --> 00:24:34,830
CSS you may want to start using them as

00:24:31,620 --> 00:24:37,410
it will make parsing into web animations

00:24:34,830 --> 00:24:39,300
API in the future a little bit easier if

00:24:37,410 --> 00:24:41,400
you think you might be using it for

00:24:39,300 --> 00:24:43,470
iterations we use the JavaScript keyword

00:24:41,400 --> 00:24:45,000
infinity for a while I kept trying to

00:24:43,470 --> 00:24:46,680
write infinite with quotes it wasn't

00:24:45,000 --> 00:24:51,150
working then I remembered oh yeah that's

00:24:46,680 --> 00:24:53,970
a keyword just use a capital I all right

00:24:51,150 --> 00:24:56,820
so let's put them together we take

00:24:53,970 --> 00:24:58,280
element animate and we turned it into we

00:24:56,820 --> 00:25:00,900
get we go out we get Alice

00:24:58,280 --> 00:25:03,390
document.getelementbyid e Alice animate

00:25:00,900 --> 00:25:06,480
we pass it the Alice tumbling keyframes

00:25:03,390 --> 00:25:09,360
and the Alice timing timing properties

00:25:06,480 --> 00:25:11,790
object and boom look at that it's

00:25:09,360 --> 00:25:15,270
exactly the same as the CSS version

00:25:11,790 --> 00:25:19,140
exactly the same pretty cool we can do

00:25:15,270 --> 00:25:21,420
better timelines and callbacks surely

00:25:19,140 --> 00:25:24,290
you didn't come here to just see how to

00:25:21,420 --> 00:25:27,270
do really long ways to do CSS animations

00:25:24,290 --> 00:25:29,040
that's right animation the web

00:25:27,270 --> 00:25:31,290
animations API does give us some pretty

00:25:29,040 --> 00:25:35,370
cool new attributes and things that we

00:25:31,290 --> 00:25:37,440
can do with them for instance we've got

00:25:35,370 --> 00:25:40,080
unfinish which is a promise if you love

00:25:37,440 --> 00:25:42,390
promises got on cancel if you also love

00:25:40,080 --> 00:25:43,980
if you love promises and you want them

00:25:42,390 --> 00:25:45,960
to run when the animation is canceled

00:25:43,980 --> 00:25:48,150
there's the ready promise which tells

00:25:45,960 --> 00:25:50,460
when your animation is ready to start

00:25:48,150 --> 00:25:52,830
running and there's play state which

00:25:50,460 --> 00:25:54,330
lets you know it's read-only you use

00:25:52,830 --> 00:25:56,790
methods to call it it'll tell you

00:25:54,330 --> 00:26:00,570
whether your animation is paused running

00:25:56,790 --> 00:26:02,970
or reversing playback rate we'll talk

00:26:00,570 --> 00:26:05,040
more about that later and there's effect

00:26:02,970 --> 00:26:07,260
effect is handy because it points right

00:26:05,040 --> 00:26:10,790
back to the keyframe effect if you ever

00:26:07,260 --> 00:26:10,790
need to access it in the future

00:26:11,360 --> 00:26:15,300
one day we might have different kinds of

00:26:13,860 --> 00:26:17,070
effects we might have groups and

00:26:15,300 --> 00:26:20,010
sequences so it's important to remember

00:26:17,070 --> 00:26:22,410
this there are a couple of other cool

00:26:20,010 --> 00:26:24,150
cool attributes like current time which

00:26:22,410 --> 00:26:26,370
shows you your location on a timeline

00:26:24,150 --> 00:26:30,120
and finished which is a call back and

00:26:26,370 --> 00:26:31,950
we're going to use those so there's a

00:26:30,120 --> 00:26:33,150
famous scene where alice is drinking and

00:26:31,950 --> 00:26:36,180
eating and she's growing bigger and

00:26:33,150 --> 00:26:38,700
smaller and I wanted to recreate that

00:26:36,180 --> 00:26:42,720
with this particular experiment I wanted

00:26:38,700 --> 00:26:45,030
to show Alice eating cake and getting

00:26:42,720 --> 00:26:47,460
bigger or drinking a little glass of

00:26:45,030 --> 00:26:49,170
water and getting smaller and I thought

00:26:47,460 --> 00:26:50,790
surely this is a job for the web

00:26:49,170 --> 00:26:55,980
animations API let's make a game with

00:26:50,790 --> 00:26:57,870
that and this is what I had in mind so

00:26:55,980 --> 00:27:00,480
basically you go over here and you're

00:26:57,870 --> 00:27:02,850
toting down your mouse over the cake and

00:27:00,480 --> 00:27:05,420
she gets bigger and when you hold down

00:27:02,850 --> 00:27:11,280
the mouse over the soda she gets smaller

00:27:05,420 --> 00:27:12,930
that's a lot of fun so how this is

00:27:11,280 --> 00:27:16,260
housed how does this happening Alice

00:27:12,930 --> 00:27:19,380
isn't on particular she is on a time

00:27:16,260 --> 00:27:21,900
line going from big to small she starts

00:27:19,380 --> 00:27:23,520
her the beginning of her animation is

00:27:21,900 --> 00:27:26,700
really small and the end is really big

00:27:23,520 --> 00:27:29,460
these are the two key poses that are in

00:27:26,700 --> 00:27:33,810
for keyframe effect now clicking or

00:27:29,460 --> 00:27:36,600
tapping on the different these two

00:27:33,810 --> 00:27:39,180
things plays her forward or backwards so

00:27:36,600 --> 00:27:40,890
they're actually kind of like fast

00:27:39,180 --> 00:27:47,820
forward and rewind buttons for the

00:27:40,890 --> 00:27:49,950
animation so first things first we go we

00:27:47,820 --> 00:27:52,650
make an Alice change variable we get

00:27:49,950 --> 00:27:54,990
Alice we slap her key frames and her

00:27:52,650 --> 00:27:57,330
timing objects on there and then we hit

00:27:54,990 --> 00:28:00,650
pause because when you use the animate

00:27:57,330 --> 00:28:00,650
method it'll try to run immediately

00:28:05,000 --> 00:28:09,899
so this is what happens when you do that

00:28:07,769 --> 00:28:11,370
and you don't hit pause notice how she

00:28:09,899 --> 00:28:13,110
went from really small to really big

00:28:11,370 --> 00:28:15,090
we're going to just go ahead and put

00:28:13,110 --> 00:28:16,950
pause on there and I'm officially at

00:28:15,090 --> 00:28:20,130
time I apologize but I'm going to be

00:28:16,950 --> 00:28:24,809
running a little bit over it's cool

00:28:20,130 --> 00:28:27,029
you'll you'll be happy anyway alright so

00:28:24,809 --> 00:28:28,500
let's set the let's set that duration we

00:28:27,029 --> 00:28:30,120
want to make sure that she starts in the

00:28:28,500 --> 00:28:31,890
middle because that looks weird seeing

00:28:30,120 --> 00:28:33,600
her explode like that we want to make

00:28:31,890 --> 00:28:36,600
sure that when we start playing the game

00:28:33,600 --> 00:28:39,889
she is about halfway between those two

00:28:36,600 --> 00:28:43,590
so we do that by grabbing her duration

00:28:39,889 --> 00:28:47,039
we say Ellis we say Ellis change we want

00:28:43,590 --> 00:28:49,440
to set your current time to using her

00:28:47,039 --> 00:28:52,380
effect which points back to her keyframe

00:28:49,440 --> 00:28:55,019
effect we inspect her timing object and

00:28:52,380 --> 00:28:57,750
we grab her duration and then we divide

00:28:55,019 --> 00:29:01,669
it by two so we're setting her playhead

00:28:57,750 --> 00:29:01,669
her current time to be halfway through

00:29:02,090 --> 00:29:08,130
now we're going to tie it back to those

00:29:04,380 --> 00:29:11,299
playback controls so we've got the

00:29:08,130 --> 00:29:15,179
timeline and we want to set the playhead

00:29:11,299 --> 00:29:17,010
right there now we need to control the

00:29:15,179 --> 00:29:20,399
playhead on that timeline sending it

00:29:17,010 --> 00:29:21,750
forward and backward we use the cake and

00:29:20,399 --> 00:29:25,500
bottle to send it forward and backward

00:29:21,750 --> 00:29:27,559
and we're going to see how we do that we

00:29:25,500 --> 00:29:29,880
know forwards so let's start with back

00:29:27,559 --> 00:29:32,340
we're going to create a shrink Alice

00:29:29,880 --> 00:29:34,289
function and we're going to set her

00:29:32,340 --> 00:29:35,880
playback rate to negative one fun thing

00:29:34,289 --> 00:29:37,470
about playback raids if you pass

00:29:35,880 --> 00:29:40,440
negative values to them they run

00:29:37,470 --> 00:29:42,169
backwards so you could do a negative 2

00:29:40,440 --> 00:29:47,490
and she'd run backwards twice as fast

00:29:42,169 --> 00:29:50,909
fun and what happens is we're going to

00:29:47,490 --> 00:29:54,059
hit play and then we're going to also

00:29:50,909 --> 00:29:57,029
play the animation on the on the bottle

00:29:54,059 --> 00:30:01,799
as well and we attach that to an event

00:29:57,029 --> 00:30:04,200
listener for four onmousedown we could

00:30:01,799 --> 00:30:05,789
also use the reverse method just to

00:30:04,200 --> 00:30:07,529
point this out the reverse method is

00:30:05,789 --> 00:30:09,929
essentially a shortcut for setting the

00:30:07,529 --> 00:30:15,410
playback rate to negative 1 and hitting

00:30:09,929 --> 00:30:19,040
play all right let's see how that looks

00:30:15,410 --> 00:30:24,500
oh it works perfectly now she gets

00:30:19,040 --> 00:30:26,150
smaller wonderful so we do the same for

00:30:24,500 --> 00:30:27,620
the cake the only difference is with the

00:30:26,150 --> 00:30:31,340
cake we make sure to set the playback

00:30:27,620 --> 00:30:34,970
rate to one we need a new way to stop

00:30:31,340 --> 00:30:37,490
the animations now right so we create a

00:30:34,970 --> 00:30:41,030
stop playing Alice function we make sure

00:30:37,490 --> 00:30:42,950
to create we make little pauses for each

00:30:41,030 --> 00:30:44,540
of the animations not just for Alice but

00:30:42,950 --> 00:30:45,860
also for the cake in the drinking so

00:30:44,540 --> 00:30:49,640
that the animations don't just keep

00:30:45,860 --> 00:30:51,290
running long after you've stopped stop

00:30:49,640 --> 00:30:53,120
clicking or tapping on the controls and

00:30:51,290 --> 00:30:59,690
of course you attach them both to the

00:30:53,120 --> 00:31:01,310
event listeners for Mouse up now we've

00:30:59,690 --> 00:31:02,870
got these animations that go forward and

00:31:01,310 --> 00:31:04,520
backwards but all good games have to

00:31:02,870 --> 00:31:08,030
have endings there have to be outcomes

00:31:04,520 --> 00:31:09,590
concrete outcomes right in a story Alice

00:31:08,030 --> 00:31:11,750
wants to get through this tiny door so

00:31:09,590 --> 00:31:14,810
that she can follow the white rabbit so

00:31:11,750 --> 00:31:16,250
she eats a cake and she it's huge but

00:31:14,810 --> 00:31:18,050
she's too big to go through the door so

00:31:16,250 --> 00:31:19,610
she throws a tantrum and she cries and

00:31:18,050 --> 00:31:21,320
there's this lake and their animals

00:31:19,610 --> 00:31:22,940
stuck in it and it's really surreal but

00:31:21,320 --> 00:31:26,000
the point is she cries a lot and she

00:31:22,940 --> 00:31:27,560
gets really big so then she manages to

00:31:26,000 --> 00:31:29,690
drink from the bottle to get small and

00:31:27,560 --> 00:31:31,730
ends up swimming around in a puddle of

00:31:29,690 --> 00:31:34,180
her own tears but the problem is that

00:31:31,730 --> 00:31:36,680
she is so small that she forgot the key

00:31:34,180 --> 00:31:38,540
she forgets the key off on the table and

00:31:36,680 --> 00:31:40,820
she still can't get through the door

00:31:38,540 --> 00:31:42,350
it's a tough life for Alice so I made

00:31:40,820 --> 00:31:44,900
little vignettes of each of these scenes

00:31:42,350 --> 00:31:46,850
me if she is too small by the time you

00:31:44,900 --> 00:31:48,620
run out of animations by the time you

00:31:46,850 --> 00:31:51,560
run out of either things to drink her

00:31:48,620 --> 00:31:54,050
things to eat if she's too small you get

00:31:51,560 --> 00:31:56,720
the two small ending if she's too big

00:31:54,050 --> 00:31:58,310
you get the two big ending notice how

00:31:56,720 --> 00:32:01,400
the pool of Tears is slowly growing

00:31:58,310 --> 00:32:04,700
larger eventually it will engulf the

00:32:01,400 --> 00:32:06,410
whole page so how do we tie that to our

00:32:04,700 --> 00:32:08,120
controls well a good thing we're working

00:32:06,410 --> 00:32:10,820
with timelines because now we've got two

00:32:08,120 --> 00:32:13,340
timelines for both the animations on the

00:32:10,820 --> 00:32:17,090
cupcake and the animation on the glass

00:32:13,340 --> 00:32:19,010
of water so what we have to do is we

00:32:17,090 --> 00:32:24,850
need to listen to when those animations

00:32:19,010 --> 00:32:26,540
finish when either of these run out

00:32:24,850 --> 00:32:28,190
we're going to get one of those

00:32:26,540 --> 00:32:28,999
vignettes based on how big or how small

00:32:28,190 --> 00:32:30,979
she is

00:32:28,999 --> 00:32:35,899
that is to say how far along in her

00:32:30,979 --> 00:32:40,939
animation she is too big let's play

00:32:35,899 --> 00:32:42,259
again oh no it's going out like a candle

00:32:40,939 --> 00:32:44,329
and of course you can make her grow a

00:32:42,259 --> 00:32:47,539
little bits bigger or smaller this is

00:32:44,329 --> 00:32:50,179
basically at the very end function will

00:32:47,539 --> 00:32:53,439
fire to compare her current animations

00:32:50,179 --> 00:32:56,539
playhead with her overall timeline

00:32:53,439 --> 00:32:58,969
here's how we do that we need to set the

00:32:56,539 --> 00:33:02,329
animations on finished call back we

00:32:58,969 --> 00:33:04,309
basically say when the cake or the or

00:33:02,329 --> 00:33:07,669
the water runs out we're going to run

00:33:04,309 --> 00:33:10,189
end game or if Alice reaches the end of

00:33:07,669 --> 00:33:13,909
her animation will also run end game for

00:33:10,189 --> 00:33:15,439
some reason you manage to do that so

00:33:13,909 --> 00:33:17,719
with end game we figure out her height

00:33:15,439 --> 00:33:19,639
we're going to do that by taking her

00:33:17,719 --> 00:33:22,669
playhead we find Alice's playhead by

00:33:19,639 --> 00:33:25,249
asking what her current time is and then

00:33:22,669 --> 00:33:28,339
we find out her timeline which is how

00:33:25,249 --> 00:33:30,709
long her active duration lasts and we

00:33:28,339 --> 00:33:33,139
divide them we divide her playhead by

00:33:30,709 --> 00:33:35,649
the and the timeline figure out what

00:33:33,139 --> 00:33:38,239
percentage of her animation is finished

00:33:35,649 --> 00:33:41,269
we use an if-else statement to compare

00:33:38,239 --> 00:33:43,249
how big she is if she is greater than

00:33:41,269 --> 00:33:45,919
point if she's greater than thirty three

00:33:43,249 --> 00:33:47,209
percent of her way through sorry less

00:33:45,919 --> 00:33:49,429
than thirty three percent of the way

00:33:47,209 --> 00:33:50,839
through she got smaller if she's bigger

00:33:49,429 --> 00:33:52,579
than sixty seven percent of her way

00:33:50,839 --> 00:33:54,349
through she got bigger anything in

00:33:52,579 --> 00:34:00,349
between those values you just get a kind

00:33:54,349 --> 00:34:03,409
of play again screen so we make sure

00:34:00,349 --> 00:34:05,299
that we stop alamy her animation after

00:34:03,409 --> 00:34:10,129
the end of the game and we combine all

00:34:05,299 --> 00:34:11,690
of this since that endgame function so

00:34:10,129 --> 00:34:13,159
small bonus other things that are really

00:34:11,690 --> 00:34:15,470
hard to do with CSS animation

00:34:13,159 --> 00:34:17,720
randomization and I know you can

00:34:15,470 --> 00:34:20,149
randomize with with sass but what if you

00:34:17,720 --> 00:34:22,460
want to randomize for each new user on

00:34:20,149 --> 00:34:24,950
your site you don't want to run sass

00:34:22,460 --> 00:34:28,819
every time someone visits so these tears

00:34:24,950 --> 00:34:31,789
are completely randomized I did that by

00:34:28,819 --> 00:34:34,970
taking this randomization function and

00:34:31,789 --> 00:34:36,710
then passing it to her delay and her

00:34:34,970 --> 00:34:38,750
duration to make sure that they would

00:34:36,710 --> 00:34:42,049
fall within a special range it looks

00:34:38,750 --> 00:34:42,860
really good and now here's another thing

00:34:42,049 --> 00:34:44,390
you can only do

00:34:42,860 --> 00:34:46,160
with the web animations API you can

00:34:44,390 --> 00:34:48,020
adjust playback rate i'm super excited

00:34:46,160 --> 00:34:50,000
about this because there are no CSS

00:34:48,020 --> 00:34:52,370
variables or randomization spec that can

00:34:50,000 --> 00:34:53,540
compare to this there's another great

00:34:52,370 --> 00:34:56,660
scene from through the looking glass

00:34:53,540 --> 00:34:59,450
when the stock stock people love this

00:34:56,660 --> 00:35:01,940
she meets the red queen and in looking

00:34:59,450 --> 00:35:03,560
glass land you have to run just to stay

00:35:01,940 --> 00:35:06,320
in place and you have to run twice as

00:35:03,560 --> 00:35:10,490
forward to move forward so what does

00:35:06,320 --> 00:35:12,200
that look like in CSS well what does it

00:35:10,490 --> 00:35:14,690
look like with the web animations API I

00:35:12,200 --> 00:35:16,280
decided that Alice tires easily so

00:35:14,690 --> 00:35:18,200
she'll slow down with time you'll notice

00:35:16,280 --> 00:35:21,380
that she's running a little bit slower

00:35:18,200 --> 00:35:23,630
there's a decay on there run cycle and

00:35:21,380 --> 00:35:25,400
it's all down to that playback property

00:35:23,630 --> 00:35:28,040
in the timing option the playback rate

00:35:25,400 --> 00:35:31,270
property we've got the red queen we've

00:35:28,040 --> 00:35:34,790
got there sprite animation but in here

00:35:31,270 --> 00:35:37,370
we set the playback rate to one and

00:35:34,790 --> 00:35:39,440
we're going to use a set interval every

00:35:37,370 --> 00:35:42,020
three seconds we multiply that playback

00:35:39,440 --> 00:35:45,500
rate by point nine so it's getting slow

00:35:42,020 --> 00:35:47,330
we also cap it at so it never falls

00:35:45,500 --> 00:35:50,120
below point for it gets really weird

00:35:47,330 --> 00:35:53,660
trying to boost her out of that to speed

00:35:50,120 --> 00:35:55,820
her up we use the same trick only we

00:35:53,660 --> 00:35:58,940
register it clicking or tapping anywhere

00:35:55,820 --> 00:36:00,800
and we multiply the playback rate by 1.1

00:35:58,940 --> 00:36:03,320
so whenever you click or tap anywhere on

00:36:00,800 --> 00:36:06,130
the page she goes faster and here are

00:36:03,320 --> 00:36:10,010
our touch event listener as well and

00:36:06,130 --> 00:36:11,750
this is what it looks like so watch what

00:36:10,010 --> 00:36:14,840
happens we're going to tap tap tap tap

00:36:11,750 --> 00:36:17,210
tap make her run faster well she's

00:36:14,840 --> 00:36:18,770
slowing down because we're not there you

00:36:17,210 --> 00:36:20,420
notice that the world starts sliding

00:36:18,770 --> 00:36:22,190
backwards if she goes too slowly i'm

00:36:20,420 --> 00:36:25,580
using playback rates on the other

00:36:22,190 --> 00:36:27,620
objects too and if we tap really fast

00:36:25,580 --> 00:36:32,530
come on you can do it you can do it you

00:36:27,620 --> 00:36:35,860
can run ah poor little girl there we go

00:36:32,530 --> 00:36:38,660
now they're finally getting somewhere

00:36:35,860 --> 00:36:39,890
okay so the good news is that you can

00:36:38,660 --> 00:36:42,170
start learning and using the web

00:36:39,890 --> 00:36:43,730
animations API today in fact I recommend

00:36:42,170 --> 00:36:46,330
you do so because these features are

00:36:43,730 --> 00:36:49,190
starting to ship in Firefox and Chrome

00:36:46,330 --> 00:36:51,590
there is a polyfill which all these

00:36:49,190 --> 00:36:54,740
demos used it it does have a bug tracker

00:36:51,590 --> 00:36:56,210
on github you are encouraged file bugs

00:36:54,740 --> 00:36:58,580
it is maintained by people

00:36:56,210 --> 00:37:01,520
from chrome and of course with input

00:36:58,580 --> 00:37:03,830
from firefox it's wonderful it's pretty

00:37:01,520 --> 00:37:06,290
performant and it does let you use these

00:37:03,830 --> 00:37:08,240
things today even for browsers that are

00:37:06,290 --> 00:37:10,700
being a little slower about implementing

00:37:08,240 --> 00:37:14,180
it Edge has moved the API into their

00:37:10,700 --> 00:37:18,650
to-do list and Safari has as well after

00:37:14,180 --> 00:37:20,690
much feet dragging Thank You cannon okay

00:37:18,650 --> 00:37:22,670
so the fun thing is that animation

00:37:20,690 --> 00:37:25,339
libraries that you're using today gsm

00:37:22,670 --> 00:37:27,800
ojs snap SVG they could build on top of

00:37:25,339 --> 00:37:29,420
the web animations api to realize some

00:37:27,800 --> 00:37:31,040
of these performance boosts that the api

00:37:29,420 --> 00:37:32,780
provides by working directly with the

00:37:31,040 --> 00:37:34,990
browser's animation engine there's no

00:37:32,780 --> 00:37:38,510
need for raf requestanimationframe

00:37:34,990 --> 00:37:40,339
there's no need for hacks for speed the

00:37:38,510 --> 00:37:42,710
idea is that browsers can optimize the

00:37:40,339 --> 00:37:44,690
animations in their engines and then you

00:37:42,710 --> 00:37:46,520
can gain the benefits of those

00:37:44,690 --> 00:37:49,430
optimizations by working directly with

00:37:46,520 --> 00:37:51,800
the engine it also gives us a format to

00:37:49,430 --> 00:37:54,500
export to for other tools to interface

00:37:51,800 --> 00:37:57,650
with in the future as well and of course

00:37:54,500 --> 00:38:00,349
more implementations means even better

00:37:57,650 --> 00:38:02,599
tools this is Chrome's timelines which I

00:38:00,349 --> 00:38:04,339
wanted to show how chrome has been using

00:38:02,599 --> 00:38:06,500
this API to build their own animation

00:38:04,339 --> 00:38:08,480
tools as well I would love to see more

00:38:06,500 --> 00:38:10,849
browsers competing to make these things

00:38:08,480 --> 00:38:12,560
keep an eye out for web animations API

00:38:10,849 --> 00:38:14,690
level two which introduces grouping and

00:38:12,560 --> 00:38:17,150
sequencing which will change everything

00:38:14,690 --> 00:38:19,430
dan wilson creek wrote a great post

00:38:17,150 --> 00:38:21,260
about it which the link is on the side

00:38:19,430 --> 00:38:23,540
there you should check it out but it's

00:38:21,260 --> 00:38:26,780
still a little ways off in the end all

00:38:23,540 --> 00:38:29,210
animation is all animation is is time

00:38:26,780 --> 00:38:33,589
and change and that's what this API

00:38:29,210 --> 00:38:37,310
describes in doing so it makes way for

00:38:33,589 --> 00:38:39,859
future animation specs ones we haven't

00:38:37,310 --> 00:38:43,099
even thought of yet and the future of

00:38:39,859 --> 00:38:44,990
animation online before i head out i

00:38:43,099 --> 00:38:47,810
would like to thank some people who

00:38:44,990 --> 00:38:49,609
helped me do this alex miller is a local

00:38:47,810 --> 00:38:51,109
cartoonist in portland oregon who helped

00:38:49,609 --> 00:38:53,630
me do the backgrounds for these when i

00:38:51,109 --> 00:38:56,990
was very sick with pneumonia opalescence

00:38:53,630 --> 00:38:58,730
did the logo chris mills was my sort of

00:38:56,990 --> 00:39:00,859
mentor when writing the mdn

00:38:58,730 --> 00:39:02,810
documentation and the n is your number

00:39:00,859 --> 00:39:05,270
one source for all web animation api

00:39:02,810 --> 00:39:07,070
docs i highly recommend it and brian

00:39:05,270 --> 00:39:09,200
Birtles who wrote most of the spec and

00:39:07,070 --> 00:39:09,740
has answered all of my questions he's a

00:39:09,200 --> 00:39:11,150
great /

00:39:09,740 --> 00:39:14,270
Santa hassle when you have questions

00:39:11,150 --> 00:39:15,920
about the API so where can you learn

00:39:14,270 --> 00:39:17,840
more about this well you can find this

00:39:15,920 --> 00:39:21,830
into all links about it at rachel

00:39:17,840 --> 00:39:24,350
neighbors calm /w AAP I web animations

00:39:21,830 --> 00:39:26,420
API you can subscribe to the newsletter

00:39:24,350 --> 00:39:27,830
web animation weekly calm as new things

00:39:26,420 --> 00:39:30,500
happen it gets announced there and

00:39:27,830 --> 00:39:32,390
lastly if you want to talk about the web

00:39:30,500 --> 00:39:35,180
animations API we've got our own hashtag

00:39:32,390 --> 00:39:38,060
on the animation at work slack channel

00:39:35,180 --> 00:39:39,830
you can even talk to Brian bertles and

00:39:38,060 --> 00:39:42,580
other people working directly with the

00:39:39,830 --> 00:39:45,140
API there it's a good bunch of people

00:39:42,580 --> 00:39:46,490
thank you for having us thank you for

00:39:45,140 --> 00:39:47,550
letting me talk to you about the API

00:39:46,490 --> 00:39:54,119
today

00:39:47,550 --> 00:39:54,119

YouTube URL: https://www.youtube.com/watch?v=q6F-2t4mv6U


