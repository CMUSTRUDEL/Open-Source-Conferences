Title: Vue.js, 1 Year With Vue.js - Lessons Learned, February 2018
Publication date: 2018-02-24
Playlist: Vue.js Vienna
Description: 
	By Manfred Wuits. Best practices and lessons learned in one year and 4 vue-projects later.
"Gists" covered in this rollercoaster-ride:
- vuex: localstate / vuex-persistedstate / passing server-state
- form validation: vee-validate vs vuelidate

- icons: vue-svgicons vs fontawesome5
- bundle sizes: vue lazy-loading w/o router & webpack bundle size-previews

- components: vue-strap vs buefy-components

- content: server-side (laravel) vs headless-cms (storyblok)
Captions: 
	00:00:00,030 --> 00:00:03,149
hello and welcome to this view chess

00:00:02,490 --> 00:00:06,330
Meetup

00:00:03,149 --> 00:00:07,140
I'm giving this kind of talk roughly

00:00:06,330 --> 00:00:10,260
every two years

00:00:07,140 --> 00:00:12,120
I gave one about angular about react two

00:00:10,260 --> 00:00:15,570
years ago and now it's view because I'm

00:00:12,120 --> 00:00:18,300
always like you maybe also of doing just

00:00:15,570 --> 00:00:20,520
kind of jumping the framework bandwagon

00:00:18,300 --> 00:00:23,730
in the JavaScript world and it's always

00:00:20,520 --> 00:00:28,170
an easy talk to give in the beginning

00:00:23,730 --> 00:00:31,050
when you just found out how you find

00:00:28,170 --> 00:00:33,510
your way with the with the new toy you

00:00:31,050 --> 00:00:36,570
got then it's just kind of a top which

00:00:33,510 --> 00:00:38,790
just will showcase some of the things I

00:00:36,570 --> 00:00:40,829
found some of them are maybe just simple

00:00:38,790 --> 00:00:44,940
you might already know them but it's

00:00:40,829 --> 00:00:48,180
just thing about talking about some

00:00:44,940 --> 00:00:52,440
small things I learned during doing

00:00:48,180 --> 00:00:58,079
about roughly for Lucia's projects in

00:00:52,440 --> 00:01:00,180
the last year i'm manfred i'm full stack

00:00:58,079 --> 00:01:03,539
developer I'm a freelancer since about I

00:01:00,180 --> 00:01:07,080
don't know eight or nine years I was

00:01:03,539 --> 00:01:10,409
running some startup companies you would

00:01:07,080 --> 00:01:13,470
call it now from 95 to 2010 I made film

00:01:10,409 --> 00:01:17,280
dot 80 and events that 18 the ancient

00:01:13,470 --> 00:01:19,950
years but now I'm just running a helper

00:01:17,280 --> 00:01:22,680
which you might see on my male domain

00:01:19,950 --> 00:01:26,100
the vector ha and being a software

00:01:22,680 --> 00:01:28,259
developer as a freelancer because I like

00:01:26,100 --> 00:01:32,400
doing things and not managing people so

00:01:28,259 --> 00:01:34,530
much okay I also might stutter hip it

00:01:32,400 --> 00:01:36,990
because that's what I do so AFM cuts

00:01:34,530 --> 00:01:40,979
just maybe sometimes stack or maybe just

00:01:36,990 --> 00:01:41,820
choosing weird language well that's on

00:01:40,979 --> 00:01:45,899
purpose

00:01:41,820 --> 00:01:52,170
that's nothing to fear about just don't

00:01:45,899 --> 00:01:54,869
be afraid okay yeah and then just dive

00:01:52,170 --> 00:01:57,420
into this thing and it's just a lot of

00:01:54,869 --> 00:01:59,460
many small little thing maybe just start

00:01:57,420 --> 00:02:01,530
with something which is a just a kind of

00:01:59,460 --> 00:02:03,390
more boring or straightforward thing

00:02:01,530 --> 00:02:07,229
which you also might know and sometimes

00:02:03,390 --> 00:02:10,619
do in your business corporate world you

00:02:07,229 --> 00:02:12,690
have forms stuff you have things like

00:02:10,619 --> 00:02:13,800
this where you just fill out forms and

00:02:12,690 --> 00:02:16,290
what you always have to do

00:02:13,800 --> 00:02:18,600
things like form validation which is

00:02:16,290 --> 00:02:21,060
just a kind of a boring standard thing

00:02:18,600 --> 00:02:24,170
to do but well someone has to do it so

00:02:21,060 --> 00:02:28,050
it's kind of the thing what you always

00:02:24,170 --> 00:02:30,120
encounter in your project and what I had

00:02:28,050 --> 00:02:34,920
in here's when you googled maybe one

00:02:30,120 --> 00:02:37,710
year HECO you found quite quite easily

00:02:34,920 --> 00:02:40,170
one package it was revalidate it was

00:02:37,710 --> 00:02:43,500
similar to other kind of packages I have

00:02:40,170 --> 00:02:47,030
always also seen in other frameworks and

00:02:43,500 --> 00:02:53,540
stuff it's always like you have you have

00:02:47,030 --> 00:02:56,550
to mark up your HTML code and you just

00:02:53,540 --> 00:03:00,380
define the kind of validations you need

00:02:56,550 --> 00:03:02,670
and the rules you just mix them in the

00:03:00,380 --> 00:03:04,650
HTML which is nice for simple

00:03:02,670 --> 00:03:06,390
validations but when things get more

00:03:04,650 --> 00:03:09,720
complex and you just need to do

00:03:06,390 --> 00:03:11,490
conditional validations or just have

00:03:09,720 --> 00:03:14,670
things which are a bit more complex then

00:03:11,490 --> 00:03:19,230
it just ends up being a bit messy so I

00:03:14,670 --> 00:03:21,270
tried that in one or two of my projects

00:03:19,230 --> 00:03:23,930
last year but I wasn't just really

00:03:21,270 --> 00:03:26,340
satified and with the later ones I

00:03:23,930 --> 00:03:28,620
encountered a thing which you also might

00:03:26,340 --> 00:03:32,180
know maybe has someone worked with it

00:03:28,620 --> 00:03:35,790
yet Bewdley date okay one guy at least

00:03:32,180 --> 00:03:39,720
it's really nice because the concept

00:03:35,790 --> 00:03:42,209
here is you just set up the whole

00:03:39,720 --> 00:03:46,410
validation set up and two rules in your

00:03:42,209 --> 00:03:48,750
model space so you can just have in your

00:03:46,410 --> 00:03:52,170
model you have simple built-in

00:03:48,750 --> 00:03:56,489
validations and you can quite easily by

00:03:52,170 --> 00:03:59,250
making and using your own functions make

00:03:56,489 --> 00:04:02,070
a bit more complex validations and you

00:03:59,250 --> 00:04:05,850
then I can then wire them up with your

00:04:02,070 --> 00:04:09,870
markup that's a bit more complicated

00:04:05,850 --> 00:04:13,220
than like it would be with the other set

00:04:09,870 --> 00:04:16,230
up but the thing here is you have total

00:04:13,220 --> 00:04:18,750
control here about what you're doing and

00:04:16,230 --> 00:04:22,590
when validation is jumping in and what

00:04:18,750 --> 00:04:26,070
not so you are on each input element you

00:04:22,590 --> 00:04:27,120
can call the touch function the touch

00:04:26,070 --> 00:04:30,600
method which

00:04:27,120 --> 00:04:34,199
means you just tell the validation

00:04:30,600 --> 00:04:37,130
system when you want it to revalidate

00:04:34,199 --> 00:04:41,070
the content so this is just a simple a

00:04:37,130 --> 00:04:43,740
simple input field up here down there

00:04:41,070 --> 00:04:47,130
you would have something which is some

00:04:43,740 --> 00:04:49,650
component which just makes an ajax call

00:04:47,130 --> 00:04:53,850
to load data and here you will just have

00:04:49,650 --> 00:04:56,820
to touch method called on the on change

00:04:53,850 --> 00:04:58,590
event and what you get then what you

00:04:56,820 --> 00:05:02,460
just what we scott just called all what

00:04:58,590 --> 00:05:06,150
is you get in your component state you

00:05:02,460 --> 00:05:07,889
get a three which just mirrors your

00:05:06,150 --> 00:05:12,180
model the thing which you wanted to

00:05:07,889 --> 00:05:15,419
validate and you get kind of life values

00:05:12,180 --> 00:05:20,220
which tell you if the field valid is it

00:05:15,419 --> 00:05:23,370
not valid which kind of of tested rules

00:05:20,220 --> 00:05:25,710
have been have been met which have which

00:05:23,370 --> 00:05:27,180
ones has been broken and you can tailor

00:05:25,710 --> 00:05:30,660
it to your own needs

00:05:27,180 --> 00:05:33,210
what's also fine is that you can then

00:05:30,660 --> 00:05:36,000
also maybe maybe if we go up back here

00:05:33,210 --> 00:05:41,490
what we would see here is sometimes you

00:05:36,000 --> 00:05:45,150
have rules like if we have a form where

00:05:41,490 --> 00:05:47,370
you cannot change some parts of the form

00:05:45,150 --> 00:05:50,550
because it's filled in already by

00:05:47,370 --> 00:05:55,039
someone else well then you just don't

00:05:50,550 --> 00:05:59,280
send out these validation rules you just

00:05:55,039 --> 00:06:01,830
remove them from the list of validations

00:05:59,280 --> 00:06:05,039
and well then they are just not used and

00:06:01,830 --> 00:06:08,550
this is just total in your own control

00:06:05,039 --> 00:06:11,099
and you can always see which rules are

00:06:08,550 --> 00:06:14,070
active and which are not when you look

00:06:11,099 --> 00:06:16,020
into your state tree so it's kind of a

00:06:14,070 --> 00:06:19,680
thing which is just really easy to

00:06:16,020 --> 00:06:21,870
reason about and to see when validation

00:06:19,680 --> 00:06:24,030
kicks in and when you use it so if you

00:06:21,870 --> 00:06:26,099
have the chance to just use it in some

00:06:24,030 --> 00:06:28,880
project that's the thing I was just

00:06:26,099 --> 00:06:34,410
really happy with because that's just I

00:06:28,880 --> 00:06:37,800
find a quite good approach of solving

00:06:34,410 --> 00:06:40,310
the thing and then what I also found is

00:06:37,800 --> 00:06:42,890
a kind of add-on package that's

00:06:40,310 --> 00:06:46,640
just a helper which helps you that you

00:06:42,890 --> 00:06:49,610
don't have to build all this heady HTML

00:06:46,640 --> 00:06:52,930
code which displays the messages for

00:06:49,610 --> 00:06:57,170
your validations you can just set up

00:06:52,930 --> 00:07:00,620
maybe for your favorite CSS framework

00:06:57,170 --> 00:07:03,620
for boom bootstrap whatever you can you

00:07:00,620 --> 00:07:07,180
can just set your your your own template

00:07:03,620 --> 00:07:10,940
and just say where the error messages go

00:07:07,180 --> 00:07:13,340
just here one has its own style of how

00:07:10,940 --> 00:07:17,080
to display the error messages and also

00:07:13,340 --> 00:07:20,060
this is a way here how to be how to

00:07:17,080 --> 00:07:21,710
easily override the built-in error

00:07:20,060 --> 00:07:26,510
messages because this is also something

00:07:21,710 --> 00:07:29,330
which you quite often need quite quite

00:07:26,510 --> 00:07:31,850
fast that you just need your own

00:07:29,330 --> 00:07:33,920
messages even if it's in the same

00:07:31,850 --> 00:07:35,960
language but sometimes you just want to

00:07:33,920 --> 00:07:38,960
change only some of them but not

00:07:35,960 --> 00:07:42,290
override the whole part okay that's it

00:07:38,960 --> 00:07:48,710
for my findings on form validation then

00:07:42,290 --> 00:07:52,550
the same with with view xvx in itself

00:07:48,710 --> 00:07:55,700
kind of a nice thing to have one thing

00:07:52,550 --> 00:07:57,650
was just that's also maybe just a kind

00:07:55,700 --> 00:08:00,830
of a straightforward thing to do but I

00:07:57,650 --> 00:08:04,100
think this is what helped me a lot with

00:08:00,830 --> 00:08:07,960
using all these valley validation things

00:08:04,100 --> 00:08:12,970
for single form components it's like

00:08:07,960 --> 00:08:16,700
don't bind the forms directly to the

00:08:12,970 --> 00:08:20,510
Buick state just always check out when

00:08:16,700 --> 00:08:24,500
you load the component first check out

00:08:20,510 --> 00:08:28,850
the local copy of the Buick state you

00:08:24,500 --> 00:08:32,000
are you are working on and be sure to

00:08:28,850 --> 00:08:34,760
make this as a cloned version so that

00:08:32,000 --> 00:08:37,270
means if you just make a reference to it

00:08:34,760 --> 00:08:41,210
you might still change and still have

00:08:37,270 --> 00:08:43,580
references to the to the View xtour

00:08:41,210 --> 00:08:44,150
values which might lead to strange

00:08:43,580 --> 00:08:47,540
things

00:08:44,150 --> 00:08:50,840
what helps here also is to always run

00:08:47,540 --> 00:08:53,450
the Buick store in that in

00:08:50,840 --> 00:08:55,400
in your death mode just run it in the

00:08:53,450 --> 00:08:59,570
strict mode because you will get warning

00:08:55,400 --> 00:09:02,990
stand if you have kind of kind of

00:08:59,570 --> 00:09:04,730
unwanted mutations in your state so what

00:09:02,990 --> 00:09:07,600
i'm doing here maybe i'm going back is

00:09:04,730 --> 00:09:11,570
when I'm loading my form component and

00:09:07,600 --> 00:09:16,839
fetching the part of the state tree

00:09:11,570 --> 00:09:16,839
which I'm well which I'm working on and

00:09:17,080 --> 00:09:25,760
then I'm just making a copy of that and

00:09:22,490 --> 00:09:29,480
this is what I'm then working with MF

00:09:25,760 --> 00:09:31,250
form and also may be something which is

00:09:29,480 --> 00:09:34,370
just straightforward but yeah it helped

00:09:31,250 --> 00:09:38,270
me a lot and also which was really happy

00:09:34,370 --> 00:09:40,760
with was I found my way that well you

00:09:38,270 --> 00:09:46,310
fill out something and well you have

00:09:40,760 --> 00:09:48,050
stuff but you don't in the old days you

00:09:46,310 --> 00:09:51,920
would just use plain session values

00:09:48,050 --> 00:09:55,330
where you would just store stuff on the

00:09:51,920 --> 00:09:58,160
store on the server here it's kind of

00:09:55,330 --> 00:10:03,290
very straightforward way you can just

00:09:58,160 --> 00:10:06,140
use this plugin here and then it's it is

00:10:03,290 --> 00:10:09,700
it is really easy thing to do that you

00:10:06,140 --> 00:10:14,000
can just choose parts of your state tree

00:10:09,700 --> 00:10:16,550
which should be stored in local storage

00:10:14,000 --> 00:10:20,810
it just takes care of it you don't have

00:10:16,550 --> 00:10:23,510
to do any of that it just leads to the

00:10:20,810 --> 00:10:25,940
thing that not the whole state but parts

00:10:23,510 --> 00:10:27,110
of the state which you wanted to be

00:10:25,940 --> 00:10:29,750
persistent

00:10:27,110 --> 00:10:32,589
they are just staying in local storage

00:10:29,750 --> 00:10:36,050
and that was just something I just

00:10:32,589 --> 00:10:39,200
dropped into my states and install set

00:10:36,050 --> 00:10:42,230
up within a few minutes with a few lines

00:10:39,200 --> 00:10:45,140
of code and it just worked well no

00:10:42,230 --> 00:10:47,240
config needed only thing I changed later

00:10:45,140 --> 00:10:50,209
was that sometimes it's it's nice that

00:10:47,240 --> 00:10:51,890
you set your own cache key your own

00:10:50,209 --> 00:10:53,600
local storage key because sometimes

00:10:51,890 --> 00:10:58,160
you're messing things up when you're

00:10:53,600 --> 00:11:02,020
when you're just maybe trying to have

00:10:58,160 --> 00:11:05,500
several versions of your state on

00:11:02,020 --> 00:11:07,540
on the same site that sometimes can be a

00:11:05,500 --> 00:11:12,839
bit messed up but that was just really a

00:11:07,540 --> 00:11:16,630
thing where I found well viewers just

00:11:12,839 --> 00:11:18,850
makes this possible that things like

00:11:16,630 --> 00:11:20,740
this get kind of just plugged in because

00:11:18,850 --> 00:11:26,230
in the past days it was just a bit more

00:11:20,740 --> 00:11:29,649
work yeah this is where we just have

00:11:26,230 --> 00:11:33,610
been that was the strictmode thing just

00:11:29,649 --> 00:11:36,610
don't keep it enabled in production

00:11:33,610 --> 00:11:39,970
because that's a bit resource intense

00:11:36,610 --> 00:11:46,060
and it can lead to performance issues on

00:11:39,970 --> 00:11:50,920
your site one more thing I came along

00:11:46,060 --> 00:11:56,500
was embedding SVG icons in the project

00:11:50,920 --> 00:11:59,800
itself I also tried and managed to

00:11:56,500 --> 00:12:02,620
handle several versions of doing it the

00:11:59,800 --> 00:12:07,630
thing I ended up with was something

00:12:02,620 --> 00:12:10,600
called view SVG icons it's a bit tedious

00:12:07,630 --> 00:12:14,110
because you have to always you have to

00:12:10,600 --> 00:12:16,779
give it a folder with your head with

00:12:14,110 --> 00:12:19,420
your SVG files and you always have to

00:12:16,779 --> 00:12:24,220
when you add new files to it you have to

00:12:19,420 --> 00:12:28,630
pre - pre compiled JavaScript versions

00:12:24,220 --> 00:12:30,880
of this has VG icons but it just passes

00:12:28,630 --> 00:12:33,550
time and pre breaks them into kind of a

00:12:30,880 --> 00:12:38,640
standard format and it also tries to

00:12:33,550 --> 00:12:41,529
guess if you have several layers or

00:12:38,640 --> 00:12:44,130
several shapes in your eye content that

00:12:41,529 --> 00:12:47,020
you just can access them then easily

00:12:44,130 --> 00:12:49,630
with your CSS so when you have a mouse

00:12:47,020 --> 00:12:52,800
over hover effect you can then just

00:12:49,630 --> 00:12:58,209
target only the inner outer part of the

00:12:52,800 --> 00:13:01,570
head of the SVG and when you use it you

00:12:58,209 --> 00:13:05,170
just import only the icons which you

00:13:01,570 --> 00:13:09,790
need in your component and then in the

00:13:05,170 --> 00:13:11,699
mark-up itself you just use the SVG icon

00:13:09,790 --> 00:13:14,999
component

00:13:11,699 --> 00:13:17,220
just render them in kind of in line

00:13:14,999 --> 00:13:19,319
which is just something something

00:13:17,220 --> 00:13:23,939
because as sometimes need a bit more

00:13:19,319 --> 00:13:26,609
control about icons bit more than you

00:13:23,939 --> 00:13:31,559
would normally have when you just do it

00:13:26,609 --> 00:13:34,410
as a SVG image inclusion and in the

00:13:31,559 --> 00:13:37,739
latest thing I just also found out that

00:13:34,410 --> 00:13:40,049
the new version of font no that's a

00:13:37,739 --> 00:13:43,949
thing I'm standing Willi with font

00:13:40,049 --> 00:13:47,329
awesome there five version the new one

00:13:43,949 --> 00:13:50,970
it has really a ton of icons it's really

00:13:47,329 --> 00:13:54,689
ramped up with really a big list of

00:13:50,970 --> 00:13:58,649
things and it's just easy to just find a

00:13:54,689 --> 00:14:01,410
lot of stuff which you might use in your

00:13:58,649 --> 00:14:04,529
own projects but what's nice is they

00:14:01,410 --> 00:14:06,929
also have a kind of good integration

00:14:04,529 --> 00:14:09,929
with you where you're just in a similar

00:14:06,929 --> 00:14:12,989
way you just choose which icons you want

00:14:09,929 --> 00:14:15,629
to have in your bundle you add it to a

00:14:12,989 --> 00:14:19,259
kind of library and then you can use it

00:14:15,629 --> 00:14:21,749
in any component in your your project

00:14:19,259 --> 00:14:24,209
then just with the font or some icon

00:14:21,749 --> 00:14:26,939
component it's a kind of a similar set

00:14:24,209 --> 00:14:29,929
up but that's just when you don't want

00:14:26,939 --> 00:14:32,429
to when you just want to utilize the big

00:14:29,929 --> 00:14:36,689
amount of icons which just come

00:14:32,429 --> 00:14:39,749
ready-made with font awesome so that's

00:14:36,689 --> 00:14:41,970
this then just only a small thing I also

00:14:39,749 --> 00:14:43,980
what you always just do is you shop for

00:14:41,970 --> 00:14:46,350
component libraries and things which

00:14:43,980 --> 00:14:48,179
just makes things easier for you when

00:14:46,350 --> 00:14:50,850
you're just dealing with forms or date

00:14:48,179 --> 00:14:53,459
pickers or whatever

00:14:50,850 --> 00:14:56,489
first the old things I had to use

00:14:53,459 --> 00:15:02,609
bootstrap styled components I first

00:14:56,489 --> 00:15:05,369
started with a special branch of the of

00:15:02,609 --> 00:15:09,019
the of the view strap plugin which was

00:15:05,369 --> 00:15:13,319
kind of not really developed for you to

00:15:09,019 --> 00:15:16,379
then nowadays you would have this new

00:15:13,319 --> 00:15:20,189
thing called bootstrap view chest it

00:15:16,379 --> 00:15:24,389
wasn't available when I looked at it but

00:15:20,189 --> 00:15:25,220
in the end in my way in my own projects

00:15:24,389 --> 00:15:29,520
I used

00:15:25,220 --> 00:15:31,980
which is called you Riv it was kind of

00:15:29,520 --> 00:15:35,340
kind of useful but it was still a bit

00:15:31,980 --> 00:15:36,690
messy and a bit old I'm not so fond of

00:15:35,340 --> 00:15:38,880
all these people

00:15:36,690 --> 00:15:42,570
this puts their thing but it did his job

00:15:38,880 --> 00:15:45,600
I also changed something they accepted

00:15:42,570 --> 00:15:48,780
my pull request quite easily so I just

00:15:45,600 --> 00:15:52,470
don't had to use my own compact version

00:15:48,780 --> 00:15:54,450
too long but nowadays new things I'm

00:15:52,470 --> 00:15:57,630
building with I'm just switching to a

00:15:54,450 --> 00:16:01,260
CSS framework called Puma you also might

00:15:57,630 --> 00:16:03,500
not have used it lately and they have a

00:16:01,260 --> 00:16:08,010
nice component library here it's called

00:16:03,500 --> 00:16:11,010
beautify and yeah it looks kind of

00:16:08,010 --> 00:16:13,770
promising and I used it for some smaller

00:16:11,010 --> 00:16:18,060
things and it was something which was

00:16:13,770 --> 00:16:22,170
just was straightforward and kind of

00:16:18,060 --> 00:16:27,510
easy to implement and also to adapt to

00:16:22,170 --> 00:16:29,430
your own needs and okay then that was

00:16:27,510 --> 00:16:32,430
the thing about all these little

00:16:29,430 --> 00:16:36,660
findings and am/pm packages and things I

00:16:32,430 --> 00:16:39,150
found then maybe I can just dive in and

00:16:36,660 --> 00:16:39,600
just have a look at one of the bigger

00:16:39,150 --> 00:16:43,500
sites

00:16:39,600 --> 00:16:46,650
I built this viewed this year this was a

00:16:43,500 --> 00:16:49,200
site I took over

00:16:46,650 --> 00:16:52,320
someone else built it it was a flash

00:16:49,200 --> 00:16:55,050
like Southside from such some kind of

00:16:52,320 --> 00:16:59,190
media agency and they made something

00:16:55,050 --> 00:17:02,700
which is really into kind of with a lot

00:16:59,190 --> 00:17:05,160
of interactions here and you have kind

00:17:02,700 --> 00:17:10,920
of stuff why you cast just can go

00:17:05,160 --> 00:17:13,560
through go deeper into stuff and it was

00:17:10,920 --> 00:17:15,810
something which they built with a jQuery

00:17:13,560 --> 00:17:18,900
and a bunch of plugins and the full page

00:17:15,810 --> 00:17:20,610
JavaScript together and in the end it

00:17:18,900 --> 00:17:23,459
was just messed up and they couldn't get

00:17:20,610 --> 00:17:28,300
it to work rest rather

00:17:23,459 --> 00:17:30,520
responsively on all devices and so they

00:17:28,300 --> 00:17:32,559
gave it to me then and I said well I

00:17:30,520 --> 00:17:35,100
could do it but I could I would just

00:17:32,559 --> 00:17:37,630
start over and just not do with all this

00:17:35,100 --> 00:17:40,059
mess what you're having here because it

00:17:37,630 --> 00:17:42,910
was really quite heavy loaded and it

00:17:40,059 --> 00:17:44,770
just was really not easy to build and I

00:17:42,910 --> 00:17:47,650
said well that could be something which

00:17:44,770 --> 00:17:51,940
we could quite easily build this view

00:17:47,650 --> 00:17:54,520
chairs and what the main thing here is

00:17:51,940 --> 00:17:56,830
what we are having is we're having a

00:17:54,520 --> 00:17:59,050
kind of a layout the engine inside this

00:17:56,830 --> 00:18:02,710
is what you would see in here so it's

00:17:59,050 --> 00:18:05,650
always kind of finding out how much

00:18:02,710 --> 00:18:07,780
space all these contents here are using

00:18:05,650 --> 00:18:10,809
first I was thinking about maybe taking

00:18:07,780 --> 00:18:14,050
a physics engine which just computes

00:18:10,809 --> 00:18:15,880
about how many spaces left and so but

00:18:14,050 --> 00:18:18,490
that would also be a bit too slow and a

00:18:15,880 --> 00:18:20,440
bit too much overhead in the end it was

00:18:18,490 --> 00:18:24,309
just something inside which just

00:18:20,440 --> 00:18:27,070
measured out how much space these text

00:18:24,309 --> 00:18:30,250
components would need and it's just

00:18:27,070 --> 00:18:35,679
three he arranges them in a way that it

00:18:30,250 --> 00:18:38,620
works for that it just tries to utilize

00:18:35,679 --> 00:18:40,360
the space best because that means the

00:18:38,620 --> 00:18:43,030
main problem here was that you have this

00:18:40,360 --> 00:18:47,040
circular thing which you cannot really

00:18:43,030 --> 00:18:50,170
you cannot it has to stay a kind of in a

00:18:47,040 --> 00:18:53,440
square like shape but only the content

00:18:50,170 --> 00:18:57,370
around it has to just float and just

00:18:53,440 --> 00:18:59,679
adapt to the different orientations so

00:18:57,370 --> 00:19:03,280
that the whole thing also then works

00:18:59,679 --> 00:19:08,950
kind of mobile and so and the whole

00:19:03,280 --> 00:19:11,410
thing is still a full-page j/s thing

00:19:08,950 --> 00:19:14,440
which is kind of which makes the whole

00:19:11,410 --> 00:19:19,330
thing a huge page a huge one-page

00:19:14,440 --> 00:19:27,160
application which sometimes would really

00:19:19,330 --> 00:19:32,320
take a long time to load and in the end

00:19:27,160 --> 00:19:35,500
what it ended up is just making good use

00:19:32,320 --> 00:19:36,700
of the computed properties of view so

00:19:35,500 --> 00:19:39,130
only when you change

00:19:36,700 --> 00:19:41,680
something when you change sizes and

00:19:39,130 --> 00:19:44,500
stuff some heavy computations have to

00:19:41,680 --> 00:19:48,130
done have to be done only once and then

00:19:44,500 --> 00:19:51,570
just the view computed style it just

00:19:48,130 --> 00:19:55,690
Kasia stuff which which is which just

00:19:51,570 --> 00:19:59,890
made it quite easy and what we also had

00:19:55,690 --> 00:20:02,020
here is that what you want here is you

00:19:59,890 --> 00:20:05,530
want this whole content to be available

00:20:02,020 --> 00:20:08,200
to search engines as well the normal

00:20:05,530 --> 00:20:10,360
thing would be that well I'm doing a

00:20:08,200 --> 00:20:14,680
single page application and the whole

00:20:10,360 --> 00:20:16,150
content would come with HX calls but

00:20:14,680 --> 00:20:19,990
then I have to make a second version

00:20:16,150 --> 00:20:21,730
what just make a kind of a way that the

00:20:19,990 --> 00:20:24,580
search engines are able to just grasp

00:20:21,730 --> 00:20:26,530
the content and what I did here is that

00:20:24,580 --> 00:20:30,970
if you look at the source code of this

00:20:26,530 --> 00:20:32,980
thing then you will find out that the

00:20:30,970 --> 00:20:36,310
base content what you are having is just

00:20:32,980 --> 00:20:38,830
simple HTML it's just something which

00:20:36,310 --> 00:20:41,080
which which which which can be passed by

00:20:38,830 --> 00:20:45,480
search engines but what you are having

00:20:41,080 --> 00:20:49,870
here is that I'm picking up then this

00:20:45,480 --> 00:20:53,130
this components of the page and I'm

00:20:49,870 --> 00:20:55,930
converting them to view components in

00:20:53,130 --> 00:21:00,100
other frameworks I was used that I can

00:20:55,930 --> 00:21:02,500
just markup component styles and they

00:21:00,100 --> 00:21:05,200
just get to life as soon as you load

00:21:02,500 --> 00:21:08,740
your framework for instance it was

00:21:05,200 --> 00:21:10,690
possible with angular 1 but here I have

00:21:08,740 --> 00:21:14,520
found out that if you have nested

00:21:10,690 --> 00:21:18,700
components and then the whole thing

00:21:14,520 --> 00:21:22,150
would be running in the context of the

00:21:18,700 --> 00:21:25,270
of the topmost component which just made

00:21:22,150 --> 00:21:30,610
it not really feasible but I I found a

00:21:25,270 --> 00:21:37,720
way to work around this whole thing by

00:21:30,610 --> 00:21:40,930
just going in in TTL but by just using

00:21:37,720 --> 00:21:44,590
the way that view also allows you to use

00:21:40,930 --> 00:21:48,330
a render function so that you don't have

00:21:44,590 --> 00:21:48,330
to use the normal template

00:21:48,540 --> 00:21:55,580
approach in view so for instance here I

00:21:52,170 --> 00:22:00,120
would have a render function which just

00:21:55,580 --> 00:22:03,930
checks which class you are having in

00:22:00,120 --> 00:22:08,760
your HTML markup and it tends loading

00:22:03,930 --> 00:22:13,410
the specific nested component and it's

00:22:08,760 --> 00:22:17,430
just passing in the HTML Dom elements of

00:22:13,410 --> 00:22:21,630
the child component then and the whole

00:22:17,430 --> 00:22:26,520
thing that worked so it just made quite

00:22:21,630 --> 00:22:28,650
easy way how to to just make a basic

00:22:26,520 --> 00:22:30,810
version which has all the contents and

00:22:28,650 --> 00:22:33,810
the content is just passed in to the

00:22:30,810 --> 00:22:37,260
components not via JSON it's just passed

00:22:33,810 --> 00:22:40,800
in just we have normal HTML elements

00:22:37,260 --> 00:22:43,530
which just makes it available for search

00:22:40,800 --> 00:23:00,540
engines and also available for the

00:22:43,530 --> 00:23:03,780
components then if you nest several

00:23:00,540 --> 00:23:06,960
components which is with each other then

00:23:03,780 --> 00:23:11,010
the whole HTML stuff it just doesn't

00:23:06,960 --> 00:23:14,280
either it just it just just didn't work

00:23:11,010 --> 00:23:18,000
this way it just it just it just it just

00:23:14,280 --> 00:23:20,340
didn't resolve component by component it

00:23:18,000 --> 00:23:23,250
just passed the whole thing in the

00:23:20,340 --> 00:23:25,320
topmost component and then it said well

00:23:23,250 --> 00:23:32,640
I don't know about this nested stuff

00:23:25,320 --> 00:23:35,040
that's not yeah and and and this is what

00:23:32,640 --> 00:23:37,260
I'm doing now when I'm doing it manually

00:23:35,040 --> 00:23:39,780
now with this render function then I'm

00:23:37,260 --> 00:23:41,910
just really making a new component and

00:23:39,780 --> 00:23:43,800
just passing that in maybe a later

00:23:41,910 --> 00:23:47,070
version of you will have that somehow

00:23:43,800 --> 00:23:49,890
built in but I found it good that I had

00:23:47,070 --> 00:23:52,320
at least the chance to take over this

00:23:49,890 --> 00:23:55,080
process and just tweak it this is a bit

00:23:52,320 --> 00:23:57,270
messy but it's only for the topmost

00:23:55,080 --> 00:23:59,550
container components which don't do that

00:23:57,270 --> 00:24:01,860
much and the lower ones they are then

00:23:59,550 --> 00:24:04,350
just normal components like like

00:24:01,860 --> 00:24:06,480
you would be used to this is just normal

00:24:04,350 --> 00:24:08,730
stuff which you would have with

00:24:06,480 --> 00:24:12,120
templates and stuff which you which I

00:24:08,730 --> 00:24:16,230
know but the upper ones they had to be

00:24:12,120 --> 00:24:20,370
done with these render functions also

00:24:16,230 --> 00:24:23,730
there was something normally you would

00:24:20,370 --> 00:24:26,820
just use a router here because what I'm

00:24:23,730 --> 00:24:30,720
doing here is you can just still change

00:24:26,820 --> 00:24:32,670
stuff in the URL or you can reload the

00:24:30,720 --> 00:24:35,250
page and you're still staying at the

00:24:32,670 --> 00:24:39,870
same space and and the whole application

00:24:35,250 --> 00:24:43,230
is then going to this to the just to the

00:24:39,870 --> 00:24:46,650
state where you have left where you want

00:24:43,230 --> 00:24:48,270
to go when you open this link and but in

00:24:46,650 --> 00:24:51,030
this case I just couldn't do it with a

00:24:48,270 --> 00:24:52,860
normal root router approach because it

00:24:51,030 --> 00:24:55,890
just is not pasting content it's kind of

00:24:52,860 --> 00:24:58,770
a more complex application what I was

00:24:55,890 --> 00:25:01,590
doing here is that I was just still

00:24:58,770 --> 00:25:04,679
using the view router and setting up all

00:25:01,590 --> 00:25:06,750
these standard routes but then there's

00:25:04,679 --> 00:25:10,860
the thing where with view X or out the

00:25:06,750 --> 00:25:14,580
sink you can sync the router just also

00:25:10,860 --> 00:25:17,010
to review ik state and then I had

00:25:14,580 --> 00:25:19,710
everything in the state and I can then

00:25:17,010 --> 00:25:23,250
just watch the state and depending on

00:25:19,710 --> 00:25:27,510
the state I can just open the view in

00:25:23,250 --> 00:25:35,370
the way like you wanted to have so the

00:25:27,510 --> 00:25:38,370
thing is that I'm just somehow lost but

00:25:35,370 --> 00:25:41,340
the thing was I have the whole thing

00:25:38,370 --> 00:25:43,799
here it's this that's kind of a stripped

00:25:41,340 --> 00:25:45,510
down version of this full page parallax

00:25:43,799 --> 00:25:49,049
scrolling thing which is used on all

00:25:45,510 --> 00:25:50,730
other websites maybe two years ago or

00:25:49,049 --> 00:25:55,650
nights not so common anymore

00:25:50,730 --> 00:25:58,530
but this is now hooked up with this or

00:25:55,650 --> 00:26:01,620
router variables so when you change

00:25:58,530 --> 00:26:04,380
stuff and the thing has to has to move

00:26:01,620 --> 00:26:07,520
into some some some weird things but now

00:26:04,380 --> 00:26:12,660
it just works kind of stable so wherever

00:26:07,520 --> 00:26:14,580
deep you are in the hindustan in the

00:26:12,660 --> 00:26:15,380
side the whole thing is just loading and

00:26:14,580 --> 00:26:17,660
just

00:26:15,380 --> 00:26:20,090
going to the space where it's going to

00:26:17,660 --> 00:26:22,790
but what we are seeing here is you

00:26:20,090 --> 00:26:25,280
really have a lot of content and also

00:26:22,790 --> 00:26:28,580
all this content here you can just also

00:26:25,280 --> 00:26:30,800
go deeper you have a blog like feature

00:26:28,580 --> 00:26:33,110
and you have just a lot of stuff and a

00:26:30,800 --> 00:26:35,060
lot of components which normally you

00:26:33,110 --> 00:26:37,640
would have to load in the beginning

00:26:35,060 --> 00:26:39,770
because it's a single page application

00:26:37,640 --> 00:26:43,400
and if you just do it with the normal

00:26:39,770 --> 00:26:47,330
view set up and not using this router

00:26:43,400 --> 00:26:50,380
thing you just end up having to load a

00:26:47,330 --> 00:26:53,620
really huge bundle in the beginning

00:26:50,380 --> 00:26:56,390
which just would be a bit to load for

00:26:53,620 --> 00:26:58,760
basic page load and also if people just

00:26:56,390 --> 00:27:01,220
want to go to the page and just rent the

00:26:58,760 --> 00:27:03,800
car and don't look at all these project

00:27:01,220 --> 00:27:05,510
things which is maybe just a bit too

00:27:03,800 --> 00:27:07,550
much for them then just doesn't make

00:27:05,510 --> 00:27:09,740
sense that they load all this engine

00:27:07,550 --> 00:27:11,780
this block thing and this special stuff

00:27:09,740 --> 00:27:19,700
so I was looking for a way to lazy load

00:27:11,780 --> 00:27:23,420
content in view and do two web pack 2

00:27:19,700 --> 00:27:24,620
this was really something which was kind

00:27:23,420 --> 00:27:29,330
of straightforward

00:27:24,620 --> 00:27:33,110
it was just not so hard to set up it was

00:27:29,330 --> 00:27:38,330
just you had to set up in web pack the

00:27:33,110 --> 00:27:40,820
way how their how the naming mmm the

00:27:38,330 --> 00:27:44,510
naming convention should work for your

00:27:40,820 --> 00:27:48,740
for your on demand lazy loaded bundles

00:27:44,510 --> 00:27:51,530
and then there's one way which you can

00:27:48,740 --> 00:27:53,960
google and find quite easily how to do

00:27:51,530 --> 00:27:56,330
it and how to use it with view router in

00:27:53,960 --> 00:27:59,180
this case I just sometimes needed

00:27:56,330 --> 00:28:01,190
content to be loaded whenever you were

00:27:59,180 --> 00:28:04,610
going here and just opening maybe some

00:28:01,190 --> 00:28:06,530
kind of pop-up or so and here it hits

00:28:04,610 --> 00:28:08,600
like you're going in here and then

00:28:06,530 --> 00:28:12,410
you're just going and loading all the

00:28:08,600 --> 00:28:15,710
content which just is loading then all

00:28:12,410 --> 00:28:21,290
these blogging and social posts features

00:28:15,710 --> 00:28:26,360
and this is just here done in a way that

00:28:21,290 --> 00:28:29,090
you just use this syntax when you just

00:28:26,360 --> 00:28:31,610
write not require when you

00:28:29,090 --> 00:28:35,150
you just use the import statement then

00:28:31,610 --> 00:28:37,910
webpack will just take everything what's

00:28:35,150 --> 00:28:40,030
underneath this component and also all

00:28:37,910 --> 00:28:43,640
components which are required by this

00:28:40,030 --> 00:28:47,470
component and just put it in a separate

00:28:43,640 --> 00:28:50,900
bundle a separate file which is really a

00:28:47,470 --> 00:28:54,020
good thing because I could just strip

00:28:50,900 --> 00:28:58,730
down the size of the initial peddler if

00:28:54,020 --> 00:29:01,940
page load by I know 60% or something and

00:28:58,730 --> 00:29:06,980
what I also wanted to do is I just

00:29:01,940 --> 00:29:09,110
wanted to see how much space am I

00:29:06,980 --> 00:29:11,690
wasting with libraries how much stuff

00:29:09,110 --> 00:29:14,780
how much crafts is going in here and

00:29:11,690 --> 00:29:17,330
there's a nice plugin which is called

00:29:14,780 --> 00:29:19,940
that pack bundle analyzer I don't know

00:29:17,330 --> 00:29:22,100
maybe some of you know just software

00:29:19,940 --> 00:29:25,430
like like this for your own hard disk

00:29:22,100 --> 00:29:28,550
which shows you which amounts of disk

00:29:25,430 --> 00:29:31,400
space I wasted in which parts of your

00:29:28,550 --> 00:29:34,970
hard disk this thing works quite similar

00:29:31,400 --> 00:29:38,750
so when you would run it it would work

00:29:34,970 --> 00:29:40,370
like this maybe we can just run it here

00:29:38,750 --> 00:29:43,040
but we are we have to go to the other

00:29:40,370 --> 00:29:44,960
page that's the Shamy engine run it here

00:29:43,040 --> 00:29:48,770
and when you have it in your website

00:29:44,960 --> 00:29:53,060
config then what it does it just builds

00:29:48,770 --> 00:29:56,230
like it would normally do and after the

00:29:53,060 --> 00:30:00,890
build process is done it just starts

00:29:56,230 --> 00:30:06,320
local web server and it allows you then

00:30:00,890 --> 00:30:10,280
to see how much space goes into which

00:30:06,320 --> 00:30:13,250
part of your and and into into which

00:30:10,280 --> 00:30:18,050
file so what what you would see here is

00:30:13,250 --> 00:30:20,150
that's just the basic app bundle then

00:30:18,050 --> 00:30:22,550
what you can do with repick easily is

00:30:20,150 --> 00:30:25,040
also split out some stuff into a vendor

00:30:22,550 --> 00:30:27,710
bundle and then what you would see here

00:30:25,040 --> 00:30:31,490
is all these lazy loaded stuff which is

00:30:27,710 --> 00:30:33,890
which is which is just put out into

00:30:31,490 --> 00:30:35,990
several into separate files what you

00:30:33,890 --> 00:30:37,850
would also see here is your still in

00:30:35,990 --> 00:30:40,070
every lazy loading thing because these

00:30:37,850 --> 00:30:42,390
are all forms they're all but himself

00:30:40,070 --> 00:30:44,730
just loading this

00:30:42,390 --> 00:30:47,190
a validation library so I could just

00:30:44,730 --> 00:30:49,080
move this maybe in the main one but well

00:30:47,190 --> 00:30:51,870
it doesn't make sense because the forms

00:30:49,080 --> 00:30:54,300
they are really needed sell them so if

00:30:51,870 --> 00:30:57,660
someone loads it loads one then yeah

00:30:54,300 --> 00:30:59,910
well they will just load one one format

00:30:57,660 --> 00:31:04,880
if the lot more well they can just keep

00:30:59,910 --> 00:31:07,440
this code in separate bundle files as a

00:31:04,880 --> 00:31:09,300
duplication which is no problem but it

00:31:07,440 --> 00:31:13,290
was really nice because when you put

00:31:09,300 --> 00:31:16,010
lodash in or just some other versions or

00:31:13,290 --> 00:31:20,100
just if you have it just dump just any

00:31:16,010 --> 00:31:22,740
NPM plug-in sometimes you end up here

00:31:20,100 --> 00:31:25,440
wasting really huge amounts of space for

00:31:22,740 --> 00:31:27,540
stuff why I just need only one or two

00:31:25,440 --> 00:31:30,600
functions so it just makes sense to find

00:31:27,540 --> 00:31:32,580
out where you're losing all your memory

00:31:30,600 --> 00:31:37,320
so this was also something which with

00:31:32,580 --> 00:31:42,780
which I found kind of really really

00:31:37,320 --> 00:31:46,830
helpful in my case so then let's go back

00:31:42,780 --> 00:31:51,240
to our thing here yeah this is how it

00:31:46,830 --> 00:31:55,110
would look like yeah so that was just

00:31:51,240 --> 00:31:57,390
what built in this year I built a second

00:31:55,110 --> 00:31:59,610
thing which I'm just working on right

00:31:57,390 --> 00:32:02,100
now which was also kind of nice to have

00:31:59,610 --> 00:32:04,860
a kind of an undo feature which is just

00:32:02,100 --> 00:32:07,980
something which was also really easy to

00:32:04,860 --> 00:32:12,510
do with the Buick State thing that you

00:32:07,980 --> 00:32:15,350
can just yeah just like you would have

00:32:12,510 --> 00:32:17,640
also have seen it in redux or other

00:32:15,350 --> 00:32:19,050
applications in the last year's it was

00:32:17,640 --> 00:32:22,500
also just something which was easily

00:32:19,050 --> 00:32:28,950
done with Buicks that you can just dump

00:32:22,500 --> 00:32:31,500
in you are undo and redo functions and

00:32:28,950 --> 00:32:34,920
you get that kind of straightaway for

00:32:31,500 --> 00:32:37,260
free okay so that was the kind of the

00:32:34,920 --> 00:32:41,760
second part a bit more messy part of

00:32:37,260 --> 00:32:43,410
this just small overview and I think

00:32:41,760 --> 00:32:46,920
when I'm going here to the next slide

00:32:43,410 --> 00:32:49,620
then I'm on the same slide so maybe if

00:32:46,920 --> 00:32:52,200
you want but not too tight we can maybe

00:32:49,620 --> 00:32:54,140
step into smaller things which are just

00:32:52,200 --> 00:32:58,650
maybe touched only

00:32:54,140 --> 00:33:01,730
anything else yeah I was just completely

00:32:58,650 --> 00:33:01,730

YouTube URL: https://www.youtube.com/watch?v=RUyFhMu9tME


