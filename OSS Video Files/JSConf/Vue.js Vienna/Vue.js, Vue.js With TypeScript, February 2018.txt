Title: Vue.js, Vue.js With TypeScript, February 2018
Publication date: 2018-02-24
Playlist: Vue.js Vienna
Description: 
	Radim B will talk about web app creation with TypeScript and Vue.js.
Captions: 
	00:00:00,030 --> 00:00:10,440
so hello my name is Raheem originated in

00:00:05,040 --> 00:00:14,990
Czech Republic going through several

00:00:10,440 --> 00:00:19,070
countries I'm software developer in

00:00:14,990 --> 00:00:24,900
corporate companies in bigger companies

00:00:19,070 --> 00:00:28,970
right now in Vienna let's talk and I

00:00:24,900 --> 00:00:32,210
have prepared some talk about typescript

00:00:28,970 --> 00:00:36,630
some motivation around typescript is

00:00:32,210 --> 00:00:39,840
there was like jQuery think at the

00:00:36,630 --> 00:00:42,290
beginning it was like big boom it

00:00:39,840 --> 00:00:47,039
simplified the manipulation with the Dom

00:00:42,290 --> 00:00:50,550
we are JavaScript then came view as a

00:00:47,039 --> 00:00:53,969
tool and it simplified the web

00:00:50,550 --> 00:00:57,960
application development and then at the

00:00:53,969 --> 00:01:01,710
end it's up to you as a developer to to

00:00:57,960 --> 00:01:04,049
simplify up and I believe view is one of

00:01:01,710 --> 00:01:08,490
the tools right now that can help you

00:01:04,049 --> 00:01:13,470
get along with the typescript and let's

00:01:08,490 --> 00:01:17,880
let's look at the advantages which you

00:01:13,470 --> 00:01:19,950
can use right now so how many of you

00:01:17,880 --> 00:01:24,200
actually hands up

00:01:19,950 --> 00:01:28,920
try tries tad sorry right typescript

00:01:24,200 --> 00:01:32,369
before with the view anyone ok

00:01:28,920 --> 00:01:37,680
typescript typescript with you ok a few

00:01:32,369 --> 00:01:40,320
of you so I will start with some basic

00:01:37,680 --> 00:01:44,340
stuff how you can set up your project at

00:01:40,320 --> 00:01:48,360
the beginning and in showing some

00:01:44,340 --> 00:01:52,259
examples then from this simple simple

00:01:48,360 --> 00:01:56,969
set up to more advanced there is

00:01:52,259 --> 00:02:02,090
something like babel with the flow which

00:01:56,969 --> 00:02:04,250
is also used useful for this kind of

00:02:02,090 --> 00:02:12,560
stuff

00:02:04,250 --> 00:02:14,040
ok but in my opinion it it requires more

00:02:12,560 --> 00:02:16,739
configuration

00:02:14,040 --> 00:02:22,099
then typescript typescript has a one

00:02:16,739 --> 00:02:26,370
config file in your project that's all

00:02:22,099 --> 00:02:28,439
what you should check first anyway if

00:02:26,370 --> 00:02:33,290
you are developing with the view is the

00:02:28,439 --> 00:02:40,709
sty guide so read the style guide first

00:02:33,290 --> 00:02:44,540
to avoid any wrong patterns you while

00:02:40,709 --> 00:02:48,689
while you're developing and let's look

00:02:44,540 --> 00:02:52,769
how how we can use typescript with the

00:02:48,689 --> 00:02:55,620
view the syntax is similar there are

00:02:52,769 --> 00:03:00,959
actually free ways how you can use

00:02:55,620 --> 00:03:05,189
typescript typescript brings you some

00:03:00,959 --> 00:03:13,799
type safety in your in your objects and

00:03:05,189 --> 00:03:18,060
view objects and methods view extent is

00:03:13,799 --> 00:03:23,609
one way to do this where the syntax is

00:03:18,060 --> 00:03:28,379
quite simple or similar to to syntax you

00:03:23,609 --> 00:03:33,239
use in Babel you have you have a data

00:03:28,379 --> 00:03:36,629
function you have a methods and you can

00:03:33,239 --> 00:03:41,489
use computed properties like like you

00:03:36,629 --> 00:03:43,680
would do in in Babel

00:03:41,489 --> 00:03:51,180
you are just using a function extent

00:03:43,680 --> 00:03:56,900
here other way is using view component

00:03:51,180 --> 00:04:04,519
options this is kind of this object here

00:03:56,900 --> 00:04:09,060
which you you can import from view again

00:04:04,519 --> 00:04:14,009
the syntax is quite quite similar to

00:04:09,060 --> 00:04:18,449
what you know you have you have a data

00:04:14,009 --> 00:04:21,870
function right here and methods right

00:04:18,449 --> 00:04:25,650
here but where you're at additionally

00:04:21,870 --> 00:04:26,830
doing here is you're writing something

00:04:25,650 --> 00:04:32,560
like in to

00:04:26,830 --> 00:04:35,710
face to describe the data for you and

00:04:32,560 --> 00:04:42,129
the methods for you so every time you

00:04:35,710 --> 00:04:46,120
use some variable here in a method it

00:04:42,129 --> 00:04:48,099
knows the shape of the object so you get

00:04:46,120 --> 00:04:53,650
the full intellisense and type safety

00:04:48,099 --> 00:04:55,960
here on the unlimited level so if you

00:04:53,650 --> 00:04:58,479
are here let's say on click method and

00:04:55,960 --> 00:05:01,000
you would access the message here he

00:04:58,479 --> 00:05:04,419
would know this guy is a string and as a

00:05:01,000 --> 00:05:09,180
soon you would try put number in this

00:05:04,419 --> 00:05:09,180
message it would it would raise an error

00:05:09,509 --> 00:05:16,960
small trick here is as I said the

00:05:12,669 --> 00:05:20,979
component options so we were here at the

00:05:16,960 --> 00:05:29,169
complying option this is a second way

00:05:20,979 --> 00:05:32,650
how you can write a view object your

00:05:29,169 --> 00:05:36,039
view class and third one probably the

00:05:32,650 --> 00:05:40,479
most famous one is the overview class

00:05:36,039 --> 00:05:44,319
component which is an official official

00:05:40,479 --> 00:05:48,969
class which can be used in a Babel

00:05:44,319 --> 00:05:51,339
EICMA script or typescript you can see

00:05:48,969 --> 00:05:55,659
there is some special decorator called

00:05:51,339 --> 00:05:59,759
component in this case you are importing

00:05:55,659 --> 00:06:06,129
it from from view class component a

00:05:59,759 --> 00:06:08,520
library which is official one up there

00:06:06,129 --> 00:06:15,729
you have kind of slots for your

00:06:08,520 --> 00:06:19,300
component properties and so on and right

00:06:15,729 --> 00:06:22,289
here you have a class that uses those

00:06:19,300 --> 00:06:22,289
sorry

00:06:26,150 --> 00:06:37,830
right here you have a class that is

00:06:29,940 --> 00:06:39,510
using this component decorator as you

00:06:37,830 --> 00:06:41,669
can see there is no data function

00:06:39,510 --> 00:06:44,240
anymore you don't need to define this

00:06:41,669 --> 00:06:47,340
this will be automatic handled for you

00:06:44,240 --> 00:06:50,550
you see there is no declaration of the

00:06:47,340 --> 00:06:54,090
methods now it's automatically hand it

00:06:50,550 --> 00:06:59,610
for you so any method you write here it

00:06:54,090 --> 00:07:02,310
will be it will be automatically in a

00:06:59,610 --> 00:07:07,760
slot with the method

00:07:02,310 --> 00:07:10,560
this guy is an example of lifecycle hook

00:07:07,760 --> 00:07:16,199
which are there there are special names

00:07:10,560 --> 00:07:17,940
like create it mount it so if you write

00:07:16,199 --> 00:07:20,870
it like this he will understand

00:07:17,940 --> 00:07:25,380
automatically that this is a lifetime

00:07:20,870 --> 00:07:30,030
lifecycle event you can also create a

00:07:25,380 --> 00:07:32,700
computed property like this where you

00:07:30,030 --> 00:07:36,960
put a get setter getter

00:07:32,700 --> 00:07:40,190
actually get get keyword in front of it

00:07:36,960 --> 00:07:46,020
so it will it will automatically create

00:07:40,190 --> 00:07:49,860
for you the slot with the computed

00:07:46,020 --> 00:07:53,280
properties so it's quite handy stuff if

00:07:49,860 --> 00:08:00,870
you if you like to write less and

00:07:53,280 --> 00:08:03,300
produce more this is what what this view

00:08:00,870 --> 00:08:08,789
class component is doing for you out of

00:08:03,300 --> 00:08:15,539
the box so now there is official support

00:08:08,789 --> 00:08:17,430
for typescript in view click you can

00:08:15,539 --> 00:08:23,150
create actually now project with the

00:08:17,430 --> 00:08:27,060
typescript with only two commands so

00:08:23,150 --> 00:08:31,919
first one is that command it installs to

00:08:27,060 --> 00:08:36,089
view click and second comment is create

00:08:31,919 --> 00:08:37,829
your project so you just call view

00:08:36,089 --> 00:08:40,139
create my project

00:08:37,829 --> 00:08:43,409
and then you will you will get into

00:08:40,139 --> 00:08:46,259
wizard that I will show in a minute how

00:08:43,409 --> 00:08:51,829
it looks like there is also another way

00:08:46,259 --> 00:08:56,569
you can download templates from official

00:08:51,829 --> 00:09:01,019
official repositories from you like

00:08:56,569 --> 00:09:02,939
bujji's templates and running it

00:09:01,019 --> 00:09:07,259
actually it's quite easy you just turn

00:09:02,939 --> 00:09:10,679
on it and it's just after installing so

00:09:07,259 --> 00:09:16,579
using NPM install you can you can use

00:09:10,679 --> 00:09:21,299
command and PM's run surf or NPM run dev

00:09:16,579 --> 00:09:24,179
so what happens if you now download the

00:09:21,299 --> 00:09:28,079
view clean and you create a project over

00:09:24,179 --> 00:09:34,470
view create my project you will you will

00:09:28,079 --> 00:09:38,160
get this screen where you can choose

00:09:34,470 --> 00:09:42,449
which features you want in your new

00:09:38,160 --> 00:09:44,129
project you can choose typescript if you

00:09:42,449 --> 00:09:49,230
leave the typescript option it will

00:09:44,129 --> 00:09:54,389
create for you automatically project

00:09:49,230 --> 00:09:56,220
that is in ACMA script so Babel if you

00:09:54,389 --> 00:10:00,179
choose typescript it will be typescript

00:09:56,220 --> 00:10:04,589
only you can choose if you want router

00:10:00,179 --> 00:10:10,049
or UX you can choose if you want testing

00:10:04,589 --> 00:10:12,209
framework or not so I recommend it for

00:10:10,049 --> 00:10:15,629
you if you didn't try it you can try it

00:10:12,209 --> 00:10:19,139
not right now it's only two commands you

00:10:15,629 --> 00:10:23,040
need now to get there and you can you

00:10:19,139 --> 00:10:25,559
can start experimenting with those what

00:10:23,040 --> 00:10:28,949
it creates for you this is this is the

00:10:25,559 --> 00:10:33,240
structure you get after this those two

00:10:28,949 --> 00:10:40,259
commands it will set up for you

00:10:33,240 --> 00:10:42,959
there is also question inside a while as

00:10:40,259 --> 00:10:45,600
a second step if you want the

00:10:42,959 --> 00:10:48,990
configuration file separately or if you

00:10:45,600 --> 00:10:50,990
want it all in in one file so in this

00:10:48,990 --> 00:10:57,880
case I put the option

00:10:50,990 --> 00:11:02,089
that configuration should be all

00:10:57,880 --> 00:11:07,120
separately so this is the part down here

00:11:02,089 --> 00:11:07,120
where you have configuration for

00:11:07,779 --> 00:11:20,120
typescript packages and CSS and so on in

00:11:17,209 --> 00:11:21,500
a full option where you use CSS rotor

00:11:20,120 --> 00:11:24,500
and stuff like that

00:11:21,500 --> 00:11:29,770
you will get the structure with the

00:11:24,500 --> 00:11:32,899
store automatically search for you so

00:11:29,770 --> 00:11:38,120
from there it's just one command running

00:11:32,899 --> 00:11:40,850
and pmm self and it will be to run the

00:11:38,120 --> 00:11:45,310
application that it create for you so

00:11:40,850 --> 00:11:49,520
you can from there start start

00:11:45,310 --> 00:11:52,970
experimenting for experienced users you

00:11:49,520 --> 00:11:55,940
usually need then afterwards start when

00:11:52,970 --> 00:12:00,410
starting bigger project customize the

00:11:55,940 --> 00:12:03,160
settings so this is something you should

00:12:00,410 --> 00:12:06,740
look at then later on how the config

00:12:03,160 --> 00:12:12,500
stuff works so by default it's using

00:12:06,740 --> 00:12:14,630
webpack so if you guys know or you are

00:12:12,500 --> 00:12:17,390
familiar with the web pack it's

00:12:14,630 --> 00:12:20,779
automatically there in this case it's

00:12:17,390 --> 00:12:25,940
kind of a global installed and if you

00:12:20,779 --> 00:12:28,550
want if you want custom config is you

00:12:25,940 --> 00:12:36,290
probably in a project in a bigger

00:12:28,550 --> 00:12:40,370
project requires you can put it also we

00:12:36,290 --> 00:12:47,209
option through view config there is a

00:12:40,370 --> 00:12:52,040
way how to do this so let's use this

00:12:47,209 --> 00:12:57,200
example that it created it created for

00:12:52,040 --> 00:13:02,900
you some simple hello world example in

00:12:57,200 --> 00:13:04,100
this case it's using library called view

00:13:02,900 --> 00:13:10,250
property

00:13:04,100 --> 00:13:13,420
later it's extended library which is

00:13:10,250 --> 00:13:18,589
right now I would say semi-official

00:13:13,420 --> 00:13:21,259
so it's using the component from review

00:13:18,589 --> 00:13:28,420
class component which is official and

00:13:21,259 --> 00:13:32,750
it's adding some more decorators over

00:13:28,420 --> 00:13:36,860
this simple component so as you can see

00:13:32,750 --> 00:13:41,269
right now right here there is a

00:13:36,860 --> 00:13:44,480
decorator called prop and this if you

00:13:41,269 --> 00:13:49,250
put the crater in front of any any

00:13:44,480 --> 00:13:52,670
variable you know you that you create in

00:13:49,250 --> 00:13:55,300
your in your view class it will be

00:13:52,670 --> 00:13:58,639
automatically transformed into property

00:13:55,300 --> 00:14:03,440
so this is kind of handy that you only

00:13:58,639 --> 00:14:08,269
mark with with with some decorators the

00:14:03,440 --> 00:14:14,930
properties or leaf leave the variables

00:14:08,269 --> 00:14:16,819
as they are this is also handy stuff in

00:14:14,930 --> 00:14:19,850
a previous examples if you would be

00:14:16,819 --> 00:14:23,540
using the only component which you can

00:14:19,850 --> 00:14:27,709
use also you saw the property was

00:14:23,540 --> 00:14:32,750
defined in a break it's right here in as

00:14:27,709 --> 00:14:35,779
a parameter of this decorator so there

00:14:32,750 --> 00:14:41,630
are two ways actually doing it but I

00:14:35,779 --> 00:14:48,949
think the decorators helps you to write

00:14:41,630 --> 00:14:50,990
less because in in a classic way using

00:14:48,949 --> 00:14:53,389
only view class component you would have

00:14:50,990 --> 00:14:58,880
to define kind of the property twice so

00:14:53,389 --> 00:15:05,300
in this case it's saving you one step of

00:14:58,880 --> 00:15:11,959
writing again so your your component is

00:15:05,300 --> 00:15:15,529
actually smaller at the end so this is

00:15:11,959 --> 00:15:17,870
how looks for example the viewer outer

00:15:15,529 --> 00:15:22,940
if you set up project with

00:15:17,870 --> 00:15:27,800
typescript nothing really fancy here the

00:15:22,940 --> 00:15:34,390
imports looks the same like when you are

00:15:27,800 --> 00:15:40,040
using babel this is how it created

00:15:34,390 --> 00:15:42,890
Buicks store for you again nothing

00:15:40,040 --> 00:15:46,000
special you can now extend it there are

00:15:42,890 --> 00:15:48,350
some there is some better way or

00:15:46,000 --> 00:15:50,210
alternative way how you can write the

00:15:48,350 --> 00:15:58,279
view X store we will see that in a later

00:15:50,210 --> 00:16:01,120
example what tools you should know for

00:15:58,279 --> 00:16:03,890
developing you should use you can use

00:16:01,120 --> 00:16:07,370
Visual Studio community or you can use

00:16:03,890 --> 00:16:14,330
Visual Studio code there is a plugin

00:16:07,370 --> 00:16:15,170
called Twitter which brings also among

00:16:14,330 --> 00:16:18,470
other things

00:16:15,170 --> 00:16:25,490
typescript intelligence into your view

00:16:18,470 --> 00:16:29,050
single file component files so if you

00:16:25,490 --> 00:16:32,270
have if I get back here

00:16:29,050 --> 00:16:35,060
let's am here here in this component I

00:16:32,270 --> 00:16:38,000
would normally because this component

00:16:35,060 --> 00:16:40,790
contains template so as the typescript I

00:16:38,000 --> 00:16:45,200
would normally don't have or wouldn't

00:16:40,790 --> 00:16:49,100
have typescript intelligence here but

00:16:45,200 --> 00:16:51,110
since I'm using this plug-in it will

00:16:49,100 --> 00:16:53,990
gives me it will give me shape and

00:16:51,110 --> 00:16:58,700
methods and everything that he knows

00:16:53,990 --> 00:17:03,339
about this so this is to work which is

00:16:58,700 --> 00:17:08,209
connected to also to this little plugin

00:17:03,339 --> 00:17:11,449
which is kind of mask to have in Visual

00:17:08,209 --> 00:17:13,819
Studio code but there are also other

00:17:11,449 --> 00:17:18,140
plugins which you can use like snippets

00:17:13,819 --> 00:17:22,939
and typescript and stuff like that handy

00:17:18,140 --> 00:17:27,770
handy stuff when developing so when you

00:17:22,939 --> 00:17:31,350
get to real world why would you need the

00:17:27,770 --> 00:17:36,419
typescript at all the question is

00:17:31,350 --> 00:17:39,270
explained or cleaner if you have some

00:17:36,419 --> 00:17:44,370
domain objects and you would say okay I

00:17:39,270 --> 00:17:48,240
need to I need to somehow describe my

00:17:44,370 --> 00:17:51,179
domain and and and I want to know what

00:17:48,240 --> 00:17:53,669
the shape of my objects are and these

00:17:51,179 --> 00:17:57,200
these objects are kind of complex and I

00:17:53,669 --> 00:18:01,049
want to describe as much as I can so

00:17:57,200 --> 00:18:04,880
here you can see on the left part in a

00:18:01,049 --> 00:18:13,409
simple example of how you can you can

00:18:04,880 --> 00:18:17,490
define some blog post object there is

00:18:13,409 --> 00:18:21,830
some category as a complex object as a

00:18:17,490 --> 00:18:25,250
property on this post sorry sorry let's

00:18:21,830 --> 00:18:25,250
go back

00:18:30,450 --> 00:18:40,009
so one post has a title and a Content

00:18:33,769 --> 00:18:40,009
among other things as a ID an account

00:18:40,340 --> 00:18:50,759
you can use object-oriented way now in a

00:18:44,970 --> 00:18:54,600
typescript which you can use now to

00:18:50,759 --> 00:18:56,759
extend the functionality of your object

00:18:54,600 --> 00:19:02,609
which is kind of fun

00:18:56,759 --> 00:19:05,999
now so first thing you map the domain

00:19:02,609 --> 00:19:08,369
somehow and second thing you can now

00:19:05,999 --> 00:19:11,999
import this domain into your view

00:19:08,369 --> 00:19:19,049
component and start using it so in this

00:19:11,999 --> 00:19:24,049
example I created here component which

00:19:19,049 --> 00:19:29,279
has a variable inside code post and

00:19:24,049 --> 00:19:33,139
putting the type behind so from now on

00:19:29,279 --> 00:19:37,440
every time you are doing some something

00:19:33,139 --> 00:19:41,220
some operation or or accessing some

00:19:37,440 --> 00:19:45,659
property of this guy of this post it

00:19:41,220 --> 00:19:51,679
will offer automatically for you every

00:19:45,659 --> 00:19:51,679
object that you did is defined here so

00:19:51,799 --> 00:20:00,960
how it works now if you access this

00:19:56,609 --> 00:20:04,769
property it's offering you title content

00:20:00,960 --> 00:20:11,029
ID and all the stuff that you previously

00:20:04,769 --> 00:20:16,489
defined on those objects automatically

00:20:11,029 --> 00:20:20,460
you can also now access automatically

00:20:16,489 --> 00:20:24,600
complex objects that you have in your

00:20:20,460 --> 00:20:28,080
complex object so post has a list of

00:20:24,600 --> 00:20:31,080
categories you can access the categories

00:20:28,080 --> 00:20:33,659
and even on the category itself it

00:20:31,080 --> 00:20:36,419
offers you all the properties from the

00:20:33,659 --> 00:20:42,720
category so you don't have to look any

00:20:36,419 --> 00:20:46,310
more back or going back in your code

00:20:42,720 --> 00:20:51,080
what was the name of the property

00:20:46,310 --> 00:20:55,710
because it's telling you all the way and

00:20:51,080 --> 00:20:59,550
there is no case now if I save it and I

00:20:55,710 --> 00:21:01,950
would compile this program there is no

00:20:59,550 --> 00:21:05,280
way he would allow you to put the wrong

00:21:01,950 --> 00:21:08,250
name or wrong property because he knows

00:21:05,280 --> 00:21:12,930
all the properties all the objects you

00:21:08,250 --> 00:21:18,420
are using so you're 100% type safe and

00:21:12,930 --> 00:21:23,490
this is the trick which which or feature

00:21:18,420 --> 00:21:26,970
that typescript brings for you out of

00:21:23,490 --> 00:21:36,390
the box so it's intelligent and type

00:21:26,970 --> 00:21:39,900
safety and using complex object in this

00:21:36,390 --> 00:21:42,720
example let's imagine that you have now

00:21:39,900 --> 00:21:48,960
application that are that wants to

00:21:42,720 --> 00:21:52,680
display some posts and lets you create

00:21:48,960 --> 00:21:56,220
some component called post post dot view

00:21:52,680 --> 00:22:00,510
and you want to reuse this component now

00:21:56,220 --> 00:22:04,530
and there are two ways this error is

00:22:00,510 --> 00:22:07,440
quite common you can now use this comp

00:22:04,530 --> 00:22:12,960
let's say this component existence it

00:22:07,440 --> 00:22:15,960
called it's called post dot view you

00:22:12,960 --> 00:22:18,630
want to reuse it on to think two places

00:22:15,960 --> 00:22:22,020
now in your program let's say you have a

00:22:18,630 --> 00:22:24,960
list with with the post and let's say

00:22:22,020 --> 00:22:29,670
you want to display last five five of

00:22:24,960 --> 00:22:30,770
them so you will create some view for

00:22:29,670 --> 00:22:34,710
[Music]

00:22:30,770 --> 00:22:37,620
where you using this component and let's

00:22:34,710 --> 00:22:44,760
let's say there is a link on each of

00:22:37,620 --> 00:22:48,150
this on this post where you can access

00:22:44,760 --> 00:22:51,030
it actually in a detail where it brings

00:22:48,150 --> 00:22:57,470
you to the post itself so the second

00:22:51,030 --> 00:23:06,680
place where you reduce this component

00:22:57,470 --> 00:23:13,190
is is actually in a detail so this stuff

00:23:06,680 --> 00:23:19,200
happens often where you're trying to use

00:23:13,190 --> 00:23:22,910
property when you are using actually in

00:23:19,200 --> 00:23:30,180
a component only the post as a property

00:23:22,910 --> 00:23:33,330
this is not enough to do you have to

00:23:30,180 --> 00:23:37,620
always create kind of shadow property of

00:23:33,330 --> 00:23:41,100
this guy if you are if you are using it

00:23:37,620 --> 00:23:47,970
as I said only two places at the same

00:23:41,100 --> 00:23:49,320
time in your program one way is to use

00:23:47,970 --> 00:23:54,210
it in a list

00:23:49,320 --> 00:23:59,280
another way is you use it as a via view

00:23:54,210 --> 00:24:06,240
router let's say there is some part post

00:23:59,280 --> 00:24:11,130
/ 61 so this way you ensure your your

00:24:06,240 --> 00:24:20,820
component will be kind of safe from this

00:24:11,130 --> 00:24:29,600
error another example using prop and M

00:24:20,820 --> 00:24:32,880
it let's say you have a post there and

00:24:29,600 --> 00:24:42,680
you want to delete the post somewhere so

00:24:32,880 --> 00:24:46,980
you create a link which takes post ID

00:24:42,680 --> 00:24:53,160
and you want to omit this event in a

00:24:46,980 --> 00:24:57,750
list that you deleted this post and the

00:24:53,160 --> 00:25:02,430
list itself are is displaying those post

00:24:57,750 --> 00:25:06,050
here and wants to fetch the data again

00:25:02,430 --> 00:25:08,670
because you deleted one of the posts so

00:25:06,050 --> 00:25:10,400
this is how you do it in in a type

00:25:08,670 --> 00:25:18,350
script

00:25:10,400 --> 00:25:18,350
again you're using the component

00:25:19,760 --> 00:25:28,530
decorator and using over this you get

00:25:26,250 --> 00:25:32,420
all the variables now the on view

00:25:28,530 --> 00:25:37,470
instance which one of those are is the

00:25:32,420 --> 00:25:43,250
Hammett method in this case I created it

00:25:37,470 --> 00:25:47,700
on delete post event which is then used

00:25:43,250 --> 00:25:51,420
on post list which is another control

00:25:47,700 --> 00:25:54,150
which is using the post and you see you

00:25:51,420 --> 00:25:58,920
can see the syntax is quite the same

00:25:54,150 --> 00:26:02,130
here you create add on delete post was

00:25:58,920 --> 00:26:04,590
deleted and this is how you can react on

00:26:02,130 --> 00:26:07,650
this so and again you can see the

00:26:04,590 --> 00:26:11,640
parameter here right now as ID is a

00:26:07,650 --> 00:26:14,910
number you can access it and you can do

00:26:11,640 --> 00:26:18,360
let's say it can be complex object or

00:26:14,910 --> 00:26:22,730
anything you want you can access all the

00:26:18,360 --> 00:26:22,730
properties and all the operations that

00:26:23,480 --> 00:26:32,060
that this object offers so again this is

00:26:27,540 --> 00:26:35,190
type safety and this is how you mark

00:26:32,060 --> 00:26:43,290
mark those types even when you're

00:26:35,190 --> 00:26:51,600
raising events with the view another

00:26:43,290 --> 00:26:54,600
example would be let say you have a list

00:26:51,600 --> 00:26:57,780
with those posts and let's say there are

00:26:54,600 --> 00:27:01,860
lots of them and you want to scroll to

00:26:57,780 --> 00:27:03,960
some particle one because normally type

00:27:01,860 --> 00:27:10,770
script doesn't allow you or doesn't show

00:27:03,960 --> 00:27:14,100
you the the methods unless he knows what

00:27:10,770 --> 00:27:17,880
kind of object it is so this is one of

00:27:14,100 --> 00:27:21,960
the examples where you can go lower in

00:27:17,880 --> 00:27:23,100
here he to some default types and you

00:27:21,960 --> 00:27:25,410
can actually use the

00:27:23,100 --> 00:27:29,270
methods which are in plain plain

00:27:25,410 --> 00:27:36,960
JavaScript there so in this case just

00:27:29,270 --> 00:27:42,470
scrolling on some specific item which

00:27:36,960 --> 00:27:46,710
you before marked as a ref which is

00:27:42,470 --> 00:27:49,549
connected to the view itself but you

00:27:46,710 --> 00:27:56,610
just think what kind of object it is so

00:27:49,549 --> 00:28:02,640
this is how you access lower JavaScript

00:27:56,610 --> 00:28:06,000
functions with typescript this is kind

00:28:02,640 --> 00:28:10,020
of the more advanced example how you

00:28:06,000 --> 00:28:15,390
create vivek stove ux store

00:28:10,020 --> 00:28:20,280
we are typescript you can see now there

00:28:15,390 --> 00:28:27,299
is the state passed as a type to the

00:28:20,280 --> 00:28:31,200
view store so in this part state is an

00:28:27,299 --> 00:28:34,289
interface which you define somewhere

00:28:31,200 --> 00:28:36,480
before which describes your data in my

00:28:34,289 --> 00:28:40,110
case there is a there is a shape of

00:28:36,480 --> 00:28:43,260
database and there is a shape of some

00:28:40,110 --> 00:28:48,030
variables which one of those variables

00:28:43,260 --> 00:28:53,010
is can be like your language date format

00:28:48,030 --> 00:28:58,429
and so on and you are using it then as a

00:28:53,010 --> 00:29:02,549
type here creating viewing store and

00:28:58,429 --> 00:29:08,039
creating mutations with those types

00:29:02,549 --> 00:29:10,530
again so again any anytime next time you

00:29:08,039 --> 00:29:14,580
access to view X store there are some

00:29:10,530 --> 00:29:17,840
types and you can you can gain again all

00:29:14,580 --> 00:29:20,220
the intelligence and all the information

00:29:17,840 --> 00:29:23,150
about them all the properties and

00:29:20,220 --> 00:29:26,150
methods that are connected to those

00:29:23,150 --> 00:29:26,150
objects

00:29:29,470 --> 00:29:38,440
one example also which is good to know

00:29:32,850 --> 00:29:44,020
you can use an event bus you can create

00:29:38,440 --> 00:29:47,320
a variable in a store called bus right

00:29:44,020 --> 00:29:51,970
here which gets B which can be view

00:29:47,320 --> 00:29:56,770
instance itself and you can now use it

00:29:51,970 --> 00:30:02,110
for emitting events in cases where you

00:29:56,770 --> 00:30:05,350
don't need to mutate anything just to

00:30:02,110 --> 00:30:08,020
want to raise just if in case you want

00:30:05,350 --> 00:30:10,840
to raise some some event and somebody

00:30:08,020 --> 00:30:15,060
else somewhere in your program will

00:30:10,840 --> 00:30:18,400
react on this event this is part here

00:30:15,060 --> 00:30:22,330
which you are reacting on on saving the

00:30:18,400 --> 00:30:26,080
post which again accepts this post as a

00:30:22,330 --> 00:30:28,810
parameter so you can again access all

00:30:26,080 --> 00:30:32,170
the information from the post here and

00:30:28,810 --> 00:30:35,530
do whatever you whatever the routine

00:30:32,170 --> 00:30:39,130
should do in your program so this is

00:30:35,530 --> 00:30:45,180
also kind of a clever way how to how to

00:30:39,130 --> 00:30:49,630
create an event pass with the view okay

00:30:45,180 --> 00:30:56,740
and last example would be kind of how

00:30:49,630 --> 00:30:59,620
you create a type save event bus if you

00:30:56,740 --> 00:31:03,220
want to be completely sure what object

00:30:59,620 --> 00:31:07,210
it is and get rid of those strings that

00:31:03,220 --> 00:31:09,520
that you using you can put you can

00:31:07,210 --> 00:31:13,450
create object with those methods that

00:31:09,520 --> 00:31:16,600
are using those strings which your which

00:31:13,450 --> 00:31:20,640
you at the end tag encapsulate and right

00:31:16,600 --> 00:31:26,830
now you can from their own you can call

00:31:20,640 --> 00:31:30,970
the methods here with full intellisense

00:31:26,830 --> 00:31:33,760
no strings and food type safety in your

00:31:30,970 --> 00:31:34,210
program so in this case is on screenshot

00:31:33,760 --> 00:31:37,930
here

00:31:34,210 --> 00:31:40,570
it knows all the all the methods on the

00:31:37,930 --> 00:31:42,390
bus on the bus all the events on the bus

00:31:40,570 --> 00:31:44,700
that can happen

00:31:42,390 --> 00:31:49,890
all the parameters so now you you can

00:31:44,700 --> 00:31:54,030
from there on you cannot do any mistake

00:31:49,890 --> 00:31:57,650
in your program so this would be for you

00:31:54,030 --> 00:32:01,850
type script I hope it gives you some

00:31:57,650 --> 00:32:05,030
inspiration and you can check my github

00:32:01,850 --> 00:32:05,030

YouTube URL: https://www.youtube.com/watch?v=sc42bHtkJs4


