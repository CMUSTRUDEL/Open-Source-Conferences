Title: Vue.js, Authentication with Vue.js and Laravel, January 2018
Publication date: 2018-02-24
Playlist: Vue.js Vienna
Description: 
	Philip Peinsold will give a talk about how byte heroes GmbH are handling Vue.js front end authentication with a Laravel passport backend.
Captions: 
	00:00:00,030 --> 00:00:06,120
my name is Philip I'm a CTO of bite

00:00:03,000 --> 00:00:08,069
heroes we are the creators of the first

00:00:06,120 --> 00:00:10,920
cryptocurrency of Austria which is

00:00:08,069 --> 00:00:15,240
called hero coin with the ticker symbol

00:00:10,920 --> 00:00:19,770
play and I have the honor to give a

00:00:15,240 --> 00:00:24,869
little talk today about a topic which we

00:00:19,770 --> 00:00:27,779
faced in the last few weeks it is about

00:00:24,869 --> 00:00:33,840
authentication with laravel passport and

00:00:27,779 --> 00:00:36,210
you chess what will I talk about I will

00:00:33,840 --> 00:00:40,550
talk about first of all the backhand a

00:00:36,210 --> 00:00:44,370
little bit about letter of Passport

00:00:40,550 --> 00:00:47,250
what it is why using it how to use it

00:00:44,370 --> 00:00:49,469
but I will not go in to great detail

00:00:47,250 --> 00:00:54,110
because this is a beauteous Meetup and

00:00:49,469 --> 00:00:58,620
let's have details about VG s and not

00:00:54,110 --> 00:01:00,719
laravel of PHP here and then we are

00:00:58,620 --> 00:01:02,760
looking at the front end at the

00:01:00,719 --> 00:01:06,510
beauteous front and how to get the

00:01:02,760 --> 00:01:11,970
access token from laravel passport how

00:01:06,510 --> 00:01:16,409
to store it and how to use it first of

00:01:11,970 --> 00:01:21,420
all what is laravel Passport it's an

00:01:16,409 --> 00:01:24,259
OAuth 2 implementation over to is the

00:01:21,420 --> 00:01:27,240
region ruler of authentication currently

00:01:24,259 --> 00:01:31,170
Facebook Twitter Linkedin and all of the

00:01:27,240 --> 00:01:33,060
services you use over to but the

00:01:31,170 --> 00:01:34,920
implementation is quite complex and

00:01:33,060 --> 00:01:39,299
difficult if you build it up from

00:01:34,920 --> 00:01:42,659
scratch so passport is a full order to

00:01:39,299 --> 00:01:46,040
server implementation and it uses the

00:01:42,659 --> 00:01:49,500
league order to implementation as basis

00:01:46,040 --> 00:01:54,869
and provides easy to learn and easy to

00:01:49,500 --> 00:01:57,990
implement some drugs so you can import

00:01:54,869 --> 00:02:00,630
you can use the aerial passport and have

00:01:57,990 --> 00:02:04,920
a complete over to server implementation

00:02:00,630 --> 00:02:08,879
into in your product in your project

00:02:04,920 --> 00:02:12,330
I will not go until here just a short

00:02:08,879 --> 00:02:13,290
explanation of what - what is it about

00:02:12,330 --> 00:02:15,659
you

00:02:13,290 --> 00:02:19,200
the application you have a resource

00:02:15,659 --> 00:02:23,940
owner and first of all you need to

00:02:19,200 --> 00:02:25,769
request to the resource owner which gets

00:02:23,940 --> 00:02:29,159
back with a naturalization grant and

00:02:25,769 --> 00:02:31,920
then the altar is a the application can

00:02:29,159 --> 00:02:34,980
ask the authorization server with the

00:02:31,920 --> 00:02:37,349
grant for an token and if everything is

00:02:34,980 --> 00:02:42,090
correct the application gets a token

00:02:37,349 --> 00:02:45,150
back and can access the the resource on

00:02:42,090 --> 00:02:48,450
the server with this access token that's

00:02:45,150 --> 00:02:53,940
the basic fundamental thing of order two

00:02:48,450 --> 00:02:57,290
in detail it's much more complex so why

00:02:53,940 --> 00:03:00,599
and when do you use lateral Passport

00:02:57,290 --> 00:03:03,329
think about you want to separate your

00:03:00,599 --> 00:03:05,430
back-end and front-end because this is

00:03:03,329 --> 00:03:08,629
what we are currently doing or what we

00:03:05,430 --> 00:03:12,359
have done the last few weeks and months

00:03:08,629 --> 00:03:15,150
it makes sense to do this because you

00:03:12,359 --> 00:03:19,500
can reuse your back-end with mobile

00:03:15,150 --> 00:03:21,780
applications for Android iOS and your

00:03:19,500 --> 00:03:24,959
web application your weapon front your

00:03:21,780 --> 00:03:27,780
web from that so you do not have to

00:03:24,959 --> 00:03:31,019
maintain multiple backends and this is

00:03:27,780 --> 00:03:33,780
the sense of separating back-end from

00:03:31,019 --> 00:03:39,169
front end and it's also currently best

00:03:33,780 --> 00:03:41,579
practice so you should do it but if you

00:03:39,169 --> 00:03:43,680
disconnect the backend from front end

00:03:41,579 --> 00:03:47,519
normally you do not have sessions

00:03:43,680 --> 00:03:50,239
anymore right you do not have a web

00:03:47,519 --> 00:03:52,410
session where you can store your user in

00:03:50,239 --> 00:03:56,400
because the backend is somewhere else

00:03:52,410 --> 00:04:01,079
and therefore your you are implementing

00:03:56,400 --> 00:04:03,900
an API and the API typically uses tokens

00:04:01,079 --> 00:04:07,470
to authenticate users so every time when

00:04:03,900 --> 00:04:10,230
you access the API you need to send API

00:04:07,470 --> 00:04:12,299
token with it an access token so that

00:04:10,230 --> 00:04:17,400
the back-end knows which user wants to

00:04:12,299 --> 00:04:20,459
request the resource right so if you

00:04:17,400 --> 00:04:22,890
have to need for a secure API or give

00:04:20,459 --> 00:04:25,040
others a secure way to consume your API

00:04:22,890 --> 00:04:29,030
then you need access to

00:04:25,040 --> 00:04:31,490
once and then it's it makes sense to use

00:04:29,030 --> 00:04:34,850
the word to implementation of lateral

00:04:31,490 --> 00:04:37,280
passport so what are you doing if you

00:04:34,850 --> 00:04:39,140
want to use lateral passport for first

00:04:37,280 --> 00:04:42,950
of all you need to set up a lateral

00:04:39,140 --> 00:04:45,550
project I will not go into into that but

00:04:42,950 --> 00:04:48,880
if you have the laravel project you just

00:04:45,550 --> 00:04:52,030
install laravel passport with composer

00:04:48,880 --> 00:04:55,010
composes the package manager of laravel

00:04:52,030 --> 00:04:57,740
and you just say composer require a

00:04:55,010 --> 00:05:00,260
level passport and then this package is

00:04:57,740 --> 00:05:01,240
included into your project as simple as

00:05:00,260 --> 00:05:05,710
that

00:05:01,240 --> 00:05:09,770
afterwards lateral passport needs some

00:05:05,710 --> 00:05:14,180
data infrastructure so it needs tables

00:05:09,770 --> 00:05:19,700
in your database and you simply need to

00:05:14,180 --> 00:05:22,760
call the mic rate you need to execute

00:05:19,700 --> 00:05:25,370
PHP artisan migrate and then all the

00:05:22,760 --> 00:05:29,110
tables you need are in your database so

00:05:25,370 --> 00:05:32,660
easy setup for this for this as well

00:05:29,110 --> 00:05:36,470
afterwards we need some some encryption

00:05:32,660 --> 00:05:39,110
keys and seeds the database with basic

00:05:36,470 --> 00:05:44,240
data and therefore you would call PHP

00:05:39,110 --> 00:05:47,450
artisan passport in stock and then we

00:05:44,240 --> 00:05:49,450
have a look on the user model because

00:05:47,450 --> 00:05:54,380
the user is the one which gets

00:05:49,450 --> 00:05:57,110
authenticated so you need to extend your

00:05:54,380 --> 00:05:59,990
user model with a trade which also comes

00:05:57,110 --> 00:06:03,470
from a package and the trade is called

00:05:59,990 --> 00:06:05,420
has API tokens and it enhances the

00:06:03,470 --> 00:06:07,790
functionality of your user model so you

00:06:05,420 --> 00:06:10,400
can call some functions like getting the

00:06:07,790 --> 00:06:15,980
token or getting the user by the token

00:06:10,400 --> 00:06:21,590
and something like that well needs

00:06:15,980 --> 00:06:26,180
routes because you talk to routes okay

00:06:21,590 --> 00:06:28,820
and to register this route you need to

00:06:26,180 --> 00:06:31,310
call passport routes in the boot method

00:06:28,820 --> 00:06:34,280
of your out service provider it's a

00:06:31,310 --> 00:06:36,030
simple service provider of laravel which

00:06:34,280 --> 00:06:37,830
is always there it's

00:06:36,030 --> 00:06:39,630
only the one called you copy in there

00:06:37,830 --> 00:06:42,960
and then all the routes are set up for

00:06:39,630 --> 00:06:44,940
you all the routes you will need and at

00:06:42,960 --> 00:06:47,460
the end and then you're finished with

00:06:44,940 --> 00:06:51,330
setup and installing passport at the end

00:06:47,460 --> 00:06:54,150
you need to say or to tell you or your

00:06:51,330 --> 00:06:58,080
application that it should use API

00:06:54,150 --> 00:07:00,780
tokens it just use passport when it

00:06:58,080 --> 00:07:03,420
comes to authentication for your API so

00:07:00,780 --> 00:07:07,830
you just go into the config file which

00:07:03,420 --> 00:07:10,260
is called out dot pitch beam and set the

00:07:07,830 --> 00:07:13,020
driver option at the API authentication

00:07:10,260 --> 00:07:18,170
guard - Passport that's it that's the

00:07:13,020 --> 00:07:18,170
simple setup for for a literal Passport

00:07:18,210 --> 00:07:23,220
there's one problem we faced right at

00:07:21,060 --> 00:07:26,610
the beginning because we made this setup

00:07:23,220 --> 00:07:29,340
and we try to connect the front end with

00:07:26,610 --> 00:07:32,130
the back end and I guess some of you

00:07:29,340 --> 00:07:38,670
already know this access control allow

00:07:32,130 --> 00:07:43,740
origin era it's the famous course

00:07:38,670 --> 00:07:47,460
problem and what's missing here is that

00:07:43,740 --> 00:07:50,970
we did not set the correct education had

00:07:47,460 --> 00:07:53,520
us and that's also simple to do in

00:07:50,970 --> 00:07:57,050
laravel I just wanted to show it to you

00:07:53,520 --> 00:08:00,720
because we had to research for it a few

00:07:57,050 --> 00:08:04,290
minutes maybe an hour to find it but

00:08:00,720 --> 00:08:06,720
it's quite simple as I told you within

00:08:04,290 --> 00:08:09,600
the auto service provider you just

00:08:06,720 --> 00:08:12,270
copied the coop a spot routes to

00:08:09,600 --> 00:08:15,600
register your routes and you can wrap it

00:08:12,270 --> 00:08:18,960
into a route group with the middle

00:08:15,600 --> 00:08:21,840
workhorse yeah your own you're telling

00:08:18,960 --> 00:08:23,850
laravel that before going into the

00:08:21,840 --> 00:08:26,850
routes of Passport go through the

00:08:23,850 --> 00:08:31,350
middleware and within the middle where

00:08:26,850 --> 00:08:34,740
you just define headers yeah so in a

00:08:31,350 --> 00:08:36,950
pants headers to your request and then

00:08:34,740 --> 00:08:41,640
you're good to go and the course problem

00:08:36,950 --> 00:08:43,560
goes away right so think of that if you

00:08:41,640 --> 00:08:45,390
have the course problem you just need a

00:08:43,560 --> 00:08:48,470
middle way out to append the headers

00:08:45,390 --> 00:08:48,470
which are needed

00:08:49,779 --> 00:08:56,230
I want to show you I think it kind of

00:08:54,129 --> 00:09:02,939
stopped the presentation somehow there

00:08:56,230 --> 00:09:02,939
Robert does not work with this cape I

00:09:04,620 --> 00:09:11,110
just want to show you this is this game

00:09:08,470 --> 00:09:17,230
yeah thank you

00:09:11,110 --> 00:09:19,720
oh sorry it's a problem for me because I

00:09:17,230 --> 00:09:22,600
do not have the postman call here on

00:09:19,720 --> 00:09:27,730
this laptop so yeah unfortunately I

00:09:22,600 --> 00:09:30,040
can't show it to you I doesn't matter I

00:09:27,730 --> 00:09:35,620
can't explain it I just need to start

00:09:30,040 --> 00:09:38,339
the presentation again please I do not

00:09:35,620 --> 00:09:44,019
work with LibreOffice does anyone here

00:09:38,339 --> 00:09:47,379
okay so I'm not the only okay what I

00:09:44,019 --> 00:09:50,139
wanted to show you was that I want to

00:09:47,379 --> 00:09:51,730
want it to open postman I think most of

00:09:50,139 --> 00:09:55,269
you know it it's just a simple

00:09:51,730 --> 00:09:58,389
application where you can make calls to

00:09:55,269 --> 00:10:02,470
an API get to post anything like that

00:09:58,389 --> 00:10:05,800
and what I wanted to show you is that we

00:10:02,470 --> 00:10:09,250
can post now if we have set up their own

00:10:05,800 --> 00:10:12,100
passport we can post to the route Oh al

00:10:09,250 --> 00:10:14,709
token it's automatically integrated

00:10:12,100 --> 00:10:17,259
because you called already the passport

00:10:14,709 --> 00:10:22,000
route command in the out service

00:10:17,259 --> 00:10:27,129
provider and if you have setup granted

00:10:22,000 --> 00:10:29,079
correctly then you will get the secret

00:10:27,129 --> 00:10:31,629
correctly then you will get back an

00:10:29,079 --> 00:10:36,000
access token and this is what I wanted

00:10:31,629 --> 00:10:36,000
to show you that you can access the

00:10:36,329 --> 00:10:42,459
resource user with the access token but

00:10:40,149 --> 00:10:46,300
we will see it in the in the

00:10:42,459 --> 00:10:49,120
presentation afterwards with you so

00:10:46,300 --> 00:10:51,759
let's go on with you Jess so the back

00:10:49,120 --> 00:10:54,790
end is finished now we have passbook

00:10:51,759 --> 00:10:56,920
passport setup we have the course

00:10:54,790 --> 00:11:02,510
middleware setup

00:10:56,920 --> 00:11:06,680
so it's good to go now what we want to

00:11:02,510 --> 00:11:09,770
do in the front end we want to use the

00:11:06,680 --> 00:11:11,870
world pass password grant client it's

00:11:09,770 --> 00:11:14,630
one grant client of the world

00:11:11,870 --> 00:11:19,400
implementation and it's the one where

00:11:14,630 --> 00:11:22,400
you send a username and a password and

00:11:19,400 --> 00:11:27,680
get back an access token this is what we

00:11:22,400 --> 00:11:29,750
want there are also other other grant

00:11:27,680 --> 00:11:32,060
clients for machine to machine

00:11:29,750 --> 00:11:36,230
communication for example but this is

00:11:32,060 --> 00:11:39,530
the interesting one for normal logins we

00:11:36,230 --> 00:11:42,890
use X yes how many of you know X yes

00:11:39,530 --> 00:11:47,870
yeah so most of you it's a simple

00:11:42,890 --> 00:11:51,320
package for creating calls to an API for

00:11:47,870 --> 00:11:54,170
example or a web service and I think

00:11:51,320 --> 00:11:58,850
it's a great one so I can recommend to

00:11:54,170 --> 00:12:04,010
you using that and if we post to OAuth

00:11:58,850 --> 00:12:07,280
token which I wanted to show you we need

00:12:04,010 --> 00:12:09,800
to send some data with it we need to

00:12:07,280 --> 00:12:13,520
send the grant type which is the

00:12:09,800 --> 00:12:18,380
passport grant type we need to send the

00:12:13,520 --> 00:12:21,620
client I did what is the client ID as I

00:12:18,380 --> 00:12:24,860
told you before you have database tables

00:12:21,620 --> 00:12:28,610
and if you call the command passport

00:12:24,860 --> 00:12:32,560
install which we did then passport seeds

00:12:28,610 --> 00:12:35,540
the stables and it seeds the clients so

00:12:32,560 --> 00:12:37,880
after this comment you have two clients

00:12:35,540 --> 00:12:39,430
in your database and one of this client

00:12:37,880 --> 00:12:44,180
is the password grant client and

00:12:39,430 --> 00:12:48,520
normally it has the ID too so we send in

00:12:44,180 --> 00:12:52,070
grants type password and client ID - and

00:12:48,520 --> 00:12:54,380
then this client has a client secret in

00:12:52,070 --> 00:12:56,780
the database and you have just to copy

00:12:54,380 --> 00:13:02,630
it and paste it here in in the front end

00:12:56,780 --> 00:13:06,709
and then you are allowed to send data to

00:13:02,630 --> 00:13:08,060
passport and passport checks your

00:13:06,709 --> 00:13:11,180
username and

00:13:08,060 --> 00:13:15,410
password you sent with it so this are

00:13:11,180 --> 00:13:19,160
two data fields you additionally need if

00:13:15,410 --> 00:13:21,740
this is correct passport checks if this

00:13:19,160 --> 00:13:23,150
is correct in your database if it's

00:13:21,740 --> 00:13:25,550
correct then you will get back the

00:13:23,150 --> 00:13:29,900
access token and the access token is

00:13:25,550 --> 00:13:34,880
needed for further requests how does it

00:13:29,900 --> 00:13:36,800
look in code just simplify it if you

00:13:34,880 --> 00:13:41,090
have a look there we have the login

00:13:36,800 --> 00:13:44,000
function see the mouse know yeah after

00:13:41,090 --> 00:13:47,560
login function with a user and some

00:13:44,000 --> 00:13:50,840
passport which is a simple string input

00:13:47,560 --> 00:13:55,640
and the users just a user object because

00:13:50,840 --> 00:14:00,350
we are using typescript to to wrap the

00:13:55,640 --> 00:14:05,410
data and then we make the call the post

00:14:00,350 --> 00:14:09,140
call to our API endpoint this is simply

00:14:05,410 --> 00:14:11,840
variable in our environment it's

00:14:09,140 --> 00:14:16,460
localhost something yeah

00:14:11,840 --> 00:14:18,080
plus the OAuth / token so what we are

00:14:16,460 --> 00:14:23,900
doing now we're trying to get it open

00:14:18,080 --> 00:14:26,000
and in this part here you can see that

00:14:23,900 --> 00:14:28,310
we need to send the data which I talked

00:14:26,000 --> 00:14:30,560
before we need to grant up client ID

00:14:28,310 --> 00:14:33,860
client secret which is stored in

00:14:30,560 --> 00:14:37,540
environment files and then we are

00:14:33,860 --> 00:14:42,020
sending the user email and the password

00:14:37,540 --> 00:14:42,530
which was the input of the user simple

00:14:42,020 --> 00:14:46,940
as that

00:14:42,530 --> 00:14:50,000
and now the question is what are we

00:14:46,940 --> 00:14:52,670
doing with this access token because now

00:14:50,000 --> 00:14:54,380
we are getting the access token but we

00:14:52,670 --> 00:14:58,100
need the access token for further

00:14:54,380 --> 00:15:01,130
requests also so what are we doing and I

00:14:58,100 --> 00:15:04,100
think it's best practice currently is to

00:15:01,130 --> 00:15:06,500
store this access token into the local

00:15:04,100 --> 00:15:09,980
browser storage and this is what I

00:15:06,500 --> 00:15:14,410
wanted to show you it's quite simple

00:15:09,980 --> 00:15:18,800
with beauty s because you can just call

00:15:14,410 --> 00:15:21,800
the button you can see it a set made out

00:15:18,800 --> 00:15:26,689
and you can just call local storage set

00:15:21,800 --> 00:15:29,569
item then you give the key and then the

00:15:26,689 --> 00:15:31,970
token and we will see later in a short

00:15:29,569 --> 00:15:34,309
video that the token is then stored in

00:15:31,970 --> 00:15:36,230
the local storage and you can access it

00:15:34,309 --> 00:15:39,679
whenever you want and it's also

00:15:36,230 --> 00:15:42,889
persistent at the at the browser so a

00:15:39,679 --> 00:15:44,209
very cool thing additionally of course

00:15:42,889 --> 00:15:47,239
you can get it

00:15:44,209 --> 00:15:49,269
it's got function above just with local

00:15:47,239 --> 00:15:55,790
storage get item and the same key again

00:15:49,269 --> 00:15:58,129
simple as that yeah here you can see the

00:15:55,790 --> 00:16:02,119
complete function so we doing the login

00:15:58,129 --> 00:16:06,739
we try to get an access token and in the

00:16:02,119 --> 00:16:09,429
promise after that we save the access

00:16:06,739 --> 00:16:13,730
token to the local storage

00:16:09,429 --> 00:16:17,899
in addition here in this example we also

00:16:13,730 --> 00:16:20,629
save if the user locked in with email

00:16:17,899 --> 00:16:22,610
and password or with a social login like

00:16:20,629 --> 00:16:25,970
Facebook something like that I will also

00:16:22,610 --> 00:16:31,850
show that you would also get additional

00:16:25,970 --> 00:16:35,179
data like the expiry date like the token

00:16:31,850 --> 00:16:40,279
type which is normally birra birra token

00:16:35,179 --> 00:16:42,160
and the Refresh token if you ask

00:16:40,279 --> 00:16:45,589
yourself what is the Refresh token now

00:16:42,160 --> 00:16:49,040
we don't we do not use it because if the

00:16:45,589 --> 00:16:51,829
access token is expired then we force

00:16:49,040 --> 00:16:56,240
the user to login again it's simply a

00:16:51,829 --> 00:16:57,799
security feature for us but in the road

00:16:56,240 --> 00:17:01,850
to implementation you have the

00:16:57,799 --> 00:17:04,309
possibility if the token expires you can

00:17:01,850 --> 00:17:07,880
generate a new token with the Refresh

00:17:04,309 --> 00:17:09,649
token it's just a token which lasts a

00:17:07,880 --> 00:17:11,839
little bit longer than the normal access

00:17:09,649 --> 00:17:15,049
token and if your access token expires

00:17:11,839 --> 00:17:17,000
you can get a new access token with the

00:17:15,049 --> 00:17:19,039
Refresh token and you additionally

00:17:17,000 --> 00:17:21,409
additionally also get a new refresh

00:17:19,039 --> 00:17:26,059
token so in fact you can create a loop

00:17:21,409 --> 00:17:26,980
where you can stay logged in but we do

00:17:26,059 --> 00:17:34,000
not want this

00:17:26,980 --> 00:17:39,840
so just for security reasons good this

00:17:34,000 --> 00:17:42,910
is the use of the stored access token so

00:17:39,840 --> 00:17:45,340
we have an interceptor here it's quite

00:17:42,910 --> 00:17:50,410
cool in in Axios you can intercept your

00:17:45,340 --> 00:17:54,160
exes calls and add something to the

00:17:50,410 --> 00:17:57,190
calls before they are set to to the

00:17:54,160 --> 00:18:01,590
internet and what we are doing here

00:17:57,190 --> 00:18:07,120
every time when an access token is is

00:18:01,590 --> 00:18:11,230
called exist XS call is made sorry then

00:18:07,120 --> 00:18:14,350
we append the access token which we have

00:18:11,230 --> 00:18:17,080
in the local storage to this call so

00:18:14,350 --> 00:18:19,210
it's just a single point where you tell

00:18:17,080 --> 00:18:26,610
your application always when you call

00:18:19,210 --> 00:18:26,610
the API just add the access token ok

00:18:27,240 --> 00:18:33,310
this is a short video please have a look

00:18:30,130 --> 00:18:37,840
we try to log in now with email and

00:18:33,310 --> 00:18:42,210
password it's a simple mock-up and you

00:18:37,840 --> 00:18:42,210
will see then in the local storage and

00:18:44,280 --> 00:18:50,430
the local storage afterwards we have the

00:18:47,530 --> 00:18:51,670
access token in the local storage there

00:18:50,430 --> 00:18:55,150
ok

00:18:51,670 --> 00:18:57,580
it's called yeah it's called Texas token

00:18:55,150 --> 00:19:01,630
the key is access token and you can see

00:18:57,580 --> 00:19:04,540
the token in there ok we also store the

00:19:01,630 --> 00:19:07,090
login type as I said the user locked in

00:19:04,540 --> 00:19:08,410
with password and we store the token tab

00:19:07,090 --> 00:19:11,770
it is piera

00:19:08,410 --> 00:19:14,170
why do we do this because there are some

00:19:11,770 --> 00:19:16,750
other token types but you need to add

00:19:14,170 --> 00:19:21,130
this to your API call

00:19:16,750 --> 00:19:24,100
the thing is passport wants you to add

00:19:21,130 --> 00:19:28,150
the access token to the call and the

00:19:24,100 --> 00:19:31,690
data property is named access token but

00:19:28,150 --> 00:19:35,890
it expects you to write birra

00:19:31,690 --> 00:19:38,470
then a white space and then the token ok

00:19:35,890 --> 00:19:40,750
so for every one of you who never used

00:19:38,470 --> 00:19:44,200
the or tokens just keep that in mind

00:19:40,750 --> 00:19:45,970
cuz it's a point of failure and I came

00:19:44,200 --> 00:19:47,740
across this because first I tried it

00:19:45,970 --> 00:19:50,980
without fear and then I was wondering

00:19:47,740 --> 00:19:52,990
why it was not working but a simple as

00:19:50,980 --> 00:20:00,400
that at beer a wide space and then it's

00:19:52,990 --> 00:20:03,940
working ok ok so we have covered normal

00:20:00,400 --> 00:20:08,800
login if you know how to do it you can

00:20:03,940 --> 00:20:12,960
setup this within maybe an hour so login

00:20:08,800 --> 00:20:15,460
is quite simple but lately we faced a

00:20:12,960 --> 00:20:17,530
little bit harder problem we wanted to

00:20:15,460 --> 00:20:21,750
implement a social login we wanted to

00:20:17,530 --> 00:20:24,280
implement a facebook login and there are

00:20:21,750 --> 00:20:28,180
packages just for example this package

00:20:24,280 --> 00:20:30,220
laravel socialite which is really great

00:20:28,180 --> 00:20:35,830
and makes the Facebook looking quite

00:20:30,220 --> 00:20:39,370
simple but they implemented it for the

00:20:35,830 --> 00:20:41,560
use of applications where you do not

00:20:39,370 --> 00:20:44,620
separate the back end from the front end

00:20:41,560 --> 00:20:47,260
and where you have sessions this is the

00:20:44,620 --> 00:20:50,290
core thing here so out-of-the-box

00:20:47,260 --> 00:20:52,240
socialite works great but only if you

00:20:50,290 --> 00:20:54,730
have sessions if you have an API you

00:20:52,240 --> 00:20:58,120
have to do additional work and I just

00:20:54,730 --> 00:21:01,980
want to briefly mention what we did but

00:20:58,120 --> 00:21:05,110
also do not go into details

00:21:01,980 --> 00:21:06,550
just to clarify social ad is also a

00:21:05,110 --> 00:21:10,870
package which you can install our

00:21:06,550 --> 00:21:13,210
composer and it helps you to alter it

00:21:10,870 --> 00:21:15,120
authenticate with other world providers

00:21:13,210 --> 00:21:21,400
supports Facebook Twitter Linkedin

00:21:15,120 --> 00:21:23,440
Google github and so on so great but in

00:21:21,400 --> 00:21:25,390
the end how do we get an access token

00:21:23,440 --> 00:21:33,610
from social ads this was the question

00:21:25,390 --> 00:21:37,540
for us and for normal log in with social

00:21:33,610 --> 00:21:40,570
ad if you have no API you just place the

00:21:37,540 --> 00:21:43,840
credentials and the config services for

00:21:40,570 --> 00:21:49,120
example here github we are again in the

00:21:43,840 --> 00:21:52,380
back hand by the way and then you have

00:21:49,120 --> 00:21:55,610
to create some routing only to routes

00:21:52,380 --> 00:21:59,280
you have to create the route for

00:21:55,610 --> 00:22:02,310
redirect to use a to Facebook for

00:21:59,280 --> 00:22:08,310
example and then the route which handles

00:22:02,310 --> 00:22:10,290
the callback from Facebook again in a

00:22:08,310 --> 00:22:12,900
controller for the routes you see the

00:22:10,290 --> 00:22:16,140
two functions redirect to provider and

00:22:12,900 --> 00:22:16,920
handle provide a callback it's as simple

00:22:16,140 --> 00:22:19,440
as that

00:22:16,920 --> 00:22:22,380
socialite does everything for you it

00:22:19,440 --> 00:22:24,660
creates for you the route to the

00:22:22,380 --> 00:22:28,380
provider to Facebook for example in the

00:22:24,660 --> 00:22:32,460
first method and it gets for you the

00:22:28,380 --> 00:22:35,010
user so it parses automatically the

00:22:32,460 --> 00:22:39,920
callback from Facebook into a user

00:22:35,010 --> 00:22:43,860
object really great so if you look at

00:22:39,920 --> 00:22:48,000
the small picture here you have the

00:22:43,860 --> 00:22:52,440
application triggers to log in gets the

00:22:48,000 --> 00:22:54,630
redirect to Facebook then you have the

00:22:52,440 --> 00:22:57,840
other indication process there they use

00:22:54,630 --> 00:23:00,810
I have to accept the application and if

00:22:57,840 --> 00:23:03,150
it is successful you get a Facebook code

00:23:00,810 --> 00:23:05,970
back to your application social add

00:23:03,150 --> 00:23:08,970
passes this code gets the user object

00:23:05,970 --> 00:23:11,300
and you can for example register or

00:23:08,970 --> 00:23:14,760
login this user into your application

00:23:11,300 --> 00:23:17,010
that's the simple thing but if you have

00:23:14,760 --> 00:23:19,050
an API it's a little bit more complex

00:23:17,010 --> 00:23:21,300
you still can use socialite and it makes

00:23:19,050 --> 00:23:26,510
sense but you have to do a little bit of

00:23:21,300 --> 00:23:30,750
additional work because the front-end

00:23:26,510 --> 00:23:33,600
triggers the login so the user clicks on

00:23:30,750 --> 00:23:37,170
the Facebook button but then you have to

00:23:33,600 --> 00:23:41,760
go back to your back-end to create this

00:23:37,170 --> 00:23:47,370
redirect URL so you go to the API to

00:23:41,760 --> 00:23:52,170
this socialite route get back the target

00:23:47,370 --> 00:23:56,690
will redirect URL and the front-end

00:23:52,170 --> 00:23:58,650
makes a redirect to Facebook after that

00:23:56,690 --> 00:24:02,670
you have the authentication process

00:23:58,650 --> 00:24:04,860
again but the code goes back to the

00:24:02,670 --> 00:24:05,130
front end because the front end called

00:24:04,860 --> 00:24:07,770
fail

00:24:05,130 --> 00:24:09,570
spoke yeah not the API called Facebook

00:24:07,770 --> 00:24:11,430
front head called Facebook because we

00:24:09,570 --> 00:24:15,090
want the user to be redirected within

00:24:11,430 --> 00:24:18,540
the front end yeah and then the front

00:24:15,090 --> 00:24:21,300
end gets back the code the Facebook code

00:24:18,540 --> 00:24:24,510
and you have to send again the Facebook

00:24:21,300 --> 00:24:27,960
code to the API and the API now can

00:24:24,510 --> 00:24:30,210
parse the code can create the user or

00:24:27,960 --> 00:24:32,820
create an access token for a user and

00:24:30,210 --> 00:24:35,100
sends back the X is token to the front

00:24:32,820 --> 00:24:38,250
and the front then stores it again in

00:24:35,100 --> 00:24:40,950
the local storage okay I hope you see

00:24:38,250 --> 00:24:46,980
the difference here because of using of

00:24:40,950 --> 00:24:49,530
an API it's simple when you know how to

00:24:46,980 --> 00:24:52,920
do it but we needed to think about it

00:24:49,530 --> 00:24:58,200
and there's not a lot of source on the

00:24:52,920 --> 00:25:01,380
internet about this just again a short

00:24:58,200 --> 00:25:03,630
video on how it's looking like currently

00:25:01,380 --> 00:25:06,540
at our login page there you have the

00:25:03,630 --> 00:25:10,340
Facebook button then this communication

00:25:06,540 --> 00:25:13,190
with the API then you come back or you

00:25:10,340 --> 00:25:15,780
come to Facebook authenticate yourself

00:25:13,190 --> 00:25:18,360
come back to the front and from then

00:25:15,780 --> 00:25:19,850
makes the call back to the API the API

00:25:18,360 --> 00:25:22,230
[Music]

00:25:19,850 --> 00:25:25,350
creates the access token sends it back

00:25:22,230 --> 00:25:27,660
to the front end and you soiled and in

00:25:25,350 --> 00:25:30,120
the video at the top we have again this

00:25:27,660 --> 00:25:36,570
access token in the local storage so we

00:25:30,120 --> 00:25:39,600
are all 10 Takeda ghin good this was a

00:25:36,570 --> 00:25:43,500
little presentation about authentication

00:25:39,600 --> 00:25:46,440
I think there are some details would you

00:25:43,500 --> 00:25:48,330
have to look up but if you know the

00:25:46,440 --> 00:25:51,210
basics if you know the basics about a

00:25:48,330 --> 00:25:53,760
world passport and Axios it's quite

00:25:51,210 --> 00:25:57,000
simple to set it up in view chairs and

00:25:53,760 --> 00:25:58,950
by the way in my opinion which is one of

00:25:57,000 --> 00:25:59,610
the greatest JavaScript frameworks I

00:25:58,950 --> 00:26:02,190
have ever used

00:25:59,610 --> 00:26:05,730
so I'm really happy to talk here about

00:26:02,190 --> 00:26:09,780
this and all my employees are also

00:26:05,730 --> 00:26:13,830
really happy even those which programmed

00:26:09,780 --> 00:26:17,700
react and angular before so just a side

00:26:13,830 --> 00:26:20,700
note and another addition to

00:26:17,700 --> 00:26:24,330
the viewers at the broadcast we are

00:26:20,700 --> 00:26:27,950
currently hiring so if you're interested

00:26:24,330 --> 00:26:30,539
we have a great team great place to work

00:26:27,950 --> 00:26:32,130
please contact me I feel the contact

00:26:30,539 --> 00:26:35,100
information are written down there

00:26:32,130 --> 00:26:38,490
something so somewhere so please contact

00:26:35,100 --> 00:26:40,740
me good that's it for me

00:26:38,490 --> 00:26:45,110
from me so thank you and if you have any

00:26:40,740 --> 00:26:45,110

YouTube URL: https://www.youtube.com/watch?v=nZbtNGdVDi4


