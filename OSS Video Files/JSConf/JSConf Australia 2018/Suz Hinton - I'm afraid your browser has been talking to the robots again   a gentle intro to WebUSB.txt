Title: Suz Hinton - I'm afraid your browser has been talking to the robots again   a gentle intro to WebUSB
Publication date: 2018-04-11
Playlist: JSConf Australia 2018
Description: 
	The browser’s capibilities have snuck up on us over the years, and it’s turned into a full blown operating system! "But wait," I hear you protest, "it’s not like the browser can talk to stuff I have plugged in to my USB ports!". Ah! But it can!

The new WebUSB spec has arrived, and is already supported in at least one browser today. The previous hacks of connecting browsers to robots and other hardware will soon be a thing of the past. WebUSB as a first class API citizen opens up some great opportunities to create new and delightful experiences with robotics.

I’ll introduce you to the WebUSB API, its history, and compare it to previous ’hacks’ to demonstrate why this is such a big deal for you, as a web developer. There will be real hardware shown on stage ready to inspire you to think outside of the box of what browsers are really meant to be used for.
Captions: 
	00:00:11,060 --> 00:00:15,440
hello thanks so much for having me here

00:00:13,390 --> 00:00:17,360
you might not be able to tell from my

00:00:15,440 --> 00:00:19,580
accent but as I was introduced I was

00:00:17,360 --> 00:00:21,500
actually born and raised here so very

00:00:19,580 --> 00:00:26,720
very honored to be here for the last day

00:00:21,500 --> 00:00:28,160
as comfy you so how was lunch yeah I

00:00:26,720 --> 00:00:30,230
thought it was pretty good too I was

00:00:28,160 --> 00:00:33,710
choking it down because of Noah but it's

00:00:30,230 --> 00:00:35,990
fine so so we're going to be talking

00:00:33,710 --> 00:00:37,370
about a pretty exciting new API that you

00:00:35,990 --> 00:00:37,970
might have accidentally discovered in

00:00:37,370 --> 00:00:39,890
your browser

00:00:37,970 --> 00:00:41,239
it's called webby or speed I'm going to

00:00:39,890 --> 00:00:44,240
try and give you a gentle introduction

00:00:41,239 --> 00:00:45,500
but after I proposed this talk and it

00:00:44,240 --> 00:00:48,080
was accepted I realized a more

00:00:45,500 --> 00:00:48,770
appropriate title was how do you send

00:00:48,080 --> 00:00:51,560
the Sagan's

00:00:48,770 --> 00:00:54,530
in a browser and so it's been an

00:00:51,560 --> 00:00:56,960
interesting challenge of a sense so I'm

00:00:54,530 --> 00:00:59,840
Suze Hinton you can follow me on github

00:00:56,960 --> 00:01:01,640
and twitch and twitter as like no op cat

00:00:59,840 --> 00:01:04,729
if you'd prefer to call me Newt cat

00:01:01,640 --> 00:01:06,049
that's also fine I know some people were

00:01:04,729 --> 00:01:07,100
really sad when they found out it wasn't

00:01:06,049 --> 00:01:09,650
OOP

00:01:07,100 --> 00:01:12,350
so I work on open source IOT libraries

00:01:09,650 --> 00:01:14,330
in my spare time and then I'm I actually

00:01:12,350 --> 00:01:16,520
get a salary from Microsoft during the

00:01:14,330 --> 00:01:18,890
day and I do developer relations and I

00:01:16,520 --> 00:01:21,469
mostly I'm concerned with IOT but

00:01:18,890 --> 00:01:23,179
obviously that kind of goes hand-in-hand

00:01:21,469 --> 00:01:25,070
with things like machine learning and

00:01:23,179 --> 00:01:27,829
big data as well so I sort of do a

00:01:25,070 --> 00:01:29,210
menagerie of things there to help smooth

00:01:27,829 --> 00:01:32,420
over the experience when you're using

00:01:29,210 --> 00:01:33,590
our tools so today's aim is for you to

00:01:32,420 --> 00:01:35,420
see the browser and the web in a

00:01:33,590 --> 00:01:37,369
different way I am bringing an agenda

00:01:35,420 --> 00:01:40,490
that I've been banging on about for the

00:01:37,369 --> 00:01:42,139
last I think four years now so some of

00:01:40,490 --> 00:01:45,710
this might be familiar to some of you I

00:01:42,139 --> 00:01:47,359
am back to talk about this and I also

00:01:45,710 --> 00:01:48,829
want you to not be scared of hardware

00:01:47,359 --> 00:01:50,060
and microcontrollers because this is

00:01:48,829 --> 00:01:51,920
actually really exciting if you're a

00:01:50,060 --> 00:01:54,020
friend and developer you now have the

00:01:51,920 --> 00:01:55,880
opportunity to have an excuse to learn

00:01:54,020 --> 00:01:57,439
more about this stuff and potentially

00:01:55,880 --> 00:01:59,090
start writing hardware drivers in the

00:01:57,439 --> 00:02:01,579
browser in JavaScript which is really

00:01:59,090 --> 00:02:03,829
really fun so today we're gonna be

00:02:01,579 --> 00:02:05,659
covering just a brief history of the web

00:02:03,829 --> 00:02:08,990
and devices and how we've done things in

00:02:05,659 --> 00:02:10,700
the past before this API what web USB is

00:02:08,990 --> 00:02:13,340
and how that differs from you know our

00:02:10,700 --> 00:02:16,550
previous attempts of this how to use web

00:02:13,340 --> 00:02:18,200
u.s. speed I'm going to pray to the demo

00:02:16,550 --> 00:02:21,470
gods ahead of time so that they'll sort

00:02:18,200 --> 00:02:23,390
me out and be nice to me so if we are

00:02:21,470 --> 00:02:24,500
lucky there'll be some demos and also

00:02:23,390 --> 00:02:27,860
just to talk about the futures of

00:02:24,500 --> 00:02:31,460
somewhere I think that it is going so

00:02:27,860 --> 00:02:35,060
first a history of web USB which means

00:02:31,460 --> 00:02:37,130
how do we use you know the browser to

00:02:35,060 --> 00:02:39,200
create an interface to actual hardware

00:02:37,130 --> 00:02:40,550
and we've had a varied amount of

00:02:39,200 --> 00:02:42,740
approaches in the past I've been

00:02:40,550 --> 00:02:46,430
successful some not so much

00:02:42,740 --> 00:02:50,390
so my journey with web in USB started in

00:02:46,430 --> 00:02:51,980
2007 I started with flash and a little

00:02:50,390 --> 00:02:54,590
thing called flash communication server

00:02:51,980 --> 00:02:56,900
and cert proxy so I'll explain briefly

00:02:54,590 --> 00:02:58,459
how that worked let's say you have a

00:02:56,900 --> 00:03:00,530
microcontroller let's say with an

00:02:58,459 --> 00:03:01,850
Arduino because a lot of a lot of you

00:03:00,530 --> 00:03:05,600
might already know what nods we know is

00:03:01,850 --> 00:03:07,700
node we know is a really really really

00:03:05,600 --> 00:03:09,680
great abstraction of hardware where you

00:03:07,700 --> 00:03:11,270
have a microcontroller that you can very

00:03:09,680 --> 00:03:13,100
easily plug things in and out of and you

00:03:11,270 --> 00:03:15,530
can create really cool interactive

00:03:13,100 --> 00:03:17,510
interactive experiences with it so the

00:03:15,530 --> 00:03:19,940
Arduino I think came out around 2007

00:03:17,510 --> 00:03:21,739
2008 in Australia I of course bought one

00:03:19,940 --> 00:03:23,000
immediately and then I was like how do i

00:03:21,739 --> 00:03:26,060
hook it up to the browser though because

00:03:23,000 --> 00:03:27,709
i know HTML but I don't think that

00:03:26,060 --> 00:03:30,380
Arduino talks hey - um OH

00:03:27,709 --> 00:03:34,160
so you installed this program called sir

00:03:30,380 --> 00:03:36,019
proxy which basically takes the serial

00:03:34,160 --> 00:03:38,660
port connection and the data coming in

00:03:36,019 --> 00:03:42,260
and out of the Arduino and it proxies it

00:03:38,660 --> 00:03:45,080
to a TCP socket so you can treat that

00:03:42,260 --> 00:03:47,360
stream as a TCP stream and then you

00:03:45,080 --> 00:03:49,760
actually write your flash file and then

00:03:47,360 --> 00:03:51,500
you essentially write some flash stuff

00:03:49,760 --> 00:03:52,850
in flash communications over to connect

00:03:51,500 --> 00:03:54,980
to that socket and to be able to write

00:03:52,850 --> 00:03:57,049
to it and read from it from there you

00:03:54,980 --> 00:03:59,780
can just whack the SWF file that you

00:03:57,049 --> 00:04:03,200
export from flash onto a web page and

00:03:59,780 --> 00:04:05,570
you don't that was quite a hack though

00:04:03,200 --> 00:04:06,950
to get that going so here is just like

00:04:05,570 --> 00:04:08,720
some of the code it's not super

00:04:06,950 --> 00:04:10,790
important it's just for own history and

00:04:08,720 --> 00:04:12,470
archaeological purposes you have your

00:04:10,790 --> 00:04:15,650
ActionScript file where you're opening a

00:04:12,470 --> 00:04:17,120
socket to a local host and with so proxy

00:04:15,650 --> 00:04:19,519
when you start it up you give it a

00:04:17,120 --> 00:04:22,190
config file essentially saying what port

00:04:19,519 --> 00:04:23,930
you want to listen to what what TCP port

00:04:22,190 --> 00:04:25,400
you actually want to open up the baud

00:04:23,930 --> 00:04:27,080
rate of the device and the bits and the

00:04:25,400 --> 00:04:30,830
parity and timeouts and all that kind of

00:04:27,080 --> 00:04:35,360
stuff so it was okay but obviously we

00:04:30,830 --> 00:04:38,150
know kind of where this journey went in

00:04:35,360 --> 00:04:40,880
2008 in Australia we got the iPhone

00:04:38,150 --> 00:04:45,050
I got the iPhone 3G it was awesome but

00:04:40,880 --> 00:04:46,910
it didn't run flash and so after a few

00:04:45,050 --> 00:04:48,590
years you know it flash definitely went

00:04:46,910 --> 00:04:50,300
out of vogue because JavaScript started

00:04:48,590 --> 00:04:51,910
being performant and there was some

00:04:50,300 --> 00:04:54,170
pretty major like accessibility

00:04:51,910 --> 00:04:56,930
performance and security issues with

00:04:54,170 --> 00:04:59,180
flash as well so that kind of died for

00:04:56,930 --> 00:05:01,130
me as a way of doing things because I

00:04:59,180 --> 00:05:03,890
was just kind of feeling like I was

00:05:01,130 --> 00:05:06,500
stuck in the past when I was doing it so

00:05:03,890 --> 00:05:08,150
I believe it was in 2013 but maybe

00:05:06,500 --> 00:05:09,830
Matias can correct me I would love if

00:05:08,150 --> 00:05:12,620
someone could give me the actual date on

00:05:09,830 --> 00:05:15,590
this but I think it was 2013 that a

00:05:12,620 --> 00:05:18,290
technology called Chrome serial came to

00:05:15,590 --> 00:05:19,910
Chrome browsers and so for a few years I

00:05:18,290 --> 00:05:23,330
was actually playing with this it was

00:05:19,910 --> 00:05:25,880
very very cool unfortunately I'll

00:05:23,330 --> 00:05:27,380
explain what happened to it later okay

00:05:25,880 --> 00:05:31,100
so we have the same scenario we have an

00:05:27,380 --> 00:05:33,230
Arduino we have a browser and this time

00:05:31,100 --> 00:05:36,770
we have Chrome serial which is basically

00:05:33,230 --> 00:05:39,020
an API that you could access very

00:05:36,770 --> 00:05:41,030
readily in the Chrome browser and you

00:05:39,020 --> 00:05:43,700
use that in order to have like a way of

00:05:41,030 --> 00:05:46,640
reading and writing from the device oops

00:05:43,700 --> 00:05:48,470
then you actually have to have this

00:05:46,640 --> 00:05:50,660
within a chrome app I'm not sure where

00:05:48,470 --> 00:05:52,310
there was security issues or or what but

00:05:50,660 --> 00:05:53,900
you absolutely had to use it in a chrome

00:05:52,310 --> 00:05:55,610
app but it was still cool because if you

00:05:53,900 --> 00:05:56,690
could write an extension or an app you

00:05:55,610 --> 00:05:59,020
could actually start talking to an

00:05:56,690 --> 00:06:01,400
Arduino in a browser and this actually

00:05:59,020 --> 00:06:03,680
really had a huge impact on the

00:06:01,400 --> 00:06:05,930
JavaScript community and especially

00:06:03,680 --> 00:06:07,820
people who were trying to write Hardware

00:06:05,930 --> 00:06:09,710
cross-platform like this is really where

00:06:07,820 --> 00:06:11,600
the idea of cross-platform hardware

00:06:09,710 --> 00:06:15,170
interfaces really started becoming a

00:06:11,600 --> 00:06:17,060
thing that were very very compelling so

00:06:15,170 --> 00:06:18,920
some of you might have heard of the chip

00:06:17,060 --> 00:06:21,290
computer it was the famous nine dollar

00:06:18,920 --> 00:06:22,640
computer that was on Kickstarter if you

00:06:21,290 --> 00:06:23,840
don't know about it that's okay I worked

00:06:22,640 --> 00:06:26,900
at Kickstarter at the time so that's

00:06:23,840 --> 00:06:28,850
maybe why I know about it but it was

00:06:26,900 --> 00:06:30,230
really really cool it was cheaper than

00:06:28,850 --> 00:06:32,030
the Raspberry Pi at the time it was

00:06:30,230 --> 00:06:34,040
before the Raspberry Pi zero and it was

00:06:32,030 --> 00:06:36,500
essentially just Linux on a chip but it

00:06:34,040 --> 00:06:37,670
was very very affordable and they did

00:06:36,500 --> 00:06:39,920
something that I was super impressed

00:06:37,670 --> 00:06:41,990
with they used a chrome app so that you

00:06:39,920 --> 00:06:43,280
could update the firmware on the actual

00:06:41,990 --> 00:06:45,980
chip you could update the operating

00:06:43,280 --> 00:06:47,630
system on it which was awesome so you

00:06:45,980 --> 00:06:49,640
downloaded this really cool thing called

00:06:47,630 --> 00:06:51,990
the chip flasher and you plugged in your

00:06:49,640 --> 00:06:54,390
chip and you just started up

00:06:51,990 --> 00:06:55,920
dating it and I was like this this is

00:06:54,390 --> 00:06:57,990
literally what I've wanted this whole

00:06:55,920 --> 00:06:59,640
time for so many of my devices and for

00:06:57,990 --> 00:07:01,470
so many interfaces that I've wanted to

00:06:59,640 --> 00:07:03,030
make so I thought that that was super

00:07:01,470 --> 00:07:04,770
progressive and you can see how friendly

00:07:03,030 --> 00:07:06,390
that looks and how that's going to work

00:07:04,770 --> 00:07:10,740
on any operating system that can run

00:07:06,390 --> 00:07:13,020
Chrome shortly after that um I think

00:07:10,740 --> 00:07:14,780
last year or maybe the year before do we

00:07:13,020 --> 00:07:17,490
know actually came out with a chrome app

00:07:14,780 --> 00:07:19,440
this is kind of the web version because

00:07:17,490 --> 00:07:22,080
I don't have a nice high-res screenshot

00:07:19,440 --> 00:07:23,700
of the chrome app but it is basically an

00:07:22,080 --> 00:07:25,680
editor in the browser you can write your

00:07:23,700 --> 00:07:27,450
sleek plus plus and it will compile it

00:07:25,680 --> 00:07:29,910
and it will flash it on to your Arduino

00:07:27,450 --> 00:07:32,460
all directly in the browser using Chrome

00:07:29,910 --> 00:07:35,310
serial which is super magical and they

00:07:32,460 --> 00:07:36,960
actually ended up using my library a VL

00:07:35,310 --> 00:07:38,760
guard wiener to do that so I was like

00:07:36,960 --> 00:07:41,100
really really excited to see that it was

00:07:38,760 --> 00:07:42,780
kind of part of this future and it also

00:07:41,100 --> 00:07:44,480
made me maintain it a little more

00:07:42,780 --> 00:07:47,100
diligently than I normally would have

00:07:44,480 --> 00:07:49,170
but um that was I was just like at the

00:07:47,100 --> 00:07:51,120
peak of yes okay so this is a thing and

00:07:49,170 --> 00:07:53,300
we're actually proving it so we're gonna

00:07:51,120 --> 00:07:56,280
be able to keep Chrome serial right

00:07:53,300 --> 00:07:57,930
unfortunately that didn't happen so

00:07:56,280 --> 00:07:59,910
Chrome's serial was never like an

00:07:57,930 --> 00:08:02,820
official web spam it was like very very

00:07:59,910 --> 00:08:04,770
much in the chrome kind of ecosystem it

00:08:02,820 --> 00:08:06,480
only worked in Chrome apps so you kind

00:08:04,770 --> 00:08:08,460
of had to create this whole big thing so

00:08:06,480 --> 00:08:10,500
if you wanted to have a website that you

00:08:08,460 --> 00:08:12,060
could like interact with hardware you

00:08:10,500 --> 00:08:14,280
kind of had to have this companion app

00:08:12,060 --> 00:08:15,720
or companion extension that people would

00:08:14,280 --> 00:08:17,240
have to install and then use your

00:08:15,720 --> 00:08:20,220
website so it was a little bit awkward

00:08:17,240 --> 00:08:22,730
and chrome apps with sunset for every

00:08:20,220 --> 00:08:26,420
operating system except for Chrome OS in

00:08:22,730 --> 00:08:29,040
2017 despite how many github please so

00:08:26,420 --> 00:08:31,080
that was just kind of a shame but it

00:08:29,040 --> 00:08:32,970
really kind of got me hooked on the idea

00:08:31,080 --> 00:08:34,770
that you know browsers behave like

00:08:32,970 --> 00:08:36,600
operating systems these days so there's

00:08:34,770 --> 00:08:40,590
no reason why we can't actually do this

00:08:36,600 --> 00:08:42,120
so what do we do these days well we

00:08:40,590 --> 00:08:44,400
still sort of lean on our good friend

00:08:42,120 --> 00:08:46,890
the WebSocket where our browser can be

00:08:44,400 --> 00:08:48,450
the UI but we still need some kind of

00:08:46,890 --> 00:08:50,250
back-end service that can actually do

00:08:48,450 --> 00:08:51,600
the connection to the hardware because

00:08:50,250 --> 00:08:55,700
the browser is very much locked out of

00:08:51,600 --> 00:08:57,600
that so we've got out scenario as before

00:08:55,700 --> 00:08:59,520
we can have something like a node.js

00:08:57,600 --> 00:09:01,170
process for those of you who have done

00:08:59,520 --> 00:09:04,200
node bots that would be something like

00:09:01,170 --> 00:09:05,459
johnny-five that node.js process would

00:09:04,200 --> 00:09:07,230
also have some kind of

00:09:05,459 --> 00:09:09,540
websocket that it also sets up from the

00:09:07,230 --> 00:09:12,029
back end and it might also be serving

00:09:09,540 --> 00:09:14,550
that index.html at the same time as well

00:09:12,029 --> 00:09:15,929
so it's actually doing a lot then you

00:09:14,550 --> 00:09:17,550
have this WebSocket where your browser

00:09:15,929 --> 00:09:19,319
can connect to it and you're just kind

00:09:17,550 --> 00:09:20,850
of sending messages back and forth so if

00:09:19,319 --> 00:09:22,679
the browser wants to do something with

00:09:20,850 --> 00:09:24,749
the hardware you kind of come up with

00:09:22,679 --> 00:09:27,480
your own WebSocket communication

00:09:24,749 --> 00:09:29,220
protocol in order to do that it is still

00:09:27,480 --> 00:09:30,959
not great having this kind of backend

00:09:29,220 --> 00:09:33,089
coupling it's just not the experience

00:09:30,959 --> 00:09:34,709
that it should be and this is what makes

00:09:33,089 --> 00:09:37,410
people just go back to writing native

00:09:34,709 --> 00:09:40,559
apps which brings its own challenges to

00:09:37,410 --> 00:09:42,480
it as well so here is like an electron

00:09:40,559 --> 00:09:45,059
app I made which is sort of like the

00:09:42,480 --> 00:09:47,040
Holy Grail like electron allowed you to

00:09:45,059 --> 00:09:49,259
combine those two processes together and

00:09:47,040 --> 00:09:51,569
so I actually have the programmer right

00:09:49,259 --> 00:09:53,879
here on stage that I use to program this

00:09:51,569 --> 00:09:55,800
monogamist public radio so this is sort

00:09:53,879 --> 00:09:58,290
of at the point where I sort of ended up

00:09:55,800 --> 00:10:00,869
quitting hardware interfaces in the

00:09:58,290 --> 00:10:03,149
browser because you know electron uses a

00:10:00,869 --> 00:10:06,179
lot of CPU resources because it's a

00:10:03,149 --> 00:10:08,309
whole chrome instance and it's also 110

00:10:06,179 --> 00:10:09,779
megabytes so people had to download a

00:10:08,309 --> 00:10:11,519
hundred and ten megabytes just to be

00:10:09,779 --> 00:10:14,369
able to change the radio station on this

00:10:11,519 --> 00:10:16,470
radio and it just felt really excessive

00:10:14,369 --> 00:10:17,910
but it was cross-platform so it felt so

00:10:16,470 --> 00:10:21,179
good but it's just it just wasn't right

00:10:17,910 --> 00:10:23,999
so I sort of just got burnt out you know

00:10:21,179 --> 00:10:25,139
it's been like what how many years has

00:10:23,999 --> 00:10:26,720
it been almost 10 years since I first

00:10:25,139 --> 00:10:31,829
started doing this and so I'm just like

00:10:26,720 --> 00:10:34,199
and you you can actually still use the

00:10:31,829 --> 00:10:36,389
Arduino editor if you don't have Chrome

00:10:34,199 --> 00:10:37,949
OS what it does is it just has this

00:10:36,389 --> 00:10:39,929
background app that runs in your taskbar

00:10:37,949 --> 00:10:42,600
and it is using a WebSocket I was

00:10:39,929 --> 00:10:44,279
debugging it last night it just kind of

00:10:42,600 --> 00:10:45,509
uses that very same architecture so

00:10:44,279 --> 00:10:49,290
that's another example of something that

00:10:45,509 --> 00:10:50,790
uses that so now that we've had a look

00:10:49,290 --> 00:10:52,529
at all the failures that we've had it

00:10:50,790 --> 00:10:55,259
turned to get this stuff going what is

00:10:52,529 --> 00:10:56,939
web USB itself because it's pretty

00:10:55,259 --> 00:10:59,850
different to all the other purchas that

00:10:56,939 --> 00:11:01,529
I showed so the web USB spec is actually

00:10:59,850 --> 00:11:02,730
really cool I've been following it over

00:11:01,529 --> 00:11:04,769
the last few years and it's definitely

00:11:02,730 --> 00:11:09,660
gotten fleshed out the introduction part

00:11:04,769 --> 00:11:11,339
is written in human text not spec text

00:11:09,660 --> 00:11:12,720
so I promise I'm pulling a lot of this

00:11:11,339 --> 00:11:15,059
from the spec because it is actually

00:11:12,720 --> 00:11:17,429
really well written so the web usb API

00:11:15,059 --> 00:11:18,529
provides a way to safely expose USB

00:11:17,429 --> 00:11:20,889
device so

00:11:18,529 --> 00:11:23,509
services to the web which is pretty cool

00:11:20,889 --> 00:11:25,459
it provides an API familiar to

00:11:23,509 --> 00:11:28,310
developers who have used existing native

00:11:25,459 --> 00:11:30,139
USB libraries and exposes the device

00:11:28,310 --> 00:11:32,509
interfaces defined by existing

00:11:30,139 --> 00:11:35,809
specifications so this is really awesome

00:11:32,509 --> 00:11:38,870
this particular point here because no

00:11:35,809 --> 00:11:40,670
one's reinventing anything it you you

00:11:38,870 --> 00:11:43,970
can expect to if you've ever done

00:11:40,670 --> 00:11:45,139
low-level USB drivers before and again

00:11:43,970 --> 00:11:46,790
it is possible to do it in JavaScript

00:11:45,139 --> 00:11:49,100
that's sort of what I've been doing over

00:11:46,790 --> 00:11:50,600
the last few years you will be

00:11:49,100 --> 00:11:52,189
pleasantly surprised that a lot of your

00:11:50,600 --> 00:11:53,569
stuff ports over really easily because

00:11:52,189 --> 00:11:55,519
they haven't tried to reinvent the wheel

00:11:53,569 --> 00:11:56,809
and come up with a new API you're you're

00:11:55,519 --> 00:11:58,370
still doing things like control

00:11:56,809 --> 00:12:00,620
transfers which I'll show you later and

00:11:58,370 --> 00:12:02,720
claiming interfaces and it feels very

00:12:00,620 --> 00:12:04,249
much like a regular low-level USB

00:12:02,720 --> 00:12:06,079
experience so I think that was a really

00:12:04,249 --> 00:12:07,670
important thing that they did it does

00:12:06,079 --> 00:12:09,709
make it harder to get started but I

00:12:07,670 --> 00:12:11,059
think that a lot of people are going to

00:12:09,709 --> 00:12:12,889
be releasing abstractions to help out

00:12:11,059 --> 00:12:15,379
with this pretty soon I'm hoping to find

00:12:12,889 --> 00:12:18,559
the time to do so so it's important to

00:12:15,379 --> 00:12:21,050
kind of tell you that Web USB is not the

00:12:18,559 --> 00:12:23,930
same as serial so a lot of devices such

00:12:21,050 --> 00:12:26,629
as the Arduino and other things they

00:12:23,930 --> 00:12:29,180
have kind of a usb-to-serial like chip

00:12:26,629 --> 00:12:31,129
in between that kind of tells the

00:12:29,180 --> 00:12:33,470
machine that it's just a serial polit

00:12:31,129 --> 00:12:35,180
that you can access so it's actually not

00:12:33,470 --> 00:12:37,579
really a one-for-one replacement of

00:12:35,180 --> 00:12:39,259
something like chrome serial or like

00:12:37,579 --> 00:12:42,199
node serial port if you've used that

00:12:39,259 --> 00:12:44,300
with no BOTS it's not quite the same you

00:12:42,199 --> 00:12:46,069
can sort of get stuff working but you do

00:12:44,300 --> 00:12:48,319
have to provide some shims and you sort

00:12:46,069 --> 00:12:50,059
of pretending at serial but I'll show

00:12:48,319 --> 00:12:53,000
you an example of that later on as well

00:12:50,059 --> 00:12:55,610
in the demo but okay so if it's not

00:12:53,000 --> 00:12:59,420
serial and things like that other than

00:12:55,610 --> 00:13:02,540
the regular USB interface you're used to

00:12:59,420 --> 00:13:04,279
why is it better well I really like that

00:13:02,540 --> 00:13:05,870
they code out that it's kind of a safer

00:13:04,279 --> 00:13:09,410
way to connect your browser to devices

00:13:05,870 --> 00:13:11,360
so the first thing you get is if the

00:13:09,410 --> 00:13:13,759
user actually has to initiate the

00:13:11,360 --> 00:13:15,199
connection event themselves so someone

00:13:13,759 --> 00:13:16,939
can't just go to your website and then

00:13:15,199 --> 00:13:18,529
you immediately start polling all their

00:13:16,939 --> 00:13:19,970
devices and trying to hack them it

00:13:18,529 --> 00:13:21,800
actually just doesn't happen like that

00:13:19,970 --> 00:13:24,259
so someone has to physically give

00:13:21,800 --> 00:13:26,300
permission like clicking a box or having

00:13:24,259 --> 00:13:30,079
some kind of keyboard event or some sort

00:13:26,300 --> 00:13:31,950
of user initiated thing and even then it

00:13:30,079 --> 00:13:33,390
pops up this really nice little modal

00:13:31,950 --> 00:13:35,940
that says like you know this website

00:13:33,390 --> 00:13:38,160
wants to connect to this device and so

00:13:35,940 --> 00:13:40,050
you then have to physically click on

00:13:38,160 --> 00:13:41,640
that device and click connect so there

00:13:40,050 --> 00:13:43,920
are multi steps there similar to things

00:13:41,640 --> 00:13:45,960
like your webcam and all sorts of other

00:13:43,920 --> 00:13:47,520
permissions you've probably had such as

00:13:45,960 --> 00:13:49,050
news websites warning sign to you

00:13:47,520 --> 00:13:50,970
notifications and you always click the

00:13:49,050 --> 00:13:53,370
block button it's very similar here you

00:13:50,970 --> 00:13:54,690
can actually click cancel and you don't

00:13:53,370 --> 00:13:57,390
actually have to take action which is

00:13:54,690 --> 00:13:59,970
cool the other thing is there's this

00:13:57,390 --> 00:14:02,130
really neat hook that they've put into

00:13:59,970 --> 00:14:04,050
like you can put this in your device

00:14:02,130 --> 00:14:07,440
descriptor on your on your actual

00:14:04,050 --> 00:14:09,870
hardware itself when you plug it in you

00:14:07,440 --> 00:14:11,610
can already suggest a website that

00:14:09,870 --> 00:14:14,400
people can go to so as soon as I plug it

00:14:11,610 --> 00:14:16,110
in chrome can helpfully pop up a little

00:14:14,400 --> 00:14:17,550
notification saying hey I detected this

00:14:16,110 --> 00:14:21,030
device like you probably want to go to

00:14:17,550 --> 00:14:23,250
this website to start like interacting

00:14:21,030 --> 00:14:25,080
with it and if you're curious fragile

00:14:23,250 --> 00:14:26,640
systems is my new domain name I just

00:14:25,080 --> 00:14:29,850
registered this week for all of my

00:14:26,640 --> 00:14:31,710
really crappy duct-tape demos so if you

00:14:29,850 --> 00:14:34,710
see any of my self with dark fragile

00:14:31,710 --> 00:14:36,330
systems just be aware it's not perfect

00:14:34,710 --> 00:14:38,790
code notes it's probably pretty terrible

00:14:36,330 --> 00:14:42,900
so so yeah but you're probably thinking

00:14:38,790 --> 00:14:44,280
like soos why why is why are you trying

00:14:42,900 --> 00:14:46,290
to use the browser for everything like

00:14:44,280 --> 00:14:47,880
you've got this hammer and you're trying

00:14:46,290 --> 00:14:49,140
to like knock all the nails in and half

00:14:47,880 --> 00:14:52,140
of them aren't even nails like what are

00:14:49,140 --> 00:14:54,120
you doing and I honestly it's because

00:14:52,140 --> 00:14:56,450
I've had to create how do I interfaces

00:14:54,120 --> 00:14:58,860
before outside of the browser and

00:14:56,450 --> 00:15:00,540
they're not fast to make they're it's

00:14:58,860 --> 00:15:02,910
harder to make them cross-platform it's

00:15:00,540 --> 00:15:06,000
hard to make them look good and a lot of

00:15:02,910 --> 00:15:08,520
the a lot of the kind of native UI shims

00:15:06,000 --> 00:15:10,230
for things like QT in that it's hard to

00:15:08,520 --> 00:15:12,480
make it accessible out of the box or at

00:15:10,230 --> 00:15:14,760
least I've struggled with that and so I

00:15:12,480 --> 00:15:17,220
believe that hard way interfaces

00:15:14,760 --> 00:15:18,510
shouldn't be left out of the experience

00:15:17,220 --> 00:15:20,550
that we have as front-end developers

00:15:18,510 --> 00:15:22,260
where our stuff is fast to make its

00:15:20,550 --> 00:15:26,850
cross-platform out of the box it looks

00:15:22,260 --> 00:15:28,500
good and it's accessible and so browsers

00:15:26,850 --> 00:15:30,720
are a commonly installed application on

00:15:28,500 --> 00:15:33,030
a lot of computers technically this

00:15:30,720 --> 00:15:35,040
could probably be used offline if you

00:15:33,030 --> 00:15:36,180
you know do your service workers right

00:15:35,040 --> 00:15:38,910
and things like that that could be

00:15:36,180 --> 00:15:40,500
really cool and yeah browser-based

00:15:38,910 --> 00:15:42,360
interfaces like I said a rapidly

00:15:40,500 --> 00:15:44,370
prototypes you can hot patch that easily

00:15:42,360 --> 00:15:45,360
you can just deploy a change and the

00:15:44,370 --> 00:15:47,790
user just Caesar

00:15:45,360 --> 00:15:50,189
the next time they go to the website CSS

00:15:47,790 --> 00:15:52,949
is incredibly powerful as we saw

00:15:50,189 --> 00:15:54,869
yesterday at CSS conf and you get a

00:15:52,949 --> 00:15:56,220
consistent accessibility treat because

00:15:54,869 --> 00:15:58,259
you're accessing the browser's

00:15:56,220 --> 00:16:02,399
accessibility tree so that's always a

00:15:58,259 --> 00:16:04,799
winner as well and also I really liked

00:16:02,399 --> 00:16:06,509
this little gem in the web spec that

00:16:04,799 --> 00:16:09,769
convinced me that maybe I wasn't the

00:16:06,509 --> 00:16:12,629
only one that with this API hardware

00:16:09,769 --> 00:16:13,920
with this API hardware manufacturers

00:16:12,629 --> 00:16:16,559
will have the ability to build

00:16:13,920 --> 00:16:18,269
cross-platform JavaScript SDKs for their

00:16:16,559 --> 00:16:20,279
devices doesn't that sound fun

00:16:18,269 --> 00:16:21,899
like you buy a device and you're like

00:16:20,279 --> 00:16:23,519
yeah don't load the SDK and just start

00:16:21,899 --> 00:16:24,839
fussing with it in the browser I think

00:16:23,519 --> 00:16:27,660
that would be really cool if they

00:16:24,839 --> 00:16:30,420
started shipping that cool so how do you

00:16:27,660 --> 00:16:33,269
use web --usb how much time we got we're

00:16:30,420 --> 00:16:34,619
good all right so you've got your user

00:16:33,269 --> 00:16:39,600
you've got your browser you've got your

00:16:34,619 --> 00:16:41,189
device they plug the device in they are

00:16:39,600 --> 00:16:43,499
invited to go to that website so let's

00:16:41,189 --> 00:16:45,779
say that they're already there they

00:16:43,499 --> 00:16:48,480
click something like connect or you know

00:16:45,779 --> 00:16:49,860
start or something like that and that

00:16:48,480 --> 00:16:52,230
user event clicks going to go to the

00:16:49,860 --> 00:16:55,379
browser and from there we can actually

00:16:52,230 --> 00:16:57,839
access the USB API so the browser will

00:16:55,379 --> 00:16:59,279
then actually look for devices and you

00:16:57,839 --> 00:17:01,860
can give it a filter so that you're only

00:16:59,279 --> 00:17:04,079
really looking for one particular device

00:17:01,860 --> 00:17:05,970
once it's found a list of device matches

00:17:04,079 --> 00:17:07,709
based on your filter it will return that

00:17:05,970 --> 00:17:09,480
to the browser and then the browser will

00:17:07,709 --> 00:17:11,730
then pop up that modal that we saw

00:17:09,480 --> 00:17:14,549
asking the user for that additional

00:17:11,730 --> 00:17:16,860
permission to actually get started once

00:17:14,549 --> 00:17:18,419
that user confirms that permission then

00:17:16,860 --> 00:17:20,309
we can actually start getting the ball

00:17:18,419 --> 00:17:23,399
rolling so that's why we can open the

00:17:20,309 --> 00:17:25,679
device connection formally we can select

00:17:23,399 --> 00:17:29,010
the right configuration that we want we

00:17:25,679 --> 00:17:30,389
can claim the interface and then once

00:17:29,010 --> 00:17:32,190
we've claimed the interface we have the

00:17:30,389 --> 00:17:33,480
in endpoint and the out endpoint and we

00:17:32,190 --> 00:17:36,240
can just start reading and writing which

00:17:33,480 --> 00:17:37,919
is really really fun so this is all well

00:17:36,240 --> 00:17:40,740
and good this is a nice abstraction but

00:17:37,919 --> 00:17:44,429
what is this look like in code so this

00:17:40,740 --> 00:17:47,130
is as short as it as it can get to get

00:17:44,429 --> 00:17:49,559
started you supply some options when

00:17:47,130 --> 00:17:52,470
you're actually requesting some devices

00:17:49,559 --> 00:17:55,770
so here I'm just giving a filter and I'm

00:17:52,470 --> 00:17:58,669
giving a vendor ID so most products that

00:17:55,770 --> 00:18:01,309
you buy off the shelf have a prod

00:17:58,669 --> 00:18:03,169
ID and a vendor ID and so the vendor ID

00:18:01,309 --> 00:18:05,119
is obviously unique to the person you're

00:18:03,169 --> 00:18:07,789
the company you're buying the device

00:18:05,119 --> 00:18:09,739
from and the product ID is like for that

00:18:07,789 --> 00:18:12,049
specific product itself so you can

00:18:09,739 --> 00:18:13,730
filter on both vendor ID and Product ID

00:18:12,049 --> 00:18:15,109
and you can be really really specific

00:18:13,730 --> 00:18:17,119
about what device you want so that they

00:18:15,109 --> 00:18:18,499
don't accidentally pick the wrong one so

00:18:17,119 --> 00:18:19,820
that's pretty cool

00:18:18,499 --> 00:18:22,549
so once you've actually supplied that

00:18:19,820 --> 00:18:25,159
filter you can just call navigator dot

00:18:22,549 --> 00:18:27,499
USB dot request device you put in the

00:18:25,159 --> 00:18:29,600
options so that it knows which ones to

00:18:27,499 --> 00:18:31,159
look for and if that comes back without

00:18:29,600 --> 00:18:34,330
any errors I know that I'm not catching

00:18:31,159 --> 00:18:36,350
my errors I'm sorry you can console.log

00:18:34,330 --> 00:18:38,299
basically you can get the device product

00:18:36,350 --> 00:18:40,519
name and the device manufacturer name

00:18:38,299 --> 00:18:41,809
immediately so when you first plug in a

00:18:40,519 --> 00:18:43,399
device you can read descriptors and

00:18:41,809 --> 00:18:45,559
stuff and you don't necessarily have to

00:18:43,399 --> 00:18:46,820
be like have an open connection to it

00:18:45,559 --> 00:18:48,440
yet so you can actually glean a lot of

00:18:46,820 --> 00:18:50,509
information about a device even before

00:18:48,440 --> 00:18:53,690
you start opening it so this is kind of

00:18:50,509 --> 00:18:55,009
the hello world of Web USB as you can

00:18:53,690 --> 00:18:57,649
see it's not a lot of lines to get

00:18:55,009 --> 00:18:59,720
started you do have to wrap this request

00:18:57,649 --> 00:19:01,999
device in like a user event so you would

00:18:59,720 --> 00:19:04,100
probably wrap that in a you know button

00:19:01,999 --> 00:19:06,799
dot add event list and a click or

00:19:04,100 --> 00:19:08,179
something like that it gets a little

00:19:06,799 --> 00:19:09,379
more complicated and this is sort of

00:19:08,179 --> 00:19:10,580
where sometimes you need to be familiar

00:19:09,379 --> 00:19:13,429
with the device that you're interacting

00:19:10,580 --> 00:19:15,799
with but you know we went back up to the

00:19:13,429 --> 00:19:17,419
top so we requested the device that is a

00:19:15,799 --> 00:19:19,100
promise that resolves once the person

00:19:17,419 --> 00:19:21,950
has actually like given the permission

00:19:19,100 --> 00:19:24,499
for the device after that we can open it

00:19:21,950 --> 00:19:26,539
up because we have permission we select

00:19:24,499 --> 00:19:27,980
a configuration I don't really have a

00:19:26,539 --> 00:19:28,970
little bit too much time to go into

00:19:27,980 --> 00:19:31,399
these things because they tend to be

00:19:28,970 --> 00:19:34,460
more the actual USB spec itself not

00:19:31,399 --> 00:19:36,230
necessarily web USB but if a device has

00:19:34,460 --> 00:19:37,999
several configurations you choose the

00:19:36,230 --> 00:19:39,649
one that's right for you and it's just

00:19:37,999 --> 00:19:41,659
offering different end points and things

00:19:39,649 --> 00:19:43,549
like that and then you claim the

00:19:41,659 --> 00:19:45,440
interface which means that you want to

00:19:43,549 --> 00:19:48,739
take priority control over the device

00:19:45,440 --> 00:19:50,210
itself so if any other process on your

00:19:48,739 --> 00:19:51,679
computer tries to interact with it it's

00:19:50,210 --> 00:19:54,100
going to get locked out so it's really

00:19:51,679 --> 00:19:56,419
just saying like this USB device is mine

00:19:54,100 --> 00:19:58,159
and then you claim the interface that

00:19:56,419 --> 00:19:59,600
you actually want so sometimes there can

00:19:58,159 --> 00:20:01,999
be several interfaces that a device

00:19:59,600 --> 00:20:03,080
office as well so definitely check your

00:20:01,999 --> 00:20:06,139
datasheet and I'll show you an example

00:20:03,080 --> 00:20:07,970
of what that looks like because don't

00:20:06,139 --> 00:20:11,210
just guess the numbers like I was a few

00:20:07,970 --> 00:20:11,750
days ago because as as my friend saw it

00:20:11,210 --> 00:20:12,980
was not

00:20:11,750 --> 00:20:15,140
good experience so I actually dragged

00:20:12,980 --> 00:20:16,640
out the datasheet then after that once

00:20:15,140 --> 00:20:18,740
you claimed the interface you can

00:20:16,640 --> 00:20:21,170
actually start transferring things out

00:20:18,740 --> 00:20:23,240
and you can wait for responses to come

00:20:21,170 --> 00:20:24,830
back in so the first argument of

00:20:23,240 --> 00:20:26,900
transfer out is the endpoint you're

00:20:24,830 --> 00:20:29,810
transferring out to you and then the the

00:20:26,900 --> 00:20:31,760
1a hex is just like the byte that I'm

00:20:29,810 --> 00:20:35,300
sending and then if we want to receive

00:20:31,760 --> 00:20:36,650
data we just say transfer in we give at

00:20:35,300 --> 00:20:38,330
the endpoint that we want to read from

00:20:36,650 --> 00:20:41,390
so that's number two in this particular

00:20:38,330 --> 00:20:42,980
case and then we want five bytes so it's

00:20:41,390 --> 00:20:44,960
not there's not a lot of stuff you just

00:20:42,980 --> 00:20:46,610
have to know where those interfaces are

00:20:44,960 --> 00:20:48,440
really and again your datasheet will

00:20:46,610 --> 00:20:49,940
tell you that and then you can just

00:20:48,440 --> 00:20:51,770
console.log out your response so that's

00:20:49,940 --> 00:20:53,780
pretty good if you already know the

00:20:51,770 --> 00:20:57,560
language that this device speaks then

00:20:53,780 --> 00:20:59,330
you're off to the races so this is sort

00:20:57,560 --> 00:21:01,280
of what a datasheet this is a screen

00:20:59,330 --> 00:21:02,810
grab of Dasia I freaking loved attitudes

00:21:01,280 --> 00:21:05,120
so much they like one of my favorite

00:21:02,810 --> 00:21:06,770
things so this actually the stage she

00:21:05,120 --> 00:21:08,420
comes from this programmer I have up

00:21:06,770 --> 00:21:09,950
here that I'm going to demo later but

00:21:08,420 --> 00:21:12,800
you can see all these descriptors and

00:21:09,950 --> 00:21:15,470
stuff I just looked up those details in

00:21:12,800 --> 00:21:17,690
the tables and I was then able to from

00:21:15,470 --> 00:21:20,150
there pick the right interface pick the

00:21:17,690 --> 00:21:21,860
right configuration it gave me the

00:21:20,150 --> 00:21:24,620
literally the number of the end points

00:21:21,860 --> 00:21:26,690
and everything so it's all pretty human

00:21:24,620 --> 00:21:28,520
readable as well the bottom in the table

00:21:26,690 --> 00:21:30,350
the bottom property there says num

00:21:28,520 --> 00:21:32,330
configurations it literally says how

00:21:30,350 --> 00:21:33,770
many configurations there are so you

00:21:32,330 --> 00:21:35,510
know in this case if there's only one

00:21:33,770 --> 00:21:37,490
then you're just claiming the

00:21:35,510 --> 00:21:39,350
configuration zero right because that's

00:21:37,490 --> 00:21:41,240
that's the only one and we're all index

00:21:39,350 --> 00:21:42,470
0 so that kind of stuff can be really

00:21:41,240 --> 00:21:43,940
illuminating just get comfortable

00:21:42,470 --> 00:21:47,390
reading data see it I promise they're

00:21:43,940 --> 00:21:50,750
not as scary as they look at first yeah

00:21:47,390 --> 00:21:54,230
so I haven't really done a lot of HA by

00:21:50,750 --> 00:21:57,350
demos for a little while but web USB got

00:21:54,230 --> 00:21:59,330
me excited enough that yeah I'm back and

00:21:57,350 --> 00:22:03,380
we're gonna do some really fun stuff so

00:21:59,330 --> 00:22:05,030
that means some demos just to show you

00:22:03,380 --> 00:22:06,830
like the power of web USB to get you

00:22:05,030 --> 00:22:11,030
excited because this was oh very dry

00:22:06,830 --> 00:22:12,890
like very speck so we've driven slides

00:22:11,030 --> 00:22:15,680
but I have to give you a disclaimer

00:22:12,890 --> 00:22:18,020
first so Web USB this is kind of like

00:22:15,680 --> 00:22:21,110
snug UGG yesterday he was having to say

00:22:18,020 --> 00:22:22,580
this about Houdini web USB is not super

00:22:21,110 --> 00:22:24,560
stable right now so stuff keeps around

00:22:22,580 --> 00:22:25,340
let me breaking it worked before the

00:22:24,560 --> 00:22:26,840
lunch break

00:22:25,340 --> 00:22:29,180
can't give you any guarantees it'll work

00:22:26,840 --> 00:22:31,340
now everything I've made with you up web

00:22:29,180 --> 00:22:33,170
USB is definitely duct tape City at the

00:22:31,340 --> 00:22:34,790
moment I have duct tape on stage here

00:22:33,170 --> 00:22:38,300
it's not quite duct tape but there is

00:22:34,790 --> 00:22:39,740
tape holding my webcam up the second

00:22:38,300 --> 00:22:42,650
demo I actually wrote on the plane

00:22:39,740 --> 00:22:45,530
offline so just bear with me but I think

00:22:42,650 --> 00:22:47,210
it's going to be really fun so let's

00:22:45,530 --> 00:22:49,430
have a look at some demos so I'm gonna

00:22:47,210 --> 00:22:50,950
bring up my camera so can everybody see

00:22:49,430 --> 00:22:53,300
that screen right there

00:22:50,950 --> 00:22:54,830
cool all right so I'm gonna plug the

00:22:53,300 --> 00:22:56,510
first device in so the first device is

00:22:54,830 --> 00:23:00,980
what you're actually looking at it is a

00:22:56,510 --> 00:23:03,080
an Adafruit feather 32 u4 and it's just

00:23:00,980 --> 00:23:05,930
you can pretty much swap this out for a

00:23:03,080 --> 00:23:07,520
regular Arduino with a 13 for you 32 you

00:23:05,930 --> 00:23:10,310
for chip and I've plugged in what's

00:23:07,520 --> 00:23:12,260
called an OLED screen of which I've

00:23:10,310 --> 00:23:13,910
written drivers for so I cheated and I

00:23:12,260 --> 00:23:15,770
used some drivers or originally written

00:23:13,910 --> 00:23:17,510
so I'm gonna plug this in and we'll see

00:23:15,770 --> 00:23:18,940
if anything actually happens as its

00:23:17,510 --> 00:23:22,310
supposed to

00:23:18,940 --> 00:23:23,450
this is always the nervous part okay

00:23:22,310 --> 00:23:25,670
cool

00:23:23,450 --> 00:23:27,500
yes okay so see that popped up there

00:23:25,670 --> 00:23:28,520
it's kind of hard for me to zoom right

00:23:27,500 --> 00:23:31,100
now because I have a lot of stuff going

00:23:28,520 --> 00:23:33,980
on my screen but it says feather 32 you

00:23:31,100 --> 00:23:37,130
four detected go to web USB dot fragile

00:23:33,980 --> 00:23:40,850
systems to connect so I'm gonna click

00:23:37,130 --> 00:23:42,410
that alright it loaded thank you so now

00:23:40,850 --> 00:23:45,530
gog he helped me ride a rainbow gradient

00:23:42,410 --> 00:23:47,000
as the background for my demo this

00:23:45,530 --> 00:23:50,000
morning over breakfast I'm very thankful

00:23:47,000 --> 00:23:51,560
to him so I think everyone can see that

00:23:50,000 --> 00:23:54,860
so I'm not going to do it anymore but

00:23:51,560 --> 00:23:56,450
this is a virtual copy of my screen on

00:23:54,860 --> 00:23:58,340
the webpage and then we have the real

00:23:56,450 --> 00:24:00,620
screen here so we can have a lot of fun

00:23:58,340 --> 00:24:02,900
so we can actually like draw stuff right

00:24:00,620 --> 00:24:04,580
which is pretty cool but I have some

00:24:02,900 --> 00:24:06,950
pitches that are readily mage like kind

00:24:04,580 --> 00:24:08,780
of like turkey pie this morning thanks

00:24:06,950 --> 00:24:15,200
that was really awesome this morning

00:24:08,780 --> 00:24:18,650
this talk okay so what can we pick let's

00:24:15,200 --> 00:24:22,550
do a cat cats are cool okay so that's a

00:24:18,650 --> 00:24:24,740
pretty neat cat and let's see if we can

00:24:22,550 --> 00:24:27,890
actually send it to this screen you can

00:24:24,740 --> 00:24:29,630
tell I'm getting really nervous okay so

00:24:27,890 --> 00:24:31,460
we connected you just saw this kind of

00:24:29,630 --> 00:24:34,190
wipe thing happen that's just the screen

00:24:31,460 --> 00:24:36,590
booting up as I connect to the device so

00:24:34,190 --> 00:24:38,330
that seems to be pretty good so if we

00:24:36,590 --> 00:24:39,420
click send image hopefully we'll see

00:24:38,330 --> 00:24:41,400
okay so you may see

00:24:39,420 --> 00:24:44,660
reverse cat come up because oh no no no

00:24:41,400 --> 00:24:46,780
wait no we fix that okay that's fine

00:24:44,660 --> 00:24:53,460
yeah

00:24:46,780 --> 00:24:55,960
[Applause]

00:24:53,460 --> 00:24:57,549
all right what else have we got I took

00:24:55,960 --> 00:25:01,480
Tim's picture from the speaker page

00:24:57,549 --> 00:25:04,720
sorry Tim so there's like a divot

00:25:01,480 --> 00:25:07,270
version of damned Tim so I'm using like

00:25:04,720 --> 00:25:08,620
the the Floyd Steinberg algorithm to

00:25:07,270 --> 00:25:10,659
kind of dither it but you can use like

00:25:08,620 --> 00:25:12,700
the game boy algorithm to I call it a

00:25:10,659 --> 00:25:14,890
game boy algorithm what else have we got

00:25:12,700 --> 00:25:18,760
we got Jays Kampf yeah let's send this

00:25:14,890 --> 00:25:20,350
one yeah okay all right and I got one

00:25:18,760 --> 00:25:22,450
more food this is a very special one for

00:25:20,350 --> 00:25:28,360
all of you out there who have been on

00:25:22,450 --> 00:25:29,140
Twitter recently yeah we should have a

00:25:28,360 --> 00:25:33,250
radar smear

00:25:29,140 --> 00:25:35,529
awesome cool so as you can see it's

00:25:33,250 --> 00:25:37,990
pretty quick we are doing a little bit

00:25:35,529 --> 00:25:39,820
of fun dangling with like fake serial

00:25:37,990 --> 00:25:41,710
slash web USB and things like that I'm

00:25:39,820 --> 00:25:44,289
gonna cover the tools that I use to make

00:25:41,710 --> 00:25:45,850
this later on but that's kind of an idea

00:25:44,289 --> 00:25:47,799
of how much fun you can you can have

00:25:45,850 --> 00:25:50,169
with this kind of thing and by the way

00:25:47,799 --> 00:25:52,330
the actual this actual interface here

00:25:50,169 --> 00:25:54,510
where you can draw and stuff which I'll

00:25:52,330 --> 00:25:57,669
just prove to you is actually working

00:25:54,510 --> 00:26:00,399
yeah so that was actually made by my

00:25:57,669 --> 00:26:02,230
friend Rachel while potty time excellent

00:26:00,399 --> 00:26:04,330
on Twitter she created this really cool

00:26:02,230 --> 00:26:06,070
thing called OLED Jas designer and I've

00:26:04,330 --> 00:26:07,450
just been like hacking it into

00:26:06,070 --> 00:26:09,059
everything I couldn't find right now so

00:26:07,450 --> 00:26:11,409
yeah so that's awesome thank you so much

00:26:09,059 --> 00:26:13,809
alright so that was the first demo

00:26:11,409 --> 00:26:18,100
that's pretty cool but I sort of thought

00:26:13,809 --> 00:26:20,710
I could do something really dumb and I

00:26:18,100 --> 00:26:22,570
thought I could do this thing where so I

00:26:20,710 --> 00:26:24,490
have an Arduino here right and it's just

00:26:22,570 --> 00:26:25,990
an Arduino you know I'm sorry for those

00:26:24,490 --> 00:26:29,470
of the back who can't see and I have

00:26:25,990 --> 00:26:31,450
this AVR isp mark ii programmer plugged

00:26:29,470 --> 00:26:34,630
into it so this is kind of how you can

00:26:31,450 --> 00:26:36,429
use web USB to to flash an Arduino even

00:26:34,630 --> 00:26:38,620
though it doesn't even though you would

00:26:36,429 --> 00:26:40,419
normally need a serial interface for it

00:26:38,620 --> 00:26:42,730
so this is kind of me cheating and using

00:26:40,419 --> 00:26:45,399
a web USB device to flash an Arduino so

00:26:42,730 --> 00:26:47,919
I didn't quite get it working but I kind

00:26:45,399 --> 00:26:49,659
of want to show you like how cool the

00:26:47,919 --> 00:26:52,029
interfaces you can make for this kind of

00:26:49,659 --> 00:26:53,559
stuff so this one doesn't pop up with

00:26:52,029 --> 00:26:56,620
like a website or anything whoa I'm

00:26:53,559 --> 00:26:59,470
losing my phone okay so this one doesn't

00:26:56,620 --> 00:27:01,179
actually pop up with a cool notification

00:26:59,470 --> 00:27:03,190
but I'll take you to the local website

00:27:01,179 --> 00:27:05,559
where I have it because I only have a

00:27:03,190 --> 00:27:06,830
couple of minutes left okay

00:27:05,559 --> 00:27:09,860
so hopefully this is still running

00:27:06,830 --> 00:27:13,039
is I got inspired because I found the

00:27:09,860 --> 00:27:14,899
very first website I made recently on a

00:27:13,039 --> 00:27:16,789
floppy disk and it made me so happy so I

00:27:14,899 --> 00:27:20,899
just sort of do something nostalgic for

00:27:16,789 --> 00:27:22,669
this demo so and that website was like

00:27:20,899 --> 00:27:25,909
eighteen years old it was it was

00:27:22,669 --> 00:27:29,510
unbearably dorky okay so I'm gonna

00:27:25,909 --> 00:27:31,820
connect to this AVR USP mark - and

00:27:29,510 --> 00:27:34,159
luckily four years ago I wrote a

00:27:31,820 --> 00:27:35,690
JavaScript driver for it so I've sort of

00:27:34,159 --> 00:27:37,429
been trying to webpack everything now

00:27:35,690 --> 00:27:39,590
and this just doesn't work very well

00:27:37,429 --> 00:27:41,149
when you're on a plane with no Wi-Fi all

00:27:39,590 --> 00:27:42,710
right so I'm gonna connect it oh it's

00:27:41,149 --> 00:27:44,029
doing it okay so what it did was I

00:27:42,710 --> 00:27:46,760
grabbed the program is signature

00:27:44,029 --> 00:27:48,620
AVR is pima to it then asked for what

00:27:46,760 --> 00:27:51,380
microchip signature I have on the

00:27:48,620 --> 00:27:52,580
Arduino and then it showed me my fuses

00:27:51,380 --> 00:27:54,620
and as you saw there was actually

00:27:52,580 --> 00:27:57,590
flashing a program straight to it so

00:27:54,620 --> 00:28:02,179
every time a I'll do it one more time

00:27:57,590 --> 00:28:04,279
every time a page of memory so I think

00:28:02,179 --> 00:28:06,200
for this tip it's like 128 bytes every

00:28:04,279 --> 00:28:08,059
time 128 bytes is successfully written

00:28:06,200 --> 00:28:09,380
it does a little thing on the progress

00:28:08,059 --> 00:28:11,149
so just show you that one more time

00:28:09,380 --> 00:28:12,139
because I'm really I think it looks

00:28:11,149 --> 00:28:13,909
really hackery

00:28:12,139 --> 00:28:15,260
but this is the kind of interfaces you

00:28:13,909 --> 00:28:16,340
can make for hardware now it's so much

00:28:15,260 --> 00:28:18,679
cooler than what you've probably seen

00:28:16,340 --> 00:28:23,120
out there alright cool so so it's

00:28:18,679 --> 00:28:24,860
writing pages writing pages this is just

00:28:23,120 --> 00:28:26,990
like using a regular a custom event

00:28:24,860 --> 00:28:28,850
emitter which is pretty chill and then

00:28:26,990 --> 00:28:31,039
it's done so that's pretty cool so the

00:28:28,850 --> 00:28:33,169
the catch with this is my array buffers

00:28:31,039 --> 00:28:35,179
are showing really weird bytes right now

00:28:33,169 --> 00:28:36,350
so the device doesn't actually boot

00:28:35,179 --> 00:28:38,210
because I think it's writing stuff to

00:28:36,350 --> 00:28:39,620
slightly wrong page addresses but I'm

00:28:38,210 --> 00:28:40,870
still figuring it out but I thought I

00:28:39,620 --> 00:28:43,700
would show you the progress of that and

00:28:40,870 --> 00:28:47,720
how much you could depart from normal

00:28:43,700 --> 00:28:48,700
headway interfaces cool so that's pretty

00:28:47,720 --> 00:28:51,500
sweet

00:28:48,700 --> 00:28:54,080
so the first demo was made with

00:28:51,500 --> 00:28:57,799
basically a kitchen sink of items I used

00:28:54,080 --> 00:29:00,110
Webb USB serial from my friend Lewis he

00:28:57,799 --> 00:29:01,789
sort of created a shim and then you can

00:29:00,110 --> 00:29:03,889
upload a nice script on the Arduino to

00:29:01,789 --> 00:29:05,570
kind of act like that sort of it is a

00:29:03,889 --> 00:29:07,850
shim on the Arduino and there's also

00:29:05,570 --> 00:29:09,889
ischium with JavaScript so I his

00:29:07,850 --> 00:29:11,960
project and just kind of had to like

00:29:09,889 --> 00:29:14,240
refactor it slightly to work from Ryan

00:29:11,960 --> 00:29:16,399
I'm using johnny-five to talk to the

00:29:14,240 --> 00:29:20,000
oled junior screen and that's because

00:29:16,399 --> 00:29:21,920
the OLED j/s library that I wrote

00:29:20,000 --> 00:29:24,110
she just uses a johnny-five instance in

00:29:21,920 --> 00:29:26,330
order to connect to that screen I'm

00:29:24,110 --> 00:29:27,920
using PNG to LCD which has a library of

00:29:26,330 --> 00:29:30,340
mind that does the Floyd Steinberg

00:29:27,920 --> 00:29:33,380
algorithm thing to combine to do images

00:29:30,340 --> 00:29:34,990
I'm using OLED Jas designer as I talked

00:29:33,380 --> 00:29:37,760
about my friend excellent Rachel well

00:29:34,990 --> 00:29:39,590
that was for my first demo and lots and

00:29:37,760 --> 00:29:41,690
lots and lots and lots of web packing

00:29:39,590 --> 00:29:42,770
yeah but I'm sure we're all used to

00:29:41,690 --> 00:29:45,170
doing that by now

00:29:42,770 --> 00:29:49,190
demo number two was made with AVR girl

00:29:45,170 --> 00:29:49,760
SDK 500 vision 2 and AVL girl is P Mach

00:29:49,190 --> 00:29:51,380
00:29:49,760 --> 00:29:53,450
I apologize they just communication

00:29:51,380 --> 00:29:54,830
protocols I just went to the spec and

00:29:53,450 --> 00:29:56,630
implemented them so this is the kind of

00:29:54,830 --> 00:29:58,520
stuff you can do now in the browser and

00:29:56,630 --> 00:30:00,410
then I use webpack and I just wrote

00:29:58,520 --> 00:30:02,060
really really really really bad code to

00:30:00,410 --> 00:30:04,040
get that going but it seems to be

00:30:02,060 --> 00:30:05,270
promising so far so hopefully I'll have

00:30:04,040 --> 00:30:10,190
that working and I'll be able to blog

00:30:05,270 --> 00:30:17,120
about that soon so future's current

00:30:10,190 --> 00:30:18,620
support not great not great and I I will

00:30:17,120 --> 00:30:20,120
admit of being guilty of swinging by the

00:30:18,620 --> 00:30:21,350
Redmond campus I actually live in New

00:30:20,120 --> 00:30:23,530
York that I'll go by the Microsoft

00:30:21,350 --> 00:30:27,830
Redmond campus and I've literally gone

00:30:23,530 --> 00:30:29,090
peddling USB web USB devices and I've

00:30:27,830 --> 00:30:30,740
said hey can you give this to this

00:30:29,090 --> 00:30:33,110
person on the edge team and this person

00:30:30,740 --> 00:30:35,300
on the edge team so I'm trying I'm doing

00:30:33,110 --> 00:30:36,680
my part at Microsoft but right now it

00:30:35,300 --> 00:30:38,180
actually amazingly works on Chrome for

00:30:36,680 --> 00:30:39,530
Android which is cool but it's really

00:30:38,180 --> 00:30:41,090
just for Chrome right now so I'm hoping

00:30:39,530 --> 00:30:45,620
that more browsers pick it up soon but

00:30:41,090 --> 00:30:47,990
that is 56% of people globally so I

00:30:45,620 --> 00:30:49,700
support this then well I really like

00:30:47,990 --> 00:30:51,260
again the way Bo speaks back said this

00:30:49,700 --> 00:30:52,640
will be good for the web because instead

00:30:51,260 --> 00:30:54,110
of waiting for a new kind of device to

00:30:52,640 --> 00:30:57,260
be popular enough for browsers to

00:30:54,110 --> 00:30:58,910
provide a specific API for we can just

00:30:57,260 --> 00:31:01,880
build it from day one which is pretty

00:30:58,910 --> 00:31:03,410
sweet so if you wanted to get started

00:31:01,880 --> 00:31:04,820
with an Arduino and web your suite which

00:31:03,410 --> 00:31:07,640
is probably the easiest way even though

00:31:04,820 --> 00:31:09,710
it's definitely the most hacky way have

00:31:07,640 --> 00:31:11,990
a look at both the spec this Arduino

00:31:09,710 --> 00:31:13,850
example which is a pretty easy to

00:31:11,990 --> 00:31:15,980
remember URL and if you wanted to check

00:31:13,850 --> 00:31:17,000
out my first demo I've pushed the code

00:31:15,980 --> 00:31:19,190
to that address

00:31:17,000 --> 00:31:22,580
so hopefully this got you excited about

00:31:19,190 --> 00:31:24,530
web USB I'm very excited so I hope I

00:31:22,580 --> 00:31:25,810
hope to see more open-source samples of

00:31:24,530 --> 00:31:28,810
people playing with this kind of stuff

00:31:25,810 --> 00:31:28,810
thanks

00:31:35,340 --> 00:31:37,400
you

00:31:43,890 --> 00:31:45,950

YouTube URL: https://www.youtube.com/watch?v=ov2R3vEn14k


