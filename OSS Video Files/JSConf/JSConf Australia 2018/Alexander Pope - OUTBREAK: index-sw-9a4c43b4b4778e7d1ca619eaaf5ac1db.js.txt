Title: Alexander Pope - OUTBREAK: index-sw-9a4c43b4b4778e7d1ca619eaaf5ac1db.js
Publication date: 2018-04-11
Playlist: JSConf Australia 2018
Description: 
	August 30, 2016, was by all accounts an average Tuesday, and release number 523 just a simple re-factor, but something went horribly wrong that day: bad code escaped from the office, and it quickly spread to infect tens of thousands, giving rise to a hoard of zombie ServiceWorkers!

This is a disaster about a typo. This is a thriller about technology out of control. This is a tragedy about wasted CPU cycles. This is a cautionary tale about living in the age of ServiceWorker.
Captions: 
	00:00:11,070 --> 00:00:18,189
that was like a dream come true

00:00:13,210 --> 00:00:20,710
I have the tiger okay well as you know

00:00:18,189 --> 00:00:23,650
my name is oh honey did look liquor here

00:00:20,710 --> 00:00:25,900
my name is Alexander Pope I'm super

00:00:23,650 --> 00:00:27,400
super excited to be here really honored

00:00:25,900 --> 00:00:30,150
that I was invited to come all the way

00:00:27,400 --> 00:00:33,970
from frozen Norway to visit beautiful

00:00:30,150 --> 00:00:36,730
Melbourne to tell you this story now

00:00:33,970 --> 00:00:42,520
it's a scary story and like the best

00:00:36,730 --> 00:00:46,020
scary stories it's all true mostly now

00:00:42,520 --> 00:00:47,140
as you know this is called outbreak

00:00:46,020 --> 00:00:57,190
index

00:00:47,140 --> 00:01:03,780
- SW - 9 a 4 C 4 B 4 B 4 7 7 8 e 7 D 1 C

00:00:57,190 --> 00:01:03,780
a 6 1 9 EI EI f 5 AC 1 BB jeaious

00:01:06,479 --> 00:01:15,030
the year is 2016 and in the corner of a

00:01:12,370 --> 00:01:17,710
functional low charmless openoffice

00:01:15,030 --> 00:01:21,880
Alexander sits at a desk staring

00:01:17,710 --> 00:01:24,520
intently at the screen a phone range in

00:01:21,880 --> 00:01:28,060
the background momentarily disrupting

00:01:24,520 --> 00:01:29,979
the early morning stillness hey wow you

00:01:28,060 --> 00:01:32,140
can import analytics data into can I use

00:01:29,979 --> 00:01:36,250
and it looks like we already have over

00:01:32,140 --> 00:01:38,590
50% serviceworker support Alexander it's

00:01:36,250 --> 00:01:42,610
still considered experimental the

00:01:38,590 --> 00:01:44,560
specification has not yet stabilized nah

00:01:42,610 --> 00:01:47,110
that's all they were talking about at

00:01:44,560 --> 00:01:49,810
Google i/o serviceworker is the best

00:01:47,110 --> 00:01:53,050
thing since ajax that's already huge in

00:01:49,810 --> 00:01:55,390
India be not the first by whom the new

00:01:53,050 --> 00:02:00,310
are tried nor yet the last to lay the

00:01:55,390 --> 00:02:01,390
old aside the following morning in a

00:02:00,310 --> 00:02:03,640
cramped meeting room

00:02:01,390 --> 00:02:06,880
Alexander enthusiastic these sketches on

00:02:03,640 --> 00:02:08,920
a wall-mounted whiteboard this is great

00:02:06,880 --> 00:02:10,989
it's basically a proxy server in your

00:02:08,920 --> 00:02:11,829
browser you just call navigator

00:02:10,989 --> 00:02:14,829
serviceworker

00:02:11,829 --> 00:02:16,600
register with a path to your script it

00:02:14,829 --> 00:02:18,540
returns a promise so that's cool

00:02:16,600 --> 00:02:21,250
[Music]

00:02:18,540 --> 00:02:23,010
Alexander I hope you are aware that the

00:02:21,250 --> 00:02:26,130
service worker lifecycle has non-trivial

00:02:23,010 --> 00:02:29,950
there are many opportunities for error

00:02:26,130 --> 00:02:32,220
no no no no this is the web if something

00:02:29,950 --> 00:02:35,110
is broken you fix it and ship it

00:02:32,220 --> 00:02:37,540
continuous delivery for the win at

00:02:35,110 --> 00:02:39,850
Google IO they recommend you just change

00:02:37,540 --> 00:02:42,459
something the service worker will be

00:02:39,850 --> 00:02:42,940
invalidated and reinstalled eventually

00:02:42,459 --> 00:02:46,300
anyway

00:02:42,940 --> 00:02:49,140
within 24 hours at least fools rush in

00:02:46,300 --> 00:02:52,180
where angels fear to tread

00:02:49,140 --> 00:02:54,250
days later Alexander hurries to clean up

00:02:52,180 --> 00:02:57,130
commits while rebasing a git merge in

00:02:54,250 --> 00:03:00,610
time for release the desk is littered

00:02:57,130 --> 00:03:03,430
with disposable coffee cups embed unique

00:03:00,610 --> 00:03:06,010
acid leaves add feature flag use cache

00:03:03,430 --> 00:03:09,489
first strategy add cache expiry logic

00:03:06,010 --> 00:03:11,940
cache all API JSON data add app shell

00:03:09,489 --> 00:03:16,360
pad online offline Status Messages

00:03:11,940 --> 00:03:17,530
remotely log errors alexander haven't

00:03:16,360 --> 00:03:20,110
you forgotten something

00:03:17,530 --> 00:03:23,230
what about testing

00:03:20,110 --> 00:03:26,190
testing serviceworkers hard so many

00:03:23,230 --> 00:03:29,290
Global's and an installation lifecycle

00:03:26,190 --> 00:03:32,680
things are working fine locally and

00:03:29,290 --> 00:03:35,020
anyway it's progressive enhancement the

00:03:32,680 --> 00:03:36,630
most positive men are the most credulous

00:03:35,020 --> 00:03:39,310
[Music]

00:03:36,630 --> 00:03:41,200
several weeks pass in the quiet of a

00:03:39,310 --> 00:03:44,560
darkened living room alexander anxiously

00:03:41,200 --> 00:03:48,280
scans air logs notification alerts

00:03:44,560 --> 00:03:51,340
pierce the silence type air undefined is

00:03:48,280 --> 00:03:54,040
not a function not a function how could

00:03:51,340 --> 00:03:56,620
i at serviceworker global scope dot o

00:03:54,040 --> 00:03:59,230
not be a function what the hell is going

00:03:56,620 --> 00:04:01,540
on I don't get it things have been

00:03:59,230 --> 00:04:04,000
running smoothly for weeks the only

00:04:01,540 --> 00:04:07,270
change here is some refactoring how

00:04:04,000 --> 00:04:10,060
could cache ad all be undefined it works

00:04:07,270 --> 00:04:12,340
fine on my machine versions of Chrome

00:04:10,060 --> 00:04:15,070
prior to 46 did not ship with cache

00:04:12,340 --> 00:04:17,470
value at all among other differences the

00:04:15,070 --> 00:04:20,230
specification is still unstable as you

00:04:17,470 --> 00:04:22,810
are well aware shut up you are not

00:04:20,230 --> 00:04:26,560
helping lead to focus while I revert

00:04:22,810 --> 00:04:28,540
these changes one week later

00:04:26,560 --> 00:04:29,890
back at the office Alexander puzzles

00:04:28,540 --> 00:04:32,530
over the latest error logs

00:04:29,890 --> 00:04:34,150
that's what weird it's been almost a

00:04:32,530 --> 00:04:37,630
week since I ever heard of those changes

00:04:34,150 --> 00:04:40,120
but there are still lots of errors it

00:04:37,630 --> 00:04:41,010
shouldn't take that long to upgrade it's

00:04:40,120 --> 00:04:44,169
just not possible

00:04:41,010 --> 00:04:46,330
the logs say otherwise there have been

00:04:44,169 --> 00:04:49,060
more than 2,000 errors reported in the

00:04:46,330 --> 00:04:52,150
last 24 hours alone

00:04:49,060 --> 00:04:52,780
more weeks pass visibly tired and

00:04:52,150 --> 00:04:55,150
distraught

00:04:52,780 --> 00:04:58,210
Alexander slumps over his computer at

00:04:55,150 --> 00:05:00,610
the dinner table a baby cries in the

00:04:58,210 --> 00:05:02,560
background this is starting to freak me

00:05:00,610 --> 00:05:05,110
out I don't understand how they can

00:05:02,560 --> 00:05:06,880
still be so many errors and it looks

00:05:05,110 --> 00:05:10,720
like it looks like they're coming from

00:05:06,880 --> 00:05:11,440
inside the house Alexander don't be

00:05:10,720 --> 00:05:13,510
ridiculous

00:05:11,440 --> 00:05:17,680
the errors are clearly not coming from

00:05:13,510 --> 00:05:20,560
inside the house is it me but inside me

00:05:17,680 --> 00:05:23,770
my affected with these errors no

00:05:20,560 --> 00:05:25,750
Alexander you are not infected it would

00:05:23,770 --> 00:05:29,710
appear that for a small number of

00:05:25,750 --> 00:05:32,920
clients index - yes W - 984 c43 be forty

00:05:29,710 --> 00:05:35,650
four seven seven eighty 71 CA six 198 AF

00:05:32,920 --> 00:05:39,940
v AC 1d bjs has been permanently

00:05:35,650 --> 00:05:44,400
installed what permanently you can never

00:05:39,940 --> 00:05:46,240
be upgraded like some kind of dead song

00:05:44,400 --> 00:05:49,500
that is correct

00:05:46,240 --> 00:06:02,330
you [ __ ] up you [ __ ] up big time

00:05:49,500 --> 00:06:05,380
I told you it was a scary story

00:06:02,330 --> 00:06:05,380
[Music]

00:06:09,240 --> 00:06:13,889
there's something strangely compelling

00:06:11,400 --> 00:06:15,900
about a disaster story sometimes the

00:06:13,889 --> 00:06:19,319
disaster is an act of God other times

00:06:15,900 --> 00:06:20,280
it's man-made but the best of them share

00:06:19,319 --> 00:06:23,340
this in common

00:06:20,280 --> 00:06:25,830
the central characters are faced with

00:06:23,340 --> 00:06:29,220
difficult sometimes impossible moral

00:06:25,830 --> 00:06:31,699
dilemmas as viewers we ask ourselves how

00:06:29,220 --> 00:06:34,289
we would behave in similar circumstances

00:06:31,699 --> 00:06:36,479
could we handle the pressure would we

00:06:34,289 --> 00:06:39,509
make the same choices would we do the

00:06:36,479 --> 00:06:42,389
right thing now some of my favorite

00:06:39,509 --> 00:06:44,970
disaster stories are about epidemics or

00:06:42,389 --> 00:06:48,630
disease outbreaks that threaten humanity

00:06:44,970 --> 00:06:52,440
I think of not as living dead 28 days

00:06:48,630 --> 00:06:55,410
later 12 monkeys or children of men and

00:06:52,440 --> 00:06:58,380
many others now many of these stories

00:06:55,410 --> 00:07:00,599
and in fact the whole zombie genre were

00:06:58,380 --> 00:07:03,780
inspired by this book I am Legend by

00:07:00,599 --> 00:07:06,030
Richard Matheson now the book has been

00:07:03,780 --> 00:07:08,460
adapted at least three times for the big

00:07:06,030 --> 00:07:11,520
screen but my favorite version is the

00:07:08,460 --> 00:07:13,889
Omega Man from 1971 starring Charlton

00:07:11,520 --> 00:07:16,830
Heston I love it because it's just so

00:07:13,889 --> 00:07:19,500
70s and Charlton Heston he just can't

00:07:16,830 --> 00:07:26,130
stop delivering these cheesy one-liners

00:07:19,500 --> 00:07:29,099
no matter what happens to him he has no

00:07:26,130 --> 00:07:31,500
place here here's the stink of oil the

00:07:29,099 --> 00:07:37,080
electrical circuitry about him is

00:07:31,500 --> 00:07:43,159
obsolete you are discarded you are the

00:07:37,080 --> 00:07:43,159
refuse of the past you're full of crap

00:07:43,550 --> 00:07:48,449
now the antagonists in this version are

00:07:46,229 --> 00:07:51,060
more human than the vampires and the

00:07:48,449 --> 00:07:53,550
zombies of the other adaptations and I

00:07:51,060 --> 00:07:56,340
like that this cult of albino mutants

00:07:53,550 --> 00:07:57,960
spend all their time raging against the

00:07:56,340 --> 00:08:01,080
science and technology that they blame

00:07:57,960 --> 00:08:02,789
for their fate now most zombie stories

00:08:01,080 --> 00:08:04,259
of course they don't plan on turning

00:08:02,789 --> 00:08:07,259
people into zombies it just sort of

00:08:04,259 --> 00:08:09,539
happens by accident and usually it's

00:08:07,259 --> 00:08:14,070
because technology goes a little out of

00:08:09,539 --> 00:08:17,190
control now as I struggled against my

00:08:14,070 --> 00:08:20,430
own mob of out-of-control service

00:08:17,190 --> 00:08:23,060
workers I began to worry about this rig

00:08:20,430 --> 00:08:25,710
of technological back

00:08:23,060 --> 00:08:27,300
now as web developers were constantly

00:08:25,710 --> 00:08:29,490
tempted to throw in more and more

00:08:27,300 --> 00:08:32,100
technology at the problem but if we're

00:08:29,490 --> 00:08:36,390
not careful we risk pissing off our

00:08:32,100 --> 00:08:39,110
users making things that are slow or

00:08:36,390 --> 00:08:42,030
annoying or insecure just full of bugs

00:08:39,110 --> 00:08:45,360
really risks alienating the people we're

00:08:42,030 --> 00:08:48,060
trying to make happy now

00:08:45,360 --> 00:08:51,060
I'm sure some of you are dying to find

00:08:48,060 --> 00:08:54,960
out what happened some of your oops

00:08:51,060 --> 00:08:57,120
dying to see some code other of you are

00:08:54,960 --> 00:09:01,020
probably dying after last night's party

00:08:57,120 --> 00:09:03,330
but before we go any further with the

00:09:01,020 --> 00:09:06,150
rest of the story we need to take look

00:09:03,330 --> 00:09:08,340
at serviceworker what makes it so

00:09:06,150 --> 00:09:15,300
special and what makes it so especially

00:09:08,340 --> 00:09:17,310
dangerous first some history in 2010 as

00:09:15,300 --> 00:09:20,880
part of html5

00:09:17,310 --> 00:09:23,370
we got the application cache API which

00:09:20,880 --> 00:09:25,710
was a high level API for declaring which

00:09:23,370 --> 00:09:30,420
resources should be cached for offline

00:09:25,710 --> 00:09:33,840
use by 2014 however it was clear that

00:09:30,420 --> 00:09:36,990
the app cache API wasn't low-level

00:09:33,840 --> 00:09:40,050
enough to be useful so work began on a

00:09:36,990 --> 00:09:41,940
new spec called serviceworker that would

00:09:40,050 --> 00:09:44,580
enable more granular control over

00:09:41,940 --> 00:09:48,600
caching of resources among other things

00:09:44,580 --> 00:09:52,320
a year later at the beginning of 2015

00:09:48,600 --> 00:09:53,850
chrome 40 and opera 27 became the first

00:09:52,320 --> 00:09:58,080
browsers released with basic

00:09:53,850 --> 00:10:00,390
serviceworker support now in the summer

00:09:58,080 --> 00:10:03,990
of 2015 we were introduced to the

00:10:00,390 --> 00:10:06,270
concept of progressive Web Apps and

00:10:03,990 --> 00:10:10,710
shortly after came Firefox 44 and

00:10:06,270 --> 00:10:13,070
Samsung internet 4 in 2016 and later

00:10:10,710 --> 00:10:15,000
that same year at Google i/o in May

00:10:13,070 --> 00:10:18,080
serviceworker and progressive web apps

00:10:15,000 --> 00:10:21,870
were put on center stage

00:10:18,080 --> 00:10:23,790
finally in 2018 the application cache

00:10:21,870 --> 00:10:25,740
API is being deprecated and

00:10:23,790 --> 00:10:28,770
serviceworker is due to land in all

00:10:25,740 --> 00:10:33,720
major browsers with the next releases of

00:10:28,770 --> 00:10:37,339
Safari and edge very soon I hope

00:10:33,720 --> 00:10:40,170
but what is a serviceworker anyway a

00:10:37,339 --> 00:10:42,810
serviceworker is a script running in a

00:10:40,170 --> 00:10:45,360
separate background process that can

00:10:42,810 --> 00:10:49,889
intercept and modify all Network

00:10:45,360 --> 00:10:52,110
requests made by a web application now

00:10:49,889 --> 00:10:55,050
serviceworker as the name suggests is a

00:10:52,110 --> 00:10:58,110
type of worker similar to a web worker

00:10:55,050 --> 00:11:00,839
in that it doesn't have Dom Ajax or

00:10:58,110 --> 00:11:04,319
local storage it does however have

00:11:00,839 --> 00:11:08,040
postmessage for communicating with pages

00:11:04,319 --> 00:11:12,290
and other workers fetch for contacting

00:11:08,040 --> 00:11:15,029
the network and indexdb for storage a

00:11:12,290 --> 00:11:18,060
serviceworker is a kind of proxy server

00:11:15,029 --> 00:11:20,129
that responds to network requests by

00:11:18,060 --> 00:11:23,550
returning response objects from the

00:11:20,129 --> 00:11:26,970
network from cache or from dynamically

00:11:23,550 --> 00:11:28,920
generated content now in theory this

00:11:26,970 --> 00:11:31,170
means that a web application should be

00:11:28,920 --> 00:11:34,230
able to function without a network at

00:11:31,170 --> 00:11:36,350
all and in practice having full control

00:11:34,230 --> 00:11:41,329
over your cache should also improve

00:11:36,350 --> 00:11:44,220
startup application startup performance

00:11:41,329 --> 00:11:47,160
to make this possible serviceworker has

00:11:44,220 --> 00:11:50,160
access to a new api including cache API

00:11:47,160 --> 00:11:54,029
for storing Network request response

00:11:50,160 --> 00:11:56,399
pairs and new a new clients API for

00:11:54,029 --> 00:12:01,050
managing connected windows and tabs and

00:11:56,399 --> 00:12:03,720
web workers now since serviceworker runs

00:12:01,050 --> 00:12:05,459
in a separate process independent of the

00:12:03,720 --> 00:12:07,980
browser so it runs outside of the

00:12:05,459 --> 00:12:11,910
browser process it can do more work than

00:12:07,980 --> 00:12:14,759
just proxying network requests it can

00:12:11,910 --> 00:12:17,089
also respond to push events by receiving

00:12:14,759 --> 00:12:20,160
and displaying push notifications and

00:12:17,089 --> 00:12:22,019
sync events by processing pending

00:12:20,160 --> 00:12:26,670
network operations that were made while

00:12:22,019 --> 00:12:29,189
the network was offline because they can

00:12:26,670 --> 00:12:30,680
control several clients at the same time

00:12:29,189 --> 00:12:34,139
while operating in the background

00:12:30,680 --> 00:12:38,100
service workers need to be installed on

00:12:34,139 --> 00:12:40,050
the device now upgrading remotely

00:12:38,100 --> 00:12:42,120
installed software while it's running

00:12:40,050 --> 00:12:44,750
without breaking anything is really

00:12:42,120 --> 00:12:46,950
really hard

00:12:44,750 --> 00:12:48,959
serviceworker is not the

00:12:46,950 --> 00:12:53,519
we are used to but it's probably the web

00:12:48,959 --> 00:12:56,519
we need of course difficult things are

00:12:53,519 --> 00:12:59,820
rarely simple and as you'd expect

00:12:56,519 --> 00:13:01,920
serviceworker is complex by design to

00:12:59,820 --> 00:13:04,639
get from zero to up and running takes a

00:13:01,920 --> 00:13:08,430
multi-step lifecycle that includes

00:13:04,639 --> 00:13:11,790
registration installation sometimes

00:13:08,430 --> 00:13:14,250
waiting and finally activation before

00:13:11,790 --> 00:13:18,930
your serviceworker can get ready to do

00:13:14,250 --> 00:13:20,940
its work now the first step of the

00:13:18,930 --> 00:13:24,000
serviceworker life cycle is registration

00:13:20,940 --> 00:13:26,130
which is initiated by the web page when

00:13:24,000 --> 00:13:30,089
you call navigator serviceworker

00:13:26,130 --> 00:13:31,829
register with a path to your file and

00:13:30,089 --> 00:13:33,060
once the serviceworker is eventually up

00:13:31,829 --> 00:13:35,130
and running it's going to be able to

00:13:33,060 --> 00:13:38,880
control all pages that fall under its

00:13:35,130 --> 00:13:41,820
scope the scope is determined by where

00:13:38,880 --> 00:13:44,399
that serviceworker file is served from

00:13:41,820 --> 00:13:48,029
and it can be restricted but not

00:13:44,399 --> 00:13:50,610
expanded so in practice this means that

00:13:48,029 --> 00:13:53,550
a serviceworker can only control pages

00:13:50,610 --> 00:13:55,740
that live at the same or lower level in

00:13:53,550 --> 00:13:58,769
the directory hierarchy so that's

00:13:55,740 --> 00:14:02,339
important this brings us to our first

00:13:58,769 --> 00:14:06,480
bug busting tip don't call register

00:14:02,339 --> 00:14:08,640
while the page is loading on first visit

00:14:06,480 --> 00:14:12,390
it's too late for the serviceworker to

00:14:08,640 --> 00:14:15,390
start controlling the page so there's no

00:14:12,390 --> 00:14:16,949
point trying to load it before the page

00:14:15,390 --> 00:14:19,800
itself is loaded it's only going to slow

00:14:16,949 --> 00:14:21,810
things down so you should wait for the

00:14:19,800 --> 00:14:26,100
window load event or some other signal

00:14:21,810 --> 00:14:28,320
before calling register tip number two

00:14:26,100 --> 00:14:30,420
is don't rename your serviceworker file

00:14:28,320 --> 00:14:31,949
this is extremely important and it's

00:14:30,420 --> 00:14:34,560
also a little bit hard to get your head

00:14:31,949 --> 00:14:36,600
around but once it's been successfully

00:14:34,560 --> 00:14:37,310
installed its eventually going to need

00:14:36,600 --> 00:14:41,190
to be updated

00:14:37,310 --> 00:14:42,959
now if the HTML file that registered the

00:14:41,190 --> 00:14:46,490
serviceworker is cached which is quite

00:14:42,959 --> 00:14:49,079
common it's going to be impossible for

00:14:46,490 --> 00:14:52,649
you to install a new service worker with

00:14:49,079 --> 00:14:54,029
a different name so you can avoid this

00:14:52,649 --> 00:14:55,980
kind of chicken and egg problem by

00:14:54,029 --> 00:14:57,269
making sure you never tried to rename

00:14:55,980 --> 00:14:59,140
your serviceworker file it should always

00:14:57,269 --> 00:15:01,959
be a static file name

00:14:59,140 --> 00:15:04,180
now of course if the file name is static

00:15:01,959 --> 00:15:06,370
if it's never gonna change and the

00:15:04,180 --> 00:15:08,350
browser was always going to fetch files

00:15:06,370 --> 00:15:11,050
through the browser cache before going

00:15:08,350 --> 00:15:13,300
to the network you're gonna have to make

00:15:11,050 --> 00:15:15,850
sure you set the proper cache control

00:15:13,300 --> 00:15:18,730
headers to prevent the browser from

00:15:15,850 --> 00:15:21,519
caching is outdated versions of your

00:15:18,730 --> 00:15:23,709
serviceworker file now as a precaution

00:15:21,519 --> 00:15:25,600
to avoid accidentally installing a

00:15:23,709 --> 00:15:27,760
serviceworker for days or weeks or

00:15:25,600 --> 00:15:30,430
months the browser is automatically

00:15:27,760 --> 00:15:32,740
going to bypass the cache if the file is

00:15:30,430 --> 00:15:36,310
older than 24 hours regardless of what

00:15:32,740 --> 00:15:39,730
you set of course waiting 24 hours to

00:15:36,310 --> 00:15:41,860
fix a bug is a painful experience so do

00:15:39,730 --> 00:15:46,690
your future self a favor and make sure

00:15:41,860 --> 00:15:48,579
you set a low expiring now after the

00:15:46,690 --> 00:15:50,649
script has been successfully registered

00:15:48,579 --> 00:15:52,269
the install event is going to be

00:15:50,649 --> 00:15:55,120
triggered and the serviceworker is going

00:15:52,269 --> 00:15:57,149
to enter the installation face this is

00:15:55,120 --> 00:16:01,180
generally the best opportunity to begin

00:15:57,149 --> 00:16:03,940
pre-caching your assets it's also a good

00:16:01,180 --> 00:16:06,040
opportunity to talk about promises now

00:16:03,940 --> 00:16:09,699
the service work API takes promise used

00:16:06,040 --> 00:16:11,519
to new extremes so using async await can

00:16:09,699 --> 00:16:15,310
make things much more legible and

00:16:11,519 --> 00:16:16,930
potentially less error-prone now

00:16:15,310 --> 00:16:21,699
although all browsers only recently

00:16:16,930 --> 00:16:24,209
began supporting async all browsers that

00:16:21,699 --> 00:16:27,370
run serviceworker also can handle

00:16:24,209 --> 00:16:30,550
converting async code to use generators

00:16:27,370 --> 00:16:32,290
and promises so you can use babel with

00:16:30,550 --> 00:16:34,209
the async two generator plugin to do

00:16:32,290 --> 00:16:37,839
this transformation with very little

00:16:34,209 --> 00:16:40,209
overhead you should also make sure that

00:16:37,839 --> 00:16:42,570
pre cached assets can be downloaded

00:16:40,209 --> 00:16:46,300
because passing a promise to the await

00:16:42,570 --> 00:16:47,620
until the event wait until method is

00:16:46,300 --> 00:16:51,760
going to delay serviceworker

00:16:47,620 --> 00:16:54,130
installation until all those fetches are

00:16:51,760 --> 00:16:57,100
resolved however if it's rejected if

00:16:54,130 --> 00:16:59,880
even one asset does not download the new

00:16:57,100 --> 00:17:02,949
serviceworker is going to be thrown away

00:16:59,880 --> 00:17:07,449
so since cache a doll is often the

00:17:02,949 --> 00:17:10,990
easiest way to bulk fetch and add things

00:17:07,449 --> 00:17:12,970
to the cache any request is going to

00:17:10,990 --> 00:17:16,150
cause the serviceworker

00:17:12,970 --> 00:17:17,949
to prevent being installed so in this

00:17:16,150 --> 00:17:19,839
sense pre-cached assets should be

00:17:17,949 --> 00:17:23,640
considered hard dependencies so just

00:17:19,839 --> 00:17:26,909
beware now there's already an older

00:17:23,640 --> 00:17:29,620
version installed and running

00:17:26,909 --> 00:17:31,750
controlling clients the Service Worker

00:17:29,620 --> 00:17:34,090
is they're gonna enter what they call

00:17:31,750 --> 00:17:36,150
the waiting phase until all the clients

00:17:34,090 --> 00:17:38,530
have been disconnected

00:17:36,150 --> 00:17:40,120
calling skip waiting is going to force

00:17:38,530 --> 00:17:43,210
the new Service Worker to be activated

00:17:40,120 --> 00:17:46,000
regardless and it's gonna but forcing

00:17:43,210 --> 00:17:48,820
activation after an update can break all

00:17:46,000 --> 00:17:50,020
these existing connected clients if the

00:17:48,820 --> 00:17:53,169
new Service Worker behaves right

00:17:50,020 --> 00:17:55,330
differently than the old one you should

00:17:53,169 --> 00:17:58,659
probably avoid calling skip waiting

00:17:55,330 --> 00:18:00,880
after this major gene and consider

00:17:58,659 --> 00:18:04,750
prompting the user to trigger a manual

00:18:00,880 --> 00:18:06,730
refresh instead so really easy all you

00:18:04,750 --> 00:18:11,020
need to do is listen for a serviceworker

00:18:06,730 --> 00:18:12,900
event update prompt the user to force

00:18:11,020 --> 00:18:15,400
the serviceworker to skip waiting and

00:18:12,900 --> 00:18:18,250
then reload the page when it becomes

00:18:15,400 --> 00:18:20,919
active is that really easy it only took

00:18:18,250 --> 00:18:25,150
three slides so much easier than calling

00:18:20,919 --> 00:18:27,159
skip waiting but much safer now when

00:18:25,150 --> 00:18:29,289
it's finally safe to begin controlling

00:18:27,159 --> 00:18:31,510
your clients the activate event is going

00:18:29,289 --> 00:18:34,570
to be triggered and you can clean up old

00:18:31,510 --> 00:18:39,070
caches before control is finally passed

00:18:34,570 --> 00:18:42,100
to the new serviceworker be careful

00:18:39,070 --> 00:18:44,940
though don't accidentally remove caches

00:18:42,100 --> 00:18:49,450
that may be used by other applications

00:18:44,940 --> 00:18:51,400
so the cache API is origin based and it

00:18:49,450 --> 00:18:53,710
doesn't restrict access based on the

00:18:51,400 --> 00:18:57,010
scope that you used to register the

00:18:53,710 --> 00:19:00,340
serviceworker so you should prefix your

00:18:57,010 --> 00:19:02,230
caches with an application name if you

00:19:00,340 --> 00:19:05,220
plan on running multiple service workers

00:19:02,230 --> 00:19:07,960
on under the same domain

00:19:05,220 --> 00:19:10,840
now once the serviceworker is actively

00:19:07,960 --> 00:19:12,100
controlling clients any network requests

00:19:10,840 --> 00:19:14,289
are going to trigger the fetch event

00:19:12,100 --> 00:19:16,659
handler and the serviceworker is going

00:19:14,289 --> 00:19:20,590
to be able to return a response based on

00:19:16,659 --> 00:19:24,740
URL headers cookies resource type

00:19:20,590 --> 00:19:26,970
network conditions whatever criteria you

00:19:24,740 --> 00:19:28,410
now handling the response is going to

00:19:26,970 --> 00:19:31,020
allow the service worker to perform

00:19:28,410 --> 00:19:33,690
runtime caching but you should always

00:19:31,020 --> 00:19:37,200
check the ok property of the response

00:19:33,690 --> 00:19:40,040
object returned from fetch before you

00:19:37,200 --> 00:19:43,320
add it to your cache because HTTP

00:19:40,040 --> 00:19:46,530
response codes don't cause the fetch

00:19:43,320 --> 00:19:50,520
promise to reject so you check for 404

00:19:46,530 --> 00:19:54,000
and 500 for example another thing to

00:19:50,520 --> 00:19:55,890
avoid is storing global State outside of

00:19:54,000 --> 00:19:59,430
the event handlers in your serviceworker

00:19:55,890 --> 00:20:01,710
file the service workers once they're

00:19:59,430 --> 00:20:03,720
started they run that code but service

00:20:01,710 --> 00:20:05,910
workers are also stopped and started

00:20:03,720 --> 00:20:08,070
many times over their lifetime that's to

00:20:05,910 --> 00:20:10,890
preserve battery and other resources on

00:20:08,070 --> 00:20:12,300
the device and that global state is

00:20:10,890 --> 00:20:17,100
going to be destroyed at unexpected

00:20:12,300 --> 00:20:20,670
times so I'm sure all that seems quite

00:20:17,100 --> 00:20:22,950
straightforward right now I bet you're

00:20:20,670 --> 00:20:28,440
wondering what the deal was with those

00:20:22,950 --> 00:20:31,530
zombies quite simply it was part

00:20:28,440 --> 00:20:33,570
ignorant part stupidity and part mystery

00:20:31,530 --> 00:20:38,310
in my defense I don't think it was equal

00:20:33,570 --> 00:20:40,830
parts but you can be the judge it turns

00:20:38,310 --> 00:20:43,920
out that versions of chrome before 46

00:20:40,830 --> 00:20:46,170
did not support cache at all so any

00:20:43,920 --> 00:20:48,600
client missing that API should have

00:20:46,170 --> 00:20:50,880
caused the promised return to the

00:20:48,600 --> 00:20:54,600
install event to reject for the syntax

00:20:50,880 --> 00:20:58,410
error undefined is not a function now

00:20:54,600 --> 00:21:01,170
unfortunately a catch was also added to

00:20:58,410 --> 00:21:03,660
the promise chain in order to report

00:21:01,170 --> 00:21:06,180
install errors but the error was never

00:21:03,660 --> 00:21:08,250
thrown further up the chain and the

00:21:06,180 --> 00:21:11,760
serviceworker was installed instead of

00:21:08,250 --> 00:21:14,400
being thrown away and that explains how

00:21:11,760 --> 00:21:16,890
some clients became infected with a

00:21:14,400 --> 00:21:18,600
broken serviceworker and based on the

00:21:16,890 --> 00:21:21,050
number of errors reported you can see

00:21:18,600 --> 00:21:24,450
that most of them were cleared of

00:21:21,050 --> 00:21:27,510
they're infected serviceworker but it's

00:21:24,450 --> 00:21:30,960
still mystery as to why or how a small

00:21:27,510 --> 00:21:35,460
number were cursed and were never able

00:21:30,960 --> 00:21:37,260
to upgrade to a newer version it was

00:21:35,460 --> 00:21:37,840
fortunate that this only affected a

00:21:37,260 --> 00:21:40,360
small

00:21:37,840 --> 00:21:42,520
older devices but it's totally

00:21:40,360 --> 00:21:45,060
unfortunate that this is not the only

00:21:42,520 --> 00:21:48,520
way you could break your serviceworker

00:21:45,060 --> 00:21:52,180
let's be honest cache and validation is

00:21:48,520 --> 00:21:54,510
heart upgrading software is also hard

00:21:52,180 --> 00:21:57,810
and promises art kind of hard also

00:21:54,510 --> 00:22:01,920
naming things is super hard

00:21:57,810 --> 00:22:04,540
serviceworker has all of this and more

00:22:01,920 --> 00:22:08,080
so what do you do in the event of

00:22:04,540 --> 00:22:12,310
disaster if quitting your job is not an

00:22:08,080 --> 00:22:14,590
option you might want to buy some time

00:22:12,310 --> 00:22:17,410
by deploying a suicide service worker

00:22:14,590 --> 00:22:20,200
that unregistered itself deletes all

00:22:17,410 --> 00:22:24,490
caches and force refreshes all connected

00:22:20,200 --> 00:22:26,590
clients if you like your job you can

00:22:24,490 --> 00:22:28,750
make sure you don't ship a broken

00:22:26,590 --> 00:22:31,360
service worker in the first place by

00:22:28,750 --> 00:22:33,700
testing before you deploy of course

00:22:31,360 --> 00:22:36,550
testing service workers is not trivial

00:22:33,700 --> 00:22:40,110
but you can run unit tests in a mock

00:22:36,550 --> 00:22:42,610
environment with tools like SW test end

00:22:40,110 --> 00:22:44,980
and you can even run a single set of

00:22:42,610 --> 00:22:49,810
tests on both the command line and in

00:22:44,980 --> 00:22:52,480
the browser with SW tester now I'm not

00:22:49,810 --> 00:22:54,520
sure I totally trust the organization

00:22:52,480 --> 00:22:55,570
behind these libraries I mean Pope

00:22:54,520 --> 00:22:58,630
industries doesn't really sound like

00:22:55,570 --> 00:23:01,060
even a real company but there isn't

00:22:58,630 --> 00:23:03,130
really much else out there today to

00:23:01,060 --> 00:23:08,320
choose from so it's definitely better

00:23:03,130 --> 00:23:10,810
than nothing lastly if you don't want or

00:23:08,320 --> 00:23:12,940
need to get your hands dirty with the

00:23:10,810 --> 00:23:15,580
details you can use one of several tools

00:23:12,940 --> 00:23:19,030
to help you generate a service worker

00:23:15,580 --> 00:23:24,370
and managed runtime caching but you

00:23:19,030 --> 00:23:27,310
should always test if you can even if

00:23:24,370 --> 00:23:29,410
the details were lost on you the hope of

00:23:27,310 --> 00:23:32,500
at least been able to convince you that

00:23:29,410 --> 00:23:36,630
service worker should be approached with

00:23:32,500 --> 00:23:39,520
respect and handled with care

00:23:36,630 --> 00:23:41,380
serviceworker is awesome and it lets us

00:23:39,520 --> 00:23:42,360
do things on the web we have never been

00:23:41,380 --> 00:23:45,970
able to do before

00:23:42,360 --> 00:23:48,660
but it's kind of awesome in the way that

00:23:45,970 --> 00:23:51,280
a chainsaw is awesome it's really

00:23:48,660 --> 00:23:51,710
powerful and a really easy way to lose a

00:23:51,280 --> 00:23:55,850
hand

00:23:51,710 --> 00:23:57,559
under a foot or maybe a few toes but

00:23:55,850 --> 00:23:59,419
don't be afraid a lot of people use

00:23:57,559 --> 00:24:02,390
chainsaws everyday without spilling

00:23:59,419 --> 00:24:03,830
blood they take precautions they dress

00:24:02,390 --> 00:24:08,840
for the job and they read the

00:24:03,830 --> 00:24:11,870
instructions even disaster stories can

00:24:08,840 --> 00:24:13,929
have happy endings now that I know more

00:24:11,870 --> 00:24:16,730
now that I have some tools for testing

00:24:13,929 --> 00:24:19,029
I'm not afraid to get back into the lab

00:24:16,730 --> 00:24:21,710
and I hope everyone here isn't either

00:24:19,029 --> 00:24:26,510
because the web really is much better

00:24:21,710 --> 00:24:28,760
with serviceworker thank you very much I

00:24:26,510 --> 00:24:32,930
hope you enjoy the rest of the day good

00:24:28,760 --> 00:24:40,699
boy Alexandre get off this stage

00:24:32,930 --> 00:24:40,699
[Applause]

00:24:46,240 --> 00:24:48,300

YouTube URL: https://www.youtube.com/watch?v=t7WraVE8rY8


