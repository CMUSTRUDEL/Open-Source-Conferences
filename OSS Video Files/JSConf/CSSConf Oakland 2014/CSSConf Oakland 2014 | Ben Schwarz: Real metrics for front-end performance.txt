Title: CSSConf Oakland 2014 | Ben Schwarz: Real metrics for front-end performance
Publication date: 2015-01-25
Playlist: CSSConf Oakland 2014
Description: 
	Building a super-performant front-end is far harder and more intensive than making onLoad or onDomReady happen quicker — After you've removed "blocking scripts", what do you do?

In this talk I'll show you how to put best practice tools to work for you & your team.

We'll explore how to keep your pages scrolling buttery-smooth, the depths of undocumented Chrome devtool APIs, how to create your very own clean-room environment to test and measure while coordinating collection of performance metrics over many geographical borders — then how you can make it all happen within a continuous integration server.

BEN SCHWARZ

Ben Schwarz is independent and works on the web.

Ben is interested in community (as creatives and builders for the web), building tools and the future of the web. He's been involved in running a series of events around Australia - training days, conferences and social events.

http://germanforblack.com/
https://twitter.com/benschwarz
Captions: 
	00:00:02,780 --> 00:00:07,170
thanks for the introduction there I

00:00:05,009 --> 00:00:08,429
always like to start a talk with a

00:00:07,170 --> 00:00:10,650
little bit of a personal note so

00:00:08,429 --> 00:00:13,110
cameraman you can cut and you know my

00:00:10,650 --> 00:00:15,750
talk is not starting yet it's my first

00:00:13,110 --> 00:00:18,170
time to Oakland so thanks so much for

00:00:15,750 --> 00:00:21,900
having me I'm really happy to come here

00:00:18,170 --> 00:00:24,150
and I wanted to embarrass Carolina and

00:00:21,900 --> 00:00:25,830
just say thank you thank you for running

00:00:24,150 --> 00:00:28,920
such a such a great conference so far

00:00:25,830 --> 00:00:31,980
and to have a conference with more

00:00:28,920 --> 00:00:37,170
female speakers than male is something

00:00:31,980 --> 00:00:38,430
that so so good and you should you

00:00:37,170 --> 00:00:40,110
should definitely be very proud of the

00:00:38,430 --> 00:00:43,860
work that you've done because I'm very

00:00:40,110 --> 00:00:46,050
proud of you so good job okay let's get

00:00:43,860 --> 00:00:49,320
started my talk today is called useful

00:00:46,050 --> 00:00:50,610
front end metrics my name is ben

00:00:49,320 --> 00:00:53,910
schwartz i'm at ben schwartz on

00:00:50,610 --> 00:00:55,410
basically everything on the internet so

00:00:53,910 --> 00:00:57,559
i'm going to go through i'm going to get

00:00:55,410 --> 00:01:01,170
through performance stuff in general um

00:00:57,559 --> 00:01:04,739
you've probably seen talks before about

00:01:01,170 --> 00:01:06,119
performance and you know we kind of hear

00:01:04,739 --> 00:01:07,950
the same things time and time again so I

00:01:06,119 --> 00:01:11,939
wanted to cover kind of what those

00:01:07,950 --> 00:01:15,090
things are here's the scuba time is

00:01:11,939 --> 00:01:16,740
money everybody knows that it's really

00:01:15,090 --> 00:01:18,540
great the time equals money on the

00:01:16,740 --> 00:01:21,030
internet because it allows us to qualify

00:01:18,540 --> 00:01:23,520
when we when we do performance work and

00:01:21,030 --> 00:01:25,200
we make people terrified and we actually

00:01:23,520 --> 00:01:26,700
get to spend time thinking about our

00:01:25,200 --> 00:01:28,500
architecture and thinking about how we

00:01:26,700 --> 00:01:30,630
can improve our code bases for ourselves

00:01:28,500 --> 00:01:33,000
and for our teams and for the businesses

00:01:30,630 --> 00:01:34,439
that were representing it's really great

00:01:33,000 --> 00:01:35,909
that it equates to money so i think

00:01:34,439 --> 00:01:37,619
that's that's something that we can

00:01:35,909 --> 00:01:42,299
establish that we all kind of know that

00:01:37,619 --> 00:01:44,700
time equals money when a website is slow

00:01:42,299 --> 00:01:47,549
it costs money when they're slow sales

00:01:44,700 --> 00:01:50,189
drop engagement drops abandonment Rises

00:01:47,549 --> 00:01:51,840
we've heard this time and time again and

00:01:50,189 --> 00:01:54,149
it's how we're able to you know to keep

00:01:51,840 --> 00:01:58,770
going amazon found that when they

00:01:54,149 --> 00:02:01,409
increased their their page speed by 100

00:01:58,770 --> 00:02:03,540
milliseconds it equated to one percent

00:02:01,409 --> 00:02:05,219
of their revenue which is kind of crazy

00:02:03,540 --> 00:02:07,860
it's not really a metric that you can

00:02:05,219 --> 00:02:09,660
use for your business definitely but it

00:02:07,860 --> 00:02:11,310
definitely works for amazon so maybe if

00:02:09,660 --> 00:02:12,270
you go work for them you're going to be

00:02:11,310 --> 00:02:14,810
saving them a lot of money and get a

00:02:12,270 --> 00:02:14,810
healthy bonus

00:02:14,940 --> 00:02:18,490
forty percent of people about a website

00:02:17,080 --> 00:02:21,820
that takes more than three seconds to

00:02:18,490 --> 00:02:24,970
load that's that's from KISSmetrics last

00:02:21,820 --> 00:02:26,050
year i believe and their 2nd stat which

00:02:24,970 --> 00:02:27,700
also is kind of interesting is that

00:02:26,050 --> 00:02:31,000
forty-seven percent of consumers expect

00:02:27,700 --> 00:02:34,480
a page load in two seconds or less and I

00:02:31,000 --> 00:02:37,270
don't know about you but I look at a lot

00:02:34,480 --> 00:02:39,550
of pages every day and I would say that

00:02:37,270 --> 00:02:42,130
probably about ten percent of them load

00:02:39,550 --> 00:02:46,750
in two seconds or less particularly on a

00:02:42,130 --> 00:02:48,430
phone so someone that is doing an

00:02:46,750 --> 00:02:49,780
amazing amount of work in the

00:02:48,430 --> 00:02:52,870
performance base in general is ilya

00:02:49,780 --> 00:02:55,240
gorrik he works for for Google's one of

00:02:52,870 --> 00:02:57,160
the chrome team members and he said that

00:02:55,240 --> 00:02:59,080
after a second or more the uses flow and

00:02:57,160 --> 00:03:00,460
engagement with the initiated task is

00:02:59,080 --> 00:03:02,140
broken and he's actually talking about

00:03:00,460 --> 00:03:04,810
an interaction where somebody clicks on

00:03:02,140 --> 00:03:06,940
something and they wait for more than a

00:03:04,810 --> 00:03:09,010
second so we've often heard that school

00:03:06,940 --> 00:03:10,870
of thought of an animation shouldn't

00:03:09,010 --> 00:03:13,630
probably last for more than a quarter of

00:03:10,870 --> 00:03:14,980
a second he's saying that if you make

00:03:13,630 --> 00:03:17,650
them wait and they don't see anything

00:03:14,980 --> 00:03:20,350
within one second they just kind of this

00:03:17,650 --> 00:03:24,730
mental blank comes to them and then they

00:03:20,350 --> 00:03:27,250
just move on etsy learned that when they

00:03:24,730 --> 00:03:29,740
added 160 k to a page they actually got

00:03:27,250 --> 00:03:34,120
a 12-percent plus bounce rate on mobile

00:03:29,740 --> 00:03:36,640
which is a pretty alarming stat from

00:03:34,120 --> 00:03:38,170
this is uh it's it's actually a graph

00:03:36,640 --> 00:03:41,290
but it's it's abstract so it doesn't

00:03:38,170 --> 00:03:43,180
really matter but from 2010 until 2014

00:03:41,290 --> 00:03:45,370
response size grew by two and a half

00:03:43,180 --> 00:03:48,670
times so your average response side this

00:03:45,370 --> 00:03:52,360
is taken from the HTTP archive grew from

00:03:48,670 --> 00:03:55,390
about 700 k to somewhere like the 1800

00:03:52,360 --> 00:03:57,940
ish be on there and that's that's pretty

00:03:55,390 --> 00:03:59,920
crazy because mobile phones like he was

00:03:57,940 --> 00:04:01,870
talking about this it was Adam he

00:03:59,920 --> 00:04:03,580
mentioned that you know you just go down

00:04:01,870 --> 00:04:04,900
to the pier and suddenly your phone

00:04:03,580 --> 00:04:06,550
doesn't work and you can't tweet it

00:04:04,900 --> 00:04:07,540
anybody and you can't actually meet that

00:04:06,550 --> 00:04:09,190
friend that you're trying to check the

00:04:07,540 --> 00:04:11,710
map to go see them or anything like that

00:04:09,190 --> 00:04:14,140
and about that really sucks and I think

00:04:11,710 --> 00:04:16,930
we can all emphasize with that so let's

00:04:14,140 --> 00:04:18,760
start start a rule everyone is on your

00:04:16,930 --> 00:04:23,590
team is responsible for the performance

00:04:18,760 --> 00:04:26,530
of your side Steve Souders back in 2008

00:04:23,590 --> 00:04:30,490
stated that eighty to ninety percent of

00:04:26,530 --> 00:04:32,139
old sort of perceived speed is basically

00:04:30,490 --> 00:04:35,889
because of the front end so it's not our

00:04:32,139 --> 00:04:38,169
job right it's everybody's job people

00:04:35,889 --> 00:04:39,790
like developers who work on the back

00:04:38,169 --> 00:04:42,160
ends will say that you know the servers

00:04:39,790 --> 00:04:44,830
are really fast and we've got sequel

00:04:42,160 --> 00:04:46,240
queries or super amazing and we got all

00:04:44,830 --> 00:04:49,720
these amazing architecture but it

00:04:46,240 --> 00:04:51,190
doesn't matter like it's in the front so

00:04:49,720 --> 00:04:53,980
what do we already know what are the

00:04:51,190 --> 00:04:57,280
rules of engagement what we do to make

00:04:53,980 --> 00:05:00,730
sides fast we minify everything okay

00:04:57,280 --> 00:05:02,950
cool we use async JavaScript's we know

00:05:00,730 --> 00:05:04,750
that base64 in large fonts can block

00:05:02,950 --> 00:05:06,700
other styles from loading so if you load

00:05:04,750 --> 00:05:09,060
every font in the world and base64 them

00:05:06,700 --> 00:05:11,590
you're basically blocking the browser

00:05:09,060 --> 00:05:14,350
what else we should animate using CSS

00:05:11,590 --> 00:05:16,120
and not JavaScript we should use

00:05:14,350 --> 00:05:18,460
requestanimationframe for JavaScript

00:05:16,120 --> 00:05:21,790
based animation so this actually takes

00:05:18,460 --> 00:05:23,800
the time of when the browser would

00:05:21,790 --> 00:05:25,810
naturally paint it will call the

00:05:23,800 --> 00:05:26,800
requestanimationframe loop and it's an

00:05:25,810 --> 00:05:28,030
opportunity for you to be I would

00:05:26,800 --> 00:05:29,979
actually draw something to the screen so

00:05:28,030 --> 00:05:34,360
this is really great for canvas or for

00:05:29,979 --> 00:05:37,410
WebGL or whatever another thing we can

00:05:34,360 --> 00:05:39,760
do is we can use video rather than gifts

00:05:37,410 --> 00:05:41,740
if I actually can't believe I just said

00:05:39,760 --> 00:05:44,700
that everyone you should definitely

00:05:41,740 --> 00:05:48,190
follow your dreams and use a gift

00:05:44,700 --> 00:05:50,050
because they make you happy we know that

00:05:48,190 --> 00:05:51,610
changing a paucity transforms clipped

00:05:50,050 --> 00:05:55,570
and filters are cheap because they're

00:05:51,610 --> 00:05:56,950
hot way hardware-accelerated we've

00:05:55,570 --> 00:05:59,830
learned recently and I was talking to

00:05:56,950 --> 00:06:01,720
mark about this for bootstrap that

00:05:59,830 --> 00:06:04,120
position fixed can cause really

00:06:01,720 --> 00:06:06,280
interesting repaints and read roars when

00:06:04,120 --> 00:06:07,750
you're scrolling and they found the

00:06:06,280 --> 00:06:09,550
performance in bootstrap when kind of

00:06:07,750 --> 00:06:11,950
kind of crazy and so they actually

00:06:09,550 --> 00:06:14,169
pulled all that those hacks out without

00:06:11,950 --> 00:06:16,210
adding translate 3d to try and push

00:06:14,169 --> 00:06:20,310
something to another like compositing

00:06:16,210 --> 00:06:20,310
layer in the browser wasn't worth doing

00:06:22,280 --> 00:06:25,520
so we're learning these things people

00:06:24,350 --> 00:06:29,540
are talking about them time and time

00:06:25,520 --> 00:06:34,190
again box-shadow can actually be kind of

00:06:29,540 --> 00:06:37,010
evil here's my browser using just box

00:06:34,190 --> 00:06:38,450
shadows on these chrome logos and just

00:06:37,010 --> 00:06:41,540
doing some basic scrolling and as you

00:06:38,450 --> 00:06:44,960
can see the performance goes from pretty

00:06:41,540 --> 00:06:46,610
great too pretty abysmal and of course

00:06:44,960 --> 00:06:48,830
the chrome team talking talking a lot

00:06:46,610 --> 00:06:50,150
about make your make your animation 60

00:06:48,830 --> 00:06:54,950
frames a second and try and strive to

00:06:50,150 --> 00:06:57,169
get there in May 2013 addy Osmani ran

00:06:54,950 --> 00:06:58,970
through an amazing pitchfork special

00:06:57,169 --> 00:07:01,940
Daft Punk mini side just before their

00:06:58,970 --> 00:07:03,440
album came out where the scope scroll

00:07:01,940 --> 00:07:04,580
performance was less than ideal and I

00:07:03,440 --> 00:07:06,980
don't know how many people will actually

00:07:04,580 --> 00:07:09,380
remember this I certainly do I was I was

00:07:06,980 --> 00:07:11,090
really interested in the the full screen

00:07:09,380 --> 00:07:13,640
video and typographically I was

00:07:11,090 --> 00:07:16,280
interesting and I just them as a group

00:07:13,640 --> 00:07:19,250
we're doing interesting stuff but it

00:07:16,280 --> 00:07:22,040
really performed like crap Eddie has a

00:07:19,250 --> 00:07:24,440
really great article on his blog you can

00:07:22,040 --> 00:07:27,470
see here he's actually profiling the the

00:07:24,440 --> 00:07:31,310
60 frames per second mock just up here

00:07:27,470 --> 00:07:32,840
and you'll see that it's barely doing 30

00:07:31,310 --> 00:07:34,910
and it's jumping all over the place and

00:07:32,840 --> 00:07:36,680
it really gives you the idea of that the

00:07:34,910 --> 00:07:43,370
browser and your machine are struggling

00:07:36,680 --> 00:07:45,440
so that side feels like crap so let's

00:07:43,370 --> 00:07:47,150
CPU burning painting and heavy effects

00:07:45,440 --> 00:07:48,410
equals less battery bone I think

00:07:47,150 --> 00:07:54,110
everyone can actually agree with that

00:07:48,410 --> 00:07:59,150
too here's a rule let me load what you

00:07:54,110 --> 00:08:02,240
need this this comes from Patrick

00:07:59,150 --> 00:08:03,860
Heyman's talk at CSS comfy you fantastic

00:08:02,240 --> 00:08:07,520
talk Patrick works for the Guardian and

00:08:03,860 --> 00:08:10,100
he talked about what CSS you need to

00:08:07,520 --> 00:08:13,400
deliver your side and in this example

00:08:10,100 --> 00:08:17,410
he's talking about basically the fold so

00:08:13,400 --> 00:08:19,760
at the Guardian they did a study of what

00:08:17,410 --> 00:08:23,870
they as an organization consider

00:08:19,760 --> 00:08:26,750
important content so in their case the

00:08:23,870 --> 00:08:27,740
article the story that's what they're

00:08:26,750 --> 00:08:30,140
writing that's what they're producing

00:08:27,740 --> 00:08:32,570
that's their their product that's the

00:08:30,140 --> 00:08:35,240
really important part about this page

00:08:32,570 --> 00:08:38,690
the comments not really never read the

00:08:35,240 --> 00:08:40,760
comments anyway right sharing related

00:08:38,690 --> 00:08:43,460
content and popular content they're not

00:08:40,760 --> 00:08:47,570
important so what the Guardian actually

00:08:43,460 --> 00:08:49,970
going do is render that article content

00:08:47,570 --> 00:08:51,770
first and then later go and load in the

00:08:49,970 --> 00:08:54,080
sharing related content popular content

00:08:51,770 --> 00:08:56,150
using Ajax or maybe local storage

00:08:54,080 --> 00:08:59,330
depending on sort of how that works for

00:08:56,150 --> 00:09:01,310
them and beyond that they experimented

00:08:59,330 --> 00:09:03,350
with actually in lining their CSS so

00:09:01,310 --> 00:09:06,230
this is something that Adam also touched

00:09:03,350 --> 00:09:08,060
on where it sits like a bit of a secret

00:09:06,230 --> 00:09:10,040
that you should never use inline styles

00:09:08,060 --> 00:09:12,080
because it's disgusting or something and

00:09:10,040 --> 00:09:14,390
you should kill kittens if you do but

00:09:12,080 --> 00:09:18,050
what they found is when they inlined

00:09:14,390 --> 00:09:20,890
their CSS that was just the above the

00:09:18,050 --> 00:09:26,420
fold CSS the actual critical path styles

00:09:20,890 --> 00:09:28,010
their performance on for on content load

00:09:26,420 --> 00:09:30,110
and for Dom ready dropped by six to

00:09:28,010 --> 00:09:31,910
seven hundred milliseconds now when

00:09:30,110 --> 00:09:33,620
you're on a phone six to seven hundred

00:09:31,910 --> 00:09:35,870
milliseconds if you've got a budget of

00:09:33,620 --> 00:09:38,090
two seconds or maybe one try and get

00:09:35,870 --> 00:09:40,780
contents you users that's pretty

00:09:38,090 --> 00:09:43,250
significant I think we can agree that

00:09:40,780 --> 00:09:45,020
okay so now that we've we've sort of

00:09:43,250 --> 00:09:47,120
talked about all these things that you

00:09:45,020 --> 00:09:48,860
should and shouldn't do and you know

00:09:47,120 --> 00:09:50,660
everyone knows everything about

00:09:48,860 --> 00:09:53,320
performance right so we just minify

00:09:50,660 --> 00:09:55,580
scripts and don't do anything stupid and

00:09:53,320 --> 00:10:00,440
everything's fine right so okay cool

00:09:55,580 --> 00:10:01,880
I'll see you um that's not the truth how

00:10:00,440 --> 00:10:05,180
do we how do we know that what we've

00:10:01,880 --> 00:10:07,940
been told or what we've learned years

00:10:05,180 --> 00:10:09,320
ago or what we've discovered on the last

00:10:07,940 --> 00:10:12,190
project we worked on how do we know that

00:10:09,320 --> 00:10:12,190
that's actually true

00:10:16,880 --> 00:10:26,970
set a budget so how much is too much if

00:10:22,640 --> 00:10:29,130
you're a Content Heaviside this this

00:10:26,970 --> 00:10:31,290
screenshot is taken from a site that I

00:10:29,130 --> 00:10:35,130
believe it was a news site and so their

00:10:31,290 --> 00:10:37,860
content changes on a hourly basis their

00:10:35,130 --> 00:10:39,630
image size on the very last point is two

00:10:37,860 --> 00:10:41,940
points view yeah two points who makes

00:10:39,630 --> 00:10:45,720
which is quite a lot of quite a lot of

00:10:41,940 --> 00:10:47,310
images if you set a budget for images

00:10:45,720 --> 00:10:49,680
suddenly you can have really interesting

00:10:47,310 --> 00:10:51,060
conversations with your team you can

00:10:49,680 --> 00:10:53,910
talk about what's acceptable and what's

00:10:51,060 --> 00:10:56,610
unacceptable you can say if we go over

00:10:53,910 --> 00:10:59,130
to Meg's we need to reconsider this or

00:10:56,610 --> 00:11:00,660
maybe we can drop one story for mobile

00:10:59,130 --> 00:11:01,650
devices or maybe just not load them

00:11:00,660 --> 00:11:03,900
because we're going to do mobile first

00:11:01,650 --> 00:11:05,070
in the first place and for a designer

00:11:03,900 --> 00:11:07,920
this is actually a really interesting

00:11:05,070 --> 00:11:10,530
point do we really need that insanely

00:11:07,920 --> 00:11:14,900
huge banner of that perfect looking rich

00:11:10,530 --> 00:11:17,880
couple but everybody hates anyway what

00:11:14,900 --> 00:11:24,510
so set a budget and monitor all the

00:11:17,880 --> 00:11:27,420
things i wanted to mention just

00:11:24,510 --> 00:11:29,160
real-time monitoring in general if

00:11:27,420 --> 00:11:31,290
you've ever logged into google analytics

00:11:29,160 --> 00:11:34,290
you'll you'll maybe have noted that you

00:11:31,290 --> 00:11:36,840
can get to an average page time load

00:11:34,290 --> 00:11:41,040
time and on this particular site it

00:11:36,840 --> 00:11:42,930
dived up on this one day to 14 seconds

00:11:41,040 --> 00:11:45,570
which is quite a lot I think we can all

00:11:42,930 --> 00:11:47,730
agree this is the real thing that your

00:11:45,570 --> 00:11:49,260
users are seeing so no matter how many

00:11:47,730 --> 00:11:50,250
times you run you're like grunts scripts

00:11:49,260 --> 00:11:52,400
and you think you're doing the best

00:11:50,250 --> 00:11:55,260
thing in the world this is the real deal

00:11:52,400 --> 00:11:56,870
this is what people are seeing and this

00:11:55,260 --> 00:11:59,610
is what gives you dada to tell you

00:11:56,870 --> 00:12:02,070
should we use a CDN should we not do

00:11:59,610 --> 00:12:06,240
when we added one did it help what could

00:12:02,070 --> 00:12:10,260
we do next but aside from that we can

00:12:06,240 --> 00:12:11,820
actually do our own metrics in a side so

00:12:10,260 --> 00:12:15,300
here's the San Francisco Chronicle I

00:12:11,820 --> 00:12:17,010
don't know if that's like a good good

00:12:15,300 --> 00:12:18,630
newspaper to show here but actually want

00:12:17,010 --> 00:12:21,240
to show you this API here this is window

00:12:18,630 --> 00:12:24,839
window performance timing what window

00:12:21,240 --> 00:12:27,660
performance timing is is the HTML

00:12:24,839 --> 00:12:28,740
timings so you can go into any side in

00:12:27,660 --> 00:12:30,750
your browser right now and you

00:12:28,740 --> 00:12:33,750
go and type this window top performing

00:12:30,750 --> 00:12:36,000
star timing and it'll give you the any

00:12:33,750 --> 00:12:38,060
redirect times it'll give you any delays

00:12:36,000 --> 00:12:40,110
that happens with your with your HTML

00:12:38,060 --> 00:12:43,770
it'll tell you when Don content loaded

00:12:40,110 --> 00:12:45,270
actually occurred and just getting these

00:12:43,770 --> 00:12:46,620
metrics I mean Google are pulling these

00:12:45,270 --> 00:12:47,850
into analytics for you but you could

00:12:46,620 --> 00:12:50,040
actually go and do your own stuff in

00:12:47,850 --> 00:12:51,899
your test suite and if your site goes be

00:12:50,040 --> 00:12:58,500
understood a number you can alert for

00:12:51,899 --> 00:13:01,740
that in addition to the the HTML timings

00:12:58,500 --> 00:13:03,990
we can also get some additional data

00:13:01,740 --> 00:13:15,390
here we can actually get every resource

00:13:03,990 --> 00:13:17,839
in your page go video we going to go I

00:13:15,390 --> 00:13:17,839
don't know

00:13:21,889 --> 00:13:29,600
it's not going mmm that's a video right

00:13:25,449 --> 00:13:31,069
you know thank you okay so here I've

00:13:29,600 --> 00:13:33,499
actually called window performance get

00:13:31,069 --> 00:13:36,049
entries and you'll see that it's given

00:13:33,499 --> 00:13:38,959
us a whole bunch of resource timing

00:13:36,049 --> 00:13:41,689
entries each one of these in this case

00:13:38,959 --> 00:13:44,089
this one was a resource you can see the

00:13:41,689 --> 00:13:45,559
script that it actually was we can see

00:13:44,089 --> 00:13:47,540
all the timings we can see if it

00:13:45,559 --> 00:13:49,639
redirected so obviously putting

00:13:47,540 --> 00:13:51,259
redirects on resources in your page is

00:13:49,639 --> 00:13:54,139
terrible for performance and we can

00:13:51,259 --> 00:13:55,759
track that so what I want to encourage

00:13:54,139 --> 00:13:57,949
you to do is actually going to use these

00:13:55,759 --> 00:14:00,499
these two simple really like super

00:13:57,949 --> 00:14:02,299
simple API s go and put those in and

00:14:00,499 --> 00:14:03,589
track some metrics and Ajax it back to

00:14:02,299 --> 00:14:05,329
your server so that you can actually go

00:14:03,589 --> 00:14:07,069
and track that for yourself and have

00:14:05,329 --> 00:14:08,569
your own numbers you don't have to fight

00:14:07,069 --> 00:14:10,249
for your you know your boss to let you

00:14:08,569 --> 00:14:12,230
use Google Analytics or whatever other

00:14:10,249 --> 00:14:13,519
analytic tool there is or something that

00:14:12,230 --> 00:14:15,199
costs money where you have to sign up

00:14:13,519 --> 00:14:16,459
for it you can just go and do this and

00:14:15,199 --> 00:14:17,689
then just beacon it back to your server

00:14:16,459 --> 00:14:22,819
which i think is actually really

00:14:17,689 --> 00:14:25,369
empowering as a front-end developer so

00:14:22,819 --> 00:14:28,040
those two to AP is super simple there's

00:14:25,369 --> 00:14:30,110
a performance timing and then there's

00:14:28,040 --> 00:14:31,939
get entries get entries you can also say

00:14:30,110 --> 00:14:33,679
get entries by type and you can say get

00:14:31,939 --> 00:14:36,949
entries by type of resource or get

00:14:33,679 --> 00:14:40,549
entries by type another one there's a

00:14:36,949 --> 00:14:42,529
three of work but coming back to the

00:14:40,549 --> 00:14:43,959
Guardian example that I showed earlier I

00:14:42,529 --> 00:14:47,059
think there's something interesting here

00:14:43,959 --> 00:14:51,169
we can actually go and track metrics

00:14:47,059 --> 00:14:52,730
custom metrics for stuff like how long

00:14:51,169 --> 00:14:54,949
did it take for the comments to actually

00:14:52,730 --> 00:14:58,519
load right so we could put a little code

00:14:54,949 --> 00:15:00,290
block around our Ajax and say how often

00:14:58,519 --> 00:15:03,350
you know what are the real people on

00:15:00,290 --> 00:15:04,850
outside all over the world firstly let's

00:15:03,350 --> 00:15:07,399
look at where they are let's look at

00:15:04,850 --> 00:15:08,720
what CDN they're using if any how often

00:15:07,399 --> 00:15:11,029
do the comments load how often do they

00:15:08,720 --> 00:15:14,959
fail because often we don't know this

00:15:11,029 --> 00:15:16,789
stuff and this is this is how you do it

00:15:14,959 --> 00:15:18,919
it's actually super simple you can make

00:15:16,789 --> 00:15:21,589
a mock in your timeline by using window

00:15:18,919 --> 00:15:24,709
performance mark in this example I've

00:15:21,589 --> 00:15:26,779
labeled it foo then you can go and say

00:15:24,709 --> 00:15:28,160
get entries by type mark and suddenly

00:15:26,779 --> 00:15:30,649
you've got custom metrics that have

00:15:28,160 --> 00:15:33,139
recorded using these nano times that the

00:15:30,649 --> 00:15:34,399
performance api's give you and then

00:15:33,139 --> 00:15:35,730
another really interesting part of that

00:15:34,399 --> 00:15:38,790
is you can measure something so you

00:15:35,730 --> 00:15:41,160
can say the sidebar initialization in

00:15:38,790 --> 00:15:43,500
the time from Dom complete until in your

00:15:41,160 --> 00:15:46,170
JavaScript code when your magic sidebar

00:15:43,500 --> 00:15:47,790
unit code loaded it took this much time

00:15:46,170 --> 00:15:54,420
and again you can track it and send it

00:15:47,790 --> 00:15:56,550
back again google chrome team who seem

00:15:54,420 --> 00:16:00,570
to do a lot of the performance work that

00:15:56,550 --> 00:16:01,920
we see online have a metric actually

00:16:00,570 --> 00:16:04,110
smell google chrome technically its web

00:16:01,920 --> 00:16:07,529
page test so web page test is a project

00:16:04,110 --> 00:16:10,110
that's sponsored by google and and they

00:16:07,529 --> 00:16:14,310
use the idea of visually complete and so

00:16:10,110 --> 00:16:15,839
they go and get your site and they get a

00:16:14,310 --> 00:16:17,449
video and they record the whole thing

00:16:15,839 --> 00:16:19,920
and then they break it up into

00:16:17,449 --> 00:16:21,839
increments here it's showing second by

00:16:19,920 --> 00:16:23,610
second but they actually break it into

00:16:21,839 --> 00:16:25,980
increments of 100 milliseconds and they

00:16:23,610 --> 00:16:27,779
get they actually diff the images and

00:16:25,980 --> 00:16:29,550
they figure out at what point your site

00:16:27,779 --> 00:16:30,899
was visually complete and I think this

00:16:29,550 --> 00:16:33,149
is a really interesting metric because

00:16:30,899 --> 00:16:36,870
it's actually when somebody will start

00:16:33,149 --> 00:16:39,089
interacting with your page people wait

00:16:36,870 --> 00:16:42,120
for things and you can you can actually

00:16:39,089 --> 00:16:44,430
see this in action on facebook anyone

00:16:42,120 --> 00:16:46,050
who uses facebook have you ever noticed

00:16:44,430 --> 00:16:48,329
we're on your timeline feed it shows a

00:16:46,050 --> 00:16:51,029
box and some lines and it kind of looks

00:16:48,329 --> 00:16:52,500
like the post is there it draws your eye

00:16:51,029 --> 00:16:55,350
straight away the side bars are still

00:16:52,500 --> 00:16:56,880
loading but you actually draw into the

00:16:55,350 --> 00:16:58,050
timeline and then suddenly the posts

00:16:56,880 --> 00:17:00,149
appear it's actually really interesting

00:16:58,050 --> 00:17:01,440
thing when they launched thought I

00:17:00,149 --> 00:17:04,530
noticed that I was engaging with the

00:17:01,440 --> 00:17:05,970
page sooner and i think that the study

00:17:04,530 --> 00:17:08,220
that they're they're doing there is is

00:17:05,970 --> 00:17:10,679
really interesting and I think this is

00:17:08,220 --> 00:17:12,449
the most interesting performance metric

00:17:10,679 --> 00:17:14,819
that we have is when will somebody start

00:17:12,449 --> 00:17:16,169
interacting with your page and using the

00:17:14,819 --> 00:17:18,660
performance api's that i've shown you

00:17:16,169 --> 00:17:19,500
you can actually go and say hey when was

00:17:18,660 --> 00:17:21,929
the first time that somebody actually

00:17:19,500 --> 00:17:23,280
clicked on the page when did they

00:17:21,929 --> 00:17:26,610
actually interact with something or

00:17:23,280 --> 00:17:29,549
select some text once to mention a

00:17:26,610 --> 00:17:31,020
couple of radical tools firstly you

00:17:29,549 --> 00:17:34,230
could use pinga more New Relic they seem

00:17:31,020 --> 00:17:35,880
to be about the same product essentially

00:17:34,230 --> 00:17:37,260
I think they're kind of copying each

00:17:35,880 --> 00:17:43,080
other I don't know if anyone works for

00:17:37,260 --> 00:17:44,909
them sorry they're about the same you

00:17:43,080 --> 00:17:47,220
can you can get your average load times

00:17:44,909 --> 00:17:49,110
you can you know breakdown by action you

00:17:47,220 --> 00:17:51,470
can break down by geographical region

00:17:49,110 --> 00:17:51,470
etc

00:17:51,890 --> 00:17:58,380
and also I wanted to shout out for four

00:17:55,620 --> 00:18:01,590
atoms tool and brents CSS that's where

00:17:58,380 --> 00:18:03,570
you can throw heaps of CSS at this thing

00:18:01,590 --> 00:18:05,700
and it'll tell you the statistics and

00:18:03,570 --> 00:18:07,890
characteristics of your styles so it'll

00:18:05,700 --> 00:18:11,720
give you a little graph this is one of

00:18:07,890 --> 00:18:11,720
my phrase I think its new is the

00:18:11,960 --> 00:18:17,789
specificity graph which was first coined

00:18:15,690 --> 00:18:20,730
I think by Harry Roberts maybe yep yep

00:18:17,789 --> 00:18:22,429
that's great cool as far as far as we

00:18:20,730 --> 00:18:25,380
know anyway shout out to Harry as well

00:18:22,429 --> 00:18:27,000
and I definitely encourage that you go

00:18:25,380 --> 00:18:28,380
and throw your CSS at this and

00:18:27,000 --> 00:18:29,789
understand some metrics and numbers

00:18:28,380 --> 00:18:32,130
because metrics and numbers allow you to

00:18:29,789 --> 00:18:33,720
talk with your team and figure out what

00:18:32,130 --> 00:18:38,970
you just did and what you should maybe

00:18:33,720 --> 00:18:40,620
do next and also setting up and

00:18:38,970 --> 00:18:42,899
installing all of these new tools or

00:18:40,620 --> 00:18:44,309
like using new services every time for

00:18:42,899 --> 00:18:47,220
every new project can be really tedious

00:18:44,309 --> 00:18:48,659
and I kind of agree with that too so for

00:18:47,220 --> 00:18:51,179
the last year or so I've been working on

00:18:48,659 --> 00:18:56,190
an app called caliber its caliber opcom

00:18:51,179 --> 00:18:59,070
and I track your site every day or when

00:18:56,190 --> 00:19:01,409
you hit it with an API I record videos I

00:18:59,070 --> 00:19:03,000
keep screenshots I get every metric that

00:19:01,409 --> 00:19:04,830
I can possibly get out of chrome

00:19:03,000 --> 00:19:08,330
devtools actually Rome run chrome

00:19:04,830 --> 00:19:10,409
headless and I record it all for you and

00:19:08,330 --> 00:19:13,080
that's been a really interesting project

00:19:10,409 --> 00:19:14,610
for me and love to love to get your

00:19:13,080 --> 00:19:17,070
feedback or see what you what you think

00:19:14,610 --> 00:19:21,390
about it here's a couple of quick

00:19:17,070 --> 00:19:22,919
takeaways one is your work set budgets

00:19:21,390 --> 00:19:25,169
and make sure that you talk about them

00:19:22,919 --> 00:19:27,299
on a regular basis because this is what

00:19:25,169 --> 00:19:30,600
you're judged on for quality as a

00:19:27,299 --> 00:19:34,909
developer and don't rely on what you

00:19:30,600 --> 00:19:36,990
think you know actually go and prove it

00:19:34,909 --> 00:19:39,050
thank you

00:19:36,990 --> 00:19:39,050

YouTube URL: https://www.youtube.com/watch?v=-D81Qj1YmPM


