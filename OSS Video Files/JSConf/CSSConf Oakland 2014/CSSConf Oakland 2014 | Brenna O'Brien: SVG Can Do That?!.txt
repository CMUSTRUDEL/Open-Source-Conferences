Title: CSSConf Oakland 2014 | Brenna O'Brien: SVG Can Do That?!
Publication date: 2015-01-25
Playlist: CSSConf Oakland 2014
Description: 
	SVG is gaining popularity amongst front-end developers, and for good reason. Simple vector shapes work well for icons and resolution independence makes SVG a great choice for responsive design. But did you know thereâ€™s a fun party land hiding inside your average SVG?

Find out about some of the lesser known (and crazier) capabilities of SVG, like morphing SVG shapes, SVGs that draw themselves, and even filling SVG with gifs. Weâ€™ll also look into the code guts of what actually goes into an SVG so you can start making SVG parties of your own.

BRENNA O'BRIEN

Brenna is a front-end developer, creator of csshexagon.com, and lead instructor at HackerYou and Ladies Learning Code. She loves experimenting with new web technology and pushing the boundaries of what CSS and JavaScript can do, especially if that involves weird math calculations. When she's not building websites, you'll find her cycling around Toronto and flooding the Internet with cat pictures.

http://brennaobrien.com/
https://twitter.com/brnnbrn
Captions: 
	00:00:02,929 --> 00:00:10,650
okay hi guys um so here to talk to you

00:00:06,899 --> 00:00:12,630
about SVG and more specifically like

00:00:10,650 --> 00:00:14,580
some of the weirder stuff that maybe you

00:00:12,630 --> 00:00:18,539
didn't know was kind of hiding inside

00:00:14,580 --> 00:00:20,520
all that weird XML code so I won't go

00:00:18,539 --> 00:00:24,289
into too much on like what we typically

00:00:20,520 --> 00:00:26,609
use SVG for just like a little primer

00:00:24,289 --> 00:00:28,710
lots of good resources that I can point

00:00:26,609 --> 00:00:32,610
you to if you want like a beginner intro

00:00:28,710 --> 00:00:34,620
but the basics of why SVG is catching on

00:00:32,610 --> 00:00:37,140
in the community is first of all its

00:00:34,620 --> 00:00:39,510
resolution independent so you have

00:00:37,140 --> 00:00:41,879
graphics that are defined by a vector

00:00:39,510 --> 00:00:43,950
path rather than a bunch of pixels so we

00:00:41,879 --> 00:00:46,770
can scale them up and down and that

00:00:43,950 --> 00:00:49,890
means they're really good for responsive

00:00:46,770 --> 00:00:51,840
design icons and logos people are using

00:00:49,890 --> 00:00:55,590
SVG a lot for they come out nice and

00:00:51,840 --> 00:00:58,079
crisp wherever you're using them and

00:00:55,590 --> 00:00:59,699
because they're XML based it's like code

00:00:58,079 --> 00:01:01,800
if you look into the graphic you can

00:00:59,699 --> 00:01:04,500
actually understand the code there you

00:01:01,800 --> 00:01:09,060
can have really easy like like

00:01:04,500 --> 00:01:11,369
manipulating States with SVG like a

00:01:09,060 --> 00:01:13,290
one-line CSS rule can give you a hover

00:01:11,369 --> 00:01:18,090
State on an icon without having to use a

00:01:13,290 --> 00:01:21,299
sprite or anything so if you dig into

00:01:18,090 --> 00:01:23,729
that little heart for example this is

00:01:21,299 --> 00:01:27,659
kind of just like some typical SVG code

00:01:23,729 --> 00:01:30,860
where you've got an SVG elements most

00:01:27,659 --> 00:01:33,240
shapes are going to be this path element

00:01:30,860 --> 00:01:35,460
and it's just a bunch of coordinates

00:01:33,240 --> 00:01:38,820
that draw out that shape in vector space

00:01:35,460 --> 00:01:40,890
and then you'll have like presentational

00:01:38,820 --> 00:01:42,780
attributes like fill and Stroke that we

00:01:40,890 --> 00:01:44,790
can fill out as well

00:01:42,780 --> 00:01:46,439
something you might notice here that's

00:01:44,790 --> 00:01:48,470
really important is there's no like

00:01:46,439 --> 00:01:51,720
pixels or anything on anything in here

00:01:48,470 --> 00:01:53,100
we are gonna actually everything all

00:01:51,720 --> 00:01:56,159
these coordinates you see are all

00:01:53,100 --> 00:01:58,890
relative to that view box attribute to

00:01:56,159 --> 00:02:04,140
up at the top so that's 0 0 100 100 is a

00:01:58,890 --> 00:02:06,689
hundred by a hundred like like canvas in

00:02:04,140 --> 00:02:09,660
SVG light and so important thing to keep

00:02:06,689 --> 00:02:12,060
in mind as we're moving around the view

00:02:09,660 --> 00:02:13,410
box is like super super important when

00:02:12,060 --> 00:02:15,450
you're dealing with SP

00:02:13,410 --> 00:02:17,760
and you want to kind of scale everything

00:02:15,450 --> 00:02:20,100
related to that and that's going to

00:02:17,760 --> 00:02:26,790
ensure kind of ultimate responsiveness

00:02:20,100 --> 00:02:28,410
and flexibility as we work with SVG so

00:02:26,790 --> 00:02:30,870
what I want to talk about though is that

00:02:28,410 --> 00:02:34,260
SVG is way more than just simple vector

00:02:30,870 --> 00:02:36,990
shapes if you check out like some

00:02:34,260 --> 00:02:38,790
resources on SVG barely even see that on

00:02:36,990 --> 00:02:41,130
the screen I had to shrink it there are

00:02:38,790 --> 00:02:44,340
80 valid SVG elements that you probably

00:02:41,130 --> 00:02:45,570
didn't know about most of them 20

00:02:44,340 --> 00:02:47,400
minutes doesn't give me time to cover

00:02:45,570 --> 00:02:49,290
them all but these are a few of my

00:02:47,400 --> 00:02:51,960
favorites that I found useful that we're

00:02:49,290 --> 00:02:55,400
gonna look at there's even a switch

00:02:51,960 --> 00:02:57,960
statement in SVG like that I found out

00:02:55,400 --> 00:03:00,170
haven't found a use case for it but it's

00:02:57,960 --> 00:03:00,170
there

00:03:00,200 --> 00:03:05,040
okay so first example I wanted to move

00:03:02,820 --> 00:03:07,860
through is SVG is really good at doing

00:03:05,040 --> 00:03:11,550
editorialized text so what I mean by

00:03:07,860 --> 00:03:13,530
that something like this where you know

00:03:11,550 --> 00:03:18,090
you've got very specific placement and

00:03:13,530 --> 00:03:21,540
sizing of of fonts that's something that

00:03:18,090 --> 00:03:26,120
is kind of tricky to do you know with

00:03:21,540 --> 00:03:29,010
just CSS to get that like right on and

00:03:26,120 --> 00:03:31,200
the way that that's gonna work is like

00:03:29,010 --> 00:03:33,720
we just have all these like SVG analogs

00:03:31,200 --> 00:03:35,340
of stuff so there's a T span that acts

00:03:33,720 --> 00:03:37,920
like a span to control individual

00:03:35,340 --> 00:03:43,320
elements and you've got positioning

00:03:37,920 --> 00:03:45,270
coordinates XY DX and dy and then the

00:03:43,320 --> 00:03:48,000
love there to turn it a different color

00:03:45,270 --> 00:03:50,610
you just throw a class on any SVG like

00:03:48,000 --> 00:03:54,540
sub component to effect it with CSS and

00:03:50,610 --> 00:03:56,640
say change the fill color so code looks

00:03:54,540 --> 00:03:59,880
like that I won't go into like super

00:03:56,640 --> 00:04:01,410
great details on the code examples but

00:03:59,880 --> 00:04:02,340
these are kind of here for reference if

00:04:01,410 --> 00:04:04,350
you guys want to look at the slides

00:04:02,340 --> 00:04:05,730
later but you can kind of see what's

00:04:04,350 --> 00:04:07,860
going on there there's a text element

00:04:05,730 --> 00:04:12,120
and there's these T spans for every

00:04:07,860 --> 00:04:14,700
single line the great thing about this

00:04:12,120 --> 00:04:17,549
is that it's totally responsive because

00:04:14,700 --> 00:04:19,770
we've sized this into the view box text

00:04:17,549 --> 00:04:21,479
I find is one of like the most annoying

00:04:19,770 --> 00:04:24,210
things to deal with when you're like

00:04:21,479 --> 00:04:26,070
doing responsive stuff so if you have

00:04:24,210 --> 00:04:27,120
something that's really specific like

00:04:26,070 --> 00:04:29,220
this it's going to

00:04:27,120 --> 00:04:31,830
well and it's better than an image

00:04:29,220 --> 00:04:33,360
because SVG text is still like there on

00:04:31,830 --> 00:04:36,000
the page and is still totally accessible

00:04:33,360 --> 00:04:37,889
to search engines screen readers that

00:04:36,000 --> 00:04:41,970
kind of thing so how do we make it

00:04:37,889 --> 00:04:43,229
responsive remember the view box size

00:04:41,970 --> 00:04:44,520
everything in your view box and then

00:04:43,229 --> 00:04:46,800
you're just gonna put it in a flexible

00:04:44,520 --> 00:04:48,960
container and let the container handle

00:04:46,800 --> 00:04:54,449
at the same way like image max width

00:04:48,960 --> 00:04:56,970
100% works another example of

00:04:54,449 --> 00:04:59,370
editorialized text is text on like a

00:04:56,970 --> 00:05:03,449
curved path you can do really easily

00:04:59,370 --> 00:05:06,030
with SVG so the way we did this is I

00:05:03,449 --> 00:05:07,860
just traced out a path like druid and

00:05:06,030 --> 00:05:09,240
illustrator overtop it's kind of hard to

00:05:07,860 --> 00:05:13,289
see there's a really faint red line

00:05:09,240 --> 00:05:16,169
there you can really easily get SVG code

00:05:13,289 --> 00:05:21,120
like by exporting it as SVG from vector

00:05:16,169 --> 00:05:27,419
editing software and then so path this

00:05:21,120 --> 00:05:30,389
path ID arc is what defines the that arc

00:05:27,419 --> 00:05:32,250
and then what you're gonna do instead of

00:05:30,389 --> 00:05:35,010
just using a text element here there's

00:05:32,250 --> 00:05:38,130
this thing called text path and text

00:05:35,010 --> 00:05:40,050
path is going to let you fit the text

00:05:38,130 --> 00:05:42,990
along whatever vector path so you can do

00:05:40,050 --> 00:05:45,590
pretty crazy stuff with that and another

00:05:42,990 --> 00:05:49,229
kind of common pattern we're gonna see

00:05:45,590 --> 00:05:53,039
path has an ID and then it's been linked

00:05:49,229 --> 00:05:54,570
with this X link href equals hash arc so

00:05:53,039 --> 00:05:58,169
we're linking these two SVG things

00:05:54,570 --> 00:06:01,440
together another really important thing

00:05:58,169 --> 00:06:02,520
that's going to come up often in here is

00:06:01,440 --> 00:06:06,180
this depth

00:06:02,520 --> 00:06:07,620
element so this you notice that that arc

00:06:06,180 --> 00:06:09,630
doesn't actually get rendered on the

00:06:07,620 --> 00:06:11,490
page anywhere so that's because we've

00:06:09,630 --> 00:06:14,340
put it inside depths which is just a

00:06:11,490 --> 00:06:15,720
place to define like reusable components

00:06:14,340 --> 00:06:17,849
that you're gonna reference elsewhere

00:06:15,720 --> 00:06:22,979
it's really handy yet combining

00:06:17,849 --> 00:06:25,710
different SVG things together another

00:06:22,979 --> 00:06:31,110
thing I have been really a fan of with

00:06:25,710 --> 00:06:33,599
SVG is interesting fills so SVG has its

00:06:31,110 --> 00:06:37,080
own gradient syntax nothing too crazy

00:06:33,599 --> 00:06:38,760
they're different from CSS you're just

00:06:37,080 --> 00:06:39,650
going to define your stop colors as

00:06:38,760 --> 00:06:43,430
their own

00:06:39,650 --> 00:06:45,050
kind of elements here and you can

00:06:43,430 --> 00:06:46,820
control the direction with the X&Y

00:06:45,050 --> 00:06:50,000
coordinates here we've got it going on a

00:06:46,820 --> 00:06:51,500
gradient nothing exciting here when

00:06:50,000 --> 00:06:56,419
you're just talking about putting it on

00:06:51,500 --> 00:06:58,580
a rectangle what I think is cool is if

00:06:56,419 --> 00:07:01,100
we're gonna put that gradient inside a

00:06:58,580 --> 00:07:02,479
def settlement again so we're saying

00:07:01,100 --> 00:07:04,340
we're not gonna just let this gradient

00:07:02,479 --> 00:07:07,690
it actually won't do anything on its own

00:07:04,340 --> 00:07:11,449
and then we're gonna link it to like

00:07:07,690 --> 00:07:13,820
another shape you can start filling like

00:07:11,449 --> 00:07:15,470
really weird unconventional shapes not

00:07:13,820 --> 00:07:18,080
just like rectangles or what you're

00:07:15,470 --> 00:07:21,250
limited to in CSS so like anything you

00:07:18,080 --> 00:07:21,250
want can have a gradient field guys

00:07:22,780 --> 00:07:26,930
another cool thing you can do in the

00:07:24,770 --> 00:07:29,080
same vein you can fill any shape with an

00:07:26,930 --> 00:07:31,490
image how cool is that

00:07:29,080 --> 00:07:34,729
cropping images into weird shapes is

00:07:31,490 --> 00:07:37,280
like kind of shitty as like far as like

00:07:34,729 --> 00:07:38,840
labor overhead goes and also it's

00:07:37,280 --> 00:07:43,220
expensive if you've got an image with

00:07:38,840 --> 00:07:45,380
transparency on it so this one's a

00:07:43,220 --> 00:07:47,389
little more like complex but it's gonna

00:07:45,380 --> 00:07:49,039
use a lot of the same things we're going

00:07:47,389 --> 00:07:51,410
to learn about a new element here called

00:07:49,039 --> 00:07:53,389
pattern so it's kind of a bit of a hack

00:07:51,410 --> 00:07:55,760
getting an image in here but what

00:07:53,389 --> 00:07:57,830
pattern normally does is turns any SVG

00:07:55,760 --> 00:07:58,970
element into like a tileable pattern so

00:07:57,830 --> 00:08:01,639
if you were gonna like fill something

00:07:58,970 --> 00:08:03,860
with polka dots in the background but i

00:08:01,639 --> 00:08:08,000
think it's the most fun with using the

00:08:03,860 --> 00:08:10,160
SVG image element and more specifically

00:08:08,000 --> 00:08:12,440
i think it's the most fun when you start

00:08:10,160 --> 00:08:18,680
putting gifts inside things you can fill

00:08:12,440 --> 00:08:20,150
anything with a gift so code for that

00:08:18,680 --> 00:08:22,699
looks like this we're just sort of

00:08:20,150 --> 00:08:26,360
building up again again inside that

00:08:22,699 --> 00:08:27,860
depths and then inside a pattern and

00:08:26,360 --> 00:08:30,199
then you're just linking them together

00:08:27,860 --> 00:08:32,570
with the idea again so the fill for this

00:08:30,199 --> 00:08:34,099
path that heart-shaped path is going to

00:08:32,570 --> 00:08:36,860
be filled with the image that was

00:08:34,099 --> 00:08:38,390
defined as a pattern fill it's a lot to

00:08:36,860 --> 00:08:41,930
kind of keep track of but it's all there

00:08:38,390 --> 00:08:44,060
a few things to keep in mind when you're

00:08:41,930 --> 00:08:45,950
working with images because it's

00:08:44,060 --> 00:08:48,079
supposed to be a repeating pattern it

00:08:45,950 --> 00:08:50,680
can sometimes be tricky to get the image

00:08:48,079 --> 00:08:52,920
to completely fill your shape properly

00:08:50,680 --> 00:08:55,560
but remember your view up

00:08:52,920 --> 00:08:57,870
sighs everything to the view box if you

00:08:55,560 --> 00:09:00,420
match the width and height of the

00:08:57,870 --> 00:09:01,680
pattern so notice you can't see the view

00:09:00,420 --> 00:09:03,690
box here but it is a hundred by a

00:09:01,680 --> 00:09:05,790
hundred and the width and height of both

00:09:03,690 --> 00:09:08,459
the pattern and the image are both set

00:09:05,790 --> 00:09:12,269
to the entire view box space and then

00:09:08,459 --> 00:09:13,410
this last preserve aspect ratio oh sorry

00:09:12,269 --> 00:09:16,170
one more thing before you get to that

00:09:13,410 --> 00:09:19,110
this pattern units user space on use

00:09:16,170 --> 00:09:23,610
says size it to the view box not to any

00:09:19,110 --> 00:09:29,579
like shape that's inside of it not just

00:09:23,610 --> 00:09:33,029
to the thing it's filling SVG because

00:09:29,579 --> 00:09:35,639
it's XML kind of quirky sometimes make

00:09:33,029 --> 00:09:37,769
sure your images have both a width and a

00:09:35,639 --> 00:09:39,779
height if you don't specify it's gonna

00:09:37,769 --> 00:09:42,240
assume it's zero and then it just like

00:09:39,779 --> 00:09:44,910
poof disappears so always specify a

00:09:42,240 --> 00:09:47,510
width and height attribute and then

00:09:44,910 --> 00:09:49,920
there's this cool preserve aspect ratio

00:09:47,510 --> 00:09:51,269
attribute that you can do to kind of

00:09:49,920 --> 00:09:54,300
it's sort of like a background size

00:09:51,269 --> 00:09:57,269
cover one of the ways that you can set

00:09:54,300 --> 00:09:59,430
it for SVG again to insure so this is

00:09:57,269 --> 00:10:02,339
like if I didn't apply it see how it

00:09:59,430 --> 00:10:03,709
doesn't fully fill the heart so it's

00:10:02,339 --> 00:10:05,940
nice you don't have to worry about

00:10:03,709 --> 00:10:09,120
cropping your image to the exact size

00:10:05,940 --> 00:10:11,940
preserve aspect ratio if you give it the

00:10:09,120 --> 00:10:13,079
right values um there's a link here to

00:10:11,940 --> 00:10:17,730
check out it'll just fill it

00:10:13,079 --> 00:10:20,730
automatically for you okay let's combine

00:10:17,730 --> 00:10:23,760
two things that we've learned so far so

00:10:20,730 --> 00:10:27,920
how about editorialized text and

00:10:23,760 --> 00:10:30,630
gradient fills you get gradient text

00:10:27,920 --> 00:10:34,050
awesome right that's something that's

00:10:30,630 --> 00:10:36,360
been kind of tricky to do before most of

00:10:34,050 --> 00:10:38,220
the examples I saw we're using this

00:10:36,360 --> 00:10:42,029
WebKit background clip to make a

00:10:38,220 --> 00:10:44,490
clipping path out of the text not super

00:10:42,029 --> 00:10:46,769
cross browser friendly gradient text is

00:10:44,490 --> 00:10:49,949
going to work almost across the board

00:10:46,769 --> 00:10:54,510
with the exception of anything less than

00:10:49,949 --> 00:10:57,240
ie 9 as a caveat to all of this SVG is

00:10:54,510 --> 00:11:00,990
not going to do anything there hopefully

00:10:57,240 --> 00:11:04,620
you're like on to supporting ie 9 and

00:11:00,990 --> 00:11:06,810
above by now okay that was fun stood

00:11:04,620 --> 00:11:13,250
again ready how

00:11:06,810 --> 00:11:13,250
editorialize texts plus a gift bill what

00:11:14,000 --> 00:11:19,710
s mean you can do that like I think

00:11:18,090 --> 00:11:21,210
that's that's madness I've never seen

00:11:19,710 --> 00:11:23,040
anything that can do that before and it

00:11:21,210 --> 00:11:25,200
it's pretty straightforward

00:11:23,040 --> 00:11:26,520
so I don't know exactly what you would

00:11:25,200 --> 00:11:28,770
do with that on like a production

00:11:26,520 --> 00:11:31,380
website but I really hope one of you

00:11:28,770 --> 00:11:35,970
finds a use case please tell me if you

00:11:31,380 --> 00:11:38,810
work that into a project so one other

00:11:35,970 --> 00:11:42,870
area I wanted to cover too is

00:11:38,810 --> 00:11:45,690
interesting image effects so we'll start

00:11:42,870 --> 00:11:50,760
out with as an example of something you

00:11:45,690 --> 00:11:52,680
can do with SVG these are my cats they

00:11:50,760 --> 00:11:54,570
kind of hate each other sometimes and

00:11:52,680 --> 00:11:56,820
fight so only way to get them in a

00:11:54,570 --> 00:11:59,310
portrait together was to like do the

00:11:56,820 --> 00:12:01,200
portrait studio thing but this is

00:11:59,310 --> 00:12:03,720
actually using a few different SVG

00:12:01,200 --> 00:12:06,960
techniques here so it's that image

00:12:03,720 --> 00:12:09,390
element that we saw before combined with

00:12:06,960 --> 00:12:11,640
a radial gradient to do the sort of

00:12:09,390 --> 00:12:16,380
vignette shape and then something called

00:12:11,640 --> 00:12:17,820
a mask so like who works in Nord knows a

00:12:16,380 --> 00:12:20,700
bit about like you know Photoshop in

00:12:17,820 --> 00:12:22,589
that area okay so a few of you so like

00:12:20,700 --> 00:12:25,650
you might have encountered the concept

00:12:22,589 --> 00:12:27,810
of a mask it basically kind of works

00:12:25,650 --> 00:12:31,110
like a cookie cutter you can take one

00:12:27,810 --> 00:12:35,100
shape and like stamp out any other thing

00:12:31,110 --> 00:12:37,410
so in this example we've used like a an

00:12:35,100 --> 00:12:40,830
elliptical shape and an oval shaped mask

00:12:37,410 --> 00:12:42,839
to kind of stamp out that image and the

00:12:40,830 --> 00:12:44,670
cool thing about a mask there's also

00:12:42,839 --> 00:12:46,620
this thing called clip path which also

00:12:44,670 --> 00:12:49,110
works like a cookie cutter but it'll

00:12:46,620 --> 00:12:53,550
just stamp it out with hard edges with a

00:12:49,110 --> 00:12:56,010
mask you can put gradients in to kind of

00:12:53,550 --> 00:12:57,839
fade out the edges so a black fill is

00:12:56,010 --> 00:12:59,910
going to give you an opaque mask a white

00:12:57,839 --> 00:13:01,650
fill gives you a transparent mask so

00:12:59,910 --> 00:13:05,190
this is really powerful with gradients

00:13:01,650 --> 00:13:09,180
you put a basically it's an oval with a

00:13:05,190 --> 00:13:12,360
radial gradient in it and that creates

00:13:09,180 --> 00:13:15,209
the mask to cut out the image so again

00:13:12,360 --> 00:13:19,470
sort of notice here with deaths we've

00:13:15,209 --> 00:13:20,610
included two different like we defined

00:13:19,470 --> 00:13:26,600
both the gradient

00:13:20,610 --> 00:13:30,119
and the mask and then the mask is

00:13:26,600 --> 00:13:33,029
referencing the gradient and then I've

00:13:30,119 --> 00:13:34,559
messed up the yes sorry right here the

00:13:33,029 --> 00:13:38,129
ellipse is actually being filled with

00:13:34,559 --> 00:13:42,629
the gradient and then the image is using

00:13:38,129 --> 00:13:44,939
the mask as a mask here so you can

00:13:42,629 --> 00:13:46,709
really start like combining all these

00:13:44,939 --> 00:13:51,329
SVG pieces together to get it super

00:13:46,709 --> 00:13:53,970
creative and again look into like these

00:13:51,329 --> 00:13:56,249
interesting attributes like object

00:13:53,970 --> 00:13:59,420
bounding box mask units that help you

00:13:56,249 --> 00:13:59,420
size things properly

00:13:59,929 --> 00:14:06,540
another thing that SVG is pretty good at

00:14:02,699 --> 00:14:08,309
is filter effects so here's a cool

00:14:06,540 --> 00:14:12,569
example where they've got this sort of

00:14:08,309 --> 00:14:14,759
like ios8 like gradient overlay thing

00:14:12,569 --> 00:14:17,819
going on where if you take a look at

00:14:14,759 --> 00:14:19,470
this on the live example it actually

00:14:17,819 --> 00:14:23,610
like blurs the background as you scroll

00:14:19,470 --> 00:14:25,679
down the page which is super cool so

00:14:23,610 --> 00:14:32,579
there's an entire filter element and

00:14:25,679 --> 00:14:35,369
this one's using a blur filter and also

00:14:32,579 --> 00:14:37,439
like an RGB filter to alter some stuff

00:14:35,369 --> 00:14:40,049
and then just as I've been showing you

00:14:37,439 --> 00:14:42,779
guys primarily just linking stuff up

00:14:40,049 --> 00:14:46,709
within the SVG directly but just just so

00:14:42,779 --> 00:14:49,410
you know you can usually access most SVG

00:14:46,709 --> 00:14:51,149
attributes from your CSS so in this case

00:14:49,410 --> 00:14:53,879
it's being applied to every single

00:14:51,149 --> 00:14:57,179
section element so if you don't want to

00:14:53,879 --> 00:15:00,179
have to like you know repeat that in

00:14:57,179 --> 00:15:02,879
your your markup you can sort of combine

00:15:00,179 --> 00:15:08,279
defining things in SVG hooking them up

00:15:02,879 --> 00:15:10,230
with HTML or sorry CSS rather usually

00:15:08,279 --> 00:15:14,759
the attribute names just like the CSS

00:15:10,230 --> 00:15:17,399
property if you go crazy with filters

00:15:14,759 --> 00:15:20,249
you can essentially do like SVG

00:15:17,399 --> 00:15:21,839
Instagram there's a whole filters get

00:15:20,249 --> 00:15:25,319
kind of complex and you need a bit of

00:15:21,839 --> 00:15:26,819
knowledge of image manipulation and how

00:15:25,319 --> 00:15:30,059
that works but there's some good

00:15:26,819 --> 00:15:32,789
tutorials here so the example that we're

00:15:30,059 --> 00:15:34,529
looking at is like a combination of

00:15:32,789 --> 00:15:36,779
there's a turbulent

00:15:34,529 --> 00:15:39,810
filter and that creates like noise

00:15:36,779 --> 00:15:42,779
effects the blur we saw already is going

00:15:39,810 --> 00:15:45,930
to make a blur component transfer is one

00:15:42,779 --> 00:15:48,350
that you can actually you get sub

00:15:45,930 --> 00:15:50,879
elements to change our G and B

00:15:48,350 --> 00:15:53,100
separately so you can kind of change the

00:15:50,879 --> 00:15:55,290
color balance on stuff and then there's

00:15:53,100 --> 00:15:56,819
actually like light source effects even

00:15:55,290 --> 00:15:59,579
that you can do so you can do like

00:15:56,819 --> 00:16:01,980
shadowing and and some interesting stuff

00:15:59,579 --> 00:16:07,949
there if you if you dive into filter

00:16:01,980 --> 00:16:14,309
effects another thing SVG is pretty good

00:16:07,949 --> 00:16:16,230
at is animations so this is a really

00:16:14,309 --> 00:16:18,089
popular thing that's been happening a

00:16:16,230 --> 00:16:20,670
lot lately we've seen this before they

00:16:18,089 --> 00:16:22,620
like line drawing thing okay so like a

00:16:20,670 --> 00:16:25,319
few of you it's starting to show up more

00:16:22,620 --> 00:16:27,629
and more and that is SVG down at the

00:16:25,319 --> 00:16:30,209
bottom so if you like take a peek its

00:16:27,629 --> 00:16:33,749
SVG's that essentially draw themselves

00:16:30,209 --> 00:16:35,790
so this is actually I say almost like a

00:16:33,749 --> 00:16:40,050
bit of a hack to with some interesting

00:16:35,790 --> 00:16:42,959
attributes so this is going to rely on

00:16:40,050 --> 00:16:44,519
you having a path with a stroke so

00:16:42,959 --> 00:16:46,970
rather than a filled in shape and

00:16:44,519 --> 00:16:49,980
there's these two attributes that all

00:16:46,970 --> 00:16:52,199
SVG that you can apply to strokes one

00:16:49,980 --> 00:16:54,839
called stroke - array and one called

00:16:52,199 --> 00:16:56,699
stroke - offset check out the reference

00:16:54,839 --> 00:16:58,259
for like an in-depth explanation it's

00:16:56,699 --> 00:17:02,160
kind of beyond the what I have time for

00:16:58,259 --> 00:17:04,919
but stroke - array allows you to specify

00:17:02,160 --> 00:17:08,819
basically like a dashed line pattern but

00:17:04,919 --> 00:17:10,380
be really precise with like the length

00:17:08,819 --> 00:17:13,679
of the dashes and the lengths of the

00:17:10,380 --> 00:17:16,169
gaps and then stroke - offset just sort

00:17:13,679 --> 00:17:17,730
of shifts that around so you can control

00:17:16,169 --> 00:17:21,299
where the dashes start so we're gonna

00:17:17,730 --> 00:17:23,189
hack it by making basically a dash and a

00:17:21,299 --> 00:17:25,110
gap that are both as long as the entire

00:17:23,189 --> 00:17:26,579
shape and then we're just going to shift

00:17:25,110 --> 00:17:28,919
it and it gives you that animation

00:17:26,579 --> 00:17:32,580
effect so here's a really simple example

00:17:28,919 --> 00:17:37,830
of just one line so we have a hundred

00:17:32,580 --> 00:17:40,679
unit long walk like line and it has to

00:17:37,830 --> 00:17:41,970
like - components each as long as the

00:17:40,679 --> 00:17:43,860
line itself and then you just kind of

00:17:41,970 --> 00:17:46,630
move it along you just move along the

00:17:43,860 --> 00:17:49,710
gap and the filled in part

00:17:46,630 --> 00:17:53,140
and you might notice here that I'm

00:17:49,710 --> 00:17:55,750
animating this right inside the SVG SVG

00:17:53,140 --> 00:18:01,890
actually has an animated element that

00:17:55,750 --> 00:18:04,780
you can animate almost any SVG attribute

00:18:01,890 --> 00:18:07,180
you might wonder though why not just

00:18:04,780 --> 00:18:09,460
like animate with CSS or JavaScript

00:18:07,180 --> 00:18:11,490
typically those are better and probably

00:18:09,460 --> 00:18:14,230
more performant tools for achieving this

00:18:11,490 --> 00:18:15,730
in the case of the line drawing that's

00:18:14,230 --> 00:18:17,830
probably what I would have gone with

00:18:15,730 --> 00:18:20,770
just kind of wanted to show you guys the

00:18:17,830 --> 00:18:24,820
possibility there there is one case that

00:18:20,770 --> 00:18:28,630
I've found that SVG animate is like like

00:18:24,820 --> 00:18:36,010
kind of way better and like gets the job

00:18:28,630 --> 00:18:39,360
done faster and that's tweens birthday

00:18:36,010 --> 00:18:43,110
alright thank you didn't fashionable

00:18:39,360 --> 00:18:47,530
wish I was that cool when I was between

00:18:43,110 --> 00:18:51,340
so yeah SVG can like pretty easily morph

00:18:47,530 --> 00:18:53,650
shapes from one to another so I think I

00:18:51,340 --> 00:18:59,340
have time to show you guys this example

00:18:53,650 --> 00:19:02,550
that I just kind of went to town with

00:18:59,340 --> 00:19:05,260
these are just like a bunch of little

00:19:02,550 --> 00:19:07,960
SVG shapes there's one circle that gets

00:19:05,260 --> 00:19:10,990
like cloned with JavaScript but the main

00:19:07,960 --> 00:19:13,090
animation of one-quarter morphing into

00:19:10,990 --> 00:19:16,540
like an opposite shape quarter is all

00:19:13,090 --> 00:19:19,090
done in SVG and then you can like play

00:19:16,540 --> 00:19:22,150
around with it in j/s to get it to go

00:19:19,090 --> 00:19:28,600
kind of like kaleidoscope II so that was

00:19:22,150 --> 00:19:33,010
kind of fun yeah so a simpler example of

00:19:28,600 --> 00:19:35,610
this the way that the morph works is

00:19:33,010 --> 00:19:39,190
remember going back to that heart shape

00:19:35,610 --> 00:19:42,610
how every single path was defined by a

00:19:39,190 --> 00:19:46,050
series of points in coordinate space and

00:19:42,610 --> 00:19:48,160
it's the D attribute I think it's like I

00:19:46,050 --> 00:19:52,200
can't even remember what D stands for

00:19:48,160 --> 00:19:56,250
right now but the path like definition

00:19:52,200 --> 00:19:58,800
if you basically what you see here under

00:19:56,250 --> 00:20:02,250
we're saying I'm going to animate

00:19:58,800 --> 00:20:04,250
the D attribute and then the values that

00:20:02,250 --> 00:20:07,140
I want to animate it kind of to and from

00:20:04,250 --> 00:20:09,420
it's actually just to but in order that

00:20:07,140 --> 00:20:11,250
it kind of like goes forward and

00:20:09,420 --> 00:20:13,320
backwards nicely I've repeated the first

00:20:11,250 --> 00:20:16,380
value but these are just two sets of

00:20:13,320 --> 00:20:19,620
like coordinate points that SVG handles

00:20:16,380 --> 00:20:21,810
the tween and the morph between one

00:20:19,620 --> 00:20:23,160
shape and another so that's something

00:20:21,810 --> 00:20:26,970
that you can't really do without like an

00:20:23,160 --> 00:20:34,560
external library in in J s so kind of

00:20:26,970 --> 00:20:35,880
neat that SVG can do that so there's

00:20:34,560 --> 00:20:39,090
still like way more that I haven't

00:20:35,880 --> 00:20:40,980
covered these are just some of like the

00:20:39,090 --> 00:20:43,550
weird things that I've found hiding in

00:20:40,980 --> 00:20:48,210
there and thought we're pretty cool so

00:20:43,550 --> 00:20:51,390
you know sort of in the the vein of this

00:20:48,210 --> 00:20:55,140
morning like just yeah go exploring make

00:20:51,390 --> 00:20:56,580
stuff up like there's just so much that

00:20:55,140 --> 00:20:59,070
I don't think like a lot of people

00:20:56,580 --> 00:21:02,700
realize but it's all documented it's all

00:20:59,070 --> 00:21:05,070
there these are some good resources that

00:21:02,700 --> 00:21:07,170
I found helpful and you know I honestly

00:21:05,070 --> 00:21:09,960
just been be reading through these and

00:21:07,170 --> 00:21:12,030
say oh like there's that element like I

00:21:09,960 --> 00:21:14,460
can do this sort of thing and go play

00:21:12,030 --> 00:21:16,770
around with it and like produce some

00:21:14,460 --> 00:21:19,260
some pretty cool results so I'd

00:21:16,770 --> 00:21:21,990
encourage you guys to go try and do the

00:21:19,260 --> 00:21:24,060
same and you know in a wider sense like

00:21:21,990 --> 00:21:26,580
don't take any technology kind of for

00:21:24,060 --> 00:21:29,400
granted don't you know really just like

00:21:26,580 --> 00:21:32,070
dig into the details and and go

00:21:29,400 --> 00:21:34,940
exploring and see what you find that's

00:21:32,070 --> 00:21:34,940
all thanks

00:21:36,330 --> 00:21:38,390

YouTube URL: https://www.youtube.com/watch?v=UHmXD6GH2l8


