Title: Open Source 2021 Sponsor Series: Tom Wilson CEO of hyper63 "hyper63 Demo" Segment
Publication date: 2021-02-20
Playlist: Open Source 2021 Sponsor Series: Tom Wilson, CEO of hyper63
Description: 
	Separating Business Logic From General Services = Happier DEVS and Faster Production" by Tom Wilson, CEO at hyper63

This video is part of the Open Source 2021 Sponsor Series which highlights Presenting level sponsors. It features Tom Wilson, CEO of hyper63. 

Video Segments
1. What Problem Does hyper63 Solve? 
2. hyper63 Demo 
3. How to Leverage hyper63
4. Contact
5. About Tom

Why we love hyper63

In short, it solves a real problem we hear about all the time. Developers spend nearly half their time on maintenance, bugs, product upkeep, etc.  Hyper63 reduces complexity by separating business logic (the secret sauce) from general services (databases, caching, search, etc.) and enables a focus on the business solution - not the moving parts. The result is happier developers, faster production, and higher product quality. 

About Tom

Tom Wilson is the CEO and Founder of hyper63, LLC a company focused on developer happiness. Tom has been in technology for 25+ years and has led teams over the years to build multiple enterprise applications, including GuardianRx at Carepoint, Xeris at ExcelleRx, and EireneRx and MedWise at Tabula Rasa Healthcare (ticker symbol TRHC), a publicly-traded company where he served as Chief Technology Innovation Officer (CTIO). Tom has also been involved in the technology and open-source community since 2007. He started the Charleston (South Carolina) Ruby meetup and Charleston JS meetup and loves talking with other technologists about software development. Tom these days focus on Javascript, Functional Javascript, SvelteJS, APIs, and hyper63. Tom has spoken and given workshops at several events including All Things Open and OpenSource 101. Tom is married with two children - a boy 12 years old and a girl 6 years old. He lives in Mount Pleasant, South Carolina, and enjoys boating and attempting to play golf.

Contact
Twitter: https://twitter.com/twilson63
GitHub: https://github.com/twilson63
LinkedIn: https://www.linkedin.com/in/twilson63/
Captions: 
	00:00:05,359 --> 00:00:12,000
so this is a demo

00:00:06,799 --> 00:00:15,280
um a little tour of hyper 63 uh hyper 63

00:00:12,000 --> 00:00:18,240
tour repo is on github and you can

00:00:15,280 --> 00:00:18,960
look at this uh repo and actually follow

00:00:18,240 --> 00:00:22,240
along

00:00:18,960 --> 00:00:24,480
uh on on this tour on your own um but

00:00:22,240 --> 00:00:26,160
for today just because i have a couple

00:00:24,480 --> 00:00:26,720
of minutes of time i'm just going to go

00:00:26,160 --> 00:00:30,560
through

00:00:26,720 --> 00:00:33,680
a couple of features of hyper 63

00:00:30,560 --> 00:00:36,000
specifically the data and the search

00:00:33,680 --> 00:00:37,360
so every application needs to store

00:00:36,000 --> 00:00:40,320
structured data

00:00:37,360 --> 00:00:41,280
and instead of making a decision whether

00:00:40,320 --> 00:00:45,120
you want to use

00:00:41,280 --> 00:00:47,360
my sql or postgres or mongodb

00:00:45,120 --> 00:00:48,559
what hyper 63 does is removes that

00:00:47,360 --> 00:00:51,840
decision from you

00:00:48,559 --> 00:00:54,320
you just connect to a data service

00:00:51,840 --> 00:00:55,360
and you give it your database name in

00:00:54,320 --> 00:00:59,280
this case

00:00:55,360 --> 00:01:02,000
open source 101 dash and then you just

00:00:59,280 --> 00:01:02,800
run a put to that and so we're going to

00:01:02,000 --> 00:01:05,439
do that

00:01:02,800 --> 00:01:05,920
and when we hit save we're going to get

00:01:05,439 --> 00:01:09,040
ok

00:01:05,920 --> 00:01:12,479
true and our

00:01:09,040 --> 00:01:14,000
database is created so now we can add

00:01:12,479 --> 00:01:16,240
some documents to that

00:01:14,000 --> 00:01:17,040
without setting up tables or doing

00:01:16,240 --> 00:01:19,920
migrations

00:01:17,040 --> 00:01:21,840
we just post a document to that database

00:01:19,920 --> 00:01:25,119
and we can just run

00:01:21,840 --> 00:01:26,000
a post with slash data and the name of

00:01:25,119 --> 00:01:28,080
our database

00:01:26,000 --> 00:01:30,400
and give it a document in this case

00:01:28,080 --> 00:01:32,799
we're going to use ghostbusters

00:01:30,400 --> 00:01:34,400
and ghostbusters is just a document

00:01:32,799 --> 00:01:38,000
object with a title

00:01:34,400 --> 00:01:40,799
a year and a genre so we'll just hit

00:01:38,000 --> 00:01:41,759
save and we'll see that that's saved to

00:01:40,799 --> 00:01:44,479
our database

00:01:41,759 --> 00:01:45,439
we'll go ahead and add a couple more

00:01:44,479 --> 00:01:49,040
we'll add

00:01:45,439 --> 00:01:50,399
um groundhog day we just had groundhog

00:01:49,040 --> 00:01:53,520
day by the way that was

00:01:50,399 --> 00:01:56,240
a fun movie you've never seen

00:01:53,520 --> 00:01:57,759
uh that movie i'd definitely recommend

00:01:56,240 --> 00:02:01,040
it and then we'll add

00:01:57,759 --> 00:02:03,040
avengers um another great movie

00:02:01,040 --> 00:02:05,200
so we've added a couple of documents to

00:02:03,040 --> 00:02:08,000
our database and we can

00:02:05,200 --> 00:02:09,920
see those documents by just doing a get

00:02:08,000 --> 00:02:12,400
on our database

00:02:09,920 --> 00:02:13,599
and that should show all the documents

00:02:12,400 --> 00:02:17,360
that we have

00:02:13,599 --> 00:02:20,959
nice and easy and we can

00:02:17,360 --> 00:02:23,440
pull just the documental array

00:02:20,959 --> 00:02:24,160
by just adding dots to the end of that

00:02:23,440 --> 00:02:27,680
and

00:02:24,160 --> 00:02:31,120
now build a search index

00:02:27,680 --> 00:02:34,480
um so instead of going and you know

00:02:31,120 --> 00:02:36,080
building up a search cluster using

00:02:34,480 --> 00:02:39,360
elasticsearch or

00:02:36,080 --> 00:02:40,560
kendra or any other search project we've

00:02:39,360 --> 00:02:43,760
got that built in

00:02:40,560 --> 00:02:45,840
and again it's a distraction away so to

00:02:43,760 --> 00:02:49,040
build a search engine

00:02:45,840 --> 00:02:52,319
in hyper 63 it's just another put

00:02:49,040 --> 00:02:55,360
we just add a put and instead of data

00:02:52,319 --> 00:02:57,840
we specify search and

00:02:55,360 --> 00:02:59,360
um there's one piece we have to add to

00:02:57,840 --> 00:03:02,159
it that i always forget

00:02:59,360 --> 00:03:04,000
is we got to tell it what fields we want

00:03:02,159 --> 00:03:08,159
to search on so we

00:03:04,000 --> 00:03:12,720
do fields and we'll say title

00:03:08,159 --> 00:03:13,760
and year and now we've got our search

00:03:12,720 --> 00:03:18,159
database

00:03:13,760 --> 00:03:20,640
and we can go and just uh

00:03:18,159 --> 00:03:22,879
add some documents to it so we're gonna

00:03:20,640 --> 00:03:22,879
do

00:03:25,040 --> 00:03:29,920
a wait and to add documents we'll do a

00:03:28,480 --> 00:03:33,840
post

00:03:29,920 --> 00:03:33,840
and we'll say search

00:03:34,159 --> 00:03:38,000
and then we're going to add to our rest

00:03:36,799 --> 00:03:41,360
endpoint

00:03:38,000 --> 00:03:43,200
a command underscore

00:03:41,360 --> 00:03:45,440
bulk and this is just going to say you

00:03:43,200 --> 00:03:49,680
know what we want to put

00:03:45,440 --> 00:03:52,799
more than one document in the database

00:03:49,680 --> 00:03:52,799
or the search index

00:03:54,400 --> 00:04:00,159
right now so we're going to add our

00:03:57,680 --> 00:04:01,360
docs and we need to get those docs so

00:04:00,159 --> 00:04:04,640
we'll

00:04:01,360 --> 00:04:07,840
un comment out this command here

00:04:04,640 --> 00:04:10,879
and we get the docs and now we should uh

00:04:07,840 --> 00:04:14,319
add those docs to our

00:04:10,879 --> 00:04:18,160
search index and then the last piece

00:04:14,319 --> 00:04:21,280
is we want to be able to search by

00:04:18,160 --> 00:04:24,479
uh giving it some text so

00:04:21,280 --> 00:04:29,680
we just um call a query command

00:04:24,479 --> 00:04:32,080
on our search um index so await

00:04:29,680 --> 00:04:32,080
post

00:04:32,720 --> 00:04:39,280
search and then slash

00:04:36,880 --> 00:04:39,280
query

00:04:40,160 --> 00:04:43,520
and then we pass in an object and that

00:04:42,479 --> 00:04:47,199
object

00:04:43,520 --> 00:04:51,520
we have a query property and we'll say

00:04:47,199 --> 00:04:51,520
ghost busters

00:04:52,320 --> 00:04:55,759
and once we save that we get a search

00:04:54,639 --> 00:04:58,320
back

00:04:55,759 --> 00:04:59,840
and matches and it's a search engine so

00:04:58,320 --> 00:05:03,440
it'll give us a score

00:04:59,840 --> 00:05:04,479
of the relevancy for each match and just

00:05:03,440 --> 00:05:06,720
to

00:05:04,479 --> 00:05:08,160
make sure that everything works we can

00:05:06,720 --> 00:05:11,759
also

00:05:08,160 --> 00:05:15,039
search on near as well and get that back

00:05:11,759 --> 00:05:16,160
so that's a short demo i hope you can

00:05:15,039 --> 00:05:18,800
kind of see

00:05:16,160 --> 00:05:19,360
you know really one of the core design

00:05:18,800 --> 00:05:22,000
goals

00:05:19,360 --> 00:05:22,720
is just simplicity and the ability to

00:05:22,000 --> 00:05:25,759
keep

00:05:22,720 --> 00:05:27,680
your business rules um business logic

00:05:25,759 --> 00:05:29,360
separate from implementation so you

00:05:27,680 --> 00:05:33,199
don't have to care if that

00:05:29,360 --> 00:05:35,600
is google behind the scenes kendra or

00:05:33,199 --> 00:05:39,840
elasticsearch you're just wanting your

00:05:35,600 --> 00:05:39,840

YouTube URL: https://www.youtube.com/watch?v=cCtnAMIIXJ0


