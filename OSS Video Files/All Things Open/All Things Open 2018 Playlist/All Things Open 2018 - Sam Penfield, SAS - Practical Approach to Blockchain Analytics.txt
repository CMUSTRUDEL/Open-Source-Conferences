Title: All Things Open 2018 - Sam Penfield, SAS - Practical Approach to Blockchain Analytics
Publication date: 2018-12-05
Playlist: All Things Open 2018 Playlist
Description: 
	All Things Open 2018 - Sam Penfield, SAS - Practical Approach to Blockchain Analytics
Captions: 
	00:00:02,449 --> 00:00:08,550
now a couple years at least give you an

00:00:05,279 --> 00:00:12,269
idea i think bitcoin was $400 when i

00:00:08,550 --> 00:00:13,559
started it's been a while so when i

00:00:12,269 --> 00:00:17,340
first started getting into it i was

00:00:13,559 --> 00:00:20,420
asked to look at bitcoin and really more

00:00:17,340 --> 00:00:22,890
from a regulatory perspective so our

00:00:20,420 --> 00:00:24,960
people our executives asked me to

00:00:22,890 --> 00:00:27,119
explain bitcoin a little bit to him and

00:00:24,960 --> 00:00:29,340
how it would work with some of our

00:00:27,119 --> 00:00:32,340
anti-money laundering products as well

00:00:29,340 --> 00:00:34,649
as our visual investigator so i started

00:00:32,340 --> 00:00:37,320
with that and and i was looking at the

00:00:34,649 --> 00:00:38,610
data and and he's any sass programmers

00:00:37,320 --> 00:00:41,280
in the room know the first thing you

00:00:38,610 --> 00:00:45,030
want to do is take your data and put it

00:00:41,280 --> 00:00:46,890
in SAS data set well I started to do

00:00:45,030 --> 00:00:48,420
that with Bitcoin or I did was able to

00:00:46,890 --> 00:00:50,399
do that Bitcoin had to write some Python

00:00:48,420 --> 00:00:52,260
code but I was able to extract it into

00:00:50,399 --> 00:00:54,329
SAS data sets and write it about five

00:00:52,260 --> 00:00:56,670
terabytes I said you know that's and

00:00:54,329 --> 00:00:59,100
this is two years ago I said I think

00:00:56,670 --> 00:01:00,480
that's not gonna solve a problem because

00:00:59,100 --> 00:01:02,550
you have to actually create all the

00:01:00,480 --> 00:01:04,710
relationships if you know anything about

00:01:02,550 --> 00:01:08,760
the blockchain the binary format a

00:01:04,710 --> 00:01:10,100
Bitcoin so then I said I looked at and I

00:01:08,760 --> 00:01:12,750
said there's got to be a better way and

00:01:10,100 --> 00:01:16,530
so I said how about if I identify a

00:01:12,750 --> 00:01:18,750
person or a group so I found the ID and

00:01:16,530 --> 00:01:21,720
it's public knowledge for WikiLeaks they

00:01:18,750 --> 00:01:24,570
got kicked off a pay bound 2013 they

00:01:21,720 --> 00:01:26,610
moved over to Bitcoin so I was able to

00:01:24,570 --> 00:01:29,130
get the data out for Bitcoin it's a long

00:01:26,610 --> 00:01:32,520
story little longer I was able to get

00:01:29,130 --> 00:01:35,490
the actual relay IP address converted to

00:01:32,520 --> 00:01:37,290
a latitude longitude and I imported it

00:01:35,490 --> 00:01:39,090
into our visual investigator product

00:01:37,290 --> 00:01:41,759
which is a great product because it

00:01:39,090 --> 00:01:43,770
pretty much can ingest any data and it

00:01:41,759 --> 00:01:46,520
will map it if you have longitude and

00:01:43,770 --> 00:01:48,990
latitude so I actually took two 28,000

00:01:46,520 --> 00:01:51,780
transactions at the time for WikiLeaks

00:01:48,990 --> 00:01:54,540
and I put them inside of our visual

00:01:51,780 --> 00:01:56,930
investigator product now in and of

00:01:54,540 --> 00:01:59,250
itself there's no value really

00:01:56,930 --> 00:02:01,200
investigating just on the sake of

00:01:59,250 --> 00:02:02,520
Bitcoin because you don't know where the

00:02:01,200 --> 00:02:04,110
money came from you don't really know

00:02:02,520 --> 00:02:05,909
where they sent it to but you know that

00:02:04,110 --> 00:02:08,039
the ID it was involved in the

00:02:05,909 --> 00:02:10,050
transaction so if you were actually

00:02:08,039 --> 00:02:11,330
doing some type of other investigation

00:02:10,050 --> 00:02:14,840
you found that they had

00:02:11,330 --> 00:02:17,330
an ID you might be able to say well you

00:02:14,840 --> 00:02:19,220
know seems they're transferring $40,000

00:02:17,330 --> 00:02:21,440
every month which is what WikiLeaks was

00:02:19,220 --> 00:02:24,170
doing they're getting 40,000 in and

00:02:21,440 --> 00:02:26,050
they're getting 40,000 out so I'm not

00:02:24,170 --> 00:02:28,940
saying you could create a an

00:02:26,050 --> 00:02:31,250
investigation case on Bitcoin data alone

00:02:28,940 --> 00:02:35,150
but you could also but you could use it

00:02:31,250 --> 00:02:38,150
as part of the data so then I started

00:02:35,150 --> 00:02:41,630
looking a little deeper into into the

00:02:38,150 --> 00:02:43,370
blockchain and I just wanted to look at

00:02:41,630 --> 00:02:45,740
blockchain purely from an analytics

00:02:43,370 --> 00:02:47,830
perspective you know I'm not I don't

00:02:45,740 --> 00:02:50,660
delve into those cryptocurrencies I

00:02:47,830 --> 00:02:52,220
talked to the SEC a little while ago and

00:02:50,660 --> 00:02:53,810
the Treasury Department and they both

00:02:52,220 --> 00:02:57,080
consider these cryptocurrencies

00:02:53,810 --> 00:02:58,790
currently unregulated currencies so I

00:02:57,080 --> 00:03:01,100
really wanted to do it for more an

00:02:58,790 --> 00:03:03,170
analytic I also wanted to look at it

00:03:01,100 --> 00:03:04,550
from an enterprise perspective because

00:03:03,170 --> 00:03:07,880
I'm going to show you an approach that I

00:03:04,550 --> 00:03:11,420
put together that that introduces events

00:03:07,880 --> 00:03:14,840
as well as just basic analytics on

00:03:11,420 --> 00:03:16,640
blockchain data and the purpose the

00:03:14,840 --> 00:03:18,260
reason I said that my approach wouldn't

00:03:16,640 --> 00:03:20,930
work with Bitcoin there's too many

00:03:18,260 --> 00:03:22,370
there's millions of users and there's

00:03:20,930 --> 00:03:24,080
millions of miners and things that

00:03:22,370 --> 00:03:28,040
nature you wouldn't want events coming

00:03:24,080 --> 00:03:31,010
out of that network I also want to look

00:03:28,040 --> 00:03:33,800
at regulatory demands China and Japan

00:03:31,010 --> 00:03:36,019
have both expressed concerns about anti

00:03:33,800 --> 00:03:38,510
money laundering and another thing is

00:03:36,019 --> 00:03:40,459
called know your customer so they really

00:03:38,510 --> 00:03:42,019
want to try to figure some way to handle

00:03:40,459 --> 00:03:43,670
that now the problem with that is in

00:03:42,019 --> 00:03:45,560
Bitcoin you know you have an address you

00:03:43,670 --> 00:03:47,630
really don't know your there's no

00:03:45,560 --> 00:03:50,800
reference to your name or any data about

00:03:47,630 --> 00:03:53,180
you so they've got a tough road there

00:03:50,800 --> 00:03:55,150
but I also want to look at operational

00:03:53,180 --> 00:03:57,980
performance so we get these Enterprise

00:03:55,150 --> 00:04:01,100
per you know permission environments

00:03:57,980 --> 00:04:03,890
they you know whether you like it or not

00:04:01,100 --> 00:04:05,950
all enterprise solutions have to have

00:04:03,890 --> 00:04:08,120
metrics they have to have operational

00:04:05,950 --> 00:04:10,780
statistics as well as informational

00:04:08,120 --> 00:04:10,780
statistics

00:04:12,190 --> 00:04:17,290
so what does a blockchain and just

00:04:14,590 --> 00:04:20,530
everyone just a level set here this is

00:04:17,290 --> 00:04:24,330
basically just a linked list of links of

00:04:20,530 --> 00:04:27,460
transactions you know the you adds

00:04:24,330 --> 00:04:29,140
cryptography and hashing and the bottom

00:04:27,460 --> 00:04:32,800
line is Bitcoin solved the problem of

00:04:29,140 --> 00:04:37,390
double spending and I think January will

00:04:32,800 --> 00:04:39,040
be 10 years for Bitcoin give you an idea

00:04:37,390 --> 00:04:41,500
to landscape I check this this morning

00:04:39,040 --> 00:04:44,500
there are two thousand hundred and fifty

00:04:41,500 --> 00:04:46,360
cryptocurrencies most of these are icos

00:04:44,500 --> 00:04:48,070
and if you've done any research you

00:04:46,360 --> 00:04:50,710
pretty much can create and I say it

00:04:48,070 --> 00:04:52,120
yourself that's the interesting thing is

00:04:50,710 --> 00:04:56,680
they e percent of the funding according

00:04:52,120 --> 00:04:58,450
to coin desk is coming from ICS versus

00:04:56,680 --> 00:05:00,550
venture capital so you create your own

00:04:58,450 --> 00:05:04,270
coin you convince people to donate money

00:05:00,550 --> 00:05:05,680
to your coin and you instead of going

00:05:04,270 --> 00:05:07,870
out to a venture capital group and

00:05:05,680 --> 00:05:09,280
saying to them hey I have a great idea

00:05:07,870 --> 00:05:11,110
and they're having to prove to them

00:05:09,280 --> 00:05:14,110
before they give your money so the icos

00:05:11,110 --> 00:05:18,250
are like 84% according to this coin desk

00:05:14,110 --> 00:05:20,440
survey you know blockchain projects are

00:05:18,250 --> 00:05:22,120
going on everywhere you know hyper

00:05:20,440 --> 00:05:24,070
Ledger's and all these different areas

00:05:22,120 --> 00:05:26,650
and I got again this is all from a coin

00:05:24,070 --> 00:05:30,400
desk quarterly report our three chord is

00:05:26,650 --> 00:05:32,020
real popular and you know the LT

00:05:30,400 --> 00:05:37,270
investments Microsoft and them are all

00:05:32,020 --> 00:05:39,460
heavily into this stuff so we'll take a

00:05:37,270 --> 00:05:41,620
look at what the public blockchains

00:05:39,460 --> 00:05:44,800
mostly your cryptocurrency theory and

00:05:41,620 --> 00:05:47,020
ripple Z cash there's several of those

00:05:44,800 --> 00:05:48,520
aim distributed no single point of

00:05:47,020 --> 00:05:50,169
failure all that good stuff and then

00:05:48,520 --> 00:05:52,300
there's the permission side which you're

00:05:50,169 --> 00:05:53,980
typically implemented inside firewalls

00:05:52,300 --> 00:05:55,060
now I've been a consultant for twenty

00:05:53,980 --> 00:05:57,280
years and I've worked with a lot of

00:05:55,060 --> 00:05:59,380
banks and I assure you even if they

00:05:57,280 --> 00:06:01,390
implement a blockchain it's not gonna be

00:05:59,380 --> 00:06:03,160
distribute outside their firewalls

00:06:01,390 --> 00:06:04,990
that's just reality then they're very

00:06:03,160 --> 00:06:07,800
slow it they're very sensitive to that

00:06:04,990 --> 00:06:12,190
stuff they do share cryptographic

00:06:07,800 --> 00:06:15,550
databases they have known identity and

00:06:12,190 --> 00:06:17,500
lots of lots of pocs and banks supplies

00:06:15,550 --> 00:06:19,210
in healthcare so here's the problem with

00:06:17,500 --> 00:06:20,840
blockchain this is my mathematical

00:06:19,210 --> 00:06:23,610
formula

00:06:20,840 --> 00:06:25,320
the bottom line is if you look at a if

00:06:23,610 --> 00:06:27,210
you look at a blockchain is made up of

00:06:25,320 --> 00:06:28,650
two things made of datastore which

00:06:27,210 --> 00:06:29,400
everyone considers a blockchain it's

00:06:28,650 --> 00:06:32,850
just a datastore

00:06:29,400 --> 00:06:34,290
it's not just data it's also a

00:06:32,850 --> 00:06:36,270
combination of a protocol and the

00:06:34,290 --> 00:06:38,850
protocol defines kind of the moving

00:06:36,270 --> 00:06:40,800
objects in a blockchain so if you look

00:06:38,850 --> 00:06:42,780
at a protocol you're looking at what do

00:06:40,800 --> 00:06:44,850
your clients how do you do consensus

00:06:42,780 --> 00:06:46,020
what are all the different ways of

00:06:44,850 --> 00:06:48,770
getting a transaction into your

00:06:46,020 --> 00:06:51,180
blotching in the datastore itself

00:06:48,770 --> 00:06:53,370
there's bunches of those so I think

00:06:51,180 --> 00:06:55,770
hyper ledger is to my knowledge I think

00:06:53,370 --> 00:06:57,780
it's changed started with rocks DB then

00:06:55,770 --> 00:06:59,910
it went to open level DB and now it's

00:06:57,780 --> 00:07:02,070
settled with level DB so there's a lot

00:06:59,910 --> 00:07:04,200
of churn there in a lot of the different

00:07:02,070 --> 00:07:06,480
block chains they all are different so

00:07:04,200 --> 00:07:08,690
how do I solve a problem with analytics

00:07:06,480 --> 00:07:11,520
will win this big very diverse

00:07:08,690 --> 00:07:20,960
environment the bottom line there's lots

00:07:11,520 --> 00:07:22,920
of them so here's my approach I

00:07:20,960 --> 00:07:25,650
basically want to be able to do

00:07:22,920 --> 00:07:27,360
real-time analytics on a blockchain so I

00:07:25,650 --> 00:07:30,510
want to look at those moving parts of a

00:07:27,360 --> 00:07:31,890
blockchain I want to work you know I

00:07:30,510 --> 00:07:33,570
want to be able to do the informational

00:07:31,890 --> 00:07:35,490
side which is the immutable data store

00:07:33,570 --> 00:07:37,920
reporting so you can actually pull data

00:07:35,490 --> 00:07:39,990
out and put it in two different forms

00:07:37,920 --> 00:07:42,540
and do that I want to apply some deep

00:07:39,990 --> 00:07:47,580
learning to it basically one of the

00:07:42,540 --> 00:07:50,520
foundations of AI continuous improvement

00:07:47,580 --> 00:07:52,080
and I feel that as we move forward we're

00:07:50,520 --> 00:07:53,430
gonna find a lot of block chains are

00:07:52,080 --> 00:07:55,500
going to be self-healing they're gonna

00:07:53,430 --> 00:07:56,760
be able to change and I think AI and

00:07:55,500 --> 00:07:59,180
deep learning is gonna play a big part

00:07:56,760 --> 00:07:59,180
in that

00:08:02,710 --> 00:08:08,480
so from our perspective we have

00:08:04,970 --> 00:08:11,720
satisfier which is our top project our

00:08:08,480 --> 00:08:15,500
top product right now it accesses you

00:08:11,720 --> 00:08:18,650
know the static immutable data it you

00:08:15,500 --> 00:08:19,910
know the event stream and we're going to

00:08:18,650 --> 00:08:21,920
actually use our event stream processing

00:08:19,910 --> 00:08:24,470
engine which has the exact same

00:08:21,920 --> 00:08:30,950
analytics built into it to connect it to

00:08:24,470 --> 00:08:33,610
your blockchain in IOT the other side of

00:08:30,950 --> 00:08:36,290
it is IOT and a lot of a lot of

00:08:33,610 --> 00:08:37,790
companies are trying to do I ot on the

00:08:36,290 --> 00:08:39,470
blockchain there's some performance

00:08:37,790 --> 00:08:41,030
problems there in a lot of cases and I

00:08:39,470 --> 00:08:42,710
think we can I think you're going to

00:08:41,030 --> 00:08:45,010
have to look at a stream based solution

00:08:42,710 --> 00:08:45,010
for that

00:08:50,850 --> 00:08:54,449
so my goals were to take a tactical

00:08:52,860 --> 00:08:56,279
approach to this we don't need to create

00:08:54,449 --> 00:08:57,810
a new product we can use existing SAS

00:08:56,279 --> 00:09:02,339
products with a lot of these these

00:08:57,810 --> 00:09:04,440
technologies I can actually develop

00:09:02,339 --> 00:09:06,420
models and our adventuring processing

00:09:04,440 --> 00:09:08,009
engine that are specific to blockchain

00:09:06,420 --> 00:09:09,690
so you can start introducing some of

00:09:08,009 --> 00:09:11,430
these things we can look at different

00:09:09,690 --> 00:09:12,839
analytics on the blockchain how's it

00:09:11,430 --> 00:09:15,300
performing where am I getting all my

00:09:12,839 --> 00:09:17,430
money from which clients which miners

00:09:15,300 --> 00:09:19,139
are if there's such a thing or how we

00:09:17,430 --> 00:09:21,329
doing consensus house consensus

00:09:19,139 --> 00:09:26,459
performing these are all gonna be key in

00:09:21,329 --> 00:09:28,410
an enterprise environment and I also

00:09:26,459 --> 00:09:31,649
want to be able to demonstrate you know

00:09:28,410 --> 00:09:34,319
cross industry things so I've developed

00:09:31,649 --> 00:09:36,060
and I want to develop a basic analytics

00:09:34,319 --> 00:09:39,540
model in our event stream processing

00:09:36,060 --> 00:09:41,430
engine then we could policy move across

00:09:39,540 --> 00:09:42,930
different block chains I think in the

00:09:41,430 --> 00:09:44,730
future what you're going to see is

00:09:42,930 --> 00:09:45,899
companies are kind of multiple block

00:09:44,730 --> 00:09:48,149
chains and what happens if they're

00:09:45,899 --> 00:09:51,149
disparate how are you gonna do analytics

00:09:48,149 --> 00:09:54,420
on these block chains when ones are 3/4

00:09:51,149 --> 00:09:56,690
and ones is aetherium and ones hyper

00:09:54,420 --> 00:09:56,690
ledger

00:10:01,670 --> 00:10:05,120
the bottom line on this and I'm just

00:10:03,650 --> 00:10:06,140
gonna skip to the bottom here because

00:10:05,120 --> 00:10:08,180
we're running I don't want to take it

00:10:06,140 --> 00:10:09,860
too much some of these charts we just

00:10:08,180 --> 00:10:13,400
basically noon it need a non-intrusive

00:10:09,860 --> 00:10:14,840
form of how do we get analytic self a

00:10:13,400 --> 00:10:23,990
blockchain without affecting the

00:10:14,840 --> 00:10:25,760
operation of the blockchain so I put

00:10:23,990 --> 00:10:27,380
this proof together I said I have to be

00:10:25,760 --> 00:10:30,440
able to prove what I'm saying here

00:10:27,380 --> 00:10:33,740
so I basically focused on streaming

00:10:30,440 --> 00:10:37,100
analytics because the data stores

00:10:33,740 --> 00:10:39,980
themselves are all our various forms we

00:10:37,100 --> 00:10:41,780
can write some connectivity to those to

00:10:39,980 --> 00:10:44,030
actually do analytics on that but I

00:10:41,780 --> 00:10:46,340
think keeping track of events in the

00:10:44,030 --> 00:10:49,280
blockchain is it's running it was really

00:10:46,340 --> 00:10:51,380
going to be key I also wanted a flexible

00:10:49,280 --> 00:10:52,880
analytics model and I'll show you the

00:10:51,380 --> 00:10:55,940
model i use and i actually have my

00:10:52,880 --> 00:10:58,730
blockchain running i a blockchain that

00:10:55,940 --> 00:11:00,890
i've created on this proof that yeah i

00:10:58,730 --> 00:11:04,880
can show you some of the interesting

00:11:00,890 --> 00:11:07,730
things about that my this block i also

00:11:04,880 --> 00:11:10,120
wanted to do component registration i

00:11:07,730 --> 00:11:12,230
wasn't focused on building a ledger i

00:11:10,120 --> 00:11:14,720
have a degree in accounting believe it

00:11:12,230 --> 00:11:16,700
or not but i don't really think that

00:11:14,720 --> 00:11:17,900
everything's a ledger it's kind of you

00:11:16,700 --> 00:11:20,720
have a hammer everything looks like a

00:11:17,900 --> 00:11:25,210
nail so i wouldn't this is basically a

00:11:20,720 --> 00:11:27,710
component registration type of approach

00:11:25,210 --> 00:11:31,430
cryptography okay all components within

00:11:27,710 --> 00:11:34,790
it within a proof have to have hashing

00:11:31,430 --> 00:11:37,670
and also have to have private public

00:11:34,790 --> 00:11:39,440
keys the block the blocks themselves i

00:11:37,670 --> 00:11:41,600
basically use a very kind of a similar

00:11:39,440 --> 00:11:42,950
approach that block that a bitcoin uses

00:11:41,600 --> 00:11:47,420
and in fact i used all the same

00:11:42,950 --> 00:11:49,340
algorithms and all entities new

00:11:47,420 --> 00:11:51,410
verification so i had to put this proof

00:11:49,340 --> 00:11:53,150
together so that i could prove that we

00:11:51,410 --> 00:11:56,150
could put analytics on a blockchain and

00:11:53,150 --> 00:12:02,330
not be intrusive or slow the blockchain

00:11:56,150 --> 00:12:03,770
down so it is a payload only blockchain

00:12:02,330 --> 00:12:05,810
and what do i mean by that well it's not

00:12:03,770 --> 00:12:07,850
ledger but every time you send a

00:12:05,810 --> 00:12:09,890
transaction from a client the client has

00:12:07,850 --> 00:12:11,570
to be registered and if it's not

00:12:09,890 --> 00:12:13,640
registered the transactions will never

00:12:11,570 --> 00:12:14,610
make it to the make it in they'll fail

00:12:13,640 --> 00:12:17,070
and be returned

00:12:14,610 --> 00:12:17,910
to the client or failure we'll go back

00:12:17,070 --> 00:12:19,950
to the client

00:12:17,910 --> 00:12:21,300
another thing about blockchain I don't

00:12:19,950 --> 00:12:23,220
know if you're familiar especially is

00:12:21,300 --> 00:12:26,730
enterprise

00:12:23,220 --> 00:12:28,620
hyper Ledger's written in go are three

00:12:26,730 --> 00:12:30,990
quarters written Kotlin anybody

00:12:28,620 --> 00:12:32,670
everybody heard of a cotton it's

00:12:30,990 --> 00:12:34,890
actually yeah it's actually created by

00:12:32,670 --> 00:12:37,649
his that many do it's actually created

00:12:34,890 --> 00:12:40,589
by IntelliJ they actually put that

00:12:37,649 --> 00:12:41,850
together and then so r3 is written in

00:12:40,589 --> 00:12:43,709
that so when you work with all these

00:12:41,850 --> 00:12:45,420
block chains have to apply analytics you

00:12:43,709 --> 00:12:50,519
have to take that into consideration

00:12:45,420 --> 00:12:52,230
I also I have I'm going to show you my

00:12:50,519 --> 00:12:53,940
client although components I have in

00:12:52,230 --> 00:12:57,149
this little simulator this blockchain

00:12:53,940 --> 00:12:59,940
simulator but there's really only two

00:12:57,149 --> 00:13:01,740
servers I don't have any Kafka I don't

00:12:59,940 --> 00:13:03,750
have any of the other message busts

00:13:01,740 --> 00:13:08,279
their servers I don't have anything but

00:13:03,750 --> 00:13:10,110
two processes the event stream the SAS

00:13:08,279 --> 00:13:13,529
event stream processing engine and the

00:13:10,110 --> 00:13:20,850
MongoDB which is where I keep the

00:13:13,529 --> 00:13:22,170
blockchain so how do i high wooden high

00:13:20,850 --> 00:13:25,560
throughput I'm going to do this in real

00:13:22,170 --> 00:13:28,680
time I want to be pluggable topologies

00:13:25,560 --> 00:13:30,480
for the clients and the miners I want to

00:13:28,680 --> 00:13:31,890
be able to switch data out real quickly

00:13:30,480 --> 00:13:34,019
and I've been able to do that I've

00:13:31,890 --> 00:13:39,420
actually have IOT devices hooked to this

00:13:34,019 --> 00:13:42,000
simulator the protocol is defined by the

00:13:39,420 --> 00:13:46,110
streaming engine and I'll show you the

00:13:42,000 --> 00:13:47,540
model it basically does consensus using

00:13:46,110 --> 00:13:51,240
the event stream processing

00:13:47,540 --> 00:13:53,670
it's a request response type where

00:13:51,240 --> 00:13:56,040
tokens are handed out to them to a miner

00:13:53,670 --> 00:13:58,709
object that basically gets permission to

00:13:56,040 --> 00:14:02,010
update the blockchain and of course a

00:13:58,709 --> 00:14:03,899
CSP it has all quality analytics it has

00:14:02,010 --> 00:14:06,480
everything built into it pretty much

00:14:03,899 --> 00:14:08,630
anything that our standard SAS products

00:14:06,480 --> 00:14:11,790
have from an analytics perspective

00:14:08,630 --> 00:14:13,440
complete multi-phase in-stream learning

00:14:11,790 --> 00:14:15,000
models train school or all that stuff

00:14:13,440 --> 00:14:17,480
that's right off our website so I didn't

00:14:15,000 --> 00:14:17,480
make any of that

00:14:20,910 --> 00:14:26,470
so here are my goals basically I wanted

00:14:24,429 --> 00:14:30,639
to develop a SAS analytics model that

00:14:26,470 --> 00:14:34,559
handles consensus and I also wanted to

00:14:30,639 --> 00:14:36,729
use open source technologies so all the

00:14:34,559 --> 00:14:39,729
cryptography that I have in there is all

00:14:36,729 --> 00:14:46,299
open source all the libraries are a lot

00:14:39,729 --> 00:14:48,369
of them are open source I wanted to be

00:14:46,299 --> 00:14:50,979
able to hook I owe T devices to it and

00:14:48,369 --> 00:14:53,470
if I could keep up with the IOT devices

00:14:50,979 --> 00:14:55,269
then I could keep up with analytics

00:14:53,470 --> 00:14:59,669
pretty much on any blockchain so that

00:14:55,269 --> 00:15:02,079
was another test and I implemented

00:14:59,669 --> 00:15:05,979
cryptography the STI just basically took

00:15:02,079 --> 00:15:07,889
the stuff that was written for Bitcoin

00:15:05,979 --> 00:15:09,100
you use the exact same algorithms

00:15:07,889 --> 00:15:11,859
sha-256

00:15:09,100 --> 00:15:17,799
the coal blitz curve all that good stuff

00:15:11,859 --> 00:15:20,470
so has this all fit in with SAS and the

00:15:17,799 --> 00:15:22,029
infrastructure so this is basically what

00:15:20,470 --> 00:15:24,100
SAS looks like and once you get inside

00:15:22,029 --> 00:15:27,819
two dotted lines you're wearing your in

00:15:24,100 --> 00:15:28,769
SAS space so by connecting to our to the

00:15:27,819 --> 00:15:33,189
blockchain

00:15:28,769 --> 00:15:34,480
with streaming you pretty much can once

00:15:33,189 --> 00:15:35,889
it's introduced there you could pretty

00:15:34,480 --> 00:15:37,660
much put any deity in there and the

00:15:35,889 --> 00:15:39,699
streaming engine itself can integrate

00:15:37,660 --> 00:15:42,220
that with any of the data storage data

00:15:39,699 --> 00:15:44,019
discovery products we have fraud and

00:15:42,220 --> 00:15:46,209
intelligence it really gives you a full

00:15:44,019 --> 00:15:48,549
full gambit of things and if you really

00:15:46,209 --> 00:15:51,399
want to go for the data store side of it

00:15:48,549 --> 00:15:54,059
you can use the api's on the bottom to

00:15:51,399 --> 00:15:54,059
connect to the blockchain

00:15:56,160 --> 00:16:01,569
so this is what I how I laid it out and

00:15:59,679 --> 00:16:04,899
you can with what you're going to see

00:16:01,569 --> 00:16:07,649
today I have basically at analytics

00:16:04,899 --> 00:16:10,329
presentation stream viewers one of our

00:16:07,649 --> 00:16:12,519
presentation tools the then stream

00:16:10,329 --> 00:16:16,479
processing engine is actually SAS this

00:16:12,519 --> 00:16:18,759
product the event blockchain that I have

00:16:16,479 --> 00:16:20,889
here is a simulator that I wrote it

00:16:18,759 --> 00:16:22,659
demonstrates the capability to it and

00:16:20,889 --> 00:16:25,839
these connectors are the hyper editor

00:16:22,659 --> 00:16:29,259
chain and in theory amore basically how

00:16:25,839 --> 00:16:31,379
to apply the events to these block

00:16:29,259 --> 00:16:35,609
chains and feed them up through the

00:16:31,379 --> 00:16:37,199
through the streaming side of it on the

00:16:35,609 --> 00:16:38,579
deep learning side one of the things I

00:16:37,199 --> 00:16:41,009
think is really being important in the

00:16:38,579 --> 00:16:42,179
future is if you're doing deep learning

00:16:41,009 --> 00:16:44,279
and you see you're having performance

00:16:42,179 --> 00:16:46,949
problems or you have you need to change

00:16:44,279 --> 00:16:49,139
the architecture of the structure of

00:16:46,949 --> 00:16:50,939
your blockchain you can do that on the

00:16:49,139 --> 00:16:53,279
fly so you can keep an eye on that I'm

00:16:50,939 --> 00:16:55,709
working on models right now to add deep

00:16:53,279 --> 00:16:56,399
learning into the actual consensus

00:16:55,709 --> 00:16:59,129
process

00:16:56,399 --> 00:17:01,349
it's my simulator basically you can

00:16:59,129 --> 00:17:03,899
actually send configuration information

00:17:01,349 --> 00:17:05,669
back to what I call miners and you can

00:17:03,899 --> 00:17:07,409
change the speed of them you can stop

00:17:05,669 --> 00:17:09,509
them you can start them so you can do a

00:17:07,409 --> 00:17:12,179
lot of stuff dynamically in a blockchain

00:17:09,509 --> 00:17:17,789
that may have be of interest to an

00:17:12,179 --> 00:17:19,769
enterprise and if you take my little

00:17:17,789 --> 00:17:21,870
simulator out this is pretty much how

00:17:19,769 --> 00:17:23,490
you could you can handle it through

00:17:21,870 --> 00:17:25,470
these connectors we can connect them

00:17:23,490 --> 00:17:27,509
into hyper letters or chain these

00:17:25,470 --> 00:17:30,480
connectors could be libraries could be

00:17:27,509 --> 00:17:31,889
any kind of open source type

00:17:30,480 --> 00:17:35,070
connectivity to it

00:17:31,889 --> 00:17:40,860
we support Kafka I think if I'm not

00:17:35,070 --> 00:17:41,759
mistaken hyper ledger uses Kafka so you

00:17:40,860 --> 00:17:43,440
could actually actually take

00:17:41,759 --> 00:17:44,730
transactions right out of there and feed

00:17:43,440 --> 00:17:51,120
them in so there's several these

00:17:44,730 --> 00:17:53,309
connectors that are be available for so

00:17:51,120 --> 00:17:54,629
this is what my second version what

00:17:53,309 --> 00:17:58,230
you're gonna see today and I'll demo

00:17:54,629 --> 00:18:00,570
this real quick it's basically the

00:17:58,230 --> 00:18:04,230
clients and the no controls are all

00:18:00,570 --> 00:18:08,039
written in go the miners are written in

00:18:04,230 --> 00:18:10,230
a JVM Java stuff consensus process is

00:18:08,039 --> 00:18:13,620
also written in Java the blockchain is

00:18:10,230 --> 00:18:15,840
MongoDB and the socket server is just an

00:18:13,620 --> 00:18:18,809
HTTP WebSocket server that I wrote that

00:18:15,840 --> 00:18:20,399
connects straight to ESP so all the

00:18:18,809 --> 00:18:22,889
analytics you're gonna see today are

00:18:20,399 --> 00:18:25,470
coming out of SAS ESP with the exception

00:18:22,889 --> 00:18:29,960
of the block display the block display

00:18:25,470 --> 00:18:29,960
itself is coming out of the blockchain

00:18:31,309 --> 00:18:36,649
now so let's talk a little bit about IOT

00:18:34,080 --> 00:18:39,720
if anybody heard of a Nordic thing e52

00:18:36,649 --> 00:18:42,119
Nordic semiconductor puts out these IOT

00:18:39,720 --> 00:18:44,850
devices so they create they gave me

00:18:42,119 --> 00:18:47,070
three of them I only put two up here and

00:18:44,850 --> 00:18:50,629
what I ended up doing was connecting it

00:18:47,070 --> 00:18:52,919
to the blockchain through a raspberry pi

00:18:50,629 --> 00:18:55,440
raspberry pi talks to the client the

00:18:52,919 --> 00:18:56,580
client encodes it runs it through and

00:18:55,440 --> 00:18:59,190
puts it in the blockchain now this

00:18:56,580 --> 00:19:02,490
little device these devices generate

00:18:59,190 --> 00:19:04,919
transactions every eight milliseconds so

00:19:02,490 --> 00:19:08,639
give you an idea you can actually this

00:19:04,919 --> 00:19:11,429
type of analytics within this SAS event

00:19:08,639 --> 00:19:13,139
stream processing can keep up with these

00:19:11,429 --> 00:19:15,360
devices and this is one of my first

00:19:13,139 --> 00:19:17,119
tests it's really kind of interesting I

00:19:15,360 --> 00:19:20,250
could actually show you the zero latency

00:19:17,119 --> 00:19:22,200
but the network ID on't devices what I

00:19:20,250 --> 00:19:24,990
have to configure them for a bigger

00:19:22,200 --> 00:19:26,850
network than this I don't have a way to

00:19:24,990 --> 00:19:28,889
connect them to that I connect them the

00:19:26,850 --> 00:19:31,110
raspberry pi to our internal network so

00:19:28,889 --> 00:19:33,090
someone had been my office turning

00:19:31,110 --> 00:19:35,309
devices would be very convincing

00:19:33,090 --> 00:19:37,889
so anyway I'm working on getting that

00:19:35,309 --> 00:19:41,029
more so we can demo that but these

00:19:37,889 --> 00:19:43,320
devices have asmath information

00:19:41,029 --> 00:19:44,820
rotational information there's a button

00:19:43,320 --> 00:19:48,690
on them there's actually a microphone on

00:19:44,820 --> 00:19:53,820
to so it goes like $39 they had given a

00:19:48,690 --> 00:19:55,440
couple of those to us so I'm going to

00:19:53,820 --> 00:19:58,110
show you my screen this is basically a

00:19:55,440 --> 00:20:01,500
block view this is how what the diagram

00:19:58,110 --> 00:20:02,820
inside though my little simulator looks

00:20:01,500 --> 00:20:04,889
like I have clients

00:20:02,820 --> 00:20:07,860
router dealers are now called no

00:20:04,889 --> 00:20:10,169
controllers each one of them has a hash

00:20:07,860 --> 00:20:12,799
as you can see this is a Gish them it

00:20:10,169 --> 00:20:15,720
shows the first six digits of the hash

00:20:12,799 --> 00:20:17,429
the consensus process runs they all talk

00:20:15,720 --> 00:20:18,929
that the only things that talk to the

00:20:17,429 --> 00:20:20,519
Venge string processing in the miner and

00:20:18,929 --> 00:20:23,669
the consensus the rest of them all are

00:20:20,519 --> 00:20:25,379
pretty much stateless processes so

00:20:23,669 --> 00:20:27,539
there's real the only servers you have

00:20:25,379 --> 00:20:31,070
here your block chain is MongoDB and

00:20:27,539 --> 00:20:31,070
your SAS event stream processing

00:20:33,600 --> 00:20:38,850
okay future thoughts before I show the

00:20:35,880 --> 00:20:40,350
demo new blockchains I think you're

00:20:38,850 --> 00:20:42,900
gonna be some some non ledger

00:20:40,350 --> 00:20:44,940
blockchains coming out as you look at

00:20:42,900 --> 00:20:46,410
things where they're capturing events

00:20:44,940 --> 00:20:48,510
let's say you're an emergency room you

00:20:46,410 --> 00:20:50,840
have all these devices I think the

00:20:48,510 --> 00:20:54,450
previous speaker had mentioned this idea

00:20:50,840 --> 00:20:56,370
that these devices are generating events

00:20:54,450 --> 00:20:58,620
they're not ledger transactions they're

00:20:56,370 --> 00:20:59,970
just events so you need to be able to

00:20:58,620 --> 00:21:01,830
capture them in a blockchain so you

00:20:59,970 --> 00:21:03,419
would register these devices and each

00:21:01,830 --> 00:21:06,090
one would have its own public private

00:21:03,419 --> 00:21:08,940
key and they would generate data into

00:21:06,090 --> 00:21:10,640
your blockchain so if just pure that now

00:21:08,940 --> 00:21:13,140
when the person comes into the hospital

00:21:10,640 --> 00:21:14,820
you probably have a ledger transaction

00:21:13,140 --> 00:21:17,460
just sure they've been taken into the

00:21:14,820 --> 00:21:19,440
into the hospital but once that happens

00:21:17,460 --> 00:21:21,480
and the same thing in supply chain two

00:21:19,440 --> 00:21:22,799
that they're generating all these events

00:21:21,480 --> 00:21:24,179
and you're just capturing them and

00:21:22,799 --> 00:21:27,419
they're part of your part of your

00:21:24,179 --> 00:21:30,570
process now the nice thing is because it

00:21:27,419 --> 00:21:33,750
is public private key all the records

00:21:30,570 --> 00:21:36,240
are signed and all of them are hashed so

00:21:33,750 --> 00:21:38,159
you could you could give this data back

00:21:36,240 --> 00:21:39,809
to the vendor and not know that it was

00:21:38,159 --> 00:21:42,030
my heart they were listening to or your

00:21:39,809 --> 00:21:43,799
heart they basically just had data about

00:21:42,030 --> 00:21:47,510
the device and they could do analytics

00:21:43,799 --> 00:21:47,510
on that and you could probably sell that

00:21:50,299 --> 00:21:55,289
high-throughput is going to be important

00:21:52,669 --> 00:21:57,059
data integrity is pretty much inherent

00:21:55,289 --> 00:22:00,320
with the design of a blockchain I think

00:21:57,059 --> 00:22:02,340
that's really the beauty of it you know

00:22:00,320 --> 00:22:04,590
you're gonna see block chains that

00:22:02,340 --> 00:22:07,140
connect to multiple industries so if you

00:22:04,590 --> 00:22:09,210
look at a I was at MIT talking with a

00:22:07,140 --> 00:22:11,429
group about transportation and what

00:22:09,210 --> 00:22:12,960
they're doing in Europe is if you get a

00:22:11,429 --> 00:22:15,179
walk out of your house you get on one of

00:22:12,960 --> 00:22:17,130
those little scooters you take your

00:22:15,179 --> 00:22:18,570
little scooter down you get nuber take

00:22:17,130 --> 00:22:20,610
you over to the train station and they

00:22:18,570 --> 00:22:23,760
give from the train station to train get

00:22:20,610 --> 00:22:25,950
out you walk to work now each one of

00:22:23,760 --> 00:22:29,580
those organizations have great systems

00:22:25,950 --> 00:22:31,200
that they want to keep that is throwing

00:22:29,580 --> 00:22:31,860
data they're not gonna is intellectual

00:22:31,200 --> 00:22:33,750
property

00:22:31,860 --> 00:22:35,039
the trains everything what's gonna

00:22:33,750 --> 00:22:37,140
happen in the future is you're gonna

00:22:35,039 --> 00:22:38,880
overlay a blockchain on that and they're

00:22:37,140 --> 00:22:41,520
gonna send and send events when this

00:22:38,880 --> 00:22:43,860
person did all these different

00:22:41,520 --> 00:22:45,929
activities so the whole collection of

00:22:43,860 --> 00:22:47,340
the transportation can be viewed where

00:22:45,929 --> 00:22:49,590
these companies aren't giving away

00:22:47,340 --> 00:22:52,100
electoral property but they're actually

00:22:49,590 --> 00:22:55,320
contributing to a global more of an

00:22:52,100 --> 00:22:56,910
organizational or a citywide blockchain

00:22:55,320 --> 00:22:58,740
that they're gonna see and they're

00:22:56,910 --> 00:23:00,450
really they're really big on that MIT is

00:22:58,740 --> 00:23:06,780
doing some really interesting stuff of

00:23:00,450 --> 00:23:08,580
that they didn't blockchains will be

00:23:06,780 --> 00:23:10,290
dissimilar I you know right now if you

00:23:08,580 --> 00:23:11,820
look at Bitcoin it does one thing really

00:23:10,290 --> 00:23:12,870
I mean you can put other data in Bitcoin

00:23:11,820 --> 00:23:14,940
but for the most part it's just

00:23:12,870 --> 00:23:17,160
transactions I think you're gonna see

00:23:14,940 --> 00:23:19,410
block chains they're gonna evolve into

00:23:17,160 --> 00:23:26,100
very having a lot of dissimilar data

00:23:19,410 --> 00:23:28,170
into in that and connectivity in the

00:23:26,100 --> 00:23:31,470
future I'm gonna connect this up to

00:23:28,170 --> 00:23:33,090
these different block chains these

00:23:31,470 --> 00:23:34,350
different enterprise block chains so

00:23:33,090 --> 00:23:36,750
that you can actually pull events the

00:23:34,350 --> 00:23:38,760
neat thing about this approach is you

00:23:36,750 --> 00:23:40,200
don't you can pretty much put any events

00:23:38,760 --> 00:23:42,600
you care about in there you don't have

00:23:40,200 --> 00:23:44,730
to use the ones I pick because once you

00:23:42,600 --> 00:23:47,220
have the capability put in events and

00:23:44,730 --> 00:23:50,480
any of these components you basically

00:23:47,220 --> 00:23:58,460
can define what it meant you care about

00:23:50,480 --> 00:24:02,360
okay I think that's it it is okay so

00:23:58,460 --> 00:24:02,360
oops don't want to do that

00:24:04,509 --> 00:24:10,769
I am NOT a windows person but I have a

00:24:08,049 --> 00:24:10,769
Windows machine

00:24:13,660 --> 00:24:16,660
yeah

00:24:24,020 --> 00:24:27,020
okay

00:24:28,169 --> 00:24:33,570
well that wasn't good so first we're

00:24:32,309 --> 00:24:35,220
gonna look at event streaming and this

00:24:33,570 --> 00:24:37,980
is the actual model that's in the event

00:24:35,220 --> 00:24:41,850
stream processing and I'll try to make a

00:24:37,980 --> 00:24:44,879
little bigger so you can see it but you

00:24:41,850 --> 00:24:46,919
can see the IOT devices you can see the

00:24:44,879 --> 00:24:49,799
top four windows these are windows

00:24:46,919 --> 00:24:51,059
inside of ESP I don't have any data in

00:24:49,799 --> 00:24:52,619
these right now but if they were if I

00:24:51,059 --> 00:24:54,690
had those devices they would populate

00:24:52,619 --> 00:24:56,340
these and they actually have functional

00:24:54,690 --> 00:25:00,330
win is to keep track of how often they

00:24:56,340 --> 00:25:03,059
happen yeah I actually see the minor

00:25:00,330 --> 00:25:05,700
registries the valid minor requests so

00:25:03,059 --> 00:25:07,619
anything that comes in from a minor or

00:25:05,700 --> 00:25:09,539
any of these has to be validated against

00:25:07,619 --> 00:25:11,940
the registry so all of these events come

00:25:09,539 --> 00:25:13,259
in here are validated so this is all

00:25:11,940 --> 00:25:15,210
handled by SAS event stream processing

00:25:13,259 --> 00:25:17,429
so you can do a lot of things you can

00:25:15,210 --> 00:25:19,859
treat it like a small database you get

00:25:17,429 --> 00:25:22,009
out of a lot of great functionality not

00:25:19,859 --> 00:25:24,450
only the analytics side of it

00:25:22,009 --> 00:25:26,129
vehicle Vince is what I blew up loaded

00:25:24,450 --> 00:25:29,759
into it now we'll take a look at those

00:25:26,129 --> 00:25:33,149
and these are this is basically how the

00:25:29,759 --> 00:25:37,470
the bottom set of Windows here is

00:25:33,149 --> 00:25:41,070
basically how it tracks the consensus

00:25:37,470 --> 00:25:48,600
process it's a response request pub/sub

00:25:41,070 --> 00:25:50,850
type environment so let's start with the

00:25:48,600 --> 00:25:53,820
simulator I've got right now I've got

00:25:50,850 --> 00:26:03,899
two clients running let's start it from

00:25:53,820 --> 00:26:08,820
scratch and this is my this right here

00:26:03,899 --> 00:26:10,739
is the model that I'm running right now

00:26:08,820 --> 00:26:13,200
I have two clients that are available

00:26:10,739 --> 00:26:15,600
right now at one no control or one minor

00:26:13,200 --> 00:26:18,600
and them in the blockchain basically is

00:26:15,600 --> 00:26:20,580
in Bitcoin so this as you run processes

00:26:18,600 --> 00:26:22,559
these will pop on the screen and show up

00:26:20,580 --> 00:26:25,019
so if I were to start a new client it

00:26:22,559 --> 00:26:27,299
would show up and this this graph would

00:26:25,019 --> 00:26:29,249
automatically adjust but again it's just

00:26:27,299 --> 00:26:31,350
reading the data right out of the event

00:26:29,249 --> 00:26:34,169
stream processing engine it's pretty

00:26:31,350 --> 00:26:36,090
much just subscribing to it I just put a

00:26:34,169 --> 00:26:38,420
pretty picture on it and this is just a

00:26:36,090 --> 00:26:42,120
demo UI that I that I use

00:26:38,420 --> 00:26:43,770
he can keep track of the the clients if

00:26:42,120 --> 00:26:45,870
there was activity by any of those

00:26:43,770 --> 00:26:47,910
clients the little donut was shown which

00:26:45,870 --> 00:26:50,280
ones how many percentage it would also

00:26:47,910 --> 00:26:51,780
track all the data that's that's the

00:26:50,280 --> 00:26:55,230
short history of data because there's

00:26:51,780 --> 00:26:57,360
windows in ESP where I can put retain so

00:26:55,230 --> 00:27:01,910
many events and it'll basically present

00:26:57,360 --> 00:27:01,910
those and these are aggregates of course

00:27:02,540 --> 00:27:08,580
so we look at actual user interface and

00:27:06,570 --> 00:27:10,260
these are all the windows in the event

00:27:08,580 --> 00:27:13,610
string processing that it's registered

00:27:10,260 --> 00:27:18,360
to and you can see that each one of them

00:27:13,610 --> 00:27:21,000
basically is related to complete data

00:27:18,360 --> 00:27:22,800
the gravity events is rated to the IOT

00:27:21,000 --> 00:27:24,600
device so you could put any data you

00:27:22,800 --> 00:27:26,640
want into this in this engine and you

00:27:24,600 --> 00:27:33,450
can do analytics on it and I'll just

00:27:26,640 --> 00:27:36,900
give you a quick view of the let's look

00:27:33,450 --> 00:27:38,910
at the registered entities and you can

00:27:36,900 --> 00:27:41,280
see these this is actual data so you can

00:27:38,910 --> 00:27:43,320
see the actual hash information I use

00:27:41,280 --> 00:27:45,450
the hash for registration tells you the

00:27:43,320 --> 00:27:48,450
ID in this case it's the port that it

00:27:45,450 --> 00:27:50,309
connected on it this is a miner it shows

00:27:48,450 --> 00:27:52,050
you all the details of each one so each

00:27:50,309 --> 00:27:54,600
one of these are insert records into the

00:27:52,050 --> 00:27:56,160
end event stream processing and you can

00:27:54,600 --> 00:28:02,820
look at any one of these windows for

00:27:56,160 --> 00:28:04,110
that type of data so the perspective I

00:28:02,820 --> 00:28:06,120
showed you a minute ago in the stream

00:28:04,110 --> 00:28:08,850
view or is just basically a generic

00:28:06,120 --> 00:28:11,309
window an advanced stream processing

00:28:08,850 --> 00:28:13,800
engine so these are how the windows look

00:28:11,309 --> 00:28:16,260
like in in those environments and this

00:28:13,800 --> 00:28:20,850
is more of a blockchain specific so

00:28:16,260 --> 00:28:22,710
let's go to our block view so right now

00:28:20,850 --> 00:28:25,740
I have 13 blocks let me get to see if

00:28:22,710 --> 00:28:27,540
I'm any more good so each one of the

00:28:25,740 --> 00:28:30,450
blocks you could see the separation in

00:28:27,540 --> 00:28:33,030
seconds I was doing multiples so there's

00:28:30,450 --> 00:28:37,380
there's different variations in it but

00:28:33,030 --> 00:28:41,429
you can see as you go down here some of

00:28:37,380 --> 00:28:44,190
these minor times are as low as 6 6 6

00:28:41,429 --> 00:28:46,770
seconds so that means a block every 6

00:28:44,190 --> 00:28:49,140
seconds so I'm writing transactions to

00:28:46,770 --> 00:28:51,000
this thing about every 50 milliseconds

00:28:49,140 --> 00:28:52,710
and then every 6 seconds that up

00:28:51,000 --> 00:28:54,870
the block to the blockchain and a block

00:28:52,710 --> 00:28:56,940
looks like this

00:28:54,870 --> 00:28:59,750
so this simulator does pretty much

00:28:56,940 --> 00:29:02,220
everything that Bitcoin does from a

00:28:59,750 --> 00:29:04,260
cryptography and hash perspective it's

00:29:02,220 --> 00:29:06,390
not a ledger it's just to pay but you

00:29:04,260 --> 00:29:09,210
can see that basically I have previous

00:29:06,390 --> 00:29:11,280
hash address block hash all this stuff

00:29:09,210 --> 00:29:13,560
is happening on the fly as we load data

00:29:11,280 --> 00:29:15,120
into the blockchain so this simulator

00:29:13,560 --> 00:29:16,920
you pretty much could put anything you

00:29:15,120 --> 00:29:20,310
wanted it in here just to see if the

00:29:16,920 --> 00:29:23,160
blockchain may fit your problem you can

00:29:20,310 --> 00:29:25,980
see the content is just a JSON and

00:29:23,160 --> 00:29:27,810
because it is a payload type blockchain

00:29:25,980 --> 00:29:30,260
it will basically take anything in the

00:29:27,810 --> 00:29:30,260
payload

00:29:35,420 --> 00:29:39,810
from an operational perspective you got

00:29:38,160 --> 00:29:41,610
some these graphs are a little screwed

00:29:39,810 --> 00:29:43,770
right now because I've been reloading it

00:29:41,610 --> 00:29:45,630
but you can see actually here I'm

00:29:43,770 --> 00:29:48,060
looking at my consensus rates and

00:29:45,630 --> 00:29:50,520
they're running from 150 milliseconds

00:29:48,060 --> 00:29:52,740
down to 50 milliseconds and some of my

00:29:50,520 --> 00:29:54,270
minor request rates are actually so with

00:29:52,740 --> 00:29:56,100
the next next step here is you're gonna

00:29:54,270 --> 00:29:57,720
see some deep learning models here that

00:29:56,100 --> 00:30:00,480
keep an eye on these transaction rates

00:29:57,720 --> 00:30:02,670
and consensus rates in this model now

00:30:00,480 --> 00:30:03,840
this doesn't mean this would be perfect

00:30:02,670 --> 00:30:05,310
for everybody's blockchain but it

00:30:03,840 --> 00:30:07,110
demonstrates some of the different

00:30:05,310 --> 00:30:12,120
analytic capabilities you can do with

00:30:07,110 --> 00:30:16,160
blockchain and I'm going to get you out

00:30:12,120 --> 00:30:16,160
a little early today because it's late

00:30:17,090 --> 00:30:24,110
so in any specific questions you guys

00:30:19,530 --> 00:30:24,110
have her yeah

00:30:28,659 --> 00:30:34,619
I'm sorry huh

00:30:40,559 --> 00:30:45,149
it is right now it is it is a separate

00:30:43,230 --> 00:30:46,620
process and I only have one oh and

00:30:45,149 --> 00:30:48,720
you're gonna right now only have one of

00:30:46,620 --> 00:30:51,179
them but you could have because it is a

00:30:48,720 --> 00:30:54,149
request response type consensus and

00:30:51,179 --> 00:30:57,029
basically each of the miners puts it up

00:30:54,149 --> 00:30:58,799
publish as a I'm ready to update the

00:30:57,029 --> 00:31:00,509
blockchain I've reached my limit either

00:30:58,799 --> 00:31:03,389
by time or by all the different

00:31:00,509 --> 00:31:05,190
variations you can do he put this in

00:31:03,389 --> 00:31:07,259
invent stream you get a multiple

00:31:05,190 --> 00:31:09,629
consensus processes in there

00:31:07,259 --> 00:31:13,409
communicating in the same way currently

00:31:09,629 --> 00:31:15,330
I only allowed one it's a simulator but

00:31:13,409 --> 00:31:17,519
you could easily add more consensus

00:31:15,330 --> 00:31:19,350
processes and then what happens is the

00:31:17,519 --> 00:31:22,110
bench stream processing everything works

00:31:19,350 --> 00:31:24,409
to event stream it this guy the miner

00:31:22,110 --> 00:31:27,629
sitting there looking for ready request

00:31:24,409 --> 00:31:29,909
my turn type tokens and when it gets

00:31:27,629 --> 00:31:33,090
those it basically goes through and

00:31:29,909 --> 00:31:35,789
updates the blockchain the green box and

00:31:33,090 --> 00:31:38,129
then it tells the bench string

00:31:35,789 --> 00:31:39,779
processing it publishes I'm done and

00:31:38,129 --> 00:31:41,669
then it goes on and does that through

00:31:39,779 --> 00:31:44,820
the next one so what i'm doing i OT

00:31:41,669 --> 00:31:46,919
devices there with 8 milliseconds i can

00:31:44,820 --> 00:31:49,679
get these things to down to 3 seconds a

00:31:46,919 --> 00:31:52,409
block update on on this which if you

00:31:49,679 --> 00:31:54,450
there's my point to that is it's a proof

00:31:52,409 --> 00:31:56,159
that you could do this with any block

00:31:54,450 --> 00:31:57,809
this would not this approach could be

00:31:56,159 --> 00:32:00,860
used pretty much in any block chain them

00:31:57,809 --> 00:32:00,860
firemen yes sir

00:32:02,570 --> 00:32:05,779
say that again

00:32:06,150 --> 00:32:09,640
yes absolutely you could do that and I

00:32:08,440 --> 00:32:12,000
think that's one of the key things are

00:32:09,640 --> 00:32:16,270
gonna happen because if a financial

00:32:12,000 --> 00:32:18,520
Institute's customer based data on their

00:32:16,270 --> 00:32:20,380
blockchain where its revenue based

00:32:18,520 --> 00:32:23,350
they're gonna want to be able to check

00:32:20,380 --> 00:32:24,490
that be able to to change that and I

00:32:23,350 --> 00:32:27,520
think in the future you're gonna see

00:32:24,490 --> 00:32:28,870
block chains become more AI driven so

00:32:27,520 --> 00:32:30,970
they can see bottlenecks and

00:32:28,870 --> 00:32:33,370
automatically just add another minor add

00:32:30,970 --> 00:32:37,870
another node controller things of that

00:32:33,370 --> 00:32:40,570
nature it's not gonna be like completely

00:32:37,870 --> 00:32:42,310
like what bitcoin is out in the Wawa

00:32:40,570 --> 00:32:44,290
West kind of you might say I mean it's

00:32:42,310 --> 00:32:46,420
great it's a great solution it really is

00:32:44,290 --> 00:32:48,130
it's amazing how little trouble they've

00:32:46,420 --> 00:32:49,330
had with that over time it's mostly

00:32:48,130 --> 00:32:52,600
because people keep stealing other

00:32:49,330 --> 00:32:55,150
people's private keys but that

00:32:52,600 --> 00:32:56,380
technology really applies well even in

00:32:55,150 --> 00:32:58,540
this environment in enterprise

00:32:56,380 --> 00:33:01,690
environments people are going to know

00:32:58,540 --> 00:33:04,360
the performance of the blockchain every

00:33:01,690 --> 00:33:06,160
minute so I think that's one of the

00:33:04,360 --> 00:33:09,580
approaches in the bottom line on this

00:33:06,160 --> 00:33:11,290
we've got great products at SAS the only

00:33:09,580 --> 00:33:12,820
one you really need to do this as a vent

00:33:11,290 --> 00:33:14,560
stream processing it's just a matter of

00:33:12,820 --> 00:33:16,600
connecting it up to your to your

00:33:14,560 --> 00:33:19,000
blockchain and defining the events you

00:33:16,600 --> 00:33:21,280
care about and once you do that you can

00:33:19,000 --> 00:33:23,380
create a little UI like I did and it

00:33:21,280 --> 00:33:25,810
pretty much presents the data

00:33:23,380 --> 00:33:28,390
I wrote this this is on top of bootstrap

00:33:25,810 --> 00:33:30,100
I wrote it with view j/s it's really

00:33:28,390 --> 00:33:32,200
pretty simple and my purpose wasn't the

00:33:30,100 --> 00:33:34,420
write a custom blockchain it was to do a

00:33:32,200 --> 00:33:36,460
proof and my purpose was to demonstrate

00:33:34,420 --> 00:33:39,010
how you can look at the data from a

00:33:36,460 --> 00:33:46,470
blockchain perspective versus from just

00:33:39,010 --> 00:33:49,250
a pure data perspective anything else

00:33:46,470 --> 00:33:49,250
yes sir

00:33:53,940 --> 00:33:59,370
no I is I haven't even I'm not not

00:33:57,779 --> 00:33:59,850
looking at the cryptocurrencies side of

00:33:59,370 --> 00:34:01,799
it at all

00:33:59,850 --> 00:34:04,799
there's plenty people doing analytics on

00:34:01,799 --> 00:34:06,659
those but mostly financial type

00:34:04,799 --> 00:34:08,510
analytics I'm focused more on the

00:34:06,659 --> 00:34:13,859
enterprise side of it you know though

00:34:08,510 --> 00:34:16,139
you know hyper ledger bars record a big

00:34:13,859 --> 00:34:17,819
chain DB there's there's but there's

00:34:16,139 --> 00:34:27,030
probably thirty of those in the

00:34:17,819 --> 00:34:34,230
enterprise in space I'm sorry verify

00:34:27,030 --> 00:34:35,879
what oh I know that it's basically built

00:34:34,230 --> 00:34:37,919
my own consensus it's basically a

00:34:35,879 --> 00:34:40,649
request response consensus because I'm

00:34:37,919 --> 00:34:42,300
in a controlled environment so so no

00:34:40,649 --> 00:34:44,760
there are no miners like there are in

00:34:42,300 --> 00:34:46,560
Bitcoin where they get the JA you know

00:34:44,760 --> 00:34:49,409
do proof of work there's not that they

00:34:46,560 --> 00:34:51,990
basically ask for is it my turn yet

00:34:49,409 --> 00:34:54,659
and because ESP is so event stream

00:34:51,990 --> 00:34:56,250
processing so fast the responses are

00:34:54,659 --> 00:34:58,530
typically very quick and I'm I'm very

00:34:56,250 --> 00:35:00,810
impressed with MongoDB and the reason I

00:34:58,530 --> 00:35:05,030
picked MongoDB is because it's a

00:35:00,810 --> 00:35:05,030
document store so you can do stuff

00:35:07,290 --> 00:35:12,450
did it okay well thanks for your time

00:35:10,470 --> 00:35:14,570
guys especially this late on the second

00:35:12,450 --> 00:35:14,570
day

00:35:15,200 --> 00:35:20,800

YouTube URL: https://www.youtube.com/watch?v=L3o-xk-TxFU


