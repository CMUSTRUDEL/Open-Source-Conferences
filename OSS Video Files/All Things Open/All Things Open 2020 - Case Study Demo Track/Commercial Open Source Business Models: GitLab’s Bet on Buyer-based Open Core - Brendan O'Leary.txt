Title: Commercial Open Source Business Models: GitLabâ€™s Bet on Buyer-based Open Core - Brendan O'Leary
Publication date: 2020-12-14
Playlist: All Things Open 2020 - Case Study Demo Track
Description: 
	Presented by: Brendan O'Leary, GitLab
Presented at All Things Open 2020 - Case Study/Demo Track

Abstract: In the age of commoditization, hyper-cloud service wrapping, and increased competition in the open-source world, many Commerical Open Source (COSS) companies are struggling to find a sustainable business model. Balancing support of open-source with the need to maintain the business that provides that support can cause companies to make rash decisions about licensing and their business models.

In this talk, we'll take a look at the commercial open-source landscape. We will learn from those who have been successful in building sustainable open-source communities and businesses.  We will explore the various business models available to open source-based companies and where there have been successes and failures. We will use the case study of GitLab, a complete DevOps platform that is open core and based on git. The company has grown 177% year over year, even with the growing uncertainty in the space.

GitLab has made a bet on what we call buyer-based open core, and so far, it's paid off.  However, this wasn't luck or some special sauce.  It took many iterations on the GitLab business model to end up where we are today. Since founding the business in 2014, GitLab has tried many monetization techniques, including donations, consultancy, and single-tenet service. Still, none of them worked to allow us to sustain and grow the business.

Finally, we landed on buyer-based open-core.  This talk will help you understand how we've modeled our business, and why we think that buyer-based open-core could be a winning combination for Commerical Open Source Companies.
Captions: 
	00:00:05,040 --> 00:00:07,680
well

00:00:05,440 --> 00:00:09,200
thank you so much for having me it's a

00:00:07,680 --> 00:00:12,160
pleasure to be with you all

00:00:09,200 --> 00:00:13,679
even if it has to be virtual today i

00:00:12,160 --> 00:00:15,120
want to talk to everyone today about

00:00:13,679 --> 00:00:17,199
something that is

00:00:15,120 --> 00:00:18,800
near and dear to my heart and something

00:00:17,199 --> 00:00:21,520
that i believe is critical

00:00:18,800 --> 00:00:23,039
for all of us to continue to iterate on

00:00:21,520 --> 00:00:25,199
and improve

00:00:23,039 --> 00:00:26,080
to make the world of software a better

00:00:25,199 --> 00:00:28,720
place

00:00:26,080 --> 00:00:31,519
and that is commercial open source

00:00:28,720 --> 00:00:34,239
software business models

00:00:31,519 --> 00:00:36,320
now making open source sustainable and

00:00:34,239 --> 00:00:37,760
able to keep the lights on

00:00:36,320 --> 00:00:40,480
has been a challenge for software

00:00:37,760 --> 00:00:42,840
developers for many many years

00:00:40,480 --> 00:00:44,399
there's an almost limitless number of

00:00:42,840 --> 00:00:46,879
models offering

00:00:44,399 --> 00:00:48,320
professional services or technical

00:00:46,879 --> 00:00:50,559
support

00:00:48,320 --> 00:00:51,920
providing an easy to use sas version of

00:00:50,559 --> 00:00:54,160
the software

00:00:51,920 --> 00:00:55,440
and many many other methods have been

00:00:54,160 --> 00:00:58,960
tried

00:00:55,440 --> 00:01:01,840
some more successful than others

00:00:58,960 --> 00:01:03,840
today we're going to focus on what has

00:01:01,840 --> 00:01:04,239
worked and what hasn't worked for get

00:01:03,840 --> 00:01:07,200
lab

00:01:04,239 --> 00:01:09,200
over our life so far as a commercial

00:01:07,200 --> 00:01:10,960
open source software company

00:01:09,200 --> 00:01:12,640
and i'll talk about how we landed on

00:01:10,960 --> 00:01:16,560
what we call buyer based

00:01:12,640 --> 00:01:17,119
open core first a little bit about our

00:01:16,560 --> 00:01:19,280
story

00:01:17,119 --> 00:01:20,240
as i i think it's relevant to the twists

00:01:19,280 --> 00:01:23,680
and turns

00:01:20,240 --> 00:01:27,200
that brought us to our current model

00:01:23,680 --> 00:01:29,680
in 2011 dimitri

00:01:27,200 --> 00:01:30,960
who wrote gitlab originally he had two

00:01:29,680 --> 00:01:33,280
problems

00:01:30,960 --> 00:01:34,400
he didn't have running water at home in

00:01:33,280 --> 00:01:36,159
ukraine

00:01:34,400 --> 00:01:39,040
and he didn't have a tool to collaborate

00:01:36,159 --> 00:01:41,280
with his fellow developers at work

00:01:39,040 --> 00:01:43,280
to hear our ceo tell it he solved the

00:01:41,280 --> 00:01:45,920
most pressing problem first

00:01:43,280 --> 00:01:48,240
and he wrote git lab he needed something

00:01:45,920 --> 00:01:50,960
that was like github but self-contained

00:01:48,240 --> 00:01:53,200
and able to serve his workplace's needs

00:01:50,960 --> 00:01:55,759
without placing their code into someone

00:01:53,200 --> 00:01:58,479
else's cloud

00:01:55,759 --> 00:01:59,840
about a year later in 2012 sid

00:01:58,479 --> 00:02:02,320
discovered gitlab

00:01:59,840 --> 00:02:03,040
and thought it made a lot of sense a

00:02:02,320 --> 00:02:05,920
tool

00:02:03,040 --> 00:02:06,719
that developers use to collaborate being

00:02:05,920 --> 00:02:08,479
open source

00:02:06,719 --> 00:02:10,479
so they can collaborate directly on the

00:02:08,479 --> 00:02:12,160
tool itself

00:02:10,479 --> 00:02:13,840
seeing an opportunity he got in touch

00:02:12,160 --> 00:02:15,680
with dz and asked

00:02:13,840 --> 00:02:18,160
if it would be okay if he stood up a sas

00:02:15,680 --> 00:02:21,040
version gitlab.com

00:02:18,160 --> 00:02:22,000
dz said of course it's open source you

00:02:21,040 --> 00:02:25,520
can do

00:02:22,000 --> 00:02:26,239
whatever you want company legend has it

00:02:25,520 --> 00:02:29,760
that a year

00:02:26,239 --> 00:02:32,080
or so after that said saul dz tweet

00:02:29,760 --> 00:02:32,959
i wish i could just work on gitlab full

00:02:32,080 --> 00:02:34,640
time

00:02:32,959 --> 00:02:37,200
and called him and offered him a job

00:02:34,640 --> 00:02:38,400
doing just that

00:02:37,200 --> 00:02:40,400
they started growing the business

00:02:38,400 --> 00:02:42,239
together and eventually

00:02:40,400 --> 00:02:44,000
said would move to san francisco for y

00:02:42,239 --> 00:02:46,480
combinator which is a business

00:02:44,000 --> 00:02:50,000
accelerator program

00:02:46,480 --> 00:02:52,480
and in 2015 in fact the entire team

00:02:50,000 --> 00:02:54,480
went to san francisco for y combinator

00:02:52,480 --> 00:02:56,800
back when that team could fit into one

00:02:54,480 --> 00:02:58,800
large suv

00:02:56,800 --> 00:03:00,319
after graduating from y combinator in

00:02:58,800 --> 00:03:02,319
00:03:00,319 --> 00:03:03,599
sid took the next logical step that

00:03:02,319 --> 00:03:07,120
every startup did and

00:03:03,599 --> 00:03:07,920
leased an office and the first office

00:03:07,120 --> 00:03:09,680
was at one

00:03:07,920 --> 00:03:11,120
two three three howard street in san

00:03:09,680 --> 00:03:13,200
francisco

00:03:11,120 --> 00:03:15,920
but a funny thing started happening

00:03:13,200 --> 00:03:18,879
people stopped showing up for work

00:03:15,920 --> 00:03:19,200
for example our first salesperson hayden

00:03:18,879 --> 00:03:21,519
uh

00:03:19,200 --> 00:03:23,200
i let you guess who the sales person is

00:03:21,519 --> 00:03:25,360
here in this picture

00:03:23,200 --> 00:03:27,760
uh poor sales relegated to the folding

00:03:25,360 --> 00:03:30,080
table up there in the corner

00:03:27,760 --> 00:03:30,799
well he had a long commute from across

00:03:30,080 --> 00:03:34,080
the bay

00:03:30,799 --> 00:03:35,040
in alameda california it's about 15

00:03:34,080 --> 00:03:36,879
miles away

00:03:35,040 --> 00:03:38,879
and so it takes about 30 minutes in the

00:03:36,879 --> 00:03:39,280
middle of the night or an hour and a

00:03:38,879 --> 00:03:42,640
half

00:03:39,280 --> 00:03:44,640
if you decide to go at the wrong time

00:03:42,640 --> 00:03:46,720
the company's work was getting done

00:03:44,640 --> 00:03:49,440
increasingly through tools like slack

00:03:46,720 --> 00:03:51,200
google hangouts and later zoom and

00:03:49,440 --> 00:03:52,799
gitlab itself

00:03:51,200 --> 00:03:54,400
that commute wasn't adding value to

00:03:52,799 --> 00:03:55,760
hayden getting his job done

00:03:54,400 --> 00:03:58,000
and it wasn't adding value to the

00:03:55,760 --> 00:04:00,959
company so

00:03:58,000 --> 00:04:03,200
this was also the last office gitlab

00:04:00,959 --> 00:04:05,120
quickly went to an all remote model

00:04:03,200 --> 00:04:06,720
sid and his wife lived above this office

00:04:05,120 --> 00:04:10,000
until the lease ran out

00:04:06,720 --> 00:04:13,760
and then the office was no more and now

00:04:10,000 --> 00:04:17,359
we have over 1250 team members

00:04:13,760 --> 00:04:19,519
in 65 different countries and regions

00:04:17,359 --> 00:04:21,120
and get lab still has exactly zero

00:04:19,519 --> 00:04:22,880
offices

00:04:21,120 --> 00:04:25,280
if you want to mail us something now we

00:04:22,880 --> 00:04:28,720
do have a box in a ups store

00:04:25,280 --> 00:04:30,720
on mission street

00:04:28,720 --> 00:04:32,479
my name is brendan o'leary and i live on

00:04:30,720 --> 00:04:34,479
the east coast of the u.s

00:04:32,479 --> 00:04:36,080
if i had to commute to howard street it

00:04:34,479 --> 00:04:38,720
would arguably

00:04:36,080 --> 00:04:40,160
arguably be even worse than hayden's

00:04:38,720 --> 00:04:41,840
commute was

00:04:40,160 --> 00:04:44,080
i'm a senior developer evangelist for

00:04:41,840 --> 00:04:45,280
git lab and while i wasn't there for the

00:04:44,080 --> 00:04:48,479
early days

00:04:45,280 --> 00:04:49,759
of the gitlab van or even a gitlab

00:04:48,479 --> 00:04:51,919
office

00:04:49,759 --> 00:04:53,600
i've been working with for gitlab uh

00:04:51,919 --> 00:04:57,520
since 2017

00:04:53,600 --> 00:04:59,680
when we were only about 150 team members

00:04:57,520 --> 00:05:01,440
over that time i've gotten to see

00:04:59,680 --> 00:05:04,479
tremendous growth

00:05:01,440 --> 00:05:06,160
in both gitlab the product and gitlab

00:05:04,479 --> 00:05:08,240
the company

00:05:06,160 --> 00:05:10,560
today gitlab is a single application for

00:05:08,240 --> 00:05:12,720
the entire devops life cycle

00:05:10,560 --> 00:05:13,840
the product spans the whole breadth of

00:05:12,720 --> 00:05:16,160
devops from

00:05:13,840 --> 00:05:18,320
planning what you want to build to

00:05:16,160 --> 00:05:20,479
storing and collaborating on code that

00:05:18,320 --> 00:05:22,560
get in our name all the way to

00:05:20,479 --> 00:05:25,360
configuring and monitoring and defending

00:05:22,560 --> 00:05:26,880
your actual environments

00:05:25,360 --> 00:05:29,280
along with the product i've gotten to

00:05:26,880 --> 00:05:30,720
see the company grow exponentially

00:05:29,280 --> 00:05:33,120
throughout this growth we've remained

00:05:30,720 --> 00:05:35,120
true to our open source roots

00:05:33,120 --> 00:05:36,880
our model allows us to deliver

00:05:35,120 --> 00:05:39,759
substantial business value

00:05:36,880 --> 00:05:41,759
to our customers and our users while

00:05:39,759 --> 00:05:43,759
also attracting a vast community

00:05:41,759 --> 00:05:45,199
with thousands of contributors who

00:05:43,759 --> 00:05:48,160
average a average

00:05:45,199 --> 00:05:50,960
hundreds of improvements in our code in

00:05:48,160 --> 00:05:52,960
every monthly release

00:05:50,960 --> 00:05:54,000
this model is also strengthened by our

00:05:52,960 --> 00:05:56,160
values

00:05:54,000 --> 00:05:57,840
those values spell credit and are

00:05:56,160 --> 00:05:59,440
something we talk about constantly as an

00:05:57,840 --> 00:06:02,000
organization

00:05:59,440 --> 00:06:05,280
for each value we have paragraphs of sub

00:06:02,000 --> 00:06:07,280
values that help describe what may mean

00:06:05,280 --> 00:06:09,520
for example efficiency here doesn't just

00:06:07,280 --> 00:06:11,280
mean do more with less

00:06:09,520 --> 00:06:12,720
it means to be efficient for the right

00:06:11,280 --> 00:06:14,720
group

00:06:12,720 --> 00:06:16,479
iteration and transparency are just

00:06:14,720 --> 00:06:18,720
aspirational ideas

00:06:16,479 --> 00:06:19,600
they're how we ship with a low level of

00:06:18,720 --> 00:06:21,360
shame

00:06:19,600 --> 00:06:23,840
and invite the wider community to help

00:06:21,360 --> 00:06:27,280
us build the product and the company

00:06:23,840 --> 00:06:28,960
to be the best that they can be in fact

00:06:27,280 --> 00:06:30,160
our entire handbook is publicly

00:06:28,960 --> 00:06:32,319
available

00:06:30,160 --> 00:06:34,000
and it's creative commons licensed you

00:06:32,319 --> 00:06:36,639
can actually fork the company

00:06:34,000 --> 00:06:36,639
if you want to

00:06:37,600 --> 00:06:42,800
at get lab the community of customers

00:06:40,160 --> 00:06:42,800
and users

00:06:42,880 --> 00:06:47,680
are co-creators of the product with us

00:06:46,240 --> 00:06:49,840
and what we hear from them is that

00:06:47,680 --> 00:06:50,720
they're attracted to gitlab both by our

00:06:49,840 --> 00:06:54,080
product

00:06:50,720 --> 00:06:56,639
and our values gitlab is

00:06:54,080 --> 00:06:58,560
gitlab's transparency rather is one of

00:06:56,639 --> 00:07:00,800
the best tools for attracting new

00:06:58,560 --> 00:07:02,800
community members

00:07:00,800 --> 00:07:04,800
our contributors have helped us to build

00:07:02,800 --> 00:07:06,880
the best possible devops tool

00:07:04,800 --> 00:07:09,599
for every industry and vertical where

00:07:06,880 --> 00:07:11,680
software now reigns supreme

00:07:09,599 --> 00:07:12,800
but i also know that that picture i just

00:07:11,680 --> 00:07:15,280
painted

00:07:12,800 --> 00:07:16,639
oversimplifies not only our journey but

00:07:15,280 --> 00:07:18,880
the variety of challenges that

00:07:16,639 --> 00:07:20,400
commercial open source companies face

00:07:18,880 --> 00:07:22,720
as they balance their go to market

00:07:20,400 --> 00:07:25,840
strategy with their open source

00:07:22,720 --> 00:07:27,840
and community roots and i think one of

00:07:25,840 --> 00:07:31,039
the biggest challenges

00:07:27,840 --> 00:07:31,680
that cost companies face today is how to

00:07:31,039 --> 00:07:33,440
deal with

00:07:31,680 --> 00:07:35,919
and survive in the age of the hyper

00:07:33,440 --> 00:07:35,919
clouds

00:07:36,319 --> 00:07:41,199
time and again we've seen hyper clouds

00:07:38,880 --> 00:07:44,560
successfully in many cases

00:07:41,199 --> 00:07:47,599
employ a technique of service wrapping

00:07:44,560 --> 00:07:49,440
enterprises and businesses of all sizes

00:07:47,599 --> 00:07:50,879
want to leverage the best open source

00:07:49,440 --> 00:07:54,080
tools available

00:07:50,879 --> 00:07:55,840
but very few have the scale or desire to

00:07:54,080 --> 00:07:58,240
run those open source tools

00:07:55,840 --> 00:07:59,039
make them highly available keep them up

00:07:58,240 --> 00:08:02,080
to date

00:07:59,039 --> 00:08:03,680
and learn what it takes to scale them

00:08:02,080 --> 00:08:05,759
this is where the hyper clouds have a

00:08:03,680 --> 00:08:07,520
considerable advantage

00:08:05,759 --> 00:08:09,280
to offer those customers the same

00:08:07,520 --> 00:08:11,120
interfaces and open source software the

00:08:09,280 --> 00:08:13,599
developers want to use

00:08:11,120 --> 00:08:14,319
but with all of the ease of deployment

00:08:13,599 --> 00:08:18,800
and

00:08:14,319 --> 00:08:18,800
slas that come with a hosted service

00:08:18,879 --> 00:08:24,720
in many cases this can end up directly

00:08:22,000 --> 00:08:26,160
competing with the cost companies plans

00:08:24,720 --> 00:08:29,280
for making their own businesses

00:08:26,160 --> 00:08:31,120
sustainable through sas offerings

00:08:29,280 --> 00:08:33,760
for instance the creators of apache

00:08:31,120 --> 00:08:35,279
kafka founded confluent to be a hosted

00:08:33,760 --> 00:08:37,039
version of kafka

00:08:35,279 --> 00:08:38,399
but that same kind of service may

00:08:37,039 --> 00:08:40,880
already exist or even be

00:08:38,399 --> 00:08:42,399
cheaper in a hyper cloud like aws or

00:08:40,880 --> 00:08:44,720
azure

00:08:42,399 --> 00:08:45,920
mongodb saw a similar thing happen to

00:08:44,720 --> 00:08:48,080
their database

00:08:45,920 --> 00:08:49,760
and an explosion of alternative services

00:08:48,080 --> 00:08:51,920
and databases

00:08:49,760 --> 00:08:55,040
this pattern has been repeated over and

00:08:51,920 --> 00:08:57,600
over again

00:08:55,040 --> 00:08:58,560
and the standard response for many cost

00:08:57,600 --> 00:09:02,080
companies

00:08:58,560 --> 00:09:02,080
has been to change their licenses

00:09:03,440 --> 00:09:08,880
this is a trying to find a way to create

00:09:06,640 --> 00:09:10,720
you know an open source license while

00:09:08,880 --> 00:09:11,040
also preventing competition with their

00:09:10,720 --> 00:09:14,560
own

00:09:11,040 --> 00:09:15,920
sas offerings and suffice it to say that

00:09:14,560 --> 00:09:19,040
these companies have

00:09:15,920 --> 00:09:21,120
seen backlash from commercial and open

00:09:19,040 --> 00:09:23,120
source advocates alike

00:09:21,120 --> 00:09:24,320
 famously submitted their server

00:09:23,120 --> 00:09:26,720
side public license

00:09:24,320 --> 00:09:27,760
to the open source initiatives approval

00:09:26,720 --> 00:09:30,160
process

00:09:27,760 --> 00:09:32,560
and then withdrew it as controversially

00:09:30,160 --> 00:09:34,880
swirled

00:09:32,560 --> 00:09:36,640
even without that level of drama there's

00:09:34,880 --> 00:09:38,959
a broad mix of reactions to this

00:09:36,640 --> 00:09:42,160
methodology from open source communities

00:09:38,959 --> 00:09:44,080
and it's not always friendly now i could

00:09:42,160 --> 00:09:45,839
spend a whole presentation on this

00:09:44,080 --> 00:09:48,480
particular topic

00:09:45,839 --> 00:09:49,839
but i know better than to try and define

00:09:48,480 --> 00:09:51,360
open source

00:09:49,839 --> 00:09:53,120
i'll probably just end up offending

00:09:51,360 --> 00:09:55,040
everyone

00:09:53,120 --> 00:09:57,360
but let's assume for a minute that even

00:09:55,040 --> 00:09:58,959
given the possibility of bad press

00:09:57,360 --> 00:10:00,560
and the possible harm to the community

00:09:58,959 --> 00:10:02,399
that these were still the best choice

00:10:00,560 --> 00:10:04,560
for those companies

00:10:02,399 --> 00:10:06,800
the hyper clouds still have another card

00:10:04,560 --> 00:10:10,000
they can play

00:10:06,800 --> 00:10:12,720
and we've already seen that happen

00:10:10,000 --> 00:10:14,240
the hyper clouds have the kind of scale

00:10:12,720 --> 00:10:16,320
where if they don't like the change

00:10:14,240 --> 00:10:18,000
they can fork your project at the last

00:10:16,320 --> 00:10:20,079
fully open source release and

00:10:18,000 --> 00:10:21,760
maintain a separate line from that point

00:10:20,079 --> 00:10:23,839
on

00:10:21,760 --> 00:10:26,000
and that's precisely what aws did

00:10:23,839 --> 00:10:27,680
partnered with netflix and expedia

00:10:26,000 --> 00:10:29,040
when elastic changed the license on

00:10:27,680 --> 00:10:31,760
elasticsearch

00:10:29,040 --> 00:10:33,760
from the apache 2 license to their new

00:10:31,760 --> 00:10:35,680
elastic license

00:10:33,760 --> 00:10:36,959
they created the open distro for

00:10:35,680 --> 00:10:38,800
elasticsearch

00:10:36,959 --> 00:10:41,440
which then created a bifurcated

00:10:38,800 --> 00:10:41,440
ecosystem

00:10:41,839 --> 00:10:46,399
and in many ways elasticsearch is an

00:10:44,480 --> 00:10:48,959
almost perfect candidate to be forked

00:10:46,399 --> 00:10:50,880
and commoditized in this way

00:10:48,959 --> 00:10:52,480
while the technical implementation of

00:10:50,880 --> 00:10:55,040
how elasticsearch

00:10:52,480 --> 00:10:56,320
logstash and kobana come together makes

00:10:55,040 --> 00:10:58,959
perfect sense

00:10:56,320 --> 00:11:00,000
it also has in it inherent some of the

00:10:58,959 --> 00:11:03,279
things that make a project

00:11:00,000 --> 00:11:06,720
more likely to be commoditized

00:11:03,279 --> 00:11:09,040
with interaction mostly through an api

00:11:06,720 --> 00:11:10,079
users and buyers who may be more price

00:11:09,040 --> 00:11:11,519
sensitive

00:11:10,079 --> 00:11:14,240
and be open source contributors

00:11:11,519 --> 00:11:16,240
themselves those type of open source

00:11:14,240 --> 00:11:19,279
projects have a low bar to the

00:11:16,240 --> 00:11:20,720
fork and commoditized strategy

00:11:19,279 --> 00:11:22,480
whereas if your product relies on

00:11:20,720 --> 00:11:24,480
proprietary features

00:11:22,480 --> 00:11:25,760
uh user interface for most of the

00:11:24,480 --> 00:11:28,320
interaction

00:11:25,760 --> 00:11:30,160
and has use cases that extend to price

00:11:28,320 --> 00:11:32,320
insensitive buyers

00:11:30,160 --> 00:11:35,839
it's much less likely that your project

00:11:32,320 --> 00:11:35,839
will be easy to commoditize

00:11:35,920 --> 00:11:39,680
now how we got to that conclusion comes

00:11:39,040 --> 00:11:42,240
not from

00:11:39,680 --> 00:11:44,880
a single momentary epiphany but from

00:11:42,240 --> 00:11:46,560
years of finding our own way in the maze

00:11:44,880 --> 00:11:48,000
that is commercializing open source

00:11:46,560 --> 00:11:50,079
software

00:11:48,000 --> 00:11:51,839
we only landed on our current buyer

00:11:50,079 --> 00:11:54,480
based open core model

00:11:51,839 --> 00:11:57,839
after many many iterations and failures

00:11:54,480 --> 00:11:57,839
with other models

00:11:58,000 --> 00:12:02,480
when they first started sid and dz went

00:12:00,240 --> 00:12:05,600
the most altruistic way possible

00:12:02,480 --> 00:12:07,360
donations however that was not a very

00:12:05,600 --> 00:12:09,760
profitable way

00:12:07,360 --> 00:12:11,200
dz even made up his own version of ramen

00:12:09,760 --> 00:12:13,760
profitability here

00:12:11,200 --> 00:12:15,519
called ice cream money the money that

00:12:13,760 --> 00:12:17,120
gitlab was making off donations was

00:12:15,519 --> 00:12:18,880
enough for dz and his wife

00:12:17,120 --> 00:12:20,480
to go out on the weekends and have ice

00:12:18,880 --> 00:12:22,839
cream

00:12:20,480 --> 00:12:25,200
they then went the professional services

00:12:22,839 --> 00:12:27,120
route consultancy is an excellent

00:12:25,200 --> 00:12:30,079
business but it has an inverse incentive

00:12:27,120 --> 00:12:33,440
when you're also a software business

00:12:30,079 --> 00:12:34,480
the easier you make it make your

00:12:33,440 --> 00:12:37,680
software

00:12:34,480 --> 00:12:38,079
to install maintain the fewer people

00:12:37,680 --> 00:12:41,519
want to

00:12:38,079 --> 00:12:42,720
buy your consultant services and support

00:12:41,519 --> 00:12:45,440
has a similarly

00:12:42,720 --> 00:12:45,920
lousy incentive the better the software

00:12:45,440 --> 00:12:47,519
is

00:12:45,920 --> 00:12:49,680
the less likely someone's going to need

00:12:47,519 --> 00:12:52,079
to pick up the phone and call you

00:12:49,680 --> 00:12:53,680
in a given year and at the end of their

00:12:52,079 --> 00:12:56,160
term they'll say well why do we even

00:12:53,680 --> 00:12:58,320
need this

00:12:56,160 --> 00:13:00,079
paid development sounds terrific but is

00:12:58,320 --> 00:13:01,760
much less reliable

00:13:00,079 --> 00:13:03,680
and what we found is if we had a

00:13:01,760 --> 00:13:05,279
customer request a feature

00:13:03,680 --> 00:13:07,120
and then another customer requested the

00:13:05,279 --> 00:13:08,639
same thing well

00:13:07,120 --> 00:13:10,880
on the surface that seems like a good

00:13:08,639 --> 00:13:12,399
thing you can tell both of them

00:13:10,880 --> 00:13:14,160
they get to pay only half of what you

00:13:12,399 --> 00:13:16,000
thought it would take

00:13:14,160 --> 00:13:17,680
but in reality they'll both pull a

00:13:16,000 --> 00:13:19,279
prisoner's dilemma on you

00:13:17,680 --> 00:13:21,920
and try to wait for the other company to

00:13:19,279 --> 00:13:24,240
pay for the whole thing

00:13:21,920 --> 00:13:25,360
looking more at a sas play data was

00:13:24,240 --> 00:13:27,519
considered

00:13:25,360 --> 00:13:28,959
but the reality is that it's not a data

00:13:27,519 --> 00:13:31,040
intense business

00:13:28,959 --> 00:13:32,720
and with folks self-hosting gitlab

00:13:31,040 --> 00:13:35,680
they're less likely to want to send

00:13:32,720 --> 00:13:38,320
their data back home to you

00:13:35,680 --> 00:13:40,000
with a pure sas play we found that

00:13:38,320 --> 00:13:41,279
self-managed was more valuable because

00:13:40,000 --> 00:13:43,760
that's one of the main reasons

00:13:41,279 --> 00:13:45,519
folks would come to gitlab over github

00:13:43,760 --> 00:13:47,600
to keep their data and their code in

00:13:45,519 --> 00:13:49,839
their own hands

00:13:47,600 --> 00:13:51,760
based on that we considered and even did

00:13:49,839 --> 00:13:53,600
run a single tenant managed service for

00:13:51,760 --> 00:13:55,680
some time

00:13:53,600 --> 00:13:56,720
but that's a tricky business and and one

00:13:55,680 --> 00:13:58,880
that didn't scale

00:13:56,720 --> 00:14:00,880
in the same way that our core business

00:13:58,880 --> 00:14:02,079
of licensing to self-managed customers

00:14:00,880 --> 00:14:03,920
did

00:14:02,079 --> 00:14:06,959
and because of that it just wasn't the

00:14:03,920 --> 00:14:09,120
right investment for us at that time

00:14:06,959 --> 00:14:10,560
now we never tried a hardware or

00:14:09,120 --> 00:14:12,000
appliance play

00:14:10,560 --> 00:14:13,600
for us i think that would have had a lot

00:14:12,000 --> 00:14:16,639
of the same issues we'd seen

00:14:13,600 --> 00:14:18,399
in a pure sas play most of our

00:14:16,639 --> 00:14:19,839
large enterprise customers don't want to

00:14:18,399 --> 00:14:23,360
put all of their code

00:14:19,839 --> 00:14:24,720
into a black box and sid also likes to

00:14:23,360 --> 00:14:27,360
point out that we didn't try

00:14:24,720 --> 00:14:28,959
an initial coin offering mostly because

00:14:27,360 --> 00:14:32,560
he wants to avoid jail time

00:14:28,959 --> 00:14:34,560
and the u.s sec's wrath

00:14:32,560 --> 00:14:35,920
now all of these failures led us to

00:14:34,560 --> 00:14:38,959
decide

00:14:35,920 --> 00:14:39,760
that the more traditional focus on open

00:14:38,959 --> 00:14:41,600
core

00:14:39,760 --> 00:14:43,839
where there are high margins on software

00:14:41,600 --> 00:14:44,800
sales was the model that would scale for

00:14:43,839 --> 00:14:48,959
our customers

00:14:44,800 --> 00:14:48,959
and us in a mutually beneficial way

00:14:49,279 --> 00:14:53,920
but even that decision doesn't bring us

00:14:52,320 --> 00:14:56,560
to the end of our story when it comes to

00:14:53,920 --> 00:14:58,720
iterating on our business model

00:14:56,560 --> 00:15:01,920
and that's because in and of itself open

00:14:58,720 --> 00:15:04,880
core doesn't tell you what to do next

00:15:01,920 --> 00:15:06,079
open core can itself be tricky a tricky

00:15:04,880 --> 00:15:08,399
model to get right

00:15:06,079 --> 00:15:09,519
and uh align it with the correct value

00:15:08,399 --> 00:15:11,440
proposition

00:15:09,519 --> 00:15:13,360
and understand how to balance the open

00:15:11,440 --> 00:15:16,560
source stewardship of your project

00:15:13,360 --> 00:15:18,079
with the ability to sustain the model

00:15:16,560 --> 00:15:20,800
we first tried to do this across the

00:15:18,079 --> 00:15:22,560
stages that i showed you earlier

00:15:20,800 --> 00:15:24,720
maybe everyone wants source code

00:15:22,560 --> 00:15:26,000
management but then the releases and

00:15:24,720 --> 00:15:29,120
security stages

00:15:26,000 --> 00:15:31,120
can be in the paid versions but everyone

00:15:29,120 --> 00:15:33,360
of course wants secure software

00:15:31,120 --> 00:15:35,440
and it's not great to try and tout the

00:15:33,360 --> 00:15:37,519
benefits of an end-to-end system

00:15:35,440 --> 00:15:41,440
and then put a paywall right in the way

00:15:37,519 --> 00:15:43,600
of the user getting from end to end

00:15:41,440 --> 00:15:45,759
company's size is sometimes an easy

00:15:43,600 --> 00:15:48,480
proxy for what they're willing to invest

00:15:45,759 --> 00:15:50,560
directly in a product but still again

00:15:48,480 --> 00:15:54,399
small companies want capabilities that

00:15:50,560 --> 00:15:56,399
other large companies wish for as well

00:15:54,399 --> 00:15:58,480
the same is true if you attempt to slice

00:15:56,399 --> 00:16:00,880
the market based on maturity

00:15:58,480 --> 00:16:01,680
maybe less mature companies won't need

00:16:00,880 --> 00:16:03,839
as much

00:16:01,680 --> 00:16:04,800
but once again if gitlab's value

00:16:03,839 --> 00:16:07,040
proposition

00:16:04,800 --> 00:16:08,720
revolves around helping users to up

00:16:07,040 --> 00:16:10,240
their devops maturity

00:16:08,720 --> 00:16:12,959
putting a paywall there is pretty

00:16:10,240 --> 00:16:15,360
disingenuous

00:16:12,959 --> 00:16:16,560
that's how we finally came to the buyer

00:16:15,360 --> 00:16:18,480
of the tools

00:16:16,560 --> 00:16:20,079
and the features that that buyer needs

00:16:18,480 --> 00:16:23,120
as the key differentiator

00:16:20,079 --> 00:16:25,360
that worked for us

00:16:23,120 --> 00:16:27,440
and after all those evolutions we

00:16:25,360 --> 00:16:31,199
finally landed on our business model

00:16:27,440 --> 00:16:34,000
which we call buyer based open core

00:16:31,199 --> 00:16:35,440
that is a standard open core license but

00:16:34,000 --> 00:16:38,079
certain features are

00:16:35,440 --> 00:16:39,600
placed into paid tiers based on the

00:16:38,079 --> 00:16:41,360
personas that would be likely

00:16:39,600 --> 00:16:44,240
the likely buyer for those types of

00:16:41,360 --> 00:16:46,720
components and features

00:16:44,240 --> 00:16:48,560
breaking that then down into a simple

00:16:46,720 --> 00:16:51,759
good better best tier

00:16:48,560 --> 00:16:52,720
makes a lot of sense as well for gitlab

00:16:51,759 --> 00:16:55,360
this does result

00:16:52,720 --> 00:16:56,639
in a 5x escalation in the price between

00:16:55,360 --> 00:16:59,199
tiers

00:16:56,639 --> 00:17:00,000
and that in turn leads to a 25 times

00:16:59,199 --> 00:17:01,600
difference

00:17:00,000 --> 00:17:03,519
between the lowest and highest pricing

00:17:01,600 --> 00:17:06,000
to

00:17:03,519 --> 00:17:07,280
dear while on the surface that can seem

00:17:06,000 --> 00:17:11,600
quite large

00:17:07,280 --> 00:17:13,039
our our target buyer changes quite a bit

00:17:11,600 --> 00:17:14,640
as well

00:17:13,039 --> 00:17:16,799
in the lower tiers we're talking about

00:17:14,640 --> 00:17:18,400
individuals and small teams

00:17:16,799 --> 00:17:20,480
and in the highest tiers a buyer would

00:17:18,400 --> 00:17:23,919
more likely be an executive at a

00:17:20,480 --> 00:17:24,880
large fortune 500 company so this has

00:17:23,919 --> 00:17:26,880
been successful

00:17:24,880 --> 00:17:28,960
for us though it does necessitate a

00:17:26,880 --> 00:17:30,720
hybrid sales strategy

00:17:28,960 --> 00:17:32,799
with enterprise sales motions at the

00:17:30,720 --> 00:17:34,720
highest level and self-service

00:17:32,799 --> 00:17:38,320
traditional sas like interactions

00:17:34,720 --> 00:17:40,559
for the lowest tiers now

00:17:38,320 --> 00:17:41,360
that is also relatively necessary for

00:17:40,559 --> 00:17:44,080
gitlab

00:17:41,360 --> 00:17:46,559
given our mix of traditional sas and

00:17:44,080 --> 00:17:48,320
also self-managed installations

00:17:46,559 --> 00:17:50,400
so this sales mix may be different for

00:17:48,320 --> 00:17:52,160
different kinds of businesses

00:17:50,400 --> 00:17:54,000
and it could change for us over time as

00:17:52,160 --> 00:17:56,559
well as you know

00:17:54,000 --> 00:17:58,720
enterprises warm up to the idea of sas

00:17:56,559 --> 00:18:00,320
based code storage

00:17:58,720 --> 00:18:02,559
in fact the whole model is subject to

00:18:00,320 --> 00:18:05,280
change of course as our product

00:18:02,559 --> 00:18:07,120
and our market evolve but our current

00:18:05,280 --> 00:18:09,039
setup gives us a lot of latitude in

00:18:07,120 --> 00:18:10,960
terms of our sales model

00:18:09,039 --> 00:18:12,480
while also making the decisions about

00:18:10,960 --> 00:18:13,440
feature tiering much more

00:18:12,480 --> 00:18:15,679
straightforward

00:18:13,440 --> 00:18:18,240
with a defined model based on who is the

00:18:15,679 --> 00:18:21,360
likely buyer

00:18:18,240 --> 00:18:24,320
but almost as importantly we believe

00:18:21,360 --> 00:18:25,600
this model is more resistant to the fork

00:18:24,320 --> 00:18:28,640
and commoditized

00:18:25,600 --> 00:18:30,880
motions that we discussed earlier

00:18:28,640 --> 00:18:32,799
if we look at what attributes we assign

00:18:30,880 --> 00:18:35,360
to projects that were less likely

00:18:32,799 --> 00:18:36,960
or more likely to be commoditized we can

00:18:35,360 --> 00:18:38,000
see that buyer-based open core

00:18:36,960 --> 00:18:40,640
principles

00:18:38,000 --> 00:18:43,200
align perfectly to answer these concerns

00:18:40,640 --> 00:18:45,600
and attributes

00:18:43,200 --> 00:18:46,799
executives needs are often much more

00:18:45,600 --> 00:18:48,320
complex

00:18:46,799 --> 00:18:50,559
which results in a large number of

00:18:48,320 --> 00:18:53,840
proprietary features to explore

00:18:50,559 --> 00:18:56,080
to meet their complex needs they're also

00:18:53,840 --> 00:18:58,559
more likely to prefer user interface

00:18:56,080 --> 00:19:01,120
and visualization over just interacting

00:18:58,559 --> 00:19:02,720
with the project through an api

00:19:01,120 --> 00:19:04,240
and of course if you're able to deliver

00:19:02,720 --> 00:19:06,559
value to executives

00:19:04,240 --> 00:19:07,760
their price sensitivity is much less

00:19:06,559 --> 00:19:11,200
than other buyers

00:19:07,760 --> 00:19:14,480
or individual developers this sets up

00:19:11,200 --> 00:19:16,720
success for such a model

00:19:14,480 --> 00:19:17,679
and i want to dig a little deeper here

00:19:16,720 --> 00:19:20,400
because

00:19:17,679 --> 00:19:21,919
that user interface and the concept of

00:19:20,400 --> 00:19:24,960
application software versus

00:19:21,919 --> 00:19:26,640
infrastructure software is also apparent

00:19:24,960 --> 00:19:28,799
in success gitlab has seen with this

00:19:26,640 --> 00:19:31,120
business model

00:19:28,799 --> 00:19:32,640
applications that have a graphical user

00:19:31,120 --> 00:19:35,760
interface component

00:19:32,640 --> 00:19:38,640
typically drive much less compute usage

00:19:35,760 --> 00:19:43,039
than an infrastructure software will

00:19:38,640 --> 00:19:44,480
in the age of sas application software

00:19:43,039 --> 00:19:46,480
lends itself to that kind of

00:19:44,480 --> 00:19:48,640
multi-tenant design

00:19:46,480 --> 00:19:49,679
whereas unless you are a hyperscaler

00:19:48,640 --> 00:19:51,280
yourself

00:19:49,679 --> 00:19:53,679
you're going to see a desire for single

00:19:51,280 --> 00:19:56,559
tenant style managed services on the

00:19:53,679 --> 00:19:58,640
infrastructure side

00:19:56,559 --> 00:20:01,440
another benefit of application software

00:19:58,640 --> 00:20:03,760
here is a whole set of contributors

00:20:01,440 --> 00:20:05,200
front-end experts designers and others

00:20:03,760 --> 00:20:06,960
who can contribute

00:20:05,200 --> 00:20:09,360
a lot more to a piece of application

00:20:06,960 --> 00:20:12,080
software than they necessarily can

00:20:09,360 --> 00:20:14,640
with infrastructure software which might

00:20:12,080 --> 00:20:18,840
have you know little user interface

00:20:14,640 --> 00:20:20,799
and maybe very few user ux kind of

00:20:18,840 --> 00:20:22,640
considerations

00:20:20,799 --> 00:20:25,280
so if you look at all of those

00:20:22,640 --> 00:20:28,799
considerations from the perspective

00:20:25,280 --> 00:20:30,559
of of the hypercloud you'll see that not

00:20:28,799 --> 00:20:31,919
only is it harder to commoditize

00:20:30,559 --> 00:20:35,600
projects with this model

00:20:31,919 --> 00:20:38,080
it's also much less attractive typically

00:20:35,600 --> 00:20:40,000
when a hyper cloud goes to adopt and

00:20:38,080 --> 00:20:42,320
maybe even fork and commoditize

00:20:40,000 --> 00:20:43,600
commoditize excuse me an open source

00:20:42,320 --> 00:20:46,000
project

00:20:43,600 --> 00:20:48,000
it's to create a managed service that's

00:20:46,000 --> 00:20:50,960
the value prop for a hypercloud to its

00:20:48,000 --> 00:20:52,720
customers and as part of that the

00:20:50,960 --> 00:20:53,440
motivation will be to drive compute

00:20:52,720 --> 00:20:54,880
usage

00:20:53,440 --> 00:20:57,679
as that's the revenue model of the

00:20:54,880 --> 00:20:57,679
hyperscalers

00:20:58,000 --> 00:21:05,039
now that's not to say that

00:21:02,080 --> 00:21:07,200
buyer based open core application

00:21:05,039 --> 00:21:09,919
software or even knock on word get

00:21:07,200 --> 00:21:11,840
wood git lab is wholly protected from

00:21:09,919 --> 00:21:12,720
someone's desire to fork and commoditize

00:21:11,840 --> 00:21:14,480
it

00:21:12,720 --> 00:21:16,240
but as you look at the long history of

00:21:14,480 --> 00:21:17,039
these changes you'll see that many of

00:21:16,240 --> 00:21:19,280
these defenses

00:21:17,039 --> 00:21:21,120
especially when applied in depth have a

00:21:19,280 --> 00:21:23,039
two-fold benefit to commercial open

00:21:21,120 --> 00:21:24,559
source companies

00:21:23,039 --> 00:21:26,559
it allows them to create a more

00:21:24,559 --> 00:21:30,159
resistant model

00:21:26,559 --> 00:21:32,559
to the service wrapping um

00:21:30,159 --> 00:21:33,919
to the service wrapping motions that we

00:21:32,559 --> 00:21:36,320
saw before

00:21:33,919 --> 00:21:38,000
then almost any other open core

00:21:36,320 --> 00:21:39,200
commercial open source model allows you

00:21:38,000 --> 00:21:41,440
to

00:21:39,200 --> 00:21:42,880
while also positioning the business to

00:21:41,440 --> 00:21:44,880
take full advantage

00:21:42,880 --> 00:21:48,640
of co-creation of features with their

00:21:44,880 --> 00:21:50,559
customers and community alike

00:21:48,640 --> 00:21:52,320
hopefully as we move into the next

00:21:50,559 --> 00:21:54,240
decade of open source

00:21:52,320 --> 00:21:56,240
sharing these lessons learned will help

00:21:54,240 --> 00:21:59,600
other commercial open source companies

00:21:56,240 --> 00:22:00,320
find their way i genuinely believe that

00:21:59,600 --> 00:22:02,640
open source

00:22:00,320 --> 00:22:05,919
is the way to build software and that if

00:22:02,640 --> 00:22:08,559
we can simultaneously create sustainable

00:22:05,919 --> 00:22:11,200
self-sustaining models we'll see even

00:22:08,559 --> 00:22:12,720
more adoption and benefits

00:22:11,200 --> 00:22:14,640
surely there will always be large

00:22:12,720 --> 00:22:16,400
players in the software business

00:22:14,640 --> 00:22:18,080
but we've seen time and again how

00:22:16,400 --> 00:22:20,320
startups and the little people can

00:22:18,080 --> 00:22:21,440
disrupt that status quo

00:22:20,320 --> 00:22:23,120
and i have faith that there will

00:22:21,440 --> 00:22:25,039
continue to be things that surprise all

00:22:23,120 --> 00:22:27,840
of us

00:22:25,039 --> 00:22:29,440
to quote donna in the series finale of

00:22:27,840 --> 00:22:31,600
halton catch fire

00:22:29,440 --> 00:22:32,559
no matter what you do someone is around

00:22:31,600 --> 00:22:34,480
the next corner

00:22:32,559 --> 00:22:36,640
with a better version of it and

00:22:34,480 --> 00:22:38,400
sometimes that person is you

00:22:36,640 --> 00:22:40,080
the you that's never satisfied with what

00:22:38,400 --> 00:22:42,000
you did just because you're obsessed

00:22:40,080 --> 00:22:45,120
with whatever is next

00:22:42,000 --> 00:22:46,000
the one constant is this it's you it's

00:22:45,120 --> 00:22:50,400
us

00:22:46,000 --> 00:22:50,400
the project gets us to the people

00:22:50,720 --> 00:22:54,480
thank you all so much for your time

00:22:52,400 --> 00:22:55,840
today i'm honored to have had the

00:22:54,480 --> 00:22:57,440
opportunity to speak to you

00:22:55,840 --> 00:22:59,440
about something that i care so deeply

00:22:57,440 --> 00:23:00,799
about and i'd love to discuss it even

00:22:59,440 --> 00:23:02,880
more

00:23:00,799 --> 00:23:05,120
hopefully you have some questions that

00:23:02,880 --> 00:23:06,159
you can add into the question and answer

00:23:05,120 --> 00:23:08,480
section

00:23:06,159 --> 00:23:09,200
or into the chat uh if you'd like to get

00:23:08,480 --> 00:23:11,679
in touch with me

00:23:09,200 --> 00:23:12,480
after today the best way is on the

00:23:11,679 --> 00:23:15,520
twitters

00:23:12,480 --> 00:23:17,679
uh i'm at o'leary crew i also do

00:23:15,520 --> 00:23:19,600
occasionally check my email uh so that's

00:23:17,679 --> 00:23:21,600
also here as well

00:23:19,600 --> 00:23:24,400
uh would love to discuss that more with

00:23:21,600 --> 00:23:24,400
you thanks so much

00:23:26,000 --> 00:23:30,400
great thank you very much brandon and i

00:23:28,720 --> 00:23:36,000
can see one question

00:23:30,400 --> 00:23:38,080
from matt whitney

00:23:36,000 --> 00:23:39,360
you find that it's more difficult to

00:23:38,080 --> 00:23:41,840
upsell the next

00:23:39,360 --> 00:23:43,520
higher pricing tier since there's a

00:23:41,840 --> 00:23:46,640
fairly large price

00:23:43,520 --> 00:23:48,880
bumped between them

00:23:46,640 --> 00:23:49,760
uh so i would say generally yes right

00:23:48,880 --> 00:23:53,039
like i think

00:23:49,760 --> 00:23:55,600
the large you know i i could spend a lot

00:23:53,039 --> 00:23:58,640
of time talking about that but the large

00:23:55,600 --> 00:24:01,600
bump in price is something that is

00:23:58,640 --> 00:24:03,760
um it's tough because there's this

00:24:01,600 --> 00:24:07,520
concept

00:24:03,760 --> 00:24:10,159
uh is it 5x the value and then also

00:24:07,520 --> 00:24:11,679
um you know does that mean the the lower

00:24:10,159 --> 00:24:13,279
tier is less valued so it's something

00:24:11,679 --> 00:24:15,279
we're always thinking about

00:24:13,279 --> 00:24:16,960
um i would say that the the biggest

00:24:15,279 --> 00:24:18,799
difference i would say yes it's more

00:24:16,960 --> 00:24:22,320
difficult to upsell

00:24:18,799 --> 00:24:24,159
but what we find is as folks kind of

00:24:22,320 --> 00:24:26,080
adopt more and more of gitlab let's say

00:24:24,159 --> 00:24:27,360
they you know we're using gitlab for

00:24:26,080 --> 00:24:29,200
just source control yeah maybe it's

00:24:27,360 --> 00:24:31,520
harder to upsell them

00:24:29,200 --> 00:24:33,600
but if they're also doing ci cd and

00:24:31,520 --> 00:24:36,080
wants securities

00:24:33,600 --> 00:24:37,200
tooling then all of a sudden gitlab

00:24:36,080 --> 00:24:41,520
becomes a much more

00:24:37,200 --> 00:24:44,080
critical tool uh for for the company

00:24:41,520 --> 00:24:45,279
and uh and that kind of leads just

00:24:44,080 --> 00:24:46,960
naturally to

00:24:45,279 --> 00:24:49,360
the buyer going up and then again the

00:24:46,960 --> 00:24:52,240
price sensitivity going down

00:24:49,360 --> 00:24:53,919
so i would not say that it's i would say

00:24:52,240 --> 00:24:55,440
that it is more difficult

00:24:53,919 --> 00:24:58,320
but we found it to be the right the

00:24:55,440 --> 00:24:58,320
right choice for us

00:24:59,039 --> 00:25:02,240
all right thank you for that and from

00:25:00,799 --> 00:25:05,279
brittany

00:25:02,240 --> 00:25:08,159
thanks for your fantastic talk really

00:25:05,279 --> 00:25:09,360
well executed i'm curious to hear more

00:25:08,159 --> 00:25:12,799
about your sales

00:25:09,360 --> 00:25:13,520
models does git love have a self-service

00:25:12,799 --> 00:25:15,679
like

00:25:13,520 --> 00:25:17,039
automated billing for all of the

00:25:15,679 --> 00:25:19,919
propriety

00:25:17,039 --> 00:25:20,559
features are there some features that

00:25:19,919 --> 00:25:22,799
are only

00:25:20,559 --> 00:25:24,320
available when engaging with a sales

00:25:22,799 --> 00:25:27,440
team

00:25:24,320 --> 00:25:28,000
that's a great question um so i would

00:25:27,440 --> 00:25:30,559
say yes

00:25:28,000 --> 00:25:32,400
we do have self-service for all of the

00:25:30,559 --> 00:25:36,320
tiers so for instance

00:25:32,400 --> 00:25:37,919
um we so we kind of have

00:25:36,320 --> 00:25:39,360
i had a slide that was really complex

00:25:37,919 --> 00:25:41,360
that i took out

00:25:39,360 --> 00:25:42,880
um but showed because we we also have

00:25:41,360 --> 00:25:44,480
this kind of

00:25:42,880 --> 00:25:46,000
uh two different ways to buy gitlab

00:25:44,480 --> 00:25:49,279
right you can buy gitlab

00:25:46,000 --> 00:25:51,039
on gitlab.com where we host and manage

00:25:49,279 --> 00:25:52,960
it as a sas for you

00:25:51,039 --> 00:25:54,080
uh or you can buy gitlab and and self

00:25:52,960 --> 00:25:55,760
manage it yourself

00:25:54,080 --> 00:25:57,919
right in your own cloud or maybe

00:25:55,760 --> 00:26:01,360
on-premises

00:25:57,919 --> 00:26:04,400
um and we price those the same

00:26:01,360 --> 00:26:07,360
and then you can actually sign up for

00:26:04,400 --> 00:26:09,120
any of those tiers online through our

00:26:07,360 --> 00:26:11,120
customer portal

00:26:09,120 --> 00:26:12,480
now having said that you know at the

00:26:11,120 --> 00:26:14,880
highest tiers

00:26:12,480 --> 00:26:16,320
um we're talking about a you know a

00:26:14,880 --> 00:26:18,720
transaction that folks are going to want

00:26:16,320 --> 00:26:20,559
to probably put a purchase order get a

00:26:18,720 --> 00:26:22,640
software agreement in place right and so

00:26:20,559 --> 00:26:24,240
those typically are going to be

00:26:22,640 --> 00:26:27,120
a large enough transaction that folks

00:26:24,240 --> 00:26:28,480
don't typically just sign up online for

00:26:27,120 --> 00:26:30,400
but if it's a small enough team that

00:26:28,480 --> 00:26:32,640
sees the value in it it is possible to

00:26:30,400 --> 00:26:32,640
do

00:26:32,720 --> 00:26:37,919
so yes we allow it but

00:26:36,080 --> 00:26:39,200
you know once you start getting big

00:26:37,919 --> 00:26:40,559
enough you're gonna

00:26:39,200 --> 00:26:44,640
definitely get a call from us if you

00:26:40,559 --> 00:26:44,640
don't call us first for sure

00:26:44,880 --> 00:26:51,200
all right and from louise

00:26:48,480 --> 00:26:52,159
pobel thank you for the dog brandon are

00:26:51,200 --> 00:26:55,200
the slides

00:26:52,159 --> 00:26:57,360
available somewhere great yes i

00:26:55,200 --> 00:26:58,400
will put a link in here and i'll also

00:26:57,360 --> 00:27:01,679
tweet them

00:26:58,400 --> 00:27:03,919
after we drop um

00:27:01,679 --> 00:27:05,279
at o'leary crew i'm gonna just uh get in

00:27:03,919 --> 00:27:08,640
the right chat

00:27:05,279 --> 00:27:09,600
window here um but they are available

00:27:08,640 --> 00:27:11,520
and i'll

00:27:09,600 --> 00:27:12,640
i will tweet out a link to them as well

00:27:11,520 --> 00:27:14,720
um

00:27:12,640 --> 00:27:16,480
after after we get off of here because i

00:27:14,720 --> 00:27:17,360
know that the chat doesn't stick around

00:27:16,480 --> 00:27:21,840
forever so

00:27:17,360 --> 00:27:24,640
a tweet is forever or close i agree

00:27:21,840 --> 00:27:25,679
if we can go visit twitter again if we

00:27:24,640 --> 00:27:28,799
need the links

00:27:25,679 --> 00:27:31,679
yep for sure for sure all right

00:27:28,799 --> 00:27:33,600
we don't have any questions so far and

00:27:31,679 --> 00:27:34,080
everyone if you would like to share at

00:27:33,600 --> 00:27:37,840
least

00:27:34,080 --> 00:27:39,919
one thing one takeaway that you have

00:27:37,840 --> 00:27:40,480
learned today from brandon that would be

00:27:39,919 --> 00:27:43,840
great

00:27:40,480 --> 00:27:44,480
so we can have something to read here in

00:27:43,840 --> 00:27:48,080
the chat

00:27:44,480 --> 00:27:50,320
we still have time we finish early

00:27:48,080 --> 00:27:51,520
and we're hoping you're enjoying the

00:27:50,320 --> 00:27:55,600
conference

00:27:51,520 --> 00:27:58,480
it's the last almost last

00:27:55,600 --> 00:27:59,520
hours of this conference so i'm hoping

00:27:58,480 --> 00:28:02,640
you enjoyed

00:27:59,520 --> 00:28:04,320
and learned so much we have you know a

00:28:02,640 --> 00:28:06,880
great line of speakers

00:28:04,320 --> 00:28:08,480
and sponsors including you of course

00:28:06,880 --> 00:28:12,000
brandon o'leary from

00:28:08,480 --> 00:28:15,279
gitlub and yeah don't forget to share on

00:28:12,000 --> 00:28:18,320
social media with your hashtag ado2020

00:28:15,279 --> 00:28:22,320
and see

00:28:18,320 --> 00:28:26,080
we can entertain one more

00:28:22,320 --> 00:28:26,080
question here from that

00:28:26,720 --> 00:28:32,000
oh no not a question yeah he just said

00:28:30,159 --> 00:28:33,679
that they uh they didn't fit in it

00:28:32,000 --> 00:28:35,919
there is there is video on the website

00:28:33,679 --> 00:28:38,320
of them driving in it actually

00:28:35,919 --> 00:28:38,960
um i'm just going back to the slide here

00:28:38,320 --> 00:28:41,279
um

00:28:38,960 --> 00:28:42,960
our former uh vp of product yob is the

00:28:41,279 --> 00:28:44,559
one that's closest to the camera here

00:28:42,960 --> 00:28:46,640
and they surprised him

00:28:44,559 --> 00:28:48,320
with a bachelor party they they faked

00:28:46,640 --> 00:28:50,240
him out and said that they were going to

00:28:48,320 --> 00:28:52,240
an emergency customer meeting

00:28:50,240 --> 00:28:53,840
with some customer that was really upset

00:28:52,240 --> 00:28:56,880
um and it turned out they were

00:28:53,840 --> 00:28:57,600
taking him on a bachelor party um for

00:28:56,880 --> 00:28:59,360
his

00:28:57,600 --> 00:29:00,640
now wife uh but at the time he was

00:28:59,360 --> 00:29:02,159
engaged so

00:29:00,640 --> 00:29:03,679
they did fit in it and there's video of

00:29:02,159 --> 00:29:06,000
it even uh on the

00:29:03,679 --> 00:29:09,520
on the website in the gitlab uh company

00:29:06,000 --> 00:29:09,520
history if you google that you'll see it

00:29:10,000 --> 00:29:14,960
hey that's a very cool prank

00:29:17,200 --> 00:29:24,000
okay well it seems like your internal

00:29:20,880 --> 00:29:27,679
team have you know very

00:29:24,000 --> 00:29:31,679
great culture inside that's why outside

00:29:27,679 --> 00:29:34,480
the gitlab team the community is really

00:29:31,679 --> 00:29:36,880
you know there for one another and

00:29:34,480 --> 00:29:40,559
helping the businesses

00:29:36,880 --> 00:29:42,720
really well so good job on that

00:29:40,559 --> 00:29:44,880
and it's actually my first to hear the

00:29:42,720 --> 00:29:46,000
history of gitlab since i'm from the

00:29:44,880 --> 00:29:50,799
philippines so

00:29:46,000 --> 00:29:54,000
um community is still at the early stage

00:29:50,799 --> 00:29:56,240
here in my country so that's why

00:29:54,000 --> 00:29:58,080
i'm happy to be here with all things

00:29:56,240 --> 00:30:00,640
open learning some

00:29:58,080 --> 00:30:02,000
development and developers and

00:30:00,640 --> 00:30:05,200
software's

00:30:02,000 --> 00:30:08,880
that are very helpful for communities

00:30:05,200 --> 00:30:11,679
especially for brands right and

00:30:08,880 --> 00:30:13,200
i don't see any more i don't see any

00:30:11,679 --> 00:30:16,559
questions here so far

00:30:13,200 --> 00:30:20,399
so we have any last

00:30:16,559 --> 00:30:23,039
um tips or advices for our attendees

00:30:20,399 --> 00:30:25,200
right now um

00:30:23,039 --> 00:30:26,399
no again i'd say find me on twitter at

00:30:25,200 --> 00:30:29,440
o'leary crew

00:30:26,399 --> 00:30:30,880
um and yeah if you're you're interested

00:30:29,440 --> 00:30:32,159
in working we've like i said we've got

00:30:30,880 --> 00:30:34,159
folks all over we have

00:30:32,159 --> 00:30:35,360
i think we have like six or seven folks

00:30:34,159 --> 00:30:37,360
in the philippines

00:30:35,360 --> 00:30:38,640
um for instance so we have folks all

00:30:37,360 --> 00:30:40,799
over the world

00:30:38,640 --> 00:30:43,120
um and come join us if you're if you're

00:30:40,799 --> 00:30:45,120
if there's something that interests you

00:30:43,120 --> 00:30:46,399
that's very interesting i would love to

00:30:45,120 --> 00:30:48,640
know more

00:30:46,399 --> 00:30:49,880
yeah if you go to if you search for um

00:30:48,640 --> 00:30:51,960
get la if you go to

00:30:49,880 --> 00:30:53,360
about.gitlab.com you know send the link

00:30:51,960 --> 00:30:55,440
about.gitlab.com

00:30:53,360 --> 00:30:57,600
company slash team you can actually see

00:30:55,440 --> 00:31:00,720
a map of where we all are

00:30:57,600 --> 00:31:02,159
um and so you can you can see all of the

00:31:00,720 --> 00:31:04,799
the different countries and regions that

00:31:02,159 --> 00:31:06,640
we we work in it's actually 66 so

00:31:04,799 --> 00:31:09,840
i think i said 65 plus which saved

00:31:06,640 --> 00:31:12,880
myself so

00:31:09,840 --> 00:31:14,240
it's a very big deal now it is it is

00:31:12,880 --> 00:31:17,519
yeah we're only like i said we're only

00:31:14,240 --> 00:31:19,600
about 151 we start when i started

00:31:17,519 --> 00:31:21,679
so i knew everyone and now i definitely

00:31:19,600 --> 00:31:24,960
don't know everyone

00:31:21,679 --> 00:31:33,840
but they know you for sure for sure

00:31:24,960 --> 00:31:33,840

YouTube URL: https://www.youtube.com/watch?v=Xt1kY7EEXb8


