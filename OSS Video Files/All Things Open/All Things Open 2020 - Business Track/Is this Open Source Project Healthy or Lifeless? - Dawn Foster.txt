Title: Is this Open Source Project Healthy or Lifeless? - Dawn Foster
Publication date: 2020-12-16
Playlist: All Things Open 2020 - Business Track
Description: 
	Presented by: Dawn Foster, VMware
Presented at All Things Open 2020 - Business Track

Abstract: Most of us bet large parts of our business on open source technologies, but how do we decide which projects will continue to be healthy and viable? While there are no sure bets, there are ways we can evaluate these projects to understand our risks and decide which projects are likely to be successful.

This talk will propose questions to ask and how to interpret the answers, including: 

- Does the project make regular releases and quickly patch security vulnerabilities? These projects may be more secure.
- Is the project under a foundation, or is it owned by a company? Company owned projects are at a greater risk of changes that are not aligned with community interests.
- How is the project governed, and can others move into leadership positions? Having neutral, preferably elected, leadership provides opportunities for you to influence project decision-making.
- How many people are core contributors, and are they from a diverse set of employers? There should be enough people that the project would continue if something happened to a single person or company.

The audience will walk away with practical advice about how to assess risk and evaluate projects for your organization.
Captions: 
	00:00:05,120 --> 00:00:08,160
so

00:00:05,759 --> 00:00:10,080
welcome everyone to my talk about open

00:00:08,160 --> 00:00:12,080
source project health

00:00:10,080 --> 00:00:13,920
uh as ruth just mentioned if you have

00:00:12,080 --> 00:00:15,920
questions drop them into the q a because

00:00:13,920 --> 00:00:17,760
i will pause periodically to answer

00:00:15,920 --> 00:00:19,520
questions throughout the talk so

00:00:17,760 --> 00:00:21,920
i won't necessarily save them all to the

00:00:19,520 --> 00:00:25,199
end so that we can talk about whatever

00:00:21,920 --> 00:00:25,199
you all find interesting

00:00:25,519 --> 00:00:28,640
i wanted to do this talk because

00:00:27,840 --> 00:00:31,599
companies

00:00:28,640 --> 00:00:32,640
make really big bets on open source

00:00:31,599 --> 00:00:36,079
technologies

00:00:32,640 --> 00:00:39,520
but how can we figure out which projects

00:00:36,079 --> 00:00:42,000
will continue to be healthy and viable

00:00:39,520 --> 00:00:43,200
like with most things in life there are

00:00:42,000 --> 00:00:45,280
no sure bets

00:00:43,200 --> 00:00:47,280
right but there are ways that we can

00:00:45,280 --> 00:00:49,200
evaluate these projects and understand

00:00:47,280 --> 00:00:51,039
the risks that we're taking

00:00:49,200 --> 00:00:53,360
and see if we can maybe minimize or

00:00:51,039 --> 00:00:58,960
mitigate some of those risks and this is

00:00:53,360 --> 00:01:01,120
what i'm going to talk about today

00:00:58,960 --> 00:01:02,239
but first i will tell you a little bit

00:01:01,120 --> 00:01:05,119
about me

00:01:02,239 --> 00:01:06,880
i've spent more than 20 years working in

00:01:05,119 --> 00:01:09,200
the technology industry

00:01:06,880 --> 00:01:10,720
and most of that time i've been working

00:01:09,200 --> 00:01:13,119
on open source projects

00:01:10,720 --> 00:01:13,840
from within a pretty wide variety of

00:01:13,119 --> 00:01:16,880
companies

00:01:13,840 --> 00:01:20,080
i was director of community at puppet

00:01:16,880 --> 00:01:20,479
i was community lead for intel's open

00:01:20,080 --> 00:01:23,920
source

00:01:20,479 --> 00:01:25,920
technology center before the vmware

00:01:23,920 --> 00:01:27,920
acquisition of pivotal i was responsible

00:01:25,920 --> 00:01:29,840
for driving pivotal's kubernetes

00:01:27,920 --> 00:01:31,200
contribution strategy and i was actively

00:01:29,840 --> 00:01:33,119
contributing to the

00:01:31,200 --> 00:01:35,119
to kubernetes within the contributor

00:01:33,119 --> 00:01:37,360
experience sig

00:01:35,119 --> 00:01:38,640
i also have a phd from the university of

00:01:37,360 --> 00:01:41,040
greenwich in london

00:01:38,640 --> 00:01:42,479
that i got by researching how people

00:01:41,040 --> 00:01:43,119
working at a bunch of different

00:01:42,479 --> 00:01:46,640
companies

00:01:43,119 --> 00:01:48,720
collaborate within the linux kernel

00:01:46,640 --> 00:01:50,159
so now i'm working in vmware's open

00:01:48,720 --> 00:01:52,960
source program office

00:01:50,159 --> 00:01:54,240
and i'm responsible for our open source

00:01:52,960 --> 00:01:56,799
community strategy

00:01:54,240 --> 00:01:59,520
so lately i've been a lot more active in

00:01:56,799 --> 00:02:00,880
the cncf contributor strategy sake in

00:01:59,520 --> 00:02:03,920
particular the governance

00:02:00,880 --> 00:02:06,000
working group i'm also a board member of

00:02:03,920 --> 00:02:07,360
open uk which is focused on developing

00:02:06,000 --> 00:02:11,200
and sustaining leadership

00:02:07,360 --> 00:02:12,640
in open technology here within the uk

00:02:11,200 --> 00:02:14,400
i'm a governing board member and

00:02:12,640 --> 00:02:15,840
maintainer for the linux foundation's

00:02:14,400 --> 00:02:17,440
chaos project

00:02:15,840 --> 00:02:19,680
which you'll see a lot in this talk

00:02:17,440 --> 00:02:21,280
they're focused on using metrics to

00:02:19,680 --> 00:02:22,080
evaluate the health of open source

00:02:21,280 --> 00:02:24,400
projects

00:02:22,080 --> 00:02:26,400
and i'm also on the advisory board for

00:02:24,400 --> 00:02:29,840
paternia which is a company focused on

00:02:26,400 --> 00:02:29,840
open source project health metrics

00:02:31,200 --> 00:02:34,879
as i said before i have i have a lot to

00:02:33,200 --> 00:02:36,239
talk about during this presentation but

00:02:34,879 --> 00:02:38,319
i will pause

00:02:36,239 --> 00:02:40,080
periodically and answer your questions

00:02:38,319 --> 00:02:40,879
so type your questions into the q a as

00:02:40,080 --> 00:02:44,160
you think of them

00:02:40,879 --> 00:02:48,239
and i'll get to as many as i can in

00:02:44,160 --> 00:02:50,480
the time allotted most of us

00:02:48,239 --> 00:02:52,080
bet large portions of our business on

00:02:50,480 --> 00:02:54,080
open source technologies

00:02:52,080 --> 00:02:55,440
but how do we decide which projects will

00:02:54,080 --> 00:02:57,920
continue to be healthy

00:02:55,440 --> 00:02:59,040
and viable i try to evaluate project

00:02:57,920 --> 00:03:01,360
health in terms of

00:02:59,040 --> 00:03:02,800
risk rather than making a judgment of

00:03:01,360 --> 00:03:06,159
whether something's good

00:03:02,800 --> 00:03:08,480
or bad and certainly there are no

00:03:06,159 --> 00:03:10,239
sure bets right but there are ways that

00:03:08,480 --> 00:03:12,879
we can evaluate these projects and we

00:03:10,239 --> 00:03:14,640
can decide which projects are maybe more

00:03:12,879 --> 00:03:16,159
likely to be successful

00:03:14,640 --> 00:03:19,840
and understand the risks that are

00:03:16,159 --> 00:03:19,840
associated with those projects

00:03:20,080 --> 00:03:23,519
first of all the community can make or

00:03:23,040 --> 00:03:26,480
break

00:03:23,519 --> 00:03:27,760
an open source project and the overall

00:03:26,480 --> 00:03:30,720
success of a project

00:03:27,760 --> 00:03:32,400
often depends on the community this is

00:03:30,720 --> 00:03:34,080
usually the first thing i look at

00:03:32,400 --> 00:03:35,920
when trying to decide if an open source

00:03:34,080 --> 00:03:38,799
project is healthy or not

00:03:35,920 --> 00:03:40,640
is the community active and engaged in

00:03:38,799 --> 00:03:41,680
productive discussions around the

00:03:40,640 --> 00:03:43,280
project

00:03:41,680 --> 00:03:45,440
are they helpful when people have

00:03:43,280 --> 00:03:47,760
questions or problems

00:03:45,440 --> 00:03:49,920
are they welcoming for new contributors

00:03:47,760 --> 00:03:52,000
and for new users

00:03:49,920 --> 00:03:53,360
one of the reasons that kubernetes has

00:03:52,000 --> 00:03:56,480
been so successful

00:03:53,360 --> 00:03:59,760
is because people truly enjoy

00:03:56,480 --> 00:04:00,720
participating in that community from the

00:03:59,760 --> 00:04:03,360
beginning

00:04:00,720 --> 00:04:04,319
in kubernetes i felt welcomed the people

00:04:03,360 --> 00:04:06,400
were fun

00:04:04,319 --> 00:04:08,239
and there were plenty of opportunities

00:04:06,400 --> 00:04:10,959
to step in and help out

00:04:08,239 --> 00:04:12,799
kubernetes also has loads of resources

00:04:10,959 --> 00:04:15,040
documentation and training

00:04:12,799 --> 00:04:16,160
for new contributors along with

00:04:15,040 --> 00:04:18,320
mentoring programs

00:04:16,160 --> 00:04:20,560
which helps people get started and want

00:04:18,320 --> 00:04:23,600
to continue participating

00:04:20,560 --> 00:04:26,639
if the community isn't amazing this is

00:04:23,600 --> 00:04:26,960
a risk it doesn't necessarily mean that

00:04:26,639 --> 00:04:29,280
you

00:04:26,960 --> 00:04:30,479
shouldn't get involved or use the

00:04:29,280 --> 00:04:32,240
software

00:04:30,479 --> 00:04:34,400
but you should approach it with caution

00:04:32,240 --> 00:04:36,479
and understand that there is a risk

00:04:34,400 --> 00:04:38,479
that things could go terribly wrong with

00:04:36,479 --> 00:04:40,880
that project as a whole

00:04:38,479 --> 00:04:42,560
if things get even worse within the

00:04:40,880 --> 00:04:45,759
community and the contributors

00:04:42,560 --> 00:04:45,759
just start disappearing

00:04:46,720 --> 00:04:51,199
another key indicator of project health

00:04:49,440 --> 00:04:54,000
is responsiveness

00:04:51,199 --> 00:04:56,479
to community contributions if you're

00:04:54,000 --> 00:04:58,080
actively using an open source project

00:04:56,479 --> 00:04:59,919
it's likely that you will you'll find

00:04:58,080 --> 00:05:02,800
bugs or want to get your

00:04:59,919 --> 00:05:04,560
fixes back upstream so you'll want to

00:05:02,800 --> 00:05:06,560
make sure that maintainers and other

00:05:04,560 --> 00:05:08,160
contributors typically respond in a

00:05:06,560 --> 00:05:10,320
timely fashion

00:05:08,160 --> 00:05:12,639
seeing large numbers of issues and pull

00:05:10,320 --> 00:05:13,520
requests on a project is a red flag for

00:05:12,639 --> 00:05:15,759
me

00:05:13,520 --> 00:05:17,600
because it can indicate that either they

00:05:15,759 --> 00:05:19,520
don't have enough contributors to handle

00:05:17,600 --> 00:05:22,639
the incoming contributions

00:05:19,520 --> 00:05:23,600
or even worse that they don't actually

00:05:22,639 --> 00:05:26,560
care about

00:05:23,600 --> 00:05:28,320
or want contributions from others now

00:05:26,560 --> 00:05:30,160
out of these two scenarios not having

00:05:28,320 --> 00:05:32,160
enough contributors to respond to pull

00:05:30,160 --> 00:05:33,199
requests and issues is probably the more

00:05:32,160 --> 00:05:35,039
common one

00:05:33,199 --> 00:05:36,960
and most projects i've worked on have

00:05:35,039 --> 00:05:39,120
struggled with keeping up at one time or

00:05:36,960 --> 00:05:40,800
another it's not uncommon

00:05:39,120 --> 00:05:43,120
in some cases you can help solve this

00:05:40,800 --> 00:05:45,280
problem by making contributions to open

00:05:43,120 --> 00:05:48,479
source projects part of the job

00:05:45,280 --> 00:05:51,520
for some of your employees however

00:05:48,479 --> 00:05:52,800
there are legitimately some projects

00:05:51,520 --> 00:05:55,120
that don't actually

00:05:52,800 --> 00:05:56,319
want contributions from people outside

00:05:55,120 --> 00:05:58,160
of their company

00:05:56,319 --> 00:06:00,160
or outside of their existing circle of

00:05:58,160 --> 00:06:01,919
maintainers this can happen when a

00:06:00,160 --> 00:06:02,880
project was open sourced for the wrong

00:06:01,919 --> 00:06:06,160
reasons

00:06:02,880 --> 00:06:07,680
like politics or marketing without

00:06:06,160 --> 00:06:10,080
buy-in from the people who are

00:06:07,680 --> 00:06:11,840
responsible for that project

00:06:10,080 --> 00:06:13,280
these projects are much higher risk

00:06:11,840 --> 00:06:15,440
since you're less likely

00:06:13,280 --> 00:06:17,039
to get any changes incorporated in the

00:06:15,440 --> 00:06:19,120
upstream project that you might need in

00:06:17,039 --> 00:06:20,800
the future

00:06:19,120 --> 00:06:22,800
and responsiveness is one of the key

00:06:20,800 --> 00:06:24,720
metrics that i use to look at

00:06:22,800 --> 00:06:26,000
whether the open source projects we've

00:06:24,720 --> 00:06:28,560
created at vmware

00:06:26,000 --> 00:06:30,319
are healthy and i have some examples of

00:06:28,560 --> 00:06:32,880
how i do this on the next couple of

00:06:30,319 --> 00:06:32,880
slides

00:06:33,120 --> 00:06:37,280
our guidance for open source projects is

00:06:35,440 --> 00:06:38,639
that they should respond within two

00:06:37,280 --> 00:06:40,720
business days

00:06:38,639 --> 00:06:42,639
at the most to new issues and pull

00:06:40,720 --> 00:06:44,000
requests on any projects that we start

00:06:42,639 --> 00:06:45,759
within vmware

00:06:44,000 --> 00:06:48,560
and i think that this is a pretty good

00:06:45,759 --> 00:06:50,479
guideline for many projects

00:06:48,560 --> 00:06:52,639
the reality is that a lot of our pull

00:06:50,479 --> 00:06:53,840
requests and issues get responses in a

00:06:52,639 --> 00:06:56,479
matter of minutes

00:06:53,840 --> 00:06:57,759
or hours instead of days especially if

00:06:56,479 --> 00:06:59,520
they come in when the maintainers and

00:06:57,759 --> 00:07:01,120
other contributors are actively working

00:06:59,520 --> 00:07:02,880
on the project

00:07:01,120 --> 00:07:04,720
now this is an example from the turn

00:07:02,880 --> 00:07:05,520
project and you can see the black line

00:07:04,720 --> 00:07:08,479
on top or

00:07:05,520 --> 00:07:10,400
green where the lines overlap which is

00:07:08,479 --> 00:07:12,000
the total number of pull requests that

00:07:10,400 --> 00:07:13,599
are open in each month

00:07:12,000 --> 00:07:15,360
so you compare that line to the green

00:07:13,599 --> 00:07:17,280
line which shows the number of pull

00:07:15,360 --> 00:07:19,440
requests that were responded to in less

00:07:17,280 --> 00:07:21,440
than two business days

00:07:19,440 --> 00:07:23,919
this one looks really good there was a

00:07:21,440 --> 00:07:25,919
slightly larger gap in march and april

00:07:23,919 --> 00:07:28,400
where some pull requests were lingering

00:07:25,919 --> 00:07:30,000
for maybe more than two business days

00:07:28,400 --> 00:07:31,840
and it looks like one of those months

00:07:30,000 --> 00:07:34,800
were just under that 90

00:07:31,840 --> 00:07:35,840
threshold that i set and i always expect

00:07:34,800 --> 00:07:37,680
to see a month

00:07:35,840 --> 00:07:39,440
where things slip a little even for

00:07:37,680 --> 00:07:40,319
healthy projects even very healthy

00:07:39,440 --> 00:07:42,319
projects

00:07:40,319 --> 00:07:44,000
because people are distracted they've

00:07:42,319 --> 00:07:45,599
got other projects

00:07:44,000 --> 00:07:47,039
conferences maybe they want to take a

00:07:45,599 --> 00:07:48,560
vacation

00:07:47,039 --> 00:07:50,800
and you could set any thresholds you

00:07:48,560 --> 00:07:53,840
wanted but for me

00:07:50,800 --> 00:07:55,440
10 wiggle room and 5 out of 6 months is

00:07:53,840 --> 00:07:59,440
what seems reasonable

00:07:55,440 --> 00:08:00,879
uh for me for our projects

00:07:59,440 --> 00:08:03,440
now in addition to looking at the time

00:08:00,879 --> 00:08:05,440
to first response i also look at whether

00:08:03,440 --> 00:08:06,319
our projects are keeping up with pull

00:08:05,440 --> 00:08:08,960
requests and

00:08:06,319 --> 00:08:10,800
closing them in a timely manner and i

00:08:08,960 --> 00:08:13,520
think it's important to look at

00:08:10,800 --> 00:08:15,520
closed pull requests rather than just

00:08:13,520 --> 00:08:16,800
merged pull requests when measuring

00:08:15,520 --> 00:08:19,039
project health

00:08:16,800 --> 00:08:20,160
because there will always be some pull

00:08:19,039 --> 00:08:22,720
requests that

00:08:20,160 --> 00:08:24,639
shouldn't be merged they just should not

00:08:22,720 --> 00:08:25,680
be merged for a variety of different

00:08:24,639 --> 00:08:28,639
reasons

00:08:25,680 --> 00:08:29,360
and i'd like to see that a project also

00:08:28,639 --> 00:08:32,159
closes

00:08:29,360 --> 00:08:33,039
prs that won't be merged in a timely

00:08:32,159 --> 00:08:34,959
fashion

00:08:33,039 --> 00:08:36,640
rather than just letting them linger in

00:08:34,959 --> 00:08:38,959
limbo because it can be

00:08:36,640 --> 00:08:41,839
hard to tell people that their

00:08:38,959 --> 00:08:43,839
contribution won't ever be merged

00:08:41,839 --> 00:08:45,600
now again the the line on this graph so

00:08:43,839 --> 00:08:46,640
it's a black line but it's overlaid with

00:08:45,600 --> 00:08:48,640
the green line

00:08:46,640 --> 00:08:50,240
shows the total number of pull requests

00:08:48,640 --> 00:08:51,839
that are open in a given month and the

00:08:50,240 --> 00:08:53,440
green line where it dips below

00:08:51,839 --> 00:08:55,040
shows the number of pull requests that

00:08:53,440 --> 00:08:56,959
were closed in that month

00:08:55,040 --> 00:08:58,399
now i see a little gap here in august

00:08:56,959 --> 00:09:00,399
for the turn project

00:08:58,399 --> 00:09:01,760
but i also happen to know that one of

00:09:00,399 --> 00:09:04,160
the key contributors

00:09:01,760 --> 00:09:05,600
is off on maternity leave which is as

00:09:04,160 --> 00:09:08,959
far as i'm concerned a pretty great

00:09:05,600 --> 00:09:11,120
excuse for neglecting simple requests

00:09:08,959 --> 00:09:12,480
and for all of our metrics i'm really

00:09:11,120 --> 00:09:14,800
careful to identify

00:09:12,480 --> 00:09:15,519
projects that don't hit these thresholds

00:09:14,800 --> 00:09:19,360
as at

00:09:15,519 --> 00:09:19,760
risk not unhealthy the thresholds that i

00:09:19,360 --> 00:09:21,920
set

00:09:19,760 --> 00:09:23,040
again seem reasonable for most of my

00:09:21,920 --> 00:09:24,480
projects but

00:09:23,040 --> 00:09:26,399
admittedly they're they're a bit

00:09:24,480 --> 00:09:28,800
arbitrary right so they might not be

00:09:26,399 --> 00:09:30,399
ideal for certain types of projects

00:09:28,800 --> 00:09:32,880
and additionally some projects might

00:09:30,399 --> 00:09:35,120
have really very good reasons for not

00:09:32,880 --> 00:09:39,040
always meeting these goals based on

00:09:35,120 --> 00:09:39,040
other priorities or other commitments

00:09:40,320 --> 00:09:44,959
i think we don't always spend enough

00:09:42,399 --> 00:09:47,920
time thinking about contributor

00:09:44,959 --> 00:09:48,640
risk associated with many open source

00:09:47,920 --> 00:09:50,399
projects

00:09:48,640 --> 00:09:51,920
this is sometimes called the bus factor

00:09:50,399 --> 00:09:54,560
which is a bit macabre

00:09:51,920 --> 00:09:55,920
so i've heard other people frame this in

00:09:54,560 --> 00:09:57,680
terms of winning the lottery

00:09:55,920 --> 00:09:59,279
which is obviously way more positive

00:09:57,680 --> 00:10:01,360
than being hit by a bus

00:09:59,279 --> 00:10:03,360
but what this means is that for any open

00:10:01,360 --> 00:10:05,680
source projects you rely on

00:10:03,360 --> 00:10:06,720
are there enough contributors that if

00:10:05,680 --> 00:10:08,959
one of them

00:10:06,720 --> 00:10:09,920
won the lottery and retired on a beach

00:10:08,959 --> 00:10:11,920
tomorrow

00:10:09,920 --> 00:10:13,519
could the project continue with minimal

00:10:11,920 --> 00:10:16,160
disruptions

00:10:13,519 --> 00:10:18,240
this is a bigger risk for projects that

00:10:16,160 --> 00:10:19,920
are highly complex or contain

00:10:18,240 --> 00:10:22,320
technologies that require really

00:10:19,920 --> 00:10:24,720
specialized expertise

00:10:22,320 --> 00:10:26,800
the risk might be much lower for small

00:10:24,720 --> 00:10:29,360
projects using technologies that could

00:10:26,800 --> 00:10:31,680
easily be picked up for most developers

00:10:29,360 --> 00:10:33,519
the biggest example of this was a couple

00:10:31,680 --> 00:10:34,480
of years ago when it was discovered

00:10:33,519 --> 00:10:37,120
openssl

00:10:34,480 --> 00:10:38,959
had a security bug in their cryptography

00:10:37,120 --> 00:10:40,240
library referred to as heartbleed so if

00:10:38,959 --> 00:10:41,839
you're in the last session

00:10:40,240 --> 00:10:42,959
dwayne and carol also talked about this

00:10:41,839 --> 00:10:44,959
example because it's a pretty great

00:10:42,959 --> 00:10:47,040
example for a lot of reasons

00:10:44,959 --> 00:10:48,720
but openssl is the technology that

00:10:47,040 --> 00:10:48,959
almost every company in the world uses

00:10:48,720 --> 00:10:51,519
in

00:10:48,959 --> 00:10:52,880
in one way or another and it was during

00:10:51,519 --> 00:10:55,440
this crisis that most of us

00:10:52,880 --> 00:10:57,600
learned that openssl the foundation

00:10:55,440 --> 00:10:59,360
received about two thousand dollars in

00:10:57,600 --> 00:11:01,680
donations per year

00:10:59,360 --> 00:11:03,440
and was maintained uh kind of mostly by

00:11:01,680 --> 00:11:06,320
a single person with a second person

00:11:03,440 --> 00:11:06,720
also contributing yes that is indeed

00:11:06,320 --> 00:11:08,640
right

00:11:06,720 --> 00:11:10,480
software that's used by almost everyone

00:11:08,640 --> 00:11:12,399
had really no resources

00:11:10,480 --> 00:11:14,560
to maintain the software over the long

00:11:12,399 --> 00:11:17,200
term and there are

00:11:14,560 --> 00:11:19,200
probably hundreds or thousands of other

00:11:17,200 --> 00:11:20,959
open source projects in the same or

00:11:19,200 --> 00:11:22,640
similar situations

00:11:20,959 --> 00:11:24,320
now in this case the linux foundation

00:11:22,640 --> 00:11:24,800
got some companies together to fund the

00:11:24,320 --> 00:11:26,880
core

00:11:24,800 --> 00:11:29,120
infrastructure initiative to provide

00:11:26,880 --> 00:11:30,800
funding for people to work on openssl

00:11:29,120 --> 00:11:33,279
and similar projects on a

00:11:30,800 --> 00:11:34,480
full-time basis and i know vmware and

00:11:33,279 --> 00:11:36,640
other companies have also started

00:11:34,480 --> 00:11:39,440
contributing in particular to open ssl

00:11:36,640 --> 00:11:41,120
but also other projects

00:11:39,440 --> 00:11:43,360
you should also look at organizational

00:11:41,120 --> 00:11:45,279
diversity as a part of

00:11:43,360 --> 00:11:46,880
the health and risk for open source

00:11:45,279 --> 00:11:49,519
projects if

00:11:46,880 --> 00:11:52,079
all or most of the contributions are

00:11:49,519 --> 00:11:53,760
from employees at a single company

00:11:52,079 --> 00:11:55,519
what happens when that company has a

00:11:53,760 --> 00:11:58,160
shift in strategy

00:11:55,519 --> 00:12:00,800
or they get acquired or even worse they

00:11:58,160 --> 00:12:02,480
run out of money and go out of business

00:12:00,800 --> 00:12:04,240
would the project be able to continue if

00:12:02,480 --> 00:12:06,399
the company pulled all of its employees

00:12:04,240 --> 00:12:08,240
out of the project

00:12:06,399 --> 00:12:09,519
again this comes down to risk and

00:12:08,240 --> 00:12:11,600
whether you

00:12:09,519 --> 00:12:13,920
as a company are willing to take on that

00:12:11,600 --> 00:12:13,920
risk

00:12:14,560 --> 00:12:17,680
again these thresholds are a bit

00:12:16,639 --> 00:12:19,040
arbitrary

00:12:17,680 --> 00:12:20,880
but if you look at the top few

00:12:19,040 --> 00:12:21,760
contributors i like to see that we have

00:12:20,880 --> 00:12:24,240
at least

00:12:21,760 --> 00:12:25,040
three people that are making more than

00:12:24,240 --> 00:12:27,040
00:12:25,040 --> 00:12:28,639
of the commits over the past year for at

00:12:27,040 --> 00:12:29,920
least 70 percent of the commits over the

00:12:28,639 --> 00:12:31,920
last year

00:12:29,920 --> 00:12:34,079
this date is from the harbor repo within

00:12:31,920 --> 00:12:34,480
the harbor project which we contributed

00:12:34,079 --> 00:12:37,839
to

00:12:34,480 --> 00:12:38,560
the cncf a while back and it is a great

00:12:37,839 --> 00:12:40,320
balance

00:12:38,560 --> 00:12:41,600
of contributions from quite a few

00:12:40,320 --> 00:12:43,360
different people

00:12:41,600 --> 00:12:44,720
and this is admittedly a fairly

00:12:43,360 --> 00:12:46,880
rudimentary way

00:12:44,720 --> 00:12:47,920
of measuring contributor risk which

00:12:46,880 --> 00:12:50,320
works well enough for

00:12:47,920 --> 00:12:51,519
what i need but for really big projects

00:12:50,320 --> 00:12:53,440
you might want to measure this for

00:12:51,519 --> 00:12:54,880
different areas within the code base

00:12:53,440 --> 00:12:57,279
to make sure that you have good coverage

00:12:54,880 --> 00:12:59,760
across the entire project so that each

00:12:57,279 --> 00:13:02,079
key area has a reasonable contributor

00:12:59,760 --> 00:13:02,079
risk

00:13:02,399 --> 00:13:06,160
while i do like to see three or more

00:13:03,760 --> 00:13:07,600
people making most of the contributions

00:13:06,160 --> 00:13:09,120
this is another example from the turn

00:13:07,600 --> 00:13:09,600
project but this is this is probably

00:13:09,120 --> 00:13:11,760
okay

00:13:09,600 --> 00:13:13,519
because this is a relatively small

00:13:11,760 --> 00:13:16,160
project and it does have two

00:13:13,519 --> 00:13:18,240
active contributors and if you look at

00:13:16,160 --> 00:13:20,480
turn it's a container inspection tool

00:13:18,240 --> 00:13:21,760
it's written mostly in python so

00:13:20,480 --> 00:13:24,000
it would be something that could be

00:13:21,760 --> 00:13:25,680
picked up by other people if

00:13:24,000 --> 00:13:27,600
one of these two won the lottery and

00:13:25,680 --> 00:13:29,200
disappeared on us

00:13:27,600 --> 00:13:31,839
but there's also a good balance between

00:13:29,200 --> 00:13:33,839
these two at 42 and 35 percent so it's

00:13:31,839 --> 00:13:35,519
not just one person making most of the

00:13:33,839 --> 00:13:37,600
contributions

00:13:35,519 --> 00:13:40,240
but more importantly i like to look at

00:13:37,600 --> 00:13:42,560
contributor risk as an opportunity

00:13:40,240 --> 00:13:44,480
for mentoring and for bringing more

00:13:42,560 --> 00:13:46,320
people into the project

00:13:44,480 --> 00:13:48,480
when there are only a couple of

00:13:46,320 --> 00:13:50,399
contributors doing most of the work

00:13:48,480 --> 00:13:52,880
this is a good opportunity to think

00:13:50,399 --> 00:13:54,399
about other people within the company or

00:13:52,880 --> 00:13:56,399
within the project who could be

00:13:54,399 --> 00:13:59,920
encouraged and mentored into taking on a

00:13:56,399 --> 00:13:59,920
larger role within the project

00:14:00,560 --> 00:14:04,079
measuring organizational diversity is

00:14:02,720 --> 00:14:07,839
really important

00:14:04,079 --> 00:14:10,160
but but it is also one of the most

00:14:07,839 --> 00:14:12,240
difficult project health measurements to

00:14:10,160 --> 00:14:13,680
actually get right

00:14:12,240 --> 00:14:16,160
if everyone used corporate email

00:14:13,680 --> 00:14:18,959
addresses this would be a lot easier

00:14:16,160 --> 00:14:20,399
but many people contribute from personal

00:14:18,959 --> 00:14:22,160
email addresses

00:14:20,399 --> 00:14:23,600
sometimes multiple personal email

00:14:22,160 --> 00:14:25,600
addresses

00:14:23,600 --> 00:14:27,519
and we work in an industry where job

00:14:25,600 --> 00:14:30,000
changes are pretty frequent

00:14:27,519 --> 00:14:30,880
so you may think you know where someone

00:14:30,000 --> 00:14:32,480
works

00:14:30,880 --> 00:14:33,920
but they might have changed jobs when

00:14:32,480 --> 00:14:35,760
you weren't looking

00:14:33,920 --> 00:14:37,680
and you probably want to continue to

00:14:35,760 --> 00:14:38,639
attribute their past work to their old

00:14:37,680 --> 00:14:40,240
company

00:14:38,639 --> 00:14:42,240
while the new contributions are

00:14:40,240 --> 00:14:44,480
attributed to the new company

00:14:42,240 --> 00:14:46,079
and all of this means that it requires

00:14:44,480 --> 00:14:48,399
quite a bit of work

00:14:46,079 --> 00:14:49,519
often manual work in order to get the

00:14:48,399 --> 00:14:52,560
affiliation data

00:14:49,519 --> 00:14:54,320
into a state where it's actually useful

00:14:52,560 --> 00:14:56,240
it's pretty common to see graphs like

00:14:54,320 --> 00:14:58,399
the one on the slide with almost

00:14:56,240 --> 00:15:00,240
all of the contributions attributed to

00:14:58,399 --> 00:15:03,120
other or unknown

00:15:00,240 --> 00:15:05,120
or none if the data hasn't been properly

00:15:03,120 --> 00:15:06,880
cleaned up

00:15:05,120 --> 00:15:08,399
so this is the long way of saying i

00:15:06,880 --> 00:15:10,959
haven't done this yet for

00:15:08,399 --> 00:15:12,480
for my metrics i'm still working on

00:15:10,959 --> 00:15:13,040
cleaning up the data so that i can

00:15:12,480 --> 00:15:14,639
implement

00:15:13,040 --> 00:15:17,040
organizational diversity in my auger

00:15:14,639 --> 00:15:18,320
based metrics but here's an example from

00:15:17,040 --> 00:15:20,480
the cloud foundry

00:15:18,320 --> 00:15:22,800
irene project since the cloud foundry

00:15:20,480 --> 00:15:24,839
affiliation data is actually pretty good

00:15:22,800 --> 00:15:26,160
and this makes for a fairly simple

00:15:24,839 --> 00:15:28,079
example

00:15:26,160 --> 00:15:29,199
this one in particular looks looks

00:15:28,079 --> 00:15:30,800
pretty good there

00:15:29,199 --> 00:15:32,480
there are two companies who are making a

00:15:30,800 --> 00:15:34,959
lot of the contributions with a couple

00:15:32,480 --> 00:15:36,639
of other companies who are also involved

00:15:34,959 --> 00:15:39,440
uh which is fine given you know that

00:15:36,639 --> 00:15:41,440
this is a relatively small project

00:15:39,440 --> 00:15:43,120
it's a bit more worrying and higher risk

00:15:41,440 --> 00:15:43,759
when almost all of the contributions are

00:15:43,120 --> 00:15:46,000
coming from

00:15:43,759 --> 00:15:48,639
a single company especially if it's a

00:15:46,000 --> 00:15:48,639
small company

00:15:49,600 --> 00:15:53,199
another thing that i look for when

00:15:51,680 --> 00:15:54,800
assessing the risk of open source

00:15:53,199 --> 00:15:57,279
projects is whether they make

00:15:54,800 --> 00:15:59,279
regular releases and quickly patch

00:15:57,279 --> 00:16:01,759
security vulnerabilities

00:15:59,279 --> 00:16:03,600
projects that take a proactive approach

00:16:01,759 --> 00:16:05,040
to addressing security issues and

00:16:03,600 --> 00:16:07,759
releasing fixes

00:16:05,040 --> 00:16:09,279
are much more likely to be secure

00:16:07,759 --> 00:16:10,880
ideally the project should have a

00:16:09,279 --> 00:16:13,120
security.md file

00:16:10,880 --> 00:16:14,160
or another document with details about

00:16:13,120 --> 00:16:16,639
the process

00:16:14,160 --> 00:16:18,560
for rep reporting and responding to

00:16:16,639 --> 00:16:20,079
security concerns

00:16:18,560 --> 00:16:22,480
you can also look at whether they use

00:16:20,079 --> 00:16:24,639
automated tools like dependabot

00:16:22,480 --> 00:16:26,720
for example to help identify when new

00:16:24,639 --> 00:16:28,720
versions of dependencies are available

00:16:26,720 --> 00:16:30,320
which also helps keep on top of

00:16:28,720 --> 00:16:31,360
potential security issues

00:16:30,320 --> 00:16:33,440
and while there are there are no

00:16:31,360 --> 00:16:35,360
guarantees like with anything

00:16:33,440 --> 00:16:37,199
and critical security issues can sort of

00:16:35,360 --> 00:16:39,600
pop up at any time

00:16:37,199 --> 00:16:40,959
these are relatively good indicators

00:16:39,600 --> 00:16:41,680
that the project at least takes a

00:16:40,959 --> 00:16:43,600
proactive

00:16:41,680 --> 00:16:47,120
approach to security which reduces the

00:16:43,600 --> 00:16:49,279
risk of security issues

00:16:47,120 --> 00:16:51,040
for our projects i like to see at least

00:16:49,279 --> 00:16:52,639
one release per month

00:16:51,040 --> 00:16:54,160
more than that for larger projects like

00:16:52,639 --> 00:16:55,839
harvard in this case

00:16:54,160 --> 00:16:57,680
most projects have release schedules

00:16:55,839 --> 00:16:59,440
where they do big releases

00:16:57,680 --> 00:17:00,800
every few months and those are the ones

00:16:59,440 --> 00:17:01,680
that you hear about and everyone talks

00:17:00,800 --> 00:17:03,199
about

00:17:01,680 --> 00:17:05,120
so when i'm talking about measuring

00:17:03,199 --> 00:17:06,079
release frequency i'm not talking about

00:17:05,120 --> 00:17:08,160
those big

00:17:06,079 --> 00:17:10,000
big releases i'm i'm looking at all the

00:17:08,160 --> 00:17:12,959
little point releases

00:17:10,000 --> 00:17:14,799
that happen in between those big

00:17:12,959 --> 00:17:17,199
releases that everyone talks about

00:17:14,799 --> 00:17:18,880
since that's where things like bug fixes

00:17:17,199 --> 00:17:20,400
for security issues often

00:17:18,880 --> 00:17:22,720
realistically that's where they often

00:17:20,400 --> 00:17:23,360
land and like with other measurements

00:17:22,720 --> 00:17:26,720
these are

00:17:23,360 --> 00:17:28,880
again subjective thresholds that i think

00:17:26,720 --> 00:17:31,200
seem to work for most of our projects

00:17:28,880 --> 00:17:32,960
but for some very small projects with

00:17:31,200 --> 00:17:34,480
you know fewer releases might be fine if

00:17:32,960 --> 00:17:36,480
they don't have a lot of dependencies

00:17:34,480 --> 00:17:38,400
and for larger projects with a load of

00:17:36,480 --> 00:17:40,160
dependencies you probably want to see

00:17:38,400 --> 00:17:41,520
more point releases

00:17:40,160 --> 00:17:43,520
and again this all comes down to how

00:17:41,520 --> 00:17:47,120
much risk you want to accept

00:17:43,520 --> 00:17:49,039
as a company and as a project

00:17:47,120 --> 00:17:50,640
diversity and inclusion is also

00:17:49,039 --> 00:17:51,440
something that i look at for project

00:17:50,640 --> 00:17:53,200
health

00:17:51,440 --> 00:17:56,000
now this one this one's a lot harder to

00:17:53,200 --> 00:17:57,840
measure and it usually involves mostly a

00:17:56,000 --> 00:17:59,600
manual assessment

00:17:57,840 --> 00:18:01,200
but we have defined symmetrics within

00:17:59,600 --> 00:18:01,760
the chaos project's diversity and

00:18:01,200 --> 00:18:03,280
inclusion

00:18:01,760 --> 00:18:05,120
working group that you should have a

00:18:03,280 --> 00:18:07,280
look at for ideas about measuring

00:18:05,120 --> 00:18:08,160
various aspects of diversity and

00:18:07,280 --> 00:18:09,440
inclusion

00:18:08,160 --> 00:18:11,600
you know first does the project have a

00:18:09,440 --> 00:18:14,080
code of conduct that contains

00:18:11,600 --> 00:18:15,679
details on how it's enforced and how to

00:18:14,080 --> 00:18:17,679
report incidents

00:18:15,679 --> 00:18:19,039
the code of conduct should also apply to

00:18:17,679 --> 00:18:21,200
all behavior

00:18:19,039 --> 00:18:23,520
across the entire project and not just

00:18:21,200 --> 00:18:25,360
at events

00:18:23,520 --> 00:18:26,960
looking at the project's events though

00:18:25,360 --> 00:18:28,480
can shed quite a bit of light on

00:18:26,960 --> 00:18:30,320
diversity and inclusion

00:18:28,480 --> 00:18:32,240
do they have a diverse set of speakers

00:18:30,320 --> 00:18:34,080
from a variety of genders and from

00:18:32,240 --> 00:18:36,720
underrepresented folks

00:18:34,080 --> 00:18:37,840
and if so are diverse voices represented

00:18:36,720 --> 00:18:40,880
in the keynotes

00:18:37,840 --> 00:18:42,000
and across a variety of tracks for

00:18:40,880 --> 00:18:43,919
example if

00:18:42,000 --> 00:18:45,360
all of your diverse speakers are in some

00:18:43,919 --> 00:18:47,200
kind of dni track

00:18:45,360 --> 00:18:49,440
um i wouldn't necessarily call that a

00:18:47,200 --> 00:18:50,799
win right for your project

00:18:49,440 --> 00:18:52,720
i also look at whether they have things

00:18:50,799 --> 00:18:54,240
like diversity access tickets

00:18:52,720 --> 00:18:56,160
to allow more people to attend do they

00:18:54,240 --> 00:18:57,280
have gender neutral restrooms if it's an

00:18:56,160 --> 00:18:59,760
in-person event

00:18:57,280 --> 00:19:01,840
and is it a family-friendly environment

00:18:59,760 --> 00:19:03,360
with you know child care for attendees

00:19:01,840 --> 00:19:06,400
so that more people can actually be

00:19:03,360 --> 00:19:08,240
included and attend the event

00:19:06,400 --> 00:19:10,559
i also look at does the project have

00:19:08,240 --> 00:19:13,840
diverse leadership from the very

00:19:10,559 --> 00:19:16,720
top are there mentoring programs

00:19:13,840 --> 00:19:17,280
and other ways for diverse folks to move

00:19:16,720 --> 00:19:20,000
into

00:19:17,280 --> 00:19:20,960
those leadership positions projects that

00:19:20,000 --> 00:19:23,360
make a concerted

00:19:20,960 --> 00:19:24,799
effort to bring in new people from a

00:19:23,360 --> 00:19:26,720
variety of backgrounds

00:19:24,799 --> 00:19:28,720
and have programs in place to help them

00:19:26,720 --> 00:19:30,720
grow into leadership positions

00:19:28,720 --> 00:19:32,000
there are more likely to benefit from

00:19:30,720 --> 00:19:33,600
increased innovation

00:19:32,000 --> 00:19:35,679
and are more likely to have a healthier

00:19:33,600 --> 00:19:38,000
community and all of these things make

00:19:35,679 --> 00:19:40,480
the project less risky

00:19:38,000 --> 00:19:42,400
so let's let's pause here for just a sec

00:19:40,480 --> 00:19:44,240
to see if anyone has any questions about

00:19:42,400 --> 00:19:46,000
project health and risk

00:19:44,240 --> 00:19:48,559
before we dive into the topic of

00:19:46,000 --> 00:19:48,559
ownership

00:19:49,360 --> 00:19:54,640
i don't see any questions in the q a

00:19:59,919 --> 00:20:07,120
all right hi don i see one from melissa

00:20:03,840 --> 00:20:11,280
on the chat

00:20:07,120 --> 00:20:14,880
so should i read it out yes please

00:20:11,280 --> 00:20:19,039
okay so she's curious how would you

00:20:14,880 --> 00:20:21,840
evaluate non-foundation backed projects

00:20:19,039 --> 00:20:23,679
um example frameworks and languages in

00:20:21,840 --> 00:20:27,280
terms of velocity

00:20:23,679 --> 00:20:30,480
since most of them do not have

00:20:27,280 --> 00:20:35,840
oh i actually went off

00:20:30,480 --> 00:20:35,840
sorry let me just get that again

00:20:37,840 --> 00:20:41,600
okay since okay so let me take it again

00:20:40,240 --> 00:20:44,960
so she's curious

00:20:41,600 --> 00:20:45,520
how do you evaluate non foundation box

00:20:44,960 --> 00:20:48,080
project

00:20:45,520 --> 00:20:49,760
example with frameworks and languages in

00:20:48,080 --> 00:20:51,919
terms of velocity

00:20:49,760 --> 00:20:53,760
since most of them do not have full-time

00:20:51,919 --> 00:20:55,919
maintainers i suspect

00:20:53,760 --> 00:20:56,960
their velocity wouldn't meet the

00:20:55,919 --> 00:21:00,000
thresholds but

00:20:56,960 --> 00:21:00,400
are critical for app development you got

00:21:00,000 --> 00:21:03,280
that

00:21:00,400 --> 00:21:04,960
yeah thank you ruth uh melissa yeah

00:21:03,280 --> 00:21:07,760
that's a that's a great question

00:21:04,960 --> 00:21:09,039
um and i do certainly think so so the

00:21:07,760 --> 00:21:11,600
thresholds that i've set

00:21:09,039 --> 00:21:12,640
seem to be working for most of the

00:21:11,600 --> 00:21:15,840
vmware

00:21:12,640 --> 00:21:17,440
projects that have um that have a

00:21:15,840 --> 00:21:18,960
certain amount of velocity so these

00:21:17,440 --> 00:21:22,159
these thresholds actually don't

00:21:18,960 --> 00:21:24,000
don't work uh for smaller projects

00:21:22,159 --> 00:21:26,080
which is i think what you're what you're

00:21:24,000 --> 00:21:28,159
pointing out and that's absolutely true

00:21:26,080 --> 00:21:29,440
so i actually only run these metrics on

00:21:28,159 --> 00:21:32,320
projects that have at least

00:21:29,440 --> 00:21:34,640
60 commits over the past six months so

00:21:32,320 --> 00:21:37,440
at least 10 commits per month

00:21:34,640 --> 00:21:38,159
so it catches relatively small projects

00:21:37,440 --> 00:21:41,520
but i do

00:21:38,159 --> 00:21:43,440
think that for for some projects these

00:21:41,520 --> 00:21:44,640
these measurements probably probably

00:21:43,440 --> 00:21:47,120
just aren't appropriate

00:21:44,640 --> 00:21:48,480
um and so i think one of the things that

00:21:47,120 --> 00:21:51,360
i would look at

00:21:48,480 --> 00:21:52,320
especially for um for smaller projects

00:21:51,360 --> 00:21:54,880
that maybe

00:21:52,320 --> 00:21:56,480
you know don't get as much activity but

00:21:54,880 --> 00:21:58,640
that are really important

00:21:56,480 --> 00:21:59,840
you know i think you can still look at

00:21:58,640 --> 00:22:01,600
their velocity

00:21:59,840 --> 00:22:02,960
but i think that there are probably

00:22:01,600 --> 00:22:04,320
other things that are going to be more

00:22:02,960 --> 00:22:05,840
important so i would

00:22:04,320 --> 00:22:09,039
i would look at the things that that

00:22:05,840 --> 00:22:12,080
matter to you and knowing that

00:22:09,039 --> 00:22:13,679
the thing about metrics is that uh

00:22:12,080 --> 00:22:15,679
you measure different things depending

00:22:13,679 --> 00:22:17,120
on what your goals are so for something

00:22:15,679 --> 00:22:18,799
like this that's more of a

00:22:17,120 --> 00:22:20,159
more of a framework or a language the

00:22:18,799 --> 00:22:21,440
the goals are going to be different so

00:22:20,159 --> 00:22:23,679
you probably want to measure different

00:22:21,440 --> 00:22:23,679
things

00:22:25,520 --> 00:22:30,080
okay i am going to i'm going to keep

00:22:28,320 --> 00:22:33,280
going

00:22:30,080 --> 00:22:36,480
uh let's see if i can get rid of the

00:22:33,280 --> 00:22:39,280
you might want it i see one more but

00:22:36,480 --> 00:22:41,200
you can keep going oh no go ahead i i

00:22:39,280 --> 00:22:44,720
don't sorry i just didn't see it

00:22:41,200 --> 00:22:45,840
okay so it's from arie said if a project

00:22:44,720 --> 00:22:48,640
doesn't meet your

00:22:45,840 --> 00:22:50,960
diversity and inclusion requirements for

00:22:48,640 --> 00:22:52,480
example not having a code of conduct

00:22:50,960 --> 00:22:57,200
is this something you bring up to

00:22:52,480 --> 00:22:57,200
maintain us and encourage them to fix

00:22:58,400 --> 00:23:04,640
um yes in particular

00:23:01,919 --> 00:23:06,320
the area of code of conduct and i can't

00:23:04,640 --> 00:23:08,400
remember if i'm going to talk about that

00:23:06,320 --> 00:23:09,600
later i think i might but the two things

00:23:08,400 --> 00:23:11,600
that i would say are

00:23:09,600 --> 00:23:13,360
absolutely critical is the project has

00:23:11,600 --> 00:23:15,360
to have a code of conduct and it should

00:23:13,360 --> 00:23:17,039
be properly licensed under an open

00:23:15,360 --> 00:23:18,799
source license if you're going to

00:23:17,039 --> 00:23:20,799
contribute to an open source project it

00:23:18,799 --> 00:23:23,039
should be properly licensed

00:23:20,799 --> 00:23:24,960
those are also things that if if the

00:23:23,039 --> 00:23:25,760
project is amenable to it you can help

00:23:24,960 --> 00:23:27,600
them

00:23:25,760 --> 00:23:29,120
um fix this right so if they don't have

00:23:27,600 --> 00:23:30,400
a code of conduct you can help them put

00:23:29,120 --> 00:23:32,240
one in place

00:23:30,400 --> 00:23:34,159
and i think that that's that's perfectly

00:23:32,240 --> 00:23:35,520
reasonable um if they really don't want

00:23:34,159 --> 00:23:36,799
a code of conduct and they're super

00:23:35,520 --> 00:23:38,400
hostile to that discussion

00:23:36,799 --> 00:23:40,159
i would i would probably run away from

00:23:38,400 --> 00:23:44,159
that project unless there was

00:23:40,159 --> 00:23:44,640
um i would probably run away from that

00:23:44,159 --> 00:23:46,080
project

00:23:44,640 --> 00:23:48,400
uh you know it's it's a matter of

00:23:46,080 --> 00:23:51,840
business risk but but projects like that

00:23:48,400 --> 00:23:51,840
are pretty difficult

00:23:52,880 --> 00:23:56,960
okay so now i will keep going

00:23:57,200 --> 00:24:03,760
um i can't see

00:24:00,400 --> 00:24:05,440
all right you can see the slide right

00:24:03,760 --> 00:24:07,279
because my slide is overlaid with the q

00:24:05,440 --> 00:24:07,919
a but i think you you can probably see

00:24:07,279 --> 00:24:11,200
it

00:24:07,919 --> 00:24:12,640
yeah okay perfect

00:24:11,200 --> 00:24:14,480
so before we dive into some of the

00:24:12,640 --> 00:24:15,679
details of project governance i wanted

00:24:14,480 --> 00:24:18,320
to talk about why

00:24:15,679 --> 00:24:20,559
it's important to think about who owns

00:24:18,320 --> 00:24:22,720
or controls an open source project

00:24:20,559 --> 00:24:24,000
and how that relates to risk because

00:24:22,720 --> 00:24:25,600
it's something that many of us

00:24:24,000 --> 00:24:32,720
i think don't spend as much time

00:24:25,600 --> 00:24:35,279
thinking about as we probably should

00:24:32,720 --> 00:24:35,919
with the recent announcement of the open

00:24:35,279 --> 00:24:38,080
usage

00:24:35,919 --> 00:24:39,919
commons foundation i've been thinking a

00:24:38,080 --> 00:24:40,320
lot about what it means for a foundation

00:24:39,919 --> 00:24:43,600
to be

00:24:40,320 --> 00:24:45,440
neutral and why foundations can be

00:24:43,600 --> 00:24:47,200
important for collaborative leadership

00:24:45,440 --> 00:24:49,679
within open source projects

00:24:47,200 --> 00:24:50,480
the success of kubernetes can be

00:24:49,679 --> 00:24:53,039
attributed

00:24:50,480 --> 00:24:53,679
in part to being contributed to the

00:24:53,039 --> 00:24:55,279
cloud

00:24:53,679 --> 00:24:58,720
cloud native computing foundation the

00:24:55,279 --> 00:25:01,279
cncf putting kubernetes into a neutral

00:24:58,720 --> 00:25:03,039
foundation with representation from a

00:25:01,279 --> 00:25:05,039
bunch of different companies

00:25:03,039 --> 00:25:06,799
really leveled the playing field where

00:25:05,039 --> 00:25:09,600
each of us could collaborate

00:25:06,799 --> 00:25:11,039
and innovate as equals to create

00:25:09,600 --> 00:25:12,880
something that benefits the entire

00:25:11,039 --> 00:25:14,960
ecosystem

00:25:12,880 --> 00:25:16,480
our end users get access to more

00:25:14,960 --> 00:25:17,279
innovation from a diverse group of

00:25:16,480 --> 00:25:19,679
contributors

00:25:17,279 --> 00:25:22,320
while also reducing vendor lock-in for

00:25:19,679 --> 00:25:24,559
example users of kubernetes can consume

00:25:22,320 --> 00:25:25,760
enterprise versions from a wide variety

00:25:24,559 --> 00:25:27,520
of different vendors

00:25:25,760 --> 00:25:30,320
that run on any of the leading cloud

00:25:27,520 --> 00:25:32,240
providers and as software vendors we can

00:25:30,320 --> 00:25:34,080
contribute to foundation driven projects

00:25:32,240 --> 00:25:36,400
with the confidence that no

00:25:34,080 --> 00:25:37,120
one single company is in control of the

00:25:36,400 --> 00:25:39,200
project

00:25:37,120 --> 00:25:43,279
and that we can contribute as equals

00:25:39,200 --> 00:25:45,919
within the community

00:25:43,279 --> 00:25:47,679
open source projects that are controlled

00:25:45,919 --> 00:25:50,960
by a single company

00:25:47,679 --> 00:25:53,440
are higher risk because they operate at

00:25:50,960 --> 00:25:55,039
the whims of that company

00:25:53,440 --> 00:25:57,520
whereas projects that are under neutral

00:25:55,039 --> 00:25:59,679
foundations have a much lower risk both

00:25:57,520 --> 00:26:02,320
for end users and for software about

00:25:59,679 --> 00:26:03,600
software vendors when a project is owned

00:26:02,320 --> 00:26:05,679
by a company

00:26:03,600 --> 00:26:07,600
there's little recourse for outside

00:26:05,679 --> 00:26:09,440
contributors when that company decides

00:26:07,600 --> 00:26:12,080
to go in a different direction that

00:26:09,440 --> 00:26:14,159
doesn't necessarily align with the needs

00:26:12,080 --> 00:26:15,840
or the expectations of those other

00:26:14,159 --> 00:26:17,520
participants

00:26:15,840 --> 00:26:19,679
when a project is owned or controlled by

00:26:17,520 --> 00:26:21,440
a company consider the reputation of

00:26:19,679 --> 00:26:24,640
that company as a steward

00:26:21,440 --> 00:26:26,559
for open source projects but

00:26:24,640 --> 00:26:28,640
always keep in mind that they can change

00:26:26,559 --> 00:26:30,640
their strategy at some later date

00:26:28,640 --> 00:26:32,240
uh frankly we've seen some of this with

00:26:30,640 --> 00:26:35,279
google around the istio and k

00:26:32,240 --> 00:26:37,440
native projects over the past year or so

00:26:35,279 --> 00:26:39,279
and i'm not saying that we shouldn't

00:26:37,440 --> 00:26:40,880
participate in open source projects

00:26:39,279 --> 00:26:42,799
owned by other companies

00:26:40,880 --> 00:26:44,960
this is just an assessment of risk and

00:26:42,799 --> 00:26:48,240
in some cases it makes a lot of

00:26:44,960 --> 00:26:50,559
sense to accept this higher risk but

00:26:48,240 --> 00:26:51,440
we should at least try to make sure that

00:26:50,559 --> 00:26:53,039
as a company

00:26:51,440 --> 00:26:55,360
we understand the risks that we're

00:26:53,039 --> 00:26:55,360
taking

00:26:56,080 --> 00:27:00,080
at vmware we believe that contributing

00:26:58,559 --> 00:27:01,840
open source projects to neutral

00:27:00,080 --> 00:27:03,919
foundations is important

00:27:01,840 --> 00:27:06,159
and it's something that we do regularly

00:27:03,919 --> 00:27:08,240
for projects that have started

00:27:06,159 --> 00:27:10,240
once they gain a bit of traction with

00:27:08,240 --> 00:27:12,320
people outside of the company

00:27:10,240 --> 00:27:14,080
for example we contributed harbor and

00:27:12,320 --> 00:27:16,320
contour to the cncf

00:27:14,080 --> 00:27:18,080
we contributed turn to the linux

00:27:16,320 --> 00:27:20,880
foundation's automated compliance

00:27:18,080 --> 00:27:22,559
tooling project we've also contributed

00:27:20,880 --> 00:27:23,360
projects to the apache software

00:27:22,559 --> 00:27:25,120
foundation

00:27:23,360 --> 00:27:26,720
and other foundations and by

00:27:25,120 --> 00:27:27,760
contributing projects to neutral

00:27:26,720 --> 00:27:30,159
foundations

00:27:27,760 --> 00:27:31,200
this reduces the risks associated with

00:27:30,159 --> 00:27:32,399
the project

00:27:31,200 --> 00:27:34,720
for other companies who want to

00:27:32,399 --> 00:27:36,559
contribute to that project

00:27:34,720 --> 00:27:39,520
with advantages around community

00:27:36,559 --> 00:27:41,279
building innovation and wider adoption

00:27:39,520 --> 00:27:44,720
it's something that we should at least

00:27:41,279 --> 00:27:47,039
consider for our open source projects

00:27:44,720 --> 00:27:48,080
it's also important to think about when

00:27:47,039 --> 00:27:49,679
your project

00:27:48,080 --> 00:27:51,679
might be ready to contribute to a

00:27:49,679 --> 00:27:52,880
neutral foundation if your project is

00:27:51,679 --> 00:27:54,720
very immature

00:27:52,880 --> 00:27:56,480
foundations are unlikely to be

00:27:54,720 --> 00:27:58,399
interested in your project

00:27:56,480 --> 00:28:00,240
whereas a project with a whole bunch of

00:27:58,399 --> 00:28:02,240
users that has really good traction

00:28:00,240 --> 00:28:03,840
within the ecosystem that just maybe

00:28:02,240 --> 00:28:06,159
needs some help moving up to the next

00:28:03,840 --> 00:28:08,399
level is a lot more likely to be

00:28:06,159 --> 00:28:11,440
accepted

00:28:08,399 --> 00:28:13,440
however companies should understand that

00:28:11,440 --> 00:28:13,919
contributing a project to a foundation

00:28:13,440 --> 00:28:17,200
is an

00:28:13,919 --> 00:28:18,240
ongoing commitment it is not an exit

00:28:17,200 --> 00:28:20,240
strategy

00:28:18,240 --> 00:28:22,000
and you need to be prepared to provide

00:28:20,240 --> 00:28:24,320
staff and other support

00:28:22,000 --> 00:28:25,039
over the long term just like you would

00:28:24,320 --> 00:28:27,120
if you weren't

00:28:25,039 --> 00:28:28,840
contributing it to a foundation and

00:28:27,120 --> 00:28:30,480
we're going to continue to maintain it

00:28:28,840 --> 00:28:32,320
internally

00:28:30,480 --> 00:28:33,760
now again i'll stop for a pause to see

00:28:32,320 --> 00:28:34,480
if there are any more questions about

00:28:33,760 --> 00:28:36,960
ownership

00:28:34,480 --> 00:28:39,520
before i dive into the topic of

00:28:36,960 --> 00:28:39,520
governance

00:28:41,279 --> 00:28:45,600
do we have any let's see i don't see

00:28:43,760 --> 00:28:51,039
anything in the q a

00:28:45,600 --> 00:28:51,039
box that hasn't been answered

00:28:51,760 --> 00:28:58,640
is there anything in the chat

00:28:55,039 --> 00:29:01,039
no there's none yet okay i will just

00:28:58,640 --> 00:29:03,440
keep i'll keep going

00:29:01,039 --> 00:29:03,440
okay

00:29:04,559 --> 00:29:10,320
so we've been doing quite a bit of work

00:29:07,679 --> 00:29:12,399
within the cncf contributor strategy sig

00:29:10,320 --> 00:29:14,000
in the governance working group

00:29:12,399 --> 00:29:16,240
to help document governance best

00:29:14,000 --> 00:29:18,000
practices and this section contains a

00:29:16,240 --> 00:29:18,799
lot of ideas and inspiration and

00:29:18,000 --> 00:29:20,640
materials

00:29:18,799 --> 00:29:23,039
that i've been working on along with

00:29:20,640 --> 00:29:24,880
people like josh burkis for example

00:29:23,039 --> 00:29:26,480
within the governance working group

00:29:24,880 --> 00:29:30,559
along with some thoughts on how

00:29:26,480 --> 00:29:30,559
all of this impacts project risk

00:29:30,799 --> 00:29:33,919
now a lot of people like to hate on

00:29:33,120 --> 00:29:36,880
governance

00:29:33,919 --> 00:29:37,360
it's just extra paperwork it's busy work

00:29:36,880 --> 00:29:39,440
it's

00:29:37,360 --> 00:29:40,960
politicking it just gets in the way of

00:29:39,440 --> 00:29:44,000
doing all of the real

00:29:40,960 --> 00:29:44,960
work on the project now the reality is

00:29:44,000 --> 00:29:47,840
that governance

00:29:44,960 --> 00:29:49,279
can be found in all open source projects

00:29:47,840 --> 00:29:51,919
in one form or another

00:29:49,279 --> 00:29:54,720
to specify the processes for how people

00:29:51,919 --> 00:29:56,960
work together within the project

00:29:54,720 --> 00:29:58,799
ideally it'll be clearly documented but

00:29:56,960 --> 00:30:00,799
for some projects especially

00:29:58,799 --> 00:30:03,120
smaller ones it might be a bit more ad

00:30:00,799 --> 00:30:04,520
hoc and informal

00:30:03,120 --> 00:30:06,880
governance helps outline the

00:30:04,520 --> 00:30:09,120
expectations around roles

00:30:06,880 --> 00:30:11,039
and responsibilities along with the

00:30:09,120 --> 00:30:13,679
decision-making processes

00:30:11,039 --> 00:30:15,200
so it's important for projects to have

00:30:13,679 --> 00:30:18,080
at least the basics

00:30:15,200 --> 00:30:19,360
in place early since it's one of those

00:30:18,080 --> 00:30:22,799
things that projects

00:30:19,360 --> 00:30:24,000
may think they don't need until they

00:30:22,799 --> 00:30:27,200
realize that they really

00:30:24,000 --> 00:30:29,279
do need it when something goes wrong

00:30:27,200 --> 00:30:31,679
it's usually easier when projects set

00:30:29,279 --> 00:30:34,480
clear expectations upfront

00:30:31,679 --> 00:30:34,960
rather than realizing later that various

00:30:34,480 --> 00:30:37,760
people

00:30:34,960 --> 00:30:40,399
have very different expectations which

00:30:37,760 --> 00:30:41,919
can require a lot of time to sort out

00:30:40,399 --> 00:30:43,600
this doesn't mean that everything should

00:30:41,919 --> 00:30:46,320
be specified up front

00:30:43,600 --> 00:30:46,799
and i would discourage projects from

00:30:46,320 --> 00:30:48,960
over

00:30:46,799 --> 00:30:50,399
engineering their governance processes

00:30:48,960 --> 00:30:53,360
before they need them

00:30:50,399 --> 00:30:53,760
a project with only a few people won't

00:30:53,360 --> 00:30:56,399
need

00:30:53,760 --> 00:30:57,919
elaborate elections to select leaders

00:30:56,399 --> 00:30:58,880
but they should probably define a few

00:30:57,919 --> 00:31:01,360
basic roles

00:30:58,880 --> 00:31:03,279
like maintainer to find the process for

00:31:01,360 --> 00:31:05,440
contributing to the project and maybe

00:31:03,279 --> 00:31:07,279
outline how decisions about those

00:31:05,440 --> 00:31:09,200
contributions are made

00:31:07,279 --> 00:31:10,799
if the process for collaboration and

00:31:09,200 --> 00:31:12,480
decision making are not clearly

00:31:10,799 --> 00:31:13,440
documented as a part of the project

00:31:12,480 --> 00:31:15,360
governance

00:31:13,440 --> 00:31:16,480
this can increase the risk of

00:31:15,360 --> 00:31:18,240
participating in

00:31:16,480 --> 00:31:20,159
or using the project because it

00:31:18,240 --> 00:31:21,279
introduces a lot of uncertainty into the

00:31:20,159 --> 00:31:23,279
mix

00:31:21,279 --> 00:31:24,320
knowing how collaboration occurs and how

00:31:23,279 --> 00:31:26,799
decisions are made

00:31:24,320 --> 00:31:28,559
is vital to being able to make

00:31:26,799 --> 00:31:30,960
contributions that are more likely to be

00:31:28,559 --> 00:31:30,960
accepted

00:31:31,440 --> 00:31:34,480
um yeah this is where i was going to

00:31:32,799 --> 00:31:35,120
talk about the licensing and the code of

00:31:34,480 --> 00:31:37,679
conduct

00:31:35,120 --> 00:31:38,320
um there are a few documents that every

00:31:37,679 --> 00:31:41,360
project

00:31:38,320 --> 00:31:43,120
even the really small ones should have

00:31:41,360 --> 00:31:45,279
it goes without saying but they need

00:31:43,120 --> 00:31:47,200
appropriate licensing documentation

00:31:45,279 --> 00:31:48,960
i occasionally find repos with missing

00:31:47,200 --> 00:31:51,279
license files entirely

00:31:48,960 --> 00:31:53,440
but that's probably less common more

00:31:51,279 --> 00:31:54,320
often i see licenses not applied

00:31:53,440 --> 00:31:56,880
correctly

00:31:54,320 --> 00:31:59,200
within the projects so in addition to

00:31:56,880 --> 00:32:00,080
putting a license file in the repository

00:31:59,200 --> 00:32:02,480
some licenses

00:32:00,080 --> 00:32:05,440
require things like a notices file or

00:32:02,480 --> 00:32:07,200
license headers within each source file

00:32:05,440 --> 00:32:09,120
project should also as i mentioned

00:32:07,200 --> 00:32:11,600
earlier have a code of contact

00:32:09,120 --> 00:32:13,200
that people can easily find with all of

00:32:11,600 --> 00:32:14,320
the details about how to report

00:32:13,200 --> 00:32:16,559
incidents

00:32:14,320 --> 00:32:17,919
along with the consequences of violating

00:32:16,559 --> 00:32:20,080
that code of conduct

00:32:17,919 --> 00:32:21,360
and as i mentioned earlier if a project

00:32:20,080 --> 00:32:23,440
is missing

00:32:21,360 --> 00:32:25,120
either one of these i would argue that

00:32:23,440 --> 00:32:27,279
the participating in that project

00:32:25,120 --> 00:32:28,960
really does pose more risk than i would

00:32:27,279 --> 00:32:30,000
be willing to accept both from a legal

00:32:28,960 --> 00:32:31,840
standpoint

00:32:30,000 --> 00:32:33,440
and just from the need to have a safe

00:32:31,840 --> 00:32:35,120
environment for our employees to

00:32:33,440 --> 00:32:36,559
participate in

00:32:35,120 --> 00:32:38,559
and as i mentioned earlier you can

00:32:36,559 --> 00:32:40,000
probably help the project resolve some

00:32:38,559 --> 00:32:43,840
of these issues and eliminate these

00:32:40,000 --> 00:32:43,840
risks assuming that they're open to that

00:32:44,000 --> 00:32:47,919
the contribution docs should provide

00:32:46,000 --> 00:32:50,240
enough details about the contribution

00:32:47,919 --> 00:32:51,679
process so that someone new to the

00:32:50,240 --> 00:32:52,960
project can make their first

00:32:51,679 --> 00:32:54,880
contribution

00:32:52,960 --> 00:32:57,360
this includes details about how to sign

00:32:54,880 --> 00:32:59,440
the contributor license agreement or cla

00:32:57,360 --> 00:33:01,279
if there is one or how to use the

00:32:59,440 --> 00:33:03,600
developer certificate of origin

00:33:01,279 --> 00:33:05,919
or it's often called a dco or a signed

00:33:03,600 --> 00:33:07,679
off by process

00:33:05,919 --> 00:33:09,519
if there are strong preferences within

00:33:07,679 --> 00:33:11,679
the project about coding style

00:33:09,519 --> 00:33:13,600
testing documentation or other

00:33:11,679 --> 00:33:16,880
requirements

00:33:13,600 --> 00:33:20,240
this is a good opportunity to

00:33:16,880 --> 00:33:22,320
specify those here and make sure that

00:33:20,240 --> 00:33:24,080
contributors know them up front

00:33:22,320 --> 00:33:26,080
which helps reduce the burden of trying

00:33:24,080 --> 00:33:27,679
to educate each individual contributor

00:33:26,080 --> 00:33:29,440
about the requirements

00:33:27,679 --> 00:33:31,200
while you're trying to also refute their

00:33:29,440 --> 00:33:33,360
contributions for you know other things

00:33:31,200 --> 00:33:35,519
like technical merit for example

00:33:33,360 --> 00:33:37,279
and the better this is documented the

00:33:35,519 --> 00:33:38,799
lower the risk will be

00:33:37,279 --> 00:33:40,720
since your contributors will know what

00:33:38,799 --> 00:33:41,279
to expect and how to navigate the

00:33:40,720 --> 00:33:44,000
project

00:33:41,279 --> 00:33:45,600
when making contributions the

00:33:44,000 --> 00:33:47,440
communication process

00:33:45,600 --> 00:33:48,799
should also be clearly defined so that

00:33:47,440 --> 00:33:50,880
people know where

00:33:48,799 --> 00:33:52,240
and how to communicate within the

00:33:50,880 --> 00:33:54,240
project

00:33:52,240 --> 00:33:56,640
maybe the project prefers mailing list

00:33:54,240 --> 00:33:59,279
discussions or slack messages

00:33:56,640 --> 00:34:00,640
or issues for feature requests and maybe

00:33:59,279 --> 00:34:01,279
there are separate communication

00:34:00,640 --> 00:34:04,080
channels

00:34:01,279 --> 00:34:05,440
for users that are separate from the

00:34:04,080 --> 00:34:07,200
developers

00:34:05,440 --> 00:34:08,879
and if everyone understands how people

00:34:07,200 --> 00:34:09,919
within the project communicate with each

00:34:08,879 --> 00:34:12,879
other it avoids

00:34:09,919 --> 00:34:15,040
frustrating experiences both for new and

00:34:12,879 --> 00:34:16,879
for the existing contributors

00:34:15,040 --> 00:34:19,040
and again the better this is documented

00:34:16,879 --> 00:34:20,079
the lower the risk since communication

00:34:19,040 --> 00:34:22,320
is an important part

00:34:20,079 --> 00:34:24,639
of participating in any open source

00:34:22,320 --> 00:34:24,639
project

00:34:25,440 --> 00:34:29,599
at a minimum there should be some kind

00:34:27,280 --> 00:34:32,879
of documentation about leadership

00:34:29,599 --> 00:34:34,399
for small projects maybe it's maybe you

00:34:32,879 --> 00:34:35,520
just need a list of maintainers and a

00:34:34,399 --> 00:34:38,240
readme file

00:34:35,520 --> 00:34:38,879
or maybe owners or maintainers file that

00:34:38,240 --> 00:34:41,119
indicate

00:34:38,879 --> 00:34:43,599
which people are responsible for various

00:34:41,119 --> 00:34:46,159
areas within the project

00:34:43,599 --> 00:34:46,960
defining the roles and responsibilities

00:34:46,159 --> 00:34:50,320
for

00:34:46,960 --> 00:34:52,879
contributors can

00:34:50,320 --> 00:34:53,599
you really it can really help you

00:34:52,879 --> 00:34:56,960
because

00:34:53,599 --> 00:34:57,440
um you'll eventually need to recruit new

00:34:56,960 --> 00:34:59,200
people

00:34:57,440 --> 00:35:01,599
into these roles and if you at least

00:34:59,200 --> 00:35:03,680
define like contributors maintainers

00:35:01,599 --> 00:35:05,200
reviewers that that might be enough as a

00:35:03,680 --> 00:35:06,320
first step if you're just working on a

00:35:05,200 --> 00:35:08,800
small project

00:35:06,320 --> 00:35:09,839
but for bigger projects you'll want to

00:35:08,800 --> 00:35:12,480
see more

00:35:09,839 --> 00:35:14,079
details about the specific roles and

00:35:12,480 --> 00:35:15,680
responsibilities for the different

00:35:14,079 --> 00:35:18,320
leadership positions

00:35:15,680 --> 00:35:20,400
along with how others can move into

00:35:18,320 --> 00:35:22,880
those leadership roles there might be

00:35:20,400 --> 00:35:24,560
committees working groups or other

00:35:22,880 --> 00:35:26,880
groups that will need leaders

00:35:24,560 --> 00:35:29,040
and again having this documented can

00:35:26,880 --> 00:35:31,040
really help the project recruit new

00:35:29,040 --> 00:35:32,480
leaders as it grows

00:35:31,040 --> 00:35:34,640
and needs more people to share the

00:35:32,480 --> 00:35:36,960
workload

00:35:34,640 --> 00:35:38,160
ideally having programs that give people

00:35:36,960 --> 00:35:41,599
opportunities for

00:35:38,160 --> 00:35:43,200
shadowing mentoring and sponsoring new

00:35:41,599 --> 00:35:45,839
potential leaders

00:35:43,200 --> 00:35:47,520
can help grow a diverse set of people

00:35:45,839 --> 00:35:50,640
into new leadership

00:35:47,520 --> 00:35:52,320
within the project if your company is an

00:35:50,640 --> 00:35:54,160
active participant in a project

00:35:52,320 --> 00:35:55,680
you'll want to understand how your

00:35:54,160 --> 00:35:58,720
contributors can move

00:35:55,680 --> 00:36:00,000
into leadership roles having employees

00:35:58,720 --> 00:36:02,320
in leadership roles

00:36:00,000 --> 00:36:04,000
helps reduce your risk as a company

00:36:02,320 --> 00:36:05,280
since these employees will be in a

00:36:04,000 --> 00:36:08,400
position to understand

00:36:05,280 --> 00:36:09,680
more about how the project works and

00:36:08,400 --> 00:36:13,200
they can help mentor

00:36:09,680 --> 00:36:15,200
other employees into the project

00:36:13,200 --> 00:36:17,119
there are quite a few options for

00:36:15,200 --> 00:36:18,480
selecting leaders as a part of defining

00:36:17,119 --> 00:36:20,079
governance

00:36:18,480 --> 00:36:21,920
and the ideal is to have a process that

00:36:20,079 --> 00:36:24,800
provides a fair and level

00:36:21,920 --> 00:36:25,599
playing field that defines how new

00:36:24,800 --> 00:36:27,200
contributors

00:36:25,599 --> 00:36:30,079
can eventually move up and become

00:36:27,200 --> 00:36:32,000
leaders it should be documented so that

00:36:30,079 --> 00:36:33,119
all participants can clearly understand

00:36:32,000 --> 00:36:36,000
the criteria

00:36:33,119 --> 00:36:36,640
and the process for moving both into and

00:36:36,000 --> 00:36:40,000
then again

00:36:36,640 --> 00:36:41,359
out of leadership positions

00:36:40,000 --> 00:36:43,920
most of the bigger projects like

00:36:41,359 --> 00:36:45,359
kubernetes have an election process

00:36:43,920 --> 00:36:48,160
at least for the top levels of

00:36:45,359 --> 00:36:50,400
leadership like a steering committee

00:36:48,160 --> 00:36:52,000
at the lower levels of leadership many

00:36:50,400 --> 00:36:55,040
projects have a process where

00:36:52,000 --> 00:36:57,119
existing leaders select the new ones

00:36:55,040 --> 00:36:59,119
for example new maintainers are often

00:36:57,119 --> 00:37:00,640
nominated by existing maintainers and

00:36:59,119 --> 00:37:02,000
approved after a certain number of

00:37:00,640 --> 00:37:04,160
maintainers agree

00:37:02,000 --> 00:37:06,000
or sometimes via a vote by maintainers

00:37:04,160 --> 00:37:08,079
or committee members so

00:37:06,000 --> 00:37:09,599
there are loads of options for deciding

00:37:08,079 --> 00:37:10,320
this so i won't try to cover all of them

00:37:09,599 --> 00:37:12,800
here

00:37:10,320 --> 00:37:13,359
but the slide has a link with more

00:37:12,800 --> 00:37:17,200
details

00:37:13,359 --> 00:37:19,599
about how to select leaders the key

00:37:17,200 --> 00:37:20,560
is having a fair process for selecting

00:37:19,599 --> 00:37:22,720
leaders

00:37:20,560 --> 00:37:24,800
like elections for example and it

00:37:22,720 --> 00:37:26,560
reduces your risk of participating since

00:37:24,800 --> 00:37:28,160
your contributors can participate in the

00:37:26,560 --> 00:37:30,000
elections they can have a say in the

00:37:28,160 --> 00:37:31,920
governance of the project

00:37:30,000 --> 00:37:34,000
higher risk options would include

00:37:31,920 --> 00:37:35,920
organizational leadership seats

00:37:34,000 --> 00:37:37,839
where a certain number of positions are

00:37:35,920 --> 00:37:39,520
allocated to specific companies where

00:37:37,839 --> 00:37:42,480
those companies get to decide

00:37:39,520 --> 00:37:44,480
who their leadership positions which

00:37:42,480 --> 00:37:47,200
employees get those leadership positions

00:37:44,480 --> 00:37:48,640
and there's no easy way for new leaders

00:37:47,200 --> 00:37:49,359
who work outside of those companies to

00:37:48,640 --> 00:37:51,839
move into

00:37:49,359 --> 00:37:51,839
those positions

00:37:53,119 --> 00:37:57,520
most business decisions boil down to an

00:37:56,000 --> 00:38:00,079
assessment of risk

00:37:57,520 --> 00:38:02,079
and making trade-offs and decisions

00:38:00,079 --> 00:38:03,200
about which open source projects you

00:38:02,079 --> 00:38:05,440
should use

00:38:03,200 --> 00:38:06,240
or participate in and open source is no

00:38:05,440 --> 00:38:08,960
different

00:38:06,240 --> 00:38:11,119
you have to evaluate the risk and i've

00:38:08,960 --> 00:38:13,040
talked a lot about the risks associated

00:38:11,119 --> 00:38:14,480
with various elements within open source

00:38:13,040 --> 00:38:16,320
projects

00:38:14,480 --> 00:38:17,680
you also need to think about the project

00:38:16,320 --> 00:38:19,760
risks along with

00:38:17,680 --> 00:38:22,880
how you're using a project within your

00:38:19,760 --> 00:38:25,119
business if you're building your entire

00:38:22,880 --> 00:38:26,560
product line on top of some open source

00:38:25,119 --> 00:38:29,040
technology

00:38:26,560 --> 00:38:30,480
you probably want it to be relatively

00:38:29,040 --> 00:38:32,079
low risk

00:38:30,480 --> 00:38:34,160
if you're using an open source project

00:38:32,079 --> 00:38:35,599
as some tiny little part of some

00:38:34,160 --> 00:38:37,200
non-critical infrastructure

00:38:35,599 --> 00:38:39,680
you can probably accept more risk it's

00:38:37,200 --> 00:38:43,520
probably just not that important

00:38:39,680 --> 00:38:46,640
now no project is all good or all bad

00:38:43,520 --> 00:38:49,359
all risk or no risk and no one solution

00:38:46,640 --> 00:38:52,000
will be right for every single situation

00:38:49,359 --> 00:38:53,599
project risk like most things exists on

00:38:52,000 --> 00:38:55,200
a continuum

00:38:53,599 --> 00:38:56,880
and you need to think about the risks

00:38:55,200 --> 00:38:59,119
you might be taking

00:38:56,880 --> 00:39:00,560
you should communicate those risks to

00:38:59,119 --> 00:39:03,040
decision makers

00:39:00,560 --> 00:39:03,760
executives in some cases and then make

00:39:03,040 --> 00:39:06,640
informed

00:39:03,760 --> 00:39:08,160
decisions as a company about which risks

00:39:06,640 --> 00:39:10,000
to accept

00:39:08,160 --> 00:39:12,160
deciding which risks you're going to

00:39:10,000 --> 00:39:13,920
take is the beginning of the process

00:39:12,160 --> 00:39:15,280
not the end since you should also think

00:39:13,920 --> 00:39:17,680
about how you might want to

00:39:15,280 --> 00:39:18,960
monitor and maybe mitigate some of those

00:39:17,680 --> 00:39:22,400
risks if needed

00:39:18,960 --> 00:39:22,400
based on changing business needs

00:39:23,119 --> 00:39:28,000
i will wrap up the talk with a few

00:39:25,359 --> 00:39:30,640
resources that people might find useful

00:39:28,000 --> 00:39:31,200
the to do group has a bunch of guides

00:39:30,640 --> 00:39:33,119
that have

00:39:31,200 --> 00:39:34,560
great information about creating and

00:39:33,119 --> 00:39:38,000
managing healthy projects

00:39:34,560 --> 00:39:40,079
and measuring success the cncf

00:39:38,000 --> 00:39:41,760
contributor strategy sig has several

00:39:40,079 --> 00:39:43,119
working groups and we're in the process

00:39:41,760 --> 00:39:45,440
of building out some useful

00:39:43,119 --> 00:39:46,880
docs the contributor growth working

00:39:45,440 --> 00:39:47,920
group for example has to talk about

00:39:46,880 --> 00:39:49,680
project health

00:39:47,920 --> 00:39:51,520
which i wrote most of so i think it's

00:39:49,680 --> 00:39:53,200
pretty great and the governance working

00:39:51,520 --> 00:39:54,400
group has more details about what you

00:39:53,200 --> 00:39:56,160
need for governance

00:39:54,400 --> 00:39:57,440
and some options for leadership

00:39:56,160 --> 00:40:00,480
selection

00:39:57,440 --> 00:40:01,200
the chaos community of course has many

00:40:00,480 --> 00:40:03,760
tools

00:40:01,200 --> 00:40:04,960
and a whole bunch of metrics to find

00:40:03,760 --> 00:40:06,880
that can be used to measure

00:40:04,960 --> 00:40:08,880
open source project health and these are

00:40:06,880 --> 00:40:10,240
all really great starting places for

00:40:08,880 --> 00:40:12,240
understanding project health

00:40:10,240 --> 00:40:13,920
and the associated risks of using open

00:40:12,240 --> 00:40:16,480
source projects

00:40:13,920 --> 00:40:17,599
so with that thank you so much for for

00:40:16,480 --> 00:40:19,680
coming to my talk

00:40:17,599 --> 00:40:23,440
and i looks like i have about four and a

00:40:19,680 --> 00:40:25,440
half minutes for any additional q a

00:40:23,440 --> 00:40:27,119
so i will look at the q a i don't see

00:40:25,440 --> 00:40:29,760
anything there

00:40:27,119 --> 00:40:30,880
oh look at the chat i don't see anything

00:40:29,760 --> 00:40:34,319
new there either

00:40:30,880 --> 00:40:37,200
so this is your opportunity i have

00:40:34,319 --> 00:40:39,839
three minutes something like that uh if

00:40:37,200 --> 00:40:39,839
you have any questions

00:40:40,079 --> 00:40:45,839
yeah will the slides be available yes

00:40:43,680 --> 00:40:47,119
yes indeed they are already available as

00:40:45,839 --> 00:40:50,480
a matter of fact

00:40:47,119 --> 00:40:51,599
uh if you go to fastwonderblog.com and

00:40:50,480 --> 00:40:54,960
click on the speaking

00:40:51,599 --> 00:40:57,359
link i just uploaded the slides there

00:40:54,960 --> 00:41:07,520
just a couple hours ago so the slides

00:40:57,359 --> 00:41:11,280
are are available for you now

00:41:07,520 --> 00:41:13,839
any other questions thoughts

00:41:11,280 --> 00:41:15,520
color commentary things you want to

00:41:13,839 --> 00:41:18,720
share

00:41:15,520 --> 00:41:18,720
we have a couple of minutes left

00:41:18,839 --> 00:41:21,359
together

00:41:20,079 --> 00:41:22,800
of you know me know i tend to just try

00:41:21,359 --> 00:41:23,440
to egg people on until i get more

00:41:22,800 --> 00:41:24,960
questions

00:41:23,440 --> 00:41:26,960
uh so that's what i'll continue to do

00:41:24,960 --> 00:41:29,440
i'll just awkwardly talk and

00:41:26,960 --> 00:41:30,560
see what kind of questions vmware and

00:41:29,440 --> 00:41:32,720
open source in

00:41:30,560 --> 00:41:34,560
five words you're gonna make me count

00:41:32,720 --> 00:41:37,599
and think at the same time

00:41:34,560 --> 00:41:41,200
wow jen yeah that's a little rough um

00:41:37,599 --> 00:41:45,839
i would say uh let's see

00:41:41,200 --> 00:41:45,839
contribution community

00:41:46,839 --> 00:41:52,720
innovation

00:41:49,000 --> 00:41:54,240
participation and good corporate citizen

00:41:52,720 --> 00:41:56,960
which is all one word

00:41:54,240 --> 00:41:58,400
interestingly enough we do try to be

00:41:56,960 --> 00:42:01,599
good corporate citizens we have

00:41:58,400 --> 00:42:05,119
a really detailed um internal

00:42:01,599 --> 00:42:07,040
best practices documentation that we

00:42:05,119 --> 00:42:08,160
provide to all of our employees to try

00:42:07,040 --> 00:42:10,319
to make sure that

00:42:08,160 --> 00:42:11,760
they have the resources and the

00:42:10,319 --> 00:42:12,560
information so that when they

00:42:11,760 --> 00:42:14,800
participate

00:42:12,560 --> 00:42:16,720
in open source communities either our

00:42:14,800 --> 00:42:18,640
projects or third-party projects

00:42:16,720 --> 00:42:20,720
that they're doing so in a way that you

00:42:18,640 --> 00:42:23,680
know looks looks good

00:42:20,720 --> 00:42:25,119
as a vmware as an employer but also you

00:42:23,680 --> 00:42:26,319
know makes them make them look good

00:42:25,119 --> 00:42:31,839
they're doing the right thing for the

00:42:26,319 --> 00:42:31,839
for the project

00:42:32,960 --> 00:42:37,040
and the good cobra citizen thing i used

00:42:34,720 --> 00:42:38,640
to do a whole talk on that um last year

00:42:37,040 --> 00:42:40,160
uh it's something that i feel pretty

00:42:38,640 --> 00:42:40,640
pretty passionate about it's something

00:42:40,160 --> 00:42:43,760
that

00:42:40,640 --> 00:42:45,680
um you know there's this this weird

00:42:43,760 --> 00:42:48,000
dynamic between individuals

00:42:45,680 --> 00:42:50,160
um companies and communities that you

00:42:48,000 --> 00:42:52,960
get within these open source projects

00:42:50,160 --> 00:42:54,960
and i do really think that um having a

00:42:52,960 --> 00:42:57,040
being able to balance those three

00:42:54,960 --> 00:42:58,480
is really important because at the end

00:42:57,040 --> 00:42:59,680
of the day what you have to do is

00:42:58,480 --> 00:43:02,079
generally the right thing for the

00:42:59,680 --> 00:43:04,640
community which may or may not be

00:43:02,079 --> 00:43:06,079
uh what your company really really wants

00:43:04,640 --> 00:43:08,240
you to do

00:43:06,079 --> 00:43:09,359
um which can be hard i mean i've left

00:43:08,240 --> 00:43:12,079
companies over this

00:43:09,359 --> 00:43:12,720
right it's it's um it's a it's a tough

00:43:12,079 --> 00:43:15,760
balance

00:43:12,720 --> 00:43:17,680
to draw but i do think that you know as

00:43:15,760 --> 00:43:19,839
as individuals working on behalf of

00:43:17,680 --> 00:43:21,839
companies within communities we really

00:43:19,839 --> 00:43:23,200
do need to put the communities first

00:43:21,839 --> 00:43:27,839
and do the right thing for them if we

00:43:23,200 --> 00:43:27,839

YouTube URL: https://www.youtube.com/watch?v=QpNP22kPz3c


