Title: All Things Open 2017 - Lee Eason - Enterprise DevOPs: Bridging the InfoSec Gap
Publication date: 2017-11-28
Playlist: All Things Open 2017
Description: 
	All Things Open 2017, Raleigh NC, Raleigh Convention Center. www.Allthingsopen.org
Captions: 
	00:00:00,350 --> 00:00:04,740
thank you for coming we're gonna talk

00:00:02,340 --> 00:00:07,680
about enterprise DevOps my name is Li

00:00:04,740 --> 00:00:13,259
Eason and I am the director of DevOps at

00:00:07,680 --> 00:00:15,360
Ipreo Ipreo is a large financial

00:00:13,259 --> 00:00:18,150
services company financial technology

00:00:15,360 --> 00:00:21,510
company we have customers that range in

00:00:18,150 --> 00:00:23,789
size from small privately funded private

00:00:21,510 --> 00:00:25,820
companies use our products to do things

00:00:23,789 --> 00:00:28,470
like figure out what their valuation is

00:00:25,820 --> 00:00:31,650
handle compliance related documentation

00:00:28,470 --> 00:00:34,250
that they have to track helps them keep

00:00:31,650 --> 00:00:37,110
track of when they make promises to

00:00:34,250 --> 00:00:38,670
employees about stock you know stock

00:00:37,110 --> 00:00:41,010
options when they're gonna go public

00:00:38,670 --> 00:00:42,360
where they gonna get acquired and our

00:00:41,010 --> 00:00:44,460
customers range from there all the way

00:00:42,360 --> 00:00:46,620
up through the largest investment banks

00:00:44,460 --> 00:00:49,680
in the world so that includes people

00:00:46,620 --> 00:00:53,100
like Bank of America Morgan Stanley JP

00:00:49,680 --> 00:00:55,320
Morgan Goldman Sachs the other day we

00:00:53,100 --> 00:00:57,079
had a candidate on site kept calling him

00:00:55,320 --> 00:00:59,430
Goldman Sachs which we all really great

00:00:57,079 --> 00:01:02,850
kick out by the way I got some sweet

00:00:59,430 --> 00:01:04,619
data dog socks here so big big shout-out

00:01:02,850 --> 00:01:07,020
to data dog they told me not to tell

00:01:04,619 --> 00:01:11,909
anyone they gave me socks so go down

00:01:07,020 --> 00:01:15,689
there and ask for socks it's been a wild

00:01:11,909 --> 00:01:17,130
ride coming to Ipreo I have several I'm

00:01:15,689 --> 00:01:18,299
lucky to have several friends in the

00:01:17,130 --> 00:01:20,490
audience I've worked with many of you

00:01:18,299 --> 00:01:21,810
guys in the past and you know coming

00:01:20,490 --> 00:01:25,080
from where I came from

00:01:21,810 --> 00:01:27,950
small open source companies into the

00:01:25,080 --> 00:01:31,170
world of Ipreo it was quite a transition

00:01:27,950 --> 00:01:33,299
my challenge was trying to take the

00:01:31,170 --> 00:01:35,310
things that we did well in a small

00:01:33,299 --> 00:01:39,180
company and figure out how to make those

00:01:35,310 --> 00:01:40,979
work and a big company and so that's the

00:01:39,180 --> 00:01:43,409
goal of this talk the goal of this talk

00:01:40,979 --> 00:01:46,110
is to help you understand what the

00:01:43,409 --> 00:01:49,229
unique challenge of enterprise DevOps is

00:01:46,110 --> 00:01:52,049
its security fast ok and we're going to

00:01:49,229 --> 00:01:54,329
talk about how to overcome these unique

00:01:52,049 --> 00:01:58,710
challenges that come along with trying

00:01:54,329 --> 00:02:00,060
to do security fast so before we get too

00:01:58,710 --> 00:02:03,360
much further I want to give you a

00:02:00,060 --> 00:02:05,310
warning this is not a sexy talk ok and

00:02:03,360 --> 00:02:06,810
you know what I mean by a sexy talk and

00:02:05,310 --> 00:02:08,610
many of these talks are gonna come to

00:02:06,810 --> 00:02:10,110
you today you're gonna come in the the

00:02:08,610 --> 00:02:11,970
speaker is going to have rose petals on

00:02:10,110 --> 00:02:13,050
the stage he's got candles the lights

00:02:11,970 --> 00:02:16,350
dim

00:02:13,050 --> 00:02:19,080
and he starts telling you about the

00:02:16,350 --> 00:02:22,370
sexiest automation pipeline that you

00:02:19,080 --> 00:02:22,370
know you've ever seen in your life

00:02:23,780 --> 00:02:30,090
yeah you're sitting in the audience and

00:02:27,900 --> 00:02:31,980
and you're soaking it in

00:02:30,090 --> 00:02:33,570
it's like Kelsie's talk this morning you

00:02:31,980 --> 00:02:36,120
know when he's deploying code by talking

00:02:33,570 --> 00:02:39,990
to his phone I was like oh yeah I want

00:02:36,120 --> 00:02:41,820
that so you're sitting there you're and

00:02:39,990 --> 00:02:43,260
you're you're absorbing it all right and

00:02:41,820 --> 00:02:45,240
you're thinking I'm gonna take this

00:02:43,260 --> 00:02:47,700
straight to my company he's showing you

00:02:45,240 --> 00:02:49,980
kubernetes it's got monitoring

00:02:47,700 --> 00:02:52,170
orchestration health checks automated

00:02:49,980 --> 00:02:53,730
rollbacks you're like yes I want all

00:02:52,170 --> 00:02:55,680
that just like that

00:02:53,730 --> 00:02:58,110
but then the speaker says something that

00:02:55,680 --> 00:03:01,490
throws you off if you're like me he says

00:02:58,110 --> 00:03:04,140
something like deploying code is easy

00:03:01,490 --> 00:03:06,420
all you have to do is push code to

00:03:04,140 --> 00:03:08,880
master it gets tested and pushed

00:03:06,420 --> 00:03:12,210
straight out to production and I go woof

00:03:08,880 --> 00:03:13,860
I can't I can't do that okay I can't you

00:03:12,210 --> 00:03:15,750
can't that's crazy talk but it's fine

00:03:13,860 --> 00:03:18,030
we'll just use some approvals no problem

00:03:15,750 --> 00:03:20,670
but then he really throws me off a

00:03:18,030 --> 00:03:22,770
speaker will say something like pushing

00:03:20,670 --> 00:03:25,260
infrastructure changes is easy we use

00:03:22,770 --> 00:03:27,390
terraform all you have to do is type

00:03:25,260 --> 00:03:29,670
terraform apply any developer can push

00:03:27,390 --> 00:03:35,040
production infrastructure changes out

00:03:29,670 --> 00:03:37,260
and I go wait wait like no I can't

00:03:35,040 --> 00:03:39,120
I spend the next 30 minutes trying to

00:03:37,260 --> 00:03:41,280
figure out how I'm gonna take this super

00:03:39,120 --> 00:03:43,380
sexy automation pipeline and make it

00:03:41,280 --> 00:03:45,270
work I was thinking this morning even

00:03:43,380 --> 00:03:46,980
I'm not pulling on Kelso that was really

00:03:45,270 --> 00:03:49,350
I'm super jealous of his talk I wish I

00:03:46,980 --> 00:03:51,510
could do that I was thinking what if I

00:03:49,350 --> 00:03:54,360
went to Bank of America Barry and I said

00:03:51,510 --> 00:03:57,270
hey let me show you my my change control

00:03:54,360 --> 00:03:59,010
process okay Google push code to Bank of

00:03:57,270 --> 00:04:00,840
America like they would literally have

00:03:59,010 --> 00:04:02,340
kittens and I'd have to like find homes

00:04:00,840 --> 00:04:05,510
for those kittens we'd have to give them

00:04:02,340 --> 00:04:07,950
shots like it's is a lengthy process

00:04:05,510 --> 00:04:10,170
there's no way that my customers are

00:04:07,950 --> 00:04:12,420
going to accept that kind of change

00:04:10,170 --> 00:04:14,730
control process but I want to be able to

00:04:12,420 --> 00:04:16,440
push code that easy I want every team in

00:04:14,730 --> 00:04:18,780
my company to have that kind of

00:04:16,440 --> 00:04:20,459
experience so that's our challenge right

00:04:18,780 --> 00:04:23,910
that's our challenge in enterprise

00:04:20,459 --> 00:04:25,350
DevOps so let's talk about enterprise

00:04:23,910 --> 00:04:26,260
DevOps and make sure we're all on the

00:04:25,350 --> 00:04:28,180
same page

00:04:26,260 --> 00:04:29,530
these two words kind of don't really go

00:04:28,180 --> 00:04:31,900
together right Shakespeare might have

00:04:29,530 --> 00:04:33,640
said two terms both alike in dignity in

00:04:31,900 --> 00:04:35,910
fair Rolly where we lay our scene what's

00:04:33,640 --> 00:04:38,950
it from

00:04:35,910 --> 00:04:42,040
thank you jeez holy cow all right now

00:04:38,950 --> 00:04:44,410
thank you 200 gold stars for that guy

00:04:42,040 --> 00:04:46,120
Enterprise DevOps so I want it to be

00:04:44,410 --> 00:04:48,160
really scientific about how I defined

00:04:46,120 --> 00:04:50,320
the term enterprise so I asked my

00:04:48,160 --> 00:04:51,850
LinkedIn Network you know you're always

00:04:50,320 --> 00:04:54,610
going to get honesty from your LinkedIn

00:04:51,850 --> 00:04:56,110
Network the answers that I got back kind

00:04:54,610 --> 00:04:57,640
of fall in these dimensions and I dive

00:04:56,110 --> 00:04:59,500
with this stuff this makes sense to me

00:04:57,640 --> 00:05:01,090
there's no really good clear concise

00:04:59,500 --> 00:05:03,100
definition of enterprise software

00:05:01,090 --> 00:05:04,780
companies but what makes us different

00:05:03,100 --> 00:05:06,460
than other kinds of software companies

00:05:04,780 --> 00:05:08,620
are these types of things right

00:05:06,460 --> 00:05:09,880
you either have lots of customers or you

00:05:08,620 --> 00:05:13,060
have a few customers and they're really

00:05:09,880 --> 00:05:14,800
really big you have more than one

00:05:13,060 --> 00:05:16,510
product or line of business so you're

00:05:14,800 --> 00:05:20,260
not just selling one thing you're

00:05:16,510 --> 00:05:22,330
selling lots of things you provide a

00:05:20,260 --> 00:05:23,890
service to your customers that's not

00:05:22,330 --> 00:05:26,380
just a value add it doesn't just make

00:05:23,890 --> 00:05:26,740
their jobs easier or faster or what have

00:05:26,380 --> 00:05:28,030
you

00:05:26,740 --> 00:05:30,100
the thing you're selling to your

00:05:28,030 --> 00:05:33,370
customers is the core nugget of what

00:05:30,100 --> 00:05:35,020
they sell when we sell IPO software to

00:05:33,370 --> 00:05:38,470
our customers that they use to take

00:05:35,020 --> 00:05:42,190
Facebook Alibaba snapchat live which

00:05:38,470 --> 00:05:44,500
we've done that that was all us those

00:05:42,190 --> 00:05:47,140
banks exist to take companies live if

00:05:44,500 --> 00:05:49,120
our software doesn't work right those

00:05:47,140 --> 00:05:52,060
businesses can't do what they're here to

00:05:49,120 --> 00:05:55,300
do so we're not just adding value we are

00:05:52,060 --> 00:05:57,040
enabling that business to exist that's a

00:05:55,300 --> 00:06:00,430
very different kind of relationship than

00:05:57,040 --> 00:06:03,310
somebody that might be selling a smaller

00:06:00,430 --> 00:06:05,830
like workflow enhancement tool we have

00:06:03,310 --> 00:06:07,420
complex technological landscapes why

00:06:05,830 --> 00:06:09,100
because many enterprise software

00:06:07,420 --> 00:06:10,960
companies have grown through some

00:06:09,100 --> 00:06:12,430
organic growth so they've written new

00:06:10,960 --> 00:06:14,800
services and products they've also

00:06:12,430 --> 00:06:16,510
acquired companies right and on paper

00:06:14,800 --> 00:06:18,640
those acquisitions look great because

00:06:16,510 --> 00:06:20,890
you're adding some nice piece of

00:06:18,640 --> 00:06:22,900
business to your portfolio but the

00:06:20,890 --> 00:06:24,550
technology is completely different so

00:06:22,900 --> 00:06:26,170
you used to be a Microsoft company well

00:06:24,550 --> 00:06:28,180
guess what congratulations now you're a

00:06:26,170 --> 00:06:29,770
Linux company too how hard can it be you

00:06:28,180 --> 00:06:31,120
just make the Linux thing work next to

00:06:29,770 --> 00:06:33,370
the Microsoft thing what's the problem

00:06:31,120 --> 00:06:36,430
right so you end up with these really

00:06:33,370 --> 00:06:38,590
diverse landscapes you're multinational

00:06:36,430 --> 00:06:39,910
ok I was just talking this gentleman

00:06:38,590 --> 00:06:42,130
down here in the front about this

00:06:39,910 --> 00:06:42,940
you're selling products in Europe and

00:06:42,130 --> 00:06:45,160
Asia

00:06:42,940 --> 00:06:46,630
well guess what the financial laws and

00:06:45,160 --> 00:06:47,860
regulations in Europe are completely

00:06:46,630 --> 00:06:49,510
different than they are here the

00:06:47,860 --> 00:06:50,950
penalties for violations are completely

00:06:49,510 --> 00:06:52,510
different and you have to be able to

00:06:50,950 --> 00:06:54,100
navigate all those landscapes and when

00:06:52,510 --> 00:06:56,260
you're dealing with data customer data

00:06:54,100 --> 00:06:57,490
like we do you have to understand how

00:06:56,260 --> 00:06:59,530
the different legalities and the

00:06:57,490 --> 00:07:04,030
different places you operate affect your

00:06:59,530 --> 00:07:06,370
business okay finally the thing I'll say

00:07:04,030 --> 00:07:07,870
is that my impression after working in

00:07:06,370 --> 00:07:09,130
different kinds of companies is that

00:07:07,870 --> 00:07:12,310
when you're in an enterprise software

00:07:09,130 --> 00:07:14,380
company security comes first it is it is

00:07:12,310 --> 00:07:15,760
the absolute like job zero of everyone

00:07:14,380 --> 00:07:17,080
in the company you have to be

00:07:15,760 --> 00:07:18,910
considering it before you do anything

00:07:17,080 --> 00:07:22,030
else it's not something that you tack on

00:07:18,910 --> 00:07:25,150
at the end then we think about the word

00:07:22,030 --> 00:07:26,320
DevOps right everybody at these

00:07:25,150 --> 00:07:27,970
conferences gets to give their

00:07:26,320 --> 00:07:30,670
definition of DevOps and I'm not going

00:07:27,970 --> 00:07:32,770
to miss my chance to do that my personal

00:07:30,670 --> 00:07:34,750
definition of DevOps is a culture of

00:07:32,770 --> 00:07:37,180
continuous improvement applied

00:07:34,750 --> 00:07:39,850
specifically to code build and deploy

00:07:37,180 --> 00:07:41,950
processes okay so we always want to be

00:07:39,850 --> 00:07:45,130
continually improving and any software

00:07:41,950 --> 00:07:47,260
company fine DevOps is just putting a

00:07:45,130 --> 00:07:49,060
magnifying glass over your code build

00:07:47,260 --> 00:07:50,560
and deploy processes and making sure

00:07:49,060 --> 00:07:52,420
that you're doing continuous improvement

00:07:50,560 --> 00:07:54,250
there we tend to focus on the

00:07:52,420 --> 00:07:56,110
implementation of that culture and

00:07:54,250 --> 00:07:58,030
that's great that's that's the sexy

00:07:56,110 --> 00:08:00,310
talks but in its essence that's what

00:07:58,030 --> 00:08:01,540
DevOps really is so what's nice to me

00:08:00,310 --> 00:08:03,310
about that definition is it's

00:08:01,540 --> 00:08:05,380
sufficiently vague to get funding from a

00:08:03,310 --> 00:08:06,910
CFO but it's specific enough for your

00:08:05,380 --> 00:08:10,060
teams to actually do something with it

00:08:06,910 --> 00:08:11,650
write articles when you go online and

00:08:10,060 --> 00:08:13,870
read about DevOps though they tend to

00:08:11,650 --> 00:08:15,550
focus on single technology stacks you're

00:08:13,870 --> 00:08:18,460
not gonna find too many articles that

00:08:15,550 --> 00:08:20,470
show you how to deploy a dotnet core

00:08:18,460 --> 00:08:22,270
application right alongside Ruby on

00:08:20,470 --> 00:08:24,190
Rails app they're gonna focus on one or

00:08:22,270 --> 00:08:27,580
the other and most of the time it's the

00:08:24,190 --> 00:08:29,740
ruby app most of the time the materials

00:08:27,580 --> 00:08:32,289
you find for DevOps are small lean teams

00:08:29,740 --> 00:08:34,900
there's not a lot of talk about you know

00:08:32,289 --> 00:08:36,370
cross team dependencies or the kinds of

00:08:34,900 --> 00:08:39,969
workflows that most of us have to

00:08:36,370 --> 00:08:41,770
encounter on a day to day basis finally

00:08:39,969 --> 00:08:43,510
I'll say that my impression and again

00:08:41,770 --> 00:08:45,820
it's not that security is not important

00:08:43,510 --> 00:08:48,040
in smaller companies it just tends to be

00:08:45,820 --> 00:08:51,210
this thing that you sort of do near the

00:08:48,040 --> 00:08:53,790
end of a process the work flows

00:08:51,210 --> 00:08:57,420
to come first we tend to value ease of

00:08:53,790 --> 00:08:59,580
development over making sure every hold

00:08:57,420 --> 00:09:03,360
it could possibly be there is found and

00:08:59,580 --> 00:09:06,000
plucked so I'm going to give you four

00:09:03,360 --> 00:09:08,730
keys to how to do enterprise DevOps

00:09:06,000 --> 00:09:11,160
successfully everybody says never do

00:09:08,730 --> 00:09:12,839
more than three but I didn't want to cut

00:09:11,160 --> 00:09:15,899
anything out so we're gonna talk about

00:09:12,839 --> 00:09:18,800
four things you need to get good at in

00:09:15,899 --> 00:09:20,790
order to do DevOps well in an enterprise

00:09:18,800 --> 00:09:22,950
we're gonna talk about how to classify

00:09:20,790 --> 00:09:24,570
your data we're going to talk about how

00:09:22,950 --> 00:09:26,610
to deal with risk we're gonna talk about

00:09:24,570 --> 00:09:27,750
an internal tools team and then we're

00:09:26,610 --> 00:09:32,370
going to talk about site reliability

00:09:27,750 --> 00:09:34,470
engineering so number one we're going to

00:09:32,370 --> 00:09:37,200
talk about data classification so this

00:09:34,470 --> 00:09:39,330
is the process of looking at the data

00:09:37,200 --> 00:09:41,940
that your company is responsible for and

00:09:39,330 --> 00:09:43,470
putting it into buckets there's three

00:09:41,940 --> 00:09:45,240
dimensions that you need to be thinking

00:09:43,470 --> 00:09:47,220
about when you're bucketing your data

00:09:45,240 --> 00:09:50,160
the first one we're going to talk about

00:09:47,220 --> 00:09:51,360
is confidentiality so when you're

00:09:50,160 --> 00:09:53,820
thinking about the data that your

00:09:51,360 --> 00:09:55,560
company is responsible for it's gonna

00:09:53,820 --> 00:09:57,810
fall into some category of

00:09:55,560 --> 00:10:00,270
confidentiality it could be public right

00:09:57,810 --> 00:10:02,670
you could be taking SEC filings edgar

00:10:00,270 --> 00:10:05,070
filings like 13f filings that's public

00:10:02,670 --> 00:10:05,970
data if that gets leaked it's probably

00:10:05,070 --> 00:10:08,040
not that big a deal

00:10:05,970 --> 00:10:10,650
okay you could be taking anonymized

00:10:08,040 --> 00:10:12,120
public healthcare records many times

00:10:10,650 --> 00:10:13,260
healthcare companies will anonymize

00:10:12,120 --> 00:10:16,140
these things and release them to the

00:10:13,260 --> 00:10:17,520
public that's public data right the way

00:10:16,140 --> 00:10:19,200
that you should always be thinking about

00:10:17,520 --> 00:10:21,540
how you're going to be classifying this

00:10:19,200 --> 00:10:23,100
stuff is the impact to what happens if

00:10:21,540 --> 00:10:25,080
it's misused what happens if it's

00:10:23,100 --> 00:10:26,310
mishandled or leaked to the public so

00:10:25,080 --> 00:10:27,870
public data is already public we don't

00:10:26,310 --> 00:10:30,029
care it's already out there right

00:10:27,870 --> 00:10:32,430
the next category you might need to

00:10:30,029 --> 00:10:34,829
think about is company confidential data

00:10:32,430 --> 00:10:37,950
all right this is data that if it were

00:10:34,829 --> 00:10:40,200
mishandled represents a risk to your

00:10:37,950 --> 00:10:43,140
company specifically so maybe you took

00:10:40,200 --> 00:10:44,760
that public data and you put some secret

00:10:43,140 --> 00:10:46,380
sauce on it you have some custom

00:10:44,760 --> 00:10:48,899
algorithm that you've added you've added

00:10:46,380 --> 00:10:50,520
some value to the data and you're using

00:10:48,899 --> 00:10:53,190
that data to sell services to your

00:10:50,520 --> 00:10:54,180
customers if that data were leaked then

00:10:53,190 --> 00:10:55,410
maybe they don't have to buy your

00:10:54,180 --> 00:10:56,970
services anymore it could put your

00:10:55,410 --> 00:10:59,550
company out in a business risk

00:10:56,970 --> 00:11:01,740
there could be reputational risk to your

00:10:59,550 --> 00:11:04,290
data being leaked a company I worked at

00:11:01,740 --> 00:11:05,010
at one time we were trying to classify

00:11:04,290 --> 00:11:06,600
our

00:11:05,010 --> 00:11:07,800
code and the conversation was

00:11:06,600 --> 00:11:09,330
interesting because when we first

00:11:07,800 --> 00:11:10,740
started talking about it it seemed

00:11:09,330 --> 00:11:12,840
pretty obvious that it was company

00:11:10,740 --> 00:11:14,820
confidential data but as we started

00:11:12,840 --> 00:11:16,950
thinking about the impact so what

00:11:14,820 --> 00:11:19,440
happened if this company's source code

00:11:16,950 --> 00:11:21,300
was leaked to the public it was it was a

00:11:19,440 --> 00:11:23,640
damage high enough to bump us into the

00:11:21,300 --> 00:11:24,840
next category in terms of what the

00:11:23,640 --> 00:11:27,450
impact would be and that would be

00:11:24,840 --> 00:11:29,820
customer confidential information so

00:11:27,450 --> 00:11:32,010
this is a case where your customer has

00:11:29,820 --> 00:11:35,280
entrusted your company with some of

00:11:32,010 --> 00:11:37,800
their own data or their users data right

00:11:35,280 --> 00:11:39,320
now we're getting into situations of PII

00:11:37,800 --> 00:11:41,460
personally identifiable information

00:11:39,320 --> 00:11:43,470
there's a whole bunch of laws in

00:11:41,460 --> 00:11:46,500
different countries that dictate how you

00:11:43,470 --> 00:11:47,820
need to be controlling PII so if your

00:11:46,500 --> 00:11:49,770
customers are trusting you with that

00:11:47,820 --> 00:11:51,870
kind of data you might need to classify

00:11:49,770 --> 00:11:53,220
that differently than just company

00:11:51,870 --> 00:11:55,260
confidential data because there may be

00:11:53,220 --> 00:11:57,900
laws and regulations and there may be

00:11:55,260 --> 00:12:00,690
impact to that being leaked that's above

00:11:57,900 --> 00:12:02,970
what your company's data being leaked

00:12:00,690 --> 00:12:05,520
would be GDP I I was just telling this

00:12:02,970 --> 00:12:06,900
guy up front about this is a set of laws

00:12:05,520 --> 00:12:09,000
that have been in place in Europe for a

00:12:06,900 --> 00:12:10,380
while but there's a revision going in

00:12:09,000 --> 00:12:13,260
now that's I think what is it ten

00:12:10,380 --> 00:12:14,100
million dollars per or ten million euro

00:12:13,260 --> 00:12:16,260
excuse me

00:12:14,100 --> 00:12:18,510
per infraction so if you have a database

00:12:16,260 --> 00:12:19,950
with a hundred thousand records of

00:12:18,510 --> 00:12:22,110
people's information and it gets leaked

00:12:19,950 --> 00:12:24,420
that's a hundred thousand instances of a

00:12:22,110 --> 00:12:26,940
violation that is a company ending event

00:12:24,420 --> 00:12:28,170
so you're talking about a set of data

00:12:26,940 --> 00:12:29,910
that you've got to be really really

00:12:28,170 --> 00:12:31,260
careful about and appropriately so right

00:12:29,910 --> 00:12:34,190
we have a high responsibility here but

00:12:31,260 --> 00:12:36,930
something you need to be cognizant of

00:12:34,190 --> 00:12:40,110
the second dimension to consider here is

00:12:36,930 --> 00:12:41,790
the environments that are in play many

00:12:40,110 --> 00:12:44,700
times enterprise software companies with

00:12:41,790 --> 00:12:46,260
our complex technical landscapes we have

00:12:44,700 --> 00:12:48,990
data in lots of different places right

00:12:46,260 --> 00:12:51,360
you could have physical co-located data

00:12:48,990 --> 00:12:53,190
centers you could have public cloud

00:12:51,360 --> 00:12:56,310
resources private clouds and maybe

00:12:53,190 --> 00:12:58,050
you've partnered with Red Hat or IBM you

00:12:56,310 --> 00:12:59,730
could have off-site backup locations

00:12:58,050 --> 00:13:02,340
hopefully you do if you're using

00:12:59,730 --> 00:13:04,530
co-located data centers each one of

00:13:02,340 --> 00:13:06,720
these locations is important because

00:13:04,530 --> 00:13:08,730
each one carries with its own set of

00:13:06,720 --> 00:13:10,650
controls that you sort of get along with

00:13:08,730 --> 00:13:12,390
the fees you pay that company these

00:13:10,650 --> 00:13:14,460
locations will have some sort of

00:13:12,390 --> 00:13:17,370
security framework certification that

00:13:14,460 --> 00:13:18,720
they publish and maintain and that way

00:13:17,370 --> 00:13:20,340
when you're thinking about the

00:13:18,720 --> 00:13:22,830
that you're putting on your different

00:13:20,340 --> 00:13:26,100
classes of data you can leverage that

00:13:22,830 --> 00:13:27,270
locations controls as part of that there

00:13:26,100 --> 00:13:30,780
will be different so you need to

00:13:27,270 --> 00:13:32,220
consider those things and the last

00:13:30,780 --> 00:13:34,290
dimension you need to consider here is

00:13:32,220 --> 00:13:35,870
the interaction method and this is

00:13:34,290 --> 00:13:39,120
pretty simple right you usually either

00:13:35,870 --> 00:13:41,940
using data it's in transit in between

00:13:39,120 --> 00:13:44,100
endpoints or it's at rest that's about

00:13:41,940 --> 00:13:46,940
it so what you're going to do is you're

00:13:44,100 --> 00:13:50,690
going to build this matrix of

00:13:46,940 --> 00:13:53,280
confidentiality environment types and

00:13:50,690 --> 00:13:55,680
interaction methods and for each one of

00:13:53,280 --> 00:13:57,750
the intersections of those things you're

00:13:55,680 --> 00:14:01,800
going to establish a list of controls

00:13:57,750 --> 00:14:03,510
that must be in place in order to say in

00:14:01,800 --> 00:14:06,930
order to certify that you are using that

00:14:03,510 --> 00:14:10,020
data appropriately this is the bedrock

00:14:06,930 --> 00:14:12,720
of enterprise security if you don't have

00:14:10,020 --> 00:14:15,270
this if your internal teams don't

00:14:12,720 --> 00:14:17,850
understand this about your company this

00:14:15,270 --> 00:14:19,980
is a big opportunity for you to get one

00:14:17,850 --> 00:14:22,470
nice level playing field for everyone to

00:14:19,980 --> 00:14:24,630
have you're gonna build everything else

00:14:22,470 --> 00:14:30,690
that you do in terms of process on this

00:14:24,630 --> 00:14:32,070
foundation the second thing that's going

00:14:30,690 --> 00:14:35,070
to make you successful as an enterprise

00:14:32,070 --> 00:14:38,340
software company doing DevOps is risk

00:14:35,070 --> 00:14:41,220
mitigation risk mitigation is an

00:14:38,340 --> 00:14:44,430
interesting thing it's not cut and dry

00:14:41,220 --> 00:14:46,770
it's not black and white typically the

00:14:44,430 --> 00:14:49,020
process typically looks like this you

00:14:46,770 --> 00:14:51,600
you have a conversation at your team

00:14:49,020 --> 00:14:52,770
level you identify some risks there's

00:14:51,600 --> 00:14:54,630
something that could go wrong and

00:14:52,770 --> 00:14:56,430
immediately what you're going to do is

00:14:54,630 --> 00:14:59,160
look back at your data classification

00:14:56,430 --> 00:15:01,020
document and you're gonna check to see

00:14:59,160 --> 00:15:02,580
if the controls are in place that needs

00:15:01,020 --> 00:15:04,980
to be in place in order to mitigate that

00:15:02,580 --> 00:15:06,510
risk and if they're not you're going to

00:15:04,980 --> 00:15:08,310
look at the level of effort that it's

00:15:06,510 --> 00:15:11,730
going to take to mitigate the risk right

00:15:08,310 --> 00:15:16,620
the effort here is not to eliminate all

00:15:11,730 --> 00:15:18,810
risk it's to get rid of a point it's

00:15:16,620 --> 00:15:20,970
it's a get to get to a point of where

00:15:18,810 --> 00:15:22,950
you've eliminated inherent risks and you

00:15:20,970 --> 00:15:24,810
get to a point of residual risks what

00:15:22,950 --> 00:15:27,420
does all this mean what this really

00:15:24,810 --> 00:15:29,370
means is that there's probably a set of

00:15:27,420 --> 00:15:32,220
reasonable things that you can do

00:15:29,370 --> 00:15:33,900
controls that you can put in place that

00:15:32,220 --> 00:15:35,880
take care of your data according to your

00:15:33,900 --> 00:15:37,440
data classification document but there

00:15:35,880 --> 00:15:39,330
will always be situations where you

00:15:37,440 --> 00:15:42,630
can't eliminate all risk I'll give you

00:15:39,330 --> 00:15:44,970
an example let's say we are migrating

00:15:42,630 --> 00:15:48,030
data from my co-located data center up

00:15:44,970 --> 00:15:50,820
to the cloud the process that the team

00:15:48,030 --> 00:15:53,220
has built to do this takes data from a

00:15:50,820 --> 00:15:55,170
data store and our data center it does

00:15:53,220 --> 00:15:57,480
some processing on it on a server and

00:15:55,170 --> 00:15:59,640
then that server pushes the data up to

00:15:57,480 --> 00:16:00,990
the cloud so the first thing that we're

00:15:59,640 --> 00:16:02,610
gonna do is refer to our data

00:16:00,990 --> 00:16:05,310
classification document we're gonna say

00:16:02,610 --> 00:16:08,250
what's the nature of the data okay

00:16:05,310 --> 00:16:11,820
it has PII in it PII could be anything

00:16:08,250 --> 00:16:15,060
it could be an IP address it could be an

00:16:11,820 --> 00:16:16,770
email address these are all PII right so

00:16:15,060 --> 00:16:17,370
if you have that kind of data that

00:16:16,770 --> 00:16:19,410
you're dealing with

00:16:17,370 --> 00:16:21,660
we've already fallen into customer

00:16:19,410 --> 00:16:23,340
confidential data so we can look at our

00:16:21,660 --> 00:16:24,840
data classification document and see

00:16:23,340 --> 00:16:26,010
exactly what controls need to be in

00:16:24,840 --> 00:16:28,880
place so there's certain types of

00:16:26,010 --> 00:16:31,020
encryption that need to be there right

00:16:28,880 --> 00:16:33,360
then you're gonna look at the process

00:16:31,020 --> 00:16:35,460
itself and you're gonna see have we

00:16:33,360 --> 00:16:37,680
eliminated all of the inherent risks

00:16:35,460 --> 00:16:40,050
with this operation as far as we can

00:16:37,680 --> 00:16:42,330
tell we have but there is a residual

00:16:40,050 --> 00:16:44,520
risk the residual risk is that some

00:16:42,330 --> 00:16:47,460
people and our company have access to

00:16:44,520 --> 00:16:50,130
that server and they could if we had an

00:16:47,460 --> 00:16:51,330
internal bad actor who was aware that

00:16:50,130 --> 00:16:54,000
this thing was going to happen they

00:16:51,330 --> 00:16:55,830
could access that server and they could

00:16:54,000 --> 00:16:59,220
glean some of this information off

00:16:55,830 --> 00:17:01,080
during the transfer process right we

00:16:59,220 --> 00:17:02,700
can't make it so that no one can get on

00:17:01,080 --> 00:17:05,190
the server so there's going to be some

00:17:02,700 --> 00:17:06,330
people that have access to it so what

00:17:05,190 --> 00:17:08,580
you're going to do now is have a

00:17:06,330 --> 00:17:11,400
conversation about who can accept that

00:17:08,580 --> 00:17:14,810
residual risk is it the developers

00:17:11,400 --> 00:17:17,940
involved with the migration process no

00:17:14,810 --> 00:17:20,220
why not because they're the people who

00:17:17,940 --> 00:17:22,470
we think are part of the residual risk

00:17:20,220 --> 00:17:24,300
the people who have access to the box

00:17:22,470 --> 00:17:26,940
who could be an internal bad actor if

00:17:24,300 --> 00:17:28,830
they're the people that we think we're

00:17:26,940 --> 00:17:30,210
at risk from obviously we can't go to

00:17:28,830 --> 00:17:31,440
those people and say do you accept this

00:17:30,210 --> 00:17:34,560
risk because they're just gonna say yeah

00:17:31,440 --> 00:17:37,650
sure I accept the risk that's a conflict

00:17:34,560 --> 00:17:39,300
of interest this is the kind of maturity

00:17:37,650 --> 00:17:41,340
that you've got to help your culture

00:17:39,300 --> 00:17:44,010
help build as a culture inside your

00:17:41,340 --> 00:17:46,020
company so you've got to teach your

00:17:44,010 --> 00:17:48,120
teams about how to identify risk

00:17:46,020 --> 00:17:49,590
how to talk about these inherent risks

00:17:48,120 --> 00:17:52,140
how to talk about residual risk and how

00:17:49,590 --> 00:17:54,360
to identify who can accept risk so you

00:17:52,140 --> 00:17:55,800
would need to escalate this conversation

00:17:54,360 --> 00:17:58,680
to a product owner a product manager

00:17:55,800 --> 00:18:00,210
someone who has some responsibility over

00:17:58,680 --> 00:18:02,640
the customers associated with that data

00:18:00,210 --> 00:18:04,470
explain the situation to them help them

00:18:02,640 --> 00:18:07,200
understand what's going on and give them

00:18:04,470 --> 00:18:09,000
an opportunity to chime in maybe it's

00:18:07,200 --> 00:18:10,800
worth taking an extra a couple of weeks

00:18:09,000 --> 00:18:13,410
to change the process so we eliminate

00:18:10,800 --> 00:18:15,300
that residual risk maybe we're okay

00:18:13,410 --> 00:18:16,470
accepting the risk the key here is that

00:18:15,300 --> 00:18:20,160
you have to be able to have the

00:18:16,470 --> 00:18:21,960
conversation and document the results so

00:18:20,160 --> 00:18:23,790
that's risk mitigation so we've talked

00:18:21,960 --> 00:18:25,200
about how to classify our data we've

00:18:23,790 --> 00:18:26,580
talked a little bit about how to deal

00:18:25,200 --> 00:18:28,080
with risk we're not trying to eliminate

00:18:26,580 --> 00:18:29,790
all risk we're just trying to get to a

00:18:28,080 --> 00:18:33,720
point where we feel comfortable

00:18:29,790 --> 00:18:37,950
accepting these risks let's talk about

00:18:33,720 --> 00:18:40,710
building an internal tools team so when

00:18:37,950 --> 00:18:43,740
i joined i prio a couple years ago we

00:18:40,710 --> 00:18:46,140
had a legacy release management function

00:18:43,740 --> 00:18:48,270
inside the company now the way this

00:18:46,140 --> 00:18:50,700
worked is that if team a needed to

00:18:48,270 --> 00:18:52,560
deploy code they would ask the release

00:18:50,700 --> 00:18:54,660
management team to package that code up

00:18:52,560 --> 00:18:57,270
for them and deploy it out to production

00:18:54,660 --> 00:18:59,910
they got meetings they'd coordinate they

00:18:57,270 --> 00:19:02,040
do practice runs this is a very like

00:18:59,910 --> 00:19:07,140
typical way that enterprise companies

00:19:02,040 --> 00:19:09,620
deploy code so what I did was convert

00:19:07,140 --> 00:19:12,840
that team into an internal tools team

00:19:09,620 --> 00:19:14,940
the focus here is we're trying to get

00:19:12,840 --> 00:19:16,920
from a model where we're giving people

00:19:14,940 --> 00:19:18,810
fish to a model where we're teaching

00:19:16,920 --> 00:19:20,370
people how to fish so you've heard the

00:19:18,810 --> 00:19:21,960
expression if you want to feed a man for

00:19:20,370 --> 00:19:23,040
a day you give him the fish if you want

00:19:21,960 --> 00:19:25,530
to feed him for the rest of his life you

00:19:23,040 --> 00:19:28,350
teach him how to fish the internal tools

00:19:25,530 --> 00:19:31,770
team needs to teach people how to fish

00:19:28,350 --> 00:19:34,530
right and they own a set of tools that

00:19:31,770 --> 00:19:36,720
serve as the bait the tackle the fishing

00:19:34,530 --> 00:19:38,160
line those are the tools you need in

00:19:36,720 --> 00:19:40,250
order to be able to fish and they have

00:19:38,160 --> 00:19:43,020
to teach people how to use those tools a

00:19:40,250 --> 00:19:45,390
release management team is just handing

00:19:43,020 --> 00:19:47,430
people fish the problem with that model

00:19:45,390 --> 00:19:49,350
is it doesn't scale it has inherent

00:19:47,430 --> 00:19:51,780
quality problems we know that that's not

00:19:49,350 --> 00:19:54,750
the right way to structure our build

00:19:51,780 --> 00:19:56,580
deploy process and when we apply DevOps

00:19:54,750 --> 00:19:58,230
to that process when we apply continuous

00:19:56,580 --> 00:19:59,520
improvement to it you're going to end up

00:19:58,230 --> 00:20:01,140
in this model

00:19:59,520 --> 00:20:02,460
right so at Ipreo it worked for us to

00:20:01,140 --> 00:20:04,200
just convert this team to an internal

00:20:02,460 --> 00:20:05,610
tools team and so they went about the

00:20:04,200 --> 00:20:08,520
process of seeing what are the gaps

00:20:05,610 --> 00:20:09,929
what's missing I can't teach someone how

00:20:08,520 --> 00:20:11,760
to fish if I don't have a fishing pole

00:20:09,929 --> 00:20:13,980
so I got to get that right so I can't

00:20:11,760 --> 00:20:15,390
teach teams how to manage their build

00:20:13,980 --> 00:20:16,920
process they don't have access to a

00:20:15,390 --> 00:20:18,630
build server so you have to make sure we

00:20:16,920 --> 00:20:20,790
have that in place we have to make sure

00:20:18,630 --> 00:20:23,040
that collaborative code development

00:20:20,790 --> 00:20:24,870
tools are there so we need to github or

00:20:23,040 --> 00:20:26,460
something like that you're gonna have to

00:20:24,870 --> 00:20:28,080
look at the landscape of your

00:20:26,460 --> 00:20:30,000
development environments and figure out

00:20:28,080 --> 00:20:31,559
if there are any gaps and make sure

00:20:30,000 --> 00:20:33,809
you've got a team in place that can own

00:20:31,559 --> 00:20:36,929
those things and continually make

00:20:33,809 --> 00:20:38,429
improvements to them people when I when

00:20:36,929 --> 00:20:40,290
I first joined Ipreo said who's gonna be

00:20:38,429 --> 00:20:43,050
on the DevOps team and I was like oh god

00:20:40,290 --> 00:20:45,150
we're not gonna have a DevOps team right

00:20:43,050 --> 00:20:47,340
that's not right if you have a DevOps

00:20:45,150 --> 00:20:49,830
team please don't I just don't do that

00:20:47,340 --> 00:20:51,330
that's not the right model you don't

00:20:49,830 --> 00:20:53,370
want a DevOps team how can you have

00:20:51,330 --> 00:20:55,320
continuous improvement of your code

00:20:53,370 --> 00:20:56,790
build and deploy process if only one

00:20:55,320 --> 00:20:59,370
group of people are thinking about that

00:20:56,790 --> 00:21:01,080
right so what you've got to do is you

00:20:59,370 --> 00:21:02,400
have to build a culture of continuous

00:21:01,080 --> 00:21:04,230
improvement across all your development

00:21:02,400 --> 00:21:06,480
teams my answer to those people was

00:21:04,230 --> 00:21:08,070
you're the DevOps engineer and you're

00:21:06,480 --> 00:21:09,540
the DevOps I'm like Oprah you're the

00:21:08,070 --> 00:21:12,300
DevOps that you hear they're all DevOps

00:21:09,540 --> 00:21:14,309
engineers so you have to teach these

00:21:12,300 --> 00:21:16,080
folks you have to set up processes we

00:21:14,309 --> 00:21:19,410
use things like guilds lunch and learns

00:21:16,080 --> 00:21:21,090
training opportunities book clubs we

00:21:19,410 --> 00:21:23,070
make sure and incentivize the kind of

00:21:21,090 --> 00:21:25,170
behaviors that we want to see right so

00:21:23,070 --> 00:21:27,210
if someone does something awesome like I

00:21:25,170 --> 00:21:28,890
see Zac out in the audience here Zac you

00:21:27,210 --> 00:21:31,080
rock when Zach does something really

00:21:28,890 --> 00:21:33,300
cool we try and go on slack we try and

00:21:31,080 --> 00:21:35,610
go in inside technology and we talk

00:21:33,300 --> 00:21:36,960
about how you know great look look at us

00:21:35,610 --> 00:21:38,670
look at this team over here doing zero

00:21:36,960 --> 00:21:40,080
downtime deployments now how many

00:21:38,670 --> 00:21:41,730
financial technology companies have

00:21:40,080 --> 00:21:44,070
products that deploy code during work

00:21:41,730 --> 00:21:45,600
hours with no downtime it's not very

00:21:44,070 --> 00:21:47,070
common but we're doing it and we're

00:21:45,600 --> 00:21:48,840
doing it because we're incentivizing the

00:21:47,070 --> 00:21:50,900
right behaviors and we're enabling those

00:21:48,840 --> 00:21:53,309
behaviors through an internal tools team

00:21:50,900 --> 00:21:55,620
the last thing I want to say about

00:21:53,309 --> 00:21:58,020
internal tools because I want to give

00:21:55,620 --> 00:22:00,420
you a hearty recommendation to make sure

00:21:58,020 --> 00:22:02,730
you use a service desk to track any

00:22:00,420 --> 00:22:06,030
issues or help requests with your tools

00:22:02,730 --> 00:22:09,630
team why I'll tell you a story so when

00:22:06,030 --> 00:22:10,950
we first rolled out Splunk a type REO so

00:22:09,630 --> 00:22:12,400
we use for all of our log monitoring

00:22:10,950 --> 00:22:14,080
aggregation

00:22:12,400 --> 00:22:16,779
yes you can yell me about that

00:22:14,080 --> 00:22:17,950
afterwards so we use Blanc and when

00:22:16,779 --> 00:22:19,870
actually our team's love it it's been a

00:22:17,950 --> 00:22:22,120
game changer for us when we first rolled

00:22:19,870 --> 00:22:24,220
it out there's this there was this idea

00:22:22,120 --> 00:22:25,419
that hey once we create the indexes

00:22:24,220 --> 00:22:27,159
they're not going to change that often

00:22:25,419 --> 00:22:28,929
right we're just going to create the

00:22:27,159 --> 00:22:30,640
indexes one time we're gonna hand them

00:22:28,929 --> 00:22:31,900
to our teams and that'll be that they're

00:22:30,640 --> 00:22:35,289
not gonna change that often and will

00:22:31,900 --> 00:22:37,480
create a helpdesk ticket in our tracking

00:22:35,289 --> 00:22:38,860
system in case anyone does need to make

00:22:37,480 --> 00:22:41,200
a change to it that can just use this

00:22:38,860 --> 00:22:43,900
form it'll be easy peasy we'll just make

00:22:41,200 --> 00:22:46,899
the change for him because we track that

00:22:43,900 --> 00:22:49,120
data we were able to monitor the

00:22:46,899 --> 00:22:51,940
frequency of those requests and we found

00:22:49,120 --> 00:22:55,090
out I was dead wrong about how our teams

00:22:51,940 --> 00:22:57,010
use indexes and Splunk and the rate of

00:22:55,090 --> 00:22:59,320
change for those indexes is way higher

00:22:57,010 --> 00:23:00,760
than I thought they were gonna be and I

00:22:59,320 --> 00:23:02,409
see Taulbee out there he's on he's on

00:23:00,760 --> 00:23:04,360
our team for the tools team right so

00:23:02,409 --> 00:23:06,549
Todd we watched the frequency of these

00:23:04,360 --> 00:23:08,529
requests coming in and we said wow it's

00:23:06,549 --> 00:23:10,809
sustaining it's really high it's not

00:23:08,529 --> 00:23:13,330
going down at all we need to figure out

00:23:10,809 --> 00:23:15,159
what's - about this so with the data you

00:23:13,330 --> 00:23:18,279
can say okay well how much time do we

00:23:15,159 --> 00:23:19,510
spend answering those tickets how much

00:23:18,279 --> 00:23:21,190
time is it going to take for us to

00:23:19,510 --> 00:23:23,860
automate it and now we just do some

00:23:21,190 --> 00:23:26,080
simple math is the ROI on automating

00:23:23,860 --> 00:23:28,750
that process worth it is it there

00:23:26,080 --> 00:23:31,090
obviously it was for us so we went and

00:23:28,750 --> 00:23:33,279
set up a github repository we use get AB

00:23:31,090 --> 00:23:35,110
Enterprise and now if a development team

00:23:33,279 --> 00:23:36,279
needs to make a change to an index they

00:23:35,110 --> 00:23:38,590
just make the code change themselves

00:23:36,279 --> 00:23:41,110
they submit a pull request our team does

00:23:38,590 --> 00:23:43,299
a code review if it looks good we just

00:23:41,110 --> 00:23:45,039
accept the code review it goes into our

00:23:43,299 --> 00:23:46,870
build system and that build system

00:23:45,039 --> 00:23:48,279
deploys the config changes out to Splunk

00:23:46,870 --> 00:23:50,679
that evening because it needs downtime

00:23:48,279 --> 00:23:52,409
as that has been a game changer for us

00:23:50,679 --> 00:23:55,270
right so now we don't spend time

00:23:52,409 --> 00:23:56,559
creating indexes or making index changes

00:23:55,270 --> 00:23:59,200
for our teams that can do most of that

00:23:56,559 --> 00:24:00,399
work themselves and now we can use that

00:23:59,200 --> 00:24:02,500
time on something that's a lot more

00:24:00,399 --> 00:24:03,940
valuable to the rest of Ipreo if you

00:24:02,500 --> 00:24:05,500
don't have that data you won't be able

00:24:03,940 --> 00:24:08,260
to make intelligent decisions about how

00:24:05,500 --> 00:24:09,010
you evolve the self-service aspect of

00:24:08,260 --> 00:24:11,020
your tools

00:24:09,010 --> 00:24:12,970
none of that stuff comes for free

00:24:11,020 --> 00:24:14,500
automating any of these things takes an

00:24:12,970 --> 00:24:16,240
investment and you need to have the

00:24:14,500 --> 00:24:19,380
right kind of information at hand to

00:24:16,240 --> 00:24:19,380
make an intelligent trade-off

00:24:20,720 --> 00:24:25,919
just to share kind of what our internal

00:24:23,279 --> 00:24:28,409
tools structure looks like this is the

00:24:25,919 --> 00:24:29,789
tools that we use a type Rio our

00:24:28,409 --> 00:24:32,429
developers have found it really helpful

00:24:29,789 --> 00:24:34,080
to have a resource like this chart so

00:24:32,429 --> 00:24:35,940
new developers come on board and they're

00:24:34,080 --> 00:24:37,370
curious about what do I have what are

00:24:35,940 --> 00:24:40,200
the tools in my toolbox what can I use

00:24:37,370 --> 00:24:41,610
how do they work together we can say hey

00:24:40,200 --> 00:24:44,460
go to confluence and look at this

00:24:41,610 --> 00:24:47,480
beautiful chart and click on those icons

00:24:44,460 --> 00:24:47,480
and you can learn more about it

00:24:50,920 --> 00:24:57,460
yes we use TFS I'm not I'm not ashamed

00:24:55,170 --> 00:25:01,800
we do thousands of deployments a month

00:24:57,460 --> 00:25:04,330
of TFS it works works well alright let's

00:25:01,800 --> 00:25:06,070
talk about site reliability engineering

00:25:04,330 --> 00:25:07,420
as our last point so we've talked about

00:25:06,070 --> 00:25:08,560
data classification we've talked about

00:25:07,420 --> 00:25:11,230
risk management we've talked about

00:25:08,560 --> 00:25:13,210
building an internal tools team what's

00:25:11,230 --> 00:25:15,010
reliability engineering so site

00:25:13,210 --> 00:25:19,210
reliability engineering is a concept

00:25:15,010 --> 00:25:22,780
that Google created and published a book

00:25:19,210 --> 00:25:24,520
about in 2004 Ben trainer wrote it it

00:25:22,780 --> 00:25:26,530
was a pretty game-changing book at the

00:25:24,520 --> 00:25:28,270
time Google was being very transparent

00:25:26,530 --> 00:25:30,910
about how they managed their their teams

00:25:28,270 --> 00:25:33,850
and how they managed their products that

00:25:30,910 --> 00:25:36,730
predated the term DevOps by about four

00:25:33,850 --> 00:25:39,550
years three or four or five years when

00:25:36,730 --> 00:25:40,990
DevOps became a fad Google engineers

00:25:39,550 --> 00:25:42,700
sort of scratched their heads and said

00:25:40,990 --> 00:25:44,590
who wrote a book about this five years

00:25:42,700 --> 00:25:45,940
ago like why is this a thing this isn't

00:25:44,590 --> 00:25:48,670
a thing DevOps is not a thing it's just

00:25:45,940 --> 00:25:51,220
how you do your job which I find kind of

00:25:48,670 --> 00:25:55,030
funny so what is site reliability

00:25:51,220 --> 00:25:57,970
engineering traditionally the purpose of

00:25:55,030 --> 00:25:59,680
site reliability engineering is to make

00:25:57,970 --> 00:26:03,280
sure that the products you're building

00:25:59,680 --> 00:26:06,160
will be able to hit a certain uptime

00:26:03,280 --> 00:26:07,690
goal okay so you have to look at the

00:26:06,160 --> 00:26:09,430
product you're building the team has to

00:26:07,690 --> 00:26:10,900
decide based on the market make sure the

00:26:09,430 --> 00:26:13,420
customers and the product that they're

00:26:10,900 --> 00:26:15,400
deploying how much downtime can we

00:26:13,420 --> 00:26:18,730
afford in a given year you come up with

00:26:15,400 --> 00:26:20,890
some number 99.999999 times infinity

00:26:18,730 --> 00:26:22,690
right whatever that is that translates

00:26:20,890 --> 00:26:24,970
to a certain number of minutes that you

00:26:22,690 --> 00:26:27,430
can be down the site reliability

00:26:24,970 --> 00:26:29,080
engineering model says you can spin

00:26:27,430 --> 00:26:30,730
those minutes however you want it's like

00:26:29,080 --> 00:26:32,110
a bank account right like when I went to

00:26:30,730 --> 00:26:33,370
college I had a certain number of

00:26:32,110 --> 00:26:34,720
demerits that I could get before I got

00:26:33,370 --> 00:26:36,910
thrown out I was like a bank account I

00:26:34,720 --> 00:26:38,890
can just spend them right so this is how

00:26:36,910 --> 00:26:40,660
these teams think about their downtime

00:26:38,890 --> 00:26:42,910
now they're they call them error points

00:26:40,660 --> 00:26:44,800
so sre will work with the team to help

00:26:42,910 --> 00:26:47,830
them figure out how many error points do

00:26:44,800 --> 00:26:50,050
you get in a year then sre works with

00:26:47,830 --> 00:26:51,790
the team to get really deep on how they

00:26:50,050 --> 00:26:53,890
built their product they're gonna talk

00:26:51,790 --> 00:26:55,660
about high availability disaster

00:26:53,890 --> 00:26:57,400
recovery they're gonna talk they're

00:26:55,660 --> 00:26:58,720
gonna have the team demonstrate all the

00:26:57,400 --> 00:27:00,340
different tests that they've done to

00:26:58,720 --> 00:27:02,830
make sure that things are actually set

00:27:00,340 --> 00:27:04,600
up the way they said they were set up at

00:27:02,830 --> 00:27:06,550
the end of the the exercise

00:27:04,600 --> 00:27:08,980
the SRE team is going to say based on

00:27:06,550 --> 00:27:10,390
all the stuff that we've looked at we

00:27:08,980 --> 00:27:13,420
calculate that you're going to incur

00:27:10,390 --> 00:27:16,210
more error points in a year then you say

00:27:13,420 --> 00:27:18,100
you should be able to handle so you

00:27:16,210 --> 00:27:20,320
don't get to go live you actually need

00:27:18,100 --> 00:27:23,380
to fix this list of things first

00:27:20,320 --> 00:27:24,940
so sre acts as a gate before a product

00:27:23,380 --> 00:27:28,830
can go live and again the focus

00:27:24,940 --> 00:27:31,570
traditionally is uptime and reliability

00:27:28,830 --> 00:27:33,760
another nice side benefit to sre

00:27:31,570 --> 00:27:36,820
traditionally is you have a consistency

00:27:33,760 --> 00:27:38,830
in practice across products okay so you

00:27:36,820 --> 00:27:40,300
probably won't have one team doing

00:27:38,830 --> 00:27:42,370
backups dramatically different than

00:27:40,300 --> 00:27:44,590
another team you're probably going to

00:27:42,370 --> 00:27:47,200
have these teams using a common backup

00:27:44,590 --> 00:27:48,880
solution and that's a good thing you

00:27:47,200 --> 00:27:50,680
don't necessarily want lots and lots and

00:27:48,880 --> 00:27:54,850
lots of variants across your teams for

00:27:50,680 --> 00:27:59,860
that sort of thing now how does sre map

00:27:54,850 --> 00:28:02,710
into the enterprise my proposal is that

00:27:59,860 --> 00:28:04,990
we add in a couple of key things to make

00:28:02,710 --> 00:28:07,750
sre work for an enterprise software

00:28:04,990 --> 00:28:10,300
company namely we're gonna talk about

00:28:07,750 --> 00:28:12,580
compliance monitoring and control

00:28:10,300 --> 00:28:14,770
objective owners all right so what's

00:28:12,580 --> 00:28:18,210
compliance monitoring tools how many of

00:28:14,770 --> 00:28:20,640
you guys have seen demos on AWS config

00:28:18,210 --> 00:28:24,940
anyone know yeah a few

00:28:20,640 --> 00:28:27,760
what AWS config does is pretty slick if

00:28:24,940 --> 00:28:30,040
you have resources running in AWS AWS

00:28:27,760 --> 00:28:31,780
config can check to make sure that the

00:28:30,040 --> 00:28:35,260
way you've deployed those resources meet

00:28:31,780 --> 00:28:37,510
certain criteria and you can wire AWS

00:28:35,260 --> 00:28:39,700
config up into cloud watch you can get

00:28:37,510 --> 00:28:43,210
monitoring on those things you can also

00:28:39,700 --> 00:28:45,850
wire it up into lambdas and you can use

00:28:43,210 --> 00:28:47,110
lambdas to nuke those arrant resources

00:28:45,850 --> 00:28:50,680
from orbit it's the only way to be sure

00:28:47,110 --> 00:28:52,390
right so the nice thing when you use AWS

00:28:50,680 --> 00:28:54,850
config you've got this continual

00:28:52,390 --> 00:28:56,110
compliance monitoring in place that's

00:28:54,850 --> 00:28:58,510
checking to make sure no one ever

00:28:56,110 --> 00:29:00,210
violates the the rules and if they

00:28:58,510 --> 00:29:02,020
violate certain rules you can actually

00:29:00,210 --> 00:29:03,670
automatically roll those things back

00:29:02,020 --> 00:29:04,630
there's some really great online demos

00:29:03,670 --> 00:29:08,170
that show

00:29:04,630 --> 00:29:10,960
for example someone deploys an s3 object

00:29:08,170 --> 00:29:12,340
and it's public so maybe there's a rule

00:29:10,960 --> 00:29:14,650
you have in your organization that says

00:29:12,340 --> 00:29:16,570
no you can't have public s3 objects I

00:29:14,650 --> 00:29:18,429
don't care what it is and what the

00:29:16,570 --> 00:29:20,169
config wired into a lambda

00:29:18,429 --> 00:29:22,299
immediately changes the permissioning

00:29:20,169 --> 00:29:24,429
scheme of that object and sets it to

00:29:22,299 --> 00:29:26,200
private which would be kind of fun that

00:29:24,429 --> 00:29:27,549
people were trying to continually upload

00:29:26,200 --> 00:29:30,129
public things and can't figure out why

00:29:27,549 --> 00:29:33,100
they can't download it so what's a

00:29:30,129 --> 00:29:34,779
control objective owner then control

00:29:33,100 --> 00:29:36,429
objective owners if we think back

00:29:34,779 --> 00:29:39,999
remember the bedrock of this whole thing

00:29:36,429 --> 00:29:42,549
is data classification on the far right

00:29:39,999 --> 00:29:44,649
side of our matrix we had a list of

00:29:42,549 --> 00:29:47,769
controls we had some things we had rules

00:29:44,649 --> 00:29:50,379
about encryption so control objective

00:29:47,769 --> 00:29:53,499
owner just means you have someone in

00:29:50,379 --> 00:29:55,720
place who's checking that stuff right

00:29:53,499 --> 00:29:57,429
again we have a conflict of interest if

00:29:55,720 --> 00:29:59,409
you ask the development team to be a

00:29:57,429 --> 00:30:01,059
control objective owner so if your

00:29:59,409 --> 00:30:02,710
customer comes to you and says well it's

00:30:01,059 --> 00:30:04,960
great that you have these rules about

00:30:02,710 --> 00:30:07,240
encryption but how can you prove you're

00:30:04,960 --> 00:30:09,159
following them the answer to that

00:30:07,240 --> 00:30:11,860
question is through a control objective

00:30:09,159 --> 00:30:15,340
owner and my proposal then is we adapt

00:30:11,860 --> 00:30:17,889
sre to put compliance monitoring in

00:30:15,340 --> 00:30:19,539
place and be the control objective owner

00:30:17,889 --> 00:30:23,320
by doing those two things you've

00:30:19,539 --> 00:30:24,759
satisfied what most regulated customers

00:30:23,320 --> 00:30:27,759
are going to look for when they're

00:30:24,759 --> 00:30:30,429
checking your practices I'm gonna give

00:30:27,759 --> 00:30:33,490
you three examples about how this could

00:30:30,429 --> 00:30:36,730
work number one let's talk about

00:30:33,490 --> 00:30:38,049
patching this is a really big deal you

00:30:36,730 --> 00:30:40,149
may or may not have heard of this thing

00:30:38,049 --> 00:30:41,769
called Equifax over the last couple of

00:30:40,149 --> 00:30:44,710
months sort of a big deal

00:30:41,769 --> 00:30:47,139
right so in the Equifax example this is

00:30:44,710 --> 00:30:50,080
a really intriguing case for me because

00:30:47,139 --> 00:30:53,110
patching is actually two things patching

00:30:50,080 --> 00:30:55,179
is operating system-level patches so you

00:30:53,110 --> 00:30:57,039
know if you use Microsoft like we do you

00:30:55,179 --> 00:30:59,350
get this really fun email once a month

00:30:57,039 --> 00:31:01,330
with like 400 things in it that are

00:30:59,350 --> 00:31:04,720
still broken about Windows that we have

00:31:01,330 --> 00:31:06,369
to fix every month so there's typically

00:31:04,720 --> 00:31:08,440
in an enterprise company like ours

00:31:06,369 --> 00:31:11,259
you've got some operations focus team

00:31:08,440 --> 00:31:13,480
whose job is to monitor that stuff and

00:31:11,259 --> 00:31:15,070
roll out patches and in all honesty

00:31:13,480 --> 00:31:16,809
rolling out operating system patches is

00:31:15,070 --> 00:31:18,190
not that big a deal anymore he's pretty

00:31:16,809 --> 00:31:20,019
easy to do we've been doing it for

00:31:18,190 --> 00:31:22,600
however long Microsoft has been around

00:31:20,019 --> 00:31:23,950
so we've got that problem solved it's

00:31:22,600 --> 00:31:25,869
the other side of the problem that's the

00:31:23,950 --> 00:31:28,539
tricky part and that's the application

00:31:25,869 --> 00:31:30,609
layer and that's what bit equifax the

00:31:28,539 --> 00:31:32,110
equifax example their vulnerability was

00:31:30,609 --> 00:31:33,970
in the application itself that

00:31:32,110 --> 00:31:35,860
used a framework to build their

00:31:33,970 --> 00:31:38,530
application and that framework had a

00:31:35,860 --> 00:31:40,360
flaw in it an operating system focused

00:31:38,530 --> 00:31:42,250
team that's focusing on patches would

00:31:40,360 --> 00:31:43,600
never even know about that it's not

00:31:42,250 --> 00:31:45,250
gonna show up in your patching tools

00:31:43,600 --> 00:31:47,350
it's not going to show up in any of the

00:31:45,250 --> 00:31:49,390
stuff that we typically use wsus doesn't

00:31:47,350 --> 00:31:51,490
know about it so how would they even

00:31:49,390 --> 00:31:53,620
have known right and then how do you

00:31:51,490 --> 00:31:55,750
remediated because I can't push out that

00:31:53,620 --> 00:31:58,240
kind of patch with patch link or with

00:31:55,750 --> 00:32:01,150
wsus it doesn't work the application

00:31:58,240 --> 00:32:02,530
team has to pull that patch in recompile

00:32:01,150 --> 00:32:03,730
their software and do a deployment

00:32:02,530 --> 00:32:05,860
that's the only way to remediate that

00:32:03,730 --> 00:32:07,690
patch so in a traditional enterprise

00:32:05,860 --> 00:32:10,600
company those roles are completely split

00:32:07,690 --> 00:32:12,940
the tools don't work together and that

00:32:10,600 --> 00:32:16,750
disconnect is what caused Equifax a leak

00:32:12,940 --> 00:32:19,480
143 million records to the public in the

00:32:16,750 --> 00:32:21,010
sre world we would do it differently we

00:32:19,480 --> 00:32:22,630
would have compliance monitoring in

00:32:21,010 --> 00:32:24,549
place that covered both ends of the

00:32:22,630 --> 00:32:26,049
spectrum we would make sure that the

00:32:24,549 --> 00:32:30,150
application team when they built their

00:32:26,049 --> 00:32:32,559
solution integrated with our application

00:32:30,150 --> 00:32:34,270
vulnerability monitoring system so maybe

00:32:32,559 --> 00:32:36,520
we're using artifactory x-square or

00:32:34,270 --> 00:32:38,350
using black duck software but that's a

00:32:36,520 --> 00:32:40,150
part of the process of going live is

00:32:38,350 --> 00:32:46,360
validating that your integrated with

00:32:40,150 --> 00:32:50,890
those tools another example backups this

00:32:46,360 --> 00:32:53,250
is a fun one oh my god is that Rachel hi

00:32:50,890 --> 00:32:53,250
Rachel

00:32:53,400 --> 00:33:00,370
backups so I haven't seen Rachel in

00:32:56,080 --> 00:33:01,600
years it's good to see backup system so

00:33:00,370 --> 00:33:03,640
this is one that our customers asked us

00:33:01,600 --> 00:33:05,350
about how do you do backups and in a

00:33:03,640 --> 00:33:06,700
hybrid model when we're doing backups in

00:33:05,350 --> 00:33:09,070
the data center and we're doing backups

00:33:06,700 --> 00:33:10,690
on public cloud having an inconsistent

00:33:09,070 --> 00:33:12,429
answer does not make your customers

00:33:10,690 --> 00:33:15,669
happy you need to have some kind of

00:33:12,429 --> 00:33:17,169
consistency by making sure that sre sits

00:33:15,669 --> 00:33:19,059
in the middle of all this you've got a

00:33:17,169 --> 00:33:21,520
consistent window into how you are

00:33:19,059 --> 00:33:24,340
handling patching there's kind of two

00:33:21,520 --> 00:33:26,799
parts of this again you've got what are

00:33:24,340 --> 00:33:28,720
the rules how do I have to be to do

00:33:26,799 --> 00:33:30,700
backups and then how can I prove that

00:33:28,720 --> 00:33:32,260
I'm actually doing backups and the sre

00:33:30,700 --> 00:33:36,220
world what we would do is we would have

00:33:32,260 --> 00:33:37,570
a solution in place that does compliance

00:33:36,220 --> 00:33:40,000
monitoring the checks to make sure that

00:33:37,570 --> 00:33:41,800
every ec2 instance for example has a tag

00:33:40,000 --> 00:33:44,380
on it and the tag might be something

00:33:41,800 --> 00:33:45,490
like backup policy - class 1 backup

00:33:44,380 --> 00:33:48,190
policy - class 2

00:33:45,490 --> 00:33:49,630
you get the idea so we'd be checking to

00:33:48,190 --> 00:33:52,240
make sure that instances always have

00:33:49,630 --> 00:33:54,400
those tags sre would build a backup

00:33:52,240 --> 00:33:56,830
solution that would then apply the

00:33:54,400 --> 00:33:59,170
appropriate backup procedure to those

00:33:56,830 --> 00:34:01,540
instances so if you're dealing with your

00:33:59,170 --> 00:34:04,179
class 1 and your classification document

00:34:01,540 --> 00:34:06,460
says this is customer confidential data

00:34:04,179 --> 00:34:08,290
it has to be backed up four times a day

00:34:06,460 --> 00:34:11,169
and the retention needs to be for 12

00:34:08,290 --> 00:34:12,850
months the nice thing is sre can build

00:34:11,169 --> 00:34:13,810
that one time and your team's consume it

00:34:12,850 --> 00:34:16,210
and they don't have to deal with it ever

00:34:13,810 --> 00:34:18,550
again and if the regulations change like

00:34:16,210 --> 00:34:20,110
they're doing with GDP I you don't have

00:34:18,550 --> 00:34:22,270
to go back to your application teams and

00:34:20,110 --> 00:34:23,860
ask them to change anything sre just

00:34:22,270 --> 00:34:25,389
rolls out the change to the backup

00:34:23,860 --> 00:34:27,669
procedure they validate that it's

00:34:25,389 --> 00:34:29,409
working correctly and you're good so now

00:34:27,669 --> 00:34:31,540
our retention goes from 12 months to

00:34:29,409 --> 00:34:33,220
three because GDP I says you can't hold

00:34:31,540 --> 00:34:35,350
it longer than that or whatever the case

00:34:33,220 --> 00:34:39,970
may be we haven't had to impact our

00:34:35,350 --> 00:34:41,379
development teams and the last example

00:34:39,970 --> 00:34:43,899
I'll give you for how SRA would add a

00:34:41,379 --> 00:34:45,639
lot of value is in something like key

00:34:43,899 --> 00:34:47,440
rotation so think about secrets

00:34:45,639 --> 00:34:48,850
management and your company do you

00:34:47,440 --> 00:34:50,260
really want every application

00:34:48,850 --> 00:34:52,090
development team to come up with their

00:34:50,260 --> 00:34:54,340
own solution for how to manage secrets

00:34:52,090 --> 00:34:56,169
do you really want every app dev team to

00:34:54,340 --> 00:34:57,700
stand up vault and figure out all the

00:34:56,169 --> 00:35:00,460
complexities involved with running vault

00:34:57,700 --> 00:35:02,020
no you do not you have wasted a ton of

00:35:00,460 --> 00:35:04,240
money in time if you're asking your dev

00:35:02,020 --> 00:35:06,850
teams to do that if you don't give them

00:35:04,240 --> 00:35:08,410
that solution all we're gonna do is put

00:35:06,850 --> 00:35:10,000
their configs and they're gonna put them

00:35:08,410 --> 00:35:11,500
straight in kubernetes they're gonna put

00:35:10,000 --> 00:35:13,300
them in their source code god forbid

00:35:11,500 --> 00:35:14,740
that kind of stuff is going to happen

00:35:13,300 --> 00:35:16,510
because you haven't given them a better

00:35:14,740 --> 00:35:18,340
solution and they're not going to want

00:35:16,510 --> 00:35:20,800
to incur the cost of setting their own

00:35:18,340 --> 00:35:23,410
stuff over and over again again if your

00:35:20,800 --> 00:35:26,170
needs change in terms of how often to do

00:35:23,410 --> 00:35:28,030
key rotations let's say right now your

00:35:26,170 --> 00:35:30,520
customers and regulations require you do

00:35:28,030 --> 00:35:32,140
it once every 30 days let's say that the

00:35:30,520 --> 00:35:34,780
regulation changes and now you have to

00:35:32,140 --> 00:35:36,550
do it more often by putting one team in

00:35:34,780 --> 00:35:38,470
place that owns that as a service or a

00:35:36,550 --> 00:35:40,030
product to all your app dev teams you

00:35:38,470 --> 00:35:41,740
can make changes to those types of

00:35:40,030 --> 00:35:46,780
policies and not impact all your

00:35:41,740 --> 00:35:51,490
development groups couple of like do's

00:35:46,780 --> 00:35:53,320
and don'ts of how to do this good things

00:35:51,490 --> 00:35:54,880
to do make sure you have a development

00:35:53,320 --> 00:35:57,130
playbook what's the development playbook

00:35:54,880 --> 00:35:58,760
it's just some documentation that helps

00:35:57,130 --> 00:36:00,800
dev teams get started

00:35:58,760 --> 00:36:02,960
it's a living set of documentation of

00:36:00,800 --> 00:36:04,940
best practices about how to do

00:36:02,960 --> 00:36:07,190
development at your company you're gonna

00:36:04,940 --> 00:36:09,080
have people coming on board rolling off

00:36:07,190 --> 00:36:10,820
of projects those things are going to

00:36:09,080 --> 00:36:12,920
change teaching your folks how to go to

00:36:10,820 --> 00:36:15,470
one place and stay up-to-date about the

00:36:12,920 --> 00:36:17,450
best ways to do things or not do things

00:36:15,470 --> 00:36:19,550
is going to save a lot of friction in

00:36:17,450 --> 00:36:20,720
your development groups that said you

00:36:19,550 --> 00:36:22,850
should allow deviation from that

00:36:20,720 --> 00:36:24,590
playbook your reliability engineering

00:36:22,850 --> 00:36:27,170
group should not be dogmatic about

00:36:24,590 --> 00:36:29,450
following every do and don't in the

00:36:27,170 --> 00:36:32,330
playbook it should be principle focused

00:36:29,450 --> 00:36:34,490
okay so talk about why we need to do

00:36:32,330 --> 00:36:36,590
backups the way that we do backups don't

00:36:34,490 --> 00:36:38,510
give them like a specific thing that

00:36:36,590 --> 00:36:39,980
they have to do it this way backups is a

00:36:38,510 --> 00:36:42,350
really poor example let's talk about

00:36:39,980 --> 00:36:43,940
high availability right so maybe in the

00:36:42,350 --> 00:36:46,040
the playbook you talk about high

00:36:43,940 --> 00:36:48,830
availability and how to achieve that in

00:36:46,040 --> 00:36:50,510
Amazon or in your data centers and you

00:36:48,830 --> 00:36:52,670
give examples about auto scaling groups

00:36:50,510 --> 00:36:54,980
and best practices for cluster sizes

00:36:52,670 --> 00:36:57,500
your team may come to you with a better

00:36:54,980 --> 00:36:59,120
solution should be open to that and the

00:36:57,500 --> 00:37:00,950
nice thing is if they prove that they do

00:36:59,120 --> 00:37:02,510
it better roll those changes into the

00:37:00,950 --> 00:37:05,230
PlayBook so everybody else gets to reap

00:37:02,510 --> 00:37:05,230
those benefits later

00:37:06,310 --> 00:37:10,280
make sure your sre group is actually an

00:37:08,870 --> 00:37:11,990
engineering group that's creating

00:37:10,280 --> 00:37:14,420
solutions to these common problems if

00:37:11,990 --> 00:37:16,250
you don't have folks on your sre group

00:37:14,420 --> 00:37:19,040
that can actually maintain a vault

00:37:16,250 --> 00:37:21,500
infrastructure or a kubernetes focused

00:37:19,040 --> 00:37:22,580
infrastructure and help your engineering

00:37:21,500 --> 00:37:25,000
groups keep those things up and running

00:37:22,580 --> 00:37:27,350
you're probably not doing this right

00:37:25,000 --> 00:37:30,920
you should be providing compliance as a

00:37:27,350 --> 00:37:32,810
product to your teams make sure you

00:37:30,920 --> 00:37:36,170
don't make that internal compliance

00:37:32,810 --> 00:37:38,510
check opaque it's not a black box okay

00:37:36,170 --> 00:37:41,180
it's the sre is not staffed with

00:37:38,510 --> 00:37:43,940
security experts and no one else it's

00:37:41,180 --> 00:37:46,130
not a form that people fill out so I

00:37:43,940 --> 00:37:47,660
don't create a service internally that I

00:37:46,130 --> 00:37:49,580
want to launch and then I go to some

00:37:47,660 --> 00:37:52,520
confluence page and I fill out a form so

00:37:49,580 --> 00:37:55,340
you do backups yes do you to you know do

00:37:52,520 --> 00:37:57,020
what's your age are you a che yeah have

00:37:55,340 --> 00:37:59,210
you done a disaster reliability yeah I'm

00:37:57,020 --> 00:38:00,320
sure I've done zester check sure right

00:37:59,210 --> 00:38:02,210
that's what's going to happen if you

00:38:00,320 --> 00:38:04,130
make it that type of process sorry

00:38:02,210 --> 00:38:05,750
should be a collaborative team that's

00:38:04,130 --> 00:38:09,740
partnering with your development groups

00:38:05,750 --> 00:38:11,750
to help them build awesome solutions the

00:38:09,740 --> 00:38:12,740
flow looks kind of like this this is a

00:38:11,750 --> 00:38:14,450
high level we're going to double

00:38:12,740 --> 00:38:17,060
click on this in a second dev teams

00:38:14,450 --> 00:38:18,260
develop against the playbook you go

00:38:17,060 --> 00:38:20,660
through an operational assurance

00:38:18,260 --> 00:38:23,900
procedure with reliability engineering

00:38:20,660 --> 00:38:24,860
that should be pretty smooth and then

00:38:23,900 --> 00:38:26,840
once you do that

00:38:24,860 --> 00:38:29,420
the team's ready for production no one

00:38:26,840 --> 00:38:31,070
is using it yet necessarily and then

00:38:29,420 --> 00:38:32,810
you're going to go through third-party

00:38:31,070 --> 00:38:36,700
certification so you might then go get a

00:38:32,810 --> 00:38:38,869
stop to FedRAMP whatever you need to do

00:38:36,700 --> 00:38:40,130
let's walk through this in a little bit

00:38:38,869 --> 00:38:40,940
more detail this is what it should

00:38:40,130 --> 00:38:43,580
actually look like

00:38:40,940 --> 00:38:45,350
first things first development team

00:38:43,580 --> 00:38:46,820
hopefully you can read that does some

00:38:45,350 --> 00:38:48,230
initial planning they do an architecture

00:38:46,820 --> 00:38:49,250
check they want to build the solution

00:38:48,230 --> 00:38:51,350
and they're gonna think about the best

00:38:49,250 --> 00:38:52,760
way to do it they might come to the

00:38:51,350 --> 00:38:55,250
conclusion that the best way to do it is

00:38:52,760 --> 00:38:57,530
to deploy it on Amazon great no problem

00:38:55,250 --> 00:38:59,000
now we're going to sit down with our

00:38:57,530 --> 00:39:01,220
account managers who understand

00:38:59,000 --> 00:39:02,990
customers and the landscape of the

00:39:01,220 --> 00:39:05,150
market where we're going to be deploying

00:39:02,990 --> 00:39:07,340
that product we're gonna sit down with

00:39:05,150 --> 00:39:09,440
sre and the dev team and we're going to

00:39:07,340 --> 00:39:11,119
take a look at what that means what does

00:39:09,440 --> 00:39:14,480
it actually mean to build this solution

00:39:11,119 --> 00:39:16,930
for these customers on public cloud so

00:39:14,480 --> 00:39:18,980
sre has a certain bar that they set

00:39:16,930 --> 00:39:20,630
account management might know right away

00:39:18,980 --> 00:39:22,070
that's not high enough but there's going

00:39:20,630 --> 00:39:24,140
to be some other stuff that we have to

00:39:22,070 --> 00:39:26,540
do and so early on in the development

00:39:24,140 --> 00:39:28,520
process we start to become aware of any

00:39:26,540 --> 00:39:30,260
of these extra type of certifications or

00:39:28,520 --> 00:39:32,660
checks or features that we need to build

00:39:30,260 --> 00:39:34,490
in the team goes off and they start

00:39:32,660 --> 00:39:37,460
doing that stuff right there doing

00:39:34,490 --> 00:39:38,720
playbook based development at the same

00:39:37,460 --> 00:39:40,550
time account management starts

00:39:38,720 --> 00:39:41,869
socializing with your customers that

00:39:40,550 --> 00:39:45,080
this change is coming down the pipeline

00:39:41,869 --> 00:39:47,060
we do not want to be ready to launch a

00:39:45,080 --> 00:39:49,220
product and then tell our customers

00:39:47,060 --> 00:39:51,230
about it this big architectural change

00:39:49,220 --> 00:39:53,690
we're about to roll out never use public

00:39:51,230 --> 00:39:55,280
cloud before let's just go ahead and

00:39:53,690 --> 00:39:56,270
launch this thing and we'll you know

00:39:55,280 --> 00:39:57,650
we'll tell them about a couple days

00:39:56,270 --> 00:39:59,180
ahead of time that's not going to go

00:39:57,650 --> 00:40:01,430
over well if you're in a regulated

00:39:59,180 --> 00:40:02,840
market with these highly critical

00:40:01,430 --> 00:40:04,609
services that you sell to your customers

00:40:02,840 --> 00:40:05,900
so hopefully your account managers have

00:40:04,609 --> 00:40:07,580
good relationships and they can start

00:40:05,900 --> 00:40:12,020
socializing these things early in the

00:40:07,580 --> 00:40:13,730
process those inputs feed into the

00:40:12,020 --> 00:40:15,830
internal certification some people call

00:40:13,730 --> 00:40:18,140
operational assurance this is that

00:40:15,830 --> 00:40:19,609
process where sre sits down with the dev

00:40:18,140 --> 00:40:23,770
team and they make them prove everything

00:40:19,609 --> 00:40:23,770
is actually true that they say is true

00:40:23,780 --> 00:40:30,110
now the team can go live but no one's

00:40:27,210 --> 00:40:32,310
using it yet depending on the service

00:40:30,110 --> 00:40:33,480
we're going to revise the playbook with

00:40:32,310 --> 00:40:36,720
any innovations that they may have

00:40:33,480 --> 00:40:38,730
discovered now we're going to go talk to

00:40:36,720 --> 00:40:41,130
customers we're gonna go get a sock -

00:40:38,730 --> 00:40:42,360
we're gonna go to our our customers in

00:40:41,130 --> 00:40:45,060
these regulated markets and we're going

00:40:42,360 --> 00:40:47,460
to start showing them this new thing the

00:40:45,060 --> 00:40:48,840
customer may have their own go-live

00:40:47,460 --> 00:40:50,970
checklist that they want to go through

00:40:48,840 --> 00:40:53,430
with us that's okay this is a day and

00:40:50,970 --> 00:40:54,960
age that we live in sre is going to be

00:40:53,430 --> 00:40:57,510
the ones that work with the customers to

00:40:54,960 --> 00:40:59,340
work through that process why because

00:40:57,510 --> 00:41:02,040
now the dev team can go back and start

00:40:59,340 --> 00:41:04,320
adding in 2.0 features so we hit our MVP

00:41:02,040 --> 00:41:06,450
to go live but there's still lots of

00:41:04,320 --> 00:41:07,950
other work to be done so the team has

00:41:06,450 --> 00:41:09,420
been getting some stats about their

00:41:07,950 --> 00:41:10,650
deployment process to prod they're

00:41:09,420 --> 00:41:11,880
making some improvements there and

00:41:10,650 --> 00:41:13,530
they're adding in their next round of

00:41:11,880 --> 00:41:15,870
features while we start getting the

00:41:13,530 --> 00:41:17,280
green lights from customers as we get

00:41:15,870 --> 00:41:18,930
those things we're going to turn the

00:41:17,280 --> 00:41:21,570
feature on for them or the new service

00:41:18,930 --> 00:41:23,400
on for them so this is implying a really

00:41:21,570 --> 00:41:24,570
important technical capability may or

00:41:23,400 --> 00:41:27,330
may not have and that is feature

00:41:24,570 --> 00:41:30,150
toggling you have to be able to launch

00:41:27,330 --> 00:41:32,370
features to production with no impact or

00:41:30,150 --> 00:41:34,110
change to your customers you cannot do

00:41:32,370 --> 00:41:37,140
continuous deployment if you don't have

00:41:34,110 --> 00:41:38,790
that in place okay there is no such

00:41:37,140 --> 00:41:40,650
thing as continuous deployment if every

00:41:38,790 --> 00:41:41,970
time you deploy your customers are gonna

00:41:40,650 --> 00:41:44,130
see whatever change you just made you

00:41:41,970 --> 00:41:46,370
can't do it like that okay there's three

00:41:44,130 --> 00:41:48,570
legs to that stool feature toggling

00:41:46,370 --> 00:41:50,160
really great automation and test

00:41:48,570 --> 00:41:51,360
coverage and then the third thing is

00:41:50,160 --> 00:41:53,220
being able to deploy code without

00:41:51,360 --> 00:41:54,840
downtime you got those three things you

00:41:53,220 --> 00:41:55,950
can do continuous deployment if you

00:41:54,840 --> 00:42:02,760
don't have all three of those things you

00:41:55,950 --> 00:42:04,980
can't okay that's it I am really proud

00:42:02,760 --> 00:42:08,550
of you guys the vast majority of you

00:42:04,980 --> 00:42:13,500
stayed for the whole thing it's like way

00:42:08,550 --> 00:42:15,210
late in the day well done I'll open it

00:42:13,500 --> 00:42:19,010
up for questions if anyone would like to

00:42:15,210 --> 00:42:19,010
throw anything or ask questions

00:42:20,190 --> 00:42:22,789
yeah

00:42:25,220 --> 00:42:29,740
mm-hmm this one

00:42:37,660 --> 00:42:45,130
great question so we use PRTG is the

00:42:42,790 --> 00:42:48,130
primary tool that we use for network

00:42:45,130 --> 00:42:51,870
level monitoring some of our programs

00:42:48,130 --> 00:42:55,200
use New Relic and my team uses data dog

00:42:51,870 --> 00:42:55,200
note the Sox

00:43:01,450 --> 00:43:07,890
let me make sure you answer that

00:43:02,799 --> 00:43:07,890
honestly yes yes

00:43:11,830 --> 00:43:20,670
about nine people am I allowed to say

00:43:15,760 --> 00:43:20,670
that I get I'm allowed to say that

00:43:21,090 --> 00:43:25,680
yeah and the transition to that was

00:43:22,860 --> 00:43:29,490
interesting because position to me we

00:43:25,680 --> 00:43:31,710
started out with about seven people on

00:43:29,490 --> 00:43:34,170
the release management team and added

00:43:31,710 --> 00:43:35,610
some heads and then there was a little

00:43:34,170 --> 00:43:38,220
bit of turnover and we kind of settled

00:43:35,610 --> 00:43:41,400
down at about nine people to maintain it

00:43:38,220 --> 00:43:43,020
so several of them are still from the

00:43:41,400 --> 00:43:45,630
release management side that just

00:43:43,020 --> 00:43:47,250
learned new skills and ended up being

00:43:45,630 --> 00:43:48,540
really good for them in my opinion right

00:43:47,250 --> 00:43:49,920
because now I can go on my resume and

00:43:48,540 --> 00:43:51,510
say oh I administrated Splunk I

00:43:49,920 --> 00:43:53,820
administrated github Enterprise and

00:43:51,510 --> 00:43:55,650
Cerner cube and I learned Amazon and

00:43:53,820 --> 00:44:00,440
these are all new tools and technologies

00:43:55,650 --> 00:44:00,440
that they couldn't boast before yes sir

00:44:06,319 --> 00:44:11,890
oh great question man who's the

00:44:16,600 --> 00:44:21,400
okay so I'll try and tell this story

00:44:19,330 --> 00:44:24,070
really quickly so when I first joined I

00:44:21,400 --> 00:44:25,840
Priya and I'm sharing a lot now don't

00:44:24,070 --> 00:44:29,170
tell me when I told you the story the

00:44:25,840 --> 00:44:32,380
the teams to get application logs would

00:44:29,170 --> 00:44:33,940
send an email or submit a ticket to the

00:44:32,380 --> 00:44:35,650
network operation center who had

00:44:33,940 --> 00:44:38,620
physical access to those machines in

00:44:35,650 --> 00:44:40,060
production and they would get back yes I

00:44:38,620 --> 00:44:41,860
know I did the same thing they would get

00:44:40,060 --> 00:44:46,210
back an email with a bunch of

00:44:41,860 --> 00:44:48,190
attachments one log file per server and

00:44:46,210 --> 00:44:50,200
so if you had ten production servers and

00:44:48,190 --> 00:44:51,640
there was some problem in production you

00:44:50,200 --> 00:44:54,670
get ten log files you get to search

00:44:51,640 --> 00:44:57,790
through it was hell absolute hell

00:44:54,670 --> 00:44:59,620
so that was when I first joined it was

00:44:57,790 --> 00:45:01,300
interesting because I think most people

00:44:59,620 --> 00:45:02,740
in the leadership team expected me to

00:45:01,300 --> 00:45:05,680
roll out some kind of release automation

00:45:02,740 --> 00:45:06,970
tool or something and I said no the

00:45:05,680 --> 00:45:09,310
first thing we're fixing is monitoring

00:45:06,970 --> 00:45:11,110
and my reasoning for that was a couple

00:45:09,310 --> 00:45:12,460
fold number one I knew how much time we

00:45:11,110 --> 00:45:16,180
were wasting doing root cause analysis

00:45:12,460 --> 00:45:19,120
of bugs number two from a cultural

00:45:16,180 --> 00:45:21,520
perspective I think monitoring is one of

00:45:19,120 --> 00:45:24,070
the best ways to connect your team with

00:45:21,520 --> 00:45:25,720
the customer so engineering teams if you

00:45:24,070 --> 00:45:27,730
don't have great monitoring systems in

00:45:25,720 --> 00:45:28,750
place it can feel very disconnected from

00:45:27,730 --> 00:45:31,300
what the customer is actually

00:45:28,750 --> 00:45:33,010
experiencing but if I see a graph that's

00:45:31,300 --> 00:45:34,390
showing me you know like response times

00:45:33,010 --> 00:45:36,880
from a coupla Kayson throughout the day

00:45:34,390 --> 00:45:40,240
I can translate that into an experience

00:45:36,880 --> 00:45:42,040
pretty easily and so improving how we do

00:45:40,240 --> 00:45:45,280
monitoring was was a big goal in the

00:45:42,040 --> 00:45:47,530
beginning now why do we we choose Splunk

00:45:45,280 --> 00:45:48,820
and what was the resistance that so

00:45:47,530 --> 00:45:51,460
first of all spoink's not nearly as

00:45:48,820 --> 00:45:54,700
expensive as it used to be second of all

00:45:51,460 --> 00:45:58,420
I didn't have a lot of resistance to to

00:45:54,700 --> 00:46:00,130
rolling it out and I'll admit that I

00:45:58,420 --> 00:46:02,770
kind of purposefully chose a tool that

00:46:00,130 --> 00:46:05,530
wasn't super easy to use and that's

00:46:02,770 --> 00:46:07,000
counterintuitive to a certain extent but

00:46:05,530 --> 00:46:09,550
the story that I heard a couple of times

00:46:07,000 --> 00:46:11,290
was oh we used to have this performance

00:46:09,550 --> 00:46:14,800
monitoring tool but nobody ever used it

00:46:11,290 --> 00:46:17,200
and my theory was it was too easy

00:46:14,800 --> 00:46:18,700
and so if you if you have a tool like in

00:46:17,200 --> 00:46:20,890
my opinion you relic almost makes it too

00:46:18,700 --> 00:46:21,970
easy right it's like oh we just solve

00:46:20,890 --> 00:46:23,530
all these problems for you you don't

00:46:21,970 --> 00:46:25,300
need to think about how to set up alerts

00:46:23,530 --> 00:46:26,980
we're gonna profile your applications

00:46:25,300 --> 00:46:28,930
we're gonna automatically set alerts for

00:46:26,980 --> 00:46:29,530
any deviations and all right that that

00:46:28,930 --> 00:46:31,480
craps

00:46:29,530 --> 00:46:33,250
for a company that didn't have any

00:46:31,480 --> 00:46:35,950
monitoring in place for their dev teams

00:46:33,250 --> 00:46:37,600
those too much too much too soon we

00:46:35,950 --> 00:46:38,170
needed to evolve the culture a little

00:46:37,600 --> 00:46:39,550
bit first

00:46:38,170 --> 00:46:40,720
and so Splunk gave us a great

00:46:39,550 --> 00:46:42,550
opportunity to do that because you

00:46:40,720 --> 00:46:44,560
really got to get hands-on with it you

00:46:42,550 --> 00:46:45,850
got to learn like there call some query

00:46:44,560 --> 00:46:48,370
language you got to think about like how

00:46:45,850 --> 00:46:50,350
the searches work and indexes and

00:46:48,370 --> 00:46:51,970
building your dashboards is not like day

00:46:50,350 --> 00:46:54,190
the dog where it's super easy and

00:46:51,970 --> 00:46:55,870
drag-and-drop but I wanted our teams to

00:46:54,190 --> 00:46:58,210
spend time doing that stuff because I

00:46:55,870 --> 00:47:00,730
needed them to understand the value of

00:46:58,210 --> 00:47:02,830
the investment in that time and now I

00:47:00,730 --> 00:47:05,500
we're at a point where tools like New

00:47:02,830 --> 00:47:06,640
Relic and data dog makes sense now will

00:47:05,500 --> 00:47:12,400
consume those things a lot more

00:47:06,640 --> 00:47:13,840
responsibly than we would have before no

00:47:12,400 --> 00:47:16,540
one from my pros thrown anything ever

00:47:13,840 --> 00:47:21,870
yet so I assume that's ringing true for

00:47:16,540 --> 00:47:21,870
them other questions mr. Cox

00:47:23,540 --> 00:47:28,150
I did yeah as an example of a bill tool

00:47:28,240 --> 00:47:33,620
we do we do have a couple of folks that

00:47:32,540 --> 00:47:36,560
are still using Jenkins but they're

00:47:33,620 --> 00:47:38,930
transitioning over to teamcity now we we

00:47:36,560 --> 00:47:40,880
have we do about between twenty-five and

00:47:38,930 --> 00:47:44,300
thirty thousand bills a day on Team City

00:47:40,880 --> 00:47:46,730
we have over two hundred and twenty

00:47:44,300 --> 00:47:48,170
concurrently connected build agents so

00:47:46,730 --> 00:47:49,550
we run one of the bigger team city

00:47:48,170 --> 00:47:52,490
installations in the world as far as I

00:47:49,550 --> 00:47:54,350
can tell team cities load about like

00:47:52,490 --> 00:47:55,640
load testing on their server maxes at

00:47:54,350 --> 00:48:00,080
three hundred they don't even test

00:47:55,640 --> 00:48:03,860
beyond that so we're getting close any

00:48:00,080 --> 00:48:05,270
other questions all right awesome I

00:48:03,860 --> 00:48:08,000
really appreciate the attention and

00:48:05,270 --> 00:48:09,170
you're sticking around I'll be around up

00:48:08,000 --> 00:48:11,140
here if you want to come talk to me

00:48:09,170 --> 00:48:12,620
after and you can look me up on LinkedIn

00:48:11,140 --> 00:48:15,190
thanks for coming

00:48:12,620 --> 00:48:15,190

YouTube URL: https://www.youtube.com/watch?v=hfY2jo_Q7wY


