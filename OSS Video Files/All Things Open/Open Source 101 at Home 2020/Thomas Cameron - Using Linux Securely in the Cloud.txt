Title: Thomas Cameron - Using Linux Securely in the Cloud
Publication date: 2020-05-20
Playlist: Open Source 101 at Home 2020
Description: 
	Using Linux Securely in the Cloud

Presented at: Open Source 101 at Home 2020
Presented by: Thomas Cameron, Amazon Web Services

Abstract: Securing Linux can be a challenge, whether in a datacenter or in the cloud. But, because of the multi-layer security provided by cloud providers, it's easy to lose sight of the need to harden your Linux instances. In this talk, Amazon Web Services Senior Solution Architect Thomas Cameron will discuss hardening your Linux instances for cloud computing. Thomas will discuss choosing package sets, enabling, disabling, and hardening services, firewalling options, logging, user management, patching, Security Enhanced Linux, and more. By the end of this session, attendees should have an understanding of the various options and responsibilities they have to keep their workloads secure.

For more info: https://opensource101.com
Captions: 
	00:00:05,400 --> 00:00:10,519
[Music]

00:00:10,559 --> 00:00:13,920
all right i am showing that it is one

00:00:12,160 --> 00:00:16,880
o'clock eastern time

00:00:13,920 --> 00:00:18,160
12 o'clock my time i'm in austin texas

00:00:16,880 --> 00:00:20,720
so i think we'll go ahead and get

00:00:18,160 --> 00:00:22,960
started we've got about 45 minutes today

00:00:20,720 --> 00:00:24,560
and today's topic is using linux

00:00:22,960 --> 00:00:26,080
securely in the cloud

00:00:24,560 --> 00:00:27,119
my name is thomas cameron i'll tell you

00:00:26,080 --> 00:00:28,000
a little bit more about myself in a

00:00:27,119 --> 00:00:30,480
little while but

00:00:28,000 --> 00:00:33,040
i am a senior solutions architect uh for

00:00:30,480 --> 00:00:34,800
amazon linux at amazon web services

00:00:33,040 --> 00:00:36,399
my contact information is in the slide

00:00:34,800 --> 00:00:38,320
deck and uh

00:00:36,399 --> 00:00:39,600
i encourage you to contact me if you

00:00:38,320 --> 00:00:40,480
have any questions about what we talk

00:00:39,600 --> 00:00:42,480
about today

00:00:40,480 --> 00:00:44,399
i'm going to be moving pretty quickly

00:00:42,480 --> 00:00:46,800
because as you probably

00:00:44,399 --> 00:00:47,520
know security in a cloud environment is

00:00:46,800 --> 00:00:50,719
a massive

00:00:47,520 --> 00:00:52,079
massive topic and with 45 minutes

00:00:50,719 --> 00:00:54,000
i'm only going to be able to scratch the

00:00:52,079 --> 00:00:56,840
surface of a number of different

00:00:54,000 --> 00:00:58,079
components that make up your security

00:00:56,840 --> 00:00:59,920
posture

00:00:58,079 --> 00:01:01,520
so i'm going to go ahead and kill my

00:00:59,920 --> 00:01:01,920
camera just because i don't think you

00:01:01,520 --> 00:01:03,680
need to

00:01:01,920 --> 00:01:05,040
see my face i think what's on the slides

00:01:03,680 --> 00:01:08,320
is probably

00:01:05,040 --> 00:01:10,560
a lot more important so

00:01:08,320 --> 00:01:12,320
as i said my contact information is on

00:01:10,560 --> 00:01:13,920
there today what we're going to be

00:01:12,320 --> 00:01:15,119
talking about is a little bit about my

00:01:13,920 --> 00:01:19,280
background who am i

00:01:15,119 --> 00:01:22,240
and you know why why i'm here

00:01:19,280 --> 00:01:23,439
what is securing linux in the context of

00:01:22,240 --> 00:01:24,640
cloud computing

00:01:23,439 --> 00:01:26,640
you know it's like the old commercial

00:01:24,640 --> 00:01:29,360
said this isn't your father's uh

00:01:26,640 --> 00:01:30,640
linux today linux usage and cloud is

00:01:29,360 --> 00:01:35,040
pretty radically different

00:01:30,640 --> 00:01:38,079
from uh what i grew up doing

00:01:35,040 --> 00:01:39,280
we'll move into managing packets package

00:01:38,079 --> 00:01:41,520
sets

00:01:39,280 --> 00:01:43,920
with an eye towards keeping the attack

00:01:41,520 --> 00:01:45,040
surface area as small as possible on

00:01:43,920 --> 00:01:47,439
your linux

00:01:45,040 --> 00:01:48,159
instances in the cloud we'll talk a

00:01:47,439 --> 00:01:50,479
little bit about

00:01:48,159 --> 00:01:52,399
service management don't run what you

00:01:50,479 --> 00:01:54,159
brung in the in the terms of old race

00:01:52,399 --> 00:01:56,000
car drivers

00:01:54,159 --> 00:01:58,799
i'll talk a little bit about service

00:01:56,000 --> 00:02:00,799
control and when to disable or uninstall

00:01:58,799 --> 00:02:02,560
services

00:02:00,799 --> 00:02:04,159
i'll talk a little bit about firewalling

00:02:02,560 --> 00:02:04,719
because firewalling is a very very

00:02:04,159 --> 00:02:07,840
important

00:02:04,719 --> 00:02:09,840
topic and firewalling has really changed

00:02:07,840 --> 00:02:11,039
a lot in the in the time that i've been

00:02:09,840 --> 00:02:12,959
dealing with linux

00:02:11,039 --> 00:02:14,800
uh you know and i'll talk a little bit

00:02:12,959 --> 00:02:16,640
more about those changes and

00:02:14,800 --> 00:02:18,319
how we deal with them uh in a few

00:02:16,640 --> 00:02:21,280
minutes

00:02:18,319 --> 00:02:22,000
logging is critically important as a

00:02:21,280 --> 00:02:24,800
component of

00:02:22,000 --> 00:02:26,319
your service or your security posture if

00:02:24,800 --> 00:02:28,959
you don't know what happened

00:02:26,319 --> 00:02:30,480
you don't know how to fix it and almost

00:02:28,959 --> 00:02:32,319
all secrets are revealed

00:02:30,480 --> 00:02:33,760
through system logging so it's important

00:02:32,319 --> 00:02:35,360
that you understand logging and how to

00:02:33,760 --> 00:02:37,280
deal with it

00:02:35,360 --> 00:02:39,040
user management you know you need to

00:02:37,280 --> 00:02:41,760
understand who can do what

00:02:39,040 --> 00:02:43,280
and when and where and how and how to

00:02:41,760 --> 00:02:47,040
manage

00:02:43,280 --> 00:02:47,040
in your linux environment in the cloud

00:02:47,440 --> 00:02:51,920
we'll talk about about patching or how

00:02:49,599 --> 00:02:54,400
dev and ops learned to hate each other

00:02:51,920 --> 00:02:55,760
uh when when to apply patching what

00:02:54,400 --> 00:02:57,519
sorts of scheduling

00:02:55,760 --> 00:02:59,599
uh testing and things like that that

00:02:57,519 --> 00:03:01,920
stuff's really important

00:02:59,599 --> 00:03:03,519
and then i'll end up because i have to

00:03:01,920 --> 00:03:04,000
talk about it if anyone out there knows

00:03:03,519 --> 00:03:06,959
who i

00:03:04,000 --> 00:03:08,080
am i've done se linux talks for years at

00:03:06,959 --> 00:03:10,000
red hat summit and

00:03:08,080 --> 00:03:12,959
other events so we'll talk a little bit

00:03:10,000 --> 00:03:16,319
about security enhanced linux as well

00:03:12,959 --> 00:03:18,159
so who am i well

00:03:16,319 --> 00:03:20,800
you know who am i why should you care

00:03:18,159 --> 00:03:23,599
and maybe even should you care

00:03:20,800 --> 00:03:26,400
um i'm thomas cameron i started working

00:03:23,599 --> 00:03:28,080
with linux back in 1995. i've been doing

00:03:26,400 --> 00:03:30,080
this for a very very long time

00:03:28,080 --> 00:03:31,840
i was actually working for microsoft at

00:03:30,080 --> 00:03:33,519
the time and one of my co-workers

00:03:31,840 --> 00:03:35,599
kept going on and on and on and on about

00:03:33,519 --> 00:03:36,720
this linux thing and how cool this linux

00:03:35,599 --> 00:03:38,799
thing was and

00:03:36,720 --> 00:03:41,680
and i uh i told him you know i'm going

00:03:38,799 --> 00:03:43,840
to stand up a windows nt 351

00:03:41,680 --> 00:03:45,760
server and i'm going to stand up a linux

00:03:43,840 --> 00:03:46,720
machine side by side now i'm going to

00:03:45,760 --> 00:03:49,519
prove to you

00:03:46,720 --> 00:03:49,920
that windows is the future and here we

00:03:49,519 --> 00:03:52,480
are

00:03:49,920 --> 00:03:53,680
you know some 20 something years later

00:03:52,480 --> 00:03:56,400
25 years later

00:03:53,680 --> 00:03:57,280
and uh i've been a linux guy for ever

00:03:56,400 --> 00:03:59,120
since

00:03:57,280 --> 00:04:00,400
so i worked for red hat for almost 14

00:03:59,120 --> 00:04:01,680
years

00:04:00,400 --> 00:04:03,840
and now i'm the senior solution

00:04:01,680 --> 00:04:04,879
architect for amazon linux at amazon web

00:04:03,840 --> 00:04:08,400
services

00:04:04,879 --> 00:04:09,680
so i'm definitely not the sharpest tool

00:04:08,400 --> 00:04:10,879
in the shed i'm not going to sit here

00:04:09,680 --> 00:04:12,480
and tell you that oh i know

00:04:10,879 --> 00:04:14,480
all things and i am all seeing an

00:04:12,480 --> 00:04:15,280
all-knowing that's certainly not the

00:04:14,480 --> 00:04:17,280
case

00:04:15,280 --> 00:04:18,799
but i've made enough mistakes to have

00:04:17,280 --> 00:04:20,560
learned a few things i've got some

00:04:18,799 --> 00:04:23,360
pretty impressive scars

00:04:20,560 --> 00:04:25,520
and hopefully you can learn from my

00:04:23,360 --> 00:04:29,680
failures and not repeat them

00:04:25,520 --> 00:04:30,240
so as i said this is not your dad's

00:04:29,680 --> 00:04:32,479
linux

00:04:30,240 --> 00:04:33,520
um securing linux in the context of

00:04:32,479 --> 00:04:36,800
cloud is

00:04:33,520 --> 00:04:38,000
is potentially fairly complex there was

00:04:36,800 --> 00:04:41,040
a time

00:04:38,000 --> 00:04:43,120
when we looked at securing linux as

00:04:41,040 --> 00:04:45,120
do something on one os instance and

00:04:43,120 --> 00:04:46,960
typically that os instance was

00:04:45,120 --> 00:04:48,400
installed on bare metal you know it's a

00:04:46,960 --> 00:04:49,440
physical server with linux installed

00:04:48,400 --> 00:04:50,960
directly on it

00:04:49,440 --> 00:04:52,960
you know figure out how to secure it one

00:04:50,960 --> 00:04:54,800
time and then scriptify it and and

00:04:52,960 --> 00:04:57,360
repeat it in times

00:04:54,800 --> 00:04:59,840
and if i had 10 or 20 or even a couple

00:04:57,360 --> 00:05:02,960
hundred or maybe even a few thousand

00:04:59,840 --> 00:05:05,120
servers that

00:05:02,960 --> 00:05:06,080
kind of worked but it doesn't work in

00:05:05,120 --> 00:05:08,800
cloud scale

00:05:06,080 --> 00:05:10,080
when we talk about tens of thousands or

00:05:08,800 --> 00:05:12,800
hundreds of thousands

00:05:10,080 --> 00:05:13,600
of instances especially when some of

00:05:12,800 --> 00:05:15,039
those instances

00:05:13,600 --> 00:05:16,320
are ephemeral and they're not going to

00:05:15,039 --> 00:05:18,800
be there for long enough for you to run

00:05:16,320 --> 00:05:21,120
big complex jobs against them

00:05:18,800 --> 00:05:22,639
doing that doesn't really work at cloud

00:05:21,120 --> 00:05:24,720
scale

00:05:22,639 --> 00:05:26,160
it also doesn't take into account that

00:05:24,720 --> 00:05:28,960
in cloud computing

00:05:26,160 --> 00:05:30,720
you generally don't have a network team

00:05:28,960 --> 00:05:32,479
and a storage team and a security team

00:05:30,720 --> 00:05:34,479
and an os team and so on

00:05:32,479 --> 00:05:36,880
we are all sort of expected to

00:05:34,479 --> 00:05:40,240
understand

00:05:36,880 --> 00:05:40,240
oh did we lose audio

00:05:40,320 --> 00:05:45,440
okay um we can't you know we're all

00:05:43,759 --> 00:05:46,160
expected to understand the fundamentals

00:05:45,440 --> 00:05:48,240
of pretty much

00:05:46,160 --> 00:05:49,680
all of the components now certainly

00:05:48,240 --> 00:05:50,320
we're still going to have people who are

00:05:49,680 --> 00:05:51,520
experts

00:05:50,320 --> 00:05:53,039
in security and we're going to have

00:05:51,520 --> 00:05:54,400
people who are experts in storage and

00:05:53,039 --> 00:05:56,319
things like that

00:05:54,400 --> 00:05:57,919
my point isn't that you have to be a

00:05:56,319 --> 00:06:01,680
generalist and be able to deep

00:05:57,919 --> 00:06:03,360
dive in every single topic it's that

00:06:01,680 --> 00:06:06,000
things are so much more complex today

00:06:03,360 --> 00:06:07,440
than they were even 10 years ago

00:06:06,000 --> 00:06:09,520
that you need to understand the

00:06:07,440 --> 00:06:13,120
fundamentals at least

00:06:09,520 --> 00:06:18,400
of the components so

00:06:13,120 --> 00:06:18,400
this is just a quick diagram i did of

00:06:18,639 --> 00:06:23,919
a very simple uh lamp stack this is

00:06:22,080 --> 00:06:25,520
this is just a very simple lamp stack

00:06:23,919 --> 00:06:28,240
using um

00:06:25,520 --> 00:06:30,160
a couple of linux instances mysql

00:06:28,240 --> 00:06:32,400
application services and so on

00:06:30,160 --> 00:06:34,080
and man that's actually fairly complex

00:06:32,400 --> 00:06:36,639
if you look at it you know you can

00:06:34,080 --> 00:06:38,400
you've got your database services you've

00:06:36,639 --> 00:06:40,560
got networking services you've got

00:06:38,400 --> 00:06:42,160
multi-subnets potentially you've got

00:06:40,560 --> 00:06:44,479
multiple availability zones

00:06:42,160 --> 00:06:45,840
now i should be clear most of my

00:06:44,479 --> 00:06:48,800
examples will be done

00:06:45,840 --> 00:06:51,120
using aws just because i am more

00:06:48,800 --> 00:06:53,759
familiar with aws than anything else i

00:06:51,120 --> 00:06:54,720
will also talk about google i will talk

00:06:53,759 --> 00:06:55,840
about azure

00:06:54,720 --> 00:06:57,919
i don't want to give the impression that

00:06:55,840 --> 00:07:00,080
i'm i'm doing some marketing campaign

00:06:57,919 --> 00:07:00,960
for aws i'm trying to cover as much as i

00:07:00,080 --> 00:07:02,960
can

00:07:00,960 --> 00:07:05,680
but for examples i'm probably going to

00:07:02,960 --> 00:07:07,919
use aws just because i know it better

00:07:05,680 --> 00:07:09,840
but my point here is just setting up

00:07:07,919 --> 00:07:11,440
what used to be a pretty simple

00:07:09,840 --> 00:07:13,680
you know i would install the operating

00:07:11,440 --> 00:07:16,800
system i would install

00:07:13,680 --> 00:07:18,479
mysql i would install php or perl or you

00:07:16,800 --> 00:07:21,039
know whatever i'd install apache

00:07:18,479 --> 00:07:22,319
like it's become a lot more complicated

00:07:21,039 --> 00:07:24,560
and we need to understand that

00:07:22,319 --> 00:07:28,240
complexity

00:07:24,560 --> 00:07:31,360
so when we talk about securing

00:07:28,240 --> 00:07:34,560
your package sets the goal here

00:07:31,360 --> 00:07:35,520
is to keep the attack surface area as

00:07:34,560 --> 00:07:38,639
small as

00:07:35,520 --> 00:07:41,919
possible so keep your package sets

00:07:38,639 --> 00:07:44,960
small and by that i mean if if a service

00:07:41,919 --> 00:07:47,280
is not installed it can't be attacked

00:07:44,960 --> 00:07:49,599
so if you don't have a networking a

00:07:47,280 --> 00:07:52,720
network facing service installed

00:07:49,599 --> 00:07:55,599
that that becomes vulnerable to a buffer

00:07:52,720 --> 00:07:59,039
overflow or something like that

00:07:55,599 --> 00:08:01,360
then it can't be attacked so

00:07:59,039 --> 00:08:02,080
if you don't have for instance compilers

00:08:01,360 --> 00:08:04,319
installed

00:08:02,080 --> 00:08:06,160
it can't be used to build attack or

00:08:04,319 --> 00:08:08,160
exploit tools there was a

00:08:06,160 --> 00:08:09,759
trend for a while there where you know

00:08:08,160 --> 00:08:11,759
we would install linux

00:08:09,759 --> 00:08:13,120
operating systems and just install

00:08:11,759 --> 00:08:15,039
everything like just give me everything

00:08:13,120 --> 00:08:18,000
and i'll figure out what i need to use

00:08:15,039 --> 00:08:18,720
and bad guys exploited that by doing

00:08:18,000 --> 00:08:22,080
things like

00:08:18,720 --> 00:08:24,240
uploading uh tarballs or getting a

00:08:22,080 --> 00:08:26,080
shell through a poorly configured php

00:08:24,240 --> 00:08:28,319
config or something like that

00:08:26,080 --> 00:08:29,520
and then they would download and compile

00:08:28,319 --> 00:08:31,919
tools to attack

00:08:29,520 --> 00:08:32,640
your kernel and and get access to your

00:08:31,919 --> 00:08:34,000
system

00:08:32,640 --> 00:08:36,640
but if there's no compiler installed

00:08:34,000 --> 00:08:38,640
that stops them in their tracks

00:08:36,640 --> 00:08:40,560
and you really want to keep your system

00:08:38,640 --> 00:08:42,800
as lightweight as possible

00:08:40,560 --> 00:08:45,519
even consider that the default image in

00:08:42,800 --> 00:08:48,560
my case at aws it's called an ami and a

00:08:45,519 --> 00:08:50,160
aws machine image but the default ami

00:08:48,560 --> 00:08:51,440
build may be too heavy you may have

00:08:50,160 --> 00:08:52,000
stuff installed on there that you don't

00:08:51,440 --> 00:08:54,000
need

00:08:52,000 --> 00:08:55,360
and you need to consider paring down

00:08:54,000 --> 00:08:58,880
your package list

00:08:55,360 --> 00:09:00,720
so that um it uh

00:08:58,880 --> 00:09:03,760
it's it you don't have anything that's

00:09:00,720 --> 00:09:06,080
there for bad guys to leverage

00:09:03,760 --> 00:09:08,080
use tools from your os provider or your

00:09:06,080 --> 00:09:11,600
cloud provider to keep your system

00:09:08,080 --> 00:09:12,000
updated keep your package list small and

00:09:11,600 --> 00:09:15,279
then

00:09:12,000 --> 00:09:16,000
keep your systems up to date tools from

00:09:15,279 --> 00:09:19,200
your os

00:09:16,000 --> 00:09:21,279
provider if you are running red hat or

00:09:19,200 --> 00:09:23,360
centos or fedora

00:09:21,279 --> 00:09:24,880
you could use for instance the red hat

00:09:23,360 --> 00:09:27,360
satellite server version six that's a

00:09:24,880 --> 00:09:29,440
commercial offering

00:09:27,360 --> 00:09:30,720
and it works for those distributions or

00:09:29,440 --> 00:09:32,480
you can use catello which is the

00:09:30,720 --> 00:09:34,080
community upstream version of

00:09:32,480 --> 00:09:35,360
satellite six works really really well

00:09:34,080 --> 00:09:36,560
but it does not come with commercial

00:09:35,360 --> 00:09:39,040
support

00:09:36,560 --> 00:09:41,120
or even spacewalk which is the community

00:09:39,040 --> 00:09:43,440
upstream to satellite 5.

00:09:41,120 --> 00:09:45,040
all of these give you the option of

00:09:43,440 --> 00:09:48,720
doing things like

00:09:45,040 --> 00:09:50,480
doing bulk remove or add of groups of

00:09:48,720 --> 00:09:52,640
applications or groups of

00:09:50,480 --> 00:09:54,959
packages so you can go in and say you

00:09:52,640 --> 00:09:56,720
know uninstall the web server group or

00:09:54,959 --> 00:09:57,519
uninstall the nfs server group or

00:09:56,720 --> 00:10:01,120
whatever

00:09:57,519 --> 00:10:02,959
so use those tools from your os provider

00:10:01,120 --> 00:10:04,399
rui the red hat update infrastructure

00:10:02,959 --> 00:10:07,120
for cloud computing

00:10:04,399 --> 00:10:09,839
it kind of helps with that rui is really

00:10:07,120 --> 00:10:11,680
more of just a package repository

00:10:09,839 --> 00:10:13,440
so it doesn't provide the advanced

00:10:11,680 --> 00:10:15,040
capabilities that satellite or catello

00:10:13,440 --> 00:10:16,240
or spacewalk do

00:10:15,040 --> 00:10:18,399
but it's out there and it's something

00:10:16,240 --> 00:10:20,880
that you can use as well

00:10:18,399 --> 00:10:23,760
if you live in susa world use susa

00:10:20,880 --> 00:10:27,040
manager susan manager is is based on

00:10:23,760 --> 00:10:28,720
satellite 5 or spacewalk i should say

00:10:27,040 --> 00:10:29,279
it's a community upstream for souza

00:10:28,720 --> 00:10:30,640
manager

00:10:29,279 --> 00:10:32,480
so you can use susan manager or

00:10:30,640 --> 00:10:32,959
spacewalk to do the same thing manage

00:10:32,480 --> 00:10:37,120
your

00:10:32,959 --> 00:10:38,880
os instances and on a large scale

00:10:37,120 --> 00:10:40,240
add or remove software groups or

00:10:38,880 --> 00:10:42,720
software packages so that you're

00:10:40,240 --> 00:10:44,720
minimizing that surface area of attack

00:10:42,720 --> 00:10:46,720
canonical has landscape you can use

00:10:44,720 --> 00:10:47,600
landscape as well for doing the same

00:10:46,720 --> 00:10:49,200
thing

00:10:47,600 --> 00:10:50,640
and then you've also got cross platform

00:10:49,200 --> 00:10:51,600
tools if you want to do things like

00:10:50,640 --> 00:10:55,040
ansible

00:10:51,600 --> 00:10:55,920
or chef or puppet or salt or you know

00:10:55,040 --> 00:10:58,560
there's a ton of

00:10:55,920 --> 00:10:59,519
tools out there that can be used to

00:10:58,560 --> 00:11:02,880
build

00:10:59,519 --> 00:11:03,600
a uh management tool set or management

00:11:02,880 --> 00:11:05,519
platform

00:11:03,600 --> 00:11:06,800
and you can go in and either run os

00:11:05,519 --> 00:11:08,800
commands or

00:11:06,800 --> 00:11:10,320
or just manually give instructions for

00:11:08,800 --> 00:11:13,040
removing groups of packages

00:11:10,320 --> 00:11:15,839
again to keep that attack area surface

00:11:13,040 --> 00:11:15,839
as small as possible

00:11:16,160 --> 00:11:21,519
cloud providers have tools as well at

00:11:18,640 --> 00:11:23,600
aws we have the aws system manager

00:11:21,519 --> 00:11:24,800
we can do things like session manager

00:11:23,600 --> 00:11:26,320
for doing

00:11:24,800 --> 00:11:29,040
multiple logins for instance across

00:11:26,320 --> 00:11:31,360
multiple systems patch manager

00:11:29,040 --> 00:11:32,560
for for making packages available and

00:11:31,360 --> 00:11:35,839
state manager

00:11:32,560 --> 00:11:39,279
for keeping systems at a specific state

00:11:35,839 --> 00:11:41,440
like only these packages installed

00:11:39,279 --> 00:11:43,120
if anything other than these packages

00:11:41,440 --> 00:11:45,120
get installed uninstalled it

00:11:43,120 --> 00:11:46,640
uh make sure that we are at exactly this

00:11:45,120 --> 00:11:49,200
version of package x

00:11:46,640 --> 00:11:50,720
and so on so uh so those are tools that

00:11:49,200 --> 00:11:53,839
are available from amazon

00:11:50,720 --> 00:11:56,079
azure has the azure automation tooling

00:11:53,839 --> 00:11:58,399
which provides similar services

00:11:56,079 --> 00:11:59,839
i'm not an expert in azure i dug around

00:11:58,399 --> 00:12:01,279
a little bit in doing this uh

00:11:59,839 --> 00:12:02,800
presentation

00:12:01,279 --> 00:12:04,320
it seems like there are several tools

00:12:02,800 --> 00:12:06,320
that are available but uh

00:12:04,320 --> 00:12:09,120
the one that seems to be the overarching

00:12:06,320 --> 00:12:11,600
suite is the uh azure automation

00:12:09,120 --> 00:12:12,480
and then google cloud also has the os

00:12:11,600 --> 00:12:14,399
patch management

00:12:12,480 --> 00:12:15,839
suite of technologies i dug around in

00:12:14,399 --> 00:12:17,200
their documentation same thing i'm not

00:12:15,839 --> 00:12:21,440
really an expert there

00:12:17,200 --> 00:12:23,760
my point is that you can

00:12:21,440 --> 00:12:24,800
manage your package sets a bunch of

00:12:23,760 --> 00:12:27,920
different ways

00:12:24,800 --> 00:12:29,839
you can do it using community operating

00:12:27,920 --> 00:12:31,120
or community open source tools and

00:12:29,839 --> 00:12:32,639
that's perfectly fine

00:12:31,120 --> 00:12:36,000
you can use commercial tools from your

00:12:32,639 --> 00:12:38,720
os vendor you can use community tools

00:12:36,000 --> 00:12:39,519
for for package management package group

00:12:38,720 --> 00:12:41,440
management

00:12:39,519 --> 00:12:43,120
uh and then you can also use tools from

00:12:41,440 --> 00:12:44,639
your cloud providers

00:12:43,120 --> 00:12:46,480
the main thing that i want you to take

00:12:44,639 --> 00:12:47,920
away from this is make sure that you

00:12:46,480 --> 00:12:49,360
understand what's installed on your

00:12:47,920 --> 00:12:50,000
systems and you remove the stuff you

00:12:49,360 --> 00:12:53,839
don't need

00:12:50,000 --> 00:12:57,200
and if things get added have a mechanism

00:12:53,839 --> 00:12:59,920
for removing them proactively

00:12:57,200 --> 00:13:00,959
so you need to be able to install remove

00:12:59,920 --> 00:13:03,440
and fix

00:13:00,959 --> 00:13:04,800
and by fix i mean set it at a specific

00:13:03,440 --> 00:13:08,320
point in time

00:13:04,800 --> 00:13:10,240
versions of packages on your instances

00:13:08,320 --> 00:13:11,760
if somebody uh inadvertently updates a

00:13:10,240 --> 00:13:13,200
persistent system

00:13:11,760 --> 00:13:14,800
and by persistence i mean a system

00:13:13,200 --> 00:13:16,240
that's going to live for a long long

00:13:14,800 --> 00:13:17,920
time rather than an ephemeral system

00:13:16,240 --> 00:13:19,440
where we just spin it up do a job and

00:13:17,920 --> 00:13:20,639
destroy it

00:13:19,440 --> 00:13:22,560
you want to have a mechanism to

00:13:20,639 --> 00:13:23,200
downgrade packages to whatever your

00:13:22,560 --> 00:13:25,760
standard

00:13:23,200 --> 00:13:26,240
is remember that in many cases we are

00:13:25,760 --> 00:13:28,079
doing

00:13:26,240 --> 00:13:30,079
linux in the cloud to run commercial

00:13:28,079 --> 00:13:31,279
office off the shelf software

00:13:30,079 --> 00:13:33,680
where there are requirements we're going

00:13:31,279 --> 00:13:35,519
to be at a specific patch level

00:13:33,680 --> 00:13:37,279
so make sure that you have a mechanism

00:13:35,519 --> 00:13:39,279
for downgrading or

00:13:37,279 --> 00:13:40,639
reverting your systems to that patch

00:13:39,279 --> 00:13:42,240
level

00:13:40,639 --> 00:13:44,000
if somebody installs something outside

00:13:42,240 --> 00:13:44,720
of your approved package manifest you

00:13:44,000 --> 00:13:47,040
need a

00:13:44,720 --> 00:13:48,959
mechanism to remove it and you may need

00:13:47,040 --> 00:13:50,399
to set up a dev and test and production

00:13:48,959 --> 00:13:52,160
type of life cycle where we

00:13:50,399 --> 00:13:54,240
you know build something in dev we test

00:13:52,160 --> 00:13:56,160
it in the test or qa environment

00:13:54,240 --> 00:13:58,320
and then roll it out into production uh

00:13:56,160 --> 00:14:01,360
as as

00:13:58,320 --> 00:14:03,920
it passes all the qa testing

00:14:01,360 --> 00:14:04,800
if you have a tool or tooling like

00:14:03,920 --> 00:14:06,639
satellite or

00:14:04,800 --> 00:14:07,839
systems manager or something like that

00:14:06,639 --> 00:14:09,040
that's going to help make that a lot

00:14:07,839 --> 00:14:11,040
easier

00:14:09,040 --> 00:14:12,880
just as we always talk about the least

00:14:11,040 --> 00:14:14,560
necessary privileges

00:14:12,880 --> 00:14:16,480
for running applications we should also

00:14:14,560 --> 00:14:17,839
operate on the least necessary packages

00:14:16,480 --> 00:14:18,800
if you don't have a good need to have a

00:14:17,839 --> 00:14:20,639
package suite

00:14:18,800 --> 00:14:24,079
or a group of packages installed it

00:14:20,639 --> 00:14:26,160
probably makes sense to uninstall it

00:14:24,079 --> 00:14:28,480
so that brings us to the next task which

00:14:26,160 --> 00:14:31,600
is service management

00:14:28,480 --> 00:14:33,839
don't just trust that the

00:14:31,600 --> 00:14:35,760
machine image that you're using is

00:14:33,839 --> 00:14:37,760
secure by default it's probably

00:14:35,760 --> 00:14:39,199
relatively secure but don't just run

00:14:37,760 --> 00:14:41,279
what you bring i come from a racing

00:14:39,199 --> 00:14:43,440
background sorry i was an old old

00:14:41,279 --> 00:14:44,959
motorcycle racer and um you know we

00:14:43,440 --> 00:14:46,560
always said just just race what you

00:14:44,959 --> 00:14:49,279
bring or run what you wrong

00:14:46,560 --> 00:14:50,880
but we want to make sure in today's

00:14:49,279 --> 00:14:52,720
security conscious cloud environment

00:14:50,880 --> 00:14:54,240
that on your linux systems

00:14:52,720 --> 00:14:56,240
as i mentioned earlier unnecessary

00:14:54,240 --> 00:14:58,240
services shouldn't be installed at all

00:14:56,240 --> 00:14:59,760
now if you have services that maybe

00:14:58,240 --> 00:15:02,320
aren't used often

00:14:59,760 --> 00:15:03,440
but you do need to use them periodically

00:15:02,320 --> 00:15:06,320
well that's fine

00:15:03,440 --> 00:15:06,959
at least disable them and then only

00:15:06,320 --> 00:15:10,000
start them

00:15:06,959 --> 00:15:11,440
as needed that's kind of a pain because

00:15:10,000 --> 00:15:12,639
you know the intimation there is that

00:15:11,440 --> 00:15:14,000
maybe you're going to be logging in

00:15:12,639 --> 00:15:15,360
remotely and turning things on and

00:15:14,000 --> 00:15:16,720
turning things off which kind of flies

00:15:15,360 --> 00:15:19,839
in the face of what

00:15:16,720 --> 00:15:23,120
cloud is uh is supposed to be but

00:15:19,839 --> 00:15:25,040
i'll address that in just a few minutes

00:15:23,120 --> 00:15:27,040
be aware of what services start by

00:15:25,040 --> 00:15:29,279
default on your instances

00:15:27,040 --> 00:15:31,279
if you don't need them disable them or

00:15:29,279 --> 00:15:32,399
preferably uninstall them but if it's

00:15:31,279 --> 00:15:33,120
something that you know you're going to

00:15:32,399 --> 00:15:34,959
use

00:15:33,120 --> 00:15:36,639
periodically then yeah just at least

00:15:34,959 --> 00:15:39,279
disable them

00:15:36,639 --> 00:15:41,519
for system d based distros like red hat

00:15:39,279 --> 00:15:42,720
enterprise linux and fedora and centos

00:15:41,519 --> 00:15:45,600
and amazon linux

00:15:42,720 --> 00:15:46,399
2 souza debian ubuntu and so on you can

00:15:45,600 --> 00:15:49,360
just use

00:15:46,399 --> 00:15:50,880
system control and so what i did was i

00:15:49,360 --> 00:15:54,160
logged onto the machine

00:15:50,880 --> 00:15:54,720
and i i just ran the command system

00:15:54,160 --> 00:15:57,839
control

00:15:54,720 --> 00:15:59,519
list unit files and again as nancy was

00:15:57,839 --> 00:16:01,120
kind enough to say if you want this

00:15:59,519 --> 00:16:02,160
screen to be a little bit bigger click

00:16:01,120 --> 00:16:03,920
twice on it

00:16:02,160 --> 00:16:06,560
and it'll make the screen a little bit

00:16:03,920 --> 00:16:07,759
bigger in your web interface so

00:16:06,560 --> 00:16:09,839
you can see that the first thing i did

00:16:07,759 --> 00:16:10,480
was i ran list unit files i just want to

00:16:09,839 --> 00:16:12,959
see

00:16:10,480 --> 00:16:14,800
what is turned on and this will give me

00:16:12,959 --> 00:16:17,519
a list of all of the

00:16:14,800 --> 00:16:19,360
services or or unit files that are

00:16:17,519 --> 00:16:21,120
managed by system control or

00:16:19,360 --> 00:16:22,639
systemd and you can see what their

00:16:21,120 --> 00:16:23,360
status is whether they're enabled

00:16:22,639 --> 00:16:25,600
whether they're

00:16:23,360 --> 00:16:26,959
um statically enabled so you can't

00:16:25,600 --> 00:16:28,240
change them whether they're disabled and

00:16:26,959 --> 00:16:30,959
so on and so forth

00:16:28,240 --> 00:16:32,639
and let's say that i scroll down and i

00:16:30,959 --> 00:16:34,959
see that the nfs

00:16:32,639 --> 00:16:36,880
server service is enabled on this

00:16:34,959 --> 00:16:39,040
instance

00:16:36,880 --> 00:16:41,199
um raise your hand if you think that

00:16:39,040 --> 00:16:41,920
having nfs enabled on an internet-facing

00:16:41,199 --> 00:16:44,160
server

00:16:41,920 --> 00:16:45,360
is a good idea hopefully nobody is

00:16:44,160 --> 00:16:46,720
raising your hand i hate that this is

00:16:45,360 --> 00:16:48,480
the part that really stinks about doing

00:16:46,720 --> 00:16:49,440
this remotely is i can't see anybody's

00:16:48,480 --> 00:16:51,920
faces

00:16:49,440 --> 00:16:53,680
but uh but my point is let's say that we

00:16:51,920 --> 00:16:55,600
found a service that we realize you know

00:16:53,680 --> 00:16:57,040
we may need to use we we're

00:16:55,600 --> 00:16:59,360
maybe we're going to use it for backups

00:16:57,040 --> 00:17:01,360
or i don't know what maybe we want to

00:16:59,360 --> 00:17:03,120
keep the nfs server service installed

00:17:01,360 --> 00:17:05,679
but we don't want it to be enabled so

00:17:03,120 --> 00:17:06,400
what we can do is we can disable the nfs

00:17:05,679 --> 00:17:08,480
server

00:17:06,400 --> 00:17:09,760
by going in and so the first thing that

00:17:08,480 --> 00:17:12,880
i do up here is i do

00:17:09,760 --> 00:17:14,880
system control status nfs server and it

00:17:12,880 --> 00:17:16,839
comes and it tells me a couple of things

00:17:14,880 --> 00:17:18,640
it tells me that it is enabled by

00:17:16,839 --> 00:17:20,559
default

00:17:18,640 --> 00:17:22,400
and i can see that it is actually active

00:17:20,559 --> 00:17:25,760
so it's running right now

00:17:22,400 --> 00:17:28,079
and that's fine i can then

00:17:25,760 --> 00:17:29,520
use system control to stop the nfs

00:17:28,079 --> 00:17:30,960
server service

00:17:29,520 --> 00:17:33,600
and then i can use system control to

00:17:30,960 --> 00:17:36,000
disable the nfs server service

00:17:33,600 --> 00:17:38,160
and then if i do system control status

00:17:36,000 --> 00:17:40,960
now we see that it is disabled

00:17:38,160 --> 00:17:42,559
and it is it's inactive and it's dead so

00:17:40,960 --> 00:17:44,080
i have turned that off i can still

00:17:42,559 --> 00:17:46,240
manually turn it on

00:17:44,080 --> 00:17:50,000
but when the machine reboots when this

00:17:46,240 --> 00:17:51,919
machine image reboots it won't come on

00:17:50,000 --> 00:17:53,440
um now you should be able to do this

00:17:51,919 --> 00:17:54,960
through your systems management platform

00:17:53,440 --> 00:17:56,240
so you're not doing bespoke configs

00:17:54,960 --> 00:17:58,880
remember i said earlier

00:17:56,240 --> 00:18:00,080
um the challenge is we don't want to

00:17:58,880 --> 00:18:02,320
have uh

00:18:00,080 --> 00:18:03,280
you know some horrible mechanism where

00:18:02,320 --> 00:18:06,640
you're doing you know

00:18:03,280 --> 00:18:07,440
4i and host 1 host 2 host 3 host 4 host

00:18:06,640 --> 00:18:11,120
00:18:07,440 --> 00:18:14,720
do ssh you know don't do that man

00:18:11,120 --> 00:18:16,000
4i is not a is not a systems

00:18:14,720 --> 00:18:20,880
administration strategy

00:18:16,000 --> 00:18:23,200
don't do that use a tool um

00:18:20,880 --> 00:18:24,640
so that's service control make sure that

00:18:23,200 --> 00:18:25,840
you know what your services do make sure

00:18:24,640 --> 00:18:27,360
that you've got the ones disabled that

00:18:25,840 --> 00:18:28,400
you don't need if you're really positive

00:18:27,360 --> 00:18:30,160
you're never going to need them make

00:18:28,400 --> 00:18:33,600
sure that they're disabled

00:18:30,160 --> 00:18:36,720
so now let's talk about firewalling

00:18:33,600 --> 00:18:39,039
firewalling is a fairly arcane

00:18:36,720 --> 00:18:40,400
art i remember when i first started

00:18:39,039 --> 00:18:41,679
working on

00:18:40,400 --> 00:18:43,679
linux and i started working with the old

00:18:41,679 --> 00:18:45,919
ip chains utility uh

00:18:43,679 --> 00:18:47,919
trying to understand what you know what

00:18:45,919 --> 00:18:50,799
is a port and what is a protocol

00:18:47,919 --> 00:18:51,760
and how do all these numbers uh relate

00:18:50,799 --> 00:18:53,919
to each other

00:18:51,760 --> 00:18:55,039
um it it took me a while to sort of wrap

00:18:53,919 --> 00:18:56,880
my head around it so

00:18:55,039 --> 00:18:58,880
i'm gonna i'm gonna be a little bit

00:18:56,880 --> 00:19:00,320
basic here and forgive me for those of

00:18:58,880 --> 00:19:00,640
you who already understand this stuff

00:19:00,320 --> 00:19:02,400
but

00:19:00,640 --> 00:19:03,919
i want to talk a little bit about some

00:19:02,400 --> 00:19:06,400
firewalling basics

00:19:03,919 --> 00:19:06,960
you know you'll hear me folks talking

00:19:06,400 --> 00:19:10,320
about

00:19:06,960 --> 00:19:13,600
ports what is a port a port

00:19:10,320 --> 00:19:15,440
is just a predefined number that's

00:19:13,600 --> 00:19:18,320
assigned to a service

00:19:15,440 --> 00:19:19,520
that that service listens on on the

00:19:18,320 --> 00:19:21,600
network

00:19:19,520 --> 00:19:23,440
you can think of these numbers similarly

00:19:21,600 --> 00:19:24,960
to how we think about addresses in

00:19:23,440 --> 00:19:26,799
postal mail

00:19:24,960 --> 00:19:28,799
and by that i mean if let's say my

00:19:26,799 --> 00:19:31,039
family lives at 123 main street we've

00:19:28,799 --> 00:19:31,840
all got the same address right 123 main

00:19:31,039 --> 00:19:33,840
street

00:19:31,840 --> 00:19:35,120
if a piece of mail comes to 123 main

00:19:33,840 --> 00:19:36,880
street well how do i know that it's

00:19:35,120 --> 00:19:37,600
going to me or my wife or my two

00:19:36,880 --> 00:19:39,120
daughters

00:19:37,600 --> 00:19:41,039
well there's additional address

00:19:39,120 --> 00:19:42,240
information on the envelope if i look at

00:19:41,039 --> 00:19:44,400
the envelope it says

00:19:42,240 --> 00:19:45,679
it's addressed to me or it's addressed

00:19:44,400 --> 00:19:48,400
to my wife or

00:19:45,679 --> 00:19:49,679
my daughters or whatever so you can

00:19:48,400 --> 00:19:53,200
think of a port number

00:19:49,679 --> 00:19:54,320
as sort of the same thing if web dns and

00:19:53,200 --> 00:19:56,160
file and print services

00:19:54,320 --> 00:20:00,320
all run on one computer they all share

00:19:56,160 --> 00:20:03,440
the same address like 192.168.99 to 100.

00:20:00,320 --> 00:20:05,520
when a packet comes in

00:20:03,440 --> 00:20:07,120
if it comes in for the web server well

00:20:05,520 --> 00:20:08,640
how does the system know which service

00:20:07,120 --> 00:20:10,159
receives the packet well

00:20:08,640 --> 00:20:11,600
there's additional address information

00:20:10,159 --> 00:20:13,200
and that is the port number of the

00:20:11,600 --> 00:20:13,760
service the packet that comes in will

00:20:13,200 --> 00:20:16,880
say

00:20:13,760 --> 00:20:20,159
i'm destined for 192.168.99.100

00:20:16,880 --> 00:20:21,440
port 80. services generally listen on

00:20:20,159 --> 00:20:24,080
pre-defined ports

00:20:21,440 --> 00:20:26,000
using pre-defined protocols uh web

00:20:24,080 --> 00:20:27,280
services for instance are generally on

00:20:26,000 --> 00:20:30,880
80 and 443

00:20:27,280 --> 00:20:34,000
80 for insecure no ssl and 443 for

00:20:30,880 --> 00:20:37,679
ssl or tls or some other mechanism

00:20:34,000 --> 00:20:40,559
and typically use tcp for instance dns

00:20:37,679 --> 00:20:41,840
listens on 53 and typically uses udp

00:20:40,559 --> 00:20:44,720
although be careful because

00:20:41,840 --> 00:20:47,200
under heavy traffic conditions dns

00:20:44,720 --> 00:20:49,760
servers will also use tcp

00:20:47,200 --> 00:20:52,480
ssh for instance the ssh server listens

00:20:49,760 --> 00:20:55,919
on port 22 and it listens using tcp

00:20:52,480 --> 00:20:58,240
email transfer uses port 25 and uses tcp

00:20:55,919 --> 00:21:00,159
there are hundreds of defined services

00:20:58,240 --> 00:21:02,960
and if you go look in the file called

00:21:00,159 --> 00:21:03,440
etsy services you'll see what all of

00:21:02,960 --> 00:21:05,600
those

00:21:03,440 --> 00:21:08,000
services are what are the predefined

00:21:05,600 --> 00:21:09,600
services are and they are predefined

00:21:08,000 --> 00:21:11,360
and we share the that information in

00:21:09,600 --> 00:21:12,640
etsy services and there is a registry of

00:21:11,360 --> 00:21:15,120
services so

00:21:12,640 --> 00:21:17,360
that's that's going to be common across

00:21:15,120 --> 00:21:20,400
all the systems you use

00:21:17,360 --> 00:21:22,480
now it used to be that we'd leave

00:21:20,400 --> 00:21:24,480
firewall rules to network engineers or

00:21:22,480 --> 00:21:25,600
we would just use host-based firewalls

00:21:24,480 --> 00:21:27,120
for everything

00:21:25,600 --> 00:21:29,200
you know it used to just be that i would

00:21:27,120 --> 00:21:31,760
go tell the the cisco person

00:21:29,200 --> 00:21:33,039
or the you know the whoever's running my

00:21:31,760 --> 00:21:34,960
network infrastructure hey i've got a

00:21:33,039 --> 00:21:36,480
web server and a mail server and a

00:21:34,960 --> 00:21:38,000
you know database server and they would

00:21:36,480 --> 00:21:38,320
set all those firewall rules up for me

00:21:38,000 --> 00:21:40,240
but

00:21:38,320 --> 00:21:42,159
today we really need to be able to

00:21:40,240 --> 00:21:43,919
understand about firewalling and how

00:21:42,159 --> 00:21:44,640
they work and where we can apply

00:21:43,919 --> 00:21:46,799
firewall

00:21:44,640 --> 00:21:47,840
type services and this is what i'm

00:21:46,799 --> 00:21:51,520
talking about

00:21:47,840 --> 00:21:52,240
in in my environment in aws i can apply

00:21:51,520 --> 00:21:54,480
rules

00:21:52,240 --> 00:21:56,080
at the virtual private cloud level using

00:21:54,480 --> 00:21:58,080
network acls

00:21:56,080 --> 00:22:00,640
at the ec2 level which is the instance

00:21:58,080 --> 00:22:03,440
level using security groups

00:22:00,640 --> 00:22:04,400
and at the host level using iptables for

00:22:03,440 --> 00:22:06,720
instance

00:22:04,400 --> 00:22:08,240
so we've got some options and you kind

00:22:06,720 --> 00:22:10,640
of have to understand

00:22:08,240 --> 00:22:12,720
how those options work so that you know

00:22:10,640 --> 00:22:15,600
you know which one to choose

00:22:12,720 --> 00:22:17,200
for instance if i'm using network acls i

00:22:15,600 --> 00:22:19,360
can define a network acl

00:22:17,200 --> 00:22:20,320
and that's going to affect an entire

00:22:19,360 --> 00:22:22,320
subnet

00:22:20,320 --> 00:22:23,679
so if i set a rule that says i want to

00:22:22,320 --> 00:22:27,360
allow inbound

00:22:23,679 --> 00:22:28,559
access to port 80 on using tcp so web

00:22:27,360 --> 00:22:30,640
services

00:22:28,559 --> 00:22:32,880
that's a blanket rule for the whole

00:22:30,640 --> 00:22:34,559
subnet every system that's on the subnet

00:22:32,880 --> 00:22:36,320
will have port 80 opened

00:22:34,559 --> 00:22:38,159
so that may not be a bad thing that may

00:22:36,320 --> 00:22:40,880
be perfectly fine but just be aware that

00:22:38,159 --> 00:22:44,400
network acls affect entire subnets

00:22:40,880 --> 00:22:45,200
ec2 security groups affect individual

00:22:44,400 --> 00:22:46,960
instances

00:22:45,200 --> 00:22:49,120
so if you create a security group which

00:22:46,960 --> 00:22:51,760
allows access to port 80 and tcp

00:22:49,120 --> 00:22:52,400
you'll then assign that security group

00:22:51,760 --> 00:22:54,559
to those

00:22:52,400 --> 00:22:56,480
instances you want folks to be able to

00:22:54,559 --> 00:22:58,960
access on port 80 tcp

00:22:56,480 --> 00:23:00,320
and you can stack um security groups or

00:22:58,960 --> 00:23:01,760
you let me rephrase that

00:23:00,320 --> 00:23:03,360
you can create security groups that have

00:23:01,760 --> 00:23:03,600
multiple rules like i could say i want

00:23:03,360 --> 00:23:07,760
to

00:23:03,600 --> 00:23:08,559
open up 80 and 22 and 443 you know i can

00:23:07,760 --> 00:23:10,240
i can

00:23:08,559 --> 00:23:12,880
set either multiple security groups or i

00:23:10,240 --> 00:23:15,360
can stack rules within a security group

00:23:12,880 --> 00:23:17,520
host base firewall settings affect only

00:23:15,360 --> 00:23:19,600
that one instance so if i'm using ip

00:23:17,520 --> 00:23:21,200
tables on an individual linux instance

00:23:19,600 --> 00:23:23,760
it's only going to affect that one

00:23:21,200 --> 00:23:26,320
individual linux instance

00:23:23,760 --> 00:23:27,360
now network acls are stateless security

00:23:26,320 --> 00:23:29,440
groups are state

00:23:27,360 --> 00:23:30,720
full so security groups are going to be

00:23:29,440 --> 00:23:33,600
smarter in that

00:23:30,720 --> 00:23:34,000
you know if i've allowed traffic into uh

00:23:33,600 --> 00:23:37,280
you know

00:23:34,000 --> 00:23:37,679
port 443 for instance the traffic that's

00:23:37,280 --> 00:23:40,720
then

00:23:37,679 --> 00:23:41,360
outbound um that's in response to that

00:23:40,720 --> 00:23:43,919
request

00:23:41,360 --> 00:23:45,120
it's gonna the the network the security

00:23:43,919 --> 00:23:46,960
groups are gonna be aware of that and

00:23:45,120 --> 00:23:49,760
understand that oh this is a response to

00:23:46,960 --> 00:23:52,480
that inbound request

00:23:49,760 --> 00:23:53,600
now security groups only allow

00:23:52,480 --> 00:23:55,200
connections

00:23:53,600 --> 00:23:57,279
the depart the default behavior for a

00:23:55,200 --> 00:23:59,279
security group is deny everything so

00:23:57,279 --> 00:24:00,960
when you are setting up a security group

00:23:59,279 --> 00:24:03,200
you're gonna you're gonna

00:24:00,960 --> 00:24:04,480
the the last rule is gonna be deny so

00:24:03,200 --> 00:24:07,200
you're going to have to go in and say i

00:24:04,480 --> 00:24:10,240
want to allow access to port 80 port 443

00:24:07,200 --> 00:24:11,600
tcp on both of those and so on whereas

00:24:10,240 --> 00:24:14,799
network acls

00:24:11,600 --> 00:24:17,360
support both allow and deny rules for a

00:24:14,799 --> 00:24:19,279
protocol for a subnet for a host and so

00:24:17,360 --> 00:24:21,279
on

00:24:19,279 --> 00:24:23,679
security groups are processed before

00:24:21,279 --> 00:24:26,000
network acls

00:24:23,679 --> 00:24:27,360
and there are perfectly valid reasons to

00:24:26,000 --> 00:24:29,440
use network acls

00:24:27,360 --> 00:24:32,080
security groups and or host-based

00:24:29,440 --> 00:24:34,559
firewalls it's going to fall down to

00:24:32,080 --> 00:24:35,679
comfort levels it's going to fall down

00:24:34,559 --> 00:24:37,919
to

00:24:35,679 --> 00:24:39,039
what you're trying to accomplish it's

00:24:37,919 --> 00:24:40,159
even going to fall down to

00:24:39,039 --> 00:24:41,919
you know what you're most comfortable

00:24:40,159 --> 00:24:42,720
with i'm going to show you a screenshot

00:24:41,919 --> 00:24:45,039
here in a second

00:24:42,720 --> 00:24:47,120
that's actually silly and i'm sorry this

00:24:45,039 --> 00:24:48,960
is smaller than i had intended it to be

00:24:47,120 --> 00:24:52,240
guys i i apologize

00:24:48,960 --> 00:24:54,720
but i have um set up a security group

00:24:52,240 --> 00:24:57,039
and i said i'm going to allow all

00:24:54,720 --> 00:24:57,440
traffic all protocols all port ranges

00:24:57,039 --> 00:25:00,720
from

00:24:57,440 --> 00:25:03,679
everywhere into the systems that i

00:25:00,720 --> 00:25:05,200
associate the security group with now in

00:25:03,679 --> 00:25:06,960
the real world that's actually kind of

00:25:05,200 --> 00:25:10,080
crazy probably shouldn't do that

00:25:06,960 --> 00:25:11,600
but if i'm an old linux geek and i have

00:25:10,080 --> 00:25:14,720
been working with ip tables

00:25:11,600 --> 00:25:16,880
you know for 20 years like me

00:25:14,720 --> 00:25:18,880
then maybe that does make sense maybe

00:25:16,880 --> 00:25:22,880
that is a good thing to do because

00:25:18,880 --> 00:25:26,480
um you know i i am used to just having

00:25:22,880 --> 00:25:28,000
raw access to my systems i log in and i

00:25:26,480 --> 00:25:29,440
set up my iptables rules and then i

00:25:28,000 --> 00:25:30,720
replicate those across the machine maybe

00:25:29,440 --> 00:25:33,279
that makes sense

00:25:30,720 --> 00:25:36,080
probably not but you know maybe maybe

00:25:33,279 --> 00:25:38,720
for us old graybeards that makes sense

00:25:36,080 --> 00:25:39,120
now i do want to compare and contrast

00:25:38,720 --> 00:25:41,039
this

00:25:39,120 --> 00:25:42,159
is a network acl now remember that

00:25:41,039 --> 00:25:43,919
network acls

00:25:42,159 --> 00:25:44,799
are going to be assigned to subnets

00:25:43,919 --> 00:25:45,679
they're going to be associated with

00:25:44,799 --> 00:25:49,039
subnets

00:25:45,679 --> 00:25:51,600
and let me go back to the um

00:25:49,039 --> 00:25:53,120
i'm sorry let me go down um so you can

00:25:51,600 --> 00:25:54,240
see that i've got inbound and outbound

00:25:53,120 --> 00:25:56,720
rules

00:25:54,240 --> 00:25:58,559
and i've got you know again i can i can

00:25:56,720 --> 00:25:59,520
be as granular as i want i can do

00:25:58,559 --> 00:26:02,720
multiple

00:25:59,520 --> 00:26:04,240
um uh protocols multiple

00:26:02,720 --> 00:26:06,400
multiple port numbers and so on and so

00:26:04,240 --> 00:26:07,760
forth this is applied because it's a

00:26:06,400 --> 00:26:08,400
network acl this is applied to the

00:26:07,760 --> 00:26:10,159
subnet

00:26:08,400 --> 00:26:11,919
if i go back over here to security

00:26:10,159 --> 00:26:13,840
groups this is

00:26:11,919 --> 00:26:15,200
this is going to be applied to

00:26:13,840 --> 00:26:17,120
individual uh

00:26:15,200 --> 00:26:18,240
instances so that's kind of the

00:26:17,120 --> 00:26:21,039
difference there

00:26:18,240 --> 00:26:22,799
um and there are similar setups for

00:26:21,039 --> 00:26:26,080
other clouds

00:26:22,799 --> 00:26:28,400
my point is not that uh you know hey go

00:26:26,080 --> 00:26:31,600
use the aws way of doing things

00:26:28,400 --> 00:26:33,039
my point is understand that different

00:26:31,600 --> 00:26:34,640
clouds have different security

00:26:33,039 --> 00:26:37,520
mechanisms and they're going to

00:26:34,640 --> 00:26:38,960
to give you access uh to subnets and two

00:26:37,520 --> 00:26:41,279
hosts in different ways

00:26:38,960 --> 00:26:42,480
just make sure you understand them

00:26:41,279 --> 00:26:44,320
before you set up

00:26:42,480 --> 00:26:46,000
your network access rules make a

00:26:44,320 --> 00:26:48,320
decision as to

00:26:46,000 --> 00:26:50,480
are you going to apply all your security

00:26:48,320 --> 00:26:51,679
at the subnet level or at the

00:26:50,480 --> 00:26:53,760
host level are you going to do a

00:26:51,679 --> 00:26:55,840
combination of them or

00:26:53,760 --> 00:26:58,320
you know just just make the decision and

00:26:55,840 --> 00:27:00,080
go from there

00:26:58,320 --> 00:27:03,039
now i want to talk a little bit about

00:27:00,080 --> 00:27:04,880
logging because as i said earlier

00:27:03,039 --> 00:27:07,279
if you don't know what happened you

00:27:04,880 --> 00:27:08,559
can't fix it and the only way to really

00:27:07,279 --> 00:27:10,880
know what happened

00:27:08,559 --> 00:27:13,760
is to look at log files look at what's

00:27:10,880 --> 00:27:15,440
going on from a logging perspective

00:27:13,760 --> 00:27:17,120
but here's the thing we're talking about

00:27:15,440 --> 00:27:20,240
cloud scale

00:27:17,120 --> 00:27:21,760
cloud scale can involve i mean seriously

00:27:20,240 --> 00:27:22,960
thousands or tens of thousands or

00:27:21,760 --> 00:27:25,600
hundreds of thousands of

00:27:22,960 --> 00:27:27,200
of instances so you know things get

00:27:25,600 --> 00:27:29,279
really really crazy

00:27:27,200 --> 00:27:32,159
when you talk about trying to manage

00:27:29,279 --> 00:27:34,320
logging at that kind of a scale

00:27:32,159 --> 00:27:35,520
it is non-trivial but you really have

00:27:34,320 --> 00:27:38,240
got to do it

00:27:35,520 --> 00:27:38,880
um there are a ton of solutions

00:27:38,240 --> 00:27:42,799
available

00:27:38,880 --> 00:27:46,000
out there um stuff as simple as nagios

00:27:42,799 --> 00:27:47,600
to elk stack which is elasticsearch log

00:27:46,000 --> 00:27:49,600
stash and cabana cabana

00:27:47,600 --> 00:27:51,039
which is super super super popular the

00:27:49,600 --> 00:27:52,559
elk stack is really really popular and

00:27:51,039 --> 00:27:55,840
very powerful

00:27:52,559 --> 00:27:58,159
fluent d and a lot of other open source

00:27:55,840 --> 00:27:59,200
solutions community driven solutions

00:27:58,159 --> 00:28:00,840
some of which have

00:27:59,200 --> 00:28:02,240
commercial backing and some of which

00:28:00,840 --> 00:28:03,919
don't

00:28:02,240 --> 00:28:05,600
there are also commercial offerings like

00:28:03,919 --> 00:28:07,919
splunk and solarwinds and

00:28:05,600 --> 00:28:10,480
aws cloudwatch logs and azure monitor

00:28:07,919 --> 00:28:13,919
and google cloud logging and so on

00:28:10,480 --> 00:28:16,399
those are all uh really viable tools

00:28:13,919 --> 00:28:18,320
and will allow you to do some things

00:28:16,399 --> 00:28:20,559
like look at trend analysis

00:28:18,320 --> 00:28:21,440
look at um you know hey if somebody's

00:28:20,559 --> 00:28:23,520
trying to break in

00:28:21,440 --> 00:28:26,080
or oh if i'm running into a consistent

00:28:23,520 --> 00:28:28,480
problem you know with

00:28:26,080 --> 00:28:30,480
some service i've got a service running

00:28:28,480 --> 00:28:33,520
and you know i've noticed that after

00:28:30,480 --> 00:28:36,159
21 days the service becomes unstable

00:28:33,520 --> 00:28:38,000
if you're doing log file analysis and

00:28:36,159 --> 00:28:40,399
you can spot those trends

00:28:38,000 --> 00:28:41,039
you may be able to keep yourself from

00:28:40,399 --> 00:28:43,679
having

00:28:41,039 --> 00:28:45,440
downtime because you know you know oh

00:28:43,679 --> 00:28:46,799
hey it's coming up to x number of days

00:28:45,440 --> 00:28:47,840
you know maybe i should recycle the

00:28:46,799 --> 00:28:50,399
service or

00:28:47,840 --> 00:28:51,039
you know reboot the instance or or

00:28:50,399 --> 00:28:53,520
better

00:28:51,039 --> 00:28:54,880
uh is reach out to the upstream and

00:28:53,520 --> 00:28:56,240
figure out why this thing's crashing out

00:28:54,880 --> 00:28:58,880
after 21 days

00:28:56,240 --> 00:29:00,159
um but my point is you really need to

00:28:58,880 --> 00:29:00,799
understand what's going on in your

00:29:00,159 --> 00:29:02,480
environment

00:29:00,799 --> 00:29:04,080
if you don't have good log file analysis

00:29:02,480 --> 00:29:05,279
you're exposing yourself to risk

00:29:04,080 --> 00:29:07,200
and you're probably not going to know

00:29:05,279 --> 00:29:10,640
what's going on and no

00:29:07,200 --> 00:29:11,520
it is not good enough to just ssh into

00:29:10,640 --> 00:29:13,200
the instance

00:29:11,520 --> 00:29:15,679
after you've had a problem and start

00:29:13,200 --> 00:29:18,640
poking around you really do need to

00:29:15,679 --> 00:29:20,559
figure out a way to aggregate your logs

00:29:18,640 --> 00:29:22,080
into a central location and do some sort

00:29:20,559 --> 00:29:23,440
of analysis of that

00:29:22,080 --> 00:29:26,000
whether it's commercial stuff like

00:29:23,440 --> 00:29:28,000
cloudwatch logs azure monitor google

00:29:26,000 --> 00:29:31,360
cloud logging splunk solarwinds or

00:29:28,000 --> 00:29:31,360
something like the elk stack

00:29:32,480 --> 00:29:36,960
user management so when we talk about

00:29:35,039 --> 00:29:39,360
user management that has changed quite a

00:29:36,960 --> 00:29:43,679
bit as well

00:29:39,360 --> 00:29:46,240
it used to be that we just dealt with

00:29:43,679 --> 00:29:48,320
regular linux users right the you'd use

00:29:46,240 --> 00:29:49,679
user ad or user mod or user dell and

00:29:48,320 --> 00:29:51,520
they would be stored in etsy password

00:29:49,679 --> 00:29:53,279
etsy shadow it's a group and ncg

00:29:51,520 --> 00:29:54,559
shadow they'd have a home directory

00:29:53,279 --> 00:29:56,320
under slash home and

00:29:54,559 --> 00:29:57,600
and we could you know change passwords

00:29:56,320 --> 00:29:59,440
and do all that kind of good stuff and

00:29:57,600 --> 00:30:02,080
for a single system or even a handful of

00:29:59,440 --> 00:30:04,960
systems yeah that's doable that's fine

00:30:02,080 --> 00:30:05,600
but as things scaled in in the early

00:30:04,960 --> 00:30:07,679
days

00:30:05,600 --> 00:30:10,080
we would look at things like directory

00:30:07,679 --> 00:30:11,039
services like open ldap the 389

00:30:10,080 --> 00:30:13,279
directory server

00:30:11,039 --> 00:30:15,760
active directory and things things of

00:30:13,279 --> 00:30:17,840
that nature

00:30:15,760 --> 00:30:19,440
you know you do need to understand

00:30:17,840 --> 00:30:20,880
directory services

00:30:19,440 --> 00:30:22,320
because you're probably going to be

00:30:20,880 --> 00:30:25,760
using those especially as you get to

00:30:22,320 --> 00:30:25,760
really large scale environments

00:30:25,919 --> 00:30:29,760
but then you also have the additional

00:30:28,799 --> 00:30:33,200
complexity

00:30:29,760 --> 00:30:36,000
of okay there's my user account that

00:30:33,200 --> 00:30:38,159
exists maybe in the directory but then

00:30:36,000 --> 00:30:40,720
i've got a cloud user account that maybe

00:30:38,159 --> 00:30:42,559
you know when i log into my my control

00:30:40,720 --> 00:30:43,760
panel for whatever cloud vendor that i

00:30:42,559 --> 00:30:46,799
use whether it's

00:30:43,760 --> 00:30:48,159
aws or azure or google or rackspace or

00:30:46,799 --> 00:30:48,840
you know any any one of a number of

00:30:48,159 --> 00:30:51,760
really good

00:30:48,840 --> 00:30:54,240
providers um there's that level

00:30:51,760 --> 00:30:55,039
of authentication and authorization that

00:30:54,240 --> 00:30:58,480
happens

00:30:55,039 --> 00:31:01,600
in the case of aws uh

00:30:58,480 --> 00:31:02,960
at the at im the im level the the

00:31:01,600 --> 00:31:06,240
identity and access manager

00:31:02,960 --> 00:31:08,320
level and that's a whole set of

00:31:06,240 --> 00:31:10,159
permissions that can be used for

00:31:08,320 --> 00:31:11,919
not necessarily what you're doing within

00:31:10,159 --> 00:31:15,039
the linux

00:31:11,919 --> 00:31:16,559
instances but because everything is so

00:31:15,039 --> 00:31:18,080
tightly connected these days and because

00:31:16,559 --> 00:31:20,960
everything is so integrated

00:31:18,080 --> 00:31:21,600
in a lot of cases we need to have access

00:31:20,960 --> 00:31:23,440
to

00:31:21,600 --> 00:31:24,799
spin up additional resources like

00:31:23,440 --> 00:31:27,440
especially if we're doing

00:31:24,799 --> 00:31:28,399
scalable applications well i need to

00:31:27,440 --> 00:31:31,360
have

00:31:28,399 --> 00:31:32,159
privileges to spin up additional linux

00:31:31,360 --> 00:31:33,679
instances

00:31:32,159 --> 00:31:35,039
or maybe you know increase the size of

00:31:33,679 --> 00:31:35,840
my database you know there's a ton of

00:31:35,039 --> 00:31:38,880
things

00:31:35,840 --> 00:31:41,919
so make sure that you understand

00:31:38,880 --> 00:31:45,120
the the connection between your plot

00:31:41,919 --> 00:31:47,279
your your cloud providers login and

00:31:45,120 --> 00:31:48,399
what privileges you have in your cloud

00:31:47,279 --> 00:31:52,960
environment and

00:31:48,399 --> 00:31:52,960
whether or not you are

00:31:54,880 --> 00:32:00,240
whether your cloud account has any

00:31:57,440 --> 00:32:02,559
relevance to your linux account

00:32:00,240 --> 00:32:04,480
jack good question any pointers on the

00:32:02,559 --> 00:32:08,240
most important system logs

00:32:04,480 --> 00:32:11,360
so if you're using new systems that have

00:32:08,240 --> 00:32:13,600
journal control then yes i mean you can

00:32:11,360 --> 00:32:15,840
you can use journal control to dump

00:32:13,600 --> 00:32:17,519
everything that the system does

00:32:15,840 --> 00:32:20,320
you're going to want to look at things

00:32:17,519 --> 00:32:23,760
like any sorts of networking logs

00:32:20,320 --> 00:32:25,760
any sorts of kernel logs like if the

00:32:23,760 --> 00:32:27,440
kernel is reporting any kind of errors

00:32:25,760 --> 00:32:29,279
if your applications are logging

00:32:27,440 --> 00:32:31,120
correctly they should be talking to

00:32:29,279 --> 00:32:31,679
journal control or to the the system

00:32:31,120 --> 00:32:33,360
journal

00:32:31,679 --> 00:32:34,720
and you can actually uh pull out

00:32:33,360 --> 00:32:36,559
information on an application by

00:32:34,720 --> 00:32:39,039
application standpoint

00:32:36,559 --> 00:32:39,919
or basis and then uh even if they're not

00:32:39,039 --> 00:32:42,240
talking to journal

00:32:39,919 --> 00:32:43,120
the system journal they can also write

00:32:42,240 --> 00:32:46,080
to var log

00:32:43,120 --> 00:32:47,840
messages or var log you know application

00:32:46,080 --> 00:32:49,919
one var log application two

00:32:47,840 --> 00:32:51,200
uh so those are all uh system logs that

00:32:49,919 --> 00:32:52,399
you're gonna wanna look at if the

00:32:51,200 --> 00:32:53,840
application

00:32:52,399 --> 00:32:55,519
that is running is the one that you have

00:32:53,840 --> 00:32:56,480
that instance built for so there's

00:32:55,519 --> 00:32:57,360
there's a

00:32:56,480 --> 00:32:59,679
most of the stuff that you're going to

00:32:57,360 --> 00:33:00,399
find is either in var log messages or

00:32:59,679 --> 00:33:02,480
var log

00:33:00,399 --> 00:33:04,240
whatever the service name is or if it's

00:33:02,480 --> 00:33:05,919
a journal control system then you can

00:33:04,240 --> 00:33:08,399
just use journal control and then

00:33:05,919 --> 00:33:09,919
pipe out or pull out those messages

00:33:08,399 --> 00:33:12,159
which are specific to the services that

00:33:09,919 --> 00:33:15,919
you're running

00:33:12,159 --> 00:33:17,600
okay understand the differences in user

00:33:15,919 --> 00:33:19,360
manager and choose the tool which works

00:33:17,600 --> 00:33:22,799
best for your enterprise

00:33:19,360 --> 00:33:23,679
if you don't have like really massive

00:33:22,799 --> 00:33:25,840
scale

00:33:23,679 --> 00:33:26,880
something like open ldap or 389 maybe

00:33:25,840 --> 00:33:29,600
absolutely fine

00:33:26,880 --> 00:33:31,360
that may be all you need if you're not

00:33:29,600 --> 00:33:32,559
using windows well certainly

00:33:31,360 --> 00:33:35,440
active directory doesn't make a lot of

00:33:32,559 --> 00:33:37,360
sense but if you are scaling really

00:33:35,440 --> 00:33:39,519
really large then you want to look at

00:33:37,360 --> 00:33:41,120
you know large large directory services

00:33:39,519 --> 00:33:42,880
capabilities either commercially

00:33:41,120 --> 00:33:46,320
available from your cloud provider

00:33:42,880 --> 00:33:48,000
uh or using community tools and then

00:33:46,320 --> 00:33:49,600
again understand the privileges that the

00:33:48,000 --> 00:33:51,120
cloud services require and make sure

00:33:49,600 --> 00:33:52,159
that you address them so if you want

00:33:51,120 --> 00:33:53,440
somebody to be able to spin up

00:33:52,159 --> 00:33:55,360
additional resources make sure that

00:33:53,440 --> 00:33:56,080
you're handling that account that user

00:33:55,360 --> 00:33:58,240
account

00:33:56,080 --> 00:34:00,880
with your cloud provider not necessarily

00:33:58,240 --> 00:34:03,360
inside of linux

00:34:00,880 --> 00:34:05,519
patching or how dev and ops learns to

00:34:03,360 --> 00:34:08,240
hate each other

00:34:05,519 --> 00:34:08,639
gotta keep up with patching you have to

00:34:08,240 --> 00:34:11,520
keep

00:34:08,639 --> 00:34:12,639
up with patching it's invasive and it

00:34:11,520 --> 00:34:14,960
takes planning

00:34:12,639 --> 00:34:16,480
and it takes time and it may may

00:34:14,960 --> 00:34:17,359
potentially depending on the application

00:34:16,480 --> 00:34:20,800
you're patching

00:34:17,359 --> 00:34:24,480
uh involve downtime or outages i don't

00:34:20,800 --> 00:34:26,480
care do it you really have got to keep

00:34:24,480 --> 00:34:29,440
up with your patching

00:34:26,480 --> 00:34:29,839
and if your devs build the applications

00:34:29,440 --> 00:34:32,879
right

00:34:29,839 --> 00:34:34,320
it should only impact you minimally in a

00:34:32,879 --> 00:34:35,760
perfect world if you're building a cloud

00:34:34,320 --> 00:34:37,119
scale application

00:34:35,760 --> 00:34:38,240
you're going to have some sort of shared

00:34:37,119 --> 00:34:40,000
data source you're going to have a

00:34:38,240 --> 00:34:42,399
loosely coupled application

00:34:40,000 --> 00:34:43,200
that if one node of the application goes

00:34:42,399 --> 00:34:46,480
away

00:34:43,200 --> 00:34:47,280
it shouldn't interrupt the customer

00:34:46,480 --> 00:34:50,079
perception

00:34:47,280 --> 00:34:51,200
of application availability in a perfect

00:34:50,079 --> 00:34:52,960
world that's assuming you've got you

00:34:51,200 --> 00:34:53,359
know your load balancer set up correctly

00:34:52,960 --> 00:34:54,720
and

00:34:53,359 --> 00:34:56,320
all those kinds of things but my point

00:34:54,720 --> 00:34:57,680
is work with your developers and that's

00:34:56,320 --> 00:34:58,400
this is where dev and ops start to love

00:34:57,680 --> 00:34:59,920
each other again

00:34:58,400 --> 00:35:01,359
work with your developers to explain to

00:34:59,920 --> 00:35:02,960
them what it is you need to do when

00:35:01,359 --> 00:35:05,280
you're taking an outage and have them

00:35:02,960 --> 00:35:07,040
built the application to do that

00:35:05,280 --> 00:35:08,480
monolithic cots apps they're a different

00:35:07,040 --> 00:35:09,440
story they suck they're always going to

00:35:08,480 --> 00:35:14,000
suck it's going to be

00:35:09,440 --> 00:35:15,520
a pain because you know you've got to

00:35:14,000 --> 00:35:17,280
in most cases you've got to shut down

00:35:15,520 --> 00:35:19,680
the application you've got a quiesa

00:35:17,280 --> 00:35:20,079
database or whatever and yes it sucks

00:35:19,680 --> 00:35:22,000
but

00:35:20,079 --> 00:35:23,359
you have to keep things up to date

00:35:22,000 --> 00:35:25,920
according to zdnet

00:35:23,359 --> 00:35:27,359
one in three exploits are due to

00:35:25,920 --> 00:35:30,320
unpatched servers

00:35:27,359 --> 00:35:31,520
one in three so you know i mean i don't

00:35:30,320 --> 00:35:32,320
know about you but i don't want to be

00:35:31,520 --> 00:35:33,760
the one whose

00:35:32,320 --> 00:35:35,520
organization is on the front page of the

00:35:33,760 --> 00:35:39,280
new york times so do

00:35:35,520 --> 00:35:42,320
your patching and then final topic

00:35:39,280 --> 00:35:44,960
is security enhanced linux

00:35:42,320 --> 00:35:47,440
don't turn it off i know it's a pain i

00:35:44,960 --> 00:35:49,359
know that you have to learn about it

00:35:47,440 --> 00:35:51,280
security enhanced linux or se linux is a

00:35:49,359 --> 00:35:53,680
mandatory access control system

00:35:51,280 --> 00:35:54,320
which uses an administrative policy

00:35:53,680 --> 00:35:57,200
which is

00:35:54,320 --> 00:35:58,000
fixed what that means is unlike

00:35:57,200 --> 00:36:00,079
discretionary

00:35:58,000 --> 00:36:01,760
access control systems where permissions

00:36:00,079 --> 00:36:04,320
are set by users

00:36:01,760 --> 00:36:04,960
you know i can do a chamod 777 home

00:36:04,320 --> 00:36:08,000
slash t

00:36:04,960 --> 00:36:10,000
cameron for instance um and

00:36:08,000 --> 00:36:11,440
you know anything anybody who wants to

00:36:10,000 --> 00:36:14,320
access my home directory that point's

00:36:11,440 --> 00:36:14,320
going to be able to get in

00:36:14,560 --> 00:36:21,119
if i use se linux though

00:36:18,160 --> 00:36:23,040
i can have policies that say things like

00:36:21,119 --> 00:36:24,800
the web server process may or may not

00:36:23,040 --> 00:36:28,079
access users home directories or

00:36:24,800 --> 00:36:28,640
the root user can enable or disable se

00:36:28,079 --> 00:36:31,280
linux

00:36:28,640 --> 00:36:31,839
so i can get super granular uh on what i

00:36:31,280 --> 00:36:33,920
allow

00:36:31,839 --> 00:36:35,440
and even if a user does something stupid

00:36:33,920 --> 00:36:37,680
like chamod 777

00:36:35,440 --> 00:36:39,359
home slash t cameron when the apache web

00:36:37,680 --> 00:36:40,079
server starts up and tries to access his

00:36:39,359 --> 00:36:42,000
home directory

00:36:40,079 --> 00:36:43,440
if there's an se linux policy in place

00:36:42,000 --> 00:36:45,680
that blocks it

00:36:43,440 --> 00:36:47,040
the web server will not have access to

00:36:45,680 --> 00:36:49,839
that home directory

00:36:47,040 --> 00:36:50,800
so se linux is definitely a built-in

00:36:49,839 --> 00:36:54,079
suspenders

00:36:50,800 --> 00:36:56,880
type of approach to security but it's

00:36:54,079 --> 00:36:58,400
absolutely worth doing um really if you

00:36:56,880 --> 00:37:00,880
want to learn more about

00:36:58,400 --> 00:37:01,839
se linux you can look at a video that i

00:37:00,880 --> 00:37:03,520
did

00:37:01,839 --> 00:37:05,359
security enhanced linux for mere mortals

00:37:03,520 --> 00:37:05,760
it's on youtube it's from red hat summit

00:37:05,359 --> 00:37:09,359
uh

00:37:05,760 --> 00:37:11,240
two years ago my se linux

00:37:09,359 --> 00:37:13,200
videos have been viewed something like

00:37:11,240 --> 00:37:16,160
180 000 times

00:37:13,200 --> 00:37:17,760
so i think that they're pretty good they

00:37:16,160 --> 00:37:19,280
tend to get referenced a lot so

00:37:17,760 --> 00:37:21,280
if you want to understand a little bit

00:37:19,280 --> 00:37:23,119
more about security enhanced linux

00:37:21,280 --> 00:37:25,359
go watch se linux for our security

00:37:23,119 --> 00:37:27,839
enhanced linux for mere mortals

00:37:25,359 --> 00:37:29,839
it's worth the learning curve if you

00:37:27,839 --> 00:37:31,359
watch the video it's about an hour

00:37:29,839 --> 00:37:33,520
it's worth the learning curve and it can

00:37:31,359 --> 00:37:35,680
absolutely save your bacon in the event

00:37:33,520 --> 00:37:38,000
of somebody doing something like

00:37:35,680 --> 00:37:40,160
maybe they get access to the apache web

00:37:38,000 --> 00:37:41,119
server there's a configuration error or

00:37:40,160 --> 00:37:43,760
something like that

00:37:41,119 --> 00:37:44,800
they own the apache web server and then

00:37:43,760 --> 00:37:48,160
they try to access like

00:37:44,800 --> 00:37:49,920
etsy shadow it will

00:37:48,160 --> 00:37:51,359
it will still stop them from accessing

00:37:49,920 --> 00:37:53,200
it because the etsy shadow

00:37:51,359 --> 00:37:55,200
file doesn't have the right se linux

00:37:53,200 --> 00:37:58,240
context for the web server to access

00:37:55,200 --> 00:38:00,000
so it's good stuff

00:37:58,240 --> 00:38:01,440
so in conclusion because it's supposed

00:38:00,000 --> 00:38:04,240
to be 45 hour thing and i wanted to

00:38:01,440 --> 00:38:06,720
leave a couple minutes for q a

00:38:04,240 --> 00:38:08,720
security in the cloud is a lot more than

00:38:06,720 --> 00:38:10,880
just what you do to the linux os

00:38:08,720 --> 00:38:12,880
man it it really is a lot more

00:38:10,880 --> 00:38:14,240
complicated we have to understand a lot

00:38:12,880 --> 00:38:16,160
more

00:38:14,240 --> 00:38:18,079
i can't teach you much in 45 minutes

00:38:16,160 --> 00:38:19,119
except you know the things that you need

00:38:18,079 --> 00:38:20,800
to pay attention to

00:38:19,119 --> 00:38:22,079
now you get to go and learn though how

00:38:20,800 --> 00:38:23,280
to manage all of these facets of

00:38:22,079 --> 00:38:25,599
security

00:38:23,280 --> 00:38:26,880
there's nothing i hope anyway there's

00:38:25,599 --> 00:38:28,320
nothing that i've talked to you about

00:38:26,880 --> 00:38:30,720
that's like oh it's some

00:38:28,320 --> 00:38:32,480
you know hidden arcane magic that's not

00:38:30,720 --> 00:38:34,640
the point the point is

00:38:32,480 --> 00:38:35,839
just that there are a lot of areas that

00:38:34,640 --> 00:38:37,119
you need to consider

00:38:35,839 --> 00:38:38,720
there are a lot of things that you want

00:38:37,119 --> 00:38:39,599
to think about when you're designing

00:38:38,720 --> 00:38:41,599
what your

00:38:39,599 --> 00:38:42,880
linux images are going to look like on

00:38:41,599 --> 00:38:44,240
the cloud

00:38:42,880 --> 00:38:46,320
and you want to make sure that you are

00:38:44,240 --> 00:38:50,079
managing those things in a sane

00:38:46,320 --> 00:38:53,280
uh a sane fashion

00:38:50,079 --> 00:38:55,839
so that um you're making good choices or

00:38:53,280 --> 00:38:57,599
even better um you've learned enough to

00:38:55,839 --> 00:39:00,640
where you can ask smart questions

00:38:57,599 --> 00:39:02,240
you know the the goal here is

00:39:00,640 --> 00:39:04,079
to really get you guys to the point

00:39:02,240 --> 00:39:05,920
where you know where to

00:39:04,079 --> 00:39:08,720
start if you haven't touched linux

00:39:05,920 --> 00:39:11,839
security in the cloud in the past

00:39:08,720 --> 00:39:12,640
so thank you guys very much and oh

00:39:11,839 --> 00:39:15,440
goodness

00:39:12,640 --> 00:39:17,280
feel free to reach out if you have any

00:39:15,440 --> 00:39:18,800
questions feel free to reach too

00:39:17,280 --> 00:39:21,280
but feel free to reach out if you have

00:39:18,800 --> 00:39:23,119
any questions i definitely enjoy this

00:39:21,280 --> 00:39:24,400
stuff i do not mind i know a lot of

00:39:23,119 --> 00:39:26,960
folks

00:39:24,400 --> 00:39:27,920
you know don't want to to be bothered or

00:39:26,960 --> 00:39:30,640
whatever

00:39:27,920 --> 00:39:31,440
but man do not hesitate at all to reach

00:39:30,640 --> 00:39:33,280
out to me

00:39:31,440 --> 00:39:35,280
if you have any questions let me put my

00:39:33,280 --> 00:39:36,320
contact information up there again real

00:39:35,280 --> 00:39:40,480
quick

00:39:36,320 --> 00:39:42,560
uh let's go to slide one

00:39:40,480 --> 00:39:43,920
that's my contact information i'm tdcam

00:39:42,560 --> 00:39:46,640
at amazon.com

00:39:43,920 --> 00:39:48,079
uh i'm on twitter at uh thomas d cameron

00:39:46,640 --> 00:39:51,920
and you can reach me on linkedin

00:39:48,079 --> 00:39:53,520
at linkedin thomas cameron

00:39:51,920 --> 00:39:54,960
uh let's see now we've got some

00:39:53,520 --> 00:39:56,960
questions in the chat

00:39:54,960 --> 00:39:58,660
any thought about systemd's plan to

00:39:56,960 --> 00:40:00,240
create their own user management system

00:39:58,660 --> 00:40:01,680
[Laughter]

00:40:00,240 --> 00:40:05,200
you're throwing grenades there ethan you

00:40:01,680 --> 00:40:08,400
know that right um

00:40:05,200 --> 00:40:09,200
um you know i'll be honest with you i've

00:40:08,400 --> 00:40:12,400
been doing this

00:40:09,200 --> 00:40:14,640
25 years i i don't

00:40:12,400 --> 00:40:16,319
nothing surprises me anymore nothing

00:40:14,640 --> 00:40:19,359
really upsets me anymore

00:40:16,319 --> 00:40:20,720
um if if the community

00:40:19,359 --> 00:40:23,920
determines that it makes sense for

00:40:20,720 --> 00:40:26,079
systemd to manage the user management uh

00:40:23,920 --> 00:40:27,920
or to manage user accounts

00:40:26,079 --> 00:40:29,680
you know i can see some benefits in that

00:40:27,920 --> 00:40:30,720
i can see where people would be really

00:40:29,680 --> 00:40:33,440
bummed because

00:40:30,720 --> 00:40:34,640
the whole you know one tool doing one

00:40:33,440 --> 00:40:37,440
thing really well

00:40:34,640 --> 00:40:39,200
uh would be a point of frustration so i

00:40:37,440 --> 00:40:41,280
i get both sides

00:40:39,200 --> 00:40:42,800
um hopefully and i'm sorry if my cat

00:40:41,280 --> 00:40:44,000
comes on the screen he just decided that

00:40:42,800 --> 00:40:47,680
it was time to be fed

00:40:44,000 --> 00:40:50,319
uh hopefully um

00:40:47,680 --> 00:40:52,480
uh if if that does happen it will be

00:40:50,319 --> 00:40:56,880
done in a fashion where we can

00:40:52,480 --> 00:40:58,240
um we can uh adapt to it and

00:40:56,880 --> 00:41:00,000
move in a way that's not super

00:40:58,240 --> 00:41:03,440
disruptive to older versions

00:41:00,000 --> 00:41:06,880
um let's see search phrases

00:41:03,440 --> 00:41:08,480
you know honestly um michael

00:41:06,880 --> 00:41:10,240
google search phrases to lead you to

00:41:08,480 --> 00:41:11,440
good websites to learn

00:41:10,240 --> 00:41:13,599
i don't know that i would necessarily

00:41:11,440 --> 00:41:14,319
use google searches i would probably

00:41:13,599 --> 00:41:15,920
actually look at

00:41:14,319 --> 00:41:18,000
security guides for the distro you're

00:41:15,920 --> 00:41:19,599
using every distro has a good security

00:41:18,000 --> 00:41:20,800
guide out there i don't care who it is

00:41:19,599 --> 00:41:22,720
i'm not going to get into the whole this

00:41:20,800 --> 00:41:24,560
distro is better than that distro

00:41:22,720 --> 00:41:26,000
i have yet to find a security guide for

00:41:24,560 --> 00:41:27,119
any of the majors that are not that

00:41:26,000 --> 00:41:29,040
isn't really really good

00:41:27,119 --> 00:41:30,560
so look at that and then follow up with

00:41:29,040 --> 00:41:31,599
whatever cloud infrastructure you decide

00:41:30,560 --> 00:41:33,440
to work with so if you're going to work

00:41:31,599 --> 00:41:34,480
with aws look at our security guides if

00:41:33,440 --> 00:41:36,319
you

00:41:34,480 --> 00:41:38,079
go with azure use their security guides

00:41:36,319 --> 00:41:40,000
and so on and so forth

00:41:38,079 --> 00:41:41,920
so that would be good paul mcharg it is

00:41:40,000 --> 00:41:45,920
outstanding to hear from you sir

00:41:41,920 --> 00:41:48,319
it has been entirely too long um

00:41:45,920 --> 00:41:49,920
any particular udemy or linux academy

00:41:48,319 --> 00:41:53,440
courses you would point us at

00:41:49,920 --> 00:41:56,720
um so if you look

00:41:53,440 --> 00:41:58,000
at it it depends on what it is you're

00:41:56,720 --> 00:42:02,000
trying to accomplish

00:41:58,000 --> 00:42:05,440
um if you look at

00:42:02,000 --> 00:42:08,480
for instance you know what the the

00:42:05,440 --> 00:42:09,520
most available or let's see what's the

00:42:08,480 --> 00:42:11,119
term i'm trying to use

00:42:09,520 --> 00:42:12,240
um who's hiring the most right if you

00:42:11,119 --> 00:42:13,440
look at who's hiring the most they're

00:42:12,240 --> 00:42:14,839
going to look for folks that have like

00:42:13,440 --> 00:42:17,680
red hat or amazon

00:42:14,839 --> 00:42:20,720
certifications um if uh

00:42:17,680 --> 00:42:22,560
and and also ubuntu and also uh

00:42:20,720 --> 00:42:24,079
souza but probably not to as great an

00:42:22,560 --> 00:42:26,160
extent most corporate enterprise

00:42:24,079 --> 00:42:30,000
environments usually use red hat or

00:42:26,160 --> 00:42:32,640
centos or some derivative thereof um so

00:42:30,000 --> 00:42:33,839
choose the course that you want to do

00:42:32,640 --> 00:42:35,839
based on

00:42:33,839 --> 00:42:36,880
what you know what type of environment

00:42:35,839 --> 00:42:38,800
you want to be in if you want to be in

00:42:36,880 --> 00:42:39,599
devops you know something like that

00:42:38,800 --> 00:42:41,760
maybe you'd look

00:42:39,599 --> 00:42:43,680
more towards the developer side if you

00:42:41,760 --> 00:42:44,079
want to be a systems engineer like you

00:42:43,680 --> 00:42:46,720
know

00:42:44,079 --> 00:42:50,240
a site reliability engineer then maybe

00:42:46,720 --> 00:42:50,240
more towards the linux side of things

00:42:50,480 --> 00:42:54,400
all right and as nancy said don't forget

00:42:53,040 --> 00:42:56,960
during the breaks to go visit sponsor

00:42:54,400 --> 00:42:59,440
booths or network with other attendees

00:42:56,960 --> 00:43:01,920
bob asks was using scientific linux

00:42:59,440 --> 00:43:04,480
should i switch to centos now scientific

00:43:01,920 --> 00:43:05,760
scientific linux is no longer uh yeah no

00:43:04,480 --> 00:43:06,400
longer for new versions unfortunately

00:43:05,760 --> 00:43:09,359
scientific

00:43:06,400 --> 00:43:10,880
linux uh has the things that they were

00:43:09,359 --> 00:43:14,720
doing have become i think a

00:43:10,880 --> 00:43:15,839
sig on centos now i am horribly biased

00:43:14,720 --> 00:43:17,599
i'm going to tell you to look at amazon

00:43:15,839 --> 00:43:19,680
linux if you're doing stuff in the cloud

00:43:17,599 --> 00:43:20,880
we're an rpm based distro system dbase

00:43:19,680 --> 00:43:23,040
distro

00:43:20,880 --> 00:43:24,960
super fast optimized for aws if you're

00:43:23,040 --> 00:43:27,359
using us look at amazon linux

00:43:24,960 --> 00:43:28,560
if not um absolutely man centos the

00:43:27,359 --> 00:43:31,440
centos community is

00:43:28,560 --> 00:43:31,920
phenomenal the guys who run and gals who

00:43:31,440 --> 00:43:34,400
run

00:43:31,920 --> 00:43:35,839
the um the project are incredible i

00:43:34,400 --> 00:43:37,359
worked with many of them i know them

00:43:35,839 --> 00:43:39,200
personally

00:43:37,359 --> 00:43:40,720
so you know again i'm not going to get

00:43:39,200 --> 00:43:41,920
into the whole like this distro is

00:43:40,720 --> 00:43:43,839
better than that one

00:43:41,920 --> 00:43:45,119
um there's not a bad distro out there

00:43:43,839 --> 00:43:45,839
honestly i mean there's some that are

00:43:45,119 --> 00:43:47,119
really rough

00:43:45,839 --> 00:43:49,359
but you know what that just means you

00:43:47,119 --> 00:43:51,119
got more to learn um you know when it

00:43:49,359 --> 00:43:52,560
breaks or goes sideways or goes

00:43:51,119 --> 00:43:54,240
pear-shaped then that just gives you an

00:43:52,560 --> 00:43:56,000
opportunity to learn so

00:43:54,240 --> 00:43:57,440
use what uh what makes sense for the

00:43:56,000 --> 00:43:58,880
environment you're going to be in and

00:43:57,440 --> 00:44:01,440
shameless plug for amazon linux since

00:43:58,880 --> 00:44:01,440
that's what i do

00:44:01,599 --> 00:44:05,520
well folks i believe we are out of time

00:44:03,839 --> 00:44:06,400
thank you very much very sincerely thank

00:44:05,520 --> 00:44:07,680
you for coming

00:44:06,400 --> 00:44:10,400
i know that this is just such a

00:44:07,680 --> 00:44:12,319
challenging time with the pandemic

00:44:10,400 --> 00:44:13,440
i hope that all of you are healthy and

00:44:12,319 --> 00:44:15,520
safe and that your loved ones are

00:44:13,440 --> 00:44:18,720
healthy and safe

00:44:15,520 --> 00:44:20,240
go out be good to each other take care

00:44:18,720 --> 00:44:21,119
of your family and take care of your

00:44:20,240 --> 00:44:23,599
co-workers

00:44:21,119 --> 00:44:31,839
and enjoy the rest of the conference

00:44:23,599 --> 00:44:31,839

YouTube URL: https://www.youtube.com/watch?v=DP6E7mOCUlA


