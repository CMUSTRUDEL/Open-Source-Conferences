Title: How to 2FA-enable Open Source Applications - Michael Schwartz
Publication date: 2020-12-10
Playlist: All Things Open 2020 - Security Track
Description: 
	Presented by: Michael Schwartz, Gluu
Presented at All Things Open 2020 - Security Track

Abstract: Everyone knows passwords are terrrible for security. But rolling out two-factor authetication (2FA) is tricky. Not only do you need to update applications to use 2FA, but you need to consider what happens if an end-user loses their credential. If you love open source tools like Wordpress, SuiteCRM, NextCloud, RocketChat, and OnlyOffice, a 2FA solution is now within your grasp. And you are not limited to just OTP or SMS. You can integrate support for FIDO tokens, mobile push notifiations, or even popular SaaS services, like Duo Security. In this workshop, you'll learn:

- Which 2FA technologies can be used without paying a license;
- How to enable users to enroll and delete 2FA credentials;
- How configure open source applications to act as a federated relying party--delegating authentication to a central service
- How custom applications can act as a federated relying party
Captions: 
	00:00:05,040 --> 00:00:09,519
okay

00:00:05,680 --> 00:00:11,519
so thanks everyone for joining and i'll

00:00:09,519 --> 00:00:13,040
i'll probably use the 45 minutes because

00:00:11,519 --> 00:00:16,160
there's a lot of content

00:00:13,040 --> 00:00:18,000
but i definitely feel i'll

00:00:16,160 --> 00:00:19,520
try and get it all in on time because i

00:00:18,000 --> 00:00:22,400
know everyone in europe must be

00:00:19,520 --> 00:00:23,439
must be getting late there already so as

00:00:22,400 --> 00:00:25,039
i mentioned

00:00:23,439 --> 00:00:26,640
mike schwartz i'm the founder of a

00:00:25,039 --> 00:00:28,840
company called glue

00:00:26,640 --> 00:00:30,400
we have an open free open source

00:00:28,840 --> 00:00:32,719
distribution for

00:00:30,400 --> 00:00:34,880
identity management and i should say

00:00:32,719 --> 00:00:37,040
identity and access management

00:00:34,880 --> 00:00:38,719
and it's called the glue server you can

00:00:37,040 --> 00:00:40,960
probably just google glue server

00:00:38,719 --> 00:00:43,840
and it'll come right up and i'll talk a

00:00:40,960 --> 00:00:45,760
little bit more about that later on

00:00:43,840 --> 00:00:47,680
i'm the author of a book called securing

00:00:45,760 --> 00:00:48,640
the perimeter that was published by

00:00:47,680 --> 00:00:52,079
apris

00:00:48,640 --> 00:00:54,480
in the end of 2018 and this is a good

00:00:52,079 --> 00:00:56,559
intro if you want to learn about

00:00:54,480 --> 00:01:00,000
federated identity

00:00:56,559 --> 00:01:01,520
open id xaml ldap two-factor

00:01:00,000 --> 00:01:02,239
authentication there's a whole chapter

00:01:01,520 --> 00:01:04,559
in there

00:01:02,239 --> 00:01:06,320
um the book is a good reference of the

00:01:04,559 --> 00:01:07,119
each chapter of the book's about 30

00:01:06,320 --> 00:01:09,600
pages

00:01:07,119 --> 00:01:12,080
half of that is theory and half of that

00:01:09,600 --> 00:01:14,799
is examples of how you can

00:01:12,080 --> 00:01:16,560
try this stuff out with hope with free

00:01:14,799 --> 00:01:20,400
open source libraries

00:01:16,560 --> 00:01:22,640
and tools i'm also the host of a podcast

00:01:20,400 --> 00:01:25,200
called open source underdogs and you can

00:01:22,640 --> 00:01:28,000
find that on opensourceunderdogs.com

00:01:25,200 --> 00:01:29,119
it's also on stitcher and itunes and

00:01:28,000 --> 00:01:31,360
google podcast and

00:01:29,119 --> 00:01:32,560
pretty much every podcast cloud platform

00:01:31,360 --> 00:01:35,759
soundcloud

00:01:32,560 --> 00:01:38,000
and this is a a podcast it's more of a

00:01:35,759 --> 00:01:40,079
business podcast than a tech podcast

00:01:38,000 --> 00:01:41,520
but i interview the founders of open

00:01:40,079 --> 00:01:44,799
source companies

00:01:41,520 --> 00:01:46,799
and we talk about um the business model

00:01:44,799 --> 00:01:48,000
uh holistically not just how you make

00:01:46,799 --> 00:01:51,280
money but

00:01:48,000 --> 00:01:52,799
how you interact with customers and and

00:01:51,280 --> 00:01:54,479
what's the value prop and

00:01:52,799 --> 00:01:56,079
and it's been really interesting for me

00:01:54,479 --> 00:01:58,000
to do it so i encourage

00:01:56,079 --> 00:01:59,520
you if you're interested in building an

00:01:58,000 --> 00:02:01,200
open source business or i should say if

00:01:59,520 --> 00:02:03,360
you're crazy enough to think about

00:02:01,200 --> 00:02:05,119
endeavoring to do that listen to the

00:02:03,360 --> 00:02:07,840
podcast there's a lot of good advice

00:02:05,119 --> 00:02:10,000
it'll probably save you five years of

00:02:07,840 --> 00:02:12,319
time

00:02:10,000 --> 00:02:13,280
but today's topic is two-factor

00:02:12,319 --> 00:02:16,400
authentication

00:02:13,280 --> 00:02:18,720
um you might remember this guy who

00:02:16,400 --> 00:02:20,400
was i think the first president to

00:02:18,720 --> 00:02:24,000
really ever mention this

00:02:20,400 --> 00:02:26,239
topic he encouraged americans

00:02:24,000 --> 00:02:27,840
to use something better than passwords

00:02:26,239 --> 00:02:31,040
so

00:02:27,840 --> 00:02:32,319
so um but two-factor authentication you

00:02:31,040 --> 00:02:35,360
know it's been a government

00:02:32,319 --> 00:02:36,720
um sort of initiative and best practice

00:02:35,360 --> 00:02:38,800
for a long time

00:02:36,720 --> 00:02:41,440
so those of you who might know the

00:02:38,800 --> 00:02:43,200
standard called 863

00:02:41,440 --> 00:02:44,640
these are guidelines the first

00:02:43,200 --> 00:02:47,040
guidelines that really define

00:02:44,640 --> 00:02:48,560
what is two-factor authentication and

00:02:47,040 --> 00:02:50,959
it's become sort of a

00:02:48,560 --> 00:02:52,160
sort of famous to people think about it

00:02:50,959 --> 00:02:54,640
as something you know

00:02:52,160 --> 00:02:55,519
something you have something you are so

00:02:54,640 --> 00:02:57,680
in order for

00:02:55,519 --> 00:03:00,159
for an authentication technology to be

00:02:57,680 --> 00:03:02,319
two factor you must have two of those

00:03:00,159 --> 00:03:03,519
so for example you can have two

00:03:02,319 --> 00:03:05,840
something you have

00:03:03,519 --> 00:03:07,360
like you can't have two tokens it has to

00:03:05,840 --> 00:03:10,400
be a combination of these

00:03:07,360 --> 00:03:10,400
two um

00:03:10,480 --> 00:03:17,519
and you know passwords are much maligned

00:03:14,239 --> 00:03:19,040
everyone hates passwords but

00:03:17,519 --> 00:03:20,640
maybe in the interest of being a little

00:03:19,040 --> 00:03:23,280
bit contrarian

00:03:20,640 --> 00:03:24,799
i would say let's actually maybe not

00:03:23,280 --> 00:03:26,480
give up on passwords

00:03:24,799 --> 00:03:28,319
because maybe it's not the passwords

00:03:26,480 --> 00:03:29,120
that are the problem but maybe it's

00:03:28,319 --> 00:03:31,599
overuse

00:03:29,120 --> 00:03:32,640
of one form of authentication that's the

00:03:31,599 --> 00:03:36,000
problem

00:03:32,640 --> 00:03:38,239
and sort of like any monoculture becomes

00:03:36,000 --> 00:03:39,280
susceptible and so maybe passwords are

00:03:38,239 --> 00:03:40,879
monocultured

00:03:39,280 --> 00:03:43,040
and so and that's part of the problem

00:03:40,879 --> 00:03:44,159
but cognitive mechanisms you know

00:03:43,040 --> 00:03:45,760
something you knows

00:03:44,159 --> 00:03:47,200
it's still a handy trick and i don't

00:03:45,760 --> 00:03:49,440
know if we're ready to give that one up

00:03:47,200 --> 00:03:49,440
yet

00:03:49,599 --> 00:03:53,040
so one of the interesting things to

00:03:51,280 --> 00:03:55,840
think about is the threat for

00:03:53,040 --> 00:03:57,040
any authentication technology is the

00:03:55,840 --> 00:03:58,879
threat model

00:03:57,040 --> 00:04:00,720
um one of my friends said how do you

00:03:58,879 --> 00:04:02,799
make a two two factor

00:04:00,720 --> 00:04:04,400
authentication vendor cry ask them for

00:04:02,799 --> 00:04:06,400
the threat model

00:04:04,400 --> 00:04:08,560
of their technology because every

00:04:06,400 --> 00:04:10,319
technology is susceptible to different

00:04:08,560 --> 00:04:11,840
types of attack

00:04:10,319 --> 00:04:13,519
and if we just think about the threat

00:04:11,840 --> 00:04:15,680
model for passwords

00:04:13,519 --> 00:04:17,120
there's a there's actually is a pretty

00:04:15,680 --> 00:04:19,840
massive threat model

00:04:17,120 --> 00:04:21,759
of like and this is only a partial list

00:04:19,840 --> 00:04:23,680
of the ways that passwords can get

00:04:21,759 --> 00:04:25,280
you know compromised but you can have

00:04:23,680 --> 00:04:27,280
key loggers

00:04:25,280 --> 00:04:28,800
you have passwords that are cracked and

00:04:27,280 --> 00:04:32,320
available for sale

00:04:28,800 --> 00:04:35,520
on the on you know the dark web you have

00:04:32,320 --> 00:04:39,120
um bad passwords

00:04:35,520 --> 00:04:39,600
um and the hackers can trick people to

00:04:39,120 --> 00:04:41,440
give you

00:04:39,600 --> 00:04:42,960
into giving them their password so they

00:04:41,440 --> 00:04:44,000
can present a page that looks like a

00:04:42,960 --> 00:04:45,520
login page

00:04:44,000 --> 00:04:47,680
and you might think it's a login page

00:04:45,520 --> 00:04:49,919
but it's actually the hackers page

00:04:47,680 --> 00:04:51,520
there's cross-site scripting so that

00:04:49,919 --> 00:04:52,560
really we could go on and on probably

00:04:51,520 --> 00:04:54,560
for about an hour

00:04:52,560 --> 00:04:56,800
about the different ways you can do the

00:04:54,560 --> 00:05:00,000
password so

00:04:56,800 --> 00:05:02,400
so it is um bad

00:05:00,000 --> 00:05:04,080
so in the next couple of slides before i

00:05:02,400 --> 00:05:05,520
dive more into the how-to

00:05:04,080 --> 00:05:07,600
i want to talk about some different

00:05:05,520 --> 00:05:09,919
types of authentication because

00:05:07,600 --> 00:05:12,080
a lot of people i tend to they ask me

00:05:09,919 --> 00:05:14,240
like you know what's the solution

00:05:12,080 --> 00:05:15,199
and some people think well the solution

00:05:14,240 --> 00:05:17,280
is biometric

00:05:15,199 --> 00:05:19,520
or the solution is my mobile phone or

00:05:17,280 --> 00:05:22,720
the solution is you know whatever

00:05:19,520 --> 00:05:25,919
um my needs is that

00:05:22,720 --> 00:05:28,639
every every type of emotion

00:05:25,919 --> 00:05:29,759
has trade-offs and there is no no

00:05:28,639 --> 00:05:32,880
perfect

00:05:29,759 --> 00:05:36,000
authentication mechanism but

00:05:32,880 --> 00:05:38,400
um biometrics let's start there

00:05:36,000 --> 00:05:40,000
the convenience factor is amazing like

00:05:38,400 --> 00:05:41,360
you always account you can't forget your

00:05:40,000 --> 00:05:44,240
biometrics

00:05:41,360 --> 00:05:45,199
um but there's sort of a trade-off

00:05:44,240 --> 00:05:48,080
between

00:05:45,199 --> 00:05:48,639
sensitivity and usability so i could

00:05:48,080 --> 00:05:51,919
make it

00:05:48,639 --> 00:05:52,479
really sensitive but then i get a lot of

00:05:51,919 --> 00:05:54,880
you know

00:05:52,479 --> 00:05:55,919
um failures when i'm trying to

00:05:54,880 --> 00:05:58,960
authenticate

00:05:55,919 --> 00:06:00,720
or i can make it not sensitive at all um

00:05:58,960 --> 00:06:03,680
and then my cat can authenticate

00:06:00,720 --> 00:06:04,720
you know can instead of me but it works

00:06:03,680 --> 00:06:06,560
every time

00:06:04,720 --> 00:06:08,080
so there's always this trade-off in

00:06:06,560 --> 00:06:09,759
biometrics that i think is worth

00:06:08,080 --> 00:06:12,800
considering of like the

00:06:09,759 --> 00:06:16,319
of the accuracy versus the usability

00:06:12,800 --> 00:06:17,680
um and there's a lot of different types

00:06:16,319 --> 00:06:20,639
of biometrics so

00:06:17,680 --> 00:06:22,240
basically every part of the human um

00:06:20,639 --> 00:06:24,800
body is unique

00:06:22,240 --> 00:06:25,280
um you know if you could so you probably

00:06:24,800 --> 00:06:27,120
have like

00:06:25,280 --> 00:06:28,960
ear authentication if you put your phone

00:06:27,120 --> 00:06:31,680
to your ear you know

00:06:28,960 --> 00:06:32,639
and even within a modality like

00:06:31,680 --> 00:06:34,080
fingerprint

00:06:32,639 --> 00:06:35,840
there's there's a lot of different

00:06:34,080 --> 00:06:36,960
sensors that look at fingerprints

00:06:35,840 --> 00:06:39,759
differently

00:06:36,960 --> 00:06:40,240
um we also have behavioral biometrics

00:06:39,759 --> 00:06:43,280
like

00:06:40,240 --> 00:06:44,800
how do you type um or how do you move

00:06:43,280 --> 00:06:47,120
the mouse

00:06:44,800 --> 00:06:48,400
and we have what's called multimodal or

00:06:47,120 --> 00:06:50,000
maybe we're looking at a couple of

00:06:48,400 --> 00:06:51,599
different biometrics so there are ways

00:06:50,000 --> 00:06:55,520
to improve biometric

00:06:51,599 --> 00:06:55,520
security by combining factors

00:06:56,560 --> 00:07:01,120
somebody commented that you can't verify

00:06:59,039 --> 00:07:02,319
that biometrics are

00:07:01,120 --> 00:07:04,400
you're actually volunteering your

00:07:02,319 --> 00:07:07,680
biometrics yeah and this

00:07:04,400 --> 00:07:10,639
so sometimes biometrics

00:07:07,680 --> 00:07:12,479
might um fall into the category of what

00:07:10,639 --> 00:07:14,720
i call fraud detection

00:07:12,479 --> 00:07:16,000
where you maybe you're talking to your

00:07:14,720 --> 00:07:17,680
bank on the phone

00:07:16,000 --> 00:07:19,520
and they're using voice biometrics in

00:07:17,680 --> 00:07:21,280
the background to authenticate you

00:07:19,520 --> 00:07:23,199
and but sometimes there's a fine line

00:07:21,280 --> 00:07:24,800
between is that authentication

00:07:23,199 --> 00:07:27,599
where you're actively proving your

00:07:24,800 --> 00:07:30,639
identity or is it fraud detection

00:07:27,599 --> 00:07:32,800
behavioral biometrics i think frequently

00:07:30,639 --> 00:07:34,639
fall into the category of fraud

00:07:32,800 --> 00:07:37,759
detection

00:07:34,639 --> 00:07:39,360
also this is this is industry jargon

00:07:37,759 --> 00:07:41,199
but some people forget that there's a

00:07:39,360 --> 00:07:43,599
difference between identification

00:07:41,199 --> 00:07:44,960
and authentication so if you're walking

00:07:43,599 --> 00:07:47,840
by a camera

00:07:44,960 --> 00:07:49,360
in an airport and it identifies you you

00:07:47,840 --> 00:07:50,879
know let's say i walk by and it says oh

00:07:49,360 --> 00:07:52,639
that's mike schwartz

00:07:50,879 --> 00:07:54,400
that's identification that's not

00:07:52,639 --> 00:07:55,840
authentication authentication is when

00:07:54,400 --> 00:07:57,759
i'm actively asserting

00:07:55,840 --> 00:07:59,919
i am mike schwartz and i have something

00:07:57,759 --> 00:08:02,400
to prove it here's my face

00:07:59,919 --> 00:08:03,759
um but um this is splitting splitting

00:08:02,400 --> 00:08:06,319
hairs a little bit

00:08:03,759 --> 00:08:08,080
um but you know with that said i you

00:08:06,319 --> 00:08:10,240
know biometrics are interesting

00:08:08,080 --> 00:08:11,120
um and some of them are accurate and

00:08:10,240 --> 00:08:15,520
some of them

00:08:11,120 --> 00:08:17,360
um are very convenient um so

00:08:15,520 --> 00:08:18,720
they're they're a part of the um of the

00:08:17,360 --> 00:08:20,879
solution

00:08:18,720 --> 00:08:22,639
now a lot of you might remember these

00:08:20,879 --> 00:08:24,240
older types of like

00:08:22,639 --> 00:08:26,800
numbers like you might have had a key

00:08:24,240 --> 00:08:28,400
fob or google authenticator is good

00:08:26,800 --> 00:08:30,800
because it's on your phone

00:08:28,400 --> 00:08:32,880
and these are actually this is based on

00:08:30,800 --> 00:08:34,959
an open standard called oath

00:08:32,880 --> 00:08:36,399
there's two ways that these algorithms

00:08:34,959 --> 00:08:40,080
are generated

00:08:36,399 --> 00:08:42,240
totp which is based on time hotp

00:08:40,080 --> 00:08:43,919
which is actually based on a counter if

00:08:42,240 --> 00:08:45,760
you want to read the real detail about

00:08:43,919 --> 00:08:48,720
how these numbers are generated

00:08:45,760 --> 00:08:49,120
chapter seven of my book um it goes into

00:08:48,720 --> 00:08:50,880
like

00:08:49,120 --> 00:08:52,320
for a lot of detail about it it's

00:08:50,880 --> 00:08:56,000
actually pretty clever

00:08:52,320 --> 00:08:58,720
um but they're still useful um

00:08:56,000 --> 00:09:00,080
because um the nice thing about these

00:08:58,720 --> 00:09:03,519
numbers is is that

00:09:00,080 --> 00:09:04,560
the the bar for the input device is

00:09:03,519 --> 00:09:06,959
pretty low

00:09:04,560 --> 00:09:10,560
um i can use dtmf you know the numbers

00:09:06,959 --> 00:09:13,760
on your phone to enter an otp

00:09:10,560 --> 00:09:14,560
and i can even read an otp securely to

00:09:13,760 --> 00:09:16,320
an agent

00:09:14,560 --> 00:09:18,560
you should never read your password to

00:09:16,320 --> 00:09:20,800
an agent over the phone

00:09:18,560 --> 00:09:22,320
but an otp i could safely read because

00:09:20,800 --> 00:09:25,600
it's only good for a cup for

00:09:22,320 --> 00:09:28,720
you know 30 seconds or so so it's a

00:09:25,600 --> 00:09:30,320
it's this is still it might be old but

00:09:28,720 --> 00:09:32,480
it's still a handy

00:09:30,320 --> 00:09:33,760
trick for authentication and and this is

00:09:32,480 --> 00:09:35,920
a something you have

00:09:33,760 --> 00:09:38,000
you have possession of a phone that has

00:09:35,920 --> 00:09:40,000
this counter in it or you have

00:09:38,000 --> 00:09:42,320
possession of a physical device that's

00:09:40,000 --> 00:09:45,600
generating the otp

00:09:42,320 --> 00:09:47,360
i mentioned hardware otp so these things

00:09:45,600 --> 00:09:48,320
have come way down in price they used to

00:09:47,360 --> 00:09:50,640
be like 50

00:09:48,320 --> 00:09:52,000
a token now you can get them for like a

00:09:50,640 --> 00:09:54,320
dollar or two a token

00:09:52,000 --> 00:09:56,080
so as i mentioned you know they're still

00:09:54,320 --> 00:09:59,360
around people think they're gone but

00:09:56,080 --> 00:10:02,880
they're still still with us um

00:09:59,360 --> 00:10:04,800
sms otp um so if you

00:10:02,880 --> 00:10:06,000
um i'm sure everyone has done this at

00:10:04,800 --> 00:10:08,160
this point where

00:10:06,000 --> 00:10:10,000
you get a code through your s by

00:10:08,160 --> 00:10:12,480
providing your sms number

00:10:10,000 --> 00:10:13,519
and um and you put that code in and

00:10:12,480 --> 00:10:16,560
that's that's

00:10:13,519 --> 00:10:19,920
proof of control of a phone number

00:10:16,560 --> 00:10:20,640
um the um one of the challenges with

00:10:19,920 --> 00:10:23,760
that

00:10:20,640 --> 00:10:26,720
is that you're basically trusting

00:10:23,760 --> 00:10:28,880
the mobile operator um so it's not a

00:10:26,720 --> 00:10:31,279
great proof of identity

00:10:28,880 --> 00:10:32,000
and and mobile operators can be tricked

00:10:31,279 --> 00:10:34,880
so

00:10:32,000 --> 00:10:36,480
if you go into like a t-mobile like i

00:10:34,880 --> 00:10:37,920
don't need to pick on t-mobile really

00:10:36,480 --> 00:10:40,800
any mobile operator

00:10:37,920 --> 00:10:42,399
like retail outlet and you say you know

00:10:40,800 --> 00:10:44,399
i'm donald trump

00:10:42,399 --> 00:10:46,480
and they look at you and they say okay

00:10:44,399 --> 00:10:47,920
and they um and you say well i lost my

00:10:46,480 --> 00:10:49,600
phone give me a new phone

00:10:47,920 --> 00:10:50,959
and they hand you a new phone and they

00:10:49,600 --> 00:10:53,519
port the number

00:10:50,959 --> 00:10:54,880
so the what you're relying on is the

00:10:53,519 --> 00:10:57,680
mobile operator to

00:10:54,880 --> 00:10:59,360
to vet the the identity of that person

00:10:57,680 --> 00:11:00,480
and they don't always necessarily do

00:10:59,360 --> 00:11:04,640
such a good job there

00:11:00,480 --> 00:11:05,920
so in fact the telco operators have been

00:11:04,640 --> 00:11:08,720
tricked over the phone

00:11:05,920 --> 00:11:09,760
to switch the routing of a phone number

00:11:08,720 --> 00:11:12,800
to another

00:11:09,760 --> 00:11:12,800
sim card so

00:11:13,279 --> 00:11:16,720
so there's a number of mobile push um

00:11:15,440 --> 00:11:19,360
applications out there

00:11:16,720 --> 00:11:20,079
this is a screenshot of superglue that's

00:11:19,360 --> 00:11:23,279
that's

00:11:20,079 --> 00:11:25,360
my company's free app um but you might

00:11:23,279 --> 00:11:27,279
have used duo security

00:11:25,360 --> 00:11:29,360
microsoft and google have mobile

00:11:27,279 --> 00:11:32,079
authenticators um these are

00:11:29,360 --> 00:11:33,440
i'm using a mobile app that receives the

00:11:32,079 --> 00:11:36,320
push notification

00:11:33,440 --> 00:11:36,959
and generally gives you more information

00:11:36,320 --> 00:11:40,880
than a

00:11:36,959 --> 00:11:42,160
um than your you know sms otp about the

00:11:40,880 --> 00:11:45,120
context

00:11:42,160 --> 00:11:48,000
and also um there's normally some type

00:11:45,120 --> 00:11:50,959
of cryptographic proof of

00:11:48,000 --> 00:11:53,040
um possession type of algorithm where

00:11:50,959 --> 00:11:56,880
it's not just a push notification

00:11:53,040 --> 00:11:59,519
but also showing some type of um

00:11:56,880 --> 00:12:01,519
let's say previously generated key or

00:11:59,519 --> 00:12:02,000
possession of a previously generated key

00:12:01,519 --> 00:12:05,680
pair

00:12:02,000 --> 00:12:08,240
so um and um

00:12:05,680 --> 00:12:09,680
also yeah they might show geolocation so

00:12:08,240 --> 00:12:11,519
there's some other things you can do

00:12:09,680 --> 00:12:13,600
because the mobile phone is is pretty

00:12:11,519 --> 00:12:15,920
pretty um impressive sensor and has a

00:12:13,600 --> 00:12:18,959
lot of data

00:12:15,920 --> 00:12:22,000
um one of the um

00:12:18,959 --> 00:12:24,560
interesting let's say properties

00:12:22,000 --> 00:12:26,800
of an authentication technology is

00:12:24,560 --> 00:12:30,320
whether it's phishing resistant

00:12:26,800 --> 00:12:33,920
so one of the ways that um two-factor

00:12:30,320 --> 00:12:36,639
authentications are vulnerable to attack

00:12:33,920 --> 00:12:38,399
is if you start with a phishing email

00:12:36,639 --> 00:12:40,320
that says click on this link

00:12:38,399 --> 00:12:42,320
the person clicks on the link and then

00:12:40,320 --> 00:12:43,360
they're directed to a login page that

00:12:42,320 --> 00:12:45,920
looks authentic

00:12:43,360 --> 00:12:47,200
and somehow they provide their password

00:12:45,920 --> 00:12:49,839
and in this case

00:12:47,200 --> 00:12:51,279
the the i think i have another slide

00:12:49,839 --> 00:12:52,000
here yeah this is the slide i really

00:12:51,279 --> 00:12:55,680
want

00:12:52,000 --> 00:12:57,200
so so the hack starts with a go click on

00:12:55,680 --> 00:12:59,040
this link and by the way this

00:12:57,200 --> 00:13:00,320
this is a sort of a diagram from a real

00:12:59,040 --> 00:13:03,600
attack um

00:13:00,320 --> 00:13:05,040
that took place so the the actually the

00:13:03,600 --> 00:13:08,880
attack started with

00:13:05,040 --> 00:13:10,959
um with the dns getting hacked at a bank

00:13:08,880 --> 00:13:15,200
and the and the and the hacker added an

00:13:10,959 --> 00:13:17,120
entry like login56.bank.com

00:13:15,200 --> 00:13:19,360
and they obtained an ssl certificate for

00:13:17,120 --> 00:13:20,880
that link and so and then they sent out

00:13:19,360 --> 00:13:21,920
a phishing email that looked pretty

00:13:20,880 --> 00:13:24,720
authentic

00:13:21,920 --> 00:13:26,639
um and you know so customers got it and

00:13:24,720 --> 00:13:27,360
they saw the link and the link was like

00:13:26,639 --> 00:13:30,000
okay well

00:13:27,360 --> 00:13:30,480
it's this isn't a host that i recommend

00:13:30,000 --> 00:13:34,079
i

00:13:30,480 --> 00:13:36,399
recognize but it is a it is a

00:13:34,079 --> 00:13:37,360
at the bank so i guess it's okay so they

00:13:36,399 --> 00:13:39,839
click on it

00:13:37,360 --> 00:13:41,600
and it presents the bank's website and

00:13:39,839 --> 00:13:43,199
it looks exactly right so you're

00:13:41,600 --> 00:13:45,279
not noticing anything different and of

00:13:43,199 --> 00:13:46,000
course the hacker is just proxying the

00:13:45,279 --> 00:13:48,800
website

00:13:46,000 --> 00:13:50,560
to the actual to the real bank website

00:13:48,800 --> 00:13:51,279
and the person enters their username and

00:13:50,560 --> 00:13:54,240
password

00:13:51,279 --> 00:13:54,720
fine they get sent an otp and they think

00:13:54,240 --> 00:13:56,800
well i

00:13:54,720 --> 00:13:58,160
am you know logging into the bank so

00:13:56,800 --> 00:14:00,839
they enter the otp

00:13:58,160 --> 00:14:03,040
that gets proxied now they have a

00:14:00,839 --> 00:14:06,079
session so this attack

00:14:03,040 --> 00:14:07,760
um is really really effective um there

00:14:06,079 --> 00:14:09,519
have been a number of examples of

00:14:07,760 --> 00:14:10,399
targeted attacks that this has worked

00:14:09,519 --> 00:14:15,440
for

00:14:10,399 --> 00:14:18,800
against people so it's very effective

00:14:15,440 --> 00:14:21,440
and um so the the trick here

00:14:18,800 --> 00:14:21,839
is that the ssl connection made between

00:14:21,440 --> 00:14:24,480
the

00:14:21,839 --> 00:14:26,639
user and the hacker and the ssl

00:14:24,480 --> 00:14:29,279
connection made between the hacker

00:14:26,639 --> 00:14:31,120
and the bank set are different so this

00:14:29,279 --> 00:14:32,560
is how you detect if a man-in-the-middle

00:14:31,120 --> 00:14:36,399
attack is happening

00:14:32,560 --> 00:14:38,959
so technologies that can verify

00:14:36,399 --> 00:14:39,600
direct connectivity or that can't be

00:14:38,959 --> 00:14:41,440
proxied

00:14:39,600 --> 00:14:43,360
where the where the browser must connect

00:14:41,440 --> 00:14:46,639
directly to the bank for them to work

00:14:43,360 --> 00:14:48,480
are going to be better and let's see so

00:14:46,639 --> 00:14:49,920
fido is one of these phishing resistant

00:14:48,480 --> 00:14:52,399
credentials because

00:14:49,920 --> 00:14:54,399
fido requires a plug-in in the browser

00:14:52,399 --> 00:14:55,199
and and the interaction is between the

00:14:54,399 --> 00:14:58,320
browser

00:14:55,199 --> 00:15:00,880
and the fido endpoint at the bank um

00:14:58,320 --> 00:15:03,680
the uh the a man in the middle cannot

00:15:00,880 --> 00:15:05,920
proxy fight a phyto authentication

00:15:03,680 --> 00:15:07,839
so this is one of the many reasons why

00:15:05,920 --> 00:15:11,120
fido is really really good

00:15:07,839 --> 00:15:13,440
um and and i'll just maybe

00:15:11,120 --> 00:15:15,519
point out that although the tokens are

00:15:13,440 --> 00:15:17,760
excellent and there's bluetooth tokens

00:15:15,519 --> 00:15:18,720
we're seeing fido built into a lot of

00:15:17,760 --> 00:15:20,639
hardware

00:15:18,720 --> 00:15:23,440
so for example i have a google pixel

00:15:20,639 --> 00:15:25,120
book and that has fido built in

00:15:23,440 --> 00:15:26,639
but we're just seeing fido being built

00:15:25,120 --> 00:15:28,399
into more and more hardware

00:15:26,639 --> 00:15:30,320
so that you maybe don't even need to to

00:15:28,399 --> 00:15:31,040
plug in some extra piece of hardware

00:15:30,320 --> 00:15:34,000
like a

00:15:31,040 --> 00:15:34,000
a usb key

00:15:34,240 --> 00:15:38,800
fido 2 is interesting because it

00:15:35,839 --> 00:15:40,720
combines instead of pressing the button

00:15:38,800 --> 00:15:41,839
you could actually use the biometric so

00:15:40,720 --> 00:15:44,399
windows hello

00:15:41,839 --> 00:15:47,120
where it's using voice authentication or

00:15:44,399 --> 00:15:49,120
in this in this uh fiteon

00:15:47,120 --> 00:15:51,839
phyto token instead of pressing the

00:15:49,120 --> 00:15:53,600
button you use your fingerprint

00:15:51,839 --> 00:15:55,360
it's a little geeky today though like

00:15:53,600 --> 00:15:56,959
how you register the fingerprint so i

00:15:55,360 --> 00:15:57,600
think this technology still has some way

00:15:56,959 --> 00:15:59,360
to go

00:15:57,600 --> 00:16:01,199
but you could see if this is built into

00:15:59,360 --> 00:16:01,920
your phone which already has a biometric

00:16:01,199 --> 00:16:04,959
sensor

00:16:01,920 --> 00:16:08,560
how something like this combination of

00:16:04,959 --> 00:16:10,480
fido plus biometric is is really really

00:16:08,560 --> 00:16:13,199
powerful

00:16:10,480 --> 00:16:15,360
um smart cards um so this is where you

00:16:13,199 --> 00:16:18,240
have a card with a cryptographic chip

00:16:15,360 --> 00:16:19,040
um this also prevents phishing um

00:16:18,240 --> 00:16:21,519
because

00:16:19,040 --> 00:16:22,079
the the smart card connects to the

00:16:21,519 --> 00:16:25,360
browser

00:16:22,079 --> 00:16:27,040
uses mutual tls so very secure

00:16:25,360 --> 00:16:28,880
that's why government still uses it

00:16:27,040 --> 00:16:30,639
that's why military still uses it

00:16:28,880 --> 00:16:32,560
it was really the original phishing

00:16:30,639 --> 00:16:35,680
resistant credential

00:16:32,560 --> 00:16:38,079
the main issue with with smart cards is

00:16:35,680 --> 00:16:40,160
they're expensive and it's hard to plug

00:16:38,079 --> 00:16:43,759
a smart card into your phone

00:16:40,160 --> 00:16:46,079
and um and you know they've tried to

00:16:43,759 --> 00:16:47,759
build smart cards into phones but every

00:16:46,079 --> 00:16:50,800
solution they've come up with has been

00:16:47,759 --> 00:16:52,639
relatively expensive to implement so but

00:16:50,800 --> 00:16:54,480
they're not going away and in some ways

00:16:52,639 --> 00:16:57,600
they're getting expanded because

00:16:54,480 --> 00:16:59,920
um your bank card is a smart card and um

00:16:57,600 --> 00:17:02,160
and then so there's still innovation in

00:16:59,920 --> 00:17:06,400
this idea that we have a chip with a

00:17:02,160 --> 00:17:08,559
sort of embedded protected key

00:17:06,400 --> 00:17:09,839
so um okay so that was a long time

00:17:08,559 --> 00:17:11,120
talking about different types of

00:17:09,839 --> 00:17:13,280
authentication

00:17:11,120 --> 00:17:15,360
um the point that i like to make about

00:17:13,280 --> 00:17:16,480
it is that there's sort of a trade-off

00:17:15,360 --> 00:17:18,160
you know when you're looking at

00:17:16,480 --> 00:17:20,480
authentication technologies

00:17:18,160 --> 00:17:22,160
think about security usability and

00:17:20,480 --> 00:17:24,400
deployability

00:17:22,160 --> 00:17:25,600
so there's that's really where the

00:17:24,400 --> 00:17:29,039
trade-off involves

00:17:25,600 --> 00:17:31,440
so and deployability in my opinion

00:17:29,039 --> 00:17:32,160
has been the main barrier for adoption

00:17:31,440 --> 00:17:34,880
of

00:17:32,160 --> 00:17:36,080
two-factor authentication in general so

00:17:34,880 --> 00:17:38,000
we've had

00:17:36,080 --> 00:17:39,679
it's not hard to say that anything is

00:17:38,000 --> 00:17:42,000
more secure than passwords you know

00:17:39,679 --> 00:17:44,960
passwords are terrible for security

00:17:42,000 --> 00:17:46,559
um and in terms of usability i don't

00:17:44,960 --> 00:17:47,840
know if you've ever put your password in

00:17:46,559 --> 00:17:49,760
in your tv remote

00:17:47,840 --> 00:17:51,280
but i don't think there's a worse user

00:17:49,760 --> 00:17:53,840
experience than that

00:17:51,280 --> 00:17:56,000
um so there's definitely you know

00:17:53,840 --> 00:17:57,440
clicking a button or inserting a usb

00:17:56,000 --> 00:18:00,480
token

00:17:57,440 --> 00:18:00,799
is could have way better usability so if

00:18:00,480 --> 00:18:02,799
it's

00:18:00,799 --> 00:18:05,120
if we've established that security is

00:18:02,799 --> 00:18:05,919
bad for passwords and usability is not

00:18:05,120 --> 00:18:08,320
great

00:18:05,919 --> 00:18:09,919
then i i think it should by process of

00:18:08,320 --> 00:18:11,520
elimination there must be something

00:18:09,919 --> 00:18:14,240
about deployability

00:18:11,520 --> 00:18:15,200
that's preventing mass adoption of

00:18:14,240 --> 00:18:16,799
passwords

00:18:15,200 --> 00:18:19,200
and as somebody who's sort of in the

00:18:16,799 --> 00:18:19,600
industry um you'd be surprised you know

00:18:19,200 --> 00:18:22,720
you

00:18:19,600 --> 00:18:24,559
i see tfa becoming more mainstream i'm

00:18:22,720 --> 00:18:26,320
seeing articles in like in general

00:18:24,559 --> 00:18:27,280
interest newspapers about two-factor

00:18:26,320 --> 00:18:29,600
authentication

00:18:27,280 --> 00:18:30,559
like my local paper maybe covering why

00:18:29,600 --> 00:18:33,919
you should use

00:18:30,559 --> 00:18:34,400
two factor um but still there's a wide

00:18:33,919 --> 00:18:37,760
swath

00:18:34,400 --> 00:18:40,799
of like of government and commercial

00:18:37,760 --> 00:18:43,679
and work um

00:18:40,799 --> 00:18:45,600
websites and and other digital digital

00:18:43,679 --> 00:18:46,160
assets that are still using passwords

00:18:45,600 --> 00:18:49,200
alone

00:18:46,160 --> 00:18:51,120
so um so

00:18:49,200 --> 00:18:53,440
microsoft did an interesting research

00:18:51,120 --> 00:18:56,000
study this is this is too

00:18:53,440 --> 00:18:57,440
small to read i'll just read you

00:18:56,000 --> 00:19:00,080
basically the um

00:18:57,440 --> 00:19:00,960
the the the summary so and their

00:19:00,080 --> 00:19:04,480
research um

00:19:00,960 --> 00:19:08,480
actually showed that um while

00:19:04,480 --> 00:19:11,840
um some i'm trying to get back to my

00:19:08,480 --> 00:19:14,880
can't find it oh there we are um so

00:19:11,840 --> 00:19:17,600
so while some types of authentication

00:19:14,880 --> 00:19:18,480
are more usable um and some are more

00:19:17,600 --> 00:19:22,240
secure

00:19:18,480 --> 00:19:24,960
no no no authentication technology

00:19:22,240 --> 00:19:26,799
is more deployable and they say marginal

00:19:24,960 --> 00:19:29,840
gains aren't sufficient

00:19:26,799 --> 00:19:31,120
so this microsoft study was sort of a

00:19:29,840 --> 00:19:32,960
study of studies

00:19:31,120 --> 00:19:34,240
so they looked at all these different

00:19:32,960 --> 00:19:35,760
types of authentication

00:19:34,240 --> 00:19:37,600
and rated them on usability

00:19:35,760 --> 00:19:39,760
deployability security

00:19:37,600 --> 00:19:42,240
and i thought it was an interesting

00:19:39,760 --> 00:19:45,760
conclusion

00:19:42,240 --> 00:19:48,080
um so how do we how do we meet this um

00:19:45,760 --> 00:19:49,840
this deployability challenge and that's

00:19:48,080 --> 00:19:53,840
what i want to talk about

00:19:49,840 --> 00:19:56,880
today and

00:19:53,840 --> 00:19:58,240
so um okay maybe a little bit more

00:19:56,880 --> 00:20:00,480
background i i think

00:19:58,240 --> 00:20:01,440
we've seen a lot of advances in

00:20:00,480 --> 00:20:03,280
authentication

00:20:01,440 --> 00:20:05,120
uh google i think has done a really

00:20:03,280 --> 00:20:07,600
great job um

00:20:05,120 --> 00:20:09,600
you know google has probably rolled out

00:20:07,600 --> 00:20:11,840
was one of the first to roll out

00:20:09,600 --> 00:20:12,720
like a you know one of the largest

00:20:11,840 --> 00:20:16,000
authentication

00:20:12,720 --> 00:20:18,000
you know strong authentication programs

00:20:16,000 --> 00:20:20,320
um so they have a lot of great data on

00:20:18,000 --> 00:20:23,520
usability and on

00:20:20,320 --> 00:20:25,360
user experience and and security

00:20:23,520 --> 00:20:27,280
so one of the things you'll find google

00:20:25,360 --> 00:20:29,440
was probably an early adopter of was

00:20:27,280 --> 00:20:32,480
multi-step authentication

00:20:29,440 --> 00:20:33,440
so instead of trying to have more than

00:20:32,480 --> 00:20:36,799
one factor

00:20:33,440 --> 00:20:38,799
on one page actually present the user

00:20:36,799 --> 00:20:41,120
through a number of pages

00:20:38,799 --> 00:20:42,000
um so in step one they ask for your

00:20:41,120 --> 00:20:43,440
username

00:20:42,000 --> 00:20:46,000
they don't even ask for your password

00:20:43,440 --> 00:20:49,039
and step two they ask your password

00:20:46,000 --> 00:20:51,280
and in step three they ask for your

00:20:49,039 --> 00:20:52,720
token or some other authenticator so

00:20:51,280 --> 00:20:53,520
this idea that we're going to put the

00:20:52,720 --> 00:20:55,840
user

00:20:53,520 --> 00:20:57,919
in in the old days we might see

00:20:55,840 --> 00:20:59,039
something like rsa tokens where you put

00:20:57,919 --> 00:21:02,159
in your username

00:20:59,039 --> 00:21:05,600
and then you put in the pin number

00:21:02,159 --> 00:21:08,240
plus the um plus the token on the on the

00:21:05,600 --> 00:21:08,960
on the or plus the number on the token

00:21:08,240 --> 00:21:11,120
so it was

00:21:08,960 --> 00:21:12,240
two two factor because it was the pin is

00:21:11,120 --> 00:21:15,360
something you know

00:21:12,240 --> 00:21:17,120
the the otp is something you have

00:21:15,360 --> 00:21:18,720
but it was done as one step and what

00:21:17,120 --> 00:21:19,200
we're seeing today is that we're moving

00:21:18,720 --> 00:21:21,039
to

00:21:19,200 --> 00:21:23,520
multi-step authentication workflows

00:21:21,039 --> 00:21:27,200
instead of single step

00:21:23,520 --> 00:21:31,760
um so one of the key

00:21:27,200 --> 00:21:34,080
issues for deployability is is recovery

00:21:31,760 --> 00:21:35,039
so what happens when you lose that

00:21:34,080 --> 00:21:36,880
credential

00:21:35,039 --> 00:21:38,640
i think this is actually the single

00:21:36,880 --> 00:21:41,760
biggest deployment challenge for

00:21:38,640 --> 00:21:44,960
organizations so

00:21:41,760 --> 00:21:46,080
if the answer to you lose your token is

00:21:44,960 --> 00:21:50,240
you have to call

00:21:46,080 --> 00:21:54,400
the help desk then

00:21:50,240 --> 00:21:56,960
that's a problem because the help desk

00:21:54,400 --> 00:21:59,039
is probably going to be less secure at

00:21:56,960 --> 00:22:01,440
authenticating you over the phone

00:21:59,039 --> 00:22:02,880
than the um then your authentication

00:22:01,440 --> 00:22:05,200
credential was

00:22:02,880 --> 00:22:07,039
um ideally if you lose your strong

00:22:05,200 --> 00:22:09,200
credential you should have to present

00:22:07,039 --> 00:22:10,480
yourself in person and you should get

00:22:09,200 --> 00:22:12,799
re-identity proved

00:22:10,480 --> 00:22:13,760
so they should look at your id they

00:22:12,799 --> 00:22:15,440
should look at you

00:22:13,760 --> 00:22:17,280
and they just like when you first got

00:22:15,440 --> 00:22:20,960
the credential

00:22:17,280 --> 00:22:23,600
so the in order to do credential

00:22:20,960 --> 00:22:25,200
recovery well you need two equally

00:22:23,600 --> 00:22:27,360
strong credentials

00:22:25,200 --> 00:22:29,039
so if you're going to issue phyto tokens

00:22:27,360 --> 00:22:30,880
or if you're going to use a phyto token

00:22:29,039 --> 00:22:33,520
get two phyto tokens

00:22:30,880 --> 00:22:34,159
and i show this um this picture um this

00:22:33,520 --> 00:22:37,440
is

00:22:34,159 --> 00:22:39,919
paragino fresco from the sistine chapel

00:22:37,440 --> 00:22:40,960
and you know here it's peter getting the

00:22:39,919 --> 00:22:43,760
keys to heaven

00:22:40,960 --> 00:22:44,080
and note he's getting two keys um

00:22:43,760 --> 00:22:46,080
because

00:22:44,080 --> 00:22:47,919
even peter can't be trusted not to lose

00:22:46,080 --> 00:22:48,480
one of the keys so he's getting a backup

00:22:47,919 --> 00:22:50,640
key

00:22:48,480 --> 00:22:51,840
so peter needs two keys and then you

00:22:50,640 --> 00:22:53,440
need two keys

00:22:51,840 --> 00:22:55,200
if you don't have two equally strong

00:22:53,440 --> 00:22:58,080
keys then you you end up

00:22:55,200 --> 00:22:59,120
degrading you're only as strong as your

00:22:58,080 --> 00:23:02,080
weakest

00:22:59,120 --> 00:23:02,960
backup credential so if you have a

00:23:02,080 --> 00:23:05,440
really strong

00:23:02,960 --> 00:23:06,559
let's say token and you have backup as

00:23:05,440 --> 00:23:08,559
sms

00:23:06,559 --> 00:23:09,919
don't bother with the token you're only

00:23:08,559 --> 00:23:13,039
you know there's no point to it you're

00:23:09,919 --> 00:23:16,640
only as strong as sms

00:23:13,039 --> 00:23:19,120
um so google actually

00:23:16,640 --> 00:23:19,840
really like the way that they handle it

00:23:19,120 --> 00:23:22,390
because

00:23:19,840 --> 00:23:24,720
they have one page where they let you

00:23:22,390 --> 00:23:27,039
[Music]

00:23:24,720 --> 00:23:29,200
enroll several credentials so this is a

00:23:27,039 --> 00:23:29,760
picture of my google 2fa page and you

00:23:29,200 --> 00:23:31,840
can see

00:23:29,760 --> 00:23:34,400
i mentioned the pixel books actually can

00:23:31,840 --> 00:23:37,520
be registered as a token

00:23:34,400 --> 00:23:40,000
the hyper fido mini i have a yubikey

00:23:37,520 --> 00:23:41,600
i have a couple of tokens um i use

00:23:40,000 --> 00:23:44,000
google authenticator app

00:23:41,600 --> 00:23:44,880
um but i like i really like what google

00:23:44,000 --> 00:23:47,120
is doing here

00:23:44,880 --> 00:23:48,000
they're sort of giving me one page where

00:23:47,120 --> 00:23:49,919
i can see

00:23:48,000 --> 00:23:51,200
my strong credentials and if i lose one

00:23:49,919 --> 00:23:55,760
i can delete it

00:23:51,200 --> 00:23:55,760
um or if i get a new one i can enroll it

00:23:55,919 --> 00:24:00,799
um and so i'll do a demo later glue has

00:23:59,200 --> 00:24:03,840
an open source tool

00:24:00,799 --> 00:24:04,799
called casa which provides um that type

00:24:03,840 --> 00:24:08,400
of functionality

00:24:04,799 --> 00:24:12,880
i'm actually going to do a demo of casa

00:24:08,400 --> 00:24:17,360
um okay and we're in the demo part um

00:24:12,880 --> 00:24:17,679
so okay we're still into the demo part

00:24:17,360 --> 00:24:20,159
so

00:24:17,679 --> 00:24:20,159
let's go

00:24:21,440 --> 00:24:25,520
so first of all let's just talk a little

00:24:23,840 --> 00:24:29,039
bit about the glue server

00:24:25,520 --> 00:24:31,200
and open id connect so

00:24:29,039 --> 00:24:32,159
another way that we can address the

00:24:31,200 --> 00:24:35,440
deployability

00:24:32,159 --> 00:24:37,520
challenge is by

00:24:35,440 --> 00:24:39,279
making sure that we have a loose

00:24:37,520 --> 00:24:40,480
bundling between the authentication

00:24:39,279 --> 00:24:43,520
technologies

00:24:40,480 --> 00:24:44,960
and the applications so just to make an

00:24:43,520 --> 00:24:49,520
extreme example

00:24:44,960 --> 00:24:53,039
if you have 100 applications and you

00:24:49,520 --> 00:24:56,799
let's say you have otp tokens

00:24:53,039 --> 00:24:57,840
and you have passwords and you decide

00:24:56,799 --> 00:25:00,880
you want to introduce

00:24:57,840 --> 00:25:02,480
phyto tokens well if you're if you're

00:25:00,880 --> 00:25:03,919
if you're actually hard-coding the

00:25:02,480 --> 00:25:05,760
authentication logic

00:25:03,919 --> 00:25:07,440
in the applications then you have to go

00:25:05,760 --> 00:25:10,559
to 100 applications

00:25:07,440 --> 00:25:13,120
in order to introduce phyto tokens

00:25:10,559 --> 00:25:14,000
and that's a lot of work so so the best

00:25:13,120 --> 00:25:15,919
practice and

00:25:14,000 --> 00:25:17,840
this has been for a lot of years for 20

00:25:15,919 --> 00:25:19,679
years or so has been

00:25:17,840 --> 00:25:21,679
when you have a lot of applications is

00:25:19,679 --> 00:25:22,880
to implement some type of centralized

00:25:21,679 --> 00:25:25,520
authentication

00:25:22,880 --> 00:25:28,400
um platform you know in the old days we

00:25:25,520 --> 00:25:30,640
had web access management platforms

00:25:28,400 --> 00:25:32,480
you know now there's really been a trend

00:25:30,640 --> 00:25:35,360
to move to open standards

00:25:32,480 --> 00:25:36,799
so saml is the most well known of the

00:25:35,360 --> 00:25:39,840
older open standards

00:25:36,799 --> 00:25:40,880
you know it's an xml a based federated

00:25:39,840 --> 00:25:43,919
identity

00:25:40,880 --> 00:25:47,039
protocol open id connect is is like

00:25:43,919 --> 00:25:50,000
a json rest sample where

00:25:47,039 --> 00:25:50,880
um the the idea is is that the

00:25:50,000 --> 00:25:54,320
application

00:25:50,880 --> 00:25:56,559
redirects to the idp you know this is

00:25:54,320 --> 00:25:58,240
the same in saml and open id connect so

00:25:56,559 --> 00:26:01,120
instead of having the login page

00:25:58,240 --> 00:26:02,880
live on the on the in the application

00:26:01,120 --> 00:26:05,760
the application redirects

00:26:02,880 --> 00:26:06,720
to the central open id provider which

00:26:05,760 --> 00:26:10,000
which presents

00:26:06,720 --> 00:26:12,000
uh one or more login pages um

00:26:10,000 --> 00:26:14,480
so you know just to give you a real

00:26:12,000 --> 00:26:18,240
world example here

00:26:14,480 --> 00:26:19,360
if i go to gmail in incognito mode so

00:26:18,240 --> 00:26:22,159
i'm not logged in

00:26:19,360 --> 00:26:24,159
i get redirected to accounts.google.org

00:26:22,159 --> 00:26:26,159
this is the google idp

00:26:24,159 --> 00:26:28,480
um then i'll log in and i'll get

00:26:26,159 --> 00:26:32,559
redirected back to gmail

00:26:28,480 --> 00:26:34,960
um this is the pattern that is basically

00:26:32,559 --> 00:26:37,120
every every single sign on technology

00:26:34,960 --> 00:26:38,640
ever invented uses the redirect

00:26:37,120 --> 00:26:40,799
and if you can think of one that doesn't

00:26:38,640 --> 00:26:42,799
use redirects please invent it

00:26:40,799 --> 00:26:45,279
because we everyone wants that but no

00:26:42,799 --> 00:26:46,960
one's figured out how to do it

00:26:45,279 --> 00:26:49,279
so in openid connect we have this thing

00:26:46,960 --> 00:26:52,159
called the authentication request

00:26:49,279 --> 00:26:53,600
and where i'm going with this is that in

00:26:52,159 --> 00:26:55,919
the authentication request

00:26:53,600 --> 00:26:56,799
the application has an opportunity to

00:26:55,919 --> 00:26:59,760
signal

00:26:56,799 --> 00:27:00,720
to the identity provider what type of

00:26:59,760 --> 00:27:04,559
authentication

00:27:00,720 --> 00:27:07,200
is desired and the parameter

00:27:04,559 --> 00:27:10,400
that we recommend to use at glue is

00:27:07,200 --> 00:27:13,360
called acr values

00:27:10,400 --> 00:27:14,320
so you know open id connect has a lot of

00:27:13,360 --> 00:27:17,600
parameters

00:27:14,320 --> 00:27:18,240
but basically you could say m and acr

00:27:17,600 --> 00:27:22,320
values

00:27:18,240 --> 00:27:25,120
equals otp or and acr values equals fido

00:27:22,320 --> 00:27:28,000
so it provides a hint to the idp about

00:27:25,120 --> 00:27:31,919
the type of authentication that you want

00:27:28,000 --> 00:27:35,679
but by using open standards and

00:27:31,919 --> 00:27:37,600
for sso you can really manage your

00:27:35,679 --> 00:27:39,120
authentication business logic in one

00:27:37,600 --> 00:27:40,640
place

00:27:39,120 --> 00:27:42,720
and the other nice thing about open

00:27:40,640 --> 00:27:46,240
standards is that

00:27:42,720 --> 00:27:48,000
the reason why our the industry has gone

00:27:46,240 --> 00:27:51,039
this way is because there can be no

00:27:48,000 --> 00:27:52,240
top-down solution for security modern

00:27:51,039 --> 00:27:56,640
organizations

00:27:52,240 --> 00:27:58,799
have a mix of custom applications

00:27:56,640 --> 00:28:00,159
off-the-shelf applications and sas

00:27:58,799 --> 00:28:04,320
applications

00:28:00,159 --> 00:28:06,480
and by by supporting open standards um

00:28:04,320 --> 00:28:07,760
then um there's no way a sas provider

00:28:06,480 --> 00:28:09,919
for example

00:28:07,760 --> 00:28:11,679
like salesforce is going to support your

00:28:09,919 --> 00:28:14,240
proprietary sso

00:28:11,679 --> 00:28:15,919
protocol but you know because thousands

00:28:14,240 --> 00:28:17,039
or millions of organizations are

00:28:15,919 --> 00:28:18,799
supporting saml

00:28:17,039 --> 00:28:20,159
it makes sense for them to support that

00:28:18,799 --> 00:28:22,399
and that's why we've seen this

00:28:20,159 --> 00:28:23,760
real move in the industry towards open

00:28:22,399 --> 00:28:25,279
standards for identity

00:28:23,760 --> 00:28:26,799
and it's really important for driving

00:28:25,279 --> 00:28:30,399
down the deployment cost

00:28:26,799 --> 00:28:33,200
for two-factor authentication

00:28:30,399 --> 00:28:35,840
okay so here's the the quick um so how

00:28:33,200 --> 00:28:38,480
do i get one of these open id providers

00:28:35,840 --> 00:28:40,159
um well you could use a sas service like

00:28:38,480 --> 00:28:42,080
octa or one login

00:28:40,159 --> 00:28:43,679
but if you're open source oriented and

00:28:42,080 --> 00:28:44,799
you want to run your own open id

00:28:43,679 --> 00:28:46,480
provider

00:28:44,799 --> 00:28:48,000
the glue server is not a bad way to

00:28:46,480 --> 00:28:50,480
start

00:28:48,000 --> 00:28:52,399
there's kubernetes there's docker i'm

00:28:50,480 --> 00:28:54,480
just going to show the linux

00:28:52,399 --> 00:28:56,080
insulation just to give you an idea of

00:28:54,480 --> 00:28:59,520
like how easy this is

00:28:56,080 --> 00:29:01,760
to install glue you add our repository

00:28:59,520 --> 00:29:02,880
um you add our signing key for the

00:29:01,760 --> 00:29:05,440
packages

00:29:02,880 --> 00:29:06,080
you do an update you do apt install glue

00:29:05,440 --> 00:29:08,159
server

00:29:06,080 --> 00:29:10,240
so that's sort of step one step one is

00:29:08,159 --> 00:29:13,360
app install glue server

00:29:10,240 --> 00:29:14,080
um step two is you start the glue server

00:29:13,360 --> 00:29:17,520
service

00:29:14,080 --> 00:29:20,480
not surprising has to be running um

00:29:17,520 --> 00:29:22,880
you log into the container glue is glue

00:29:20,480 --> 00:29:24,480
server runs as a chair roof container

00:29:22,880 --> 00:29:26,960
so you'll hear us say are you in the

00:29:24,480 --> 00:29:27,679
container basically after you start the

00:29:26,960 --> 00:29:30,080
container

00:29:27,679 --> 00:29:31,279
log into the container and then you run

00:29:30,080 --> 00:29:34,159
setup

00:29:31,279 --> 00:29:35,360
and you set up will ask you about 15

00:29:34,159 --> 00:29:37,120
different questions

00:29:35,360 --> 00:29:40,080
like what's your ip address what's your

00:29:37,120 --> 00:29:41,440
host name what's your city state email

00:29:40,080 --> 00:29:42,799
when it generates a self-signed

00:29:41,440 --> 00:29:43,600
certificate there's a whole bunch of

00:29:42,799 --> 00:29:45,200
questions

00:29:43,600 --> 00:29:47,440
and then it'll say what components you

00:29:45,200 --> 00:29:50,799
want to install um

00:29:47,440 --> 00:29:55,440
and there's four required components

00:29:50,799 --> 00:29:57,760
um httpd ldap which is our database

00:29:55,440 --> 00:29:59,760
aux auth which is the open id provider

00:29:57,760 --> 00:30:01,840
and aux trust which is the admin

00:29:59,760 --> 00:30:03,360
ui so if you want to just do the basic

00:30:01,840 --> 00:30:06,080
most basic installation

00:30:03,360 --> 00:30:07,679
just say yes to those four things if you

00:30:06,080 --> 00:30:10,000
have a little bit of extra memory

00:30:07,679 --> 00:30:12,000
and glue server requires about four gigs

00:30:10,000 --> 00:30:15,279
but if you have a little bit more memory

00:30:12,000 --> 00:30:17,440
then just say yes and install everything

00:30:15,279 --> 00:30:18,399
but just to give you an idea it doesn't

00:30:17,440 --> 00:30:20,840
like installing

00:30:18,399 --> 00:30:22,399
glue glue is just it's really not that

00:30:20,840 --> 00:30:24,159
hard

00:30:22,399 --> 00:30:25,520
and then after you do the installation

00:30:24,159 --> 00:30:28,399
basically

00:30:25,520 --> 00:30:29,360
you'll be able to log into the glue

00:30:28,399 --> 00:30:33,039
admin console

00:30:29,360 --> 00:30:35,039
and it looks like this and so i wanted

00:30:33,039 --> 00:30:36,640
to talk a little bit about how glue

00:30:35,039 --> 00:30:38,480
implements these different types of

00:30:36,640 --> 00:30:41,919
authentication

00:30:38,480 --> 00:30:42,399
um so the the best thing and the worst

00:30:41,919 --> 00:30:45,200
thing

00:30:42,399 --> 00:30:46,240
about glue this and this you can see it

00:30:45,200 --> 00:30:48,000
says not secure

00:30:46,240 --> 00:30:50,399
that's because my servers this is

00:30:48,000 --> 00:30:52,559
running in a local vm

00:30:50,399 --> 00:30:54,480
i'm using um i'm a linux geek i'm

00:30:52,559 --> 00:30:56,320
running ubuntu and so

00:30:54,480 --> 00:30:57,919
i'm running virtual machine manager

00:30:56,320 --> 00:30:58,960
anyway this isn't a real server it's

00:30:57,919 --> 00:31:02,399
just running on my

00:30:58,960 --> 00:31:04,399
my vm locally so

00:31:02,399 --> 00:31:05,519
anyway but i did a basic installation on

00:31:04,399 --> 00:31:07,760
the vm

00:31:05,519 --> 00:31:09,519
and um anyway the best thing and the

00:31:07,760 --> 00:31:11,760
worst thing about glue is we have these

00:31:09,519 --> 00:31:14,159
things called interception scripts

00:31:11,760 --> 00:31:15,200
and these interception scripts allow you

00:31:14,159 --> 00:31:17,279
to

00:31:15,200 --> 00:31:18,720
customize the behavior of the glue

00:31:17,279 --> 00:31:21,200
server

00:31:18,720 --> 00:31:23,600
and so if you're just doing password

00:31:21,200 --> 00:31:26,480
authentication

00:31:23,600 --> 00:31:27,039
you can store passwords in the glue ldap

00:31:26,480 --> 00:31:29,440
server

00:31:27,039 --> 00:31:31,039
or you could point the glue server at

00:31:29,440 --> 00:31:32,799
let's say maybe you have an existing

00:31:31,039 --> 00:31:34,480
active directory server with passwords

00:31:32,799 --> 00:31:35,519
in it so if you're just doing password

00:31:34,480 --> 00:31:37,440
authentication

00:31:35,519 --> 00:31:38,640
you don't have to do any programming at

00:31:37,440 --> 00:31:41,519
all

00:31:38,640 --> 00:31:43,200
you can just you know point it at ldap

00:31:41,519 --> 00:31:44,880
but if you want to implement two-factor

00:31:43,200 --> 00:31:46,480
authentication

00:31:44,880 --> 00:31:48,080
you have to implement write one of these

00:31:46,480 --> 00:31:49,679
we call them author person

00:31:48,080 --> 00:31:51,440
authentication scripts

00:31:49,679 --> 00:31:53,679
we ship out of the box with a whole

00:31:51,440 --> 00:31:55,919
bunch of these so we ship with

00:31:53,679 --> 00:32:00,640
certificate that's smart card

00:31:55,919 --> 00:32:04,480
otp and that's http and totp otp

00:32:00,640 --> 00:32:07,600
we smpp is a like for sending

00:32:04,480 --> 00:32:10,640
sms messages duo security

00:32:07,600 --> 00:32:14,559
commercial service sms

00:32:10,640 --> 00:32:16,960
using twilio api fido u2f

00:32:14,559 --> 00:32:18,320
502 super glue's our mobile app so we're

00:32:16,960 --> 00:32:19,120
giving you a whole bunch of these out of

00:32:18,320 --> 00:32:21,679
the box

00:32:19,120 --> 00:32:23,440
there's actually even more of them in

00:32:21,679 --> 00:32:27,679
github

00:32:23,440 --> 00:32:30,320
for our project under aux auth

00:32:27,679 --> 00:32:32,559
server integrations we publish a whole

00:32:30,320 --> 00:32:34,000
bunch more scripts

00:32:32,559 --> 00:32:36,080
so there's some more third-party

00:32:34,000 --> 00:32:38,880
commercial vendors in here

00:32:36,080 --> 00:32:40,559
there's some more weird workflows and

00:32:38,880 --> 00:32:43,200
anyway there's a bunch of examples you

00:32:40,559 --> 00:32:43,200
can look at

00:32:43,279 --> 00:32:49,600
and today i wanted to show you um just

00:32:46,720 --> 00:32:51,360
as a quick example duo security

00:32:49,600 --> 00:32:53,360
some of you might be familiar with this

00:32:51,360 --> 00:32:56,480
it was bought by cisco

00:32:53,360 --> 00:33:00,240
they have a mobile app they also allow

00:32:56,480 --> 00:33:05,120
you to use sms or voice

00:33:00,240 --> 00:33:05,120
but let me go actually

00:33:05,670 --> 00:33:10,399
[Music]

00:33:07,840 --> 00:33:12,240
and i you know in the script actually

00:33:10,399 --> 00:33:15,120
i'll show you in the interface

00:33:12,240 --> 00:33:16,320
so um so i mentioned before the acr

00:33:15,120 --> 00:33:19,279
values

00:33:16,320 --> 00:33:19,840
so in the glue server the name of the

00:33:19,279 --> 00:33:22,159
script

00:33:19,840 --> 00:33:24,159
is the acr value so if you want to use

00:33:22,159 --> 00:33:26,559
duo authentication

00:33:24,159 --> 00:33:27,360
you would redirect the user to the glue

00:33:26,559 --> 00:33:29,440
server

00:33:27,360 --> 00:33:30,960
using an open id connect authentication

00:33:29,440 --> 00:33:35,039
request and you would say

00:33:30,960 --> 00:33:38,720
acr values equals duo and and so the acr

00:33:35,039 --> 00:33:40,480
corresponds to the name of the script

00:33:38,720 --> 00:33:42,000
we have properties in the script you

00:33:40,480 --> 00:33:45,039
know these are you can add

00:33:42,000 --> 00:33:47,200
any number of properties

00:33:45,039 --> 00:33:48,480
and and then you can paste your script

00:33:47,200 --> 00:33:51,039
in here

00:33:48,480 --> 00:33:52,960
you can also you can store the script in

00:33:51,039 --> 00:33:54,880
the database or the file system

00:33:52,960 --> 00:33:56,559
when you're doing development you can

00:33:54,880 --> 00:33:57,679
use the file system in github for

00:33:56,559 --> 00:34:00,080
example

00:33:57,679 --> 00:34:01,519
when if you're in a cluster we prefer to

00:34:00,080 --> 00:34:04,480
store these scripts in a

00:34:01,519 --> 00:34:05,760
in the database because that way the

00:34:04,480 --> 00:34:09,280
scripts are available

00:34:05,760 --> 00:34:11,760
to all the servers if you make an update

00:34:09,280 --> 00:34:12,480
and let me show you one of these scripts

00:34:11,760 --> 00:34:15,760
so

00:34:12,480 --> 00:34:18,480
the scripts are written in jython

00:34:15,760 --> 00:34:20,639
so that's the java version of python

00:34:18,480 --> 00:34:23,919
which is kind of interesting because

00:34:20,639 --> 00:34:26,079
you can use either java

00:34:23,919 --> 00:34:27,599
or python classes as long as these are

00:34:26,079 --> 00:34:31,520
pure python

00:34:27,599 --> 00:34:33,280
classes but um

00:34:31,520 --> 00:34:35,119
i think that's kind of neat you know for

00:34:33,280 --> 00:34:35,679
example we had a java class to send

00:34:35,119 --> 00:34:38,720
email

00:34:35,679 --> 00:34:38,720
we just imported that

00:34:38,800 --> 00:34:42,079
in the glue server there's a lot of

00:34:40,399 --> 00:34:45,599
different types of

00:34:42,079 --> 00:34:47,760
interception scripts for issuing tokens

00:34:45,599 --> 00:34:48,720
and doing lots of different types of

00:34:47,760 --> 00:34:50,320
things so

00:34:48,720 --> 00:34:52,560
each each of these scripts has a

00:34:50,320 --> 00:34:53,919
different interface or methods that you

00:34:52,560 --> 00:34:55,520
need to implement

00:34:53,919 --> 00:34:57,119
um so this determines what type of

00:34:55,520 --> 00:35:00,079
script it is

00:34:57,119 --> 00:35:01,520
um so not surprisingly the most

00:35:00,079 --> 00:35:02,880
interesting method is called

00:35:01,520 --> 00:35:04,400
authenticate

00:35:02,880 --> 00:35:06,640
and this is going to return true or

00:35:04,400 --> 00:35:09,680
false

00:35:06,640 --> 00:35:12,480
note we send in the step

00:35:09,680 --> 00:35:13,680
so in a cluster of glue servers remember

00:35:12,480 --> 00:35:15,040
you might have a multi-step

00:35:13,680 --> 00:35:16,880
authentication

00:35:15,040 --> 00:35:18,560
and maybe let's say we have a hundred

00:35:16,880 --> 00:35:21,440
glue servers and maybe

00:35:18,560 --> 00:35:22,160
glue server you know 30 presents step

00:35:21,440 --> 00:35:25,440
number one

00:35:22,160 --> 00:35:26,640
and glue number 56 represents um step

00:35:25,440 --> 00:35:28,960
number two

00:35:26,640 --> 00:35:30,160
so the way that we handle this is that

00:35:28,960 --> 00:35:32,960
the step is sent

00:35:30,160 --> 00:35:34,800
into the authenticate method and then in

00:35:32,960 --> 00:35:35,200
the method we basically switch on the

00:35:34,800 --> 00:35:38,240
step

00:35:35,200 --> 00:35:42,560
we say if step one do something

00:35:38,240 --> 00:35:44,640
if step two you know do something else

00:35:42,560 --> 00:35:46,960
i like to show this script because it's

00:35:44,640 --> 00:35:49,520
sort of interesting so in step one

00:35:46,960 --> 00:35:50,320
of duo we actually just use the password

00:35:49,520 --> 00:35:52,480
as step one

00:35:50,320 --> 00:35:53,359
so we we validate the credentials in

00:35:52,480 --> 00:35:56,079
this case

00:35:53,359 --> 00:35:59,119
the we're validating against the local

00:35:56,079 --> 00:36:01,920
password in our local ldap server

00:35:59,119 --> 00:36:03,440
um but i like this script because it

00:36:01,920 --> 00:36:05,280
gives an example of

00:36:03,440 --> 00:36:06,560
of how to do what we call adaptive

00:36:05,280 --> 00:36:10,000
authentication

00:36:06,560 --> 00:36:12,430
so um in um what we do is

00:36:10,000 --> 00:36:13,599
this customer they wanted to

00:36:12,430 --> 00:36:17,119
[Music]

00:36:13,599 --> 00:36:19,440
try out duo so first they um

00:36:17,119 --> 00:36:20,160
they created a group and they said if

00:36:19,440 --> 00:36:22,320
you're in the

00:36:20,160 --> 00:36:24,079
duo group we're going to give you a

00:36:22,320 --> 00:36:26,480
two-step authentication

00:36:24,079 --> 00:36:27,920
if you're not in the duo group we're

00:36:26,480 --> 00:36:29,440
going to let you through on a one-step

00:36:27,920 --> 00:36:33,040
authentication

00:36:29,440 --> 00:36:35,040
um so this way the it department wanted

00:36:33,040 --> 00:36:36,640
to try out duo before they rolled it out

00:36:35,040 --> 00:36:37,760
to the whole company this was sort of a

00:36:36,640 --> 00:36:39,680
simple solution

00:36:37,760 --> 00:36:40,880
but it shows you how you can change the

00:36:39,680 --> 00:36:43,920
number of steps

00:36:40,880 --> 00:36:44,800
based on the context and so you can use

00:36:43,920 --> 00:36:47,920
this strategy

00:36:44,800 --> 00:36:50,720
also for things like okay if it's in

00:36:47,920 --> 00:36:51,359
you know the country that you're in um

00:36:50,720 --> 00:36:54,000
you know

00:36:51,359 --> 00:36:55,680
do one step if it's outside your country

00:36:54,000 --> 00:36:58,000
do two steps

00:36:55,680 --> 00:36:58,960
or you could even call there's fraud

00:36:58,000 --> 00:37:01,520
scores

00:36:58,960 --> 00:37:02,960
um you know there's a good one nustar

00:37:01,520 --> 00:37:06,240
has a service called

00:37:02,960 --> 00:37:09,680
what's it called new star

00:37:06,240 --> 00:37:11,920
ip reputation um so just based on the ip

00:37:09,680 --> 00:37:14,800
address you can get a risk score

00:37:11,920 --> 00:37:15,119
um so you can do some strategies like

00:37:14,800 --> 00:37:18,240
this

00:37:15,119 --> 00:37:20,560
and say you know if the um

00:37:18,240 --> 00:37:22,079
if the risk score is greater than

00:37:20,560 --> 00:37:24,720
something use a different

00:37:22,079 --> 00:37:26,400
uh based on the ip address you use you

00:37:24,720 --> 00:37:29,440
add an extra step

00:37:26,400 --> 00:37:34,160
um we also see cases where um

00:37:29,440 --> 00:37:36,480
companies say i've detected that your

00:37:34,160 --> 00:37:37,359
you know that your account has been um

00:37:36,480 --> 00:37:40,960
compromised

00:37:37,359 --> 00:37:42,640
on a different website um you know

00:37:40,960 --> 00:37:44,160
i'm going to send you an sms to make

00:37:42,640 --> 00:37:46,800
sure it's really you so you have quite a

00:37:44,160 --> 00:37:50,079
bit of flexibility to sort of adapt

00:37:46,800 --> 00:37:52,800
to the context of the of this of the

00:37:50,079 --> 00:37:54,960
transaction and add more steps michael

00:37:52,800 --> 00:37:56,320
we're coming up on five minutes

00:37:54,960 --> 00:37:58,000
okay thank you for the warning i was

00:37:56,320 --> 00:37:59,200
totally wondering about that i forgot to

00:37:58,000 --> 00:38:02,839
look at the clock

00:37:59,200 --> 00:38:05,920
um let me show two more things um

00:38:02,839 --> 00:38:08,240
so um account authentication steps

00:38:05,920 --> 00:38:09,599
get page for steps so you can actually

00:38:08,240 --> 00:38:11,680
create a custom page

00:38:09,599 --> 00:38:12,880
so in the glue server you can customize

00:38:11,680 --> 00:38:15,760
the look and feel of like

00:38:12,880 --> 00:38:18,160
page one or page two so let me finish

00:38:15,760 --> 00:38:20,720
the demo by showing um this application

00:38:18,160 --> 00:38:21,440
called casa so i showed you before how

00:38:20,720 --> 00:38:24,000
google

00:38:21,440 --> 00:38:25,920
lets you you know manage your different

00:38:24,000 --> 00:38:29,440
types of authentication

00:38:25,920 --> 00:38:31,839
this this casa is a free open source

00:38:29,440 --> 00:38:34,880
portal self-service portal that's built

00:38:31,839 --> 00:38:37,119
into the glue server

00:38:34,880 --> 00:38:38,240
and so i'll give a quick two-factor demo

00:38:37,119 --> 00:38:40,160
here

00:38:38,240 --> 00:38:41,760
so let me enter my password so the

00:38:40,160 --> 00:38:45,119
password is step one

00:38:41,760 --> 00:38:48,320
and you can see we support social login

00:38:45,119 --> 00:38:50,960
so now it's asking me to click the uh

00:38:48,320 --> 00:38:52,400
my my token i have a phyto token and i'm

00:38:50,960 --> 00:38:54,800
going to actually cancel this

00:38:52,400 --> 00:38:57,200
i'm going to try and sign in another way

00:38:54,800 --> 00:39:00,480
and i'll use bioid authentication

00:38:57,200 --> 00:39:04,240
um this is bio biometric um

00:39:00,480 --> 00:39:07,440
using facial recognition so

00:39:04,240 --> 00:39:08,720
oh okay i think it's messed up because

00:39:07,440 --> 00:39:10,560
my camera's in use

00:39:08,720 --> 00:39:11,760
okay that would have been a cool demo

00:39:10,560 --> 00:39:13,440
i'm gonna have to do something else

00:39:11,760 --> 00:39:15,280
let's do super clear you're using it on

00:39:13,440 --> 00:39:15,680
zoom so it's not going to let you access

00:39:15,280 --> 00:39:18,240
it

00:39:15,680 --> 00:39:19,359
exactly yeah so i'll do super glue

00:39:18,240 --> 00:39:21,520
instead um read

00:39:19,359 --> 00:39:23,680
actually we have a blog about bioid on

00:39:21,520 --> 00:39:25,040
our website it used the webcam to do

00:39:23,680 --> 00:39:27,920
facial recognition

00:39:25,040 --> 00:39:29,440
all right so i'm getting um a

00:39:27,920 --> 00:39:32,560
notification

00:39:29,440 --> 00:39:33,839
super glue notification it's asking me

00:39:32,560 --> 00:39:37,520
for my fingerprint

00:39:33,839 --> 00:39:39,760
give it my fingerprint it's saying um

00:39:37,520 --> 00:39:41,520
you know mike is logging in from austin

00:39:39,760 --> 00:39:45,839
i'll approve

00:39:41,520 --> 00:39:48,560
and it should log me in

00:39:45,839 --> 00:39:50,160
um so anyway it this sort of tells you

00:39:48,560 --> 00:39:52,079
how like you can implement a couple of

00:39:50,160 --> 00:39:54,800
different types of authentication

00:39:52,079 --> 00:39:57,359
um so like google we let you enroll

00:39:54,800 --> 00:39:58,400
multiple uh fido keys i have a couple of

00:39:57,359 --> 00:40:02,400
yubi keys

00:39:58,400 --> 00:40:05,520
um um we actually are shipping this

00:40:02,400 --> 00:40:09,280
um bio um id

00:40:05,520 --> 00:40:12,560
plugin now um that's a sas service but

00:40:09,280 --> 00:40:14,640
um it's kind of cool um super glue so if

00:40:12,560 --> 00:40:18,400
i have if i get a new phone

00:40:14,640 --> 00:40:21,440
i can enroll a phone um and

00:40:18,400 --> 00:40:24,800
if i lose a phone i can delete it

00:40:21,440 --> 00:40:27,760
this is the sms with with twilio

00:40:24,800 --> 00:40:30,160
otp for example i have two phones

00:40:27,760 --> 00:40:33,599
registered but if i lose my phone

00:40:30,160 --> 00:40:35,599
um i can scan the qr code use google

00:40:33,599 --> 00:40:37,520
authenticator or sofos authenticator or

00:40:35,599 --> 00:40:40,880
something enroll my phone

00:40:37,520 --> 00:40:44,800
um but um but i think that um so

00:40:40,880 --> 00:40:47,520
um we felt that this was sort of missing

00:40:44,800 --> 00:40:48,079
um in the in the by the way uh maybe

00:40:47,520 --> 00:40:50,319
i'll just show

00:40:48,079 --> 00:40:52,400
you guys are maybe some geeks out there

00:40:50,319 --> 00:40:54,079
um you wanna you have your own cool type

00:40:52,400 --> 00:40:56,960
of two-factor authentication

00:40:54,079 --> 00:40:58,160
um casa has plug-ins so if you wanna add

00:40:56,960 --> 00:41:00,319
a different type of

00:40:58,160 --> 00:41:02,079
uh plug-in maybe some other type of

00:41:00,319 --> 00:41:04,560
authentication we didn't think of

00:41:02,079 --> 00:41:06,319
you can write a plug-in basically as

00:41:04,560 --> 00:41:07,280
long as there's an api to list

00:41:06,319 --> 00:41:10,000
credentials

00:41:07,280 --> 00:41:12,400
and add remove credential then you can

00:41:10,000 --> 00:41:14,560
build a plug-in for casa

00:41:12,400 --> 00:41:17,760
yourself and add it and submit it to our

00:41:14,560 --> 00:41:20,000
github and we'd be happy to publish it

00:41:17,760 --> 00:41:21,920
but um yeah but i felt like this was

00:41:20,000 --> 00:41:23,200
missing like there's a lot of websites

00:41:21,920 --> 00:41:25,359
out there that allow you to do

00:41:23,200 --> 00:41:26,319
self-service password reset but no way

00:41:25,359 --> 00:41:29,520
to do

00:41:26,319 --> 00:41:33,040
um um reset on um

00:41:29,520 --> 00:41:35,040
on your stronger credentials and yeah

00:41:33,040 --> 00:41:36,720
so maybe we have a minute or two i know

00:41:35,040 --> 00:41:38,400
this was going to be tight so i didn't

00:41:36,720 --> 00:41:40,079
leave a ton of room for questions but i

00:41:38,400 --> 00:41:42,400
i guess maybe we have a minute for one

00:41:40,079 --> 00:41:45,040
or two

00:41:42,400 --> 00:41:47,280
mike have you got a final slide that you

00:41:45,040 --> 00:41:50,880
can show people your contact information

00:41:47,280 --> 00:41:50,880
sure yeah let me go back to that

00:41:51,920 --> 00:41:59,359
yep that's me we're glue federation

00:41:55,440 --> 00:42:01,040
um look for an announcement next week

00:41:59,359 --> 00:42:03,040
at the linux foundation we have some

00:42:01,040 --> 00:42:04,160
exciting news i can't say exactly what

00:42:03,040 --> 00:42:06,319
yet but

00:42:04,160 --> 00:42:08,400
next week we'll be announcing something

00:42:06,319 --> 00:42:11,040
with linux foundation

00:42:08,400 --> 00:42:12,160
glue federation's our twitter handle

00:42:11,040 --> 00:42:15,200
send me a linkedin

00:42:12,160 --> 00:42:18,960
i'm nyny mike

00:42:15,200 --> 00:42:21,200
and um and

00:42:18,960 --> 00:42:22,240
um yeah question do you have something

00:42:21,200 --> 00:42:25,920
for 2fa

00:42:22,240 --> 00:42:27,520
ssh um so actually glue is a radius

00:42:25,920 --> 00:42:30,160
server built in

00:42:27,520 --> 00:42:31,839
and so you could use pam radius and then

00:42:30,160 --> 00:42:35,440
we have a plug-in

00:42:31,839 --> 00:42:37,119
for our radius server that would allow

00:42:35,440 --> 00:42:38,160
you to send the notification to super

00:42:37,119 --> 00:42:41,520
glue

00:42:38,160 --> 00:42:45,359
so there is a way to do it for ssh

00:42:41,520 --> 00:42:47,760
another recommendation i have for ssh

00:42:45,359 --> 00:42:49,200
is to look at a tool from gravitational

00:42:47,760 --> 00:42:51,599
called teleport

00:42:49,200 --> 00:42:53,280
that's a really really good like way

00:42:51,599 --> 00:42:54,079
better than what we're doing type of

00:42:53,280 --> 00:42:58,000
solution

00:42:54,079 --> 00:43:00,720
that's open source and it's based on um

00:42:58,000 --> 00:43:01,599
it's like a better usage of ssh keys by

00:43:00,720 --> 00:43:04,720
themselves

00:43:01,599 --> 00:43:05,520
aren't necessarily secure um so teleport

00:43:04,720 --> 00:43:07,760
uses um

00:43:05,520 --> 00:43:09,599
x 509 certificates um of course

00:43:07,760 --> 00:43:12,640
certificates carry extra data

00:43:09,599 --> 00:43:14,960
besides the cryptographic key and

00:43:12,640 --> 00:43:17,280
and so teleport is really really good

00:43:14,960 --> 00:43:25,359
highly recommended

00:43:17,280 --> 00:43:25,359

YouTube URL: https://www.youtube.com/watch?v=IrJYgIPyUnw


