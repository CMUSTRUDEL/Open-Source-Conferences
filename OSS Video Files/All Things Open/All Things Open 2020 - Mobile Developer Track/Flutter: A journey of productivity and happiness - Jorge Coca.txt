Title: Flutter: A journey of productivity and happiness - Jorge Coca
Publication date: 2020-12-16
Playlist: All Things Open 2020 - Mobile Developer Track
Description: 
	Presented by: Jorge Coca, Very Good Ventures
Presented at All Things Open 2020 - Mobile Developer Track

Abstract: Flutter is an open-source user interface toolkit developed by Google that allows you to create beautiful applications in record time without sacrificing code quality nor developer productivity. 

With such an ambitious premise, I was very skeptical back at the beginning of 2018 when I tried Flutter for the first time that Flutter could check all the boxes; after all, there were already plenty of cross-platform solutions for mobile that promised all the gold in the world but ended up not quite meeting the expectations. However, this time, Flutter brought a big simile to my face immediately! Flutter is fun to learn, easy to test, highly performant, completely open-source, and has an incredibly community that is warm, welcoming, supportive, and incredibly active!

In this talk, I'd like to share with you my experience working with Flutter for more than two years: from big projects with hundreds of developers contributing daily to the codebase to small and fast-paced startups that need to validate their product as soon as possible.
Captions: 
	00:00:05,680 --> 00:00:08,960
uh

00:00:06,560 --> 00:00:10,719
in the following like around 30 minutes

00:00:08,960 --> 00:00:13,360
or so we're gonna learn about

00:00:10,719 --> 00:00:14,480
flutter how or why i started using

00:00:13,360 --> 00:00:16,160
flatter

00:00:14,480 --> 00:00:17,840
so i'm gonna describe my journey because

00:00:16,160 --> 00:00:19,600
at this point it's a journey it's been a

00:00:17,840 --> 00:00:21,840
couple years already

00:00:19,600 --> 00:00:23,920
and all i can say about it like if i

00:00:21,840 --> 00:00:24,720
have to pick two words to describe this

00:00:23,920 --> 00:00:26,400
journey

00:00:24,720 --> 00:00:28,480
is that i have been incredibly

00:00:26,400 --> 00:00:29,359
productive and i've been incredibly

00:00:28,480 --> 00:00:32,079
happy

00:00:29,359 --> 00:00:33,360
and i hope that during this talk you get

00:00:32,079 --> 00:00:35,280
to understand

00:00:33,360 --> 00:00:37,280
why it made me think about like hey

00:00:35,280 --> 00:00:39,200
maybe should i try this by myself

00:00:37,280 --> 00:00:41,520
or maybe i should convince my company to

00:00:39,200 --> 00:00:43,840
just give it a try

00:00:41,520 --> 00:00:46,239
and like every good journey it starts

00:00:43,840 --> 00:00:50,000
with once upon a time right

00:00:46,239 --> 00:00:52,239
back in 2016 i joined bmw here in

00:00:50,000 --> 00:00:54,320
chicago they had a technology center

00:00:52,239 --> 00:00:55,520
and i became the tech lead for the

00:00:54,320 --> 00:00:58,480
android platform

00:00:55,520 --> 00:00:59,680
so we were building part of their

00:00:58,480 --> 00:01:01,520
connected services

00:00:59,680 --> 00:01:03,520
and in this case as an android tech lead

00:01:01,520 --> 00:01:05,760
my function was to

00:01:03,520 --> 00:01:07,520
make sure that all the teams around the

00:01:05,760 --> 00:01:08,560
world involved in the android app for

00:01:07,520 --> 00:01:12,479
bmw

00:01:08,560 --> 00:01:16,479
were being successful however

00:01:12,479 --> 00:01:18,159
at that point like there was no like

00:01:16,479 --> 00:01:19,600
really good cross platform or anything

00:01:18,159 --> 00:01:21,119
wasn't even our goal

00:01:19,600 --> 00:01:23,040
but there were a few things that as a

00:01:21,119 --> 00:01:24,799
company we were doing

00:01:23,040 --> 00:01:26,080
kind of like not in the most like

00:01:24,799 --> 00:01:28,240
efficient way

00:01:26,080 --> 00:01:30,720
first of all is that as a company bmw

00:01:28,240 --> 00:01:32,960
was an ios first company

00:01:30,720 --> 00:01:34,479
what do i mean by that when i joined in

00:01:32,960 --> 00:01:37,119
00:01:34,479 --> 00:01:39,439
i had the privilege of actually making

00:01:37,119 --> 00:01:42,399
the first commit for the android project

00:01:39,439 --> 00:01:43,920
but by that time the ios project was

00:01:42,399 --> 00:01:45,520
already ongoing for

00:01:43,920 --> 00:01:47,840
almost a year and they were actually

00:01:45,520 --> 00:01:48,479
about to release one month after i

00:01:47,840 --> 00:01:51,119
joined

00:01:48,479 --> 00:01:53,200
and we couldn't release android pretty

00:01:51,119 --> 00:01:55,200
much like nine months after so

00:01:53,200 --> 00:01:57,280
that's why i say that it was an ios

00:01:55,200 --> 00:01:59,360
first they had more resources

00:01:57,280 --> 00:02:01,439
they had earlier releases they had more

00:01:59,360 --> 00:02:03,360
features

00:02:01,439 --> 00:02:05,439
our client for android was using java at

00:02:03,360 --> 00:02:07,439
that time and at some point we started

00:02:05,439 --> 00:02:08,959
the migration to kotlin right

00:02:07,439 --> 00:02:10,479
i'm not going to talk about the benefits

00:02:08,959 --> 00:02:14,000
of kotlin but like that was

00:02:10,479 --> 00:02:14,720
super fun actually as parents we were

00:02:14,000 --> 00:02:17,280
using

00:02:14,720 --> 00:02:18,480
a model vb model it was a custom

00:02:17,280 --> 00:02:21,760
implementation

00:02:18,480 --> 00:02:23,280
we're using dagger 2 reactive directive

00:02:21,760 --> 00:02:25,840
and all the stuff right like all the

00:02:23,280 --> 00:02:26,879
like whistles and everything that we're

00:02:25,840 --> 00:02:28,959
making like

00:02:26,879 --> 00:02:31,120
modern android apps at that point but

00:02:28,959 --> 00:02:33,840
still we were not quite successful with

00:02:31,120 --> 00:02:35,599
with our partners and when it came to

00:02:33,840 --> 00:02:36,480
testing we were like actually spending a

00:02:35,599 --> 00:02:38,800
lot of time

00:02:36,480 --> 00:02:41,280
testing but only unit tests if you think

00:02:38,800 --> 00:02:44,239
about it drop electric test for your

00:02:41,280 --> 00:02:45,200
activities fragments custom views

00:02:44,239 --> 00:02:47,599
they're actually

00:02:45,200 --> 00:02:48,720
quite tricky and let's not even talk

00:02:47,599 --> 00:02:51,360
about espresso so

00:02:48,720 --> 00:02:52,080
our security layer was just pure unit

00:02:51,360 --> 00:02:53,760
test

00:02:52,080 --> 00:02:55,360
on the model uv models and other

00:02:53,760 --> 00:02:58,640
components that they didn't have

00:02:55,360 --> 00:03:01,760
any android dependencies and finally

00:02:58,640 --> 00:03:02,319
because we were always behind ios we

00:03:01,760 --> 00:03:05,200
didn't have

00:03:02,319 --> 00:03:07,519
actual actually access to our backing we

00:03:05,200 --> 00:03:09,440
had no access whatsoever or a way to

00:03:07,519 --> 00:03:12,239
influence the apis

00:03:09,440 --> 00:03:13,680
whatever they did for ios that's what we

00:03:12,239 --> 00:03:15,760
had to use

00:03:13,680 --> 00:03:17,599
so if you're wondering how did it feel

00:03:15,760 --> 00:03:19,519
working at bmw

00:03:17,599 --> 00:03:21,360
my initial expectation was they would be

00:03:19,519 --> 00:03:23,760
something like this right

00:03:21,360 --> 00:03:24,480
like a world full of love for like ios

00:03:23,760 --> 00:03:27,040
developers

00:03:24,480 --> 00:03:29,040
and android developers and stakeholders

00:03:27,040 --> 00:03:31,920
we collaborate together to create a pro

00:03:29,040 --> 00:03:32,640
an awesome platform for our customers

00:03:31,920 --> 00:03:35,440
however

00:03:32,640 --> 00:03:36,080
in reality it felt a little more like

00:03:35,440 --> 00:03:38,879
this

00:03:36,080 --> 00:03:40,000
they had ios on one side we had android

00:03:38,879 --> 00:03:41,680
on a different side

00:03:40,000 --> 00:03:44,000
and there was literally nothing in

00:03:41,680 --> 00:03:45,760
common nothing other than like

00:03:44,000 --> 00:03:48,080
the backing but we couldn't influence

00:03:45,760 --> 00:03:50,959
that and if you ask me how i felt

00:03:48,080 --> 00:03:52,159
how if i felt at that point it felt like

00:03:50,959 --> 00:03:54,640
this a little bit

00:03:52,159 --> 00:03:55,599
i was like our android team was the

00:03:54,640 --> 00:03:57,280
underdog

00:03:55,599 --> 00:03:59,040
we didn't have like a strong connection

00:03:57,280 --> 00:04:02,080
with our customer base

00:03:59,040 --> 00:04:03,040
it seemed that for bmw android was an

00:04:02,080 --> 00:04:05,120
afterthought

00:04:03,040 --> 00:04:06,319
and that is actually really bad not for

00:04:05,120 --> 00:04:08,480
the developers

00:04:06,319 --> 00:04:10,239
but for those customers those bmw

00:04:08,480 --> 00:04:12,159
drivers or mini drivers

00:04:10,239 --> 00:04:15,200
that they have an android phone right it

00:04:12,159 --> 00:04:18,239
was really a bad experience

00:04:15,200 --> 00:04:20,320
so let's recap a little bit we had no

00:04:18,239 --> 00:04:23,680
collaboration between teams

00:04:20,320 --> 00:04:25,360
we were completely isolated we had

00:04:23,680 --> 00:04:27,600
different release schedules

00:04:25,360 --> 00:04:30,720
so all the marketing efforts were put

00:04:27,600 --> 00:04:33,120
towards the ios product

00:04:30,720 --> 00:04:34,320
we didn't have actually internal android

00:04:33,120 --> 00:04:36,400
uh

00:04:34,320 --> 00:04:38,240
like employees using the application

00:04:36,400 --> 00:04:39,840
there was no internal dog food

00:04:38,240 --> 00:04:42,400
and that's bad because your first day at

00:04:39,840 --> 00:04:43,440
bmw pretty much they give you a personal

00:04:42,400 --> 00:04:46,639
phone that is going to be

00:04:43,440 --> 00:04:47,520
an iphone and if you want to try your

00:04:46,639 --> 00:04:50,560
product

00:04:47,520 --> 00:04:53,040
you're going to like on your own

00:04:50,560 --> 00:04:54,479
our apis they were like 100 oriented

00:04:53,040 --> 00:04:56,000
towards ios

00:04:54,479 --> 00:04:57,680
and this has an impact right because

00:04:56,000 --> 00:04:58,320
when we don't support the same feature

00:04:57,680 --> 00:05:00,479
set

00:04:58,320 --> 00:05:02,320
some of the apis we might need or we

00:05:00,479 --> 00:05:03,039
might have different needs and we were

00:05:02,320 --> 00:05:05,840
never

00:05:03,039 --> 00:05:08,320
able to influence or like participate in

00:05:05,840 --> 00:05:11,039
the design of those apis

00:05:08,320 --> 00:05:11,680
therefore this actually had a big big

00:05:11,039 --> 00:05:13,680
payload

00:05:11,680 --> 00:05:15,919
on the team actually teams all around

00:05:13,680 --> 00:05:18,560
the world we were not confident

00:05:15,919 --> 00:05:20,639
in our success as a team we were trying

00:05:18,560 --> 00:05:21,120
to do our best and we were like breaking

00:05:20,639 --> 00:05:24,160
our

00:05:21,120 --> 00:05:26,720
brains and our hearts to be successful

00:05:24,160 --> 00:05:28,880
but we just simply had we didn't have

00:05:26,720 --> 00:05:30,800
the support from the company

00:05:28,880 --> 00:05:33,120
so what happened at that point we needed

00:05:30,800 --> 00:05:34,880
a change and not just a change

00:05:33,120 --> 00:05:36,160
of like oh i'm gonna use this framework

00:05:34,880 --> 00:05:40,000
over the other one

00:05:36,160 --> 00:05:42,160
we needed a big change a cultural change

00:05:40,000 --> 00:05:43,759
so what happened a new opportunity was

00:05:42,160 --> 00:05:45,440
presented to us

00:05:43,759 --> 00:05:48,240
we started hearing rumors about a

00:05:45,440 --> 00:05:50,080
redesign something that might challenge

00:05:48,240 --> 00:05:51,600
like some of the cultural foundations

00:05:50,080 --> 00:05:52,000
that we had something that might

00:05:51,600 --> 00:05:53,680
challenge

00:05:52,000 --> 00:05:56,400
some of the business processes that we

00:05:53,680 --> 00:05:59,520
had so we just jumped into that wave

00:05:56,400 --> 00:06:00,000
and we asked for an exploration what we

00:05:59,520 --> 00:06:02,800
asked

00:06:00,000 --> 00:06:03,120
was to do some research learn what's out

00:06:02,800 --> 00:06:05,840
there

00:06:03,120 --> 00:06:07,440
can we do something better as a company

00:06:05,840 --> 00:06:09,280
even if we're not going to have maybe

00:06:07,440 --> 00:06:12,000
the support from business

00:06:09,280 --> 00:06:13,520
to dedicate the main the same resources

00:06:12,000 --> 00:06:14,800
to ios and android

00:06:13,520 --> 00:06:17,360
maybe there's something that we can do

00:06:14,800 --> 00:06:18,960
from the technology side to bring that

00:06:17,360 --> 00:06:19,759
support and remove the overhead of

00:06:18,960 --> 00:06:22,960
thinking about

00:06:19,759 --> 00:06:24,400
ios and android and think instead about

00:06:22,960 --> 00:06:26,960
your mobile product

00:06:24,400 --> 00:06:28,080
that's what we wanted to change and we

00:06:26,960 --> 00:06:30,319
knew

00:06:28,080 --> 00:06:32,000
that if we would be doing the same thing

00:06:30,319 --> 00:06:34,880
that led to failure

00:06:32,000 --> 00:06:36,080
we would fail again so we started like

00:06:34,880 --> 00:06:38,639
researching

00:06:36,080 --> 00:06:39,759
all the things that we could and we set

00:06:38,639 --> 00:06:42,720
for ourselves

00:06:39,759 --> 00:06:44,880
actually a very ambitious goal a goal

00:06:42,720 --> 00:06:47,919
that was completely removed

00:06:44,880 --> 00:06:50,080
from technology and that would actually

00:06:47,919 --> 00:06:51,680
help us to find the technology solution

00:06:50,080 --> 00:06:53,919
that we want

00:06:51,680 --> 00:06:54,800
our goal was the following we wanted to

00:06:53,919 --> 00:06:57,440
be able to

00:06:54,800 --> 00:06:58,560
regularly release our products across

00:06:57,440 --> 00:07:00,240
all brands

00:06:58,560 --> 00:07:02,400
all platforms in all regions

00:07:00,240 --> 00:07:04,319
simultaneously with the same feature

00:07:02,400 --> 00:07:06,160
capabilities

00:07:04,319 --> 00:07:07,680
there's a lot of information in just

00:07:06,160 --> 00:07:10,160
this one sentence

00:07:07,680 --> 00:07:11,120
and i highlighted the special parts for

00:07:10,160 --> 00:07:13,680
you

00:07:11,120 --> 00:07:15,360
by regularly released i we tried to

00:07:13,680 --> 00:07:18,000
avoid that idea that we would release

00:07:15,360 --> 00:07:20,479
ios first and then android and we also

00:07:18,000 --> 00:07:23,280
we wanted to remove the idea

00:07:20,479 --> 00:07:25,360
that our releases would be quarterly if

00:07:23,280 --> 00:07:27,759
we can release every two weeks

00:07:25,360 --> 00:07:28,880
even better if we could release actually

00:07:27,759 --> 00:07:30,639
every hour

00:07:28,880 --> 00:07:32,639
even better right and that's something

00:07:30,639 --> 00:07:35,120
that happens in the web world

00:07:32,639 --> 00:07:36,880
where we see companies like amazon

00:07:35,120 --> 00:07:38,800
netflix google

00:07:36,880 --> 00:07:40,240
making updates to their websites pretty

00:07:38,800 --> 00:07:41,759
much with every commit

00:07:40,240 --> 00:07:43,520
but on the mobile world that's a little

00:07:41,759 --> 00:07:46,720
bit different but still

00:07:43,520 --> 00:07:49,120
we didn't want to wait we wanted to

00:07:46,720 --> 00:07:52,160
release for all brands

00:07:49,120 --> 00:07:55,520
for bmw as a group there are a few

00:07:52,160 --> 00:07:58,560
actually brands under the bmw group

00:07:55,520 --> 00:07:59,520
we have bmw we have mini we have

00:07:58,560 --> 00:08:01,120
rolls-royce

00:07:59,520 --> 00:08:02,639
but also there are some collaborations

00:08:01,120 --> 00:08:04,560
between companies sometimes like for

00:08:02,639 --> 00:08:07,520
example the toyota supra

00:08:04,560 --> 00:08:09,039
has the same body as the bmw c4

00:08:07,520 --> 00:08:10,800
therefore there's a lot of technology

00:08:09,039 --> 00:08:12,960
components that we could reuse

00:08:10,800 --> 00:08:15,759
and one of those components was actually

00:08:12,960 --> 00:08:17,919
the mobile apps

00:08:15,759 --> 00:08:20,240
when we highlight our platforms that is

00:08:17,919 --> 00:08:23,440
very clear we want to trade

00:08:20,240 --> 00:08:26,960
ios android even web and desktop we

00:08:23,440 --> 00:08:28,479
had support for it as the same as

00:08:26,960 --> 00:08:30,319
equals right we don't want to have one

00:08:28,479 --> 00:08:32,320
ahead of the other

00:08:30,319 --> 00:08:34,240
when we talk about regions you can

00:08:32,320 --> 00:08:36,159
expect that the product in north america

00:08:34,240 --> 00:08:38,320
might be different than the product

00:08:36,159 --> 00:08:40,080
in europe and the product in china or

00:08:38,320 --> 00:08:42,479
japan right because of

00:08:40,080 --> 00:08:44,959
map providers and partnerships but still

00:08:42,479 --> 00:08:47,680
we wanted to have a technology solution

00:08:44,959 --> 00:08:48,000
that would allow us to kind of like just

00:08:47,680 --> 00:08:50,800
have

00:08:48,000 --> 00:08:52,080
those particular dependencies well

00:08:50,800 --> 00:08:54,080
isolated right

00:08:52,080 --> 00:08:55,519
but for those that are the same that are

00:08:54,080 --> 00:08:58,560
core features

00:08:55,519 --> 00:09:02,160
be able to have them in the code base

00:08:58,560 --> 00:09:05,680
so what could we do better at that time

00:09:02,160 --> 00:09:06,480
well we knew that while one team the ios

00:09:05,680 --> 00:09:09,440
team or the other

00:09:06,480 --> 00:09:10,080
ios product had access to the apis the

00:09:09,440 --> 00:09:12,240
android

00:09:10,080 --> 00:09:14,320
project didn't have access to the apis

00:09:12,240 --> 00:09:15,279
so what we wanted to challenge with this

00:09:14,320 --> 00:09:18,320
is like

00:09:15,279 --> 00:09:19,040
we all have access to the api so we want

00:09:18,320 --> 00:09:21,279
to make them

00:09:19,040 --> 00:09:22,399
robust and predictable so our

00:09:21,279 --> 00:09:26,080
development process

00:09:22,399 --> 00:09:28,959
is really streamlined also we wanted to

00:09:26,080 --> 00:09:30,399
never say no to designers and this is

00:09:28,959 --> 00:09:31,360
very important because sometimes when

00:09:30,399 --> 00:09:33,760
you're working on

00:09:31,360 --> 00:09:35,120
android or ios they might propose

00:09:33,760 --> 00:09:36,880
something that you're like

00:09:35,120 --> 00:09:39,360
i'm on a tank crunch i'm not gonna be

00:09:36,880 --> 00:09:41,600
able to do that super cool animation

00:09:39,360 --> 00:09:43,600
or things like that right we wanted to

00:09:41,600 --> 00:09:46,000
find a technology solution

00:09:43,600 --> 00:09:48,160
that would allow us to push our pixels

00:09:46,000 --> 00:09:50,160
to the limit

00:09:48,160 --> 00:09:51,680
we wanted to be full stack and really

00:09:50,160 --> 00:09:54,160
open to collaboration

00:09:51,680 --> 00:09:55,040
no more silos no more ios versus android

00:09:54,160 --> 00:09:57,360
no more like

00:09:55,040 --> 00:09:59,279
web versus mobile we are a team and

00:09:57,360 --> 00:10:01,600
we're in this together and the product

00:09:59,279 --> 00:10:03,200
we all support it right and by being

00:10:01,600 --> 00:10:05,680
full stack even though we had

00:10:03,200 --> 00:10:06,640
areas of expertise we could collaborate

00:10:05,680 --> 00:10:08,800
we could jump in

00:10:06,640 --> 00:10:09,920
committing different code bases to

00:10:08,800 --> 00:10:14,079
support the development

00:10:09,920 --> 00:10:15,440
of our product ultimately also

00:10:14,079 --> 00:10:17,440
what we wanted to do is to better

00:10:15,440 --> 00:10:20,880
understand the goals

00:10:17,440 --> 00:10:20,880
of our business unit right

00:10:20,959 --> 00:10:24,399
we realized after talking with our

00:10:23,120 --> 00:10:26,959
stakeholders

00:10:24,399 --> 00:10:28,720
that in their mind they didn't really

00:10:26,959 --> 00:10:29,760
understand that ios and android were

00:10:28,720 --> 00:10:32,160
different

00:10:29,760 --> 00:10:34,480
products in their mind they were always

00:10:32,160 --> 00:10:36,399
talking especially at very high levels

00:10:34,480 --> 00:10:38,720
about the mobile products but then down

00:10:36,399 --> 00:10:40,320
the line down the assembly line

00:10:38,720 --> 00:10:41,920
we had to make compromises and that

00:10:40,320 --> 00:10:44,399
compromise always affected

00:10:41,920 --> 00:10:46,160
android but in an ideal world our

00:10:44,399 --> 00:10:47,760
stakeholders didn't want to compromise

00:10:46,160 --> 00:10:50,800
therefore from the technology point of

00:10:47,760 --> 00:10:52,959
view we didn't compromise either

00:10:50,800 --> 00:10:54,160
and finally we wanted to reduce our time

00:10:52,959 --> 00:10:56,959
to market

00:10:54,160 --> 00:10:58,560
i was talking about quarterly releases

00:10:56,959 --> 00:10:59,519
usually that actually gets delays

00:10:58,560 --> 00:11:01,680
because there's

00:10:59,519 --> 00:11:02,720
a lot of things to test there's a lot of

00:11:01,680 --> 00:11:04,399
things to

00:11:02,720 --> 00:11:05,920
include in the release and when we're

00:11:04,399 --> 00:11:08,160
talking about quarterly

00:11:05,920 --> 00:11:09,440
there's always a problem there's a delay

00:11:08,160 --> 00:11:12,560
but when we're talking about

00:11:09,440 --> 00:11:14,160
scheduled two-week cycle releases if you

00:11:12,560 --> 00:11:15,760
didn't make it to one release you can

00:11:14,160 --> 00:11:17,440
wait just a couple weeks for the next

00:11:15,760 --> 00:11:18,959
one

00:11:17,440 --> 00:11:20,720
and finally we wanted to improve our

00:11:18,959 --> 00:11:21,680
developer experience we didn't want to

00:11:20,720 --> 00:11:23,920
talk anymore about

00:11:21,680 --> 00:11:24,880
ios versus android and feeling like

00:11:23,920 --> 00:11:26,480
we're fighting

00:11:24,880 --> 00:11:28,640
we want to be part of the same team we

00:11:26,480 --> 00:11:31,360
want to discuss all our problems

00:11:28,640 --> 00:11:34,560
together and find a common solution that

00:11:31,360 --> 00:11:35,600
tries to make almost everyone happy so

00:11:34,560 --> 00:11:38,320
those are the news

00:11:35,600 --> 00:11:39,600
the things that we knew we could do

00:11:38,320 --> 00:11:42,800
better

00:11:39,600 --> 00:11:44,480
so our mantra at that point was to

00:11:42,800 --> 00:11:47,279
create a platform that was developer

00:11:44,480 --> 00:11:49,279
friendly scalable and performant

00:11:47,279 --> 00:11:51,040
that provided safe experimentation and

00:11:49,279 --> 00:11:53,360
continuous deployment

00:11:51,040 --> 00:11:55,279
so if we combine the ambitious goal from

00:11:53,360 --> 00:11:58,079
before with this mantra

00:11:55,279 --> 00:11:58,720
that gives us a good framework a good

00:11:58,079 --> 00:12:01,680
box

00:11:58,720 --> 00:12:03,519
to keep our research going we need to

00:12:01,680 --> 00:12:06,880
find a technology solution

00:12:03,519 --> 00:12:10,160
that checks all these boxes so

00:12:06,880 --> 00:12:12,320
we did a very extensive research

00:12:10,160 --> 00:12:13,440
we tried many many frameworks like

00:12:12,320 --> 00:12:16,240
xiamen

00:12:13,440 --> 00:12:16,959
react native even just progressive web

00:12:16,240 --> 00:12:19,200
apps

00:12:16,959 --> 00:12:21,440
we even tried like cross architecture

00:12:19,200 --> 00:12:24,079
solutions like uber rips

00:12:21,440 --> 00:12:25,360
and at that point even though we

00:12:24,079 --> 00:12:28,720
struggled a little bit

00:12:25,360 --> 00:12:31,040
our conclusion was very very clear

00:12:28,720 --> 00:12:32,800
flutter was the framework that checked

00:12:31,040 --> 00:12:36,399
all those boxes

00:12:32,800 --> 00:12:38,240
we're talking in this case about 2018

00:12:36,399 --> 00:12:39,839
two years from now actually two years

00:12:38,240 --> 00:12:43,279
and a half beginning of

00:12:39,839 --> 00:12:45,519
2018. at that point flutter was

00:12:43,279 --> 00:12:46,880
in the beta version actually i think it

00:12:45,519 --> 00:12:48,959
was alpha when we

00:12:46,880 --> 00:12:50,079
started working with flattr and there

00:12:48,959 --> 00:12:52,160
were a lot of things that they were

00:12:50,079 --> 00:12:52,880
still not supported yet like google maps

00:12:52,160 --> 00:12:54,320
for example

00:12:52,880 --> 00:12:56,399
something that you might think like well

00:12:54,320 --> 00:12:59,279
that's very needed for a

00:12:56,399 --> 00:13:00,399
car company right but after talking with

00:12:59,279 --> 00:13:02,560
the flatter team

00:13:00,399 --> 00:13:03,440
and like realizing that everything that

00:13:02,560 --> 00:13:05,120
they do is

00:13:03,440 --> 00:13:06,800
open source that they had access to

00:13:05,120 --> 00:13:08,959
platform channels we were like

00:13:06,800 --> 00:13:10,160
well even if there are things that

00:13:08,959 --> 00:13:12,720
they're not available

00:13:10,160 --> 00:13:14,399
right now either we can open source them

00:13:12,720 --> 00:13:14,880
or work with the community to get it

00:13:14,399 --> 00:13:17,920
done

00:13:14,880 --> 00:13:20,959
so you might be wondering yeah

00:13:17,920 --> 00:13:23,120
why flatter what is actually flatter

00:13:20,959 --> 00:13:25,360
well flatter is a ui toolkit first of

00:13:23,120 --> 00:13:28,399
all like it's going to allow you to

00:13:25,360 --> 00:13:29,279
paint pieces on the screen and it does

00:13:28,399 --> 00:13:31,760
did that

00:13:29,279 --> 00:13:33,440
very very well right and because it's

00:13:31,760 --> 00:13:35,920
all about like painting pixels on the

00:13:33,440 --> 00:13:38,639
screen you can run flatter on mobile

00:13:35,920 --> 00:13:40,240
web desktop or like anywhere where you

00:13:38,639 --> 00:13:41,920
have a screen literally all you need to

00:13:40,240 --> 00:13:43,519
do is adapt the engine

00:13:41,920 --> 00:13:45,600
that engine is actually pretty cool it's

00:13:43,519 --> 00:13:47,600
very efficient it's based on

00:13:45,600 --> 00:13:49,680
the rendering engine that is included in

00:13:47,600 --> 00:13:51,040
google chrome that it's called skia

00:13:49,680 --> 00:13:53,040
they just took all the things that are

00:13:51,040 --> 00:13:55,600
not like web related

00:13:53,040 --> 00:13:56,079
instead like they parse like other

00:13:55,600 --> 00:13:59,120
things

00:13:56,079 --> 00:14:02,160
so let's take a look to how flutter

00:13:59,120 --> 00:14:04,000
works a little bit on the right we have

00:14:02,160 --> 00:14:06,480
a very simple app

00:14:04,000 --> 00:14:07,199
we see that there's a button we tap the

00:14:06,480 --> 00:14:09,760
button

00:14:07,199 --> 00:14:11,519
and there's a counter that increments

00:14:09,760 --> 00:14:12,480
it's not the most exciting application

00:14:11,519 --> 00:14:15,199
in the world

00:14:12,480 --> 00:14:16,320
but all the code that is needed to power

00:14:15,199 --> 00:14:19,199
this application

00:14:16,320 --> 00:14:20,720
is on the left actually this code well

00:14:19,199 --> 00:14:22,639
it's a little bit reduced

00:14:20,720 --> 00:14:23,760
if you run flutter create from your

00:14:22,639 --> 00:14:25,360
command line

00:14:23,760 --> 00:14:27,040
this is what you're gonna get so let's

00:14:25,360 --> 00:14:30,160
take a look to it because

00:14:27,040 --> 00:14:31,839
in just these three amount lines of code

00:14:30,160 --> 00:14:33,360
there's a lot of information useful

00:14:31,839 --> 00:14:35,360
information that is going to

00:14:33,360 --> 00:14:37,199
give you an idea of how easy it is to

00:14:35,360 --> 00:14:38,880
get started with flyer

00:14:37,199 --> 00:14:40,800
so first of all every single flight

00:14:38,880 --> 00:14:41,760
application has main method that's the

00:14:40,800 --> 00:14:43,360
entry point

00:14:41,760 --> 00:14:45,279
and immediately after that you just want

00:14:43,360 --> 00:14:47,600
to run your application

00:14:45,279 --> 00:14:48,560
and in flatter everything is considered

00:14:47,600 --> 00:14:50,880
a widget

00:14:48,560 --> 00:14:51,920
even your application so what do we mean

00:14:50,880 --> 00:14:53,920
by that

00:14:51,920 --> 00:14:55,120
well there's gonna be two types of

00:14:53,920 --> 00:14:56,959
widgets

00:14:55,120 --> 00:14:59,600
those that are considered stateless that

00:14:56,959 --> 00:15:01,279
they don't hold any data that change

00:14:59,600 --> 00:15:02,720
and those that are considered stateful

00:15:01,279 --> 00:15:05,279
widgets and those are

00:15:02,720 --> 00:15:06,399
widgets that hold a piece of data that

00:15:05,279 --> 00:15:09,040
can change

00:15:06,399 --> 00:15:10,560
during the life cycle of the application

00:15:09,040 --> 00:15:12,079
so in this case the home page

00:15:10,560 --> 00:15:13,600
holds our gunner therefore it's going to

00:15:12,079 --> 00:15:14,959
be a stateful widget

00:15:13,600 --> 00:15:17,199
and it's going to have a state

00:15:14,959 --> 00:15:20,639
associated

00:15:17,199 --> 00:15:22,240
so now let's keep let's take a look to

00:15:20,639 --> 00:15:23,120
our logic how do we increment this

00:15:22,240 --> 00:15:25,279
counter

00:15:23,120 --> 00:15:27,600
well we can see that by following the

00:15:25,279 --> 00:15:30,399
material design standards

00:15:27,600 --> 00:15:32,079
on the bottom right of our simulator ios

00:15:30,399 --> 00:15:32,880
simulator actually running material

00:15:32,079 --> 00:15:35,040
design

00:15:32,880 --> 00:15:36,639
we have a flooring action button right

00:15:35,040 --> 00:15:38,160
and that foreign action button has a

00:15:36,639 --> 00:15:40,000
compressed callback

00:15:38,160 --> 00:15:41,680
that is calling a method that we named

00:15:40,000 --> 00:15:43,279
increment counting

00:15:41,680 --> 00:15:44,720
and literally what we do inside that

00:15:43,279 --> 00:15:47,680
increment counter

00:15:44,720 --> 00:15:49,040
is to modify our state and increment the

00:15:47,680 --> 00:15:52,160
value of our counter

00:15:49,040 --> 00:15:53,920
variable that initially is set to zero

00:15:52,160 --> 00:15:55,759
but the more we press that button the

00:15:53,920 --> 00:15:57,839
more it's going to be incremented

00:15:55,759 --> 00:15:59,040
and our corner variable that is of type

00:15:57,839 --> 00:16:01,600
integer

00:15:59,040 --> 00:16:03,279
is actually in this case mutable right

00:16:01,600 --> 00:16:06,000
it's just a variable

00:16:03,279 --> 00:16:06,720
because we need to modify its value and

00:16:06,000 --> 00:16:10,240
then

00:16:06,720 --> 00:16:11,680
we're going to have a text widget right

00:16:10,240 --> 00:16:13,680
that through the use of string

00:16:11,680 --> 00:16:15,759
interpolation with that dollar sign

00:16:13,680 --> 00:16:16,800
we can just render the value of our

00:16:15,759 --> 00:16:19,199
variable

00:16:16,800 --> 00:16:20,560
every time it changes it's as simple as

00:16:19,199 --> 00:16:23,360
that

00:16:20,560 --> 00:16:24,560
that's it and when we saw this we were

00:16:23,360 --> 00:16:27,920
like wow this

00:16:24,560 --> 00:16:30,160
is very very cool so

00:16:27,920 --> 00:16:31,519
if you ask me for a more interesting

00:16:30,160 --> 00:16:33,199
description or like

00:16:31,519 --> 00:16:35,279
definition of why we started using

00:16:33,199 --> 00:16:36,480
flutter i don't want to use my words

00:16:35,279 --> 00:16:38,720
actually i want to use

00:16:36,480 --> 00:16:40,399
the words of a really good friend larry

00:16:38,720 --> 00:16:43,440
mckenzie who is the tech lead

00:16:40,399 --> 00:16:46,560
at ebay voters and he said this

00:16:43,440 --> 00:16:48,560
during our chicago flatter meetup

00:16:46,560 --> 00:16:49,600
literally word by word he said flutter

00:16:48,560 --> 00:16:51,199
was chosen

00:16:49,600 --> 00:16:53,360
not only because we thought it was going

00:16:51,199 --> 00:16:54,399
to meet the needs but because it was a

00:16:53,360 --> 00:16:57,279
risk mitigation

00:16:54,399 --> 00:16:58,160
strategy we were considerably more

00:16:57,279 --> 00:17:00,000
likely

00:16:58,160 --> 00:17:01,680
to be successful and deliver the product

00:17:00,000 --> 00:17:04,720
we were asked to deliver

00:17:01,680 --> 00:17:05,360
by using flutter i didn't say that

00:17:04,720 --> 00:17:07,199
sentence

00:17:05,360 --> 00:17:09,120
and i'm super jealous because that

00:17:07,199 --> 00:17:11,839
exactly describes my sentiment

00:17:09,120 --> 00:17:13,600
when i talk about flutter flutter is not

00:17:11,839 --> 00:17:15,280
like an experimentation for us right

00:17:13,600 --> 00:17:17,039
like especially these big companies like

00:17:15,280 --> 00:17:19,679
ebay motors bmw

00:17:17,039 --> 00:17:20,720
group on google there's a lot of risk

00:17:19,679 --> 00:17:22,480
they have a lot of

00:17:20,720 --> 00:17:24,160
things to lose and sometimes the

00:17:22,480 --> 00:17:25,600
benefits are not that high by

00:17:24,160 --> 00:17:28,000
experimenting

00:17:25,600 --> 00:17:29,039
so as part of their research they

00:17:28,000 --> 00:17:32,160
realized that

00:17:29,039 --> 00:17:32,880
this was not experimentation this was a

00:17:32,160 --> 00:17:35,760
success

00:17:32,880 --> 00:17:36,720
path right and i share that sentiment

00:17:35,760 --> 00:17:38,799
that much that

00:17:36,720 --> 00:17:40,000
actually our products that are being

00:17:38,799 --> 00:17:42,160
developed with flutter

00:17:40,000 --> 00:17:44,160
they're really successful uh at least

00:17:42,160 --> 00:17:46,559
from the engineering point of view right

00:17:44,160 --> 00:17:47,200
but also like i have decided to focus my

00:17:46,559 --> 00:17:50,960
career

00:17:47,200 --> 00:17:53,919
and just developing with flutter so

00:17:50,960 --> 00:17:54,720
let's go beyond that what does flutter

00:17:53,919 --> 00:17:58,720
have to offer

00:17:54,720 --> 00:18:01,679
what makes it special well first of all

00:17:58,720 --> 00:18:04,080
fast development uh one of the things

00:18:01,679 --> 00:18:06,320
that is really nice about flutter

00:18:04,080 --> 00:18:08,080
is that it offers a functionality called

00:18:06,320 --> 00:18:10,720
hot reload that allows you to

00:18:08,080 --> 00:18:12,400
modify your code just save the file and

00:18:10,720 --> 00:18:15,200
see the changes immediately

00:18:12,400 --> 00:18:16,400
so if you're coming from ios or android

00:18:15,200 --> 00:18:18,080
that means that we're kind of like

00:18:16,400 --> 00:18:18,880
skipping the compilation step we don't

00:18:18,080 --> 00:18:20,799
have to build

00:18:18,880 --> 00:18:22,080
this anymore actually if you're coming

00:18:20,799 --> 00:18:23,840
from the android world

00:18:22,080 --> 00:18:26,320
this is kind of like what instant run

00:18:23,840 --> 00:18:29,280
promise but like actually it works

00:18:26,320 --> 00:18:31,280
i've worked with really big code bases

00:18:29,280 --> 00:18:33,760
right like we're talking about like

00:18:31,280 --> 00:18:35,679
like a couple hundred modules like

00:18:33,760 --> 00:18:37,760
probably millions of lines and

00:18:35,679 --> 00:18:40,160
i've never seen anything that made hot

00:18:37,760 --> 00:18:43,679
reload slower

00:18:40,160 --> 00:18:44,000
what else well it's very very easy to

00:18:43,679 --> 00:18:46,640
write

00:18:44,000 --> 00:18:48,559
expressive and beautiful uis right we

00:18:46,640 --> 00:18:51,280
saw that just with a little bit of code

00:18:48,559 --> 00:18:51,679
on our widget example you can build like

00:18:51,280 --> 00:18:53,919
a

00:18:51,679 --> 00:18:56,080
counter application getting to this

00:18:53,919 --> 00:18:56,960
level of animations and transitions and

00:18:56,080 --> 00:18:58,480
all the stuff

00:18:56,960 --> 00:19:00,400
isn't that hard and actually the

00:18:58,480 --> 00:19:02,640
documentation about flutter

00:19:00,400 --> 00:19:04,400
is incredibly powerful incredibly

00:19:02,640 --> 00:19:07,679
complete and detailed

00:19:04,400 --> 00:19:08,960
and finally flutter office offers native

00:19:07,679 --> 00:19:10,720
performance

00:19:08,960 --> 00:19:12,080
when we talk about native we have to

00:19:10,720 --> 00:19:14,400
understand that

00:19:12,080 --> 00:19:15,760
on android we have java right or like at

00:19:14,400 --> 00:19:18,640
least the jvm

00:19:15,760 --> 00:19:19,760
on ios like we run swift or objective c

00:19:18,640 --> 00:19:22,400
and like we have

00:19:19,760 --> 00:19:22,799
the x code like build steps right but

00:19:22,400 --> 00:19:25,200
dart

00:19:22,799 --> 00:19:26,400
the language that powers flutter you can

00:19:25,200 --> 00:19:28,320
compile it to

00:19:26,400 --> 00:19:29,520
native binaries right like if you think

00:19:28,320 --> 00:19:32,559
about like

00:19:29,520 --> 00:19:33,679
c binaries like that you build with make

00:19:32,559 --> 00:19:35,840
and things like that

00:19:33,679 --> 00:19:37,600
you're gonna get the same with that so

00:19:35,840 --> 00:19:39,520
that allows you to get like 60 frames

00:19:37,600 --> 00:19:40,799
per second

00:19:39,520 --> 00:19:42,799
in such a way that when it comes to

00:19:40,799 --> 00:19:44,480
animations it's so smooth that you won't

00:19:42,799 --> 00:19:46,240
tell the difference between

00:19:44,480 --> 00:19:48,480
a native application and a flare

00:19:46,240 --> 00:19:50,640
application we actually did this

00:19:48,480 --> 00:19:53,360
experiment we asked

00:19:50,640 --> 00:19:54,480
during a user study group we asked a lot

00:19:53,360 --> 00:19:55,840
of people

00:19:54,480 --> 00:19:57,679
hey we're going to give you two

00:19:55,840 --> 00:19:58,960
applications one that is native one that

00:19:57,679 --> 00:20:00,400
is written with flatter

00:19:58,960 --> 00:20:02,240
which one do you think is the most

00:20:00,400 --> 00:20:03,919
performant one which one do you think

00:20:02,240 --> 00:20:05,679
it's the real native app

00:20:03,919 --> 00:20:07,679
and sixty percent of the people that

00:20:05,679 --> 00:20:09,679
participated in that questionnaire

00:20:07,679 --> 00:20:12,400
said that the flatter application felt

00:20:09,679 --> 00:20:15,200
like the native real application so

00:20:12,400 --> 00:20:18,000
that just gives you an idea of how the

00:20:15,200 --> 00:20:21,600
development process goes

00:20:18,000 --> 00:20:23,760
so back in 2018 when we tried flutter

00:20:21,600 --> 00:20:25,679
hot reload allow us to go incredibly

00:20:23,760 --> 00:20:28,480
fast it shortened our

00:20:25,679 --> 00:20:29,360
feedback loops right like our feedback

00:20:28,480 --> 00:20:33,120
times from

00:20:29,360 --> 00:20:35,760
our coding to market with the expressive

00:20:33,120 --> 00:20:38,080
uis and highly compostable widgets

00:20:35,760 --> 00:20:39,520
we were able to describe our application

00:20:38,080 --> 00:20:41,360
as a widget tree

00:20:39,520 --> 00:20:43,679
and that is very powerful but on the

00:20:41,360 --> 00:20:45,440
other hand that means that we can just

00:20:43,679 --> 00:20:46,400
sit with a designer and start building

00:20:45,440 --> 00:20:48,400
our ui

00:20:46,400 --> 00:20:49,679
as opposed to in android or ios where

00:20:48,400 --> 00:20:52,240
you have to go to your

00:20:49,679 --> 00:20:54,080
xml files or your storyboards build

00:20:52,240 --> 00:20:55,200
those twice then make the connections

00:20:54,080 --> 00:20:57,440
and all that stuff

00:20:55,200 --> 00:20:59,360
in flutter that is much more like it's

00:20:57,440 --> 00:21:02,640
much easier

00:20:59,360 --> 00:21:04,559
with 60 frames per second like the user

00:21:02,640 --> 00:21:06,080
experience your real users

00:21:04,559 --> 00:21:07,919
kind of tell the difference and that's

00:21:06,080 --> 00:21:09,600
great right like you just have to focus

00:21:07,919 --> 00:21:10,640
on adding value to your project not

00:21:09,600 --> 00:21:12,400
worrying about

00:21:10,640 --> 00:21:13,679
will be able to tell if this is not

00:21:12,400 --> 00:21:15,520
native or not like

00:21:13,679 --> 00:21:17,840
will the experience like a performance

00:21:15,520 --> 00:21:19,600
penalty or something like that

00:21:17,840 --> 00:21:21,440
and finally something that is really

00:21:19,600 --> 00:21:24,400
really really important

00:21:21,440 --> 00:21:25,760
for like teams that are like of a decent

00:21:24,400 --> 00:21:27,360
scale that are like just more than a

00:21:25,760 --> 00:21:29,120
couple developers

00:21:27,360 --> 00:21:31,120
is that it comes with incredibly

00:21:29,120 --> 00:21:33,440
incredible tooling out of the box

00:21:31,120 --> 00:21:35,600
especially around testing right i was

00:21:33,440 --> 00:21:38,720
mentioning before that for android

00:21:35,600 --> 00:21:40,640
we had to skip using espresso or raw

00:21:38,720 --> 00:21:44,000
electric and we were just focusing on

00:21:40,640 --> 00:21:45,919
the unit however for flatter

00:21:44,000 --> 00:21:47,200
there's like unit test widget test and

00:21:45,919 --> 00:21:49,280
integration tests

00:21:47,200 --> 00:21:51,039
included in the framework and they

00:21:49,280 --> 00:21:52,960
almost have the same syntax

00:21:51,039 --> 00:21:55,840
and especially for widget tests and unit

00:21:52,960 --> 00:21:59,360
tests like they run incredibly fast

00:21:55,840 --> 00:22:01,840
and this is key this allowed us to

00:21:59,360 --> 00:22:03,840
uh pretty much introduce our product

00:22:01,840 --> 00:22:05,600
internally when it comes to engineering

00:22:03,840 --> 00:22:07,919
to not just like a few members of the

00:22:05,600 --> 00:22:09,679
team but like to hundreds of engineers

00:22:07,919 --> 00:22:11,120
uh all around the world right like that

00:22:09,679 --> 00:22:12,559
was very very important but also when

00:22:11,120 --> 00:22:15,760
we're talking about like

00:22:12,559 --> 00:22:16,240
linkedin formatting um automation things

00:22:15,760 --> 00:22:18,320
like that

00:22:16,240 --> 00:22:20,640
right it's all included within the

00:22:18,320 --> 00:22:22,159
framework i literally don't miss

00:22:20,640 --> 00:22:24,159
anything that i couldn't do when i was

00:22:22,159 --> 00:22:26,240
doing native if any have

00:22:24,159 --> 00:22:28,400
more tools available now that i'm using

00:22:26,240 --> 00:22:30,400
flatter

00:22:28,400 --> 00:22:32,240
and well like a lot of the requirements

00:22:30,400 --> 00:22:33,840
they were not like oh run this on web or

00:22:32,240 --> 00:22:36,720
run this in desktop

00:22:33,840 --> 00:22:38,320
you could right flatter works on any ui

00:22:36,720 --> 00:22:40,960
environment it's all about painting

00:22:38,320 --> 00:22:43,840
pixels on the screen

00:22:40,960 --> 00:22:45,200
it it's so like an artist like like

00:22:43,840 --> 00:22:46,240
their focus is about like making

00:22:45,200 --> 00:22:48,240
beautiful things that i

00:22:46,240 --> 00:22:49,600
like to say that flower is like picasso

00:22:48,240 --> 00:22:52,880
right like picasso

00:22:49,600 --> 00:22:53,600
was a spanish painter and he did

00:22:52,880 --> 00:22:56,640
literally

00:22:53,600 --> 00:23:00,320
everything he was like doing paintings

00:22:56,640 --> 00:23:01,760
sculptures photography lithography

00:23:00,320 --> 00:23:04,159
so i like to say that flores like

00:23:01,760 --> 00:23:06,400
picasso because you can ask it to paint

00:23:04,159 --> 00:23:09,280
anything anywhere and it will deliver

00:23:06,400 --> 00:23:12,320
outstanding results from screens to

00:23:09,280 --> 00:23:12,880
arrays of leds or whatever you think

00:23:12,320 --> 00:23:15,760
that is

00:23:12,880 --> 00:23:16,320
painting right so what about dart

00:23:15,760 --> 00:23:18,480
because

00:23:16,320 --> 00:23:20,080
we talked or we said that dart is the

00:23:18,480 --> 00:23:22,000
language that powers flatter

00:23:20,080 --> 00:23:23,840
right and like one of the questions

00:23:22,000 --> 00:23:25,679
sometimes is like why don't they use

00:23:23,840 --> 00:23:28,000
swift or kotlin or like any other

00:23:25,679 --> 00:23:30,159
language why don't javascript well

00:23:28,000 --> 00:23:31,280
actually dart is a client optimized

00:23:30,159 --> 00:23:33,760
language for fast

00:23:31,280 --> 00:23:34,400
apps on any platform we were talking

00:23:33,760 --> 00:23:37,679
about

00:23:34,400 --> 00:23:39,280
how driller right and hold reload

00:23:37,679 --> 00:23:41,440
is great because it gives you fast

00:23:39,280 --> 00:23:43,760
feedback so you require a special type

00:23:41,440 --> 00:23:46,159
of compilation for that feature

00:23:43,760 --> 00:23:47,600
but we also said that we can compile

00:23:46,159 --> 00:23:50,320
flatter and dark

00:23:47,600 --> 00:23:52,559
programs to be native right to build

00:23:50,320 --> 00:23:54,640
like native binaries and that requires a

00:23:52,559 --> 00:23:56,480
separate type of compilation steps

00:23:54,640 --> 00:23:58,400
and all that you can do it with dart and

00:23:56,480 --> 00:23:59,840
you don't actually even notice how to

00:23:58,400 --> 00:24:01,919
to do that it's just like run one

00:23:59,840 --> 00:24:03,760
command and that's it

00:24:01,919 --> 00:24:05,279
also it's a language that feels natural

00:24:03,760 --> 00:24:08,320
and familiar like if you've done

00:24:05,279 --> 00:24:10,320
java if you've done javascript or kotlin

00:24:08,320 --> 00:24:13,360
or swift or objective c

00:24:10,320 --> 00:24:16,240
objective c not that much uh but like

00:24:13,360 --> 00:24:18,000
it feels like you're you can just you

00:24:16,240 --> 00:24:19,520
can just stop and start like typing

00:24:18,000 --> 00:24:21,200
on the keyboard and it's going to work

00:24:19,520 --> 00:24:23,600
it's very natural

00:24:21,200 --> 00:24:25,279
right it has actually a very powerful

00:24:23,600 --> 00:24:26,000
feature api and now that in the android

00:24:25,279 --> 00:24:27,360
world

00:24:26,000 --> 00:24:29,360
we're talking about like all code

00:24:27,360 --> 00:24:31,360
routines and all the stuff the feature

00:24:29,360 --> 00:24:34,159
api with async and a weak

00:24:31,360 --> 00:24:35,760
uh keywords for for that is very very

00:24:34,159 --> 00:24:38,320
powerful and simple to understand we're

00:24:35,760 --> 00:24:40,400
going to take a look to that in a second

00:24:38,320 --> 00:24:42,240
and also like it's concurrency model

00:24:40,400 --> 00:24:43,279
based on isolates right like if you're

00:24:42,240 --> 00:24:45,520
coming from

00:24:43,279 --> 00:24:47,279
node development it's pretty much the

00:24:45,520 --> 00:24:48,080
same concept and that makes it very very

00:24:47,279 --> 00:24:50,559
simple

00:24:48,080 --> 00:24:52,159
so simple that making a network request

00:24:50,559 --> 00:24:54,080
looks like this

00:24:52,159 --> 00:24:56,000
as you can see there's no code about

00:24:54,080 --> 00:24:57,679
threads in here we have a feature that

00:24:56,000 --> 00:25:00,240
returns a void we don't care about

00:24:57,679 --> 00:25:01,679
the type in this case that we call fetch

00:25:00,240 --> 00:25:04,240
temperature

00:25:01,679 --> 00:25:05,679
we have access to an http client that

00:25:04,240 --> 00:25:06,880
has a get method

00:25:05,679 --> 00:25:09,279
and we're just going to wait on the

00:25:06,880 --> 00:25:09,840
result of that get call from the network

00:25:09,279 --> 00:25:11,919
right

00:25:09,840 --> 00:25:13,200
and once we have the response we just

00:25:11,919 --> 00:25:15,120
check the status code or

00:25:13,200 --> 00:25:16,880
if there's something that we don't like

00:25:15,120 --> 00:25:19,279
we just throw an exception

00:25:16,880 --> 00:25:20,240
if you've done java you understand this

00:25:19,279 --> 00:25:22,159
code

00:25:20,240 --> 00:25:24,159
but think about this there's no thread

00:25:22,159 --> 00:25:25,760
management in here you don't have to log

00:25:24,159 --> 00:25:26,960
resources or like share memory or

00:25:25,760 --> 00:25:29,360
anything like that

00:25:26,960 --> 00:25:32,799
with async and weight you get the job

00:25:29,360 --> 00:25:34,480
done without blocking your ui thread

00:25:32,799 --> 00:25:36,559
there's another topic that i think it

00:25:34,480 --> 00:25:38,559
was very important for us when we jump

00:25:36,559 --> 00:25:41,360
on the flutter background

00:25:38,559 --> 00:25:42,320
it's that the flatter community is truly

00:25:41,360 --> 00:25:45,600
amazing

00:25:42,320 --> 00:25:49,039
it's vibrant and welcoming it's

00:25:45,600 --> 00:25:51,760
collaborative uh like you make

00:25:49,039 --> 00:25:52,880
friends all around the world actually

00:25:51,760 --> 00:25:55,200
have teammates

00:25:52,880 --> 00:25:56,640
all around the world as part of my job

00:25:55,200 --> 00:25:58,240
right and that's great and that gave me

00:25:56,640 --> 00:26:00,000
a lot of opportunities

00:25:58,240 --> 00:26:02,799
the biggest one is that i started my own

00:26:00,000 --> 00:26:05,039
community when we started doing flutter

00:26:02,799 --> 00:26:06,400
there was no community here in chicago

00:26:05,039 --> 00:26:09,200
so i decided like hey

00:26:06,400 --> 00:26:10,880
i love to be in touch with the community

00:26:09,200 --> 00:26:13,200
i was participating in

00:26:10,880 --> 00:26:14,400
uh conferences and meetups for the

00:26:13,200 --> 00:26:16,320
android world

00:26:14,400 --> 00:26:18,480
but there's nothing for flatter it's

00:26:16,320 --> 00:26:20,559
time to start one

00:26:18,480 --> 00:26:21,919
but also like it goes beyond the social

00:26:20,559 --> 00:26:23,120
aspect right like if you're a new

00:26:21,919 --> 00:26:25,600
developer trying to

00:26:23,120 --> 00:26:28,559
join or like do something with flutter

00:26:25,600 --> 00:26:32,000
there's amazing tutorials documentation

00:26:28,559 --> 00:26:33,760
youtube channels paid courses like

00:26:32,000 --> 00:26:35,279
believe me this is the best time to

00:26:33,760 --> 00:26:37,120
learn

00:26:35,279 --> 00:26:39,200
but also like if you like that social

00:26:37,120 --> 00:26:41,200
aspect there's amazing conferences

00:26:39,200 --> 00:26:42,720
like this one that is giving boys to a

00:26:41,200 --> 00:26:44,400
flyer don't like mine

00:26:42,720 --> 00:26:47,360
but there's dedicated conferences like

00:26:44,400 --> 00:26:49,039
flutter uh europe flutterkov or like

00:26:47,360 --> 00:26:50,159
participating in some others like thread

00:26:49,039 --> 00:26:52,480
coins

00:26:50,159 --> 00:26:54,880
but also brings with many other benefits

00:26:52,480 --> 00:26:56,240
that they're a little bit more advanced

00:26:54,880 --> 00:26:59,200
for those that are like just going

00:26:56,240 --> 00:27:00,960
beyond the hello world example

00:26:59,200 --> 00:27:03,039
to me the most important thing is like

00:27:00,960 --> 00:27:04,960
the ui the user interface

00:27:03,039 --> 00:27:06,240
is described as a tree in this case as a

00:27:04,960 --> 00:27:09,440
widget tree

00:27:06,240 --> 00:27:12,080
that idea of the tree is very powerful

00:27:09,440 --> 00:27:15,120
because you can compose your tiny screen

00:27:12,080 --> 00:27:17,679
as a composition of widgets right

00:27:15,120 --> 00:27:19,679
and that represents a tiny tree but also

00:27:17,679 --> 00:27:22,000
your entire application as a feature set

00:27:19,679 --> 00:27:23,919
can be represented as a tree

00:27:22,000 --> 00:27:25,520
in that one you try to show and

00:27:23,919 --> 00:27:27,279
communicate with product owners

00:27:25,520 --> 00:27:28,880
stakeholders

00:27:27,279 --> 00:27:30,480
that they don't necessarily understand

00:27:28,880 --> 00:27:32,399
what's going on in the code

00:27:30,480 --> 00:27:33,520
with that visual representation they can

00:27:32,399 --> 00:27:36,080
actually understand

00:27:33,520 --> 00:27:37,840
what the application is doing there's

00:27:36,080 --> 00:27:40,080
multiple state management solutions

00:27:37,840 --> 00:27:42,159
right we were showing before how to

00:27:40,080 --> 00:27:44,080
modify the counter with the center state

00:27:42,159 --> 00:27:45,840
callback including the framework

00:27:44,080 --> 00:27:47,440
but there are tons of open source

00:27:45,840 --> 00:27:50,640
packages uh

00:27:47,440 --> 00:27:51,200
whose entire focus is how to modify that

00:27:50,640 --> 00:27:53,360
state

00:27:51,200 --> 00:27:54,240
safely how to modify actually the widget

00:27:53,360 --> 00:27:57,200
tree

00:27:54,240 --> 00:27:57,679
uh we're talking about provider river

00:27:57,200 --> 00:28:00,240
pod

00:27:57,679 --> 00:28:02,240
flutter block redux there's a package

00:28:00,240 --> 00:28:05,600
for for redaction flutter

00:28:02,240 --> 00:28:08,000
movix or whatever you can come up with

00:28:05,600 --> 00:28:09,520
right the three levels of testing

00:28:08,000 --> 00:28:10,880
without like third-party dependencies

00:28:09,520 --> 00:28:13,679
that's amazing

00:28:10,880 --> 00:28:14,960
because you clearly realize that testing

00:28:13,679 --> 00:28:18,159
is not a compromise

00:28:14,960 --> 00:28:21,039
is part of the dna of flutter

00:28:18,159 --> 00:28:22,159
so in 2020 i actually make a change in

00:28:21,039 --> 00:28:24,480
my career

00:28:22,159 --> 00:28:25,440
i no longer work for bmw even though

00:28:24,480 --> 00:28:27,520
that's a big

00:28:25,440 --> 00:28:29,919
an important part of my transition to

00:28:27,520 --> 00:28:31,039
flyer but i joined very good ventures

00:28:29,919 --> 00:28:32,880
and

00:28:31,039 --> 00:28:34,320
we see it on the t-shirt we should we

00:28:32,880 --> 00:28:36,399
see it on the slide so

00:28:34,320 --> 00:28:37,679
what do we do at very good ventures well

00:28:36,399 --> 00:28:41,760
first of all

00:28:37,679 --> 00:28:43,840
we're 100 focused on flatter that's it

00:28:41,760 --> 00:28:45,279
our best in the future is on flutter and

00:28:43,840 --> 00:28:47,679
so far as a business is

00:28:45,279 --> 00:28:49,679
a pretty good story right we were the

00:28:47,679 --> 00:28:52,240
first ones to try flatter

00:28:49,679 --> 00:28:53,039
at a big scale with the hamilton app for

00:28:52,240 --> 00:28:56,960
the musical

00:28:53,039 --> 00:28:57,760
right so even though broadway these days

00:28:56,960 --> 00:29:00,159
is kind of like

00:28:57,760 --> 00:29:00,880
a tricky business thanks to disney plus

00:29:00,159 --> 00:29:03,600
and all the stuff

00:29:00,880 --> 00:29:05,279
the application is super active so if

00:29:03,600 --> 00:29:06,720
you can go to the play store or to the

00:29:05,279 --> 00:29:09,039
app store and give it a try

00:29:06,720 --> 00:29:11,279
if you haven't tried it yet that's a

00:29:09,039 --> 00:29:12,960
good showcase for a flight application

00:29:11,279 --> 00:29:15,679
but not only that like we've been doing

00:29:12,960 --> 00:29:18,559
projects with google the new york times

00:29:15,679 --> 00:29:19,840
betterment policy genius good money

00:29:18,559 --> 00:29:23,039
plenty plenty of

00:29:19,840 --> 00:29:26,159
companies like from all sizes right so

00:29:23,039 --> 00:29:28,640
flutter is is a good framework

00:29:26,159 --> 00:29:31,120
it's here to to stay let me tell you a

00:29:28,640 --> 00:29:33,600
little bit about how do we use flutter

00:29:31,120 --> 00:29:35,120
right um we like when we're talking

00:29:33,600 --> 00:29:37,520
about modularization on

00:29:35,120 --> 00:29:38,960
like android ios and things like that

00:29:37,520 --> 00:29:41,360
that's something that we can actually

00:29:38,960 --> 00:29:43,120
still apply for flutter right like

00:29:41,360 --> 00:29:44,480
good practices that are not tied to a

00:29:43,120 --> 00:29:46,480
framework good practices

00:29:44,480 --> 00:29:48,159
should be like you can apply them

00:29:46,480 --> 00:29:49,679
anywhere right and that's what we do

00:29:48,159 --> 00:29:50,640
with flutter we follow a three tier

00:29:49,679 --> 00:29:53,039
architecture

00:29:50,640 --> 00:29:54,960
where we separate our data acquisition

00:29:53,039 --> 00:29:56,640
from our domain rules from our ui and

00:29:54,960 --> 00:29:59,360
presentation layers right

00:29:56,640 --> 00:30:00,159
so we usually have well modularized

00:29:59,360 --> 00:30:02,960
applications

00:30:00,159 --> 00:30:03,840
in flutter we use flatter blog for state

00:30:02,960 --> 00:30:06,559
management

00:30:03,840 --> 00:30:07,440
felix angelo the author of this library

00:30:06,559 --> 00:30:10,399
he's actually

00:30:07,440 --> 00:30:12,080
a teammate of mine we work together we

00:30:10,399 --> 00:30:14,480
used to work together at bmw

00:30:12,080 --> 00:30:15,279
we transitioned together with very good

00:30:14,480 --> 00:30:17,520
ventures and

00:30:15,279 --> 00:30:19,520
this solution like this estate

00:30:17,520 --> 00:30:22,000
management solution has been

00:30:19,520 --> 00:30:23,120
key to our success uh it's been like

00:30:22,000 --> 00:30:25,840
amazing too

00:30:23,120 --> 00:30:26,559
to be with him in this journey we also

00:30:25,840 --> 00:30:27,919
shoot

00:30:26,559 --> 00:30:30,240
actually we don't shoot like this is

00:30:27,919 --> 00:30:33,120
part of our goals we don't compromise

00:30:30,240 --> 00:30:35,520
we obtain 100 test coverage that's

00:30:33,120 --> 00:30:37,679
non-negotiable for us

00:30:35,520 --> 00:30:39,520
and believe me we're so happy that we

00:30:37,679 --> 00:30:42,159
have this kind of like

00:30:39,520 --> 00:30:43,760
high requirement for us like high esteem

00:30:42,159 --> 00:30:45,520
for us because

00:30:43,760 --> 00:30:48,080
this is what allows us to be successful

00:30:45,520 --> 00:30:50,480
and be confident that we can release

00:30:48,080 --> 00:30:52,000
and ultimately we have a really really

00:30:50,480 --> 00:30:55,039
high and strong focus on

00:30:52,000 --> 00:30:57,679
automation especially when we like as a

00:30:55,039 --> 00:30:59,600
consultant try like you tend to work on

00:30:57,679 --> 00:31:02,159
many many projects multiple projects so

00:30:59,600 --> 00:31:04,240
once i write something once

00:31:02,159 --> 00:31:06,480
i have the mentality that is like how

00:31:04,240 --> 00:31:08,960
can i reduce this in some other projects

00:31:06,480 --> 00:31:10,080
how can i set up like a cicd that saves

00:31:08,960 --> 00:31:11,600
me time

00:31:10,080 --> 00:31:13,120
and that is always something that we

00:31:11,600 --> 00:31:14,559
carry over with us in every single

00:31:13,120 --> 00:31:17,039
project

00:31:14,559 --> 00:31:18,000
so after many years of experience like

00:31:17,039 --> 00:31:19,760
doing software

00:31:18,000 --> 00:31:21,600
in which i've worked with rurian rails

00:31:19,760 --> 00:31:24,000
angular ios

00:31:21,600 --> 00:31:25,679
android literally i've never been more

00:31:24,000 --> 00:31:28,880
happy and i've never felt like

00:31:25,679 --> 00:31:30,559
more like ideas than we fluttered

00:31:28,880 --> 00:31:32,640
maybe the experience has something to do

00:31:30,559 --> 00:31:34,559
with with it but

00:31:32,640 --> 00:31:36,480
it's weird that a technology framework

00:31:34,559 --> 00:31:38,399
brings you a smile to your face and it's

00:31:36,480 --> 00:31:40,000
been already a few years and that smile

00:31:38,399 --> 00:31:41,919
has not disappeared

00:31:40,000 --> 00:31:43,679
it actually keeps getting bigger and

00:31:41,919 --> 00:31:45,840
bigger

00:31:43,679 --> 00:31:48,320
i know that this sounds cheesy but

00:31:45,840 --> 00:31:50,720
flatter has made me a better person

00:31:48,320 --> 00:31:51,679
uh it's such a humbling community right

00:31:50,720 --> 00:31:54,000
that

00:31:51,679 --> 00:31:54,720
you kind of like challenge your previous

00:31:54,000 --> 00:31:57,120
ideas

00:31:54,720 --> 00:31:58,960
and approach things differently and

00:31:57,120 --> 00:32:00,080
there's a focus on like mentoring and

00:31:58,960 --> 00:32:01,919
helping and

00:32:00,080 --> 00:32:03,840
once you feel like you've achieved that

00:32:01,919 --> 00:32:04,559
you also want to share your experience

00:32:03,840 --> 00:32:06,880
and

00:32:04,559 --> 00:32:08,720
i don't know it's just like it's a

00:32:06,880 --> 00:32:10,320
really really good community

00:32:08,720 --> 00:32:12,159
but at the same time because of its

00:32:10,320 --> 00:32:13,440
level of testing right like the way the

00:32:12,159 --> 00:32:15,760
framework is done

00:32:13,440 --> 00:32:16,799
it's implicit but also how powerful it

00:32:15,760 --> 00:32:18,799
is

00:32:16,799 --> 00:32:20,880
has made me a better developer i see

00:32:18,799 --> 00:32:21,519
development differently since i tried

00:32:20,880 --> 00:32:23,519
flutter

00:32:21,519 --> 00:32:25,279
and i apply those principles to every

00:32:23,519 --> 00:32:27,760
single project

00:32:25,279 --> 00:32:28,399
so with that said it has been a pleasure

00:32:27,760 --> 00:32:29,679
uh

00:32:28,399 --> 00:32:31,279
if you want to get in touch

00:32:29,679 --> 00:32:32,559
professionally you can shoot me an email

00:32:31,279 --> 00:32:36,000
to jorge

00:32:32,559 --> 00:32:37,600
at very good adventures or like i'm also

00:32:36,000 --> 00:32:40,399
a google developer expert for for

00:32:37,600 --> 00:32:43,519
flutter surprise

00:32:40,399 --> 00:32:45,440
i actually also have like a lesson like

00:32:43,519 --> 00:32:47,519
a course on caster that i o called

00:32:45,440 --> 00:32:50,240
testing fundamentals of flutter

00:32:47,519 --> 00:32:51,919
it's a collection of uh 27 lessons that

00:32:50,240 --> 00:32:53,840
will take you from like

00:32:51,919 --> 00:32:56,240
you've never written a test to how to

00:32:53,840 --> 00:32:56,960
actually apply animation and github

00:32:56,240 --> 00:32:59,519
actions

00:32:56,960 --> 00:33:01,360
and code magic for all kinds of tests

00:32:59,519 --> 00:33:02,960
right

00:33:01,360 --> 00:33:04,799
i also organized the chicago flutter

00:33:02,960 --> 00:33:08,000
meetup and you can find me

00:33:04,799 --> 00:33:09,120
in twitter uh for jaycocaramus that's it

00:33:08,000 --> 00:33:10,799
this is the end

00:33:09,120 --> 00:33:14,159
happy coding everyone it's been a

00:33:10,799 --> 00:33:16,960
pleasure to share this time with you

00:33:14,159 --> 00:33:18,240
thank you jorge if you have questions

00:33:16,960 --> 00:33:21,840
for jorge please put them

00:33:18,240 --> 00:33:23,600
in q a or in chat that was exciting i

00:33:21,840 --> 00:33:25,679
actually took you up on your

00:33:23,600 --> 00:33:26,960
word and downloaded hamilton app and it

00:33:25,679 --> 00:33:30,000
looks wonderful

00:33:26,960 --> 00:33:32,720
nice uh even if you don't like the app

00:33:30,000 --> 00:33:33,360
let me tell you the musical is amazing

00:33:32,720 --> 00:33:36,840
oh it is

00:33:33,360 --> 00:33:39,600
with it yes disney plus made it

00:33:36,840 --> 00:33:40,960
available on demand yeah so the first

00:33:39,600 --> 00:33:43,039
thing we did once we heard about it we

00:33:40,960 --> 00:33:46,000
watched the musical

00:33:43,039 --> 00:33:46,000
the app is beautiful

00:33:47,919 --> 00:33:53,840
any questions for jorge

00:33:56,640 --> 00:33:59,919
that was fascinating journey that you

00:33:58,240 --> 00:34:02,559
described

00:33:59,919 --> 00:34:05,679
across different platforms so to speak i

00:34:02,559 --> 00:34:08,879
could be talking about this for

00:34:05,679 --> 00:34:11,760
hours literally what was your

00:34:08,879 --> 00:34:13,119
favorite project that you uh worked on

00:34:11,760 --> 00:34:17,599
on flutter

00:34:13,119 --> 00:34:20,639
well the first one like at bmw was

00:34:17,599 --> 00:34:24,079
amazing just because

00:34:20,639 --> 00:34:25,919
we couldn't start small like we had like

00:34:24,079 --> 00:34:27,599
a lot of developers like a lot like i'm

00:34:25,919 --> 00:34:30,960
talking about

00:34:27,599 --> 00:34:31,919
like our teams in teams in chicago right

00:34:30,960 --> 00:34:35,280
teams in germany

00:34:31,919 --> 00:34:37,119
teams in china teams in portugal and

00:34:35,280 --> 00:34:38,800
pretty much we had like a short time to

00:34:37,119 --> 00:34:40,399
build like a tiny core

00:34:38,800 --> 00:34:42,079
and then like help all these other

00:34:40,399 --> 00:34:42,879
developers to bring their features to

00:34:42,079 --> 00:34:45,359
flutter

00:34:42,879 --> 00:34:47,040
so the challenge was how do we learn

00:34:45,359 --> 00:34:48,560
flutter effectively

00:34:47,040 --> 00:34:49,839
and how do we share that knowledge with

00:34:48,560 --> 00:34:50,560
the rest of the teams that they've never

00:34:49,839 --> 00:34:53,280
seen flat

00:34:50,560 --> 00:34:54,320
right uh so that one was really special

00:34:53,280 --> 00:34:56,159
and unique

00:34:54,320 --> 00:34:57,920
right because of the scale and magnitude

00:34:56,159 --> 00:35:00,800
and how

00:34:57,920 --> 00:35:02,079
i don't it was a fun experience but also

00:35:00,800 --> 00:35:04,480
like right now for example

00:35:02,079 --> 00:35:06,640
like if you see the hamilton project

00:35:04,480 --> 00:35:07,359
that has been like ongoing for a couple

00:35:06,640 --> 00:35:09,040
years

00:35:07,359 --> 00:35:11,920
it's fun to go to that code base and

00:35:09,040 --> 00:35:14,880
realize how much planner has evolved

00:35:11,920 --> 00:35:16,480
but like how well the apis were designed

00:35:14,880 --> 00:35:18,000
in such a way that we can just maintain

00:35:16,480 --> 00:35:19,520
that codebase

00:35:18,000 --> 00:35:21,520
even though like when we didn't know

00:35:19,520 --> 00:35:24,720
flutter and that works still

00:35:21,520 --> 00:35:26,079
beautiful and amazingly so and that is a

00:35:24,720 --> 00:35:28,160
for example in my case that i'm a big

00:35:26,079 --> 00:35:30,640
fan of hamilton it's a fun project to

00:35:28,160 --> 00:35:32,560
to do right like i get to see videos

00:35:30,640 --> 00:35:33,839
from like the community singing and

00:35:32,560 --> 00:35:37,200
doing karaoke

00:35:33,839 --> 00:35:39,280
uh quite often but like literally

00:35:37,200 --> 00:35:41,040
there's some other projects like i think

00:35:39,280 --> 00:35:43,839
also like helping

00:35:41,040 --> 00:35:44,640
um i think that every time we work with

00:35:43,839 --> 00:35:46,640
a team that is

00:35:44,640 --> 00:35:48,400
introducing flyer for the first time

00:35:46,640 --> 00:35:49,920
they're always a little bit skeptical at

00:35:48,400 --> 00:35:52,240
the beginning

00:35:49,920 --> 00:35:53,760
because they're like oh yeah another

00:35:52,240 --> 00:35:55,599
cross-platform solution like a lot of

00:35:53,760 --> 00:35:56,320
the times like these solutions come from

00:35:55,599 --> 00:35:58,720
like

00:35:56,320 --> 00:36:00,079
the c levels like ctos or like engineer

00:35:58,720 --> 00:36:02,000
managers right

00:36:00,079 --> 00:36:03,839
but it's fun to see that transition from

00:36:02,000 --> 00:36:05,680
being skeptical to be like

00:36:03,839 --> 00:36:08,240
wow this is amazing we're so glad that

00:36:05,680 --> 00:36:11,520
we tried flatter right so

00:36:08,240 --> 00:36:13,520
it's hard to pick my favorite

00:36:11,520 --> 00:36:14,720
yeah the app looks really native it's it

00:36:13,520 --> 00:36:16,800
looks great

00:36:14,720 --> 00:36:18,320
could you uh share the link to the

00:36:16,800 --> 00:36:20,640
slides

00:36:18,320 --> 00:36:22,880
uh i actually don't have them in a

00:36:20,640 --> 00:36:24,720
speaker deck so i'll publish them

00:36:22,880 --> 00:36:26,400
and share them with you okay and what

00:36:24,720 --> 00:36:28,240
was your favorite learning resource to

00:36:26,400 --> 00:36:31,280
learn flutter

00:36:28,240 --> 00:36:33,599
that's a really good question uh when i

00:36:31,280 --> 00:36:35,760
started learning flutter uh pretty much

00:36:33,599 --> 00:36:39,119
there was only the website

00:36:35,760 --> 00:36:40,400
and and that was it there's a flutter

00:36:39,119 --> 00:36:43,359
community

00:36:40,400 --> 00:36:44,800
medium uh kind of like collection of

00:36:43,359 --> 00:36:48,320
resources

00:36:44,800 --> 00:36:51,040
that is very active actually i have a

00:36:48,320 --> 00:36:52,640
few articles over there that again i can

00:36:51,040 --> 00:36:54,880
spend a few years they might not apply

00:36:52,640 --> 00:36:56,800
anymore but

00:36:54,880 --> 00:36:58,640
but right now like for example on caster

00:36:56,800 --> 00:36:59,440
that i o like i have my course on

00:36:58,640 --> 00:37:01,680
testing

00:36:59,440 --> 00:37:04,240
but another one of my teammates made

00:37:01,680 --> 00:37:05,760
like four hours of flutter videos that

00:37:04,240 --> 00:37:07,359
they're available for free so if you

00:37:05,760 --> 00:37:08,880
like videos

00:37:07,359 --> 00:37:10,720
that's a good resource there's also

00:37:08,880 --> 00:37:12,000
plenty of youtube videos from like

00:37:10,720 --> 00:37:14,560
andrea ritter i think

00:37:12,000 --> 00:37:15,599
uh he's a gd as well they're really good

00:37:14,560 --> 00:37:17,760
if you like books

00:37:15,599 --> 00:37:19,359
fluttering action is a really good book

00:37:17,760 --> 00:37:22,400
uh

00:37:19,359 --> 00:37:24,320
or again like if you like projects like

00:37:22,400 --> 00:37:25,520
looking or reading at someone else's

00:37:24,320 --> 00:37:28,079
code

00:37:25,520 --> 00:37:29,520
brian negan of another flyer developer

00:37:28,079 --> 00:37:31,760
has this

00:37:29,520 --> 00:37:33,680
architecture samples repository where he

00:37:31,760 --> 00:37:35,200
creates the same application

00:37:33,680 --> 00:37:37,440
but with different stage management

00:37:35,200 --> 00:37:38,960
solutions so that is actually like a

00:37:37,440 --> 00:37:41,599
very good way to compare different

00:37:38,960 --> 00:37:41,599
solutions

00:37:41,839 --> 00:37:45,280
yeah and we have questions on q a can

00:37:43,680 --> 00:37:46,079
you show the slide with your contact

00:37:45,280 --> 00:37:48,480
info again

00:37:46,079 --> 00:37:51,359
and what do you use for api development

00:37:48,480 --> 00:37:54,480
in flutter absolutely so let me

00:37:51,359 --> 00:37:54,480
share this screen again

00:37:54,720 --> 00:37:57,810
[Music]

00:38:00,640 --> 00:38:04,880
so that's my contact you can find me on

00:38:02,560 --> 00:38:08,000
linkedin as well or anything like that

00:38:04,880 --> 00:38:08,640
for api development so flutter is a ui

00:38:08,000 --> 00:38:10,240
framework

00:38:08,640 --> 00:38:12,079
right so we're talking about api

00:38:10,240 --> 00:38:13,119
development like we're talking about the

00:38:12,079 --> 00:38:15,839
backend

00:38:13,119 --> 00:38:17,440
it depends like i most of the times when

00:38:15,839 --> 00:38:20,240
i work with a customer

00:38:17,440 --> 00:38:21,920
they have a back-end written in go or or

00:38:20,240 --> 00:38:23,280
like that net or whatever

00:38:21,920 --> 00:38:24,640
the reality is doesn't matter what

00:38:23,280 --> 00:38:25,280
you're going to be exchanging is either

00:38:24,640 --> 00:38:27,440
like

00:38:25,280 --> 00:38:28,640
if it's a rest api it's going to be json

00:38:27,440 --> 00:38:31,119
objects and you can

00:38:28,640 --> 00:38:32,000
see realizing these these serialization

00:38:31,119 --> 00:38:34,160
objects

00:38:32,000 --> 00:38:35,280
if it's graphql there's a graphql

00:38:34,160 --> 00:38:38,640
library

00:38:35,280 --> 00:38:40,000
or if it is like firebase like

00:38:38,640 --> 00:38:42,160
cloud firestore or whatever there's

00:38:40,000 --> 00:38:44,320
libraries for that as well or if you're

00:38:42,160 --> 00:38:46,240
working with grpc and protocol buffers

00:38:44,320 --> 00:38:49,280
there's a library for that so

00:38:46,240 --> 00:38:50,880
whatever like data exchange is happening

00:38:49,280 --> 00:38:53,280
you're covered there's always a library

00:38:50,880 --> 00:38:53,280
for that

00:38:56,160 --> 00:38:59,599
and there is a question from tom daggett

00:38:58,160 --> 00:39:00,400
are there any books on flutter that you

00:38:59,599 --> 00:39:01,839
would recommend so

00:39:00,400 --> 00:39:03,440
i guess you answered that already

00:39:01,839 --> 00:39:06,560
flutter in action right

00:39:03,440 --> 00:39:07,599
flattering action uh yeah i personally

00:39:06,560 --> 00:39:10,240
love the man in

00:39:07,599 --> 00:39:10,960
books especially the in action series

00:39:10,240 --> 00:39:13,280
and

00:39:10,960 --> 00:39:14,720
like the author uh he's he's really good

00:39:13,280 --> 00:39:17,040
that's the book that i recommend

00:39:14,720 --> 00:39:18,000
i actually started writing a book on

00:39:17,040 --> 00:39:20,000
dart

00:39:18,000 --> 00:39:21,920
it was supposed to be dark 2 in action

00:39:20,000 --> 00:39:23,599
but that prayer got cancelled but

00:39:21,920 --> 00:39:26,800
but yeah if you're looking for that one

00:39:23,599 --> 00:39:28,720
like it's a good book i know recently

00:39:26,800 --> 00:39:31,200
there has been another book released

00:39:28,720 --> 00:39:33,920
called flutter complete reference

00:39:31,200 --> 00:39:35,760
uh that i've heard really good feedback

00:39:33,920 --> 00:39:38,160
about it but like i haven't had a chance

00:39:35,760 --> 00:39:40,480
to take a look to it

00:39:38,160 --> 00:39:42,160
not a complete reference right you said

00:39:40,480 --> 00:39:44,560
i believe that's the name yeah but i'm

00:39:42,160 --> 00:39:47,040
sure if you google that and you say book

00:39:44,560 --> 00:39:49,040
yeah it will show up one way or another

00:39:47,040 --> 00:39:52,240
yeah i put those two names in chat

00:39:49,040 --> 00:39:53,760
if you see that they incorrect just

00:39:52,240 --> 00:39:55,520
and then there is a question from scott

00:39:53,760 --> 00:39:57,359
ackerman my company has some pretty

00:39:55,520 --> 00:39:58,160
strict security scan requirements for

00:39:57,359 --> 00:40:00,720
apps

00:39:58,160 --> 00:40:02,240
of any static analysis tools that

00:40:00,720 --> 00:40:05,359
support scanning flutter apps

00:40:02,240 --> 00:40:06,160
from a security perspective yes that's a

00:40:05,359 --> 00:40:08,319
great question

00:40:06,160 --> 00:40:09,520
so that was one of the requirements that

00:40:08,319 --> 00:40:13,359
we had at bmw

00:40:09,520 --> 00:40:15,119
as well because like

00:40:13,359 --> 00:40:16,960
part of the feature set was connecting

00:40:15,119 --> 00:40:19,200
your application to your vehicle right

00:40:16,960 --> 00:40:20,000
either via bluetooth or wi-fi or

00:40:19,200 --> 00:40:22,720
whatever

00:40:20,000 --> 00:40:23,599
so that needed to be very secure and the

00:40:22,720 --> 00:40:25,760
thing is like for

00:40:23,599 --> 00:40:26,720
again flatter is about painting pixels

00:40:25,760 --> 00:40:28,240
on the screen

00:40:26,720 --> 00:40:30,400
if you need to do something that

00:40:28,240 --> 00:40:31,040
communicates with a native component

00:40:30,400 --> 00:40:34,560
like

00:40:31,040 --> 00:40:35,760
bluetooth nfc gps and things like that

00:40:34,560 --> 00:40:37,760
what you're going to do is to work on

00:40:35,760 --> 00:40:38,800
platform channels right so that means

00:40:37,760 --> 00:40:40,880
that you're gonna write

00:40:38,800 --> 00:40:42,000
think up if you are familiar with kotlin

00:40:40,880 --> 00:40:43,520
multiplatform

00:40:42,000 --> 00:40:45,680
the concept is similar you're gonna have

00:40:43,520 --> 00:40:48,319
a tiny component on native

00:40:45,680 --> 00:40:49,520
and then an abstract api written in dart

00:40:48,319 --> 00:40:50,720
and there's gonna be a communication

00:40:49,520 --> 00:40:52,319
that exchanges

00:40:50,720 --> 00:40:53,839
that information it's gonna parse and

00:40:52,319 --> 00:40:55,520
depart so

00:40:53,839 --> 00:40:57,040
the security requirements and all the

00:40:55,520 --> 00:40:58,560
stuff that you might have or even like

00:40:57,040 --> 00:40:59,119
on the network side if you need to do

00:40:58,560 --> 00:41:01,200
like

00:40:59,119 --> 00:41:02,560
straight ssl pinning to avoid money in

00:41:01,200 --> 00:41:05,119
the middle and all the stuff

00:41:02,560 --> 00:41:06,400
again you are covered with flatter like

00:41:05,119 --> 00:41:07,680
there's i

00:41:06,400 --> 00:41:09,440
honestly don't think that there's

00:41:07,680 --> 00:41:10,720
anything that you cannot do with flutter

00:41:09,440 --> 00:41:12,960
that you would be able to do

00:41:10,720 --> 00:41:15,200
natively when it comes to like a static

00:41:12,960 --> 00:41:18,240
analysis and linting and all the stuff

00:41:15,200 --> 00:41:20,480
flutter has a tool called dart analyzer

00:41:18,240 --> 00:41:22,400
so that's kind of like your java lint or

00:41:20,480 --> 00:41:24,960
whatever very very powerful

00:41:22,400 --> 00:41:25,440
you could integrate with solar cube uh

00:41:24,960 --> 00:41:29,040
or like

00:41:25,440 --> 00:41:31,040
with other like uh cicd solutions like

00:41:29,040 --> 00:41:33,119
github actions or like circle ci or

00:41:31,040 --> 00:41:34,560
whatever uh your cover as well like

00:41:33,119 --> 00:41:36,079
literally when it comes to linkedin and

00:41:34,560 --> 00:41:38,079
formatting like it's

00:41:36,079 --> 00:41:40,560
it's as powerful as any other tools if

00:41:38,079 --> 00:41:40,560
not more

00:41:41,040 --> 00:41:45,200
thank you uh one more question from tom

00:41:43,680 --> 00:41:46,720
daggett what have you

00:41:45,200 --> 00:41:48,880
what have been your biggest struggles

00:41:46,720 --> 00:41:52,480
with flutter

00:41:48,880 --> 00:41:55,839
that's a good question so my biggest

00:41:52,480 --> 00:41:57,280
struggle actually has been like truly

00:41:55,839 --> 00:41:59,119
understanding the potential of the

00:41:57,280 --> 00:42:01,599
widget tree

00:41:59,119 --> 00:42:02,960
and trying to not to apply what i

00:42:01,599 --> 00:42:04,720
consider like

00:42:02,960 --> 00:42:06,560
oh this is the way i did things in

00:42:04,720 --> 00:42:09,599
android into flutter

00:42:06,560 --> 00:42:12,960
let me tell you why in android

00:42:09,599 --> 00:42:14,800
we have activities fragments views

00:42:12,960 --> 00:42:17,119
even your application file right and

00:42:14,800 --> 00:42:18,000
then you have xml for your views and all

00:42:17,119 --> 00:42:20,079
the stuff

00:42:18,000 --> 00:42:21,520
in ios we have the app delegate that it

00:42:20,079 --> 00:42:24,160
would be like the

00:42:21,520 --> 00:42:25,599
uh application file for for android and

00:42:24,160 --> 00:42:26,640
then we have view controllers that are

00:42:25,599 --> 00:42:28,800
kind of like

00:42:26,640 --> 00:42:30,160
your fragments and activities and views

00:42:28,800 --> 00:42:32,160
right and then the story works for the

00:42:30,160 --> 00:42:35,440
ui

00:42:32,160 --> 00:42:36,480
so and then like for example in android

00:42:35,440 --> 00:42:38,720
it's very common to use

00:42:36,480 --> 00:42:41,359
dagger or coin or something like that

00:42:38,720 --> 00:42:42,880
for uh dependence injection

00:42:41,359 --> 00:42:44,960
however like there's something important

00:42:42,880 --> 00:42:46,880
to understand here

00:42:44,960 --> 00:42:48,400
and it's the fact that these tools

00:42:46,880 --> 00:42:50,000
especially when it comes to dependence

00:42:48,400 --> 00:42:51,839
injection what they're trying to do is a

00:42:50,000 --> 00:42:52,480
dependency graph right and a dependency

00:42:51,839 --> 00:42:54,720
graph

00:42:52,480 --> 00:42:56,560
is a tree like at the end of the day

00:42:54,720 --> 00:43:00,079
it's a tree it's a data structure

00:42:56,560 --> 00:43:02,640
that looks like a tree and we have

00:43:00,079 --> 00:43:05,359
already a tree a widget tree in flutter

00:43:02,640 --> 00:43:06,640
therefore and this is like my thinking i

00:43:05,359 --> 00:43:09,359
think that native

00:43:06,640 --> 00:43:10,960
frameworks would die would kill to have

00:43:09,359 --> 00:43:12,560
the tree structure that we have so when

00:43:10,960 --> 00:43:14,319
we started doing flutter

00:43:12,560 --> 00:43:15,920
we're thinking like oh how can we inject

00:43:14,319 --> 00:43:17,760
this and how can we use

00:43:15,920 --> 00:43:19,599
inject annotations and all the stuff and

00:43:17,760 --> 00:43:21,359
what we realize is that

00:43:19,599 --> 00:43:22,960
we have a tree already we don't have to

00:43:21,359 --> 00:43:23,839
put anything right and that's where we

00:43:22,960 --> 00:43:25,680
start like

00:43:23,839 --> 00:43:26,880
using provider and flatter block and we

00:43:25,680 --> 00:43:28,800
realize that

00:43:26,880 --> 00:43:30,400
the widget 3 is very special we can

00:43:28,800 --> 00:43:33,200
modify it

00:43:30,400 --> 00:43:34,720
as we want we can scope our dependencies

00:43:33,200 --> 00:43:35,680
within the tree without having to

00:43:34,720 --> 00:43:37,520
introduce

00:43:35,680 --> 00:43:38,839
any other tools or anything like that

00:43:37,520 --> 00:43:41,440
right

00:43:38,839 --> 00:43:43,040
actually talking about the widget 3

00:43:41,440 --> 00:43:45,440
there's an upcoming

00:43:43,040 --> 00:43:47,200
conference on november 13th for weekly

00:43:45,440 --> 00:43:48,560
that has it's a it's called the cross

00:43:47,200 --> 00:43:50,560
platform conference

00:43:48,560 --> 00:43:51,599
now i'll be talking precisely about that

00:43:50,560 --> 00:43:53,359
sorry if i'm doing

00:43:51,599 --> 00:43:56,560
publicity for another conference but i

00:43:53,359 --> 00:43:59,040
think it's important to say that

00:43:56,560 --> 00:44:01,040
um it's going to be a little bit like

00:43:59,040 --> 00:44:02,240
deeper into like how to modify and use

00:44:01,040 --> 00:44:03,520
the widget tree

00:44:02,240 --> 00:44:05,280
but i think that that's a very good

00:44:03,520 --> 00:44:07,599
segue into this this question so that

00:44:05,280 --> 00:44:09,680
was what i struggled the most is like

00:44:07,599 --> 00:44:11,200
thinking about the patterns that i

00:44:09,680 --> 00:44:11,599
learned before and realizing that like

00:44:11,200 --> 00:44:14,000
oh

00:44:11,599 --> 00:44:15,280
all that i learned when it comes to like

00:44:14,000 --> 00:44:16,800
injecting and

00:44:15,280 --> 00:44:20,560
things like that and not wrecks like

00:44:16,800 --> 00:44:20,560
with flutter i don't need that anymore

00:44:21,599 --> 00:44:26,800
thank you uh one more question

00:44:25,359 --> 00:44:28,800
is very good ventures hiring for

00:44:26,800 --> 00:44:30,560
engineering

00:44:28,800 --> 00:44:31,839
uh we're always looking for good

00:44:30,560 --> 00:44:33,680
candidates so

00:44:31,839 --> 00:44:35,599
feel free to go to the website there's a

00:44:33,680 --> 00:44:39,280
form at the bottom

00:44:35,599 --> 00:44:40,000
and if you're gonna apply or send us a

00:44:39,280 --> 00:44:42,880
message

00:44:40,000 --> 00:44:44,800
i want you to think about this whatever

00:44:42,880 --> 00:44:47,440
you write whatever you send us

00:44:44,800 --> 00:44:48,720
try to put yourself in my shoes and

00:44:47,440 --> 00:44:50,640
write something that

00:44:48,720 --> 00:44:52,720
captures our attention i've shared a lot

00:44:50,640 --> 00:44:55,359
of information about very good ventures

00:44:52,720 --> 00:44:56,319
about how we use flutter and our values

00:44:55,359 --> 00:44:58,640
so

00:44:56,319 --> 00:45:00,160
there's a few hints in there to make you

00:44:58,640 --> 00:45:01,920
understand what we're looking for but

00:45:00,160 --> 00:45:04,079
but yeah like in the website like if

00:45:01,920 --> 00:45:05,440
you're interested go for it and we're

00:45:04,079 --> 00:45:08,960
always hoping to

00:45:05,440 --> 00:45:08,960
start a conversation with good

00:45:11,800 --> 00:45:14,800

YouTube URL: https://www.youtube.com/watch?v=uTjznt8tFLM


