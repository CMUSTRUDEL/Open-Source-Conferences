Title: Evolution of Xamarin.Forms! - Sam Basu
Publication date: 2020-12-16
Playlist: All Things Open 2020 - Mobile Developer Track
Description: 
	Presented by: Sam Basu, Progress Software
Presented at All Things Open 2020 - Mobile Developer Track

Abstract: Xamarin.Forms has come a long way, enabling developers to build truly native & truly cross-platform apps across various platforms with OSS tools. The latest in Xamarin.Forms showcases increased developer productivity, matured tooling and easy code sharing across platforms. Let’s do a whirlwind tour of the hottest features, like

- Shell & Navigation
- Visual & Design themes
- Hot Reload & Hot Restart
- Android X & iOS 13 support
- Platform support with Tizen, WPF & Mac OS

Also, you may be invested in OSS .NET and Xamarin technology stacks. But there are some pain points in the present reality. Perhaps you crave for cohesiveness, maturity and want to have more confidence in the .NET and Xamarin.Forms ecosystem? Let’s take a look at the future with .NET MAUI – the evolution of Xamarin.Forms. While early days, the promise is exciting. Developers would be able to write more cross-platform code to target a wider selection of platforms, across mobile/desktop/web. Major design patterns include traditional MVVM and also the newer MVU pattern for additional developer flexibility. MAUI also opens the funnel to invite more developers into the ecosystem by offering choices in the UI stack – web technologies are welcome. The tools you know get better, apps aim to be more performant and developer cycles get tighter loops. Let’s explore!
Captions: 
	00:00:05,040 --> 00:00:09,840
welcome folks uh

00:00:06,240 --> 00:00:12,559
let me see you think uh yeah i think uh

00:00:09,840 --> 00:00:13,920
some of you are still pouring in uh in

00:00:12,559 --> 00:00:16,400
the chat room so welcome

00:00:13,920 --> 00:00:17,520
and uh yeah thanks for uh thanks for

00:00:16,400 --> 00:00:19,840
hopping in

00:00:17,520 --> 00:00:20,640
uh thank you elena for for hosting me

00:00:19,840 --> 00:00:22,800
and uh

00:00:20,640 --> 00:00:24,400
speakers throughout the day so uh

00:00:22,800 --> 00:00:27,039
hopefully you're having a great day

00:00:24,400 --> 00:00:29,359
uh it's uh it's been a lot of sessions a

00:00:27,039 --> 00:00:31,439
lot of content over two days so

00:00:29,359 --> 00:00:33,680
we're in the last stretches and uh thank

00:00:31,439 --> 00:00:37,200
you uh for hanging out here with me

00:00:33,680 --> 00:00:38,000
um i got about 45 minutes and um i can

00:00:37,200 --> 00:00:40,719
talk

00:00:38,000 --> 00:00:41,680
about this stuff for a long time so i'm

00:00:40,719 --> 00:00:45,280
going to try to keep it

00:00:41,680 --> 00:00:48,000
brief and maybe try to do

00:00:45,280 --> 00:00:49,120
um do uh show you some demos of where

00:00:48,000 --> 00:00:52,239
things may be heading

00:00:49,120 --> 00:00:54,399
so if you are a doctor developer um

00:00:52,239 --> 00:00:55,520
this may be relevant to you or if you

00:00:54,399 --> 00:00:57,760
never actually touched

00:00:55,520 --> 00:00:59,280
xamarin or if you're just thinking about

00:00:57,760 --> 00:01:02,559
mobile strategies this may

00:00:59,280 --> 00:01:05,840
maybe all be relevant okay so let us

00:01:02,559 --> 00:01:08,560
start and uh like i said feel free to

00:01:05,840 --> 00:01:09,119
chime in with questions in the chat room

00:01:08,560 --> 00:01:11,200
i can

00:01:09,119 --> 00:01:12,799
i'll keep an eye out and i'll try to

00:01:11,200 --> 00:01:15,680
answer them as we go or

00:01:12,799 --> 00:01:16,320
um get to them at the very end so my

00:01:15,680 --> 00:01:20,320
name is

00:01:16,320 --> 00:01:23,280
sam basu that is my social handle across

00:01:20,320 --> 00:01:25,200
twitter skype github you name it so you

00:01:23,280 --> 00:01:26,240
know how to get hold of me i am a dev

00:01:25,200 --> 00:01:29,200
advocate at

00:01:26,240 --> 00:01:31,119
progress software if you are uh in the

00:01:29,200 --> 00:01:33,040
microsoft in the dotnet space you may

00:01:31,119 --> 00:01:36,240
know some of the things we make like

00:01:33,040 --> 00:01:37,119
telerik controls uh and frameworks

00:01:36,240 --> 00:01:39,680
kinder ui

00:01:37,119 --> 00:01:40,880
fiddler we are all about uh developer

00:01:39,680 --> 00:01:43,119
productivity

00:01:40,880 --> 00:01:44,240
uh but let's talk about uh xamarin forms

00:01:43,119 --> 00:01:46,399
today um

00:01:44,240 --> 00:01:47,439
i uh i think initially when we talked

00:01:46,399 --> 00:01:49,600
about the session

00:01:47,439 --> 00:01:51,439
uh it was a few months back and and

00:01:49,600 --> 00:01:52,880
things have been constantly evolving so

00:01:51,439 --> 00:01:54,240
i actually modified

00:01:52,880 --> 00:01:55,920
things a little bit so i can show you a

00:01:54,240 --> 00:01:57,920
glimpse of where

00:01:55,920 --> 00:01:59,040
some things are headed microsoft shares

00:01:57,920 --> 00:02:02,560
a lot more things

00:01:59,040 --> 00:02:04,799
with insiders and partners and mvps so

00:02:02,560 --> 00:02:06,320
a lot more things are cooking which is

00:02:04,799 --> 00:02:09,280
very exciting so

00:02:06,320 --> 00:02:10,160
let us uh let's dive in uh before we

00:02:09,280 --> 00:02:11,680
start though

00:02:10,160 --> 00:02:13,200
i think we all got to acknowledge the

00:02:11,680 --> 00:02:14,800
year that we're living through it's

00:02:13,200 --> 00:02:15,760
particularly difficult for a lot of

00:02:14,800 --> 00:02:18,239
people so

00:02:15,760 --> 00:02:20,160
i hope uh you and yours are being safe

00:02:18,239 --> 00:02:23,520
and and happy and productive

00:02:20,160 --> 00:02:26,959
and doing the best we can we all can and

00:02:23,520 --> 00:02:29,360
since we are all kind of remote and uh

00:02:26,959 --> 00:02:31,360
looking at screens uh i always include a

00:02:29,360 --> 00:02:33,120
map that's where i'm at i'm in erie

00:02:31,360 --> 00:02:35,360
pennsylvania little town

00:02:33,120 --> 00:02:36,640
um up by the five great lakes that we

00:02:35,360 --> 00:02:38,879
have in the u.s

00:02:36,640 --> 00:02:40,239
uh there's a lake called lake erie and

00:02:38,879 --> 00:02:41,680
right next to it there's a town called

00:02:40,239 --> 00:02:44,480
erie pennsylvania

00:02:41,680 --> 00:02:44,959
so it's uh it's good to be home i've

00:02:44,480 --> 00:02:47,120
been a

00:02:44,959 --> 00:02:49,200
home uh remote worker for a long time

00:02:47,120 --> 00:02:51,519
but this feels very different

00:02:49,200 --> 00:02:53,599
because we are not traveling uh at all

00:02:51,519 --> 00:02:55,200
and we are all trying to juggle work

00:02:53,599 --> 00:02:57,200
and and family and childcare and all

00:02:55,200 --> 00:02:59,440
that stuff so yeah please take care

00:02:57,200 --> 00:03:00,239
i so wish and i think everybody does

00:02:59,440 --> 00:03:02,959
that we could

00:03:00,239 --> 00:03:04,319
hang out in person in raleigh uh north

00:03:02,959 --> 00:03:07,280
carolina but again

00:03:04,319 --> 00:03:09,920
hopefully soon next year so we're all

00:03:07,280 --> 00:03:13,280
trying to do the best we can

00:03:09,920 --> 00:03:15,519
okay so before we kind of go into

00:03:13,280 --> 00:03:17,280
xamarin and xamarin forms let's talk

00:03:15,519 --> 00:03:19,760
about mobile let's take a step back

00:03:17,280 --> 00:03:20,640
and this is kind of my like one minute

00:03:19,760 --> 00:03:22,640
skill on

00:03:20,640 --> 00:03:24,400
all the different ways in which you can

00:03:22,640 --> 00:03:24,799
build for mobile it doesn't always need

00:03:24,400 --> 00:03:27,360
to be an

00:03:24,799 --> 00:03:28,720
app uh and it's a lot of choices that we

00:03:27,360 --> 00:03:30,159
have and that's a good thing so let's

00:03:28,720 --> 00:03:33,280
let's gonna go down uh

00:03:30,159 --> 00:03:35,920
through some of these things okay so

00:03:33,280 --> 00:03:36,720
uh if you are trying to build a native

00:03:35,920 --> 00:03:40,319
app

00:03:36,720 --> 00:03:43,360
with uh ios or or android or or

00:03:40,319 --> 00:03:45,120
um windows devices you always can that's

00:03:43,360 --> 00:03:46,959
that's a native app story

00:03:45,120 --> 00:03:49,120
and you're closest to the metal it's

00:03:46,959 --> 00:03:50,560
great but it's difficult it's it's

00:03:49,120 --> 00:03:52,959
pricey because you are having to

00:03:50,560 --> 00:03:54,799
maintain like three different code bases

00:03:52,959 --> 00:03:56,400
towards maintaining a single app right

00:03:54,799 --> 00:03:58,239
so it's difficult for us

00:03:56,400 --> 00:03:59,519
individual developer it's harder for

00:03:58,239 --> 00:04:02,239
enterprises to maintain

00:03:59,519 --> 00:04:04,080
so much as well so really in 2020 we are

00:04:02,239 --> 00:04:04,959
looking for a cross-platform story

00:04:04,080 --> 00:04:07,120
hopefully

00:04:04,959 --> 00:04:08,720
uh again i mean native has a space like

00:04:07,120 --> 00:04:10,080
if you are doing games or other things

00:04:08,720 --> 00:04:12,720
then absolutely go native

00:04:10,080 --> 00:04:14,400
but for everything else you should look

00:04:12,720 --> 00:04:15,280
at the cross platform story quite a bit

00:04:14,400 --> 00:04:18,400
as well

00:04:15,280 --> 00:04:20,239
so in terms of where things land uh

00:04:18,400 --> 00:04:21,519
if you are building web applications

00:04:20,239 --> 00:04:22,720
today um

00:04:21,519 --> 00:04:24,400
then you can stick to the web

00:04:22,720 --> 00:04:26,479
technologies you don't have to do net

00:04:24,400 --> 00:04:28,240
which is what we'll spend time on

00:04:26,479 --> 00:04:30,000
if you are building a website today

00:04:28,240 --> 00:04:30,960
there is no reason it cannot work nicely

00:04:30,000 --> 00:04:32,560
on a mobile device

00:04:30,960 --> 00:04:34,080
there are lots and lots of frameworks

00:04:32,560 --> 00:04:35,840
that help you out uh

00:04:34,080 --> 00:04:37,919
twitter bootstrap angular and all of

00:04:35,840 --> 00:04:39,759
this buffering works uh blazer will talk

00:04:37,919 --> 00:04:41,520
about it can do ui is something we make

00:04:39,759 --> 00:04:43,759
so there's a lot of help and you can

00:04:41,520 --> 00:04:45,759
make progressive web apps as well which

00:04:43,759 --> 00:04:48,720
is taking mobile web to an extreme

00:04:45,759 --> 00:04:51,440
your mobile website can be a very good

00:04:48,720 --> 00:04:53,440
citizen on a mobile form factor

00:04:51,440 --> 00:04:55,040
your users can pin the app to the home

00:04:53,440 --> 00:04:56,320
screen you can have service workers

00:04:55,040 --> 00:04:57,759
running in the background you can do

00:04:56,320 --> 00:05:00,240
push notifications

00:04:57,759 --> 00:05:02,000
it's a great experience but uh you are

00:05:00,240 --> 00:05:03,600
using the web as a distribution medium

00:05:02,000 --> 00:05:04,560
right so that may be a limiting factor

00:05:03,600 --> 00:05:07,440
for some

00:05:04,560 --> 00:05:08,960
uh so if you still want to use web stuff

00:05:07,440 --> 00:05:10,720
and if you want to go to the stores

00:05:08,960 --> 00:05:12,400
then we look at some of the hybrid or

00:05:10,720 --> 00:05:14,000
the js native options

00:05:12,400 --> 00:05:15,520
hybrid is kind of where we started back

00:05:14,000 --> 00:05:18,080
in like 2010 with

00:05:15,520 --> 00:05:19,600
phonegap and apache cordova i think

00:05:18,080 --> 00:05:21,039
apache finally said

00:05:19,600 --> 00:05:23,280
they're going to put that in maintenance

00:05:21,039 --> 00:05:24,000
mode but i mean it is a legit strategy

00:05:23,280 --> 00:05:27,039
for like simple

00:05:24,000 --> 00:05:28,800
apps line of business apps um but where

00:05:27,039 --> 00:05:29,919
hybrid apps get a little dinged on is

00:05:28,800 --> 00:05:31,360
performance because you are running

00:05:29,919 --> 00:05:34,400
inside of a web shell so

00:05:31,360 --> 00:05:36,320
you're not uh you're not native right so

00:05:34,400 --> 00:05:38,400
but you are using web technologies and

00:05:36,320 --> 00:05:39,919
packaging it up putting it in the store

00:05:38,400 --> 00:05:41,840
but why build hybrid when you can

00:05:39,919 --> 00:05:43,600
actually use the same tech and actually

00:05:41,840 --> 00:05:45,440
build native apps and that's where you

00:05:43,600 --> 00:05:47,919
see the javascript native things kind of

00:05:45,440 --> 00:05:50,080
become popular in the last few years

00:05:47,919 --> 00:05:52,000
we make or we used to make and it's open

00:05:50,080 --> 00:05:54,160
source now a framework on native script

00:05:52,000 --> 00:05:55,199
works with react works with view works

00:05:54,160 --> 00:05:57,199
with angular

00:05:55,199 --> 00:05:59,199
uh if you are doing react for your web

00:05:57,199 --> 00:06:01,199
applications consider doing react native

00:05:59,199 --> 00:06:03,120
so you can share code better between

00:06:01,199 --> 00:06:04,800
mobile and web and then we have the

00:06:03,120 --> 00:06:06,240
cross compile story which is where

00:06:04,800 --> 00:06:08,080
xamarin has

00:06:06,240 --> 00:06:09,520
been the prominent player in the last

00:06:08,080 --> 00:06:11,120
several years

00:06:09,520 --> 00:06:13,039
and now we see more things come up we

00:06:11,120 --> 00:06:15,600
just had a talk on flutter i think

00:06:13,039 --> 00:06:17,120
um there's things called things like uno

00:06:15,600 --> 00:06:18,880
platform so lots of open source

00:06:17,120 --> 00:06:20,400
frameworks that kind of let you write

00:06:18,880 --> 00:06:22,639
higher level languages

00:06:20,400 --> 00:06:24,319
that get compiled down until runtime you

00:06:22,639 --> 00:06:26,639
are rendering native ui

00:06:24,319 --> 00:06:28,720
with native performance and uh full

00:06:26,639 --> 00:06:31,600
access to all of the native api stack

00:06:28,720 --> 00:06:33,360
so why not right so these are some of

00:06:31,600 --> 00:06:34,639
the broad general ways in which you can

00:06:33,360 --> 00:06:36,319
build for mobile today

00:06:34,639 --> 00:06:37,919
i'm sure i'm missing things but these

00:06:36,319 --> 00:06:38,560
are the things that appeal the most to

00:06:37,919 --> 00:06:39,919
me

00:06:38,560 --> 00:06:41,919
and it's a good thing that we have so

00:06:39,919 --> 00:06:44,319
much choice right so now

00:06:41,919 --> 00:06:45,199
having said that let's dive into xamarin

00:06:44,319 --> 00:06:47,039
because i think

00:06:45,199 --> 00:06:48,400
if you're in this session maybe you are

00:06:47,039 --> 00:06:49,759
playing around with xamarin maybe you

00:06:48,400 --> 00:06:50,880
have looked at it maybe you have some

00:06:49,759 --> 00:06:53,440
concerns

00:06:50,880 --> 00:06:55,039
let's uh go all in with uh with xamarin

00:06:53,440 --> 00:06:56,319
and xamarin essentially it sits on the

00:06:55,039 --> 00:06:57,919
dotnet stack right the

00:06:56,319 --> 00:06:59,599
document is what we're talking about so

00:06:57,919 --> 00:07:02,479
a couple of uh quick uh

00:06:59,599 --> 00:07:03,440
pointers this is a.net as it uh excuse

00:07:02,479 --> 00:07:05,280
me

00:07:03,440 --> 00:07:06,639
stands today you may have seen these

00:07:05,280 --> 00:07:08,800
slides from microsoft

00:07:06,639 --> 00:07:10,400
uh this purple thing that's the full.net

00:07:08,800 --> 00:07:11,280
framework it's been around for like 17

00:07:10,400 --> 00:07:14,039
years now

00:07:11,280 --> 00:07:15,440
and runs every app that you build with

00:07:14,039 --> 00:07:18,319
dotnet.net core

00:07:15,440 --> 00:07:18,880
is lean cross-platform modular um runs

00:07:18,319 --> 00:07:22,560
everywhere

00:07:18,880 --> 00:07:25,280
it's great and then mono is a port of

00:07:22,560 --> 00:07:25,680
net uh it's about 15 years old as well

00:07:25,280 --> 00:07:27,440
so

00:07:25,680 --> 00:07:29,360
like there was a desire to take.net

00:07:27,440 --> 00:07:30,319
outside of windows and that started way

00:07:29,360 --> 00:07:32,160
early

00:07:30,319 --> 00:07:33,680
with dartmouth as well and xamarin

00:07:32,160 --> 00:07:35,919
actually runs on top

00:07:33,680 --> 00:07:37,919
it sits on top of mono and xamarin was

00:07:35,919 --> 00:07:39,680
actually an acquisition back in 2016

00:07:37,919 --> 00:07:42,639
early 2016

00:07:39,680 --> 00:07:44,000
and what it does is it lets us or lets

00:07:42,639 --> 00:07:46,800
microsoft tell you the story

00:07:44,000 --> 00:07:48,560
that with dotnet you really can reach a

00:07:46,800 --> 00:07:49,520
lot of different platforms like ios

00:07:48,560 --> 00:07:52,879
android

00:07:49,520 --> 00:07:54,639
uh tizen web you name it so uh that's

00:07:52,879 --> 00:07:56,720
where dotnet is today and the tools of

00:07:54,639 --> 00:07:59,520
our trade have come a long way it's not

00:07:56,720 --> 00:08:01,840
the gigantic visual studio on windows as

00:07:59,520 --> 00:08:03,919
the only thing you do have options

00:08:01,840 --> 00:08:05,759
i'll be on vs4 mac today and visual

00:08:03,919 --> 00:08:06,879
studio code is great and watch cross

00:08:05,759 --> 00:08:09,520
platform so

00:08:06,879 --> 00:08:10,960
this is fast evolving and then this is

00:08:09,520 --> 00:08:13,520
going to be the dotnet

00:08:10,960 --> 00:08:15,039
starting probably about three uh three

00:08:13,520 --> 00:08:16,960
weeks four weeks from now

00:08:15,039 --> 00:08:18,160
uh there is a dot net conf that's coming

00:08:16,960 --> 00:08:20,879
up um in

00:08:18,160 --> 00:08:21,759
uh early november where they're going to

00:08:20,879 --> 00:08:23,520
formally launch

00:08:21,759 --> 00:08:24,800
net five and that's essentially a

00:08:23,520 --> 00:08:27,440
unification story so

00:08:24,800 --> 00:08:28,800
microsoft is essentially taking the best

00:08:27,440 --> 00:08:31,280
of mono and best of

00:08:28,800 --> 00:08:32,479
net core putting it all together so as

00:08:31,280 --> 00:08:34,000
developers you don't have to be

00:08:32,479 --> 00:08:34,399
concerned as much about choosing the

00:08:34,000 --> 00:08:36,719
right

00:08:34,399 --> 00:08:38,000
runtime for your apps you just write dot

00:08:36,719 --> 00:08:40,000
net apps and

00:08:38,000 --> 00:08:41,680
things sources work and the tools get

00:08:40,000 --> 00:08:42,080
more and more polished our dev cycles

00:08:41,680 --> 00:08:45,040
get

00:08:42,080 --> 00:08:46,160
uh tighter so uh what's not to like so

00:08:45,040 --> 00:08:49,120
let's talk about xamarin

00:08:46,160 --> 00:08:50,959
real quick um and see where things

00:08:49,120 --> 00:08:53,200
started essentially so before we look

00:08:50,959 --> 00:08:54,560
ahead at where things are going with

00:08:53,200 --> 00:08:56,000
xamarin i think we need to understand

00:08:54,560 --> 00:08:56,720
where we started and where we stand

00:08:56,000 --> 00:08:59,600
today

00:08:56,720 --> 00:09:01,440
so xamarin um started many many years

00:08:59,600 --> 00:09:02,160
back and essentially they they had a

00:09:01,440 --> 00:09:04,560
whole

00:09:02,160 --> 00:09:05,920
history of changing hands and and

00:09:04,560 --> 00:09:08,959
maturing the framework

00:09:05,920 --> 00:09:11,120
and where they are today is uh

00:09:08,959 --> 00:09:12,560
trying to make uh make it super easy for

00:09:11,120 --> 00:09:16,240
net devs to take

00:09:12,560 --> 00:09:16,640
code um and uh take it to ios or android

00:09:16,240 --> 00:09:18,480
or

00:09:16,640 --> 00:09:20,480
all of the platforms and truly native

00:09:18,480 --> 00:09:22,800
apps cross-platform apps so

00:09:20,480 --> 00:09:24,160
it's a great story this is kind of where

00:09:22,800 --> 00:09:26,880
xamarin started

00:09:24,160 --> 00:09:28,240
this is what is called xamarin ios or

00:09:26,880 --> 00:09:30,800
xamarin android

00:09:28,240 --> 00:09:31,519
so the first trick we learned uh how to

00:09:30,800 --> 00:09:33,920
do was

00:09:31,519 --> 00:09:34,640
uh write some shared c-sharp business

00:09:33,920 --> 00:09:37,120
logic so

00:09:34,640 --> 00:09:38,480
just what your app actually does but you

00:09:37,120 --> 00:09:40,959
were still writing

00:09:38,480 --> 00:09:42,560
the platform heads by hand so you need

00:09:40,959 --> 00:09:45,600
to need it to know ios

00:09:42,560 --> 00:09:47,440
storyboards and android java and

00:09:45,600 --> 00:09:48,959
and windows so this was a good step in

00:09:47,440 --> 00:09:50,800
the right direction and then we learned

00:09:48,959 --> 00:09:52,080
how to do xamarin forms which was an

00:09:50,800 --> 00:09:54,320
abstraction so

00:09:52,080 --> 00:09:55,600
now on top of c-sharp you have a shared

00:09:54,320 --> 00:09:58,080
ui layer which

00:09:55,600 --> 00:09:59,839
essentially is written in xaml if you

00:09:58,080 --> 00:10:00,640
wanted to or it can also be written in c

00:09:59,839 --> 00:10:03,600
sharp

00:10:00,640 --> 00:10:04,800
and essentially this is difficult right

00:10:03,600 --> 00:10:05,760
you're talking about three very

00:10:04,800 --> 00:10:07,920
different platforms

00:10:05,760 --> 00:10:09,360
so the abstraction essentially takes uh

00:10:07,920 --> 00:10:12,160
some abstracted ui

00:10:09,360 --> 00:10:12,959
be it a button or a list view or a grid

00:10:12,160 --> 00:10:14,800
or a chart

00:10:12,959 --> 00:10:17,680
and then it renders the corresponding

00:10:14,800 --> 00:10:18,240
native uh ui for ios android and windows

00:10:17,680 --> 00:10:19,600
right

00:10:18,240 --> 00:10:21,200
so there is a little bit of trickery

00:10:19,600 --> 00:10:22,640
there are things called renderers that

00:10:21,200 --> 00:10:23,920
actually do that thing

00:10:22,640 --> 00:10:25,440
but it's good to know that like the

00:10:23,920 --> 00:10:25,920
purple the green and the blue don't

00:10:25,440 --> 00:10:28,959
quite

00:10:25,920 --> 00:10:32,240
go away it's nice that we can

00:10:28,959 --> 00:10:34,160
start out writing xaml and c-sharp but

00:10:32,240 --> 00:10:36,640
if you wanted to you can jump down into

00:10:34,160 --> 00:10:38,720
native land whenever you had

00:10:36,640 --> 00:10:39,839
had a need to okay i'm going to quickly

00:10:38,720 --> 00:10:43,440
read a q

00:10:39,839 --> 00:10:45,440
q a can i use native android uh

00:10:43,440 --> 00:10:47,279
swift development libraries xamarin

00:10:45,440 --> 00:10:48,959
solution yes yes so greg jones was

00:10:47,279 --> 00:10:50,480
asking if you can bring in

00:10:48,959 --> 00:10:52,160
if i'm understanding that question right

00:10:50,480 --> 00:10:53,040
if you can bring in native xamarin

00:10:52,160 --> 00:10:55,040
libraries into

00:10:53,040 --> 00:10:56,480
xamarin uh or native android libraries

00:10:55,040 --> 00:10:58,399
into xamarin yeah

00:10:56,480 --> 00:11:00,160
the answer is absolutely yes so i'll

00:10:58,399 --> 00:11:01,839
actually show you some code in in a bit

00:11:00,160 --> 00:11:03,839
so essentially the way xamarin forms

00:11:01,839 --> 00:11:05,680
works is it gives you a shared library

00:11:03,839 --> 00:11:07,600
that's uh shared essentially between

00:11:05,680 --> 00:11:09,360
platforms and then all

00:11:07,600 --> 00:11:10,880
platforms have their own little folders

00:11:09,360 --> 00:11:12,399
out of which you do the builds

00:11:10,880 --> 00:11:14,160
so what you're going to bring in for

00:11:12,399 --> 00:11:15,920
android will just work for android

00:11:14,160 --> 00:11:17,680
unless you provide a wrapper and then it

00:11:15,920 --> 00:11:18,240
works for other platforms as well so

00:11:17,680 --> 00:11:20,320
yeah

00:11:18,240 --> 00:11:21,760
anything um native libraries that you

00:11:20,320 --> 00:11:25,120
have written for ios or android

00:11:21,760 --> 00:11:28,399
absolutely you can bring them all in

00:11:25,120 --> 00:11:30,480
so uh let's see where things went so

00:11:28,399 --> 00:11:32,640
for some time like people used to wonder

00:11:30,480 --> 00:11:33,920
like should i do xamarin ios or should i

00:11:32,640 --> 00:11:36,000
desire an android

00:11:33,920 --> 00:11:37,519
uh which is essentially the first uh

00:11:36,000 --> 00:11:38,800
abstraction we talked about and this is

00:11:37,519 --> 00:11:40,560
actually evolving into

00:11:38,800 --> 00:11:42,160
net for ios and dot net for android

00:11:40,560 --> 00:11:45,200
going into next year

00:11:42,160 --> 00:11:47,279
um this is still good if you are writing

00:11:45,200 --> 00:11:48,500
very plus platform specific things so

00:11:47,279 --> 00:11:50,160
like if you are

00:11:48,500 --> 00:11:52,160
[Music]

00:11:50,160 --> 00:11:53,920
if your brand is bigger than catering to

00:11:52,160 --> 00:11:55,120
ios or android then you should still do

00:11:53,920 --> 00:11:57,519
this

00:11:55,120 --> 00:11:58,320
you can also embed xamarin forms inside

00:11:57,519 --> 00:12:00,399
of this

00:11:58,320 --> 00:12:02,000
but again if you ask me personally like

00:12:00,399 --> 00:12:03,920
i would almost always start with xamarin

00:12:02,000 --> 00:12:04,720
forms now because again it's a mature

00:12:03,920 --> 00:12:06,320
platform

00:12:04,720 --> 00:12:08,800
but the abstractions have come a long

00:12:06,320 --> 00:12:09,279
long way and nothing is preventing you

00:12:08,800 --> 00:12:11,519
from

00:12:09,279 --> 00:12:12,800
customizing the renderers or going down

00:12:11,519 --> 00:12:14,560
into the native land

00:12:12,800 --> 00:12:16,560
if you need to right if you have

00:12:14,560 --> 00:12:18,480
something ios specific go render it for

00:12:16,560 --> 00:12:20,880
ios nothing is stopping you right so

00:12:18,480 --> 00:12:22,800
i almost always start here and then if i

00:12:20,880 --> 00:12:23,279
see a need for doing platform specific

00:12:22,800 --> 00:12:26,320
things

00:12:23,279 --> 00:12:28,959
i can always do that so um i i you can

00:12:26,320 --> 00:12:31,839
tell i'm bullish about xavier informs

00:12:28,959 --> 00:12:33,440
now our phones uh let me watch my time

00:12:31,839 --> 00:12:35,920
so we got 45 minutes okay

00:12:33,440 --> 00:12:37,760
our phones are loaded with sensors right

00:12:35,920 --> 00:12:38,800
you you want camera access you want geo

00:12:37,760 --> 00:12:40,959
location and

00:12:38,800 --> 00:12:41,920
all of that good stuff so we used to

00:12:40,959 --> 00:12:44,399
have multiple

00:12:41,920 --> 00:12:45,440
things before uh we used to have open

00:12:44,399 --> 00:12:47,120
source components

00:12:45,440 --> 00:12:48,560
that were maintained by microsoft and

00:12:47,120 --> 00:12:51,440
the community

00:12:48,560 --> 00:12:52,959
and you had multiple things packages to

00:12:51,440 --> 00:12:53,920
deal with the same thing essentially so

00:12:52,959 --> 00:12:55,680
microsoft

00:12:53,920 --> 00:12:57,279
and this is uh one of my good friends

00:12:55,680 --> 00:12:59,680
james malta magnus who's a pm

00:12:57,279 --> 00:13:01,360
at microsoft and this is his baby so

00:12:59,680 --> 00:13:03,440
essentially they took everything

00:13:01,360 --> 00:13:04,880
and consolidated that into one nougat

00:13:03,440 --> 00:13:06,480
package which if you're coming to the

00:13:04,880 --> 00:13:08,959
javascript board that's essentially

00:13:06,480 --> 00:13:10,160
npm probably just done a little better

00:13:08,959 --> 00:13:11,680
uh

00:13:10,160 --> 00:13:13,200
so this is xamarin essential it's one

00:13:11,680 --> 00:13:15,120
nougat package when you bring it into

00:13:13,200 --> 00:13:17,279
your app and they are careful to do some

00:13:15,120 --> 00:13:18,639
uh tree shaking so if you're just using

00:13:17,279 --> 00:13:21,680
a camera they don't

00:13:18,639 --> 00:13:22,959
like drop all of the other things other

00:13:21,680 --> 00:13:24,560
apis on your

00:13:22,959 --> 00:13:26,320
and kind of bloat up your app package so

00:13:24,560 --> 00:13:27,600
that they're careful about that and this

00:13:26,320 --> 00:13:28,399
is great and you're writing plain

00:13:27,600 --> 00:13:30,079
c-sharp

00:13:28,399 --> 00:13:31,680
you don't care ios or android or any

00:13:30,079 --> 00:13:33,040
other platform this just gives you that

00:13:31,680 --> 00:13:34,800
abstraction

00:13:33,040 --> 00:13:36,480
and no matter what you're doing you are

00:13:34,800 --> 00:13:38,240
writing a native app i don't think the

00:13:36,480 --> 00:13:40,639
slide is entirely correct here

00:13:38,240 --> 00:13:42,240
for uh ios obviously or you're doing

00:13:40,639 --> 00:13:44,000
ahead of time compilation for

00:13:42,240 --> 00:13:45,600
android uh you don't have to do it

00:13:44,000 --> 00:13:48,399
anymore you can absolutely

00:13:45,600 --> 00:13:50,160
pre-compile down and native apk native

00:13:48,399 --> 00:13:52,480
dot app packages that you're building

00:13:50,160 --> 00:13:54,480
so the framework ximen does not come in

00:13:52,480 --> 00:13:57,120
the way of performance in fact

00:13:54,480 --> 00:13:58,399
i've always liked the way the xamarin

00:13:57,120 --> 00:13:59,920
folks have defined

00:13:58,399 --> 00:14:02,320
what is a native app right that's kind

00:13:59,920 --> 00:14:04,079
of what we are getting to so it's three

00:14:02,320 --> 00:14:04,560
things right does your app have native

00:14:04,079 --> 00:14:06,079
ui

00:14:04,560 --> 00:14:08,720
does it have native performance and

00:14:06,079 --> 00:14:09,519
native api access and i think xamarin

00:14:08,720 --> 00:14:11,680
forms does

00:14:09,519 --> 00:14:13,120
check all of that and i mean as we have

00:14:11,680 --> 00:14:15,760
seen like some of these things

00:14:13,120 --> 00:14:17,519
may be things that are you that there

00:14:15,760 --> 00:14:19,680
are just priorities for you

00:14:17,519 --> 00:14:21,600
uh like flutter for example like if you

00:14:19,680 --> 00:14:21,920
ask me like it's it's not purely native

00:14:21,600 --> 00:14:23,600
but

00:14:21,920 --> 00:14:25,680
it's it doesn't matter maybe just the

00:14:23,600 --> 00:14:27,519
performance is so good it doesn't matter

00:14:25,680 --> 00:14:28,839
and you can paint pixels with skier

00:14:27,519 --> 00:14:30,160
sharpen and really have a great

00:14:28,839 --> 00:14:32,240
experience and

00:14:30,160 --> 00:14:34,000
one of the downsides with microsoft or

00:14:32,240 --> 00:14:35,760
xamarin was it was a little expensive to

00:14:34,000 --> 00:14:38,160
start off it was um

00:14:35,760 --> 00:14:39,680
a poor developer per platform licensing

00:14:38,160 --> 00:14:41,279
and microsoft took it over and said

00:14:39,680 --> 00:14:42,880
everything is free so it's all open

00:14:41,279 --> 00:14:44,800
source i actually do

00:14:42,880 --> 00:14:47,040
look at nightly builds for xamarin forms

00:14:44,800 --> 00:14:47,440
once in a while um so it's it's a very

00:14:47,040 --> 00:14:49,199
rich

00:14:47,440 --> 00:14:51,680
ecosystem collaborative ecosystem that

00:14:49,199 --> 00:14:55,120
you're coming into and and the tools are

00:14:51,680 --> 00:14:56,480
really quite mature yeah turn off this

00:14:55,120 --> 00:14:59,040
little window here

00:14:56,480 --> 00:14:59,680
okay so let's talk about xamarin as it

00:14:59,040 --> 00:15:02,240
stands

00:14:59,680 --> 00:15:03,279
uh now and uh what i'm talking about

00:15:02,240 --> 00:15:05,040
here is

00:15:03,279 --> 00:15:06,800
some of the improvements that have been

00:15:05,040 --> 00:15:08,800
done in the xamarin stack

00:15:06,800 --> 00:15:10,079
to make developers more productive and

00:15:08,800 --> 00:15:12,560
more successful

00:15:10,079 --> 00:15:13,279
so i'm just pulling from uh probably

00:15:12,560 --> 00:15:15,040
last uh

00:15:13,279 --> 00:15:16,480
two or three releases they do like three

00:15:15,040 --> 00:15:18,959
major releases a year

00:15:16,480 --> 00:15:20,000
and like service packs in between uh so

00:15:18,959 --> 00:15:21,920
if you just look back

00:15:20,000 --> 00:15:24,560
uh again they're trying to give you more

00:15:21,920 --> 00:15:26,480
and more ammunition uh in terms of ui

00:15:24,560 --> 00:15:27,600
and they're trying to tighten up the dev

00:15:26,480 --> 00:15:29,519
loop right so

00:15:27,600 --> 00:15:31,279
if you do javascript native right if you

00:15:29,519 --> 00:15:32,480
do react native or if you do native

00:15:31,279 --> 00:15:34,079
script or flutter

00:15:32,480 --> 00:15:35,519
something that you're used to is webpack

00:15:34,079 --> 00:15:37,440
and everything is a component it's very

00:15:35,519 --> 00:15:38,880
easy to just push out a component

00:15:37,440 --> 00:15:41,360
things are a little more difficult with

00:15:38,880 --> 00:15:44,720
xamarin because things are just

00:15:41,360 --> 00:15:46,480
baked in and you're pre-compiling so

00:15:44,720 --> 00:15:48,240
we have learned some tricks and uh i'll

00:15:46,480 --> 00:15:49,759
talk more about hot reload so this is a

00:15:48,240 --> 00:15:51,920
way in which we are

00:15:49,759 --> 00:15:54,079
writing some code and seeing it work in

00:15:51,920 --> 00:15:56,320
our simulators and our devices very very

00:15:54,079 --> 00:15:57,839
quickly and then this story keeps

00:15:56,320 --> 00:15:59,360
getting more flushed out it's not just

00:15:57,839 --> 00:16:01,839
reloading on the simulators

00:15:59,360 --> 00:16:02,959
or the devices if you have to completely

00:16:01,839 --> 00:16:04,639
do a restart

00:16:02,959 --> 00:16:06,560
where you're changing some c sharp code

00:16:04,639 --> 00:16:08,240
that really does need to be compiled

00:16:06,560 --> 00:16:10,959
they can also be careful as to exactly

00:16:08,240 --> 00:16:12,399
what goes out to the app in terms of the

00:16:10,959 --> 00:16:15,120
build and then make it

00:16:12,399 --> 00:16:17,519
a faster loop for you so yeah gradients

00:16:15,120 --> 00:16:19,360
brushes um

00:16:17,519 --> 00:16:20,880
excuse me lots of customizations in

00:16:19,360 --> 00:16:22,800
terms of the ui

00:16:20,880 --> 00:16:24,160
lots of love being poured in and i'll be

00:16:22,800 --> 00:16:24,880
honest like i've been doing salmon for a

00:16:24,160 --> 00:16:27,199
long time

00:16:24,880 --> 00:16:29,680
things were painful um a few years back

00:16:27,199 --> 00:16:32,000
but again the folks who are in charge

00:16:29,680 --> 00:16:32,959
um really care and and they listen to

00:16:32,000 --> 00:16:34,639
the community and then

00:16:32,959 --> 00:16:37,360
they're continually trying to improve

00:16:34,639 --> 00:16:39,600
things for the developers

00:16:37,360 --> 00:16:41,440
so this is uh the hot reload that i was

00:16:39,600 --> 00:16:43,040
talking about essentially

00:16:41,440 --> 00:16:45,040
i'll show you some code but essentially

00:16:43,040 --> 00:16:47,120
the code that you see is xaml which is

00:16:45,040 --> 00:16:49,199
extensible application markup language

00:16:47,120 --> 00:16:50,480
if you have done any xaml in the in the

00:16:49,199 --> 00:16:51,839
past especially

00:16:50,480 --> 00:16:55,199
on the microsoft stack you have done

00:16:51,839 --> 00:16:56,959
maybe wpf or uwp or silverlight

00:16:55,199 --> 00:16:58,240
i probably should not say the

00:16:56,959 --> 00:17:01,120
silverlight word uh

00:16:58,240 --> 00:17:02,720
because it has some hurt but it's all

00:17:01,120 --> 00:17:04,559
good we can bring over we can migrate

00:17:02,720 --> 00:17:07,280
things fairly easily now

00:17:04,559 --> 00:17:08,959
but uh it this is pure xaml perhaps a

00:17:07,280 --> 00:17:11,280
little different dialect of xaml that is

00:17:08,959 --> 00:17:13,199
catering to mobile form factors but

00:17:11,280 --> 00:17:15,280
you can see that we can change some code

00:17:13,199 --> 00:17:18,000
and it uh reflects on the

00:17:15,280 --> 00:17:19,520
um on the simulator immediately so

00:17:18,000 --> 00:17:21,839
that's a good story

00:17:19,520 --> 00:17:24,400
okay i think i see a question if i can

00:17:21,839 --> 00:17:26,799
make this work real quick

00:17:24,400 --> 00:17:28,400
uh no looks like the same question okay

00:17:26,799 --> 00:17:31,520
yeah so feel free folks

00:17:28,400 --> 00:17:34,480
to type in things as we go oh

00:17:31,520 --> 00:17:35,840
there may be a chat actually hang on it

00:17:34,480 --> 00:17:39,039
was just a comment yes

00:17:35,840 --> 00:17:42,320
okay yeah before you see silverlight

00:17:39,039 --> 00:17:43,840
yeah yeah i'm old i'm old folks

00:17:42,320 --> 00:17:46,160
i've done like a couple of years on

00:17:43,840 --> 00:17:46,960
several late the dev experience was

00:17:46,160 --> 00:17:50,240
great

00:17:46,960 --> 00:17:51,280
and um perhaps we are bringing xaml back

00:17:50,240 --> 00:17:53,840
to the browser as

00:17:51,280 --> 00:17:54,880
if time permits i can show you but just

00:17:53,840 --> 00:17:56,480
done better and

00:17:54,880 --> 00:17:58,000
if you have or if you maintain

00:17:56,480 --> 00:18:00,160
silverlight apps there are lots of

00:17:58,000 --> 00:18:01,919
migration paths you can you can go down

00:18:00,160 --> 00:18:02,640
to blazer you can go down to angular you

00:18:01,919 --> 00:18:05,840
can go

00:18:02,640 --> 00:18:07,280
do wpf and just depends on what

00:18:05,840 --> 00:18:09,440
platform you're wanting to support and

00:18:07,280 --> 00:18:12,720
where your code base wants to be

00:18:09,440 --> 00:18:13,600
so um again lots of good things so let's

00:18:12,720 --> 00:18:16,320
go back to

00:18:13,600 --> 00:18:17,760
simon forms um a couple of quick plugs

00:18:16,320 --> 00:18:19,360
again mobile is hard

00:18:17,760 --> 00:18:21,600
especially when you talk about the whole

00:18:19,360 --> 00:18:23,360
life cycle uh but there are things that

00:18:21,600 --> 00:18:25,360
can really help out like look at github

00:18:23,360 --> 00:18:27,360
actions uh if you have a team and you're

00:18:25,360 --> 00:18:29,039
doing ci cd pipelines

00:18:27,360 --> 00:18:30,799
look at that look at visual studio app

00:18:29,039 --> 00:18:31,360
center if you don't want to go to the

00:18:30,799 --> 00:18:33,200
store

00:18:31,360 --> 00:18:34,960
if you just want enterprise distribution

00:18:33,200 --> 00:18:36,880
then these solutions are great

00:18:34,960 --> 00:18:38,960
uh i mean there are other ones these are

00:18:36,880 --> 00:18:40,240
the ones that i know and i use so i'm

00:18:38,960 --> 00:18:42,320
happy to talk about it so

00:18:40,240 --> 00:18:43,840
this works not just for xamarin apps but

00:18:42,320 --> 00:18:46,640
every type of app as well

00:18:43,840 --> 00:18:48,080
so again um doing mobile it needs a

00:18:46,640 --> 00:18:49,600
little bit of love and care

00:18:48,080 --> 00:18:51,360
okay now let's talk about some things

00:18:49,600 --> 00:18:54,000
that are on the edges so not

00:18:51,360 --> 00:18:55,520
directly xamarin forms but it has

00:18:54,000 --> 00:18:59,120
implications for

00:18:55,520 --> 00:19:01,360
uh the things that we do with xamarin

00:18:59,120 --> 00:19:02,960
so first up uh xyron forms is open

00:19:01,360 --> 00:19:04,240
source right so the community has lots

00:19:02,960 --> 00:19:05,440
of smart folks

00:19:04,240 --> 00:19:08,320
and there have been lots of cool

00:19:05,440 --> 00:19:10,960
requests uh that have been accepted so

00:19:08,320 --> 00:19:12,720
we have learned to write renderers for

00:19:10,960 --> 00:19:13,919
other platforms right so the little

00:19:12,720 --> 00:19:16,640
things that turn

00:19:13,919 --> 00:19:18,400
uh your abstracted code into native ui

00:19:16,640 --> 00:19:22,080
there are no renderers for mac os

00:19:18,400 --> 00:19:23,600
uh gtk linux and wpf uh tizen i don't

00:19:22,080 --> 00:19:25,200
know if folks know about tizen if you

00:19:23,600 --> 00:19:26,799
are using any samsung device that

00:19:25,200 --> 00:19:28,799
doesn't run android it's likely running

00:19:26,799 --> 00:19:29,600
tizen so your fridge your tv is running

00:19:28,799 --> 00:19:32,160
tizen

00:19:29,600 --> 00:19:33,760
and xiaomi france is very welcome so uh

00:19:32,160 --> 00:19:35,440
xyron phones by nature now

00:19:33,760 --> 00:19:38,160
goes to a lot of different places which

00:19:35,440 --> 00:19:40,320
which is a great story

00:19:38,160 --> 00:19:41,919
question uh greg jones is there a

00:19:40,320 --> 00:19:43,520
document best practices

00:19:41,919 --> 00:19:46,160
how you could recommend a mobile

00:19:43,520 --> 00:19:48,559
development shop to set up app center

00:19:46,160 --> 00:19:49,440
um i don't know if there's a document i

00:19:48,559 --> 00:19:52,080
mean the

00:19:49,440 --> 00:19:52,640
microsoft docs are really polished now

00:19:52,080 --> 00:19:54,640
because again

00:19:52,640 --> 00:19:56,160
they listen to a lot of that feedback so

00:19:54,640 --> 00:19:59,039
i would start with the docs but

00:19:56,160 --> 00:20:00,480
i mean i shared my my twitter info i

00:19:59,039 --> 00:20:01,600
know a couple of folks who work on the

00:20:00,480 --> 00:20:03,679
app center

00:20:01,600 --> 00:20:05,120
so drop me a line i mean if you're not

00:20:03,679 --> 00:20:06,960
finding what you're looking for i'm

00:20:05,120 --> 00:20:08,640
happy to point you to a couple of folks

00:20:06,960 --> 00:20:11,360
who work on the team

00:20:08,640 --> 00:20:11,919
but yeah start with the docs all right

00:20:11,360 --> 00:20:14,000
so

00:20:11,919 --> 00:20:15,520
uh let's talk about what else is

00:20:14,000 --> 00:20:18,640
happening um

00:20:15,520 --> 00:20:20,400
so like i said um xamarin forms xaml is

00:20:18,640 --> 00:20:22,480
a specific type of example right so if

00:20:20,400 --> 00:20:24,880
you wanted to do the other stuff

00:20:22,480 --> 00:20:25,919
then universal windows platform is

00:20:24,880 --> 00:20:28,000
windows xaml

00:20:25,919 --> 00:20:29,520
and that stretches across universal

00:20:28,000 --> 00:20:30,960
within the windows realm

00:20:29,520 --> 00:20:34,159
but it's still a lot of devices it's

00:20:30,960 --> 00:20:35,919
xboxes pcs and surface hubs and hololens

00:20:34,159 --> 00:20:38,080
and uh they are realizing that they

00:20:35,919 --> 00:20:40,480
cannot be as tied to windows 10

00:20:38,080 --> 00:20:41,120
as a runtime so they can push out

00:20:40,480 --> 00:20:43,679
updates

00:20:41,120 --> 00:20:45,440
without the windows releases so you may

00:20:43,679 --> 00:20:47,679
have heard about win ui which is again

00:20:45,440 --> 00:20:50,400
an abstraction so they are separating

00:20:47,679 --> 00:20:50,720
the ui stack from windows and having

00:20:50,400 --> 00:20:52,559
that

00:20:50,720 --> 00:20:54,559
end to end and that has actually

00:20:52,559 --> 00:20:56,880
implications for xamarin as well

00:20:54,559 --> 00:20:58,640
because the goal is to use win ui to get

00:20:56,880 --> 00:21:01,280
back to

00:20:58,640 --> 00:21:03,200
windows desktop and we are seeing dual

00:21:01,280 --> 00:21:04,880
desktop devices or dual screen devices

00:21:03,200 --> 00:21:06,880
which is a lot of fun we had the surface

00:21:04,880 --> 00:21:08,400
duo come out surface neo is also

00:21:06,880 --> 00:21:10,159
scheduled to come out so

00:21:08,400 --> 00:21:12,320
what that does is for a mobile developer

00:21:10,159 --> 00:21:14,320
it just gives us more real estate and

00:21:12,320 --> 00:21:14,960
you have to think about the ux it's just

00:21:14,320 --> 00:21:16,960
more like

00:21:14,960 --> 00:21:18,720
it's like double the real estate how do

00:21:16,960 --> 00:21:20,240
you use it is it extended is it master

00:21:18,720 --> 00:21:22,640
detail is it like a

00:21:20,240 --> 00:21:24,080
competing view uh so it's it's up to you

00:21:22,640 --> 00:21:24,799
to kind of think through and again

00:21:24,080 --> 00:21:27,280
xamarin forms

00:21:24,799 --> 00:21:28,400
is there to support you this is on the

00:21:27,280 --> 00:21:31,600
max side of the story

00:21:28,400 --> 00:21:33,200
um a lot of ios apps now run on mac

00:21:31,600 --> 00:21:35,039
you just have greater real estate and

00:21:33,200 --> 00:21:36,799
you just have to redesign

00:21:35,039 --> 00:21:39,280
and again this is ongoing work from

00:21:36,799 --> 00:21:41,200
apple but all of those ios apps can

00:21:39,280 --> 00:21:42,400
be written in xamarin forms right so it

00:21:41,200 --> 00:21:44,799
gives you

00:21:42,400 --> 00:21:46,400
just a bigger chunk of a market uh to

00:21:44,799 --> 00:21:48,320
expose your apps to

00:21:46,400 --> 00:21:49,520
this is una platform another open source

00:21:48,320 --> 00:21:53,039
framework um

00:21:49,520 --> 00:21:53,840
again uh this is using windows xaml uwp

00:21:53,039 --> 00:21:55,840
xaml

00:21:53,840 --> 00:21:57,919
but if you for some reason if you did

00:21:55,840 --> 00:21:59,440
not want to do xamarin forms then this

00:21:57,919 --> 00:22:01,360
is the channel that you can use

00:21:59,440 --> 00:22:02,960
again they stretch you to ios or android

00:22:01,360 --> 00:22:04,159
and they go to webassembly which we'll

00:22:02,960 --> 00:22:06,080
talk about

00:22:04,159 --> 00:22:07,679
so their web assembly is actually really

00:22:06,080 --> 00:22:09,520
good but you can see like right down

00:22:07,679 --> 00:22:10,320
here they are using mono and xamarin so

00:22:09,520 --> 00:22:12,799
it's not

00:22:10,320 --> 00:22:14,960
like completely different it is just the

00:22:12,799 --> 00:22:17,360
the ui shell is different

00:22:14,960 --> 00:22:18,559
and again choice is a great thing so

00:22:17,360 --> 00:22:20,640
let's talk about blazer

00:22:18,559 --> 00:22:21,919
so we have web assembly which is a low

00:22:20,640 --> 00:22:24,400
level assembly like

00:22:21,919 --> 00:22:26,320
thing that your browser can execute and

00:22:24,400 --> 00:22:28,159
it lets higher level languages be

00:22:26,320 --> 00:22:30,400
compiled down into webassembly

00:22:28,159 --> 00:22:32,320
and we run in the browser just like a

00:22:30,400 --> 00:22:32,960
javascript engine would run javascript

00:22:32,320 --> 00:22:35,440
right so that

00:22:32,960 --> 00:22:37,520
is a great story and blazer is

00:22:35,440 --> 00:22:40,080
completely in the asp.net lan this is

00:22:37,520 --> 00:22:42,080
for web devs this has never been for

00:22:40,080 --> 00:22:43,360
mobile devs but you can see now it has

00:22:42,080 --> 00:22:45,120
implications so

00:22:43,360 --> 00:22:46,720
laser can be is complete the server side

00:22:45,120 --> 00:22:48,480
our brazer can be completely like this

00:22:46,720 --> 00:22:50,320
started out with a dom

00:22:48,480 --> 00:22:52,080
that they maintained over a signalr real

00:22:50,320 --> 00:22:53,919
time bridge but now they can do

00:22:52,080 --> 00:22:54,799
completely client-side webassembly so

00:22:53,919 --> 00:22:56,799
c-sharp

00:22:54,799 --> 00:22:58,159
running or rust or c-plus plus running

00:22:56,799 --> 00:23:01,440
completely on the web

00:22:58,159 --> 00:23:03,520
on in your browser and with blazer you

00:23:01,440 --> 00:23:04,159
can obviously do pwas because that's the

00:23:03,520 --> 00:23:06,000
web

00:23:04,159 --> 00:23:07,760
where it belongs but you can also do

00:23:06,000 --> 00:23:09,520
things like desktop apps uh please don't

00:23:07,760 --> 00:23:10,799
do electron with blazer because it's too

00:23:09,520 --> 00:23:12,000
heavy-handed because they're they're

00:23:10,799 --> 00:23:14,400
coming up with like lighter

00:23:12,000 --> 00:23:15,200
web shells which can run laser but you

00:23:14,400 --> 00:23:17,039
can also write

00:23:15,200 --> 00:23:18,960
xamarin apps with blazers so it's just a

00:23:17,039 --> 00:23:20,159
shell one more abstraction that lets you

00:23:18,960 --> 00:23:21,840
write native

00:23:20,159 --> 00:23:24,080
cross-platform xamarin apps but with

00:23:21,840 --> 00:23:25,919
blazer if you just did not care for

00:23:24,080 --> 00:23:27,760
xaml and c-sharp then you can do blazer

00:23:25,919 --> 00:23:30,799
and the razer syntax

00:23:27,760 --> 00:23:32,640
uh towards writing seven apps all right

00:23:30,799 --> 00:23:34,080
so we are seven minutes to the top of

00:23:32,640 --> 00:23:35,600
the hour so i'm doing okay on time i

00:23:34,080 --> 00:23:36,480
want to show you some demos as we as you

00:23:35,600 --> 00:23:39,600
get along

00:23:36,480 --> 00:23:42,000
let's talk about dot net maui so this is

00:23:39,600 --> 00:23:44,240
a fancy new uh catchphrase they came up

00:23:42,000 --> 00:23:45,840
with it's multi-platform app ui

00:23:44,240 --> 00:23:47,840
essentially what this is is just the

00:23:45,840 --> 00:23:51,279
evolution of xamarin forms

00:23:47,840 --> 00:23:52,720
of where it's going it is um

00:23:51,279 --> 00:23:54,400
like so xamarin and ios and sound and

00:23:52,720 --> 00:23:55,440
android stay the way they are but

00:23:54,400 --> 00:23:58,000
xamarin forms

00:23:55,440 --> 00:23:59,760
um kind of evolves to open up the

00:23:58,000 --> 00:24:01,919
funnels to make uh make it more

00:23:59,760 --> 00:24:03,200
welcoming for a few other users

00:24:01,919 --> 00:24:05,279
now keep in mind like look at the

00:24:03,200 --> 00:24:07,520
targeting here this is for net six

00:24:05,279 --> 00:24:09,120
right so it's not for this year and it's

00:24:07,520 --> 00:24:10,640
actually coming in november of next year

00:24:09,120 --> 00:24:13,360
so we got a long runway

00:24:10,640 --> 00:24:15,120
to get things right uh but this will be

00:24:13,360 --> 00:24:18,480
for ios android and

00:24:15,120 --> 00:24:21,760
uh just the things you expect for um

00:24:18,480 --> 00:24:23,200
for xamarin forms to do just done better

00:24:21,760 --> 00:24:25,440
because they have now learned the

00:24:23,200 --> 00:24:28,159
lessons so uh you have your

00:24:25,440 --> 00:24:29,600
list of platforms to support uh and all

00:24:28,159 --> 00:24:32,240
of the other things like smartphones and

00:24:29,600 --> 00:24:33,520
tvs you can obviously support they are

00:24:32,240 --> 00:24:35,840
doing some things

00:24:33,520 --> 00:24:36,720
that really help out in terms of what

00:24:35,840 --> 00:24:40,240
the developers

00:24:36,720 --> 00:24:41,279
see the uh project structure uh becomes

00:24:40,240 --> 00:24:43,200
much more simpler

00:24:41,279 --> 00:24:44,640
and they are much more careful as to how

00:24:43,200 --> 00:24:46,400
they handle fonts and

00:24:44,640 --> 00:24:47,760
and images and other things it's going

00:24:46,400 --> 00:24:50,320
to be a single project

00:24:47,760 --> 00:24:52,320
so just a easier story for developers

00:24:50,320 --> 00:24:54,159
but the biggest story is like how we are

00:24:52,320 --> 00:24:57,120
actually writing the apps so

00:24:54,159 --> 00:24:59,200
this is the thing that most um dotnet

00:24:57,120 --> 00:25:01,679
devs are used to our xaml and c-sharp we

00:24:59,200 --> 00:25:03,279
do it for wpf we do it for uwp

00:25:01,679 --> 00:25:04,640
and we do it for diamond forms right and

00:25:03,279 --> 00:25:06,640
that's a great story it's a rich

00:25:04,640 --> 00:25:08,400
ecosystem lots of tooling

00:25:06,640 --> 00:25:10,080
but we sometimes don't realize that we

00:25:08,400 --> 00:25:11,919
have built ourselves kind of a walled

00:25:10,080 --> 00:25:12,720
garden it's difficult for somebody new

00:25:11,919 --> 00:25:14,159
to come in and

00:25:12,720 --> 00:25:15,919
some of the tooling can actually be a

00:25:14,159 --> 00:25:18,640
little heavy-handed so

00:25:15,919 --> 00:25:19,919
uh it's not as appealing to uh to new

00:25:18,640 --> 00:25:22,559
developers maybe

00:25:19,919 --> 00:25:23,120
so we are trying to pivot and try to

00:25:22,559 --> 00:25:25,360
open up

00:25:23,120 --> 00:25:26,159
the field um something that really works

00:25:25,360 --> 00:25:28,480
well with

00:25:26,159 --> 00:25:30,080
xaml and c-sharp is an mvvm design

00:25:28,480 --> 00:25:32,080
pattern these are some popular

00:25:30,080 --> 00:25:33,360
frameworks like xamarin forms so examine

00:25:32,080 --> 00:25:35,039
cross or prism

00:25:33,360 --> 00:25:36,559
it's model view view model and that's

00:25:35,039 --> 00:25:39,039
something traditionally all

00:25:36,559 --> 00:25:39,760
xaml developers have done for bigger

00:25:39,039 --> 00:25:42,080
projects it

00:25:39,760 --> 00:25:43,679
helps you keep your sanity but we are

00:25:42,080 --> 00:25:44,880
trying to open it up again like i said

00:25:43,679 --> 00:25:47,120
to other design patterns

00:25:44,880 --> 00:25:48,240
blazer already does mvu which is model

00:25:47,120 --> 00:25:49,760
view update

00:25:48,240 --> 00:25:52,000
and we are trying to bring that over

00:25:49,760 --> 00:25:54,080
into uh into xamarin land we had a thing

00:25:52,000 --> 00:25:56,000
called famous or or fabulous

00:25:54,080 --> 00:25:58,000
uh with f sharp but f sharp tooling

00:25:56,000 --> 00:26:00,880
isn't quite meant to go with

00:25:58,000 --> 00:26:01,360
uh simon forms tooling so uh what we are

00:26:00,880 --> 00:26:02,880
doing

00:26:01,360 --> 00:26:04,559
or what some really smart people will

00:26:02,880 --> 00:26:07,919
not be not me uh

00:26:04,559 --> 00:26:10,080
but uh the the goal is with dot net maui

00:26:07,919 --> 00:26:12,799
you're going to be able to do mvvm or

00:26:10,080 --> 00:26:14,000
mvu and be able to render your entire

00:26:12,799 --> 00:26:15,840
visual tree in c

00:26:14,000 --> 00:26:17,279
sharp and essentially this is a much

00:26:15,840 --> 00:26:19,679
more simpler pattern

00:26:17,279 --> 00:26:21,279
it's it's sort of one-way binding but it

00:26:19,679 --> 00:26:22,559
actually does come back and do two-way

00:26:21,279 --> 00:26:24,720
binding essentially

00:26:22,559 --> 00:26:26,320
the model part of it essentially is the

00:26:24,720 --> 00:26:28,320
state of your application this is almost

00:26:26,320 --> 00:26:31,039
like react in in some ways

00:26:28,320 --> 00:26:32,640
so the model drives the ui and then

00:26:31,039 --> 00:26:34,400
anything changes in the ui

00:26:32,640 --> 00:26:36,400
you have an update loop that comes back

00:26:34,400 --> 00:26:38,159
to update the model and that in turn

00:26:36,400 --> 00:26:40,240
updates the ui again so it's

00:26:38,159 --> 00:26:42,640
just one continuous loop and it's it's

00:26:40,240 --> 00:26:44,799
going to be very very fast if done right

00:26:42,640 --> 00:26:46,080
so um there are lots of opinions about

00:26:44,799 --> 00:26:47,919
this because it's a design pattern it's

00:26:46,080 --> 00:26:49,840
open to interpretation but

00:26:47,919 --> 00:26:50,960
there are some libraries where you can i

00:26:49,840 --> 00:26:52,400
mean they're kind of like playgrounds

00:26:50,960 --> 00:26:53,279
you can see what they're trying to do

00:26:52,400 --> 00:26:56,480
with uh

00:26:53,279 --> 00:26:58,159
maui all right so i'm ready to show you

00:26:56,480 --> 00:27:00,640
some stuff but before i do

00:26:58,159 --> 00:27:01,600
uh just a quick shout out since i work

00:27:00,640 --> 00:27:04,159
for progress offer

00:27:01,600 --> 00:27:04,880
uh i do make things that we do make

00:27:04,159 --> 00:27:07,039
things that we

00:27:04,880 --> 00:27:08,000
kind of stand by so we make dotnet

00:27:07,039 --> 00:27:10,880
tooling for

00:27:08,000 --> 00:27:12,559
any platform web desktop and mobile but

00:27:10,880 --> 00:27:13,840
since we are talking about xamarin uh we

00:27:12,559 --> 00:27:16,080
do make a sweet call

00:27:13,840 --> 00:27:17,360
ui for xamarin which is the grids to

00:27:16,080 --> 00:27:18,960
charts the

00:27:17,360 --> 00:27:20,799
uh busy indicators all the different

00:27:18,960 --> 00:27:22,799
things that don't come out of the box

00:27:20,799 --> 00:27:24,080
and that we can provide you but by all

00:27:22,799 --> 00:27:26,240
means look around please

00:27:24,080 --> 00:27:27,600
uh there is competition and everybody is

00:27:26,240 --> 00:27:30,159
trying to do the same thing

00:27:27,600 --> 00:27:31,919
to elevate and make mobile developers

00:27:30,159 --> 00:27:33,919
more successful so by all means look

00:27:31,919 --> 00:27:34,559
around and choose the right ui for your

00:27:33,919 --> 00:27:36,640
app

00:27:34,559 --> 00:27:38,159
but don't try to reinvent the wheel it's

00:27:36,640 --> 00:27:38,480
it's a lot of engineering work to get

00:27:38,159 --> 00:27:40,080
this

00:27:38,480 --> 00:27:42,240
working in the first place so unless you

00:27:40,080 --> 00:27:43,760
have a very niche use case

00:27:42,240 --> 00:27:46,159
uh start with something that makes you

00:27:43,760 --> 00:27:48,799
more productive

00:27:46,159 --> 00:27:49,200
okay i am good on time look at that i

00:27:48,799 --> 00:27:52,000
got

00:27:49,200 --> 00:27:53,840
uh three minutes to the top of the hour

00:27:52,000 --> 00:27:57,679
and then 15 minutes more okay

00:27:53,840 --> 00:28:00,000
so let's look for uh some demos shall we

00:27:57,679 --> 00:28:01,440
and while i'm doing this let me see any

00:28:00,000 --> 00:28:04,240
questions

00:28:01,440 --> 00:28:05,840
no okay let's jump in don't make me

00:28:04,240 --> 00:28:08,960
lonely

00:28:05,840 --> 00:28:11,120
so where can we start um

00:28:08,960 --> 00:28:12,000
yeah let's start here so uh if you have

00:28:11,120 --> 00:28:14,399
never done

00:28:12,000 --> 00:28:15,200
xamarin like start here do a search and

00:28:14,399 --> 00:28:17,520
you land on

00:28:15,200 --> 00:28:19,039
xamarin page uh click on anywhere you

00:28:17,520 --> 00:28:20,480
want like essentially they're gonna ask

00:28:19,039 --> 00:28:23,520
you to install some tooling

00:28:20,480 --> 00:28:25,600
which for windows or or

00:28:23,520 --> 00:28:27,760
or mac essentially is visual studio

00:28:25,600 --> 00:28:31,120
community edition onwards it's free

00:28:27,760 --> 00:28:32,000
and visual studio used to be a gigantic

00:28:31,120 --> 00:28:35,120
install they have

00:28:32,000 --> 00:28:37,120
trimmed it down with workflows so

00:28:35,120 --> 00:28:38,799
don't look at the azure or the web or

00:28:37,120 --> 00:28:40,240
any other workflows just get the mobile

00:28:38,799 --> 00:28:42,399
stuff because that's what

00:28:40,240 --> 00:28:44,480
has xamarin included in it it's still

00:28:42,399 --> 00:28:46,559
not very small because fundamentally

00:28:44,480 --> 00:28:47,200
xamarin needs ios and android and all of

00:28:46,559 --> 00:28:50,880
those

00:28:47,200 --> 00:28:52,880
sdks to be plugged in and working

00:28:50,880 --> 00:28:54,799
so get all the bits and then you can

00:28:52,880 --> 00:28:57,679
start playing around so

00:28:54,799 --> 00:29:00,080
let me show you some quick things here

00:28:57,679 --> 00:29:01,679
this one here is a simple solution

00:29:00,080 --> 00:29:03,440
which is kind of classic way in which

00:29:01,679 --> 00:29:05,360
seven forms works when you do file

00:29:03,440 --> 00:29:07,200
new project in visual studio this is

00:29:05,360 --> 00:29:09,919
what you get and i'm sorry if

00:29:07,200 --> 00:29:11,840
um if this is too bright i'm just not a

00:29:09,919 --> 00:29:14,080
sucker for dark mode and it's it's just

00:29:11,840 --> 00:29:16,880
completely me i understand that

00:29:14,080 --> 00:29:18,399
but that's this is how i roll so you get

00:29:16,880 --> 00:29:19,520
a project like this which is essentially

00:29:18,399 --> 00:29:21,440
the shared project

00:29:19,520 --> 00:29:23,279
uh which is a dot-net standard library

00:29:21,440 --> 00:29:25,279
actually and then for each project you

00:29:23,279 --> 00:29:26,880
get a platform specific head

00:29:25,279 --> 00:29:28,880
or a folder and that's where the builds

00:29:26,880 --> 00:29:31,279
start out with so your goal

00:29:28,880 --> 00:29:32,880
as a xamarin forms developer is to do as

00:29:31,279 --> 00:29:34,640
little as you can in the platform

00:29:32,880 --> 00:29:35,600
specific projects and do it all in the

00:29:34,640 --> 00:29:37,600
shared

00:29:35,600 --> 00:29:39,520
in the shared library so let's take a

00:29:37,600 --> 00:29:40,960
look at this little app here and i want

00:29:39,520 --> 00:29:41,520
to show you a couple of variations of

00:29:40,960 --> 00:29:43,840
this

00:29:41,520 --> 00:29:45,520
so i'm doing kind of a hello world thing

00:29:43,840 --> 00:29:47,360
for mobile apps which is

00:29:45,520 --> 00:29:49,120
going up to the cloud getting some stuff

00:29:47,360 --> 00:29:50,240
and showing a list because that that's

00:29:49,120 --> 00:29:52,399
what most mobile apps

00:29:50,240 --> 00:29:53,520
end up being so what i'm showing you

00:29:52,399 --> 00:29:55,440
here is

00:29:53,520 --> 00:29:58,720
uh this little end point that i love

00:29:55,440 --> 00:30:00,399
hitting it's called jason placeholder

00:29:58,720 --> 00:30:02,240
and essentially it's got a bunch of

00:30:00,399 --> 00:30:04,320
endpoints here this one here is what i'm

00:30:02,240 --> 00:30:06,320
using they got to do's and comments and

00:30:04,320 --> 00:30:07,679
things like that but when you do

00:30:06,320 --> 00:30:10,240
posts they essentially give you back

00:30:07,679 --> 00:30:11,919
some json and this is in latin so they

00:30:10,240 --> 00:30:14,399
give you about 100 or so

00:30:11,919 --> 00:30:14,960
json bits so that's the end point we're

00:30:14,399 --> 00:30:18,000
hitting

00:30:14,960 --> 00:30:19,840
then i have a few uh things set up here

00:30:18,000 --> 00:30:21,200
um and keep in mind this is all the

00:30:19,840 --> 00:30:21,520
standard projects so this is how is

00:30:21,200 --> 00:30:23,600
there

00:30:21,520 --> 00:30:25,919
uh this is how a xamarin forms app

00:30:23,600 --> 00:30:26,960
essentially starts out there is onstart

00:30:25,919 --> 00:30:29,679
there's on sleep then

00:30:26,960 --> 00:30:31,440
on resume on start is where your app

00:30:29,679 --> 00:30:33,679
starts out on sleep is when

00:30:31,440 --> 00:30:35,679
it goes in the background on resume is

00:30:33,679 --> 00:30:37,679
when it comes back from the background

00:30:35,679 --> 00:30:39,200
if your app has been running for a long

00:30:37,679 --> 00:30:41,200
long time and the user is just not

00:30:39,200 --> 00:30:43,039
using it the os will eventually kill it

00:30:41,200 --> 00:30:44,399
and you do not get notified when your

00:30:43,039 --> 00:30:46,640
app is killed so please

00:30:44,399 --> 00:30:47,919
save your state on the on sleep and then

00:30:46,640 --> 00:30:49,760
this is where we just say

00:30:47,919 --> 00:30:51,360
that's my first page essentially that's

00:30:49,760 --> 00:30:54,640
it so i have

00:30:51,360 --> 00:30:56,960
um i have a class called posts which is

00:30:54,640 --> 00:31:00,240
essentially getting some stuff

00:30:56,960 --> 00:31:01,360
which is mirroring what my json objects

00:31:00,240 --> 00:31:02,960
are going to be like

00:31:01,360 --> 00:31:05,200
and then i have a class which actually

00:31:02,960 --> 00:31:07,120
does the get so if i can bump up the

00:31:05,200 --> 00:31:09,039
fonts here a little bit

00:31:07,120 --> 00:31:10,399
so you'll see that i'm using http client

00:31:09,039 --> 00:31:12,240
making a simple request

00:31:10,399 --> 00:31:14,960
out to that endpoint when i get the

00:31:12,240 --> 00:31:16,240
response back i'm deserializing it back

00:31:14,960 --> 00:31:17,760
into json

00:31:16,240 --> 00:31:19,279
and that's my object collection which is

00:31:17,760 --> 00:31:20,159
an observable collection so it's a

00:31:19,279 --> 00:31:21,919
specific

00:31:20,159 --> 00:31:23,279
c-sharp generic collection that lets me

00:31:21,919 --> 00:31:25,919
bind to my ui

00:31:23,279 --> 00:31:27,039
and that's it and this one uh it does

00:31:25,919 --> 00:31:29,440
some filtering

00:31:27,039 --> 00:31:30,320
so this is xaml this is kind of where

00:31:29,440 --> 00:31:32,240
like the

00:31:30,320 --> 00:31:33,679
rubber meets the road essentially this

00:31:32,240 --> 00:31:35,519
can get a little verbal so i'll be

00:31:33,679 --> 00:31:36,799
honest but again if you are doing xaml

00:31:35,519 --> 00:31:38,080
you know what you're doing

00:31:36,799 --> 00:31:40,080
and there are tools that can help you

00:31:38,080 --> 00:31:41,039
out essentially this one is just using a

00:31:40,080 --> 00:31:43,120
list view

00:31:41,039 --> 00:31:44,720
uh that is going to be data bound and

00:31:43,120 --> 00:31:46,640
inside of it is a template that just

00:31:44,720 --> 00:31:47,360
shows one string that's all we care

00:31:46,640 --> 00:31:49,760
about

00:31:47,360 --> 00:31:50,960
and in the code behind when this page

00:31:49,760 --> 00:31:53,039
starts up on

00:31:50,960 --> 00:31:54,559
we are trying to draw the ui part of it

00:31:53,039 --> 00:31:56,640
we're going to go get the posts

00:31:54,559 --> 00:31:58,559
from our url and we're going to bind it

00:31:56,640 --> 00:32:00,159
to the item source property of our list

00:31:58,559 --> 00:32:02,399
view that's it right so

00:32:00,159 --> 00:32:05,200
let's go ahead and run this and we shall

00:32:02,399 --> 00:32:05,200
see how this works

00:32:06,640 --> 00:32:10,320
all right so you have the iphone pro max

00:32:09,440 --> 00:32:12,320
thing come up

00:32:10,320 --> 00:32:14,159
i i don't know if any of you have the

00:32:12,320 --> 00:32:16,960
new iphone 12s that came out

00:32:14,159 --> 00:32:18,480
because it's your annual ritual of

00:32:16,960 --> 00:32:20,480
giving apple more money

00:32:18,480 --> 00:32:21,600
which is fun it's great hardware right

00:32:20,480 --> 00:32:24,960
okay so you get

00:32:21,600 --> 00:32:25,679
a list of uh posts coming back from the

00:32:24,960 --> 00:32:27,120
url

00:32:25,679 --> 00:32:29,200
which is perfect that's what we want you

00:32:27,120 --> 00:32:31,360
can you can filter things and it's very

00:32:29,200 --> 00:32:34,399
smooth and it's working fine right

00:32:31,360 --> 00:32:35,679
so that's kind of 101 now let me uh so

00:32:34,399 --> 00:32:38,000
as you saw like i didn't do anything

00:32:35,679 --> 00:32:40,880
that is ios specific but now

00:32:38,000 --> 00:32:42,000
um if you can watch this thing here you

00:32:40,880 --> 00:32:43,120
know where i'm going with this i'm going

00:32:42,000 --> 00:32:46,559
to switch this up

00:32:43,120 --> 00:32:49,039
as a startup project right and

00:32:46,559 --> 00:32:49,679
if i run this now without changing any

00:32:49,039 --> 00:32:51,279
code

00:32:49,679 --> 00:32:52,799
again this is what is possible with

00:32:51,279 --> 00:32:56,159
xamarin forms right now

00:32:52,799 --> 00:32:57,120
what you get is a native mac desktop

00:32:56,159 --> 00:32:59,440
application right

00:32:57,120 --> 00:33:00,480
it's responsive and it has that list of

00:32:59,440 --> 00:33:02,080
posts

00:33:00,480 --> 00:33:03,679
maybe the ui can be cleaned up but you

00:33:02,080 --> 00:33:04,080
see what i'm doing here no change of

00:33:03,679 --> 00:33:06,240
code

00:33:04,080 --> 00:33:07,760
simon forms just works and essentially

00:33:06,240 --> 00:33:10,320
what we did was that's a cocoa

00:33:07,760 --> 00:33:12,399
pods project and in the app delegate

00:33:10,320 --> 00:33:13,440
there is nothing mac specific all we did

00:33:12,399 --> 00:33:16,320
was

00:33:13,440 --> 00:33:18,000
renewed up a new window and uh that's

00:33:16,320 --> 00:33:20,960
probably too big

00:33:18,000 --> 00:33:22,240
and when the window is done and we are

00:33:20,960 --> 00:33:24,799
about to render we say

00:33:22,240 --> 00:33:26,320
don't do your thing do forms dot in it

00:33:24,799 --> 00:33:27,440
and then load it up so essentially we're

00:33:26,320 --> 00:33:30,480
letting xamarin forms

00:33:27,440 --> 00:33:31,679
drive this thing and that's how it works

00:33:30,480 --> 00:33:33,279
on on mac

00:33:31,679 --> 00:33:35,360
uh let me see how i'm doing on time i

00:33:33,279 --> 00:33:37,440
can show you the same demo on wpf i can

00:33:35,360 --> 00:33:38,559
show you the same demo on tizen it just

00:33:37,440 --> 00:33:41,279
works everywhere

00:33:38,559 --> 00:33:42,559
right and it's a good story but let me

00:33:41,279 --> 00:33:46,080
show you some variations of

00:33:42,559 --> 00:33:49,760
this exact thing here okay let me uh

00:33:46,080 --> 00:33:52,799
close this and let's go to

00:33:49,760 --> 00:33:56,320
uh this one maybe

00:33:52,799 --> 00:33:58,000
okay so this is a quick look at blazer

00:33:56,320 --> 00:33:59,840
okay and if you've never done blazer

00:33:58,000 --> 00:34:02,000
don't worry about it and maybe maybe

00:33:59,840 --> 00:34:03,679
this isn't for you but if you are a web

00:34:02,000 --> 00:34:05,279
developer on dot net stack

00:34:03,679 --> 00:34:07,440
you are likely excited about blazer

00:34:05,279 --> 00:34:08,079
because it is running c-sharp front and

00:34:07,440 --> 00:34:09,599
back

00:34:08,079 --> 00:34:11,760
server side and client side it's very

00:34:09,599 --> 00:34:12,560
exciting so what i'm showing you here is

00:34:11,760 --> 00:34:14,800
actually

00:34:12,560 --> 00:34:15,599
xamarin forms i don't know if you can

00:34:14,800 --> 00:34:16,879
hear my kid

00:34:15,599 --> 00:34:18,639
shouting in the background sorry about

00:34:16,879 --> 00:34:20,159
that it's the end of the day and

00:34:18,639 --> 00:34:22,560
everyone's tired uh

00:34:20,159 --> 00:34:24,639
so what we're doing here is uh if you

00:34:22,560 --> 00:34:27,280
look at the dependencies i'm gonna

00:34:24,639 --> 00:34:28,480
pull this up here uh you'll notice that

00:34:27,280 --> 00:34:30,240
there is actually no

00:34:28,480 --> 00:34:31,599
uh well i mean this one is actually used

00:34:30,240 --> 00:34:33,280
in seven forms what i was gonna say is

00:34:31,599 --> 00:34:35,440
for the other one mvu pattern which i'll

00:34:33,280 --> 00:34:36,879
show you this one is using xamarin forms

00:34:35,440 --> 00:34:38,320
but this one is using a wrapper called

00:34:36,879 --> 00:34:40,399
mobile base or bindings

00:34:38,320 --> 00:34:42,000
so what we're doing here is straight up

00:34:40,399 --> 00:34:44,000
blazer but there is no

00:34:42,000 --> 00:34:45,919
web assembly here there is no wasm there

00:34:44,000 --> 00:34:48,480
this is running as a native app

00:34:45,919 --> 00:34:49,440
so here just the way the app starts up

00:34:48,480 --> 00:34:51,679
is a little different

00:34:49,440 --> 00:34:53,839
this is kind of a very asp.net way of

00:34:51,679 --> 00:34:55,520
doing dependence injection and how you

00:34:53,839 --> 00:34:57,520
new up your components

00:34:55,520 --> 00:34:59,839
and then i have the same exact setup i

00:34:57,520 --> 00:35:01,520
have my posts which is what i get back i

00:34:59,839 --> 00:35:04,160
have my post manager that does

00:35:01,520 --> 00:35:04,640
the get getting of the post and then i

00:35:04,160 --> 00:35:07,599
have a

00:35:04,640 --> 00:35:09,040
razor page which essentially this is

00:35:07,599 --> 00:35:10,560
kind of spaghetti code but you don't

00:35:09,040 --> 00:35:11,920
have to write it this way like this is

00:35:10,560 --> 00:35:14,000
my

00:35:11,920 --> 00:35:15,839
this is my ui and then this is the code

00:35:14,000 --> 00:35:17,440
that runs technical on the server side

00:35:15,839 --> 00:35:19,280
but there is no server side here

00:35:17,440 --> 00:35:20,880
but it's just gonna all combine you can

00:35:19,280 --> 00:35:22,160
separate out the code behind in a

00:35:20,880 --> 00:35:24,400
separate file if you want

00:35:22,160 --> 00:35:26,560
so what this is doing it just is one

00:35:24,400 --> 00:35:29,040
line one label that knows how to

00:35:26,560 --> 00:35:30,880
display the title of each post and then

00:35:29,040 --> 00:35:32,320
take a look at hello world razor this is

00:35:30,880 --> 00:35:34,079
our first page

00:35:32,320 --> 00:35:35,839
similar idea except we're not really

00:35:34,079 --> 00:35:37,359
writing xaml here it kind of looks a

00:35:35,839 --> 00:35:40,079
little similar but this is

00:35:37,359 --> 00:35:41,760
kind of almost html-ish we are writing

00:35:40,079 --> 00:35:42,240
razer syntax here because we are writing

00:35:41,760 --> 00:35:44,800
at

00:35:42,240 --> 00:35:45,359
for each so what we did was in the code

00:35:44,800 --> 00:35:47,599
behind

00:35:45,359 --> 00:35:50,000
we did this exact same thing of getting

00:35:47,599 --> 00:35:51,599
the posts and when i have the posts back

00:35:50,000 --> 00:35:53,359
we're going to iterate through that and

00:35:51,599 --> 00:35:54,480
for each of the posts we are going to

00:35:53,359 --> 00:35:57,680
render that

00:35:54,480 --> 00:35:59,599
so this post to display essentially

00:35:57,680 --> 00:36:01,599
becomes no i mean this one here the post

00:35:59,599 --> 00:36:03,680
list which is the razer page

00:36:01,599 --> 00:36:05,760
this essentially becomes one component

00:36:03,680 --> 00:36:07,520
exactly right like what react would do

00:36:05,760 --> 00:36:08,960
this is the blazer component model that

00:36:07,520 --> 00:36:11,440
everybody is fond of

00:36:08,960 --> 00:36:12,160
and so we essentially iterate uh over

00:36:11,440 --> 00:36:16,480
that

00:36:12,160 --> 00:36:18,720
and we just pass in the post for each

00:36:16,480 --> 00:36:20,000
entity that we got back so if i go back

00:36:18,720 --> 00:36:24,160
and run this now

00:36:20,000 --> 00:36:24,160
you can see the exact same app just done

00:36:24,839 --> 00:36:29,839
differently

00:36:27,760 --> 00:36:31,440
okay so it looks a little different um

00:36:29,839 --> 00:36:32,880
because uh we don't have the filtering

00:36:31,440 --> 00:36:34,720
here but same idea right

00:36:32,880 --> 00:36:36,960
so we should be able to scroll through

00:36:34,720 --> 00:36:39,599
and we get about 100 posts and

00:36:36,960 --> 00:36:40,160
it works so if you are wanting to stick

00:36:39,599 --> 00:36:42,000
to

00:36:40,160 --> 00:36:43,839
net web stuff and if you would really

00:36:42,000 --> 00:36:45,359
like to do blazer then this is an option

00:36:43,839 --> 00:36:46,880
for you it's still experimental so don't

00:36:45,359 --> 00:36:48,320
do production apps yet

00:36:46,880 --> 00:36:49,920
but more than likely this will be

00:36:48,320 --> 00:36:52,240
something that will be supported

00:36:49,920 --> 00:36:54,800
in future now let me show you one more

00:36:52,240 --> 00:36:58,400
thing um

00:36:54,800 --> 00:36:59,680
we talked about mvu and this is a github

00:36:58,400 --> 00:37:01,920
repo that i'm fond of

00:36:59,680 --> 00:37:03,359
it's by a gentleman named james clancy

00:37:01,920 --> 00:37:05,280
he works on the xiaomin team

00:37:03,359 --> 00:37:07,040
he's an engineer and what they're trying

00:37:05,280 --> 00:37:10,160
to do is bring that

00:37:07,040 --> 00:37:11,920
mvu design pattern into xamarin forms

00:37:10,160 --> 00:37:14,160
into c-sharp

00:37:11,920 --> 00:37:15,599
so again start here it's called comment

00:37:14,160 --> 00:37:18,160
comment i o

00:37:15,599 --> 00:37:19,680
so let me show you that i'm going to

00:37:18,160 --> 00:37:23,839
close that

00:37:19,680 --> 00:37:23,839
and do this one here

00:37:24,320 --> 00:37:29,520
so what you'll see here is uh in here

00:37:27,359 --> 00:37:30,800
unlike the blazer one uh if you look at

00:37:29,520 --> 00:37:32,720
the dependencies

00:37:30,800 --> 00:37:33,920
there is no dependency on xamarin forms

00:37:32,720 --> 00:37:36,960
right because again

00:37:33,920 --> 00:37:39,599
you can argue that like this one's using

00:37:36,960 --> 00:37:40,640
uh comet and the hot reload you can

00:37:39,599 --> 00:37:43,599
argue like the

00:37:40,640 --> 00:37:45,280
biggest strength of xamarin forms is the

00:37:43,599 --> 00:37:47,760
renderers the fact that you can take

00:37:45,280 --> 00:37:49,680
some xaml you can take some c sharp

00:37:47,760 --> 00:37:50,880
that is defining the visual tree and you

00:37:49,680 --> 00:37:53,520
can turn around and

00:37:50,880 --> 00:37:54,720
render native ui for ios android and

00:37:53,520 --> 00:37:57,040
other platforms

00:37:54,720 --> 00:37:58,960
so what if we took those renderers and

00:37:57,040 --> 00:38:01,119
we made them a little more universal

00:37:58,960 --> 00:38:03,359
so you can use the same renderers not

00:38:01,119 --> 00:38:05,359
just from xaml but from other design

00:38:03,359 --> 00:38:08,160
patterns like blazer or like

00:38:05,359 --> 00:38:10,000
like mvu so this one here is super

00:38:08,160 --> 00:38:11,680
simple like hello world example

00:38:10,000 --> 00:38:14,000
here we are defining the whole thing in

00:38:11,680 --> 00:38:15,920
c sharp and yes you can argue things are

00:38:14,000 --> 00:38:16,800
little virgos but again things will be

00:38:15,920 --> 00:38:18,160
cleaned up

00:38:16,800 --> 00:38:20,800
more and this is continually being

00:38:18,160 --> 00:38:22,320
worked on so uh v stack essentially if

00:38:20,800 --> 00:38:24,160
you have done any xaml essentially is a

00:38:22,320 --> 00:38:25,359
vertical stack so we are stacking things

00:38:24,160 --> 00:38:26,880
one under another

00:38:25,359 --> 00:38:28,640
there is an h stack which does it

00:38:26,880 --> 00:38:30,160
horizontally and then you have a bunch

00:38:28,640 --> 00:38:30,960
of ui controls this one is just taking

00:38:30,160 --> 00:38:34,640
some text

00:38:30,960 --> 00:38:36,720
and here look at the state thing here so

00:38:34,640 --> 00:38:38,480
this is a comet state which essentially

00:38:36,720 --> 00:38:40,560
becomes the model right so this is where

00:38:38,480 --> 00:38:41,760
you have your business object and all of

00:38:40,560 --> 00:38:42,720
the properties and all of the things

00:38:41,760 --> 00:38:45,040
that you have

00:38:42,720 --> 00:38:47,440
and that is the model that your ui is

00:38:45,040 --> 00:38:49,359
going to update on that update loop

00:38:47,440 --> 00:38:50,880
uh and then that's how the whole app

00:38:49,359 --> 00:38:52,079
runs that's essentially the state of

00:38:50,880 --> 00:38:53,359
your application and you can keep

00:38:52,079 --> 00:38:55,839
multiple states uh

00:38:53,359 --> 00:38:58,320
in memory uh as you go along so this one

00:38:55,839 --> 00:39:02,160
here has just a simple count property

00:38:58,320 --> 00:39:04,000
and we are uh uh we are

00:39:02,160 --> 00:39:05,440
binding the count properties value to

00:39:04,000 --> 00:39:07,280
the text property and then

00:39:05,440 --> 00:39:09,200
there's a button increment and we just

00:39:07,280 --> 00:39:11,119
do the plus plus and that's it so

00:39:09,200 --> 00:39:12,839
you already know how this is gonna run

00:39:11,119 --> 00:39:15,839
but let me show you

00:39:12,839 --> 00:39:16,720
anyways so you can play around with this

00:39:15,839 --> 00:39:18,880
quite a bit

00:39:16,720 --> 00:39:20,320
again everything is experimental this

00:39:18,880 --> 00:39:22,720
will eventually make your

00:39:20,320 --> 00:39:24,560
make its way into dot and maui so you

00:39:22,720 --> 00:39:25,359
you get uh what we're doing here so we

00:39:24,560 --> 00:39:26,960
can increment

00:39:25,359 --> 00:39:28,480
and we don't have to touch anything

00:39:26,960 --> 00:39:29,280
because we are essentially updating the

00:39:28,480 --> 00:39:31,760
model

00:39:29,280 --> 00:39:32,960
which means that the ui will update

00:39:31,760 --> 00:39:35,760
itself

00:39:32,960 --> 00:39:37,920
okay i think i saw a question come by

00:39:35,760 --> 00:39:39,920
two questions okay

00:39:37,920 --> 00:39:41,040
okay joe mccormick love the idea of

00:39:39,920 --> 00:39:43,040
using blazer yes

00:39:41,040 --> 00:39:46,480
is there a road map to go the other way

00:39:43,040 --> 00:39:46,480
basically using xamarin from oh

00:39:47,920 --> 00:39:53,280
yes joe yes let me show you uh

00:39:51,119 --> 00:39:55,599
and um we have six minutes left there's

00:39:53,280 --> 00:39:57,280
no way i can so i actually run windows i

00:39:55,599 --> 00:39:58,880
have a windows box that's a virtual

00:39:57,280 --> 00:39:59,440
machine then i have a windows box under

00:39:58,880 --> 00:40:01,280
my desk

00:39:59,440 --> 00:40:02,560
uh we won't have time to go in to go

00:40:01,280 --> 00:40:03,680
into all of that but i can show you

00:40:02,560 --> 00:40:07,440
really quick

00:40:03,680 --> 00:40:09,280
so uh take a look at uno platform okay

00:40:07,440 --> 00:40:12,079
um so what this will let you do let me

00:40:09,280 --> 00:40:14,720
move the chat window here to the right

00:40:12,079 --> 00:40:15,920
which i think you you folks don't see it

00:40:14,720 --> 00:40:18,319
because zoom is smart

00:40:15,920 --> 00:40:20,400
so take a look at una platform i think

00:40:18,319 --> 00:40:22,319
in terms of web assembly support where

00:40:20,400 --> 00:40:25,119
xamarin developers and xaml developers

00:40:22,319 --> 00:40:26,720
want to take our skills back to the web

00:40:25,119 --> 00:40:28,160
i think this is the best solution for

00:40:26,720 --> 00:40:28,960
now because they have done a lot of work

00:40:28,160 --> 00:40:30,720
on there

00:40:28,960 --> 00:40:33,119
they have a web assembly playground

00:40:30,720 --> 00:40:33,520
right so let me it might take a bit to

00:40:33,119 --> 00:40:36,960
load

00:40:33,520 --> 00:40:41,520
we'll see how long so it's just called

00:40:36,960 --> 00:40:44,079
um playground dot platform dot uno okay

00:40:41,520 --> 00:40:46,800
so uh oh then maybe maybe they have

00:40:44,079 --> 00:40:50,319
changed a bunch of things here

00:40:46,800 --> 00:40:54,319
is there uh and let me see if i can move

00:40:50,319 --> 00:40:58,480
uh this thing around snippets

00:40:54,319 --> 00:41:01,920
that's a lot of snippets okay

00:40:58,480 --> 00:41:04,960
uh let me see

00:41:01,920 --> 00:41:06,400
oh sorry yeah yeah it's it's now on the

00:41:04,960 --> 00:41:06,880
right hand side i'm used to it on the

00:41:06,400 --> 00:41:08,480
left

00:41:06,880 --> 00:41:10,079
so take a look at this like these are

00:41:08,480 --> 00:41:13,440
all these xaml

00:41:10,079 --> 00:41:15,040
uh ui elements that you have for uwp

00:41:13,440 --> 00:41:17,200
or xamarin forms which is a different

00:41:15,040 --> 00:41:19,040
dialect but these are essentially

00:41:17,200 --> 00:41:21,119
uh like i think like they had a thing

00:41:19,040 --> 00:41:23,680
called animations which was nice

00:41:21,119 --> 00:41:25,119
uh they have changed around this demo so

00:41:23,680 --> 00:41:27,119
i don't know exactly how to work it

00:41:25,119 --> 00:41:29,280
it's loading so this is all pure xaml

00:41:27,119 --> 00:41:30,160
just like we did in silverlight and it

00:41:29,280 --> 00:41:32,160
just renders

00:41:30,160 --> 00:41:34,960
uh just fine i think i have to hit the

00:41:32,160 --> 00:41:36,640
run to make it run yeah maybe not i mean

00:41:34,960 --> 00:41:38,640
this is a demo you can play around with

00:41:36,640 --> 00:41:40,319
but it's all online and this is where

00:41:38,640 --> 00:41:42,079
xamarin forms developers can

00:41:40,319 --> 00:41:44,079
go back and build web applications and

00:41:42,079 --> 00:41:45,280
you can share code between desktop and

00:41:44,079 --> 00:41:47,760
mobile and

00:41:45,280 --> 00:41:49,680
uh and web so it's a good story all

00:41:47,760 --> 00:41:51,200
right greg jones is asking how much of

00:41:49,680 --> 00:41:52,319
the framework is updated to support the

00:41:51,200 --> 00:41:55,520
latest changes

00:41:52,319 --> 00:41:57,280
uh every year apple will not allow

00:41:55,520 --> 00:41:59,440
new apps unless they have enough compile

00:41:57,280 --> 00:42:00,319
yes yes yes and that is a very relevant

00:41:59,440 --> 00:42:03,119
question for

00:42:00,319 --> 00:42:04,160
all uh oh there is the animation sorry

00:42:03,119 --> 00:42:06,319
my uh

00:42:04,160 --> 00:42:07,920
my little camera window is hiding it so

00:42:06,319 --> 00:42:09,680
this is done purely in xaml which is

00:42:07,920 --> 00:42:10,960
like so much fun sorry i'm digressing

00:42:09,680 --> 00:42:14,319
here

00:42:10,960 --> 00:42:14,880
uh yeah maybe um i broke a few things on

00:42:14,319 --> 00:42:17,440
my end

00:42:14,880 --> 00:42:18,560
but you can you can change some xaml you

00:42:17,440 --> 00:42:20,800
can see this working

00:42:18,560 --> 00:42:21,920
so uh greg to answer your question you

00:42:20,800 --> 00:42:24,880
have zero day support

00:42:21,920 --> 00:42:26,319
so before ios 13 comes along before

00:42:24,880 --> 00:42:28,400
android x comes along

00:42:26,319 --> 00:42:29,760
um they spend a lot of time because now

00:42:28,400 --> 00:42:30,480
none of this is a secret that it's

00:42:29,760 --> 00:42:32,720
coming

00:42:30,480 --> 00:42:33,920
so for months and months xamarin will

00:42:32,720 --> 00:42:36,880
have

00:42:33,920 --> 00:42:38,800
betas and previews out there so they are

00:42:36,880 --> 00:42:40,079
trying to ride the wave and trying to be

00:42:38,800 --> 00:42:43,599
with apple and google

00:42:40,079 --> 00:42:44,000
so day zero whenever an update comes out

00:42:43,599 --> 00:42:46,800
you do

00:42:44,000 --> 00:42:47,680
have the updated bits for xylem forms

00:42:46,800 --> 00:42:49,520
which

00:42:47,680 --> 00:42:50,960
again can get a little tricky sometimes

00:42:49,520 --> 00:42:51,440
because like with xamarin forms like if

00:42:50,960 --> 00:42:53,839
you

00:42:51,440 --> 00:42:55,920
so visual studio has its own bits that

00:42:53,839 --> 00:42:57,599
it's using to do the builds the sdks and

00:42:55,920 --> 00:42:59,200
then you have your simulators

00:42:57,599 --> 00:43:00,960
and you kind of have to constantly keep

00:42:59,200 --> 00:43:02,560
things updated because if it goes out of

00:43:00,960 --> 00:43:04,720
sync then it doesn't know how to do the

00:43:02,560 --> 00:43:07,680
build and it fails on the simulator

00:43:04,720 --> 00:43:08,560
so just stay on the cutting edge um and

00:43:07,680 --> 00:43:11,040
then just keep

00:43:08,560 --> 00:43:12,240
keep taking in the newest sdks if you do

00:43:11,040 --> 00:43:14,319
have that option

00:43:12,240 --> 00:43:16,319
and yes you will have support for uh the

00:43:14,319 --> 00:43:17,839
latest and greatest

00:43:16,319 --> 00:43:20,079
okay one more question i got two more

00:43:17,839 --> 00:43:20,960
minutes left uh or maybe that's the

00:43:20,079 --> 00:43:24,400
question i just

00:43:20,960 --> 00:43:27,200
uh read from craig okay okay so

00:43:24,400 --> 00:43:27,920
uh that's uh that's webassembly that's

00:43:27,200 --> 00:43:30,720
uno

00:43:27,920 --> 00:43:31,599
like i said lots of um flexibility

00:43:30,720 --> 00:43:34,079
nowadays with

00:43:31,599 --> 00:43:36,079
with xaml you can write xamarin from

00:43:34,079 --> 00:43:36,400
xaml that runs on linux you can write it

00:43:36,079 --> 00:43:38,880
for

00:43:36,400 --> 00:43:40,160
tizen you can write it for wpf and you

00:43:38,880 --> 00:43:42,560
can share code

00:43:40,160 --> 00:43:43,599
um between like maybe you have a wpf app

00:43:42,560 --> 00:43:45,440
and you're trying to share with some

00:43:43,599 --> 00:43:48,240
simon forms code you can do that

00:43:45,440 --> 00:43:50,160
and if you want to keep an eye out or on

00:43:48,240 --> 00:43:51,359
like the mvu pattern and where things

00:43:50,160 --> 00:43:53,760
are headed

00:43:51,359 --> 00:43:56,160
you can define the whole visual tree in

00:43:53,760 --> 00:43:58,640
c sharp in a very iterative fashion and

00:43:56,160 --> 00:44:00,640
this has like hot reload built in

00:43:58,640 --> 00:44:02,560
so again we're just opening up the

00:44:00,640 --> 00:44:03,359
funnel for new developers to come in and

00:44:02,560 --> 00:44:06,400
use it

00:44:03,359 --> 00:44:10,480
uh just as easily alright so i'm at

00:44:06,400 --> 00:44:13,200
time almost so let me go back and uh

00:44:10,480 --> 00:44:15,040
see where we stopped and i'll try to i

00:44:13,200 --> 00:44:16,319
think i see a chat so i'll try to answer

00:44:15,040 --> 00:44:18,480
one more question so

00:44:16,319 --> 00:44:20,960
what i'm trying to say is if you are

00:44:18,480 --> 00:44:21,839
doing xamarin forms if you're doing xaml

00:44:20,960 --> 00:44:24,079
or c-sharp

00:44:21,839 --> 00:44:24,960
for any type of application you are in a

00:44:24,079 --> 00:44:27,839
good place

00:44:24,960 --> 00:44:28,480
things are evolving and that is constant

00:44:27,839 --> 00:44:30,240
but

00:44:28,480 --> 00:44:32,640
things are evolving for the better where

00:44:30,240 --> 00:44:35,200
we have more flexibility in how we

00:44:32,640 --> 00:44:37,440
share code and more flexibility in how

00:44:35,200 --> 00:44:38,000
we rendered the ui what design patterns

00:44:37,440 --> 00:44:39,760
we

00:44:38,000 --> 00:44:42,079
we use this is again a microsoft slider

00:44:39,760 --> 00:44:44,319
and so you have a lot of ammunition so

00:44:42,079 --> 00:44:46,480
let's go build the next amazing mobile

00:44:44,319 --> 00:44:49,040
app let's let's go change the world

00:44:46,480 --> 00:44:50,640
and uh yeah that's me again uh so if you

00:44:49,040 --> 00:44:51,359
need to get hold of me that's where i'm

00:44:50,640 --> 00:44:53,839
at

00:44:51,359 --> 00:44:55,760
so i appreciate you i thank you for your

00:44:53,839 --> 00:44:58,800
time uh let me see chat

00:44:55,760 --> 00:45:01,920
uh and it was me i said that

00:44:58,800 --> 00:45:03,520
i see let's finish presentation and we

00:45:01,920 --> 00:45:05,040
have a couple more minutes for more

00:45:03,520 --> 00:45:06,640
questions it's a very interesting topic

00:45:05,040 --> 00:45:07,440
so if a goal couple of minutes over it's

00:45:06,640 --> 00:45:09,200
okay

00:45:07,440 --> 00:45:10,800
no i mean i'm done like i said like i

00:45:09,200 --> 00:45:13,760
can i can show you

00:45:10,800 --> 00:45:14,720
demos for a long long time but uh it's

00:45:13,760 --> 00:45:17,440
the end of the day so

00:45:14,720 --> 00:45:19,520
let's have discussions like what uh any

00:45:17,440 --> 00:45:20,160
any concerns anything you like you don't

00:45:19,520 --> 00:45:22,319
like

00:45:20,160 --> 00:45:24,079
because i i talk to a lot of asylum

00:45:22,319 --> 00:45:25,200
developers and i see both sides of the

00:45:24,079 --> 00:45:27,599
story i see

00:45:25,200 --> 00:45:29,359
uh folks being very happy with some of

00:45:27,599 --> 00:45:32,560
the directions that we are seeing i see

00:45:29,359 --> 00:45:33,040
some concern um and and the concerns are

00:45:32,560 --> 00:45:34,800
about

00:45:33,040 --> 00:45:37,359
like what happens to my existing xamarin

00:45:34,800 --> 00:45:39,119
forms apps and the pms have been telling

00:45:37,359 --> 00:45:40,800
us constantly it's going to be fine and

00:45:39,119 --> 00:45:43,040
it really is going to be fine

00:45:40,800 --> 00:45:44,160
they had proposed like one little

00:45:43,040 --> 00:45:45,760
namespace change

00:45:44,160 --> 00:45:47,520
between xamarin forms and doctor and

00:45:45,760 --> 00:45:49,440
maui and they got a lot of pushback so i

00:45:47,520 --> 00:45:51,920
don't think that even that is happening

00:45:49,440 --> 00:45:53,839
so assume your xamarin forms apps today

00:45:51,920 --> 00:45:56,319
will just run just fine

00:45:53,839 --> 00:45:57,839
in in maui so we got a long distance to

00:45:56,319 --> 00:46:00,000
go between now and

00:45:57,839 --> 00:46:01,520
um almost end of next year to get this

00:46:00,000 --> 00:46:04,000
right and you can

00:46:01,520 --> 00:46:04,560
envision uh xamarin being much more a

00:46:04,000 --> 00:46:06,800
part of

00:46:04,560 --> 00:46:08,079
net uh you will have more confidence

00:46:06,800 --> 00:46:10,560
using the tools uh

00:46:08,079 --> 00:46:12,400
within uh.net and within visual studio

00:46:10,560 --> 00:46:14,000
and the dev loop gets tighter you have

00:46:12,400 --> 00:46:17,119
more options on how to render

00:46:14,000 --> 00:46:19,359
the ui so i think it's these are all

00:46:17,119 --> 00:46:20,720
like health designs and uh things for

00:46:19,359 --> 00:46:23,119
the better

00:46:20,720 --> 00:46:23,760
uh in the chat oh joe thank you thank

00:46:23,119 --> 00:46:26,720
you for

00:46:23,760 --> 00:46:27,680
uh for your comment uh yeah hopefully uh

00:46:26,720 --> 00:46:30,319
this was

00:46:27,680 --> 00:46:31,920
useful uh 45 minutes of your time you

00:46:30,319 --> 00:46:33,680
know how to get hold of me that's that's

00:46:31,920 --> 00:46:36,400
me on twitter so

00:46:33,680 --> 00:46:37,119
yeah chime in and uh we shall uh we

00:46:36,400 --> 00:46:39,839
shall talk

00:46:37,119 --> 00:46:40,319
and uh try to do what is right and if

00:46:39,839 --> 00:46:43,040
something

00:46:40,319 --> 00:46:44,400
is not right we'll share the feedback

00:46:43,040 --> 00:46:45,680
with some friendly folks over at

00:46:44,400 --> 00:46:48,240
microsoft

00:46:45,680 --> 00:46:49,440
so um that's it from me hopefully you

00:46:48,240 --> 00:46:52,720
had a wonderful

00:46:49,440 --> 00:46:53,920
day um at all things open today or and

00:46:52,720 --> 00:46:56,640
yesterday as well

00:46:53,920 --> 00:46:58,400
a lot of content i'm sure so let's all

00:46:56,640 --> 00:47:01,040
take some time to kind of

00:46:58,400 --> 00:47:02,319
assimilate all that knowledge and apply

00:47:01,040 --> 00:47:05,200
them to our projects and

00:47:02,319 --> 00:47:06,240
into our apps so yeah that's it from me

00:47:05,200 --> 00:47:08,000
have a great

00:47:06,240 --> 00:47:09,359
rest of your day elena thank you for

00:47:08,000 --> 00:47:17,599
hosting us

00:47:09,359 --> 00:47:17,599

YouTube URL: https://www.youtube.com/watch?v=3x_QSF2SHfs


