Title: What we can Learn from Go to Write Better Python - Aaron Schlesinger
Publication date: 2020-12-17
Playlist: All Things Open 2020 - Programming Languages Track
Description: 
	Presented by: Aaron Schlesinger, Microsoft
Presented at All Things Open 2020 - Programming Languages Track

Abstract: Go (Golang) became an established language relatively quickly, but only in a small niche called "cloud native" development. Since then, the language has taken off in lots of other areas spanning from web app development to embedded and IoT software.

Go won't ever replace Python -- not even close! -- but the two technologies' use cases are overlapping more and more every day. We haven't yet looked at Python code through the lens of Go design patterns and language principles and it's time that we do. By bringing these languages closer together, we can write software that is faster and more resilient.

In this talk, I'll briefly introduce the origins, evolution, and current usage of Go. The rest of the talk will be live coding. First, we'll write a small app in Go to illustrate some of its strengths and design patterns. Then we'll go apply some of those patterns to a Python app. Finally, we'll put the two pieces of code we wrote together and run Python and Go side-by-side, using the best of each language to build an app.

This talk will be primarily live-coding and no prior knowledge of Go is needed to enjoy this talk.

You'll walk away knowing a little bit about Go, if you didn't already. You'll also leave understanding some new patterns that just might help you write better Python code. You'll also learn when (or if!) you should write some Go to complement your Python app.
YouTube URL: https://www.youtube.com/watch?v=G7MfdV2gmFs


