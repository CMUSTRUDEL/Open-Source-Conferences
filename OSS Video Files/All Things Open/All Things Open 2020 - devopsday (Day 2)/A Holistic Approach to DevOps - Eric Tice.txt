Title: A Holistic Approach to DevOps - Eric Tice
Publication date: 2020-12-18
Playlist: All Things Open 2020 - devopsday (Day 2)
Description: 
	Presented by: Eric Tice, Wipro Technologies
Presented at All Things Open 2020 - devopsday (Day 2)

Abstract: DevOps is a hot topic these days, but are you implementing it as a tool or a culture in your organization?  The adoption of Open Source technologies, Agile methodologies and a changing landscape for supporting new enterprise strategies in the industry are causing a shift in what DevOps traditionally means for them. Innovations such as Microservices, Containerization and Cloud Native are becoming de-facto considerations in many organizations and are leading to new ways of developing team dynamics, changing development methodologies and improved time to market strategies.  These new innovations and ways of working have led to the importance of building a complete DevOps culture.  In this presentation, Eric Tice will discuss the elements that will help you succeed in building a strong DevOps culture to break down the silos, manage your CICD tools and  how leveraging increased observability across your DevOps platform through tools like Hygieia can improve application stability, performance and time to market.
Captions: 
	00:00:05,120 --> 00:00:08,320
um

00:00:05,680 --> 00:00:09,760
good morning afternoon evening everyone

00:00:08,320 --> 00:00:12,320
uh

00:00:09,760 --> 00:00:12,799
as nirmal mentioned i'll be discussing

00:00:12,320 --> 00:00:15,519
um

00:00:12,799 --> 00:00:16,560
devops and a holistic approach starting

00:00:15,519 --> 00:00:19,439
to think through it more of

00:00:16,560 --> 00:00:20,640
a discussion around how you manage your

00:00:19,439 --> 00:00:23,359
software development

00:00:20,640 --> 00:00:24,480
uh processes as well as how we can look

00:00:23,359 --> 00:00:26,160
at observability

00:00:24,480 --> 00:00:27,519
um i know the title is fairly lengthy

00:00:26,160 --> 00:00:31,840
but it'll make

00:00:27,519 --> 00:00:31,840
more sense as we continue so

00:00:32,239 --> 00:00:35,280
so during the pandemic um you know one

00:00:34,640 --> 00:00:37,360
of the things

00:00:35,280 --> 00:00:39,440
we all started to see a lot of problems

00:00:37,360 --> 00:00:41,440
with or maybe we were lucky and didn't

00:00:39,440 --> 00:00:43,440
but as a consulting

00:00:41,440 --> 00:00:45,280
company and as a consultant myself we

00:00:43,440 --> 00:00:46,079
see a lot of organizations have issues

00:00:45,280 --> 00:00:48,079
with

00:00:46,079 --> 00:00:49,520
with continuity problems as more and

00:00:48,079 --> 00:00:53,120
more companies that were

00:00:49,520 --> 00:00:55,039
traditionally on uh sites or required

00:00:53,120 --> 00:00:57,199
most of their development or staff to be

00:00:55,039 --> 00:00:59,440
in the building

00:00:57,199 --> 00:01:01,199
they found that as you needed to

00:00:59,440 --> 00:01:02,160
progress and you could no longer make it

00:01:01,199 --> 00:01:04,159
to the office

00:01:02,160 --> 00:01:05,600
um this really became a key

00:01:04,159 --> 00:01:08,799
consideration

00:01:05,600 --> 00:01:10,799
across the enterprise as to well devops

00:01:08,799 --> 00:01:11,680
and devsecops is maybe something that we

00:01:10,799 --> 00:01:13,680
need to get to

00:01:11,680 --> 00:01:15,520
or our manual processes are good enough

00:01:13,680 --> 00:01:18,240
for now

00:01:15,520 --> 00:01:19,600
but throwing to the forefront of months

00:01:18,240 --> 00:01:21,520
of not being able to

00:01:19,600 --> 00:01:22,960
collaborate more effectively within the

00:01:21,520 --> 00:01:25,360
office

00:01:22,960 --> 00:01:27,040
or to automate tasks made it very

00:01:25,360 --> 00:01:30,880
difficult for

00:01:27,040 --> 00:01:32,799
development system engineers qa and

00:01:30,880 --> 00:01:34,079
all of the business staff to really

00:01:32,799 --> 00:01:36,560
effectively work

00:01:34,079 --> 00:01:37,600
cohesively within the organization so

00:01:36,560 --> 00:01:39,439
really starting to jump

00:01:37,600 --> 00:01:40,640
forward thinking about how the

00:01:39,439 --> 00:01:43,119
enterprise can

00:01:40,640 --> 00:01:45,119
can start to deal with this the

00:01:43,119 --> 00:01:46,880
increased cost of having to do this

00:01:45,119 --> 00:01:49,040
is one of the key concepts where

00:01:46,880 --> 00:01:50,399
devsecops really looks to focus on

00:01:49,040 --> 00:01:52,479
reduction of costs

00:01:50,399 --> 00:01:54,880
and as the focus of this starts to

00:01:52,479 --> 00:01:57,040
become more and more prevalent

00:01:54,880 --> 00:01:58,240
in the industry is that it already was

00:01:57,040 --> 00:02:01,119
on the uprise but

00:01:58,240 --> 00:02:02,640
since the pandemic has forced the issue

00:02:01,119 --> 00:02:05,600
more and more companies are looking for

00:02:02,640 --> 00:02:07,600
ways to really reduce that footprint

00:02:05,600 --> 00:02:09,280
customer satisfaction of course is hurt

00:02:07,600 --> 00:02:11,120
in a number of industries

00:02:09,280 --> 00:02:12,640
you know companies like amazon who are

00:02:11,120 --> 00:02:16,720
already doing most of their

00:02:12,640 --> 00:02:19,840
uh delivery and other components

00:02:16,720 --> 00:02:21,680
and allowing for external uh developers

00:02:19,840 --> 00:02:23,360
to to work from home

00:02:21,680 --> 00:02:25,120
really didn't see as much of an impact

00:02:23,360 --> 00:02:27,840
but a lot of organizations

00:02:25,120 --> 00:02:29,840
definitely did so really thinking about

00:02:27,840 --> 00:02:32,480
adopting new ways of working and and of

00:02:29,840 --> 00:02:34,319
course that business continuity planning

00:02:32,480 --> 00:02:35,599
is something that we've all started to

00:02:34,319 --> 00:02:37,440
have to focus very

00:02:35,599 --> 00:02:38,959
closely on as we continue to move

00:02:37,440 --> 00:02:40,560
forward

00:02:38,959 --> 00:02:42,080
as we still fight through the last of

00:02:40,560 --> 00:02:45,920
the pandemic hopefully over

00:02:42,080 --> 00:02:48,720
soon and thinking about the future

00:02:45,920 --> 00:02:50,000
so in the application developments

00:02:48,720 --> 00:02:52,560
landscape i mean we've

00:02:50,000 --> 00:02:53,920
all seen this in one degree or another

00:02:52,560 --> 00:02:55,680
the the waterfall

00:02:53,920 --> 00:02:57,040
of where we all begin depending on where

00:02:55,680 --> 00:02:59,680
you started your career or

00:02:57,040 --> 00:03:01,760
how legacy your your current uh

00:02:59,680 --> 00:03:04,159
application system may be

00:03:01,760 --> 00:03:06,080
um you may be continuing to want to run

00:03:04,159 --> 00:03:09,840
on a mainframe or do very long

00:03:06,080 --> 00:03:11,920
drawn out deliveries which may take

00:03:09,840 --> 00:03:14,239
months if not years to to come out with

00:03:11,920 --> 00:03:16,319
the next version of your software

00:03:14,239 --> 00:03:18,000
and as things continue to progress over

00:03:16,319 --> 00:03:19,519
the years agile became

00:03:18,000 --> 00:03:21,519
and lean and some of the other

00:03:19,519 --> 00:03:22,720
components really became a conversation

00:03:21,519 --> 00:03:24,879
point about how do we

00:03:22,720 --> 00:03:26,319
improve time to market and improve the

00:03:24,879 --> 00:03:29,040
ability to

00:03:26,319 --> 00:03:30,480
to actively work in a more efficient

00:03:29,040 --> 00:03:32,799
manner

00:03:30,480 --> 00:03:34,480
that took less time allowed us to push

00:03:32,799 --> 00:03:37,120
things out in you know weeks

00:03:34,480 --> 00:03:39,120
uh rather than months or years and this

00:03:37,120 --> 00:03:40,720
became a good stepping stone a lot of

00:03:39,120 --> 00:03:41,360
companies are starting to do and and

00:03:40,720 --> 00:03:44,159
this

00:03:41,360 --> 00:03:45,519
you know this also kind of fed well into

00:03:44,159 --> 00:03:47,200
the cloud as it started

00:03:45,519 --> 00:03:50,400
to become more and more of a prevalent

00:03:47,200 --> 00:03:53,280
thing as amazon and google and

00:03:50,400 --> 00:03:55,200
microsoft to name you know the three big

00:03:53,280 --> 00:03:58,480
players in the market

00:03:55,200 --> 00:04:00,239
became more of a discussion point

00:03:58,480 --> 00:04:02,159
how do we scale and continue to meet

00:04:00,239 --> 00:04:03,760
customer needs at a more rapid pace

00:04:02,159 --> 00:04:06,239
became a discussion

00:04:03,760 --> 00:04:08,239
but then you know many organizations

00:04:06,239 --> 00:04:09,680
have talked about devops and

00:04:08,239 --> 00:04:12,319
you know potentially think they know

00:04:09,680 --> 00:04:13,360
what it means but the modern era of

00:04:12,319 --> 00:04:16,560
really moving

00:04:13,360 --> 00:04:17,280
past just a basic agile and into a full

00:04:16,560 --> 00:04:21,199
devops

00:04:17,280 --> 00:04:24,000
type of deployment model as well as

00:04:21,199 --> 00:04:25,280
what we'll talk about more of a culture

00:04:24,000 --> 00:04:26,880
adoption

00:04:25,280 --> 00:04:28,400
is something that many companies are

00:04:26,880 --> 00:04:31,280
really starting to uh

00:04:28,400 --> 00:04:33,680
to really strive toward and need help

00:04:31,280 --> 00:04:35,840
understanding

00:04:33,680 --> 00:04:38,000
so you know really one of the key

00:04:35,840 --> 00:04:40,080
components of devops is that many people

00:04:38,000 --> 00:04:42,720
think of it as ci cd

00:04:40,080 --> 00:04:44,240
and while devops you know the merging of

00:04:42,720 --> 00:04:47,680
development and operations

00:04:44,240 --> 00:04:48,639
certainly utilizes ci cd within its tool

00:04:47,680 --> 00:04:50,240
stack

00:04:48,639 --> 00:04:52,000
that's not really what devops is all

00:04:50,240 --> 00:04:55,199
about

00:04:52,000 --> 00:04:56,720
um you know one of the key components of

00:04:55,199 --> 00:04:59,600
what devops really is

00:04:56,720 --> 00:05:02,720
is it's a merging of of and changing of

00:04:59,600 --> 00:05:04,479
the culture within an organization

00:05:02,720 --> 00:05:06,160
you know one of the key components many

00:05:04,479 --> 00:05:08,160
people don't understand is that

00:05:06,160 --> 00:05:10,080
you know while it is devanops it's also

00:05:08,160 --> 00:05:13,520
qa it's also

00:05:10,080 --> 00:05:16,560
management business analysts

00:05:13,520 --> 00:05:18,560
security team everyone within the

00:05:16,560 --> 00:05:20,000
organization really needs to buy into

00:05:18,560 --> 00:05:21,840
this culture

00:05:20,000 --> 00:05:24,080
and you know the conversation around

00:05:21,840 --> 00:05:24,720
culture is well we have a great culture

00:05:24,080 --> 00:05:26,160
don't we

00:05:24,720 --> 00:05:28,479
you know we potentially do a lot of

00:05:26,160 --> 00:05:30,800
things together um we have

00:05:28,479 --> 00:05:32,000
we have parties we you know get along

00:05:30,800 --> 00:05:34,320
well you know we do

00:05:32,000 --> 00:05:36,560
we make we're not red every year so you

00:05:34,320 --> 00:05:38,560
know we're doing fine aren't we

00:05:36,560 --> 00:05:40,560
well one of the key things and i love

00:05:38,560 --> 00:05:42,160
this quote it's a great show if you

00:05:40,560 --> 00:05:44,160
managed to see it at one point i'm sure

00:05:42,160 --> 00:05:45,280
you've heard it multiple sources in the

00:05:44,160 --> 00:05:46,880
past but

00:05:45,280 --> 00:05:48,800
to solve a problem you really need to

00:05:46,880 --> 00:05:50,720
understand that you have one

00:05:48,800 --> 00:05:52,800
um you know that's really the first step

00:05:50,720 --> 00:05:54,080
you have to really have the

00:05:52,800 --> 00:05:55,919
understanding that

00:05:54,080 --> 00:05:58,639
something's wrong in the organization

00:05:55,919 --> 00:06:00,720
and while that cohesion at some points

00:05:58,639 --> 00:06:01,840
the management or executive level may

00:06:00,720 --> 00:06:03,520
understand

00:06:01,840 --> 00:06:05,360
that we're not quite meeting our numbers

00:06:03,520 --> 00:06:07,360
the resources aren't quite as efficient

00:06:05,360 --> 00:06:10,080
as we'd want them to be

00:06:07,360 --> 00:06:10,800
um you know those these five components

00:06:10,080 --> 00:06:13,520
or symptoms

00:06:10,800 --> 00:06:15,520
are just a few but very important in the

00:06:13,520 --> 00:06:17,360
context where

00:06:15,520 --> 00:06:18,639
the strategy and culture really don't

00:06:17,360 --> 00:06:20,560
fit you know the

00:06:18,639 --> 00:06:22,720
we've always done it this way but we

00:06:20,560 --> 00:06:25,199
want to move forward how do we do this

00:06:22,720 --> 00:06:26,160
um don't always mesh well within an

00:06:25,199 --> 00:06:28,400
organization

00:06:26,160 --> 00:06:30,800
you know being manual is one of the

00:06:28,400 --> 00:06:33,039
biggest component problems

00:06:30,800 --> 00:06:34,000
where if there's no automation agile

00:06:33,039 --> 00:06:36,479
while it's good

00:06:34,000 --> 00:06:38,800
to release things quickly still sees a

00:06:36,479 --> 00:06:41,919
bottleneck when you're trying to deploy

00:06:38,800 --> 00:06:44,880
and qa in development you know

00:06:41,919 --> 00:06:45,680
as the common term is throwing things

00:06:44,880 --> 00:06:47,440
over the wall

00:06:45,680 --> 00:06:49,039
so development will finish something

00:06:47,440 --> 00:06:51,039
they say this is done it's functional

00:06:49,039 --> 00:06:53,840
they'll throw it over the wall

00:06:51,039 --> 00:06:55,599
and qa will test it and find problems

00:06:53,840 --> 00:06:58,319
and then throw it back over the wall

00:06:55,599 --> 00:06:59,039
and a game of hot potato ensues and then

00:06:58,319 --> 00:07:00,639
in the

00:06:59,039 --> 00:07:04,080
moving down the path the same thing

00:07:00,639 --> 00:07:06,080
happens very much in delivery

00:07:04,080 --> 00:07:07,599
where essentially everything looks fine

00:07:06,080 --> 00:07:09,199
but then when it's deployed it may not

00:07:07,599 --> 00:07:11,039
be performant or

00:07:09,199 --> 00:07:12,720
you may find additional issues tied to

00:07:11,039 --> 00:07:15,120
the network

00:07:12,720 --> 00:07:16,800
or how the application is running you

00:07:15,120 --> 00:07:21,120
may have the wrong versions of

00:07:16,800 --> 00:07:22,800
jar files to use java as an example

00:07:21,120 --> 00:07:24,000
one of the biggest problems again is

00:07:22,800 --> 00:07:25,680
while they throw everything over the

00:07:24,000 --> 00:07:26,639
wall no one seems to communicate

00:07:25,680 --> 00:07:30,080
together

00:07:26,639 --> 00:07:32,720
the silo or groups don't cohesively act

00:07:30,080 --> 00:07:34,400
as an organization they act more as a i

00:07:32,720 --> 00:07:37,199
did my job you do your job

00:07:34,400 --> 00:07:38,960
type of scenario which can often cause

00:07:37,199 --> 00:07:42,000
that culture to

00:07:38,960 --> 00:07:45,039
to not really be as effective as you

00:07:42,000 --> 00:07:47,280
want it to be so thinking through the

00:07:45,039 --> 00:07:48,720
the trends in devops you know as we

00:07:47,280 --> 00:07:49,360
talked a little bit about the fact that

00:07:48,720 --> 00:07:51,120
this is

00:07:49,360 --> 00:07:53,360
jumping to the forefront even though it

00:07:51,120 --> 00:07:55,360
was on the uprise

00:07:53,360 --> 00:07:57,039
and you know i'll apologize for the the

00:07:55,360 --> 00:07:58,720
bar graph being a couple years out of

00:07:57,039 --> 00:08:00,080
date

00:07:58,720 --> 00:08:02,000
unfortunately i haven't been able to

00:08:00,080 --> 00:08:03,120
find a new one but one thing we we can

00:08:02,000 --> 00:08:07,120
say is that

00:08:03,120 --> 00:08:09,199
in the next um year there's four

00:08:07,120 --> 00:08:10,240
billion dollars worth of devops in the

00:08:09,199 --> 00:08:13,360
market

00:08:10,240 --> 00:08:15,599
worth of opportunity many organizations

00:08:13,360 --> 00:08:16,720
or most large organizations are starting

00:08:15,599 --> 00:08:19,520
to move more toward

00:08:16,720 --> 00:08:22,080
uh complete devops or at least start to

00:08:19,520 --> 00:08:24,319
research devops as a solution and kagger

00:08:22,080 --> 00:08:27,759
suggests that you know 26

00:08:24,319 --> 00:08:29,919
rise in that over the next year um

00:08:27,759 --> 00:08:31,440
which you know is a fairly significant

00:08:29,919 --> 00:08:33,519
jump over a quarter

00:08:31,440 --> 00:08:34,479
and to see over the next you know five

00:08:33,519 --> 00:08:37,919
to ten years

00:08:34,479 --> 00:08:39,599
most organizations should look to adopt

00:08:37,919 --> 00:08:41,599
but as you can see from the bar graph

00:08:39,599 --> 00:08:43,519
you know a majority of teams are

00:08:41,599 --> 00:08:45,600
at least working we're trying to

00:08:43,519 --> 00:08:47,120
practice that and that continues to rise

00:08:45,600 --> 00:08:50,000
year on year

00:08:47,120 --> 00:08:50,800
but adoption is still somewhat slow it

00:08:50,000 --> 00:08:52,880
does cost

00:08:50,800 --> 00:08:54,240
potentially money and operations to do

00:08:52,880 --> 00:08:57,120
this in an organization

00:08:54,240 --> 00:09:01,120
and the lack of knowledge is one key

00:08:57,120 --> 00:09:01,120
component that can always be an issue

00:09:01,200 --> 00:09:08,240
so so what is our impediment to change

00:09:05,600 --> 00:09:10,480
you know as i mentioned different groups

00:09:08,240 --> 00:09:12,399
this image is very telling a lot of

00:09:10,480 --> 00:09:15,120
organizations tend to break

00:09:12,399 --> 00:09:16,800
responsibilities into very defined roles

00:09:15,120 --> 00:09:18,640
and silos

00:09:16,800 --> 00:09:20,720
within an organization as i mentioned

00:09:18,640 --> 00:09:21,360
you can have your your business folks

00:09:20,720 --> 00:09:25,040
and then

00:09:21,360 --> 00:09:26,800
development qa your operations group all

00:09:25,040 --> 00:09:27,279
broken into different groups and even if

00:09:26,800 --> 00:09:30,640
you have an

00:09:27,279 --> 00:09:32,480
agile team um where qa and development

00:09:30,640 --> 00:09:33,519
and maybe even your business analysts or

00:09:32,480 --> 00:09:36,800
dbas

00:09:33,519 --> 00:09:39,839
are are working together there's

00:09:36,800 --> 00:09:41,920
still the disconnect with operations and

00:09:39,839 --> 00:09:43,600
in your infrastructure group many times

00:09:41,920 --> 00:09:47,519
within an organization

00:09:43,600 --> 00:09:49,680
so having these separate uh stages or

00:09:47,519 --> 00:09:51,839
or gates within an organization where

00:09:49,680 --> 00:09:54,399
the project manager and ba

00:09:51,839 --> 00:09:56,000
do most of the front work and then merge

00:09:54,399 --> 00:09:59,440
it into the agile team

00:09:56,000 --> 00:10:02,160
and then back to operations can often

00:09:59,440 --> 00:10:03,760
cause those bottlenecks that i mentioned

00:10:02,160 --> 00:10:04,000
of throwing things over the wall even

00:10:03,760 --> 00:10:06,880
with

00:10:04,000 --> 00:10:07,760
an agile team that can slow things down

00:10:06,880 --> 00:10:09,920
and

00:10:07,760 --> 00:10:12,000
cause issues one way a lot of

00:10:09,920 --> 00:10:13,600
organizations tend to try and solve this

00:10:12,000 --> 00:10:15,600
problem

00:10:13,600 --> 00:10:17,600
is to create what they call a devops

00:10:15,600 --> 00:10:19,519
engineering group

00:10:17,600 --> 00:10:22,000
well you know in reality this ends up

00:10:19,519 --> 00:10:23,760
being just another silo

00:10:22,000 --> 00:10:25,120
instead of using the developers and the

00:10:23,760 --> 00:10:27,600
operations team

00:10:25,120 --> 00:10:28,880
and merging them um having the overlap

00:10:27,600 --> 00:10:30,880
of responsibilities

00:10:28,880 --> 00:10:32,399
and understanding of continuous

00:10:30,880 --> 00:10:34,880
collaboration

00:10:32,399 --> 00:10:36,240
another group is formed that just takes

00:10:34,880 --> 00:10:38,640
over

00:10:36,240 --> 00:10:39,680
the devops engineering which really in a

00:10:38,640 --> 00:10:41,200
lot of organizations

00:10:39,680 --> 00:10:43,040
ends up being no more than a release

00:10:41,200 --> 00:10:45,360
management group

00:10:43,040 --> 00:10:47,279
that manages deployments some

00:10:45,360 --> 00:10:49,600
organizations do understand this

00:10:47,279 --> 00:10:51,040
and they rather than it being a devops

00:10:49,600 --> 00:10:53,600
engineering group

00:10:51,040 --> 00:10:55,680
they starts to build this but this this

00:10:53,600 --> 00:10:58,839
is a silo that i see fairly often in

00:10:55,680 --> 00:11:01,839
many organizations that try to adopt

00:10:58,839 --> 00:11:01,839
devops

00:11:02,800 --> 00:11:06,560
so that culture for stability rather

00:11:04,880 --> 00:11:08,560
than growth is one of those things that

00:11:06,560 --> 00:11:10,480
we we often have to discuss

00:11:08,560 --> 00:11:12,079
within an organization you know as

00:11:10,480 --> 00:11:13,600
companies continue to build out their

00:11:12,079 --> 00:11:15,760
silos it's

00:11:13,600 --> 00:11:17,920
that conversation point about well

00:11:15,760 --> 00:11:20,160
that's mine that's yours

00:11:17,920 --> 00:11:22,560
how do we how do we just get this out to

00:11:20,160 --> 00:11:24,320
the customer as quickly as possible but

00:11:22,560 --> 00:11:25,920
you know we continue to see a number of

00:11:24,320 --> 00:11:28,560
problems and those

00:11:25,920 --> 00:11:29,920
challenges really become well silos as

00:11:28,560 --> 00:11:32,480
we discussed

00:11:29,920 --> 00:11:33,680
you know a project-centric mindset as we

00:11:32,480 --> 00:11:35,920
think about

00:11:33,680 --> 00:11:36,800
devops it's crucial to really think

00:11:35,920 --> 00:11:39,680
beyond that

00:11:36,800 --> 00:11:41,120
to really start to think more about

00:11:39,680 --> 00:11:42,959
enterprise

00:11:41,120 --> 00:11:44,640
as we think project mindset it's the

00:11:42,959 --> 00:11:46,800
immediate need rather than

00:11:44,640 --> 00:11:48,320
how do we grow this and how do we really

00:11:46,800 --> 00:11:51,360
become

00:11:48,320 --> 00:11:52,880
more innovative in forward thinking and

00:11:51,360 --> 00:11:55,680
that lack of collaboration

00:11:52,880 --> 00:11:57,440
you know certainly does everyone really

00:11:55,680 --> 00:11:58,800
know what's happening at every stage and

00:11:57,440 --> 00:12:01,760
how do we

00:11:58,800 --> 00:12:03,920
potentially improve that by allowing for

00:12:01,760 --> 00:12:07,680
continuous stakeholder understanding

00:12:03,920 --> 00:12:09,760
and working together you know resistance

00:12:07,680 --> 00:12:12,160
is often an issue i mentioned legacy

00:12:09,760 --> 00:12:15,040
and waterfall at the beginning of this

00:12:12,160 --> 00:12:17,360
discussion well even in an agile

00:12:15,040 --> 00:12:19,360
group many organizations tend to adopt

00:12:17,360 --> 00:12:20,800
agile in a way that it's a development

00:12:19,360 --> 00:12:22,880
methodology

00:12:20,800 --> 00:12:24,320
rather than it's truly a way from

00:12:22,880 --> 00:12:27,279
management all the way

00:12:24,320 --> 00:12:29,600
down to the customer how you can adopt

00:12:27,279 --> 00:12:32,800
and better improve

00:12:29,600 --> 00:12:34,959
the discussion around delivering your

00:12:32,800 --> 00:12:36,240
products or your projects in a more

00:12:34,959 --> 00:12:39,279
enterprise

00:12:36,240 --> 00:12:40,399
friendly way and often you'll have some

00:12:39,279 --> 00:12:42,399
people who may have worked in the

00:12:40,399 --> 00:12:43,920
industry for quite some time doing a

00:12:42,399 --> 00:12:47,040
specific set of tasks

00:12:43,920 --> 00:12:50,480
always having been shoved in a silo not

00:12:47,040 --> 00:12:52,959
really wanting to change what they do

00:12:50,480 --> 00:12:54,800
and again you know lack of documentation

00:12:52,959 --> 00:12:56,079
and retention of that knowledge well you

00:12:54,800 --> 00:12:57,839
may have some that are resistant to

00:12:56,079 --> 00:12:59,279
change you may have had some

00:12:57,839 --> 00:13:01,440
you know attrition where you

00:12:59,279 --> 00:13:02,720
continuously see key players leave the

00:13:01,440 --> 00:13:05,760
organization and

00:13:02,720 --> 00:13:08,160
lose that domain knowledge and

00:13:05,760 --> 00:13:10,000
because you know the application is very

00:13:08,160 --> 00:13:13,600
old a lot of the documentation

00:13:10,000 --> 00:13:15,760
may not have been continuously updated

00:13:13,600 --> 00:13:17,040
and then you know again those internal

00:13:15,760 --> 00:13:20,079
resources

00:13:17,040 --> 00:13:21,839
be they just maybe not having enough for

00:13:20,079 --> 00:13:23,519
the new technologies or

00:13:21,839 --> 00:13:25,519
you know again the resistance makes it

00:13:23,519 --> 00:13:27,680
difficult to ramp up to new

00:13:25,519 --> 00:13:30,560
new opportunities and to make that

00:13:27,680 --> 00:13:30,560
positive change

00:13:30,639 --> 00:13:34,320
so one of the key components of devops

00:13:33,760 --> 00:13:37,680
is

00:13:34,320 --> 00:13:39,360
really that it comes from open source

00:13:37,680 --> 00:13:40,800
you think about the phoenix project

00:13:39,360 --> 00:13:41,760
which is a book some of you may or may

00:13:40,800 --> 00:13:44,240
not have read

00:13:41,760 --> 00:13:45,680
it's a very good primer for really

00:13:44,240 --> 00:13:49,360
moving forward within

00:13:45,680 --> 00:13:52,399
a devops mindset but as you think about

00:13:49,360 --> 00:13:54,639
the ideologies and the processes

00:13:52,399 --> 00:13:56,320
that devops tries to incorporate well

00:13:54,639 --> 00:13:57,040
open source software does a lot of the

00:13:56,320 --> 00:14:00,240
very

00:13:57,040 --> 00:14:01,920
similar things um quick innovation rapid

00:14:00,240 --> 00:14:04,800
release

00:14:01,920 --> 00:14:07,199
really trying to avoid being locked into

00:14:04,800 --> 00:14:09,839
a very specific subset of features and

00:14:07,199 --> 00:14:11,680
capabilities

00:14:09,839 --> 00:14:13,120
and with open source very much like

00:14:11,680 --> 00:14:15,360
devops as you're embracing and

00:14:13,120 --> 00:14:17,120
understanding what those failures are

00:14:15,360 --> 00:14:21,040
how can i move forward and how can i

00:14:17,120 --> 00:14:23,279
adopt change in a positive way

00:14:21,040 --> 00:14:24,959
to make that our organization our

00:14:23,279 --> 00:14:26,880
cultural fit really continue to

00:14:24,959 --> 00:14:29,680
constantly grow and improve which is

00:14:26,880 --> 00:14:31,440
something open source is

00:14:29,680 --> 00:14:34,000
through its developers and its large

00:14:31,440 --> 00:14:36,079
community and tens of thousands

00:14:34,000 --> 00:14:37,839
hundreds of thousands and millions of

00:14:36,079 --> 00:14:41,279
projects

00:14:37,839 --> 00:14:45,040
we continue to see grow year by year

00:14:41,279 --> 00:14:48,560
devops is certainly mostly

00:14:45,040 --> 00:14:50,000
open source in nature so as i mentioned

00:14:48,560 --> 00:14:52,399
open source and devops are

00:14:50,000 --> 00:14:54,079
kind of go hand in hand well a reality

00:14:52,399 --> 00:14:56,399
is and this is just a subset

00:14:54,079 --> 00:14:58,240
of tooling but if you think through the

00:14:56,399 --> 00:14:59,760
different components of what devops

00:14:58,240 --> 00:15:01,279
really means

00:14:59,760 --> 00:15:03,120
it's it's everything within the

00:15:01,279 --> 00:15:06,000
application ecosystem

00:15:03,120 --> 00:15:06,639
it's how i deploy it the security how i

00:15:06,000 --> 00:15:09,760
store

00:15:06,639 --> 00:15:13,040
my my code my

00:15:09,760 --> 00:15:15,199
deployables how i test how i

00:15:13,040 --> 00:15:16,480
monitor and alert for my complete

00:15:15,199 --> 00:15:18,800
application

00:15:16,480 --> 00:15:21,279
so across this landscape this is just a

00:15:18,800 --> 00:15:21,680
subset of a very large number of open

00:15:21,279 --> 00:15:23,279
source

00:15:21,680 --> 00:15:24,720
tools that are prevalent within the

00:15:23,279 --> 00:15:27,440
industry

00:15:24,720 --> 00:15:29,680
that continue to grow um and we'll talk

00:15:27,440 --> 00:15:32,720
a little bit more about that

00:15:29,680 --> 00:15:34,800
so as we think about driving that

00:15:32,720 --> 00:15:37,040
open source you know it really becomes

00:15:34,800 --> 00:15:39,040
that that partnership that cohesive

00:15:37,040 --> 00:15:40,480
um discussion between all of the

00:15:39,040 --> 00:15:42,560
different groups in the company

00:15:40,480 --> 00:15:44,320
and it revolves very heavily around the

00:15:42,560 --> 00:15:45,680
people in the in the culture within the

00:15:44,320 --> 00:15:48,720
organization

00:15:45,680 --> 00:15:49,519
and as i mentioned with agile you know

00:15:48,720 --> 00:15:51,600
devops

00:15:49,519 --> 00:15:53,120
and agile go very closely together and a

00:15:51,600 --> 00:15:54,880
lot of the concepts

00:15:53,120 --> 00:15:56,880
and the processes and methodologies

00:15:54,880 --> 00:15:59,680
around how you'll adopt devops

00:15:56,880 --> 00:16:00,320
but it is a top-down solution or

00:15:59,680 --> 00:16:02,160
bottom-up

00:16:00,320 --> 00:16:04,000
if you choose to look at that way but

00:16:02,160 --> 00:16:06,000
everyone in the organization needs to

00:16:04,000 --> 00:16:08,560
adopt the change

00:16:06,000 --> 00:16:09,600
new ways of looking at delivery new ways

00:16:08,560 --> 00:16:12,800
of looking at

00:16:09,600 --> 00:16:15,120
observing and scaling your applications

00:16:12,800 --> 00:16:17,040
based on you know more realistic

00:16:15,120 --> 00:16:18,480
real-time understanding of how your

00:16:17,040 --> 00:16:21,759
application is

00:16:18,480 --> 00:16:24,160
is going from ideation all the way to

00:16:21,759 --> 00:16:26,560
delivery and post-production

00:16:24,160 --> 00:16:28,800
and of course i mentioned ci cd well not

00:16:26,560 --> 00:16:30,880
the core tenet of devops

00:16:28,800 --> 00:16:34,079
the tools used for automation you know

00:16:30,880 --> 00:16:37,440
should be holistic across the

00:16:34,079 --> 00:16:39,040
entire application landscape and

00:16:37,440 --> 00:16:40,720
one of the key things that's missed and

00:16:39,040 --> 00:16:42,240
we'll talk in greater detail at the end

00:16:40,720 --> 00:16:44,240
of this discussion about this

00:16:42,240 --> 00:16:45,600
is data and insights while a lot of

00:16:44,240 --> 00:16:47,519
companies do monitor

00:16:45,600 --> 00:16:49,920
you know complete understanding and

00:16:47,519 --> 00:16:51,360
observability of your application is one

00:16:49,920 --> 00:16:53,759
thing that is

00:16:51,360 --> 00:16:56,000
often left to the end of a devops

00:16:53,759 --> 00:16:59,279
discussion

00:16:56,000 --> 00:17:01,040
but those characteristics again you know

00:16:59,279 --> 00:17:03,040
one of the key components of open source

00:17:01,040 --> 00:17:05,360
is really empowering

00:17:03,040 --> 00:17:07,919
people to be innovative and make changes

00:17:05,360 --> 00:17:10,400
moving forward within the context of

00:17:07,919 --> 00:17:12,160
technology and not just resting on

00:17:10,400 --> 00:17:14,880
something well it works

00:17:12,160 --> 00:17:16,480
why fix it always looking for the best

00:17:14,880 --> 00:17:17,439
possible solution and how to move

00:17:16,480 --> 00:17:20,240
forward

00:17:17,439 --> 00:17:22,240
and devops and open source work very

00:17:20,240 --> 00:17:25,199
closely in this concept

00:17:22,240 --> 00:17:26,160
and should be implemented in that way

00:17:25,199 --> 00:17:28,319
thinking about

00:17:26,160 --> 00:17:31,440
you know the agile methodologies of

00:17:28,319 --> 00:17:33,760
frequent releases in full automation

00:17:31,440 --> 00:17:34,880
we mentioned already but this opens up

00:17:33,760 --> 00:17:37,039
for a lot of the new

00:17:34,880 --> 00:17:39,039
technologies and new components that

00:17:37,039 --> 00:17:41,200
many people are talking about

00:17:39,039 --> 00:17:43,360
um the methodologies and new

00:17:41,200 --> 00:17:46,960
architectures around microservices

00:17:43,360 --> 00:17:50,000
cloud native and containerization all

00:17:46,960 --> 00:17:51,760
need new tooling throwing things over

00:17:50,000 --> 00:17:53,679
the wall to the cloud or being able to

00:17:51,760 --> 00:17:56,160
work in a multi-cloud environment brings

00:17:53,679 --> 00:17:58,080
up the conversation about

00:17:56,160 --> 00:17:59,600
how do i do this in a way where i'm not

00:17:58,080 --> 00:18:01,600
just recreating it

00:17:59,600 --> 00:18:03,679
how can i do this rapidly across

00:18:01,600 --> 00:18:05,360
multiple availability zones to use an

00:18:03,679 --> 00:18:08,320
amazon term

00:18:05,360 --> 00:18:08,960
or multiple data centers and then

00:18:08,320 --> 00:18:11,200
automating

00:18:08,960 --> 00:18:15,600
things like security and of course

00:18:11,200 --> 00:18:17,840
quality checking and analyzing that data

00:18:15,600 --> 00:18:20,000
many of you have seen this uh image

00:18:17,840 --> 00:18:21,679
previously or something very similar

00:18:20,000 --> 00:18:23,360
this really starts to bring together

00:18:21,679 --> 00:18:25,919
that collaborative discussion

00:18:23,360 --> 00:18:26,640
where you have development continuous

00:18:25,919 --> 00:18:29,440
integration

00:18:26,640 --> 00:18:31,440
testing delivery and something you know

00:18:29,440 --> 00:18:33,760
missing from this diagram but continuous

00:18:31,440 --> 00:18:35,919
security as well

00:18:33,760 --> 00:18:36,880
doing those vulnerability and license

00:18:35,919 --> 00:18:39,440
checks

00:18:36,880 --> 00:18:41,120
um using advanced tooling to understand

00:18:39,440 --> 00:18:44,000
especially with the leveraging of

00:18:41,120 --> 00:18:45,760
open source you know are do i have

00:18:44,000 --> 00:18:48,720
licenses that

00:18:45,760 --> 00:18:51,039
potentially conflict with one another is

00:18:48,720 --> 00:18:54,000
my application secure or vulnerable

00:18:51,039 --> 00:18:54,320
and how do i manage that but as you can

00:18:54,000 --> 00:18:56,160
see

00:18:54,320 --> 00:18:58,240
this is a continuous loop of

00:18:56,160 --> 00:19:00,559
collaborative efforts across multiple

00:18:58,240 --> 00:19:00,559
groups

00:19:01,840 --> 00:19:05,760
so moving past the comfort zone you know

00:19:04,000 --> 00:19:06,240
as i mentioned a lot of organizations

00:19:05,760 --> 00:19:08,559
have

00:19:06,240 --> 00:19:10,080
companies that are resistant to change

00:19:08,559 --> 00:19:12,240
really understanding that problem

00:19:10,080 --> 00:19:14,080
and breaking down those silos is one of

00:19:12,240 --> 00:19:16,320
the key first steps

00:19:14,080 --> 00:19:18,160
understanding that you know people need

00:19:16,320 --> 00:19:19,919
to essentially learn

00:19:18,160 --> 00:19:21,280
and cross train across multiple

00:19:19,919 --> 00:19:23,760
different types of

00:19:21,280 --> 00:19:24,799
of efforts and understand how their

00:19:23,760 --> 00:19:27,440
current job

00:19:24,799 --> 00:19:30,480
you know affects and works with others

00:19:27,440 --> 00:19:33,600
so that that overlap can be achieved

00:19:30,480 --> 00:19:35,120
for greater efficiency and faster time

00:19:33,600 --> 00:19:37,280
to market

00:19:35,120 --> 00:19:38,160
and convincing everyone can be difficult

00:19:37,280 --> 00:19:40,160
but really

00:19:38,160 --> 00:19:42,320
helping sell that information as this

00:19:40,160 --> 00:19:45,440
just isn't a tech thing

00:19:42,320 --> 00:19:47,280
um is key as i mentioned previously the

00:19:45,440 --> 00:19:48,640
strategic aspect of this is really

00:19:47,280 --> 00:19:50,799
looking to scale

00:19:48,640 --> 00:19:52,000
and understand how we move beyond just

00:19:50,799 --> 00:19:55,360
this project or

00:19:52,000 --> 00:19:57,120
i've got 17 projects with various teams

00:19:55,360 --> 00:19:59,039
how do i really think beyond that how

00:19:57,120 --> 00:20:00,960
can i start to build something

00:19:59,039 --> 00:20:02,720
you know an actual strategy that meets

00:20:00,960 --> 00:20:04,640
our customers needs

00:20:02,720 --> 00:20:06,720
you know utilizing either the technology

00:20:04,640 --> 00:20:08,559
i have or start to adopt new

00:20:06,720 --> 00:20:11,520
technologies that will allow me to be

00:20:08,559 --> 00:20:13,200
more flexible and to scale

00:20:11,520 --> 00:20:15,679
that culture of innovation that i

00:20:13,200 --> 00:20:17,200
mentioned before really in

00:20:15,679 --> 00:20:19,600
allowing and emboldening those

00:20:17,200 --> 00:20:21,360
developers and ops and other folks

00:20:19,600 --> 00:20:24,400
within your organization to think

00:20:21,360 --> 00:20:26,080
beyond the proprietary box um

00:20:24,400 --> 00:20:28,080
and start to look for open source

00:20:26,080 --> 00:20:29,360
components either processes or other

00:20:28,080 --> 00:20:31,280
ways to do this

00:20:29,360 --> 00:20:32,880
and then apply those standards really

00:20:31,280 --> 00:20:36,080
implementing new ways

00:20:32,880 --> 00:20:37,360
of working and new ways of doing uh

00:20:36,080 --> 00:20:40,480
development

00:20:37,360 --> 00:20:42,720
um and of course automating everything

00:20:40,480 --> 00:20:42,720
um

00:20:44,000 --> 00:20:48,240
so you know again embracing this you

00:20:46,640 --> 00:20:50,880
know shared responsibility

00:20:48,240 --> 00:20:53,440
you know getting away from that that's

00:20:50,880 --> 00:20:56,159
mine that's yours and really starting to

00:20:53,440 --> 00:20:57,679
adopt that we mentality rather than that

00:20:56,159 --> 00:21:00,640
me mentality

00:20:57,679 --> 00:21:01,280
that's not my problem um that's yours

00:21:00,640 --> 00:21:03,600
rather than

00:21:01,280 --> 00:21:06,000
this is a problem how do we fix the

00:21:03,600 --> 00:21:08,480
problem how do we move forward

00:21:06,000 --> 00:21:09,679
um which by adopting that type of

00:21:08,480 --> 00:21:11,200
mindset

00:21:09,679 --> 00:21:14,720
and really starting to think more and

00:21:11,200 --> 00:21:17,360
about customer centricity and looking to

00:21:14,720 --> 00:21:18,720
apply for how we can achieve this

00:21:17,360 --> 00:21:22,320
because a happy customer

00:21:18,720 --> 00:21:24,480
uh helps to improve your bottom line

00:21:22,320 --> 00:21:26,400
but automation you know will will

00:21:24,480 --> 00:21:28,159
obviously improve a lot of things but

00:21:26,400 --> 00:21:31,039
you know reduction in time to reduce

00:21:28,159 --> 00:21:33,919
issues enhanced testing ability to

00:21:31,039 --> 00:21:36,880
gather data and time to market

00:21:33,919 --> 00:21:37,520
as well as developer and ops efficiency

00:21:36,880 --> 00:21:41,200
gains

00:21:37,520 --> 00:21:42,000
really help to executives really start

00:21:41,200 --> 00:21:44,640
to buy in

00:21:42,000 --> 00:21:46,720
by showing them a way to reduce your

00:21:44,640 --> 00:21:48,559
your total cost of ownership not just

00:21:46,720 --> 00:21:50,880
cost of licensing

00:21:48,559 --> 00:21:52,159
but making resources more efficient

00:21:50,880 --> 00:21:54,960
allowing for their

00:21:52,159 --> 00:21:58,240
ability to produce more is certainly a

00:21:54,960 --> 00:22:01,679
key component of this as well

00:21:58,240 --> 00:22:03,600
so what now um you know we've done this

00:22:01,679 --> 00:22:06,480
we've kind of discussed this with

00:22:03,600 --> 00:22:07,039
all aspects of the organization you know

00:22:06,480 --> 00:22:09,120
they

00:22:07,039 --> 00:22:12,320
start to do the buy-in they start to

00:22:09,120 --> 00:22:13,919
understand the changes are necessary

00:22:12,320 --> 00:22:15,520
you know we've started to adopt

00:22:13,919 --> 00:22:17,440
automation

00:22:15,520 --> 00:22:19,039
well you know how do i effectively

00:22:17,440 --> 00:22:20,720
manage performance

00:22:19,039 --> 00:22:22,799
at this point you know you've said that

00:22:20,720 --> 00:22:24,799
there'll be benefits you said that you

00:22:22,799 --> 00:22:26,000
know if we do this if we work together

00:22:24,799 --> 00:22:28,159
if we start to

00:22:26,000 --> 00:22:30,000
deliver with new technologies that we

00:22:28,159 --> 00:22:31,760
can we can really start to see some

00:22:30,000 --> 00:22:34,240
performance gains

00:22:31,760 --> 00:22:36,080
um how do i really understand that the

00:22:34,240 --> 00:22:38,080
things are going to be working for me

00:22:36,080 --> 00:22:39,600
you know how do i identify those gaps

00:22:38,080 --> 00:22:40,960
you know maybe i can see some as we

00:22:39,600 --> 00:22:43,039
start to do this

00:22:40,960 --> 00:22:44,159
is if we're you know starting to build

00:22:43,039 --> 00:22:46,080
this culture

00:22:44,159 --> 00:22:48,080
you know how do we understand if we're

00:22:46,080 --> 00:22:50,799
moving down the right path

00:22:48,080 --> 00:22:52,840
um or if we're just finding new ways to

00:22:50,799 --> 00:22:54,159
re-implement the same problems that we

00:22:52,840 --> 00:22:56,000
have but

00:22:54,159 --> 00:22:57,600
and how do i visualize that success

00:22:56,000 --> 00:23:00,720
moving forward

00:22:57,600 --> 00:23:02,080
well i've done it the performance isn't

00:23:00,720 --> 00:23:03,679
great

00:23:02,080 --> 00:23:05,440
well am i monitoring your application

00:23:03,679 --> 00:23:08,000
well most people will say yes

00:23:05,440 --> 00:23:10,320
they have some tools internally they may

00:23:08,000 --> 00:23:13,280
be doing log monitoring they may be

00:23:10,320 --> 00:23:14,240
using tools like splunk or elk um they

00:23:13,280 --> 00:23:16,559
may have some

00:23:14,240 --> 00:23:18,640
some more advanced tools like app

00:23:16,559 --> 00:23:20,000
dynamics or new relic or

00:23:18,640 --> 00:23:22,080
some other things for end-to-end

00:23:20,000 --> 00:23:23,760
application monitoring

00:23:22,080 --> 00:23:25,760
and potentially some tools if they're

00:23:23,760 --> 00:23:28,880
using the cloud um

00:23:25,760 --> 00:23:30,799
cloud watch and maybe even if they're

00:23:28,880 --> 00:23:34,000
using older systems some things

00:23:30,799 --> 00:23:35,200
in their mainframe or tools like nagios

00:23:34,000 --> 00:23:37,120
or zobx

00:23:35,200 --> 00:23:38,320
but are you sure you're getting

00:23:37,120 --> 00:23:40,640
everything

00:23:38,320 --> 00:23:42,240
well within the application maybe but

00:23:40,640 --> 00:23:43,840
are you getting all of it

00:23:42,240 --> 00:23:45,600
when i talk about all of it i'm talking

00:23:43,840 --> 00:23:47,360
about all the components including the

00:23:45,600 --> 00:23:50,880
devops components

00:23:47,360 --> 00:23:53,360
um the network the um all of the

00:23:50,880 --> 00:23:54,400
cloud components your provisioning

00:23:53,360 --> 00:23:56,080
components

00:23:54,400 --> 00:23:58,000
everything that makes up the complete

00:23:56,080 --> 00:24:00,559
life cycle of your application

00:23:58,000 --> 00:24:01,679
or are you strictly more interested in

00:24:00,559 --> 00:24:03,360
the production

00:24:01,679 --> 00:24:05,840
application and how it's running for the

00:24:03,360 --> 00:24:08,960
customer which is certainly crucial

00:24:05,840 --> 00:24:10,640
but you know certainly as you think

00:24:08,960 --> 00:24:12,640
through agile and how you start to track

00:24:10,640 --> 00:24:14,480
things using tools like app dynamics

00:24:12,640 --> 00:24:18,000
it's more about the code

00:24:14,480 --> 00:24:19,840
um you know rather than

00:24:18,000 --> 00:24:21,760
you know the teams are collaborating but

00:24:19,840 --> 00:24:23,520
you know you still see issues your qa

00:24:21,760 --> 00:24:24,159
and your dad work very closely together

00:24:23,520 --> 00:24:26,159
but

00:24:24,159 --> 00:24:28,559
you're pushing things out but those

00:24:26,159 --> 00:24:30,960
issues may solve a number of application

00:24:28,559 --> 00:24:34,240
problems but what about getting it to

00:24:30,960 --> 00:24:36,960
production in general so what exactly

00:24:34,240 --> 00:24:39,520
are you missing in that context well

00:24:36,960 --> 00:24:41,279
without observability it becomes very

00:24:39,520 --> 00:24:41,919
difficult to get the whole picture of

00:24:41,279 --> 00:24:44,240
what you're

00:24:41,919 --> 00:24:46,559
you're you're delivering again you may

00:24:44,240 --> 00:24:48,159
have good insights into your application

00:24:46,559 --> 00:24:50,080
you may see all the null pointers that

00:24:48,159 --> 00:24:51,919
may come up as a mistake or something

00:24:50,080 --> 00:24:54,799
missed in qa you may see

00:24:51,919 --> 00:24:57,440
the occasional problem because of

00:24:54,799 --> 00:24:59,760
network traffic but

00:24:57,440 --> 00:25:00,960
you know those things are essentially

00:24:59,760 --> 00:25:03,120
problematic where

00:25:00,960 --> 00:25:04,880
that actionable data doesn't help you

00:25:03,120 --> 00:25:06,960
with all of your tools

00:25:04,880 --> 00:25:08,240
you know it you may still be somewhat

00:25:06,960 --> 00:25:09,760
manual in your process

00:25:08,240 --> 00:25:12,000
you may find an issue and then your

00:25:09,760 --> 00:25:14,000
developers jump down and they spend uh

00:25:12,000 --> 00:25:15,520
you know days potentially digging

00:25:14,000 --> 00:25:18,559
through logs

00:25:15,520 --> 00:25:20,400
to find out exactly where the problem is

00:25:18,559 --> 00:25:22,240
if you don't have more advanced tools

00:25:20,400 --> 00:25:25,440
this is certainly true

00:25:22,240 --> 00:25:27,600
if all you use is a splunk or an elk you

00:25:25,440 --> 00:25:29,600
can certainly index and find problems

00:25:27,600 --> 00:25:32,559
quicker and depending on the skill level

00:25:29,600 --> 00:25:33,600
of your your development or op staff

00:25:32,559 --> 00:25:36,080
they may have a quick

00:25:33,600 --> 00:25:37,440
quick fix but finding exactly where a

00:25:36,080 --> 00:25:40,000
problem is happening

00:25:37,440 --> 00:25:41,200
can take time and typically that

00:25:40,000 --> 00:25:44,159
reactive scanning

00:25:41,200 --> 00:25:44,960
you know causes it's to uh to take much

00:25:44,159 --> 00:25:46,880
longer to solve

00:25:44,960 --> 00:25:48,320
problems so you know thinking about

00:25:46,880 --> 00:25:50,320
proactive approaches and what

00:25:48,320 --> 00:25:52,159
observability actually means well

00:25:50,320 --> 00:25:53,919
observability is

00:25:52,159 --> 00:25:56,640
really more about the conversation

00:25:53,919 --> 00:25:58,880
around the data available to track

00:25:56,640 --> 00:26:00,880
the changes within your system or the

00:25:58,880 --> 00:26:03,039
issues within your system

00:26:00,880 --> 00:26:05,360
whereas monitoring is the visualization

00:26:03,039 --> 00:26:06,880
of that

00:26:05,360 --> 00:26:08,640
as we think about the trends and

00:26:06,880 --> 00:26:10,880
observability in the market

00:26:08,640 --> 00:26:12,640
you know tracing certainly is critical

00:26:10,880 --> 00:26:15,760
but only 19 percent

00:26:12,640 --> 00:26:17,279
um use a distributed tracing tool like a

00:26:15,760 --> 00:26:19,039
jaeger or other things and certainly

00:26:17,279 --> 00:26:22,240
application monitoring or performance

00:26:19,039 --> 00:26:24,480
monitoring is still a very low number

00:26:22,240 --> 00:26:25,840
a monitoring as a whole for critical

00:26:24,480 --> 00:26:29,039
production level

00:26:25,840 --> 00:26:31,200
components is usually fairly high but as

00:26:29,039 --> 00:26:32,480
you can see the numbers start to degrade

00:26:31,200 --> 00:26:34,080
as you think through how

00:26:32,480 --> 00:26:36,080
you know tracing through the system

00:26:34,080 --> 00:26:38,799
instrumentation of

00:26:36,080 --> 00:26:40,960
the infrastructure really starts to to

00:26:38,799 --> 00:26:43,440
go down was thinking through tools as i

00:26:40,960 --> 00:26:45,760
mentioned tools like elk and nagios

00:26:43,440 --> 00:26:49,200
well you may have great log monitoring

00:26:45,760 --> 00:26:51,120
what about the rest of your tooling

00:26:49,200 --> 00:26:52,880
and the devops pipeline so you may have

00:26:51,120 --> 00:26:55,440
manual you may have set up some tools

00:26:52,880 --> 00:26:57,840
like jenkins or or a gitlab ci

00:26:55,440 --> 00:26:59,360
or a number of other available tools

00:26:57,840 --> 00:27:00,960
azure devops

00:26:59,360 --> 00:27:03,120
but are you really looking at the tools

00:27:00,960 --> 00:27:05,200
and all of the components

00:27:03,120 --> 00:27:07,039
most organizations tend to not think in

00:27:05,200 --> 00:27:07,600
this mindset because it's not customer

00:27:07,039 --> 00:27:10,640
specific

00:27:07,600 --> 00:27:12,640
it's a back-end process

00:27:10,640 --> 00:27:14,559
ci cd tooling you know if you think

00:27:12,640 --> 00:27:16,159
about jenkins and sonar cube and a

00:27:14,559 --> 00:27:17,279
number of other tools that exist within

00:27:16,159 --> 00:27:20,640
this context

00:27:17,279 --> 00:27:22,559
many organizations will again think of

00:27:20,640 --> 00:27:24,240
this as a secondary and your ops and

00:27:22,559 --> 00:27:25,279
developers may be the only people

00:27:24,240 --> 00:27:27,919
looking at these

00:27:25,279 --> 00:27:29,120
components as their issues and may have

00:27:27,919 --> 00:27:32,080
to go to

00:27:29,120 --> 00:27:33,760
three or maybe as many as six or seven

00:27:32,080 --> 00:27:35,600
different tools to gather all the

00:27:33,760 --> 00:27:38,880
information as to what might be breaking

00:27:35,600 --> 00:27:41,279
at what point in the pipeline

00:27:38,880 --> 00:27:42,960
and as i mentioned it's dev and ops what

00:27:41,279 --> 00:27:44,080
about the executive level really

00:27:42,960 --> 00:27:46,080
understanding

00:27:44,080 --> 00:27:47,520
you know the technical side of things is

00:27:46,080 --> 00:27:49,200
an impediment to really

00:27:47,520 --> 00:27:52,399
getting the information necessary to

00:27:49,200 --> 00:27:54,000
make positive road map choices

00:27:52,399 --> 00:27:55,760
and you know again monitoring and

00:27:54,000 --> 00:28:00,240
logging

00:27:55,760 --> 00:28:02,399
tools being reactive is is a key problem

00:28:00,240 --> 00:28:03,440
where a move toward proactive monitoring

00:28:02,399 --> 00:28:05,760
is really the

00:28:03,440 --> 00:28:07,679
the key for success in a devops cultural

00:28:05,760 --> 00:28:10,000
shift

00:28:07,679 --> 00:28:12,159
so near real time or real-time tracking

00:28:10,000 --> 00:28:13,679
i mean certainly we all say real time is

00:28:12,159 --> 00:28:16,399
the benefit but there's always some

00:28:13,679 --> 00:28:19,120
delay but as close as possible

00:28:16,399 --> 00:28:20,480
um an end to end from code check-in all

00:28:19,120 --> 00:28:24,159
the way to deployment

00:28:20,480 --> 00:28:25,440
um and delivery are key components of

00:28:24,159 --> 00:28:26,960
devops

00:28:25,440 --> 00:28:28,880
and the monitoring for that should be no

00:28:26,960 --> 00:28:31,600
different providing

00:28:28,880 --> 00:28:33,039
the right metrics and kpis not only for

00:28:31,600 --> 00:28:35,039
the development staff

00:28:33,039 --> 00:28:37,279
and for qa to understand things as they

00:28:35,039 --> 00:28:37,919
push through but also for executives to

00:28:37,279 --> 00:28:41,279
be able to make

00:28:37,919 --> 00:28:43,039
pointed decisions um is a key component

00:28:41,279 --> 00:28:45,760
that a lot of organizations you know

00:28:43,039 --> 00:28:48,640
while they do this for the application

00:28:45,760 --> 00:28:49,200
most executive level folks may see that

00:28:48,640 --> 00:28:51,600
there's

00:28:49,200 --> 00:28:55,840
x amount of up time for a given system

00:28:51,600 --> 00:28:57,360
so our systems have been running 99.95

00:28:55,840 --> 00:28:59,360
but they don't really see where are the

00:28:57,360 --> 00:29:01,840
issues in actually getting something to

00:28:59,360 --> 00:29:04,480
production and that's a key component

00:29:01,840 --> 00:29:06,720
um how do we integrate well and how

00:29:04,480 --> 00:29:09,840
adaptable is our process

00:29:06,720 --> 00:29:11,520
which is which is very important so

00:29:09,840 --> 00:29:12,960
i think all of you may have seen this if

00:29:11,520 --> 00:29:14,480
you're interested in devops you know

00:29:12,960 --> 00:29:16,159
there's a number of different

00:29:14,480 --> 00:29:17,679
versions of this out there from a number

00:29:16,159 --> 00:29:18,320
of companies but it's pretty much the

00:29:17,679 --> 00:29:20,399
same

00:29:18,320 --> 00:29:21,679
as i mentioned you know most of the

00:29:20,399 --> 00:29:24,399
tooling

00:29:21,679 --> 00:29:26,399
that has been created for devops be it

00:29:24,399 --> 00:29:29,600
provisioning or a code

00:29:26,399 --> 00:29:30,960
repository or what have you uh it's open

00:29:29,600 --> 00:29:32,799
source in nature and many of the ones

00:29:30,960 --> 00:29:35,679
that are proprietary utilize

00:29:32,799 --> 00:29:36,480
open source under the hood um so if you

00:29:35,679 --> 00:29:38,480
dig through this

00:29:36,480 --> 00:29:39,520
you're very likely your organization is

00:29:38,480 --> 00:29:42,240
using at least

00:29:39,520 --> 00:29:44,880
you know one one of these tools but

00:29:42,240 --> 00:29:46,480
potentially could use many more

00:29:44,880 --> 00:29:48,320
but bringing it all together really

00:29:46,480 --> 00:29:50,640
thinking about open source ways to solve

00:29:48,320 --> 00:29:55,840
this observability problem well you know

00:29:50,640 --> 00:29:55,840
there is only one uh widely

00:29:56,480 --> 00:30:00,320
i don't know about widely but one tool

00:29:58,480 --> 00:30:01,840
that's essentially open source it has

00:30:00,320 --> 00:30:04,240
been for several years

00:30:01,840 --> 00:30:04,880
it really kind of brings together this

00:30:04,240 --> 00:30:07,360
tooling

00:30:04,880 --> 00:30:08,159
for devops specifically to do the

00:30:07,360 --> 00:30:10,880
visualization

00:30:08,159 --> 00:30:11,840
of end-to-end monitoring it's called

00:30:10,880 --> 00:30:13,520
hygiena

00:30:11,840 --> 00:30:15,440
hygiena was originally created by

00:30:13,520 --> 00:30:17,520
capital one i don't work for capital one

00:30:15,440 --> 00:30:20,799
so this isn't a sales pitch but

00:30:17,520 --> 00:30:23,600
it is a very uh solid extendable tool

00:30:20,799 --> 00:30:25,200
it gives strategic insights that you

00:30:23,600 --> 00:30:27,600
know most other tools

00:30:25,200 --> 00:30:29,120
you can get some in proprietary tooling

00:30:27,600 --> 00:30:32,080
and you can get some

00:30:29,120 --> 00:30:32,720
flexibility however hygiene written in

00:30:32,080 --> 00:30:34,880
java

00:30:32,720 --> 00:30:36,640
and fully extendable allows you to

00:30:34,880 --> 00:30:39,760
continuously build on the

00:30:36,640 --> 00:30:41,039
what's called collectors or and other

00:30:39,760 --> 00:30:43,760
terms if you were to use

00:30:41,039 --> 00:30:45,520
very similar to elks beats or agents

00:30:43,760 --> 00:30:47,279
from other components

00:30:45,520 --> 00:30:49,520
to really pull in the data from all of

00:30:47,279 --> 00:30:52,240
the appropriate tooling

00:30:49,520 --> 00:30:53,679
to get a single pane of glass type of

00:30:52,240 --> 00:30:55,760
approach

00:30:53,679 --> 00:30:58,320
and this is an example workflow of of

00:30:55,760 --> 00:31:00,399
how your devops cycle might work

00:30:58,320 --> 00:31:02,480
from the development team all the way to

00:31:00,399 --> 00:31:03,919
post-production

00:31:02,480 --> 00:31:06,720
where hygiena as you can see in the

00:31:03,919 --> 00:31:08,480
center actually as collectors across the

00:31:06,720 --> 00:31:10,240
entire ecosystem

00:31:08,480 --> 00:31:12,159
and the ones that don't exist can be

00:31:10,240 --> 00:31:14,480
created fairly rapidly

00:31:12,159 --> 00:31:15,519
um to pull that data into a hygiena data

00:31:14,480 --> 00:31:19,760
store and

00:31:15,519 --> 00:31:23,279
make that visible through hygiena's

00:31:19,760 --> 00:31:24,799
dashboards and those dashboards exist in

00:31:23,279 --> 00:31:26,880
in two ways as you can see

00:31:24,799 --> 00:31:29,039
the development dashboard is really

00:31:26,880 --> 00:31:31,519
component level it talks about

00:31:29,039 --> 00:31:32,960
component life cycle progression and

00:31:31,519 --> 00:31:34,159
you'll forgive the imagery because i'm

00:31:32,960 --> 00:31:36,480
not the best at

00:31:34,159 --> 00:31:37,360
animations but as you think about how

00:31:36,480 --> 00:31:40,720
you might adopt

00:31:37,360 --> 00:31:43,519
jira into your single pane of glass

00:31:40,720 --> 00:31:45,600
you start to migrate these tools and

00:31:43,519 --> 00:31:47,600
start to integrate them with

00:31:45,600 --> 00:31:48,799
and start to build through these variant

00:31:47,600 --> 00:31:50,320
widgets

00:31:48,799 --> 00:31:53,440
components that will show you all the

00:31:50,320 --> 00:31:53,440
information that you need

00:31:53,519 --> 00:31:57,519
and again this is fully customizable so

00:31:56,000 --> 00:31:58,399
i can pick and choose the tools that

00:31:57,519 --> 00:32:00,399
best fit my

00:31:58,399 --> 00:32:01,760
organization and what i might be

00:32:00,399 --> 00:32:03,919
adopting

00:32:01,760 --> 00:32:05,360
and see all the information that's

00:32:03,919 --> 00:32:08,480
relevant to me

00:32:05,360 --> 00:32:09,519
be it code quality how are the builds

00:32:08,480 --> 00:32:11,760
progressing around

00:32:09,519 --> 00:32:15,360
among different tools how are my sprints

00:32:11,760 --> 00:32:16,720
or through jira or other tools

00:32:15,360 --> 00:32:18,640
currently working you know how many

00:32:16,720 --> 00:32:19,919
issues or problems and then what's my

00:32:18,640 --> 00:32:22,320
code repo look like

00:32:19,919 --> 00:32:24,399
how many issues have been done within

00:32:22,320 --> 00:32:26,080
the check-ins pull requests accepted and

00:32:24,399 --> 00:32:27,679
so on and so forth

00:32:26,080 --> 00:32:30,480
but essentially you can pull in any

00:32:27,679 --> 00:32:32,159
number of tools performance tooling

00:32:30,480 --> 00:32:34,080
and other components like white source

00:32:32,159 --> 00:32:35,519
or black duck or things to that

00:32:34,080 --> 00:32:37,440
perspective might be used for the

00:32:35,519 --> 00:32:38,559
security analysis that you would see

00:32:37,440 --> 00:32:40,080
here

00:32:38,559 --> 00:32:42,159
so this development dashboard really

00:32:40,080 --> 00:32:44,559
helps developers and ops people work

00:32:42,159 --> 00:32:46,559
through the problems and potential

00:32:44,559 --> 00:32:47,600
real-time understanding to proactively

00:32:46,559 --> 00:32:50,080
see where

00:32:47,600 --> 00:32:52,320
problems continue to exist um maybe

00:32:50,080 --> 00:32:54,240
certain sprint teams or certain parts of

00:32:52,320 --> 00:32:55,120
the code repo are more problematic than

00:32:54,240 --> 00:32:58,240
others

00:32:55,120 --> 00:33:00,320
or certain builds to certain um

00:32:58,240 --> 00:33:01,600
kubernetes clusters for example may be

00:33:00,320 --> 00:33:03,919
failing and

00:33:01,600 --> 00:33:05,519
you know so they can proactively review

00:33:03,919 --> 00:33:06,640
and then one of the things i mentioned

00:33:05,519 --> 00:33:08,840
previously is

00:33:06,640 --> 00:33:10,080
also looking at things from an executive

00:33:08,840 --> 00:33:12,240
perspective

00:33:10,080 --> 00:33:13,440
well executives also like to see what's

00:33:12,240 --> 00:33:16,640
happening and beyond

00:33:13,440 --> 00:33:17,279
the uptime of a server understanding how

00:33:16,640 --> 00:33:19,440
their

00:33:17,279 --> 00:33:20,559
resources are working what are the risks

00:33:19,440 --> 00:33:23,039
potentially

00:33:20,559 --> 00:33:24,320
for different variant projects across

00:33:23,039 --> 00:33:26,000
the enterprise

00:33:24,320 --> 00:33:28,960
where you can pull together an executive

00:33:26,000 --> 00:33:31,679
dashboard that manages things like

00:33:28,960 --> 00:33:32,880
future investment insights am i going to

00:33:31,679 --> 00:33:35,600
need more

00:33:32,880 --> 00:33:38,399
resources or servers how many security

00:33:35,600 --> 00:33:41,039
violations do i continuously

00:33:38,399 --> 00:33:42,640
see leveraging a number of tools

00:33:41,039 --> 00:33:44,240
throughout the industry as you can see

00:33:42,640 --> 00:33:48,399
at the top and the bottom of this

00:33:44,240 --> 00:33:50,799
this dashboard so it's very flexible

00:33:48,399 --> 00:33:51,679
and while it does leverage open source

00:33:50,799 --> 00:33:54,240
it also

00:33:51,679 --> 00:33:56,880
has the power where it being an open

00:33:54,240 --> 00:33:59,039
source tool also allows you to pull in

00:33:56,880 --> 00:34:00,080
um tooling that is not open source as

00:33:59,039 --> 00:34:03,519
you can see tools like

00:34:00,080 --> 00:34:04,320
excel deploy pardon me black duck and

00:34:03,519 --> 00:34:08,159
white source

00:34:04,320 --> 00:34:10,079
while our tools for actually scanning

00:34:08,159 --> 00:34:11,440
open source tools are not open source

00:34:10,079 --> 00:34:13,839
themselves

00:34:11,440 --> 00:34:15,599
so you can leverage any number of tools

00:34:13,839 --> 00:34:18,079
be they open source or proprietary to

00:34:15,599 --> 00:34:20,079
pull into a dashboard

00:34:18,079 --> 00:34:22,320
but the key is actually providing

00:34:20,079 --> 00:34:24,720
observability and while hygie is one

00:34:22,320 --> 00:34:26,480
obvious open source possibility there

00:34:24,720 --> 00:34:27,760
are obviously other tools that offer

00:34:26,480 --> 00:34:30,480
observability

00:34:27,760 --> 00:34:31,440
but you know that executive buy-in i

00:34:30,480 --> 00:34:33,520
mentioned earlier

00:34:31,440 --> 00:34:35,040
really becomes more relevant when they

00:34:33,520 --> 00:34:37,679
can really understand and

00:34:35,040 --> 00:34:40,159
be given the key kpis and metrics

00:34:37,679 --> 00:34:42,000
necessary to make the proper decisions

00:34:40,159 --> 00:34:44,079
and by providing that observability

00:34:42,000 --> 00:34:46,240
across devops it gives you insight that

00:34:44,079 --> 00:34:47,679
you previously would not have had into

00:34:46,240 --> 00:34:50,079
you know resource and process

00:34:47,679 --> 00:34:51,839
efficiencies

00:34:50,079 --> 00:34:53,359
you know understanding those bottlenecks

00:34:51,839 --> 00:34:55,440
and really where the the governance

00:34:53,359 --> 00:34:55,839
capabilities within your organization

00:34:55,440 --> 00:34:58,960
are

00:34:55,839 --> 00:35:00,880
are really a key component and being

00:34:58,960 --> 00:35:03,040
able to see that agility

00:35:00,880 --> 00:35:04,320
starting to really think through the

00:35:03,040 --> 00:35:06,800
scale of how your

00:35:04,320 --> 00:35:07,760
your road map currently exists will help

00:35:06,800 --> 00:35:11,040
you better plan

00:35:07,760 --> 00:35:13,520
as an organization moving forward

00:35:11,040 --> 00:35:14,640
again a unified view is always a key

00:35:13,520 --> 00:35:16,560
consideration

00:35:14,640 --> 00:35:18,000
many organizations have the problem

00:35:16,560 --> 00:35:20,720
where their application

00:35:18,000 --> 00:35:22,640
network and other monitoring tools are

00:35:20,720 --> 00:35:23,440
multiple tools without a single pane of

00:35:22,640 --> 00:35:25,680
glass

00:35:23,440 --> 00:35:27,920
providing that single pane is is a key

00:35:25,680 --> 00:35:30,800
for organizations to very quickly make

00:35:27,920 --> 00:35:32,400
decisions as well and then again

00:35:30,800 --> 00:35:34,480
you know avoiding those production

00:35:32,400 --> 00:35:35,359
issues by really understanding early on

00:35:34,480 --> 00:35:36,800
in the process

00:35:35,359 --> 00:35:38,720
and early on in your deployment

00:35:36,800 --> 00:35:41,119
capabilities throughout the pipeline

00:35:38,720 --> 00:35:42,880
will really help you to get things to

00:35:41,119 --> 00:35:45,119
the customer faster

00:35:42,880 --> 00:35:47,440
and allow you to resolve problems more

00:35:45,119 --> 00:35:49,200
quickly

00:35:47,440 --> 00:35:51,760
so the question is is you've heard a lot

00:35:49,200 --> 00:35:54,240
of things about devops a devops culture

00:35:51,760 --> 00:35:56,000
you know how you can improve by breaking

00:35:54,240 --> 00:35:59,839
down and changing some of the ways of

00:35:56,000 --> 00:36:01,839
working and through observability

00:35:59,839 --> 00:36:04,000
are you ready to start making a change

00:36:01,839 --> 00:36:06,240
well that's

00:36:04,000 --> 00:36:08,000
that's a good question so you know

00:36:06,240 --> 00:36:09,200
hopefully some of us are giving you some

00:36:08,000 --> 00:36:11,760
insight

00:36:09,200 --> 00:36:14,400
that concludes us i believe we had some

00:36:11,760 --> 00:36:14,400
time left

00:36:15,040 --> 00:36:18,720
i do have one question in here i guess i

00:36:17,040 --> 00:36:20,800
can answer verbally

00:36:18,720 --> 00:36:23,200
in what ways can engineers that don't

00:36:20,800 --> 00:36:24,960
have much influence in their auric help

00:36:23,200 --> 00:36:26,480
make the movement towards developing a

00:36:24,960 --> 00:36:28,720
devops culture

00:36:26,480 --> 00:36:30,400
that's actually an excellent question um

00:36:28,720 --> 00:36:31,839
and this kind of goes back to how well

00:36:30,400 --> 00:36:34,880
does your organization

00:36:31,839 --> 00:36:36,800
empower the people within

00:36:34,880 --> 00:36:39,040
your organization to make positive

00:36:36,800 --> 00:36:41,040
change

00:36:39,040 --> 00:36:42,079
i find that in most organizations

00:36:41,040 --> 00:36:44,640
engineers

00:36:42,079 --> 00:36:46,480
you know may not have direct power the

00:36:44,640 --> 00:36:47,920
management typically makes strategic

00:36:46,480 --> 00:36:49,680
decisions however

00:36:47,920 --> 00:36:51,119
most management staff if you can

00:36:49,680 --> 00:36:52,839
quantify

00:36:51,119 --> 00:36:55,119
what the change provides to the

00:36:52,839 --> 00:36:56,960
organization and show how

00:36:55,119 --> 00:36:58,560
there are gaps missing and how their

00:36:56,960 --> 00:37:00,400
continued efficiencies

00:36:58,560 --> 00:37:02,320
this is the key way to really help to

00:37:00,400 --> 00:37:03,599
under the organization understand the

00:37:02,320 --> 00:37:05,760
need for change

00:37:03,599 --> 00:37:06,640
and not all organizations unfortunately

00:37:05,760 --> 00:37:09,200
are ready

00:37:06,640 --> 00:37:10,079
to make a devops culture change it is

00:37:09,200 --> 00:37:12,400
something that

00:37:10,079 --> 00:37:13,920
many organizations again as i mentioned

00:37:12,400 --> 00:37:15,359
earlier have to realize there's a

00:37:13,920 --> 00:37:17,520
problem to do

00:37:15,359 --> 00:37:18,800
but engineers typically are the first

00:37:17,520 --> 00:37:19,839
people to innovate within an

00:37:18,800 --> 00:37:22,800
organization

00:37:19,839 --> 00:37:25,040
um you know engineers tend to look for

00:37:22,800 --> 00:37:27,359
new ways to solve problems

00:37:25,040 --> 00:37:28,880
um having been a developer for over 20

00:37:27,359 --> 00:37:30,880
years i can tell you one of the things

00:37:28,880 --> 00:37:33,680
that consistently always caused me

00:37:30,880 --> 00:37:36,320
heartache was we kept running into

00:37:33,680 --> 00:37:37,839
problems because

00:37:36,320 --> 00:37:39,839
i would develop something and then i'd

00:37:37,839 --> 00:37:42,720
have to wait months

00:37:39,839 --> 00:37:44,160
for it to round robin through qa or it

00:37:42,720 --> 00:37:47,359
take over 10 hours

00:37:44,160 --> 00:37:49,200
to deploy to a given environment because

00:37:47,359 --> 00:37:50,800
of very manual processes

00:37:49,200 --> 00:37:52,640
well that innovative mindset of the

00:37:50,800 --> 00:37:55,119
developer or ops

00:37:52,640 --> 00:37:56,240
people to jump in and find those ways to

00:37:55,119 --> 00:37:58,880
test out tools

00:37:56,240 --> 00:38:00,000
and show the the speed improvements or

00:37:58,880 --> 00:38:01,839
capabilities

00:38:00,000 --> 00:38:03,839
not only of the tools but of some of the

00:38:01,839 --> 00:38:04,880
process improvements so waterfall for

00:38:03,839 --> 00:38:07,680
example

00:38:04,880 --> 00:38:09,119
versus agile all the way to a devops

00:38:07,680 --> 00:38:10,960
culture change

00:38:09,119 --> 00:38:13,680
assessing and really understanding at

00:38:10,960 --> 00:38:15,200
what phase you are is the first step

00:38:13,680 --> 00:38:18,240
and then being able to work with

00:38:15,200 --> 00:38:20,560
management to really show that um

00:38:18,240 --> 00:38:21,599
that change is possible and and it's

00:38:20,560 --> 00:38:24,160
incremental

00:38:21,599 --> 00:38:25,760
an organ no organization be it a move to

00:38:24,160 --> 00:38:28,800
agile or a full devops

00:38:25,760 --> 00:38:29,440
um can just jump in and expect complete

00:38:28,800 --> 00:38:32,320
change

00:38:29,440 --> 00:38:34,640
um immediately it takes time it takes

00:38:32,320 --> 00:38:36,160
education and training

00:38:34,640 --> 00:38:37,760
but it is something that you know

00:38:36,160 --> 00:38:41,280
certainly an engineer

00:38:37,760 --> 00:38:44,880
can help provide positive

00:38:41,280 --> 00:38:46,000
quantitative numbers to show how some of

00:38:44,880 --> 00:38:48,880
these changes really

00:38:46,000 --> 00:38:48,880
should be considered

00:38:52,720 --> 00:38:56,240
all right thank you for answering that

00:38:54,240 --> 00:38:59,200
question eric um

00:38:56,240 --> 00:39:00,400
let's see is there does anyone else oh

00:38:59,200 --> 00:39:02,800
we got another question

00:39:00,400 --> 00:39:02,800
perfect

00:39:03,599 --> 00:39:09,040
um any reading materials you could

00:39:07,359 --> 00:39:12,400
recommend about quantifying

00:39:09,040 --> 00:39:14,320
these potential improvements um

00:39:12,400 --> 00:39:16,400
yeah i mean there's certainly a number

00:39:14,320 --> 00:39:18,320
of good websites out there

00:39:16,400 --> 00:39:19,920
um i don't have the i have them

00:39:18,320 --> 00:39:21,440
bookmarked on my other computer

00:39:19,920 --> 00:39:24,800
unfortunately i had to give this

00:39:21,440 --> 00:39:26,560
for my my uh personal laptop because of

00:39:24,800 --> 00:39:29,440
some issues with my work one but i

00:39:26,560 --> 00:39:31,040
i certainly um i believe if you would

00:39:29,440 --> 00:39:32,880
like to email me

00:39:31,040 --> 00:39:34,880
if you look at the bottom of the

00:39:32,880 --> 00:39:37,599
presentation there is uh

00:39:34,880 --> 00:39:39,040
my email please feel free to email me if

00:39:37,599 --> 00:39:42,079
you'd like some of that information and

00:39:39,040 --> 00:39:44,480
i'll absolutely provide some links

00:39:42,079 --> 00:39:46,880
and some material that you can take a

00:39:44,480 --> 00:39:46,880
look at

00:39:53,839 --> 00:39:58,400
as far as sites around learning about

00:39:56,079 --> 00:40:01,040
devops tools

00:39:58,400 --> 00:40:01,440
and online training free or premium well

00:40:01,040 --> 00:40:04,960
i'm

00:40:01,440 --> 00:40:05,839
i'm a big fan of free being i lead the

00:40:04,960 --> 00:40:08,560
open source

00:40:05,839 --> 00:40:09,119
services group or practice consultants

00:40:08,560 --> 00:40:11,359
within

00:40:09,119 --> 00:40:14,400
my organization and we are very much

00:40:11,359 --> 00:40:17,280
about free and open source tooling

00:40:14,400 --> 00:40:18,000
but it really depends and what aspect

00:40:17,280 --> 00:40:20,640
you mean

00:40:18,000 --> 00:40:21,359
devops tools is a very broad discussion

00:40:20,640 --> 00:40:23,359
point

00:40:21,359 --> 00:40:26,319
certainly hygiena can be found

00:40:23,359 --> 00:40:29,520
immediately by going to github

00:40:26,319 --> 00:40:31,520
and doing a search on hijia but this is

00:40:29,520 --> 00:40:34,720
a broader topic

00:40:31,520 --> 00:40:38,079
you know kubernetes docker

00:40:34,720 --> 00:40:40,560
terraform jenkins and

00:40:38,079 --> 00:40:41,520
the list continues to grow of devops

00:40:40,560 --> 00:40:44,480
tools

00:40:41,520 --> 00:40:46,160
exists so if your organization uses

00:40:44,480 --> 00:40:48,240
tools like udemy

00:40:46,160 --> 00:40:49,440
which is a paid tool that's one

00:40:48,240 --> 00:40:51,359
potentially

00:40:49,440 --> 00:40:52,720
potential place you could look they had

00:40:51,359 --> 00:40:55,200
some very good

00:40:52,720 --> 00:40:57,280
some very good classes but if not you

00:40:55,200 --> 00:40:57,920
know youtube is a treasure trove of

00:40:57,280 --> 00:40:59,680
things

00:40:57,920 --> 00:41:02,480
again ben if you'd like to send me an

00:40:59,680 --> 00:41:04,640
email i'd be more than happy to uh

00:41:02,480 --> 00:41:06,640
to have a side conversation on this as

00:41:04,640 --> 00:41:09,200
well because that's uh

00:41:06,640 --> 00:41:11,680
that's a very broad discussion we could

00:41:09,200 --> 00:41:12,960
we could have

00:41:11,680 --> 00:41:14,319
and that goes for the rest of the

00:41:12,960 --> 00:41:15,200
attendees as well i'll be more than

00:41:14,319 --> 00:41:21,839
happy to have

00:41:15,200 --> 00:41:21,839
some discussions on that

00:41:22,240 --> 00:41:24,319

YouTube URL: https://www.youtube.com/watch?v=f1BUFU00b6k


