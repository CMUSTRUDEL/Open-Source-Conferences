Title: The Goldilocks Problem of Software Delivery - Anders Wallgren
Publication date: 2020-12-18
Playlist: All Things Open 2020 - devopsday (Day 2)
Description: 
	Presented by: Anders Wallgren, CloudBees
Presented at All Things Open 2020 - devopsday (Day 2)

Abstract: Over the last 15 years, organizations have had difficulty with the entire software delivery process, but two artifacts in particular became a recurring problem. The problem stems from the Goldilocks' principle: one of these artifacts is much too big to overcome efficiently, and one of them is much too small to make a significant impact, so we need to find the one that is just right. 

The artifact that is much too small would be the individual build. In fact, organizations and individuals often obsess over the individual Build. Builds are important, but in the grand scheme of things, they are often too small to make a significant difference in a short period of time. The artifact that is often too big, that many are trying to improve with Agile practices, is the Release, which was an arduous 18-month-long process.

So what artifact is “just right?” As the user, what we really care about are the Features: the stuff we use and interact with all the time to make our daily lives better. However, the systems we have today haven't advanced to the point where software features are the nearest proxy for customer value. In other words, the feature must be at the forefront of the UI. 

In this talk, I will share why features are the proxy for value and explore the different levels of abstraction for the “just right” aspect of a Feature in order to shift people's mindset from thinking in terms of Builds or Releases, to thinking in terms of the customer and business value. I will share tactics to address the Goldilocks problem and how to have these discussions at the right level of the software in order to make prioritizations, decisions, and discoveries.
Captions: 
	00:00:05,680 --> 00:00:08,559
thank you

00:00:06,240 --> 00:00:10,160
um good morning or good afternoon or

00:00:08,559 --> 00:00:11,759
good evening depending on

00:00:10,160 --> 00:00:13,120
where you're joining me uh joining us

00:00:11,759 --> 00:00:13,599
this morning and uh thanks for being

00:00:13,120 --> 00:00:15,759
here

00:00:13,599 --> 00:00:17,600
uh always happy to talk at devops days

00:00:15,759 --> 00:00:19,279
it's a it's a great event and uh look

00:00:17,600 --> 00:00:21,680
forward to doing it in person

00:00:19,279 --> 00:00:23,439
at some point in the in the future uh

00:00:21,680 --> 00:00:24,320
again because that's uh that's half the

00:00:23,439 --> 00:00:25,599
fun

00:00:24,320 --> 00:00:27,599
but we'll see if we can make up for the

00:00:25,599 --> 00:00:28,560
other half today so i'm going to talk uh

00:00:27,599 --> 00:00:30,400
today about

00:00:28,560 --> 00:00:32,320
the title of the slide or title of the

00:00:30,400 --> 00:00:34,079
talk as you can see is the goldilocks

00:00:32,320 --> 00:00:35,520
problem of software delivery

00:00:34,079 --> 00:00:37,600
and really what i'm going to talk about

00:00:35,520 --> 00:00:39,840
is why features

00:00:37,600 --> 00:00:41,360
are the the unit of value that we

00:00:39,840 --> 00:00:42,480
deliver to our customers

00:00:41,360 --> 00:00:44,480
and then we need to get a little bit

00:00:42,480 --> 00:00:46,239
better at looking at those

00:00:44,480 --> 00:00:47,760
uh from the perspective of you know how

00:00:46,239 --> 00:00:48,399
do i get this feature out where is it

00:00:47,760 --> 00:00:50,160
blocked

00:00:48,399 --> 00:00:51,760
uh those sorts of things and i'll kind

00:00:50,160 --> 00:00:53,199
of compare and contrast that to some of

00:00:51,760 --> 00:00:54,079
the other things that we use to drive

00:00:53,199 --> 00:00:56,079
things uh

00:00:54,079 --> 00:00:57,600
out the door and go through that so

00:00:56,079 --> 00:00:59,039
that's a little bit of a preview i also

00:00:57,600 --> 00:01:01,359
could have sort of called this

00:00:59,039 --> 00:01:02,879
and and mixed in a great movie here too

00:01:01,359 --> 00:01:05,519
the graduate of you know the

00:01:02,879 --> 00:01:07,680
the future is features you know i have

00:01:05,519 --> 00:01:09,280
one word for you sun features

00:01:07,680 --> 00:01:11,280
uh i couldn't resist throwing that in

00:01:09,280 --> 00:01:12,960
there because uh it's such a great movie

00:01:11,280 --> 00:01:15,119
and and such a great quote

00:01:12,960 --> 00:01:16,000
uh at the time a little bit dated

00:01:15,119 --> 00:01:18,240
nowadays uh

00:01:16,000 --> 00:01:19,520
uh perhaps but uh you know all the more

00:01:18,240 --> 00:01:21,520
fun for it

00:01:19,520 --> 00:01:23,119
so just sort of taking a step back a

00:01:21,520 --> 00:01:25,040
little bit here so

00:01:23,119 --> 00:01:26,479
software is at the core of pretty much

00:01:25,040 --> 00:01:27,280
every business today i mean if you're

00:01:26,479 --> 00:01:29,520
making

00:01:27,280 --> 00:01:30,640
cars or washing machines you're you're

00:01:29,520 --> 00:01:32,320
doing software

00:01:30,640 --> 00:01:34,560
um that's one of the primary ways in

00:01:32,320 --> 00:01:36,320
which you're differentiating yourself

00:01:34,560 --> 00:01:38,079
from from your competitors and and

00:01:36,320 --> 00:01:38,400
trying to get your customers business

00:01:38,079 --> 00:01:41,920
and

00:01:38,400 --> 00:01:43,439
keep them happy so it's a it's a it's a

00:01:41,920 --> 00:01:45,680
you know it's kind of the point now

00:01:43,439 --> 00:01:47,280
where uh as andreessen said a few years

00:01:45,680 --> 00:01:48,479
ago software will eat the world but it

00:01:47,280 --> 00:01:50,479
has eaten the world

00:01:48,479 --> 00:01:52,720
um it's it's a done deal we're we're

00:01:50,479 --> 00:01:53,280
there uh we just have to now get better

00:01:52,720 --> 00:01:56,799
at

00:01:53,280 --> 00:01:57,759
delivering software um a little uh

00:01:56,799 --> 00:02:00,399
survey that

00:01:57,759 --> 00:02:02,000
that we did a little while ago about uh

00:02:00,399 --> 00:02:03,680
you know companies adopting for example

00:02:02,000 --> 00:02:05,520
microservices

00:02:03,680 --> 00:02:07,680
and the point here being kind of you

00:02:05,520 --> 00:02:08,160
know application architecture has a huge

00:02:07,680 --> 00:02:11,280
impact

00:02:08,160 --> 00:02:13,760
on our ability to uh deliver software in

00:02:11,280 --> 00:02:16,160
a timely fashion and deliver repeatedly

00:02:13,760 --> 00:02:18,560
uh and and with good cadence

00:02:16,160 --> 00:02:19,440
and so modern modernization of the

00:02:18,560 --> 00:02:22,160
software function

00:02:19,440 --> 00:02:22,480
and using microservices as a proxy uh

00:02:22,160 --> 00:02:24,400
for

00:02:22,480 --> 00:02:26,720
for modernizing uh software delivery

00:02:24,400 --> 00:02:28,400
services that results adopting that

00:02:26,720 --> 00:02:30,000
results in a 3x

00:02:28,400 --> 00:02:31,519
better likelihood of experiencing

00:02:30,000 --> 00:02:34,480
revenue growth of 15

00:02:31,519 --> 00:02:35,840
or more um now you know don't take that

00:02:34,480 --> 00:02:37,120
as the end-all be-all i don't think i'm

00:02:35,840 --> 00:02:38,560
going to pass this off as sort of a

00:02:37,120 --> 00:02:40,160
scientific survey but it's an

00:02:38,560 --> 00:02:42,160
interesting kind of snapshot

00:02:40,160 --> 00:02:43,360
of the experience that that companies

00:02:42,160 --> 00:02:45,680
are having

00:02:43,360 --> 00:02:48,080
as they adopt more modern software

00:02:45,680 --> 00:02:49,920
architectures

00:02:48,080 --> 00:02:51,440
the you know we also have and and here

00:02:49,920 --> 00:02:53,599
is you know i would argue a much more

00:02:51,440 --> 00:02:54,800
rigorous uh set of numbers based on the

00:02:53,599 --> 00:02:57,120
uh the dora

00:02:54,800 --> 00:02:58,800
uh uh research survey the devops uh

00:02:57,120 --> 00:03:02,560
research and assessment

00:02:58,800 --> 00:03:04,959
uh folks um who do a uh

00:03:02,560 --> 00:03:05,840
a big you know huge survey every year of

00:03:04,959 --> 00:03:08,400
thousands of

00:03:05,840 --> 00:03:08,879
of uh organizations and in the industry

00:03:08,400 --> 00:03:11,680
and

00:03:08,879 --> 00:03:14,000
you know here they call out and this is

00:03:11,680 --> 00:03:16,640
i think probably from 2019

00:03:14,000 --> 00:03:18,159
um but they call out you know the the

00:03:16,640 --> 00:03:20,959
really large gap

00:03:18,159 --> 00:03:22,159
between the elite performers and you

00:03:20,959 --> 00:03:24,159
know the rest of us

00:03:22,159 --> 00:03:26,159
uh in terms of you know here the sort of

00:03:24,159 --> 00:03:27,360
the four big dora metrics that that we

00:03:26,159 --> 00:03:30,000
see all the time the

00:03:27,360 --> 00:03:32,640
frequency of code deploys the lead time

00:03:30,000 --> 00:03:35,440
from commit to deploy um

00:03:32,640 --> 00:03:35,760
mean time to recovery from from downtime

00:03:35,440 --> 00:03:38,000
uh

00:03:35,760 --> 00:03:39,440
and and the likelihood of of changes

00:03:38,000 --> 00:03:41,040
failing and and really

00:03:39,440 --> 00:03:42,640
you know what this calls out and and the

00:03:41,040 --> 00:03:43,840
big thing you want to notice here isn't

00:03:42,640 --> 00:03:46,239
necessarily the

00:03:43,840 --> 00:03:48,080
the individual numbers but the fact that

00:03:46,239 --> 00:03:49,440
we're not dealing in percentages here

00:03:48,080 --> 00:03:51,440
right we're dealing in orders of

00:03:49,440 --> 00:03:53,439
magnitude we're dealing in two

00:03:51,440 --> 00:03:55,680
three orders of magnitude that that

00:03:53,439 --> 00:03:56,239
differentiates the the elite performers

00:03:55,680 --> 00:03:58,640
from

00:03:56,239 --> 00:04:00,480
uh from the rest of the pack and that's

00:03:58,640 --> 00:04:02,640
a you know that's a significant

00:04:00,480 --> 00:04:03,920
uh delta that you know there's obviously

00:04:02,640 --> 00:04:06,000
room for improvement

00:04:03,920 --> 00:04:08,000
uh for the industry as a whole to grow

00:04:06,000 --> 00:04:09,360
into um because that's you know that's

00:04:08,000 --> 00:04:10,959
the cream of the cream of the crop

00:04:09,360 --> 00:04:12,560
that's doing it uh that's doing it that

00:04:10,959 --> 00:04:15,519
well

00:04:12,560 --> 00:04:16,720
um so so you know architecture we're

00:04:15,519 --> 00:04:18,720
getting better at

00:04:16,720 --> 00:04:20,560
um we're obviously getting better at

00:04:18,720 --> 00:04:22,479
things like ci and cd continuous

00:04:20,560 --> 00:04:25,040
integration continuous delivery

00:04:22,479 --> 00:04:26,320
uh continuous testing uh for that matter

00:04:25,040 --> 00:04:28,880
and and devops

00:04:26,320 --> 00:04:30,080
uh as a as a process and a culture to do

00:04:28,880 --> 00:04:31,759
things and are helping but you know

00:04:30,080 --> 00:04:33,600
things are still not perfect

00:04:31,759 --> 00:04:36,000
um you know it's it's not like every

00:04:33,600 --> 00:04:36,479
team out there every organization out

00:04:36,000 --> 00:04:38,400
there is

00:04:36,479 --> 00:04:39,600
is able to just sort of magically now

00:04:38,400 --> 00:04:41,600
deliver software

00:04:39,600 --> 00:04:42,960
uh as quickly as we can with the quality

00:04:41,600 --> 00:04:44,880
that we can

00:04:42,960 --> 00:04:47,280
with all the functionality that we want

00:04:44,880 --> 00:04:50,080
it's it's still a difficult problem and

00:04:47,280 --> 00:04:52,639
you know a quote here from a devops

00:04:50,080 --> 00:04:54,160
leader at a major north american bank

00:04:52,639 --> 00:04:56,080
about you know we're doing phenomenally

00:04:54,160 --> 00:04:57,360
well in our in our devops practice but

00:04:56,080 --> 00:04:58,479
if we're unable to have better

00:04:57,360 --> 00:05:00,720
visibility

00:04:58,479 --> 00:05:02,160
measure the actual business impact and

00:05:00,720 --> 00:05:03,759
connect our software development and

00:05:02,160 --> 00:05:04,720
delivery practice to the rest of the

00:05:03,759 --> 00:05:06,160
organization

00:05:04,720 --> 00:05:07,759
will no longer be competitive in the

00:05:06,160 --> 00:05:10,080
market and we will have wasted a billion

00:05:07,759 --> 00:05:11,520
dollars in our dev ops efforts um

00:05:10,080 --> 00:05:13,120
and and this really you know in a way

00:05:11,520 --> 00:05:13,680
gets to the heart of the matter which is

00:05:13,120 --> 00:05:15,120
that

00:05:13,680 --> 00:05:16,720
the software that we deliver and the

00:05:15,120 --> 00:05:18,639
organizations that work

00:05:16,720 --> 00:05:20,160
to deliver that software you know we're

00:05:18,639 --> 00:05:20,720
in service of the of the overall

00:05:20,160 --> 00:05:22,560
business

00:05:20,720 --> 00:05:24,240
right you know we we we have to work

00:05:22,560 --> 00:05:26,320
with sales we have to work with product

00:05:24,240 --> 00:05:29,120
management we have to work with support

00:05:26,320 --> 00:05:30,160
customer success you know all the

00:05:29,120 --> 00:05:32,479
functions hr

00:05:30,160 --> 00:05:33,680
finance all the functions in in in the

00:05:32,479 --> 00:05:34,639
company to make sure that we're

00:05:33,680 --> 00:05:37,280
delivering

00:05:34,639 --> 00:05:38,960
uh software uh that that meets the

00:05:37,280 --> 00:05:41,280
businesses needs that that

00:05:38,960 --> 00:05:42,560
that fill the gap that they see in the

00:05:41,280 --> 00:05:43,919
market or that

00:05:42,560 --> 00:05:45,840
you know provide the competitive

00:05:43,919 --> 00:05:48,000
advantage in in the market

00:05:45,840 --> 00:05:49,759
uh those sorts of things but you know as

00:05:48,000 --> 00:05:50,880
you can see even when you start using

00:05:49,759 --> 00:05:53,199
all of these

00:05:50,880 --> 00:05:54,800
um you know the architectures they see

00:05:53,199 --> 00:05:56,479
icd agile

00:05:54,800 --> 00:05:58,479
devops you know whatever whatever

00:05:56,479 --> 00:06:00,639
methodology you've chosen to sort of

00:05:58,479 --> 00:06:01,919
adopt and in what order

00:06:00,639 --> 00:06:03,840
because obviously there's overlap

00:06:01,919 --> 00:06:05,280
between a lot of these things but

00:06:03,840 --> 00:06:07,199
you know there's no magic bullet here

00:06:05,280 --> 00:06:08,479
you kind of still have to do it right

00:06:07,199 --> 00:06:11,120
so we're getting you know we're getting

00:06:08,479 --> 00:06:12,960
good at it you know we've embraced ci

00:06:11,120 --> 00:06:14,639
we're rapidly iterating on code so we're

00:06:12,960 --> 00:06:16,880
kind of doing all those things well

00:06:14,639 --> 00:06:18,639
we're building on top of that so that we

00:06:16,880 --> 00:06:20,800
can do more continuous delivery

00:06:18,639 --> 00:06:22,800
uh which is which is all well and good

00:06:20,800 --> 00:06:24,240
but to really kind of truly uplevel

00:06:22,800 --> 00:06:25,440
software delivery to you know

00:06:24,240 --> 00:06:27,759
first-class citizen

00:06:25,440 --> 00:06:28,639
in in in in the corporation and in the

00:06:27,759 --> 00:06:29,840
enterprise

00:06:28,639 --> 00:06:32,000
you know we need to adopt software

00:06:29,840 --> 00:06:35,520
delivery as a core business process

00:06:32,000 --> 00:06:36,400
and and um you know we have we have

00:06:35,520 --> 00:06:38,479
challenges there

00:06:36,400 --> 00:06:39,840
you know we we we still with all this

00:06:38,479 --> 00:06:42,000
have developers saying hey

00:06:39,840 --> 00:06:43,520
why am i building this feature who asked

00:06:42,000 --> 00:06:44,479
for it who is it for what are they going

00:06:43,520 --> 00:06:46,000
to do with it

00:06:44,479 --> 00:06:48,240
um why do i have to waste my time

00:06:46,000 --> 00:06:49,520
troubleshooting deployments um

00:06:48,240 --> 00:06:50,720
you know hopefully not too many people

00:06:49,520 --> 00:06:52,240
are saying that these days or at least

00:06:50,720 --> 00:06:53,919
not asking why they might be grumbling

00:06:52,240 --> 00:06:56,240
that they have to do it but

00:06:53,919 --> 00:06:57,919
they're not asking why um you know is my

00:06:56,240 --> 00:06:58,800
work serving delighting our end users

00:06:57,919 --> 00:07:00,160
you know

00:06:58,800 --> 00:07:01,680
what's the what's the lead time from

00:07:00,160 --> 00:07:03,360
when i finish my work to when i get to

00:07:01,680 --> 00:07:05,039
see somebody enjoying the the fruits of

00:07:03,360 --> 00:07:06,240
my labors

00:07:05,039 --> 00:07:07,919
from an engineering management

00:07:06,240 --> 00:07:09,759
perspective you know why is the release

00:07:07,919 --> 00:07:12,479
date the most important feature

00:07:09,759 --> 00:07:14,800
um is a frequent question i hear and

00:07:12,479 --> 00:07:16,000
i've probably said it a few times myself

00:07:14,800 --> 00:07:17,840
um you know how can i get better

00:07:16,000 --> 00:07:19,280
visibility into my team's tools and

00:07:17,840 --> 00:07:20,800
processes you know which

00:07:19,280 --> 00:07:22,080
which tools are helping which tools are

00:07:20,800 --> 00:07:23,120
hurting which ones are giving me

00:07:22,080 --> 00:07:25,039
visibility into the

00:07:23,120 --> 00:07:27,039
where the actual bottlenecks are and

00:07:25,039 --> 00:07:28,240
which ones are themselves the bottleneck

00:07:27,039 --> 00:07:29,919
sometimes

00:07:28,240 --> 00:07:31,599
how do i burn down the technical debt

00:07:29,919 --> 00:07:32,400
while embracing modern technology you

00:07:31,599 --> 00:07:34,400
know we

00:07:32,400 --> 00:07:35,520
we we we often forget when we're

00:07:34,400 --> 00:07:37,440
building software that there are

00:07:35,520 --> 00:07:39,120
non-functional requirements

00:07:37,440 --> 00:07:40,319
um you know we've got a list of features

00:07:39,120 --> 00:07:41,680
that we need to implement but there's a

00:07:40,319 --> 00:07:43,280
lot of other things that need to get

00:07:41,680 --> 00:07:44,240
done along the way you know we need good

00:07:43,280 --> 00:07:45,919
architecture

00:07:44,240 --> 00:07:48,319
we need good resilience we need good

00:07:45,919 --> 00:07:50,560
persistence we need you know good design

00:07:48,319 --> 00:07:52,560
and user experience and and all of those

00:07:50,560 --> 00:07:54,720
things to a greater degree or

00:07:52,560 --> 00:07:56,319
or or a lesser degree or are functional

00:07:54,720 --> 00:07:57,280
versus non-functional requirements and

00:07:56,319 --> 00:07:59,440
we still need to worry

00:07:57,280 --> 00:08:00,319
about that of course and then from a you

00:07:59,440 --> 00:08:01,759
know kind of an ops

00:08:00,319 --> 00:08:03,599
perspective and as you can see here this

00:08:01,759 --> 00:08:04,160
is very much the you know kind of the

00:08:03,599 --> 00:08:06,560
core

00:08:04,160 --> 00:08:07,599
product uh parts of of of the

00:08:06,560 --> 00:08:09,120
organization here

00:08:07,599 --> 00:08:10,479
but you know from an ops perspective you

00:08:09,120 --> 00:08:11,599
know how to absorb all this new

00:08:10,479 --> 00:08:13,919
technology and

00:08:11,599 --> 00:08:15,360
and app updates safely and and you know

00:08:13,919 --> 00:08:16,560
put them into production and keep them

00:08:15,360 --> 00:08:18,080
running in production

00:08:16,560 --> 00:08:20,160
how do i enable my developers with

00:08:18,080 --> 00:08:21,520
self-service you know how do i not

00:08:20,160 --> 00:08:23,360
become a bottleneck

00:08:21,520 --> 00:08:24,879
in in getting things out the door and

00:08:23,360 --> 00:08:25,759
standing up the environments that need

00:08:24,879 --> 00:08:27,520
to be

00:08:25,759 --> 00:08:29,039
you know stood up whether they're

00:08:27,520 --> 00:08:30,479
ephemeral environments that you know

00:08:29,039 --> 00:08:32,719
come and go very quickly or whether

00:08:30,479 --> 00:08:34,719
they're longer lived environment

00:08:32,719 --> 00:08:36,000
environments what have you you know and

00:08:34,719 --> 00:08:37,039
then if you know of course if you're in

00:08:36,000 --> 00:08:39,440
an industry

00:08:37,039 --> 00:08:40,959
that's at all regulated or subject audit

00:08:39,440 --> 00:08:42,800
or governance requirements

00:08:40,959 --> 00:08:44,640
you know who authorized this release did

00:08:42,800 --> 00:08:46,800
it pass all the security and qa tests

00:08:44,640 --> 00:08:49,519
what's in it why are we delivering this

00:08:46,800 --> 00:08:51,360
um and again that's just focusing on

00:08:49,519 --> 00:08:53,120
the the kind of the core technical heart

00:08:51,360 --> 00:08:54,640
of product but that's not the entire

00:08:53,120 --> 00:08:56,959
business right we've got the

00:08:54,640 --> 00:08:59,120
the cxo cto you know are we delivering

00:08:56,959 --> 00:09:01,519
against baselines are we being efficient

00:08:59,120 --> 00:09:02,399
uh are we are we um are we being

00:09:01,519 --> 00:09:04,399
effective

00:09:02,399 --> 00:09:06,080
uh all of those kinds of questions that

00:09:04,399 --> 00:09:08,000
are very high level questions

00:09:06,080 --> 00:09:09,760
um from the pm side you know where is

00:09:08,000 --> 00:09:11,440
this feature has it been delivered has

00:09:09,760 --> 00:09:14,240
has anybody used it yet have we gotten

00:09:11,440 --> 00:09:15,360
feedback um what do customers think

00:09:14,240 --> 00:09:16,640
sales and marketing you know what

00:09:15,360 --> 00:09:18,160
features and development can help me

00:09:16,640 --> 00:09:20,399
solve my customers needs

00:09:18,160 --> 00:09:22,000
and the one that i know can help with

00:09:20,399 --> 00:09:23,360
this customer's needs where is it

00:09:22,000 --> 00:09:25,440
when is it going to be delivered when

00:09:23,360 --> 00:09:27,440
will when will it be available will be

00:09:25,440 --> 00:09:29,360
will we have a preview program for it

00:09:27,440 --> 00:09:31,600
where i can show it to people early

00:09:29,360 --> 00:09:32,959
um those those kinds of questions are

00:09:31,600 --> 00:09:34,800
going to be very common

00:09:32,959 --> 00:09:36,640
and then of course you know for support

00:09:34,800 --> 00:09:38,720
you know i'm talking to a customer

00:09:36,640 --> 00:09:40,640
um what feature flags are enabled for

00:09:38,720 --> 00:09:42,160
this customer you know so that i know

00:09:40,640 --> 00:09:43,680
what it is that they're looking at right

00:09:42,160 --> 00:09:45,040
are they in the preview program for this

00:09:43,680 --> 00:09:46,720
new feature or not

00:09:45,040 --> 00:09:48,080
um so there's all kinds of questions

00:09:46,720 --> 00:09:48,720
that kind of need to get asked and

00:09:48,080 --> 00:09:51,200
answered

00:09:48,720 --> 00:09:52,959
in this context and when we're you know

00:09:51,200 --> 00:09:53,279
when we're in the enterprise context you

00:09:52,959 --> 00:09:55,920
know

00:09:53,279 --> 00:09:57,839
um sizable established companies with

00:09:55,920 --> 00:10:00,720
many products many teams

00:09:57,839 --> 00:10:01,360
uh geographically distributed teams um

00:10:00,720 --> 00:10:03,120
you know

00:10:01,360 --> 00:10:04,959
of course now we're all to greater or

00:10:03,120 --> 00:10:05,680
lesser degree geographically distributed

00:10:04,959 --> 00:10:08,800
since most of us

00:10:05,680 --> 00:10:09,839
are are when possible uh uh working from

00:10:08,800 --> 00:10:11,760
home but you know

00:10:09,839 --> 00:10:13,519
nonetheless you know we're even in

00:10:11,760 --> 00:10:14,959
normal times dealing with distributed

00:10:13,519 --> 00:10:16,240
teams on in different countries

00:10:14,959 --> 00:10:19,120
different time zones

00:10:16,240 --> 00:10:19,519
uh different continents uh even um and

00:10:19,120 --> 00:10:22,160
and

00:10:19,519 --> 00:10:23,360
you know doing release is is is a big

00:10:22,160 --> 00:10:24,959
enterprise software

00:10:23,360 --> 00:10:26,480
enterprise software challenge and and

00:10:24,959 --> 00:10:28,720
it's difficult to do

00:10:26,480 --> 00:10:30,160
you know it's it's it's it's reasonable

00:10:28,720 --> 00:10:31,120
to do when you're dealing with you know

00:10:30,160 --> 00:10:32,880
one app

00:10:31,120 --> 00:10:34,480
being released into one environment or

00:10:32,880 --> 00:10:35,760
one set of environments

00:10:34,480 --> 00:10:37,519
you know because you can kind of connect

00:10:35,760 --> 00:10:39,279
the dots between all the tooling that

00:10:37,519 --> 00:10:40,959
you bring to bear on this you know you

00:10:39,279 --> 00:10:42,480
you've got some issue tracking software

00:10:40,959 --> 00:10:44,320
you've got some ci builds that you're

00:10:42,480 --> 00:10:46,399
doing you've got some quality stuff that

00:10:44,320 --> 00:10:48,560
you're doing some automated testing

00:10:46,399 --> 00:10:50,160
infrastructure you've got a um you know

00:10:48,560 --> 00:10:51,279
you've got some ui testing to do and

00:10:50,160 --> 00:10:52,640
then you've got an environment that

00:10:51,279 --> 00:10:54,959
you're going to deploy it into and

00:10:52,640 --> 00:10:56,480
that that looks straightforward but you

00:10:54,959 --> 00:10:58,720
know the reality is that when you're in

00:10:56,480 --> 00:11:01,600
an enterprise when you're in a sizable

00:10:58,720 --> 00:11:02,880
company you're dealing with this times x

00:11:01,600 --> 00:11:05,600
right you you've got

00:11:02,880 --> 00:11:06,880
lots of different teams you've got lots

00:11:05,600 --> 00:11:08,720
of different products

00:11:06,880 --> 00:11:10,000
lots of different environments that come

00:11:08,720 --> 00:11:11,600
and go

00:11:10,000 --> 00:11:13,360
you've got lots of different technology

00:11:11,600 --> 00:11:14,720
stacks you know and and if you're a

00:11:13,360 --> 00:11:16,720
sizable enough

00:11:14,720 --> 00:11:18,480
uh or organization and you've been

00:11:16,720 --> 00:11:20,640
around long enough you probably also

00:11:18,480 --> 00:11:22,560
have many different generations of

00:11:20,640 --> 00:11:23,680
of technology uh that you have to

00:11:22,560 --> 00:11:26,560
wrangle uh

00:11:23,680 --> 00:11:27,440
and maintain and use to build on on top

00:11:26,560 --> 00:11:29,519
of and

00:11:27,440 --> 00:11:31,360
you know as as much as it's awesome that

00:11:29,519 --> 00:11:33,519
you know almost every day it seems like

00:11:31,360 --> 00:11:34,720
we have a new cool technology that shows

00:11:33,519 --> 00:11:36,480
up you know most of them

00:11:34,720 --> 00:11:37,760
show up and they they shine brightly for

00:11:36,480 --> 00:11:39,200
a few weeks or a few months and then

00:11:37,760 --> 00:11:40,000
they kind of go by the wayside but some

00:11:39,200 --> 00:11:41,839
of them stick

00:11:40,000 --> 00:11:43,279
you know and become very useful very

00:11:41,839 --> 00:11:45,279
valuable things

00:11:43,279 --> 00:11:47,200
that we use to build on going forward

00:11:45,279 --> 00:11:48,480
but you know it's never the case that we

00:11:47,200 --> 00:11:50,320
go back and rebuild

00:11:48,480 --> 00:11:52,079
all the existing applications on top of

00:11:50,320 --> 00:11:52,800
this new wonderful technology that we

00:11:52,079 --> 00:11:54,000
have

00:11:52,800 --> 00:11:55,839
you know that would be a little bit like

00:11:54,000 --> 00:11:57,279
you know when when we change the

00:11:55,839 --> 00:11:58,480
building codes or when we change the

00:11:57,279 --> 00:12:00,880
fire codes we don't go

00:11:58,480 --> 00:12:02,560
tear down all the existing buildings and

00:12:00,880 --> 00:12:04,160
rebuild them to the new building code

00:12:02,560 --> 00:12:06,079
just because now we know you know

00:12:04,160 --> 00:12:08,000
well you know we shouldn't use flying

00:12:06,079 --> 00:12:09,440
buttresses because they're not as

00:12:08,000 --> 00:12:11,279
resilient as we thought they would so we

00:12:09,440 --> 00:12:12,639
got to go tear down all these cathedrals

00:12:11,279 --> 00:12:14,720
and rebuild them to be

00:12:12,639 --> 00:12:15,920
you know to be a little bit safer of

00:12:14,720 --> 00:12:17,279
course we don't do that right and we

00:12:15,920 --> 00:12:18,000
don't do that with software either we

00:12:17,279 --> 00:12:19,920
don't go

00:12:18,000 --> 00:12:21,519
rewrite all the applications or all the

00:12:19,920 --> 00:12:23,120
platforms that we have just because if

00:12:21,519 --> 00:12:24,240
we were to write them today we would use

00:12:23,120 --> 00:12:25,680
a different technology

00:12:24,240 --> 00:12:27,839
sometimes that means we're dealing with

00:12:25,680 --> 00:12:31,440
technologies that are 5 10

00:12:27,839 --> 00:12:33,279
15 50 years old and and we have to make

00:12:31,440 --> 00:12:34,720
do with that you know if anything we can

00:12:33,279 --> 00:12:36,639
you know we can strangle them out of

00:12:34,720 --> 00:12:38,000
existence in terms of you know applying

00:12:36,639 --> 00:12:40,079
the strangler pattern and

00:12:38,000 --> 00:12:41,920
and siphoning off various pieces of

00:12:40,079 --> 00:12:43,040
functionality into new systems if it

00:12:41,920 --> 00:12:44,320
really is a

00:12:43,040 --> 00:12:46,399
a problem that we have that old

00:12:44,320 --> 00:12:46,800
technology in in the architecture but

00:12:46,399 --> 00:12:48,160
it's

00:12:46,800 --> 00:12:49,519
it's difficult to do and you may have a

00:12:48,160 --> 00:12:50,480
lot of dependencies that you have to

00:12:49,519 --> 00:12:53,519
deal with when

00:12:50,480 --> 00:12:54,800
when you do that so so kind of getting

00:12:53,519 --> 00:12:55,839
just to the heart of what i want to talk

00:12:54,800 --> 00:12:58,079
about today

00:12:55,839 --> 00:13:00,880
a little bit is what i'm calling the

00:12:58,079 --> 00:13:02,399
goldilocks problem of software delivery

00:13:00,880 --> 00:13:04,240
and i'll go through the list there but

00:13:02,399 --> 00:13:07,519
it's really just the point of this is

00:13:04,240 --> 00:13:08,480
features are the unit of value by which

00:13:07,519 --> 00:13:12,160
we deliver

00:13:08,480 --> 00:13:14,560
stuff to our customers right so i i as a

00:13:12,160 --> 00:13:15,360
as a consumer of an application i look

00:13:14,560 --> 00:13:18,000
for features

00:13:15,360 --> 00:13:19,600
right um is you know am i able to size

00:13:18,000 --> 00:13:20,000
the text correctly have i added that

00:13:19,600 --> 00:13:22,000
feature

00:13:20,000 --> 00:13:23,600
you know does it work in night mode and

00:13:22,000 --> 00:13:25,760
day mode on my phone or

00:13:23,600 --> 00:13:27,279
is it going to blast my eyeballs if i

00:13:25,760 --> 00:13:29,839
you know open up that application at

00:13:27,279 --> 00:13:31,519
five in the morning when i wake up

00:13:29,839 --> 00:13:32,959
you know that's that's what i care about

00:13:31,519 --> 00:13:34,800
i don't care about releases

00:13:32,959 --> 00:13:36,720
i certainly as a consumer don't care

00:13:34,800 --> 00:13:38,320
about builds um but in

00:13:36,720 --> 00:13:40,160
but on the other side of the fence you

00:13:38,320 --> 00:13:41,120
know in where we're actually building

00:13:40,160 --> 00:13:43,120
and delivering

00:13:41,120 --> 00:13:45,199
delivering uh software we're very

00:13:43,120 --> 00:13:47,360
consumed by things like releases

00:13:45,199 --> 00:13:49,199
and by builds and rightfully so this is

00:13:47,360 --> 00:13:51,120
definitely not an argument that you know

00:13:49,199 --> 00:13:53,279
hey stop doing releases or hey stop

00:13:51,120 --> 00:13:55,600
doing builds don't don't mistake me

00:13:53,279 --> 00:13:56,560
but what we need to do is start looking

00:13:55,600 --> 00:13:59,279
at other things

00:13:56,560 --> 00:14:00,720
that are in the case of you know the the

00:13:59,279 --> 00:14:01,600
problem with the releases is they're too

00:14:00,720 --> 00:14:03,839
big

00:14:01,600 --> 00:14:04,800
right they're they're a great organizing

00:14:03,839 --> 00:14:07,920
principle for

00:14:04,800 --> 00:14:11,040
for software teams um uh you know you

00:14:07,920 --> 00:14:12,959
you can't um you know you you

00:14:11,040 --> 00:14:14,480
you you can't just sort of palmell

00:14:12,959 --> 00:14:17,279
necessarily in in all

00:14:14,480 --> 00:14:18,639
situations just be throwing software out

00:14:17,279 --> 00:14:20,320
the door it just doesn't work that way

00:14:18,639 --> 00:14:22,480
if you're in a regulated environment you

00:14:20,320 --> 00:14:25,680
need to have some process around that

00:14:22,480 --> 00:14:28,639
even if you're very very up-to-date and

00:14:25,680 --> 00:14:30,480
and well versed in devops and continuous

00:14:28,639 --> 00:14:32,079
delivery and ci and all of those things

00:14:30,480 --> 00:14:33,760
you still need to have a process around

00:14:32,079 --> 00:14:35,199
how those things go out because

00:14:33,760 --> 00:14:37,519
you need to coordinate with the real

00:14:35,199 --> 00:14:38,480
world have the training materials for

00:14:37,519 --> 00:14:40,160
this been written

00:14:38,480 --> 00:14:41,920
has this been passed by you know by the

00:14:40,160 --> 00:14:43,040
attorneys do we have the regulatory

00:14:41,920 --> 00:14:45,279
approval for this

00:14:43,040 --> 00:14:47,360
um you know all of those kinds of things

00:14:45,279 --> 00:14:48,480
get a little bit more complicated in in

00:14:47,360 --> 00:14:49,839
in different scenarios

00:14:48,480 --> 00:14:52,800
but we tend to bucket these things into

00:14:49,839 --> 00:14:54,240
releases you know and 10 15 20 years ago

00:14:52,800 --> 00:14:56,399
we were doing releases that you know

00:14:54,240 --> 00:14:58,240
sort of 18 to two month cadences and in

00:14:56,399 --> 00:15:00,320
some case much longer

00:14:58,240 --> 00:15:01,680
and so you know when you look at a

00:15:00,320 --> 00:15:03,920
feature not everything that goes

00:15:01,680 --> 00:15:05,680
sorry when you look at a release not

00:15:03,920 --> 00:15:07,440
everything in a release is for everyone

00:15:05,680 --> 00:15:08,720
right and i only care about those

00:15:07,440 --> 00:15:10,240
particular releases or

00:15:08,720 --> 00:15:12,560
features in the release that i care

00:15:10,240 --> 00:15:16,399
about the rest is is fluff

00:15:12,560 --> 00:15:18,560
um and and because features are added to

00:15:16,399 --> 00:15:20,880
and removed from releases all the time

00:15:18,560 --> 00:15:22,079
right if if you have a kind of a cadence

00:15:20,880 --> 00:15:24,079
for your releases where

00:15:22,079 --> 00:15:26,079
release goes out every month or release

00:15:24,079 --> 00:15:28,720
goes out every week or every quarter

00:15:26,079 --> 00:15:30,160
then if a feature isn't ready if it

00:15:28,720 --> 00:15:31,920
turns out hey we thought

00:15:30,160 --> 00:15:34,480
feature x was going to be ready but it's

00:15:31,920 --> 00:15:36,240
not um we need to pull it so

00:15:34,480 --> 00:15:37,839
at that point if i'm the person waiting

00:15:36,240 --> 00:15:38,560
for feature x i no longer care about

00:15:37,839 --> 00:15:40,800
that release

00:15:38,560 --> 00:15:42,000
it's no longer it's it doesn't exist

00:15:40,800 --> 00:15:44,959
it's dead to me

00:15:42,000 --> 00:15:46,480
right so so because features you know

00:15:44,959 --> 00:15:48,720
enter and join releases you know

00:15:46,480 --> 00:15:50,639
sometimes at very late stages

00:15:48,720 --> 00:15:51,839
um the the you know customers more and

00:15:50,639 --> 00:15:54,399
more don't really care about

00:15:51,839 --> 00:15:56,240
releases right and especially you know

00:15:54,399 --> 00:15:57,680
we do such a really kind of terrible job

00:15:56,240 --> 00:15:59,920
industry-wide

00:15:57,680 --> 00:16:01,519
of release notes i don't even know

00:15:59,920 --> 00:16:01,759
what's in most releases when they come

00:16:01,519 --> 00:16:03,360
out

00:16:01,759 --> 00:16:04,959
you know especially on mobile you know

00:16:03,360 --> 00:16:07,440
i'll call that mobile as a

00:16:04,959 --> 00:16:08,000
as a terrible example of overall of how

00:16:07,440 --> 00:16:10,480
to do things like

00:16:08,000 --> 00:16:12,800
release notes because 90 of the release

00:16:10,480 --> 00:16:15,279
notes i see in a mobile app release is

00:16:12,800 --> 00:16:16,160
bug fixes and performance improvements

00:16:15,279 --> 00:16:18,160
right

00:16:16,160 --> 00:16:19,519
okay you know more than that hopefully

00:16:18,160 --> 00:16:21,040
about what's in the software that you

00:16:19,519 --> 00:16:22,560
just released can you give me a little

00:16:21,040 --> 00:16:24,079
more detail on this so that i know

00:16:22,560 --> 00:16:25,600
whether i should care about this

00:16:24,079 --> 00:16:27,360
now you know is there a security fix in

00:16:25,600 --> 00:16:29,519
there or do i need to know the

00:16:27,360 --> 00:16:31,040
the gory details of that no but what

00:16:29,519 --> 00:16:32,639
what value did you add what things do

00:16:31,040 --> 00:16:35,040
you want me to try and go look for

00:16:32,639 --> 00:16:36,720
right there's there's none none of that

00:16:35,040 --> 00:16:37,360
so so frequently which i think boils

00:16:36,720 --> 00:16:39,519
down to

00:16:37,360 --> 00:16:41,199
people don't know what's going into that

00:16:39,519 --> 00:16:42,160
release their job is just to push it out

00:16:41,199 --> 00:16:43,440
the door

00:16:42,160 --> 00:16:45,920
and that's a little bit of a problem

00:16:43,440 --> 00:16:48,800
right um now on the other hand

00:16:45,920 --> 00:16:49,360
you know about 20 years or so we started

00:16:48,800 --> 00:16:50,800
thinking

00:16:49,360 --> 00:16:52,720
really quite a bit about continuous

00:16:50,800 --> 00:16:54,800
integration and the build

00:16:52,720 --> 00:16:56,399
right the build became a paramount thing

00:16:54,800 --> 00:16:58,079
that that we focused on and for good

00:16:56,399 --> 00:16:58,800
reason because we were in pretty sad

00:16:58,079 --> 00:17:01,360
shape and

00:16:58,800 --> 00:17:03,360
in a lot of cases still are um you know

00:17:01,360 --> 00:17:05,280
we we had processes where people would

00:17:03,360 --> 00:17:06,720
go off for multiple weeks at a time

00:17:05,280 --> 00:17:07,760
and write their own code and then they

00:17:06,720 --> 00:17:09,039
would come back and we'd have an

00:17:07,760 --> 00:17:11,199
integration storm

00:17:09,039 --> 00:17:12,480
where for another six weeks we'd go off

00:17:11,199 --> 00:17:13,280
and just try to make the thing compile

00:17:12,480 --> 00:17:14,880
again

00:17:13,280 --> 00:17:18,880
and you know continuous integration was

00:17:14,880 --> 00:17:20,480
a great uh and very useful uh um

00:17:18,880 --> 00:17:22,079
paradigm when it came along to say look

00:17:20,480 --> 00:17:23,280
you got to be building all the time

00:17:22,079 --> 00:17:24,880
you got to make sure that this thing is

00:17:23,280 --> 00:17:26,400
at the very least building and passing

00:17:24,880 --> 00:17:27,039
some smoke tests you know some unit

00:17:26,400 --> 00:17:28,960
tests

00:17:27,039 --> 00:17:30,480
you know hopefully more than just a few

00:17:28,960 --> 00:17:31,760
but but that you know

00:17:30,480 --> 00:17:33,280
each and every day that you're

00:17:31,760 --> 00:17:34,880
committing code that you're building and

00:17:33,280 --> 00:17:36,559
keeping that build green

00:17:34,880 --> 00:17:38,320
and making sure that you have a system

00:17:36,559 --> 00:17:39,840
that's up and running at all times you

00:17:38,320 --> 00:17:40,880
know that's a prereq for doing any of

00:17:39,840 --> 00:17:42,720
the other

00:17:40,880 --> 00:17:44,720
more fancy stuff continuous delivery

00:17:42,720 --> 00:17:45,840
devops you know those sorts of things if

00:17:44,720 --> 00:17:48,480
you can't get your continuous

00:17:45,840 --> 00:17:49,760
integration uh pipeline up and running

00:17:48,480 --> 00:17:52,320
and providing

00:17:49,760 --> 00:17:53,679
uh a stable signal to you then then you

00:17:52,320 --> 00:17:55,760
know that that's very painful

00:17:53,679 --> 00:17:57,440
so again i'm absolutely not saying stop

00:17:55,760 --> 00:17:58,480
doing releases i'm absolutely not saying

00:17:57,440 --> 00:18:00,400
stop doing

00:17:58,480 --> 00:18:03,039
builds or stopped doing ci but on the

00:18:00,400 --> 00:18:05,440
other hand as a consumer of the feature

00:18:03,039 --> 00:18:06,880
i really don't care about builds right

00:18:05,440 --> 00:18:08,320
if i don't care about releases because

00:18:06,880 --> 00:18:10,000
they have a bunch of stuff in them

00:18:08,320 --> 00:18:11,760
that you know a you're not telling me

00:18:10,000 --> 00:18:13,200
about and b it doesn't have the thing

00:18:11,760 --> 00:18:14,799
that i wanted to have in there then i

00:18:13,200 --> 00:18:16,000
don't care about releases i really don't

00:18:14,799 --> 00:18:17,520
care about builds right because you're

00:18:16,000 --> 00:18:20,320
going to do a thousand builds

00:18:17,520 --> 00:18:22,160
um hopefully for for each release that

00:18:20,320 --> 00:18:23,520
you do so so that's too small

00:18:22,160 --> 00:18:25,600
right so you can kind of see where the

00:18:23,520 --> 00:18:27,039
goldilocks thing is coming in here where

00:18:25,600 --> 00:18:29,360
releases are too big builds are too

00:18:27,039 --> 00:18:31,200
small it's features that are just right

00:18:29,360 --> 00:18:33,039
now i'm using a fairly expansive

00:18:31,200 --> 00:18:34,960
definition of features here right so to

00:18:33,039 --> 00:18:36,640
me a security fix is a feature

00:18:34,960 --> 00:18:38,000
right because quality and security are

00:18:36,640 --> 00:18:41,120
features that we want

00:18:38,000 --> 00:18:43,600
in in in our in our software but so is

00:18:41,120 --> 00:18:45,600
adding new functionality you know

00:18:43,600 --> 00:18:47,120
giving me the ability to do something

00:18:45,600 --> 00:18:48,880
that i couldn't do before

00:18:47,120 --> 00:18:50,160
or giving me the ability to do something

00:18:48,880 --> 00:18:51,679
that i've always done with the product

00:18:50,160 --> 00:18:52,559
but now do it a lot better or do it a

00:18:51,679 --> 00:18:54,400
lot faster

00:18:52,559 --> 00:18:55,600
or maybe stop doing something that i

00:18:54,400 --> 00:18:56,000
used to be able to do that was just sort

00:18:55,600 --> 00:18:57,520
of busy

00:18:56,000 --> 00:18:59,520
work that i would rather just have it do

00:18:57,520 --> 00:19:02,559
for me automatically it's really

00:18:59,520 --> 00:19:04,880
it's really features where my experience

00:19:02,559 --> 00:19:06,880
as a as a user of your software as a

00:19:04,880 --> 00:19:08,400
consumer of of the value that you're

00:19:06,880 --> 00:19:09,600
putting out in the world

00:19:08,400 --> 00:19:12,000
you know that's where the rubber hits

00:19:09,600 --> 00:19:14,799
the road literally um

00:19:12,000 --> 00:19:16,480
and and yet you know we kind of don't

00:19:14,799 --> 00:19:18,240
look at it that way very often

00:19:16,480 --> 00:19:19,840
in software organizations especially

00:19:18,240 --> 00:19:21,520
large you know larger software

00:19:19,840 --> 00:19:22,240
organizations for sure if you're a small

00:19:21,520 --> 00:19:24,080
team

00:19:22,240 --> 00:19:25,840
and you're focused on one product and

00:19:24,080 --> 00:19:27,200
and that's all you live and care about

00:19:25,840 --> 00:19:28,080
then you know life is a little bit

00:19:27,200 --> 00:19:30,160
different for you

00:19:28,080 --> 00:19:31,520
but in larger organizations it's it's

00:19:30,160 --> 00:19:34,720
it's much more

00:19:31,520 --> 00:19:35,039
um muddy than that let's say right so

00:19:34,720 --> 00:19:36,000
you've

00:19:35,039 --> 00:19:37,919
you know you've got a product

00:19:36,000 --> 00:19:39,360
organization and our goal is to develop

00:19:37,919 --> 00:19:40,880
our products you know here we've got you

00:19:39,360 --> 00:19:42,080
know kind of generic product a and

00:19:40,880 --> 00:19:44,799
product b

00:19:42,080 --> 00:19:45,280
on on this slide and our job is to solve

00:19:44,799 --> 00:19:48,080
you know

00:19:45,280 --> 00:19:49,600
customer slash user problems and delight

00:19:48,080 --> 00:19:51,360
our users and you know of course as a

00:19:49,600 --> 00:19:53,280
side effect generate revenue

00:19:51,360 --> 00:19:55,840
for the business or love or respect or

00:19:53,280 --> 00:19:57,600
you know whatever whatever currency is

00:19:55,840 --> 00:19:59,440
it is that we want to be rewarded in for

00:19:57,600 --> 00:20:02,480
for what we do and and

00:19:59,440 --> 00:20:03,520
you know we've we've got a a lot of a

00:20:02,480 --> 00:20:04,960
lot of features

00:20:03,520 --> 00:20:06,559
uh that we're developing as part of

00:20:04,960 --> 00:20:08,320
these products you know some of them are

00:20:06,559 --> 00:20:11,520
small some of them are large

00:20:08,320 --> 00:20:13,360
um and you know our job is to get these

00:20:11,520 --> 00:20:14,799
features out the door on on a regular

00:20:13,360 --> 00:20:16,000
predictable cadence

00:20:14,799 --> 00:20:17,919
um so that we're you know we're

00:20:16,000 --> 00:20:18,880
competitive we're innovative we can

00:20:17,919 --> 00:20:20,480
differentiate and

00:20:18,880 --> 00:20:22,480
and you know we can delight our users

00:20:20,480 --> 00:20:25,600
with with the functionality

00:20:22,480 --> 00:20:27,760
and we've got a veritable ton

00:20:25,600 --> 00:20:29,840
of tools that we bring to bear on this

00:20:27,760 --> 00:20:31,760
you know most of us with with sizable

00:20:29,840 --> 00:20:34,480
organizations we've got dozens

00:20:31,760 --> 00:20:35,760
sometimes hundreds of various tools that

00:20:34,480 --> 00:20:37,840
we bring to bear on on

00:20:35,760 --> 00:20:39,120
on this problem you know starting all

00:20:37,840 --> 00:20:40,080
the way with the white board when we

00:20:39,120 --> 00:20:41,760
first have our

00:20:40,080 --> 00:20:43,039
idea and we write that out which you

00:20:41,760 --> 00:20:44,400
know now there's less and less

00:20:43,039 --> 00:20:45,679
whiteboarding being done as we're not in

00:20:44,400 --> 00:20:47,919
the office very more

00:20:45,679 --> 00:20:49,200
very much anymore but you know i sort of

00:20:47,919 --> 00:20:51,360
miss that i got to figure out what my

00:20:49,200 --> 00:20:53,360
whiteboard is online

00:20:51,360 --> 00:20:54,480
but we've got a multitude of tools

00:20:53,360 --> 00:20:56,480
across a large

00:20:54,480 --> 00:20:58,320
variety of functions you know within the

00:20:56,480 --> 00:21:00,000
business and speaking not just

00:20:58,320 --> 00:21:02,240
you know kind of to the core product

00:21:00,000 --> 00:21:04,000
aspects but to the business as a whole

00:21:02,240 --> 00:21:05,520
you know we've we've got you know issue

00:21:04,000 --> 00:21:07,200
tracking tools we've got source code

00:21:05,520 --> 00:21:09,200
management tools we've got

00:21:07,200 --> 00:21:10,720
cloud uh environments that we're

00:21:09,200 --> 00:21:12,080
deploying into

00:21:10,720 --> 00:21:14,320
we've got things like maybe feature

00:21:12,080 --> 00:21:16,400
flags that we're using to turn

00:21:14,320 --> 00:21:17,600
functionality on and off at run time in

00:21:16,400 --> 00:21:19,600
production

00:21:17,600 --> 00:21:20,960
either to run experiments or maybe to

00:21:19,600 --> 00:21:22,320
roll things back without actually

00:21:20,960 --> 00:21:25,120
rolling things back

00:21:22,320 --> 00:21:26,799
right you use feature flags to to to

00:21:25,120 --> 00:21:28,240
hide a feature that you know turns out

00:21:26,799 --> 00:21:29,120
it has a problem and isn't quite ready

00:21:28,240 --> 00:21:32,320
yet or

00:21:29,120 --> 00:21:32,960
use feature flags to expose only a

00:21:32,320 --> 00:21:34,480
certain

00:21:32,960 --> 00:21:37,200
set of functionality only to certain

00:21:34,480 --> 00:21:38,960
users either only in this area or maybe

00:21:37,200 --> 00:21:40,559
this percentage of people or

00:21:38,960 --> 00:21:41,840
maybe just this one customer who's

00:21:40,559 --> 00:21:42,799
waiting for this feature and we want

00:21:41,840 --> 00:21:45,840
their feedback

00:21:42,799 --> 00:21:48,159
um so so tons of different tools

00:21:45,840 --> 00:21:49,600
that we're using now these tools tend to

00:21:48,159 --> 00:21:51,280
be fairly disconnected

00:21:49,600 --> 00:21:53,600
right they're essentially turning into

00:21:51,280 --> 00:21:55,039
data silos and you know one of the

00:21:53,600 --> 00:21:56,720
things that we've been very successful

00:21:55,039 --> 00:21:58,240
at as a whole in the industry over the

00:21:56,720 --> 00:22:01,039
last decade or so

00:21:58,240 --> 00:22:02,880
with with with agile with devops with

00:22:01,039 --> 00:22:04,240
with all the kind of methodologies and

00:22:02,880 --> 00:22:06,400
cultural things that we're doing is

00:22:04,240 --> 00:22:08,080
we've gotten pretty good

00:22:06,400 --> 00:22:09,520
at tearing down silos between

00:22:08,080 --> 00:22:11,760
organizations

00:22:09,520 --> 00:22:12,960
not everywhere not all of them you know

00:22:11,760 --> 00:22:14,720
they're still around

00:22:12,960 --> 00:22:16,240
but i think it's kind of recognized

00:22:14,720 --> 00:22:16,960
across the industry that you know you

00:22:16,240 --> 00:22:18,640
don't just

00:22:16,960 --> 00:22:20,080
you know come up with a bunch of

00:22:18,640 --> 00:22:21,760
requirements and throw them over the

00:22:20,080 --> 00:22:23,200
fence to engineering who then sit for

00:22:21,760 --> 00:22:25,200
six months and write a bunch of code and

00:22:23,200 --> 00:22:26,640
then throw it over the fence to qa

00:22:25,200 --> 00:22:28,000
who then you know works on it for three

00:22:26,640 --> 00:22:29,120
months and you know throws it over the

00:22:28,000 --> 00:22:30,559
fence to the customer

00:22:29,120 --> 00:22:32,320
kind of the waterfall method that we

00:22:30,559 --> 00:22:32,640
used to use in the past that you know

00:22:32,320 --> 00:22:34,159
that

00:22:32,640 --> 00:22:35,679
that doesn't produce the best outcomes

00:22:34,159 --> 00:22:37,120
and we know that um

00:22:35,679 --> 00:22:39,039
and so we've gotten better at sort of

00:22:37,120 --> 00:22:40,240
iterating you know and doing multiple

00:22:39,039 --> 00:22:42,000
passes through these things

00:22:40,240 --> 00:22:43,600
and and making sure that we don't wait

00:22:42,000 --> 00:22:44,720
until everything is done before we

00:22:43,600 --> 00:22:46,640
expose

00:22:44,720 --> 00:22:48,000
that that functionality to users you

00:22:46,640 --> 00:22:49,600
know we try to work with small batch

00:22:48,000 --> 00:22:51,919
sizes for example

00:22:49,600 --> 00:22:52,799
but the truth is these tools to a large

00:22:51,919 --> 00:22:55,120
degree that we use

00:22:52,799 --> 00:22:56,960
are still silos of data and so when i

00:22:55,120 --> 00:22:58,799
want to start asking questions like you

00:22:56,960 --> 00:23:00,720
know where is this feature where is it

00:22:58,799 --> 00:23:02,880
is it blocked what is it waiting on

00:23:00,720 --> 00:23:04,080
what do we need to do how do i get it

00:23:02,880 --> 00:23:05,600
unblocked

00:23:04,080 --> 00:23:07,440
when is it going to ship when is it

00:23:05,600 --> 00:23:09,039
going to be available in preview

00:23:07,440 --> 00:23:10,480
those sorts of questions are still kind

00:23:09,039 --> 00:23:13,600
of notoriously difficult

00:23:10,480 --> 00:23:15,120
to answer um if if an engineering

00:23:13,600 --> 00:23:17,760
manager or product manager

00:23:15,120 --> 00:23:19,679
or or project manager is tasked with

00:23:17,760 --> 00:23:21,200
keeping track of those kinds of things

00:23:19,679 --> 00:23:23,120
chances are they spend quite a bit of

00:23:21,200 --> 00:23:25,440
time in in these tools

00:23:23,120 --> 00:23:27,520
and jumping between these tools and then

00:23:25,440 --> 00:23:30,240
you know probably copying pasting into

00:23:27,520 --> 00:23:31,679
into slide presentations or spreadsheets

00:23:30,240 --> 00:23:33,360
all of the information that they need on

00:23:31,679 --> 00:23:34,960
a daily basis to sort of communicate

00:23:33,360 --> 00:23:35,440
this and it's a pretty tedious thing to

00:23:34,960 --> 00:23:37,120
do

00:23:35,440 --> 00:23:38,480
and subject to errors and

00:23:37,120 --> 00:23:40,720
interpretations and

00:23:38,480 --> 00:23:42,480
and all of those kinds of things and you

00:23:40,720 --> 00:23:44,480
know the the that's just you know

00:23:42,480 --> 00:23:45,840
focusing on the product specific things

00:23:44,480 --> 00:23:47,360
right then we've got things that happen

00:23:45,840 --> 00:23:48,720
upstream and downstream of that we've

00:23:47,360 --> 00:23:50,799
got support tooling

00:23:48,720 --> 00:23:52,480
we've got performance metrics that we

00:23:50,799 --> 00:23:55,600
want to be uh deriving

00:23:52,480 --> 00:23:57,520
we've got sales support uh tools that

00:23:55,600 --> 00:23:59,200
we're using we've got behavior analytics

00:23:57,520 --> 00:24:00,640
that we're using to figure out hey what

00:23:59,200 --> 00:24:01,919
parts of the product are people using

00:24:00,640 --> 00:24:03,440
where are they getting stuck where are

00:24:01,919 --> 00:24:04,640
they getting confused

00:24:03,440 --> 00:24:05,679
all of those kinds of things some of

00:24:04,640 --> 00:24:07,279
those things a lot of those things

00:24:05,679 --> 00:24:08,000
happen before we write the first line of

00:24:07,279 --> 00:24:09,760
code and

00:24:08,000 --> 00:24:11,600
some of them continue after we write you

00:24:09,760 --> 00:24:13,440
know quote-unquote the last

00:24:11,600 --> 00:24:15,600
line of code at least for for for a

00:24:13,440 --> 00:24:17,360
given release or or a given feature

00:24:15,600 --> 00:24:18,640
so there's a lot of tooling that that we

00:24:17,360 --> 00:24:20,559
need to rely on

00:24:18,640 --> 00:24:21,760
and that provides us with a lot of

00:24:20,559 --> 00:24:25,200
information but in

00:24:21,760 --> 00:24:28,320
a set of silos that you know ought to

00:24:25,200 --> 00:24:31,039
give us the ability to um you know get

00:24:28,320 --> 00:24:33,120
visibility into this process and know

00:24:31,039 --> 00:24:36,320
where the blockers are occurring and

00:24:33,120 --> 00:24:37,919
where feature delivery is being delayed

00:24:36,320 --> 00:24:39,520
because sometimes the release isn't

00:24:37,919 --> 00:24:41,440
being delayed right it's

00:24:39,520 --> 00:24:42,559
an individual feature in that release

00:24:41,440 --> 00:24:44,480
being delayed

00:24:42,559 --> 00:24:46,159
and the likely outcome of that is if the

00:24:44,480 --> 00:24:47,360
feature is delayed enough it get kicked

00:24:46,159 --> 00:24:49,360
it gets kicked out of the

00:24:47,360 --> 00:24:50,960
the release and so that feature is no

00:24:49,360 --> 00:24:52,480
longer part of that release that release

00:24:50,960 --> 00:24:54,880
goes without that feature

00:24:52,480 --> 00:24:55,760
so if i was tracking this at the release

00:24:54,880 --> 00:24:57,840
level

00:24:55,760 --> 00:24:59,200
um i wouldn't necessarily know that that

00:24:57,840 --> 00:25:00,960
feature got booted out and i'd be kind

00:24:59,200 --> 00:25:02,799
of disappointed that it isn't there when

00:25:00,960 --> 00:25:05,200
when when the release shows up

00:25:02,799 --> 00:25:06,400
so but but if we are able to track this

00:25:05,200 --> 00:25:08,400
at a release

00:25:06,400 --> 00:25:10,080
and a granularity then then we're a lot

00:25:08,400 --> 00:25:11,840
happier right because then we can look

00:25:10,080 --> 00:25:12,880
at the individual signals coming from

00:25:11,840 --> 00:25:14,880
the right tools

00:25:12,880 --> 00:25:17,039
that tell us what you know what is the

00:25:14,880 --> 00:25:19,520
state of this feature where where is it

00:25:17,039 --> 00:25:20,799
what's it blocked by um and and we've

00:25:19,520 --> 00:25:22,400
got you know because we have so many

00:25:20,799 --> 00:25:24,880
tools involved in this and so many kind

00:25:22,400 --> 00:25:27,440
of you know tool silos or data silos

00:25:24,880 --> 00:25:28,080
as a result um things are getting

00:25:27,440 --> 00:25:30,880
blocked and

00:25:28,080 --> 00:25:32,720
and and sometimes there's a blocker that

00:25:30,880 --> 00:25:34,480
blocks only one feature and other things

00:25:32,720 --> 00:25:36,080
can go ahead and the release is you know

00:25:34,480 --> 00:25:37,279
fairly intact and sometimes you've got

00:25:36,080 --> 00:25:38,799
something that's blocking that's so

00:25:37,279 --> 00:25:39,360
fundamental that you can't get anything

00:25:38,799 --> 00:25:42,400
out

00:25:39,360 --> 00:25:44,000
on a release and the magic really is is

00:25:42,400 --> 00:25:46,320
kind of trying to figure out

00:25:44,000 --> 00:25:48,320
you know what is a system-wide blocker

00:25:46,320 --> 00:25:50,480
what's a what's a feature level blocker

00:25:48,320 --> 00:25:52,640
and kind of where is everything right

00:25:50,480 --> 00:25:54,400
and and so this is you know an everyday

00:25:52,640 --> 00:25:56,159
thing where where the teams you know

00:25:54,400 --> 00:25:59,200
expend tremendous effort on

00:25:56,159 --> 00:26:00,000
a daily basis to kind of just understand

00:25:59,200 --> 00:26:01,760
where we are

00:26:00,000 --> 00:26:03,600
in terms of being able to deliver this

00:26:01,760 --> 00:26:05,120
this value to our customers

00:26:03,600 --> 00:26:06,720
and you know get them excited about our

00:26:05,120 --> 00:26:07,600
products get them excited about how we

00:26:06,720 --> 00:26:09,440
help them and

00:26:07,600 --> 00:26:11,039
and how we make their lives better at

00:26:09,440 --> 00:26:12,640
least their their professional lives and

00:26:11,039 --> 00:26:14,880
sometimes their personal lives

00:26:12,640 --> 00:26:17,039
um but you know that that's that's a

00:26:14,880 --> 00:26:18,880
full-time job just to keep track of

00:26:17,039 --> 00:26:20,240
of all of that stuff and usually for

00:26:18,880 --> 00:26:22,000
several people

00:26:20,240 --> 00:26:24,320
and what we want to do is kind of make

00:26:22,000 --> 00:26:26,720
sense of all this information and

00:26:24,320 --> 00:26:28,720
my my my strong opinion here is that

00:26:26,720 --> 00:26:31,120
it's it's at the feature level

00:26:28,720 --> 00:26:33,440
that this starts to make sense to track

00:26:31,120 --> 00:26:35,200
right the release level is too big

00:26:33,440 --> 00:26:36,640
because features are going to come and

00:26:35,200 --> 00:26:38,080
go i'm going to add a feature i'm going

00:26:36,640 --> 00:26:39,760
to remove a feature so

00:26:38,080 --> 00:26:41,600
depending on who the target is for that

00:26:39,760 --> 00:26:42,559
particular feature they just started

00:26:41,600 --> 00:26:44,080
caring a lot

00:26:42,559 --> 00:26:45,360
about that release if i just threw a

00:26:44,080 --> 00:26:46,720
good feature into it or they just

00:26:45,360 --> 00:26:48,240
stopped caring at all

00:26:46,720 --> 00:26:50,240
if i took out the feature that they care

00:26:48,240 --> 00:26:51,520
about right so if i'm going to target

00:26:50,240 --> 00:26:52,000
that customer whether that's an

00:26:51,520 --> 00:26:54,080
individual

00:26:52,000 --> 00:26:55,679
customer an important account or whether

00:26:54,080 --> 00:26:58,000
it's a whole segment of

00:26:55,679 --> 00:26:59,520
of my of my customer base that i you

00:26:58,000 --> 00:27:00,960
know that i want to service with with

00:26:59,520 --> 00:27:04,240
some cool functionality

00:27:00,960 --> 00:27:04,640
um that you know i need to know um and i

00:27:04,240 --> 00:27:06,559
need to

00:27:04,640 --> 00:27:08,400
you know to figure that out and so

00:27:06,559 --> 00:27:09,840
really to to the extent that you can you

00:27:08,400 --> 00:27:11,120
want to get yourself in a position where

00:27:09,840 --> 00:27:13,279
you've got one place

00:27:11,120 --> 00:27:15,279
where you can go look at this stuff uh

00:27:13,279 --> 00:27:15,760
and and be able to look across all of

00:27:15,279 --> 00:27:17,120
your

00:27:15,760 --> 00:27:19,279
different systems and all of your

00:27:17,120 --> 00:27:21,200
different data silos and start to answer

00:27:19,279 --> 00:27:23,120
ask and answer some of these questions

00:27:21,200 --> 00:27:23,600
around you know what are the blockages

00:27:23,120 --> 00:27:26,399
here

00:27:23,600 --> 00:27:28,159
what things are cranking away in in a

00:27:26,399 --> 00:27:29,039
useful way and and what things are

00:27:28,159 --> 00:27:30,720
blocked and

00:27:29,039 --> 00:27:32,240
as a result of that not just you know

00:27:30,720 --> 00:27:33,760
hey a build failed

00:27:32,240 --> 00:27:35,520
right that's of course important

00:27:33,760 --> 00:27:37,360
information but builds fail all the time

00:27:35,520 --> 00:27:38,960
quite frankly the question is what's the

00:27:37,360 --> 00:27:41,440
impact of that build failing

00:27:38,960 --> 00:27:43,200
you know was it was you know does does

00:27:41,440 --> 00:27:44,880
that build failing mean that i now can't

00:27:43,200 --> 00:27:46,559
commit changes to feature x

00:27:44,880 --> 00:27:48,159
which is a really important feature

00:27:46,559 --> 00:27:50,240
because i want to hold off on that until

00:27:48,159 --> 00:27:52,000
we clear out this build problem

00:27:50,240 --> 00:27:53,440
or maybe it was the build problem caused

00:27:52,000 --> 00:27:55,600
by feature x and you know that's

00:27:53,440 --> 00:27:56,880
something we need to jump on right away

00:27:55,600 --> 00:27:58,559
but you want to you know you want to get

00:27:56,880 --> 00:28:00,080
yourself in a position where you think

00:27:58,559 --> 00:28:00,640
in terms of okay what's the impact of

00:28:00,080 --> 00:28:02,080
that

00:28:00,640 --> 00:28:03,679
on the core features that i'm trying to

00:28:02,080 --> 00:28:05,279
get out the door you know this week next

00:28:03,679 --> 00:28:07,360
week this month next month

00:28:05,279 --> 00:28:08,640
this quarter next quarter uh so on

00:28:07,360 --> 00:28:08,880
because obviously you know some things

00:28:08,640 --> 00:28:10,480
are

00:28:08,880 --> 00:28:12,320
are quick to build and some things take

00:28:10,480 --> 00:28:15,039
you know quite a lot longer time

00:28:12,320 --> 00:28:16,000
i need to be broken down into uh into

00:28:15,039 --> 00:28:18,559
into smaller pieces

00:28:16,000 --> 00:28:19,919
so we can divide and conquer um but the

00:28:18,559 --> 00:28:21,679
key really is to get in

00:28:19,919 --> 00:28:23,520
to get visibility you know into the

00:28:21,679 --> 00:28:25,200
features and the contributions to those

00:28:23,520 --> 00:28:27,200
features which are going to be in the

00:28:25,200 --> 00:28:28,559
you know in the form of you know code or

00:28:27,200 --> 00:28:30,559
designs or

00:28:28,559 --> 00:28:31,679
you know builds or tests or you know all

00:28:30,559 --> 00:28:33,840
the various uh

00:28:31,679 --> 00:28:35,120
things that we that we all the tooling

00:28:33,840 --> 00:28:36,960
and processes that we

00:28:35,120 --> 00:28:38,640
have that we subject the code to and

00:28:36,960 --> 00:28:40,880
really what you then want to do is

00:28:38,640 --> 00:28:42,240
you know focus on unblocking the

00:28:40,880 --> 00:28:44,320
features that are important

00:28:42,240 --> 00:28:46,559
you know that that are the the game

00:28:44,320 --> 00:28:46,960
changing or or needle moving features

00:28:46,559 --> 00:28:49,919
and

00:28:46,960 --> 00:28:50,799
and focus on those um and when you can

00:28:49,919 --> 00:28:53,360
connect

00:28:50,799 --> 00:28:54,960
the software delivery process here to

00:28:53,360 --> 00:28:56,799
the cross-functional teams in the

00:28:54,960 --> 00:28:58,080
organization so that we all have that

00:28:56,799 --> 00:29:01,039
same view

00:28:58,080 --> 00:29:02,880
on how we're doing that is a very

00:29:01,039 --> 00:29:05,039
powerful position to be in right because

00:29:02,880 --> 00:29:07,039
now we can have that conversation

00:29:05,039 --> 00:29:08,159
not at the level of oh this release is

00:29:07,039 --> 00:29:09,919
late or

00:29:08,159 --> 00:29:11,120
um it's still going to go on time but

00:29:09,919 --> 00:29:11,520
we're not going to ship these features

00:29:11,120 --> 00:29:13,840
we

00:29:11,520 --> 00:29:15,120
we can have that conversation with much

00:29:13,840 --> 00:29:16,720
more certainty and

00:29:15,120 --> 00:29:18,960
and with much more information around

00:29:16,720 --> 00:29:20,559
okay this feature is blocked here that

00:29:18,960 --> 00:29:21,120
feature is blocked here this one's doing

00:29:20,559 --> 00:29:22,880
fine

00:29:21,120 --> 00:29:25,200
this one's already out but we're getting

00:29:22,880 --> 00:29:26,480
some feedback that says you know the the

00:29:25,200 --> 00:29:27,919
thing that we thought we didn't need to

00:29:26,480 --> 00:29:29,440
do in fact turns out to be really

00:29:27,919 --> 00:29:31,520
important so we got to go back

00:29:29,440 --> 00:29:33,760
and add that as quickly as we can

00:29:31,520 --> 00:29:35,440
because you know important segments of

00:29:33,760 --> 00:29:36,960
of of that customer community aren't

00:29:35,440 --> 00:29:38,320
really able to take advantage of that

00:29:36,960 --> 00:29:39,600
feature as much as we hoped

00:29:38,320 --> 00:29:41,520
that they would be able to so you can

00:29:39,600 --> 00:29:42,159
now start to have you know more high

00:29:41,520 --> 00:29:44,960
level

00:29:42,159 --> 00:29:45,600
uh uh discussions and and more sort of

00:29:44,960 --> 00:29:47,520
um

00:29:45,600 --> 00:29:48,720
uh discussions at an appropriate

00:29:47,520 --> 00:29:51,279
granularity for

00:29:48,720 --> 00:29:52,159
for for being successful uh in in

00:29:51,279 --> 00:29:53,760
getting the

00:29:52,159 --> 00:29:55,600
you know getting our value out to the

00:29:53,760 --> 00:29:59,039
market so that our customers can

00:29:55,600 --> 00:30:01,120
can can use it and and keep going

00:29:59,039 --> 00:30:02,480
so in that you know in that vein you

00:30:01,120 --> 00:30:04,480
know just some practical

00:30:02,480 --> 00:30:06,320
advice here right this is you know

00:30:04,480 --> 00:30:08,159
fairly generic advice i'll

00:30:06,320 --> 00:30:10,320
i'll i'll admit but it really gets to

00:30:08,159 --> 00:30:11,360
the a little bit to the heart of what

00:30:10,320 --> 00:30:14,080
you want to do

00:30:11,360 --> 00:30:15,840
so you know understand your value stream

00:30:14,080 --> 00:30:17,520
um you know value stream mapping can be

00:30:15,840 --> 00:30:18,960
very valuable exercise it's not the

00:30:17,520 --> 00:30:20,559
end-all and be-all

00:30:18,960 --> 00:30:22,000
um and it and it's also something that

00:30:20,559 --> 00:30:23,039
if you do it once and then you change a

00:30:22,000 --> 00:30:25,039
bunch of things

00:30:23,039 --> 00:30:26,399
now your value stream map is is you know

00:30:25,039 --> 00:30:28,320
if you don't keep it up to date it's now

00:30:26,399 --> 00:30:30,960
out of date and probably not doing you

00:30:28,320 --> 00:30:32,240
any favors um but but it really you know

00:30:30,960 --> 00:30:34,000
the thing i like about

00:30:32,240 --> 00:30:36,320
you know focusing on value streams is

00:30:34,000 --> 00:30:39,679
that it kind of forces you to look at

00:30:36,320 --> 00:30:40,480
okay what is the journey that a feature

00:30:39,679 --> 00:30:42,000
takes from

00:30:40,480 --> 00:30:43,919
you know when it's a gleam in somebody's

00:30:42,000 --> 00:30:44,960
eye to when i've you know i've written

00:30:43,919 --> 00:30:46,640
the code for it

00:30:44,960 --> 00:30:48,399
i've done the design work for it i've

00:30:46,640 --> 00:30:49,360
done the implementation for it i've done

00:30:48,399 --> 00:30:51,360
the testing

00:30:49,360 --> 00:30:53,440
the verification the qualification of

00:30:51,360 --> 00:30:54,159
this feature and it's now on its way out

00:30:53,440 --> 00:30:56,720
the door

00:30:54,159 --> 00:30:57,440
right i understand what all the pieces

00:30:56,720 --> 00:31:00,000
are what are the

00:30:57,440 --> 00:31:00,960
what all the gates are all the processes

00:31:00,000 --> 00:31:04,000
all the tools

00:31:00,960 --> 00:31:06,880
all the departments people groups state

00:31:04,000 --> 00:31:08,080
stakeholders that are involved in that

00:31:06,880 --> 00:31:10,080
because if i don't know that

00:31:08,080 --> 00:31:11,519
then i'm operating blind right so at

00:31:10,080 --> 00:31:15,279
some level

00:31:11,519 --> 00:31:16,880
some portion of your product teams need

00:31:15,279 --> 00:31:19,039
to have that picture in their head

00:31:16,880 --> 00:31:21,120
right not everybody needs to know that

00:31:19,039 --> 00:31:22,480
um but the more people that do and

00:31:21,120 --> 00:31:23,840
understand it the better right because

00:31:22,480 --> 00:31:25,200
then they can place the work that they

00:31:23,840 --> 00:31:28,399
do in the context

00:31:25,200 --> 00:31:29,519
of of of where it's happening um a

00:31:28,399 --> 00:31:31,440
second thing and

00:31:29,519 --> 00:31:33,360
and this is uh something that i learned

00:31:31,440 --> 00:31:34,960
from from gary gruver and if you haven't

00:31:33,360 --> 00:31:36,559
read gary's books on on how he

00:31:34,960 --> 00:31:38,080
implemented agile at hp

00:31:36,559 --> 00:31:39,679
and and how he's been working with

00:31:38,080 --> 00:31:42,399
software leadership teams over the years

00:31:39,679 --> 00:31:44,480
i highly recommend gary gruver's

00:31:42,399 --> 00:31:46,399
books on this stuff and he does a lot of

00:31:44,480 --> 00:31:47,600
online training and courses and those

00:31:46,399 --> 00:31:50,399
sorts of things too

00:31:47,600 --> 00:31:52,480
um but he talks about how it's really

00:31:50,399 --> 00:31:53,200
important that you have a stable quality

00:31:52,480 --> 00:31:54,720
signal

00:31:53,200 --> 00:31:56,080
coming from you know i'm going to be

00:31:54,720 --> 00:31:57,840
specific here your continuous

00:31:56,080 --> 00:31:58,640
integration and or continuous testing

00:31:57,840 --> 00:32:00,320
systems

00:31:58,640 --> 00:32:03,279
that you know i mean basically if you

00:32:00,320 --> 00:32:05,360
can't go to your ci system

00:32:03,279 --> 00:32:06,960
and just kick off a no change build do

00:32:05,360 --> 00:32:07,919
that 10 times and have the same result

00:32:06,960 --> 00:32:09,279
every time

00:32:07,919 --> 00:32:10,720
you've got a problem that you need to

00:32:09,279 --> 00:32:11,840
address there because you need to be

00:32:10,720 --> 00:32:13,760
able to rely

00:32:11,840 --> 00:32:15,120
on your automated systems which you know

00:32:13,760 --> 00:32:17,760
kind of begin

00:32:15,120 --> 00:32:19,600
at the ci level and then hopefully go

00:32:17,760 --> 00:32:21,840
more into you know continuous pipelines

00:32:19,600 --> 00:32:25,120
continuous testing continuous delivery

00:32:21,840 --> 00:32:28,000
time things but if your ci and ct

00:32:25,120 --> 00:32:29,440
quality signal isn't stable that's a big

00:32:28,000 --> 00:32:30,799
deal and what i mean by stable is

00:32:29,440 --> 00:32:32,640
literally that if i can't

00:32:30,799 --> 00:32:34,640
you know if i have a successful build

00:32:32,640 --> 00:32:36,399
and then make no changes to the code but

00:32:34,640 --> 00:32:38,159
then i just run that same build with no

00:32:36,399 --> 00:32:40,000
changes 10 times in a row

00:32:38,159 --> 00:32:42,240
do i get the same results 10 times in a

00:32:40,000 --> 00:32:44,480
row because if i have flaky tests

00:32:42,240 --> 00:32:45,840
i won't and flaky tests are the devil

00:32:44,480 --> 00:32:47,279
get rid of them you know just turn them

00:32:45,840 --> 00:32:49,519
off if you have to right

00:32:47,279 --> 00:32:51,039
fix them ideally but you know turn them

00:32:49,519 --> 00:32:51,519
off don't don't let them be something

00:32:51,039 --> 00:32:53,600
that

00:32:51,519 --> 00:32:54,720
introduces instability into into your

00:32:53,600 --> 00:32:56,799
quality signal

00:32:54,720 --> 00:32:58,240
um you know are the builds running in

00:32:56,799 --> 00:33:00,480
approximately the same time

00:32:58,240 --> 00:33:02,240
uh uh period every every every time you

00:33:00,480 --> 00:33:04,000
run them you know or do they have stable

00:33:02,240 --> 00:33:05,200
duration those sorts of things very

00:33:04,000 --> 00:33:06,399
important that you have that because

00:33:05,200 --> 00:33:10,159
without that

00:33:06,399 --> 00:33:11,840
you don't have a a stable signal that

00:33:10,159 --> 00:33:12,159
tells you what the state of your builds

00:33:11,840 --> 00:33:13,440
are

00:33:12,159 --> 00:33:15,200
because you can have lots of kind of

00:33:13,440 --> 00:33:16,720
false positives or i guess

00:33:15,200 --> 00:33:18,799
technically a false negative in the

00:33:16,720 --> 00:33:21,120
sense that your build isn't working

00:33:18,799 --> 00:33:23,519
um it's very important uh to have that

00:33:21,120 --> 00:33:24,480
so i i definitely want to want to focus

00:33:23,519 --> 00:33:27,039
uh and

00:33:24,480 --> 00:33:28,320
and put some light on that um third you

00:33:27,039 --> 00:33:30,000
know understand where features get

00:33:28,320 --> 00:33:31,200
blocked in your process and knowing what

00:33:30,000 --> 00:33:32,960
you know about

00:33:31,200 --> 00:33:34,240
your value stream and what it looks like

00:33:32,960 --> 00:33:35,760
and knowing what you know about where

00:33:34,240 --> 00:33:36,559
you're getting your signals from in the

00:33:35,760 --> 00:33:37,760
system

00:33:36,559 --> 00:33:39,200
know where you get stuck and know where

00:33:37,760 --> 00:33:39,840
you have problems you know are you are

00:33:39,200 --> 00:33:41,519
you getting

00:33:39,840 --> 00:33:42,960
are you getting stuck in architecture

00:33:41,519 --> 00:33:44,399
you know we're still trying to figure

00:33:42,960 --> 00:33:45,440
out how to build this we we don't know

00:33:44,399 --> 00:33:46,799
how to build this we don't know how to

00:33:45,440 --> 00:33:47,600
scale this part you know is that where

00:33:46,799 --> 00:33:49,360
you're stuck

00:33:47,600 --> 00:33:51,120
um are you stuck in design you know oh

00:33:49,360 --> 00:33:52,799
yeah we need to make this simple but

00:33:51,120 --> 00:33:54,720
you know we have four installers and we

00:33:52,799 --> 00:33:56,320
need one and we can't figure out how to

00:33:54,720 --> 00:33:58,640
you know answer all the questions in one

00:33:56,320 --> 00:34:00,640
place and you know are you stuck in a

00:33:58,640 --> 00:34:02,320
in a design conundrum you know are you

00:34:00,640 --> 00:34:03,600
stuck in implementation oh my goodness

00:34:02,320 --> 00:34:04,240
this was much more code than we thought

00:34:03,600 --> 00:34:06,159
it was going to be

00:34:04,240 --> 00:34:07,519
or this library that that we thought

00:34:06,159 --> 00:34:09,760
were going to was going to help us a lot

00:34:07,519 --> 00:34:12,000
just isn't helping as much or you know

00:34:09,760 --> 00:34:13,440
those those kinds of scenarios pay

00:34:12,000 --> 00:34:14,320
attention to that you know are you stuck

00:34:13,440 --> 00:34:15,919
in quality

00:34:14,320 --> 00:34:17,839
you know hey we keep trying to use this

00:34:15,919 --> 00:34:19,280
feature but i get an error every time i

00:34:17,839 --> 00:34:20,720
do it so i don't think this feature is

00:34:19,280 --> 00:34:21,839
really ready i don't think it's finished

00:34:20,720 --> 00:34:23,919
it's not done

00:34:21,839 --> 00:34:24,960
um security you know we've got

00:34:23,919 --> 00:34:26,320
third-party libraries with

00:34:24,960 --> 00:34:28,000
vulnerabilities we need to fix that

00:34:26,320 --> 00:34:30,320
before we ship

00:34:28,000 --> 00:34:31,200
or we have we have a library that's in

00:34:30,320 --> 00:34:33,200
production

00:34:31,200 --> 00:34:34,399
that now has a vulnerability disclosed

00:34:33,200 --> 00:34:36,079
that's been in there the whole time and

00:34:34,399 --> 00:34:37,599
we need to remediate that as quickly as

00:34:36,079 --> 00:34:38,320
possible you know that's going to impact

00:34:37,599 --> 00:34:40,159
things

00:34:38,320 --> 00:34:41,760
um the delivery aspects the factory

00:34:40,159 --> 00:34:43,839
aspects of course you know

00:34:41,760 --> 00:34:45,200
can we can we get the you know is the

00:34:43,839 --> 00:34:48,000
machine working you know is

00:34:45,200 --> 00:34:49,440
is the is the conveyor belt moving or

00:34:48,000 --> 00:34:50,800
are the builds broken are the tests

00:34:49,440 --> 00:34:52,320
failing are they flaky

00:34:50,800 --> 00:34:53,679
are we having to roll back out of our

00:34:52,320 --> 00:34:55,599
staging environments or even our

00:34:53,679 --> 00:34:57,359
production environments

00:34:55,599 --> 00:34:58,800
understand these kinds of blockages and

00:34:57,359 --> 00:35:00,560
understand you know

00:34:58,800 --> 00:35:02,160
is this blockage is it a system level

00:35:00,560 --> 00:35:03,680
blockage that's preventing

00:35:02,160 --> 00:35:05,200
you know all features for this product

00:35:03,680 --> 00:35:05,760
or maybe even all products from moving

00:35:05,200 --> 00:35:07,359
forward

00:35:05,760 --> 00:35:08,960
or is it just something that's kind of a

00:35:07,359 --> 00:35:10,880
product level blockage or a feature

00:35:08,960 --> 00:35:12,640
level blockage because then you know

00:35:10,880 --> 00:35:14,160
how serious they are and if it's a low

00:35:12,640 --> 00:35:15,359
level you know kind of background

00:35:14,160 --> 00:35:16,560
feature and it's blocked

00:35:15,359 --> 00:35:18,400
you know you can address that in a

00:35:16,560 --> 00:35:20,320
certain way if it's

00:35:18,400 --> 00:35:21,760
you know a very important very critical

00:35:20,320 --> 00:35:22,960
feature then you know you got you know

00:35:21,760 --> 00:35:24,240
you got to throw some uh

00:35:22,960 --> 00:35:26,480
you know you got to throw some love on

00:35:24,240 --> 00:35:27,599
that and and and make sure to uh to get

00:35:26,480 --> 00:35:29,520
it unlocked

00:35:27,599 --> 00:35:30,880
and agile tooling is your friend in all

00:35:29,520 --> 00:35:32,560
of this right you know you kind of want

00:35:30,880 --> 00:35:34,000
to calibrate and discover

00:35:32,560 --> 00:35:35,760
how features are represented in your

00:35:34,000 --> 00:35:37,520
agile you know data model as i'm kind of

00:35:35,760 --> 00:35:39,280
referring to it here you know basically

00:35:37,520 --> 00:35:40,960
you know are you using you know jira are

00:35:39,280 --> 00:35:42,560
you using version one or you know are

00:35:40,960 --> 00:35:43,839
you using you know github issues or

00:35:42,560 --> 00:35:44,720
however it is that you're tracking these

00:35:43,839 --> 00:35:46,640
kinds of things

00:35:44,720 --> 00:35:48,160
you know where where do your features

00:35:46,640 --> 00:35:50,320
live you know are they do they live in

00:35:48,160 --> 00:35:51,680
here as tasks as stories as epics as

00:35:50,320 --> 00:35:53,359
initiatives as themes

00:35:51,680 --> 00:35:55,359
a little bit of both you know kind of

00:35:53,359 --> 00:35:56,560
understand where they live in your data

00:35:55,359 --> 00:35:57,119
model because that's going to be one

00:35:56,560 --> 00:35:58,320
place

00:35:57,119 --> 00:36:00,000
where you want to track them and that

00:35:58,320 --> 00:36:00,720
doesn't necessarily tell you everything

00:36:00,000 --> 00:36:01,839
because

00:36:00,720 --> 00:36:02,960
you know you may have checked in

00:36:01,839 --> 00:36:04,560
something and mark something has

00:36:02,960 --> 00:36:06,480
completed but it's not building

00:36:04,560 --> 00:36:08,000
so you know you obviously need signals

00:36:06,480 --> 00:36:10,160
from other systems other than

00:36:08,000 --> 00:36:11,680
you know your issue tracking systems but

00:36:10,160 --> 00:36:12,560
you need to understand how these things

00:36:11,680 --> 00:36:15,119
show up

00:36:12,560 --> 00:36:15,839
uh in in in your issue tracking systems

00:36:15,119 --> 00:36:18,240
uh and

00:36:15,839 --> 00:36:18,880
a a shout out to feature flags feature

00:36:18,240 --> 00:36:21,280
flags are an

00:36:18,880 --> 00:36:22,880
enormously powerful and useful thing uh

00:36:21,280 --> 00:36:24,400
to to help you in this

00:36:22,880 --> 00:36:25,839
you know the ability to dynamically

00:36:24,400 --> 00:36:27,520
enable or disable a feature in

00:36:25,839 --> 00:36:28,480
production you know by region by

00:36:27,520 --> 00:36:30,560
customer

00:36:28,480 --> 00:36:32,960
by segment by you know by individual

00:36:30,560 --> 00:36:34,400
person is incredibly powerful right

00:36:32,960 --> 00:36:36,320
you really can decouple feature

00:36:34,400 --> 00:36:38,640
deployment from feature release

00:36:36,320 --> 00:36:40,640
because you can start to early deploy

00:36:38,640 --> 00:36:42,160
your your new feature into production

00:36:40,640 --> 00:36:43,440
and just not expose it to anyone you

00:36:42,160 --> 00:36:44,160
know keep it hidden until you know

00:36:43,440 --> 00:36:46,240
you're ready

00:36:44,160 --> 00:36:47,599
and maybe expose it to a small segment

00:36:46,240 --> 00:36:48,960
of of your customers you know your

00:36:47,599 --> 00:36:52,320
preview customers or

00:36:48,960 --> 00:36:54,480
maybe expose it to to inside uh users in

00:36:52,320 --> 00:36:56,240
your own company and then as you get

00:36:54,480 --> 00:36:57,680
more confidence in it and as you see

00:36:56,240 --> 00:36:58,960
that it's working you know you can you

00:36:57,680 --> 00:37:00,560
can broaden the

00:36:58,960 --> 00:37:02,000
the access to it and that allows you to

00:37:00,560 --> 00:37:03,680
roll things out and decouple the

00:37:02,000 --> 00:37:05,119
deployment from the release

00:37:03,680 --> 00:37:06,720
which is something that i think we all

00:37:05,119 --> 00:37:07,599
would like to do and be able to do

00:37:06,720 --> 00:37:09,280
reliably

00:37:07,599 --> 00:37:11,440
you can roll out features gradually and

00:37:09,280 --> 00:37:13,200
selectively you can test in production

00:37:11,440 --> 00:37:15,359
right and you can shorten feedback loops

00:37:13,200 --> 00:37:16,000
dramatically by using feature flags to

00:37:15,359 --> 00:37:18,240
do that

00:37:16,000 --> 00:37:19,839
you can even provide custom customized

00:37:18,240 --> 00:37:21,440
end user experiences you know

00:37:19,839 --> 00:37:22,800
we've got a rich set of functionality in

00:37:21,440 --> 00:37:24,800
the product but really we've got three

00:37:22,800 --> 00:37:27,599
personas that we service right

00:37:24,800 --> 00:37:29,920
and for example and you know we can turn

00:37:27,599 --> 00:37:31,760
off all the all the chrome so to speak

00:37:29,920 --> 00:37:33,200
uh for all the functionality that this

00:37:31,760 --> 00:37:34,800
that this customer segment or this

00:37:33,200 --> 00:37:36,480
customer persona doesn't use

00:37:34,800 --> 00:37:38,880
so they're not distracted by that stuff

00:37:36,480 --> 00:37:40,560
and you can use feature flags to do that

00:37:38,880 --> 00:37:41,839
you know reducing the risk of changes is

00:37:40,560 --> 00:37:43,359
a good thing too because you don't

00:37:41,839 --> 00:37:44,320
necessarily need to roll back or even

00:37:43,359 --> 00:37:47,200
roll forward

00:37:44,320 --> 00:37:48,720
toggle you know turn that feature off if

00:37:47,200 --> 00:37:50,400
it's causing you a problem if you just

00:37:48,720 --> 00:37:51,760
rolled it out and it's not working

00:37:50,400 --> 00:37:53,119
you know normally what we would do is

00:37:51,760 --> 00:37:54,560
you know in the old days we'd roll back

00:37:53,119 --> 00:37:56,079
and restore the old functionality but

00:37:54,560 --> 00:37:57,760
that's fraught with

00:37:56,079 --> 00:37:59,440
terror you know because have i made

00:37:57,760 --> 00:38:00,880
database changes do i need to undo those

00:37:59,440 --> 00:38:03,440
database changes what

00:38:00,880 --> 00:38:05,040
what you know what you know can i roll

00:38:03,440 --> 00:38:06,720
back reliably or do i need to roll

00:38:05,040 --> 00:38:08,400
forward maybe we like to roll forward

00:38:06,720 --> 00:38:10,640
and what we do is we go back and

00:38:08,400 --> 00:38:12,400
we remove that code and we push out a

00:38:10,640 --> 00:38:12,880
new version well feature flags allow you

00:38:12,400 --> 00:38:14,400
to do

00:38:12,880 --> 00:38:16,320
those kinds of changes you know kind of

00:38:14,400 --> 00:38:18,640
turn things on and turn things off

00:38:16,320 --> 00:38:19,359
without having to redeploy the code and

00:38:18,640 --> 00:38:21,119
that's you know

00:38:19,359 --> 00:38:22,560
that's really that's really valuable on

00:38:21,119 --> 00:38:23,920
the flip side you can also end of life

00:38:22,560 --> 00:38:25,359
features very gradually

00:38:23,920 --> 00:38:27,040
you know if you have a a certain

00:38:25,359 --> 00:38:29,119
customer segment that uses a feature

00:38:27,040 --> 00:38:29,920
that you'd like to you know sunset or

00:38:29,119 --> 00:38:32,160
end of life

00:38:29,920 --> 00:38:33,680
you can turn it off and and remove it

00:38:32,160 --> 00:38:35,359
from those customers who don't use it so

00:38:33,680 --> 00:38:37,040
nobody starts to use it

00:38:35,359 --> 00:38:38,880
um and then you can sort of you know

00:38:37,040 --> 00:38:40,560
gradually wean off uh your your

00:38:38,880 --> 00:38:43,440
customers that do use it

00:38:40,560 --> 00:38:44,400
from that um and you know and this is

00:38:43,440 --> 00:38:46,320
very important is that

00:38:44,400 --> 00:38:48,000
this feature access you can now start to

00:38:46,320 --> 00:38:50,480
have it in the hands of

00:38:48,000 --> 00:38:51,440
not just dev and ops but in the hands of

00:38:50,480 --> 00:38:54,480
product owners and

00:38:51,440 --> 00:38:55,599
and and so the business starts to get a

00:38:54,480 --> 00:38:57,680
voice in

00:38:55,599 --> 00:38:59,599
and the ability to kind of throw the the

00:38:57,680 --> 00:39:02,960
levers and turn the knobs

00:38:59,599 --> 00:39:04,160
on when we when we uh when we uh expose

00:39:02,960 --> 00:39:06,960
uh functionality to

00:39:04,160 --> 00:39:08,400
to our uh to our customers uh and i'm

00:39:06,960 --> 00:39:09,839
gonna skip a little bit past here and

00:39:08,400 --> 00:39:11,200
just show a couple of sort of hey

00:39:09,839 --> 00:39:12,640
wouldn't it be nice if

00:39:11,200 --> 00:39:14,240
you know screenshots so what we really

00:39:12,640 --> 00:39:16,000
want are these kinds of

00:39:14,240 --> 00:39:17,920
uh you know dashboards where i can see

00:39:16,000 --> 00:39:20,720
you know i've got some in progress

00:39:17,920 --> 00:39:22,160
uh some in progress features here um

00:39:20,720 --> 00:39:24,079
that i'm that i'm working and building

00:39:22,160 --> 00:39:25,920
on and i can see what my progress is i

00:39:24,079 --> 00:39:27,359
can see how much idle time we have

00:39:25,920 --> 00:39:29,440
you know we're close to being done on

00:39:27,359 --> 00:39:32,880
the artist recommendations feature

00:39:29,440 --> 00:39:34,560
94 progress so 60 of the time is idle

00:39:32,880 --> 00:39:35,760
time now so there's probably some last

00:39:34,560 --> 00:39:37,440
minute thing

00:39:35,760 --> 00:39:38,640
that you know some part of the team is

00:39:37,440 --> 00:39:40,160
working on and i'd like to be able to

00:39:38,640 --> 00:39:42,240
dig into that you know i've got a

00:39:40,160 --> 00:39:43,599
i've got a red alert here so probably

00:39:42,240 --> 00:39:45,200
what i'll do is dig into that a little

00:39:43,599 --> 00:39:46,960
bit and see what the blockage is but now

00:39:45,200 --> 00:39:49,040
i know that for this feature

00:39:46,960 --> 00:39:50,400
similarly here for the song favoriting

00:39:49,040 --> 00:39:51,280
feature here kind of in the middle of

00:39:50,400 --> 00:39:52,640
the slide

00:39:51,280 --> 00:39:54,079
you know we're not very far along we're

00:39:52,640 --> 00:39:56,000
not very idle because we're working hard

00:39:54,079 --> 00:39:56,560
at it we've got a couple of blockers you

00:39:56,000 --> 00:39:57,760
know that

00:39:56,560 --> 00:39:58,800
you know that may not be a big deal

00:39:57,760 --> 00:40:00,240
right now because we're just at the

00:39:58,800 --> 00:40:00,880
beginning but hey i might still click

00:40:00,240 --> 00:40:03,200
through and

00:40:00,880 --> 00:40:04,800
and kind of go look at it you know and i

00:40:03,200 --> 00:40:06,160
want to be able to look at the overall

00:40:04,800 --> 00:40:09,440
kind of stream

00:40:06,160 --> 00:40:11,760
uh if you will or or or flow

00:40:09,440 --> 00:40:12,560
of how my functionality is making it out

00:40:11,760 --> 00:40:14,160
the door

00:40:12,560 --> 00:40:16,000
and and where i'm blocked and then once

00:40:14,160 --> 00:40:17,760
i start to do that now i can start to do

00:40:16,000 --> 00:40:20,400
some really high value things around

00:40:17,760 --> 00:40:22,240
efficiency you know when i look at

00:40:20,400 --> 00:40:24,000
something in terms of features

00:40:22,240 --> 00:40:26,000
it's a pretty hard metric you know hey

00:40:24,000 --> 00:40:27,440
it took us x number of weeks or days to

00:40:26,000 --> 00:40:29,200
get this feature from when we had the

00:40:27,440 --> 00:40:31,040
idea to when it's in the hands of

00:40:29,200 --> 00:40:32,800
of of customers and to know that that's

00:40:31,040 --> 00:40:34,480
a hard measure that that's not being

00:40:32,800 --> 00:40:36,000
proxied by releases

00:40:34,480 --> 00:40:38,079
which had a bunch of other stuff in it

00:40:36,000 --> 00:40:40,400
you know so that may have been delayed

00:40:38,079 --> 00:40:41,760
um and and and those kinds of things i

00:40:40,400 --> 00:40:44,000
can start to look at

00:40:41,760 --> 00:40:44,800
you know kind of much more hardcore uh

00:40:44,000 --> 00:40:46,319
what the uh

00:40:44,800 --> 00:40:47,920
you know what what what are the things

00:40:46,319 --> 00:40:48,960
that are impediments where do i get

00:40:47,920 --> 00:40:51,040
stuck you know

00:40:48,960 --> 00:40:52,720
do i have you know in in this one we can

00:40:51,040 --> 00:40:55,280
see we have an average uh

00:40:52,720 --> 00:40:57,040
uh day of uh average time for a pull

00:40:55,280 --> 00:40:57,520
request to be approved of four days one

00:40:57,040 --> 00:40:59,200
hour

00:40:57,520 --> 00:41:01,119
for some teams that might be fantastic

00:40:59,200 --> 00:41:03,359
for some teams that might be terrible

00:41:01,119 --> 00:41:04,720
right so that's obviously uh contextual

00:41:03,359 --> 00:41:06,560
whether that's a good

00:41:04,720 --> 00:41:08,079
uh amount of time for a pull request to

00:41:06,560 --> 00:41:09,920
set or whether that's a bad amount of

00:41:08,079 --> 00:41:12,960
time for a pull request to set but

00:41:09,920 --> 00:41:14,560
now you know um and and you know that

00:41:12,960 --> 00:41:16,079
goes along with a lot of other metrics

00:41:14,560 --> 00:41:17,040
that you that you probably want to look

00:41:16,079 --> 00:41:18,720
at to figure out

00:41:17,040 --> 00:41:20,319
you know how efficient you're you're

00:41:18,720 --> 00:41:21,839
being you know and again if you know if

00:41:20,319 --> 00:41:23,280
you're doing feature flags right you you

00:41:21,839 --> 00:41:24,720
want to know

00:41:23,280 --> 00:41:26,319
what are the states of the various

00:41:24,720 --> 00:41:27,040
feature flags you know i've turned it on

00:41:26,319 --> 00:41:28,720
for

00:41:27,040 --> 00:41:30,720
internal employees and i've and the

00:41:28,720 --> 00:41:32,240
automated rollout has happened

00:41:30,720 --> 00:41:34,400
i've turned it on for my preview

00:41:32,240 --> 00:41:35,440
customers and that rollout has happened

00:41:34,400 --> 00:41:37,200
i haven't rolled it out to any

00:41:35,440 --> 00:41:38,880
geographical locations

00:41:37,200 --> 00:41:40,480
um and i've got some metrics you know

00:41:38,880 --> 00:41:41,520
some policies that i'm done that i'm

00:41:40,480 --> 00:41:43,760
looking at here

00:41:41,520 --> 00:41:45,599
uh on the bottom in in in terms of you

00:41:43,760 --> 00:41:47,440
know api response times

00:41:45,599 --> 00:41:49,040
error rates you know those sorts of

00:41:47,440 --> 00:41:50,319
things and you know

00:41:49,040 --> 00:41:51,599
most of them are green but one of them's

00:41:50,319 --> 00:41:53,520
yellow so i may want to take a look at

00:41:51,599 --> 00:41:54,800
that right but i've only exposed it to

00:41:53,520 --> 00:41:56,560
internal employees

00:41:54,800 --> 00:41:57,680
and to preview customers so i'm probably

00:41:56,560 --> 00:41:59,040
in pretty good shape here you know i

00:41:57,680 --> 00:42:02,400
need to go look at

00:41:59,040 --> 00:42:03,680
the the the api response time and maybe

00:42:02,400 --> 00:42:05,119
do a little bit of fixing around that

00:42:03,680 --> 00:42:07,760
but but all in all i'm doing

00:42:05,119 --> 00:42:08,720
i'm doing pretty well um so just sort of

00:42:07,760 --> 00:42:10,800
returning

00:42:08,720 --> 00:42:12,720
uh to to my thesis here we've got a

00:42:10,800 --> 00:42:14,160
couple of minutes left here so i'm gonna

00:42:12,720 --> 00:42:15,760
i'm just gonna sort of stop with this

00:42:14,160 --> 00:42:16,000
slide here and if we have any questions

00:42:15,760 --> 00:42:19,040
we

00:42:16,000 --> 00:42:20,400
want to we want to take uh in chat or or

00:42:19,040 --> 00:42:22,960
through the audience we have a

00:42:20,400 --> 00:42:24,640
uh we have a chance to do that uh and if

00:42:22,960 --> 00:42:26,640
and if not we can just contemplate this

00:42:24,640 --> 00:42:26,960
slide for a couple of minutes uh before

00:42:26,640 --> 00:42:31,839
we

00:42:26,960 --> 00:42:31,839
move on to the next presentation

00:42:37,040 --> 00:42:41,599
great thanks anders um it doesn't look

00:42:39,839 --> 00:42:44,640
like we have

00:42:41,599 --> 00:42:47,680
um oh we got one question how can we get

00:42:44,640 --> 00:42:50,000
started with value stream mapping

00:42:47,680 --> 00:42:51,200
so there are lots um first of all

00:42:50,000 --> 00:42:51,920
there's lots of companies out there that

00:42:51,200 --> 00:42:53,839
will train you

00:42:51,920 --> 00:42:55,280
and help you with that so so that's one

00:42:53,839 --> 00:42:55,760
approach that you can take if you have

00:42:55,280 --> 00:42:57,680
the

00:42:55,760 --> 00:42:59,359
the time and the resources to do that

00:42:57,680 --> 00:43:00,480
there's also books out there that talk

00:42:59,359 --> 00:43:03,040
about how to do it

00:43:00,480 --> 00:43:04,000
but fundamentally it's it's you know my

00:43:03,040 --> 00:43:05,760
non-expert

00:43:04,000 --> 00:43:07,280
you know i'm not a value stream mapper

00:43:05,760 --> 00:43:08,800
you know professional in that sense i

00:43:07,280 --> 00:43:10,880
just you know i've been a part of it

00:43:08,800 --> 00:43:12,079
and and experienced it but it's it's

00:43:10,880 --> 00:43:14,400
really about

00:43:12,079 --> 00:43:15,680
um taking a step back as much as you can

00:43:14,400 --> 00:43:17,440
getting all the people

00:43:15,680 --> 00:43:19,119
you know in the same room that we do

00:43:17,440 --> 00:43:20,400
that virtually these days of course but

00:43:19,119 --> 00:43:22,240
but you know making sure that all the

00:43:20,400 --> 00:43:23,280
stakeholders are available so that we

00:43:22,240 --> 00:43:25,599
can do

00:43:23,280 --> 00:43:27,520
you know the goofy analogy i have is you

00:43:25,599 --> 00:43:29,440
know you want to put a gopro camera

00:43:27,520 --> 00:43:31,359
on your source codes head and then you

00:43:29,440 --> 00:43:32,720
want to sort of imagine that you're

00:43:31,359 --> 00:43:34,160
you're watching everything that's going

00:43:32,720 --> 00:43:34,800
to happen to that source code as it

00:43:34,160 --> 00:43:36,960
comes you know

00:43:34,800 --> 00:43:38,400
out of the you know first of all off of

00:43:36,960 --> 00:43:40,160
the whiteboard where we have the idea

00:43:38,400 --> 00:43:40,960
and then then on to the keyboard as it

00:43:40,160 --> 00:43:42,800
gets typed in

00:43:40,960 --> 00:43:44,319
and then we have designs that come along

00:43:42,800 --> 00:43:46,079
for it and then we build it and then we

00:43:44,319 --> 00:43:47,520
test it and then we release it and

00:43:46,079 --> 00:43:49,040
you really want to sort of pay attention

00:43:47,520 --> 00:43:50,960
to what are the what are all the things

00:43:49,040 --> 00:43:52,640
that happen to it because

00:43:50,960 --> 00:43:54,319
one thing i've seen in a lot of value

00:43:52,640 --> 00:43:56,720
stream mapping exercises is that

00:43:54,319 --> 00:43:57,440
a lot of times what happens is nothing

00:43:56,720 --> 00:43:59,599
um

00:43:57,440 --> 00:44:00,960
you know there's no time on task we're

00:43:59,599 --> 00:44:02,560
just in a waiting state you know we're

00:44:00,960 --> 00:44:04,000
waiting for an approval or we're waiting

00:44:02,560 --> 00:44:05,440
for a test to run or

00:44:04,000 --> 00:44:07,920
we're waiting for an environment to be

00:44:05,440 --> 00:44:09,200
created or or or those kinds of things

00:44:07,920 --> 00:44:12,000
and one of the nice things about

00:44:09,200 --> 00:44:13,839
value stream mapping if nothing else it

00:44:12,000 --> 00:44:16,400
does give you a picture into

00:44:13,839 --> 00:44:16,880
you know if if it takes us 30 days to

00:44:16,400 --> 00:44:18,960
get

00:44:16,880 --> 00:44:20,560
a a feature you know kind of from

00:44:18,960 --> 00:44:21,680
ideation to to where it's out in

00:44:20,560 --> 00:44:23,680
production

00:44:21,680 --> 00:44:24,880
what percentage of that 30 days is

00:44:23,680 --> 00:44:26,800
actually somebody

00:44:24,880 --> 00:44:28,319
you know knows to the millstone nose to

00:44:26,800 --> 00:44:30,000
the grindstone doing work

00:44:28,319 --> 00:44:31,760
and what is just waiting around and it's

00:44:30,000 --> 00:44:33,520
kind of shocking most of the time

00:44:31,760 --> 00:44:36,400
how high the percentages of just waiting

00:44:33,520 --> 00:44:37,839
around it's often 90 95 percent of just

00:44:36,400 --> 00:44:38,880
sitting waiting around and out of that

00:44:37,839 --> 00:44:40,319
30 days

00:44:38,880 --> 00:44:43,200
you might have spent three four five

00:44:40,319 --> 00:44:45,839
days of you know kind of you know effort

00:44:43,200 --> 00:44:46,480
time on task um so i would say you know

00:44:45,839 --> 00:44:48,079
there's

00:44:46,480 --> 00:44:49,599
training courses out there there's

00:44:48,079 --> 00:44:50,880
companies that will help you do it

00:44:49,599 --> 00:44:52,640
there's lots of good material in the

00:44:50,880 --> 00:44:54,400
literature out there to do it get

00:44:52,640 --> 00:44:55,200
educated on a little bit before you dive

00:44:54,400 --> 00:44:56,720
into it because

00:44:55,200 --> 00:44:58,720
you know doing it right requires doing

00:44:56,720 --> 00:45:00,000
it doing a few things doing a few things

00:44:58,720 --> 00:45:05,839
well but it's well worth the effort in

00:45:00,000 --> 00:45:05,839
my experience

00:45:06,319 --> 00:45:08,400

YouTube URL: https://www.youtube.com/watch?v=p6QrZamsbKk


