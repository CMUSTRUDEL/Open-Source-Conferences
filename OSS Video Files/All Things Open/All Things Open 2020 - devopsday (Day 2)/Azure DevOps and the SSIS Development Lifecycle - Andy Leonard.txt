Title: Azure DevOps and the SSIS Development Lifecycle - Andy Leonard
Publication date: 2020-12-18
Playlist: All Things Open 2020 - devopsday (Day 2)
Description: 
	Presented by: Andy Leonard, Enterprise Data & Analytics
Presented at All Things Open 2020 - devopsday (Day 2)

Abstract: Data Integration Lifecycle Management - or DILM - is challenging regardless of your chosen data integration platform. The primary goal of this session is an explanation - via demonstration - of the production release of an SSIS Project. We will walk this project through lifecycle management using Azure DevOps - from initial development, through testing, to production.
Captions: 
	00:00:05,279 --> 00:00:09,840
this is an awesome event

00:00:06,720 --> 00:00:11,920
and i am extremely honored

00:00:09,840 --> 00:00:14,320
to present to you today from my home

00:00:11,920 --> 00:00:17,279
office here in farmville virginia

00:00:14,320 --> 00:00:17,760
i'm about two hours north of raleigh and

00:00:17,279 --> 00:00:20,400
um

00:00:17,760 --> 00:00:21,680
back when i used to fly i often flew out

00:00:20,400 --> 00:00:23,680
of rdu

00:00:21,680 --> 00:00:26,480
so very familiar with that area at least

00:00:23,680 --> 00:00:27,920
around the airport there

00:00:26,480 --> 00:00:30,880
i want to share with you a little bit

00:00:27,920 --> 00:00:33,920
today about azure devops and sql server

00:00:30,880 --> 00:00:37,040
uh integration services or ssis

00:00:33,920 --> 00:00:38,480
just a introduction um more time than i

00:00:37,040 --> 00:00:40,640
should give myself but

00:00:38,480 --> 00:00:42,800
if you want to know a lot a lot if you

00:00:40,640 --> 00:00:44,559
want to know more

00:00:42,800 --> 00:00:46,320
there's uh you could just pop into your

00:00:44,559 --> 00:00:47,440
favorite search engine and type andy

00:00:46,320 --> 00:00:50,239
leonard data

00:00:47,440 --> 00:00:50,960
um i've i've written some books i am

00:00:50,239 --> 00:00:55,039
co-host

00:00:50,960 --> 00:00:57,039
co-host not host co-host of a podcast

00:00:55,039 --> 00:00:59,039
trying to mix hosts and pie together

00:00:57,039 --> 00:01:01,440
there data driven

00:00:59,039 --> 00:01:02,800
and a new podcast that isn't even on the

00:01:01,440 --> 00:01:04,479
list that's that new

00:01:02,800 --> 00:01:06,720
it's called impact quantum and we talk

00:01:04,479 --> 00:01:08,000
about quantum computing my co-host frank

00:01:06,720 --> 00:01:10,320
lavinia

00:01:08,000 --> 00:01:12,000
who works for for microsoft he and i

00:01:10,320 --> 00:01:14,080
chat about this so

00:01:12,000 --> 00:01:15,360
again andy leonard data if you want to

00:01:14,080 --> 00:01:17,040
know more about that

00:01:15,360 --> 00:01:18,799
or if you're having trouble falling

00:01:17,040 --> 00:01:20,080
asleep at night so that was the

00:01:18,799 --> 00:01:23,759
introduction

00:01:20,080 --> 00:01:26,560
i want to do just a brief history of um

00:01:23,759 --> 00:01:27,600
cicd continuous integration continuous

00:01:26,560 --> 00:01:29,759
deployment

00:01:27,600 --> 00:01:30,640
and then we're going to look at source

00:01:29,759 --> 00:01:34,079
control by

00:01:30,640 --> 00:01:35,439
example and again using sql server

00:01:34,079 --> 00:01:37,040
integration services

00:01:35,439 --> 00:01:39,439
it's more of a business intelligence

00:01:37,040 --> 00:01:41,600
topic than a software development topic

00:01:39,439 --> 00:01:45,040
but the truth is

00:01:41,600 --> 00:01:47,680
working with ssis to do etl

00:01:45,040 --> 00:01:49,280
or data engineering or data integration

00:01:47,680 --> 00:01:51,119
it is software development it's a

00:01:49,280 --> 00:01:52,960
component that plugs right into visual

00:01:51,119 --> 00:01:56,000
studio from microsoft

00:01:52,960 --> 00:01:57,200
and um you know that's that's a great

00:01:56,000 --> 00:02:00,079
big clue

00:01:57,200 --> 00:02:00,479
and i've been fascinated with this topic

00:02:00,079 --> 00:02:03,520
uh

00:02:00,479 --> 00:02:05,920
for at least 13 years um really it's

00:02:03,520 --> 00:02:10,080
been more than that i was in mcsd

00:02:05,920 --> 00:02:12,800
back before.net came out and

00:02:10,080 --> 00:02:13,280
i i did most of my work in visual basic

00:02:12,800 --> 00:02:17,520
i did

00:02:13,280 --> 00:02:20,560
um some um early intranet work

00:02:17,520 --> 00:02:22,400
with um with interdep anybody remember

00:02:20,560 --> 00:02:26,319
microsoft enterdiff

00:02:22,400 --> 00:02:28,640
i started typing html in in notepad

00:02:26,319 --> 00:02:30,640
but back when i made the jump into data

00:02:28,640 --> 00:02:32,720
in the early 2000s

00:02:30,640 --> 00:02:34,480
um i had just gotten into test driven

00:02:32,720 --> 00:02:36,480
development with visual basic i know i

00:02:34,480 --> 00:02:39,200
was a little behind in that but

00:02:36,480 --> 00:02:40,560
fascinating stuff and i was practicing

00:02:39,200 --> 00:02:42,239
it when i first heard about it it was

00:02:40,560 --> 00:02:44,000
called fail first development and that

00:02:42,239 --> 00:02:46,640
was perfect for me because

00:02:44,000 --> 00:02:48,800
i failed all the time and i kept failing

00:02:46,640 --> 00:02:50,400
until i got it to work

00:02:48,800 --> 00:02:52,560
this is some demo architect just

00:02:50,400 --> 00:02:54,640
actually a slide from a presentation i

00:02:52,560 --> 00:02:58,239
did at the pass summit in denver

00:02:54,640 --> 00:03:00,080
in 2007. it was my first one and you can

00:02:58,239 --> 00:03:01,360
see my powershell skills haven't

00:03:00,080 --> 00:03:03,599
improved at all

00:03:01,360 --> 00:03:05,519
but back then i actually took two

00:03:03,599 --> 00:03:08,560
laptops and a router with me

00:03:05,519 --> 00:03:10,959
so i'd have a beefy enough um

00:03:08,560 --> 00:03:12,640
presentation machine and a kind of a

00:03:10,959 --> 00:03:16,640
demo machine that i remoted

00:03:12,640 --> 00:03:18,800
into um yeah that's andy the

00:03:16,640 --> 00:03:20,000
the weird but um this was team

00:03:18,800 --> 00:03:23,599
foundation server

00:03:20,000 --> 00:03:27,360
which was an early predecessor too

00:03:23,599 --> 00:03:30,080
um to the um

00:03:27,360 --> 00:03:32,440
what we now have is azure devops so it

00:03:30,080 --> 00:03:34,319
kind of migrated to the cloud is

00:03:32,440 --> 00:03:35,680
tfs.visualstudio.com and then it became

00:03:34,319 --> 00:03:38,480
azure devops

00:03:35,680 --> 00:03:40,560
um when you start applying this to uh to

00:03:38,480 --> 00:03:41,519
ssis we want to merge the software

00:03:40,560 --> 00:03:45,040
frequently

00:03:41,519 --> 00:03:48,640
um that's continuous integration

00:03:45,040 --> 00:03:52,720
unfortunately ssis is actually

00:03:48,640 --> 00:03:55,920
xml and because of the way xml works

00:03:52,720 --> 00:03:59,360
and the way that that merging in most

00:03:55,920 --> 00:04:01,200
continuous integration engines work

00:03:59,360 --> 00:04:02,879
it doesn't work so well you can run into

00:04:01,200 --> 00:04:04,799
some issues there's other tools out

00:04:02,879 --> 00:04:05,680
there that can help you overcome those

00:04:04,799 --> 00:04:08,959
issues

00:04:05,680 --> 00:04:12,640
but it's really um it's really hard

00:04:08,959 --> 00:04:15,760
to do a text based merge with xml

00:04:12,640 --> 00:04:18,560
in a short answer for why is

00:04:15,760 --> 00:04:19,600
that that the actual text can move

00:04:18,560 --> 00:04:22,720
around

00:04:19,600 --> 00:04:23,360
inside of the file and still represent

00:04:22,720 --> 00:04:26,000
the same

00:04:23,360 --> 00:04:27,919
object um things being in the same place

00:04:26,000 --> 00:04:28,960
so you can get a lot of false negatives

00:04:27,919 --> 00:04:31,600
where it says hey this

00:04:28,960 --> 00:04:33,520
is you know this doesn't match and in

00:04:31,600 --> 00:04:36,000
truth it does it just needs to be

00:04:33,520 --> 00:04:39,120
rationalized so you can do a good

00:04:36,000 --> 00:04:39,759
uh a good comparison on it continuous

00:04:39,120 --> 00:04:41,680
delivery

00:04:39,759 --> 00:04:42,800
is all about deliver deploying software

00:04:41,680 --> 00:04:47,120
frequently

00:04:42,800 --> 00:04:50,400
and i said back in the day that ssis is

00:04:47,120 --> 00:04:51,680
software development okay

00:04:50,400 --> 00:04:53,440
so i'm going to do a walkthrough here

00:04:51,680 --> 00:04:55,520
i'm just going to show you pictures the

00:04:53,440 --> 00:04:58,720
pictures are from azure devops

00:04:55,520 --> 00:05:00,880
and as with all things microsoft azure

00:04:58,720 --> 00:05:02,560
they're uh i can guarantee you some of

00:05:00,880 --> 00:05:04,720
the slides are out of date

00:05:02,560 --> 00:05:06,720
i'd be happy to send you the deck and

00:05:04,720 --> 00:05:10,080
you can walk through this yourself

00:05:06,720 --> 00:05:11,600
nothing is so out of date that it um it

00:05:10,080 --> 00:05:13,280
has changed so much that you won't be

00:05:11,600 --> 00:05:15,919
able to figure out where things are

00:05:13,280 --> 00:05:17,280
that's that's a fact but things change

00:05:15,919 --> 00:05:20,320
in microsoft azure

00:05:17,280 --> 00:05:21,520
daily so we're going to look at applying

00:05:20,320 --> 00:05:24,400
source control

00:05:21,520 --> 00:05:25,680
and we would do this in azure devops by

00:05:24,400 --> 00:05:28,160
creating

00:05:25,680 --> 00:05:29,280
first you'd create an organization and

00:05:28,160 --> 00:05:32,560
my organization

00:05:29,280 --> 00:05:33,680
is enterprise data and analytics or ent

00:05:32,560 --> 00:05:37,199
dna

00:05:33,680 --> 00:05:40,240
and we created a you know a new project

00:05:37,199 --> 00:05:42,560
up in uh in azure devops

00:05:40,240 --> 00:05:44,080
and you can sign up for uh for azure

00:05:42,560 --> 00:05:45,520
devops usually they've got some kind of

00:05:44,080 --> 00:05:47,919
free deal going on

00:05:45,520 --> 00:05:48,800
i'm almost positive that they still

00:05:47,919 --> 00:05:52,000
offer

00:05:48,800 --> 00:05:56,000
teams of up to five uh individuals five

00:05:52,000 --> 00:05:58,479
developers free use of azure devops

00:05:56,000 --> 00:06:00,400
but there's a there's a lot in here and

00:05:58,479 --> 00:06:01,199
there's a lot going on in microsoft

00:06:00,400 --> 00:06:03,919
about

00:06:01,199 --> 00:06:06,000
azure devops versus github and i don't

00:06:03,919 --> 00:06:08,479
know that they've got that figured out

00:06:06,000 --> 00:06:09,520
as of october 2020 when we're talking

00:06:08,479 --> 00:06:12,560
about this

00:06:09,520 --> 00:06:14,960
but you can always start free you sign

00:06:12,560 --> 00:06:18,160
up and create your account you create

00:06:14,960 --> 00:06:21,039
your organization mine is ent dna

00:06:18,160 --> 00:06:21,919
and after that you create a new project

00:06:21,039 --> 00:06:23,840
um

00:06:21,919 --> 00:06:26,000
you can set those projects up as

00:06:23,840 --> 00:06:27,600
publicly visible or maintain them as

00:06:26,000 --> 00:06:30,639
private

00:06:27,600 --> 00:06:32,880
you can see down here i'm using um i'm

00:06:30,639 --> 00:06:34,240
using team foundation version control

00:06:32,880 --> 00:06:35,440
and i'm going to speak some to that a

00:06:34,240 --> 00:06:39,759
little bit later

00:06:35,440 --> 00:06:42,479
not much later but after you've created

00:06:39,759 --> 00:06:43,840
uh a new project uh you can begin then

00:06:42,479 --> 00:06:46,720
to to work with it

00:06:43,840 --> 00:06:48,639
and here's that here's my slide i was i

00:06:46,720 --> 00:06:50,880
was referring to about

00:06:48,639 --> 00:06:52,000
talking about this uh using this later

00:06:50,880 --> 00:06:53,919
and i get this

00:06:52,000 --> 00:06:55,120
an awful lot when i talk about this i

00:06:53,919 --> 00:06:58,400
hear people say but

00:06:55,120 --> 00:07:00,880
andy everyone's using you know using get

00:06:58,400 --> 00:07:02,960
and you know and my response is right

00:07:00,880 --> 00:07:05,520
here on the slide it turns out there are

00:07:02,960 --> 00:07:07,120
enterprises that have a significant

00:07:05,520 --> 00:07:09,440
investment in team foundation

00:07:07,120 --> 00:07:11,120
services and they're looking for ways to

00:07:09,440 --> 00:07:11,680
continue operating the way that they

00:07:11,120 --> 00:07:13,199
operate

00:07:11,680 --> 00:07:14,880
except they want to lift and shift to

00:07:13,199 --> 00:07:16,400
the cloud

00:07:14,880 --> 00:07:19,360
a lot of people aren't aware that you

00:07:16,400 --> 00:07:21,680
can do this that you can move tfs

00:07:19,360 --> 00:07:23,440
um you know you move your tfs options

00:07:21,680 --> 00:07:24,240
and leverage all the knowledge that you

00:07:23,440 --> 00:07:26,880
have

00:07:24,240 --> 00:07:27,759
already about team foundation server by

00:07:26,880 --> 00:07:30,319
putting it

00:07:27,759 --> 00:07:32,479
into the cloud but i just wanted to

00:07:30,319 --> 00:07:36,240
share that that's why i chose

00:07:32,479 --> 00:07:38,479
um that that's the the project engine

00:07:36,240 --> 00:07:40,240
for this entire the rest of the demos in

00:07:38,479 --> 00:07:41,919
here

00:07:40,240 --> 00:07:43,759
after you do that you need to configure

00:07:41,919 --> 00:07:46,319
visual studio

00:07:43,759 --> 00:07:47,840
and that's just clicking tools options

00:07:46,319 --> 00:07:48,720
and then going to source control and

00:07:47,840 --> 00:07:50,960
picking

00:07:48,720 --> 00:07:52,160
the um the engine that you want to use

00:07:50,960 --> 00:07:54,000
and there's uh

00:07:52,160 --> 00:07:55,680
get in there and there's team foundation

00:07:54,000 --> 00:07:57,520
server after you get

00:07:55,680 --> 00:07:58,800
that selected you need to manage

00:07:57,520 --> 00:08:00,479
connections

00:07:58,800 --> 00:08:02,560
and then connect to a project and

00:08:00,479 --> 00:08:04,479
there's a lot of similarity here between

00:08:02,560 --> 00:08:06,960
setting up get and tfs

00:08:04,479 --> 00:08:08,879
but the workflow is actually different

00:08:06,960 --> 00:08:10,240
so you do things in a different order

00:08:08,879 --> 00:08:13,440
when you do this with git

00:08:10,240 --> 00:08:14,400
i use both i mostly use use get

00:08:13,440 --> 00:08:16,240
internally

00:08:14,400 --> 00:08:17,919
for the projects that we maintain and

00:08:16,240 --> 00:08:21,280
the code we maintain

00:08:17,919 --> 00:08:24,160
but we've helped organizations um

00:08:21,280 --> 00:08:24,960
you know move into the cloud with source

00:08:24,160 --> 00:08:27,919
control

00:08:24,960 --> 00:08:29,840
we've helped him make the shift from tfs

00:08:27,919 --> 00:08:31,199
to get i haven't helped anybody yet go

00:08:29,840 --> 00:08:33,360
the other direction

00:08:31,199 --> 00:08:35,279
i'll just say that i don't anticipate

00:08:33,360 --> 00:08:37,599
that but you never know

00:08:35,279 --> 00:08:39,519
once you've uh connected to your team

00:08:37,599 --> 00:08:42,560
project that i just created here

00:08:39,519 --> 00:08:44,720
mine is called ssis samples then

00:08:42,560 --> 00:08:45,920
team explorer will look like this in

00:08:44,720 --> 00:08:48,240
visual studio

00:08:45,920 --> 00:08:50,240
it looks differently if you're using get

00:08:48,240 --> 00:08:53,760
so just so you know

00:08:50,240 --> 00:08:56,560
and my solution explorer will then um

00:08:53,760 --> 00:08:57,200
will look like this where i have an you

00:08:56,560 --> 00:09:00,800
know an

00:08:57,200 --> 00:09:01,120
ssis project in here that i built to

00:09:00,800 --> 00:09:03,680
just

00:09:01,120 --> 00:09:04,880
test really to test the source control

00:09:03,680 --> 00:09:07,760
and the ci cd

00:09:04,880 --> 00:09:08,000
functionality in azure devops i want you

00:09:07,760 --> 00:09:12,080
can

00:09:08,000 --> 00:09:14,800
add that solution to source control and

00:09:12,080 --> 00:09:15,839
you get a a dialog that looks similar to

00:09:14,800 --> 00:09:17,680
this where you're

00:09:15,839 --> 00:09:20,800
basically acknowledging this is where i

00:09:17,680 --> 00:09:23,519
want to put this you know in this stack

00:09:20,800 --> 00:09:25,440
out there on tfs uh once you do that you

00:09:23,519 --> 00:09:26,399
get these little plus icons you'll see

00:09:25,440 --> 00:09:28,880
these these are

00:09:26,399 --> 00:09:31,120
going to show up around the artifacts

00:09:28,880 --> 00:09:33,600
that are ready to be

00:09:31,120 --> 00:09:34,480
um ready to be checked in that initial

00:09:33,600 --> 00:09:36,240
time these are

00:09:34,480 --> 00:09:38,560
these little plus symbols mean it's been

00:09:36,240 --> 00:09:40,720
added and um

00:09:38,560 --> 00:09:42,160
you can think about that as being staged

00:09:40,720 --> 00:09:44,320
although that may not be the best

00:09:42,160 --> 00:09:46,880
analogy but it's closed

00:09:44,320 --> 00:09:48,640
once you do the check-in you want to add

00:09:46,880 --> 00:09:51,760
a code comment you can see this is

00:09:48,640 --> 00:09:53,600
um gosh it's almost a year old since i

00:09:51,760 --> 00:09:55,839
i grabbed that screenshot but that's

00:09:53,600 --> 00:09:57,519
accurate it hasn't changed since then

00:09:55,839 --> 00:10:00,000
you do want to do code comments i mean

00:09:57,519 --> 00:10:01,839
it's just future you will thank you you

00:10:00,000 --> 00:10:04,240
know if i went to look at something i

00:10:01,839 --> 00:10:06,000
checked in a year ago i wouldn't

00:10:04,240 --> 00:10:08,480
remember it and i can tell you

00:10:06,000 --> 00:10:09,760
so the more help i give myself here in

00:10:08,480 --> 00:10:12,079
these check-in notes

00:10:09,760 --> 00:10:13,360
the better the visual studio uses these

00:10:12,079 --> 00:10:17,040
little blue locks uh

00:10:13,360 --> 00:10:20,240
or azure locks get it and um

00:10:17,040 --> 00:10:21,839
they will uh they'll indicate that now

00:10:20,240 --> 00:10:22,959
you're all checked in and you're all

00:10:21,839 --> 00:10:26,560
caught up

00:10:22,959 --> 00:10:30,480
um let's take a look at um

00:10:26,560 --> 00:10:33,279
at a um a checked in

00:10:30,480 --> 00:10:35,040
repository this is a a more mature

00:10:33,279 --> 00:10:37,360
version of what we're seeing

00:10:35,040 --> 00:10:38,800
um on this on the screenshots now

00:10:37,360 --> 00:10:40,320
there's just a lot of stuff you can see

00:10:38,800 --> 00:10:43,600
i've been checking this one in

00:10:40,320 --> 00:10:45,120
like an hour ago and there's some

00:10:43,600 --> 00:10:47,839
other stuff that i checked in very

00:10:45,120 --> 00:10:49,200
recently this write a record and succeed

00:10:47,839 --> 00:10:50,720
this is the package we're going to

00:10:49,200 --> 00:10:53,120
change and trigger

00:10:50,720 --> 00:10:54,800
uh changes in our um you know in our

00:10:53,120 --> 00:10:58,320
code that's checked in

00:10:54,800 --> 00:11:01,519
but um that's that this is an azure

00:10:58,320 --> 00:11:03,600
uh devops repository you can see

00:11:01,519 --> 00:11:05,519
if we um if we take a look at the

00:11:03,600 --> 00:11:07,839
different uh objects that we have here

00:11:05,519 --> 00:11:09,519
we have an overview and then uh

00:11:07,839 --> 00:11:10,640
boards and then the files themselves

00:11:09,519 --> 00:11:12,320
that's what we're looking at and we're

00:11:10,640 --> 00:11:13,519
gonna look at pipelines we're gonna stay

00:11:12,320 --> 00:11:16,160
right here in the middle

00:11:13,519 --> 00:11:17,279
but there's more artifacts and a lot

00:11:16,160 --> 00:11:19,279
more learn and do

00:11:17,279 --> 00:11:21,040
with um with azure devops and we're

00:11:19,279 --> 00:11:24,240
going to cover here

00:11:21,040 --> 00:11:26,079
today so if you have any questions by

00:11:24,240 --> 00:11:27,360
the way just pop them into the question

00:11:26,079 --> 00:11:30,000
and answer box

00:11:27,360 --> 00:11:31,920
and we've got a couple of moderators

00:11:30,000 --> 00:11:35,040
hanging out with us here who will

00:11:31,920 --> 00:11:36,560
be happy to stop me and i will uh

00:11:35,040 --> 00:11:38,079
i will answer any questions that you

00:11:36,560 --> 00:11:40,320
have about this

00:11:38,079 --> 00:11:43,360
um moving on we're going to talk about

00:11:40,320 --> 00:11:46,880
agents and i find this part fascinating

00:11:43,360 --> 00:11:48,000
i actually started with um software

00:11:46,880 --> 00:11:51,760
development

00:11:48,000 --> 00:11:52,959
in 1975 i was 11. i'm 57 don't hurt

00:11:51,760 --> 00:11:56,560
yourself

00:11:52,959 --> 00:11:59,519
and um so i've been doing this now for

00:11:56,560 --> 00:12:01,519
for about 45 years and it's of course it

00:11:59,519 --> 00:12:03,600
started as a hobby when i was 11 i

00:12:01,519 --> 00:12:06,639
learned motorola machine code but i

00:12:03,600 --> 00:12:08,320
i absolutely love you know the the kind

00:12:06,639 --> 00:12:10,399
of these throwbacks

00:12:08,320 --> 00:12:12,160
to uh the old days and we're going to

00:12:10,399 --> 00:12:15,279
see some of this as we look through

00:12:12,160 --> 00:12:17,279
both agents and pipelines going forward

00:12:15,279 --> 00:12:19,279
and what really fascinates me is the

00:12:17,279 --> 00:12:23,760
ability to be able to host an

00:12:19,279 --> 00:12:25,279
agent on a vm running on my laptop in

00:12:23,760 --> 00:12:27,279
farmville virginia that's going to

00:12:25,279 --> 00:12:30,160
interact with the cloud that's

00:12:27,279 --> 00:12:31,600
that's just kind of fascinating um

00:12:30,160 --> 00:12:33,279
self-hosted windows

00:12:31,600 --> 00:12:35,120
agents are you know this is an article

00:12:33,279 --> 00:12:35,839
that's been updated several times since

00:12:35,120 --> 00:12:40,000
um

00:12:35,839 --> 00:12:42,800
the 14th of august 2019 but

00:12:40,000 --> 00:12:44,800
it's it's a good start it kind of walks

00:12:42,800 --> 00:12:46,079
you through how to set up pipelines on

00:12:44,800 --> 00:12:48,480
self-hosted agents

00:12:46,079 --> 00:12:49,200
there's an option to run agents in the

00:12:48,480 --> 00:12:51,360
cloud

00:12:49,200 --> 00:12:53,200
i found that to be really slow the first

00:12:51,360 --> 00:12:54,720
few times i've tried that of course it's

00:12:53,200 --> 00:12:57,440
been over a year

00:12:54,720 --> 00:12:59,680
so they could be whiz bang flying by now

00:12:57,440 --> 00:13:02,160
but i mean it was taking minutes

00:12:59,680 --> 00:13:02,720
to get um to get code that was checked

00:13:02,160 --> 00:13:04,880
in

00:13:02,720 --> 00:13:06,720
to start doing anything when i was using

00:13:04,880 --> 00:13:08,959
the agents in the cloud

00:13:06,720 --> 00:13:11,279
i pulled down the self-hosted agent on a

00:13:08,959 --> 00:13:11,760
lark started tinkering around with it

00:13:11,279 --> 00:13:14,000
and it's

00:13:11,760 --> 00:13:17,040
like seconds you know in seconds we'll

00:13:14,000 --> 00:13:19,040
see the uh the agent begin to do stuff

00:13:17,040 --> 00:13:20,639
what you have to do to to get that

00:13:19,040 --> 00:13:23,120
interaction with

00:13:20,639 --> 00:13:24,800
your local machine or your enterprise

00:13:23,120 --> 00:13:25,519
machine in the cloud is you have to set

00:13:24,800 --> 00:13:29,040
up

00:13:25,519 --> 00:13:30,880
personal access tokens and this was one

00:13:29,040 --> 00:13:33,040
thing with that article that i looked at

00:13:30,880 --> 00:13:35,040
originally was kind of off about but the

00:13:33,040 --> 00:13:36,320
location is under the little person

00:13:35,040 --> 00:13:37,440
settings here

00:13:36,320 --> 00:13:40,480
you can see that and then there's

00:13:37,440 --> 00:13:42,880
personal access tokens and it's moved

00:13:40,480 --> 00:13:44,959
um you know from where it was obviously

00:13:42,880 --> 00:13:46,480
to this it may have moved again

00:13:44,959 --> 00:13:48,880
but you want to set that up they're not

00:13:46,480 --> 00:13:50,160
hard to set up when you first

00:13:48,880 --> 00:13:51,760
connect in there it's going to you're

00:13:50,160 --> 00:13:53,920
not going to have any tokens set up and

00:13:51,760 --> 00:13:56,639
it's going to prompt you for a new token

00:13:53,920 --> 00:13:57,600
and when you do that if you're going to

00:13:56,639 --> 00:13:59,600
use

00:13:57,600 --> 00:14:00,880
self-hosted you want to use the default

00:13:59,600 --> 00:14:04,240
agent pool

00:14:00,880 --> 00:14:06,240
um you and and there's a number of uh

00:14:04,240 --> 00:14:08,880
settings that you want to set up one is

00:14:06,240 --> 00:14:09,279
you want to do custom defined you can

00:14:08,880 --> 00:14:11,519
set

00:14:09,279 --> 00:14:13,519
this expiration date for way longer than

00:14:11,519 --> 00:14:14,320
30 days i just did that because i think

00:14:13,519 --> 00:14:16,720
it was

00:14:14,320 --> 00:14:18,720
the default um and there's some

00:14:16,720 --> 00:14:21,040
properties that you want to set again

00:14:18,720 --> 00:14:22,399
all in the documentation um but

00:14:21,040 --> 00:14:24,399
definitely you want to set read and

00:14:22,399 --> 00:14:26,720
manage on agent pools

00:14:24,399 --> 00:14:28,320
and there's just some more uh down here

00:14:26,720 --> 00:14:31,040
as you as you scroll down when you're

00:14:28,320 --> 00:14:34,560
done you click the create button

00:14:31,040 --> 00:14:37,199
and it'll create your your new agent

00:14:34,560 --> 00:14:38,800
and then you need to go to organization

00:14:37,199 --> 00:14:41,920
settings here

00:14:38,800 --> 00:14:44,399
select agent pools and then pick that

00:14:41,920 --> 00:14:47,680
default agent pool

00:14:44,399 --> 00:14:49,360
and now you're ready to configure a new

00:14:47,680 --> 00:14:51,120
agent so you've already set up your

00:14:49,360 --> 00:14:52,000
personal access token which is going to

00:14:51,120 --> 00:14:53,839
allow you to

00:14:52,000 --> 00:14:55,199
communicate securely between your

00:14:53,839 --> 00:14:56,880
machine

00:14:55,199 --> 00:14:58,800
and the cloud and that agent that's

00:14:56,880 --> 00:15:00,720
going to be running locally for you this

00:14:58,800 --> 00:15:02,639
is what you want to configure

00:15:00,720 --> 00:15:03,760
and i got to tell you this is one of the

00:15:02,639 --> 00:15:05,920
coolest

00:15:03,760 --> 00:15:08,880
uh pieces of code here i i've just seen

00:15:05,920 --> 00:15:11,600
the coolest little window

00:15:08,880 --> 00:15:13,360
here and for windows or mac os or linux

00:15:11,600 --> 00:15:14,560
you can pick this and set these up so it

00:15:13,360 --> 00:15:16,560
doesn't matter

00:15:14,560 --> 00:15:18,480
which platform you're running on it's

00:15:16,560 --> 00:15:21,199
platform agnostic

00:15:18,480 --> 00:15:23,839
when you download that agent it actually

00:15:21,199 --> 00:15:25,680
remembers the name and it's showing you

00:15:23,839 --> 00:15:27,680
here in the screenshot it's actually

00:15:25,680 --> 00:15:29,519
this is powershell of course so

00:15:27,680 --> 00:15:30,720
you start running powershell and it's

00:15:29,519 --> 00:15:33,040
got the name

00:15:30,720 --> 00:15:36,240
you see that right there it starts here

00:15:33,040 --> 00:15:37,759
home dollar home dot downloads vsts dash

00:15:36,240 --> 00:15:42,399
agent dash win

00:15:37,759 --> 00:15:45,360
dash x64 64-2.158.0.0

00:15:42,399 --> 00:15:46,959
so it remembers the age it's got that

00:15:45,360 --> 00:15:47,440
configured for you're going to download

00:15:46,959 --> 00:15:49,120
that

00:15:47,440 --> 00:15:51,199
it's going to unzip it for you that's

00:15:49,120 --> 00:15:52,880
what this command is going to do

00:15:51,199 --> 00:15:54,800
it's going to put it on the c drive in

00:15:52,880 --> 00:15:56,160
the agent folder

00:15:54,800 --> 00:15:58,560
and then you're going to run a config

00:15:56,160 --> 00:16:01,519
command and then later you'll run a

00:15:58,560 --> 00:16:02,079
you'll run run command and but it's all

00:16:01,519 --> 00:16:04,000
just

00:16:02,079 --> 00:16:05,600
right here i just love this integration

00:16:04,000 --> 00:16:08,079
right you click download

00:16:05,600 --> 00:16:08,959
you copy this code there's even a copy

00:16:08,079 --> 00:16:10,959
link over here

00:16:08,959 --> 00:16:13,279
that's off the screen i didn't quite get

00:16:10,959 --> 00:16:13,839
it in the screenshot but for each of

00:16:13,279 --> 00:16:15,440
those

00:16:13,839 --> 00:16:17,680
powershell commands there's a little

00:16:15,440 --> 00:16:19,120
copy button and let's put it on your

00:16:17,680 --> 00:16:21,199
clipboard

00:16:19,120 --> 00:16:22,639
i chose to run powershell from the

00:16:21,199 --> 00:16:25,360
command prompt because

00:16:22,639 --> 00:16:26,000
i just did you can run it however you'd

00:16:25,360 --> 00:16:28,320
like

00:16:26,000 --> 00:16:29,040
i chose it to to run the config from

00:16:28,320 --> 00:16:32,959
here

00:16:29,040 --> 00:16:37,120
it first prompts me for that server url

00:16:32,959 --> 00:16:39,680
um dev.azure.com and mine is us

00:16:37,120 --> 00:16:41,040
it's going to be slash then your your

00:16:39,680 --> 00:16:43,440
organization name

00:16:41,040 --> 00:16:44,959
and so there's mine and then after that

00:16:43,440 --> 00:16:47,519
there's some more stuff so you can see

00:16:44,959 --> 00:16:50,320
that server url is about

00:16:47,519 --> 00:16:51,839
down and then you know your

00:16:50,320 --> 00:16:53,600
authentication type it's going to be

00:16:51,839 --> 00:16:56,160
personal access token

00:16:53,600 --> 00:16:58,240
and then you have to um you when you get

00:16:56,160 --> 00:17:00,399
that personal access token

00:16:58,240 --> 00:17:01,839
um i didn't i skipped this back when i

00:17:00,399 --> 00:17:03,759
when i was there but you want to

00:17:01,839 --> 00:17:06,319
when it shows you the personal access

00:17:03,759 --> 00:17:06,959
token you want to copy that and paste it

00:17:06,319 --> 00:17:08,240
somewhere

00:17:06,959 --> 00:17:09,760
because you're never going to be able to

00:17:08,240 --> 00:17:11,039
get to that again you'd have to make a

00:17:09,760 --> 00:17:12,880
new one

00:17:11,039 --> 00:17:14,640
to you know to follow along you're going

00:17:12,880 --> 00:17:17,360
to need to paste it into here

00:17:14,640 --> 00:17:19,199
i usually copy it and put it on

00:17:17,360 --> 00:17:20,160
something like notepad or notepad plus

00:17:19,199 --> 00:17:21,520
plus or

00:17:20,160 --> 00:17:23,600
something like that but you can use

00:17:21,520 --> 00:17:26,880
anything that'll hold text

00:17:23,600 --> 00:17:27,760
um just until you get here and after

00:17:26,880 --> 00:17:29,280
this

00:17:27,760 --> 00:17:31,039
you really don't need the personal

00:17:29,280 --> 00:17:34,160
access token anymore

00:17:31,039 --> 00:17:36,880
um you there's um agent pools

00:17:34,160 --> 00:17:37,360
and then an agent name so here it's

00:17:36,880 --> 00:17:39,360
coming

00:17:37,360 --> 00:17:42,720
the reason it's asking me about mustang

00:17:39,360 --> 00:17:46,320
is i'm using a lenovo p51

00:17:42,720 --> 00:17:48,640
s and that was a the mustang was a model

00:17:46,320 --> 00:17:49,600
of an aircraft that had that same p51

00:17:48,640 --> 00:17:52,400
designation

00:17:49,600 --> 00:17:54,320
so that's where that's coming from um

00:17:52,400 --> 00:17:55,679
scanning for the capabilities and

00:17:54,320 --> 00:17:57,760
finally you know and ask a few more

00:17:55,679 --> 00:18:00,320
questions do you want to run the agent

00:17:57,760 --> 00:18:01,280
as a service i did not i want to start

00:18:00,320 --> 00:18:03,600
it and stop it

00:18:01,280 --> 00:18:05,679
manually when i'm going to use it and i

00:18:03,600 --> 00:18:08,240
could configure auto log on

00:18:05,679 --> 00:18:10,640
and i just i set that to the default of

00:18:08,240 --> 00:18:12,559
no as well

00:18:10,640 --> 00:18:14,000
after you've got everything configured

00:18:12,559 --> 00:18:14,640
then you can run it and it's going to

00:18:14,000 --> 00:18:16,400
look like

00:18:14,640 --> 00:18:17,840
like it looks here in the screenshot

00:18:16,400 --> 00:18:20,160
it's going to finish up

00:18:17,840 --> 00:18:22,080
uh starting for jobs and we're actually

00:18:20,160 --> 00:18:26,320
going to see that in the next demo

00:18:22,080 --> 00:18:29,440
here which is let's see here we are

00:18:26,320 --> 00:18:33,360
um i hope i shut it down i did

00:18:29,440 --> 00:18:35,200
okay but if we uh kind of zoom in here a

00:18:33,360 --> 00:18:37,600
little bit and just type run

00:18:35,200 --> 00:18:38,960
it's a dot cmd on windows so it'll it's

00:18:37,600 --> 00:18:42,559
an executable

00:18:38,960 --> 00:18:44,559
and it just it's connecting

00:18:42,559 --> 00:18:45,840
and you know it's scanned to make sure

00:18:44,559 --> 00:18:48,160
that it was up to date

00:18:45,840 --> 00:18:50,000
it connected to the server and then

00:18:48,160 --> 00:18:52,720
it'll go listening for jobs as soon as

00:18:50,000 --> 00:18:55,360
that connection is complete

00:18:52,720 --> 00:18:57,679
so there we are um and that's great you

00:18:55,360 --> 00:18:59,760
know great big fancy schmancy demo right

00:18:57,679 --> 00:19:01,039
the good stuff's coming i promise this

00:18:59,760 --> 00:19:04,080
isn't bad

00:19:01,039 --> 00:19:06,640
but there's better stuff coming um

00:19:04,080 --> 00:19:09,280
and finally we get to uh to pipeline so

00:19:06,640 --> 00:19:11,840
azure pipelines are kind of cool

00:19:09,280 --> 00:19:13,280
um there's all sorts of tools out there

00:19:11,840 --> 00:19:15,200
that's been out there before

00:19:13,280 --> 00:19:17,440
azure came up with this kind of

00:19:15,200 --> 00:19:20,000
automation and pipeline thinking

00:19:17,440 --> 00:19:21,280
and they're also cool i'm just just

00:19:20,000 --> 00:19:23,360
straight up um

00:19:21,280 --> 00:19:25,520
it's just a neat way to uh to look at

00:19:23,360 --> 00:19:28,240
this and we're going to walk through

00:19:25,520 --> 00:19:29,200
the configuration of this uh step by

00:19:28,240 --> 00:19:32,880
step

00:19:29,200 --> 00:19:35,120
and what we see is in that menu we were

00:19:32,880 --> 00:19:36,840
just looking at we're focusing on repos

00:19:35,120 --> 00:19:38,640
and pipelines you want to click on

00:19:36,840 --> 00:19:41,200
pipelines and then click

00:19:38,640 --> 00:19:43,200
new and then click a new build pipeline

00:19:41,200 --> 00:19:45,679
now i want to pause here

00:19:43,200 --> 00:19:46,240
and and just let you know if you're

00:19:45,679 --> 00:19:49,039
using

00:19:46,240 --> 00:19:50,880
azure devops right now you're going to

00:19:49,039 --> 00:19:53,440
be using it a little differently than

00:19:50,880 --> 00:19:54,400
the way i am the the reason that i'm

00:19:53,440 --> 00:19:58,320
going through this

00:19:54,400 --> 00:20:02,400
this way is if i figure if i can get you

00:19:58,320 --> 00:20:04,400
into a pipeline then you know from zero

00:20:02,400 --> 00:20:06,080
into a pipeline that's enough and in

00:20:04,400 --> 00:20:09,760
fact i know it's a lot

00:20:06,080 --> 00:20:13,360
because i help customers do this and

00:20:09,760 --> 00:20:15,440
this is exactly how we start later

00:20:13,360 --> 00:20:17,520
we go into things like artifacts and

00:20:15,440 --> 00:20:20,480
automated tests and stuff like that but

00:20:17,520 --> 00:20:22,159
we start with exactly what i'm sharing

00:20:20,480 --> 00:20:23,919
with you here and that's why i'm

00:20:22,159 --> 00:20:25,440
i'm sharing this with you i want to get

00:20:23,919 --> 00:20:28,480
you from uh

00:20:25,440 --> 00:20:31,120
perhaps no source control which i still

00:20:28,480 --> 00:20:33,039
encounter in 2020

00:20:31,120 --> 00:20:34,880
and and because people don't know how to

00:20:33,039 --> 00:20:36,640
use it not everybody does there was a

00:20:34,880 --> 00:20:38,000
time when i didn't know how to use

00:20:36,640 --> 00:20:40,799
source control

00:20:38,000 --> 00:20:42,320
and it was a long long time ago but i

00:20:40,799 --> 00:20:44,720
had to learn as well

00:20:42,320 --> 00:20:47,120
don't be intimidated by that everybody i

00:20:44,720 --> 00:20:50,480
believe is doing the best that they can

00:20:47,120 --> 00:20:51,600
so um i when i go help people and i love

00:20:50,480 --> 00:20:54,400
helping people

00:20:51,600 --> 00:20:56,000
i just try to get them up to this point

00:20:54,400 --> 00:20:57,200
to start with and as you can see we're

00:20:56,000 --> 00:21:00,400
going to do this

00:20:57,200 --> 00:21:03,360
in a you know a little more than an hour

00:21:00,400 --> 00:21:05,360
you know we we can get you to here then

00:21:03,360 --> 00:21:07,520
from here we can take you on to the more

00:21:05,360 --> 00:21:08,799
advanced topics of artifacts and test

00:21:07,520 --> 00:21:10,720
plans and

00:21:08,799 --> 00:21:11,840
the whole nine yards but you can

00:21:10,720 --> 00:21:15,520
actually

00:21:11,840 --> 00:21:19,120
uh manually do those steps where

00:21:15,520 --> 00:21:21,440
you do deployments and you do testing

00:21:19,120 --> 00:21:22,320
but you have to do it in a more manual

00:21:21,440 --> 00:21:25,360
way

00:21:22,320 --> 00:21:26,080
than is typical in engines like azure

00:21:25,360 --> 00:21:27,760
devops

00:21:26,080 --> 00:21:30,000
and like i said there's other engines

00:21:27,760 --> 00:21:32,080
out there as well i'm not as familiar

00:21:30,000 --> 00:21:33,200
with those other engines but i've worked

00:21:32,080 --> 00:21:36,720
with teams that

00:21:33,200 --> 00:21:37,120
are and um i believe you could probably

00:21:36,720 --> 00:21:40,159
do

00:21:37,120 --> 00:21:42,799
exactly what i'm about to do here

00:21:40,159 --> 00:21:44,559
in this less than optimal way kind of

00:21:42,799 --> 00:21:46,880
just getting started way

00:21:44,559 --> 00:21:47,760
in those engines as well so i could be

00:21:46,880 --> 00:21:50,159
wrong

00:21:47,760 --> 00:21:51,840
but um because i don't know uh those

00:21:50,159 --> 00:21:54,400
other engines as well once you've

00:21:51,840 --> 00:21:54,960
once you click on a new build pipeline

00:21:54,400 --> 00:21:58,320
it

00:21:54,960 --> 00:21:59,919
actually um asks you where's your code

00:21:58,320 --> 00:22:01,919
and you have to kind of answer it seems

00:21:59,919 --> 00:22:03,360
like the same question twice

00:22:01,919 --> 00:22:05,200
it's first going to ask you you know

00:22:03,360 --> 00:22:06,240
where's your code i'm in team foundation

00:22:05,200 --> 00:22:08,080
version control

00:22:06,240 --> 00:22:09,760
and it's asking me for a source and here

00:22:08,080 --> 00:22:12,880
it is you know selecting

00:22:09,760 --> 00:22:14,799
team foundation version control again

00:22:12,880 --> 00:22:16,640
but after i've got this setup and my

00:22:14,799 --> 00:22:19,760
server path defined and

00:22:16,640 --> 00:22:20,159
everything i can click continue and i

00:22:19,760 --> 00:22:22,400
can

00:22:20,159 --> 00:22:24,320
select a template or just build a nice

00:22:22,400 --> 00:22:26,320
empty job here

00:22:24,320 --> 00:22:28,480
i'm going to go with an empty job and

00:22:26,320 --> 00:22:28,960
now it starts asking me about that agent

00:22:28,480 --> 00:22:32,400
pool

00:22:28,960 --> 00:22:33,039
stuff how are you going to run the job

00:22:32,400 --> 00:22:36,159
you need an

00:22:33,039 --> 00:22:38,159
agent to run these pipelines so

00:22:36,159 --> 00:22:40,559
how are you going to do it where is your

00:22:38,159 --> 00:22:43,760
agent and i am in the default

00:22:40,559 --> 00:22:44,320
uh pool agent pool and that's the one

00:22:43,760 --> 00:22:46,559
that's

00:22:44,320 --> 00:22:47,760
configured right now and running on my

00:22:46,559 --> 00:22:50,799
vm

00:22:47,760 --> 00:22:52,559
right now after um i start setting up

00:22:50,799 --> 00:22:56,080
some variables in here

00:22:52,559 --> 00:22:58,799
and the one variable uh password pwd var

00:22:56,080 --> 00:23:00,559
i i set that up and i named i made sure

00:22:58,799 --> 00:23:02,799
that it was configured

00:23:00,559 --> 00:23:05,200
as sensitive because i don't want to

00:23:02,799 --> 00:23:07,679
share my password with you i trust you

00:23:05,200 --> 00:23:08,400
except with my passwords other than that

00:23:07,679 --> 00:23:11,679
we're cool

00:23:08,400 --> 00:23:13,760
i hope but um yeah so

00:23:11,679 --> 00:23:15,360
i definitely want to be able to uh to

00:23:13,760 --> 00:23:17,840
configure um

00:23:15,360 --> 00:23:18,960
an agent as part of this job part of

00:23:17,840 --> 00:23:21,200
this pipeline

00:23:18,960 --> 00:23:22,799
these go together all of the agents all

00:23:21,200 --> 00:23:26,480
the pipelines need that agent

00:23:22,799 --> 00:23:30,159
information and when i'm configuring it

00:23:26,480 --> 00:23:31,200
um you know i i want to get to the spot

00:23:30,159 --> 00:23:34,799
where

00:23:31,200 --> 00:23:38,080
i can now build and deploy ssis

00:23:34,799 --> 00:23:39,600
now if you played with ssis or uh azure

00:23:38,080 --> 00:23:42,559
devops in ssis

00:23:39,600 --> 00:23:43,679
more than about a year ago you didn't

00:23:42,559 --> 00:23:47,760
see what i see

00:23:43,679 --> 00:23:49,840
here um there there were a lot of uh

00:23:47,760 --> 00:23:51,120
i say a lot there was a handful at least

00:23:49,840 --> 00:23:54,159
of

00:23:51,120 --> 00:23:56,400
people who had built these custom tasks

00:23:54,159 --> 00:23:58,320
out there for azure devops and they were

00:23:56,400 --> 00:23:59,760
trying to solve this problem

00:23:58,320 --> 00:24:02,240
the versions that i'm sharing with you

00:23:59,760 --> 00:24:05,200
today were actually built by the ssis

00:24:02,240 --> 00:24:08,320
team i don't know if that's an accurate

00:24:05,200 --> 00:24:11,760
screenshot of it or not but um

00:24:08,320 --> 00:24:15,039
these were new as of about the end of

00:24:11,760 --> 00:24:16,960
october beginning of november 2019

00:24:15,039 --> 00:24:18,240
build and deploy they've since updated

00:24:16,960 --> 00:24:21,600
him and

00:24:18,240 --> 00:24:24,799
just last week they released a

00:24:21,600 --> 00:24:27,120
a local version of these and you can do

00:24:24,799 --> 00:24:29,039
command line

00:24:27,120 --> 00:24:30,880
you know if you install the local code

00:24:29,039 --> 00:24:33,360
you can do command line versions of this

00:24:30,880 --> 00:24:35,039
and absolutely love that

00:24:33,360 --> 00:24:37,039
you can read more about that out at the

00:24:35,039 --> 00:24:38,240
ssis blog and if you can't find that

00:24:37,039 --> 00:24:41,760
email me

00:24:38,240 --> 00:24:43,279
they moved it about a year ago as well

00:24:41,760 --> 00:24:44,960
and i'd be happy to share it with you

00:24:43,279 --> 00:24:47,360
but these tasks

00:24:44,960 --> 00:24:49,120
the new build and the new deploy task

00:24:47,360 --> 00:24:50,720
the way you get to those is you click on

00:24:49,120 --> 00:24:54,000
the add tasks

00:24:50,720 --> 00:24:55,279
and then search for ssis you're going to

00:24:54,000 --> 00:24:58,559
see more there today

00:24:55,279 --> 00:25:01,919
than i have on this screen

00:24:58,559 --> 00:25:03,840
but if i add an ssis build task i just

00:25:01,919 --> 00:25:07,200
configure it it's a it's not as

00:25:03,840 --> 00:25:07,760
uh as intense as the deploy um but if

00:25:07,200 --> 00:25:09,600
you just

00:25:07,760 --> 00:25:11,360
uh tell it where you know where you're

00:25:09,600 --> 00:25:14,000
going of course you give it a name

00:25:11,360 --> 00:25:15,760
and tell it to pass you're going to use

00:25:14,000 --> 00:25:17,760
and then it uses these internal

00:25:15,760 --> 00:25:18,799
variables here these are old tfs

00:25:17,760 --> 00:25:22,799
variables

00:25:18,799 --> 00:25:25,520
um build.artifact staging directory

00:25:22,799 --> 00:25:27,600
and once you've got that good then you

00:25:25,520 --> 00:25:28,559
can go do that same search again for

00:25:27,600 --> 00:25:31,360
ssis

00:25:28,559 --> 00:25:33,200
and pull in a deploy task just click

00:25:31,360 --> 00:25:36,080
that add button and it adds it to your

00:25:33,200 --> 00:25:39,120
pipeline's executables there your um

00:25:36,080 --> 00:25:41,600
your your uh where your your pipeline's

00:25:39,120 --> 00:25:43,840
artifact and you can see the it's a

00:25:41,600 --> 00:25:46,400
little more configuration here

00:25:43,840 --> 00:25:48,000
um we're still using that that output

00:25:46,400 --> 00:25:50,000
that was built it was put into the build

00:25:48,000 --> 00:25:52,799
artifact staging directory

00:25:50,000 --> 00:25:55,840
but an ssis package um actually

00:25:52,799 --> 00:25:57,600
generates what's called an is pac file

00:25:55,840 --> 00:26:01,039
uh an is pac file

00:25:57,600 --> 00:26:03,520
is a it's really a zip file if you have

00:26:01,039 --> 00:26:03,840
7zip or some winzip or something like

00:26:03,520 --> 00:26:06,799
that

00:26:03,840 --> 00:26:08,240
installed on your machine you can open

00:26:06,799 --> 00:26:10,799
that artifact of that

00:26:08,240 --> 00:26:12,880
archive rather and you can see inside of

00:26:10,799 --> 00:26:17,200
there the packages and a few

00:26:12,880 --> 00:26:17,200
deployment artifacts that ms build uses

00:26:17,279 --> 00:26:20,720
and if you don't you can just rename the

00:26:19,600 --> 00:26:23,520
ispac file

00:26:20,720 --> 00:26:24,080
extension to zip and windows explorer

00:26:23,520 --> 00:26:25,840
will show you

00:26:24,080 --> 00:26:27,840
those things just be sure to put it back

00:26:25,840 --> 00:26:31,520
before you try to deploy it

00:26:27,840 --> 00:26:34,320
um you can do deployments to ssisdb now

00:26:31,520 --> 00:26:36,320
this is the ssis catalog

00:26:34,320 --> 00:26:38,559
if you're not familiar with the ssis

00:26:36,320 --> 00:26:42,240
catalog it is a framework

00:26:38,559 --> 00:26:44,159
that microsoft built to help manage the

00:26:42,240 --> 00:26:47,600
execution

00:26:44,159 --> 00:26:50,880
deployment configuration and logging

00:26:47,600 --> 00:26:55,200
for ssis packages in the enterprise

00:26:50,880 --> 00:26:58,000
and it came out around 2012 and um

00:26:55,200 --> 00:26:59,120
it was great and still is it's still a

00:26:58,000 --> 00:27:00,960
great engine

00:26:59,120 --> 00:27:02,400
in fact there's a version of it that

00:27:00,960 --> 00:27:04,880
runs in

00:27:02,400 --> 00:27:06,640
azure data factory and what we call the

00:27:04,880 --> 00:27:09,840
azure ssis

00:27:06,640 --> 00:27:13,600
integration runtime so you can have

00:27:09,840 --> 00:27:17,120
essentially an ssis catalog in the cloud

00:27:13,600 --> 00:27:17,679
and you can execute packages from there

00:27:17,120 --> 00:27:20,799
as well

00:27:17,679 --> 00:27:23,120
in fact this demo does that so you can

00:27:20,799 --> 00:27:27,960
see here this is deploying

00:27:23,120 --> 00:27:29,520
this is an azure sql database here

00:27:27,960 --> 00:27:32,720
svademo.database.windows.net

00:27:29,520 --> 00:27:36,080
and it's a destination path

00:27:32,720 --> 00:27:39,679
i was delivering this to the pass summit

00:27:36,080 --> 00:27:41,279
last year and sql server authentication

00:27:39,679 --> 00:27:42,880
is what you use for that as my

00:27:41,279 --> 00:27:44,880
administrator and there's that password

00:27:42,880 --> 00:27:46,480
i didn't want to share with you earlier

00:27:44,880 --> 00:27:48,880
i want to go ahead and overwrite it if

00:27:46,480 --> 00:27:50,720
it exists if there's an error i don't

00:27:48,880 --> 00:27:52,559
want to keep going i want to stop but i

00:27:50,720 --> 00:27:53,360
love that fault tolerance setting right

00:27:52,559 --> 00:27:56,080
i can say

00:27:53,360 --> 00:27:57,279
it's if this one fails this pipeline

00:27:56,080 --> 00:27:58,640
just keep going

00:27:57,279 --> 00:28:00,559
there's another one out there and you

00:27:58,640 --> 00:28:03,840
can just pick that one up and

00:28:00,559 --> 00:28:06,720
you know and and do what you need to do

00:28:03,840 --> 00:28:08,720
and we can see um an example of that of

00:28:06,720 --> 00:28:13,120
executing this build

00:28:08,720 --> 00:28:16,399
if i um if i pop up here to azure devops

00:28:13,120 --> 00:28:17,520
and let's see let's go to the pipelines

00:28:16,399 --> 00:28:21,039
here

00:28:17,520 --> 00:28:22,559
and take a look um you can see i've got

00:28:21,039 --> 00:28:24,399
four pipelines out here i'm going to

00:28:22,559 --> 00:28:25,840
start with this one number zero because

00:28:24,399 --> 00:28:29,600
i'm an engineer and

00:28:25,840 --> 00:28:32,240
we number things at zero um if i go to

00:28:29,600 --> 00:28:34,559
the editor here we can see how

00:28:32,240 --> 00:28:37,120
this uh this begins to get built at

00:28:34,559 --> 00:28:38,480
least the pieces we just talked about

00:28:37,120 --> 00:28:40,880
uh we can see a couple of things here

00:28:38,480 --> 00:28:43,919
we'll first pop over to variables

00:28:40,880 --> 00:28:47,360
and then we'll we'll make our way back

00:28:43,919 --> 00:28:51,200
to this and let's see

00:28:47,360 --> 00:28:53,600
we have three children at home who are

00:28:51,200 --> 00:28:56,960
uh using the internet here for remote

00:28:53,600 --> 00:28:58,880
school so sometimes the junior engineers

00:28:56,960 --> 00:29:00,799
suck up all the bandwidth here but we're

00:28:58,880 --> 00:29:04,159
definitely loading i've noticed too

00:29:00,799 --> 00:29:05,840
when i present um it's not in its happy

00:29:04,159 --> 00:29:08,559
place i'm gonna give it about

00:29:05,840 --> 00:29:09,919
two more seconds and then click refresh

00:29:08,559 --> 00:29:11,840
all right it heard me

00:29:09,919 --> 00:29:13,120
and it decided okay i'm going to go do

00:29:11,840 --> 00:29:15,200
what andy said

00:29:13,120 --> 00:29:17,279
so let's look at variables first because

00:29:15,200 --> 00:29:19,760
that's what we looked at in the um

00:29:17,279 --> 00:29:21,120
on a slideshow there's that uh pwd for

00:29:19,760 --> 00:29:24,000
password bar pwv

00:29:21,120 --> 00:29:25,840
dvr some other variables that are in

00:29:24,000 --> 00:29:29,600
here that we can turn on

00:29:25,840 --> 00:29:31,919
system debug if you turn that on um

00:29:29,600 --> 00:29:33,039
set that to true it'll add a bunch of

00:29:31,919 --> 00:29:36,080
what i lovingly call

00:29:33,039 --> 00:29:38,000
purple text um it's probably closer to

00:29:36,080 --> 00:29:39,200
magenta but when i was a kid we could

00:29:38,000 --> 00:29:43,200
only afford the

00:29:39,200 --> 00:29:46,559
crayon crayola box so it's purple

00:29:43,200 --> 00:29:48,640
um and we would you know you could see

00:29:46,559 --> 00:29:49,840
all that it easily doubles the amount of

00:29:48,640 --> 00:29:51,679
information flowing by

00:29:49,840 --> 00:29:53,120
in the screen i absolutely love these

00:29:51,679 --> 00:29:54,480
little screens that we're going to see

00:29:53,120 --> 00:29:56,799
here in just a minute

00:29:54,480 --> 00:29:58,960
but um we're not going to turn that on i

00:29:56,799 --> 00:30:00,640
rarely use that i do use it sometimes

00:29:58,960 --> 00:30:02,720
for troubleshooting because

00:30:00,640 --> 00:30:04,640
sometimes i've done something dumb and

00:30:02,720 --> 00:30:06,399
sometimes there's work going on

00:30:04,640 --> 00:30:08,240
uh under you know behind the scenes

00:30:06,399 --> 00:30:10,480
under the hood and

00:30:08,240 --> 00:30:11,360
something squirrely is happening that

00:30:10,480 --> 00:30:14,159
happened to me

00:30:11,360 --> 00:30:16,480
um today in fact i do a lot of uh live

00:30:14,159 --> 00:30:20,240
streaming i do about one a day now

00:30:16,480 --> 00:30:23,159
i'm uh andy and i am a streamer

00:30:20,240 --> 00:30:24,559
yeah so um you can catch me over at

00:30:23,159 --> 00:30:26,159
twitch.tv

00:30:24,559 --> 00:30:28,399
andy leonard if you want to know more

00:30:26,159 --> 00:30:30,399
about that or follow me on twitter i'll

00:30:28,399 --> 00:30:31,840
usually announce when i'm doing it andy

00:30:30,399 --> 00:30:35,360
leonard on twitter

00:30:31,840 --> 00:30:38,640
and stuff like that but i feel i get on

00:30:35,360 --> 00:30:39,440
twitch and linkedin live and youtube and

00:30:38,640 --> 00:30:41,600
facebook

00:30:39,440 --> 00:30:43,760
and i just fall on my face over and over

00:30:41,600 --> 00:30:46,640
and over again

00:30:43,760 --> 00:30:49,279
but um sometimes things will just go

00:30:46,640 --> 00:30:52,240
right and when they do i get nervous

00:30:49,279 --> 00:30:53,600
but there we are with the password bar

00:30:52,240 --> 00:30:54,880
we're going to look at triggers a little

00:30:53,600 --> 00:30:57,120
bit later but that's really

00:30:54,880 --> 00:30:58,799
it other than that and then task you can

00:30:57,120 --> 00:31:00,399
see here's i named my

00:30:58,799 --> 00:31:03,760
pipeline there's the name of it there's

00:31:00,399 --> 00:31:04,960
where i configure the agent pool

00:31:03,760 --> 00:31:07,039
that's really all we're going to talk

00:31:04,960 --> 00:31:09,039
about here in the um in the

00:31:07,039 --> 00:31:11,039
uh introductory here's all that

00:31:09,039 --> 00:31:12,159
configuration stuff that you saw on the

00:31:11,039 --> 00:31:15,279
slides where's

00:31:12,159 --> 00:31:17,519
where's your stuff and

00:31:15,279 --> 00:31:19,039
you know how how's this going to work

00:31:17,519 --> 00:31:19,519
you know what's your display name of the

00:31:19,039 --> 00:31:22,480
actual

00:31:19,519 --> 00:31:24,559
agent job you're going to see um you're

00:31:22,480 --> 00:31:28,240
going to see this name pop up

00:31:24,559 --> 00:31:29,919
and how i got to this

00:31:28,240 --> 00:31:31,679
is i actually and i'll click plus here

00:31:29,919 --> 00:31:32,480
and show you this is if i want to add

00:31:31,679 --> 00:31:34,080
one

00:31:32,480 --> 00:31:36,640
saying hey you want to add a task and

00:31:34,080 --> 00:31:39,679
there is a boatload of tasks

00:31:36,640 --> 00:31:42,720
this is being updated all the time so if

00:31:39,679 --> 00:31:44,480
i type ssis i just want to show you

00:31:42,720 --> 00:31:46,240
what's out here you can see this is the

00:31:44,480 --> 00:31:49,360
official build task

00:31:46,240 --> 00:31:51,039
it says for build and then deploy

00:31:49,360 --> 00:31:53,120
um you can see i'm using the older

00:31:51,039 --> 00:31:56,480
versions they still work

00:31:53,120 --> 00:31:58,640
uh they do but we're just gonna go with

00:31:56,480 --> 00:32:01,919
the one we've got configured here

00:31:58,640 --> 00:32:03,519
and um you know and really this is it

00:32:01,919 --> 00:32:06,000
just what you saw on the slide then

00:32:03,519 --> 00:32:07,519
deploy it's going to actually deploy it

00:32:06,000 --> 00:32:09,440
now we're going to be able to prove it

00:32:07,519 --> 00:32:13,279
did a deploy here

00:32:09,440 --> 00:32:15,120
in just a minute um oh katie pop

00:32:13,279 --> 00:32:16,480
katie said this a while ago you was born

00:32:15,120 --> 00:32:17,840
in richmond who lived in farmville the

00:32:16,480 --> 00:32:19,919
first year of your life

00:32:17,840 --> 00:32:21,760
all roads katie all roads lead to

00:32:19,919 --> 00:32:22,399
farmville virginia i'm not making this

00:32:21,760 --> 00:32:24,640
up

00:32:22,399 --> 00:32:26,399
i was also born in richmond and i've

00:32:24,640 --> 00:32:28,000
lived here i've lived around here most

00:32:26,399 --> 00:32:30,960
of my life i lived in jacksonville

00:32:28,000 --> 00:32:31,600
for a bit that's pretty cool um craig

00:32:30,960 --> 00:32:34,240
also

00:32:31,600 --> 00:32:35,519
uh put up the short link for the job

00:32:34,240 --> 00:32:38,480
posting form

00:32:35,519 --> 00:32:40,159
hey if you have a a job uh that you're

00:32:38,480 --> 00:32:41,679
looking for people

00:32:40,159 --> 00:32:42,960
there's a lot of people still hiring

00:32:41,679 --> 00:32:44,240
right now i mean it's a little

00:32:42,960 --> 00:32:46,000
surprising

00:32:44,240 --> 00:32:48,799
but uh please hit that link and post

00:32:46,000 --> 00:32:51,679
that job um

00:32:48,799 --> 00:32:53,600
also um while we're kind of semi talking

00:32:51,679 --> 00:32:55,440
about the job market here

00:32:53,600 --> 00:32:57,120
i just want to stop and make you aware

00:32:55,440 --> 00:32:58,559
and i hope this is okay and if it's not

00:32:57,120 --> 00:33:02,720
i apologize

00:32:58,559 --> 00:33:05,840
but if you go to andy leonard dot blog

00:33:02,720 --> 00:33:07,760
slash lost underscore job

00:33:05,840 --> 00:33:09,120
if you've lost your job due to the

00:33:07,760 --> 00:33:12,000
pandemic i offer

00:33:09,120 --> 00:33:14,080
a collection of classes azure data

00:33:12,000 --> 00:33:15,600
factory and ssis and i will let you

00:33:14,080 --> 00:33:18,480
attend for free

00:33:15,600 --> 00:33:20,799
um i i make good money delivering these

00:33:18,480 --> 00:33:22,559
classes for people who pay me to do it

00:33:20,799 --> 00:33:24,000
but if you've lost your job just pop

00:33:22,559 --> 00:33:26,799
into that

00:33:24,000 --> 00:33:28,880
and i will type that into the messages

00:33:26,799 --> 00:33:30,000
uh here if that's okay and if it's not

00:33:28,880 --> 00:33:31,840
okay stop me now

00:33:30,000 --> 00:33:34,240
somebody yell at me one of the

00:33:31,840 --> 00:33:37,279
moderators

00:33:34,240 --> 00:33:39,840
i just want to make sure that

00:33:37,279 --> 00:33:41,039
you know you can attend these for uh for

00:33:39,840 --> 00:33:43,760
for free

00:33:41,039 --> 00:33:46,480
uh if you know underscore lost job there

00:33:43,760 --> 00:33:48,480
we go okay craig said good

00:33:46,480 --> 00:33:49,919
because i was ready to hit okay sorry

00:33:48,480 --> 00:33:53,279
i'll shut that down but

00:33:49,919 --> 00:33:55,279
yeah go go check that out and um

00:33:53,279 --> 00:33:57,039
put your name and your email in there

00:33:55,279 --> 00:34:00,480
and i'll email you back just

00:33:57,039 --> 00:34:04,000
kind of the the deal on that um

00:34:00,480 --> 00:34:06,000
but here we are doing the deploy now

00:34:04,000 --> 00:34:07,279
i wanna i'm gonna pop in here for just a

00:34:06,000 --> 00:34:10,639
minute this is

00:34:07,279 --> 00:34:13,440
uh microsoft um sql server management

00:34:10,639 --> 00:34:16,480
studio ssms and i'm connected to that

00:34:13,440 --> 00:34:17,760
catalog in the cloud right now and so if

00:34:16,480 --> 00:34:20,639
i

00:34:17,760 --> 00:34:21,280
if i um go back if i go back over here

00:34:20,639 --> 00:34:24,240
and i click

00:34:21,280 --> 00:34:25,440
queue it's going to ask me you know what

00:34:24,240 --> 00:34:27,040
do you want to use

00:34:25,440 --> 00:34:28,720
and i'm not going to put any information

00:34:27,040 --> 00:34:31,280
in here i'm just going to leave it

00:34:28,720 --> 00:34:33,200
as it is because and then not enabling

00:34:31,280 --> 00:34:35,040
system diagnostics that'd be more purple

00:34:33,200 --> 00:34:37,599
text i was clicking run

00:34:35,040 --> 00:34:39,119
and when it starts to run i want to show

00:34:37,599 --> 00:34:42,159
you

00:34:39,119 --> 00:34:44,079
the agent screen here so now it's

00:34:42,159 --> 00:34:46,159
telling me that oh wow something bad

00:34:44,079 --> 00:34:48,000
happened but it reconnected

00:34:46,159 --> 00:34:49,760
and it went now to build and deploy i

00:34:48,000 --> 00:34:50,399
bet you while i was spinning there there

00:34:49,760 --> 00:34:54,079
was a

00:34:50,399 --> 00:34:55,200
problem the cans the two cans and a

00:34:54,079 --> 00:34:58,000
string between me

00:34:55,200 --> 00:35:00,079
and the um and the network connection

00:34:58,000 --> 00:35:02,720
may have been gone so it's running

00:35:00,079 --> 00:35:04,560
and what here's i just absolutely love

00:35:02,720 --> 00:35:05,440
this if we click on this we can see it

00:35:04,560 --> 00:35:07,839
running

00:35:05,440 --> 00:35:10,160
i love these screens in here i know i

00:35:07,839 --> 00:35:12,160
know i'm old

00:35:10,160 --> 00:35:14,240
i just do i think this is the coolest

00:35:12,160 --> 00:35:15,839
thing ever um and you see it's kind of

00:35:14,240 --> 00:35:18,000
ticking away there

00:35:15,839 --> 00:35:19,359
updating about every second and it's

00:35:18,000 --> 00:35:22,000
gotten down to this part so

00:35:19,359 --> 00:35:23,119
it checked out the ssis samples it's

00:35:22,000 --> 00:35:26,000
building

00:35:23,119 --> 00:35:27,839
and it's deploying now now once it gets

00:35:26,000 --> 00:35:28,640
done deploying it'll take about a minute

00:35:27,839 --> 00:35:30,720
or so

00:35:28,640 --> 00:35:32,320
it'll get it'll finish deploying out to

00:35:30,720 --> 00:35:35,920
my test instance

00:35:32,320 --> 00:35:38,960
and we're going to look at that and um

00:35:35,920 --> 00:35:40,400
and go see uh how this works and up here

00:35:38,960 --> 00:35:41,760
in the help by the way they mentioned

00:35:40,400 --> 00:35:44,720
another task

00:35:41,760 --> 00:35:46,560
ssis catalog configuration task i

00:35:44,720 --> 00:35:49,040
haven't played with that yet but

00:35:46,560 --> 00:35:51,040
i've got this folder on this laptop here

00:35:49,040 --> 00:35:54,000
that has about a hundred

00:35:51,040 --> 00:35:56,000
little note files in it and the photo's

00:35:54,000 --> 00:35:59,040
named primordial blogs

00:35:56,000 --> 00:36:00,800
i'm behind i just i need to to get uh

00:35:59,040 --> 00:36:01,920
get in there and and get all of that

00:36:00,800 --> 00:36:04,640
together

00:36:01,920 --> 00:36:06,000
but it's actually doing the deployment

00:36:04,640 --> 00:36:07,680
now to our server

00:36:06,000 --> 00:36:09,440
and once it's finished hopefully it'll

00:36:07,680 --> 00:36:10,800
come out and say okay

00:36:09,440 --> 00:36:12,560
and i don't know if you can hear my

00:36:10,800 --> 00:36:13,760
system sounds or not but i'll get an

00:36:12,560 --> 00:36:16,880
email

00:36:13,760 --> 00:36:18,800
probably about 30 seconds after that and

00:36:16,880 --> 00:36:19,359
that email will tell me the build and

00:36:18,800 --> 00:36:22,320
deploy

00:36:19,359 --> 00:36:23,760
zero build and deploy succeeded so it's

00:36:22,320 --> 00:36:26,160
like right now it doesn't look like it's

00:36:23,760 --> 00:36:28,000
doing anything but i promise you

00:36:26,160 --> 00:36:30,320
behind the scenes there's magic

00:36:28,000 --> 00:36:32,720
happening up there in the cloud and the

00:36:30,320 --> 00:36:35,200
agent is driving it the local agent i

00:36:32,720 --> 00:36:35,200
love that

00:36:36,400 --> 00:36:39,680
so i said about a minute um it's making

00:36:39,359 --> 00:36:41,440
me

00:36:39,680 --> 00:36:43,599
proving me wrong here but it's still

00:36:41,440 --> 00:36:44,640
running the deployment i promise you it

00:36:43,599 --> 00:36:48,240
is

00:36:44,640 --> 00:36:51,599
um let's see come on

00:36:48,240 --> 00:36:54,079
come on now if i

00:36:51,599 --> 00:36:55,839
there was a years ago i saw i'm wiggling

00:36:54,079 --> 00:36:59,359
the mouse it's kind of a joke

00:36:55,839 --> 00:37:01,359
years ago i saw um a solution that

00:36:59,359 --> 00:37:04,079
somebody had posted in a forum about

00:37:01,359 --> 00:37:05,440
reporting services microsoft sql server

00:37:04,079 --> 00:37:07,359
reporting services

00:37:05,440 --> 00:37:08,560
they said that they said if you wiggle

00:37:07,359 --> 00:37:12,560
the mouse

00:37:08,560 --> 00:37:14,640
over something it would it would

00:37:12,560 --> 00:37:15,920
okay i don't i don't think that was

00:37:14,640 --> 00:37:18,000
accurate but

00:37:15,920 --> 00:37:19,520
i do that kind of as an inside joke i'll

00:37:18,000 --> 00:37:21,040
look at the mouse over

00:37:19,520 --> 00:37:22,560
so eventually here it's going to finish

00:37:21,040 --> 00:37:25,760
the deployment

00:37:22,560 --> 00:37:27,359
and it's going to be pretty happy i'd

00:37:25,760 --> 00:37:28,240
love to show you that so i'm kind of

00:37:27,359 --> 00:37:31,680
stalling here

00:37:28,240 --> 00:37:32,720
talking to fill in the space i hope you

00:37:31,680 --> 00:37:36,079
don't mind

00:37:32,720 --> 00:37:37,920
um but i um

00:37:36,079 --> 00:37:40,320
again i like these screens you can also

00:37:37,920 --> 00:37:43,680
we can go back and see what we missed

00:37:40,320 --> 00:37:45,280
while we're waiting um all of this built

00:37:43,680 --> 00:37:47,040
version stuff and i know i'm not zoomed

00:37:45,280 --> 00:37:48,839
in i'll zoom in so you can see but it's

00:37:47,040 --> 00:37:52,400
really exciting stuff

00:37:48,839 --> 00:37:55,599
right not so much but a lot of stuff

00:37:52,400 --> 00:37:57,440
we've been using for for years uh

00:37:55,599 --> 00:37:58,800
kind of behind the scenes to to get

00:37:57,440 --> 00:38:00,640
stuff going so there was the finished

00:37:58,800 --> 00:38:01,920
building ssis and there's actually a

00:38:00,640 --> 00:38:03,359
permalink to this

00:38:01,920 --> 00:38:05,280
i don't know if that's new or not or

00:38:03,359 --> 00:38:07,839
maybe i just never noticed

00:38:05,280 --> 00:38:09,040
um up here to the checkout part which is

00:38:07,839 --> 00:38:11,119
really short

00:38:09,040 --> 00:38:12,720
checking out the samples and a permalink

00:38:11,119 --> 00:38:14,000
to that

00:38:12,720 --> 00:38:16,880
i'm actually going to i'm going to click

00:38:14,000 --> 00:38:18,800
that i want to right-click um

00:38:16,880 --> 00:38:21,680
let's see if we can go there it doesn't

00:38:18,800 --> 00:38:23,280
look like we can what happens if we

00:38:21,680 --> 00:38:25,200
if we just click the link what happened

00:38:23,280 --> 00:38:28,480
oh it copies it to the clip

00:38:25,200 --> 00:38:30,079
okay we'll explore a little bit here

00:38:28,480 --> 00:38:31,440
while i'm killing time waiting for that

00:38:30,079 --> 00:38:33,280
thing to finish

00:38:31,440 --> 00:38:35,599
that's kind of cool okay so it took me

00:38:33,280 --> 00:38:37,119
right back to that run log so we're in

00:38:35,599 --> 00:38:38,800
the same spot

00:38:37,119 --> 00:38:40,720
uh probably running two of them is

00:38:38,800 --> 00:38:43,520
really really helpful

00:38:40,720 --> 00:38:46,320
not so much all right finish oh that was

00:38:43,520 --> 00:38:48,880
the other side come on down here

00:38:46,320 --> 00:38:50,560
i'm looking at my mouse come on all

00:38:48,880 --> 00:38:51,599
right i don't understand why that's uh

00:38:50,560 --> 00:38:53,280
taking so long

00:38:51,599 --> 00:38:54,960
it may be that it's getting ready to

00:38:53,280 --> 00:38:57,760
fail that could happen

00:38:54,960 --> 00:39:00,880
it could be um it looked like it for at

00:38:57,760 --> 00:39:06,000
least a while there i had a network blip

00:39:00,880 --> 00:39:06,000
we saw before um agent connect error

00:39:06,240 --> 00:39:10,640
i don't know not sure what's going on

00:39:08,160 --> 00:39:12,240
here but we'll let this uh cook

00:39:10,640 --> 00:39:14,960
and we're gonna go back over here and

00:39:12,240 --> 00:39:19,280
talk about uh some

00:39:14,960 --> 00:39:22,079
yet a bonus piece yes there's a bonus

00:39:19,280 --> 00:39:22,720
but wait there's more or there's one

00:39:22,079 --> 00:39:25,040
more thing

00:39:22,720 --> 00:39:26,000
i love colombo and i think steve jobs

00:39:25,040 --> 00:39:29,119
did that too

00:39:26,000 --> 00:39:30,480
i'm dating myself arnold okay so we're

00:39:29,119 --> 00:39:32,960
going to look at

00:39:30,480 --> 00:39:35,760
doing what the cool kids get to do the

00:39:32,960 --> 00:39:38,079
people who develop javascript and node

00:39:35,760 --> 00:39:40,079
you work with json a lot my friend kevin

00:39:38,079 --> 00:39:42,720
hazard calls json hipster

00:39:40,079 --> 00:39:44,480
xml i gotta agree with kevin i think

00:39:42,720 --> 00:39:45,440
he's got a point but if he wears a

00:39:44,480 --> 00:39:48,800
loose-fitting hat

00:39:45,440 --> 00:39:50,800
no one notices kidding kidding kevin's

00:39:48,800 --> 00:39:52,160
my brother from another mother

00:39:50,800 --> 00:39:54,000
i want to be able to do the same thing

00:39:52,160 --> 00:39:57,040
i've wanted this forever since back in

00:39:54,000 --> 00:39:59,200
2007 when i was trying to check in code

00:39:57,040 --> 00:39:59,920
and do that and i found ways to do it it

00:39:59,200 --> 00:40:03,599
was not

00:39:59,920 --> 00:40:05,839
pretty but it worked now we've got

00:40:03,599 --> 00:40:07,040
some options here we can actually do

00:40:05,839 --> 00:40:10,720
this

00:40:07,040 --> 00:40:12,640
inside of inside of azure devops so when

00:40:10,720 --> 00:40:16,079
we check in the code

00:40:12,640 --> 00:40:16,800
we can um we can run test executions

00:40:16,079 --> 00:40:18,319
here

00:40:16,800 --> 00:40:20,560
i've got a little framework here that

00:40:18,319 --> 00:40:22,240
executes ssis

00:40:20,560 --> 00:40:23,599
for me so i'm going to talk about that

00:40:22,240 --> 00:40:24,240
for just a minute while we're talking

00:40:23,599 --> 00:40:27,200
about it

00:40:24,240 --> 00:40:28,000
and then i'm going to use powershell to

00:40:27,200 --> 00:40:31,040
um

00:40:28,000 --> 00:40:35,040
to test the results of that execution

00:40:31,040 --> 00:40:36,880
so as we're walking through here

00:40:35,040 --> 00:40:38,240
just a little bit about the framework

00:40:36,880 --> 00:40:40,000
community edition

00:40:38,240 --> 00:40:42,480
this if you want to know more about this

00:40:40,000 --> 00:40:44,400
ask me but it's free and it's open

00:40:42,480 --> 00:40:44,960
source so that i'll share that much with

00:40:44,400 --> 00:40:47,599
you

00:40:44,960 --> 00:40:49,760
um right now but if you right click an

00:40:47,599 --> 00:40:50,720
ssis package in a catalog and click

00:40:49,760 --> 00:40:52,560
execute

00:40:50,720 --> 00:40:56,000
it'll open up this window execute

00:40:52,560 --> 00:40:58,240
package and then you can just script it

00:40:56,000 --> 00:41:00,000
and when you script it you end up with a

00:40:58,240 --> 00:41:01,119
script that looks like this now this is

00:41:00,000 --> 00:41:03,119
as old

00:41:01,119 --> 00:41:04,960
as software is this is really a

00:41:03,119 --> 00:41:07,520
three-step process

00:41:04,960 --> 00:41:09,040
it creates an intent to execute the

00:41:07,520 --> 00:41:11,200
execution id

00:41:09,040 --> 00:41:12,720
is output from that stored procedure

00:41:11,200 --> 00:41:16,720
this is um

00:41:12,720 --> 00:41:18,960
an ssis db stored procedure here

00:41:16,720 --> 00:41:20,000
then it configures the intent there's

00:41:18,960 --> 00:41:23,200
the execution id

00:41:20,000 --> 00:41:25,520
being passed into uh one configuration

00:41:23,200 --> 00:41:27,920
call usually there's more than one here

00:41:25,520 --> 00:41:29,280
but there's at least you usually there's

00:41:27,920 --> 00:41:31,839
at least one

00:41:29,280 --> 00:41:33,200
um and then you start the execution so

00:41:31,839 --> 00:41:35,280
create the intent

00:41:33,200 --> 00:41:36,480
configure the intent and then execute

00:41:35,280 --> 00:41:39,040
the intent that's

00:41:36,480 --> 00:41:40,800
that's been around forever and i won't

00:41:39,040 --> 00:41:42,800
go into all of the reasons why i got

00:41:40,800 --> 00:41:43,680
really excited when i saw this but the

00:41:42,800 --> 00:41:47,280
short version

00:41:43,680 --> 00:41:50,240
is i wanted to be able to find a way

00:41:47,280 --> 00:41:50,960
to be running an ssis package in the

00:41:50,240 --> 00:41:54,079
catalog

00:41:50,960 --> 00:41:55,599
in you know in this location and i

00:41:54,079 --> 00:41:57,839
wanted to be able to run

00:41:55,599 --> 00:41:58,800
say another package from another

00:41:57,839 --> 00:42:02,720
location

00:41:58,800 --> 00:42:04,160
and that's not native okay it turns out

00:42:02,720 --> 00:42:06,640
that's a little tricky

00:42:04,160 --> 00:42:08,720
but when i saw this when i scripted this

00:42:06,640 --> 00:42:11,440
my locations are governed by two

00:42:08,720 --> 00:42:13,119
um you know two hierarchical structures

00:42:11,440 --> 00:42:13,760
here the folder name and the project

00:42:13,119 --> 00:42:17,760
name

00:42:13,760 --> 00:42:21,200
i can execute any package in the same

00:42:17,760 --> 00:42:22,000
ssis project that's deployed to the same

00:42:21,200 --> 00:42:23,520
folder

00:42:22,000 --> 00:42:25,680
i can do that all day long using a

00:42:23,520 --> 00:42:26,240
built-in task called the execute package

00:42:25,680 --> 00:42:28,000
test

00:42:26,240 --> 00:42:30,079
but what if i wanted to run one in

00:42:28,000 --> 00:42:32,640
another folder in another project

00:42:30,079 --> 00:42:34,480
then it got tricky so when i saw this i

00:42:32,640 --> 00:42:35,760
was like hey i can put a wrapper proc

00:42:34,480 --> 00:42:37,520
around that

00:42:35,760 --> 00:42:39,200
and that's exactly what i did and i'll

00:42:37,520 --> 00:42:42,319
just pass in these

00:42:39,200 --> 00:42:44,480
as parameters and

00:42:42,319 --> 00:42:45,440
that's exactly uh you know how i set it

00:42:44,480 --> 00:42:46,880
all up

00:42:45,440 --> 00:42:48,000
so it would do that and that's what

00:42:46,880 --> 00:42:49,280
we're going to do we're actually going

00:42:48,000 --> 00:42:51,839
to run this

00:42:49,280 --> 00:42:53,200
um using that that framework that holds

00:42:51,839 --> 00:42:55,280
that metadata

00:42:53,200 --> 00:42:57,520
and i do it with powershell i add a

00:42:55,280 --> 00:42:59,920
couple powershell tasks one

00:42:57,520 --> 00:43:02,000
to run the package using the ssis

00:42:59,920 --> 00:43:03,440
framework then another to test it

00:43:02,000 --> 00:43:05,200
and this is what it looks like in

00:43:03,440 --> 00:43:06,400
powershell here this is a piece of the

00:43:05,200 --> 00:43:09,760
powershell

00:43:06,400 --> 00:43:11,520
um and it there's even a sleep in here

00:43:09,760 --> 00:43:12,240
for 15 seconds to give it a little bit

00:43:11,520 --> 00:43:15,359
of time to

00:43:12,240 --> 00:43:19,680
slow down i see a question here

00:43:15,359 --> 00:43:20,960
from mark antoine a bear did i say that

00:43:19,680 --> 00:43:24,000
right i hope so

00:43:20,960 --> 00:43:27,440
um i'm working as a contractor and i

00:43:24,000 --> 00:43:30,400
created a pipeline for an iss web app

00:43:27,440 --> 00:43:32,160
and the source code is from github the

00:43:30,400 --> 00:43:34,560
problem is i did not find a way to

00:43:32,160 --> 00:43:37,440
connect to it without a credential

00:43:34,560 --> 00:43:39,280
is there a solution like using an ssh

00:43:37,440 --> 00:43:40,240
and if so how that's a fantastic

00:43:39,280 --> 00:43:42,079
question mark

00:43:40,240 --> 00:43:43,680
unfortunately i don't know i don't know

00:43:42,079 --> 00:43:45,760
the answer to that

00:43:43,680 --> 00:43:47,760
but i'll bet you somebody does and it

00:43:45,760 --> 00:43:50,800
may even be in this talk

00:43:47,760 --> 00:43:52,720
somebody may he be here that um

00:43:50,800 --> 00:43:55,200
that may be able to help us with that

00:43:52,720 --> 00:43:58,400
answer use it sounds like the problem

00:43:55,200 --> 00:44:01,359
you're trying to solve is connecting to

00:43:58,400 --> 00:44:04,000
github either without a credential or

00:44:01,359 --> 00:44:08,160
maybe how to store the credential

00:44:04,000 --> 00:44:09,920
in a secure way i am not sure though

00:44:08,160 --> 00:44:12,800
and i'm sorry that i'm i don't know the

00:44:09,920 --> 00:44:15,280
answer to that um what i can do is i can

00:44:12,800 --> 00:44:17,599
dig around i'll have my email address at

00:44:15,280 --> 00:44:18,240
the very end and mark if you will email

00:44:17,599 --> 00:44:20,800
me

00:44:18,240 --> 00:44:21,599
um i know people who are experts at this

00:44:20,800 --> 00:44:23,440
stuff

00:44:21,599 --> 00:44:26,400
and i'll get in a conversation with them

00:44:23,440 --> 00:44:29,200
and i'm a microsoft mvp as well

00:44:26,400 --> 00:44:30,160
um and if i i know i can find someone

00:44:29,200 --> 00:44:32,000
who can

00:44:30,160 --> 00:44:33,680
answer your question the right way to do

00:44:32,000 --> 00:44:35,200
this the best way to do it maybe there's

00:44:33,680 --> 00:44:37,280
a couple ways

00:44:35,200 --> 00:44:38,800
and there's some you know disadvantages

00:44:37,280 --> 00:44:40,720
and advantages but if you'll do that

00:44:38,800 --> 00:44:43,200
i'll i'll have my email up

00:44:40,720 --> 00:44:44,160
and remind me of the question i will i

00:44:43,200 --> 00:44:47,280
will find you an

00:44:44,160 --> 00:44:50,240
answer promise um

00:44:47,280 --> 00:44:51,520
the the next steps that we want to do

00:44:50,240 --> 00:44:53,359
here for triggering

00:44:51,520 --> 00:44:54,960
is i'm going to enable ci there's

00:44:53,359 --> 00:44:56,160
actually a check box that's labeled

00:44:54,960 --> 00:44:58,240
enable ci

00:44:56,160 --> 00:44:59,599
on a copy of that deploy to test i've

00:44:58,240 --> 00:45:02,480
added those two

00:44:59,599 --> 00:45:05,280
power shells to that pipeline and i've

00:45:02,480 --> 00:45:07,359
changed the name of it from zero to one

00:45:05,280 --> 00:45:09,200
um then i'm going to configure a deploy

00:45:07,359 --> 00:45:11,599
to production pipeline

00:45:09,200 --> 00:45:13,599
and then i'm going to enable um

00:45:11,599 --> 00:45:14,880
deploying to the production

00:45:13,599 --> 00:45:17,119
trigger there's going to be a trigger

00:45:14,880 --> 00:45:19,599
there so it's going to actually

00:45:17,119 --> 00:45:21,839
execute it on this step along the way

00:45:19,599 --> 00:45:24,319
here if anything fails

00:45:21,839 --> 00:45:25,839
then it's it's going to stop in the

00:45:24,319 --> 00:45:27,119
middle of that process that's the way

00:45:25,839 --> 00:45:29,359
this is defined

00:45:27,119 --> 00:45:31,440
so if we walk through kind of how to do

00:45:29,359 --> 00:45:34,560
this

00:45:31,440 --> 00:45:36,960
i i if i just click on the triggers here

00:45:34,560 --> 00:45:38,560
and i click enable uh continuous

00:45:36,960 --> 00:45:40,400
integration that's it

00:45:38,560 --> 00:45:42,560
if i do that on that first pipeline

00:45:40,400 --> 00:45:45,200
whenever i check in the code

00:45:42,560 --> 00:45:48,000
it's going to fire this pipeline and

00:45:45,200 --> 00:45:51,200
then i can chain the pipelines together

00:45:48,000 --> 00:45:54,800
um by um going to

00:45:51,200 --> 00:45:58,560
say my you know my next uh two

00:45:54,800 --> 00:46:00,000
and i can click on the um i can click on

00:45:58,560 --> 00:46:02,000
triggers there and there's a build

00:46:00,000 --> 00:46:04,319
completion down here

00:46:02,000 --> 00:46:05,119
so on this last step the deploy to

00:46:04,319 --> 00:46:08,000
production

00:46:05,119 --> 00:46:09,200
i'm actually saying if the if the

00:46:08,000 --> 00:46:11,440
pipeline name

00:46:09,200 --> 00:46:12,400
deployed a test succeeds then go ahead

00:46:11,440 --> 00:46:13,680
and trigger this one

00:46:12,400 --> 00:46:16,240
and i'm going to do that twice i'm

00:46:13,680 --> 00:46:19,839
chaining these three together

00:46:16,240 --> 00:46:21,839
um so when i do my check in it

00:46:19,839 --> 00:46:23,040
it's just automatic it's just like the

00:46:21,839 --> 00:46:26,000
cool kids

00:46:23,040 --> 00:46:27,440
doing javascript and and doing node and

00:46:26,000 --> 00:46:28,480
all of that kind of development now i

00:46:27,440 --> 00:46:31,680
get to play

00:46:28,480 --> 00:46:34,480
with uh with ssis and absolutely ne i

00:46:31,680 --> 00:46:36,400
love that i needed that functionality as

00:46:34,480 --> 00:46:37,359
i shared with you i built some ugly ways

00:46:36,400 --> 00:46:40,720
to do it

00:46:37,359 --> 00:46:41,359
and yep this failed and it failed to

00:46:40,720 --> 00:46:45,680
deploy

00:46:41,359 --> 00:46:47,599
because not sure error deployed

00:46:45,680 --> 00:46:49,760
um there may be some more here oh here

00:46:47,599 --> 00:46:52,960
we go the timeout expired well that

00:46:49,760 --> 00:46:54,720
it took your time expiring so it could

00:46:52,960 --> 00:46:57,280
be that that's a real error

00:46:54,720 --> 00:46:59,200
i ran through the demos because i always

00:46:57,280 --> 00:47:01,359
run through my demos if i'm doing live

00:46:59,200 --> 00:47:04,720
demos especially in azure

00:47:01,359 --> 00:47:08,720
why say it with me azure changes

00:47:04,720 --> 00:47:10,720
daily i do that and i still sometimes

00:47:08,720 --> 00:47:12,720
run into stuff like this today about

00:47:10,720 --> 00:47:14,400
half the time i did this i ran through

00:47:12,720 --> 00:47:17,200
it twice

00:47:14,400 --> 00:47:17,599
about half the time it failed so let's

00:47:17,200 --> 00:47:19,520
go

00:47:17,599 --> 00:47:21,440
enable our stuff here and see if it

00:47:19,520 --> 00:47:24,800
succeeds in i promise you

00:47:21,440 --> 00:47:26,480
that is um this this one copy is

00:47:24,800 --> 00:47:28,319
sorry this one is a copy of that

00:47:26,480 --> 00:47:30,400
building test there's the build

00:47:28,319 --> 00:47:32,160
there's the deploy and then it's going

00:47:30,400 --> 00:47:33,920
to run that package

00:47:32,160 --> 00:47:35,680
and then it's going to execute a test

00:47:33,920 --> 00:47:37,359
and here's the test i mean it's not

00:47:35,680 --> 00:47:39,440
it's all powershell let me zoom in here

00:47:37,359 --> 00:47:41,760
and show you it's all powershell

00:47:39,440 --> 00:47:42,880
what i'm doing is i've got a table out

00:47:41,760 --> 00:47:44,960
there

00:47:42,880 --> 00:47:46,000
and inside of my test package i'll show

00:47:44,960 --> 00:47:48,880
you in just a minute

00:47:46,000 --> 00:47:50,800
we're going to truncate that table and

00:47:48,880 --> 00:47:52,319
then we're going to add one record to it

00:47:50,800 --> 00:47:55,359
it's like an id plus

00:47:52,319 --> 00:47:59,520
the date time um so if i

00:47:55,359 --> 00:48:01,040
if i um if i disable that truncate task

00:47:59,520 --> 00:48:02,319
then it's when it goes out there it's

00:48:01,040 --> 00:48:03,760
not going to truncate it it's going to

00:48:02,319 --> 00:48:05,680
add a second record

00:48:03,760 --> 00:48:07,440
and see this line right here it's

00:48:05,680 --> 00:48:09,520
actually doing a record count

00:48:07,440 --> 00:48:11,119
and that says if that record does not

00:48:09,520 --> 00:48:14,240
equal one

00:48:11,119 --> 00:48:14,640
so if it's zero or two or any other

00:48:14,240 --> 00:48:17,680
number

00:48:14,640 --> 00:48:18,559
other than one this fails it writes out

00:48:17,680 --> 00:48:20,800
my error

00:48:18,559 --> 00:48:22,079
and you know that's how it works it's

00:48:20,800 --> 00:48:26,000
super simple

00:48:22,079 --> 00:48:28,400
but again and totally contrived here

00:48:26,000 --> 00:48:30,480
um about executing a test suite in

00:48:28,400 --> 00:48:32,640
powershell i i consider this just one

00:48:30,480 --> 00:48:34,400
step above manual testing

00:48:32,640 --> 00:48:36,720
but i don't mind manual testing i've

00:48:34,400 --> 00:48:38,640
been working in ssis for 15 years my

00:48:36,720 --> 00:48:41,040
goodness that's all we had

00:48:38,640 --> 00:48:43,119
back in the day but if we go to triggers

00:48:41,040 --> 00:48:45,839
here i just click the triggers

00:48:43,119 --> 00:48:47,119
and for ssis samples all i have to do is

00:48:45,839 --> 00:48:49,200
enable

00:48:47,119 --> 00:48:51,520
um click that enable continuous

00:48:49,200 --> 00:48:53,520
integration here

00:48:51,520 --> 00:48:56,079
and if i then save it i'm not going to

00:48:53,520 --> 00:49:00,160
cue it i'm just going to you know

00:48:56,079 --> 00:49:03,599
type a message here enable ci

00:49:00,160 --> 00:49:06,800
and save that so

00:49:03,599 --> 00:49:08,880
let's see i think i'm good

00:49:06,800 --> 00:49:11,119
yeah my saving saving queue went out i

00:49:08,880 --> 00:49:14,400
was waiting for that to go disabled

00:49:11,119 --> 00:49:16,880
um let's go back to the pipelines and i

00:49:14,400 --> 00:49:18,559
want to make sure that my number two

00:49:16,880 --> 00:49:22,000
pipeline is set up

00:49:18,559 --> 00:49:25,520
to run on this uh being uh

00:49:22,000 --> 00:49:26,800
being finished here as well and i don't

00:49:25,520 --> 00:49:29,119
believe you're loading i think you're

00:49:26,800 --> 00:49:32,079
just showing me a little spinny

00:49:29,119 --> 00:49:33,200
animated gifs there and not really

00:49:32,079 --> 00:49:35,359
loading i don't think you're doing

00:49:33,200 --> 00:49:38,240
anything

00:49:35,359 --> 00:49:40,400
i think that you there we go i think the

00:49:38,240 --> 00:49:44,160
junior engineers are having a lot of fun

00:49:40,400 --> 00:49:45,440
playing some fortnite thingy or raid i'm

00:49:44,160 --> 00:49:47,359
not i'm not cool

00:49:45,440 --> 00:49:49,839
anymore so i'm not going to enable

00:49:47,359 --> 00:49:50,880
continuous integration here on on number

00:49:49,839 --> 00:49:53,760
two

00:49:50,880 --> 00:49:55,200
instead i'm going to click add and it's

00:49:53,760 --> 00:49:56,319
going to give me the ability to pick a

00:49:55,200 --> 00:49:58,000
triggering build i'm going to pick

00:49:56,319 --> 00:50:01,520
number one

00:49:58,000 --> 00:50:03,280
and then save that and i hope the kids

00:50:01,520 --> 00:50:07,359
are actually having a big time i

00:50:03,280 --> 00:50:08,559
i do i i love them all to pieces they're

00:50:07,359 --> 00:50:10,480
cool kids

00:50:08,559 --> 00:50:12,400
i can't believe i had anything to do

00:50:10,480 --> 00:50:14,640
with them they're that cool

00:50:12,400 --> 00:50:16,160
um let's another place we can edit is

00:50:14,640 --> 00:50:18,079
just from here i'm going to just double

00:50:16,160 --> 00:50:20,480
check the trigger on three

00:50:18,079 --> 00:50:23,040
and there it is deployed to production

00:50:20,480 --> 00:50:25,680
so that's the second one number two

00:50:23,040 --> 00:50:27,760
all right we are ready let's go back and

00:50:25,680 --> 00:50:29,760
look at pipelines again

00:50:27,760 --> 00:50:33,040
let's get our agent kind of set up here

00:50:29,760 --> 00:50:35,040
so we can see that get it in a good spot

00:50:33,040 --> 00:50:36,640
i'm not going to need management studio

00:50:35,040 --> 00:50:37,359
really i mean i could use it but i don't

00:50:36,640 --> 00:50:40,559
need it

00:50:37,359 --> 00:50:41,200
and i'm open up my ssis uh packager i've

00:50:40,559 --> 00:50:43,040
got team

00:50:41,200 --> 00:50:46,160
explorer kind of floating around out

00:50:43,040 --> 00:50:46,480
here and so i'm doing that so you can

00:50:46,160 --> 00:50:48,559
see

00:50:46,480 --> 00:50:50,160
when i right click and disable this

00:50:48,559 --> 00:50:52,720
truncate to target

00:50:50,160 --> 00:50:53,280
i can then put in a message did you know

00:50:52,720 --> 00:50:56,319
it was

00:50:53,280 --> 00:50:58,480
20 20 10 20 did you know that

00:50:56,319 --> 00:51:00,559
how weird is that like 10 days ago it

00:50:58,480 --> 00:51:01,920
was 20 20 10 10. i posted that on

00:51:00,559 --> 00:51:04,640
twitter somebody replied

00:51:01,920 --> 00:51:05,839
why didn't you share this at 505 a.m and

00:51:04,640 --> 00:51:09,119
i was like

00:51:05,839 --> 00:51:12,640
you got me i was up i'm an early riser

00:51:09,119 --> 00:51:13,520
um and this i'm going to assert failure

00:51:12,640 --> 00:51:16,240
here

00:51:13,520 --> 00:51:17,760
um on the on this one why because there

00:51:16,240 --> 00:51:19,200
should be two records in there because

00:51:17,760 --> 00:51:21,760
i'm not truncating

00:51:19,200 --> 00:51:23,280
and so when i check this in i should

00:51:21,760 --> 00:51:24,880
have saved it first it's going to do the

00:51:23,280 --> 00:51:27,920
check in and give me a message

00:51:24,880 --> 00:51:29,440
um success or failure

00:51:27,920 --> 00:51:31,440
and that's taking a little longer than

00:51:29,440 --> 00:51:34,960
it should

00:51:31,440 --> 00:51:36,800
okay that worked so let's pop over here

00:51:34,960 --> 00:51:39,359
and look and see

00:51:36,800 --> 00:51:40,160
um are we running that job and you know

00:51:39,359 --> 00:51:42,160
that's weird

00:51:40,160 --> 00:51:43,920
oh there we go building deploying tests

00:51:42,160 --> 00:51:45,520
number one their training

00:51:43,920 --> 00:51:50,000
i thought it was running zero still but

00:51:45,520 --> 00:51:52,800
it's running one we can pop over to uh

00:51:50,000 --> 00:51:54,480
the pipelines here we can watch it

00:51:52,800 --> 00:51:56,720
we go to build and deploy and test it we

00:51:54,480 --> 00:51:59,680
shouldn't see one running

00:51:56,720 --> 00:52:01,200
yep there it is and run and if there's

00:51:59,680 --> 00:52:04,079
the assert failure and then we can go

00:52:01,200 --> 00:52:07,280
look at the actual job the screen itself

00:52:04,079 --> 00:52:09,280
maybe let's see if i click harder here

00:52:07,280 --> 00:52:11,040
does that help

00:52:09,280 --> 00:52:13,119
it looks like now i've got the little

00:52:11,040 --> 00:52:18,559
line going across here

00:52:13,119 --> 00:52:22,720
i do not believe you come on

00:52:18,559 --> 00:52:25,440
gosh i have a master sergeant 13 year

00:52:22,720 --> 00:52:27,200
old downstairs and he says that a lot

00:52:25,440 --> 00:52:28,640
he says it was such passion though it's

00:52:27,200 --> 00:52:33,200
like

00:52:28,640 --> 00:52:33,200
an adult cursing at you gosh

00:52:33,599 --> 00:52:42,480
that's that'll mess you up and

00:52:37,440 --> 00:52:42,480
did we fail already what happened we did

00:52:43,200 --> 00:52:49,680
so not sure why that failed

00:52:46,319 --> 00:52:50,480
let's try it again um you can changing

00:52:49,680 --> 00:52:53,520
ssis

00:52:50,480 --> 00:52:57,680
is not hard as you can see here

00:52:53,520 --> 00:53:02,319
i just moved one one little task over

00:52:57,680 --> 00:53:05,280
and let's see yeah we'll save again

00:53:02,319 --> 00:53:07,280
that checked in faster that's that makes

00:53:05,280 --> 00:53:09,680
me a little warmer

00:53:07,280 --> 00:53:11,680
let's try this again i just got an email

00:53:09,680 --> 00:53:15,280
i don't know if you heard it or not

00:53:11,680 --> 00:53:18,480
that said hey it failed

00:53:15,280 --> 00:53:20,079
um thanks for that all right this is

00:53:18,480 --> 00:53:20,480
where it failed last time it looks like

00:53:20,079 --> 00:53:23,280
it

00:53:20,480 --> 00:53:25,119
it picked up and it's running now so

00:53:23,280 --> 00:53:26,559
we'll see how it does last and you

00:53:25,119 --> 00:53:28,880
remember the time before

00:53:26,559 --> 00:53:30,400
it was the execute test suite is where

00:53:28,880 --> 00:53:31,119
it fails hopefully we'll get through

00:53:30,400 --> 00:53:36,319
this

00:53:31,119 --> 00:53:36,319
um no no we did not deploy

00:53:37,040 --> 00:53:42,640
there is no available node okay this is

00:53:40,079 --> 00:53:47,200
a completely different problem

00:53:42,640 --> 00:53:50,640
so the reason it's failing to deploy

00:53:47,200 --> 00:53:53,680
is my catalog

00:53:50,640 --> 00:53:55,920
stopped and the reason my catalog

00:53:53,680 --> 00:53:57,920
stopped this is an integration runtime

00:53:55,920 --> 00:54:01,520
in the cloud

00:53:57,920 --> 00:54:04,640
it's not anybody's fault but andes

00:54:01,520 --> 00:54:06,480
and let me tell you why um whenever

00:54:04,640 --> 00:54:06,880
you're running a catalog a little lesson

00:54:06,480 --> 00:54:09,599
here

00:54:06,880 --> 00:54:11,200
on azure data factory we'll go up here

00:54:09,599 --> 00:54:12,720
to monitor we'll look at integration

00:54:11,200 --> 00:54:14,000
runtimes and we'll see this still

00:54:12,720 --> 00:54:16,240
starting

00:54:14,000 --> 00:54:17,920
but if we click on this i love this

00:54:16,240 --> 00:54:20,720
dashboard

00:54:17,920 --> 00:54:23,280
um in a minute hopefully we'll see a

00:54:20,720 --> 00:54:25,040
node starting down here this only has

00:54:23,280 --> 00:54:28,240
it's going to run two cores there's my

00:54:25,040 --> 00:54:31,839
running requested node zero of two

00:54:28,240 --> 00:54:32,400
we should see one started and there it

00:54:31,839 --> 00:54:35,680
is

00:54:32,400 --> 00:54:37,520
this is a vm and i don't know how much

00:54:35,680 --> 00:54:39,440
cloud stuff you've done but when you're

00:54:37,520 --> 00:54:42,640
running a vm

00:54:39,440 --> 00:54:44,319
you're paying money straight up it's

00:54:42,640 --> 00:54:44,880
costing you at least over in azure i

00:54:44,319 --> 00:54:47,599
don't

00:54:44,880 --> 00:54:49,839
we do work in in aws i don't do i

00:54:47,599 --> 00:54:51,440
haven't done anything in google

00:54:49,839 --> 00:54:54,480
cloud or any of the other clouds that

00:54:51,440 --> 00:54:56,000
are out there but we've done aws

00:54:54,480 --> 00:54:57,920
quite a bit of work in there and we and

00:54:56,000 --> 00:55:01,280
we use azure most

00:54:57,920 --> 00:55:03,839
um this is charging you money so

00:55:01,280 --> 00:55:07,520
in order to prevent andy from

00:55:03,839 --> 00:55:09,000
hemorrhaging cash i create some jobs in

00:55:07,520 --> 00:55:10,720
here and i've blogged about this at

00:55:09,000 --> 00:55:13,760
andylearner.blog

00:55:10,720 --> 00:55:17,680
and you can see

00:55:13,760 --> 00:55:19,680
right here it is now 4 26 pm my time

00:55:17,680 --> 00:55:23,119
i had this running for the longest time

00:55:19,680 --> 00:55:25,280
but this job runs every four hours

00:55:23,119 --> 00:55:28,960
it's the name of the trigger every four

00:55:25,280 --> 00:55:32,319
hours and it succeeded it checks to see

00:55:28,960 --> 00:55:34,000
is the azure ssis catalog integration

00:55:32,319 --> 00:55:37,200
runtime running and if it is

00:55:34,000 --> 00:55:39,760
it shuts it down this is because

00:55:37,200 --> 00:55:41,680
i'm old and i do demos and i forget to

00:55:39,760 --> 00:55:42,319
turn them off sometimes this saves me

00:55:41,680 --> 00:55:44,319
money

00:55:42,319 --> 00:55:46,799
it also embarrasses me a little bit when

00:55:44,319 --> 00:55:48,000
i do this and while we're here talking

00:55:46,799 --> 00:55:51,119
about it let's just take

00:55:48,000 --> 00:55:54,799
a look at how it does that

00:55:51,119 --> 00:55:58,079
so ir ops um here's the

00:55:54,799 --> 00:55:59,839
stop azure ssisr because it

00:55:58,079 --> 00:56:01,359
if it starts really fast it's going to

00:55:59,839 --> 00:56:05,040
take about five minutes

00:56:01,359 --> 00:56:06,880
um this is me going and getting

00:56:05,040 --> 00:56:08,640
my status remember i just told you that

00:56:06,880 --> 00:56:12,240
i go check and i use the

00:56:08,640 --> 00:56:16,160
rest api to do this i go use

00:56:12,240 --> 00:56:19,359
the get status version of this and

00:56:16,160 --> 00:56:20,559
you know when it's done there there's an

00:56:19,359 --> 00:56:23,440
output this is a web

00:56:20,559 --> 00:56:24,480
activity and then in the if condition

00:56:23,440 --> 00:56:26,640
here

00:56:24,480 --> 00:56:29,200
uh under activities that there's my

00:56:26,640 --> 00:56:30,880
statement and i'm basically saying

00:56:29,200 --> 00:56:32,960
go look at the output of that web

00:56:30,880 --> 00:56:36,000
activity and

00:56:32,960 --> 00:56:37,960
tell me does it equal go look at the the

00:56:36,000 --> 00:56:39,119
output you know dot

00:56:37,960 --> 00:56:41,920
output.properties.state

00:56:39,119 --> 00:56:43,359
all right here and tell me if that

00:56:41,920 --> 00:56:45,280
equals started

00:56:43,359 --> 00:56:47,040
and if it's true if it's false i don't

00:56:45,280 --> 00:56:48,319
do anything it's not started i just

00:56:47,040 --> 00:56:52,319
stopped there's no

00:56:48,319 --> 00:56:56,079
false activities here but if it's true

00:56:52,319 --> 00:56:56,799
then i go up here and i use another call

00:56:56,079 --> 00:56:59,920
to the

00:56:56,799 --> 00:57:02,559
rest api to stop the integration

00:56:59,920 --> 00:57:06,400
services catalog the azure ssis

00:57:02,559 --> 00:57:08,240
integration runtime that is exactly what

00:57:06,400 --> 00:57:09,760
happened a few minutes ago

00:57:08,240 --> 00:57:12,480
and that's why we had this lovely

00:57:09,760 --> 00:57:15,760
discussion about

00:57:12,480 --> 00:57:19,520
how these work and now it's running

00:57:15,760 --> 00:57:23,520
i did that on purpose that never happens

00:57:19,520 --> 00:57:25,680
so everything worked like i wanted it to

00:57:23,520 --> 00:57:28,240
all right let's run through and this by

00:57:25,680 --> 00:57:32,799
the way is the last demo

00:57:28,240 --> 00:57:33,920
so let's again move this just a little

00:57:32,799 --> 00:57:36,559
bit

00:57:33,920 --> 00:57:37,839
yep i did enough there to check it in

00:57:36,559 --> 00:57:42,000
assert

00:57:37,839 --> 00:57:45,440
failed three check in

00:57:42,000 --> 00:57:47,200
yep save everything checked in fast

00:57:45,440 --> 00:57:49,040
that's a good sign

00:57:47,200 --> 00:57:50,319
let's go look at our pipelines let's go

00:57:49,040 --> 00:57:52,839
back to

00:57:50,319 --> 00:57:55,839
build deploy and build and deploy and

00:57:52,839 --> 00:57:55,839
test

00:57:58,799 --> 00:58:01,359
see what our

00:58:02,400 --> 00:58:07,520
our agent says it's running so even

00:58:04,720 --> 00:58:09,440
though we can't see it yet

00:58:07,520 --> 00:58:10,640
because of something the agent tells us

00:58:09,440 --> 00:58:13,680
yep it's going

00:58:10,640 --> 00:58:17,119
right now in

00:58:13,680 --> 00:58:17,119
any minute now

00:58:18,880 --> 00:58:23,119
maybe we need to go to pipelines yep

00:58:21,760 --> 00:58:25,200
there we go all right here's a cert

00:58:23,119 --> 00:58:26,880
number three

00:58:25,200 --> 00:58:29,520
and let's see how far we get this time

00:58:26,880 --> 00:58:31,119
all right we're already down to running

00:58:29,520 --> 00:58:33,040
the package that's encouraging

00:58:31,119 --> 00:58:34,799
deployment succeeded now

00:58:33,040 --> 00:58:36,400
and i don't know how how you develop

00:58:34,799 --> 00:58:40,319
software i could just tell you

00:58:36,400 --> 00:58:40,720
how i do um i i i've said this already i

00:58:40,319 --> 00:58:43,280
said

00:58:40,720 --> 00:58:44,000
fail first is how i learned test driven

00:58:43,280 --> 00:58:45,680
development

00:58:44,000 --> 00:58:47,200
that's what it was called when i started

00:58:45,680 --> 00:58:49,760
using it and

00:58:47,200 --> 00:58:51,440
um and i thought that's perfect i fail

00:58:49,760 --> 00:58:53,839
all the time

00:58:51,440 --> 00:58:54,880
early early in developing software i

00:58:53,839 --> 00:58:57,359
actually learned

00:58:54,880 --> 00:58:59,040
software when i was when i was a kid

00:58:57,359 --> 00:59:00,880
from an engineer who

00:58:59,040 --> 00:59:02,400
worked on the air force side of the

00:59:00,880 --> 00:59:04,559
house for nasa

00:59:02,400 --> 00:59:06,880
um really really smart guy changed my

00:59:04,559 --> 00:59:09,520
life and um

00:59:06,880 --> 00:59:10,960
just uh just really thank him for that

00:59:09,520 --> 00:59:14,319
and

00:59:10,960 --> 00:59:14,880
it's he shared with me earlier on you

00:59:14,319 --> 00:59:18,079
need to

00:59:14,880 --> 00:59:20,960
divorce the emotion of failing away

00:59:18,079 --> 00:59:22,960
from the actual failure itself you need

00:59:20,960 --> 00:59:23,839
to look at it as to step in the right

00:59:22,960 --> 00:59:25,920
direction and he

00:59:23,839 --> 00:59:28,480
he just reinforced that as he was

00:59:25,920 --> 00:59:31,520
teaching me motorola machine code first

00:59:28,480 --> 00:59:33,280
and then basic and when we were doing

00:59:31,520 --> 00:59:36,799
basic back then we had

00:59:33,280 --> 00:59:40,079
byte magazine byte byte magazine

00:59:36,799 --> 00:59:42,160
and it used to list the hex so we didn't

00:59:40,079 --> 00:59:42,799
have any persistent storage so we type

00:59:42,160 --> 00:59:45,839
hex

00:59:42,799 --> 00:59:47,920
commands for about 45 minutes or so and

00:59:45,839 --> 00:59:51,200
then if we did it all right

00:59:47,920 --> 00:59:54,079
uh everything would work so we had

00:59:51,200 --> 00:59:55,280
a failure but remember the name of our

00:59:54,079 --> 00:59:58,079
job

00:59:55,280 --> 00:59:59,200
what was our job called anybody anybody

00:59:58,079 --> 01:00:02,559
bueller

00:59:59,200 --> 01:00:04,799
our job was named assert fail

01:00:02,559 --> 01:00:06,319
number three why did it fail because

01:00:04,799 --> 01:00:08,400
there were two records found i think it

01:00:06,319 --> 01:00:11,520
actually told us that in the message

01:00:08,400 --> 01:00:13,839
that came out so groovy

01:00:11,520 --> 01:00:15,440
let's go fix that and have it succeed

01:00:13,839 --> 01:00:17,040
because this is the way software is

01:00:15,440 --> 01:00:19,040
normally

01:00:17,040 --> 01:00:20,480
for me i'll say for maybe you get it

01:00:19,040 --> 01:00:22,240
right the first time every time

01:00:20,480 --> 01:00:23,760
there's like there's tesla's out there

01:00:22,240 --> 01:00:24,480
who think it up and build it and it

01:00:23,760 --> 01:00:27,200
works

01:00:24,480 --> 01:00:29,200
i'm more of the edison type you know one

01:00:27,200 --> 01:00:32,480
percent inspiration 99

01:00:29,200 --> 01:00:35,760
prosperous edison succeeded because

01:00:32,480 --> 01:00:35,760
he was stubborn

01:00:36,000 --> 01:00:40,079
okay a certain success let's call this

01:00:37,920 --> 01:00:43,280
one one let's just start

01:00:40,079 --> 01:00:46,400
um oh i've got a message uh microsoft

01:00:43,280 --> 01:00:48,319
msftp status shows

01:00:46,400 --> 01:00:49,760
degradation of core services my

01:00:48,319 --> 01:00:51,040
pipelines are running slow as well okay

01:00:49,760 --> 01:00:53,599
thank you david for that

01:00:51,040 --> 01:00:54,079
craig said maybe try clicking on it many

01:00:53,599 --> 01:00:57,440
times

01:00:54,079 --> 01:00:58,880
i did that uh david so great minds we're

01:00:57,440 --> 01:01:00,640
right here brother

01:00:58,880 --> 01:01:02,000
all right let's try this one more time

01:01:00,640 --> 01:01:05,440
let's see

01:01:02,000 --> 01:01:08,319
if we get this going and

01:01:05,440 --> 01:01:10,400
so let's watch oh did i not do something

01:01:08,319 --> 01:01:12,000
oh no there it goes okay

01:01:10,400 --> 01:01:13,920
so i didn't know if i forgot so now it's

01:01:12,000 --> 01:01:16,640
running in the agent we can see that

01:01:13,920 --> 01:01:20,079
that's what just started here

01:01:16,640 --> 01:01:22,000
and let's go to um back over here

01:01:20,079 --> 01:01:24,640
and see if we've got another one in here

01:01:22,000 --> 01:01:26,000
so load one new run so it doesn't always

01:01:24,640 --> 01:01:29,200
show up

01:01:26,000 --> 01:01:32,400
right so let's load the new run

01:01:29,200 --> 01:01:34,960
and that's running a search success one

01:01:32,400 --> 01:01:36,160
let's zoom in here and go to the job

01:01:34,960 --> 01:01:38,000
itself

01:01:36,160 --> 01:01:39,839
uh that's good to know david that the uh

01:01:38,000 --> 01:01:41,839
services are degraded so that makes me

01:01:39,839 --> 01:01:43,680
feel better

01:01:41,839 --> 01:01:45,119
um so that means somebody's having a

01:01:43,680 --> 01:01:47,839
really bad day i

01:01:45,119 --> 01:01:50,400
i don't i'm not a fan of others having

01:01:47,839 --> 01:01:53,440
really bad days

01:01:50,400 --> 01:01:56,640
so the package is running now and we um

01:01:53,440 --> 01:01:59,760
enabled an execute sql task that

01:01:56,640 --> 01:02:01,839
executes a truncate that table before

01:01:59,760 --> 01:02:03,760
another execute sql task that adds that

01:02:01,839 --> 01:02:06,720
one row to it right

01:02:03,760 --> 01:02:08,640
so it should truncate the table first

01:02:06,720 --> 01:02:11,520
leave us with zero rows

01:02:08,640 --> 01:02:14,000
insert a row leave us with one row and

01:02:11,520 --> 01:02:16,799
so when we execute the test suite

01:02:14,000 --> 01:02:17,760
what we should get is success but

01:02:16,799 --> 01:02:20,480
because that it's

01:02:17,760 --> 01:02:22,799
all it's tested for is does it not equal

01:02:20,480 --> 01:02:25,520
one if it does not equal one

01:02:22,799 --> 01:02:26,240
then row count in there then it's going

01:02:25,520 --> 01:02:30,720
to give us an

01:02:26,240 --> 01:02:31,760
error i tried uh i was laughing at

01:02:30,720 --> 01:02:34,880
craig's

01:02:31,760 --> 01:02:35,359
message oh tony asked what is my uh

01:02:34,880 --> 01:02:37,680
twitch

01:02:35,359 --> 01:02:40,640
channel so while i'm gonna zoom out here

01:02:37,680 --> 01:02:44,960
while that's running and i will type in

01:02:40,640 --> 01:02:44,960
the um the answer

01:02:48,720 --> 01:02:52,960
andy i have to spell my name correctly

01:02:50,480 --> 01:02:56,960
and that's that's a challenge sometime

01:02:52,960 --> 01:02:59,359
uh there i am um and

01:02:56,960 --> 01:03:00,400
i i i pop on there this week i'm

01:02:59,359 --> 01:03:03,680
actually

01:03:00,400 --> 01:03:06,960
going every every day at 11 00

01:03:03,680 --> 01:03:09,119
a.m eastern i made a commitment to do

01:03:06,960 --> 01:03:09,119
that

01:03:09,839 --> 01:03:13,200
okay the test suite finished and

01:03:11,680 --> 01:03:16,079
succeeded

01:03:13,200 --> 01:03:17,280
and what this means and i don't know if

01:03:16,079 --> 01:03:19,119
you just saw it because it's

01:03:17,280 --> 01:03:21,599
it's so hard to see on this zoomed out

01:03:19,119 --> 01:03:23,119
screen here but it just started

01:03:21,599 --> 01:03:25,599
it just gave me the success and it's

01:03:23,119 --> 01:03:28,160
about to start number two there it goes

01:03:25,599 --> 01:03:29,599
glad we caught that i did that on

01:03:28,160 --> 01:03:31,760
purpose

01:03:29,599 --> 01:03:34,240
you know you know me well enough now

01:03:31,760 --> 01:03:38,640
already to know that

01:03:34,240 --> 01:03:41,280
i'm running on on

01:03:38,640 --> 01:03:41,280
good faith

01:03:41,680 --> 01:03:46,720
and this is interesting oh there it goes

01:03:44,799 --> 01:03:48,720
there's that message i just saw

01:03:46,720 --> 01:03:50,000
that there it is you were right david i

01:03:48,720 --> 01:03:52,160
didn't doubt you

01:03:50,000 --> 01:03:55,119
uh pipelines in your region may be

01:03:52,160 --> 01:03:56,400
impacted by a live site incident

01:03:55,119 --> 01:03:57,839
check the status here i'm not going to

01:03:56,400 --> 01:03:59,280
do that i'm just going to kind of watch

01:03:57,839 --> 01:04:01,520
it it looks like

01:03:59,280 --> 01:04:03,200
it actually ran pretty quickly my guess

01:04:01,520 --> 01:04:06,240
is the reporting

01:04:03,200 --> 01:04:07,039
uh was playing catch up it looks like

01:04:06,240 --> 01:04:08,960
it's uh

01:04:07,039 --> 01:04:10,880
okay it looks everything looks good so

01:04:08,960 --> 01:04:13,440
it just deployed it to production

01:04:10,880 --> 01:04:14,480
i mentioned dilm suite in passing that's

01:04:13,440 --> 01:04:18,240
where you can get the

01:04:14,480 --> 01:04:21,280
free and open source um

01:04:18,240 --> 01:04:23,920
version of the uh of the ssis catalog

01:04:21,280 --> 01:04:26,079
that i'm using in here

01:04:23,920 --> 01:04:28,640
we should be firing three here in just a

01:04:26,079 --> 01:04:31,359
minute there we go load one new run

01:04:28,640 --> 01:04:33,200
um one of the other free products that's

01:04:31,359 --> 01:04:35,520
out there is called ssis framework

01:04:33,200 --> 01:04:38,880
browser if you've worked with ssis

01:04:35,520 --> 01:04:40,240
in the catalog inside of ssms it's cool

01:04:38,880 --> 01:04:41,599
you've got just about everything you

01:04:40,240 --> 01:04:43,839
need in there

01:04:41,599 --> 01:04:46,000
um and since i've had some connects and

01:04:43,839 --> 01:04:48,000
disconnects this could take a while

01:04:46,000 --> 01:04:49,760
we'll just uh let that go but what we

01:04:48,000 --> 01:04:53,039
will find is

01:04:49,760 --> 01:04:54,079
that uh there was not prior to this

01:04:53,039 --> 01:04:58,559
there was nothing

01:04:54,079 --> 01:05:01,520
in my production test devops folder

01:04:58,559 --> 01:05:03,920
devops prod and now it's been deployed

01:05:01,520 --> 01:05:06,240
so there it is there's the test ssis

01:05:03,920 --> 01:05:08,400
project and all of this and this is the

01:05:06,240 --> 01:05:10,880
package that it's actually running here

01:05:08,400 --> 01:05:14,240
again this is free um i got to get this

01:05:10,880 --> 01:05:17,119
out there i'm in 9.5 out there no.995

01:05:14,240 --> 01:05:18,799
but that needs to to be get out there

01:05:17,119 --> 01:05:21,119
pretty quickly and let's see how we're

01:05:18,799 --> 01:05:24,400
doing looks like we're still running

01:05:21,119 --> 01:05:27,440
um and in here in this demo i go

01:05:24,400 --> 01:05:30,079
and manually clean up some framework

01:05:27,440 --> 01:05:32,000
metadata frameworks are awesome any kind

01:05:30,079 --> 01:05:33,520
of automation especially metadata driven

01:05:32,000 --> 01:05:35,680
automation is awesome

01:05:33,520 --> 01:05:37,119
but it creates this whole other problem

01:05:35,680 --> 01:05:39,440
right and i'm not going to lie to you

01:05:37,119 --> 01:05:41,520
i'm an engineer

01:05:39,440 --> 01:05:42,559
it's it's now you have to manage the

01:05:41,520 --> 01:05:44,400
metadata

01:05:42,559 --> 01:05:46,640
i've got some other talks about that in

01:05:44,400 --> 01:05:50,240
fact i did one recently

01:05:46,640 --> 01:05:53,280
i did a stream recently and i

01:05:50,240 --> 01:05:55,359
i put the um i put it on my blog on

01:05:53,280 --> 01:05:56,240
andyluna.blog if you want to search that

01:05:55,359 --> 01:05:59,520
it's called demo

01:05:56,240 --> 01:06:01,359
stream uh biml business intelligence

01:05:59,520 --> 01:06:03,359
markup language that's a way to manage

01:06:01,359 --> 01:06:06,960
the metadata piece and it's

01:06:03,359 --> 01:06:07,359
a it's a code generation tool demo is

01:06:06,960 --> 01:06:11,200
for

01:06:07,359 --> 01:06:13,200
ssis so you can learn more about that

01:06:11,200 --> 01:06:14,559
and you can automate it as well to not

01:06:13,200 --> 01:06:17,200
only generate

01:06:14,559 --> 01:06:19,680
a bunch of ssis packages really really

01:06:17,200 --> 01:06:22,799
quickly um one of my anecdotes is

01:06:19,680 --> 01:06:24,799
i did ten and a half months of work in

01:06:22,799 --> 01:06:28,160
three and a half days

01:06:24,799 --> 01:06:29,599
and the reason it took me that long is i

01:06:28,160 --> 01:06:32,640
had never even heard

01:06:29,599 --> 01:06:33,839
of the database engine called progress i

01:06:32,640 --> 01:06:35,520
thought the uh

01:06:33,839 --> 01:06:37,280
the architect when she called me was

01:06:35,520 --> 01:06:38,400
mispronouncing postgres

01:06:37,280 --> 01:06:40,000
and it didn't matter i didn't know

01:06:38,400 --> 01:06:42,240
enough about either of those i'd never

01:06:40,000 --> 01:06:43,280
done bimmel against or ssis against any

01:06:42,240 --> 01:06:46,000
of those

01:06:43,280 --> 01:06:46,880
i'm the worst salesperson ever she hired

01:06:46,000 --> 01:06:49,520
me anyway

01:06:46,880 --> 01:06:51,280
it took me a couple days roughly to

01:06:49,520 --> 01:06:52,000
figure out where the metadata is because

01:06:51,280 --> 01:06:54,319
there's no

01:06:52,000 --> 01:06:56,160
information schema which is where we get

01:06:54,319 --> 01:06:57,119
all our metadata we need all of that to

01:06:56,160 --> 01:06:59,760
generate

01:06:57,119 --> 01:07:01,760
ssis packages took me a couple days to

01:06:59,760 --> 01:07:05,119
figure that out it's there it's just not

01:07:01,760 --> 01:07:06,480
an information scheme all right um

01:07:05,119 --> 01:07:08,079
i don't know if you can hear the dings

01:07:06,480 --> 01:07:09,839
in the background we just finished up

01:07:08,079 --> 01:07:11,599
and succeeded

01:07:09,839 --> 01:07:14,000
that last build if we go look at

01:07:11,599 --> 01:07:15,839
pipelines here we can see

01:07:14,000 --> 01:07:17,760
that it ran them in this order it's kind

01:07:15,839 --> 01:07:18,720
of the last first here so it's showing

01:07:17,760 --> 01:07:21,280
me

01:07:18,720 --> 01:07:22,720
that and this was on check-in that's

01:07:21,280 --> 01:07:25,280
what i love about this right

01:07:22,720 --> 01:07:27,039
it i checked in the code and i was

01:07:25,280 --> 01:07:29,440
hands-off all i was doing was watching

01:07:27,039 --> 01:07:32,400
little boxes and consoles in there i

01:07:29,440 --> 01:07:33,520
which i love watching but it built it

01:07:32,400 --> 01:07:35,760
deployed it

01:07:33,520 --> 01:07:36,559
uh to my test instance and then tested

01:07:35,760 --> 01:07:38,960
it

01:07:36,559 --> 01:07:41,119
if that all succeeded remember the first

01:07:38,960 --> 01:07:44,240
time we did that it failed by design

01:07:41,119 --> 01:07:47,039
this time and then

01:07:44,240 --> 01:07:47,440
we deployed to production which is uh

01:07:47,039 --> 01:07:49,440
just

01:07:47,440 --> 01:07:51,200
in this case it's it's just another

01:07:49,440 --> 01:07:54,160
folder on the same catalog

01:07:51,200 --> 01:07:56,000
by and i would never do this automated

01:07:54,160 --> 01:07:57,920
while i say that i'd love to get to the

01:07:56,000 --> 01:08:00,640
spot where i had the confidence

01:07:57,920 --> 01:08:01,520
to deploy to actual production uh

01:08:00,640 --> 01:08:04,960
automated

01:08:01,520 --> 01:08:08,079
but there would be a lot of tests a

01:08:04,960 --> 01:08:10,720
lot of tests in there and

01:08:08,079 --> 01:08:13,039
i even then it would probably take me a

01:08:10,720 --> 01:08:15,039
long time before i felt confident enough

01:08:13,039 --> 01:08:16,080
to deploy now i could bump it up through

01:08:15,039 --> 01:08:20,400
the stack

01:08:16,080 --> 01:08:23,199
um i've got a a blog post about how many

01:08:20,400 --> 01:08:25,120
life cycle management tiers i recommend

01:08:23,199 --> 01:08:27,839
for ssis and the numbers four

01:08:25,120 --> 01:08:30,159
i recommend four the short version you

01:08:27,839 --> 01:08:32,000
got to have a place where you develop it

01:08:30,159 --> 01:08:34,159
and i want the developers to actually

01:08:32,000 --> 01:08:36,480
promote the code to an environment

01:08:34,159 --> 01:08:38,480
where they can then uh test it it's a

01:08:36,480 --> 01:08:40,480
different environment perfect

01:08:38,480 --> 01:08:42,960
if it's perfect there's like a firewall

01:08:40,480 --> 01:08:44,719
between that test environment and dev

01:08:42,960 --> 01:08:46,799
so that if they forget connection

01:08:44,719 --> 01:08:48,080
managers and i i forget connection

01:08:46,799 --> 01:08:49,759
manager updates

01:08:48,080 --> 01:08:51,600
you forget to parameterize them and

01:08:49,759 --> 01:08:52,960
stuff you don't want it to be able to

01:08:51,600 --> 01:08:54,560
reach the dev

01:08:52,960 --> 01:08:56,239
environment so it will fail when it

01:08:54,560 --> 01:08:57,440
tries and you want to get all of that

01:08:56,239 --> 01:08:59,600
worked out

01:08:57,440 --> 01:09:01,600
the um the fourth environment i went one

01:08:59,600 --> 01:09:02,400
two i'm skipping to four is a production

01:09:01,600 --> 01:09:05,279
environment

01:09:02,400 --> 01:09:06,799
i want a dba doing that deployment i

01:09:05,279 --> 01:09:08,480
don't want developers even in that

01:09:06,799 --> 01:09:08,799
environment and if so i want them to

01:09:08,480 --> 01:09:12,319
have

01:09:08,799 --> 01:09:14,880
very very very minimal permissions

01:09:12,319 --> 01:09:15,600
in in that environment read only stuff

01:09:14,880 --> 01:09:17,040
um

01:09:15,600 --> 01:09:19,520
the other but there's a trick there

01:09:17,040 --> 01:09:20,080
right i don't want the dba deploying to

01:09:19,520 --> 01:09:22,400
production

01:09:20,080 --> 01:09:24,319
i don't want that deployment to be the

01:09:22,400 --> 01:09:26,239
first time the dba has done the

01:09:24,319 --> 01:09:28,480
deployment so i want number three

01:09:26,239 --> 01:09:30,000
a pre-production environment call it

01:09:28,480 --> 01:09:33,040
whatever you want

01:09:30,000 --> 01:09:34,960
um qa uat whatever

01:09:33,040 --> 01:09:37,199
each time the deployment's done the

01:09:34,960 --> 01:09:37,759
pareto principle applies you find about

01:09:37,199 --> 01:09:39,920
01:09:37,759 --> 01:09:41,600
of the bugs you do the math on that

01:09:39,920 --> 01:09:43,759
you're down less than one percent you're

01:09:41,600 --> 01:09:46,239
like 0.8 percent

01:09:43,759 --> 01:09:47,359
of the bugs when you go to production

01:09:46,239 --> 01:09:50,080
that's that's not

01:09:47,359 --> 01:09:51,679
satisfactory to some places some

01:09:50,080 --> 01:09:55,440
enterprises that

01:09:51,679 --> 01:09:56,719
run under regulations um for a few years

01:09:55,440 --> 01:09:59,280
i managed the team

01:09:56,719 --> 01:10:00,719
that grew to 40 etl developers when i

01:09:59,280 --> 01:10:03,600
worked at unisys

01:10:00,719 --> 01:10:04,080
and we were doing state medicaid loads

01:10:03,600 --> 01:10:06,159
it was

01:10:04,080 --> 01:10:07,679
there was a lot you know a lot there

01:10:06,159 --> 01:10:08,719
that was complicated we ended up with

01:10:07,679 --> 01:10:10,719
six

01:10:08,719 --> 01:10:13,440
application life cycle tiers and our

01:10:10,719 --> 01:10:16,960
number was way way down

01:10:13,440 --> 01:10:20,159
20 percent of 0.8 and then 20 of that

01:10:16,960 --> 01:10:20,640
so yeah and it was about right it bore

01:10:20,159 --> 01:10:24,159
out

01:10:20,640 --> 01:10:27,280
as we did the math uh on that

01:10:24,159 --> 01:10:29,120
but even manually testing it we wanted

01:10:27,280 --> 01:10:30,719
we didn't have anything like this we had

01:10:29,120 --> 01:10:34,000
something kind of clued

01:10:30,719 --> 01:10:35,600
together with uh thumbtacks and uh

01:10:34,000 --> 01:10:37,760
chewing gum inductive

01:10:35,600 --> 01:10:39,920
but we did the best we could with what

01:10:37,760 --> 01:10:41,920
we had and i know for a fact

01:10:39,920 --> 01:10:43,679
every software developer i know is doing

01:10:41,920 --> 01:10:47,040
the exact same thing

01:10:43,679 --> 01:10:48,880
so um don't despise that right don't

01:10:47,040 --> 01:10:50,800
despise little beginnings

01:10:48,880 --> 01:10:53,360
do what you know and then keep learning

01:10:50,800 --> 01:10:56,000
you're here i'm preaching to the choir

01:10:53,360 --> 01:10:57,040
but um that's you know that's kind of

01:10:56,000 --> 01:11:00,320
combining these

01:10:57,040 --> 01:11:02,480
agents plus azure devops

01:11:00,320 --> 01:11:04,000
to do something that was really really

01:11:02,480 --> 01:11:06,320
hard before

01:11:04,000 --> 01:11:07,120
absolutely love that we can do this now

01:11:06,320 --> 01:11:09,360
here

01:11:07,120 --> 01:11:11,040
that brings me to the end of my my

01:11:09,360 --> 01:11:12,560
presentation here i'd be happy to answer

01:11:11,040 --> 01:11:13,760
any questions i'll stick around to y'all

01:11:12,560 --> 01:11:15,600
run me off

01:11:13,760 --> 01:11:17,679
if you'd like to learn more about me and

01:11:15,600 --> 01:11:20,080
there's some personal stuff on here too

01:11:17,679 --> 01:11:21,280
uh go to andy leonard blog slash learn

01:11:20,080 --> 01:11:24,320
dash more

01:11:21,280 --> 01:11:25,679
and if i can help in any way here's my

01:11:24,320 --> 01:11:27,360
email address

01:11:25,679 --> 01:11:28,880
and i'll just leave this sitting up here

01:11:27,360 --> 01:11:32,080
for the next little bit

01:11:28,880 --> 01:11:34,239
while i thank profusely

01:11:32,080 --> 01:11:35,920
the the moderators who stuck in here

01:11:34,239 --> 01:11:37,679
with me

01:11:35,920 --> 01:11:39,440
through all this i really appreciate you

01:11:37,679 --> 01:11:41,360
all and

01:11:39,440 --> 01:11:44,640
and thank you the people who attended

01:11:41,360 --> 01:11:47,280
for for hanging in here with me

01:11:44,640 --> 01:11:47,280
thanks a bunch

01:11:50,560 --> 01:11:58,560
thank you for that i believe that is the

01:11:53,679 --> 01:11:58,560
end of all things open programming

01:11:58,800 --> 01:12:02,159
unless i missed something on the

01:12:00,000 --> 01:12:04,400
schedule okay

01:12:02,159 --> 01:12:04,400
cool

01:12:06,320 --> 01:12:10,480
thanks katie and thanks craig appreciate

01:12:12,600 --> 01:12:15,600

YouTube URL: https://www.youtube.com/watch?v=azmbIGrTJbs


