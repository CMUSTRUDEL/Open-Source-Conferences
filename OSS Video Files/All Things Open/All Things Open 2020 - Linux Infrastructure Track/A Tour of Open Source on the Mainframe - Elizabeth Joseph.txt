Title: A Tour of Open Source on the Mainframe - Elizabeth Joseph
Publication date: 2020-12-10
Playlist: All Things Open 2020 - Linux Infrastructure Track
Description: 
	Presented by: Elizabeth Joseph, IBM
Presented at All Things Open 2020 - Linux/Infrastructure Track

Abstract: Many enterprises and, as many of us learned during the COVID-19 outbreak, governments, rely on mainframes to do the bulk of their data-driven work and the modern mainframe is very good at what it does. But what if you’re looking to modernize your platform and bring in the DevOps methodologies, tooling, and practice into your organization?

Today, there is an entire product line of mainframes that exclusively run Linux (RHEL, SLES, or Ubuntu). With Linux, you get access to the vast ecosystem of open source software that’s already been ported to the mainframe architecture (s390x), with more being ported every month.

If your organization is using z/OS, the Open Mainframe Project has a series of open source projects targeted specifically at the mainframe and improving usability. Zowe, for instance, helps create a consolidated API for accessing resources and workload on your system and Feilong is a z/VM connector that allows you to manage your virtual machines with familiar open source tooling like OpenStack. There are even connectors for Jenkins that allow you to integrate CI/CD pipelines with your workloads.

In this talk I’ll explore all of this in more to show you how an automated, modern environment can thrive on today’s mainframe.
Captions: 
	00:00:05,040 --> 00:00:08,559
so

00:00:06,160 --> 00:00:11,679
i'm here to give you a tour of open

00:00:08,559 --> 00:00:15,040
source on the mainframe

00:00:11,679 --> 00:00:18,080
and just to provide a little background

00:00:15,040 --> 00:00:20,640
um so as

00:00:18,080 --> 00:00:21,920
the introduction said um i've i've

00:00:20,640 --> 00:00:24,000
actually been coming to all things open

00:00:21,920 --> 00:00:26,160
for several years

00:00:24,000 --> 00:00:29,199
and giving talks about various things in

00:00:26,160 --> 00:00:30,800
the open source and infrastructure space

00:00:29,199 --> 00:00:32,719
this is the first time i'll be talking

00:00:30,800 --> 00:00:35,200
about mainframes because

00:00:32,719 --> 00:00:37,200
my previous jobs were all just standard

00:00:35,200 --> 00:00:38,559
sort of linux systems administration

00:00:37,200 --> 00:00:41,920
jobs

00:00:38,559 --> 00:00:43,920
my first job i started out on-prem i was

00:00:41,920 --> 00:00:45,840
racking servers and putting cds in them

00:00:43,920 --> 00:00:47,600
to install debian

00:00:45,840 --> 00:00:49,600
from there i moved into cloud things and

00:00:47,600 --> 00:00:51,039
worked on openstack for a while

00:00:49,600 --> 00:00:53,039
then i spent a couple of years working

00:00:51,039 --> 00:00:54,800
on containers with apache mesos and then

00:00:53,039 --> 00:00:58,079
kubernetes

00:00:54,800 --> 00:00:59,680
and then about two years ago

00:00:58,079 --> 00:01:02,160
i left the startup i was at in san

00:00:59,680 --> 00:01:05,760
francisco and i was like

00:01:02,160 --> 00:01:07,200
i need something different so i spent a

00:01:05,760 --> 00:01:09,360
couple months thinking about what i

00:01:07,200 --> 00:01:11,040
wanted to do moving forward in my career

00:01:09,360 --> 00:01:12,880
kubernetes was really taking off and

00:01:11,040 --> 00:01:14,960
that was interesting but i just

00:01:12,880 --> 00:01:16,080
kind of been on the openstack ride and i

00:01:14,960 --> 00:01:19,920
wanted something

00:01:16,080 --> 00:01:21,439
just different um so i reached out to my

00:01:19,920 --> 00:01:22,960
contacts and i was looking around to

00:01:21,439 --> 00:01:24,400
find what i want to do if i wanted to go

00:01:22,960 --> 00:01:26,400
into infrastructure if i wanted to do

00:01:24,400 --> 00:01:28,240
developer advocacy

00:01:26,400 --> 00:01:30,479
and that's how i found myself talking to

00:01:28,240 --> 00:01:33,840
the ibm z group

00:01:30,479 --> 00:01:36,640
ibm z is another name for the this line

00:01:33,840 --> 00:01:39,360
of servers that ibm

00:01:36,640 --> 00:01:40,479
puts out that are mainframes so i now

00:01:39,360 --> 00:01:43,520
find myself

00:01:40,479 --> 00:01:45,600
in a role at ibm where i got to learn a

00:01:43,520 --> 00:01:46,560
ton about this really awesome mainframe

00:01:45,600 --> 00:01:48,720
hardware

00:01:46,560 --> 00:01:50,799
but i'm still doing a lot of open source

00:01:48,720 --> 00:01:52,880
work and i'm getting to use all of that

00:01:50,799 --> 00:01:55,280
infrastructure knowledge i gained

00:01:52,880 --> 00:01:57,200
while being a linux admin in order to

00:01:55,280 --> 00:01:59,680
reach out to folks like you

00:01:57,200 --> 00:02:00,479
to talk to you about how cool mainframes

00:01:59,680 --> 00:02:02,799
are

00:02:00,479 --> 00:02:04,399
um this picture in the slide here is not

00:02:02,799 --> 00:02:06,240
a modern mainframe

00:02:04,399 --> 00:02:08,959
in case you didn't guess um that's a

00:02:06,240 --> 00:02:10,640
system 360. it's the first mainframe

00:02:08,959 --> 00:02:13,200
that ibm came out with

00:02:10,640 --> 00:02:15,280
this was in poughkeepsie last year when

00:02:13,200 --> 00:02:17,920
i was visiting some colleagues

00:02:15,280 --> 00:02:18,800
and they have a little museum in their

00:02:17,920 --> 00:02:20,879
manufacturing

00:02:18,800 --> 00:02:22,000
assembly division and so we got to go

00:02:20,879 --> 00:02:23,760
over there and check out the old

00:02:22,000 --> 00:02:26,319
servers so that was a lot of fun i got

00:02:23,760 --> 00:02:28,080
to see the new servers too

00:02:26,319 --> 00:02:29,360
um so that's that's about my background

00:02:28,080 --> 00:02:30,959
um i like to say like i

00:02:29,360 --> 00:02:32,720
used to do on-prem things then i did

00:02:30,959 --> 00:02:34,800
cloud things and now in the mainframe

00:02:32,720 --> 00:02:36,319
space it's very much both

00:02:34,800 --> 00:02:38,480
so like when people get a mainframe

00:02:36,319 --> 00:02:40,800
installed it's in their data center

00:02:38,480 --> 00:02:42,959
um but ibm cloud also has mainframes in

00:02:40,800 --> 00:02:44,879
it for some of their secure services

00:02:42,959 --> 00:02:46,879
so that's really interesting stuff that

00:02:44,879 --> 00:02:48,400
i've been learning but

00:02:46,879 --> 00:02:51,280
i'm here to talk to you about the open

00:02:48,400 --> 00:02:53,120
source side of things um

00:02:51,280 --> 00:02:55,599
but first i wanted to explain what a

00:02:53,120 --> 00:02:57,360
mainframe is because two years ago

00:02:55,599 --> 00:02:58,959
if you had asked me i would have said

00:02:57,360 --> 00:03:02,480
like um

00:02:58,959 --> 00:03:02,480
big computer old thing

00:03:02,720 --> 00:03:09,040
so mainframes are big computers

00:03:05,760 --> 00:03:12,159
um they don't have storage inside of

00:03:09,040 --> 00:03:14,080
the the mainframe itself um but they

00:03:12,159 --> 00:03:16,159
these days they they sit in like a

00:03:14,080 --> 00:03:19,519
standard 19-inch rack spot

00:03:16,159 --> 00:03:21,280
for their like single um frame versions

00:03:19,519 --> 00:03:22,800
and like this picture here it's a four

00:03:21,280 --> 00:03:25,920
frame um

00:03:22,800 --> 00:03:28,080
z15 and so it fits in four

00:03:25,920 --> 00:03:29,599
19-inch rack spaces so you don't need a

00:03:28,080 --> 00:03:31,280
special place in your data center for

00:03:29,599 --> 00:03:32,959
these mainframes anymore they're not as

00:03:31,280 --> 00:03:35,599
big as a room

00:03:32,959 --> 00:03:37,200
and then you connect them to um storage

00:03:35,599 --> 00:03:38,720
on another machine so you buy like a

00:03:37,200 --> 00:03:40,560
storage device there's a bunch of

00:03:38,720 --> 00:03:43,840
manufacturers that

00:03:40,560 --> 00:03:45,440
that make them these days so you have

00:03:43,840 --> 00:03:46,080
your mainframe which is all pretty much

00:03:45,440 --> 00:03:48,640
processing

00:03:46,080 --> 00:03:49,599
power and this is what they look like

00:03:48,640 --> 00:03:52,159
inside

00:03:49,599 --> 00:03:53,519
um it was really hard for me to find

00:03:52,159 --> 00:03:54,879
this picture when i first started

00:03:53,519 --> 00:03:55,680
because i was like i want to see what's

00:03:54,879 --> 00:03:58,959
inside

00:03:55,680 --> 00:03:59,519
and people around where does that matter

00:03:58,959 --> 00:04:01,280
you're never

00:03:59,519 --> 00:04:02,720
going to like see one on the outside you

00:04:01,280 --> 00:04:04,239
just remote into it all the time and i'm

00:04:02,720 --> 00:04:06,239
like that's not the point i want to see

00:04:04,239 --> 00:04:07,760
the cool blinky lights and like

00:04:06,239 --> 00:04:09,920
all the really cool hardware stuff

00:04:07,760 --> 00:04:12,879
that's inside the machine um

00:04:09,920 --> 00:04:14,239
eventually i found my tribe and they got

00:04:12,879 --> 00:04:15,120
me like all the great pictures of the

00:04:14,239 --> 00:04:17,359
inside

00:04:15,120 --> 00:04:18,959
um but anyway as i said it's like raw

00:04:17,359 --> 00:04:20,720
processing power inside of one of these

00:04:18,959 --> 00:04:22,079
machines um in the center there it's

00:04:20,720 --> 00:04:24,960
kind of hard to read because there's not

00:04:22,079 --> 00:04:28,080
a great color to impose on top of

00:04:24,960 --> 00:04:31,919
um this system diagram but there's like

00:04:28,080 --> 00:04:34,639
five drawers just full processors

00:04:31,919 --> 00:04:35,919
with giant heat sinks um you've got your

00:04:34,639 --> 00:04:38,000
memory

00:04:35,919 --> 00:04:39,199
um and then you've got like the two on

00:04:38,000 --> 00:04:41,520
the side they're um

00:04:39,199 --> 00:04:42,960
they're just full of i o cards so those

00:04:41,520 --> 00:04:44,240
connect out to i o they do some of the

00:04:42,960 --> 00:04:46,240
processing

00:04:44,240 --> 00:04:48,160
there's also like your pcie cards are in

00:04:46,240 --> 00:04:50,720
there so like your crypto cards

00:04:48,160 --> 00:04:52,320
your hsms pretty much like tons of

00:04:50,720 --> 00:04:54,400
specialized cards inside of these

00:04:52,320 --> 00:04:56,080
machines

00:04:54,400 --> 00:04:58,080
this machine here happens to be the

00:04:56,080 --> 00:04:59,919
water cooled system there is an air

00:04:58,080 --> 00:05:01,600
cooled version as well

00:04:59,919 --> 00:05:03,039
um and they're trying to do more air

00:05:01,600 --> 00:05:04,560
cooled because that's easier to fit in

00:05:03,039 --> 00:05:07,280
the standard data center

00:05:04,560 --> 00:05:07,919
um you've got your gigabit switches but

00:05:07,280 --> 00:05:11,199
typically

00:05:07,919 --> 00:05:15,360
you'd connect your mainframe up

00:05:11,199 --> 00:05:16,880
to something faster networking wise

00:05:15,360 --> 00:05:18,639
support elements what those are is how

00:05:16,880 --> 00:05:21,199
you interact with the mainframe

00:05:18,639 --> 00:05:22,400
so those run a small operating system

00:05:21,199 --> 00:05:23,280
that allows you to interact with

00:05:22,400 --> 00:05:26,320
everything and then

00:05:23,280 --> 00:05:29,440
connect like access to all your

00:05:26,320 --> 00:05:31,120
operating systems and whatnot

00:05:29,440 --> 00:05:33,440
and a really important thing here is

00:05:31,120 --> 00:05:36,639
that it's not x86

00:05:33,440 --> 00:05:38,160
so it is an architecture that if you if

00:05:36,639 --> 00:05:39,360
you're talking to like mainframers

00:05:38,160 --> 00:05:40,320
they'll call it something like z

00:05:39,360 --> 00:05:42,960
architecture

00:05:40,320 --> 00:05:46,320
or they'll call it ibm z in the open

00:05:42,960 --> 00:05:50,479
source world we refer to it as s390x

00:05:46,320 --> 00:05:53,199
just like you know 64-bit x86 we call

00:05:50,479 --> 00:05:54,080
like amd64 so like if you look at the

00:05:53,199 --> 00:05:56,639
binary

00:05:54,080 --> 00:05:58,960
if you find a binary that says s390x

00:05:56,639 --> 00:06:01,280
that is the mainframe architecture

00:05:58,960 --> 00:06:02,960
um the point of this architecture is

00:06:01,280 --> 00:06:06,639
that it's really good at processing data

00:06:02,960 --> 00:06:08,560
because it has big caches in the cpu

00:06:06,639 --> 00:06:11,120
and then in a fully loaded like four

00:06:08,560 --> 00:06:15,120
frame machine like we saw a picture of

00:06:11,120 --> 00:06:18,160
there's 190 5.2 gigahertz processors

00:06:15,120 --> 00:06:20,080
each processor has 12 cores

00:06:18,160 --> 00:06:21,520
and then the machine itself has 40

00:06:20,080 --> 00:06:24,639
terabytes of ram

00:06:21,520 --> 00:06:28,080
um and then you saw all those pcie

00:06:24,639 --> 00:06:31,759
um drawers so those are like

00:06:28,080 --> 00:06:33,919
they have the offline processors and um

00:06:31,759 --> 00:06:35,600
in lots and lots of drawers of

00:06:33,919 --> 00:06:37,039
processors and again there's like tons

00:06:35,600 --> 00:06:38,560
of really cool pictures i can show you

00:06:37,039 --> 00:06:40,319
later if you ask me of like

00:06:38,560 --> 00:06:42,560
the internals of all this stuff and what

00:06:40,319 --> 00:06:45,759
all the cards look like and

00:06:42,560 --> 00:06:47,039
they're very pretty but again it's not

00:06:45,759 --> 00:06:50,639
x86

00:06:47,039 --> 00:06:52,080
so that's important um

00:06:50,639 --> 00:06:54,080
so again if you had asked me two years

00:06:52,080 --> 00:06:55,759
ago what runs on a main print frame i

00:06:54,080 --> 00:06:58,080
would have like waved my hands and said

00:06:55,759 --> 00:06:59,840
something something proprietary things

00:06:58,080 --> 00:07:01,520
um but it turns out linux has been

00:06:59,840 --> 00:07:03,840
running on the mainframe for

00:07:01,520 --> 00:07:05,199
over 20 years now and i'll get into the

00:07:03,840 --> 00:07:08,639
history of that

00:07:05,199 --> 00:07:12,560
but speaking on the topic of

00:07:08,639 --> 00:07:13,199
the type of processor it has and that

00:07:12,560 --> 00:07:16,720
it's not a

00:07:13,199 --> 00:07:18,479
x86 my first question

00:07:16,720 --> 00:07:19,599
again i had trouble finding an answer to

00:07:18,479 --> 00:07:20,639
it because people didn't understand what

00:07:19,599 --> 00:07:22,880
i was asking

00:07:20,639 --> 00:07:25,280
was what does it mean if you say like

00:07:22,880 --> 00:07:28,000
suse enterprise linux server and red hat

00:07:25,280 --> 00:07:29,759
enterprise linux and ubuntu

00:07:28,000 --> 00:07:32,000
what does it mean when you say those run

00:07:29,759 --> 00:07:33,919
on this does that mean everything

00:07:32,000 --> 00:07:36,319
in the software repository for these

00:07:33,919 --> 00:07:40,000
respective distributions has been ported

00:07:36,319 --> 00:07:41,120
to this this new chipset is this x s390x

00:07:40,000 --> 00:07:42,880
chipset

00:07:41,120 --> 00:07:44,800
because that's what you need to do when

00:07:42,880 --> 00:07:47,840
you are running on a processor

00:07:44,800 --> 00:07:48,479
that is like an arm processor a power

00:07:47,840 --> 00:07:50,800
processor

00:07:48,479 --> 00:07:52,240
an s390x processor you need to compile

00:07:50,800 --> 00:07:54,560
or interpret your software

00:07:52,240 --> 00:07:56,160
in order to use it on there so did that

00:07:54,560 --> 00:07:56,560
mean that everything's been recompiled

00:07:56,160 --> 00:07:58,960
and

00:07:56,560 --> 00:08:00,639
now we have everything in slash the

00:07:58,960 --> 00:08:03,919
answer that is no

00:08:00,639 --> 00:08:06,479
but it is enough so that sles is a

00:08:03,919 --> 00:08:08,240
you know fully functioning system that

00:08:06,479 --> 00:08:09,360
ubuntu is totally a fully functioning

00:08:08,240 --> 00:08:11,759
system

00:08:09,360 --> 00:08:12,560
and so what the distributions do is they

00:08:11,759 --> 00:08:15,440
work

00:08:12,560 --> 00:08:16,879
um in collaboration with the community

00:08:15,440 --> 00:08:20,160
and with ibm

00:08:16,879 --> 00:08:21,280
and like um suse red hat and canonical

00:08:20,160 --> 00:08:24,720
they all have

00:08:21,280 --> 00:08:26,160
um mainframes in their build farms so

00:08:24,720 --> 00:08:28,479
they that's how they run all of their

00:08:26,160 --> 00:08:28,960
builds um debian leverages some of the

00:08:28,479 --> 00:08:31,039
ones

00:08:28,960 --> 00:08:32,240
um at one of our partners at marist

00:08:31,039 --> 00:08:35,279
college

00:08:32,240 --> 00:08:36,080
clef os is is maintained by one of ibm's

00:08:35,279 --> 00:08:39,519
partners

00:08:36,080 --> 00:08:41,839
opensuse and fedora use suse and red hat

00:08:39,519 --> 00:08:42,800
respectively um mainframes um to build

00:08:41,839 --> 00:08:44,959
their systems

00:08:42,800 --> 00:08:46,080
um i believe alpine was ported by an

00:08:44,959 --> 00:08:47,680
intern at ibm

00:08:46,080 --> 00:08:50,000
a couple years ago and that's used for a

00:08:47,680 --> 00:08:53,040
lot of the container stuff

00:08:50,000 --> 00:08:55,920
um but the idea here is that it's

00:08:53,040 --> 00:08:57,120
it's a lot of linux um and a lot of open

00:08:55,920 --> 00:08:58,640
source software

00:08:57,120 --> 00:09:00,880
um in fact the first thing i did when i

00:08:58,640 --> 00:09:03,040
got a vm

00:09:00,880 --> 00:09:04,160
running linux on the mainframe was i

00:09:03,040 --> 00:09:07,519
installed screen

00:09:04,160 --> 00:09:08,880
and ersie the irc client and i hopped on

00:09:07,519 --> 00:09:10,320
irc and i was like ah

00:09:08,880 --> 00:09:12,480
check out all these cool stats and my

00:09:10,320 --> 00:09:14,880
prox cpu info and like

00:09:12,480 --> 00:09:15,920
because like i'm a nerd and that's what

00:09:14,880 --> 00:09:17,760
i'm gonna do

00:09:15,920 --> 00:09:19,680
um and i can't imagine there was a

00:09:17,760 --> 00:09:22,240
client that said hey i need this text

00:09:19,680 --> 00:09:24,720
based irc client reported for me

00:09:22,240 --> 00:09:25,680
i think it just built and then ubuntu

00:09:24,720 --> 00:09:28,160
was like hey sure

00:09:25,680 --> 00:09:28,800
this built let's ship it and it works

00:09:28,160 --> 00:09:30,959
fine

00:09:28,800 --> 00:09:32,720
um so that's that's what it means when

00:09:30,959 --> 00:09:34,240
you're running linux on this it's

00:09:32,720 --> 00:09:37,120
not everything in the repository but it

00:09:34,240 --> 00:09:38,640
is a huge chunk of it

00:09:37,120 --> 00:09:40,640
another thing that's worth pointing out

00:09:38,640 --> 00:09:42,240
is that kvm

00:09:40,640 --> 00:09:43,760
is one of the ways you can control

00:09:42,240 --> 00:09:46,320
virtual machines on

00:09:43,760 --> 00:09:47,279
the mainframe traditionally you'd use

00:09:46,320 --> 00:09:49,360
zvm

00:09:47,279 --> 00:09:52,240
zvm is proprietary virtualization

00:09:49,360 --> 00:09:54,160
technology that came out in the 1970s

00:09:52,240 --> 00:09:55,760
and has been continually improved since

00:09:54,160 --> 00:09:57,200
then and it is

00:09:55,760 --> 00:09:59,040
the most amazing virtualization

00:09:57,200 --> 00:10:01,839
technology i've ever seen honestly

00:09:59,040 --> 00:10:03,680
i mean i guess when you've got you know

00:10:01,839 --> 00:10:06,320
45 years to work on something it's

00:10:03,680 --> 00:10:08,399
it's not going to be bad um and it

00:10:06,320 --> 00:10:10,320
really is amazing um

00:10:08,399 --> 00:10:11,600
but you want to use kvm if you want

00:10:10,320 --> 00:10:14,880
integration and things like

00:10:11,600 --> 00:10:15,839
libvert and so like in in this scenario

00:10:14,880 --> 00:10:19,279
we have

00:10:15,839 --> 00:10:20,880
like in our um we have this linux one

00:10:19,279 --> 00:10:23,680
community cloud we use openstack

00:10:20,880 --> 00:10:25,760
to deploy uh the vms on the mainframe

00:10:23,680 --> 00:10:27,839
because it's just using libert and kvm

00:10:25,760 --> 00:10:29,920
so it's really easy to do

00:10:27,839 --> 00:10:31,120
um and so in that case linux is running

00:10:29,920 --> 00:10:32,800
like a really thin

00:10:31,120 --> 00:10:34,160
install of linux and then kvm is

00:10:32,800 --> 00:10:35,120
actually doing the virtualization on the

00:10:34,160 --> 00:10:38,320
mainframe to

00:10:35,120 --> 00:10:39,760
manage all of your linux systems um and

00:10:38,320 --> 00:10:40,959
then there's a bunch of proprietary

00:10:39,760 --> 00:10:42,880
operating systems

00:10:40,959 --> 00:10:44,240
which i mentioned because you'll run

00:10:42,880 --> 00:10:45,760
into them if your organization has a

00:10:44,240 --> 00:10:47,120
mainframe

00:10:45,760 --> 00:10:48,800
but we're not really going to get into

00:10:47,120 --> 00:10:51,519
them very much because i'm here to talk

00:10:48,800 --> 00:10:51,519
about open source

00:10:53,519 --> 00:10:59,760
so i joined ibm

00:10:56,720 --> 00:11:00,480
at a really pivotal time in the

00:10:59,760 --> 00:11:03,480
mainframe

00:11:00,480 --> 00:11:06,640
world because it has been a very

00:11:03,480 --> 00:11:09,120
proprietary thing for a very long time

00:11:06,640 --> 00:11:11,519
um and like this this new wave of open

00:11:09,120 --> 00:11:14,320
source where the term open source exists

00:11:11,519 --> 00:11:15,519
in the past 20 years and where there are

00:11:14,320 --> 00:11:17,200
really strong

00:11:15,519 --> 00:11:18,800
organizations and foundations and things

00:11:17,200 --> 00:11:20,399
focused around open source

00:11:18,800 --> 00:11:22,959
like this is kind of like the latest

00:11:20,399 --> 00:11:25,360
wave of open source in computing

00:11:22,959 --> 00:11:27,120
but if you go back to essentially when

00:11:25,360 --> 00:11:30,079
computers started being

00:11:27,120 --> 00:11:31,920
things that existed in the world people

00:11:30,079 --> 00:11:35,279
were already getting together

00:11:31,920 --> 00:11:38,560
they didn't call it open source software

00:11:35,279 --> 00:11:41,600
because that was not really a thing

00:11:38,560 --> 00:11:44,320
but in 1955 a bunch of just

00:11:41,600 --> 00:11:46,320
users of the ibm 701 which was a

00:11:44,320 --> 00:11:48,079
precursor to mainframes

00:11:46,320 --> 00:11:50,959
they created a user group so it was

00:11:48,079 --> 00:11:52,639
people across companies and universities

00:11:50,959 --> 00:11:54,000
and governments who were just using

00:11:52,639 --> 00:11:56,399
these machines

00:11:54,000 --> 00:11:58,160
and they shared their software library

00:11:56,399 --> 00:11:59,360
like share was essentially a library and

00:11:58,160 --> 00:12:01,040
a bunch of users

00:11:59,360 --> 00:12:02,639
and they just shared their programs that

00:12:01,040 --> 00:12:05,680
they wrote

00:12:02,639 --> 00:12:08,720
in 1959

00:12:05,680 --> 00:12:12,399
um they the

00:12:08,720 --> 00:12:14,880
share operating system um which

00:12:12,399 --> 00:12:16,720
was the first of like i guess what you

00:12:14,880 --> 00:12:18,399
could call a true operating system ever

00:12:16,720 --> 00:12:19,839
to exist in the world

00:12:18,399 --> 00:12:21,519
because previously they were just

00:12:19,839 --> 00:12:23,680
independent utilities and this brought

00:12:21,519 --> 00:12:25,680
things together into an operating system

00:12:23,680 --> 00:12:27,200
and that sos operating system was

00:12:25,680 --> 00:12:29,360
eventually adopted by ibm

00:12:27,200 --> 00:12:31,040
as the operating system used in some of

00:12:29,360 --> 00:12:32,560
their early systems

00:12:31,040 --> 00:12:34,720
and this is just a quote from from

00:12:32,560 --> 00:12:36,480
wikipedia about share

00:12:34,720 --> 00:12:38,160
it's just like it was one of the first

00:12:36,480 --> 00:12:40,079
like commons based

00:12:38,160 --> 00:12:41,920
peer production things in the world and

00:12:40,079 --> 00:12:43,040
it's kind of like a precursor to the

00:12:41,920 --> 00:12:46,240
modern open source

00:12:43,040 --> 00:12:47,760
movement um and so there is this open

00:12:46,240 --> 00:12:48,720
source legacy that exists in the

00:12:47,760 --> 00:12:50,720
mainframe

00:12:48,720 --> 00:12:52,240
another one is the vm community i

00:12:50,720 --> 00:12:54,639
mentioned zvm

00:12:52,240 --> 00:12:56,000
which again it's proprietary these days

00:12:54,639 --> 00:12:57,440
but in the early days it

00:12:56,000 --> 00:12:59,040
i guess you can still say it was

00:12:57,440 --> 00:13:00,639
proprietary but a lot of companies

00:12:59,040 --> 00:13:01,200
universities governments they all got

00:13:00,639 --> 00:13:03,600
together

00:13:01,200 --> 00:13:06,000
and were working on it together and and

00:13:03,600 --> 00:13:09,600
like nudging ibm and saying listen

00:13:06,000 --> 00:13:12,000
virtualization it's gonna be big

00:13:09,600 --> 00:13:14,320
um if you're interested in this history

00:13:12,000 --> 00:13:17,360
which i totally was there's like a

00:13:14,320 --> 00:13:20,240
uh there's there's a paper um written by

00:13:17,360 --> 00:13:21,680
melinda varian talking about the vm

00:13:20,240 --> 00:13:22,800
community and she goes through like 20

00:13:21,680 --> 00:13:24,639
years of history

00:13:22,800 --> 00:13:26,079
and she gets into like all the versions

00:13:24,639 --> 00:13:27,120
and all of the components that were

00:13:26,079 --> 00:13:29,519
involved

00:13:27,120 --> 00:13:31,279
um and then how ibm wasn't quite on

00:13:29,519 --> 00:13:32,880
board with virtualization for a very

00:13:31,279 --> 00:13:34,959
long time

00:13:32,880 --> 00:13:36,800
um but there were like i guess

00:13:34,959 --> 00:13:37,839
proto-developer advocates back in the

00:13:36,800 --> 00:13:39,279
day who were like

00:13:37,839 --> 00:13:40,720
at ibm and they were listening to the

00:13:39,279 --> 00:13:41,839
community and attending all the share

00:13:40,720 --> 00:13:44,320
events and

00:13:41,839 --> 00:13:45,600
part of the vm community and they were

00:13:44,320 --> 00:13:46,800
like listen ibm

00:13:45,600 --> 00:13:48,639
we need to pay attention to this

00:13:46,800 --> 00:13:51,760
virtualization thing because

00:13:48,639 --> 00:13:54,240
it's important but things have gotten

00:13:51,760 --> 00:13:54,240
much better

00:13:55,120 --> 00:14:01,920
and then if you skip forward 1970s 1980s

00:13:59,600 --> 00:14:03,680
at the end of the 90s there was a group

00:14:01,920 --> 00:14:04,720
of folks that got together and were like

00:14:03,680 --> 00:14:07,440
hey

00:14:04,720 --> 00:14:09,440
what if we can put linux on a mainframe

00:14:07,440 --> 00:14:12,320
and just to remind you of this time

00:14:09,440 --> 00:14:12,639
um this is when like funny funny essays

00:14:12,320 --> 00:14:14,240
like

00:14:12,639 --> 00:14:17,040
how to install linux on a dead badger

00:14:14,240 --> 00:14:18,639
came out and all kinds of like

00:14:17,040 --> 00:14:19,839
silly things about you can install linux

00:14:18,639 --> 00:14:21,360
on everything and it was kind of like a

00:14:19,839 --> 00:14:22,800
hobby that people got into like you

00:14:21,360 --> 00:14:24,639
could just install linux on

00:14:22,800 --> 00:14:26,639
all kinds of things and it was a lot of

00:14:24,639 --> 00:14:28,800
fun so it was it started as like a hobby

00:14:26,639 --> 00:14:30,079
project

00:14:28,800 --> 00:14:31,839
and the community members are like we're

00:14:30,079 --> 00:14:34,320
doing this thing and then ibm's like

00:14:31,839 --> 00:14:35,440
oh my gosh we're working on that too um

00:14:34,320 --> 00:14:37,279
so

00:14:35,440 --> 00:14:38,720
there was the community port and then in

00:14:37,279 --> 00:14:41,120
december 1999

00:14:38,720 --> 00:14:43,279
ibm released the first just like binary

00:14:41,120 --> 00:14:47,040
blob linux kernel patches

00:14:43,279 --> 00:14:49,519
for the mainframe for s390x and so

00:14:47,040 --> 00:14:52,000
ibm's support of it is now just almost

00:14:49,519 --> 00:14:55,279
almost 21 years

00:14:52,000 --> 00:14:58,560
on z and that was like a 2-2

00:14:55,279 --> 00:15:00,240
so this was this was some time ago um

00:14:58,560 --> 00:15:01,680
a few organizations got involved in

00:15:00,240 --> 00:15:03,519
releasing linux versions

00:15:01,680 --> 00:15:05,519
um but the first one that still exists

00:15:03,519 --> 00:15:07,279
now was sles so

00:15:05,519 --> 00:15:08,639
susan enterprise linux server was the

00:15:07,279 --> 00:15:11,600
first real like

00:15:08,639 --> 00:15:12,880
still in production enterprise server to

00:15:11,600 --> 00:15:15,440
support linux

00:15:12,880 --> 00:15:16,320
and that was in october 2000 and that

00:15:15,440 --> 00:15:18,320
one

00:15:16,320 --> 00:15:19,760
is interesting because i know it's just

00:15:18,320 --> 00:15:21,839
a branding thing

00:15:19,760 --> 00:15:24,240
but technically when suse came out with

00:15:21,839 --> 00:15:26,959
this it was called an enterprise server

00:15:24,240 --> 00:15:29,680
because it ran on mainframes

00:15:26,959 --> 00:15:31,519
um they came out with the x86 version

00:15:29,680 --> 00:15:33,279
and branded it the same way because

00:15:31,519 --> 00:15:35,440
like everything's enterprise anyone can

00:15:33,279 --> 00:15:39,040
use this several months later

00:15:35,440 --> 00:15:41,920
so i like to say that xcd6 is actually

00:15:39,040 --> 00:15:41,920
the slesport

00:15:42,560 --> 00:15:47,279
um anyway red hat came out soon soon

00:15:45,680 --> 00:15:49,040
after sles they their

00:15:47,279 --> 00:15:50,639
red hat version for the enterprise came

00:15:49,040 --> 00:15:52,639
out on s390x

00:15:50,639 --> 00:15:55,440
um ubuntu support eventually came along

00:15:52,639 --> 00:15:57,839
that was in 2016 and began with the 1604

00:15:55,440 --> 00:15:57,839
release

00:15:58,000 --> 00:16:04,000
um moving forward a few more years

00:16:02,000 --> 00:16:05,680
eventually ibm was like hey we should

00:16:04,000 --> 00:16:08,480
have a linux only mainframe

00:16:05,680 --> 00:16:10,079
so in 2015 they did this big splash like

00:16:08,480 --> 00:16:12,000
a keynote at the linux foundation's

00:16:10,079 --> 00:16:14,560
linuxcon

00:16:12,000 --> 00:16:15,920
where they had um like some of the the

00:16:14,560 --> 00:16:17,040
shells of these machines they didn't

00:16:15,920 --> 00:16:18,399
actually bring a mainframe they bought

00:16:17,040 --> 00:16:19,519
like the shell so people could get

00:16:18,399 --> 00:16:22,240
selfies with it

00:16:19,519 --> 00:16:25,279
of their first linux one machines so

00:16:22,240 --> 00:16:26,720
they have the emperor and the rockhopper

00:16:25,279 --> 00:16:28,079
emperors are big penguins rockhoppers

00:16:26,720 --> 00:16:29,199
are little penguins so you could say the

00:16:28,079 --> 00:16:31,360
big one is

00:16:29,199 --> 00:16:33,040
the emperor little one's the rockhopper

00:16:31,360 --> 00:16:33,839
in 2017 they came out with the second

00:16:33,040 --> 00:16:36,480
iteration

00:16:33,839 --> 00:16:38,560
the emperor two and the rockhopper ii

00:16:36,480 --> 00:16:40,880
and then last year in september

00:16:38,560 --> 00:16:43,680
the linux one three came out they

00:16:40,880 --> 00:16:45,680
dropped the cute penguin names

00:16:43,680 --> 00:16:47,199
um but then the rockhopper ii was the

00:16:45,680 --> 00:16:48,560
first one that actually fit into like a

00:16:47,199 --> 00:16:50,639
19-inch rack spot

00:16:48,560 --> 00:16:52,480
but now they all fit into that spot as

00:16:50,639 --> 00:16:55,040
of last year so

00:16:52,480 --> 00:16:56,320
the linux 1 3 and the z15 they're all 19

00:16:55,040 --> 00:16:58,639
inches so they just

00:16:56,320 --> 00:17:00,079
fit into normal space and i don't tell

00:16:58,639 --> 00:17:00,720
you this because i'm trying to sell you

00:17:00,079 --> 00:17:03,199
one

00:17:00,720 --> 00:17:04,160
because i don't know how and they won't

00:17:03,199 --> 00:17:07,520
let me have one

00:17:04,160 --> 00:17:09,679
either um but i am gonna be able to get

00:17:07,520 --> 00:17:11,120
you free access to one so

00:17:09,679 --> 00:17:13,120
stay tuned i will talk about that in a

00:17:11,120 --> 00:17:16,000
few slides um

00:17:13,120 --> 00:17:16,720
and the other thing is that like ibm

00:17:16,000 --> 00:17:18,799
does not

00:17:16,720 --> 00:17:20,079
invest in products unless they are very

00:17:18,799 --> 00:17:21,600
serious about them

00:17:20,079 --> 00:17:23,360
and so not only did they release one of

00:17:21,600 --> 00:17:24,720
these in 2015 they've been doing it

00:17:23,360 --> 00:17:27,839
every two years since then

00:17:24,720 --> 00:17:30,080
so like this is i mean for me this is

00:17:27,839 --> 00:17:31,039
really solid proof that linux is winning

00:17:30,080 --> 00:17:33,280
for them

00:17:31,039 --> 00:17:35,919
and there is a really good strategy here

00:17:33,280 --> 00:17:37,280
around linux on the mainframe and it's

00:17:35,919 --> 00:17:39,200
really backed by like

00:17:37,280 --> 00:17:40,640
they have like a whole marketing team

00:17:39,200 --> 00:17:43,600
devoted to linux one

00:17:40,640 --> 00:17:44,960
they have i mean they hired me um and

00:17:43,600 --> 00:17:46,160
they they have a whole bunch of people

00:17:44,960 --> 00:17:50,000
working on it

00:17:46,160 --> 00:17:53,360
so they're very like super serious about

00:17:50,000 --> 00:17:56,400
using linux

00:17:53,360 --> 00:18:01,840
on the mainframe these days

00:17:56,400 --> 00:18:01,840
just get some water

00:18:03,039 --> 00:18:06,160
so kind of cycling back to where i was

00:18:04,640 --> 00:18:09,760
talking about

00:18:06,160 --> 00:18:13,520
um what it means when you when you

00:18:09,760 --> 00:18:15,679
run linux on the mainframe um

00:18:13,520 --> 00:18:16,559
there's a lot of porting work going on

00:18:15,679 --> 00:18:18,640
so some of it

00:18:16,559 --> 00:18:20,400
just works fine um if you're a small

00:18:18,640 --> 00:18:21,360
open source project written in python or

00:18:20,400 --> 00:18:23,280
go

00:18:21,360 --> 00:18:24,480
nodejs your application will probably

00:18:23,280 --> 00:18:26,799
just run fine

00:18:24,480 --> 00:18:28,400
um if you're doing lower level languages

00:18:26,799 --> 00:18:30,240
that that is where you can sometimes run

00:18:28,400 --> 00:18:33,440
into endian problems because

00:18:30,240 --> 00:18:36,400
mainframe is big endian x86

00:18:33,440 --> 00:18:37,280
little endian so that's like related to

00:18:36,400 --> 00:18:38,960
memory

00:18:37,280 --> 00:18:41,120
um and how things are allocated in the

00:18:38,960 --> 00:18:42,000
languages so sometimes you do find

00:18:41,120 --> 00:18:43,600
issues

00:18:42,000 --> 00:18:45,039
with memory if you're using a lower

00:18:43,600 --> 00:18:46,240
level language and are doing very

00:18:45,039 --> 00:18:49,200
specific hardware

00:18:46,240 --> 00:18:50,960
close to hardware stuff um but if you

00:18:49,200 --> 00:18:52,880
are just using you know python

00:18:50,960 --> 00:18:54,840
again like that's it's just gonna run

00:18:52,880 --> 00:18:57,520
probably fine

00:18:54,840 --> 00:19:00,160
um but there are some things like

00:18:57,520 --> 00:19:01,520
i saw an issue with golang recently

00:19:00,160 --> 00:19:02,960
because someone was calling out to an

00:19:01,520 --> 00:19:04,559
assembler interpreter

00:19:02,960 --> 00:19:06,080
and the assembler interpreter inside of

00:19:04,559 --> 00:19:09,120
go is

00:19:06,080 --> 00:19:13,120
very x86 focused um so it was

00:19:09,120 --> 00:19:15,280
they were seeing some bugs with s390x

00:19:13,120 --> 00:19:16,160
um there was a tensorflow bug that i saw

00:19:15,280 --> 00:19:18,799
recently

00:19:16,160 --> 00:19:20,720
because some of the data sets weren't

00:19:18,799 --> 00:19:22,080
working as is expected um when they were

00:19:20,720 --> 00:19:23,440
doing the machine learning work

00:19:22,080 --> 00:19:25,520
um but these are all things that are

00:19:23,440 --> 00:19:27,280
being worked on um and this is kind of

00:19:25,520 --> 00:19:28,880
just our vanity slide of like

00:19:27,280 --> 00:19:30,480
here's a lot of open source like major

00:19:28,880 --> 00:19:33,039
open source projects

00:19:30,480 --> 00:19:33,600
um and here's how they're running on the

00:19:33,039 --> 00:19:34,720
on

00:19:33,600 --> 00:19:36,799
mainframe like these are all like

00:19:34,720 --> 00:19:39,919
verified ones from both ibm

00:19:36,799 --> 00:19:40,640
and the partners so lots of really good

00:19:39,919 --> 00:19:43,919
stuff

00:19:40,640 --> 00:19:43,919
and there's a link on the bottom here

00:19:44,160 --> 00:19:48,320
there are also docker images if you're

00:19:46,720 --> 00:19:50,080
in the container world

00:19:48,320 --> 00:19:52,080
this is just another sampling of them

00:19:50,080 --> 00:19:53,440
these are the official docker images on

00:19:52,080 --> 00:19:56,960
docker hub

00:19:53,440 --> 00:19:59,280
um and so again since these are

00:19:56,960 --> 00:20:01,360
on an s390x architecture you have to

00:19:59,280 --> 00:20:03,840
build the container

00:20:01,360 --> 00:20:05,280
for the software to run so you can use

00:20:03,840 --> 00:20:07,280
your same docker file

00:20:05,280 --> 00:20:08,559
and just add in like an architecture

00:20:07,280 --> 00:20:10,080
flag and then when you're building it

00:20:08,559 --> 00:20:11,679
you just build for the specific

00:20:10,080 --> 00:20:13,760
architecture and you have to be on that

00:20:11,679 --> 00:20:17,039
machine to build for that architecture

00:20:13,760 --> 00:20:19,039
um but i i can give you a free vm so you

00:20:17,039 --> 00:20:21,520
can do that easily

00:20:19,039 --> 00:20:22,640
um but there's there's all kinds of

00:20:21,520 --> 00:20:25,600
tools out there again

00:20:22,640 --> 00:20:26,960
it's like a whole wide world of great

00:20:25,600 --> 00:20:29,360
stuff

00:20:26,960 --> 00:20:30,960
um and one of the other things i want to

00:20:29,360 --> 00:20:32,480
mention is

00:20:30,960 --> 00:20:33,520
um i mentioned i don't know if i

00:20:32,480 --> 00:20:34,480
mentioned the beginning there's there's

00:20:33,520 --> 00:20:37,520
crypto cards

00:20:34,480 --> 00:20:38,480
inside of mainframe so there's a crypto

00:20:37,520 --> 00:20:41,919
co-processor

00:20:38,480 --> 00:20:43,679
inside of the the general processor

00:20:41,919 --> 00:20:47,120
and then there's also things like your

00:20:43,679 --> 00:20:49,200
hsm um we call it a crypto express card

00:20:47,120 --> 00:20:50,400
which handles like key storage and

00:20:49,200 --> 00:20:53,600
things like that

00:20:50,400 --> 00:20:55,840
um but and i was worried that in order

00:20:53,600 --> 00:20:56,480
to use this stuff you might have to use

00:20:55,840 --> 00:20:59,679
like some

00:20:56,480 --> 00:21:02,000
ibm proprietary blobby thing and

00:20:59,679 --> 00:21:03,760
because i've worked on other

00:21:02,000 --> 00:21:05,120
architectures before and i know how it

00:21:03,760 --> 00:21:06,720
can sometimes be

00:21:05,120 --> 00:21:08,640
whereas like if you want to use the

00:21:06,720 --> 00:21:11,200
hardware support sure like add this

00:21:08,640 --> 00:21:13,039
giant glob onto your ssl binary or use

00:21:11,200 --> 00:21:13,760
an entire binary entirely that's

00:21:13,039 --> 00:21:15,200
different

00:21:13,760 --> 00:21:18,559
and now you have to wedge that into your

00:21:15,200 --> 00:21:20,799
apache config but it's not that way

00:21:18,559 --> 00:21:22,400
um it is like the support is actually

00:21:20,799 --> 00:21:24,159
built into openssl

00:21:22,400 --> 00:21:25,440
you just add the changes in in your

00:21:24,159 --> 00:21:28,960
config file um

00:21:25,440 --> 00:21:31,679
to use the um the lib ica

00:21:28,960 --> 00:21:34,000
crypto library for s390x and then you're

00:21:31,679 --> 00:21:35,440
automatically using the crypto library

00:21:34,000 --> 00:21:37,919
or the crypto hardware

00:21:35,440 --> 00:21:39,520
inside the mainframe processors to do

00:21:37,919 --> 00:21:42,240
everything from like ssh

00:21:39,520 --> 00:21:44,000
to apache mod ssl kernel level you're

00:21:42,240 --> 00:21:46,159
just using dmcrypt so when you're

00:21:44,000 --> 00:21:48,000
encrypting your disk you're not using

00:21:46,159 --> 00:21:50,480
special tooling you're

00:21:48,000 --> 00:21:52,480
using the hardware on the mainframe but

00:21:50,480 --> 00:21:54,159
you're still just using dmcrypt

00:21:52,480 --> 00:21:57,039
so it's stuff that you're just familiar

00:21:54,159 --> 00:22:01,120
with already um

00:21:57,039 --> 00:22:04,400
and then you know if you're using a yes

00:22:01,120 --> 00:22:06,559
it's built into the language too so

00:22:04,400 --> 00:22:08,480
you can be using crypto on go and

00:22:06,559 --> 00:22:13,440
leveraging the mainframe hardware

00:22:08,480 --> 00:22:17,280
and this was like

00:22:13,440 --> 00:22:17,600
i was still running to some proprietary

00:22:17,280 --> 00:22:23,440
bit

00:22:17,600 --> 00:22:27,520
but it's mostly a really good situation

00:22:23,440 --> 00:22:29,840
and that's that's really exciting

00:22:27,520 --> 00:22:31,679
so how do you go about finding what open

00:22:29,840 --> 00:22:34,880
source is available for

00:22:31,679 --> 00:22:37,440
linux on the mainframe

00:22:34,880 --> 00:22:38,000
so the first thing i would do is just

00:22:37,440 --> 00:22:40,480
search

00:22:38,000 --> 00:22:42,400
your package repository in your ubuntu

00:22:40,480 --> 00:22:46,000
or sleds or red hat or whatever

00:22:42,400 --> 00:22:47,520
and just see if builds exist um

00:22:46,000 --> 00:22:48,720
and and see if the package exists

00:22:47,520 --> 00:22:50,400
already in your operating system if you

00:22:48,720 --> 00:22:53,440
do you know apt-get install

00:22:50,400 --> 00:22:54,640
you're good sorry apt install and then

00:22:53,440 --> 00:22:57,360
then you've got it

00:22:54,640 --> 00:22:58,880
um and then if if that doesn't work um

00:22:57,360 --> 00:23:02,159
you can go to the project website

00:22:58,880 --> 00:23:05,679
and see if they have s390x builds

00:23:02,159 --> 00:23:08,640
um if not um

00:23:05,679 --> 00:23:10,240
you can also look at the ibm verified

00:23:08,640 --> 00:23:11,200
software list which is the one i linked

00:23:10,240 --> 00:23:14,000
on that slide and

00:23:11,200 --> 00:23:16,159
it's linked here too that one has all

00:23:14,000 --> 00:23:16,960
the ones that ibm is working on with the

00:23:16,159 --> 00:23:21,039
community

00:23:16,960 --> 00:23:23,840
and with other partners in the ecosystem

00:23:21,039 --> 00:23:24,720
and if if there's not a software package

00:23:23,840 --> 00:23:27,200
for it

00:23:24,720 --> 00:23:29,840
there are build instructions for it so

00:23:27,200 --> 00:23:32,559
some of them will have just a list of

00:23:29,840 --> 00:23:33,520
build instructions um to build it on z

00:23:32,559 --> 00:23:35,520
and sometimes it's

00:23:33,520 --> 00:23:37,679
tweaking a configuration file and

00:23:35,520 --> 00:23:40,880
sometimes it's making other changes

00:23:37,679 --> 00:23:42,000
um again docker hub um

00:23:40,880 --> 00:23:44,640
you since you have to search for the

00:23:42,000 --> 00:23:48,240
architecture this is this link here

00:23:44,640 --> 00:23:51,039
actually specifically searches for s390x

00:23:48,240 --> 00:23:52,240
ones and again on places like docker hub

00:23:51,039 --> 00:23:54,240
be aware that

00:23:52,240 --> 00:23:55,600
there are official images that are good

00:23:54,240 --> 00:23:57,440
but you should always audit things

00:23:55,600 --> 00:23:58,640
before you just run a random container

00:23:57,440 --> 00:24:01,760
because there are containers that are

00:23:58,640 --> 00:24:03,520
uploaded by random people like me

00:24:01,760 --> 00:24:04,880
and sometimes malicious people too so

00:24:03,520 --> 00:24:06,880
just be careful um

00:24:04,880 --> 00:24:08,240
just make sure you do audits on

00:24:06,880 --> 00:24:10,240
everything you're working with

00:24:08,240 --> 00:24:11,760
um and then one thing i'm really excited

00:24:10,240 --> 00:24:14,720
about is the software discovery tool

00:24:11,760 --> 00:24:16,880
from the open mainframe project

00:24:14,720 --> 00:24:18,320
this is one that i've been working on it

00:24:16,880 --> 00:24:22,799
uses flask

00:24:18,320 --> 00:24:26,960
and python um the flask is a

00:24:22,799 --> 00:24:29,679
a python web application framework

00:24:26,960 --> 00:24:30,960
and it has a json backend of a bunch of

00:24:29,679 --> 00:24:33,520
software

00:24:30,960 --> 00:24:34,080
that is available so right now the tool

00:24:33,520 --> 00:24:37,120
searches

00:24:34,080 --> 00:24:38,799
um sleds red hat and ubuntu

00:24:37,120 --> 00:24:40,880
defined packages so then you can search

00:24:38,799 --> 00:24:44,559
across all three of those distributions

00:24:40,880 --> 00:24:47,279
we want to add in debian clef os

00:24:44,559 --> 00:24:48,320
and also z os because as i'll get to

00:24:47,279 --> 00:24:50,559
there's also

00:24:48,320 --> 00:24:52,240
open source software for z os so we want

00:24:50,559 --> 00:24:52,559
this to be a software discovery tool to

00:24:52,240 --> 00:24:56,159
like

00:24:52,559 --> 00:24:57,440
finally end this really long search for

00:24:56,159 --> 00:24:58,720
is it on docker hubs is it on the

00:24:57,440 --> 00:25:01,039
verified software list is it in the

00:24:58,720 --> 00:25:02,320
distros you just have one place to go to

00:25:01,039 --> 00:25:06,000
to find this stuff because right now

00:25:02,320 --> 00:25:06,000
it's really just hard to find

00:25:06,960 --> 00:25:11,120
now if you are an open source project

00:25:09,600 --> 00:25:11,760
and are interested in porting your open

00:25:11,120 --> 00:25:14,240
source

00:25:11,760 --> 00:25:16,320
project to this architecture you have a

00:25:14,240 --> 00:25:18,840
few tools available to you

00:25:16,320 --> 00:25:20,240
the first is canonical hosts

00:25:18,840 --> 00:25:22,400
launchpad.net

00:25:20,240 --> 00:25:24,960
which is like their like code sharing

00:25:22,400 --> 00:25:27,600
and build environment for ubuntu

00:25:24,960 --> 00:25:28,080
but in the personal package archive

00:25:27,600 --> 00:25:29,840
section

00:25:28,080 --> 00:25:31,679
you can build your package for other

00:25:29,840 --> 00:25:32,559
architectures so you create your dev

00:25:31,679 --> 00:25:34,000
package

00:25:32,559 --> 00:25:36,640
upload the source for that and then it

00:25:34,000 --> 00:25:39,840
builds the dev packages for x86

00:25:36,640 --> 00:25:40,880
and whatever ones you want arm i think

00:25:39,840 --> 00:25:43,120
power's in there

00:25:40,880 --> 00:25:45,919
and s390x you can just check a check

00:25:43,120 --> 00:25:48,400
mark and it'll build build for you

00:25:45,919 --> 00:25:49,039
similarly the opensuse build service

00:25:48,400 --> 00:25:50,960
will also

00:25:49,039 --> 00:25:52,799
build for s390x i think that one's

00:25:50,960 --> 00:25:55,279
actually automatic

00:25:52,799 --> 00:25:56,400
so again these are using the mainframes

00:25:55,279 --> 00:25:58,960
that you know

00:25:56,400 --> 00:26:00,320
canonical and suse have but they're

00:25:58,960 --> 00:26:01,520
letting community members build their

00:26:00,320 --> 00:26:04,720
software on it which is

00:26:01,520 --> 00:26:06,320
super cool thanks guys um

00:26:04,720 --> 00:26:08,320
there's also if your project is using

00:26:06,320 --> 00:26:09,360
jenkins and you can use external

00:26:08,320 --> 00:26:11,279
builders

00:26:09,360 --> 00:26:14,559
the oregon state university open source

00:26:11,279 --> 00:26:17,919
lab runs some s390x jenkins builders

00:26:14,559 --> 00:26:20,640
so you can apply to use those

00:26:17,919 --> 00:26:23,039
last year travis ci launched a beta

00:26:20,640 --> 00:26:27,360
program for open source projects

00:26:23,039 --> 00:26:29,600
where they um now allow you to

00:26:27,360 --> 00:26:31,679
for open source projects they're allowed

00:26:29,600 --> 00:26:32,960
that they can have access to containers

00:26:31,679 --> 00:26:34,720
to run

00:26:32,960 --> 00:26:36,159
multiple cpu architectures in their

00:26:34,720 --> 00:26:39,520
tests so

00:26:36,159 --> 00:26:41,600
now they have arm power and s390x

00:26:39,520 --> 00:26:42,720
so you can just add a few lines to your

00:26:41,600 --> 00:26:45,039
travis config

00:26:42,720 --> 00:26:47,600
and then use containers um on those

00:26:45,039 --> 00:26:49,840
platforms which is pretty cool

00:26:47,600 --> 00:26:50,799
and this last one is the linux one

00:26:49,840 --> 00:26:52,640
community cloud

00:26:50,799 --> 00:26:55,039
and that is that free access to a

00:26:52,640 --> 00:26:59,120
mainframe i was talking about

00:26:55,039 --> 00:27:02,720
so it's at developer.ibm.com linux1

00:26:59,120 --> 00:27:05,440
it gives you a vm for 120 days

00:27:02,720 --> 00:27:07,120
currently your options are sleds or rel

00:27:05,440 --> 00:27:08,080
um so you can just pick one of those and

00:27:07,120 --> 00:27:10,960
watch the vm

00:27:08,080 --> 00:27:11,440
it's a pretty beefy vm for a free vm

00:27:10,960 --> 00:27:13,039
i'll say

00:27:11,440 --> 00:27:15,360
i was very surprised when i logged in i

00:27:13,039 --> 00:27:16,480
was like wow this has a lot of resources

00:27:15,360 --> 00:27:17,919
actually that's pretty cool

00:27:16,480 --> 00:27:19,440
um it is a shared environment so i

00:27:17,919 --> 00:27:21,200
wouldn't do a lot of benchmarking and

00:27:19,440 --> 00:27:22,880
things on it because it is

00:27:21,200 --> 00:27:24,640
still like it's a community environment

00:27:22,880 --> 00:27:26,080
hosted at a university that we partner

00:27:24,640 --> 00:27:29,360
with

00:27:26,080 --> 00:27:31,039
um so i wouldn't say like if you want to

00:27:29,360 --> 00:27:34,159
do benchmarking on a mainframe you

00:27:31,039 --> 00:27:35,840
should probably do it somewhere else

00:27:34,159 --> 00:27:36,880
but it is it is a really nice place to

00:27:35,840 --> 00:27:38,240
be able to play around with your

00:27:36,880 --> 00:27:39,760
application see if your open source

00:27:38,240 --> 00:27:42,080
project builds

00:27:39,760 --> 00:27:43,919
um and then if you do need access beyond

00:27:42,080 --> 00:27:46,080
that 120 days

00:27:43,919 --> 00:27:46,960
we don't have a way to extend your vm

00:27:46,080 --> 00:27:48,640
but i can

00:27:46,960 --> 00:27:50,720
put you in contact with the folks who

00:27:48,640 --> 00:27:51,279
run the system and we have like a

00:27:50,720 --> 00:27:53,279
special

00:27:51,279 --> 00:27:55,200
place set aside for open source projects

00:27:53,279 --> 00:27:56,399
who want to use it for their ci system

00:27:55,200 --> 00:27:57,919
or just

00:27:56,399 --> 00:28:00,159
their developers testing on it or

00:27:57,919 --> 00:28:03,600
whatnot so we can actually set aside

00:28:00,159 --> 00:28:05,679
a specific thing for you um to

00:28:03,600 --> 00:28:08,320
uh work on your open source project just

00:28:05,679 --> 00:28:08,320
reach out to me

00:28:08,960 --> 00:28:14,240
so that is a lot of linux stuff

00:28:12,480 --> 00:28:16,240
so you can do tons of linux stuff on the

00:28:14,240 --> 00:28:19,200
mainframe yay and mainframes are super

00:28:16,240 --> 00:28:22,399
awesome modern hardware that's awesome

00:28:19,200 --> 00:28:23,840
but um i will say that if you if you

00:28:22,399 --> 00:28:25,440
find yourself working on a mainframe

00:28:23,840 --> 00:28:27,760
that probably means you're at a company

00:28:25,440 --> 00:28:29,600
or an organization that uses mainframes

00:28:27,760 --> 00:28:31,360
and you are definitely going to run into

00:28:29,600 --> 00:28:35,279
zos at some point

00:28:31,360 --> 00:28:37,520
or zvm or any of the other z proprietary

00:28:35,279 --> 00:28:39,200
operating systems that are out there

00:28:37,520 --> 00:28:42,840
so is there open source projects for

00:28:39,200 --> 00:28:45,840
these two of course

00:28:42,840 --> 00:28:47,120
um so one of the things that we're i'm

00:28:45,840 --> 00:28:48,559
not going to go through all of these

00:28:47,120 --> 00:28:50,240
um but one of the things that we're

00:28:48,559 --> 00:28:52,480
super excited about this year is that

00:28:50,240 --> 00:28:55,039
ansible can now control certain

00:28:52,480 --> 00:28:59,120
components of your z os system

00:28:55,039 --> 00:29:00,559
so we're i think just this is probably

00:28:59,120 --> 00:29:02,559
six months ago that we came out with the

00:29:00,559 --> 00:29:06,320
first ansible playbooks

00:29:02,559 --> 00:29:08,000
um that allow you to do um uh do a bunch

00:29:06,320 --> 00:29:09,600
of manipulation on the zos side so you

00:29:08,000 --> 00:29:11,360
still run ansible on like

00:29:09,600 --> 00:29:13,039
your linux machine wherever that is it

00:29:11,360 --> 00:29:14,799
can be on z or it can just be you know

00:29:13,039 --> 00:29:16,320
on your cloud or whatever

00:29:14,799 --> 00:29:17,840
but it can now control a bunch of the

00:29:16,320 --> 00:29:20,880
stuff inside of z os

00:29:17,840 --> 00:29:23,279
and that is really amazing because now

00:29:20,880 --> 00:29:23,919
you don't need to be like you need to

00:29:23,279 --> 00:29:25,600
understand

00:29:23,919 --> 00:29:26,960
the fundamentals of z os to understand

00:29:25,600 --> 00:29:28,080
why you're actually manipulating and

00:29:26,960 --> 00:29:31,039
what you're changing

00:29:28,080 --> 00:29:32,880
on the system but you don't have to use

00:29:31,039 --> 00:29:34,480
the green on black terminals you don't

00:29:32,880 --> 00:29:35,360
need to be familiar with all of that old

00:29:34,480 --> 00:29:39,200
stuff

00:29:35,360 --> 00:29:41,120
which i think is really cool and fun

00:29:39,200 --> 00:29:43,360
but if it was seriously my job the

00:29:41,120 --> 00:29:45,840
learning curve is quite steep for z os

00:29:43,360 --> 00:29:47,760
um so ansible is is lowering the barrier

00:29:45,840 --> 00:29:49,760
to entry to that a lot and so

00:29:47,760 --> 00:29:51,919
what what admins are doing now is

00:29:49,760 --> 00:29:52,960
they're like learning things on ansible

00:29:51,919 --> 00:29:54,399
and then when they need to do more

00:29:52,960 --> 00:29:56,000
complicated things that is when they're

00:29:54,399 --> 00:29:59,200
getting their feet wet

00:29:56,000 --> 00:30:02,799
with the um

00:29:59,200 --> 00:30:04,320
the the deeper components um of z os

00:30:02,799 --> 00:30:05,840
and that allows them to be have some

00:30:04,320 --> 00:30:07,760
really early wins

00:30:05,840 --> 00:30:09,200
um with with using ansible and

00:30:07,760 --> 00:30:11,279
controlling z os

00:30:09,200 --> 00:30:13,840
but then dig into the stuff when the

00:30:11,279 --> 00:30:16,559
other stuff when they're ready

00:30:13,840 --> 00:30:17,520
um i'll talk about zoe a little bit um

00:30:16,559 --> 00:30:19,440
we mentioned things like

00:30:17,520 --> 00:30:22,000
node and python and java running on

00:30:19,440 --> 00:30:24,080
linux but this is them running on cos so

00:30:22,000 --> 00:30:27,200
you can run your python applications

00:30:24,080 --> 00:30:28,799
on z os as well java's been on

00:30:27,200 --> 00:30:31,039
the mainframe like for a really long

00:30:28,799 --> 00:30:32,960
time now because um

00:30:31,039 --> 00:30:34,840
java is particularly easy to make

00:30:32,960 --> 00:30:37,600
cross-platform

00:30:34,840 --> 00:30:38,159
um a couple that i'm really excited

00:30:37,600 --> 00:30:40,320
about git

00:30:38,159 --> 00:30:41,919
and bash those are both maintained by

00:30:40,320 --> 00:30:44,559
rocket software

00:30:41,919 --> 00:30:46,159
um and so you can download the the open

00:30:44,559 --> 00:30:48,799
source versions for those

00:30:46,159 --> 00:30:50,480
um and the git stuff is great because it

00:30:48,799 --> 00:30:53,760
allows you to integrate like

00:30:50,480 --> 00:30:55,520
devops pipelines and things um by just

00:30:53,760 --> 00:30:57,440
pulling things directly from git on your

00:30:55,520 --> 00:31:00,640
zos system and we'll talk about

00:30:57,440 --> 00:31:00,640
devops in a minute too

00:31:01,679 --> 00:31:05,679
and the other thing i want to talk about

00:31:03,600 --> 00:31:07,360
is the open mainframe project now

00:31:05,679 --> 00:31:08,960
currently a lot of these projects are

00:31:07,360 --> 00:31:12,480
very focused on

00:31:08,960 --> 00:31:14,640
z os and the other operating systems

00:31:12,480 --> 00:31:15,919
traditionally um like my software

00:31:14,640 --> 00:31:17,360
discovery tools in there

00:31:15,919 --> 00:31:19,919
and that one crosses the border into

00:31:17,360 --> 00:31:23,360
linux there is a

00:31:19,919 --> 00:31:24,640
um oh yeah the anomaly detection engine

00:31:23,360 --> 00:31:27,519
for linux logs

00:31:24,640 --> 00:31:28,559
that allows you to pull in um linux logs

00:31:27,519 --> 00:31:31,200
into the same

00:31:28,559 --> 00:31:31,840
reporting format that cos logs are in so

00:31:31,200 --> 00:31:33,679
that

00:31:31,840 --> 00:31:35,120
like traditional mainframers can read

00:31:33,679 --> 00:31:35,840
linux logs because they're just they're

00:31:35,120 --> 00:31:38,320
so different

00:31:35,840 --> 00:31:38,880
that um having like a unified panel for

00:31:38,320 --> 00:31:41,200
all of your

00:31:38,880 --> 00:31:42,080
your logging was was really valuable to

00:31:41,200 --> 00:31:44,240
them

00:31:42,080 --> 00:31:46,080
um but what the open mainframe project

00:31:44,240 --> 00:31:49,360
does is they are part of the linux

00:31:46,080 --> 00:31:52,720
foundation and so we have like a board

00:31:49,360 --> 00:31:54,960
and a technical group um and they

00:31:52,720 --> 00:31:56,480
sort of oversee everything and they're

00:31:54,960 --> 00:31:58,480
they come from a variety of companies

00:31:56,480 --> 00:32:00,399
ibm is just one of them

00:31:58,480 --> 00:32:02,799
and they oversee the project um the

00:32:00,399 --> 00:32:04,320
project provides project hosting for all

00:32:02,799 --> 00:32:06,640
these projects

00:32:04,320 --> 00:32:09,120
um so that means like virtual machines

00:32:06,640 --> 00:32:10,640
and they help them with ci systems they

00:32:09,120 --> 00:32:11,919
they really like hold our hands they're

00:32:10,640 --> 00:32:14,080
like okay let me help you set up your

00:32:11,919 --> 00:32:15,519
first meeting let me

00:32:14,080 --> 00:32:17,200
get everyone signed up for your mailing

00:32:15,519 --> 00:32:19,760
list and they really

00:32:17,200 --> 00:32:21,279
walk you through the process they just

00:32:19,760 --> 00:32:24,480
had their inaugural summit

00:32:21,279 --> 00:32:25,679
last last month so it was a big online

00:32:24,480 --> 00:32:27,120
conference

00:32:25,679 --> 00:32:29,440
it had originally supposed to be in

00:32:27,120 --> 00:32:31,360
person but they had a big

00:32:29,440 --> 00:32:32,640
virtual event um and now they have mini

00:32:31,360 --> 00:32:35,279
summits so

00:32:32,640 --> 00:32:37,039
um and i think next week week after

00:32:35,279 --> 00:32:38,320
they're they're hosting a mini summit at

00:32:37,039 --> 00:32:41,519
the open source

00:32:38,320 --> 00:32:42,080
um summit eu where they have like a

00:32:41,519 --> 00:32:43,519
little

00:32:42,080 --> 00:32:45,600
bunch of little mainframe talks about

00:32:43,519 --> 00:32:46,960
the projects um

00:32:45,600 --> 00:32:49,519
but i don't want to get too far into

00:32:46,960 --> 00:32:52,960
this because there is a talk later today

00:32:49,519 --> 00:32:54,559
um 4 30 eastern by the program director

00:32:52,960 --> 00:32:56,399
of the open mainframe project and he's

00:32:54,559 --> 00:32:58,240
going to talk about the project

00:32:56,399 --> 00:33:00,640
and how they're helping develop this

00:32:58,240 --> 00:33:02,320
sustainable open source ecosystem

00:33:00,640 --> 00:33:04,240
through the project so if you are

00:33:02,320 --> 00:33:05,840
interested in this topic be sure

00:33:04,240 --> 00:33:08,240
to check out the stock john's a great

00:33:05,840 --> 00:33:10,399
speaker and a great person so

00:33:08,240 --> 00:33:12,240
head over there but i did want to talk

00:33:10,399 --> 00:33:15,600
about zoe

00:33:12,240 --> 00:33:18,000
because it's really cool um so zoe

00:33:15,600 --> 00:33:19,840
is like it's a few different things but

00:33:18,000 --> 00:33:23,120
essentially it's an api

00:33:19,840 --> 00:33:25,200
um that hooks into your zos system and

00:33:23,120 --> 00:33:26,320
gets to pull out data and do lots of

00:33:25,200 --> 00:33:29,039
changes so

00:33:26,320 --> 00:33:30,159
this is what um a lot of the the modern

00:33:29,039 --> 00:33:33,760
like tooling you'll see

00:33:30,159 --> 00:33:36,399
uses and so these these tutorials that i

00:33:33,760 --> 00:33:37,440
that i linked here um they're ways

00:33:36,399 --> 00:33:39,519
people are like

00:33:37,440 --> 00:33:40,640
creating mobile applications that hook

00:33:39,519 --> 00:33:42,960
into the mainframe

00:33:40,640 --> 00:33:44,240
um they're using things like um flutter

00:33:42,960 --> 00:33:47,440
to create

00:33:44,240 --> 00:33:49,120
things like that um this one um from

00:33:47,440 --> 00:33:52,080
vicom infiniti

00:33:49,120 --> 00:33:53,279
they are using like an alexa alternative

00:33:52,080 --> 00:33:56,080
it's an open source

00:33:53,279 --> 00:33:57,679
voice activated assistant and that's

00:33:56,080 --> 00:34:00,080
calling back to a mainframe so

00:33:57,679 --> 00:34:01,679
he's able to like speak commands to it

00:34:00,080 --> 00:34:03,360
and then it goes back to a mainframe and

00:34:01,679 --> 00:34:04,880
then it gets results back and

00:34:03,360 --> 00:34:06,480
that's a really fun conference talk to

00:34:04,880 --> 00:34:09,040
watch

00:34:06,480 --> 00:34:09,679
um and then again like like mainframe

00:34:09,040 --> 00:34:12,159
devops

00:34:09,679 --> 00:34:14,079
stuff um so there's a command line tool

00:34:12,159 --> 00:34:15,200
for zoe that you run like on your local

00:34:14,079 --> 00:34:16,399
system

00:34:15,200 --> 00:34:18,480
so you can run it just on your linux

00:34:16,399 --> 00:34:20,800
laptop or your mac or whatever

00:34:18,480 --> 00:34:22,159
and run zoe and then trigger commands

00:34:20,800 --> 00:34:24,159
and the really cool thing about that is

00:34:22,159 --> 00:34:26,000
it allows you to use like any ci system

00:34:24,159 --> 00:34:28,879
if you want to run a job

00:34:26,000 --> 00:34:29,520
you through zoe on your mainframe you

00:34:28,879 --> 00:34:32,720
just give

00:34:29,520 --> 00:34:34,480
the ci system that bash command

00:34:32,720 --> 00:34:36,639
and like have zoe installed somewhere

00:34:34,480 --> 00:34:38,159
the zoe command line client

00:34:36,639 --> 00:34:39,839
and then it'll go and run your job on

00:34:38,159 --> 00:34:41,359
the mainframe bring back the result and

00:34:39,839 --> 00:34:42,320
then you can pull that into your ci

00:34:41,359 --> 00:34:44,560
system

00:34:42,320 --> 00:34:46,079
so it's allowing a lot of flexibility in

00:34:44,560 --> 00:34:49,280
that way that didn't really exist

00:34:46,079 --> 00:34:50,960
previously on the mainframe but i won't

00:34:49,280 --> 00:34:52,480
i won't go into stealing john's thunder

00:34:50,960 --> 00:34:54,000
anymore about the open mainframe project

00:34:52,480 --> 00:34:56,399
but they are doing really cool stuff

00:34:54,000 --> 00:34:56,399
over there

00:34:57,200 --> 00:35:00,960
and then that brings us like again

00:34:58,880 --> 00:35:02,240
devops stuff so

00:35:00,960 --> 00:35:03,920
one of the things that's been really

00:35:02,240 --> 00:35:05,920
important to the mainframe community is

00:35:03,920 --> 00:35:07,839
modernizing applications

00:35:05,920 --> 00:35:09,520
and modernizing the ways that developers

00:35:07,839 --> 00:35:11,680
interact with the mainframe

00:35:09,520 --> 00:35:13,359
um it's why it's a really exciting time

00:35:11,680 --> 00:35:15,599
for me to be part of this

00:35:13,359 --> 00:35:18,240
is because i did you know devops and

00:35:15,599 --> 00:35:21,359
cloud stuff in my past roles

00:35:18,240 --> 00:35:24,240
um and so coming into the world of

00:35:21,359 --> 00:35:25,440
mainframe and z os and really seeing

00:35:24,240 --> 00:35:28,560
like

00:35:25,440 --> 00:35:30,800
how old some of their processes are

00:35:28,560 --> 00:35:31,839
i mean you've got this amazingly modern

00:35:30,800 --> 00:35:33,760
hardware

00:35:31,839 --> 00:35:36,079
and like you can run linux on it and

00:35:33,760 --> 00:35:39,599
that all side is really great

00:35:36,079 --> 00:35:42,240
but if you still have to learn um

00:35:39,599 --> 00:35:43,119
ispf and i mean there's abbreviations

00:35:42,240 --> 00:35:45,359
for everything

00:35:43,119 --> 00:35:47,359
in mainframe land um but if you have to

00:35:45,359 --> 00:35:49,520
learn all the older tooling it becomes a

00:35:47,359 --> 00:35:51,040
real barrier for new developers

00:35:49,520 --> 00:35:52,640
and it's very frustrating and i've

00:35:51,040 --> 00:35:54,240
talked to people who were like linux

00:35:52,640 --> 00:35:56,079
admins six years ago and said

00:35:54,240 --> 00:35:57,520
you know my work wanted to get me into

00:35:56,079 --> 00:35:58,000
the mainframe stuff but i really

00:35:57,520 --> 00:35:59,599
couldn't do

00:35:58,000 --> 00:36:01,119
it because it was just the learning

00:35:59,599 --> 00:36:02,880
curve was intense

00:36:01,119 --> 00:36:04,880
um but by bringing in a lot of the

00:36:02,880 --> 00:36:05,440
devops tooling and also starting to talk

00:36:04,880 --> 00:36:08,240
about

00:36:05,440 --> 00:36:10,240
devops process like my team is now doing

00:36:08,240 --> 00:36:11,599
agile training

00:36:10,240 --> 00:36:13,920
which would have been unheard of in the

00:36:11,599 --> 00:36:16,079
mainframe space a few years ago

00:36:13,920 --> 00:36:17,839
um and this is just a quote from one of

00:36:16,079 --> 00:36:20,160
the articles i was reading in

00:36:17,839 --> 00:36:21,520
one of the trade magazines it was like

00:36:20,160 --> 00:36:23,760
you know it's not

00:36:21,520 --> 00:36:25,200
your developers no longer have to adapt

00:36:23,760 --> 00:36:27,920
to the mainframe

00:36:25,200 --> 00:36:29,520
world we're adapting to the way that

00:36:27,920 --> 00:36:31,760
modern developers work today

00:36:29,520 --> 00:36:32,560
and that means using things like git and

00:36:31,760 --> 00:36:34,880
jenkins

00:36:32,560 --> 00:36:36,640
and and moving away from waterfall

00:36:34,880 --> 00:36:40,560
development methodologies

00:36:36,640 --> 00:36:42,480
and into the more agile things um

00:36:40,560 --> 00:36:44,800
so there's lots of really cool stuff

00:36:42,480 --> 00:36:44,800
going on

00:36:45,839 --> 00:36:49,280
and that is where i wanted to conclude i

00:36:47,920 --> 00:36:51,280
did want to just say a couple things

00:36:49,280 --> 00:36:52,079
about how it's been for me working in

00:36:51,280 --> 00:36:55,359
this

00:36:52,079 --> 00:36:58,640
very enterprisey world in open source

00:36:55,359 --> 00:36:59,760
um it's a very different place

00:36:58,640 --> 00:37:01,520
than where i've worked i mean even

00:36:59,760 --> 00:37:02,240
though i've worked on openstack which

00:37:01,520 --> 00:37:04,880
was

00:37:02,240 --> 00:37:06,839
definitely very corporate um but you had

00:37:04,880 --> 00:37:09,680
still a lot of people with open source

00:37:06,839 --> 00:37:11,200
background um i'd like to say sometimes

00:37:09,680 --> 00:37:12,240
like i worked on debian i worked on

00:37:11,200 --> 00:37:14,480
ubuntu

00:37:12,240 --> 00:37:16,079
and i worked on all of this with like

00:37:14,480 --> 00:37:17,440
the same people in openstack

00:37:16,079 --> 00:37:19,520
and now a lot of those same people are

00:37:17,440 --> 00:37:21,440
working on kubernetes and

00:37:19,520 --> 00:37:23,599
like it's it's just there's a lot of

00:37:21,440 --> 00:37:25,760
open source core to a lot of this

00:37:23,599 --> 00:37:27,200
um but in the mainframe world that's not

00:37:25,760 --> 00:37:29,040
quite as true

00:37:27,200 --> 00:37:30,720
um it's been really interesting working

00:37:29,040 --> 00:37:32,000
with people whose relationships are a

00:37:30,720 --> 00:37:34,640
lot more formal

00:37:32,000 --> 00:37:36,160
there's a lot of partnerships involved a

00:37:34,640 --> 00:37:37,359
lot of companies who are partnering with

00:37:36,160 --> 00:37:38,640
ibm and there's

00:37:37,359 --> 00:37:41,119
you know like sometimes when i want to

00:37:38,640 --> 00:37:43,040
give a vm to an open source project

00:37:41,119 --> 00:37:44,800
i have to check internally with the team

00:37:43,040 --> 00:37:46,960
to see if there's like some

00:37:44,800 --> 00:37:48,880
strategic business partnerships if

00:37:46,960 --> 00:37:50,880
someone else will own that relationship

00:37:48,880 --> 00:37:52,560
and like it's very different than the

00:37:50,880 --> 00:37:54,800
world i used to work in like when i was

00:37:52,560 --> 00:37:56,560
working on debian and we were just

00:37:54,800 --> 00:37:58,720
building packages and putting them up in

00:37:56,560 --> 00:38:01,119
the repository like

00:37:58,720 --> 00:38:02,560
um and it's also i mean it's really

00:38:01,119 --> 00:38:04,000
exciting for me because i get to do a

00:38:02,560 --> 00:38:05,280
lot of internal training about open

00:38:04,000 --> 00:38:07,680
source because

00:38:05,280 --> 00:38:08,320
people inside of ibm are a little bit

00:38:07,680 --> 00:38:10,079
shy

00:38:08,320 --> 00:38:12,480
to share what they're learning and what

00:38:10,079 --> 00:38:14,400
they're working on even if it is very

00:38:12,480 --> 00:38:15,920
open and they're allowed to like i'm

00:38:14,400 --> 00:38:18,880
nudging them like i wanted one of them

00:38:15,920 --> 00:38:20,640
to give this talk but there's no no no

00:38:18,880 --> 00:38:23,040
so i'm trying to like pull people out of

00:38:20,640 --> 00:38:24,720
their shells at ibm and

00:38:23,040 --> 00:38:26,240
it through our partners and like one of

00:38:24,720 --> 00:38:28,160
the ways that we did that recently is we

00:38:26,240 --> 00:38:31,359
had ibm z day

00:38:28,160 --> 00:38:32,640
a conference last month and like i just

00:38:31,359 --> 00:38:34,480
went to like all my like

00:38:32,640 --> 00:38:35,839
the most technical contacts i could find

00:38:34,480 --> 00:38:37,200
in like other companies

00:38:35,839 --> 00:38:38,400
i was like hey you should give a talk on

00:38:37,200 --> 00:38:39,680
this they're like oh i don't know i'm

00:38:38,400 --> 00:38:41,280
like but you're the most brilliant

00:38:39,680 --> 00:38:41,839
person i know on this topic and they're

00:38:41,280 --> 00:38:44,400
like

00:38:41,839 --> 00:38:45,920
well i have to check with legal and then

00:38:44,400 --> 00:38:47,119
it was all fine everyone was able to

00:38:45,920 --> 00:38:50,240
speak and they were great

00:38:47,119 --> 00:38:51,119
so um it's just a very different world

00:38:50,240 --> 00:38:53,280
of teaching

00:38:51,119 --> 00:38:54,800
the enterprise folks how to do open

00:38:53,280 --> 00:38:56,800
source and that they are allowed to

00:38:54,800 --> 00:38:57,839
share it and we want them to in this in

00:38:56,800 --> 00:38:59,520
this world

00:38:57,839 --> 00:39:01,359
um so that's where i'm really excited

00:38:59,520 --> 00:39:02,400
that the open mainframe project is doing

00:39:01,359 --> 00:39:05,200
so well like

00:39:02,400 --> 00:39:06,320
2020 for all its faults it's been a

00:39:05,200 --> 00:39:08,640
banner year

00:39:06,320 --> 00:39:10,320
with the open mainframe project there's

00:39:08,640 --> 00:39:13,359
a bunch of new projects there's a new

00:39:10,320 --> 00:39:14,640
open source cobol class um that

00:39:13,359 --> 00:39:16,320
open source but i mean anyone can

00:39:14,640 --> 00:39:18,320
contribute to the cobol class it's still

00:39:16,320 --> 00:39:19,920
for cobalt enterprise but

00:39:18,320 --> 00:39:21,359
there's like all kinds of interesting

00:39:19,920 --> 00:39:23,040
stuff happening with the project

00:39:21,359 --> 00:39:24,640
and like it's really gaining momentum

00:39:23,040 --> 00:39:26,640
after like um

00:39:24,640 --> 00:39:28,640
five years of work put into building up

00:39:26,640 --> 00:39:30,480
to this point

00:39:28,640 --> 00:39:31,920
but people are getting it and we're

00:39:30,480 --> 00:39:34,480
bringing a lot more people into the open

00:39:31,920 --> 00:39:34,480
source world

00:39:35,040 --> 00:39:41,280
so i am going to exit my slides

00:39:38,320 --> 00:39:43,680
and stop sharing my screen and if anyone

00:39:41,280 --> 00:39:46,560
has any questions i will be

00:39:43,680 --> 00:39:46,560
taking them now

00:39:46,880 --> 00:39:52,880
well let's give our speaker a virtual

00:39:49,599 --> 00:39:54,640
round of applause and we do have uh

00:39:52,880 --> 00:39:56,079
one well we'll say one question and one

00:39:54,640 --> 00:39:58,640
comment in the q

00:39:56,079 --> 00:40:00,240
a right now but you all can add your

00:39:58,640 --> 00:40:01,920
questions there for about the next four

00:40:00,240 --> 00:40:04,240
minutes we've got left

00:40:01,920 --> 00:40:05,839
christine asked if the mainframe

00:40:04,240 --> 00:40:06,480
business is going to remain a part of

00:40:05,839 --> 00:40:08,000
ibm

00:40:06,480 --> 00:40:10,079
or if it's going to be spun off in the

00:40:08,000 --> 00:40:11,599
new world of ibm's new

00:40:10,079 --> 00:40:13,760
company that they announced and i have

00:40:11,599 --> 00:40:16,160
no idea if you know the answer to that

00:40:13,760 --> 00:40:17,040
yeah no that that's a great question so

00:40:16,160 --> 00:40:18,440
um i don't

00:40:17,040 --> 00:40:20,560
for those of you who haven't heard the

00:40:18,440 --> 00:40:22,839
news um ibm is

00:40:20,560 --> 00:40:25,760
is splitting off part of the

00:40:22,839 --> 00:40:28,640
organization to focus on like

00:40:25,760 --> 00:40:30,319
um i forget they're doing something and

00:40:28,640 --> 00:40:33,119
then there's like the i

00:40:30,319 --> 00:40:34,240
ibm core wants to focus on like hybrid

00:40:33,119 --> 00:40:37,119
cloud and stuff

00:40:34,240 --> 00:40:38,319
so the mainframe is actually part of the

00:40:37,119 --> 00:40:41,839
hybrid cloud staying

00:40:38,319 --> 00:40:42,960
in ibm um mainframe is an important part

00:40:41,839 --> 00:40:44,560
of

00:40:42,960 --> 00:40:46,319
cloudy stuff that we're doing because we

00:40:44,560 --> 00:40:47,839
do have mainframe cloud things and

00:40:46,319 --> 00:40:49,440
offerings and all that stuff so

00:40:47,839 --> 00:40:50,960
nothing's gonna change for me really

00:40:49,440 --> 00:40:53,839
it's a good question though we were

00:40:50,960 --> 00:40:53,839
asking it too

00:40:55,119 --> 00:40:59,440
great uh the only other uh question in

00:40:56,960 --> 00:41:00,960
there uh right now is currently john

00:40:59,440 --> 00:41:04,240
just pointed out that

00:41:00,960 --> 00:41:07,680
he knew who uh ported alpine linux over

00:41:04,240 --> 00:41:11,520
uh that was uh tuan huang who was a

00:41:07,680 --> 00:41:15,440
open uh mainframe project mt

00:41:11,520 --> 00:41:15,920
open mainframe that's right i knew it

00:41:15,440 --> 00:41:18,160
was

00:41:15,920 --> 00:41:20,240
a mentee or an intern or something but

00:41:18,160 --> 00:41:22,000
you're okay thank you for clarifying yes

00:41:20,240 --> 00:41:23,520
it was an open mainframe project

00:41:22,000 --> 00:41:25,119
since the open mainframe project does

00:41:23,520 --> 00:41:26,880
they have a mentoring program that's

00:41:25,119 --> 00:41:35,839
cool

00:41:26,880 --> 00:41:35,839
so so any other questions

00:41:48,960 --> 00:41:52,640
well um i'm going to put these slides on

00:41:50,960 --> 00:41:54,960
my website and i'll tweet them out

00:41:52,640 --> 00:41:56,319
and if anyone has questions feel free to

00:41:54,960 --> 00:42:03,839
reach out to me i'm

00:41:56,319 --> 00:42:03,839
happy to answer them

00:42:04,240 --> 00:42:06,319

YouTube URL: https://www.youtube.com/watch?v=yoBm5BplP0M


