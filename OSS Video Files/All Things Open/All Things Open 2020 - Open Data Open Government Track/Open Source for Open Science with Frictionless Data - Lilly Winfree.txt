Title: Open Source for Open Science with Frictionless Data - Lilly Winfree
Publication date: 2020-12-18
Playlist: All Things Open 2020 - Open Data Open Government Track
Description: 
	Presented by: Lilly Winfree, Open Knowledge Foundation
Presented at All Things Open 2020 - Open Data/Open Government Track

Abstract: Scientific research is undergoing a cultural change, pivoting towards more transparency and openness spurred by what some have termed a “reproducibility crisis”. Many data and findings from published research are not replicable, leading to decreased scientific rigor and reduced public trust in science. But, many scientists and developers are now starting to work on making research more reproducible, and open source projects are a natural fit to help. This talk will discuss how our open source project, Frictionless Data for Reproducible Research, aims to improve researchers’ data workflows and champion reproducible science. The Frictionless Data initiative (https://frictionlessdata.io/) at Open Knowledge Foundation (http://okfn.org) aims to reduce friction in working with data, with a goal to go from messy data to insight faster. “Frictions”, such as when data is in a difficult to use format, is hard to find, or is poorly structured, make it difficult to use, publish, and share data. This project is a suite of open source software, tools, and specifications (https://frictionlessdata.io/tooling/data-package-tools ; https://specs.frictionlessdata.io/) focused on improving data and metadata interoperability that make it effortless to transport data among different tools and platforms for further analysis. In this talk, I will discuss the lessons we learned from integrating this open software into researchers’ existing data pipelines by showcasing recent collaborative use cases with biologists.  For example, I will show how we worked with oceanographers (https://blog.okfn.org/2020/02/10/frictionless-data-pipelines-for-ocean-science/) to implement Frictionless Data Python code into their data ingest pipelines to integrate disparate data while maintaining quality metadata in an easy to use interface. The talk is well suited for scientists and researchers, but is also equally applicable for anyone that works with open data or with messy data. The talk is somewhat technical, but can be easily understood by beginner-level audience members too.
Captions: 
	00:00:04,960 --> 00:00:07,680
i'm really excited to talk to you all

00:00:06,799 --> 00:00:10,880
today

00:00:07,680 --> 00:00:12,880
and this is my first all things open and

00:00:10,880 --> 00:00:14,559
you know it would have been more fun to

00:00:12,880 --> 00:00:17,279
be all together but

00:00:14,559 --> 00:00:18,320
i'm enjoying experiencing the virtual

00:00:17,279 --> 00:00:22,560
atmosphere

00:00:18,320 --> 00:00:23,199
as well so as javi said my name is

00:00:22,560 --> 00:00:25,359
lillian

00:00:23,199 --> 00:00:26,960
and i work on the frictionless data

00:00:25,359 --> 00:00:28,320
project within the open knowledge

00:00:26,960 --> 00:00:30,480
foundation

00:00:28,320 --> 00:00:32,000
and today i'll be telling you about how

00:00:30,480 --> 00:00:36,000
open source can help

00:00:32,000 --> 00:00:37,280
open science i have a lot of links in

00:00:36,000 --> 00:00:40,399
these slides

00:00:37,280 --> 00:00:42,800
so i have published the slides here

00:00:40,399 --> 00:00:45,039
which you can see at this following this

00:00:42,800 --> 00:00:47,200
bitly link and

00:00:45,039 --> 00:00:49,280
i have this link a few places in the

00:00:47,200 --> 00:00:49,680
slide so you can open them up now if you

00:00:49,280 --> 00:00:51,440
want

00:00:49,680 --> 00:00:52,960
i also have it at the end so you can

00:00:51,440 --> 00:00:56,000
open it up later

00:00:52,960 --> 00:00:58,640
and you you can play around with

00:00:56,000 --> 00:01:00,879
the resources that i have linked

00:00:58,640 --> 00:01:02,800
whenever you want to

00:01:00,879 --> 00:01:05,600
i'm going to try and answer questions

00:01:02,800 --> 00:01:07,760
during the talk but if i run out of time

00:01:05,600 --> 00:01:09,200
then you know feel free to follow up

00:01:07,760 --> 00:01:11,119
with me via email

00:01:09,200 --> 00:01:12,560
or on twitter which i've linked both of

00:01:11,119 --> 00:01:14,799
those here

00:01:12,560 --> 00:01:16,560
all right um oh last thing i want to say

00:01:14,799 --> 00:01:18,640
is i want to thank the organizers

00:01:16,560 --> 00:01:19,680
of all things open for helping make this

00:01:18,640 --> 00:01:21,520
conference happen

00:01:19,680 --> 00:01:23,040
i know it's really hard to transition to

00:01:21,520 --> 00:01:25,600
a virtual conference

00:01:23,040 --> 00:01:29,119
and from my perspective it's been very

00:01:25,600 --> 00:01:29,119
smooth so i just want to thank you all

00:01:29,200 --> 00:01:34,640
all right let's get going

00:01:32,640 --> 00:01:37,280
all right so i'm going to try and make

00:01:34,640 --> 00:01:38,320
this somewhat interactive as interactive

00:01:37,280 --> 00:01:40,720
as possible for

00:01:38,320 --> 00:01:41,360
a virtual conference so anytime that you

00:01:40,720 --> 00:01:44,799
see

00:01:41,360 --> 00:01:46,720
an astronaut this is a queue

00:01:44,799 --> 00:01:48,079
that i'm going to be asking the audience

00:01:46,720 --> 00:01:50,399
to participate

00:01:48,079 --> 00:01:51,200
i'm going to be asking you to do write

00:01:50,399 --> 00:01:53,200
some answers

00:01:51,200 --> 00:01:55,119
in the chat so i'll be asking you

00:01:53,200 --> 00:01:58,320
questions but this is also a time

00:01:55,119 --> 00:01:59,680
you can ask me questions as well so

00:01:58,320 --> 00:02:01,840
we're going to start this talk by

00:01:59,680 --> 00:02:04,960
talking about open science

00:02:01,840 --> 00:02:07,439
and i'm going to assume that some of you

00:02:04,960 --> 00:02:08,239
might not be familiar with the term open

00:02:07,439 --> 00:02:10,080
science

00:02:08,239 --> 00:02:11,920
you know this is a open source

00:02:10,080 --> 00:02:13,520
conference and we're in the open data

00:02:11,920 --> 00:02:16,640
and open government track

00:02:13,520 --> 00:02:19,040
so my first question for all of you

00:02:16,640 --> 00:02:20,560
is in the chat can you give me like a

00:02:19,040 --> 00:02:24,400
yes or a no

00:02:20,560 --> 00:02:26,160
if you are familiar with open science

00:02:24,400 --> 00:02:27,520
and i'll give you you know like 30

00:02:26,160 --> 00:02:30,560
seconds or so to

00:02:27,520 --> 00:02:30,560
type that in the chat

00:02:30,800 --> 00:02:34,160
and don't be shy

00:02:34,400 --> 00:02:38,160
okay we're getting yeses this is awesome

00:02:38,239 --> 00:02:41,680
okay basic knowledge perfect

00:02:43,680 --> 00:02:50,239
perfect all right thank you that was

00:02:47,200 --> 00:02:51,680
great first chat experience okay so i'm

00:02:50,239 --> 00:02:52,319
going to talk a little bit about open

00:02:51,680 --> 00:02:55,519
science

00:02:52,319 --> 00:02:57,120
and i like to use this picture to show

00:02:55,519 --> 00:03:00,159
that i'm open science is an

00:02:57,120 --> 00:03:02,879
umbrella term and it

00:03:00,159 --> 00:03:03,680
includes aspects from all of these

00:03:02,879 --> 00:03:06,000
different

00:03:03,680 --> 00:03:08,080
terms but today we're going to be

00:03:06,000 --> 00:03:08,720
specifically focusing on the ones in

00:03:08,080 --> 00:03:11,920
blue

00:03:08,720 --> 00:03:13,680
so open access open data and open source

00:03:11,920 --> 00:03:15,040
and we'll also be talking about how open

00:03:13,680 --> 00:03:18,480
science is

00:03:15,040 --> 00:03:21,440
a cultural change as well

00:03:18,480 --> 00:03:22,080
so open access open access can be

00:03:21,440 --> 00:03:25,360
thought of

00:03:22,080 --> 00:03:28,799
as how science is published

00:03:25,360 --> 00:03:32,319
or shared and in general

00:03:28,799 --> 00:03:33,200
science results are published in journal

00:03:32,319 --> 00:03:36,720
articles

00:03:33,200 --> 00:03:39,280
or manuscripts and generally speaking

00:03:36,720 --> 00:03:41,040
these are published behind a paywall so

00:03:39,280 --> 00:03:41,440
the only way you can access it is if you

00:03:41,040 --> 00:03:45,760
pay

00:03:41,440 --> 00:03:47,840
to read it and this can be very costly

00:03:45,760 --> 00:03:49,599
and this is what's called closed access

00:03:47,840 --> 00:03:52,239
so open access is where

00:03:49,599 --> 00:03:54,720
anyone can read the article for free or

00:03:52,239 --> 00:03:57,360
read the research for free

00:03:54,720 --> 00:03:59,040
open data is the concept of you know

00:03:57,360 --> 00:04:00,640
publishing your data openly

00:03:59,040 --> 00:04:02,239
and in science there's two main ways

00:04:00,640 --> 00:04:05,840
that data gets published

00:04:02,239 --> 00:04:06,879
the first is in a manuscript along with

00:04:05,840 --> 00:04:08,959
the research

00:04:06,879 --> 00:04:09,920
that sometimes this is not published

00:04:08,959 --> 00:04:13,200
openly

00:04:09,920 --> 00:04:14,000
or it's not published at all the other

00:04:13,200 --> 00:04:16,239
way that data gets

00:04:14,000 --> 00:04:19,199
published is in a repository and these

00:04:16,239 --> 00:04:20,880
are usually domain specific

00:04:19,199 --> 00:04:22,400
and then open source which of course

00:04:20,880 --> 00:04:25,280
many of you are familiar with

00:04:22,400 --> 00:04:26,960
and in science the main ways that code

00:04:25,280 --> 00:04:30,240
is created or used

00:04:26,960 --> 00:04:33,600
is to create data from experiments

00:04:30,240 --> 00:04:37,680
or to analyze the data from experiments

00:04:33,600 --> 00:04:40,080
and we will be talking more about

00:04:37,680 --> 00:04:43,840
open source and how it can be involved

00:04:40,080 --> 00:04:43,840
with various aspects of open science

00:04:44,560 --> 00:04:49,360
um to tell you more about the open

00:04:46,880 --> 00:04:52,479
science and like the cultural change

00:04:49,360 --> 00:04:54,720
and give you some more perspective on

00:04:52,479 --> 00:04:56,560
the current state of science versus like

00:04:54,720 --> 00:04:58,720
an ideal open science state

00:04:56,560 --> 00:05:00,960
i want to walk you through an example

00:04:58,720 --> 00:05:03,280
and this is the coronavirus

00:05:00,960 --> 00:05:04,400
so this is a you know very recent

00:05:03,280 --> 00:05:06,560
example obviously

00:05:04,400 --> 00:05:10,240
but i really think it highlights the

00:05:06,560 --> 00:05:13,520
impact and importance of open science

00:05:10,240 --> 00:05:14,400
so beginning of january researchers in

00:05:13,520 --> 00:05:16,479
shanghai

00:05:14,400 --> 00:05:17,440
published the genome sequence of the

00:05:16,479 --> 00:05:19,600
coronavirus

00:05:17,440 --> 00:05:21,680
and they published it openly which means

00:05:19,600 --> 00:05:25,039
that anyone can access

00:05:21,680 --> 00:05:27,600
that sequence and do research on it

00:05:25,039 --> 00:05:29,120
and this is abnormal this is not how

00:05:27,600 --> 00:05:32,560
research is normally just

00:05:29,120 --> 00:05:33,199
disseminated typically researchers would

00:05:32,560 --> 00:05:35,280
have

00:05:33,199 --> 00:05:37,039
done an experiment gotten this result

00:05:35,280 --> 00:05:38,240
and then they would have written a paper

00:05:37,039 --> 00:05:40,080
or a manuscript

00:05:38,240 --> 00:05:41,280
which would take a few months then they

00:05:40,080 --> 00:05:44,960
would submit that paper

00:05:41,280 --> 00:05:47,120
to a journal and it would start going

00:05:44,960 --> 00:05:48,479
undergoing the review process which

00:05:47,120 --> 00:05:50,560
takes a few more months

00:05:48,479 --> 00:05:52,000
and that's where researchers other

00:05:50,560 --> 00:05:54,800
researchers review this

00:05:52,000 --> 00:05:55,919
article and give feedback and propose

00:05:54,800 --> 00:05:57,919
changes

00:05:55,919 --> 00:05:59,919
then the original researcher gets that

00:05:57,919 --> 00:06:01,120
feedback and then has a few months to

00:05:59,919 --> 00:06:02,960
make changes

00:06:01,120 --> 00:06:05,520
and then finally the research gets

00:06:02,960 --> 00:06:08,319
published so this can take about a year

00:06:05,520 --> 00:06:09,919
after the original experiment is done to

00:06:08,319 --> 00:06:11,759
actually have the research

00:06:09,919 --> 00:06:13,039
published and even then it can be

00:06:11,759 --> 00:06:16,240
published closed

00:06:13,039 --> 00:06:19,520
or not open access which means that

00:06:16,240 --> 00:06:21,680
not everybody can read this research so

00:06:19,520 --> 00:06:23,759
instead of going that normal route

00:06:21,680 --> 00:06:25,199
instead these researchers decided to

00:06:23,759 --> 00:06:28,160
openly publish

00:06:25,199 --> 00:06:30,560
this genetic data and then this person

00:06:28,160 --> 00:06:33,039
eddie holmes tweeted about this

00:06:30,560 --> 00:06:34,319
and tweeted out the link and you can see

00:06:33,039 --> 00:06:36,160
how many people

00:06:34,319 --> 00:06:38,160
were interested in this you know and

00:06:36,160 --> 00:06:39,919
very quickly people around the world

00:06:38,160 --> 00:06:42,720
researchers around the world started

00:06:39,919 --> 00:06:44,880
studying this genetic sequence

00:06:42,720 --> 00:06:47,039
another thing that happened in open

00:06:44,880 --> 00:06:50,080
science around the same time

00:06:47,039 --> 00:06:53,520
was that journals promised

00:06:50,080 --> 00:06:54,960
to provide access to coronavirus related

00:06:53,520 --> 00:06:56,800
research papers

00:06:54,960 --> 00:06:58,400
for free so they decided to make these

00:06:56,800 --> 00:07:01,360
papers open access

00:06:58,400 --> 00:07:02,000
at least for a limited period of time so

00:07:01,360 --> 00:07:04,639
this means that

00:07:02,000 --> 00:07:05,680
anyone can read this research at the

00:07:04,639 --> 00:07:08,960
same time

00:07:05,680 --> 00:07:10,800
many scientific funders said that if you

00:07:08,960 --> 00:07:11,759
are working on coronavirus research and

00:07:10,800 --> 00:07:13,759
you are funded

00:07:11,759 --> 00:07:14,960
by that group that you have to publish

00:07:13,759 --> 00:07:17,599
openly

00:07:14,960 --> 00:07:19,840
so these changes really changed the

00:07:17,599 --> 00:07:21,039
culture of how science was done around

00:07:19,840 --> 00:07:23,280
coronavirus

00:07:21,039 --> 00:07:24,720
and led to a lot more research being

00:07:23,280 --> 00:07:26,960
published

00:07:24,720 --> 00:07:28,319
that's what's shown here this is a graph

00:07:26,960 --> 00:07:31,599
showing you the massive

00:07:28,319 --> 00:07:34,319
increase in articles that were published

00:07:31,599 --> 00:07:36,319
that deal with coronavirus research from

00:07:34,319 --> 00:07:37,199
the beginning of january to the end of

00:07:36,319 --> 00:07:38,800
april

00:07:37,199 --> 00:07:40,639
and in pink we have these journal

00:07:38,800 --> 00:07:43,039
articles that undergo peer review

00:07:40,639 --> 00:07:44,879
and in green are preprints which is a

00:07:43,039 --> 00:07:46,639
different type of article that hasn't

00:07:44,879 --> 00:07:49,039
undergone peer review yet

00:07:46,639 --> 00:07:51,120
but where everything is published openly

00:07:49,039 --> 00:07:53,360
and so other researchers can go in

00:07:51,120 --> 00:07:55,360
and make edits and give feedback in a

00:07:53,360 --> 00:07:57,759
quick fashion

00:07:55,360 --> 00:07:58,960
so this is just a really great example

00:07:57,759 --> 00:08:01,599
of

00:07:58,960 --> 00:08:02,000
how open science principles can be used

00:08:01,599 --> 00:08:03,919
to

00:08:02,000 --> 00:08:06,240
change the way that we typically do

00:08:03,919 --> 00:08:09,120
science to make science faster

00:08:06,240 --> 00:08:09,759
and more collaborative so hopefully now

00:08:09,120 --> 00:08:12,160
you have a

00:08:09,759 --> 00:08:14,080
good understanding of these principles

00:08:12,160 --> 00:08:16,560
and i want to talk to you now

00:08:14,080 --> 00:08:18,479
about how open source can help make

00:08:16,560 --> 00:08:21,280
science open

00:08:18,479 --> 00:08:21,759
and open source is really an integral

00:08:21,280 --> 00:08:25,599
part

00:08:21,759 --> 00:08:28,400
of the open science process

00:08:25,599 --> 00:08:30,639
as i mentioned earlier the ways that

00:08:28,400 --> 00:08:33,599
code is typically used in resource

00:08:30,639 --> 00:08:34,959
and research is to generate data or to

00:08:33,599 --> 00:08:37,760
analyze data

00:08:34,959 --> 00:08:38,240
so you can imagine if researchers open

00:08:37,760 --> 00:08:40,159
source

00:08:38,240 --> 00:08:41,599
that code that they're writing then

00:08:40,159 --> 00:08:44,560
other groups can also

00:08:41,599 --> 00:08:47,200
analyze data and this can lead to

00:08:44,560 --> 00:08:49,920
increased reproducibility

00:08:47,200 --> 00:08:51,360
also if you're openly publishing this

00:08:49,920 --> 00:08:53,600
then you can collaborate

00:08:51,360 --> 00:08:55,200
and everyone knows we go farther when we

00:08:53,600 --> 00:08:57,600
go together

00:08:55,200 --> 00:08:59,279
i also want to mention industries i know

00:08:57,600 --> 00:09:02,880
this conference is a little

00:08:59,279 --> 00:09:04,959
industry heavy so i want to mention that

00:09:02,880 --> 00:09:06,800
industries can also benefit from this

00:09:04,959 --> 00:09:09,519
open source research code

00:09:06,800 --> 00:09:09,839
a lot of the problems that scientists

00:09:09,519 --> 00:09:11,600
are

00:09:09,839 --> 00:09:13,920
dealing with their data are similar

00:09:11,600 --> 00:09:14,800
problems like industry data scientists

00:09:13,920 --> 00:09:16,480
are working on

00:09:14,800 --> 00:09:18,080
so it makes sense to work together and

00:09:16,480 --> 00:09:20,720
collaborate

00:09:18,080 --> 00:09:22,959
also the open source code ethos is very

00:09:20,720 --> 00:09:25,040
similar to the open science ethos

00:09:22,959 --> 00:09:26,080
you know i like to say science belongs

00:09:25,040 --> 00:09:27,760
to the people

00:09:26,080 --> 00:09:30,800
same thing with code i think code

00:09:27,760 --> 00:09:32,640
belongs to the people

00:09:30,800 --> 00:09:34,000
so we are going to be talking

00:09:32,640 --> 00:09:36,720
specifically about

00:09:34,000 --> 00:09:37,040
the open source project that i work on

00:09:36,720 --> 00:09:39,279
and

00:09:37,040 --> 00:09:40,880
talking about how we are working with

00:09:39,279 --> 00:09:42,640
biologists to make their science more

00:09:40,880 --> 00:09:44,160
open

00:09:42,640 --> 00:09:46,160
the project i work on is called

00:09:44,160 --> 00:09:47,120
frictionless data for reproducible

00:09:46,160 --> 00:09:49,360
research

00:09:47,120 --> 00:09:50,399
and our goals with this project are to

00:09:49,360 --> 00:09:52,800
remove friction

00:09:50,399 --> 00:09:54,959
and research data to move from data to

00:09:52,800 --> 00:09:57,200
insight faster

00:09:54,959 --> 00:09:59,040
and you can see here i have a picture of

00:09:57,200 --> 00:10:01,040
my core team members

00:09:59,040 --> 00:10:03,279
you can see it's a pretty small group

00:10:01,040 --> 00:10:05,760
but we're really community focused

00:10:03,279 --> 00:10:06,880
and by that i mean that we rely on our

00:10:05,760 --> 00:10:09,920
community

00:10:06,880 --> 00:10:12,560
to help us and to help the pros

00:10:09,920 --> 00:10:13,279
to help the project so we rely on our

00:10:12,560 --> 00:10:16,240
community

00:10:13,279 --> 00:10:16,959
to contribute we rely on them to give us

00:10:16,240 --> 00:10:19,360
feedback

00:10:16,959 --> 00:10:20,000
and also to ask us for new features and

00:10:19,360 --> 00:10:22,560
really move

00:10:20,000 --> 00:10:23,440
the project forward so i'm hoping by the

00:10:22,560 --> 00:10:25,519
end of the talk

00:10:23,440 --> 00:10:28,079
you will be inspired to join our

00:10:25,519 --> 00:10:28,079
community

00:10:28,399 --> 00:10:34,720
okay so i said frictionless data

00:10:31,600 --> 00:10:37,600
but what are some frictions in data

00:10:34,720 --> 00:10:38,720
and we have our astronaut back again so

00:10:37,600 --> 00:10:41,920
it please over

00:10:38,720 --> 00:10:43,839
in the chat window can you type

00:10:41,920 --> 00:10:45,200
what you think of when you think of

00:10:43,839 --> 00:10:50,640
frictions and

00:10:45,200 --> 00:10:50,640
data and i'll give you about 30 seconds

00:10:51,120 --> 00:10:55,519
and if you need some clues when i think

00:10:54,079 --> 00:11:00,720
of frictions and data

00:10:55,519 --> 00:11:02,800
i think of things like cleaning the data

00:11:00,720 --> 00:11:05,040
yeah oh yeah we're getting great answers

00:11:02,800 --> 00:11:07,360
over here in the chat

00:11:05,040 --> 00:11:08,160
yes different formats can't find the

00:11:07,360 --> 00:11:12,480
data

00:11:08,160 --> 00:11:14,560
inconsistent format no metadata perfect

00:11:12,480 --> 00:11:17,360
hard to keep track of versions these are

00:11:14,560 --> 00:11:17,360
great answers

00:11:18,399 --> 00:11:23,040
and then i have some examples as well um

00:11:21,360 --> 00:11:23,680
things like what does this column name

00:11:23,040 --> 00:11:26,480
mean

00:11:23,680 --> 00:11:26,959
how is the analysis done who created the

00:11:26,480 --> 00:11:30,320
data

00:11:26,959 --> 00:11:30,320
and checking data quality

00:11:31,440 --> 00:11:37,680
so these are all frustrations

00:11:35,519 --> 00:11:39,040
that make working with data more

00:11:37,680 --> 00:11:42,560
difficult

00:11:39,040 --> 00:11:45,680
and these frustrations were the

00:11:42,560 --> 00:11:47,200
um the background need

00:11:45,680 --> 00:11:50,320
that we were trying to solve with the

00:11:47,200 --> 00:11:53,360
frictionless data project

00:11:50,320 --> 00:11:55,680
so what is this project it is a

00:11:53,360 --> 00:11:58,000
set of specifications for data and

00:11:55,680 --> 00:11:59,680
metadata interoperability

00:11:58,000 --> 00:12:01,279
it's a collection of open source

00:11:59,680 --> 00:12:03,600
software libraries

00:12:01,279 --> 00:12:04,720
a range of best practices for data

00:12:03,600 --> 00:12:07,040
management

00:12:04,720 --> 00:12:10,320
and importantly it's platform agnostic

00:12:07,040 --> 00:12:13,040
meaning that it's very interoperable

00:12:10,320 --> 00:12:13,519
and we are specifically focused today on

00:12:13,040 --> 00:12:15,440
asking

00:12:13,519 --> 00:12:16,560
how can researchers use frictionless

00:12:15,440 --> 00:12:19,519
data

00:12:16,560 --> 00:12:20,720
but i want to mention that our tools and

00:12:19,519 --> 00:12:24,079
our code is not

00:12:20,720 --> 00:12:27,440
domain specific so you can use this

00:12:24,079 --> 00:12:28,880
for any domain you know in some of our

00:12:27,440 --> 00:12:32,560
original users or an

00:12:28,880 --> 00:12:32,560
open government for instance

00:12:32,720 --> 00:12:36,240
okay i'm going to explain what

00:12:34,560 --> 00:12:39,200
frictionless data is

00:12:36,240 --> 00:12:39,600
by showcasing two use cases the first is

00:12:39,200 --> 00:12:42,560
with

00:12:39,600 --> 00:12:44,240
ecodemo which is an oceanography data

00:12:42,560 --> 00:12:46,320
management group

00:12:44,240 --> 00:12:47,839
and i'll be talking about frictionless

00:12:46,320 --> 00:12:50,399
data packages and pipelines

00:12:47,839 --> 00:12:52,000
and also frictionless data validation

00:12:50,399 --> 00:12:55,040
and i'm going to be spending a pretty

00:12:52,000 --> 00:12:56,320
good amount of this talk talking about

00:12:55,040 --> 00:12:59,120
ecodemo

00:12:56,320 --> 00:12:59,680
because this was a long collaboration

00:12:59,120 --> 00:13:02,240
and

00:12:59,680 --> 00:13:03,040
um it's very interesting and we hit on

00:13:02,240 --> 00:13:05,360
several of

00:13:03,040 --> 00:13:07,440
the tools and then i'm going to be

00:13:05,360 --> 00:13:08,000
spending a shorter amount of time at the

00:13:07,440 --> 00:13:09,600
end

00:13:08,000 --> 00:13:11,760
talking about one of our newer

00:13:09,600 --> 00:13:13,040
collaborations which is with dr philip

00:13:11,760 --> 00:13:15,200
rocacera

00:13:13,040 --> 00:13:16,480
and we call this the frictionless data

00:13:15,200 --> 00:13:19,279
scriptor

00:13:16,480 --> 00:13:20,560
collaboration and i'll be talking about

00:13:19,279 --> 00:13:23,519
extending the frictionless

00:13:20,560 --> 00:13:23,519
specifications

00:13:23,920 --> 00:13:30,720
so let's get started with bikodimo

00:13:27,279 --> 00:13:34,800
bikodimo is the biological and chemical

00:13:30,720 --> 00:13:38,000
oceanography data management office and

00:13:34,800 --> 00:13:41,199
it is a data

00:13:38,000 --> 00:13:43,760
aggregator where scientists that work

00:13:41,199 --> 00:13:45,600
on oceanography research submit their

00:13:43,760 --> 00:13:48,240
data to bcodemo

00:13:45,600 --> 00:13:49,920
and then ecodemo has data managers that

00:13:48,240 --> 00:13:52,480
clean that data

00:13:49,920 --> 00:13:53,680
and then they provide access to the

00:13:52,480 --> 00:13:57,440
public to be able

00:13:53,680 --> 00:13:59,440
to access that data and i am going to

00:13:57,440 --> 00:14:00,079
pause very quickly because i see that

00:13:59,440 --> 00:14:02,720
there is a

00:14:00,079 --> 00:14:04,639
question in the chat and i going to

00:14:02,720 --> 00:14:06,000
answer it before we get too much farther

00:14:04,639 --> 00:14:08,639
into this

00:14:06,000 --> 00:14:10,639
brian has asked us is this inspired or

00:14:08,639 --> 00:14:14,399
compatible with fair data

00:14:10,639 --> 00:14:16,399
and the answer is yes absolutely

00:14:14,399 --> 00:14:17,440
fair for those of you that are

00:14:16,399 --> 00:14:20,959
unfamiliar with that

00:14:17,440 --> 00:14:24,880
is an acronym for findable accessible

00:14:20,959 --> 00:14:28,639
interoperable and um

00:14:24,880 --> 00:14:31,360
reusable and it is

00:14:28,639 --> 00:14:32,639
very big right now in the research world

00:14:31,360 --> 00:14:35,760
and

00:14:32,639 --> 00:14:38,800
um at the end

00:14:35,760 --> 00:14:41,120
brian please remind me if i haven't like

00:14:38,800 --> 00:14:43,040
circled back to say exactly how

00:14:41,120 --> 00:14:46,079
frictionless works with fair

00:14:43,040 --> 00:14:49,279
but very briefly yes and we

00:14:46,079 --> 00:14:50,320
will hit on findable interoperable and

00:14:49,279 --> 00:14:53,279
reusable

00:14:50,320 --> 00:14:54,959
and kind of accessible the quick answer

00:14:53,279 --> 00:14:58,880
is yes

00:14:54,959 --> 00:15:00,720
all right here we go so ecodemo

00:14:58,880 --> 00:15:03,199
data management for oceanography

00:15:00,720 --> 00:15:03,199
research

00:15:03,440 --> 00:15:07,600
vcodimo has amazing data but it is very

00:15:06,560 --> 00:15:10,880
messy

00:15:07,600 --> 00:15:12,399
um they've collect data about all

00:15:10,880 --> 00:15:15,279
aspects of the ocean so

00:15:12,399 --> 00:15:17,279
for instance water salinity or the

00:15:15,279 --> 00:15:19,680
biology of jellyfish

00:15:17,279 --> 00:15:20,720
but the data that they get is very messy

00:15:19,680 --> 00:15:24,959
and typically

00:15:20,720 --> 00:15:27,199
not standard and so when we

00:15:24,959 --> 00:15:29,199
wanted to collaborate together they

00:15:27,199 --> 00:15:32,480
wanted to figure out how to go

00:15:29,199 --> 00:15:34,240
from this messy data to clean data

00:15:32,480 --> 00:15:35,600
that can then be hosted on their landing

00:15:34,240 --> 00:15:38,160
page

00:15:35,600 --> 00:15:40,079
and it was very important for them to

00:15:38,160 --> 00:15:40,959
make this process reproducible and

00:15:40,079 --> 00:15:43,440
transparent

00:15:40,959 --> 00:15:45,279
so they want researchers to understand

00:15:43,440 --> 00:15:47,839
how they went from raw data

00:15:45,279 --> 00:15:48,560
to this nice clean data and make that

00:15:47,839 --> 00:15:51,120
process

00:15:48,560 --> 00:15:51,120
repeatable

00:15:52,320 --> 00:15:56,639
so we work together to create

00:15:54,160 --> 00:15:59,360
frictionless data processing pipelines

00:15:56,639 --> 00:16:01,120
so the bcodemode data managers need to

00:15:59,360 --> 00:16:03,120
know certain things about the data when

00:16:01,120 --> 00:16:06,160
it's submitted by the researchers

00:16:03,120 --> 00:16:08,560
they need to know what is this data

00:16:06,160 --> 00:16:10,399
does this data seem valid like are there

00:16:08,560 --> 00:16:11,600
any missing values or values that don't

00:16:10,399 --> 00:16:13,440
make sense

00:16:11,600 --> 00:16:15,440
does the data need to be transformed or

00:16:13,440 --> 00:16:16,880
clean and how can this process be

00:16:15,440 --> 00:16:20,000
transparent

00:16:16,880 --> 00:16:21,759
and when researchers are submitting the

00:16:20,000 --> 00:16:24,480
data

00:16:21,759 --> 00:16:27,120
bcodimo wants to be able to immediately

00:16:24,480 --> 00:16:28,880
give that feedback to the researchers

00:16:27,120 --> 00:16:30,800
because you know researchers are busy

00:16:28,880 --> 00:16:32,240
and when they're submitting that data

00:16:30,800 --> 00:16:33,920
is the best time to give them that

00:16:32,240 --> 00:16:36,320
feedback you know

00:16:33,920 --> 00:16:37,440
these researchers are in the you know on

00:16:36,320 --> 00:16:38,959
a boat in

00:16:37,440 --> 00:16:40,720
the middle of the antarctic doing

00:16:38,959 --> 00:16:41,759
research and we can't really reach out

00:16:40,720 --> 00:16:43,440
to them and be like

00:16:41,759 --> 00:16:44,959
oh hey did you remember to record the

00:16:43,440 --> 00:16:47,040
metadata

00:16:44,959 --> 00:16:50,880
so we're trying to get to them while

00:16:47,040 --> 00:16:53,040
they're submitting the data

00:16:50,880 --> 00:16:54,480
okay we're going to go through these

00:16:53,040 --> 00:16:56,320
bullet points here

00:16:54,480 --> 00:16:58,240
and talk about how we work together to

00:16:56,320 --> 00:17:02,240
solve these problems

00:16:58,240 --> 00:17:04,640
the first one is what is this data

00:17:02,240 --> 00:17:06,079
and the solution here is to document the

00:17:04,640 --> 00:17:08,400
metadata

00:17:06,079 --> 00:17:10,400
so i've said metadata i think a few

00:17:08,400 --> 00:17:13,199
people in the chat says metadata

00:17:10,400 --> 00:17:14,160
so i want to pause here for our

00:17:13,199 --> 00:17:17,600
astronaut

00:17:14,160 --> 00:17:20,640
again and ask you all in the chat

00:17:17,600 --> 00:17:23,679
are you familiar with metadata

00:17:20,640 --> 00:17:27,039
and if so what are some

00:17:23,679 --> 00:17:30,559
aspects of this raw data file

00:17:27,039 --> 00:17:32,559
that it would help you to have metadata

00:17:30,559 --> 00:17:35,919
or what are some things about this data

00:17:32,559 --> 00:17:38,080
file that you don't understand

00:17:35,919 --> 00:17:47,840
i'll give y'all you know 30 seconds

00:17:38,080 --> 00:17:47,840
again in the chat

00:17:53,360 --> 00:17:57,679
okay great great answers we're getting

00:17:56,320 --> 00:17:59,360
location

00:17:57,679 --> 00:18:01,120
we want a clear explanation about what

00:17:59,360 --> 00:18:04,320
the columns mean

00:18:01,120 --> 00:18:06,880
are there units what does nd

00:18:04,320 --> 00:18:08,480
mean what is the metric being used these

00:18:06,880 --> 00:18:10,799
are great

00:18:08,480 --> 00:18:11,520
questions there are same questions i

00:18:10,799 --> 00:18:14,880
have

00:18:11,520 --> 00:18:18,160
so the metadata is data about the data

00:18:14,880 --> 00:18:21,440
and it would describe this thankfully

00:18:18,160 --> 00:18:22,400
we have the metadata for this file so we

00:18:21,440 --> 00:18:25,679
can

00:18:22,400 --> 00:18:28,240
get the answer you can see here

00:18:25,679 --> 00:18:30,000
temp means temperature and it's in

00:18:28,240 --> 00:18:32,240
degrees celsius

00:18:30,000 --> 00:18:33,200
cond which like what was conned it means

00:18:32,240 --> 00:18:36,240
conductivity

00:18:33,200 --> 00:18:39,360
and it also has units so

00:18:36,240 --> 00:18:43,200
this metadata contains the um

00:18:39,360 --> 00:18:46,480
the header name a description of

00:18:43,200 --> 00:18:47,120
that data column and the units for that

00:18:46,480 --> 00:18:50,480
column

00:18:47,120 --> 00:18:51,919
so this is very helpful information and

00:18:50,480 --> 00:18:54,160
we wanted to make sure that when

00:18:51,919 --> 00:18:56,240
researchers were submitting their data

00:18:54,160 --> 00:18:58,160
that we were able to keep track of this

00:18:56,240 --> 00:19:00,480
metadata or if they auto

00:18:58,160 --> 00:19:01,760
if they actually had metadata submitted

00:19:00,480 --> 00:19:03,919
we wanted to make sure that

00:19:01,760 --> 00:19:05,440
we were maintaining the quality of that

00:19:03,919 --> 00:19:07,440
metadata

00:19:05,440 --> 00:19:08,799
so we did this with the frictionless

00:19:07,440 --> 00:19:11,520
data package

00:19:08,799 --> 00:19:13,520
which is a core specification of

00:19:11,520 --> 00:19:16,559
frictionless data

00:19:13,520 --> 00:19:19,280
and it describes data and metadata

00:19:16,559 --> 00:19:19,840
you can think of it like a box or a

00:19:19,280 --> 00:19:22,400
package

00:19:19,840 --> 00:19:23,120
that contains inside of it your data

00:19:22,400 --> 00:19:25,440
file

00:19:23,120 --> 00:19:26,640
and the metadata for that data and

00:19:25,440 --> 00:19:29,840
optionally a schema

00:19:26,640 --> 00:19:31,360
that further describes the data and

00:19:29,840 --> 00:19:33,679
most of our examples i'm showing you

00:19:31,360 --> 00:19:36,799
today use tabular data

00:19:33,679 --> 00:19:38,640
so csv files but i want to mention that

00:19:36,799 --> 00:19:41,360
a data package can work for

00:19:38,640 --> 00:19:43,440
any type of file but we really do focus

00:19:41,360 --> 00:19:46,480
on tabular data so that's what you'll

00:19:43,440 --> 00:19:47,600
be seeing most of today and here are

00:19:46,480 --> 00:19:49,280
some links

00:19:47,600 --> 00:19:51,440
where you can read more about our

00:19:49,280 --> 00:19:54,160
specifications and also

00:19:51,440 --> 00:19:55,280
the link to our github where you can see

00:19:54,160 --> 00:19:59,840
the code

00:19:55,280 --> 00:20:01,760
to create and use data packages

00:19:59,840 --> 00:20:03,840
the way that i'm going to show you now

00:20:01,760 --> 00:20:06,480
to create and use data packages

00:20:03,840 --> 00:20:08,320
is with our browser tool and this is

00:20:06,480 --> 00:20:10,520
called the data package creator

00:20:08,320 --> 00:20:12,080
and you can find it at

00:20:10,520 --> 00:20:15,360
create.frictionlessdata.io

00:20:12,080 --> 00:20:17,679
and this is a non-coding

00:20:15,360 --> 00:20:18,799
browser tool that anybody can use to

00:20:17,679 --> 00:20:21,840
create and

00:20:18,799 --> 00:20:22,480
use data packages so the way this works

00:20:21,840 --> 00:20:25,440
is you

00:20:22,480 --> 00:20:26,880
load a raw data file for instance this

00:20:25,440 --> 00:20:29,280
file here

00:20:26,880 --> 00:20:30,240
and then the data package creator will

00:20:29,280 --> 00:20:34,240
automatically

00:20:30,240 --> 00:20:37,440
infer metadata about this data file

00:20:34,240 --> 00:20:40,400
for instance it infers the header names

00:20:37,440 --> 00:20:42,480
and it infers the data types so here

00:20:40,400 --> 00:20:44,720
this is a string

00:20:42,480 --> 00:20:46,720
and then you can manually go in and add

00:20:44,720 --> 00:20:48,400
in additional metadata

00:20:46,720 --> 00:20:51,039
for instance you could add a description

00:20:48,400 --> 00:20:53,280
like lat is probably latitude but it

00:20:51,039 --> 00:20:55,360
would be nice to include that and maybe

00:20:53,280 --> 00:20:57,200
you know the degrees or whatever the

00:20:55,360 --> 00:21:00,480
unit is

00:20:57,200 --> 00:21:03,600
and then as this information is added

00:21:00,480 --> 00:21:07,360
on the right hand side we have the

00:21:03,600 --> 00:21:09,280
metadata and the schema written in json

00:21:07,360 --> 00:21:11,000
we chose json so it could be machine

00:21:09,280 --> 00:21:13,600
readable and to increase

00:21:11,000 --> 00:21:14,720
interoperability so here you can see all

00:21:13,600 --> 00:21:17,200
this information

00:21:14,720 --> 00:21:19,679
is contained there are some additional

00:21:17,200 --> 00:21:24,159
metadata fields that you can add like

00:21:19,679 --> 00:21:27,039
the authors and the license of the data

00:21:24,159 --> 00:21:28,000
and those are very important um

00:21:27,039 --> 00:21:31,039
additionally for

00:21:28,000 --> 00:21:34,080
you know making things more fair

00:21:31,039 --> 00:21:37,120
so we were working with the codeimo to

00:21:34,080 --> 00:21:38,559
add metadata or capture the metadata

00:21:37,120 --> 00:21:40,559
that was already present

00:21:38,559 --> 00:21:42,960
and make sure that it was machine

00:21:40,559 --> 00:21:45,440
readable and usable

00:21:42,960 --> 00:21:47,440
the next question that we had is is this

00:21:45,440 --> 00:21:50,400
data valid

00:21:47,440 --> 00:21:52,480
and so i'm going to tell you my favorite

00:21:50,400 --> 00:21:54,960
data validation horror story

00:21:52,480 --> 00:21:57,039
that while i'm doing that if you have a

00:21:54,960 --> 00:21:58,000
data validation horror story i would

00:21:57,039 --> 00:22:01,120
love for you to

00:21:58,000 --> 00:22:01,120
include it in the chat

00:22:01,520 --> 00:22:05,600
so my favorite story and some of you

00:22:03,760 --> 00:22:09,520
have maybe heard this before

00:22:05,600 --> 00:22:13,760
is about excel changing the names of

00:22:09,520 --> 00:22:18,159
jeans to dates so excel will do this

00:22:13,760 --> 00:22:21,120
where there are certain genes like scpt1

00:22:18,159 --> 00:22:23,039
which sounds like september 1st that

00:22:21,120 --> 00:22:27,919
excel will change from a string

00:22:23,039 --> 00:22:30,320
scp-t1 to a date and it's

00:22:27,919 --> 00:22:32,400
it's just excel will do it and it won't

00:22:30,320 --> 00:22:35,280
tell you that it's happening

00:22:32,400 --> 00:22:37,360
and this has actually caused research

00:22:35,280 --> 00:22:38,000
papers to have to be retracted because

00:22:37,360 --> 00:22:41,520
then

00:22:38,000 --> 00:22:43,600
the analysis was messed up and in fact

00:22:41,520 --> 00:22:44,640
this happened so many times that just

00:22:43,600 --> 00:22:47,240
recently

00:22:44,640 --> 00:22:50,559
the human gene nomenclature committee

00:22:47,240 --> 00:22:53,600
renamed some of these problematic genes

00:22:50,559 --> 00:22:57,120
because it was easier to rename

00:22:53,600 --> 00:23:00,720
the genes than it was to fix this

00:22:57,120 --> 00:23:02,799
common problem in excel and we have uh

00:23:00,720 --> 00:23:04,960
brian in the chat was saying that r and

00:23:02,799 --> 00:23:05,919
python can also sometimes convert things

00:23:04,960 --> 00:23:07,919
to dates

00:23:05,919 --> 00:23:10,320
so this is not a unique problem i know

00:23:07,919 --> 00:23:14,000
we can hate on excel sometimes but um

00:23:10,320 --> 00:23:15,360
not a unique problem so

00:23:14,000 --> 00:23:17,919
what could have helped us solve this

00:23:15,360 --> 00:23:20,000
problem validating our data

00:23:17,919 --> 00:23:21,440
and the way that we validate data is by

00:23:20,000 --> 00:23:23,919
having a schema

00:23:21,440 --> 00:23:24,960
and a schema could describe you know the

00:23:23,919 --> 00:23:28,480
contents

00:23:24,960 --> 00:23:31,840
of a data file for instance it would say

00:23:28,480 --> 00:23:34,799
column a all of the data

00:23:31,840 --> 00:23:35,200
should be a string and then you would

00:23:34,799 --> 00:23:37,360
run

00:23:35,200 --> 00:23:39,440
through your data in a schema through a

00:23:37,360 --> 00:23:42,960
validator and the validator would say

00:23:39,440 --> 00:23:44,240
oh no column a has a date format in it

00:23:42,960 --> 00:23:46,720
and then you could go back through and

00:23:44,240 --> 00:23:49,440
fix that so

00:23:46,720 --> 00:23:50,559
that's what we work on with frictionless

00:23:49,440 --> 00:23:53,039
validate

00:23:50,559 --> 00:23:54,400
and here's a little toy example showing

00:23:53,039 --> 00:23:57,600
you how this works

00:23:54,400 --> 00:24:01,840
um quickly you can see this data has

00:23:57,600 --> 00:24:04,960
some repeated headers it has a blank

00:24:01,840 --> 00:24:06,320
blank row and it seems to have only two

00:24:04,960 --> 00:24:10,240
values here but

00:24:06,320 --> 00:24:13,360
four here and it should have three so

00:24:10,240 --> 00:24:16,480
we can use frictionless validate

00:24:13,360 --> 00:24:18,080
to quickly validate our data and here

00:24:16,480 --> 00:24:19,039
i'm showing you a screenshot of our

00:24:18,080 --> 00:24:21,919
command line

00:24:19,039 --> 00:24:22,480
tool where you can um use it on command

00:24:21,919 --> 00:24:24,480
line

00:24:22,480 --> 00:24:27,039
but we also have python code which i

00:24:24,480 --> 00:24:29,600
have linked down here

00:24:27,039 --> 00:24:30,159
so when we do frictionless validate we

00:24:29,600 --> 00:24:32,640
can see

00:24:30,159 --> 00:24:33,919
these validation errors we see that we

00:24:32,640 --> 00:24:35,919
have a duplicate header

00:24:33,919 --> 00:24:38,080
and we have a further message that i cut

00:24:35,919 --> 00:24:40,559
off for this so you can see it but

00:24:38,080 --> 00:24:41,120
the message describes in more detail um

00:24:40,559 --> 00:24:43,520
we have

00:24:41,120 --> 00:24:44,880
missing cells we have blank row and we

00:24:43,520 --> 00:24:47,279
seem to also have a type

00:24:44,880 --> 00:24:48,080
error and so frictionless validate

00:24:47,279 --> 00:24:51,039
automatically

00:24:48,080 --> 00:24:51,360
checks some basic checks but you can add

00:24:51,039 --> 00:24:54,880
in

00:24:51,360 --> 00:24:54,880
additional checks as well

00:24:55,039 --> 00:25:00,240
okay so we use this with ecodemo to

00:24:57,760 --> 00:25:02,159
validate data as it is submitted

00:25:00,240 --> 00:25:04,240
and here's an example of one of the

00:25:02,159 --> 00:25:07,520
errors that was caught

00:25:04,240 --> 00:25:09,679
where you can see row 133 is duplicated

00:25:07,520 --> 00:25:12,159
to row 115

00:25:09,679 --> 00:25:14,000
and this is likely an error you know

00:25:12,159 --> 00:25:17,440
probably wouldn't have the same data

00:25:14,000 --> 00:25:20,799
but it is possible that research data

00:25:17,440 --> 00:25:23,120
could have a repeated row on purpose

00:25:20,799 --> 00:25:24,320
in which case you can turn off this

00:25:23,120 --> 00:25:27,600
specific check

00:25:24,320 --> 00:25:29,520
so that you won't always get it but in

00:25:27,600 --> 00:25:31,360
this situation this was an error

00:25:29,520 --> 00:25:32,880
and they were able to contact the

00:25:31,360 --> 00:25:33,919
researchers and they could fix their

00:25:32,880 --> 00:25:36,000
data

00:25:33,919 --> 00:25:39,279
you know before they went back on their

00:25:36,000 --> 00:25:41,760
ship to do more research

00:25:39,279 --> 00:25:43,679
okay next question we worked on is does

00:25:41,760 --> 00:25:44,720
this data need to be transformed or

00:25:43,679 --> 00:25:47,360
cleaned

00:25:44,720 --> 00:25:49,600
and to do this we use the frictionless

00:25:47,360 --> 00:25:50,960
data package pipelines which are data

00:25:49,600 --> 00:25:53,360
processing pipelines

00:25:50,960 --> 00:25:55,360
it's a python framework for declarative

00:25:53,360 --> 00:25:56,960
processing of tabular data

00:25:55,360 --> 00:25:58,960
and it automatically includes some

00:25:56,960 --> 00:26:01,760
standard data processing steps like

00:25:58,960 --> 00:26:04,159
joins and find and replace

00:26:01,760 --> 00:26:05,520
it will produce it will help you

00:26:04,159 --> 00:26:08,320
document your metadata

00:26:05,520 --> 00:26:08,799
and produce a schema so similar to the

00:26:08,320 --> 00:26:11,360
create

00:26:08,799 --> 00:26:12,159
browser tool i showed you earlier and

00:26:11,360 --> 00:26:14,640
importantly

00:26:12,159 --> 00:26:16,400
the pipelines are defined in a pipeline

00:26:14,640 --> 00:26:18,880
spec yml file

00:26:16,400 --> 00:26:21,039
this file which is human readable

00:26:18,880 --> 00:26:23,440
specifies the processing steps

00:26:21,039 --> 00:26:24,320
and all of the execution parameters so

00:26:23,440 --> 00:26:26,080
it's telling us

00:26:24,320 --> 00:26:28,880
exactly everything that happened to that

00:26:26,080 --> 00:26:32,480
data which leads to more reproducible

00:26:28,880 --> 00:26:35,440
data analysis it also generates a single

00:26:32,480 --> 00:26:36,880
data package as its output

00:26:35,440 --> 00:26:39,520
and here's a link where you can check

00:26:36,880 --> 00:26:42,480
out this code in more detail

00:26:39,520 --> 00:26:44,000
so i want to show you briefly what this

00:26:42,480 --> 00:26:46,080
processing tool looks like

00:26:44,000 --> 00:26:47,520
that we collaborated with beaker demo to

00:26:46,080 --> 00:26:50,880
create

00:26:47,520 --> 00:26:53,760
this is what the data manager would see

00:26:50,880 --> 00:26:55,600
so it has load the data and then several

00:26:53,760 --> 00:26:56,320
other processing steps like a find and

00:26:55,600 --> 00:26:59,360
replace

00:26:56,320 --> 00:27:02,400
a convert the date processing step

00:26:59,360 --> 00:27:03,919
and here we're showing you

00:27:02,400 --> 00:27:06,559
what one of these would look like for

00:27:03,919 --> 00:27:09,760
find and replace where

00:27:06,559 --> 00:27:11,840
they're finding the time

00:27:09,760 --> 00:27:12,880
and then they have a find pattern and a

00:27:11,840 --> 00:27:15,360
replace pattern

00:27:12,880 --> 00:27:16,960
and then a note this is fixing

00:27:15,360 --> 00:27:20,559
inconsistent time format

00:27:16,960 --> 00:27:23,120
some didn't have seconds and then

00:27:20,559 --> 00:27:23,919
this pipeline specumophile is being

00:27:23,120 --> 00:27:27,200
generated

00:27:23,919 --> 00:27:27,919
which has all of these details captured

00:27:27,200 --> 00:27:30,640
in it

00:27:27,919 --> 00:27:31,600
in a way that is readable by humans and

00:27:30,640 --> 00:27:33,760
also machines

00:27:31,600 --> 00:27:36,559
so this all helps make this process

00:27:33,760 --> 00:27:36,559
reproducible

00:27:37,200 --> 00:27:40,880
okay so to summarize this project with

00:27:39,600 --> 00:27:44,799
bicodimo

00:27:40,880 --> 00:27:49,520
we worked with them to take messy

00:27:44,799 --> 00:27:52,080
data about the ocean and run it through

00:27:49,520 --> 00:27:53,200
this frictionless pipeline that

00:27:52,080 --> 00:27:55,360
generates

00:27:53,200 --> 00:27:57,600
a pipeline spec yaml file that tells us

00:27:55,360 --> 00:28:02,039
everything that happened to that data

00:27:57,600 --> 00:28:04,640
a clean um data file and a clean

00:28:02,039 --> 00:28:06,320
datapackage.json which describes the

00:28:04,640 --> 00:28:08,559
data so it has our metadata and the

00:28:06,320 --> 00:28:09,360
schema and then all of this can be

00:28:08,559 --> 00:28:12,720
hosted

00:28:09,360 --> 00:28:15,039
onto the bcodemo website

00:28:12,720 --> 00:28:16,000
so that any researcher can access this

00:28:15,039 --> 00:28:17,840
data openly

00:28:16,000 --> 00:28:21,039
can access the metadata and can

00:28:17,840 --> 00:28:24,240
understand what happened to it

00:28:21,039 --> 00:28:26,320
okay how are y'all doing that was just a

00:28:24,240 --> 00:28:28,880
lot of information

00:28:26,320 --> 00:28:30,000
i want to take a moment and answer

00:28:28,880 --> 00:28:33,679
questions if you have

00:28:30,000 --> 00:28:38,240
questions before i get into my

00:28:33,679 --> 00:28:39,840
last use case so please ask questions

00:28:38,240 --> 00:28:42,880
and

00:28:39,840 --> 00:28:47,120
i don't think i can see the q a

00:28:42,880 --> 00:28:50,480
chat somehow if that is happening

00:28:47,120 --> 00:28:50,480
oh maybe i can pop it up here

00:28:52,640 --> 00:28:57,200
nope lost the q a chat anyway okay great

00:28:56,080 --> 00:29:00,480
don't see any q and a's

00:28:57,200 --> 00:29:02,640
okay perfect if you have questions for

00:29:00,480 --> 00:29:05,039
me right now please put them in the chat

00:29:02,640 --> 00:29:06,559
really can um you know wait another 30

00:29:05,039 --> 00:29:09,840
seconds or so

00:29:06,559 --> 00:29:12,720
and this is my dog that i'm

00:29:09,840 --> 00:29:15,840
showing you here on the screen in case

00:29:12,720 --> 00:29:15,840
you're curious about that

00:29:24,840 --> 00:29:27,840
okay

00:29:30,559 --> 00:29:35,039
okay great beth says interested in the

00:29:33,600 --> 00:29:36,240
second use case might have questions

00:29:35,039 --> 00:29:38,640
after that

00:29:36,240 --> 00:29:38,640
perfect

00:29:39,360 --> 00:29:43,360
all right i'm going to move on then and

00:29:41,760 --> 00:29:45,760
if you have a question

00:29:43,360 --> 00:29:46,399
you know please post it and i will try

00:29:45,760 --> 00:29:49,120
and pause

00:29:46,399 --> 00:29:52,159
and come back to it or um the second use

00:29:49,120 --> 00:29:53,360
case is pretty short so we should have

00:29:52,159 --> 00:29:57,120
a pretty good amount of time for

00:29:53,360 --> 00:29:57,120
questions here at the end too

00:29:58,960 --> 00:30:05,279
okay second use case we're going to talk

00:30:02,320 --> 00:30:07,919
more about scientific manuscripts

00:30:05,279 --> 00:30:08,399
so scientific manuscripts can be thought

00:30:07,919 --> 00:30:11,440
of as

00:30:08,399 --> 00:30:14,320
career currency for scientists and

00:30:11,440 --> 00:30:15,120
what does this mean it means that as a

00:30:14,320 --> 00:30:18,480
researcher

00:30:15,120 --> 00:30:19,520
there's only a few ways to advance your

00:30:18,480 --> 00:30:22,480
career

00:30:19,520 --> 00:30:24,559
and one of them is by writing a lot of

00:30:22,480 --> 00:30:27,520
scientific manuscripts and getting your

00:30:24,559 --> 00:30:31,200
science published frequently

00:30:27,520 --> 00:30:33,760
and so everyone writes manuscripts but

00:30:31,200 --> 00:30:35,120
they're difficult so manuscripts have

00:30:33,760 --> 00:30:37,600
predefined sections

00:30:35,120 --> 00:30:39,600
like the methods section describing how

00:30:37,600 --> 00:30:41,039
you did your experiment in the results

00:30:39,600 --> 00:30:43,279
section

00:30:41,039 --> 00:30:44,399
but these sections are difficult to

00:30:43,279 --> 00:30:49,120
write

00:30:44,399 --> 00:30:49,120
they are not standard and

00:30:49,200 --> 00:30:54,960
they often vary from journal to journal

00:30:52,480 --> 00:30:56,399
so even within a journal they're not

00:30:54,960 --> 00:30:58,720
standard

00:30:56,399 --> 00:31:00,159
they're really not machine parsable or

00:30:58,720 --> 00:31:02,840
machine readable

00:31:00,159 --> 00:31:05,840
which makes reproducing research

00:31:02,840 --> 00:31:05,840
difficult

00:31:06,320 --> 00:31:11,760
so we were wondering what if we could

00:31:08,480 --> 00:31:11,760
automate this process

00:31:12,000 --> 00:31:17,039
okay so here we have our astronaut again

00:31:14,880 --> 00:31:19,440
so i'm going to ask you

00:31:17,039 --> 00:31:21,200
what are some issues with this data

00:31:19,440 --> 00:31:22,960
table that would limit machine reading

00:31:21,200 --> 00:31:26,320
or automatic data parsing

00:31:22,960 --> 00:31:30,159
and this is a real table that is

00:31:26,320 --> 00:31:30,799
from a article that was published in

00:31:30,159 --> 00:31:33,840
e-life

00:31:30,799 --> 00:31:36,960
which is a scientific journal

00:31:33,840 --> 00:31:38,480
and here's the link to that

00:31:36,960 --> 00:31:40,240
journal article if you want to look at

00:31:38,480 --> 00:31:44,320
it in more detail

00:31:40,240 --> 00:31:47,600
but now i want you all to think about

00:31:44,320 --> 00:31:49,760
what are some problems with this data

00:31:47,600 --> 00:32:01,840
set that would make it difficult

00:31:49,760 --> 00:32:01,840
for a machine to understand it

00:32:03,360 --> 00:32:08,320
yeah so carlos wrote multiple headers

00:32:06,159 --> 00:32:11,840
and gives us a number of columns

00:32:08,320 --> 00:32:13,600
uh yep like mix of different results on

00:32:11,840 --> 00:32:17,519
the same table

00:32:13,600 --> 00:32:20,000
the less than symbol absolutely

00:32:17,519 --> 00:32:21,039
yeah i mean this i love this example

00:32:20,000 --> 00:32:24,240
because like

00:32:21,039 --> 00:32:25,279
there's a lot of things so you know

00:32:24,240 --> 00:32:28,720
first of all

00:32:25,279 --> 00:32:31,760
is this a header hard to tell

00:32:28,720 --> 00:32:32,320
um this is you know one column but then

00:32:31,760 --> 00:32:37,039
we have

00:32:32,320 --> 00:32:37,039
four columns here and

00:32:37,200 --> 00:32:40,799
the you know the less than symbol this

00:32:39,840 --> 00:32:43,519
is actually very

00:32:40,799 --> 00:32:45,600
common when reporting p-values which is

00:32:43,519 --> 00:32:48,320
part of a statistical test

00:32:45,600 --> 00:32:49,919
sometimes they are reported as like

00:32:48,320 --> 00:32:52,240
whole numbers and sometimes they're

00:32:49,919 --> 00:32:53,360
reported as a range so less than or

00:32:52,240 --> 00:32:56,799
greater than

00:32:53,360 --> 00:33:00,159
and that's very common with science

00:32:56,799 --> 00:33:04,320
um there's also like

00:33:00,159 --> 00:33:06,000
this appears to be a header but it also

00:33:04,320 --> 00:33:08,000
appears to have

00:33:06,000 --> 00:33:09,200
data that is important that we would

00:33:08,000 --> 00:33:12,000
need to capture

00:33:09,200 --> 00:33:14,320
but it might be metadata so it's just

00:33:12,000 --> 00:33:16,799
it's confusing

00:33:14,320 --> 00:33:18,240
but you know if we had all of the

00:33:16,799 --> 00:33:22,840
information in this paper

00:33:18,240 --> 00:33:25,440
then we might understand

00:33:22,840 --> 00:33:27,519
this um this data set

00:33:25,440 --> 00:33:30,799
like it could theoretically be

00:33:27,519 --> 00:33:30,799
understood by humans

00:33:32,480 --> 00:33:35,760
all right so this is one of the things

00:33:34,480 --> 00:33:37,600
that we're trying to work with

00:33:35,760 --> 00:33:38,799
on this project frictionless date

00:33:37,600 --> 00:33:41,360
descriptor

00:33:38,799 --> 00:33:42,559
manuscript automation how can you help

00:33:41,360 --> 00:33:45,600
researchers

00:33:42,559 --> 00:33:46,799
create tables for instance that work

00:33:45,600 --> 00:33:50,559
better

00:33:46,799 --> 00:33:52,960
so data scripter is a tool

00:33:50,559 --> 00:33:55,360
that works to generate textual entities

00:33:52,960 --> 00:33:58,240
like figure captions method sections

00:33:55,360 --> 00:33:59,200
data tables and it also generates study

00:33:58,240 --> 00:34:01,519
metadata

00:33:59,200 --> 00:34:04,240
it assists authors and metadata and data

00:34:01,519 --> 00:34:07,279
deposition to public repositories

00:34:04,240 --> 00:34:08,480
so this is you know things that i was

00:34:07,279 --> 00:34:10,800
just talking about

00:34:08,480 --> 00:34:12,800
so it made a lot of sense for us to work

00:34:10,800 --> 00:34:15,040
together and collaborate

00:34:12,800 --> 00:34:17,520
so our project we are trying to create

00:34:15,040 --> 00:34:20,240
frictionless specification profiles

00:34:17,520 --> 00:34:21,839
that can be used with data scripter and

00:34:20,240 --> 00:34:23,599
the main goal is to make published

00:34:21,839 --> 00:34:27,200
research data more reusable

00:34:23,599 --> 00:34:27,200
and more interoperable

00:34:27,280 --> 00:34:30,399
so here's an example of kind of work

00:34:29,919 --> 00:34:34,079
that

00:34:30,399 --> 00:34:37,679
we are working on right now this is

00:34:34,079 --> 00:34:38,560
a key resource table from e-life and

00:34:37,679 --> 00:34:41,679
e-life again

00:34:38,560 --> 00:34:42,560
is a journal that publishes mainly

00:34:41,679 --> 00:34:46,159
biology

00:34:42,560 --> 00:34:47,200
research and they are like pretty

00:34:46,159 --> 00:34:49,280
progressive

00:34:47,200 --> 00:34:50,240
as far as the open science movement goes

00:34:49,280 --> 00:34:53,119
and so they

00:34:50,240 --> 00:34:54,399
actually request that their researchers

00:34:53,119 --> 00:34:56,960
when they submit

00:34:54,399 --> 00:34:58,000
research that they submit their

00:34:56,960 --> 00:34:59,760
resources

00:34:58,000 --> 00:35:01,200
in this table that follows the

00:34:59,760 --> 00:35:03,520
specification

00:35:01,200 --> 00:35:05,440
so it all you know it should all have

00:35:03,520 --> 00:35:05,760
these header rows and it should have you

00:35:05,440 --> 00:35:09,599
know

00:35:05,760 --> 00:35:12,640
a few additional constraints so

00:35:09,599 --> 00:35:13,359
as a test we decided to create a

00:35:12,640 --> 00:35:15,839
frictionless

00:35:13,359 --> 00:35:16,560
specification profile that could work

00:35:15,839 --> 00:35:19,040
with the

00:35:16,560 --> 00:35:20,720
key resource table that's what i'm

00:35:19,040 --> 00:35:23,760
showing you here

00:35:20,720 --> 00:35:24,720
and this will be familiar to you from

00:35:23,760 --> 00:35:28,160
when we were looking

00:35:24,720 --> 00:35:30,480
at the metadata and the schema

00:35:28,160 --> 00:35:31,520
in the datapackage.json file from

00:35:30,480 --> 00:35:33,280
earlier

00:35:31,520 --> 00:35:34,800
so here you can see the schema with the

00:35:33,280 --> 00:35:38,079
field names

00:35:34,800 --> 00:35:38,800
and um you know the type and then here

00:35:38,079 --> 00:35:41,920
we have

00:35:38,800 --> 00:35:45,119
you know the various different

00:35:41,920 --> 00:35:45,599
types of reagents that could be okay to

00:35:45,119 --> 00:35:47,520
have

00:35:45,599 --> 00:35:49,680
so this is just describing this you know

00:35:47,520 --> 00:35:51,920
one part

00:35:49,680 --> 00:35:53,359
and you can see this is still pretty

00:35:51,920 --> 00:35:56,160
messy so we still have a work in

00:35:53,359 --> 00:35:56,160
progress here

00:35:56,960 --> 00:36:01,040
okay another example that we are working

00:36:00,320 --> 00:36:04,400
on

00:36:01,040 --> 00:36:09,040
is statistics and i think maybe

00:36:04,400 --> 00:36:09,040
i accidentally skipped over that one

00:36:10,320 --> 00:36:14,400
oh okay i think i deleted that slide but

00:36:12,800 --> 00:36:16,400
i can tell you about it

00:36:14,400 --> 00:36:18,079
so we're also working on creating a

00:36:16,400 --> 00:36:21,520
frictionless profile

00:36:18,079 --> 00:36:24,320
to explain statistics

00:36:21,520 --> 00:36:27,440
and to make statistic results reporting

00:36:24,320 --> 00:36:29,119
more efficient and more standardized

00:36:27,440 --> 00:36:31,440
and we're working with the stato

00:36:29,119 --> 00:36:34,160
ontology to do this and stato

00:36:31,440 --> 00:36:35,119
is a statistics ontology that our

00:36:34,160 --> 00:36:39,040
collaborator

00:36:35,119 --> 00:36:42,440
dr rocacera works on and the idea here

00:36:39,040 --> 00:36:44,000
is that you would be able to define

00:36:42,440 --> 00:36:46,400
specifications

00:36:44,000 --> 00:36:47,520
for reporting the results of statistical

00:36:46,400 --> 00:36:49,920
tests

00:36:47,520 --> 00:36:51,040
and this is important because when

00:36:49,920 --> 00:36:53,680
research is done

00:36:51,040 --> 00:36:54,400
you have to analyze the data but

00:36:53,680 --> 00:36:57,520
scientists

00:36:54,400 --> 00:36:58,880
aren't always trained in doing

00:36:57,520 --> 00:37:02,800
statistics

00:36:58,880 --> 00:37:04,240
and statistics is hard so

00:37:02,800 --> 00:37:06,640
it can be difficult to you know know

00:37:04,240 --> 00:37:10,240
which tests to do and

00:37:06,640 --> 00:37:13,040
when scientists publish their results

00:37:10,240 --> 00:37:15,440
they usually write down you know like we

00:37:13,040 --> 00:37:16,240
performed a t-test or we performed an

00:37:15,440 --> 00:37:17,920
anova

00:37:16,240 --> 00:37:20,160
but that's all of the description that's

00:37:17,920 --> 00:37:23,520
given where as in reality

00:37:20,160 --> 00:37:26,560
you need more information to understand

00:37:23,520 --> 00:37:28,240
the statistical analysis that was done

00:37:26,560 --> 00:37:30,400
so the idea is that we are creating a

00:37:28,240 --> 00:37:33,440
frictionless profile that would help

00:37:30,400 --> 00:37:35,839
define the various statistical tests

00:37:33,440 --> 00:37:38,000
so it would include the name of the test

00:37:35,839 --> 00:37:41,359
a description to the test

00:37:38,000 --> 00:37:43,520
and also an rdf type link and

00:37:41,359 --> 00:37:45,280
you can see we have the rdf here for

00:37:43,520 --> 00:37:48,400
this other example

00:37:45,280 --> 00:37:51,200
and an rdf type will link to an

00:37:48,400 --> 00:37:52,160
ontology and ontologies are great

00:37:51,200 --> 00:37:55,280
because they are

00:37:52,160 --> 00:37:55,839
you know linked um entities and then you

00:37:55,280 --> 00:37:58,880
can do

00:37:55,839 --> 00:38:00,880
some really cool like modeling or

00:37:58,880 --> 00:38:04,000
understanding of the data once you have

00:38:00,880 --> 00:38:06,960
that information as well

00:38:04,000 --> 00:38:08,800
okay sorry i deleted that example but

00:38:06,960 --> 00:38:11,839
hopefully i explained it well enough

00:38:08,800 --> 00:38:14,400
for you okay so the next steps

00:38:11,839 --> 00:38:16,320
with this project are that we are going

00:38:14,400 --> 00:38:17,520
to create more frictionless profiles for

00:38:16,320 --> 00:38:20,800
data tables

00:38:17,520 --> 00:38:23,760
we're working on domain specific tables

00:38:20,800 --> 00:38:24,960
so things like um really a lot of like

00:38:23,760 --> 00:38:27,280
genetics

00:38:24,960 --> 00:38:28,720
is what we're working on right now and

00:38:27,280 --> 00:38:30,240
then we also want to integrate these

00:38:28,720 --> 00:38:31,119
frictionless profiles with the data

00:38:30,240 --> 00:38:34,320
scripter app

00:38:31,119 --> 00:38:37,839
for easier more standard manuscripts

00:38:34,320 --> 00:38:40,000
and you know kind of a a really big goal

00:38:37,839 --> 00:38:41,200
would be to be able to describe a table

00:38:40,000 --> 00:38:44,000
like this

00:38:41,200 --> 00:38:46,480
in a machine readable way and in a

00:38:44,000 --> 00:38:48,880
reproducible way

00:38:46,480 --> 00:38:50,560
but another thing that i want to you

00:38:48,880 --> 00:38:52,079
know a question that i want to leave you

00:38:50,560 --> 00:38:55,520
with that maybe we can talk about

00:38:52,079 --> 00:38:58,320
in a few minutes is what do you think

00:38:55,520 --> 00:39:00,079
the balance is between making something

00:38:58,320 --> 00:39:01,680
machine readable and making something

00:39:00,079 --> 00:39:03,359
human readable

00:39:01,680 --> 00:39:05,040
you know when scientists are publishing

00:39:03,359 --> 00:39:07,680
their research should they

00:39:05,040 --> 00:39:09,040
publish a data table and should they

00:39:07,680 --> 00:39:11,119
prioritize publishing it

00:39:09,040 --> 00:39:12,880
for machines or should they prioritize

00:39:11,119 --> 00:39:14,880
publishing it for humans

00:39:12,880 --> 00:39:18,640
so i'd love to talk about that as well

00:39:14,880 --> 00:39:22,480
or you know is there a happy medium

00:39:18,640 --> 00:39:24,400
okay so how can you participate

00:39:22,480 --> 00:39:26,400
contribute to frictionless we're always

00:39:24,400 --> 00:39:29,440
looking for new contributors

00:39:26,400 --> 00:39:30,000
and also if you are a researcher in any

00:39:29,440 --> 00:39:31,599
field

00:39:30,000 --> 00:39:33,119
please publish your research and your

00:39:31,599 --> 00:39:35,680
data openly

00:39:33,119 --> 00:39:37,359
and i want you to think how can you make

00:39:35,680 --> 00:39:38,960
your work more open and more

00:39:37,359 --> 00:39:41,359
reproducible

00:39:38,960 --> 00:39:43,280
and then i wanted to show you a few

00:39:41,359 --> 00:39:45,040
other cool projects

00:39:43,280 --> 00:39:46,880
that if this has sparked your interest i

00:39:45,040 --> 00:39:49,440
encourage you to look at them as well

00:39:46,880 --> 00:39:50,320
the touring way has a collaborative

00:39:49,440 --> 00:39:52,320
guide

00:39:50,320 --> 00:39:54,160
and community for working with

00:39:52,320 --> 00:39:56,960
reproducible research

00:39:54,160 --> 00:39:58,880
the journal of open source software is a

00:39:56,960 --> 00:40:01,200
journal of open source software

00:39:58,880 --> 00:40:03,119
and this is a way that researchers can

00:40:01,200 --> 00:40:03,760
publish the software code that they are

00:40:03,119 --> 00:40:06,400
writing

00:40:03,760 --> 00:40:07,200
and get like some career currency credit

00:40:06,400 --> 00:40:09,599
for it

00:40:07,200 --> 00:40:10,480
and they're usually looking for

00:40:09,599 --> 00:40:12,800
reviewers

00:40:10,480 --> 00:40:14,880
so if you work in open source and you

00:40:12,800 --> 00:40:17,599
want to help review some of this new

00:40:14,880 --> 00:40:18,400
scientific open source code i encourage

00:40:17,599 --> 00:40:21,440
you to look at

00:40:18,400 --> 00:40:24,800
this journal and then outbreak science

00:40:21,440 --> 00:40:27,359
rapid pre-review is a crowdsource

00:40:24,800 --> 00:40:28,400
pre-print review server where if you

00:40:27,359 --> 00:40:31,040
want to

00:40:28,400 --> 00:40:32,160
read some of this like brand new covet

00:40:31,040 --> 00:40:34,160
19 research

00:40:32,160 --> 00:40:35,440
and give your feedback to the authors to

00:40:34,160 --> 00:40:37,280
improve their paper

00:40:35,440 --> 00:40:40,800
this is where you should do it so i

00:40:37,280 --> 00:40:42,160
encourage everyone to participate

00:40:40,800 --> 00:40:44,880
and then if you want to try this

00:40:42,160 --> 00:40:46,800
yourself um here are the two links that

00:40:44,880 --> 00:40:50,160
i encourage you to check out

00:40:46,800 --> 00:40:53,599
this is our new like brand new

00:40:50,160 --> 00:40:55,119
python code and so um a good place to

00:40:53,599 --> 00:40:56,720
start is our documentation

00:40:55,119 --> 00:40:58,640
and then we also have a guide on our

00:40:56,720 --> 00:41:00,640
website which is still being in the

00:40:58,640 --> 00:41:01,760
process of being updated to represent

00:41:00,640 --> 00:41:03,680
our new code so

00:41:01,760 --> 00:41:06,480
start at the docs first but the guide

00:41:03,680 --> 00:41:09,200
also has some good bits

00:41:06,480 --> 00:41:11,599
and i want to thank you and take some

00:41:09,200 --> 00:41:15,200
questions we have a few minutes left

00:41:11,599 --> 00:41:18,000
and you know again lots of links

00:41:15,200 --> 00:41:19,599
there's a link to my slides if you're

00:41:18,000 --> 00:41:20,800
interested in joining our community the

00:41:19,599 --> 00:41:23,839
discord chat

00:41:20,800 --> 00:41:25,680
is where we have our community chat and

00:41:23,839 --> 00:41:28,720
so please

00:41:25,680 --> 00:41:32,000
come and join our community we actually

00:41:28,720 --> 00:41:37,040
have a community call on thursday

00:41:32,000 --> 00:41:40,480
so this week at noon u.s eastern 5 pm uk

00:41:37,040 --> 00:41:42,160
and it's just a like casual zoom chat

00:41:40,480 --> 00:41:45,200
where you can come here about

00:41:42,160 --> 00:41:47,920
updates and meet other people also we

00:41:45,200 --> 00:41:49,680
are hiring a community manager right now

00:41:47,920 --> 00:41:50,720
so if you're interested in that or know

00:41:49,680 --> 00:41:52,960
somebody that would be a

00:41:50,720 --> 00:41:54,160
good community manager for a somewhat

00:41:52,960 --> 00:41:57,520
technical role

00:41:54,160 --> 00:42:00,839
check that out and i will answer

00:41:57,520 --> 00:42:03,839
questions for the next few minutes

00:42:00,839 --> 00:42:03,839
please

00:42:07,599 --> 00:42:12,480
okay beth has a question i'm gonna give

00:42:09,520 --> 00:42:12,480
us the water first

00:42:13,119 --> 00:42:16,240
okay thanks for your question beth i'm

00:42:14,560 --> 00:42:18,960
gonna read it out loud

00:42:16,240 --> 00:42:21,520
do you have any recommendations about

00:42:18,960 --> 00:42:23,200
online platforms to publish your data to

00:42:21,520 --> 00:42:24,160
make it widely accessible for the long

00:42:23,200 --> 00:42:26,400
term

00:42:24,160 --> 00:42:28,079
for example if you're publishing a paper

00:42:26,400 --> 00:42:31,599
and want your data or code to be

00:42:28,079 --> 00:42:35,119
easily accessible to other researchers

00:42:31,599 --> 00:42:38,800
yes um i personally like

00:42:35,119 --> 00:42:42,839
zenodo which is a here i can type it in

00:42:38,800 --> 00:42:44,800
here let me make sure i'm typing it to

00:42:42,839 --> 00:42:46,880
everybody

00:42:44,800 --> 00:42:48,000
zanodo is run by cern and they're a

00:42:46,880 --> 00:42:52,400
great repository

00:42:48,000 --> 00:42:55,359
um dryad is another good repository

00:42:52,400 --> 00:42:55,359
and then there's a lot of

00:42:55,440 --> 00:43:01,200
domain specific repositories so you know

00:42:58,319 --> 00:43:01,200
like vcodimo

00:43:02,400 --> 00:43:07,839
yes so i would encourage

00:43:05,760 --> 00:43:09,280
using an online repository you can also

00:43:07,839 --> 00:43:13,839
use like github

00:43:09,280 --> 00:43:16,720
if you don't have really large data

00:43:13,839 --> 00:43:16,720
does that help beth

00:43:19,040 --> 00:43:22,319
cool are there other questions um let's

00:43:22,000 --> 00:43:26,079
see

00:43:22,319 --> 00:43:28,560
ms or wanted can you share these urls

00:43:26,079 --> 00:43:28,560
yes

00:43:29,440 --> 00:43:35,440
so missouri the best way place to find

00:43:31,680 --> 00:43:35,440
it would be to go to the bitly link

00:43:37,040 --> 00:43:41,760
oh great okay laura

00:43:40,319 --> 00:43:43,520
additionally if you're working within

00:43:41,760 --> 00:43:45,359
higher ed your institution may have an

00:43:43,520 --> 00:43:46,640
institutional repository to support

00:43:45,359 --> 00:43:49,280
david's data publishing

00:43:46,640 --> 00:43:49,680
absolutely that is a great place to turn

00:43:49,280 --> 00:43:52,240
to

00:43:49,680 --> 00:43:53,359
if you are at an organization that has a

00:43:52,240 --> 00:43:56,240
librarian

00:43:53,359 --> 00:43:57,280
or research librarians they are going to

00:43:56,240 --> 00:43:58,960
be your best friend

00:43:57,280 --> 00:44:01,680
so ask them they will definitely have

00:43:58,960 --> 00:44:03,200
suggestions

00:44:01,680 --> 00:44:09,839
so we have other questions i think we

00:44:03,200 --> 00:44:09,839
have about a minute left

00:44:12,079 --> 00:44:18,319
did i miss any questions go back and try

00:44:15,440 --> 00:44:18,319
and read the chat

00:44:20,800 --> 00:44:25,599
all right if you have questions and or

00:44:23,760 --> 00:44:27,119
if you think of questions later you know

00:44:25,599 --> 00:44:29,359
feel free to email me

00:44:27,119 --> 00:44:31,040
or you can find me on twitter and ping

00:44:29,359 --> 00:44:37,520
me and i'd be happy to continue

00:44:31,040 --> 00:44:39,599
having a discussion with you

00:44:37,520 --> 00:44:39,599

YouTube URL: https://www.youtube.com/watch?v=7zQBS1AugwU


