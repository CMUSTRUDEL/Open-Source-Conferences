Title: Demystifying SRE and DevOps - H. "Waldo" Grunenwald
Publication date: 2020-12-03
Playlist: DevOpsDay Raleigh at All Things Open
Description: 
	Presented by: H. "Waldo" Grunenwald, Datadog
Presented at All Things Open 2020, DevOpsDay Raleigh

Abstract: DevOps made its debut ten years ago, and there has been confusion over exactly what it is ever since.  From a cultural movement, to a set of tools, to job and team descriptions, there have been many conflicting viewpoints. When Site Reliability Engineering emerged as a discipline in 2016, it only added to the confusion among Engineering and Engineering Leadership.  Unfortunately confusion still remains, and many wonder how to incorporate these ideas and roles into their organizations.

By the end of this session, you will have a firm grasp of what SRE and DevOps are and how they relate to one another.  I will describe the advantages and pitfalls of common industry practices, describe tools for sharing information, and discuss balancing innovation with availability. Finally, you will have suggestions and ideas for incorporating SRE into your organization, with the goal of iterating more rapidly and safely.
Captions: 
	00:00:04,960 --> 00:00:09,440
hey folks

00:00:05,680 --> 00:00:09,440
it's great to be here um

00:00:09,599 --> 00:00:16,240
yeah so this is as katie mentioned

00:00:12,840 --> 00:00:17,359
demystifying sre and devops and i need

00:00:16,240 --> 00:00:20,880
to advance my side

00:00:17,359 --> 00:00:22,960
there we go now i want to get this out

00:00:20,880 --> 00:00:25,840
of the way i am a

00:00:22,960 --> 00:00:27,599
i work for datadog i assume that most of

00:00:25,840 --> 00:00:31,519
you are familiar with it

00:00:27,599 --> 00:00:34,000
but we do rely on sre very heavily

00:00:31,519 --> 00:00:34,880
um we have a very strong devops culture

00:00:34,000 --> 00:00:37,520
and we

00:00:34,880 --> 00:00:38,800
have had quite a road in implementing

00:00:37,520 --> 00:00:45,280
sre in our

00:00:38,800 --> 00:00:48,399
in our space um

00:00:45,280 --> 00:00:48,399
losing focus here

00:00:50,800 --> 00:01:01,120
come on

00:00:58,719 --> 00:01:02,160
well while my machine decides to take a

00:01:01,120 --> 00:01:04,159
nap and

00:01:02,160 --> 00:01:06,320
give me the swirly beach ball there we

00:01:04,159 --> 00:01:06,320
go

00:01:07,920 --> 00:01:11,200
so my slides have finally caught up all

00:01:10,000 --> 00:01:13,119
right um

00:01:11,200 --> 00:01:14,640
in really short datadog's an

00:01:13,119 --> 00:01:17,119
observability platform

00:01:14,640 --> 00:01:18,479
that provides full visibility across

00:01:17,119 --> 00:01:19,920
your organization

00:01:18,479 --> 00:01:21,360
we span end-to-end from your

00:01:19,920 --> 00:01:23,200
infrastructure network to your

00:01:21,360 --> 00:01:25,840
applications and services

00:01:23,200 --> 00:01:27,360
all the way to your end users this

00:01:25,840 --> 00:01:30,320
enables everyone

00:01:27,360 --> 00:01:31,360
operations development security really

00:01:30,320 --> 00:01:32,960
anybody in the business

00:01:31,360 --> 00:01:34,560
to have a shared understanding of your

00:01:32,960 --> 00:01:36,400
systems

00:01:34,560 --> 00:01:38,840
and the ability to immediately resolve

00:01:36,400 --> 00:01:41,280
problems when they arise

00:01:38,840 --> 00:01:43,119
um but that's

00:01:41,280 --> 00:01:44,560
really all i'm going to talk about the

00:01:43,119 --> 00:01:47,200
company itself today

00:01:44,560 --> 00:01:49,200
um my goal for our time today is to

00:01:47,200 --> 00:01:50,880
clear up any confusion about what devops

00:01:49,200 --> 00:01:53,119
and sre are

00:01:50,880 --> 00:01:55,280
some tools and practices that will help

00:01:53,119 --> 00:01:57,360
you on your devops journey

00:01:55,280 --> 00:02:00,960
and the kinds of people that can help

00:01:57,360 --> 00:02:03,040
improve your engineering efforts

00:02:00,960 --> 00:02:04,320
as well as suggestions for incorporating

00:02:03,040 --> 00:02:07,040
sre practices

00:02:04,320 --> 00:02:08,959
in your organization now you may be

00:02:07,040 --> 00:02:12,160
wondering who this bearded beauty is

00:02:08,959 --> 00:02:14,400
and why he's qualified hi

00:02:12,160 --> 00:02:16,400
i'm waldo i used to be a productive

00:02:14,400 --> 00:02:18,000
member of society before i took this job

00:02:16,400 --> 00:02:20,160
but i come from the systems and

00:02:18,000 --> 00:02:21,760
operations engineering world

00:02:20,160 --> 00:02:24,000
before accidentally going to the right

00:02:21,760 --> 00:02:26,879
conference i was a fairly typical

00:02:24,000 --> 00:02:28,480
bitter sis admin type the devops

00:02:26,879 --> 00:02:31,120
community was still pretty new

00:02:28,480 --> 00:02:33,760
but attending velocity in 2011 was

00:02:31,120 --> 00:02:36,720
revelatory for me

00:02:33,760 --> 00:02:38,319
that week literally changed my career

00:02:36,720 --> 00:02:40,239
i'd simply never been

00:02:38,319 --> 00:02:41,360
in an organization that didn't have a

00:02:40,239 --> 00:02:43,760
contentious

00:02:41,360 --> 00:02:45,680
and often even antagonistic relationship

00:02:43,760 --> 00:02:48,720
between the people who make things

00:02:45,680 --> 00:02:50,239
and the people who keep them running now

00:02:48,720 --> 00:02:53,120
since we're here i should explain by

00:02:50,239 --> 00:02:55,360
what i mean by devops

00:02:53,120 --> 00:02:56,239
devops is a professional and cultural

00:02:55,360 --> 00:02:58,720
movement

00:02:56,239 --> 00:03:00,480
that focuses on openness sharing and

00:02:58,720 --> 00:03:03,360
mutual respect

00:03:00,480 --> 00:03:05,200
it seeks to improve the lives uh the

00:03:03,360 --> 00:03:08,080
quality of life for its adherence

00:03:05,200 --> 00:03:08,720
for your company and for your customers

00:03:08,080 --> 00:03:10,640
devops

00:03:08,720 --> 00:03:12,239
addresses the situation where a lot of

00:03:10,640 --> 00:03:13,920
effort is spent on the development of

00:03:12,239 --> 00:03:17,040
features

00:03:13,920 --> 00:03:17,519
but the operation of the features making

00:03:17,040 --> 00:03:19,680
them

00:03:17,519 --> 00:03:21,360
actually available to their users

00:03:19,680 --> 00:03:22,400
historically has gotten very little

00:03:21,360 --> 00:03:26,000
investment

00:03:22,400 --> 00:03:28,080
from the business but availability

00:03:26,000 --> 00:03:29,040
is the one feature that any application

00:03:28,080 --> 00:03:32,239
needs

00:03:29,040 --> 00:03:34,080
and that's driven by its reliability

00:03:32,239 --> 00:03:36,560
but by the nature of most organizations

00:03:34,080 --> 00:03:39,120
the people who write features

00:03:36,560 --> 00:03:40,239
don't figure in reliability largely

00:03:39,120 --> 00:03:42,239
because

00:03:40,239 --> 00:03:46,480
the impact of that reliability

00:03:42,239 --> 00:03:48,480
historically hasn't been felt by them

00:03:46,480 --> 00:03:50,560
now there is a an acronym with a couple

00:03:48,480 --> 00:03:53,200
of variants that is helpful to describe

00:03:50,560 --> 00:03:56,799
some of the core tenets of devops

00:03:53,200 --> 00:03:59,920
cams this stands for culture automation

00:03:56,799 --> 00:04:01,840
metrics and sharing sometimes you'll see

00:03:59,920 --> 00:04:04,560
clams or comms with the addition of

00:04:01,840 --> 00:04:05,200
l for learning but i'm going to go

00:04:04,560 --> 00:04:08,879
through these

00:04:05,200 --> 00:04:10,400
very briefly culture asks us to be

00:04:08,879 --> 00:04:13,280
conscious of the culture that we're

00:04:10,400 --> 00:04:17,040
creating and participating in

00:04:13,280 --> 00:04:17,600
at work automation's focus is to reduce

00:04:17,040 --> 00:04:20,639
toil

00:04:17,600 --> 00:04:22,400
and making steps repeatable less risky

00:04:20,639 --> 00:04:24,880
and freeing people up to do more

00:04:22,400 --> 00:04:26,960
interesting work

00:04:24,880 --> 00:04:28,479
we care about measurement or metrics so

00:04:26,960 --> 00:04:29,199
that we can see the impact of our

00:04:28,479 --> 00:04:32,479
changes

00:04:29,199 --> 00:04:32,479
and how successful they are

00:04:32,639 --> 00:04:38,479
sharing encourages us encourages us

00:04:36,080 --> 00:04:39,520
to be radically open about our failures

00:04:38,479 --> 00:04:42,560
as much of

00:04:39,520 --> 00:04:44,560
as much as our successes

00:04:42,560 --> 00:04:46,479
and if you want to include the l

00:04:44,560 --> 00:04:48,080
learning requires a degree of

00:04:46,479 --> 00:04:50,400
self-awareness as well as being

00:04:48,080 --> 00:04:51,840
receptive to feedback

00:04:50,400 --> 00:04:54,560
admitting when something doesn't work

00:04:51,840 --> 00:04:57,520
and changing it

00:04:54,560 --> 00:04:58,240
now despite dev and ops being part of

00:04:57,520 --> 00:05:01,039
the name

00:04:58,240 --> 00:05:02,880
it isn't just about those two roles

00:05:01,039 --> 00:05:03,840
devops is literally about the entire

00:05:02,880 --> 00:05:05,600
business

00:05:03,840 --> 00:05:07,280
encouraging everyone to be aware of

00:05:05,600 --> 00:05:09,199
their roles in the business

00:05:07,280 --> 00:05:11,039
and that their work is aligned with the

00:05:09,199 --> 00:05:13,919
businesses goals

00:05:11,039 --> 00:05:14,800
so honestly there's no need to awkwardly

00:05:13,919 --> 00:05:18,080
add

00:05:14,800 --> 00:05:21,280
uh add things to the word devops um

00:05:18,080 --> 00:05:23,039
adding qa or security or net is

00:05:21,280 --> 00:05:25,840
unnecessary they're they're already

00:05:23,039 --> 00:05:25,840
included

00:05:25,919 --> 00:05:30,080
we've lost the battle that devops is not

00:05:27,919 --> 00:05:31,680
a job title given how popular the

00:05:30,080 --> 00:05:34,160
recruiting for that has been

00:05:31,680 --> 00:05:35,360
um i think this ban has one of the best

00:05:34,160 --> 00:05:39,280
titles in the world

00:05:35,360 --> 00:05:42,000
um i mean one day i aspired to be a

00:05:39,280 --> 00:05:44,720
rasputin impersonator

00:05:42,000 --> 00:05:45,840
but that's neither here nor there

00:05:44,720 --> 00:05:47,759
technically speaking

00:05:45,840 --> 00:05:49,360
it's not really any different than what

00:05:47,759 --> 00:05:50,000
excellent systems or operations

00:05:49,360 --> 00:05:52,720
engineering

00:05:50,000 --> 00:05:55,199
has been historically there's but there

00:05:52,720 --> 00:05:57,759
is no such thing as devops tools

00:05:55,199 --> 00:05:58,720
and if you have a team called devops

00:05:57,759 --> 00:06:01,680
well uh

00:05:58,720 --> 00:06:01,680
i'll address that later

00:06:04,240 --> 00:06:07,280
i say all of that because it's nearly

00:06:06,160 --> 00:06:10,240
impossible

00:06:07,280 --> 00:06:11,039
to describe sre for site reliability

00:06:10,240 --> 00:06:14,560
engineering

00:06:11,039 --> 00:06:15,840
without an understanding of devops sre

00:06:14,560 --> 00:06:18,720
is a set of practices

00:06:15,840 --> 00:06:20,479
and it can be a job description it could

00:06:18,720 --> 00:06:21,039
also be said that devops is an idea

00:06:20,479 --> 00:06:24,479
where

00:06:21,039 --> 00:06:27,600
slre is an implementation

00:06:24,479 --> 00:06:30,880
when the google book when the sre

00:06:27,600 --> 00:06:32,720
when the sre book was published in 2016

00:06:30,880 --> 00:06:34,960
many of us were a bit surprised to see

00:06:32,720 --> 00:06:36,800
that it looked a lot like google branded

00:06:34,960 --> 00:06:40,000
devops

00:06:36,800 --> 00:06:42,639
ultimately sre is the idea of how google

00:06:40,000 --> 00:06:45,520
in isolation addresses the problems that

00:06:42,639 --> 00:06:46,960
the devops community was working on

00:06:45,520 --> 00:06:49,199
i'll describe the skills to look for

00:06:46,960 --> 00:06:50,319
later but in short the people best

00:06:49,199 --> 00:06:52,400
suited to this

00:06:50,319 --> 00:06:54,479
are developers with an operations

00:06:52,400 --> 00:06:57,599
mindset or ops folks

00:06:54,479 --> 00:06:57,599
with software skills

00:06:58,319 --> 00:07:01,599
in order for devops and sre to be most

00:07:00,800 --> 00:07:02,800
effective

00:07:01,599 --> 00:07:04,880
you need to consider how your

00:07:02,800 --> 00:07:07,199
organization is structured

00:07:04,880 --> 00:07:09,120
now it's almost not a culture talk if i

00:07:07,199 --> 00:07:10,800
don't bring up conway's law

00:07:09,120 --> 00:07:12,880
which is an adage that says

00:07:10,800 --> 00:07:14,800
organizations which

00:07:12,880 --> 00:07:16,800
design systems are constrained to

00:07:14,800 --> 00:07:18,880
produce designs

00:07:16,800 --> 00:07:19,919
which are copies of their organizational

00:07:18,880 --> 00:07:23,360
structures

00:07:19,919 --> 00:07:25,280
of of their orgs this immediately

00:07:23,360 --> 00:07:26,479
makes most people think about their org

00:07:25,280 --> 00:07:28,560
chart

00:07:26,479 --> 00:07:31,039
and they're not wrong but the key word

00:07:28,560 --> 00:07:33,120
is communication

00:07:31,039 --> 00:07:35,039
if you have a typical org chart where

00:07:33,120 --> 00:07:35,759
development and operations are distinct

00:07:35,039 --> 00:07:38,160
groups

00:07:35,759 --> 00:07:40,160
they're very likely to have conflict

00:07:38,160 --> 00:07:42,560
because they have opposing goals

00:07:40,160 --> 00:07:43,599
development is rewarded for rapid change

00:07:42,560 --> 00:07:46,960
and operations

00:07:43,599 --> 00:07:49,199
is rewarded for stability

00:07:46,960 --> 00:07:50,720
this is where we disambiguate betw

00:07:49,199 --> 00:07:52,800
between reporting structures and

00:07:50,720 --> 00:07:54,800
communication structures

00:07:52,800 --> 00:07:55,919
let's take two hypothetical teams at an

00:07:54,800 --> 00:07:58,160
e-commerce site

00:07:55,919 --> 00:07:59,440
that interact with one another say a

00:07:58,160 --> 00:08:00,800
team that works on the inventory

00:07:59,440 --> 00:08:03,440
products and one that works on the

00:08:00,800 --> 00:08:04,960
shopping cart functionality

00:08:03,440 --> 00:08:07,919
now let's say the management of these

00:08:04,960 --> 00:08:12,639
two groups don't work well together

00:08:07,919 --> 00:08:14,560
it's not active fighting but friction

00:08:12,639 --> 00:08:16,879
if the two teams don't have any other

00:08:14,560 --> 00:08:19,199
interaction outside of their management

00:08:16,879 --> 00:08:21,120
then communication's minimal and the

00:08:19,199 --> 00:08:21,919
likelihood of misunderstandings will be

00:08:21,120 --> 00:08:23,919
high

00:08:21,919 --> 00:08:25,840
it's unlikely that their software will

00:08:23,919 --> 00:08:28,560
perform well

00:08:25,840 --> 00:08:29,840
if for instance members of the inventory

00:08:28,560 --> 00:08:32,080
and shopping cart teams

00:08:29,840 --> 00:08:33,519
have lunch together regularly they're

00:08:32,080 --> 00:08:35,839
much more likely to have an easier

00:08:33,519 --> 00:08:37,519
working relationship with each other

00:08:35,839 --> 00:08:40,719
and the quality of their software's

00:08:37,519 --> 00:08:42,320
interaction is going to reflect that

00:08:40,719 --> 00:08:44,000
now it's not great that their management

00:08:42,320 --> 00:08:46,560
doesn't work together well

00:08:44,000 --> 00:08:47,040
um they might the individuals on those

00:08:46,560 --> 00:08:48,399
teams

00:08:47,040 --> 00:08:50,480
might not be getting the support and

00:08:48,399 --> 00:08:52,080
knowledge that they need but the fact

00:08:50,480 --> 00:08:54,640
that they do have a communication

00:08:52,080 --> 00:08:56,240
structure in place does improve the

00:08:54,640 --> 00:08:59,920
quality of their software

00:08:56,240 --> 00:09:03,040
and thus the customer experience

00:08:59,920 --> 00:09:04,959
a popular theme in devops and sre is the

00:09:03,040 --> 00:09:06,800
breaking down of silos

00:09:04,959 --> 00:09:08,800
then metaphor usually refers to grain

00:09:06,800 --> 00:09:13,120
silos but in some organizations

00:09:08,800 --> 00:09:13,120
missile silos may seem more appropriate

00:09:13,200 --> 00:09:18,880
but a common misstep has been to rename

00:09:16,480 --> 00:09:20,959
their operations team to devops

00:09:18,880 --> 00:09:21,920
effectively changing nothing else and

00:09:20,959 --> 00:09:24,399
then be

00:09:21,920 --> 00:09:26,080
disappointed in the results that didn't

00:09:24,399 --> 00:09:27,760
emerge

00:09:26,080 --> 00:09:30,000
another common misstep is to create a

00:09:27,760 --> 00:09:31,680
dedicated devops team that sits between

00:09:30,000 --> 00:09:33,600
development and operations

00:09:31,680 --> 00:09:36,800
but this one effect is just creating

00:09:33,600 --> 00:09:38,560
another silo

00:09:36,800 --> 00:09:40,720
in my opinion the organizational

00:09:38,560 --> 00:09:43,680
paradigm that works best

00:09:40,720 --> 00:09:44,720
is what's called the product team you

00:09:43,680 --> 00:09:47,760
may also hear this

00:09:44,720 --> 00:09:50,800
called referred to as service teams

00:09:47,760 --> 00:09:52,959
in this model self-contained

00:09:50,800 --> 00:09:54,560
cross-functional teams are created to

00:09:52,959 --> 00:09:55,519
solve the business needs they're tasked

00:09:54,560 --> 00:09:57,519
with

00:09:55,519 --> 00:09:59,839
in addition to the team producing the

00:09:57,519 --> 00:10:03,440
software needed to solve the problems

00:09:59,839 --> 00:10:06,320
they also operate those solutions

00:10:03,440 --> 00:10:07,279
this applies to build versus buy as well

00:10:06,320 --> 00:10:09,760
the fact that a team

00:10:07,279 --> 00:10:10,720
operates its own solutions is a key fact

00:10:09,760 --> 00:10:13,920
and feature

00:10:10,720 --> 00:10:18,240
of product teams you may have heard this

00:10:13,920 --> 00:10:20,959
referred to as you build it you run it

00:10:18,240 --> 00:10:22,480
this ultimately improves reliability and

00:10:20,959 --> 00:10:24,160
reduces recovery times

00:10:22,480 --> 00:10:26,240
because the feedback loop between an

00:10:24,160 --> 00:10:30,480
identified need

00:10:26,240 --> 00:10:32,560
to the deployment is drastically reduced

00:10:30,480 --> 00:10:33,760
in other terms responsibility is aligned

00:10:32,560 --> 00:10:36,720
with authority

00:10:33,760 --> 00:10:36,720
and capability

00:10:37,040 --> 00:10:40,720
in addition to organizing your employee

00:10:39,040 --> 00:10:42,480
structure around products

00:10:40,720 --> 00:10:44,720
you should also consider having them

00:10:42,480 --> 00:10:48,160
seated by their product

00:10:44,720 --> 00:10:49,600
you know back when we had offices uh

00:10:48,160 --> 00:10:51,600
but when teams are developing and

00:10:49,600 --> 00:10:53,360
operating their own products

00:10:51,600 --> 00:10:55,600
they're going to experience a variety of

00:10:53,360 --> 00:10:57,920
problems but when you're in close

00:10:55,600 --> 00:10:59,360
proximity they'll have a

00:10:57,920 --> 00:11:02,079
they'll have a greater breadth of

00:10:59,360 --> 00:11:06,160
experience and skills

00:11:02,079 --> 00:11:07,680
to bring to bear to come to solutions

00:11:06,160 --> 00:11:10,160
further by having people of similar

00:11:07,680 --> 00:11:12,560
skills solving different problems

00:11:10,160 --> 00:11:13,279
in proximity to each other causes

00:11:12,560 --> 00:11:15,920
distraction

00:11:13,279 --> 00:11:17,120
and a less diverse field of insight i

00:11:15,920 --> 00:11:20,399
could go on

00:11:17,120 --> 00:11:22,720
ad nauseum about this but we're going to

00:11:20,399 --> 00:11:22,720
keep this

00:11:26,839 --> 00:11:30,560
short

00:11:28,000 --> 00:11:31,680
you pursue the product team route like

00:11:30,560 --> 00:11:33,040
datadog has

00:11:31,680 --> 00:11:35,200
you may feel that the sharing of

00:11:33,040 --> 00:11:37,279
information around people of similar

00:11:35,200 --> 00:11:40,079
skill sets may be lost

00:11:37,279 --> 00:11:42,880
up to that end datadog has has the

00:11:40,079 --> 00:11:44,880
concepts of squads and goals which are

00:11:42,880 --> 00:11:47,600
sub-communities that cross our product

00:11:44,880 --> 00:11:50,079
team boundaries

00:11:47,600 --> 00:11:52,399
a squad is a short-term group that

00:11:50,079 --> 00:11:56,160
organizes around a single goal

00:11:52,399 --> 00:11:58,959
often an okr that wouldn't fit neatly on

00:11:56,160 --> 00:12:00,639
an existing team or it benefits a large

00:11:58,959 --> 00:12:03,200
number of teams

00:12:00,639 --> 00:12:03,839
previous examples have included topics

00:12:03,200 --> 00:12:06,639
such as

00:12:03,839 --> 00:12:10,079
recruiting and analytics and even

00:12:06,639 --> 00:12:12,720
organizing our next hackathon

00:12:10,079 --> 00:12:13,200
guild owns and shepherds an important

00:12:12,720 --> 00:12:15,760
part of

00:12:13,200 --> 00:12:17,200
our architecture or culture that crosses

00:12:15,760 --> 00:12:19,360
many teams

00:12:17,200 --> 00:12:21,440
guilds are larger and semi-permanent

00:12:19,360 --> 00:12:24,320
versions of a squad

00:12:21,440 --> 00:12:25,200
previous examples of this have included

00:12:24,320 --> 00:12:28,639
front end

00:12:25,200 --> 00:12:28,639
and on-call

00:12:28,880 --> 00:12:32,720
now unfortunately datadog does not have

00:12:31,279 --> 00:12:35,680
fantastic hats

00:12:32,720 --> 00:12:37,279
i am lobbying for this internally i'll

00:12:35,680 --> 00:12:40,399
let you know how we come

00:12:37,279 --> 00:12:40,399
next time we see each other

00:12:41,120 --> 00:12:44,639
now as opposed to a devops team you

00:12:44,240 --> 00:12:47,600
might

00:12:44,639 --> 00:12:48,240
actually want to stand up a sre team

00:12:47,600 --> 00:12:51,360
this is

00:12:48,240 --> 00:12:53,200
one way the sre is distinct from devops

00:12:51,360 --> 00:12:56,399
now that said there are different ways

00:12:53,200 --> 00:12:56,399
that this may take form

00:12:56,560 --> 00:13:02,880
so you could have a team of

00:12:59,760 --> 00:13:06,079
sres whose for instance they

00:13:02,880 --> 00:13:07,200
they do code reviews or they assist in

00:13:06,079 --> 00:13:11,440
incident management

00:13:07,200 --> 00:13:14,160
or they facilitate postmortems

00:13:11,440 --> 00:13:14,720
you may have an engine an sre on that

00:13:14,160 --> 00:13:16,880
team

00:13:14,720 --> 00:13:18,560
who supports a dedicated portfolio of

00:13:16,880 --> 00:13:20,800
teams or products

00:13:18,560 --> 00:13:22,560
they may even be on individual product

00:13:20,800 --> 00:13:25,760
teams

00:13:22,560 --> 00:13:27,680
and another way to slice this would be

00:13:25,760 --> 00:13:28,320
to have individuals rotate on different

00:13:27,680 --> 00:13:31,279
teams

00:13:28,320 --> 00:13:32,639
say like on a per uh per week or sprint

00:13:31,279 --> 00:13:34,560
basis

00:13:32,639 --> 00:13:37,760
and maybe helping out with dedicated

00:13:34,560 --> 00:13:37,760
like bug hunted sprints

00:13:40,079 --> 00:13:44,880
danger dog does all of these uh in one

00:13:43,120 --> 00:13:47,199
way or another we do have

00:13:44,880 --> 00:13:48,240
sres who are permanently on teams we do

00:13:47,199 --> 00:13:51,440
have teams of

00:13:48,240 --> 00:13:54,000
sres we're we are

00:13:51,440 --> 00:13:56,560
continually experimenting with with how

00:13:54,000 --> 00:13:56,560
this works

00:13:57,440 --> 00:14:00,959
and it's going to depend a lot on on

00:14:00,399 --> 00:14:03,600
your

00:14:00,959 --> 00:14:06,560
specific company your culture and the

00:14:03,600 --> 00:14:10,000
people that you have available to you

00:14:06,560 --> 00:14:10,000
but now i want to talk about tools

00:14:10,720 --> 00:14:13,839
these are a set of tools that you should

00:14:12,320 --> 00:14:15,600
be pursuing if you don't have them

00:14:13,839 --> 00:14:17,360
already

00:14:15,600 --> 00:14:18,639
and very few of these are actually

00:14:17,360 --> 00:14:22,399
software many of them

00:14:18,639 --> 00:14:22,399
are are really ways of thinking

00:14:22,880 --> 00:14:26,480
so upfront you have to acknowledge that

00:14:25,279 --> 00:14:28,639
change is hard

00:14:26,480 --> 00:14:29,680
it will take time and it probably won't

00:14:28,639 --> 00:14:32,000
work at first

00:14:29,680 --> 00:14:34,800
um you may have successes but it won't

00:14:32,000 --> 00:14:38,160
be the full-blowns

00:14:34,800 --> 00:14:39,920
it won't be the raving success moonshot

00:14:38,160 --> 00:14:41,839
that you're hoping for

00:14:39,920 --> 00:14:43,519
having a mindset that failure is the

00:14:41,839 --> 00:14:45,360
first step to success

00:14:43,519 --> 00:14:48,000
is greatly going to help you in your

00:14:45,360 --> 00:14:48,000
transitions

00:14:48,480 --> 00:14:51,760
while big bang grand reveals can be

00:14:50,800 --> 00:14:53,839
satisfying

00:14:51,760 --> 00:14:54,880
they're more difficult to get right and

00:14:53,839 --> 00:14:58,079
they're hard

00:14:54,880 --> 00:15:00,480
harder to diagnose when things go wrong

00:14:58,079 --> 00:15:03,519
this is part of the continual iterative

00:15:00,480 --> 00:15:03,519
improvement mindset

00:15:03,839 --> 00:15:07,839
getting in the habit of small releases

00:15:05,760 --> 00:15:09,279
and showing your work earlier to elicit

00:15:07,839 --> 00:15:11,360
feedback

00:15:09,279 --> 00:15:13,120
and running experiments helps keep

00:15:11,360 --> 00:15:15,199
projects on the rails

00:15:13,120 --> 00:15:17,440
and ultimately it drives toward more

00:15:15,199 --> 00:15:19,680
satisfactory outcomes

00:15:17,440 --> 00:15:20,560
this is something i have a problem with

00:15:19,680 --> 00:15:23,440
myself i

00:15:20,560 --> 00:15:24,639
i love the philosophy but i find it hard

00:15:23,440 --> 00:15:27,279
to do myself

00:15:24,639 --> 00:15:29,680
showing getting feedback earlier in the

00:15:27,279 --> 00:15:29,680
process

00:15:29,839 --> 00:15:33,680
now i'm not saying that you need to do

00:15:31,199 --> 00:15:36,079
test driven development here

00:15:33,680 --> 00:15:37,920
but it is a great framework for ensuring

00:15:36,079 --> 00:15:40,240
that the development of a

00:15:37,920 --> 00:15:42,160
has a degree of verifiability before it

00:15:40,240 --> 00:15:43,839
goes anywhere

00:15:42,160 --> 00:15:45,279
wrapping testing into the integration

00:15:43,839 --> 00:15:48,560
and merging process

00:15:45,279 --> 00:15:50,480
removes a lot of potential for faults

00:15:48,560 --> 00:15:51,680
more importantly these tests need to be

00:15:50,480 --> 00:15:54,320
reliable

00:15:51,680 --> 00:15:55,759
having tests that sometimes fail or need

00:15:54,320 --> 00:15:58,560
to be written more than once

00:15:55,759 --> 00:16:01,360
are brittle and fixing that should be

00:15:58,560 --> 00:16:01,360
prioritized

00:16:02,000 --> 00:16:06,880
now much is being said about

00:16:04,079 --> 00:16:08,639
observability

00:16:06,880 --> 00:16:10,480
quite simply observability doesn't

00:16:08,639 --> 00:16:13,040
replace monitoring

00:16:10,480 --> 00:16:16,000
observability is an adjective it

00:16:13,040 --> 00:16:18,160
describes a property of your software

00:16:16,000 --> 00:16:20,560
monitoring is the act of watching your

00:16:18,160 --> 00:16:22,160
events and metrics for problems

00:16:20,560 --> 00:16:24,240
these two things are not mutually

00:16:22,160 --> 00:16:25,199
exclusive

00:16:24,240 --> 00:16:27,519
additionally there should be a

00:16:25,199 --> 00:16:28,959
relationship between the application

00:16:27,519 --> 00:16:31,040
testing in your ci

00:16:28,959 --> 00:16:32,800
and your monitoring they don't need to

00:16:31,040 --> 00:16:33,920
be a one-to-one relationship from test

00:16:32,800 --> 00:16:36,240
to monitors

00:16:33,920 --> 00:16:37,360
but it should ensure that success is

00:16:36,240 --> 00:16:39,199
being measured

00:16:37,360 --> 00:16:41,680
the same both in development and at

00:16:39,199 --> 00:16:41,680
runtime

00:16:46,800 --> 00:16:55,279
so having a conscious decision

00:16:51,199 --> 00:16:57,440
um who receives pages or alerts

00:16:55,279 --> 00:16:59,519
um has that ever been a decision that

00:16:57,440 --> 00:17:01,680
was consciously made or was it just an

00:16:59,519 --> 00:17:03,519
assumption put in place

00:17:01,680 --> 00:17:05,919
are there are the people who receive the

00:17:03,519 --> 00:17:07,280
alert the people who can resolve the

00:17:05,919 --> 00:17:10,079
issue

00:17:07,280 --> 00:17:13,120
and is any effort made to find and fix

00:17:10,079 --> 00:17:13,120
repeat incidents

00:17:14,640 --> 00:17:18,000
so postmortems are a lot of fun when

00:17:17,600 --> 00:17:21,280
something

00:17:18,000 --> 00:17:24,400
goes wrong what happens do you collect

00:17:21,280 --> 00:17:28,480
lessons learned and do you publish those

00:17:24,400 --> 00:17:31,840
to any degree are remediation items

00:17:28,480 --> 00:17:34,000
published and prioritized do you only do

00:17:31,840 --> 00:17:35,280
after action reviews when something goes

00:17:34,000 --> 00:17:38,480
wrong

00:17:35,280 --> 00:17:42,240
or do you also uh run them

00:17:38,480 --> 00:17:43,760
when things go right now the resulting

00:17:42,240 --> 00:17:45,600
outcome from a postmortem

00:17:43,760 --> 00:17:47,280
should almost never be someone being

00:17:45,600 --> 00:17:49,360
fired with

00:17:47,280 --> 00:17:50,880
malicious intent being the rare

00:17:49,360 --> 00:17:53,360
exception

00:17:50,880 --> 00:17:55,039
human error might be a cause but it's

00:17:53,360 --> 00:17:56,559
the beginning of the post-mortem not the

00:17:55,039 --> 00:17:58,880
conclusion

00:17:56,559 --> 00:18:00,240
if a human aired it's important to find

00:17:58,880 --> 00:18:00,799
out why they thought what they were

00:18:00,240 --> 00:18:04,160
doing

00:18:00,799 --> 00:18:06,080
was the right thing to do was there a

00:18:04,160 --> 00:18:07,440
cognitive disconnect between how they

00:18:06,080 --> 00:18:08,640
thought things worked and how they

00:18:07,440 --> 00:18:11,200
actually work

00:18:08,640 --> 00:18:11,919
um if it was something like typo it's

00:18:11,200 --> 00:18:13,360
possible your

00:18:11,919 --> 00:18:16,559
your environment could use some tooling

00:18:13,360 --> 00:18:19,440
interfaces with better guard rails

00:18:16,559 --> 00:18:20,000
examples of this are like the aws s3

00:18:19,440 --> 00:18:22,480
outage

00:18:20,000 --> 00:18:23,200
last year where more instances cycled

00:18:22,480 --> 00:18:26,799
than was

00:18:23,200 --> 00:18:30,799
desired because of a typo or when

00:18:26,799 --> 00:18:33,039
hawaii's public broadcasting uh

00:18:30,799 --> 00:18:33,840
hawaii broadcast a pending nuclear

00:18:33,039 --> 00:18:37,440
missile warning

00:18:33,840 --> 00:18:37,440
erroneously because of

00:18:37,520 --> 00:18:40,559
because of a missed click

00:18:41,360 --> 00:18:45,440
so if you recall your frank herbert fear

00:18:43,760 --> 00:18:48,320
is the mind killer

00:18:45,440 --> 00:18:48,799
and for this reason it's important that

00:18:48,320 --> 00:18:52,080
your

00:18:48,799 --> 00:18:53,520
postmortems aren't retributive for one

00:18:52,080 --> 00:18:54,960
people will be loath to admit their

00:18:53,520 --> 00:18:58,240
mistakes if their job and their

00:18:54,960 --> 00:18:58,240
reputation are on the line

00:18:58,320 --> 00:19:03,039
when you have an incident it has

00:19:00,720 --> 00:19:04,640
incurred some cost

00:19:03,039 --> 00:19:07,280
but if you fire somebody from making a

00:19:04,640 --> 00:19:08,240
mistake you'll derive nothing from the

00:19:07,280 --> 00:19:11,520
failure and

00:19:08,240 --> 00:19:13,280
no no good learning will have happened

00:19:11,520 --> 00:19:14,720
this is one way that you can directly

00:19:13,280 --> 00:19:18,240
embrace the ideas

00:19:14,720 --> 00:19:18,240
of iterative improvement

00:19:18,799 --> 00:19:22,799
now uh personally i don't get too

00:19:20,799 --> 00:19:25,919
excited about microservices

00:19:22,799 --> 00:19:26,640
i think it's a doubling down on soa i

00:19:25,919 --> 00:19:28,640
don't think

00:19:26,640 --> 00:19:31,679
monoliths or macro services or

00:19:28,640 --> 00:19:34,080
microservices are inherently good or bad

00:19:31,679 --> 00:19:35,360
i prefer that apps are small and

00:19:34,080 --> 00:19:37,600
interconnected or

00:19:35,360 --> 00:19:39,280
interacted with over web protocols but i

00:19:37,600 --> 00:19:41,919
wouldn't be the one to tell you that

00:19:39,280 --> 00:19:44,559
it's mandatory

00:19:41,919 --> 00:19:45,760
that said soa does align nicely with the

00:19:44,559 --> 00:19:48,320
goals of a devops

00:19:45,760 --> 00:19:49,840
organization they make it very easy to

00:19:48,320 --> 00:19:53,360
align people with products

00:19:49,840 --> 00:19:55,120
which align to business goals

00:19:53,360 --> 00:19:57,280
and when you have a versioned and

00:19:55,120 --> 00:19:59,679
documented api for your service

00:19:57,280 --> 00:20:01,919
you can innovate responsibly by

00:19:59,679 --> 00:20:03,760
incrementally releasing new features

00:20:01,919 --> 00:20:05,520
that change behavior without breaking

00:20:03,760 --> 00:20:07,440
your existing contracts

00:20:05,520 --> 00:20:08,640
and with proper monitoring you can

00:20:07,440 --> 00:20:12,320
responsibly

00:20:08,640 --> 00:20:12,320
target things for deprecation

00:20:12,480 --> 00:20:16,480
what's important is that your

00:20:13,600 --> 00:20:18,840
architecture makes it easy for your

00:20:16,480 --> 00:20:20,559
for you to draw team responsibility

00:20:18,840 --> 00:20:23,360
boundaries and

00:20:20,559 --> 00:20:27,200
that it's say it's a sane and easy way

00:20:23,360 --> 00:20:27,200
to update and deploy your services

00:20:27,679 --> 00:20:31,919
now uh uptime is a poor measure of

00:20:30,240 --> 00:20:33,840
reliability

00:20:31,919 --> 00:20:35,039
when uptime is the core metric that you

00:20:33,840 --> 00:20:37,039
evaluate on

00:20:35,039 --> 00:20:39,120
it's going to drive behaviors that

00:20:37,039 --> 00:20:41,440
optimize for that metric

00:20:39,120 --> 00:20:42,400
unfortunately this often includes

00:20:41,440 --> 00:20:44,799
slowing down in

00:20:42,400 --> 00:20:47,600
innovation because your engineers don't

00:20:44,799 --> 00:20:49,440
want to make changes

00:20:47,600 --> 00:20:51,760
zero deployments will lead to less

00:20:49,440 --> 00:20:55,440
downtime but that's almost certainly not

00:20:51,760 --> 00:20:57,440
an outcome you want agile development's

00:20:55,440 --> 00:20:59,200
fail fast approach coupled with

00:20:57,440 --> 00:21:01,440
distributed applications

00:20:59,200 --> 00:21:02,960
and dynamic infrastructure requires us

00:21:01,440 --> 00:21:05,440
to have a better understanding of

00:21:02,960 --> 00:21:09,760
reliability

00:21:05,440 --> 00:21:12,240
service level objectives slos are

00:21:09,760 --> 00:21:16,480
there a measurement of how reliably you

00:21:12,240 --> 00:21:18,720
plan to run your new service

00:21:16,480 --> 00:21:20,400
slos also help you understand the true

00:21:18,720 --> 00:21:22,720
health of your systems

00:21:20,400 --> 00:21:24,159
um and how your end users experience

00:21:22,720 --> 00:21:27,760
them as well as

00:21:24,159 --> 00:21:29,919
leaving you with room to innovate

00:21:27,760 --> 00:21:30,880
without slos you may be measuring the

00:21:29,919 --> 00:21:32,640
wrong thing

00:21:30,880 --> 00:21:34,480
by understanding how your customers

00:21:32,640 --> 00:21:37,679
experience your service

00:21:34,480 --> 00:21:39,919
a result of defining slos your engineers

00:21:37,679 --> 00:21:42,640
have pre-approved error budgets

00:21:39,919 --> 00:21:44,159
already defined as room to experiment

00:21:42,640 --> 00:21:46,480
and innovate

00:21:44,159 --> 00:21:47,679
slos are are an involved topic and for

00:21:46,480 --> 00:21:49,679
the time being

00:21:47,679 --> 00:21:52,080
i'm going to defer to another talk on

00:21:49,679 --> 00:21:54,240
the topic

00:21:52,080 --> 00:21:56,080
jennifer pettoff is one of the editors

00:21:54,240 --> 00:21:58,960
of the sre book

00:21:56,080 --> 00:21:59,760
a key takeaway for me is realizing that

00:21:58,960 --> 00:22:02,559
00:21:59,760 --> 00:22:04,480
of time is impossible and that not all

00:22:02,559 --> 00:22:07,919
of your services need to be run

00:22:04,480 --> 00:22:09,200
with maximum availability keeping that

00:22:07,919 --> 00:22:12,320
in mind

00:22:09,200 --> 00:22:13,679
you can't run a 409 service that's

00:22:12,320 --> 00:22:17,120
dependent on

00:22:13,679 --> 00:22:17,520
a three nine service without making some

00:22:17,120 --> 00:22:21,760
very

00:22:17,520 --> 00:22:21,760
significant uh engineering decisions

00:22:24,000 --> 00:22:27,360
now the last tool i wanna talk about is

00:22:26,400 --> 00:22:30,559
that you should

00:22:27,360 --> 00:22:33,679
default to open within the company

00:22:30,559 --> 00:22:37,039
metrics dashboards docs

00:22:33,679 --> 00:22:39,039
um they allow every

00:22:37,039 --> 00:22:40,159
having them open allows everyone to use

00:22:39,039 --> 00:22:43,520
the same information

00:22:40,159 --> 00:22:44,000
when making decisions um for instance

00:22:43,520 --> 00:22:45,679
your

00:22:44,000 --> 00:22:47,120
your application and service status

00:22:45,679 --> 00:22:49,760
endpoints

00:22:47,120 --> 00:22:51,840
and publishing slo status widgets uh

00:22:49,760 --> 00:22:54,960
these are all ways to

00:22:51,840 --> 00:22:56,559
democratize information so everybody can

00:22:54,960 --> 00:22:59,200
everybody's working from the same

00:22:56,559 --> 00:22:59,200
information

00:22:59,840 --> 00:23:09,440
now i believe the last uh last topic i

00:23:03,440 --> 00:23:12,880
talked about today is incorporating sre

00:23:09,440 --> 00:23:15,440
now a common question that that i hear

00:23:12,880 --> 00:23:17,200
is uh you know how do we do how should

00:23:15,440 --> 00:23:20,720
you do it how do we do it

00:23:17,200 --> 00:23:23,840
uh standalone team or individual role or

00:23:20,720 --> 00:23:24,480
what's the skill profile um and i hate

00:23:23,840 --> 00:23:27,840
to give a

00:23:24,480 --> 00:23:30,480
and it depends answer but it depends

00:23:27,840 --> 00:23:33,440
uh mainly on the talent and the

00:23:30,480 --> 00:23:34,799
personalities that you have access to

00:23:33,440 --> 00:23:36,480
let's assume that you're willing to try

00:23:34,799 --> 00:23:38,480
different modes and are willing to

00:23:36,480 --> 00:23:41,120
attempt multiple experiments despite the

00:23:38,480 --> 00:23:44,720
failures and successes you encounter

00:23:41,120 --> 00:23:47,360
by that mean by that i mean a single

00:23:44,720 --> 00:23:48,480
experiment isn't going to assure

00:23:47,360 --> 00:23:52,159
repeatable success

00:23:48,480 --> 00:23:53,360
or failure now as much as i'd love to

00:23:52,159 --> 00:23:56,640
give you a definitive

00:23:53,360 --> 00:23:57,919
right way it just doesn't exist however

00:23:56,640 --> 00:24:00,080
these experiences

00:23:57,919 --> 00:24:05,840
will allow for plenty of topics for

00:24:00,080 --> 00:24:05,840
papers and other conference proposals

00:24:06,000 --> 00:24:10,640
now uh here are some common skills and

00:24:09,120 --> 00:24:13,360
characteristics of

00:24:10,640 --> 00:24:15,760
sres that we found in especially in

00:24:13,360 --> 00:24:17,600
datadog

00:24:15,760 --> 00:24:18,799
having an operations head with a

00:24:17,600 --> 00:24:22,960
developer skills

00:24:18,799 --> 00:24:26,000
or a developer who has ops experience

00:24:22,960 --> 00:24:26,640
they're often master code reviewers they

00:24:26,000 --> 00:24:31,120
tend to be

00:24:26,640 --> 00:24:33,679
operationally cynical meaning that

00:24:31,120 --> 00:24:34,960
it works on my machine isn't going to

00:24:33,679 --> 00:24:38,960
come naturally to them

00:24:34,960 --> 00:24:41,039
or that network latency is a thing uh

00:24:38,960 --> 00:24:43,039
that the the speed with which you can

00:24:41,039 --> 00:24:43,440
interact with a database or a message

00:24:43,039 --> 00:24:46,720
queue

00:24:43,440 --> 00:24:49,200
running on your developer machine is not

00:24:46,720 --> 00:24:52,159
going to give you the same experience as

00:24:49,200 --> 00:24:52,159
working in production

00:24:52,240 --> 00:24:56,799
sres tend to solve operations problems

00:24:55,200 --> 00:24:58,840
with software

00:24:56,799 --> 00:25:00,880
there are often auto dodacs and

00:24:58,840 --> 00:25:03,200
polymaths

00:25:00,880 --> 00:25:04,240
meaning they that not knowing something

00:25:03,200 --> 00:25:07,200
isn't usually

00:25:04,240 --> 00:25:08,400
a it doesn't stop things it may be a

00:25:07,200 --> 00:25:12,880
temporary blocker

00:25:08,400 --> 00:25:12,880
but they're they're happy digging in

00:25:13,039 --> 00:25:18,480
now every job description i've ever seen

00:25:15,279 --> 00:25:20,960
has had communication in it

00:25:18,480 --> 00:25:22,559
but sres need to be able to communicate

00:25:20,960 --> 00:25:28,720
with a very wide variety

00:25:22,559 --> 00:25:32,240
of of people and experience they

00:25:28,720 --> 00:25:33,440
sres also tend to to be natural teachers

00:25:32,240 --> 00:25:36,559
or mentors

00:25:33,440 --> 00:25:39,600
um and all the best ones i know

00:25:36,559 --> 00:25:40,400
have a very high degree of humility um

00:25:39,600 --> 00:25:42,799
they know that

00:25:40,400 --> 00:25:43,919
they as much as they have seen they

00:25:42,799 --> 00:25:47,200
haven't seen it all

00:25:43,919 --> 00:25:47,200
and they can be wrong

00:25:47,600 --> 00:25:51,360
now the bad news is that this set of

00:25:50,240 --> 00:25:52,960
skills

00:25:51,360 --> 00:25:56,480
never mind the additional technical

00:25:52,960 --> 00:25:58,960
chops does not exist in a single person

00:25:56,480 --> 00:26:01,279
um and never mind being able to field a

00:25:58,960 --> 00:26:03,600
team full of these people

00:26:01,279 --> 00:26:05,200
the good news is you can save a lot of

00:26:03,600 --> 00:26:06,559
time and effort trying to hunt that

00:26:05,200 --> 00:26:09,200
unicorn

00:26:06,559 --> 00:26:12,000
you're going to want to plan to have a

00:26:09,200 --> 00:26:14,960
people of widely divergent experience

00:26:12,000 --> 00:26:17,360
and and skills to support and train one

00:26:14,960 --> 00:26:17,360
another

00:26:18,000 --> 00:26:24,720
now uh some of the pitfalls to uh

00:26:21,919 --> 00:26:27,600
to implementing dev uh implementing sre

00:26:24,720 --> 00:26:27,600
in your organization

00:26:28,080 --> 00:26:32,880
one you need to have some patience have

00:26:29,760 --> 00:26:32,880
some grace with yourself

00:26:34,240 --> 00:26:41,360
change is hard and inertia

00:26:37,440 --> 00:26:44,880
is difficult to overcome

00:26:41,360 --> 00:26:46,320
change is going to take time and the

00:26:44,880 --> 00:26:48,799
appearance of progress

00:26:46,320 --> 00:26:50,480
is going to seem very slow agonizingly

00:26:48,799 --> 00:26:52,480
so

00:26:50,480 --> 00:26:53,679
but stating your intended goals

00:26:52,480 --> 00:26:56,799
repeatedly

00:26:53,679 --> 00:26:59,600
try to avoid platitudes but stating

00:26:56,799 --> 00:27:02,400
explicitly that you intend to change

00:26:59,600 --> 00:27:05,440
and that you can't change by continuing

00:27:02,400 --> 00:27:05,440
to do the same things

00:27:05,679 --> 00:27:12,080
just as there's no devops in a box you

00:27:08,159 --> 00:27:12,080
can't just go buy yourself some sre

00:27:13,120 --> 00:27:20,799
um a personal rant of mine is i

00:27:18,399 --> 00:27:21,679
largely despise technical standards

00:27:20,799 --> 00:27:23,520
within

00:27:21,679 --> 00:27:25,360
uh within companies like you must use

00:27:23,520 --> 00:27:26,480
this language in this framework and

00:27:25,360 --> 00:27:31,200
things like that

00:27:26,480 --> 00:27:31,200
um the

00:27:31,440 --> 00:27:35,200
i think people should avoid centers of

00:27:34,320 --> 00:27:37,279
excellence

00:27:35,200 --> 00:27:39,919
and other forms of ivory tower thinking

00:27:37,279 --> 00:27:39,919
i think they're

00:27:40,880 --> 00:27:44,480
they can be fun to work on but they're

00:27:42,320 --> 00:27:46,960
frustrating to have to live with

00:27:44,480 --> 00:27:48,880
because they are often thinking in terms

00:27:46,960 --> 00:27:52,240
of problems that you don't have

00:27:48,880 --> 00:27:54,240
so they're fine when they work with you

00:27:52,240 --> 00:27:57,039
but as soon as it starts providing

00:27:54,240 --> 00:27:59,279
friction it becomes no fun

00:27:57,039 --> 00:28:01,760
it tends towards dogmatism and arguments

00:27:59,279 --> 00:28:05,360
about following the standard

00:28:01,760 --> 00:28:08,960
personally i with the product team

00:28:05,360 --> 00:28:10,720
the product team paradigm it allows

00:28:08,960 --> 00:28:12,640
individual teams to be autonomous they

00:28:10,720 --> 00:28:14,880
get to own their own destiny

00:28:12,640 --> 00:28:16,240
and live with their mistakes or and

00:28:14,880 --> 00:28:19,760
successes

00:28:16,240 --> 00:28:20,559
now uh i have a side rant of best

00:28:19,760 --> 00:28:22,640
practices

00:28:20,559 --> 00:28:24,159
versus lessons learned and after action

00:28:22,640 --> 00:28:27,919
but again uh that's

00:28:24,159 --> 00:28:27,919
that is another talk for another day

00:28:29,600 --> 00:28:34,799
now depending on your industry and

00:28:33,279 --> 00:28:37,360
the particular parts of your

00:28:34,799 --> 00:28:38,960
applications depending on the rules and

00:28:37,360 --> 00:28:41,200
regulations involved

00:28:38,960 --> 00:28:42,720
not all teams will be able to use all

00:28:41,200 --> 00:28:45,279
the features

00:28:42,720 --> 00:28:47,039
of a modern team or they may have to

00:28:45,279 --> 00:28:49,520
perform things in a specific way in

00:28:47,039 --> 00:28:52,960
order to be compliant

00:28:49,520 --> 00:28:54,720
for instance if you have your regulatory

00:28:52,960 --> 00:28:55,679
restrictions don't allow the person to

00:28:54,720 --> 00:28:57,840
write code

00:28:55,679 --> 00:29:00,320
approve it and deploy it have a

00:28:57,840 --> 00:29:01,840
conversation with your editor

00:29:00,320 --> 00:29:03,760
there are a lot of assumptions about

00:29:01,840 --> 00:29:07,520
what regulatory restrictions say

00:29:03,760 --> 00:29:09,840
that are incorrect and

00:29:07,520 --> 00:29:11,120
in my experience most auditors are happy

00:29:09,840 --> 00:29:14,159
to engage

00:29:11,120 --> 00:29:14,159
and talk about

00:29:14,880 --> 00:29:21,039
like aba and abc scenarios

00:29:18,240 --> 00:29:21,840
and where and when a piece of software

00:29:21,039 --> 00:29:24,000
may take the

00:29:21,840 --> 00:29:26,559
place of a human as as one of those

00:29:24,000 --> 00:29:26,559
entities

00:29:27,679 --> 00:29:31,520
now keeping that in mind don't handcuff

00:29:30,720 --> 00:29:34,000
the teams

00:29:31,520 --> 00:29:35,520
that this doesn't apply to isolate

00:29:34,000 --> 00:29:36,240
things that involve like payment

00:29:35,520 --> 00:29:39,919
processing

00:29:36,240 --> 00:29:41,279
or pii and things like that from the

00:29:39,919 --> 00:29:44,960
requirements of the rest

00:29:41,279 --> 00:29:46,559
don't you isolate isolate the boundaries

00:29:44,960 --> 00:29:49,200
of where those restrictions

00:29:46,559 --> 00:29:51,919
have to be used and from where they

00:29:49,200 --> 00:29:51,919
don't need to be

00:29:52,000 --> 00:29:57,919
um a personal

00:29:55,600 --> 00:30:00,559
a personal horror of mine is the matrix

00:29:57,919 --> 00:30:00,559
organization

00:30:00,880 --> 00:30:04,720
this is where any given individual

00:30:03,600 --> 00:30:08,000
individual ha

00:30:04,720 --> 00:30:10,320
has a reporting structure within their

00:30:08,000 --> 00:30:12,720
technical their functional roles as well

00:30:10,320 --> 00:30:16,000
as a product team

00:30:12,720 --> 00:30:18,240
don't do this um just

00:30:16,000 --> 00:30:19,360
the problem is that it at least doubles

00:30:18,240 --> 00:30:22,720
if not squares

00:30:19,360 --> 00:30:24,799
the amount of leadership uh that your

00:30:22,720 --> 00:30:27,600
individual contributors have to deal

00:30:24,799 --> 00:30:30,559
with um

00:30:27,600 --> 00:30:31,360
you're it's fine if everybody's playing

00:30:30,559 --> 00:30:34,399
by the same

00:30:31,360 --> 00:30:37,039
rules um but it's just

00:30:34,399 --> 00:30:39,200
it's not good don't do this um look more

00:30:37,039 --> 00:30:42,320
towards product teams and guilds

00:30:39,200 --> 00:30:44,159
um if you if you want to maintain that

00:30:42,320 --> 00:30:47,360
from a

00:30:44,159 --> 00:30:48,000
from a culture perspective but don't do

00:30:47,360 --> 00:30:51,840
it for

00:30:48,000 --> 00:30:51,840
reporting structures

00:30:51,919 --> 00:30:57,760
now um patience again you

00:30:55,200 --> 00:30:59,279
absolutely have to have patience with

00:30:57,760 --> 00:31:01,519
this process

00:30:59,279 --> 00:31:02,480
now it's unfortunate that some people

00:31:01,519 --> 00:31:04,399
are going to

00:31:02,480 --> 00:31:07,120
would prefer to depart rather than

00:31:04,399 --> 00:31:08,799
change um

00:31:07,120 --> 00:31:10,960
and some of the people who make the

00:31:08,799 --> 00:31:11,360
decision to leave are going to surprise

00:31:10,960 --> 00:31:13,519
you

00:31:11,360 --> 00:31:15,440
and some of the people who get on board

00:31:13,519 --> 00:31:19,120
uh likewise you may not

00:31:15,440 --> 00:31:21,840
have expected um

00:31:19,120 --> 00:31:23,840
also openness is scary and it's not the

00:31:21,840 --> 00:31:26,720
habit of most companies

00:31:23,840 --> 00:31:29,600
but openness especially around failure

00:31:26,720 --> 00:31:31,519
is what makes all of this work

00:31:29,600 --> 00:31:32,799
failures and mistakes are learning

00:31:31,519 --> 00:31:35,039
opportunities

00:31:32,799 --> 00:31:37,360
and firing somebody who makes a mistake

00:31:35,039 --> 00:31:40,240
means you've wasted however much that

00:31:37,360 --> 00:31:40,240
mistake cost

00:31:41,200 --> 00:31:45,120
again a firing should almost never occur

00:31:43,760 --> 00:31:46,320
unless it's something particularly

00:31:45,120 --> 00:31:48,880
egregious

00:31:46,320 --> 00:31:51,120
intentional or that person refuses to

00:31:48,880 --> 00:31:51,120
learn

00:31:52,320 --> 00:31:56,080
finally your mileage will vary

00:31:57,360 --> 00:32:02,000
keep in mind that google solution won't

00:31:59,360 --> 00:32:05,840
solve your problems

00:32:02,000 --> 00:32:06,880
probably what makes google solutions

00:32:05,840 --> 00:32:09,679
work at google

00:32:06,880 --> 00:32:11,279
is dependent on the entire ecosystem of

00:32:09,679 --> 00:32:13,760
what comprises it

00:32:11,279 --> 00:32:15,840
that's to say you won't instantly have

00:32:13,760 --> 00:32:16,799
google success by doing what google says

00:32:15,840 --> 00:32:20,159
they do

00:32:16,799 --> 00:32:22,720
without very careful consideration um

00:32:20,159 --> 00:32:23,679
asking what what can i do to achieve

00:32:22,720 --> 00:32:25,679
that result

00:32:23,679 --> 00:32:29,360
is more helpful than asking what did

00:32:25,679 --> 00:32:31,919
google do

00:32:29,360 --> 00:32:35,679
google's problems are not your problems

00:32:31,919 --> 00:32:35,679
except in the very abstract

00:32:37,519 --> 00:32:42,880
now not everybody there would recognize

00:32:40,640 --> 00:32:44,399
what's described in the sre book

00:32:42,880 --> 00:32:46,399
now i'm not being critical of google

00:32:44,399 --> 00:32:47,840
when i say this um

00:32:46,399 --> 00:32:50,799
but some of the content could be

00:32:47,840 --> 00:32:52,159
graciously called aspirational

00:32:50,799 --> 00:32:54,159
even at the time of the writing of this

00:32:52,159 --> 00:32:56,640
book not all of their teams

00:32:54,159 --> 00:32:58,159
worked in the ways described now keep in

00:32:56,640 --> 00:33:01,440
mind that

00:32:58,159 --> 00:33:03,519
this book was published in 2016.

00:33:01,440 --> 00:33:05,600
i would never bet that things had hadn't

00:33:03,519 --> 00:33:08,640
changed in the four years since

00:33:05,600 --> 00:33:14,000
um and also i'm not

00:33:08,640 --> 00:33:14,000
banging on google uh or the book i think

00:33:14,240 --> 00:33:18,399
i i think the book is excellent i think

00:33:16,159 --> 00:33:20,640
that the it's recommended reading for

00:33:18,399 --> 00:33:22,960
everyone just to have an idea of

00:33:20,640 --> 00:33:24,000
uh have some ideas of how they'd want to

00:33:22,960 --> 00:33:27,279
run teams

00:33:24,000 --> 00:33:29,440
better now

00:33:27,279 --> 00:33:30,640
in our time today i've attempted to

00:33:29,440 --> 00:33:33,760
clear up any confusion

00:33:30,640 --> 00:33:34,960
about what devops and sre are tools and

00:33:33,760 --> 00:33:37,120
practices

00:33:34,960 --> 00:33:38,559
that will help you on your devops

00:33:37,120 --> 00:33:40,240
journey

00:33:38,559 --> 00:33:42,640
the kinds of people that can help

00:33:40,240 --> 00:33:44,799
improve your engineering efforts

00:33:42,640 --> 00:33:48,159
and suggestions for incorporating sre

00:33:44,799 --> 00:33:49,600
practices into your organization

00:33:48,159 --> 00:33:52,000
with that i want to thank you for your

00:33:49,600 --> 00:33:54,880
time and attention i hope this was

00:33:52,000 --> 00:33:56,480
helpful informative and gives you some

00:33:54,880 --> 00:33:59,519
ideas of how to improve your

00:33:56,480 --> 00:33:59,519
own organizations

00:33:59,840 --> 00:34:06,480
with that thank you and uh turn

00:34:03,279 --> 00:34:08,960
take a look at questions yeah so

00:34:06,480 --> 00:34:11,440
um waldo there is there was one in the

00:34:08,960 --> 00:34:14,720
chat to request to go back to a slide

00:34:11,440 --> 00:34:16,879
that was about the all-day devops

00:34:14,720 --> 00:34:17,760
oh yes just so they could look at that a

00:34:16,879 --> 00:34:21,839
little bit more

00:34:17,760 --> 00:34:21,839
uh resources then

00:34:22,639 --> 00:34:27,440
questions in the q a chat yep let me

00:34:32,639 --> 00:34:35,839
this one i believe

00:34:42,399 --> 00:34:49,760
all right so uh are you looking at

00:34:46,720 --> 00:34:51,679
q a or the chat widget so

00:34:49,760 --> 00:34:53,280
the chat i think we're good on that one

00:34:51,679 --> 00:34:53,679
i didn't see any other questions from

00:34:53,280 --> 00:34:56,720
there

00:34:53,679 --> 00:34:59,040
so now the q a um

00:34:56,720 --> 00:35:00,800
how can you easily democratize

00:34:59,040 --> 00:35:03,520
information when the majority

00:35:00,800 --> 00:35:05,680
of sas vendors or software as a service

00:35:03,520 --> 00:35:08,480
vendors for monitoring observability

00:35:05,680 --> 00:35:08,480
charge per seat

00:35:13,359 --> 00:35:19,440
i'm not sure how to answer this

00:35:16,400 --> 00:35:19,440
it has to be

00:35:20,880 --> 00:35:23,119
well

00:35:26,320 --> 00:35:30,560
now my knowledge is going to be

00:35:28,960 --> 00:35:35,440
imperfect of how

00:35:30,560 --> 00:35:35,440
pricing goes across the industry but i

00:35:36,160 --> 00:35:44,240
in my recollection most charged by

00:35:40,560 --> 00:35:47,920
by like server instance or or

00:35:44,240 --> 00:35:47,920
processes things like that

00:35:48,640 --> 00:35:53,040
that's an interesting question there are

00:35:54,960 --> 00:35:59,280
now one way that actually i i don't

00:35:57,440 --> 00:36:02,640
really know how to answer that without

00:35:59,280 --> 00:36:06,000
knowing the specifics and uh i

00:36:02,640 --> 00:36:10,960
generally don't talk about other other

00:36:06,000 --> 00:36:13,200
monitoring sizes other than datadog um

00:36:10,960 --> 00:36:14,000
so it's not a not something i can answer

00:36:13,200 --> 00:36:16,400
well

00:36:14,000 --> 00:36:18,880
um but i'm sure that you could come up

00:36:16,400 --> 00:36:23,280
with creative solutions around that

00:36:18,880 --> 00:36:24,800
um but again i

00:36:23,280 --> 00:36:27,200
yeah i don't really have a good way to

00:36:24,800 --> 00:36:28,400
answer that unfortunately

00:36:27,200 --> 00:36:32,960
but i want to thank you for the question

00:36:28,400 --> 00:36:32,960
mauricio and i hope i said that right

00:36:34,720 --> 00:36:41,599
so his next question is

00:36:39,200 --> 00:36:43,119
also from again i hope i say this right

00:36:41,599 --> 00:36:45,839
mauricio

00:36:43,119 --> 00:36:47,119
related to what i said about resisting

00:36:45,839 --> 00:36:48,800
technical standards

00:36:47,119 --> 00:36:50,240
uh what are my thoughts about following

00:36:48,800 --> 00:36:54,240
best practices

00:36:50,240 --> 00:36:58,400
i i have a complicated relationship

00:36:54,240 --> 00:37:01,599
with the phrase best practices um

00:36:58,400 --> 00:37:03,359
because one person's best practice is

00:37:01,599 --> 00:37:05,760
another person's definitely don't do it

00:37:03,359 --> 00:37:05,760
this way

00:37:07,359 --> 00:37:12,400
i think it's an easier or it's a

00:37:10,000 --> 00:37:15,440
slightly less dogmatic way of doing it

00:37:12,400 --> 00:37:18,400
um i like recommended practices

00:37:15,440 --> 00:37:19,839
because they're not trying to say that

00:37:18,400 --> 00:37:20,160
you know plant a flag in the ground

00:37:19,839 --> 00:37:21,680
saying

00:37:20,160 --> 00:37:23,280
this is the best way to do it

00:37:21,680 --> 00:37:25,359
definitively

00:37:23,280 --> 00:37:27,119
this is what i recommend this is the way

00:37:25,359 --> 00:37:31,839
what works for us

00:37:27,119 --> 00:37:31,839
um i hope that helps

00:37:32,320 --> 00:37:36,079
i think it's a slightly less dogmatic

00:37:34,240 --> 00:37:37,760
way of coming to the same

00:37:36,079 --> 00:37:40,079
thing by claiming something's a best

00:37:37,760 --> 00:37:41,359
practice

00:37:40,079 --> 00:37:44,560
it's another one of those things where

00:37:41,359 --> 00:37:44,560
your mileage will vary

00:37:44,800 --> 00:37:51,920
so again thank you mauricio

00:37:50,000 --> 00:37:53,119
the next one that we have is how do you

00:37:51,920 --> 00:37:55,440
suggest implementing

00:37:53,119 --> 00:37:58,000
products and service teams in an

00:37:55,440 --> 00:38:00,560
organization that has relatively few dev

00:37:58,000 --> 00:38:02,720
and ops staff and relatively many

00:38:00,560 --> 00:38:05,520
discrete services

00:38:02,720 --> 00:38:08,800
ie or eg about 30 staff members and

00:38:05,520 --> 00:38:08,800
greater than 100 services

00:38:11,280 --> 00:38:13,839
so drawing

00:38:15,280 --> 00:38:18,480
so this sounds like a either an

00:38:17,280 --> 00:38:22,000
understaffed company

00:38:18,480 --> 00:38:24,320
or a lot of microservices

00:38:22,000 --> 00:38:26,800
in which case i can't help you with the

00:38:24,320 --> 00:38:31,760
understaffing thing

00:38:26,800 --> 00:38:31,760
as far as doing

00:38:31,839 --> 00:38:38,320
like drawing team boundaries um

00:38:35,040 --> 00:38:41,599
i think it's just a matter of assigning

00:38:38,320 --> 00:38:42,880
logical correlations between

00:38:41,599 --> 00:38:44,960
actually it doesn't even need to be

00:38:42,880 --> 00:38:46,320
logical correlations your team could be

00:38:44,960 --> 00:38:49,040
responsible for

00:38:46,320 --> 00:38:50,960
a bunch of discreet services that have

00:38:49,040 --> 00:38:54,000
little to do with one another

00:38:50,960 --> 00:38:56,560
but making sure that there is

00:38:54,000 --> 00:38:58,839
ownership of these products i mean it

00:38:56,560 --> 00:39:01,760
helps to think in terms of

00:38:58,839 --> 00:39:04,160
um like we are in charge of shopping

00:39:01,760 --> 00:39:07,359
cart functionality whether you run

00:39:04,160 --> 00:39:09,119
one service to do it or you do it in 50

00:39:07,359 --> 00:39:13,760
or 100 services to

00:39:09,119 --> 00:39:17,520
to achieve your goals um

00:39:13,760 --> 00:39:19,520
that is just a matter of

00:39:17,520 --> 00:39:21,040
choosing which services belong to any

00:39:19,520 --> 00:39:24,560
given team

00:39:21,040 --> 00:39:28,160
um now with 30 stat

00:39:24,560 --> 00:39:31,760
like yes it's in this in this situation

00:39:28,160 --> 00:39:35,920
you may have say like five or six teams

00:39:31,760 --> 00:39:36,720
and all of them are in charge of like 15

00:39:35,920 --> 00:39:39,200
to 20

00:39:36,720 --> 00:39:40,000
applications that's actually not

00:39:39,200 --> 00:39:42,560
terrible

00:39:40,000 --> 00:39:43,520
um especially if they're relatively low

00:39:42,560 --> 00:39:46,800
touch

00:39:43,520 --> 00:39:47,440
uh applications um but just having

00:39:46,800 --> 00:39:51,040
ownership

00:39:47,440 --> 00:39:54,400
is is more important than quantity uh

00:39:51,040 --> 00:39:56,560
like how how wide your portfolio is

00:39:54,400 --> 00:39:58,880
so i hope that answered your question

00:39:56,560 --> 00:39:58,880
mike

00:39:59,280 --> 00:40:03,680
all right and then let's see

00:40:04,000 --> 00:40:08,400
would avoiding a matrix organization

00:40:06,000 --> 00:40:09,040
imply reporting to someone on your same

00:40:08,400 --> 00:40:11,359
team

00:40:09,040 --> 00:40:12,800
if so how do you avoid conflicts of

00:40:11,359 --> 00:40:15,359
interest in things like

00:40:12,800 --> 00:40:16,720
code review when your manager is also an

00:40:15,359 --> 00:40:19,760
approver

00:40:16,720 --> 00:40:22,800
okay so i have a

00:40:19,760 --> 00:40:25,520
very strong feelings about this

00:40:22,800 --> 00:40:26,880
avoiding matrix organizations mean means

00:40:25,520 --> 00:40:28,079
that

00:40:26,880 --> 00:40:31,440
when you're when you're working in a

00:40:28,079 --> 00:40:31,440
product team the

00:40:31,839 --> 00:40:35,440
you don't use the functional leadership

00:40:33,599 --> 00:40:39,280
paradigm anymore like a

00:40:35,440 --> 00:40:41,839
um operations uh

00:40:39,280 --> 00:40:42,880
operations director or uh development

00:40:41,839 --> 00:40:46,000
manager

00:40:42,880 --> 00:40:49,839
um the key role

00:40:46,000 --> 00:40:53,680
for deciding what work gets done is

00:40:49,839 --> 00:40:57,359
the product owner the product team lead

00:40:53,680 --> 00:40:58,720
so conflicts of interest i'm not sure

00:40:57,359 --> 00:41:01,839
what you mean by that

00:40:58,720 --> 00:41:04,960
unless you're referring to

00:41:01,839 --> 00:41:08,640
um what's it called

00:41:04,960 --> 00:41:11,119
regulatory restrictions

00:41:08,640 --> 00:41:11,119
but the

00:41:12,480 --> 00:41:17,680
yeah i'm not sure how do you avoid

00:41:16,160 --> 00:41:19,760
conflicts of interest in things like

00:41:17,680 --> 00:41:20,720
code review when your manager is also an

00:41:19,760 --> 00:41:22,960
improver

00:41:20,720 --> 00:41:22,960
um

00:41:25,359 --> 00:41:29,200
so i see these in different things uh

00:41:27,440 --> 00:41:32,240
you probably have something very

00:41:29,200 --> 00:41:32,800
particular in mind and i'm not sure that

00:41:32,240 --> 00:41:35,599
i've

00:41:32,800 --> 00:41:36,640
got it in my head what how to address

00:41:35,599 --> 00:41:39,200
the situation

00:41:36,640 --> 00:41:41,760
um yeah feel free to reach out to me and

00:41:39,200 --> 00:41:44,800
i'd be happy to have

00:41:41,760 --> 00:41:46,720
more of a conversation around it um

00:41:44,800 --> 00:41:48,319
because i'm fairly certain that i don't

00:41:46,720 --> 00:41:58,160
unders i don't

00:41:48,319 --> 00:41:58,160

YouTube URL: https://www.youtube.com/watch?v=aaZOgr3SAn0


