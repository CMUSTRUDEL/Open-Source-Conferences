Title: Remote Desktops: Ensuring Performance and Security with Apache Guacamole - Mike Jumper
Publication date: 2020-12-14
Playlist: All Things Open 2020 - Projects Track
Description: 
	Presented by: Mike Jumper, Glyptodon
Presented at All Things Open 2020 - Projects Track

Abstract: Due to the pandemic, organizations have had to support a fully remote workforce with little time, and many remote desktop deployments were rushed. The first priority was access, with security and performance taking a temporary backseat.

Now, however, itâ€™s time to ensure end-users have a reliable, high-performant experience and that access is secure. Mike Jumper, Apache Guacamole PMC chair and CEO of Glyptodon, will provide a technical guide of best practices to deploy, configure and maintain Apache Guacamole to ensure a safe and snappy remote desktop experience. Topics will include:

- Reverse proxy configuration
- Authentication extensions
- Multi-factor authentication
- Back-end hardware requirements
Captions: 
	00:00:05,120 --> 00:00:09,120
hello

00:00:06,000 --> 00:00:11,200
um as norma said i'm mike jumper

00:00:09,120 --> 00:00:13,200
i'm the ceo and lead developer of

00:00:11,200 --> 00:00:15,839
glyptodon

00:00:13,200 --> 00:00:16,800
the guacamole project was actually my

00:00:15,839 --> 00:00:19,199
project about

00:00:16,800 --> 00:00:20,960
10 years ago and then we formed

00:00:19,199 --> 00:00:23,760
glyptodont around that

00:00:20,960 --> 00:00:25,439
and then donated it to apache where it

00:00:23,760 --> 00:00:26,800
now continues as the apache software

00:00:25,439 --> 00:00:29,840
foundation

00:00:26,800 --> 00:00:31,519
we continue to contribute but i serve

00:00:29,840 --> 00:00:33,440
mainly to provide support and

00:00:31,519 --> 00:00:34,880
development on the glipinon side

00:00:33,440 --> 00:00:37,120
and then i contribute upstream when i

00:00:34,880 --> 00:00:37,120
can

00:00:37,360 --> 00:00:41,120
the point of this talk is to cover some

00:00:40,239 --> 00:00:42,960
of the

00:00:41,120 --> 00:00:44,640
main gotchas that people tend to run

00:00:42,960 --> 00:00:47,920
into when they're setting up

00:00:44,640 --> 00:00:48,719
guacamole and then to point you in the

00:00:47,920 --> 00:00:51,039
right direction

00:00:48,719 --> 00:00:52,879
as far as setting things up are

00:00:51,039 --> 00:00:56,239
concerned for performance and

00:00:52,879 --> 00:00:58,000
with respect to security and we'll be

00:00:56,239 --> 00:01:01,039
going through an actual demo

00:00:58,000 --> 00:01:03,120
of how this is done

00:01:01,039 --> 00:01:05,760
with in this case with the glyptodon

00:01:03,120 --> 00:01:08,400
packages but i'll be pointing to the

00:01:05,760 --> 00:01:09,439
upstream documentation and referencing

00:01:08,400 --> 00:01:10,960
that as well

00:01:09,439 --> 00:01:12,880
so you can see how this would be done if

00:01:10,960 --> 00:01:16,400
you're working strictly from

00:01:12,880 --> 00:01:19,759
upstream source and releases

00:01:16,400 --> 00:01:21,920
so to begin if you're

00:01:19,759 --> 00:01:22,880
if you're just starting things it's

00:01:21,920 --> 00:01:26,880
pretty common

00:01:22,880 --> 00:01:27,200
to not want to look at the manual and

00:01:26,880 --> 00:01:28,960
it's

00:01:27,200 --> 00:01:30,640
understandable the upstream manual is

00:01:28,960 --> 00:01:33,439
fairly technical

00:01:30,640 --> 00:01:35,200
uh and it's it's common when people

00:01:33,439 --> 00:01:36,960
haven't been

00:01:35,200 --> 00:01:39,360
people who aren't too used to things

00:01:36,960 --> 00:01:41,360
like tomcat or databases

00:01:39,360 --> 00:01:43,680
and to look at that and and be turned

00:01:41,360 --> 00:01:45,600
away by the learning curve

00:01:43,680 --> 00:01:47,520
and there are tutorials out there that

00:01:45,600 --> 00:01:48,799
are simpler and that walk through things

00:01:47,520 --> 00:01:50,640
from start to finish

00:01:48,799 --> 00:01:52,560
and that even you could follow through

00:01:50,640 --> 00:01:54,720
just by copying and pasting commands

00:01:52,560 --> 00:01:56,960
but you don't necessarily want to do

00:01:54,720 --> 00:01:58,079
that we see a lot of activity in the

00:01:56,960 --> 00:02:00,079
mailing lists

00:01:58,079 --> 00:02:01,840
with people being confused mainly

00:02:00,079 --> 00:02:04,159
because they didn't go to the manual and

00:02:01,840 --> 00:02:06,479
instead went to a tutorial

00:02:04,159 --> 00:02:07,680
the tutorials are helpful but sometimes

00:02:06,479 --> 00:02:10,479
they're out of date

00:02:07,680 --> 00:02:12,640
they have recommendations that point to

00:02:10,479 --> 00:02:14,400
properties and configuration things that

00:02:12,640 --> 00:02:16,800
are no longer even used

00:02:14,400 --> 00:02:18,400
and that have no effect they don't hurt

00:02:16,800 --> 00:02:21,120
anything by their being there but they

00:02:18,400 --> 00:02:23,440
just serve to be confusing

00:02:21,120 --> 00:02:25,440
the last thing you want to do is not

00:02:23,440 --> 00:02:26,800
consult the manual at all which

00:02:25,440 --> 00:02:28,800
should be the most up-to-date and

00:02:26,800 --> 00:02:30,080
current documentation maintained by the

00:02:28,800 --> 00:02:32,560
project itself

00:02:30,080 --> 00:02:33,760
and only look at a tutorial and move

00:02:32,560 --> 00:02:36,800
through that

00:02:33,760 --> 00:02:40,080
and then tie yourself into a knot uh

00:02:36,800 --> 00:02:43,040
failing wildly changing permissions

00:02:40,080 --> 00:02:44,480
until eventually things work it might

00:02:43,040 --> 00:02:45,440
seem like that's a good idea but then

00:02:44,480 --> 00:02:46,959
when you end up

00:02:45,440 --> 00:02:48,400
with the finished product and finally

00:02:46,959 --> 00:02:50,000
things are deployed you're not going to

00:02:48,400 --> 00:02:51,360
know why it's working

00:02:50,000 --> 00:02:52,480
and that's not a safe thing for

00:02:51,360 --> 00:02:54,319
something you want to deploy into

00:02:52,480 --> 00:02:57,440
production

00:02:54,319 --> 00:02:59,920
so instead of doing that consult both

00:02:57,440 --> 00:03:01,040
the manual and tutorial not just the

00:02:59,920 --> 00:03:03,040
tutorial

00:03:01,040 --> 00:03:05,040
or go to the manual alone there are

00:03:03,040 --> 00:03:07,200
there are instructions for how to build

00:03:05,040 --> 00:03:09,120
from start to finish guacamole server

00:03:07,200 --> 00:03:10,640
and then the web application component

00:03:09,120 --> 00:03:12,800
guacamole client

00:03:10,640 --> 00:03:14,720
if you are following a tutorial and it

00:03:12,800 --> 00:03:16,400
seems like things don't match up with

00:03:14,720 --> 00:03:18,319
what you're seeing in the manual

00:03:16,400 --> 00:03:20,640
error on the side of the manual the

00:03:18,319 --> 00:03:23,680
manual is current

00:03:20,640 --> 00:03:25,519
if you still have issues and and the

00:03:23,680 --> 00:03:26,480
manual is too confusing tutorial doesn't

00:03:25,519 --> 00:03:28,080
match

00:03:26,480 --> 00:03:29,519
reach out to the upstream community

00:03:28,080 --> 00:03:33,599
there's a mailing list

00:03:29,519 --> 00:03:35,920
user at guacamole.apache

00:03:33,599 --> 00:03:37,519
we can help you out there and if you're

00:03:35,920 --> 00:03:38,959
a company and you need enterprise

00:03:37,519 --> 00:03:40,080
support there are commercial support

00:03:38,959 --> 00:03:43,680
providers

00:03:40,080 --> 00:03:43,680
like the company that i work for

00:03:44,159 --> 00:03:47,200
when you're moving from start to finish

00:03:46,319 --> 00:03:50,239
with deploying

00:03:47,200 --> 00:03:52,799
apache guacamole even if you're not

00:03:50,239 --> 00:03:53,439
too technically familiar with what each

00:03:52,799 --> 00:03:55,760
point

00:03:53,439 --> 00:03:57,280
what each particular component does it's

00:03:55,760 --> 00:03:57,840
still important to keep in mind the

00:03:57,280 --> 00:04:00,319
actual

00:03:57,840 --> 00:04:02,159
stack and how it's designed since then

00:04:00,319 --> 00:04:03,760
with with this particular with these

00:04:02,159 --> 00:04:06,640
sets of components in mind you

00:04:03,760 --> 00:04:08,319
you know in your head a two to a to-do

00:04:06,640 --> 00:04:11,120
list that you can check off

00:04:08,319 --> 00:04:12,080
as you connect things together with

00:04:11,120 --> 00:04:13,680
guacamole

00:04:12,080 --> 00:04:15,120
the stack is made up of mainly two

00:04:13,680 --> 00:04:18,000
components the

00:04:15,120 --> 00:04:18,400
web app that runs underneath tomcat and

00:04:18,000 --> 00:04:21,919
then

00:04:18,400 --> 00:04:24,720
guac d which is a a

00:04:21,919 --> 00:04:25,360
server-side daemon that that handles the

00:04:24,720 --> 00:04:26,840
actual

00:04:25,360 --> 00:04:29,440
actual remote desktop side of

00:04:26,840 --> 00:04:32,320
communication it translates between

00:04:29,440 --> 00:04:33,919
the actual remote desktop protocols like

00:04:32,320 --> 00:04:35,680
rdp and vnc

00:04:33,919 --> 00:04:37,280
and converts them into the guacamole

00:04:35,680 --> 00:04:40,880
protocol which is the

00:04:37,280 --> 00:04:43,759
main super protocol that guacamole uses

00:04:40,880 --> 00:04:45,440
in the client guac d handles things like

00:04:43,759 --> 00:04:47,360
optimization

00:04:45,440 --> 00:04:49,600
and translation whereas the web app can

00:04:47,360 --> 00:04:51,600
focus on just supporting that one main

00:04:49,600 --> 00:04:54,800
protocol

00:04:51,600 --> 00:04:55,120
around tomcat when you're when you have

00:04:54,800 --> 00:04:56,639
a

00:04:55,120 --> 00:04:58,800
production deployment you would also

00:04:56,639 --> 00:05:01,120
have ssl termination

00:04:58,800 --> 00:05:02,639
to provide encryption for the public

00:05:01,120 --> 00:05:04,560
facing part of things

00:05:02,639 --> 00:05:06,720
and then internally the web app would be

00:05:04,560 --> 00:05:08,880
communicating with a database like mysql

00:05:06,720 --> 00:05:11,360
or postgres

00:05:08,880 --> 00:05:12,960
in order to handle authentication and

00:05:11,360 --> 00:05:14,320
storage of connection data

00:05:12,960 --> 00:05:16,320
so that's really the four main

00:05:14,320 --> 00:05:18,400
components is you have

00:05:16,320 --> 00:05:19,919
guacamole and guac d that's the actual

00:05:18,400 --> 00:05:22,000
guacamole stack

00:05:19,919 --> 00:05:23,759
and then you have tomcat running

00:05:22,000 --> 00:05:26,080
guacamole the web app

00:05:23,759 --> 00:05:27,440
and then you have ssl termination around

00:05:26,080 --> 00:05:29,680
that

00:05:27,440 --> 00:05:31,280
that provides encryption and the

00:05:29,680 --> 00:05:33,680
database

00:05:31,280 --> 00:05:36,000
there are other aspects to guacamole as

00:05:33,680 --> 00:05:38,880
far as authentication is concerned

00:05:36,000 --> 00:05:39,919
there are things like ldap which might

00:05:38,880 --> 00:05:41,600
be useful if you're

00:05:39,919 --> 00:05:43,520
if you have windows machines that you're

00:05:41,600 --> 00:05:44,960
connecting to since there's a way to

00:05:43,520 --> 00:05:46,479
configure guacamole

00:05:44,960 --> 00:05:48,400
to provide username and password

00:05:46,479 --> 00:05:51,039
passthrough and if

00:05:48,400 --> 00:05:53,120
your users authenticate using ldap or

00:05:51,039 --> 00:05:54,639
active directory on the windows side

00:05:53,120 --> 00:05:55,759
this can make things very convenient

00:05:54,639 --> 00:05:57,360
since they'll only have one set of

00:05:55,759 --> 00:05:58,960
credentials and they won't have to enter

00:05:57,360 --> 00:06:00,560
it twice

00:05:58,960 --> 00:06:02,720
and there's a built-in authentication

00:06:00,560 --> 00:06:04,639
method called user mapping

00:06:02,720 --> 00:06:06,120
but it's important to remember that the

00:06:04,639 --> 00:06:08,240
user mapping

00:06:06,120 --> 00:06:09,840
usermapping.xml file is meant only for

00:06:08,240 --> 00:06:11,440
testing it's not a production

00:06:09,840 --> 00:06:13,039
method you can use it for small

00:06:11,440 --> 00:06:14,880
deployments you can use it to verify

00:06:13,039 --> 00:06:16,560
that guacamole works before you start

00:06:14,880 --> 00:06:18,560
setting up a database but you don't want

00:06:16,560 --> 00:06:19,520
to actually use it in production

00:06:18,560 --> 00:06:22,800
you should use the database in

00:06:19,520 --> 00:06:23,919
production uh the database besides being

00:06:22,800 --> 00:06:25,919
intended for

00:06:23,919 --> 00:06:27,600
production use it provides benefits like

00:06:25,919 --> 00:06:29,120
a web interface

00:06:27,600 --> 00:06:31,120
administrative interface for creating

00:06:29,120 --> 00:06:32,639
connections for granting access to

00:06:31,120 --> 00:06:34,240
different connections on a per user

00:06:32,639 --> 00:06:36,880
basis things like that

00:06:34,240 --> 00:06:39,199
the user mapping is just a straight xml

00:06:36,880 --> 00:06:39,199
file

00:06:40,479 --> 00:06:43,919
when you're actually allocating

00:06:41,919 --> 00:06:48,319
resources

00:06:43,919 --> 00:06:50,160
we've actually done load tests to verify

00:06:48,319 --> 00:06:52,000
how much how many resources need to be

00:06:50,160 --> 00:06:54,319
allocated for particular loads

00:06:52,000 --> 00:06:56,400
and we've found that it scales linearly

00:06:54,319 --> 00:06:57,599
with respect to the number of concurrent

00:06:56,400 --> 00:06:59,759
connections

00:06:57,599 --> 00:07:02,160
so if you know ahead of time roughly how

00:06:59,759 --> 00:07:04,800
many people you expect to be connecting

00:07:02,160 --> 00:07:06,080
at peak then you use that number to

00:07:04,800 --> 00:07:07,919
determine

00:07:06,080 --> 00:07:09,120
how many cores how much memory you

00:07:07,919 --> 00:07:12,240
should allocate

00:07:09,120 --> 00:07:13,599
for guac d uh tomcat it makes virtually

00:07:12,240 --> 00:07:15,199
no difference

00:07:13,599 --> 00:07:17,680
but guacti needs to do actual

00:07:15,199 --> 00:07:20,080
translation and optimization it has to

00:07:17,680 --> 00:07:21,919
understand the rdp and vnc protocols and

00:07:20,080 --> 00:07:23,360
then convert them to something that the

00:07:21,919 --> 00:07:25,599
browser can understand

00:07:23,360 --> 00:07:28,479
and recompress the images it receives in

00:07:25,599 --> 00:07:30,720
ping and jpeg and webp

00:07:28,479 --> 00:07:31,759
so you need to keep in mind this takes

00:07:30,720 --> 00:07:35,199
processing power

00:07:31,759 --> 00:07:36,400
and that that it scales based on

00:07:35,199 --> 00:07:38,160
the number of people that are currently

00:07:36,400 --> 00:07:39,680
connected not the overall number of

00:07:38,160 --> 00:07:41,120
users you have but

00:07:39,680 --> 00:07:42,880
how many people are in the in the

00:07:41,120 --> 00:07:45,680
session at any one time

00:07:42,880 --> 00:07:46,400
uh for every 25 users you can expect to

00:07:45,680 --> 00:07:50,080
need around

00:07:46,400 --> 00:07:52,879
one cpu core so if you have

00:07:50,080 --> 00:07:54,319
users on the order of hundreds that's

00:07:52,879 --> 00:07:55,360
you don't really need that many

00:07:54,319 --> 00:07:57,919
resources

00:07:55,360 --> 00:07:59,599
a modest server can support quite a good

00:07:57,919 --> 00:08:00,960
number of concurrent users

00:07:59,599 --> 00:08:02,720
if you start getting towards the

00:08:00,960 --> 00:08:06,720
thousands you'll you'd want to look

00:08:02,720 --> 00:08:06,720
towards load balancing around guac d

00:08:07,360 --> 00:08:11,440
so as far as demonstrating how this will

00:08:10,639 --> 00:08:13,120
work

00:08:11,440 --> 00:08:15,280
i mentioned earlier that i'm going to be

00:08:13,120 --> 00:08:16,879
using the glipton packages here but i'll

00:08:15,280 --> 00:08:19,360
be pointing at the

00:08:16,879 --> 00:08:20,639
upstream documentation to give you an

00:08:19,360 --> 00:08:22,400
idea of what would be done if you're

00:08:20,639 --> 00:08:25,199
doing this with the upstream packages

00:08:22,400 --> 00:08:26,160
it really is the same the packages that

00:08:25,199 --> 00:08:28,560
i'm using it's

00:08:26,160 --> 00:08:29,919
just going to be a bit simpler and

00:08:28,560 --> 00:08:32,719
faster for the sake of this

00:08:29,919 --> 00:08:34,479
presentation but it is the same steps

00:08:32,719 --> 00:08:37,279
we're going to be installing

00:08:34,479 --> 00:08:38,719
tomcat and guacamole itself followed by

00:08:37,279 --> 00:08:41,680
configuring a database

00:08:38,719 --> 00:08:45,120
followed by create adding ssl

00:08:41,680 --> 00:08:49,920
termination in this case using nginx

00:08:45,120 --> 00:08:55,839
so i have a centerlist box

00:08:49,920 --> 00:08:55,839
already prepared in aws

00:08:56,080 --> 00:08:59,040
so i'll follow through the installation

00:08:57,440 --> 00:09:00,560
documentation here this is the

00:08:59,040 --> 00:09:04,640
documentation that's on the

00:09:00,560 --> 00:09:07,360
glyptodon website if you're using the

00:09:04,640 --> 00:09:08,240
upstream source and the upstream

00:09:07,360 --> 00:09:11,200
documentation

00:09:08,240 --> 00:09:12,720
you'd be going to the latest release

00:09:11,200 --> 00:09:16,320
which is 1.2.0

00:09:12,720 --> 00:09:19,600
and to the manual the installation

00:09:16,320 --> 00:09:19,600
documentation is here

00:09:19,839 --> 00:09:24,800
for in particular you'd want to install

00:09:22,640 --> 00:09:26,560
whichever dependencies you need for

00:09:24,800 --> 00:09:28,800
the level of features that you're going

00:09:26,560 --> 00:09:30,800
to be preparing some things are required

00:09:28,800 --> 00:09:32,240
not everything

00:09:30,800 --> 00:09:34,800
it depends on which protocols you want

00:09:32,240 --> 00:09:34,800
to support

00:09:34,880 --> 00:09:37,600
once once you have that in place and you

00:09:36,399 --> 00:09:40,480
have things built you would be

00:09:37,600 --> 00:09:43,839
installing the web app

00:09:40,480 --> 00:09:43,839
but on the glyptodon side

00:09:44,800 --> 00:09:47,920
the first step is to actually get access

00:09:46,880 --> 00:09:52,240
to the

00:09:47,920 --> 00:09:52,240
packages so i'll do that here

00:09:57,519 --> 00:10:05,839
copy my credentials

00:10:10,079 --> 00:10:15,200
and then we'll install guacamole itself

00:10:13,040 --> 00:10:16,160
i'm going to go ahead and install tomcat

00:10:15,200 --> 00:10:18,720
as well

00:10:16,160 --> 00:10:20,800
that's the next step that we'd be

00:10:18,720 --> 00:10:22,880
following after this

00:10:20,800 --> 00:10:24,720
the package group that's shown here the

00:10:22,880 --> 00:10:28,320
guacamole package group

00:10:24,720 --> 00:10:30,959
that contains the main components of the

00:10:28,320 --> 00:10:34,160
guacamole stack that's guacamole itself

00:10:30,959 --> 00:10:37,680
as shown here the guac d daemon

00:10:34,160 --> 00:10:40,000
that handles the actual remote desktop

00:10:37,680 --> 00:10:40,800
translation and then the various

00:10:40,000 --> 00:10:47,360
supported

00:10:40,800 --> 00:10:50,959
protocols in this case vnc rdp and ssh

00:10:47,360 --> 00:10:50,959
so this should be fairly quick

00:10:57,839 --> 00:11:01,200
upstream were using were you if you just

00:11:00,640 --> 00:11:03,920
finished

00:11:01,200 --> 00:11:04,480
uh compiling the guacamole server source

00:11:03,920 --> 00:11:07,920
which is

00:11:04,480 --> 00:11:11,200
what installing guac d and the vncrp

00:11:07,920 --> 00:11:11,600
ssh plugins would be doing you don't

00:11:11,200 --> 00:11:13,200
need

00:11:11,600 --> 00:11:14,720
to build the web app you could just

00:11:13,200 --> 00:11:16,560
download it straight away

00:11:14,720 --> 00:11:17,760
the important thing would be to prepare

00:11:16,560 --> 00:11:20,079
installing tomcat

00:11:17,760 --> 00:11:23,360
first and then deploying the war file

00:11:20,079 --> 00:11:23,360
that's also covered in here

00:11:24,240 --> 00:11:30,880
in the actual deployment documentation

00:11:28,399 --> 00:11:32,959
and within the glyptodon packages there

00:11:30,880 --> 00:11:35,440
is a guacamole group

00:11:32,959 --> 00:11:36,160
that guards access to the configuration

00:11:35,440 --> 00:11:39,680
files

00:11:36,160 --> 00:11:42,560
i can show that in practice here

00:11:39,680 --> 00:11:43,279
that the group is owning the default

00:11:42,560 --> 00:11:44,720
guacamole

00:11:43,279 --> 00:11:46,160
properties and user mapping the

00:11:44,720 --> 00:11:47,839
sensitive files of a guacamole

00:11:46,160 --> 00:11:50,000
deployment

00:11:47,839 --> 00:11:50,880
so in order for tomcat to actually be

00:11:50,000 --> 00:11:52,480
able to

00:11:50,880 --> 00:11:54,160
run the guacamole web app and for the

00:11:52,480 --> 00:11:55,440
guacamole web app to be able to access

00:11:54,160 --> 00:11:58,320
its own files

00:11:55,440 --> 00:11:59,200
the tomcat user the tomcat service user

00:11:58,320 --> 00:12:02,399
needs to be

00:11:59,200 --> 00:12:03,680
part of the guacamole group if you're

00:12:02,399 --> 00:12:06,160
doing the upstream

00:12:03,680 --> 00:12:07,680
packages the upstream source whether you

00:12:06,160 --> 00:12:08,399
need to do this would depend on how you

00:12:07,680 --> 00:12:10,639
set it up

00:12:08,399 --> 00:12:12,399
if you create a service user for tomcat

00:12:10,639 --> 00:12:13,040
or if your distribution has created a

00:12:12,399 --> 00:12:15,680
service

00:12:13,040 --> 00:12:16,639
a service user for tomcat or if you

00:12:15,680 --> 00:12:20,639
choose to create

00:12:16,639 --> 00:12:23,760
a guacamole group or to simply

00:12:20,639 --> 00:12:25,440
make tomcat owner of the files all that

00:12:23,760 --> 00:12:28,560
matters is that it has read access it

00:12:25,440 --> 00:12:30,160
doesn't need write access

00:12:28,560 --> 00:12:31,680
to deploy the web application under

00:12:30,160 --> 00:12:34,240
tomcat there's

00:12:31,680 --> 00:12:35,600
a standard location where things will go

00:12:34,240 --> 00:12:38,480
for the centos version

00:12:35,600 --> 00:12:39,200
of the tomcat package that's var lib

00:12:38,480 --> 00:12:41,360
tomcat

00:12:39,200 --> 00:12:42,880
web apps uh i understand that's

00:12:41,360 --> 00:12:44,720
different for ubuntu so

00:12:42,880 --> 00:12:46,959
if you're using a different distribution

00:12:44,720 --> 00:12:49,600
or if you've downloaded apache

00:12:46,959 --> 00:12:51,279
tomcat from upstream you'll need to

00:12:49,600 --> 00:12:54,000
consult the documentation to see where

00:12:51,279 --> 00:12:56,079
the war file needs to go

00:12:54,000 --> 00:12:57,519
in this case we're making a symbolic

00:12:56,079 --> 00:13:00,639
link from where the package

00:12:57,519 --> 00:13:03,839
put the file to the

00:13:00,639 --> 00:13:06,079
the designated location as root.or

00:13:03,839 --> 00:13:08,240
this this will cause tomcat to deploy

00:13:06,079 --> 00:13:12,480
the web app at the root of the

00:13:08,240 --> 00:13:12,480
web server rather than slash guacamole

00:13:13,279 --> 00:13:18,720
with with all that in place uh centos

00:13:16,480 --> 00:13:19,519
and red hat they do not start services

00:13:18,720 --> 00:13:21,279
by default

00:13:19,519 --> 00:13:24,480
i think that's a good thing i think

00:13:21,279 --> 00:13:26,000
ubuntu they will start this by default

00:13:24,480 --> 00:13:27,519
we need to start these things manually

00:13:26,000 --> 00:13:29,279
that would be the guac d and tomcat

00:13:27,519 --> 00:13:31,040
services

00:13:29,279 --> 00:13:34,639
and then configure things to run

00:13:31,040 --> 00:13:37,839
automatically at boot

00:13:34,639 --> 00:13:39,279
and now if i point my browser at this

00:13:37,839 --> 00:13:42,320
directly

00:13:39,279 --> 00:13:49,839
this should be working

00:13:42,320 --> 00:13:49,839
at the default tomcat port

00:13:51,199 --> 00:14:05,970
sorry i do something wrong here

00:14:03,199 --> 00:14:07,199
nope that's fine oh

00:14:05,970 --> 00:14:10,480
[Music]

00:14:07,199 --> 00:14:13,760
that's a three okay

00:14:10,480 --> 00:14:15,680
so we have the login screen here this

00:14:13,760 --> 00:14:17,279
again clipped it on packages it's been

00:14:15,680 --> 00:14:19,120
branded if you were

00:14:17,279 --> 00:14:20,800
using the upstream packages this would

00:14:19,120 --> 00:14:22,079
there'd be a guacamole logo here

00:14:20,800 --> 00:14:24,399
the version number would be slightly

00:14:22,079 --> 00:14:26,320
different it's really the same thing

00:14:24,399 --> 00:14:29,279
you'd see a username and a password

00:14:26,320 --> 00:14:30,560
prompt you'd see a login button

00:14:29,279 --> 00:14:33,360
authentication hasn't been configured

00:14:30,560 --> 00:14:36,079
yet so there's nothing i can do here

00:14:33,360 --> 00:14:36,800
but configuring that will be the next

00:14:36,079 --> 00:14:38,399
step

00:14:36,800 --> 00:14:40,800
at least with this we verify that the

00:14:38,399 --> 00:14:45,040
web application is running

00:14:40,800 --> 00:14:47,920
i'll continue on with configuring mysql

00:14:45,040 --> 00:14:50,480
in this case i'll be using mariadb since

00:14:47,920 --> 00:14:52,240
that's part of the centos repositories

00:14:50,480 --> 00:14:54,000
you could use postgres if you prefer

00:14:52,240 --> 00:14:56,320
postgres

00:14:54,000 --> 00:14:57,199
if if you have a sql server instance

00:14:56,320 --> 00:14:59,920
already ready

00:14:57,199 --> 00:15:01,120
that's supported as well i'm using

00:14:59,920 --> 00:15:13,839
mariadb here

00:15:01,120 --> 00:15:13,839
for the sake of a simple demo

00:15:22,480 --> 00:15:26,160
and as before we need to start the

00:15:24,399 --> 00:15:28,639
service this will not be happening by

00:15:26,160 --> 00:15:28,639
default

00:15:30,560 --> 00:15:36,720
and allow it to start on boot so

00:15:34,480 --> 00:15:39,759
theoretically this is fine maria db is

00:15:36,720 --> 00:15:41,600
running we could use it for guacamole

00:15:39,759 --> 00:15:43,199
before we do that there is something

00:15:41,600 --> 00:15:45,839
else that needs to be needs to be done

00:15:43,199 --> 00:15:48,880
because my sequel is running locally

00:15:45,839 --> 00:15:52,399
this is not a very well known quirk but

00:15:48,880 --> 00:15:55,600
my sequel by default contains

00:15:52,399 --> 00:15:56,160
anonymous users i can show this within

00:15:55,600 --> 00:15:59,600
the

00:15:56,160 --> 00:15:59,600
my sql prompt

00:16:00,880 --> 00:16:04,720
these blank users here the the one at

00:16:04,399 --> 00:16:06,079
the

00:16:04,720 --> 00:16:08,079
at the host name of this and the

00:16:06,079 --> 00:16:10,959
localhost these blank users are

00:16:08,079 --> 00:16:13,759
anonymous users and if you attempt to

00:16:10,959 --> 00:16:15,360
connect to my sql using from one of

00:16:13,759 --> 00:16:18,240
these hosts

00:16:15,360 --> 00:16:20,000
using a different account over tcp which

00:16:18,240 --> 00:16:22,399
is what guacamole will try to do

00:16:20,000 --> 00:16:24,320
it won't work it'll assume that you mean

00:16:22,399 --> 00:16:26,560
these the password won't match

00:16:24,320 --> 00:16:28,560
and it'll fail uh we don't want

00:16:26,560 --> 00:16:30,560
anonymous users anyway

00:16:28,560 --> 00:16:32,480
so so long as we're running mysql or

00:16:30,560 --> 00:16:34,079
mariadb on the same server

00:16:32,480 --> 00:16:36,079
as guacamole we should delete these

00:16:34,079 --> 00:16:38,480
users

00:16:36,079 --> 00:16:41,279
so that authentication can succeed i

00:16:38,480 --> 00:16:41,279
will do that now

00:16:43,120 --> 00:16:46,480
just copy and paste this

00:16:48,839 --> 00:16:53,360
okay now we can safely move forward

00:16:53,680 --> 00:16:56,959
so to configure guacamole to connect to

00:16:56,320 --> 00:16:59,680
this

00:16:56,959 --> 00:17:01,279
mysql mariadb instance we need to

00:16:59,680 --> 00:17:03,839
install the extension

00:17:01,279 --> 00:17:05,039
uh there's a standard location for this

00:17:03,839 --> 00:17:06,640
you'll see this referenced in the

00:17:05,039 --> 00:17:09,839
upstream documentation

00:17:06,640 --> 00:17:11,360
that's etsy guacamole extensions

00:17:09,839 --> 00:17:13,520
the only extension here right now is the

00:17:11,360 --> 00:17:16,400
branding that came with the glyptodon

00:17:13,520 --> 00:17:17,199
packages normally there'd probably be

00:17:16,400 --> 00:17:19,280
nothing here

00:17:17,199 --> 00:17:21,120
you would you would be downloading the

00:17:19,280 --> 00:17:24,000
necessary package

00:17:21,120 --> 00:17:25,199
uh in this case the the guacamole auth

00:17:24,000 --> 00:17:27,919
jdbc

00:17:25,199 --> 00:17:29,600
file extracting it and then copying the

00:17:27,919 --> 00:17:30,840
relevant jar

00:17:29,600 --> 00:17:33,280
that's all listed inside the

00:17:30,840 --> 00:17:36,720
documentation so the upstream

00:17:33,280 --> 00:17:39,280
documentation for this that would be

00:17:36,720 --> 00:17:41,520
here database authentication this walks

00:17:39,280 --> 00:17:43,919
through creating the database

00:17:41,520 --> 00:17:47,280
as well as putting the the relevant

00:17:43,919 --> 00:17:48,960
extension in the proper location

00:17:47,280 --> 00:17:51,120
and then setting the relevant properties

00:17:48,960 --> 00:17:53,120
for the properties

00:17:51,120 --> 00:17:55,039
so i'll look forward to that on the

00:17:53,120 --> 00:18:01,840
glutaran side there is a

00:17:55,039 --> 00:18:01,840
package that handles all of this

00:18:05,919 --> 00:18:08,960
so if you if you notice this pulled in

00:18:08,160 --> 00:18:11,919
not just

00:18:08,960 --> 00:18:12,400
the my sequel and mariadb support but

00:18:11,919 --> 00:18:16,160
also

00:18:12,400 --> 00:18:18,080
the jdbc driver for this so

00:18:16,160 --> 00:18:19,520
we can now see that this is this is in

00:18:18,080 --> 00:18:21,840
place and the required

00:18:19,520 --> 00:18:25,200
driver for being able to connect to my

00:18:21,840 --> 00:18:28,240
sql that's also been put in place

00:18:25,200 --> 00:18:30,000
so with that there the

00:18:28,240 --> 00:18:32,720
the actual database that guacamole will

00:18:30,000 --> 00:18:34,640
use that needs to be created

00:18:32,720 --> 00:18:35,760
i'm going to just use the default values

00:18:34,640 --> 00:18:38,960
here so

00:18:35,760 --> 00:18:40,640
guacamole db and then we'll use the

00:18:38,960 --> 00:18:43,760
provided

00:18:40,640 --> 00:18:45,120
sql scripts that are within the schema

00:18:43,760 --> 00:18:48,960
directory

00:18:45,120 --> 00:18:50,240
running those through our root user does

00:18:48,960 --> 00:18:54,080
not have a password

00:18:50,240 --> 00:18:55,200
so i'll get rid of that these files

00:18:54,080 --> 00:18:57,760
there's two of them

00:18:55,200 --> 00:18:59,600
one for actually defining the schema and

00:18:57,760 --> 00:19:01,840
the other for creating the default

00:18:59,600 --> 00:19:03,520
admin credentials this is done

00:19:01,840 --> 00:19:05,760
intentionally

00:19:03,520 --> 00:19:07,520
the guacamole is never granted more

00:19:05,760 --> 00:19:10,400
permissions that it needs

00:19:07,520 --> 00:19:11,039
for the user that we're about to create

00:19:10,400 --> 00:19:12,720
only

00:19:11,039 --> 00:19:15,039
only read and write permissions to the

00:19:12,720 --> 00:19:16,400
tables within the database are granted

00:19:15,039 --> 00:19:17,919
it doesn't have permission to manipulate

00:19:16,400 --> 00:19:19,760
the schema and it doesn't need

00:19:17,919 --> 00:19:24,559
permission so long as the admin is the

00:19:19,760 --> 00:19:27,120
one that creates and updates things

00:19:24,559 --> 00:19:27,760
so going back in here let's create the

00:19:27,120 --> 00:19:30,720
user

00:19:27,760 --> 00:19:32,240
this is the service user that guacamole

00:19:30,720 --> 00:19:35,200
will use to connect

00:19:32,240 --> 00:19:37,120
to my sql um in real life you would want

00:19:35,200 --> 00:19:40,799
to set an actual reasonable password

00:19:37,120 --> 00:19:44,080
i'm just gonna copy this because it's

00:19:40,799 --> 00:19:45,440
easy and this is a demo and if you're

00:19:44,080 --> 00:19:53,440
doing this in production please

00:19:45,440 --> 00:19:55,919
set an actual secure password

00:19:53,440 --> 00:19:57,200
okay so now at this point we have a

00:19:55,919 --> 00:19:58,160
database the database has been

00:19:57,200 --> 00:20:01,840
initialized

00:19:58,160 --> 00:20:03,360
guacamole has the extension installed

00:20:01,840 --> 00:20:04,880
but it hasn't yet been configured to

00:20:03,360 --> 00:20:06,159
point at the database it doesn't know

00:20:04,880 --> 00:20:07,120
where the database is running and it

00:20:06,159 --> 00:20:09,120
doesn't know

00:20:07,120 --> 00:20:11,039
what credentials it should use to access

00:20:09,120 --> 00:20:12,240
them we need to edit guacamole's

00:20:11,039 --> 00:20:14,880
configuration file

00:20:12,240 --> 00:20:16,559
it's guacamole.properties to tell it

00:20:14,880 --> 00:20:18,559
where all this is

00:20:16,559 --> 00:20:21,039
now the glyptodon packages they provided

00:20:18,559 --> 00:20:22,559
this

00:20:21,039 --> 00:20:24,240
placeholders and comments pointing

00:20:22,559 --> 00:20:27,760
things in the right direction

00:20:24,240 --> 00:20:28,960
you don't you don't need any of these

00:20:27,760 --> 00:20:31,280
values here this is just for

00:20:28,960 --> 00:20:34,400
documentation what you do need

00:20:31,280 --> 00:20:35,520
are the values shown here that's the

00:20:34,400 --> 00:20:39,360
host name

00:20:35,520 --> 00:20:42,159
and port for the database that's running

00:20:39,360 --> 00:20:44,000
and the actual database name itself and

00:20:42,159 --> 00:20:45,679
the service user

00:20:44,000 --> 00:20:47,200
these these are the values that we just

00:20:45,679 --> 00:20:48,720
entered

00:20:47,200 --> 00:20:50,640
in the upstream documentation you'll see

00:20:48,720 --> 00:20:51,600
this mentioned as well you need the host

00:20:50,640 --> 00:20:54,400
import

00:20:51,600 --> 00:20:55,679
database name so as long as these things

00:20:54,400 --> 00:20:58,799
are in place

00:20:55,679 --> 00:21:01,200
it should be able to connect

00:20:58,799 --> 00:21:02,720
all we need to do now is reload tomcat

00:21:01,200 --> 00:21:05,120
restart tomcat

00:21:02,720 --> 00:21:06,559
so that it has this information loaded

00:21:05,120 --> 00:21:08,480
guacamole won't

00:21:06,559 --> 00:21:10,240
automatically load new extensions and it

00:21:08,480 --> 00:21:13,520
won't automatically re-read guacamole

00:21:10,240 --> 00:21:17,039
properties you need to do this manually

00:21:13,520 --> 00:21:19,039
okay so theoretically this would be fine

00:21:17,039 --> 00:21:21,280
it won't be i'm going to show this

00:21:19,039 --> 00:21:24,400
failing because of se linux

00:21:21,280 --> 00:21:26,559
this is good tomcat by default because

00:21:24,400 --> 00:21:29,840
of se linux and centos and red hat

00:21:26,559 --> 00:21:32,080
is not allowed to connect to a database

00:21:29,840 --> 00:21:33,760
you need to change the selinux

00:21:32,080 --> 00:21:35,440
configuration to say that you want this

00:21:33,760 --> 00:21:38,400
to be allowed

00:21:35,440 --> 00:21:39,679
that would be the tomcat can network

00:21:38,400 --> 00:21:45,520
connect db

00:21:39,679 --> 00:21:47,840
boolean if we set this we should be good

00:21:45,520 --> 00:21:50,080
but this is this is a factor if you're

00:21:47,840 --> 00:21:51,440
installing under centos and red hat

00:21:50,080 --> 00:21:53,120
if you're installing on a platform that

00:21:51,440 --> 00:21:54,720
doesn't use

00:21:53,120 --> 00:21:57,280
it doesn't use se linux you probably

00:21:54,720 --> 00:21:59,200
won't encounter this

00:21:57,280 --> 00:22:02,159
so now we should be able to log in with

00:21:59,200 --> 00:22:02,159
the default credentials

00:22:02,559 --> 00:22:06,640
as far as backend authentication is

00:22:04,480 --> 00:22:08,400
concerned this is production ready the

00:22:06,640 --> 00:22:08,720
only thing that's stopping us from using

00:22:08,400 --> 00:22:10,640
this

00:22:08,720 --> 00:22:12,960
as it stands would be that there's no

00:22:10,640 --> 00:22:15,120
ssl in front of it

00:22:12,960 --> 00:22:16,559
you you would want an actual domain name

00:22:15,120 --> 00:22:17,840
you would want everything to go over

00:22:16,559 --> 00:22:19,520
https

00:22:17,840 --> 00:22:21,679
you wouldn't want to directly connect

00:22:19,520 --> 00:22:23,440
using this so

00:22:21,679 --> 00:22:26,159
we'll go with the final step now and

00:22:23,440 --> 00:22:30,159
actually set up

00:22:26,159 --> 00:22:31,360
ssl so in this case that's i'm going to

00:22:30,159 --> 00:22:34,159
use nginx

00:22:31,360 --> 00:22:35,520
that's what i'm most familiar with i

00:22:34,159 --> 00:22:37,520
happen to find it

00:22:35,520 --> 00:22:39,520
easier to configure than the apache web

00:22:37,520 --> 00:22:40,000
server just because the configuration

00:22:39,520 --> 00:22:43,520
files make

00:22:40,000 --> 00:22:45,679
more sense to me they're very c-like

00:22:43,520 --> 00:22:47,520
but it's really you can use whatever you

00:22:45,679 --> 00:22:51,360
prefer there's instructions available

00:22:47,520 --> 00:22:51,360
for both apache and nginx

00:22:51,520 --> 00:22:55,840
you need to enable the epl repository if

00:22:54,240 --> 00:22:57,760
you're using centos or red hat that's

00:22:55,840 --> 00:23:00,240
what i did here

00:22:57,760 --> 00:23:02,159
nginx is available but it's not part of

00:23:00,240 --> 00:23:04,000
the centos or red hat repositories by

00:23:02,159 --> 00:23:08,880
default

00:23:04,000 --> 00:23:12,400
so i'll install nginx now

00:23:08,880 --> 00:23:13,360
and then once that's done we'll do the

00:23:12,400 --> 00:23:15,760
same

00:23:13,360 --> 00:23:16,960
start and enable so that the service is

00:23:15,760 --> 00:23:20,640
running

00:23:16,960 --> 00:23:20,640
and so that it starts automatically on

00:23:20,840 --> 00:23:26,720
boot

00:23:23,360 --> 00:23:27,840
now as a quick peek um the two things

00:23:26,720 --> 00:23:29,600
that we're going to be doing here for

00:23:27,840 --> 00:23:32,080
ssl termination

00:23:29,600 --> 00:23:33,280
are one making sure that when you're

00:23:32,080 --> 00:23:35,840
connecting you get

00:23:33,280 --> 00:23:37,600
redirected to ssl if you're not already

00:23:35,840 --> 00:23:39,919
using it so anything coming in over

00:23:37,600 --> 00:23:41,279
port 80 we want to still accept those

00:23:39,919 --> 00:23:43,120
connections but we then

00:23:41,279 --> 00:23:46,480
send a redirect back to tell them to

00:23:43,120 --> 00:23:47,919
connect using https on port 443

00:23:46,480 --> 00:23:49,520
and then for any connections that are

00:23:47,919 --> 00:23:52,000
coming over https

00:23:49,520 --> 00:23:52,720
they need to be passed through with

00:23:52,000 --> 00:23:54,400
nginx

00:23:52,720 --> 00:23:55,760
removing the encryption part and passing

00:23:54,400 --> 00:23:58,000
through the unencrypted

00:23:55,760 --> 00:24:00,480
part of the connection internally to

00:23:58,000 --> 00:24:00,480
tomcat

00:24:00,559 --> 00:24:07,520
so first off we'll create the

00:24:04,159 --> 00:24:08,720
redirect the default configuration for

00:24:07,520 --> 00:24:11,440
nginx

00:24:08,720 --> 00:24:12,159
on centos looks like this this will

00:24:11,440 --> 00:24:14,880
conflict

00:24:12,159 --> 00:24:16,320
that's this location block will conflict

00:24:14,880 --> 00:24:17,840
with the

00:24:16,320 --> 00:24:19,600
the part of the redirect that we're

00:24:17,840 --> 00:24:22,000
going to be doing later

00:24:19,600 --> 00:24:25,760
so step one is going to be to comment

00:24:22,000 --> 00:24:25,760
out all of that default configuration

00:24:27,600 --> 00:24:33,840
so i'll do that real quick here

00:24:33,919 --> 00:24:38,159
and then create the necessary redirect

00:24:44,720 --> 00:24:49,200
so this this is fairly straightforward

00:24:47,360 --> 00:24:52,080
this particular file

00:24:49,200 --> 00:24:53,440
all we're doing here is telling nginx to

00:24:52,080 --> 00:24:56,159
listen on port 80

00:24:53,440 --> 00:24:57,840
for unencrypted http connections and for

00:24:56,159 --> 00:25:00,799
any to come in

00:24:57,840 --> 00:25:01,840
issue issue a redirect a 301 moved

00:25:00,799 --> 00:25:04,799
permanently

00:25:01,840 --> 00:25:05,840
redirect for the same exact host and

00:25:04,799 --> 00:25:09,120
request

00:25:05,840 --> 00:25:09,120
but for https

00:25:10,799 --> 00:25:15,840
and then we'll reload nginx so it has

00:25:12,799 --> 00:25:15,840
the new config

00:25:16,559 --> 00:25:21,760
now at this point if i go to engine if i

00:25:20,240 --> 00:25:25,039
go to port 80

00:25:21,760 --> 00:25:28,320
just as it is this should fail

00:25:25,039 --> 00:25:29,919
but this fails in a good way uh what

00:25:28,320 --> 00:25:32,480
the reason this is failing now is

00:25:29,919 --> 00:25:34,960
because nothing is listening on port 443

00:25:32,480 --> 00:25:36,799
it's been redirected uh it's been

00:25:34,960 --> 00:25:38,080
correctly redirected from port 80 to

00:25:36,799 --> 00:25:39,840
port 443

00:25:38,080 --> 00:25:42,320
but there's nothing there so this part

00:25:39,840 --> 00:25:45,039
the redirect part is working

00:25:42,320 --> 00:25:46,320
we now need to configure the rest for

00:25:45,039 --> 00:25:47,520
ssl

00:25:46,320 --> 00:25:49,919
i'm going to go ahead and use let's

00:25:47,520 --> 00:25:50,400
encrypt i've set up a domain ahead of

00:25:49,919 --> 00:25:55,520
time so

00:25:50,400 --> 00:25:57,120
this can work i set up ato.cliptodon.com

00:25:55,520 --> 00:25:58,799
you would need your own domain if you

00:25:57,120 --> 00:26:02,400
have an existing certificate authority

00:25:58,799 --> 00:26:04,240
you would use that the certbot

00:26:02,400 --> 00:26:05,760
tool that we need for let's encrypt

00:26:04,240 --> 00:26:08,840
that's part of sent to us

00:26:05,760 --> 00:26:11,840
and red hat repositories i'll pull that

00:26:08,840 --> 00:26:11,840
in

00:26:17,760 --> 00:26:22,080
and then once if since we're using let's

00:26:21,440 --> 00:26:24,480
encrypt

00:26:22,080 --> 00:26:26,320
uh it's important to keep in mind that

00:26:24,480 --> 00:26:29,279
the web the web root

00:26:26,320 --> 00:26:31,440
sorry the web root plug-in uh which is

00:26:29,279 --> 00:26:34,159
what we'll be using for the ssl here

00:26:31,440 --> 00:26:35,440
for verifying that we control the domain

00:26:34,159 --> 00:26:37,279
it works

00:26:35,440 --> 00:26:38,640
by having let's encrypt ping us back

00:26:37,279 --> 00:26:41,520
over http

00:26:38,640 --> 00:26:44,080
and reading the contents of a directory

00:26:41,520 --> 00:26:46,320
called dot well known

00:26:44,080 --> 00:26:47,279
if we don't change the redirect that we

00:26:46,320 --> 00:26:50,559
just created

00:26:47,279 --> 00:26:50,960
to allow the contents of the of webroot

00:26:50,559 --> 00:26:54,640
to be

00:26:50,960 --> 00:26:55,440
read from dot well known if we don't add

00:26:54,640 --> 00:26:57,279
an exception

00:26:55,440 --> 00:26:59,360
then let's encrypt is just going to get

00:26:57,279 --> 00:27:00,320
a redirect to https and that's not going

00:26:59,360 --> 00:27:02,000
to work

00:27:00,320 --> 00:27:04,159
uh we need to modify what we just

00:27:02,000 --> 00:27:07,760
created

00:27:04,159 --> 00:27:09,440
with let's encrypt in mind

00:27:07,760 --> 00:27:12,080
and make sure that this is something

00:27:09,440 --> 00:27:12,080
that will work

00:27:12,640 --> 00:27:16,400
so all we're doing here is adding an

00:27:15,360 --> 00:27:18,840
exception

00:27:16,400 --> 00:27:20,960
since let's nginx will interpret this

00:27:18,840 --> 00:27:23,200
first telling it to serve

00:27:20,960 --> 00:27:25,039
the contents of dot well known within

00:27:23,200 --> 00:27:26,159
this directory the standard web root for

00:27:25,039 --> 00:27:28,399
nginx

00:27:26,159 --> 00:27:31,279
only for requests here for everything

00:27:28,399 --> 00:27:31,279
else redirect them

00:27:32,399 --> 00:27:36,640
and then if we reload nginx we should

00:27:35,600 --> 00:27:39,360
have enough

00:27:36,640 --> 00:27:39,919
enough available for let's encrypt to

00:27:39,360 --> 00:27:42,640
grant us

00:27:39,919 --> 00:27:43,039
certificates so i'll go ahead and do

00:27:42,640 --> 00:27:45,080
that

00:27:43,039 --> 00:27:46,640
i've already pointed the

00:27:45,080 --> 00:27:49,279
ato.globenon.com domain

00:27:46,640 --> 00:27:51,760
that i mentioned at the ip address the

00:27:49,279 --> 00:27:54,240
public ip address of this server

00:27:51,760 --> 00:27:56,799
obviously if if you were doing this with

00:27:54,240 --> 00:27:59,120
your own domain

00:27:56,799 --> 00:28:02,159
then you would you would need to do that

00:27:59,120 --> 00:28:05,200
ahead of time

00:28:02,159 --> 00:28:05,200
enter my email

00:28:07,600 --> 00:28:12,880
yes i agree no thanks

00:28:14,240 --> 00:28:19,679
okay so now we have a full certificate

00:28:17,760 --> 00:28:22,720
and private key granted from let's

00:28:19,679 --> 00:28:24,640
encrypt for the domain that i created

00:28:22,720 --> 00:28:27,120
uh we need to configure nginx to

00:28:24,640 --> 00:28:29,679
actually use these certificates

00:28:27,120 --> 00:28:30,640
uh to do that we'll create another file

00:28:29,679 --> 00:28:33,760
in this case

00:28:30,640 --> 00:28:37,840
i'll call it guacamole.conf and

00:28:33,760 --> 00:28:37,840
this one will actually be using

00:28:38,000 --> 00:28:45,919
the ssl certificates

00:28:44,080 --> 00:28:47,840
so this should look familiar this is

00:28:45,919 --> 00:28:51,120
almost identical to the

00:28:47,840 --> 00:28:53,279
to the the block that we had before

00:28:51,120 --> 00:28:54,960
except that this one is using the

00:28:53,279 --> 00:28:57,760
standard hdps port

00:28:54,960 --> 00:28:59,279
and it's telling nginx to use ssl

00:28:57,760 --> 00:29:01,679
there's a placeholder here

00:28:59,279 --> 00:29:02,720
for the location block that will proxy

00:29:01,679 --> 00:29:04,799
the connection

00:29:02,720 --> 00:29:07,520
i'll just omit that for now since we can

00:29:04,799 --> 00:29:10,720
test without it

00:29:07,520 --> 00:29:13,840
let me remove this placeholder

00:29:10,720 --> 00:29:13,840
because our domain is different

00:29:21,840 --> 00:29:24,159
okay

00:29:25,600 --> 00:29:31,760
so that should be good uh if

00:29:28,960 --> 00:29:32,799
if you were doing this in production um

00:29:31,760 --> 00:29:34,399
you should also

00:29:32,799 --> 00:29:37,679
you would also want to set configure

00:29:34,399 --> 00:29:39,200
automatic remove renewal using cron

00:29:37,679 --> 00:29:40,960
i'm not going to do that right now

00:29:39,200 --> 00:29:42,240
because i don't want this to actually

00:29:40,960 --> 00:29:45,279
renew i'm going to provoke the

00:29:42,240 --> 00:29:48,080
certificate shortly after this demo

00:29:45,279 --> 00:29:49,919
but you you could do this following the

00:29:48,080 --> 00:29:52,080
recommendations of let's encrypt by

00:29:49,919 --> 00:29:55,360
having something that runs daily that

00:29:52,080 --> 00:29:57,440
re-runs cert certbot daily

00:29:55,360 --> 00:29:58,720
this script is here as an example for

00:29:57,440 --> 00:30:01,279
what you would do

00:29:58,720 --> 00:30:02,399
so you would create a cron job that

00:30:01,279 --> 00:30:04,399
every day

00:30:02,399 --> 00:30:06,799
attempts to renew and if the attempt is

00:30:04,399 --> 00:30:07,360
successful reload engine next to pull in

00:30:06,799 --> 00:30:09,840
the new

00:30:07,360 --> 00:30:12,159
certificate so that that much is pretty

00:30:09,840 --> 00:30:12,159
simple

00:30:12,240 --> 00:30:19,120
okay so theoretically if i reload nginx

00:30:16,080 --> 00:30:23,840
now and i point things here

00:30:19,120 --> 00:30:23,840
i should see

00:30:25,200 --> 00:30:31,360
i should see the default uh webroot

00:30:28,640 --> 00:30:33,760
this is okay this is expected we haven't

00:30:31,360 --> 00:30:36,000
yet configured nginx to use

00:30:33,760 --> 00:30:37,840
uh the the proxy portion to actually

00:30:36,000 --> 00:30:40,399
proxy guacamole as

00:30:37,840 --> 00:30:41,840
as it would need to for ssl termination

00:30:40,399 --> 00:30:43,679
uh but this is confirmed that we at

00:30:41,840 --> 00:30:44,880
least have ssl working

00:30:43,679 --> 00:30:47,360
now we need to actually connect the

00:30:44,880 --> 00:30:47,360
pieces

00:30:47,600 --> 00:30:52,159
and for that it's really just one more

00:30:49,679 --> 00:30:54,799
location block

00:30:52,159 --> 00:30:57,039
this once we add this and correct this

00:30:54,799 --> 00:31:04,000
placeholder

00:30:57,039 --> 00:31:06,720
within the the placeholder that's here

00:31:04,000 --> 00:31:10,240
this will tell nginx to instead of

00:31:06,720 --> 00:31:12,080
serving webroot the default web route

00:31:10,240 --> 00:31:14,480
to proxy connections to the internal

00:31:12,080 --> 00:31:17,120
service hosted at localhost

00:31:14,480 --> 00:31:17,120
00:31:17,679 --> 00:31:21,440
which in our case is guacamole

00:31:25,440 --> 00:31:30,640
now if i were to do this right now

00:31:28,559 --> 00:31:31,600
again sc linux is going to get in the

00:31:30,640 --> 00:31:35,039
way because

00:31:31,600 --> 00:31:36,640
of the httpd and nginx are not going to

00:31:35,039 --> 00:31:38,000
be allowed to connect over the network

00:31:36,640 --> 00:31:39,679
internally

00:31:38,000 --> 00:31:43,200
we need to tell selinux this is

00:31:39,679 --> 00:31:43,200
something we actually want to happen

00:31:44,880 --> 00:31:48,720
otherwise we would receive a proxy error

00:31:50,320 --> 00:32:01,840
like that

00:32:05,679 --> 00:32:11,600
okay so now everything is set up

00:32:08,799 --> 00:32:12,880
this is a at this point production

00:32:11,600 --> 00:32:17,440
deployment

00:32:12,880 --> 00:32:17,440
if i go to ato glyptodont.com

00:32:18,399 --> 00:32:21,919
you can see that everything is correct

00:32:20,000 --> 00:32:24,960
we no longer get complaints from chrome

00:32:21,919 --> 00:32:27,600
this is failing it's a valid certificate

00:32:24,960 --> 00:32:30,159
uh we can sign in using the the default

00:32:27,600 --> 00:32:30,159
credentials

00:32:30,240 --> 00:32:36,080
and all is working for the sake of a

00:32:33,840 --> 00:32:37,760
demo i'll i have a connection prepared

00:32:36,080 --> 00:32:40,240
so i'll show how this actually works in

00:32:37,760 --> 00:32:40,240
practice

00:32:40,320 --> 00:32:44,480
i'll create a windows connection

00:32:44,720 --> 00:32:48,559
an rdp connection to a windows machine

00:32:50,559 --> 00:32:57,840
let me set this up ahead of time

00:33:00,159 --> 00:33:06,480
and we're using nla and it's a

00:33:03,360 --> 00:33:10,159
self-signed certificate

00:33:06,480 --> 00:33:13,120
that looks correct um

00:33:10,159 --> 00:33:15,600
beware of these values it's fairly

00:33:13,120 --> 00:33:17,279
common for people to accidentally put

00:33:15,600 --> 00:33:19,279
the host name and port of their

00:33:17,279 --> 00:33:22,960
connection here this is for

00:33:19,279 --> 00:33:24,720
configuring non-default guac d locations

00:33:22,960 --> 00:33:28,240
you don't need to change this the

00:33:24,720 --> 00:33:28,240
parameters for the connection are below

00:33:32,399 --> 00:33:38,799
there you go so this is actually working

00:33:34,559 --> 00:33:40,480
this is an rdp connection over guacamole

00:33:38,799 --> 00:33:42,080
if you were to do this yourself

00:33:40,480 --> 00:33:43,679
following these exact same steps

00:33:42,080 --> 00:33:45,360
you would end up with what's considered

00:33:43,679 --> 00:33:47,519
a production deployment

00:33:45,360 --> 00:33:49,440
obviously you would change resources

00:33:47,519 --> 00:33:51,600
allocated if you don't need

00:33:49,440 --> 00:33:52,960
as bpa server or if you need to be your

00:33:51,600 --> 00:33:56,399
server

00:33:52,960 --> 00:33:57,519
but as long as you have half an hour to

00:33:56,399 --> 00:33:59,760
an hour of time

00:33:57,519 --> 00:34:01,440
and you can follow through these steps

00:33:59,760 --> 00:34:04,880
you can have this set up

00:34:01,440 --> 00:34:08,240
all you need is is a domain

00:34:04,880 --> 00:34:11,359
ssl certificate and some patients

00:34:08,240 --> 00:34:11,359
so going back here

00:34:11,839 --> 00:34:16,879
um as far as guacamole goes

00:34:14,960 --> 00:34:18,480
we think it really is the best thing you

00:34:16,879 --> 00:34:21,280
could use especially given

00:34:18,480 --> 00:34:23,760
the current state of the pandemic and

00:34:21,280 --> 00:34:25,679
the need for remote access

00:34:23,760 --> 00:34:28,480
it really simplifies things and as far

00:34:25,679 --> 00:34:29,760
as providing a good experience it should

00:34:28,480 --> 00:34:31,119
accelerate

00:34:29,760 --> 00:34:32,879
the performance of the remote desktop

00:34:31,119 --> 00:34:34,399
beyond what you would normally expect

00:34:32,879 --> 00:34:36,639
because of the way the guac d handles

00:34:34,399 --> 00:34:38,720
recompression

00:34:36,639 --> 00:34:40,000
and if you're a commercial entity or

00:34:38,720 --> 00:34:42,000
you're a company that needs

00:34:40,000 --> 00:34:43,839
additional support you can always reach

00:34:42,000 --> 00:34:45,760
out to us at glyptodon

00:34:43,839 --> 00:34:48,000
we have the necessary experience and we

00:34:45,760 --> 00:34:50,000
have packages that make this

00:34:48,000 --> 00:34:51,119
easier to maintain and install and for

00:34:50,000 --> 00:34:53,359
which you would get

00:34:51,119 --> 00:34:54,639
updates and if you have any problems you

00:34:53,359 --> 00:34:56,720
can always reach out to us and we can

00:34:54,639 --> 00:35:00,000
provide support

00:34:56,720 --> 00:35:00,640
so thanks if we if there are any

00:35:00,000 --> 00:35:03,680
questions

00:35:00,640 --> 00:35:05,520
i'll i'll take them now or you can

00:35:03,680 --> 00:35:08,960
always come back to us

00:35:05,520 --> 00:35:12,480
later at the glyptodon booth and we can

00:35:08,960 --> 00:35:14,720
take your questions there i've posted

00:35:12,480 --> 00:35:16,079
inside of the slides links to all the

00:35:14,720 --> 00:35:19,280
relevant documentation

00:35:16,079 --> 00:35:21,119
that we just created that we just walked

00:35:19,280 --> 00:35:24,640
through as well as the documentation

00:35:21,119 --> 00:35:28,160
that corresponds to this upstream

00:35:24,640 --> 00:35:30,240
and that's in the slides so if you

00:35:28,160 --> 00:35:31,440
i believe all things open is making

00:35:30,240 --> 00:35:33,760
these slides available if you

00:35:31,440 --> 00:35:34,880
download the slides that can point in

00:35:33,760 --> 00:35:39,040
the right direction

00:35:34,880 --> 00:35:39,040
uh as would the recording of this talk

00:35:40,480 --> 00:35:47,119
okay i don't i see

00:35:44,079 --> 00:35:50,400
some things in the chat

00:35:47,119 --> 00:35:51,760
uh klaus lansdorff has asked

00:35:50,400 --> 00:35:54,960
is there some restriction to do all the

00:35:51,760 --> 00:35:57,119
steps with a pod for a pod man or docker

00:35:54,960 --> 00:35:58,720
you could make it much easier guac d

00:35:57,119 --> 00:35:59,520
maybe outside the pod and the rest

00:35:58,720 --> 00:36:02,000
inside the pod

00:35:59,520 --> 00:36:04,000
yeah okay i see you found it yeah there

00:36:02,000 --> 00:36:07,280
is there is docker documentation

00:36:04,000 --> 00:36:09,920
um i can let me just

00:36:07,280 --> 00:36:09,920
open that up

00:36:11,200 --> 00:36:18,560
oh okay

00:36:14,720 --> 00:36:21,440
so on this side

00:36:18,560 --> 00:36:23,680
so on the glyptodon side there's

00:36:21,440 --> 00:36:25,359
documentation for deploying using docker

00:36:23,680 --> 00:36:28,400
so yes if you prefer docker that's

00:36:25,359 --> 00:36:30,800
that's something you can do

00:36:28,400 --> 00:36:32,560
we we also have and provide images for

00:36:30,800 --> 00:36:38,079
the database

00:36:32,560 --> 00:36:40,960
upstream on the on the apache side

00:36:38,079 --> 00:36:42,720
there's there are images too there's

00:36:40,960 --> 00:36:44,800
installing using docker

00:36:42,720 --> 00:36:47,839
so yeah if you prefer docker you can

00:36:44,800 --> 00:36:47,839
definitely go that route

00:36:51,520 --> 00:36:55,839
anything else

00:37:01,800 --> 00:37:04,800

YouTube URL: https://www.youtube.com/watch?v=hZYarUlNdmM


