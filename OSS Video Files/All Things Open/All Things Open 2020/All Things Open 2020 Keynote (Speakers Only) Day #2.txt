Title: All Things Open 2020 Keynote (Speakers Only) Day #2
Publication date: 2020-10-24
Playlist: All Things Open 2020
Description: 
	Day 2 - Tuesday, October 20

Talk #1 - Angie Jones, Applitools

10 Commandments of Navigating Code Reviews
For those who are underrepresented in tech, navigating code reviews can be hard. For example, a study of Github code reviews shows that people are much more critical of code when they know it’s submitted by a woman. Software Architect, Angie Jones, will share the 10 guidelines she follows for navigating code reviews, which have worked for every codebase she has contributed to. These practical tips will help lead to a productive process that will help you get your code accepted faster, and without the drama.
https://2020.allthingsopen.org/sessions/10-commandments-of-navigating-code-reviews/

Talk #2 - Marten Mickos, HackerOne 
Security is Everyone’s Responsibility
The future of work is changing. As the work-from-home model becomes the norm and work becomes more broadly distributed, more applications, systems, and infrastructures are more vulnerable than ever.

At the same time, cybersecurity is a $100 billion market that’s wasting resources and frustrating customers with inadequate protection. We need security designed into products, not applied on top of them. We need ubiquitous security, not just on the perimeter. We need openness and collaboration. And we need to make security the responsibility of everyone, not just the CISO and their team. If we don’t learn from the breaches of the past, they will continue to increase in size and frequency, slowing down society, harming companies, and consumers. In this talk, Marten Mickos presents a vision for a world where everyone is diligent about cybersecurity and thereby the total cost of it goes down, not up.
https://2020.allthingsopen.org/sessions/security-is-everyones-responsibility/

Talk #3 - Sarah Drasner, Netlify
An Animated Guide to Vue 3 Reactivity and Internals
There is a lot of talk about Reactivity in the frontend landscape of late, but what is it? And how does Vue use reactive premises to manage state in an application? In this talk, we’ll go over what reactivity is in general, and how that applies to the upcoming changes in Vue 3. We’ll cover proxies, the virtual DOM, and watchers along the way.
https://2020.allthingsopen.org/sessions/an-animated-guide-to-vue-3-reactivity-and-internals/

Talk #4 - Chris DiBona, Google 
Open Source Licenses at the Center
Open source is now a mainstream component of software development and culture. With this growth and normalization of open source, the license is often taken for granted, and we forget its role in shaping the project and community well beyond just using the code. Chris will talk about these overlooked dynamics, and remind us why it’s important to keep open-source licenses at the center.
https://2020.allthingsopen.org/sessions/open-source-licenses-at-the-center/
Captions: 
	00:00:05,120 --> 00:00:09,840
good morning everyone

00:00:06,960 --> 00:00:10,559
or good evening depending on where you

00:00:09,840 --> 00:00:13,519
are

00:00:10,559 --> 00:00:14,160
so i have a question for you have you

00:00:13,519 --> 00:00:18,000
ever

00:00:14,160 --> 00:00:20,880
gone on this roller coaster ride where

00:00:18,000 --> 00:00:21,840
you pour your heart and soul into your

00:00:20,880 --> 00:00:24,320
cold

00:00:21,840 --> 00:00:25,359
you feel really proud of yourself once

00:00:24,320 --> 00:00:28,480
you're done

00:00:25,359 --> 00:00:31,599
you submitted for code review

00:00:28,480 --> 00:00:34,880
only to be met with comments that are

00:00:31,599 --> 00:00:38,640
harsh blunt and sometimes

00:00:34,880 --> 00:00:39,840
downright rude yep so many of us can

00:00:38,640 --> 00:00:42,960
relate to this

00:00:39,840 --> 00:00:43,760
deflating experience right the fact of

00:00:42,960 --> 00:00:46,000
the matter

00:00:43,760 --> 00:00:47,120
is that co-reviews are a form of

00:00:46,000 --> 00:00:50,160
feedback

00:00:47,120 --> 00:00:52,320
but they often lack that thoughtfulness

00:00:50,160 --> 00:00:53,840
that would be exercised if critiquing

00:00:52,320 --> 00:00:57,120
someone on say

00:00:53,840 --> 00:01:00,079
anything else and trying to make

00:00:57,120 --> 00:01:01,199
every code reviewer be polite and

00:01:00,079 --> 00:01:05,040
thoughtful

00:01:01,199 --> 00:01:08,400
it's just a feat i simply don't have

00:01:05,040 --> 00:01:11,840
the energy to take on and i realized

00:01:08,400 --> 00:01:13,280
long ago that i can't change people's

00:01:11,840 --> 00:01:16,400
actions

00:01:13,280 --> 00:01:18,880
but i do have control over my

00:01:16,400 --> 00:01:20,000
reactions so i've taken a different

00:01:18,880 --> 00:01:22,640
approach

00:01:20,000 --> 00:01:23,759
and it's worked marvelously on every

00:01:22,640 --> 00:01:27,840
team i've

00:01:23,759 --> 00:01:27,840
been on

00:01:31,439 --> 00:01:38,320
okay sorry i get to my slides right

00:01:34,560 --> 00:01:39,680
so with this approach that's what i'm

00:01:38,320 --> 00:01:43,200
going to present to you

00:01:39,680 --> 00:01:47,119
it's my 10 commandments of navigating

00:01:43,200 --> 00:01:50,960
code reviews first one

00:01:47,119 --> 00:01:53,840
thou shall not take it personally

00:01:50,960 --> 00:01:55,600
so you can get nasty review comments for

00:01:53,840 --> 00:01:58,560
various reasons and

00:01:55,600 --> 00:02:01,360
let's be honest and state the obvious

00:01:58,560 --> 00:02:03,680
some people are just jerks right

00:02:01,360 --> 00:02:05,040
but some people they may lack the social

00:02:03,680 --> 00:02:08,160
skills to be able to give

00:02:05,040 --> 00:02:10,640
feedback in a constructive way some

00:02:08,160 --> 00:02:12,800
people they thrive on power

00:02:10,640 --> 00:02:13,920
and you know they get off on having that

00:02:12,800 --> 00:02:17,200
authority to

00:02:13,920 --> 00:02:18,879
say ship or no ship some people they

00:02:17,200 --> 00:02:20,800
pride themselves on

00:02:18,879 --> 00:02:22,560
being brutally honest and they don't

00:02:20,800 --> 00:02:25,920
want to go that extra mile

00:02:22,560 --> 00:02:28,720
to soften messages and

00:02:25,920 --> 00:02:31,120
some people have biases that color the

00:02:28,720 --> 00:02:34,319
way that they see you

00:02:31,120 --> 00:02:36,400
a study of github code reviews show that

00:02:34,319 --> 00:02:38,800
people are way more critical when they

00:02:36,400 --> 00:02:41,920
know it's submitted by a woman

00:02:38,800 --> 00:02:43,200
and trust me as a black female

00:02:41,920 --> 00:02:44,879
programmer

00:02:43,200 --> 00:02:47,280
i've certainly gotten my fair share of

00:02:44,879 --> 00:02:48,959
rude and patronizing comments when

00:02:47,280 --> 00:02:52,000
joining a new team whether it be

00:02:48,959 --> 00:02:53,840
corporate or open source

00:02:52,000 --> 00:02:56,400
but wondering if i'm getting this

00:02:53,840 --> 00:02:59,519
comment because i'm a woman

00:02:56,400 --> 00:03:01,920
or because i'm black or because of some

00:02:59,519 --> 00:03:05,200
combination of both

00:03:01,920 --> 00:03:05,920
is only going to stress me out and i

00:03:05,200 --> 00:03:08,239
imagine

00:03:05,920 --> 00:03:10,080
other underrepresented demographics may

00:03:08,239 --> 00:03:13,200
have these same thoughts and i know a

00:03:10,080 --> 00:03:17,120
lot of junior developers who do as well

00:03:13,200 --> 00:03:20,319
but here's the thing dwelling on

00:03:17,120 --> 00:03:21,440
why you're getting rude code review

00:03:20,319 --> 00:03:25,040
messages

00:03:21,440 --> 00:03:27,280
and my opinion is a waste of time

00:03:25,040 --> 00:03:29,280
and energy and you'll only become

00:03:27,280 --> 00:03:31,519
further frustrated

00:03:29,280 --> 00:03:32,799
now don't get me wrong this sort of

00:03:31,519 --> 00:03:35,920
treatment is in

00:03:32,799 --> 00:03:38,480
no way cool or acceptable but i

00:03:35,920 --> 00:03:40,080
also don't think fighting each of these

00:03:38,480 --> 00:03:42,159
reviewers head on

00:03:40,080 --> 00:03:43,280
will result in the change that we want

00:03:42,159 --> 00:03:46,400
to see

00:03:43,280 --> 00:03:50,319
so to save my own sanity

00:03:46,400 --> 00:03:51,280
i give every reviewer the benefit of the

00:03:50,319 --> 00:03:53,040
doubt

00:03:51,280 --> 00:03:55,280
and assume that their comment is

00:03:53,040 --> 00:03:57,920
directed to the code

00:03:55,280 --> 00:03:57,920
and not me

00:03:58,400 --> 00:04:01,680
now one way to avoid taking things

00:04:00,799 --> 00:04:05,200
personally

00:04:01,680 --> 00:04:09,040
is to not become married to the code

00:04:05,200 --> 00:04:11,519
take that ring off okay now i know

00:04:09,040 --> 00:04:13,200
how much of ourselves we invest into the

00:04:11,519 --> 00:04:16,720
code that we write and

00:04:13,200 --> 00:04:17,680
that passion is great but if you truly

00:04:16,720 --> 00:04:20,880
want to commit

00:04:17,680 --> 00:04:23,199
the best solution possible

00:04:20,880 --> 00:04:25,199
you have to be willing to accept that

00:04:23,199 --> 00:04:27,840
maybe the best solution

00:04:25,199 --> 00:04:30,400
is not the initial one you submitted

00:04:27,840 --> 00:04:32,240
let's look at an example

00:04:30,400 --> 00:04:34,639
here's an exchange in a given code

00:04:32,240 --> 00:04:37,120
review

00:04:34,639 --> 00:04:38,960
so it says this is complex for no good

00:04:37,120 --> 00:04:43,120
reason you don't have to show off

00:04:38,960 --> 00:04:45,040
less is more in the submitter replies

00:04:43,120 --> 00:04:47,199
this is not me showing off it's a

00:04:45,040 --> 00:04:50,080
complex problem and thus warren's a

00:04:47,199 --> 00:04:51,600
complex solution

00:04:50,080 --> 00:04:55,440
well it says you can accomplish this

00:04:51,600 --> 00:04:55,440
same thing with a single while loop

00:04:55,520 --> 00:04:59,280
and they say my solution works just as

00:04:57,919 --> 00:05:02,080
well you know

00:04:59,280 --> 00:05:04,639
i really worked hard on this sad face

00:05:02,080 --> 00:05:04,639
emoji

00:05:04,800 --> 00:05:09,520
now let's take a step back here when

00:05:07,199 --> 00:05:12,080
someone looks at this

00:05:09,520 --> 00:05:13,199
you the submitter are the one who looks

00:05:12,080 --> 00:05:16,000
emotional

00:05:13,199 --> 00:05:17,680
and defensive the rudeness of the

00:05:16,000 --> 00:05:20,000
reviewers comments

00:05:17,680 --> 00:05:21,120
is overshadowed by the submitter's

00:05:20,000 --> 00:05:24,400
attachment

00:05:21,120 --> 00:05:26,320
to that original solution now once

00:05:24,400 --> 00:05:28,160
you've learned to detach yourself it

00:05:26,320 --> 00:05:30,960
becomes a lot easier

00:05:28,160 --> 00:05:32,160
to actually hear what the reviewers are

00:05:30,960 --> 00:05:34,639
trying to say

00:05:32,160 --> 00:05:37,039
right so you will avoid going through

00:05:34,639 --> 00:05:39,759
the torture in your head of

00:05:37,039 --> 00:05:40,400
why are they being mean to me is it

00:05:39,759 --> 00:05:44,080
because

00:05:40,400 --> 00:05:44,560
i'm filling the blank and i can't tell

00:05:44,080 --> 00:05:47,120
you

00:05:44,560 --> 00:05:49,680
how much stress this helps avoid because

00:05:47,120 --> 00:05:51,840
now you can read past the bluntness

00:05:49,680 --> 00:05:54,160
of the comment and you can see the

00:05:51,840 --> 00:05:57,759
points that they're trying to make

00:05:54,160 --> 00:06:00,720
and now you're free to truly consider it

00:05:57,759 --> 00:06:02,240
is what they're suggesting actually a

00:06:00,720 --> 00:06:07,840
better solution

00:06:02,240 --> 00:06:07,840
if it is thank them and make the change

00:06:08,800 --> 00:06:14,400
so when the reviewer says that you can

00:06:12,800 --> 00:06:14,880
accomplish the same thing with a single

00:06:14,400 --> 00:06:17,440
loop

00:06:14,880 --> 00:06:18,479
the submitter says good point that would

00:06:17,440 --> 00:06:20,960
be cleaner

00:06:18,479 --> 00:06:22,800
and remove some of the complexity let me

00:06:20,960 --> 00:06:26,800
work this thank you

00:06:22,800 --> 00:06:26,800
now doesn't that sound so much better

00:06:27,520 --> 00:06:30,560
now having said that let me acknowledge

00:06:29,840 --> 00:06:33,600
that

00:06:30,560 --> 00:06:35,919
more times than not you probably do

00:06:33,600 --> 00:06:37,440
have the most optimal solution to the

00:06:35,919 --> 00:06:39,520
problem you're solving

00:06:37,440 --> 00:06:41,120
right so when someone suggests that you

00:06:39,520 --> 00:06:43,280
should change your code

00:06:41,120 --> 00:06:44,639
don't automatically assume that the

00:06:43,280 --> 00:06:48,240
person is right

00:06:44,639 --> 00:06:49,840
you worked on this for hours maybe days

00:06:48,240 --> 00:06:51,919
and the reviewer is just kind of

00:06:49,840 --> 00:06:54,880
throwing ideas out there after they're

00:06:51,919 --> 00:06:56,240
seeing it for only a couple of minutes

00:06:54,880 --> 00:06:58,160
so consider

00:06:56,240 --> 00:07:00,240
the reviewer's suggestion if you haven't

00:06:58,160 --> 00:07:04,080
already but if yours

00:07:00,240 --> 00:07:04,639
is better articulate why and do it right

00:07:04,080 --> 00:07:06,639
there

00:07:04,639 --> 00:07:08,000
in the code review because you want all

00:07:06,639 --> 00:07:11,199
the other reviewers

00:07:08,000 --> 00:07:14,160
to also know how thorough you are

00:07:11,199 --> 00:07:15,599
so the convo could go something like you

00:07:14,160 --> 00:07:16,800
could accomplish the same thing with a

00:07:15,599 --> 00:07:20,160
single while loop

00:07:16,800 --> 00:07:21,840
and you reply yeah you know i initially

00:07:20,160 --> 00:07:24,319
thought the same thing

00:07:21,840 --> 00:07:25,599
but i have to also iterate through this

00:07:24,319 --> 00:07:27,840
list

00:07:25,599 --> 00:07:30,720
that led me to this solution which

00:07:27,840 --> 00:07:34,080
handles all cases

00:07:30,720 --> 00:07:35,280
look at that now let me tell you i've

00:07:34,080 --> 00:07:38,720
seen the rudest

00:07:35,280 --> 00:07:41,759
people change their tone after

00:07:38,720 --> 00:07:44,879
i make such a statement and i've now

00:07:41,759 --> 00:07:46,720
earned their respect and i've proven

00:07:44,879 --> 00:07:50,160
that i'm just as smart as they are

00:07:46,720 --> 00:07:52,720
because i originally had that same idea

00:07:50,160 --> 00:07:54,560
and you know what i might even be a

00:07:52,720 --> 00:07:56,720
little bit smarter because i've

00:07:54,560 --> 00:07:59,280
considered something that they haven't

00:07:56,720 --> 00:08:00,080
so this is a sure way to get people to

00:07:59,280 --> 00:08:02,879
ease off

00:08:00,080 --> 00:08:05,520
in future reviews because they now trust

00:08:02,879 --> 00:08:07,199
that you know what you're doing

00:08:05,520 --> 00:08:08,960
now let's say that you've considered

00:08:07,199 --> 00:08:10,240
their recommendation

00:08:08,960 --> 00:08:12,080
and you know that's not the best

00:08:10,240 --> 00:08:13,759
solution but

00:08:12,080 --> 00:08:16,720
they don't think that your solution is

00:08:13,759 --> 00:08:19,360
the best either what do you do

00:08:16,720 --> 00:08:21,039
well you don't get into a heated back

00:08:19,360 --> 00:08:23,680
and forth exchange

00:08:21,039 --> 00:08:25,680
you know after a few messages if you

00:08:23,680 --> 00:08:27,520
can't come to an agreement

00:08:25,680 --> 00:08:29,759
it's time to step away from the code

00:08:27,520 --> 00:08:33,279
review and offer to collaborate

00:08:29,759 --> 00:08:34,080
offline on the solution so the exchange

00:08:33,279 --> 00:08:37,120
could go

00:08:34,080 --> 00:08:39,279
something like you know well there has

00:08:37,120 --> 00:08:41,680
to be a simpler approach to this

00:08:39,279 --> 00:08:43,360
and then you say something like you know

00:08:41,680 --> 00:08:44,240
i'm all for the simplest approach

00:08:43,360 --> 00:08:46,560
possible

00:08:44,240 --> 00:08:49,120
let me find some time on your calendar

00:08:46,560 --> 00:08:51,360
so that we can whiteboard it out

00:08:49,120 --> 00:08:52,800
you didn't crumble you know and just

00:08:51,360 --> 00:08:55,360
take their solution

00:08:52,800 --> 00:08:58,399
you also didn't get emotional because

00:08:55,360 --> 00:09:01,040
you are not married to this code

00:08:58,399 --> 00:09:04,000
and people will appreciate and respect

00:09:01,040 --> 00:09:06,959
both of these qualities

00:09:04,000 --> 00:09:08,959
number six thou shalt contribute to

00:09:06,959 --> 00:09:11,120
others co-reviews

00:09:08,959 --> 00:09:13,200
now if you're always the submitter and

00:09:11,120 --> 00:09:14,240
never the reviewer you're going to be

00:09:13,200 --> 00:09:17,279
perceived

00:09:14,240 --> 00:09:18,080
as more junior than you probably are and

00:09:17,279 --> 00:09:20,800
think about it

00:09:18,080 --> 00:09:21,680
the people who are most respected on the

00:09:20,800 --> 00:09:24,000
projects

00:09:21,680 --> 00:09:24,720
or who the ones who are frequently

00:09:24,000 --> 00:09:27,040
reviewing

00:09:24,720 --> 00:09:29,440
other people's code and it doesn't

00:09:27,040 --> 00:09:30,720
matter if the submitter is more senior

00:09:29,440 --> 00:09:33,760
than you are

00:09:30,720 --> 00:09:35,279
even better right think about how

00:09:33,760 --> 00:09:37,120
powerful you become

00:09:35,279 --> 00:09:38,399
when you're able to help them see

00:09:37,120 --> 00:09:41,120
something that they

00:09:38,399 --> 00:09:42,560
didn't before or you introduced them to

00:09:41,120 --> 00:09:45,760
some new technique

00:09:42,560 --> 00:09:48,720
this is instant dev cred

00:09:45,760 --> 00:09:50,560
it also allows you to see other coding

00:09:48,720 --> 00:09:53,760
styles and techniques

00:09:50,560 --> 00:09:54,800
which in turn can make you a stronger

00:09:53,760 --> 00:09:57,200
programmer

00:09:54,800 --> 00:10:00,720
and more knowledgeable about the code

00:09:57,200 --> 00:10:00,720
base that you're contributing to

00:10:01,839 --> 00:10:05,519
number seven thou shall treat submitters

00:10:04,880 --> 00:10:07,760
how thou

00:10:05,519 --> 00:10:09,680
wants to be treated now when you're

00:10:07,760 --> 00:10:13,040
reviewing code remember

00:10:09,680 --> 00:10:16,160
not to take on the same attitudes

00:10:13,040 --> 00:10:18,640
that you despise just because someone is

00:10:16,160 --> 00:10:19,360
brutal and leaving comments for you

00:10:18,640 --> 00:10:21,839
doesn't mean

00:10:19,360 --> 00:10:23,040
you have to stoop to that level and i

00:10:21,839 --> 00:10:26,480
know that this sounds

00:10:23,040 --> 00:10:29,600
obvious but listen i've witnessed

00:10:26,480 --> 00:10:31,600
levels of pettiness that adults simply

00:10:29,600 --> 00:10:34,240
should not possess

00:10:31,600 --> 00:10:35,360
if someone just ripped you apart in the

00:10:34,240 --> 00:10:38,079
code review

00:10:35,360 --> 00:10:39,839
yeah it's tempting to return a favor

00:10:38,079 --> 00:10:41,519
when you see one of their pull requests

00:10:39,839 --> 00:10:44,079
come through but don't do it

00:10:41,519 --> 00:10:45,200
be the bigger person and stay true to

00:10:44,079 --> 00:10:47,200
who you are

00:10:45,200 --> 00:10:49,440
comment on that review the same way you

00:10:47,200 --> 00:10:52,399
would like others to comment on yours

00:10:49,440 --> 00:10:53,839
and who knows maybe your charm and

00:10:52,399 --> 00:10:57,120
professionalism will rub

00:10:53,839 --> 00:11:00,160
off on them number eight

00:10:57,120 --> 00:11:02,480
thou shalt not be intimidated by the

00:11:00,160 --> 00:11:05,040
number of comments

00:11:02,480 --> 00:11:06,800
i know that it's super easy to feel like

00:11:05,040 --> 00:11:09,120
a total amateur when

00:11:06,800 --> 00:11:11,120
you have a review with tons of comments

00:11:09,120 --> 00:11:11,760
right and things get even worse when

00:11:11,120 --> 00:11:15,120
there's

00:11:11,760 --> 00:11:15,519
multiple people making multiple comments

00:11:15,120 --> 00:11:18,399
and

00:11:15,519 --> 00:11:20,160
i'm not gonna lie to you uh this doesn't

00:11:18,399 --> 00:11:22,480
look great

00:11:20,160 --> 00:11:23,600
but don't count yourself out remember

00:11:22,480 --> 00:11:26,800
it's code

00:11:23,600 --> 00:11:28,079
don't take it personally right so if

00:11:26,800 --> 00:11:30,640
you're new to

00:11:28,079 --> 00:11:33,680
the project or it's a new language or a

00:11:30,640 --> 00:11:35,519
new framework or a new library

00:11:33,680 --> 00:11:36,880
simply chalk it up to a learning

00:11:35,519 --> 00:11:39,839
opportunity

00:11:36,880 --> 00:11:40,720
go through each of the comments review

00:11:39,839 --> 00:11:42,800
them

00:11:40,720 --> 00:11:43,839
defend the solutions that you believe

00:11:42,800 --> 00:11:46,320
are right

00:11:43,839 --> 00:11:47,200
except the ones that are better but the

00:11:46,320 --> 00:11:49,839
key here

00:11:47,200 --> 00:11:50,399
is to communicate so i had to do a

00:11:49,839 --> 00:11:53,760
project

00:11:50,399 --> 00:11:55,360
in swift once and i'd never used that

00:11:53,760 --> 00:11:57,200
language before

00:11:55,360 --> 00:11:59,839
and my first few submissions were

00:11:57,200 --> 00:12:02,079
riddled with code review comments

00:11:59,839 --> 00:12:04,639
even from people who were junior to me

00:12:02,079 --> 00:12:06,880
and that stings right

00:12:04,639 --> 00:12:08,240
but i was new to the company as well so

00:12:06,880 --> 00:12:11,760
i hadn't yet

00:12:08,240 --> 00:12:14,079
established a reputation with this team

00:12:11,760 --> 00:12:14,880
and it became crucial to me that i

00:12:14,079 --> 00:12:17,120
didn't become

00:12:14,880 --> 00:12:18,480
labeled as this emotional woman who

00:12:17,120 --> 00:12:21,760
doesn't know what she's doing

00:12:18,480 --> 00:12:25,200
right so i had to explain my rationale

00:12:21,760 --> 00:12:28,480
but in a non-defensive way

00:12:25,200 --> 00:12:31,040
so the review went something like this

00:12:28,480 --> 00:12:33,200
the reviewer asked why didn't you just

00:12:31,040 --> 00:12:35,920
make the functions argument optional and

00:12:33,200 --> 00:12:38,560
set it to a default value

00:12:35,920 --> 00:12:40,480
and i say oh wow that's pretty cool we

00:12:38,560 --> 00:12:42,160
don't have that option in java

00:12:40,480 --> 00:12:43,600
which is the language that you know i

00:12:42,160 --> 00:12:45,440
rock so

00:12:43,600 --> 00:12:48,079
uh you know i said i'll make this change

00:12:45,440 --> 00:12:50,079
and read a bit more about it as well

00:12:48,079 --> 00:12:51,839
so this shows you're grateful for their

00:12:50,079 --> 00:12:54,560
help you're not dumb

00:12:51,839 --> 00:12:55,360
you know you just are used to another

00:12:54,560 --> 00:12:57,839
language

00:12:55,360 --> 00:12:59,920
and more importantly you are willing to

00:12:57,839 --> 00:13:03,120
learn

00:12:59,920 --> 00:13:05,360
number nine thou shall not repeat the

00:13:03,120 --> 00:13:08,079
same mistakes this is a big one

00:13:05,360 --> 00:13:10,160
pay attention all right because nothing

00:13:08,079 --> 00:13:13,200
annoys reviewers more

00:13:10,160 --> 00:13:14,000
than having to tell a person the same

00:13:13,200 --> 00:13:17,040
thing

00:13:14,000 --> 00:13:17,920
over and over again and i've seen cold

00:13:17,040 --> 00:13:21,200
reviews become

00:13:17,920 --> 00:13:22,639
nastier and nastier when this happens

00:13:21,200 --> 00:13:25,680
now when you accept someone's

00:13:22,639 --> 00:13:29,279
recommendation and you make the change

00:13:25,680 --> 00:13:31,519
take a moment and internalize why

00:13:29,279 --> 00:13:33,200
you accepted the recommendation because

00:13:31,519 --> 00:13:35,360
there's a lesson in there

00:13:33,200 --> 00:13:37,519
and this goes back to making sure you're

00:13:35,360 --> 00:13:39,360
not blindly accepting recommendations

00:13:37,519 --> 00:13:41,920
just to get people off your back

00:13:39,360 --> 00:13:43,680
and get your pull requests accepted if

00:13:41,920 --> 00:13:46,639
you're doing this

00:13:43,680 --> 00:13:48,480
you may not be processing the why and

00:13:46,639 --> 00:13:51,360
the why is the lesson

00:13:48,480 --> 00:13:53,440
and once you understand why you're not

00:13:51,360 --> 00:13:54,320
likely to make that same mistake in the

00:13:53,440 --> 00:13:57,279
future

00:13:54,320 --> 00:13:58,160
so if the reviewers are not explaining

00:13:57,279 --> 00:14:01,040
why

00:13:58,160 --> 00:14:02,160
they are giving you this recommendation

00:14:01,040 --> 00:14:05,199
ask them

00:14:02,160 --> 00:14:06,480
you know and when you're reviewing other

00:14:05,199 --> 00:14:08,880
people's code

00:14:06,480 --> 00:14:09,920
always provide rationale with your

00:14:08,880 --> 00:14:12,160
recommendation

00:14:09,920 --> 00:14:14,480
that helps it stick better okay now

00:14:12,160 --> 00:14:17,279
whenever viewer tells you something once

00:14:14,480 --> 00:14:18,240
and you immediately start incorporating

00:14:17,279 --> 00:14:20,800
it into

00:14:18,240 --> 00:14:22,240
your future submissions people realize

00:14:20,800 --> 00:14:24,320
you're sharp

00:14:22,240 --> 00:14:25,279
and they only have to tell you something

00:14:24,320 --> 00:14:26,959
one time and you

00:14:25,279 --> 00:14:29,360
get it they have no choice but to

00:14:26,959 --> 00:14:32,160
respect that

00:14:29,360 --> 00:14:33,360
and the final commandment is to embrace

00:14:32,160 --> 00:14:36,800
the knits

00:14:33,360 --> 00:14:37,680
so there are people who seem like major

00:14:36,800 --> 00:14:39,839
knit pickers

00:14:37,680 --> 00:14:40,720
if you don't know any it's probably you

00:14:39,839 --> 00:14:43,199
right

00:14:40,720 --> 00:14:43,760
um and their only comments to you are

00:14:43,199 --> 00:14:46,560
about

00:14:43,760 --> 00:14:48,720
misspellings and other trivial things

00:14:46,560 --> 00:14:51,560
that the linter didn't catch

00:14:48,720 --> 00:14:53,040
if you've gotten to this point

00:14:51,560 --> 00:14:55,440
congratulations

00:14:53,040 --> 00:14:57,560
you've actually managed to write code

00:14:55,440 --> 00:14:59,199
that your team has no problem with

00:14:57,560 --> 00:15:02,000
fundamentally

00:14:59,199 --> 00:15:03,120
remember don't take it personally don't

00:15:02,000 --> 00:15:06,800
roll your eyes

00:15:03,120 --> 00:15:10,240
and say such and such always has to say

00:15:06,800 --> 00:15:11,680
something such and such probably

00:15:10,240 --> 00:15:14,720
respects your work

00:15:11,680 --> 00:15:15,680
and just has an eagle eye fix the stupid

00:15:14,720 --> 00:15:18,320
typo

00:15:15,680 --> 00:15:19,279
keep it moving all right so there you

00:15:18,320 --> 00:15:23,279
have it folks

00:15:19,279 --> 00:15:26,160
these are the ten commandments

00:15:23,279 --> 00:15:27,519
and it's the gospel according to angie i

00:15:26,160 --> 00:15:29,600
keep them with me

00:15:27,519 --> 00:15:31,839
on every team that i work with and

00:15:29,600 --> 00:15:32,959
they've not failed me yet they've helped

00:15:31,839 --> 00:15:34,959
me to go

00:15:32,959 --> 00:15:36,880
from newbie contributor to

00:15:34,959 --> 00:15:40,079
well-respected contributor

00:15:36,880 --> 00:15:41,199
in a matter of a couple of weeks so i

00:15:40,079 --> 00:15:44,399
hope that they work

00:15:41,199 --> 00:15:44,800
just as well for you happy coding thank

00:15:44,399 --> 00:15:46,880
you

00:15:44,800 --> 00:15:48,320
thanks for the very warm welcome here to

00:15:46,880 --> 00:15:50,480
all things open

00:15:48,320 --> 00:15:53,199
my name is martin mikus i'm the ceo of

00:15:50,480 --> 00:15:56,480
hakka one and i'm here to talk about

00:15:53,199 --> 00:15:58,639
software and security because today

00:15:56,480 --> 00:16:00,560
we used to be able to develop software

00:15:58,639 --> 00:16:02,560
without ever thinking of security

00:16:00,560 --> 00:16:04,399
information security or cyber security

00:16:02,560 --> 00:16:06,160
but today there's no software you can

00:16:04,399 --> 00:16:07,279
develop without having to think about

00:16:06,160 --> 00:16:09,199
how to make it

00:16:07,279 --> 00:16:11,040
trustworthy how to make the software

00:16:09,199 --> 00:16:11,920
secure so that's what i'm talking about

00:16:11,040 --> 00:16:15,600
today

00:16:11,920 --> 00:16:18,639
and let me share my screen here

00:16:15,600 --> 00:16:22,560
i have to find my slides there we go

00:16:18,639 --> 00:16:25,199
share and

00:16:22,560 --> 00:16:25,199
present

00:16:27,199 --> 00:16:30,880
so as i said there's no coding anymore

00:16:30,079 --> 00:16:33,120
that doesn't

00:16:30,880 --> 00:16:34,639
involve an aspect of security whatever

00:16:33,120 --> 00:16:35,440
we're building for ourselves or for

00:16:34,639 --> 00:16:37,920
somebody else

00:16:35,440 --> 00:16:40,160
for public use or not we must make sure

00:16:37,920 --> 00:16:42,720
it's as secure as possible to

00:16:40,160 --> 00:16:44,240
reduce the risk of cyber breaches

00:16:42,720 --> 00:16:48,160
disruptions

00:16:44,240 --> 00:16:48,160
any kind of cyber crime that may happen

00:16:48,399 --> 00:16:51,440
and i'm martin mikos i'm ceo of hakka

00:16:50,240 --> 00:16:54,160
one i was previously

00:16:51,440 --> 00:16:56,160
previously ceo of mysql and we learned

00:16:54,160 --> 00:16:58,480
back then about open source that

00:16:56,160 --> 00:16:59,680
in open source some people spend an

00:16:58,480 --> 00:17:01,440
awful lot of time

00:16:59,680 --> 00:17:02,800
in order to save money and they are

00:17:01,440 --> 00:17:04,720
users and some

00:17:02,800 --> 00:17:06,640
spend a lot of money in order to save

00:17:04,720 --> 00:17:08,400
time and they become customers

00:17:06,640 --> 00:17:09,919
so there was this division into two

00:17:08,400 --> 00:17:13,520
different types of of

00:17:09,919 --> 00:17:15,760
users in open source in security

00:17:13,520 --> 00:17:16,959
it's a little bit different everybody

00:17:15,760 --> 00:17:19,600
has to spend money

00:17:16,959 --> 00:17:21,520
everybody has to spend time cyber

00:17:19,600 --> 00:17:22,240
security or information security or just

00:17:21,520 --> 00:17:25,280
security

00:17:22,240 --> 00:17:26,240
will not work if we not everybody is

00:17:25,280 --> 00:17:28,400
participating

00:17:26,240 --> 00:17:29,919
it's everybody's duty everybody's

00:17:28,400 --> 00:17:32,000
spending a little bit of money

00:17:29,919 --> 00:17:33,520
and some time to make sure that we reach

00:17:32,000 --> 00:17:35,520
the cyber hygiene

00:17:33,520 --> 00:17:36,640
that will keep our systems safe and

00:17:35,520 --> 00:17:37,840
trustworthy

00:17:36,640 --> 00:17:40,799
because when our systems are not

00:17:37,840 --> 00:17:43,039
trustworthy we get all kinds of societal

00:17:40,799 --> 00:17:44,640
side effects and bad problems in in

00:17:43,039 --> 00:17:46,400
society that seem to not

00:17:44,640 --> 00:17:48,480
relate to software but they do relate to

00:17:46,400 --> 00:17:51,360
software when people can't trust the

00:17:48,480 --> 00:17:53,679
software they are using

00:17:51,360 --> 00:17:55,120
so what is then security some people

00:17:53,679 --> 00:17:56,160
have been thinking that security is

00:17:55,120 --> 00:17:59,360
about making sure

00:17:56,160 --> 00:18:02,000
nothing bad ever happens but there is no

00:17:59,360 --> 00:18:03,120
absolute level of security there's no

00:18:02,000 --> 00:18:06,640
place where

00:18:03,120 --> 00:18:08,720
cyber risk is zero it is in

00:18:06,640 --> 00:18:11,200
the practice of information security is

00:18:08,720 --> 00:18:12,960
probabilistic risk management

00:18:11,200 --> 00:18:14,320
you think about the probability of

00:18:12,960 --> 00:18:16,240
something bad happen

00:18:14,320 --> 00:18:18,160
happening and you're trying to reduce

00:18:16,240 --> 00:18:19,679
the likelihood of it

00:18:18,160 --> 00:18:22,480
so you're looking for the most

00:18:19,679 --> 00:18:23,919
economical way of reducing the odds of a

00:18:22,480 --> 00:18:26,000
cyber breach

00:18:23,919 --> 00:18:28,799
like how can you make the cost for a

00:18:26,000 --> 00:18:30,480
criminal go up as high as possible

00:18:28,799 --> 00:18:32,160
how can you make the likelihood that

00:18:30,480 --> 00:18:33,600
your own employees will make a mistake

00:18:32,160 --> 00:18:35,120
as low as possible

00:18:33,600 --> 00:18:36,799
and every day you work on those

00:18:35,120 --> 00:18:39,120
likelihoods there's those

00:18:36,799 --> 00:18:40,080
percentages and try to drive them down

00:18:39,120 --> 00:18:42,400
they will never reach

00:18:40,080 --> 00:18:44,400
zero but if you think they can go to

00:18:42,400 --> 00:18:48,640
zero you are already wrong

00:18:44,400 --> 00:18:51,039
it's just an uh everlasting practice

00:18:48,640 --> 00:18:51,679
of reducing the risk step by step by

00:18:51,039 --> 00:18:53,280
step

00:18:51,679 --> 00:18:54,799
and it starts from when you develop

00:18:53,280 --> 00:18:56,559
software see when you

00:18:54,799 --> 00:18:58,640
design software you have to design

00:18:56,559 --> 00:19:00,799
security in from the start

00:18:58,640 --> 00:19:02,320
and we used to never do that at mysql we

00:19:00,799 --> 00:19:05,120
developed the fastest

00:19:02,320 --> 00:19:06,640
most lovable database of the world we

00:19:05,120 --> 00:19:07,679
didn't think much about security

00:19:06,640 --> 00:19:10,080
we thought about thought about

00:19:07,679 --> 00:19:11,919
performance robustness ease of use

00:19:10,080 --> 00:19:15,360
and things like that but today

00:19:11,919 --> 00:19:15,360
everything needs to be secure

00:19:15,679 --> 00:19:18,960
so where we have csos leading the

00:19:18,160 --> 00:19:21,120
security

00:19:18,960 --> 00:19:22,000
work in a company what does the c really

00:19:21,120 --> 00:19:23,600
stand for

00:19:22,000 --> 00:19:25,200
and of course we know it stands for

00:19:23,600 --> 00:19:27,520
chief but

00:19:25,200 --> 00:19:29,520
there are two schools that we are seeing

00:19:27,520 --> 00:19:31,600
there's the commanding

00:19:29,520 --> 00:19:33,600
uh information security officer and the

00:19:31,600 --> 00:19:35,919
collaborative one

00:19:33,600 --> 00:19:37,919
and it's clear that in the past we had a

00:19:35,919 --> 00:19:39,679
practice all over the world of thinking

00:19:37,919 --> 00:19:41,919
that security was something where

00:19:39,679 --> 00:19:44,080
you had one person in charge of a small

00:19:41,919 --> 00:19:46,000
group who had unlimited authority to

00:19:44,080 --> 00:19:48,240
block anything stop anything

00:19:46,000 --> 00:19:49,120
command anything and the others didn't

00:19:48,240 --> 00:19:51,679
worry

00:19:49,120 --> 00:19:54,559
but you cannot outsource security it has

00:19:51,679 --> 00:19:57,039
to be everybody's responsibility

00:19:54,559 --> 00:19:58,799
so let's look more closely at it in the

00:19:57,039 --> 00:20:00,880
in the old school

00:19:58,799 --> 00:20:03,120
the main principle of cyber security was

00:20:00,880 --> 00:20:05,280
that it's closed it's confidential it's

00:20:03,120 --> 00:20:07,440
exclusive it's just a small group

00:20:05,280 --> 00:20:09,600
of certified professionals who will even

00:20:07,440 --> 00:20:11,840
know what cyber security is

00:20:09,600 --> 00:20:13,679
but in the new world we're saying no

00:20:11,840 --> 00:20:15,600
it's open it has to be open

00:20:13,679 --> 00:20:16,799
it has to be inclusive so that everybody

00:20:15,600 --> 00:20:19,039
can participate

00:20:16,799 --> 00:20:21,280
and we have to be transparent about both

00:20:19,039 --> 00:20:23,039
the problems and the solutions

00:20:21,280 --> 00:20:24,799
we have to be transparent with what went

00:20:23,039 --> 00:20:26,480
wrong and how we fixed it and what we

00:20:24,799 --> 00:20:28,159
are learning

00:20:26,480 --> 00:20:29,679
and when you look at this as an open

00:20:28,159 --> 00:20:31,600
source developer you will say

00:20:29,679 --> 00:20:33,120
hey but that's exactly how we do it in

00:20:31,600 --> 00:20:35,919
the in open source software

00:20:33,120 --> 00:20:37,360
and that is so true so what hacker one

00:20:35,919 --> 00:20:39,440
is doing in security

00:20:37,360 --> 00:20:40,480
is what open source did to software

00:20:39,440 --> 00:20:42,480
development

00:20:40,480 --> 00:20:43,760
bringing in a model where you are open

00:20:42,480 --> 00:20:45,679
you're transparent

00:20:43,760 --> 00:20:47,440
you're inclusive you're collaborative

00:20:45,679 --> 00:20:48,880
and you work together with people

00:20:47,440 --> 00:20:51,039
you work together with people you

00:20:48,880 --> 00:20:52,080
disagree with but you work together with

00:20:51,039 --> 00:20:54,480
them

00:20:52,080 --> 00:20:57,280
and the goal in this new model is the

00:20:54,480 --> 00:21:00,080
reduction of cyber risk

00:20:57,280 --> 00:21:00,840
but in the traditional model the goal

00:21:00,080 --> 00:21:03,520
was

00:21:00,840 --> 00:21:04,320
impenetrability people thought that you

00:21:03,520 --> 00:21:07,760
can build an

00:21:04,320 --> 00:21:09,840
absolute defense on your perimeter and

00:21:07,760 --> 00:21:11,919
they were trying to reach compliance

00:21:09,840 --> 00:21:13,360
against certain standards and laws that

00:21:11,919 --> 00:21:15,200
you have to be compliance with

00:21:13,360 --> 00:21:17,280
sure you have to be compliance and sure

00:21:15,200 --> 00:21:19,360
if you can protect your perimeter

00:21:17,280 --> 00:21:21,440
nothing bad in that but that is not the

00:21:19,360 --> 00:21:22,400
the real goal the real goal is to reduce

00:21:21,440 --> 00:21:25,440
the risk

00:21:22,400 --> 00:21:27,200
of any uh incident or breach or

00:21:25,440 --> 00:21:29,600
disruption happening anywhere in your

00:21:27,200 --> 00:21:31,440
digital asset

00:21:29,600 --> 00:21:33,120
so in the old world it was only

00:21:31,440 --> 00:21:36,559
certified experts who were

00:21:33,120 --> 00:21:37,600
allowed and invited to do security today

00:21:36,559 --> 00:21:39,440
it's everybody

00:21:37,600 --> 00:21:41,280
it's those who design software those who

00:21:39,440 --> 00:21:42,960
develop software those who test software

00:21:41,280 --> 00:21:44,960
those who use software

00:21:42,960 --> 00:21:46,880
it's everybody it's the leadership of a

00:21:44,960 --> 00:21:48,960
group it's it's the ones

00:21:46,880 --> 00:21:50,320
who are individual contributors may not

00:21:48,960 --> 00:21:51,360
even work with software but they're all

00:21:50,320 --> 00:21:53,360
using it

00:21:51,360 --> 00:21:54,640
and we're all adding to the risk because

00:21:53,360 --> 00:21:56,640
we have something

00:21:54,640 --> 00:21:58,320
that can cause a breach to happen we

00:21:56,640 --> 00:21:58,960
have credentials we have access to

00:21:58,320 --> 00:22:00,400
things

00:21:58,960 --> 00:22:02,240
so we have to build the security

00:22:00,400 --> 00:22:04,320
thinking into the practice of

00:22:02,240 --> 00:22:06,080
everybody and that's a change from the

00:22:04,320 --> 00:22:07,679
la from previous times when

00:22:06,080 --> 00:22:10,000
we didn't have to worry about security

00:22:07,679 --> 00:22:10,960
it wasn't an issue but it is an issue

00:22:10,000 --> 00:22:13,840
now

00:22:10,960 --> 00:22:15,200
and when we do it we will switch

00:22:13,840 --> 00:22:18,880
security from being

00:22:15,200 --> 00:22:21,840
a cynical guard of rules and and

00:22:18,880 --> 00:22:23,760
and sort of a team that says no to a

00:22:21,840 --> 00:22:25,039
business enabler that allows you to

00:22:23,760 --> 00:22:26,720
build better software

00:22:25,039 --> 00:22:28,799
that consumers will trust that they are

00:22:26,720 --> 00:22:30,640
more eager to use

00:22:28,799 --> 00:22:31,919
so instead of saying danger stay away

00:22:30,640 --> 00:22:34,559
from this thing

00:22:31,919 --> 00:22:35,760
we say tell us what you see let's learn

00:22:34,559 --> 00:22:37,520
together

00:22:35,760 --> 00:22:39,919
and instead of looking for blame when

00:22:37,520 --> 00:22:41,039
things go wrong you do a retro and you

00:22:39,919 --> 00:22:43,440
learn from it

00:22:41,039 --> 00:22:44,799
and you're not blaming individual people

00:22:43,440 --> 00:22:46,480
for what went wrong

00:22:44,799 --> 00:22:47,840
this is a practice we've learned from

00:22:46,480 --> 00:22:50,559
airline safety

00:22:47,840 --> 00:22:51,760
where they will do retros and even tiny

00:22:50,559 --> 00:22:54,559
tiny deviations

00:22:51,760 --> 00:22:55,600
in how an airplane is operating or

00:22:54,559 --> 00:22:57,600
landing anything

00:22:55,600 --> 00:22:59,200
all the details and they never look do

00:22:57,600 --> 00:23:00,320
it in order to blame people they do it

00:22:59,200 --> 00:23:02,080
in order to learn

00:23:00,320 --> 00:23:03,440
and they share the information between

00:23:02,080 --> 00:23:04,400
all airlines even though they're

00:23:03,440 --> 00:23:06,000
competitors

00:23:04,400 --> 00:23:08,720
we have to learn to do the same with

00:23:06,000 --> 00:23:10,559
software and when we do that the cost

00:23:08,720 --> 00:23:10,960
won't be unchecked and go through the

00:23:10,559 --> 00:23:13,200
roof

00:23:10,960 --> 00:23:14,000
it will be correlated with the results

00:23:13,200 --> 00:23:17,520
that we are

00:23:14,000 --> 00:23:19,919
achieving so we must democratize

00:23:17,520 --> 00:23:21,919
security make it an issue for everybody

00:23:19,919 --> 00:23:23,760
in essence we need to learn from open

00:23:21,919 --> 00:23:25,840
source we need to do

00:23:23,760 --> 00:23:28,159
to security what open source did to

00:23:25,840 --> 00:23:29,440
software 20 years ago 15 years ago and

00:23:28,159 --> 00:23:31,520
still is doing

00:23:29,440 --> 00:23:33,200
we need to legislate cyber hygiene and

00:23:31,520 --> 00:23:35,600
make sure that it's a requirement on

00:23:33,200 --> 00:23:37,760
companies that are serving our citizens

00:23:35,600 --> 00:23:38,799
we need to fix our software or throw it

00:23:37,760 --> 00:23:40,559
away

00:23:38,799 --> 00:23:42,080
we can't keep going with software that

00:23:40,559 --> 00:23:45,840
isn't secure

00:23:42,080 --> 00:23:47,760
and finally in education we shouldn't

00:23:45,840 --> 00:23:49,360
call it computer science or software

00:23:47,760 --> 00:23:50,159
engineering if there is no cyber

00:23:49,360 --> 00:23:52,880
security

00:23:50,159 --> 00:23:54,480
courses involved in it and imagine today

00:23:52,880 --> 00:23:56,320
you can take a cs degree without

00:23:54,480 --> 00:23:58,320
learning anything about security

00:23:56,320 --> 00:24:00,559
that's so wrong it's so stupid it's so

00:23:58,320 --> 00:24:02,240
bad and this is why most of the security

00:24:00,559 --> 00:24:04,240
experts we have in the world today

00:24:02,240 --> 00:24:06,000
ethical hackers security researchers all

00:24:04,240 --> 00:24:07,360
these they are self-taught because

00:24:06,000 --> 00:24:11,919
schools don't really teach

00:24:07,360 --> 00:24:14,480
security today so in the future

00:24:11,919 --> 00:24:16,400
when we do achieve digital trust it will

00:24:14,480 --> 00:24:18,960
be because we are

00:24:16,400 --> 00:24:21,039
we are not ignoring hackers anymore we

00:24:18,960 --> 00:24:23,440
realize that hackers are good people

00:24:21,039 --> 00:24:24,960
are trying to help us and if their bad

00:24:23,440 --> 00:24:27,840
people are trying to break in

00:24:24,960 --> 00:24:29,440
they're not hackers they're criminals so

00:24:27,840 --> 00:24:31,279
ignoring hackers will be viewed as

00:24:29,440 --> 00:24:33,360
negligence in the future

00:24:31,279 --> 00:24:34,400
security will be collaborative we'll

00:24:33,360 --> 00:24:36,880
work together

00:24:34,400 --> 00:24:38,880
share our learnings pool our defenses

00:24:36,880 --> 00:24:41,279
because that's the only way to work

00:24:38,880 --> 00:24:43,760
against an asymmetric threat

00:24:41,279 --> 00:24:45,360
and we have to be transparent and open

00:24:43,760 --> 00:24:48,240
because it's the only way

00:24:45,360 --> 00:24:49,279
to build trust in any group it is the

00:24:48,240 --> 00:24:51,679
only way to reach

00:24:49,279 --> 00:24:53,279
a level of trust is to be open about

00:24:51,679 --> 00:24:55,360
your shortcomings your long comings

00:24:53,279 --> 00:24:58,080
whatever strengths weaknesses you have

00:24:55,360 --> 00:25:00,080
openness leads the way just as open

00:24:58,080 --> 00:25:03,360
source has been doing

00:25:00,080 --> 00:25:06,320
so in summary there's just one way

00:25:03,360 --> 00:25:07,840
to do security and it is together by

00:25:06,320 --> 00:25:10,080
sharing what we are learning by

00:25:07,840 --> 00:25:12,640
reviewing each other's code before it is

00:25:10,080 --> 00:25:14,720
in deployment after it is deployment by

00:25:12,640 --> 00:25:15,600
doing retros of everything that goes on

00:25:14,720 --> 00:25:17,760
so we can learn

00:25:15,600 --> 00:25:19,200
and go back earlier in the software

00:25:17,760 --> 00:25:22,080
development life cycle

00:25:19,200 --> 00:25:23,520
to fix the problems we had there and try

00:25:22,080 --> 00:25:26,159
to eradicate

00:25:23,520 --> 00:25:26,960
the vulnerabilities and the bugs that we

00:25:26,159 --> 00:25:29,760
are creating

00:25:26,960 --> 00:25:30,640
we will still have weaknesses in our

00:25:29,760 --> 00:25:33,039
systems

00:25:30,640 --> 00:25:35,679
it is not possible for human beings to

00:25:33,039 --> 00:25:38,559
build something that's completely

00:25:35,679 --> 00:25:39,679
safe and secure for for cyber risk it's

00:25:38,559 --> 00:25:41,760
completely impossible

00:25:39,679 --> 00:25:42,799
if something has no weaknesses and no

00:25:41,760 --> 00:25:45,440
vulnerabilities

00:25:42,799 --> 00:25:47,520
then it wasn't created by human beings

00:25:45,440 --> 00:25:48,400
so when it's human created it will have

00:25:47,520 --> 00:25:50,559
weaknesses

00:25:48,400 --> 00:25:52,799
the good news is other human beings will

00:25:50,559 --> 00:25:55,120
see it they can come in and help

00:25:52,799 --> 00:25:56,000
and there are today around a million

00:25:55,120 --> 00:25:58,000
ethical hackers

00:25:56,000 --> 00:25:59,039
in the world have signed up at hacca1

00:25:58,000 --> 00:26:02,159
will come in and

00:25:59,039 --> 00:26:04,320
review attack services try to break into

00:26:02,159 --> 00:26:05,679
websites mobile applications apis

00:26:04,320 --> 00:26:08,000
whatever the

00:26:05,679 --> 00:26:09,200
blockchain infrastructure whatever it is

00:26:08,000 --> 00:26:11,679
to test it

00:26:09,200 --> 00:26:13,200
and be the immune system of the internet

00:26:11,679 --> 00:26:15,919
where they

00:26:13,200 --> 00:26:17,200
try to break in and in that way allow

00:26:15,919 --> 00:26:20,320
you to fix it

00:26:17,200 --> 00:26:21,279
because the best way to avoid getting

00:26:20,320 --> 00:26:24,320
hacked

00:26:21,279 --> 00:26:26,159
is to try to get hacked because once

00:26:24,320 --> 00:26:28,159
somebody tries to hack into you

00:26:26,159 --> 00:26:30,799
they tell you what they find you can fix

00:26:28,159 --> 00:26:33,039
it so by doing that together we can

00:26:30,799 --> 00:26:35,679
create the same positive effect

00:26:33,039 --> 00:26:37,360
within cyber security that open source

00:26:35,679 --> 00:26:38,080
software created in this world of

00:26:37,360 --> 00:26:40,159
software

00:26:38,080 --> 00:26:42,000
and today you're stupid if you're not

00:26:40,159 --> 00:26:44,159
using open source software

00:26:42,000 --> 00:26:46,960
and soon you will be seen as negligent

00:26:44,159 --> 00:26:49,039
if you're not listening to hackers

00:26:46,960 --> 00:26:50,960
so thank you for listening today hope it

00:26:49,039 --> 00:26:53,679
was informative i'll stay

00:26:50,960 --> 00:26:55,840
around for the q a you have my contact

00:26:53,679 --> 00:26:58,720
details on this slide

00:26:55,840 --> 00:27:00,320
feel free to reach out tag me on twitter

00:26:58,720 --> 00:27:02,000
and give me your feedback on what you

00:27:00,320 --> 00:27:04,240
are learning how you are solving these

00:27:02,000 --> 00:27:06,960
problems i would love to hear from you

00:27:04,240 --> 00:27:07,840
thank you all right i am so excited to

00:27:06,960 --> 00:27:09,840
be here

00:27:07,840 --> 00:27:11,840
um thank you so much todd and all of the

00:27:09,840 --> 00:27:13,919
organizers of all things open for having

00:27:11,840 --> 00:27:14,240
me this is such a wonderful conference i

00:27:13,919 --> 00:27:16,400
mean

00:27:14,240 --> 00:27:18,240
i'm really passionate about open source

00:27:16,400 --> 00:27:21,279
so i'm so glad to be here

00:27:18,240 --> 00:27:22,640
um so why are they having me here today

00:27:21,279 --> 00:27:24,480
uh well it might be because they're

00:27:22,640 --> 00:27:26,559
curious about how view

00:27:24,480 --> 00:27:28,320
three actually works and thankfully

00:27:26,559 --> 00:27:30,240
that's a question i can answer because

00:27:28,320 --> 00:27:31,919
otherwise that would be kind of awkward

00:27:30,240 --> 00:27:35,200
um today we're going to go

00:27:31,919 --> 00:27:38,080
through an animated guide of view three

00:27:35,200 --> 00:27:40,000
reactivities and internals um we're

00:27:38,080 --> 00:27:42,960
gonna go through some really

00:27:40,000 --> 00:27:43,520
you know um deep down stuff but i'm

00:27:42,960 --> 00:27:45,200
gonna

00:27:43,520 --> 00:27:47,039
introduce it at a kind of high level

00:27:45,200 --> 00:27:48,640
with some animation so that you can

00:27:47,039 --> 00:27:51,520
understand what's changing

00:27:48,640 --> 00:27:53,840
and what's staying the same as mentioned

00:27:51,520 --> 00:27:54,480
i'm sarah drasner or sarah edo on

00:27:53,840 --> 00:27:57,840
twitter

00:27:54,480 --> 00:27:59,840
i'm on the view core team um i'm a vp of

00:27:57,840 --> 00:28:02,559
developer experience at netlify

00:27:59,840 --> 00:28:04,799
as todd mentioned i also am a

00:28:02,559 --> 00:28:07,200
co-organizer of concatenate along with

00:28:04,799 --> 00:28:07,840
amazing people like codebeast on twitter

00:28:07,200 --> 00:28:10,159
gift

00:28:07,840 --> 00:28:11,279
um a few other people that you might be

00:28:10,159 --> 00:28:14,799
aware of

00:28:11,279 --> 00:28:16,640
um i mentioned that i'm a vp event

00:28:14,799 --> 00:28:18,080
of developer experience at nellify which

00:28:16,640 --> 00:28:20,080
is neither netflix or

00:28:18,080 --> 00:28:21,840
shopify which is very confusing for my

00:28:20,080 --> 00:28:23,679
parents but if you're not familiar with

00:28:21,840 --> 00:28:26,080
netlify it's my favorite way to

00:28:23,679 --> 00:28:27,200
uh to deploy sites and apps which is why

00:28:26,080 --> 00:28:29,039
i asked to work there

00:28:27,200 --> 00:28:32,080
we also support a lot of open source

00:28:29,039 --> 00:28:34,640
projects like react and kubernetes and

00:28:32,080 --> 00:28:36,000
uh vue and lodash so if you're

00:28:34,640 --> 00:28:38,159
interested in open source

00:28:36,000 --> 00:28:39,039
support that is also a good place to do

00:28:38,159 --> 00:28:41,279
so

00:28:39,039 --> 00:28:42,480
so i'm gonna walk through everything

00:28:41,279 --> 00:28:44,159
today but i wanna

00:28:42,480 --> 00:28:45,679
i want you to know that all the demos

00:28:44,159 --> 00:28:47,760
for the talk are also

00:28:45,679 --> 00:28:49,840
open source they're all written in

00:28:47,760 --> 00:28:50,799
javascript even though they're animated

00:28:49,840 --> 00:28:52,000
i'm going to be showing you some

00:28:50,799 --> 00:28:53,120
animated things on the screen but

00:28:52,000 --> 00:28:56,480
they're all still

00:28:53,120 --> 00:28:57,200
just javascript um it's using a lot of

00:28:56,480 --> 00:28:59,760
the same

00:28:57,200 --> 00:29:00,320
premises that we'll be covering which

00:28:59,760 --> 00:29:02,480
makes it

00:29:00,320 --> 00:29:03,679
very meta i'm going to explain some

00:29:02,480 --> 00:29:06,480
disparate concepts

00:29:03,679 --> 00:29:08,159
sort of in an faq format based on real

00:29:06,480 --> 00:29:08,799
questions that people ask me but one

00:29:08,159 --> 00:29:10,480
thing

00:29:08,799 --> 00:29:12,640
to note is that the concepts that i'm

00:29:10,480 --> 00:29:14,640
going to show you are all interrelated

00:29:12,640 --> 00:29:17,760
so they work in concert together to

00:29:14,640 --> 00:29:20,799
create a single experience

00:29:17,760 --> 00:29:22,559
so what is reactivity the canonical

00:29:20,799 --> 00:29:23,440
example that people usually show because

00:29:22,559 --> 00:29:27,200
it's a great one

00:29:23,440 --> 00:29:29,679
is an excel spreadsheet so if we were to

00:29:27,200 --> 00:29:31,919
you know have a cell that was two and

00:29:29,679 --> 00:29:34,320
three and the last one is five

00:29:31,919 --> 00:29:35,360
if we're updating that and we have that

00:29:34,320 --> 00:29:37,840
sum

00:29:35,360 --> 00:29:39,600
it's automatically gonna update in that

00:29:37,840 --> 00:29:42,240
final cell right we have

00:29:39,600 --> 00:29:44,240
we initially had a sum of five but we

00:29:42,240 --> 00:29:44,960
didn't have to change anything in order

00:29:44,240 --> 00:29:48,000
to make that

00:29:44,960 --> 00:29:51,279
six we just changed the first value

00:29:48,000 --> 00:29:52,799
and then that you know updated as well

00:29:51,279 --> 00:29:55,120
this is not the way that things work in

00:29:52,799 --> 00:29:58,399
javascript so if i had a value of 2

00:29:55,120 --> 00:29:58,799
and i had a sum and it was 5 if my value

00:29:58,399 --> 00:30:02,080
of

00:29:58,799 --> 00:30:05,760
2 i reassign to 3

00:30:02,080 --> 00:30:08,799
and then log sum again it will stay 5.

00:30:05,760 --> 00:30:11,360
so how do we adjust to changes

00:30:08,799 --> 00:30:13,279
in javascript in terms of reactivity and

00:30:11,360 --> 00:30:15,760
reactivity is something that is

00:30:13,279 --> 00:30:17,120
a you know a kind of programming concept

00:30:15,760 --> 00:30:20,799
that is bigger than just

00:30:17,120 --> 00:30:22,159
vue but it's really useful for uis and

00:30:20,799 --> 00:30:25,440
applications because

00:30:22,159 --> 00:30:27,039
we do a lot of adjusting to change so

00:30:25,440 --> 00:30:28,720
in order to make those changes in

00:30:27,039 --> 00:30:30,480
javascript uh

00:30:28,720 --> 00:30:32,000
we would have to detect if there's a

00:30:30,480 --> 00:30:33,840
change in one of those values

00:30:32,000 --> 00:30:35,679
we'd have to track the function that

00:30:33,840 --> 00:30:36,559
changes it we'd have to trigger a

00:30:35,679 --> 00:30:39,360
function

00:30:36,559 --> 00:30:40,320
so that it can update that final value

00:30:39,360 --> 00:30:43,360
so how does view

00:30:40,320 --> 00:30:46,000
3 do this view 3 just came out so

00:30:43,360 --> 00:30:48,320
how does that do this we get this done

00:30:46,000 --> 00:30:51,840
with a thing called proxies so i made an

00:30:48,320 --> 00:30:54,880
animated explainer that goes over it

00:30:51,840 --> 00:30:54,880
we start with an object

00:30:55,600 --> 00:31:00,000
we add a handler and a proxy to the

00:30:57,600 --> 00:31:00,000
object

00:31:00,480 --> 00:31:07,360
in this case it's the same

00:31:05,120 --> 00:31:09,840
but look we can intercept the object

00:31:07,360 --> 00:31:11,440
with this proxy

00:31:09,840 --> 00:31:14,399
and here's the cool part if we change

00:31:11,440 --> 00:31:16,480
the first object the proxied object

00:31:14,399 --> 00:31:17,760
updates accordingly without adjusting

00:31:16,480 --> 00:31:19,840
the handler

00:31:17,760 --> 00:31:22,320
with reactivity we can respond to

00:31:19,840 --> 00:31:24,480
changes instantly

00:31:22,320 --> 00:31:26,559
cool that was quick and kind of high

00:31:24,480 --> 00:31:28,480
level so let's explore this concept in a

00:31:26,559 --> 00:31:30,840
little bit more depth and then move on

00:31:28,480 --> 00:31:32,000
so let's dive into what proxies are in

00:31:30,840 --> 00:31:34,640
general

00:31:32,000 --> 00:31:36,399
a proxy is an object that encases

00:31:34,640 --> 00:31:38,880
another object or function and allows

00:31:36,399 --> 00:31:41,200
you to intercept it

00:31:38,880 --> 00:31:42,240
so he at its base here's what it looks

00:31:41,200 --> 00:31:44,720
like new

00:31:42,240 --> 00:31:46,000
proxy and you pass in the target and the

00:31:44,720 --> 00:31:49,120
handler and let's look at what that

00:31:46,000 --> 00:31:52,159
looks like so if i have my dinner

00:31:49,120 --> 00:31:52,960
and the meal is tacos i can create a

00:31:52,159 --> 00:31:55,840
handler

00:31:52,960 --> 00:31:57,360
that basically has this get method that

00:31:55,840 --> 00:31:59,279
passes in the target in the prop and

00:31:57,360 --> 00:32:02,080
we're returning the target prop

00:31:59,279 --> 00:32:02,640
in square bracket notation if we get the

00:32:02,080 --> 00:32:06,000
meal

00:32:02,640 --> 00:32:07,039
and we say const proxy is the dinner and

00:32:06,000 --> 00:32:09,519
the handler

00:32:07,039 --> 00:32:10,720
and then we console.log proxy.meal what

00:32:09,519 --> 00:32:13,360
do you think is going to happen

00:32:10,720 --> 00:32:16,080
well you see tacos is returned that's

00:32:13,360 --> 00:32:18,000
awesome because tacos are amazing

00:32:16,080 --> 00:32:20,000
but what if we want to intercept this

00:32:18,000 --> 00:32:23,440
value and we can actually do that

00:32:20,000 --> 00:32:25,840
quite easily so we can console log

00:32:23,440 --> 00:32:27,039
something like intercepted here or

00:32:25,840 --> 00:32:30,399
anything that you'd

00:32:27,039 --> 00:32:33,279
wish and we still return that you know

00:32:30,399 --> 00:32:33,679
our return our return prop and target

00:32:33,279 --> 00:32:35,840
prop

00:32:33,679 --> 00:32:37,679
and square bracket notation and cool if

00:32:35,840 --> 00:32:41,120
what what do we see we see

00:32:37,679 --> 00:32:42,080
intercepted and then tacos so that gives

00:32:41,120 --> 00:32:45,440
us kind of like a

00:32:42,080 --> 00:32:48,720
useful um way to kind of be

00:32:45,440 --> 00:32:50,080
involved in that object as we proxy that

00:32:48,720 --> 00:32:52,240
object

00:32:50,080 --> 00:32:55,279
so you can see console.log intercepted

00:32:52,240 --> 00:32:58,799
and there we've logged intercepted

00:32:55,279 --> 00:32:59,679
so what if we want to do something

00:32:58,799 --> 00:33:02,080
totally different

00:32:59,679 --> 00:33:03,440
we don't we don't necessarily want to do

00:33:02,080 --> 00:33:06,240
exactly the same thing

00:33:03,440 --> 00:33:06,720
we don't have to return the target and

00:33:06,240 --> 00:33:08,720
prop

00:33:06,720 --> 00:33:10,320
we can actually do something completely

00:33:08,720 --> 00:33:12,080
different so we can console.log

00:33:10,320 --> 00:33:14,640
we swapped out your dinner and i can

00:33:12,080 --> 00:33:17,200
return burger and then if i say

00:33:14,640 --> 00:33:18,640
you know proxy.meal and we say we

00:33:17,200 --> 00:33:21,120
swapped out your burger your

00:33:18,640 --> 00:33:22,320
your meal and that's a burger and now

00:33:21,120 --> 00:33:24,720
we're getting a burger

00:33:22,320 --> 00:33:26,799
i mean that's that's crazy i don't want

00:33:24,720 --> 00:33:28,159
a burger i want a taco so in javascript

00:33:26,799 --> 00:33:31,519
that's called the trap

00:33:28,159 --> 00:33:32,960
um it's because we can do and we can do

00:33:31,519 --> 00:33:35,840
many things we can intercept

00:33:32,960 --> 00:33:36,880
things in many ways um and yeah it's a

00:33:35,840 --> 00:33:38,799
trap

00:33:36,880 --> 00:33:40,559
we don't necessarily want a burger

00:33:38,799 --> 00:33:43,360
instead of a taco

00:33:40,559 --> 00:33:44,880
so the key here is that we can intercept

00:33:43,360 --> 00:33:47,360
this in any way that we want but

00:33:44,880 --> 00:33:48,640
if you want to use it in the same way

00:33:47,360 --> 00:33:51,440
you have to remember

00:33:48,640 --> 00:33:52,960
to also return that value okay so let's

00:33:51,440 --> 00:33:55,600
go back to the initial

00:33:52,960 --> 00:33:57,279
uh example here so we're returning with

00:33:55,600 --> 00:34:00,480
that square bracket notation but there's

00:33:57,279 --> 00:34:02,080
another way to extract the value

00:34:00,480 --> 00:34:03,960
this is something that only proxies

00:34:02,080 --> 00:34:06,960
allow us to do you can say

00:34:03,960 --> 00:34:08,720
reflex.get and spread the arguments

00:34:06,960 --> 00:34:10,720
and one one of those arguments that you

00:34:08,720 --> 00:34:12,720
can add is called receiver

00:34:10,720 --> 00:34:14,079
what's important about receiver is that

00:34:12,720 --> 00:34:17,040
it allows us to bind

00:34:14,079 --> 00:34:17,839
this properly that's important because

00:34:17,040 --> 00:34:20,079
in view

00:34:17,839 --> 00:34:22,240
we do a lot of binding of this we have

00:34:20,079 --> 00:34:24,720
to bind this appropriately

00:34:22,240 --> 00:34:26,079
in order for view to work under the hood

00:34:24,720 --> 00:34:29,280
so this is really nice

00:34:26,079 --> 00:34:31,760
because we have proper binding so now

00:34:29,280 --> 00:34:32,720
let's talk about what we might need here

00:34:31,760 --> 00:34:35,760
in order to make

00:34:32,720 --> 00:34:37,679
view reactive we mentioned that we might

00:34:35,760 --> 00:34:38,960
need to track some of those values so we

00:34:37,679 --> 00:34:41,359
need a function

00:34:38,960 --> 00:34:42,399
that will track any changes that occur

00:34:41,359 --> 00:34:44,480
with these objects

00:34:42,399 --> 00:34:45,599
with these properties and values which

00:34:44,480 --> 00:34:48,560
is called pre

00:34:45,599 --> 00:34:50,399
called track in uh view three and it

00:34:48,560 --> 00:34:53,040
saves any changes

00:34:50,399 --> 00:34:55,839
those changes that it saves are then

00:34:53,040 --> 00:34:55,839
called effects

00:34:56,159 --> 00:35:02,000
so now in our set method we

00:34:59,440 --> 00:35:03,200
are going to show all of the same things

00:35:02,000 --> 00:35:05,839
the target key

00:35:03,200 --> 00:35:07,040
but we are also passing in the value and

00:35:05,839 --> 00:35:09,920
we're returning

00:35:07,040 --> 00:35:11,200
that reflect of the set of all of those

00:35:09,920 --> 00:35:12,640
arguments

00:35:11,200 --> 00:35:14,720
but there's one last thing that we can

00:35:12,640 --> 00:35:15,520
do oh and this is called trigger in view

00:35:14,720 --> 00:35:18,320
so we're

00:35:15,520 --> 00:35:18,800
triggering we're running the changes

00:35:18,320 --> 00:35:21,520
that

00:35:18,800 --> 00:35:23,599
have to be updated and there's one thing

00:35:21,520 --> 00:35:25,520
that we want to do for efficiency

00:35:23,599 --> 00:35:27,359
we want to store the old value in the

00:35:25,520 --> 00:35:29,280
new value because we want to check if

00:35:27,359 --> 00:35:29,760
the old value is different from the new

00:35:29,280 --> 00:35:31,599
value

00:35:29,760 --> 00:35:32,960
and then run trigger because we don't

00:35:31,599 --> 00:35:34,880
necessarily want to run trigger

00:35:32,960 --> 00:35:36,560
every single time we only want to run it

00:35:34,880 --> 00:35:40,400
when something has changed

00:35:36,560 --> 00:35:41,920
cool so now remember this list

00:35:40,400 --> 00:35:44,400
this list is the list of things that

00:35:41,920 --> 00:35:46,640
we'd have to do to update those values

00:35:44,400 --> 00:35:47,920
automatically or with some reactive

00:35:46,640 --> 00:35:51,040
premises

00:35:47,920 --> 00:35:53,440
um so okay looking at this detect when

00:35:51,040 --> 00:35:55,040
there's a change in one of the values we

00:35:53,440 --> 00:35:56,880
no longer have to do this anymore

00:35:55,040 --> 00:35:58,000
because proxies is already doing this

00:35:56,880 --> 00:35:59,520
for us

00:35:58,000 --> 00:36:01,760
we're going to track the function that

00:35:59,520 --> 00:36:04,880
changes it and this is literally called

00:36:01,760 --> 00:36:06,480
track in view we're going to trigger

00:36:04,880 --> 00:36:07,920
the function so that it can update that

00:36:06,480 --> 00:36:10,480
final value and

00:36:07,920 --> 00:36:11,440
finally the function that changes it is

00:36:10,480 --> 00:36:12,880
called effect

00:36:11,440 --> 00:36:15,440
so if you need to find any of these

00:36:12,880 --> 00:36:17,599
methods the code base is here

00:36:15,440 --> 00:36:18,960
now you know in view two everything was

00:36:17,599 --> 00:36:21,520
one single package

00:36:18,960 --> 00:36:22,720
in view three we split it out into many

00:36:21,520 --> 00:36:25,599
many packages

00:36:22,720 --> 00:36:26,160
uh reactivity is now a package in and of

00:36:25,599 --> 00:36:28,079
itself

00:36:26,160 --> 00:36:29,760
so you can use that separately from all

00:36:28,079 --> 00:36:31,599
of the rest of you and you might ask

00:36:29,760 --> 00:36:34,000
like why is that necessary well

00:36:31,599 --> 00:36:35,920
let's say you were working with non-dom

00:36:34,000 --> 00:36:37,760
operations right there's a lot of

00:36:35,920 --> 00:36:39,040
stuff that vue does in order to work

00:36:37,760 --> 00:36:40,720
with the virtual dom

00:36:39,040 --> 00:36:42,400
that you don't necessarily need if

00:36:40,720 --> 00:36:44,720
you're working with electron or

00:36:42,400 --> 00:36:46,480
native development so that's a separate

00:36:44,720 --> 00:36:47,599
package so that you can code split and

00:36:46,480 --> 00:36:49,520
tree shake

00:36:47,599 --> 00:36:52,000
and all of the packages are separate now

00:36:49,520 --> 00:36:54,800
so you can have an extremely small

00:36:52,000 --> 00:36:56,400
build if you'd like to check out any of

00:36:54,800 --> 00:36:58,640
the things that i mentioned before

00:36:56,400 --> 00:36:59,599
you can see them in this package in

00:36:58,640 --> 00:37:01,440
particular

00:36:59,599 --> 00:37:03,280
and if you wanted to look at them for

00:37:01,440 --> 00:37:05,440
just your life for

00:37:03,280 --> 00:37:06,480
any other curiosity reasons that's where

00:37:05,440 --> 00:37:08,960
there they are

00:37:06,480 --> 00:37:11,119
another thing is that proxies are now

00:37:08,960 --> 00:37:14,400
es6 previously it was

00:37:11,119 --> 00:37:15,680
es5 and below so object.define property

00:37:14,400 --> 00:37:18,880
was how we used

00:37:15,680 --> 00:37:22,000
uh view three so view our view two

00:37:18,880 --> 00:37:23,839
in view three we're using proxies

00:37:22,000 --> 00:37:25,599
we are making a separate package that's

00:37:23,839 --> 00:37:26,480
a little bit bigger to support older

00:37:25,599 --> 00:37:29,520
browsers

00:37:26,480 --> 00:37:31,440
but this smaller build supports modern

00:37:29,520 --> 00:37:33,839
browsers and is

00:37:31,440 --> 00:37:35,760
really really performant and efficient

00:37:33,839 --> 00:37:39,599
so you can check out all of that work

00:37:35,760 --> 00:37:41,760
in the view next repo cool

00:37:39,599 --> 00:37:42,880
so let's dig into how watchers work if

00:37:41,760 --> 00:37:44,640
you're familiar with vue

00:37:42,880 --> 00:37:46,640
you might know something about watchers

00:37:44,640 --> 00:37:49,359
watchers are a way to hook into some of

00:37:46,640 --> 00:37:53,119
that reactivity and adjust to changes

00:37:49,359 --> 00:37:53,599
so how do proxies relate to these final

00:37:53,119 --> 00:37:55,520
dom

00:37:53,599 --> 00:37:57,040
updates how do we hook into them with

00:37:55,520 --> 00:37:58,880
watchers

00:37:57,040 --> 00:38:00,240
so if you're not familiar with watchers

00:37:58,880 --> 00:38:02,320
here's how they work

00:38:00,240 --> 00:38:04,960
anytime we change this property you can

00:38:02,320 --> 00:38:06,880
see that we're watching the same data

00:38:04,960 --> 00:38:09,040
property as that counter so we've got

00:38:06,880 --> 00:38:10,400
the counter is zero and then we're

00:38:09,040 --> 00:38:12,320
watching the counter

00:38:10,400 --> 00:38:13,920
and we're logging the new value in the

00:38:12,320 --> 00:38:15,760
old value and if we

00:38:13,920 --> 00:38:17,760
increase it or decrease it you can see

00:38:15,760 --> 00:38:19,200
i'm watching that property anytime the

00:38:17,760 --> 00:38:22,320
property changes

00:38:19,200 --> 00:38:23,760
i can console log and i i can also do a

00:38:22,320 --> 00:38:26,320
ton of other things

00:38:23,760 --> 00:38:27,839
but it gives me access to the new and

00:38:26,320 --> 00:38:29,839
old versions of the value

00:38:27,839 --> 00:38:33,040
anytime something changes so how does

00:38:29,839 --> 00:38:33,920
this work in v3 before we dive into that

00:38:33,040 --> 00:38:36,160
concept

00:38:33,920 --> 00:38:37,839
there are a set of base concepts to

00:38:36,160 --> 00:38:40,880
understand get it set

00:38:37,839 --> 00:38:42,960
anyway um in order to understand the

00:38:40,880 --> 00:38:45,440
in our workings we'll have to cover sets

00:38:42,960 --> 00:38:48,800
maps and weak maps

00:38:45,440 --> 00:38:49,920
a set is a series of only values similar

00:38:48,800 --> 00:38:51,680
to an array

00:38:49,920 --> 00:38:53,920
where a particular value can only be

00:38:51,680 --> 00:38:55,839
inserted once so what does that mean

00:38:53,920 --> 00:38:58,160
if you have something like my lunch

00:38:55,839 --> 00:38:59,280
items and you have this new set of taco

00:38:58,160 --> 00:39:01,920
burger taco

00:38:59,280 --> 00:39:03,680
and you console log my lunch items the

00:39:01,920 --> 00:39:05,680
set is really only going to store

00:39:03,680 --> 00:39:07,440
the taco and the burger it's going to

00:39:05,680 --> 00:39:08,800
throw out anything that's redundant so

00:39:07,440 --> 00:39:09,839
it's going to throw out my other taco

00:39:08,800 --> 00:39:13,520
which is really sad

00:39:09,839 --> 00:39:16,480
i can only get that once a map

00:39:13,520 --> 00:39:18,400
is sort of like an object um it's got

00:39:16,480 --> 00:39:18,800
some main differences but you can think

00:39:18,400 --> 00:39:20,960
of it

00:39:18,800 --> 00:39:22,320
similarly because a map is a series of

00:39:20,960 --> 00:39:24,640
keys and values

00:39:22,320 --> 00:39:26,320
uh but it has some key differences and

00:39:24,640 --> 00:39:27,440
it has actually a lot of differences but

00:39:26,320 --> 00:39:28,079
we're going to cover the ones that are

00:39:27,440 --> 00:39:30,560
really pertinent

00:39:28,079 --> 00:39:32,160
for view three key value pairs remember

00:39:30,560 --> 00:39:34,000
their explicit ordering

00:39:32,160 --> 00:39:35,599
it performs better in scenarios

00:39:34,000 --> 00:39:36,720
involving frequent additions and

00:39:35,599 --> 00:39:39,040
removals

00:39:36,720 --> 00:39:40,320
like set you can only add key value

00:39:39,040 --> 00:39:42,960
pairs once

00:39:40,320 --> 00:39:43,440
and it has some nice methods like size

00:39:42,960 --> 00:39:46,640
has

00:39:43,440 --> 00:39:48,720
set clear delete by the key

00:39:46,640 --> 00:39:50,880
um this isn't all the things that are

00:39:48,720 --> 00:39:52,560
different different about maps than

00:39:50,880 --> 00:39:54,960
objects but we're covering the most

00:39:52,560 --> 00:39:58,160
crucial ones for our purposes

00:39:54,960 --> 00:40:00,480
so just like in set map

00:39:58,160 --> 00:40:01,280
uh in a new map in this example for a

00:40:00,480 --> 00:40:04,720
new map

00:40:01,280 --> 00:40:07,200
we can't keep the same key value pair

00:40:04,720 --> 00:40:08,960
twice right we saw that in set where if

00:40:07,200 --> 00:40:12,079
i have new map dot set

00:40:08,960 --> 00:40:14,720
lunch one is tacos lunch two is burgers

00:40:12,079 --> 00:40:16,880
but if i try to log another lunch one

00:40:14,720 --> 00:40:19,920
it will throw it away i get lunch one is

00:40:16,880 --> 00:40:22,640
tacos lunch two is burgers and that's it

00:40:19,920 --> 00:40:24,000
it doesn't add it again so the last

00:40:22,640 --> 00:40:24,319
thing that we're going to talk about is

00:40:24,000 --> 00:40:26,160
we

00:40:24,319 --> 00:40:27,680
weak map so it's similar to a map but

00:40:26,160 --> 00:40:29,839
the references are held

00:40:27,680 --> 00:40:31,920
weekly in other words if you delete

00:40:29,839 --> 00:40:33,280
something the reference can be garbage

00:40:31,920 --> 00:40:35,760
collected but in the map

00:40:33,280 --> 00:40:37,680
it can't so this also means that it

00:40:35,760 --> 00:40:38,000
loses the implicit ordering it also

00:40:37,680 --> 00:40:40,400
loses

00:40:38,000 --> 00:40:41,200
some of those nice methods like has

00:40:40,400 --> 00:40:44,800
delete

00:40:41,200 --> 00:40:46,640
by the key you know size and etc

00:40:44,800 --> 00:40:48,960
but the main difference about weak map

00:40:46,640 --> 00:40:52,240
that's really crucial to view three

00:40:48,960 --> 00:40:54,400
is garbage literally garbage

00:40:52,240 --> 00:40:55,839
but more like a happy kind of garbage

00:40:54,400 --> 00:40:58,319
because we like

00:40:55,839 --> 00:41:01,760
collecting garbage this makes view much

00:40:58,319 --> 00:41:01,760
faster and i'll show you why

00:41:02,720 --> 00:41:07,200
so if we have something like this object

00:41:05,440 --> 00:41:09,040
here

00:41:07,200 --> 00:41:11,040
when you pass an object to a view

00:41:09,040 --> 00:41:13,599
instance as data view converts it to a

00:41:11,040 --> 00:41:13,599
proxy

00:41:14,079 --> 00:41:17,280
this proxy enables you to perform

00:41:16,319 --> 00:41:18,960
dependency track

00:41:17,280 --> 00:41:20,319
tracking and change notification when

00:41:18,960 --> 00:41:22,480
proc pro

00:41:20,319 --> 00:41:24,240
properties are accessed there are two

00:41:22,480 --> 00:41:26,720
levels of dependencies for every

00:41:24,240 --> 00:41:26,720
component

00:41:26,960 --> 00:41:30,480
the first level uses map and stores the

00:41:29,040 --> 00:41:34,960
dependency for every

00:41:30,480 --> 00:41:36,480
property the second level uses set to

00:41:34,960 --> 00:41:39,359
track the effects that will be run when

00:41:36,480 --> 00:41:39,359
the values change

00:41:40,160 --> 00:41:43,839
after the first render we've tracked the

00:41:42,000 --> 00:41:47,119
list of dependencies in the property

00:41:43,839 --> 00:41:48,000
accessed during the render conversely

00:41:47,119 --> 00:41:50,160
the component

00:41:48,000 --> 00:41:52,640
becomes a subscriber to each of these

00:41:50,160 --> 00:41:52,640
properties

00:41:52,960 --> 00:41:57,520
when a proxy intercepts a set operation

00:41:55,359 --> 00:42:00,079
the property will notify all of the

00:41:57,520 --> 00:42:01,359
subscribers in the components we render

00:42:00,079 --> 00:42:03,920
view reactivity

00:42:01,359 --> 00:42:05,920
efficiently tracks all of the changes in

00:42:03,920 --> 00:42:08,000
that application

00:42:05,920 --> 00:42:09,599
cool so that was pretty high level if

00:42:08,000 --> 00:42:11,280
you'd like more information

00:42:09,599 --> 00:42:13,599
view mastery does a wonderful job of

00:42:11,280 --> 00:42:15,200
this uh they have a whole course on view

00:42:13,599 --> 00:42:18,400
through your reactivity that i

00:42:15,200 --> 00:42:20,000
uh suggest you try out okay on to the

00:42:18,400 --> 00:42:21,839
next we talked about reactivity and

00:42:20,000 --> 00:42:24,160
watchers but how do those properties

00:42:21,839 --> 00:42:25,040
actually change in the dom how are these

00:42:24,160 --> 00:42:27,599
properties getting

00:42:25,040 --> 00:42:28,079
reflected get it a little proxy joke in

00:42:27,599 --> 00:42:30,480
there

00:42:28,079 --> 00:42:32,160
in our interfaces okay so now let's

00:42:30,480 --> 00:42:33,839
cover how does the virtual dom

00:42:32,160 --> 00:42:35,760
actually work you might have heard this

00:42:33,839 --> 00:42:36,560
phrase before the virtual dom or the

00:42:35,760 --> 00:42:38,079
viewdom

00:42:36,560 --> 00:42:39,599
it's a concept that many javascript

00:42:38,079 --> 00:42:40,960
frameworks use to create really

00:42:39,599 --> 00:42:44,400
performant api

00:42:40,960 --> 00:42:47,359
uh uis let's dig in

00:42:44,400 --> 00:42:47,359
so here's the dom

00:42:47,680 --> 00:42:52,160
we make a copy in javascript called the

00:42:49,520 --> 00:42:52,160
virtual dom

00:42:53,440 --> 00:42:58,240
we do this because touching the dom with

00:42:55,599 --> 00:43:00,000
javascript is computationally expensive

00:42:58,240 --> 00:43:01,839
while performing updates in javascript

00:43:00,000 --> 00:43:03,680
is cheap

00:43:01,839 --> 00:43:04,960
finding the required dom nodes and

00:43:03,680 --> 00:43:06,079
updating them with javascript is

00:43:04,960 --> 00:43:08,560
expensive

00:43:06,079 --> 00:43:10,960
so we batch calls and change the dom all

00:43:08,560 --> 00:43:10,960
at once

00:43:11,520 --> 00:43:14,960
the virtual dom is a lightweight

00:43:12,880 --> 00:43:16,400
javascript object created by this render

00:43:14,960 --> 00:43:18,720
function

00:43:16,400 --> 00:43:19,839
it takes three arguments the element the

00:43:18,720 --> 00:43:23,280
object with data

00:43:19,839 --> 00:43:24,720
props attributes and an array

00:43:23,280 --> 00:43:26,640
and the array is where we pass in

00:43:24,720 --> 00:43:27,839
children which all have these arguments

00:43:26,640 --> 00:43:30,880
too

00:43:27,839 --> 00:43:32,079
here's the text in the div and it's

00:43:30,880 --> 00:43:37,119
child the uh

00:43:32,079 --> 00:43:39,040
the ul and now in turn the allies

00:43:37,119 --> 00:43:41,119
if we need to update the list items we

00:43:39,040 --> 00:43:43,599
do so in javascript

00:43:41,119 --> 00:43:44,640
and only then do we update the actual

00:43:43,599 --> 00:43:46,319
dom

00:43:44,640 --> 00:43:50,160
the virtual dom allows us to make

00:43:46,319 --> 00:43:52,480
performant updates to our uis

00:43:50,160 --> 00:43:53,280
cool but what are the differences

00:43:52,480 --> 00:43:56,000
between

00:43:53,280 --> 00:43:57,760
the virtual dom and something like a

00:43:56,000 --> 00:43:58,400
server-side rendered application would

00:43:57,760 --> 00:44:01,359
say

00:43:58,400 --> 00:44:01,839
nuxed or grid-some um let's cover that

00:44:01,359 --> 00:44:04,160
next

00:44:01,839 --> 00:44:05,040
so what one of the questions that i get

00:44:04,160 --> 00:44:07,440
frequently

00:44:05,040 --> 00:44:08,720
is what is hydration and when we're

00:44:07,440 --> 00:44:09,520
working with some of these meta

00:44:08,720 --> 00:44:11,839
frameworks

00:44:09,520 --> 00:44:12,640
it is done in a slightly different way

00:44:11,839 --> 00:44:14,960
so but

00:44:12,640 --> 00:44:15,839
before we talk about hydration i want to

00:44:14,960 --> 00:44:18,720
first cover

00:44:15,839 --> 00:44:20,079
why it's necessary so why something like

00:44:18,720 --> 00:44:21,760
jam stack

00:44:20,079 --> 00:44:23,440
with a client-side rendering solution

00:44:21,760 --> 00:44:24,960
the server delivers a file without

00:44:23,440 --> 00:44:26,160
content until you fetch everything in

00:44:24,960 --> 00:44:28,079
the browser compiles it

00:44:26,160 --> 00:44:29,520
and you're far away from that server the

00:44:28,079 --> 00:44:32,800
latency for the request

00:44:29,520 --> 00:44:34,640
gets bigger with older server-side

00:44:32,800 --> 00:44:35,680
rendering solutions the server compiles

00:44:34,640 --> 00:44:37,599
and fetches everything

00:44:35,680 --> 00:44:38,960
builds the web page and delivers a fully

00:44:37,599 --> 00:44:42,560
populated html

00:44:38,960 --> 00:44:42,560
page that's much faster

00:44:43,520 --> 00:44:46,640
however every time you navigate to a new

00:44:45,280 --> 00:44:48,400
route the server has to do it all over

00:44:46,640 --> 00:44:49,119
again it has to compile infect it and

00:44:48,400 --> 00:44:50,960
deliver it

00:44:49,119 --> 00:44:53,920
this process delays the load sometimes

00:44:50,960 --> 00:44:53,920
by whole seconds

00:44:55,440 --> 00:44:58,800
recently an approach called jamstack has

00:44:57,200 --> 00:44:59,280
become popular which addresses both

00:44:58,800 --> 00:45:00,800
issues

00:44:59,280 --> 00:45:02,800
we build the whole site and deploy the

00:45:00,800 --> 00:45:04,560
content to cdns which means it's

00:45:02,800 --> 00:45:06,240
geo-replicated around the globe

00:45:04,560 --> 00:45:07,839
we never go back to a server on

00:45:06,240 --> 00:45:09,520
additional requests

00:45:07,839 --> 00:45:11,359
we call it jam stack and not static

00:45:09,520 --> 00:45:13,520
because it extends beyond static

00:45:11,359 --> 00:45:15,520
we can make the page dynamic with api

00:45:13,520 --> 00:45:19,200
calls or server list functions

00:45:15,520 --> 00:45:21,440
and the user can use it right away

00:45:19,200 --> 00:45:23,200
what's more because there's no server

00:45:21,440 --> 00:45:25,839
involved there are fewer attack

00:45:23,200 --> 00:45:29,040
vectors that makes jam stack really

00:45:25,839 --> 00:45:29,040
performant and secure

00:45:30,079 --> 00:45:36,079
so when we're using jam sac premises

00:45:33,599 --> 00:45:37,280
and also things like next and grid sum

00:45:36,079 --> 00:45:39,839
that are pre-rendered

00:45:37,280 --> 00:45:42,079
not only are we having a single point of

00:45:39,839 --> 00:45:43,520
uh not only are we not having a single

00:45:42,079 --> 00:45:44,960
point of origin server

00:45:43,520 --> 00:45:46,640
we don't have to make subsequent

00:45:44,960 --> 00:45:48,160
requests and it has

00:45:46,640 --> 00:45:50,160
better security because we don't have

00:45:48,160 --> 00:45:53,760
access to that single point of origin

00:45:50,160 --> 00:45:55,680
in the server so that in turn

00:45:53,760 --> 00:45:57,839
gives us amazing performance and better

00:45:55,680 --> 00:45:59,920
security so

00:45:57,839 --> 00:46:01,520
if it's statically rendered here's the

00:45:59,920 --> 00:46:03,920
part where i get that question

00:46:01,520 --> 00:46:05,359
about that hydration right if it's

00:46:03,920 --> 00:46:06,800
statically rendered and everything is

00:46:05,359 --> 00:46:08,560
just rendered on the page

00:46:06,800 --> 00:46:11,440
how do you actually interact with it and

00:46:08,560 --> 00:46:13,359
that's where hydration comes in

00:46:11,440 --> 00:46:17,200
it can speed up performance to initially

00:46:13,359 --> 00:46:18,880
serve raw html and css

00:46:17,200 --> 00:46:22,240
we can do this by server-side rendering

00:46:18,880 --> 00:46:23,839
an app and delivering it statically

00:46:22,240 --> 00:46:25,680
after it's been served view needs to

00:46:23,839 --> 00:46:27,040
take over some of the elements that are

00:46:25,680 --> 00:46:30,240
dynamic

00:46:27,040 --> 00:46:30,240
this is called hydration

00:46:31,440 --> 00:46:34,960
so since the market markup has been

00:46:33,280 --> 00:46:36,480
rendered we don't throw it away and

00:46:34,960 --> 00:46:38,800
recreate recreate it

00:46:36,480 --> 00:46:40,640
instead we want to hydrate the dom just

00:46:38,800 --> 00:46:42,560
the pieces that are interactive and make

00:46:40,640 --> 00:46:44,160
those interactive here the button can

00:46:42,560 --> 00:46:46,800
now respond to changes

00:46:44,160 --> 00:46:48,000
and we can add to the cart and hydration

00:46:46,800 --> 00:46:50,319
allows us to create

00:46:48,000 --> 00:46:52,480
fast and secure sites and still have a

00:46:50,319 --> 00:46:54,720
reactive ui

00:46:52,480 --> 00:46:56,000
cool so with this these approaches we

00:46:54,720 --> 00:46:57,680
can pre-build and pre-render

00:46:56,000 --> 00:46:59,760
our applications while still serving

00:46:57,680 --> 00:47:03,040
dynamic content

00:46:59,760 --> 00:47:06,160
we learned a lot in what 20 minutes

00:47:03,040 --> 00:47:08,720
we covered how reactivity works how view

00:47:06,160 --> 00:47:10,960
3 uses proxies how watchers work in view

00:47:08,720 --> 00:47:13,359
3 how the virtual dom works in

00:47:10,960 --> 00:47:15,599
u3 and how and why next and gridson are

00:47:13,359 --> 00:47:16,160
you using pre-rendered content and how

00:47:15,599 --> 00:47:18,800
they then

00:47:16,160 --> 00:47:20,480
hydrate the dom that's fantastic we now

00:47:18,800 --> 00:47:21,119
know so much and our boundaries are

00:47:20,480 --> 00:47:23,040
endless

00:47:21,119 --> 00:47:24,640
so if you ever need to access these

00:47:23,040 --> 00:47:26,640
materials to review

00:47:24,640 --> 00:47:28,559
all of the materials are open source on

00:47:26,640 --> 00:47:30,720
my github at this url

00:47:28,559 --> 00:47:31,599
and all of the slides and the code pens

00:47:30,720 --> 00:47:33,200
so that you can

00:47:31,599 --> 00:47:35,680
explore all of the code and all of the

00:47:33,200 --> 00:47:37,280
animations but they are also in the view

00:47:35,680 --> 00:47:37,680
docs i mentioned i'm on the viewport

00:47:37,280 --> 00:47:40,160
team

00:47:37,680 --> 00:47:41,200
so all of this explanation also list

00:47:40,160 --> 00:47:44,079
lives in the new

00:47:41,200 --> 00:47:46,240
reactivity system are in the reactivity

00:47:44,079 --> 00:47:47,839
section of our brand new documentation

00:47:46,240 --> 00:47:50,640
for the view three docs

00:47:47,839 --> 00:47:52,640
so now can you not only build performant

00:47:50,640 --> 00:47:54,880
and beautiful experiences on the web

00:47:52,640 --> 00:47:56,640
you understand how all of these reactive

00:47:54,880 --> 00:47:58,079
premises and concepts are helping keep

00:47:56,640 --> 00:48:01,040
your users focused

00:47:58,079 --> 00:48:01,599
on task and enabling them to have super

00:48:01,040 --> 00:48:03,040
powers

00:48:01,599 --> 00:48:05,359
while they're enabling well while

00:48:03,040 --> 00:48:08,640
they're traversing your application

00:48:05,359 --> 00:48:09,839
thank you okay uh

00:48:08,640 --> 00:48:11,760
i also want to take an issue with

00:48:09,839 --> 00:48:13,119
something todd said he said that

00:48:11,760 --> 00:48:15,680
licensing isn't

00:48:13,119 --> 00:48:16,319
like the coolest thing i i totally

00:48:15,680 --> 00:48:20,079
disagree

00:48:16,319 --> 00:48:22,240
licensing is is and has been

00:48:20,079 --> 00:48:23,119
a fundamental part of my my life and

00:48:22,240 --> 00:48:26,240
career

00:48:23,119 --> 00:48:28,000
and i i love software licenses i even

00:48:26,240 --> 00:48:29,920
even commercial ones i

00:48:28,000 --> 00:48:31,359
it's it's i used to give this talk about

00:48:29,920 --> 00:48:33,920
how to read a software license

00:48:31,359 --> 00:48:36,240
um and it's a super fun talk and and

00:48:33,920 --> 00:48:38,319
maybe i'll i'll re-give it

00:48:36,240 --> 00:48:41,119
seven years from now uh the next time i

00:48:38,319 --> 00:48:41,119
i speak

00:48:41,359 --> 00:48:46,000
okay uh so i also want to thank angie

00:48:44,640 --> 00:48:48,000
sarah and martin i couldn't have asked

00:48:46,000 --> 00:48:50,400
for a better cohort of keynote speakers

00:48:48,000 --> 00:48:53,280
it was really great listening to y'all

00:48:50,400 --> 00:48:53,920
um and and yeah so let's get started so

00:48:53,280 --> 00:48:55,760
first of all

00:48:53,920 --> 00:48:57,599
before i get into the meat of the talk i

00:48:55,760 --> 00:49:01,440
like to actually lead my

00:48:57,599 --> 00:49:02,880
uh speeches with

00:49:01,440 --> 00:49:04,720
well should i be paying attention to q

00:49:02,880 --> 00:49:07,680
and chat no it blinks too much

00:49:04,720 --> 00:49:09,520
um i like to leave my speeches uh with

00:49:07,680 --> 00:49:11,280
the most recent release of open source

00:49:09,520 --> 00:49:13,680
software from alphabet

00:49:11,280 --> 00:49:14,480
so uh just 14 hours ago our verily

00:49:13,680 --> 00:49:16,720
division

00:49:14,480 --> 00:49:18,160
released a clinical trial simulation

00:49:16,720 --> 00:49:20,800
tool called medici

00:49:18,160 --> 00:49:22,240
so if you're currently planning a

00:49:20,800 --> 00:49:25,440
clinical trial for a

00:49:22,240 --> 00:49:28,160
vaccine for a you know a pandemic

00:49:25,440 --> 00:49:29,119
or something they put some really neat

00:49:28,160 --> 00:49:31,680
work into

00:49:29,119 --> 00:49:32,400
a set of jupiter notebooks and tools for

00:49:31,680 --> 00:49:35,119
basically

00:49:32,400 --> 00:49:36,480
simulating a clinical trial and for

00:49:35,119 --> 00:49:38,079
planning a clinical trial

00:49:36,480 --> 00:49:40,400
so check it out if you're interested in

00:49:38,079 --> 00:49:41,200
such things i'll paste a link in the

00:49:40,400 --> 00:49:43,599
chat

00:49:41,200 --> 00:49:44,640
it's it's on github under verily life

00:49:43,599 --> 00:49:46,640
sciences

00:49:44,640 --> 00:49:48,319
and metas so and it's under the bsd

00:49:46,640 --> 00:49:51,599
license so

00:49:48,319 --> 00:49:54,480
what about licenses um so

00:49:51,599 --> 00:49:56,079
uh i'm going to talk about open source

00:49:54,480 --> 00:49:57,520
licenses and why it's really important

00:49:56,079 --> 00:50:00,559
that we keep them the focal point

00:49:57,520 --> 00:50:01,680
of what we do in open source and i know

00:50:00,559 --> 00:50:03,040
you're thinking

00:50:01,680 --> 00:50:05,839
i'm at an open source conference i

00:50:03,040 --> 00:50:08,160
already like and no open source licenses

00:50:05,839 --> 00:50:08,880
but i like to remind people about the

00:50:08,160 --> 00:50:11,359
power

00:50:08,880 --> 00:50:12,720
that these licenses have to do so much

00:50:11,359 --> 00:50:15,119
more than just

00:50:12,720 --> 00:50:16,800
let us release some code uh or put a

00:50:15,119 --> 00:50:18,880
lens of neutrality on code

00:50:16,800 --> 00:50:21,280
they give us so so much more than that

00:50:18,880 --> 00:50:23,680
and as open source has grown

00:50:21,280 --> 00:50:25,680
and been normalized in companies and the

00:50:23,680 --> 00:50:28,160
rest and in how developers work

00:50:25,680 --> 00:50:30,240
i think we've sort of forgotten how deep

00:50:28,160 --> 00:50:31,520
the freedoms offered by these licenses

00:50:30,240 --> 00:50:35,280
truly

00:50:31,520 --> 00:50:36,960
are and how far they go so

00:50:35,280 --> 00:50:38,559
what makes open source really special

00:50:36,960 --> 00:50:40,000
when you compare to like commercial

00:50:38,559 --> 00:50:43,119
licensing or whatever

00:50:40,000 --> 00:50:44,880
is how we get to work with each other

00:50:43,119 --> 00:50:47,040
so i've been at google for about 16

00:50:44,880 --> 00:50:48,160
years now and people ask me is google

00:50:47,040 --> 00:50:48,800
still doing the open source thing and

00:50:48,160 --> 00:50:51,200
i'm like

00:50:48,800 --> 00:50:53,040
well yeah absolutely open source has

00:50:51,200 --> 00:50:53,599
been part of google since the very very

00:50:53,040 --> 00:50:55,440
beginning

00:50:53,599 --> 00:50:57,280
and one of the reasons i have always

00:50:55,440 --> 00:50:58,960
returned to

00:50:57,280 --> 00:51:01,280
open source is the primary part of my

00:50:58,960 --> 00:51:03,839
job is that

00:51:01,280 --> 00:51:05,119
you know i really like to return to open

00:51:03,839 --> 00:51:07,119
source people

00:51:05,119 --> 00:51:08,400
i like people who make free and open

00:51:07,119 --> 00:51:10,240
source software so

00:51:08,400 --> 00:51:11,839
much they're people who have a will to

00:51:10,240 --> 00:51:13,920
make things better for everyone through

00:51:11,839 --> 00:51:15,040
software and and through computing and i

00:51:13,920 --> 00:51:15,760
think that's really special and it's

00:51:15,040 --> 00:51:17,119
something that i've

00:51:15,760 --> 00:51:19,200
wanted to be around and i keep being

00:51:17,119 --> 00:51:22,559
around and have been around for

00:51:19,200 --> 00:51:24,960
my entire career in in in computer

00:51:22,559 --> 00:51:26,640
science

00:51:24,960 --> 00:51:29,200
and the thing that lets us work together

00:51:26,640 --> 00:51:31,280
and what lets us build software

00:51:29,200 --> 00:51:32,800
are the licenses and that's why when i

00:51:31,280 --> 00:51:34,400
think of open source i always like

00:51:32,800 --> 00:51:37,839
whenever i see an open source

00:51:34,400 --> 00:51:40,160
news story or or a release on you know

00:51:37,839 --> 00:51:41,359
pick your favorite reddit hacker news

00:51:40,160 --> 00:51:43,359
whatever it might be

00:51:41,359 --> 00:51:45,359
or on twitter i always go okay but what

00:51:43,359 --> 00:51:48,400
license right

00:51:45,359 --> 00:51:50,400
so because the license tells me what i

00:51:48,400 --> 00:51:51,920
can do with this code now

00:51:50,400 --> 00:51:54,000
right what i don't have to ask

00:51:51,920 --> 00:51:55,440
permission to do so one of the first

00:51:54,000 --> 00:51:57,119
things i was asked to do at google when

00:51:55,440 --> 00:51:58,880
i got there many many years ago

00:51:57,119 --> 00:52:00,720
was to negotiate a license for a

00:51:58,880 --> 00:52:03,680
computer vision project

00:52:00,720 --> 00:52:04,720
with a large west coast research

00:52:03,680 --> 00:52:07,760
university

00:52:04,720 --> 00:52:10,160
whose name rhymes with mamford

00:52:07,760 --> 00:52:10,800
so we were discussing who gets to use

00:52:10,160 --> 00:52:13,119
what

00:52:10,800 --> 00:52:14,319
how they get to use the software who has

00:52:13,119 --> 00:52:17,599
to give each

00:52:14,319 --> 00:52:20,559
other what kind of resources

00:52:17,599 --> 00:52:21,599
and it took about 11 months before we

00:52:20,559 --> 00:52:23,920
could just start

00:52:21,599 --> 00:52:25,599
coding together and i remember thinking

00:52:23,920 --> 00:52:27,119
the entire time like why

00:52:25,599 --> 00:52:29,280
why are they having the open source code

00:52:27,119 --> 00:52:30,960
to this negotiation

00:52:29,280 --> 00:52:33,040
this seems like a huge waste of time if

00:52:30,960 --> 00:52:34,559
we just had an open source

00:52:33,040 --> 00:52:36,559
project that we could just work on

00:52:34,559 --> 00:52:37,920
together we wouldn't have to do any of

00:52:36,559 --> 00:52:38,960
this stuff we wouldn't have to do any of

00:52:37,920 --> 00:52:40,400
this negotiation

00:52:38,960 --> 00:52:42,720
and it wasn't that the negotiation was

00:52:40,400 --> 00:52:45,119
bad or that anyone was a bad person

00:52:42,720 --> 00:52:46,240
it's just open source licenses take all

00:52:45,119 --> 00:52:49,280
this and

00:52:46,240 --> 00:52:50,319
get get gets all this trickiness out of

00:52:49,280 --> 00:52:53,280
the way

00:52:50,319 --> 00:52:54,400
uh so you know i largely concentrate on

00:52:53,280 --> 00:52:56,319
doing just that

00:52:54,400 --> 00:52:57,839
applying open source licenses and open

00:52:56,319 --> 00:53:00,000
sourcing stuff for a living

00:52:57,839 --> 00:53:01,440
and it's also why google loves open

00:53:00,000 --> 00:53:03,119
source software we don't have to

00:53:01,440 --> 00:53:04,160
struggle best through negotiations and

00:53:03,119 --> 00:53:05,839
waste time

00:53:04,160 --> 00:53:08,240
we can just get to work on the things

00:53:05,839 --> 00:53:08,240
that matter

00:53:08,800 --> 00:53:13,599
so open source is pretty popular now

00:53:11,680 --> 00:53:14,000
right and i'm really happy that it's

00:53:13,599 --> 00:53:16,400
become

00:53:14,000 --> 00:53:17,599
so normalized uh in the world of

00:53:16,400 --> 00:53:19,280
software development one of the great

00:53:17,599 --> 00:53:20,880
things about open source licenses

00:53:19,280 --> 00:53:22,319
is they tell you exactly what they mean

00:53:20,880 --> 00:53:24,480
so when i see an apache

00:53:22,319 --> 00:53:26,400
on a project everything i need to know

00:53:24,480 --> 00:53:28,319
about that is is right there in the

00:53:26,400 --> 00:53:29,839
license i know how i can use it i can

00:53:28,319 --> 00:53:31,040
how i can modify it out what i have to

00:53:29,839 --> 00:53:32,880
do to distribute it

00:53:31,040 --> 00:53:34,800
and and everyone else has the same

00:53:32,880 --> 00:53:35,839
understanding for for these prominent

00:53:34,800 --> 00:53:38,000
licenses

00:53:35,839 --> 00:53:39,680
and it's really important it's why i'm a

00:53:38,000 --> 00:53:40,880
huge believer in the democracy software

00:53:39,680 --> 00:53:42,960
guidelines and the open source

00:53:40,880 --> 00:53:45,200
definition and

00:53:42,960 --> 00:53:47,520
because they really mean something to me

00:53:45,200 --> 00:53:50,480
but more importantly it's something that

00:53:47,520 --> 00:53:51,520
belongs to all of us so there are other

00:53:50,480 --> 00:53:53,839
licenses out there

00:53:51,520 --> 00:53:55,920
right and they introduce things like you

00:53:53,839 --> 00:53:57,280
know reselling fees or restrictions on

00:53:55,920 --> 00:53:59,359
cloud providers and all the rest

00:53:57,280 --> 00:54:01,200
and they're not wrong or bad or evil or

00:53:59,359 --> 00:54:04,240
anything it's not open source

00:54:01,200 --> 00:54:04,960
so when i say when we say an open source

00:54:04,240 --> 00:54:05,920
project

00:54:04,960 --> 00:54:07,920
i think it's important that we're

00:54:05,920 --> 00:54:09,440
talking about real open source software

00:54:07,920 --> 00:54:10,720
covered by a real open source license

00:54:09,440 --> 00:54:11,839
that follow the guidelines from the open

00:54:10,720 --> 00:54:13,760
source initiative

00:54:11,839 --> 00:54:15,040
and the open source definition and these

00:54:13,760 --> 00:54:16,880
are the guidelines that help us work

00:54:15,040 --> 00:54:18,400
together

00:54:16,880 --> 00:54:20,240
so one of the things about doing open

00:54:18,400 --> 00:54:21,920
source for a really long time

00:54:20,240 --> 00:54:24,319
is you kind of start noticing that open

00:54:21,920 --> 00:54:26,160
source has a gatekeeping problem

00:54:24,319 --> 00:54:27,599
and sometimes it's actually pretty

00:54:26,160 --> 00:54:29,440
intentional someone's trying to keep

00:54:27,599 --> 00:54:30,800
other people out of their project they

00:54:29,440 --> 00:54:32,160
just want to do it themselves they don't

00:54:30,800 --> 00:54:33,200
want to talk to anybody else or

00:54:32,160 --> 00:54:35,280
they want to keep it inside their

00:54:33,200 --> 00:54:38,160
company they want to keep control

00:54:35,280 --> 00:54:39,119
over that inside their company but

00:54:38,160 --> 00:54:40,559
sometimes

00:54:39,119 --> 00:54:42,400
it's just we're so used to operating as

00:54:40,559 --> 00:54:45,040
we do we don't realize we're not being

00:54:42,400 --> 00:54:46,720
inviting or welcoming to new new

00:54:45,040 --> 00:54:50,079
developers and new users

00:54:46,720 --> 00:54:51,200
so i i can't say a lot of good things

00:54:50,079 --> 00:54:53,440
about covid

00:54:51,200 --> 00:54:55,760
and the pandemic but one of the things

00:54:53,440 --> 00:54:58,079
that's happened because of covid

00:54:55,760 --> 00:54:59,680
is these events have all gone virtual

00:54:58,079 --> 00:55:00,880
and they've started attracting people

00:54:59,680 --> 00:55:03,440
who are

00:55:00,880 --> 00:55:04,799
not necessarily the people who would

00:55:03,440 --> 00:55:07,920
have come to this

00:55:04,799 --> 00:55:10,799
uh you know conference last year or

00:55:07,920 --> 00:55:12,240
next year so we'll get people from all

00:55:10,799 --> 00:55:13,839
over the world who are able to now

00:55:12,240 --> 00:55:17,359
attend these conferences

00:55:13,839 --> 00:55:20,240
and and so it's kind of a really

00:55:17,359 --> 00:55:21,280
great thing so instead of talking to the

00:55:20,240 --> 00:55:23,599
same

00:55:21,280 --> 00:55:25,839
group of people who maybe i would have

00:55:23,599 --> 00:55:28,319
seen at a given conference

00:55:25,839 --> 00:55:29,119
last year i'm able to talk to people all

00:55:28,319 --> 00:55:33,440
over the world

00:55:29,119 --> 00:55:35,040
and and here's the thing i

00:55:33,440 --> 00:55:38,640
think that open source could be doing a

00:55:35,040 --> 00:55:41,599
lot better a job of welcoming new users

00:55:38,640 --> 00:55:43,200
so we can avoid the unconscious

00:55:41,599 --> 00:55:45,119
discrimination now

00:55:43,200 --> 00:55:46,240
and we can recognize the hostility of

00:55:45,119 --> 00:55:48,160
doing things the way they've always been

00:55:46,240 --> 00:55:50,640
done we can use this time

00:55:48,160 --> 00:55:52,240
to change um things like refusing to

00:55:50,640 --> 00:55:53,839
adopt a code of conduct or

00:55:52,240 --> 00:55:56,240
making an assumption that someone has

00:55:53,839 --> 00:55:56,960
time to search through and scan and

00:55:56,240 --> 00:55:59,839
scroll up a

00:55:56,960 --> 00:56:00,960
you know a like a whole raft of slack

00:55:59,839 --> 00:56:02,960
channels

00:56:00,960 --> 00:56:04,799
right um or assuming that they can work

00:56:02,960 --> 00:56:06,799
in the same time zone

00:56:04,799 --> 00:56:07,920
as as you were within a couple hours of

00:56:06,799 --> 00:56:11,760
your time zone

00:56:07,920 --> 00:56:13,040
um and and now this is how we make

00:56:11,760 --> 00:56:15,760
software better together

00:56:13,040 --> 00:56:17,359
so so my uh my friend brian fitzpatrick

00:56:15,760 --> 00:56:20,240
he has this great metaphor

00:56:17,359 --> 00:56:20,799
about open source projects and groups

00:56:20,240 --> 00:56:24,000
being like

00:56:20,799 --> 00:56:26,079
circles right once you stand in a big

00:56:24,000 --> 00:56:26,720
circle and you focus internally on this

00:56:26,079 --> 00:56:29,440
project

00:56:26,720 --> 00:56:31,119
it's actually really really hard for

00:56:29,440 --> 00:56:34,079
anyone to break the circle

00:56:31,119 --> 00:56:35,440
and join right so you have to sort of

00:56:34,079 --> 00:56:37,359
you have to go pac-man as

00:56:35,440 --> 00:56:38,559
as brian says you have to go pac-man you

00:56:37,359 --> 00:56:40,240
have to open up

00:56:38,559 --> 00:56:41,599
uh your circle so there's an entry point

00:56:40,240 --> 00:56:43,200
for others to join

00:56:41,599 --> 00:56:45,440
so we've run a couple programs at google

00:56:43,200 --> 00:56:47,440
that are about opening these circles

00:56:45,440 --> 00:56:49,040
first is the summer of code and the

00:56:47,440 --> 00:56:50,319
second is the season of docs

00:56:49,040 --> 00:56:51,920
they both give people who don't

00:56:50,319 --> 00:56:53,760
traditionally work on open source offer

00:56:51,920 --> 00:56:56,000
an opportunity to contribute upstream

00:56:53,760 --> 00:56:58,000
to learn and get involved in a project

00:56:56,000 --> 00:56:59,520
in the last 15 years we've had 15 000

00:56:58,000 --> 00:57:01,119
students from more than 100 countries

00:56:59,520 --> 00:57:02,240
participate in the summer of code and

00:57:01,119 --> 00:57:05,200
they've contributed more to

00:57:02,240 --> 00:57:06,799
680 projects and we're in our second

00:57:05,200 --> 00:57:07,920
year of the season of docs and that's

00:57:06,799 --> 00:57:09,760
mentoring 80

00:57:07,920 --> 00:57:11,440
technical writers this year and they

00:57:09,760 --> 00:57:13,280
started with 44 last year

00:57:11,440 --> 00:57:14,480
so we shouldn't stop there though

00:57:13,280 --> 00:57:16,079
everyone should be thinking about how

00:57:14,480 --> 00:57:17,200
their projects can bring in new users

00:57:16,079 --> 00:57:19,040
and contributors

00:57:17,200 --> 00:57:20,640
you know uh sarah was talking about

00:57:19,040 --> 00:57:22,960
vue.js one of the things

00:57:20,640 --> 00:57:24,319
so i i make kind of fun of javascript

00:57:22,960 --> 00:57:25,760
for being very fashionable and having

00:57:24,319 --> 00:57:27,200
lots of frameworks and

00:57:25,760 --> 00:57:29,200
and all the rest but the thing about

00:57:27,200 --> 00:57:31,119
javascript is they're so

00:57:29,200 --> 00:57:32,640
welcoming to new developers and new

00:57:31,119 --> 00:57:35,440
users and it's so

00:57:32,640 --> 00:57:36,000
wonderful to see it and then it's

00:57:35,440 --> 00:57:39,200
something

00:57:36,000 --> 00:57:40,480
that folks like sarah should be super

00:57:39,200 --> 00:57:42,880
proud of right

00:57:40,480 --> 00:57:44,799
um anyways so i just wanted to point out

00:57:42,880 --> 00:57:45,359
we should be wary about how people want

00:57:44,799 --> 00:57:46,720
to take

00:57:45,359 --> 00:57:48,640
this amazing thing with yours open

00:57:46,720 --> 00:57:50,240
source and close it up so

00:57:48,640 --> 00:57:52,559
they'll take things not covered by the

00:57:50,240 --> 00:57:54,480
license and use that for control

00:57:52,559 --> 00:57:56,000
and to add additional restrictions on

00:57:54,480 --> 00:57:58,000
their open source projects

00:57:56,000 --> 00:57:59,599
like uh you know for a long time patents

00:57:58,000 --> 00:58:01,920
weren't even mentioned in most licenses

00:57:59,599 --> 00:58:03,839
and now they are

00:58:01,920 --> 00:58:05,280
but one thing that most licenses don't

00:58:03,839 --> 00:58:07,680
address is trademarks

00:58:05,280 --> 00:58:09,119
so let me give you some context uh last

00:58:07,680 --> 00:58:11,680
year alone

00:58:09,119 --> 00:58:13,200
googlers opened more than 150 000 pull

00:58:11,680 --> 00:58:14,799
requests on more than 70 000

00:58:13,200 --> 00:58:16,240
repositories on github

00:58:14,799 --> 00:58:18,160
it doesn't even count the thousands of

00:58:16,240 --> 00:58:18,880
other repositories we work in outside of

00:58:18,160 --> 00:58:20,160
github

00:58:18,880 --> 00:58:22,640
where we host major projects like

00:58:20,160 --> 00:58:24,000
android and chromium now that's a lot of

00:58:22,640 --> 00:58:25,760
open source contributions

00:58:24,000 --> 00:58:27,440
and because of that sheer size we tend

00:58:25,760 --> 00:58:30,160
to hit problems

00:58:27,440 --> 00:58:32,079
in open source faster than many in our

00:58:30,160 --> 00:58:33,839
office our open source programs office

00:58:32,079 --> 00:58:35,760
we get to use these experiences to help

00:58:33,839 --> 00:58:38,240
everyone in the open source community

00:58:35,760 --> 00:58:39,119
as well as google and with trademarks

00:58:38,240 --> 00:58:40,720
the problem we hit

00:58:39,119 --> 00:58:42,640
is that people shipping the software

00:58:40,720 --> 00:58:43,599
they need explicit permission to use the

00:58:42,640 --> 00:58:44,960
trademarks

00:58:43,599 --> 00:58:46,640
and this is an unaddressed problem in

00:58:44,960 --> 00:58:48,079
the licenses so

00:58:46,640 --> 00:58:49,440
we recently got together with some key

00:58:48,079 --> 00:58:50,880
open source contributors and computer

00:58:49,440 --> 00:58:51,599
scientists to create the open usage

00:58:50,880 --> 00:58:54,160
commons

00:58:51,599 --> 00:58:55,680
which which is working on creating uh

00:58:54,160 --> 00:58:57,680
trademark guidelines that conform to the

00:58:55,680 --> 00:58:59,760
open source definition

00:58:57,680 --> 00:59:02,960
so let's ask a question how can you tell

00:58:59,760 --> 00:59:05,920
if a project is really open source

00:59:02,960 --> 00:59:07,200
so uh let's talk about forking one of

00:59:05,920 --> 00:59:08,480
the most powerful things about open

00:59:07,200 --> 00:59:11,359
source licenses

00:59:08,480 --> 00:59:13,359
the real ones and how you can tell a

00:59:11,359 --> 00:59:15,680
project is actually open source

00:59:13,359 --> 00:59:16,559
is you are able to take that software

00:59:15,680 --> 00:59:18,480
fork it

00:59:16,559 --> 00:59:20,240
and go your own way i've heard people

00:59:18,480 --> 00:59:21,599
threaten to fork projects

00:59:20,240 --> 00:59:22,880
people threaten me they're like i'm

00:59:21,599 --> 00:59:23,440
gonna force project if you don't do this

00:59:22,880 --> 00:59:25,520
thing

00:59:23,440 --> 00:59:27,680
and i always respond the exact same way

00:59:25,520 --> 00:59:29,040
i said that sounds fantastic you should

00:59:27,680 --> 00:59:30,640
totally do that

00:59:29,040 --> 00:59:32,079
and it sometimes catches people by

00:59:30,640 --> 00:59:33,760
surprise a lot of

00:59:32,079 --> 00:59:35,200
people have this notion that forks are

00:59:33,760 --> 00:59:37,280
super super negative

00:59:35,200 --> 00:59:39,920
but forks are an incredibly important

00:59:37,280 --> 00:59:41,599
healthy uh part of open source software

00:59:39,920 --> 00:59:43,680
think about it so the way i think about

00:59:41,599 --> 00:59:44,960
this okay is every time you ship

00:59:43,680 --> 00:59:47,599
something to a user

00:59:44,960 --> 00:59:49,040
a customer whatever that's a fork right

00:59:47,599 --> 00:59:50,400
because you're basically

00:59:49,040 --> 00:59:52,319
you're you're putting the flag in the

00:59:50,400 --> 00:59:54,400
ground saying okay we're

00:59:52,319 --> 00:59:55,680
we're going to ship this thing right

00:59:54,400 --> 00:59:56,960
it's off the main trunk it's somewhere

00:59:55,680 --> 00:59:57,520
out there and someone's relying on that

00:59:56,960 --> 00:59:59,200
branch

00:59:57,520 --> 01:00:01,280
right so you just fork software

00:59:59,200 --> 01:00:04,000
congratulations

01:00:01,280 --> 01:00:05,040
and that means you're probably going to

01:00:04,000 --> 01:00:06,960
come up with new features and

01:00:05,040 --> 01:00:08,480
tools to work with that fork and that's

01:00:06,960 --> 01:00:09,680
super neat and here's the great thing

01:00:08,480 --> 01:00:11,760
about open source

01:00:09,680 --> 01:00:13,280
software license is you can do that and

01:00:11,760 --> 01:00:14,880
i think our products become stronger and

01:00:13,280 --> 01:00:16,640
healthier for that innovation

01:00:14,880 --> 01:00:18,160
and it's how we stay relevant with our

01:00:16,640 --> 01:00:19,280
users

01:00:18,160 --> 01:00:20,960
the other reason the forks are not a

01:00:19,280 --> 01:00:22,319
negative end-all be-all is that

01:00:20,960 --> 01:00:23,520
open-source licenses allow these

01:00:22,319 --> 01:00:26,799
projects to come back

01:00:23,520 --> 01:00:27,280
together that they merge the fork back

01:00:26,799 --> 01:00:28,880
in

01:00:27,280 --> 01:00:30,319
so we had this happen with linux kernel

01:00:28,880 --> 01:00:31,440
and android there was a time in

01:00:30,319 --> 01:00:32,880
android's history and

01:00:31,440 --> 01:00:34,559
i know this is going to be super

01:00:32,880 --> 01:00:35,359
shocking to everyone who's ever used a

01:00:34,559 --> 01:00:38,160
cell phone

01:00:35,359 --> 01:00:38,720
where battery life kind of stunk right

01:00:38,160 --> 01:00:41,760
and

01:00:38,720 --> 01:00:44,240
linux and and batteries were in this

01:00:41,760 --> 01:00:46,160
sort of terrible relationship uh android

01:00:44,240 --> 01:00:48,079
needed a way to tell the kernel to tell

01:00:46,160 --> 01:00:50,319
the cpu to mellow out to

01:00:48,079 --> 01:00:51,520
to not come out of the low power states

01:00:50,319 --> 01:00:54,640
too aggressively

01:00:51,520 --> 01:00:56,319
and to use less battery now at the time

01:00:54,640 --> 01:00:57,599
this wasn't actually of much interest in

01:00:56,319 --> 01:00:59,280
the upstream kernel community that was

01:00:57,599 --> 01:01:02,160
largely concerned with server

01:00:59,280 --> 01:01:03,599
workloads um but android users really

01:01:02,160 --> 01:01:05,200
really needed this so we've worked the

01:01:03,599 --> 01:01:06,880
kernel

01:01:05,200 --> 01:01:08,559
and some people were super upset about

01:01:06,880 --> 01:01:10,559
it and i i remember telling them the

01:01:08,559 --> 01:01:12,000
time listen we're going to come back

01:01:10,559 --> 01:01:14,319
together in a couple years

01:01:12,000 --> 01:01:16,000
and we're going to merge the best of

01:01:14,319 --> 01:01:17,040
both worlds and we're going to move on

01:01:16,000 --> 01:01:18,640
from there

01:01:17,040 --> 01:01:20,240
so and that's exactly what happened it

01:01:18,640 --> 01:01:22,240
took about two or three years

01:01:20,240 --> 01:01:23,680
but then wake locks got pulled into a

01:01:22,240 --> 01:01:25,520
new kernel structure that allowed for

01:01:23,680 --> 01:01:28,160
this kind of power management

01:01:25,520 --> 01:01:29,520
and you know because we were able to

01:01:28,160 --> 01:01:32,240
fork the kernel

01:01:29,520 --> 01:01:32,880
and then bring that back into linux we

01:01:32,240 --> 01:01:35,280
now have

01:01:32,880 --> 01:01:36,720
some two and a half billion devices

01:01:35,280 --> 01:01:38,079
running linux and android

01:01:36,720 --> 01:01:39,920
and that's incredibly powerful and that

01:01:38,079 --> 01:01:41,520
was only possible because it's

01:01:39,920 --> 01:01:43,839
really an open source project that you

01:01:41,520 --> 01:01:47,119
can fork and innovate with

01:01:43,839 --> 01:01:48,319
so uh so it's really an honor to be

01:01:47,119 --> 01:01:49,520
talking to you today it's an honor to be

01:01:48,319 --> 01:01:50,799
in the open source community

01:01:49,520 --> 01:01:52,160
and i'm really grateful to be talking to

01:01:50,799 --> 01:01:53,359
you today so if you remember nothing

01:01:52,160 --> 01:01:54,720
else from this talk remember this

01:01:53,359 --> 01:01:56,799
uh the open source license is all the

01:01:54,720 --> 01:01:57,359
permission you need with an open source

01:01:56,799 --> 01:01:59,119
license

01:01:57,359 --> 01:02:00,319
you can build the project you want the

01:01:59,119 --> 01:02:01,440
community you want to be a part of and

01:02:00,319 --> 01:02:03,520
work together with others

01:02:01,440 --> 01:02:07,839
so keep that at the center fork stuff

01:02:03,520 --> 01:02:07,839

YouTube URL: https://www.youtube.com/watch?v=th4i5dQOAnQ


