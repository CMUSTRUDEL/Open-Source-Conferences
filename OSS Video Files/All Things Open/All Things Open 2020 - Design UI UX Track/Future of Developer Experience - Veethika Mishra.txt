Title: Future of Developer Experience - Veethika Mishra
Publication date: 2020-12-17
Playlist: All Things Open 2020 - Design UI UX Track
Description: 
	Presented by: Veethika Mishra, GitLab
Presented at All Things Open 2020 - Design/UI/UX Track

Abstract: As a common practice, developers could only look at all the components of their application together as a flat list. Besides the visual hierarchy, a list also flattens the contextual role and significant factor of the components in the overall application structure. Fragmented probing is the only practical way to understand the relationship between the two components. And due to the broken nature of the probe, the bigger picture is often thrown to the wind. This workflow further inflates the complexity of the already strenuous job of a developer.

Configuration files are widely used in application development. And still, handling the data serialization languages constitutes a very stressful part of a developerâ€™s job. Sometimes a single space mismatch could get code to stop working, and sometimes you have to make a hard choice between complexity in code hierarchy and complexity in file management.

By representing the configuration files and application structure visually, a lot of pressure and distress could be taken away from a developer's job, thereby fostering an innovation centered work environment for them.
Captions: 
	00:00:05,680 --> 00:00:09,760
so

00:00:06,960 --> 00:00:10,240
i mean before i get to myself and what i

00:00:09,760 --> 00:00:13,360
do

00:00:10,240 --> 00:00:16,640
i just want to start this presentation

00:00:13,360 --> 00:00:19,119
on some other note

00:00:16,640 --> 00:00:20,320
this is a screenshot that i had taken

00:00:19,119 --> 00:00:22,480
from the

00:00:20,320 --> 00:00:23,920
stack overflows developer survey for

00:00:22,480 --> 00:00:26,160
this year and

00:00:23,920 --> 00:00:28,080
what you see right in front of you is

00:00:26,160 --> 00:00:30,240
this does statistics that suggest that

00:00:28,080 --> 00:00:31,599
majority of the developers they work for

00:00:30,240 --> 00:00:34,160
longer hours

00:00:31,599 --> 00:00:35,440
than they're supposed to be and i mean

00:00:34,160 --> 00:00:38,000
working for longer hours

00:00:35,440 --> 00:00:40,239
it very obviously and very directly

00:00:38,000 --> 00:00:42,000
implies that

00:00:40,239 --> 00:00:43,760
it has some implications on the working

00:00:42,000 --> 00:00:45,520
environment and even the

00:00:43,760 --> 00:00:47,120
family time that those developers

00:00:45,520 --> 00:00:50,399
managed to take out for

00:00:47,120 --> 00:00:52,239
a decent work-life balance and this does

00:00:50,399 --> 00:00:52,559
not mean a very good picture for all of

00:00:52,239 --> 00:00:54,480
us

00:00:52,559 --> 00:00:56,480
and also certainly hints towards the

00:00:54,480 --> 00:00:58,320
fact that software developers are

00:00:56,480 --> 00:01:00,879
exposed to a very high risk of burnout

00:00:58,320 --> 00:01:02,640
and other mental health hazards and

00:01:00,879 --> 00:01:03,120
industry needs to be paying attention to

00:01:02,640 --> 00:01:05,360
this

00:01:03,120 --> 00:01:08,080
and they need to attend to the mental

00:01:05,360 --> 00:01:12,080
health of software developers um

00:01:08,080 --> 00:01:15,520
and carefully now

00:01:12,080 --> 00:01:17,680
now um yeah i'm vitigamishra uh

00:01:15,520 --> 00:01:19,360
i am a senior product designer working

00:01:17,680 --> 00:01:22,880
with get lab at this moment

00:01:19,360 --> 00:01:25,600
and today um i would be

00:01:22,880 --> 00:01:27,280
uh talking about a few design practices

00:01:25,600 --> 00:01:29,520
wrapped around the topic

00:01:27,280 --> 00:01:31,759
how adopting the approach to graphically

00:01:29,520 --> 00:01:34,079
visualize logical relationships

00:01:31,759 --> 00:01:35,759
in application structures and even

00:01:34,079 --> 00:01:37,280
config files

00:01:35,759 --> 00:01:39,439
it could really help us define the

00:01:37,280 --> 00:01:41,600
future of developer experience

00:01:39,439 --> 00:01:42,960
in a way that takes the stress out of

00:01:41,600 --> 00:01:46,399
the job of

00:01:42,960 --> 00:01:49,280
developers considerably all right so

00:01:46,399 --> 00:01:49,280
let's get started

00:01:50,960 --> 00:01:54,880
now i want to kick off this discussion

00:01:52,799 --> 00:01:57,920
by talking a little about a recipe

00:01:54,880 --> 00:02:00,560
um a recipe for burnout burger to put

00:01:57,920 --> 00:02:04,159
the upcoming topics into

00:02:00,560 --> 00:02:07,520
kind of a perspective uh

00:02:04,159 --> 00:02:10,000
now let's get right into it

00:02:07,520 --> 00:02:12,000
all right uh so the recipe says that we

00:02:10,000 --> 00:02:14,319
start with impostor syndrome

00:02:12,000 --> 00:02:15,760
bread well um luckily that isn't so hard

00:02:14,319 --> 00:02:16,560
to proc here in the software development

00:02:15,760 --> 00:02:18,319
industry

00:02:16,560 --> 00:02:20,080
there's no defined boundary when it

00:02:18,319 --> 00:02:21,680
comes to software development so

00:02:20,080 --> 00:02:23,120
you'd see like hundreds of events

00:02:21,680 --> 00:02:25,680
sprouting from here and there

00:02:23,120 --> 00:02:26,800
uh happening all around you your

00:02:25,680 --> 00:02:28,560
colleagues working on

00:02:26,800 --> 00:02:30,080
uh working through the weekends on their

00:02:28,560 --> 00:02:32,000
personal projects uh

00:02:30,080 --> 00:02:33,200
like really working hard on their side

00:02:32,000 --> 00:02:35,920
projects and

00:02:33,200 --> 00:02:38,000
coming up with very interesting stuff so

00:02:35,920 --> 00:02:40,160
there's just so much to compare with

00:02:38,000 --> 00:02:43,360
i mean there's so much happening around

00:02:40,160 --> 00:02:45,200
uh such great work that people are doing

00:02:43,360 --> 00:02:47,040
and there you are still referring to

00:02:45,200 --> 00:02:50,560
stack overflow for inspiration

00:02:47,040 --> 00:02:51,040
and you're kind of uh left out feeling

00:02:50,560 --> 00:02:53,519
that

00:02:51,040 --> 00:02:56,080
no one else does it it's just you so

00:02:53,519 --> 00:02:58,080
maybe you don't belong here

00:02:56,080 --> 00:02:59,599
and that's the imposter syndrome because

00:02:58,080 --> 00:03:01,760
when others do it they probably don't do

00:02:59,599 --> 00:03:05,120
it in front of you

00:03:01,760 --> 00:03:07,920
the next it says competition salad well

00:03:05,120 --> 00:03:08,879
uh let's have a look at it no death of

00:03:07,920 --> 00:03:10,879
that as well

00:03:08,879 --> 00:03:12,720
so many people are competing so hard to

00:03:10,879 --> 00:03:13,120
stay in the small space of recognition

00:03:12,720 --> 00:03:15,920
that

00:03:13,120 --> 00:03:16,560
the game is getting so intense every day

00:03:15,920 --> 00:03:19,599
and

00:03:16,560 --> 00:03:21,519
it's very simple to get the salad next

00:03:19,599 --> 00:03:25,200
is technical that cheese

00:03:21,519 --> 00:03:28,480
well um you need a mistake uh

00:03:25,200 --> 00:03:30,560
by not being born on time and by the

00:03:28,480 --> 00:03:32,720
time you join the technical uh join the

00:03:30,560 --> 00:03:34,319
team the technical debt had just piled

00:03:32,720 --> 00:03:36,159
up so much that it's so difficult to

00:03:34,319 --> 00:03:38,560
deal with

00:03:36,159 --> 00:03:40,879
nothing could be done there next it says

00:03:38,560 --> 00:03:42,640
a real developer syndrome patty

00:03:40,879 --> 00:03:44,239
well let's have a look at that as well

00:03:42,640 --> 00:03:45,920
um

00:03:44,239 --> 00:03:47,280
let's see what where that that could be

00:03:45,920 --> 00:03:49,200
sourced from uh

00:03:47,280 --> 00:03:51,120
now there might be some help available

00:03:49,200 --> 00:03:53,040
but people are around you

00:03:51,120 --> 00:03:55,280
you they are setting kind of standards

00:03:53,040 --> 00:03:56,959
that even if there is help available

00:03:55,280 --> 00:03:59,360
this is the kind of help that you should

00:03:56,959 --> 00:04:01,200
expect accept and this is what you

00:03:59,360 --> 00:04:04,720
should accept

00:04:01,200 --> 00:04:06,640
so they also uh tell you that what fits

00:04:04,720 --> 00:04:08,159
the rank of a real developer and

00:04:06,640 --> 00:04:09,920
otherwise for example

00:04:08,159 --> 00:04:11,599
real developers are too cool for the

00:04:09,920 --> 00:04:12,400
latest software development practices

00:04:11,599 --> 00:04:14,560
where they're

00:04:12,400 --> 00:04:16,799
skilled enough they are very skilled

00:04:14,560 --> 00:04:19,519
with the cli with their codes that they

00:04:16,799 --> 00:04:22,880
don't really need those uh

00:04:19,519 --> 00:04:26,080
upcoming uh practices to ease their job

00:04:22,880 --> 00:04:27,040
it's not for them and i mean if

00:04:26,080 --> 00:04:28,880
everything

00:04:27,040 --> 00:04:30,800
listed here was not hard enough just

00:04:28,880 --> 00:04:33,360
sprinkle little i mean

00:04:30,800 --> 00:04:35,360
put a lettuce of evolving tech for extra

00:04:33,360 --> 00:04:37,360
crunch

00:04:35,360 --> 00:04:39,360
if everything mentioned here was wasn't

00:04:37,360 --> 00:04:39,680
good enough technology keeps on evolving

00:04:39,360 --> 00:04:41,919
at

00:04:39,680 --> 00:04:43,840
lightning speed every fortnight you'd

00:04:41,919 --> 00:04:45,680
see a new framework being released new

00:04:43,840 --> 00:04:46,080
languages coming into picture the trend

00:04:45,680 --> 00:04:49,680
just

00:04:46,080 --> 00:04:52,880
it just keeps shifting so fast and

00:04:49,680 --> 00:04:56,960
like every day it gets really difficult

00:04:52,880 --> 00:04:59,040
to keep a track

00:04:56,960 --> 00:05:01,840
but i mean not everything is going

00:04:59,040 --> 00:05:04,080
unnoticed slowly this culture is kind uh

00:05:01,840 --> 00:05:05,600
kind of seeping in into this uh software

00:05:04,080 --> 00:05:06,400
development industry like people have

00:05:05,600 --> 00:05:08,960
started to take

00:05:06,400 --> 00:05:10,639
note of all of these problems um and

00:05:08,960 --> 00:05:12,560
developers they're getting conscious by

00:05:10,639 --> 00:05:13,039
each day and their perspective is kind

00:05:12,560 --> 00:05:15,360
of

00:05:13,039 --> 00:05:16,639
shifting the shift is slow but it's

00:05:15,360 --> 00:05:19,759
definitely happening

00:05:16,639 --> 00:05:21,840
and in this uh graph that i have in

00:05:19,759 --> 00:05:23,199
front of you uh this is again from the

00:05:21,840 --> 00:05:25,680
same survey that uh

00:05:23,199 --> 00:05:27,360
stack overflow conducted this year and

00:05:25,680 --> 00:05:29,280
this mostly talks about the most

00:05:27,360 --> 00:05:30,960
important job factors like what

00:05:29,280 --> 00:05:33,120
are people looking for when they're

00:05:30,960 --> 00:05:36,960
applying for jobs what is it that

00:05:33,120 --> 00:05:39,520
kind of helps them make a decision

00:05:36,960 --> 00:05:40,639
to join a company so if you see in the

00:05:39,520 --> 00:05:42,320
list

00:05:40,639 --> 00:05:43,680
i mean languages framework they of

00:05:42,320 --> 00:05:45,840
course they take a precedence because

00:05:43,680 --> 00:05:47,280
that's very closely tied with the job

00:05:45,840 --> 00:05:49,120
but otherwise they take into

00:05:47,280 --> 00:05:50,639
consideration what kind of environment

00:05:49,120 --> 00:05:53,360
they'll be working with

00:05:50,639 --> 00:05:53,840
then if the schedule is flexible enough

00:05:53,360 --> 00:05:56,639
then

00:05:53,840 --> 00:05:57,120
if there's possibly a remote work option

00:05:56,639 --> 00:05:58,639
and

00:05:57,120 --> 00:06:00,240
then there's there comes family

00:05:58,639 --> 00:06:03,680
friendliness

00:06:00,240 --> 00:06:07,440
so we have good hopes for the future

00:06:03,680 --> 00:06:10,560
but let's keep the ball rolling there

00:06:07,440 --> 00:06:12,240
now um taking a look into a day in the

00:06:10,560 --> 00:06:16,000
life of a software developer

00:06:12,240 --> 00:06:16,000
like what does a regular day look like

00:06:17,840 --> 00:06:20,720
them working on codes like this is the

00:06:19,440 --> 00:06:22,560
general screen that they would be

00:06:20,720 --> 00:06:24,479
looking at

00:06:22,560 --> 00:06:26,000
and if they're not looking at this if

00:06:24,479 --> 00:06:27,919
they're not deep into coding they're

00:06:26,000 --> 00:06:30,080
probably into some

00:06:27,919 --> 00:06:32,240
looking at some other interface that

00:06:30,080 --> 00:06:35,199
that's that demands a very high

00:06:32,240 --> 00:06:39,840
cognitive attention from them

00:06:35,199 --> 00:06:42,160
so yeah i mean even uh

00:06:39,840 --> 00:06:44,240
for uh like things which are not

00:06:42,160 --> 00:06:46,240
directly coding related in the job

00:06:44,240 --> 00:06:47,759
they they would probably be looking at

00:06:46,240 --> 00:06:49,680
interfaces which are pretty

00:06:47,759 --> 00:06:51,759
complex and trying to make sense of the

00:06:49,680 --> 00:06:54,319
lists of the different data that they're

00:06:51,759 --> 00:06:54,319
presented

00:06:55,039 --> 00:07:00,240
now since i mentioned config files um

00:06:58,319 --> 00:07:01,440
i mean what role do they have to play

00:07:00,240 --> 00:07:02,880
here

00:07:01,440 --> 00:07:04,960
config files they are the files that

00:07:02,880 --> 00:07:06,639
carry the data to configure parameters

00:07:04,960 --> 00:07:07,919
and some of the settings that needs to

00:07:06,639 --> 00:07:10,560
be taken care of

00:07:07,919 --> 00:07:11,039
when it comes to software applications

00:07:10,560 --> 00:07:12,880
um

00:07:11,039 --> 00:07:14,639
they're used for many purposes and

00:07:12,880 --> 00:07:16,160
there's a chance that even if you're not

00:07:14,639 --> 00:07:19,759
a developer

00:07:16,160 --> 00:07:22,880
you have some time dealt with

00:07:19,759 --> 00:07:23,759
a config file in your life um how to

00:07:22,880 --> 00:07:27,120
recognize

00:07:23,759 --> 00:07:30,960
them um i mean for example if you have

00:07:27,120 --> 00:07:33,280
played around with an xml jason or yum

00:07:30,960 --> 00:07:34,800
so those qualify as configuration files

00:07:33,280 --> 00:07:37,280
and these languages they are data

00:07:34,800 --> 00:07:40,479
serialization languages

00:07:37,280 --> 00:07:42,400
so for images if you take a closer look

00:07:40,479 --> 00:07:44,319
what i've put in the picture at the

00:07:42,400 --> 00:07:47,599
extreme like

00:07:44,319 --> 00:07:49,919
at the back there is a screenshot of xml

00:07:47,599 --> 00:07:51,680
code and if you compare it with

00:07:49,919 --> 00:07:52,800
something that's right after that which

00:07:51,680 --> 00:07:55,120
is json

00:07:52,800 --> 00:07:55,840
it seems pretty complex and json seems

00:07:55,120 --> 00:08:00,000
complex

00:07:55,840 --> 00:08:02,879
when compared to young so i mean

00:08:00,000 --> 00:08:04,560
jason was created so that it's a it's

00:08:02,879 --> 00:08:07,440
it's a more human readable language

00:08:04,560 --> 00:08:10,560
which it kind of is if compared to xml

00:08:07,440 --> 00:08:11,520
but uh there's still the work needs to

00:08:10,560 --> 00:08:13,919
be done there

00:08:11,520 --> 00:08:16,240
and yeah it kind of took care of all of

00:08:13,919 --> 00:08:19,440
those concerns but still if you

00:08:16,240 --> 00:08:21,680
uh maybe just miss a space there

00:08:19,440 --> 00:08:23,759
your configuration is not going to work

00:08:21,680 --> 00:08:25,520
so those trade-offs that you have to

00:08:23,759 --> 00:08:28,319
deal with when working with

00:08:25,520 --> 00:08:29,440
configuration files and these are the

00:08:28,319 --> 00:08:32,320
files that

00:08:29,440 --> 00:08:33,039
i mean they're not just a developer's

00:08:32,320 --> 00:08:35,120
concern

00:08:33,039 --> 00:08:36,560
uh if you're working in an organization

00:08:35,120 --> 00:08:38,839
then there are personas

00:08:36,560 --> 00:08:40,159
other than developers that also

00:08:38,839 --> 00:08:42,479
sometimes

00:08:40,159 --> 00:08:44,000
deal with the config files and the

00:08:42,479 --> 00:08:45,920
reason i

00:08:44,000 --> 00:08:47,920
explicitly mentioned that this could be

00:08:45,920 --> 00:08:51,120
a very good area for

00:08:47,920 --> 00:08:51,920
like using the graphic visualization

00:08:51,120 --> 00:08:55,120
approach to

00:08:51,920 --> 00:08:56,080
because it it makes a lot of sense that

00:08:55,120 --> 00:08:58,240
um

00:08:56,080 --> 00:08:59,920
it would also be used for uh by people

00:08:58,240 --> 00:09:02,959
who are not very sound with uh

00:08:59,920 --> 00:09:06,800
making sense of code so why not

00:09:02,959 --> 00:09:09,440
just also touch upon this

00:09:06,800 --> 00:09:11,600
now i talked about like all of these

00:09:09,440 --> 00:09:13,600
complex interfaces i talk about config

00:09:11,600 --> 00:09:15,279
files there's what are the common

00:09:13,600 --> 00:09:15,839
problems that we see in both of these

00:09:15,279 --> 00:09:18,240
areas

00:09:15,839 --> 00:09:19,839
uh let's take a look at that so first of

00:09:18,240 --> 00:09:20,640
all there's no real-time feedback for

00:09:19,839 --> 00:09:24,160
their actions

00:09:20,640 --> 00:09:27,839
i mean they don't have like an immediate

00:09:24,160 --> 00:09:29,839
uh visual feedback or like

00:09:27,839 --> 00:09:31,760
some affordance that their the action

00:09:29,839 --> 00:09:34,320
that they've performed uh

00:09:31,760 --> 00:09:34,959
like it's true or there hasn't been any

00:09:34,320 --> 00:09:37,920
error

00:09:34,959 --> 00:09:38,720
or anything of that so next is consuming

00:09:37,920 --> 00:09:41,200
information in

00:09:38,720 --> 00:09:41,839
abstract state so i'll again go back to

00:09:41,200 --> 00:09:44,080
this

00:09:41,839 --> 00:09:46,240
uh screen so here you see a list of

00:09:44,080 --> 00:09:49,440
things but there might as well be

00:09:46,240 --> 00:09:51,760
a hierarchy present in this list

00:09:49,440 --> 00:09:52,720
which is very difficult to decipher if

00:09:51,760 --> 00:09:54,959
you uh

00:09:52,720 --> 00:09:56,959
unless like you used all your focus and

00:09:54,959 --> 00:09:59,680
try to understand what's going on there

00:09:56,959 --> 00:10:00,959
so i mean things are presented to users

00:09:59,680 --> 00:10:03,920
in such a flat

00:10:00,959 --> 00:10:04,959
hierarchy and in such an abstract state

00:10:03,920 --> 00:10:07,519
that

00:10:04,959 --> 00:10:09,600
making a concrete sense of it it gets

00:10:07,519 --> 00:10:11,760
really difficult at times

00:10:09,600 --> 00:10:13,680
another thing is data spread across

00:10:11,760 --> 00:10:16,399
pages or even applications

00:10:13,680 --> 00:10:18,000
so um i mean there are companies which

00:10:16,399 --> 00:10:18,399
strategically they do not use a tool

00:10:18,000 --> 00:10:21,519
chain

00:10:18,399 --> 00:10:23,200
because they uh prefer to tie up their

00:10:21,519 --> 00:10:25,040
own stretch of their own experience when

00:10:23,200 --> 00:10:28,079
it comes to software development

00:10:25,040 --> 00:10:28,959
and what that leads to is uh the

00:10:28,079 --> 00:10:32,320
information

00:10:28,959 --> 00:10:33,200
is like a crosswords uh and for various

00:10:32,320 --> 00:10:34,800
pieces of

00:10:33,200 --> 00:10:36,720
information they have to visit various

00:10:34,800 --> 00:10:40,320
applications if not pages

00:10:36,720 --> 00:10:41,360
and it's like all over so uh to weave a

00:10:40,320 --> 00:10:43,680
bigger picture

00:10:41,360 --> 00:10:44,959
and to see everything from a bird's eye

00:10:43,680 --> 00:10:48,720
view it

00:10:44,959 --> 00:10:50,880
it is kind of difficult now

00:10:48,720 --> 00:10:52,720
we talked about all of these problems so

00:10:50,880 --> 00:10:54,880
uh i would also take the liberty of

00:10:52,720 --> 00:10:58,320
proposing a solution here

00:10:54,880 --> 00:10:59,600
i mean uh not an exact solution but

00:10:58,320 --> 00:11:01,600
an approach that we could take in

00:10:59,600 --> 00:11:05,200
simplifying these problems and

00:11:01,600 --> 00:11:08,240
getting ahead with it so

00:11:05,200 --> 00:11:09,920
converting all of the lists and the data

00:11:08,240 --> 00:11:11,920
and the information that's

00:11:09,920 --> 00:11:13,680
fed to developers into something that's

00:11:11,920 --> 00:11:16,160
visually consumable

00:11:13,680 --> 00:11:17,120
that's not as abstract but a concrete

00:11:16,160 --> 00:11:19,279
visual

00:11:17,120 --> 00:11:20,560
representation of what's going on in the

00:11:19,279 --> 00:11:22,560
system

00:11:20,560 --> 00:11:24,959
so that they're able to take decisions

00:11:22,560 --> 00:11:28,320
they're able to take actions on those

00:11:24,959 --> 00:11:31,760
elements with more confidence

00:11:28,320 --> 00:11:34,800
uh it would be really helpful but

00:11:31,760 --> 00:11:35,440
i mean if you you may ask that has that

00:11:34,800 --> 00:11:37,200
ever

00:11:35,440 --> 00:11:38,880
been done has that ever been a

00:11:37,200 --> 00:11:41,760
successful uh

00:11:38,880 --> 00:11:42,959
venture before and it of course it

00:11:41,760 --> 00:11:48,320
definitely has been

00:11:42,959 --> 00:11:50,320
um so many of you would be aware of the

00:11:48,320 --> 00:11:52,320
the long list of visual programming

00:11:50,320 --> 00:11:54,240
languages available right um

00:11:52,320 --> 00:11:56,800
but i am going to touch upon a very

00:11:54,240 --> 00:11:58,639
specific one and talk about the

00:11:56,800 --> 00:12:00,560
philosophies and the principles they

00:11:58,639 --> 00:12:02,720
follow and how we could borrow those

00:12:00,560 --> 00:12:05,839
principles and create something

00:12:02,720 --> 00:12:06,880
equally amazing for a different target

00:12:05,839 --> 00:12:10,079
audience and

00:12:06,880 --> 00:12:14,560
of course so yeah

00:12:10,079 --> 00:12:18,240
let's talk about scratch

00:12:14,560 --> 00:12:19,839
so in scratch uh if you like

00:12:18,240 --> 00:12:22,160
read deeper about scratch and try to

00:12:19,839 --> 00:12:23,680
analyze it you will notice that they are

00:12:22,160 --> 00:12:25,200
specifically following certain

00:12:23,680 --> 00:12:28,320
principles which

00:12:25,200 --> 00:12:28,320
you may also uh

00:12:28,480 --> 00:12:31,600
they're kind of also borrowed from

00:12:30,399 --> 00:12:34,160
another system like

00:12:31,600 --> 00:12:36,480
how lego works but uh they have

00:12:34,160 --> 00:12:39,680
implemented that in such a creative way

00:12:36,480 --> 00:12:41,760
that it really helps

00:12:39,680 --> 00:12:42,720
kids of a certain age to grasp those

00:12:41,760 --> 00:12:45,120
concepts

00:12:42,720 --> 00:12:46,560
easily and like get ahead with the

00:12:45,120 --> 00:12:48,959
learning process

00:12:46,560 --> 00:12:50,880
but yeah talking in terms of umbrella

00:12:48,959 --> 00:12:53,440
terms what are those philosophies

00:12:50,880 --> 00:12:54,240
the first is tinker ability what this

00:12:53,440 --> 00:12:56,880
means is

00:12:54,240 --> 00:12:58,160
uh the interface it invites you it kind

00:12:56,880 --> 00:13:00,399
of uh

00:12:58,160 --> 00:13:02,720
like gives you a playground to uh

00:13:00,399 --> 00:13:04,399
experiment with it gives you cues it

00:13:02,720 --> 00:13:07,839
kind of is suggestive

00:13:04,399 --> 00:13:10,959
in nature it lets you uh it provides you

00:13:07,839 --> 00:13:13,279
a safe place to experiment and play with

00:13:10,959 --> 00:13:15,040
and create something new for example

00:13:13,279 --> 00:13:15,760
there's a lot of affordance here and it

00:13:15,040 --> 00:13:18,880
tells you that

00:13:15,760 --> 00:13:20,560
only an element of a certain kind could

00:13:18,880 --> 00:13:23,040
fit into this slot

00:13:20,560 --> 00:13:23,839
so you would see that okay what are the

00:13:23,040 --> 00:13:25,600
variations

00:13:23,839 --> 00:13:27,519
in that element of a certain kind so

00:13:25,600 --> 00:13:28,880
what new could i do here because you're

00:13:27,519 --> 00:13:30,320
kind of feeling safe that this is not

00:13:28,880 --> 00:13:33,839
going to break

00:13:30,320 --> 00:13:34,399
the next is fail soft i mean in scratch

00:13:33,839 --> 00:13:37,120
what they

00:13:34,399 --> 00:13:39,040
follow is not providing users with an

00:13:37,120 --> 00:13:40,480
error state

00:13:39,040 --> 00:13:42,480
because they don't want to get to the

00:13:40,480 --> 00:13:43,040
state of having an error state to begin

00:13:42,480 --> 00:13:46,079
with

00:13:43,040 --> 00:13:48,000
how they control it um i've put this

00:13:46,079 --> 00:13:50,639
little example of a parameter

00:13:48,000 --> 00:13:52,720
for example uh if if you have to input

00:13:50,639 --> 00:13:55,360
speed it appears as a slider so

00:13:52,720 --> 00:13:56,320
it kind of controls how much you could

00:13:55,360 --> 00:13:58,000
feed into the

00:13:56,320 --> 00:13:59,600
back end so that it doesn't return

00:13:58,000 --> 00:14:01,920
something unexpected

00:13:59,600 --> 00:14:03,600
here you can go beyond the slider you

00:14:01,920 --> 00:14:07,120
can't go below the slider

00:14:03,600 --> 00:14:10,160
so your uh action it's kept in check

00:14:07,120 --> 00:14:11,920
and it ensures that you don't

00:14:10,160 --> 00:14:14,079
fail you don't break something in the

00:14:11,920 --> 00:14:15,760
system and that's another fear among

00:14:14,079 --> 00:14:18,160
developers like they're very fearful of

00:14:15,760 --> 00:14:21,279
breaking things i mean

00:14:18,160 --> 00:14:24,160
i'm not so much into uh coding but like

00:14:21,279 --> 00:14:24,639
now and then when i put some um changes

00:14:24,160 --> 00:14:26,720
on get

00:14:24,639 --> 00:14:28,160
it really i'm so terrified of breaking

00:14:26,720 --> 00:14:30,480
the branches

00:14:28,160 --> 00:14:31,920
so i could kind of relate but i know

00:14:30,480 --> 00:14:34,480
that things are much worse

00:14:31,920 --> 00:14:35,440
on the other side the next is life

00:14:34,480 --> 00:14:39,199
feedback

00:14:35,440 --> 00:14:41,120
uh so scratch is it has a

00:14:39,199 --> 00:14:42,880
live environment so whatever you do

00:14:41,120 --> 00:14:45,839
there you kind of see

00:14:42,880 --> 00:14:47,839
a live feedback on the same screen in a

00:14:45,839 --> 00:14:50,240
certain panel

00:14:47,839 --> 00:14:52,000
now this again i'm not proposing to

00:14:50,240 --> 00:14:53,600
learn the exact solution i mean borrow

00:14:52,000 --> 00:14:54,560
the exact solutions from there but the

00:14:53,600 --> 00:14:57,279
philosophy

00:14:54,560 --> 00:14:58,959
for example if users are provided a good

00:14:57,279 --> 00:15:00,880
affordance and feedback for the

00:14:58,959 --> 00:15:02,639
singular actions they performed even not

00:15:00,880 --> 00:15:05,199
the bad tax actions

00:15:02,639 --> 00:15:06,720
uh they would be assured that they are

00:15:05,199 --> 00:15:07,680
on the right track and they are what

00:15:06,720 --> 00:15:10,839
they're doing is

00:15:07,680 --> 00:15:12,639
uh like they're doing the right things

00:15:10,839 --> 00:15:14,160
there

00:15:12,639 --> 00:15:16,000
the next thing i would want to talk

00:15:14,160 --> 00:15:18,639
about is the wave of no

00:15:16,000 --> 00:15:19,199
and low code now these are the words

00:15:18,639 --> 00:15:22,240
that

00:15:19,199 --> 00:15:24,880
uh you would have heard about a lot

00:15:22,240 --> 00:15:26,639
recently there's a lot of discussion

00:15:24,880 --> 00:15:28,399
going on many companies are

00:15:26,639 --> 00:15:30,639
adopting this practice so what is it all

00:15:28,399 --> 00:15:32,160
about and what i make to

00:15:30,639 --> 00:15:34,160
i want to make very clear from the

00:15:32,160 --> 00:15:35,120
beginning is no code and low code are

00:15:34,160 --> 00:15:36,880
not the same thing

00:15:35,120 --> 00:15:38,160
but i would be using these terms

00:15:36,880 --> 00:15:41,279
together

00:15:38,160 --> 00:15:44,000
only to represent the overlap uh

00:15:41,279 --> 00:15:46,079
in terms of benefits that these uh both

00:15:44,000 --> 00:15:49,519
these philosophies have

00:15:46,079 --> 00:15:51,279
uh yeah and looking at what predictions

00:15:49,519 --> 00:15:53,440
are being made about the no code

00:15:51,279 --> 00:15:55,360
development so forrester predicts that

00:15:53,440 --> 00:15:58,720
no code development platform market

00:15:55,360 --> 00:16:01,839
will grow from 3.8 billion in 2017

00:15:58,720 --> 00:16:03,759
to 21.2 billion by 2022 and this

00:16:01,839 --> 00:16:05,279
is i mean this is what we call

00:16:03,759 --> 00:16:09,440
exponential of course

00:16:05,279 --> 00:16:11,680
um yeah let's see what else is that

00:16:09,440 --> 00:16:12,800
so i want to highlight some bright sides

00:16:11,680 --> 00:16:15,680
of

00:16:12,800 --> 00:16:16,560
no and low code this particular

00:16:15,680 --> 00:16:18,800
screenshot

00:16:16,560 --> 00:16:19,680
jeff that's going on here it's from

00:16:18,800 --> 00:16:22,160
webflow

00:16:19,680 --> 00:16:23,519
many of you would again be aware of this

00:16:22,160 --> 00:16:26,720
it's a platform that

00:16:23,519 --> 00:16:29,680
allows you to create websites and uh

00:16:26,720 --> 00:16:30,959
why is it making such a buzz around is

00:16:29,680 --> 00:16:34,000
even if you have like

00:16:30,959 --> 00:16:36,560
slight knowledge of htmls and css

00:16:34,000 --> 00:16:38,480
it lets you do so much more with or with

00:16:36,560 --> 00:16:38,959
the elements available on the screen

00:16:38,480 --> 00:16:40,959
that

00:16:38,959 --> 00:16:42,160
it kind of magically gives you all the

00:16:40,959 --> 00:16:45,120
power that you would

00:16:42,160 --> 00:16:45,440
otherwise only have if you uh thoroughly

00:16:45,120 --> 00:16:49,040
know

00:16:45,440 --> 00:16:52,079
the javascripts and other languages

00:16:49,040 --> 00:16:54,079
so this really helps you attain a

00:16:52,079 --> 00:16:57,279
certain level of

00:16:54,079 --> 00:16:59,600
i mean get to the next level

00:16:57,279 --> 00:17:02,560
at a much faster speed so it provides

00:16:59,600 --> 00:17:02,560
better agility

00:17:03,199 --> 00:17:06,400
this screen is from voice flow which is

00:17:05,919 --> 00:17:08,720
again

00:17:06,400 --> 00:17:10,880
uh it's an application for creating

00:17:08,720 --> 00:17:14,160
voice based applications

00:17:10,880 --> 00:17:17,120
uh without using any code and if you see

00:17:14,160 --> 00:17:18,799
what it is doing is in terms of

00:17:17,120 --> 00:17:21,120
available interactions it's it's

00:17:18,799 --> 00:17:23,919
surfacing so much to the users that

00:17:21,120 --> 00:17:24,880
it is increasing the discoverability of

00:17:23,919 --> 00:17:27,280
those

00:17:24,880 --> 00:17:29,120
actions that they could take uh in terms

00:17:27,280 --> 00:17:31,200
of uh

00:17:29,120 --> 00:17:33,919
the particular context that they're in

00:17:31,200 --> 00:17:35,760
which if they just rely on the codes

00:17:33,919 --> 00:17:37,919
it might not even occur to them that

00:17:35,760 --> 00:17:39,520
these things are possible

00:17:37,919 --> 00:17:41,600
it might just get too difficult for them

00:17:39,520 --> 00:17:44,640
to you know go to their research

00:17:41,600 --> 00:17:46,240
come back and apply those codes and if

00:17:44,640 --> 00:17:48,080
it doesn't work then again try to you

00:17:46,240 --> 00:17:51,360
know fix it

00:17:48,080 --> 00:17:52,679
uh and all of that so easy to make bulk

00:17:51,360 --> 00:17:54,720
changes because of enhanced

00:17:52,679 --> 00:17:58,160
discoverability is what

00:17:54,720 --> 00:18:01,600
uh knowing look would provide

00:17:58,160 --> 00:18:02,640
next is uh an example from the open chef

00:18:01,600 --> 00:18:03,919
topology view

00:18:02,640 --> 00:18:06,320
this is a project that i was very

00:18:03,919 --> 00:18:09,120
closely uh working on when i was uh

00:18:06,320 --> 00:18:11,280
working with red hat back in time um and

00:18:09,120 --> 00:18:14,400
i especially wanted to point out this

00:18:11,280 --> 00:18:17,440
particular example to highlight how

00:18:14,400 --> 00:18:21,440
this approach of graphical visualization

00:18:17,440 --> 00:18:22,960
can drastically solve the problem of

00:18:21,440 --> 00:18:26,240
dealing with the hierarchy

00:18:22,960 --> 00:18:27,280
and semantic meaning of the logical

00:18:26,240 --> 00:18:28,799
relationships

00:18:27,280 --> 00:18:30,480
between different components in an

00:18:28,799 --> 00:18:31,200
application because an application is

00:18:30,480 --> 00:18:33,200
just

00:18:31,200 --> 00:18:35,760
it it's not just a single entity it's

00:18:33,200 --> 00:18:37,600
made up of so many things together

00:18:35,760 --> 00:18:39,039
and unless you understand what's going

00:18:37,600 --> 00:18:41,039
on there it's get

00:18:39,039 --> 00:18:42,320
so it gets really difficult to make a

00:18:41,039 --> 00:18:44,799
decision like

00:18:42,320 --> 00:18:46,160
what should i do next how should i fix

00:18:44,799 --> 00:18:49,280
it and

00:18:46,160 --> 00:18:51,840
above all to be able to be creative

00:18:49,280 --> 00:18:52,880
with it i mean if you're still like deep

00:18:51,840 --> 00:18:55,200
in this mess of

00:18:52,880 --> 00:18:56,480
solving problems related to how to get

00:18:55,200 --> 00:18:58,799
it working

00:18:56,480 --> 00:19:00,240
how would you ever get to the point of

00:18:58,799 --> 00:19:05,280
making it

00:19:00,240 --> 00:19:05,280
better and uh like more innovative

00:19:07,200 --> 00:19:10,960
and everything that i have just talked

00:19:09,120 --> 00:19:13,919
about it dramatically

00:19:10,960 --> 00:19:15,919
fits into this uh list of metrics that

00:19:13,919 --> 00:19:19,520
surfaced in the state of

00:19:15,919 --> 00:19:21,120
devops of 2019 report so these are the

00:19:19,520 --> 00:19:22,799
metrics that directly affect the

00:19:21,120 --> 00:19:25,520
performance of teams

00:19:22,799 --> 00:19:26,080
and the elite performers were found to

00:19:25,520 --> 00:19:29,840
have

00:19:26,080 --> 00:19:32,480
uh uh these functions like

00:19:29,840 --> 00:19:34,240
uh they were frequent there were more

00:19:32,480 --> 00:19:37,280
frequent code deployments happening

00:19:34,240 --> 00:19:38,559
uh in those teams that were noted as

00:19:37,280 --> 00:19:40,320
elite performance

00:19:38,559 --> 00:19:42,640
and the lead time to from coming to

00:19:40,320 --> 00:19:44,720
deploy it was much faster

00:19:42,640 --> 00:19:46,799
uh time to recover from incidents was

00:19:44,720 --> 00:19:49,840
also faster so all this agility

00:19:46,799 --> 00:19:52,080
how do we attain that how do we enable

00:19:49,840 --> 00:19:54,080
our system to be more agile i know there

00:19:52,080 --> 00:19:57,520
are practices in place i know there are

00:19:54,080 --> 00:19:59,200
uh like this whole agile framework is

00:19:57,520 --> 00:19:59,600
there and there's so many variations of

00:19:59,200 --> 00:20:01,440
it

00:19:59,600 --> 00:20:03,280
companies are experimenting with all the

00:20:01,440 --> 00:20:05,919
variations but

00:20:03,280 --> 00:20:06,799
how do we like through the tools that we

00:20:05,919 --> 00:20:10,159
provide

00:20:06,799 --> 00:20:13,919
uh enhance the agility of our teams

00:20:10,159 --> 00:20:16,960
so definitely going no and low code

00:20:13,919 --> 00:20:19,840
is an option there then comes

00:20:16,960 --> 00:20:21,360
uh seven times lower change failure rate

00:20:19,840 --> 00:20:23,760
again i spoke about

00:20:21,360 --> 00:20:24,960
the approach that scratch follows which

00:20:23,760 --> 00:20:28,640
is failsoft

00:20:24,960 --> 00:20:31,520
so by controlling uh the actions that

00:20:28,640 --> 00:20:33,440
developers could take and helping them

00:20:31,520 --> 00:20:34,559
avoid the situation where there could be

00:20:33,440 --> 00:20:37,280
an error

00:20:34,559 --> 00:20:40,080
and uh helping them avoid failure you're

00:20:37,280 --> 00:20:42,240
saving so much of time there and

00:20:40,080 --> 00:20:43,840
besides saving time you're also kind of

00:20:42,240 --> 00:20:44,880
giving them that kind of mental peace

00:20:43,840 --> 00:20:47,120
that they're looking for

00:20:44,880 --> 00:20:48,320
uh in their jobs they don't have to be

00:20:47,120 --> 00:20:49,919
anxious all the time

00:20:48,320 --> 00:20:51,520
thinking about what might break what

00:20:49,919 --> 00:20:55,280
might say

00:20:51,520 --> 00:20:56,960
and they could in a much more peaceful

00:20:55,280 --> 00:20:59,840
manner they can take better decisions

00:20:56,960 --> 00:20:59,840
and do their jobs

00:21:00,400 --> 00:21:03,440
now those are all very technical and

00:21:02,559 --> 00:21:06,880
very um

00:21:03,440 --> 00:21:09,919
like process oriented

00:21:06,880 --> 00:21:12,080
uh points that i just brought but low

00:21:09,919 --> 00:21:13,919
and no code they have this hidden side

00:21:12,080 --> 00:21:17,039
which is not so much talked about

00:21:13,919 --> 00:21:19,039
um which is inclusivity so right now

00:21:17,039 --> 00:21:20,799
uh to flourish as a software developer

00:21:19,039 --> 00:21:22,720
in the industry you have to be

00:21:20,799 --> 00:21:25,120
a person of a certain temperament

00:21:22,720 --> 00:21:26,960
certain skills and interest

00:21:25,120 --> 00:21:29,200
the expectations they are so intense

00:21:26,960 --> 00:21:30,159
that it only lets a certain population

00:21:29,200 --> 00:21:33,520
qualify

00:21:30,159 --> 00:21:34,960
for the task leaving behind a wide

00:21:33,520 --> 00:21:38,720
population

00:21:34,960 --> 00:21:40,799
with different ability and perspective

00:21:38,720 --> 00:21:43,200
if no good and low good practices take

00:21:40,799 --> 00:21:44,240
over the people who are left out of the

00:21:43,200 --> 00:21:45,600
circle

00:21:44,240 --> 00:21:47,919
they would also get a voice they would

00:21:45,600 --> 00:21:48,400
get become they would get a chance to

00:21:47,919 --> 00:21:51,679
become

00:21:48,400 --> 00:21:52,159
makers they will bring in a diversity of

00:21:51,679 --> 00:21:54,720
thoughts

00:21:52,159 --> 00:21:57,440
and even take away the burden from the

00:21:54,720 --> 00:21:59,200
small diaspora of developers

00:21:57,440 --> 00:22:01,679
that has been crushed under the under

00:21:59,200 --> 00:22:05,520
the burden of expectations today

00:22:01,679 --> 00:22:07,200
so it's it is capable of solving a much

00:22:05,520 --> 00:22:09,760
greater problem than we are seeing at

00:22:07,200 --> 00:22:09,760
this point

00:22:11,440 --> 00:22:16,000
now coming to something that uh i am

00:22:14,400 --> 00:22:18,720
very

00:22:16,000 --> 00:22:19,760
closely associated with so i'm very sure

00:22:18,720 --> 00:22:22,559
um

00:22:19,760 --> 00:22:24,880
that i'm it's known that gitlab is known

00:22:22,559 --> 00:22:26,320
for its inclusive and open practices

00:22:24,880 --> 00:22:29,039
while there are so many parts of the

00:22:26,320 --> 00:22:29,520
entire tool chain that take into account

00:22:29,039 --> 00:22:31,919
uh

00:22:29,520 --> 00:22:32,720
into consideration many of the covered

00:22:31,919 --> 00:22:35,200
concerns

00:22:32,720 --> 00:22:36,720
uh from the previous slides into their

00:22:35,200 --> 00:22:38,960
design practices

00:22:36,720 --> 00:22:40,080
i could only speak for the effort that i

00:22:38,960 --> 00:22:43,120
am closely associated

00:22:40,080 --> 00:22:45,200
with so um i would talk about gitlab ci

00:22:43,120 --> 00:22:48,880
yaml like what's going on there

00:22:45,200 --> 00:22:51,919
now to define our pipelines in gitlab ci

00:22:48,880 --> 00:22:54,559
uh we use uh yamu and

00:22:51,919 --> 00:22:56,400
this is the um this is how it looks i've

00:22:54,559 --> 00:22:57,520
just taken a screenshot for a bash

00:22:56,400 --> 00:23:00,000
pipeline here

00:22:57,520 --> 00:23:01,760
and uh i mean this is what a genetic

00:23:00,000 --> 00:23:04,400
pipeline looks like and

00:23:01,760 --> 00:23:06,159
once you run the pipeline then the

00:23:04,400 --> 00:23:08,240
visualization it kind of looks something

00:23:06,159 --> 00:23:12,320
like this

00:23:08,240 --> 00:23:14,880
so um right now the method to author it

00:23:12,320 --> 00:23:15,360
is it's largely by typing in the yaml

00:23:14,880 --> 00:23:18,720
file

00:23:15,360 --> 00:23:20,720
uh and at the most user length

00:23:18,720 --> 00:23:22,000
may be to identify if there's any break

00:23:20,720 --> 00:23:24,240
in syntax so that

00:23:22,000 --> 00:23:26,080
it doesn't break when you run it and

00:23:24,240 --> 00:23:29,360
then do you try to fix it

00:23:26,080 --> 00:23:32,799
but very recently an effort was taken

00:23:29,360 --> 00:23:34,240
that we started to consider a more

00:23:32,799 --> 00:23:36,000
friendly way of authoring these

00:23:34,240 --> 00:23:38,559
pipelines because

00:23:36,000 --> 00:23:39,360
uh looking at the different personas and

00:23:38,559 --> 00:23:41,279
different

00:23:39,360 --> 00:23:43,360
archetypes that deal with our product

00:23:41,279 --> 00:23:45,760
especially this section of the product

00:23:43,360 --> 00:23:48,159
it is not very strictly constrained to

00:23:45,760 --> 00:23:50,080
the developer persona and

00:23:48,159 --> 00:23:51,279
to make it easier for other personas to

00:23:50,080 --> 00:23:53,120
be able to uh

00:23:51,279 --> 00:23:54,799
come and edit and even author of the

00:23:53,120 --> 00:23:55,919
pipeline someday

00:23:54,799 --> 00:23:58,720
we are trying to take a different

00:23:55,919 --> 00:24:05,279
approach like providing them with a

00:23:58,720 --> 00:24:07,039
different method altogether

00:24:05,279 --> 00:24:09,200
so this is a new direction that we have

00:24:07,039 --> 00:24:12,320
taken um sorry

00:24:09,200 --> 00:24:15,039
yeah um these are the

00:24:12,320 --> 00:24:16,400
uh very far first uh i mean very initial

00:24:15,039 --> 00:24:19,919
steps towards it and

00:24:16,400 --> 00:24:21,360
um i've added a disclaimer that uh it

00:24:19,919 --> 00:24:23,679
these features they are still under

00:24:21,360 --> 00:24:25,039
design and development uh the issues are

00:24:23,679 --> 00:24:26,880
definitely open you can

00:24:25,039 --> 00:24:28,480
go and have a look at those uh and

00:24:26,880 --> 00:24:30,080
there's no commitment that they would be

00:24:28,480 --> 00:24:31,760
implemented in the exact way that i'm

00:24:30,080 --> 00:24:34,559
showing them there might be changes

00:24:31,760 --> 00:24:36,000
might be not um so this is a new

00:24:34,559 --> 00:24:38,000
direction that we are trying to

00:24:36,000 --> 00:24:38,960
introduce a visual builder for our

00:24:38,000 --> 00:24:41,360
pipelines

00:24:38,960 --> 00:24:42,720
and uh what we are also taking into

00:24:41,360 --> 00:24:47,440
consideration is

00:24:42,720 --> 00:24:49,760
uh since there is the hard and fast uh

00:24:47,440 --> 00:24:51,039
i won't say syntax but uh format for

00:24:49,760 --> 00:24:53,279
using yaml files

00:24:51,039 --> 00:24:55,520
so uh just like any other company any

00:24:53,279 --> 00:24:57,760
other product gitlab also has its own uh

00:24:55,520 --> 00:25:01,039
recommendations while uh

00:24:57,760 --> 00:25:04,720
authoring uh pipeline

00:25:01,039 --> 00:25:08,159
so it has features like uh includes

00:25:04,720 --> 00:25:10,559
needs uh needs what it does is it that

00:25:08,159 --> 00:25:11,279
it establishes dependency between two

00:25:10,559 --> 00:25:13,440
jobs

00:25:11,279 --> 00:25:15,520
and there are many more things like

00:25:13,440 --> 00:25:18,799
triggering a downstream pipeline

00:25:15,520 --> 00:25:21,200
or a child pipeline and all of that and

00:25:18,799 --> 00:25:22,799
even though the list is worse it's it's

00:25:21,200 --> 00:25:25,200
a pretty long list

00:25:22,799 --> 00:25:27,520
not everybody's aware of those because

00:25:25,200 --> 00:25:30,640
it's not so easy to discover them and

00:25:27,520 --> 00:25:32,320
if you discover them uh with the current

00:25:30,640 --> 00:25:34,080
practice of going and typing the file

00:25:32,320 --> 00:25:35,039
you have to keep in mind like what

00:25:34,080 --> 00:25:37,760
you've learned

00:25:35,039 --> 00:25:39,120
and uh i mean yeah it's totally up to

00:25:37,760 --> 00:25:42,720
your memory and up to your

00:25:39,120 --> 00:25:45,279
uh ability to look for things

00:25:42,720 --> 00:25:47,279
so with this with the new approach we

00:25:45,279 --> 00:25:50,480
would be surfacing all of those

00:25:47,279 --> 00:25:53,279
superpowers that you provide to uh

00:25:50,480 --> 00:25:54,720
users uh that they could use in their

00:25:53,279 --> 00:25:56,320
pipelines and therefore

00:25:54,720 --> 00:25:58,320
it would help them create something

00:25:56,320 --> 00:26:01,679
better than they used to

00:25:58,320 --> 00:26:05,200
that's the plan and um yeah this is the

00:26:01,679 --> 00:26:05,200
part that we are on right now

00:26:05,520 --> 00:26:11,360
then how would all of this how is it

00:26:08,320 --> 00:26:13,840
going to benefit us uh there's a

00:26:11,360 --> 00:26:15,039
very obvious chain of reaction that's

00:26:13,840 --> 00:26:18,400
going to happen with this

00:26:15,039 --> 00:26:20,159
first of all if uh like

00:26:18,400 --> 00:26:22,559
things are simplified interactions are

00:26:20,159 --> 00:26:24,720
simplified tasks are reduced

00:26:22,559 --> 00:26:26,240
the quotes would be would be of much

00:26:24,720 --> 00:26:29,840
better quality

00:26:26,240 --> 00:26:32,400
as a starter next happy code

00:26:29,840 --> 00:26:32,880
uh happy developers so developers if

00:26:32,400 --> 00:26:34,799
they are

00:26:32,880 --> 00:26:36,080
living stress free they are able to be

00:26:34,799 --> 00:26:37,760
more productive

00:26:36,080 --> 00:26:39,279
they don't have to trade off their

00:26:37,760 --> 00:26:40,799
valuable time that they could

00:26:39,279 --> 00:26:43,440
others otherwise spend with their

00:26:40,799 --> 00:26:46,400
families uh they would be more available

00:26:43,440 --> 00:26:47,279
um for other things for other activities

00:26:46,400 --> 00:26:49,200
and

00:26:47,279 --> 00:26:51,840
they could have a good work-life balance

00:26:49,200 --> 00:26:54,640
they could have a much peaceful

00:26:51,840 --> 00:26:56,559
mind when they're working on their tasks

00:26:54,640 --> 00:26:58,880
and therefore they'll be able to take

00:26:56,559 --> 00:27:00,640
much sensible and much creative

00:26:58,880 --> 00:27:03,679
decisions

00:27:00,640 --> 00:27:05,840
next is i mean everything builds up

00:27:03,679 --> 00:27:07,760
to a high performing business at the end

00:27:05,840 --> 00:27:09,600
of the day if everything is going smooth

00:27:07,760 --> 00:27:14,640
then the business is also doing good

00:27:09,600 --> 00:27:14,640
and the revenue is also going up

00:27:15,279 --> 00:27:19,440
now i would like to end this with the

00:27:17,919 --> 00:27:21,039
note that

00:27:19,440 --> 00:27:23,200
you might not think that programmers are

00:27:21,039 --> 00:27:25,200
artists but programming is an extremely

00:27:23,200 --> 00:27:26,159
creative profession it's a logic based

00:27:25,200 --> 00:27:28,559
creativity

00:27:26,159 --> 00:27:30,720
i'm kind of reinstating this because it

00:27:28,559 --> 00:27:31,600
is not said very often that what

00:27:30,720 --> 00:27:34,159
developers do

00:27:31,600 --> 00:27:34,880
is creative as well their job is

00:27:34,159 --> 00:27:36,320
creative

00:27:34,880 --> 00:27:38,080
and it's high time that through the

00:27:36,320 --> 00:27:41,200
tools that we provide

00:27:38,080 --> 00:27:43,279
them we empower them and we enable them

00:27:41,200 --> 00:27:44,640
to take more creative decisions and be

00:27:43,279 --> 00:27:48,559
uh of

00:27:44,640 --> 00:27:51,039
much higher value to the organization

00:27:48,559 --> 00:27:53,840
that's all i would be happy to take

00:27:51,039 --> 00:27:53,840
questions on this

00:28:01,200 --> 00:28:03,840
all right

00:28:13,360 --> 00:28:19,919
open do these two generate

00:28:16,480 --> 00:28:23,360
code uh sorry

00:28:19,919 --> 00:28:23,760
michael uh can you i think it was very

00:28:23,360 --> 00:28:25,200
uh

00:28:23,760 --> 00:28:27,039
in the middle of the presentation when

00:28:25,200 --> 00:28:28,559
you ask these questions that if these

00:28:27,039 --> 00:28:30,799
tools generate code

00:28:28,559 --> 00:28:33,760
so i'm not very sure which specific

00:28:30,799 --> 00:28:33,760
screen that was

00:28:36,000 --> 00:28:39,440
yeah that's totally true i i very much

00:28:37,840 --> 00:28:42,480
agree that

00:28:39,440 --> 00:28:45,760
how this profession is seen is not

00:28:42,480 --> 00:28:49,600
it's not doing justice to this uh

00:28:45,760 --> 00:28:49,600
whole art of programming

00:28:54,720 --> 00:29:01,279
there seems to be ice bright side

00:28:57,840 --> 00:29:04,799
okay yeah uh i think they do

00:29:01,279 --> 00:29:07,120
because from what i have

00:29:04,799 --> 00:29:08,640
like for webflow i've seen just like

00:29:07,120 --> 00:29:09,200
figma and sketch they also kind of

00:29:08,640 --> 00:29:11,679
generate

00:29:09,200 --> 00:29:13,600
uh code for the designs that we create i

00:29:11,679 --> 00:29:17,120
think webflow does the same

00:29:13,600 --> 00:29:18,960
i'm not so sure about voice flow and

00:29:17,120 --> 00:29:21,679
openshift is for a totally different

00:29:18,960 --> 00:29:21,679
purpose so

00:29:24,720 --> 00:29:29,200
what is the next question uh no code

00:29:27,679 --> 00:29:30,720
local discrete but it seems like a

00:29:29,200 --> 00:29:32,559
trade-off between visibility and actual

00:29:30,720 --> 00:29:35,760
code you write

00:29:32,559 --> 00:29:36,399
so i mean initially the very first

00:29:35,760 --> 00:29:38,640
drafts

00:29:36,399 --> 00:29:40,399
i agree when when this approach is

00:29:38,640 --> 00:29:44,240
adopted it would be limiting

00:29:40,399 --> 00:29:47,679
it wouldn't be uh like the advanced

00:29:44,240 --> 00:29:49,120
and the uh and the users the developers

00:29:47,679 --> 00:29:50,480
who are much fluent with the code they

00:29:49,120 --> 00:29:52,880
won't be happy with it

00:29:50,480 --> 00:29:54,880
but eventually everything evolves and i

00:29:52,880 --> 00:29:57,120
think there would definitely be a time

00:29:54,880 --> 00:29:59,120
when this will be as much capable so

00:29:57,120 --> 00:30:09,840
we should keep that in mind that's

00:29:59,120 --> 00:30:09,840
that's how i think about it

00:30:13,279 --> 00:30:23,840
what else can i answer

00:30:27,840 --> 00:30:30,240
okay

00:30:34,960 --> 00:30:38,159
it was my pleasure i mean you all have

00:30:36,640 --> 00:30:40,799
been a great audience

00:30:38,159 --> 00:30:41,679
and i i expected a lot many more

00:30:40,799 --> 00:30:51,840
questions but

00:30:41,679 --> 00:30:51,840

YouTube URL: https://www.youtube.com/watch?v=qOl7g6SICdU


