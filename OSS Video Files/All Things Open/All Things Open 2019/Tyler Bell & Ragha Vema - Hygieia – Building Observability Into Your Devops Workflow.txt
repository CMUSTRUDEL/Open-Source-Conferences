Title: Tyler Bell & Ragha Vema - Hygieia – Building Observability Into Your Devops Workflow
Publication date: 2019-11-04
Playlist: All Things Open 2019
Description: 
	When building out workflows for your CI/CD pipeline(s), determining the overall health of your automated processes can be quite challenging. DevOps practitioners have learned to add logging analysis tools and a host of other solutions to address observability concerns. When Capital One started its CI/CD journey, we discovered that there weren’t any observability tools that met our needs. So like any open source endeavor, we built our own and then shared it: Hygieia (Link: http://hygieia.github.io/Hygieia/) Today, Hygieia is used by several companies around the world to better track their CI/CD pipelines. Many of these users also contribute code and documentation back to the project.

Hygieia is a single, configurable dashboard that visualizes the health of your entire software delivery pipeline. Hygieia is an Open Source project with an active community that has developed the following key features:

Team Dashboard — monitor things like work items, code repo, builds, quality items (unit tests, security, coverage, etc.) and deployments in one dashboard.
Configurable View — set up the dashboard to display the widgets that matter most to your project.
Real-time Status — monitor quality, productivity, and work in process on a real-time basis within the dashboard.
Executive Dashboard — access an aggregated view of key DevOps metrics.
Gamification — share performance feedback at the widget and team dashboard level by displaying a “star-rating”.
In this talk, we will demonstrate how a platform for observability can help your teams determine the effectiveness of your efforts to “automate all the things” in a CI/CD pipeline.
Captions: 
	00:00:01,480 --> 00:00:11,759
[Music]

00:00:09,440 --> 00:00:13,590
hey folks so just a quick introduction

00:00:11,759 --> 00:00:15,059
my name is Tyler Bell I work with

00:00:13,590 --> 00:00:17,279
Capital One where I've been with their

00:00:15,059 --> 00:00:19,289
open source office for just over two

00:00:17,279 --> 00:00:20,850
years I've had about five years in the

00:00:19,289 --> 00:00:23,369
financial services and technology

00:00:20,850 --> 00:00:25,050
industry prior to that I spent some time

00:00:23,369 --> 00:00:26,460
in engineering and manufacturing that's

00:00:25,050 --> 00:00:27,930
where my education is from my first

00:00:26,460 --> 00:00:30,240
three years professional experience I

00:00:27,930 --> 00:00:31,980
mean speaking with me today

00:00:30,240 --> 00:00:34,559
despite his name not being on the door

00:00:31,980 --> 00:00:35,309
is a Roger Bheema hello good morning

00:00:34,559 --> 00:00:38,219
everyone

00:00:35,309 --> 00:00:40,800
my name is Raghav i'ma I'm look we're at

00:00:38,219 --> 00:00:42,930
Capital One has been on five years of

00:00:40,800 --> 00:00:45,090
joint Capital One and prior to that I

00:00:42,930 --> 00:00:48,899
have been developing software for

00:00:45,090 --> 00:00:52,500
various industries banking financial

00:00:48,899 --> 00:00:54,750
sector automobile royalty sector or so

00:00:52,500 --> 00:00:57,539
I've been developed for all over I don't

00:00:54,750 --> 00:00:59,550
so but yeah the journey with Capital One

00:00:57,539 --> 00:01:04,799
has been really nice because yeah we're

00:00:59,550 --> 00:01:07,710
gonna go in a bit and how many of you

00:01:04,799 --> 00:01:10,920
over here have capital on credit cards

00:01:07,710 --> 00:01:12,590
in your wallet whoo whoo what's your

00:01:10,920 --> 00:01:16,290
wallet that's good

00:01:12,590 --> 00:01:18,360
all right capital on being a credit card

00:01:16,290 --> 00:01:20,520
company and a financial service company

00:01:18,360 --> 00:01:22,590
we deal with a lot of customer counts

00:01:20,520 --> 00:01:22,950
and we have like millions of customer

00:01:22,590 --> 00:01:28,350
data

00:01:22,950 --> 00:01:30,180
I mean accounts and we also do it and we

00:01:28,350 --> 00:01:32,280
have to do it we have to comply with the

00:01:30,180 --> 00:01:34,590
regulator's and we are one of the

00:01:32,280 --> 00:01:38,520
largest digital banks in the United

00:01:34,590 --> 00:01:41,310
States and we started roughly around

00:01:38,520 --> 00:01:43,619
like I mean 25 years is roughly from

00:01:41,310 --> 00:01:46,500
when we went public so considering this

00:01:43,619 --> 00:01:49,500
we consider ourselves to be a start-up

00:01:46,500 --> 00:01:51,390
in the financial sector and our closest

00:01:49,500 --> 00:01:53,810
competitor is like at least 100 years

00:01:51,390 --> 00:01:53,810
old

00:01:59,640 --> 00:02:03,990
and since we consider I mean since we

00:02:02,380 --> 00:02:07,270
are like a start-up in the financial

00:02:03,990 --> 00:02:09,729
industry we consider ourselves with a

00:02:07,270 --> 00:02:14,550
different DNA we build our own software

00:02:09,729 --> 00:02:17,590
we have what 80,000 engineers so and

00:02:14,550 --> 00:02:19,709
when we build a software we focus on

00:02:17,590 --> 00:02:22,510
using the open source technologies

00:02:19,709 --> 00:02:24,520
reason being we don't want to reinvent

00:02:22,510 --> 00:02:27,160
the wheel the open source technologies

00:02:24,520 --> 00:02:29,740
has been used and I'm sure like pretty

00:02:27,160 --> 00:02:30,940
much everybody over here uses open

00:02:29,740 --> 00:02:33,160
source technologies for your development

00:02:30,940 --> 00:02:36,459
can you raising your hand if you don't

00:02:33,160 --> 00:02:41,170
use that's good that's what that's why

00:02:36,459 --> 00:02:42,580
we are here and being a financial

00:02:41,170 --> 00:02:45,430
institution this might be contrary but

00:02:42,580 --> 00:02:47,830
we pub we build our software on public

00:02:45,430 --> 00:02:50,680
cloud how many of you over here build

00:02:47,830 --> 00:02:55,630
your software on public cloud that's

00:02:50,680 --> 00:02:57,310
good and our development is primarily

00:02:55,630 --> 00:02:59,200
focused on micro service based

00:02:57,310 --> 00:03:01,030
architecture which means we will

00:02:59,200 --> 00:03:04,150
discrete components which are

00:03:01,030 --> 00:03:07,180
independent of their functionalities and

00:03:04,150 --> 00:03:09,989
that way I mean I mean we have we give

00:03:07,180 --> 00:03:12,580
ownership of the components to teams and

00:03:09,989 --> 00:03:15,670
that kind of gives them ownership and

00:03:12,580 --> 00:03:19,360
then it's easy to maintain and develop

00:03:15,670 --> 00:03:21,400
and being a financial institution we are

00:03:19,360 --> 00:03:24,280
bound by regulators so we focus on

00:03:21,400 --> 00:03:28,080
DevOps sec we just like DevOps with

00:03:24,280 --> 00:03:28,080
security and continuous delivery

00:03:33,299 --> 00:03:37,810
so as raaga talks a little bit about it

00:03:36,790 --> 00:03:39,820
you know we're doing a lot of cool

00:03:37,810 --> 00:03:42,610
things but it wasn't always like this it

00:03:39,820 --> 00:03:45,040
wasn't until about 2013 where where

00:03:42,610 --> 00:03:47,620
leadership from the top down took a an

00:03:45,040 --> 00:03:49,450
approach to a digital transformation and

00:03:47,620 --> 00:03:51,160
basically said you know we want to be

00:03:49,450 --> 00:03:52,239
thought of more as a tech company which

00:03:51,160 --> 00:03:54,190
I'm sure you've probably heard a lot of

00:03:52,239 --> 00:03:55,959
people talk about you know changing

00:03:54,190 --> 00:03:58,690
their image and really being a leader in

00:03:55,959 --> 00:04:01,840
financial services as far as technology

00:03:58,690 --> 00:04:03,040
in tech transformation so in 2013 we

00:04:01,840 --> 00:04:05,079
came out with a few technical

00:04:03,040 --> 00:04:07,870
declarations the first one to be

00:04:05,079 --> 00:04:09,610
attracting technical talent so in the

00:04:07,870 --> 00:04:12,490
past we had outsourced all of our

00:04:09,610 --> 00:04:13,390
software development in you know

00:04:12,490 --> 00:04:14,920
the start of the digital transformation

00:04:13,390 --> 00:04:16,239
had to start with people first so

00:04:14,920 --> 00:04:17,860
attracting you know good strong

00:04:16,239 --> 00:04:20,770
technical talent to capital one is full

00:04:17,860 --> 00:04:22,300
time employees working in agile you know

00:04:20,770 --> 00:04:24,310
at this point you know it's such a

00:04:22,300 --> 00:04:25,780
common trend but at the time in

00:04:24,310 --> 00:04:28,060
financial services we were one of the

00:04:25,780 --> 00:04:29,560
first groups are really dedicated to

00:04:28,060 --> 00:04:31,830
being agile and delivering software

00:04:29,560 --> 00:04:34,090
faster and changing our culture

00:04:31,830 --> 00:04:35,530
embracing a DevOps culture as well and

00:04:34,090 --> 00:04:37,240
just as in the first steps of this you

00:04:35,530 --> 00:04:38,500
know is we're bringing people in

00:04:37,240 --> 00:04:40,210
you know while they're fresh why not

00:04:38,500 --> 00:04:43,150
have you know fresh best practices in

00:04:40,210 --> 00:04:44,830
our software delivery and then as ragga

00:04:43,150 --> 00:04:46,570
mentioned as well going to micro

00:04:44,830 --> 00:04:48,280
services but specifically just starting

00:04:46,570 --> 00:04:52,750
with using api's everywhere before

00:04:48,280 --> 00:04:53,890
changing all of our architecture 2015

00:04:52,750 --> 00:04:55,750
came around and that's when we had our

00:04:53,890 --> 00:04:57,670
open source imperative so building on

00:04:55,750 --> 00:04:59,670
top of open source software going open

00:04:57,670 --> 00:05:02,680
source first not reinventing the wheel

00:04:59,670 --> 00:05:04,450
using free software you know instead of

00:05:02,680 --> 00:05:06,090
proprietary software where we can where

00:05:04,450 --> 00:05:08,350
we can safely do it with minimal risk

00:05:06,090 --> 00:05:09,640
but in addition to that not just using

00:05:08,350 --> 00:05:11,920
open source software but being a

00:05:09,640 --> 00:05:14,110
contributor to the community that

00:05:11,920 --> 00:05:15,640
meaning you know launching projects and

00:05:14,110 --> 00:05:18,190
contributing code back to other projects

00:05:15,640 --> 00:05:20,380
as well and then also going to the

00:05:18,190 --> 00:05:22,660
public cloud so we are also on the

00:05:20,380 --> 00:05:23,800
public cloud in 2015 as when we

00:05:22,660 --> 00:05:27,190
officially decided to start putting some

00:05:23,800 --> 00:05:28,450
of our applications on cloud and then as

00:05:27,190 --> 00:05:29,920
we progress through the years you know

00:05:28,450 --> 00:05:31,270
that being a really aggressive goal with

00:05:29,920 --> 00:05:33,370
you know the thousands of applications

00:05:31,270 --> 00:05:36,030
at Capital One has it's been an ongoing

00:05:33,370 --> 00:05:38,620
journey to go all-in on the public cloud

00:05:36,030 --> 00:05:40,300
also doubling down on the API is to

00:05:38,620 --> 00:05:42,910
create micro services architecture in

00:05:40,300 --> 00:05:45,310
the 2016-2017 time frame and then

00:05:42,910 --> 00:05:46,870
getting to fully automated fully tested

00:05:45,310 --> 00:05:50,200
deployments as well as part of our

00:05:46,870 --> 00:05:52,090
DevOps journey and from 2018 on to today

00:05:50,200 --> 00:05:54,340
a lot of it's been about a cultural

00:05:52,090 --> 00:05:55,870
shift you know the idea of you build it

00:05:54,340 --> 00:05:57,340
you own it so if you develop this thing

00:05:55,870 --> 00:05:59,140
you're responsible for testing it as a

00:05:57,340 --> 00:06:00,820
team as a product team you're

00:05:59,140 --> 00:06:03,220
responsible for the operations the QA

00:06:00,820 --> 00:06:04,870
the deployment you know just having that

00:06:03,220 --> 00:06:12,220
sense of accountability on one single

00:06:04,870 --> 00:06:14,380
team minimizing handshakes trade offs so

00:06:12,220 --> 00:06:15,820
you know any time that you try to go

00:06:14,380 --> 00:06:17,170
through any transformation being digital

00:06:15,820 --> 00:06:19,150
or otherwise and you're spending you

00:06:17,170 --> 00:06:20,830
know time effort money resources on

00:06:19,150 --> 00:06:22,150
these changes you have to know your

00:06:20,830 --> 00:06:24,580
numbers you have to have numbers to back

00:06:22,150 --> 00:06:25,760
up your success story right or at least

00:06:24,580 --> 00:06:28,940
to have a goal to

00:06:25,760 --> 00:06:30,800
so with our agile journey it was you

00:06:28,940 --> 00:06:32,840
know I don't say it's easy but there's

00:06:30,800 --> 00:06:34,160
some manual ways to look at it right so

00:06:32,840 --> 00:06:35,600
you can look at all of your team and say

00:06:34,160 --> 00:06:38,120
are you adhering to the agile manifesto

00:06:35,600 --> 00:06:39,980
first of all you know it's a first step

00:06:38,120 --> 00:06:42,530
do you have a dedicated scrum master

00:06:39,980 --> 00:06:44,300
facilitator on each of your teams and

00:06:42,530 --> 00:06:45,770
then also pulling some delivery metrics

00:06:44,300 --> 00:06:47,510
as well from tools that were already out

00:06:45,770 --> 00:06:50,030
there so are you guys familiar with

00:06:47,510 --> 00:06:52,430
tools like JIRA or rally your your agile

00:06:50,030 --> 00:06:54,050
user stories show of hands so these

00:06:52,430 --> 00:06:55,820
tools were out there right so it was

00:06:54,050 --> 00:06:57,980
sort of low-hanging fruit for us to pull

00:06:55,820 --> 00:06:59,480
some of this information and just by

00:06:57,980 --> 00:07:01,340
doing you know a quick you know smell

00:06:59,480 --> 00:07:05,270
check on these you can see that we were

00:07:01,340 --> 00:07:08,030
working in agile similarly with open

00:07:05,270 --> 00:07:10,130
source as I mentioned you know building

00:07:08,030 --> 00:07:11,900
on open source using open source we

00:07:10,130 --> 00:07:13,280
could check and see involve our

00:07:11,900 --> 00:07:15,140
applications how many of them have at

00:07:13,280 --> 00:07:16,490
least one open source library within

00:07:15,140 --> 00:07:18,980
their project right and that's a quick

00:07:16,490 --> 00:07:21,410
check box for us releasing projects to

00:07:18,980 --> 00:07:23,120
the development community we validate

00:07:21,410 --> 00:07:25,100
that by just going to our github and you

00:07:23,120 --> 00:07:27,980
can see the 30 products that we have

00:07:25,100 --> 00:07:29,870
there that folks we've produced in

00:07:27,980 --> 00:07:32,540
Capital One released to the world for

00:07:29,870 --> 00:07:35,360
their external contribution and lastly

00:07:32,540 --> 00:07:37,970
making contributing to outside external

00:07:35,360 --> 00:07:39,650
projects part of BAU for our engineers

00:07:37,970 --> 00:07:41,510
at the company so it's not to say that

00:07:39,650 --> 00:07:42,560
all of our engineers you know spend you

00:07:41,510 --> 00:07:45,080
know a large portion of their day

00:07:42,560 --> 00:07:47,270
contributing to projects but we are

00:07:45,080 --> 00:07:49,400
proud to be involved in you know several

00:07:47,270 --> 00:07:50,750
software foundations for example we have

00:07:49,400 --> 00:07:52,010
a number of engineers that contribute to

00:07:50,750 --> 00:07:54,050
projects in the Apache Software

00:07:52,010 --> 00:07:56,240
Foundation and other similar foundations

00:07:54,050 --> 00:07:57,620
as well so looking at what we're doing

00:07:56,240 --> 00:08:00,460
here it was easy to say yes we are

00:07:57,620 --> 00:08:02,570
embracing an open-source person mindset

00:08:00,460 --> 00:08:05,150
where things got a little bit tricky

00:08:02,570 --> 00:08:07,400
though in validating our transformation

00:08:05,150 --> 00:08:08,990
is in the DevOps space right so you're

00:08:07,400 --> 00:08:11,660
talking about a cultural change but also

00:08:08,990 --> 00:08:13,070
a massive tooling change and this is a

00:08:11,660 --> 00:08:15,920
little bit you know more difficult to

00:08:13,070 --> 00:08:17,720
validate so taking sort of a you know a

00:08:15,920 --> 00:08:20,390
high level approach in looking at DevOps

00:08:17,720 --> 00:08:21,920
why do we do it and I mentioned earlier

00:08:20,390 --> 00:08:24,080
that I come from a manufacturing

00:08:21,920 --> 00:08:25,910
background that means that I'm a little

00:08:24,080 --> 00:08:28,130
bit obsessed with Lean Six Sigma cutting

00:08:25,910 --> 00:08:30,650
waste where you can in process

00:08:28,130 --> 00:08:31,910
improvement right and it's amazing the

00:08:30,650 --> 00:08:34,280
correlation you can make between the

00:08:31,910 --> 00:08:36,200
manufacturing industry and the IT

00:08:34,280 --> 00:08:37,520
software delivery industry which we

00:08:36,200 --> 00:08:39,750
don't need to go into all detail today

00:08:37,520 --> 00:08:41,430
but at the highest level

00:08:39,750 --> 00:08:43,020
think about increased operational

00:08:41,430 --> 00:08:44,220
efficiency you know the reduction of

00:08:43,020 --> 00:08:45,690
handoffs when you don't have to take

00:08:44,220 --> 00:08:47,790
your code and constantly move from team

00:08:45,690 --> 00:08:49,350
to team to team you know each being

00:08:47,790 --> 00:08:51,960
responsible for a different function of

00:08:49,350 --> 00:08:53,900
delivering software right so at a high

00:08:51,960 --> 00:08:56,190
level that makes sense

00:08:53,900 --> 00:08:57,510
quality improvements right so when

00:08:56,190 --> 00:08:59,580
you're releasing smaller releasing

00:08:57,510 --> 00:09:02,190
faster you had better code quality

00:08:59,580 --> 00:09:04,410
checks etc this is ultimately leading to

00:09:02,190 --> 00:09:06,450
a better a better product at the end of

00:09:04,410 --> 00:09:07,170
the day but but how do we check that

00:09:06,450 --> 00:09:11,220
right

00:09:07,170 --> 00:09:12,570
and lastly reduce time to market so we

00:09:11,220 --> 00:09:15,450
talked about always going to be faster

00:09:12,570 --> 00:09:17,760
you know but you know how fast should we

00:09:15,450 --> 00:09:19,260
would be going how fast can we go you

00:09:17,760 --> 00:09:20,820
know with with the kind of regulations

00:09:19,260 --> 00:09:23,160
that we have on us as a large financial

00:09:20,820 --> 00:09:24,930
institution so these are all challenges

00:09:23,160 --> 00:09:26,640
that we were facing right and we didn't

00:09:24,930 --> 00:09:29,420
really have much of a way to validate

00:09:26,640 --> 00:09:29,420
this quickly

00:09:31,580 --> 00:09:37,110
all right I'm assuming many of the folks

00:09:34,650 --> 00:09:40,290
in the room are developers what is the

00:09:37,110 --> 00:09:42,810
release frequency in an average like how

00:09:40,290 --> 00:09:49,250
frequently do you release features into

00:09:42,810 --> 00:09:53,070
production daily weekly monthly

00:09:49,250 --> 00:09:55,110
quarterly no I want to hear that all

00:09:53,070 --> 00:09:57,060
right so a developer stream is like you

00:09:55,110 --> 00:09:58,950
know you build your code and you want

00:09:57,060 --> 00:10:00,420
that to go to production as fast as

00:09:58,950 --> 00:10:02,430
possible right like you don't want to

00:10:00,420 --> 00:10:03,870
build it today and then six months down

00:10:02,430 --> 00:10:05,220
the lane it goes into production and

00:10:03,870 --> 00:10:07,770
then you say hey this is not what I

00:10:05,220 --> 00:10:10,110
coded and maybe in the last six months

00:10:07,770 --> 00:10:11,430
somebody else has modified it or God

00:10:10,110 --> 00:10:13,200
knows whatever happened or maybe

00:10:11,430 --> 00:10:15,780
something else changed altogether right

00:10:13,200 --> 00:10:17,430
so as soon as you build it and you have

00:10:15,780 --> 00:10:19,380
to go to production that's the idea of

00:10:17,430 --> 00:10:21,090
thing so we just want to show that in

00:10:19,380 --> 00:10:23,490
the picture like say hey we want this

00:10:21,090 --> 00:10:26,130
but again we are in the financial

00:10:23,490 --> 00:10:28,680
industry so we are bound by regulators

00:10:26,130 --> 00:10:29,970
so we don't want to crash right we don't

00:10:28,680 --> 00:10:32,640
want to crash or we don't want to get

00:10:29,970 --> 00:10:35,460
caught by the cops or like whatever so

00:10:32,640 --> 00:10:37,980
you know I do all these things to

00:10:35,460 --> 00:10:40,170
satisfy this we need to release

00:10:37,980 --> 00:10:42,660
frequently and at the same time we want

00:10:40,170 --> 00:10:45,210
to stay compliant so that we are bound

00:10:42,660 --> 00:10:48,540
by the regulator's so what is the

00:10:45,210 --> 00:10:51,810
solution for this how many of the folks

00:10:48,540 --> 00:10:53,640
in the room like use like a pipeline for

00:10:51,810 --> 00:10:57,900
your release management

00:10:53,640 --> 00:10:59,790
okay that's good all right so capital

00:10:57,900 --> 00:11:02,400
and just like all of you folks came up

00:10:59,790 --> 00:11:04,710
with a pipeline implementing of like

00:11:02,400 --> 00:11:08,160
sixteen gates which is like the controls

00:11:04,710 --> 00:11:11,910
we put in place which means like you

00:11:08,160 --> 00:11:13,770
know I'll just go or oops yeah so the

00:11:11,910 --> 00:11:15,020
source code has to be from like some

00:11:13,770 --> 00:11:17,910
kind of like a source code repository

00:11:15,020 --> 00:11:20,280
not from somebody's laptop or some kind

00:11:17,910 --> 00:11:22,890
of a desktop and then with branching

00:11:20,280 --> 00:11:26,100
strategy how many of you folks use like

00:11:22,890 --> 00:11:31,080
a branch I mean anything other than a

00:11:26,100 --> 00:11:38,550
trunk based development okay

00:11:31,080 --> 00:11:41,850
how long does your branch live pretty

00:11:38,550 --> 00:11:43,620
sure maybe a few days pretty shorter

00:11:41,850 --> 00:11:46,800
should be short should be short okay

00:11:43,620 --> 00:11:48,630
okay all right all right so we enforced

00:11:46,800 --> 00:11:51,510
a trunk based our development in capital

00:11:48,630 --> 00:11:54,210
one and no long bit like no branches

00:11:51,510 --> 00:11:57,860
need to stay longer if it's something

00:11:54,210 --> 00:12:00,000
really long then it doesn't work because

00:11:57,860 --> 00:12:01,920
you've heard about like parallel

00:12:00,000 --> 00:12:04,140
pipelines and it's kind of like they

00:12:01,920 --> 00:12:06,180
they never merge and if you want to

00:12:04,140 --> 00:12:08,700
merge it's going to be a nightmare so

00:12:06,180 --> 00:12:11,820
that's the reason we have n for strong

00:12:08,700 --> 00:12:13,710
based development and code coverage this

00:12:11,820 --> 00:12:16,260
is pretty much like you know how what

00:12:13,710 --> 00:12:18,540
kind of like how much of your source

00:12:16,260 --> 00:12:21,540
code is being covered by tests again

00:12:18,540 --> 00:12:23,370
like writing software and writing tests

00:12:21,540 --> 00:12:25,170
I mean like if you have tests which

00:12:23,370 --> 00:12:27,210
cover like twenty or thirty percent of

00:12:25,170 --> 00:12:29,700
the code then there's no point in having

00:12:27,210 --> 00:12:31,860
it tested right so it should have like a

00:12:29,700 --> 00:12:34,590
significantly high percentage of test

00:12:31,860 --> 00:12:38,400
coverage and then static code analysis

00:12:34,590 --> 00:12:41,040
basically tells how how good your source

00:12:38,400 --> 00:12:43,020
code quality is and then security

00:12:41,040 --> 00:12:45,990
analysis how secure the source code

00:12:43,020 --> 00:12:47,940
you've built is open source scanning

00:12:45,990 --> 00:12:50,490
make sure that like the libraries that

00:12:47,940 --> 00:12:53,090
you use not bound by any kind of

00:12:50,490 --> 00:12:55,890
vulnerabilities or any kind of CVS

00:12:53,090 --> 00:12:58,590
artifact management or the release

00:12:55,890 --> 00:13:00,150
artifacts they are kept somewhere in

00:12:58,590 --> 00:13:01,770
like an artifact management something

00:13:00,150 --> 00:13:04,350
like a nexus or something of the sort

00:13:01,770 --> 00:13:07,080
norton some kind of a box where you mean

00:13:04,350 --> 00:13:09,480
if it goes you can't retrieve

00:13:07,080 --> 00:13:11,970
and then automated build test deployment

00:13:09,480 --> 00:13:15,270
automated integration testing automated

00:13:11,970 --> 00:13:17,490
performance testing and then automatic

00:13:15,270 --> 00:13:19,980
provisioning of your infrastructure and

00:13:17,490 --> 00:13:22,650
then rollback so Fisher I mean like

00:13:19,980 --> 00:13:24,270
facility to rollback in caves like you

00:13:22,650 --> 00:13:26,310
know you find some errors in an

00:13:24,270 --> 00:13:29,100
automated fashion immutable servers

00:13:26,310 --> 00:13:30,990
which is like you are unable to make any

00:13:29,100 --> 00:13:33,810
modifications once the server goes live

00:13:30,990 --> 00:13:36,090
in reproduction and auto and once you

00:13:33,810 --> 00:13:38,460
have all these thirteen measures which

00:13:36,090 --> 00:13:40,950
we are the controls in place you have

00:13:38,460 --> 00:13:44,400
the capability of creating your change

00:13:40,950 --> 00:13:46,230
orders in an automated fashion and then

00:13:44,400 --> 00:13:48,870
since once you have the change order

00:13:46,230 --> 00:13:50,570
then you are you can I mean like the

00:13:48,870 --> 00:13:53,340
pipeline should be capable of releasing

00:13:50,570 --> 00:13:54,930
features to production without causing

00:13:53,340 --> 00:13:57,720
any kind of like downtime

00:13:54,930 --> 00:13:58,920
I mean and then this should be a feature

00:13:57,720 --> 00:14:01,950
man like the fight line should be

00:13:58,920 --> 00:14:04,290
capable of turning any features like you

00:14:01,950 --> 00:14:06,360
know I mean like using feature toggles

00:14:04,290 --> 00:14:09,570
which are implemented within the source

00:14:06,360 --> 00:14:11,910
code and there might be like I mean like

00:14:09,570 --> 00:14:13,320
have you ever seen all these sixteen

00:14:11,910 --> 00:14:16,290
controls how many of you are familiar

00:14:13,320 --> 00:14:20,250
with these that's good and how many of

00:14:16,290 --> 00:14:22,140
you implement is okay alright so the

00:14:20,250 --> 00:14:24,720
ones who have not raised the hands like

00:14:22,140 --> 00:14:28,950
what is preventing you from implementing

00:14:24,720 --> 00:14:33,510
the controls in your pipeline okay we

00:14:28,950 --> 00:14:35,790
have a possible solution for that and I

00:14:33,510 --> 00:14:37,710
mean now that we have a pipeline but how

00:14:35,790 --> 00:14:40,170
do we prove that we are delivering the

00:14:37,710 --> 00:14:43,140
software in a quality fast and secure

00:14:40,170 --> 00:14:45,390
manner and the answer is hygeia idea is

00:14:43,140 --> 00:14:47,760
our open source flagship product which

00:14:45,390 --> 00:14:49,830
was developed five years back and it's

00:14:47,760 --> 00:14:53,070
open source it's one of the first open

00:14:49,830 --> 00:14:57,840
source initiatives or means develop at

00:14:53,070 --> 00:15:00,570
Capital One and the beauty of high gears

00:14:57,840 --> 00:15:02,790
the architecture is pretty simple and at

00:15:00,570 --> 00:15:06,480
the glance so the high with hygeia you

00:15:02,790 --> 00:15:09,000
can create like dashboards with the

00:15:06,480 --> 00:15:11,250
configurable metrics any metrics that

00:15:09,000 --> 00:15:14,970
your organization wants like from the

00:15:11,250 --> 00:15:17,280
feature tools like your SCM to build

00:15:14,970 --> 00:15:20,080
tools you can collect the data from all

00:15:17,280 --> 00:15:23,290
the tools that your organization has and

00:15:20,080 --> 00:15:26,440
you will be able to show it in a visual

00:15:23,290 --> 00:15:28,390
manner and we can also kind of show it

00:15:26,440 --> 00:15:31,630
in the pipeline with visualization which

00:15:28,390 --> 00:15:33,670
is basically all the visualization from

00:15:31,630 --> 00:15:36,640
your comm unit all the time it goes in

00:15:33,670 --> 00:15:38,410
live into production and you since we

00:15:36,640 --> 00:15:40,930
have the data from all the tools you

00:15:38,410 --> 00:15:42,730
have the capability to aggregate it at

00:15:40,930 --> 00:15:44,470
the portfolio level as well as the

00:15:42,730 --> 00:15:46,779
executor level with drill down

00:15:44,470 --> 00:15:49,360
capabilities and you also have the

00:15:46,779 --> 00:15:51,760
capability of gamification which is like

00:15:49,360 --> 00:15:54,160
if you have like similar teams you can

00:15:51,760 --> 00:15:56,410
kind of like do some kind of a

00:15:54,160 --> 00:15:59,260
gamification saying like team a is doing

00:15:56,410 --> 00:16:01,720
this well team Team B does something bad

00:15:59,260 --> 00:16:03,430
so we can do like comparison between the

00:16:01,720 --> 00:16:06,310
teams and find out like why team b is

00:16:03,430 --> 00:16:08,529
lagging from Team a and then since we

00:16:06,310 --> 00:16:10,980
have the data and we have a built a

00:16:08,529 --> 00:16:14,079
analytical engine called audit API which

00:16:10,980 --> 00:16:17,230
kind of does some analysis on the data

00:16:14,079 --> 00:16:19,660
collected to kind of help with the

00:16:17,230 --> 00:16:27,850
release automation which we which will

00:16:19,660 --> 00:16:30,000
talk a little bit so any organization if

00:16:27,850 --> 00:16:32,980
you look at we've kind of like

00:16:30,000 --> 00:16:34,720
categorize this into the CI CD tool so

00:16:32,980 --> 00:16:38,350
we'll be having some kind of like a

00:16:34,720 --> 00:16:39,970
solution for feature SCM build jenkins

00:16:38,350 --> 00:16:42,520
or circles here anything of the sort

00:16:39,970 --> 00:16:45,220
deployment a the Jenkins or I'm going to

00:16:42,520 --> 00:16:48,430
apply a performance testing some kind of

00:16:45,220 --> 00:16:52,029
like jmeter or homegrown some kind of

00:16:48,430 --> 00:16:54,700
like CMDB solutions and then some kind

00:16:52,029 --> 00:16:56,620
of and artifactory repository so all

00:16:54,700 --> 00:16:58,810
these things all these tools they

00:16:56,620 --> 00:17:01,270
provide like separate views and separate

00:16:58,810 --> 00:17:03,790
and like you know metrics and separate

00:17:01,270 --> 00:17:06,400
dashboards instead of going to each of

00:17:03,790 --> 00:17:09,309
these tools and looking at the metrics

00:17:06,400 --> 00:17:11,679
what we do is we have capability of

00:17:09,309 --> 00:17:14,829
collecting the data from each of these

00:17:11,679 --> 00:17:17,230
tools because every every tool exposes

00:17:14,829 --> 00:17:18,699
their data through api's so we built

00:17:17,230 --> 00:17:20,949
something called like the collectors the

00:17:18,699 --> 00:17:23,319
collectors all they do is they collect

00:17:20,949 --> 00:17:26,110
the data from each of these tools and

00:17:23,319 --> 00:17:28,000
then convert it into the canonical data

00:17:26,110 --> 00:17:30,610
model which is supported by high here

00:17:28,000 --> 00:17:32,110
and since we collect the data and we

00:17:30,610 --> 00:17:33,550
don't want to expose the data directly

00:17:32,110 --> 00:17:36,460
from the database we

00:17:33,550 --> 00:17:39,250
built the API layer which is on top of

00:17:36,460 --> 00:17:42,220
the data that way we can use the

00:17:39,250 --> 00:17:43,540
visualization for visualization we can

00:17:42,220 --> 00:17:45,610
get the data that's being collected by

00:17:43,540 --> 00:17:48,580
the collectors or for the analytics

00:17:45,610 --> 00:17:50,800
which is the audit API to do like no

00:17:48,580 --> 00:17:52,510
source control good checks like you know

00:17:50,800 --> 00:17:54,550
if your source control has been peer

00:17:52,510 --> 00:17:56,890
reviewed if the source control has been

00:17:54,550 --> 00:18:00,160
like if the code committer has not

00:17:56,890 --> 00:18:02,920
merged it it's been merged by someone

00:18:00,160 --> 00:18:04,900
else and then if I mean like there are

00:18:02,920 --> 00:18:07,060
no direct comets or to your source code

00:18:04,900 --> 00:18:09,100
like you know it has been to a branch or

00:18:07,060 --> 00:18:11,620
a fork or something of the sort and then

00:18:09,100 --> 00:18:14,350
make sure that the source code has gone

00:18:11,620 --> 00:18:16,390
through the security channel scans being

00:18:14,350 --> 00:18:18,640
a financial company we are bound by

00:18:16,390 --> 00:18:20,950
checks so we have to comply with

00:18:18,640 --> 00:18:23,410
security so we make sure that the

00:18:20,950 --> 00:18:25,360
software that's being built has gone

00:18:23,410 --> 00:18:27,940
through security analysis at the same

00:18:25,360 --> 00:18:30,310
time since we heavily use open source

00:18:27,940 --> 00:18:31,630
technologies we make sure that there are

00:18:30,310 --> 00:18:33,480
no vulnerabilities or the

00:18:31,630 --> 00:18:39,730
vulnerabilities are dispositioned and

00:18:33,480 --> 00:18:41,440
fixed and we make sure that like the the

00:18:39,730 --> 00:18:44,590
source code that's being built has been

00:18:41,440 --> 00:18:47,470
undergone with tests and the checks and

00:18:44,590 --> 00:18:50,290
make sure that like the versions are the

00:18:47,470 --> 00:18:51,970
or accurate and the version that goes to

00:18:50,290 --> 00:18:54,070
production has been deployed in an

00:18:51,970 --> 00:18:56,020
environment which is like prior to

00:18:54,070 --> 00:18:58,210
production something of that sort so all

00:18:56,020 --> 00:19:00,340
these things are taken care of by the

00:18:58,210 --> 00:19:03,070
audit API D which is nothing but the

00:19:00,340 --> 00:19:04,600
analytical engine which runs checks on

00:19:03,070 --> 00:19:11,800
top of the data that's being collected

00:19:04,600 --> 00:19:15,040
by the collectors so at the architecture

00:19:11,800 --> 00:19:18,130
level if you mean as I mentioned in the

00:19:15,040 --> 00:19:20,590
previous slide like all the data that we

00:19:18,130 --> 00:19:22,840
collect from the tools are collected by

00:19:20,590 --> 00:19:25,960
the collectors and they go into the

00:19:22,840 --> 00:19:28,720
MongoDB and we have the API layer which

00:19:25,960 --> 00:19:31,750
sits on top of the database and then

00:19:28,720 --> 00:19:34,330
which kind of gives you a me like which

00:19:31,750 --> 00:19:36,580
feeds the UI and one thing which I want

00:19:34,330 --> 00:19:38,200
to talk about the the collectors is most

00:19:36,580 --> 00:19:39,970
of the collectors that are built today

00:19:38,200 --> 00:19:43,480
are they are like run in a batch mode

00:19:39,970 --> 00:19:46,590
which is like on a scheduled basis and

00:19:43,480 --> 00:19:49,200
again we've also started do

00:19:46,590 --> 00:19:51,960
pushing data and real-time through like

00:19:49,200 --> 00:19:54,929
api's like a web hooks and even based

00:19:51,960 --> 00:19:58,289
data collection so we've done that with

00:19:54,929 --> 00:20:00,809
github Jenkins and sonar so anytime a

00:19:58,289 --> 00:20:03,480
build happens on Jenkins the build

00:20:00,809 --> 00:20:05,520
metadata and all the pertinent data

00:20:03,480 --> 00:20:07,650
that's being a part of the Jenkins build

00:20:05,520 --> 00:20:10,200
is pushed into hygeia the same thing

00:20:07,650 --> 00:20:12,240
with sonar like any time a project

00:20:10,200 --> 00:20:15,840
undergoes a change and any time a

00:20:12,240 --> 00:20:17,720
project has which has been scanned the

00:20:15,840 --> 00:20:26,370
test results care will get pushed into

00:20:17,720 --> 00:20:28,110
hygeia so all right so here are some of

00:20:26,370 --> 00:20:30,990
the column in some of the collectors

00:20:28,110 --> 00:20:33,899
that are already available and can

00:20:30,990 --> 00:20:38,250
everyone see the list of tools that we

00:20:33,899 --> 00:20:43,440
support and do you see any tools that

00:20:38,250 --> 00:20:50,370
are missing here yes over tool is it I'm

00:20:43,440 --> 00:20:55,529
sorry okay and is it like what kind of

00:20:50,370 --> 00:20:58,110
it I'm not sure about that - all right

00:20:55,529 --> 00:21:00,169
so with collectors right like the

00:20:58,110 --> 00:21:02,700
collectors can be built in any language

00:21:00,169 --> 00:21:05,669
the idea is since we already have the

00:21:02,700 --> 00:21:07,260
canonical data model with hygeia the

00:21:05,669 --> 00:21:10,620
collector can be written in any language

00:21:07,260 --> 00:21:14,789
and as long as it is able to talk to the

00:21:10,620 --> 00:21:17,190
API that's exposed by the tools we get

00:21:14,789 --> 00:21:19,020
the metrics from it and then convert it

00:21:17,190 --> 00:21:26,370
into the canonical form to write it into

00:21:19,020 --> 00:21:28,169
the idea and again if we have like a

00:21:26,370 --> 00:21:29,730
reference implementation for each of the

00:21:28,169 --> 00:21:31,470
collectors like you know for feature we

00:21:29,730 --> 00:21:33,539
already have like JIRA all those kind of

00:21:31,470 --> 00:21:35,580
things if you find like a new feature

00:21:33,539 --> 00:21:37,649
tool that's not being mentioned we can

00:21:35,580 --> 00:21:39,690
take this I mean you should be able to

00:21:37,649 --> 00:21:41,549
take the existing collectors as a

00:21:39,690 --> 00:21:44,340
reference and then build on top of it or

00:21:41,549 --> 00:21:47,460
our company we have like open source

00:21:44,340 --> 00:21:49,799
community which can support it like in

00:21:47,460 --> 00:21:53,010
case like you don't find a reference

00:21:49,799 --> 00:21:54,179
implementation or if you still like if

00:21:53,010 --> 00:21:57,530
you can't follow the reference

00:21:54,179 --> 00:21:57,530
implementation we are here to help

00:22:00,009 --> 00:22:03,710
so I'm gonna walk us through a couple of

00:22:02,000 --> 00:22:06,980
views in hygeia starting with our team

00:22:03,710 --> 00:22:08,570
view and as you kind of look at this I

00:22:06,980 --> 00:22:10,399
want you to think about this as an

00:22:08,570 --> 00:22:12,649
information radiator at that product

00:22:10,399 --> 00:22:14,179
team level so think about the kind of

00:22:12,649 --> 00:22:15,889
information that you're looking at when

00:22:14,179 --> 00:22:17,659
you're going through daily stand-ups if

00:22:15,889 --> 00:22:19,159
you have those or if you have a shared

00:22:17,659 --> 00:22:20,509
workspace maybe something that could

00:22:19,159 --> 00:22:22,700
actually be shown on a monitor

00:22:20,509 --> 00:22:24,470
etc this is kind of the intent for this

00:22:22,700 --> 00:22:25,759
one and if you look at the screen you

00:22:24,470 --> 00:22:27,470
might notice that some of these metrics

00:22:25,759 --> 00:22:30,379
are similar as they may be they're

00:22:27,470 --> 00:22:32,149
pulled from some of the industry common

00:22:30,379 --> 00:22:33,559
tools like for example this first widget

00:22:32,149 --> 00:22:35,809
up on the top left is pulling

00:22:33,559 --> 00:22:37,909
information from JIRA and you'll also

00:22:35,809 --> 00:22:40,009
see some information on commits pulls

00:22:37,909 --> 00:22:42,799
and issues from github here on the lower

00:22:40,009 --> 00:22:46,669
left we can we can show information from

00:22:42,799 --> 00:22:48,799
Jenkins static analysis unit tests open

00:22:46,669 --> 00:22:50,899
source scanning you know we have

00:22:48,799 --> 00:22:52,549
collectors for all of these right and

00:22:50,899 --> 00:22:54,980
you can display this all in one

00:22:52,549 --> 00:22:56,090
dashboard now this slides a little busy

00:22:54,980 --> 00:22:57,830
just because we're pulling in a lot of

00:22:56,090 --> 00:22:59,480
tools and this is a lot of stuff that we

00:22:57,830 --> 00:23:02,029
may look at from day to day but this is

00:22:59,480 --> 00:23:03,110
completely configurable so you know when

00:23:02,029 --> 00:23:04,519
the chance that there are some tools

00:23:03,110 --> 00:23:06,649
that are not relevant for your pipeline

00:23:04,519 --> 00:23:09,080
you don't have to display you know blank

00:23:06,649 --> 00:23:10,279
graphs etc for them but you know where

00:23:09,080 --> 00:23:17,509
they are useful you can completely

00:23:10,279 --> 00:23:19,820
configure this to your own pipeline so

00:23:17,509 --> 00:23:21,259
here's a code progression view so

00:23:19,820 --> 00:23:25,100
basically what we're looking at here is

00:23:21,259 --> 00:23:27,049
time stamps for you know when when code

00:23:25,100 --> 00:23:29,210
goes to each environment within your in

00:23:27,049 --> 00:23:30,950
your dev pipeline so you can see

00:23:29,210 --> 00:23:32,779
basically the health of your CI CD

00:23:30,950 --> 00:23:35,120
pipeline here how long it's taken to

00:23:32,779 --> 00:23:36,559
deploy to dev QA integration test

00:23:35,120 --> 00:23:39,159
performance tests and ultimately

00:23:36,559 --> 00:23:39,159
production

00:23:43,960 --> 00:23:46,150
this is our cloud utilization and cost

00:23:45,730 --> 00:23:47,680
view

00:23:46,150 --> 00:23:49,390
so we've blanked out some of the data

00:23:47,680 --> 00:23:51,520
here just for the presentation purpose

00:23:49,390 --> 00:23:53,500
but think about you know in the example

00:23:51,520 --> 00:23:56,290
for AWS which happens to be our case

00:23:53,500 --> 00:23:58,780
your ec2 instance utilization you know

00:23:56,290 --> 00:24:00,880
what instances are up what are what's in

00:23:58,780 --> 00:24:02,920
use what is the the cost you know per a

00:24:00,880 --> 00:24:05,020
time period and this is just a quick

00:24:02,920 --> 00:24:06,670
glance into there so that you can you

00:24:05,020 --> 00:24:08,770
can just quickly see it all that

00:24:06,670 --> 00:24:10,690
information consolidated together and

00:24:08,770 --> 00:24:13,390
just a disclaimer here so today we have

00:24:10,690 --> 00:24:16,480
this available for AWS it is on our

00:24:13,390 --> 00:24:18,820
roadmap to expand to GCP and Azure as

00:24:16,480 --> 00:24:19,870
well so that is on our roadmap if you

00:24:18,820 --> 00:24:26,980
guys are on cloud but on a different

00:24:19,870 --> 00:24:28,690
platform the next view we're gonna show

00:24:26,980 --> 00:24:30,130
is the product dashboard so we showed

00:24:28,690 --> 00:24:31,900
the team dashboard that's sort of the

00:24:30,130 --> 00:24:33,910
micro level or the team focused view

00:24:31,900 --> 00:24:36,790
right now let's say you're you're a

00:24:33,910 --> 00:24:38,920
delivery manager that is responsible for

00:24:36,790 --> 00:24:40,480
a number of applications right and you

00:24:38,920 --> 00:24:42,760
only care about some data for a number

00:24:40,480 --> 00:24:44,500
of applications this is basically a

00:24:42,760 --> 00:24:46,120
rollup view of the information that

00:24:44,500 --> 00:24:48,820
you'd see in the team board and this is

00:24:46,120 --> 00:24:50,380
configurable as well so we have each of

00:24:48,820 --> 00:24:52,210
our applications here so Tetris is a

00:24:50,380 --> 00:24:54,580
separate application from Galaga and

00:24:52,210 --> 00:24:56,110
pong right so this is just a quick

00:24:54,580 --> 00:24:57,490
glance you know if you have a portfolio

00:24:56,110 --> 00:24:59,560
of applications that you want to check

00:24:57,490 --> 00:25:06,610
the data and this is the next level up

00:24:59,560 --> 00:25:08,350
that you would want to view moving up

00:25:06,610 --> 00:25:10,900
one more layer here is our executive

00:25:08,350 --> 00:25:13,560
dashboard so I want you to think about

00:25:10,900 --> 00:25:15,670
you know your your VP or your CIO

00:25:13,560 --> 00:25:17,260
you know what kind of information is

00:25:15,670 --> 00:25:18,340
important to them you know obviously

00:25:17,260 --> 00:25:20,200
you're not going to go into a meeting

00:25:18,340 --> 00:25:22,960
with you know the team dashboard view I

00:25:20,200 --> 00:25:24,460
don't know many CIOs that you know care

00:25:22,960 --> 00:25:25,900
how many stories you know one or two

00:25:24,460 --> 00:25:27,880
people closed out in JIRA that day so

00:25:25,900 --> 00:25:29,560
you need some higher-level information

00:25:27,880 --> 00:25:30,670
you know maybe there's an initiative to

00:25:29,560 --> 00:25:33,480
burn down some of your open source

00:25:30,670 --> 00:25:35,530
violations or maybe there is a you know

00:25:33,480 --> 00:25:37,690
production incidence you want to see you

00:25:35,530 --> 00:25:38,980
know where are we in comparison to last

00:25:37,690 --> 00:25:41,530
year around this time where are we

00:25:38,980 --> 00:25:43,840
trending up or down what's our mean time

00:25:41,530 --> 00:25:45,310
to resolution for issues and then if

00:25:43,840 --> 00:25:47,800
there are questions on these data on

00:25:45,310 --> 00:25:51,010
these data points we have a details tab

00:25:47,800 --> 00:25:53,440
so going into that open source violation

00:25:51,010 --> 00:25:56,260
example you can see the trending here

00:25:53,440 --> 00:25:57,430
and the burn down over time

00:25:56,260 --> 00:26:01,150
for those violations should there be

00:25:57,430 --> 00:26:03,220
more questions so let me ask has anybody

00:26:01,150 --> 00:26:06,280
ever gone into you know a meeting with

00:26:03,220 --> 00:26:08,290
some accountable executive where you had

00:26:06,280 --> 00:26:10,990
to show a metric for something in your

00:26:08,290 --> 00:26:12,310
pipeline and what you showed made them

00:26:10,990 --> 00:26:13,440
more confused than they were before you

00:26:12,310 --> 00:26:15,580
enter the room

00:26:13,440 --> 00:26:18,190
okay I'm gonna raise my hand because

00:26:15,580 --> 00:26:20,410
that was my life at one point for about

00:26:18,190 --> 00:26:21,790
six months at another gig I had and it's

00:26:20,410 --> 00:26:23,290
really frustrating right because you go

00:26:21,790 --> 00:26:24,490
through these constant manual pools of

00:26:23,290 --> 00:26:26,470
data from different sources of

00:26:24,490 --> 00:26:28,180
information and you're not always sure

00:26:26,470 --> 00:26:29,260
whether or not you know what you're

00:26:28,180 --> 00:26:32,440
showing is going to be completely

00:26:29,260 --> 00:26:34,150
valuable right but the the glory of the

00:26:32,440 --> 00:26:36,460
executive dashboard is you know it being

00:26:34,150 --> 00:26:39,040
configurable you can have kind of a you

00:26:36,460 --> 00:26:40,540
know a trial and error you know fast

00:26:39,040 --> 00:26:42,400
failure to figure out what's important

00:26:40,540 --> 00:26:50,880
to those stakeholders and then you can

00:26:42,400 --> 00:26:53,350
use that information moving forward and

00:26:50,880 --> 00:26:55,990
when they spoke earlier about the

00:26:53,350 --> 00:26:58,570
gamification so this is one screenshot

00:26:55,990 --> 00:27:00,010
of how we do the gamification again the

00:26:58,570 --> 00:27:02,680
gamification is like totally

00:27:00,010 --> 00:27:04,360
configurable say in this case like we

00:27:02,680 --> 00:27:06,640
have a dashboard which say it's like you

00:27:04,360 --> 00:27:08,320
know score of 1.8 which means like you

00:27:06,640 --> 00:27:09,880
know they have some they have the

00:27:08,320 --> 00:27:13,030
feature widget they have the build video

00:27:09,880 --> 00:27:16,240
they're coded the other nutshell like

00:27:13,030 --> 00:27:18,700
the algorithm for calculating the score

00:27:16,240 --> 00:27:20,530
is based on like what widgets you have

00:27:18,700 --> 00:27:22,240
and like say there could be a

00:27:20,530 --> 00:27:24,370
possibility that you have a widget

00:27:22,240 --> 00:27:26,800
configured but then you don't have any

00:27:24,370 --> 00:27:28,990
data to support it or like your data is

00:27:26,800 --> 00:27:32,170
too less or like you know your data is

00:27:28,990 --> 00:27:34,120
too old so all these parameters they can

00:27:32,170 --> 00:27:36,850
be configured through a properties file

00:27:34,120 --> 00:27:40,360
and then you have there's a collector to

00:27:36,850 --> 00:27:43,270
kind of do the logic and one classic

00:27:40,360 --> 00:27:46,440
example of the collaboration as since I

00:27:43,270 --> 00:27:49,720
mean this open is this this feature was

00:27:46,440 --> 00:27:51,400
contributed by one of our main leak

00:27:49,720 --> 00:27:53,290
organization like one of the

00:27:51,400 --> 00:27:55,360
organization which is Walmart labs they

00:27:53,290 --> 00:27:58,210
have contributed this feature and in a

00:27:55,360 --> 00:28:00,420
collaboration with Capital One so again

00:27:58,210 --> 00:28:00,420
like

00:28:03,660 --> 00:28:09,360
and then talking about the high-g

00:28:07,020 --> 00:28:13,290
accolades in 2015

00:28:09,360 --> 00:28:15,600
hi gia was when awarded the rookie's of

00:28:13,290 --> 00:28:17,490
open-source rookies of the art and then

00:28:15,600 --> 00:28:19,170
there's a like a classic example of how

00:28:17,490 --> 00:28:24,120
Walmart implemented five thousand-plus

00:28:19,170 --> 00:28:28,700
saw dashboards like using hai kiya and

00:28:24,120 --> 00:28:32,310
then I mean has also been mentioned in

00:28:28,700 --> 00:28:34,590
lik the 50 DevOps tools that's that you

00:28:32,310 --> 00:28:37,340
probably might not be using anyone in

00:28:34,590 --> 00:28:41,040
the room are already using hi Gia

00:28:37,340 --> 00:28:43,050
okay all right okay let me ask you

00:28:41,040 --> 00:28:44,670
another question on that collective

00:28:43,050 --> 00:28:46,710
slide that we showed was there a lot of

00:28:44,670 --> 00:28:48,060
similarity between your tool set and the

00:28:46,710 --> 00:28:52,470
tool set that we have collectors for

00:28:48,060 --> 00:28:54,030
maybe maybe five or more collectors 10

00:28:52,470 --> 00:28:55,410
or more 10:04 nice

00:28:54,030 --> 00:28:57,450
ok well hopefully by the end of this we

00:28:55,410 --> 00:28:58,980
can convince you to use idea yeah low

00:28:57,450 --> 00:29:01,380
hanging fruit for you guys yeah and I

00:28:58,980 --> 00:29:03,680
mean the main thing about ideas it's

00:29:01,380 --> 00:29:06,570
free of cost and it's open source so

00:29:03,680 --> 00:29:09,480
there's no product in the market which

00:29:06,570 --> 00:29:11,400
which kind of does all all the features

00:29:09,480 --> 00:29:13,950
that me and Tyler went over in the last

00:29:11,400 --> 00:29:24,630
few minutes so we would strongly

00:29:13,950 --> 00:29:26,490
recommend you to try hi Gia thanks so as

00:29:24,630 --> 00:29:28,140
ragga mentioned you know we've had

00:29:26,490 --> 00:29:30,660
significant contributions from a number

00:29:28,140 --> 00:29:32,700
of companies Walmart is one of those as

00:29:30,660 --> 00:29:34,740
is Verizon in that executive dashboard I

00:29:32,700 --> 00:29:37,110
showed a number of features they were

00:29:34,740 --> 00:29:38,430
actually contributed by Verizon and this

00:29:37,110 --> 00:29:40,050
is just to say that you know although we

00:29:38,430 --> 00:29:41,400
you know Capital One does maintain this

00:29:40,050 --> 00:29:42,750
project but we're very serious about

00:29:41,400 --> 00:29:46,110
having this be a community driven

00:29:42,750 --> 00:29:49,080
project and we've had a number of key

00:29:46,110 --> 00:29:50,760
players over the years that have had

00:29:49,080 --> 00:29:52,200
most country most contributions and most

00:29:50,760 --> 00:29:56,130
heavy usage of hygeia within their

00:29:52,200 --> 00:29:58,320
companies and I'll show those so as I

00:29:56,130 --> 00:30:00,210
mentioned Capital One Walmart and

00:29:58,320 --> 00:30:02,070
Verizon also single stone consulting is

00:30:00,210 --> 00:30:03,960
on our consortium in addition to

00:30:02,070 --> 00:30:05,790
American Airlines and this is always

00:30:03,960 --> 00:30:07,770
expanding so as community manager for

00:30:05,790 --> 00:30:09,510
hygeia we're always open to

00:30:07,770 --> 00:30:11,820
conversations with folks who want to do

00:30:09,510 --> 00:30:13,020
a proof of concept or just to talk

00:30:11,820 --> 00:30:15,540
through haiji and how it might be a

00:30:13,020 --> 00:30:17,040
value to their company so don't think of

00:30:15,540 --> 00:30:17,370
this is just a set consortium that's

00:30:17,040 --> 00:30:19,020
just

00:30:17,370 --> 00:30:20,880
we're always welcoming more people who

00:30:19,020 --> 00:30:23,940
are serious about getting involved and

00:30:20,880 --> 00:30:25,740
want to contribute back so this picture

00:30:23,940 --> 00:30:27,750
was actually taken this year back in

00:30:25,740 --> 00:30:30,240
June when our consortium met at our

00:30:27,750 --> 00:30:32,730
annual meeting and at Verizon's

00:30:30,240 --> 00:30:34,620
headquarters and the purpose of that is

00:30:32,730 --> 00:30:36,210
just to take a look at where we are with

00:30:34,620 --> 00:30:38,130
the project today what our roadmap is

00:30:36,210 --> 00:30:40,140
what's most important to the members of

00:30:38,130 --> 00:30:41,690
the consortium feature-wise and then

00:30:40,140 --> 00:30:43,740
just general members of the community

00:30:41,690 --> 00:30:45,390
we've also established a number of

00:30:43,740 --> 00:30:47,700
working groups within that consortium so

00:30:45,390 --> 00:30:49,470
we have our program management and

00:30:47,700 --> 00:30:51,120
Technology Innovation groups in addition

00:30:49,470 --> 00:30:53,610
to our metrics and product management

00:30:51,120 --> 00:30:55,520
groups so looking across all of the

00:30:53,610 --> 00:30:57,360
membership we have on the consortium and

00:30:55,520 --> 00:30:59,190
recruiting the smees in each of those

00:30:57,360 --> 00:31:07,440
areas to drive those respective

00:30:59,190 --> 00:31:09,240
functions for the project and just to

00:31:07,440 --> 00:31:10,890
further drive home kind of you know the

00:31:09,240 --> 00:31:13,440
balance of you know work we do

00:31:10,890 --> 00:31:14,429
internally on idea to the kinds of

00:31:13,440 --> 00:31:16,080
contributions we're getting from

00:31:14,429 --> 00:31:17,480
community so we have a lot of technical

00:31:16,080 --> 00:31:20,820
improvements that we're working on today

00:31:17,480 --> 00:31:22,380
raga namely works on this day to day but

00:31:20,820 --> 00:31:24,120
also you know a lot of community

00:31:22,380 --> 00:31:26,160
contributions as far as features go so

00:31:24,120 --> 00:31:27,929
executive dashboards has been sort of a

00:31:26,160 --> 00:31:30,240
hot feature for us lately but we

00:31:27,929 --> 00:31:33,240
continue to get contributions from the

00:31:30,240 --> 00:31:34,920
consortium there and then it's the

00:31:33,240 --> 00:31:36,300
epical thing about you know the

00:31:34,920 --> 00:31:38,190
consortium and how they get involved is

00:31:36,300 --> 00:31:39,809
that people typically look at Capital

00:31:38,190 --> 00:31:41,400
One as the place to go for information

00:31:39,809 --> 00:31:44,550
on the project but we're trying to

00:31:41,400 --> 00:31:46,500
spread that out more to to everybody as

00:31:44,550 --> 00:31:48,240
a shared sense of accountability so when

00:31:46,500 --> 00:31:49,770
somebody wants information you know

00:31:48,240 --> 00:31:51,570
another member in our consortium can go

00:31:49,770 --> 00:31:53,429
out and walk them through a walking deck

00:31:51,570 --> 00:31:54,360
of the information on the project how it

00:31:53,429 --> 00:31:57,000
might work for them and work them

00:31:54,360 --> 00:31:58,710
through a POC as well so it's not our

00:31:57,000 --> 00:32:00,510
prod it's not Capital One's project

00:31:58,710 --> 00:32:08,370
alone it's really our project as a

00:32:00,510 --> 00:32:09,900
consortium in a community so again if

00:32:08,370 --> 00:32:12,360
you're interested please talk to us

00:32:09,900 --> 00:32:14,790
we'll be at our booth down on the first

00:32:12,360 --> 00:32:16,170
floor to the right of registration if

00:32:14,790 --> 00:32:18,270
you don't have a chance to really go in

00:32:16,170 --> 00:32:21,240
detail with us today about hygeia we're

00:32:18,270 --> 00:32:23,250
always active on git er chat one the

00:32:21,240 --> 00:32:24,840
hygeia project there so um you know

00:32:23,250 --> 00:32:26,460
we're happy to offer support for you as

00:32:24,840 --> 00:32:29,429
you work through POCs or just need some

00:32:26,460 --> 00:32:31,110
general information or we have a github

00:32:29,429 --> 00:32:33,630
organization for hygeia

00:32:31,110 --> 00:32:38,309
well no luggage to talk a little bit

00:32:33,630 --> 00:32:40,650
about that I'm sorry yeah yep so yeah

00:32:38,309 --> 00:32:42,799
check us out on github and then if you

00:32:40,650 --> 00:32:45,570
have any questions about the project or

00:32:42,799 --> 00:32:46,740
repos how they're set up raagas Robert

00:32:45,570 --> 00:32:50,190
is going to be your guide there be a git

00:32:46,740 --> 00:32:58,740
er chat yeah all right now quick queue

00:32:50,190 --> 00:33:00,809
of any questions yes so the question was

00:32:58,740 --> 00:33:04,679
what other tools do we consider before

00:33:00,809 --> 00:33:07,200
we decided to build our own now and so

00:33:04,679 --> 00:33:10,049
basically in looking this we couldn't

00:33:07,200 --> 00:33:13,520
find any single specific tool that did

00:33:10,049 --> 00:33:15,540
what we needed it to do earlier on so

00:33:13,520 --> 00:33:17,100
really we did a lot of research there

00:33:15,540 --> 00:33:19,320
was no serious consideration and

00:33:17,100 --> 00:33:22,590
actually giving a full trial to any

00:33:19,320 --> 00:33:24,540
single product and again now in this

00:33:22,590 --> 00:33:27,660
process we found out that like every

00:33:24,540 --> 00:33:29,419
tool that we use expose api's to export

00:33:27,660 --> 00:33:32,130
the data so we thought like rather than

00:33:29,419 --> 00:33:34,559
going into I mean like one of the key

00:33:32,130 --> 00:33:36,870
things of Capital One is like build your

00:33:34,559 --> 00:33:38,970
will build your own software so in order

00:33:36,870 --> 00:33:41,429
to that we found that like the tools are

00:33:38,970 --> 00:33:44,100
capable of giving the data so why not we

00:33:41,429 --> 00:33:49,700
just query the tools to get the data and

00:33:44,100 --> 00:33:49,700
then start using it yes

00:33:53,410 --> 00:33:58,020
I'm sorry can you speak a little speak

00:33:55,210 --> 00:33:58,020
up a little bit sorry

00:34:03,679 --> 00:34:09,720
okay so it's I think your question was

00:34:06,570 --> 00:34:11,429
only the support what is I mean only AWS

00:34:09,720 --> 00:34:14,429
cloud is supported is that what your

00:34:11,429 --> 00:34:17,429
question is okay so the view that we

00:34:14,429 --> 00:34:20,000
showed was for a cloud widget so in case

00:34:17,429 --> 00:34:22,859
if you use AWS as your cloud provider

00:34:20,000 --> 00:34:25,740
the view will provide like how your

00:34:22,859 --> 00:34:28,230
cloud utilization is so it's just like

00:34:25,740 --> 00:34:30,560
an optional view but the tool as

00:34:28,230 --> 00:34:33,540
searchers I mean like infrastructure

00:34:30,560 --> 00:34:36,179
agnostic you can be on Prem it can be

00:34:33,540 --> 00:34:38,579
cloud it's just like all we need is the

00:34:36,179 --> 00:34:40,200
tool needs to have access to thee no I

00:34:38,579 --> 00:34:42,089
mean the hygiene needs to have access to

00:34:40,200 --> 00:34:44,220
the tools your organization uses and

00:34:42,089 --> 00:34:46,169
again Hagia has to be I mean like at

00:34:44,220 --> 00:34:48,179
this point haya has to be hosted

00:34:46,169 --> 00:34:51,720
internally within the organization so

00:34:48,179 --> 00:34:53,520
I'm assuming if you open up the network

00:34:51,720 --> 00:34:55,319
and then all the security groups all

00:34:53,520 --> 00:34:56,879
those kind of things in order to

00:34:55,319 --> 00:34:59,160
maintain the communication with the

00:34:56,879 --> 00:35:01,050
tools hygeia will be able to communicate

00:34:59,160 --> 00:35:04,550
with the tools to gather the data and

00:35:01,050 --> 00:35:10,290
then come up with the visualization yeah

00:35:04,550 --> 00:35:12,390
how do you do credentials the

00:35:10,290 --> 00:35:14,520
credentials are the question was like

00:35:12,390 --> 00:35:18,180
how do we manage credentials the

00:35:14,520 --> 00:35:30,390
credentials are encrypted and stored in

00:35:18,180 --> 00:35:33,150
the database yes so the question is like

00:35:30,390 --> 00:35:36,270
for the deployment pipelines do you use

00:35:33,150 --> 00:35:38,730
deployment agents are saying so the way

00:35:36,270 --> 00:35:41,190
we have done I mean like how we have I

00:35:38,730 --> 00:35:43,650
mean there's a known use case of using

00:35:41,190 --> 00:35:46,500
with Jenkins with Jenkins are there is a

00:35:43,650 --> 00:35:48,569
plug-in that is built for exclusively

00:35:46,500 --> 00:35:51,420
for hygeia once the plug-in is installed

00:35:48,569 --> 00:35:53,280
on the Jenkins masters all the build

00:35:51,420 --> 00:35:55,859
data anything that is I mean like the

00:35:53,280 --> 00:35:58,770
build data the deploy data they can be

00:35:55,859 --> 00:36:00,030
pushed to hygeia on like a even basis so

00:35:58,770 --> 00:36:02,040
as soon as the build happens the

00:36:00,030 --> 00:36:07,140
deployment happens the deployment data

00:36:02,040 --> 00:36:10,170
gets pushed into hygeia yes jenkins for

00:36:07,140 --> 00:36:12,119
the agents but again as i said i mean

00:36:10,170 --> 00:36:14,609
that is one way and the other way is

00:36:12,119 --> 00:36:17,280
like if you have something like a circle

00:36:14,609 --> 00:36:20,040
CI then we don't have

00:36:17,280 --> 00:36:22,470
collector actively but a collector can

00:36:20,040 --> 00:36:24,599
be written to query circle CI to get the

00:36:22,470 --> 00:36:26,400
deployment information so that the

00:36:24,599 --> 00:36:30,680
collector will put it into the canonical

00:36:26,400 --> 00:36:30,680
data form which are hygeia supports

00:36:33,140 --> 00:36:41,250
sorry you deploy excel deploy yes there

00:36:39,599 --> 00:36:44,580
is a collector I mean you're talking

00:36:41,250 --> 00:36:54,030
about the support for excel deploy yes

00:36:44,580 --> 00:36:56,280
there is a collector yeah okay it was

00:36:54,030 --> 00:36:59,970
from a community I mean like it was a

00:36:56,280 --> 00:37:03,710
community contribution so at least I do

00:36:59,970 --> 00:37:06,900
not have an insight on the excel deploy

00:37:03,710 --> 00:37:08,970
we don't use excel deploy yeah the

00:37:06,900 --> 00:37:11,670
collector slide which was showing us

00:37:08,970 --> 00:37:14,160
like all the collectors that we are I

00:37:11,670 --> 00:37:15,750
mean we support and some of them were

00:37:14,160 --> 00:37:19,109
built by Capital One which are used by

00:37:15,750 --> 00:37:20,970
Capital One and other folks there are a

00:37:19,109 --> 00:37:23,190
lot of I mean quite amount of collectors

00:37:20,970 --> 00:37:24,990
which was contributed by the community

00:37:23,190 --> 00:37:27,930
either individually or at the

00:37:24,990 --> 00:37:38,250
organization level show me with you yeah

00:37:27,930 --> 00:37:42,960
yes so the question was like what kind

00:37:38,250 --> 00:37:45,599
of deployment strategy we used so it's a

00:37:42,960 --> 00:37:54,660
combination of blue green cannery it's

00:37:45,599 --> 00:37:56,609
case by case basis so hi Gia the mean if

00:37:54,660 --> 00:37:57,780
you look at domain like or the features

00:37:56,609 --> 00:37:59,940
of high here

00:37:57,780 --> 00:38:01,830
hi gia is more about that the data

00:37:59,940 --> 00:38:04,980
collection the tool data collection it's

00:38:01,830 --> 00:38:07,170
not about like you know make decision so

00:38:04,980 --> 00:38:09,330
it kind of like its data collection

00:38:07,170 --> 00:38:11,970
analysis on top of the data that's being

00:38:09,330 --> 00:38:13,830
collected and provide you a status which

00:38:11,970 --> 00:38:17,339
says like hey I'm ready to do this so

00:38:13,830 --> 00:38:19,710
basically the mean the switch basically

00:38:17,339 --> 00:38:22,440
has to be done externally you can

00:38:19,710 --> 00:38:24,390
probably use a homegrown tool or some

00:38:22,440 --> 00:38:26,820
kind of like an already existing tool to

00:38:24,390 --> 00:38:28,440
perform those actions but the way high

00:38:26,820 --> 00:38:30,600
gear comes into the picture is it will

00:38:28,440 --> 00:38:34,770
give you the ability to say like hey go

00:38:30,600 --> 00:38:37,380
go forward or go back it helps you make

00:38:34,770 --> 00:38:39,720
the decision so I think we're at time

00:38:37,380 --> 00:38:41,130
here but again I invite you guys if you

00:38:39,720 --> 00:38:42,360
have additional questions or just want

00:38:41,130 --> 00:38:44,280
to chat with us come visit our booth

00:38:42,360 --> 00:38:45,660
down at first floor to the right of

00:38:44,280 --> 00:38:49,580
registration and thank you everybody so

00:38:45,660 --> 00:38:49,580
much for your time today thank you

00:38:50,990 --> 00:39:01,329

YouTube URL: https://www.youtube.com/watch?v=91TB_XMDjXA


