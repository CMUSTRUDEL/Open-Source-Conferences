Title: Indira Pranabudi  – Perceived Performance, And Why It Matters
Publication date: 2019-11-04
Playlist: All Things Open 2019
Description: 
	In our quest to improve user experience, we often end up bloating websites with too much content, leading to performance issues. Slow websites are a pain, and studies have shown that up to 40% of users abandon pages that take three or more seconds to load. In this session I’ll talk about how we can improve performance as well as what *perceived* performance is and how we can leverage it.
Captions: 
	00:00:00,180 --> 00:00:04,779
[Music]

00:00:06,230 --> 00:00:10,290
first of all thank you so much to all

00:00:08,400 --> 00:00:11,309
things have been for having me my name

00:00:10,290 --> 00:00:14,099
is Indira I'm here to talk about

00:00:11,309 --> 00:00:16,770
perceived performance so before we begin

00:00:14,099 --> 00:00:18,210
a little bit about me I'm Indira I'm a

00:00:16,770 --> 00:00:19,560
software engineer at Vistaprint if you

00:00:18,210 --> 00:00:21,359
don't know us for an e-commerce company

00:00:19,560 --> 00:00:23,160
based in Boston and our goal is to

00:00:21,359 --> 00:00:24,930
empower micro businesses to live their

00:00:23,160 --> 00:00:26,699
dreams and we do this by printing

00:00:24,930 --> 00:00:28,680
customized marketing materials so things

00:00:26,699 --> 00:00:30,539
like business cards posters flyers

00:00:28,680 --> 00:00:32,160
banners basically anything you can think

00:00:30,539 --> 00:00:35,010
of that can be printed on we probably

00:00:32,160 --> 00:00:36,510
manufacture that in my spare time I'm

00:00:35,010 --> 00:00:38,129
also an editor for this nonprofit

00:00:36,510 --> 00:00:40,500
organization based out of Indonesia

00:00:38,129 --> 00:00:43,379
we're called Indonesia and global and

00:00:40,500 --> 00:00:45,930
our goal is to inspire the youth and I

00:00:43,379 --> 00:00:47,010
do this basically I'm an editor and I

00:00:45,930 --> 00:00:49,500
get three different people to write

00:00:47,010 --> 00:00:52,289
articles about studying abroad working

00:00:49,500 --> 00:00:54,539
abroad and things like that and also fun

00:00:52,289 --> 00:00:56,699
fact about me I'm actually an advanced

00:00:54,539 --> 00:00:58,050
open-water scuba diver I

00:00:56,699 --> 00:01:01,440
I love sharks I think they're

00:00:58,050 --> 00:01:03,539
misunderstood fun fact the largest shark

00:01:01,440 --> 00:01:07,170
is actually the whale shark and they eat

00:01:03,539 --> 00:01:08,700
plankton and another fun fact people are

00:01:07,170 --> 00:01:10,710
actually statistically speaking more

00:01:08,700 --> 00:01:13,350
likely to die from coconuts falling on

00:01:10,710 --> 00:01:16,020
their head then from sharks alright so

00:01:13,350 --> 00:01:18,689
with that I'm going to start talking

00:01:16,020 --> 00:01:20,759
about perceive performance so a bit of

00:01:18,689 --> 00:01:23,280
background last year I joined 18 at

00:01:20,759 --> 00:01:25,140
Vistaprint I was focused on improving

00:01:23,280 --> 00:01:26,220
the mobile experience and when I talk

00:01:25,140 --> 00:01:28,229
about the mobile experience I'm just

00:01:26,220 --> 00:01:29,790
talking about the experience that our

00:01:28,229 --> 00:01:31,530
mobile customers get when they go to our

00:01:29,790 --> 00:01:33,090
website so it's one website but the

00:01:31,530 --> 00:01:35,220
experience can be drastically different

00:01:33,090 --> 00:01:37,560
depending on whether you're accessing it

00:01:35,220 --> 00:01:39,930
from a desktop or mobile and the reasons

00:01:37,560 --> 00:01:42,600
of this there's a lot but the main thing

00:01:39,930 --> 00:01:44,610
is because phones typically don't have

00:01:42,600 --> 00:01:46,320
as much computing power and another

00:01:44,610 --> 00:01:48,390
thing is if you're on a phone typically

00:01:46,320 --> 00:01:50,159
you have poor connection because you're

00:01:48,390 --> 00:01:52,290
less likely to be connected to Wi-Fi and

00:01:50,159 --> 00:01:54,420
things like that so overall poor

00:01:52,290 --> 00:01:56,159
performance typically leads to poor user

00:01:54,420 --> 00:01:57,990
experience so this talk is going to be

00:01:56,159 --> 00:02:01,140
kind of a summary of all the different

00:01:57,990 --> 00:02:03,840
things that we did to improve that so

00:02:01,140 --> 00:02:07,259
what actually is performance performance

00:02:03,840 --> 00:02:08,670
is typically defined as how fast your

00:02:07,259 --> 00:02:10,110
website loads and usually this is

00:02:08,670 --> 00:02:11,580
measured from the time that the user

00:02:10,110 --> 00:02:13,800
actually typed something into the URL

00:02:11,580 --> 00:02:17,050
bar to the time that they actually

00:02:13,800 --> 00:02:19,510
that the page actually loads perceive

00:02:17,050 --> 00:02:21,220
performance on the other hand is how

00:02:19,510 --> 00:02:23,260
fast you users think the page actually

00:02:21,220 --> 00:02:25,810
loads because when it comes to making a

00:02:23,260 --> 00:02:27,430
good user experience it what it is what

00:02:25,810 --> 00:02:29,140
the users actually experience that

00:02:27,430 --> 00:02:30,460
matters not all the fancy things that

00:02:29,140 --> 00:02:34,200
you're doing as a developer behind the

00:02:30,460 --> 00:02:36,520
scenes how do you measure performance

00:02:34,200 --> 00:02:38,470
there are two metrics that people

00:02:36,520 --> 00:02:40,630
typically use the first thing is called

00:02:38,470 --> 00:02:42,970
Dom content loaded and it's an event

00:02:40,630 --> 00:02:45,010
that's fired by the browser when you

00:02:42,970 --> 00:02:48,160
find it when it finishes loading the

00:02:45,010 --> 00:02:50,590
initial HTML as not including all the

00:02:48,160 --> 00:02:52,900
dependent resources the load event on

00:02:50,590 --> 00:02:54,850
the other hand is the thing that happens

00:02:52,900 --> 00:02:56,920
a bit later on the lifecycle and it's

00:02:54,850 --> 00:02:59,230
when it finishes loading the HTML

00:02:56,920 --> 00:03:01,180
parsing it as well as avoiding all the

00:02:59,230 --> 00:03:04,240
other dependent resources such as images

00:03:01,180 --> 00:03:05,890
style sheets and whatnot so these two

00:03:04,240 --> 00:03:07,540
metrics are really important when you're

00:03:05,890 --> 00:03:09,160
talking about performance but

00:03:07,540 --> 00:03:12,370
unfortunately they're not very user

00:03:09,160 --> 00:03:13,750
centric metrics if we're talking about

00:03:12,370 --> 00:03:16,360
perceived performance there are actually

00:03:13,750 --> 00:03:20,050
other moments and the users journey that

00:03:16,360 --> 00:03:21,930
matter more to them so let's talk about

00:03:20,050 --> 00:03:23,920
users experience from start to finish

00:03:21,930 --> 00:03:26,440
typically you start with a blank screen

00:03:23,920 --> 00:03:28,780
and then you type into the URL bar what

00:03:26,440 --> 00:03:30,520
you're looking for and the first thing

00:03:28,780 --> 00:03:32,050
that they're going to wonder is well is

00:03:30,520 --> 00:03:34,120
this navigation actually happening yet

00:03:32,050 --> 00:03:36,100
and you typically measure this using the

00:03:34,120 --> 00:03:38,530
first paint and first content full paint

00:03:36,100 --> 00:03:39,790
metrics so the first paint as the name

00:03:38,530 --> 00:03:41,470
suggests is basically when you start

00:03:39,790 --> 00:03:43,390
seeing something on the screen and it's

00:03:41,470 --> 00:03:45,250
a really nice visual cue that sends a

00:03:43,390 --> 00:03:46,750
message to the user that like hey this

00:03:45,250 --> 00:03:49,360
navigation is actually happening like

00:03:46,750 --> 00:03:51,160
we're working on it first content will

00:03:49,360 --> 00:03:52,120
paint on the other hand is when you

00:03:51,160 --> 00:03:53,590
start seeing something on the screen

00:03:52,120 --> 00:03:56,020
that kind of vaguely resembles what

00:03:53,590 --> 00:03:58,180
you're there for so after they after

00:03:56,020 --> 00:03:59,440
this the the second thing that you're

00:03:58,180 --> 00:04:01,420
gonna that the users are going to wonder

00:03:59,440 --> 00:04:03,550
is well when is the content on the page

00:04:01,420 --> 00:04:05,860
actually useful or when can I actually

00:04:03,550 --> 00:04:07,510
engage with this information and that is

00:04:05,860 --> 00:04:09,030
typically called the first meaningful

00:04:07,510 --> 00:04:11,380
paint

00:04:09,030 --> 00:04:13,120
so the first meaningful paint is gonna

00:04:11,380 --> 00:04:14,530
be different according to what website

00:04:13,120 --> 00:04:15,880
you're on because for example if you're

00:04:14,530 --> 00:04:17,320
searching something in Google then the

00:04:15,880 --> 00:04:19,150
first meaningful paint is going to be

00:04:17,320 --> 00:04:21,310
when you start seeing information

00:04:19,150 --> 00:04:22,479
pertaining to where you're googling but

00:04:21,310 --> 00:04:23,800
if you're on the New York Times for

00:04:22,479 --> 00:04:25,210
example then the first meaningful paint

00:04:23,800 --> 00:04:25,620
is going to be when you start seeing

00:04:25,210 --> 00:04:27,419
like

00:04:25,620 --> 00:04:29,010
title of the article as well as maybe

00:04:27,419 --> 00:04:31,230
the first paragraph of whatever it is

00:04:29,010 --> 00:04:33,240
that you're reading so first meaningful

00:04:31,230 --> 00:04:35,250
paint is varies depending on what

00:04:33,240 --> 00:04:37,860
website you're on but I think that this

00:04:35,250 --> 00:04:38,910
is probably the most important metric

00:04:37,860 --> 00:04:41,100
when we're talking about perceived

00:04:38,910 --> 00:04:43,169
performance and that's because if you

00:04:41,100 --> 00:04:44,699
can identify the thing on the page that

00:04:43,169 --> 00:04:46,410
is actually the most important and if

00:04:44,699 --> 00:04:48,750
you can make that thing on that page

00:04:46,410 --> 00:04:50,580
appear a lot faster then people probably

00:04:48,750 --> 00:04:53,910
won't care if other things on the page

00:04:50,580 --> 00:04:55,650
take like 10 or 20 seconds to load so

00:04:53,910 --> 00:04:57,870
that's the second metric that we're

00:04:55,650 --> 00:04:59,220
going to talk about the last one is

00:04:57,870 --> 00:05:02,940
called the time to interactive and

00:04:59,220 --> 00:05:04,680
that's essentially when that's at the

00:05:02,940 --> 00:05:05,910
end of the life cycle and it's when if

00:05:04,680 --> 00:05:07,590
you think about like having buttons on a

00:05:05,910 --> 00:05:09,090
page it's when those buttons actually

00:05:07,590 --> 00:05:12,300
start functioning and doing things that

00:05:09,090 --> 00:05:14,010
matter so these metrics are what we're

00:05:12,300 --> 00:05:16,050
going to talk about in terms of

00:05:14,010 --> 00:05:17,639
perceived performance and unlike the

00:05:16,050 --> 00:05:19,889
traditional performance metrics these

00:05:17,639 --> 00:05:21,270
metrics are actually a lot harder to

00:05:19,889 --> 00:05:24,930
measure because they vary a lot

00:05:21,270 --> 00:05:26,699
depending on the website so they're not

00:05:24,930 --> 00:05:28,500
actually events that are exposed on the

00:05:26,699 --> 00:05:29,910
browser so it's harder to measure but we

00:05:28,500 --> 00:05:33,539
can actually create our own custom

00:05:29,910 --> 00:05:35,220
metrics for this so you if you can if

00:05:33,539 --> 00:05:37,229
you know that the important image/jpeg

00:05:35,220 --> 00:05:38,370
is the most important thing that is on

00:05:37,229 --> 00:05:40,260
your page then you can use the

00:05:38,370 --> 00:05:41,970
performance api and mark that point in

00:05:40,260 --> 00:05:44,669
time when the image has finished loading

00:05:41,970 --> 00:05:46,470
and then later on you can do performance

00:05:44,669 --> 00:05:49,200
dot get entries by type or performance

00:05:46,470 --> 00:05:51,000
get entries by name to kind of retrieve

00:05:49,200 --> 00:05:53,340
those points in time and it'll return

00:05:51,000 --> 00:05:54,780
basically an array of performance events

00:05:53,340 --> 00:05:55,830
that tell you like okay this is when

00:05:54,780 --> 00:05:57,539
this happen and this is when that

00:05:55,830 --> 00:06:00,450
happens so it's kind of a way that you

00:05:57,539 --> 00:06:01,620
can create your own metrics all right so

00:06:00,450 --> 00:06:03,620
what can I actually do to improve

00:06:01,620 --> 00:06:05,280
perceived performance on my website

00:06:03,620 --> 00:06:06,389
there are three things that were going

00:06:05,280 --> 00:06:08,039
to talk about the first thing is

00:06:06,389 --> 00:06:09,539
progressive image loading the second

00:06:08,039 --> 00:06:10,950
thing is optimizing the critical

00:06:09,539 --> 00:06:14,400
rendering path and the last thing is

00:06:10,950 --> 00:06:15,690
prefetching resources so can I go to a

00:06:14,400 --> 00:06:17,190
show of hands if you've heard of this

00:06:15,690 --> 00:06:21,450
thing before progressive image loading

00:06:17,190 --> 00:06:23,220
all right cool so it's this thing that I

00:06:21,450 --> 00:06:24,630
think was popularized by media in the

00:06:23,220 --> 00:06:26,490
phone I'm mistaken and it's where you

00:06:24,630 --> 00:06:29,520
load a tiny version of the image first

00:06:26,490 --> 00:06:30,840
and then only after that only after load

00:06:29,520 --> 00:06:32,700
time do you actually load the full size

00:06:30,840 --> 00:06:35,010
image and typically you use what is

00:06:32,700 --> 00:06:36,759
called the intersection observer API

00:06:35,010 --> 00:06:39,490
which is fairly new API

00:06:36,759 --> 00:06:40,870
can observe Dom elements and it can tell

00:06:39,490 --> 00:06:42,400
you when those Dom elements are within

00:06:40,870 --> 00:06:43,870
the viewport so you can use this

00:06:42,400 --> 00:06:45,370
technology to figure out all right if

00:06:43,870 --> 00:06:46,809
this image is within the viewport and

00:06:45,370 --> 00:06:49,659
then I'm going to load the final like

00:06:46,809 --> 00:06:50,979
full-size version of the image and it

00:06:49,659 --> 00:06:52,900
does mean that in total you're actually

00:06:50,979 --> 00:06:54,039
downloading more images but it does save

00:06:52,900 --> 00:06:55,569
you a lot of time because you don't have

00:06:54,039 --> 00:06:58,210
to download images that the user might

00:06:55,569 --> 00:07:01,300
not even need so that's one thing you

00:06:58,210 --> 00:07:03,370
can do another variation of this is what

00:07:01,300 --> 00:07:04,870
you do does worry it actually loads not

00:07:03,370 --> 00:07:08,259
a tiny version of the image but it just

00:07:04,870 --> 00:07:09,849
loads kind of the default color another

00:07:08,259 --> 00:07:11,319
version that I was gonna show you guys

00:07:09,849 --> 00:07:13,029
but this is a PDF and doesn't work

00:07:11,319 --> 00:07:14,589
anymore unfortunately is where you load

00:07:13,029 --> 00:07:16,870
kind of a skeleton and you can add like

00:07:14,589 --> 00:07:18,909
animations to make that thing a period

00:07:16,870 --> 00:07:20,529
faster so this is a screenshot of a

00:07:18,909 --> 00:07:22,899
misterben website and if you search

00:07:20,529 --> 00:07:25,120
something like business cards or posters

00:07:22,899 --> 00:07:27,610
or whatever as it's retrieving the

00:07:25,120 --> 00:07:29,199
search results it'll kind of give you

00:07:27,610 --> 00:07:31,149
kind of an animation so that it's kind

00:07:29,199 --> 00:07:33,300
of telling the user that like hey we're

00:07:31,149 --> 00:07:35,680
working on this something's gonna happen

00:07:33,300 --> 00:07:37,300
so the second thing that I want to talk

00:07:35,680 --> 00:07:38,800
about is optimizing the critical

00:07:37,300 --> 00:07:40,479
rendering path and the critical

00:07:38,800 --> 00:07:42,520
rendering path is essentially all the

00:07:40,479 --> 00:07:44,919
steps that need to happen between the

00:07:42,520 --> 00:07:47,439
time the browser downloads the HTML CSS

00:07:44,919 --> 00:07:49,479
as well as all the other assets and what

00:07:47,439 --> 00:07:51,370
it needs to actually turn those turn

00:07:49,479 --> 00:07:53,169
those bytes in to render pixels on the

00:07:51,370 --> 00:07:54,699
browser it's a pretty complicated

00:07:53,169 --> 00:07:55,800
process but we'll try to touch on some

00:07:54,699 --> 00:07:58,180
of the basics

00:07:55,800 --> 00:08:01,240
the first concept that's important to

00:07:58,180 --> 00:08:03,249
know is render blocking resources so if

00:08:01,240 --> 00:08:05,259
a resource is render blocking that means

00:08:03,249 --> 00:08:07,330
that you can the browser can't really

00:08:05,259 --> 00:08:09,520
start rendering anything until it has

00:08:07,330 --> 00:08:11,919
those resources so a good example of

00:08:09,520 --> 00:08:12,969
this is HTML because without HTML you

00:08:11,919 --> 00:08:14,770
don't have the Dom and then we know the

00:08:12,969 --> 00:08:16,330
Dom you don't have anything to render so

00:08:14,770 --> 00:08:20,469
HTML is render blocking

00:08:16,330 --> 00:08:22,149
well what about CSS CSS tells a page how

00:08:20,469 --> 00:08:25,240
to style things which may not sound very

00:08:22,149 --> 00:08:28,180
important but this is what Harvard

00:08:25,240 --> 00:08:30,219
Business Review looks like with all its

00:08:28,180 --> 00:08:32,649
resources but this is what it looks like

00:08:30,219 --> 00:08:35,229
without any of the CSS it looks horrible

00:08:32,649 --> 00:08:36,819
you can kind of tell that is these those

00:08:35,229 --> 00:08:38,979
things are probably for navigation but

00:08:36,819 --> 00:08:40,180
you don't only know how to use it so for

00:08:38,979 --> 00:08:41,949
this reason you can kind of say that

00:08:40,180 --> 00:08:44,199
like CSS is render blocking and you

00:08:41,949 --> 00:08:47,110
really really need it so this is an

00:08:44,199 --> 00:08:48,610
opportunity for optimization both before

00:08:47,110 --> 00:08:50,080
we talk about that what about what about

00:08:48,610 --> 00:08:53,440
JavaScript

00:08:50,080 --> 00:08:55,959
it's JavaScript render blocking this is

00:08:53,440 --> 00:08:59,050
what happens when a browser goes to a

00:08:55,959 --> 00:09:01,720
page it has an HTML parser and as it

00:08:59,050 --> 00:09:04,300
parses the HTML as soon as it reaches a

00:09:01,720 --> 00:09:06,310
script tag it'll stop to fetch and then

00:09:04,300 --> 00:09:08,320
execute that script and then continue

00:09:06,310 --> 00:09:08,800
going on to parsing the rest of the

00:09:08,320 --> 00:09:11,290
script

00:09:08,800 --> 00:09:13,360
sorry parsing the rest of the HTML so if

00:09:11,290 --> 00:09:15,100
you have like 20 different scripts that

00:09:13,360 --> 00:09:17,320
means that it that it has to stop 20

00:09:15,100 --> 00:09:19,750
times to actually fetch and then execute

00:09:17,320 --> 00:09:21,760
that script so one thing one pretty easy

00:09:19,750 --> 00:09:24,070
thing you can do is you can actually add

00:09:21,760 --> 00:09:27,250
the async attribute which will tell the

00:09:24,070 --> 00:09:28,660
browser that when when you reach me you

00:09:27,250 --> 00:09:30,880
don't you know you can just fetch me

00:09:28,660 --> 00:09:32,410
asynchronously and then only after that

00:09:30,880 --> 00:09:35,260
that you need to actually stop to

00:09:32,410 --> 00:09:37,540
execute the script so this will speed

00:09:35,260 --> 00:09:39,730
things up a lot but you can go a step

00:09:37,540 --> 00:09:41,829
further actually and you can use the

00:09:39,730 --> 00:09:44,260
defer attribute which tells the browser

00:09:41,829 --> 00:09:45,700
that hey you can fetch the script

00:09:44,260 --> 00:09:47,589
asynchronously and then you don't even

00:09:45,700 --> 00:09:51,250
need to execute the script right away

00:09:47,589 --> 00:09:52,839
you can just do that after load time all

00:09:51,250 --> 00:09:55,660
right so let's go back to CSS for a bit

00:09:52,839 --> 00:09:58,029
we're thinking about ways to improve CSS

00:09:55,660 --> 00:09:59,770
and a lot of websites vistaprint

00:09:58,029 --> 00:10:02,170
included usually you have this UI

00:09:59,770 --> 00:10:03,730
library bundled that you kind of just

00:10:02,170 --> 00:10:06,700
dump on every single page and the

00:10:03,730 --> 00:10:08,529
purpose of that is to kind of tell tell

00:10:06,700 --> 00:10:10,060
pages how to style different things so

00:10:08,529 --> 00:10:12,730
that you get a consistent view across

00:10:10,060 --> 00:10:14,980
different pages on the same website this

00:10:12,730 --> 00:10:19,810
is great but unfortunately this bundle

00:10:14,980 --> 00:10:23,560
is usually really big so we use the

00:10:19,810 --> 00:10:25,959
chrome coverage tool which it tells you

00:10:23,560 --> 00:10:27,610
of all the CSS and JavaScript files that

00:10:25,959 --> 00:10:29,470
you're downloading what percentage of

00:10:27,610 --> 00:10:32,079
those files so you're actually using so

00:10:29,470 --> 00:10:35,500
this is a screenshot from I believe the

00:10:32,079 --> 00:10:38,170
Guardian and if you look at the top it's

00:10:35,500 --> 00:10:39,850
actually downloading 273 kilobytes of

00:10:38,170 --> 00:10:43,029
CSS and I'm guessing who's probably

00:10:39,850 --> 00:10:45,339
there like UI library and out of the 273

00:10:43,029 --> 00:10:48,100
kilobytes is actually only using 20

00:10:45,339 --> 00:10:51,100
kilobytes so 90% of the CSS that is

00:10:48,100 --> 00:10:55,320
downloading is not used at all so this

00:10:51,100 --> 00:10:57,310
is an opportunity for optimization I

00:10:55,320 --> 00:11:00,399
ended up building this tool called the

00:10:57,310 --> 00:11:02,410
critical CSS generator which you can

00:11:00,399 --> 00:11:03,820
give it a URL and then it'll give you

00:11:02,410 --> 00:11:06,280
the critical CSS which

00:11:03,820 --> 00:11:09,160
she's basically the CSS that is used in

00:11:06,280 --> 00:11:11,560
the initial deport so under the hood it

00:11:09,160 --> 00:11:13,180
uses puppeteer which is basically this

00:11:11,560 --> 00:11:14,700
tool that lets you it gives you all the

00:11:13,180 --> 00:11:16,930
information you get from Chrome and

00:11:14,700 --> 00:11:18,790
it'll go through all the different lines

00:11:16,930 --> 00:11:21,010
of CSS and will figure out which parts

00:11:18,790 --> 00:11:23,380
of that CSS is actually used to style

00:11:21,010 --> 00:11:25,990
things and the initial viewport it's

00:11:23,380 --> 00:11:27,730
really handy one thing to note though is

00:11:25,990 --> 00:11:29,620
that you have to generate this

00:11:27,730 --> 00:11:30,970
beforehand so you have to generate this

00:11:29,620 --> 00:11:33,340
and then what you can do is you can

00:11:30,970 --> 00:11:34,750
inline the CSS and then only after load

00:11:33,340 --> 00:11:37,990
time do you need to load the rest of the

00:11:34,750 --> 00:11:39,940
CSS I did have a video I wanted to show

00:11:37,990 --> 00:11:44,560
you guys it doesn't work anymore but

00:11:39,940 --> 00:11:46,090
this is this is a video of we use this

00:11:44,560 --> 00:11:50,110
on the bishop and website last year and

00:11:46,090 --> 00:11:52,120
we saw that on mobile phones with like

00:11:50,110 --> 00:11:53,800
3G or 4G connections it can actually

00:11:52,120 --> 00:11:57,190
improve the first paint up to two

00:11:53,800 --> 00:11:59,430
seconds alright so the last thing I

00:11:57,190 --> 00:12:01,420
wanted to mention is prefetching links

00:11:59,430 --> 00:12:03,400
prefetching is basically a way of

00:12:01,420 --> 00:12:05,980
telling the browser that it might need

00:12:03,400 --> 00:12:07,690
certain resources in the future one

00:12:05,980 --> 00:12:10,450
thing you can do is you can use the DNS

00:12:07,690 --> 00:12:13,240
prefetch attribute and it tells the

00:12:10,450 --> 00:12:16,360
browser to resolve the dns even before

00:12:13,240 --> 00:12:18,640
it needs to you can go a step further

00:12:16,360 --> 00:12:21,880
and you can also pre connect to that so

00:12:18,640 --> 00:12:24,490
it does it resolves the DNS and does the

00:12:21,880 --> 00:12:26,530
TCP handshake and then if you know that

00:12:24,490 --> 00:12:27,160
certain resources are definitely going

00:12:26,530 --> 00:12:28,990
to be used

00:12:27,160 --> 00:12:30,460
you can also prefetch those specific

00:12:28,990 --> 00:12:31,870
resources so if I know that this

00:12:30,460 --> 00:12:32,260
important image is definitely gonna be

00:12:31,870 --> 00:12:34,300
used

00:12:32,260 --> 00:12:35,830
I can prefetch the resource and then the

00:12:34,300 --> 00:12:37,860
browser will go ahead and cache that

00:12:35,830 --> 00:12:39,940
resource even before you need it

00:12:37,860 --> 00:12:40,990
alright so just to close this off I'm

00:12:39,940 --> 00:12:43,540
going to talk about some of the tools

00:12:40,990 --> 00:12:46,330
that we used the first thing is

00:12:43,540 --> 00:12:48,580
webpagetest it's a free website where

00:12:46,330 --> 00:12:51,730
you can run free performance tests on

00:12:48,580 --> 00:12:53,980
real devices using real consumer

00:12:51,730 --> 00:12:55,830
connection speeds it gives you a very

00:12:53,980 --> 00:12:58,150
comprehensive kind of breakdown

00:12:55,830 --> 00:12:59,350
waterfall it can also give you like film

00:12:58,150 --> 00:13:01,150
strips of like different points in time

00:12:59,350 --> 00:13:03,520
it's really useful I would definitely

00:13:01,150 --> 00:13:06,250
recommend it another tool that we really

00:13:03,520 --> 00:13:08,950
used a lot is lighthouse it also gives

00:13:06,250 --> 00:13:10,960
you performance performance metrics and

00:13:08,950 --> 00:13:13,390
the cool thing is that it tries to kind

00:13:10,960 --> 00:13:15,280
of deduce different user centric metrics

00:13:13,390 --> 00:13:16,850
so like first meaningful paint which I

00:13:15,280 --> 00:13:18,949
talked about earlier

00:13:16,850 --> 00:13:21,019
and then another really cool website is

00:13:18,949 --> 00:13:23,119
what does my site cost com

00:13:21,019 --> 00:13:25,519
it actually tells you how much it would

00:13:23,119 --> 00:13:27,079
cost to use to actually access that

00:13:25,519 --> 00:13:29,809
particular website on a postpaid or

00:13:27,079 --> 00:13:31,249
prepaid connection so I found there was

00:13:29,809 --> 00:13:34,309
this page on our website last year that

00:13:31,249 --> 00:13:36,739
actually had a 35 megabyte gif and I

00:13:34,309 --> 00:13:38,269
found that in certain countries it costs

00:13:36,739 --> 00:13:41,179
more than three dollars to load that

00:13:38,269 --> 00:13:42,859
website which is crazy all right so yeah

00:13:41,179 --> 00:13:44,209
that's all for me thank you so much and

00:13:42,859 --> 00:13:45,890
hope you guys have a great rest of your

00:13:44,209 --> 00:13:47,050
day thanks

00:13:45,890 --> 00:13:51,050
[Applause]

00:13:47,050 --> 00:13:51,050
[Music]

00:14:00,060 --> 00:14:02,120

YouTube URL: https://www.youtube.com/watch?v=aP5Rdm_QqOY


