Title: Alolita Sharma - Internationalize your Web App with GlobalizeJS
Publication date: 2019-11-04
Playlist: All Things Open 2019
Description: 
	GlobalizeJS is one of the most popular open source JavaScript internationalization (i18n) libraries used by web applications today. This library is used by large enterprises and by startups. It interfaces with client platforms (e.g., via React) and server implementations (e.g., via NodeJS). GlobalizeJS uses Unicode CLDR locale data and closely follows the Unicode Technical Specification (UTS 35). This talk will introduce key features of GlobalizeJS and highlight new capabilities, performance optimizations and data distribution mechanisms. The talk will also cover feature requests yet to be implemented and how you can contribute to GlobalizeJS.
Captions: 
	00:00:00,180 --> 00:00:10,139
[Music]

00:00:06,319 --> 00:00:12,870
hi everyone can you hear me all right I

00:00:10,139 --> 00:00:15,719
think we're on Mike finally and I've got

00:00:12,870 --> 00:00:18,960
everything set up again let's get

00:00:15,719 --> 00:00:22,910
started I'm a Lolita Sharma I work at

00:00:18,960 --> 00:00:25,220
AWS and I also work a lot in the

00:00:22,910 --> 00:00:28,769
internationalization and language

00:00:25,220 --> 00:00:31,410
technology area I'm a board member at

00:00:28,769 --> 00:00:33,090
the Unicode consortium also and have

00:00:31,410 --> 00:00:35,190
been doing you know a lot of work in

00:00:33,090 --> 00:00:36,899
open source as many of you you know and

00:00:35,190 --> 00:00:40,079
we're all here because we love open

00:00:36,899 --> 00:00:43,469
source so today I'm gonna talk a bit

00:00:40,079 --> 00:00:45,809
about a really cool library globalize

00:00:43,469 --> 00:00:49,680
j/s which many of you may have already

00:00:45,809 --> 00:00:53,190
used or are interested in looking at out

00:00:49,680 --> 00:00:56,640
of the box because it provides a lot of

00:00:53,190 --> 00:01:00,050
support for you know any kind of locales

00:00:56,640 --> 00:01:02,340
Under the Sun in your web application

00:01:00,050 --> 00:01:06,360
how many of you are familiar with

00:01:02,340 --> 00:01:08,760
globalized guess just show of hands so

00:01:06,360 --> 00:01:10,530
if you are so this is good but it's a

00:01:08,760 --> 00:01:13,560
good introduction it'll get you started

00:01:10,530 --> 00:01:17,400
on learning more about you know really

00:01:13,560 --> 00:01:19,500
getting local support and language

00:01:17,400 --> 00:01:23,700
support out of the box for your web

00:01:19,500 --> 00:01:26,310
applications so needless to say

00:01:23,700 --> 00:01:29,130
globalized yes is an open source project

00:01:26,310 --> 00:01:30,930
and for those of you you know who are

00:01:29,130 --> 00:01:33,780
really interested in looking at the code

00:01:30,930 --> 00:01:36,750
or looking at the documentation you can

00:01:33,780 --> 00:01:39,000
totally go to the github repo and get

00:01:36,750 --> 00:01:41,100
involved and even track the issues and

00:01:39,000 --> 00:01:43,710
and just wanted to share some statistics

00:01:41,100 --> 00:01:48,149
it's very popular as you can see from

00:01:43,710 --> 00:01:50,250
the metrics there are you know four

00:01:48,149 --> 00:01:53,850
hundred almost four thousand five

00:01:50,250 --> 00:01:56,250
thousand folks who follow the repo

00:01:53,850 --> 00:01:58,229
actively which is pretty cool and then

00:01:56,250 --> 00:02:01,140
there are 69 contributors it's an old

00:01:58,229 --> 00:02:03,450
project from open source even from open

00:02:01,140 --> 00:02:07,770
source trans standard started in the

00:02:03,450 --> 00:02:09,629
jQuery era in 2010 there are a lot of

00:02:07,770 --> 00:02:11,879
pull requests you know which are still

00:02:09,629 --> 00:02:13,300
open which means it can totally do with

00:02:11,879 --> 00:02:14,920
your help

00:02:13,300 --> 00:02:16,930
and and they have a lot of issues that

00:02:14,920 --> 00:02:19,150
people have worked on and you know

00:02:16,930 --> 00:02:23,050
contributed code to improved you know

00:02:19,150 --> 00:02:25,870
support for localization and it's a very

00:02:23,050 --> 00:02:27,820
active project it has an MIT license

00:02:25,870 --> 00:02:30,670
which is apache2 friendly which means

00:02:27,820 --> 00:02:34,500
that if you're extending the code for

00:02:30,670 --> 00:02:37,000
your you know implementation or your

00:02:34,500 --> 00:02:40,480
application you can actually take the

00:02:37,000 --> 00:02:42,460
baseline and extend it well one of the

00:02:40,480 --> 00:02:44,500
core primary contributors to the code

00:02:42,460 --> 00:02:46,780
again a good you know

00:02:44,500 --> 00:02:49,780
contributor who I've worked with for

00:02:46,780 --> 00:02:54,490
many years very closely is the seniors

00:02:49,780 --> 00:02:56,920
he also works at PayPal and is has been

00:02:54,490 --> 00:02:59,880
involved in the jQuery and J's

00:02:56,920 --> 00:03:02,860
foundation as well as in ACMA

00:02:59,880 --> 00:03:04,810
contributions in the JavaScript world so

00:03:02,860 --> 00:03:06,430
again he's very accessible he's based

00:03:04,810 --> 00:03:08,950
out of Brazil but you can see you know

00:03:06,430 --> 00:03:11,740
like the world of open-source is global

00:03:08,950 --> 00:03:13,720
and a lot of folks work together across

00:03:11,740 --> 00:03:16,480
the world to be able to collaborate

00:03:13,720 --> 00:03:18,220
together and you know solve and help

00:03:16,480 --> 00:03:21,120
each other and solve problems that we

00:03:18,220 --> 00:03:24,090
are all trying to use in our

00:03:21,120 --> 00:03:27,190
applications that we built

00:03:24,090 --> 00:03:29,020
so he's been involved for since the

00:03:27,190 --> 00:03:30,940
beginning of the project almost the

00:03:29,020 --> 00:03:32,260
beginning and I just wanted to share a

00:03:30,940 --> 00:03:33,520
little bit about the history so it's

00:03:32,260 --> 00:03:36,970
2010 right

00:03:33,520 --> 00:03:40,630
fast forward year in October 2019 so

00:03:36,970 --> 00:03:42,670
almost nine years old it was started by

00:03:40,630 --> 00:03:44,860
John Resig how many of you remember John

00:03:42,670 --> 00:03:49,390
Resig still right I mean he was very

00:03:44,860 --> 00:03:51,400
popular you know wrote jQuery and and he

00:03:49,390 --> 00:03:54,280
started the globalization plugin which

00:03:51,400 --> 00:03:58,300
is where it kind of took its original

00:03:54,280 --> 00:04:01,270
roots from and then Microsoft adopted

00:03:58,300 --> 00:04:03,490
and extended it with a developer from

00:04:01,270 --> 00:04:07,860
Microsoft David Reed who took it and

00:04:03,490 --> 00:04:12,750
built on top for a dotnet locale support

00:04:07,860 --> 00:04:15,940
and then later it was decoupled from

00:04:12,750 --> 00:04:18,600
jQuery because you know jQuery got less

00:04:15,940 --> 00:04:20,980
and less popular and other JavaScript

00:04:18,600 --> 00:04:23,860
frameworks and applications became more

00:04:20,980 --> 00:04:25,420
popular and it was renamed the project

00:04:23,860 --> 00:04:28,540
was renamed to globalize

00:04:25,420 --> 00:04:33,400
yes right so that's a little bit about

00:04:28,540 --> 00:04:36,340
the history and in 2016 what we did is

00:04:33,400 --> 00:04:39,280
that we took the project to make it more

00:04:36,340 --> 00:04:42,370
compliant with the language data that

00:04:39,280 --> 00:04:44,950
you can get for locales from cldr from

00:04:42,370 --> 00:04:48,100
unicode's a common data locale data

00:04:44,950 --> 00:04:49,690
project to make sure that it was

00:04:48,100 --> 00:04:51,760
consistent and could provide you

00:04:49,690 --> 00:04:56,590
hundreds of locales and the data

00:04:51,760 --> 00:04:57,820
associated with that in this library so

00:04:56,590 --> 00:05:00,460
I just wanted to kind of give you a

00:04:57,820 --> 00:05:01,900
snapshot of the timeline of the project

00:05:00,460 --> 00:05:03,940
which is super interesting for open

00:05:01,900 --> 00:05:06,220
source projects right because use you

00:05:03,940 --> 00:05:09,310
know as many of you know open source

00:05:06,220 --> 00:05:12,100
projects evolved from a need that some

00:05:09,310 --> 00:05:16,240
of us had you know we wanted to kind of

00:05:12,100 --> 00:05:18,070
support some of the properties or some

00:05:16,240 --> 00:05:20,080
of the data that we wanted to get and

00:05:18,070 --> 00:05:21,900
make it available and and some of the

00:05:20,080 --> 00:05:23,950
functionality around it and

00:05:21,900 --> 00:05:26,800
internationalization is an area where

00:05:23,950 --> 00:05:28,360
you know locale data language data is

00:05:26,800 --> 00:05:30,790
something that is used by everybody

00:05:28,360 --> 00:05:33,490
right so if you are say even building

00:05:30,790 --> 00:05:36,100
and web application today which supports

00:05:33,490 --> 00:05:36,640
English and Spanish for different

00:05:36,100 --> 00:05:39,880
markets

00:05:36,640 --> 00:05:41,470
you need to have locale data that is you

00:05:39,880 --> 00:05:43,570
don't have to hard code it in your

00:05:41,470 --> 00:05:45,580
application but you can actually pull it

00:05:43,570 --> 00:05:49,090
out of the box by using a library like

00:05:45,580 --> 00:05:50,950
globalize so as you can see from this

00:05:49,090 --> 00:05:54,940
and I won't dwell on it too much you can

00:05:50,950 --> 00:05:57,250
see that in April 2015 the project

00:05:54,940 --> 00:05:59,140
started doing regular releases which is

00:05:57,250 --> 00:06:01,120
you know from when it evolved from being

00:05:59,140 --> 00:06:02,530
just you know hey this is my fun project

00:06:01,120 --> 00:06:05,680
you know I was just working on it to

00:06:02,530 --> 00:06:07,390
becoming more having more and more users

00:06:05,680 --> 00:06:10,480
more and more applications that were

00:06:07,390 --> 00:06:13,150
using and binding with it and to to have

00:06:10,480 --> 00:06:17,890
regular releases and as you can see in

00:06:13,150 --> 00:06:20,620
2015 you know the first data payload of

00:06:17,890 --> 00:06:24,820
cldr data was pulled in to the project

00:06:20,620 --> 00:06:27,820
and really you know enable developers to

00:06:24,820 --> 00:06:31,470
kind of keep the content loading

00:06:27,820 --> 00:06:35,380
separated out from other functionality

00:06:31,470 --> 00:06:39,009
you as you move forward fast for over

00:06:35,380 --> 00:06:41,349
2016 once the basic functionality

00:06:39,009 --> 00:06:42,849
in then you know we were looking at

00:06:41,349 --> 00:06:45,069
performance how do you make it more

00:06:42,849 --> 00:06:47,860
performant how do you deliver data in

00:06:45,069 --> 00:06:48,639
smaller chunks so that you don't have to

00:06:47,860 --> 00:06:51,669
look you know

00:06:48,639 --> 00:06:53,919
load all the local data for all the

00:06:51,669 --> 00:06:55,749
locales that you could possibly have but

00:06:53,919 --> 00:06:58,089
be very specific to what you're learning

00:06:55,749 --> 00:07:00,550
and optimize the library for being able

00:06:58,089 --> 00:07:02,710
to handle that and that also means that

00:07:00,550 --> 00:07:05,229
for example we added web back support

00:07:02,710 --> 00:07:08,860
right which is which is used by many of

00:07:05,229 --> 00:07:11,490
us still for building out and pulling

00:07:08,860 --> 00:07:14,559
data and distributing it similarly and

00:07:11,490 --> 00:07:16,539
then we kind of moved on refactored you

00:07:14,559 --> 00:07:19,889
know continued to refactor the internal

00:07:16,539 --> 00:07:22,509
code and added the number of parser

00:07:19,889 --> 00:07:24,909
again as you know many of you use

00:07:22,509 --> 00:07:26,379
date/time formats out of the box you

00:07:24,909 --> 00:07:28,419
don't want to hard code it in your

00:07:26,379 --> 00:07:31,330
applications so you want to be able to

00:07:28,419 --> 00:07:34,120
pull that you know for any locale across

00:07:31,330 --> 00:07:36,669
the globe right just call a library use

00:07:34,120 --> 00:07:39,849
an API and be able to get the format's

00:07:36,669 --> 00:07:42,459
that you need for any locale around the

00:07:39,849 --> 00:07:44,949
block similarly number enhancements

00:07:42,459 --> 00:07:47,740
number fixes units you know a lot of lot

00:07:44,949 --> 00:07:49,509
of enhancements as we go along and there

00:07:47,740 --> 00:07:51,610
are a lot more issues as I highlighted

00:07:49,509 --> 00:07:53,559
earlier so it's something that is a very

00:07:51,610 --> 00:07:56,050
live project and people you know

00:07:53,559 --> 00:07:59,169
constantly are using the library in many

00:07:56,050 --> 00:08:00,699
different ways and and you can totally

00:07:59,169 --> 00:08:02,729
get involved if you're looking at

00:08:00,699 --> 00:08:05,729
solving a particular problem you know of

00:08:02,729 --> 00:08:11,259
serving data or using data in different

00:08:05,729 --> 00:08:13,300
geographies so just again as an as a

00:08:11,259 --> 00:08:15,729
project it's really nice because it's

00:08:13,300 --> 00:08:17,589
not a huge project and at the same time

00:08:15,729 --> 00:08:22,360
it's not a very small project either

00:08:17,589 --> 00:08:24,519
given its usage it it has a roadmap

00:08:22,360 --> 00:08:27,759
where you know what we have been doing

00:08:24,519 --> 00:08:32,769
is working closely with the ACMA 402

00:08:27,759 --> 00:08:36,069
tc39 work group and driving some of the

00:08:32,769 --> 00:08:39,399
changes that we need to support like for

00:08:36,069 --> 00:08:42,219
example relative date time which has now

00:08:39,399 --> 00:08:45,010
you know been adopted by the ACMA 402

00:08:42,219 --> 00:08:47,290
standard and then pull it back into

00:08:45,010 --> 00:08:50,620
other implementations also so you can

00:08:47,290 --> 00:08:52,870
see the evolution of features that users

00:08:50,620 --> 00:08:55,420
need also going in from the

00:08:52,870 --> 00:08:57,730
actual implementation in globalized yes

00:08:55,420 --> 00:09:00,450
than going into the standard and then

00:08:57,730 --> 00:09:03,550
getting adopted by major platforms

00:09:00,450 --> 00:09:06,520
through the specification itself so

00:09:03,550 --> 00:09:09,160
these are several of the you know

00:09:06,520 --> 00:09:11,260
projects that are on our roadmap for you

00:09:09,160 --> 00:09:16,480
know building in that support into the

00:09:11,260 --> 00:09:21,029
library so just deep diving into

00:09:16,480 --> 00:09:21,029
features that globalized yes provides

00:09:21,240 --> 00:09:26,560
there basic things right formatting and

00:09:24,370 --> 00:09:28,690
parsing how many of you spend a lot of

00:09:26,560 --> 00:09:31,150
time trying to figure out what the

00:09:28,690 --> 00:09:32,800
format's are for different you know

00:09:31,150 --> 00:09:34,810
locales and different regions

00:09:32,800 --> 00:09:37,210
right you build it into your code if you

00:09:34,810 --> 00:09:39,850
find it on you know you go ahead and

00:09:37,210 --> 00:09:41,650
search for it and you find the data and

00:09:39,850 --> 00:09:44,290
you just build it in or maybe hard coded

00:09:41,650 --> 00:09:47,440
but what happens is when you are going

00:09:44,290 --> 00:09:50,470
past your initial target languages and

00:09:47,440 --> 00:09:52,210
locales what do you do at that point in

00:09:50,470 --> 00:09:54,550
time you want to build this support in

00:09:52,210 --> 00:09:56,730
out-of-the-box and you want to use a

00:09:54,550 --> 00:09:59,950
library that is actually serving you

00:09:56,730 --> 00:10:03,760
support you know API is for formatting

00:09:59,950 --> 00:10:07,029
for parsing reading in currency dates

00:10:03,760 --> 00:10:08,980
relative time numbers units you know and

00:10:07,029 --> 00:10:13,390
and and different kinds of language

00:10:08,980 --> 00:10:16,209
specific data that you need for a really

00:10:13,390 --> 00:10:17,830
good user experience for your user at

00:10:16,209 --> 00:10:21,480
the end of the day for your web

00:10:17,830 --> 00:10:23,080
application so needless to say

00:10:21,480 --> 00:10:26,140
globalized yes

00:10:23,080 --> 00:10:28,900
you know implements these features like

00:10:26,140 --> 00:10:31,390
number date formatting relative date

00:10:28,900 --> 00:10:34,480
time currency currency is massive

00:10:31,390 --> 00:10:38,110
because at PayPal when we were working

00:10:34,480 --> 00:10:40,120
on this implementation we needed to have

00:10:38,110 --> 00:10:43,060
currency transactions you know being

00:10:40,120 --> 00:10:46,089
supported out-of-the-box across hundreds

00:10:43,060 --> 00:10:48,339
of countries right and at that scale for

00:10:46,089 --> 00:10:50,740
in payment application how do you make

00:10:48,339 --> 00:10:53,680
sure that that formatting that parsing

00:10:50,740 --> 00:10:57,610
that you know handling of currency

00:10:53,680 --> 00:11:00,610
transactions accurately happens locale

00:10:57,610 --> 00:11:02,800
across locales transparently and at that

00:11:00,610 --> 00:11:04,839
scale you really need to automate and be

00:11:02,800 --> 00:11:06,610
able to have a library such as globalize

00:11:04,839 --> 00:11:08,649
the yes available that

00:11:06,610 --> 00:11:11,920
you can use out of the box the cool

00:11:08,649 --> 00:11:14,380
thing also about globalize Jas is that

00:11:11,920 --> 00:11:16,990
it is again standards compliant right so

00:11:14,380 --> 00:11:20,010
if you how many of you you have looked

00:11:16,990 --> 00:11:23,320
at UTS 35 which is the technical

00:11:20,010 --> 00:11:26,589
specification for locales are you

00:11:23,320 --> 00:11:28,720
familiar with it well if you're not

00:11:26,589 --> 00:11:30,730
please go and look at it because it

00:11:28,720 --> 00:11:35,200
actually gives you an enormous amount of

00:11:30,730 --> 00:11:38,079
detail in the way that locale data is

00:11:35,200 --> 00:11:39,880
handled right and in a world that we

00:11:38,079 --> 00:11:41,380
live in whether that's you know machine

00:11:39,880 --> 00:11:43,990
learning that we are doing or we are

00:11:41,380 --> 00:11:47,079
doing data analytics or data science you

00:11:43,990 --> 00:11:49,120
really want to be able to handle massive

00:11:47,079 --> 00:11:51,640
scales of data you know that's currency

00:11:49,120 --> 00:11:53,620
data payments you know transactions of

00:11:51,640 --> 00:11:56,920
different types or analytics with

00:11:53,620 --> 00:11:59,079
timestamps even coming in on log data

00:11:56,920 --> 00:12:03,089
how do you translate that across back

00:11:59,079 --> 00:12:05,589
and forth and this is where you know the

00:12:03,089 --> 00:12:07,600
reality hits right because you have to

00:12:05,589 --> 00:12:11,500
be able to have be able to do this at

00:12:07,600 --> 00:12:15,370
scale so CLD cldr data helps you do that

00:12:11,500 --> 00:12:17,140
and also there's another data set which

00:12:15,370 --> 00:12:20,079
is super important we all take it for

00:12:17,140 --> 00:12:23,680
granted which is the IAEA data set for

00:12:20,079 --> 00:12:25,540
time zones and you know again it's

00:12:23,680 --> 00:12:28,870
something that the international

00:12:25,540 --> 00:12:31,899
organization IAA provides but it's very

00:12:28,870 --> 00:12:34,839
unusable for most applications you know

00:12:31,899 --> 00:12:38,680
if if you are having to deal with it

00:12:34,839 --> 00:12:41,860
real time so what globalized EAS does is

00:12:38,680 --> 00:12:46,329
actually provides you and I'll come back

00:12:41,860 --> 00:12:49,209
to this it provides you the this i na

00:12:46,329 --> 00:12:51,550
data as js in JSON format

00:12:49,209 --> 00:12:54,160
that you can pull in to any any of your

00:12:51,550 --> 00:12:56,589
applications and be able to use that

00:12:54,160 --> 00:12:59,170
right and it's just interoperability

00:12:56,589 --> 00:13:02,410
across time zones which you can actually

00:12:59,170 --> 00:13:06,579
use through JSON in a JSON format for

00:13:02,410 --> 00:13:08,410
your application it's open source so you

00:13:06,579 --> 00:13:10,029
can use it right and that's a great

00:13:08,410 --> 00:13:11,709
advantage you don't have to go and write

00:13:10,029 --> 00:13:14,470
another parser to go and bring that

00:13:11,709 --> 00:13:19,750
application and you know import it and

00:13:14,470 --> 00:13:20,620
and do all the maneuvering yourself so

00:13:19,750 --> 00:13:24,960
going back

00:13:20,620 --> 00:13:27,100
to again Unicode cldr

00:13:24,960 --> 00:13:28,810
for those of you who are not familiar

00:13:27,100 --> 00:13:31,690
with this this is a very integral part

00:13:28,810 --> 00:13:34,090
of providing global support for any web

00:13:31,690 --> 00:13:36,970
application out-of-the-box it's been

00:13:34,090 --> 00:13:38,950
built into you know platforms it's been

00:13:36,970 --> 00:13:42,850
built into programming languages in

00:13:38,950 --> 00:13:47,200
terms of how many of you have used ICU

00:13:42,850 --> 00:13:49,510
as a library some of you have there's a

00:13:47,200 --> 00:13:53,320
few who have been doing C C++ or Java

00:13:49,510 --> 00:13:55,750
Scala for a long time you have to have

00:13:53,320 --> 00:13:57,640
interacted with ICU because it's baked

00:13:55,750 --> 00:13:59,950
into the language and it's the

00:13:57,640 --> 00:14:02,080
internationalization components units

00:13:59,950 --> 00:14:05,950
library right and it's something that's

00:14:02,080 --> 00:14:07,840
baked into the platform itself but it

00:14:05,950 --> 00:14:11,190
supports languages and look house out of

00:14:07,840 --> 00:14:13,990
the box and Unicode cldr is the data

00:14:11,190 --> 00:14:16,570
that is associated with each one of

00:14:13,990 --> 00:14:21,730
these locales that you can actually use

00:14:16,570 --> 00:14:23,770
so the C LDR is used for building blocks

00:14:21,730 --> 00:14:25,210
which saw you know all the software that

00:14:23,770 --> 00:14:27,970
we use whether that's a Java or

00:14:25,210 --> 00:14:31,000
JavaScript or C C++ and other major

00:14:27,970 --> 00:14:33,100
languages even there is importing which

00:14:31,000 --> 00:14:35,320
is ongoing for rust for those of you who

00:14:33,100 --> 00:14:36,990
use rust so there's a lot of language

00:14:35,320 --> 00:14:39,970
support you know that is needed for

00:14:36,990 --> 00:14:43,090
actually being able to provide language

00:14:39,970 --> 00:14:45,250
support out of the box it's the it's the

00:14:43,090 --> 00:14:47,560
largest data set and it's a standard

00:14:45,250 --> 00:14:52,000
data set that is maintained and used by

00:14:47,560 --> 00:14:55,360
all the key large you know enterprises

00:14:52,000 --> 00:14:57,460
across the entire IT industry so it's

00:14:55,360 --> 00:14:59,250
not something that's you know not being

00:14:57,460 --> 00:15:02,980
maintained it is actually currently

00:14:59,250 --> 00:15:04,240
consumed by almost everybody and and

00:15:02,980 --> 00:15:06,130
then there are thousands of

00:15:04,240 --> 00:15:07,240
organizations who just pull this data so

00:15:06,130 --> 00:15:09,340
it's very important to kind of

00:15:07,240 --> 00:15:12,610
understand this because you can use it

00:15:09,340 --> 00:15:16,540
in a portable way out of the box for

00:15:12,610 --> 00:15:18,570
your web application right what it does

00:15:16,540 --> 00:15:22,120
provide you is again as I mentioned

00:15:18,570 --> 00:15:24,040
formatting so formats date formats and

00:15:22,120 --> 00:15:27,610
number formats you know all the

00:15:24,040 --> 00:15:30,340
complexity of locale specific formats

00:15:27,610 --> 00:15:33,589
like for example in the US we use you

00:15:30,340 --> 00:15:38,509
know month/day/year

00:15:33,589 --> 00:15:39,889
in in european locales day month year is

00:15:38,509 --> 00:15:42,379
used right so these are all patterns

00:15:39,889 --> 00:15:45,350
that change across different locales and

00:15:42,379 --> 00:15:47,240
languages and countries and that's this

00:15:45,350 --> 00:15:48,860
comes out of the box for you you don't

00:15:47,240 --> 00:15:50,930
have to think about it just go to the

00:15:48,860 --> 00:15:53,029
you know use this data set and comes out

00:15:50,930 --> 00:15:55,550
of the box similarity translations of

00:15:53,029 --> 00:16:00,290
names like if you're looking at say

00:15:55,550 --> 00:16:01,430
doing supporting Hebrew or Arabic or

00:16:00,290 --> 00:16:03,589
right-to-left

00:16:01,430 --> 00:16:06,379
other right-to-left languages out of the

00:16:03,589 --> 00:16:08,180
box or you're supporting CJK languages

00:16:06,379 --> 00:16:11,800
like Chinese Japanese Korean based

00:16:08,180 --> 00:16:15,019
languages you want to be able to have an

00:16:11,800 --> 00:16:17,660
interoperability in the name or the data

00:16:15,019 --> 00:16:20,240
pattern or the date pattern or you know

00:16:17,660 --> 00:16:23,180
the actual localization string that

00:16:20,240 --> 00:16:25,189
you're using for each locale and that

00:16:23,180 --> 00:16:26,600
data is all here so you don't have to go

00:16:25,189 --> 00:16:28,879
and invent it you don't have to go and

00:16:26,600 --> 00:16:30,920
research it you can just use it and

00:16:28,879 --> 00:16:33,709
similarly you know country information

00:16:30,920 --> 00:16:35,420
like currency usage calendar preferences

00:16:33,709 --> 00:16:36,980
people use different calendars all

00:16:35,420 --> 00:16:39,470
across the planet it's not the same

00:16:36,980 --> 00:16:43,279
calendar that's used right for for an

00:16:39,470 --> 00:16:45,529
official Business Week rules for

00:16:43,279 --> 00:16:48,470
spelling out how you segment words and

00:16:45,529 --> 00:16:51,769
text so these these are all built into

00:16:48,470 --> 00:16:53,569
cldr and that's pretty cool

00:16:51,769 --> 00:16:55,550
I just wanted to point out these are the

00:16:53,569 --> 00:16:58,819
modules you know in globalizing go

00:16:55,550 --> 00:17:01,309
globalized jas which pulls in the cldr

00:16:58,819 --> 00:17:03,290
json files that you can use out of the

00:17:01,309 --> 00:17:07,370
box as soon as you use globalized yes

00:17:03,290 --> 00:17:11,720
and that basically provides you currency

00:17:07,370 --> 00:17:14,030
data date number plurals you'd be amazed

00:17:11,720 --> 00:17:17,500
at how languages you know handle plurals

00:17:14,030 --> 00:17:20,990
differently right

00:17:17,500 --> 00:17:23,030
similarly relative time unit so again

00:17:20,990 --> 00:17:25,010
there's a huge variance in this data and

00:17:23,030 --> 00:17:27,049
i'd like you know adieu to go and take a

00:17:25,010 --> 00:17:30,799
look at these files but they come out of

00:17:27,049 --> 00:17:32,990
the box with globalized yes so what I

00:17:30,799 --> 00:17:36,320
want to do now is to kind of give you a

00:17:32,990 --> 00:17:38,990
quick example of how do you use

00:17:36,320 --> 00:17:42,679
globalized yes right and and how many of

00:17:38,990 --> 00:17:46,039
you still use webpack for many of you do

00:17:42,679 --> 00:17:47,059
right so we all we all still do it even

00:17:46,039 --> 00:17:49,730
though there are other men

00:17:47,059 --> 00:17:54,499
methods of actually being able to use

00:17:49,730 --> 00:17:56,929
globalize declaratively so what does

00:17:54,499 --> 00:17:59,570
that peg do it helps us you know kind of

00:17:56,929 --> 00:18:02,629
generate for matters and parcels

00:17:59,570 --> 00:18:06,649
dynamically and and really pulling in

00:18:02,629 --> 00:18:08,960
cldr data efficiently it just you know

00:18:06,649 --> 00:18:13,870
you just need a gate environment to pull

00:18:08,960 --> 00:18:16,159
down your source code no js' and npm and

00:18:13,870 --> 00:18:18,049
these are the instructions that you can

00:18:16,159 --> 00:18:21,919
just you know kind of take a photo off

00:18:18,049 --> 00:18:24,769
or just use later just i think this this

00:18:21,919 --> 00:18:28,070
slide deck will be available later but

00:18:24,769 --> 00:18:31,730
you can just pull down on get globalized

00:18:28,070 --> 00:18:35,389
get and then just you know be able to

00:18:31,730 --> 00:18:38,809
run so I'm running this specific example

00:18:35,389 --> 00:18:41,749
of app NPM web web pack and what this

00:18:38,809 --> 00:18:45,590
does is demonstrates to you how you can

00:18:41,749 --> 00:18:48,320
actually get locale data formatted out

00:18:45,590 --> 00:18:50,149
of the box using globalized yes right so

00:18:48,320 --> 00:18:53,110
you can take a look at the code for this

00:18:50,149 --> 00:18:56,659
example also it's in the samples

00:18:53,110 --> 00:18:58,820
examples directory on global eyes and

00:18:56,659 --> 00:19:04,009
all you need to do really is npm install

00:18:58,820 --> 00:19:06,409
and npm start right so let's let's walk

00:19:04,009 --> 00:19:09,440
through this so what what i'm doing is

00:19:06,409 --> 00:19:12,860
that you know i I want to use global

00:19:09,440 --> 00:19:17,419
eyes to internationalize my UI here

00:19:12,860 --> 00:19:19,809
right and or messages like how many of

00:19:17,419 --> 00:19:22,700
you send notifications from your

00:19:19,809 --> 00:19:25,340
applications where you are actually

00:19:22,700 --> 00:19:28,240
doing error messages or notifications

00:19:25,340 --> 00:19:30,710
that need to be formatted in the right

00:19:28,240 --> 00:19:35,240
you know with the right formats and

00:19:30,710 --> 00:19:37,369
parsley and and displayed correctly for

00:19:35,240 --> 00:19:39,950
messages that you're providing to your

00:19:37,369 --> 00:19:41,629
end user right and you'd like to have

00:19:39,950 --> 00:19:44,029
that out of the box why do you need to

00:19:41,629 --> 00:19:46,850
go and invent it for every locale right

00:19:44,029 --> 00:19:49,999
so this is something that actually helps

00:19:46,850 --> 00:19:52,279
you use as an example where you can see

00:19:49,999 --> 00:19:55,669
that you know number for example in this

00:19:52,279 --> 00:19:58,039
case we have chosen the format and you

00:19:55,669 --> 00:20:00,559
just walk through that like you've

00:19:58,039 --> 00:20:04,669
currency you have date you

00:20:00,559 --> 00:20:06,590
have an I in a time zone we are using

00:20:04,669 --> 00:20:10,429
Sao Paulo here because that was an

00:20:06,590 --> 00:20:12,070
example that we tested in Brazil and you

00:20:10,429 --> 00:20:15,710
can see that you know the date format

00:20:12,070 --> 00:20:17,360
using a long text and relative time that

00:20:15,710 --> 00:20:20,509
is how many seconds ago was this

00:20:17,360 --> 00:20:22,639
transaction actually made and you see it

00:20:20,509 --> 00:20:24,379
all the time in your applications right

00:20:22,639 --> 00:20:27,590
very you'll say hey you know you've

00:20:24,379 --> 00:20:31,490
bought this one minute ago or you bought

00:20:27,590 --> 00:20:35,049
you know you bought something four hours

00:20:31,490 --> 00:20:38,769
ago right so that's relative time and

00:20:35,049 --> 00:20:42,200
being able to actually use pluralization

00:20:38,769 --> 00:20:43,940
also which means that if multiple folks

00:20:42,200 --> 00:20:47,960
were using you know a particular

00:20:43,940 --> 00:20:49,639
interface or there were multiple tasks

00:20:47,960 --> 00:20:53,210
that are pending you have three

00:20:49,639 --> 00:20:56,119
remaining tasks right so I'll just go

00:20:53,210 --> 00:21:00,350
through this this is the en locale JSON

00:20:56,119 --> 00:21:01,909
file so in en JSON all you are doing is

00:21:00,350 --> 00:21:04,100
you don't need to change any code and

00:21:01,909 --> 00:21:06,769
that's the important thing to note here

00:21:04,100 --> 00:21:10,429
that all you are doing is configuration

00:21:06,769 --> 00:21:13,009
based locale changes right and all your

00:21:10,429 --> 00:21:16,929
you know having to specify as you go

00:21:13,009 --> 00:21:20,619
into en JSON just define you know the

00:21:16,929 --> 00:21:24,169
data fields that you want to pull in and

00:21:20,619 --> 00:21:27,409
just set up the format of the message

00:21:24,169 --> 00:21:30,139
that you are trying to work through so

00:21:27,409 --> 00:21:33,940
in this case it's number currency date

00:21:30,139 --> 00:21:37,639
relative time and unit and then in your

00:21:33,940 --> 00:21:42,440
application itself on the jas in the OJS

00:21:37,639 --> 00:21:44,749
file you are basically setting the

00:21:42,440 --> 00:21:48,139
fields with the text context you know

00:21:44,749 --> 00:21:51,110
and and displaying it and rendering it

00:21:48,139 --> 00:21:54,169
and and the result is at the bottom here

00:21:51,110 --> 00:21:55,970
where you can see an example of you know

00:21:54,169 --> 00:21:59,629
using a mixed number where you get

00:21:55,970 --> 00:22:01,340
because it's in JSON you didn't have to

00:21:59,629 --> 00:22:04,639
say anything other than say this is an

00:22:01,340 --> 00:22:06,590
en dot JSON file with the appropriate

00:22:04,639 --> 00:22:09,350
you know fields that you're pulling in

00:22:06,590 --> 00:22:12,919
and in the configuration itself you can

00:22:09,350 --> 00:22:13,970
see that the right formats are being

00:22:12,919 --> 00:22:17,420
displayed for

00:22:13,970 --> 00:22:20,660
each of the data elements in that

00:22:17,420 --> 00:22:24,020
message right and and I just want to

00:22:20,660 --> 00:22:27,440
compare this with what we are doing for

00:22:24,020 --> 00:22:29,480
German which is these other part that

00:22:27,440 --> 00:22:32,810
you own all you need to do is define de

00:22:29,480 --> 00:22:36,410
JSON right which is the German JSON file

00:22:32,810 --> 00:22:39,440
and you're just specifying what you will

00:22:36,410 --> 00:22:41,810
be displaying with the same format and

00:22:39,440 --> 00:22:44,990
all you're saying is hey I want the data

00:22:41,810 --> 00:22:47,560
for number currency date relative time

00:22:44,990 --> 00:22:50,330
and unit to be populating for this

00:22:47,560 --> 00:22:52,940
locale and it's only configuration

00:22:50,330 --> 00:22:53,960
nothing's changed on your code so you

00:22:52,940 --> 00:22:56,180
can see it on the right-hand side

00:22:53,960 --> 00:22:59,900
nothing nothing changes on your code so

00:22:56,180 --> 00:23:01,970
it is seamless and what that does is

00:22:59,900 --> 00:23:04,730
that it is providing you for example

00:23:01,970 --> 00:23:07,340
look at the currency it's displaying

00:23:04,730 --> 00:23:10,460
differently right because it is actually

00:23:07,340 --> 00:23:14,500
specific to how you would display

00:23:10,460 --> 00:23:17,870
currency for a German locale right and

00:23:14,500 --> 00:23:20,570
similarly for date you're seeing that

00:23:17,870 --> 00:23:25,150
the format for the date automatically is

00:23:20,570 --> 00:23:27,890
being displayed for the German locale so

00:23:25,150 --> 00:23:29,690
this comes out of the box and and you

00:23:27,890 --> 00:23:32,450
don't have to think about it and that's

00:23:29,690 --> 00:23:34,580
huge because when you are doing this at

00:23:32,450 --> 00:23:36,890
scale and you're supporting hundreds of

00:23:34,580 --> 00:23:39,920
countries and look elves you don't want

00:23:36,890 --> 00:23:42,440
to kind of go and have to dig into what

00:23:39,920 --> 00:23:45,350
you know the format is for which country

00:23:42,440 --> 00:23:47,420
and which language right and this all

00:23:45,350 --> 00:23:50,780
comes out the box so if you're say doing

00:23:47,420 --> 00:23:54,590
Spanish you do es JSON if you're doing

00:23:50,780 --> 00:23:56,390
Spanish for Mexico versus Spain you

00:23:54,590 --> 00:23:59,930
could still have more distinctions there

00:23:56,390 --> 00:24:03,290
right so you could say es es vs. es MX

00:23:59,930 --> 00:24:06,770
for the JSON file and you'd actually get

00:24:03,290 --> 00:24:08,630
a different format based on what formats

00:24:06,770 --> 00:24:12,770
are typically used in you know the

00:24:08,630 --> 00:24:14,390
locale itself so that's pretty cool and

00:24:12,770 --> 00:24:15,980
I mean you know I didn't want to get too

00:24:14,390 --> 00:24:17,480
much into detail because I'd like you to

00:24:15,980 --> 00:24:20,900
go and check out the code you know

00:24:17,480 --> 00:24:22,820
understand it it's once you understand

00:24:20,900 --> 00:24:24,890
you know that there is there's all this

00:24:22,820 --> 00:24:27,680
detailed data that you have for each

00:24:24,890 --> 00:24:29,240
locale it really becomes even

00:24:27,680 --> 00:24:33,560
more compelling to use this out of the

00:24:29,240 --> 00:24:35,300
box and again get involved this is my

00:24:33,560 --> 00:24:38,810
shout out for you know you to get more

00:24:35,300 --> 00:24:40,340
involved in open source and get involved

00:24:38,810 --> 00:24:42,380
in the community you can come and ask

00:24:40,340 --> 00:24:46,070
questions there's a slack channel that

00:24:42,380 --> 00:24:47,600
the project has you can get involved in

00:24:46,070 --> 00:24:50,170
answering questions that you may have

00:24:47,600 --> 00:24:53,360
solved for your particular application

00:24:50,170 --> 00:24:55,340
and you can even write a blog post and

00:24:53,360 --> 00:24:58,340
we'd be happy to publish it on the site

00:24:55,340 --> 00:25:00,980
on the project itself but again you know

00:24:58,340 --> 00:25:02,870
it's setting agent it's that discussing

00:25:00,980 --> 00:25:05,360
of solutions to help each other in

00:25:02,870 --> 00:25:08,120
solving problems which are language

00:25:05,360 --> 00:25:12,070
specific locale specific and really you

00:25:08,120 --> 00:25:12,070
know providing support out of the box

00:25:12,130 --> 00:25:16,880
again it's super important you know

00:25:15,020 --> 00:25:19,730
internationalization is in horizontal

00:25:16,880 --> 00:25:22,010
that touches every application you may

00:25:19,730 --> 00:25:23,780
not see it all the time but it is you

00:25:22,010 --> 00:25:25,910
know something that we kind of assume

00:25:23,780 --> 00:25:28,540
out of the box today we've come a long

00:25:25,910 --> 00:25:32,390
way and the reason I say that is because

00:25:28,540 --> 00:25:34,100
chrome for example right and and we use

00:25:32,390 --> 00:25:36,800
Chrome browser all the time we use

00:25:34,100 --> 00:25:40,100
different plugins and release tools and

00:25:36,800 --> 00:25:42,020
and debuggers on it for building our

00:25:40,100 --> 00:25:44,450
JavaScript applications and debugging

00:25:42,020 --> 00:25:46,490
through them and and you know when this

00:25:44,450 --> 00:25:49,850
internationalization support is baked

00:25:46,490 --> 00:25:50,810
into the platform itself it becomes even

00:25:49,850 --> 00:25:54,410
more easier

00:25:50,810 --> 00:25:56,990
so for cldr and the unicode standard you

00:25:54,410 --> 00:25:59,300
can go and follow on github cldr dot

00:25:56,990 --> 00:26:03,260
unicode org has all its code bases on

00:25:59,300 --> 00:26:05,830
github you can even you know raise PRS

00:26:03,260 --> 00:26:09,140
if you if you see that data is missing

00:26:05,830 --> 00:26:13,640
you can actually just file a PR on on

00:26:09,140 --> 00:26:18,980
github slash unicode org slash cldr

00:26:13,640 --> 00:26:22,040
and for those of you who are actively

00:26:18,980 --> 00:26:24,440
involved you know or follow the ACMA

00:26:22,040 --> 00:26:27,200
script descriptions discussions where

00:26:24,440 --> 00:26:29,240
the javascript internationalization

00:26:27,200 --> 00:26:33,050
specification is you know being

00:26:29,240 --> 00:26:34,850
discussed and and formed all the time

00:26:33,050 --> 00:26:38,240
and new features are being discussed and

00:26:34,850 --> 00:26:39,770
being added it's super interesting this

00:26:38,240 --> 00:26:41,299
is an open source project you can

00:26:39,770 --> 00:26:45,860
actually follow it on get

00:26:41,299 --> 00:26:48,519
as tc39 / Atma 402 which is the

00:26:45,860 --> 00:26:52,570
specification for internationalization

00:26:48,519 --> 00:26:56,210
and you can follow the mailing list at

00:26:52,570 --> 00:26:58,610
es which is ECMO script - discussion and

00:26:56,210 --> 00:27:00,590
if you have questions come and ask on

00:26:58,610 --> 00:27:02,179
freenode again that's the beauty of open

00:27:00,590 --> 00:27:05,659
source projects you can just come and

00:27:02,179 --> 00:27:07,159
ask right Philemon issues and folks who

00:27:05,659 --> 00:27:10,070
are working in that area can come and

00:27:07,159 --> 00:27:12,379
help but the important thing which is

00:27:10,070 --> 00:27:16,070
that the last you know last part of this

00:27:12,379 --> 00:27:18,440
is again support in the browsers right

00:27:16,070 --> 00:27:20,690
support in the platform's we work in

00:27:18,440 --> 00:27:22,549
support in the programming languages so

00:27:20,690 --> 00:27:24,499
that we don't have to go in you know

00:27:22,549 --> 00:27:26,359
reinvent at the application layer

00:27:24,499 --> 00:27:29,779
because if this is available out of the

00:27:26,359 --> 00:27:32,179
box you can just automatically use it so

00:27:29,779 --> 00:27:34,879
v8 which is the JavaScript engine that

00:27:32,179 --> 00:27:38,749
is used for chrome and chromium now

00:27:34,879 --> 00:27:42,440
supports intel locale which is really

00:27:38,749 --> 00:27:45,200
you know where many of these features

00:27:42,440 --> 00:27:48,080
that were for example added to globalize

00:27:45,200 --> 00:27:52,369
GS at a point when Intel Jas did not

00:27:48,080 --> 00:27:54,529
have that implementation has traveled

00:27:52,369 --> 00:27:56,419
from globalize JS gone into the standard

00:27:54,529 --> 00:27:57,919
and then shown up on the browsers and

00:27:56,419 --> 00:28:01,429
that's pretty cool because that's how

00:27:57,919 --> 00:28:03,259
you know interoperability across

00:28:01,429 --> 00:28:06,409
libraries works and through the

00:28:03,259 --> 00:28:09,139
standards through the specs that we are

00:28:06,409 --> 00:28:11,450
actually working on and I'd like you to

00:28:09,139 --> 00:28:14,359
you know go and take a look at it there

00:28:11,450 --> 00:28:17,200
are a lot of libraries in the JavaScript

00:28:14,359 --> 00:28:21,289
universe today that are used by

00:28:17,200 --> 00:28:24,820
different applications and you know even

00:28:21,289 --> 00:28:27,559
if you were to look at this snapshot you

00:28:24,820 --> 00:28:29,840
know there's polyglot which was actually

00:28:27,559 --> 00:28:32,149
invented by Airbnb at at point in time

00:28:29,840 --> 00:28:34,570
when there was not adequate support for

00:28:32,149 --> 00:28:37,190
internationalization in the browser

00:28:34,570 --> 00:28:39,320
there's global eyes which happened and

00:28:37,190 --> 00:28:43,129
there has been you know becoming more

00:28:39,320 --> 00:28:45,470
and more popular across nine years now

00:28:43,129 --> 00:28:47,330
there's moment GS for those of you who

00:28:45,470 --> 00:28:49,369
were looking at timezone data and

00:28:47,330 --> 00:28:52,220
actually didn't have it even in global

00:28:49,369 --> 00:28:55,260
eyes because you know it was added in

00:28:52,220 --> 00:28:57,600
globalized later moment yes

00:28:55,260 --> 00:29:00,870
used forever you know for all kinds of

00:28:57,600 --> 00:29:06,840
time and time zone manipulation

00:29:00,870 --> 00:29:08,490
there's react yes it is totally and and

00:29:06,840 --> 00:29:10,050
so you can take all the functionality

00:29:08,490 --> 00:29:12,900
which was there and you don't have to

00:29:10,050 --> 00:29:16,410
use you know multiple libraries then so

00:29:12,900 --> 00:29:18,740
it does incorporate all that you have a

00:29:16,410 --> 00:29:21,960
lot of work happening in fluent you know

00:29:18,740 --> 00:29:24,930
this jQuery i18n which was actually done

00:29:21,960 --> 00:29:27,600
by my team at Wikipedia so you know at

00:29:24,930 --> 00:29:30,860
that point we were big users of jQuery

00:29:27,600 --> 00:29:33,270
so we actually had to write a whole

00:29:30,860 --> 00:29:35,370
library to be able to handle the

00:29:33,270 --> 00:29:37,410
complexities of language on Wikipedia

00:29:35,370 --> 00:29:40,710
and that's we have migrated from that

00:29:37,410 --> 00:29:42,870
over time there's Twitter CLD rjs so

00:29:40,710 --> 00:29:45,270
there's as you can see the universe is

00:29:42,870 --> 00:29:47,280
populated with different implementations

00:29:45,270 --> 00:29:49,500
over time because people just didn't

00:29:47,280 --> 00:29:51,990
have all the features that they needed

00:29:49,500 --> 00:29:54,600
to have to support their applications

00:29:51,990 --> 00:29:57,090
and so all of these you know different

00:29:54,600 --> 00:30:01,230
libraries have been used in different

00:29:57,090 --> 00:30:03,930
ways by the applications that and the

00:30:01,230 --> 00:30:06,900
services that use them and then you have

00:30:03,930 --> 00:30:09,960
Intel right which is Intel Jas which is

00:30:06,900 --> 00:30:13,860
kind of the representation of the ACMA

00:30:09,960 --> 00:30:17,310
script specification that I just

00:30:13,860 --> 00:30:22,260
referred to here right and and Intel Jas

00:30:17,310 --> 00:30:23,940
is now already available in v8 which is

00:30:22,260 --> 00:30:26,130
a core engine you know that's used by

00:30:23,940 --> 00:30:27,720
chrome and chromium and we're hoping

00:30:26,130 --> 00:30:30,480
that you know it'll actually show up in

00:30:27,720 --> 00:30:33,540
Firefox and other browsers and have full

00:30:30,480 --> 00:30:35,340
the browser support so again I just

00:30:33,540 --> 00:30:36,840
wanted to talk on that and and you know

00:30:35,340 --> 00:30:40,410
if you have any questions at any time

00:30:36,840 --> 00:30:44,670
please feel free to reach out to me I'm

00:30:40,410 --> 00:30:46,320
on twitter at a lolita and please you

00:30:44,670 --> 00:30:48,810
know stay involved it is very important

00:30:46,320 --> 00:30:51,390
for all of us to build good global user

00:30:48,810 --> 00:30:54,810
experiences for our applications the

00:30:51,390 --> 00:30:57,210
more global globally usable our

00:30:54,810 --> 00:30:59,070
applications are the more popular they

00:30:57,210 --> 00:31:00,990
are and that matters right whether

00:30:59,070 --> 00:31:03,890
that's an e-commerce application or

00:31:00,990 --> 00:31:06,000
whether that's and you know log

00:31:03,890 --> 00:31:08,880
application or something that we are

00:31:06,000 --> 00:31:11,040
visualizing and presenting but

00:31:08,880 --> 00:31:13,310
being able to present it in the locale

00:31:11,040 --> 00:31:16,320
and language that people are used to is

00:31:13,310 --> 00:31:19,410
the best user experience you can you can

00:31:16,320 --> 00:31:23,550
really get out of the box so thank you

00:31:19,410 --> 00:31:24,830
for listening and again I I think we're

00:31:23,550 --> 00:31:27,420
at time

00:31:24,830 --> 00:31:30,430
but I'm around and I'm happy to answer

00:31:27,420 --> 00:31:35,340
any questions thanks

00:31:30,430 --> 00:31:37,400
[Music]

00:31:35,340 --> 00:31:37,400

YouTube URL: https://www.youtube.com/watch?v=56fCYy6QVYQ


