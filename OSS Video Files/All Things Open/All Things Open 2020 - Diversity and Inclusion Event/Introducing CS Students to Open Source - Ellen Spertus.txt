Title: Introducing CS Students to Open Source - Ellen Spertus
Publication date: 2020-12-02
Playlist: All Things Open 2020 - Diversity and Inclusion Event
Description: 
	Presented by: Ellen Spertus, Mills College
Presented at All Things Open 2020, Inclusion and Diversity Event

Abstract: Open source programming is professionally and personally rewarding, but many people are intimidated by the barriers to entry and the field's reputation for hostility to newcomers, especially members of marginalized groups. As a computer science professor at a minority-serving women's college, I have countered this by guiding students, as part of their required coursework, to learn and apply the necessary skills to make contributions to open source projects. I will share what I have learned over the years about breaking down the barriers to help other educators, mentors, and open source practitioners increase participation.
Captions: 
	00:00:05,200 --> 00:00:09,760
thank you

00:00:06,560 --> 00:00:12,400
um well i'm here to speak with you about

00:00:09,760 --> 00:00:14,799
introducing computer science students to

00:00:12,400 --> 00:00:17,600
open source

00:00:14,799 --> 00:00:18,080
um i'll take a moment to mention my open

00:00:17,600 --> 00:00:21,119
source

00:00:18,080 --> 00:00:22,800
projects i wrote the software for the

00:00:21,119 --> 00:00:26,039
sisters email list

00:00:22,800 --> 00:00:27,599
female computer scientists run by

00:00:26,039 --> 00:00:30,640
anitab.org

00:00:27,599 --> 00:00:34,480
while at google i worked on amp inventor

00:00:30,640 --> 00:00:37,520
and the open source port of it to mit

00:00:34,480 --> 00:00:40,239
where i've continued to contribute also

00:00:37,520 --> 00:00:43,360
at google i worked on blockly

00:00:40,239 --> 00:00:44,079
including the first hour of code which

00:00:43,360 --> 00:00:47,680
was based

00:00:44,079 --> 00:00:48,640
on it i found working on open source

00:00:47,680 --> 00:00:51,120
very

00:00:48,640 --> 00:00:54,559
satisfying and exciting and wanted to

00:00:51,120 --> 00:00:57,600
share that experience with my students

00:00:54,559 --> 00:01:01,039
i teach at mills college which

00:00:57,600 --> 00:01:01,760
is a minority serving women's college

00:01:01,039 --> 00:01:04,479
with co-ed

00:01:01,760 --> 00:01:05,760
graduate programs in the san francisco

00:01:04,479 --> 00:01:08,000
bay area

00:01:05,760 --> 00:01:09,119
our students like me tend to be

00:01:08,000 --> 00:01:10,960
idealistic

00:01:09,119 --> 00:01:13,760
and want to make the world a better

00:01:10,960 --> 00:01:17,360
place which is one of the reasons that

00:01:13,760 --> 00:01:20,640
open source appeals to us

00:01:17,360 --> 00:01:22,799
we have mills has a unique

00:01:20,640 --> 00:01:25,040
graduate program for students with a

00:01:22,799 --> 00:01:28,560
bachelor's degree in another field who

00:01:25,040 --> 00:01:31,439
want to transition into computer science

00:01:28,560 --> 00:01:34,079
many of our classes are dual level with

00:01:31,439 --> 00:01:35,200
undergraduates and graduate students and

00:01:34,079 --> 00:01:38,240
i need to provide

00:01:35,200 --> 00:01:40,880
additional material to graduate students

00:01:38,240 --> 00:01:43,119
in programming project courses i've been

00:01:40,880 --> 00:01:44,000
having the grad students contribute to

00:01:43,119 --> 00:01:48,079
open source

00:01:44,000 --> 00:01:51,920
projects i'll now say a little about the

00:01:48,079 --> 00:01:54,399
skills and tools that students need

00:01:51,920 --> 00:01:55,439
the number one skill is command line

00:01:54,399 --> 00:01:57,600
usage

00:01:55,439 --> 00:01:59,439
it's rare for students to have

00:01:57,600 --> 00:02:02,640
experience with the command line

00:01:59,439 --> 00:02:05,200
so i have them work through tutorials

00:02:02,640 --> 00:02:06,240
i have windows users install git for

00:02:05,200 --> 00:02:09,599
windows which

00:02:06,240 --> 00:02:12,239
includes git bash of course

00:02:09,599 --> 00:02:13,360
students need to be able to use git and

00:02:12,239 --> 00:02:15,360
github

00:02:13,360 --> 00:02:17,680
the workflow i teach is a little

00:02:15,360 --> 00:02:20,640
different from the standard one

00:02:17,680 --> 00:02:23,120
instead of directly forking the

00:02:20,640 --> 00:02:24,640
repository of the project that students

00:02:23,120 --> 00:02:27,440
are contributing to

00:02:24,640 --> 00:02:30,560
i have a class repository so they can

00:02:27,440 --> 00:02:34,239
push their code there for review by me

00:02:30,560 --> 00:02:37,840
before making a pull request on the

00:02:34,239 --> 00:02:37,840
project repository

00:02:38,000 --> 00:02:42,959
can be students may be reluctant to

00:02:40,560 --> 00:02:44,720
communicate with strangers online

00:02:42,959 --> 00:02:45,599
especially if they're concerned that

00:02:44,720 --> 00:02:50,480
they might face

00:02:45,599 --> 00:02:52,959
racism or sexism which are valid worries

00:02:50,480 --> 00:02:54,879
but hasn't been the experience of my

00:02:52,959 --> 00:02:57,360
students fortunately

00:02:54,879 --> 00:03:00,560
i have students i help students make

00:02:57,360 --> 00:03:04,080
their first post to stack overflow

00:03:00,560 --> 00:03:07,920
communicate with developers on discord

00:03:04,080 --> 00:03:08,720
post to github and write proposals for

00:03:07,920 --> 00:03:11,760
complex

00:03:08,720 --> 00:03:14,800
changes i solicited

00:03:11,760 --> 00:03:18,239
past students experiences when

00:03:14,800 --> 00:03:19,760
creating this talk one element um here's

00:03:18,239 --> 00:03:21,599
what one said

00:03:19,760 --> 00:03:24,239
one element of the class that i

00:03:21,599 --> 00:03:27,040
appreciated was a consideration of

00:03:24,239 --> 00:03:29,440
communication and community as you

00:03:27,040 --> 00:03:32,080
encouraged me to write a stack overflow

00:03:29,440 --> 00:03:35,440
on my build problems you also stress the

00:03:32,080 --> 00:03:38,080
importance of good etiquette in posting

00:03:35,440 --> 00:03:40,480
complete and useful information to make

00:03:38,080 --> 00:03:42,560
things as easy as possible for any

00:03:40,480 --> 00:03:44,480
friendly person who would take time out

00:03:42,560 --> 00:03:46,720
of their day to answer

00:03:44,480 --> 00:03:49,280
we also discussed the importance of

00:03:46,720 --> 00:03:50,480
respectful community and open source

00:03:49,280 --> 00:03:52,720
projects

00:03:50,480 --> 00:03:54,680
i try to keep these lessons in mind

00:03:52,720 --> 00:03:57,680
today when i communicate with my

00:03:54,680 --> 00:04:00,720
collaborators

00:03:57,680 --> 00:04:03,760
the imposter syndrome is real and

00:04:00,720 --> 00:04:06,799
always present you need to encourage

00:04:03,760 --> 00:04:09,040
students to have a growth mindset it's

00:04:06,799 --> 00:04:11,519
not enough to mention it once

00:04:09,040 --> 00:04:13,519
every day you should communicate to

00:04:11,519 --> 00:04:14,159
students that you make mistakes and

00:04:13,519 --> 00:04:16,720
everyone

00:04:14,159 --> 00:04:19,919
feels overwhelmed a lot of the time

00:04:16,720 --> 00:04:22,000
that's especially true this semester

00:04:19,919 --> 00:04:23,840
if they feel overwhelmed it doesn't mean

00:04:22,000 --> 00:04:26,840
they don't belong in the field

00:04:23,840 --> 00:04:28,000
it means they're working on hard

00:04:26,840 --> 00:04:31,040
problems

00:04:28,000 --> 00:04:32,960
uh tell students about your mistakes i

00:04:31,040 --> 00:04:34,320
share with them an article that i wrote

00:04:32,960 --> 00:04:36,160
about mine

00:04:34,320 --> 00:04:38,320
in the picture on the right i'm wearing

00:04:36,160 --> 00:04:39,520
a t-shirt that says if people learned

00:04:38,320 --> 00:04:42,400
from their mistakes

00:04:39,520 --> 00:04:45,120
i must have a master's degree by now and

00:04:42,400 --> 00:04:48,320
i point out that i have a phd

00:04:45,120 --> 00:04:49,280
i've made even more mistakes throughout

00:04:48,320 --> 00:04:52,000
the semester

00:04:49,280 --> 00:04:54,400
admit your mistakes and reward students

00:04:52,000 --> 00:04:56,479
for finding and reporting them

00:04:54,400 --> 00:04:58,560
a lot of professors get annoyed when

00:04:56,479 --> 00:05:02,479
students point out their mistakes but i

00:04:58,560 --> 00:05:02,479
think this sends out the wrong message

00:05:03,919 --> 00:05:09,440
i had choosing a good project

00:05:07,120 --> 00:05:10,720
at first i had students work on app

00:05:09,440 --> 00:05:12,639
inventor

00:05:10,720 --> 00:05:14,800
because i knew my old colleagues would

00:05:12,639 --> 00:05:16,800
answer their questions and review their

00:05:14,800 --> 00:05:20,400
prs quickly

00:05:16,800 --> 00:05:21,919
now i let students choose projects

00:05:20,400 --> 00:05:24,320
they should make sure there have been

00:05:21,919 --> 00:05:26,800
recent updates to the project

00:05:24,320 --> 00:05:30,400
if no code has been pushed in years the

00:05:26,800 --> 00:05:32,479
changes are unlikely to be incorporated

00:05:30,400 --> 00:05:34,960
i tell them to look for active and

00:05:32,479 --> 00:05:37,600
friendly developer communities

00:05:34,960 --> 00:05:38,320
often these are on discord and students

00:05:37,600 --> 00:05:41,840
can see

00:05:38,320 --> 00:05:43,759
how people are treated before posting

00:05:41,840 --> 00:05:45,520
they should look for a project that's

00:05:43,759 --> 00:05:48,240
welcoming to newcomers

00:05:45,520 --> 00:05:49,840
as shown on the forums or contributor

00:05:48,240 --> 00:05:51,840
guidelines

00:05:49,840 --> 00:05:54,720
specifically they should look whether

00:05:51,840 --> 00:05:59,039
pull requests get reviewed promptly

00:05:54,720 --> 00:06:01,440
if not their changes might languish

00:05:59,039 --> 00:06:02,479
choosing a project is usually easier

00:06:01,440 --> 00:06:05,759
than selecting an

00:06:02,479 --> 00:06:08,400
issue i advise them to look at

00:06:05,759 --> 00:06:11,120
labels such as good first issue or

00:06:08,400 --> 00:06:14,160
beginner friendly

00:06:11,120 --> 00:06:16,240
not to choose high priority issues which

00:06:14,160 --> 00:06:19,199
are likely to get fixed quickly by a

00:06:16,240 --> 00:06:21,120
more experienced developer

00:06:19,199 --> 00:06:23,759
they should know that some issues they

00:06:21,120 --> 00:06:25,840
see especially feature requests

00:06:23,759 --> 00:06:28,000
might be considered invalid by the

00:06:25,840 --> 00:06:29,759
maintainers

00:06:28,000 --> 00:06:31,840
they should discuss issues with

00:06:29,759 --> 00:06:34,080
maintainers to make sure they want

00:06:31,840 --> 00:06:37,120
someone working on the issue and if they

00:06:34,080 --> 00:06:39,840
have any ideas how they should do so

00:06:37,120 --> 00:06:41,199
and they should explicitly claim the

00:06:39,840 --> 00:06:43,280
issue

00:06:41,199 --> 00:06:44,240
above all they should be prepared to

00:06:43,280 --> 00:06:47,120
start over

00:06:44,240 --> 00:06:48,080
with a new issue if theirs gets fixed by

00:06:47,120 --> 00:06:51,360
someone else

00:06:48,080 --> 00:06:53,759
made obsolete or proves too difficult

00:06:51,360 --> 00:06:55,520
here's an example from a previous year

00:06:53,759 --> 00:06:59,440
where a developer said

00:06:55,520 --> 00:07:01,840
oops i accidentally fixed your issue

00:06:59,440 --> 00:07:03,759
and i won't show you what was said

00:07:01,840 --> 00:07:06,000
behind the scenes but

00:07:03,759 --> 00:07:07,120
um the students showed good grace and

00:07:06,000 --> 00:07:11,199
switched to another

00:07:07,120 --> 00:07:12,720
issue some useful techniques for running

00:07:11,199 --> 00:07:15,840
the class

00:07:12,720 --> 00:07:16,720
have teams of two to three students per

00:07:15,840 --> 00:07:18,960
issue

00:07:16,720 --> 00:07:22,240
with everyone in the class working on

00:07:18,960 --> 00:07:22,240
the same code base

00:07:22,880 --> 00:07:28,479
weekly meetings of one to two hours

00:07:26,479 --> 00:07:30,000
that way you can make sure students stay

00:07:28,479 --> 00:07:33,280
on track and help them with

00:07:30,000 --> 00:07:36,000
anything they get stuck on maintain a

00:07:33,280 --> 00:07:37,199
slack server where students can ask you

00:07:36,000 --> 00:07:40,400
and each other

00:07:37,199 --> 00:07:42,000
for questions and share information and

00:07:40,400 --> 00:07:45,360
always be willing to help

00:07:42,000 --> 00:07:47,759
students draft messages

00:07:45,360 --> 00:07:49,759
a big challenge is getting a handle on

00:07:47,759 --> 00:07:52,800
large code bases

00:07:49,759 --> 00:07:56,160
something i do is create

00:07:52,800 --> 00:07:58,800
static uml static class diagrams

00:07:56,160 --> 00:08:00,400
to help learn my way around a project

00:07:58,800 --> 00:08:03,280
i've had students do this

00:08:00,400 --> 00:08:05,280
although i'm not sure it's been helpful

00:08:03,280 --> 00:08:09,120
what is helpful is having them step

00:08:05,280 --> 00:08:09,120
through code in a debugger

00:08:09,599 --> 00:08:13,199
here are some of the projects students

00:08:11,360 --> 00:08:16,000
have worked on

00:08:13,199 --> 00:08:17,360
kate feeney and trevor adams made

00:08:16,000 --> 00:08:19,840
contributes

00:08:17,360 --> 00:08:21,919
contributions to app inventor which led

00:08:19,840 --> 00:08:24,240
to their master's theses

00:08:21,919 --> 00:08:27,680
kate went on to do the google summer of

00:08:24,240 --> 00:08:30,720
code with app inventor

00:08:27,680 --> 00:08:33,120
trevor wrote about the experience most

00:08:30,720 --> 00:08:35,440
homework assignments in cs classes

00:08:33,120 --> 00:08:37,919
either start from scratch or build on

00:08:35,440 --> 00:08:40,000
top of straightforward code and require

00:08:37,919 --> 00:08:43,919
relatively simple interactions with

00:08:40,000 --> 00:08:44,320
an existing api in contrast app inventor

00:08:43,919 --> 00:08:47,440
was an

00:08:44,320 --> 00:08:49,519
ongoing project with many contributors a

00:08:47,440 --> 00:08:52,080
sizable code base

00:08:49,519 --> 00:08:53,760
elements that were deprecated elements

00:08:52,080 --> 00:08:56,080
that were in progress

00:08:53,760 --> 00:08:57,040
and elements that hooked into other code

00:08:56,080 --> 00:08:59,040
bases

00:08:57,040 --> 00:09:01,279
it was the first time i really had to

00:08:59,040 --> 00:09:01,920
understand and work with a large amount

00:09:01,279 --> 00:09:04,399
of code

00:09:01,920 --> 00:09:06,560
written by someone other than myself

00:09:04,399 --> 00:09:08,080
figuring which parts i needed to deal

00:09:06,560 --> 00:09:10,320
with and how they worked

00:09:08,080 --> 00:09:13,360
and just as importantly figuring out

00:09:10,320 --> 00:09:15,600
which parts i could safely ignore

00:09:13,360 --> 00:09:17,680
these are skills that are crucial for

00:09:15,600 --> 00:09:18,720
working on real software development

00:09:17,680 --> 00:09:20,640
projects

00:09:18,720 --> 00:09:21,760
and it made me a lot more comfortable

00:09:20,640 --> 00:09:23,839
when i had my first

00:09:21,760 --> 00:09:25,920
industry experience and was faced with

00:09:23,839 --> 00:09:27,680
the same situation

00:09:25,920 --> 00:09:29,279
knowing that i could understand and

00:09:27,680 --> 00:09:31,519
successfully modify

00:09:29,279 --> 00:09:36,320
real deployed code gave me a lot of

00:09:31,519 --> 00:09:39,040
confidence in myself as a programmer

00:09:36,320 --> 00:09:39,440
i i had students working at amp inventor

00:09:39,040 --> 00:09:42,720
again

00:09:39,440 --> 00:09:45,760
in 2014. here's what colin lockhart

00:09:42,720 --> 00:09:46,640
now finishing his phd at university of

00:09:45,760 --> 00:09:49,680
washington

00:09:46,640 --> 00:09:51,040
wrote working on app inventor was also

00:09:49,680 --> 00:09:53,519
my first experience

00:09:51,040 --> 00:09:55,839
using a real build system with complex

00:09:53,519 --> 00:09:56,880
dependencies that didn't always compile

00:09:55,839 --> 00:09:59,360
correctly

00:09:56,880 --> 00:10:01,760
in fact if i recall correctly my first

00:09:59,360 --> 00:10:04,000
week or so on that project was largely

00:10:01,760 --> 00:10:07,360
spent on stack overflow trying to

00:10:04,000 --> 00:10:09,279
resolve some issues to

00:10:07,360 --> 00:10:10,480
competing related to competing c

00:10:09,279 --> 00:10:12,399
compilers

00:10:10,480 --> 00:10:13,600
not the most exciting work but very

00:10:12,399 --> 00:10:15,920
educational

00:10:13,600 --> 00:10:18,480
when i later went off to nasa for an

00:10:15,920 --> 00:10:20,480
internship i arrived to find a group of

00:10:18,480 --> 00:10:22,720
other interns struggling with build

00:10:20,480 --> 00:10:24,800
problems and i felt like a superhero

00:10:22,720 --> 00:10:27,600
when i was able to immediately help them

00:10:24,800 --> 00:10:31,360
make progress

00:10:27,600 --> 00:10:32,000
in 2016 kate manning and emily kager

00:10:31,360 --> 00:10:35,120
added an

00:10:32,000 --> 00:10:37,040
extension to app inventor both went on

00:10:35,120 --> 00:10:39,920
to work for mozilla

00:10:37,040 --> 00:10:42,720
kate through outreachy emily is an

00:10:39,920 --> 00:10:45,760
intern and then full-time employee

00:10:42,720 --> 00:10:48,000
i'll let her use her own words hi i'm

00:10:45,760 --> 00:10:49,440
emily kager i'm an android engineer and

00:10:48,000 --> 00:10:52,079
full-time maintainer of

00:10:49,440 --> 00:10:52,480
firefox for android i actually got my

00:10:52,079 --> 00:10:54,640
first

00:10:52,480 --> 00:10:56,720
taste of open source in ellen's graduate

00:10:54,640 --> 00:10:57,760
section class where we contributed a new

00:10:56,720 --> 00:11:00,399
feature to

00:10:57,760 --> 00:11:02,000
mit app inventor as part of ellen's

00:11:00,399 --> 00:11:04,720
class my partner and i

00:11:02,000 --> 00:11:05,440
designed and wrote a new feature for mit

00:11:04,720 --> 00:11:07,680
app inventor

00:11:05,440 --> 00:11:09,120
called chart maker in which you could

00:11:07,680 --> 00:11:12,320
draw charts using

00:11:09,120 --> 00:11:14,160
the little like widgets and we learned

00:11:12,320 --> 00:11:15,920
some really core open source skills

00:11:14,160 --> 00:11:17,760
like setting up our dev environment for

00:11:15,920 --> 00:11:20,240
the first time posting questions and

00:11:17,760 --> 00:11:21,760
communicating with the maintainers and

00:11:20,240 --> 00:11:23,600
writing documentation for our new

00:11:21,760 --> 00:11:29,839
feature

00:11:23,600 --> 00:11:29,839
hi let's go on to the next slide

00:11:31,279 --> 00:11:35,519
in 2019 students chose to contribute to

00:11:34,160 --> 00:11:39,440
an app that some of them

00:11:35,519 --> 00:11:40,880
use vitica this fall i'm teaching a java

00:11:39,440 --> 00:11:43,360
development course

00:11:40,880 --> 00:11:46,160
this is my first time supervising open

00:11:43,360 --> 00:11:48,320
source in a non-android environment

00:11:46,160 --> 00:11:49,440
i wasn't able to find many active

00:11:48,320 --> 00:11:52,560
projects

00:11:49,440 --> 00:11:54,880
in java except for minecraft which

00:11:52,560 --> 00:11:57,760
students are thrilled to work on

00:11:54,880 --> 00:12:01,680
they chose to contribute to essentials x

00:11:57,760 --> 00:12:01,680
one of the most popular plugins

00:12:01,760 --> 00:12:08,160
um here are some conclusions

00:12:04,800 --> 00:12:12,399
the benefits of working on

00:12:08,160 --> 00:12:16,079
open source are working with production

00:12:12,399 --> 00:12:16,079
code bases and tools

00:12:16,480 --> 00:12:22,160
learning how to communicate online in

00:12:18,880 --> 00:12:22,160
professional settings

00:12:23,120 --> 00:12:27,200
solving real world problems with actual

00:12:25,839 --> 00:12:29,360
users

00:12:27,200 --> 00:12:33,040
that seems like a better use of time

00:12:29,360 --> 00:12:37,360
than writing code no one will use

00:12:33,040 --> 00:12:40,240
feeling like real developers and having

00:12:37,360 --> 00:12:42,880
support both technical and psychological

00:12:40,240 --> 00:12:45,760
throughout the process

00:12:42,880 --> 00:12:47,519
some challenges there may be unpleasant

00:12:45,760 --> 00:12:49,600
surprises

00:12:47,519 --> 00:12:51,200
even more than with regular assignments

00:12:49,600 --> 00:12:54,320
you create

00:12:51,200 --> 00:12:56,240
this requires a lot of faculty time

00:12:54,320 --> 00:12:58,079
i've worked with two to eight students

00:12:56,240 --> 00:12:59,200
at a time i don't know if it can be

00:12:58,079 --> 00:13:02,480
scaled to large

00:12:59,200 --> 00:13:04,160
courses there have been problems with

00:13:02,480 --> 00:13:05,600
students who didn't feel like they

00:13:04,160 --> 00:13:07,279
belonged on a team

00:13:05,600 --> 00:13:09,440
with other students because of their

00:13:07,279 --> 00:13:11,279
demographic differences

00:13:09,440 --> 00:13:13,519
even if other teammates don't

00:13:11,279 --> 00:13:14,160
discriminate which can be hard for an

00:13:13,519 --> 00:13:17,120
outside

00:13:14,160 --> 00:13:20,399
person to tell students reasonable fear

00:13:17,120 --> 00:13:22,880
of discrimination can get in the way

00:13:20,399 --> 00:13:24,320
some students even graduate students

00:13:22,880 --> 00:13:26,959
need more structure

00:13:24,320 --> 00:13:28,480
and drop the course or avoid doing the

00:13:26,959 --> 00:13:30,800
work

00:13:28,480 --> 00:13:33,440
key points to communicate to students

00:13:30,800 --> 00:13:35,440
are participating in open source

00:13:33,440 --> 00:13:36,560
makes you part of a large and important

00:13:35,440 --> 00:13:39,279
movement

00:13:36,560 --> 00:13:41,680
even a small contribution is a big deal

00:13:39,279 --> 00:13:44,240
and may take all semester

00:13:41,680 --> 00:13:46,160
you can still be successful if your pr

00:13:44,240 --> 00:13:47,920
can't be merged

00:13:46,160 --> 00:13:49,199
most people will be helpful and

00:13:47,920 --> 00:13:51,600
welcoming

00:13:49,199 --> 00:13:52,639
and you're not on your own i think in

00:13:51,600 --> 00:13:54,480
this so i can take

00:13:52,639 --> 00:13:55,680
questions i'm going to skip the last

00:13:54,480 --> 00:13:58,959
student clip

00:13:55,680 --> 00:13:59,360
i said skip the last student clip and go

00:13:58,959 --> 00:14:01,600
go

00:13:59,360 --> 00:14:04,639
straight to questions and comments if

00:14:01,600 --> 00:14:04,639
there's any more time

00:14:06,240 --> 00:14:09,839
i might have time for one question but

00:14:07,600 --> 00:14:11,760
then we um we are on a tight little

00:14:09,839 --> 00:14:12,320
schedule here so we need to hop to the

00:14:11,760 --> 00:14:13,839
next one

00:14:12,320 --> 00:14:15,440
soon does anybody have questions they'd

00:14:13,839 --> 00:14:17,839
like to pop in the chat or the q

00:14:15,440 --> 00:14:17,839
a

00:14:25,839 --> 00:14:30,240
um do i believe some of these aspects

00:14:29,360 --> 00:14:33,360
can be applied

00:14:30,240 --> 00:14:35,360
to a real dev team well i'd say the most

00:14:33,360 --> 00:14:36,079
important part is providing a lot of

00:14:35,360 --> 00:14:37,920
support

00:14:36,079 --> 00:14:39,680
and letting people know that if they

00:14:37,920 --> 00:14:42,959
feel overwhelmed

00:14:39,680 --> 00:14:45,839
um that that's normal um so

00:14:42,959 --> 00:14:54,959
so yes and making sure that back holes

00:14:45,839 --> 00:14:54,959

YouTube URL: https://www.youtube.com/watch?v=GFGBRKguLwg


