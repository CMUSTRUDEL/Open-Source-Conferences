Title: Containerization for Software Developers - Joel Lord - Red Hat OpenShift - Open Source 101
Publication date: 2021-04-12
Playlist: Open Source 101 2021
Description: 
	Joel Lord, Developer Advocate at Red Hat OpenShift, delivered the talk "Containerization for Software Developers" at Open Source 101 on Tuesday, March 20, 2021.

Abstract:
The end is nigh. Your application is almost ready, and you will need to deploy it. And with the deployment, the endless tweaking to get everything running on your production servers. If only there were a way to test everything first. That is where containers will come in to save the day. With containers, you not only run your code in an environment similar to the production server, but you also run your code in precisely the same environment. In this talk, the attendees will learn about how to create container friendly applications, how to use containers to share their code with their team and finally, how to use those same containers to deploy to a production server with minimal efforts.

Find Joel on the internets:
Twitter: https://twitter.com/joel__lord
Personal website: https://javascripteverything.com/
Captions: 
	00:00:04,960 --> 00:00:07,520
so

00:00:05,359 --> 00:00:09,440
uh okay so i have my chat window here uh

00:00:07,520 --> 00:00:11,440
as was already mentioned i will be kind

00:00:09,440 --> 00:00:14,080
of monitoring a little bit on the end if

00:00:11,440 --> 00:00:14,480
uh if i do see a question uh that is is

00:00:14,080 --> 00:00:16,560
very

00:00:14,480 --> 00:00:17,760
relevant i i feel like i should take

00:00:16,560 --> 00:00:19,279
some time

00:00:17,760 --> 00:00:21,279
i might actually stop and just answer

00:00:19,279 --> 00:00:22,480
that question if i don't answer your

00:00:21,279 --> 00:00:23,039
question it's probably just because i

00:00:22,480 --> 00:00:25,119
know that

00:00:23,039 --> 00:00:26,640
the answer is coming in a few slides or

00:00:25,119 --> 00:00:28,880
i will just address it at the end

00:00:26,640 --> 00:00:30,400
but feel free to put in anything in the

00:00:28,880 --> 00:00:33,520
chat uh questions

00:00:30,400 --> 00:00:36,160
comments feedback whatever you want

00:00:33,520 --> 00:00:37,680
i'll be more than happy to try to answer

00:00:36,160 --> 00:00:40,559
these

00:00:37,680 --> 00:00:41,280
so why don't i get started right away

00:00:40,559 --> 00:00:43,520
and

00:00:41,280 --> 00:00:45,280
i will be spending a lot of time in my

00:00:43,520 --> 00:00:48,640
terminal just because

00:00:45,280 --> 00:00:51,760
containers are kind of a a cli tool

00:00:48,640 --> 00:00:52,719
um so i figured you know for this

00:00:51,760 --> 00:00:55,039
presentation

00:00:52,719 --> 00:00:56,079
why not just you know run everything

00:00:55,039 --> 00:00:58,640
from my terminal

00:00:56,079 --> 00:01:00,000
so there you have it containers for

00:00:58,640 --> 00:01:02,559
software developers

00:01:00,000 --> 00:01:03,840
i ran out of space for my ascii art

00:01:02,559 --> 00:01:05,439
there but

00:01:03,840 --> 00:01:06,640
uh but you have it there so containers

00:01:05,439 --> 00:01:08,080
for software developers this is what

00:01:06,640 --> 00:01:10,640
we're going to talk about today

00:01:08,080 --> 00:01:11,840
uh before i get started with our topic

00:01:10,640 --> 00:01:14,080
at hand

00:01:11,840 --> 00:01:15,040
let me introduce myself so hi my name is

00:01:14,080 --> 00:01:17,040
joel lord i

00:01:15,040 --> 00:01:19,680
am a developer advocate at red hat

00:01:17,040 --> 00:01:21,759
openshift i'm currently based in ottawa

00:01:19,680 --> 00:01:24,240
lovely ottawa canada

00:01:21,759 --> 00:01:25,680
if you were in the room between the the

00:01:24,240 --> 00:01:27,520
between the two talks you you probably

00:01:25,680 --> 00:01:30,240
heard me talk a little bit about

00:01:27,520 --> 00:01:30,880
me already um if you ever want to get in

00:01:30,240 --> 00:01:32,320
touch

00:01:30,880 --> 00:01:34,079
twitter is always the best way i love i

00:01:32,320 --> 00:01:36,720
love twitter i'm always on twitter

00:01:34,079 --> 00:01:37,920
um so my twitter handle is kind of all

00:01:36,720 --> 00:01:39,920
over the place you'll see it on my

00:01:37,920 --> 00:01:41,920
slides that's joel with two underscores

00:01:39,920 --> 00:01:44,240
largely underscore under scorelord

00:01:41,920 --> 00:01:45,520
it's like the worst clear and or ever

00:01:44,240 --> 00:01:48,799
handle ever

00:01:45,520 --> 00:01:50,880
um but but hey it works

00:01:48,799 --> 00:01:53,119
i'm also french canadian um so you'll

00:01:50,880 --> 00:01:55,200
notice the accent sometimes

00:01:53,119 --> 00:01:56,159
i just had a little glitch there

00:01:55,200 --> 00:01:57,439
seriously though

00:01:56,159 --> 00:01:59,520
yeah twitter always the best way to

00:01:57,439 --> 00:02:00,399
reach me uh feel free any questions that

00:01:59,520 --> 00:02:02,719
you might have

00:02:00,399 --> 00:02:03,840
um just send them my way uh whether it's

00:02:02,719 --> 00:02:06,000
on containers or

00:02:03,840 --> 00:02:07,680
openshift um those are topics that i'm

00:02:06,000 --> 00:02:10,720
comfortable chatting

00:02:07,680 --> 00:02:14,000
um you know winter barbecuing

00:02:10,720 --> 00:02:14,000
beer brewing doesn't matter

00:02:18,000 --> 00:02:23,040
okay so let's talk about containers so

00:02:21,040 --> 00:02:23,760
uh why should you use containers and

00:02:23,040 --> 00:02:25,840
that's the first

00:02:23,760 --> 00:02:27,280
question that i wanted to address um i

00:02:25,840 --> 00:02:29,120
know that you've probably all heard

00:02:27,280 --> 00:02:30,319
about the term container and and you've

00:02:29,120 --> 00:02:33,599
heard about it but but

00:02:30,319 --> 00:02:36,160
really why should you start using those

00:02:33,599 --> 00:02:37,920
well really it's all about having that

00:02:36,160 --> 00:02:40,480
same environment between

00:02:37,920 --> 00:02:41,440
uh your production and and your

00:02:40,480 --> 00:02:43,200
development environment

00:02:41,440 --> 00:02:45,040
it's really about replicating that whole

00:02:43,200 --> 00:02:47,200
environment and making sure

00:02:45,040 --> 00:02:48,080
that you can reproduce everything inside

00:02:47,200 --> 00:02:51,280
all of those

00:02:48,080 --> 00:02:51,840
environments and and that's that's kind

00:02:51,280 --> 00:02:54,560
of the

00:02:51,840 --> 00:02:55,760
the the one uh that the one thing that

00:02:54,560 --> 00:02:58,159
people will often

00:02:55,760 --> 00:02:59,200
time talk about um having that same

00:02:58,159 --> 00:03:01,360
production environment

00:02:59,200 --> 00:03:02,879
all over the place but it's also good

00:03:01,360 --> 00:03:04,800
for a bunch of different reasons first

00:03:02,879 --> 00:03:07,760
of all onboarding team members

00:03:04,800 --> 00:03:09,599
it is great great great to uh on board

00:03:07,760 --> 00:03:10,800
and ut members so i don't know about you

00:03:09,599 --> 00:03:11,840
but i've i've been doing some

00:03:10,800 --> 00:03:15,360
consultancy

00:03:11,840 --> 00:03:17,680
back in the days or a few years ago and

00:03:15,360 --> 00:03:19,840
um you know i i was i was uh an

00:03:17,680 --> 00:03:21,360
engineering manager and whenever i had a

00:03:19,840 --> 00:03:22,319
team that was uh you know rolling it a

00:03:21,360 --> 00:03:25,280
little bit late or

00:03:22,319 --> 00:03:26,640
having um struggles just to meet their

00:03:25,280 --> 00:03:27,519
deadline i would just jump into the

00:03:26,640 --> 00:03:29,440
project

00:03:27,519 --> 00:03:30,879
but sometimes i would have to you know

00:03:29,440 --> 00:03:33,440
set up my whole environment

00:03:30,879 --> 00:03:35,200
and oh well they were using um you know

00:03:33,440 --> 00:03:37,280
python 3 but i had the

00:03:35,200 --> 00:03:38,560
python 2 runtimes installed on my

00:03:37,280 --> 00:03:40,959
machine or

00:03:38,560 --> 00:03:42,480
they were using you know php and apache

00:03:40,959 --> 00:03:44,560
but i didn't have any of that

00:03:42,480 --> 00:03:47,840
installed on my machine so just getting

00:03:44,560 --> 00:03:49,840
everything ready it takes a lot of time

00:03:47,840 --> 00:03:51,920
so having containers can make it really

00:03:49,840 --> 00:03:54,560
really easy and you're gonna see why

00:03:51,920 --> 00:03:56,000
um to just onboard sorry to onboard a

00:03:54,560 --> 00:03:58,000
new team member

00:03:56,000 --> 00:04:00,159
so greg we're great for that it's also

00:03:58,000 --> 00:04:01,680
great for open source contributions and

00:04:00,159 --> 00:04:04,400
that is one of the things

00:04:01,680 --> 00:04:04,720
that really convinced me that containers

00:04:04,400 --> 00:04:08,239
uh

00:04:04,720 --> 00:04:11,120
were were the way to go so it it

00:04:08,239 --> 00:04:11,680
once a uh i i i was using a project and

00:04:11,120 --> 00:04:13,360
there was

00:04:11,680 --> 00:04:16,079
this tiny tiny little change that i

00:04:13,360 --> 00:04:18,400
wanted to to introduce into that project

00:04:16,079 --> 00:04:19,440
it was a php project and i i used to do

00:04:18,400 --> 00:04:21,120
php a lot

00:04:19,440 --> 00:04:23,120
i've been doing javascript development

00:04:21,120 --> 00:04:25,199
now for

00:04:23,120 --> 00:04:27,440
more than 10 years but back in the days

00:04:25,199 --> 00:04:29,120
i was a php developer

00:04:27,440 --> 00:04:30,800
and there was a stunning change and i

00:04:29,120 --> 00:04:32,639
knew i could potentially just do that

00:04:30,800 --> 00:04:35,520
change myself

00:04:32,639 --> 00:04:36,479
but the thing is i you know i would have

00:04:35,520 --> 00:04:38,800
had to

00:04:36,479 --> 00:04:40,400
clone the repository install apache

00:04:38,800 --> 00:04:42,720
install the php runtimes

00:04:40,400 --> 00:04:44,560
install a database find some data to

00:04:42,720 --> 00:04:46,720
input into my database

00:04:44,560 --> 00:04:48,479
do all of that just to do that small

00:04:46,720 --> 00:04:50,639
little contribution

00:04:48,479 --> 00:04:52,160
that's a lot of trouble so what i would

00:04:50,639 --> 00:04:54,080
have normally done

00:04:52,160 --> 00:04:56,160
is you know just put in an issue in

00:04:54,080 --> 00:04:57,680
github right that's what we do

00:04:56,160 --> 00:04:59,360
because it's too much trouble to install

00:04:57,680 --> 00:05:01,919
all of that tooling

00:04:59,360 --> 00:05:03,680
but that specific project had a whole

00:05:01,919 --> 00:05:05,199
containerized environment i was able to

00:05:03,680 --> 00:05:06,320
use docker compose which i'm going to

00:05:05,199 --> 00:05:08,400
introduce at the end

00:05:06,320 --> 00:05:10,080
of this presentation and with a single

00:05:08,400 --> 00:05:12,160
command immediately

00:05:10,080 --> 00:05:14,000
all that environment was there for me i

00:05:12,160 --> 00:05:15,840
had all the runtimes available i had a

00:05:14,000 --> 00:05:18,000
database that was ready to be used i had

00:05:15,840 --> 00:05:20,479
some data inside that database

00:05:18,000 --> 00:05:21,120
everything was there and ready for me to

00:05:20,479 --> 00:05:24,240
use

00:05:21,120 --> 00:05:24,720
so that really really really convinced

00:05:24,240 --> 00:05:27,039
me

00:05:24,720 --> 00:05:27,919
that containers were definitely a good

00:05:27,039 --> 00:05:31,120
tool that i

00:05:27,919 --> 00:05:33,280
should use more in my day-to-day life

00:05:31,120 --> 00:05:35,199
of course there's also testing if you've

00:05:33,280 --> 00:05:37,360
ever done manual or if you've ever had

00:05:35,199 --> 00:05:40,240
to deal with manual qa people

00:05:37,360 --> 00:05:40,479
i've had to in the past and i must admit

00:05:40,240 --> 00:05:43,440
i

00:05:40,479 --> 00:05:44,560
am guilty of that i got into some well

00:05:43,440 --> 00:05:47,039
disagreements

00:05:44,560 --> 00:05:48,800
with the qa team just because they had

00:05:47,039 --> 00:05:50,720
an issue i couldn't reproduce it

00:05:48,800 --> 00:05:52,000
and i just ended up tagging the issue in

00:05:50,720 --> 00:05:54,880
jira as being

00:05:52,000 --> 00:05:56,479
non-reproducible um and then they just

00:05:54,880 --> 00:05:58,080
kept reopening it because it would

00:05:56,479 --> 00:06:01,120
happen all the time because they were

00:05:58,080 --> 00:06:04,319
running on a you know php 7.1 or

00:06:01,120 --> 00:06:06,479
node 12 and i was running on node 14.

00:06:04,319 --> 00:06:08,479
so making sure that the environment is

00:06:06,479 --> 00:06:10,000
the same for everybody in your team

00:06:08,479 --> 00:06:11,919
really really is important and that's

00:06:10,000 --> 00:06:15,199
one of the key features of using

00:06:11,919 --> 00:06:16,479
containers all right it helps you with a

00:06:15,199 --> 00:06:18,080
lot of things that won't solve all of

00:06:16,479 --> 00:06:19,840
your problems it won't help you with the

00:06:18,080 --> 00:06:21,600
networking dns routing everything that

00:06:19,840 --> 00:06:24,000
has to do with networking

00:06:21,600 --> 00:06:26,080
with your microservices and containers

00:06:24,000 --> 00:06:28,880
that can still get a little bit tricky

00:06:26,080 --> 00:06:30,960
and same thing with scaling uh it kind

00:06:28,880 --> 00:06:32,000
of is a good step in the right direction

00:06:30,960 --> 00:06:33,840
but

00:06:32,000 --> 00:06:35,440
it won't solve all of your scalability

00:06:33,840 --> 00:06:36,960
problems by itself

00:06:35,440 --> 00:06:38,639
uh so in order to help you with

00:06:36,960 --> 00:06:39,520
networking and scaling you will need

00:06:38,639 --> 00:06:41,840
another tool

00:06:39,520 --> 00:06:43,840
to orchestrate those containers um such

00:06:41,840 --> 00:06:45,199
as kubernetes

00:06:43,840 --> 00:06:47,120
and there's a talk about kubernetes

00:06:45,199 --> 00:06:48,160
right after the stock so you know just

00:06:47,120 --> 00:06:50,000
stay in this track

00:06:48,160 --> 00:06:51,840
and you'll have all the good information

00:06:50,000 --> 00:06:53,680
about kubernetes

00:06:51,840 --> 00:06:55,280
okay so what is a container exactly well

00:06:53,680 --> 00:06:56,880
a container is a standard unit of

00:06:55,280 --> 00:06:58,880
software that packages up

00:06:56,880 --> 00:07:00,400
code and all of its dependencies so the

00:06:58,880 --> 00:07:02,080
application runs quickly

00:07:00,400 --> 00:07:03,919
and reliably from one computing

00:07:02,080 --> 00:07:04,720
environment to another so really it's

00:07:03,919 --> 00:07:06,400
all about

00:07:04,720 --> 00:07:07,840
packaging up everything and making sure

00:07:06,400 --> 00:07:10,639
that the whole environment

00:07:07,840 --> 00:07:12,560
now is shipped with your application so

00:07:10,639 --> 00:07:15,680
that it makes it more

00:07:12,560 --> 00:07:17,199
more reliable and more reproducible

00:07:15,680 --> 00:07:18,639
a lightweight standalone executable

00:07:17,199 --> 00:07:20,720
package of software that includes

00:07:18,639 --> 00:07:22,400
everything needed to run an application

00:07:20,720 --> 00:07:24,240
so code runtime system dual system

00:07:22,400 --> 00:07:26,479
libraries and settings

00:07:24,240 --> 00:07:27,440
so basically you can imagine a container

00:07:26,479 --> 00:07:30,880
being

00:07:27,440 --> 00:07:33,360
one big one big big executable

00:07:30,880 --> 00:07:34,000
zip file that has not only your source

00:07:33,360 --> 00:07:35,680
code so

00:07:34,000 --> 00:07:37,039
and i'll show examples of php and

00:07:35,680 --> 00:07:39,120
node.js because those are

00:07:37,039 --> 00:07:41,199
languages that i'm familiar with but it

00:07:39,120 --> 00:07:42,960
applies for any language right

00:07:41,199 --> 00:07:45,120
but now imagine not only shipping your

00:07:42,960 --> 00:07:46,960
javascript files but also shipping

00:07:45,120 --> 00:07:48,560
you know the node.js runtime and all the

00:07:46,960 --> 00:07:51,120
configuration that is needed to

00:07:48,560 --> 00:07:52,879
run those files so making sure you ship

00:07:51,120 --> 00:07:56,319
everything as a whole and not

00:07:52,879 --> 00:07:58,639
just your source code it's also a

00:07:56,319 --> 00:08:00,960
disposable unit so once completed

00:07:58,639 --> 00:08:02,960
once it's completed it destroys itself

00:08:00,960 --> 00:08:04,479
along with all other dependencies and

00:08:02,960 --> 00:08:06,479
that's very important if you're going to

00:08:04,479 --> 00:08:08,800
use it for testing especially

00:08:06,479 --> 00:08:09,840
that is a really really key thing to

00:08:08,800 --> 00:08:12,160
keep in mind

00:08:09,840 --> 00:08:13,840
if you start in inputting or if you have

00:08:12,160 --> 00:08:16,000
some some automated tests that will put

00:08:13,840 --> 00:08:18,080
in some information in your database

00:08:16,000 --> 00:08:19,280
once you destroy your containers once

00:08:18,080 --> 00:08:21,520
you take them down

00:08:19,280 --> 00:08:22,960
all of that garbage that you've inputted

00:08:21,520 --> 00:08:24,800
in there is destroyed

00:08:22,960 --> 00:08:26,560
it's all disappeared and the next time

00:08:24,800 --> 00:08:27,919
you you start your testing

00:08:26,560 --> 00:08:29,919
everything you start everything from

00:08:27,919 --> 00:08:31,280
fresh so very very good benefit in

00:08:29,919 --> 00:08:33,279
making sure that it's it's more

00:08:31,280 --> 00:08:36,240
reproducible reproducible

00:08:33,279 --> 00:08:37,440
every time all right so you might think

00:08:36,240 --> 00:08:40,800
it's just like a vm

00:08:37,440 --> 00:08:42,080
well nope it's not so it is very similar

00:08:40,800 --> 00:08:44,720
in the sense of of the

00:08:42,080 --> 00:08:46,399
the end result but if you have vms and

00:08:44,720 --> 00:08:47,760
without going into all of the details

00:08:46,399 --> 00:08:49,519
but basically you have all of your

00:08:47,760 --> 00:08:52,240
infrastructure so a laptop or

00:08:49,519 --> 00:08:53,839
a server somewhere you've got a host

00:08:52,240 --> 00:08:55,440
operating system and then you've got

00:08:53,839 --> 00:08:57,279
this thing called the hypervisor

00:08:55,440 --> 00:08:59,440
which is in charge of distributing the

00:08:57,279 --> 00:09:00,959
resources and allocate the resources to

00:08:59,440 --> 00:09:03,360
a bunch of different vms

00:09:00,959 --> 00:09:04,160
so it'll take a part of your you know of

00:09:03,360 --> 00:09:07,440
your ram

00:09:04,160 --> 00:09:09,680
and then dedicate that to another vm

00:09:07,440 --> 00:09:10,800
and then that vm will also have its own

00:09:09,680 --> 00:09:13,200
operating system

00:09:10,800 --> 00:09:14,720
with all of the applications um instead

00:09:13,200 --> 00:09:16,240
running inside that vm and you have the

00:09:14,720 --> 00:09:18,480
same for all of your

00:09:16,240 --> 00:09:19,519
resources when you're dealing with

00:09:18,480 --> 00:09:22,720
containers really

00:09:19,519 --> 00:09:24,480
um it's really part of the the linux

00:09:22,720 --> 00:09:26,080
operating system

00:09:24,480 --> 00:09:28,480
if you're interested in understanding

00:09:26,080 --> 00:09:30,480
more about exactly how containers work

00:09:28,480 --> 00:09:32,800
i have a link at the end for a great

00:09:30,480 --> 00:09:34,800
blog post by larry garfield

00:09:32,800 --> 00:09:36,000
called the containers a lie and it

00:09:34,800 --> 00:09:38,080
really explains

00:09:36,000 --> 00:09:39,920
why why do we say that it's really part

00:09:38,080 --> 00:09:41,839
of the linux operating system and it has

00:09:39,920 --> 00:09:44,399
to do with resource allocated

00:09:41,839 --> 00:09:44,959
allocation and so on but how does it

00:09:44,399 --> 00:09:47,040
work

00:09:44,959 --> 00:09:49,040
essentially as a software developer for

00:09:47,040 --> 00:09:50,240
you just the basics

00:09:49,040 --> 00:09:52,480
you know you've got your infrastructure

00:09:50,240 --> 00:09:54,560
you've got your host operating system

00:09:52,480 --> 00:09:55,839
linux if it's not linux you will need

00:09:54,560 --> 00:09:57,519
some additional layer

00:09:55,839 --> 00:09:59,519
that would run a virtual machine so if

00:09:57,519 --> 00:10:00,240
you have a mac os or a windows machine

00:09:59,519 --> 00:10:03,279
you would need

00:10:00,240 --> 00:10:05,360
docker which will start a linux virtual

00:10:03,279 --> 00:10:06,959
machine and then all of those

00:10:05,360 --> 00:10:09,440
those containers are simply just

00:10:06,959 --> 00:10:12,800
processes inside of

00:10:09,440 --> 00:10:14,640
that inside your linux operating system

00:10:12,800 --> 00:10:16,000
so it's blazing fast you'll see some

00:10:14,640 --> 00:10:17,600
examples today

00:10:16,000 --> 00:10:19,120
i'll start some containers and it just

00:10:17,600 --> 00:10:21,200
starts immediately

00:10:19,120 --> 00:10:22,240
so it's really really really quick and

00:10:21,200 --> 00:10:24,079
it has a better

00:10:22,240 --> 00:10:26,160
um better resource management that

00:10:24,079 --> 00:10:27,839
discuss because i don't need a full

00:10:26,160 --> 00:10:30,079
other operating system for each one of

00:10:27,839 --> 00:10:31,360
those containers

00:10:30,079 --> 00:10:33,279
all right i've talked about containers

00:10:31,360 --> 00:10:34,720
so far where does docker fit into that

00:10:33,279 --> 00:10:35,200
well i've just hinted a little bit at

00:10:34,720 --> 00:10:36,880
that

00:10:35,200 --> 00:10:38,480
uh it is one of the tools to run

00:10:36,880 --> 00:10:40,560
containers um on

00:10:38,480 --> 00:10:42,160
windows or mac os it's it's probably the

00:10:40,560 --> 00:10:42,800
well it's definitely the most popular

00:10:42,160 --> 00:10:46,079
tool

00:10:42,800 --> 00:10:46,560
um on windows or mac os it is it will

00:10:46,079 --> 00:10:48,640
create

00:10:46,560 --> 00:10:50,880
a virtual machine for you uh if you're

00:10:48,640 --> 00:10:51,920
using linux you can also use podman as

00:10:50,880 --> 00:10:54,560
an alternative

00:10:51,920 --> 00:10:56,640
there it is um it works really really

00:10:54,560 --> 00:10:58,959
well it doesn't have that demon

00:10:56,640 --> 00:10:59,760
on and it and it's that's what i use

00:10:58,959 --> 00:11:02,959
right now

00:10:59,760 --> 00:11:04,480
if you install docker on fedora which is

00:11:02,959 --> 00:11:06,320
my operating system

00:11:04,480 --> 00:11:07,680
it will actually install podman but it

00:11:06,320 --> 00:11:09,519
will just create an elias

00:11:07,680 --> 00:11:11,360
between padman and docker so you can use

00:11:09,519 --> 00:11:13,360
them both they have the exact same

00:11:11,360 --> 00:11:16,399
syntax

00:11:13,360 --> 00:11:18,399
okay so uh containers in practice so

00:11:16,399 --> 00:11:20,480
i figured why don't i show you real you

00:11:18,399 --> 00:11:23,760
know examples that i've had and

00:11:20,480 --> 00:11:25,440
use cases for containers and um yeah

00:11:23,760 --> 00:11:27,440
that will give you a better feel of how

00:11:25,440 --> 00:11:29,279
you can use them to make your life as a

00:11:27,440 --> 00:11:32,800
software developer a little bit more

00:11:29,279 --> 00:11:34,399
uh productive i guess with containers

00:11:32,800 --> 00:11:36,399
one of my first use cases for a

00:11:34,399 --> 00:11:37,839
container was when one of my

00:11:36,399 --> 00:11:40,320
friends came to me and he was like hey

00:11:37,839 --> 00:11:42,399
you know i'm writing this php code i

00:11:40,320 --> 00:11:43,839
have this weird issue i just need

00:11:42,399 --> 00:11:45,519
another pair of eyes would you mind

00:11:43,839 --> 00:11:48,800
taking a look at it

00:11:45,519 --> 00:11:50,880
and uh sure i mean i always

00:11:48,800 --> 00:11:51,839
loved to help my friends but i didn't

00:11:50,880 --> 00:11:55,120
have php

00:11:51,839 --> 00:11:56,959
or apache installed then you know

00:11:55,120 --> 00:11:59,040
all of that set up it just takes time

00:11:56,959 --> 00:12:01,519
and i i didn't want to

00:11:59,040 --> 00:12:03,040
run with all of those things but i had

00:12:01,519 --> 00:12:03,760
heard about containers so i figured you

00:12:03,040 --> 00:12:06,399
know

00:12:03,760 --> 00:12:06,959
i can probably use that to help me and

00:12:06,399 --> 00:12:10,079
him

00:12:06,959 --> 00:12:11,920
at the moment so what i did basically uh

00:12:10,079 --> 00:12:14,240
was to use docker so i've used the

00:12:11,920 --> 00:12:16,240
docker command um and yes i've built a

00:12:14,240 --> 00:12:19,279
terminal inside my slides that

00:12:16,240 --> 00:12:21,600
runs inside my terminal because i can

00:12:19,279 --> 00:12:24,320
right also it's an open source tool so

00:12:21,600 --> 00:12:27,360
if you're interested in cli slides

00:12:24,320 --> 00:12:29,920
hit me up afterwards okay so um so

00:12:27,360 --> 00:12:32,880
i decided to use docker so docker a run

00:12:29,920 --> 00:12:35,440
is the command to run a container

00:12:32,880 --> 00:12:36,800
um i want to run that in the background

00:12:35,440 --> 00:12:38,000
so i'm going to start an apache server

00:12:36,800 --> 00:12:41,120
i'll run it in the background with

00:12:38,000 --> 00:12:42,720
dash d what i'll need is to mount some

00:12:41,120 --> 00:12:43,760
ports i want to make sure that any

00:12:42,720 --> 00:12:47,279
incoming request

00:12:43,760 --> 00:12:49,279
on my local machine will be mapped into

00:12:47,279 --> 00:12:50,880
the port 80 inside my container which is

00:12:49,279 --> 00:12:53,920
the port that runs

00:12:50,880 --> 00:12:55,760
docker so i'll map those ports

00:12:53,920 --> 00:12:58,399
also map some files you know i've got

00:12:55,760 --> 00:13:01,279
some php files on my file system

00:12:58,399 --> 00:13:02,480
and i i want to mount that into the

00:13:01,279 --> 00:13:05,440
apache

00:13:02,480 --> 00:13:07,600
folder to serve the files so it's sample

00:13:05,440 --> 00:13:10,240
slash php

00:13:07,600 --> 00:13:11,519
amount that to slash var dot html so if

00:13:10,240 --> 00:13:13,040
you're familiar with apache that

00:13:11,519 --> 00:13:15,200
probably rings the bell

00:13:13,040 --> 00:13:17,040
and uh what else do i need i'll make

00:13:15,200 --> 00:13:17,760
sure i remove this afterwards i'll give

00:13:17,040 --> 00:13:21,240
it a name

00:13:17,760 --> 00:13:24,079
my php and i'll start php

00:13:21,240 --> 00:13:27,040
7.4 um i'm

00:13:24,079 --> 00:13:27,760
i'm a little bit behind with my php

00:13:27,040 --> 00:13:30,880
version

00:13:27,760 --> 00:13:32,800
here but you get the point all right php

00:13:30,880 --> 00:13:34,639
7.4 apache

00:13:32,800 --> 00:13:36,079
let's give that a try and that's it it

00:13:34,639 --> 00:13:37,839
started um

00:13:36,079 --> 00:13:39,839
so when you saw that random string that

00:13:37,839 --> 00:13:42,560
that that was my container id

00:13:39,839 --> 00:13:43,519
and my container was started already so

00:13:42,560 --> 00:13:47,040
now if i do a

00:13:43,519 --> 00:13:50,079
curl local host 8080

00:13:47,040 --> 00:13:51,760
uh you can see that i'm um pinging my my

00:13:50,079 --> 00:13:54,480
php page here

00:13:51,760 --> 00:13:56,320
um are you not convinced let me open up

00:13:54,480 --> 00:13:59,040
vs code and let's just

00:13:56,320 --> 00:13:59,839
take a quick look at my sample i know

00:13:59,040 --> 00:14:03,360
it's not on screen

00:13:59,839 --> 00:14:05,600
yet all right there it is

00:14:03,360 --> 00:14:07,360
and you can see here that well you know

00:14:05,600 --> 00:14:11,040
that's my php file

00:14:07,360 --> 00:14:14,839
and i could change that to say hello

00:14:11,040 --> 00:14:16,000
world and then just add a hashtag os

00:14:14,839 --> 00:14:19,519
101.

00:14:16,000 --> 00:14:23,040
so if i do a curl local host again

00:14:19,519 --> 00:14:26,560
8080 and you can see that it appeared

00:14:23,040 --> 00:14:27,600
so it's there i also had curl localhost

00:14:26,560 --> 00:14:30,880
00:14:27,600 --> 00:14:34,079
name equals joel and i can you know use

00:14:30,880 --> 00:14:36,160
like it's it's just hp so it works

00:14:34,079 --> 00:14:38,480
cool uh how cool is that like

00:14:36,160 --> 00:14:42,240
immediately i'm able to run

00:14:38,480 --> 00:14:44,880
um an apache server with php

00:14:42,240 --> 00:14:46,639
let's just take a look at those uh and

00:14:44,880 --> 00:14:49,680
i'll stop this server

00:14:46,639 --> 00:14:50,480
uh this yep this php server uh docker

00:14:49,680 --> 00:14:53,920
stop

00:14:50,480 --> 00:14:57,040
how did i call it my php i think that's

00:14:53,920 --> 00:14:59,279
that was it and um now if i if i try to

00:14:57,040 --> 00:15:00,320
uh php and i i don't have php installed

00:14:59,279 --> 00:15:02,800
on my laptop

00:15:00,320 --> 00:15:03,839
and if i try to local curl localhost

00:15:02,800 --> 00:15:05,440
8080 again

00:15:03,839 --> 00:15:06,959
you can see that you know it just

00:15:05,440 --> 00:15:08,560
doesn't work

00:15:06,959 --> 00:15:10,399
i've also realized that i have a bunch

00:15:08,560 --> 00:15:11,120
of containers running and i'll just need

00:15:10,399 --> 00:15:14,720
to

00:15:11,120 --> 00:15:16,720
um to stop them or else i'm gonna run

00:15:14,720 --> 00:15:18,959
into issues later on today

00:15:16,720 --> 00:15:20,480
okay so what did i do right there that

00:15:18,959 --> 00:15:22,560
was a lot of information that was really

00:15:20,480 --> 00:15:23,360
quick so i've used docker run which is

00:15:22,560 --> 00:15:25,600
the command to

00:15:23,360 --> 00:15:26,880
start a container and you have to give

00:15:25,600 --> 00:15:28,720
it an image name

00:15:26,880 --> 00:15:30,240
so that the most basic command that you

00:15:28,720 --> 00:15:32,800
can do uh docker run

00:15:30,240 --> 00:15:34,560
um and in in my case i've used php7 not

00:15:32,800 --> 00:15:36,639
for apache

00:15:34,560 --> 00:15:38,639
so php is the name of the image the

00:15:36,639 --> 00:15:40,480
version is 7.4 and then

00:15:38,639 --> 00:15:42,480
there's many variants that are available

00:15:40,480 --> 00:15:44,320
for different images

00:15:42,480 --> 00:15:46,560
so in the case of php they have an

00:15:44,320 --> 00:15:47,360
apache variant which includes an apache

00:15:46,560 --> 00:15:50,079
server

00:15:47,360 --> 00:15:51,920
um but yeah you won't necessarily find

00:15:50,079 --> 00:15:54,720
apache everywhere

00:15:51,920 --> 00:15:55,040
if you want to run anything if you want

00:15:54,720 --> 00:15:57,040
to

00:15:55,040 --> 00:15:59,199
try redis if you want to try kafka if

00:15:57,040 --> 00:16:00,320
you want to run a mysql database you

00:15:59,199 --> 00:16:03,240
want to test out

00:16:00,320 --> 00:16:04,560
mongodb look for their base image on

00:16:03,240 --> 00:16:07,759
hub.docker.com

00:16:04,560 --> 00:16:09,199
there's a huge collection of base images

00:16:07,759 --> 00:16:12,800
and you can just take a look

00:16:09,199 --> 00:16:13,440
and look for official images why don't i

00:16:12,800 --> 00:16:16,560
bring it up

00:16:13,440 --> 00:16:16,560
actually and

00:16:16,880 --> 00:16:22,320
let me open up a new tab there it is

00:16:20,839 --> 00:16:24,800
hub.docker.com

00:16:22,320 --> 00:16:26,720
and yeah and there it is so you can find

00:16:24,800 --> 00:16:28,399
a bunch of different thing i said uh

00:16:26,720 --> 00:16:30,160
let's take a look at my sequel um

00:16:28,399 --> 00:16:32,399
there's probably a base image for my

00:16:30,160 --> 00:16:33,440
mysql my sequel depending on how you

00:16:32,399 --> 00:16:35,839
want to call it

00:16:33,440 --> 00:16:37,440
and you have it here so basically it

00:16:35,839 --> 00:16:39,120
will give you all the information on how

00:16:37,440 --> 00:16:40,320
to use it all the version numbers that

00:16:39,120 --> 00:16:42,399
are available

00:16:40,320 --> 00:16:43,519
as well as all the variants and a lot of

00:16:42,399 --> 00:16:46,639
information about

00:16:43,519 --> 00:16:49,680
each image okay so

00:16:46,639 --> 00:16:51,759
so i've decided to use php7 not for

00:16:49,680 --> 00:16:53,600
um i've also mapped some ports so i've

00:16:51,759 --> 00:16:56,800
told docker or

00:16:53,600 --> 00:16:58,079
podman in my case mapped the port 8080

00:16:56,800 --> 00:17:00,880
on my local machine

00:16:58,079 --> 00:17:03,199
to the port 80 inside that container so

00:17:00,880 --> 00:17:04,240
apache runs on port 80 inside my

00:17:03,199 --> 00:17:06,559
container

00:17:04,240 --> 00:17:07,439
but i need to map or to tell my my

00:17:06,559 --> 00:17:10,319
computer to

00:17:07,439 --> 00:17:12,000
route the traffic into that container so

00:17:10,319 --> 00:17:14,240
i've mapped it i've mounted it to the

00:17:12,000 --> 00:17:16,839
port 8080 on my local machine

00:17:14,240 --> 00:17:18,480
which then maps to port 80 inside the

00:17:16,839 --> 00:17:20,160
container

00:17:18,480 --> 00:17:22,319
i've also did the same thing with a

00:17:20,160 --> 00:17:23,280
folder on my machine so i said well take

00:17:22,319 --> 00:17:26,160
my current working

00:17:23,280 --> 00:17:27,720
directory and then map mount that into

00:17:26,160 --> 00:17:30,240
slash virus

00:17:27,720 --> 00:17:33,520
www.html and

00:17:30,240 --> 00:17:36,440
that basically tells my container to use

00:17:33,520 --> 00:17:37,840
my current working directory as slash

00:17:36,440 --> 00:17:39,520
virus.html

00:17:37,840 --> 00:17:41,360
um and as far as the container is

00:17:39,520 --> 00:17:43,520
concerned you know it's

00:17:41,360 --> 00:17:45,280
my current working directory is that

00:17:43,520 --> 00:17:47,440
folder exactly

00:17:45,280 --> 00:17:49,039
so that enables me to run the container

00:17:47,440 --> 00:17:50,160
do the changes on my local machine i

00:17:49,039 --> 00:17:52,000
don't need to

00:17:50,160 --> 00:17:53,760
do the change in the files inside the

00:17:52,000 --> 00:17:54,559
container so you you saw how i was able

00:17:53,760 --> 00:17:56,000
to

00:17:54,559 --> 00:17:57,679
change the source code on my local

00:17:56,000 --> 00:17:59,039
machine and immediately the changes were

00:17:57,679 --> 00:18:00,559
reflected in the container

00:17:59,039 --> 00:18:03,600
that's because it actually uses the

00:18:00,559 --> 00:18:05,280
exact same file system

00:18:03,600 --> 00:18:07,039
other useful flags that you could use

00:18:05,280 --> 00:18:09,120
and and that i actually used in that

00:18:07,039 --> 00:18:10,880
example dash d to run it in detached

00:18:09,120 --> 00:18:13,200
mode or to run it in the background

00:18:10,880 --> 00:18:14,880
if i would have not used a dashd you

00:18:13,200 --> 00:18:16,880
would have seen all the logs from apache

00:18:14,880 --> 00:18:18,880
command come out

00:18:16,880 --> 00:18:20,640
dash dash rm removes the container after

00:18:18,880 --> 00:18:21,840
it stops so it cleans up

00:18:20,640 --> 00:18:23,919
one of the things when you start playing

00:18:21,840 --> 00:18:24,640
around with containers is that you need

00:18:23,919 --> 00:18:26,240
to download

00:18:24,640 --> 00:18:28,000
it so i cheated a little bit i've used

00:18:26,240 --> 00:18:30,480
an image that i already had in my

00:18:28,000 --> 00:18:31,440
cache so i didn't have to download the

00:18:30,480 --> 00:18:34,080
whole image

00:18:31,440 --> 00:18:35,520
which makes it a little bit faster but

00:18:34,080 --> 00:18:37,919
once you're done with your

00:18:35,520 --> 00:18:39,120
and and the thing is that um it'll end

00:18:37,919 --> 00:18:42,320
up taking a lot of this

00:18:39,120 --> 00:18:43,760
space so using dash dash rm removes the

00:18:42,320 --> 00:18:45,760
container once you're done

00:18:43,760 --> 00:18:47,840
it cleans up a little bit and will help

00:18:45,760 --> 00:18:50,000
you to save some disk space

00:18:47,840 --> 00:18:51,679
dash dash name names your container you

00:18:50,000 --> 00:18:53,760
don't need to use that uh

00:18:51,679 --> 00:18:55,280
you saw that big random string that came

00:18:53,760 --> 00:18:58,160
out when i typed my

00:18:55,280 --> 00:18:59,679
docker run command i could use that to

00:18:58,160 --> 00:19:01,280
address my my container

00:18:59,679 --> 00:19:03,280
when you have one or two just lying

00:19:01,280 --> 00:19:05,120
around it works well

00:19:03,280 --> 00:19:06,720
but when you want to start scripting

00:19:05,120 --> 00:19:07,360
you'll need some name for your container

00:19:06,720 --> 00:19:10,000
so i have

00:19:07,360 --> 00:19:12,080
a an elias that runs on my machine which

00:19:10,000 --> 00:19:13,840
just starts an nginx container from the

00:19:12,080 --> 00:19:15,760
folder that i'm currently in

00:19:13,840 --> 00:19:17,280
um and then i have another command to

00:19:15,760 --> 00:19:19,520
stop that container so i give it a name

00:19:17,280 --> 00:19:21,440
so i can reference it later on

00:19:19,520 --> 00:19:22,960
so those are use cases for using a name

00:19:21,440 --> 00:19:24,160
for your containers

00:19:22,960 --> 00:19:26,240
right so that's the full command that

00:19:24,160 --> 00:19:28,160
i've used so docker run dash d right in

00:19:26,240 --> 00:19:29,360
the background dash dash rm to clean it

00:19:28,160 --> 00:19:31,200
afterwards dash dash

00:19:29,360 --> 00:19:33,280
name just to give it a name so i was

00:19:31,200 --> 00:19:36,160
able to stop it using that name

00:19:33,280 --> 00:19:36,960
dash v to mount a volume dash b to map

00:19:36,160 --> 00:19:38,960
the ports

00:19:36,960 --> 00:19:41,039
and then the name of the image and there

00:19:38,960 --> 00:19:44,160
you go you've got a php

00:19:41,039 --> 00:19:44,160
apache server

00:19:44,559 --> 00:19:48,960
another thing that you can do is with a

00:19:46,960 --> 00:19:52,000
different php variant

00:19:48,960 --> 00:19:54,400
i still i said i don't use php uh that's

00:19:52,000 --> 00:19:55,200
not entirely true i sometimes it's it's

00:19:54,400 --> 00:19:57,919
kind of a nice

00:19:55,200 --> 00:20:00,160
easy to use scripting language so i kind

00:19:57,919 --> 00:20:03,280
of like to to just write little scripts

00:20:00,160 --> 00:20:05,280
using php bash is fine but

00:20:03,280 --> 00:20:06,640
you know syntax can be a little bit

00:20:05,280 --> 00:20:07,600
tricky so sometimes it's a little bit

00:20:06,640 --> 00:20:11,120
easier to use

00:20:07,600 --> 00:20:13,440
php so what if i just wanted to

00:20:11,120 --> 00:20:14,720
execute a php script well i can use

00:20:13,440 --> 00:20:16,000
docker run again

00:20:14,720 --> 00:20:17,280
but this time instead of using the

00:20:16,000 --> 00:20:18,400
apache variant i don't need a

00:20:17,280 --> 00:20:20,799
full-fledged

00:20:18,400 --> 00:20:23,440
web server i just want the php

00:20:20,799 --> 00:20:25,679
executable so i can just use the php 7.4

00:20:23,440 --> 00:20:27,679
image and then after the name of the

00:20:25,679 --> 00:20:29,840
image i specify the command to run or

00:20:27,679 --> 00:20:33,679
the command that my container will run

00:20:29,840 --> 00:20:35,919
inside of the container once it started

00:20:33,679 --> 00:20:37,280
so in this case just php slash app slash

00:20:35,919 --> 00:20:40,799
cli

00:20:37,280 --> 00:20:41,760
which will uh simply start a the the php

00:20:40,799 --> 00:20:43,760
executable

00:20:41,760 --> 00:20:44,960
and apply it on the the script that i

00:20:43,760 --> 00:20:46,240
have there

00:20:44,960 --> 00:20:48,320
you can also specify your working

00:20:46,240 --> 00:20:51,120
directory if it makes it easier for you

00:20:48,320 --> 00:20:52,480
that's just an example there so what

00:20:51,120 --> 00:20:54,799
does that look like

00:20:52,480 --> 00:20:55,919
well basically you would have a docker

00:20:54,799 --> 00:20:59,440
run again

00:20:55,919 --> 00:21:04,320
and you would try to

00:20:59,440 --> 00:21:06,240
mount some files samples slash php

00:21:04,320 --> 00:21:08,080
and i will mount that to slash app

00:21:06,240 --> 00:21:10,080
doesn't matter where

00:21:08,080 --> 00:21:14,240
the colon z if you're curious if that's

00:21:10,080 --> 00:21:14,240
a security eye has to do with sc linux

00:21:14,400 --> 00:21:18,799
so php 7.4 is the executable that i'm

00:21:18,000 --> 00:21:20,559
going to use

00:21:18,799 --> 00:21:23,679
and then i'm going to use the php

00:21:20,559 --> 00:21:26,720
command cli tool

00:21:23,679 --> 00:21:28,720
to execute slash app cli.php

00:21:26,720 --> 00:21:30,880
and that's just a small php script that

00:21:28,720 --> 00:21:31,760
just you know counts the number of files

00:21:30,880 --> 00:21:34,000
in the folder

00:21:31,760 --> 00:21:34,799
so i can start that and it just outputs

00:21:34,000 --> 00:21:39,039
whatever that

00:21:34,799 --> 00:21:41,200
php script did output cool

00:21:39,039 --> 00:21:42,320
so if you want to run a node.js or

00:21:41,200 --> 00:21:44,320
express server

00:21:42,320 --> 00:21:45,679
it's very similar dr run dash v mount

00:21:44,320 --> 00:21:48,400
some files again um

00:21:45,679 --> 00:21:49,280
and mount map your ports and just give

00:21:48,400 --> 00:21:51,600
it the base image

00:21:49,280 --> 00:21:53,200
node 14 in this case and then the

00:21:51,600 --> 00:21:56,640
command to run once the

00:21:53,200 --> 00:21:58,559
container is started so uh yeah let's

00:21:56,640 --> 00:22:01,840
give that a try docker run

00:21:58,559 --> 00:22:04,880
uh i'll mount slash b sample slash

00:22:01,840 --> 00:22:08,960
node i believe that's the right folder

00:22:04,880 --> 00:22:11,679
uh i'll mount that to slash app

00:22:08,960 --> 00:22:12,559
i'll mount some ports so 3000 or maps

00:22:11,679 --> 00:22:14,720
and ports

00:22:12,559 --> 00:22:15,919
three thousand to three thousand dash

00:22:14,720 --> 00:22:19,760
dash rm dash d

00:22:15,919 --> 00:22:24,080
dash name dash dash name uh my node

00:22:19,760 --> 00:22:24,559
and node fourteen and node slash app all

00:22:24,080 --> 00:22:27,679
right

00:22:24,559 --> 00:22:30,799
so this is a folder that has a

00:22:27,679 --> 00:22:33,600
um an express server in it and now i can

00:22:30,799 --> 00:22:36,159
do curl localhost 3000

00:22:33,600 --> 00:22:36,720
and it has hello world perfect so you

00:22:36,159 --> 00:22:38,880
saw how

00:22:36,720 --> 00:22:40,000
really really quick it was say i wanted

00:22:38,880 --> 00:22:43,039
to try this

00:22:40,000 --> 00:22:45,360
exact same command but i want to try it

00:22:43,039 --> 00:22:46,799
with the node 12 just to see if it's

00:22:45,360 --> 00:22:48,400
backward compatible instead

00:22:46,799 --> 00:22:51,039
so i can change my version number to

00:22:48,400 --> 00:22:53,520
node 12 node slash app

00:22:51,039 --> 00:22:54,080
and it actually needs to download i

00:22:53,520 --> 00:22:56,799
didn't have

00:22:54,080 --> 00:22:58,320
note 12 i'm realizing so you'll see how

00:22:56,799 --> 00:22:59,200
long it takes to actually download an

00:22:58,320 --> 00:23:00,720
image

00:22:59,200 --> 00:23:02,799
there's a little bug with my terminal

00:23:00,720 --> 00:23:04,559
inside my slide inside my terminal

00:23:02,799 --> 00:23:06,480
where it just gives me the final output

00:23:04,559 --> 00:23:08,720
so you don't see what's going on

00:23:06,480 --> 00:23:10,080
line by line normally if you would use

00:23:08,720 --> 00:23:11,760
that inside your terminal

00:23:10,080 --> 00:23:14,799
uh you would actually see each one of

00:23:11,760 --> 00:23:16,480
the layers of an image being downloaded

00:23:14,799 --> 00:23:19,110
let's just wait a few seconds that'll be

00:23:16,480 --> 00:23:20,840
a good time for me to take a sip of

00:23:19,110 --> 00:23:23,520
[Music]

00:23:20,840 --> 00:23:26,000
water

00:23:23,520 --> 00:23:27,200
all right there it is so in normally you

00:23:26,000 --> 00:23:28,000
would see each one of those layers

00:23:27,200 --> 00:23:30,960
appear one i

00:23:28,000 --> 00:23:32,159
went after the other um but you you were

00:23:30,960 --> 00:23:35,440
you you saw how

00:23:32,159 --> 00:23:36,080
i was able to use those um it cost me an

00:23:35,440 --> 00:23:39,280
error because

00:23:36,080 --> 00:23:40,720
i already had a container running with

00:23:39,280 --> 00:23:46,000
that same name so i'll just

00:23:40,720 --> 00:23:46,000
stop it stop my node

00:23:48,840 --> 00:23:53,520
and

00:23:50,240 --> 00:23:55,919
you know i'm close to giving up on my

00:23:53,520 --> 00:23:57,120
cli slide thing uh okay there it is

00:23:55,919 --> 00:24:00,400
there it is all right let's

00:23:57,120 --> 00:24:01,520
oh all right okay i'll just i'll just

00:24:00,400 --> 00:24:04,480
quit on that one and

00:24:01,520 --> 00:24:04,960
forget that example but it works uh i

00:24:04,480 --> 00:24:08,159
have

00:24:04,960 --> 00:24:09,919
i actually have an example later on okay

00:24:08,159 --> 00:24:11,360
so uh no more works on my machine you

00:24:09,919 --> 00:24:11,919
know works on my machine fixes that

00:24:11,360 --> 00:24:13,919
issue

00:24:11,919 --> 00:24:15,919
and now every environment is exactly the

00:24:13,919 --> 00:24:17,039
same and and that is one of the big

00:24:15,919 --> 00:24:19,600
benefits

00:24:17,039 --> 00:24:21,200
so um one of the things that you might

00:24:19,600 --> 00:24:22,799
not have noticed because it was just a

00:24:21,200 --> 00:24:23,520
little bit outside of but when i ran

00:24:22,799 --> 00:24:26,159
that that

00:24:23,520 --> 00:24:27,120
apache script there was an error message

00:24:26,159 --> 00:24:29,200
that came up

00:24:27,120 --> 00:24:31,279
um something about a file not found and

00:24:29,200 --> 00:24:32,640
i had a similar issue so you know i

00:24:31,279 --> 00:24:34,720
reached out to my friend i was like hey

00:24:32,640 --> 00:24:37,039
i'm trying to run your your uh php

00:24:34,720 --> 00:24:38,240
uh project but i'm getting a weird error

00:24:37,039 --> 00:24:39,600
about a file not found

00:24:38,240 --> 00:24:42,159
it's like hey do you have the file

00:24:39,600 --> 00:24:44,559
called c10plug.php

00:24:42,159 --> 00:24:46,720
it's like ah really like a hardcoded

00:24:44,559 --> 00:24:48,640
path like now i have to you know i well

00:24:46,720 --> 00:24:51,360
i i don't even have a windows machine so

00:24:48,640 --> 00:24:53,039
i yeah

00:24:51,360 --> 00:24:55,120
that's where you will need environment

00:24:53,039 --> 00:24:56,720
variables so environment variables are

00:24:55,120 --> 00:24:58,320
used exactly for that it stores a

00:24:56,720 --> 00:25:01,279
variable that can be specific

00:24:58,320 --> 00:25:02,159
specific to your environment so so

00:25:01,279 --> 00:25:04,480
things that you would

00:25:02,159 --> 00:25:05,840
vary from um you know your development

00:25:04,480 --> 00:25:07,440
environment to someone else's

00:25:05,840 --> 00:25:08,720
development environment to your testing

00:25:07,440 --> 00:25:10,640
environment to your

00:25:08,720 --> 00:25:13,039
production environment it could be used

00:25:10,640 --> 00:25:15,200
for file names such as this one

00:25:13,039 --> 00:25:16,960
ports uh they're very typical use cases

00:25:15,200 --> 00:25:18,480
of port uh typically you would you know

00:25:16,960 --> 00:25:19,840
if you were building a node.js

00:25:18,480 --> 00:25:21,760
application you would run

00:25:19,840 --> 00:25:23,520
uh in production or in development on

00:25:21,760 --> 00:25:25,279
port 3000

00:25:23,520 --> 00:25:26,880
but then you would deploy it on port 80

00:25:25,279 --> 00:25:28,320
because you don't want users to type in

00:25:26,880 --> 00:25:32,559
you know mydomain.com

00:25:28,320 --> 00:25:34,880
port 3000 base url for your apis

00:25:32,559 --> 00:25:36,640
chances are that it will change between

00:25:34,880 --> 00:25:38,080
your testing environment and your

00:25:36,640 --> 00:25:38,880
production environment you're probably

00:25:38,080 --> 00:25:42,240
not testing

00:25:38,880 --> 00:25:45,520
uh with your real live api

00:25:42,240 --> 00:25:46,880
right uh so so those are all things that

00:25:45,520 --> 00:25:49,520
would go inside a ver

00:25:46,880 --> 00:25:51,120
environment variable how to use those

00:25:49,520 --> 00:25:54,840
just use a dash e flag with

00:25:51,120 --> 00:25:56,159
uh docker and you can pass a key value

00:25:54,840 --> 00:25:58,400
pair

00:25:56,159 --> 00:25:59,760
and um yeah and and you'll be able to

00:25:58,400 --> 00:26:02,640
use environment variable

00:25:59,760 --> 00:26:03,120
thank you matthew that is exactly the

00:26:02,640 --> 00:26:05,200
link

00:26:03,120 --> 00:26:07,120
uh so for people who are not monitoring

00:26:05,200 --> 00:26:07,520
the chat i had questions about the slide

00:26:07,120 --> 00:26:10,559
deck

00:26:07,520 --> 00:26:13,760
it is available at cli.slides.com

00:26:10,559 --> 00:26:15,919
or the github repo is in there as well

00:26:13,760 --> 00:26:17,600
so accessing environment variables when

00:26:15,919 --> 00:26:18,880
you're dealing when you're writing php

00:26:17,600 --> 00:26:19,600
code it looks a little bit like this so

00:26:18,880 --> 00:26:23,120
just use the

00:26:19,600 --> 00:26:25,279
global variable dollar underscore env

00:26:23,120 --> 00:26:27,520
and the name of the environment variable

00:26:25,279 --> 00:26:28,880
in nodejsprocess.env

00:26:27,520 --> 00:26:30,880
and then you have access to those

00:26:28,880 --> 00:26:34,720
variables

00:26:30,880 --> 00:26:36,400
so um let me just um and now i'll rely

00:26:34,720 --> 00:26:38,320
on some scripts that i have because i'm

00:26:36,400 --> 00:26:41,520
getting lazy here

00:26:38,320 --> 00:26:43,760
also you know getting some errors

00:26:41,520 --> 00:26:45,279
uh so let's try this one so docker run

00:26:43,760 --> 00:26:47,600
i've got my

00:26:45,279 --> 00:26:49,120
volume that i mount i map my ports

00:26:47,600 --> 00:26:52,240
remove delete

00:26:49,120 --> 00:26:54,020
detach mode give it a name and then node

00:26:52,240 --> 00:26:55,760
and

00:26:54,020 --> 00:26:59,840
[Laughter]

00:26:55,760 --> 00:27:02,880
that's not what i wanted to copy okay um

00:26:59,840 --> 00:27:06,240
copy there it is let's try this

00:27:02,880 --> 00:27:07,840
okay docker run docker run dash e so i

00:27:06,240 --> 00:27:09,039
specified an environment variable so

00:27:07,840 --> 00:27:11,279
name equals joule

00:27:09,039 --> 00:27:13,600
i mounted my volume and i've used the

00:27:11,279 --> 00:27:15,760
node 14 base image

00:27:13,600 --> 00:27:17,200
so if i was to change that environment

00:27:15,760 --> 00:27:18,840
variable to

00:27:17,200 --> 00:27:23,039
something else so say i would change it

00:27:18,840 --> 00:27:26,320
to why is it not copying

00:27:23,039 --> 00:27:28,000
all right there you go so if i now

00:27:26,320 --> 00:27:28,880
change that environment variable to a

00:27:28,000 --> 00:27:31,279
world

00:27:28,880 --> 00:27:33,919
and i run that same script again it will

00:27:31,279 --> 00:27:36,080
eventually output hello world

00:27:33,919 --> 00:27:38,640
once again i've used another different

00:27:36,080 --> 00:27:42,320
version of node.js

00:27:38,640 --> 00:27:46,840
so let me finally give up on this

00:27:42,320 --> 00:27:49,840
and script slash node

00:27:46,840 --> 00:27:52,000
env um i'm still gonna get the same

00:27:49,840 --> 00:27:55,679
issue it doesn't matter okay

00:27:52,000 --> 00:27:57,520
um i did a practice run before i swear

00:27:55,679 --> 00:27:59,039
but um i've used different versions and

00:27:57,520 --> 00:28:02,640
i've updated everything

00:27:59,039 --> 00:28:05,600
just before okay so there it is so now

00:28:02,640 --> 00:28:06,240
let me run the first command just that

00:28:05,600 --> 00:28:08,960
we have it

00:28:06,240 --> 00:28:08,960
inside the window

00:28:10,720 --> 00:28:16,799
there you go okay whoo boy

00:28:13,760 --> 00:28:19,520
this is hard uh

00:28:16,799 --> 00:28:20,240
and then i'll run my second command

00:28:19,520 --> 00:28:22,080
there it is

00:28:20,240 --> 00:28:23,440
okay so you see that i've used the exact

00:28:22,080 --> 00:28:25,279
same command for both

00:28:23,440 --> 00:28:26,960
with the difference being my environment

00:28:25,279 --> 00:28:28,640
variable here so the

00:28:26,960 --> 00:28:30,399
output for my code was hello joel and

00:28:28,640 --> 00:28:32,080
hello world there's another tiny

00:28:30,399 --> 00:28:33,760
difference that i did here is that the

00:28:32,080 --> 00:28:35,840
first one i've used note 14 and the

00:28:33,760 --> 00:28:37,760
second one i've used node 8

00:28:35,840 --> 00:28:39,360
and you can see that as far as the

00:28:37,760 --> 00:28:42,399
container is concerned

00:28:39,360 --> 00:28:43,679
this one is using node 8.17 this one is

00:28:42,399 --> 00:28:46,880
using

00:28:43,679 --> 00:28:48,720
node 14.16 and if i

00:28:46,880 --> 00:28:50,240
do node dash dash version well it's a

00:28:48,720 --> 00:28:51,200
coincidence i'm actually using the same

00:28:50,240 --> 00:28:52,159
one here

00:28:51,200 --> 00:28:53,440
but you know i could have something

00:28:52,159 --> 00:28:54,320
completely different on my machine it

00:28:53,440 --> 00:28:56,000
doesn't matter

00:28:54,320 --> 00:28:57,520
so really one of the big benefits as

00:28:56,000 --> 00:28:59,279
well of containers that you can actually

00:28:57,520 --> 00:29:01,360
switch from one version to the other

00:28:59,279 --> 00:29:02,559
so say you need to migrate from node 8

00:29:01,360 --> 00:29:04,240
to node 14

00:29:02,559 --> 00:29:05,679
while you can just use a different base

00:29:04,240 --> 00:29:07,120
image and immediately

00:29:05,679 --> 00:29:08,640
immediately you'll be able to see what

00:29:07,120 --> 00:29:10,320
works and what doesn't so you don't have

00:29:08,640 --> 00:29:11,120
to you know move back and forth between

00:29:10,320 --> 00:29:14,320
versioning

00:29:11,120 --> 00:29:14,320
on your local system

00:29:14,399 --> 00:29:18,880
those can also be very useful to

00:29:16,320 --> 00:29:20,080
initialize your containers so mysql will

00:29:18,880 --> 00:29:22,559
use a bunch of different

00:29:20,080 --> 00:29:24,080
environment variables to specify how do

00:29:22,559 --> 00:29:25,120
you want to set up a database if you

00:29:24,080 --> 00:29:26,720
want to start one

00:29:25,120 --> 00:29:29,039
so in this case you know i can specify

00:29:26,720 --> 00:29:32,399
the root password the user the password

00:29:29,039 --> 00:29:33,919
for the user and so on

00:29:32,399 --> 00:29:36,720
another cool thing about a lot of

00:29:33,919 --> 00:29:39,120
containers is that they'll also have a

00:29:36,720 --> 00:29:40,080
entry point folder so in this case for

00:29:39,120 --> 00:29:42,399
mysql

00:29:40,080 --> 00:29:44,880
it has a folder called docker entry

00:29:42,399 --> 00:29:47,760
point dash initdb.d

00:29:44,880 --> 00:29:49,200
and any sql file or sh file in there

00:29:47,760 --> 00:29:52,480
will automatically be

00:29:49,200 --> 00:29:54,559
executed before the container starts

00:29:52,480 --> 00:29:56,640
so that can be useful to see the

00:29:54,559 --> 00:29:58,960
database for example

00:29:56,640 --> 00:30:00,559
so let's take a look at this uh let's

00:29:58,960 --> 00:30:04,480
let me start a

00:30:00,559 --> 00:30:08,320
mysql server and

00:30:04,480 --> 00:30:12,000
actually i'm giving up on my slides

00:30:08,320 --> 00:30:12,960
so let me start my mysql server and you

00:30:12,000 --> 00:30:17,520
can see here that i

00:30:12,960 --> 00:30:19,440
have a root a user password pass

00:30:17,520 --> 00:30:20,640
so one thing that i can do now that i

00:30:19,440 --> 00:30:23,840
have my container

00:30:20,640 --> 00:30:27,520
running and you can see that it's here

00:30:23,840 --> 00:30:30,640
my my sql i can actually do docker exec

00:30:27,520 --> 00:30:33,120
it which will run a command in

00:30:30,640 --> 00:30:34,080
interactive mode i'll run that on my my

00:30:33,120 --> 00:30:36,399
sql image

00:30:34,080 --> 00:30:38,559
and the command that i will run is slash

00:30:36,399 --> 00:30:39,600
bin slash bash so that will open up a

00:30:38,559 --> 00:30:42,240
bash session

00:30:39,600 --> 00:30:42,640
i am now connected inside my container

00:30:42,240 --> 00:30:44,399
and

00:30:42,640 --> 00:30:46,799
from here i can do any command so if i

00:30:44,399 --> 00:30:48,080
do an ls you know i can see the content

00:30:46,799 --> 00:30:50,960
of this

00:30:48,080 --> 00:30:52,480
of this container i don't have my sql

00:30:50,960 --> 00:30:54,399
installed on my machine once again but

00:30:52,480 --> 00:30:55,520
it is installed inside that container so

00:30:54,399 --> 00:30:59,200
i can use

00:30:55,520 --> 00:31:01,840
mysql dash you root p root

00:30:59,200 --> 00:31:02,960
dash there's no database so let's just

00:31:01,840 --> 00:31:06,159
log in here

00:31:02,960 --> 00:31:07,200
and do show databases and you know i can

00:31:06,159 --> 00:31:10,240
interact with

00:31:07,200 --> 00:31:13,120
my my sql server now

00:31:10,240 --> 00:31:15,360
so let's close this let's stop this

00:31:13,120 --> 00:31:17,120
container

00:31:15,360 --> 00:31:19,200
and i've mentioned that you can also

00:31:17,120 --> 00:31:24,080
specify an initialization

00:31:19,200 --> 00:31:26,000
initialization file let's do that now

00:31:24,080 --> 00:31:27,120
if you know i can actually manage to

00:31:26,000 --> 00:31:30,840
copy stuff

00:31:27,120 --> 00:31:36,080
i don't know why it's not copying today

00:31:30,840 --> 00:31:36,080
um let's just wait until this one stops

00:31:36,159 --> 00:31:40,640
almost there perfect and let's copy this

00:31:38,399 --> 00:31:44,000
command as you can see here i've added

00:31:40,640 --> 00:31:45,519
my an init.sql file so now i can start

00:31:44,000 --> 00:31:47,600
this container again

00:31:45,519 --> 00:31:49,840
you know you saw how fast it was i can

00:31:47,600 --> 00:31:50,640
just run that docker exec command once

00:31:49,840 --> 00:31:53,840
again

00:31:50,640 --> 00:31:57,679
and in here i can do mysql dash u

00:31:53,840 --> 00:32:00,799
root dash p root database

00:31:57,679 --> 00:32:04,159
presentation i think it is and

00:32:00,799 --> 00:32:07,600
from here i can do select star from

00:32:04,159 --> 00:32:07,600
table conferences

00:32:08,000 --> 00:32:16,399
uh no i should do i should do use

00:32:11,840 --> 00:32:16,399
database presentation

00:32:19,200 --> 00:32:21,600
well

00:32:24,880 --> 00:32:28,240
i'll get it eventually eventually

00:32:26,840 --> 00:32:30,640
databases

00:32:28,240 --> 00:32:32,480
all right well i you can see that i have

00:32:30,640 --> 00:32:37,279
a database that was added there

00:32:32,480 --> 00:32:37,279
why is it not getting used database

00:32:37,320 --> 00:32:42,240
presentation i was probably not reading

00:32:39,519 --> 00:32:46,720
the error messages

00:32:42,240 --> 00:32:49,200
oh of course all right

00:32:46,720 --> 00:32:51,600
okay there you go so select star from

00:32:49,200 --> 00:32:53,600
conferences

00:32:51,600 --> 00:32:55,120
and there it is okay so perfect so you

00:32:53,600 --> 00:32:58,080
see that i

00:32:55,120 --> 00:33:00,159
i i already have a database that is all

00:32:58,080 --> 00:33:02,559
seated and everything is up there and

00:33:00,159 --> 00:33:05,279
it's all working

00:33:02,559 --> 00:33:06,640
cool so um what else can we do with

00:33:05,279 --> 00:33:08,960
containers um

00:33:06,640 --> 00:33:10,720
hey well you know uh if you've ever had

00:33:08,960 --> 00:33:13,840
to deal with mysql

00:33:10,720 --> 00:33:15,360
you've probably found that the mysql

00:33:13,840 --> 00:33:18,080
tool is

00:33:15,360 --> 00:33:19,279
kind of nice but not ideal it's hard the

00:33:18,080 --> 00:33:22,880
syntax is hard

00:33:19,279 --> 00:33:24,960
so why don't i start a php my admin

00:33:22,880 --> 00:33:27,600
server so i've just run

00:33:24,960 --> 00:33:30,240
a command as i was talking to you and i

00:33:27,600 --> 00:33:34,320
now have localhost 888

00:33:30,240 --> 00:33:34,880
root root and there you have it so i

00:33:34,320 --> 00:33:37,519
have

00:33:34,880 --> 00:33:38,000
an apache server php installed um

00:33:37,519 --> 00:33:40,240
everything

00:33:38,000 --> 00:33:41,360
connected to my database all my data is

00:33:40,240 --> 00:33:46,159
there

00:33:41,360 --> 00:33:49,200
come on how how cool is that right um

00:33:46,159 --> 00:33:49,840
let's let's let's try to use a mind

00:33:49,200 --> 00:33:53,840
blown

00:33:49,840 --> 00:33:53,840
yeah there it is

00:33:54,240 --> 00:34:00,240
okay so uh so yeah you can you can

00:33:57,279 --> 00:34:01,120
easily do all of that stuff and and spin

00:34:00,240 --> 00:34:05,279
up those servers

00:34:01,120 --> 00:34:08,399
um very very quickly uh using containers

00:34:05,279 --> 00:34:10,320
so um there's also more than a cli

00:34:08,399 --> 00:34:11,599
at one point you'll you'll you know

00:34:10,320 --> 00:34:13,280
first of all there's a lot of commands

00:34:11,599 --> 00:34:14,320
you don't always want to use all of that

00:34:13,280 --> 00:34:15,440
command

00:34:14,320 --> 00:34:17,200
but sometimes you'll also want to

00:34:15,440 --> 00:34:18,960
package up your own images you'll want

00:34:17,200 --> 00:34:20,960
to package up an image not only that

00:34:18,960 --> 00:34:22,639
maps with your local file system but an

00:34:20,960 --> 00:34:23,119
actual image that has all of your source

00:34:22,639 --> 00:34:24,560
code

00:34:23,119 --> 00:34:26,320
and that you can ship so you'll want to

00:34:24,560 --> 00:34:28,879
use docker files for that

00:34:26,320 --> 00:34:30,159
um so they let you build your own images

00:34:28,879 --> 00:34:34,480
and share them

00:34:30,159 --> 00:34:36,320
um i've waste way too much time on typos

00:34:34,480 --> 00:34:38,320
since i'm running low on time

00:34:36,320 --> 00:34:40,159
but basically um basically to write a

00:34:38,320 --> 00:34:41,919
docker file you take a base image

00:34:40,159 --> 00:34:43,679
and then you copy your source code in it

00:34:41,919 --> 00:34:44,320
for php that's all you need you're good

00:34:43,679 --> 00:34:47,040
to go

00:34:44,320 --> 00:34:48,960
and that's a full image that will have

00:34:47,040 --> 00:34:49,440
included all of your source code inside

00:34:48,960 --> 00:34:51,119
of it

00:34:49,440 --> 00:34:52,560
so now it won't be mounted in your file

00:34:51,119 --> 00:34:53,359
system so if you do a challenge on your

00:34:52,560 --> 00:34:55,200
file system

00:34:53,359 --> 00:34:56,800
it won't be reflected in the container

00:34:55,200 --> 00:34:59,680
but you now have a container that can

00:34:56,800 --> 00:35:01,280
then be deployed on the server

00:34:59,680 --> 00:35:03,119
for node.js it's very similar so you

00:35:01,280 --> 00:35:05,359
start from a base image node 14

00:35:03,119 --> 00:35:06,960
expose reports copy your source code

00:35:05,359 --> 00:35:08,960
change your working directory

00:35:06,960 --> 00:35:10,560
run npm install so you install all of

00:35:08,960 --> 00:35:11,359
those node modules inside of that

00:35:10,560 --> 00:35:13,200
container

00:35:11,359 --> 00:35:14,880
and then once the container is start use

00:35:13,200 --> 00:35:18,000
the command npm start to

00:35:14,880 --> 00:35:18,800
start your node.js server i'll skip that

00:35:18,000 --> 00:35:21,200
for now

00:35:18,800 --> 00:35:22,880
okay so docker build is used to build

00:35:21,200 --> 00:35:24,960
your images

00:35:22,880 --> 00:35:26,480
docker build that with dash g will give

00:35:24,960 --> 00:35:26,720
it a name as well you'll probably want

00:35:26,480 --> 00:35:28,640
to

00:35:26,720 --> 00:35:30,400
name your container so you can find them

00:35:28,640 --> 00:35:32,160
later on

00:35:30,400 --> 00:35:34,160
a docker build is used to create full

00:35:32,160 --> 00:35:35,040
custom images that can then be shared on

00:35:34,160 --> 00:35:37,040
registries

00:35:35,040 --> 00:35:38,720
and the image is then ready to be shared

00:35:37,040 --> 00:35:41,760
with your team or to be deployed

00:35:38,720 --> 00:35:43,359
on your server to share on a public

00:35:41,760 --> 00:35:45,599
registry you can use

00:35:43,359 --> 00:35:46,480
multiple registries docker hub is a

00:35:45,599 --> 00:35:48,160
popular one

00:35:46,480 --> 00:35:49,920
they have a free tier so you can put in

00:35:48,160 --> 00:35:51,760
a bunch of images in there

00:35:49,920 --> 00:35:53,680
koi is an open source registry that you

00:35:51,760 --> 00:35:55,680
can install in your own infrastructure

00:35:53,680 --> 00:35:57,520
and google leisure ibm they all have

00:35:55,680 --> 00:35:59,040
their own so take a look just use the

00:35:57,520 --> 00:36:00,640
one that is the closest to where you

00:35:59,040 --> 00:36:03,760
want to deploy your applications

00:36:00,640 --> 00:36:06,000
generally to push your image docker push

00:36:03,760 --> 00:36:08,160
the name of your image so it uses syntax

00:36:06,000 --> 00:36:10,839
familiar for most software developers

00:36:08,160 --> 00:36:12,000
pool to download an image from the

00:36:10,839 --> 00:36:13,920
registry

00:36:12,000 --> 00:36:16,160
useful commands i've prob i've already

00:36:13,920 --> 00:36:16,640
shown already most of them so docker ps2

00:36:16,160 --> 00:36:19,920
list

00:36:16,640 --> 00:36:21,599
the running containers um docker ps dash

00:36:19,920 --> 00:36:22,960
a to list all the containers even those

00:36:21,599 --> 00:36:25,200
that are not running if you're not using

00:36:22,960 --> 00:36:27,280
dash dash rm there'll be a lot of them

00:36:25,200 --> 00:36:29,440
docker stop to stop a container from

00:36:27,280 --> 00:36:31,440
running a docker rm to remove a

00:36:29,440 --> 00:36:34,000
container docker tag to rename your

00:36:31,440 --> 00:36:36,000
containers

00:36:34,000 --> 00:36:37,200
all right so once you you start using

00:36:36,000 --> 00:36:40,079
containers

00:36:37,200 --> 00:36:41,440
it's all nice and in theory but when you

00:36:40,079 --> 00:36:42,640
get started it just never behaves the

00:36:41,440 --> 00:36:44,880
way you want it right

00:36:42,640 --> 00:36:45,920
uh so debugging uh there's a few uh

00:36:44,880 --> 00:36:47,599
command uh

00:36:45,920 --> 00:36:49,359
command that you can use to help you

00:36:47,599 --> 00:36:50,720
with that docker logs can be useful to

00:36:49,359 --> 00:36:52,480
see what's going on inside of your

00:36:50,720 --> 00:36:54,400
container so just give it the name

00:36:52,480 --> 00:36:56,240
of the container if you've used the dash

00:36:54,400 --> 00:36:58,160
name flag

00:36:56,240 --> 00:37:00,000
dash f to use to see the logs in real

00:36:58,160 --> 00:37:01,680
time as well

00:37:00,000 --> 00:37:03,520
docker exec that's with the command that

00:37:01,680 --> 00:37:04,560
i've used to log in or to open up a

00:37:03,520 --> 00:37:08,560
session

00:37:04,560 --> 00:37:11,760
inside my my container and dash i t to

00:37:08,560 --> 00:37:12,240
make it interactive you can also copy

00:37:11,760 --> 00:37:13,680
files

00:37:12,240 --> 00:37:15,760
to your container and from your

00:37:13,680 --> 00:37:17,200
container that can be useful say you

00:37:15,760 --> 00:37:19,040
want to check what's the configuration

00:37:17,200 --> 00:37:20,640
file that is currently being used on

00:37:19,040 --> 00:37:22,079
your inside your container for example

00:37:20,640 --> 00:37:23,280
you want to download that font to your

00:37:22,079 --> 00:37:25,359
local machine

00:37:23,280 --> 00:37:26,400
so name of the container colon location

00:37:25,359 --> 00:37:28,960
of the file and the look

00:37:26,400 --> 00:37:30,960
the destination for that file uh the

00:37:28,960 --> 00:37:33,680
opposite to copy something to

00:37:30,960 --> 00:37:36,000
your container all right so docker logs

00:37:33,680 --> 00:37:38,720
docker exec docker cp

00:37:36,000 --> 00:37:40,400
if you have to run multiple containers

00:37:38,720 --> 00:37:42,320
this is where docker compose will come

00:37:40,400 --> 00:37:43,119
into place so docker compose is a great

00:37:42,320 --> 00:37:46,480
great tool

00:37:43,119 --> 00:37:48,720
that can be used to run a a collection

00:37:46,480 --> 00:37:52,000
of containers so say you have a

00:37:48,720 --> 00:37:53,920
a php project and a mysql database and

00:37:52,000 --> 00:37:55,920
you know they'll always run together

00:37:53,920 --> 00:37:57,599
that is exactly what was used for uh

00:37:55,920 --> 00:37:59,440
that open source project that i was

00:37:57,599 --> 00:38:01,119
talking about at the beginning uh so

00:37:59,440 --> 00:38:03,280
they had you know they they had a docker

00:38:01,119 --> 00:38:05,280
file they their docker compose file

00:38:03,280 --> 00:38:06,320
and then i was just able to use docker

00:38:05,280 --> 00:38:08,160
compose up

00:38:06,320 --> 00:38:10,240
and it took care of spinning up all of

00:38:08,160 --> 00:38:12,240
my containers downloading all the images

00:38:10,240 --> 00:38:14,720
and just getting everything to work it's

00:38:12,240 --> 00:38:16,720
beautiful to see that in action

00:38:14,720 --> 00:38:18,400
so in this case it's a yaml file it just

00:38:16,720 --> 00:38:20,400
describes all of your services

00:38:18,400 --> 00:38:22,800
so i've got a database service running

00:38:20,400 --> 00:38:25,839
my sql and then i've got a web service

00:38:22,800 --> 00:38:27,359
running my php image right here docker

00:38:25,839 --> 00:38:28,160
compose up will start all of your

00:38:27,359 --> 00:38:31,440
servers

00:38:28,160 --> 00:38:34,800
docker compose down will take them down

00:38:31,440 --> 00:38:37,040
so should you use them um

00:38:34,800 --> 00:38:38,320
well for your day-to-day development yes

00:38:37,040 --> 00:38:39,760
definitely

00:38:38,320 --> 00:38:41,200
for me i didn't want to get started with

00:38:39,760 --> 00:38:41,920
containers initially because i thought

00:38:41,200 --> 00:38:43,280
it was just

00:38:41,920 --> 00:38:45,040
you know another tool that would get

00:38:43,280 --> 00:38:46,800
into my way and and

00:38:45,040 --> 00:38:48,560
prevent me from being productive and it

00:38:46,800 --> 00:38:49,200
turns out that it's completely the

00:38:48,560 --> 00:38:52,000
opposite it

00:38:49,200 --> 00:38:53,520
can make you so much more productive um

00:38:52,000 --> 00:38:55,040
i have a bunch of different projects

00:38:53,520 --> 00:38:56,960
that i use on my machine

00:38:55,040 --> 00:38:58,640
um i've got a lot of containers running

00:38:56,960 --> 00:39:01,760
different things like key cloak and

00:38:58,640 --> 00:39:03,359
and my sequel and mongodb

00:39:01,760 --> 00:39:05,119
and i never had to deal with the

00:39:03,359 --> 00:39:06,320
installation and configuration of those

00:39:05,119 --> 00:39:09,119
tools it just

00:39:06,320 --> 00:39:11,119
works so they development definitely use

00:39:09,119 --> 00:39:13,200
them it makes your life so much easier

00:39:11,119 --> 00:39:15,119
for testing you saw how cool that can be

00:39:13,200 --> 00:39:16,960
i can input as much chunk as i want i

00:39:15,119 --> 00:39:19,040
can then take down my container

00:39:16,960 --> 00:39:20,800
start it again and it starts completely

00:39:19,040 --> 00:39:22,240
as it was new

00:39:20,800 --> 00:39:24,000
if you do want to persist your data

00:39:22,240 --> 00:39:25,440
you'll have to find strategies

00:39:24,000 --> 00:39:27,520
there are some that are available as

00:39:25,440 --> 00:39:29,040
well but for your day-to-day and and it

00:39:27,520 --> 00:39:31,119
also makes sure that everybody's running

00:39:29,040 --> 00:39:33,200
that exact same environment

00:39:31,119 --> 00:39:34,320
so everybody uh you know can reproduce

00:39:33,200 --> 00:39:35,520
the same things

00:39:34,320 --> 00:39:38,000
and finally for your open source

00:39:35,520 --> 00:39:38,320
projects yes yes please do so it makes

00:39:38,000 --> 00:39:41,440
it

00:39:38,320 --> 00:39:43,440
so much more easy for potential

00:39:41,440 --> 00:39:46,320
contributors to be able to

00:39:43,440 --> 00:39:47,920
easily jump in and actually um and

00:39:46,320 --> 00:39:49,680
contribute to your project you know i've

00:39:47,920 --> 00:39:51,200
mentioned already how

00:39:49,680 --> 00:39:53,040
that project that i've used which was

00:39:51,200 --> 00:39:54,480
joined in

00:39:53,040 --> 00:39:57,119
you know i would normally i would have

00:39:54,480 --> 00:39:58,560
put in a github issue because

00:39:57,119 --> 00:40:00,640
i didn't want to install all that stuff

00:39:58,560 --> 00:40:02,560
but because they had that

00:40:00,640 --> 00:40:03,680
all that tooling i was able to just run

00:40:02,560 --> 00:40:06,720
docker compose

00:40:03,680 --> 00:40:08,800
change the files and then send my pr and

00:40:06,720 --> 00:40:10,400
immediately everything was there it's so

00:40:08,800 --> 00:40:11,839
so so much easier

00:40:10,400 --> 00:40:13,520
as a matter of fact if you do have an

00:40:11,839 --> 00:40:15,359
open source project and you need help

00:40:13,520 --> 00:40:16,880
containerizing your project

00:40:15,359 --> 00:40:18,720
feel free to ping me on twitter i'll be

00:40:16,880 --> 00:40:21,040
more than happy to help you with that

00:40:18,720 --> 00:40:22,400
um i i yeah i'll be more than happy to

00:40:21,040 --> 00:40:23,040
help you out so joel underscore in the

00:40:22,400 --> 00:40:25,359
squirrel lord

00:40:23,040 --> 00:40:26,079
is my twitter handle you can reach me

00:40:25,359 --> 00:40:27,440
over there

00:40:26,079 --> 00:40:30,400
if you want more information about

00:40:27,440 --> 00:40:33,200
containers easy url to slash containers

00:40:30,400 --> 00:40:34,240
you'll find a few of the links there and

00:40:33,200 --> 00:40:37,440
my twitter handle

00:40:34,240 --> 00:40:39,599
is right there so that is all i had

00:40:37,440 --> 00:40:40,880
we've got about four minutes left so

00:40:39,599 --> 00:40:45,760
i'll open it up for

00:40:40,880 --> 00:40:48,079
questions thank you charles for

00:40:45,760 --> 00:40:49,040
such an interesting talk and people

00:40:48,079 --> 00:40:51,680
really like their

00:40:49,040 --> 00:40:52,240
slides and presentation um maybe you

00:40:51,680 --> 00:40:55,520
want to

00:40:52,240 --> 00:40:59,119
learn more about that too

00:40:55,520 --> 00:41:00,880
um let's see thank you yeah a lot of

00:40:59,119 --> 00:41:03,040
questions about the slide deck so

00:41:00,880 --> 00:41:04,800
i'll i'll put in the oh i need my other

00:41:03,040 --> 00:41:08,160
keyboard here

00:41:04,800 --> 00:41:11,520
actually let me do this here no yep

00:41:08,160 --> 00:41:12,079
got too many things open i'll share the

00:41:11,520 --> 00:41:13,839
links for

00:41:12,079 --> 00:41:17,280
the slide deck which is an open source

00:41:13,839 --> 00:41:17,280
project of course um

00:41:17,359 --> 00:41:19,839
cli

00:41:20,480 --> 00:41:23,599
um it is built in node.js you could use

00:41:23,280 --> 00:41:25,839
it

00:41:23,599 --> 00:41:27,760
um you'll probably not need node

00:41:25,839 --> 00:41:31,280
installed on your machine to run it

00:41:27,760 --> 00:41:33,280
um maybe not i don't know anyways take a

00:41:31,280 --> 00:41:36,319
look at it you'll you'll see

00:41:33,280 --> 00:41:39,920
if you want my slides uh guess what

00:41:36,319 --> 00:41:43,119
docker run dash i t

00:41:39,920 --> 00:41:44,640
uh joe lord slash container slides i

00:41:43,119 --> 00:41:46,640
believe is the command

00:41:44,640 --> 00:41:48,079
that should you know start a container

00:41:46,640 --> 00:41:51,119
with my slide deck in it

00:41:48,079 --> 00:41:53,119
because um because i can't do a pdf so

00:41:51,119 --> 00:41:54,800
that's as good as it gets

00:41:53,119 --> 00:41:57,280
i'm not sure if that's the the exact

00:41:54,800 --> 00:41:59,440
command but you'll find it on

00:41:57,280 --> 00:42:03,839
on this url here actually easy url to

00:41:59,440 --> 00:42:03,839
slash containers

00:42:08,160 --> 00:42:19,359
there it is

00:42:16,560 --> 00:42:21,599
there are some questions in the q a and

00:42:19,359 --> 00:42:25,040
i don't see anything in the chat

00:42:21,599 --> 00:42:26,880
let's see oh i forgot to use the q a

00:42:25,040 --> 00:42:31,839
the container is a good choice for

00:42:26,880 --> 00:42:31,839
hiring services operations

00:42:32,079 --> 00:42:36,000
okay so there's a question uh why would

00:42:34,000 --> 00:42:38,800
you why would i want to use docker or

00:42:36,000 --> 00:42:39,440
padman versus lxc uh what are pros and

00:42:38,800 --> 00:42:42,480
cons

00:42:39,440 --> 00:42:44,480
and um am i still taking advantage of

00:42:42,480 --> 00:42:47,200
containerization by using lxc

00:42:44,480 --> 00:42:48,560
i have no clue what lxc is to be honest

00:42:47,200 --> 00:42:51,680
um

00:42:48,560 --> 00:42:53,440
so i'll skip this question and if i do

00:42:51,680 --> 00:42:55,119
have another minute i'll i'll get back

00:42:53,440 --> 00:42:56,880
to it

00:42:55,119 --> 00:42:58,319
great presentation joe what do you use

00:42:56,880 --> 00:43:00,319
cli slides

00:42:58,319 --> 00:43:01,599
do you have experience running docker in

00:43:00,319 --> 00:43:05,440
python

00:43:01,599 --> 00:43:08,720
i do not have examples of using

00:43:05,440 --> 00:43:10,560
docker with python but basically it uses

00:43:08,720 --> 00:43:12,640
that exact same so you just look for the

00:43:10,560 --> 00:43:13,359
base image i've used it on a project i

00:43:12,640 --> 00:43:16,480
just don't have

00:43:13,359 --> 00:43:18,319
an example handy i'm still sharing my

00:43:16,480 --> 00:43:21,760
screen so

00:43:18,319 --> 00:43:23,599
you can check hub.docker.com

00:43:21,760 --> 00:43:25,280
and that's actually the case for just

00:43:23,599 --> 00:43:27,440
about anything so if you want to you

00:43:25,280 --> 00:43:28,160
know use redis for the first time or if

00:43:27,440 --> 00:43:30,880
you want to use

00:43:28,160 --> 00:43:32,480
capcor if you want to use python inside

00:43:30,880 --> 00:43:34,960
of a container

00:43:32,480 --> 00:43:36,319
well in my case python and then i can

00:43:34,960 --> 00:43:37,760
look for the official image

00:43:36,319 --> 00:43:40,079
you should always check for the official

00:43:37,760 --> 00:43:42,400
image if you can and um

00:43:40,079 --> 00:43:44,400
and here you have the version number and

00:43:42,400 --> 00:43:46,560
there should be usage

00:43:44,400 --> 00:43:48,000
um instructions so how to build your

00:43:46,560 --> 00:43:49,200
docker file so you now know what a

00:43:48,000 --> 00:43:51,280
docker file is

00:43:49,200 --> 00:43:54,480
and how to run a single python script so

00:43:51,280 --> 00:43:57,680
you've got the exact command right there

00:43:54,480 --> 00:43:59,440
so this is how you would use it um

00:43:57,680 --> 00:44:01,359
i know that someone just joined the call

00:43:59,440 --> 00:44:02,480
so i'll just go quickly on i'll take one

00:44:01,359 --> 00:44:04,800
more question

00:44:02,480 --> 00:44:05,760
um container is a good choice for high

00:44:04,800 --> 00:44:07,359
level service based

00:44:05,760 --> 00:44:09,839
application is suitable for low-level

00:44:07,359 --> 00:44:09,839
internet

00:44:12,240 --> 00:44:17,920
um okay so uh concern about limited

00:44:15,839 --> 00:44:20,240
support on system d and low level device

00:44:17,920 --> 00:44:23,200
access

00:44:20,240 --> 00:44:25,200
this is a little bit more deeper than my

00:44:23,200 --> 00:44:28,640
current knowledge of containers

00:44:25,200 --> 00:44:31,200
i know that system d is tricky

00:44:28,640 --> 00:44:32,640
but it you can get it working inside of

00:44:31,200 --> 00:44:35,200
a container

00:44:32,640 --> 00:44:36,480
i've managed to get it done for i i was

00:44:35,200 --> 00:44:37,760
trying to do something that actually

00:44:36,480 --> 00:44:41,359
ended up working

00:44:37,760 --> 00:44:43,599
um so pretty much everything works um

00:44:41,359 --> 00:44:45,599
but i can go into the details of how it

00:44:43,599 --> 00:44:47,680
works and exactly um how

00:44:45,599 --> 00:44:49,040
you know the in in the exact details of

00:44:47,680 --> 00:44:51,119
the architecture

00:44:49,040 --> 00:44:52,400
take a look at that link from gary

00:44:51,119 --> 00:44:56,319
garfield which is

00:44:52,400 --> 00:44:58,400
linked in my use url 2 containers page

00:44:56,319 --> 00:45:00,079
and then you might find some information

00:44:58,400 --> 00:45:05,839
there that might be able to

00:45:00,079 --> 00:45:05,839
give you more information on that topic

00:45:07,440 --> 00:45:10,720
all right do i have the time to answer

00:45:08,880 --> 00:45:12,000
one or two more questions

00:45:10,720 --> 00:45:13,599
i think so you have a couple of more

00:45:12,000 --> 00:45:15,200
minutes okay so does everyone on the

00:45:13,599 --> 00:45:17,119
team use the same docker images

00:45:15,200 --> 00:45:18,560
and if so who decides what is the

00:45:17,119 --> 00:45:21,599
correct version um

00:45:18,560 --> 00:45:24,480
well yes yes ideally everybody will use

00:45:21,599 --> 00:45:26,960
the same docker images

00:45:24,480 --> 00:45:28,880
then you you could keep that one of the

00:45:26,960 --> 00:45:31,680
nice way that i've seen is either using

00:45:28,880 --> 00:45:33,119
a docker compose project

00:45:31,680 --> 00:45:34,960
and then you can put that yaml file

00:45:33,119 --> 00:45:36,960
inside of your repo

00:45:34,960 --> 00:45:38,160
then everybody's using the exact same

00:45:36,960 --> 00:45:40,160
version

00:45:38,160 --> 00:45:41,520
who decides well that's really up to how

00:45:40,160 --> 00:45:44,079
your team is

00:45:41,520 --> 00:45:46,000
organized i guess but you can definitely

00:45:44,079 --> 00:45:47,680
use a docker compose to make it easier

00:45:46,000 --> 00:45:49,520
to make sure everybody's using the same

00:45:47,680 --> 00:45:52,000
or just you know have some

00:45:49,520 --> 00:45:53,599
sh some script files um and then make

00:45:52,000 --> 00:45:54,240
sure that everybody just runs that that

00:45:53,599 --> 00:45:57,119
same

00:45:54,240 --> 00:45:57,520
file and if somebody uploads it then you

00:45:57,119 --> 00:45:59,520
know

00:45:57,520 --> 00:46:00,560
people will just reuse that same script

00:45:59,520 --> 00:46:02,000
and and they'll

00:46:00,560 --> 00:46:04,000
you know if you update the script in

00:46:02,000 --> 00:46:06,560
your git repo everybody will actually

00:46:04,000 --> 00:46:08,160
use the new image as well

00:46:06,560 --> 00:46:10,319
and what does your usual development

00:46:08,160 --> 00:46:12,480
workflow looks like with containers

00:46:10,319 --> 00:46:14,000
make a change build the image again and

00:46:12,480 --> 00:46:16,079
test seems

00:46:14,000 --> 00:46:17,440
too time-consuming you are right so

00:46:16,079 --> 00:46:21,920
typically you would only

00:46:17,440 --> 00:46:23,599
build the images to either deploy or to

00:46:21,920 --> 00:46:25,359
depending on how your qa team is

00:46:23,599 --> 00:46:27,280
organized maybe if you want to share an

00:46:25,359 --> 00:46:30,160
image with your qa team

00:46:27,280 --> 00:46:31,599
so only build the image once you want to

00:46:30,160 --> 00:46:33,280
share that image

00:46:31,599 --> 00:46:36,000
as far as your development team they'll

00:46:33,280 --> 00:46:37,599
all be working they'll be using a docker

00:46:36,000 --> 00:46:39,520
image but a little bit like i did with

00:46:37,599 --> 00:46:41,440
the first example where i was able to i

00:46:39,520 --> 00:46:43,280
ran that php server

00:46:41,440 --> 00:46:45,359
so your container will manage all the

00:46:43,280 --> 00:46:45,839
runtimes but it will actually map to

00:46:45,359 --> 00:46:48,480
your

00:46:45,839 --> 00:46:48,960
local file system so you don't need to

00:46:48,480 --> 00:46:51,200
you know

00:46:48,960 --> 00:46:53,280
rebuild that image the whole every time

00:46:51,200 --> 00:46:55,440
you just work directly from

00:46:53,280 --> 00:46:57,440
your local file system everything works

00:46:55,440 --> 00:46:59,119
and then you have a ci cd pipeline that

00:46:57,440 --> 00:47:00,240
will produce an image at the end once

00:46:59,119 --> 00:47:03,520
you do

00:47:00,240 --> 00:47:05,440
a commit to your master repository or

00:47:03,520 --> 00:47:10,480
your one of your branches depending on

00:47:05,440 --> 00:47:11,599
how you're set up all right so that's

00:47:10,480 --> 00:47:14,000
all for your questions

00:47:11,599 --> 00:47:15,359
thank you so much for being here and

00:47:14,000 --> 00:47:23,119
that is all i have so thank you very

00:47:15,359 --> 00:47:23,119

YouTube URL: https://www.youtube.com/watch?v=gpl1UYv_3HI


