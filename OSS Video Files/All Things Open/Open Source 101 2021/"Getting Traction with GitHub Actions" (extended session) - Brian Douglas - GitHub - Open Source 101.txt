Title: "Getting Traction with GitHub Actions" (extended session) - Brian Douglas - GitHub - Open Source 101
Publication date: 2021-04-07
Playlist: Open Source 101 2021
Description: 
	Brian Douglas, Developer Advocate at GitHub, delivered a 90 minute extended session titled "Getting Traction with GitHub Actions" at Open Source 101 2021.

Abstract:
The last year gave us new ways to improve the maintenance of our repositories with GitHub Actions. Join Brian in walking through how automation can streamline your developer workflow and help you level up your CI/CD pipeline.

Find Brian on the internets:
Twitter: https://twitter.com/bdougieYO
GitHub: https://github.com/bdougie
Captions: 
	00:00:04,640 --> 00:00:09,519
thank you very much for the introduction

00:00:06,640 --> 00:00:10,800
uh jennifer and uh honored to uh be here

00:00:09,519 --> 00:00:14,160
once again

00:00:10,800 --> 00:00:16,480
uh for this uh open source 101 event

00:00:14,160 --> 00:00:18,000
real quick this event sorry this session

00:00:16,480 --> 00:00:20,480
has actually been covering

00:00:18,000 --> 00:00:22,160
github actions and i have got some

00:00:20,480 --> 00:00:23,039
slides that i'm more than happy to go

00:00:22,160 --> 00:00:25,279
through

00:00:23,039 --> 00:00:27,119
but i wanted to know where is everybody

00:00:25,279 --> 00:00:27,680
at with github actions have you used

00:00:27,119 --> 00:00:30,720
them

00:00:27,680 --> 00:00:34,399
heard of them

00:00:30,720 --> 00:00:34,399
yeah and also used to chat too as well

00:00:34,559 --> 00:00:38,079
and sorry like literally just ran

00:00:35,920 --> 00:00:40,000
upstairs

00:00:38,079 --> 00:00:41,520
uh made a tea because i knew i was gonna

00:00:40,000 --> 00:00:45,039
be talking non-stop

00:00:41,520 --> 00:00:48,320
um but yeah we got some newbies which is

00:00:45,039 --> 00:00:51,840
great also um

00:00:48,320 --> 00:00:53,280
no experience is needed uh the only

00:00:51,840 --> 00:00:55,440
experience that you'd need

00:00:53,280 --> 00:00:57,120
would be a github account because that's

00:00:55,440 --> 00:00:58,000
going to be very hard to use github

00:00:57,120 --> 00:01:01,680
actions

00:00:58,000 --> 00:01:05,119
without a github account cool

00:01:01,680 --> 00:01:06,400
never heard of him okay cool so awesome

00:01:05,119 --> 00:01:08,000
so i'm gonna i'm gonna guess this is

00:01:06,400 --> 00:01:09,040
gonna be leaning towards beginner

00:01:08,000 --> 00:01:11,520
introduction

00:01:09,040 --> 00:01:12,560
but also yo welcome everybody knows

00:01:11,520 --> 00:01:15,200
bducky

00:01:12,560 --> 00:01:16,799
uh i'm bw on twitter actually before i

00:01:15,200 --> 00:01:18,159
do that let me drop this link

00:01:16,799 --> 00:01:19,920
uh because this is going to be where the

00:01:18,159 --> 00:01:21,520
uh the hands-on portion of it is going

00:01:19,920 --> 00:01:23,119
to be so i'm going to be

00:01:21,520 --> 00:01:25,520
probably dropping this in the chat a few

00:01:23,119 --> 00:01:27,680
times but this is a github repo

00:01:25,520 --> 00:01:29,119
feel free to open this up also apologies

00:01:27,680 --> 00:01:31,920
i will um

00:01:29,119 --> 00:01:33,680
the slides i don't have a link handy but

00:01:31,920 --> 00:01:35,200
if you want access to the slides i can

00:01:33,680 --> 00:01:38,640
share the slides

00:01:35,200 --> 00:01:40,159
and uh a link uh at the the end or the

00:01:38,640 --> 00:01:43,680
intermission i'll pull those up

00:01:40,159 --> 00:01:46,479
uh in a sec but as as i was introduced

00:01:43,680 --> 00:01:47,439
if you have questions about anything

00:01:46,479 --> 00:01:50,880
github actions

00:01:47,439 --> 00:01:52,880
automation devops uh github

00:01:50,880 --> 00:01:55,200
to the extent i probably won't go like

00:01:52,880 --> 00:01:57,360
super deep on the github rabbit hole

00:01:55,200 --> 00:01:58,560
because it's a very expansive project

00:01:57,360 --> 00:01:59,840
project but um

00:01:58,560 --> 00:02:01,439
if you have questions definitely use the

00:01:59,840 --> 00:02:02,960
chat and uh i'll go ahead and get

00:02:01,439 --> 00:02:05,920
started

00:02:02,960 --> 00:02:07,119
so github actions uh actually this this

00:02:05,920 --> 00:02:08,640
portion will be called getting traction

00:02:07,119 --> 00:02:10,800
on github actions so

00:02:08,640 --> 00:02:12,319
imagine this is the introduction but

00:02:10,800 --> 00:02:14,319
github actions it

00:02:12,319 --> 00:02:16,080
you implement a custom logic without

00:02:14,319 --> 00:02:19,280
creating an app to perform

00:02:16,080 --> 00:02:22,319
the task you need so what is that that's

00:02:19,280 --> 00:02:24,720
automation out of a show of hands who's

00:02:22,319 --> 00:02:27,200
ever automated anything

00:02:24,720 --> 00:02:29,680
automated your lights in your room

00:02:27,200 --> 00:02:33,280
automated the pizza behind your head

00:02:29,680 --> 00:02:36,319
automated the alarm clock um

00:02:33,280 --> 00:02:37,200
yes or no automation is it's a it's a

00:02:36,319 --> 00:02:40,000
tool set

00:02:37,200 --> 00:02:41,840
it's an it's an idea it's an art form

00:02:40,000 --> 00:02:43,280
it's a movement

00:02:41,840 --> 00:02:45,120
when you're a developer there's a lot of

00:02:43,280 --> 00:02:47,440
opportunity for you to

00:02:45,120 --> 00:02:48,560
find places that take a lot of time out

00:02:47,440 --> 00:02:50,720
of your day-to-day

00:02:48,560 --> 00:02:51,599
um and automate those portions of that

00:02:50,720 --> 00:02:53,040
and that's really

00:02:51,599 --> 00:02:55,200
this custom logic piece that's what

00:02:53,040 --> 00:02:57,280
github actions is it a lot of people get

00:02:55,200 --> 00:03:00,400
stuck on continuous integration

00:02:57,280 --> 00:03:02,640
as the introduction to automation when

00:03:00,400 --> 00:03:03,840
it comes to developers but

00:03:02,640 --> 00:03:05,920
this is more than just running your

00:03:03,840 --> 00:03:09,120
tests so i do want to point that out

00:03:05,920 --> 00:03:11,360
also shout out to thelab.github.com

00:03:09,120 --> 00:03:13,760
if you are at all interested in getting

00:03:11,360 --> 00:03:16,000
a deep dive after this or during this or

00:03:13,760 --> 00:03:17,599
whatnot i realize some of us are working

00:03:16,000 --> 00:03:18,319
some of us are in school some of us have

00:03:17,599 --> 00:03:20,800
all the day

00:03:18,319 --> 00:03:23,200
to sort of learn this stuff uh but the

00:03:20,800 --> 00:03:25,040
reason i dropped the link for the

00:03:23,200 --> 00:03:26,319
github repo in there is because all this

00:03:25,040 --> 00:03:27,920
content you can actually find in the

00:03:26,319 --> 00:03:30,000
github repo

00:03:27,920 --> 00:03:31,440
up to the advanced stuff so i don't have

00:03:30,000 --> 00:03:34,159
examples in the github repo

00:03:31,440 --> 00:03:35,200
with the advanced stuff i'll show but i

00:03:34,159 --> 00:03:37,120
think

00:03:35,200 --> 00:03:39,040
no matter where you are no matter if you

00:03:37,120 --> 00:03:41,040
want to just hands-on right now

00:03:39,040 --> 00:03:42,400
you'll get something out of this so

00:03:41,040 --> 00:03:45,360
lab.getup.com is

00:03:42,400 --> 00:03:46,560
a it's a learning lab it's a tool for us

00:03:45,360 --> 00:03:50,879
to teach github

00:03:46,560 --> 00:03:53,120
and it's a tool for boot camps colleges

00:03:50,879 --> 00:03:54,879
onboarding new developers into your your

00:03:53,120 --> 00:03:56,480
team to teach them github that's what

00:03:54,879 --> 00:03:57,360
the lab courses are it's all self-paced

00:03:56,480 --> 00:03:59,040
learning

00:03:57,360 --> 00:04:00,959
so highly recommend if you want to also

00:03:59,040 --> 00:04:02,480
learn some continuous delivery or

00:04:00,959 --> 00:04:04,480
deploying stuff to aws

00:04:02,480 --> 00:04:05,840
with github actions there are courses in

00:04:04,480 --> 00:04:08,560
there for that as well so if you're

00:04:05,840 --> 00:04:10,239
looking for some examples but the main

00:04:08,560 --> 00:04:11,840
example of github actions that most

00:04:10,239 --> 00:04:15,040
people kind of get attached to

00:04:11,840 --> 00:04:16,239
is ci so continuous integration so

00:04:15,040 --> 00:04:18,320
continuous integration if you haven't

00:04:16,239 --> 00:04:19,759
heard the term it's the idea of every

00:04:18,320 --> 00:04:22,800
time i push my stuff

00:04:19,759 --> 00:04:24,639
my code to the cloud something happens

00:04:22,800 --> 00:04:26,080
so whether it's my test run i can

00:04:24,639 --> 00:04:26,720
actually see if my tests are green or

00:04:26,080 --> 00:04:28,720
red

00:04:26,720 --> 00:04:30,320
i could see if my containers integration

00:04:28,720 --> 00:04:32,639
linting is a thing

00:04:30,320 --> 00:04:34,080
uh linting is like the the the pattern

00:04:32,639 --> 00:04:35,360
of being able to make sure white space

00:04:34,080 --> 00:04:36,479
all matches and

00:04:35,360 --> 00:04:38,720
make sure you use single quotes or

00:04:36,479 --> 00:04:40,160
double quotes instead of you having

00:04:38,720 --> 00:04:43,759
those conversations

00:04:40,160 --> 00:04:46,160
with your your team on a daily basis

00:04:43,759 --> 00:04:47,919
instead add a linter add that as part of

00:04:46,160 --> 00:04:49,360
your action your ci workflow

00:04:47,919 --> 00:04:51,280
uh instead of having that conversation

00:04:49,360 --> 00:04:53,120
over and over again so uh

00:04:51,280 --> 00:04:55,120
meg welcome turning sunny in

00:04:53,120 --> 00:04:58,720
philadelphia that's amazing

00:04:55,120 --> 00:05:01,919
uh i'm in florida right now and it is

00:04:58,720 --> 00:05:04,560
it is uh surely very sunny here it's

00:05:01,919 --> 00:05:05,759
kind of hot to be quite honest um my air

00:05:04,560 --> 00:05:06,960
conditioning i'm in the same room as the

00:05:05,759 --> 00:05:11,039
air conditioning and

00:05:06,960 --> 00:05:12,639
it's non-stop today um

00:05:11,039 --> 00:05:14,080
so one example and i'll go through a

00:05:12,639 --> 00:05:15,360
couple examples and then we'll jump into

00:05:14,080 --> 00:05:17,680
some hands-on stuff

00:05:15,360 --> 00:05:19,120
uh is automated by storybook deployment

00:05:17,680 --> 00:05:20,320
now this might be advanced this might

00:05:19,120 --> 00:05:23,039
not be advanced but

00:05:20,320 --> 00:05:24,000
storybook js is a design system tool for

00:05:23,039 --> 00:05:26,560
you to be able to get your

00:05:24,000 --> 00:05:28,240
front end app into a place where your

00:05:26,560 --> 00:05:28,560
designer your front end developers can

00:05:28,240 --> 00:05:30,639
see

00:05:28,560 --> 00:05:32,320
what things look like so i wrote a blog

00:05:30,639 --> 00:05:33,840
post on dev2 called automating my

00:05:32,320 --> 00:05:35,360
storybook deployment

00:05:33,840 --> 00:05:37,199
and it was all around building this

00:05:35,360 --> 00:05:38,280
thing so

00:05:37,199 --> 00:05:41,440
i've got this project called

00:05:38,280 --> 00:05:43,759
opensource.pizza and it's a project to

00:05:41,440 --> 00:05:45,520
find your next open source contribution

00:05:43,759 --> 00:05:46,720
um still working on a lot of stuff i'm

00:05:45,520 --> 00:05:48,080
looking forward i'm actually talking to

00:05:46,720 --> 00:05:50,320
designer about

00:05:48,080 --> 00:05:51,280
up leveling that and hopefully the next

00:05:50,320 --> 00:05:52,800
couple months

00:05:51,280 --> 00:05:55,600
but what i'm getting at is i have a

00:05:52,800 --> 00:05:57,280
design system and the design system

00:05:55,600 --> 00:05:58,800
actually gets automatically deployed

00:05:57,280 --> 00:05:59,680
every time i make changes to anything in

00:05:58,800 --> 00:06:01,360
my app

00:05:59,680 --> 00:06:02,880
so if i make changes to how this

00:06:01,360 --> 00:06:03,600
component which is my list component

00:06:02,880 --> 00:06:06,960
where all my

00:06:03,600 --> 00:06:09,199
repos live this is just an example code

00:06:06,960 --> 00:06:10,240
but if i made changes to how my boxes

00:06:09,199 --> 00:06:12,560
are rounded or

00:06:10,240 --> 00:06:13,919
if i have you know styled this to be red

00:06:12,560 --> 00:06:15,840
or blue or green

00:06:13,919 --> 00:06:17,600
it all gets updated in my design system

00:06:15,840 --> 00:06:19,199
and the way i do that is through github

00:06:17,600 --> 00:06:21,039
actions it's automated

00:06:19,199 --> 00:06:22,400
every time i push to deploy it also

00:06:21,039 --> 00:06:24,240
deploys a second site

00:06:22,400 --> 00:06:26,000
which is designed that's designed at

00:06:24,240 --> 00:06:28,960
opensource.pizza

00:06:26,000 --> 00:06:29,600
another example is i use github actions

00:06:28,960 --> 00:06:31,840
for

00:06:29,600 --> 00:06:33,280
lighthouse lighthouse is a tool built by

00:06:31,840 --> 00:06:35,520
the google chrome team

00:06:33,280 --> 00:06:37,360
and it's a way for you to figure out

00:06:35,520 --> 00:06:39,680
performance accessibility

00:06:37,360 --> 00:06:41,600
if you're using cutting edge tool set

00:06:39,680 --> 00:06:43,360
semantic html

00:06:41,600 --> 00:06:45,360
or if you're using a progressive web app

00:06:43,360 --> 00:06:46,720
so if you if your app works on mobile in

00:06:45,360 --> 00:06:49,599
all situations

00:06:46,720 --> 00:06:51,199
lighthouse actually gives you a score on

00:06:49,599 --> 00:06:52,800
how well you're doing

00:06:51,199 --> 00:06:53,919
with this uh with the performance and

00:06:52,800 --> 00:06:54,800
accessibility and all this stuff i

00:06:53,919 --> 00:06:56,160
mentioned

00:06:54,800 --> 00:06:58,000
and a lot of people what they do is they

00:06:56,160 --> 00:06:59,120
take production urls like you know

00:06:58,000 --> 00:07:01,440
github.com

00:06:59,120 --> 00:07:02,960
or open sauce pizza and they go around a

00:07:01,440 --> 00:07:03,440
white house score and then you take that

00:07:02,960 --> 00:07:05,440
score

00:07:03,440 --> 00:07:06,560
and you start making notes opening up

00:07:05,440 --> 00:07:09,840
issues

00:07:06,560 --> 00:07:12,560
creating meetings calendar events

00:07:09,840 --> 00:07:14,160
but what i like about it is that i can

00:07:12,560 --> 00:07:15,039
actually open this up at the time i do a

00:07:14,160 --> 00:07:17,199
pull request

00:07:15,039 --> 00:07:18,319
so if i change code unrelated to

00:07:17,199 --> 00:07:20,720
anything else

00:07:18,319 --> 00:07:21,840
and after i open a pull request i can

00:07:20,720 --> 00:07:23,199
get a lighthouse score

00:07:21,840 --> 00:07:25,360
in the pr and i'll show you that in an

00:07:23,199 --> 00:07:26,560
example later today but um

00:07:25,360 --> 00:07:27,599
also a reminder we're gonna have two

00:07:26,560 --> 00:07:29,759
we're gonna have a break in the middle

00:07:27,599 --> 00:07:30,960
so i'll go through a lot of the hands-on

00:07:29,759 --> 00:07:32,319
stuff and i'll come back and show some

00:07:30,960 --> 00:07:33,280
of these examples as well if you want to

00:07:32,319 --> 00:07:35,759
stick around

00:07:33,280 --> 00:07:37,280
um but yeah that's an example of you

00:07:35,759 --> 00:07:39,759
just adding

00:07:37,280 --> 00:07:41,440
automation of checking your white house

00:07:39,759 --> 00:07:42,800
score every time there's a pr as opposed

00:07:41,440 --> 00:07:45,199
to you run it manually

00:07:42,800 --> 00:07:47,759
now it's no one's job to go around the

00:07:45,199 --> 00:07:49,039
lighthouse core it just happens

00:07:47,759 --> 00:07:50,479
so i sell that because i work at this

00:07:49,039 --> 00:07:51,120
company called github github is a

00:07:50,479 --> 00:07:54,000
collaboration

00:07:51,120 --> 00:07:55,440
tool or platform if you are have access

00:07:54,000 --> 00:07:57,680
to your keyboard to say yes or no if you

00:07:55,440 --> 00:07:59,199
have a github account

00:07:57,680 --> 00:08:01,120
if you don't have a github account go

00:07:59,199 --> 00:08:02,400
ahead and say no but also maybe sign up

00:08:01,120 --> 00:08:05,120
for github because it

00:08:02,400 --> 00:08:07,039
it would be advantageous for you in this

00:08:05,120 --> 00:08:10,080
this session to have a github account

00:08:07,039 --> 00:08:11,599
cool my assumption is uh yes yes yes ben

00:08:10,080 --> 00:08:14,160
said why

00:08:11,599 --> 00:08:17,039
but i think that meant yes um but yeah

00:08:14,160 --> 00:08:19,280
you obviously need to have a uh

00:08:17,039 --> 00:08:20,160
yeah i mean if you got this far and

00:08:19,280 --> 00:08:21,599
you're you're

00:08:20,160 --> 00:08:23,840
an aspiring developer you haven't got to

00:08:21,599 --> 00:08:24,960
get up con congratulations

00:08:23,840 --> 00:08:27,840
but you should definitely sign up for

00:08:24,960 --> 00:08:30,080
one it's going to be beneficial to your

00:08:27,840 --> 00:08:31,360
your developer career so github kind of

00:08:30,080 --> 00:08:32,479
breaks themselves up in these three

00:08:31,360 --> 00:08:33,919
different pillars

00:08:32,479 --> 00:08:35,760
it's home for you code in the cloud so i

00:08:33,919 --> 00:08:38,320
think most people know github is

00:08:35,760 --> 00:08:39,120
i push my code up to github.com and it

00:08:38,320 --> 00:08:42,080
just works

00:08:39,120 --> 00:08:42,800
and i think that's a beautiful situation

00:08:42,080 --> 00:08:45,120
um

00:08:42,800 --> 00:08:46,240
but github is it's definitely it's

00:08:45,120 --> 00:08:49,680
definitely more than that

00:08:46,240 --> 00:08:53,360
uh as well so uh with github.com we

00:08:49,680 --> 00:08:55,040
we have the the idea of collaboration at

00:08:53,360 --> 00:08:56,560
scale as well so

00:08:55,040 --> 00:08:58,800
one thing that's happened in the last

00:08:56,560 --> 00:09:01,040
year and a half year and a month

00:08:58,800 --> 00:09:02,399
is everything went remote so as you

00:09:01,040 --> 00:09:03,519
start collaborating you have to figure

00:09:02,399 --> 00:09:05,839
out how to scale that

00:09:03,519 --> 00:09:07,600
across the team so how do you have

00:09:05,839 --> 00:09:09,120
access to repositories how do you manage

00:09:07,600 --> 00:09:10,560
your organization how do you give the

00:09:09,120 --> 00:09:14,080
right roles to

00:09:10,560 --> 00:09:15,920
contributors collaborators pms designers

00:09:14,080 --> 00:09:18,000
like that all is sort of built in by

00:09:15,920 --> 00:09:18,800
default at with github within our

00:09:18,000 --> 00:09:20,160
feature set

00:09:18,800 --> 00:09:22,000
and then obviously open source too as

00:09:20,160 --> 00:09:22,959
well which i say obviously i'm not even

00:09:22,000 --> 00:09:24,560
sure if that's obvious

00:09:22,959 --> 00:09:26,160
but um there's a lot of open source that

00:09:24,560 --> 00:09:27,760
happens on github so if you do

00:09:26,160 --> 00:09:28,800
end up wanting to get involved in open

00:09:27,760 --> 00:09:30,080
source maybe that's why you're here at

00:09:28,800 --> 00:09:31,600
this event today

00:09:30,080 --> 00:09:33,839
github is a good place to get your feet

00:09:31,600 --> 00:09:34,480
wet with that so i want to focus on home

00:09:33,839 --> 00:09:36,560
for the code of

00:09:34,480 --> 00:09:37,760
cloud this is github.com so if you

00:09:36,560 --> 00:09:40,240
happen to sign up

00:09:37,760 --> 00:09:40,959
uh uh cool so just getting started too

00:09:40,240 --> 00:09:42,640
as well that's

00:09:40,959 --> 00:09:43,920
great i mean just getting started is a

00:09:42,640 --> 00:09:45,200
good place to be here like you'll

00:09:43,920 --> 00:09:47,279
probably soak in a lot of different

00:09:45,200 --> 00:09:49,040
information uh just from hearing me

00:09:47,279 --> 00:09:50,640
ramble uh throughout the

00:09:49,040 --> 00:09:52,880
throughout the day too as well but

00:09:50,640 --> 00:09:55,600
github.com is a place

00:09:52,880 --> 00:09:56,560
where it's a home for your code in the

00:09:55,600 --> 00:09:58,399
cloud

00:09:56,560 --> 00:10:00,800
but it's also home for 56 million

00:09:58,399 --> 00:10:01,600
developers 200 100 plus repositories

00:10:00,800 --> 00:10:03,279
worldwide

00:10:01,600 --> 00:10:05,120
so there's a lot of people leveraging

00:10:03,279 --> 00:10:07,920
github and what i love about this

00:10:05,120 --> 00:10:09,680
is i get to be advocating for github as

00:10:07,920 --> 00:10:11,200
well so

00:10:09,680 --> 00:10:14,160
these are my handles this is what i look

00:10:11,200 --> 00:10:17,519
like on the internet uh bw on twitter

00:10:14,160 --> 00:10:20,079
b dougie on github and

00:10:17,519 --> 00:10:21,680
also on github so this is actually my

00:10:20,079 --> 00:10:24,079
github profile

00:10:21,680 --> 00:10:25,519
if you are all interested in sort of

00:10:24,079 --> 00:10:29,839
showcasing your work

00:10:25,519 --> 00:10:32,000
and like making yourself enticing for

00:10:29,839 --> 00:10:33,360
future employers or your next employer

00:10:32,000 --> 00:10:34,480
or your last employer if you want to

00:10:33,360 --> 00:10:35,920
make them jealous

00:10:34,480 --> 00:10:38,000
um we have this thing called the github

00:10:35,920 --> 00:10:39,279
profile readme and this is my profile

00:10:38,000 --> 00:10:42,160
readme

00:10:39,279 --> 00:10:44,160
powered by github actions so it's a it's

00:10:42,160 --> 00:10:47,279
a myspace page and i always fail to

00:10:44,160 --> 00:10:50,399
get a new screenshot but for the sake of

00:10:47,279 --> 00:10:54,320
explanation let me pull it up live

00:10:50,399 --> 00:10:57,040
and whoop i said live but i meant

00:10:54,320 --> 00:10:58,480
b-doggy b-duggy all right so this is my

00:10:57,040 --> 00:11:00,399
myspace page and i've

00:10:58,480 --> 00:11:02,800
actually had this powered by a github

00:11:00,399 --> 00:11:05,440
action and the way this works is

00:11:02,800 --> 00:11:05,839
uh actually i'll show you how it works

00:11:05,440 --> 00:11:07,680
is

00:11:05,839 --> 00:11:09,680
if you wanted to have some sort of

00:11:07,680 --> 00:11:11,680
custom code on your github profile

00:11:09,680 --> 00:11:13,279
you just create a repo with the same

00:11:11,680 --> 00:11:15,279
name as your name

00:11:13,279 --> 00:11:16,959
and then it creates a special little

00:11:15,279 --> 00:11:19,680
repository right here

00:11:16,959 --> 00:11:21,120
um but what i'm just getting at is it's

00:11:19,680 --> 00:11:23,040
powered by github actions because every

00:11:21,120 --> 00:11:25,200
time someone opens an issue

00:11:23,040 --> 00:11:26,720
it adds their name i've got a github

00:11:25,200 --> 00:11:29,839
action that basically adds

00:11:26,720 --> 00:11:30,399
sean to my list of developers so i've

00:11:29,839 --> 00:11:33,440
got an

00:11:30,399 --> 00:11:36,800
action that watches for issues

00:11:33,440 --> 00:11:38,800
opens up a pull request to automated pr

00:11:36,800 --> 00:11:40,839
and then adds sean to my list of

00:11:38,800 --> 00:11:43,600
developers so you can see

00:11:40,839 --> 00:11:46,079
sean oh there he is

00:11:43,600 --> 00:11:47,600
shawn got out of here uh in a couple

00:11:46,079 --> 00:11:50,399
different places but that's

00:11:47,600 --> 00:11:52,320
sort of the how this works in a nutshell

00:11:50,399 --> 00:11:53,839
uh and it's power and i'll show you

00:11:52,320 --> 00:11:56,160
the code later uh i don't want to

00:11:53,839 --> 00:11:59,600
detract too much from

00:11:56,160 --> 00:12:02,000
the slides but yeah that's that is

00:11:59,600 --> 00:12:04,000
github actions uh github itself

00:12:02,000 --> 00:12:05,680
collaboration at scale

00:12:04,000 --> 00:12:08,000
it scales through things like github

00:12:05,680 --> 00:12:10,399
actions it's not just github actions but

00:12:08,000 --> 00:12:11,839
github actions is like a combination of

00:12:10,399 --> 00:12:14,959
different primitives

00:12:11,839 --> 00:12:14,959
so primitives being

00:12:15,279 --> 00:12:19,519
primitives are sorry i'm like i set

00:12:17,839 --> 00:12:22,000
myself up for the next slide

00:12:19,519 --> 00:12:22,800
but i wanted to say primitives uh it's

00:12:22,000 --> 00:12:24,720
primitives being

00:12:22,800 --> 00:12:25,839
things like the github api web hooks

00:12:24,720 --> 00:12:27,040
authentication

00:12:25,839 --> 00:12:28,720
those are all things that you have to

00:12:27,040 --> 00:12:29,839
build by from scratch and it's something

00:12:28,720 --> 00:12:31,839
i built from scratch

00:12:29,839 --> 00:12:33,440
quite a few times at different employers

00:12:31,839 --> 00:12:36,240
not knowing that github was going to

00:12:33,440 --> 00:12:36,720
eventually provide this to us for free

00:12:36,240 --> 00:12:37,920
so

00:12:36,720 --> 00:12:39,440
i highly recommend if you're going to

00:12:37,920 --> 00:12:40,000
integrate with any other platforms make

00:12:39,440 --> 00:12:41,200
sure

00:12:40,000 --> 00:12:43,519
you're not rebuilding stuff that's

00:12:41,200 --> 00:12:44,639
already existing uh like i did

00:12:43,519 --> 00:12:46,959
speaking of building stuff that's

00:12:44,639 --> 00:12:48,480
already existing uh i take a little

00:12:46,959 --> 00:12:50,320
time to talk about automation in the

00:12:48,480 --> 00:12:53,120
sense of basketball so

00:12:50,320 --> 00:12:54,800
uh anybody a basketball fan in the chat

00:12:53,120 --> 00:12:57,680
yes no

00:12:54,800 --> 00:12:57,680
i'm gonna take a drink

00:12:59,279 --> 00:13:02,240
cool and if you're not a basketball fan

00:13:00,639 --> 00:13:03,920
basketball is kind of like soccer but

00:13:02,240 --> 00:13:05,680
you use your hands instead

00:13:03,920 --> 00:13:07,440
um this is a basketball court so i've

00:13:05,680 --> 00:13:09,279
got my basketball on the left

00:13:07,440 --> 00:13:10,959
and i've got my hoop on the right which

00:13:09,279 --> 00:13:13,839
i'm pointing directly to it

00:13:10,959 --> 00:13:14,959
and the point of this is showing full

00:13:13,839 --> 00:13:16,880
court layups so

00:13:14,959 --> 00:13:18,880
in basketball you have five team members

00:13:16,880 --> 00:13:21,200
so five on five basketball

00:13:18,880 --> 00:13:23,040
and there was like a phenomenon in the

00:13:21,200 --> 00:13:25,040
late 90s early 2000s of

00:13:23,040 --> 00:13:27,440
the idea of a full court layup in the

00:13:25,040 --> 00:13:28,160
nba and it's when like the one player

00:13:27,440 --> 00:13:30,320
takes the ball

00:13:28,160 --> 00:13:32,880
in and doesn't pass anybody but then

00:13:30,320 --> 00:13:34,399
goes and scores a point in the hoop

00:13:32,880 --> 00:13:36,399
it kind of defeats the purpose of making

00:13:34,399 --> 00:13:38,160
a team sport and this is like the kind

00:13:36,399 --> 00:13:39,680
of equivalent of like that one person on

00:13:38,160 --> 00:13:42,959
the team that does all the work

00:13:39,680 --> 00:13:43,760
uh not because like they're just not a

00:13:42,959 --> 00:13:45,440
team player

00:13:43,760 --> 00:13:46,639
we call them like cowboy coders folks

00:13:45,440 --> 00:13:47,839
who just sort of just jump in the

00:13:46,639 --> 00:13:49,040
production environments and start

00:13:47,839 --> 00:13:50,240
shipping code

00:13:49,040 --> 00:13:52,720
it's always better to sort of have a

00:13:50,240 --> 00:13:54,480
plan and have a goal

00:13:52,720 --> 00:13:56,880
of what you're trying to accomplish so i

00:13:54,480 --> 00:13:58,480
bring up in the sense of basketball

00:13:56,880 --> 00:14:00,880
at this point on the court it's called

00:13:58,480 --> 00:14:02,880
area 31. they call it area 31 because

00:14:00,880 --> 00:14:04,880
with hypernomics it's like applying

00:14:02,880 --> 00:14:07,199
statistics at a game of basketball

00:14:04,880 --> 00:14:08,399
they found out that 31 of the shots

00:14:07,199 --> 00:14:10,079
actually are

00:14:08,399 --> 00:14:11,600
are made from this point of the

00:14:10,079 --> 00:14:13,760
basketball hoop so and

00:14:11,600 --> 00:14:15,519
everywhere in the entire court this is

00:14:13,760 --> 00:14:16,720
the highest percentage of you getting

00:14:15,519 --> 00:14:18,639
the ball in the hoop

00:14:16,720 --> 00:14:20,240
this is inclusive of all defense and

00:14:18,639 --> 00:14:22,880
everything else in situations

00:14:20,240 --> 00:14:23,600
but it's 31 of those shots so if you

00:14:22,880 --> 00:14:25,680
know that

00:14:23,600 --> 00:14:26,959
you could optimize your goal or your

00:14:25,680 --> 00:14:29,519
plan

00:14:26,959 --> 00:14:31,519
into a play or a basketball play or

00:14:29,519 --> 00:14:33,920
through automation like get up actions

00:14:31,519 --> 00:14:35,279
and optimize to get the ball to that

00:14:33,920 --> 00:14:37,279
point on the hoop

00:14:35,279 --> 00:14:39,040
but you you leverage the entire team all

00:14:37,279 --> 00:14:39,839
the pieces all the architecture your

00:14:39,040 --> 00:14:43,040
authentication

00:14:39,839 --> 00:14:44,480
your web hooks uh your secrets all built

00:14:43,040 --> 00:14:45,839
in to make it sure you can get the ball

00:14:44,480 --> 00:14:47,519
to that hoop so if you're just trying to

00:14:45,839 --> 00:14:50,959
ship stuff to production

00:14:47,519 --> 00:14:52,800
without faults and without issues

00:14:50,959 --> 00:14:54,079
you can automate that port personal

00:14:52,800 --> 00:14:56,000
workflow through that

00:14:54,079 --> 00:14:58,560
so i bring that up because github

00:14:56,000 --> 00:15:01,920
actions it's all about

00:14:58,560 --> 00:15:02,480
finding out portions of your workflow

00:15:01,920 --> 00:15:04,320
that are

00:15:02,480 --> 00:15:05,680
tedious things that you do all the time

00:15:04,320 --> 00:15:08,320
that you do every day

00:15:05,680 --> 00:15:10,079
and just automate that so if you open up

00:15:08,320 --> 00:15:10,399
issues every day and you have to label

00:15:10,079 --> 00:15:11,839
them

00:15:10,399 --> 00:15:14,000
or you have to close issues or you have

00:15:11,839 --> 00:15:15,519
to review pull requests once a day

00:15:14,000 --> 00:15:17,360
those are all opportunities for you to

00:15:15,519 --> 00:15:18,800
automate so i say all that because i

00:15:17,360 --> 00:15:21,600
want to switch gears

00:15:18,800 --> 00:15:23,600
there is definitely way more slides but

00:15:21,600 --> 00:15:26,880
i wanted to take a time for everybody to

00:15:23,600 --> 00:15:28,480
kind of walk through this using github

00:15:26,880 --> 00:15:30,079
actions hands-on so

00:15:28,480 --> 00:15:31,680
this requires you to have a github

00:15:30,079 --> 00:15:32,720
account as i mentioned i made a lot of

00:15:31,680 --> 00:15:35,199
jokes with it because i was being

00:15:32,720 --> 00:15:37,519
serious but

00:15:35,199 --> 00:15:38,639
this repo you could literally go to this

00:15:37,519 --> 00:15:40,880
repo on your own

00:15:38,639 --> 00:15:41,759
uh i do hope that you go with it with me

00:15:40,880 --> 00:15:44,880
through me

00:15:41,759 --> 00:15:45,440
uh or with me at this time but this repo

00:15:44,880 --> 00:15:48,560
is for you

00:15:45,440 --> 00:15:49,440
it's free for you to take clone fork or

00:15:48,560 --> 00:15:51,040
whatnot

00:15:49,440 --> 00:15:53,040
uh but what i'm gonna encourage you to

00:15:51,040 --> 00:15:54,800
do is go to that repo

00:15:53,040 --> 00:15:56,720
and start with the introduction so i do

00:15:54,800 --> 00:15:57,519
have an introduction of github actions

00:15:56,720 --> 00:16:01,040
and what they are

00:15:57,519 --> 00:16:02,800
um essentially what i just said and

00:16:01,040 --> 00:16:04,320
this is a workshop that i've done and

00:16:02,800 --> 00:16:06,480
all things open a couple times

00:16:04,320 --> 00:16:08,959
in this event but also all things open

00:16:06,480 --> 00:16:11,839
where we have a self-paced learning

00:16:08,959 --> 00:16:13,759
experience of learning github actions so

00:16:11,839 --> 00:16:16,560
the very first step that you need to do

00:16:13,759 --> 00:16:18,320
is go to part zero inside the readme so

00:16:16,560 --> 00:16:21,360
i'm just right here on the

00:16:18,320 --> 00:16:22,240
introdu the gateway of my project uh in

00:16:21,360 --> 00:16:24,480
part 0

00:16:22,240 --> 00:16:25,839
it has some instructions for you to take

00:16:24,480 --> 00:16:28,800
this command

00:16:25,839 --> 00:16:30,160
and type it as a comment in this issue

00:16:28,800 --> 00:16:32,399
so

00:16:30,160 --> 00:16:33,839
i'll go ahead and do that and uh if

00:16:32,399 --> 00:16:36,160
anybody has any questions

00:16:33,839 --> 00:16:38,160
if that's confusing you could also open

00:16:36,160 --> 00:16:38,959
an issue on the same repo that we're in

00:16:38,160 --> 00:16:40,800
right now so

00:16:38,959 --> 00:16:42,959
feel free to open an issue and say i'm

00:16:40,800 --> 00:16:44,320
stuck it's not working screenshots

00:16:42,959 --> 00:16:45,759
that's the beauty of us even though i

00:16:44,320 --> 00:16:47,360
can't hear you i can't see you i just

00:16:45,759 --> 00:16:47,680
see some people talking and saying yes

00:16:47,360 --> 00:16:49,759
and

00:16:47,680 --> 00:16:51,440
and no and i'll just go ahead and scroll

00:16:49,759 --> 00:16:53,920
down and it looks like

00:16:51,440 --> 00:16:56,079
uh mike has already got the first

00:16:53,920 --> 00:16:58,880
comment in there too as well actually

00:16:56,079 --> 00:16:58,880
it's got squash

00:17:00,720 --> 00:17:04,160
oh actually mike was the first one so

00:17:02,160 --> 00:17:06,400
thanks mike for being our

00:17:04,160 --> 00:17:07,839
our first first person through the hole

00:17:06,400 --> 00:17:11,039
because what mike has done

00:17:07,839 --> 00:17:12,880
is he's activated the github action so

00:17:11,039 --> 00:17:14,559
real quick i'll find mike you can see

00:17:12,880 --> 00:17:15,679
mike's name he's the person who

00:17:14,559 --> 00:17:18,000
triggered this action

00:17:15,679 --> 00:17:19,280
i can see mike is uh director of wealth

00:17:18,000 --> 00:17:22,319
development mit sloan

00:17:19,280 --> 00:17:23,919
excellent i'm glad you're here uh

00:17:22,319 --> 00:17:25,600
and mike has triggered an action i can

00:17:23,919 --> 00:17:27,679
click through the action tab

00:17:25,600 --> 00:17:29,760
so this is a tab that's all accessible

00:17:27,679 --> 00:17:31,200
through your repositories

00:17:29,760 --> 00:17:32,960
you can turn this off so if you happen

00:17:31,200 --> 00:17:36,000
to be at enterprise that

00:17:32,960 --> 00:17:37,679
um does not want an action to run

00:17:36,000 --> 00:17:39,280
that is something that you ought to

00:17:37,679 --> 00:17:40,559
check in your settings uh and then the

00:17:39,280 --> 00:17:43,600
other thing i should probably check is

00:17:40,559 --> 00:17:47,919
try to figure out why this action

00:17:43,600 --> 00:17:49,440
did fail and

00:17:47,919 --> 00:17:51,120
honestly i don't know why it failed i

00:17:49,440 --> 00:17:53,120
think it actually succeeded mike you'll

00:17:51,120 --> 00:17:56,320
have to let us know if you gotta invite

00:17:53,120 --> 00:17:58,840
um but i'm gonna say it's it actually

00:17:56,320 --> 00:18:00,080
sent you this

00:17:58,840 --> 00:18:03,120
this

00:18:00,080 --> 00:18:05,120
this is this is amazing uh i definitely

00:18:03,120 --> 00:18:07,200
did test this last night

00:18:05,120 --> 00:18:08,160
now my question is okay so this is what

00:18:07,200 --> 00:18:10,400
i'm looking for

00:18:08,160 --> 00:18:12,080
uh we've made some ui changes uh used to

00:18:10,400 --> 00:18:13,440
be up here but what i'm trying to do is

00:18:12,080 --> 00:18:15,760
go to my logs

00:18:13,440 --> 00:18:16,480
here i can go to my action logs click

00:18:15,760 --> 00:18:18,000
log

00:18:16,480 --> 00:18:19,679
and then i can scroll down and see if

00:18:18,000 --> 00:18:23,360
there's a

00:18:19,679 --> 00:18:26,640
a clear failure and it looks like

00:18:23,360 --> 00:18:29,520
it succeeded no problem

00:18:26,640 --> 00:18:30,960
but i don't quite know why it um it

00:18:29,520 --> 00:18:34,559
showed me a failure but

00:18:30,960 --> 00:18:36,799
with that being said let's see if um

00:18:34,559 --> 00:18:39,520
we can debug this and see if mike uh was

00:18:36,799 --> 00:18:40,799
indeed invited

00:18:39,520 --> 00:18:43,760
and the way i'm gonna check that is

00:18:40,799 --> 00:18:46,880
actually just go into my people section

00:18:43,760 --> 00:18:48,240
and then search for mike and looks like

00:18:46,880 --> 00:18:51,520
he did get an invite so

00:18:48,240 --> 00:18:52,799
that is a red herring um it looks like

00:18:51,520 --> 00:18:55,840
the um

00:18:52,799 --> 00:18:56,640
the failure is it's actually because

00:18:55,840 --> 00:18:59,760
actually i don't know why

00:18:56,640 --> 00:19:01,440
it's failing be quite honest uh but it's

00:18:59,760 --> 00:19:02,960
a it's a false failure because mike does

00:19:01,440 --> 00:19:04,799
have an invite right here so

00:19:02,960 --> 00:19:06,320
and let's say he has actually accepted

00:19:04,799 --> 00:19:07,919
an invite so folks

00:19:06,320 --> 00:19:09,679
if you wanted to see how that works feel

00:19:07,919 --> 00:19:11,840
free uh i will say that

00:19:09,679 --> 00:19:13,360
if you do the second the next sections

00:19:11,840 --> 00:19:14,320
uh they will not work unless you're

00:19:13,360 --> 00:19:16,080
invited in the org

00:19:14,320 --> 00:19:18,240
and i'll talk about that in a sec as

00:19:16,080 --> 00:19:18,240
well

00:19:22,960 --> 00:19:27,120
excellent uh and then also just wanted

00:19:24,960 --> 00:19:29,120
to point out you will get an email

00:19:27,120 --> 00:19:32,240
as well just to confirming that it did

00:19:29,120 --> 00:19:34,960
work so despite it being a failure

00:19:32,240 --> 00:19:35,280
uh assure me it it i'll assure you it

00:19:34,960 --> 00:19:39,440
has

00:19:35,280 --> 00:19:41,520
succeeded so cool could it be the mime

00:19:39,440 --> 00:19:43,520
magic book you might know more about

00:19:41,520 --> 00:19:46,320
this than i do uh i wasn't aware of the

00:19:43,520 --> 00:19:46,320
my magic bug

00:19:48,240 --> 00:19:51,339
[Music]

00:19:51,440 --> 00:19:58,320
uh um possibly could be

00:19:55,200 --> 00:19:58,640
but good call out um meg if you are more

00:19:58,320 --> 00:20:00,480
than

00:19:58,640 --> 00:20:01,679
like you're if you do have the time if

00:20:00,480 --> 00:20:03,919
you want the open issue and

00:20:01,679 --> 00:20:05,039
link me to that i'd be happy to uh go

00:20:03,919 --> 00:20:07,280
and fix that after the

00:20:05,039 --> 00:20:09,120
the session um but yeah it seems like a

00:20:07,280 --> 00:20:12,880
false failure for sure

00:20:09,120 --> 00:20:14,000
um what was i getting at oh i did want

00:20:12,880 --> 00:20:14,960
to talk about how that worked too as

00:20:14,000 --> 00:20:17,039
well so like

00:20:14,960 --> 00:20:18,480
the first question that the first

00:20:17,039 --> 00:20:19,840
question that uh usually people are

00:20:18,480 --> 00:20:20,480
asking is like how did you get that to

00:20:19,840 --> 00:20:22,000
work

00:20:20,480 --> 00:20:24,159
and i would say it's because i have a

00:20:22,000 --> 00:20:24,880
what we call in the github actions

00:20:24,159 --> 00:20:28,080
business

00:20:24,880 --> 00:20:29,919
a local action and what i've done is uh

00:20:28,080 --> 00:20:32,559
maybe mag already looked at the code

00:20:29,919 --> 00:20:33,039
but uh i have this ruby file and in this

00:20:32,559 --> 00:20:35,919
ruby

00:20:33,039 --> 00:20:37,039
file uh i'm actually parsing some data

00:20:35,919 --> 00:20:39,200
from github actions

00:20:37,039 --> 00:20:40,640
uh runners so the github action runner

00:20:39,200 --> 00:20:42,640
gives you some free

00:20:40,640 --> 00:20:44,720
environment variables for free you do

00:20:42,640 --> 00:20:46,480
get a read and i want to stress this a

00:20:44,720 --> 00:20:48,559
read only token

00:20:46,480 --> 00:20:50,640
but you also get access to the event

00:20:48,559 --> 00:20:52,159
pass so like what triggered the event

00:20:50,640 --> 00:20:55,039
the way we were that we were able to see

00:20:52,159 --> 00:20:57,520
that mike actually triggered the action

00:20:55,039 --> 00:20:58,400
was through the event path as well i'm

00:20:57,520 --> 00:21:00,400
able to grab the

00:20:58,400 --> 00:21:01,760
the commenter which is in that event

00:21:00,400 --> 00:21:04,240
path it's the

00:21:01,760 --> 00:21:05,600
user and then their login name and then

00:21:04,240 --> 00:21:05,919
i'll be able to take that commenter and

00:21:05,600 --> 00:21:07,840
then

00:21:05,919 --> 00:21:09,120
invite them so if you're not familiar

00:21:07,840 --> 00:21:10,080
with ruby code this is kind of like

00:21:09,120 --> 00:21:12,159
python

00:21:10,080 --> 00:21:14,000
uh honestly kind of looks kind of like j

00:21:12,159 --> 00:21:17,200
es6 javascript but

00:21:14,000 --> 00:21:19,679
without semicolons and curly braces

00:21:17,200 --> 00:21:22,240
but this is exactly how you know what i

00:21:19,679 --> 00:21:22,240
think this is

00:21:22,320 --> 00:21:25,440
exit 78 it's not failure exit if

00:21:24,720 --> 00:21:27,840
organization

00:21:25,440 --> 00:21:28,480
is already a member uh i think this

00:21:27,840 --> 00:21:31,200
might

00:21:28,480 --> 00:21:31,919
be the failure reason uh because i am

00:21:31,200 --> 00:21:34,559
failing

00:21:31,919 --> 00:21:35,280
right here if someone's already part of

00:21:34,559 --> 00:21:37,919
the org

00:21:35,280 --> 00:21:39,039
and it might be checking after someone

00:21:37,919 --> 00:21:40,320
gets invited but

00:21:39,039 --> 00:21:42,840
actually no they don't get invited to

00:21:40,320 --> 00:21:46,000
here sorry i'm debunking live on the air

00:21:42,840 --> 00:21:46,799
um can you please tell me again how to

00:21:46,000 --> 00:21:49,360
search

00:21:46,799 --> 00:21:50,640
you up on github oh you know i never

00:21:49,360 --> 00:21:53,840
actually uh

00:21:50,640 --> 00:21:56,080
dropped a link of my profile but here we

00:21:53,840 --> 00:21:56,080
go

00:21:56,799 --> 00:21:59,840
hopefully that's what you meant

00:22:00,640 --> 00:22:05,440
um cool well what i was one of the point

00:22:04,159 --> 00:22:06,320
out is that the the fact that i just

00:22:05,440 --> 00:22:08,159
wrote this in

00:22:06,320 --> 00:22:10,320
a couple lines well 30 lines of ruby

00:22:08,159 --> 00:22:12,240
code and this is how i'm

00:22:10,320 --> 00:22:14,000
sort of powering my git of action i know

00:22:12,240 --> 00:22:15,600
what my organization is

00:22:14,000 --> 00:22:17,520
sorry i know my organization is github

00:22:15,600 --> 00:22:19,840
craftwork i have a specific

00:22:17,520 --> 00:22:20,799
team that i invite everybody to it's a

00:22:19,840 --> 00:22:23,840
team that only has

00:22:20,799 --> 00:22:25,280
specific access to the repos so i'm

00:22:23,840 --> 00:22:27,120
inviting them to that team

00:22:25,280 --> 00:22:28,559
and then i'm using octa kit which octa

00:22:27,120 --> 00:22:31,600
kit if you've never heard of uh

00:22:28,559 --> 00:22:33,039
it's a sdk for github's api so if you

00:22:31,600 --> 00:22:34,799
want to build stuff with the github api

00:22:33,039 --> 00:22:37,760
octa kit is the way to do it

00:22:34,799 --> 00:22:39,039
and that is the sort of gist of what's

00:22:37,760 --> 00:22:42,480
going on there

00:22:39,039 --> 00:22:44,240
um so

00:22:42,480 --> 00:22:45,600
if you have already invited yourself you

00:22:44,240 --> 00:22:46,320
probably actually let me just have a

00:22:45,600 --> 00:22:50,000
double check

00:22:46,320 --> 00:22:52,240
into the commenting situation hopefully

00:22:50,000 --> 00:22:55,440
it's more than just one person

00:22:52,240 --> 00:22:57,360
down here yep uh so our comments because

00:22:55,440 --> 00:22:59,679
they're all repeat repeated

00:22:57,360 --> 00:23:02,000
they're we can see that we do have

00:22:59,679 --> 00:23:04,480
people uh github automatically uh

00:23:02,000 --> 00:23:05,919
squashes the uh the comments because

00:23:04,480 --> 00:23:09,200
they're all repetitive

00:23:05,919 --> 00:23:11,840
this is actually a um a

00:23:09,200 --> 00:23:12,559
support uh trust and safety safety

00:23:11,840 --> 00:23:14,640
feature

00:23:12,559 --> 00:23:17,039
uh because a lot of times people respond

00:23:14,640 --> 00:23:17,039
with like

00:23:17,200 --> 00:23:22,480
plus one which is not very useful this

00:23:20,880 --> 00:23:24,080
is like an old school way of you just

00:23:22,480 --> 00:23:27,919
basically saying

00:23:24,080 --> 00:23:29,360
thumbs up but with a plus one

00:23:27,919 --> 00:23:30,880
uh if you do that over and over again

00:23:29,360 --> 00:23:32,320
github will squash those comments

00:23:30,880 --> 00:23:34,400
because it's repetitive and it's not

00:23:32,320 --> 00:23:36,559
very useful for the conversation

00:23:34,400 --> 00:23:37,600
and that this tells you to spend similar

00:23:36,559 --> 00:23:40,559
similar comments

00:23:37,600 --> 00:23:42,000
uh with the same same response too as

00:23:40,559 --> 00:23:43,279
well so cy

00:23:42,000 --> 00:23:45,039
uh the other cool thing is that if you

00:23:43,279 --> 00:23:46,880
really wanted to i've actually set up

00:23:45,039 --> 00:23:48,000
some git of actions based on reactions

00:23:46,880 --> 00:23:49,600
so if you wanted to

00:23:48,000 --> 00:23:51,440
someone reacted with thumbs up or thumbs

00:23:49,600 --> 00:23:52,480
down you could actually do actions based

00:23:51,440 --> 00:23:55,520
on that so

00:23:52,480 --> 00:23:58,000
that's uh for another session but

00:23:55,520 --> 00:23:59,039
with that being said let's go back to uh

00:23:58,000 --> 00:24:00,799
the readme

00:23:59,039 --> 00:24:02,400
the readme itself once we sort of do

00:24:00,799 --> 00:24:04,799
this there's another step

00:24:02,400 --> 00:24:06,000
and i wonder if anybody's done it yet uh

00:24:04,799 --> 00:24:09,360
no one's done it yet

00:24:06,000 --> 00:24:10,880
um if you i only really need one person

00:24:09,360 --> 00:24:12,400
to do this so whoever wants to be the

00:24:10,880 --> 00:24:14,480
first person out the gate

00:24:12,400 --> 00:24:15,840
the second step will be adding yourself

00:24:14,480 --> 00:24:17,760
to this file

00:24:15,840 --> 00:24:19,279
and it will help explain explain the

00:24:17,760 --> 00:24:22,400
next section so

00:24:19,279 --> 00:24:23,520
um real quick i'll do this with my

00:24:22,400 --> 00:24:26,880
account which is not

00:24:23,520 --> 00:24:28,480
a part of the org and i'll tell you why

00:24:26,880 --> 00:24:30,080
the the reason why i needed to invite

00:24:28,480 --> 00:24:32,240
you to do work which you're more than

00:24:30,080 --> 00:24:34,400
welcome to remove yourself as well

00:24:32,240 --> 00:24:36,159
after this session i'm not collecting

00:24:34,400 --> 00:24:39,440
any data or information on you

00:24:36,159 --> 00:24:40,880
um i think github also provides gdpr

00:24:39,440 --> 00:24:42,559
compliance as well so i don't have

00:24:40,880 --> 00:24:44,480
access to your email or anything like

00:24:42,559 --> 00:24:48,000
that but what i did want to

00:24:44,480 --> 00:24:49,919
show is my other account which i'm going

00:24:48,000 --> 00:24:51,919
to remove

00:24:49,919 --> 00:24:53,200
from my organization and i want to show

00:24:51,919 --> 00:24:55,600
you why

00:24:53,200 --> 00:24:57,840
why i wanted to get someone to invite

00:24:55,600 --> 00:25:00,080
themselves to the org

00:24:57,840 --> 00:25:02,559
to make this work so i'm going to go

00:25:00,080 --> 00:25:04,480
ahead and make a change to this file

00:25:02,559 --> 00:25:06,960
actually i'm going to make a change to

00:25:04,480 --> 00:25:14,480
this file using

00:25:06,960 --> 00:25:15,919
my other accounts

00:25:14,480 --> 00:25:17,600
and if someone else wants to make a

00:25:15,919 --> 00:25:19,600
change to that file as well that'd be

00:25:17,600 --> 00:25:21,919
amazing if not i could show you how it

00:25:19,600 --> 00:25:21,919
works

00:25:22,159 --> 00:25:27,520
as well all right so

00:25:26,000 --> 00:25:31,520
i'm going to repo appreciate a link in

00:25:27,520 --> 00:25:35,039
the chat there we go

00:25:31,520 --> 00:25:35,600
um so i'm gonna go ahead and invite

00:25:35,039 --> 00:25:38,559
myself

00:25:35,600 --> 00:25:39,200
to sorry i'm gonna add my add some text

00:25:38,559 --> 00:25:42,159
change

00:25:39,200 --> 00:25:43,760
to then trigger a new action um actually

00:25:42,159 --> 00:25:45,200
it looks like this has already worked so

00:25:43,760 --> 00:25:46,799
the one thing i did want to point out

00:25:45,200 --> 00:25:48,480
and i appreciate whoever did it

00:25:46,799 --> 00:25:50,080
i think we're good on if you haven't got

00:25:48,480 --> 00:25:53,120
your pr that's that's fine

00:25:50,080 --> 00:25:55,919
but the one thing i wanted to show

00:25:53,120 --> 00:25:57,679
oh you know what did you commit yourself

00:25:55,919 --> 00:26:00,000
stuff to maine

00:25:57,679 --> 00:26:00,720
i guess i should i should state i needed

00:26:00,000 --> 00:26:04,480
you to add

00:26:00,720 --> 00:26:04,480
uh a change using a pr

00:26:04,640 --> 00:26:10,640
because it's open source you shouldn't

00:26:06,240 --> 00:26:12,960
commit directly to the default branch

00:26:10,640 --> 00:26:14,080
it's okay we're all learning um so

00:26:12,960 --> 00:26:15,039
basically if you want to try it again

00:26:14,080 --> 00:26:16,320
just open a pr

00:26:15,039 --> 00:26:18,480
add another you don't have to actually

00:26:16,320 --> 00:26:19,679
add your name adding your name is a very

00:26:18,480 --> 00:26:21,440
constrained

00:26:19,679 --> 00:26:22,880
requirement but you can add any words

00:26:21,440 --> 00:26:25,600
you want like hello or

00:26:22,880 --> 00:26:26,159
world or anything like that and i'll do

00:26:25,600 --> 00:26:29,919
this

00:26:26,159 --> 00:26:34,880
i'll do the same thing in my pr

00:26:29,919 --> 00:26:34,880
here so i've got a 1080.txt

00:26:36,799 --> 00:26:39,919
and the way i'm gonna do this is a

00:26:39,360 --> 00:26:45,840
second

00:26:39,919 --> 00:26:48,080
brian i'm gonna propose a change

00:26:45,840 --> 00:26:48,960
and i'm gonna create a pull request uh

00:26:48,080 --> 00:26:52,320
from

00:26:48,960 --> 00:26:53,279
my fork and then i'm gonna put it to the

00:26:52,320 --> 00:26:54,799
main branch

00:26:53,279 --> 00:26:56,640
uh if you have access to repo you could

00:26:54,799 --> 00:26:57,120
do it for a branch inside that's not a

00:26:56,640 --> 00:26:58,320
fork

00:26:57,120 --> 00:27:00,640
uh just keep that in mind because you

00:26:58,320 --> 00:27:02,480
are invited to the repo i am not part of

00:27:00,640 --> 00:27:04,080
the repo i haven't invited myself so i

00:27:02,480 --> 00:27:06,240
wanted to show

00:27:04,080 --> 00:27:07,520
the fact that this is to fail and the

00:27:06,240 --> 00:27:08,559
reason this is going to fail is because

00:27:07,520 --> 00:27:10,400
github actions

00:27:08,559 --> 00:27:12,400
has built-in security concerns too as

00:27:10,400 --> 00:27:13,520
well so you do not want to have access

00:27:12,400 --> 00:27:15,840
to

00:27:13,520 --> 00:27:17,440
forks on a pr to have access to your

00:27:15,840 --> 00:27:19,919
secret tokens so i mentioned

00:27:17,440 --> 00:27:21,840
in passing github actions includes

00:27:19,919 --> 00:27:22,320
authentication as part of it so anybody

00:27:21,840 --> 00:27:23,919
who

00:27:22,320 --> 00:27:25,760
has access to the organization has

00:27:23,919 --> 00:27:28,880
access to the secrets

00:27:25,760 --> 00:27:29,919
read only secrets to um to leverage and

00:27:28,880 --> 00:27:33,120
get up actions

00:27:29,919 --> 00:27:34,720
now this itself will fail and we'll

00:27:33,120 --> 00:27:37,760
watch it fail

00:27:34,720 --> 00:27:40,240
as well if it succeeds and i've got some

00:27:37,760 --> 00:27:40,240
questions

00:27:43,200 --> 00:27:46,480
but the cool thing about this is you do

00:27:44,320 --> 00:27:47,919
get the logs in an environment so this

00:27:46,480 --> 00:27:50,159
is a cloud environment hosted on

00:27:47,919 --> 00:27:51,679
github's cloud

00:27:50,159 --> 00:27:53,600
yeah and it gives us access to be able

00:27:51,679 --> 00:27:56,720
to do things like manage

00:27:53,600 --> 00:27:57,679
invites manage merging prs but uh the

00:27:56,720 --> 00:28:00,159
reason why i had this

00:27:57,679 --> 00:28:02,159
uh as this sort of second the first step

00:28:00,159 --> 00:28:03,679
of this process is because

00:28:02,159 --> 00:28:05,120
it shows you really quickly a couple

00:28:03,679 --> 00:28:06,399
different github actions so i've got a

00:28:05,120 --> 00:28:10,159
github action that

00:28:06,399 --> 00:28:12,000
merges um that auto merges prs

00:28:10,159 --> 00:28:13,600
so you can see the biggest reason why

00:28:12,000 --> 00:28:14,399
this doesn't work is because this github

00:28:13,600 --> 00:28:16,240
token

00:28:14,399 --> 00:28:17,840
is not accessible to anybody outside the

00:28:16,240 --> 00:28:19,600
organization so if you have a team

00:28:17,840 --> 00:28:21,039
or a project and you want to make sure

00:28:19,600 --> 00:28:23,039
that your secrets and

00:28:21,039 --> 00:28:25,360
the way destructive prs can work like

00:28:23,039 --> 00:28:28,159
you can then create a action to delete

00:28:25,360 --> 00:28:29,279
all files in the repo um that's not

00:28:28,159 --> 00:28:31,279
accessible to

00:28:29,279 --> 00:28:33,120
people through forks and that's an

00:28:31,279 --> 00:28:35,840
intentional security

00:28:33,120 --> 00:28:38,399
feature and the one thing i wanted to

00:28:35,840 --> 00:28:42,080
point out is the fact that we do have

00:28:38,399 --> 00:28:45,840
um let's see if you have any pr's that

00:28:42,080 --> 00:28:49,760
are merged um so we do have

00:28:45,840 --> 00:28:51,840
uh totan totan actually is invited the

00:28:49,760 --> 00:28:53,600
org and his pr did get

00:28:51,840 --> 00:28:55,200
get merged and this is because when you

00:28:53,600 --> 00:28:57,440
go into his

00:28:55,200 --> 00:28:59,760
uh workflow which for some reason it

00:28:57,440 --> 00:29:02,960
looks like it's still building

00:28:59,760 --> 00:29:06,240
um that may be a bug or something and i

00:29:02,960 --> 00:29:07,840
think i think what it is is um

00:29:06,240 --> 00:29:09,600
this always happens when we have a ton

00:29:07,840 --> 00:29:11,679
of people do something at the same time

00:29:09,600 --> 00:29:13,760
uh this one is actually sort of hanging

00:29:11,679 --> 00:29:15,919
a bit despite the fact that it

00:29:13,760 --> 00:29:17,600
it did succeed so the cool thing is i

00:29:15,919 --> 00:29:20,399
can cancel this if i wanted to

00:29:17,600 --> 00:29:21,919
with the cancel button um but i think

00:29:20,399 --> 00:29:23,120
what it is it's something in the ui so

00:29:21,919 --> 00:29:25,279
apologies on

00:29:23,120 --> 00:29:26,399
the bugginess of the github action but i

00:29:25,279 --> 00:29:29,919
will assure you

00:29:26,399 --> 00:29:31,200
that this pr did indeed merge

00:29:29,919 --> 00:29:33,679
and it failed to merge because it was

00:29:31,200 --> 00:29:35,520
already merged um

00:29:33,679 --> 00:29:36,960
and this is actually a bug i noticed

00:29:35,520 --> 00:29:39,440
last night too as well

00:29:36,960 --> 00:29:41,360
um you know code is hard to maintain uh

00:29:39,440 --> 00:29:43,200
this is i meant this is

00:29:41,360 --> 00:29:44,480
i said the third time i've done this at

00:29:43,200 --> 00:29:45,600
an all things open event

00:29:44,480 --> 00:29:47,520
this is probably the sixth time i've

00:29:45,600 --> 00:29:48,399
given this this workshop in person and

00:29:47,520 --> 00:29:50,000
remote

00:29:48,399 --> 00:29:51,919
and uh it's because the mergable state

00:29:50,000 --> 00:29:52,320
was unknown uh so it ended up making

00:29:51,919 --> 00:29:54,799
this

00:29:52,320 --> 00:29:56,399
hang but that's besides the fact uh

00:29:54,799 --> 00:29:57,679
debugging is not something that we came

00:29:56,399 --> 00:30:01,200
to sort of chat about

00:29:57,679 --> 00:30:03,760
and learn um so what i'm getting at is

00:30:01,200 --> 00:30:05,440
there's a github action and it worked

00:30:03,760 --> 00:30:07,120
for the most part and emerged

00:30:05,440 --> 00:30:10,000
uh emerged at it so i wanted to point

00:30:07,120 --> 00:30:13,600
out real quick we have a local action

00:30:10,000 --> 00:30:16,399
uh i didn't point out that it was um

00:30:13,600 --> 00:30:17,520
um i i mean the lie i didn't mean to

00:30:16,399 --> 00:30:20,399
laugh at your tears

00:30:17,520 --> 00:30:21,600
uh but it's not a big deal that it did

00:30:20,399 --> 00:30:23,600
fail it's just

00:30:21,600 --> 00:30:25,279
the problem is i wrote this code and

00:30:23,600 --> 00:30:27,600
because i wrote the code it's it's known

00:30:25,279 --> 00:30:29,760
to have failures i'm known to make bugs

00:30:27,600 --> 00:30:31,120
um i did want to point out that this

00:30:29,760 --> 00:30:32,320
local action is running in this

00:30:31,120 --> 00:30:35,200
environment

00:30:32,320 --> 00:30:36,720
using some ruby code in a docker file

00:30:35,200 --> 00:30:38,000
this is not a requirement for github

00:30:36,720 --> 00:30:38,880
actions you can actually run github

00:30:38,000 --> 00:30:40,960
actions without

00:30:38,880 --> 00:30:42,240
a docker file it just happened to be i

00:30:40,960 --> 00:30:43,440
wrote this two years ago

00:30:42,240 --> 00:30:45,679
when that was the only way you could do

00:30:43,440 --> 00:30:47,039
it but i'd also want to talk about third

00:30:45,679 --> 00:30:48,960
party actions

00:30:47,039 --> 00:30:51,360
which if you didn't see that real quick

00:30:48,960 --> 00:30:53,120
i went to this dot github folder

00:30:51,360 --> 00:30:54,399
and i went to workflows so all of our

00:30:53,120 --> 00:30:58,320
actions that are

00:30:54,399 --> 00:31:00,960
consumed from a third party is now

00:30:58,320 --> 00:31:01,360
including this invite the invite third

00:31:00,960 --> 00:31:04,080
party

00:31:01,360 --> 00:31:04,799
local actions they're all included here

00:31:04,080 --> 00:31:06,320
and

00:31:04,799 --> 00:31:08,480
the thing i wanted to point out is that

00:31:06,320 --> 00:31:11,279
this

00:31:08,480 --> 00:31:13,039
action folder is the same folder that i

00:31:11,279 --> 00:31:16,880
have

00:31:13,039 --> 00:31:19,279
here so i'm actually pointing to

00:31:16,880 --> 00:31:20,480
a folder that's directly here in my sort

00:31:19,279 --> 00:31:23,519
of file tree structure

00:31:20,480 --> 00:31:25,760
from my repository now

00:31:23,519 --> 00:31:27,600
for the approve action so what happens

00:31:25,760 --> 00:31:29,760
is i approve the action

00:31:27,600 --> 00:31:30,640
it adds a label and then it merges the

00:31:29,760 --> 00:31:33,600
action

00:31:30,640 --> 00:31:36,080
so here i'm approving the action uh

00:31:33,600 --> 00:31:38,159
which basically if the ci passes

00:31:36,080 --> 00:31:40,240
uh this action that's being leveraged uh

00:31:38,159 --> 00:31:41,919
from this repository hmr

00:31:40,240 --> 00:31:43,840
so this is a little different than just

00:31:41,919 --> 00:31:45,679
pointing to a local file structure this

00:31:43,840 --> 00:31:48,880
is actually pointing to

00:31:45,679 --> 00:31:50,399
an actual github repo so thanks to

00:31:48,880 --> 00:31:52,880
actions and open source

00:31:50,399 --> 00:31:55,120
i can have access to all actions on

00:31:52,880 --> 00:31:58,080
github that are open source

00:31:55,120 --> 00:31:59,519
so here i've got henry who or sorry

00:31:58,080 --> 00:32:01,279
harry

00:31:59,519 --> 00:32:04,240
and i say i said henry but harry is

00:32:01,279 --> 00:32:06,640
actually a co-worker of mine at github

00:32:04,240 --> 00:32:07,840
but harry created this action for auto

00:32:06,640 --> 00:32:10,880
approving

00:32:07,840 --> 00:32:12,880
github pull request and the way it works

00:32:10,880 --> 00:32:15,279
is by simply just copying and pasting

00:32:12,880 --> 00:32:18,880
this code putting into my file

00:32:15,279 --> 00:32:21,039
into my yaml file and then it just works

00:32:18,880 --> 00:32:23,200
um he obviously did a lot of debugging

00:32:21,039 --> 00:32:25,200
and built this to make it work just work

00:32:23,200 --> 00:32:28,240
um but the one thing i want to point out

00:32:25,200 --> 00:32:30,799
is that i do have multiple actions so

00:32:28,240 --> 00:32:31,919
this is an action that i have as writing

00:32:30,799 --> 00:32:33,440
as a step so

00:32:31,919 --> 00:32:34,960
real quick i want to break this down for

00:32:33,440 --> 00:32:36,880
a sec um

00:32:34,960 --> 00:32:39,120
this is a name that you can these are

00:32:36,880 --> 00:32:43,039
yelp this sorry

00:32:39,120 --> 00:32:45,440
this is a yaml file real quick

00:32:43,039 --> 00:32:48,320
did i lose everybody at yaml is anybody

00:32:45,440 --> 00:32:48,320
familiar with gamble

00:32:55,519 --> 00:32:59,519
cool uh and i did want to i did see that

00:32:57,840 --> 00:32:59,840
some people used a q a feature too as

00:32:59,519 --> 00:33:01,440
well

00:32:59,840 --> 00:33:03,600
uh feel free to use the chat i won't be

00:33:01,440 --> 00:33:05,120
able to see q and a off the bat that

00:33:03,600 --> 00:33:08,159
that easily but um

00:33:05,120 --> 00:33:09,919
uh yashil you wondered why open source

00:33:08,159 --> 00:33:10,240
101 zoom meetings where a lot of people

00:33:09,919 --> 00:33:12,720
use

00:33:10,240 --> 00:33:13,440
a lot of mentors use pr uh what does it

00:33:12,720 --> 00:33:15,760
mean

00:33:13,440 --> 00:33:16,480
that's a good question pr stands for

00:33:15,760 --> 00:33:18,799
pull request

00:33:16,480 --> 00:33:20,080
and apologies uh for assuming and using

00:33:18,799 --> 00:33:21,600
an acronym but

00:33:20,080 --> 00:33:23,600
in pull request it's an opportunity for

00:33:21,600 --> 00:33:24,080
you to actually submit your code to my

00:33:23,600 --> 00:33:27,360
project

00:33:24,080 --> 00:33:30,240
so in this case i created a pull request

00:33:27,360 --> 00:33:31,440
from not b dougie not b dougie is my

00:33:30,240 --> 00:33:33,840
second account

00:33:31,440 --> 00:33:35,279
um but i created a pull request from not

00:33:33,840 --> 00:33:37,519
b dougie

00:33:35,279 --> 00:33:38,320
and to basically just change that simple

00:33:37,519 --> 00:33:40,320
file

00:33:38,320 --> 00:33:42,320
so that's what a pull request is and you

00:33:40,320 --> 00:33:43,200
can see where i added my change i can

00:33:42,320 --> 00:33:46,240
review it

00:33:43,200 --> 00:33:48,559
as b dougie on this browser

00:33:46,240 --> 00:33:50,880
um but hopefully that answers your

00:33:48,559 --> 00:33:50,880
question

00:33:51,039 --> 00:33:54,399
uh yeah so the second thing i wanted to

00:33:53,039 --> 00:33:55,279
point out too on that same note about

00:33:54,399 --> 00:33:57,200
pull requests

00:33:55,279 --> 00:33:59,279
is that git of actions not only can you

00:33:57,200 --> 00:34:02,320
name the action and this is all gamma

00:33:59,279 --> 00:34:03,120
you could also run actions on 30 plus

00:34:02,320 --> 00:34:04,880
events

00:34:03,120 --> 00:34:06,240
so when i said that github actions is

00:34:04,880 --> 00:34:08,399
built on primitives

00:34:06,240 --> 00:34:09,440
we have authentication you got web hooks

00:34:08,399 --> 00:34:12,240
you got secrets

00:34:09,440 --> 00:34:14,240
you also have uh workflow events too as

00:34:12,240 --> 00:34:17,919
well so those specific web hooks

00:34:14,240 --> 00:34:19,359
that are pull requests issues releases

00:34:17,919 --> 00:34:21,040
every time you push code to the the

00:34:19,359 --> 00:34:22,879
github repo to a branch

00:34:21,040 --> 00:34:24,639
and you can also then take those same

00:34:22,879 --> 00:34:25,119
workflow events and then break them down

00:34:24,639 --> 00:34:27,760
onto

00:34:25,119 --> 00:34:30,159
basically if i only want this run on the

00:34:27,760 --> 00:34:32,159
main branch or my release branch or my

00:34:30,159 --> 00:34:33,359
feature branch i can also add another

00:34:32,159 --> 00:34:36,480
flag here to

00:34:33,359 --> 00:34:37,839
ship on branches within actions

00:34:36,480 --> 00:34:39,679
and again this is running on the

00:34:37,839 --> 00:34:40,159
github's cloud so you have the ability

00:34:39,679 --> 00:34:43,440
to run

00:34:40,159 --> 00:34:47,679
20 jobs asynchronous on github actions

00:34:43,440 --> 00:34:51,359
so when i say jobs inside the cml

00:34:47,679 --> 00:34:54,800
group the way you able groups is by

00:34:51,359 --> 00:34:57,839
spacing so every every job is now

00:34:54,800 --> 00:35:00,160
every top level element under jobs

00:34:57,839 --> 00:35:01,040
i only have one job in this action

00:35:00,160 --> 00:35:02,960
workflow

00:35:01,040 --> 00:35:04,800
uh and it's called build i can name this

00:35:02,960 --> 00:35:07,520
whatever i want but for this

00:35:04,800 --> 00:35:09,040
and for the sake i'm naming it build um

00:35:07,520 --> 00:35:10,000
i could choose an environment to run it

00:35:09,040 --> 00:35:11,760
on so i can run on

00:35:10,000 --> 00:35:13,680
linux i can run a mac i can run on

00:35:11,760 --> 00:35:16,240
windows i've chosen linux

00:35:13,680 --> 00:35:17,920
ubuntu because it kind of just works for

00:35:16,240 --> 00:35:22,160
a lot of different situations

00:35:17,920 --> 00:35:25,200
so yaml ain't markup language

00:35:22,160 --> 00:35:29,440
uh yet another market language

00:35:25,200 --> 00:35:30,880
is the acronym um but the

00:35:29,440 --> 00:35:33,359
oh and the other thing is that inside

00:35:30,880 --> 00:35:35,599
those jobs i can have see

00:35:33,359 --> 00:35:37,040
i could have synchronous steps and i can

00:35:35,599 --> 00:35:38,960
i don't actually off the top my head i

00:35:37,040 --> 00:35:40,720
remember how many steps you can run

00:35:38,960 --> 00:35:42,400
synchronously but i think there's a

00:35:40,720 --> 00:35:44,640
limit in the size of your action so you

00:35:42,400 --> 00:35:45,359
can actually one run quite a few steps

00:35:44,640 --> 00:35:47,920
like

00:35:45,359 --> 00:35:49,440
in the hundreds for sure of how many how

00:35:47,920 --> 00:35:51,599
many actions you're going to leverage

00:35:49,440 --> 00:35:53,760
now i've been trying to say the word

00:35:51,599 --> 00:35:55,359
workflow and that's really because

00:35:53,760 --> 00:35:57,839
that's what this is called it's called a

00:35:55,359 --> 00:35:59,520
workflow uh and or a workflow is a

00:35:57,839 --> 00:36:00,480
combination a github action warfare is a

00:35:59,520 --> 00:36:04,400
combination

00:36:00,480 --> 00:36:07,599
of multiple actions and this is actually

00:36:04,400 --> 00:36:09,280
kind of realistic because here i'm use

00:36:07,599 --> 00:36:11,119
i'm using the keyword uses

00:36:09,280 --> 00:36:13,200
and i'm using this action which is

00:36:11,119 --> 00:36:16,640
harry's action which i just showed you

00:36:13,200 --> 00:36:18,400
and i'm using it at version 2.0

00:36:16,640 --> 00:36:20,400
the other thing is i can have arguments

00:36:18,400 --> 00:36:21,920
and with the argument i'm using the free

00:36:20,400 --> 00:36:24,880
token i get which is

00:36:21,920 --> 00:36:26,079
reminder this is read-only and this is

00:36:24,880 --> 00:36:28,000
also why

00:36:26,079 --> 00:36:29,920
not b ducky could not use it because

00:36:28,000 --> 00:36:33,359
it's only accessible to

00:36:29,920 --> 00:36:35,839
members of the organization um

00:36:33,359 --> 00:36:37,440
the second action i'm using is labeling

00:36:35,839 --> 00:36:40,560
and this is an action that i created

00:36:37,440 --> 00:36:42,079
i didn't create actually i forked it

00:36:40,560 --> 00:36:43,200
and that's the other beauty of actions

00:36:42,079 --> 00:36:44,880
is because they're all open source

00:36:43,200 --> 00:36:47,280
they're all accessible and viewable

00:36:44,880 --> 00:36:49,040
for folks to see you can see that i

00:36:47,280 --> 00:36:52,560
actually forked this from another

00:36:49,040 --> 00:36:54,400
co-worker of mine abby and he created an

00:36:52,560 --> 00:36:56,320
action to basically label

00:36:54,400 --> 00:36:57,520
a pull request whenever something's been

00:36:56,320 --> 00:37:01,440
approved

00:36:57,520 --> 00:37:04,320
so i'm combining harry's action

00:37:01,440 --> 00:37:06,640
obvious action and also even updating

00:37:04,320 --> 00:37:08,160
obvious action to use it in my use case

00:37:06,640 --> 00:37:10,160
as well

00:37:08,160 --> 00:37:11,920
so that's my second action the other

00:37:10,160 --> 00:37:13,520
thing is i'm requiring how many

00:37:11,920 --> 00:37:15,520
with the environment variables uh which

00:37:13,520 --> 00:37:18,480
should be an argument actually but

00:37:15,520 --> 00:37:19,440
i'll change that in a sec i'm requiring

00:37:18,480 --> 00:37:21,200
one approver

00:37:19,440 --> 00:37:23,200
so i need to see one person to approve

00:37:21,200 --> 00:37:25,839
it so the beauty of this is

00:37:23,200 --> 00:37:27,359
the github action itself will approve it

00:37:25,839 --> 00:37:29,839
so once they approve it

00:37:27,359 --> 00:37:31,280
then it applies this github token and

00:37:29,839 --> 00:37:32,079
then it applies the label called auto

00:37:31,280 --> 00:37:34,320
merge

00:37:32,079 --> 00:37:36,880
and then finally i have the last action

00:37:34,320 --> 00:37:40,240
the last action hero per se

00:37:36,880 --> 00:37:42,079
and it then goes to another repo

00:37:40,240 --> 00:37:44,160
and i didn't point this out too as well

00:37:42,079 --> 00:37:45,440
with uh this action i'm running on the

00:37:44,160 --> 00:37:46,960
main branch

00:37:45,440 --> 00:37:48,800
this action i'm running it on the bot

00:37:46,960 --> 00:37:51,760
branch

00:37:48,800 --> 00:37:53,680
and uh looks like my computer is

00:37:51,760 --> 00:37:56,240
freezing up a little bit

00:37:53,680 --> 00:37:57,440
um and also stop me if this is a i

00:37:56,240 --> 00:37:58,480
appreciate the questions that are coming

00:37:57,440 --> 00:38:01,920
in too as well

00:37:58,480 --> 00:38:03,520
um stop me if this is

00:38:01,920 --> 00:38:05,760
if i've sort of lost you in a certain

00:38:03,520 --> 00:38:08,240
case like i mentioned pull request

00:38:05,760 --> 00:38:10,000
uh i appreciate your shield for stopping

00:38:08,240 --> 00:38:11,359
me and asking the question

00:38:10,000 --> 00:38:12,720
uh because we want to i don't want to

00:38:11,359 --> 00:38:13,520
assume that everybody knows exactly what

00:38:12,720 --> 00:38:14,480
i'm saying

00:38:13,520 --> 00:38:16,880
i'm just going to throw a lot of

00:38:14,480 --> 00:38:18,960
concepts and a lot of examples at you

00:38:16,880 --> 00:38:20,560
just for the hope that one of them stick

00:38:18,960 --> 00:38:20,960
that's really the goal for this workshop

00:38:20,560 --> 00:38:22,400
so

00:38:20,960 --> 00:38:24,640
uh sorry i didn't i didn't say it up

00:38:22,400 --> 00:38:27,599
front but you will get a lot of examples

00:38:24,640 --> 00:38:28,240
during the course of this this session

00:38:27,599 --> 00:38:30,000
um

00:38:28,240 --> 00:38:32,240
so yeah the what i'm what i'm getting at

00:38:30,000 --> 00:38:34,320
is when this label auto merge gets added

00:38:32,240 --> 00:38:36,079
it then merges it with the github action

00:38:34,320 --> 00:38:38,640
so that's exactly what happened

00:38:36,079 --> 00:38:41,200
in the case of i think mike i think mike

00:38:38,640 --> 00:38:44,400
was the first person out of the gate to

00:38:41,200 --> 00:38:46,400
get a pr up and running so that's why

00:38:44,400 --> 00:38:48,160
apologies mike if i continue to say your

00:38:46,400 --> 00:38:50,320
name uh hopefully

00:38:48,160 --> 00:38:51,680
you've got something to maybe get a blog

00:38:50,320 --> 00:38:52,320
post or something i could promote for

00:38:51,680 --> 00:38:55,680
you

00:38:52,320 --> 00:38:57,839
for being such a great uh attendee um

00:38:55,680 --> 00:38:58,960
but mike was the first one at first

00:38:57,839 --> 00:39:01,760
person out of the gate

00:38:58,960 --> 00:39:02,480
um actually well anyway i can speak at

00:39:01,760 --> 00:39:05,280
anybody

00:39:02,480 --> 00:39:06,800
but this individual had their their

00:39:05,280 --> 00:39:07,359
action get merged and you can see that

00:39:06,800 --> 00:39:09,839
live

00:39:07,359 --> 00:39:11,119
in action i didn't mean to make that pun

00:39:09,839 --> 00:39:13,839
but

00:39:11,119 --> 00:39:16,240
here we are cool so i'll take a break a

00:39:13,839 --> 00:39:20,000
breath to take drink some water

00:39:16,240 --> 00:39:20,000
i'm curious if anybody wants the uh

00:39:20,079 --> 00:39:23,440
developing up podcasts mike thanks for

00:39:22,240 --> 00:39:24,960
taking me up on that i'm actually going

00:39:23,440 --> 00:39:28,800
to pull this up

00:39:24,960 --> 00:39:33,280
as well

00:39:28,800 --> 00:39:37,359
oop i am developing

00:39:33,280 --> 00:39:39,760
up dot com i've not heard of this but

00:39:37,359 --> 00:39:40,640
you've got one more subscriber from me i

00:39:39,760 --> 00:39:42,000
will

00:39:40,640 --> 00:39:44,160
figure out how to get this in my apple

00:39:42,000 --> 00:39:46,480
podcast um

00:39:44,160 --> 00:39:47,599
i'm an overcast oh it looks like i'm

00:39:46,480 --> 00:39:50,000
going to go on a limb and say you're

00:39:47,599 --> 00:39:51,920
using simplecast you're using simplecast

00:39:50,000 --> 00:39:53,920
i use simplecast for my podcast as well

00:39:51,920 --> 00:39:56,240
but this is mike's time to shine so i

00:39:53,920 --> 00:39:57,520
won't recommend my podcast yet um

00:39:56,240 --> 00:40:00,160
but yeah i'm gonna keep that tab up

00:39:57,520 --> 00:40:03,440
because uh mike has been such a

00:40:00,160 --> 00:40:05,119
uh a great attendee as well um

00:40:03,440 --> 00:40:08,240
in just going through the process with

00:40:05,119 --> 00:40:09,760
me cool so

00:40:08,240 --> 00:40:11,920
so i guess i'm gonna assume everybody

00:40:09,760 --> 00:40:14,319
sort of got the gist

00:40:11,920 --> 00:40:16,160
of what that is if not again if you

00:40:14,319 --> 00:40:18,960
wanted to go through this

00:40:16,160 --> 00:40:20,480
i verbally said oh i i don't think i did

00:40:18,960 --> 00:40:22,000
a great job but i verbally said

00:40:20,480 --> 00:40:23,520
everything that's kind of already in the

00:40:22,000 --> 00:40:26,800
workshop

00:40:23,520 --> 00:40:28,640
so when i go to part zero explanation

00:40:26,800 --> 00:40:30,240
uh this explains everything i said

00:40:28,640 --> 00:40:33,040
verbally about

00:40:30,240 --> 00:40:33,440
the different actions and how they work

00:40:33,040 --> 00:40:34,960
uh

00:40:33,440 --> 00:40:37,119
and it sort of explains it there in

00:40:34,960 --> 00:40:38,560
written form too as well i just tended

00:40:37,119 --> 00:40:41,280
uh

00:40:38,560 --> 00:40:42,160
not really want to go step by step into

00:40:41,280 --> 00:40:44,240
uh

00:40:42,160 --> 00:40:46,240
what i wrote because you know i like to

00:40:44,240 --> 00:40:48,960
add some commentary to it as well

00:40:46,240 --> 00:40:49,920
so so far we we found out what github

00:40:48,960 --> 00:40:51,280
actions were

00:40:49,920 --> 00:40:53,440
we made sure everybody had a github

00:40:51,280 --> 00:40:55,359
account uh we also invited some people

00:40:53,440 --> 00:40:56,800
to the org on their own so this is a

00:40:55,359 --> 00:40:57,760
great tool set if you're doing some

00:40:56,800 --> 00:40:59,920
workshops

00:40:57,760 --> 00:41:01,599
some trainings with your team getting

00:40:59,920 --> 00:41:03,119
people into the organization

00:41:01,599 --> 00:41:04,720
because again there's a certain

00:41:03,119 --> 00:41:06,880
limitations on

00:41:04,720 --> 00:41:07,920
access to credentials that you'll want

00:41:06,880 --> 00:41:08,480
them in the org if you're doing a

00:41:07,920 --> 00:41:11,520
workshop

00:41:08,480 --> 00:41:12,720
which is why i sort of did this um and

00:41:11,520 --> 00:41:13,920
then the other thing is that we did we

00:41:12,720 --> 00:41:15,680
walked through how to use

00:41:13,920 --> 00:41:17,680
actions from third parties we use

00:41:15,680 --> 00:41:20,640
actions that are local

00:41:17,680 --> 00:41:22,160
and the beauty of this is if i went to

00:41:20,640 --> 00:41:25,280
github

00:41:22,160 --> 00:41:26,960
marketplace you've not only limited the

00:41:25,280 --> 00:41:27,760
actions that i forked and shared with

00:41:26,960 --> 00:41:30,319
you

00:41:27,760 --> 00:41:32,560
if you went to the actions tab and get a

00:41:30,319 --> 00:41:36,160
marketplace you can see

00:41:32,560 --> 00:41:38,319
what's the number 7767 actions

00:41:36,160 --> 00:41:38,319
so

00:41:39,359 --> 00:41:43,599
you can see there's a great action

00:41:41,280 --> 00:41:43,599
called

00:41:44,160 --> 00:41:48,640
let's see oh variables and markdown

00:41:47,280 --> 00:41:51,200
what a great action i don't know who

00:41:48,640 --> 00:41:54,240
made this but they should definitely get

00:41:51,200 --> 00:41:57,280
an extra star as well it's funny i've

00:41:54,240 --> 00:41:58,400
never started my own repo

00:41:57,280 --> 00:42:02,000
but there you go that's what you do

00:41:58,400 --> 00:42:03,760
that's how you get stars

00:42:02,000 --> 00:42:05,119
and this action will come up in the next

00:42:03,760 --> 00:42:10,000
section too as well

00:42:05,119 --> 00:42:11,839
but um also real quick um

00:42:10,000 --> 00:42:13,119
jennifer if you could tell me in the

00:42:11,839 --> 00:42:14,800
chat uh what

00:42:13,119 --> 00:42:16,640
time check i i know we have a break but

00:42:14,800 --> 00:42:17,280
i didn't remember if it was 45 minutes

00:42:16,640 --> 00:42:20,640
in

00:42:17,280 --> 00:42:21,440
or if it was an hour and because i know

00:42:20,640 --> 00:42:23,760
we're coming up

00:42:21,440 --> 00:42:25,200
coming up at the 45 minutes so yeah we

00:42:23,760 --> 00:42:27,119
do have a um

00:42:25,200 --> 00:42:29,119
we do have a break that should actually

00:42:27,119 --> 00:42:31,200
be in the next two minutes

00:42:29,119 --> 00:42:32,800
so i wanted to take a breath because the

00:42:31,200 --> 00:42:35,839
next section is going to be about

00:42:32,800 --> 00:42:38,319
setting up some basic actions yourself

00:42:35,839 --> 00:42:39,280
um curious how many folks are going to

00:42:38,319 --> 00:42:41,920
stick around with us

00:42:39,280 --> 00:42:43,359
for after the break and how many folks

00:42:41,920 --> 00:42:44,880
are going to drop off

00:42:43,359 --> 00:42:46,240
actually i should actually let's just go

00:42:44,880 --> 00:42:48,160
ahead and prepare for the break because

00:42:46,240 --> 00:42:51,520
i i hit a stopping point

00:42:48,160 --> 00:42:53,359
once this new section um which

00:42:51,520 --> 00:42:55,440
uh i will ask the question again of how

00:42:53,359 --> 00:42:57,920
many people are still here for the break

00:42:55,440 --> 00:42:58,720
but if you're gonna if you go get water

00:42:57,920 --> 00:43:01,359
or whatnot

00:42:58,720 --> 00:43:03,359
or stretch stand up um this is a good

00:43:01,359 --> 00:43:04,960
time to ask questions too

00:43:03,359 --> 00:43:06,480
everything's on the table so if you have

00:43:04,960 --> 00:43:07,839
a question about github have a question

00:43:06,480 --> 00:43:09,359
about actions have a question about

00:43:07,839 --> 00:43:12,079
getting your next job

00:43:09,359 --> 00:43:13,359
have a question about who's hiring um or

00:43:12,079 --> 00:43:16,319
if you want to hire me

00:43:13,359 --> 00:43:18,560
uh definitely ask it publicly in the

00:43:16,319 --> 00:43:18,560
chat

00:43:24,880 --> 00:43:30,000
oh and i should probably say that the

00:43:26,480 --> 00:43:32,480
break um

00:43:30,000 --> 00:43:33,760
i should have opened up the uh the

00:43:32,480 --> 00:43:37,680
schedule

00:43:33,760 --> 00:43:40,960
i think the break is 10 to 15 minutes

00:43:37,680 --> 00:43:44,160
but i can go up on the schedule

00:43:40,960 --> 00:43:44,160
real quick too as well

00:43:45,359 --> 00:43:49,119
uh break is 15 minutes so 45 after the

00:43:48,560 --> 00:43:51,599
hour

00:43:49,119 --> 00:43:53,200
uh so the error was thrown to me because

00:43:51,599 --> 00:43:56,400
hitting the merge button first and the

00:43:53,200 --> 00:43:56,400
button oh okay got it

00:43:56,720 --> 00:44:02,240
okay i was going crazy um

00:43:59,760 --> 00:44:03,680
but yeah user error is is a thing and it

00:44:02,240 --> 00:44:05,920
happens all the time like i

00:44:03,680 --> 00:44:08,240
the thing about having people directly

00:44:05,920 --> 00:44:10,240
manipulate the branch on main

00:44:08,240 --> 00:44:12,240
um it happens every time so i just

00:44:10,240 --> 00:44:14,960
always forget that

00:44:12,240 --> 00:44:16,560
i personally i approach um writing code

00:44:14,960 --> 00:44:19,359
to never touch the main branch

00:44:16,560 --> 00:44:21,200
ever so i never make commits there so in

00:44:19,359 --> 00:44:22,800
my mind i'm always like oh

00:44:21,200 --> 00:44:23,839
they're going to open a pull request

00:44:22,800 --> 00:44:24,720
they're going to do the thing that they

00:44:23,839 --> 00:44:27,440
know to do

00:44:24,720 --> 00:44:28,240
but not everybody knows to do that so

00:44:27,440 --> 00:44:31,040
fair enough

00:44:28,240 --> 00:44:32,640
also prematurely hit the merge button we

00:44:31,040 --> 00:44:37,839
all get a little excited as well

00:44:32,640 --> 00:44:37,839
so fair enough

00:44:38,960 --> 00:44:43,359
cool swag excellent how does one get

00:44:42,720 --> 00:44:46,400
them

00:44:43,359 --> 00:44:49,280
uh swag.github.com

00:44:46,400 --> 00:44:50,960
sorry not swag like shop.github.com

00:44:49,280 --> 00:44:53,680
that's where everybody gets

00:44:50,960 --> 00:44:54,960
get up swag now if you're lucky enough

00:44:53,680 --> 00:44:55,920
you could probably figure out how to get

00:44:54,960 --> 00:44:57,359
free swag

00:44:55,920 --> 00:44:59,520
unfortunately i don't know how to get

00:44:57,359 --> 00:45:01,200
that today i've given all my coupon

00:44:59,520 --> 00:45:04,319
codes out for the year

00:45:01,200 --> 00:45:08,079
well all the ones i had handy

00:45:04,319 --> 00:45:09,839
but a better way is um

00:45:08,079 --> 00:45:12,560
real quick i'm going to tweet out the

00:45:09,839 --> 00:45:15,440
slides because i'm gonna

00:45:12,560 --> 00:45:16,720
i'm going to share some slides in the

00:45:15,440 --> 00:45:19,839
next section

00:45:16,720 --> 00:45:19,839
too as well

00:45:20,319 --> 00:45:26,240
so and i pulled up my twitter i meant to

00:45:24,960 --> 00:45:29,839
pull up my twitter because i was going

00:45:26,240 --> 00:45:29,839
to write a tweet as well

00:45:29,920 --> 00:45:33,839
wow that site took a long time

00:45:45,280 --> 00:45:47,920
sorry i'm just going to sit here during

00:45:46,560 --> 00:45:49,040
the break because i literally just took

00:45:47,920 --> 00:46:01,839
a break before

00:45:49,040 --> 00:46:01,839
i started this

00:46:06,800 --> 00:46:11,920
huh that's interesting um

00:46:10,240 --> 00:46:14,079
i thought i had these slides already up

00:46:11,920 --> 00:46:17,200
and uh i don't so i need to upload

00:46:14,079 --> 00:46:17,200
slides now so

00:46:19,760 --> 00:46:23,119
cool and then um for those of you who

00:46:21,359 --> 00:46:24,960
are still sticking around uh where's

00:46:23,119 --> 00:46:27,440
everybody sort of sitting

00:46:24,960 --> 00:46:28,960
calling in from feel free to drop a city

00:46:27,440 --> 00:46:30,960
state country

00:46:28,960 --> 00:46:34,079
uh i'm quite curious i am actually

00:46:30,960 --> 00:46:36,160
currently in tarpon springs florida for

00:46:34,079 --> 00:46:37,920
the next week and two days and then i'll

00:46:36,160 --> 00:46:40,079
be in oakland california for the rest of

00:46:37,920 --> 00:46:43,599
my life

00:46:40,079 --> 00:46:46,319
cool durango mexico nice boston michigan

00:46:43,599 --> 00:46:47,119
ann arbor michigan specifically um i

00:46:46,319 --> 00:46:50,240
don't know where

00:46:47,119 --> 00:46:53,680
where ann arbor is in the uh

00:46:50,240 --> 00:46:55,359
the lakes um

00:46:53,680 --> 00:46:57,760
cary north carolina i know cary north

00:46:55,359 --> 00:47:00,160
carolina um

00:46:57,760 --> 00:47:02,319
yeah it's close to raleigh i believe

00:47:00,160 --> 00:47:05,280
perhaps

00:47:02,319 --> 00:47:07,680
uh greece nice thanks for uh hanging out

00:47:05,280 --> 00:47:07,680
with us

00:47:08,560 --> 00:47:13,839
columbia south carolina but not with

00:47:10,079 --> 00:47:13,839
todd excellent

00:47:15,200 --> 00:47:18,560
okay four events west of detroit is

00:47:17,200 --> 00:47:21,040
where ann arbor is

00:47:18,560 --> 00:47:23,040
california minneapolis got a lot of

00:47:21,040 --> 00:47:24,960
midwest folks here today

00:47:23,040 --> 00:47:27,040
poland thanks for staying up with us

00:47:24,960 --> 00:47:30,720
even even more so

00:47:27,040 --> 00:47:32,319
um chilly nice you're technically pretty

00:47:30,720 --> 00:47:35,200
close to my time zone but

00:47:32,319 --> 00:47:36,800
also that's the other side of the world

00:47:35,200 --> 00:47:39,680
literally

00:47:36,800 --> 00:47:40,160
all right let me grab these slides and

00:47:39,680 --> 00:47:41,760
uh

00:47:40,160 --> 00:47:44,000
see if i can upload these slides while

00:47:41,760 --> 00:47:44,000
we're

00:47:50,839 --> 00:47:56,640
waiting

00:47:53,839 --> 00:47:57,200
excellent so i also wanted to i guess i

00:47:56,640 --> 00:47:59,920
could

00:47:57,200 --> 00:48:00,559
this will come up later in conversation

00:47:59,920 --> 00:48:03,680
but

00:48:00,559 --> 00:48:03,680
i've been doing a um

00:48:04,240 --> 00:48:09,680
a series which it was uh 28 days of

00:48:07,839 --> 00:48:10,319
github action so it sort of starts with

00:48:09,680 --> 00:48:14,079
uh

00:48:10,319 --> 00:48:14,720
beginning of actions 28 github action

00:48:14,079 --> 00:48:17,040
tips so

00:48:14,720 --> 00:48:20,640
i'm going to drop in some links just to

00:48:17,040 --> 00:48:23,280
be helpful

00:48:20,640 --> 00:48:24,880
um if you wanted to sort of figure out

00:48:23,280 --> 00:48:27,520
the basics of actions

00:48:24,880 --> 00:48:29,119
also if you're not into reading and you

00:48:27,520 --> 00:48:32,160
rather watch a video

00:48:29,119 --> 00:48:33,520
uh shout out to myself for having a the

00:48:32,160 --> 00:48:36,480
same content but in a

00:48:33,520 --> 00:48:36,480
youtube playlist

00:48:37,040 --> 00:48:43,359
uh which i should find here

00:48:41,440 --> 00:48:45,440
uh which is essentially it's one to two

00:48:43,359 --> 00:48:48,000
minute videos on

00:48:45,440 --> 00:48:49,680
some introductory to advanced concepts

00:48:48,000 --> 00:48:51,839
of github actions so

00:48:49,680 --> 00:48:53,280
encourage you all to check that out uh

00:48:51,839 --> 00:48:55,839
always be promoting

00:48:53,280 --> 00:48:57,680
uh what would be an ideal github action

00:48:55,839 --> 00:48:59,440
hackathon

00:48:57,680 --> 00:49:02,240
uh it's almost like i've done this

00:48:59,440 --> 00:49:06,160
before github action

00:49:02,240 --> 00:49:07,920
hackathon announcing the github action

00:49:06,160 --> 00:49:10,480
hackathon on dev

00:49:07,920 --> 00:49:11,440
uh so we actually we did this and we had

00:49:10,480 --> 00:49:15,119
a lot of different

00:49:11,440 --> 00:49:18,960
examples um that came through the action

00:49:15,119 --> 00:49:18,960
hackathon i want to see if there was a

00:49:22,000 --> 00:49:24,640
the winners

00:49:25,040 --> 00:49:28,160
okay here we go so here are some great

00:49:26,960 --> 00:49:32,800
examples uh

00:49:28,160 --> 00:49:35,680
to answer a question of people who won

00:49:32,800 --> 00:49:37,359
and uh so we had one that was get up

00:49:35,680 --> 00:49:38,079
action to validate graphql operations

00:49:37,359 --> 00:49:39,680
which was

00:49:38,079 --> 00:49:41,200
it's a very specific use case of people

00:49:39,680 --> 00:49:42,160
who use graphql so

00:49:41,200 --> 00:49:45,280
that was a great one you definitely

00:49:42,160 --> 00:49:47,520
check that out uh more eyes please

00:49:45,280 --> 00:49:50,160
this was actually an action to encourage

00:49:47,520 --> 00:49:52,240
people to review your pr

00:49:50,160 --> 00:49:53,599
uh it happens everybody you open up pr

00:49:52,240 --> 00:49:56,160
and no one looks at it

00:49:53,599 --> 00:49:57,520
and uh you get up on a call and you beg

00:49:56,160 --> 00:49:59,599
people to start opening it up and

00:49:57,520 --> 00:50:01,760
reviewing it it's a great use case for

00:49:59,599 --> 00:50:04,000
actions because it sets a reminder

00:50:01,760 --> 00:50:04,960
and actually it auto assigns people to

00:50:04,000 --> 00:50:08,880
your pr as well

00:50:04,960 --> 00:50:11,280
too this one was kind of a joke action

00:50:08,880 --> 00:50:13,040
but they went through the they went

00:50:11,280 --> 00:50:16,880
through the

00:50:13,040 --> 00:50:18,480
um what do you call it they

00:50:16,880 --> 00:50:20,640
they basically built a github action

00:50:18,480 --> 00:50:23,200
that whenever there's a bug

00:50:20,640 --> 00:50:24,720
uh in your code or a failing test or

00:50:23,200 --> 00:50:26,160
sorry now it's not even a code it looks

00:50:24,720 --> 00:50:29,680
like it's the um

00:50:26,160 --> 00:50:31,920
submitting an issue it and i love the

00:50:29,680 --> 00:50:33,839
fact that they recorded this handheld

00:50:31,920 --> 00:50:35,520
it actually does an iot device that

00:50:33,839 --> 00:50:37,520
actually sets up an alarm whenever an

00:50:35,520 --> 00:50:39,280
issue is open

00:50:37,520 --> 00:50:41,040
but what would you build today would you

00:50:39,280 --> 00:50:42,880
like to select one as a winner if this

00:50:41,040 --> 00:50:45,440
hackathon happened today

00:50:42,880 --> 00:50:47,440
now i think that would be too easy if i

00:50:45,440 --> 00:50:48,800
just gave you an answer but

00:50:47,440 --> 00:50:51,200
i think there's a there's a lot of

00:50:48,800 --> 00:50:52,880
opportunity i would say build something

00:50:51,200 --> 00:50:55,839
that would solve a problem

00:50:52,880 --> 00:50:57,760
that already exists so if i what if i

00:50:55,839 --> 00:51:01,680
wanted something today what i would want

00:50:57,760 --> 00:51:04,240
is somebody to create a action

00:51:01,680 --> 00:51:06,720
that if a pr gets stale it actually

00:51:04,240 --> 00:51:08,720
opens up a

00:51:06,720 --> 00:51:10,079
a conference call like i'd love to pair

00:51:08,720 --> 00:51:12,079
a program with folks

00:51:10,079 --> 00:51:13,599
when you get stuck so i want to be able

00:51:12,079 --> 00:51:14,319
to have an action to link to another

00:51:13,599 --> 00:51:16,000
service

00:51:14,319 --> 00:51:17,440
that i can click and we can jump on our

00:51:16,000 --> 00:51:19,280
webrtc call

00:51:17,440 --> 00:51:21,119
and pair program together that's

00:51:19,280 --> 00:51:23,520
something i haven't seen anybody do

00:51:21,119 --> 00:51:24,480
i did see a service a service that does

00:51:23,520 --> 00:51:26,960
this

00:51:24,480 --> 00:51:29,680
called get duck which could be a nice

00:51:26,960 --> 00:51:29,680
little head start

00:51:31,040 --> 00:51:34,079
but you can actually create little these

00:51:32,480 --> 00:51:36,480
little rubber duck

00:51:34,079 --> 00:51:37,760
sessions inside your code where you can

00:51:36,480 --> 00:51:40,079
link together your

00:51:37,760 --> 00:51:41,440
your um it's like a vs code in the

00:51:40,079 --> 00:51:43,760
browser or

00:51:41,440 --> 00:51:46,000
what you call a virtual environment and

00:51:43,760 --> 00:51:46,000
uh

00:51:46,079 --> 00:51:49,440
git duck it's it's better than zoom in

00:51:48,400 --> 00:51:51,040
google me

00:51:49,440 --> 00:51:52,640
uh so it'd be cool to see if you could

00:51:51,040 --> 00:51:55,680
actually create a

00:51:52,640 --> 00:51:56,559
get duck action that you could just

00:51:55,680 --> 00:51:59,680
write a command

00:51:56,559 --> 00:52:01,280
so ideally what would be amazing since

00:51:59,680 --> 00:52:02,720
i'm not giving too much information for

00:52:01,280 --> 00:52:06,160
free um

00:52:02,720 --> 00:52:07,520
but if i opened up this pr it was like

00:52:06,160 --> 00:52:08,960
not be dougie he's like the only person

00:52:07,520 --> 00:52:10,640
who hasn't got a stuff merged and they

00:52:08,960 --> 00:52:13,119
could be like okay

00:52:10,640 --> 00:52:14,640
rubber it could be dot or it could be

00:52:13,119 --> 00:52:15,359
slash depends on whatever you want but

00:52:14,640 --> 00:52:19,040
just like

00:52:15,359 --> 00:52:21,440
rubber duck or

00:52:19,040 --> 00:52:22,880
even better it'd be cool if you could

00:52:21,440 --> 00:52:25,599
just

00:52:22,880 --> 00:52:27,280
do an emoji and if you get enough

00:52:25,599 --> 00:52:28,880
eyeballs if you get two eyeballs

00:52:27,280 --> 00:52:31,200
then it should open up a rubber duck

00:52:28,880 --> 00:52:31,200
session

00:52:31,520 --> 00:52:38,079
so that would be cool uh maybe like

00:52:35,280 --> 00:52:39,680
add enough emojis add enough rocket

00:52:38,079 --> 00:52:41,760
ships to ship it

00:52:39,680 --> 00:52:43,760
um like maybe if you don't have enough

00:52:41,760 --> 00:52:45,280
time to go and comment or you're on the

00:52:43,760 --> 00:52:46,000
road and you just have it up on your

00:52:45,280 --> 00:52:49,200
phone

00:52:46,000 --> 00:52:51,040
like be able to say okay if you have

00:52:49,200 --> 00:52:53,119
five rocket ships then that should be

00:52:51,040 --> 00:52:54,240
enough to ship this to production

00:52:53,119 --> 00:52:56,480
which is kind of scary but it'd be a

00:52:54,240 --> 00:52:59,520
cool little thing to test out

00:52:56,480 --> 00:53:01,839
all right so um we still have seven

00:52:59,520 --> 00:53:01,839
minutes

00:53:12,839 --> 00:53:15,839
and

00:53:19,040 --> 00:53:23,040
so hopefully i was helpful um i'm

00:53:22,000 --> 00:53:24,400
curious what other people

00:53:23,040 --> 00:53:26,000
anybody else have ideas for github

00:53:24,400 --> 00:53:26,640
actions and it doesn't have to be

00:53:26,000 --> 00:53:28,240
existing

00:53:26,640 --> 00:53:29,599
things that you know about like that

00:53:28,240 --> 00:53:30,880
think about what would you want to

00:53:29,599 --> 00:53:33,119
automate

00:53:30,880 --> 00:53:34,480
um with your project because i think the

00:53:33,119 --> 00:53:38,160
one thing to point out

00:53:34,480 --> 00:53:38,160
is the fact that github actions

00:53:39,839 --> 00:53:43,680
we have all these let's see the what

00:53:42,000 --> 00:53:45,520
events that trigger workflows

00:53:43,680 --> 00:53:48,079
so there's a section in the docs that

00:53:45,520 --> 00:53:51,359
give you a list of all the events

00:53:48,079 --> 00:53:54,640
that you can trigger on workflows and

00:53:51,359 --> 00:53:58,160
i forgot what the number is but

00:53:54,640 --> 00:54:01,440
that looks kind of like 20

00:53:58,160 --> 00:54:03,440
30. it's like 30 the last number i was

00:54:01,440 --> 00:54:04,960
using was 33.

00:54:03,440 --> 00:54:07,920
i'm not sure if we added because i know

00:54:04,960 --> 00:54:10,319
discussions has discussions been added

00:54:07,920 --> 00:54:12,800
not yet we just added the discussions

00:54:10,319 --> 00:54:15,680
api just recently so discussions

00:54:12,800 --> 00:54:16,480
do not trigger actions yet um so i

00:54:15,680 --> 00:54:18,880
mentioned reactions

00:54:16,480 --> 00:54:20,480
reactions don't trigger actions either

00:54:18,880 --> 00:54:22,800
it's something i've asked for but we

00:54:20,480 --> 00:54:24,319
haven't actually added it

00:54:22,800 --> 00:54:25,920
but yeah if you're looking for actions

00:54:24,319 --> 00:54:28,480
uh we also ran

00:54:25,920 --> 00:54:30,559
um let me actually drop that in the chat

00:54:28,480 --> 00:54:34,640
too as well in case you're interested

00:54:30,559 --> 00:54:38,480
uh we did run the github hackathon

00:54:34,640 --> 00:54:40,880
as well

00:54:38,480 --> 00:54:42,960
which the goal for this was we wanted to

00:54:40,880 --> 00:54:44,559
basically have these ideas

00:54:42,960 --> 00:54:46,160
and people submit them and the way we

00:54:44,559 --> 00:54:48,720
ran this action hackathon

00:54:46,160 --> 00:54:50,559
is from actions so the in the back end

00:54:48,720 --> 00:54:52,559
there's a repository

00:54:50,559 --> 00:54:53,920
that added the action to the uh the

00:54:52,559 --> 00:54:56,799
project so

00:54:53,920 --> 00:54:56,799
let's see github

00:54:57,440 --> 00:55:02,480
hackathon slash hackathon uh this is a

00:55:00,720 --> 00:55:04,720
private repo so i'm not able to share

00:55:02,480 --> 00:55:07,280
the code but i can show it to you uh all

00:55:04,720 --> 00:55:11,359
these submissions these 851

00:55:07,280 --> 00:55:14,240
prs these are submissions

00:55:11,359 --> 00:55:16,720
from projects and the way this works and

00:55:14,240 --> 00:55:19,280
unfortunately this project was um

00:55:16,720 --> 00:55:21,200
not valid uh some people did submit

00:55:19,280 --> 00:55:23,920
projects that weren't github actions

00:55:21,200 --> 00:55:24,799
um but we would just add the json to our

00:55:23,920 --> 00:55:27,440
submissions

00:55:24,799 --> 00:55:28,880
uh data folder uh and that's that's the

00:55:27,440 --> 00:55:29,359
way it works and the way that was

00:55:28,880 --> 00:55:31,359
powered

00:55:29,359 --> 00:55:33,119
is by github action so every time we had

00:55:31,359 --> 00:55:34,640
a submission we had an action that

00:55:33,119 --> 00:55:37,520
handles submission

00:55:34,640 --> 00:55:38,559
it would validate using the pull request

00:55:37,520 --> 00:55:41,280
uh there's a little

00:55:38,559 --> 00:55:42,240
uh create pull request action creates a

00:55:41,280 --> 00:55:43,760
pull request

00:55:42,240 --> 00:55:45,520
uh and then when that pull request gets

00:55:43,760 --> 00:55:47,119
opened it then

00:55:45,520 --> 00:55:50,160
allows us to review those pull requests

00:55:47,119 --> 00:55:51,839
with labels so this is github script

00:55:50,160 --> 00:55:53,520
it's actually a github action built by

00:55:51,839 --> 00:55:56,160
the actions team so you can see this is

00:55:53,520 --> 00:55:58,559
the actions repo

00:55:56,160 --> 00:56:00,000
it allows me to write javascript inside

00:55:58,559 --> 00:56:01,680
of my workflow file

00:56:00,000 --> 00:56:03,040
which is pretty nifty and the way that

00:56:01,680 --> 00:56:05,200
javascript works is

00:56:03,040 --> 00:56:06,440
if i have this conditional if i add a

00:56:05,200 --> 00:56:08,400
label so

00:56:06,440 --> 00:56:09,200
github.event.label so again the github

00:56:08,400 --> 00:56:11,359
event path

00:56:09,200 --> 00:56:12,640
that i had in my ruby script is also

00:56:11,359 --> 00:56:15,760
available here

00:56:12,640 --> 00:56:18,880
in my yaml so if the label was no code

00:56:15,760 --> 00:56:21,280
or not in action then we basically added

00:56:18,880 --> 00:56:23,599
a submission a comment to the the pr

00:56:21,280 --> 00:56:25,119
and then us we closed the the pr and let

00:56:23,599 --> 00:56:26,240
them know hey sorry submission is not a

00:56:25,119 --> 00:56:28,079
usable action

00:56:26,240 --> 00:56:29,680
and it was really we did this we

00:56:28,079 --> 00:56:31,359
automated this because

00:56:29,680 --> 00:56:33,760
we anticipated a lot of people who would

00:56:31,359 --> 00:56:34,799
just throw up a random repo and expect

00:56:33,760 --> 00:56:36,319
us to

00:56:34,799 --> 00:56:38,319
get them swag based on it because there

00:56:36,319 --> 00:56:38,960
was no the competition was build to get

00:56:38,319 --> 00:56:40,480
up action

00:56:38,960 --> 00:56:42,880
the competition wasn't built the best

00:56:40,480 --> 00:56:44,400
github action uh and we emphasized that

00:56:42,880 --> 00:56:46,640
so we gave away swag to anybody who

00:56:44,400 --> 00:56:49,520
submitted a working github action

00:56:46,640 --> 00:56:51,119
uh and it was quite uh i think almost

00:56:49,520 --> 00:56:54,000
400 people who got swag

00:56:51,119 --> 00:56:55,040
sent out to them um i would love to do

00:56:54,000 --> 00:56:57,280
this again

00:56:55,040 --> 00:56:58,079
uh but i think we uh we really really

00:56:57,280 --> 00:57:00,400
improved the model

00:56:58,079 --> 00:57:03,839
and i'm happy to see the growth of the

00:57:00,400 --> 00:57:05,119
ecosystem as well because of it

00:57:03,839 --> 00:57:07,119
cool so we have a couple minutes before

00:57:05,119 --> 00:57:09,839
we jump back into this

00:57:07,119 --> 00:57:12,559
session uh y'all who have been asking

00:57:09,839 --> 00:57:14,400
questions great questions um

00:57:12,559 --> 00:57:16,000
yeah if anybody who missed the questions

00:57:14,400 --> 00:57:19,200
feel free to ask them again

00:57:16,000 --> 00:57:19,200
if you're interested in the answer

00:57:23,200 --> 00:57:26,720
excellent and during that time i was

00:57:24,960 --> 00:57:30,240
able to

00:57:26,720 --> 00:57:30,240
share my slides too as well

00:57:32,799 --> 00:57:38,319
which i don't remember

00:57:38,799 --> 00:57:43,680
if there was a tweet what i like to do

00:57:42,240 --> 00:57:44,880
is actually actually i'll take this off

00:57:43,680 --> 00:57:46,400
screen

00:57:44,880 --> 00:57:48,079
i like to search for the tweet of the

00:57:46,400 --> 00:57:49,760
event and then add my slides to that

00:57:48,079 --> 00:57:52,960
because it's usually easier to get

00:57:49,760 --> 00:57:57,359
to find after the fact

00:57:52,960 --> 00:58:00,880
so let's see if i can find that

00:57:57,359 --> 00:58:00,880
and then we'll get started in two

00:58:06,839 --> 00:58:09,839
minutes

00:59:29,760 --> 00:59:33,920
all right excellent um

00:59:37,680 --> 00:59:42,880
all right so i just tweeted out the

00:59:40,000 --> 00:59:46,319
slides i also dropped it in the

00:59:42,880 --> 00:59:50,079
the um i was going to say slack

00:59:46,319 --> 00:59:50,799
but zoom chat um so we can move on from

00:59:50,079 --> 00:59:53,680
that

00:59:50,799 --> 00:59:55,280
um also shout out to mike's podcast

00:59:53,680 --> 00:59:57,599
everybody subscribe to dev up

00:59:55,280 --> 00:59:59,119
uh developing up uh i actually am

00:59:57,599 --> 01:00:01,359
looking forward to uh

00:59:59,119 --> 01:00:02,559
listening to that i'm a big podcast head

01:00:01,359 --> 01:00:05,680
so i

01:00:02,559 --> 01:00:07,280
i listen to a lot of podcasts um

01:00:05,680 --> 01:00:08,960
so i will definitely be listening to

01:00:07,280 --> 01:00:12,079
that later this afternoon

01:00:08,960 --> 01:00:13,520
or evening at this point um or at least

01:00:12,079 --> 01:00:15,680
when i'm finished i'll be evening

01:00:13,520 --> 01:00:17,200
i still got some work to do today all

01:00:15,680 --> 01:00:19,839
right so

01:00:17,200 --> 01:00:21,040
i had mentioned i wanted to i've got

01:00:19,839 --> 01:00:25,280
this hello world

01:00:21,040 --> 01:00:27,680
and i also got about 60 slides left

01:00:25,280 --> 01:00:29,280
so the first section always takes the

01:00:27,680 --> 01:00:30,720
longest is sort of explaining doing a

01:00:29,280 --> 01:00:32,000
lot of sort of hands-on showing

01:00:30,720 --> 01:00:33,680
showcasing

01:00:32,000 --> 01:00:35,040
you're more than welcome to jump through

01:00:33,680 --> 01:00:36,319
the rest of the hello world or we could

01:00:35,040 --> 01:00:39,839
do it together

01:00:36,319 --> 01:00:43,119
or we could slide so um i want to know

01:00:39,839 --> 01:00:44,640
of by votes either say slides

01:00:43,119 --> 01:00:47,200
if you want to see some more advanced

01:00:44,640 --> 01:00:48,960
examples of github actions and use cases

01:00:47,200 --> 01:00:50,799
or if you want us to walk through the

01:00:48,960 --> 01:00:51,359
rest of this workshop and do some

01:00:50,799 --> 01:00:54,839
hands-on

01:00:51,359 --> 01:00:57,760
of building subject-actions ourselves

01:00:54,839 --> 01:00:58,319
so the way to vote is either slides or

01:00:57,760 --> 01:01:01,359
repo

01:00:58,319 --> 01:01:04,160
so type in slides type in repo

01:01:01,359 --> 01:01:04,720
if uh if you want to go to the rest repo

01:01:04,160 --> 01:01:08,079
cool so

01:01:04,720 --> 01:01:08,079
it looks like slides are ahead

01:01:08,400 --> 01:01:14,000
and now we're tied slides pulled ahead

01:01:11,680 --> 01:01:15,650
again

01:01:14,000 --> 01:01:17,119
now we're tied

01:01:15,650 --> 01:01:21,200
[Laughter]

01:01:17,119 --> 01:01:23,520
all right slides and tie breaker

01:01:21,200 --> 01:01:25,040
one more person anybody does anybody

01:01:23,520 --> 01:01:26,400
care like we're literally tied repo in

01:01:25,040 --> 01:01:29,839
slides

01:01:26,400 --> 01:01:32,160
repo both

01:01:29,839 --> 01:01:33,359
okay so how about we do this i'll skip

01:01:32,160 --> 01:01:35,280
part two and go to

01:01:33,359 --> 01:01:36,559
straight to part three uh but quickly

01:01:35,280 --> 01:01:37,839
we'll do part one

01:01:36,559 --> 01:01:39,760
and then we'll go through as much of the

01:01:37,839 --> 01:01:40,400
slides as we can after we get through

01:01:39,760 --> 01:01:42,240
part one

01:01:40,400 --> 01:01:43,920
and then a verbal explanation of part

01:01:42,240 --> 01:01:45,280
three uh

01:01:43,920 --> 01:01:47,040
ironically this is probably the same

01:01:45,280 --> 01:01:47,839
thing we did last year too as well uh i

01:01:47,040 --> 01:01:49,760
used

01:01:47,839 --> 01:01:52,000
i updated a lot of these examples uh

01:01:49,760 --> 01:01:54,240
before this uh obsession

01:01:52,000 --> 01:01:55,680
uh but the slides are all brand new

01:01:54,240 --> 01:01:56,880
which you can get the slides just by

01:01:55,680 --> 01:01:58,880
following me on twitter

01:01:56,880 --> 01:02:00,240
uh plug follow me on twitter you'll get

01:01:58,880 --> 01:02:03,760
all that content

01:02:00,240 --> 01:02:05,520
scroll back all right so with the

01:02:03,760 --> 01:02:08,160
if you're in the repo uh there's part

01:02:05,520 --> 01:02:11,200
one part one is called hello world

01:02:08,160 --> 01:02:13,359
simply i want you to basically

01:02:11,200 --> 01:02:14,799
trigger your first action on your own

01:02:13,359 --> 01:02:16,720
and the way you're gonna do this is by

01:02:14,799 --> 01:02:19,039
going to the sandbox repository in the

01:02:16,720 --> 01:02:21,280
link

01:02:19,039 --> 01:02:22,640
and you want to then this is explained

01:02:21,280 --> 01:02:25,760
in the the previous screen

01:02:22,640 --> 01:02:27,119
explains to go to hello world um

01:02:25,760 --> 01:02:28,960
you can include all branches if you want

01:02:27,119 --> 01:02:29,520
that's a new feature uh and then you

01:02:28,960 --> 01:02:33,039
want to

01:02:29,520 --> 01:02:37,200
call this your name sandbox

01:02:33,039 --> 01:02:39,440
or test but whatever you want to call it

01:02:37,200 --> 01:02:40,640
uh it's easier to find it if you name it

01:02:39,440 --> 01:02:42,079
with something in your name

01:02:40,640 --> 01:02:44,319
in case you want to transfer this or

01:02:42,079 --> 01:02:45,280
delete it later um if you don't delete

01:02:44,319 --> 01:02:46,240
it i'll probably write a script and

01:02:45,280 --> 01:02:49,440
delete it for you

01:02:46,240 --> 01:02:52,480
in like in a couple weekends from now um

01:02:49,440 --> 01:02:52,880
uh i do also want to probably do it like

01:02:52,480 --> 01:02:54,799
in a

01:02:52,880 --> 01:02:56,319
i guess i could still see it if you want

01:02:54,799 --> 01:02:59,920
to uh make it private

01:02:56,319 --> 01:03:02,799
but create it as a public repo um

01:02:59,920 --> 01:03:04,079
and then go from there so that's that's

01:03:02,799 --> 01:03:06,240
pretty much the steps

01:03:04,079 --> 01:03:07,359
uh if you could open up a sandbox

01:03:06,240 --> 01:03:09,359
repository

01:03:07,359 --> 01:03:11,200
and then i'll give you a couple minutes

01:03:09,359 --> 01:03:12,559
to basically click through that

01:03:11,200 --> 01:03:14,960
and then i'll show you exactly what's

01:03:12,559 --> 01:03:14,960
happening

01:03:15,200 --> 01:03:19,039
and what's actually happening is an

01:03:17,760 --> 01:03:20,319
action will actually start writing and

01:03:19,039 --> 01:03:22,240
the way i know this is because this

01:03:20,319 --> 01:03:25,119
little

01:03:22,240 --> 01:03:30,559
yellow dot i was going to say orange but

01:03:25,119 --> 01:03:32,240
no it's definitely yellow

01:03:30,559 --> 01:03:34,160
so i'll give you one to two minutes to

01:03:32,240 --> 01:03:35,680
sort of click through those steps

01:03:34,160 --> 01:03:37,760
and then we'll explain that and we'll

01:03:35,680 --> 01:03:38,960
move to part three so this is this is

01:03:37,760 --> 01:03:42,720
simply what it is

01:03:38,960 --> 01:03:43,200
uh it's not too too intense uh but those

01:03:42,720 --> 01:03:45,599
who are

01:03:43,200 --> 01:03:47,200
curious uh what you if you did not know

01:03:45,599 --> 01:03:47,680
about template repositories this is a

01:03:47,200 --> 01:03:49,839
great

01:03:47,680 --> 01:03:51,599
tool if you have a team or if you have

01:03:49,839 --> 01:03:53,039
an organization that you build the same

01:03:51,599 --> 01:03:54,400
projects over and over again

01:03:53,039 --> 01:03:58,000
it's nice to have templates that already

01:03:54,400 --> 01:04:00,720
have connections to your cypress test or

01:03:58,000 --> 01:04:01,359
connections to your deployment platform

01:04:00,720 --> 01:04:04,319
of choice

01:04:01,359 --> 01:04:05,200
like you can have all those built in as

01:04:04,319 --> 01:04:08,319
default

01:04:05,200 --> 01:04:10,720
templated github actions so here

01:04:08,319 --> 01:04:12,559
i well we do have an issue template too

01:04:10,720 --> 01:04:14,240
as well which we'll get to

01:04:12,559 --> 01:04:15,599
in the second part which we're gonna

01:04:14,240 --> 01:04:18,640
skip actually to be honest

01:04:15,599 --> 01:04:20,640
um but when you create a template

01:04:18,640 --> 01:04:23,119
uh i was able to create a template with

01:04:20,640 --> 01:04:26,960
a github action already included so

01:04:23,119 --> 01:04:28,799
sorry a github workflow already included

01:04:26,960 --> 01:04:30,079
and inside that workflow we have a

01:04:28,799 --> 01:04:32,000
similar structure

01:04:30,079 --> 01:04:33,760
we do have a name for the action

01:04:32,000 --> 01:04:36,400
workflow uh we do have

01:04:33,760 --> 01:04:38,880
the event that it gets triggered on and

01:04:36,400 --> 01:04:41,119
then we do have our jobs we have one job

01:04:38,880 --> 01:04:43,119
and one job only and that's basically

01:04:41,119 --> 01:04:44,559
just run hello world

01:04:43,119 --> 01:04:47,119
and this is intentional because i wanted

01:04:44,559 --> 01:04:49,359
to show that showcase that you could

01:04:47,119 --> 01:04:51,119
run bash scripts directly in the

01:04:49,359 --> 01:04:53,200
environment of your choosing so

01:04:51,119 --> 01:04:55,280
if this was mac os you could run brew

01:04:53,200 --> 01:04:56,640
install if this is windows

01:04:55,280 --> 01:04:58,160
you could do whatever windows does

01:04:56,640 --> 01:04:59,280
because i don't i don't actually write

01:04:58,160 --> 01:05:03,359
code on windows

01:04:59,280 --> 01:05:04,480
um and this i'm just doing an echo a

01:05:03,359 --> 01:05:07,920
nice little bash script

01:05:04,480 --> 01:05:10,559
of echoing hello world um it's

01:05:07,920 --> 01:05:11,280
actually bash it's a unix uh command to

01:05:10,559 --> 01:05:13,280
echo

01:05:11,280 --> 01:05:14,640
but that's besides the fact what i did

01:05:13,280 --> 01:05:15,920
want to point out is that if you did

01:05:14,640 --> 01:05:17,839
this if you went to this process

01:05:15,920 --> 01:05:19,039
you should have an initial run of your

01:05:17,839 --> 01:05:22,319
action

01:05:19,039 --> 01:05:24,000
so again actions tab up here

01:05:22,319 --> 01:05:25,440
this is brand new for github actions if

01:05:24,000 --> 01:05:27,440
you haven't seen it before

01:05:25,440 --> 01:05:28,799
um you can see all your workflows our

01:05:27,440 --> 01:05:30,960
workflow is called

01:05:28,799 --> 01:05:32,640
the same name we have in the yaml file

01:05:30,960 --> 01:05:33,680
it also is pointing to our email file

01:05:32,640 --> 01:05:35,119
here

01:05:33,680 --> 01:05:36,880
what's beautiful is like you just have

01:05:35,119 --> 01:05:38,559
so many ways to click back and forth

01:05:36,880 --> 01:05:41,200
between the two different ways

01:05:38,559 --> 01:05:42,880
back when um when i first started using

01:05:41,200 --> 01:05:44,640
github actions when we first shipped it

01:05:42,880 --> 01:05:47,359
back in 2018 which i didn't mention

01:05:44,640 --> 01:05:48,839
it's been around since 2018. um we

01:05:47,359 --> 01:05:50,559
didn't have all this sort of like nice

01:05:48,839 --> 01:05:52,880
little

01:05:50,559 --> 01:05:54,319
experiences like if you have a yaml file

01:05:52,880 --> 01:05:57,680
you can click this button

01:05:54,319 --> 01:05:59,440
view runs so now i can click through i

01:05:57,680 --> 01:06:00,720
can see a visualization which i do want

01:05:59,440 --> 01:06:02,160
to show off at the end

01:06:00,720 --> 01:06:03,920
uh really cool ways you can do you can

01:06:02,160 --> 01:06:05,280
work with the visualization you see the

01:06:03,920 --> 01:06:06,640
warfare run

01:06:05,280 --> 01:06:08,480
if we had some other stuff we could have

01:06:06,640 --> 01:06:11,440
it below here

01:06:08,480 --> 01:06:12,160
but with all that said we ran a simple

01:06:11,440 --> 01:06:15,280
hello world

01:06:12,160 --> 01:06:17,920
so the next step for this

01:06:15,280 --> 01:06:18,720
is going to be we do have some

01:06:17,920 --> 01:06:21,920
instruction

01:06:18,720 --> 01:06:23,599
to well now i'm nice

01:06:21,920 --> 01:06:26,160
i closed the repo by accident by

01:06:23,599 --> 01:06:26,160
creating it

01:06:30,000 --> 01:06:33,839
there we go let's get back in the

01:06:31,039 --> 01:06:37,119
workshop folder the file

01:06:33,839 --> 01:06:39,440
part one so part one it

01:06:37,119 --> 01:06:40,960
requires it asks you to everything i

01:06:39,440 --> 01:06:42,559
just showcased

01:06:40,960 --> 01:06:44,000
again this is all in written form as

01:06:42,559 --> 01:06:47,039
well if you really wanted to

01:06:44,000 --> 01:06:48,960
go back and re remember this tomorrow um

01:06:47,039 --> 01:06:50,640
but the cool thing about this is it you

01:06:48,960 --> 01:06:53,839
do have the ability to run

01:06:50,640 --> 01:06:55,440
multi-line scripts by just adding a pipe

01:06:53,839 --> 01:06:57,119
as well if you didn't know if you did

01:06:55,440 --> 01:07:00,079
above your enter sign

01:06:57,119 --> 01:07:01,599
there is a pipe there shift and forward

01:07:00,079 --> 01:07:03,280
slash

01:07:01,599 --> 01:07:04,799
and the other thing is an explanation of

01:07:03,280 --> 01:07:06,400
all these different things that i sort

01:07:04,799 --> 01:07:10,240
of walked through already

01:07:06,400 --> 01:07:12,400
um but the part 1a this is uh

01:07:10,240 --> 01:07:13,839
what the next step is and what i'm going

01:07:12,400 --> 01:07:17,839
to do is just copy this

01:07:13,839 --> 01:07:20,960
completely and copy and paste it and

01:07:17,839 --> 01:07:22,319
go into my workflow file again sorry if

01:07:20,960 --> 01:07:24,000
i'm skipping steps it's because i want

01:07:22,319 --> 01:07:27,359
to go to the slides eventually

01:07:24,000 --> 01:07:29,520
so if you did want to read through this

01:07:27,359 --> 01:07:32,559
it will explain in more detail whoops

01:07:29,520 --> 01:07:32,559
actually i wanted to go here

01:07:33,440 --> 01:07:39,119
there we go go to my workflow

01:07:36,640 --> 01:07:40,799
uh i can edit in the pencil you can also

01:07:39,119 --> 01:07:41,839
clone this locally and edit there too as

01:07:40,799 --> 01:07:44,160
well

01:07:41,839 --> 01:07:45,760
but because this is just copy and paste

01:07:44,160 --> 01:07:48,960
i can do that here

01:07:45,760 --> 01:07:49,920
i can set an environment variable called

01:07:48,960 --> 01:07:52,960
mary

01:07:49,920 --> 01:07:54,720
which for me i'm going to say brian and

01:07:52,960 --> 01:07:56,400
then i'm going to say hello

01:07:54,720 --> 01:07:58,079
name and this environment variable is

01:07:56,400 --> 01:07:59,599
being set so

01:07:58,079 --> 01:08:01,920
if you wanted to set up environment

01:07:59,599 --> 01:08:05,599
variables you can as well

01:08:01,920 --> 01:08:08,720
uh we do have the option for you to also

01:08:05,599 --> 01:08:09,599
create secrets um some people are not

01:08:08,720 --> 01:08:10,960
aware of this

01:08:09,599 --> 01:08:12,559
i broke one of my rules i committed

01:08:10,960 --> 01:08:13,920
directly to main branch but it's because

01:08:12,559 --> 01:08:17,120
we're in a sandbox

01:08:13,920 --> 01:08:17,920
i felt like it was okay but if you

01:08:17,120 --> 01:08:19,120
weren't aware

01:08:17,920 --> 01:08:21,759
you could actually set some environment

01:08:19,120 --> 01:08:24,000
variables here as well in the secrets

01:08:21,759 --> 01:08:24,880
so i just went to the settings all the

01:08:24,000 --> 01:08:28,400
way to the bottom

01:08:24,880 --> 01:08:32,799
of the here secrets

01:08:28,400 --> 01:08:34,960
and i could set a new secret

01:08:32,799 --> 01:08:36,159
sorry we changed this this it always

01:08:34,960 --> 01:08:37,600
throws me off because we changed the

01:08:36,159 --> 01:08:38,880
screen a little bit and i'm used to it

01:08:37,600 --> 01:08:42,319
looking a different way

01:08:38,880 --> 01:08:45,040
and i can set name as my favorite name

01:08:42,319 --> 01:08:46,640
which is fu lala that's how i console

01:08:45,040 --> 01:08:48,080
that log in javascript

01:08:46,640 --> 01:08:50,880
but now i have an environment variable

01:08:48,080 --> 01:08:52,960
so if i wanted to

01:08:50,880 --> 01:08:54,799
i could go back and check to see the

01:08:52,960 --> 01:08:57,839
last thing i just pushed

01:08:54,799 --> 01:08:59,279
which was hello brian it gets set

01:08:57,839 --> 01:09:01,520
it's using this environment variable

01:08:59,279 --> 01:09:05,199
called name but if i wanted to

01:09:01,520 --> 01:09:05,199
i could go in the back into here

01:09:05,600 --> 01:09:08,880
and use the environment variable i just

01:09:07,359 --> 01:09:13,600
created

01:09:08,880 --> 01:09:13,600
which instead of name it would be

01:09:18,719 --> 01:09:24,159
actually sorry secrets dot name

01:09:22,640 --> 01:09:26,159
and this one actually accessed my

01:09:24,159 --> 01:09:26,480
repository secrets which is what i just

01:09:26,159 --> 01:09:28,319
set

01:09:26,480 --> 01:09:30,000
so if i didn't want to set these

01:09:28,319 --> 01:09:32,719
directly in line perhaps this is

01:09:30,000 --> 01:09:33,759
top secret don't want to set a name also

01:09:32,719 --> 01:09:34,319
if you want to send a variable from

01:09:33,759 --> 01:09:37,679
another

01:09:34,319 --> 01:09:39,440
action job um so perhaps you set

01:09:37,679 --> 01:09:41,440
you set the name somewhere else and you

01:09:39,440 --> 01:09:42,239
want a leverage name inside your

01:09:41,440 --> 01:09:45,120
workflow

01:09:42,239 --> 01:09:46,000
um you could do that as well so now i

01:09:45,120 --> 01:09:49,040
have secrets

01:09:46,000 --> 01:09:52,560
dot name that should now run

01:09:49,040 --> 01:09:55,040
with no problem and it should say

01:09:52,560 --> 01:09:55,040
hello

01:09:56,080 --> 01:09:59,679
that is that's one thing i forgot to

01:09:57,600 --> 01:10:02,719
mention secrets aren't encrypted

01:09:59,679 --> 01:10:04,239
so i cannot actually echo secrets so

01:10:02,719 --> 01:10:05,440
instead it should be an argument but we

01:10:04,239 --> 01:10:06,880
won't get into arguments

01:10:05,440 --> 01:10:08,719
if you are interested in wanting to know

01:10:06,880 --> 01:10:10,080
how to do this through arguments

01:10:08,719 --> 01:10:11,920
uh that is something you could actually

01:10:10,080 --> 01:10:12,480
leverage and actually i should add to

01:10:11,920 --> 01:10:14,159
this um

01:10:12,480 --> 01:10:16,800
example and talk about arguments because

01:10:14,159 --> 01:10:19,040
it's a good use case to include

01:10:16,800 --> 01:10:20,239
but for now you'll have to wait until i

01:10:19,040 --> 01:10:21,600
create that video

01:10:20,239 --> 01:10:23,120
also i want to point out i'm actually

01:10:21,600 --> 01:10:24,719
creating a course a github actions

01:10:23,120 --> 01:10:26,000
course as well i'm look i'm

01:10:24,719 --> 01:10:28,320
looking forward to releasing it next

01:10:26,000 --> 01:10:28,320
month

01:10:28,960 --> 01:10:32,320
and it's gonna be from all these

01:10:30,080 --> 01:10:34,800
findings so as i as i

01:10:32,320 --> 01:10:35,920
realized uh if you didn't notice i did

01:10:34,800 --> 01:10:37,679
this on the fly so i

01:10:35,920 --> 01:10:39,360
totally forgot that we encrypted secrets

01:10:37,679 --> 01:10:41,920
but it's a good use case

01:10:39,360 --> 01:10:44,400
to show you that you can't actually know

01:10:41,920 --> 01:10:47,600
who i was saying hello to

01:10:44,400 --> 01:10:50,159
your secret's safe with me

01:10:47,600 --> 01:10:51,600
man that was that was a great pun um i'm

01:10:50,159 --> 01:10:53,120
i'm guessing you're laughing right now

01:10:51,600 --> 01:10:57,280
but if you're not

01:10:53,120 --> 01:11:00,560
i will continue to move on um

01:10:57,280 --> 01:11:02,480
yeah so let's go back to part one

01:11:00,560 --> 01:11:04,239
uh again as i mentioned part one i knew

01:11:02,480 --> 01:11:05,280
it was going to take no time to sort of

01:11:04,239 --> 01:11:07,040
talk through

01:11:05,280 --> 01:11:08,400
again you could go back here read

01:11:07,040 --> 01:11:10,880
through this and get a better

01:11:08,400 --> 01:11:13,040
understanding on what i just mentioned

01:11:10,880 --> 01:11:14,400
environment variables i also want to

01:11:13,040 --> 01:11:16,560
talk about real quick

01:11:14,400 --> 01:11:17,760
is the environment variables that are

01:11:16,560 --> 01:11:20,960
built in

01:11:17,760 --> 01:11:22,880
to github actions so instead of github

01:11:20,960 --> 01:11:25,120
and instead of setting your secrets you

01:11:22,880 --> 01:11:26,640
can actually run your

01:11:25,120 --> 01:11:28,480
environment variable instead which i

01:11:26,640 --> 01:11:30,239
could read whoever ran the action

01:11:28,480 --> 01:11:32,640
so this is the way i was i was able to

01:11:30,239 --> 01:11:34,880
find mike's name in his first pr

01:11:32,640 --> 01:11:37,360
uh and what i'll do is i'll fix this

01:11:34,880 --> 01:11:37,360
because

01:11:38,840 --> 01:11:44,080
this did not work the way i attended

01:11:44,560 --> 01:11:48,719
so i'm going to put github actor with

01:11:46,400 --> 01:11:51,440
one dollar sign

01:11:48,719 --> 01:11:53,840
i'm going to commit that back to maine

01:11:51,440 --> 01:11:56,960
i'm going to run this

01:11:53,840 --> 01:11:56,960
see how fast this runs

01:11:59,120 --> 01:12:03,199
also feel free to ask questions if

01:12:00,560 --> 01:12:05,440
you're lost concerned

01:12:03,199 --> 01:12:06,480
um if you think i'm doing two minutes

01:12:05,440 --> 01:12:08,800
trickery and magic

01:12:06,480 --> 01:12:10,960
i'm happy to sort of reveal behind the

01:12:08,800 --> 01:12:12,880
curtain as well

01:12:10,960 --> 01:12:14,400
all right so the thing to point out is

01:12:12,880 --> 01:12:16,400
the github actor is always going to be

01:12:14,400 --> 01:12:18,719
the person who triggered the action

01:12:16,400 --> 01:12:20,320
so this is really good to note because a

01:12:18,719 --> 01:12:22,560
lot of times you'll need to

01:12:20,320 --> 01:12:23,520
debug stuff and it might not be clear

01:12:22,560 --> 01:12:24,960
what commit

01:12:23,520 --> 01:12:26,960
or what happened because not every

01:12:24,960 --> 01:12:28,640
action is based on a commit i can run

01:12:26,960 --> 01:12:30,719
actions on issue opening i can run

01:12:28,640 --> 01:12:33,360
actions on comments on issues pr's

01:12:30,719 --> 01:12:35,120
reactions not reactions yet hopefully

01:12:33,360 --> 01:12:37,040
we'll ship that

01:12:35,120 --> 01:12:39,199
that would be a great action to run on

01:12:37,040 --> 01:12:41,600
reactions reaction actions

01:12:39,199 --> 01:12:43,040
um but i just wanted to point out

01:12:41,600 --> 01:12:46,159
because b dougie triggered

01:12:43,040 --> 01:12:51,600
this action the github actor that i set

01:12:46,159 --> 01:12:54,880
as variable is b dougie

01:12:51,600 --> 01:12:55,840
cool um so yeah that is that kind of

01:12:54,880 --> 01:12:58,880
concludes this

01:12:55,840 --> 01:12:59,600
little part here uh i made a little joke

01:12:58,880 --> 01:13:02,880
and a

01:12:59,600 --> 01:13:04,960
pun about um variables and markdown

01:13:02,880 --> 01:13:06,640
uh i have a gift of action i wrote and

01:13:04,960 --> 01:13:08,719
created for this workshop

01:13:06,640 --> 01:13:10,560
which essentially essentially does mad

01:13:08,719 --> 01:13:12,000
libs for your issues so

01:13:10,560 --> 01:13:14,000
if you wanted to see how actions get

01:13:12,000 --> 01:13:15,920
triggered on issues i do encourage you

01:13:14,000 --> 01:13:17,760
to test this out and try it

01:13:15,920 --> 01:13:21,360
but for the sake of time i'm gonna skip

01:13:17,760 --> 01:13:24,560
over it and go directly to part three

01:13:21,360 --> 01:13:26,320
and part three is all about ci

01:13:24,560 --> 01:13:28,320
now this is usually where people start

01:13:26,320 --> 01:13:30,239
with github actions uh and i won't

01:13:28,320 --> 01:13:31,040
actually wait for you to actually how do

01:13:30,239 --> 01:13:33,920
you manually run

01:13:31,040 --> 01:13:36,320
actions that's a great question so if

01:13:33,920 --> 01:13:39,360
you're in action so before going to ci

01:13:36,320 --> 01:13:41,199
um if you wanted to rerun your actions

01:13:39,360 --> 01:13:44,000
you could do that here

01:13:41,199 --> 01:13:45,440
that's a possibility but there is a case

01:13:44,000 --> 01:13:49,120
that you perhaps

01:13:45,440 --> 01:13:50,640
want to run your actions uh manually as

01:13:49,120 --> 01:13:52,719
in like

01:13:50,640 --> 01:13:53,679
there is an action that i've run with

01:13:52,719 --> 01:13:57,600
this project so

01:13:53,679 --> 01:13:59,440
shout out to skyline.github.com

01:13:57,600 --> 01:14:02,800
this is the project that we shipped back

01:13:59,440 --> 01:14:02,800
in january into january

01:14:03,360 --> 01:14:06,239
we didn't do a lot of we did didn't do a

01:14:04,960 --> 01:14:07,679
lot of marketing around it because it

01:14:06,239 --> 01:14:08,719
was more of like a sort of like cool

01:14:07,679 --> 01:14:10,480
feature of github

01:14:08,719 --> 01:14:12,080
like a little passion project that we we

01:14:10,480 --> 01:14:14,880
shipped my team did

01:14:12,080 --> 01:14:16,080
and um the way this works sorry i just

01:14:14,880 --> 01:14:17,840
want to give this context

01:14:16,080 --> 01:14:19,440
because i think it's really cool uh the

01:14:17,840 --> 01:14:20,800
way this works it actually takes your

01:14:19,440 --> 01:14:24,080
github handle

01:14:20,800 --> 01:14:24,560
and it identifies your contribution

01:14:24,080 --> 01:14:27,120
graph

01:14:24,560 --> 01:14:28,880
so these are how many commits i made

01:14:27,120 --> 01:14:31,199
throughout the year of 2020.

01:14:28,880 --> 01:14:32,400
uh this is me basically doing some

01:14:31,199 --> 01:14:33,760
automation

01:14:32,400 --> 01:14:35,520
so that's why this like looks like a

01:14:33,760 --> 01:14:37,280
giant uh block

01:14:35,520 --> 01:14:38,560
uh but if you want a more like a

01:14:37,280 --> 01:14:43,120
realistic one

01:14:38,560 --> 01:14:46,320
if i go to 2019 uh here we go

01:14:43,120 --> 01:14:46,320
this looks like a uh

01:14:47,920 --> 01:14:53,920
yeah so this is 2019 this is actually

01:14:51,040 --> 01:14:55,760
around here is when i had some time off

01:14:53,920 --> 01:14:56,640
because i had a kid in 2018 the end of

01:14:55,760 --> 01:14:59,280
01:14:56,640 --> 01:15:01,120
so i took some time off here uh this is

01:14:59,280 --> 01:15:03,360
me ramping up and this is me starting to

01:15:01,120 --> 01:15:05,840
really start doing some action

01:15:03,360 --> 01:15:07,120
work uh and doing some example work uh

01:15:05,840 --> 01:15:09,440
so that's what that is

01:15:07,120 --> 01:15:10,480
uh but it's a cool little visualization

01:15:09,440 --> 01:15:11,840
built in webgl

01:15:10,480 --> 01:15:14,480
uh but i bring that up because i have a

01:15:11,840 --> 01:15:19,120
repo and

01:15:14,480 --> 01:15:21,280
i've got this um this repo that runs

01:15:19,120 --> 01:15:23,520
uh screenshots it actually i'm in the

01:15:21,280 --> 01:15:26,080
wrong one workflows

01:15:23,520 --> 01:15:27,199
release uh it actually takes screenshots

01:15:26,080 --> 01:15:29,840
of that

01:15:27,199 --> 01:15:30,480
of this site in three different browsers

01:15:29,840 --> 01:15:33,920
so

01:15:30,480 --> 01:15:36,480
um i think it's edge firefox

01:15:33,920 --> 01:15:38,640
and chrome uh and i take screenshots of

01:15:36,480 --> 01:15:40,239
this because i wanted to see if it works

01:15:38,640 --> 01:15:42,159
and this is an example we did for our

01:15:40,239 --> 01:15:42,960
previous events where i have my github

01:15:42,159 --> 01:15:44,159
action running

01:15:42,960 --> 01:15:46,000
and at the end of my slides i actually

01:15:44,159 --> 01:15:47,679
have this running in a video where you

01:15:46,000 --> 01:15:49,840
can actually see this running live

01:15:47,679 --> 01:15:51,760
but for your question how do you run

01:15:49,840 --> 01:15:54,320
this manually

01:15:51,760 --> 01:15:55,920
it's this this event yet you have to

01:15:54,320 --> 01:15:56,560
actually add this event to workflow

01:15:55,920 --> 01:15:58,480
dispatch

01:15:56,560 --> 01:15:59,840
to dispatch events manually and what

01:15:58,480 --> 01:16:02,640
that does

01:15:59,840 --> 01:16:03,120
is if i wanted to run my release testing

01:16:02,640 --> 01:16:05,840
um

01:16:03,120 --> 01:16:07,199
so i test the release this is my script

01:16:05,840 --> 01:16:09,040
microsoft

01:16:07,199 --> 01:16:11,440
playwright action i ran a i have a

01:16:09,040 --> 01:16:15,040
script that basically runs playwright

01:16:11,440 --> 01:16:16,800
um actually here

01:16:15,040 --> 01:16:18,719
that's where my playwright script is and

01:16:16,800 --> 01:16:20,640
takes those images and then if i go in

01:16:18,719 --> 01:16:21,760
my workflow and this is way more

01:16:20,640 --> 01:16:25,199
advanced

01:16:21,760 --> 01:16:26,719
than um than uh

01:16:25,199 --> 01:16:28,400
anything else i'm gonna be showing but

01:16:26,719 --> 01:16:30,239
if once i had workflow dispatch

01:16:28,400 --> 01:16:33,440
it adds this little button to my

01:16:30,239 --> 01:16:35,120
workflow and then i can run this

01:16:33,440 --> 01:16:37,679
on any branch that i have available to

01:16:35,120 --> 01:16:38,960
me so probably should zoom out but

01:16:37,679 --> 01:16:42,000
check out all these failures you can

01:16:38,960 --> 01:16:43,920
tell we've been testing this um

01:16:42,000 --> 01:16:45,280
but yeah this is um this is essentially

01:16:43,920 --> 01:16:47,440
it so if you wanted to add

01:16:45,280 --> 01:16:49,199
manual workflows also shout out to my

01:16:47,440 --> 01:16:51,040
youtube channel and my dev2 post

01:16:49,199 --> 01:16:52,480
i do have a whole dev poo post on how

01:16:51,040 --> 01:16:54,400
that works so

01:16:52,480 --> 01:16:56,480
feel free to run manual manually run

01:16:54,400 --> 01:17:00,840
workflows on github actions

01:16:56,480 --> 01:17:03,199
you'll probably find my content cool

01:17:00,840 --> 01:17:04,719
so let's get out of the hell world let

01:17:03,199 --> 01:17:06,560
me talk through the ci

01:17:04,719 --> 01:17:07,840
now get up actions i just showed you a

01:17:06,560 --> 01:17:10,000
bit of ci stuff

01:17:07,840 --> 01:17:11,679
in that advance and i went really quick

01:17:10,000 --> 01:17:12,480
because i have slides to support that

01:17:11,679 --> 01:17:15,040
stuff

01:17:12,480 --> 01:17:16,000
um if you wanted to we have another

01:17:15,040 --> 01:17:18,320
template called ci

01:17:16,000 --> 01:17:19,199
template and it will encourage you to

01:17:18,320 --> 01:17:22,159
add

01:17:19,199 --> 01:17:24,080
a ci so if you don't do not have any

01:17:22,159 --> 01:17:26,239
actions which we can also change this is

01:17:24,080 --> 01:17:27,840
an old screenshot we change the ui

01:17:26,239 --> 01:17:31,120
if you don't have the actions it will

01:17:27,840 --> 01:17:32,880
then appear with this screen

01:17:31,120 --> 01:17:34,640
and based on the language of that you're

01:17:32,880 --> 01:17:36,159
using it essentially

01:17:34,640 --> 01:17:37,840
lets you set up a workflow just by

01:17:36,159 --> 01:17:39,199
clicking a couple buttons so you'll get

01:17:37,840 --> 01:17:42,080
an option to add either

01:17:39,199 --> 01:17:42,640
node packages nodejs because the library

01:17:42,080 --> 01:17:44,480
that

01:17:42,640 --> 01:17:46,560
that you are cloning from the ci

01:17:44,480 --> 01:17:49,199
template is some javascript

01:17:46,560 --> 01:17:50,960
so it just assumes javascript for you

01:17:49,199 --> 01:17:53,760
but if you had a ruby project you had a

01:17:50,960 --> 01:17:55,280
net project or c sharp it would then

01:17:53,760 --> 01:17:58,480
recommend c-sharp for your

01:17:55,280 --> 01:18:01,760
actions uh and then it will add

01:17:58,480 --> 01:18:03,040
this workflow file to your project

01:18:01,760 --> 01:18:05,600
uh it look a little different because

01:18:03,040 --> 01:18:07,199
note 8 is no longer supported

01:18:05,600 --> 01:18:08,640
uh it's supported with actions but it's

01:18:07,199 --> 01:18:11,760
not supported by the community you want

01:18:08,640 --> 01:18:13,920
to use a later version of node like 14.

01:18:11,760 --> 01:18:15,360
so i should update these screenshots but

01:18:13,920 --> 01:18:17,920
this is the yaml file

01:18:15,360 --> 01:18:19,520
that you get also when you build actions

01:18:17,920 --> 01:18:21,120
you get this like right

01:18:19,520 --> 01:18:23,600
panel over here that gives you

01:18:21,120 --> 01:18:25,280
documentation inline documentation on

01:18:23,600 --> 01:18:25,600
how to leverage actions how to write

01:18:25,280 --> 01:18:28,080
them

01:18:25,600 --> 01:18:29,120
how to set up your yaml so keep in mind

01:18:28,080 --> 01:18:32,480
if you do

01:18:29,120 --> 01:18:34,159
any in browser action editing you will

01:18:32,480 --> 01:18:35,440
get some documentation here too as well

01:18:34,159 --> 01:18:36,880
which is part of the reason why i always

01:18:35,440 --> 01:18:39,199
do editing in

01:18:36,880 --> 01:18:40,000
in browser but as soon as you add that

01:18:39,199 --> 01:18:42,320
you'll get a ci

01:18:40,000 --> 01:18:43,679
to actually run uh runs the test and

01:18:42,320 --> 01:18:44,239
then we go through a couple different

01:18:43,679 --> 01:18:46,719
things

01:18:44,239 --> 01:18:47,760
examples of adding tests and making

01:18:46,719 --> 01:18:51,920
those run

01:18:47,760 --> 01:18:54,159
um we do have a example of

01:18:51,920 --> 01:18:55,679
running a build so based on that build

01:18:54,159 --> 01:18:58,080
we have a parcel

01:18:55,679 --> 01:18:58,880
we run parcel to run the build as well

01:18:58,080 --> 01:19:01,199
and then

01:18:58,880 --> 01:19:01,920
adding linting which is pretty cool

01:19:01,199 --> 01:19:05,760
which

01:19:01,920 --> 01:19:07,440
again please go go and go check out this

01:19:05,760 --> 01:19:09,920
content

01:19:07,440 --> 01:19:11,199
self-paced check it out later uh i

01:19:09,920 --> 01:19:11,920
didn't skip up because i wanted to show

01:19:11,199 --> 01:19:14,719
off this one

01:19:11,920 --> 01:19:15,520
which is linting so a lot of us use

01:19:14,719 --> 01:19:17,840
prettier

01:19:15,520 --> 01:19:19,360
a lot of us use winters if you use go

01:19:17,840 --> 01:19:21,199
it's built in by default

01:19:19,360 --> 01:19:22,800
but it's being able to take your your

01:19:21,199 --> 01:19:24,640
code and lent it to the point where

01:19:22,800 --> 01:19:27,760
everybody on the team has the same

01:19:24,640 --> 01:19:28,400
structure of code now with this github

01:19:27,760 --> 01:19:30,719
action

01:19:28,400 --> 01:19:32,480
the way it works is it takes your

01:19:30,719 --> 01:19:33,920
whatever your linting rules are

01:19:32,480 --> 01:19:36,239
and then manipulates the code at the

01:19:33,920 --> 01:19:37,920
time of pr so someone got through

01:19:36,239 --> 01:19:40,560
the one thing i hate about um like

01:19:37,920 --> 01:19:41,280
things like uh husky or those pre-commit

01:19:40,560 --> 01:19:42,960
hooks

01:19:41,280 --> 01:19:44,719
is that it always blocks you on shipping

01:19:42,960 --> 01:19:47,440
code and i don't want

01:19:44,719 --> 01:19:48,000
mike i don't want my command line to

01:19:47,440 --> 01:19:50,080
tell me

01:19:48,000 --> 01:19:51,760
i can't ship my code to github when i'm

01:19:50,080 --> 01:19:53,440
ready to end my day

01:19:51,760 --> 01:19:55,360
because i have linting that's like the

01:19:53,440 --> 01:19:56,560
worst experience like linting because a

01:19:55,360 --> 01:19:58,640
pre-commit hook

01:19:56,560 --> 01:20:00,000
tells you to lint uh when you're just

01:19:58,640 --> 01:20:02,400
trying to go have dinner or

01:20:00,000 --> 01:20:04,480
go take a break um so node code

01:20:02,400 --> 01:20:07,840
formatter basically does that for you

01:20:04,480 --> 01:20:09,360
at the time of pr so open up a pr

01:20:07,840 --> 01:20:12,080
one thing i loved about what i learned

01:20:09,360 --> 01:20:15,600
about github like seven eight years ago

01:20:12,080 --> 01:20:17,679
is that get up as engineers we pr early

01:20:15,600 --> 01:20:19,840
so you put the pr up you share it with

01:20:17,679 --> 01:20:21,600
the team and you just keep working on it

01:20:19,840 --> 01:20:23,280
and a lot of people wait to the pr until

01:20:21,600 --> 01:20:23,600
you're done it's better to get your

01:20:23,280 --> 01:20:25,440
stuff

01:20:23,600 --> 01:20:27,440
out there and ready for review early

01:20:25,440 --> 01:20:28,639
because again automation

01:20:27,440 --> 01:20:29,840
always having people looking at your

01:20:28,639 --> 01:20:31,120
stuff while you're working on it because

01:20:29,840 --> 01:20:32,719
it could be somebody who's working on

01:20:31,120 --> 01:20:35,040
the same thing who could write feedback

01:20:32,719 --> 01:20:36,719
anyway what i'm getting at is open up pr

01:20:35,040 --> 01:20:38,719
add the node formatter it actually

01:20:36,719 --> 01:20:39,600
manipulates your code and adds a commit

01:20:38,719 --> 01:20:41,920
directly to

01:20:39,600 --> 01:20:43,360
your pr now i realize it's not okay for

01:20:41,920 --> 01:20:44,719
every team

01:20:43,360 --> 01:20:46,400
you could build it the way you want you

01:20:44,719 --> 01:20:49,360
can fork it create your own

01:20:46,400 --> 01:20:50,480
but i love this because as a commit to

01:20:49,360 --> 01:20:52,800
my pr

01:20:50,480 --> 01:20:53,600
my code is now formatted so i don't have

01:20:52,800 --> 01:20:55,520
to wait

01:20:53,600 --> 01:20:56,800
to lint everything locally it could just

01:20:55,520 --> 01:20:58,719
be linted

01:20:56,800 --> 01:20:59,920
whenever i push up to production because

01:20:58,719 --> 01:21:01,280
you know everybody's different on the

01:20:59,920 --> 01:21:02,960
team maybe you're new on the team

01:21:01,280 --> 01:21:04,639
you don't know single quotes or you're

01:21:02,960 --> 01:21:08,239
still stuck in double quotes

01:21:04,639 --> 01:21:10,880
land whatever it is um and then

01:21:08,239 --> 01:21:11,760
this actually covers the slides but i do

01:21:10,880 --> 01:21:13,440
recommend

01:21:11,760 --> 01:21:15,280
check that out i do have a couple of

01:21:13,440 --> 01:21:16,560
other options for github actions that i

01:21:15,280 --> 01:21:19,280
recommend here

01:21:16,560 --> 01:21:20,560
in the intermission which sometimes we

01:21:19,280 --> 01:21:22,639
go fast enough that

01:21:20,560 --> 01:21:24,159
actually in person we tend to go a

01:21:22,639 --> 01:21:25,600
little faster

01:21:24,159 --> 01:21:27,440
because i could see people in eyeballs

01:21:25,600 --> 01:21:28,639
and stuff like that and where people at

01:21:27,440 --> 01:21:31,040
but this would have been our normal

01:21:28,639 --> 01:21:33,520
intermission and i would walk through

01:21:31,040 --> 01:21:35,360
a bunch of these examples um and then

01:21:33,520 --> 01:21:40,400
the other one this is work in progress

01:21:35,360 --> 01:21:40,400
which is a continuous delivery as well

01:21:40,840 --> 01:21:43,840
excellent

01:21:44,560 --> 01:21:48,560
so i don't know um i think we still have

01:21:47,040 --> 01:21:51,520
about 20 minutes

01:21:48,560 --> 01:21:52,719
um i did want to share the final bit of

01:21:51,520 --> 01:21:53,520
slides and walk through the rest of the

01:21:52,719 --> 01:21:55,520
example so

01:21:53,520 --> 01:21:56,880
i hope everybody who wanted the slides i

01:21:55,520 --> 01:21:58,239
put them up on twitter

01:21:56,880 --> 01:22:00,719
uh everybody who wants to go through the

01:21:58,239 --> 01:22:01,840
self pace you're more than welcome to

01:22:00,719 --> 01:22:03,600
but i want to walk through a couple

01:22:01,840 --> 01:22:05,040
other use cases for github actions if

01:22:03,600 --> 01:22:08,719
you don't mind

01:22:05,040 --> 01:22:11,360
so we just briefly looked at ci cd

01:22:08,719 --> 01:22:12,960
actually for say yes or no folks if you

01:22:11,360 --> 01:22:16,159
are familiar with uh

01:22:12,960 --> 01:22:20,000
ci continuous integration it is new

01:22:16,159 --> 01:22:22,159
uh this is this is a gif i love using

01:22:20,000 --> 01:22:22,960
because this is it kind of explains ci

01:22:22,159 --> 01:22:26,400
cd

01:22:22,960 --> 01:22:29,520
um this obviously premier athlete has

01:22:26,400 --> 01:22:30,159
figured out how to get logs into his

01:22:29,520 --> 01:22:32,320
basement

01:22:30,159 --> 01:22:33,600
uh using a treadmill like this is the

01:22:32,320 --> 01:22:35,840
part of automation that i love

01:22:33,600 --> 01:22:37,199
like figuring out how to solve a problem

01:22:35,840 --> 01:22:38,159
in a way you didn't even think you could

01:22:37,199 --> 01:22:39,520
even do

01:22:38,159 --> 01:22:41,679
like the thing i was doing with taking

01:22:39,520 --> 01:22:42,480
screenshots at different browsers using

01:22:41,679 --> 01:22:45,199
playwright

01:22:42,480 --> 01:22:46,159
is something that's built into the um

01:22:45,199 --> 01:22:47,360
built in the playwright but it's

01:22:46,159 --> 01:22:48,800
something i've never used

01:22:47,360 --> 01:22:51,280
and what's cool about that is my my

01:22:48,800 --> 01:22:52,880
action is is usable by anybody else who

01:22:51,280 --> 01:22:54,480
wants to look at my repo

01:22:52,880 --> 01:22:57,199
and copy and paste that code for

01:22:54,480 --> 01:22:59,520
somebody else too as well

01:22:57,199 --> 01:23:01,120
this looks like a continuous integration

01:22:59,520 --> 01:23:02,960
pipeline

01:23:01,120 --> 01:23:04,639
i bring this up because most people are

01:23:02,960 --> 01:23:06,400
familiar with github for source control

01:23:04,639 --> 01:23:08,320
but imagine github for building and

01:23:06,400 --> 01:23:09,840
running your test for deploying your

01:23:08,320 --> 01:23:10,880
staging environment which i'll show at

01:23:09,840 --> 01:23:13,360
the end

01:23:10,880 --> 01:23:14,639
and then deploying to production um this

01:23:13,360 --> 01:23:17,520
is what we're going to cover

01:23:14,639 --> 01:23:19,199
and there's a linting is something i

01:23:17,520 --> 01:23:21,040
covered briefly but

01:23:19,199 --> 01:23:22,639
linting should be something that should

01:23:21,040 --> 01:23:23,280
just be automated like it's not a

01:23:22,639 --> 01:23:25,840
discussion

01:23:23,280 --> 01:23:27,679
it's not a reason to have 10 engineers

01:23:25,840 --> 01:23:28,320
in a room discussing on how to link your

01:23:27,679 --> 01:23:29,760
project

01:23:28,320 --> 01:23:31,520
it's a decision that should be made up

01:23:29,760 --> 01:23:32,960
front and everybody just sort of adheres

01:23:31,520 --> 01:23:34,239
to because you don't have to think about

01:23:32,960 --> 01:23:36,880
it

01:23:34,239 --> 01:23:37,520
speaking of which github.com we recently

01:23:36,880 --> 01:23:40,560
took a

01:23:37,520 --> 01:23:41,840
a stance on jquery and actually removing

01:23:40,560 --> 01:23:43,360
it a couple years ago

01:23:41,840 --> 01:23:45,120
and the way we did that is through

01:23:43,360 --> 01:23:46,719
automation so we took

01:23:45,120 --> 01:23:48,800
any every time you committed jquery

01:23:46,719 --> 01:23:51,520
which jquery is a javascript

01:23:48,800 --> 01:23:52,639
library to do animations and fun stuff

01:23:51,520 --> 01:23:54,960
in the browser

01:23:52,639 --> 01:23:56,480
uh it's built on top of the dom

01:23:54,960 --> 01:23:58,480
javascript's advanced

01:23:56,480 --> 01:23:59,600
f far enough that a lot of the features

01:23:58,480 --> 01:24:00,880
you got in jquery you could do in

01:23:59,600 --> 01:24:02,960
regular javascript

01:24:00,880 --> 01:24:03,920
so the engineering team took a decision

01:24:02,960 --> 01:24:06,239
to say hey

01:24:03,920 --> 01:24:08,480
no more javascript uh sorry no more

01:24:06,239 --> 01:24:09,760
jquery and the github code base

01:24:08,480 --> 01:24:11,760
and the way they did this is every time

01:24:09,760 --> 01:24:13,840
you open a pr that had jquery in it

01:24:11,760 --> 01:24:16,080
it would return as a comment a code

01:24:13,840 --> 01:24:17,760
comment the javascript instead

01:24:16,080 --> 01:24:19,679
it'll actually be in line so the cool

01:24:17,760 --> 01:24:20,400
thing about github is you could do audit

01:24:19,679 --> 01:24:23,520
you can

01:24:20,400 --> 01:24:25,679
annotate your prs uh with comments

01:24:23,520 --> 01:24:27,040
and then you can also accept that code

01:24:25,679 --> 01:24:28,080
uh through comments as well so you don't

01:24:27,040 --> 01:24:28,800
have to clone it locally or anything

01:24:28,080 --> 01:24:31,679
like that

01:24:28,800 --> 01:24:33,199
so if your if your excuse was i don't

01:24:31,679 --> 01:24:34,639
want to write javascript because i

01:24:33,199 --> 01:24:36,639
i'm used to jquery i'm trying to get

01:24:34,639 --> 01:24:38,239
this out the door you don't have an

01:24:36,639 --> 01:24:39,600
excuse anymore because we give you the

01:24:38,239 --> 01:24:42,080
javascript up front

01:24:39,600 --> 01:24:43,679
in your pr uh it was a wonderful

01:24:42,080 --> 01:24:45,520
decision that was made it was a really

01:24:43,679 --> 01:24:47,520
cool experiment that was also made

01:24:45,520 --> 01:24:48,639
so if you're interested check out that

01:24:47,520 --> 01:24:50,320
blog post that's right there it's

01:24:48,639 --> 01:24:52,719
actually on the engineering blog

01:24:50,320 --> 01:24:53,840
um i did mention marketplace as a place

01:24:52,719 --> 01:24:56,719
to find

01:24:53,840 --> 01:24:59,520
built solutions so github marketplace

01:24:56,719 --> 01:25:03,840
700 7 000 github actions out there

01:24:59,520 --> 01:25:07,120
um automation as a sense of

01:25:03,840 --> 01:25:10,080
this guy uh gregor he maintains octokit

01:25:07,120 --> 01:25:12,320
uh he automates up to 25 plus repos he's

01:25:10,080 --> 01:25:13,679
a solo maintainer on all those repos

01:25:12,320 --> 01:25:15,600
and the way he does it is he actually

01:25:13,679 --> 01:25:18,960
leverages his github projects

01:25:15,600 --> 01:25:20,880
as an inbox and he automates the inbox

01:25:18,960 --> 01:25:22,000
to the point where he mer whenever

01:25:20,880 --> 01:25:24,880
something gets merged

01:25:22,000 --> 01:25:25,679
it gets moved into the done column but

01:25:24,880 --> 01:25:27,120
also

01:25:25,679 --> 01:25:29,360
when everything something gets labeled

01:25:27,120 --> 01:25:31,679
it gets moved into a labeled

01:25:29,360 --> 01:25:33,600
column for all those actions sorry all

01:25:31,679 --> 01:25:35,120
those uh issues

01:25:33,600 --> 01:25:36,719
so what he does that uses semantic

01:25:35,120 --> 01:25:37,840
versioning he actually built a github

01:25:36,719 --> 01:25:40,800
application

01:25:37,840 --> 01:25:41,840
to integrate semantic versioning into

01:25:40,800 --> 01:25:44,159
his pr

01:25:41,840 --> 01:25:45,040
so if you add the feet or the feature

01:25:44,159 --> 01:25:48,080
flag

01:25:45,040 --> 01:25:49,040
on his pr title and then adds a comment

01:25:48,080 --> 01:25:51,760
and then merges that

01:25:49,040 --> 01:25:52,400
into uh the main branch ready for

01:25:51,760 --> 01:25:54,719
release

01:25:52,400 --> 01:25:55,520
he also cuts releases ways as well i did

01:25:54,719 --> 01:25:58,000
a whole

01:25:55,520 --> 01:25:59,199
talk with him on twitch.tv github it's

01:25:58,000 --> 01:26:01,120
also on youtube.com

01:25:59,199 --> 01:26:02,320
github um it's in a playlist called open

01:26:01,120 --> 01:26:04,080
source for friday

01:26:02,320 --> 01:26:05,440
uh me and him talk about his entire

01:26:04,080 --> 01:26:07,920
experience so i do highly

01:26:05,440 --> 01:26:09,199
recommend you check it out but here you

01:26:07,920 --> 01:26:11,120
can see the features you can see the

01:26:09,199 --> 01:26:13,440
done column and that's sort of the

01:26:11,120 --> 01:26:14,239
the process so now this is the point

01:26:13,440 --> 01:26:16,239
where

01:26:14,239 --> 01:26:18,960
this would have been the rest of the ci

01:26:16,239 --> 01:26:18,960
uh markdown

01:26:19,360 --> 01:26:23,440
part three but this is gonna be broken

01:26:20,719 --> 01:26:26,080
into a continuous delivery pipeline

01:26:23,440 --> 01:26:28,239
so things like what gregor was doing

01:26:26,080 --> 01:26:30,639
creating release notes

01:26:28,239 --> 01:26:31,280
what i my issue is like i don't really

01:26:30,639 --> 01:26:33,120
remember

01:26:31,280 --> 01:26:34,719
every time i make a change or make a

01:26:33,120 --> 01:26:36,400
commit and when you have to go back and

01:26:34,719 --> 01:26:37,840
create release notes after the fact it

01:26:36,400 --> 01:26:39,440
could be quite painful

01:26:37,840 --> 01:26:41,920
so there's a given action called release

01:26:39,440 --> 01:26:44,480
drafter that every time you push

01:26:41,920 --> 01:26:45,760
to the main branch you merge in a pr it

01:26:44,480 --> 01:26:48,159
adds a commit

01:26:45,760 --> 01:26:50,320
to the release drafts and then when

01:26:48,159 --> 01:26:53,040
you're ready to cut a release you can

01:26:50,320 --> 01:26:54,560
um so this is that skyline project i

01:26:53,040 --> 01:26:57,120
just showed you

01:26:54,560 --> 01:26:59,280
this is uh if you didn't know this is

01:26:57,120 --> 01:27:00,639
where you can find releases

01:26:59,280 --> 01:27:02,880
and then you can see i have a draft

01:27:00,639 --> 01:27:06,560
release right here so i made a commit

01:27:02,880 --> 01:27:08,080
actually niha made a commit

01:27:06,560 --> 01:27:10,000
and then uh you can see that we have a

01:27:08,080 --> 01:27:12,159
drafted release and the way this works

01:27:10,000 --> 01:27:14,159
is that you have a standard yaml file

01:27:12,159 --> 01:27:15,440
that actually sets up every time a

01:27:14,159 --> 01:27:17,840
commit is made it

01:27:15,440 --> 01:27:19,360
adheres it to the yaml file and then

01:27:17,840 --> 01:27:22,320
what we're doing is we're using

01:27:19,360 --> 01:27:23,280
labels to filter them so if it's a

01:27:22,320 --> 01:27:25,199
maintenance

01:27:23,280 --> 01:27:27,440
change if it's a feature change if it's

01:27:25,199 --> 01:27:29,440
a bug fix it gets segmented into those

01:27:27,440 --> 01:27:32,480
different sections with these

01:27:29,440 --> 01:27:34,480
emojis the other thing is

01:27:32,480 --> 01:27:35,679
um this is also a marketplace so

01:27:34,480 --> 01:27:37,840
definitely leverage it

01:27:35,679 --> 01:27:39,520
uh and this is what an actual final

01:27:37,840 --> 01:27:40,800
solution looks like so this is my open

01:27:39,520 --> 01:27:43,199
soft stop project

01:27:40,800 --> 01:27:45,199
uh and this is all my dependable pr's

01:27:43,199 --> 01:27:46,400
all organized directly into the uh the

01:27:45,199 --> 01:27:48,320
maintenance section

01:27:46,400 --> 01:27:49,920
because that's that's exactly what it is

01:27:48,320 --> 01:27:51,440
but then i can also look up top

01:27:49,920 --> 01:27:53,120
and see exactly what features got

01:27:51,440 --> 01:27:54,880
shipped so a lot of times i try to do

01:27:53,120 --> 01:27:57,920
releases with just dependable

01:27:54,880 --> 01:27:59,360
pr's now i don't have to actually focus

01:27:57,920 --> 01:28:02,560
on that so much because they're all

01:27:59,360 --> 01:28:04,560
segmented and separated as well

01:28:02,560 --> 01:28:06,159
now this is something i couldn't get

01:28:04,560 --> 01:28:07,679
into because i didn't i knew i wasn't

01:28:06,159 --> 01:28:09,280
having the time so i have a bunch of

01:28:07,679 --> 01:28:11,760
videos around this

01:28:09,280 --> 01:28:13,040
um or they're actually gifts if you

01:28:11,760 --> 01:28:14,719
really wanted to know but

01:28:13,040 --> 01:28:16,880
cloud deployments environment management

01:28:14,719 --> 01:28:18,800
management um

01:28:16,880 --> 01:28:19,920
this is the ability to if you go into

01:28:18,800 --> 01:28:21,440
settings

01:28:19,920 --> 01:28:23,199
uh you scroll down to the environment

01:28:21,440 --> 01:28:25,440
section this is a section that's been

01:28:23,199 --> 01:28:27,040
around for a couple years now but

01:28:25,440 --> 01:28:29,120
we haven't really had a use case to use

01:28:27,040 --> 01:28:30,400
it until github actions

01:28:29,120 --> 01:28:32,159
and it gives you the ability to create

01:28:30,400 --> 01:28:33,280
separate environments for staging and

01:28:32,159 --> 01:28:34,960
production

01:28:33,280 --> 01:28:36,639
and then power that through github

01:28:34,960 --> 01:28:38,480
actions as well you can also have

01:28:36,639 --> 01:28:40,239
secrets specifically for the environment

01:28:38,480 --> 01:28:41,840
so if you have a database url

01:28:40,239 --> 01:28:43,600
that needs to be on staging you can also

01:28:41,840 --> 01:28:45,360
include that in your action

01:28:43,600 --> 01:28:47,520
uh you could also wait you could also

01:28:45,360 --> 01:28:49,760
have approvers too as well so

01:28:47,520 --> 01:28:50,960
at the very end of that that real quick

01:28:49,760 --> 01:28:54,159
um

01:28:50,960 --> 01:28:56,800
it was adding an approver to approve

01:28:54,159 --> 01:28:57,520
the uh i don't know where my mouse went

01:28:56,800 --> 01:28:58,880
but

01:28:57,520 --> 01:29:01,040
i was going to highlight it but

01:28:58,880 --> 01:29:04,560
basically we're adding octokit

01:29:01,040 --> 01:29:07,120
academy dev team to approve the pr

01:29:04,560 --> 01:29:07,840
uh and then also approve the deployment

01:29:07,120 --> 01:29:09,760
to production

01:29:07,840 --> 01:29:12,159
as well and this is what it looks like

01:29:09,760 --> 01:29:13,679
so this is my workflow visualizer which

01:29:12,159 --> 01:29:14,239
i wasn't able to sort of give you an

01:29:13,679 --> 01:29:16,080
example

01:29:14,239 --> 01:29:17,280
in our workshop portion of this

01:29:16,080 --> 01:29:21,280
conversation

01:29:17,280 --> 01:29:24,159
but i'm able to have segmented jobs

01:29:21,280 --> 01:29:26,080
or workflows actually this is all one

01:29:24,159 --> 01:29:27,600
workflow but these are segmented jobs so

01:29:26,080 --> 01:29:29,760
i got my deploy staging

01:29:27,600 --> 01:29:31,440
job got my smoke test staging which is

01:29:29,760 --> 01:29:33,440
my screenshot sharing

01:29:31,440 --> 01:29:34,719
uh as well and they're all dependent on

01:29:33,440 --> 01:29:39,440
each other which is why this sort of

01:29:34,719 --> 01:29:40,480
architectured into one line

01:29:39,440 --> 01:29:42,560
uh and the other thing i wanted to point

01:29:40,480 --> 01:29:44,080
out is that we can also attach our url

01:29:42,560 --> 01:29:46,960
at the time and it's all in your action

01:29:44,080 --> 01:29:46,960
workflow as well

01:29:47,520 --> 01:29:51,360
so i mentioned my test case of just

01:29:49,440 --> 01:29:53,920
basically looking at

01:29:51,360 --> 01:29:54,880
the um so i'm looking at yes katie's um

01:29:53,920 --> 01:29:58,239
my

01:29:54,880 --> 01:30:00,080
co-workers uh their contribution graph

01:29:58,239 --> 01:30:01,679
and being able to see okay this graph

01:30:00,080 --> 01:30:02,639
works it's working in this environment

01:30:01,679 --> 01:30:04,960
on staging

01:30:02,639 --> 01:30:06,320
now i can go through and say i'm going

01:30:04,960 --> 01:30:08,719
to go ahead and improve this

01:30:06,320 --> 01:30:09,600
so i can hit review i can approve the

01:30:08,719 --> 01:30:10,960
deployment

01:30:09,600 --> 01:30:12,639
and this is all built on on top of

01:30:10,960 --> 01:30:15,679
github actions now this is

01:30:12,639 --> 01:30:17,280
the ui itself is built into github but

01:30:15,679 --> 01:30:18,639
it's powered through github action

01:30:17,280 --> 01:30:21,840
workflows and that's how you can turn

01:30:18,639 --> 01:30:21,840
off and enable this stuff

01:30:22,320 --> 01:30:26,480
and this is an example of the action

01:30:23,840 --> 01:30:28,880
workflow as well

01:30:26,480 --> 01:30:29,920
this there's a watered-down version in

01:30:28,880 --> 01:30:31,440
the repo

01:30:29,920 --> 01:30:33,760
of this so it doesn't include all the

01:30:31,440 --> 01:30:35,280
azure credentials or anything like that

01:30:33,760 --> 01:30:37,360
but you can see how complicated you can

01:30:35,280 --> 01:30:38,960
get where on the line six you can see

01:30:37,360 --> 01:30:40,880
i'm setting a staging environment

01:30:38,960 --> 01:30:42,560
i'm actually taking the url from a

01:30:40,880 --> 01:30:45,120
previous job

01:30:42,560 --> 01:30:47,600
uh and i'm actually the to the job uh

01:30:45,120 --> 01:30:49,360
steps from popular repos

01:30:47,600 --> 01:30:51,120
and the output of that the web app url

01:30:49,360 --> 01:30:52,719
i'm able to take that and apply that to

01:30:51,120 --> 01:30:53,920
url so i'm able to do all that

01:30:52,719 --> 01:30:56,560
dynamically

01:30:53,920 --> 01:30:58,000
as well uh feel free to slow me down if

01:30:56,560 --> 01:31:01,120
you have any questions

01:30:58,000 --> 01:31:02,080
i'm happy to expand expound but i'm

01:31:01,120 --> 01:31:03,600
sure i'm just trying to wet your

01:31:02,080 --> 01:31:05,360
appetite on github actions and what you

01:31:03,600 --> 01:31:07,440
could sort of possibly do with them

01:31:05,360 --> 01:31:08,800
uh compressing images for the web this

01:31:07,440 --> 01:31:11,679
is something that it's

01:31:08,800 --> 01:31:12,719
i have this project b doggy live it's my

01:31:11,679 --> 01:31:13,840
main site it's where i

01:31:12,719 --> 01:31:16,480
kind of put everything up there it's

01:31:13,840 --> 01:31:17,840
like my digital garden and i do a lot of

01:31:16,480 --> 01:31:19,760
live streaming but i have a lot of

01:31:17,840 --> 01:31:21,679
projects on there that i have examples

01:31:19,760 --> 01:31:23,040
of screenshots that are not optimized

01:31:21,679 --> 01:31:25,280
for the web uh

01:31:23,040 --> 01:31:27,520
and i found that this was a performance

01:31:25,280 --> 01:31:29,679
hit because some things could be like

01:31:27,520 --> 01:31:30,639
half a gig image and some things could

01:31:29,679 --> 01:31:32,800
just be you know

01:31:30,639 --> 01:31:34,480
a couple gigabytes and i wanted to aim

01:31:32,800 --> 01:31:37,840
closer towards the gigabytes

01:31:34,480 --> 01:31:40,400
so i showed briefly but here you can see

01:31:37,840 --> 01:31:41,360
in the middle of this the caliber app uh

01:31:40,400 --> 01:31:43,120
image actions

01:31:41,360 --> 01:31:44,880
which is uh here in the github

01:31:43,120 --> 01:31:47,280
marketplace i don't wanna

01:31:44,880 --> 01:31:48,560
know why this is uh so blurry but uh to

01:31:47,280 --> 01:31:51,040
get a marketplace

01:31:48,560 --> 01:31:52,639
um it's like the first thing that comes

01:31:51,040 --> 01:31:55,040
up when you search for images

01:31:52,639 --> 01:31:56,719
uh and actions uh it's great naming on

01:31:55,040 --> 01:31:58,159
their part and i've added this

01:31:56,719 --> 01:32:00,320
so that every time a pull request is

01:31:58,159 --> 01:32:01,840
open on my project i'm going to compress

01:32:00,320 --> 01:32:02,480
those images to something that's more

01:32:01,840 --> 01:32:05,520
usable

01:32:02,480 --> 01:32:08,080
for the web browser environment and you

01:32:05,520 --> 01:32:11,199
can see i'm checking for any jpegs

01:32:08,080 --> 01:32:13,199
any pngs and as well as web ps

01:32:11,199 --> 01:32:14,480
and i'm gonna leverage their tooling in

01:32:13,199 --> 01:32:16,800
their repos

01:32:14,480 --> 01:32:17,520
to uh to make that work for my my use

01:32:16,800 --> 01:32:19,120
case

01:32:17,520 --> 01:32:20,560
so here you can see i've actually

01:32:19,120 --> 01:32:21,520
compressed these images to the point

01:32:20,560 --> 01:32:24,560
where

01:32:21,520 --> 01:32:27,280
uh i'm getting like 60 reduction of

01:32:24,560 --> 01:32:29,199
images uh and this is all built on this

01:32:27,280 --> 01:32:32,080
copy and pasting

01:32:29,199 --> 01:32:33,360
the example uh in their their readme for

01:32:32,080 --> 01:32:34,800
github actions so

01:32:33,360 --> 01:32:36,639
highly encourage you if you do have

01:32:34,800 --> 01:32:38,159
images and you want to get your feet wet

01:32:36,639 --> 01:32:39,760
on github actions maybe check out this

01:32:38,159 --> 01:32:40,800
action

01:32:39,760 --> 01:32:42,239
the other thing i wanted to point out to

01:32:40,800 --> 01:32:43,199
you as well is the ability to upload

01:32:42,239 --> 01:32:44,880
artifacts

01:32:43,199 --> 01:32:46,239
towards the bottom you could i mentioned

01:32:44,880 --> 01:32:47,040
a couple times about me taking

01:32:46,239 --> 01:32:49,360
screenshots

01:32:47,040 --> 01:32:50,080
of the different browsers in their

01:32:49,360 --> 01:32:52,480
images

01:32:50,080 --> 01:32:54,080
uh on the bottom you can see i do have a

01:32:52,480 --> 01:32:55,760
artifact that i've uploaded to my

01:32:54,080 --> 01:32:56,560
workflow so every time that workflow

01:32:55,760 --> 01:32:59,040
runs

01:32:56,560 --> 01:32:59,679
the images get uploaded and anybody can

01:32:59,040 --> 01:33:01,679
go in

01:32:59,679 --> 01:33:03,760
tomorrow morning the next day they can

01:33:01,679 --> 01:33:05,920
go into the the action workflow

01:33:03,760 --> 01:33:07,520
and look at the tests and see if they're

01:33:05,920 --> 01:33:08,400
ready to review it they can see what it

01:33:07,520 --> 01:33:10,320
looks like

01:33:08,400 --> 01:33:12,960
it's just attaching it directly to the

01:33:10,320 --> 01:33:15,280
pr in the action

01:33:12,960 --> 01:33:18,320
sorry i actually highlighted it right

01:33:15,280 --> 01:33:19,520
here but there we go here's a red box

01:33:18,320 --> 01:33:21,600
and the way i'm doing that is i'm

01:33:19,520 --> 01:33:24,800
leveraging another github action as well

01:33:21,600 --> 01:33:27,520
which is uh upload artifact uh

01:33:24,800 --> 01:33:29,280
version two at the bottom uh that's

01:33:27,520 --> 01:33:30,320
exactly where my playwright is running i

01:33:29,280 --> 01:33:33,040
showed that briefly

01:33:30,320 --> 01:33:34,480
in the other repo but this is this is

01:33:33,040 --> 01:33:36,480
stuff you could do in actions

01:33:34,480 --> 01:33:38,560
these are things that i thought of to

01:33:36,480 --> 01:33:40,719
improve the situation for this

01:33:38,560 --> 01:33:41,679
project um but there's a lot of

01:33:40,719 --> 01:33:44,719
opportunity for you

01:33:41,679 --> 01:33:46,239
to you know embed actions into your

01:33:44,719 --> 01:33:47,600
workflow so

01:33:46,239 --> 01:33:50,159
instead of rounding out the bases real

01:33:47,600 --> 01:33:51,760
quick uh you

01:33:50,159 --> 01:33:53,040
might not have been wondering but you

01:33:51,760 --> 01:33:54,080
could you have the ability to do

01:33:53,040 --> 01:33:55,760
self-hosted

01:33:54,080 --> 01:33:57,679
action runners so if you wanted to host

01:33:55,760 --> 01:33:59,280
your stuff on digitalocean

01:33:57,679 --> 01:34:00,639
in the settings you could actually

01:33:59,280 --> 01:34:01,440
choose the environment you're looking to

01:34:00,639 --> 01:34:02,800
host on

01:34:01,440 --> 01:34:05,040
or sorry the environment that you're

01:34:02,800 --> 01:34:07,280
looking to run into your own host

01:34:05,040 --> 01:34:09,520
so whether it's locally in the box in

01:34:07,280 --> 01:34:12,880
your bathroom or your kitchen closet

01:34:09,520 --> 01:34:16,159
or digital ocean azure aws whatever your

01:34:12,880 --> 01:34:19,440
flavor cloud it is and you can run that

01:34:16,159 --> 01:34:22,159
yourself using those commands this is me

01:34:19,440 --> 01:34:24,960
running those commands uh it's getting

01:34:22,159 --> 01:34:24,960
it running locally

01:34:28,320 --> 01:34:31,679
wait for it there it is github actions

01:34:30,800 --> 01:34:33,840
running

01:34:31,679 --> 01:34:35,760
uh and then the other thing is you could

01:34:33,840 --> 01:34:38,080
also take that same concept of getting

01:34:35,760 --> 01:34:39,600
local runners and run that on kubernetes

01:34:38,080 --> 01:34:40,639
too as well so this is a kubernetes

01:34:39,600 --> 01:34:42,560
cluster

01:34:40,639 --> 01:34:44,320
all the green boxes are actively running

01:34:42,560 --> 01:34:46,400
actions on pr's

01:34:44,320 --> 01:34:47,520
and this is my co-worker jonico who i

01:34:46,400 --> 01:34:49,760
just showed the repo

01:34:47,520 --> 01:34:51,520
in a previous slide which you can grab

01:34:49,760 --> 01:34:53,920
from the slides after the fact

01:34:51,520 --> 01:34:55,119
um and he's running this and he's be

01:34:53,920 --> 01:34:58,080
able to decommission

01:34:55,119 --> 01:34:59,040
and commission different actions as well

01:34:58,080 --> 01:35:00,719
um

01:34:59,040 --> 01:35:02,080
awesome runners that's that's his repo

01:35:00,719 --> 01:35:04,239
where you could find different flavors

01:35:02,080 --> 01:35:06,159
of self-hosted runner situations

01:35:04,239 --> 01:35:07,280
um probably pretty easy to google

01:35:06,159 --> 01:35:08,639
awesome runners

01:35:07,280 --> 01:35:10,480
or go to github and look at oscar

01:35:08,639 --> 01:35:12,639
runners as well uh

01:35:10,480 --> 01:35:13,679
and then i i already mentioned this but

01:35:12,639 --> 01:35:16,239
get a script

01:35:13,679 --> 01:35:18,080
and get a hackathon and how that runs

01:35:16,239 --> 01:35:20,080
using the script and how to merge

01:35:18,080 --> 01:35:22,159
i actually earlier i did explain this

01:35:20,080 --> 01:35:24,719
verbally without showing the slides

01:35:22,159 --> 01:35:26,080
and walk through that so finally i

01:35:24,719 --> 01:35:28,320
started with this whole conversation

01:35:26,080 --> 01:35:30,000
with automatic store book

01:35:28,320 --> 01:35:31,760
this is how i did it this is the

01:35:30,000 --> 01:35:33,920
workflow that i'm doing it with

01:35:31,760 --> 01:35:34,880
i have conditionals conditionals that

01:35:33,920 --> 01:35:36,960
are checking for

01:35:34,880 --> 01:35:38,639
my components if they changed and if

01:35:36,960 --> 01:35:39,840
they have change only in those folders

01:35:38,639 --> 01:35:40,800
then it's deploying a whole new

01:35:39,840 --> 01:35:42,159
storybook

01:35:40,800 --> 01:35:43,920
using all the commands i would use

01:35:42,159 --> 01:35:46,000
locally so

01:35:43,920 --> 01:35:47,280
reminder you could run commands npm

01:35:46,000 --> 01:35:48,960
commands uh

01:35:47,280 --> 01:35:51,199
any sort of installed environment

01:35:48,960 --> 01:35:54,639
commands uh plugins

01:35:51,199 --> 01:35:54,639
inside your action runners as well

01:35:55,040 --> 01:35:58,480
and then the other thing i mentioned to

01:35:56,159 --> 01:36:01,199
up top is the lighthouse action

01:35:58,480 --> 01:36:02,960
every time i'm at a pr i get a score the

01:36:01,199 --> 01:36:04,000
score is actually embedded inside my

01:36:02,960 --> 01:36:06,080
action logs

01:36:04,000 --> 01:36:07,119
so just like uploading it also uploads

01:36:06,080 --> 01:36:08,400
to artifact which i don't have a

01:36:07,119 --> 01:36:11,520
screenshot of

01:36:08,400 --> 01:36:14,800
but um every time i upload

01:36:11,520 --> 01:36:15,600
those are use those logs anybody can go

01:36:14,800 --> 01:36:18,159
and check to see

01:36:15,600 --> 01:36:20,480
hey how did brian do on this pr hey by

01:36:18,159 --> 01:36:24,400
the way progressive web apps is 56

01:36:20,480 --> 01:36:28,159
could you fix that

01:36:24,400 --> 01:36:29,920
so that is pretty much it um of examples

01:36:28,159 --> 01:36:32,239
this is my example of my workflow

01:36:29,920 --> 01:36:35,360
visualizer which again i explained

01:36:32,239 --> 01:36:36,960
earlier hopefully i'm only mentioning a

01:36:35,360 --> 01:36:39,280
couple concepts in case anybody has

01:36:36,960 --> 01:36:41,119
questions or anything like that

01:36:39,280 --> 01:36:42,480
there is a video of continuous delivery

01:36:41,119 --> 01:36:43,119
and github action so if you are

01:36:42,480 --> 01:36:46,239
interested

01:36:43,119 --> 01:36:47,760
in seeing this in action in a different

01:36:46,239 --> 01:36:49,520
way at a different light

01:36:47,760 --> 01:36:51,600
it's on youtube the search for

01:36:49,520 --> 01:36:54,480
continuous delivery wicked of actions

01:36:51,600 --> 01:36:57,440
you'll find it reminder my github

01:36:54,480 --> 01:36:59,600
profile is powered by github actions so

01:36:57,440 --> 01:37:00,560
go to that repo look at the actions

01:36:59,600 --> 01:37:03,199
workflow tab

01:37:00,560 --> 01:37:04,719
or the action workflow folder and you'll

01:37:03,199 --> 01:37:05,119
you'll see exactly how that's built with

01:37:04,719 --> 01:37:06,639
some

01:37:05,119 --> 01:37:09,440
a little bit of ruby and a lot of

01:37:06,639 --> 01:37:12,400
actions um

01:37:09,440 --> 01:37:14,080
also a reminder i have a bunch of videos

01:37:12,400 --> 01:37:15,679
for tips and tricks on github actions

01:37:14,080 --> 01:37:17,440
it's on youtube

01:37:15,679 --> 01:37:19,199
have at it there's 28 different tips

01:37:17,440 --> 01:37:20,960
that you can sort of to sink your teeth

01:37:19,199 --> 01:37:21,840
into different flavors of way to

01:37:20,960 --> 01:37:25,040
approach it

01:37:21,840 --> 01:37:28,080
i hope you enjoy and that kind of

01:37:25,040 --> 01:37:28,960
summarized everything that i wanted to

01:37:28,080 --> 01:37:30,080
share today

01:37:28,960 --> 01:37:31,760
i really think everybody's taking that

01:37:30,080 --> 01:37:32,159
time out of your day i really encourage

01:37:31,760 --> 01:37:34,960
you

01:37:32,159 --> 01:37:35,600
on your journey to open source uh it is

01:37:34,960 --> 01:37:38,400
a journey

01:37:35,600 --> 01:37:39,440
so and not a destination so it's it's a

01:37:38,400 --> 01:37:41,280
constant

01:37:39,440 --> 01:37:42,639
thing i think about when i approach my

01:37:41,280 --> 01:37:44,880
work when i approach

01:37:42,639 --> 01:37:46,320
creating repositories and examples for

01:37:44,880 --> 01:37:48,800
conversations like this

01:37:46,320 --> 01:37:49,760
and i do encourage you to you know do

01:37:48,800 --> 01:37:52,880
stuff share

01:37:49,760 --> 01:37:52,880
talk have conversation

01:37:57,880 --> 01:38:00,880

YouTube URL: https://www.youtube.com/watch?v=LqGJ5NV9c90


