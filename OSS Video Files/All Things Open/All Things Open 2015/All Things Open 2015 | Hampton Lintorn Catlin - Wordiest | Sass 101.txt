Title: All Things Open 2015 | Hampton Lintorn Catlin - Wordiest | Sass 101
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2014 All Things Open 2015, October 19th and 20th, Raleigh NC. All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,339 --> 00:00:09,000
and I'm just gonna announce a little

00:00:06,420 --> 00:00:12,240
troll I did is that this is my photo

00:00:09,000 --> 00:00:13,980
that i sent in and it like it just looks

00:00:12,240 --> 00:00:15,389
like a really bad professional portrait

00:00:13,980 --> 00:00:17,039
so you might think that i went to an

00:00:15,389 --> 00:00:19,350
actual professional place to get this

00:00:17,039 --> 00:00:21,119
done that's not true I kind of mentioned

00:00:19,350 --> 00:00:22,410
earlier that I'm kind of weirdly

00:00:21,119 --> 00:00:25,590
obsessed with cruise ships for some

00:00:22,410 --> 00:00:27,029
reason and so Michael and I I don't even

00:00:25,590 --> 00:00:29,670
know if you know these photos are in

00:00:27,029 --> 00:00:31,650
here but you're gonna love it we like to

00:00:29,670 --> 00:00:33,809
when we go on cruises you take you do

00:00:31,650 --> 00:00:35,309
the photo package and get kind of drunk

00:00:33,809 --> 00:00:37,079
and then you just go and take as many

00:00:35,309 --> 00:00:41,670
photos that you possibly can and they

00:00:37,079 --> 00:00:43,860
come out amazing and on this cruise my

00:00:41,670 --> 00:00:47,070
parents came and so even got my dad and

00:00:43,860 --> 00:00:49,200
on the act so yeah I don't know how we

00:00:47,070 --> 00:00:51,420
got him to do that but actually I do

00:00:49,200 --> 00:00:52,920
know how we got him to do that God adds

00:00:51,420 --> 00:00:55,050
a great idea it's not embarrassing at

00:00:52,920 --> 00:00:56,489
all yeah you gotta get your inner cheese

00:00:55,050 --> 00:00:59,149
out some times where I just really let

00:00:56,489 --> 00:01:01,379
it let it flow he can't be all serious

00:00:59,149 --> 00:01:07,700
so I'm gonna start out kind of talking

00:01:01,379 --> 00:01:09,689
about the SAS team apparently I'm not

00:01:07,700 --> 00:01:11,729
apparently i miss organized my slides

00:01:09,689 --> 00:01:15,479
that's going to come up in like four

00:01:11,729 --> 00:01:17,070
more slides professional well let's talk

00:01:15,479 --> 00:01:18,810
about simple examples of SAS where

00:01:17,070 --> 00:01:22,259
people who haven't used it this needs to

00:01:18,810 --> 00:01:23,640
be a longer section but SAS has kind of

00:01:22,259 --> 00:01:25,290
gotten a bit more popular that it seems

00:01:23,640 --> 00:01:27,689
kind of stupid to review the features of

00:01:25,290 --> 00:01:29,340
SAS sorry if you are here to learn SAS

00:01:27,689 --> 00:01:32,850
the original titles nice ass 101 but

00:01:29,340 --> 00:01:37,320
then yeah i mean google it it's not that

00:01:32,850 --> 00:01:38,909
hard that's my loving answer yeah so you

00:01:37,320 --> 00:01:42,090
know tas allows you to do things like

00:01:38,909 --> 00:01:45,270
use variables using nesting and kind of

00:01:42,090 --> 00:01:46,829
remove limited nesting in your style

00:01:45,270 --> 00:01:50,009
sheets basically bring some of the

00:01:46,829 --> 00:01:52,290
programmer tools to you know the world

00:01:50,009 --> 00:01:54,659
of front end it was the first CSS

00:01:52,290 --> 00:01:57,390
preprocessor and I think currently is

00:01:54,659 --> 00:01:58,860
the most popular boot no no no wait

00:01:57,390 --> 00:02:01,890
Chris Collier hasn't done a survey in a

00:01:58,860 --> 00:02:03,329
while so yeah and then we also have

00:02:01,890 --> 00:02:06,509
things like mix-ins which are kind of

00:02:03,329 --> 00:02:09,149
ways to embed bits of CSS and other

00:02:06,509 --> 00:02:11,310
parts of things and then you know you

00:02:09,149 --> 00:02:12,250
can use this and then when I call alert

00:02:11,310 --> 00:02:14,620
alert I can

00:02:12,250 --> 00:02:18,190
set variables and stuff and then it

00:02:14,620 --> 00:02:19,750
embeds itself and repeats itself which

00:02:18,190 --> 00:02:22,840
choice total side note that I wasn't

00:02:19,750 --> 00:02:25,420
even going to fully go over some people

00:02:22,840 --> 00:02:30,390
especially of the programmer persuasion

00:02:25,420 --> 00:02:34,240
we're a little picky and I am too and so

00:02:30,390 --> 00:02:35,410
this repetition here can bother the hell

00:02:34,240 --> 00:02:37,720
out of us right like I've definitely

00:02:35,410 --> 00:02:39,640
heard people go yeah why no you're the

00:02:37,720 --> 00:02:42,070
codes have me more than once okay here's

00:02:39,640 --> 00:02:45,430
the weird part I one point tried to

00:02:42,070 --> 00:02:47,709
write a bytecode compiler for CSS which

00:02:45,430 --> 00:02:49,060
I think they've been working on again

00:02:47,709 --> 00:02:51,459
and I tried to figure out okay what's

00:02:49,060 --> 00:02:53,170
the smallest like if I compiled this and

00:02:51,459 --> 00:02:55,540
I worked out all the rules how small

00:02:53,170 --> 00:02:57,400
would it be and I spent like three days

00:02:55,540 --> 00:02:59,620
just hardcore coding on this right like

00:02:57,400 --> 00:03:02,080
in super intense and then I like

00:02:59,620 --> 00:03:05,530
compared it to just the gzipped version

00:03:02,080 --> 00:03:07,660
of a regular CSS file and realized that

00:03:05,530 --> 00:03:10,810
actually the savings are like one

00:03:07,660 --> 00:03:14,680
percent because CSS is very very

00:03:10,810 --> 00:03:16,209
repetitious and gzip is amazing and it

00:03:14,680 --> 00:03:17,620
does a really great job of compressing

00:03:16,209 --> 00:03:19,709
all the stuff down and the browser is

00:03:17,620 --> 00:03:22,950
actually super used like they're super

00:03:19,709 --> 00:03:25,420
high-end machines for parsing this stuff

00:03:22,950 --> 00:03:26,830
and so it's weird like that this

00:03:25,420 --> 00:03:28,239
actually ends up being kind of efficient

00:03:26,830 --> 00:03:30,100
in the end even for page render time

00:03:28,239 --> 00:03:32,350
obviously there's limits but you know if

00:03:30,100 --> 00:03:35,170
you have nine megabytes of CSS we need

00:03:32,350 --> 00:03:37,350
to talk anyhow sorry is a side thing oh

00:03:35,170 --> 00:03:41,190
hey look here's the SAS team slide

00:03:37,350 --> 00:03:46,350
that's where it is so first of all uh

00:03:41,190 --> 00:03:49,690
natalie is the primary mad woman behind

00:03:46,350 --> 00:03:51,730
SAS she's written pretty much all the

00:03:49,690 --> 00:03:53,380
code she's designed most the features

00:03:51,730 --> 00:03:56,950
and she kind of gets final say on what

00:03:53,380 --> 00:03:59,680
goes in a language years ago I talked

00:03:56,950 --> 00:04:02,650
her into helping to the project and now

00:03:59,680 --> 00:04:04,870
she kind of is the she kind of runs the

00:04:02,650 --> 00:04:06,790
ruby version Chris Epstein who did

00:04:04,870 --> 00:04:08,680
compass and eyeglass which we'll talk

00:04:06,790 --> 00:04:11,920
about a little bit later works at

00:04:08,680 --> 00:04:14,579
LinkedIn now doing kind of their semi

00:04:11,920 --> 00:04:17,440
sponsoring so what we're doing he's the

00:04:14,579 --> 00:04:20,900
crazy ideas guy or at least was

00:04:17,440 --> 00:04:23,490
traditionally sometimes questionable

00:04:20,900 --> 00:04:25,830
so he comes up with ideas and Natalie

00:04:23,490 --> 00:04:27,330
usually says no that's kind of the way

00:04:25,830 --> 00:04:30,320
that they work on stuff and then we've

00:04:27,330 --> 00:04:36,000
got claudina it's ms CSS who does a

00:04:30,320 --> 00:04:37,170
should be an extra s there no I know she

00:04:36,000 --> 00:04:39,350
does all of our conferences and events

00:04:37,170 --> 00:04:42,210
community stuff Gina's are headed design

00:04:39,350 --> 00:04:45,990
Marcel greeter does lips ass stuff and

00:04:42,210 --> 00:04:49,890
so does I fur and then there's me so too

00:04:45,990 --> 00:04:52,100
early for that I'm just going to leave

00:04:49,890 --> 00:04:55,440
it up you can all just cry to yourselves

00:04:52,100 --> 00:04:57,960
so that's the SAS team I kind of started

00:04:55,440 --> 00:04:59,040
the project but I don't really well

00:04:57,960 --> 00:05:02,430
we'll talk a little bit more i'm a

00:04:59,040 --> 00:05:05,220
little bit more of a kickstarter an ass

00:05:02,430 --> 00:05:08,250
kicker and that's kind of my role in the

00:05:05,220 --> 00:05:09,570
community so quick history so there's a

00:05:08,250 --> 00:05:12,660
language called Hamill that I came up

00:05:09,570 --> 00:05:15,990
with forever ago he steals in five

00:05:12,660 --> 00:05:17,520
something like that and it's still

00:05:15,990 --> 00:05:19,500
pretty popular in certain area

00:05:17,520 --> 00:05:20,820
especially in the Ruby community and

00:05:19,500 --> 00:05:23,670
it's kind of like this as a way to do

00:05:20,820 --> 00:05:26,010
HTML that's a bit more brief and a bit

00:05:23,670 --> 00:05:28,560
more structured it's putting a lot of

00:05:26,010 --> 00:05:31,830
people that hate Hamill tend to think of

00:05:28,560 --> 00:05:33,720
it okay here's the so like fifty percent

00:05:31,830 --> 00:05:35,220
people hate this and fifty percent are

00:05:33,720 --> 00:05:38,340
like oh my gosh it's exactly what I've

00:05:35,220 --> 00:05:40,200
always wanted and okay my theory is the

00:05:38,340 --> 00:05:43,440
differences people who hate it think

00:05:40,200 --> 00:05:45,270
that the goal of the design was to limit

00:05:43,440 --> 00:05:47,340
characters or typing or something like

00:05:45,270 --> 00:05:49,260
I'm a super vim user or something and

00:05:47,340 --> 00:05:51,600
I'm just like less characters every you

00:05:49,260 --> 00:05:54,300
know things should count it's not

00:05:51,600 --> 00:05:55,920
actually that was actually just designed

00:05:54,300 --> 00:05:57,330
to keep it like when you looked at a big

00:05:55,920 --> 00:06:00,000
structured document that the structure

00:05:57,330 --> 00:06:03,000
was clear because I felt like with just

00:06:00,000 --> 00:06:04,770
dibs everywhere especially before html5

00:06:03,000 --> 00:06:06,630
that it was hard to understand that

00:06:04,770 --> 00:06:08,220
these were items and that this thing was

00:06:06,630 --> 00:06:09,810
inside of that thing so I kind of want

00:06:08,220 --> 00:06:11,310
to build something that would give you

00:06:09,810 --> 00:06:13,170
great overview the structure of a page

00:06:11,310 --> 00:06:15,420
really really quickly and if you're used

00:06:13,170 --> 00:06:17,970
to looking at this you can just glance

00:06:15,420 --> 00:06:19,290
at it and totally make sense if you're

00:06:17,970 --> 00:06:21,450
not used to it it looks like a bunch

00:06:19,290 --> 00:06:24,600
crazy which is what I think so

00:06:21,450 --> 00:06:29,310
people hate it and then let's say I

00:06:24,600 --> 00:06:32,100
thinks was it rails comp 2007 yeah it

00:06:29,310 --> 00:06:34,490
must have been it because it was 2007 as

00:06:32,100 --> 00:06:35,870
my next slide says and I

00:06:34,490 --> 00:06:38,389
Natalie and I've been working with a

00:06:35,870 --> 00:06:40,639
really talented designer who you know

00:06:38,389 --> 00:06:42,710
this period like CSS was just starting

00:06:40,639 --> 00:06:44,210
to become a thing that might like a

00:06:42,710 --> 00:06:45,860
professional might spend any time

00:06:44,210 --> 00:06:47,720
thinking about before that it was like

00:06:45,860 --> 00:06:49,550
somewhere between a designer and a

00:06:47,720 --> 00:06:52,280
programmer somebody would hack at it

00:06:49,550 --> 00:06:53,840
until something happened the table

00:06:52,280 --> 00:06:56,509
layout would work like that's kind of

00:06:53,840 --> 00:06:58,460
how it wasn't there was just starting to

00:06:56,509 --> 00:07:00,349
be the the movement of like okay wait

00:06:58,460 --> 00:07:01,940
actually this front-end design matters

00:07:00,349 --> 00:07:04,460
like in the Technic the technology the

00:07:01,940 --> 00:07:05,240
front-end actually matters and it's I

00:07:04,460 --> 00:07:07,520
was working with this really talented

00:07:05,240 --> 00:07:09,319
guy who was just doing plain CSS and he

00:07:07,520 --> 00:07:11,419
you know he'd properly scope stuff using

00:07:09,319 --> 00:07:13,370
one or two layers and you know any time

00:07:11,419 --> 00:07:16,159
we would change we'd be like oh yeah we

00:07:13,370 --> 00:07:17,780
changed that to an ID or whatever and

00:07:16,159 --> 00:07:19,130
then he'd start crying to himself with

00:07:17,780 --> 00:07:21,139
find and replace going through all of

00:07:19,130 --> 00:07:22,819
the different files and his mega CSS

00:07:21,139 --> 00:07:24,800
single file because back then there it

00:07:22,819 --> 00:07:26,479
was really hard to kick at like that was

00:07:24,800 --> 00:07:28,880
weirdly whole process here to code

00:07:26,479 --> 00:07:32,210
yourself just to get one CSS file out of

00:07:28,880 --> 00:07:34,069
a lot of them so I kind of figured out

00:07:32,210 --> 00:07:37,340
like hey we should probably help this

00:07:34,069 --> 00:07:38,360
guy out like this is sad like we

00:07:37,340 --> 00:07:40,490
wouldn't do it we wouldn't put up this

00:07:38,360 --> 00:07:42,710
in programming that you have to go find

00:07:40,490 --> 00:07:45,409
in replace everywhere just any data

00:07:42,710 --> 00:07:49,240
change basically so I convince Natalie

00:07:45,409 --> 00:07:51,259
de we kind of SPECT out the language and

00:07:49,240 --> 00:07:53,000
it was actually another plane ride home

00:07:51,259 --> 00:07:54,440
that she took my starting code and just

00:07:53,000 --> 00:07:57,530
started nailing him i think by the time

00:07:54,440 --> 00:07:59,900
the plane landed she'd actually written

00:07:57,530 --> 00:08:02,110
a working version my virtue is kind of

00:07:59,900 --> 00:08:05,120
craft but i'm not a good compiler writer

00:08:02,110 --> 00:08:06,830
but yeah it was a hamel sub-project for

00:08:05,120 --> 00:08:08,780
a really long time and it was also the

00:08:06,830 --> 00:08:10,460
original sin tax was only white space

00:08:08,780 --> 00:08:12,620
sensitive because it was meant to be for

00:08:10,460 --> 00:08:15,710
hamill users like just we're gonna ship

00:08:12,620 --> 00:08:18,169
it with it and people start using it and

00:08:15,710 --> 00:08:19,580
then less came out which less originally

00:08:18,169 --> 00:08:21,830
was written in ruby a lot of people

00:08:19,580 --> 00:08:23,810
don't remember that and it kind of

00:08:21,830 --> 00:08:25,039
didn't get traction doing that because

00:08:23,810 --> 00:08:27,440
people really okay it's just another

00:08:25,039 --> 00:08:30,500
thing they had a great innovation though

00:08:27,440 --> 00:08:32,839
of they wanted to make the syntax look

00:08:30,500 --> 00:08:34,279
more like CSS which is definitely

00:08:32,839 --> 00:08:36,229
something we discussed but we decided to

00:08:34,279 --> 00:08:38,839
go with we thought Hamill users held

00:08:36,229 --> 00:08:42,550
already and like was it in for a dollar

00:08:38,839 --> 00:08:45,500
and for a pounder and for a google it

00:08:42,550 --> 00:08:47,750
yeah so the analyst guys ported it to

00:08:45,500 --> 00:08:50,030
javascript which was a fantastic

00:08:47,750 --> 00:08:54,010
idea because javascript was just taking

00:08:50,030 --> 00:08:56,450
off I think less was 2009 and they had a

00:08:54,010 --> 00:08:58,490
more CSS like syntax which means new

00:08:56,450 --> 00:08:59,750
users like if you already a hamel user

00:08:58,490 --> 00:09:01,250
and you looked at the indented syntax

00:08:59,750 --> 00:09:02,840
you're like I get it absolutely it's a

00:09:01,250 --> 00:09:05,300
high five let's go I know what I'm doing

00:09:02,840 --> 00:09:07,700
if you weren't if you were a CSS

00:09:05,300 --> 00:09:10,970
developer you're like what the hell what

00:09:07,700 --> 00:09:13,610
is this this doesn't look right so they

00:09:10,970 --> 00:09:17,060
were totally absolutely right so yeah

00:09:13,610 --> 00:09:19,280
2009 it was more csse I've already said

00:09:17,060 --> 00:09:21,740
all the stuff and then also a stylist

00:09:19,280 --> 00:09:25,520
came out which is kind of the third kid

00:09:21,740 --> 00:09:26,840
it's 2010 much more free form and

00:09:25,520 --> 00:09:30,380
basically with all this going on and

00:09:26,840 --> 00:09:33,230
that's kind of being a side project we

00:09:30,380 --> 00:09:34,430
were kind of declared dead like

00:09:33,230 --> 00:09:35,840
basically people were just like okay

00:09:34,430 --> 00:09:40,280
that's that weird Ruby thing if you use

00:09:35,840 --> 00:09:41,960
Hamill and we kind of went like this is

00:09:40,280 --> 00:09:43,580
the way we kind of think of things we

00:09:41,960 --> 00:09:46,220
were like well you know it was a good

00:09:43,580 --> 00:09:48,260
idea to CSS that definitely helps like

00:09:46,220 --> 00:09:50,090
people understand especially new users

00:09:48,260 --> 00:09:52,370
you know the fact you can just take a

00:09:50,090 --> 00:09:53,960
CSS file and then it's valid is such a

00:09:52,370 --> 00:09:55,370
breakthrough I can't believe we didn't

00:09:53,960 --> 00:09:57,200
think of that to start with to be honest

00:09:55,370 --> 00:09:59,210
so we kind of change it to that because

00:09:57,200 --> 00:10:01,550
we thought it was a good idea we made

00:09:59,210 --> 00:10:03,560
the official syntax kind of be more or

00:10:01,550 --> 00:10:05,330
less like by making it CSS compatible

00:10:03,560 --> 00:10:07,820
it's funny how little code changed that

00:10:05,330 --> 00:10:11,510
joke by the way the addition of the SAS

00:10:07,820 --> 00:10:13,190
CSS syntax was I think was less than a

00:10:11,510 --> 00:10:15,740
week of work because it's really just

00:10:13,190 --> 00:10:17,450
how it parses everything behind it is

00:10:15,740 --> 00:10:19,460
all the same so all the interpreter

00:10:17,450 --> 00:10:20,990
rules all the compilation rules all that

00:10:19,460 --> 00:10:22,940
stuff was all the same so it was

00:10:20,990 --> 00:10:25,400
actually just kind of like a small super

00:10:22,940 --> 00:10:26,510
small change force and then yeah we were

00:10:25,400 --> 00:10:29,690
like right this is actually really good

00:10:26,510 --> 00:10:31,220
we should just do this yeah you know and

00:10:29,690 --> 00:10:33,230
we just kind of were like well whatever

00:10:31,220 --> 00:10:35,480
like we don't care we use this like

00:10:33,230 --> 00:10:36,890
there's things about less that let's

00:10:35,480 --> 00:10:39,350
definitely got more popular with us by

00:10:36,890 --> 00:10:41,870
far and there were things that like the

00:10:39,350 --> 00:10:44,690
fact that kind of mix-ins are the same

00:10:41,870 --> 00:10:48,380
as classes I don't know it makes me

00:10:44,690 --> 00:10:50,030
little huh what's he really cute we're

00:10:48,380 --> 00:10:52,670
just gonna keep working on this whatever

00:10:50,030 --> 00:10:54,530
like and you know this is one of the

00:10:52,670 --> 00:10:56,180
things it doesn't matter how slowly go

00:10:54,530 --> 00:10:59,690
as long as you don't stop something I

00:10:56,180 --> 00:11:00,860
said or Confucius said but whatever i'll

00:10:59,690 --> 00:11:03,620
take credit

00:11:00,860 --> 00:11:05,750
and so we can always do steady slow

00:11:03,620 --> 00:11:08,270
deliberate and debated expansion so

00:11:05,750 --> 00:11:11,690
language that's what we're very very

00:11:08,270 --> 00:11:13,490
proud of like some of the languages that

00:11:11,690 --> 00:11:14,420
never fully took off up and having

00:11:13,490 --> 00:11:15,980
issues a lot of times it's like

00:11:14,420 --> 00:11:18,110
somebody's like I've got a great idea

00:11:15,980 --> 00:11:20,630
that sounds reasonable the pull request

00:11:18,110 --> 00:11:22,580
comes in it gets merged the language now

00:11:20,630 --> 00:11:24,500
is a new feature that seems like that's

00:11:22,580 --> 00:11:25,640
how we do I don't know a database or

00:11:24,500 --> 00:11:26,720
something right you're like I have a new

00:11:25,640 --> 00:11:29,320
page of the database entries like

00:11:26,720 --> 00:11:32,120
high-five let's go languages are really

00:11:29,320 --> 00:11:33,580
not like that like once other people are

00:11:32,120 --> 00:11:37,070
building on top of what you're doing

00:11:33,580 --> 00:11:38,540
like you're committed like it's really

00:11:37,070 --> 00:11:40,280
hard I think we've only deprecated like

00:11:38,540 --> 00:11:42,350
two things ever and we gave it like

00:11:40,280 --> 00:11:44,450
three years of time with warnings and

00:11:42,350 --> 00:11:45,740
stuff kind of decisions we made it

00:11:44,450 --> 00:11:47,660
weirder later like ooh that kind of put

00:11:45,740 --> 00:11:49,190
us in a corner especially with things

00:11:47,660 --> 00:11:51,590
that might conflict with new CSS

00:11:49,190 --> 00:11:53,780
features we try really hard to not mess

00:11:51,590 --> 00:11:55,430
with the whole w3c doing their thing

00:11:53,780 --> 00:11:58,250
like we kind of want to be to the side

00:11:55,430 --> 00:12:01,820
of it and be helpful with writing

00:11:58,250 --> 00:12:04,640
standards base CSS and so this is really

00:12:01,820 --> 00:12:07,510
really important I have a mini play

00:12:04,640 --> 00:12:10,070
about that later so look forward to that

00:12:07,510 --> 00:12:12,740
but like what were our weak points we

00:12:10,070 --> 00:12:16,010
kind of had to like look what was going

00:12:12,740 --> 00:12:17,720
on I mean I love this language still but

00:12:16,010 --> 00:12:20,450
the fact we were based on ruby was a big

00:12:17,720 --> 00:12:21,710
limiting force because last being

00:12:20,450 --> 00:12:23,810
written in JavaScript even if he didn't

00:12:21,710 --> 00:12:25,220
use node or anything like that you could

00:12:23,810 --> 00:12:27,740
actually drop it into your browser and

00:12:25,220 --> 00:12:30,290
it would work so for a demo or building

00:12:27,740 --> 00:12:32,000
something quickly that was awesome also

00:12:30,290 --> 00:12:34,160
is the new cool language and at this

00:12:32,000 --> 00:12:35,750
point Ruby had just been eclipsed by

00:12:34,160 --> 00:12:38,750
qatar javascript is the cool language

00:12:35,750 --> 00:12:40,820
and you know that we can't like

00:12:38,750 --> 00:12:42,650
installing ruby itself is like 200

00:12:40,820 --> 00:12:44,390
megabytes just to install the

00:12:42,650 --> 00:12:46,790
interpreter like that's a lot of

00:12:44,390 --> 00:12:49,610
overhead if you're you're going to your

00:12:46,790 --> 00:12:52,220
IT guy you're like hey yeah I want to

00:12:49,610 --> 00:12:54,260
try this new thing yeah well when we

00:12:52,220 --> 00:12:55,580
install now we need 200 extra megabytes

00:12:54,260 --> 00:12:57,260
and all the systems need this installed

00:12:55,580 --> 00:12:58,610
and all the compilation things your

00:12:57,260 --> 00:13:00,950
version management make sure that your

00:12:58,610 --> 00:13:02,690
gyms are all like good you should use

00:13:00,950 --> 00:13:04,490
bundle or no vendor at first oh wait

00:13:02,690 --> 00:13:07,090
what sorry and then they're like nope

00:13:04,490 --> 00:13:09,350
nope nope nope nope we're not doing that

00:13:07,090 --> 00:13:10,850
so it was a liability not because we

00:13:09,350 --> 00:13:13,570
don't love the language I still write a

00:13:10,850 --> 00:13:15,070
lot of Ruby these days but it's one of

00:13:13,570 --> 00:13:16,450
language but it's kind of not

00:13:15,070 --> 00:13:18,880
appropriate if you want somebody who's

00:13:16,450 --> 00:13:20,380
writing in.net to use your language like

00:13:18,880 --> 00:13:23,500
right like it kind of puts you into like

00:13:20,380 --> 00:13:25,540
well man I my company's really got got

00:13:23,500 --> 00:13:29,410
to get on this whole Ruby thing and then

00:13:25,540 --> 00:13:31,090
also you know ruby is not the fastest

00:13:29,410 --> 00:13:32,350
language out there it's not the slowest

00:13:31,090 --> 00:13:34,600
but it's definitely not the fastest

00:13:32,350 --> 00:13:38,350
rigging a compiler and a high-level

00:13:34,600 --> 00:13:42,280
language like Ruby you know it's easy to

00:13:38,350 --> 00:13:45,730
maintain it was good for us but speed

00:13:42,280 --> 00:13:49,000
was a big issue so let's see I think I

00:13:45,730 --> 00:13:53,470
basically started coming up with a i

00:13:49,000 --> 00:13:57,970
call it like my loving conspiracy it was

00:13:53,470 --> 00:13:59,650
my secret plot um and but it was like in

00:13:57,970 --> 00:14:02,770
a positive way right you can have like a

00:13:59,650 --> 00:14:05,020
secret evil plot that's lovely and

00:14:02,770 --> 00:14:06,100
basically what I my goal was is I knew

00:14:05,020 --> 00:14:09,400
that we had to deal with those two

00:14:06,100 --> 00:14:11,440
issues at the time Natalie wasn't really

00:14:09,400 --> 00:14:14,980
interested in that she's working full

00:14:11,440 --> 00:14:16,480
time at Google like you know I like

00:14:14,980 --> 00:14:18,790
writing Ruby why would we ever take it

00:14:16,480 --> 00:14:20,860
off that I'm doing this for free don't

00:14:18,790 --> 00:14:22,090
don't make my life painful to was the

00:14:20,860 --> 00:14:23,770
whole thing like don't make it so that

00:14:22,090 --> 00:14:24,970
if i add a new feature I've got to go

00:14:23,770 --> 00:14:27,370
right in some language I don't want to

00:14:24,970 --> 00:14:29,560
write it and you know I basically

00:14:27,370 --> 00:14:31,900
decided Ruby where we're going we don't

00:14:29,560 --> 00:14:36,040
need Ruby and that's where I killed with

00:14:31,900 --> 00:14:40,150
the lib toss project and i announced it

00:14:36,040 --> 00:14:41,530
the 2012 rails comp and we'd actually

00:14:40,150 --> 00:14:44,770
been working on it for about a year

00:14:41,530 --> 00:14:46,780
before that and the idea was well these

00:14:44,770 --> 00:14:48,760
were the goals and we kind of got to

00:14:46,780 --> 00:14:50,530
technical decisions after this which is

00:14:48,760 --> 00:14:52,150
we want to be easy to integrate so I

00:14:50,530 --> 00:14:54,100
want somebody in.net I want somebody in

00:14:52,150 --> 00:14:55,570
Java I want somebody in PHP I wants I

00:14:54,100 --> 00:14:59,080
mean javascript to I'll be able to use

00:14:55,570 --> 00:15:00,790
this code evenly and there's a prod or

00:14:59,080 --> 00:15:03,970
well I'll get to focusing no

00:15:00,790 --> 00:15:05,440
dependencies nothing like installing

00:15:03,970 --> 00:15:08,740
something and it requires you install

00:15:05,440 --> 00:15:10,330
something else like nope nope we wanted

00:15:08,740 --> 00:15:12,240
it to be the only way to be compatible

00:15:10,330 --> 00:15:15,460
we want this thing to work right that's

00:15:12,240 --> 00:15:17,770
obviously having a second interpreter

00:15:15,460 --> 00:15:19,210
for language it's kind of got about a

00:15:17,770 --> 00:15:21,340
pool it's kind of a bad idea if they're

00:15:19,210 --> 00:15:24,040
not and then the fourth and by the way

00:15:21,340 --> 00:15:26,020
these are in order of what of our of

00:15:24,040 --> 00:15:27,520
importance and what we were working on

00:15:26,020 --> 00:15:31,960
it was speed

00:15:27,520 --> 00:15:34,990
and so basically what we did is lips ass

00:15:31,960 --> 00:15:36,430
is a static library doesn't require any

00:15:34,990 --> 00:15:40,240
external dependencies it's all written

00:15:36,430 --> 00:15:42,070
in C and C++ any computer where the

00:15:40,240 --> 00:15:43,720
basic compiler can compile it and the

00:15:42,070 --> 00:15:45,340
cool part about seeing C++ it's pretty

00:15:43,720 --> 00:15:49,030
much every language allows you to embed

00:15:45,340 --> 00:15:52,450
that ever like everything once you've

00:15:49,030 --> 00:15:55,330
written in C which is not fun this is

00:15:52,450 --> 00:15:57,250
not like hey I've got a fun idea let's

00:15:55,330 --> 00:15:58,540
rewrite this very complicated compiler

00:15:57,250 --> 00:15:59,890
with a lot of rules that we've been

00:15:58,540 --> 00:16:02,170
building up over seven years of bug

00:15:59,890 --> 00:16:06,340
fixing and totally do in a language we

00:16:02,170 --> 00:16:09,610
can get an ill pointer error yeah none

00:16:06,340 --> 00:16:11,230
of us really know so you know the idea

00:16:09,610 --> 00:16:13,630
those with the static library is that

00:16:11,230 --> 00:16:16,120
you can build it straight into something

00:16:13,630 --> 00:16:17,680
else these are actually not the name so

00:16:16,120 --> 00:16:19,210
these are what I was proposing the time

00:16:17,680 --> 00:16:21,310
when I first kind of proposed this

00:16:19,210 --> 00:16:24,010
project we actually had a beta when I

00:16:21,310 --> 00:16:26,650
announced this but it was a lot of

00:16:24,010 --> 00:16:29,590
things it didn't do but the company was

00:16:26,650 --> 00:16:32,260
out at the time was the CTO move web and

00:16:29,590 --> 00:16:34,840
in that capacity I got to convince the

00:16:32,260 --> 00:16:37,900
CEO that I should have one of our

00:16:34,840 --> 00:16:40,630
developers who had a side hobby in

00:16:37,900 --> 00:16:42,940
compilers to start rewriting the whole

00:16:40,630 --> 00:16:45,310
thing in C and so they basically

00:16:42,940 --> 00:16:48,220
sponsored the first six to nine months

00:16:45,310 --> 00:16:51,010
of development time and you know was

00:16:48,220 --> 00:16:53,830
slow starting like it's what like it

00:16:51,010 --> 00:16:55,030
doesn't start out working so it's kind

00:16:53,830 --> 00:16:57,100
of hard to be like hey why don't you

00:16:55,030 --> 00:17:01,630
come into a project that's quasi

00:16:57,100 --> 00:17:03,610
functional and learn see like including

00:17:01,630 --> 00:17:06,130
the overlap of people who care about C++

00:17:03,610 --> 00:17:07,959
and the people who write C is not that

00:17:06,130 --> 00:17:09,490
Venn diagram is not very big like

00:17:07,959 --> 00:17:13,240
there's not a lot of like oh I love

00:17:09,490 --> 00:17:16,000
front-end design and writing see it's

00:17:13,240 --> 00:17:17,860
not a thing but you know we just kept

00:17:16,000 --> 00:17:19,450
working and working and working and

00:17:17,860 --> 00:17:21,459
working and then eventually more and

00:17:19,450 --> 00:17:23,800
more people started coming on board we

00:17:21,459 --> 00:17:26,500
started having more more people use it

00:17:23,800 --> 00:17:28,150
and at this point I think by far the

00:17:26,500 --> 00:17:30,250
bulk of people in the SAS community are

00:17:28,150 --> 00:17:32,590
using lib SAS and a lot of them don't

00:17:30,250 --> 00:17:35,530
even know it actually last night we're

00:17:32,590 --> 00:17:37,810
getting drinks and somebody was like oh

00:17:35,530 --> 00:17:39,500
I don't use lips ass I use notes s I was

00:17:37,810 --> 00:17:41,900
like it's

00:17:39,500 --> 00:17:45,590
the same project its work that's a

00:17:41,900 --> 00:17:46,940
wrapper around what we do and it's now

00:17:45,590 --> 00:17:49,310
as of last year we made an official

00:17:46,940 --> 00:17:53,420
project so finally got Natalie and Chris

00:17:49,310 --> 00:17:58,010
to agree it's now being a released

00:17:53,420 --> 00:18:00,500
sequence with Ruby sass and also we

00:17:58,010 --> 00:18:03,200
announced that we're going to freeze

00:18:00,500 --> 00:18:06,260
development except for bug fixes on SAS

00:18:03,200 --> 00:18:08,780
features think about the next big you

00:18:06,260 --> 00:18:11,290
know so I still did spec work going on

00:18:08,780 --> 00:18:13,820
but that we were going to give it a year

00:18:11,290 --> 00:18:15,530
till we could get lips ass kind of

00:18:13,820 --> 00:18:16,760
finish off the last things and really

00:18:15,530 --> 00:18:18,110
give us a little moment to catch up

00:18:16,760 --> 00:18:19,820
because you go rewrite everything or at

00:18:18,110 --> 00:18:21,740
huge features you know we're a little

00:18:19,820 --> 00:18:23,470
further behind we wanted to get things

00:18:21,740 --> 00:18:27,980
even so that it could really become a

00:18:23,470 --> 00:18:31,460
release for release a project and with

00:18:27,980 --> 00:18:34,880
3.3 beta 3 I mean I'm very happy to

00:18:31,460 --> 00:18:39,760
announce that we are for everything we

00:18:34,880 --> 00:18:43,520
know TM sorry it is fully compatible

00:18:39,760 --> 00:18:45,170
according to didn't even put the URL but

00:18:43,520 --> 00:18:48,470
you can look up at a SAS compatibility

00:18:45,170 --> 00:18:52,700
by Hugo geology I can't say his last

00:18:48,470 --> 00:18:54,170
name Hugo it's basically a whole site

00:18:52,700 --> 00:18:55,910
that just shows different versions of

00:18:54,170 --> 00:18:57,950
sass and what things were added so like

00:18:55,910 --> 00:19:00,230
here's an example Ruby sass 3.2 did this

00:18:57,950 --> 00:19:04,300
but lips s 3.1 didn't cover this use

00:19:00,230 --> 00:19:06,560
case I think right now there's only 3.2

00:19:04,300 --> 00:19:08,540
only has like three things on here that

00:19:06,560 --> 00:19:12,170
it didn't do so now we're like we

00:19:08,540 --> 00:19:14,450
finally got those three done and you'll

00:19:12,170 --> 00:19:16,070
notice the versioning and this is always

00:19:14,450 --> 00:19:19,310
a little confusing to people as my badge

00:19:16,070 --> 00:19:21,920
just falls off we kind of started lips

00:19:19,310 --> 00:19:23,570
ass well we started like 1 point 0 but

00:19:21,920 --> 00:19:27,560
we were moving rapidly so that our

00:19:23,570 --> 00:19:30,230
versions will match so like 3.4 when

00:19:27,560 --> 00:19:31,520
that comes out ok that's hard to think

00:19:30,230 --> 00:19:34,070
of it it's like stable experimental

00:19:31,520 --> 00:19:36,320
releases so 3.3 is we are we are

00:19:34,070 --> 00:19:38,480
matching the behavior or attempting

00:19:36,320 --> 00:19:40,700
match the behavior of sass 3.4 is the

00:19:38,480 --> 00:19:43,640
language but we're just as soon as we

00:19:40,700 --> 00:19:46,010
call 3.4 that's it we are locked in we

00:19:43,640 --> 00:19:48,320
are now like and really this is just a

00:19:46,010 --> 00:19:50,300
emergency valve forests if we put out

00:19:48,320 --> 00:19:52,720
3.3 and we find some edge cases we need

00:19:50,300 --> 00:19:54,760
to fix we want to have

00:19:52,720 --> 00:19:56,169
reversion so that we don't go like you

00:19:54,760 --> 00:19:57,880
mean full insurance policy on the

00:19:56,169 --> 00:19:59,409
versioning sore not like I we've totally

00:19:57,880 --> 00:20:01,409
matched and then we find something we

00:19:59,409 --> 00:20:05,110
need to fix and yeah nothing like

00:20:01,409 --> 00:20:08,289
talking yeah but that's gonna be really

00:20:05,110 --> 00:20:11,980
exciting and you know SAS cough is

00:20:08,289 --> 00:20:15,070
coming up and maybe 3.3 maybe we're

00:20:11,980 --> 00:20:18,570
timing release for it I don't know but

00:20:15,070 --> 00:20:21,549
yeah lib said us at this point I mean

00:20:18,570 --> 00:20:23,950
every language has a rapper I think I

00:20:21,549 --> 00:20:26,770
mean I i was looking at Morris trying to

00:20:23,950 --> 00:20:28,480
figure out if I could fly it yeah basic

00:20:26,770 --> 00:20:30,700
maybe doesn't have one I don't know I'm

00:20:28,480 --> 00:20:32,770
trying to think but yeah it's funny I

00:20:30,700 --> 00:20:34,809
didn't know if Erlang would cuz who the

00:20:32,770 --> 00:20:35,860
hell's burning like web stuff and

00:20:34,809 --> 00:20:38,440
hurling it doesn't really seem like a

00:20:35,860 --> 00:20:40,900
good match or at least not a build

00:20:38,440 --> 00:20:42,539
process or maybe maybe somebody out here

00:20:40,900 --> 00:20:45,220
is like you i use her like everyday

00:20:42,539 --> 00:20:46,900
i love building websites with their like

00:20:45,220 --> 00:20:50,350
but it was there i found it it's a whole

00:20:46,900 --> 00:20:52,299
project so she user lang lips house is

00:20:50,350 --> 00:20:54,220
there which is really cool because now

00:20:52,299 --> 00:20:55,720
we've kind of you know this is going

00:20:54,220 --> 00:20:57,640
around the problem of da having

00:20:55,720 --> 00:21:01,690
javascript right because now we're at

00:20:57,640 --> 00:21:03,730
javascript in a way and so this is

00:21:01,690 --> 00:21:05,080
what's been super weird and it's the

00:21:03,730 --> 00:21:08,200
first time I'm gonna say this kind of

00:21:05,080 --> 00:21:09,669
phrase publicly because it's weird but

00:21:08,200 --> 00:21:12,880
you know we really did think we were

00:21:09,669 --> 00:21:16,419
dead for a while there but it's kind of

00:21:12,880 --> 00:21:19,720
weird that it seems like we've basically

00:21:16,419 --> 00:21:21,130
become the standard that's a really

00:21:19,720 --> 00:21:23,830
weird thing to say about your stupid

00:21:21,130 --> 00:21:25,150
side project and it makes me

00:21:23,830 --> 00:21:27,580
uncomfortable because I'm like how many

00:21:25,150 --> 00:21:30,520
people are like like bragging

00:21:27,580 --> 00:21:32,950
but it's weird I mean we're proud of it

00:21:30,520 --> 00:21:35,169
and you know it's been a lot of work

00:21:32,950 --> 00:21:37,559
like it was at eight years seven years

00:21:35,169 --> 00:21:42,789
now of continuous work on this project

00:21:37,559 --> 00:21:46,299
and yeah it seems to have kind of worked

00:21:42,789 --> 00:21:47,559
this development method so the whole

00:21:46,299 --> 00:21:49,120
point of this talk is you're going to

00:21:47,559 --> 00:21:50,260
talk about the future obsess right we've

00:21:49,120 --> 00:21:52,570
been talking a little about the past and

00:21:50,260 --> 00:21:57,039
describing kind of the current stuff so

00:21:52,570 --> 00:21:59,549
what is in our bright bold future post

00:21:57,039 --> 00:22:04,379
CSS the future after sass

00:21:59,549 --> 00:22:07,350
oh that's we're getting declared dead

00:22:04,379 --> 00:22:09,509
again the hell man I thought we

00:22:07,350 --> 00:22:10,350
were done with this and I say the

00:22:09,509 --> 00:22:12,809
reports of my death are greatly

00:22:10,350 --> 00:22:15,149
exaggerated which by the way he didn't

00:22:12,809 --> 00:22:16,440
actually say just just on that out there

00:22:15,149 --> 00:22:17,399
but I still put up the quote because

00:22:16,440 --> 00:22:20,700
it's a better quote than what he

00:22:17,399 --> 00:22:22,019
actually said so you know so uh post CSS

00:22:20,700 --> 00:22:24,720
I don't know if people are familiar here

00:22:22,019 --> 00:22:28,139
has been all the rage with the super

00:22:24,720 --> 00:22:30,899
JavaScript crowd it's basically a

00:22:28,139 --> 00:22:33,629
javascript-based CSS parser that you can

00:22:30,899 --> 00:22:36,720
plug random stuff in and manipulate the

00:22:33,629 --> 00:22:38,850
CSS tree at will it's not a language

00:22:36,720 --> 00:22:40,919
it's kind of a tool set where you can

00:22:38,850 --> 00:22:43,080
just throw in stuff so rework if you're

00:22:40,919 --> 00:22:45,119
familiar with out is kind of similar and

00:22:43,080 --> 00:22:47,789
I think it's killer use case right now

00:22:45,119 --> 00:22:50,220
where there's no disagreement that it is

00:22:47,789 --> 00:22:52,559
totally awesome for this is Otto prefix

00:22:50,220 --> 00:22:54,600
er which in SAS line we used to use

00:22:52,559 --> 00:22:56,789
compass for but compasses built in Ruby

00:22:54,600 --> 00:22:59,789
and slow as hell so we don't really use

00:22:56,789 --> 00:23:01,889
it with lips ass auto prefix surplus you

00:22:59,789 --> 00:23:04,799
know notes ass great combination these

00:23:01,889 --> 00:23:07,350
days like works great helps you do all

00:23:04,799 --> 00:23:10,619
the vendor stuff it's a plus you should

00:23:07,350 --> 00:23:12,450
probably be using it and why like we

00:23:10,619 --> 00:23:15,090
can't do that in SAS right now like in

00:23:12,450 --> 00:23:17,489
libs SQ can't automatically pre-fit like

00:23:15,090 --> 00:23:22,169
if you put in an attribute or sorry or

00:23:17,489 --> 00:23:24,269
property name but you put it in like we

00:23:22,169 --> 00:23:25,859
can do dynamic stuff but i guess you

00:23:24,269 --> 00:23:27,509
could theoretically pull up but it's not

00:23:25,859 --> 00:23:29,509
pretty like this would be kind of a

00:23:27,509 --> 00:23:32,279
weird thing to do in the language itself

00:23:29,509 --> 00:23:34,259
we can't do this post processing stuff

00:23:32,279 --> 00:23:36,210
and it's because we don't make the purse

00:23:34,259 --> 00:23:38,340
tree available in our interface so notes

00:23:36,210 --> 00:23:39,779
ass we try to keep the interface simple

00:23:38,340 --> 00:23:41,549
so we don't currently we can't just like

00:23:39,779 --> 00:23:44,129
hand you all your CSS and let you

00:23:41,549 --> 00:23:48,840
manipulate it with arbitrary code in

00:23:44,129 --> 00:23:51,179
JavaScript yet I mean we're going to I

00:23:48,840 --> 00:23:52,259
don't know what that means for anybody

00:23:51,179 --> 00:23:53,730
but we're like hey that's a good idea

00:23:52,259 --> 00:23:54,840
she totally be able to do that like we

00:23:53,730 --> 00:23:56,940
should have a JavaScript plugin that

00:23:54,840 --> 00:23:59,279
allows you to arbitrarily change it you

00:23:56,940 --> 00:24:02,970
know kind of later in the sequence of

00:23:59,279 --> 00:24:07,529
the parse and then one of the big things

00:24:02,970 --> 00:24:09,409
that post CSS has been a I would say

00:24:07,529 --> 00:24:12,980
maybe some of their marketing is a

00:24:09,409 --> 00:24:15,509
little nagging

00:24:12,980 --> 00:24:18,629
and they're they're kind of mean about

00:24:15,509 --> 00:24:21,960
our speed with lube SAS including they

00:24:18,629 --> 00:24:24,179
they they love this so you know here's

00:24:21,960 --> 00:24:28,230
SAS which we all admitted Ruby says

00:24:24,179 --> 00:24:30,299
wasn't not a fast language so Ruby SAS

00:24:28,230 --> 00:24:32,970
is so slow that it linked in they

00:24:30,299 --> 00:24:34,919
basically had to build a computation

00:24:32,970 --> 00:24:37,200
cluster to compile their CSS because

00:24:34,919 --> 00:24:38,700
they had like a hundred people or

00:24:37,200 --> 00:24:40,320
something crazy writing SAS every day

00:24:38,700 --> 00:24:42,269
and like they have all these crazy

00:24:40,320 --> 00:24:44,340
modules and stuff and so it took like a

00:24:42,269 --> 00:24:47,159
serious amount of computational time

00:24:44,340 --> 00:24:48,570
like an infrastructure not good not a

00:24:47,159 --> 00:24:49,830
thing we intended but then again

00:24:48,570 --> 00:24:51,509
honestly we never build this language

00:24:49,830 --> 00:24:52,950
thinking that somebody would have 100

00:24:51,509 --> 00:24:54,960
people writing it every day like that's

00:24:52,950 --> 00:24:56,580
not where we're just like oh we've got a

00:24:54,960 --> 00:24:58,460
good side project idea 100 people be

00:24:56,580 --> 00:25:01,609
writing it in the same office every day

00:24:58,460 --> 00:25:04,440
it just wasn't how we thought of it

00:25:01,609 --> 00:25:06,840
anyhow as I mentioned earlier with goals

00:25:04,440 --> 00:25:09,590
we never focused on speed like we wrote

00:25:06,840 --> 00:25:13,259
it in lib SAS is written in C and C++

00:25:09,590 --> 00:25:16,379
and our goal is compatibility like it

00:25:13,259 --> 00:25:18,809
was way faster I mean it destroys like

00:25:16,379 --> 00:25:20,700
SAS its way way way faster and actually

00:25:18,809 --> 00:25:24,320
i think if you really compare these two

00:25:20,700 --> 00:25:26,279
in a larger project obsesses even better

00:25:24,320 --> 00:25:28,259
with performance so if you have a large

00:25:26,279 --> 00:25:31,580
large project and you're not using lips

00:25:28,259 --> 00:25:34,590
ass googled put your local rapper

00:25:31,580 --> 00:25:36,149
because we're pretty slow down but we

00:25:34,590 --> 00:25:37,980
just never even like took 10 minutes on

00:25:36,149 --> 00:25:39,480
it like our goal is compatibility the

00:25:37,980 --> 00:25:40,950
problem that our users were having we

00:25:39,480 --> 00:25:43,080
weren't having people who use ellipsis

00:25:40,950 --> 00:25:45,960
go oh it's still too slow or actually

00:25:43,080 --> 00:25:47,820
like their issue was that we wanted to

00:25:45,960 --> 00:25:50,309
have all the features right so that has

00:25:47,820 --> 00:25:52,529
been the focus but you know when

00:25:50,309 --> 00:25:55,379
somebody starts shit-kicking marcelo

00:25:52,529 --> 00:25:57,080
greeter got in 3.3 he just decided to

00:25:55,379 --> 00:25:59,159
take a couple days and do some obvious

00:25:57,080 --> 00:26:00,389
speed improvements just some stuff we

00:25:59,159 --> 00:26:02,580
had i think we're doing memory

00:26:00,389 --> 00:26:04,649
management kind of lazily cleaning it up

00:26:02,580 --> 00:26:06,809
in like the end we were doing stuff that

00:26:04,649 --> 00:26:08,970
little slower than then it could be and

00:26:06,809 --> 00:26:12,749
so he did a pull request that got merged

00:26:08,970 --> 00:26:15,269
in and so i reran their benchmarks which

00:26:12,749 --> 00:26:16,559
I didn't get pushed this yet because all

00:26:15,269 --> 00:26:19,499
you have to do is change take the post

00:26:16,559 --> 00:26:22,109
CSS benchmarks point it to our beta

00:26:19,499 --> 00:26:23,759
release and run it again and so these

00:26:22,109 --> 00:26:24,760
are the new is the first time anybody's

00:26:23,759 --> 00:26:26,140
saying he's by the way I mean

00:26:24,760 --> 00:26:31,390
you can run them yourself but what he

00:26:26,140 --> 00:26:33,300
has so yeah we went not that this was a

00:26:31,390 --> 00:26:37,720
race we weren't even really that into

00:26:33,300 --> 00:26:42,880
but whatever so yeah boob size is pretty

00:26:37,720 --> 00:26:45,640
fast also I'll note that this is post

00:26:42,880 --> 00:26:49,600
ESS only doing two or three things and I

00:26:45,640 --> 00:26:51,820
think nesting include variables and one

00:26:49,600 --> 00:26:53,860
other thing it doesn't include their

00:26:51,820 --> 00:26:55,210
algorithms for extend or imports or

00:26:53,860 --> 00:26:57,550
anything else that we're also doing

00:26:55,210 --> 00:26:59,170
color math has not included in this

00:26:57,550 --> 00:27:01,180
which is fine maybe you don't use that

00:26:59,170 --> 00:27:02,650
but I use a lot of color bats when I'm

00:27:01,180 --> 00:27:06,520
writing this stuff so we're kind of

00:27:02,650 --> 00:27:10,380
doing all of it and yeah good work more

00:27:06,520 --> 00:27:13,480
cell yeah so fully feature complete

00:27:10,380 --> 00:27:17,170
start I mean hopefully we're pretty sure

00:27:13,480 --> 00:27:19,690
and yeah it's stupid fast and we're

00:27:17,170 --> 00:27:23,950
really happy with that and you but like

00:27:19,690 --> 00:27:26,080
okay so you know there's some people

00:27:23,950 --> 00:27:28,750
being like oh let's get rid of us now

00:27:26,080 --> 00:27:30,640
it's dead or something and you like

00:27:28,750 --> 00:27:33,310
we're just gonna keep doing what we're

00:27:30,640 --> 00:27:34,990
doing like I think it's funny you almost

00:27:33,310 --> 00:27:39,130
as a project get mature you're just like

00:27:34,990 --> 00:27:40,360
yep okay like sure I don't know you can

00:27:39,130 --> 00:27:41,980
switch all if you can switch on we don't

00:27:40,360 --> 00:27:46,330
care we're just gonna do the best job we

00:27:41,980 --> 00:27:49,000
can do I mean I would say I'm a little

00:27:46,330 --> 00:27:51,220
worried about I'm not sure it's the best

00:27:49,000 --> 00:27:55,410
engineering practice to build your own

00:27:51,220 --> 00:27:57,520
de facto I'm use their de facto on a

00:27:55,410 --> 00:27:59,190
self-constructed different than

00:27:57,520 --> 00:28:01,990
everybody else's version of a

00:27:59,190 --> 00:28:03,760
preprocessor like where if you went and

00:28:01,990 --> 00:28:05,650
use somebody else's computer and they'd

00:28:03,760 --> 00:28:06,880
installed an extra extension or if used

00:28:05,650 --> 00:28:09,010
a different project you might have a

00:28:06,880 --> 00:28:11,500
different version of how import works or

00:28:09,010 --> 00:28:13,810
something which is kind of the post ESS

00:28:11,500 --> 00:28:16,960
model if you just kind of grab you can

00:28:13,810 --> 00:28:19,990
just replace how import works I just see

00:28:16,960 --> 00:28:21,730
dragons just you know sometimes it's

00:28:19,990 --> 00:28:25,840
nice to be like okay we all agree that

00:28:21,730 --> 00:28:27,460
this is how it works and that's why it's

00:28:25,840 --> 00:28:29,470
funny like being a weird pseudo standard

00:28:27,460 --> 00:28:32,200
to it's like weird tables of flipped

00:28:29,470 --> 00:28:35,050
okay whatever I mean it worries me is a

00:28:32,200 --> 00:28:37,540
like CTO kind of guy I'm like and like

00:28:35,050 --> 00:28:38,190
Lisp is a lovely idea that you can build

00:28:37,540 --> 00:28:40,320
anything

00:28:38,190 --> 00:28:41,659
of it however I'm assuming most people

00:28:40,320 --> 00:28:45,330
here are not currently building your own

00:28:41,659 --> 00:28:48,509
languages custom by list modules at your

00:28:45,330 --> 00:28:50,940
job it's a little and if you are a plus

00:28:48,509 --> 00:28:52,440
you're a better engineer than me so let

00:28:50,940 --> 00:28:57,389
me talk about I glass real fast which is

00:28:52,440 --> 00:28:58,860
a new SAS project it's actually a

00:28:57,389 --> 00:29:00,360
linkedin project it's kind of not

00:28:58,860 --> 00:29:02,340
official at this point it's an

00:29:00,360 --> 00:29:04,259
experimental idea but the idea is

00:29:02,340 --> 00:29:07,860
basically to use NPM packages for SAS

00:29:04,259 --> 00:29:10,889
styles and extension so you can include

00:29:07,860 --> 00:29:12,720
swimming in your your NPM package lists

00:29:10,889 --> 00:29:15,360
install it and then in your sass you can

00:29:12,720 --> 00:29:17,100
just import those modules and you don't

00:29:15,360 --> 00:29:21,090
have to actually keep them in the same

00:29:17,100 --> 00:29:27,240
directory um it's it's pretty cool uh i

00:29:21,090 --> 00:29:29,070
would say i'm a little I use NPM and I

00:29:27,240 --> 00:29:31,320
love the people who work there you're

00:29:29,070 --> 00:29:34,080
good people but there's it's a bit of a

00:29:31,320 --> 00:29:36,299
funky package manager manager to me I'm

00:29:34,080 --> 00:29:39,299
used to rubygems where you could lock

00:29:36,299 --> 00:29:42,389
things and dependencies are resolved

00:29:39,299 --> 00:29:44,159
instead of just copied everywhere so I'm

00:29:42,389 --> 00:29:46,620
a little I mean this is chris Epstein's

00:29:44,159 --> 00:29:47,850
running this project I'm a little I

00:29:46,620 --> 00:29:49,620
don't know if I want like we should go

00:29:47,850 --> 00:29:52,019
build our own or what and I definitely

00:29:49,620 --> 00:29:54,059
using NPM most people in their front end

00:29:52,019 --> 00:29:58,019
build pipelines these days using NPM so

00:29:54,059 --> 00:30:02,549
obviously that's a pretty good match but

00:29:58,019 --> 00:30:06,350
yeah that's my response you know have

00:30:02,549 --> 00:30:09,840
fun yeah so it works only with notes ass

00:30:06,350 --> 00:30:12,720
so phillipps ass wrapper and there's

00:30:09,840 --> 00:30:15,509
basically a quick search if you look at

00:30:12,720 --> 00:30:17,460
the keyword I glass module on NPM and

00:30:15,509 --> 00:30:19,620
you can look up anything you can include

00:30:17,460 --> 00:30:22,289
like this basically it works now so if

00:30:19,620 --> 00:30:24,539
you have a note I mean it's beta so I

00:30:22,289 --> 00:30:28,799
don't know well it's a use it why not

00:30:24,539 --> 00:30:31,529
right but it's basically things that you

00:30:28,799 --> 00:30:35,220
know you can do like like here's one is

00:30:31,529 --> 00:30:37,500
you can npm install save dev spinners

00:30:35,220 --> 00:30:39,570
which is a project and they have a

00:30:37,500 --> 00:30:41,879
package file that they built that's kind

00:30:39,570 --> 00:30:43,769
of set up the way that I glass needs it

00:30:41,879 --> 00:30:45,450
and then you can basically just import

00:30:43,769 --> 00:30:47,549
it in your status files and then include

00:30:45,450 --> 00:30:49,649
spinner on a spinners and magically

00:30:47,549 --> 00:30:51,760
you've got pure CSS spinners and you

00:30:49,649 --> 00:30:54,790
don't have to version the stuff or copy

00:30:51,760 --> 00:30:59,080
too many annoying stuff I mean that's a

00:30:54,790 --> 00:31:01,240
really simple example but you kind of

00:30:59,080 --> 00:31:02,890
get the idea of this we're so one of the

00:31:01,240 --> 00:31:05,940
really interesting things with sass that

00:31:02,890 --> 00:31:09,100
I think people don't think of often is

00:31:05,940 --> 00:31:12,880
one of the weird things we do is allow

00:31:09,100 --> 00:31:15,390
stuff to not be output so you can write

00:31:12,880 --> 00:31:18,580
a lot of helper functions right like

00:31:15,390 --> 00:31:19,840
sorry being that we're on the pre

00:31:18,580 --> 00:31:22,570
compile time right that we are a

00:31:19,840 --> 00:31:24,730
compiler for CSS if you include a

00:31:22,570 --> 00:31:27,880
library and only use one thing then your

00:31:24,730 --> 00:31:29,740
impact on your CSS is only one thing if

00:31:27,880 --> 00:31:32,320
you try to there's definitely talk when

00:31:29,740 --> 00:31:34,360
people say oh you know you know sasses

00:31:32,320 --> 00:31:36,040
is you know maybe the w3c's can add

00:31:34,360 --> 00:31:37,450
features and this was actually our

00:31:36,040 --> 00:31:39,580
belief initially I was like this is

00:31:37,450 --> 00:31:42,540
crazy that CSS doesn't do some of this

00:31:39,580 --> 00:31:45,760
stuff so clearly they're going to add it

00:31:42,540 --> 00:31:48,250
it's funny because the way the browser

00:31:45,760 --> 00:31:50,320
thinks is not the way a developer things

00:31:48,250 --> 00:31:51,700
and it's probably not a good idea for

00:31:50,320 --> 00:31:53,680
the browser to have to download the

00:31:51,700 --> 00:31:57,370
entire spinners library with everything

00:31:53,680 --> 00:31:58,450
in it having a compile step really make

00:31:57,370 --> 00:31:59,650
some sense because you can have

00:31:58,450 --> 00:32:00,970
libraries and you can throw away what

00:31:59,650 --> 00:32:03,970
you don't need and you actually compile

00:32:00,970 --> 00:32:05,380
down to something much smaller and you

00:32:03,970 --> 00:32:07,510
know I think people tend to think of

00:32:05,380 --> 00:32:09,220
sass tends to end up with bigger CSS

00:32:07,510 --> 00:32:11,700
which in some times it absolutely can if

00:32:09,220 --> 00:32:14,260
you you know having fun with all life

00:32:11,700 --> 00:32:17,170
but what it also does is allow you to

00:32:14,260 --> 00:32:19,000
use stuff and not included like have the

00:32:17,170 --> 00:32:20,350
powers of something be able to bring in

00:32:19,000 --> 00:32:22,210
libraries just like you would in almost

00:32:20,350 --> 00:32:23,860
any other language and it doesn't have

00:32:22,210 --> 00:32:26,230
to be downloaded to every single user's

00:32:23,860 --> 00:32:28,240
computer so these kind of pre steps make

00:32:26,230 --> 00:32:30,100
sense currently there any point of the

00:32:28,240 --> 00:32:32,550
CSS working group isn't really thinking

00:32:30,100 --> 00:32:34,810
of that stuff right now their main focus

00:32:32,550 --> 00:32:37,030
and we work pretty closely with them and

00:32:34,810 --> 00:32:38,860
their main focus is really what can you

00:32:37,030 --> 00:32:40,510
do in the browser and they're worried

00:32:38,860 --> 00:32:45,610
about extensibility of what can you do

00:32:40,510 --> 00:32:48,610
in the browser so for instance whoa okay

00:32:45,610 --> 00:32:51,310
ie does it I don't even have slides for

00:32:48,610 --> 00:32:52,600
this here's a mini-ramp like the way

00:32:51,310 --> 00:32:55,630
that we do layout on the web right now

00:32:52,600 --> 00:32:57,670
sucks like it's terrible it's totally

00:32:55,630 --> 00:33:00,250
the reason why the web was so good

00:32:57,670 --> 00:33:05,230
original e so the effect you could write

00:33:00,250 --> 00:33:07,960
a header to P tags wrap it in HTML

00:33:05,230 --> 00:33:09,910
set a color walk away when it went to

00:33:07,960 --> 00:33:11,590
Sammy's machine it was responsive the

00:33:09,910 --> 00:33:13,299
first web was fully responsive it could

00:33:11,590 --> 00:33:15,790
get this big bat that you could change

00:33:13,299 --> 00:33:17,860
font size sizes like it was so simple

00:33:15,790 --> 00:33:20,860
the original concept of a page based

00:33:17,860 --> 00:33:23,590
layout system made a ton of sense and

00:33:20,860 --> 00:33:24,880
it's why it took off like totally that

00:33:23,590 --> 00:33:27,460
was awesome i don't think that was a

00:33:24,880 --> 00:33:30,370
mistake but the way that we all develop

00:33:27,460 --> 00:33:31,780
these days is very is not like that i

00:33:30,370 --> 00:33:33,610
mean we're basically fighting with a

00:33:31,780 --> 00:33:35,770
page layout system with something that

00:33:33,610 --> 00:33:39,040
isn't a page we called a web page but

00:33:35,770 --> 00:33:40,960
it's not anymore I mean we before they

00:33:39,040 --> 00:33:43,150
added a couple of features to CSS you

00:33:40,960 --> 00:33:45,600
know we all had to do table based only I

00:33:43,150 --> 00:33:49,059
mean that's I'm old enough that that was

00:33:45,600 --> 00:33:53,290
how I started on the web was working

00:33:49,059 --> 00:33:55,630
with tables I just leave up the spinner

00:33:53,290 --> 00:33:57,010
slide no but we have to change this

00:33:55,630 --> 00:33:58,390
right we need alternate layout methods

00:33:57,010 --> 00:33:59,919
absolutely and you know there's

00:33:58,390 --> 00:34:01,480
something like it's funny as the

00:33:59,919 --> 00:34:04,960
standards process has been trying to

00:34:01,480 --> 00:34:07,980
include alternate layout methods I'm

00:34:04,960 --> 00:34:07,980
blanking on the name of it what's it a

00:34:08,100 --> 00:34:15,580
target there's a one that's got some

00:34:10,720 --> 00:34:20,230
support no what fluxbox there you go

00:34:15,580 --> 00:34:21,790
fluxbox exactly sorry even flexbox is

00:34:20,230 --> 00:34:23,800
kind of cool but it's it's weird that it

00:34:21,790 --> 00:34:25,210
came through a standards process and for

00:34:23,800 --> 00:34:28,619
anybody's tried to use flexbox it's a

00:34:25,210 --> 00:34:31,030
bit quirky it's maybe not the way that

00:34:28,619 --> 00:34:32,859
like it hasn't totally taken off

00:34:31,030 --> 00:34:34,090
everywhere it's got some cool stuff but

00:34:32,859 --> 00:34:36,820
you know we should be able to replace

00:34:34,090 --> 00:34:39,429
that at will like your website should be

00:34:36,820 --> 00:34:41,980
able to decide based on its design what

00:34:39,429 --> 00:34:43,840
kind of layout system like I'm a big fan

00:34:41,980 --> 00:34:45,159
of constraint based design which I think

00:34:43,840 --> 00:34:48,639
will be the future of the web see you

00:34:45,159 --> 00:34:50,710
Vickie I'm a big fan of constraint basis

00:34:48,639 --> 00:34:52,270
I name used on iOS stuff it's really

00:34:50,710 --> 00:34:55,109
really powerful and it makes way more

00:34:52,270 --> 00:34:58,960
sense for how we design apps these days

00:34:55,109 --> 00:34:59,890
yeah so what they're worried what

00:34:58,960 --> 00:35:01,869
they're trying to do is hook in

00:34:59,890 --> 00:35:04,180
JavaScript into CSS you can use your own

00:35:01,869 --> 00:35:06,490
custom properties things that only a

00:35:04,180 --> 00:35:08,080
browser can do so the browser is

00:35:06,490 --> 00:35:09,640
responsible for the layout so if you do

00:35:08,080 --> 00:35:10,840
this in JavaScript that's where it makes

00:35:09,640 --> 00:35:13,210
sense that's where this should be

00:35:10,840 --> 00:35:15,340
happening anyhow so that could be a

00:35:13,210 --> 00:35:17,020
pretty exciting future and you know

00:35:15,340 --> 00:35:18,560
we're always just going to be there

00:35:17,020 --> 00:35:20,870
helping you to write that code

00:35:18,560 --> 00:35:23,780
up there here's my quick little thing on

00:35:20,870 --> 00:35:26,020
Natalie's design style which is sasses

00:35:23,780 --> 00:35:29,690
design style which is think it through

00:35:26,020 --> 00:35:31,640
always always we don't rush on anything

00:35:29,690 --> 00:35:33,110
your pull request if it changes

00:35:31,640 --> 00:35:37,130
functionality will not get immediately

00:35:33,110 --> 00:35:38,870
accepted we always avoid ambiguity we're

00:35:37,130 --> 00:35:40,610
really strict about this if anything

00:35:38,870 --> 00:35:42,980
looks like it might be something else we

00:35:40,610 --> 00:35:45,920
don't do it or we find it a way to do it

00:35:42,980 --> 00:35:47,420
that is like if you ever go to the test

00:35:45,920 --> 00:35:49,670
issue tracker if you're a serious ask

00:35:47,420 --> 00:35:51,470
user it's super interesting going there

00:35:49,670 --> 00:35:53,360
because these conversations go on for

00:35:51,470 --> 00:35:55,400
years where people were debating

00:35:53,360 --> 00:35:57,740
different things trying to figure out

00:35:55,400 --> 00:36:00,290
what's the most clear what won't like

00:35:57,740 --> 00:36:02,870
we're looking at the newest CSS specs

00:36:00,290 --> 00:36:04,250
that are proposals that probably won't

00:36:02,870 --> 00:36:06,110
be to actually we've got a bit by that a

00:36:04,250 --> 00:36:07,520
couple times we kind of like avoided

00:36:06,110 --> 00:36:10,400
something because there was a spec and

00:36:07,520 --> 00:36:11,690
then that speck was abandoned and we're

00:36:10,400 --> 00:36:14,210
like now we probably could have used

00:36:11,690 --> 00:36:15,560
that syntax then but never be ambiguous

00:36:14,210 --> 00:36:16,850
that's the worst thing for a language

00:36:15,560 --> 00:36:19,460
you need somebody else to go look at the

00:36:16,850 --> 00:36:21,980
code and go oh I get it don't do it

00:36:19,460 --> 00:36:24,890
because of the other kids do it that's a

00:36:21,980 --> 00:36:26,600
big one which this is my mini play we

00:36:24,890 --> 00:36:29,450
get we get tickets like this all the

00:36:26,600 --> 00:36:32,320
time he's crazy SAS can't do some

00:36:29,450 --> 00:36:34,490
feature that another language has

00:36:32,320 --> 00:36:36,920
Natalie it's being discussed here and

00:36:34,490 --> 00:36:39,560
some other thread lots of issues to

00:36:36,920 --> 00:36:42,140
figure out first cry I'm switching to

00:36:39,560 --> 00:36:44,060
the other one you guys suck that's

00:36:42,140 --> 00:36:45,110
totally people threaten all the time

00:36:44,060 --> 00:36:48,380
like that's the worst thing I could do

00:36:45,110 --> 00:36:50,330
too is like oh no come back and so

00:36:48,380 --> 00:36:51,410
Natalie's like hey I mean we haven't

00:36:50,330 --> 00:36:53,210
figured out all the issues i'm not going

00:36:51,410 --> 00:36:55,370
to build it till we have we're not sure

00:36:53,210 --> 00:36:57,230
it's a good idea or needed at all and

00:36:55,370 --> 00:36:59,210
then six months later inevitably that

00:36:57,230 --> 00:37:01,790
user is still using us it is just like

00:36:59,210 --> 00:37:03,560
hey what about that which case we're

00:37:01,790 --> 00:37:06,620
like go look at number 256 we're still

00:37:03,560 --> 00:37:09,110
discussing it yeah so here's another

00:37:06,620 --> 00:37:11,450
quick write the end another i call it a

00:37:09,110 --> 00:37:14,930
pre pre announcement and this is where

00:37:11,450 --> 00:37:16,250
you'll see especially with 3.5 we're

00:37:14,930 --> 00:37:18,590
definitely include something along this

00:37:16,250 --> 00:37:20,840
and this is a lot of actually the stuff

00:37:18,590 --> 00:37:22,010
i'm saying i'm getting from i went

00:37:20,840 --> 00:37:24,320
through and looked at the issues of what

00:37:22,010 --> 00:37:26,330
we all kind of agreed on when discussing

00:37:24,320 --> 00:37:29,210
this which is import is getting a

00:37:26,330 --> 00:37:32,150
makeover we start with a very simple

00:37:29,210 --> 00:37:35,390
import you can only import s CSS files

00:37:32,150 --> 00:37:37,849
it brings them directly and there's no

00:37:35,390 --> 00:37:39,980
way to import once there's no way to not

00:37:37,849 --> 00:37:42,559
import like to say don't express your

00:37:39,980 --> 00:37:44,180
CSS I just want your functions there's

00:37:42,559 --> 00:37:46,670
no there's no module system the

00:37:44,180 --> 00:37:48,319
namespace for variables its global at

00:37:46,670 --> 00:37:49,910
this point because you just write a

00:37:48,319 --> 00:37:52,460
variable and file a and somehow

00:37:49,910 --> 00:37:55,369
magically it ends up way over here and

00:37:52,460 --> 00:37:56,809
you know that's that's cool it worked it

00:37:55,369 --> 00:37:58,460
worked before but I mean that's what

00:37:56,809 --> 00:38:01,549
mentioned you know probably a lot of you

00:37:58,460 --> 00:38:04,339
are using SAS on big teams and having

00:38:01,549 --> 00:38:07,700
this global namespace is not we do in

00:38:04,339 --> 00:38:12,160
programming so these are the two issues

00:38:07,700 --> 00:38:15,289
I think that are most interesting 353 in

00:38:12,160 --> 00:38:16,520
1094 I tend I knew fours like summary of

00:38:15,289 --> 00:38:20,299
all the things that we're looking at

00:38:16,520 --> 00:38:21,890
right now to go in a 3.5 but some of our

00:38:20,299 --> 00:38:25,010
goals are want to do more parallel

00:38:21,890 --> 00:38:27,170
building we're pretty fast right now but

00:38:25,010 --> 00:38:28,730
we'd really rather this go multi-core so

00:38:27,170 --> 00:38:30,529
we need to know that a file you know

00:38:28,730 --> 00:38:32,720
when they depend on a different file we

00:38:30,529 --> 00:38:34,730
need to know that information because if

00:38:32,720 --> 00:38:36,319
we file one file take that data send it

00:38:34,730 --> 00:38:38,410
down to two we can do those two we can't

00:38:36,319 --> 00:38:41,480
compile those two files at the same time

00:38:38,410 --> 00:38:43,849
which nobody's asking for but I don't

00:38:41,480 --> 00:38:45,170
know we're going to build it we at least

00:38:43,849 --> 00:38:47,420
one the languages support it how about

00:38:45,170 --> 00:38:48,770
that the language should back this up we

00:38:47,420 --> 00:38:51,349
might not build it in four I mean we're

00:38:48,770 --> 00:38:52,579
definitely not building that and but the

00:38:51,349 --> 00:38:54,740
language itself will support that kind

00:38:52,579 --> 00:38:58,130
of thing no more global variables

00:38:54,740 --> 00:38:59,930
they're going to be gone you can enable

00:38:58,130 --> 00:39:03,140
them if you like so we don't blow up

00:38:59,930 --> 00:39:04,940
your but basically if you go into a

00:39:03,140 --> 00:39:07,430
file this is the current design finger

00:39:04,940 --> 00:39:10,069
dot CSS and you set my part of blue then

00:39:07,430 --> 00:39:13,039
you say use thinger and then figured out

00:39:10,069 --> 00:39:14,480
my bar so you might the way you'd

00:39:13,039 --> 00:39:16,279
probably do this is how you know like

00:39:14,480 --> 00:39:17,930
your VARs folder a lot of people have

00:39:16,279 --> 00:39:19,599
other color files or something like that

00:39:17,930 --> 00:39:22,220
or something like that you include that

00:39:19,599 --> 00:39:25,369
on most dear files when you need to use

00:39:22,220 --> 00:39:26,839
it and that way our whole compiled tree

00:39:25,369 --> 00:39:28,099
will know that the first thing we need

00:39:26,839 --> 00:39:29,650
to do is go look at that enviro file

00:39:28,099 --> 00:39:32,150
because pretty much everybody uses it

00:39:29,650 --> 00:39:33,920
instead of using the kind of weird like

00:39:32,150 --> 00:39:37,700
right now it's strange we're actually

00:39:33,920 --> 00:39:39,289
really every single time you import like

00:39:37,700 --> 00:39:42,529
your VAR if you import VAR file multiple

00:39:39,289 --> 00:39:44,750
times it will be reprocessed not ideal

00:39:42,529 --> 00:39:45,619
but if it outputted CSS it supposed to

00:39:44,750 --> 00:39:47,509
go there you're supposed to

00:39:45,619 --> 00:39:50,210
spect that if I if I say import a import

00:39:47,509 --> 00:39:52,089
be import a you would expect like you

00:39:50,210 --> 00:39:54,710
might expect the output of a to show up

00:39:52,089 --> 00:39:56,599
and we're trying to get rid of had we're

00:39:54,710 --> 00:39:58,519
definitely do import once this has been

00:39:56,599 --> 00:40:01,279
a long requested feature especially for

00:39:58,519 --> 00:40:03,079
libraries we're going to be announcing

00:40:01,279 --> 00:40:05,569
more tests calm 2015 which will be in

00:40:03,079 --> 00:40:07,190
austin and november to look out if your

00:40:05,569 --> 00:40:09,440
users look out for twitter because we'll

00:40:07,190 --> 00:40:11,539
definitely be making more solid version

00:40:09,440 --> 00:40:13,880
civ of what i'm saying here but import

00:40:11,539 --> 00:40:15,259
is going to be modular i think we're

00:40:13,880 --> 00:40:17,119
going to base it mostly off the python

00:40:15,259 --> 00:40:21,079
model if you're familiar with that it's

00:40:17,119 --> 00:40:24,349
pretty pretty similar and yeah i also

00:40:21,079 --> 00:40:25,369
want to say so word set the other

00:40:24,349 --> 00:40:27,609
project i'm working on which is a

00:40:25,369 --> 00:40:30,410
collaborative open-source dictionary

00:40:27,609 --> 00:40:33,740
we're doing a talk it for 15 today and

00:40:30,410 --> 00:40:34,970
the emerging room about that so it's

00:40:33,740 --> 00:40:37,609
talk about linguistics it's kind of a

00:40:34,970 --> 00:40:40,160
start up on learning about linguistics I

00:40:37,609 --> 00:40:42,410
really actually think that you know

00:40:40,160 --> 00:40:43,819
linguistics while it's not something

00:40:42,410 --> 00:40:46,039
we're talking about right now very often

00:40:43,819 --> 00:40:48,619
is going to be huge like this really

00:40:46,039 --> 00:40:49,519
matters to the next phase of the biggest

00:40:48,619 --> 00:40:51,289
technologies we're going to be working

00:40:49,519 --> 00:40:53,359
with I'm one hundred percent convinced

00:40:51,289 --> 00:40:55,549
and that's what we're trying to do we're

00:40:53,359 --> 00:40:57,650
trying to do it open and nice and happy

00:40:55,549 --> 00:41:00,589
and friendly and not all owned by Google

00:40:57,650 --> 00:41:03,619
no offense google employees but yeah

00:41:00,589 --> 00:41:06,829
that's what we'll be talking about so

00:41:03,619 --> 00:41:09,710
yeah that's it yes yeah we're at a time

00:41:06,829 --> 00:41:11,900
so i was going to take questions this is

00:41:09,710 --> 00:41:13,640
this is the lib size development done

00:41:11,900 --> 00:41:15,859
animated and i'm just going to leave

00:41:13,640 --> 00:41:17,180
that up so thanks for listening follow

00:41:15,859 --> 00:41:18,529
me at H Callen please how do I talk

00:41:17,180 --> 00:41:21,079
later if you're around and you're

00:41:18,529 --> 00:41:23,380
interested so thanks for listening me

00:41:21,079 --> 00:41:23,380
babble

00:41:23,760 --> 00:41:25,820

YouTube URL: https://www.youtube.com/watch?v=WKdyfPSzW_c


