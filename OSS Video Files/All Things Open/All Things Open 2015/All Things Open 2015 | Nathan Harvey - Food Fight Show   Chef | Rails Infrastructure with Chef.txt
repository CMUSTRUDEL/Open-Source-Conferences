Title: All Things Open 2015 | Nathan Harvey - Food Fight Show   Chef | Rails Infrastructure with Chef
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2014 All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,190 --> 00:00:08,460
so hello my name is Nathan Harvey and

00:00:06,540 --> 00:00:10,460
I'm gonna walk you through this a talk

00:00:08,460 --> 00:00:12,719
called intro to infrastructure as code

00:00:10,460 --> 00:00:14,700
which is not what it says on your

00:00:12,719 --> 00:00:16,980
schedule and it's not really what this

00:00:14,700 --> 00:00:18,900
talk is about so much I think I didn't

00:00:16,980 --> 00:00:20,220
update the title slide so you'll have to

00:00:18,900 --> 00:00:21,359
forgive me there so we're definitely

00:00:20,220 --> 00:00:23,490
going to talk about testing your

00:00:21,359 --> 00:00:24,900
infrastructure code specifically testing

00:00:23,490 --> 00:00:26,760
your infrastructure code for a rails

00:00:24,900 --> 00:00:28,380
application although if what you came

00:00:26,760 --> 00:00:29,519
here to do is learn a lot about rails

00:00:28,380 --> 00:00:31,199
we're not going to learn a lot about

00:00:29,519 --> 00:00:32,640
rails if you came here to learn a little

00:00:31,199 --> 00:00:34,620
bit about testing infrastructure code

00:00:32,640 --> 00:00:38,370
we're totally going to get you there so

00:00:34,620 --> 00:00:39,989
Who am I my name is Nathan Harvey there

00:00:38,370 --> 00:00:41,219
are a couple of other things about me

00:00:39,989 --> 00:00:43,800
there that you can read on the slide

00:00:41,219 --> 00:00:45,690
most important of which is if you want

00:00:43,800 --> 00:00:48,270
to follow me on twitter you can do so as

00:00:45,690 --> 00:00:50,309
long as you misspelled my name so the

00:00:48,270 --> 00:00:52,770
rule in my house was mom picks the names

00:00:50,309 --> 00:00:54,870
and dad misspells them and that was true

00:00:52,770 --> 00:00:56,820
for me and all of my siblings asked me

00:00:54,870 --> 00:00:58,260
at the break how my other siblings names

00:00:56,820 --> 00:01:00,629
are misspelled and I'll happily share

00:00:58,260 --> 00:01:03,239
that with you I also found out this

00:01:00,629 --> 00:01:05,010
morning that I have a work anniversary

00:01:03,239 --> 00:01:07,290
that I'd like to share with you and um

00:01:05,010 --> 00:01:09,900
can you guess how I found out I have a

00:01:07,290 --> 00:01:11,610
work anniversary yeah linkedin I started

00:01:09,900 --> 00:01:13,380
getting emails from people hunt linkedin

00:01:11,610 --> 00:01:15,659
saying congratulations on your working

00:01:13,380 --> 00:01:17,909
anniversary as it turns out a year ago I

00:01:15,659 --> 00:01:20,250
got my master in dev ops and I am now a

00:01:17,909 --> 00:01:22,140
certified dev up and you might think

00:01:20,250 --> 00:01:24,990
that that's a joke but you'd be wrong

00:01:22,140 --> 00:01:27,840
because Patrick Dubois signed my masters

00:01:24,990 --> 00:01:30,090
in DevOps certificate because last year

00:01:27,840 --> 00:01:31,680
was the five-year anniversary of DevOps

00:01:30,090 --> 00:01:34,350
days and I was there and those were the

00:01:31,680 --> 00:01:36,540
badges and so it's a real thing I've

00:01:34,350 --> 00:01:39,750
actually been certified in DevOps as a

00:01:36,540 --> 00:01:40,560
master for a year now so you can clap

00:01:39,750 --> 00:01:42,570
that because that's the kind of

00:01:40,560 --> 00:01:45,360
important milestone right it's pretty

00:01:42,570 --> 00:01:47,070
cool awesome enough about me how about

00:01:45,360 --> 00:01:48,570
you are you a system administrator could

00:01:47,070 --> 00:01:50,430
you just raise your hand if your answer

00:01:48,570 --> 00:01:54,509
is yes to these questions that I'm about

00:01:50,430 --> 00:01:56,159
to ask kind of a little bit yes no how

00:01:54,509 --> 00:01:59,040
about how about a developer who's dead

00:01:56,159 --> 00:02:01,920
developer in here okay cool how many of

00:01:59,040 --> 00:02:03,600
you are DevOps like me I Maddie Bob yeah

00:02:01,920 --> 00:02:05,969
a little bit some people are a little

00:02:03,600 --> 00:02:10,160
bit of everything that's cool how many

00:02:05,969 --> 00:02:12,960
of you are business people seriously

00:02:10,160 --> 00:02:16,680
okay you all should

00:02:12,960 --> 00:02:18,000
leave then because but honestly you are

00:02:16,680 --> 00:02:19,500
business people because if you don't

00:02:18,000 --> 00:02:20,910
care about the business that your

00:02:19,500 --> 00:02:22,560
company is in and care about the

00:02:20,910 --> 00:02:24,780
customers that your business is serving

00:02:22,560 --> 00:02:26,400
I think to me that's the definition of a

00:02:24,780 --> 00:02:28,410
business person is someone that does

00:02:26,400 --> 00:02:30,300
that and if that is not you what you

00:02:28,410 --> 00:02:32,370
should do right now is quit your job and

00:02:30,300 --> 00:02:34,680
go find another job where you are a

00:02:32,370 --> 00:02:35,910
business person because frankly I don't

00:02:34,680 --> 00:02:37,500
care if you're a developer or a sysadmin

00:02:35,910 --> 00:02:40,200
if you don't give a about what your

00:02:37,500 --> 00:02:42,930
company does sorry then you shouldn't

00:02:40,200 --> 00:02:45,060
you shouldn't work there a couple other

00:02:42,930 --> 00:02:46,410
quick questions for you though who has

00:02:45,060 --> 00:02:48,990
experience with infrastructure as code

00:02:46,410 --> 00:02:51,450
or configuration management a couple of

00:02:48,990 --> 00:02:54,780
people cool and then more specifically

00:02:51,450 --> 00:02:56,130
experience with Chef awesome when I lie

00:02:54,780 --> 00:02:58,530
about chef you're not allowed to say

00:02:56,130 --> 00:03:00,720
anything okay that's our agreement that

00:02:58,530 --> 00:03:02,160
will make in advance it's always best

00:03:00,720 --> 00:03:03,810
when nobody knows what I'm talking about

00:03:02,160 --> 00:03:05,820
because then I can sound a lot more

00:03:03,810 --> 00:03:09,200
confident how many of you have written

00:03:05,820 --> 00:03:12,690
automated tests before of any flavor

00:03:09,200 --> 00:03:15,480
awesome most of the room cool so I will

00:03:12,690 --> 00:03:17,310
tell you that I came at this problem of

00:03:15,480 --> 00:03:20,070
infrastructure as code as someone with

00:03:17,310 --> 00:03:21,180
more of an OPS background but actually I

00:03:20,070 --> 00:03:23,040
was kind of a little bit more like this

00:03:21,180 --> 00:03:25,560
guy up front who every question was

00:03:23,040 --> 00:03:29,670
kinda I'm kind of a shitty developer and

00:03:25,560 --> 00:03:30,810
a bad operator and a kind of sort of

00:03:29,670 --> 00:03:35,220
understand what I'm doing when I missus

00:03:30,810 --> 00:03:37,920
admin so that's kind of me I will try

00:03:35,220 --> 00:03:39,660
not to curse anymore unless it unless it

00:03:37,920 --> 00:03:41,540
makes brings you joy in which case

00:03:39,660 --> 00:03:44,940
there's plenty more where that came from

00:03:41,540 --> 00:03:46,440
so infrastructure as code when I say

00:03:44,940 --> 00:03:48,480
these words infrastructure as code I

00:03:46,440 --> 00:03:49,740
think a bunch of different things the

00:03:48,480 --> 00:03:51,150
first thing I think is that with

00:03:49,740 --> 00:03:52,530
infrastructure as code what I'm talking

00:03:51,150 --> 00:03:54,780
about is that you can programmatically

00:03:52,530 --> 00:03:57,540
provision and configure components

00:03:54,780 --> 00:03:59,310
within your infrastructure so I think

00:03:57,540 --> 00:04:01,050
that that's a pretty good definition of

00:03:59,310 --> 00:04:02,760
it though but then also I think that

00:04:01,050 --> 00:04:04,530
with infrastructure is code what we're

00:04:02,760 --> 00:04:06,660
implying or stating is that you should

00:04:04,530 --> 00:04:08,310
treat it like any other code base but

00:04:06,660 --> 00:04:09,780
what does what does that even mean to

00:04:08,310 --> 00:04:11,370
treat it like any other code base this

00:04:09,780 --> 00:04:14,280
is the audience-participation part what

00:04:11,370 --> 00:04:17,100
does that mean it's in version control

00:04:14,280 --> 00:04:23,130
absolutely what version control systems

00:04:17,100 --> 00:04:24,900
you use git git mercurial cool you can

00:04:23,130 --> 00:04:26,790
use that that's fine did somebody say

00:04:24,900 --> 00:04:30,240
subversion yeah cool d is

00:04:26,790 --> 00:04:32,490
get svn plugin sometimes you should

00:04:30,240 --> 00:04:34,500
because any any you can use any version

00:04:32,490 --> 00:04:36,900
control system you like as long as it

00:04:34,500 --> 00:04:38,460
starts with GI t or mercurial that's

00:04:36,900 --> 00:04:39,600
fine too but it should be a distributed

00:04:38,460 --> 00:04:42,300
version control system that's an

00:04:39,600 --> 00:04:43,560
important thing what else but like what

00:04:42,300 --> 00:04:44,910
else does it mean to treat it like any

00:04:43,560 --> 00:04:47,190
other code base of course it's going to

00:04:44,910 --> 00:04:51,930
be on our version control system what

00:04:47,190 --> 00:04:54,180
else what's that yeah you're going to

00:04:51,930 --> 00:04:56,340
add automated tests this is super

00:04:54,180 --> 00:04:58,080
important when you're writing code you

00:04:56,340 --> 00:05:01,050
should have tests that can validate that

00:04:58,080 --> 00:05:03,930
code and you should you know as it turns

00:05:01,050 --> 00:05:05,280
out we all run tests even if you've

00:05:03,930 --> 00:05:08,730
never written a test a day in your life

00:05:05,280 --> 00:05:10,080
you all run tests sometimes those tests

00:05:08,730 --> 00:05:12,320
are when you put the code into

00:05:10,080 --> 00:05:15,300
production and give it to customers

00:05:12,320 --> 00:05:17,970
preferably we run tests before that

00:05:15,300 --> 00:05:19,230
happens so yeah you should treat it like

00:05:17,970 --> 00:05:21,150
any other code base in that it should

00:05:19,230 --> 00:05:23,460
have automated tests the other thing

00:05:21,150 --> 00:05:25,140
that I find is a very important and a

00:05:23,460 --> 00:05:26,450
thing that you have to keep in mind all

00:05:25,140 --> 00:05:29,910
of the time when you're writing code

00:05:26,450 --> 00:05:31,860
code is a continual experiment the

00:05:29,910 --> 00:05:33,510
reason why we have automated tests the

00:05:31,860 --> 00:05:35,400
reason why we sort code no version

00:05:33,510 --> 00:05:38,220
control system is the code that you

00:05:35,400 --> 00:05:40,650
write today is terrible code when you

00:05:38,220 --> 00:05:43,290
look back on it 24 months from now it's

00:05:40,650 --> 00:05:45,780
the right code for today no doubt but in

00:05:43,290 --> 00:05:46,620
24 months time or six months time even

00:05:45,780 --> 00:05:48,720
you're going to have a better

00:05:46,620 --> 00:05:50,610
understanding of your requirements you

00:05:48,720 --> 00:05:52,940
are going to be better at your craft so

00:05:50,610 --> 00:05:55,710
it's going to continually be changing I

00:05:52,940 --> 00:05:57,870
written code of one flavor or another

00:05:55,710 --> 00:05:59,220
for many many years and I can tell you

00:05:57,870 --> 00:06:01,080
that there's not one single piece of

00:05:59,220 --> 00:06:04,350
code that I look back on from my past

00:06:01,080 --> 00:06:06,060
and say yep that was it that's the exact

00:06:04,350 --> 00:06:07,530
code that I needed then and that solved

00:06:06,060 --> 00:06:09,120
all of the problem and that was it I

00:06:07,530 --> 00:06:12,630
don't need to write any more code in my

00:06:09,120 --> 00:06:14,490
life the other thing that's true about

00:06:12,630 --> 00:06:16,470
infrastructure is code when you start

00:06:14,490 --> 00:06:18,720
treating your infrastructure as code you

00:06:16,470 --> 00:06:20,580
can reconstruct your business from

00:06:18,720 --> 00:06:22,740
nothing more than a backup of your data

00:06:20,580 --> 00:06:25,470
your source code repositories and

00:06:22,740 --> 00:06:27,480
compute resources and when I say we

00:06:25,470 --> 00:06:29,520
construct your business as it turns out

00:06:27,480 --> 00:06:31,050
businesses are also made of people you

00:06:29,520 --> 00:06:32,820
cannot reconstruct any of the people

00:06:31,050 --> 00:06:34,800
with any of these things so your

00:06:32,820 --> 00:06:36,480
business applications the things that

00:06:34,800 --> 00:06:40,770
run your business that aren't the people

00:06:36,480 --> 00:06:42,990
so this is all about automation and

00:06:40,770 --> 00:06:45,509
just a quick high-level overview of chef

00:06:42,990 --> 00:06:46,889
chef works like this with chef we're

00:06:45,509 --> 00:06:48,509
going to write these things called

00:06:46,889 --> 00:06:50,669
recipes we're going to store those

00:06:48,509 --> 00:06:52,409
recipes in cookbooks we're going to give

00:06:50,669 --> 00:06:54,449
those cookbooks things like version

00:06:52,409 --> 00:06:56,789
numbers we're going to automate the

00:06:54,449 --> 00:06:58,289
testing of all of our recipes that

00:06:56,789 --> 00:07:00,770
describe what our infrastructure should

00:06:58,289 --> 00:07:03,180
look like we're going to take those

00:07:00,770 --> 00:07:05,220
artifacts those cookbooks which have a

00:07:03,180 --> 00:07:07,139
version number and exist in our version

00:07:05,220 --> 00:07:10,050
control system we're going to publish

00:07:07,139 --> 00:07:11,940
those to a chef server and now the nodes

00:07:10,050 --> 00:07:14,759
within my infrastructure and a node in

00:07:11,940 --> 00:07:16,560
that case could be a virtual machine it

00:07:14,759 --> 00:07:18,900
could be a cloud instance it could be a

00:07:16,560 --> 00:07:20,520
firewall I don't know what a node is it

00:07:18,900 --> 00:07:22,800
could be a bare metal piece of hardware

00:07:20,520 --> 00:07:25,259
but the nodes in your infrastructure are

00:07:22,800 --> 00:07:27,509
going to ask the chef server what is my

00:07:25,259 --> 00:07:29,789
policy what should i look like a my

00:07:27,509 --> 00:07:32,550
database server and my rails application

00:07:29,789 --> 00:07:34,500
server am i a java app what is that and

00:07:32,550 --> 00:07:36,599
it from there the chef server will

00:07:34,500 --> 00:07:38,759
provide the policy or the the

00:07:36,599 --> 00:07:40,680
description of the desired state for

00:07:38,759 --> 00:07:42,120
that node the node will download that

00:07:40,680 --> 00:07:44,759
and then make sure that it's following

00:07:42,120 --> 00:07:47,819
the desired state what we're going to

00:07:44,759 --> 00:07:49,469
talk a little bit about today is the

00:07:47,819 --> 00:07:50,969
local development workflow that you'll

00:07:49,469 --> 00:07:53,069
go through as you're describing that

00:07:50,969 --> 00:07:55,080
infrastructure is code we're going to

00:07:53,069 --> 00:07:57,449
use a thing called the chef development

00:07:55,080 --> 00:08:00,360
kit sometimes we call the chef

00:07:57,449 --> 00:08:02,219
development kit the chef DK but I've

00:08:00,360 --> 00:08:05,130
heard from some people that sometimes

00:08:02,219 --> 00:08:08,610
when i say chef DK what people here is

00:08:05,130 --> 00:08:11,039
chef de que and you see the two are not

00:08:08,610 --> 00:08:12,900
the same the DK the development kit is

00:08:11,039 --> 00:08:16,110
pretty new so there's definitely no

00:08:12,900 --> 00:08:17,279
decay going on there so you're going to

00:08:16,110 --> 00:08:19,199
describe your infrastructure as code

00:08:17,279 --> 00:08:20,639
your code kind of looks like this if

00:08:19,199 --> 00:08:22,289
you're in the back of the room my guess

00:08:20,639 --> 00:08:24,960
is you can't read what that code looks

00:08:22,289 --> 00:08:26,610
like but trust me it compiled well when

00:08:24,960 --> 00:08:29,580
I built the PowerPoint so it's all good

00:08:26,610 --> 00:08:31,620
it totally does exactly what i want and

00:08:29,580 --> 00:08:32,880
brilliant on you for saying i am in the

00:08:31,620 --> 00:08:34,409
back of the room and i do want to read

00:08:32,880 --> 00:08:36,390
that code and i'm going to move forward

00:08:34,409 --> 00:08:37,979
also these slides are right now

00:08:36,390 --> 00:08:39,300
available on my github you can continue

00:08:37,979 --> 00:08:41,180
to take pictures of the slides that's

00:08:39,300 --> 00:08:43,860
cool it makes me feel good when you do

00:08:41,180 --> 00:08:46,950
but also i'm going to give them all to

00:08:43,860 --> 00:08:48,779
you at the end so but like i said feel

00:08:46,950 --> 00:08:50,430
free to keep snapping the pics it's cool

00:08:48,779 --> 00:08:51,930
when you write code you should be able

00:08:50,430 --> 00:08:53,910
to test your code and so we're going to

00:08:51,930 --> 00:08:55,380
look at doing some code as

00:08:53,910 --> 00:08:56,460
well I also just want to tell you a

00:08:55,380 --> 00:08:58,590
little bit about what we're going to do

00:08:56,460 --> 00:08:59,940
or more what I'm going to do I'm going

00:08:58,590 --> 00:09:02,040
to show you some slides which I'm doing

00:08:59,940 --> 00:09:04,200
now if you hadn't guessed but then I'm

00:09:02,040 --> 00:09:05,970
going to spend most of the time or half

00:09:04,200 --> 00:09:07,800
of the time or so like typing and

00:09:05,970 --> 00:09:09,510
writing code right before your eyes and

00:09:07,800 --> 00:09:11,160
we'll see things work and how they how

00:09:09,510 --> 00:09:12,930
they work and how they don't work I will

00:09:11,160 --> 00:09:14,400
continue to ask for audience

00:09:12,930 --> 00:09:16,950
participation I'll be asking you

00:09:14,400 --> 00:09:19,860
questions and stuff like this so when it

00:09:16,950 --> 00:09:23,250
comes to chef if we boil all of our chef

00:09:19,860 --> 00:09:25,920
code down to its smallest most important

00:09:23,250 --> 00:09:28,380
bit it's these things called resources

00:09:25,920 --> 00:09:30,840
we're going to describe resources on our

00:09:28,380 --> 00:09:32,130
system so a resource and this is kind of

00:09:30,840 --> 00:09:34,080
the hard part about learning any

00:09:32,130 --> 00:09:35,730
language chef included is understanding

00:09:34,080 --> 00:09:38,160
of the vocabulary so I do want to cover

00:09:35,730 --> 00:09:39,960
just some basic vocabulary so when I say

00:09:38,160 --> 00:09:43,380
a resource what I mean is a piece of the

00:09:39,960 --> 00:09:45,510
system and its desired state what we're

00:09:43,380 --> 00:09:47,580
capturing in chef is the desired state

00:09:45,510 --> 00:09:49,620
of our infrastructure so let's just look

00:09:47,580 --> 00:09:51,810
at some examples that might be a package

00:09:49,620 --> 00:09:54,630
that should be installed on your system

00:09:51,810 --> 00:09:57,000
a package here like the my sequel server

00:09:54,630 --> 00:09:59,370
with an action of install that should be

00:09:57,000 --> 00:10:02,070
there it might be a service that should

00:09:59,370 --> 00:10:04,140
be started and set up configured to run

00:10:02,070 --> 00:10:06,900
on reboot of the system so here I have a

00:10:04,140 --> 00:10:09,120
service called iptables I want its end

00:10:06,900 --> 00:10:12,210
state to be that it is started and that

00:10:09,120 --> 00:10:14,250
it is enabled on reboot it could be a

00:10:12,210 --> 00:10:16,440
file that should be generated whose

00:10:14,250 --> 00:10:18,630
contents we want to manage it could be a

00:10:16,440 --> 00:10:22,080
cron job that gets executed on a regular

00:10:18,630 --> 00:10:24,960
basis it could be a user that we want to

00:10:22,080 --> 00:10:28,740
manage it could be a DSC resource who's

00:10:24,960 --> 00:10:33,810
sort of DSC before so there's no windows

00:10:28,740 --> 00:10:35,580
admins in the room no okay well when the

00:10:33,810 --> 00:10:36,840
when when you decide that what you want

00:10:35,580 --> 00:10:38,310
to be as a business person so you need

00:10:36,840 --> 00:10:39,660
to quit your job and you get hired at a

00:10:38,310 --> 00:10:41,220
place that has windows infrastructure

00:10:39,660 --> 00:10:43,970
the first thing you need to learn there

00:10:41,220 --> 00:10:46,380
is power shell and DSC DSC is a

00:10:43,970 --> 00:10:48,330
Microsoft Windows component it stands

00:10:46,380 --> 00:10:50,220
for desired state configuration it's

00:10:48,330 --> 00:10:51,990
super cool if you're managing windows

00:10:50,220 --> 00:10:55,860
and definitely not going to help you if

00:10:51,990 --> 00:10:58,320
you're managing Linux registry keys I

00:10:55,860 --> 00:11:01,080
can just rewind repeat say all those

00:10:58,320 --> 00:11:02,790
same things again okay so resources are

00:11:01,080 --> 00:11:04,530
a piece of the system and their desired

00:11:02,790 --> 00:11:06,450
state chef comes with a bunch of

00:11:04,530 --> 00:11:08,110
built-in resources you can read the docs

00:11:06,450 --> 00:11:09,670
to find out all about those

00:11:08,110 --> 00:11:11,620
sources let's be honest you're not going

00:11:09,670 --> 00:11:13,810
to read the docs because why would you

00:11:11,620 --> 00:11:14,980
read the docs like nobody ever does that

00:11:13,810 --> 00:11:16,120
that's why you come to conferences so

00:11:14,980 --> 00:11:17,470
you don't have to read the docs you can

00:11:16,120 --> 00:11:19,660
just get enough learning to get you

00:11:17,470 --> 00:11:21,760
going resources follow what i call a

00:11:19,660 --> 00:11:24,519
test and repair model the test and

00:11:21,760 --> 00:11:27,100
repair our model looks like this so when

00:11:24,519 --> 00:11:29,290
chef encounters this code package vim it

00:11:27,100 --> 00:11:32,529
will ask it will inspect the system is

00:11:29,290 --> 00:11:34,600
the package already installed if that

00:11:32,529 --> 00:11:37,000
package is installed it will do nothing

00:11:34,600 --> 00:11:39,970
so chef is done with that particular bit

00:11:37,000 --> 00:11:42,220
of code if that code is or that package

00:11:39,970 --> 00:11:44,950
is not installed in other words the

00:11:42,220 --> 00:11:46,720
system is not at its desired state chef

00:11:44,950 --> 00:11:49,269
will install it and that's what I call

00:11:46,720 --> 00:11:52,329
the repair phase so it's going to test

00:11:49,269 --> 00:11:54,250
are we meeting the desired state if not

00:11:52,329 --> 00:11:57,190
I'm going to bring the system in line

00:11:54,250 --> 00:12:02,589
with the desired state what questions

00:11:57,190 --> 00:12:05,019
can answer for you so far so far so good

00:12:02,589 --> 00:12:07,149
huh alright we're all feeling like chef

00:12:05,019 --> 00:12:09,490
experts ready to go let's go manage our

00:12:07,149 --> 00:12:11,500
infrastructure so there are a bunch of

00:12:09,490 --> 00:12:13,420
resources that come with chef and then

00:12:11,500 --> 00:12:14,800
you can write your own custom resources

00:12:13,420 --> 00:12:17,079
also which is a pretty cool feature

00:12:14,800 --> 00:12:19,029
because it's it's you know you're

00:12:17,079 --> 00:12:21,190
writing code so you can extend that code

00:12:19,029 --> 00:12:23,230
as well we're going to take our

00:12:21,190 --> 00:12:25,300
resources and put them together in a

00:12:23,230 --> 00:12:27,820
collection that collection is really a

00:12:25,300 --> 00:12:29,380
file that's called a recipe so we'll

00:12:27,820 --> 00:12:31,750
take all of the resources that are

00:12:29,380 --> 00:12:33,850
required for our specific thing we'll

00:12:31,750 --> 00:12:36,279
put them into a recipe and then that

00:12:33,850 --> 00:12:37,690
recipe will live within a cookbook so

00:12:36,279 --> 00:12:40,149
let's talk about how do we actually

00:12:37,690 --> 00:12:42,730
write that in a test driven fashion how

00:12:40,149 --> 00:12:44,079
do we actually test out this code so of

00:12:42,730 --> 00:12:46,660
course there's the question of why do

00:12:44,079 --> 00:12:48,699
you want to test your code who do I need

00:12:46,660 --> 00:12:51,519
to convince that testing your code is an

00:12:48,699 --> 00:12:53,949
important thing to do anyone it's okay

00:12:51,519 --> 00:12:56,740
to be the one person's like gag Yolo I

00:12:53,949 --> 00:12:59,320
just do it all in fraud it's good no

00:12:56,740 --> 00:13:01,480
nobody's like that and y'all are too

00:12:59,320 --> 00:13:04,839
much on the professionals that's no fun

00:13:01,480 --> 00:13:08,980
okay so who knows the difference between

00:13:04,839 --> 00:13:10,029
a unit test in an integration test okay

00:13:08,980 --> 00:13:11,350
and who doesn't care about the

00:13:10,029 --> 00:13:13,600
difference between the unit test and an

00:13:11,350 --> 00:13:15,550
integration test like you shouldn't I

00:13:13,600 --> 00:13:17,440
don't certainly not if you're just

00:13:15,550 --> 00:13:19,209
getting started I and those of you that

00:13:17,440 --> 00:13:20,740
do we're like no wait I know the diff

00:13:19,209 --> 00:13:23,170
so of course I should care about it it's

00:13:20,740 --> 00:13:24,339
a thing that I know I agree at some

00:13:23,170 --> 00:13:25,990
point you should know it but if what

00:13:24,339 --> 00:13:27,999
you're doing is just getting started you

00:13:25,990 --> 00:13:30,459
shouldn't care about that when I just

00:13:27,999 --> 00:13:32,170
get started with chef testing what I

00:13:30,459 --> 00:13:33,759
like to think about our for questions

00:13:32,170 --> 00:13:36,040
and these are the four questions that i

00:13:33,759 --> 00:13:37,899
want my tests to answer did the chef

00:13:36,040 --> 00:13:39,160
client complete successfully so there

00:13:37,899 --> 00:13:40,629
were a couple of people who raised their

00:13:39,160 --> 00:13:43,689
hand and said yes I've done some chef

00:13:40,629 --> 00:13:45,939
before of those of you who raised your

00:13:43,689 --> 00:13:48,970
hand and I'll remember exactly who it

00:13:45,939 --> 00:13:50,829
was um how many of you have written like

00:13:48,970 --> 00:13:52,959
every recipe that you wrote and then

00:13:50,829 --> 00:13:56,819
executed with the chef client works

00:13:52,959 --> 00:13:59,589
without any error the first time always

00:13:56,819 --> 00:14:02,199
right see no but no one is raising their

00:13:59,589 --> 00:14:03,670
hand and how many of you like of those

00:14:02,199 --> 00:14:05,350
people if what you did was wrote a

00:14:03,670 --> 00:14:08,350
recipe and then ran the chef client and

00:14:05,350 --> 00:14:10,179
it worked without throwing an error like

00:14:08,350 --> 00:14:11,559
that's pretty happy moment right that

00:14:10,179 --> 00:14:13,300
feels pretty good you don't necessarily

00:14:11,559 --> 00:14:15,369
know if the system is configured

00:14:13,300 --> 00:14:17,559
properly but what you do know is your

00:14:15,369 --> 00:14:19,119
code didn't blow anything up so if we

00:14:17,559 --> 00:14:21,550
could automate that testing that would

00:14:19,119 --> 00:14:23,769
be good but of course that doesn't tell

00:14:21,550 --> 00:14:25,689
us is the system configure the way we

00:14:23,769 --> 00:14:27,670
want so how do we test that so that's

00:14:25,689 --> 00:14:29,619
the next question that we should ask did

00:14:27,670 --> 00:14:31,720
the recipe put the node in the desired

00:14:29,619 --> 00:14:33,399
state and if we can write an automated

00:14:31,720 --> 00:14:34,720
test for that now we have even more

00:14:33,399 --> 00:14:37,269
confidence and we can do all of that

00:14:34,720 --> 00:14:39,459
locally before we even publish anything

00:14:37,269 --> 00:14:40,779
or try to run it in production and then

00:14:39,459 --> 00:14:42,850
other questions like are there resources

00:14:40,779 --> 00:14:45,819
properly defined and does this code

00:14:42,850 --> 00:14:47,529
style style our follow guide which is

00:14:45,819 --> 00:14:49,240
just another way of saying follow our

00:14:47,529 --> 00:14:50,470
style guide and also to make sure that

00:14:49,240 --> 00:14:52,059
you're awake and listening so that you

00:14:50,470 --> 00:14:53,889
can laugh at me when I say the words in

00:14:52,059 --> 00:14:57,279
the wrong order which you should totally

00:14:53,889 --> 00:14:59,470
do okay so we're gonna answer at least

00:14:57,279 --> 00:15:01,029
two out of the four questions and I'm

00:14:59,470 --> 00:15:03,100
going to show you some code and maybe at

00:15:01,029 --> 00:15:04,689
the end we'll have some time for more

00:15:03,100 --> 00:15:07,689
fun stuff but we're going to do is a

00:15:04,689 --> 00:15:10,720
pretty simple scenario we're going to

00:15:07,689 --> 00:15:12,490
just deploy a rails application so I'm

00:15:10,720 --> 00:15:14,439
going to go from a virtual machine that

00:15:12,490 --> 00:15:17,139
is just a baseline of bun to box I'm

00:15:14,439 --> 00:15:18,790
going to run some chef on that box and

00:15:17,139 --> 00:15:20,740
at the end we're going to have a fully

00:15:18,790 --> 00:15:22,569
deployed and working rails applications

00:15:20,740 --> 00:15:24,129
how many of your rails developers or

00:15:22,569 --> 00:15:25,809
have done somewhere else development

00:15:24,129 --> 00:15:27,610
before and did you come to this session

00:15:25,809 --> 00:15:29,199
because it was rails or because you're

00:15:27,610 --> 00:15:31,360
interested in chef you shouldn't answer

00:15:29,199 --> 00:15:32,680
that question because

00:15:31,360 --> 00:15:35,649
I mean you can't answer that question

00:15:32,680 --> 00:15:37,360
but I didn't ask you a yes or no so like

00:15:35,649 --> 00:15:38,769
raise your right hand if one of the

00:15:37,360 --> 00:15:41,230
answers and raise your left hand if the

00:15:38,769 --> 00:15:43,329
other awesome I like to see two hands up

00:15:41,230 --> 00:15:46,660
yeah raise the roof that's good okay so

00:15:43,329 --> 00:15:48,910
uh so here's what we're going to do it's

00:15:46,660 --> 00:15:50,350
a simple thing we're gonna have some

00:15:48,910 --> 00:15:52,360
time to work through some of the code

00:15:50,350 --> 00:15:54,399
i'm going to give you all of the code

00:15:52,360 --> 00:15:56,140
when we're done so even the code we

00:15:54,399 --> 00:15:58,690
don't get to work through you get to

00:15:56,140 --> 00:16:02,890
have it's my gift to you you're welcome

00:15:58,690 --> 00:16:03,850
it's awesome okay so from maybe from

00:16:02,890 --> 00:16:06,970
this point forward I'm just going to

00:16:03,850 --> 00:16:10,180
switch over to a like writing code I

00:16:06,970 --> 00:16:12,700
hope that's okay so um well that's like

00:16:10,180 --> 00:16:18,430
super big I think maybe we can make that

00:16:12,700 --> 00:16:20,890
a little different let's see so was

00:16:18,430 --> 00:16:25,029
still pretty big all right I'm gonna

00:16:20,890 --> 00:16:27,790
just okay so the first thing I'm going

00:16:25,029 --> 00:16:29,019
to do is this is a true cooking show I'm

00:16:27,790 --> 00:16:30,190
going to put something in the oven so

00:16:29,019 --> 00:16:31,480
that when we're done I can pull that

00:16:30,190 --> 00:16:34,209
thing out of the oven and we can say

00:16:31,480 --> 00:16:35,350
tada look how delicious this is so I'm

00:16:34,209 --> 00:16:36,850
just going to run a little command here

00:16:35,350 --> 00:16:38,560
you shouldn't pay any attention to this

00:16:36,850 --> 00:16:41,769
that command is going to be kitchen

00:16:38,560 --> 00:16:43,990
converge and I'm just going to let that

00:16:41,769 --> 00:16:45,699
run so that's going to go off and run

00:16:43,990 --> 00:16:47,079
and in the meantime I'm going to do this

00:16:45,699 --> 00:16:49,089
crazy thing where I have another shell

00:16:47,079 --> 00:16:50,829
prompt at the bottom I'm going to flip

00:16:49,089 --> 00:16:53,740
these two windows so that we just see

00:16:50,829 --> 00:16:55,510
the little thing running and now the big

00:16:53,740 --> 00:16:57,279
thing is I've so see the little things

00:16:55,510 --> 00:16:58,839
running down there now I might have lost

00:16:57,279 --> 00:17:03,000
you I've well I've confused myself

00:16:58,839 --> 00:17:05,350
already so here we are here okay so

00:17:03,000 --> 00:17:07,360
let's create this thing where we can

00:17:05,350 --> 00:17:09,429
build our rails application the first

00:17:07,360 --> 00:17:12,730
thing I'm going to do is this amazing

00:17:09,429 --> 00:17:15,520
thing watch this command and then watch

00:17:12,730 --> 00:17:16,990
what we're going to say take 80 0 what

00:17:15,520 --> 00:17:19,660
does that mean what is that going to do

00:17:16,990 --> 00:17:21,280
who's run the take command before raise

00:17:19,660 --> 00:17:23,260
your hand if you've ever executed take

00:17:21,280 --> 00:17:27,309
from the command line all right how many

00:17:23,260 --> 00:17:30,100
of you run Z shell okay and with the oh

00:17:27,309 --> 00:17:31,480
my zsh plugin yeah of course because why

00:17:30,100 --> 00:17:35,070
would you run Z shell any other way

00:17:31,480 --> 00:17:38,080
watch what happens here I'll take 8000

00:17:35,070 --> 00:17:40,000
you see what it did it created the

00:17:38,080 --> 00:17:43,090
directory and then it moved me into the

00:17:40,000 --> 00:17:44,919
directory so it did a mixer and a CD all

00:17:43,090 --> 00:17:45,280
in one command for me now if you're

00:17:44,919 --> 00:17:47,260
using

00:17:45,280 --> 00:17:48,700
seashell and oh my z SH and you learned

00:17:47,260 --> 00:17:50,890
that like you just got your money's

00:17:48,700 --> 00:17:52,990
worth boom you're done like it doesn't

00:17:50,890 --> 00:17:56,290
matter what else I say today you have

00:17:52,990 --> 00:17:57,910
just one uh so but that's not what we're

00:17:56,290 --> 00:17:59,260
not here to learn crazy shell tricks are

00:17:57,910 --> 00:18:00,910
we we're here to learn about testing

00:17:59,260 --> 00:18:02,470
your infrastructure code and we're

00:18:00,910 --> 00:18:05,230
definitely not here to have any fun so I

00:18:02,470 --> 00:18:07,090
should stop with making you laugh so the

00:18:05,230 --> 00:18:09,220
thing I want to do when I'm when I'm

00:18:07,090 --> 00:18:11,080
creating stuff with chef I want to put

00:18:09,220 --> 00:18:12,160
all of my code into a repository because

00:18:11,080 --> 00:18:14,740
we talked about putting it into a

00:18:12,160 --> 00:18:16,860
version control repository so chef has

00:18:14,740 --> 00:18:20,440
this command line tool it's called chef

00:18:16,860 --> 00:18:22,450
if I run chef dash dash version will see

00:18:20,440 --> 00:18:25,050
that i'm running locally the zero-point

00:18:22,450 --> 00:18:28,240
8.0 version of the chef development kit

00:18:25,050 --> 00:18:30,460
this is not the latest version and I

00:18:28,240 --> 00:18:32,470
intentionally have not used the latest

00:18:30,460 --> 00:18:34,840
version 0.8 point zero is just a week

00:18:32,470 --> 00:18:37,060
older than the latest version so I know

00:18:34,840 --> 00:18:38,350
this will work I also know that 0.9

00:18:37,060 --> 00:18:40,570
point zero we have to we'd have to

00:18:38,350 --> 00:18:42,220
change the way I teach and I don't want

00:18:40,570 --> 00:18:44,500
to change the way I teach I feel like i

00:18:42,220 --> 00:18:46,420
do an ok job so I'm just going to clear

00:18:44,500 --> 00:18:49,120
that off and then what I'm going to use

00:18:46,420 --> 00:18:51,040
so the chef command has this cool thing

00:18:49,120 --> 00:18:54,220
where it can generate things so I'm

00:18:51,040 --> 00:18:56,800
going to chef generate a repo for all of

00:18:54,220 --> 00:19:00,400
my chef coat and I'm just going to call

00:18:56,800 --> 00:19:02,740
that the chef dash repo who I should so

00:19:00,400 --> 00:19:04,060
often when I talk and type I make typos

00:19:02,740 --> 00:19:06,310
and you should laugh at me when I do

00:19:04,060 --> 00:19:08,890
that's that's the thing that we have

00:19:06,310 --> 00:19:11,980
here so here's the thing it just used

00:19:08,890 --> 00:19:14,680
chef to generate a directory here called

00:19:11,980 --> 00:19:16,480
the chef repo and if I just look at that

00:19:14,680 --> 00:19:19,600
really quick we can see that there's a

00:19:16,480 --> 00:19:21,640
bunch of stuff here including like rolls

00:19:19,600 --> 00:19:24,880
directory and environments directory

00:19:21,640 --> 00:19:26,830
there's a cookbooks directory license

00:19:24,880 --> 00:19:29,260
all kinds of stuff so that was just

00:19:26,830 --> 00:19:31,270
created for me but what I want to do I

00:19:29,260 --> 00:19:32,620
want to run my rails application or I

00:19:31,270 --> 00:19:35,380
want to build a thing for my rails

00:19:32,620 --> 00:19:36,790
application so the first thing that we

00:19:35,380 --> 00:19:38,740
know about a rails application is you

00:19:36,790 --> 00:19:41,710
access it how how do you access a rails

00:19:38,740 --> 00:19:44,050
app through a through a web browser

00:19:41,710 --> 00:19:46,990
right so we might need a web server that

00:19:44,050 --> 00:19:50,230
sits on my server so which web server do

00:19:46,990 --> 00:19:52,690
you think we should install come on

00:19:50,230 --> 00:19:55,180
somebody gave a talk here at least know

00:19:52,690 --> 00:19:56,680
the engine X that would be a great web

00:19:55,180 --> 00:19:58,050
server to install it's the best web

00:19:56,680 --> 00:19:59,370
server out there

00:19:58,050 --> 00:20:01,380
it's not what we're going to use though

00:19:59,370 --> 00:20:03,060
so your answer was correct but it's not

00:20:01,380 --> 00:20:06,060
what I'm going to do so i'm going to use

00:20:03,060 --> 00:20:07,530
chef now actually let me just CD into

00:20:06,060 --> 00:20:11,760
the chef repo so I'm in the right place

00:20:07,530 --> 00:20:14,910
here what I should do is get in it this

00:20:11,760 --> 00:20:20,480
directory and then get add all the stuff

00:20:14,910 --> 00:20:25,470
and then get commit dash mne the 0

00:20:20,480 --> 00:20:28,650
initial repo all right now I feel better

00:20:25,470 --> 00:20:31,170
because I'm working in a repository and

00:20:28,650 --> 00:20:32,490
it's clean so what I want to do is I

00:20:31,170 --> 00:20:34,860
want to create a cookbook to manage

00:20:32,490 --> 00:20:37,470
Apache for me so I want to define the

00:20:34,860 --> 00:20:39,030
desired state of Apache so chef has that

00:20:37,470 --> 00:20:40,860
generate command that I'm going to use

00:20:39,030 --> 00:20:42,810
again I'm going to generate this time a

00:20:40,860 --> 00:20:46,110
cookbook and I want to put that cookbook

00:20:42,810 --> 00:20:48,120
in the cookbook spectre ii and i want to

00:20:46,110 --> 00:20:49,980
call that cookbook apache so it looks

00:20:48,120 --> 00:20:52,020
like this i'm going to run that how many

00:20:49,980 --> 00:20:53,730
of you have used rails generators before

00:20:52,020 --> 00:20:56,040
yeah all the people that said they were

00:20:53,730 --> 00:20:57,950
rails developers so the chef generate

00:20:56,040 --> 00:21:00,000
command is similar to using rails

00:20:57,950 --> 00:21:01,560
scaffolds right to do the rails

00:21:00,000 --> 00:21:04,620
generators there's a big difference

00:21:01,560 --> 00:21:06,540
though I've just created that scaffold

00:21:04,620 --> 00:21:08,610
and I'm not going to delete all the

00:21:06,540 --> 00:21:10,170
files next that's the difference between

00:21:08,610 --> 00:21:12,570
the chef generate command and the rails

00:21:10,170 --> 00:21:14,130
generate command but what I should do of

00:21:12,570 --> 00:21:18,210
course is just go ahead and do like a

00:21:14,130 --> 00:21:22,440
get add cookbooks Apache and then get

00:21:18,210 --> 00:21:28,050
commit that I should you know type the

00:21:22,440 --> 00:21:30,480
right thing all right and then let me

00:21:28,050 --> 00:21:35,130
just CD into that cookbooks Apache and

00:21:30,480 --> 00:21:37,320
let me just show you what's here okay so

00:21:35,130 --> 00:21:40,440
there were a bunch of files and

00:21:37,320 --> 00:21:42,480
directories so first what I just did was

00:21:40,440 --> 00:21:44,580
create a cookbook a cookbook is

00:21:42,480 --> 00:21:47,370
essentially a known structure on your

00:21:44,580 --> 00:21:49,590
file system and it has some default

00:21:47,370 --> 00:21:50,820
files and some files that we actually

00:21:49,590 --> 00:21:52,140
care about and some directories so

00:21:50,820 --> 00:21:53,250
there's a readme that's good you should

00:21:52,140 --> 00:21:55,860
write what you're going to do and you

00:21:53,250 --> 00:21:57,420
read me it has a metadata we said that

00:21:55,860 --> 00:21:59,190
our cookbooks should have versions

00:21:57,420 --> 00:22:00,930
associated with them version numbers

00:21:59,190 --> 00:22:02,820
associated with them we store that in

00:22:00,930 --> 00:22:04,620
the metadata there's a directory for

00:22:02,820 --> 00:22:07,280
recipes there's a directory for spec

00:22:04,620 --> 00:22:11,400
tests there's directory for tests tests

00:22:07,280 --> 00:22:11,940
and some other stuff there so if I just

00:22:11,400 --> 00:22:13,919
jump back

00:22:11,940 --> 00:22:15,870
the slides for a second I'm going to

00:22:13,919 --> 00:22:18,629
skip through a bunch of them because we

00:22:15,870 --> 00:22:21,090
did all of these things but I want to

00:22:18,629 --> 00:22:23,909
make sure that so the first question

00:22:21,090 --> 00:22:26,129
we're going to ask yourself is if we run

00:22:23,909 --> 00:22:28,289
the chef's client over our recipe will

00:22:26,129 --> 00:22:30,779
it complete successfully well in order

00:22:28,289 --> 00:22:32,970
to do that we need to have a place to

00:22:30,779 --> 00:22:34,830
store that recipe that can have that has

00:22:32,970 --> 00:22:37,559
the chef client and can actually execute

00:22:34,830 --> 00:22:40,200
that recipe so as it turns out i'm

00:22:37,559 --> 00:22:43,320
running and working locally on a mac how

00:22:40,200 --> 00:22:46,080
many of you have max in production yeah

00:22:43,320 --> 00:22:48,779
uh everyone's like I know this I don't

00:22:46,080 --> 00:22:52,110
wait no not in production definitely not

00:22:48,779 --> 00:22:53,879
in production I totally I I have managed

00:22:52,110 --> 00:22:55,830
infrastructure where we had mac minis in

00:22:53,879 --> 00:22:59,250
the data center that was pretty awesome

00:22:55,830 --> 00:23:01,200
I don't work there anymore maybe because

00:22:59,250 --> 00:23:03,539
I put mac minis in the data center but

00:23:01,200 --> 00:23:05,070
but maybe not so what we need something

00:23:03,539 --> 00:23:06,659
that's running the same operating system

00:23:05,070 --> 00:23:09,179
as production how many of you run ubuntu

00:23:06,659 --> 00:23:11,159
in production how many of you can

00:23:09,179 --> 00:23:12,149
foresee a time in your future where

00:23:11,159 --> 00:23:13,860
maybe you would run a boon to in

00:23:12,149 --> 00:23:15,440
production alright cool cool so that's

00:23:13,860 --> 00:23:17,669
like everyone in the room it seems

00:23:15,440 --> 00:23:19,980
either that or your arm is just getting

00:23:17,669 --> 00:23:21,720
tired which is cool so we're going to

00:23:19,980 --> 00:23:22,980
we're going to use ubuntu but it doesn't

00:23:21,720 --> 00:23:24,299
really matter that we're using ubuntu

00:23:22,980 --> 00:23:26,460
what we're going to use is this tool

00:23:24,299 --> 00:23:28,649
called Test Kitchen Test Kitchen is a

00:23:26,460 --> 00:23:31,110
little testing harness for us that will

00:23:28,649 --> 00:23:34,230
allow us to spin up applications throw

00:23:31,110 --> 00:23:37,139
stuff on to them and test them out I

00:23:34,230 --> 00:23:39,240
should move more quickly so what I'm

00:23:37,139 --> 00:23:42,090
going to do is just jump back right into

00:23:39,240 --> 00:23:44,519
the code is that ok with you guys with

00:23:42,090 --> 00:23:46,200
y'all I shouldn't say you guys it's so

00:23:44,519 --> 00:23:48,509
super wrong of me to say I'm sorry I

00:23:46,200 --> 00:23:51,899
said that so in here i have this file

00:23:48,509 --> 00:23:54,210
that's called kitchen yamel kitchen y ml

00:23:51,899 --> 00:23:56,940
is what we use to describe our test

00:23:54,210 --> 00:23:59,190
kitchen so let me just walk you through

00:23:56,940 --> 00:24:00,840
this first you have a driver what test

00:23:59,190 --> 00:24:02,549
kitchen is let me step back what test

00:24:00,840 --> 00:24:04,919
kitchen is going to do is spin up

00:24:02,549 --> 00:24:06,600
virtual machines for me take my chef

00:24:04,919 --> 00:24:09,000
coat put it onto those virtual machines

00:24:06,600 --> 00:24:12,120
and execute my chef code and then we can

00:24:09,000 --> 00:24:14,279
write automated tests about that so the

00:24:12,120 --> 00:24:15,960
first question you have I hear it now

00:24:14,279 --> 00:24:17,399
Nathan you said it's going to spin up

00:24:15,960 --> 00:24:19,320
virtual machines where is it going to

00:24:17,399 --> 00:24:20,970
spin up those virtual machines well the

00:24:19,320 --> 00:24:22,590
answer is it depends it depends on the

00:24:20,970 --> 00:24:23,770
driver so I'm going to use this driver

00:24:22,590 --> 00:24:25,240
here named

00:24:23,770 --> 00:24:27,430
how many of you have heard of vagrant

00:24:25,240 --> 00:24:29,140
before awesome if you want to learn more

00:24:27,430 --> 00:24:31,540
about vagrant there's a talk going on

00:24:29,140 --> 00:24:33,310
right now on the other side of the hall

00:24:31,540 --> 00:24:35,320
where you can learn about using vagrant

00:24:33,310 --> 00:24:36,670
what I suggest you do and prefer that

00:24:35,320 --> 00:24:38,500
you do is stay here and I'll tell you a

00:24:36,670 --> 00:24:40,600
little bit about vagrant but essentially

00:24:38,500 --> 00:24:42,700
it helps you spin up virtual machines

00:24:40,600 --> 00:24:44,110
locally there's way more to it than that

00:24:42,700 --> 00:24:46,210
but that's all we're going to say today

00:24:44,110 --> 00:24:47,590
once it spins up that virtual machine

00:24:46,210 --> 00:24:48,970
it's going to configure that virtual

00:24:47,590 --> 00:24:50,470
machine with a provisioner so we're

00:24:48,970 --> 00:24:52,960
going to use this thing called chefs 0

00:24:50,470 --> 00:24:55,510
chef 0 is essentially the chef client

00:24:52,960 --> 00:24:56,680
and and those of you are like yeah you

00:24:55,510 --> 00:24:58,180
said essentially but what's the

00:24:56,680 --> 00:24:59,890
difference you can ask me at the break

00:24:58,180 --> 00:25:01,780
or as we're walking to the next end of

00:24:59,890 --> 00:25:05,100
the hall and then platforms so which

00:25:01,780 --> 00:25:07,180
operating system should I spin up as my

00:25:05,100 --> 00:25:09,340
virtual machines i'm just going to use

00:25:07,180 --> 00:25:11,170
ubuntu 12 because you know i'm in

00:25:09,340 --> 00:25:12,490
production i haven't upgraded yet and

00:25:11,170 --> 00:25:14,020
i'm going to comment out this sent us

00:25:12,490 --> 00:25:15,610
one just for the sake of time so we're

00:25:14,020 --> 00:25:18,280
going to write one little thing that's

00:25:15,610 --> 00:25:20,830
going to launch 12 and then finally you

00:25:18,280 --> 00:25:22,780
have your Suites a suite is what are the

00:25:20,830 --> 00:25:25,030
recipes that you're going to execute in

00:25:22,780 --> 00:25:27,070
that virtual machine so I'm going to run

00:25:25,030 --> 00:25:29,020
the default recipe from the Apache

00:25:27,070 --> 00:25:30,400
cookbook and so I'm just going to write

00:25:29,020 --> 00:25:32,920
and quit that and then I'm going to run

00:25:30,400 --> 00:25:34,450
this command kitchen list and what

00:25:32,920 --> 00:25:37,330
kitchen list will show me is that I have

00:25:34,450 --> 00:25:38,980
a very small buffering it can't show all

00:25:37,330 --> 00:25:40,480
the things online that makes it look

00:25:38,980 --> 00:25:43,030
pretty but essentially I have one

00:25:40,480 --> 00:25:44,440
instance called default Ubuntu 1204 the

00:25:43,030 --> 00:25:46,780
driver is going to be vagrant the

00:25:44,440 --> 00:25:48,880
provisioner is going to be chef 0 and

00:25:46,780 --> 00:25:51,130
then some other things so the first

00:25:48,880 --> 00:25:53,020
thing that I can do is I want to ask the

00:25:51,130 --> 00:25:55,660
question if I put this recipe that I

00:25:53,020 --> 00:25:57,010
just wrote on to that node and execute

00:25:55,660 --> 00:25:59,140
the chef client will it work

00:25:57,010 --> 00:26:00,340
successfully and the way that I'm going

00:25:59,140 --> 00:26:04,360
to answer that question is I'm going to

00:26:00,340 --> 00:26:05,950
run this command kitchen converge and

00:26:04,360 --> 00:26:07,390
you might remember this from earlier I

00:26:05,950 --> 00:26:09,010
ran that commander earlier down there on

00:26:07,390 --> 00:26:10,330
that other window at the bottom we'll

00:26:09,010 --> 00:26:12,640
come back to that in a minute so what

00:26:10,330 --> 00:26:13,750
does kitchen converge do let's look at

00:26:12,640 --> 00:26:16,600
the slides well that runs in the

00:26:13,750 --> 00:26:17,680
background and also someone can log into

00:26:16,600 --> 00:26:19,540
my box and make sure it works properly

00:26:17,680 --> 00:26:21,220
and fix it if it doesn't so when I go

00:26:19,540 --> 00:26:23,530
back to the code it'll it'll just look

00:26:21,220 --> 00:26:26,740
like magic because this is truly a

00:26:23,530 --> 00:26:28,090
cooking show let's see so we did a

00:26:26,740 --> 00:26:29,890
kitchen list okay so the first thing

00:26:28,090 --> 00:26:31,870
that kitchen converged will actually do

00:26:29,890 --> 00:26:33,970
is behind the scenes will run this

00:26:31,870 --> 00:26:35,590
command called kitchen create what

00:26:33,970 --> 00:26:36,669
kitchen create will do is create a

00:26:35,590 --> 00:26:39,700
little test kitchen

00:26:36,669 --> 00:26:41,529
virtual machine on my workstation so my

00:26:39,700 --> 00:26:43,029
workstation is the big orange box it's

00:26:41,529 --> 00:26:44,950
my Mac that's sitting right here in

00:26:43,029 --> 00:26:47,019
front of me and then the Test Kitchen is

00:26:44,950 --> 00:26:49,539
going to be an a bunch of vm in that

00:26:47,019 --> 00:26:51,820
little blue box up there I could then

00:26:49,539 --> 00:26:53,230
kitchen log in although i don't know if

00:26:51,820 --> 00:26:54,909
that's done it's still not done so i

00:26:53,230 --> 00:26:56,619
can't actually kitchen log in yet you're

00:26:54,909 --> 00:26:58,629
going to trust me because the slide says

00:26:56,619 --> 00:27:00,249
i could write kitchen log in and what

00:26:58,629 --> 00:27:02,379
that would do is it would make an ssh

00:27:00,249 --> 00:27:04,779
connection from my local machine it

00:27:02,379 --> 00:27:06,429
would ssh into that Test Kitchen box and

00:27:04,779 --> 00:27:08,590
we'd see that I'm logged in there as the

00:27:06,429 --> 00:27:11,830
vagrant user on this default Ubuntu

00:27:08,590 --> 00:27:14,379
thing so this tells me that I've created

00:27:11,830 --> 00:27:16,720
the environment but then how do I

00:27:14,379 --> 00:27:19,210
actually test my chef coat the next step

00:27:16,720 --> 00:27:21,460
is actually to converge the environment

00:27:19,210 --> 00:27:23,649
and so we exit out from having logged in

00:27:21,460 --> 00:27:25,299
then we run the kitchen converge command

00:27:23,649 --> 00:27:26,529
and you may have noticed if you were

00:27:25,299 --> 00:27:28,269
paying attention that I didn't run

00:27:26,529 --> 00:27:30,369
kitchen create I just ran kitchen

00:27:28,269 --> 00:27:31,720
converge kitchen converge is smart

00:27:30,369 --> 00:27:33,850
enough to say if the kitchen doesn't

00:27:31,720 --> 00:27:35,769
exist I should create the kitchen first

00:27:33,850 --> 00:27:37,929
and then converge it so what does

00:27:35,769 --> 00:27:41,019
kitchen converge do it will it will

00:27:37,929 --> 00:27:42,580
install chef it will upload the cookbook

00:27:41,019 --> 00:27:44,919
that we've written and then it will

00:27:42,580 --> 00:27:47,049
apply the run list so our run list is

00:27:44,919 --> 00:27:49,629
the default Apache cookbook so it's

00:27:47,049 --> 00:27:52,539
going to take that recipe put it on to

00:27:49,629 --> 00:27:56,139
my test kitchen and execute chef client

00:27:52,539 --> 00:27:57,609
across that and so now we can test did

00:27:56,139 --> 00:27:59,559
the chef client run complete

00:27:57,609 --> 00:28:02,139
successfully and if we come back over

00:27:59,559 --> 00:28:03,879
here indeed it did so it is finished

00:28:02,139 --> 00:28:06,220
converging the kitchen is finished it

00:28:03,879 --> 00:28:09,100
took 1 minute and 6 seconds for me to

00:28:06,220 --> 00:28:11,080
take create a virtual machine spin up

00:28:09,100 --> 00:28:13,210
that virtual machine put my chef coat

00:28:11,080 --> 00:28:15,340
onto it and execute the chef client

00:28:13,210 --> 00:28:18,460
across that code so that's pretty cool

00:28:15,340 --> 00:28:20,019
right so now I have this machine this

00:28:18,460 --> 00:28:24,549
test kitchen here that I could actually

00:28:20,019 --> 00:28:26,019
kitchen login and go into and what's the

00:28:24,549 --> 00:28:28,480
name of our cookbook here do you

00:28:26,019 --> 00:28:30,879
remember yeah it's called the Apache

00:28:28,480 --> 00:28:34,480
cookbook so you should expect that it

00:28:30,879 --> 00:28:37,600
might do what hopefully install Apache

00:28:34,480 --> 00:28:39,309
and if it installed Apache it might be

00:28:37,600 --> 00:28:41,499
running so maybe we could check that I

00:28:39,309 --> 00:28:45,249
could do like a double you get right and

00:28:41,499 --> 00:28:48,200
I could look for a local host and let's

00:28:45,249 --> 00:28:51,590
see oh man it certainly isn't running

00:28:48,200 --> 00:28:54,350
connections refused huh that kind of

00:28:51,590 --> 00:28:55,820
stinks I wonder why that is well let's

00:28:54,350 --> 00:28:57,169
just write some tests to make sure that

00:28:55,820 --> 00:28:59,480
what we don't have to do is log in and

00:28:57,169 --> 00:29:02,149
like bang on the box and see if it's

00:28:59,480 --> 00:29:04,159
actually working or not so what I'm

00:29:02,149 --> 00:29:05,779
going to do is I'm actually going to

00:29:04,159 --> 00:29:08,690
open this up in a in a text editor

00:29:05,779 --> 00:29:11,120
locally so I'm going to use this text

00:29:08,690 --> 00:29:13,460
editor called Adam you guys from are you

00:29:11,120 --> 00:29:16,510
all familiar with Adam yeah anybody use

00:29:13,460 --> 00:29:20,090
sublime text that's also cool or vim or

00:29:16,510 --> 00:29:22,039
how do you know an emacs user they'll

00:29:20,090 --> 00:29:23,299
tell you that's exactly right you got it

00:29:22,039 --> 00:29:25,760
we got it that's good I think you've

00:29:23,299 --> 00:29:28,010
seen this show before okay so I'm going

00:29:25,760 --> 00:29:30,919
to just go over here to this crazy deep

00:29:28,010 --> 00:29:33,649
thing here so I mean my recipe my Apache

00:29:30,919 --> 00:29:35,750
cookbook in the test directory there's

00:29:33,649 --> 00:29:37,820
an integration subdirectory with a

00:29:35,750 --> 00:29:40,279
default and then server spec and then

00:29:37,820 --> 00:29:41,779
there's this default spec thing so some

00:29:40,279 --> 00:29:43,340
of you have written rails before so

00:29:41,779 --> 00:29:45,350
you've probably written test before

00:29:43,340 --> 00:29:48,080
using r-spec this is going to look very

00:29:45,350 --> 00:29:50,120
familiar to you so server spec is a

00:29:48,080 --> 00:29:51,980
library that we're going to use to test

00:29:50,120 --> 00:29:54,649
our infrastructure code server spec is

00:29:51,980 --> 00:29:56,659
basically as special matters that sit on

00:29:54,649 --> 00:29:58,850
top of our spec it's going to work all

00:29:56,659 --> 00:30:00,679
the same the thing I like to do first

00:29:58,850 --> 00:30:02,809
though when i'm testing something out is

00:30:00,679 --> 00:30:04,429
just make sure that my tests framework

00:30:02,809 --> 00:30:06,110
is all configured properly so i'm going

00:30:04,429 --> 00:30:07,730
to write the tests that you should

00:30:06,110 --> 00:30:09,860
always write the first test you should

00:30:07,730 --> 00:30:14,899
ever write is you should assert that it

00:30:09,860 --> 00:30:22,179
is awesome and what you should do is you

00:30:14,899 --> 00:30:24,559
should expect tru dot to equal true

00:30:22,179 --> 00:30:27,289
that's a good test right we're going to

00:30:24,559 --> 00:30:29,299
assert the true is true as an operations

00:30:27,289 --> 00:30:30,860
person I know that all you developers

00:30:29,299 --> 00:30:32,389
this is all your tests ever do and you

00:30:30,860 --> 00:30:33,860
say look my tests are green Nathan you

00:30:32,389 --> 00:30:37,519
can put it in production it's totally

00:30:33,860 --> 00:30:40,909
fine so crazy enough like that does

00:30:37,519 --> 00:30:43,309
happen so I can verify that again using

00:30:40,909 --> 00:30:45,679
kitchen I can run this command here

00:30:43,309 --> 00:30:47,539
called kitchen verify and what kitchen

00:30:45,679 --> 00:30:49,909
verify is going to do is it's going to

00:30:47,539 --> 00:30:52,070
install the server spec library in that

00:30:49,909 --> 00:30:54,860
running vm and then it's going to

00:30:52,070 --> 00:30:56,029
execute all of my server spec tests so

00:30:54,860 --> 00:30:58,850
it's going to take a second here to

00:30:56,029 --> 00:31:00,710
install that that's going to run and

00:30:58,850 --> 00:31:01,460
then we're going to see the output is

00:31:00,710 --> 00:31:05,779
that

00:31:01,460 --> 00:31:10,669
here we go in fact rates scroll up like

00:31:05,779 --> 00:31:13,130
not that like that that in fact apache

00:31:10,669 --> 00:31:14,990
is awesome see my tests are green we're

00:31:13,130 --> 00:31:17,029
ready to go to production right yeah

00:31:14,990 --> 00:31:20,299
that's awesome except it's totally not

00:31:17,029 --> 00:31:22,250
awesome so let's go back to our code so

00:31:20,299 --> 00:31:24,460
what were some things that you said

00:31:22,250 --> 00:31:27,409
maybe we could test while we're here

00:31:24,460 --> 00:31:35,600
what's that we could test the request so

00:31:27,409 --> 00:31:37,850
it responds to an HTTP request okay what

00:31:35,600 --> 00:31:42,130
give me one other will do too just

00:31:37,850 --> 00:31:47,960
because I'm feeling I'm feeling fun like

00:31:42,130 --> 00:31:50,179
yeah we can see that it is running cool

00:31:47,960 --> 00:31:52,070
so uh the other thing I like to do when

00:31:50,179 --> 00:31:54,289
I'm writing my test is just write my its

00:31:52,070 --> 00:31:59,570
statements and then rerun that kitchen

00:31:54,289 --> 00:32:01,850
verify because I want to make sure that

00:31:59,570 --> 00:32:04,039
the output looks right because as it

00:32:01,850 --> 00:32:06,710
turns out the output from my server spec

00:32:04,039 --> 00:32:08,630
tests or from any of my test the output

00:32:06,710 --> 00:32:11,299
is for the humans it's not for the

00:32:08,630 --> 00:32:14,059
computers so if I can read this and say

00:32:11,299 --> 00:32:17,059
Apache default is awesome it responds to

00:32:14,059 --> 00:32:18,710
an HTTP request and is running like all

00:32:17,059 --> 00:32:20,720
of that feels like pretty good English

00:32:18,710 --> 00:32:22,100
you know it's good enough that if I if

00:32:20,720 --> 00:32:24,710
you read that and it failed you would

00:32:22,100 --> 00:32:26,299
understand why so also it's fun to see

00:32:24,710 --> 00:32:28,340
that if you just do the its statements

00:32:26,299 --> 00:32:30,500
without any description like anything in

00:32:28,340 --> 00:32:32,179
the do an end block it just implements

00:32:30,500 --> 00:32:34,460
those tests is pending for you which

00:32:32,179 --> 00:32:36,260
also fun to see in a way that to tell

00:32:34,460 --> 00:32:37,700
you this is what I have to test for and

00:32:36,260 --> 00:32:40,820
then eventually what I have to actually

00:32:37,700 --> 00:32:42,919
implement so it responds to an HTTP

00:32:40,820 --> 00:32:44,510
request let's go ahead and write that

00:32:42,919 --> 00:32:47,000
one so we're going to have a do and an

00:32:44,510 --> 00:32:48,110
end block and I'm going to expect this

00:32:47,000 --> 00:32:49,880
one is hard for me to write so you're

00:32:48,110 --> 00:32:55,760
going to have to bear with me i'm going

00:32:49,880 --> 00:32:57,380
to expect a thing and I want it to equal

00:32:55,760 --> 00:32:59,630
zero you're going to be like what is

00:32:57,380 --> 00:33:06,919
what is that thing it's going to be a

00:32:59,630 --> 00:33:09,740
command and I want it exit status to

00:33:06,919 --> 00:33:11,149
equal zero see where I have to type it

00:33:09,740 --> 00:33:12,090
like this because there's too many /

00:33:11,149 --> 00:33:18,740
ends in the

00:33:12,090 --> 00:33:23,549
because you know curl nope w get HTTP

00:33:18,740 --> 00:33:25,980
localhost ok so I expect that when I

00:33:23,549 --> 00:33:29,429
execute this command it's exit status

00:33:25,980 --> 00:33:35,610
will equal 0 what questions you have

00:33:29,429 --> 00:33:37,500
about that 0 just means success you know

00:33:35,610 --> 00:33:40,860
why because this admins are crazy people

00:33:37,500 --> 00:33:42,840
so if the number is 0 that means all

00:33:40,860 --> 00:33:45,059
things are good right none of these

00:33:42,840 --> 00:33:48,029
stupid languages where true and one are

00:33:45,059 --> 00:33:51,179
the same like true one these sound like

00:33:48,029 --> 00:33:52,950
positive things no no 00 is what we're

00:33:51,179 --> 00:33:56,070
looking for because we're sis admins

00:33:52,950 --> 00:33:57,929
that's how we roll ok so and then is

00:33:56,070 --> 00:34:01,320
running let's do another test here

00:33:57,929 --> 00:34:03,419
really quick so expect this one's a

00:34:01,320 --> 00:34:07,830
little bit easier for me to type except

00:34:03,419 --> 00:34:11,639
it's not at all easier to type harder to

00:34:07,830 --> 00:34:13,889
spell I expect the service named

00:34:11,639 --> 00:34:17,760
something what's the service name here

00:34:13,889 --> 00:34:19,980
anyone know httpd you is a good guess

00:34:17,760 --> 00:34:24,659
and it's wrong we're on a bun to what's

00:34:19,980 --> 00:34:29,070
the service name HTTP 24 also a good

00:34:24,659 --> 00:34:32,490
guess also wrong anyone else almost

00:34:29,070 --> 00:34:33,720
almost there apache2 you got it you got

00:34:32,490 --> 00:34:35,339
it because who would want just straight

00:34:33,720 --> 00:34:37,129
up apache you want to patch you too it's

00:34:35,339 --> 00:34:40,649
clearly better it's like boise is good

00:34:37,129 --> 00:34:43,409
but seriously why is it httpd on centos

00:34:40,649 --> 00:34:46,409
and apache two over here like anyone now

00:34:43,409 --> 00:34:48,089
I'll tell you why while I type the

00:34:46,409 --> 00:34:49,560
reason that they're different like that

00:34:48,089 --> 00:34:51,929
is so that everyone in this room can

00:34:49,560 --> 00:34:54,480
stay employed because you know you know

00:34:51,929 --> 00:34:56,609
that it's httpd on centos and you know

00:34:54,480 --> 00:34:58,349
that it's apache2 on ubuntu and your

00:34:56,609 --> 00:35:00,510
boss doesn't know that because that

00:34:58,349 --> 00:35:02,160
person is a manager and that's that's

00:35:00,510 --> 00:35:04,760
the value you bring to your organization

00:35:02,160 --> 00:35:07,410
that's all a lie that's all a lie

00:35:04,760 --> 00:35:10,200
alright so i expect the service to be

00:35:07,410 --> 00:35:11,880
running so that's sound better so look

00:35:10,200 --> 00:35:13,619
that's pretty easy to write that those

00:35:11,880 --> 00:35:15,630
tests especially if your rails developer

00:35:13,619 --> 00:35:17,910
this should seal feel super comfortable

00:35:15,630 --> 00:35:20,250
if what you are is brand new to testing

00:35:17,910 --> 00:35:22,530
this feels like whoa and you're right

00:35:20,250 --> 00:35:24,330
but i will help you get there except i

00:35:22,530 --> 00:35:25,680
can't do it in 40 minutes i can just

00:35:24,330 --> 00:35:27,599
show you how awesome it is and for

00:35:25,680 --> 00:35:29,940
minutes so let's go ahead and run this

00:35:27,599 --> 00:35:32,069
kitchen verify back again over here

00:35:29,940 --> 00:35:38,339
kitchen verify what's going to happen

00:35:32,069 --> 00:35:41,329
when I verify this it's totally going to

00:35:38,339 --> 00:35:44,550
fail because the W get failed before and

00:35:41,329 --> 00:35:47,069
the service is not running and so now

00:35:44,550 --> 00:35:49,380
chef is stupid like why isn't it doing

00:35:47,069 --> 00:35:50,849
anything that I asked it to do so if I

00:35:49,380 --> 00:35:53,760
scroll back sure enough i have three

00:35:50,849 --> 00:35:56,400
examples to failures but i think the

00:35:53,760 --> 00:35:58,290
first thing that passes is a lie it says

00:35:56,400 --> 00:36:01,050
apache is awesome clearly that's not the

00:35:58,290 --> 00:36:03,270
case because it's not responding and

00:36:01,050 --> 00:36:05,339
it's not actually running so now the

00:36:03,270 --> 00:36:06,839
next thing that we should do is we

00:36:05,339 --> 00:36:09,720
should actually like why isn't it

00:36:06,839 --> 00:36:11,609
working tell me why we didn't write the

00:36:09,720 --> 00:36:12,930
recipe all we did was write the test we

00:36:11,609 --> 00:36:14,940
should actually go back and write the

00:36:12,930 --> 00:36:16,380
recipe we should tell it what is its

00:36:14,940 --> 00:36:18,210
desired state so I'm going to go over

00:36:16,380 --> 00:36:20,520
here under the recipe directory there's

00:36:18,210 --> 00:36:23,190
a default thing and what you see here is

00:36:20,520 --> 00:36:25,680
a bunch of comments so that sucks we

00:36:23,190 --> 00:36:28,109
should write some things here so first

00:36:25,680 --> 00:36:32,339
if you wanted Apache to be on that

00:36:28,109 --> 00:36:35,069
machine what would you do what would you

00:36:32,339 --> 00:36:40,890
do you should start the service okay so

00:36:35,069 --> 00:36:42,960
let's say service apache2 and then chef

00:36:40,890 --> 00:36:44,730
has these things we call it an action

00:36:42,960 --> 00:36:48,540
it's a stupid word but that's the word

00:36:44,730 --> 00:36:49,950
we have and we want it to be started so

00:36:48,540 --> 00:36:52,230
that's the thing all right so now let's

00:36:49,950 --> 00:36:56,460
give this a go so what if we do a

00:36:52,230 --> 00:36:58,650
kitchen converge here let's see what

00:36:56,460 --> 00:37:00,630
happens so now it should encounter that

00:36:58,650 --> 00:37:05,910
thing that says service Apache to start

00:37:00,630 --> 00:37:10,260
start oh man what's going on did i

00:37:05,910 --> 00:37:13,010
misspell it I didn't misspell it nice

00:37:10,260 --> 00:37:15,270
guess but it wasn't my fault this time

00:37:13,010 --> 00:37:17,819
so why didn't it start the service

00:37:15,270 --> 00:37:19,859
anyone have a guess I was not installed

00:37:17,819 --> 00:37:22,740
you didn't say misspelled you said not

00:37:19,859 --> 00:37:25,339
installed I can't hear very well you

00:37:22,740 --> 00:37:25,339
should use a mic

00:37:26,069 --> 00:37:33,579
so if i do package apache to action

00:37:30,930 --> 00:37:37,589
installed anyone know why i put that in

00:37:33,579 --> 00:37:39,849
front of the service thing any guesses

00:37:37,589 --> 00:37:41,260
you can't start the service and what if

00:37:39,849 --> 00:37:43,150
the thing isn't installed and as it

00:37:41,260 --> 00:37:44,530
turns out the way chef works when it

00:37:43,150 --> 00:37:46,480
comes to your recipe files it will

00:37:44,530 --> 00:37:48,579
execute their resources in the order in

00:37:46,480 --> 00:37:50,260
which they're listed so first it will

00:37:48,579 --> 00:37:52,300
install the package and then it will

00:37:50,260 --> 00:37:55,030
attempt to start the service if we had

00:37:52,300 --> 00:37:56,950
kept it service first what happens when

00:37:55,030 --> 00:37:59,319
chef encounters a resource it doesn't it

00:37:56,950 --> 00:38:00,880
can't use it will just blow up right

00:37:59,319 --> 00:38:04,119
away so it would never get to the

00:38:00,880 --> 00:38:07,390
package part so package Apache to

00:38:04,119 --> 00:38:10,589
install service Apache to start let's go

00:38:07,390 --> 00:38:14,200
ahead and run our kitchen converge and

00:38:10,589 --> 00:38:15,490
see what happens and this is the part

00:38:14,200 --> 00:38:16,720
where the live demo makes me sweat a

00:38:15,490 --> 00:38:18,760
little bit we're going to see if it

00:38:16,720 --> 00:38:20,440
actually actually works because there's

00:38:18,760 --> 00:38:23,200
totally a case in which it won't like

00:38:20,440 --> 00:38:25,089
this case that we're in right now so

00:38:23,200 --> 00:38:27,339
that's cool but I know I know how to fix

00:38:25,089 --> 00:38:28,420
it I know exactly how to fix it what i

00:38:27,339 --> 00:38:31,420
would do is show you the error message

00:38:28,420 --> 00:38:33,310
whoa it's time to do something else I'm

00:38:31,420 --> 00:38:35,410
late I'm totally late for meetings I

00:38:33,310 --> 00:38:36,910
would show you how to like the error

00:38:35,410 --> 00:38:38,500
message but it for the sake of time

00:38:36,910 --> 00:38:41,220
because we're out of it I'm just going

00:38:38,500 --> 00:38:44,200
to fix it with a little execute resource

00:38:41,220 --> 00:38:45,940
execute his way for chef to just do a

00:38:44,200 --> 00:38:52,170
thing execute a thing and what we need

00:38:45,940 --> 00:38:56,619
to run is an apt get update alright so

00:38:52,170 --> 00:38:58,089
the reasons why man I don't know but you

00:38:56,619 --> 00:38:59,500
know we can totally talk about that but

00:38:58,089 --> 00:39:01,180
that's going to make this thing work and

00:38:59,500 --> 00:39:02,859
the thing that I want is a working demo

00:39:01,180 --> 00:39:04,990
when we leave here today and the thing

00:39:02,859 --> 00:39:06,550
i'm going to give you all is all of the

00:39:04,990 --> 00:39:08,710
working code what we're going to have

00:39:06,550 --> 00:39:11,170
here so there are two of three resources

00:39:08,710 --> 00:39:13,000
updated so it installed the service it

00:39:11,170 --> 00:39:15,520
started it anyone have a guess as to why

00:39:13,000 --> 00:39:17,980
it two of three resources were updated

00:39:15,520 --> 00:39:19,930
that seems odd right I have three

00:39:17,980 --> 00:39:21,430
resources which three resources do I

00:39:19,930 --> 00:39:23,619
have let's just look again at that code

00:39:21,430 --> 00:39:26,260
I'm an execute resource a package

00:39:23,619 --> 00:39:27,849
resource and a service resource so

00:39:26,260 --> 00:39:29,380
here's the thing a bunch is crazy when

00:39:27,849 --> 00:39:31,270
you install the package it also starts

00:39:29,380 --> 00:39:32,680
the service for you because that's what

00:39:31,270 --> 00:39:34,030
you want to do any time you install the

00:39:32,680 --> 00:39:37,650
thing you clearly want to start the

00:39:34,030 --> 00:39:39,299
thing except when you don't so it

00:39:37,650 --> 00:39:41,160
just how a bunch of works and those of

00:39:39,299 --> 00:39:43,109
you that were like it's called httpd

00:39:41,160 --> 00:39:44,970
yeah it is it's crazy it's crazy that

00:39:43,109 --> 00:39:47,150
they do this but it's how that's how

00:39:44,970 --> 00:39:50,039
they do i'm totally out of time now so

00:39:47,150 --> 00:39:54,289
but I'm not done you're not excused yet

00:39:50,039 --> 00:39:57,839
so we should now run our kitchen verify

00:39:54,289 --> 00:40:00,180
to make sure that that passes and what's

00:39:57,839 --> 00:40:01,500
going to happen here is sure enough it's

00:40:00,180 --> 00:40:03,869
going to pass we have three examples

00:40:01,500 --> 00:40:07,230
with zero failures and we can see that

00:40:03,869 --> 00:40:09,539
Apache is awesome it's responding to an

00:40:07,230 --> 00:40:13,410
HTTP request and is running what do you

00:40:09,539 --> 00:40:15,510
think and and we did that in a test

00:40:13,410 --> 00:40:17,579
driven fashion but I want to I want to

00:40:15,510 --> 00:40:19,619
just show you to quickly two things the

00:40:17,579 --> 00:40:23,010
first thing that we should do is we

00:40:19,619 --> 00:40:25,170
should kitchen destroy that's going to

00:40:23,010 --> 00:40:27,000
destroy that virtual machine it's gone

00:40:25,170 --> 00:40:28,680
now because I want to start from fresh

00:40:27,000 --> 00:40:30,720
because i just made a bunch of changes

00:40:28,680 --> 00:40:31,619
in rain converge a bunch of times i want

00:40:30,720 --> 00:40:33,869
to make sure that if this was a

00:40:31,619 --> 00:40:35,460
brand-new machine it would work so now

00:40:33,869 --> 00:40:37,349
i'm just going to run kitchen verify

00:40:35,460 --> 00:40:40,859
kitchen verify is going to be smart

00:40:37,349 --> 00:40:42,240
enough to create converge verify for me

00:40:40,859 --> 00:40:44,010
and then it's going to tell me the

00:40:42,240 --> 00:40:45,630
results hopefully the results are good

00:40:44,010 --> 00:40:48,210
while that's running i'm just going to

00:40:45,630 --> 00:40:50,069
switch these two screens around again so

00:40:48,210 --> 00:40:51,809
now we can come back up here and see

00:40:50,069 --> 00:40:54,059
what we saw this is the thing that I ran

00:40:51,809 --> 00:40:57,240
at the very beginning I ran a kitchen

00:40:54,059 --> 00:41:02,849
converge and you can see here that it

00:40:57,240 --> 00:41:04,619
converged 40 of 58 resources and the

00:41:02,849 --> 00:41:08,130
other thing that it did is I can now

00:41:04,619 --> 00:41:17,520
open let me do this you can see what i'm

00:41:08,130 --> 00:41:20,130
typing open local local host at i think

00:41:17,520 --> 00:41:23,849
i put it at port 8080 we'll find out in

00:41:20,130 --> 00:41:25,500
just a second waiting for local host

00:41:23,849 --> 00:41:28,079
look at that listing widgets this is a

00:41:25,500 --> 00:41:30,990
rails app we can create a new widget new

00:41:28,079 --> 00:41:33,180
widget i'm going to call it a ato i'm

00:41:30,990 --> 00:41:34,710
going to give it a part number of one

00:41:33,180 --> 00:41:36,990
and then i can create the widget and

00:41:34,710 --> 00:41:39,299
then i can go back and look at that it's

00:41:36,990 --> 00:41:41,279
a working rails app it's beautiful it's

00:41:39,299 --> 00:41:45,180
a little crud thing i can show edit

00:41:41,279 --> 00:41:49,170
destroy I can cough really loud into the

00:41:45,180 --> 00:41:51,270
mic I can also just open this up really

00:41:49,170 --> 00:41:51,780
quick and show you what we did so my

00:41:51,270 --> 00:41:53,850
kitchen

00:41:51,780 --> 00:41:55,650
a mole looks kind of like this it's

00:41:53,850 --> 00:41:58,170
vagrant it's doing some for port

00:41:55,650 --> 00:42:00,480
forwarding so on the Virtual Machine

00:41:58,170 --> 00:42:02,370
port 80 goes to 80 80 on my local

00:42:00,480 --> 00:42:04,110
machine and it's running this big long

00:42:02,370 --> 00:42:06,330
recipe here called widget world

00:42:04,110 --> 00:42:08,880
application default which creates a

00:42:06,330 --> 00:42:10,590
database installs the rails app gets

00:42:08,880 --> 00:42:12,330
everything all configured for us and

00:42:10,590 --> 00:42:14,910
then just the final thing that we need

00:42:12,330 --> 00:42:17,040
to do here before I truly excuse you is

00:42:14,910 --> 00:42:18,660
see that when I start from fresh three

00:42:17,040 --> 00:42:24,150
examples are passing I have zero

00:42:18,660 --> 00:42:25,980
failures what do you think all right you

00:42:24,150 --> 00:42:27,500
have negative two minutes and 40 seconds

00:42:25,980 --> 00:42:29,790
to ask me any questions that you have

00:42:27,500 --> 00:42:31,770
all right but honestly if you do want to

00:42:29,790 --> 00:42:33,810
ask me questions so first thank you so

00:42:31,770 --> 00:42:37,800
much for coming all this is on my github

00:42:33,810 --> 00:42:39,930
right now which is github.com / Nathan

00:42:37,800 --> 00:42:42,570
Harvey and if you do have questions walk

00:42:39,930 --> 00:42:44,430
with me to the far end of the hall where

00:42:42,570 --> 00:42:46,020
I'm going to give my next talk you can

00:42:44,430 --> 00:42:47,460
ask me questions on the way so we're

00:42:46,020 --> 00:42:49,770
clear because the next talk has nothing

00:42:47,460 --> 00:42:51,450
to do with this also you can just troll

00:42:49,770 --> 00:42:53,670
me with questions about this talk in the

00:42:51,450 --> 00:42:55,320
next talk if you prefer would be fine

00:42:53,670 --> 00:42:58,190
with me everyone else will be confused

00:42:55,320 --> 00:42:58,190

YouTube URL: https://www.youtube.com/watch?v=rjL_BnsNGWg


