Title: All Things Open 2015 | Lee Faus - Github | Github 101: An Introduction
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2014 All Things Open 2015, October 19th and 20th, Raleigh NC. All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,700 --> 00:00:13,830
welcome to the github 101 session first

00:00:10,469 --> 00:00:17,220
of all I will apologize for my voice I

00:00:13,830 --> 00:00:18,570
am one of those dads and I have a 14

00:00:17,220 --> 00:00:20,400
year old daughter who was in a very

00:00:18,570 --> 00:00:23,910
competitive lacrosse game this weekend

00:00:20,400 --> 00:00:25,260
and my wife informed me that I'm not

00:00:23,910 --> 00:00:28,500
going to be coaching from the sideline

00:00:25,260 --> 00:00:33,809
but that's very hard not to do so I am

00:00:28,500 --> 00:00:38,850
one of those dads so we're going to talk

00:00:33,809 --> 00:00:42,180
about today is what is github and get

00:00:38,850 --> 00:00:45,870
and github sort of go together and I

00:00:42,180 --> 00:00:48,809
came to github after being a user since

00:00:45,870 --> 00:00:51,239
2008 and there's actually a really neat

00:00:48,809 --> 00:00:53,969
little feature that if anybody here is

00:00:51,239 --> 00:00:56,640
an API developer github has its own

00:00:53,969 --> 00:00:58,590
api's and you can actually look up your

00:00:56,640 --> 00:01:01,170
github user name so if you go to the

00:00:58,590 --> 00:01:03,539
api's users your username you can

00:01:01,170 --> 00:01:05,970
actually get the ID and the ID that

00:01:03,539 --> 00:01:07,200
comes out is just an increment so when

00:01:05,970 --> 00:01:10,590
you go out there and if you look up

00:01:07,200 --> 00:01:14,790
Chris wanstrath who is our CEO his ID

00:01:10,590 --> 00:01:17,250
number is 2 so I'm very proud that we

00:01:14,790 --> 00:01:20,340
now have over 10 million users on github

00:01:17,250 --> 00:01:22,860
com and out of those 10 million users I

00:01:20,340 --> 00:01:28,439
am actually in the first forty thousand

00:01:22,860 --> 00:01:29,790
so um and there's a ton of buzz about

00:01:28,439 --> 00:01:31,079
github and there's some things that I

00:01:29,790 --> 00:01:32,729
want to bring up today because I know

00:01:31,079 --> 00:01:34,530
there's a lot of organizations when we

00:01:32,729 --> 00:01:36,500
talk about getting github about the

00:01:34,530 --> 00:01:38,880
benefits of github for your organization

00:01:36,500 --> 00:01:42,990
especially for those of you how many

00:01:38,880 --> 00:01:45,899
people were in the keynote okay so we

00:01:42,990 --> 00:01:48,960
believe very firmly in the same ideas

00:01:45,899 --> 00:01:52,229
that Jim brought up about the open

00:01:48,960 --> 00:01:57,960
enterprise and so for me where I came

00:01:52,229 --> 00:02:00,570
from is I am a solutions architect my

00:01:57,960 --> 00:02:03,840
name is Lee Foust I had my own business

00:02:00,570 --> 00:02:05,430
for about five years and what I did is I

00:02:03,840 --> 00:02:07,920
did business transformation for

00:02:05,430 --> 00:02:09,420
companies and what we did is the

00:02:07,920 --> 00:02:11,129
business transformation that we did is

00:02:09,420 --> 00:02:13,170
we were doing devops before it was

00:02:11,129 --> 00:02:13,890
called devops we were doing a lot of

00:02:13,170 --> 00:02:16,200
automation

00:02:13,890 --> 00:02:18,000
a lot of discovery we were building

00:02:16,200 --> 00:02:19,950
microservices before we called them

00:02:18,000 --> 00:02:22,590
microservices everything was being built

00:02:19,950 --> 00:02:25,290
to live on VMS that never had more than

00:02:22,590 --> 00:02:26,310
a gig of memory available to them we

00:02:25,290 --> 00:02:28,050
then started playing around with

00:02:26,310 --> 00:02:31,980
container started using those when

00:02:28,050 --> 00:02:33,900
docker was in point2 so a lot of the

00:02:31,980 --> 00:02:35,610
things that we did is we did all of our

00:02:33,900 --> 00:02:37,110
coding and everything everything through

00:02:35,610 --> 00:02:38,310
github because one of the things that

00:02:37,110 --> 00:02:40,080
allowed us to be able to do is to

00:02:38,310 --> 00:02:42,180
communicate with other developers and

00:02:40,080 --> 00:02:43,940
allow people to be able to see things

00:02:42,180 --> 00:02:47,459
before they ever made it into production

00:02:43,940 --> 00:02:49,590
so like one of the key things that with

00:02:47,459 --> 00:02:52,380
the Internet of Things and we look at

00:02:49,590 --> 00:02:55,620
IOT devices one of the things that we

00:02:52,380 --> 00:02:57,780
actually talk about is the cost of a bug

00:02:55,620 --> 00:03:00,120
going into production is going to

00:02:57,780 --> 00:03:02,190
escalate dramatically over the next five

00:03:00,120 --> 00:03:03,780
to ten years so when you think about

00:03:02,190 --> 00:03:06,180
what that device when it's actually

00:03:03,780 --> 00:03:09,870
sitting in your wall when that device is

00:03:06,180 --> 00:03:12,180
sitting on the pavement and if a bug

00:03:09,870 --> 00:03:13,709
actually makes it into that release how

00:03:12,180 --> 00:03:16,340
quickly am I going to be able to go out

00:03:13,709 --> 00:03:19,290
and redeliver that code to that device

00:03:16,340 --> 00:03:22,410
it may take me a month it may take me a

00:03:19,290 --> 00:03:23,820
week it may take me a day it all depends

00:03:22,410 --> 00:03:24,900
on what the infrastructure actually

00:03:23,820 --> 00:03:27,690
looks like to be able to deliver those

00:03:24,900 --> 00:03:30,299
with github we try to provide a platform

00:03:27,690 --> 00:03:32,700
that allows other developers to see what

00:03:30,299 --> 00:03:35,430
is going on before it ever even makes it

00:03:32,700 --> 00:03:36,989
into production so I've got over 20

00:03:35,430 --> 00:03:38,220
years of development experience I'm

00:03:36,989 --> 00:03:40,799
actually really excited i live in

00:03:38,220 --> 00:03:45,290
mooresville now but my family we

00:03:40,799 --> 00:03:47,640
actually moved from Holly Springs so I

00:03:45,290 --> 00:03:50,489
feel like I'm coming home so this is

00:03:47,640 --> 00:03:52,640
nice to be back I actually taught at

00:03:50,489 --> 00:03:55,260
Athens Drive high school for two years

00:03:52,640 --> 00:03:57,269
and then from there I was an adjunct at

00:03:55,260 --> 00:03:58,829
NC State I taught there when I worked

00:03:57,269 --> 00:04:01,920
for a company I start up on centennial

00:03:58,829 --> 00:04:05,730
actually write a diagonal from Red Hat

00:04:01,920 --> 00:04:07,560
called together soft so um now here I am

00:04:05,730 --> 00:04:09,090
at github doing another startup and

00:04:07,560 --> 00:04:13,320
super excited to talk to you guys about

00:04:09,090 --> 00:04:17,669
get in github so what is get how many

00:04:13,320 --> 00:04:20,370
people here use svn okay got some svn

00:04:17,669 --> 00:04:23,039
users how many here use clear case any

00:04:20,370 --> 00:04:26,000
clear case users if you clear case how

00:04:23,039 --> 00:04:29,900
about CBS any CVS users got some

00:04:26,000 --> 00:04:33,230
CBS so a lot of the different version

00:04:29,900 --> 00:04:35,240
control systems that we see today we're

00:04:33,230 --> 00:04:37,340
seeing a shift and that shift is going

00:04:35,240 --> 00:04:40,040
from a centralized distributed version

00:04:37,340 --> 00:04:42,440
control system to a distributed version

00:04:40,040 --> 00:04:45,800
control system and that it's a really

00:04:42,440 --> 00:04:48,140
fancy term of being able to say I can

00:04:45,800 --> 00:04:51,560
actually work locally on my machine and

00:04:48,140 --> 00:04:53,420
make all kinds of changes without having

00:04:51,560 --> 00:04:56,300
to always commit them back up to a

00:04:53,420 --> 00:04:58,220
central repository when I actually have

00:04:56,300 --> 00:05:01,040
a set of code that i feel like i'm ready

00:04:58,220 --> 00:05:03,530
to share then i do what's called a push

00:05:01,040 --> 00:05:05,060
and that it push is when everybody else

00:05:03,530 --> 00:05:07,460
can see the changes that i'm going to

00:05:05,060 --> 00:05:09,140
make the other thing is is what we find

00:05:07,460 --> 00:05:11,810
is because people have their own little

00:05:09,140 --> 00:05:14,630
mini version control system on their

00:05:11,810 --> 00:05:17,750
machine that what they had end up doing

00:05:14,630 --> 00:05:19,790
is they get to experiment a lot more so

00:05:17,750 --> 00:05:21,290
there's really easy ways i'm going to

00:05:19,790 --> 00:05:23,390
show you some ways to be able to go in

00:05:21,290 --> 00:05:25,730
create some commits and then you can do

00:05:23,390 --> 00:05:27,169
a revert and then i can undo a change

00:05:25,730 --> 00:05:30,740
because it's not exactly what i was

00:05:27,169 --> 00:05:33,169
looking for before when i I've used CVS

00:05:30,740 --> 00:05:34,880
I've used clear case I've used svn what

00:05:33,169 --> 00:05:36,590
we used to do is we I would have

00:05:34,880 --> 00:05:38,960
development teams where the developers

00:05:36,590 --> 00:05:40,490
would wait a week before they would ever

00:05:38,960 --> 00:05:41,780
commit their code they make a whole

00:05:40,490 --> 00:05:44,030
bunch of changes just save save save

00:05:41,780 --> 00:05:45,290
save save and then all of a sudden it's

00:05:44,030 --> 00:05:46,490
Friday afternoon we're getting ready for

00:05:45,290 --> 00:05:48,560
a code review and they would go ahead

00:05:46,490 --> 00:05:50,750
and do it commits at the end of the week

00:05:48,560 --> 00:05:53,210
and all of a sudden they've changed 186

00:05:50,750 --> 00:05:54,440
files and now you're going to do a code

00:05:53,210 --> 00:05:57,650
review and you're kind of like how am I

00:05:54,440 --> 00:06:01,190
supposed to review 186 miles in two

00:05:57,650 --> 00:06:02,810
hours so when people are able to be able

00:06:01,190 --> 00:06:04,610
to do these small little incremental

00:06:02,810 --> 00:06:06,020
changes locally and they feel a lot more

00:06:04,610 --> 00:06:07,669
comfortable about what they're building

00:06:06,020 --> 00:06:09,169
then when they push it some of the

00:06:07,669 --> 00:06:11,410
things we'll look at in github is we

00:06:09,169 --> 00:06:13,490
then have a communication sharing

00:06:11,410 --> 00:06:15,290
facility inside of get up called a pull

00:06:13,490 --> 00:06:16,850
request that you can actually go through

00:06:15,290 --> 00:06:20,810
and actually start a conversation with

00:06:16,850 --> 00:06:23,960
other people so the place where if you

00:06:20,810 --> 00:06:26,810
want to get started with get the best

00:06:23,960 --> 00:06:29,450
place is what i call the book this is my

00:06:26,810 --> 00:06:33,350
Bible it is the place that I go to

00:06:29,450 --> 00:06:36,140
because it is for me get from the

00:06:33,350 --> 00:06:39,330
command line is like VI and emacs there

00:06:36,140 --> 00:06:41,220
are some really good people that I said

00:06:39,330 --> 00:06:44,009
down with an i pair program with and I

00:06:41,220 --> 00:06:46,590
see them using it and I'm like what did

00:06:44,009 --> 00:06:48,599
you just do that was really cool and

00:06:46,590 --> 00:06:50,219
they're like oh I created this macro and

00:06:48,599 --> 00:06:52,110
I saved it into my git config and I

00:06:50,219 --> 00:06:57,419
example these colors I know wow that is

00:06:52,110 --> 00:07:01,020
awesome and for me I am still a I have

00:06:57,419 --> 00:07:03,120
to go back to a book or to a set of

00:07:01,020 --> 00:07:05,219
references to actually walk me through

00:07:03,120 --> 00:07:07,860
what do all the different commands do

00:07:05,219 --> 00:07:09,270
now if you're not a command line person

00:07:07,860 --> 00:07:11,940
the good news is is that there's also a

00:07:09,270 --> 00:07:14,310
number of GUI tools that exist that you

00:07:11,940 --> 00:07:16,919
can use to be able to use on top of get

00:07:14,310 --> 00:07:19,349
as well so if you're on a Mac there's a

00:07:16,919 --> 00:07:21,419
really nice tool called tower we also

00:07:19,349 --> 00:07:24,030
have one that we built from github that

00:07:21,419 --> 00:07:27,419
we have a github desktop which we just

00:07:24,030 --> 00:07:30,529
released a new version about four months

00:07:27,419 --> 00:07:33,270
ago that runs on both windows and on Mac

00:07:30,529 --> 00:07:35,460
there's a number of other GUI tools from

00:07:33,270 --> 00:07:38,550
other companies so to get you

00:07:35,460 --> 00:07:40,020
comfortable so I'm going to be walking

00:07:38,550 --> 00:07:41,550
through some of the command line because

00:07:40,020 --> 00:07:43,349
I know for a lot of people that like to

00:07:41,550 --> 00:07:45,690
know what's sort of going on under the

00:07:43,349 --> 00:07:48,270
hood and then we'll talk about what some

00:07:45,690 --> 00:07:55,319
of the UI tools will could look like as

00:07:48,270 --> 00:07:58,589
well so installation of gets how many

00:07:55,319 --> 00:08:00,479
people here are windows users okay I'm

00:07:58,589 --> 00:08:05,580
sorry you're going to install get

00:08:00,479 --> 00:08:08,339
yourself okay most of the basic linux

00:08:05,580 --> 00:08:10,710
distributions all of the mac machines

00:08:08,339 --> 00:08:13,229
that you get today all have get

00:08:10,710 --> 00:08:15,360
pre-installed not necessarily the latest

00:08:13,229 --> 00:08:16,620
version so sometimes you may have to

00:08:15,360 --> 00:08:18,810
patch it you may have to upgrade it you

00:08:16,620 --> 00:08:21,360
have to get the latest version and if

00:08:18,810 --> 00:08:24,120
anybody here you guys are really lucky

00:08:21,360 --> 00:08:27,419
because get is now a first class citizen

00:08:24,120 --> 00:08:30,479
from probably about windows 8 and beyond

00:08:27,419 --> 00:08:34,769
if you're still on windows XP you may

00:08:30,479 --> 00:08:36,329
actually have to do some compiling so as

00:08:34,769 --> 00:08:39,300
you start to go through some of the

00:08:36,329 --> 00:08:40,769
different tools what happens is there's

00:08:39,300 --> 00:08:43,260
a number of things under the hood

00:08:40,769 --> 00:08:45,540
because it's basically get is like a

00:08:43,260 --> 00:08:48,209
little mini file system that sits on top

00:08:45,540 --> 00:08:49,170
of your actual operating system so

00:08:48,209 --> 00:08:49,810
there's some things that have to happen

00:08:49,170 --> 00:08:53,980
in the back

00:08:49,810 --> 00:08:55,630
ground so if you're on Windows the

00:08:53,980 --> 00:08:58,210
easiest way to be able to do it is

00:08:55,630 --> 00:08:59,710
actually for me anytime I have to

00:08:58,210 --> 00:09:01,450
install it on Windows machine as I tell

00:08:59,710 --> 00:09:05,920
people even if you don't plan to use the

00:09:01,450 --> 00:09:08,650
I get desktop the github desktop for

00:09:05,920 --> 00:09:11,529
windows if even if you choose not to use

00:09:08,650 --> 00:09:13,900
the GUI it already comes with git bash

00:09:11,529 --> 00:09:15,640
so you can already go in you can start

00:09:13,900 --> 00:09:17,740
using command line tools it plugs

00:09:15,640 --> 00:09:19,029
directly in the PowerShell so you can

00:09:17,740 --> 00:09:26,040
actually start right from there and

00:09:19,029 --> 00:09:29,110
never have to pull up the GUI at all so

00:09:26,040 --> 00:09:31,570
once you have get installed this is

00:09:29,110 --> 00:09:34,330
probably the most confusing part about

00:09:31,570 --> 00:09:36,940
getting it up and running is because

00:09:34,330 --> 00:09:39,339
you're doing these things locally if I'm

00:09:36,940 --> 00:09:42,550
in svn or famine CVS or farming clear

00:09:39,339 --> 00:09:46,450
case when I'm doing my commits locally I

00:09:42,550 --> 00:09:49,060
Know Who I am on my machine well get

00:09:46,450 --> 00:09:50,470
doesn't know who you are and there's

00:09:49,060 --> 00:09:53,770
actually many different ways you can

00:09:50,470 --> 00:09:55,510
actually configure who you are how many

00:09:53,770 --> 00:10:00,250
people here contribute to an open source

00:09:55,510 --> 00:10:04,720
project great awesome how many of you

00:10:00,250 --> 00:10:06,520
use your work email address to be able

00:10:04,720 --> 00:10:10,330
to collaborate on those open source

00:10:06,520 --> 00:10:12,190
projects ok so that's good as well so we

00:10:10,330 --> 00:10:14,290
have a large number of companies that

00:10:12,190 --> 00:10:17,170
are now evolving to the point that

00:10:14,290 --> 00:10:19,420
they're allowing employees to do clas

00:10:17,170 --> 00:10:21,160
contributor license agreements to be

00:10:19,420 --> 00:10:22,960
able to show that hey this particular

00:10:21,160 --> 00:10:25,210
company supports their developer

00:10:22,960 --> 00:10:26,770
spending four hours a week whatever

00:10:25,210 --> 00:10:28,510
being able to contribute knowing that

00:10:26,770 --> 00:10:31,089
that code most likely will end up coming

00:10:28,510 --> 00:10:33,790
back in-house at some point in time to

00:10:31,089 --> 00:10:36,850
be able to assist maybe it's a fix to

00:10:33,790 --> 00:10:38,530
tomcat maybe it's a fix to apache web

00:10:36,850 --> 00:10:41,200
server maybe it's a fix to twitter

00:10:38,530 --> 00:10:42,700
bootstrap whatever it might be those

00:10:41,200 --> 00:10:46,360
things end up coming back into the

00:10:42,700 --> 00:10:48,459
organization as a whole so one of the

00:10:46,360 --> 00:10:51,670
things that we end up seeing a lot for

00:10:48,459 --> 00:10:53,770
individuals is when we're doing open

00:10:51,670 --> 00:10:56,529
source projects is you have to maintain

00:10:53,770 --> 00:10:58,900
multiple identities on your machine so

00:10:56,529 --> 00:11:00,670
the easiest way obviously to do this is

00:10:58,900 --> 00:11:02,960
some of us are fortunate enough that we

00:11:00,670 --> 00:11:04,550
have two machines so I can have one

00:11:02,960 --> 00:11:06,100
machine that i use at work and i have

00:11:04,550 --> 00:11:08,660
one machine that I use when I'm at home

00:11:06,100 --> 00:11:10,160
but we all know how great that is trying

00:11:08,660 --> 00:11:11,210
to keep all those files and sink and

00:11:10,160 --> 00:11:13,280
trying to be able to keep things back

00:11:11,210 --> 00:11:15,440
and forth so when you're at work

00:11:13,280 --> 00:11:17,750
somebody opens up a pull request on

00:11:15,440 --> 00:11:20,000
github and they're like hey I saw

00:11:17,750 --> 00:11:21,260
somebody just made this commit I would

00:11:20,000 --> 00:11:22,970
love somebody be able there's a small

00:11:21,260 --> 00:11:24,530
little change could you go ahead and

00:11:22,970 --> 00:11:26,210
change this array to being something

00:11:24,530 --> 00:11:30,020
different and what happens is you're at

00:11:26,210 --> 00:11:32,030
work but my machines at home so how do I

00:11:30,020 --> 00:11:34,220
go ahead and how do I contribute over my

00:11:32,030 --> 00:11:35,990
lunch hour in the afternoon so what we

00:11:34,220 --> 00:11:39,170
do is we use a command called git config

00:11:35,990 --> 00:11:41,720
and what git config config actually runs

00:11:39,170 --> 00:11:45,620
at three different levels so there is

00:11:41,720 --> 00:11:48,410
your system level so your machine itself

00:11:45,620 --> 00:11:50,540
there is a global level which is sort of

00:11:48,410 --> 00:11:53,480
like your global identity and then you

00:11:50,540 --> 00:11:55,490
have what we call your local identity so

00:11:53,480 --> 00:11:57,680
what you may do is let's say your

00:11:55,490 --> 00:12:00,410
company internally is using git and

00:11:57,680 --> 00:12:02,570
github what you would do is most likely

00:12:00,410 --> 00:12:06,230
have your global identity would be your

00:12:02,570 --> 00:12:08,540
company that would be where you work day

00:12:06,230 --> 00:12:10,160
to day that makes it really easy for

00:12:08,540 --> 00:12:11,570
being able to do your commits but let's

00:12:10,160 --> 00:12:13,280
say you want to go ahead and you want to

00:12:11,570 --> 00:12:14,810
do a clone out of a repo you want pull

00:12:13,280 --> 00:12:16,850
it down to your machine you want to work

00:12:14,810 --> 00:12:18,320
on it and make some small changes but

00:12:16,850 --> 00:12:20,690
you want to use your personal identity

00:12:18,320 --> 00:12:23,330
that's when you would use a local so

00:12:20,690 --> 00:12:25,250
here if I do I get config and I do a

00:12:23,330 --> 00:12:28,310
dash dash list what we'll end up do it

00:12:25,250 --> 00:12:32,950
is it'll actually show me all of my

00:12:28,310 --> 00:12:32,950
config options so that may sit here

00:12:36,680 --> 00:12:39,520
that mean

00:12:41,630 --> 00:12:51,560
let me do I get config list and hear

00:12:49,070 --> 00:12:53,750
what we can see is we see my basic

00:12:51,560 --> 00:12:56,630
identity and some of my settings for my

00:12:53,750 --> 00:12:58,430
machine so if you if it's your first

00:12:56,630 --> 00:12:59,870
time going through if you're using any

00:12:58,430 --> 00:13:01,100
of the GUI tools most of the time

00:12:59,870 --> 00:13:02,840
they'll actually walk you through this

00:13:01,100 --> 00:13:06,020
they'll check to see if you have a

00:13:02,840 --> 00:13:08,120
default git config file if you don't

00:13:06,020 --> 00:13:09,770
have one it'll create one for you and

00:13:08,120 --> 00:13:11,780
then ask you for what he is your

00:13:09,770 --> 00:13:13,310
username what is your email address and

00:13:11,780 --> 00:13:15,980
what we'll do is we'll set all this up

00:13:13,310 --> 00:13:17,930
for you now if you want to go in and

00:13:15,980 --> 00:13:20,240
you've got another project that's when

00:13:17,930 --> 00:13:22,550
you would go ahead if I set I get config

00:13:20,240 --> 00:13:25,580
if I tried to do a local right now I'm

00:13:22,550 --> 00:13:27,350
not in a repository so it would

00:13:25,580 --> 00:13:29,600
basically not allow me to be able to do

00:13:27,350 --> 00:13:31,210
it I could do a system setting which

00:13:29,600 --> 00:13:33,920
would basically just be for this machine

00:13:31,210 --> 00:13:35,720
and that would allow me to be able to

00:13:33,920 --> 00:13:37,970
make some edits and stuff for that

00:13:35,720 --> 00:13:44,450
period of time underneath the system

00:13:37,970 --> 00:13:47,450
user now when we actually talk about

00:13:44,450 --> 00:13:51,770
where code lives so one of the things

00:13:47,450 --> 00:13:54,140
that we can do is we talked about a

00:13:51,770 --> 00:13:56,090
commit this is going to be probably

00:13:54,140 --> 00:13:58,460
those of you that have done CVS and svn

00:13:56,090 --> 00:13:59,600
when we talk about doing a commit this

00:13:58,460 --> 00:14:01,700
is going to be something that's going to

00:13:59,600 --> 00:14:02,990
be very confusing to you so what I'm

00:14:01,700 --> 00:14:05,180
going to do is I'm going to take a step

00:14:02,990 --> 00:14:08,630
back and show you what actually happens

00:14:05,180 --> 00:14:11,110
on github and how github actually thinks

00:14:08,630 --> 00:14:14,540
about what where the code actually lives

00:14:11,110 --> 00:14:18,140
so here we talked about having a command

00:14:14,540 --> 00:14:21,110
called git clone what if I've got two

00:14:18,140 --> 00:14:23,630
different databases what happens is is a

00:14:21,110 --> 00:14:26,240
clone basically takes everything that's

00:14:23,630 --> 00:14:29,270
in this database picks it up and copies

00:14:26,240 --> 00:14:31,490
it and puts it in my local database now

00:14:29,270 --> 00:14:33,110
once i have that local database what i

00:14:31,490 --> 00:14:35,420
can do is i can make small little

00:14:33,110 --> 00:14:36,740
changes in increments and then what i do

00:14:35,420 --> 00:14:38,570
is i can take what's in my local

00:14:36,740 --> 00:14:41,780
database and i can copy them push them

00:14:38,570 --> 00:14:44,930
back up so that's kind of the route at

00:14:41,780 --> 00:14:47,900
how people actually work with github so

00:14:44,930 --> 00:14:52,250
what I'm going to do is I actually have

00:14:47,900 --> 00:14:54,190
a version of github running this is

00:14:52,250 --> 00:14:56,320
actually running on a vm on

00:14:54,190 --> 00:14:58,710
my machine so we have two different

00:14:56,320 --> 00:15:01,000
versions of github we have github com

00:14:58,710 --> 00:15:03,760
which is our software as a service

00:15:01,000 --> 00:15:05,740
version you basically the way we make

00:15:03,760 --> 00:15:07,810
money on that is we have two different

00:15:05,740 --> 00:15:10,060
types of repositories we have public

00:15:07,810 --> 00:15:11,710
repositories and private repositories if

00:15:10,060 --> 00:15:13,540
you're just playing around you can

00:15:11,710 --> 00:15:15,790
create as many public repositories as

00:15:13,540 --> 00:15:17,650
you want free of charge not going to

00:15:15,790 --> 00:15:19,750
cost you anything it's a great place if

00:15:17,650 --> 00:15:22,900
you want to learn to be able to go out

00:15:19,750 --> 00:15:29,890
there a lot of the online coding places

00:15:22,900 --> 00:15:31,810
like you to my treehouse a lot of those

00:15:29,890 --> 00:15:33,460
all talk about that's where you start is

00:15:31,810 --> 00:15:34,690
you actually start from github that's

00:15:33,460 --> 00:15:37,000
where all the code lives and then you

00:15:34,690 --> 00:15:38,350
put it into a public repo for people to

00:15:37,000 --> 00:15:42,730
be able to collaborate with you in your

00:15:38,350 --> 00:15:45,040
class so um the other version is our the

00:15:42,730 --> 00:15:46,420
private repos what we'll do is depending

00:15:45,040 --> 00:15:48,730
on the size of your organization you

00:15:46,420 --> 00:15:51,310
might have a small start-up so you might

00:15:48,730 --> 00:15:53,290
pay $25 a month to be able to have ten

00:15:51,310 --> 00:15:55,210
private repositories and those

00:15:53,290 --> 00:15:57,340
repositories are only seen by people

00:15:55,210 --> 00:15:59,740
that you invite to be able to see those

00:15:57,340 --> 00:16:01,660
repositories the other version of github

00:15:59,740 --> 00:16:03,400
that we have is our enterprise version

00:16:01,660 --> 00:16:05,260
and what the enterprise version does is

00:16:03,400 --> 00:16:07,120
it's a version that runs into virtual

00:16:05,260 --> 00:16:09,810
appliance that you basically put behind

00:16:07,120 --> 00:16:11,710
your firewall it's the exact same code

00:16:09,810 --> 00:16:14,140
everything exactly the same way that

00:16:11,710 --> 00:16:15,520
github com is running except it runs in

00:16:14,140 --> 00:16:17,260
a small little virtual appliance that

00:16:15,520 --> 00:16:19,660
you put in your own and infrastructure

00:16:17,260 --> 00:16:21,580
so this version right here is actually

00:16:19,660 --> 00:16:23,560
running github enterprise as you can see

00:16:21,580 --> 00:16:24,850
it looks exactly the same as github com

00:16:23,560 --> 00:16:29,350
for those of you that have been out

00:16:24,850 --> 00:16:31,180
there before and right now if I go and I

00:16:29,350 --> 00:16:33,690
look on the right hand side here I

00:16:31,180 --> 00:16:36,730
actually have what's called a clone URL

00:16:33,690 --> 00:16:40,420
so what this clone URL is actually

00:16:36,730 --> 00:16:42,400
telling me is this is the location if I

00:16:40,420 --> 00:16:44,470
wanted to take this database it's

00:16:42,400 --> 00:16:47,140
sitting on the server and I wanted to

00:16:44,470 --> 00:16:50,530
put it on to my local machine I would

00:16:47,140 --> 00:16:52,920
have to use that URL so here this gives

00:16:50,530 --> 00:16:56,490
me a nice little copy to clipboard and

00:16:52,920 --> 00:17:00,089
so now if I go back over to my command

00:16:56,490 --> 00:17:00,089
let me go into

00:17:02,020 --> 00:17:09,290
now what I'm going to do is I'm going to

00:17:04,070 --> 00:17:11,720
do that command get home and this now is

00:17:09,290 --> 00:17:14,750
the full URL now the way that this URL

00:17:11,720 --> 00:17:17,690
is actually defined is this is the

00:17:14,750 --> 00:17:20,300
machine name so if you are on github com

00:17:17,690 --> 00:17:26,150
that would just be HTTPS colon slash

00:17:20,300 --> 00:17:29,510
github.com / the next entry is either an

00:17:26,150 --> 00:17:31,700
organization name or a username so if

00:17:29,510 --> 00:17:34,670
this was my user on github com it would

00:17:31,700 --> 00:17:37,010
be leaf house this is an organization

00:17:34,670 --> 00:17:39,710
that I created to be able to share code

00:17:37,010 --> 00:17:41,990
inside on an enterprise edition so that

00:17:39,710 --> 00:17:43,700
organization that we call I call it

00:17:41,990 --> 00:17:45,950
Republic this is what I call my star

00:17:43,700 --> 00:17:48,560
wars demo so right now I'm acting as

00:17:45,950 --> 00:17:51,320
Luke Skywalker Chewbacca is our site

00:17:48,560 --> 00:17:55,010
admin Darth Vader is our QA release

00:17:51,320 --> 00:17:56,540
engineer so we have all kinds of fun

00:17:55,010 --> 00:18:01,010
with it when I'm doing classes and

00:17:56,540 --> 00:18:03,470
giving demos to customers so now when I

00:18:01,010 --> 00:18:05,420
go ahead and do a clone what I did is I

00:18:03,470 --> 00:18:07,850
basically took that database from that

00:18:05,420 --> 00:18:10,760
server and now what I did is I put it on

00:18:07,850 --> 00:18:12,440
to my local machine so now if I look in

00:18:10,760 --> 00:18:15,560
this directory I do an LS I'll see that

00:18:12,440 --> 00:18:21,650
there is a calculator folder so that

00:18:15,560 --> 00:18:25,250
calculator folder if I CD into it and I

00:18:21,650 --> 00:18:27,620
do an LS hear what I can see as I see

00:18:25,250 --> 00:18:31,100
three I actually see a folder and two

00:18:27,620 --> 00:18:32,570
files now the nice thing is is for those

00:18:31,100 --> 00:18:36,050
people again when we're talking about

00:18:32,570 --> 00:18:37,730
the vi Emacs world there's all kinds of

00:18:36,050 --> 00:18:39,680
really cool things that you can do with

00:18:37,730 --> 00:18:41,360
your shell both power show and from

00:18:39,680 --> 00:18:44,900
bosch and anything else that you're

00:18:41,360 --> 00:18:48,380
using as you can see right here is I was

00:18:44,900 --> 00:18:52,460
not in a get enabled repository so

00:18:48,380 --> 00:18:54,440
because I wasn't in one my location on

00:18:52,460 --> 00:18:57,440
my machine didn't show anything unique

00:18:54,440 --> 00:18:59,570
as soon as I went into a get enabled

00:18:57,440 --> 00:19:02,510
folder all of a sudden I am seeing

00:18:59,570 --> 00:19:05,210
something called master that is the

00:19:02,510 --> 00:19:08,020
branch that I am on so those of you that

00:19:05,210 --> 00:19:12,809
use as we n how many of you use branches

00:19:08,020 --> 00:19:14,039
how many of you love branches in svn

00:19:12,809 --> 00:19:18,899
we've got somebody loves branches that

00:19:14,039 --> 00:19:21,720
we need to talk so there's a big

00:19:18,899 --> 00:19:25,200
difference between branches in svn and

00:19:21,720 --> 00:19:26,490
branches and get a branch and get if I'm

00:19:25,200 --> 00:19:29,129
going to go I'm gonna go a little bit

00:19:26,490 --> 00:19:32,220
deeper here so if I get any glassy eyes

00:19:29,129 --> 00:19:33,749
I'll back out pretty quick so now what

00:19:32,220 --> 00:19:36,419
I'm going to do is I'm going to do an LS

00:19:33,749 --> 00:19:39,899
dash la so now I'm get seeing all the

00:19:36,419 --> 00:19:46,700
hidden files if we look in here there is

00:19:39,899 --> 00:19:46,700
a file that starts with dot get yes see

00:19:50,070 --> 00:19:54,500
see where the magic I know there's a

00:19:51,780 --> 00:19:54,500
magic button somewhere

00:20:15,429 --> 00:20:24,649
is that better no back so when I look I

00:20:22,100 --> 00:20:31,580
see a dot get that's actually a folder

00:20:24,649 --> 00:20:33,169
so if I CD into my dot get folder here i

00:20:31,580 --> 00:20:35,659
see this is remember we are talking

00:20:33,169 --> 00:20:38,149
about copying that database that

00:20:35,659 --> 00:20:40,159
database of going from the server now on

00:20:38,149 --> 00:20:42,470
to the local machine this is where all

00:20:40,159 --> 00:20:45,620
of my changes are actually going to be

00:20:42,470 --> 00:20:47,240
tracked so that little virtual file

00:20:45,620 --> 00:20:50,750
system that sits on top of this when I

00:20:47,240 --> 00:20:52,580
create a branch that branch gets created

00:20:50,750 --> 00:20:54,860
in this folder and it starts tracking

00:20:52,580 --> 00:20:58,549
itself all of the little minor changes

00:20:54,860 --> 00:21:00,679
what happens in svn is if I want to go

00:20:58,549 --> 00:21:03,110
ahead and create a branch in svn I have

00:21:00,679 --> 00:21:05,630
to do a full copy of that entire files

00:21:03,110 --> 00:21:09,139
or that entire directory structure and

00:21:05,630 --> 00:21:11,450
put it into another directory so for

00:21:09,139 --> 00:21:12,710
anybody here that does java coding and

00:21:11,450 --> 00:21:15,230
you're trying to do branches with

00:21:12,710 --> 00:21:16,940
subversion it's a real pain because you

00:21:15,230 --> 00:21:18,679
have to if you're working on two

00:21:16,940 --> 00:21:20,690
different branches you have to import

00:21:18,679 --> 00:21:25,130
each one of those independently into

00:21:20,690 --> 00:21:27,559
your IDE so if I'm in IntelliJ or if I'm

00:21:25,130 --> 00:21:29,600
in Eclipse what happens is I end up

00:21:27,559 --> 00:21:31,519
having to import that project and then

00:21:29,600 --> 00:21:32,960
heaven forbid should i be using maven

00:21:31,519 --> 00:21:34,760
and now I've got to go ahead and blow

00:21:32,960 --> 00:21:37,279
away my target folder and I've got to do

00:21:34,760 --> 00:21:39,230
a rebuild I've got to clean the cache of

00:21:37,279 --> 00:21:41,240
my IDE because something's stored in

00:21:39,230 --> 00:21:43,730
memory that shouldn't be and you end up

00:21:41,240 --> 00:21:46,010
debugging more about your I ve than you

00:21:43,730 --> 00:21:47,419
ever get to actually writing code so

00:21:46,010 --> 00:21:50,960
because of the way that the file system

00:21:47,419 --> 00:21:53,389
works inside of get is basically when

00:21:50,960 --> 00:21:56,330
you switch branches it's just tracking a

00:21:53,389 --> 00:21:57,860
different set of files so I when I go

00:21:56,330 --> 00:22:00,710
ahead and I do a clone of a repository

00:21:57,860 --> 00:22:03,740
and I pull it into my IDE into Eclipse

00:22:00,710 --> 00:22:05,659
we're into IntelliJ what ends up

00:22:03,740 --> 00:22:08,600
happening is is I can switch branches

00:22:05,659 --> 00:22:11,690
and I just see a change in files that's

00:22:08,600 --> 00:22:14,169
all I'm going to see so let me go back

00:22:11,690 --> 00:22:14,169
up

00:22:15,260 --> 00:22:23,580
so here we can see that we have the same

00:22:20,610 --> 00:22:25,230
folder structure inside of github now

00:22:23,580 --> 00:22:27,149
one of the things that a lot of people

00:22:25,230 --> 00:22:29,220
they'll compare us with some of our

00:22:27,149 --> 00:22:30,750
competitors that exist out there one of

00:22:29,220 --> 00:22:32,880
the things that I like to tell people is

00:22:30,750 --> 00:22:36,570
those people that are using an iphone or

00:22:32,880 --> 00:22:38,940
using any sort of Android device a lot

00:22:36,570 --> 00:22:40,590
of those devices just work there's

00:22:38,940 --> 00:22:43,649
things that you just expect and then

00:22:40,590 --> 00:22:44,789
when you find little little tidbits

00:22:43,649 --> 00:22:46,740
about them you're kind of cool that was

00:22:44,789 --> 00:22:48,809
actually really cool so for those people

00:22:46,740 --> 00:22:50,220
that have used github I'm going to show

00:22:48,809 --> 00:22:53,490
you a little trick that maybe you didn't

00:22:50,220 --> 00:22:56,820
know so when you're actually on the UI I

00:22:53,490 --> 00:22:58,679
can actually hold down the T key and the

00:22:56,820 --> 00:23:01,289
Tiki actually takes me to a filtered

00:22:58,679 --> 00:23:03,510
search this is now taking me to the root

00:23:01,289 --> 00:23:06,929
folder up at the top and I can actually

00:23:03,510 --> 00:23:09,059
start typing so I can actually say calc

00:23:06,929 --> 00:23:12,000
and it'll actually start filtering down

00:23:09,059 --> 00:23:14,700
that list to only those files that have

00:23:12,000 --> 00:23:16,950
calc in the name so for those of you

00:23:14,700 --> 00:23:19,559
that have very large repositories with a

00:23:16,950 --> 00:23:21,899
lot of files and you're trying to find

00:23:19,559 --> 00:23:24,360
that unit tests that correlates to an

00:23:21,899 --> 00:23:25,740
implementation class what happens is you

00:23:24,360 --> 00:23:28,230
can actually go straight to get up and

00:23:25,740 --> 00:23:30,809
be able to search for that directly from

00:23:28,230 --> 00:23:32,610
the web UI the other thing that you get

00:23:30,809 --> 00:23:34,440
from this as well is if you're working

00:23:32,610 --> 00:23:37,350
on an open source project you might be

00:23:34,440 --> 00:23:38,820
the team lead and as the team lead you

00:23:37,350 --> 00:23:41,520
don't always want to have to check out

00:23:38,820 --> 00:23:43,950
the entire repository of you know a

00:23:41,520 --> 00:23:46,049
million lines of code put that on your

00:23:43,950 --> 00:23:49,140
machine to basically make a one-line

00:23:46,049 --> 00:23:51,440
comment inside of the code so one of the

00:23:49,140 --> 00:23:54,240
things that we can do is from github

00:23:51,440 --> 00:23:56,340
this is actually a full-fledged text

00:23:54,240 --> 00:23:58,770
editor so what i can do is i can

00:23:56,340 --> 00:24:01,020
actually click on the edit this file and

00:23:58,770 --> 00:24:03,029
i can actually start editing directly

00:24:01,020 --> 00:24:04,679
from inside of here and actually commit

00:24:03,029 --> 00:24:07,980
my changes directly from inside of

00:24:04,679 --> 00:24:10,440
github so if you're making a small

00:24:07,980 --> 00:24:12,659
change feel free to go ahead and make

00:24:10,440 --> 00:24:14,130
those changes inside of the web UI now

00:24:12,659 --> 00:24:17,309
one of the things that we're going to

00:24:14,130 --> 00:24:22,020
talk about is right now what we saw both

00:24:17,309 --> 00:24:25,529
from what we saw from here i am on

00:24:22,020 --> 00:24:28,649
master and then also from inside of the

00:24:25,529 --> 00:24:29,690
web UI i am actually on master here as

00:24:28,649 --> 00:24:32,970
well

00:24:29,690 --> 00:24:36,539
so here we see the branch the best

00:24:32,970 --> 00:24:40,980
practice inside of github and get itself

00:24:36,539 --> 00:24:43,559
is to do what we call branch releases so

00:24:40,980 --> 00:24:44,580
if how many people here I have a talk

00:24:43,559 --> 00:24:47,820
tomorrow I'm going to be talking about

00:24:44,580 --> 00:24:49,880
continuous delivery and chat ups how

00:24:47,820 --> 00:24:55,700
many people here do continuous delivery

00:24:49,880 --> 00:24:55,700
okay awesome how often do you deliver

00:24:56,990 --> 00:25:02,070
weekly releases awesome I'm I saw

00:24:59,970 --> 00:25:07,770
another hand over here how often do you

00:25:02,070 --> 00:25:11,549
guys release every two weeks ok so at

00:25:07,770 --> 00:25:13,799
github our releases are not even

00:25:11,549 --> 00:25:17,900
scheduled we don't even have weekly

00:25:13,799 --> 00:25:22,530
releases our releases happen whenever a

00:25:17,900 --> 00:25:26,130
branch gets merged in the master so we

00:25:22,530 --> 00:25:30,000
do somewhere in between 30 and 50 pushes

00:25:26,130 --> 00:25:32,370
into production a day so one of the

00:25:30,000 --> 00:25:34,950
things that we do is we go back in and

00:25:32,370 --> 00:25:36,929
we know that we're doing continuous

00:25:34,950 --> 00:25:39,990
delivery because we're not asking for

00:25:36,929 --> 00:25:42,929
approval to go live we basically have a

00:25:39,990 --> 00:25:44,640
stand-up meeting the day after to see if

00:25:42,929 --> 00:25:46,580
anybody's had any problems with the

00:25:44,640 --> 00:25:51,630
deliveries that happen the previous day

00:25:46,580 --> 00:25:53,700
so when we talk about where git and

00:25:51,630 --> 00:25:56,789
github is going is when you think about

00:25:53,700 --> 00:25:59,760
what a branch means is you don't want to

00:25:56,789 --> 00:26:01,770
think about a branch every branch as a

00:25:59,760 --> 00:26:05,250
release you think about a branch as a

00:26:01,770 --> 00:26:09,030
small bucket of changes that will

00:26:05,250 --> 00:26:10,740
eventually or maybe not depending on the

00:26:09,030 --> 00:26:13,679
change that you're making go back into

00:26:10,740 --> 00:26:16,289
the master branch so master for us is

00:26:13,679 --> 00:26:18,210
what we call the default branch now

00:26:16,289 --> 00:26:19,890
inside of github you may want to call

00:26:18,210 --> 00:26:21,390
that something different you may not

00:26:19,890 --> 00:26:23,010
want to call that the master branch you

00:26:21,390 --> 00:26:25,440
may want to call that production and

00:26:23,010 --> 00:26:27,990
that could be your production brands and

00:26:25,440 --> 00:26:29,610
then everybody basically builds or

00:26:27,990 --> 00:26:34,250
branches off of production and then they

00:26:29,610 --> 00:26:37,559
merge back into that so these little

00:26:34,250 --> 00:26:39,659
buckets of changes in these branches you

00:26:37,559 --> 00:26:42,750
can either create them from our web UI

00:26:39,659 --> 00:26:51,750
or you can actually do that

00:26:42,750 --> 00:26:56,190
from the command line itself so the

00:26:51,750 --> 00:26:58,290
first thing you're going to do the first

00:26:56,190 --> 00:26:59,640
thing that you're going to do is you're

00:26:58,290 --> 00:27:03,540
going to go in and you're going to do a

00:26:59,640 --> 00:27:05,790
git branch and i'm going to call this

00:27:03,540 --> 00:27:08,250
that there's different ways you can use

00:27:05,790 --> 00:27:10,410
whatever naming conventions you want so

00:27:08,250 --> 00:27:12,780
i actually like using what we call

00:27:10,410 --> 00:27:19,790
feature branches so i'm going to call

00:27:12,780 --> 00:27:23,460
something feature add subtraction and

00:27:19,790 --> 00:27:26,460
then once i create that branch I have to

00:27:23,460 --> 00:27:33,740
check out to that branch so now I'm

00:27:26,460 --> 00:27:38,220
going to do a git checkout feature add

00:27:33,740 --> 00:27:40,710
subtraction so now you'll see the green

00:27:38,220 --> 00:27:43,380
down at the bottom that's now telling me

00:27:40,710 --> 00:27:45,900
that I'm now on this branch so any

00:27:43,380 --> 00:27:47,520
changes that i now make inside of this

00:27:45,900 --> 00:27:50,070
branch are going to live in this little

00:27:47,520 --> 00:27:53,520
sandbox now the great thing about this

00:27:50,070 --> 00:27:56,130
is if we think about being innovative

00:27:53,520 --> 00:27:57,630
and we think about wanting to play I go

00:27:56,130 --> 00:27:58,560
out and I talked to a lot of folks and I

00:27:57,630 --> 00:28:01,710
talk about one of the things I really

00:27:58,560 --> 00:28:04,350
miss in Computer Sciences we have lost

00:28:01,710 --> 00:28:06,630
the science of computer science so we

00:28:04,350 --> 00:28:08,820
don't do a lot of experimentation we

00:28:06,630 --> 00:28:10,440
think it's oh it should be step one step

00:28:08,820 --> 00:28:12,690
two step three and we think everything

00:28:10,440 --> 00:28:14,640
that we commit is production ready I've

00:28:12,690 --> 00:28:16,140
been developing software for 20 years

00:28:14,640 --> 00:28:18,360
and there's a lot of things that I write

00:28:16,140 --> 00:28:20,700
that nowhere near production-ready the

00:28:18,360 --> 00:28:23,070
first time I write it so this gives me

00:28:20,700 --> 00:28:26,520
the opportunity to be able to iterate on

00:28:23,070 --> 00:28:29,460
my code locally in a nice little area

00:28:26,520 --> 00:28:31,860
but i'm only working off of the changes

00:28:29,460 --> 00:28:33,180
off of the master branch so everything

00:28:31,860 --> 00:28:35,940
that's going to be tracked as off of

00:28:33,180 --> 00:28:37,380
that master branch if i get a day into

00:28:35,940 --> 00:28:39,630
it i'm sitting there going this is not

00:28:37,380 --> 00:28:42,000
where I wanted to go at all I can go and

00:28:39,630 --> 00:28:44,940
just delete that branch and then I'm

00:28:42,000 --> 00:28:47,160
back on master so I can go back to my

00:28:44,940 --> 00:28:49,320
good known working state very easily by

00:28:47,160 --> 00:28:51,450
just deleting the branch the other thing

00:28:49,320 --> 00:28:53,429
that I can do is I can also stash those

00:28:51,450 --> 00:28:55,830
changes so I can sit there and say you

00:28:53,429 --> 00:28:56,590
know what somebody just came to me and

00:28:55,830 --> 00:28:58,900
says I need to

00:28:56,590 --> 00:29:00,220
I do a bugfix so I can take all of my

00:28:58,900 --> 00:29:02,080
changes and I'm currently working on

00:29:00,220 --> 00:29:04,510
stash and put them off to the side and

00:29:02,080 --> 00:29:05,830
then go off and go fix that bug that

00:29:04,510 --> 00:29:07,990
needs to get done by the end of the day

00:29:05,830 --> 00:29:10,779
go make those changes and then come back

00:29:07,990 --> 00:29:13,360
in unstack my changes bring them back in

00:29:10,779 --> 00:29:14,740
and then go back to working again when

00:29:13,360 --> 00:29:17,409
you think about that kind of work flow

00:29:14,740 --> 00:29:20,230
in a subversion or in a clear case or in

00:29:17,409 --> 00:29:22,450
a CVS type environment that is really

00:29:20,230 --> 00:29:24,010
painful usually what you end up having

00:29:22,450 --> 00:29:25,929
is you end up having a whole directory

00:29:24,010 --> 00:29:28,150
of your project that basically has four

00:29:25,929 --> 00:29:29,679
or five different versions of the

00:29:28,150 --> 00:29:31,510
product running on your machine at any

00:29:29,679 --> 00:29:33,669
point in time and then it gets really

00:29:31,510 --> 00:29:35,529
confusing if you making database changes

00:29:33,669 --> 00:29:37,270
and which DVL is currently running on

00:29:35,529 --> 00:29:38,770
the database at any point i'm so you end

00:29:37,270 --> 00:29:40,149
up doing a whole bunch of ddl scripts to

00:29:38,770 --> 00:29:43,450
tear it down and build it back up and

00:29:40,149 --> 00:29:45,340
tear it down and build it back up so now

00:29:43,450 --> 00:29:47,649
that we have this particular feature

00:29:45,340 --> 00:29:49,799
what I'm going to do is I'm actually

00:29:47,649 --> 00:29:52,630
going to open up my favorite editor

00:29:49,799 --> 00:29:56,039
which is Adam so it's an open source

00:29:52,630 --> 00:30:00,190
editor those of you that might be using

00:29:56,039 --> 00:30:02,020
sublime or any of the other free editors

00:30:00,190 --> 00:30:04,570
out there I would love for you to give

00:30:02,020 --> 00:30:05,860
Adam a chance Adam is actually our open

00:30:04,570 --> 00:30:08,350
source editor that we built from github

00:30:05,860 --> 00:30:11,409
we open sourced it it's all written on

00:30:08,350 --> 00:30:13,330
top of something called electron so web

00:30:11,409 --> 00:30:16,179
developers any web developers in here

00:30:13,330 --> 00:30:17,799
okay so quickest way to be able to build

00:30:16,179 --> 00:30:20,350
applications is using Adam because

00:30:17,799 --> 00:30:22,390
actually sitting on top of Chrome so you

00:30:20,350 --> 00:30:23,919
basically get the developer tools at the

00:30:22,390 --> 00:30:26,799
bottom so you could be building a web

00:30:23,919 --> 00:30:31,720
application and actually run it directly

00:30:26,799 --> 00:30:35,860
from inside of your ID so here we had a

00:30:31,720 --> 00:30:39,270
change that we said we wanted to add to

00:30:35,860 --> 00:30:39,270
an ad subtraction method

00:30:48,070 --> 00:30:56,230
so I'm going to save my file and now I'm

00:30:53,290 --> 00:31:03,060
back inside my command line so one of

00:30:56,230 --> 00:31:03,060
the things as we're making a change so

00:31:06,300 --> 00:31:13,360
so here we did our get branch so it waz

00:31:11,920 --> 00:31:15,340
you go through these different steps

00:31:13,360 --> 00:31:17,650
your branches are creating that sandbox

00:31:15,340 --> 00:31:20,170
i created my branch and then I checked

00:31:17,650 --> 00:31:21,940
it out now there is a nice little macro

00:31:20,170 --> 00:31:24,550
shortcut if you don't want to do those

00:31:21,940 --> 00:31:26,470
steps those two steps every time what

00:31:24,550 --> 00:31:29,410
you can do is you can do a git branch

00:31:26,470 --> 00:31:30,790
dash D and then give the name and it

00:31:29,410 --> 00:31:32,470
will actually create the branch and

00:31:30,790 --> 00:31:34,120
check you out into it all in one step

00:31:32,470 --> 00:31:38,680
it's that way you don't have to do those

00:31:34,120 --> 00:31:40,960
two steps every time so now that we've

00:31:38,680 --> 00:31:44,320
made our changes we're in what we call

00:31:40,960 --> 00:31:46,480
our staging area so we're now in a

00:31:44,320 --> 00:31:49,060
location where our little sandbox that

00:31:46,480 --> 00:31:51,490
were playing in these changes nobody

00:31:49,060 --> 00:31:53,080
could see these changes right now but I

00:31:51,490 --> 00:31:55,420
might want to start keeping track of

00:31:53,080 --> 00:31:57,490
them I might want us I just made them i

00:31:55,420 --> 00:31:59,380
do subtraction method and i want to go

00:31:57,490 --> 00:32:02,200
ahead and i want to go ahead and um I

00:31:59,380 --> 00:32:10,000
want to commit that so what I'm going to

00:32:02,200 --> 00:32:11,290
do is going to do a git status and what

00:32:10,000 --> 00:32:12,550
the status is going to do is it's

00:32:11,290 --> 00:32:14,650
actually going to show me it's very

00:32:12,550 --> 00:32:16,240
helpful by telling me what what I've

00:32:14,650 --> 00:32:19,420
done it actually shows me here that I've

00:32:16,240 --> 00:32:22,690
modified one file and so my calculator

00:32:19,420 --> 00:32:27,030
java file is the file that's actually

00:32:22,690 --> 00:32:30,970
been changed so i can actually do a git

00:32:27,030 --> 00:32:33,310
commit i'm going to do a dash mne to

00:32:30,970 --> 00:32:35,500
specify the message if you use your git

00:32:33,310 --> 00:32:38,620
config you can go in and specify your

00:32:35,500 --> 00:32:41,020
editor so you could specify sublime or

00:32:38,620 --> 00:32:42,700
some other text editor this is just

00:32:41,020 --> 00:32:44,770
going to if I didn't put anything in it

00:32:42,700 --> 00:32:47,050
would default to your default editor so

00:32:44,770 --> 00:32:49,570
on Mac it would send me to VI to be able

00:32:47,050 --> 00:32:53,370
to add a commit message i'm going to say

00:32:49,570 --> 00:33:02,090
added subtraction

00:32:53,370 --> 00:33:02,090
oh I need specify

00:33:07,010 --> 00:33:09,820
see

00:33:20,120 --> 00:33:25,070
okay so the first time when I didn't

00:33:23,270 --> 00:33:27,170
specify the filename now there are ways

00:33:25,070 --> 00:33:29,390
to be able to use wildcards and just say

00:33:27,170 --> 00:33:31,550
commit everything when you're in a GUI

00:33:29,390 --> 00:33:32,930
tool it gives you little checkboxes that

00:33:31,550 --> 00:33:34,430
you can check which files you want to

00:33:32,930 --> 00:33:36,770
commit so you don't have to always

00:33:34,430 --> 00:33:40,250
commit everything you may actually make

00:33:36,770 --> 00:33:42,140
four or five changes to six files and

00:33:40,250 --> 00:33:43,340
what you want to do is you only want to

00:33:42,140 --> 00:33:44,600
commit three of them at this particular

00:33:43,340 --> 00:33:45,830
point in time because you know you're

00:33:44,600 --> 00:33:48,020
going to continue editing the other

00:33:45,830 --> 00:33:50,480
three files so you can do little point

00:33:48,020 --> 00:33:54,770
little checkpoints so now if I do it get

00:33:50,480 --> 00:33:56,600
status again here it's telling me

00:33:54,770 --> 00:33:58,970
there's nothing to commit my working

00:33:56,600 --> 00:34:01,370
directory is clean my sandbox there's no

00:33:58,970 --> 00:34:03,410
changes that it's tracking so if I

00:34:01,370 --> 00:34:07,300
wasn't an svn world right now I just

00:34:03,410 --> 00:34:13,070
didn't commit so if I go over to here

00:34:07,300 --> 00:34:15,830
let me go ahead and refresh and my

00:34:13,070 --> 00:34:18,140
branch isn't here but I did it commits

00:34:15,830 --> 00:34:20,480
well let's go look at the file so let's

00:34:18,140 --> 00:34:24,080
go back and T let's look at the

00:34:20,480 --> 00:34:26,540
calculator there's no subtraction here

00:34:24,080 --> 00:34:29,210
either so this is the really important

00:34:26,540 --> 00:34:31,370
thing to realize is that with get I've

00:34:29,210 --> 00:34:35,480
made my changes and I've committed them

00:34:31,370 --> 00:34:37,760
but it's still on my machine so the only

00:34:35,480 --> 00:34:40,670
way that those changes go up to the

00:34:37,760 --> 00:34:44,420
server is I have to deliberately choose

00:34:40,670 --> 00:34:47,180
to do a push so when I'm thinking about

00:34:44,420 --> 00:34:48,950
I travel all around the world giving

00:34:47,180 --> 00:34:51,080
presentations talking to customers

00:34:48,950 --> 00:34:52,850
there's a lot of times I'm sitting on an

00:34:51,080 --> 00:34:54,680
airplane and I go ahead and I want to

00:34:52,850 --> 00:34:56,840
work I can go ahead and do a commit and

00:34:54,680 --> 00:34:58,310
I can work on my project but I don't

00:34:56,840 --> 00:34:59,930
have internet access so I can't share

00:34:58,310 --> 00:35:01,700
with anybody but I'm keeping all of my

00:34:59,930 --> 00:35:03,620
changes I'm tracking everything locally

00:35:01,700 --> 00:35:06,560
then when i land and i go ahead and i do

00:35:03,620 --> 00:35:09,740
a push the entire historical record is

00:35:06,560 --> 00:35:14,210
going to be pushed with it so here if i

00:35:09,740 --> 00:35:16,340
go ahead and now do a git push and what

00:35:14,210 --> 00:35:22,520
i have to do is I have to tell it where

00:35:16,340 --> 00:35:25,750
I want it to push to so I believe that

00:35:22,520 --> 00:35:25,750
is where it's going to go

00:35:29,619 --> 00:35:32,829
see here

00:35:53,829 --> 00:35:56,700
there we go

00:36:02,090 --> 00:36:09,920
now if we go back into the web UI and

00:36:05,530 --> 00:36:13,040
let me go back here now if I click on

00:36:09,920 --> 00:36:15,980
the drop-down now my change is ready so

00:36:13,040 --> 00:36:19,780
now I see my branch so even here if I

00:36:15,980 --> 00:36:22,580
look on master and i look at calculator

00:36:19,780 --> 00:36:26,090
there's still no add subtraction on

00:36:22,580 --> 00:36:31,280
master but if i go back here and i

00:36:26,090 --> 00:36:35,990
choose my feature add subtraction now if

00:36:31,280 --> 00:36:38,150
I go in to calculator now I can see my

00:36:35,990 --> 00:36:40,880
change so this change is sitting right

00:36:38,150 --> 00:36:43,190
there so now if i want to take these

00:36:40,880 --> 00:36:45,560
changes and i want to get them somebody

00:36:43,190 --> 00:36:46,670
goes along this is something that we

00:36:45,560 --> 00:36:49,190
talked about it github is called

00:36:46,670 --> 00:36:51,070
creating a pull request so what I'm

00:36:49,190 --> 00:36:54,170
going to do is I'm going to go back to

00:36:51,070 --> 00:36:56,780
calculator and I'm going to compare and

00:36:54,170 --> 00:36:58,340
pull request this pull request is now

00:36:56,780 --> 00:37:00,800
something this is something we want

00:36:58,340 --> 00:37:04,300
people doing early and often so I can

00:37:00,800 --> 00:37:12,280
sit there and I can say at republic

00:37:04,300 --> 00:37:12,280
developers I made a change that closes

00:37:12,340 --> 00:37:26,480
oh there's my implement subtraction

00:37:15,350 --> 00:37:28,400
issue can I get some eyes on that so now

00:37:26,480 --> 00:37:31,340
I create a pull request this would

00:37:28,400 --> 00:37:33,320
actually start a conversation so now

00:37:31,340 --> 00:37:36,620
other people could actually come in and

00:37:33,320 --> 00:37:38,300
look and see the added subtraction they

00:37:36,620 --> 00:37:40,130
could actually see the changes here and

00:37:38,300 --> 00:37:43,550
see what's been made somebody can come

00:37:40,130 --> 00:37:45,620
in make a line item comment say hey I

00:37:43,550 --> 00:37:50,780
think we should like I could come in

00:37:45,620 --> 00:37:57,740
here and say probably need some docs

00:37:50,780 --> 00:37:59,840
here for a public method so you can

00:37:57,740 --> 00:38:01,610
actually make line item comments inside

00:37:59,840 --> 00:38:04,130
of the code and you can now collaborate

00:38:01,610 --> 00:38:05,660
with other people once you've gotten to

00:38:04,130 --> 00:38:07,190
a certain point and a whole bunch of

00:38:05,660 --> 00:38:08,570
people have collaborated we do this

00:38:07,190 --> 00:38:11,720
inside of github all the time our

00:38:08,570 --> 00:38:13,160
developers use it our sales people use

00:38:11,720 --> 00:38:15,290
it our marketing team uses that our

00:38:13,160 --> 00:38:15,740
legal teams use it they use it we use

00:38:15,290 --> 00:38:17,810
something called

00:38:15,740 --> 00:38:19,730
markdown we just create documents and

00:38:17,810 --> 00:38:22,820
share and we can edit them share them

00:38:19,730 --> 00:38:24,500
and collaborate on them once you get to

00:38:22,820 --> 00:38:27,530
a certain point that everybody feels

00:38:24,500 --> 00:38:29,630
like the code is actually ready to be

00:38:27,530 --> 00:38:41,500
merged what happens is down at the

00:38:29,630 --> 00:38:41,500
bottom we have go to the pull request

00:38:42,130 --> 00:38:47,660
what you have here is you can actually

00:38:44,150 --> 00:38:51,080
merge the pull request now when we are

00:38:47,660 --> 00:38:53,930
talking before about on continuous

00:38:51,080 --> 00:38:56,690
delivery so now I've now taken those

00:38:53,930 --> 00:38:59,180
just those three lines of code that I

00:38:56,690 --> 00:39:01,820
created I took those lines of code and

00:38:59,180 --> 00:39:05,210
merge them into the master file into the

00:39:01,820 --> 00:39:07,790
Masters file so one of the things that

00:39:05,210 --> 00:39:09,470
you can do from here is let's say I've

00:39:07,790 --> 00:39:11,600
just on a deployment to production

00:39:09,470 --> 00:39:12,619
something goes horribly wrong things

00:39:11,600 --> 00:39:15,970
that you can do is you can actually

00:39:12,619 --> 00:39:19,820
revert this branch you'd have to be

00:39:15,970 --> 00:39:21,710
right now Luke only has rewrite but if I

00:39:19,820 --> 00:39:24,290
was in admin I could revert this pull

00:39:21,710 --> 00:39:27,619
request and actually undo the changes in

00:39:24,290 --> 00:39:29,600
green flight that branch to go ahead and

00:39:27,619 --> 00:39:30,920
make a fix for it so you don't have to

00:39:29,600 --> 00:39:35,510
worry about trying to do a whole bunch

00:39:30,920 --> 00:39:38,630
of fancy stuff behind the scenes so this

00:39:35,510 --> 00:39:41,359
is sort of the basics of what git and

00:39:38,630 --> 00:39:44,300
github does and if we go back and look

00:39:41,359 --> 00:39:49,460
at some of the more advanced things that

00:39:44,300 --> 00:39:51,440
you can do you can also review the

00:39:49,460 --> 00:39:53,450
entire history from the command line so

00:39:51,440 --> 00:39:55,609
you can go ahead and do a git log you

00:39:53,450 --> 00:39:57,080
can basically look on a specific commit

00:39:55,609 --> 00:39:58,790
and actually see all the files that have

00:39:57,080 --> 00:40:02,990
been changed you can actually show the

00:39:58,790 --> 00:40:06,260
changes for a specific commit you can if

00:40:02,990 --> 00:40:08,450
you've got we did a push if somebody

00:40:06,260 --> 00:40:10,400
else has made changes to that code and

00:40:08,450 --> 00:40:12,710
they've pushed their changes up you

00:40:10,400 --> 00:40:14,210
would do a git pull to grab their

00:40:12,710 --> 00:40:18,320
changes and pull that back down into

00:40:14,210 --> 00:40:19,790
your sandbox and then the last thing

00:40:18,320 --> 00:40:21,560
that you can do is if you get to a

00:40:19,790 --> 00:40:25,310
certain point you're like wait this is

00:40:21,560 --> 00:40:28,010
just wrong the last set of changes my

00:40:25,310 --> 00:40:29,690
working changes I want to just

00:40:28,010 --> 00:40:31,760
blow those away but I don't want to lose

00:40:29,690 --> 00:40:34,340
my commits I basically want to go back

00:40:31,760 --> 00:40:36,590
to the last good commit that I had what

00:40:34,340 --> 00:40:38,660
you can do is you can do a get reset to

00:40:36,590 --> 00:40:40,430
the last known good commit and it'll

00:40:38,660 --> 00:40:42,980
basically remove all of the tracking

00:40:40,430 --> 00:40:45,110
changes and put all the files back to

00:40:42,980 --> 00:40:47,120
their last known good configuration if

00:40:45,110 --> 00:40:50,930
you want to go ahead and you actually

00:40:47,120 --> 00:40:53,510
want to force everything jizz you can go

00:40:50,930 --> 00:40:55,370
way back in time and actually do a hard

00:40:53,510 --> 00:40:59,420
reset and that will basically blowing

00:40:55,370 --> 00:41:01,310
all the history and then the last thing

00:40:59,420 --> 00:41:02,870
that i usually get from a lot of people

00:41:01,310 --> 00:41:05,660
when i'm giving these conversations is

00:41:02,870 --> 00:41:06,980
how do i get involved if I want to do

00:41:05,660 --> 00:41:09,470
open source and I want to learn more

00:41:06,980 --> 00:41:11,570
there's a lot of communities that are

00:41:09,470 --> 00:41:12,980
out there right now that are looking for

00:41:11,570 --> 00:41:15,020
people to be able to just to provide

00:41:12,980 --> 00:41:17,900
documentation do some basic testing

00:41:15,020 --> 00:41:19,340
write some code for them there's

00:41:17,900 --> 00:41:20,750
actually something that digital oceans

00:41:19,340 --> 00:41:23,660
actually putting on right now it's

00:41:20,750 --> 00:41:25,220
actually called Oktoberfest and what

00:41:23,660 --> 00:41:27,770
they do is you go out there you sign up

00:41:25,220 --> 00:41:29,780
on hacked ober fest and there they've

00:41:27,770 --> 00:41:33,410
got any open source project that you do

00:41:29,780 --> 00:41:36,200
off of github com if you do for pull

00:41:33,410 --> 00:41:38,360
requests you guys have until the end of

00:41:36,200 --> 00:41:39,710
the month if you do for pull request

00:41:38,360 --> 00:41:41,690
before now on the end of the month

00:41:39,710 --> 00:41:44,030
they'll send you a free t-shirt that has

00:41:41,690 --> 00:41:46,640
the heck Tober fest the logo right there

00:41:44,030 --> 00:41:48,890
on the t-shirt so anybody who's

00:41:46,640 --> 00:41:50,000
interested in getting involved I highly

00:41:48,890 --> 00:41:51,710
recommend going out there and seeing

00:41:50,000 --> 00:41:52,970
what the community is doing and if

00:41:51,710 --> 00:41:55,160
you've got any questions I'll be around

00:41:52,970 --> 00:41:57,490
afterwards to answer them so thank you

00:41:55,160 --> 00:41:57,490

YouTube URL: https://www.youtube.com/watch?v=xyTEkNcpyHU


