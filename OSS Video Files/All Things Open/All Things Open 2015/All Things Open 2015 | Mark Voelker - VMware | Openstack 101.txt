Title: All Things Open 2015 | Mark Voelker - VMware | Openstack 101
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:06,049 --> 00:00:12,559
okay everybody I think it is just about

00:00:08,730 --> 00:00:14,759
go time so we got a lot of material to

00:00:12,559 --> 00:00:17,130
pack into a very small amount of time so

00:00:14,759 --> 00:00:18,990
we will go ahead and get run in here so

00:00:17,130 --> 00:00:21,539
hopefully you're here to learn about

00:00:18,990 --> 00:00:23,220
OpenStack how many people here already

00:00:21,539 --> 00:00:26,039
know something about on the sack maybe

00:00:23,220 --> 00:00:29,519
have it running yeah a few how many of

00:00:26,039 --> 00:00:31,679
you are developers how many of you are

00:00:29,519 --> 00:00:36,920
developers who have written using the

00:00:31,679 --> 00:00:39,870
OpenStack api's okay so if you okay good

00:00:36,920 --> 00:00:42,270
alright so let's talk about them talk a

00:00:39,870 --> 00:00:43,829
little bit so who here remembers the

00:00:42,270 --> 00:00:46,200
first time that they were asked to stand

00:00:43,829 --> 00:00:47,430
up a distributed system versus that

00:00:46,200 --> 00:00:50,510
thing that you just had to run on your

00:00:47,430 --> 00:00:52,860
desktop that was a lot of fun wasn't it

00:00:50,510 --> 00:00:54,180
how about the first time that you were

00:00:52,860 --> 00:00:56,250
asked to stand up a series of

00:00:54,180 --> 00:00:58,230
distributed systems that were mostly

00:00:56,250 --> 00:01:01,340
independently developed but all sort of

00:00:58,230 --> 00:01:03,690
work together that was pretty easy right

00:01:01,340 --> 00:01:05,100
turns out distributed systems are pretty

00:01:03,690 --> 00:01:07,229
powerful for the things that we want to

00:01:05,100 --> 00:01:08,520
do in data centers especially when it

00:01:07,229 --> 00:01:11,850
comes to cloud computing there's really

00:01:08,520 --> 00:01:13,820
no other way to go monoliths do not work

00:01:11,850 --> 00:01:15,689
as cloud computing control planes

00:01:13,820 --> 00:01:17,490
problem is that being distributed

00:01:15,689 --> 00:01:21,090
systems they are sometimes kind of hard

00:01:17,490 --> 00:01:22,860
to learn good thing manuals are pretty

00:01:21,090 --> 00:01:24,990
clear though right so that's that's

00:01:22,860 --> 00:01:28,500
useful especially open source manuals

00:01:24,990 --> 00:01:30,659
are always always pretty good so

00:01:28,500 --> 00:01:31,920
sometimes having a little help to make

00:01:30,659 --> 00:01:34,079
that first leap when you're getting into

00:01:31,920 --> 00:01:36,630
a fairly complex subject is a useful

00:01:34,079 --> 00:01:38,909
thing so where do we start we're going

00:01:36,630 --> 00:01:41,939
to start right here today at all things

00:01:38,909 --> 00:01:43,320
open so if you're new to open sac this

00:01:41,939 --> 00:01:44,280
is going to be a very quick primer we're

00:01:43,320 --> 00:01:46,110
going to go through a couple of the

00:01:44,280 --> 00:01:49,140
major components just so you know

00:01:46,110 --> 00:01:50,340
there's about 650 git repositories in

00:01:49,140 --> 00:01:52,140
the OpenStack project now so we're not

00:01:50,340 --> 00:01:52,979
going to go through all of them in 40

00:01:52,140 --> 00:01:55,170
minutes but hopefully we're going to

00:01:52,979 --> 00:01:57,030
cover some ground it's useful for for

00:01:55,170 --> 00:01:58,170
the most of you and then obviously i'll

00:01:57,030 --> 00:02:02,009
be around afterwards if you want to talk

00:01:58,170 --> 00:02:03,240
about more minutes talks later so my

00:02:02,009 --> 00:02:05,729
name is Mark Bell Kerr I'm the other

00:02:03,240 --> 00:02:06,990
side card detective VMware which I

00:02:05,729 --> 00:02:09,720
joined about 11 months ago after

00:02:06,990 --> 00:02:10,950
spending about 11 years at Cisco I've

00:02:09,720 --> 00:02:13,200
been working in

00:02:10,950 --> 00:02:14,430
since about two thousand eleven i'm a

00:02:13,200 --> 00:02:17,459
former core developer on one of the

00:02:14,430 --> 00:02:18,769
puppet of attack projects i'm the

00:02:17,459 --> 00:02:21,180
founder of the local meetup group here

00:02:18,769 --> 00:02:23,550
and an early member of the attack

00:02:21,180 --> 00:02:24,900
foundation i can be bribed with donuts

00:02:23,550 --> 00:02:26,250
so if you want me to appear at birthday

00:02:24,900 --> 00:02:28,290
parties and talk about in the sack i

00:02:26,250 --> 00:02:30,690
will do that you just need to supply a

00:02:28,290 --> 00:02:34,319
requisite number of Krispy Kreme plain

00:02:30,690 --> 00:02:37,110
Donuts so let's get started what if i

00:02:34,319 --> 00:02:41,400
told you that open sac was a lot of

00:02:37,110 --> 00:02:42,840
words this is taken as an excerpt from

00:02:41,400 --> 00:02:44,280
the attack website if you go to the

00:02:42,840 --> 00:02:45,959
sacrifice slide today this is what

00:02:44,280 --> 00:02:47,250
you're going to see it's a lot of words

00:02:45,959 --> 00:02:48,840
i won't try to read them all at you out

00:02:47,250 --> 00:02:51,930
loud but it kind of gives you an idea of

00:02:48,840 --> 00:02:53,610
what it actually is it's early in the

00:02:51,930 --> 00:02:55,049
morning for especially those of you who

00:02:53,610 --> 00:02:57,510
are visiting us from the west coast so

00:02:55,049 --> 00:02:59,690
this probably is not so useful for you

00:02:57,510 --> 00:03:02,640
so let's rephrase that a little bit

00:02:59,690 --> 00:03:04,739
basically open sac is software to run

00:03:02,640 --> 00:03:06,860
cloud services so that's things like

00:03:04,739 --> 00:03:09,000
compute like storage like networking

00:03:06,860 --> 00:03:10,440
there's a lot of other things you can

00:03:09,000 --> 00:03:12,900
put a top of it there's databases

00:03:10,440 --> 00:03:16,290
there's big data processing all those

00:03:12,900 --> 00:03:17,910
things are software at some point and

00:03:16,290 --> 00:03:21,540
OpenStack provides that software to you

00:03:17,910 --> 00:03:23,370
so that you can build clouds and it also

00:03:21,540 --> 00:03:25,350
very importantly is the community behind

00:03:23,370 --> 00:03:26,430
that software I'll talk a little bit

00:03:25,350 --> 00:03:27,810
about why the community is actually

00:03:26,430 --> 00:03:30,359
pretty important fragments act a little

00:03:27,810 --> 00:03:31,799
bit later on it's actually one of the

00:03:30,359 --> 00:03:33,810
largest open source communities that

00:03:31,799 --> 00:03:35,730
I've ever really been a part of which is

00:03:33,810 --> 00:03:38,569
pretty pretty phenomenal a little bit of

00:03:35,730 --> 00:03:41,660
early history OpenStack was founded in

00:03:38,569 --> 00:03:44,670
2010 by Rackspace NASA and some friends

00:03:41,660 --> 00:03:46,799
NASA you may have heard from from mr.

00:03:44,670 --> 00:03:49,310
McEntee was working on a computer

00:03:46,799 --> 00:03:52,380
controller for the NASA nebular cloud

00:03:49,310 --> 00:03:53,910
which they dubbed Nova and Rackspace

00:03:52,380 --> 00:03:56,130
around the same time was working on an

00:03:53,910 --> 00:03:58,290
object storage controller which they

00:03:56,130 --> 00:03:59,639
called Swift they kind of heard about

00:03:58,290 --> 00:04:01,769
each other's projects decided that they

00:03:59,639 --> 00:04:03,090
were interesting and complementary and

00:04:01,769 --> 00:04:06,510
got together and founded this thing

00:04:03,090 --> 00:04:09,180
called up in sac a few days ago we

00:04:06,510 --> 00:04:11,010
released the 12th version of OpenStack

00:04:09,180 --> 00:04:12,239
just went live a few days ago together

00:04:11,010 --> 00:04:14,310
that's like thought or website you'll

00:04:12,239 --> 00:04:17,430
see a big splash page at the top talking

00:04:14,310 --> 00:04:19,590
about the new Liberty release we just

00:04:17,430 --> 00:04:21,450
for background we named our releases in

00:04:19,590 --> 00:04:25,560
alphabetical order after

00:04:21,450 --> 00:04:26,910
a town were a street or some locale near

00:04:25,560 --> 00:04:29,250
where the design summit for that thing

00:04:26,910 --> 00:04:31,830
took place so liberty is actually a town

00:04:29,250 --> 00:04:35,220
in Canada and we have our last design

00:04:31,830 --> 00:04:37,440
summit in Vancouver so the project

00:04:35,220 --> 00:04:38,850
follows a six-month release cycle in the

00:04:37,440 --> 00:04:41,460
early days we actually move even faster

00:04:38,850 --> 00:04:44,730
than that we were moving it out of three

00:04:41,460 --> 00:04:46,830
month cadence early on I can't run that

00:04:44,730 --> 00:04:49,080
fast anymore so I'm glad that we've

00:04:46,830 --> 00:04:50,550
moved to a six month cycle hundreds of

00:04:49,080 --> 00:04:53,100
companies thousands of people contribute

00:04:50,550 --> 00:04:55,110
just in the last release alone made

00:04:53,100 --> 00:04:58,500
contributions from almost 2,000 people

00:04:55,110 --> 00:04:59,700
to OpenStack projects and those sort of

00:04:58,500 --> 00:05:01,410
about 106 and for different

00:04:59,700 --> 00:05:02,460
organizations and those are just the

00:05:01,410 --> 00:05:03,510
ones that are actually contribute code

00:05:02,460 --> 00:05:05,880
there are a lot more people who are

00:05:03,510 --> 00:05:08,070
contributing things like bug fixes or

00:05:05,880 --> 00:05:09,900
sorry bugs bug reports who are

00:05:08,070 --> 00:05:11,130
contributing user stories we're

00:05:09,900 --> 00:05:12,870
contributing feedback to the developers

00:05:11,130 --> 00:05:17,820
so it's a pretty large pretty global

00:05:12,870 --> 00:05:19,110
community it's probably going to take a

00:05:17,820 --> 00:05:20,370
lot of time if I tried to go through all

00:05:19,110 --> 00:05:22,860
the companies that are in that ecosystem

00:05:20,370 --> 00:05:25,470
now so I thought maybe the easiest thing

00:05:22,860 --> 00:05:27,450
to do would be to try to phrase it in

00:05:25,470 --> 00:05:29,010
terms of which companies are not

00:05:27,450 --> 00:05:31,110
actively involved and then it's like

00:05:29,010 --> 00:05:33,240
yoga system right now and that's a

00:05:31,110 --> 00:05:35,100
pretty short slide there's really only

00:05:33,240 --> 00:05:38,010
about one almost every other company

00:05:35,100 --> 00:05:40,440
that you've seen in the IT space if you

00:05:38,010 --> 00:05:41,910
are buying hardware from a company if

00:05:40,440 --> 00:05:43,200
you are buying cloud services from a

00:05:41,910 --> 00:05:44,910
company they're probably involved in the

00:05:43,200 --> 00:05:47,670
psyche go system somehow that includes

00:05:44,910 --> 00:05:49,320
for example Google and Microsoft both

00:05:47,670 --> 00:05:50,580
those companies have teams that are

00:05:49,320 --> 00:05:52,470
actually contributing to of the sack

00:05:50,580 --> 00:05:55,470
that includes damn where my employer

00:05:52,470 --> 00:05:56,940
that includes companies like Rackspace

00:05:55,470 --> 00:05:59,190
they've been doing this for a while that

00:05:56,940 --> 00:06:03,090
includes storage vendors networking

00:05:59,190 --> 00:06:06,600
vendors computer makers all across the

00:06:03,090 --> 00:06:11,340
board so let's talk a little bit about

00:06:06,600 --> 00:06:12,300
how OpenStack is structured OpenStack is

00:06:11,340 --> 00:06:14,580
currently governed by the mtac

00:06:12,300 --> 00:06:15,930
foundation that was founded a couple

00:06:14,580 --> 00:06:18,090
years after the project actually began

00:06:15,930 --> 00:06:20,850
as sort of a non-profit entity that

00:06:18,090 --> 00:06:23,390
would sort of house strategic leadership

00:06:20,850 --> 00:06:25,440
for four of insight going forward

00:06:23,390 --> 00:06:27,150
membership is free for individuals so

00:06:25,440 --> 00:06:29,490
feel free to head on over to the site go

00:06:27,150 --> 00:06:31,110
to work and sign yourself up there also

00:06:29,490 --> 00:06:32,790
platinum gold and corporate memberships

00:06:31,110 --> 00:06:33,969
that are paid if your company is

00:06:32,790 --> 00:06:36,879
interested in becoming a part

00:06:33,969 --> 00:06:38,439
ecosystem there's a board of directors

00:06:36,879 --> 00:06:40,449
for them sac foundation it is comprised

00:06:38,439 --> 00:06:42,909
of all eight of the Platinum members

00:06:40,449 --> 00:06:44,229
represented from each of them some of

00:06:42,909 --> 00:06:45,909
the gold members they get another eight

00:06:44,229 --> 00:06:48,219
seats among all the different gold

00:06:45,909 --> 00:06:50,559
members i think there's gosh about a

00:06:48,219 --> 00:06:52,839
little over a dozen or maybe about 20 or

00:06:50,559 --> 00:06:54,489
so gold members now and then there are

00:06:52,839 --> 00:06:57,610
generally elected members as well there

00:06:54,489 --> 00:07:01,059
are elected in a general election among

00:06:57,610 --> 00:07:02,289
all the members of the foundation the

00:07:01,059 --> 00:07:05,049
Foundation's job is to provide strategic

00:07:02,289 --> 00:07:06,369
and financial oversight is so they do

00:07:05,049 --> 00:07:08,979
things like they manage the of the sack

00:07:06,369 --> 00:07:12,639
brand they manage to logo they help put

00:07:08,979 --> 00:07:14,469
on exact design summits once a year they

00:07:12,639 --> 00:07:16,809
send me some money so I can buy beer for

00:07:14,469 --> 00:07:19,059
our local meetup group to celebrate it

00:07:16,809 --> 00:07:20,379
at saks birthday and they do outreach

00:07:19,059 --> 00:07:22,689
programs and all those other kinds of

00:07:20,379 --> 00:07:24,369
cool things what the other side

00:07:22,689 --> 00:07:27,459
foundation actually does not govern is

00:07:24,369 --> 00:07:29,559
the code itself which is kind of good

00:07:27,459 --> 00:07:31,539
thing if you consider the makeup of the

00:07:29,559 --> 00:07:33,069
board that I just talked about so you

00:07:31,539 --> 00:07:35,349
can't really buy your way to get that

00:07:33,069 --> 00:07:38,679
code base necessarily right that all

00:07:35,349 --> 00:07:39,819
goes through code reviews and is

00:07:38,679 --> 00:07:42,309
ultimately governed by the technical

00:07:39,819 --> 00:07:45,939
today so the technical committee is a

00:07:42,309 --> 00:07:47,889
committee of sort of senior or trusted

00:07:45,939 --> 00:07:50,319
members of the the MSI community who are

00:07:47,889 --> 00:07:52,119
developers themselves in most cases and

00:07:50,319 --> 00:07:54,550
they provide technical leadership forum

00:07:52,119 --> 00:07:56,499
cycle hole so they're sort of the final

00:07:54,550 --> 00:07:58,749
technical authority when conflicts arise

00:07:56,499 --> 00:08:01,019
or when choices need to be made about

00:07:58,749 --> 00:08:04,089
something in the OpenStack community

00:08:01,019 --> 00:08:05,829
generally speaking this is not going to

00:08:04,089 --> 00:08:07,539
be like a group that goes in and reviews

00:08:05,829 --> 00:08:10,239
every piece of code and makes the final

00:08:07,539 --> 00:08:11,799
yes or no there's really no need for a

00:08:10,239 --> 00:08:13,569
very small committee people to do that

00:08:11,799 --> 00:08:16,719
that happens organically in the projects

00:08:13,569 --> 00:08:19,029
themselves and that's governed by the

00:08:16,719 --> 00:08:20,529
individual project teams but their job

00:08:19,029 --> 00:08:23,110
is really to enforce kind of open socks

00:08:20,529 --> 00:08:25,719
ideals and set sort of very large broad

00:08:23,110 --> 00:08:27,489
scale technical direction and they are

00:08:25,719 --> 00:08:29,529
all directly elected by active

00:08:27,489 --> 00:08:31,449
contributors to the project so every

00:08:29,529 --> 00:08:34,029
every six months I get a ballot in the

00:08:31,449 --> 00:08:37,389
mail to elect sorry once every year I

00:08:34,029 --> 00:08:39,460
get a ballot in mail to elect members to

00:08:37,389 --> 00:08:41,890
the TC because I'm an active technical

00:08:39,460 --> 00:08:43,150
to the project so I've contributed code

00:08:41,890 --> 00:08:47,050
upstream and therefore I get to help

00:08:43,150 --> 00:08:48,970
pick who governs that process there's

00:08:47,050 --> 00:08:50,110
also project team leaders for each

00:08:48,970 --> 00:08:51,190
project within the other psychic

00:08:50,110 --> 00:08:53,260
ecosystem there's going to be a project

00:08:51,190 --> 00:08:54,610
team lead the name has changed a little

00:08:53,260 --> 00:08:55,930
bit over time so you'll see this

00:08:54,610 --> 00:08:57,610
referred to as project technical leaders

00:08:55,930 --> 00:09:00,130
sometimes with all them team leave now

00:08:57,610 --> 00:09:02,380
their job is kind of be the chief

00:09:00,130 --> 00:09:04,840
steward of that individual project below

00:09:02,380 --> 00:09:07,330
they also have a team of core

00:09:04,840 --> 00:09:08,440
contributors to each project those are

00:09:07,330 --> 00:09:11,980
the guys who can actually merge your

00:09:08,440 --> 00:09:14,410
patch when you submit it and those are

00:09:11,980 --> 00:09:16,990
all sort of organically chosen by the

00:09:14,410 --> 00:09:17,890
project teams themselves as well very

00:09:16,990 --> 00:09:20,200
importantly there's also something

00:09:17,890 --> 00:09:22,780
called a user committee so another sack

00:09:20,200 --> 00:09:25,990
in the early days of attack was very

00:09:22,780 --> 00:09:28,030
very developer centric and users and

00:09:25,990 --> 00:09:29,350
users kind of have a real good voice in

00:09:28,030 --> 00:09:30,700
the community so the user committee is

00:09:29,350 --> 00:09:31,990
actually designed to help fix that

00:09:30,700 --> 00:09:34,780
problem they do things like run an

00:09:31,990 --> 00:09:36,040
annual survey of who's deploying what it

00:09:34,780 --> 00:09:37,630
opens side so that we get some feedback

00:09:36,040 --> 00:09:39,940
about what's going well what things are

00:09:37,630 --> 00:09:41,560
people using and so on and so forth and

00:09:39,940 --> 00:09:45,370
they're sort of the general body that

00:09:41,560 --> 00:09:46,600
represents users of OpenStack before

00:09:45,370 --> 00:09:50,500
both the technical committee and board

00:09:46,600 --> 00:09:52,240
of directors so that's a lot of

00:09:50,500 --> 00:09:54,220
structure it's a lot of code it's a lot

00:09:52,240 --> 00:09:58,540
of projects and at the end of the day it

00:09:54,220 --> 00:10:00,970
is all designed to give you how the idea

00:09:58,540 --> 00:10:02,920
is the you can build a cloud out of the

00:10:00,970 --> 00:10:03,880
stuff that you want and there's a whole

00:10:02,920 --> 00:10:04,870
lot of different stuff that you can put

00:10:03,880 --> 00:10:05,860
under the hood and a whole lot of

00:10:04,870 --> 00:10:08,770
different options that you can enable

00:10:05,860 --> 00:10:10,900
that meets your needs so this isn't a

00:10:08,770 --> 00:10:13,960
very prescriptive project it is a

00:10:10,900 --> 00:10:15,550
project that is very very flexible if

00:10:13,960 --> 00:10:16,930
you look at the if you count the total

00:10:15,550 --> 00:10:18,370
number of config options just in the

00:10:16,930 --> 00:10:20,470
core projects I think it's a couple of

00:10:18,370 --> 00:10:22,660
thousand now so it's a pretty flexible

00:10:20,470 --> 00:10:25,000
project that means you can do a whole

00:10:22,660 --> 00:10:27,160
lot of stuff with it and if you want to

00:10:25,000 --> 00:10:28,540
you can also go buy a product that

00:10:27,160 --> 00:10:30,790
somebody has built out of this so

00:10:28,540 --> 00:10:32,230
companies like mine will happily give

00:10:30,790 --> 00:10:35,280
you some bits to run in your data center

00:10:32,230 --> 00:10:37,690
they're a little more prescriptive and

00:10:35,280 --> 00:10:39,130
they're also public clouds build on of

00:10:37,690 --> 00:10:41,170
the sax there are managed services built

00:10:39,130 --> 00:10:42,600
on it Zack so there's a lot of different

00:10:41,170 --> 00:10:46,230
ways to consume

00:10:42,600 --> 00:10:48,779
Zack participation in the project this

00:10:46,230 --> 00:10:50,910
is pretty standard stuff it's a very IRC

00:10:48,779 --> 00:10:53,220
centric project so a lot of discussions

00:10:50,910 --> 00:10:54,300
going on in IRC every day there's link

00:10:53,220 --> 00:10:55,949
in the slides here I'll put these on

00:10:54,300 --> 00:10:58,199
slide show later you go click and figure

00:10:55,949 --> 00:11:00,000
out where to go for for all that there's

00:10:58,199 --> 00:11:01,050
a number of mailing lists the most

00:11:00,000 --> 00:11:02,639
active of which are probably the

00:11:01,050 --> 00:11:04,529
OpenStack mailing lists which is kind of

00:11:02,639 --> 00:11:06,300
QA for people that are using of attack

00:11:04,529 --> 00:11:09,110
and then obviously the development list

00:11:06,300 --> 00:11:12,829
as well the other site dev list is a

00:11:09,110 --> 00:11:15,959
source of much pain for my email quotas

00:11:12,829 --> 00:11:18,149
the code is is sorting yet we host our

00:11:15,959 --> 00:11:19,740
own Garrett in the OpenStack

00:11:18,149 --> 00:11:21,329
infrastructure that's where all our code

00:11:19,740 --> 00:11:23,459
reviews take place in the community that

00:11:21,329 --> 00:11:25,350
is mirrored out to github as well for

00:11:23,459 --> 00:11:27,810
Google like to consume be a github kind

00:11:25,350 --> 00:11:30,180
of a mildly popular platform for

00:11:27,810 --> 00:11:32,759
consuming code we store bugs and launch

00:11:30,180 --> 00:11:34,949
pad and there's lots of documentation to

00:11:32,759 --> 00:11:36,660
the Cyclopes as well we generally have

00:11:34,949 --> 00:11:39,509
two annual design summits and

00:11:36,660 --> 00:11:41,100
conferences one for each release I

00:11:39,509 --> 00:11:42,959
mention that we have a six-month release

00:11:41,100 --> 00:11:44,790
cables so not every six months we get

00:11:42,959 --> 00:11:45,899
together just after we released a

00:11:44,790 --> 00:11:46,740
version of code and figure out what

00:11:45,899 --> 00:11:50,550
we're going to do for the next six

00:11:46,740 --> 00:11:52,639
months I'm actually leaving for Tokyo on

00:11:50,550 --> 00:11:54,630
Saturday to go ten the next one of those

00:11:52,639 --> 00:11:57,540
boy that's gonna be on the flight in

00:11:54,630 --> 00:11:59,220
economy class the next one is in Austin

00:11:57,540 --> 00:12:01,439
so a little closer to home if you're

00:11:59,220 --> 00:12:03,660
interested in going to design summit

00:12:01,439 --> 00:12:04,589
that may be a pretty accessible one and

00:12:03,660 --> 00:12:07,980
you won't have to pay thousands of

00:12:04,589 --> 00:12:09,870
dollars for airfare and then next fall

00:12:07,980 --> 00:12:11,430
will be out in Barcelona Spain I have

00:12:09,870 --> 00:12:12,720
this theory that any project that gets

00:12:11,430 --> 00:12:13,889
large enough for any company that gets

00:12:12,720 --> 00:12:17,550
large enough eventually host a

00:12:13,889 --> 00:12:18,870
conference in Barcelona there's a

00:12:17,550 --> 00:12:20,759
welcome guide as well if you're brand

00:12:18,870 --> 00:12:22,470
new to the sack go get these slides

00:12:20,759 --> 00:12:23,550
click that link or you can find it on

00:12:22,470 --> 00:12:24,990
the other side cutter website it's

00:12:23,550 --> 00:12:26,880
pretty fun really displayed on the

00:12:24,990 --> 00:12:28,860
community section and that's kind of a

00:12:26,880 --> 00:12:31,439
general welcome to OpenStack here's how

00:12:28,860 --> 00:12:33,089
to get started guide if you're

00:12:31,439 --> 00:12:35,220
interested in trying out its act as an

00:12:33,089 --> 00:12:37,410
end user there's a community site called

00:12:35,220 --> 00:12:38,490
try stock org and that's where you can

00:12:37,410 --> 00:12:41,519
actually go sign up for a free account

00:12:38,490 --> 00:12:43,620
you get a few days of time on a real

00:12:41,519 --> 00:12:45,449
live of its iCloud running the kilo

00:12:43,620 --> 00:12:47,130
release Kermit laughing I'm not sure

00:12:45,449 --> 00:12:49,199
what the upgrade cycle for liberty is

00:12:47,130 --> 00:12:50,220
looking like for that but that will give

00:12:49,199 --> 00:12:52,290
you some time to actually go try out

00:12:50,220 --> 00:12:54,240
attack without actually having to

00:12:52,290 --> 00:12:56,699
do anything in your own servers or yo

00:12:54,240 --> 00:12:58,980
computers or even your laptop if you're

00:12:56,699 --> 00:13:00,180
like me you probably want something on

00:12:58,980 --> 00:13:02,100
your laptop that you play around with

00:13:00,180 --> 00:13:04,199
and really break things and go into the

00:13:02,100 --> 00:13:06,600
hood and look at the code so it decent

00:13:04,199 --> 00:13:09,630
way to start with that is to go look at

00:13:06,600 --> 00:13:11,130
devstack which is our sort of glorified

00:13:09,630 --> 00:13:12,420
shell script that installs a bunch of

00:13:11,130 --> 00:13:15,060
the sack components right on your laptop

00:13:12,420 --> 00:13:16,860
kind of all in one machine so you can go

00:13:15,060 --> 00:13:18,420
plug things and break things and

00:13:16,860 --> 00:13:20,279
generally you can tell devstack to pull

00:13:18,420 --> 00:13:21,870
the very latest code or you can tell it

00:13:20,279 --> 00:13:26,430
to pull some older more stable branch if

00:13:21,870 --> 00:13:28,110
that's or more to your liking so what

00:13:26,430 --> 00:13:30,870
are people using it for I mentioned that

00:13:28,110 --> 00:13:33,240
the user committee has a survey every

00:13:30,870 --> 00:13:36,240
six months and this is some data from

00:13:33,240 --> 00:13:37,170
from one more recent ones of those just

00:13:36,240 --> 00:13:38,670
to give you kind of an idea of like

00:13:37,170 --> 00:13:40,709
workloads that people are running on

00:13:38,670 --> 00:13:42,569
this today it's certainly kind of a hard

00:13:40,709 --> 00:13:44,459
area to capture you'll you'll notice

00:13:42,569 --> 00:13:47,130
like number three there is it's up to

00:13:44,459 --> 00:13:48,420
the user so I built a cloud and some

00:13:47,130 --> 00:13:49,560
teams are going to go run some stuff on

00:13:48,420 --> 00:13:51,569
it and I don't really know what they are

00:13:49,560 --> 00:13:54,269
and I don't really care because that's

00:13:51,569 --> 00:13:56,190
what tenancy does I don't have to care

00:13:54,269 --> 00:13:59,339
right all I have to do is run to the

00:13:56,190 --> 00:14:01,889
platform I'll just give an idea web apps

00:13:59,339 --> 00:14:04,019
are really popular cic d systems a

00:14:01,889 --> 00:14:05,850
really popular application development

00:14:04,019 --> 00:14:08,519
great platforms that because it's really

00:14:05,850 --> 00:14:10,079
elastic disposable resources right I can

00:14:08,519 --> 00:14:13,560
start by spinning up the m's today I can

00:14:10,079 --> 00:14:18,810
spin them down tomorrow and you know how

00:14:13,560 --> 00:14:20,699
that works in cloud okay so hundreds of

00:14:18,810 --> 00:14:23,310
projects available pretty flexible

00:14:20,699 --> 00:14:25,440
platform right so you get to choose

00:14:23,310 --> 00:14:27,839
which projects you deploy there's a

00:14:25,440 --> 00:14:29,430
whole lot of these and some some are

00:14:27,839 --> 00:14:31,050
very new there's some projects that are

00:14:29,430 --> 00:14:32,430
less than six months old the sax

00:14:31,050 --> 00:14:35,370
ecosystem and there are others that are

00:14:32,430 --> 00:14:37,800
going on five years now so there's a

00:14:35,370 --> 00:14:38,880
whole different range of options out

00:14:37,800 --> 00:14:41,490
there for you depending on what you're

00:14:38,880 --> 00:14:43,019
trying to do with your cloud so let's

00:14:41,490 --> 00:14:45,029
talk about a few of them obviously don't

00:14:43,019 --> 00:14:46,500
have time to do all of them today so

00:14:45,029 --> 00:14:48,089
we'll talk about some of the ones

00:14:46,500 --> 00:14:49,889
they're more popular again this comes

00:14:48,089 --> 00:14:51,209
from the sake of your survey you can

00:14:49,889 --> 00:14:54,060
kind of see at the top there there's

00:14:51,209 --> 00:14:55,800
sort of a division there where you sense

00:14:54,060 --> 00:14:58,709
the tents of fall off among users who

00:14:55,800 --> 00:15:00,029
are actually responding to the survey so

00:14:58,709 --> 00:15:00,970
some of the ones that are there up top

00:15:00,029 --> 00:15:03,610
there are the ones that have been

00:15:00,970 --> 00:15:05,889
around for quite some time and we'll

00:15:03,610 --> 00:15:07,120
talk mostly about those today and again

00:15:05,889 --> 00:15:08,529
if you have questions about other attack

00:15:07,120 --> 00:15:10,389
projects come find me afterwards simple

00:15:08,529 --> 00:15:14,199
we'll try to talk a little bit more

00:15:10,389 --> 00:15:16,930
about those so let's start off with a

00:15:14,199 --> 00:15:19,389
basic look at the software this diagram

00:15:16,930 --> 00:15:20,589
is is a little bit old and there's more

00:15:19,389 --> 00:15:21,910
stuff that would kind of fit the picture

00:15:20,589 --> 00:15:24,370
now but i think it's a useful starting

00:15:21,910 --> 00:15:26,949
point for a 101 session to kind of give

00:15:24,370 --> 00:15:28,899
you an idea of what's out there so if

00:15:26,949 --> 00:15:30,069
you look at the very first two

00:15:28,899 --> 00:15:32,439
components that we talked about earlier

00:15:30,069 --> 00:15:35,589
on we mentioned that NASA how to compute

00:15:32,439 --> 00:15:37,990
compute controller and Rackspace had an

00:15:35,589 --> 00:15:39,879
object storage controller those two

00:15:37,990 --> 00:15:41,709
things are called nova and Swift so

00:15:39,879 --> 00:15:44,350
those are kind of the original 22 pieces

00:15:41,709 --> 00:15:46,089
of the pie shortly after that a whole

00:15:44,350 --> 00:15:48,790
bunch of other stuff came around we got

00:15:46,089 --> 00:15:50,410
a GUI so you go into a web browser and

00:15:48,790 --> 00:15:52,180
point click and not have to actually

00:15:50,410 --> 00:15:53,500
know that guys because you can use a

00:15:52,180 --> 00:15:56,259
mouse better than you can use an API

00:15:53,500 --> 00:15:59,110
maybe it definitely maybe I yet that's

00:15:56,259 --> 00:16:01,120
called verizon there's an identity

00:15:59,110 --> 00:16:02,319
service called Keystone which is what

00:16:01,120 --> 00:16:04,899
takes care of authentication and

00:16:02,319 --> 00:16:09,519
authorization and telling you who can do

00:16:04,899 --> 00:16:10,899
what there's a block storage platform

00:16:09,519 --> 00:16:13,029
called cinder so this is the thing that

00:16:10,899 --> 00:16:14,709
allows you to touch attached block

00:16:13,029 --> 00:16:16,600
storage volumes to those instances once

00:16:14,709 --> 00:16:20,500
you've spun them up and there's also a

00:16:16,600 --> 00:16:22,269
networking service called neutron past

00:16:20,500 --> 00:16:23,379
that there's a whole bunch more projects

00:16:22,269 --> 00:16:26,649
that kind of moved into more mainstream

00:16:23,379 --> 00:16:27,879
usage in the past year or two so I've

00:16:26,649 --> 00:16:30,069
listed a few those at the bottom there's

00:16:27,879 --> 00:16:31,449
a database service there's a data

00:16:30,069 --> 00:16:33,129
processing service which is kind of like

00:16:31,449 --> 00:16:35,139
Hadoop is a service some people would

00:16:33,129 --> 00:16:36,910
put it there's an orchestration service

00:16:35,139 --> 00:16:38,379
there's a telemetry service and then

00:16:36,910 --> 00:16:39,730
there's just sort of like a whole bunch

00:16:38,379 --> 00:16:41,980
of more stuff that I probably couldn't

00:16:39,730 --> 00:16:43,750
possibly fit on this slide so if you

00:16:41,980 --> 00:16:45,399
think about a cloudy offering there's

00:16:43,750 --> 00:16:47,889
probably some parallel for that in the

00:16:45,399 --> 00:16:50,230
exact you go system so if you're new to

00:16:47,889 --> 00:16:51,819
open sax sometimes you're not new to

00:16:50,230 --> 00:16:53,829
cloud computing in general and it's

00:16:51,819 --> 00:16:54,879
useful to think about how these compared

00:16:53,829 --> 00:16:57,910
to some two offerings from other

00:16:54,879 --> 00:17:00,129
platforms like say AWS I don't have time

00:16:57,910 --> 00:17:02,529
to go through like a sure and Google

00:17:00,129 --> 00:17:04,329
cloud as well so we'll pick one enroll

00:17:02,529 --> 00:17:06,579
with that so these are kind of the

00:17:04,329 --> 00:17:06,760
equivalents for those projects out in

00:17:06,579 --> 00:17:08,650
the

00:17:06,760 --> 00:17:09,790
its own world so there's a management

00:17:08,650 --> 00:17:13,449
console that's kind of a coolant to

00:17:09,790 --> 00:17:14,890
Horizon arguing there's the ec2 service

00:17:13,449 --> 00:17:17,290
in Amazon pretty equivalent to our

00:17:14,890 --> 00:17:18,610
commute controller called Nova so you

00:17:17,290 --> 00:17:20,350
can kind of see all the the parallels

00:17:18,610 --> 00:17:21,940
that are out there you also notice that

00:17:20,350 --> 00:17:23,470
there are a few things that there aren't

00:17:21,940 --> 00:17:25,930
really good parallels for it every

00:17:23,470 --> 00:17:27,550
ecosystem so in open side for example we

00:17:25,930 --> 00:17:29,800
have glance which is an image service

00:17:27,550 --> 00:17:31,780
that's where I upload images that I want

00:17:29,800 --> 00:17:34,150
to turn it into virtual machines later

00:17:31,780 --> 00:17:35,440
on there's not an exact correlation for

00:17:34,150 --> 00:17:36,700
that Ian Amazon because they sort of

00:17:35,440 --> 00:17:38,710
lump that into third compute service

00:17:36,700 --> 00:17:41,590
right so there's some things that are

00:17:38,710 --> 00:17:43,300
just a little bit semantically if you

00:17:41,590 --> 00:17:45,850
like different between different clouds

00:17:43,300 --> 00:17:48,610
out there so no big surprise but that

00:17:45,850 --> 00:17:50,530
should give you an idea of some of the

00:17:48,610 --> 00:17:54,150
parallels between the sack world and

00:17:50,530 --> 00:17:54,150
other ecosystems that are out there

00:17:54,420 --> 00:17:58,030
before we go into technical details

00:17:57,070 --> 00:18:00,070
about all those projects let's talk a

00:17:58,030 --> 00:18:02,200
little bit about deaf core Chris Hodge

00:18:00,070 --> 00:18:03,820
who's here in the room somewhere at the

00:18:02,200 --> 00:18:07,570
back is actually going to give a whole

00:18:03,820 --> 00:18:09,120
talk about this next this very stage so

00:18:07,570 --> 00:18:11,020
I will seal its letter too much but

00:18:09,120 --> 00:18:12,490
because I mentioned that there are so

00:18:11,020 --> 00:18:14,110
many different projects you know the

00:18:12,490 --> 00:18:15,400
sack and there are all kinds of nerd

00:18:14,110 --> 00:18:17,140
knobs that you can turn to make your

00:18:15,400 --> 00:18:18,100
your cloud behave different ways even if

00:18:17,140 --> 00:18:19,930
you're running a subset of those

00:18:18,100 --> 00:18:21,190
components one of the things that have

00:18:19,930 --> 00:18:23,920
attacks been very concerned with lately

00:18:21,190 --> 00:18:25,630
is having interoperable products so as

00:18:23,920 --> 00:18:28,060
an end consumer of a event of attack

00:18:25,630 --> 00:18:31,210
product i'd like to know maybe that if i

00:18:28,060 --> 00:18:35,860
get a cloud product from i don't know

00:18:31,210 --> 00:18:37,180
red hat or vmware or boo to then if i

00:18:35,860 --> 00:18:39,520
change my mind and want to run a

00:18:37,180 --> 00:18:41,350
different OpenStack later on or maybe I

00:18:39,520 --> 00:18:42,790
want to go to a public cloud later on

00:18:41,350 --> 00:18:44,050
and share workloads for the two I want

00:18:42,790 --> 00:18:45,940
some level of interoperability between

00:18:44,050 --> 00:18:47,620
those things i want to know that if an

00:18:45,940 --> 00:18:50,200
api call works down here it also works

00:18:47,620 --> 00:18:52,240
over here so the inside communities has

00:18:50,200 --> 00:18:55,000
begun to address that in the past year

00:18:52,240 --> 00:18:56,860
or so with a program called the Deaf

00:18:55,000 --> 00:18:58,600
core committee and basically the Deaf

00:18:56,860 --> 00:19:01,030
core committees job is figure out what

00:18:58,600 --> 00:19:02,770
is sort of the core stuff in open sac

00:19:01,030 --> 00:19:05,380
that consumers would logically expect to

00:19:02,770 --> 00:19:06,610
work in all places any product that

00:19:05,380 --> 00:19:07,930
marriage they've attacked logo should

00:19:06,610 --> 00:19:09,700
really support some core set of

00:19:07,930 --> 00:19:11,350
functionality that's going to work no

00:19:09,700 --> 00:19:14,200
matter where you are I'm whose product

00:19:11,350 --> 00:19:16,060
you use so it's job is basically to come

00:19:14,200 --> 00:19:18,870
up with what we call guidelines and

00:19:16,060 --> 00:19:20,520
those are sort of lists of

00:19:18,870 --> 00:19:21,990
capabilities that an OpenStack product

00:19:20,520 --> 00:19:24,510
must have it's going to call itself up

00:19:21,990 --> 00:19:25,770
in sac and then a list of tests that it

00:19:24,510 --> 00:19:27,170
must pass in order to prove that it

00:19:25,770 --> 00:19:28,950
actually supports those capabilities

00:19:27,170 --> 00:19:30,390
those guidelines also includes

00:19:28,950 --> 00:19:31,800
designated sections in the of attack

00:19:30,390 --> 00:19:32,940
code that say if you offer this

00:19:31,800 --> 00:19:35,220
capability you've actually got to do it

00:19:32,940 --> 00:19:37,470
with open side code so you know that as

00:19:35,220 --> 00:19:40,320
a consumer if you are buying a product

00:19:37,470 --> 00:19:42,090
that meets all these capabilities and

00:19:40,320 --> 00:19:43,530
past all those tests that somebody

00:19:42,090 --> 00:19:47,250
hasn't actually you know rebirth of the

00:19:43,530 --> 00:19:49,710
thing in Java all right so let's go

00:19:47,250 --> 00:19:52,470
through some of the components in open

00:19:49,710 --> 00:19:54,480
sack by doing on time pretty good okay

00:19:52,470 --> 00:19:56,130
we'll go through sort of some of the

00:19:54,480 --> 00:19:57,660
more popular components here I'll give

00:19:56,130 --> 00:19:59,250
them a very very brief kind of one slide

00:19:57,660 --> 00:20:02,760
look at each one just give an idea of

00:19:59,250 --> 00:20:03,960
what capabilities those things are and

00:20:02,760 --> 00:20:05,820
what they abstract so we'll start with

00:20:03,960 --> 00:20:08,640
Keystone which is the authentication

00:20:05,820 --> 00:20:09,960
service so basically Keystone's job is

00:20:08,640 --> 00:20:11,460
it's the central service for

00:20:09,960 --> 00:20:13,590
authentication authentication and

00:20:11,460 --> 00:20:15,750
authorization it also provides the

00:20:13,590 --> 00:20:17,250
service catalog so basically this is

00:20:15,750 --> 00:20:18,750
where you start when you start

00:20:17,250 --> 00:20:20,700
interacting with its icon the very first

00:20:18,750 --> 00:20:22,620
thing you do to go to horizon or if you

00:20:20,700 --> 00:20:24,770
issue an API call is you have to login

00:20:22,620 --> 00:20:27,270
you have two selves in sac who you are

00:20:24,770 --> 00:20:29,220
and that's the service that actually

00:20:27,270 --> 00:20:31,020
takes care of doing that it abstract

00:20:29,220 --> 00:20:32,790
various back-end authentication services

00:20:31,020 --> 00:20:34,020
among other things there's there's

00:20:32,790 --> 00:20:35,460
little or no let's do it but that's kind

00:20:34,020 --> 00:20:37,200
of the one that people pick up on most

00:20:35,460 --> 00:20:39,480
easily you can keep authentication

00:20:37,200 --> 00:20:40,679
records in a plain old SQL database in

00:20:39,480 --> 00:20:42,990
my world where I work with a lot of

00:20:40,679 --> 00:20:45,059
enterprise customers lately it's usually

00:20:42,990 --> 00:20:47,820
an active directory or an ldap back end

00:20:45,059 --> 00:20:49,440
so you're not sort of necessarily

00:20:47,820 --> 00:20:50,820
putting putting a brand new

00:20:49,440 --> 00:20:53,670
authentication servers in your just

00:20:50,820 --> 00:20:56,610
abstracting them some other service on

00:20:53,670 --> 00:20:57,929
the back end uses a bearer token model

00:20:56,610 --> 00:20:59,640
so basically clients are assigned a

00:20:57,929 --> 00:21:01,740
token which then present to other

00:20:59,640 --> 00:21:02,970
services so i get a token from the

00:21:01,740 --> 00:21:05,100
keystone service after I successfully

00:21:02,970 --> 00:21:07,590
give it a username password and then I

00:21:05,100 --> 00:21:09,210
give that token to Keystone or sorry to

00:21:07,590 --> 00:21:11,429
nova or neutron or whatever else that

00:21:09,210 --> 00:21:13,110
wants to do things for me those things

00:21:11,429 --> 00:21:15,410
have a life cycle they expire they can

00:21:13,110 --> 00:21:18,050
be revoked all those all those things

00:21:15,410 --> 00:21:20,429
there multiple token type stop there now

00:21:18,050 --> 00:21:23,520
some of these will probably go away in

00:21:20,429 --> 00:21:25,500
the future as we move on to newer and

00:21:23,520 --> 00:21:27,590
better things sort of the original token

00:21:25,500 --> 00:21:30,700
for map is the UID format which is

00:21:27,590 --> 00:21:33,320
just a big long string of characters

00:21:30,700 --> 00:21:36,380
randomly generated basically we also

00:21:33,320 --> 00:21:39,260
have pki certificates to be 0 PK I

00:21:36,380 --> 00:21:41,029
signed tokens you can actually have

00:21:39,260 --> 00:21:43,190
found a paid off line there's also sort

00:21:41,029 --> 00:21:44,270
of a secondary format called pica Z

00:21:43,190 --> 00:21:46,549
which is so it's got a compressed

00:21:44,270 --> 00:21:49,090
version of that and that one's actually

00:21:46,549 --> 00:21:51,710
pretty popular out of the wild right now

00:21:49,090 --> 00:21:53,750
there's a very sort of a newer one

00:21:51,710 --> 00:21:56,179
called fern a tokens which actually uses

00:21:53,750 --> 00:21:59,899
a symmetric encryption which is kind of

00:21:56,179 --> 00:22:01,309
becoming the new new rage other

00:21:59,899 --> 00:22:03,289
interesting things by keystone you can

00:22:01,309 --> 00:22:05,480
actually Federici stone so if I have

00:22:03,289 --> 00:22:06,669
multiple clouds I can actually have one

00:22:05,480 --> 00:22:09,200
cloud authenticating it's another

00:22:06,669 --> 00:22:12,200
essentially so I've Keystone talking to

00:22:09,200 --> 00:22:15,049
another Keystone to thank a users via

00:22:12,200 --> 00:22:17,059
things like sam'l assertions again lots

00:22:15,049 --> 00:22:20,210
more nuance in there but we're sort

00:22:17,059 --> 00:22:21,230
short on time so since there are a lot

00:22:20,210 --> 00:22:23,690
of developers in the room I've often

00:22:21,230 --> 00:22:26,029
found that a good way to describe the

00:22:23,690 --> 00:22:27,350
capabilities of a cloud service is to

00:22:26,029 --> 00:22:29,630
describe some of the primitives that

00:22:27,350 --> 00:22:31,309
they have so if you're a developer you

00:22:29,630 --> 00:22:33,220
can kind of look at some of the

00:22:31,309 --> 00:22:35,659
primitives that are out there and see ok

00:22:33,220 --> 00:22:37,970
tokens I can create tokens I can update

00:22:35,659 --> 00:22:40,010
them I can delete them do all those

00:22:37,970 --> 00:22:41,899
things with them and in some cases it's

00:22:40,010 --> 00:22:43,100
not the full crud stack but just giving

00:22:41,899 --> 00:22:45,020
the idea of some of the some of the

00:22:43,100 --> 00:22:46,850
primitives that existing Keystone you

00:22:45,020 --> 00:22:47,929
have things like tokens services and

00:22:46,850 --> 00:22:49,460
points so i mentioned that service

00:22:47,929 --> 00:22:51,950
catalog earlier so i can basically get a

00:22:49,460 --> 00:22:53,840
list of where all the where nova lives

00:22:51,950 --> 00:22:56,600
where neutron lives how I interact with

00:22:53,840 --> 00:22:58,880
them whereas on my API request domains

00:22:56,600 --> 00:23:02,169
projects rude schedules roles policies

00:22:58,880 --> 00:23:06,169
kind of all that identity centric stuff

00:23:02,169 --> 00:23:07,279
ok so let's talk about glance glance is

00:23:06,169 --> 00:23:08,990
the image service so after I've

00:23:07,279 --> 00:23:10,460
successfully logged into a cloud first

00:23:08,990 --> 00:23:12,440
time probably next thing I want to do is

00:23:10,460 --> 00:23:14,090
upload an image that I will then turn

00:23:12,440 --> 00:23:15,890
into an instance so maybe I want to

00:23:14,090 --> 00:23:19,419
upload a redhead image or in a blue to

00:23:15,890 --> 00:23:22,399
image or core OS image or whatever else

00:23:19,419 --> 00:23:23,779
glances a service that does that so it's

00:23:22,399 --> 00:23:25,039
job is basically how its virtual machine

00:23:23,779 --> 00:23:27,380
images that can later be launched as

00:23:25,039 --> 00:23:28,789
instances it abstracts various image

00:23:27,380 --> 00:23:30,169
containers and disc formats plants can

00:23:28,789 --> 00:23:32,210
accept a whole bunch of different kinds

00:23:30,169 --> 00:23:33,740
of them the sort of caveat here is that

00:23:32,210 --> 00:23:35,179
doesn't mean that we can magically make

00:23:33,740 --> 00:23:37,610
any image format work with any

00:23:35,179 --> 00:23:38,759
hypervisor at the end the day there are

00:23:37,610 --> 00:23:41,039
some ways to do conversion there

00:23:38,759 --> 00:23:45,419
even talking of doing more advanced in

00:23:41,039 --> 00:23:47,219
line conversion upstream but what what

00:23:45,419 --> 00:23:49,440
images you want to actually upload into

00:23:47,219 --> 00:23:50,999
glance are probably a little bit

00:23:49,440 --> 00:23:53,820
depending on the underpinnings to the

00:23:50,999 --> 00:23:55,259
platform today so for example if vmware

00:23:53,820 --> 00:23:59,059
is the hypervisor underneath the hood

00:23:55,259 --> 00:24:01,109
you probably want to use it the MDK if

00:23:59,059 --> 00:24:02,849
kvm is the underpinning to your cloud

00:24:01,109 --> 00:24:03,899
you probably want to use cue cal unless

00:24:02,849 --> 00:24:05,639
you're writing stuff which case probably

00:24:03,899 --> 00:24:09,359
want a bra image so there is somebody

00:24:05,639 --> 00:24:10,499
wants there and that is actually there's

00:24:09,359 --> 00:24:11,789
kind of interesting thing going on in

00:24:10,499 --> 00:24:12,899
they have a second right now where we're

00:24:11,789 --> 00:24:14,489
trying to make those capabilities a

00:24:12,899 --> 00:24:16,529
little bit more discoverable to end

00:24:14,489 --> 00:24:18,449
users so you're not even actually I have

00:24:16,529 --> 00:24:19,799
to go to a cloud provider and read its

00:24:18,449 --> 00:24:21,629
documentation about which one red image

00:24:19,799 --> 00:24:23,639
formats at sports you messages make an

00:24:21,629 --> 00:24:26,459
API call it will say you know these are

00:24:23,639 --> 00:24:27,569
the image formats that support might

00:24:26,459 --> 00:24:30,839
even tell you these are the ones I

00:24:27,569 --> 00:24:32,099
really prefer so there's kind of kind of

00:24:30,839 --> 00:24:35,099
some good conversations not back one on

00:24:32,099 --> 00:24:37,139
now multiple storage backends for this

00:24:35,099 --> 00:24:38,399
as well you can put them straight onto

00:24:37,139 --> 00:24:41,009
disk in a file you can put them into a

00:24:38,399 --> 00:24:42,449
vmdk put them into a swift you can put

00:24:41,009 --> 00:24:46,379
them into Seth lots of different

00:24:42,449 --> 00:24:48,809
possible backends primitives so things

00:24:46,379 --> 00:24:51,509
that you can do operations on with

00:24:48,809 --> 00:24:52,829
plants images obviously there's also

00:24:51,509 --> 00:24:54,269
some metadata associated with those

00:24:52,829 --> 00:24:56,909
images and tags associated with those

00:24:54,269 --> 00:24:59,009
there's also tasks as well so this is

00:24:56,909 --> 00:25:00,959
basically a task workflow where I can as

00:24:59,009 --> 00:25:02,190
a cloud provider i can define a set of

00:25:00,959 --> 00:25:04,169
tasks that happen when I want to say

00:25:02,190 --> 00:25:05,429
import an image from outside world which

00:25:04,169 --> 00:25:07,049
might involve things like running it

00:25:05,429 --> 00:25:12,149
through some security procedures before

00:25:07,049 --> 00:25:14,009
actually publish it in my pod Nova the

00:25:12,149 --> 00:25:15,569
compute controller so this is kind of

00:25:14,009 --> 00:25:17,549
kind of one of the grand daddies of all

00:25:15,569 --> 00:25:19,109
since it's been there for a while it's

00:25:17,549 --> 00:25:20,969
why the ones that most people think of

00:25:19,109 --> 00:25:22,379
when they they talk about it exact so

00:25:20,969 --> 00:25:25,469
basically this is what takes care of

00:25:22,379 --> 00:25:27,089
launching the ends and then deleting

00:25:25,469 --> 00:25:29,219
them running them keeping track of them

00:25:27,089 --> 00:25:30,749
where they are picking what hypervisors

00:25:29,219 --> 00:25:32,849
they actually land on in that big pool

00:25:30,749 --> 00:25:34,709
that's tracted hardware scheduling them

00:25:32,849 --> 00:25:37,259
doing all those things that's all all

00:25:34,709 --> 00:25:39,989
mobis stuff so think loosely amazon ec2

00:25:37,259 --> 00:25:41,669
here right also takes care of some of

00:25:39,989 --> 00:25:43,199
the plugging services it doesn't really

00:25:41,669 --> 00:25:44,940
do me a lot of good to have a vm unless

00:25:43,199 --> 00:25:46,649
i can actually get to it somehow right

00:25:44,940 --> 00:25:47,999
so i probably want to console or I

00:25:46,649 --> 00:25:50,249
probably want to plug it into a network

00:25:47,999 --> 00:25:51,730
so i can ssh into it I probably want to

00:25:50,249 --> 00:25:56,110
inject key pairs into it so

00:25:51,730 --> 00:25:58,240
can do that ssh called nobody takes care

00:25:56,110 --> 00:25:59,950
of a lot of that stuff as well so it's

00:25:58,240 --> 00:26:02,080
job is basically to abstract hypervisors

00:25:59,950 --> 00:26:03,670
in most cases if I go to a public cloud

00:26:02,080 --> 00:26:05,410
I don't actually know what high pressure

00:26:03,670 --> 00:26:07,950
is running out of the hood unless I've

00:26:05,410 --> 00:26:11,200
read their their news releases about it

00:26:07,950 --> 00:26:12,670
and pools in computer hardware obviously

00:26:11,200 --> 00:26:14,020
as well there's a bunch of servers that

00:26:12,670 --> 00:26:15,340
I don't necessarily even have to see as

00:26:14,020 --> 00:26:17,440
an end user of the site cloud they're

00:26:15,340 --> 00:26:19,270
just at a data center somewhere I don't

00:26:17,440 --> 00:26:20,830
know how many they are most cases I

00:26:19,270 --> 00:26:22,990
don't even know what the hardware looks

00:26:20,830 --> 00:26:26,560
like i'm just getting virtual machines

00:26:22,990 --> 00:26:28,660
office so most operations here happen to

00:26:26,560 --> 00:26:29,830
be a rest call CLI client or a few

00:26:28,660 --> 00:26:31,510
clicks in the prize in Portal that's

00:26:29,830 --> 00:26:33,820
true pretty much every open second poner

00:26:31,510 --> 00:26:36,820
right at the end of the day those CL

00:26:33,820 --> 00:26:37,750
eyes and the prez and web GUI itself

00:26:36,820 --> 00:26:39,940
they're all just making a the odd

00:26:37,750 --> 00:26:41,680
request right so grab your packet

00:26:39,940 --> 00:26:44,620
sniffer and go look at what if God calls

00:26:41,680 --> 00:26:46,450
they're making a few if you're curious a

00:26:44,620 --> 00:26:48,460
few high-level features most high

00:26:46,450 --> 00:26:50,170
pressure supported I mentioned Microsoft

00:26:48,460 --> 00:26:51,790
is active in attack that's one of things

00:26:50,170 --> 00:26:53,830
that they do is actually support hyper-v

00:26:51,790 --> 00:26:55,750
so you can use VMware you can use hyper

00:26:53,830 --> 00:26:59,530
beam use kvm you can use chemo you can

00:26:55,750 --> 00:27:02,920
use some of the containers lxc all those

00:26:59,530 --> 00:27:05,650
things are supported it's a distributed

00:27:02,920 --> 00:27:08,710
architecture mostly asynchronous public

00:27:05,650 --> 00:27:10,690
rest api there's SQL backend also true

00:27:08,710 --> 00:27:12,160
of most most of the tech services we

00:27:10,690 --> 00:27:14,470
keeps them some data in the backend for

00:27:12,160 --> 00:27:16,990
keeping track things so that you know we

00:27:14,470 --> 00:27:21,190
have state stored somewhere and we use

00:27:16,990 --> 00:27:22,630
am tq4 RPC calls that's strictly true

00:27:21,190 --> 00:27:24,340
there's some other muscle purgatory news

00:27:22,630 --> 00:27:28,660
but the vast majority of the world use

00:27:24,340 --> 00:27:30,970
uses RabbitMQ for this a few things that

00:27:28,660 --> 00:27:32,940
sports their security groups and there's

00:27:30,970 --> 00:27:35,050
also several different means of sort of

00:27:32,940 --> 00:27:36,820
segregating resources within your cloud

00:27:35,050 --> 00:27:39,130
so if you get exams on today you know

00:27:36,820 --> 00:27:40,540
that you can use the u.s. East region

00:27:39,130 --> 00:27:41,860
you can use the u.s. west region there's

00:27:40,540 --> 00:27:43,870
a ridge in Brazil there's region in

00:27:41,860 --> 00:27:45,820
Europe you can do those same sorts of

00:27:43,870 --> 00:27:46,930
things with with OpenStack there's lots

00:27:45,820 --> 00:27:49,690
of different ways to slice and dice

00:27:46,930 --> 00:27:52,060
compute capacity there's things called

00:27:49,690 --> 00:27:54,559
boost aggregates which basically allow

00:27:52,060 --> 00:27:56,690
an administrator to tag a set of

00:27:54,559 --> 00:27:58,999
back-end servers with certain attributes

00:27:56,690 --> 00:28:01,519
so maybe I say this is a set of servers

00:27:58,999 --> 00:28:04,639
that have SSP disks or this is a set

00:28:01,519 --> 00:28:06,850
that has really awesome GPUs or these

00:28:04,639 --> 00:28:12,309
are ones that have 10 gigabit ethernet

00:28:06,850 --> 00:28:14,389
cards and then when when my clients are

00:28:12,309 --> 00:28:17,299
launching an instance they can say I

00:28:14,389 --> 00:28:21,559
would like to have a virtual machine

00:28:17,299 --> 00:28:23,419
that has access to an SSD or a GPU and

00:28:21,559 --> 00:28:24,529
the schedule will then take care of

00:28:23,419 --> 00:28:26,289
matching those two requirements and

00:28:24,529 --> 00:28:28,249
putting putting things in logical places

00:28:26,289 --> 00:28:30,799
there's also availability zone it's

00:28:28,249 --> 00:28:33,529
pretty overloaded term these days a lot

00:28:30,799 --> 00:28:35,749
of people still use these for sort of

00:28:33,529 --> 00:28:37,249
separating failures ends so maybe five

00:28:35,749 --> 00:28:39,200
two different availability zones within

00:28:37,249 --> 00:28:41,600
my cloud then those sets of machines are

00:28:39,200 --> 00:28:42,830
gonna be on different sets of external

00:28:41,600 --> 00:28:45,080
network connectivity different power

00:28:42,830 --> 00:28:47,299
supplies different racks different

00:28:45,080 --> 00:28:48,860
cooling those sorts of things just

00:28:47,299 --> 00:28:50,629
basically a way of providing some some

00:28:48,860 --> 00:28:53,360
physical isolation of those those

00:28:50,629 --> 00:28:55,369
machines regions pretty much the same

00:28:53,360 --> 00:28:57,259
concept that you see elsewhere you can

00:28:55,369 --> 00:28:59,450
run geographically diverse regions we

00:28:57,259 --> 00:29:02,029
actually have people that run regions

00:28:59,450 --> 00:29:03,499
within the same data center as well so

00:29:02,029 --> 00:29:06,259
again just another another way to slice

00:29:03,499 --> 00:29:07,879
and dice your cloud one haiti thing that

00:29:06,259 --> 00:29:09,740
regions are used for pretty frequently

00:29:07,879 --> 00:29:11,840
is offering different computing

00:29:09,740 --> 00:29:14,299
underpinnings as well so i might have a

00:29:11,840 --> 00:29:16,999
region of kbm capacity and a region of

00:29:14,299 --> 00:29:20,389
vm work capacity in a region of hyper-v

00:29:16,999 --> 00:29:22,490
capacity in my same client there's also

00:29:20,389 --> 00:29:25,159
something called cells which I won't go

00:29:22,490 --> 00:29:25,970
into because it's coming along story but

00:29:25,159 --> 00:29:29,629
you can talk to me later about that

00:29:25,970 --> 00:29:31,669
primitives there are flavors so this

00:29:29,629 --> 00:29:33,499
basically allows you to say I went in

00:29:31,669 --> 00:29:34,820
image that certain characteristics say

00:29:33,499 --> 00:29:36,559
certain amount of ram cpu whatever

00:29:34,820 --> 00:29:39,139
ephemeral disk those kind of things

00:29:36,559 --> 00:29:40,249
servers obviously I want to spin up a a

00:29:39,139 --> 00:29:43,669
quote unquote server that really

00:29:40,249 --> 00:29:45,230
translates to MDM key pairs so that I

00:29:43,669 --> 00:29:47,330
can get any of those things there are

00:29:45,230 --> 00:29:50,990
quotas and there are things like post

00:29:47,330 --> 00:29:54,110
and grits abilities as well neutron the

00:29:50,990 --> 00:29:56,179
network controller so basically neutrons

00:29:54,110 --> 00:29:58,220
job is to provide tenants not

00:29:56,179 --> 00:29:59,749
administrator just about tenants with

00:29:58,220 --> 00:30:01,820
the ability to create isolated or shared

00:29:59,749 --> 00:30:03,019
l2 and l3 virtual networks and then be

00:30:01,820 --> 00:30:04,700
able to do things like route in between

00:30:03,019 --> 00:30:06,320
them this was actually a pretty cool

00:30:04,700 --> 00:30:07,759
thing when it got started because it

00:30:06,320 --> 00:30:09,529
and thing that a lot of people have

00:30:07,759 --> 00:30:11,179
thought about before generally when

00:30:09,529 --> 00:30:13,909
people were used to asking their IT

00:30:11,179 --> 00:30:15,649
department for VMS in the past they got

00:30:13,909 --> 00:30:16,580
a veal and that the IT department had

00:30:15,649 --> 00:30:18,470
already picked and they didn't really

00:30:16,580 --> 00:30:19,850
have much say in the matter and if they

00:30:18,470 --> 00:30:22,100
wanted to change that North apology

00:30:19,850 --> 00:30:23,210
there's sort of a long list of paperwork

00:30:22,100 --> 00:30:24,980
you had to go through in order to

00:30:23,210 --> 00:30:27,200
convince people that they should do that

00:30:24,980 --> 00:30:28,700
for you in OpenStack things are a little

00:30:27,200 --> 00:30:30,289
different with Neutron you can actually

00:30:28,700 --> 00:30:33,320
have tenants defined their own networks

00:30:30,289 --> 00:30:34,700
define their own subnets they don't even

00:30:33,320 --> 00:30:36,649
have to worry about the IP addresses

00:30:34,700 --> 00:30:39,049
overlapping because new transports

00:30:36,649 --> 00:30:40,700
overlapping IP addresses so within those

00:30:39,049 --> 00:30:42,830
those isolated networks you can actually

00:30:40,700 --> 00:30:44,539
have two different tenants using exactly

00:30:42,830 --> 00:30:45,529
the same IP addresses then they go

00:30:44,539 --> 00:30:47,480
through an app to get to the outside

00:30:45,529 --> 00:30:50,860
world don't have to worry about stepping

00:30:47,480 --> 00:30:50,860
on each other's toes in that way

00:30:50,889 --> 00:30:54,139
abstracts various networking backends

00:30:52,909 --> 00:30:55,519
there's a lot of different ways to build

00:30:54,139 --> 00:30:58,909
networks you know the sack as it turns

00:30:55,519 --> 00:31:00,860
out you can use svn controllers you know

00:30:58,909 --> 00:31:02,629
my employer makes one you can use

00:31:00,860 --> 00:31:04,820
physical switches my former employer

00:31:02,629 --> 00:31:06,409
makes a lot of those there are dozens of

00:31:04,820 --> 00:31:08,629
back and plugins some are open-source

00:31:06,409 --> 00:31:10,490
summer proprietary there's always pretty

00:31:08,629 --> 00:31:13,039
much for any of these tech components

00:31:10,490 --> 00:31:14,330
there's always a at least one open

00:31:13,039 --> 00:31:16,190
source reference implementation in our

00:31:14,330 --> 00:31:18,399
case that's typically thought of as

00:31:16,190 --> 00:31:20,360
either open be switch or Linux bridge

00:31:18,399 --> 00:31:22,159
and you can use that with a variety of

00:31:20,360 --> 00:31:24,679
different tunneling protocols as well

00:31:22,159 --> 00:31:27,440
you can use vlans you can use the X

00:31:24,679 --> 00:31:31,250
lands you can use GRE tunnels and so

00:31:27,440 --> 00:31:32,720
forth sports ipv4 and ipv6 although

00:31:31,250 --> 00:31:34,940
that's a little dependent on the plug-in

00:31:32,720 --> 00:31:37,460
not all plug-ins for ty BB 6 so for

00:31:34,940 --> 00:31:40,340
example some SDM platforms still don't

00:31:37,460 --> 00:31:42,259
support I v6 today so if you're sitting

00:31:40,340 --> 00:31:45,799
v6 just do your homework before you pick

00:31:42,259 --> 00:31:47,269
a pic a network interestingly neutron

00:31:45,799 --> 00:31:48,500
has gotten so big and she's so much

00:31:47,269 --> 00:31:50,029
attention that it's transform itself

00:31:48,500 --> 00:31:52,309
over the past year or so into what we

00:31:50,029 --> 00:31:54,860
call stadium project which is basically

00:31:52,309 --> 00:31:56,570
the neutron core has sort of set up some

00:31:54,860 --> 00:31:58,129
teams within the project to focus on

00:31:56,570 --> 00:31:59,870
individual areas because the thing is so

00:31:58,129 --> 00:32:00,799
darn big and there's so many different

00:31:59,870 --> 00:32:02,990
things you might want to do with

00:32:00,799 --> 00:32:04,639
networks that it's really hard for one

00:32:02,990 --> 00:32:06,980
small sent people to focus on all that

00:32:04,639 --> 00:32:09,049
stuff I think this is a great move

00:32:06,980 --> 00:32:11,480
because networks has turns out our pre

00:32:09,049 --> 00:32:12,830
diverse things it's not just l2 and l3

00:32:11,480 --> 00:32:14,539
conductivity anymore people want to do

00:32:12,830 --> 00:32:15,919
things like have VPN is a service that

00:32:14,539 --> 00:32:17,549
won't have load balancing deserves the

00:32:15,919 --> 00:32:19,739
one have firewalls rose

00:32:17,549 --> 00:32:21,960
all of these sorts of higher level

00:32:19,739 --> 00:32:23,220
abstractions that are sort of very

00:32:21,960 --> 00:32:26,669
different disciplines within the network

00:32:23,220 --> 00:32:28,049
field so useful things they've done some

00:32:26,669 --> 00:32:31,139
of the primitives pretty much what you'd

00:32:28,049 --> 00:32:33,779
expect from the sort of lens of l2 l3

00:32:31,139 --> 00:32:36,299
connectivity you have basically networks

00:32:33,779 --> 00:32:38,279
networks have ports on them and then you

00:32:36,299 --> 00:32:39,749
would plug this or virtual interfaces

00:32:38,279 --> 00:32:42,059
from your servers into those virtual

00:32:39,749 --> 00:32:43,679
ports so with an API call you're

00:32:42,059 --> 00:32:46,639
essentially now running a cat5 cable

00:32:43,679 --> 00:32:49,499
between two things a switch and server

00:32:46,639 --> 00:32:52,019
there's routers there's other stuff I

00:32:49,499 --> 00:32:53,039
mentioned the sort of the lower half and

00:32:52,019 --> 00:32:54,929
list there are some of the things that

00:32:53,039 --> 00:32:56,850
come from some of the l4 307 services

00:32:54,929 --> 00:32:57,869
these ones are taken from the load

00:32:56,850 --> 00:32:59,460
balancing of the service you'll have

00:32:57,869 --> 00:33:00,989
things like virtual IP addresses health

00:32:59,460 --> 00:33:03,119
monitors pools members just like you

00:33:00,989 --> 00:33:05,489
would on if you're setting up a physical

00:33:03,119 --> 00:33:08,210
load balancer in your data center so

00:33:05,489 --> 00:33:12,539
pretty pretty straightforward primitives

00:33:08,210 --> 00:33:13,859
object storage Swiss job is basically to

00:33:12,539 --> 00:33:15,119
provide highly available distributed

00:33:13,859 --> 00:33:16,889
eventually consistent object storage

00:33:15,119 --> 00:33:19,830
objects in this case generally people

00:33:16,889 --> 00:33:21,659
think of this as files so doesn't know

00:33:19,830 --> 00:33:24,239
not to go a file of a particular format

00:33:21,659 --> 00:33:27,109
but a thing a bunch of bits that

00:33:24,239 --> 00:33:29,220
together make a an object or a file

00:33:27,109 --> 00:33:31,559
interestingly Swift is one of those

00:33:29,220 --> 00:33:32,909
components that not only can be run

00:33:31,559 --> 00:33:34,309
completely independently of the rest of

00:33:32,909 --> 00:33:36,059
the sack but often actually is

00:33:34,309 --> 00:33:37,259
especially in the early days there a lot

00:33:36,059 --> 00:33:39,539
of people have actually just cared about

00:33:37,259 --> 00:33:41,220
the the object storage piece so they

00:33:39,539 --> 00:33:43,799
would stand up Swift separately of

00:33:41,220 --> 00:33:44,820
everything else we even I know that

00:33:43,799 --> 00:33:46,350
there are some some clouds out there

00:33:44,820 --> 00:33:48,779
that you Swift for their object storage

00:33:46,350 --> 00:33:49,769
and other things to do their compute so

00:33:48,779 --> 00:33:51,779
it's kind of kind of interesting in that

00:33:49,769 --> 00:33:52,950
regard that's how it does have

00:33:51,779 --> 00:33:54,090
integration with everything else you can

00:33:52,950 --> 00:33:57,450
use Keystone to authenticate against

00:33:54,090 --> 00:33:59,970
Swift and so forth optimized around

00:33:57,450 --> 00:34:01,830
durability availability actually has one

00:33:59,970 --> 00:34:03,779
of the most long-lived api's and

00:34:01,830 --> 00:34:05,580
although the sack it's still on be 15

00:34:03,779 --> 00:34:07,499
years later so if you're interested in

00:34:05,580 --> 00:34:11,399
API stability have I got a project for

00:34:07,499 --> 00:34:13,139
you other projects this evening idea

00:34:11,399 --> 00:34:15,589
that are younger than that are now on

00:34:13,139 --> 00:34:19,609
their third major rather the right guy

00:34:15,589 --> 00:34:23,339
it's its mission 14 great possibility

00:34:19,609 --> 00:34:24,829
similar in some respects to HDFS or s3

00:34:23,339 --> 00:34:26,909
there's constant Carlos be drawn here

00:34:24,829 --> 00:34:29,010
essentially it's a replication service

00:34:26,909 --> 00:34:30,300
so I put an object into Swift and it

00:34:29,010 --> 00:34:32,490
will replicate it out to at least

00:34:30,300 --> 00:34:34,829
usually three different servers in that

00:34:32,490 --> 00:34:37,230
back end so that if a rack fails if a

00:34:34,829 --> 00:34:38,520
server fails if a hard drive fails Ivan

00:34:37,230 --> 00:34:40,109
lost the data right because it's

00:34:38,520 --> 00:34:42,030
replicated to other other parts of the

00:34:40,109 --> 00:34:46,559
of the data center just like you would

00:34:42,030 --> 00:34:49,109
with something like HDFS primitives here

00:34:46,559 --> 00:34:51,149
very simple accounts containers objects

00:34:49,109 --> 00:34:53,520
and that's more or less it so containers

00:34:51,149 --> 00:34:54,389
pretty self-explanatory objects are the

00:34:53,520 --> 00:34:57,869
things that you're gonna put in there

00:34:54,389 --> 00:35:01,099
and then it counts cinder is the block

00:34:57,869 --> 00:35:02,940
storage service so this is what provides

00:35:01,099 --> 00:35:04,349
persistent block storage volumes when

00:35:02,940 --> 00:35:06,359
you spin up an instance in OpenStack

00:35:04,349 --> 00:35:07,920
just like in most cloud services if you

00:35:06,359 --> 00:35:09,839
terminate that incense everything that

00:35:07,920 --> 00:35:12,420
is on the hard disk goes away right it's

00:35:09,839 --> 00:35:14,700
gone poof it's ephemeral disk if you

00:35:12,420 --> 00:35:16,200
want to actually persist data like say

00:35:14,700 --> 00:35:17,280
if you're running a database that has

00:35:16,200 --> 00:35:19,380
data in it that you actually care about

00:35:17,280 --> 00:35:21,420
you probably want to attach a persistent

00:35:19,380 --> 00:35:24,059
volume to it in Amazon you that with

00:35:21,420 --> 00:35:26,700
with us three in our case you need out

00:35:24,059 --> 00:35:28,140
center this was originally pardon of

00:35:26,700 --> 00:35:29,190
itself and that was split out a later

00:35:28,140 --> 00:35:31,410
release to allow it to evolve

00:35:29,190 --> 00:35:33,569
independently still some previous pretty

00:35:31,410 --> 00:35:35,339
strong ties there dozens of drivers on

00:35:33,569 --> 00:35:36,510
the back ends it pretty much if there's

00:35:35,339 --> 00:35:39,299
a storage vendor out there they probably

00:35:36,510 --> 00:35:40,920
haven't actually get for you and volumes

00:35:39,299 --> 00:35:45,540
of hearing instances basically just like

00:35:40,920 --> 00:35:49,619
a virtual hard drive primitives volumes

00:35:45,540 --> 00:35:51,630
backup snapshots and some other stuff ok

00:35:49,619 --> 00:35:53,309
so we're running close to the edge of

00:35:51,630 --> 00:35:54,390
time here so I'm going to try to wrap up

00:35:53,309 --> 00:35:55,920
very quickly there's a whole lot of

00:35:54,390 --> 00:35:59,309
other stuff that we can't possibly cover

00:35:55,920 --> 00:36:00,569
in 40 minutes just even ideal do for so

00:35:59,309 --> 00:36:02,099
the other ways to get involved note sack

00:36:00,569 --> 00:36:04,829
there's documentation which we actually

00:36:02,099 --> 00:36:05,580
treat as code and review in Garrett so

00:36:04,829 --> 00:36:08,130
it

00:36:05,580 --> 00:36:09,420
sting way to do docks there's continuous

00:36:08,130 --> 00:36:11,730
integration infrastructure those client

00:36:09,420 --> 00:36:14,040
libraries there's tempest which is our

00:36:11,730 --> 00:36:16,260
integration test harness bunches of

00:36:14,040 --> 00:36:17,190
other stuff out there and then sort of

00:36:16,260 --> 00:36:18,420
the bottom there there's bunch of other

00:36:17,190 --> 00:36:20,100
services that we don't really have time

00:36:18,420 --> 00:36:21,660
to talk about it is well I mentioned

00:36:20,100 --> 00:36:23,160
that there's around 600 get repos out

00:36:21,660 --> 00:36:25,650
there and those are some of the other

00:36:23,160 --> 00:36:30,660
other services that you get through

00:36:25,650 --> 00:36:31,890
throughout the sack and rib we're just

00:36:30,660 --> 00:36:34,080
about out of time but I think we might

00:36:31,890 --> 00:36:35,580
have time for a question or two so if

00:36:34,080 --> 00:36:36,780
folks have those I'm having take them if

00:36:35,580 --> 00:36:39,440
not then you can find me on the hall

00:36:36,780 --> 00:36:39,440
yeah

00:36:56,450 --> 00:37:01,550
sure so there there are various shops

00:36:59,210 --> 00:37:03,380
out there that do abstract velvet like I

00:37:01,550 --> 00:37:05,990
know mirantis is pretty pretty coin

00:37:03,380 --> 00:37:08,300
operated there is good that's not a dig

00:37:05,990 --> 00:37:10,070
really but they do a lot of a lot of

00:37:08,300 --> 00:37:11,210
integration work there's other other

00:37:10,070 --> 00:37:14,240
better job there the ecosystem as well

00:37:11,210 --> 00:37:15,440
and there is some support for like SRV

00:37:14,240 --> 00:37:17,420
and those kind of things already know

00:37:15,440 --> 00:37:19,490
the sack so it's definitely hear that

00:37:17,420 --> 00:37:20,750
there's some interested as well I think

00:37:19,490 --> 00:37:29,300
those certain guys for doing some work

00:37:20,750 --> 00:37:31,089
with GPUs as well Bay else they will be

00:37:29,300 --> 00:37:33,200
so I'll put them up on SlideShare and

00:37:31,089 --> 00:37:34,609
ATO usually gets them up within about

00:37:33,200 --> 00:37:39,829
two weeks or so as well on their website

00:37:34,609 --> 00:37:41,990
I think we're about out of time that's

00:37:39,829 --> 00:37:43,550
my Twitter handle if you see something

00:37:41,990 --> 00:37:45,260
here that was egregiously wrong or you

00:37:43,550 --> 00:37:46,790
just want to copy the slides later ping

00:37:45,260 --> 00:37:48,230
me and I'll make sure that you get the

00:37:46,790 --> 00:37:51,339
links and I'll tweet out that link later

00:37:48,230 --> 00:37:51,339

YouTube URL: https://www.youtube.com/watch?v=1ltHB_GcFHA


