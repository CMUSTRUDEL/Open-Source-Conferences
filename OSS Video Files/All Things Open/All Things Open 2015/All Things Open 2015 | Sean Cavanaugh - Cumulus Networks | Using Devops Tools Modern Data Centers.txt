Title: All Things Open 2015 | Sean Cavanaugh - Cumulus Networks | Using Devops Tools Modern Data Centers
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2014 All Things Open 2015, October 19th and 20th, Raleigh NC. All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:05,029 --> 00:00:12,929
cumulus i would consider us an SDN

00:00:08,160 --> 00:00:14,370
enabler so we can actually so this talks

00:00:12,929 --> 00:00:16,350
not going to be pitching cumulus linux

00:00:14,370 --> 00:00:18,480
so much is just showing where i'm coming

00:00:16,350 --> 00:00:19,890
from because this kind of stuff i'm

00:00:18,480 --> 00:00:22,470
showing today will work with the wrist

00:00:19,890 --> 00:00:24,779
or Cisco or our competitors I think it

00:00:22,470 --> 00:00:26,130
just shows where I'm coming from just so

00:00:24,779 --> 00:00:28,859
we know so I have one slide on what

00:00:26,130 --> 00:00:30,570
cumulus is and this is what I chose we

00:00:28,859 --> 00:00:32,489
run on bare metal switches so the same

00:00:30,570 --> 00:00:34,500
way you install red hat or a bun to to

00:00:32,489 --> 00:00:36,630
bare metal servers you install cumulus

00:00:34,500 --> 00:00:39,180
linux to bare metal switches and you get

00:00:36,630 --> 00:00:41,129
your choice of OS on top of this in the

00:00:39,180 --> 00:00:42,750
market segment we're competing in this

00:00:41,129 --> 00:00:43,950
is the exact same hardware that our

00:00:42,750 --> 00:00:45,930
competitors are running they're just

00:00:43,950 --> 00:00:48,690
charging fifty two hundred percent or

00:00:45,930 --> 00:00:50,309
more than what the actual cost of it is

00:00:48,690 --> 00:00:52,289
a lot of times it's a stamped in the

00:00:50,309 --> 00:00:56,760
same factories it's made in the same

00:00:52,289 --> 00:00:59,010
places and this dis aggregations like

00:00:56,760 --> 00:01:00,570
one huge pillar of what we find is a

00:00:59,010 --> 00:01:02,940
company is this Hardware disaggregation

00:01:00,570 --> 00:01:04,530
and then since we're linux like you

00:01:02,940 --> 00:01:07,260
literally jump on our product it's

00:01:04,530 --> 00:01:10,020
automatable it's just debian based linux

00:01:07,260 --> 00:01:12,060
i do IP link show i have config all the

00:01:10,020 --> 00:01:14,310
commands you're used to it just looks

00:01:12,060 --> 00:01:18,900
like a server with a bunch of nicks on

00:01:14,310 --> 00:01:20,310
it so i came to cumulus before I think

00:01:18,900 --> 00:01:22,200
the website was working cuz i just

00:01:20,310 --> 00:01:24,270
wanted to do linux and networking i just

00:01:22,200 --> 00:01:26,280
found this funny company with like 20

00:01:24,270 --> 00:01:28,470
people working at it and eventually kept

00:01:26,280 --> 00:01:33,119
harassing them until they hired me to do

00:01:28,470 --> 00:01:34,560
stuff like this um which was sdn so the

00:01:33,119 --> 00:01:36,119
actual vp engineering asked me what do

00:01:34,560 --> 00:01:40,710
you think of SDN nice like I think it's

00:01:36,119 --> 00:01:42,420
a buzzword and I hate it so then I think

00:01:40,710 --> 00:01:44,189
that was the interview I think Sergey

00:01:42,420 --> 00:01:46,909
basically was like I like this guy

00:01:44,189 --> 00:01:49,049
because he hates the word sdn too

00:01:46,909 --> 00:01:51,030
because stn means a lot of stuff to

00:01:49,049 --> 00:01:54,180
different people it's very confusing

00:01:51,030 --> 00:01:56,610
term and I and that's kind of what this

00:01:54,180 --> 00:01:58,350
top will go into is kind of real briefly

00:01:56,610 --> 00:02:00,000
what I think sdn is and then kind of

00:01:58,350 --> 00:02:03,270
talking about DevOps tools and using

00:02:00,000 --> 00:02:06,090
them as an SDN environment so one thing

00:02:03,270 --> 00:02:08,610
is a lot of people equate sdn to open

00:02:06,090 --> 00:02:12,330
flow and it's very easy like open flow

00:02:08,610 --> 00:02:13,100
org will tell you that it's experimental

00:02:12,330 --> 00:02:16,100
protocol

00:02:13,100 --> 00:02:18,560
never mentions sdn it's one of many

00:02:16,100 --> 00:02:20,930
things that consider themselves sdn and

00:02:18,560 --> 00:02:22,370
I think a more generic description of

00:02:20,930 --> 00:02:25,580
this is an abstraction of higher-level

00:02:22,370 --> 00:02:28,250
functionality so sdn to me just means

00:02:25,580 --> 00:02:30,290
programmable networks and like what is

00:02:28,250 --> 00:02:31,640
what does that really mean because that

00:02:30,290 --> 00:02:35,020
just sounds like a lot of buzz words

00:02:31,640 --> 00:02:38,120
again like watching HBO Silicon Valley

00:02:35,020 --> 00:02:40,940
so I kind of break this is a slide I use

00:02:38,120 --> 00:02:42,920
in partner training a lot so sdn kind of

00:02:40,940 --> 00:02:44,960
break it out into open flow solution so

00:02:42,920 --> 00:02:46,970
cumulus linux and cumulus networks we

00:02:44,960 --> 00:02:48,110
don't really believe in open flow for

00:02:46,970 --> 00:02:50,360
variety of reasons that doesn't mean

00:02:48,110 --> 00:02:53,000
it's not a good technology it doesn't

00:02:50,360 --> 00:02:55,370
mean that it won't be successful at all

00:02:53,000 --> 00:02:56,930
it's just something that we don't do so

00:02:55,370 --> 00:02:59,990
hopefully income to this talk hopefully

00:02:56,930 --> 00:03:02,930
to learn about open flow there's vendor

00:02:59,990 --> 00:03:04,010
specific solutions some of those are

00:03:02,930 --> 00:03:08,300
hidden to what they're actually doing

00:03:04,010 --> 00:03:13,040
under the hood I know ACI and contrails

00:03:08,300 --> 00:03:14,720
do use some VX land stuff what we are

00:03:13,040 --> 00:03:15,860
pitching at cumulus networks is called

00:03:14,720 --> 00:03:18,830
something called network virtualization

00:03:15,860 --> 00:03:23,480
which is kind of synonymous with sdn and

00:03:18,830 --> 00:03:26,840
this is something around bringing up and

00:03:23,480 --> 00:03:28,700
down VX land tunnels so VMware NSX I

00:03:26,840 --> 00:03:30,560
think the most interesting story you

00:03:28,700 --> 00:03:32,420
think about is nice Tara which was the

00:03:30,560 --> 00:03:34,940
startup company that became VMware NSX

00:03:32,420 --> 00:03:37,130
they actually invented open flow and

00:03:34,940 --> 00:03:39,530
they chose that it wasn't a scalable

00:03:37,130 --> 00:03:41,810
solution so they went into network

00:03:39,530 --> 00:03:44,570
virtualization so now they can build

00:03:41,810 --> 00:03:46,220
tunnels over an IP fabric and then they

00:03:44,570 --> 00:03:47,570
made a viable product and they got

00:03:46,220 --> 00:03:50,060
bought out and all those guys are

00:03:47,570 --> 00:03:52,370
probably rich now from what I what I've

00:03:50,060 --> 00:03:54,560
seen so what's cool about our product is

00:03:52,370 --> 00:03:57,110
we're just an OS Kimmel is like we don't

00:03:54,560 --> 00:03:59,780
sell hardware we don't sell these these

00:03:57,110 --> 00:04:03,590
overlays we're just a linux distribution

00:03:59,780 --> 00:04:05,870
just like red hat so makes it easy as we

00:04:03,590 --> 00:04:08,900
can use all these players we see that

00:04:05,870 --> 00:04:11,090
vmware nsx medicare's meadow net open

00:04:08,900 --> 00:04:13,700
control project nuage plum grade they

00:04:11,090 --> 00:04:15,770
can all run on our on our hardware they

00:04:13,700 --> 00:04:17,810
can also run on our competitors hardware

00:04:15,770 --> 00:04:19,400
to a lot of times but it keeps you from

00:04:17,810 --> 00:04:22,940
getting vendor lock-in or being stuck

00:04:19,400 --> 00:04:24,560
with a single vendor so I want to take

00:04:22,940 --> 00:04:26,460
this theory one step further and that's

00:04:24,560 --> 00:04:30,630
what this talks about is if you

00:04:26,460 --> 00:04:32,190
abstract away the network in two

00:04:30,630 --> 00:04:33,600
controllers because it seems like

00:04:32,190 --> 00:04:35,340
network virtualization is really cool

00:04:33,600 --> 00:04:37,680
with these these be excellent overlays

00:04:35,340 --> 00:04:40,110
is why not just take off the shelf

00:04:37,680 --> 00:04:41,160
DevOps tools that are available that

00:04:40,110 --> 00:04:43,110
most people in this room have played

00:04:41,160 --> 00:04:46,580
with before and use them to make

00:04:43,110 --> 00:04:49,080
automatable changes to what's going on

00:04:46,580 --> 00:04:51,599
so using something like ansible puppet

00:04:49,080 --> 00:04:54,210
chef salt I think the sky's the limit

00:04:51,599 --> 00:04:56,550
since since a lot of these tools will

00:04:54,210 --> 00:04:58,770
work on a wrister cisco but since we're

00:04:56,550 --> 00:05:00,780
linux OS they just work it just works

00:04:58,770 --> 00:05:02,699
very easily so we can kind of think of

00:05:00,780 --> 00:05:05,580
these scenarios right rapid provisioning

00:05:02,699 --> 00:05:07,590
um that one's pretty easy just like

00:05:05,580 --> 00:05:10,320
servers you use it for provisioning and

00:05:07,590 --> 00:05:11,430
bringing up the network hot swapping the

00:05:10,320 --> 00:05:13,860
switch they're getting a little bit more

00:05:11,430 --> 00:05:15,150
interesting is now that we sell

00:05:13,860 --> 00:05:18,509
commodity switches that are really

00:05:15,150 --> 00:05:20,030
inexpensive you can break up these large

00:05:18,509 --> 00:05:22,530
chasse ease that are super expensive

00:05:20,030 --> 00:05:24,479
because now that the network's very

00:05:22,530 --> 00:05:26,729
robust and these spine leave networks I

00:05:24,479 --> 00:05:29,520
can just pull out a spine switch put in

00:05:26,729 --> 00:05:31,650
a new one and provision one on demand so

00:05:29,520 --> 00:05:33,720
now we're actually having customers at

00:05:31,650 --> 00:05:35,610
our company that have hot spares the

00:05:33,720 --> 00:05:37,409
stuffs so inexpensive that they actually

00:05:35,610 --> 00:05:39,750
buy ten extra ones and we only charge

00:05:37,409 --> 00:05:41,580
for the licenses for the ones in active

00:05:39,750 --> 00:05:44,219
production so that they can actually

00:05:41,580 --> 00:05:45,360
just hot spot on demand and troubleshoot

00:05:44,219 --> 00:05:48,080
it offline they don't have to

00:05:45,360 --> 00:05:50,009
troubleshoot on their live network

00:05:48,080 --> 00:05:52,740
configuration management just makes

00:05:50,009 --> 00:05:54,780
sense bingo we get asked a lot in sales

00:05:52,740 --> 00:05:56,610
kind of calls where what's your config

00:05:54,780 --> 00:05:58,650
management plan and for us since it's

00:05:56,610 --> 00:06:00,870
linux we can just use get like you can

00:05:58,650 --> 00:06:03,180
literally have a git tree on the box I

00:06:00,870 --> 00:06:05,639
think I think it's actually installed by

00:06:03,180 --> 00:06:07,440
default on our box so you just get

00:06:05,639 --> 00:06:08,610
cloned the code in your configuration

00:06:07,440 --> 00:06:10,620
management it's either managed by

00:06:08,610 --> 00:06:13,289
ansible puppet or literally you can just

00:06:10,620 --> 00:06:16,020
have all your files and a git repo for

00:06:13,289 --> 00:06:18,030
what you care so obviously easy

00:06:16,020 --> 00:06:20,820
application deployment the same thing

00:06:18,030 --> 00:06:22,889
like we can install apps ganglia click

00:06:20,820 --> 00:06:26,849
the puppet agent right the same way as

00:06:22,889 --> 00:06:29,009
anyone can maintenance tasks nothing is

00:06:26,849 --> 00:06:30,659
interesting here right user

00:06:29,009 --> 00:06:32,099
administration you can do the same

00:06:30,659 --> 00:06:35,210
things you're doing on servers on

00:06:32,099 --> 00:06:37,620
switches and you should be able to but

00:06:35,210 --> 00:06:39,630
what if I told you you could do so much

00:06:37,620 --> 00:06:42,510
more so this is saying

00:06:39,630 --> 00:06:47,280
I don't think we bring it back to what

00:06:42,510 --> 00:06:48,900
Sdn means to me sdn means is like smart

00:06:47,280 --> 00:06:51,810
programmatic changes to the network

00:06:48,900 --> 00:06:53,580
based on criteria that you choose so to

00:06:51,810 --> 00:06:55,440
me being a QA engineer in the past

00:06:53,580 --> 00:06:57,360
getting like really loving automation

00:06:55,440 --> 00:06:59,540
anything I do more than twice I should

00:06:57,360 --> 00:07:01,860
be automating and the networks no

00:06:59,540 --> 00:07:03,420
exception to that if people in the

00:07:01,860 --> 00:07:04,950
network team aren't doing it they're

00:07:03,420 --> 00:07:06,780
just creating work for themselves I

00:07:04,950 --> 00:07:09,270
don't want to get up at midnight to go

00:07:06,780 --> 00:07:11,880
ad a VLAN or restart a box it just

00:07:09,270 --> 00:07:13,620
sounds silly especially when you have so

00:07:11,880 --> 00:07:15,210
many switches you should have enough

00:07:13,620 --> 00:07:17,010
bail over that you can look at it in the

00:07:15,210 --> 00:07:19,050
morning so let's look at some of these

00:07:17,010 --> 00:07:22,470
kind of scenarios that are outside the

00:07:19,050 --> 00:07:24,030
normal DevOps type environment for just

00:07:22,470 --> 00:07:26,280
provisioning and bringing stuff up and

00:07:24,030 --> 00:07:28,020
down because what is different about a

00:07:26,280 --> 00:07:30,120
network switch than a server is it's

00:07:28,020 --> 00:07:33,000
more important because if it goes down

00:07:30,120 --> 00:07:34,500
it brings down the whole rack so you

00:07:33,000 --> 00:07:37,170
have to be really smart about how these

00:07:34,500 --> 00:07:38,850
changes do you so reactive network

00:07:37,170 --> 00:07:41,730
changes and this is what I think I'm

00:07:38,850 --> 00:07:44,640
gonna do my am doing my demo on so bad

00:07:41,730 --> 00:07:47,150
fan high temperature would something

00:07:44,640 --> 00:07:49,860
happens to that switch you can

00:07:47,150 --> 00:07:52,260
predictably know when it fails looking

00:07:49,860 --> 00:07:55,350
at slogs and then make a change to that

00:07:52,260 --> 00:07:59,220
box so we could prepend BG pas we could

00:07:55,350 --> 00:08:01,530
increase ospf costs we can take links

00:07:59,220 --> 00:08:03,690
down manually with scripts using ansible

00:08:01,530 --> 00:08:06,180
or salt just pushing or puppets and

00:08:03,690 --> 00:08:08,160
collective or chef knife right it's very

00:08:06,180 --> 00:08:12,360
easy to make decisions based on on

00:08:08,160 --> 00:08:14,460
logging events hitless upgrades so I

00:08:12,360 --> 00:08:17,040
want to upgrade my racks a lot of times

00:08:14,460 --> 00:08:19,380
I have dual redundancy so I can have it

00:08:17,040 --> 00:08:21,870
prefer a route one direction and then

00:08:19,380 --> 00:08:24,840
bring that box down upgrade it and then

00:08:21,870 --> 00:08:27,060
switch sides this is like six lines

00:08:24,840 --> 00:08:30,090
ansible code to do something like that

00:08:27,060 --> 00:08:31,260
it's very very simple and you can do

00:08:30,090 --> 00:08:33,300
that I mean you could do this probably

00:08:31,260 --> 00:08:35,160
with a cisco box today if you don't want

00:08:33,300 --> 00:08:37,289
to do cumulus like just using these

00:08:35,160 --> 00:08:40,979
off-the-shelf tools to kind of create a

00:08:37,289 --> 00:08:43,530
programmatic network automatic threat

00:08:40,979 --> 00:08:45,900
response so a lot of times your network

00:08:43,530 --> 00:08:48,480
goes down and it's like two days later

00:08:45,900 --> 00:08:50,610
that you figured out what happened it's

00:08:48,480 --> 00:08:52,740
not a very smart way to troubleshoot so

00:08:50,610 --> 00:08:53,580
you can watch counters you can use the

00:08:52,740 --> 00:08:55,670
monitoring tools

00:08:53,580 --> 00:08:59,340
out there and you can have like a

00:08:55,670 --> 00:09:02,730
short-term kind of way to respond so you

00:08:59,340 --> 00:09:04,350
can kind of dive into each of these and

00:09:02,730 --> 00:09:05,910
these are just these are just three that

00:09:04,350 --> 00:09:08,880
I came up with in the last few months

00:09:05,910 --> 00:09:11,310
I'm sure the sky's the limit we're kind

00:09:08,880 --> 00:09:15,900
of calling this net DevOps I think

00:09:11,310 --> 00:09:18,630
Andres was using our business guy to

00:09:15,900 --> 00:09:20,760
target this so the idea is kind of

00:09:18,630 --> 00:09:26,790
DevOps for network engineers or network

00:09:20,760 --> 00:09:28,380
so outside of just the servers so this

00:09:26,790 --> 00:09:32,700
creates the actual network to be self

00:09:28,380 --> 00:09:34,680
healing at this point since a lot of

00:09:32,700 --> 00:09:36,930
these these commodity boxes we can

00:09:34,680 --> 00:09:39,660
actually provision them you just plug it

00:09:36,930 --> 00:09:41,130
in it's going to pull an image so you

00:09:39,660 --> 00:09:42,990
can choose cumulus Linux and it just

00:09:41,130 --> 00:09:45,750
boots an image and then it's going to

00:09:42,990 --> 00:09:47,460
grab its config so this can be

00:09:45,750 --> 00:09:48,480
completely self-healing you know you

00:09:47,460 --> 00:09:51,810
don't have to have a network engineer

00:09:48,480 --> 00:09:53,070
fly to a DC across the country you can

00:09:51,810 --> 00:09:55,440
just have someone plug it in it's

00:09:53,070 --> 00:09:58,290
completely automatic the hitless

00:09:55,440 --> 00:10:02,190
upgrades something here that's really

00:09:58,290 --> 00:10:03,780
cool is having someone do text messages

00:10:02,190 --> 00:10:06,560
alerting what's cool about all these

00:10:03,780 --> 00:10:10,320
DevOps tools is they have built in

00:10:06,560 --> 00:10:11,940
monitor or messaging apps so I can

00:10:10,320 --> 00:10:14,010
actually have this thing message me in

00:10:11,940 --> 00:10:16,890
slack send me an email send me a text

00:10:14,010 --> 00:10:18,240
message I think there was five other

00:10:16,890 --> 00:10:20,490
tools I didn't even know what they were

00:10:18,240 --> 00:10:24,960
there already built in ansible and

00:10:20,490 --> 00:10:26,940
puppet automatic right response this

00:10:24,960 --> 00:10:28,590
would just be making iptables rules so

00:10:26,940 --> 00:10:31,830
in cumulus linux we just use IP tables

00:10:28,590 --> 00:10:33,900
and cisco would be a CLS i'm sure it's

00:10:31,830 --> 00:10:40,020
similar in juniper stuff which i haven't

00:10:33,900 --> 00:10:44,550
touched as much let's go into a demo

00:10:40,020 --> 00:10:46,920
time so what I did is we actually have a

00:10:44,550 --> 00:10:49,080
free product called cumulus VX which is

00:10:46,920 --> 00:10:50,910
a vm of our products anyone can download

00:10:49,080 --> 00:10:52,740
here there's no strings attached you

00:10:50,910 --> 00:10:55,350
might get a marketing email at some

00:10:52,740 --> 00:10:58,080
point so we can do is I can actually

00:10:55,350 --> 00:10:59,700
take this network now and since it's a

00:10:58,080 --> 00:11:01,890
linux distribution i can build up this

00:10:59,700 --> 00:11:04,910
entire network so here's a leaf spine

00:11:01,890 --> 00:11:07,310
network that kind of alluded to earlier

00:11:04,910 --> 00:11:11,710
so instead of using chassis

00:11:07,310 --> 00:11:14,060
our large huge God boxes as we call them

00:11:11,710 --> 00:11:16,850
we can just split it out into lots of

00:11:14,060 --> 00:11:19,150
spines so in this particular example you

00:11:16,850 --> 00:11:21,680
can actually if I lose one spine I lose

00:11:19,150 --> 00:11:25,250
one-fourth of my throughput not one half

00:11:21,680 --> 00:11:28,640
or or who knows how much like a hundred

00:11:25,250 --> 00:11:29,860
percent in some cases so this is all

00:11:28,640 --> 00:11:33,290
actually running in Google compute

00:11:29,860 --> 00:11:37,089
through a tool called ravioli or rabba

00:11:33,290 --> 00:11:37,089
ravello I think we can nick name

00:11:44,070 --> 00:11:54,060
I shall show you really only is it Mary

00:11:47,700 --> 00:11:56,160
good so Rebello's just a tool that our

00:11:54,060 --> 00:11:58,350
guy who builds their work benches using

00:11:56,160 --> 00:12:00,390
sigh this is my first time using it it

00:11:58,350 --> 00:12:02,910
just spins up VMs and then lets you tie

00:12:00,390 --> 00:12:04,860
them together eventually we're going to

00:12:02,910 --> 00:12:07,020
have a way to go from ravello to vagrant

00:12:04,860 --> 00:12:08,640
and vagrant back to Ravello so people

00:12:07,020 --> 00:12:10,650
can take virtual networks and build them

00:12:08,640 --> 00:12:12,570
up and if they're building up huge data

00:12:10,650 --> 00:12:14,070
centers to mimic their actual data

00:12:12,570 --> 00:12:16,290
center they can now do continuous

00:12:14,070 --> 00:12:17,670
integration delivery on the virtual

00:12:16,290 --> 00:12:20,270
network before they make changes to

00:12:17,670 --> 00:12:23,280
their live network so Ravel is one tool

00:12:20,270 --> 00:12:25,440
we're just a customer of theirs we're

00:12:23,280 --> 00:12:27,390
just trying it out in our work bench so

00:12:25,440 --> 00:12:29,700
basically all these VMs just sit in here

00:12:27,390 --> 00:12:31,350
and then I can click one so workbench vm

00:12:29,700 --> 00:12:33,990
is just the one I'm running ansible

00:12:31,350 --> 00:12:35,520
stuff from so I just SSH to that

00:12:33,990 --> 00:12:40,490
particular one i'm going to show you

00:12:35,520 --> 00:12:40,490
it's not anything fancy

00:12:52,230 --> 00:12:57,840
so now I'm going to go into net develops

00:12:55,140 --> 00:13:03,210
so all these codes on github by the way

00:12:57,840 --> 00:13:06,630
if anyone's interested and we'll make

00:13:03,210 --> 00:13:11,250
sure everything's up because I recorded

00:13:06,630 --> 00:13:13,410
it in case this does not work so

00:13:11,250 --> 00:13:17,460
everything's up I just reset it last

00:13:13,410 --> 00:13:19,890
night so most people this used to be

00:13:17,460 --> 00:13:22,200
amazing if I show them if I can just of

00:13:19,890 --> 00:13:25,290
course it will cross my fingers before I

00:13:22,200 --> 00:13:27,690
say something like that so you'll see

00:13:25,290 --> 00:13:30,030
that I can actually run ansible on all

00:13:27,690 --> 00:13:33,630
these switches simultaneously so what's

00:13:30,030 --> 00:13:35,430
happening here is on there's ten

00:13:33,630 --> 00:13:37,140
switches so ten switches are

00:13:35,430 --> 00:13:39,240
simultaneously being configured there

00:13:37,140 --> 00:13:41,040
from the factory installed it's ansible

00:13:39,240 --> 00:13:43,050
playbooks configuring ospf between them

00:13:41,040 --> 00:13:46,130
which is a routing protocol someone said

00:13:43,050 --> 00:13:48,450
using the quagga routing application

00:13:46,130 --> 00:13:50,610
it's configuring the message of the day

00:13:48,450 --> 00:13:51,780
it's configuring that IP addressing

00:13:50,610 --> 00:13:54,570
scheme I'm actually using something

00:13:51,780 --> 00:13:56,700
called ospf on numbered where we can

00:13:54,570 --> 00:13:58,320
just burn one IP address per box so it

00:13:56,700 --> 00:14:01,770
makes IP address management really

00:13:58,320 --> 00:14:04,230
really simple to do you'll actually see

00:14:01,770 --> 00:14:05,460
what it actually configured as you see

00:14:04,230 --> 00:14:08,930
it come in now it's restarting the

00:14:05,460 --> 00:14:16,740
daemon for quagga it's restarting the

00:14:08,930 --> 00:14:18,480
networking it's almost done it's usually

00:14:16,740 --> 00:14:20,930
the last step so what it's actually done

00:14:18,480 --> 00:14:20,930
here

00:14:25,400 --> 00:14:29,490
because it's configured that so I mean

00:14:27,780 --> 00:14:30,930
my IP addressing super simple for those

00:14:29,490 --> 00:14:36,090
who aren't used to IP addressing at

00:14:30,930 --> 00:14:39,570
scale so just 1 2 3 4 5 6 7 8 9 10 11 12

00:14:36,090 --> 00:14:43,140
and 11 and 12 are you bunt to house just

00:14:39,570 --> 00:14:44,820
running 1202 and you'll see this is this

00:14:43,140 --> 00:14:47,190
is typical for those not familiar with

00:14:44,820 --> 00:14:49,980
data center designs just leave spine so

00:14:47,190 --> 00:14:51,690
if you hear the word CL CL OS cloths or

00:14:49,980 --> 00:14:53,490
leaf spine just use those

00:14:51,690 --> 00:14:56,160
interchangeably it is not something

00:14:53,490 --> 00:14:57,420
unique to cumulus networks like lots of

00:14:56,160 --> 00:14:59,610
people are doing this and even within

00:14:57,420 --> 00:15:01,380
the chassis systems a lot of times it's

00:14:59,610 --> 00:15:06,240
basically a leaf spine it's just in one

00:15:01,380 --> 00:15:07,530
proprietary chassis which has I mean

00:15:06,240 --> 00:15:11,130
there's advantages of chasse ease in

00:15:07,530 --> 00:15:15,690
certain situations so what we can do now

00:15:11,130 --> 00:15:22,650
is hopefully we'll test paying now so I

00:15:15,690 --> 00:15:24,720
can one so now I'm on leaf one you'll

00:15:22,650 --> 00:15:27,150
see this is an actual cumulus bx or

00:15:24,720 --> 00:15:29,940
virtual vm it's very similar to our

00:15:27,150 --> 00:15:31,560
actual product i do IP links show you'll

00:15:29,940 --> 00:15:34,350
see it comes up with a bunch of ports a

00:15:31,560 --> 00:15:36,180
real product would have as many ports as

00:15:34,350 --> 00:15:37,740
that particular piece of hardware has so

00:15:36,180 --> 00:15:41,250
we can run up we can run on HP and dell

00:15:37,740 --> 00:15:44,580
switches so we'd have 48 10 gig ports

00:15:41,250 --> 00:15:46,920
and 4 x 40 gig up links this one only

00:15:44,580 --> 00:15:49,170
uses the ports that I need so it I only

00:15:46,920 --> 00:15:51,120
needed five because it's a vm so it just

00:15:49,170 --> 00:15:54,780
made five plus seats arrow in the loop

00:15:51,120 --> 00:15:56,070
back and now it makes pinging really

00:15:54,780 --> 00:15:59,580
easy cuz I don't have to remember the IP

00:15:56,070 --> 00:16:01,650
addresses is now getting across I'm

00:15:59,580 --> 00:16:06,030
actually paying host to because I I know

00:16:01,650 --> 00:16:10,560
what I'm doing for a demo and I recorded

00:16:06,030 --> 00:16:13,800
it in case it doesn't oh so what happens

00:16:10,560 --> 00:16:16,620
when I have a bad fan so with our tool

00:16:13,800 --> 00:16:18,120
we actually have I'm sure every every

00:16:16,620 --> 00:16:20,310
network vendor out there has ways of

00:16:18,120 --> 00:16:24,090
reporting like SNMP so we can we can do

00:16:20,310 --> 00:16:25,650
SNMP to this part I didn't demo out

00:16:24,090 --> 00:16:27,420
because there's so many ways i'm not

00:16:25,650 --> 00:16:29,040
sure what people are going to prefer

00:16:27,420 --> 00:16:32,190
like I could have the periodic playbook

00:16:29,040 --> 00:16:35,460
grab JSON files just to check like once

00:16:32,190 --> 00:16:36,570
an hour I could have rsyslog remote

00:16:35,460 --> 00:16:38,790
syslog and then grab

00:16:36,570 --> 00:16:40,080
that every minute I could have I mean

00:16:38,790 --> 00:16:42,120
there's a hundred ways to actually grab

00:16:40,080 --> 00:16:44,250
the errors I could have it application

00:16:42,120 --> 00:16:45,900
Damon running on each switch

00:16:44,250 --> 00:16:49,230
individually and then report it

00:16:45,900 --> 00:16:50,940
somewhere I thought about three or four

00:16:49,230 --> 00:16:52,350
ways I'm just like it's not even that

00:16:50,940 --> 00:16:54,120
important not sure someone will come up

00:16:52,350 --> 00:16:56,340
with their own system for it so I'm just

00:16:54,120 --> 00:17:00,120
going to assume in this place because

00:16:56,340 --> 00:17:03,000
this this VM doesn't have fans and it

00:17:00,120 --> 00:17:04,320
doesn't have a temperature sensors and

00:17:03,000 --> 00:17:05,940
stuff like a real switch would because

00:17:04,320 --> 00:17:08,250
it's completely virtual is we're just

00:17:05,940 --> 00:17:11,459
going to assume that it broke so what

00:17:08,250 --> 00:17:14,160
can i do what i can do is um once i know

00:17:11,459 --> 00:17:16,800
it it goes off is I would kick off an

00:17:14,160 --> 00:17:20,670
ansible book ansible playbook so in this

00:17:16,800 --> 00:17:23,670
case I'm just doing it manually but

00:17:20,670 --> 00:17:27,240
again you could just have this Auto go

00:17:23,670 --> 00:17:30,120
off so what this is actually doing is

00:17:27,240 --> 00:17:32,040
it's going to go into spine too and it's

00:17:30,120 --> 00:17:34,200
going to actually grab the configuration

00:17:32,040 --> 00:17:35,580
file from the previous playbook and it's

00:17:34,200 --> 00:17:37,580
going to say hey this which had a

00:17:35,580 --> 00:17:39,600
problem we're bringing it offline now

00:17:37,580 --> 00:17:41,670
gracefully so what it's actually doing

00:17:39,600 --> 00:17:43,830
in this particular demo the you guys can

00:17:41,670 --> 00:17:46,380
download is it's actually increasing the

00:17:43,830 --> 00:17:48,960
ospf cost which makes it not equal load

00:17:46,380 --> 00:17:51,300
balanced anymore so now it's taken out

00:17:48,960 --> 00:17:53,760
of routing so next question would be is

00:17:51,300 --> 00:17:55,650
like how do we actually check that how

00:17:53,760 --> 00:17:57,120
do we make sure that works so we've

00:17:55,650 --> 00:17:58,890
actually written module that I'm not

00:17:57,120 --> 00:18:03,020
like it's already upstream danceable it

00:17:58,890 --> 00:18:05,490
should be part of ansible core I'm soon

00:18:03,020 --> 00:18:06,990
hopefully this will work if this all

00:18:05,490 --> 00:18:10,850
works will be one of the first demos

00:18:06,990 --> 00:18:10,850
that everything works on the first try

00:18:11,510 --> 00:18:14,510
check

00:18:14,790 --> 00:18:19,870
so what this does is I'm actually going

00:18:17,559 --> 00:18:22,240
to check the routing from every single

00:18:19,870 --> 00:18:25,240
device from every single route I know

00:18:22,240 --> 00:18:28,450
about and then see if that routes no

00:18:25,240 --> 00:18:32,320
longer part of it because now I know by

00:18:28,450 --> 00:18:34,900
checking that route that that 44 44 is

00:18:32,320 --> 00:18:36,460
not being used anymore so it's basically

00:18:34,900 --> 00:18:38,650
if we actually look at that playbook

00:18:36,460 --> 00:18:39,700
it's actually under I don't how many

00:18:38,650 --> 00:18:42,070
people have messed with an instable in

00:18:39,700 --> 00:18:44,470
the room a bit half there's more than

00:18:42,070 --> 00:18:45,760
half sins so it's instable is fairly

00:18:44,470 --> 00:18:52,840
easily especially for people that no

00:18:45,760 --> 00:18:54,520
other develops tools check her out so

00:18:52,840 --> 00:18:58,600
this playbook that's it that's the whole

00:18:54,520 --> 00:19:03,070
playbook you'll actually see since it

00:18:58,600 --> 00:19:04,870
just ran here that actually just got an

00:19:03,070 --> 00:19:06,220
email telling me so you have an email

00:19:04,870 --> 00:19:07,510
telling me I could have a text message

00:19:06,220 --> 00:19:08,710
telling me I could have paid your duty

00:19:07,510 --> 00:19:10,750
tell me all these are plugged into

00:19:08,710 --> 00:19:12,580
ansible puppet and shaft they all have

00:19:10,750 --> 00:19:14,290
these kind of tools there's tons of

00:19:12,580 --> 00:19:15,610
startups and established companies

00:19:14,290 --> 00:19:18,070
building these kind of reporting tools

00:19:15,610 --> 00:19:20,620
so now I could be at home with my wife

00:19:18,070 --> 00:19:22,630
eating dinner and I get a report and it

00:19:20,620 --> 00:19:23,860
goes hey this went down I give it a

00:19:22,630 --> 00:19:26,940
minute and then sends me another email

00:19:23,860 --> 00:19:30,010
it goes hey we took care of it for you

00:19:26,940 --> 00:19:32,530
and that that's exactly what I think sdn

00:19:30,010 --> 00:19:34,570
should be in a lot of cases stn

00:19:32,530 --> 00:19:38,640
shouldn't be just like pigeon holed into

00:19:34,570 --> 00:19:43,750
one particular moment so in this case

00:19:38,640 --> 00:19:45,570
let's see what kind of visualize that

00:19:43,750 --> 00:19:51,429
now for people that aren't as networking

00:19:45,570 --> 00:19:54,040
savvy is we remove this so we have four

00:19:51,429 --> 00:19:56,440
ways it's called ecmp for way because I

00:19:54,040 --> 00:19:58,179
have four spine switches we actually

00:19:56,440 --> 00:20:01,000
have customers like three or four now

00:19:58,179 --> 00:20:02,980
doing 16-way ecmp these are for like

00:20:01,000 --> 00:20:04,660
large data centers so when they lose one

00:20:02,980 --> 00:20:05,800
spine switch it goes offline power

00:20:04,660 --> 00:20:07,890
failure something they only lose one

00:20:05,800 --> 00:20:10,240
sixteenth of their data center bandwidth

00:20:07,890 --> 00:20:13,179
it's a huge amount of bandwidth that's

00:20:10,240 --> 00:20:14,950
not for every customer this is I mean

00:20:13,179 --> 00:20:16,780
obviously you would have with four

00:20:14,950 --> 00:20:21,010
leaves I could actually support like 32

00:20:16,780 --> 00:20:24,280
Leafs so like 32 rack's easily with no

00:20:21,010 --> 00:20:27,429
problem whatsoever with probably this

00:20:24,280 --> 00:20:28,690
would be three it would be three two one

00:20:27,429 --> 00:20:31,570
three two one over subscribe

00:20:28,690 --> 00:20:34,290
for really cheap none of these switches

00:20:31,570 --> 00:20:37,840
are more than 10 grand they're all less

00:20:34,290 --> 00:20:40,570
so what we did is I 444 is the one I

00:20:37,840 --> 00:20:42,370
want to take offline so playbook all it

00:20:40,570 --> 00:20:45,730
did and all the codes available it's

00:20:42,370 --> 00:20:47,620
fairly simple after confirmation spine

00:20:45,730 --> 00:20:50,710
too has a bad fan we use something like

00:20:47,620 --> 00:20:54,760
SAS Mon CTL which is posed it can do

00:20:50,710 --> 00:20:57,670
JSON or human readable text using a

00:20:54,760 --> 00:20:59,500
command CL ospf interface set swap to

00:20:57,670 --> 00:21:02,620
the max that's the max value that ospf

00:20:59,500 --> 00:21:04,420
has according to the RFC and then I want

00:21:02,620 --> 00:21:06,340
to check it it's something I don't think

00:21:04,420 --> 00:21:08,110
DevOps tools are actually used for is

00:21:06,340 --> 00:21:10,540
they can actually check state especially

00:21:08,110 --> 00:21:12,190
with these these push based ones and all

00:21:10,540 --> 00:21:15,160
the major tools have pushed based ways

00:21:12,190 --> 00:21:17,200
to check in this case um seal prefix

00:21:15,160 --> 00:21:18,580
check it's just it's literally going in

00:21:17,200 --> 00:21:21,010
there it's doing IP route on that

00:21:18,580 --> 00:21:22,810
specific route and then it checks to see

00:21:21,010 --> 00:21:24,730
if that device is no longer there

00:21:22,810 --> 00:21:26,410
because it's not enough just to make the

00:21:24,730 --> 00:21:28,570
change you want to check state to make

00:21:26,410 --> 00:21:29,650
sure that's no longer being used if I

00:21:28,570 --> 00:21:31,690
actually wanted to take this further

00:21:29,650 --> 00:21:34,030
what I would probably do is also run

00:21:31,690 --> 00:21:35,740
another play book with a timeout looking

00:21:34,030 --> 00:21:38,170
at the counters to make sure data was

00:21:35,740 --> 00:21:40,450
off that switch it just depends on on

00:21:38,170 --> 00:21:43,030
how detailed you want to go down that

00:21:40,450 --> 00:21:44,890
rabbit hole to make it kind of graceful

00:21:43,030 --> 00:21:46,000
so you're gracefully taking it out so

00:21:44,890 --> 00:21:47,380
when you unplug it you know you're not

00:21:46,000 --> 00:21:50,350
bringing down any sessions to your

00:21:47,380 --> 00:21:53,350
servers and then alerting I think it's

00:21:50,350 --> 00:21:56,020
huge I think a lot of SNMP applications

00:21:53,350 --> 00:21:58,780
are completely manual the alerting like

00:21:56,020 --> 00:22:01,690
I did I added the alerting Friday night

00:21:58,780 --> 00:22:05,080
in an hour and I had not done the email

00:22:01,690 --> 00:22:07,120
alert on on an ansible before never

00:22:05,080 --> 00:22:08,650
touched it I was using a phone thing but

00:22:07,120 --> 00:22:10,690
I switched phone plans i usually have it

00:22:08,650 --> 00:22:12,280
text me but it stopped working because i

00:22:10,690 --> 00:22:13,420
switched from verizon and t-mobile and

00:22:12,280 --> 00:22:16,270
it stopped working so i just picked

00:22:13,420 --> 00:22:18,340
another app but i think i think there

00:22:16,270 --> 00:22:19,900
was like five or 10 in there so

00:22:18,340 --> 00:22:21,790
basically it's just gotten rid of this

00:22:19,900 --> 00:22:23,890
device so i'm actually still getting a

00:22:21,790 --> 00:22:25,780
fairly good oversubscription ratio and

00:22:23,890 --> 00:22:27,580
then because provisioning normal DevOps

00:22:25,780 --> 00:22:31,000
I can just plug in another switch and

00:22:27,580 --> 00:22:32,470
it's back online and probably I mean you

00:22:31,000 --> 00:22:34,780
saw it provision the first time they

00:22:32,470 --> 00:22:36,400
probably take about three minutes and

00:22:34,780 --> 00:22:38,590
then it's completely configured again

00:22:36,400 --> 00:22:39,879
because then your DevOps tool becomes

00:22:38,590 --> 00:22:44,529
your configuration manager

00:22:39,879 --> 00:22:46,389
at that point let's see what else then

00:22:44,529 --> 00:22:51,779
you see I had the email email let you

00:22:46,389 --> 00:22:54,969
know so it's on my github is sean x 8 20

00:22:51,779 --> 00:22:56,559
um nette DevOps is what I called it I

00:22:54,969 --> 00:22:58,479
don't know probably a better name for

00:22:56,559 --> 00:23:00,519
this kind of stuff I'm gonna try to get

00:22:58,479 --> 00:23:03,609
all these examples on our website so

00:23:00,519 --> 00:23:08,259
it's really cool is that you guys can do

00:23:03,609 --> 00:23:10,269
this too so with cumulus DX which is

00:23:08,259 --> 00:23:12,699
something I thought really hard for to

00:23:10,269 --> 00:23:14,709
get out this makes this kind of a

00:23:12,699 --> 00:23:17,559
no-brainer for a lot of IT organizations

00:23:14,709 --> 00:23:19,659
so if your guys IT organizations doesn't

00:23:17,559 --> 00:23:21,819
have money to look at this yet you it's

00:23:19,659 --> 00:23:25,989
this it's free so you can go download

00:23:21,819 --> 00:23:29,789
this today and kind of play with it so I

00:23:25,989 --> 00:23:32,049
hinted at CI and CD that might be

00:23:29,789 --> 00:23:33,940
unfamiliar in a network engineer so this

00:23:32,049 --> 00:23:36,190
idea of continually testing what the

00:23:33,940 --> 00:23:38,049
changes you are making to to your gear

00:23:36,190 --> 00:23:39,969
this is kind of a no-brainer for people

00:23:38,049 --> 00:23:41,919
that do DevOps but it's it's not so

00:23:39,969 --> 00:23:44,949
clear to people who manage routing

00:23:41,919 --> 00:23:47,079
protocols or manage spanning tree or VX

00:23:44,949 --> 00:23:49,319
land like it's just a different kind of

00:23:47,079 --> 00:23:51,849
market and they have a skill set that is

00:23:49,319 --> 00:23:54,069
important my background was a lot of

00:23:51,849 --> 00:23:57,369
that but it just makes sense to actually

00:23:54,069 --> 00:24:02,049
automate everything automate all the

00:23:57,369 --> 00:24:04,119
things so that's free I think I think

00:24:02,049 --> 00:24:06,039
again I said it's just Edmond it might

00:24:04,119 --> 00:24:08,919
make you register if you have vagrant

00:24:06,039 --> 00:24:12,609
it'll just download it regardless so

00:24:08,919 --> 00:24:14,919
vagrant gns3 k vm virtualbox BM wear

00:24:12,609 --> 00:24:18,819
whatever your favorite virtualization is

00:24:14,919 --> 00:24:21,569
it's going to look just like debian

00:24:18,819 --> 00:24:24,129
linux where debian linux based distro

00:24:21,569 --> 00:24:26,109
but again some of these some of these

00:24:24,129 --> 00:24:28,179
tools like they're part of ansible so if

00:24:26,109 --> 00:24:30,389
you're never looking at cumulus like you

00:24:28,179 --> 00:24:32,259
can run the same idea on a cisco box

00:24:30,389 --> 00:24:35,440
depending i just don't know which ones

00:24:32,259 --> 00:24:37,569
support what ansible it's part of the

00:24:35,440 --> 00:24:43,329
reason i came to to work at a linux

00:24:37,569 --> 00:24:44,679
company so what is open so so so qua

00:24:43,329 --> 00:24:46,749
goes open source anyone have any

00:24:44,679 --> 00:24:50,960
questions I can do handouts for the last

00:24:46,749 --> 00:24:53,020
two turtles or I can quiz people

00:24:50,960 --> 00:24:53,020
you

00:24:57,650 --> 00:24:59,710
you

00:25:03,380 --> 00:25:10,130
yeah so with these kind of topologies

00:25:06,660 --> 00:25:12,210
what's really cool is cisco won't

00:25:10,130 --> 00:25:15,980
hopefully a night there's not cisco

00:25:12,210 --> 00:25:15,980
people in here but some of them agree

00:25:16,250 --> 00:25:23,640
yeah so so this topology cisco could

00:25:20,880 --> 00:25:27,500
sell you today and the reason they won't

00:25:23,640 --> 00:25:27,500
is because they make less money doing it

00:25:27,620 --> 00:25:31,770
actually like i worked as a consultants

00:25:30,150 --> 00:25:34,500
I didn't really care about the sales but

00:25:31,770 --> 00:25:40,530
I'm gonna sell a giant 1 million dollar

00:25:34,500 --> 00:25:41,760
chassis arm sl1 are you switch which one

00:25:40,530 --> 00:25:43,950
I'm going to get commission off that's

00:25:41,760 --> 00:25:45,510
better right so it's actually something

00:25:43,950 --> 00:25:47,910
I do a lot of the sales partner training

00:25:45,510 --> 00:25:49,710
and like it's not even worth training a

00:25:47,910 --> 00:25:53,090
partner who can sell cisco because he's

00:25:49,710 --> 00:25:53,090
in a Cell Cisco just to make more money

00:25:54,680 --> 00:26:01,280
yeah yeah that's what though that's what

00:26:05,670 --> 00:26:17,800
yes so these and you can give that guy a

00:26:10,750 --> 00:26:20,710
turtle so so even so one actually I can

00:26:17,800 --> 00:26:26,680
that's nice as I have all the I have all

00:26:20,710 --> 00:26:30,070
the slides yeah we're we have to explain

00:26:26,680 --> 00:26:31,690
that we're not a plushie selling people

00:26:30,070 --> 00:26:35,670
asking what do you guys do and I'm like

00:26:31,690 --> 00:26:35,670
we sell plushie and plushie accessories

00:26:36,510 --> 00:26:45,010
so what I'll step back we we run on

00:26:40,900 --> 00:26:46,090
Facebook six-pack we can run they don't

00:26:45,010 --> 00:26:47,230
I don't think they have that in

00:26:46,090 --> 00:26:49,120
production that's a chassis that

00:26:47,230 --> 00:26:52,510
Facebook did with the bare metal chassis

00:26:49,120 --> 00:26:54,010
or chassis if you ever google about it

00:26:52,510 --> 00:26:56,710
you can find chemos links running on it

00:26:54,010 --> 00:26:58,270
too no one's asked us for that if

00:26:56,710 --> 00:27:00,430
someone said i want to buy 10 of those

00:26:58,270 --> 00:27:03,160
we'd probably make it work and sell you

00:27:00,430 --> 00:27:04,630
10 of those and why why is the answer

00:27:03,160 --> 00:27:05,680
for that so I don't know I think there's

00:27:04,630 --> 00:27:09,280
going to be at some point there will be

00:27:05,680 --> 00:27:11,500
a linux chassis or something but this is

00:27:09,280 --> 00:27:14,620
this is kind of what we think is like

00:27:11,500 --> 00:27:17,860
when you look at a chassis it's it's to

00:27:14,620 --> 00:27:20,770
supervisor modules six lines 288 hosts

00:27:17,860 --> 00:27:22,960
it has fate sharing power power failures

00:27:20,770 --> 00:27:24,820
supervisor failure fabric failure so as

00:27:22,960 --> 00:27:27,490
like a cisco sales guy our consultant in

00:27:24,820 --> 00:27:29,080
the field i had to memorize what's the

00:27:27,490 --> 00:27:30,520
failure time if i pull the supervisor

00:27:29,080 --> 00:27:32,800
for the next one to go on and it's

00:27:30,520 --> 00:27:34,810
different every single year for every

00:27:32,800 --> 00:27:36,520
single type of supervisor there's ten

00:27:34,810 --> 00:27:39,610
supervisors that work for this chassis

00:27:36,520 --> 00:27:41,920
like it's almost like a like this

00:27:39,610 --> 00:27:44,350
modular proprietary vendor lock-in game

00:27:41,920 --> 00:27:47,020
of what works on what to and what power

00:27:44,350 --> 00:27:50,350
module works on this a newest cisco

00:27:47,020 --> 00:27:54,970
stuff actually has like a special blade

00:27:50,350 --> 00:27:56,260
just to control the power on it so not

00:27:54,970 --> 00:27:58,090
that i don't think i think there's

00:27:56,260 --> 00:28:00,820
certain cases where chasity's make sense

00:27:58,090 --> 00:28:02,170
and dense campus environments for like a

00:28:00,820 --> 00:28:05,170
closet or something where you're getting

00:28:02,170 --> 00:28:06,640
a lot of ports there so what I think's

00:28:05,170 --> 00:28:07,930
happened in data centers and this is

00:28:06,640 --> 00:28:10,210
what Google is doing this is what

00:28:07,930 --> 00:28:12,850
Facebook's doing is a chassis became

00:28:10,210 --> 00:28:14,740
unimportant because these commodity

00:28:12,850 --> 00:28:18,460
switches are all line right so if i have

00:28:14,740 --> 00:28:22,560
a 32 x 40 giggle switch

00:28:18,460 --> 00:28:24,550
it's literally 1280 gig back playing

00:28:22,560 --> 00:28:27,760
like I'm not going to lose any traffic

00:28:24,550 --> 00:28:30,310
it can actually do 104 ports breakout

00:28:27,760 --> 00:28:33,520
that's 60 it's not if I was doing

00:28:30,310 --> 00:28:40,420
non-blocking like as much bandwidth

00:28:33,520 --> 00:28:42,490
going up should be 16 x 40 so 640 gigs

00:28:40,420 --> 00:28:46,180
for about eight thousand dollars

00:28:42,490 --> 00:28:47,710
non-blocking 64 hosts so when you look

00:28:46,180 --> 00:28:51,700
at a chassis like this I think the

00:28:47,710 --> 00:28:53,470
reason we haven't done a chassis yeah we

00:28:51,700 --> 00:28:55,210
actually worked on at one point is that

00:28:53,470 --> 00:28:57,250
no one wants it because all these modern

00:28:55,210 --> 00:28:59,830
data center networks are moving towards

00:28:57,250 --> 00:29:03,190
the spine leaf because when you don't

00:28:59,830 --> 00:29:06,700
you're not tied into vendor optics or

00:29:03,190 --> 00:29:09,400
cables or anything it just breaks it out

00:29:06,700 --> 00:29:14,170
and it it makes a lot of sense so

00:29:09,400 --> 00:29:17,100
there's there's a lot of it yeah and you

00:29:14,170 --> 00:29:17,100
can grow horizontally

00:29:28,860 --> 00:29:40,100
another slide this is another slide I

00:29:38,590 --> 00:29:42,500
have

00:29:40,100 --> 00:29:46,880
so you can just keep adding layers like

00:29:42,500 --> 00:29:48,620
that so the next question is cisco can

00:29:46,880 --> 00:29:51,799
do that too right why aren't they doing

00:29:48,620 --> 00:29:55,039
it because it because they get

00:29:51,799 --> 00:29:56,690
commission based on the on the I mean I

00:29:55,039 --> 00:29:58,280
wouldn't if I was a cisco sales guy and

00:29:56,690 --> 00:29:59,809
there are advantages of chassis zon

00:29:58,280 --> 00:30:01,250
certain points of views I don't want to

00:29:59,809 --> 00:30:02,750
knock them under it and I'm not going to

00:30:01,250 --> 00:30:04,760
say maybe someday there's a key molas

00:30:02,750 --> 00:30:08,660
linux chassis but it's a good question

00:30:04,760 --> 00:30:10,640
to understand so capacity like if

00:30:08,660 --> 00:30:12,770
someone says capacity like that was like

00:30:10,640 --> 00:30:15,200
that first slide I showed is it's not

00:30:12,770 --> 00:30:20,390
it's all it's literally the same

00:30:15,200 --> 00:30:21,830
hardware um for forward for these type

00:30:20,390 --> 00:30:23,210
of market now we don't we're not in all

00:30:21,830 --> 00:30:26,150
the market Cisco is there juniper

00:30:23,210 --> 00:30:27,470
juniperus really nice edge devices that

00:30:26,150 --> 00:30:29,960
we can't compete with we don't have a

00:30:27,470 --> 00:30:32,299
product in that space cisco has edge

00:30:29,960 --> 00:30:33,470
devices like where you would peer with

00:30:32,299 --> 00:30:35,000
service providers that we just don't

00:30:33,470 --> 00:30:37,580
make sense as like what we call a

00:30:35,000 --> 00:30:39,049
customer edge or provider edge we don't

00:30:37,580 --> 00:30:40,970
make sense in that environment yeah

00:30:39,049 --> 00:30:43,940
someday we like to get there I'm sure

00:30:40,970 --> 00:30:45,049
and it might take commodity hardware to

00:30:43,940 --> 00:30:47,750
reach that level because we're not a

00:30:45,049 --> 00:30:50,059
hardware company where an OS company but

00:30:47,750 --> 00:30:52,250
for top of rack spine switches

00:30:50,059 --> 00:30:54,350
distribution switches campus which is p

00:30:52,250 --> 00:30:57,919
0 e switches a lot of people are paying

00:30:54,350 --> 00:31:00,110
a lot of money so this is just an

00:30:57,919 --> 00:31:02,659
alternative now if you still love cisco

00:31:00,110 --> 00:31:06,070
cisco you can put you can do a spine

00:31:02,659 --> 00:31:11,510
leaflets this going on i don't know i

00:31:06,070 --> 00:31:13,840
haven't seen it as yeah yeah yeah

00:31:11,510 --> 00:31:13,840
exactly

00:31:23,690 --> 00:31:27,750
that's when you would get a consulting

00:31:25,980 --> 00:31:30,630
engagement from mr. Heller here in the

00:31:27,750 --> 00:31:33,210
green shirt now but there's there's

00:31:30,630 --> 00:31:36,630
different there's nothing really unique

00:31:33,210 --> 00:31:38,610
from our product standpoint for disaster

00:31:36,630 --> 00:31:42,510
recovery and things it's usually what

00:31:38,610 --> 00:31:46,440
they'll do is something gratuitous art

00:31:42,510 --> 00:31:47,580
from vm migration so we run in data

00:31:46,440 --> 00:31:49,590
centers that's really up to the data

00:31:47,580 --> 00:31:51,150
center of men how he wants to do it so i

00:31:49,590 --> 00:31:53,490
guess the only interesting thing that we

00:31:51,150 --> 00:31:56,400
might do that I haven't seen deployed

00:31:53,490 --> 00:32:00,930
yet as we can do VX land which is a

00:31:56,400 --> 00:32:03,390
tunnel mechanism um at l2 so just like

00:32:00,930 --> 00:32:05,610
GRE tunnels are a very simple l3 tunnel

00:32:03,390 --> 00:32:06,450
the X lands a very simple l2 tunnel and

00:32:05,610 --> 00:32:08,310
that's where all these network

00:32:06,450 --> 00:32:09,720
virtualization czar built around but if

00:32:08,310 --> 00:32:12,210
I just do a static tunnel between you

00:32:09,720 --> 00:32:14,120
and me I can send veal in traffic and at

00:32:12,210 --> 00:32:16,770
that point it makes a lot of sense for

00:32:14,120 --> 00:32:17,850
multi-tenant data center or not data

00:32:16,770 --> 00:32:19,410
centers that are geographically

00:32:17,850 --> 00:32:22,770
dispersed you could actually probably

00:32:19,410 --> 00:32:25,020
tunnel l2 traffic across now has it been

00:32:22,770 --> 00:32:26,640
tested i have no idea i know some people

00:32:25,020 --> 00:32:29,370
have done it I don't know what scale

00:32:26,640 --> 00:32:31,380
they've done it at but at that point I

00:32:29,370 --> 00:32:34,080
would you could probably just route it

00:32:31,380 --> 00:32:35,790
across usually that's within the

00:32:34,080 --> 00:32:40,140
hypervisor or that or the management

00:32:35,790 --> 00:32:41,910
software so like OpenStack with kvm uses

00:32:40,140 --> 00:32:46,920
gratuitous art so it announces the new

00:32:41,910 --> 00:32:50,490
VM location as it brings it down VMware

00:32:46,920 --> 00:32:53,600
discreet eartus are Microsoft hyper-v I

00:32:50,490 --> 00:32:55,500
think they it's funny as it's all

00:32:53,600 --> 00:32:56,580
developers running that and they use

00:32:55,500 --> 00:32:57,870
different terms they won't say

00:32:56,580 --> 00:32:59,340
gratuitous arp it'll be like our

00:32:57,870 --> 00:33:01,020
announcer they'll use a different word

00:32:59,340 --> 00:33:02,880
so it's like talking the right language

00:33:01,020 --> 00:33:04,500
to the right person and the

00:33:02,880 --> 00:33:07,580
documentation problem is very weird

00:33:04,500 --> 00:33:11,490
about the networking like openstax very

00:33:07,580 --> 00:33:13,110
they recreate be RFS with IP nat islands

00:33:11,490 --> 00:33:16,680
from a network engineering perspective

00:33:13,110 --> 00:33:19,440
like it's very weird almost like a whole

00:33:16,680 --> 00:33:21,060
other talk just on OpenStack and network

00:33:19,440 --> 00:33:23,100
stuff because there's a lot of stuff

00:33:21,060 --> 00:33:24,540
than networks space that Cisco saw 10

00:33:23,100 --> 00:33:27,000
years ago that openstax kind of

00:33:24,540 --> 00:33:30,420
reinventing in my opinion that's very

00:33:27,000 --> 00:33:33,389
interesting so we have an ml to plug in

00:33:30,420 --> 00:33:37,109
and coming out like this quarter next

00:33:33,389 --> 00:33:39,479
end of this quarter I don't I don't know

00:33:37,109 --> 00:33:41,820
how much value actual ml to plugins give

00:33:39,479 --> 00:33:44,209
in which might be another top because I

00:33:41,820 --> 00:33:50,879
don't I just don't see it being that

00:33:44,209 --> 00:34:01,589
that cool in my opinion so any other

00:33:50,879 --> 00:34:04,529
yeah yeah so what's nice is a you work

00:34:01,589 --> 00:34:07,019
for red hat yeah so red hat red hat

00:34:04,529 --> 00:34:09,179
cleared the way for us to red hats

00:34:07,019 --> 00:34:11,010
actually jeddak certified that means

00:34:09,179 --> 00:34:13,500
they had to certify each of the

00:34:11,010 --> 00:34:14,899
applications like sshd so they've

00:34:13,500 --> 00:34:18,450
already done the work for us

00:34:14,899 --> 00:34:21,149
unfortunately jeddaks there they tie

00:34:18,450 --> 00:34:23,159
hardware to software so i imagine you

00:34:21,149 --> 00:34:25,559
guys had to like test a dell server with

00:34:23,159 --> 00:34:26,609
red hat then test it yeah so that's what

00:34:25,559 --> 00:34:29,519
we're gonna have to go through and just

00:34:26,609 --> 00:34:32,159
being a startup ya know there's been a

00:34:29,519 --> 00:34:34,049
lot of interest where we don't have a

00:34:32,159 --> 00:34:37,109
dc-based account manager yet so it's

00:34:34,049 --> 00:34:38,579
just me and Ashley like that's here

00:34:37,109 --> 00:34:46,169
that's a whole sales team for 10 states

00:34:38,579 --> 00:34:48,359
there but yeah it's something yeah so

00:34:46,169 --> 00:34:50,129
they're doing we have some military

00:34:48,359 --> 00:34:51,240
customers but I don't think anything

00:34:50,129 --> 00:34:54,809
will get anywhere until you jeddak

00:34:51,240 --> 00:34:56,039
chittick happens sogeti key for those

00:34:54,809 --> 00:34:57,359
who don't know it's just it's just like

00:34:56,039 --> 00:34:58,710
a suite of tests like interoperability

00:34:57,359 --> 00:35:01,740
tests like it's obviously super

00:34:58,710 --> 00:35:05,069
important to the government to do BRP

00:35:01,740 --> 00:35:07,259
like high like a virtual router

00:35:05,069 --> 00:35:09,089
redundancy protocol but I need to have

00:35:07,259 --> 00:35:10,410
it work between a brocade and a cisco

00:35:09,089 --> 00:35:12,480
because they don't want to be tied to a

00:35:10,410 --> 00:35:13,589
single vendor so it's disaggregation

00:35:12,480 --> 00:35:16,890
stuff is going to look really attractive

00:35:13,589 --> 00:35:18,930
to to military we just have to get our

00:35:16,890 --> 00:35:21,450
ducks in a row unfortunately a lot of

00:35:18,930 --> 00:35:23,160
weber's first to the market like Harris

00:35:21,450 --> 00:35:25,170
radio Cisco switches they always make

00:35:23,160 --> 00:35:27,240
the tests that you have to pass the cell

00:35:25,170 --> 00:35:29,609
so you like basically have to recreate

00:35:27,240 --> 00:35:33,000
their product to sell against it so

00:35:29,609 --> 00:35:37,140
it'll be it'll be interesting but yeah I

00:35:33,000 --> 00:35:39,769
did what's the next it's not just gospel

00:35:37,140 --> 00:35:39,769
talking is it

00:35:45,150 --> 00:35:58,940
so we can do yashica lip yeah one sec I

00:35:55,829 --> 00:35:58,940
have a good slide for this

00:36:28,010 --> 00:36:37,350
yeah so I didn't want to meet too much

00:36:32,940 --> 00:36:38,850
of a product pitch for the but a fart

00:36:37,350 --> 00:36:40,890
for our product I mean there's a free

00:36:38,850 --> 00:36:42,330
product so that makes it nice so

00:36:40,890 --> 00:36:45,300
everything everything's open source on

00:36:42,330 --> 00:36:47,340
the box so spanning tree is ms TBD you

00:36:45,300 --> 00:36:50,130
can grab that for the only bun to Quogue

00:36:47,340 --> 00:36:52,140
as open source it does bgp ospf that we

00:36:50,130 --> 00:36:53,130
support it can also do is is but we

00:36:52,140 --> 00:36:56,280
don't support it yet because we just

00:36:53,130 --> 00:36:58,110
haven't worked on the code there's iff

00:36:56,280 --> 00:37:00,360
down to it just went into W in Maine I

00:36:58,110 --> 00:37:02,790
saw so we actually rewrote the etsy

00:37:00,360 --> 00:37:05,220
network interfaces configuration file so

00:37:02,790 --> 00:37:08,070
doing things like bringing up ports 1

00:37:05,220 --> 00:37:09,420
through 10 without touching ports 11

00:37:08,070 --> 00:37:11,460
through 20 that was something that I

00:37:09,420 --> 00:37:14,430
bunt to couldn't do so we had to like

00:37:11,460 --> 00:37:24,450
rewrite it to be more the word I'm you

00:37:14,430 --> 00:37:26,700
potent yeah it's been redone so we do

00:37:24,450 --> 00:37:29,490
vlans of elaine's a VLAN we do bonds

00:37:26,700 --> 00:37:31,950
which is the Linux term for ether

00:37:29,490 --> 00:37:36,350
channels which cisco uses spanning tree

00:37:31,950 --> 00:37:36,350
we have it's it's a spanning tree Damon

00:37:36,380 --> 00:37:43,320
that's MST PD and then we do lldp by

00:37:41,670 --> 00:37:45,930
default it's backwards compatible with

00:37:43,320 --> 00:37:47,190
Cisco it's a free open-source thing to

00:37:45,930 --> 00:37:49,320
you could put that on me bun too if you

00:37:47,190 --> 00:37:50,790
want prescriptive topology manager at

00:37:49,320 --> 00:37:55,250
something we made that we open sourced

00:37:50,790 --> 00:37:58,770
it PTM just checks lldp state against

00:37:55,250 --> 00:38:00,570
net map basically to check your links so

00:37:58,770 --> 00:38:03,570
in case you just run this as a as a cron

00:38:00,570 --> 00:38:05,550
job to check what's going on but we do

00:38:03,570 --> 00:38:08,220
we have high availability M lag in

00:38:05,550 --> 00:38:10,710
virtual router redundancy and then if

00:38:08,220 --> 00:38:14,520
BRR is the active active solution for l2

00:38:10,710 --> 00:38:16,950
redundancy but we also have a VR PD

00:38:14,520 --> 00:38:18,870
Damon that can interrupt with like Cisco

00:38:16,950 --> 00:38:20,910
or brocade or whatever now I haven't

00:38:18,870 --> 00:38:23,790
tested them all but it's just an open

00:38:20,910 --> 00:38:25,800
source app and then again i already

00:38:23,790 --> 00:38:28,050
mentioned this one we do ospf and bgp i

00:38:25,800 --> 00:38:30,750
think the most interesting thing is bgp

00:38:28,050 --> 00:38:31,950
in the data center without an igp which

00:38:30,750 --> 00:38:36,140
we're starting to see from a lot of

00:38:31,950 --> 00:38:36,140
customers but

00:38:37,289 --> 00:38:43,329
it's in the pipeline say that we have a

00:38:40,750 --> 00:38:47,460
customer on beta code but we I can't

00:38:43,329 --> 00:38:51,660
promise a timeline yet same pls is there

00:38:47,460 --> 00:38:51,660

YouTube URL: https://www.youtube.com/watch?v=vXRgb7vbSWU


