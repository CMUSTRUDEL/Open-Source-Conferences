Title: All Things Open 2015 | Jakub Jedryszek - Microsoft | TDD with TypeScript, AngularJS and Node.js
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2014 All Things Open 2015, October 19th and 20th, Raleigh NC. All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,430 --> 00:00:11,340
so my name is Jacob and I work for

00:00:07,919 --> 00:00:15,960
Microsoft but I work for the new

00:00:11,340 --> 00:00:19,650
microsoft and currently I work on the

00:00:15,960 --> 00:00:22,230
new azure portal which is this the

00:00:19,650 --> 00:00:24,660
biggest single page web application

00:00:22,230 --> 00:00:26,670
written in typescript it's also one of

00:00:24,660 --> 00:00:29,130
the biggest single page application in

00:00:26,670 --> 00:00:31,830
the ward at all it's almost 500

00:00:29,130 --> 00:00:35,579
developers working on that and we are

00:00:31,830 --> 00:00:37,469
using typescript i have a blog JJ 09 the

00:00:35,579 --> 00:00:39,510
plant i encourage you to check it out

00:00:37,469 --> 00:00:41,610
and subscribe you can also find out my

00:00:39,510 --> 00:00:46,920
twitter handle my github and my youtube

00:00:41,610 --> 00:00:50,820
channel so TV how many of you are

00:00:46,920 --> 00:00:53,039
testing your coat okay like eighty

00:00:50,820 --> 00:00:57,870
percent that's great how many we are

00:00:53,039 --> 00:01:02,550
using TDD okay like half of here okay oh

00:00:57,870 --> 00:01:04,860
I I want to do TTT today because I want

00:01:02,550 --> 00:01:07,290
to show you some testing tools and I

00:01:04,860 --> 00:01:09,030
think TV is make sure enough today

00:01:07,290 --> 00:01:11,250
because it goes like pretty cool like

00:01:09,030 --> 00:01:14,369
four years ago when all the hipsters who

00:01:11,250 --> 00:01:19,830
are doing this now I think everybody is

00:01:14,369 --> 00:01:22,409
able to do that i also want to do the

00:01:19,830 --> 00:01:24,030
quick recap so you know you give you

00:01:22,409 --> 00:01:26,100
first write the test then you write the

00:01:24,030 --> 00:01:27,659
production code because actually after

00:01:26,100 --> 00:01:29,430
you write a peasant around it and make

00:01:27,659 --> 00:01:30,990
sure it's finally and then when you're

00:01:29,430 --> 00:01:33,329
right production code notice should

00:01:30,990 --> 00:01:35,759
start passing once it's passing if you

00:01:33,329 --> 00:01:37,799
can or we have to refactor your code and

00:01:35,759 --> 00:01:41,579
you have the test to make sure that you

00:01:37,799 --> 00:01:45,110
won't break anything i want to talk

00:01:41,579 --> 00:01:50,250
about types good because typescript is a

00:01:45,110 --> 00:01:51,960
tool and language that helps you to test

00:01:50,250 --> 00:01:55,969
your code in such a way that it

00:01:51,960 --> 00:01:58,799
generates the free unit test for you

00:01:55,969 --> 00:02:00,750
thanks to that thai think this type

00:01:58,799 --> 00:02:03,990
script is a superset of JavaScript which

00:02:00,750 --> 00:02:07,530
is a conscript 6 plus type system which

00:02:03,990 --> 00:02:08,930
is optional or the type system allows

00:02:07,530 --> 00:02:13,190
you to detect

00:02:08,930 --> 00:02:16,890
potential bugs or API changes or method

00:02:13,190 --> 00:02:19,530
parameters changes and you don't anymore

00:02:16,890 --> 00:02:22,530
have to write a unit test for that like

00:02:19,530 --> 00:02:24,750
for example through the bar is not equal

00:02:22,530 --> 00:02:27,540
undefined try to check if methodist

00:02:24,750 --> 00:02:29,970
existing you just need to compile attack

00:02:27,540 --> 00:02:31,890
you go to JavaScript and you must be

00:02:29,970 --> 00:02:35,160
compiled to JavaScript you can run it in

00:02:31,890 --> 00:02:37,080
all browsers that people are using today

00:02:35,160 --> 00:02:41,850
you can even compile it to wreck my

00:02:37,080 --> 00:02:44,400
script 6 atmosphere 3 which is in ie6 I

00:02:41,850 --> 00:02:48,030
believe how many people heard about

00:02:44,400 --> 00:02:52,290
typescript here okay most of you right

00:02:48,030 --> 00:02:55,590
so i don't have to do introduction so i

00:02:52,290 --> 00:02:59,100
want to show you some demos with no j

00:02:55,590 --> 00:03:02,880
guess because you can write no JS apps

00:02:59,100 --> 00:03:05,310
with tax script and i also want to use

00:03:02,880 --> 00:03:08,220
angularjs because i think this is

00:03:05,310 --> 00:03:09,960
currently the most popular from a primal

00:03:08,220 --> 00:03:13,080
how many of you are using angular at

00:03:09,960 --> 00:03:15,630
work okay how many of you are not using

00:03:13,080 --> 00:03:22,560
angular oh well there are some people

00:03:15,630 --> 00:03:26,580
that's interested okay so dark three

00:03:22,560 --> 00:03:31,290
main javascript testing frameworks qunit

00:03:26,580 --> 00:03:35,550
mocha and jasmine I think unit was very

00:03:31,290 --> 00:03:37,170
popular around two or two years ago we

00:03:35,550 --> 00:03:38,610
had as a portal we are using cunin

00:03:37,170 --> 00:03:42,030
because our project started three years

00:03:38,610 --> 00:03:43,290
ago but today seems like the mocha or

00:03:42,030 --> 00:03:46,709
jasmine will be better choice for

00:03:43,290 --> 00:03:48,540
testing frameworks mocha is very

00:03:46,709 --> 00:03:52,950
flexible because it allows you to bring

00:03:48,540 --> 00:03:55,920
your own assertion library your own mock

00:03:52,950 --> 00:03:59,430
mocking framework a jasmine is like all

00:03:55,920 --> 00:04:02,220
in one so most of people are using mocha

00:03:59,430 --> 00:04:04,050
to test and oj s and they tend to choose

00:04:02,220 --> 00:04:06,000
Jasmine forefront and so this is what I

00:04:04,050 --> 00:04:08,730
want to do today i want to show you how

00:04:06,000 --> 00:04:10,230
to test your node.js with mocha and how

00:04:08,730 --> 00:04:14,910
to test the angular front and with

00:04:10,230 --> 00:04:19,020
jasmine and i also use a few javascript

00:04:14,910 --> 00:04:19,859
tools but somebody cannot live without

00:04:19,020 --> 00:04:22,109
today

00:04:19,859 --> 00:04:24,270
right because you know when we are

00:04:22,109 --> 00:04:27,960
starting the new project first meeting

00:04:24,270 --> 00:04:33,569
select 10 and p.m. libraries then need

00:04:27,960 --> 00:04:36,060
to create 200 lines of gold group filed

00:04:33,569 --> 00:04:39,509
on Jas then he stopped three or five

00:04:36,060 --> 00:04:42,990
Bauer packages and then we can write

00:04:39,509 --> 00:04:45,110
hello world and our rap is rhyming so

00:04:42,990 --> 00:04:48,719
that's the work for today and i also

00:04:45,110 --> 00:04:51,629
want to mention THD THD is typescript

00:04:48,719 --> 00:04:55,139
definition file manager magical

00:04:51,629 --> 00:04:58,080
definition files are sort of like header

00:04:55,139 --> 00:05:00,770
files in c++ and the purpose of that is

00:04:58,080 --> 00:05:04,860
that we have already existing JavaScript

00:05:00,770 --> 00:05:06,419
frameworks like jQuery or angular but

00:05:04,860 --> 00:05:08,219
when you won't use it with typescript

00:05:06,419 --> 00:05:11,669
Iseman doesn't know anything about you

00:05:08,219 --> 00:05:14,729
know it's its tax so for that unders

00:05:11,669 --> 00:05:18,240
Hales Berg come up with a type

00:05:14,729 --> 00:05:20,879
definition files and using the

00:05:18,240 --> 00:05:23,490
interfaces you can describe what is in

00:05:20,879 --> 00:05:26,279
this ad in this JavaScript frameworks

00:05:23,490 --> 00:05:28,020
and then you can have me telling signs

00:05:26,279 --> 00:05:33,839
that you can have type checks for for

00:05:28,020 --> 00:05:35,879
using them I also use a karma to run the

00:05:33,839 --> 00:05:38,729
Jasmine tests to run the test in actual

00:05:35,879 --> 00:05:41,190
browser karma is a test runner that will

00:05:38,729 --> 00:05:44,190
spin up your browsers and run your tests

00:05:41,190 --> 00:05:45,419
in there automatically and if I don't

00:05:44,190 --> 00:05:47,270
have enough time I also show you

00:05:45,419 --> 00:05:50,849
end-to-end testing with protractor

00:05:47,270 --> 00:05:53,699
protractor is created by angularjs team

00:05:50,849 --> 00:06:01,500
its end-to-end testing framework based

00:05:53,699 --> 00:06:04,319
on Salina so let's write the code so as

00:06:01,500 --> 00:06:07,020
I mentioned first i will i will show how

00:06:04,319 --> 00:06:10,229
to test no Jay Scott with mocha then how

00:06:07,020 --> 00:06:13,259
to test angular with Jasmin and at the

00:06:10,229 --> 00:06:17,150
end and to an testing with protractor

00:06:13,259 --> 00:06:21,419
but probably the last one will be left

00:06:17,150 --> 00:06:23,610
as an exercise for the viewer so you

00:06:21,419 --> 00:06:26,009
guys will have to do that actually I

00:06:23,610 --> 00:06:30,060
want to show you one one more cool thing

00:06:26,009 --> 00:06:32,310
because yesterday and somebody told me

00:06:30,060 --> 00:06:36,120
you know that if we go to get cup

00:06:32,310 --> 00:06:38,730
/ microsoft / typescript there is eight

00:06:36,120 --> 00:06:40,590
thousand comments you know this report

00:06:38,730 --> 00:06:41,970
is around for three years because this

00:06:40,590 --> 00:06:44,880
is how long the test food is there and

00:06:41,970 --> 00:06:48,140
if you go to comment you can see there

00:06:44,880 --> 00:06:51,870
is a lot of pull requests pull request

00:06:48,140 --> 00:06:55,950
5,000 pretty impressive but if you

00:06:51,870 --> 00:07:01,290
scroll down here we go go go go go here

00:06:55,950 --> 00:07:03,990
you go here and here you can see that

00:07:01,290 --> 00:07:06,360
even under scales Berg the creator of

00:07:03,990 --> 00:07:09,570
tax script also creator of C sharp and

00:07:06,360 --> 00:07:12,570
creator of turbo Pascal the person who i

00:07:09,570 --> 00:07:14,250
thought it's only a manager who is doing

00:07:12,570 --> 00:07:16,830
a high level design he's actually

00:07:14,250 --> 00:07:18,990
writing code here and even in a pleat

00:07:16,830 --> 00:07:21,650
here you can see all his contributions

00:07:18,990 --> 00:07:24,270
he's writing code like like a developer

00:07:21,650 --> 00:07:27,960
this I think this is pretty cool you

00:07:24,270 --> 00:07:32,160
know so here it is all called he ever

00:07:27,960 --> 00:07:35,300
written yeah such an interesting thing

00:07:32,160 --> 00:07:38,490
okay so I want to create a simple app

00:07:35,300 --> 00:07:41,340
that will allow you to vote for three

00:07:38,490 --> 00:07:44,520
options first optional beals second will

00:07:41,340 --> 00:07:48,290
be okay and the third will be bad and i

00:07:44,520 --> 00:07:51,000
will start with test so i already

00:07:48,290 --> 00:07:55,140
created a structure for my project so

00:07:51,000 --> 00:08:00,180
you won't have to watch me installing 15

00:07:55,140 --> 00:08:07,650
of my PM packages so i have it in here i

00:08:00,180 --> 00:08:12,330
go to TBS open my sublime hope you can

00:08:07,650 --> 00:08:17,280
see it so i hear my vm packages i'm

00:08:12,330 --> 00:08:20,310
using mocha i'm using go to compile my

00:08:17,280 --> 00:08:22,170
javascript files i'm also using good to

00:08:20,310 --> 00:08:24,150
run my test automatically when I do

00:08:22,170 --> 00:08:26,130
changing some file will automatically

00:08:24,150 --> 00:08:28,680
compile my files and run my tests and

00:08:26,130 --> 00:08:35,810
i'm also using karma to random jasmine

00:08:28,680 --> 00:08:39,520
tests so first i will create a test for

00:08:35,810 --> 00:08:45,730
my voting application so can you file

00:08:39,520 --> 00:08:50,470
working test TS and first you know in

00:08:45,730 --> 00:08:53,820
Makkah you need to have external surgeon

00:08:50,470 --> 00:08:56,890
library you can use default node assert

00:08:53,820 --> 00:09:01,140
but i think the cool people are using

00:08:56,890 --> 00:09:05,640
child so I wish I pretend to be cool so

00:09:01,140 --> 00:09:16,440
I'll say require oops not request with

00:09:05,640 --> 00:09:20,320
here ok trying and in mock I you have a

00:09:16,440 --> 00:09:23,890
describe function and in the scribe

00:09:20,320 --> 00:09:26,940
function you just say whatever my voting

00:09:23,890 --> 00:09:30,070
gap and here you provide the function

00:09:26,940 --> 00:09:33,250
would you have you test requirements so

00:09:30,070 --> 00:09:37,360
for example I can say it should be able

00:09:33,250 --> 00:09:41,350
to in it boat here another function

00:09:37,360 --> 00:09:43,930
where I will have my actual test but you

00:09:41,350 --> 00:09:46,870
can also see that you know here I get

00:09:43,930 --> 00:09:48,760
red squigglies below the described and

00:09:46,870 --> 00:09:50,920
below it that's because time doesn't

00:09:48,760 --> 00:09:52,930
know anything about these functions this

00:09:50,920 --> 00:09:54,790
is where the types of definition files

00:09:52,930 --> 00:09:56,980
are coming in and I already have them

00:09:54,790 --> 00:09:59,200
here in the typing directory so for

00:09:56,980 --> 00:10:02,050
example here is a mocha definition file

00:09:59,200 --> 00:10:06,970
and you know it's just set of interfaces

00:10:02,050 --> 00:10:11,700
and declarations so important for my at

00:10:06,970 --> 00:10:19,300
my file i would say reference 5 equals

00:10:11,700 --> 00:10:23,370
typing mocha mocha vs i'll do the same

00:10:19,300 --> 00:10:27,779
for Charlie search I

00:10:23,370 --> 00:10:31,710
sighing okay and now you see my red red

00:10:27,779 --> 00:10:35,040
squigglies are gone so bytecode so let's

00:10:31,710 --> 00:10:38,610
write a test I like to structure my unit

00:10:35,040 --> 00:10:46,680
tests in three ice block so it's a range

00:10:38,610 --> 00:10:50,750
and act and third phase and in a range

00:10:46,680 --> 00:10:52,920
hello I'll say I'll have some options

00:10:50,750 --> 00:10:59,700
and I options will be like animation

00:10:52,920 --> 00:11:01,410
awesome okay and bad and then in my act

00:10:59,700 --> 00:11:04,080
place I don't have any production code

00:11:01,410 --> 00:11:06,690
yet so i imagine i will have some voting

00:11:04,080 --> 00:11:09,420
module on this voting module i will have

00:11:06,690 --> 00:11:11,670
some init function and i will supply my

00:11:09,420 --> 00:11:14,339
options to this function and then in

00:11:11,670 --> 00:11:17,130
asset to assert whether it worked i

00:11:14,339 --> 00:11:21,839
would like to say both I'd like to say

00:11:17,130 --> 00:11:23,190
sorry I want to say chai II don't expect

00:11:21,839 --> 00:11:25,250
you see it how I am getting an

00:11:23,190 --> 00:11:27,750
intelligence here this is thanks to the

00:11:25,250 --> 00:11:29,820
definition files and next two types good

00:11:27,750 --> 00:11:32,760
as well because i am using that types

00:11:29,820 --> 00:11:40,310
with plugin in sublime text so here I

00:11:32,760 --> 00:11:45,209
say expect a volte dot get votes length

00:11:40,310 --> 00:11:47,760
to be equal three so I have three

00:11:45,209 --> 00:11:51,150
options I also don't have the good voice

00:11:47,760 --> 00:11:53,160
function so you know in a JavaScript

00:11:51,150 --> 00:11:56,400
work for the first thing you do probably

00:11:53,160 --> 00:11:58,380
would write separate unit tests or check

00:11:56,400 --> 00:12:00,600
that the get votes functions existing

00:11:58,380 --> 00:12:02,190
check if the init function is existing

00:12:00,600 --> 00:12:03,839
but in times with y'all just you know

00:12:02,190 --> 00:12:08,430
create this module because I cannot

00:12:03,839 --> 00:12:12,680
compile it yet or create new folder or

00:12:08,430 --> 00:12:12,680
controllers oops

00:12:15,040 --> 00:12:18,220
come on

00:12:20,140 --> 00:12:26,029
yes

00:12:22,040 --> 00:12:30,529
you file cold bolting TS and I will just

00:12:26,029 --> 00:12:33,649
create empty functions in it and here i

00:12:30,529 --> 00:12:38,389
will have the parameter options and i

00:12:33,649 --> 00:12:41,600
will say column string array so this

00:12:38,389 --> 00:12:43,670
will tell the user of this function that

00:12:41,600 --> 00:12:47,360
i'm expecting the array of strings in

00:12:43,670 --> 00:12:49,639
here you cannot supply anything else and

00:12:47,360 --> 00:12:51,440
this function will return nothing stops

00:12:49,639 --> 00:12:53,180
a void and i'll leave it empty for now

00:12:51,440 --> 00:12:57,440
because i just want to compile this i

00:12:53,180 --> 00:12:59,240
also say function get votes thank you

00:12:57,440 --> 00:13:02,420
actually I don't know what I will return

00:12:59,240 --> 00:13:04,370
yet so i can use any type which is

00:13:02,420 --> 00:13:07,250
dynamic type it and everything this is

00:13:04,370 --> 00:13:09,380
like no type and i will say that i want

00:13:07,250 --> 00:13:12,680
to return array of something and I'll

00:13:09,380 --> 00:13:14,540
just return empty array for now so I can

00:13:12,680 --> 00:13:17,740
have all the length property i am using

00:13:14,540 --> 00:13:23,589
here in my tests and here i will import

00:13:17,740 --> 00:13:28,519
voting module say require don't

00:13:23,589 --> 00:13:31,550
controllers voting okay and you see my

00:13:28,519 --> 00:13:35,269
red Scoobies are gone so now I can go to

00:13:31,550 --> 00:13:39,800
my console and actually one more thing

00:13:35,269 --> 00:13:42,260
so here i have a group file it's my boat

00:13:39,800 --> 00:13:45,350
configuration so here I have a task to

00:13:42,260 --> 00:13:49,339
compile my type script code and here I

00:13:45,350 --> 00:13:52,339
have tasked to run tests with mocha and

00:13:49,339 --> 00:13:56,000
here is a task to run my karma tests but

00:13:52,339 --> 00:13:59,810
actually for now I won't eat run karma

00:13:56,000 --> 00:14:03,339
so I'll just comment this out and I will

00:13:59,810 --> 00:14:03,339
run gold watch

00:14:06,280 --> 00:14:20,540
and come on goal copy that slow yeah ok

00:14:13,540 --> 00:14:29,300
starting ok so now I'll try to simulate

00:14:20,540 --> 00:14:33,740
some change say save ok hey what if I

00:14:29,300 --> 00:14:41,540
try to run bull oh but now three combo

00:14:33,740 --> 00:14:45,740
from there too and that's fine oh okay

00:14:41,540 --> 00:14:47,710
so it's compiling my coat I should get

00:14:45,740 --> 00:14:51,040
some errors because i have other file

00:14:47,710 --> 00:14:53,600
and here i'm getting the fellow surgeon

00:14:51,040 --> 00:14:56,120
expected to have three elements but i

00:14:53,600 --> 00:14:57,890
got only 0 and as I have nothing because

00:14:56,120 --> 00:15:01,400
I'm returning again to your right so

00:14:57,890 --> 00:15:04,430
let's fix that I'll go back to my voting

00:15:01,400 --> 00:15:07,250
file here I need to know and it's my

00:15:04,430 --> 00:15:10,820
option somehow but you know I also need

00:15:07,250 --> 00:15:12,890
a sort of keep track of the number of

00:15:10,820 --> 00:15:18,410
votes for each option so for that I will

00:15:12,890 --> 00:15:21,050
create new model for this purpose create

00:15:18,410 --> 00:15:24,380
models directory and you file called

00:15:21,050 --> 00:15:27,350
vote yes and here i'll create a

00:15:24,380 --> 00:15:32,480
typescript of a transcript 6 class or

00:15:27,350 --> 00:15:36,340
vote with two properties label type

00:15:32,480 --> 00:15:40,280
string and number of votes that number

00:15:36,340 --> 00:15:43,730
does only number type i will create a

00:15:40,280 --> 00:15:45,380
constructor as well which will take the

00:15:43,730 --> 00:15:49,310
label of the vote as a parameter and

00:15:45,380 --> 00:15:53,810
will assign it to a go and then it will

00:15:49,310 --> 00:15:55,520
in it votes with zero because there at

00:15:53,810 --> 00:15:59,750
the beginning i will have 0 votes right

00:15:55,520 --> 00:16:03,070
so I'll use this here I'll say import

00:15:59,750 --> 00:16:08,290
both require

00:16:03,070 --> 00:16:11,100
models boat and here i am getting rest

00:16:08,290 --> 00:16:18,340
Quigley's that's because i didn't export

00:16:11,100 --> 00:16:21,720
my plus-size export vote and now she you

00:16:18,340 --> 00:16:25,480
see it goes away so this is pretty cool

00:16:21,720 --> 00:16:27,670
ok so now i will need to create some

00:16:25,480 --> 00:16:31,330
storage for that so creative folks and

00:16:27,670 --> 00:16:37,590
i'll say this will be right of vote type

00:16:31,330 --> 00:16:40,270
i want any red yet and just say will let

00:16:37,590 --> 00:16:42,700
let us also you I conscript six keyword

00:16:40,270 --> 00:16:46,300
that allows you to create variables on

00:16:42,700 --> 00:16:48,970
that at work scoping instead of

00:16:46,300 --> 00:16:55,530
functions covers we have today if you i

00:16:48,970 --> 00:17:00,790
will say about equals options the map

00:16:55,530 --> 00:17:03,640
new boat oh so i'm creating a new gold

00:17:00,790 --> 00:17:08,470
object out of every option I have and

00:17:03,640 --> 00:17:12,040
here i will return my boats so save I'll

00:17:08,470 --> 00:17:15,189
go back to my book file and my test is

00:17:12,040 --> 00:17:18,610
passing so i can hit my balls but now i

00:17:15,189 --> 00:17:21,630
want to be able to vote for some option

00:17:18,610 --> 00:17:25,390
right so again i am starting with test

00:17:21,630 --> 00:17:30,460
I'm creating another requirement saying

00:17:25,390 --> 00:17:32,950
it should be able to vote here i'll use

00:17:30,460 --> 00:17:35,760
the arrow function which is another a

00:17:32,950 --> 00:17:38,830
conscript six feature that allows you to

00:17:35,760 --> 00:17:41,680
don't change the scope because i've used

00:17:38,830 --> 00:17:44,320
this jordan function it will be sculpted

00:17:41,680 --> 00:17:46,360
a function but if you use a basic here

00:17:44,320 --> 00:17:49,530
it will be scoped the parent which is I

00:17:46,360 --> 00:17:52,090
want to use what you want in JavaScript

00:17:49,530 --> 00:17:54,430
and i will copy this because i would

00:17:52,090 --> 00:17:59,050
like to in it and my both in the same

00:17:54,430 --> 00:18:03,930
way say range and then enact i want to

00:17:59,050 --> 00:18:06,340
say 14 volt and supply the number of

00:18:03,930 --> 00:18:10,520
options so for example i want to post

00:18:06,340 --> 00:18:18,380
for ok and then I want to assert

00:18:10,520 --> 00:18:19,820
and expect very shy good expect and I'm

00:18:18,380 --> 00:18:22,340
getting a ready right Spiegel is here

00:18:19,820 --> 00:18:29,990
because and I both function now inspect

00:18:22,340 --> 00:18:34,970
that get votes my first option both to

00:18:29,990 --> 00:18:39,380
be equal one and i can also assert for

00:18:34,970 --> 00:18:43,370
my other options i will expect that they

00:18:39,380 --> 00:18:47,950
have zero volts I'll save this and now

00:18:43,370 --> 00:18:53,480
into just fix my vote function so export

00:18:47,950 --> 00:18:57,980
function vote index type of number will

00:18:53,480 --> 00:19:01,970
be empty here and I want to see my test

00:18:57,980 --> 00:19:07,240
fail ink hey Aaron banging okay my test

00:19:01,970 --> 00:19:10,670
is failing that count doesn't increase

00:19:07,240 --> 00:19:17,000
so fix that go back to my vote in module

00:19:10,670 --> 00:19:21,310
i would say votes index both + + click

00:19:17,000 --> 00:19:24,860
save compile again and my second test is

00:19:21,310 --> 00:19:28,610
passing so i have my back and working i

00:19:24,860 --> 00:19:31,370
already added the node.js server using

00:19:28,610 --> 00:19:34,460
Express and I am Here I am already using

00:19:31,370 --> 00:19:37,390
a dysfunction i just created i know it

00:19:34,460 --> 00:19:40,700
goes a little bit cheating right but

00:19:37,390 --> 00:19:44,030
sorry for that Thank constraints so here

00:19:40,700 --> 00:19:47,270
I don't get requests but get votes it

00:19:44,030 --> 00:19:49,610
will use my voting module and post

00:19:47,270 --> 00:19:51,830
request for voting for some option it

00:19:49,610 --> 00:19:54,530
will call the vote function and will

00:19:51,830 --> 00:19:56,690
send updated number of votes and when I

00:19:54,530 --> 00:20:02,150
am running the server I am initiating

00:19:56,690 --> 00:20:04,670
the options with my init function so I

00:20:02,150 --> 00:20:07,280
have my note part so now i will create

00:20:04,670 --> 00:20:09,290
my front and with angular and here i

00:20:07,280 --> 00:20:12,470
already created public directory because

00:20:09,290 --> 00:20:15,440
here in a node i'm saying that my static

00:20:12,470 --> 00:20:19,640
directory is Polly so here in public i

00:20:15,440 --> 00:20:21,680
have index.html file here is just a

00:20:19,640 --> 00:20:25,220
simple and you are

00:20:21,680 --> 00:20:27,740
view where I am just printing my vows

00:20:25,220 --> 00:20:29,990
and I'm printing the vote count and I

00:20:27,740 --> 00:20:32,060
can when I click on a particular vault

00:20:29,990 --> 00:20:36,380
it will send a request but I need to

00:20:32,060 --> 00:20:38,360
create my angular controller so and the

00:20:36,380 --> 00:20:40,550
first thing I would do i will create new

00:20:38,360 --> 00:20:44,390
folder called app and this is where my

00:20:40,550 --> 00:20:50,150
angular app will did say new file of the

00:20:44,390 --> 00:20:52,130
PS and here and how the clutter module

00:20:50,150 --> 00:20:55,250
voting which will have good module

00:20:52,130 --> 00:20:58,310
function that will allow me to avoid

00:20:55,250 --> 00:21:00,200
type typing this string here and you

00:20:58,310 --> 00:21:02,000
know misspelling it because this can

00:21:00,200 --> 00:21:04,670
happen you know we just Nigel are you

00:21:02,000 --> 00:21:06,170
miss type the name of your module you

00:21:04,670 --> 00:21:09,440
will just create a new module and

00:21:06,170 --> 00:21:12,550
sometimes you have issues with finding

00:21:09,440 --> 00:21:15,440
out that we make a mistake right because

00:21:12,550 --> 00:21:17,450
there's not a very good way to test it

00:21:15,440 --> 00:21:19,700
right I mean if you have test that good

00:21:17,450 --> 00:21:23,030
but this is like another free test of

00:21:19,700 --> 00:21:25,190
prevents you from making mistakes so

00:21:23,030 --> 00:21:31,330
i'll have my up here now create a test

00:21:25,190 --> 00:21:40,360
directory called test and you file

00:21:31,330 --> 00:21:44,630
voting controller test yes here i have

00:21:40,360 --> 00:21:46,880
already a my preparation code and i'm

00:21:44,630 --> 00:21:48,680
using here angular mocks it goes you

00:21:46,880 --> 00:21:51,950
know in order to test your angular code

00:21:48,680 --> 00:21:54,770
into these mods a lot you need to mark

00:21:51,950 --> 00:21:56,120
for example i want to mock HTTP back end

00:21:54,770 --> 00:21:57,770
because i don't want to make the real

00:21:56,120 --> 00:22:00,080
call to my back end i want to test it

00:21:57,770 --> 00:22:03,520
independently so i will fight my back

00:22:00,080 --> 00:22:06,500
end and i also need to inject the

00:22:03,520 --> 00:22:11,900
carbine to create by myself and actually

00:22:06,500 --> 00:22:15,830
when i create the first test here should

00:22:11,900 --> 00:22:19,850
get votes in this test i'm setting up my

00:22:15,830 --> 00:22:25,850
fake HTTP backhand but if you get begin

00:22:19,850 --> 00:22:27,430
the get request there's this URL please

00:22:25,850 --> 00:22:30,280
respond with

00:22:27,430 --> 00:22:34,450
a close two hundred and this expected

00:22:30,280 --> 00:22:37,750
result which I find here you can see it

00:22:34,450 --> 00:22:42,490
so this is the same thing I will have on

00:22:37,750 --> 00:22:45,070
my back end and then just instantiate my

00:22:42,490 --> 00:22:47,080
controller and inject the scope and

00:22:45,070 --> 00:22:49,660
during the controller instantiation this

00:22:47,080 --> 00:22:53,170
call should happen actually be back and

00:22:49,660 --> 00:22:56,290
flojos just making all the magic that

00:22:53,170 --> 00:22:59,260
angular mocks side and at the end expect

00:22:56,290 --> 00:23:03,060
that I will have this array of votes on

00:22:59,260 --> 00:23:07,420
my scalp so I can use it in my view and

00:23:03,060 --> 00:23:14,230
so I will save this and I also create a

00:23:07,420 --> 00:23:20,830
controller troller TS here i will just

00:23:14,230 --> 00:23:23,620
really quick create my controller so if

00:23:20,830 --> 00:23:25,570
i have time to type all of it so my

00:23:23,620 --> 00:23:28,240
controller is a typescript class which

00:23:25,570 --> 00:23:31,540
have constructor when I call in my get

00:23:28,240 --> 00:23:34,030
votes function the function I is empty

00:23:31,540 --> 00:23:35,290
it will compile but it will fail now

00:23:34,030 --> 00:23:38,590
because I don't have an implementation

00:23:35,290 --> 00:23:40,330
and here i am using my get module

00:23:38,590 --> 00:23:43,330
function to instantiate the controller

00:23:40,330 --> 00:23:46,060
and I am ejecting the scope and HTTP

00:23:43,330 --> 00:23:49,920
service to make that HTTP calls so I'll

00:23:46,060 --> 00:23:52,630
save this and in my group file I will

00:23:49,920 --> 00:23:56,080
redo my changes because now i need karma

00:23:52,630 --> 00:24:02,050
to run my tests also go to the common

00:23:56,080 --> 00:24:04,630
line and rerun my goal script and now it

00:24:02,050 --> 00:24:07,810
will fill first run my server tests with

00:24:04,630 --> 00:24:11,050
mocha you see the past and now it's

00:24:07,810 --> 00:24:14,860
running IE and firefox to run my angular

00:24:11,050 --> 00:24:17,380
tests with jasmine and actually here i

00:24:14,860 --> 00:24:19,600
have also the Karma config file and I'm

00:24:17,380 --> 00:24:21,820
saying that i'm using jasmine of testing

00:24:19,600 --> 00:24:24,160
framework i also need to specify the

00:24:21,820 --> 00:24:26,710
list of files that karma will need to be

00:24:24,160 --> 00:24:29,350
aware of in order to run my tests and i

00:24:26,710 --> 00:24:32,620
also need to tell Karma what browsers

00:24:29,350 --> 00:24:36,160
i'm using i'm using an internet explorer

00:24:32,620 --> 00:24:38,110
because i work for microsoft i am using

00:24:36,160 --> 00:24:41,980
Firefox

00:24:38,110 --> 00:24:43,630
because Chris the current Microsoft

00:24:41,980 --> 00:24:45,790
employee it was working for Mozilla and

00:24:43,630 --> 00:24:49,270
doing this for him and I'm using phantom

00:24:45,790 --> 00:24:51,850
jas which is a console browser I which

00:24:49,270 --> 00:24:53,770
doesn't actually need to run in the

00:24:51,850 --> 00:24:55,870
browser it just works on the console but

00:24:53,770 --> 00:25:00,190
you know usual you will you want to test

00:24:55,870 --> 00:25:03,700
in the real browser so let's see i have

00:25:00,190 --> 00:25:06,820
one failing test which was expected so

00:25:03,700 --> 00:25:08,820
let's fix that I'll go to voting

00:25:06,820 --> 00:25:13,000
controller and you might get both

00:25:08,820 --> 00:25:15,130
function i'll use my HTTP service that i

00:25:13,000 --> 00:25:17,110
injected and you see what is cool

00:25:15,130 --> 00:25:20,140
because here i am using the interface

00:25:17,110 --> 00:25:24,850
that I'm and saying that oh there is

00:25:20,140 --> 00:25:27,880
this ng though I HTTP service and then

00:25:24,850 --> 00:25:30,490
thanks to that when I do dot here I get

00:25:27,880 --> 00:25:32,500
in pelle sense of all the functions i

00:25:30,490 --> 00:25:34,870
have available so for example I when I

00:25:32,500 --> 00:25:40,960
just get function here and I want to

00:25:34,870 --> 00:25:45,190
call API sorry / AP I get votes and on

00:25:40,960 --> 00:25:49,080
the successful response I'll just set

00:25:45,190 --> 00:25:52,690
whatever I get on my scalp dodd votes

00:25:49,080 --> 00:25:55,150
they time and here is actually a problem

00:25:52,690 --> 00:25:58,960
because you know i strongly typed my

00:25:55,150 --> 00:26:01,390
scope to ng I I scope and the vote

00:25:58,960 --> 00:26:04,960
doesn't exist there so there are two

00:26:01,390 --> 00:26:08,590
ways to work around this one is to just

00:26:04,960 --> 00:26:11,010
cheat types of compiler using this

00:26:08,590 --> 00:26:13,679
method so i'll just do it for now and

00:26:11,010 --> 00:26:18,370
i'll just what i see if my test is

00:26:13,679 --> 00:26:21,820
passing now okay so now my test is

00:26:18,370 --> 00:26:23,169
passing so this is cool another way to

00:26:21,820 --> 00:26:25,870
do that because you know now i have my

00:26:23,169 --> 00:26:27,370
test so i can refactor my coat and i

00:26:25,870 --> 00:26:30,790
want to say you know I really want to

00:26:27,370 --> 00:26:35,200
use the dot notation so you can do you

00:26:30,790 --> 00:26:39,910
can create a new interface called for

00:26:35,200 --> 00:26:43,890
example voting scope which expands the

00:26:39,910 --> 00:26:47,430
ng I scope

00:26:43,890 --> 00:26:49,230
and here I'll have property votes type

00:26:47,430 --> 00:26:52,650
of any because this will return JSON so

00:26:49,230 --> 00:26:56,460
I cannot really infer the type from

00:26:52,650 --> 00:26:59,940
there and now I'll here use the voting

00:26:56,460 --> 00:27:04,500
scope instead of I scope and now this

00:26:59,940 --> 00:27:07,170
one be read and now if I run my tests I

00:27:04,500 --> 00:27:11,160
see that there are still passing so I am

00:27:07,170 --> 00:27:16,710
fine so let me add one more test here to

00:27:11,160 --> 00:27:18,450
actually be able to vote vote for two so

00:27:16,710 --> 00:27:21,150
here I'm doing the same thing I get in

00:27:18,450 --> 00:27:23,730
the first test I am faking my HD be back

00:27:21,150 --> 00:27:25,530
backhand to expect gap get photos and

00:27:23,730 --> 00:27:27,060
then it's actually the controller but

00:27:25,530 --> 00:27:31,620
Sloan my preparation because what I

00:27:27,060 --> 00:27:35,640
really want to do is if you get the post

00:27:31,620 --> 00:27:38,010
call to vote URL with option one then

00:27:35,640 --> 00:27:43,200
respond with 200 and expected results

00:27:38,010 --> 00:27:48,120
this time should have one vote and after

00:27:43,200 --> 00:27:50,280
this call expect that the votes on scope

00:27:48,120 --> 00:27:55,980
will be updated with this updated array

00:27:50,280 --> 00:27:59,520
i'm heading here ok so i'll save this

00:27:55,980 --> 00:28:02,730
and i'll watch my test failing because

00:27:59,520 --> 00:28:05,250
you know it's really useful to make sure

00:28:02,730 --> 00:28:07,050
this is failing because you know

00:28:05,250 --> 00:28:09,600
sometimes we are writing code and we are

00:28:07,050 --> 00:28:11,640
adding the test and then you know you're

00:28:09,600 --> 00:28:14,010
commenting out your coat so you are

00:28:11,640 --> 00:28:18,630
removing it and test is still passing

00:28:14,010 --> 00:28:21,570
right how many of you did that ok only

00:28:18,630 --> 00:28:22,920
three brave people admit that but yeah

00:28:21,570 --> 00:28:24,480
this is this is just what you know what

00:28:22,920 --> 00:28:26,280
happens when you think you're testing it

00:28:24,480 --> 00:28:28,500
but you're not really so you know even

00:28:26,280 --> 00:28:30,030
if I'm not doing ed sometimes good not

00:28:28,500 --> 00:28:33,120
any no writing the code and writing the

00:28:30,030 --> 00:28:35,070
test I'm saying is passing cool but then

00:28:33,120 --> 00:28:35,670
I me not just removing my functionality

00:28:35,070 --> 00:28:37,350
and I make

00:28:35,670 --> 00:28:41,580
sure that my test is failing you how to

00:28:37,350 --> 00:28:44,370
make sure that my test makes sense ok so

00:28:41,580 --> 00:28:48,660
here this is failing and I'll go to

00:28:44,370 --> 00:28:55,290
voting controller and here in vote

00:28:48,660 --> 00:29:00,480
function I'll say this HTTP POST API

00:28:55,290 --> 00:29:03,120
vote thank you all and the next number

00:29:00,480 --> 00:29:07,320
I'm not playing in a data so they just

00:29:03,120 --> 00:29:09,390
know here and on success I'll actually

00:29:07,320 --> 00:29:12,900
need to do the same what I did in get

00:29:09,390 --> 00:29:16,650
votes so I'll just grab this and I place

00:29:12,900 --> 00:29:21,470
it here copy paste not good but again I

00:29:16,650 --> 00:29:21,470
want to see if my test will pass first

00:29:21,590 --> 00:29:26,520
okay so it's like everything is fine

00:29:23,790 --> 00:29:31,850
it's passing and I'll just refactor it

00:29:26,520 --> 00:29:40,710
I'll grab this function and create the

00:29:31,850 --> 00:29:47,930
private on foes receive property which

00:29:40,710 --> 00:29:47,930
will be this lambda and I'll just oh now

00:29:50,000 --> 00:30:10,680
okay let's write sublime ok and go

00:30:03,110 --> 00:30:15,870
protein controller TS ok one more time

00:30:10,680 --> 00:30:17,160
Kelpie out code private time right

00:30:15,870 --> 00:30:19,670
because this is the best man for

00:30:17,160 --> 00:30:19,670
everything

00:30:20,110 --> 00:30:34,510
stand and this temp here save it and

00:30:29,350 --> 00:30:38,150
what see is this will still pass and

00:30:34,510 --> 00:30:43,510
this is still passing so now I should be

00:30:38,150 --> 00:30:49,010
able to run my app and should just work

00:30:43,510 --> 00:30:50,780
so look here is your localhost 3000 and

00:30:49,010 --> 00:30:52,549
here's my app I have three options I can

00:30:50,780 --> 00:30:55,159
fold and it's updating and you can

00:30:52,549 --> 00:30:59,409
actually see I'm not cheating here in

00:30:55,159 --> 00:31:02,360
network I'm actually doing the the calls

00:30:59,409 --> 00:31:07,190
post request and I'm getting updated

00:31:02,360 --> 00:31:08,960
votes and because chris is here who is

00:31:07,190 --> 00:31:12,650
evangelist for edge I will show that

00:31:08,960 --> 00:31:13,520
even works in Microsoft edge and you

00:31:12,650 --> 00:31:15,590
know what is cool too sure about

00:31:13,520 --> 00:31:17,720
Microsoft edge that you know in Google

00:31:15,590 --> 00:31:19,970
when sometimes i'm closing chrome with

00:31:17,720 --> 00:31:22,340
like 10 tabs open and then you'll reopen

00:31:19,970 --> 00:31:24,169
it you know you're watching this type

00:31:22,340 --> 00:31:26,059
because it tries to load all of them

00:31:24,169 --> 00:31:27,980
edge is that doesn't do that it just

00:31:26,059 --> 00:31:30,559
loads the one page and you know if I

00:31:27,980 --> 00:31:32,690
click on this tab it's started lowing

00:31:30,559 --> 00:31:34,820
this time when I click it which just

00:31:32,690 --> 00:31:38,120
makes sense it's pretty cool so yeah

00:31:34,820 --> 00:31:39,860
let's see if my app works works here yep

00:31:38,120 --> 00:31:43,460
works here as well and you know I even

00:31:39,860 --> 00:31:46,309
have same votes not both staff so

00:31:43,460 --> 00:31:48,260
because I have five more minutes I can

00:31:46,309 --> 00:31:50,780
also other end to end test with a

00:31:48,260 --> 00:31:55,000
protractor and now I can you know tests

00:31:50,780 --> 00:31:58,309
my scenario work in real life so I

00:31:55,000 --> 00:32:03,110
already have my protractor counting file

00:31:58,309 --> 00:32:05,870
so i will to create and to end test my

00:32:03,110 --> 00:32:13,539
test you I folder so let's do that this

00:32:05,870 --> 00:32:16,340
UI and e-file old and to end test yes

00:32:13,539 --> 00:32:19,940
here I'll also cheat already have this

00:32:16,340 --> 00:32:23,570
test written so I'll say hey opened my

00:32:19,940 --> 00:32:27,890
browser on localhost 3000 then find the

00:32:23,570 --> 00:32:30,740
first element of the list click it and

00:32:27,890 --> 00:32:32,070
then expect that this first element will

00:32:30,740 --> 00:32:35,460
have updated

00:32:32,070 --> 00:32:39,390
bodkin from from 0 to 1 so i'll save

00:32:35,460 --> 00:32:43,230
this and how actually to recompile this

00:32:39,390 --> 00:32:44,370
would go open one more console so this

00:32:43,230 --> 00:32:46,050
is the tool that requires you to

00:32:44,370 --> 00:32:48,810
actually run for console to make it

00:32:46,050 --> 00:32:51,930
happen so in second console I need to

00:32:48,810 --> 00:32:55,920
say oops okay my test is running another

00:32:51,930 --> 00:33:02,700
test hold on type ok and here so here

00:32:55,920 --> 00:33:11,070
I'll run my server in another console

00:33:02,700 --> 00:33:13,620
window I'll run web driver manager

00:33:11,070 --> 00:33:17,870
because it's a protractor knees I'll

00:33:13,620 --> 00:33:23,550
start it in the fourth console window

00:33:17,870 --> 00:33:27,450
I'll run actual test so say protractor

00:33:23,550 --> 00:33:29,730
and supply the config file actually

00:33:27,450 --> 00:33:33,810
let's see okay it compiled everything is

00:33:29,730 --> 00:33:36,120
fine and now click enter and this should

00:33:33,810 --> 00:33:38,580
run the Firefox just click on the first

00:33:36,120 --> 00:33:44,600
element and assert that there what comes

00:33:38,580 --> 00:33:49,170
up data set up this air ok running over

00:33:44,600 --> 00:33:51,060
3000 and click and one test is passing

00:33:49,170 --> 00:33:53,760
so you know she's also very useful i had

00:33:51,060 --> 00:33:56,070
to have so many times because many time

00:33:53,760 --> 00:33:57,870
in the energy portal when we had some

00:33:56,070 --> 00:34:00,300
park somebody you know discover all we

00:33:57,870 --> 00:34:02,790
have a bar but this was working oh well

00:34:00,300 --> 00:34:05,160
it was it working Oh like I'm sure three

00:34:02,790 --> 00:34:07,920
weeks ago it was working so you know any

00:34:05,160 --> 00:34:09,630
time from now three weeks ago it was

00:34:07,920 --> 00:34:12,690
works into just checking out these three

00:34:09,630 --> 00:34:15,360
weeks so we have around 40 developers in

00:34:12,690 --> 00:34:21,600
our team and we have around 50 comments

00:34:15,360 --> 00:34:24,660
every day so this is like around nah 300

00:34:21,600 --> 00:34:27,090
more 500 comments I need to went through

00:34:24,660 --> 00:34:29,430
to see who broke it right so then the

00:34:27,090 --> 00:34:31,410
scientists are very very useful because

00:34:29,430 --> 00:34:32,940
you know sometimes in case of this i

00:34:31,410 --> 00:34:34,980
have people coming to me hey you know i

00:34:32,940 --> 00:34:38,400
did this change and I don't know why I

00:34:34,980 --> 00:34:40,710
broke your text and then I saying well I

00:34:38,400 --> 00:34:41,360
don't know either but let's see right

00:34:40,710 --> 00:34:43,460
and

00:34:41,360 --> 00:34:45,890
like sort of control that's something

00:34:43,460 --> 00:34:48,920
which is you know use maybe one out of

00:34:45,890 --> 00:34:55,160
the million cases right will be not

00:34:48,920 --> 00:34:57,890
broken so so that was testing with node

00:34:55,160 --> 00:35:00,950
with mocha that's the angular of jasmine

00:34:57,890 --> 00:35:02,690
and Antoinette testicle protractor if

00:35:00,950 --> 00:35:04,040
you want to start with typescript I

00:35:02,690 --> 00:35:06,950
recommended the learning types could

00:35:04,040 --> 00:35:08,750
move by or my insane I reviewed this

00:35:06,950 --> 00:35:11,240
boot it's pretty cool because it shows

00:35:08,750 --> 00:35:15,020
only not only a typescript language but

00:35:11,240 --> 00:35:17,330
also how to set up your environment how

00:35:15,020 --> 00:35:19,040
to structurally project it's supposed

00:35:17,330 --> 00:35:20,930
about the testing tools even about the

00:35:19,040 --> 00:35:24,590
browser performance so it's pretty cool

00:35:20,930 --> 00:35:26,570
position if you want to go into this

00:35:24,590 --> 00:35:30,170
driven development or even testing at

00:35:26,570 --> 00:35:34,100
all at the can bag boob is pretty pretty

00:35:30,170 --> 00:35:35,600
good because he's explained that driven

00:35:34,100 --> 00:35:39,470
development is more about the good

00:35:35,600 --> 00:35:41,180
design than about the couch and the in

00:35:39,470 --> 00:35:43,250
testing by your own Oh sheriff is I

00:35:41,180 --> 00:35:44,540
think the best overview of testing

00:35:43,250 --> 00:35:47,630
general and the techniques you should

00:35:44,540 --> 00:35:51,140
use and recently I read this book start

00:35:47,630 --> 00:35:53,500
at the unit test how many we have

00:35:51,140 --> 00:35:57,260
problem with convincing your bosses to

00:35:53,500 --> 00:36:01,730
test your code the Indian your tests one

00:35:57,260 --> 00:36:03,620
person to three more three percent 45 so

00:36:01,730 --> 00:36:05,750
you know eric dietrich is saying like

00:36:03,620 --> 00:36:07,310
you shouldn't ask them you should just

00:36:05,750 --> 00:36:11,570
do it right because you're not asking

00:36:07,310 --> 00:36:14,440
them hey can I searched um overflow for

00:36:11,570 --> 00:36:14,440
a half day right

00:36:14,530 --> 00:36:18,770
because this is what we are doing at

00:36:16,760 --> 00:36:20,990
work right you're now how to do

00:36:18,770 --> 00:36:23,620
something you go to stack overflow it's

00:36:20,990 --> 00:36:26,000
called stack overflow driven development

00:36:23,620 --> 00:36:29,060
but that's that's how we work today

00:36:26,000 --> 00:36:31,640
right so please check out tight script

00:36:29,060 --> 00:36:34,210
test your code and write a good coat and

00:36:31,640 --> 00:36:34,210

YouTube URL: https://www.youtube.com/watch?v=U_jAuqjn1B0


