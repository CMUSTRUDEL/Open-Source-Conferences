Title: All Things Open 2015 | Kevin Hennessy - Applied Information Sciences | Angular 2.0
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2014 All Things Open 2015, October 19th and 20th, Raleigh NC. All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,549 --> 00:00:09,750
all right well why don't we get started

00:00:06,770 --> 00:00:12,330
my name is Kevin Hennessey is that

00:00:09,750 --> 00:00:14,250
already been introduced and I'm with

00:00:12,330 --> 00:00:16,289
applied information sciences which is a

00:00:14,250 --> 00:00:18,900
consulting firm based out of Washington

00:00:16,289 --> 00:00:21,359
DC we have a Raleigh office and I'm in

00:00:18,900 --> 00:00:24,630
the rally office and today I'll be

00:00:21,359 --> 00:00:30,240
talking about angular 2 of beginners

00:00:24,630 --> 00:00:32,430
guide and the agenda for today is first

00:00:30,240 --> 00:00:37,350
of all we'll talk about why is there

00:00:32,430 --> 00:00:39,629
need for a new version of angular the

00:00:37,350 --> 00:00:45,149
second we'll take a look at the design

00:00:39,629 --> 00:00:47,280
for angular 2 point 0 we'll touch on

00:00:45,149 --> 00:00:49,050
browser support which is pretty critical

00:00:47,280 --> 00:00:52,640
to making the decision as to whether to

00:00:49,050 --> 00:00:55,710
use angular 2 point 0 and then we'll

00:00:52,640 --> 00:00:57,750
discuss briefly some of the new and

00:00:55,710 --> 00:00:59,550
emerging technologies that are being

00:00:57,750 --> 00:01:02,910
leveraged by eggler too and those

00:00:59,550 --> 00:01:05,600
include web components es6 the new

00:01:02,910 --> 00:01:08,700
version of JavaScript and typescript and

00:01:05,600 --> 00:01:11,340
then we'll take a look at a demo which

00:01:08,700 --> 00:01:13,549
is intended to sort of exercise angular

00:01:11,340 --> 00:01:16,710
2 point 0 to the point that it's now

00:01:13,549 --> 00:01:18,630
built out and it's really going to be

00:01:16,710 --> 00:01:21,150
for the perspective of the developer

00:01:18,630 --> 00:01:23,729
like me trying to make use of this

00:01:21,150 --> 00:01:30,210
framework which is supposed to make life

00:01:23,729 --> 00:01:32,850
easier for developers and then we'll

00:01:30,210 --> 00:01:35,340
finish up with a discussion of what's

00:01:32,850 --> 00:01:38,780
next with angular 2 as many of you

00:01:35,340 --> 00:01:41,700
probably know angular 2 is still in

00:01:38,780 --> 00:01:46,950
alpha release I think at this point

00:01:41,700 --> 00:01:49,200
we're up to maybe 44 or 45 the beta

00:01:46,950 --> 00:01:51,210
release is imminent but we're not there

00:01:49,200 --> 00:01:54,710
yet and certainly not near the final

00:01:51,210 --> 00:01:58,350
release so why a new version of angular

00:01:54,710 --> 00:02:02,009
well first of all angular came out more

00:01:58,350 --> 00:02:05,399
than six years ago and in web years

00:02:02,009 --> 00:02:08,009
that's that's a more than a lifetime and

00:02:05,399 --> 00:02:12,120
so a lot has changed in the last six

00:02:08,009 --> 00:02:14,700
years first of all es6

00:02:12,120 --> 00:02:18,780
it's also called es2015 is going to

00:02:14,700 --> 00:02:20,940
transform JavaScript programming and web

00:02:18,780 --> 00:02:23,909
components are on their way we know that

00:02:20,940 --> 00:02:25,620
they're not supported in the browsers

00:02:23,909 --> 00:02:29,940
completely but they're definitely an

00:02:25,620 --> 00:02:32,790
emerging trend angular is going to need

00:02:29,940 --> 00:02:38,190
a new implementation of data binding and

00:02:32,790 --> 00:02:41,000
that has is in no small measure because

00:02:38,190 --> 00:02:45,920
of the performance implications of that

00:02:41,000 --> 00:02:45,920
angular was not designed for mobile apps

00:02:45,980 --> 00:02:50,900
there are performance issues inability

00:02:48,629 --> 00:02:53,819
to cache pre-compiled views and

00:02:50,900 --> 00:02:56,640
lackluster touch support I'm not going

00:02:53,819 --> 00:02:58,560
to spend a lot of time listing all these

00:02:56,640 --> 00:03:00,659
things that might not be right with

00:02:58,560 --> 00:03:01,950
angular 1 this is not an angular 1 talk

00:03:00,659 --> 00:03:04,140
and I'm sure there are a lot of you in

00:03:01,950 --> 00:03:05,730
the room who are have worked with

00:03:04,140 --> 00:03:09,269
angular 1 and enjoyed using the

00:03:05,730 --> 00:03:11,790
framework but angular fundamentally

00:03:09,269 --> 00:03:14,970
needs to be easier to learn and it needs

00:03:11,790 --> 00:03:16,470
to adapt to new and emerging trends and

00:03:14,970 --> 00:03:18,060
web technologies and I think that's

00:03:16,470 --> 00:03:21,269
principally why we're talking about a

00:03:18,060 --> 00:03:26,130
new version of angular the angular 2

00:03:21,269 --> 00:03:29,760
point 0 design starts out with a modular

00:03:26,130 --> 00:03:32,400
mobile first approach that should also

00:03:29,760 --> 00:03:35,609
scale for the desktop so as I would say

00:03:32,400 --> 00:03:37,169
admitted to go with angular 16 years ago

00:03:35,609 --> 00:03:40,019
this was less of a concern obviously

00:03:37,169 --> 00:03:42,480
it's a it's a big concerted and issue

00:03:40,019 --> 00:03:46,379
being able to develop mobile first

00:03:42,480 --> 00:03:48,239
designs and also scale they'll be

00:03:46,379 --> 00:03:49,829
support for web components out of the

00:03:48,239 --> 00:03:54,870
box will see a lot of that as we go

00:03:49,829 --> 00:03:58,560
through the demo and it is now built

00:03:54,870 --> 00:04:01,230
using typescript with easy translation

00:03:58,560 --> 00:04:03,389
to es5 this is a transition that was

00:04:01,230 --> 00:04:06,629
made in the process of developing

00:04:03,389 --> 00:04:11,849
angular 2 but the a go to now has been

00:04:06,629 --> 00:04:14,100
rewritten with typescript and the sample

00:04:11,849 --> 00:04:16,560
app that i'll be showing is built with

00:04:14,100 --> 00:04:19,590
script and we'll see how that works neg

00:04:16,560 --> 00:04:22,770
ulit ooh now that's not to say that you

00:04:19,590 --> 00:04:25,110
can't use es6 and he is 5 with angular 2

00:04:22,770 --> 00:04:28,140
and in fact there are plenty of examples

00:04:25,110 --> 00:04:31,590
out there of folks working with es6 is

00:04:28,140 --> 00:04:34,590
five maybe a bit more of a challenge to

00:04:31,590 --> 00:04:36,810
be perfectly frank but it is available

00:04:34,590 --> 00:04:39,920
as an option and developing with angular

00:04:36,810 --> 00:04:43,020
2 there's a new data binding

00:04:39,920 --> 00:04:44,340
implementation of for angular 2 and

00:04:43,020 --> 00:04:48,270
you've probably heard something about

00:04:44,340 --> 00:04:50,220
this because the initial message was

00:04:48,270 --> 00:04:51,840
that it was good bigelow to was only

00:04:50,220 --> 00:04:54,780
going to support one-way data binding

00:04:51,840 --> 00:04:57,990
and of course one of the things that has

00:04:54,780 --> 00:05:00,210
been a hallmark of angular 1 is that it

00:04:57,990 --> 00:05:03,390
supports two-way data binding and so

00:05:00,210 --> 00:05:04,980
we'll see what that's all about but this

00:05:03,390 --> 00:05:07,920
has been influenced by some of the newer

00:05:04,980 --> 00:05:09,750
frameworks like react and the desire is

00:05:07,920 --> 00:05:15,060
to improve performance so we're going to

00:05:09,750 --> 00:05:16,350
see a new way of of data binding and

00:05:15,060 --> 00:05:18,990
then there are a lot of things that will

00:05:16,350 --> 00:05:21,600
start to go away it won't rely on JQ

00:05:18,990 --> 00:05:24,120
line or dom wrappers in general it's

00:05:21,600 --> 00:05:25,470
going to be simplified and a lot of

00:05:24,120 --> 00:05:28,680
these things that you may be familiar

00:05:25,470 --> 00:05:33,090
with scope and controller in angular 1

00:05:28,680 --> 00:05:35,540
they all go away and the desire is to

00:05:33,090 --> 00:05:41,580
simplify the learning process for

00:05:35,540 --> 00:05:45,810
angular 2 so let's talk a little bit

00:05:41,580 --> 00:05:47,670
about browser support because that's an

00:05:45,810 --> 00:05:49,350
issue that as I said a few minutes ago

00:05:47,670 --> 00:05:51,060
is something that you'll want to bear in

00:05:49,350 --> 00:05:55,350
mind as you make a decision as to

00:05:51,060 --> 00:05:56,940
whether to use angular 2 angular 2 the

00:05:55,350 --> 00:05:59,820
initial announcements was that it was

00:05:56,940 --> 00:06:01,920
only supporting evergreen browsers those

00:05:59,820 --> 00:06:05,730
that auto update and so the typical

00:06:01,920 --> 00:06:10,080
browsers like Chrome Firefox etc as well

00:06:05,730 --> 00:06:12,480
as I 11 that auto update are supported

00:06:10,080 --> 00:06:15,630
by angular 2 there's been a recent

00:06:12,480 --> 00:06:18,510
announcement of support for IE 9 and 10

00:06:15,630 --> 00:06:19,300
which is a welcome development probably

00:06:18,510 --> 00:06:22,360
for many

00:06:19,300 --> 00:06:25,870
have to develop for those browsers and

00:06:22,360 --> 00:06:28,659
then on the mobile side you have chrome

00:06:25,870 --> 00:06:30,490
on Android iOS 7 and above Windows Phone

00:06:28,659 --> 00:06:32,319
8 and above and then another

00:06:30,490 --> 00:06:34,360
announcement that just came out recently

00:06:32,319 --> 00:06:38,110
that there's support for older versions

00:06:34,360 --> 00:06:39,699
of Android going back to 4.1 so what you

00:06:38,110 --> 00:06:42,310
can do is actually go to the github

00:06:39,699 --> 00:06:45,190
repository for angular which is angular

00:06:42,310 --> 00:06:47,650
/ angular angular tues repository and

00:06:45,190 --> 00:06:49,900
they've got it they've got a graphic out

00:06:47,650 --> 00:06:52,419
there that will show you the emerging

00:06:49,900 --> 00:06:54,520
levels of support now one thing to bear

00:06:52,419 --> 00:06:57,009
in mind is if you're developing

00:06:54,520 --> 00:06:59,349
applications for older browsers than the

00:06:57,009 --> 00:07:04,060
neg uhler two is probably not your

00:06:59,349 --> 00:07:06,969
choice so let's take a look at some of

00:07:04,060 --> 00:07:09,190
what makes up angular 2 and what

00:07:06,969 --> 00:07:11,830
foundations it's built on the first is

00:07:09,190 --> 00:07:14,680
web components and web components is

00:07:11,830 --> 00:07:19,419
actually an umbrella term for four

00:07:14,680 --> 00:07:24,520
different w3c specs custom elements HTML

00:07:19,419 --> 00:07:27,000
templates shadow DOM and HTML imports

00:07:24,520 --> 00:07:29,500
and basically what it provides is

00:07:27,000 --> 00:07:32,409
composability encapsulation all those

00:07:29,500 --> 00:07:37,300
things that we as developers know as

00:07:32,409 --> 00:07:40,810
good component development in angular 2

00:07:37,300 --> 00:07:43,419
we'll see all of these things except for

00:07:40,810 --> 00:07:45,699
HTML imports and one thing to bear in

00:07:43,419 --> 00:07:47,650
mind of course is as many of you know is

00:07:45,699 --> 00:07:50,590
that browser support for web components

00:07:47,650 --> 00:07:53,379
is not nearly complete at this point

00:07:50,590 --> 00:07:56,289
what's emerging now is support for

00:07:53,379 --> 00:07:59,500
shadow down and that is used in angular

00:07:56,289 --> 00:08:02,949
2 but other things like custom elements

00:07:59,500 --> 00:08:04,870
HTML templates those are less widely

00:08:02,949 --> 00:08:09,520
supported in the browser so what you'll

00:08:04,870 --> 00:08:13,629
see is that angular 2 is using the web

00:08:09,520 --> 00:08:16,389
components approach to developing their

00:08:13,629 --> 00:08:18,479
platform but what they're doing at the

00:08:16,389 --> 00:08:22,150
same time of course is providing

00:08:18,479 --> 00:08:24,009
polyfills in support for what I guess

00:08:22,150 --> 00:08:26,469
you would call angular 2 components

00:08:24,009 --> 00:08:29,229
which make it possible to develop

00:08:26,469 --> 00:08:31,420
components in the current state of the

00:08:29,229 --> 00:08:33,220
web including

00:08:31,420 --> 00:08:36,250
for those older browsers that were just

00:08:33,220 --> 00:08:39,030
mentioned xmas script synced it just

00:08:36,250 --> 00:08:43,120
came along it was just adopted in July

00:08:39,030 --> 00:08:46,500
it's it's a welcome development pretty

00:08:43,120 --> 00:08:49,660
amazing that it actually did reach

00:08:46,500 --> 00:08:54,010
adoption stage after quite a few years

00:08:49,660 --> 00:08:59,580
and for our purposes today in what hecla

00:08:54,010 --> 00:09:03,190
script six or es2015 provides is classes

00:08:59,580 --> 00:09:05,620
which is obviously a new development

00:09:03,190 --> 00:09:08,500
with javascript in a module system and

00:09:05,620 --> 00:09:11,650
there's a lot more to es6 we won't have

00:09:08,500 --> 00:09:14,560
time to go into it in the session today

00:09:11,650 --> 00:09:18,370
but the primary focus as i said will be

00:09:14,560 --> 00:09:20,050
on classes in module systems and echoing

00:09:18,370 --> 00:09:26,230
what i said a few minutes ago you can

00:09:20,050 --> 00:09:27,850
still use es5 with angular 2 though most

00:09:26,230 --> 00:09:30,120
of what you see out there is using

00:09:27,850 --> 00:09:35,290
either es6 or typescript at this point

00:09:30,120 --> 00:09:39,990
so on to typescript rather obviously it

00:09:35,290 --> 00:09:44,550
provides static typing for javascript

00:09:39,990 --> 00:09:47,040
and if there's been a Microsoft Google

00:09:44,550 --> 00:09:51,460
collaboration around this which is

00:09:47,040 --> 00:09:53,860
pretty fascinating to me Microsoft has

00:09:51,460 --> 00:09:56,050
added what are called decorators to

00:09:53,860 --> 00:09:59,110
typescript and in the typescript version

00:09:56,050 --> 00:10:02,530
that's out there now 1.6 has support for

00:09:59,110 --> 00:10:05,800
decorators which are I earlier called

00:10:02,530 --> 00:10:07,150
annotations and we'll see some of that

00:10:05,800 --> 00:10:11,800
as we look at the code but that's an

00:10:07,150 --> 00:10:13,420
integral part of angular 2 and and as I

00:10:11,800 --> 00:10:16,450
was mentioning a few minutes ago angular

00:10:13,420 --> 00:10:18,580
2 was actually is actually built with

00:10:16,450 --> 00:10:21,910
typescript in the course of developing

00:10:18,580 --> 00:10:24,880
angular 2 they ported their code base

00:10:21,910 --> 00:10:27,880
into typescript so there's a there's a

00:10:24,880 --> 00:10:31,660
very strong linkage between angular 2

00:10:27,880 --> 00:10:33,690
and typescript at this point and pretty

00:10:31,660 --> 00:10:36,180
amazing Microsoft and Google

00:10:33,690 --> 00:10:39,210
something like this again the use of

00:10:36,180 --> 00:10:42,060
typescript is optional you don't have to

00:10:39,210 --> 00:10:44,700
use it but the examples that we'll be

00:10:42,060 --> 00:10:50,970
looking at today actually do use

00:10:44,700 --> 00:10:54,870
typescript so let me bring up a sample

00:10:50,970 --> 00:11:00,050
app and I'm hopeful that you'll be able

00:10:54,870 --> 00:11:03,480
to see it in the browser in the overhead

00:11:00,050 --> 00:11:09,630
but basically my purpose in putting this

00:11:03,480 --> 00:11:11,490
together was to just exercise angular 2

00:11:09,630 --> 00:11:13,260
and see what you could do with it at

00:11:11,490 --> 00:11:15,740
this stage of development and I've been

00:11:13,260 --> 00:11:18,180
speaking on a go-to for about the last

00:11:15,740 --> 00:11:19,860
four or five months and I can say when I

00:11:18,180 --> 00:11:22,410
first started you couldn't do anything

00:11:19,860 --> 00:11:24,330
like this it was too unstable but what

00:11:22,410 --> 00:11:27,510
I've done is created a small app here

00:11:24,330 --> 00:11:31,170
I'm a rose gardener when I have some

00:11:27,510 --> 00:11:33,690
free time from coding and this amp just

00:11:31,170 --> 00:11:36,920
steps you through sort of a fictitious

00:11:33,690 --> 00:11:39,960
scenario of developing a rose garden and

00:11:36,920 --> 00:11:42,060
putting together the pieces of planning

00:11:39,960 --> 00:11:44,160
your garden in picking your roses and

00:11:42,060 --> 00:11:46,410
purchasing them and so on the first

00:11:44,160 --> 00:11:48,240
screen there's a get started welcome its

00:11:46,410 --> 00:11:50,280
welcoming me the assumption is i've

00:11:48,240 --> 00:11:53,160
already logged in so that the app has

00:11:50,280 --> 00:11:58,350
some information about me on the next

00:11:53,160 --> 00:12:04,650
screen I can make choices as to the

00:11:58,350 --> 00:12:07,130
dimensions of my garden is that visible

00:12:04,650 --> 00:12:07,130
from beck

00:12:08,570 --> 00:12:15,050
yeah I think I can yeah

00:12:19,600 --> 00:12:22,500
is that any better

00:12:23,779 --> 00:12:28,459
yeah let me just go back to the previous

00:12:26,480 --> 00:12:30,050
screen so on this screen what you're

00:12:28,459 --> 00:12:32,810
able to do is just establish the

00:12:30,050 --> 00:12:34,850
dimensions for your garden and it's a

00:12:32,810 --> 00:12:37,779
sort of an artificial construct but it's

00:12:34,850 --> 00:12:41,269
basically shows that you can update

00:12:37,779 --> 00:12:43,370
these these drop downs here with choices

00:12:41,269 --> 00:12:45,499
and then it automatically updates things

00:12:43,370 --> 00:12:50,089
like the square footage in the maximum

00:12:45,499 --> 00:12:52,069
number of roses that are available on

00:12:50,089 --> 00:12:57,699
the next screen you can make selections

00:12:52,069 --> 00:12:57,699
as to your roses you can add a rosebush

00:12:58,059 --> 00:13:04,490
there cascading dropdowns you can enter

00:13:01,490 --> 00:13:09,319
the amount oh whoops it says I've had

00:13:04,490 --> 00:13:11,389
too much so I got to back this off and

00:13:09,319 --> 00:13:14,420
then you can complete your purchase of

00:13:11,389 --> 00:13:19,249
the Roses on this checkout screen

00:13:14,420 --> 00:13:26,029
there's a little bit of of validation

00:13:19,249 --> 00:13:29,800
here last names and then you can finish

00:13:26,029 --> 00:13:29,800
up and submit and

00:13:38,279 --> 00:13:42,259
sorry one of my keys is malfunctioning

00:13:48,390 --> 00:13:57,690
and you can see our order having been

00:13:50,700 --> 00:13:59,750
placed shows the amount and the Roses

00:13:57,690 --> 00:14:03,570
that you purchased some so basically

00:13:59,750 --> 00:14:06,030
what you're seeing here is a modest app

00:14:03,570 --> 00:14:08,790
that allows you to complete a few steps

00:14:06,030 --> 00:14:12,360
in a purchasing process and it's

00:14:08,790 --> 00:14:15,840
completely filled with angular 2 and

00:14:12,360 --> 00:14:17,160
before I dive into the code one thing

00:14:15,840 --> 00:14:18,980
that I was going to a couple things I

00:14:17,160 --> 00:14:24,720
was going to say first of all i'm using

00:14:18,980 --> 00:14:27,660
materialized CSS i'm not using material

00:14:24,720 --> 00:14:29,400
design material design is coming as part

00:14:27,660 --> 00:14:33,090
of angular 2 but it's not quite here yet

00:14:29,400 --> 00:14:37,140
so i'm just using that as a sort of a

00:14:33,090 --> 00:14:39,770
polyfill for the moment and to

00:14:37,140 --> 00:14:43,980
understand angular 2 you really have to

00:14:39,770 --> 00:14:45,990
think about components from the very

00:14:43,980 --> 00:14:47,910
beginning one thing i found when i

00:14:45,990 --> 00:14:50,670
started to develop this small app is

00:14:47,910 --> 00:14:53,190
that i immediately starting to think how

00:14:50,670 --> 00:14:55,890
to organize the application into

00:14:53,190 --> 00:14:58,400
components and if you look at the screen

00:14:55,890 --> 00:15:01,980
here what you see at the very top is

00:14:58,400 --> 00:15:05,190
what's called is the display for what's

00:15:01,980 --> 00:15:08,130
called a root component engler too has

00:15:05,190 --> 00:15:09,780
this concept of component hierarchies

00:15:08,130 --> 00:15:11,820
where you've got a tree of components

00:15:09,780 --> 00:15:14,550
with a single root component then you

00:15:11,820 --> 00:15:17,550
have child components that branch out

00:15:14,550 --> 00:15:20,070
from there and so in this case what

00:15:17,550 --> 00:15:22,800
you're seeing visually is the display by

00:15:20,070 --> 00:15:25,050
the root component it's got the you know

00:15:22,800 --> 00:15:28,680
the overall navigation set up here and

00:15:25,050 --> 00:15:31,110
then within each of each of the screens

00:15:28,680 --> 00:15:35,430
that you see that we are just looking at

00:15:31,110 --> 00:15:38,130
a few minutes ago these are all these

00:15:35,430 --> 00:15:42,200
are all child components of the parent

00:15:38,130 --> 00:15:45,120
component and routing takes place

00:15:42,200 --> 00:15:47,430
angular 2 actually uses component based

00:15:45,120 --> 00:15:50,730
routing and so everything that you're

00:15:47,430 --> 00:15:55,440
seeing with an angular app is very much

00:15:50,730 --> 00:15:57,290
dictated by component design ok now i'm

00:15:55,440 --> 00:16:04,040
going to try

00:15:57,290 --> 00:16:06,490
as best I can to show some code see what

00:16:04,040 --> 00:16:06,490
we can do

00:16:15,520 --> 00:16:25,420
are you able to see that okay what I'm

00:16:23,650 --> 00:16:27,610
starting with is the simplest of the

00:16:25,420 --> 00:16:29,860
screens the welcome screen so that you

00:16:27,610 --> 00:16:34,780
can get a sense of how an angular

00:16:29,860 --> 00:16:36,610
component is created and and this screen

00:16:34,780 --> 00:16:41,550
is not doing a whole lot it's actually

00:16:36,610 --> 00:16:44,350
just displaying my name and placing a

00:16:41,550 --> 00:16:48,220
link into the screen to enable

00:16:44,350 --> 00:16:50,110
navigation so but this will give you an

00:16:48,220 --> 00:16:52,060
idea of the basics of an angular

00:16:50,110 --> 00:16:54,720
component and so at the top of the

00:16:52,060 --> 00:16:58,120
screen here this is a typescript file

00:16:54,720 --> 00:17:01,690
you have imports now these are using es6

00:16:58,120 --> 00:17:04,270
module loading and it's bringing in

00:17:01,690 --> 00:17:07,660
selectively what it needs from angular 2

00:17:04,270 --> 00:17:09,670
so in this case it we only need the view

00:17:07,660 --> 00:17:12,520
module and the component module from

00:17:09,670 --> 00:17:13,900
angular 2 what we also needed something

00:17:12,520 --> 00:17:17,980
called the router link and we'll take a

00:17:13,900 --> 00:17:19,959
look at routing in a minute and that

00:17:17,980 --> 00:17:21,850
comes in from the angular 2 router and

00:17:19,959 --> 00:17:23,830
then we have something called the

00:17:21,850 --> 00:17:28,900
shopping cart service which is a service

00:17:23,830 --> 00:17:31,030
that that I developed which it keeps

00:17:28,900 --> 00:17:32,740
track of the customer and the purchases

00:17:31,030 --> 00:17:37,480
and so forth we will take a look at it

00:17:32,740 --> 00:17:38,770
in just a minute and then that's the

00:17:37,480 --> 00:17:42,700
starting point for creating your

00:17:38,770 --> 00:17:45,400
component and then you have annotations

00:17:42,700 --> 00:17:48,190
or decorators i should say they used to

00:17:45,400 --> 00:17:51,160
be annotations there now decorators on a

00:17:48,190 --> 00:17:54,340
simple class and so this is this is now

00:17:51,160 --> 00:17:58,200
using typescript in and it decorators

00:17:54,340 --> 00:18:04,150
and the two fundamental decorators are

00:17:58,200 --> 00:18:07,540
component and view and component has

00:18:04,150 --> 00:18:09,820
properties in this case it's fairly

00:18:07,540 --> 00:18:13,600
simple it just has a selector so this is

00:18:09,820 --> 00:18:17,850
telling angular 2 where to inject this

00:18:13,600 --> 00:18:23,640
particular component in the screen and

00:18:17,850 --> 00:18:23,640
and then there is a view directive

00:18:23,890 --> 00:18:33,490
that points to either an inline template

00:18:29,160 --> 00:18:35,470
so it would just be HTML that would be

00:18:33,490 --> 00:18:37,240
right here or you can point to an

00:18:35,470 --> 00:18:39,490
external file and in this case I'm

00:18:37,240 --> 00:18:43,090
putting to an external file and then

00:18:39,490 --> 00:18:45,160
there are imports of directives in this

00:18:43,090 --> 00:18:48,130
case the router link that part of the

00:18:45,160 --> 00:18:51,550
routing configuration and the component

00:18:48,130 --> 00:18:55,360
itself just has is a very simple class

00:18:51,550 --> 00:18:57,310
there's my name which is a string we're

00:18:55,360 --> 00:18:59,590
doing some dependency injection here

00:18:57,310 --> 00:19:03,130
with the shopping cart service and that

00:18:59,590 --> 00:19:05,830
we're assigning the name to my name and

00:19:03,130 --> 00:19:10,020
so this is what you then see on the

00:19:05,830 --> 00:19:13,900
screen let me get to the right place and

00:19:10,020 --> 00:19:16,300
it it's able to display my name and then

00:19:13,900 --> 00:19:18,910
this is the router link so this is sort

00:19:16,300 --> 00:19:20,950
of the fundamental building block for an

00:19:18,910 --> 00:19:24,490
angular application this is what an

00:19:20,950 --> 00:19:28,770
angular component looks like before we

00:19:24,490 --> 00:19:28,770
move on I'll show you the service

00:19:31,980 --> 00:19:37,650
and that service is actually just a

00:19:34,200 --> 00:19:40,080
simple class that's being exported and

00:19:37,650 --> 00:19:42,720
it has some basic information about me

00:19:40,080 --> 00:19:46,049
obviously the production application you

00:19:42,720 --> 00:19:48,090
you'd have a login and this information

00:19:46,049 --> 00:19:50,520
would be populated from that and then

00:19:48,090 --> 00:19:52,260
there's a ray of rose bushes which are

00:19:50,520 --> 00:19:59,790
what your are your selections as you

00:19:52,260 --> 00:20:03,090
navigate through the application now I

00:19:59,790 --> 00:20:05,040
think it makes sense since we sort of

00:20:03,090 --> 00:20:08,010
had the foundations for understanding

00:20:05,040 --> 00:20:15,530
what an angular component is to take a

00:20:08,010 --> 00:20:18,450
look at the at the parent component and

00:20:15,530 --> 00:20:21,440
the index that's at the foundation of

00:20:18,450 --> 00:20:24,650
the application and you have some

00:20:21,440 --> 00:20:27,990
imports here obviously node modules

00:20:24,650 --> 00:20:32,130
system Jas is being used to load the

00:20:27,990 --> 00:20:35,190
modules in es5 and then you have the

00:20:32,130 --> 00:20:40,549
single tag myep which then loads the

00:20:35,190 --> 00:20:45,080
whole application and behind that then

00:20:40,549 --> 00:20:45,080
you have MPs

00:20:47,800 --> 00:20:54,370
and that then is bringing in not only

00:20:51,480 --> 00:20:56,260
the component in view like we saw a few

00:20:54,370 --> 00:21:00,010
minutes earlier it's bringing in some

00:20:56,260 --> 00:21:03,280
other things bootstrap it's bringing in

00:21:00,010 --> 00:21:05,110
the route providers for routing and then

00:21:03,280 --> 00:21:07,060
it's also importing each of the

00:21:05,110 --> 00:21:10,570
individual components of welcome play

00:21:07,060 --> 00:21:12,640
and pick and purchase are all components

00:21:10,570 --> 00:21:15,370
in our application and then those are

00:21:12,640 --> 00:21:18,160
bound to this component so this is the

00:21:15,370 --> 00:21:22,330
parent component myep is the selector

00:21:18,160 --> 00:21:24,790
that you saw on the on the HTML screen i

00:21:22,330 --> 00:21:29,950
just showed and then itself has a

00:21:24,790 --> 00:21:31,720
template which is nav HTML and we can

00:21:29,950 --> 00:21:33,160
take a look at that in just a minute but

00:21:31,720 --> 00:21:34,660
here's how you do the route

00:21:33,160 --> 00:21:36,610
configuration and it's pretty

00:21:34,660 --> 00:21:39,850
straightforward I really enjoyed using

00:21:36,610 --> 00:21:41,740
this this is component driven rowdy and

00:21:39,850 --> 00:21:44,320
so all you have to do is set up your

00:21:41,740 --> 00:21:47,950
routing once you've imported your

00:21:44,320 --> 00:21:51,310
components it simply doesn't get a path

00:21:47,950 --> 00:21:52,930
for each of those identify which

00:21:51,310 --> 00:21:54,910
components you're using and you have an

00:21:52,930 --> 00:21:58,480
optional alias that you can add to it

00:21:54,910 --> 00:22:01,600
and so with that the router is then

00:21:58,480 --> 00:22:04,840
injected into the display component and

00:22:01,600 --> 00:22:07,090
then then bound as part of the

00:22:04,840 --> 00:22:09,460
bootstrapping of the application and

00:22:07,090 --> 00:22:12,520
then there's a location strategy that's

00:22:09,460 --> 00:22:14,590
added that just hit adds a hashtag to

00:22:12,520 --> 00:22:16,420
the navigation as you as you work

00:22:14,590 --> 00:22:18,880
through the system so one nice thing

00:22:16,420 --> 00:22:22,690
about the routing here is that it's

00:22:18,880 --> 00:22:26,860
fully baked into the to the component

00:22:22,690 --> 00:22:28,870
design of angular 2 and it's not an

00:22:26,860 --> 00:22:30,970
afterthought it flows throughout the

00:22:28,870 --> 00:22:32,470
application and there are certainly ways

00:22:30,970 --> 00:22:35,970
that you could take it further you can

00:22:32,470 --> 00:22:40,500
do nested views and different routing

00:22:35,970 --> 00:22:46,420
from within parent and child components

00:22:40,500 --> 00:22:50,770
the next screen is the plan screen and

00:22:46,420 --> 00:22:53,890
that brings us to just a little bit more

00:22:50,770 --> 00:22:56,090
in the way of angular specific markup

00:22:53,890 --> 00:23:04,549
and

00:22:56,090 --> 00:23:08,659
as you may recall the the screen that's

00:23:04,549 --> 00:23:10,429
here has a couple dropdowns that allow

00:23:08,659 --> 00:23:13,520
for calculation of square footage and

00:23:10,429 --> 00:23:16,610
then those are met to these items that

00:23:13,520 --> 00:23:20,870
appear on the screen and so if you look

00:23:16,610 --> 00:23:23,980
at this trying to get this so it shows

00:23:20,870 --> 00:23:23,980
on the screen

00:23:35,450 --> 00:23:41,219
yeah this is a little easier to see

00:23:38,509 --> 00:23:44,129
you'll begin to see that there are some

00:23:41,219 --> 00:23:47,369
unusual tags in here and this first one

00:23:44,129 --> 00:23:49,320
is is change and that's a parenthesis so

00:23:47,369 --> 00:23:53,159
you're starting to see the syntax for

00:23:49,320 --> 00:23:55,469
angular 2 binding that's that's a vent

00:23:53,159 --> 00:23:57,809
binding so when you see a parenthesis

00:23:55,469 --> 00:24:00,419
you'll see an event that's bound to it

00:23:57,809 --> 00:24:03,059
so this case it's set with and then

00:24:00,419 --> 00:24:06,659
there is also something called property

00:24:03,059 --> 00:24:10,049
binding which is but finds values to

00:24:06,659 --> 00:24:15,779
properties and in this case it's it in

00:24:10,049 --> 00:24:18,749
that case it uses square braces and in

00:24:15,779 --> 00:24:22,169
this case we're binding the selection of

00:24:18,749 --> 00:24:24,690
the item in the drop-down and we're all

00:24:22,169 --> 00:24:28,229
you'll also see something like this ng4

00:24:24,690 --> 00:24:31,589
which is an angular 2 directive and

00:24:28,229 --> 00:24:35,190
that's been imported into this

00:24:31,589 --> 00:24:37,859
particular module and that is simply a

00:24:35,190 --> 00:24:39,929
for loop it seems it should seem pretty

00:24:37,859 --> 00:24:42,330
obvious and there are longhand ways to

00:24:39,929 --> 00:24:46,349
do this but this is the shorthand that

00:24:42,330 --> 00:24:47,820
angular is developed for for these

00:24:46,349 --> 00:24:51,899
particular directives so you'll see

00:24:47,820 --> 00:24:55,499
another repeat of that and then some

00:24:51,899 --> 00:24:57,210
binding of the values the sort of

00:24:55,499 --> 00:24:59,820
mustache like syntax should look

00:24:57,210 --> 00:25:01,799
familiar to folks there's some if logic

00:24:59,820 --> 00:25:04,200
here that displays it only if the

00:25:01,799 --> 00:25:06,809
calculation is correct and then at the

00:25:04,200 --> 00:25:10,499
very bottom you have your router link

00:25:06,809 --> 00:25:13,289
which again is fairly straightforward it

00:25:10,499 --> 00:25:17,940
just points to a sister or sibling

00:25:13,289 --> 00:25:22,710
component of the of this component for

00:25:17,940 --> 00:25:25,669
navigation now if you look at the code

00:25:22,710 --> 00:25:25,669
behind here

00:25:31,149 --> 00:25:37,599
you'll see that it's pretty

00:25:36,070 --> 00:25:39,909
straightforward again we're injecting

00:25:37,599 --> 00:25:44,950
the shopping cart service a router leg

00:25:39,909 --> 00:25:46,839
for directives and then we have a series

00:25:44,950 --> 00:25:48,369
of methods set with that links that

00:25:46,839 --> 00:25:49,809
square footage all of which do the

00:25:48,369 --> 00:25:51,999
calculations that you saw on the screen

00:25:49,809 --> 00:25:53,889
now the important thing to understand

00:25:51,999 --> 00:25:55,690
here is not the simple JavaScript that

00:25:53,889 --> 00:25:58,719
I've created but it's to understand the

00:25:55,690 --> 00:26:01,479
contract between the framework and the

00:25:58,719 --> 00:26:05,919
developer out of the box as i said

00:26:01,479 --> 00:26:08,559
earlier angular only at this point

00:26:05,919 --> 00:26:09,969
supports one-way data by you will see

00:26:08,559 --> 00:26:11,739
some options that you have to do

00:26:09,969 --> 00:26:13,989
essentially two-way data binding as we

00:26:11,739 --> 00:26:16,809
go forward but at this point the

00:26:13,989 --> 00:26:18,749
contract between the developer and the

00:26:16,809 --> 00:26:21,700
framework is that the framework will

00:26:18,749 --> 00:26:23,559
take care of the view and the display so

00:26:21,700 --> 00:26:25,479
we don't need to do anything to update

00:26:23,559 --> 00:26:27,879
the view as you saw on the screen that

00:26:25,479 --> 00:26:30,399
we're looking at but it is up to the

00:26:27,879 --> 00:26:34,419
developer to handle the events that are

00:26:30,399 --> 00:26:37,210
generated by the users and so you've got

00:26:34,419 --> 00:26:39,570
this code which may seem a little

00:26:37,210 --> 00:26:46,539
different than the D angular 1 approach

00:26:39,570 --> 00:26:51,269
so moving on to the purchase screen we

00:26:46,539 --> 00:26:55,509
have a little more flick complexity here

00:26:51,269 --> 00:26:58,089
and as you recall this one add a little

00:26:55,509 --> 00:27:00,909
more in the way of things going on

00:26:58,089 --> 00:27:03,219
cascading dropdowns running totals and

00:27:00,909 --> 00:27:09,869
the ability head and remove components

00:27:03,219 --> 00:27:09,869
and so on this screen I go to the HTML

00:27:16,429 --> 00:27:21,549
you'll start to see some I'm sorry I

00:27:19,279 --> 00:27:21,549
Monroe

00:27:28,140 --> 00:27:39,540
you'll start to see some additional this

00:27:37,560 --> 00:27:45,080
is where I want to be you'll start to

00:27:39,540 --> 00:27:47,160
see some additional tags that that are

00:27:45,080 --> 00:27:51,000
similar to the ones on the previous

00:27:47,160 --> 00:27:54,060
screen but we've added a few more there

00:27:51,000 --> 00:27:57,030
is something here that looks very

00:27:54,060 --> 00:27:59,780
different and that is we now have a

00:27:57,030 --> 00:28:03,210
combination of brackets and parentheses

00:27:59,780 --> 00:28:05,070
and we're using something called ng

00:28:03,210 --> 00:28:07,110
model which actually comes from the form

00:28:05,070 --> 00:28:11,310
directives in angular but can be used

00:28:07,110 --> 00:28:13,350
outside of a form and that is actually

00:28:11,310 --> 00:28:16,620
doing the equivalent of two-way

00:28:13,350 --> 00:28:21,660
data-binding so if you have a model

00:28:16,620 --> 00:28:23,940
behind this and you attach this ng model

00:28:21,660 --> 00:28:26,880
to it as I did here with the Rose

00:28:23,940 --> 00:28:28,590
category then what you're doing is

00:28:26,880 --> 00:28:31,110
you're essentially doing two-way

00:28:28,590 --> 00:28:33,330
data-binding now this is not the old way

00:28:31,110 --> 00:28:35,520
of doing two-way data-binding there's

00:28:33,330 --> 00:28:38,780
still just one-way data binding in terms

00:28:35,520 --> 00:28:41,940
of the page recycling in the page flow

00:28:38,780 --> 00:28:43,860
but angular is smart enough to know that

00:28:41,940 --> 00:28:46,380
in these scenarios what you want to do

00:28:43,860 --> 00:28:48,510
is update the model with the selection

00:28:46,380 --> 00:28:52,580
and so it provides some syntactic sugar

00:28:48,510 --> 00:28:55,050
to do that and then you have the

00:28:52,580 --> 00:28:58,080
brackets or I'm sorry the parentheses

00:28:55,050 --> 00:29:00,150
for change events the binding of values

00:28:58,080 --> 00:29:01,680
as we saw in the previous screen one

00:29:00,150 --> 00:29:03,900
thing that's really kind of nice here is

00:29:01,680 --> 00:29:07,380
that there are pipes available to format

00:29:03,900 --> 00:29:09,000
things very cool that really came in

00:29:07,380 --> 00:29:13,730
handy when I was working on this and

00:29:09,000 --> 00:29:16,290
needed to format my selections and then

00:29:13,730 --> 00:29:18,600
you have another Lake moving you on to

00:29:16,290 --> 00:29:22,410
the next page now when you look at the

00:29:18,600 --> 00:29:27,480
code for this you may be taken back a

00:29:22,410 --> 00:29:29,310
bit because to get this working you know

00:29:27,480 --> 00:29:34,440
there's a fair amount of handling of

00:29:29,310 --> 00:29:36,030
events that had to go on and you know as

00:29:34,440 --> 00:29:37,290
somebody who's done JavaScript

00:29:36,030 --> 00:29:37,750
development over the years this is

00:29:37,290 --> 00:29:41,680
nothing

00:29:37,750 --> 00:29:46,360
there's nothing dramatic about this but

00:29:41,680 --> 00:29:48,850
the fact is that you know this is part

00:29:46,360 --> 00:29:53,110
of the contract as I mentioned a minute

00:29:48,850 --> 00:29:55,900
ago with angular 2 that it's incumbent

00:29:53,110 --> 00:29:58,870
upon the developer to actually code the

00:29:55,900 --> 00:30:01,060
events now having said that in some ways

00:29:58,870 --> 00:30:03,940
I sort of need to take that back when I

00:30:01,060 --> 00:30:05,290
get to this final screen here which is

00:30:03,940 --> 00:30:09,760
the screen where you're completing your

00:30:05,290 --> 00:30:12,190
purchase because this screen unlike the

00:30:09,760 --> 00:30:16,140
others is actually using angular forms

00:30:12,190 --> 00:30:18,430
and so when you take a look at this

00:30:16,140 --> 00:30:20,980
you'll see something a little bit

00:30:18,430 --> 00:30:25,860
different we've got to obviously got a

00:30:20,980 --> 00:30:32,130
form tag that has an NG submit on it

00:30:25,860 --> 00:30:36,100
this pound sign is a local variable that

00:30:32,130 --> 00:30:37,600
that sets the value of the form and then

00:30:36,100 --> 00:30:41,910
on each of the input fields you have

00:30:37,600 --> 00:30:45,580
something called ng control in ng model

00:30:41,910 --> 00:30:49,300
that are being bound to the controls on

00:30:45,580 --> 00:30:52,180
the screen and and then there are the

00:30:49,300 --> 00:30:54,100
obvious things where you you've got the

00:30:52,180 --> 00:30:57,880
values first name last name and so forth

00:30:54,100 --> 00:31:01,390
that are bound to the bottle and it's

00:30:57,880 --> 00:31:03,820
using this ng model syntax which is

00:31:01,390 --> 00:31:07,000
actually giving you the benefits of

00:31:03,820 --> 00:31:08,860
two-way binding and one other thing to

00:31:07,000 --> 00:31:11,350
notice is that there's a custom element

00:31:08,860 --> 00:31:14,530
on this screen show here that's actually

00:31:11,350 --> 00:31:17,080
bound to another component that will be

00:31:14,530 --> 00:31:19,960
passed certain values and then in that

00:31:17,080 --> 00:31:22,450
case it will display the air screens

00:31:19,960 --> 00:31:25,960
that we should error displays that we

00:31:22,450 --> 00:31:30,210
saw earlier but the good news is when

00:31:25,960 --> 00:31:30,210
you take a look at the code behind here

00:31:30,480 --> 00:31:36,250
you see a lot less in fact this is just

00:31:34,390 --> 00:31:37,870
a calculation that I'm running from the

00:31:36,250 --> 00:31:40,900
previous screen to calculate the total

00:31:37,870 --> 00:31:41,710
amount and that's pretty much it in

00:31:40,900 --> 00:31:47,470
terms of the

00:31:41,710 --> 00:31:52,480
you know the the component itself and so

00:31:47,470 --> 00:31:56,529
this is what angular 2 provides for the

00:31:52,480 --> 00:31:59,200
common sort of forms / data needs of

00:31:56,529 --> 00:32:02,559
most applications and so increasingly

00:31:59,200 --> 00:32:04,690
you'll see that you'll be able to use

00:32:02,559 --> 00:32:06,580
this in a way that feels comfortable

00:32:04,690 --> 00:32:11,620
from the standpoint of being able to

00:32:06,580 --> 00:32:14,110
write less code and do more do more of

00:32:11,620 --> 00:32:17,020
the root development of your application

00:32:14,110 --> 00:32:19,840
and in the I think I've got a couple

00:32:17,020 --> 00:32:24,669
minutes left here and why don't we go

00:32:19,840 --> 00:32:26,559
back to the slides and just talk a

00:32:24,669 --> 00:32:34,090
little bit about what's next for angular

00:32:26,559 --> 00:32:36,309
2 I angular 2 and it's released it's

00:32:34,090 --> 00:32:38,860
sort of proceeding in stages and I would

00:32:36,309 --> 00:32:41,380
say there are three stages that are in

00:32:38,860 --> 00:32:45,279
the short term intermediate in somewhat

00:32:41,380 --> 00:32:48,929
longer term in the first is finishing

00:32:45,279 --> 00:32:50,950
the core doing some API sugaring

00:32:48,929 --> 00:32:53,500
performance improvements and

00:32:50,950 --> 00:32:56,919
documentation documentation is sorely

00:32:53,500 --> 00:32:59,049
lacking trust me on that one this is all

00:32:56,919 --> 00:33:01,210
stuff that's pretty close to completion

00:32:59,049 --> 00:33:04,299
or at least the angular team promises it

00:33:01,210 --> 00:33:06,730
to us we haven't seen all of it yeah but

00:33:04,299 --> 00:33:09,220
there I think very close to finishing

00:33:06,730 --> 00:33:10,690
this off and then releasing a beta and I

00:33:09,220 --> 00:33:14,289
would think the beta might come out

00:33:10,690 --> 00:33:18,270
within the next month then the next

00:33:14,289 --> 00:33:21,700
stage is migration support animation

00:33:18,270 --> 00:33:24,460
bringing in material design command-line

00:33:21,700 --> 00:33:26,200
interface it's a little clunky to get up

00:33:24,460 --> 00:33:29,230
and running with angular 2 right now

00:33:26,200 --> 00:33:31,120
this i would say it will not be in the

00:33:29,230 --> 00:33:34,809
initial beta though there is material

00:33:31,120 --> 00:33:38,169
out on the github site and on the

00:33:34,809 --> 00:33:41,679
angular site about how to migrate from

00:33:38,169 --> 00:33:44,380
one to two and as I said earlier you can

00:33:41,679 --> 00:33:49,029
actually run angular 1 and 2 together

00:33:44,380 --> 00:33:51,760
side by side at this point then there's

00:33:49,029 --> 00:33:53,520
another level that goes beyond what

00:33:51,760 --> 00:33:57,590
we've been discussing in that

00:33:53,520 --> 00:34:01,230
involve server-side rendering native

00:33:57,590 --> 00:34:04,740
support so that things like react native

00:34:01,230 --> 00:34:06,900
can be used with angular 2 and running

00:34:04,740 --> 00:34:09,840
angular 2 with a web worker and that is

00:34:06,900 --> 00:34:13,159
stuff that was announced near the end of

00:34:09,840 --> 00:34:16,169
the summer but from what I can tell

00:34:13,159 --> 00:34:18,659
there hasn't been there's not readily

00:34:16,169 --> 00:34:20,520
available code that's been released I

00:34:18,659 --> 00:34:22,980
think you can do server-side rendering I

00:34:20,520 --> 00:34:24,960
think there was a workshop on that that

00:34:22,980 --> 00:34:29,010
was done a while back but that is

00:34:24,960 --> 00:34:32,340
probably what will be the last part of

00:34:29,010 --> 00:34:34,380
this transition into angular 2 I am not

00:34:32,340 --> 00:34:36,720
sure if that will actually be part of

00:34:34,380 --> 00:34:39,060
the initial angular release I think you

00:34:36,720 --> 00:34:40,470
might get one and two and perhaps not

00:34:39,060 --> 00:34:44,810
three but we'll just have to wait and

00:34:40,470 --> 00:34:46,800
see and so when does angular ship well I

00:34:44,810 --> 00:34:49,350
think when they first came out with the

00:34:46,800 --> 00:34:51,450
announcement it was late 2015 it's

00:34:49,350 --> 00:34:55,850
definitely not going to be late 2015 I'm

00:34:51,450 --> 00:34:58,500
thinking the first quarter of 2016 and

00:34:55,850 --> 00:35:02,190
and that would be ambitious so we might

00:34:58,500 --> 00:35:08,010
see it in the first six months of 2016

00:35:02,190 --> 00:35:10,110
and just to sum up what we've learned

00:35:08,010 --> 00:35:14,160
about angular 2 first of all its mobile

00:35:10,110 --> 00:35:16,530
first design with performance as a key

00:35:14,160 --> 00:35:19,620
consideration support for evergreen

00:35:16,530 --> 00:35:23,820
browsers it's built on emerging

00:35:19,620 --> 00:35:27,060
standards web components es2015 and

00:35:23,820 --> 00:35:31,140
typescript there's improved performance

00:35:27,060 --> 00:35:32,760
and I hope that it's easier to learn and

00:35:31,140 --> 00:35:34,320
I hope this demonstration is perhaps

00:35:32,760 --> 00:35:36,000
showed you some of the ease with which

00:35:34,320 --> 00:35:38,130
you can get into this I would have to

00:35:36,000 --> 00:35:40,650
say that if you're working with an alpha

00:35:38,130 --> 00:35:43,590
right now it's it can be painful because

00:35:40,650 --> 00:35:46,230
things change out from underneath you in

00:35:43,590 --> 00:35:49,130
a moment's notice but the goal is to

00:35:46,230 --> 00:35:51,630
make it easier to learn and comprehend

00:35:49,130 --> 00:35:54,810
minimize the excess that may have

00:35:51,630 --> 00:35:57,540
developed within angular 1 and crossed

00:35:54,810 --> 00:35:59,970
and built up over the years and focus it

00:35:57,540 --> 00:36:02,700
on components and of course it uses

00:35:59,970 --> 00:36:03,760
typescript so as far as resources are

00:36:02,700 --> 00:36:06,310
concerned

00:36:03,760 --> 00:36:08,260
you go to angular angular on their good

00:36:06,310 --> 00:36:12,310
hub repository that's where the code for

00:36:08,260 --> 00:36:16,090
angular tomb is the website for angular

00:36:12,310 --> 00:36:18,610
2 is angular 20 that's actually pretty

00:36:16,090 --> 00:36:21,720
much out of date at this point they've

00:36:18,610 --> 00:36:24,460
got to update it and then here are the

00:36:21,720 --> 00:36:27,790
here's the github repository for the

00:36:24,460 --> 00:36:29,770
presentation that I did today and I hope

00:36:27,790 --> 00:36:31,720
in the short period of time that we've

00:36:29,770 --> 00:36:34,230
been together that you've at least got

00:36:31,720 --> 00:36:36,700
the sense for what makes up angular 2

00:36:34,230 --> 00:36:40,120
promise that it holds for development

00:36:36,700 --> 00:36:42,040
going forward and i invite you to sort

00:36:40,120 --> 00:36:43,810
of jump in and give it a try it's

00:36:42,040 --> 00:36:47,500
reaching a point where it's stable

00:36:43,810 --> 00:36:50,980
enough to be able to do that and I think

00:36:47,500 --> 00:36:53,280
we've run out of time yep so if you have

00:36:50,980 --> 00:36:53,280

YouTube URL: https://www.youtube.com/watch?v=DMKs6iEVCEM


