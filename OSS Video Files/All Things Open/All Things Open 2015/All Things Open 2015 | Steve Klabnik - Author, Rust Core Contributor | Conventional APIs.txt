Title: All Things Open 2015 | Steve Klabnik - Author, Rust Core Contributor | Conventional APIs
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,759 --> 00:00:09,570
everybody I'm Steve not Trek thank you

00:00:07,830 --> 00:00:11,040
so much for having me and for attending

00:00:09,570 --> 00:00:12,990
my talk it's always great as a speaker

00:00:11,040 --> 00:00:17,820
to have a full room so thank you for

00:00:12,990 --> 00:00:20,220
your attention I live in Brooklyn so my

00:00:17,820 --> 00:00:21,600
my notes are a mole sky so I'll largely

00:00:20,220 --> 00:00:23,250
be like reading out of them I think I'm

00:00:21,600 --> 00:00:25,470
like legally required to have a mold guy

00:00:23,250 --> 00:00:26,760
because I live in Brooklyn so if you

00:00:25,470 --> 00:00:29,130
can't see the screen don't worry too

00:00:26,760 --> 00:00:30,660
much if mostly just like big it's like

00:00:29,130 --> 00:00:34,500
pictures more than like a bunch of small

00:00:30,660 --> 00:00:36,719
text so don't stress it too much i'm

00:00:34,500 --> 00:00:38,010
here today to talk to you this time i'm

00:00:36,719 --> 00:00:39,300
giving another talk in like an hour and

00:00:38,010 --> 00:00:42,210
a half or something this talk is about

00:00:39,300 --> 00:00:44,040
JSON API which is a specification that I

00:00:42,210 --> 00:00:45,840
co-authored with you two cats originally

00:00:44,040 --> 00:00:49,620
now we have a couple other people

00:00:45,840 --> 00:00:51,030
involved but first I'm gonna get a

00:00:49,620 --> 00:00:52,710
couple of couple of things out of the

00:00:51,030 --> 00:00:54,930
way there's two things that I love about

00:00:52,710 --> 00:00:57,629
the JSON API project and i like to call

00:00:54,930 --> 00:00:59,489
them full marketing features so the

00:00:57,629 --> 00:01:01,530
first troll marketing feature is the

00:00:59,489 --> 00:01:02,820
name itself there's a certain kind of

00:01:01,530 --> 00:01:04,830
developed where that gets really really

00:01:02,820 --> 00:01:06,930
mad that I names my specification in a

00:01:04,830 --> 00:01:08,900
very generic fashion and so they talk

00:01:06,930 --> 00:01:11,100
about it endlessly which is a good thing

00:01:08,900 --> 00:01:13,200
so like I have one friend of mine is

00:01:11,100 --> 00:01:15,390
like you made the most difficult spec

00:01:13,200 --> 00:01:18,270
ever to Google oh my god I'm gonna

00:01:15,390 --> 00:01:20,549
complain about it constantly so no no no

00:01:18,270 --> 00:01:22,080
you know nothing is bad press right so

00:01:20,549 --> 00:01:24,119
that's the first thing the second one is

00:01:22,080 --> 00:01:27,689
is if you'll notice the logo is not

00:01:24,119 --> 00:01:30,240
actually valid JSON you need drinks

00:01:27,689 --> 00:01:32,310
coats for the strings and the problem is

00:01:30,240 --> 00:01:34,170
is that it just like looked way worse so

00:01:32,310 --> 00:01:36,000
we took the quotes out because like

00:01:34,170 --> 00:01:37,829
that's a nicer looking logo but it is

00:01:36,000 --> 00:01:39,630
kind of ironic that like about we're not

00:01:37,829 --> 00:01:41,939
following the JSON specification in or a

00:01:39,630 --> 00:01:46,610
logo so those are that's like the Easter

00:01:41,939 --> 00:01:51,210
egg that I would share with people ok so

00:01:46,610 --> 00:01:53,460
this specification basically the idea is

00:01:51,210 --> 00:01:55,619
this who all has argued with other

00:01:53,460 --> 00:01:58,320
people on their team about the way that

00:01:55,619 --> 00:02:02,790
you should be using HTTP or your respond

00:01:58,320 --> 00:02:04,350
in an API before right so that's the way

00:02:02,790 --> 00:02:05,940
that like pretty much every job I've

00:02:04,350 --> 00:02:07,920
ever had has mostly been arguing on the

00:02:05,940 --> 00:02:10,410
developers about like the format of some

00:02:07,920 --> 00:02:12,600
strings and that's sort of like

00:02:10,410 --> 00:02:14,310
satisfying and some sort of visceral way

00:02:12,600 --> 00:02:16,050
like we keep doing this because we get

00:02:14,310 --> 00:02:18,180
something out of it but frankly is a

00:02:16,050 --> 00:02:19,830
giant waste of time right so like

00:02:18,180 --> 00:02:22,860
there's much much better things you

00:02:19,830 --> 00:02:24,450
could do with your time then argue about

00:02:22,860 --> 00:02:27,630
whether or not you should be using an

00:02:24,450 --> 00:02:30,209
array or a hash here or like double

00:02:27,630 --> 00:02:31,830
quotes I mean in JSON just you know

00:02:30,209 --> 00:02:33,330
other day I've had an endless number of

00:02:31,830 --> 00:02:34,709
style arguments and endless number of

00:02:33,330 --> 00:02:36,840
software platforms right double quotes

00:02:34,709 --> 00:02:38,610
or single quotes and tab sources spaces

00:02:36,840 --> 00:02:41,430
obviously its paces you're just wrong

00:02:38,610 --> 00:02:43,200
otherwise but like the point is we feel

00:02:41,430 --> 00:02:44,790
strongly about these things and this

00:02:43,200 --> 00:02:49,590
leads to this phenomenon that we call

00:02:44,790 --> 00:02:52,769
bike shedding and so this term comes

00:02:49,590 --> 00:02:54,630
from an old usenet post which usenet is

00:02:52,769 --> 00:02:56,160
like back when the internet was really

00:02:54,630 --> 00:02:58,920
free and you emailed people instead of

00:02:56,160 --> 00:03:01,530
like using Twitter or whatever but Paul

00:02:58,920 --> 00:03:03,480
henan camp wrote this blog post called a

00:03:01,530 --> 00:03:06,209
bike shed any color will do on greener

00:03:03,480 --> 00:03:09,209
grass and basically he describes this

00:03:06,209 --> 00:03:10,950
phenomenon by which basically if you're

00:03:09,209 --> 00:03:14,190
building a bike shed the actual building

00:03:10,950 --> 00:03:16,410
work is the hard part but it's easier to

00:03:14,190 --> 00:03:18,150
do things like argue over what color the

00:03:16,410 --> 00:03:20,040
bike shed should be painted so the idea

00:03:18,150 --> 00:03:22,079
of like shedding it's technically called

00:03:20,040 --> 00:03:23,670
Parkinson's Law of triviality which

00:03:22,079 --> 00:03:27,480
again now I'm bike shedding the name of

00:03:23,670 --> 00:03:29,940
bike shedding it means that the more

00:03:27,480 --> 00:03:31,709
trivial of a change the more passionate

00:03:29,940 --> 00:03:33,930
people will feel about it because anyone

00:03:31,709 --> 00:03:36,720
can have an opinion about you know the

00:03:33,930 --> 00:03:38,400
style of how you format your JSON that's

00:03:36,720 --> 00:03:41,130
much easier it's much harder to argue

00:03:38,400 --> 00:03:42,299
about like Colonel drivers or you know

00:03:41,130 --> 00:03:44,579
whatever else like something is very

00:03:42,299 --> 00:03:46,739
very deep in a technical sense and so

00:03:44,579 --> 00:03:49,620
this is a reproduction of his email and

00:03:46,739 --> 00:03:51,720
discussing this phenomenon and it's at

00:03:49,620 --> 00:03:56,489
bike shed to org and what's amazing is

00:03:51,720 --> 00:03:58,890
i'll hit refresh the CSS changes

00:03:56,489 --> 00:04:01,019
randomly the background every time you

00:03:58,890 --> 00:04:02,730
love the page so i love that the other

00:04:01,019 --> 00:04:04,410
thing i'm going to do a little i would

00:04:02,730 --> 00:04:07,410
I've given this talk a couple of times

00:04:04,410 --> 00:04:09,690
before in the past two to show off how

00:04:07,410 --> 00:04:10,000
pervasive bike shedding is I'm going to

00:04:09,690 --> 00:04:12,160
goo

00:04:10,000 --> 00:04:14,020
search for bike shedding like when I was

00:04:12,160 --> 00:04:15,880
putting the slides together for the

00:04:14,020 --> 00:04:17,799
first version of this talk i was like i

00:04:15,880 --> 00:04:19,329
need a picture of a bike shed and

00:04:17,799 --> 00:04:21,220
unfortunately Google's kind of ruined my

00:04:19,329 --> 00:04:22,270
joke a little bit so this photo right

00:04:21,220 --> 00:04:25,660
here let me know they're gonna make it

00:04:22,270 --> 00:04:28,120
bigger yeah a little bit there so this

00:04:25,660 --> 00:04:29,530
photo used to be the number one hit on

00:04:28,120 --> 00:04:30,940
Google for bike shedding and I was like

00:04:29,530 --> 00:04:32,500
you know this doesn't really look like a

00:04:30,940 --> 00:04:34,120
bike shed at all as what i thought to

00:04:32,500 --> 00:04:38,050
myself and I went oh my god I'm doing it

00:04:34,120 --> 00:04:39,460
again so now now Google's fixed it this

00:04:38,050 --> 00:04:40,990
one looks much more like what i expect

00:04:39,460 --> 00:04:41,980
up i said to be but the whole point is

00:04:40,990 --> 00:04:43,210
that we shouldn't be spending our time

00:04:41,980 --> 00:04:44,500
arguing over what the bike shed looks

00:04:43,210 --> 00:04:48,970
like we should be spending our time

00:04:44,500 --> 00:04:51,100
building stuff and so i'll give you a

00:04:48,970 --> 00:04:53,020
little bit of history before i talk

00:04:51,100 --> 00:04:55,660
about the specifics of the spec but

00:04:53,020 --> 00:04:56,860
basically i have done a lot of work in

00:04:55,660 --> 00:04:59,110
the Ruby world most of my professional

00:04:56,860 --> 00:05:01,600
work is in Ruby I used to have commit to

00:04:59,110 --> 00:05:05,169
ruby on rails I literally have a ruby

00:05:01,600 --> 00:05:07,510
tattooed on my body also a pro camel but

00:05:05,169 --> 00:05:10,090
I is doing all this work on Rails and

00:05:07,510 --> 00:05:13,270
rails has been one of the best and worst

00:05:10,090 --> 00:05:16,660
things to ever happen to rest dare I

00:05:13,270 --> 00:05:18,160
utter those words because it sort of

00:05:16,660 --> 00:05:20,110
gave this impression that we have to

00:05:18,160 --> 00:05:22,690
build things in a certain way but it

00:05:20,110 --> 00:05:24,820
like did it only halfway so people care

00:05:22,690 --> 00:05:26,770
about URLs but not about the structure

00:05:24,820 --> 00:05:28,600
of your JSON or like anything beyond

00:05:26,770 --> 00:05:31,660
that and I think it was really important

00:05:28,600 --> 00:05:34,060
it taught a lot of people that like we

00:05:31,660 --> 00:05:35,200
used to hear a long time ago in the API

00:05:34,060 --> 00:05:37,720
development community that like

00:05:35,200 --> 00:05:40,780
developers aren't smart enough to know

00:05:37,720 --> 00:05:42,430
more than get and post so don't even

00:05:40,780 --> 00:05:45,750
worry about these other HTTP verbs and

00:05:42,430 --> 00:05:48,400
this is something I am relatively young

00:05:45,750 --> 00:05:50,440
but I've heard this over and over

00:05:48,400 --> 00:05:52,870
throughout my short career where people

00:05:50,440 --> 00:05:54,970
say like oh but the average developer is

00:05:52,870 --> 00:05:56,680
too dumb to get X and then like five

00:05:54,970 --> 00:05:59,770
years later x becomes the norm that

00:05:56,680 --> 00:06:01,120
every developer knows so nowadays people

00:05:59,770 --> 00:06:05,620
are very familiar that there are more

00:06:01,120 --> 00:06:06,760
HTTP verbs then get and post and if they

00:06:05,620 --> 00:06:09,040
know about two more of them but there's

00:06:06,760 --> 00:06:11,380
actually a bunch more and so we're sort

00:06:09,040 --> 00:06:13,360
of like to collectively we are all

00:06:11,380 --> 00:06:13,910
learning more and more about api's as we

00:06:13,360 --> 00:06:16,520
bill

00:06:13,910 --> 00:06:19,100
and build a more and more scale and so

00:06:16,520 --> 00:06:22,010
the problem about this is that if you

00:06:19,100 --> 00:06:24,170
have spent time studying the massive

00:06:22,010 --> 00:06:26,480
HTTP specification and by now we have

00:06:24,170 --> 00:06:29,420
this new thing that was called H TPB is

00:06:26,480 --> 00:06:30,980
but is sense actually become real RFC so

00:06:29,420 --> 00:06:33,920
instead of the good old-fashioned single

00:06:30,980 --> 00:06:35,630
HTTP RFC we now have seven of them and

00:06:33,920 --> 00:06:38,390
they're all like twice as long as they

00:06:35,630 --> 00:06:40,910
were before so yeah so if you want to be

00:06:38,390 --> 00:06:42,710
like an HTTP nerd you have to do a lot

00:06:40,910 --> 00:06:44,240
of reading a really boring specification

00:06:42,710 --> 00:06:45,740
work and then you get to enjoy the

00:06:44,240 --> 00:06:46,940
pleasure of arguing with other

00:06:45,740 --> 00:06:49,460
developers about their particular

00:06:46,940 --> 00:06:50,930
interpretation like I was raised very

00:06:49,460 --> 00:06:53,960
Catholic and I'm not religious anymore

00:06:50,930 --> 00:06:55,730
but like arguing over the text of rfcs

00:06:53,960 --> 00:06:57,470
with other people like reminds me of

00:06:55,730 --> 00:06:59,000
like argument where Bible verses like

00:06:57,470 --> 00:07:01,460
this is like but my interpretation of

00:06:59,000 --> 00:07:05,810
what this passage says like fielding 316

00:07:01,460 --> 00:07:08,660
clearly states that like XYZ anyway so

00:07:05,810 --> 00:07:11,090
at the same time as I was doing this

00:07:08,660 --> 00:07:12,620
work in rails and the safety I thing you

00:07:11,090 --> 00:07:14,630
who two cats amongst others we're

00:07:12,620 --> 00:07:17,360
starting this project call amber jas

00:07:14,630 --> 00:07:18,830
which you may have heard of this

00:07:17,360 --> 00:07:20,660
framework for creating ambitious web

00:07:18,830 --> 00:07:21,950
applications Judah was here and gave a

00:07:20,660 --> 00:07:24,860
little bit of talk about amber earlier

00:07:21,950 --> 00:07:26,750
but what he was concerned about you too

00:07:24,860 --> 00:07:28,400
also came out of the Ruby world and he

00:07:26,750 --> 00:07:30,470
was concerned about ember as a

00:07:28,400 --> 00:07:32,810
JavaScript framework being too tied to

00:07:30,470 --> 00:07:35,510
Ruby because you know what good is a

00:07:32,810 --> 00:07:37,160
JavaScript framework if it's specific if

00:07:35,510 --> 00:07:38,390
it's not like back-end agnostic right

00:07:37,160 --> 00:07:39,950
like the whole point of it being on the

00:07:38,390 --> 00:07:41,960
client is that you can use it with any

00:07:39,950 --> 00:07:43,280
server side technology and so we really

00:07:41,960 --> 00:07:44,600
didn't want amber to be tied to rails

00:07:43,280 --> 00:07:48,350
but he hadn't really figure out how to

00:07:44,600 --> 00:07:50,300
accomplish that that yet a four hours of

00:07:48,350 --> 00:07:53,270
argument later I had convinced him that

00:07:50,300 --> 00:07:55,100
what what he needed to do was there's

00:07:53,270 --> 00:07:56,900
this natural boundary between services

00:07:55,100 --> 00:07:58,669
so when you're when you're designing any

00:07:56,900 --> 00:08:00,290
kind of system what really really

00:07:58,669 --> 00:08:01,760
matters is the interface and this

00:08:00,290 --> 00:08:04,640
matters in your source code it matters

00:08:01,760 --> 00:08:06,320
between you know if you have like just a

00:08:04,640 --> 00:08:08,330
front end in a back end or if you have

00:08:06,320 --> 00:08:10,490
like thirty thousand services like is

00:08:08,330 --> 00:08:13,220
cool all these days with the kids and

00:08:10,490 --> 00:08:15,560
such you need to define those interfaces

00:08:13,220 --> 00:08:18,169
so that your stuff actually works some

00:08:15,560 --> 00:08:20,090
of the time and so I was like there's

00:08:18,169 --> 00:08:21,350
this natural boundary between the client

00:08:20,090 --> 00:08:24,650
and the server

00:08:21,350 --> 00:08:26,600
we have a language for that hgp and as

00:08:24,650 --> 00:08:28,090
much as I sometimes don't like JSON it's

00:08:26,600 --> 00:08:30,290
kind of what everybody is using nowadays

00:08:28,090 --> 00:08:32,450
we are really adamant that we're going

00:08:30,290 --> 00:08:34,039
to reinvent the entire XML ecosystem and

00:08:32,450 --> 00:08:35,690
JSON so we're like three quarters of the

00:08:34,039 --> 00:08:38,539
way done with that by now so it's like

00:08:35,690 --> 00:08:40,760
pretty much okay and I was like what the

00:08:38,539 --> 00:08:43,970
problem is is that you want amber to be

00:08:40,760 --> 00:08:45,980
agnostic so we should define the JSON

00:08:43,970 --> 00:08:47,930
that you expect to emit on the server

00:08:45,980 --> 00:08:49,940
side and the JSON that you expect to

00:08:47,930 --> 00:08:51,860
consume on the client side and we have a

00:08:49,940 --> 00:08:54,320
good interface that's what lets you swap

00:08:51,860 --> 00:08:56,510
out components in the system so if we

00:08:54,320 --> 00:08:58,250
have this middle layer well defined you

00:08:56,510 --> 00:08:59,870
could then use a different framework

00:08:58,250 --> 00:09:00,920
instead of Ember on the front end or you

00:08:59,870 --> 00:09:02,540
could use a different framework other

00:09:00,920 --> 00:09:06,110
than rails on the back end and you get

00:09:02,540 --> 00:09:08,000
modularity and this is a positive side

00:09:06,110 --> 00:09:10,970
note out of that we can stop arguing

00:09:08,000 --> 00:09:13,220
over the like sort of it's weird to call

00:09:10,970 --> 00:09:15,050
JSON low-level but like if you're

00:09:13,220 --> 00:09:17,420
building an application the structure of

00:09:15,050 --> 00:09:19,190
you data is mostly a sort of low-level

00:09:17,420 --> 00:09:20,690
detail in the sense that you know you

00:09:19,190 --> 00:09:22,580
may care about certain things because of

00:09:20,690 --> 00:09:24,080
efficiency or whatever but you're

00:09:22,580 --> 00:09:25,730
primarily concerned with building an

00:09:24,080 --> 00:09:28,010
interface on top of whatever data that

00:09:25,730 --> 00:09:29,840
is rather than really truly worrying

00:09:28,010 --> 00:09:30,620
about the exact format of the data some

00:09:29,840 --> 00:09:32,090
people need to worry about that

00:09:30,620 --> 00:09:35,150
obviously there's different roles in an

00:09:32,090 --> 00:09:36,350
organization but like if you're if

00:09:35,150 --> 00:09:37,970
you're the one that's on the front end

00:09:36,350 --> 00:09:39,560
team you don't really want to have to

00:09:37,970 --> 00:09:41,390
stress out about arguing about the way

00:09:39,560 --> 00:09:44,810
that things are structured and I've

00:09:41,390 --> 00:09:46,700
heard from a lot of teams now where like

00:09:44,810 --> 00:09:47,990
people that are originally front-end

00:09:46,700 --> 00:09:49,940
people are starting to learn about back

00:09:47,990 --> 00:09:51,260
end then this becomes like a little bit

00:09:49,940 --> 00:09:53,030
of discordant because the back end

00:09:51,260 --> 00:09:54,110
people are like mad these new people are

00:09:53,030 --> 00:09:56,300
getting involved in what they're doing

00:09:54,110 --> 00:09:58,160
and there's I don't know know what is

00:09:56,300 --> 00:10:01,370
wonderful but also has some complexities

00:09:58,160 --> 00:10:03,260
involved so what we did was we basically

00:10:01,370 --> 00:10:05,960
took the output that rails kind of

00:10:03,260 --> 00:10:08,030
generated originally and then we started

00:10:05,960 --> 00:10:10,760
looking for flaws and looking where it

00:10:08,030 --> 00:10:13,960
was weak and we sort of wrote up this

00:10:10,760 --> 00:10:16,850
specification and published it in May of

00:10:13,960 --> 00:10:20,930
2013 so it's been sort of like two years

00:10:16,850 --> 00:10:23,600
that we've been working at this and so

00:10:20,930 --> 00:10:25,130
basically this back is sort of the

00:10:23,600 --> 00:10:27,680
result of that it doesn't look a whole

00:10:25,130 --> 00:10:28,560
lot of like what rails used to spit out

00:10:27,680 --> 00:10:31,740
where we sort of

00:10:28,560 --> 00:10:33,240
because as we built applications on top

00:10:31,740 --> 00:10:35,190
of things and we tried to implement the

00:10:33,240 --> 00:10:36,930
spec clean instead of just looking at

00:10:35,190 --> 00:10:38,820
rails it became evident that there were

00:10:36,930 --> 00:10:40,050
a number of different weaknesses in the

00:10:38,820 --> 00:10:42,779
way that rails did these kind of things

00:10:40,050 --> 00:10:44,190
and you know the way that rails

00:10:42,779 --> 00:10:46,320
generated Jason was just kind of like

00:10:44,190 --> 00:10:47,850
whatever the people felt like generating

00:10:46,320 --> 00:10:50,130
stuff at the time it wasn't really

00:10:47,850 --> 00:10:53,370
thought out from like what does a client

00:10:50,130 --> 00:10:55,620
need like you know the DHH is

00:10:53,370 --> 00:10:57,779
notoriously anti JavaScript frameworks

00:10:55,620 --> 00:10:58,950
and so like he is not really designing

00:10:57,779 --> 00:11:00,540
things with an eye towards what

00:10:58,950 --> 00:11:03,300
JavaScript frameworks need out of

00:11:00,540 --> 00:11:06,570
servers and so we sort of evolved from

00:11:03,300 --> 00:11:08,520
them but I'm going to talk to you a

00:11:06,570 --> 00:11:09,900
little bit about the exact details of

00:11:08,520 --> 00:11:12,300
the spec but i also want to talk about

00:11:09,900 --> 00:11:15,240
like standards so i describe this as a

00:11:12,300 --> 00:11:16,589
specification or a standard and so a lot

00:11:15,240 --> 00:11:18,960
of people were like well who says its

00:11:16,589 --> 00:11:20,940
standard and that's a good question it

00:11:18,960 --> 00:11:22,350
turns out that the way the internet is

00:11:20,940 --> 00:11:23,400
run is based on a lot of different

00:11:22,350 --> 00:11:25,620
organizations that have a lot of

00:11:23,400 --> 00:11:27,870
different standards and so JCAP i

00:11:25,620 --> 00:11:31,230
specifically is currently at the place

00:11:27,870 --> 00:11:33,839
we got this awesome registered media

00:11:31,230 --> 00:11:35,940
types this is the IaaS website where you

00:11:33,839 --> 00:11:40,650
can register types so we have this

00:11:35,940 --> 00:11:42,690
application vnd API plus JSON it's funny

00:11:40,650 --> 00:11:43,920
because one of the people is mad about

00:11:42,690 --> 00:11:45,390
that generic name is actually Roy

00:11:43,920 --> 00:11:46,800
fielding he since said that he would

00:11:45,390 --> 00:11:48,510
like have rejected this head he noticed

00:11:46,800 --> 00:11:52,830
the paperwork going through so it snuck

00:11:48,510 --> 00:11:55,170
it in there yes but anyway so this is

00:11:52,830 --> 00:11:57,360
the first step towards becoming like an

00:11:55,170 --> 00:12:00,120
RFC basically as you you define a media

00:11:57,360 --> 00:12:02,690
type and it gets this vnd prefix and

00:12:00,120 --> 00:12:04,860
then after you've seen a lot of people

00:12:02,690 --> 00:12:06,360
develop it in the field you eventually

00:12:04,860 --> 00:12:08,100
submitter RFC and then go through the

00:12:06,360 --> 00:12:10,740
RFC process so that's kind of like where

00:12:08,100 --> 00:12:14,490
we're at we do intend to pursue an IETF

00:12:10,740 --> 00:12:16,260
RFC probably in like a year or two so I

00:12:14,490 --> 00:12:17,910
think it's important to acknowledge like

00:12:16,260 --> 00:12:20,070
where your technology is on a maturity

00:12:17,910 --> 00:12:21,330
curve so that people know however like I

00:12:20,070 --> 00:12:23,610
said we've already put about two years

00:12:21,330 --> 00:12:25,950
worth of effort into this yeah I guess I

00:12:23,610 --> 00:12:28,380
realize that text is super small thanks

00:12:25,950 --> 00:12:31,589
IETF yeah there we go there's my email

00:12:28,380 --> 00:12:33,630
vnd API plus JSON is like the technical

00:12:31,589 --> 00:12:36,890
name so that's sort of where we're at in

00:12:33,630 --> 00:12:39,600
the overall process of standardization

00:12:36,890 --> 00:12:40,620
so we do everything this particular

00:12:39,600 --> 00:12:43,980
website

00:12:40,620 --> 00:12:46,440
Jason a piada org is all hosted on

00:12:43,980 --> 00:12:49,100
github under this JSON API organization

00:12:46,440 --> 00:12:52,800
so that's where we do a lot of this work

00:12:49,100 --> 00:12:54,390
we just today someone left a comment on

00:12:52,800 --> 00:12:56,430
one of the things that we're working on

00:12:54,390 --> 00:12:59,520
right now for some future editions and

00:12:56,430 --> 00:13:01,920
they said by the way have the 3000 * so

00:12:59,520 --> 00:13:04,050
we're now over 3,000 stars on github

00:13:01,920 --> 00:13:05,880
which is kind of cool you know I don't

00:13:04,050 --> 00:13:07,920
know I like monotonically increasing

00:13:05,880 --> 00:13:09,570
integers just much as anybody else well

00:13:07,920 --> 00:13:11,610
hopefully monotonic any way across my

00:13:09,570 --> 00:13:15,330
fingers as some people are going to go

00:13:11,610 --> 00:13:17,010
on sorry despite me but so yeah so we

00:13:15,330 --> 00:13:19,140
have this is where we do most of our

00:13:17,010 --> 00:13:22,980
actual work on the specification is done

00:13:19,140 --> 00:13:25,620
through discussions in issues and then

00:13:22,980 --> 00:13:28,140
for requests to actually modify the text

00:13:25,620 --> 00:13:30,570
or I guess there's you know CSS tweaks

00:13:28,140 --> 00:13:34,740
of course because CSS is hard and that

00:13:30,570 --> 00:13:36,930
also we have a disgusts a discourse

00:13:34,740 --> 00:13:38,910
instance that you can like talk about

00:13:36,930 --> 00:13:40,320
and get help from people and so this is

00:13:38,910 --> 00:13:41,580
more for people that are implementing

00:13:40,320 --> 00:13:44,070
and building stuff with a specification

00:13:41,580 --> 00:13:46,680
so if you have like user level questions

00:13:44,070 --> 00:13:48,960
rather than like wanting to improve the

00:13:46,680 --> 00:13:51,540
spec level questions you can check out

00:13:48,960 --> 00:13:56,610
our are discussed instance and talk

00:13:51,540 --> 00:13:57,960
about it on there okay so I want to talk

00:13:56,610 --> 00:14:00,720
a little bit about tools that you can

00:13:57,960 --> 00:14:02,940
use I so I'll talk a little bit about

00:14:00,720 --> 00:14:04,800
the spec in a moment but frankly like

00:14:02,940 --> 00:14:06,570
explaining the structure of JSON is a

00:14:04,800 --> 00:14:07,920
really boring conference talk I don't

00:14:06,570 --> 00:14:09,300
want to bore you all so I'm not going to

00:14:07,920 --> 00:14:11,340
talk to too much about what it looks

00:14:09,300 --> 00:14:13,460
like but i want to show you this because

00:14:11,340 --> 00:14:16,650
a great example of what it looks like is

00:14:13,460 --> 00:14:19,380
endpoints is a framework built on top of

00:14:16,650 --> 00:14:20,640
nodejs and I know framework is like a

00:14:19,380 --> 00:14:22,650
dirty word in the JavaScript community

00:14:20,640 --> 00:14:24,450
for some reason so it's not a framework

00:14:22,650 --> 00:14:26,730
it's a loosely collected pile of

00:14:24,450 --> 00:14:29,970
libraries it's it's like it's like node

00:14:26,730 --> 00:14:32,880
and in berk shelf and then you can

00:14:29,970 --> 00:14:35,070
either use happy or express I prefer

00:14:32,880 --> 00:14:36,510
express and then end points on top of

00:14:35,070 --> 00:14:37,830
that so don't worry it's not a modeling

00:14:36,510 --> 00:14:42,130
framework it's definitely a collection

00:14:37,830 --> 00:14:44,690
of like 50 zillion modules but

00:14:42,130 --> 00:14:46,399
on their homepage they decided to do it

00:14:44,690 --> 00:14:50,839
by actually like using the spec for all

00:14:46,399 --> 00:14:51,980
the links so that's kind of cool but let

00:14:50,839 --> 00:14:54,380
me make this a little bigger oh yeah

00:14:51,980 --> 00:14:58,220
responsive design because it shrinks all

00:14:54,380 --> 00:15:00,079
of a sudden so it's kind of an example

00:14:58,220 --> 00:15:02,240
so this framework lets you build up

00:15:00,079 --> 00:15:03,709
servers really really easily and I've

00:15:02,240 --> 00:15:05,149
enjoyed working at it even though i'm

00:15:03,709 --> 00:15:08,740
frankly really terrible at javascript

00:15:05,149 --> 00:15:11,269
but this is sort of what the what a

00:15:08,740 --> 00:15:13,430
format of the data actually ends up

00:15:11,269 --> 00:15:16,399
looking like so we do certain things

00:15:13,430 --> 00:15:18,889
like all of the data here is under this

00:15:16,399 --> 00:15:20,000
particular key data and at first you

00:15:18,889 --> 00:15:21,709
might be like well why your name is

00:15:20,000 --> 00:15:23,240
facing this and it turns out that when

00:15:21,709 --> 00:15:25,550
you get into more complicated situations

00:15:23,240 --> 00:15:27,050
with like sideloading additional

00:15:25,550 --> 00:15:28,970
resources and stuff you kind of wish

00:15:27,050 --> 00:15:30,110
that you had that namespace and so one

00:15:28,970 --> 00:15:31,759
of the things that can happen is you try

00:15:30,110 --> 00:15:33,290
the simplest possible thing you end up

00:15:31,759 --> 00:15:34,970
paying yourself into a corner and then

00:15:33,290 --> 00:15:36,589
you have to like develop all these you

00:15:34,970 --> 00:15:38,029
know educates things so it's just like I

00:15:36,589 --> 00:15:40,850
said one example of the kind of stuff

00:15:38,029 --> 00:15:42,290
that we've done but i'm going to show

00:15:40,850 --> 00:15:44,149
you a slightly better example is the one

00:15:42,290 --> 00:15:47,540
on the homepage shrink this back down

00:15:44,149 --> 00:15:49,370
before i get rid of it so because we

00:15:47,540 --> 00:15:52,399
come like historically from the rails

00:15:49,370 --> 00:15:55,639
world this is an example of a blog and a

00:15:52,399 --> 00:15:58,399
blog post being represented through this

00:15:55,639 --> 00:16:00,230
JSON so one of the other things and this

00:15:58,399 --> 00:16:03,190
is like technically optional but we like

00:16:00,230 --> 00:16:05,630
to promote it is we do use hypermedia

00:16:03,190 --> 00:16:08,510
because that is sort of the og again

00:16:05,630 --> 00:16:12,069
rest shenanigans I like to remind people

00:16:08,510 --> 00:16:14,690
that gzip in CREP gzip compression

00:16:12,069 --> 00:16:16,579
relies on repetition to shrink things

00:16:14,690 --> 00:16:19,550
down so all these URLs get super super

00:16:16,579 --> 00:16:22,730
compressed but the point is is that we

00:16:19,550 --> 00:16:24,380
have like related links and then the

00:16:22,730 --> 00:16:26,720
actual data so in this case it's an

00:16:24,380 --> 00:16:28,760
array of article objects and they have a

00:16:26,720 --> 00:16:31,189
type and an ID and then their attributes

00:16:28,760 --> 00:16:35,089
their relationships to other things so

00:16:31,189 --> 00:16:37,189
for example this article has comments so

00:16:35,089 --> 00:16:39,800
here is like well and in this case is

00:16:37,189 --> 00:16:42,680
first is the author so as relationships

00:16:39,800 --> 00:16:43,850
to an author like this a little T to a

00:16:42,680 --> 00:16:46,009
bigger can I make it that's all the

00:16:43,850 --> 00:16:48,589
bigger I got okay so there's like

00:16:46,009 --> 00:16:51,769
relationships to an author with links to

00:16:48,589 --> 00:16:52,100
their information and very particularly

00:16:51,769 --> 00:16:55,250
in from

00:16:52,100 --> 00:16:58,519
links to comments and all that stuff and

00:16:55,250 --> 00:16:59,779
then we have for example so one of the

00:16:58,519 --> 00:17:01,579
common complaints about the way that

00:16:59,779 --> 00:17:04,699
people naively do rest is they assume

00:17:01,579 --> 00:17:06,230
that one URL equals one row at a

00:17:04,699 --> 00:17:08,569
database table so if you want to like

00:17:06,230 --> 00:17:12,309
fetch a blog post in 35 comments you're

00:17:08,569 --> 00:17:15,140
going to be making 36 cuz you math 36

00:17:12,309 --> 00:17:16,699
HTTP requests but we have the ability to

00:17:15,140 --> 00:17:18,350
do things like side loading resources

00:17:16,699 --> 00:17:20,120
you can say like please give me this

00:17:18,350 --> 00:17:21,919
post and then also give me the related

00:17:20,120 --> 00:17:25,370
comments so you can just fetch it all at

00:17:21,919 --> 00:17:27,409
once and so this is an example of here

00:17:25,370 --> 00:17:29,840
we have a person who has made a

00:17:27,409 --> 00:17:31,490
particular comment and here is this

00:17:29,840 --> 00:17:34,850
comment of course the first comment is

00:17:31,490 --> 00:17:36,289
first as is traditional any splash

00:17:34,850 --> 00:17:39,559
daughters old flash daughters in the

00:17:36,289 --> 00:17:44,230
room and then you know all their other

00:17:39,559 --> 00:17:47,780
stuff yeah I like XML better whatever so

00:17:44,230 --> 00:17:51,020
the point is is that we have all this

00:17:47,780 --> 00:17:54,350
stuff and it's specifically kind of

00:17:51,020 --> 00:17:56,030
designed for the use case of I have some

00:17:54,350 --> 00:17:57,440
objects on the server and the client I

00:17:56,030 --> 00:17:59,840
would like to share between them

00:17:57,440 --> 00:18:01,789
efficiently so we have like batching

00:17:59,840 --> 00:18:04,429
stuff and like I said side loading and

00:18:01,789 --> 00:18:07,010
all these kind of things and so this

00:18:04,429 --> 00:18:10,280
might look a little more complicated at

00:18:07,010 --> 00:18:13,070
first then your simple kind of just like

00:18:10,280 --> 00:18:14,900
spit out whatever serialized to JSON

00:18:13,070 --> 00:18:17,390
gives you but we've done a lot of

00:18:14,900 --> 00:18:19,580
thinking about how this structure

00:18:17,390 --> 00:18:21,890
actually works and how to make it work

00:18:19,580 --> 00:18:23,570
for the particular use case of what is

00:18:21,890 --> 00:18:26,179
very common in single page apps just

00:18:23,570 --> 00:18:29,049
shuffling things back and forth so amber

00:18:26,179 --> 00:18:32,390
data is the library and ember that

00:18:29,049 --> 00:18:34,220
handles doing this kind of thing and

00:18:32,390 --> 00:18:36,799
it's able to do intelligent things like

00:18:34,220 --> 00:18:38,299
you can tell it to batch up five or six

00:18:36,799 --> 00:18:39,980
changes and then send them all at once

00:18:38,299 --> 00:18:41,659
instead of making one particular HTTP

00:18:39,980 --> 00:18:44,270
request and like all these kinds of

00:18:41,659 --> 00:18:46,940
things so while it is it a little bit

00:18:44,270 --> 00:18:49,100
more complex initially it is

00:18:46,940 --> 00:18:51,200
significantly simpler once you're trying

00:18:49,100 --> 00:18:52,760
to do more advanced things and let's

00:18:51,200 --> 00:18:54,230
face it we all end up doing more

00:18:52,760 --> 00:18:56,419
advanced things I don't know why this

00:18:54,230 --> 00:18:57,059
CSS is now apparently when I shrink them

00:18:56,419 --> 00:19:02,970
and make it big

00:18:57,059 --> 00:19:06,149
it's like all right whatever um there we

00:19:02,970 --> 00:19:08,039
go uh so anyway the other thing about

00:19:06,149 --> 00:19:10,289
the JSON being actually a little bit

00:19:08,039 --> 00:19:12,450
complex is that we also have things like

00:19:10,289 --> 00:19:14,460
I just showed you that end points for

00:19:12,450 --> 00:19:16,590
node but there's actually a significant

00:19:14,460 --> 00:19:18,059
number of other implementations so here

00:19:16,590 --> 00:19:19,409
is just a scroll I'm just going to

00:19:18,059 --> 00:19:20,970
scroll through this list because it's

00:19:19,409 --> 00:19:23,129
big and that's a good way to convey

00:19:20,970 --> 00:19:25,350
there are a lot of libraries so we got

00:19:23,129 --> 00:19:28,049
like JavaScript and iOS and Ruby and

00:19:25,350 --> 00:19:32,789
some PHP wait that's not a client oh

00:19:28,049 --> 00:19:35,460
yeah right cool um PHP stuff on client

00:19:32,789 --> 00:19:39,389
validation and then like you know node

00:19:35,460 --> 00:19:43,200
and tons of PHP Ruby Python go you know

00:19:39,389 --> 00:19:45,200
Java all these sort of things and so

00:19:43,200 --> 00:19:47,669
what's what's really nice about

00:19:45,200 --> 00:19:50,789
conventions and the reason why

00:19:47,669 --> 00:19:52,980
conventions matter is that I hope that

00:19:50,789 --> 00:19:56,220
you never need to care about any of this

00:19:52,980 --> 00:19:58,409
whatsoever my dream is that by following

00:19:56,220 --> 00:20:00,899
these conventions we Baird build shared

00:19:58,409 --> 00:20:02,999
tooling because frankly I authored this

00:20:00,899 --> 00:20:04,200
spec but I want to think about it like

00:20:02,999 --> 00:20:06,029
part of the reason I wrote all this

00:20:04,200 --> 00:20:08,309
stuff down is because it's easy to

00:20:06,029 --> 00:20:09,990
forget and like I'll miss remember what

00:20:08,309 --> 00:20:11,850
I was intending to do so I go back and

00:20:09,990 --> 00:20:14,129
read my own spec people ask me questions

00:20:11,850 --> 00:20:15,149
I'm like I gotta go reread the spec and

00:20:14,129 --> 00:20:17,100
they're like don't you know this you off

00:20:15,149 --> 00:20:18,600
of it and it's like well as the reason

00:20:17,100 --> 00:20:22,080
we write things down is to give them

00:20:18,600 --> 00:20:24,179
like more permanence so so I don't

00:20:22,080 --> 00:20:27,119
intend that you as a developer need to

00:20:24,179 --> 00:20:29,159
really care about this but creating

00:20:27,119 --> 00:20:31,440
conventions and by sharing these

00:20:29,159 --> 00:20:33,929
specifications we can build tooling and

00:20:31,440 --> 00:20:35,639
you can just use a library to generate

00:20:33,929 --> 00:20:38,299
all this stuff so for example with

00:20:35,639 --> 00:20:41,279
endpoints you define your models and

00:20:38,299 --> 00:20:43,679
then you tell them like ok these are the

00:20:41,279 --> 00:20:45,450
white list of URLs that I want and then

00:20:43,679 --> 00:20:46,919
it just handles doing all this stuff for

00:20:45,450 --> 00:20:48,299
you you don't have to worry about doing

00:20:46,919 --> 00:20:50,249
actual development of things like side

00:20:48,299 --> 00:20:52,860
loading and all that other stuff and

00:20:50,249 --> 00:20:54,389
this is true of all the other I mostly a

00:20:52,860 --> 00:20:56,340
server-side dev to be honest so I know

00:20:54,389 --> 00:20:59,730
more about the generating of this JSON

00:20:56,340 --> 00:21:01,080
and about the consuming of it but uh you

00:20:59,730 --> 00:21:04,679
know so the idea is that you'll use

00:21:01,080 --> 00:21:07,169
libraries instead and that way you don't

00:21:04,679 --> 00:21:08,990
have to worry about arguing about all

00:21:07,169 --> 00:21:09,980
this kind of stuff so

00:21:08,990 --> 00:21:11,750
something else that I want to like

00:21:09,980 --> 00:21:13,070
impress that's important and one of the

00:21:11,750 --> 00:21:14,809
reasons why I think that conventions

00:21:13,070 --> 00:21:17,210
really matter because conventions are

00:21:14,809 --> 00:21:19,040
what allow you to build tools if we

00:21:17,210 --> 00:21:20,600
didn't have conventions we have to build

00:21:19,040 --> 00:21:24,260
brand new tools for every single thing

00:21:20,600 --> 00:21:26,090
possible and this is also something why

00:21:24,260 --> 00:21:28,340
we've seen a lot of interest in the

00:21:26,090 --> 00:21:30,320
specification from people that do

00:21:28,340 --> 00:21:33,679
consulting because if you're developing

00:21:30,320 --> 00:21:35,240
new api's for your clients you don't

00:21:33,679 --> 00:21:37,640
just have the pleasure of arguing over

00:21:35,240 --> 00:21:39,740
an API for your product you an are you

00:21:37,640 --> 00:21:41,270
have a pleasure of arguing over and over

00:21:39,740 --> 00:21:43,190
and over again every couple of weeks

00:21:41,270 --> 00:21:45,350
about every new product that you're

00:21:43,190 --> 00:21:46,970
consulting firm is actually doing so

00:21:45,350 --> 00:21:49,670
we've seen a lot of interest in people

00:21:46,970 --> 00:21:50,990
in that particular space because then

00:21:49,670 --> 00:21:54,590
you can learn those tools and use them

00:21:50,990 --> 00:21:57,860
again on multiple api's which is also

00:21:54,590 --> 00:21:59,900
really nice and so yeah so the more the

00:21:57,860 --> 00:22:01,640
more things but maybe I was a little

00:21:59,900 --> 00:22:04,280
anti-bullying I guess but i don't want

00:22:01,640 --> 00:22:07,480
hipster bespoke artisanal handcrafted

00:22:04,280 --> 00:22:09,890
farm-to-table api's i want like

00:22:07,480 --> 00:22:11,870
manufactured turn them out really really

00:22:09,890 --> 00:22:13,970
simple just like push the button in the

00:22:11,870 --> 00:22:18,080
assembly line like chumps them out kind

00:22:13,970 --> 00:22:21,200
of AP is because I think that for most

00:22:18,080 --> 00:22:23,600
of the products that we build you don't

00:22:21,200 --> 00:22:25,850
actually need the handcrafted artisanal

00:22:23,600 --> 00:22:26,870
shenanigans and sometimes that's nice

00:22:25,850 --> 00:22:28,610
and there's nothing the matter with

00:22:26,870 --> 00:22:31,490
enjoying things that are special and

00:22:28,610 --> 00:22:33,200
made by hand just like you know

00:22:31,490 --> 00:22:38,870
oftentimes you trying to actually build

00:22:33,200 --> 00:22:42,020
stuff so thanks a lot of typing over the

00:22:38,870 --> 00:22:44,330
other room um so I myself have been

00:22:42,020 --> 00:22:46,700
developing this little application that

00:22:44,330 --> 00:22:48,320
I've and building stuff on turns out so

00:22:46,700 --> 00:22:51,200
i have like tattoos all under these

00:22:48,320 --> 00:22:53,210
sleeves and my oldest friend of the

00:22:51,200 --> 00:22:54,620
world is married to a tattoo artist and

00:22:53,210 --> 00:22:57,740
she does all of his like business

00:22:54,620 --> 00:22:59,809
administration work and one time when I

00:22:57,740 --> 00:23:01,400
was like visiting I saw her mess around

00:22:59,809 --> 00:23:02,929
with google docs I was like what are you

00:23:01,400 --> 00:23:05,390
doing mal and she's like oh I'm

00:23:02,929 --> 00:23:08,420
scheduling Jason's appointments and this

00:23:05,390 --> 00:23:10,100
person who would like doesn't have a GED

00:23:08,420 --> 00:23:11,450
and like never finished high school had

00:23:10,100 --> 00:23:14,149
reinvented third

00:23:11,450 --> 00:23:16,309
form and joins and it created her own

00:23:14,149 --> 00:23:18,080
database inside of Google Docs and then

00:23:16,309 --> 00:23:19,760
was doing all that work by hand to like

00:23:18,080 --> 00:23:22,130
manage appointments and I was like Mel

00:23:19,760 --> 00:23:23,630
please this is the reason the software

00:23:22,130 --> 00:23:25,549
is invented so you don't have to do this

00:23:23,630 --> 00:23:28,909
kind of menial labor please let me just

00:23:25,549 --> 00:23:31,100
do this for you and so in exchange for

00:23:28,909 --> 00:23:35,299
getting free tattoos I now built like a

00:23:31,100 --> 00:23:36,559
CRM for them and so that's cool it's

00:23:35,299 --> 00:23:38,120
great on their end because unlimited

00:23:36,559 --> 00:23:41,840
tattoos is really limited like I only

00:23:38,120 --> 00:23:43,460
have so much skin drinks although one of

00:23:41,840 --> 00:23:45,380
the other guys in the shop does do like

00:23:43,460 --> 00:23:46,909
really beautiful white tattoos on top of

00:23:45,380 --> 00:23:48,679
black so people come in for the first

00:23:46,909 --> 00:23:49,850
one black out everything and they'll put

00:23:48,679 --> 00:23:52,880
weight on top anyway that's not the

00:23:49,850 --> 00:23:54,889
point the point is is that like any good

00:23:52,880 --> 00:23:57,080
programmer i hack together a prototype

00:23:54,889 --> 00:23:58,519
in a weekend and now I've been

00:23:57,080 --> 00:24:03,529
supporting it for the last two years in

00:23:58,519 --> 00:24:05,630
production and like it it's yeah well I

00:24:03,529 --> 00:24:07,539
got about 45 hours in this sleeve and

00:24:05,630 --> 00:24:10,789
then some other stuff on the side but um

00:24:07,539 --> 00:24:12,710
via is hacked together to the point

00:24:10,789 --> 00:24:14,630
where like there are no user accounts

00:24:12,710 --> 00:24:15,950
the hot that username and password is

00:24:14,630 --> 00:24:17,059
like hard coded in the source code

00:24:15,950 --> 00:24:19,490
because i was just like just ship it

00:24:17,059 --> 00:24:20,840
right get it out the door and so now

00:24:19,490 --> 00:24:22,549
i've been rebuilding it all in

00:24:20,840 --> 00:24:25,370
javascript which is of course totally

00:24:22,549 --> 00:24:27,590
not hacked together in any capacity and

00:24:25,370 --> 00:24:30,019
so i have this nice little you know like

00:24:27,590 --> 00:24:31,940
amber amber app with you know whatever

00:24:30,019 --> 00:24:33,980
else on the side and super snappy and

00:24:31,940 --> 00:24:36,169
fine and so like I've been developing

00:24:33,980 --> 00:24:38,750
you know my own little product using the

00:24:36,169 --> 00:24:40,309
spec so I'm eating my own dog food to

00:24:38,750 --> 00:24:43,519
mix metaphors it was like shedding and

00:24:40,309 --> 00:24:46,159
dog food I don't know yeah and so all

00:24:43,519 --> 00:24:47,809
that stuff is super open source as well

00:24:46,159 --> 00:24:51,649
because everything I do is open source

00:24:47,809 --> 00:24:53,809
so I got the ember app and the back end

00:24:51,649 --> 00:24:55,580
here is I've been working on a project

00:24:53,809 --> 00:24:56,809
to make sure that I'm not just like that

00:24:55,580 --> 00:24:59,840
guy telling you how to build api's

00:24:56,809 --> 00:25:01,519
without actually doing it myself so this

00:24:59,840 --> 00:25:03,139
this Redux is hopefully going to launch

00:25:01,519 --> 00:25:04,519
pretty soon I keep going to conferences

00:25:03,139 --> 00:25:06,710
they've actually finishing my product

00:25:04,519 --> 00:25:10,639
off so I got to spend some time to do

00:25:06,710 --> 00:25:13,159
that yeah so that's the history that's

00:25:10,639 --> 00:25:16,970
the specification we like I said we

00:25:13,159 --> 00:25:18,380
started this in 2013 and in those two

00:25:16,970 --> 00:25:19,970
years we had a lot of people implant

00:25:18,380 --> 00:25:23,049
stuff and they point out flaws and so we

00:25:19,970 --> 00:25:24,789
changed the specification a bunch and

00:25:23,049 --> 00:25:26,129
surely over there's a couple years it

00:25:24,789 --> 00:25:28,509
went through a radical amount of change

00:25:26,129 --> 00:25:31,239
this is very common for any project that

00:25:28,509 --> 00:25:33,159
Yahoo de rir a part of is that like 1

00:25:31,239 --> 00:25:35,110
point 0 is 1 point 0 so pre one point

00:25:33,159 --> 00:25:37,419
out anything can happen and lots of

00:25:35,110 --> 00:25:38,980
stuff does and so what's unfortunate as

00:25:37,419 --> 00:25:40,779
a lot of people take versioning numbers

00:25:38,980 --> 00:25:42,610
to sort of mean like this is pseudo

00:25:40,779 --> 00:25:44,590
stable just cuz i'm using it so

00:25:42,610 --> 00:25:46,600
sometimes there's some angst because

00:25:44,590 --> 00:25:48,369
there's like massive changes and this

00:25:46,600 --> 00:25:49,779
happened with ember as well before one

00:25:48,369 --> 00:25:55,239
point out everything was changing like

00:25:49,779 --> 00:25:56,980
constantly but May fifteenth no that's

00:25:55,239 --> 00:25:58,989
the rest one point early state it was

00:25:56,980 --> 00:26:00,369
the month before like all of my projects

00:25:58,989 --> 00:26:01,480
went 1 point 0 within this like three

00:26:00,369 --> 00:26:04,029
month period I don't know why I

00:26:01,480 --> 00:26:07,029
scheduled dislike myself sometime in

00:26:04,029 --> 00:26:09,580
March March April or May we went 1 point

00:26:07,029 --> 00:26:11,950
0 with the jsapi spec and so it is now

00:26:09,580 --> 00:26:14,859
no longer changing in a backwards

00:26:11,950 --> 00:26:16,960
incompatible way forever we are

00:26:14,859 --> 00:26:19,239
committed to our sins and we'll deal

00:26:16,960 --> 00:26:23,679
with them for the rest of our lives and

00:26:19,239 --> 00:26:25,929
so we gain that experience from that

00:26:23,679 --> 00:26:27,820
churn but now is time for stability and

00:26:25,929 --> 00:26:31,179
for people to build real actual things

00:26:27,820 --> 00:26:33,639
on top of this so there has been a lot

00:26:31,179 --> 00:26:35,919
of uptake ember two point oh now

00:26:33,639 --> 00:26:38,739
actually uses this at the default format

00:26:35,919 --> 00:26:40,299
that it expects so and that happened a

00:26:38,739 --> 00:26:42,369
couple months ago so we've seen a large

00:26:40,299 --> 00:26:43,929
number of people get involved since

00:26:42,369 --> 00:26:47,139
that's kind of like pushing this along a

00:26:43,929 --> 00:26:48,820
little bit and I've said amber had rails

00:26:47,139 --> 00:26:50,289
a lot but we've also had a significant

00:26:48,820 --> 00:26:52,480
number people who do not do either of

00:26:50,289 --> 00:26:54,519
those things I used to work at a company

00:26:52,480 --> 00:26:59,499
in San Francisco but like most companies

00:26:54,519 --> 00:27:00,789
used to is the verb there which we did a

00:26:59,499 --> 00:27:03,399
million dollar today in credit card

00:27:00,789 --> 00:27:05,879
transactions through API based on Jason

00:27:03,399 --> 00:27:08,549
API so it's definitely seen a lot of use

00:27:05,879 --> 00:27:10,600
unfortunately VC money runs out someday

00:27:08,549 --> 00:27:12,999
but it wasn't because of the quality of

00:27:10,600 --> 00:27:16,259
their API it was because San Francisco

00:27:12,999 --> 00:27:16,259
was a weird and messed up place

00:27:16,330 --> 00:27:22,100
yeah totally completely unlike Brooklyn

00:27:19,850 --> 00:27:23,810
Brooklyn is clearly perfect no I'm

00:27:22,100 --> 00:27:25,400
trying to move to Berlin like sometime

00:27:23,810 --> 00:27:26,600
like everybody in Brooklyn we don't get

00:27:25,400 --> 00:27:27,890
like all the people there in brooklyn

00:27:26,600 --> 00:27:31,030
one moved to berlin and all the people

00:27:27,890 --> 00:27:35,270
berlin want to move to Prague whatever

00:27:31,030 --> 00:27:36,980
nobody's ever happy so yeah so we're

00:27:35,270 --> 00:27:39,050
seeing a bunch of his option we're

00:27:36,980 --> 00:27:40,610
building useful tools we're helping

00:27:39,050 --> 00:27:42,260
reduce these kinds of stupid arguments

00:27:40,610 --> 00:27:44,870
and letting you focus on product and so

00:27:42,260 --> 00:27:46,400
I hope that this sort of interests you

00:27:44,870 --> 00:27:47,690
and I'd love to have you get involved or

00:27:46,400 --> 00:27:49,790
hear your feedback or like talked about

00:27:47,690 --> 00:27:53,050
all these things so that's why I share

00:27:49,790 --> 00:27:53,050

YouTube URL: https://www.youtube.com/watch?v=5KtEjc-8Dzo


