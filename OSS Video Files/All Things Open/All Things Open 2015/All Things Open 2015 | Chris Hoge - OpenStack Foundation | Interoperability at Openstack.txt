Title: All Things Open 2015 | Chris Hoge - OpenStack Foundation | Interoperability at Openstack
Publication date: 2015-11-19
Playlist: All Things Open 2015
Description: 
	All Things Open 2015, October 19th and 20th, Raleigh NC.
Captions: 
	00:00:04,460 --> 00:00:09,540
alrighty so I'm going to go ahead and

00:00:06,839 --> 00:00:13,170
get started thanks for everybody for

00:00:09,540 --> 00:00:16,199
coming to my talk I'm Chris Hodge and i

00:00:13,170 --> 00:00:18,840
am the interoperability engineered for

00:00:16,199 --> 00:00:20,310
the OpenStack foundation and I'm here to

00:00:18,840 --> 00:00:23,010
talk about the work that I do for the

00:00:20,310 --> 00:00:27,990
foundation and what our interoperability

00:00:23,010 --> 00:00:29,189
effort to at OpenStack are a little bit

00:00:27,990 --> 00:00:32,219
about myself I got my start with

00:00:29,189 --> 00:00:34,350
OpenStack probably run the same time

00:00:32,219 --> 00:00:36,960
that mark did if you saw his last talk

00:00:34,350 --> 00:00:38,730
on the OpenStack 101 I was I was I was

00:00:36,960 --> 00:00:41,879
at the University of Oregon working on a

00:00:38,730 --> 00:00:43,530
research cloud computing cluster and we

00:00:41,879 --> 00:00:45,600
had decided to install OpenStack and so

00:00:43,530 --> 00:00:47,760
they they off 'but eyes the release

00:00:45,600 --> 00:00:50,730
names similar to what a boon to does and

00:00:47,760 --> 00:00:53,340
i deployed we did our beta testing with

00:00:50,730 --> 00:00:55,280
cactus we deployed essex and university

00:00:53,340 --> 00:00:58,559
was running OpenStack up for grizzly

00:00:55,280 --> 00:00:59,879
that was a three-year project and when I

00:00:58,559 --> 00:01:01,920
finished up I had the opportunity to go

00:00:59,879 --> 00:01:04,379
work for puppet labs and so rather than

00:01:01,920 --> 00:01:05,670
just be a deployer of OpenStack software

00:01:04,379 --> 00:01:08,430
instead i became a developer of

00:01:05,670 --> 00:01:10,590
OpenStack and in some ways took over the

00:01:08,430 --> 00:01:13,049
puppet OpenStack project that had been

00:01:10,590 --> 00:01:15,150
started by Dan bode and some other

00:01:13,049 --> 00:01:17,159
people at puppet you know but has really

00:01:15,150 --> 00:01:18,720
you know it's left puppet labs and it's

00:01:17,159 --> 00:01:21,350
become a full OpenStack community

00:01:18,720 --> 00:01:23,520
project and it's kind of neat seeing the

00:01:21,350 --> 00:01:26,220
you know the continuation of my work

00:01:23,520 --> 00:01:30,270
there you know it you know ending at

00:01:26,220 --> 00:01:31,259
this natural spot where where it's it's

00:01:30,270 --> 00:01:32,369
been completely turned over to the

00:01:31,259 --> 00:01:34,710
community and it's now an official

00:01:32,369 --> 00:01:37,829
OpenStack project that's pretty exciting

00:01:34,710 --> 00:01:39,299
to see about a year ago I had an

00:01:37,829 --> 00:01:40,979
opportunity to join the OpenStack

00:01:39,299 --> 00:01:44,280
Foundation and work on their

00:01:40,979 --> 00:01:46,259
interoperability efforts it you know

00:01:44,280 --> 00:01:48,329
this is mark mentioned in his previous

00:01:46,259 --> 00:01:53,100
talk you know you know in part working

00:01:48,329 --> 00:01:55,020
on this on this deathcore committee so

00:01:53,100 --> 00:01:56,310
I'm going to start off a little bit just

00:01:55,020 --> 00:01:59,130
to get you up to speed on what OpenStack

00:01:56,310 --> 00:02:00,540
is its cloud computing software and it

00:01:59,130 --> 00:02:02,009
has a number of different components but

00:02:00,540 --> 00:02:03,450
you could almost say that there are a

00:02:02,009 --> 00:02:07,320
set of core components that are part of

00:02:03,450 --> 00:02:09,629
OpenStack we have Nova in glance kind of

00:02:07,320 --> 00:02:10,200
give you the core compute components so

00:02:09,629 --> 00:02:12,080
that you can

00:02:10,200 --> 00:02:15,810
so you can launch virtual machine images

00:02:12,080 --> 00:02:18,750
we have Neutron networking which ties

00:02:15,810 --> 00:02:19,830
all the networking services together and

00:02:18,750 --> 00:02:22,379
then we have two different storage

00:02:19,830 --> 00:02:24,660
services of a block storage service so

00:02:22,379 --> 00:02:27,120
that you can attach disk drives to your

00:02:24,660 --> 00:02:28,739
system but also an object storage system

00:02:27,120 --> 00:02:30,930
so you know similar to what you might

00:02:28,739 --> 00:02:32,370
find in Amazon's s3 and then tying all

00:02:30,930 --> 00:02:35,760
this together is keystone which provides

00:02:32,370 --> 00:02:39,629
identity identity and authorization and

00:02:35,760 --> 00:02:41,760
authentication and then built on top of

00:02:39,629 --> 00:02:43,790
this is an entire ecosystem of other

00:02:41,760 --> 00:02:47,250
OpenStack projects that give you other

00:02:43,790 --> 00:02:48,540
they give you other services built on

00:02:47,250 --> 00:02:49,860
top of these core services and so we

00:02:48,540 --> 00:02:53,150
have an orchestration engine we have a

00:02:49,860 --> 00:02:57,150
messaging service data processing

00:02:53,150 --> 00:02:59,040
telemetry bare-metal a dashboard you

00:02:57,150 --> 00:03:00,269
know in many many more projects you know

00:02:59,040 --> 00:03:02,130
one of the one of the ways that opens

00:03:00,269 --> 00:03:04,290
that changed in the last year is we went

00:03:02,130 --> 00:03:06,090
from this model of your either OpenStack

00:03:04,290 --> 00:03:09,090
II or not and you spend this long time

00:03:06,090 --> 00:03:11,370
and incubation we're instead if you have

00:03:09,090 --> 00:03:14,910
a project which meets the goals of the

00:03:11,370 --> 00:03:16,260
OpenStack you know opens back as a whole

00:03:14,910 --> 00:03:18,510
which is to provide ubiquitous cloud

00:03:16,260 --> 00:03:20,280
computing then you can be considered for

00:03:18,510 --> 00:03:23,069
to become what we call a big tent

00:03:20,280 --> 00:03:24,810
OpenStack project you know it means it

00:03:23,069 --> 00:03:26,160
means you you gain access to all the

00:03:24,810 --> 00:03:28,920
resources of the community such as code

00:03:26,160 --> 00:03:32,160
review the mailing lists the bug

00:03:28,920 --> 00:03:33,450
trackers you know by following kind of

00:03:32,160 --> 00:03:35,549
the the OpenStack open-source

00:03:33,450 --> 00:03:37,590
development models and it's been a

00:03:35,549 --> 00:03:40,200
really great way for us to admit a lot

00:03:37,590 --> 00:03:43,380
of projects into OpenStack but also help

00:03:40,200 --> 00:03:47,010
redefine you know you know what our core

00:03:43,380 --> 00:03:48,660
services are so as I mentioned before

00:03:47,010 --> 00:03:50,730
the mission of the OpenStack foundation

00:03:48,660 --> 00:03:53,310
is to produce the is to produce a

00:03:50,730 --> 00:03:57,090
ubiquitous open source cloud computing

00:03:53,310 --> 00:03:59,040
platform and one of the ways that we're

00:03:57,090 --> 00:04:05,069
attempting to accomplish that ubiquity

00:03:59,040 --> 00:04:05,910
is through interoperability so a little

00:04:05,069 --> 00:04:09,299
bit of a definition of what

00:04:05,910 --> 00:04:12,389
interoperability is this is taken from

00:04:09,299 --> 00:04:14,900
Wikipedia but an interoperable system is

00:04:12,389 --> 00:04:19,590
one whose systems interfaces are

00:04:14,900 --> 00:04:21,959
understood so you you have web

00:04:19,590 --> 00:04:22,850
interfaces that anyone can look at and

00:04:21,959 --> 00:04:24,170
they can understand them

00:04:22,850 --> 00:04:27,830
test them they can do things against

00:04:24,170 --> 00:04:30,560
them and they can they can use them the

00:04:27,830 --> 00:04:32,360
interfaces are durable this just this

00:04:30,560 --> 00:04:34,820
isn't just at the time you're using it

00:04:32,360 --> 00:04:37,550
but also for the future their interfaces

00:04:34,820 --> 00:04:38,810
that you can expect them to be here now

00:04:37,550 --> 00:04:40,610
and you can expect them to be there in

00:04:38,810 --> 00:04:42,110
the future so that you can keep using

00:04:40,610 --> 00:04:44,540
them and you're not going to have

00:04:42,110 --> 00:04:48,410
accidental breakages across your systems

00:04:44,540 --> 00:04:51,170
and they're also run unrestricted that

00:04:48,410 --> 00:04:53,390
you can that anybody can come along and

00:04:51,170 --> 00:04:56,390
if they have access to the system they

00:04:53,390 --> 00:05:03,500
can use the system and you know and

00:04:56,390 --> 00:05:05,270
access is easy to obtain so we live in

00:05:03,500 --> 00:05:07,130
an interoperable world right if you

00:05:05,270 --> 00:05:09,200
think about all of the aspects of your

00:05:07,130 --> 00:05:11,480
life that you use on a daily basis

00:05:09,200 --> 00:05:13,700
everybody here has a laptop and when you

00:05:11,480 --> 00:05:15,980
charge that laptop you can find an

00:05:13,700 --> 00:05:18,070
outlet on the wall to plug that into we

00:05:15,980 --> 00:05:21,050
have an interoperable electrical grid

00:05:18,070 --> 00:05:24,560
everyone has one of these cellphone

00:05:21,050 --> 00:05:25,940
right this is you know decades and

00:05:24,560 --> 00:05:27,860
decades and decades and interoperability

00:05:25,940 --> 00:05:30,530
right starting with it starting with

00:05:27,860 --> 00:05:31,820
rotary dial telephones and moving on to

00:05:30,530 --> 00:05:34,070
push button phones all the way to our

00:05:31,820 --> 00:05:35,570
cell phones we're still using the basic

00:05:34,070 --> 00:05:38,060
telephone systems that we were using

00:05:35,570 --> 00:05:39,710
that our parents reason our grandparents

00:05:38,060 --> 00:05:41,420
were using you know these are incredibly

00:05:39,710 --> 00:05:44,300
durable interoperable systems our

00:05:41,420 --> 00:05:45,500
payment systems our cars you know just

00:05:44,300 --> 00:05:48,080
think about all the things you use on a

00:05:45,500 --> 00:05:50,390
day-to-day basis where the interfaces to

00:05:48,080 --> 00:05:53,840
those are so well understood that we

00:05:50,390 --> 00:05:56,420
almost take it for granted it's harder

00:05:53,840 --> 00:05:58,010
with software though right you know one

00:05:56,420 --> 00:05:59,540
of the things that separates hardware

00:05:58,010 --> 00:06:01,520
and software is hardware is durable

00:05:59,540 --> 00:06:04,850
right a phone is a durable thing it's

00:06:01,520 --> 00:06:06,530
sending currents / electrical wire you

00:06:04,850 --> 00:06:08,930
know / / copper wire this is how it

00:06:06,530 --> 00:06:10,010
started we're software is something

00:06:08,930 --> 00:06:12,010
that's one of the amazing things about

00:06:10,010 --> 00:06:14,060
software is it can be anything we want

00:06:12,010 --> 00:06:16,220
but then it can also be anything we want

00:06:14,060 --> 00:06:19,460
and it makes it very easy to for

00:06:16,220 --> 00:06:22,520
interoperability to break so that's why

00:06:19,460 --> 00:06:24,770
it's important early on to look at

00:06:22,520 --> 00:06:26,780
software and try to design software so

00:06:24,770 --> 00:06:29,180
that it will be durable so there will be

00:06:26,780 --> 00:06:31,250
usable and one of them you know and

00:06:29,180 --> 00:06:33,960
we're surrounded by this you know all of

00:06:31,250 --> 00:06:35,370
our web standards HTTP

00:06:33,960 --> 00:06:36,690
interfaces these are based upon

00:06:35,370 --> 00:06:38,930
standards that are durable and have

00:06:36,690 --> 00:06:42,840
lasted for decades the same with

00:06:38,930 --> 00:06:45,509
ethernet right IP addresses even even as

00:06:42,840 --> 00:06:48,569
we move on to ipv6 we still have ipv4

00:06:45,509 --> 00:06:51,120
around as a legacy I doctor to ipv6 as

00:06:48,569 --> 00:06:53,490
our growing needs for the network for

00:06:51,120 --> 00:06:56,910
network space grows so interoperable is

00:06:53,490 --> 00:06:58,500
very important an interoperability has

00:06:56,910 --> 00:07:01,699
been important to the OpenStack

00:06:58,500 --> 00:07:03,870
foundation since the very beginning so

00:07:01,699 --> 00:07:06,810
this text is from the bylaws of the

00:07:03,870 --> 00:07:10,169
foundation as it was in January first of

00:07:06,810 --> 00:07:12,150
2012 your product must pass any faithful

00:07:10,169 --> 00:07:15,030
implementation test suite determined by

00:07:12,150 --> 00:07:16,380
the technical committee to verify that

00:07:15,030 --> 00:07:17,610
you are implementing a sufficiently

00:07:16,380 --> 00:07:20,610
current and complete version of the

00:07:17,610 --> 00:07:24,630
software and to be sure compatibility

00:07:20,610 --> 00:07:25,979
and interoperability right this was a

00:07:24,630 --> 00:07:28,169
statement that was made nine months

00:07:25,979 --> 00:07:30,449
before the OpenStack foundation you know

00:07:28,169 --> 00:07:32,190
became a thing now OpenStack it exists

00:07:30,449 --> 00:07:33,690
is long before this but it's in the

00:07:32,190 --> 00:07:36,509
founding documents that we want to be

00:07:33,690 --> 00:07:38,789
interoperable we want to provide we want

00:07:36,509 --> 00:07:44,610
to provide a number of clouds that could

00:07:38,789 --> 00:07:45,720
all talk to one another so fast forward

00:07:44,610 --> 00:07:47,849
a year to the Oakland stack summit in

00:07:45,720 --> 00:07:49,590
Hong Kong not much had we had been made

00:07:47,849 --> 00:07:53,219
on the interoperability gather those

00:07:49,590 --> 00:07:56,340
fits the notes fits tests never really

00:07:53,219 --> 00:07:57,419
materialized and it was that time that

00:07:56,340 --> 00:07:59,580
the board the OpenStack Board of

00:07:57,419 --> 00:08:01,320
Directors pass the board resolution

00:07:59,580 --> 00:08:04,139
establishing the depth core committee

00:08:01,320 --> 00:08:06,449
and the Deaf core committees job was to

00:08:04,139 --> 00:08:08,520
establish an interoperability standard

00:08:06,449 --> 00:08:12,479
for the application of the trademark to

00:08:08,520 --> 00:08:15,330
OpenStack powered products so this

00:08:12,479 --> 00:08:16,530
committee worked for a solid year and

00:08:15,330 --> 00:08:20,190
they started with the set of guiding

00:08:16,530 --> 00:08:21,960
principles the first was that

00:08:20,190 --> 00:08:23,940
implementations that our core can use

00:08:21,960 --> 00:08:25,199
the OpenStack trademark so we're saying

00:08:23,940 --> 00:08:28,139
that something is core and it can use

00:08:25,199 --> 00:08:30,060
the OpenStack trademark and that core is

00:08:28,139 --> 00:08:31,259
a subset of the OpenStack project and so

00:08:30,060 --> 00:08:32,969
you look at all of the projects that are

00:08:31,259 --> 00:08:36,209
available to us and what we're saying is

00:08:32,969 --> 00:08:38,370
that a small set of those are core and

00:08:36,209 --> 00:08:41,579
they and they and they make up what is

00:08:38,370 --> 00:08:43,349
the trademark able OpenStack for now and

00:08:41,579 --> 00:08:45,720
then this is going to cover all usage

00:08:43,349 --> 00:08:47,730
models public clouds private clouds and

00:08:45,720 --> 00:08:50,880
distributions right so that

00:08:47,730 --> 00:08:52,470
all deployment of OpenStack are equal in

00:08:50,880 --> 00:08:55,709
the eyes of interoperability because

00:08:52,470 --> 00:08:58,889
it's absolutely essential and that

00:08:55,709 --> 00:09:01,589
OpenStack is code and api's so it's not

00:08:58,889 --> 00:09:03,540
sufficient for you to just put up a

00:09:01,589 --> 00:09:04,980
service that has the api's and run the

00:09:03,540 --> 00:09:07,050
interoperability tests against it and

00:09:04,980 --> 00:09:08,970
say that look I'm running OpenStack if

00:09:07,050 --> 00:09:12,690
it's your own special sauce there's

00:09:08,970 --> 00:09:14,670
actually this what what the

00:09:12,690 --> 00:09:16,560
interoperability standard is saying that

00:09:14,670 --> 00:09:18,000
you got if you want to be called

00:09:16,560 --> 00:09:20,730
OpenStack you have to be running the

00:09:18,000 --> 00:09:21,930
code that is developed by the thousands

00:09:20,730 --> 00:09:25,010
and thousands and thousands of hours

00:09:21,930 --> 00:09:26,820
that had been put in by the community

00:09:25,010 --> 00:09:29,100
projects also have to have an open

00:09:26,820 --> 00:09:32,850
reference implementation I think they're

00:09:29,100 --> 00:09:34,410
referring to devstack here which is you

00:09:32,850 --> 00:09:36,060
know if you want to get started with

00:09:34,410 --> 00:09:37,649
OpenStack on your laptop right now you

00:09:36,060 --> 00:09:40,920
could download it and run it and you can

00:09:37,649 --> 00:09:42,209
install almost any service but

00:09:40,920 --> 00:09:43,769
thankfully vendors may substitute

00:09:42,209 --> 00:09:45,360
alternative implementations because

00:09:43,769 --> 00:09:48,959
nobody wants to run a production cloud

00:09:45,360 --> 00:09:50,579
with devstack tests can be remotely

00:09:48,959 --> 00:09:52,620
yourself administered this is another

00:09:50,579 --> 00:09:55,050
important concept how can you know if

00:09:52,620 --> 00:09:56,760
the cloud is interoperable you shouldn't

00:09:55,050 --> 00:09:58,709
have to take my word for it you should

00:09:56,760 --> 00:10:00,120
be able to prove that for yourself but

00:09:58,709 --> 00:10:03,899
that has some consequences associated

00:10:00,120 --> 00:10:05,339
with it one of that is you can't work

00:10:03,899 --> 00:10:07,079
what you can't require any

00:10:05,339 --> 00:10:09,750
interoperability tests that have

00:10:07,079 --> 00:10:11,310
administrator access and so a slide

00:10:09,750 --> 00:10:14,120
product of this is all of the tests that

00:10:11,310 --> 00:10:16,410
you run to check your it refer ability

00:10:14,120 --> 00:10:17,970
have to be available to end users and

00:10:16,410 --> 00:10:20,660
they have to be available to guess with

00:10:17,970 --> 00:10:20,660
non privileged access

00:10:22,700 --> 00:10:28,520
there must pass tests there's not a

00:10:25,490 --> 00:10:31,000
curve that we grade along here it's you

00:10:28,520 --> 00:10:32,840
either pass all of the tests and you

00:10:31,000 --> 00:10:35,570
comply with the standard and you're

00:10:32,840 --> 00:10:37,910
interoperable or you're not right you

00:10:35,570 --> 00:10:39,110
know they're you know and this is

00:10:37,910 --> 00:10:41,180
something that you know again it helps

00:10:39,110 --> 00:10:43,070
to guarantee that a standard that all

00:10:41,180 --> 00:10:45,260
the api's are available and that if

00:10:43,070 --> 00:10:49,120
something has the openstack powered logo

00:10:45,260 --> 00:10:51,230
on it you know for certain that certain

00:10:49,120 --> 00:10:55,580
certain AP is and certain capabilities

00:10:51,230 --> 00:10:57,500
will be there for you to use this was a

00:10:55,580 --> 00:10:58,850
change from the original Fitz definition

00:10:57,500 --> 00:11:01,190
previously it said that the technical

00:10:58,850 --> 00:11:03,140
committee was responsible for defining

00:11:01,190 --> 00:11:05,270
what the tests were this actually sent

00:11:03,140 --> 00:11:06,830
responsibility for defining what Korra's

00:11:05,270 --> 00:11:08,690
back to the board and one part of the

00:11:06,830 --> 00:11:10,240
rationale behind this was was that since

00:11:08,690 --> 00:11:13,820
this is in part trademark protection

00:11:10,240 --> 00:11:15,800
that this is what the board is bapak was

00:11:13,820 --> 00:11:17,870
tasked for and so the board should be

00:11:15,800 --> 00:11:19,820
responsible for defining this now this

00:11:17,870 --> 00:11:21,890
isn't to say that we don't take input

00:11:19,820 --> 00:11:24,500
from the community at large because we

00:11:21,890 --> 00:11:26,510
were like heavily upon the input but at

00:11:24,500 --> 00:11:28,880
the end of the day determining what the

00:11:26,510 --> 00:11:30,590
exact standard is is is by the board and

00:11:28,880 --> 00:11:34,130
right now it happened happens every six

00:11:30,590 --> 00:11:37,160
months and so what is core coming back

00:11:34,130 --> 00:11:40,340
to the original question core is the API

00:11:37,160 --> 00:11:46,940
and code of OpenStack that passes all of

00:11:40,340 --> 00:11:48,670
the must-pass tests so with that the

00:11:46,940 --> 00:11:51,080
deaf core committee got to work on

00:11:48,670 --> 00:11:53,000
guidelines and the guidelines are the

00:11:51,080 --> 00:11:57,830
official documents that say what the

00:11:53,000 --> 00:12:00,530
interoperable standards are so they

00:11:57,830 --> 00:12:02,900
consist of sections called components a

00:12:00,530 --> 00:12:05,390
component is essentially is a product

00:12:02,900 --> 00:12:07,040
that qualifies for a trademark and so in

00:12:05,390 --> 00:12:09,920
this case right now the guideline has

00:12:07,040 --> 00:12:11,630
two components compute and storage we

00:12:09,920 --> 00:12:14,390
can also combine those two components to

00:12:11,630 --> 00:12:16,820
create a third product which we call a

00:12:14,390 --> 00:12:19,520
platform so we have OpenStack compute

00:12:16,820 --> 00:12:21,680
OpenStack storage and OpenStack platform

00:12:19,520 --> 00:12:24,650
and these all fall under the logo of the

00:12:21,680 --> 00:12:26,540
OpenStack powered the definition of

00:12:24,650 --> 00:12:28,970
those components are done in a couple

00:12:26,540 --> 00:12:29,779
ways the first is you have to have

00:12:28,970 --> 00:12:32,779
common code

00:12:29,779 --> 00:12:34,129
these are the designated sections now if

00:12:32,779 --> 00:12:35,899
you were if you recall back to the

00:12:34,129 --> 00:12:37,790
guidelines one of them is that vendors

00:12:35,899 --> 00:12:39,170
don't have to run the reference

00:12:37,790 --> 00:12:41,240
implementation they don't have to run

00:12:39,170 --> 00:12:42,379
the reference code they do have to run

00:12:41,240 --> 00:12:44,029
some of the code but there is an

00:12:42,379 --> 00:12:46,370
opportunity for them to substitute

00:12:44,029 --> 00:12:49,309
things out like specific drivers for

00:12:46,370 --> 00:12:50,990
hypervisors or storage or you know

00:12:49,309 --> 00:12:55,009
different methods that add you know some

00:12:50,990 --> 00:12:59,509
level of security or some level of you

00:12:55,009 --> 00:13:00,589
know of a durability to their system but

00:12:59,509 --> 00:13:02,870
there are certain things that have to

00:13:00,589 --> 00:13:07,180
exist in this code is generally defined

00:13:02,870 --> 00:13:10,699
by the technical leads of the projects

00:13:07,180 --> 00:13:13,279
we also have common api's which are

00:13:10,699 --> 00:13:14,449
defined by capabilities and so the way

00:13:13,279 --> 00:13:15,709
that works in our guideline is that we

00:13:14,449 --> 00:13:18,589
have a list of capabilities that might

00:13:15,709 --> 00:13:20,930
say something like Boutin image and then

00:13:18,589 --> 00:13:23,930
there will be a list of tests underneath

00:13:20,930 --> 00:13:26,059
that that that test that exact

00:13:23,930 --> 00:13:32,240
capability so that you know it is

00:13:26,059 --> 00:13:33,709
working properly within your cloud so

00:13:32,240 --> 00:13:35,180
after about a you're working on this we

00:13:33,709 --> 00:13:37,910
fast forward again to the OpenStack

00:13:35,180 --> 00:13:39,170
summit in Paris and the guidelines that

00:13:37,910 --> 00:13:40,939
the depth core committee has come up

00:13:39,170 --> 00:13:42,680
with and they worked very hard on on the

00:13:40,939 --> 00:13:44,720
on the original set of guidelines were

00:13:42,680 --> 00:13:47,569
advisory that means that they were

00:13:44,720 --> 00:13:51,199
asking vendors to go out and check the

00:13:47,569 --> 00:13:54,230
code against their clouds and you know

00:13:51,199 --> 00:13:55,670
have comments you know how is the how

00:13:54,230 --> 00:13:58,790
was the guideline working how was it not

00:13:55,670 --> 00:13:59,750
working the problem wasn't that if you

00:13:58,790 --> 00:14:02,149
don't require somebody to do something

00:13:59,750 --> 00:14:04,309
they they don't do it right businesses

00:14:02,149 --> 00:14:07,370
have a lot of different interests and

00:14:04,309 --> 00:14:08,779
product interests and and and so there

00:14:07,370 --> 00:14:11,029
was it was recognized that there was

00:14:08,779 --> 00:14:13,519
that we were kind of at a turning point

00:14:11,029 --> 00:14:14,689
like OpenStack was was you know it had

00:14:13,519 --> 00:14:15,860
been around for several years and we

00:14:14,689 --> 00:14:18,170
still didn't have this interoperability

00:14:15,860 --> 00:14:19,670
standard and we were running the risk of

00:14:18,170 --> 00:14:25,509
if we didn't have an interoperability

00:14:19,670 --> 00:14:28,730
standard than we might never have one so

00:14:25,509 --> 00:14:30,470
nuts not not not not too far after the

00:14:28,730 --> 00:14:33,079
OpenStack summit in Paris in December of

00:14:30,470 --> 00:14:35,269
2014 the OpenStack board approved the

00:14:33,079 --> 00:14:38,329
first guideline which set up the

00:14:35,269 --> 00:14:41,339
original 117 must pass tests across

00:14:38,329 --> 00:14:45,670
compute and storage

00:14:41,339 --> 00:14:48,040
you know a cross compute and storage but

00:14:45,670 --> 00:14:50,019
there were you know with the goal of

00:14:48,040 --> 00:14:54,759
enforcing this guideline by April of

00:14:50,019 --> 00:14:56,620
2015 so you know so all new OpenStack

00:14:54,759 --> 00:14:58,870
powered license agreements starting

00:14:56,620 --> 00:15:03,009
april first would be required to pass

00:14:58,870 --> 00:15:04,899
the desk or tests but we had a lot of

00:15:03,009 --> 00:15:06,220
work to do in between they're the first

00:15:04,899 --> 00:15:09,490
ones we had to define a test procedure

00:15:06,220 --> 00:15:11,019
right how are we actually going to run

00:15:09,490 --> 00:15:17,079
the tests and collect the tests right

00:15:11,019 --> 00:15:19,509
vendors needed help on this the second

00:15:17,079 --> 00:15:21,730
was we actually have a lot of broken

00:15:19,509 --> 00:15:23,560
tests right as i mentioned before there

00:15:21,730 --> 00:15:25,029
were 117 tests and all of these tests

00:15:23,560 --> 00:15:27,610
are taken from tempest which is the

00:15:25,029 --> 00:15:29,699
OpenStack the official OpenStack QA

00:15:27,610 --> 00:15:31,990
project right the decision was is that

00:15:29,699 --> 00:15:33,490
we would determine the capabilities by

00:15:31,990 --> 00:15:35,019
what the community thought was important

00:15:33,490 --> 00:15:37,449
and what was important what was being

00:15:35,019 --> 00:15:40,860
tested and sweep all we pulled all of

00:15:37,449 --> 00:15:43,209
those tests from the non-admin API tests

00:15:40,860 --> 00:15:45,160
but there were a bunch of things that

00:15:43,209 --> 00:15:47,529
were broken you know things that that

00:15:45,160 --> 00:15:49,420
that in some ways tests were tuned for

00:15:47,529 --> 00:15:52,029
devstack and when you put them out into

00:15:49,420 --> 00:15:53,500
the wild in a in a production deployment

00:15:52,029 --> 00:15:56,230
they just didn't work or there were just

00:15:53,500 --> 00:15:58,269
some times that didn't work but this is

00:15:56,230 --> 00:15:59,470
this is an example of one of the one of

00:15:58,269 --> 00:16:02,410
the great things about the OpenStack

00:15:59,470 --> 00:16:04,029
community right you know the board

00:16:02,410 --> 00:16:05,800
decides on these tests but then we bring

00:16:04,029 --> 00:16:07,329
them to the community and particularly

00:16:05,800 --> 00:16:09,610
the QA community and they were

00:16:07,329 --> 00:16:10,839
absolutely amazing in looking over the

00:16:09,610 --> 00:16:13,509
set of tests and the problems that we

00:16:10,839 --> 00:16:14,589
were having and we all sat again sat

00:16:13,509 --> 00:16:16,959
down together in a room in New York

00:16:14,589 --> 00:16:20,610
during this time and just worked on

00:16:16,959 --> 00:16:20,610
fixing as many of the tests as possible

00:16:21,389 --> 00:16:24,910
we also had to solicit vendors

00:16:23,410 --> 00:16:27,009
participate in the launch so we had to

00:16:24,910 --> 00:16:30,370
get vendors on board with this right we

00:16:27,009 --> 00:16:31,660
wanted to we wanted to show that you

00:16:30,370 --> 00:16:32,740
could take an OpenStack product and you

00:16:31,660 --> 00:16:35,769
could run the test and you could go

00:16:32,740 --> 00:16:37,449
through it and again there and one of

00:16:35,769 --> 00:16:39,399
the nice things about this by by

00:16:37,449 --> 00:16:41,500
engaging the vendors we were actually

00:16:39,399 --> 00:16:44,230
able to uncover a lot of problems that

00:16:41,500 --> 00:16:47,709
we have with the original guideline and

00:16:44,230 --> 00:16:50,080
and because we know that as a committee

00:16:47,709 --> 00:16:51,850
we can't cover all of our bases we can

00:16:50,080 --> 00:16:53,500
everything we built in a safety valve

00:16:51,850 --> 00:16:56,470
into this where we can allow vendors to

00:16:53,500 --> 00:16:57,970
come up and flag a test by fighting a

00:16:56,470 --> 00:17:01,720
test you actually remove it from the

00:16:57,970 --> 00:17:03,360
must-pass pool right but but you have to

00:17:01,720 --> 00:17:05,920
have a reason that you flag attack like

00:17:03,360 --> 00:17:08,020
the test is testing something that isn't

00:17:05,920 --> 00:17:10,450
widely available an example of this is

00:17:08,020 --> 00:17:12,100
we flagged one test that has the

00:17:10,450 --> 00:17:14,260
capabilities that were only in one

00:17:12,100 --> 00:17:15,910
hypervisor right well it's not realistic

00:17:14,260 --> 00:17:18,220
to have an interoperable standard where

00:17:15,910 --> 00:17:20,170
only one hypervisor can provide that can

00:17:18,220 --> 00:17:22,420
can provide the capability that the test

00:17:20,170 --> 00:17:24,370
is checking for others are just for bugs

00:17:22,420 --> 00:17:26,230
right so if the test has a bug in it

00:17:24,370 --> 00:17:28,000
it's not reasonable to expect someone it

00:17:26,230 --> 00:17:30,760
has that test and so they can flag that

00:17:28,000 --> 00:17:32,590
test with the assumption that at a later

00:17:30,760 --> 00:17:38,140
guideline once that bug is fixed that

00:17:32,590 --> 00:17:39,820
test is going to be reintroduced and so

00:17:38,140 --> 00:17:42,940
six months later at the OpenStack summit

00:17:39,820 --> 00:17:46,510
in Vancouver we had an amazing response

00:17:42,940 --> 00:17:50,020
to this program by then we had 19

00:17:46,510 --> 00:17:52,450
products across 16 companies passing the

00:17:50,020 --> 00:17:53,650
first standard and you know you can

00:17:52,450 --> 00:17:55,390
think about that that's that's that's

00:17:53,650 --> 00:17:58,810
incredible our original goal was to have

00:17:55,390 --> 00:18:00,580
maybe four or five companies but we

00:17:58,810 --> 00:18:02,980
actually had a standard that was

00:18:00,580 --> 00:18:06,910
attainable that test did something

00:18:02,980 --> 00:18:09,280
concrete and you know and and was

00:18:06,910 --> 00:18:11,020
successful you know and that's not to

00:18:09,280 --> 00:18:12,070
say that we let everybody in who tried

00:18:11,020 --> 00:18:13,450
to pass the test there were still a

00:18:12,070 --> 00:18:15,400
number of companies who products for

00:18:13,450 --> 00:18:17,380
some reason or another you know weren't

00:18:15,400 --> 00:18:18,460
able to pass the test you know and

00:18:17,380 --> 00:18:21,190
that's you know you know you know now

00:18:18,460 --> 00:18:23,620
something that we had to work on for for

00:18:21,190 --> 00:18:25,750
them later but you know it was like but

00:18:23,620 --> 00:18:27,910
it was a it was a vindication of you

00:18:25,750 --> 00:18:32,280
know nearly two years of work on

00:18:27,910 --> 00:18:32,280
developing an interoperability standard

00:18:34,700 --> 00:18:42,200
so 2015 was a big year right as a

00:18:40,560 --> 00:18:46,230
mission before we had these flag tests

00:18:42,200 --> 00:18:47,940
117 tests and in March we had flag

00:18:46,230 --> 00:18:49,830
nearly 50 of them that's almost fifty

00:18:47,940 --> 00:18:52,170
percent of the tests which were just

00:18:49,830 --> 00:18:53,670
been validated so it's not surprising

00:18:52,170 --> 00:18:55,740
that a lot of companies were able to

00:18:53,670 --> 00:18:57,150
pass these tests but keep in mind that

00:18:55,740 --> 00:18:58,770
all the companies are going to have to

00:18:57,150 --> 00:19:00,450
renew these licenses at some point and

00:18:58,770 --> 00:19:02,220
so the testing standard is going to get

00:19:00,450 --> 00:19:03,660
more rigorous as time goes on we're

00:19:02,220 --> 00:19:06,090
going to enforce more interoperability

00:19:03,660 --> 00:19:07,050
as time goes on and uncover a lot of the

00:19:06,090 --> 00:19:08,520
problems that we have with the original

00:19:07,050 --> 00:19:12,540
standard with the original test suite

00:19:08,520 --> 00:19:13,980
and indeed the numbers bear that out we

00:19:12,540 --> 00:19:15,780
did a really quick succession of

00:19:13,980 --> 00:19:16,890
guideline releases right we'd go back to

00:19:15,780 --> 00:19:18,000
the board and say we need to fix the

00:19:16,890 --> 00:19:19,680
guideline this way we need to fix the

00:19:18,000 --> 00:19:21,810
guideline this way we had a really had a

00:19:19,680 --> 00:19:23,160
really fast cadence for it and while we

00:19:21,810 --> 00:19:26,040
were doing that we were actively fixing

00:19:23,160 --> 00:19:29,700
the bugs and we went from 50 tests

00:19:26,040 --> 00:19:31,350
almost 47 test flag down to about 30 all

00:19:29,700 --> 00:19:33,240
the way down to seven in the latest

00:19:31,350 --> 00:19:36,150
guideline you know which is which is

00:19:33,240 --> 00:19:38,280
which is which is pretty incredible you

00:19:36,150 --> 00:19:39,980
know in the meantime starting with zero

00:19:38,280 --> 00:19:41,970
companies who are OpenStack powered

00:19:39,980 --> 00:19:44,340
according to the deaf core guidelines

00:19:41,970 --> 00:19:47,160
and already we're up to almost 30

00:19:44,340 --> 00:19:49,560
companies and products that have passed

00:19:47,160 --> 00:19:51,870
the guidelines so it's been it's been a

00:19:49,560 --> 00:19:54,990
very successful project and it's it's

00:19:51,870 --> 00:19:59,880
still you know in it's in the production

00:19:54,990 --> 00:20:03,150
it is it's very early on so what are

00:19:59,880 --> 00:20:07,110
some of the consequences of this right

00:20:03,150 --> 00:20:09,600
well one of the things that OpenStack is

00:20:07,110 --> 00:20:11,430
faced is there are a bunch of projects

00:20:09,600 --> 00:20:12,900
that have updated their AP is and are

00:20:11,430 --> 00:20:14,850
currently in the middle of transitions

00:20:12,900 --> 00:20:17,790
and some of these transitions have have

00:20:14,850 --> 00:20:20,490
lasted years right moving from you know

00:20:17,790 --> 00:20:23,070
the Keystone v1 API to the v2 API to the

00:20:20,490 --> 00:20:26,130
v3 API the glads v2 API to the v3 API

00:20:23,070 --> 00:20:29,100
cinder from v1 to v2 they're all in

00:20:26,130 --> 00:20:30,060
varying states of deployment but one of

00:20:29,100 --> 00:20:31,680
the things that the death court

00:20:30,060 --> 00:20:33,330
committee uncovered was that it's

00:20:31,680 --> 00:20:34,740
actually written that we push all of

00:20:33,330 --> 00:20:37,260
these api's forward and start to

00:20:34,740 --> 00:20:39,750
standardize on them so we've seen a

00:20:37,260 --> 00:20:42,060
number of clients start using the latest

00:20:39,750 --> 00:20:43,740
version of the AP is a number of proxies

00:20:42,060 --> 00:20:44,130
are scheduled to use the latest versions

00:20:43,740 --> 00:20:46,710
of the

00:20:44,130 --> 00:20:48,120
the eyes and we've also started looking

00:20:46,710 --> 00:20:49,680
forward and saying that maybe proxies

00:20:48,120 --> 00:20:51,330
aren't the way to go maybe we should

00:20:49,680 --> 00:20:52,710
start dropping the proxies and really

00:20:51,330 --> 00:20:54,420
focusing on the project's themselves in

00:20:52,710 --> 00:20:56,400
the api's and so there's a lot there's

00:20:54,420 --> 00:20:58,470
been a lot of API and client maturation

00:20:56,400 --> 00:21:00,900
and also a highlighting of the

00:20:58,470 --> 00:21:02,460
importance of keeping the API stable so

00:21:00,900 --> 00:21:04,160
a number of OpenStack projects now and

00:21:02,460 --> 00:21:06,540
this was happening before but is now

00:21:04,160 --> 00:21:08,580
being largely pushed as the way going

00:21:06,540 --> 00:21:11,430
forward are using micro versioning so

00:21:08,580 --> 00:21:13,290
that api's change slowly and

00:21:11,430 --> 00:21:15,750
deliberately rather than in giant leaps

00:21:13,290 --> 00:21:21,120
that take years and have a huge impact

00:21:15,750 --> 00:21:23,190
on ecosystem we have greater vendor

00:21:21,120 --> 00:21:24,360
participation right so the Deaf core

00:21:23,190 --> 00:21:26,040
committee was pretty small to start off

00:21:24,360 --> 00:21:27,750
with there were a few vendors who are

00:21:26,040 --> 00:21:29,400
involved with it now more vendors show

00:21:27,750 --> 00:21:31,710
up more vendors or testing more vendors

00:21:29,400 --> 00:21:34,590
are giving their feedback and so we've

00:21:31,710 --> 00:21:37,440
created this nice feedback mechanism

00:21:34,590 --> 00:21:38,580
where the developers get to work with

00:21:37,440 --> 00:21:40,920
the deaf core committee and help

00:21:38,580 --> 00:21:43,650
identify what's important and then the

00:21:40,920 --> 00:21:45,140
users and the vendors see how that

00:21:43,650 --> 00:21:47,610
standard is working and they can raise

00:21:45,140 --> 00:21:49,020
objections to it they can raise issues

00:21:47,610 --> 00:21:50,700
with it they cannot they can they can

00:21:49,020 --> 00:21:52,710
offer suggestions and give really good

00:21:50,700 --> 00:21:54,240
feedback and you know and i think that

00:21:52,710 --> 00:21:55,830
the feedback loop that we've seen in the

00:21:54,240 --> 00:21:58,170
you know since the since the vancouver

00:21:55,830 --> 00:22:02,130
summit you know has it has been really

00:21:58,170 --> 00:22:03,750
positive really growing as i mentioned

00:22:02,130 --> 00:22:05,430
before test suite improvements you know

00:22:03,750 --> 00:22:07,020
not just in finding bugs and squashing

00:22:05,430 --> 00:22:08,670
the bugs but also in usability of the

00:22:07,020 --> 00:22:11,510
test suite we're starting to think

00:22:08,670 --> 00:22:14,010
really hard about you know tempest has

00:22:11,510 --> 00:22:16,260
hundreds of configuration options you

00:22:14,010 --> 00:22:18,510
know writing documentation that says how

00:22:16,260 --> 00:22:20,190
do you configure the test suite what's

00:22:18,510 --> 00:22:22,200
important what's the basic way to start

00:22:20,190 --> 00:22:24,450
how can you consolidate your

00:22:22,200 --> 00:22:26,550
configuration resources into one file so

00:22:24,450 --> 00:22:28,080
that you're not chasing down all of

00:22:26,550 --> 00:22:31,290
these configuration lines across this

00:22:28,080 --> 00:22:33,870
enormous file plugins to allow other

00:22:31,290 --> 00:22:36,060
projects to plug their projects and

00:22:33,870 --> 00:22:38,610
their technical testing expertise into

00:22:36,060 --> 00:22:40,650
the official QA project is a plug-in so

00:22:38,610 --> 00:22:42,650
that we have one integrated testing

00:22:40,650 --> 00:22:45,120
infrastructure that we can then use to

00:22:42,650 --> 00:22:46,890
verify interoperability rather than

00:22:45,120 --> 00:22:49,790
dozens of testing infrastructures across

00:22:46,890 --> 00:22:49,790
dozens of projects

00:22:50,169 --> 00:22:54,980
and we're looking at growing the program

00:22:53,150 --> 00:22:58,309
now right I mentioned before that we

00:22:54,980 --> 00:23:02,000
were largely focused on compute and

00:22:58,309 --> 00:23:05,480
storage now I mean yeah computing

00:23:02,000 --> 00:23:07,190
storage but networking was implicitly

00:23:05,480 --> 00:23:08,600
required by this identity was implicitly

00:23:07,190 --> 00:23:10,460
required by this we had all of these

00:23:08,600 --> 00:23:13,250
images were implicitly required on this

00:23:10,460 --> 00:23:15,020
we're moving to add a whole new set of

00:23:13,250 --> 00:23:17,270
capabilities for storage network and

00:23:15,020 --> 00:23:18,950
identity that's going to expand the

00:23:17,270 --> 00:23:21,110
scope of the api's that we're testing

00:23:18,950 --> 00:23:24,830
that are being pulled in and defined as

00:23:21,110 --> 00:23:26,330
core OpenStack and this is this this is

00:23:24,830 --> 00:23:29,000
coming forward in the next guideline the

00:23:26,330 --> 00:23:33,409
next def core guideline is scheduled to

00:23:29,000 --> 00:23:37,240
be approved in January first so it's

00:23:33,409 --> 00:23:37,240
going to be the 2016 01 guideline and

00:23:38,799 --> 00:23:42,140
you know and all these capabilities are

00:23:40,909 --> 00:23:44,600
going to be advisory so that we have

00:23:42,140 --> 00:23:46,220
another six months for users and vendors

00:23:44,600 --> 00:23:51,590
to really go out run the tests and

00:23:46,220 --> 00:23:53,650
identify problems we're also moving to a

00:23:51,590 --> 00:23:57,919
more deliberate six-month cadence of

00:23:53,650 --> 00:23:59,780
guideline updates the way that works is

00:23:57,919 --> 00:24:03,740
that each new cycle kind of starts three

00:23:59,780 --> 00:24:05,059
months before the next summit so we

00:24:03,740 --> 00:24:06,980
start three months before summit with a

00:24:05,059 --> 00:24:10,370
new guideline where we say that this is

00:24:06,980 --> 00:24:11,900
going to be the draft status two months

00:24:10,370 --> 00:24:13,070
before the summit we've identified new

00:24:11,900 --> 00:24:16,429
capabilities that we would like to

00:24:13,070 --> 00:24:18,890
include one ones before the summit we've

00:24:16,429 --> 00:24:23,960
scored those new capabilities and we're

00:24:18,890 --> 00:24:26,090
preparing in we're preparing an advisory

00:24:23,960 --> 00:24:28,669
guideline for review by the board this

00:24:26,090 --> 00:24:30,080
is including things like what new

00:24:28,669 --> 00:24:32,000
capabilities are we advising that they

00:24:30,080 --> 00:24:35,990
add what capabilities do we advise that

00:24:32,000 --> 00:24:37,340
we deprecate and we place the guideline

00:24:35,990 --> 00:24:40,700
into the review status with the approval

00:24:37,340 --> 00:24:42,980
from the board of directors then after

00:24:40,700 --> 00:24:44,450
the summit we get to work one month

00:24:42,980 --> 00:24:46,730
after it vendors and communities test

00:24:44,450 --> 00:24:48,559
the guidelines they offer their feedback

00:24:46,730 --> 00:24:51,890
and problematic tests are flagged by the

00:24:48,559 --> 00:24:53,539
second month and then by the third month

00:24:51,890 --> 00:24:56,360
the guideline is set to the approved

00:24:53,539 --> 00:24:58,789
status one of the nice things about this

00:24:56,360 --> 00:25:02,570
cadence is that by placing the major

00:24:58,789 --> 00:25:03,170
points at the mid cycles right where

00:25:02,570 --> 00:25:04,880
we're Cree

00:25:03,170 --> 00:25:06,050
you set where we're creating new

00:25:04,880 --> 00:25:09,470
guidelines and we're starting the

00:25:06,050 --> 00:25:13,160
guidelines it gives us time to during

00:25:09,470 --> 00:25:15,560
the development cycle to roll the new

00:25:13,160 --> 00:25:17,660
guideline out and then get people to use

00:25:15,560 --> 00:25:19,460
it so that there's not a mad rush right

00:25:17,660 --> 00:25:23,360
before the summit of companies trying to

00:25:19,460 --> 00:25:24,590
send in their test results and and get

00:25:23,360 --> 00:25:26,950
and get powered licenses for the new

00:25:24,590 --> 00:25:26,950
products

00:25:31,910 --> 00:25:38,600
so how does the network committee work I

00:25:36,230 --> 00:25:40,070
mean how do you how do you test a

00:25:38,600 --> 00:25:42,290
product for the OpenStack powered

00:25:40,070 --> 00:25:43,460
license the first thing you do is you

00:25:42,290 --> 00:25:46,070
set up your product with the testing

00:25:43,460 --> 00:25:48,050
requirements right now we require an API

00:25:46,070 --> 00:25:51,680
endpoint with two guest user accounts no

00:25:48,050 --> 00:25:53,210
administrator access you need to set up

00:25:51,680 --> 00:25:54,440
your cloud with two images so they need

00:25:53,210 --> 00:25:56,660
to be independent images that can be

00:25:54,440 --> 00:25:58,490
booted to verify that you can you can

00:25:56,660 --> 00:25:59,570
you can start your systems up and you

00:25:58,490 --> 00:26:01,220
need to have some sort of publicly

00:25:59,570 --> 00:26:03,230
accessible network so you need a network

00:26:01,220 --> 00:26:05,870
that once a machine comes up on to it

00:26:03,230 --> 00:26:07,790
you can ssh into that machine a neutron

00:26:05,870 --> 00:26:09,170
has and neutron has a bunch of different

00:26:07,790 --> 00:26:14,840
networking models to accomplish this

00:26:09,170 --> 00:26:16,160
with you download the client tool that

00:26:14,840 --> 00:26:19,250
we use for interoperability testing

00:26:16,160 --> 00:26:21,560
called rep stack rest at client and you

00:26:19,250 --> 00:26:23,180
configure it to run the tempest test

00:26:21,560 --> 00:26:27,170
suite using the values that you set

00:26:23,180 --> 00:26:28,520
there you then run the tests and ref

00:26:27,170 --> 00:26:30,650
stack will automatically upload the

00:26:28,520 --> 00:26:32,090
results to rep stack and ref stack will

00:26:30,650 --> 00:26:33,800
do a lot of the heavy lifting of telling

00:26:32,090 --> 00:26:35,230
you whether or not you qualify for the

00:26:33,800 --> 00:26:37,850
guidelines even taking into account

00:26:35,230 --> 00:26:39,410
tests that have been flagged and so this

00:26:37,850 --> 00:26:41,900
is a recent test result that went up and

00:26:39,410 --> 00:26:44,300
it is passing the latest 2015 07

00:26:41,900 --> 00:26:46,310
standard yes and you can choose

00:26:44,300 --> 00:26:49,070
different standards you can see which

00:26:46,310 --> 00:26:50,780
tests failed you know and go back and

00:26:49,070 --> 00:26:53,120
you know if you can you can get an

00:26:50,780 --> 00:26:55,190
account on ref stack you can you know

00:26:53,120 --> 00:26:57,620
the results are anonymous so I don't

00:26:55,190 --> 00:27:00,050
know what company sent this to me but

00:26:57,620 --> 00:27:01,970
when they but when they you know who

00:27:00,050 --> 00:27:04,580
said these results up but when a company

00:27:01,970 --> 00:27:06,380
has successful passing test results they

00:27:04,580 --> 00:27:07,700
can then it send me the refs tech ID and

00:27:06,380 --> 00:27:09,650
I can verify that they've and deep pass

00:27:07,700 --> 00:27:12,530
the test you know so this is a way for

00:27:09,650 --> 00:27:13,760
companies to you know to do a lot of

00:27:12,530 --> 00:27:16,160
testing and maybe not embarrass

00:27:13,760 --> 00:27:20,030
themselves until they're ready to share

00:27:16,160 --> 00:27:21,290
their results publicly once that happens

00:27:20,030 --> 00:27:22,430
they send the results to me and they

00:27:21,290 --> 00:27:26,060
applied for the OpenStack powered

00:27:22,430 --> 00:27:27,650
licensing agreement and then the product

00:27:26,060 --> 00:27:29,840
appears in the OpenStack marketplace and

00:27:27,650 --> 00:27:31,730
so their product is featured with the

00:27:29,840 --> 00:27:33,710
description of it the guideline that

00:27:31,730 --> 00:27:35,630
they passed in the OpenStack powered

00:27:33,710 --> 00:27:36,300
logo and these are all available online

00:27:35,630 --> 00:27:38,070
for you

00:27:36,300 --> 00:27:39,660
to look so if you're a consumer if

00:27:38,070 --> 00:27:41,100
you're in a user looking trying to

00:27:39,660 --> 00:27:43,410
decide which OpenStack product you want

00:27:41,100 --> 00:27:45,780
to use you can see which guidelines they

00:27:43,410 --> 00:27:47,670
pass and you can compare you know which

00:27:45,780 --> 00:27:53,850
which interoperability standards that

00:27:47,670 --> 00:27:55,740
passed and we've decided to grow the

00:27:53,850 --> 00:27:59,460
program even more and so we started with

00:27:55,740 --> 00:28:01,650
OpenStack power with compute storage and

00:27:59,460 --> 00:28:03,150
platform but they're actually a number

00:28:01,650 --> 00:28:05,760
of logo programs within the OpenStack

00:28:03,150 --> 00:28:10,470
foundation we also have an OpenStack

00:28:05,760 --> 00:28:12,690
compatible program and the OpenStack

00:28:10,470 --> 00:28:15,570
compatible program covers non OpenStack

00:28:12,690 --> 00:28:17,820
code but things that can run on or with

00:28:15,570 --> 00:28:19,950
OpenStack and so this is storage drivers

00:28:17,820 --> 00:28:23,100
or network drivers or even applications

00:28:19,950 --> 00:28:24,960
that run on top of OpenStack and we're

00:28:23,100 --> 00:28:27,450
rolling out new testing programs

00:28:24,960 --> 00:28:29,360
developed with the community where you

00:28:27,450 --> 00:28:31,440
have to pass continuous integration

00:28:29,360 --> 00:28:33,990
continuous integration testing for

00:28:31,440 --> 00:28:35,130
storage and network drivers and so these

00:28:33,990 --> 00:28:37,560
are the tests that are defined by the

00:28:35,130 --> 00:28:40,650
community to be a proper driver for that

00:28:37,560 --> 00:28:42,060
project starting November first all

00:28:40,650 --> 00:28:44,550
storage drivers are going to be required

00:28:42,060 --> 00:28:46,410
to pass continuous integration testing

00:28:44,550 --> 00:28:48,000
within as defined by the OpenStack

00:28:46,410 --> 00:28:50,010
community to qualify for the OpenStack

00:28:48,000 --> 00:28:52,650
compatible mark and we're hoping to

00:28:50,010 --> 00:28:55,620
bring network drivers online by the

00:28:52,650 --> 00:28:57,720
Austin summit next year and then we're

00:28:55,620 --> 00:29:00,750
also looking on trying to define an app

00:28:57,720 --> 00:29:02,730
testing framework and so how how do you

00:29:00,750 --> 00:29:04,560
show that how do you have you

00:29:02,730 --> 00:29:05,850
demonstrate that in a repeatable way

00:29:04,560 --> 00:29:07,770
that your apps can run on top of

00:29:05,850 --> 00:29:09,030
OpenStack and so you know this is

00:29:07,770 --> 00:29:12,330
another way that we're trying to

00:29:09,030 --> 00:29:15,870
strengthen the OpenStack brand by

00:29:12,330 --> 00:29:17,640
requiring interoperability you know you

00:29:15,870 --> 00:29:19,380
know as a means to protect the brand but

00:29:17,640 --> 00:29:21,210
also as a means to protect users and the

00:29:19,380 --> 00:29:23,700
developers the users who want to make

00:29:21,210 --> 00:29:25,800
sure that they have an OpenStack system

00:29:23,700 --> 00:29:28,230
that is indeed interoperable and the

00:29:25,800 --> 00:29:32,340
developers who have put in so much

00:29:28,230 --> 00:29:35,460
effort to create this this amazing

00:29:32,340 --> 00:29:38,130
product so coming back to the idea of

00:29:35,460 --> 00:29:40,410
interoperability OpenStack has mature

00:29:38,130 --> 00:29:42,610
stable interfaces that are thoroughly

00:29:40,410 --> 00:29:45,800
tested their understood

00:29:42,610 --> 00:29:47,740
they're stable and consistent right so

00:29:45,800 --> 00:29:49,940
so you know we're you know we're

00:29:47,740 --> 00:29:51,890
stabilizing on the API is the tests

00:29:49,940 --> 00:29:55,400
don't change radically from from release

00:29:51,890 --> 00:29:57,200
the release and most important of all

00:29:55,400 --> 00:29:58,880
its opening free for all you can go

00:29:57,200 --> 00:30:02,530
download OpenStack and install right now

00:29:58,880 --> 00:30:02,530
and you can have an interoperable cloud

00:30:02,980 --> 00:30:08,960
you know and the goal here is that we

00:30:05,360 --> 00:30:12,140
want to have an OpenStack powered planet

00:30:08,960 --> 00:30:16,280
that you know and we're seeing this you

00:30:12,140 --> 00:30:18,910
know a large number of retailers are

00:30:16,280 --> 00:30:21,740
moving to OpenStack walmart for example

00:30:18,910 --> 00:30:24,680
you know they last year they ran Black

00:30:21,740 --> 00:30:26,480
Friday on OpenStack comcast and time

00:30:24,680 --> 00:30:28,220
warner cable are delivering content

00:30:26,480 --> 00:30:31,460
through OpenStack we have film studios

00:30:28,220 --> 00:30:35,500
using OpenStack to to produce movies you

00:30:31,460 --> 00:30:38,060
know it's something that it's not it's

00:30:35,500 --> 00:30:41,390
you know OpenStack is gaining traction

00:30:38,060 --> 00:30:43,430
and OpenStack is is it is being used and

00:30:41,390 --> 00:30:46,940
this is one of the tools that we help

00:30:43,430 --> 00:30:48,320
create create a world where this

00:30:46,940 --> 00:30:52,600
ubiquitous clap where we have

00:30:48,320 --> 00:30:52,600
interoperable ubiquitous cloud platforms

00:30:52,690 --> 00:30:57,980
so that's the end of my and thanks

00:30:56,480 --> 00:31:00,940
everybody for coming and we hope you

00:30:57,980 --> 00:31:00,940

YouTube URL: https://www.youtube.com/watch?v=v45yWVf5B1g


