Title: Big Data made easy with a Spark (3.0) - Jean-Georges Perrin
Publication date: 2020-12-04
Playlist: All Things Open 2020 - Extended Session Tracks
Description: 
	Presented by: Jean-Georges Perrin, Advance Auto Parts
Presented at All Things Open 2020 - Extended Sessions Tracks

Abstract: In this hands-on session, fully updated for Spark 3.0, you will learn how to do a full Big Data scenario from ingestion to publication. You will see how we can use Java and Apache Spark to ingest data, perform some transformations, save the data. You will then perform a second lab where you will run your very first Machine Learning algorithm! We will demystify the magic behind Big Data analytics and jump into a pragmatic way to build our use-case.

Requirements to follow the lab: a recent Eclipse (or equivalent) installation, Java 8. Checklist for warming up: http://jgp.net/ato. The slides will be different.
Captions: 
	00:00:05,440 --> 00:00:09,760
thank you very much for joining today

00:00:07,279 --> 00:00:10,960
uh we are going to talk about big data

00:00:09,760 --> 00:00:15,120
made easy with

00:00:10,960 --> 00:00:18,160
a small spark um this stock

00:00:15,120 --> 00:00:20,240
is spreading over three sessions um so

00:00:18,160 --> 00:00:22,640
it will take a lot of time

00:00:20,240 --> 00:00:23,359
we will have breaks in the middle okay

00:00:22,640 --> 00:00:25,760
so

00:00:23,359 --> 00:00:27,119
and you during the break uh at least

00:00:25,760 --> 00:00:28,160
during the first break you'll have a

00:00:27,119 --> 00:00:30,480
little bit of homework

00:00:28,160 --> 00:00:32,000
uh just to make sure we catch up i'm

00:00:30,480 --> 00:00:35,440
trying to make this work as

00:00:32,000 --> 00:00:38,719
um as um

00:00:35,440 --> 00:00:40,719
interactive as possible um so do not

00:00:38,719 --> 00:00:41,600
hesitate to to stop me we're kind of

00:00:40,719 --> 00:00:44,480
building

00:00:41,600 --> 00:00:45,840
on top of one another of of what we are

00:00:44,480 --> 00:00:48,800
of what we are doing

00:00:45,840 --> 00:00:51,280
so it might just be very it can actually

00:00:48,800 --> 00:00:56,559
be very complex at some point if we

00:00:51,280 --> 00:00:56,559
you know if we lose track um okay so

00:00:56,879 --> 00:01:03,440
let's get it okay getting started

00:00:59,920 --> 00:01:07,280
a quick intro uh so my name is george or

00:01:03,440 --> 00:01:10,400
jg parent um i've been in software since

00:01:07,280 --> 00:01:13,760
1983 uh i was 12.

00:01:10,400 --> 00:01:15,920
um but um i'd like to say that i'm

00:01:13,760 --> 00:01:19,680
making money since normally 95.

00:01:15,920 --> 00:01:22,080
and same thing with big data and ai

00:01:19,680 --> 00:01:22,799
the funny funny anecdote about big data

00:01:22,080 --> 00:01:25,520
is

00:01:22,799 --> 00:01:27,439
that of course the terms was not calling

00:01:25,520 --> 00:01:31,600
at all but when i was 13

00:01:27,439 --> 00:01:34,960
um i wanted to track park meters

00:01:31,600 --> 00:01:37,759
traffic lights uh and all this kind of

00:01:34,960 --> 00:01:38,799
smart city uh environment and collect

00:01:37,759 --> 00:01:40,960
all of that

00:01:38,799 --> 00:01:42,399
on and to make sure that we would live

00:01:40,960 --> 00:01:45,520
in a safer world

00:01:42,399 --> 00:01:48,320
um that was with my um

00:01:45,520 --> 00:01:49,040
that was with my battery 800 xl at that

00:01:48,320 --> 00:01:52,240
time

00:01:49,040 --> 00:01:54,079
uh with 64 kilobyte of memory so

00:01:52,240 --> 00:01:55,910
needless to say that it was definitely

00:01:54,079 --> 00:01:57,520
not a success um

00:01:55,910 --> 00:01:59,439
[Music]

00:01:57,520 --> 00:02:01,119
i've been an ibm champion for 12 years

00:01:59,439 --> 00:02:04,240
that's something i'm a little bit

00:02:01,119 --> 00:02:07,520
proud of uh ibm champions are

00:02:04,240 --> 00:02:09,840
toad leaders and uh

00:02:07,520 --> 00:02:11,360
uh people recognized by the i by the ibm

00:02:09,840 --> 00:02:13,760
community for

00:02:11,360 --> 00:02:15,120
for for the contribution uh in the

00:02:13,760 --> 00:02:17,680
industry and for ibm

00:02:15,120 --> 00:02:19,200
and uh it's something i kind of look

00:02:17,680 --> 00:02:21,680
forward to

00:02:19,200 --> 00:02:22,560
you can follow me on twitter jgperin

00:02:21,680 --> 00:02:25,440
i've got a blog

00:02:22,560 --> 00:02:27,040
at jgp.ai which i must admit i'm not

00:02:25,440 --> 00:02:30,239
really up to date with

00:02:27,040 --> 00:02:31,280
uh and recently in the rally during

00:02:30,239 --> 00:02:33,200
maria we created

00:02:31,280 --> 00:02:34,319
uh up for la french tech which is an

00:02:33,200 --> 00:02:36,640
interesting way to

00:02:34,319 --> 00:02:37,840
to gather french entrepreneurs and

00:02:36,640 --> 00:02:41,200
technologists

00:02:37,840 --> 00:02:44,080
uh in in in

00:02:41,200 --> 00:02:45,200
in the us and in france and to create a

00:02:44,080 --> 00:02:50,000
network with

00:02:45,200 --> 00:02:52,959
with people uh here or in the us

00:02:50,000 --> 00:02:53,680
i am look i'm living in north carolina

00:02:52,959 --> 00:02:56,400
in a town

00:02:53,680 --> 00:02:57,280
called chapel hill which is not too far

00:02:56,400 --> 00:02:59,599
away from

00:02:57,280 --> 00:03:00,800
durham and raleigh if you're familiar

00:02:59,599 --> 00:03:03,680
with them

00:03:00,800 --> 00:03:05,120
so i i work for a company called

00:03:03,680 --> 00:03:08,080
advanced auto parts

00:03:05,120 --> 00:03:09,200
uh it's a great company to work for i i

00:03:08,080 --> 00:03:10,959
i love it

00:03:09,200 --> 00:03:12,800
we just made an announcement about open

00:03:10,959 --> 00:03:16,000
source uh not even a

00:03:12,800 --> 00:03:19,360
an hour ago uh i i would really

00:03:16,000 --> 00:03:21,440
invite you to to to to check it out

00:03:19,360 --> 00:03:22,720
uh because because it's something it's

00:03:21,440 --> 00:03:26,860
something kind of fun

00:03:22,720 --> 00:03:28,159
um and

00:03:26,860 --> 00:03:31,440
[Music]

00:03:28,159 --> 00:03:35,040
i am also the offer

00:03:31,440 --> 00:03:38,319
of spark in action the second edition

00:03:35,040 --> 00:03:40,159
uh so people

00:03:38,319 --> 00:03:41,599
are telling us saying that i'm an expert

00:03:40,159 --> 00:03:43,040
at spirit i don't know if i'm an expert

00:03:41,599 --> 00:03:44,879
as part but at least i

00:03:43,040 --> 00:03:46,400
i read the book i had a lot of pleasure

00:03:44,879 --> 00:03:48,239
writing it and i have a lot of pleasure

00:03:46,400 --> 00:03:52,080
sharing and talking about it

00:03:48,239 --> 00:03:55,519
and well it gave me some credentials to

00:03:52,080 --> 00:03:58,480
give talks and stuff like that up

00:03:55,519 --> 00:03:58,959
so okay all the marketing is

00:03:58,480 --> 00:04:01,760
gone

00:03:58,959 --> 00:04:03,680
uh let's let's get let's get to let's

00:04:01,760 --> 00:04:06,080
get to the fang

00:04:03,680 --> 00:04:06,879
i i designed this to be a hands-on

00:04:06,080 --> 00:04:10,560
tutorial

00:04:06,879 --> 00:04:13,599
okay so the first so during so

00:04:10,560 --> 00:04:17,919
so it's really about you trying

00:04:13,599 --> 00:04:21,440
as i talk as we are going through it

00:04:17,919 --> 00:04:24,720
unfortunately uh it's

00:04:21,440 --> 00:04:28,000
there's there's i don't know you um

00:04:24,720 --> 00:04:29,600
i i'd love to know you more um i'd love

00:04:28,000 --> 00:04:33,280
to see a little intro

00:04:29,600 --> 00:04:37,120
if you can in in the chat uh

00:04:33,280 --> 00:04:40,800
um and um

00:04:37,120 --> 00:04:43,040
and uh so so just feel free feel free

00:04:40,800 --> 00:04:44,400
uh feel free to chat to tell me a little

00:04:43,040 --> 00:04:45,520
bit if you have any experience with

00:04:44,400 --> 00:04:46,800
spark if

00:04:45,520 --> 00:04:48,479
what you've been doing what's your

00:04:46,800 --> 00:04:49,759
background that would be super helpful

00:04:48,479 --> 00:04:50,400
to kind of tailor a little bit of

00:04:49,759 --> 00:04:51,360
content

00:04:50,400 --> 00:04:54,560
and make it a little bit more

00:04:51,360 --> 00:04:57,199
interesting for you um

00:04:54,560 --> 00:04:58,479
we um so if you have a screen sharing

00:04:57,199 --> 00:05:01,520
technology

00:04:58,479 --> 00:05:04,800
uh just uh just

00:05:01,520 --> 00:05:07,520
just try uh go there and

00:05:04,800 --> 00:05:10,000
uh screen capture just just make a

00:05:07,520 --> 00:05:13,600
screen cap of that or go to jdp.net

00:05:10,000 --> 00:05:17,759
ato to install the the

00:05:13,600 --> 00:05:20,000
um to uh

00:05:17,759 --> 00:05:21,680
to to download to to know what to do and

00:05:20,000 --> 00:05:24,080
to get started with the code

00:05:21,680 --> 00:05:25,680
uh so that will be that will be a little

00:05:24,080 --> 00:05:28,400
bit helpful

00:05:25,680 --> 00:05:30,160
oh okay so i see a few questions yes

00:05:28,400 --> 00:05:31,919
when image dollar superior to zero

00:05:30,160 --> 00:05:34,720
that's when i started making money

00:05:31,919 --> 00:05:36,560
um before that it was just for other

00:05:34,720 --> 00:05:38,560
ones and depending on my parents

00:05:36,560 --> 00:05:39,919
not that i did not depend on my parents

00:05:38,560 --> 00:05:41,120
after but that was on debate that's

00:05:39,919 --> 00:05:44,560
another story

00:05:41,120 --> 00:05:48,400
um the yeah so

00:05:44,560 --> 00:05:49,199
uh the url of david's url for the

00:05:48,400 --> 00:05:52,479
announcement

00:05:49,199 --> 00:05:54,240
uh you'll find that in if you look for

00:05:52,479 --> 00:05:57,280
advanced auto part or

00:05:54,240 --> 00:05:59,840
in the all things open um website

00:05:57,280 --> 00:06:00,960
you you you will you will see that i

00:05:59,840 --> 00:06:04,560
don't have a quick link

00:06:00,960 --> 00:06:08,400
there to share you uh and yeah sumanta

00:06:04,560 --> 00:06:09,520
you have been using hadoop and you want

00:06:08,400 --> 00:06:12,000
to learn more about spark

00:06:09,520 --> 00:06:12,880
uh that's perfect i'm glad that you're

00:06:12,000 --> 00:06:14,960
seeing the

00:06:12,880 --> 00:06:16,960
the light at the end of the tunnel and

00:06:14,960 --> 00:06:18,720
that you finally see that hadoop is not

00:06:16,960 --> 00:06:21,840
definitely not the way to go for

00:06:18,720 --> 00:06:24,400
anything so uh

00:06:21,840 --> 00:06:24,960
yeah well uh david if you want to go to

00:06:24,400 --> 00:06:26,800
our shop

00:06:24,960 --> 00:06:28,880
it's all fine you can go to our shop and

00:06:26,800 --> 00:06:29,280
buy stuff as well well we took a comment

00:06:28,880 --> 00:06:32,240
that's

00:06:29,280 --> 00:06:33,520
paying my salary with that so okay so

00:06:32,240 --> 00:06:34,639
i'd like to know a little bit about you

00:06:33,520 --> 00:06:37,759
as well so

00:06:34,639 --> 00:06:40,800
um guys uh who has experience with

00:06:37,759 --> 00:06:43,680
with spark go go ahead use use a chat

00:06:40,800 --> 00:06:43,680
any experience

00:06:44,880 --> 00:06:47,759
i like when nobody has experience like

00:06:46,319 --> 00:06:48,400
it means that i can say anything and

00:06:47,759 --> 00:06:51,599
nobody

00:06:48,400 --> 00:06:54,800
nobody uh thanks actually uh

00:06:51,599 --> 00:06:56,400
thanks alex franson cop thanks david oh

00:06:54,800 --> 00:06:59,520
david you're very little okay

00:06:56,400 --> 00:07:01,599
uh okay great um

00:06:59,520 --> 00:07:03,120
that's that's great that that's that's

00:07:01,599 --> 00:07:04,960
that's that's great

00:07:03,120 --> 00:07:06,160
uh i've got to be careful about molly

00:07:04,960 --> 00:07:07,759
she's she seems to have a little bit of

00:07:06,160 --> 00:07:10,560
experience with pi spark

00:07:07,759 --> 00:07:12,560
okay uh and greg yeah no experience just

00:07:10,560 --> 00:07:16,160
cruising that's fine okay

00:07:12,560 --> 00:07:19,280
who as uh uh

00:07:16,160 --> 00:07:19,280
okay thanks guys

00:07:19,840 --> 00:07:24,800
yeah i i love that okay we can we can

00:07:22,720 --> 00:07:28,840
make it interactive it will work

00:07:24,800 --> 00:07:30,479
okay um does anyone has experience with

00:07:28,840 --> 00:07:34,160
hadoop

00:07:30,479 --> 00:07:37,199
i see that at least uh oh john has

00:07:34,160 --> 00:07:41,120
matt yee oh jennifer no no jennifer

00:07:37,199 --> 00:07:44,560
that's okay okay so um

00:07:41,120 --> 00:07:46,479
okay so the do do the guys

00:07:44,560 --> 00:07:48,080
who have experience with hadoop did you

00:07:46,479 --> 00:07:51,840
like your experience with hadoop

00:07:48,080 --> 00:07:54,960
i'm curious if you if you if you

00:07:51,840 --> 00:07:56,240
um okay

00:07:54,960 --> 00:07:58,000
so i don't know i don't know if they

00:07:56,240 --> 00:07:59,920
like it or they hate

00:07:58,000 --> 00:08:03,029
it so

00:07:59,920 --> 00:08:03,029
[Music]

00:08:05,280 --> 00:08:08,960
yeah so okay um

00:08:09,360 --> 00:08:16,720
yeah okay i i think hdfs is good too

00:08:13,199 --> 00:08:19,280
let's go with scanner anyone experience

00:08:16,720 --> 00:08:19,280
with scanner

00:08:25,680 --> 00:08:31,120
yeah alex i'm i'm completely with you

00:08:28,879 --> 00:08:32,880
all of it is good enough okay so we're

00:08:31,120 --> 00:08:34,080
not going to use scanner in any of the

00:08:32,880 --> 00:08:40,880
examples there

00:08:34,080 --> 00:08:43,809
any experience with java okay

00:08:40,880 --> 00:08:46,000
good good good uh

00:08:43,809 --> 00:08:48,320
[Music]

00:08:46,000 --> 00:08:48,320
okay

00:08:49,040 --> 00:08:57,200
and is there any php guru

00:08:53,200 --> 00:09:01,200
actually uh it's going to be uh uh

00:08:57,200 --> 00:09:01,200
it's going to be java but java is great

00:09:02,000 --> 00:09:04,959
okay well that was a trick question

00:09:03,360 --> 00:09:05,279
anyway because we're not going to use

00:09:04,959 --> 00:09:09,839
any

00:09:05,279 --> 00:09:09,839
php okay any front-end developers

00:09:11,279 --> 00:09:15,519
okay um yeah front-end you will suffer a

00:09:14,720 --> 00:09:17,519
little bit okay

00:09:15,519 --> 00:09:19,200
so but anyway most importantly and last

00:09:17,519 --> 00:09:20,240
question before we can go more deeper

00:09:19,200 --> 00:09:22,720
into the subject

00:09:20,240 --> 00:09:25,440
who is not a developer here do we have

00:09:22,720 --> 00:09:27,680
no developers here

00:09:25,440 --> 00:09:28,640
okay system well you know those days

00:09:27,680 --> 00:09:32,720
they are

00:09:28,640 --> 00:09:32,720
devops so greg what are you

00:09:34,320 --> 00:09:39,360
test test in an agile world test is

00:09:37,440 --> 00:09:42,480
developer is software engineer

00:09:39,360 --> 00:09:43,600
under project oh my god appear that's

00:09:42,480 --> 00:09:45,519
awful

00:09:43,600 --> 00:09:46,640
data scientist okay db admin tech

00:09:45,519 --> 00:09:52,160
manager okay great

00:09:46,640 --> 00:09:52,160
great great great variety of crowd

00:09:54,160 --> 00:09:58,880
okay okay let's let's let's go to the to

00:09:57,200 --> 00:10:01,360
our to our agenda okay

00:09:58,880 --> 00:10:02,560
so our agenda is as you can see is

00:10:01,360 --> 00:10:05,120
pretty

00:10:02,560 --> 00:10:07,040
big uh we'll first go over what is big

00:10:05,120 --> 00:10:08,800
data what is spark what i can do with

00:10:07,040 --> 00:10:09,600
spark how can i build an application

00:10:08,800 --> 00:10:10,959
with spark

00:10:09,600 --> 00:10:13,519
i'm going to cover a little bit about

00:10:10,959 --> 00:10:15,120
spark 3 with just a recent addition

00:10:13,519 --> 00:10:16,640
uh and then we're going to install a

00:10:15,120 --> 00:10:18,320
bunch of software so that

00:10:16,640 --> 00:10:19,920
that's uh that's the first part that's

00:10:18,320 --> 00:10:23,120
my goal in this uh

00:10:19,920 --> 00:10:23,440
um in the next minutes until we uh we

00:10:23,120 --> 00:10:26,640
hit

00:10:23,440 --> 00:10:29,279
uh uh 3 45

00:10:26,640 --> 00:10:30,480
uh so i have an hour to go through that

00:10:29,279 --> 00:10:32,959
and then we're going to

00:10:30,480 --> 00:10:34,640
go through examples during the break

00:10:32,959 --> 00:10:37,279
between part one part two

00:10:34,640 --> 00:10:38,880
um i will share well the list of

00:10:37,279 --> 00:10:41,440
software you would have to install

00:10:38,880 --> 00:10:43,519
uh if you haven't and you should be

00:10:41,440 --> 00:10:46,640
enough to to do that and then we can

00:10:43,519 --> 00:10:47,680
we can go into part two with that and

00:10:46,640 --> 00:10:49,600
part three

00:10:47,680 --> 00:10:51,120
is going to do a bit of ai okay i think

00:10:49,600 --> 00:10:52,959
that's that's a fun part

00:10:51,120 --> 00:10:54,720
uh but we need a little bit of

00:10:52,959 --> 00:10:57,680
background to go there

00:10:54,720 --> 00:10:57,680
um okay

00:10:58,160 --> 00:11:04,720
uh docker containers no uh i

00:11:01,680 --> 00:11:06,320
you'll see david that that actually uh

00:11:04,720 --> 00:11:08,000
i think that spark is easy enough that

00:11:06,320 --> 00:11:09,600
you don't need a docker container it's

00:11:08,000 --> 00:11:10,880
not like hadoop where

00:11:09,600 --> 00:11:13,279
you would have to have all these

00:11:10,880 --> 00:11:14,880
machines all these virtual machines and

00:11:13,279 --> 00:11:17,120
this

00:11:14,880 --> 00:11:18,800
basically turning your your laptop into

00:11:17,120 --> 00:11:20,640
a cluster of vms

00:11:18,800 --> 00:11:22,320
with with spark you don't have to do

00:11:20,640 --> 00:11:24,000
that so but let's

00:11:22,320 --> 00:11:26,000
let's let's dip into it let's dig into

00:11:24,000 --> 00:11:29,040
it and you'll see why

00:11:26,000 --> 00:11:32,160
so big deal so

00:11:29,040 --> 00:11:33,600
really the thing about big data is uh

00:11:32,160 --> 00:11:35,360
this is a kind of diff just under

00:11:33,600 --> 00:11:38,320
definition you will find it's actually

00:11:35,360 --> 00:11:40,880
three v's or four v's or five v's okay

00:11:38,320 --> 00:11:43,200
uh depending on who yourself who you're

00:11:40,880 --> 00:11:46,640
talking to okay so wikipedia s3

00:11:43,200 --> 00:11:48,880
ibm says five um i'm i'm really

00:11:46,640 --> 00:11:50,560
um you know it's about it's anyway it's

00:11:48,880 --> 00:11:53,120
about volume because it's big

00:11:50,560 --> 00:11:54,720
like big data there's a variety because

00:11:53,120 --> 00:11:55,440
there's different sources different file

00:11:54,720 --> 00:11:58,800
formats

00:11:55,440 --> 00:11:59,680
different um it's it's structured and

00:11:58,800 --> 00:12:02,079
structured

00:11:59,680 --> 00:12:03,040
there's a velocity at the speed at which

00:12:02,079 --> 00:12:04,959
it grows

00:12:03,040 --> 00:12:07,200
there's a variability because it's kind

00:12:04,959 --> 00:12:07,519
of uh you know there's a source it can

00:12:07,200 --> 00:12:10,000
be

00:12:07,519 --> 00:12:11,839
depending on the source acronyms and all

00:12:10,000 --> 00:12:12,240
this variability you can find in the

00:12:11,839 --> 00:12:14,240
data

00:12:12,240 --> 00:12:16,079
itself when you look at the data and

00:12:14,240 --> 00:12:17,600
there's a value as well i think i think

00:12:16,079 --> 00:12:19,839
value is important because

00:12:17,600 --> 00:12:21,279
the thing is you're not doing anything

00:12:19,839 --> 00:12:23,120
in a corporate world without thinking

00:12:21,279 --> 00:12:24,160
about the value you're actually bringing

00:12:23,120 --> 00:12:26,000
from it

00:12:24,160 --> 00:12:28,320
but that's a kind of a you know the

00:12:26,000 --> 00:12:31,040
teacher professor definition

00:12:28,320 --> 00:12:32,399
i like this one much better i think that

00:12:31,040 --> 00:12:34,240
data is constantly big

00:12:32,399 --> 00:12:35,519
when it needs more than one computer to

00:12:34,240 --> 00:12:39,680
be processed

00:12:35,519 --> 00:12:41,440
okay so whatever computer you have

00:12:39,680 --> 00:12:43,680
as long as you need more than one

00:12:41,440 --> 00:12:46,000
computer that's big data

00:12:43,680 --> 00:12:47,120
and it and this definition means that it

00:12:46,000 --> 00:12:49,360
can actually also

00:12:47,120 --> 00:12:51,200
apply to relational data based on a

00:12:49,360 --> 00:12:54,639
cluster right and that's big data

00:12:51,200 --> 00:12:55,600
already but let's see what's what what

00:12:54,639 --> 00:12:58,959
what is spark

00:12:55,600 --> 00:13:01,360
and what spark is a bit different for me

00:12:58,959 --> 00:13:03,200
spark is an analytics operating system

00:13:01,360 --> 00:13:04,000
and i owe this definition to this

00:13:03,200 --> 00:13:06,160
gentleman

00:13:04,000 --> 00:13:07,440
on the left there on your screen uh with

00:13:06,160 --> 00:13:10,720
the dark suit

00:13:07,440 --> 00:13:14,079
rob thomas was the svp uh ibm

00:13:10,720 --> 00:13:17,440
of cloud and ai and rob

00:13:14,079 --> 00:13:20,399
and and also accessory uh the

00:13:17,440 --> 00:13:22,079
guy who wrote the forward of my book but

00:13:20,399 --> 00:13:25,600
rob is defining the

00:13:22,079 --> 00:13:28,000
spark as an operating system and

00:13:25,600 --> 00:13:29,360
that that's something he shared with the

00:13:28,000 --> 00:13:32,000
audience at water watson

00:13:29,360 --> 00:13:33,200
in 2016 and i was already using spark at

00:13:32,000 --> 00:13:36,480
that time but i think

00:13:33,200 --> 00:13:38,000
bro this is this is crazy why why why an

00:13:36,480 --> 00:13:41,120
operating system

00:13:38,000 --> 00:13:44,240
and i had to dig a little bit and so

00:13:41,120 --> 00:13:46,000
and to understand why it would be why

00:13:44,240 --> 00:13:48,560
spark would be an analytics operating

00:13:46,000 --> 00:13:51,199
system so let's look at that

00:13:48,560 --> 00:13:52,079
when you're building applications you

00:13:51,199 --> 00:13:54,320
have

00:13:52,079 --> 00:13:56,079
your hardware you've got your operating

00:13:54,320 --> 00:13:56,959
system and on the top of your operating

00:13:56,079 --> 00:13:59,360
system

00:13:56,959 --> 00:14:00,560
you have uh your application okay

00:13:59,360 --> 00:14:03,600
nothing new

00:14:00,560 --> 00:14:07,199
uh even if you're a sysadmin or

00:14:03,600 --> 00:14:09,600
our dba you know that if

00:14:07,199 --> 00:14:10,639
you work in a distributed environment

00:14:09,600 --> 00:14:12,800
remember

00:14:10,639 --> 00:14:14,079
big data more than one computer more

00:14:12,800 --> 00:14:16,480
than one computer equal

00:14:14,079 --> 00:14:18,160
distributed so you've got your hardware

00:14:16,480 --> 00:14:18,800
layer then you've got your operating

00:14:18,160 --> 00:14:20,560
system

00:14:18,800 --> 00:14:22,800
and on top of that you've got your

00:14:20,560 --> 00:14:25,199
application but

00:14:22,800 --> 00:14:26,399
to do that you will have to add a

00:14:25,199 --> 00:14:29,120
distribution layer

00:14:26,399 --> 00:14:30,320
an analytics layer in your application

00:14:29,120 --> 00:14:32,639
which as a result

00:14:30,320 --> 00:14:34,959
will make your application super fat

00:14:32,639 --> 00:14:36,959
okay by adding libraries and

00:14:34,959 --> 00:14:39,279
and things like oh i need to understand

00:14:36,959 --> 00:14:39,680
when my my host is down and things like

00:14:39,279 --> 00:14:41,680
that

00:14:39,680 --> 00:14:43,680
that's impossible we are application

00:14:41,680 --> 00:14:46,959
developers we are not or

00:14:43,680 --> 00:14:50,079
or architects we are not we are not

00:14:46,959 --> 00:14:53,279
uh uh we don't want to

00:14:50,079 --> 00:14:53,600
to to to to write another tcp ip layer

00:14:53,279 --> 00:14:56,399
right

00:14:53,600 --> 00:14:57,279
oh it's almost at this level so let's

00:14:56,399 --> 00:15:00,000
look at this thing

00:14:57,279 --> 00:15:01,279
you've got your outerwear operating

00:15:00,000 --> 00:15:03,279
system layer

00:15:01,279 --> 00:15:04,880
and then you can add a distributed and

00:15:03,279 --> 00:15:07,120
analytics

00:15:04,880 --> 00:15:09,040
layer on top of your hardware so that

00:15:07,120 --> 00:15:09,600
basically you build your application and

00:15:09,040 --> 00:15:12,959
it stays

00:15:09,600 --> 00:15:17,279
thin on top of these layers and

00:15:12,959 --> 00:15:18,880
this here is apaches part

00:15:17,279 --> 00:15:20,399
and it's an also an operating system

00:15:18,880 --> 00:15:22,079
because you can use many different

00:15:20,399 --> 00:15:25,040
languages to do it

00:15:22,079 --> 00:15:27,120
you can ask scala you can use scan as i

00:15:25,040 --> 00:15:30,240
asked before you can use python

00:15:27,120 --> 00:15:31,519
you can use r or you can use java and i

00:15:30,240 --> 00:15:32,240
must admit that the most popular

00:15:31,519 --> 00:15:35,519
language for

00:15:32,240 --> 00:15:37,839
apache spark are definitely going are

00:15:35,519 --> 00:15:39,920
going to be java and python

00:15:37,839 --> 00:15:41,279
r is a bit on the way out and and scala

00:15:39,920 --> 00:15:43,759
is very technical

00:15:41,279 --> 00:15:44,720
so just let's look at a little bit of of

00:15:43,759 --> 00:15:48,480
of uh

00:15:44,720 --> 00:15:50,480
of what we can do with with spark

00:15:48,480 --> 00:15:52,160
my first project was unfortunately not

00:15:50,480 --> 00:15:55,199
not accessible anymore

00:15:52,160 --> 00:15:55,600
was called nc eatery and you could have

00:15:55,199 --> 00:15:58,079
some

00:15:55,600 --> 00:15:59,600
uh restaurant analytics on on north

00:15:58,079 --> 00:16:02,720
carolina restaurants

00:15:59,600 --> 00:16:03,279
and i was actually analyzing quite a bit

00:16:02,720 --> 00:16:06,160
of data

00:16:03,279 --> 00:16:07,680
as you can see uh 10 to the power of 21

00:16:06,160 --> 00:16:09,759
data points analyzed

00:16:07,680 --> 00:16:12,160
it was it was pretty it was pretty

00:16:09,759 --> 00:16:13,199
pretty intense now lumira is a customer

00:16:12,160 --> 00:16:15,920
of mine

00:16:13,199 --> 00:16:16,639
i worked a few years before i joined iap

00:16:15,920 --> 00:16:18,560
um

00:16:16,639 --> 00:16:20,240
we did we did for general compute and

00:16:18,560 --> 00:16:21,680
distributed data data transfer and

00:16:20,240 --> 00:16:24,240
pipeline

00:16:21,680 --> 00:16:24,720
cern is well you probably heard of the

00:16:24,240 --> 00:16:27,519
cern

00:16:24,720 --> 00:16:28,320
or at least if you're using if you've

00:16:27,519 --> 00:16:31,199
watched

00:16:28,320 --> 00:16:32,000
as a big bang theory anytime you have

00:16:31,199 --> 00:16:35,360
heard of the

00:16:32,000 --> 00:16:36,079
large hadron collider and they're not

00:16:35,360 --> 00:16:39,440
using it

00:16:36,079 --> 00:16:42,800
for directly the analysis of the lhc

00:16:39,440 --> 00:16:46,160
but basically all the equipment that is

00:16:42,800 --> 00:16:49,279
um all the equipment

00:16:46,160 --> 00:16:51,759
that is uh around

00:16:49,279 --> 00:16:53,839
the lhcs they collect data from it and

00:16:51,759 --> 00:16:56,720
they analyze the maintenance data

00:16:53,839 --> 00:16:58,800
with with that and this is a really

00:16:56,720 --> 00:17:02,639
really interesting top topic

00:16:58,800 --> 00:17:04,799
ibm has a tool called watson data studio

00:17:02,639 --> 00:17:05,839
and other tools like even stores and and

00:17:04,799 --> 00:17:09,360
much more

00:17:05,839 --> 00:17:12,400
i and and

00:17:09,360 --> 00:17:15,520
so you see the various things you can do

00:17:12,400 --> 00:17:16,959
you can do and that's why it's also it

00:17:15,520 --> 00:17:20,240
applies to

00:17:16,959 --> 00:17:23,199
um to to be an operating system

00:17:20,240 --> 00:17:23,679
it's really about understanding the

00:17:23,199 --> 00:17:26,400
value

00:17:23,679 --> 00:17:28,480
the various possibilities you have as

00:17:26,400 --> 00:17:32,160
you know doing general compute

00:17:28,480 --> 00:17:35,039
etl kind of work analytics all that

00:17:32,160 --> 00:17:36,880
with one framework and uh one

00:17:35,039 --> 00:17:41,520
environment

00:17:36,880 --> 00:17:41,520
so typically

00:17:44,559 --> 00:17:50,640
uh and and uh typically

00:17:48,480 --> 00:17:52,559
that's that's how it works okay so you

00:17:50,640 --> 00:17:53,840
connect to a cluster

00:17:52,559 --> 00:17:56,640
and the cluster can be your single

00:17:53,840 --> 00:17:58,320
machine uh and some of the demos i'm

00:17:56,640 --> 00:18:01,120
going to do with you guys

00:17:58,320 --> 00:18:01,760
uh are you just using my my my laptop

00:18:01,120 --> 00:18:04,559
here

00:18:01,760 --> 00:18:05,760
and then i'm going to do um to load the

00:18:04,559 --> 00:18:07,520
data

00:18:05,760 --> 00:18:09,120
do something with the data and share the

00:18:07,520 --> 00:18:10,559
result that's that's typically what an

00:18:09,120 --> 00:18:13,600
application looks like right

00:18:10,559 --> 00:18:16,320
and and this is this is this process

00:18:13,600 --> 00:18:17,039
that we're going to study and believe it

00:18:16,320 --> 00:18:20,720
or not

00:18:17,039 --> 00:18:23,039
spark as of june is 10 years old

00:18:20,720 --> 00:18:25,280
and what what happened in in june is

00:18:23,039 --> 00:18:28,880
also the release of

00:18:25,280 --> 00:18:29,679
apache spark version and it's a major

00:18:28,880 --> 00:18:32,960
evolution

00:18:29,679 --> 00:18:36,880
of of spark the community

00:18:32,960 --> 00:18:39,840
has worked on something like 3 400 new

00:18:36,880 --> 00:18:41,679
jira tickets and you can see here the

00:18:39,840 --> 00:18:45,280
very interesting part is

00:18:41,679 --> 00:18:48,640
spark sql spark core uh

00:18:45,280 --> 00:18:51,120
where really where um there was a lot of

00:18:48,640 --> 00:18:53,679
there was a lot of um

00:18:51,120 --> 00:18:55,280
there was a lot of work being done so

00:18:53,679 --> 00:18:58,000
that sequel is

00:18:55,280 --> 00:18:59,760
you can use more and more sql and you

00:18:58,000 --> 00:19:01,280
can inspire core is mainly about

00:18:59,760 --> 00:19:03,679
optimizing and that's where a lot of

00:19:01,280 --> 00:19:07,039
work has been has been going there

00:19:03,679 --> 00:19:09,120
um the

00:19:07,039 --> 00:19:10,880
there's also added a lot of static

00:19:09,120 --> 00:19:13,200
functions so i i know that

00:19:10,880 --> 00:19:14,559
don't you guys don't seem to have a lot

00:19:13,200 --> 00:19:16,880
of experience with spark

00:19:14,559 --> 00:19:18,000
but a lot of the work that is being done

00:19:16,880 --> 00:19:20,799
with spark is

00:19:18,000 --> 00:19:21,360
is done through static function and uh

00:19:20,799 --> 00:19:24,559
they've

00:19:21,360 --> 00:19:26,960
added quite a few uh quite a few

00:19:24,559 --> 00:19:27,840
uh static function and they're all

00:19:26,960 --> 00:19:30,640
listed there

00:19:27,840 --> 00:19:32,160
in this link i'm sharing where you can

00:19:30,640 --> 00:19:35,600
you can just

00:19:32,160 --> 00:19:37,280
look at look at the at the

00:19:35,600 --> 00:19:39,039
manning companion book which is

00:19:37,280 --> 00:19:40,320
available for free with all the

00:19:39,039 --> 00:19:41,280
functions with a description of the

00:19:40,320 --> 00:19:44,480
functions

00:19:41,280 --> 00:19:48,320
so let's do it um

00:19:44,480 --> 00:19:52,000
we can we can we can we can start

00:19:48,320 --> 00:19:54,160
and to do that uh we will

00:19:52,000 --> 00:19:56,000
uh we will add special hardware as i

00:19:54,160 --> 00:19:56,960
said okay so something really really

00:19:56,000 --> 00:19:58,720
complex

00:19:56,960 --> 00:20:00,080
because otherwise it's not possible to

00:19:58,720 --> 00:20:03,520
process that much data

00:20:00,080 --> 00:20:06,960
so to do that you will have to use clego

00:20:03,520 --> 00:20:10,559
my lego cluster so i built this

00:20:06,960 --> 00:20:13,600
uh well three four years ago now

00:20:10,559 --> 00:20:17,120
uh and you see uh

00:20:13,600 --> 00:20:20,720
all four nodes uh with this

00:20:17,120 --> 00:20:22,320
uh completely crazy architecture

00:20:20,720 --> 00:20:24,240
and if you look at the camera i can

00:20:22,320 --> 00:20:25,440
actually this is not this was not

00:20:24,240 --> 00:20:28,080
planned but here is

00:20:25,440 --> 00:20:29,200
lego uh so you have it you have it you

00:20:28,080 --> 00:20:31,760
have it live okay

00:20:29,200 --> 00:20:33,600
so now i need to put the camera back

00:20:31,760 --> 00:20:36,640
about correctly

00:20:33,600 --> 00:20:39,919
and it's it's a cluster four nodes

00:20:36,640 --> 00:20:42,240
and to process data okay

00:20:39,919 --> 00:20:42,960
but that's not true you don't need such

00:20:42,240 --> 00:20:44,960
a computer

00:20:42,960 --> 00:20:48,960
i told you your laptop will be enough

00:20:44,960 --> 00:20:51,919
okay so um

00:20:48,960 --> 00:20:54,320
you will you will need uh go to jgp.net

00:20:51,919 --> 00:20:57,360
or jdp dot ai slash ato

00:20:54,320 --> 00:20:58,880
and you will see the list of software

00:20:57,360 --> 00:21:02,080
you will need okay

00:20:58,880 --> 00:21:06,159
um so go there get get

00:21:02,080 --> 00:21:08,540
get started on the download uh basically

00:21:06,159 --> 00:21:09,840
what you will need is um

00:21:08,540 --> 00:21:14,960
[Music]

00:21:09,840 --> 00:21:19,520
jdk 1.8 or 11

00:21:14,960 --> 00:21:21,679
and you will need um

00:21:19,520 --> 00:21:23,360
you will need eclipse now i'm going to

00:21:21,679 --> 00:21:24,400
use eclipse if you've got intellij or

00:21:23,360 --> 00:21:27,679
anything else

00:21:24,400 --> 00:21:30,880
uh feel free to use it if you want

00:21:27,679 --> 00:21:33,039
you can use maven uh most of uh well

00:21:30,880 --> 00:21:35,039
also all the examples are

00:21:33,039 --> 00:21:36,400
are palm but they might not be you might

00:21:35,039 --> 00:21:38,480
not be able to run them

00:21:36,400 --> 00:21:40,799
through sherman even depending on which

00:21:38,480 --> 00:21:43,280
labs we we want to execute

00:21:40,799 --> 00:21:44,400
uh but that's that's basically it okay

00:21:43,280 --> 00:21:47,360
so

00:21:44,400 --> 00:21:48,960
um if if you look at the page what is

00:21:47,360 --> 00:21:52,480
also interesting there is

00:21:48,960 --> 00:21:56,080
if when you go to jdp.net ato

00:21:52,480 --> 00:21:58,880
you can install the software you can

00:21:56,080 --> 00:22:00,000
access the source code and you can run

00:21:58,880 --> 00:22:02,400
the first ones if

00:22:00,000 --> 00:22:03,280
if you run the first one it will

00:22:02,400 --> 00:22:06,400
download

00:22:03,280 --> 00:22:09,919
all the all the information all the

00:22:06,400 --> 00:22:12,360
all the content for the

00:22:09,919 --> 00:22:14,480
for the first uh for the first

00:22:12,360 --> 00:22:18,000
[Music]

00:22:14,480 --> 00:22:21,280
uh for the first uh example which

00:22:18,000 --> 00:22:23,440
uh is a lot as you can imagine java

00:22:21,280 --> 00:22:24,960
uh and well whether java or not but it's

00:22:23,440 --> 00:22:27,039
a rather complex system but that's the

00:22:24,960 --> 00:22:28,960
only thing you've got to do to run

00:22:27,039 --> 00:22:30,960
and it will take a little bit of time to

00:22:28,960 --> 00:22:34,240
to download everything

00:22:30,960 --> 00:22:34,240
so um

00:22:35,039 --> 00:22:40,480
so that's that's really my the end of my

00:22:38,159 --> 00:22:41,840
first session

00:22:40,480 --> 00:22:44,559
i wanted to make sure that you have

00:22:41,840 --> 00:22:47,360
enough time to download everything so

00:22:44,559 --> 00:22:49,760
when we go to the second session you are

00:22:47,360 --> 00:22:53,280
you're ready to go

00:22:49,760 --> 00:22:54,960
and so in the meantime i'm going to stay

00:22:53,280 --> 00:22:57,280
here and

00:22:54,960 --> 00:22:58,559
i think the next session is schedule in

00:22:57,280 --> 00:23:01,679
half an hour

00:22:58,559 --> 00:23:02,640
um so if you've got any problem

00:23:01,679 --> 00:23:05,919
downloading just

00:23:02,640 --> 00:23:09,600
don't yeah vs code you can use vs code

00:23:05,919 --> 00:23:13,520
uh to to to to look to look at the code

00:23:09,600 --> 00:23:17,280
uh if you if you if you've if you

00:23:13,520 --> 00:23:20,080
well actually um

00:23:17,280 --> 00:23:21,200
i'm pretty sure vs code would work but i

00:23:20,080 --> 00:23:23,120
have not tried it

00:23:21,200 --> 00:23:24,880
and i don't know how it works with java

00:23:23,120 --> 00:23:27,600
sorry uh

00:23:24,880 --> 00:23:28,720
yeah i'm i'm an eclipse guy old school a

00:23:27,600 --> 00:23:31,120
little bit

00:23:28,720 --> 00:23:32,240
uh yeah that's probably an extension for

00:23:31,120 --> 00:23:34,320
java for sure

00:23:32,240 --> 00:23:36,720
or at least you know maven is so

00:23:34,320 --> 00:23:38,400
standard intellij works because intellij

00:23:36,720 --> 00:23:41,279
will will read

00:23:38,400 --> 00:23:44,000
the palm.xml so you you can definitely

00:23:41,279 --> 00:23:44,000
use intellij

00:23:46,640 --> 00:23:50,159
oh that's funny yeah oxygen or later but

00:23:49,120 --> 00:23:53,360
but oxygen is

00:23:50,159 --> 00:23:55,440
is is rather old now you can

00:23:53,360 --> 00:23:57,760
you can you can you can use another one

00:23:55,440 --> 00:23:57,760
as well

00:23:58,240 --> 00:24:03,120
spring tool suite i don't know spring

00:24:02,159 --> 00:24:06,159
tool suite

00:24:03,120 --> 00:24:07,279
uh knowing springs they probably work a

00:24:06,159 --> 00:24:11,200
lot with eclipse

00:24:07,279 --> 00:24:14,000
so basically any tools that

00:24:11,200 --> 00:24:15,600
will be able to to open and read the

00:24:14,000 --> 00:24:18,159
palm.xml

00:24:15,600 --> 00:24:18,880
will work and that's that's how you do

00:24:18,159 --> 00:24:23,600
it with

00:24:18,880 --> 00:24:23,600
with with eclipse anyway

00:24:26,159 --> 00:24:33,279
okay guys you're good to go more

00:24:28,400 --> 00:24:35,520
questions i'm staying here anyway

00:24:33,279 --> 00:24:36,559
and at 45 i'll just take a little break

00:24:35,520 --> 00:24:47,840
to get some water

00:24:36,559 --> 00:24:47,840
and in there so

00:24:56,159 --> 00:25:00,799
so sun cap yeah do you have any

00:24:58,559 --> 00:25:02,799
suggestion and resources to learn about

00:25:00,799 --> 00:25:05,360
spark

00:25:02,799 --> 00:25:06,159
uh you you can have yeah you you can

00:25:05,360 --> 00:25:09,120
create a new

00:25:06,159 --> 00:25:09,600
workspace or or or use the workspace you

00:25:09,120 --> 00:25:12,640
have

00:25:09,600 --> 00:25:16,240
well so resource i would recommend for

00:25:12,640 --> 00:25:19,279
uh for learning spark is definitely

00:25:16,240 --> 00:25:23,200
this okay totally totally

00:25:19,279 --> 00:25:27,279
uh um totally okay

00:25:23,200 --> 00:25:28,400
yeah um uh john gennaron it's a 2018

00:25:27,279 --> 00:25:30,720
link uh

00:25:28,400 --> 00:25:32,159
i must admit that uh i've been a bit

00:25:30,720 --> 00:25:35,200
lazy in updating the page

00:25:32,159 --> 00:25:37,039
but it's uh uh it i've updated

00:25:35,200 --> 00:25:38,799
regularly the content of the page so you

00:25:37,039 --> 00:25:40,640
should be you should be good to go

00:25:38,799 --> 00:25:42,559
uh and we're going to cover that's

00:25:40,640 --> 00:25:46,159
really about the installation

00:25:42,559 --> 00:25:48,000
so uh yeah

00:25:46,159 --> 00:25:49,279
vs code maven i've got to try this one

00:25:48,000 --> 00:25:52,480
thank you david

00:25:49,279 --> 00:25:54,720
uh and so yeah so

00:25:52,480 --> 00:25:55,760
yeah this is really this is really

00:25:54,720 --> 00:25:59,360
shameful

00:25:55,760 --> 00:26:03,760
advertisement for my book but

00:25:59,360 --> 00:26:03,760
uh san carlo class so

00:26:04,559 --> 00:26:08,400
is that available online as a free pdf

00:26:06,720 --> 00:26:10,159
come on man you know how much time i

00:26:08,400 --> 00:26:12,960
spend on that thing

00:26:10,159 --> 00:26:15,120
uh yeah that's a discount but uh there's

00:26:12,960 --> 00:26:19,360
a discount there's a nice discount for

00:26:15,120 --> 00:26:22,320
for uh for for people all that want to

00:26:19,360 --> 00:26:23,200
to i actually put it on the last slide

00:26:22,320 --> 00:26:24,799
but because you're

00:26:23,200 --> 00:26:25,840
asking and because you're nice guys i'm

00:26:24,799 --> 00:26:28,640
going to i'm going to give you the

00:26:25,840 --> 00:26:28,640
discount right now

00:26:31,840 --> 00:26:35,200
where is the discount

00:26:37,360 --> 00:26:43,279
there is 35 35 discount on anything

00:26:40,799 --> 00:26:44,960
manning okay so that's how generous

00:26:43,279 --> 00:26:47,279
mining is

00:26:44,960 --> 00:26:47,279
um

00:26:48,320 --> 00:26:56,159
here thanks kira

00:26:52,320 --> 00:26:58,240
yeah yeah yeah

00:26:56,159 --> 00:26:59,919
david yeah you love the background what

00:26:58,240 --> 00:27:01,760
i'm doing is

00:26:59,919 --> 00:27:03,039
when i'm in between meetings sometimes

00:27:01,760 --> 00:27:07,120
between you know like

00:27:03,039 --> 00:27:08,320
you know you when you're when you're um

00:27:07,120 --> 00:27:09,840
when you're a little bit bored between

00:27:08,320 --> 00:27:11,360
two minutes two meetings and you don't

00:27:09,840 --> 00:27:13,679
have anything to do between two minutes

00:27:11,360 --> 00:27:15,120
two meetings i just go to the nasa

00:27:13,679 --> 00:27:18,000
website and i download pictures and they

00:27:15,120 --> 00:27:18,000
use them as background

00:27:18,840 --> 00:27:21,840
um

00:27:23,840 --> 00:27:27,440
yeah i know we three we don't we don't

00:27:26,000 --> 00:27:29,919
need cc plus plus it's just

00:27:27,440 --> 00:27:34,559
it's just uh it's just java plain java

00:27:29,919 --> 00:27:37,360
uh we're going to use

00:27:34,559 --> 00:27:40,399
just plain java let me go back to and

00:27:37,360 --> 00:27:40,399
get this stuff slide

00:27:42,240 --> 00:27:47,039
yeah i can uh yeah you can you can yeah

00:27:45,279 --> 00:27:48,320
you can install in a virtual box if you

00:27:47,039 --> 00:27:49,679
want you can

00:27:48,320 --> 00:27:51,679
it works on windows it's a little bit

00:27:49,679 --> 00:27:52,880
more tricky in windows sometimes but not

00:27:51,679 --> 00:27:58,480
not that much

00:27:52,880 --> 00:27:58,480
so nothing nothing violent here

00:28:00,840 --> 00:28:06,080
so

00:28:02,480 --> 00:28:09,279
if if if i go uh to eclipse

00:28:06,080 --> 00:28:13,919
if i go to download uh

00:28:09,279 --> 00:28:18,240
you can you can get uh eclipse 2020-09

00:28:13,919 --> 00:28:18,240
uh i'm on a mac here but uh

00:28:20,480 --> 00:28:25,840
ah david you're already in big sur i i'm

00:28:23,840 --> 00:28:27,600
i need to get work done so i don't trust

00:28:25,840 --> 00:28:29,600
new betas

00:28:27,600 --> 00:28:31,520
ah no it's seriously i'm still on

00:28:29,600 --> 00:28:32,240
catalina i don't i don't need for it i'm

00:28:31,520 --> 00:28:36,559
just waiting for

00:28:32,240 --> 00:28:36,559
you for people to say it's okay

00:28:36,650 --> 00:28:39,849
[Music]

00:28:42,840 --> 00:28:46,799
okay

00:28:44,559 --> 00:28:46,799
so

00:28:49,200 --> 00:28:52,799
yeah so you can you can get that i love

00:28:51,919 --> 00:28:55,919
the cookies

00:28:52,799 --> 00:28:58,799
okay so if you go there uh

00:28:55,919 --> 00:29:00,000
this one this one is this one is uh is

00:28:58,799 --> 00:29:02,320
perfectly

00:29:00,000 --> 00:29:04,399
uh usable and then yeah and then when

00:29:02,320 --> 00:29:07,279
you run that it will ask you

00:29:04,399 --> 00:29:08,080
um it will ask you what uh where where

00:29:07,279 --> 00:29:10,640
you want to

00:29:08,080 --> 00:29:11,840
uh when you runs around the installer it

00:29:10,640 --> 00:29:13,760
asks you what you want but

00:29:11,840 --> 00:29:16,159
you can just a basic java when it's

00:29:13,760 --> 00:29:16,159
working

00:29:25,360 --> 00:29:28,880
i yeah of course i use a resource and

00:29:27,600 --> 00:29:32,960
actually you know

00:29:28,880 --> 00:29:35,919
so why why are we there uh this morning

00:29:32,960 --> 00:29:36,480
we did a kind of a a fun session around

00:29:35,919 --> 00:29:38,960
the book

00:29:36,480 --> 00:29:40,480
in why i wrote a book and things like

00:29:38,960 --> 00:29:43,679
that and

00:29:40,480 --> 00:29:45,360
i'm a java guy as i said and uh and i

00:29:43,679 --> 00:29:48,960
think a lot of people are java guys

00:29:45,360 --> 00:29:52,880
and and i'm also

00:29:48,960 --> 00:29:56,559
a bit of a data engineer so so

00:29:52,880 --> 00:29:56,559
i know sql i know java

00:29:56,799 --> 00:30:00,080
and it was very difficult to actually

00:29:59,039 --> 00:30:02,080
find resources

00:30:00,080 --> 00:30:03,520
out there when i started learning about

00:30:02,080 --> 00:30:07,440
spark of course things are

00:30:03,520 --> 00:30:09,600
things are now completely different um

00:30:07,440 --> 00:30:11,440
in uh in the world that was that was

00:30:09,600 --> 00:30:15,120
that was a few years ago

00:30:11,440 --> 00:30:18,080
uh so you fi you find stuff but

00:30:15,120 --> 00:30:18,880
i still haven't found really good

00:30:18,080 --> 00:30:21,919
resources

00:30:18,880 --> 00:30:23,600
for java developers um they're still

00:30:21,919 --> 00:30:37,840
pretty rare

00:30:23,600 --> 00:30:37,840
and that's unfortunately a bit annoying

00:30:41,679 --> 00:30:48,960
so any question everything is going okay

00:30:45,440 --> 00:30:51,840
so when when you're when you're done

00:30:48,960 --> 00:30:51,840
um

00:30:52,559 --> 00:30:57,600
when you're done you can go to github

00:30:54,799 --> 00:31:01,279
that's where you're actually going to

00:30:57,600 --> 00:31:05,360
to to look for stuff and you can go to

00:31:01,279 --> 00:31:08,960
chapter one

00:31:05,360 --> 00:31:11,440
for the book so it's uh um

00:31:08,960 --> 00:31:12,640
i can actually actually i can share the

00:31:11,440 --> 00:31:18,000
url and zoom

00:31:12,640 --> 00:31:21,760
in the chat

00:31:18,000 --> 00:31:24,240
here hey kira good luck

00:31:21,760 --> 00:31:25,679
uh it's a passionate field so i i hope

00:31:24,240 --> 00:31:33,840
you will have a you have a lot of fun

00:31:25,679 --> 00:31:33,840
with that

00:31:35,440 --> 00:31:39,279
um so advanced auto parts is used to be

00:31:38,399 --> 00:31:43,519
in roanoke

00:31:39,279 --> 00:31:44,720
and we are moving in uh in raleigh um

00:31:43,519 --> 00:31:47,760
and the headquarters is officially in

00:31:44,720 --> 00:31:50,399
raleigh i'm based in chapelle

00:31:47,760 --> 00:31:50,399
and we

00:31:51,360 --> 00:31:58,559
we we may or may not use elasticsearch

00:31:56,240 --> 00:32:00,320
i can't tell you but we still have a lot

00:31:58,559 --> 00:32:02,890
of our

00:32:00,320 --> 00:32:06,279
colleagues in

00:32:02,890 --> 00:32:06,279
[Music]

00:32:07,600 --> 00:32:12,559
we still have a lot of colleagues in in

00:32:10,320 --> 00:32:14,480
roanoke and we still have a

00:32:12,559 --> 00:32:16,080
very important staff over there we don't

00:32:14,480 --> 00:32:17,039
we're not getting rid of the people

00:32:16,080 --> 00:32:20,320
there by each

00:32:17,039 --> 00:32:23,600
by any mean so um i've got

00:32:20,320 --> 00:32:27,760
great colleagues over there i

00:32:23,600 --> 00:32:30,720
even got to go there before when uh

00:32:27,760 --> 00:32:32,960
when when traveling was was not a

00:32:30,720 --> 00:32:36,159
question of survival

00:32:32,960 --> 00:32:38,640
um okay and uh

00:32:36,159 --> 00:32:39,440
as while we were talking about that i

00:32:38,640 --> 00:32:42,480
can also go

00:32:39,440 --> 00:32:46,000
for the show you the announcement we

00:32:42,480 --> 00:32:48,320
made with uh advanced and

00:32:46,000 --> 00:32:48,320
um

00:32:51,039 --> 00:32:54,159
and i'm monitoring so if you've got any

00:32:52,880 --> 00:32:55,679
questions

00:32:54,159 --> 00:32:57,260
while you download while you install the

00:32:55,679 --> 00:32:59,919
software um

00:32:57,260 --> 00:33:00,890
[Music]

00:32:59,919 --> 00:33:03,999
okay uh

00:33:00,890 --> 00:33:03,999
[Music]

00:33:04,000 --> 00:33:11,360
yeah so the newest news track

00:33:07,600 --> 00:33:13,600
uh so we did

00:33:11,360 --> 00:33:13,600
uh

00:33:15,440 --> 00:33:18,960
of course when you're looking for

00:33:16,480 --> 00:33:25,840
something you're not finding it right uh

00:33:18,960 --> 00:33:25,840
it's part of murphy's low i guess

00:33:27,200 --> 00:33:32,240
so here is our announcement which you

00:33:29,440 --> 00:33:32,240
can read so

00:33:33,279 --> 00:33:39,840
um advanced auto parts is um

00:33:40,320 --> 00:33:43,919
uh yes on camp yeah you can find me on

00:33:43,200 --> 00:33:47,200
uh

00:33:43,919 --> 00:33:47,760
on linkedin uh i i don't easily link on

00:33:47,200 --> 00:33:50,240
linkedin

00:33:47,760 --> 00:33:51,679
i i only ask people who you know like

00:33:50,240 --> 00:33:55,360
you that went to a conference

00:33:51,679 --> 00:33:58,640
or uh are asked nicely

00:33:55,360 --> 00:34:00,320
uh no but but yeah please i'm i'm

00:33:58,640 --> 00:34:03,120
available on linkedin as well

00:34:00,320 --> 00:34:04,240
so basically advanced auto parts uh is

00:34:03,120 --> 00:34:07,120
in the middle of this

00:34:04,240 --> 00:34:08,079
digital transformation so we use uh

00:34:07,120 --> 00:34:10,399
sometimes they use

00:34:08,079 --> 00:34:12,399
the terms that we are an old lady but

00:34:10,399 --> 00:34:15,040
this old lady is getting really a kick

00:34:12,399 --> 00:34:16,079
and we decided to have an open source

00:34:15,040 --> 00:34:19,119
initiative

00:34:16,079 --> 00:34:21,200
um and we announced our first

00:34:19,119 --> 00:34:23,599
tool today which is called data in the

00:34:21,200 --> 00:34:25,679
fast lane and data in the fast lane is a

00:34:23,599 --> 00:34:27,839
spark based etl

00:34:25,679 --> 00:34:30,079
which we which we open source for the

00:34:27,839 --> 00:34:34,800
pleasure of all so

00:34:30,079 --> 00:34:38,000
um so hopefully uh hopefully we'll uh

00:34:34,800 --> 00:34:39,359
um we'll uh we will find uh we will find

00:34:38,000 --> 00:34:42,560
a lot of uh

00:34:39,359 --> 00:34:45,679
uh happy users of of that

00:34:42,560 --> 00:34:47,359
of that tool um we i will not speak

00:34:45,679 --> 00:34:50,560
about the tool today

00:34:47,359 --> 00:34:50,560
in this this deck

00:34:50,800 --> 00:34:53,200
i

00:34:54,159 --> 00:34:57,839
i honestly did not have the time to to

00:34:57,119 --> 00:35:00,960
integrate it

00:34:57,839 --> 00:35:04,320
into the deck because

00:35:00,960 --> 00:35:07,040
it's it's a really new tool

00:35:04,320 --> 00:35:07,520
for us to allow and to get to get out

00:35:07,040 --> 00:35:09,119
and

00:35:07,520 --> 00:35:10,560
i didn't want to interfere with the

00:35:09,119 --> 00:35:13,520
release of the tool

00:35:10,560 --> 00:35:14,000
so it's a bit of a it's a bit of a more

00:35:13,520 --> 00:35:18,240
more

00:35:14,000 --> 00:35:18,240
you know more logistical issue

00:35:23,440 --> 00:35:27,200
yeah so yeah data engineering is a cool

00:35:26,320 --> 00:35:30,160
way i think

00:35:27,200 --> 00:35:30,800
i think i think i was born a software

00:35:30,160 --> 00:35:34,240
engineer

00:35:30,800 --> 00:35:35,680
and then i became a data engineer and

00:35:34,240 --> 00:35:39,119
then now i'm

00:35:35,680 --> 00:35:39,839
i'm part of the of the evil side of

00:35:39,119 --> 00:35:44,160
things

00:35:39,839 --> 00:35:47,440
where um we've um

00:35:44,160 --> 00:35:48,400
enterprise architects but i'm working on

00:35:47,440 --> 00:35:59,839
it

00:35:48,400 --> 00:35:59,839
okay i'm really working on it so years

00:36:02,640 --> 00:36:05,520
okay so

00:36:06,880 --> 00:36:13,839
no one is having issues

00:36:17,200 --> 00:36:22,880
it should be pretty straightforward

00:36:20,320 --> 00:36:24,320
and then when you're when you're started

00:36:22,880 --> 00:36:25,990
in

00:36:24,320 --> 00:36:29,100
an eclipse

00:36:25,990 --> 00:36:29,100
[Music]

00:36:30,000 --> 00:36:34,240
i can i can show you what my eclipse

00:36:31,680 --> 00:36:34,240
looks like

00:36:38,839 --> 00:36:43,119
so oops

00:36:44,400 --> 00:36:50,240
okay so that's my eclipse um

00:36:47,839 --> 00:36:52,240
i'm really sorry about about the the

00:36:50,240 --> 00:36:53,920
left side here i tried to change the

00:36:52,240 --> 00:36:56,400
font and i managed to change the phone

00:36:53,920 --> 00:36:59,280
for some things but not everything

00:36:56,400 --> 00:36:59,920
uh so it's a little bit it's a little

00:36:59,280 --> 00:37:02,320
bit annoying

00:36:59,920 --> 00:37:03,920
i'm better i've got a bigger font for

00:37:02,320 --> 00:37:06,400
for the code when i'm when i'm running

00:37:03,920 --> 00:37:06,400
the code

00:37:06,839 --> 00:37:09,839
um

00:37:10,320 --> 00:37:13,280
okay um

00:37:14,560 --> 00:37:18,480
so you have you have your project there

00:37:18,560 --> 00:37:22,800
uh and that's how it should appear when

00:37:20,560 --> 00:37:25,599
when you're when you're ready

00:37:22,800 --> 00:37:26,720
uh in eclipse if you're if you're not

00:37:25,599 --> 00:37:29,520
familiar with eclipse

00:37:26,720 --> 00:37:30,640
you've got uh you've got a different

00:37:29,520 --> 00:37:33,440
perspective

00:37:30,640 --> 00:37:36,160
uh so you look at the perspective opens

00:37:33,440 --> 00:37:36,160
perspective

00:37:36,480 --> 00:37:43,520
and when you open perspective here

00:37:39,839 --> 00:37:47,200
you go to get okay

00:37:43,520 --> 00:37:51,440
and you can open it and in the git

00:37:47,200 --> 00:37:53,920
here you can a quick trick is

00:37:51,440 --> 00:37:53,920
if you

00:37:54,640 --> 00:38:01,359
if you copy the code here you just copy

00:37:58,880 --> 00:38:01,359
it here

00:38:01,599 --> 00:38:08,800
to copy the link to to clone

00:38:05,040 --> 00:38:11,760
and then here you just paste it

00:38:08,800 --> 00:38:13,520
it comes all pre-filled and you just go

00:38:11,760 --> 00:38:17,119
next next next next and it's

00:38:13,520 --> 00:38:19,839
and it's there so

00:38:17,119 --> 00:38:19,839
okay

00:38:21,520 --> 00:38:24,720
so i don't see any any questions and

00:38:24,079 --> 00:38:28,880
it's

00:38:24,720 --> 00:38:32,079
43 so i will let you

00:38:28,880 --> 00:38:36,800
finish installation and we

00:38:32,079 --> 00:38:36,800
will connect back in

00:38:36,960 --> 00:38:44,000
in roughly 15 minutes

00:38:40,400 --> 00:38:47,119
and i hope you're all going to stay and

00:38:44,000 --> 00:38:49,280
we're going to go with really live uh

00:38:47,119 --> 00:38:50,400
stuff and really some more more

00:38:49,280 --> 00:38:54,240
interesting stuff

00:38:50,400 --> 00:38:57,359
uh uh together

00:38:54,240 --> 00:39:01,839
there and uh so

00:38:57,359 --> 00:39:01,839
in the second part of this talk

00:39:02,400 --> 00:39:09,920
which is really about ingesting data

00:39:05,680 --> 00:39:09,920
and basic analytics

00:39:10,079 --> 00:39:14,160
okay i'm back did you guys have any

00:39:12,839 --> 00:39:17,040
issues

00:39:14,160 --> 00:39:17,040
everything's running

00:39:24,079 --> 00:39:29,839
did you all leave

00:39:30,720 --> 00:39:33,440
thanks charles

00:39:34,560 --> 00:39:37,680
okay great kira

00:39:44,640 --> 00:39:52,320
i'm sorry if i pronounce badly your name

00:39:49,680 --> 00:39:52,800
you know my first name is george nobody

00:39:52,320 --> 00:39:56,000
gets it

00:39:52,800 --> 00:39:57,599
really so not an excuse for breaking

00:39:56,000 --> 00:40:00,240
people's other people's name okay

00:39:57,599 --> 00:40:00,240
so it's for

00:40:05,760 --> 00:40:10,400
we can we can get started to continue on

00:40:08,240 --> 00:40:15,040
this journey okay

00:40:10,400 --> 00:40:17,040
so so first i i needed an explanation to

00:40:15,040 --> 00:40:19,760
you on on why we're using

00:40:17,040 --> 00:40:21,200
uh on why we're using java right i think

00:40:19,760 --> 00:40:22,160
i think it's it's important that you

00:40:21,200 --> 00:40:25,200
know why

00:40:22,160 --> 00:40:26,640
it's because it's much safer especially

00:40:25,200 --> 00:40:29,520
in those times of pandemic

00:40:26,640 --> 00:40:31,920
i think it's much better that we use

00:40:29,520 --> 00:40:34,480
java

00:40:31,920 --> 00:40:36,400
having said that our first lab is going

00:40:34,480 --> 00:40:39,119
to be about ingestion so nothing to do

00:40:36,400 --> 00:40:42,160
with digestion and

00:40:39,119 --> 00:40:44,880
we are going to ingest data

00:40:42,160 --> 00:40:46,240
and that's the first part of uh usually

00:40:44,880 --> 00:40:49,760
of a big data project

00:40:46,240 --> 00:40:50,640
where you ingest data you take the data

00:40:49,760 --> 00:40:54,160
and you put it

00:40:50,640 --> 00:40:57,440
in the process okay in the in in the

00:40:54,160 --> 00:40:59,920
in spark um this is a link which you

00:40:57,440 --> 00:41:04,160
hopefully have downloaded things from

00:40:59,920 --> 00:41:07,839
and so basically you can um

00:41:04,160 --> 00:41:07,839
you can you can go to uh

00:41:08,200 --> 00:41:12,800
net.jgp.books.spark that's

00:41:09,839 --> 00:41:13,200
a chapter one you locate csv.2 data

00:41:12,800 --> 00:41:16,640
frame

00:41:13,200 --> 00:41:20,000
app and uh we you right click

00:41:16,640 --> 00:41:22,400
on the java app and that's for eclipse

00:41:20,000 --> 00:41:23,200
and you go run as and java application

00:41:22,400 --> 00:41:27,359
okay

00:41:23,200 --> 00:41:31,760
and if reference works the way it should

00:41:27,359 --> 00:41:31,760
you see something similar to that

00:41:32,839 --> 00:41:38,480
okay did anyone

00:41:35,119 --> 00:41:40,319
try it did it work i'm going to to try

00:41:38,480 --> 00:41:43,359
it live with you guys

00:41:40,319 --> 00:41:46,240
um so

00:41:43,359 --> 00:41:48,960
see if i'm not getting too old uh for

00:41:46,240 --> 00:41:51,040
that kind of exercise okay my first

00:41:48,960 --> 00:41:52,400
my first and i'm sorry that's really too

00:41:51,040 --> 00:41:56,000
small i know

00:41:52,400 --> 00:42:00,839
if here here here's the code

00:41:56,000 --> 00:42:02,000
and i can actually run it so run as java

00:42:00,839 --> 00:42:05,520
application

00:42:02,000 --> 00:42:09,040
and uh if i up

00:42:05,520 --> 00:42:11,119
my console is is opening is open so yeah

00:42:09,040 --> 00:42:12,560
yeah i've got i'm running java 11 so

00:42:11,119 --> 00:42:13,599
you've got this kind of a little bit of

00:42:12,560 --> 00:42:16,880
a warning here

00:42:13,599 --> 00:42:18,000
and then pom-pom my data okay so i

00:42:16,880 --> 00:42:21,280
didn't lie

00:42:18,000 --> 00:42:23,680
uh yeah yeah samantha you get

00:42:21,280 --> 00:42:24,720
you get the warnings there it's probably

00:42:23,680 --> 00:42:26,319
linked to

00:42:24,720 --> 00:42:28,000
to the security models that change in

00:42:26,319 --> 00:42:30,720
java 11. but uh

00:42:28,000 --> 00:42:32,240
but we're going to live with it okay uh

00:42:30,720 --> 00:42:32,720
for now when i'm doing a shell script

00:42:32,240 --> 00:42:35,520
i'm

00:42:32,720 --> 00:42:36,480
redirecting two to start dev slash no

00:42:35,520 --> 00:42:38,880
yeah

00:42:36,480 --> 00:42:41,280
it could be nicer but that's how i do it

00:42:38,880 --> 00:42:44,480
okay so let's look at the code

00:42:41,280 --> 00:42:48,079
um let's start at the call because

00:42:44,480 --> 00:42:50,079
we are uh looker code lookers okay

00:42:48,079 --> 00:42:51,680
so when i do examples i like to have my

00:42:50,079 --> 00:42:53,359
imports especially in java

00:42:51,680 --> 00:42:54,960
so you know what i'm going to import so

00:42:53,359 --> 00:42:57,599
basically here this

00:42:54,960 --> 00:42:58,000
this is very complex example um i'm

00:42:57,599 --> 00:42:59,839
going to

00:42:58,000 --> 00:43:01,040
import free stuff which is a data set a

00:42:59,839 --> 00:43:04,480
row on a session

00:43:01,040 --> 00:43:07,839
okay it looks like since the invention

00:43:04,480 --> 00:43:09,440
of the session um everybody has a

00:43:07,839 --> 00:43:12,800
session so there's a spark session

00:43:09,440 --> 00:43:15,359
that that works as well um so

00:43:12,800 --> 00:43:15,839
main it starts a creates an instance of

00:43:15,359 --> 00:43:19,440
the

00:43:15,839 --> 00:43:19,440
of of the of the main

00:43:19,520 --> 00:43:24,480
of the uh of the application and

00:43:22,640 --> 00:43:27,040
uh i'm running it through the start

00:43:24,480 --> 00:43:29,920
method and then you can see here

00:43:27,040 --> 00:43:31,920
spark session i'm creating my spark

00:43:29,920 --> 00:43:34,880
session with the border

00:43:31,920 --> 00:43:34,880
and the boulder

00:43:36,319 --> 00:43:41,680
the builder

00:43:40,079 --> 00:43:43,119
going to set a name that's the name

00:43:41,680 --> 00:43:43,760
that's a random name you can you can set

00:43:43,119 --> 00:43:47,040
anything

00:43:43,760 --> 00:43:48,560
the master um because you can you can

00:43:47,040 --> 00:43:50,960
specify a different

00:43:48,560 --> 00:43:55,839
here local it it will assume and it will

00:43:50,960 --> 00:43:55,839
create instantly a cluster on my machine

00:44:07,200 --> 00:44:13,040
but puff it just starts okay and then

00:44:10,640 --> 00:44:15,760
i'm going to get or create a session

00:44:13,040 --> 00:44:19,520
that's that's that's a work there

00:44:15,760 --> 00:44:22,560
um and finally oh well not finally

00:44:19,520 --> 00:44:25,680
but uh then i'm opening my csv file

00:44:22,560 --> 00:44:28,400
and so i can do um

00:44:25,680 --> 00:44:30,000
option specify some options of reading

00:44:28,400 --> 00:44:33,359
my csv file

00:44:30,000 --> 00:44:35,119
which is the header yes my my file as a

00:44:33,359 --> 00:44:37,520
header

00:44:35,119 --> 00:44:39,280
and if you look at the if you look back

00:44:37,520 --> 00:44:41,599
at the code you see the header here we

00:44:39,280 --> 00:44:43,040
see id offer title release date etc

00:44:41,599 --> 00:44:45,920
that's my header

00:44:43,040 --> 00:44:47,280
and my sec and then the second option is

00:44:45,920 --> 00:44:50,400
load and that's

00:44:47,280 --> 00:44:52,800
the path to the to the fire and

00:44:50,400 --> 00:44:54,319
the rest of the thing is it just shows

00:44:52,800 --> 00:44:56,560
that it just shows the data

00:44:54,319 --> 00:44:58,079
so here it's a small file but if it was

00:44:56,560 --> 00:44:59,920
a bazillion

00:44:58,079 --> 00:45:01,200
records or byzantine rows and a

00:44:59,920 --> 00:45:02,880
bazillion columns

00:45:01,200 --> 00:45:05,359
it would just do the same thing at

00:45:02,880 --> 00:45:08,720
roughly the same speed okay so

00:45:05,359 --> 00:45:09,920
um that's that's so now you know how to

00:45:08,720 --> 00:45:12,880
ingest a csv

00:45:09,920 --> 00:45:14,240
file in apache spark so let's look let's

00:45:12,880 --> 00:45:15,920
look a little bit at under the road and

00:45:14,240 --> 00:45:16,560
try to understand what's what what was

00:45:15,920 --> 00:45:20,640
going on

00:45:16,560 --> 00:45:25,200
okay before before we go further so

00:45:20,640 --> 00:45:27,040
we are uh looking at um uh

00:45:25,200 --> 00:45:28,480
at this this is a stack this is a usual

00:45:27,040 --> 00:45:31,599
stack so if you go to

00:45:28,480 --> 00:45:32,000
um spark.apache.org this is a stack you

00:45:31,599 --> 00:45:34,720
will see

00:45:32,000 --> 00:45:36,560
with spark sequel spark streaming mli

00:45:34,720 --> 00:45:39,359
for machine learning and graphics

00:45:36,560 --> 00:45:40,880
i i'm not a great fan of of this uh of

00:45:39,359 --> 00:45:44,160
this stack because i think it

00:45:40,880 --> 00:45:46,160
it misrepresents some of the things so

00:45:44,160 --> 00:45:48,000
i like to turn it to this one where you

00:45:46,160 --> 00:45:50,640
see the nodes the physical nodes

00:45:48,000 --> 00:45:51,200
okay uh at the very bottom and then you

00:45:50,640 --> 00:45:54,160
see my

00:45:51,200 --> 00:45:55,680
operating system nodes um which are of

00:45:54,160 --> 00:45:58,400
course the operating system

00:45:55,680 --> 00:45:58,800
layer sorry and then on top you you have

00:45:58,400 --> 00:46:02,000
you've

00:45:58,800 --> 00:46:05,680
you have spark on its unified api okay

00:46:02,000 --> 00:46:08,319
so we we are storing things

00:46:05,680 --> 00:46:10,880
uh in a container called a data frame

00:46:08,319 --> 00:46:13,119
and this container has a unified api

00:46:10,880 --> 00:46:14,000
which if you learn this api that's the

00:46:13,119 --> 00:46:18,000
only thing you will

00:46:14,000 --> 00:46:21,200
need to learn going further in spark um

00:46:18,000 --> 00:46:23,359
and you can use sql as in spark sql

00:46:21,200 --> 00:46:24,800
you can use streaming um we won't do

00:46:23,359 --> 00:46:26,240
streaming today but it's a really fun

00:46:24,800 --> 00:46:29,440
thing to do actually

00:46:26,240 --> 00:46:32,560
um you've got machine learning on ai

00:46:29,440 --> 00:46:34,800
with spark ml lab and um

00:46:32,560 --> 00:46:36,560
graph database and graph processing with

00:46:34,800 --> 00:46:38,480
with spark graphics

00:46:36,560 --> 00:46:40,000
and then as i said before your

00:46:38,480 --> 00:46:42,240
application is

00:46:40,000 --> 00:46:43,040
lower is leveraging all this all this

00:46:42,240 --> 00:46:46,400
stack

00:46:43,040 --> 00:46:48,720
uh on top of that um which which i like

00:46:46,400 --> 00:46:51,200
also to extend with the data frame

00:46:48,720 --> 00:46:51,920
so the data frame is a very interesting

00:46:51,200 --> 00:46:55,040
concept

00:46:51,920 --> 00:46:57,119
uh if you've done some python

00:46:55,040 --> 00:46:59,280
with pandas uh you're kind of

00:46:57,119 --> 00:47:00,079
familiarized already with what the data

00:46:59,280 --> 00:47:02,400
frame is

00:47:00,079 --> 00:47:04,720
for me the data frame is really this

00:47:02,400 --> 00:47:07,119
boost is data container and api

00:47:04,720 --> 00:47:08,640
and so when you learn the api this

00:47:07,119 --> 00:47:11,520
unified api

00:47:08,640 --> 00:47:14,240
you will learn how to manipulate and and

00:47:11,520 --> 00:47:16,800
use the data frame and that's really

00:47:14,240 --> 00:47:17,440
a very powerful thing you you'll be able

00:47:16,800 --> 00:47:19,680
to

00:47:17,440 --> 00:47:21,520
to to leverage in your in your

00:47:19,680 --> 00:47:23,839
[Music]

00:47:21,520 --> 00:47:24,640
in your application so really as a

00:47:23,839 --> 00:47:27,599
developer

00:47:24,640 --> 00:47:28,720
and to make a developer happy you given

00:47:27,599 --> 00:47:30,319
a data frame

00:47:28,720 --> 00:47:31,920
one thing is good to learn i'm a

00:47:30,319 --> 00:47:34,960
developer or well

00:47:31,920 --> 00:47:36,079
a dart at least uh and i'm a bit lazy so

00:47:34,960 --> 00:47:38,480
if i've got only to

00:47:36,079 --> 00:47:40,960
learn only about one api i'm really

00:47:38,480 --> 00:47:41,520
about it and and the data frame api is

00:47:40,960 --> 00:47:43,200
better

00:47:41,520 --> 00:47:45,359
and then based on that you can do sql

00:47:43,200 --> 00:47:48,880
streaming mlib and graphics okay so

00:47:45,359 --> 00:47:52,400
one thing isn't that neat

00:47:48,880 --> 00:47:54,400
um and so let's let's deeper

00:47:52,400 --> 00:47:57,280
let's go deep a little bit more into a

00:47:54,400 --> 00:48:00,640
more complex example

00:47:57,280 --> 00:48:00,640
so um

00:48:01,359 --> 00:48:07,040
just a bit okay um so let's let's look

00:48:04,240 --> 00:48:10,079
at our example so my goal is to

00:48:07,040 --> 00:48:13,040
i have two data sets and

00:48:10,079 --> 00:48:13,680
so if if you guys are looking at working

00:48:13,040 --> 00:48:16,559
with the

00:48:13,680 --> 00:48:18,240
with the with the with the book with the

00:48:16,559 --> 00:48:19,119
example at the same time which i highly

00:48:18,240 --> 00:48:21,839
recommend

00:48:19,119 --> 00:48:23,760
you can jump to chapter 15 okay this

00:48:21,839 --> 00:48:29,359
chapter 15.

00:48:23,760 --> 00:48:31,760
and um and you can look at lab 920

00:48:29,359 --> 00:48:34,160
and uh and of course you will have to to

00:48:31,760 --> 00:48:35,440
get that from github okay so it's a you

00:48:34,160 --> 00:48:38,480
probably got uh

00:48:35,440 --> 00:48:40,800
you probably got um

00:48:38,480 --> 00:48:42,079
and i'm going to copy that ooh that's

00:48:40,800 --> 00:48:45,440
not what i wanted to do

00:48:42,079 --> 00:48:45,760
sorry um you can you can i'm going to

00:48:45,440 --> 00:48:50,400
cut

00:48:45,760 --> 00:48:50,400
to copy that to you guys in

00:48:50,880 --> 00:48:58,720
in the chat so this is chapter

00:48:55,440 --> 00:49:02,240
15 okay

00:48:58,720 --> 00:49:05,839
so chapter 15 and

00:49:02,240 --> 00:49:08,240
it is in the chat okay

00:49:05,839 --> 00:49:09,119
um and you will you will get this

00:49:08,240 --> 00:49:13,520
project

00:49:09,119 --> 00:49:13,520
and we will see what this project is all

00:49:14,839 --> 00:49:17,839
about

00:49:17,920 --> 00:49:20,079
uh

00:49:23,119 --> 00:49:30,400
my keynote just crashed on me

00:49:26,400 --> 00:49:34,000
like violently oh no it's here okay so

00:49:30,400 --> 00:49:35,839
we are going to use two um two files two

00:49:34,000 --> 00:49:37,520
csv files you just ingested one so you

00:49:35,839 --> 00:49:39,520
know to do that now

00:49:37,520 --> 00:49:41,040
and one is containing books and the

00:49:39,520 --> 00:49:44,400
other one is containing offers

00:49:41,040 --> 00:49:46,160
okay and what i want to do is to listen

00:49:44,400 --> 00:49:49,040
to get the list of offers with the most

00:49:46,160 --> 00:49:52,160
books by number of books

00:49:49,040 --> 00:49:54,960
so if it was a relational database

00:49:52,160 --> 00:49:55,520
and you're probably used to manipulating

00:49:54,960 --> 00:49:58,800
or

00:49:55,520 --> 00:50:01,839
dealing with relational databases rdbms

00:49:58,800 --> 00:50:04,800
you would have a offer table and a books

00:50:01,839 --> 00:50:05,680
table and you can actually link uh on

00:50:04,800 --> 00:50:10,839
the

00:50:05,680 --> 00:50:13,839
um oops on the id

00:50:10,839 --> 00:50:16,480
yeah i wonder what okay on the id and

00:50:13,839 --> 00:50:16,960
you can link to the off writing book.csv

00:50:16,480 --> 00:50:20,000
okay

00:50:16,960 --> 00:50:23,040
nothing just a basic join left join

00:50:20,000 --> 00:50:23,839
and you can do that so if we look at

00:50:23,040 --> 00:50:26,160
that

00:50:23,839 --> 00:50:26,960
that's the uh that's the that's the lab

00:50:26,160 --> 00:50:29,440
we're running to

00:50:26,960 --> 00:50:31,920
going to run uh and you can look is go

00:50:29,440 --> 00:50:31,920
to uh

00:50:32,359 --> 00:50:37,520
net.jgp.books.spark.chapter15

00:50:34,400 --> 00:50:41,040
dot lab 920 account books

00:50:37,520 --> 00:50:44,400
offer and open offers and books count

00:50:41,040 --> 00:50:47,680
uh books app.java the guy who wrote this

00:50:44,400 --> 00:50:51,920
was really not inspired my god okay

00:50:47,680 --> 00:50:55,200
uh you uh right click run as a java app

00:50:51,920 --> 00:50:56,480
and if you are successful in your

00:50:55,200 --> 00:51:01,200
application

00:50:56,480 --> 00:51:01,200
you should be seeing something like that

00:51:04,160 --> 00:51:11,839
it was kind of

00:51:08,400 --> 00:51:14,800
okay let me run it as well on my side

00:51:11,839 --> 00:51:15,680
and then we can do it we can analyze

00:51:14,800 --> 00:51:21,200
what's going on

00:51:15,680 --> 00:51:21,200
and what we did so chapter 15

00:51:21,680 --> 00:51:25,520
you get 25 so until you get 25 record

00:51:24,800 --> 00:51:29,119
that's

00:51:25,520 --> 00:51:31,200
pretty good okay uh let me just look at

00:51:29,119 --> 00:51:32,880
00:51:31,200 --> 00:51:34,480
i don't know if you should be getting 21

00:51:32,880 --> 00:51:37,599
records let's let's look at that

00:51:34,480 --> 00:51:39,359
okay okay i'm going to open it

00:51:37,599 --> 00:51:42,480
i don't have to open it to run it but

00:51:39,359 --> 00:51:42,480
and then i'm going to run it

00:51:43,440 --> 00:51:49,119
so if you had to do that with

00:51:46,960 --> 00:51:50,160
with a relational database which is not

00:51:49,119 --> 00:51:53,200
difficult right

00:51:50,160 --> 00:51:56,079
it's a couple of uh group buy and

00:51:53,200 --> 00:51:57,520
count you first would have to ingest the

00:51:56,079 --> 00:51:59,920
csv files

00:51:57,520 --> 00:52:01,280
in the database okay so that was your

00:51:59,920 --> 00:52:03,280
first step

00:52:01,280 --> 00:52:05,040
and then you would have to be able to do

00:52:03,280 --> 00:52:08,000
the sql statement

00:52:05,040 --> 00:52:08,000
and um so

00:52:08,079 --> 00:52:14,480
so that's that's what i've done okay so

00:52:11,200 --> 00:52:16,319
uh well this this

00:52:14,480 --> 00:52:18,160
bad example doesn't even tell you how

00:52:16,319 --> 00:52:21,200
much records you have

00:52:18,160 --> 00:52:25,280
see um

00:52:21,200 --> 00:52:26,160
so and i think you probably have only

00:52:25,280 --> 00:52:29,520
those

00:52:26,160 --> 00:52:32,559
i don't think you have 21 1 2 3 4

00:52:29,520 --> 00:52:36,079
5 6 7 8 nine ten eleven

00:52:32,559 --> 00:52:40,559
twelve thirteen fifteen fifteen records

00:52:36,079 --> 00:52:42,640
yep yep fifteen records okay and i will

00:52:40,559 --> 00:52:44,400
i will show you how to not be the lazy

00:52:42,640 --> 00:52:47,200
way of of dealing with

00:52:44,400 --> 00:52:47,839
what i just did like counting things

00:52:47,200 --> 00:52:50,800
like

00:52:47,839 --> 00:52:52,480
on the screen that's pretty lame okay so

00:52:50,800 --> 00:52:54,400
uh

00:52:52,480 --> 00:52:56,079
let's start let's look let's look at the

00:52:54,400 --> 00:52:59,119
code and see what happens okay

00:52:56,079 --> 00:53:02,559
so as you can see

00:52:59,119 --> 00:53:04,079
i have exactly the same imports here

00:53:02,559 --> 00:53:05,599
okay so nothing new i'm going to add

00:53:04,079 --> 00:53:08,800
with my thing uh

00:53:05,599 --> 00:53:11,359
so data set row uh and spark session

00:53:08,800 --> 00:53:12,640
okay and now what what do we have i'm

00:53:11,359 --> 00:53:15,839
starting

00:53:12,640 --> 00:53:16,240
and i'm building my session i give it a

00:53:15,839 --> 00:53:18,880
name

00:53:16,240 --> 00:53:19,520
offers and books i'm setting a master

00:53:18,880 --> 00:53:21,760
local

00:53:19,520 --> 00:53:23,280
okay so spark will create a cluster on

00:53:21,760 --> 00:53:26,400
the fly here

00:53:23,280 --> 00:53:29,119
and get the session then i'm going

00:53:26,400 --> 00:53:30,480
as we did just before i'm going to

00:53:29,119 --> 00:53:34,559
import

00:53:30,480 --> 00:53:37,599
the data from offers and books

00:53:34,559 --> 00:53:40,720
and the same thing it's a csv

00:53:37,599 --> 00:53:43,200
it has a header and i'm also

00:53:40,720 --> 00:53:44,160
i adding a little thing here called

00:53:43,200 --> 00:53:47,599
inferior schema

00:53:44,160 --> 00:53:49,119
okay i don't need it actually uh

00:53:47,599 --> 00:53:50,400
i don't think i need it actually it'll

00:53:49,119 --> 00:53:52,079
be interesting but i don't think i need

00:53:50,400 --> 00:53:54,319
it

00:53:52,079 --> 00:53:56,319
and yeah i'm going to show you the the

00:53:54,319 --> 00:53:59,599
csv files that's a great question

00:53:56,319 --> 00:54:01,280
thanks you might have asking it um and

00:53:59,599 --> 00:54:02,640
so i'm going to infuse schema so

00:54:01,280 --> 00:54:05,119
basically i'm going to tell

00:54:02,640 --> 00:54:06,160
spark hey look at what kind of data it

00:54:05,119 --> 00:54:09,040
is and tell me

00:54:06,160 --> 00:54:10,559
if you can do something with it and then

00:54:09,040 --> 00:54:12,640
the magic happens okay i'm doing the

00:54:10,559 --> 00:54:14,559
same thing for books

00:54:12,640 --> 00:54:16,160
and before the magic and it's a good

00:54:14,559 --> 00:54:17,280
it's a perfect good timing to look at

00:54:16,160 --> 00:54:21,440
the data actually

00:54:17,280 --> 00:54:21,440
so if i look at the data books

00:54:21,839 --> 00:54:29,119
uh offers

00:54:25,599 --> 00:54:31,680
that's ugly small sorry guys uh ooh this

00:54:29,119 --> 00:54:31,680
is awful

00:54:32,240 --> 00:54:35,440
it's a bit it's a bit better here but

00:54:33,760 --> 00:54:38,960
it's not that great though

00:54:35,440 --> 00:54:41,200
um let me see if i can do better open

00:54:38,960 --> 00:54:41,200
with

00:54:45,520 --> 00:54:49,280
okay maybe it's a bit better okay so i

00:54:48,400 --> 00:54:52,559
imported it

00:54:49,280 --> 00:54:56,480
in a csv file the csv file in numbers

00:54:52,559 --> 00:55:00,480
and i can actually do bigger here okay

00:54:56,480 --> 00:55:03,920
so that's the offers you see um the id

00:55:00,480 --> 00:55:05,839
15 so cementite that that refers

00:55:03,920 --> 00:55:07,760
as a probably a link with your 15 you

00:55:05,839 --> 00:55:11,280
got um

00:55:07,760 --> 00:55:14,480
and the link in the wikipedia okay um

00:55:11,280 --> 00:55:15,520
if i look at the book i will probably

00:55:14,480 --> 00:55:20,960
have a very similar

00:55:15,520 --> 00:55:25,280
uh display

00:55:20,960 --> 00:55:25,280
open with a system editor

00:55:27,119 --> 00:55:31,040
okay and if i zoom in

00:55:31,280 --> 00:55:34,559
it's a very similar thing i've got my id

00:55:33,599 --> 00:55:38,319
of the book

00:55:34,559 --> 00:55:41,119
my offer id my title the release date

00:55:38,319 --> 00:55:41,760
which is all over the place on the link

00:55:41,119 --> 00:55:45,359
here

00:55:41,760 --> 00:55:48,240
and you see here that numbers

00:55:45,359 --> 00:55:49,599
is completely lost about csv files

00:55:48,240 --> 00:55:52,640
because

00:55:49,599 --> 00:55:57,119
java 8 in action is completely lost uh

00:55:52,640 --> 00:55:59,599
this course on the method no fabregas

00:55:57,119 --> 00:56:00,319
completely lost okay so so when you look

00:55:59,599 --> 00:56:02,240
at what

00:56:00,319 --> 00:56:03,359
spark is doing here is doing a much

00:56:02,240 --> 00:56:06,480
better job as

00:56:03,359 --> 00:56:11,440
at importing the csv file okay let's get

00:56:06,480 --> 00:56:11,440
let's get out of here um and

00:56:11,680 --> 00:56:14,960
and we we can go back to the source code

00:56:13,599 --> 00:56:17,839
does that answer your questions your

00:56:14,960 --> 00:56:17,839
mentor

00:56:18,880 --> 00:56:23,839
okay um

00:56:22,160 --> 00:56:26,880
[Music]

00:56:23,839 --> 00:56:27,839
okay so so next step is i've got my two

00:56:26,880 --> 00:56:29,760
data frames

00:56:27,839 --> 00:56:31,280
oh that's a term i use okay it's a data

00:56:29,760 --> 00:56:32,960
frame so

00:56:31,280 --> 00:56:35,040
that you see that the the definition of

00:56:32,960 --> 00:56:35,440
a data frame here is this data set of

00:56:35,040 --> 00:56:38,079
row

00:56:35,440 --> 00:56:38,640
here data set row i've got my data set

00:56:38,079 --> 00:56:41,040
up there

00:56:38,640 --> 00:56:41,760
row here data set row okay that's my

00:56:41,040 --> 00:56:45,119
data frame

00:56:41,760 --> 00:56:48,240
that's that's the type um used in

00:56:45,119 --> 00:56:49,920
in spark in java data set of raw you can

00:56:48,240 --> 00:56:51,760
have data set of all those things

00:56:49,920 --> 00:56:53,119
but the road is the most powerful

00:56:51,760 --> 00:56:54,799
container uh

00:56:53,119 --> 00:56:56,480
it's part and specifically the data set

00:56:54,799 --> 00:56:57,359
of row easily from a data set of

00:56:56,480 --> 00:57:01,119
something else

00:56:57,359 --> 00:57:05,119
is not a data frame um i hope it's not

00:57:01,119 --> 00:57:07,200
too confusing here and so

00:57:05,119 --> 00:57:08,160
the next thing is like you would do is

00:57:07,200 --> 00:57:11,040
do a join right

00:57:08,160 --> 00:57:12,400
so this is major i could do it in sql if

00:57:11,040 --> 00:57:15,040
i wanted to but um

00:57:12,400 --> 00:57:17,760
i'm better at java than sql so i did it

00:57:15,040 --> 00:57:20,880
using the apis so what am i doing here

00:57:17,760 --> 00:57:21,839
i'm actually looking at i'm building my

00:57:20,880 --> 00:57:24,640
library

00:57:21,839 --> 00:57:26,799
okay my my new data set my new data

00:57:24,640 --> 00:57:30,000
frame here called library df

00:57:26,799 --> 00:57:31,200
i use i take it from offer from the

00:57:30,000 --> 00:57:34,480
offer data frame

00:57:31,200 --> 00:57:38,160
and i'm joining it with books

00:57:34,480 --> 00:57:42,079
and i'm going to join it on

00:57:38,160 --> 00:57:45,440
on id so basically offers dot id

00:57:42,079 --> 00:57:49,839
equals books dot offer id

00:57:45,440 --> 00:57:52,559
it's not faster to do it in in sql uh

00:57:49,839 --> 00:57:54,079
you only see the spreadsheet done are

00:57:52,559 --> 00:57:58,640
you the only one seeing the spreadsheet

00:57:54,079 --> 00:58:00,720
because i i've got my ipad here

00:57:58,640 --> 00:58:03,839
that is displaying what you should be

00:58:00,720 --> 00:58:03,839
yeah johnny c

00:58:06,839 --> 00:58:13,119
code

00:58:09,440 --> 00:58:18,240
yeah um

00:58:13,119 --> 00:58:21,359
maybe john you you can reconnect

00:58:18,240 --> 00:58:23,200
okay done okay you're good good um

00:58:21,359 --> 00:58:25,119
sorry about that sometime it's a it's a

00:58:23,200 --> 00:58:26,319
bit tricky or maybe it's just a bit of a

00:58:25,119 --> 00:58:29,520
delay

00:58:26,319 --> 00:58:32,799
um yeah so i i could do in sequel

00:58:29,520 --> 00:58:35,680
sql is not faster uh and and under

00:58:32,799 --> 00:58:37,119
um under underneath it's it's going to

00:58:35,680 --> 00:58:40,000
be optimized anyway

00:58:37,119 --> 00:58:40,640
uh so you could it's where your level of

00:58:40,000 --> 00:58:43,200
comfort

00:58:40,640 --> 00:58:44,160
to be honest i could i could do i could

00:58:43,200 --> 00:58:47,119
do sql

00:58:44,160 --> 00:58:47,839
or i could do i could do a join there i

00:58:47,119 --> 00:58:51,280
kind of

00:58:47,839 --> 00:58:55,119
liked the java java api um

00:58:51,280 --> 00:58:57,040
so uh so

00:58:55,119 --> 00:58:58,160
what what else i'm going to do after

00:58:57,040 --> 00:59:00,799
that is

00:58:58,160 --> 00:59:01,359
i'm going you see this book id okay so

00:59:00,799 --> 00:59:04,000
i'm

00:59:01,359 --> 00:59:05,119
going to call to create a new column

00:59:04,000 --> 00:59:07,760
called book id

00:59:05,119 --> 00:59:09,680
and it's going to to take as a base of

00:59:07,760 --> 00:59:12,960
this book idea i'm going to take id

00:59:09,680 --> 00:59:15,280
there because yeah it's confusing right

00:59:12,960 --> 00:59:17,680
and then i'm going to drop the the

00:59:15,280 --> 00:59:19,920
columns books books id

00:59:17,680 --> 00:59:21,920
and then i'm going to do a group buy

00:59:19,920 --> 00:59:25,440
exactly how you would do a group buy

00:59:21,920 --> 00:59:28,640
um in sql and i'm going to

00:59:25,440 --> 00:59:32,720
then count that's it that's it

00:59:28,640 --> 00:59:36,720
and then after i'm ordering

00:59:32,720 --> 00:59:39,040
and then i'm showing so

00:59:36,720 --> 00:59:39,839
if you are if you're a java developer

00:59:39,040 --> 00:59:43,040
you know that this

00:59:39,839 --> 00:59:45,680
this method chaining is is is pretty

00:59:43,040 --> 00:59:46,960
common um at some point you cannot

00:59:45,680 --> 00:59:49,040
change everything because

00:59:46,960 --> 00:59:50,880
it needs to know about the data before

00:59:49,040 --> 00:59:51,280
you can do it so that's why i could do

00:59:50,880 --> 00:59:53,359
the

00:59:51,280 --> 00:59:55,119
middle of chaining for all that and this

00:59:53,359 --> 00:59:56,079
this is a bit confusing for spark if i

00:59:55,119 --> 00:59:57,359
would just do

00:59:56,079 --> 00:59:59,839
all the things it doesn't know what to

00:59:57,359 --> 01:00:01,040
contain what what is the library df

00:59:59,839 --> 01:00:04,079
contains if i would do

01:00:01,040 --> 01:00:04,640
just adding that there okay and so i do

01:00:04,079 --> 01:00:06,480
a show

01:00:04,640 --> 01:00:08,240
as i showed you before and i also did a

01:00:06,480 --> 01:00:10,559
print schema

01:00:08,240 --> 01:00:11,359
so what is a print schema it shows the

01:00:10,559 --> 01:00:13,440
schema

01:00:11,359 --> 01:00:16,559
of my data frame of my resulting data

01:00:13,440 --> 01:00:16,559
frame so if i go back

01:00:16,720 --> 01:00:21,040
you see it here right you see it you see

01:00:19,280 --> 01:00:22,160
my you see at the bottom you see my

01:00:21,040 --> 01:00:25,680
schema

01:00:22,160 --> 01:00:27,280
so i've got logically it matches the

01:00:25,680 --> 01:00:30,000
columns i've got in my data frame so

01:00:27,280 --> 01:00:33,280
i've got a column id which is an integer

01:00:30,000 --> 01:00:34,880
i've got a name okay um and it's a

01:00:33,280 --> 01:00:37,200
string i've got a link which is a string

01:00:34,880 --> 01:00:39,040
and i've got a count which is long

01:00:37,200 --> 01:00:40,559
and if you look at that the very

01:00:39,040 --> 01:00:43,520
interesting thing is that

01:00:40,559 --> 01:00:46,160
i've never at any place specified which

01:00:43,520 --> 01:00:51,680
data or data type i was using

01:00:46,160 --> 01:00:55,119
spark infered all that by himself

01:00:51,680 --> 01:00:57,680
pretty nice so okay

01:00:55,119 --> 01:00:58,480
so let's let's let's drill a little bit

01:00:57,680 --> 01:01:01,599
more into

01:00:58,480 --> 01:01:03,920
into that um and uh

01:01:01,599 --> 01:01:06,400
and to to understand what's what's

01:01:03,920 --> 01:01:08,160
what's what's going on there

01:01:06,400 --> 01:01:09,599
and see i would say the art of

01:01:08,160 --> 01:01:12,559
delegating

01:01:09,599 --> 01:01:13,200
remember we're even if i'm running it

01:01:12,559 --> 01:01:15,370
everything

01:01:13,200 --> 01:01:16,559
locally um

01:01:15,370 --> 01:01:20,480
[Music]

01:01:16,559 --> 01:01:25,440
i i'm running a distributed system

01:01:20,480 --> 01:01:28,799
okay so that's how it works

01:01:25,440 --> 01:01:28,799
and um

01:01:29,599 --> 01:01:35,200
you the way the way the way you do it is

01:01:32,880 --> 01:01:39,839
you've got your application okay so if i

01:01:35,200 --> 01:01:39,839
look at the application i just run

01:01:40,400 --> 01:01:46,400
okay so so if i if i just show you the

01:01:43,440 --> 01:01:46,400
application i just run

01:01:47,920 --> 01:01:53,440
okay this application is my driver

01:01:51,599 --> 01:01:54,720
that's that's that's a definition that's

01:01:53,440 --> 01:01:57,839
the definition for for

01:01:54,720 --> 01:02:00,799
for apache spark it connects

01:01:57,839 --> 01:02:01,359
to a cluster when i say when i create a

01:02:00,799 --> 01:02:03,520
session

01:02:01,359 --> 01:02:04,720
and specifying local that's what it go

01:02:03,520 --> 01:02:06,960
that's what is happening

01:02:04,720 --> 01:02:08,480
it goes and creates well in this

01:02:06,960 --> 01:02:11,359
scenario it creates it but

01:02:08,480 --> 01:02:12,559
it could specify another master another

01:02:11,359 --> 01:02:15,440
cluster manager

01:02:12,559 --> 01:02:17,760
that that will take it over so that's

01:02:15,440 --> 01:02:20,720
that's how you set master

01:02:17,760 --> 01:02:22,640
and then that's it for for it then

01:02:20,720 --> 01:02:25,359
because that's really the driver

01:02:22,640 --> 01:02:27,680
kind of driving the cluster manager in

01:02:25,359 --> 01:02:30,799
the resort with all the resources

01:02:27,680 --> 01:02:33,200
and that's where

01:02:30,799 --> 01:02:33,839
the master is going to talk to is to the

01:02:33,200 --> 01:02:36,400
nods

01:02:33,839 --> 01:02:37,760
to the workers or slave depending on the

01:02:36,400 --> 01:02:40,000
literature

01:02:37,760 --> 01:02:42,000
[Music]

01:02:40,000 --> 01:02:43,760
and so the master is talking to the

01:02:42,000 --> 01:02:46,400
workers and

01:02:43,760 --> 01:02:47,760
the workers themselves have executors

01:02:46,400 --> 01:02:51,760
and they run tasks

01:02:47,760 --> 01:02:54,559
so the role of the cluster manager is to

01:02:51,760 --> 01:02:55,760
take what you're doing and splitting it

01:02:54,559 --> 01:02:58,559
into tasks

01:02:55,760 --> 01:02:59,200
and giving it to the workers okay that's

01:02:58,559 --> 01:03:02,240
as

01:02:59,200 --> 01:03:03,200
basic as that and for doing that there

01:03:02,240 --> 01:03:06,799
is

01:03:03,200 --> 01:03:10,160
this um uh operation this this

01:03:06,799 --> 01:03:13,280
um this this

01:03:10,160 --> 01:03:14,400
data that is kind of being cut in in

01:03:13,280 --> 01:03:16,400
pieces

01:03:14,400 --> 01:03:19,119
uh but not only the data the operation

01:03:16,400 --> 01:03:22,000
as well through something called the dag

01:03:19,119 --> 01:03:23,119
which uh which is analyzed and optimized

01:03:22,000 --> 01:03:26,240
so

01:03:23,119 --> 01:03:28,160
spark is listing all what is going what

01:03:26,240 --> 01:03:31,359
it has to be doing

01:03:28,160 --> 01:03:34,400
in term of transformation and at the end

01:03:31,359 --> 01:03:37,520
is going to do an action which is

01:03:34,400 --> 01:03:39,119
the the result operation when it goes

01:03:37,520 --> 01:03:42,400
through all this transformation

01:03:39,119 --> 01:03:45,359
it creates it does not do anything right

01:03:42,400 --> 01:03:45,839
let's let's go back to the code and and

01:03:45,359 --> 01:03:49,440
here

01:03:45,839 --> 01:03:52,000
you see that it's

01:03:49,440 --> 01:03:53,119
and i it's doing all these things okay

01:03:52,000 --> 01:03:55,200
it's doing this this

01:03:53,119 --> 01:03:56,720
join first it's loading the data then

01:03:55,200 --> 01:03:57,440
it's doing this joins and it's going to

01:03:56,720 --> 01:03:59,839
do the

01:03:57,440 --> 01:04:01,119
the column renaming then it's going to

01:03:59,839 --> 01:04:02,960
drop and then it's going to do some

01:04:01,119 --> 01:04:06,000
group by then it's going to do something

01:04:02,960 --> 01:04:06,640
some count and then it's going to do an

01:04:06,000 --> 01:04:08,400
overbuy

01:04:06,640 --> 01:04:11,119
but basically it's not doing anything of

01:04:08,400 --> 01:04:12,799
that it's just creating a list of tasks

01:04:11,119 --> 01:04:14,799
a list of operations

01:04:12,799 --> 01:04:16,559
a list of transformation and those

01:04:14,799 --> 01:04:17,359
transformation when given to the cluster

01:04:16,559 --> 01:04:19,760
manager

01:04:17,359 --> 01:04:21,520
this they are they are creating all this

01:04:19,760 --> 01:04:23,839
tasks and these tasks

01:04:21,520 --> 01:04:25,520
are actually doing all the work you know

01:04:23,839 --> 01:04:27,359
it's always the same thing

01:04:25,520 --> 01:04:29,039
instead of master we could call the boss

01:04:27,359 --> 01:04:30,960
and workers if you want but basically

01:04:29,039 --> 01:04:32,960
the boss is giving the work

01:04:30,960 --> 01:04:34,720
to all the people in the work and and

01:04:32,960 --> 01:04:38,079
the workers actually doing the

01:04:34,720 --> 01:04:42,000
real works they have the tasks and

01:04:38,079 --> 01:04:42,640
when that's done uh the data is brought

01:04:42,000 --> 01:04:46,640
back

01:04:42,640 --> 01:04:49,680
to the driver so

01:04:46,640 --> 01:04:52,960
that's so that's why you see the arrow

01:04:49,680 --> 01:04:55,200
coming back from the

01:04:52,960 --> 01:04:57,200
workers back to the driver so it's an

01:04:55,200 --> 01:04:58,160
important it's an important concept when

01:04:57,200 --> 01:05:01,119
you're doing

01:04:58,160 --> 01:05:02,880
a security analysis because you you

01:05:01,119 --> 01:05:04,640
cannot say hey i've got my driver

01:05:02,880 --> 01:05:05,680
running on my machine but my cluster is

01:05:04,640 --> 01:05:09,839
in the cloud

01:05:05,680 --> 01:05:13,599
okay uh that would

01:05:09,839 --> 01:05:15,680
that would uh that that would not be

01:05:13,599 --> 01:05:18,160
that would not work because then how do

01:05:15,680 --> 01:05:21,280
you get the data back to your laptop

01:05:18,160 --> 01:05:22,880
okay so that's that's kind of a rookie

01:05:21,280 --> 01:05:23,760
mistake which i did several times at the

01:05:22,880 --> 01:05:26,880
beginning

01:05:23,760 --> 01:05:31,039
uh and uh i had a i had

01:05:26,880 --> 01:05:34,000
i had my experience with that okay um

01:05:31,039 --> 01:05:36,799
we're a bit early uh and i wanted to

01:05:34,000 --> 01:05:39,039
start as a

01:05:36,799 --> 01:05:40,240
part three at 45 but i think we could we

01:05:39,039 --> 01:05:42,000
can start part three

01:05:40,240 --> 01:05:43,920
unless you've got well first let's have

01:05:42,000 --> 01:05:44,880
a if you've got any questions there and

01:05:43,920 --> 01:05:47,680
then we we can

01:05:44,880 --> 01:05:48,559
we can we can go on part three after

01:05:47,680 --> 01:05:51,280
right away

01:05:48,559 --> 01:05:53,680
and and look at a bit at our ai with

01:05:51,280 --> 01:05:53,680
spark

01:05:54,480 --> 01:05:57,520
do you guys have any questions

01:05:58,559 --> 01:06:05,839
are you all asleep

01:06:06,400 --> 01:06:12,319
okay looks like uh you're not asleep

01:06:08,480 --> 01:06:12,319
because nobody answered so that's great

01:06:12,640 --> 01:06:17,039
okay uh okay let's let's let's start

01:06:15,359 --> 01:06:20,480
let's start section three of that

01:06:17,039 --> 01:06:22,799
uh part three of this of this

01:06:20,480 --> 01:06:22,799
i can

01:06:26,319 --> 01:06:33,839
i've lost my cursor sorry guys okay part

01:06:29,359 --> 01:06:33,839
three ai

01:06:34,079 --> 01:06:40,000
i'm trying to get a sense of having my

01:06:37,680 --> 01:06:41,119
cursor on my screen which i i really

01:06:40,000 --> 01:06:44,480
need sometimes

01:06:41,119 --> 01:06:48,799
so sorry guys okay i've got to check

01:06:44,480 --> 01:06:48,799
why it's doing that with um

01:06:48,880 --> 01:06:54,000
okay with uh keynotes okay

01:06:54,480 --> 01:06:59,200
ai so

01:06:57,520 --> 01:07:01,520
we're not going to do a lot of ai okay

01:06:59,200 --> 01:07:03,119
so so uh

01:07:01,520 --> 01:07:05,039
that would be that really pretty

01:07:03,119 --> 01:07:07,280
presumptuous of myself and uh

01:07:05,039 --> 01:07:08,240
i think we we should first start about

01:07:07,280 --> 01:07:11,280
what uh or

01:07:08,240 --> 01:07:16,240
what is ai and have a look at uh

01:07:11,280 --> 01:07:16,240
at what is what is what is ai so

01:07:16,400 --> 01:07:19,760
yeah this slide didn't render as

01:07:18,720 --> 01:07:21,039
expected

01:07:19,760 --> 01:07:22,799
but on the left column you've got the

01:07:21,039 --> 01:07:24,400
popular belief and kind of the current

01:07:22,799 --> 01:07:27,839
state of the art

01:07:24,400 --> 01:07:31,119
uh the popular belief is robert's

01:07:27,839 --> 01:07:32,559
it's hal from 2001 it's it's like a

01:07:31,119 --> 01:07:35,039
azimuth of its uh

01:07:32,559 --> 01:07:35,599
you know the three or four depending on

01:07:35,039 --> 01:07:39,760
your account

01:07:35,599 --> 01:07:42,799
uh loads of robotics um

01:07:39,760 --> 01:07:42,799
and uh and

01:07:43,200 --> 01:07:47,599
the potential ai uh as potential ethic

01:07:45,760 --> 01:07:51,359
problems okay like uh

01:07:47,599 --> 01:07:53,839
uh who can i kill this human because

01:07:51,359 --> 01:07:56,799
it's ruining the planet is living on

01:07:53,839 --> 01:07:57,760
which remains of let's go back to the

01:07:56,799 --> 01:08:00,079
laws from

01:07:57,760 --> 01:08:01,920
asimov a first law a robot may not

01:08:00,079 --> 01:08:04,640
injure a human being

01:08:01,920 --> 01:08:05,680
or through an action allow a human being

01:08:04,640 --> 01:08:09,200
to come to war

01:08:05,680 --> 01:08:09,680
okay so that's we're safe as long as we

01:08:09,200 --> 01:08:12,640
are

01:08:09,680 --> 01:08:14,000
implementing azimuth's laws of robotics

01:08:12,640 --> 01:08:16,319
into robots

01:08:14,000 --> 01:08:17,679
which i've never seen implemented but

01:08:16,319 --> 01:08:19,359
let's hope that for the future

01:08:17,679 --> 01:08:21,279
generations they do it

01:08:19,359 --> 01:08:23,199
and of course but of course that's the

01:08:21,279 --> 01:08:24,480
science is a bit of a science fiction

01:08:23,199 --> 01:08:28,000
thing and

01:08:24,480 --> 01:08:31,359
where we are now ai is a lot of mass

01:08:28,000 --> 01:08:32,080
it's heavy calculation um it's a lot of

01:08:31,359 --> 01:08:35,199
algorithm

01:08:32,080 --> 01:08:37,440
which are pretty complex and but

01:08:35,199 --> 01:08:39,279
it also is self-driving cars and that's

01:08:37,440 --> 01:08:41,440
and and other fun stuff but

01:08:39,279 --> 01:08:42,640
but we that's kind of what we call

01:08:41,440 --> 01:08:45,759
narrow ai

01:08:42,640 --> 01:08:47,120
um it's it's kind of focusing on a

01:08:45,759 --> 01:08:50,799
specific field

01:08:47,120 --> 01:08:53,920
of where uh um where we are

01:08:50,799 --> 01:08:55,839
right now okay and and really i think

01:08:53,920 --> 01:08:58,000
that if you you need to keep that in

01:08:55,839 --> 01:09:01,199
mind well you're all uh

01:08:58,000 --> 01:09:03,440
um you

01:09:01,199 --> 01:09:04,719
you're all kind of aware of that anyway

01:09:03,440 --> 01:09:07,839
i think you're probably

01:09:04,719 --> 01:09:10,000
not not dreaming about uh um

01:09:07,839 --> 01:09:11,520
monsters going robots months are going

01:09:10,000 --> 01:09:14,239
to kill you in your sleep but

01:09:11,520 --> 01:09:15,839
um but anyway so it's really a lot of

01:09:14,239 --> 01:09:19,520
that and there's a lot of marketing

01:09:15,839 --> 01:09:23,120
behind ai so really i think that

01:09:19,520 --> 01:09:25,120
ai in 2020 is really

01:09:23,120 --> 01:09:26,480
more or less like you know machine

01:09:25,120 --> 01:09:28,159
learning because

01:09:26,480 --> 01:09:29,679
just a little bit more but not not that

01:09:28,159 --> 01:09:32,000
much and if you

01:09:29,679 --> 01:09:33,679
find someone saying use that hey i'm an

01:09:32,000 --> 01:09:37,759
expert in general ai

01:09:33,679 --> 01:09:40,640
is probably a liar so be aware of that

01:09:37,759 --> 01:09:42,080
uh our science fiction writer which is

01:09:40,640 --> 01:09:45,120
some sort of liar

01:09:42,080 --> 01:09:47,359
okay so and look

01:09:45,120 --> 01:09:48,400
when we look at machine learning and a

01:09:47,359 --> 01:09:51,520
at a vast

01:09:48,400 --> 01:09:53,679
field um there's uh

01:09:51,520 --> 01:09:54,880
some common common algorithm which you

01:09:53,679 --> 01:09:57,520
probably have heard of

01:09:54,880 --> 01:09:59,440
like uh linear logistic regression

01:09:57,520 --> 01:10:00,400
you've got classification and regression

01:09:59,440 --> 01:10:02,800
trees

01:10:00,400 --> 01:10:04,159
and you've got things like the nearest

01:10:02,800 --> 01:10:05,760
neighbor okay i like the nearest

01:10:04,159 --> 01:10:07,360
neighbor it's this kind of yellow little

01:10:05,760 --> 01:10:09,920
guys here

01:10:07,360 --> 01:10:10,640
am i blue or my orange okay and you've

01:10:09,920 --> 01:10:13,920
got a

01:10:10,640 --> 01:10:17,040
subset of a subset of this which is

01:10:13,920 --> 01:10:20,320
um this uh deep learning

01:10:17,040 --> 01:10:22,880
uh and this is things like

01:10:20,320 --> 01:10:25,040
uh artificial neural networks and you've

01:10:22,880 --> 01:10:27,920
got a small illustration next to it

01:10:25,040 --> 01:10:29,280
or you've got also um things like

01:10:27,920 --> 01:10:33,199
reinforcement learning

01:10:29,280 --> 01:10:34,239
and advertising advertiser advertisers

01:10:33,199 --> 01:10:36,719
and things like that

01:10:34,239 --> 01:10:38,560
which which are getting a little bit

01:10:36,719 --> 01:10:39,679
closer to how the human brain is

01:10:38,560 --> 01:10:43,040
functioning

01:10:39,679 --> 01:10:45,120
um but uh

01:10:43,040 --> 01:10:46,320
but basically it's it's all math okay

01:10:45,120 --> 01:10:48,640
it's all got algorithm

01:10:46,320 --> 01:10:49,679
and that's really where the the data

01:10:48,640 --> 01:10:53,040
scientist is

01:10:49,679 --> 01:10:55,280
kind of thrilling and uh

01:10:53,040 --> 01:10:56,480
speaking of data scientists are you

01:10:55,280 --> 01:10:59,920
yourself more like a

01:10:56,480 --> 01:11:04,000
data scientist or data engineer and

01:10:59,920 --> 01:11:04,000
can you answer this simple question

01:11:06,880 --> 01:11:12,400
so let's focus a little bit about what a

01:11:10,400 --> 01:11:14,640
data engineer and what a data scientist

01:11:12,400 --> 01:11:14,640
is

01:11:14,960 --> 01:11:21,679
the data engineer is

01:11:18,000 --> 01:11:25,040
making sure that the data

01:11:21,679 --> 01:11:27,840
is correctly delivered

01:11:25,040 --> 01:11:27,840
maintained

01:11:28,239 --> 01:11:34,800
deployed and for people to be able to

01:11:32,480 --> 01:11:40,480
consume it

01:11:34,800 --> 01:11:43,679
his goal is to be good at data modeling

01:11:40,480 --> 01:11:46,880
in creating pipelines and we're going to

01:11:43,679 --> 01:11:48,159
to look at that and his goal is also to

01:11:46,880 --> 01:11:52,239
improve data

01:11:48,159 --> 01:11:55,199
reliability and quality data reliability

01:11:52,239 --> 01:11:56,159
i'm accessing the data it needs to be it

01:11:55,199 --> 01:11:58,640
needs to be

01:11:56,159 --> 01:11:59,280
the tools i'm going to use for accessing

01:11:58,640 --> 01:12:02,080
the data

01:11:59,280 --> 01:12:03,600
needs to be reliable quality there's a

01:12:02,080 --> 01:12:06,320
lot of different things about

01:12:03,600 --> 01:12:08,320
quality and you can you can look uh you

01:12:06,320 --> 01:12:10,719
can google for cactar

01:12:08,320 --> 01:12:11,520
and you will see a little bit of a data

01:12:10,719 --> 01:12:14,960
quality so

01:12:11,520 --> 01:12:17,440
cactar c-a-c t-a-r

01:12:14,960 --> 01:12:20,239
and and that's really a very important

01:12:17,440 --> 01:12:23,840
field of data engineering

01:12:20,239 --> 01:12:25,679
you want data of quality

01:12:23,840 --> 01:12:27,520
on your on the other end the data

01:12:25,679 --> 01:12:29,920
scientist is more like a

01:12:27,520 --> 01:12:31,360
you know i i like to i like to call a

01:12:29,920 --> 01:12:33,600
big data scientist like the

01:12:31,360 --> 01:12:34,719
the guy was whispering at the at the ear

01:12:33,600 --> 01:12:37,760
of the data

01:12:34,719 --> 01:12:41,280
um he's there she's there to

01:12:37,760 --> 01:12:44,000
clean to massage to organize the data um

01:12:41,280 --> 01:12:44,719
he's doing pro is doing statistics okay

01:12:44,000 --> 01:12:48,080
um

01:12:44,719 --> 01:12:48,960
is looking at analytics is building

01:12:48,080 --> 01:12:50,800
insight

01:12:48,960 --> 01:12:52,239
and models uh we talked more about

01:12:50,800 --> 01:12:54,400
models just in a bit

01:12:52,239 --> 01:12:56,640
which are really this this

01:12:54,400 --> 01:13:00,239
interpretation and this application of

01:12:56,640 --> 01:13:01,679
ai and it creating yeah it prepares the

01:13:00,239 --> 01:13:03,280
data for predictive models

01:13:01,679 --> 01:13:05,120
there's a world preparation for that

01:13:03,280 --> 01:13:07,199
which is not really in the field of data

01:13:05,120 --> 01:13:10,560
engineers

01:13:07,199 --> 01:13:12,719
and really it's about fighting

01:13:10,560 --> 01:13:14,800
hidden gems in the data and patterns

01:13:12,719 --> 01:13:17,280
okay so i've got my data

01:13:14,800 --> 01:13:18,080
why is it meaningful and and that's

01:13:17,280 --> 01:13:20,480
where you

01:13:18,080 --> 01:13:22,800
will need the data scientist you won't

01:13:20,480 --> 01:13:25,120
need a data scientist

01:13:22,800 --> 01:13:27,600
to to do the data engineer and that's a

01:13:25,120 --> 01:13:29,520
common mistake is that a lot of people

01:13:27,600 --> 01:13:31,120
are hiring data scientists but they

01:13:29,520 --> 01:13:32,719
forget to add data engineers

01:13:31,120 --> 01:13:34,560
and basically the data scientists assume

01:13:32,719 --> 01:13:36,880
that data engineering in the world

01:13:34,560 --> 01:13:38,719
and i know and respect a lot of data

01:13:36,880 --> 01:13:40,320
scientists

01:13:38,719 --> 01:13:42,719
they don't know how to do the data

01:13:40,320 --> 01:13:44,480
engineering work and i low

01:13:42,719 --> 01:13:46,159
i know a lot of data engineers and they

01:13:44,480 --> 01:13:48,320
really don't know a single thing about

01:13:46,159 --> 01:13:51,360
what data science is

01:13:48,320 --> 01:13:53,840
um so really be clear

01:13:51,360 --> 01:13:54,400
be really mindful of that and finally i

01:13:53,840 --> 01:13:56,400
think

01:13:54,400 --> 01:13:58,320
the data scientist is really about

01:13:56,400 --> 01:14:00,719
telling stories

01:13:58,320 --> 01:14:02,080
it's a storyteller okay when you when

01:14:00,719 --> 01:14:03,440
you find something you've got to explain

01:14:02,080 --> 01:14:06,880
it

01:14:03,440 --> 01:14:09,199
and a lot of nerds in data as

01:14:06,880 --> 01:14:11,679
data engineers are not capable of being

01:14:09,199 --> 01:14:14,320
able to be

01:14:11,679 --> 01:14:15,280
storytellers it's all fine it's not a

01:14:14,320 --> 01:14:16,800
criticism of them

01:14:15,280 --> 01:14:18,960
they're really brilliant at what they're

01:14:16,800 --> 01:14:20,719
doing

01:14:18,960 --> 01:14:22,480
you've got these two roles okay keep

01:14:20,719 --> 01:14:26,080
them in mind and now

01:14:22,480 --> 01:14:26,080
think about the tools they're using

01:14:26,719 --> 01:14:30,480
of course the tools are different the

01:14:28,960 --> 01:14:32,800
data engineer is using

01:14:30,480 --> 01:14:34,880
databases relational databases things

01:14:32,800 --> 01:14:37,920
like elasticsearch redis

01:14:34,880 --> 01:14:39,840
um database locally on the cloud

01:14:37,920 --> 01:14:42,480
it can use things like spring boot it

01:14:39,840 --> 01:14:45,440
can use s3

01:14:42,480 --> 01:14:47,440
it can use github this is this is this

01:14:45,440 --> 01:14:48,000
is a tool that the data engineer is

01:14:47,440 --> 01:14:51,040
using

01:14:48,000 --> 01:14:52,239
okay and on the other hand the data

01:14:51,040 --> 01:14:55,520
scientist is using

01:14:52,239 --> 01:14:57,040
tools like ibm watson studio he's using

01:14:55,520 --> 01:14:59,679
uh

01:14:57,040 --> 01:15:02,400
databricks databricks is one of the

01:14:59,679 --> 01:15:02,400
company behind

01:15:02,960 --> 01:15:09,280
behind the spark sas

01:15:06,000 --> 01:15:12,880
local to carry north carolina tableau

01:15:09,280 --> 01:15:14,719
spss or jupiter and zipline whatever

01:15:12,880 --> 01:15:16,480
okay this kind of analytics oriented

01:15:14,719 --> 01:15:18,960
tools

01:15:16,480 --> 01:15:20,560
um jupiter and zeppelin are kind of my

01:15:18,960 --> 01:15:22,800
really favorite tools of the

01:15:20,560 --> 01:15:24,000
moment for data scientists but you can

01:15:22,800 --> 01:15:26,480
see also that

01:15:24,000 --> 01:15:27,840
in the data scientist i also added

01:15:26,480 --> 01:15:30,239
powerpoint in excel

01:15:27,840 --> 01:15:31,679
and actually the kind of the old icons

01:15:30,239 --> 01:15:33,840
of powerpoint and excel

01:15:31,679 --> 01:15:35,120
things they're people more they relate

01:15:33,840 --> 01:15:38,480
more to people now

01:15:35,120 --> 01:15:41,040
um because that's storytellers okay

01:15:38,480 --> 01:15:42,640
and to tell stories you need poor point

01:15:41,040 --> 01:15:43,679
like well i'm using keynote to tell you

01:15:42,640 --> 01:15:46,960
a story today

01:15:43,679 --> 01:15:50,800
uh or excel to show figures in on

01:15:46,960 --> 01:15:53,760
in important data in in a particular way

01:15:50,800 --> 01:15:54,159
and of course as this middle part this

01:15:53,760 --> 01:15:57,199
this

01:15:54,159 --> 01:15:58,800
this this intersection of my van diagram

01:15:57,199 --> 01:16:00,320
and in the middle you will see what

01:15:58,800 --> 01:16:02,560
apache spark okay so

01:16:00,320 --> 01:16:04,000
so really a common tool between the data

01:16:02,560 --> 01:16:04,400
engineer and the data scientist is

01:16:04,000 --> 01:16:06,719
really

01:16:04,400 --> 01:16:07,600
spark and you will find some languages

01:16:06,719 --> 01:16:10,239
that you

01:16:07,600 --> 01:16:11,280
know you can use on top of that which

01:16:10,239 --> 01:16:14,640
are

01:16:11,280 --> 01:16:18,560
java scala python

01:16:14,640 --> 01:16:20,880
sql right so

01:16:18,560 --> 01:16:22,960
yeah i would say that most data

01:16:20,880 --> 01:16:25,360
scientists don't use java but

01:16:22,960 --> 01:16:26,000
i i'd like to give them some exposure to

01:16:25,360 --> 01:16:27,760
java

01:16:26,000 --> 01:16:29,120
but anyway yeah they use a lot more

01:16:27,760 --> 01:16:32,000
python and

01:16:29,120 --> 01:16:33,600
and their engineers use more java but

01:16:32,000 --> 01:16:34,719
you know the common ground could be sql

01:16:33,600 --> 01:16:36,159
as well so there's something in the

01:16:34,719 --> 01:16:39,520
middle there

01:16:36,159 --> 01:16:40,320
so so that's that's that's a very

01:16:39,520 --> 01:16:43,040
important thing

01:16:40,320 --> 01:16:44,080
and of course of course a key element of

01:16:43,040 --> 01:16:47,920
that

01:16:44,080 --> 01:16:49,440
is data quality because if you don't

01:16:47,920 --> 01:16:52,480
have

01:16:49,440 --> 01:16:54,719
the quality data in

01:16:52,480 --> 01:16:55,840
your system before you start machine

01:16:54,719 --> 01:16:59,360
learning

01:16:55,840 --> 01:17:01,840
then you're completely completely

01:16:59,360 --> 01:17:03,600
completely off okay so if you've got

01:17:01,840 --> 01:17:08,560
garbage in you've got garbage

01:17:03,600 --> 01:17:11,920
out at an exponential rate so

01:17:08,560 --> 01:17:15,199
i set the grounds for that let's look

01:17:11,920 --> 01:17:18,719
at my third example

01:17:15,199 --> 01:17:21,040
which is correcting and extrapolating

01:17:18,719 --> 01:17:21,040
data

01:17:22,320 --> 01:17:30,159
so here is um

01:17:26,000 --> 01:17:32,400
here is my uh my third lab okay so

01:17:30,159 --> 01:17:33,840
i'm a restaurant manager and i want to

01:17:32,400 --> 01:17:36,239
predict how much revenue will bring a

01:17:33,840 --> 01:17:40,719
party of 40.

01:17:36,239 --> 01:17:45,840
i and i can i can actually

01:17:40,719 --> 01:17:45,840
copy the link to you oops it's

01:17:48,239 --> 01:17:53,520
so this is going to be a very basic

01:17:50,159 --> 01:17:53,520
example of

01:17:56,840 --> 01:17:59,840
uh

01:18:00,480 --> 01:18:06,960
okay here is the link 99

01:18:04,000 --> 01:18:09,520
um and we're going to we're going to

01:18:06,960 --> 01:18:09,520
look at that

01:18:10,239 --> 01:18:15,920
so of course this is oh sorry what

01:18:13,440 --> 01:18:15,920
happened here

01:18:17,040 --> 01:18:20,000
that's my keynote again

01:18:22,080 --> 01:18:25,760
of course this is this example is kind

01:18:23,760 --> 01:18:27,440
of pre-covered okay when you could go to

01:18:25,760 --> 01:18:30,800
restaurant with more than

01:18:27,440 --> 01:18:34,159
two people and

01:18:30,800 --> 01:18:36,880
and we will look at the data and see

01:18:34,159 --> 01:18:37,760
and and look at the quality of the data

01:18:36,880 --> 01:18:39,760
in the meanwhile

01:18:37,760 --> 01:18:41,120
in the chat you can tell me if you want

01:18:39,760 --> 01:18:42,159
we're supposed to have a break in five

01:18:41,120 --> 01:18:44,880
minutes we could

01:18:42,159 --> 01:18:45,760
also skip the break continue and finish

01:18:44,880 --> 01:18:47,520
a little early

01:18:45,760 --> 01:18:50,080
or have the break so just tell me in the

01:18:47,520 --> 01:18:54,960
chat what what's your take on that

01:18:50,080 --> 01:18:58,080
okay so uh

01:18:54,960 --> 01:18:58,080
okay so

01:18:58,320 --> 01:19:03,280
let's so i i took the data

01:19:01,679 --> 01:19:05,199
of the examples and you can see the

01:19:03,280 --> 01:19:05,760
examples of data and i plotted them on

01:19:05,199 --> 01:19:08,880
the graph

01:19:05,760 --> 01:19:12,320
okay and you can

01:19:08,880 --> 01:19:16,880
see that if i would give

01:19:12,320 --> 01:19:21,520
this data as it is to an ir system

01:19:16,880 --> 01:19:23,600
well it would predict that my data

01:19:21,520 --> 01:19:25,520
you can see that you can see my red line

01:19:23,600 --> 01:19:27,600
here which is going to be

01:19:25,520 --> 01:19:29,280
uh to predict that for 40 we're not

01:19:27,600 --> 01:19:30,960
going to have a lot of revenue

01:19:29,280 --> 01:19:32,880
and visually you can see that there's

01:19:30,960 --> 01:19:36,320
something odd right

01:19:32,880 --> 01:19:37,520
and so you see that there's two

01:19:36,320 --> 01:19:41,199
anomalies here

01:19:37,520 --> 01:19:43,840
one anomaly is well someone is paying

01:19:41,199 --> 01:19:45,040
way too much for the number of guests i

01:19:43,840 --> 01:19:48,719
have

01:19:45,040 --> 01:19:50,320
versus the uh versus the

01:19:48,719 --> 01:19:52,080
the price they're paying okay maybe

01:19:50,320 --> 01:19:53,440
they're just having a great party with

01:19:52,080 --> 01:19:54,960
champagne and stuff

01:19:53,440 --> 01:19:57,280
and we've got an anomaly number two

01:19:54,960 --> 01:20:00,239
where people are huge bodies like

01:19:57,280 --> 01:20:01,520
25 27 and they're paying nada uh so

01:20:00,239 --> 01:20:06,320
there's something wrong

01:20:01,520 --> 01:20:06,320
but when i remove these is from my data

01:20:07,040 --> 01:20:13,600
it works okay

01:20:10,320 --> 01:20:16,960
so when i run my application

01:20:13,600 --> 01:20:19,760
you can see that i load

01:20:16,960 --> 01:20:20,639
my data i apply the the data quality

01:20:19,760 --> 01:20:24,800
rules

01:20:20,639 --> 01:20:26,960
and then i can run my

01:20:24,800 --> 01:20:28,560
predictive analytics model and see how

01:20:26,960 --> 01:20:31,040
much i'm going to make for

01:20:28,560 --> 01:20:31,040
for yes

01:20:31,600 --> 01:20:36,320
so let's look at code

01:20:37,440 --> 01:20:40,560
and you can you can you can we can run

01:20:40,080 --> 01:20:43,199
it

01:20:40,560 --> 01:20:43,199
together

01:20:43,600 --> 01:20:52,080
so it's chapter 99

01:20:46,800 --> 01:20:52,080
this one here okay and it is

01:20:52,800 --> 01:20:56,880
in this repo you'll find some kind of uh

01:20:54,880 --> 01:20:59,199
fun things i did with uh

01:20:56,880 --> 01:21:00,239
with not fun data which is a covet 19

01:20:59,199 --> 01:21:02,320
data

01:21:00,239 --> 01:21:04,080
so you can also have a little bit of a

01:21:02,320 --> 01:21:07,120
fun understanding it

01:21:04,080 --> 01:21:11,520
and i've covered that in a few videos

01:21:07,120 --> 01:21:15,120
no okay so what did we say it's lab 200

01:21:11,520 --> 01:21:16,800
of data quality yes it's too small i

01:21:15,120 --> 01:21:19,199
told you it's so small

01:21:16,800 --> 01:21:19,199
okay

01:21:20,480 --> 01:21:23,280
this is this one

01:21:23,920 --> 01:21:28,400
okay and then i can run it run as java

01:21:26,840 --> 01:21:32,400
application

01:21:28,400 --> 01:21:32,400
so spark is starting a session

01:21:32,560 --> 01:21:42,080
loading the data okay

01:21:35,760 --> 01:21:44,639
system still sees a warning

01:21:42,080 --> 01:21:44,639
and um

01:21:45,120 --> 01:21:48,719
including the data displaying a lot of

01:21:47,199 --> 01:21:51,040
things and at the end

01:21:48,719 --> 01:21:52,560
poof you see it prediction for fort i

01:21:51,040 --> 01:21:56,159
guess it's 218

01:21:52,560 --> 01:21:56,159
um it's a cheap restaurant

01:21:56,560 --> 01:22:00,080
and if you look at the data itself if i

01:21:58,719 --> 01:22:04,000
look at the data

01:22:00,080 --> 01:22:04,000
on my data directory there

01:22:08,840 --> 01:22:11,840
um

01:22:12,400 --> 01:22:18,960
restaurant and i look at the checks

01:22:15,760 --> 01:22:19,760
see the data is really okay it's a it's

01:22:18,960 --> 01:22:22,239
a basic thing

01:22:19,760 --> 01:22:23,840
number of guests uh not even a column

01:22:22,239 --> 01:22:28,080
there number of guest

01:22:23,840 --> 01:22:31,199
total amount okay so let's let's uh

01:22:28,080 --> 01:22:33,679
let's let's look at uh

01:22:31,199 --> 01:22:35,760
let's look at what happens okay first

01:22:33,679 --> 01:22:38,719
step

01:22:35,760 --> 01:22:39,199
i'm going to filter the data to the bad

01:22:38,719 --> 01:22:41,760
data

01:22:39,199 --> 01:22:43,600
to filters about data um there's no

01:22:41,760 --> 01:22:44,800
function in sparx saying hey get rid of

01:22:43,600 --> 01:22:46,639
the bad data right

01:22:44,800 --> 01:22:48,000
you've got i've got to tell it to tell

01:22:46,639 --> 01:22:50,320
sparkle to do that

01:22:48,000 --> 01:22:51,440
and it's a specific thing so it's a

01:22:50,320 --> 01:22:54,480
specific

01:22:51,440 --> 01:22:58,480
application so for that thing i'm going

01:22:54,480 --> 01:23:01,199
to use user defined functions

01:22:58,480 --> 01:23:01,760
so the user defined function is a

01:23:01,199 --> 01:23:05,040
functions

01:23:01,760 --> 01:23:07,760
i add to spark

01:23:05,040 --> 01:23:08,400
so and you can see it here uh i'm going

01:23:07,760 --> 01:23:12,159
to

01:23:08,400 --> 01:23:14,639
it's implemented as a class uh

01:23:12,159 --> 01:23:15,600
i'm sorry it's improvement of the class

01:23:14,639 --> 01:23:17,600
and

01:23:15,600 --> 01:23:19,440
you've got to have this this call okay

01:23:17,600 --> 01:23:20,320
so that's basically i'm telling spot a

01:23:19,440 --> 01:23:24,159
this is my new

01:23:20,320 --> 01:23:26,560
function um do that okay

01:23:24,159 --> 01:23:27,199
and that's that's the way i implemented

01:23:26,560 --> 01:23:29,040
it

01:23:27,199 --> 01:23:30,480
is just to do the plumbing with the

01:23:29,040 --> 01:23:32,800
library af

01:23:30,480 --> 01:23:33,600
often you have your beta quality rules

01:23:32,800 --> 01:23:35,440
somewhere else

01:23:33,600 --> 01:23:36,960
already implemented somewhere because

01:23:35,440 --> 01:23:39,920
because we're using java

01:23:36,960 --> 01:23:40,800
well then basically the easy way is to

01:23:39,920 --> 01:23:42,480
tell it hey

01:23:40,800 --> 01:23:44,400
use that as a service use it as a

01:23:42,480 --> 01:23:47,280
library and

01:23:44,400 --> 01:23:48,080
implement the thing so this library here

01:23:47,280 --> 01:23:49,920
the goal of it

01:23:48,080 --> 01:23:52,080
is to check the price and if there's a

01:23:49,920 --> 01:23:54,400
price that is less than 20 bucks

01:23:52,080 --> 01:23:56,880
uh there's a problem okay we don't

01:23:54,400 --> 01:24:00,400
charge people as a 20 bucks

01:23:56,880 --> 01:24:02,080
and what is going to do this this method

01:24:00,400 --> 01:24:04,080
very basic here it's going to check the

01:24:02,080 --> 01:24:05,920
minimum price and if the check

01:24:04,080 --> 01:24:07,840
if the price is under the minimum price

01:24:05,920 --> 01:24:11,040
it's going to return minus one

01:24:07,840 --> 01:24:12,639
and we'll see why and it's

01:24:11,040 --> 01:24:14,480
because there's no way to delete to

01:24:12,639 --> 01:24:15,199
delete a row to delete the record there

01:24:14,480 --> 01:24:17,040
okay

01:24:15,199 --> 01:24:18,960
so that's that's that's my code that's

01:24:17,040 --> 01:24:21,360
that's my that's my functional library

01:24:18,960 --> 01:24:22,239
okay here that's my that's my library

01:24:21,360 --> 01:24:25,600
that's my

01:24:22,239 --> 01:24:27,679
uh that's my um service

01:24:25,600 --> 01:24:29,120
and that that's kind of just a plumbing

01:24:27,679 --> 01:24:32,159
this part is just a plumbing

01:24:29,120 --> 01:24:32,480
i will have to tell spark a spark this

01:24:32,159 --> 01:24:34,080
is

01:24:32,480 --> 01:24:35,920
this new functions that you've got to

01:24:34,080 --> 01:24:40,719
learn about

01:24:35,920 --> 01:24:43,520
now now what i'm doing is

01:24:40,719 --> 01:24:45,280
i'm asking spark to so a very similar

01:24:43,520 --> 01:24:47,600
thing okay i've got a little bit more

01:24:45,280 --> 01:24:48,560
imports you will have to find them out

01:24:47,600 --> 01:24:49,840
uh

01:24:48,560 --> 01:24:51,440
same thing i'm starting the the

01:24:49,840 --> 01:24:52,560
application giving a name giving a

01:24:51,440 --> 01:24:54,239
session

01:24:52,560 --> 01:24:56,880
and then i've got these two things here

01:24:54,239 --> 01:25:00,000
okay i've got this this udf

01:24:56,880 --> 01:25:02,639
so basically i'm telling spark hey

01:25:00,000 --> 01:25:03,440
register these two functions they're

01:25:02,639 --> 01:25:05,600
called

01:25:03,440 --> 01:25:07,280
minimum price rule and they're

01:25:05,600 --> 01:25:10,400
implemented in a class called

01:25:07,280 --> 01:25:12,320
minimum price data quality udf and the

01:25:10,400 --> 01:25:14,159
second one is price correlation rule

01:25:12,320 --> 01:25:15,520
and it's it's implemented in the price

01:25:14,159 --> 01:25:18,239
correlation data called the

01:25:15,520 --> 01:25:20,000
udf okay pretty pretty straightforward

01:25:18,239 --> 01:25:21,440
nothing nothing rocket science here

01:25:20,000 --> 01:25:23,920
and i'm just asking them to register

01:25:21,440 --> 01:25:25,440
them as you see i'm registering an

01:25:23,920 --> 01:25:26,960
instance of it okay so that's very

01:25:25,440 --> 01:25:27,679
useful because if i'm registering an

01:25:26,960 --> 01:25:29,679
instance

01:25:27,679 --> 01:25:31,120
it won't have to create instance every

01:25:29,679 --> 01:25:35,040
time it's going to use it's going to use

01:25:31,120 --> 01:25:38,320
only one instance next step is

01:25:35,040 --> 01:25:39,199
loading the data we've done that we've

01:25:38,320 --> 01:25:42,400
done data

01:25:39,199 --> 01:25:44,239
so many times so far okay um so

01:25:42,400 --> 01:25:46,719
same thing it's uh we are going to have

01:25:44,239 --> 01:25:47,840
a csv uh we're going to infuse the

01:25:46,719 --> 01:25:50,000
schema

01:25:47,840 --> 01:25:51,360
uh in this one there's no there's no

01:25:50,000 --> 01:25:54,080
header okay

01:25:51,360 --> 01:25:55,600
uh and that's why i'm actually you see

01:25:54,080 --> 01:25:58,880
this this code here

01:25:55,600 --> 01:26:01,040
uh where i'm i'm creating a column

01:25:58,880 --> 01:26:04,080
called gas and a column comprise

01:26:01,040 --> 01:26:06,000
uh by default spark will will create a

01:26:04,080 --> 01:26:07,600
column called underscore c0 north score

01:26:06,000 --> 01:26:10,800
c1 which was

01:26:07,600 --> 01:26:13,920
a bit broke so i'm asking spark to

01:26:10,800 --> 01:26:16,400
just do it for me in a nice way but also

01:26:13,920 --> 01:26:18,080
i mean the data could come from you know

01:26:16,400 --> 01:26:21,199
json

01:26:18,080 --> 01:26:22,560
i've jdbc you name it and that's the

01:26:21,199 --> 01:26:25,280
result

01:26:22,560 --> 01:26:25,920
okay loads of loads of data you you see

01:26:25,280 --> 01:26:27,280
the data

01:26:25,920 --> 01:26:29,040
of course when you visualize your data

01:26:27,280 --> 01:26:30,480
like that it's very difficult to

01:26:29,040 --> 01:26:33,040
to see what's if there's something a

01:26:30,480 --> 01:26:36,080
little bit wrong there or not okay so

01:26:33,040 --> 01:26:38,639
uh okay well this is the data

01:26:36,080 --> 01:26:40,159
this is how it looks uh it contains the

01:26:38,639 --> 01:26:42,800
anomalies

01:26:40,159 --> 01:26:43,520
after my next book my next my next thing

01:26:42,800 --> 01:26:46,000
is let's

01:26:43,520 --> 01:26:47,520
apply my price domain rule okay my

01:26:46,000 --> 01:26:50,560
minimum price rule

01:26:47,520 --> 01:26:52,639
under on the column price and

01:26:50,560 --> 01:26:54,000
remember this one is if you see

01:26:52,639 --> 01:26:57,360
something that is wrong

01:26:54,000 --> 01:27:00,719
it's going to replace the value by -1 so

01:26:57,360 --> 01:27:00,719
let's look at the result

01:27:01,199 --> 01:27:05,520
so it sees here oh for 25 guests you've

01:27:03,920 --> 01:27:08,719
got something like a

01:27:05,520 --> 01:27:10,480
a price of three dollars so

01:27:08,719 --> 01:27:12,800
you see that the column that is being

01:27:10,480 --> 01:27:13,920
created by sparky is a column called

01:27:12,800 --> 01:27:17,600
price no man

01:27:13,920 --> 01:27:20,639
here so i keep the column i have okay i

01:27:17,600 --> 01:27:23,920
keep the price column it sees 3

01:27:20,639 --> 01:27:27,520
10 15 4 etcetera etcetera but

01:27:23,920 --> 01:27:30,000
it replaces a value by by -1 okay

01:27:27,520 --> 01:27:32,080
so that's that's my real usable value

01:27:30,000 --> 01:27:35,280
after that

01:27:32,080 --> 01:27:38,960
and so

01:27:35,280 --> 01:27:41,600
and then what i'm doing is i'm and here

01:27:38,960 --> 01:27:42,400
here you can see how to use sql directly

01:27:41,600 --> 01:27:47,040
so

01:27:42,400 --> 01:27:50,080
what am i doing the the data in spark

01:27:47,040 --> 01:27:50,080
is immutable

01:27:50,400 --> 01:27:56,800
okay so

01:27:54,880 --> 01:27:58,800
this this is this works a little bit

01:27:56,800 --> 01:28:00,800
better when when we're more interactive

01:27:58,800 --> 01:28:02,880
in a session but what does it mean to

01:28:00,800 --> 01:28:06,320
have immutable data

01:28:02,880 --> 01:28:08,639
immutable data is data you can't change

01:28:06,320 --> 01:28:11,120
right you cannot change you cannot

01:28:08,639 --> 01:28:14,000
change data it's immutable

01:28:11,120 --> 01:28:15,120
so the first time i ran into that by

01:28:14,000 --> 01:28:18,159
learning sparx

01:28:15,120 --> 01:28:19,040
this is completely nuts man i mean you

01:28:18,159 --> 01:28:21,120
you are

01:28:19,040 --> 01:28:24,560
talking about a data processing system

01:28:21,120 --> 01:28:24,560
that does not change data

01:28:24,800 --> 01:28:28,800
so there's a reason why and it's

01:28:27,199 --> 01:28:29,440
actually true it does not change your

01:28:28,800 --> 01:28:31,360
data

01:28:29,440 --> 01:28:33,040
and there's there's a lot of explanation

01:28:31,360 --> 01:28:34,400
and i'm just going to be

01:28:33,040 --> 01:28:35,760
you know it's getting a bit late and

01:28:34,400 --> 01:28:36,719
everybody wants to go back home and have

01:28:35,760 --> 01:28:38,560
a bourbon

01:28:36,719 --> 01:28:39,760
but but the thing is there's a big

01:28:38,560 --> 01:28:41,520
there's an explanation in

01:28:39,760 --> 01:28:43,760
in in this book about why the data is

01:28:41,520 --> 01:28:45,679
immutable and why it should be immutable

01:28:43,760 --> 01:28:47,280
but we've got to i don't want to work

01:28:45,679 --> 01:28:50,000
with the data where

01:28:47,280 --> 01:28:50,880
with -1 as a total okay so that's what

01:28:50,000 --> 01:28:53,679
i'm doing

01:28:50,880 --> 01:28:54,880
i'm creating a view i'm creating a sql

01:28:53,679 --> 01:28:56,159
like a table

01:28:54,880 --> 01:28:58,960
and i'm going to apply the select

01:28:56,159 --> 01:29:03,520
statement in the select statement

01:28:58,960 --> 01:29:07,440
i'm going to select you can read with me

01:29:03,520 --> 01:29:08,880
the number of guests the price no min

01:29:07,440 --> 01:29:10,800
the column price no mean you see just

01:29:08,880 --> 01:29:11,679
before but i'm going to rename this as

01:29:10,800 --> 01:29:14,880
price

01:29:11,679 --> 01:29:16,560
and i'm going to eject the thing so

01:29:14,880 --> 01:29:18,159
the price where where is where's the

01:29:16,560 --> 01:29:19,760
negative value okay whether there's a

01:29:18,159 --> 01:29:22,719
negative value i don't want them

01:29:19,760 --> 01:29:23,360
so i'm creating a new data frame it's

01:29:22,719 --> 01:29:25,600
not the

01:29:23,360 --> 01:29:27,120
it's not like i'm dropping records or

01:29:25,600 --> 01:29:30,320
deleting rows

01:29:27,120 --> 01:29:34,159
in a in in a table i'm creating

01:29:30,320 --> 01:29:36,960
a new data frame okay

01:29:34,159 --> 01:29:38,000
seems odd but that's the way it works

01:29:36,960 --> 01:29:42,080
and that's the way it works

01:29:38,000 --> 01:29:43,360
fast so i hope you got it

01:29:42,080 --> 01:29:45,040
that's that's the way that's the way i

01:29:43,360 --> 01:29:45,440
do it okay so now i've got my new data

01:29:45,040 --> 01:29:48,800
frame

01:29:45,440 --> 01:29:53,120
and you see sql pure sql here

01:29:48,800 --> 01:29:55,920
nothing nothing like crazy java apis

01:29:53,120 --> 01:29:57,360
that's a result i've got my number of

01:29:55,920 --> 01:29:57,920
guests you see there's no minus one

01:29:57,360 --> 01:30:01,040
there

01:29:57,920 --> 01:30:02,800
there's no odd values this is my usable

01:30:01,040 --> 01:30:06,080
data

01:30:02,800 --> 01:30:06,560
this is the data i can use to do some do

01:30:06,080 --> 01:30:09,600
something

01:30:06,560 --> 01:30:13,280
interesting like

01:30:09,600 --> 01:30:16,239
building a predictive model so

01:30:13,280 --> 01:30:16,800
and that's what i'm going to do i'm

01:30:16,239 --> 01:30:18,320
going to

01:30:16,800 --> 01:30:20,000
first to format the data from machine

01:30:18,320 --> 01:30:23,600
learning so there's a few

01:30:20,000 --> 01:30:26,719
rules okay so um

01:30:23,600 --> 01:30:28,719
spark expect me to call a column

01:30:26,719 --> 01:30:31,360
called label and another call called

01:30:28,719 --> 01:30:34,800
features the label is of type double

01:30:31,360 --> 01:30:36,000
uh like a double like a you know a field

01:30:34,800 --> 01:30:37,840
with a double

01:30:36,000 --> 01:30:39,440
and the feature is a vector and that's a

01:30:37,840 --> 01:30:41,679
udt

01:30:39,440 --> 01:30:43,280
so i'm going to i'm going to um i'm

01:30:41,679 --> 01:30:46,080
going i'm going to do that

01:30:43,280 --> 01:30:48,320
and show you how to do that to prepare

01:30:46,080 --> 01:30:52,000
the data for machine learning

01:30:48,320 --> 01:30:54,239
and that's it so

01:30:52,000 --> 01:30:55,760
my label is basically the price so what

01:30:54,239 --> 01:30:56,960
i'm just doing is i'm creating a new

01:30:55,760 --> 01:30:58,639
column for label

01:30:56,960 --> 01:31:00,320
which is a clone of price that's the

01:30:58,639 --> 01:31:03,040
first line okay

01:31:00,320 --> 01:31:04,400
nothing else and then i'm creating i'm

01:31:03,040 --> 01:31:05,120
creating my feature column so it's

01:31:04,400 --> 01:31:06,239
features

01:31:05,120 --> 01:31:08,000
because i can have more than one

01:31:06,239 --> 01:31:09,199
features in this scenario i only have

01:31:08,000 --> 01:31:11,760
one feature

01:31:09,199 --> 01:31:13,600
but i could have features something we

01:31:11,760 --> 01:31:15,760
could have the temperature of

01:31:13,600 --> 01:31:17,040
you know the restaurant to see if they

01:31:15,760 --> 01:31:20,639
consume more alcohol

01:31:17,040 --> 01:31:23,840
or drink more uh

01:31:20,639 --> 01:31:27,280
if the if it's if the weather is high is

01:31:23,840 --> 01:31:30,320
hotter or warmer same thing you can add

01:31:27,280 --> 01:31:32,320
other other features here we're just

01:31:30,320 --> 01:31:34,560
going to have one

01:31:32,320 --> 01:31:36,960
and uh it's it expects an array of

01:31:34,560 --> 01:31:38,960
columns of of columns and that's that's

01:31:36,960 --> 01:31:41,600
just how i did it okay i'm just creating

01:31:38,960 --> 01:31:43,760
an hour i have column and that's guest

01:31:41,600 --> 01:31:44,639
the number of guests and that's that's

01:31:43,760 --> 01:31:47,520
my column

01:31:44,639 --> 01:31:48,080
and it needs to be named features that's

01:31:47,520 --> 01:31:50,960
how

01:31:48,080 --> 01:31:51,360
uh mli will understand it and then i'm

01:31:50,960 --> 01:31:55,040
just

01:31:51,360 --> 01:31:58,239
assembling it and then

01:31:55,040 --> 01:32:01,920
i'm printing the schema well i don't

01:31:58,239 --> 01:32:06,320
need to print the schema and i'm showing

01:32:01,920 --> 01:32:09,520
uh and then you've got this very complex

01:32:06,320 --> 01:32:11,199
modeling here because it's so complex

01:32:09,520 --> 01:32:13,040
and because it's so advanced

01:32:11,199 --> 01:32:14,560
in our day i'm not going to show it to

01:32:13,040 --> 01:32:18,239
you

01:32:14,560 --> 01:32:22,239
i'm not sure you deserve to see it

01:32:18,239 --> 01:32:23,120
so let's and then i'm going to predict

01:32:22,239 --> 01:32:25,120
it

01:32:23,120 --> 01:32:26,400
based on my model my my secret source

01:32:25,120 --> 01:32:28,080
model there

01:32:26,400 --> 01:32:29,920
and basically what i'm doing is just

01:32:28,080 --> 01:32:31,360
printing out okay so what's the result

01:32:29,920 --> 01:32:34,239
of that

01:32:31,360 --> 01:32:35,280
the result is that you see my column my

01:32:34,239 --> 01:32:37,760
first column guessed

01:32:35,280 --> 01:32:39,199
the number of guests the price they paid

01:32:37,760 --> 01:32:41,280
the corrected price

01:32:39,199 --> 01:32:44,000
and then you see that what what is it

01:32:41,280 --> 01:32:47,199
what what spark is expecting

01:32:44,000 --> 01:32:49,440
so you see my features okay and you see

01:32:47,199 --> 01:32:51,440
my production for this feature

01:32:49,440 --> 01:32:52,800
so you see it's the prediction should be

01:32:51,440 --> 01:32:55,970
the closest possible

01:32:52,800 --> 01:32:57,440
to the price the paid otherwise i'm um

01:32:55,970 --> 01:32:59,760
[Music]

01:32:57,440 --> 01:33:01,199
otherwise i'm i'm getting wrong okay so

01:32:59,760 --> 01:33:03,760
so when you look at

01:33:01,199 --> 01:33:05,040
uh there's a bit of offset there for

01:33:03,760 --> 01:33:08,400
example for

01:33:05,040 --> 01:33:12,159
two there's there's 30 and 33 so

01:33:08,400 --> 01:33:15,440
it predicts 29 not too bad for 16

01:33:12,159 --> 01:33:18,800
it should be one or two and it's one 100

01:33:15,440 --> 01:33:20,960
pretty pretty close for 20 it's 120 and

01:33:18,800 --> 01:33:24,159
it predicts 120.

01:33:20,960 --> 01:33:27,920
so we're pretty good there okay and

01:33:24,159 --> 01:33:31,280
for uh the production of for 40

01:33:27,920 --> 01:33:33,440
it's 218. so what we were expecting so

01:33:31,280 --> 01:33:37,040
that's a good that's that's a good for

01:33:33,440 --> 01:33:40,000
making my prediction for 40 guests

01:33:37,040 --> 01:33:42,320
now i want to see yes that you want to

01:33:40,000 --> 01:33:46,239
see the model

01:33:42,320 --> 01:33:50,320
in the chat do you want to see how i

01:33:46,239 --> 01:33:55,120
bought the model

01:33:50,320 --> 01:33:58,159
okay okay i want more than one

01:33:55,120 --> 01:34:00,080
okay okay okay okay okay not

01:33:58,159 --> 01:34:01,760
not not that much okay oh you don't have

01:34:00,080 --> 01:34:05,440
to beg um

01:34:01,760 --> 01:34:09,440
okay so here is the code

01:34:05,440 --> 01:34:12,800
oh okay here here is here is the code

01:34:09,440 --> 01:34:12,800
see that's that's it

01:34:13,120 --> 01:34:16,880
that's that's a code first thing is i'm

01:34:15,360 --> 01:34:18,800
creating a linear regression

01:34:16,880 --> 01:34:20,159
that's that's the type of algorithm i'm

01:34:18,800 --> 01:34:22,960
going to use

01:34:20,159 --> 01:34:24,719
and i can set some parameters uh which

01:34:22,960 --> 01:34:25,760
could be called also hyper parameters in

01:34:24,719 --> 01:34:28,880
the literature

01:34:25,760 --> 01:34:31,280
and i'm going to use uh this max either

01:34:28,880 --> 01:34:32,719
reg param and elastic net param okay

01:34:31,280 --> 01:34:33,520
let's let's forget about all those but

01:34:32,719 --> 01:34:36,000
the thing is

01:34:33,520 --> 01:34:38,159
i'm creating a linear regression just

01:34:36,000 --> 01:34:40,400
linear regression lr i got new linear

01:34:38,159 --> 01:34:43,760
regression

01:34:40,400 --> 01:34:48,000
then i'm giving my data to it okay

01:34:43,760 --> 01:34:51,119
i'm giving my data to the to the trainer

01:34:48,000 --> 01:34:53,280
so and that's all it does it does

01:34:51,119 --> 01:34:55,440
it does the work okay so you see a

01:34:53,280 --> 01:34:58,960
linear regression model my model

01:34:55,440 --> 01:35:03,520
i'm fitting the data here this this

01:34:58,960 --> 01:35:06,080
is building my model from my data

01:35:03,520 --> 01:35:06,800
so this is where you see that creating

01:35:06,080 --> 01:35:09,119
the model

01:35:06,800 --> 01:35:10,000
is a direct correlation of my data my

01:35:09,119 --> 01:35:13,360
data is shut

01:35:10,000 --> 01:35:16,639
my model is worse than shed

01:35:13,360 --> 01:35:19,360
and then um and then i can start looking

01:35:16,639 --> 01:35:20,080
at the prediction thing so that's uh i'm

01:35:19,360 --> 01:35:21,280
creating

01:35:20,080 --> 01:35:23,280
that's that's how that's how i'm

01:35:21,280 --> 01:35:23,760
predicting okay so i'm creating a

01:35:23,280 --> 01:35:25,679
feature

01:35:23,760 --> 01:35:26,800
of 40 my number of guests i want to

01:35:25,679 --> 01:35:30,400
analyze

01:35:26,800 --> 01:35:31,360
and as a feature uh uh i'm creating a

01:35:30,400 --> 01:35:35,520
vector out of it

01:35:31,360 --> 01:35:37,760
once more it's using vectors okay uh

01:35:35,520 --> 01:35:38,960
yeah and it's it's all included okay so

01:35:37,760 --> 01:35:41,600
i didn't add anything

01:35:38,960 --> 01:35:42,000
you can add more people but but it's

01:35:41,600 --> 01:35:43,520
it's

01:35:42,000 --> 01:35:45,679
really the same it's always the same the

01:35:43,520 --> 01:35:48,239
same thing it's the same idea

01:35:45,679 --> 01:35:48,719
um and then i can predict based on my

01:35:48,239 --> 01:35:51,679
model

01:35:48,719 --> 01:35:52,719
model that predict and my features if

01:35:51,679 --> 01:35:54,719
for some reason

01:35:52,719 --> 01:35:56,480
i'm not happy with my linear regression

01:35:54,719 --> 01:35:59,600
and i want to have another type of

01:35:56,480 --> 01:36:00,000
model i can i can i can create something

01:35:59,600 --> 01:36:02,480
else

01:36:00,000 --> 01:36:04,080
i can create a logistic regression it

01:36:02,480 --> 01:36:06,159
would not be used for that thing

01:36:04,080 --> 01:36:08,320
but for that model for that for the per

01:36:06,159 --> 01:36:10,320
use case but i i just create that and my

01:36:08,320 --> 01:36:14,320
code does not change after

01:36:10,320 --> 01:36:16,239
okay my model is the same so that's why

01:36:14,320 --> 01:36:17,679
what is really important is to

01:36:16,239 --> 01:36:21,040
understand

01:36:17,679 --> 01:36:24,159
um to understand so

01:36:21,040 --> 01:36:26,800
it's really all about the model

01:36:24,159 --> 01:36:28,080
it's when you're doing ai that's that's

01:36:26,800 --> 01:36:29,920
how you're doing it

01:36:28,080 --> 01:36:32,159
you've got your first data set you go

01:36:29,920 --> 01:36:32,960
through a trainer it's a fit method with

01:36:32,159 --> 01:36:35,520
just so

01:36:32,960 --> 01:36:36,960
and you get a model then your precious

01:36:35,520 --> 01:36:39,760
model

01:36:36,960 --> 01:36:40,880
you keep it and you can have more data

01:36:39,760 --> 01:36:42,960
to it

01:36:40,880 --> 01:36:44,159
okay so you've got your second data set

01:36:42,960 --> 01:36:45,360
and you can do it model and you've got

01:36:44,159 --> 01:36:47,360
your predictive data

01:36:45,360 --> 01:36:49,360
so what people usually do is the second

01:36:47,360 --> 01:36:52,639
one is a subset of the first

01:36:49,360 --> 01:36:54,880
um so they can they they basically

01:36:52,639 --> 01:36:56,239
they divide the their first two data

01:36:54,880 --> 01:36:59,600
sets in two

01:36:56,239 --> 01:37:02,000
um so usually a ratio of 70 30

01:36:59,600 --> 01:37:02,880
70 for training and 30 percent for

01:37:02,000 --> 01:37:04,560
testing

01:37:02,880 --> 01:37:06,320
so they they know that the predictive

01:37:04,560 --> 01:37:07,920
data but

01:37:06,320 --> 01:37:09,760
you need to have a lot of more data than

01:37:07,920 --> 01:37:12,000
you know my 40 tickets

01:37:09,760 --> 01:37:13,840
of the restaurants but that's it you

01:37:12,000 --> 01:37:17,119
know that's that's that's the thing

01:37:13,840 --> 01:37:17,119
so it's as simple as that

01:37:17,360 --> 01:37:22,639
machine learning is easy

01:37:20,960 --> 01:37:24,400
what is not easy is picking the right

01:37:22,639 --> 01:37:26,159
ongoing but

01:37:24,400 --> 01:37:27,840
for if you're a data engineer and you

01:37:26,159 --> 01:37:30,960
want to do machine learning

01:37:27,840 --> 01:37:33,199
it's that easy as what i showed you

01:37:30,960 --> 01:37:34,880
so it's time for conclu to conclude so

01:37:33,199 --> 01:37:38,480
really

01:37:34,880 --> 01:37:42,400
um let's look let's look at where we are

01:37:38,480 --> 01:37:42,400
and where we can go from there

01:37:43,040 --> 01:37:48,880
here's my big data scenario i've got

01:37:46,840 --> 01:37:50,800
data

01:37:48,880 --> 01:37:53,679
and the first step is i'm going to

01:37:50,800 --> 01:37:53,679
ingest this data

01:37:53,840 --> 01:37:59,520
after i ingest this data the data is

01:37:57,520 --> 01:38:00,960
considered raw data that's how i call

01:37:59,520 --> 01:38:02,719
raw data okay so that's

01:38:00,960 --> 01:38:04,400
that's if you go back to the restaurant

01:38:02,719 --> 01:38:06,080
to the example of the restaurant

01:38:04,400 --> 01:38:07,440
i've got all the tickets that's that's a

01:38:06,080 --> 01:38:09,440
crappy data it's

01:38:07,440 --> 01:38:11,040
there's no there's barely no data

01:38:09,440 --> 01:38:14,639
quality on it it's

01:38:11,040 --> 01:38:16,639
it sucks um you will find in the

01:38:14,639 --> 01:38:19,119
literature other

01:38:16,639 --> 01:38:20,639
name for this raw data you can have it

01:38:19,119 --> 01:38:22,239
people call that sometimes zones so

01:38:20,639 --> 01:38:24,719
you've got the staging zone

01:38:22,239 --> 01:38:26,239
it's a landing zone uh sometimes called

01:38:24,719 --> 01:38:28,000
the bronze data

01:38:26,239 --> 01:38:31,119
or some people call the swamp zone when

01:38:28,000 --> 01:38:34,159
they're building daily

01:38:31,119 --> 01:38:38,639
that's that's data you could use

01:38:34,159 --> 01:38:38,639
but it's it requires more work

01:38:38,880 --> 01:38:41,920
then you apply your data quality rules

01:38:40,480 --> 01:38:43,760
as we did okay here

01:38:41,920 --> 01:38:45,280
with via udf but you don't have to do it

01:38:43,760 --> 01:38:45,920
via udf it could be something else it

01:38:45,280 --> 01:38:48,719
could be just

01:38:45,920 --> 01:38:51,840
spark functions at this stage you've got

01:38:48,719 --> 01:38:53,679
what i call pure data

01:38:51,840 --> 01:38:55,600
some other people call it the refinery

01:38:53,679 --> 01:39:00,239
zone some people call it silver

01:38:55,600 --> 01:39:02,960
data pond sandbox or exploration zone

01:39:00,239 --> 01:39:03,440
it's really this at this stage the data

01:39:02,960 --> 01:39:06,639
is

01:39:03,440 --> 01:39:07,840
useful it's

01:39:06,639 --> 01:39:10,080
something you can share with different

01:39:07,840 --> 01:39:10,840
people okay if i go back to the

01:39:10,080 --> 01:39:13,679
restaurant

01:39:10,840 --> 01:39:15,520
example um i can predict

01:39:13,679 --> 01:39:17,199
for i can use it as a in a predictive

01:39:15,520 --> 01:39:18,000
model but i could use it for the

01:39:17,199 --> 01:39:21,360
accounting

01:39:18,000 --> 01:39:23,119
people okay that's that's that's where

01:39:21,360 --> 01:39:24,719
they have a better idea of what the data

01:39:23,119 --> 01:39:26,719
is um

01:39:24,719 --> 01:39:28,320
so this is this is the data you want to

01:39:26,719 --> 01:39:30,320
keep the raw data you want to keep

01:39:28,320 --> 01:39:32,159
if you've got this and if you want to

01:39:30,320 --> 01:39:33,840
eventually keep it but the pure data is

01:39:32,159 --> 01:39:35,760
really what you want to keep

01:39:33,840 --> 01:39:37,520
because that's what but that's really

01:39:35,760 --> 01:39:39,280
what you want and then

01:39:37,520 --> 01:39:40,560
you want to be able to use over and over

01:39:39,280 --> 01:39:44,000
and over

01:39:40,560 --> 01:39:44,000
and then you can apply transformations

01:39:44,239 --> 01:39:48,159
and and needless to say that actually a

01:39:46,400 --> 01:39:49,920
lot of the the data quality rules are

01:39:48,159 --> 01:39:51,440
data quality transformations but there

01:39:49,920 --> 01:39:54,400
is a transformation where you try to

01:39:51,440 --> 01:39:59,119
extract value from your data

01:39:54,400 --> 01:39:59,119
and this is what i call the rich data

01:39:59,360 --> 01:40:03,199
you will also find the literature people

01:40:02,159 --> 01:40:06,560
calling that

01:40:03,199 --> 01:40:10,760
production data gold data

01:40:06,560 --> 01:40:13,440
refined lagoon or operationalizing

01:40:10,760 --> 01:40:14,960
operationalizers but it's not even

01:40:13,440 --> 01:40:17,760
pronunciable

01:40:14,960 --> 01:40:18,800
um okay so that's that's a kind of a

01:40:17,760 --> 01:40:22,560
really

01:40:18,800 --> 01:40:24,800
crazy name rich data easy

01:40:22,560 --> 01:40:26,080
and then you can publish it okay the

01:40:24,800 --> 01:40:27,920
last last step of your

01:40:26,080 --> 01:40:29,600
of your pipeline you publish it you've

01:40:27,920 --> 01:40:31,360
got to do something that's actionable

01:40:29,600 --> 01:40:33,920
data that's the outcome of it

01:40:31,360 --> 01:40:34,960
actionable data you can give that to

01:40:33,920 --> 01:40:38,880
your balance

01:40:34,960 --> 01:40:40,480
you can you can uh give that to your ceo

01:40:38,880 --> 01:40:42,320
to do something that's that's the data

01:40:40,480 --> 01:40:44,400
that people want

01:40:42,320 --> 01:40:45,679
before they want the data but they they

01:40:44,400 --> 01:40:47,840
want to turn up

01:40:45,679 --> 01:40:48,960
they want they're more interested in the

01:40:47,840 --> 01:40:50,639
insight that is

01:40:48,960 --> 01:40:52,400
coming from the actual data and the

01:40:50,639 --> 01:40:53,040
action on the actual bid later could

01:40:52,400 --> 01:40:55,040
become

01:40:53,040 --> 01:40:56,400
your pure data in another process as

01:40:55,040 --> 01:40:59,040
well or

01:40:56,400 --> 01:41:00,000
be part of your league and speaking of

01:40:59,040 --> 01:41:03,199
lake

01:41:00,000 --> 01:41:06,239
um there's a new concept coming out

01:41:03,199 --> 01:41:09,520
which is being pushed right now

01:41:06,239 --> 01:41:12,639
about about spark as a lake house okay

01:41:09,520 --> 01:41:15,600
this extends the idea of the i would say

01:41:12,639 --> 01:41:18,000
the spark as an operating system

01:41:15,600 --> 01:41:18,880
if you look at the bottom part we've

01:41:18,000 --> 01:41:21,679
looked at

01:41:18,880 --> 01:41:23,679
data sources today we mainly work with

01:41:21,679 --> 01:41:24,960
files but you can have databases systems

01:41:23,679 --> 01:41:27,600
or even streams

01:41:24,960 --> 01:41:29,360
which are being ingested in apache spark

01:41:27,600 --> 01:41:31,679
and

01:41:29,360 --> 01:41:32,639
sometimes you want you want data about

01:41:31,679 --> 01:41:35,600
spark to be

01:41:32,639 --> 01:41:36,480
available like right away uh and that's

01:41:35,600 --> 01:41:39,040
the role of

01:41:36,480 --> 01:41:40,560
this new piece of software on the left

01:41:39,040 --> 01:41:43,840
uh on the west here

01:41:40,560 --> 01:41:45,840
called dell lake and delta engine data

01:41:43,840 --> 01:41:49,199
lake is a database a relation an

01:41:45,840 --> 01:41:50,960
acid database so all transaction blah

01:41:49,199 --> 01:41:54,000
blah blah thing

01:41:50,960 --> 01:41:55,440
that sits next to apache spark and it's

01:41:54,000 --> 01:41:56,960
very useful when you start to have a

01:41:55,440 --> 01:41:59,760
very complex

01:41:56,960 --> 01:42:01,760
data pipelines where you want to kind of

01:41:59,760 --> 01:42:03,199
save things and start things from it

01:42:01,760 --> 01:42:06,880
from a database without having

01:42:03,199 --> 01:42:09,760
a complex complex process for ingesting

01:42:06,880 --> 01:42:10,159
the delta like there delta engine is the

01:42:09,760 --> 01:42:14,239
engine

01:42:10,159 --> 01:42:16,800
on top of the database the storage part

01:42:14,239 --> 01:42:19,600
that's that's rather new been introduced

01:42:16,800 --> 01:42:21,840
by databricks in june of this year

01:42:19,600 --> 01:42:23,280
to process the data you've got two

01:42:21,840 --> 01:42:24,880
things you can use

01:42:23,280 --> 01:42:27,280
of course all the apis and all the

01:42:24,880 --> 01:42:29,199
custom programs i've showed you today

01:42:27,280 --> 01:42:31,360
you can use something called ml flow for

01:42:29,199 --> 01:42:34,239
machine learning

01:42:31,360 --> 01:42:35,440
because you're also doing machine

01:42:34,239 --> 01:42:37,119
learning can be more complex than the

01:42:35,440 --> 01:42:39,679
basic example i showed you

01:42:37,119 --> 01:42:40,960
or you can use something that what we've

01:42:39,679 --> 01:42:43,679
introduced today as

01:42:40,960 --> 01:42:44,960
advanced auto parts and look at my cap

01:42:43,679 --> 01:42:47,280
um

01:42:44,960 --> 01:42:49,119
it's data it's a fast lane okay so so

01:42:47,280 --> 01:42:51,199
that's a way to script

01:42:49,119 --> 01:42:53,040
operations for spark to be super

01:42:51,199 --> 01:42:54,840
efficient to not have to code it's

01:42:53,040 --> 01:42:57,360
almost a no good solution for apache

01:42:54,840 --> 01:42:59,040
spark

01:42:57,360 --> 01:43:00,960
and that's how you process data and then

01:42:59,040 --> 01:43:03,040
you've got to consume the the outcome

01:43:00,960 --> 01:43:04,480
on the north part of this graph here and

01:43:03,040 --> 01:43:05,920
you've got a very interesting thing on

01:43:04,480 --> 01:43:06,560
the east part you've got all the data

01:43:05,920 --> 01:43:09,280
engineering

01:43:06,560 --> 01:43:11,440
once more data engineering people put it

01:43:09,280 --> 01:43:13,199
in other databases in files and other

01:43:11,440 --> 01:43:16,639
systems and streams

01:43:13,199 --> 01:43:18,159
and you can chain that for data science

01:43:16,639 --> 01:43:21,440
i want to consume that in jupiter

01:43:18,159 --> 01:43:22,080
or there are zeppelins there or you can

01:43:21,440 --> 01:43:24,560
look at

01:43:22,080 --> 01:43:26,000
solutions like re-dash which directly

01:43:24,560 --> 01:43:29,520
plug into apache spark

01:43:26,000 --> 01:43:31,440
and which is a very interesting tool

01:43:29,520 --> 01:43:33,760
where this targeted towards business

01:43:31,440 --> 01:43:35,199
users so business users instead of

01:43:33,760 --> 01:43:36,719
having this complex thing they can do

01:43:35,199 --> 01:43:39,119
surf service

01:43:36,719 --> 01:43:40,639
using re-dash on apache spark and delta

01:43:39,119 --> 01:43:44,159
engine

01:43:40,639 --> 01:43:47,280
the worst was worth having look

01:43:44,159 --> 01:43:47,280
so key takeaways

01:43:48,080 --> 01:43:51,520
i hope that after this presentation uh

01:43:50,639 --> 01:43:55,040
even if it's

01:43:51,520 --> 01:43:55,760
5 p.m um and we're all completely washed

01:43:55,040 --> 01:43:58,159
out

01:43:55,760 --> 01:43:59,840
after a day of learning i hope that you

01:43:58,159 --> 01:44:02,400
find that big data

01:43:59,840 --> 01:44:03,840
is easier than you think at the

01:44:02,400 --> 01:44:06,320
beginning

01:44:03,840 --> 01:44:06,960
and i think that java is the way to go

01:44:06,320 --> 01:44:09,600
or

01:44:06,960 --> 01:44:10,320
python if you want data science team

01:44:09,600 --> 01:44:12,320
inside

01:44:10,320 --> 01:44:13,760
and uh and if you insist you can use

01:44:12,320 --> 01:44:15,679
orange color but early

01:44:13,760 --> 01:44:17,679
okay i think you've got all the new

01:44:15,679 --> 01:44:19,360
vocabulary for using spark you know what

01:44:17,679 --> 01:44:21,119
a data frame is you know what spark

01:44:19,360 --> 01:44:24,320
session is

01:44:21,119 --> 01:44:27,840
um you've got at least one friend me

01:44:24,320 --> 01:44:29,440
uh and uh and we we can we can

01:44:27,840 --> 01:44:31,520
we can chat about spark i think the

01:44:29,440 --> 01:44:35,119
spark is fun i hope i hope i managed to

01:44:31,520 --> 01:44:36,320
to to share this fun review regarding

01:44:35,119 --> 01:44:38,320
spark

01:44:36,320 --> 01:44:39,760
data in the fast lane is an awesome data

01:44:38,320 --> 01:44:42,719
pipelining tool uh

01:44:39,760 --> 01:44:43,119
i really really wish you you you look at

01:44:42,719 --> 01:44:46,719
it

01:44:43,119 --> 01:44:48,880
and tell us uh us adventure parts or

01:44:46,719 --> 01:44:50,880
we did with that and as you can see

01:44:48,880 --> 01:44:53,920
spark is also very easily extensible

01:44:50,880 --> 01:44:56,320
with the uds functions we did

01:44:53,920 --> 01:44:58,560
so just going further with that you can

01:44:56,320 --> 01:45:01,600
contact me on twitter at jgperin

01:44:58,560 --> 01:45:02,159
or on linkedin uh if you connect me on

01:45:01,600 --> 01:45:04,400
linkedin

01:45:02,159 --> 01:45:05,840
um just mention that you went to the

01:45:04,400 --> 01:45:08,880
talks here otherwise i

01:45:05,840 --> 01:45:10,159
i have a tendency to ignore uh this

01:45:08,880 --> 01:45:12,080
product user mailing list

01:45:10,159 --> 01:45:13,199
on the spark website is really great as

01:45:12,080 --> 01:45:15,040
well

01:45:13,199 --> 01:45:16,639
it's a community on stack overflow like

01:45:15,040 --> 01:45:18,239
everything on strike overflow

01:45:16,639 --> 01:45:20,480
is growing and it's very interesting as

01:45:18,239 --> 01:45:21,840
well and if you're in the triangle area

01:45:20,480 --> 01:45:24,320
you can look at the

01:45:21,840 --> 01:45:25,360
fb.com that's on facebook we've got a

01:45:24,320 --> 01:45:29,040
triangle spark

01:45:25,360 --> 01:45:31,600
meetup where we we meet

01:45:29,040 --> 01:45:32,080
every other month roughly uh talking

01:45:31,600 --> 01:45:35,360
about

01:45:32,080 --> 01:45:37,119
about spark and uh

01:45:35,360 --> 01:45:38,480
and nowadays we've covered we've got

01:45:37,119 --> 01:45:41,760
plenty of recordings and

01:45:38,480 --> 01:45:44,239
uh so that's that's another another

01:45:41,760 --> 01:45:46,320
avenue for learning things about spark

01:45:44,239 --> 01:45:49,760
and uh finally

01:45:46,320 --> 01:45:52,000
uh finally also to get

01:45:49,760 --> 01:45:53,840
to get to go to go further you can you

01:45:52,000 --> 01:45:58,080
can buy my book and i have no

01:45:53,840 --> 01:46:00,000
thing is here is here's a you know uh

01:45:58,080 --> 01:46:01,520
a discount by discount to get to get the

01:46:00,000 --> 01:46:02,560
book cheaper but if you're super fast

01:46:01,520 --> 01:46:05,679
you can use uh

01:46:02,560 --> 01:46:07,679
the free uh the free book uh

01:46:05,679 --> 01:46:08,719
uh you can get one free book for all

01:46:07,679 --> 01:46:11,119
this audience

01:46:08,719 --> 01:46:12,719
all of you that went there yeah you know

01:46:11,119 --> 01:46:14,639
another way it works it's a lot of work

01:46:12,719 --> 01:46:15,280
so i'm just giving one book okay so i

01:46:14,639 --> 01:46:18,880
hope you

01:46:15,280 --> 01:46:22,719
have your screenshot is and uh ready to

01:46:18,880 --> 01:46:26,400
capture it so

01:46:22,719 --> 01:46:28,480
and that's it so thank you very much

01:46:26,400 --> 01:46:31,920
i hope i hope you enjoyed it you're i

01:46:28,480 --> 01:46:31,920
hope you're not as tired as i am

01:46:32,159 --> 01:46:36,400
and you can join me on on data friday so

01:46:35,760 --> 01:46:39,280
i've

01:46:36,400 --> 01:46:40,320
i'm i'm also now a youtuber if i listen

01:46:39,280 --> 01:46:42,400
to my kids

01:46:40,320 --> 01:46:44,320
uh and i've got a show called data

01:46:42,400 --> 01:46:47,760
friday and

01:46:44,320 --> 01:46:50,400
it's uh it's a talk about about

01:46:47,760 --> 01:46:51,199
about data obviously and it's usually on

01:46:50,400 --> 01:46:54,560
fridays

01:46:51,199 --> 01:46:56,960
sometimes it's uh uh yeah this

01:46:54,560 --> 01:46:59,360
you miss uh kira you missed a second two

01:46:56,960 --> 01:47:01,840
last season was this this one

01:46:59,360 --> 01:47:01,840
you missed

01:47:02,719 --> 01:47:10,159
is the codes okay yeah this one okay um

01:47:06,960 --> 01:47:12,159
so uh yeah so data friday is is a video

01:47:10,159 --> 01:47:13,199
blog i'm i'm doing so sometimes i'm just

01:47:12,159 --> 01:47:16,320
talking to myself

01:47:13,199 --> 01:47:18,239
uh a bit like right now um

01:47:16,320 --> 01:47:20,000
and sometimes i'm also having guests and

01:47:18,239 --> 01:47:23,760
uh we do fun stuff together

01:47:20,000 --> 01:47:26,159
with data so i really hope to see you

01:47:23,760 --> 01:47:28,239
as you're at a live event or on in the

01:47:26,159 --> 01:47:30,480
comments on my youtube channel

01:47:28,239 --> 01:47:31,760
having said that uh thank you very much

01:47:30,480 --> 01:47:35,520
uh no problem

01:47:31,760 --> 01:47:37,440
no problem kira and uh so

01:47:35,520 --> 01:47:39,440
if you've got any questions the floor is

01:47:37,440 --> 01:47:44,639
yours

01:47:39,440 --> 01:47:44,639
and and i'm happy we finished a little

01:47:48,119 --> 01:47:51,119

YouTube URL: https://www.youtube.com/watch?v=CK-JmH_UL6Q


