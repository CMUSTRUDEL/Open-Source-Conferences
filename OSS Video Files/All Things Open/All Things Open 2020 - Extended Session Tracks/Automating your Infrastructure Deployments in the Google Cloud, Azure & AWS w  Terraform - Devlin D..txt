Title: Automating your Infrastructure Deployments in the Google Cloud, Azure & AWS w  Terraform - Devlin D.
Publication date: 2020-12-04
Playlist: All Things Open 2020 - Extended Session Tracks
Description: 
	Presented by: Devlin Duldulao, Inmeta
Presented at All Things Open 2020 - Extended Sessions Tracks

Abstract: Terraform is an amazing open-source toolset for automating infrastructure in the public and private cloud. This course will teach you the fundamentals of Terraform to deploy infrastructure in a consistent, repeatable manner across multiple services.

Systems Administrators and DevOps Engineers have always been charged to do more with less. Defining infrastructure in code and automating its deployment helps improve operational efficiency and lower administrative overhead. In this session, you'll learn foundational knowledge of Hashicorp's Terraform software, a toolset for infrastructure automation. First, you'll discover how open source tools, such as Terraform can be leveraged to implement Infrastructure as Code (IaC). Finally, you'll learn how to automate your infrastructure deployments in the AWS, Azure, and Google Cloud with Terraform.
Captions: 
	00:00:04,960 --> 00:00:08,960
so yeah

00:00:05,759 --> 00:00:09,440
thank you everyone for for waiting uh uh

00:00:08,960 --> 00:00:12,559
sorry

00:00:09,440 --> 00:00:16,720
uh i was a few minutes late

00:00:12,559 --> 00:00:19,279
uh because i wasn't expecting it's

00:00:16,720 --> 00:00:20,080
one hour earlier uh here in oslo norway

00:00:19,279 --> 00:00:22,480
it's it's

00:00:20,080 --> 00:00:23,119
six in the evening a five in the evening

00:00:22,480 --> 00:00:26,480
sorry

00:00:23,119 --> 00:00:30,000
actually it's 5 20 ish 15ish

00:00:26,480 --> 00:00:33,040
uh yeah i wrote my workshop

00:00:30,000 --> 00:00:35,520
is still uh 6 p.m but anyways

00:00:33,040 --> 00:00:36,480
uh yeah uh thank you aro for for

00:00:35,520 --> 00:00:38,960
introducing me

00:00:36,480 --> 00:00:40,399
uh thank you all things for for this

00:00:38,960 --> 00:00:42,960
opportunity

00:00:40,399 --> 00:00:44,160
to you know for me to share this uh

00:00:42,960 --> 00:00:48,239
terraform

00:00:44,160 --> 00:00:50,800
infrastructure as code you know

00:00:48,239 --> 00:00:51,840
share it with the community like for for

00:00:50,800 --> 00:00:55,600
everyone

00:00:51,840 --> 00:00:56,960
and yeah let's start so

00:00:55,600 --> 00:00:59,520
automating your infrastructure

00:00:56,960 --> 00:01:01,600
deployments in the google cloud azure

00:00:59,520 --> 00:01:05,680
aws with terraform

00:01:01,600 --> 00:01:09,760
and we also include zero here

00:01:05,680 --> 00:01:13,840
anyway so let's move to the next slide

00:01:09,760 --> 00:01:13,840
okay so

00:01:15,680 --> 00:01:19,280
infrastructure's code which is sometimes

00:01:18,159 --> 00:01:22,640
called

00:01:19,280 --> 00:01:24,080
iac uses automation to manage

00:01:22,640 --> 00:01:26,960
infrastructure

00:01:24,080 --> 00:01:27,439
for example uh instead of configuring

00:01:26,960 --> 00:01:31,040
your

00:01:27,439 --> 00:01:31,840
servers uh one at time you use a tool to

00:01:31,040 --> 00:01:35,280
configure

00:01:31,840 --> 00:01:38,079
all of them at once you express

00:01:35,280 --> 00:01:39,119
uh this infrastructure you need for your

00:01:38,079 --> 00:01:42,399
application

00:01:39,119 --> 00:01:47,439
as code such as a

00:01:42,399 --> 00:01:50,079
configuration file or script

00:01:47,439 --> 00:01:50,079
does it move

00:01:53,040 --> 00:01:59,280
yeah there's delay though so

00:01:56,320 --> 00:02:01,200
what uh infrastructure s-code can do is

00:01:59,280 --> 00:02:02,159
eliminate manual error-prone

00:02:01,200 --> 00:02:05,360
provisioning

00:02:02,159 --> 00:02:08,800
and changes that's one uh bring software

00:02:05,360 --> 00:02:12,879
best practices to infrastructure

00:02:08,800 --> 00:02:15,920
management what else gain visibility of

00:02:12,879 --> 00:02:19,280
changes through code reviews and

00:02:15,920 --> 00:02:22,319
previews okay so why

00:02:19,280 --> 00:02:24,959
infrastructure as code

00:02:22,319 --> 00:02:25,440
you can you know automate things and in

00:02:24,959 --> 00:02:28,080
a

00:02:25,440 --> 00:02:29,040
repeatable way uh decrease time to

00:02:28,080 --> 00:02:32,319
market that's

00:02:29,040 --> 00:02:35,920
that's good yeah for new applications

00:02:32,319 --> 00:02:36,400
and ongoing maintenance and you also get

00:02:35,920 --> 00:02:39,680
these

00:02:36,400 --> 00:02:42,560
safe predictable changes so

00:02:39,680 --> 00:02:43,840
in short increase speed reduce risk

00:02:42,560 --> 00:02:50,560
reduce costs

00:02:43,840 --> 00:02:54,239
leverage develop for best practices

00:02:50,560 --> 00:02:57,680
terraform in itself is an open source

00:02:54,239 --> 00:03:00,879
iac tool by hashicorp written in the

00:02:57,680 --> 00:03:04,239
the go language you know the code

00:03:00,879 --> 00:03:06,800
is compiled into a single binary

00:03:04,239 --> 00:03:07,840
this binary is used to deploy

00:03:06,800 --> 00:03:11,120
infrastructure

00:03:07,840 --> 00:03:14,560
or build a server using just

00:03:11,120 --> 00:03:18,959
just a shell and the terraform

00:03:14,560 --> 00:03:23,280
binary makes api calls to google cloud

00:03:18,959 --> 00:03:25,440
aws what else openstack etc

00:03:23,280 --> 00:03:26,400
thanks to the terraform providers

00:03:25,440 --> 00:03:29,120
maintained by

00:03:26,400 --> 00:03:29,120
the community

00:03:31,760 --> 00:03:39,519
and here's a sample of of terraform

00:03:34,879 --> 00:03:39,519
code uh you have blocks here

00:03:40,159 --> 00:03:46,640
and we'll we'll dig into this more later

00:03:44,000 --> 00:03:47,440
for example here it's a block of code

00:03:46,640 --> 00:03:50,480
what else

00:03:47,440 --> 00:03:54,480
block names such as a variable

00:03:50,480 --> 00:03:55,280
resource and resource and as you can see

00:03:54,480 --> 00:03:57,840
it's uh the

00:03:55,280 --> 00:03:59,040
the name is self-explanatory you have

00:03:57,840 --> 00:04:02,159
google compute here

00:03:59,040 --> 00:04:05,680
network and then this part here

00:04:02,159 --> 00:04:08,560
is just a way so you can reference

00:04:05,680 --> 00:04:10,720
this well in here an example is this

00:04:08,560 --> 00:04:14,640
example

00:04:10,720 --> 00:04:17,680
and uh yeah this is just a

00:04:14,640 --> 00:04:20,320
sample and like i said uh we'll

00:04:17,680 --> 00:04:21,120
try this out later and see it in in

00:04:20,320 --> 00:04:25,360
using uh

00:04:21,120 --> 00:04:28,960
an editor or vs code so

00:04:25,360 --> 00:04:30,560
here you can also do some conditional

00:04:28,960 --> 00:04:33,919
expressions

00:04:30,560 --> 00:04:36,960
for example if a var you know

00:04:33,919 --> 00:04:39,680
a here for a it's an

00:04:36,960 --> 00:04:40,720
empty string then the result is default

00:04:39,680 --> 00:04:43,360
a

00:04:40,720 --> 00:04:44,720
but otherwise it is the actual value of

00:04:43,360 --> 00:04:48,479
var a

00:04:44,720 --> 00:04:51,199
and you can also do some some function

00:04:48,479 --> 00:04:53,520
calls here uh for example the mean

00:04:51,199 --> 00:04:56,560
function here

00:04:53,520 --> 00:04:58,479
takes uh the amount here

00:04:56,560 --> 00:04:59,680
of a number arguments and return the one

00:04:58,479 --> 00:05:02,960
that is uh

00:04:59,680 --> 00:05:06,160
numerically uh uh smallest

00:05:02,960 --> 00:05:07,039
and for uh for expressions or looping

00:05:06,160 --> 00:05:10,560
here

00:05:07,039 --> 00:05:13,680
for example if if var lists you say

00:05:10,560 --> 00:05:16,960
here is a list of objects that

00:05:13,680 --> 00:05:19,759
all have an attribute id then

00:05:16,960 --> 00:05:20,240
a list of the ids could be produced with

00:05:19,759 --> 00:05:22,960
this

00:05:20,240 --> 00:05:24,000
expression so just like other

00:05:22,960 --> 00:05:26,639
programming language

00:05:24,000 --> 00:05:27,919
you know those conditional expressions

00:05:26,639 --> 00:05:31,680
function calls

00:05:27,919 --> 00:05:31,680
and and for each or for loop

00:05:34,240 --> 00:05:38,400
and how to use this terraform so you

00:05:37,039 --> 00:05:40,560
need an cli

00:05:38,400 --> 00:05:42,320
you need to install as a cli from a

00:05:40,560 --> 00:05:44,400
hashicorp website

00:05:42,320 --> 00:05:46,880
uh there's uh there are many ways of

00:05:44,400 --> 00:05:49,039
installing the the terraform cli

00:05:46,880 --> 00:05:50,000
uh you can use choco if you're using

00:05:49,039 --> 00:05:52,800
windows

00:05:50,000 --> 00:05:53,840
you can also use a brew if you're on mac

00:05:52,800 --> 00:05:57,280
os

00:05:53,840 --> 00:06:00,000
and if you're using linux there's a

00:05:57,280 --> 00:06:02,000
curl that will automatically install it

00:06:00,000 --> 00:06:06,479
for you

00:06:02,000 --> 00:06:09,840
and then uh well after writing a file

00:06:06,479 --> 00:06:11,039
uh a terraform file this is how you use

00:06:09,840 --> 00:06:14,240
the the cli

00:06:11,039 --> 00:06:16,560
there's a terraform in it here

00:06:14,240 --> 00:06:17,360
uh it will initialize your terraform

00:06:16,560 --> 00:06:21,600
folder

00:06:17,360 --> 00:06:24,880
or your let's say your project

00:06:21,600 --> 00:06:28,319
and it will bring all the necessary

00:06:24,880 --> 00:06:32,840
uh tools for you

00:06:28,319 --> 00:06:34,080
like from this provider let's say aws or

00:06:32,840 --> 00:06:37,520
gcp

00:06:34,080 --> 00:06:41,039
so you can it can read your your code

00:06:37,520 --> 00:06:41,039
and do some some uh

00:06:41,120 --> 00:06:45,199
checking you know or planning you will

00:06:43,440 --> 00:06:47,840
see that in a bit

00:06:45,199 --> 00:06:50,319
what else oh you can also do this or

00:06:47,840 --> 00:06:52,639
write this terraform validate

00:06:50,319 --> 00:06:54,880
which will validate your syntax the

00:06:52,639 --> 00:06:58,479
syntax of your uh

00:06:54,880 --> 00:07:00,160
terraform file so yeah

00:06:58,479 --> 00:07:02,639
you can you can check it here oh what

00:07:00,160 --> 00:07:06,560
else terraform plan

00:07:02,639 --> 00:07:10,240
so plan is uh

00:07:06,560 --> 00:07:13,360
just seeing what resources

00:07:10,240 --> 00:07:14,800
you know your your cloud provider will

00:07:13,360 --> 00:07:17,360
create for you

00:07:14,800 --> 00:07:18,639
for example if you write there uh some

00:07:17,360 --> 00:07:22,720
v-feces and and

00:07:18,639 --> 00:07:25,360
uh uh ec2 or vms

00:07:22,720 --> 00:07:25,919
um you'll see it there you'll see it in

00:07:25,360 --> 00:07:28,560
a bit

00:07:25,919 --> 00:07:30,000
after this in during the demo so that's

00:07:28,560 --> 00:07:32,160
for the plan it will tell you

00:07:30,000 --> 00:07:34,400
what exactly what's going to happen in

00:07:32,160 --> 00:07:37,919
your account

00:07:34,400 --> 00:07:40,560
and then terror form apply

00:07:37,919 --> 00:07:42,000
apply meaning uh apply yeah apply the

00:07:40,560 --> 00:07:44,479
this this plan

00:07:42,000 --> 00:07:45,039
uh do it you're just telling the terror

00:07:44,479 --> 00:07:48,080
form

00:07:45,039 --> 00:07:50,960
just do it create it for me uh

00:07:48,080 --> 00:07:52,160
create those those resources for me

00:07:50,960 --> 00:07:55,840
deploy everything

00:07:52,160 --> 00:08:00,319
and you'll also see here this uh

00:07:55,840 --> 00:08:02,319
dash auto approve i make it um

00:08:00,319 --> 00:08:04,080
dark gray here light gray because this

00:08:02,319 --> 00:08:06,960
is just an option

00:08:04,080 --> 00:08:08,319
because if you uh run this terraform

00:08:06,960 --> 00:08:10,720
apply

00:08:08,319 --> 00:08:11,759
you'll you'll get a prompt you know

00:08:10,720 --> 00:08:14,160
you'll get a problem

00:08:11,759 --> 00:08:16,319
like it's it's gonna tell you it's gonna

00:08:14,160 --> 00:08:19,840
ask you are you sure about this

00:08:16,319 --> 00:08:22,479
that you want to do this so uh

00:08:19,840 --> 00:08:23,039
you know just to to remove the that kind

00:08:22,479 --> 00:08:26,000
of prop

00:08:23,039 --> 00:08:27,039
and go straight to creating the the

00:08:26,000 --> 00:08:29,680
resources

00:08:27,039 --> 00:08:31,599
um this is a flag that you would use

00:08:29,680 --> 00:08:35,760
auto approve

00:08:31,599 --> 00:08:38,320
and then uh don't forget to

00:08:35,760 --> 00:08:39,839
therefore destroy to run this command if

00:08:38,320 --> 00:08:43,120
you're just playing around

00:08:39,839 --> 00:08:44,080
this will uh destroy or delete all the

00:08:43,120 --> 00:08:47,600
resources

00:08:44,080 --> 00:08:49,519
that you just that you just created

00:08:47,600 --> 00:08:51,360
so yeah take note of that keep it in

00:08:49,519 --> 00:08:54,800
mind um

00:08:51,360 --> 00:08:57,760
i already uh fell forward is like

00:08:54,800 --> 00:08:58,560
uh forgetting uh to run this i think

00:08:57,760 --> 00:09:02,480
i'll

00:08:58,560 --> 00:09:06,080
i paid twice for aws perhaps for

00:09:02,480 --> 00:09:08,640
after uh a month without realizing uh

00:09:06,080 --> 00:09:11,200
that my maybe i'm still running there or

00:09:08,640 --> 00:09:14,720
my load balancer

00:09:11,200 --> 00:09:22,000
so yeah keep that in mind uh so

00:09:14,720 --> 00:09:24,720
moving on um demo time

00:09:22,000 --> 00:09:25,360
so this is a workshop uh i'll do this

00:09:24,720 --> 00:09:28,800
first

00:09:25,360 --> 00:09:32,160
everything this this um uh

00:09:28,800 --> 00:09:34,399
slides like this uh terraform in theory

00:09:32,160 --> 00:09:35,360
and then later on in the second part of

00:09:34,399 --> 00:09:38,800
this

00:09:35,360 --> 00:09:42,240
uh i will let you do it yourself

00:09:38,800 --> 00:09:45,760
you can choose which cloud providers

00:09:42,240 --> 00:09:46,160
that you wanted to to use you can also

00:09:45,760 --> 00:09:53,120
use

00:09:46,160 --> 00:09:53,120
odd0 to try it here it's opening up

00:09:53,760 --> 00:09:56,880
and then um

00:09:57,360 --> 00:10:01,040
yeah i'll be here to guide you here uh

00:10:00,240 --> 00:10:04,240
after this

00:10:01,040 --> 00:10:07,760
so you can try it out uh yourself

00:10:04,240 --> 00:10:10,959
so uh here's an example of

00:10:07,760 --> 00:10:12,480
of uh terraform folders so i have here

00:10:10,959 --> 00:10:16,000
for one for odd zero

00:10:12,480 --> 00:10:20,079
or zero by the way is a an identity

00:10:16,000 --> 00:10:23,760
provider so authentication provider also

00:10:20,079 --> 00:10:25,200
uh yeah we have gcp here on google cloud

00:10:23,760 --> 00:10:29,839
platform

00:10:25,200 --> 00:10:34,000
aws and azure and this is also available

00:10:29,839 --> 00:10:36,399
on my github so during let's say

00:10:34,000 --> 00:10:38,079
the workshop or you're trying it out you

00:10:36,399 --> 00:10:41,200
can

00:10:38,079 --> 00:10:44,800
just see what i put here

00:10:41,200 --> 00:10:47,040
and you can just copy and paste or

00:10:44,800 --> 00:10:49,279
if you want you know you can also change

00:10:47,040 --> 00:10:51,680
some some

00:10:49,279 --> 00:10:52,880
resources here if you already know what

00:10:51,680 --> 00:10:58,079
you're doing here

00:10:52,880 --> 00:10:58,079
this part okay so let's try this

00:10:58,839 --> 00:11:01,839
uh

00:11:04,959 --> 00:11:09,519
so here's the provider i'm talking about

00:11:07,839 --> 00:11:12,640
uh just an example for

00:11:09,519 --> 00:11:16,320
zero uh you need this

00:11:12,640 --> 00:11:19,600
in order to to bring the necessary tools

00:11:16,320 --> 00:11:20,000
for you to write this and and uh be able

00:11:19,600 --> 00:11:22,000
to

00:11:20,000 --> 00:11:24,000
tell a terraform that these are the

00:11:22,000 --> 00:11:27,279
resources you need and terraform will

00:11:24,000 --> 00:11:30,959
use it to send requests to uh the apis

00:11:27,279 --> 00:11:34,079
of zero here's an example so

00:11:30,959 --> 00:11:37,839
resource this is the uh keyword here

00:11:34,079 --> 00:11:39,040
in terraform and this is the resource

00:11:37,839 --> 00:11:42,160
here

00:11:39,040 --> 00:11:46,320
the second uh

00:11:42,160 --> 00:11:48,959
part here of this block of code

00:11:46,320 --> 00:11:51,279
is the resource and then the third part

00:11:48,959 --> 00:11:54,320
here

00:11:51,279 --> 00:11:56,160
is the the i would say id or name or tag

00:11:54,320 --> 00:11:59,040
so you can reference to

00:11:56,160 --> 00:11:59,680
uh to this if you have another block

00:11:59,040 --> 00:12:01,920
here that

00:11:59,680 --> 00:12:03,200
needs the the value of this let's say

00:12:01,920 --> 00:12:06,399
name it

00:12:03,200 --> 00:12:09,440
also the enable or default from address

00:12:06,399 --> 00:12:12,560
right and

00:12:09,440 --> 00:12:15,600
what else name

00:12:12,560 --> 00:12:19,200
enable so by the way if you're also

00:12:15,600 --> 00:12:22,079
gonna gonna try this there's a

00:12:19,200 --> 00:12:22,800
extension here that you can use because

00:12:22,079 --> 00:12:25,839
you might

00:12:22,800 --> 00:12:28,720
ask me how would i know if uh

00:12:25,839 --> 00:12:29,279
what kind of of fields here or property

00:12:28,720 --> 00:12:33,120
should i

00:12:29,279 --> 00:12:35,040
should i type right so

00:12:33,120 --> 00:12:39,519
aside from looking at the docs in the

00:12:35,040 --> 00:12:42,639
website uh you can

00:12:39,519 --> 00:12:45,839
definitely yeah

00:12:42,639 --> 00:12:49,120
install this therefore

00:12:45,839 --> 00:12:53,760
yeah actually this one this is uh

00:12:49,120 --> 00:12:57,360
the official terraform extension

00:12:53,760 --> 00:12:59,120
so install that and you'll get this

00:12:57,360 --> 00:13:02,639
intellisense here which is going to help

00:12:59,120 --> 00:13:02,639
you sample this one id

00:13:05,040 --> 00:13:12,480
and uh you if you're also using

00:13:08,720 --> 00:13:17,040
a different let's say id uh

00:13:12,480 --> 00:13:20,160
say intellij or ids from

00:13:17,040 --> 00:13:22,160
from a jet brains they also have

00:13:20,160 --> 00:13:23,760
you know they also provide the plug-in

00:13:22,160 --> 00:13:27,519
where you can

00:13:23,760 --> 00:13:29,600
enter and then control space to see um

00:13:27,519 --> 00:13:31,120
the available fields you know for this

00:13:29,600 --> 00:13:35,440
let's say particular

00:13:31,120 --> 00:13:37,040
a resource so how to write a block of

00:13:35,440 --> 00:13:39,680
code here in terraform

00:13:37,040 --> 00:13:40,240
a resource for a resource uh have this

00:13:39,680 --> 00:13:43,760
um

00:13:40,240 --> 00:13:47,920
field a property and then

00:13:43,760 --> 00:13:51,760
an equal sign not colon it's not like a

00:13:47,920 --> 00:13:54,880
uh a json object

00:13:51,760 --> 00:13:56,000
and then if it's string you would need

00:13:54,880 --> 00:13:58,240
to use

00:13:56,000 --> 00:13:58,240
this

00:13:59,199 --> 00:14:05,600
quotation and this type here enabled

00:14:03,199 --> 00:14:06,320
is a boolean now you have this true or

00:14:05,600 --> 00:14:09,519
false

00:14:06,320 --> 00:14:12,560
right default from address

00:14:09,519 --> 00:14:15,920
string quotation

00:14:12,560 --> 00:14:16,320
and there's another block of code here

00:14:15,920 --> 00:14:19,120
just

00:14:16,320 --> 00:14:19,120
like an object

00:14:22,560 --> 00:14:25,519
so let's move here

00:14:26,959 --> 00:14:30,480
another one resource and then the the

00:14:29,120 --> 00:14:34,720
type of resource

00:14:30,480 --> 00:14:38,000
not zero template body

00:14:34,720 --> 00:14:40,399
and this body here

00:14:38,000 --> 00:14:41,760
as you can see there's an html body in

00:14:40,399 --> 00:14:43,920
h1 welcome

00:14:41,760 --> 00:14:45,199
this is um who will be used in the

00:14:43,920 --> 00:14:48,079
template of

00:14:45,199 --> 00:14:48,959
of email so basically we're creating a

00:14:48,079 --> 00:14:52,480
template email

00:14:48,959 --> 00:14:56,560
here that's uh

00:14:52,480 --> 00:14:59,839
gonna be used for uh let's say

00:14:56,560 --> 00:14:59,839
email confirmation or something

00:15:02,560 --> 00:15:09,600
yeah and if you

00:15:05,760 --> 00:15:09,600
need to insert a function

00:15:10,160 --> 00:15:14,880
you can also do a script here for

00:15:12,240 --> 00:15:18,320
example this one

00:15:14,880 --> 00:15:20,160
and insert here a function inside this

00:15:18,320 --> 00:15:23,199
eof

00:15:20,160 --> 00:15:23,199
and here's the syntax

00:15:24,880 --> 00:15:29,199
so let's try this

00:15:30,800 --> 00:15:39,759
open here just terraform we need

00:15:34,800 --> 00:15:42,800
error form uh first of all let's open up

00:15:39,759 --> 00:15:42,800
here the dashboard

00:15:43,360 --> 00:15:46,320
apis

00:15:47,839 --> 00:15:55,839
this one template provider

00:15:56,000 --> 00:16:01,120
so we know if this is gonna work

00:16:03,040 --> 00:16:10,399
welcome email

00:16:08,720 --> 00:16:11,920
so this is the message the original

00:16:10,399 --> 00:16:16,240
message

00:16:11,920 --> 00:16:16,240
the plan is to override this

00:16:18,399 --> 00:16:23,839
okay so

00:16:28,079 --> 00:16:31,199
so terraform init

00:16:32,480 --> 00:16:37,839
make sure you're in the folder zero

00:16:43,199 --> 00:16:50,160
the following provide is nothing many

00:16:44,800 --> 00:16:53,839
motion trains

00:16:50,160 --> 00:16:53,839
and then the plant terraform pan

00:17:01,360 --> 00:17:05,839
and here it is

00:17:06,880 --> 00:17:10,799
so if you're familiar with git version

00:17:09,760 --> 00:17:14,319
control

00:17:10,799 --> 00:17:17,520
uh you'll know that green cross

00:17:14,319 --> 00:17:20,400
means it's gonna it's going to be uh

00:17:17,520 --> 00:17:23,919
created for you

00:17:20,400 --> 00:17:25,679
here um it's going to create what's your

00:17:23,919 --> 00:17:29,280
email

00:17:25,679 --> 00:17:32,880
with this credentials and this body from

00:17:29,280 --> 00:17:36,480
id result url subject syntax

00:17:32,880 --> 00:17:39,679
so that's the plan and then

00:17:36,480 --> 00:17:43,120
next uh step is terraform

00:17:39,679 --> 00:17:45,280
apply so we're not gonna do the

00:17:43,120 --> 00:17:48,240
we're not gonna write the the flag

00:17:45,280 --> 00:17:48,240
autocomplete

00:17:50,640 --> 00:17:54,480
so here's the prompt that i mentioned

00:17:53,440 --> 00:17:57,679
earlier

00:17:54,480 --> 00:17:58,400
so terraform will perform the actions

00:17:57,679 --> 00:18:02,000
described

00:17:58,400 --> 00:18:04,320
above only yes will be accepted

00:18:02,000 --> 00:18:04,320
yes

00:18:07,919 --> 00:18:14,320
so yeah so here play complete

00:18:11,280 --> 00:18:18,799
resources three added zero change

00:18:14,320 --> 00:18:21,600
zero destroyed and go back here

00:18:18,799 --> 00:18:21,600
place here

00:18:25,440 --> 00:18:30,559
refresh email templates

00:18:37,280 --> 00:18:47,600
or maybe it's somewhere here

00:18:43,520 --> 00:18:52,880
welcome email yeah here it is

00:18:47,600 --> 00:18:52,880
so welcome terraform and zero

00:18:54,840 --> 00:18:58,640
cool

00:18:56,160 --> 00:18:58,640
and

00:18:59,440 --> 00:19:08,720
just to verify

00:19:02,480 --> 00:19:08,720
here it is welcome to terraform and odd0

00:19:08,840 --> 00:19:14,400
neat so

00:19:11,200 --> 00:19:15,760
you can try this later i just need to

00:19:14,400 --> 00:19:19,520
create

00:19:15,760 --> 00:19:23,760
an account in xero it's free

00:19:19,520 --> 00:19:27,280
you don't have to to put in any any

00:19:23,760 --> 00:19:30,880
credit card details and yeah and

00:19:27,280 --> 00:19:33,600
here you need to uh um

00:19:30,880 --> 00:19:34,480
to set up your apis and applications

00:19:33,600 --> 00:19:39,840
actually it's here

00:19:34,480 --> 00:19:39,840
in my readme file and

00:19:41,840 --> 00:19:44,320
see this

00:19:48,320 --> 00:19:53,840
let's move it here

00:19:56,000 --> 00:20:02,480
oh save no no no don't save uh yes

00:19:59,280 --> 00:20:05,760
okay it's okay and

00:20:02,480 --> 00:20:08,799
here's the step you know how to do this

00:20:05,760 --> 00:20:11,039
you can use this later in the

00:20:08,799 --> 00:20:13,120
hands-on part where you can do it

00:20:11,039 --> 00:20:16,000
yourself

00:20:13,120 --> 00:20:16,720
and the link to this is on my github

00:20:16,000 --> 00:20:21,840
actually

00:20:16,720 --> 00:20:21,840
so let's go to my github

00:20:27,600 --> 00:20:40,559
and the reform demo here it is

00:20:35,120 --> 00:20:42,640
so yeah and the readme file is here

00:20:40,559 --> 00:20:44,240
so you're you're guided here just just

00:20:42,640 --> 00:20:48,159
follow the instruction

00:20:44,240 --> 00:20:48,640
uh also for the aws for the azure and

00:20:48,159 --> 00:20:52,480
for

00:20:48,640 --> 00:20:56,159
gcp okay so much for this odd0

00:20:52,480 --> 00:20:59,200
uh let's move to the next cloud provider

00:20:56,159 --> 00:20:59,200
let's try

00:21:00,840 --> 00:21:05,679
um

00:21:02,400 --> 00:21:09,919
azure what about azure

00:21:05,679 --> 00:21:14,400
but before that and before we forget

00:21:09,919 --> 00:21:17,440
this we will try to delete this

00:21:14,400 --> 00:21:21,520
so how to delete the resource

00:21:17,440 --> 00:21:21,520
terror form destroy

00:21:21,600 --> 00:21:24,559
and then the prompt

00:21:28,480 --> 00:21:32,799
as you can see here um

00:21:33,919 --> 00:21:37,200
negative red or minus red meaning it

00:21:36,480 --> 00:21:44,000
will be

00:21:37,200 --> 00:21:46,640
destroyed or deleted right

00:21:44,000 --> 00:21:49,200
just enter yes and then that's it so

00:21:46,640 --> 00:21:51,200
there's also another way of deleting

00:21:49,200 --> 00:21:52,320
a resource especially if you don't want

00:21:51,200 --> 00:21:55,919
to delete

00:21:52,320 --> 00:22:00,000
all the resources of this uh

00:21:55,919 --> 00:22:04,799
file so for now let's let's cancel this

00:22:00,000 --> 00:22:07,760
or just say no no cancel

00:22:04,799 --> 00:22:07,760
so what if

00:22:09,200 --> 00:22:13,840
i delete this here

00:22:14,799 --> 00:22:21,919
or this part and this part

00:22:18,240 --> 00:22:25,600
here what if you do that

00:22:21,919 --> 00:22:28,640
then ctrl s save

00:22:25,600 --> 00:22:31,840
let's see over here terraform plan

00:22:28,640 --> 00:22:33,679
just use plan always use plan so you can

00:22:31,840 --> 00:22:36,720
see what's going to happen

00:22:33,679 --> 00:22:39,760
before you know although there's a safe

00:22:36,720 --> 00:22:44,080
fallback where the prompt um

00:22:39,760 --> 00:22:44,080
ask you yes or no

00:22:49,520 --> 00:22:56,880
so yeah it's also a way of

00:22:54,799 --> 00:22:58,880
how to delete a resource as you can see

00:22:56,880 --> 00:23:02,240
here plan is

00:22:58,880 --> 00:23:05,520
nothing to add nothing to change but

00:23:02,240 --> 00:23:08,559
there will be two resources

00:23:05,520 --> 00:23:11,200
uh it will be deleted or destroyed

00:23:08,559 --> 00:23:11,200
and here it is

00:23:17,760 --> 00:23:25,280
so plan plan a terraform plan before uh

00:23:22,559 --> 00:23:26,400
a terraform apply and then terraform

00:23:25,280 --> 00:23:30,400
plan again before

00:23:26,400 --> 00:23:32,799
terraform uh destroy so here's the plan

00:23:30,400 --> 00:23:34,960
uh we run the plan so nothing's gonna

00:23:32,799 --> 00:23:37,520
happen here

00:23:34,960 --> 00:23:39,280
i mean in the cloud in your account uh

00:23:37,520 --> 00:23:42,400
nothing's changed yet

00:23:39,280 --> 00:23:45,919
until you um terraform

00:23:42,400 --> 00:23:49,600
up uh yeah uh destroy and then

00:23:45,919 --> 00:23:52,080
yes or

00:23:49,600 --> 00:23:53,440
apply sorry so that's another way of

00:23:52,080 --> 00:23:55,760
deleting a resource

00:23:53,440 --> 00:23:57,679
specific resource when you apply this

00:23:55,760 --> 00:24:02,000
will be applied

00:23:57,679 --> 00:24:06,080
distill it here or destroy anyways

00:24:02,000 --> 00:24:08,480
uh let's bring it back to original

00:24:06,080 --> 00:24:08,480
here

00:24:10,240 --> 00:24:19,840
plan again and then we will destroy this

00:24:14,480 --> 00:24:19,840
after this

00:24:22,240 --> 00:24:33,840
terraform destroy

00:24:34,240 --> 00:24:36,559
yes

00:24:39,279 --> 00:24:44,080
destroy complete resources three

00:24:41,600 --> 00:24:46,000
destroyed

00:24:44,080 --> 00:24:47,919
so as you can see it's just like any

00:24:46,000 --> 00:24:51,600
other programming language

00:24:47,919 --> 00:24:54,240
or application um you code

00:24:51,600 --> 00:24:56,240
you know you code your resources and

00:24:54,240 --> 00:24:58,400
which one to provision

00:24:56,240 --> 00:24:59,600
um and what's good about this you can

00:24:58,400 --> 00:25:02,640
see here

00:24:59,600 --> 00:25:04,960
there's a version control you know you

00:25:02,640 --> 00:25:07,760
can roll back to the previous

00:25:04,960 --> 00:25:09,760
code and you can you know you have a

00:25:07,760 --> 00:25:12,960
history of what's happening

00:25:09,760 --> 00:25:14,640
and yeah you can apply the the best

00:25:12,960 --> 00:25:17,279
practices in in

00:25:14,640 --> 00:25:18,000
in software development or in in in

00:25:17,279 --> 00:25:21,919
coding

00:25:18,000 --> 00:25:26,080
here we uh along with your colleagues or

00:25:21,919 --> 00:25:30,720
developer teammates okay so

00:25:26,080 --> 00:25:30,720
we already destroyed this let's move to

00:25:31,360 --> 00:25:33,919
azure

00:25:35,279 --> 00:25:42,080
okay so what are these

00:25:38,799 --> 00:25:45,279
um outputs providers variables versions

00:25:42,080 --> 00:25:48,159
this well actually they don't

00:25:45,279 --> 00:25:49,440
mean anything i mean yeah this these are

00:25:48,159 --> 00:25:53,120
just the name a name

00:25:49,440 --> 00:25:56,799
outputs providers uh all of these

00:25:53,120 --> 00:26:00,000
files will be compiled and translated

00:25:56,799 --> 00:26:03,600
and used by terraform so

00:26:00,000 --> 00:26:06,000
uh you don't you know you're just

00:26:03,600 --> 00:26:07,600
naming this output you can name it

00:26:06,000 --> 00:26:11,679
whatever you want

00:26:07,600 --> 00:26:15,440
uh you can name it

00:26:11,679 --> 00:26:18,559
i don't know like uh all things

00:26:15,440 --> 00:26:19,679
yeah all things what's important is this

00:26:18,559 --> 00:26:23,279
part here

00:26:19,679 --> 00:26:25,440
i mean the the the code blocks that

00:26:23,279 --> 00:26:26,480
lives inside of these all things you

00:26:25,440 --> 00:26:28,240
know why

00:26:26,480 --> 00:26:30,080
this is the one that's going to be

00:26:28,240 --> 00:26:34,320
translated and used by

00:26:30,080 --> 00:26:37,679
the terraform as a

00:26:34,320 --> 00:26:38,080
coding um not coding uh so best practice

00:26:37,679 --> 00:26:41,600
in in

00:26:38,080 --> 00:26:45,039
terraform or naming convention or file

00:26:41,600 --> 00:26:48,080
a file structure convention we use this

00:26:45,039 --> 00:26:48,080
let's say outputs

00:26:49,679 --> 00:26:55,120
and then put all the output here so what

00:26:52,880 --> 00:26:58,640
is this output

00:26:55,120 --> 00:27:01,679
output is uh

00:26:58,640 --> 00:27:06,000
it's like a helper for

00:27:01,679 --> 00:27:09,440
for you for for anyone's using terraform

00:27:06,000 --> 00:27:12,480
in a way that it will give you

00:27:09,440 --> 00:27:14,960
some details here in the cli uh

00:27:12,480 --> 00:27:17,200
once you created something example this

00:27:14,960 --> 00:27:19,919
one

00:27:17,200 --> 00:27:21,919
the name of app service is a description

00:27:19,919 --> 00:27:24,240
of your output

00:27:21,919 --> 00:27:25,279
app service you will see this app

00:27:24,240 --> 00:27:28,320
service

00:27:25,279 --> 00:27:29,360
after you created something something

00:27:28,320 --> 00:27:33,200
like that

00:27:29,360 --> 00:27:34,320
and then not sure if it's colon or equal

00:27:33,200 --> 00:27:36,559
sign

00:27:34,320 --> 00:27:38,080
and then the value here which is this

00:27:36,559 --> 00:27:42,159
one

00:27:38,080 --> 00:27:46,000
so yeah so this is useful

00:27:42,159 --> 00:27:48,000
if uh you need to use to see something

00:27:46,000 --> 00:27:51,520
like a url

00:27:48,000 --> 00:27:53,200
and be able to use the url

00:27:51,520 --> 00:27:55,360
and go to your browser and then check if

00:27:53,200 --> 00:27:58,559
it's already running or not

00:27:55,360 --> 00:28:01,760
what else uh connection string

00:27:58,559 --> 00:28:03,760
or sql server name if you want to see

00:28:01,760 --> 00:28:06,960
the name after it's created

00:28:03,760 --> 00:28:10,880
this is how you you know see it

00:28:06,960 --> 00:28:13,679
inside your terminal through the output

00:28:10,880 --> 00:28:14,880
so it's just you know a way for you to

00:28:13,679 --> 00:28:18,720
see

00:28:14,880 --> 00:28:21,360
some stuff here in your resources

00:28:18,720 --> 00:28:22,399
it's just a tool uh it doesn't affect

00:28:21,360 --> 00:28:26,399
actually your

00:28:22,399 --> 00:28:30,080
resources the way you provision things

00:28:26,399 --> 00:28:34,000
in uh in your cloud so

00:28:30,080 --> 00:28:34,000
uh what about these providers

00:28:34,240 --> 00:28:39,200
so providers again these are your cloud

00:28:36,720 --> 00:28:42,840
providers

00:28:39,200 --> 00:28:46,240
and each provider has its own

00:28:42,840 --> 00:28:48,480
uh a way or

00:28:46,240 --> 00:28:50,000
or structure and how you write it for

00:28:48,480 --> 00:28:52,559
example this one in azure

00:28:50,000 --> 00:28:53,360
you're required to put this features

00:28:52,559 --> 00:28:55,840
even if it's

00:28:53,360 --> 00:28:55,840
empty

00:28:56,640 --> 00:29:03,279
and then here is the other credentials

00:29:00,080 --> 00:29:05,840
for logging into terraform now

00:29:03,279 --> 00:29:06,559
uh of course you don't want to show it

00:29:05,840 --> 00:29:08,240
here right

00:29:06,559 --> 00:29:10,840
i don't want to show it also here my

00:29:08,240 --> 00:29:14,000
client id so

00:29:10,840 --> 00:29:17,679
uh earlier uh before before uh

00:29:14,000 --> 00:29:18,640
we started i already run here the

00:29:17,679 --> 00:29:22,080
command

00:29:18,640 --> 00:29:25,760
df bar something like that and then

00:29:22,080 --> 00:29:29,840
subscription id and then put it

00:29:25,760 --> 00:29:30,399
the keys or subscription id client id

00:29:29,840 --> 00:29:33,279
and secret

00:29:30,399 --> 00:29:35,200
tenant id here so that's also what

00:29:33,279 --> 00:29:38,080
you're going to do

00:29:35,200 --> 00:29:38,720
your hands on later if you want to try

00:29:38,080 --> 00:29:43,039
it

00:29:38,720 --> 00:29:46,640
and you'll find out how to do that

00:29:43,039 --> 00:29:49,360
uh again read me file

00:29:46,640 --> 00:29:50,960
here it's already completed um yeah you

00:29:49,360 --> 00:29:54,000
can log in

00:29:50,960 --> 00:29:57,919
and then this has just recently been

00:29:54,000 --> 00:30:00,240
added in the terraform because there's

00:29:57,919 --> 00:30:01,200
last month uh i think last month sorry

00:30:00,240 --> 00:30:04,000
it's last month or

00:30:01,200 --> 00:30:04,960
the other uh two months ago but

00:30:04,000 --> 00:30:09,840
terraform released

00:30:04,960 --> 00:30:09,840
the version 13.

00:30:16,940 --> 00:30:22,159
[Music]

00:30:19,120 --> 00:30:25,440
okay yeah sure and yeah

00:30:22,159 --> 00:30:26,080
so here it is anyway let's move to the

00:30:25,440 --> 00:30:29,600
next

00:30:26,080 --> 00:30:30,960
variables what's this variables here

00:30:29,600 --> 00:30:34,000
what is this file

00:30:30,960 --> 00:30:35,520
uh variable is used to uh

00:30:34,000 --> 00:30:37,120
it's like a parameter it's not really

00:30:35,520 --> 00:30:39,200
variable it's this is

00:30:37,120 --> 00:30:40,960
it's this the naming here is confusion

00:30:39,200 --> 00:30:43,039
actually um

00:30:40,960 --> 00:30:44,480
variables parameters for you to be able

00:30:43,039 --> 00:30:47,200
to pass something

00:30:44,480 --> 00:30:48,240
okay like for example location here so

00:30:47,200 --> 00:30:51,360
your location

00:30:48,240 --> 00:30:52,799
um will the for example west europe app

00:30:51,360 --> 00:30:57,039
service name

00:30:52,799 --> 00:30:57,039
my app service oops

00:30:58,480 --> 00:31:05,840
yeah admin login in

00:31:02,159 --> 00:31:08,880
admin pass password so

00:31:05,840 --> 00:31:09,919
yeah but you don't want to do this you

00:31:08,880 --> 00:31:13,039
know here in your

00:31:09,919 --> 00:31:16,000
uh you should use a uh

00:31:13,039 --> 00:31:17,679
a secret you know in in in terraform so

00:31:16,000 --> 00:31:21,279
you can do that depending on

00:31:17,679 --> 00:31:24,640
on your cloud provider

00:31:21,279 --> 00:31:27,279
yeah so we have only uh

00:31:24,640 --> 00:31:27,679
five minutes ten minutes let's switch

00:31:27,279 --> 00:31:33,840
over

00:31:27,679 --> 00:31:33,840
to the slides

00:31:36,320 --> 00:31:41,919
so here's a terraform cloud

00:31:39,360 --> 00:31:42,720
uh terraform cloud is an application

00:31:41,919 --> 00:31:44,480
that helps

00:31:42,720 --> 00:31:47,120
teams use terraform together this is

00:31:44,480 --> 00:31:51,120
their service

00:31:47,120 --> 00:31:51,120
you can do this in your own

00:31:51,200 --> 00:31:55,679
cloud provider account or if you want

00:31:54,080 --> 00:31:57,760
you can use the terraform cloud

00:31:55,679 --> 00:32:00,000
just for me it's easier this is what we

00:31:57,760 --> 00:32:03,200
used before

00:32:00,000 --> 00:32:04,880
in the last project

00:32:03,200 --> 00:32:06,799
so yeah it has automation and

00:32:04,880 --> 00:32:08,880
collaboration features to empower

00:32:06,799 --> 00:32:12,480
individuals and small teams

00:32:08,880 --> 00:32:15,600
including vcs integration

00:32:12,480 --> 00:32:17,519
remote operation state management it

00:32:15,600 --> 00:32:19,600
also creates multiple teams ensure that

00:32:17,519 --> 00:32:21,519
team members have the right level

00:32:19,600 --> 00:32:23,120
of access to the appropriate

00:32:21,519 --> 00:32:25,679
configurations

00:32:23,120 --> 00:32:27,360
and can leverage the sentinel policy

00:32:25,679 --> 00:32:31,039
sentinel policy is

00:32:27,360 --> 00:32:34,480
is a rule

00:32:31,039 --> 00:32:39,519
for you uh for free to you know

00:32:34,480 --> 00:32:39,519
select setting rules which one you can

00:32:39,600 --> 00:32:43,120
use in your resources or apply or

00:32:41,760 --> 00:32:45,360
configure

00:32:43,120 --> 00:32:47,120
so yeah it's just a restriction so

00:32:45,360 --> 00:32:48,640
you're restricted for example to this

00:32:47,120 --> 00:32:51,039
kind of vm only

00:32:48,640 --> 00:32:52,720
um this is small you cannot you cannot

00:32:51,039 --> 00:32:55,440
upgrade to this kind of vm

00:32:52,720 --> 00:32:56,080
you cannot use this uh this higher our

00:32:55,440 --> 00:32:58,320
resource

00:32:56,080 --> 00:33:00,559
vms so it's just like you know it's

00:32:58,320 --> 00:33:03,760
policies there's a restriction

00:33:00,559 --> 00:33:06,559
uh that's good actually so

00:33:03,760 --> 00:33:07,679
what else oh uh enforcing fine grain so

00:33:06,559 --> 00:33:09,200
like i said forcing

00:33:07,679 --> 00:33:12,320
fine grain policy against everything

00:33:09,200 --> 00:33:15,039
that uh terraform cloud provisions

00:33:12,320 --> 00:33:15,440
can also uh view cost estimations so you

00:33:15,039 --> 00:33:18,240
can

00:33:15,440 --> 00:33:19,120
preview how much configurations will

00:33:18,240 --> 00:33:24,799
cost before

00:33:19,120 --> 00:33:28,720
they are deployed so few things here um

00:33:24,799 --> 00:33:31,200
some comparison so

00:33:28,720 --> 00:33:31,919
here terraform versus chef so first of

00:33:31,200 --> 00:33:34,799
all chef

00:33:31,919 --> 00:33:36,559
is a configuration management tool

00:33:34,799 --> 00:33:40,080
versus the provisioning

00:33:36,559 --> 00:33:41,760
tool that terraform is chef is concerned

00:33:40,080 --> 00:33:42,480
with the installation management of

00:33:41,760 --> 00:33:44,399
software

00:33:42,480 --> 00:33:46,480
on existing servers while terraform

00:33:44,399 --> 00:33:50,000
provisions the servers

00:33:46,480 --> 00:33:52,799
themselves in this case when using

00:33:50,000 --> 00:33:54,880
docker packer terraform is a better

00:33:52,799 --> 00:33:55,760
choice than a configuration management

00:33:54,880 --> 00:33:59,120
tool

00:33:55,760 --> 00:34:01,120
what is more chef defaults to

00:33:59,120 --> 00:34:02,399
a mutable infrastructure paradigm

00:34:01,120 --> 00:34:04,559
leading to

00:34:02,399 --> 00:34:06,159
hard to diagnose configuration bugs

00:34:04,559 --> 00:34:10,079
mutable meaning

00:34:06,159 --> 00:34:12,159
you update the the the infrastructure

00:34:10,079 --> 00:34:14,320
you know but in terraform you don't

00:34:12,159 --> 00:34:16,639
update it's just destroy and just

00:34:14,320 --> 00:34:17,520
spin up another one or create one so but

00:34:16,639 --> 00:34:20,240
terraform

00:34:17,520 --> 00:34:22,240
treats every change as a deployment of a

00:34:20,240 --> 00:34:24,320
new service configuration

00:34:22,240 --> 00:34:27,200
chef also represents a procedural style

00:34:24,320 --> 00:34:30,399
to code writing and requires running

00:34:27,200 --> 00:34:32,839
a master server for state storing

00:34:30,399 --> 00:34:35,839
as well as agent software on each

00:34:32,839 --> 00:34:38,560
configurable server

00:34:35,839 --> 00:34:40,399
so similarly to chef puppet is also a

00:34:38,560 --> 00:34:42,079
configuration management tool used to

00:34:40,399 --> 00:34:45,280
install and manage software

00:34:42,079 --> 00:34:47,119
on already existing servers it also

00:34:45,280 --> 00:34:50,079
requires a master server for

00:34:47,119 --> 00:34:50,879
storing the infrastructure state as well

00:34:50,079 --> 00:34:53,520
as the

00:34:50,879 --> 00:34:55,119
installation of an agent software for

00:34:53,520 --> 00:34:56,399
installing the latest configuration

00:34:55,119 --> 00:34:59,520
management updates

00:34:56,399 --> 00:35:03,119
uh puppets also are four years old and

00:34:59,520 --> 00:35:05,119
then chef it was released in 2005

00:35:03,119 --> 00:35:07,599
however puppet has a more declarative

00:35:05,119 --> 00:35:10,079
style just like terraform

00:35:07,599 --> 00:35:12,880
so we have another one here salt stack

00:35:10,079 --> 00:35:16,160
it's a configuration management tool

00:35:12,880 --> 00:35:19,920
and the declarative style like terraform

00:35:16,160 --> 00:35:22,480
on ansible so this is this uh

00:35:19,920 --> 00:35:25,200
popular configuration management lecture

00:35:22,480 --> 00:35:28,640
represents a procedural style of coding

00:35:25,200 --> 00:35:28,640
like the two options above

00:35:29,200 --> 00:35:34,320
uh it is a configuration management tool

00:35:32,560 --> 00:35:36,800
and follows immutable infrastructure

00:35:34,320 --> 00:35:36,800
paradigm

00:35:36,880 --> 00:35:40,640
here it is the advantage here is the

00:35:38,960 --> 00:35:42,880
fact that ansible is

00:35:40,640 --> 00:35:44,079
represented by a big community with

00:35:42,880 --> 00:35:48,000
nearly five

00:35:44,079 --> 00:35:50,480
k active contributors it's also

00:35:48,000 --> 00:35:52,320
highly desirable in the job market just

00:35:50,480 --> 00:35:53,839
like terraform ansible does not require

00:35:52,320 --> 00:35:58,400
running a master server to

00:35:53,839 --> 00:36:00,880
store the infrastructure straight

00:35:58,400 --> 00:36:02,560
so here's uh how would you use terraform

00:36:00,880 --> 00:36:03,680
to deploy all the underlying

00:36:02,560 --> 00:36:06,240
infrastructure

00:36:03,680 --> 00:36:08,240
including the network topology let's say

00:36:06,240 --> 00:36:11,359
vpcs subnets

00:36:08,240 --> 00:36:14,720
uh root or route tables data stores

00:36:11,359 --> 00:36:15,839
you you then use ansible to deploy your

00:36:14,720 --> 00:36:19,520
apps on

00:36:15,839 --> 00:36:19,520
top of those servers

00:36:19,920 --> 00:36:26,720
here's an example of how you'd map it

00:36:24,240 --> 00:36:28,400
and what else uh packer here packer

00:36:26,720 --> 00:36:29,920
automates the creation of any type of

00:36:28,400 --> 00:36:32,000
machine image

00:36:29,920 --> 00:36:34,240
it embraces modern configuration

00:36:32,000 --> 00:36:36,720
management by encouraging you to use

00:36:34,240 --> 00:36:38,480
automated scripts install and configure

00:36:36,720 --> 00:36:41,359
the software within your packet

00:36:38,480 --> 00:36:43,200
a packer made images packer is an

00:36:41,359 --> 00:36:44,640
automated build system to manage the

00:36:43,200 --> 00:36:47,119
creation of images

00:36:44,640 --> 00:36:48,079
for containers and virtual machines and

00:36:47,119 --> 00:36:50,560
then yeah

00:36:48,079 --> 00:36:52,079
and docker you know dockers system for

00:36:50,560 --> 00:36:53,280
building distributing running docker

00:36:52,079 --> 00:36:55,520
containers

00:36:53,280 --> 00:36:56,800
and containers can be run on linux and

00:36:55,520 --> 00:36:58,640
windows

00:36:56,800 --> 00:37:00,640
and here's how you use this teraform

00:36:58,640 --> 00:37:03,200
packer use packer to

00:37:00,640 --> 00:37:04,160
package your apps as virtual machine

00:37:03,200 --> 00:37:07,119
images

00:37:04,160 --> 00:37:09,680
you then use terraform to deploy servers

00:37:07,119 --> 00:37:11,760
with this virtual machine

00:37:09,680 --> 00:37:13,440
images and the rest of your

00:37:11,760 --> 00:37:14,880
infrastructure including the network

00:37:13,440 --> 00:37:17,040
topology

00:37:14,880 --> 00:37:20,320
example again vpcs raw tables data

00:37:17,040 --> 00:37:22,320
stores and load balancers

00:37:20,320 --> 00:37:25,040
here's a sample diagram of how you would

00:37:22,320 --> 00:37:25,040
uh map it

00:37:26,160 --> 00:37:30,720
uh okay what about terraform versus

00:37:28,480 --> 00:37:32,079
kubernetes both kubernetes terraform can

00:37:30,720 --> 00:37:33,440
help you with orchestration and

00:37:32,079 --> 00:37:36,880
scalability

00:37:33,440 --> 00:37:38,960
kubernetes deals with docker containers

00:37:36,880 --> 00:37:41,280
so if your application isn't yet

00:37:38,960 --> 00:37:44,320
containerized it will require some

00:37:41,280 --> 00:37:45,040
uh you know configuration or preliminary

00:37:44,320 --> 00:37:46,800
work

00:37:45,040 --> 00:37:48,720
whereas their form operates on what can

00:37:46,800 --> 00:37:50,320
be seen as hardware so it's suited for

00:37:48,720 --> 00:37:52,880
any kind of workload

00:37:50,320 --> 00:37:53,520
and here's how you know they go along

00:37:52,880 --> 00:37:58,079
together

00:37:53,520 --> 00:37:58,079
they're from packer docker kubernetes

00:37:59,119 --> 00:38:04,800
and another one here uh plumi

00:38:02,480 --> 00:38:05,839
it's it's uh it's like it's like

00:38:04,800 --> 00:38:08,400
terraform

00:38:05,839 --> 00:38:10,400
um difference is you see it's using

00:38:08,400 --> 00:38:11,599
javascript typescript go python and

00:38:10,400 --> 00:38:13,680
c-sharp rather than

00:38:11,599 --> 00:38:15,680
uh terraform here it uses its own

00:38:13,680 --> 00:38:19,280
language the hashicorp configuration

00:38:15,680 --> 00:38:21,839
language or hcl

00:38:19,280 --> 00:38:23,599
and we also have their cloud formation

00:38:21,839 --> 00:38:26,640
non-open source though

00:38:23,599 --> 00:38:29,359
uccml or json native to

00:38:26,640 --> 00:38:29,359
aws

00:38:30,400 --> 00:38:37,280
and here is uh arm

00:38:33,920 --> 00:38:40,240
from azure so

00:38:37,280 --> 00:38:42,560
none open source yaml or json native to

00:38:40,240 --> 00:38:45,599
azure

00:38:42,560 --> 00:38:48,320
that's the arm template and uh and

00:38:45,599 --> 00:38:48,960
cloud deployment manager of google cloud

00:38:48,320 --> 00:38:51,920
also

00:38:48,960 --> 00:38:54,400
you know jinja here python or json

00:38:51,920 --> 00:38:56,800
modern and designer friendly templating

00:38:54,400 --> 00:38:58,160
language or python modeled after jungles

00:38:56,800 --> 00:39:01,200
templates

00:38:58,160 --> 00:39:03,839
so summary here i see

00:39:01,200 --> 00:39:05,200
uh gives you consistency and consistent

00:39:03,839 --> 00:39:10,079
configurations

00:39:05,200 --> 00:39:12,480
improve scalability faster deployments

00:39:10,079 --> 00:39:13,760
less documentation because the scripts

00:39:12,480 --> 00:39:17,520
replaced it

00:39:13,760 --> 00:39:17,520
and better traceability

00:39:18,800 --> 00:39:24,400
and terraform super portability you know

00:39:21,680 --> 00:39:27,760
ease of full stack deployment

00:39:24,400 --> 00:39:29,680
reference here so that's all done

00:39:27,760 --> 00:39:31,359
so yeah a terraform you have one tool

00:39:29,680 --> 00:39:34,320
and one language for

00:39:31,359 --> 00:39:35,599
describing uh infrastructure for google

00:39:34,320 --> 00:39:38,560
cloud aws

00:39:35,599 --> 00:39:40,400
openstack and any other cloud and

00:39:38,560 --> 00:39:41,520
actually switching a provider is not a

00:39:40,400 --> 00:39:43,200
headache anymore

00:39:41,520 --> 00:39:44,640
you can have amazon instances running

00:39:43,200 --> 00:39:46,640
kubernetes containers with your

00:39:44,640 --> 00:39:49,920
workloads and manage the whole system

00:39:46,640 --> 00:39:52,079
from one tool and

00:39:49,920 --> 00:39:54,400
reference start from that io you can go

00:39:52,079 --> 00:39:56,560
here and

00:39:54,400 --> 00:39:58,560
yeah hashicorp also has some

00:39:56,560 --> 00:40:01,119
certification one of them is terraform

00:39:58,560 --> 00:40:01,760
associate you can add formal industry

00:40:01,119 --> 00:40:04,319
accepted

00:40:01,760 --> 00:40:05,040
credentials using you know their digital

00:40:04,319 --> 00:40:08,640
badge

00:40:05,040 --> 00:40:11,280
upon passing a certification exam

00:40:08,640 --> 00:40:13,680
a reference here zero plug is terraform

00:40:11,280 --> 00:40:16,880
to manage your aussie configuration

00:40:13,680 --> 00:40:19,920
um and also there's a book you know

00:40:16,880 --> 00:40:20,240
uh a terraform up and running i've read

00:40:19,920 --> 00:40:23,119
it

00:40:20,240 --> 00:40:24,160
i highly recommend this how to create

00:40:23,119 --> 00:40:26,480
reusable

00:40:24,160 --> 00:40:28,880
infrastructure with therefore modules

00:40:26,480 --> 00:40:29,839
and you get terraform terraform tips and

00:40:28,880 --> 00:40:33,680
tricks

00:40:29,839 --> 00:40:35,200
in loops and if statements and uh

00:40:33,680 --> 00:40:39,200
one of the most important things the

00:40:35,200 --> 00:40:42,079
pitfalls how to use terraform as a team

00:40:39,200 --> 00:40:44,720
and yeah thank you thank you very much

00:40:42,079 --> 00:40:44,720
and we'll be back

00:40:46,000 --> 00:40:56,079
and we're back

00:40:52,480 --> 00:40:59,119
uh yeah um

00:40:56,079 --> 00:41:00,720
thank you for waiting so

00:40:59,119 --> 00:41:03,359
this is gonna be the the second part of

00:41:00,720 --> 00:41:07,839
this uh terraform workshop

00:41:03,359 --> 00:41:07,839
and how do we do this um

00:41:08,480 --> 00:41:14,079
the the the second part will be

00:41:11,520 --> 00:41:15,280
the the handsome part yeah if you will

00:41:14,079 --> 00:41:17,599
uh

00:41:15,280 --> 00:41:19,680
i'd just like you to try terraform not

00:41:17,599 --> 00:41:22,800
only listening from me or

00:41:19,680 --> 00:41:25,359
reading it but actually by doing it

00:41:22,800 --> 00:41:27,680
i would suggest you to use xero if you

00:41:25,359 --> 00:41:30,960
don't have any accounts in

00:41:27,680 --> 00:41:34,800
aws or google cloud or

00:41:30,960 --> 00:41:38,319
or azure why because it's the fastest

00:41:34,800 --> 00:41:39,440
you just need to use uh a single sign-on

00:41:38,319 --> 00:41:42,319
a single sign-on like

00:41:39,440 --> 00:41:42,960
any social media accounts you can use um

00:41:42,319 --> 00:41:45,119
upon

00:41:42,960 --> 00:41:46,839
signing up or you can use your your

00:41:45,119 --> 00:41:50,160
github or your

00:41:46,839 --> 00:41:50,720
whatever and yeah after logging and

00:41:50,160 --> 00:41:54,640
signing in

00:41:50,720 --> 00:41:58,880
then you're done and i think we need to

00:41:54,640 --> 00:42:02,560
do a sample of that

00:41:58,880 --> 00:42:05,760
so let me open up

00:42:02,560 --> 00:42:09,440
an incognito here

00:42:05,760 --> 00:42:12,319
say at zero so

00:42:09,440 --> 00:42:14,160
if you can follow along with me uh this

00:42:12,319 --> 00:42:18,000
is the fastest way i could think of

00:42:14,160 --> 00:42:20,720
to be able to try a terraform

00:42:18,000 --> 00:42:20,720
so sign up

00:42:23,680 --> 00:42:31,760
and yeah if you have google account

00:42:27,040 --> 00:42:36,319
github or microsoft here

00:42:31,760 --> 00:42:40,480
you can try it and say sign up with

00:42:36,319 --> 00:42:42,720
google i have so many here

00:42:40,480 --> 00:42:45,839
i don't know what to want to use

00:42:42,720 --> 00:42:48,640
probably this one

00:42:45,839 --> 00:42:48,640
and yep

00:42:54,319 --> 00:43:02,960
so this is fresh

00:42:58,960 --> 00:43:06,720
tenant domain so next

00:43:02,960 --> 00:43:13,839
uh company name is personal

00:43:06,720 --> 00:43:13,839
great account

00:43:14,880 --> 00:43:22,160
and then you're done hopefully

00:43:18,720 --> 00:43:23,040
that's all so yeah every once in a while

00:43:22,160 --> 00:43:26,240
they improve their

00:43:23,040 --> 00:43:29,920
um signing up forms

00:43:26,240 --> 00:43:33,920
the flow so you can see here

00:43:29,920 --> 00:43:37,680
yeah so let's zoom in so you can see it

00:43:33,920 --> 00:43:41,839
and you have your application here

00:43:37,680 --> 00:43:45,599
client id and the emails

00:43:41,839 --> 00:43:49,839
uh template you can try it

00:43:45,599 --> 00:43:53,119
and see somewhere here

00:43:49,839 --> 00:43:54,319
some welcome email so this is the

00:43:53,119 --> 00:43:56,560
default

00:43:54,319 --> 00:43:56,560
right

00:43:57,839 --> 00:44:05,119
and then after uh running the

00:44:01,440 --> 00:44:07,040
terraform apply cli or command

00:44:05,119 --> 00:44:09,359
uh you just need to refresh this and

00:44:07,040 --> 00:44:11,920
then

00:44:09,359 --> 00:44:13,119
you should be able to see your your own

00:44:11,920 --> 00:44:15,200
template here

00:44:13,119 --> 00:44:18,000
so this is the default and we're just

00:44:15,200 --> 00:44:18,000
overriding it

00:44:18,240 --> 00:44:25,920
so let me open up here the q a

00:44:22,400 --> 00:44:29,520
and yeah uh please don't hesitate to

00:44:25,920 --> 00:44:33,119
ask me some questions the

00:44:29,520 --> 00:44:34,960
link to odd0 sample or

00:44:33,119 --> 00:44:36,720
or my github you can you know you don't

00:44:34,960 --> 00:44:37,440
have to try at zero if you don't want to

00:44:36,720 --> 00:44:40,960
try

00:44:37,440 --> 00:44:43,680
zero as long as uh you know you'll be

00:44:40,960 --> 00:44:43,680
able to do it

00:44:45,599 --> 00:44:51,839
yeah so

00:44:52,160 --> 00:44:55,920
the url again

00:44:59,359 --> 00:45:05,760
is terraform demo hold on and i'm almost

00:45:03,119 --> 00:45:09,119
there

00:45:05,760 --> 00:45:11,760
and i'll just replace this

00:45:09,119 --> 00:45:11,760
with this one

00:45:16,720 --> 00:45:23,200
yeah so here it is and you can uh

00:45:19,920 --> 00:45:25,359
try this uh

00:45:23,200 --> 00:45:27,280
basically you can just copy and paste

00:45:25,359 --> 00:45:30,960
the

00:45:27,280 --> 00:45:34,560
the content of every file

00:45:30,960 --> 00:45:38,079
for instance uh zero or or

00:45:34,560 --> 00:45:40,400
aws you can just copy and paste it uh

00:45:38,079 --> 00:45:41,359
however if you don't have the the cli

00:45:40,400 --> 00:45:43,920
yet

00:45:41,359 --> 00:45:47,839
i think that's uh something we have we

00:45:43,920 --> 00:45:50,880
need to do here

00:45:47,839 --> 00:45:54,800
so you need to go here terraform

00:45:50,880 --> 00:45:58,000
um that i let's say terraform

00:45:54,800 --> 00:46:00,480
cli download so you can go straight to

00:45:58,000 --> 00:46:04,079
terraform download terraform

00:46:00,480 --> 00:46:08,480
here it is so

00:46:04,079 --> 00:46:12,400
yeah um terraform downloads

00:46:08,480 --> 00:46:15,599
that html or the terraform.io

00:46:12,400 --> 00:46:18,800
downloads it will be redirected here

00:46:15,599 --> 00:46:21,839
and yeah you can choose here

00:46:18,800 --> 00:46:25,520
whatever else you're using is uh

00:46:21,839 --> 00:46:28,560
if you're using ubuntu or mac or windows

00:46:25,520 --> 00:46:32,960
you can use this to download

00:46:28,560 --> 00:46:36,480
say here see here

00:46:32,960 --> 00:46:38,960
downloaded and what else

00:46:36,480 --> 00:46:41,520
and brew also i'm not sure if it's you

00:46:38,960 --> 00:46:44,560
can find it here

00:46:41,520 --> 00:46:46,079
but there's a way to um easily install

00:46:44,560 --> 00:46:48,960
it in your mac os

00:46:46,079 --> 00:46:50,640
you know without uh going here whenever

00:46:48,960 --> 00:46:51,920
there's a new update and then

00:46:50,640 --> 00:46:54,079
you want you want to update your

00:46:51,920 --> 00:46:58,880
terraform and then download it here

00:46:54,079 --> 00:46:58,880
uh let's go here chocolate tea

00:46:59,440 --> 00:47:06,000
this is for the windows um

00:47:03,040 --> 00:47:06,000
say it our form

00:47:06,079 --> 00:47:09,760
if you don't um familiar if you're not

00:47:08,400 --> 00:47:12,000
familiar with

00:47:09,760 --> 00:47:13,680
the chocolate is like a package manager

00:47:12,000 --> 00:47:14,640
from windows or anything that you can

00:47:13,680 --> 00:47:19,760
think of

00:47:14,640 --> 00:47:19,760
uh in windows like softwares i mean uh

00:47:22,839 --> 00:47:27,200
terraform

00:47:24,319 --> 00:47:28,559
so yeah you need to install chocolatey

00:47:27,200 --> 00:47:31,599
first

00:47:28,559 --> 00:47:34,400
and then here uh after installing

00:47:31,599 --> 00:47:34,400
chocolatey

00:47:36,079 --> 00:47:42,400
uh allowed to install terraform

00:47:39,520 --> 00:47:44,160
using this chocolate cli as you can see

00:47:42,400 --> 00:47:46,240
here

00:47:44,160 --> 00:47:47,839
and if there's an update in terraform

00:47:46,240 --> 00:47:50,160
and you want to update terraform just

00:47:47,839 --> 00:47:52,240
choco upgrade terraform and then

00:47:50,160 --> 00:47:54,160
you're done you don't have to come back

00:47:52,240 --> 00:47:57,119
here in this page and then

00:47:54,160 --> 00:47:58,480
re-download the installer and then you

00:47:57,119 --> 00:48:01,760
know

00:47:58,480 --> 00:48:04,880
so i would suggest using this as

00:48:01,760 --> 00:48:06,160
a package manager and brew also has that

00:48:04,880 --> 00:48:09,200
brew

00:48:06,160 --> 00:48:09,599
uh i think it's hashicorp let's see how

00:48:09,200 --> 00:48:20,160
she

00:48:09,599 --> 00:48:22,880
corp terraform that terraform

00:48:20,160 --> 00:48:23,680
so you know on mac this is an easy way

00:48:22,880 --> 00:48:27,440
of

00:48:23,680 --> 00:48:30,800
installing also terraform

00:48:27,440 --> 00:48:33,760
just brew install hashicorp tab

00:48:30,800 --> 00:48:34,400
uh here terraform so that's the the

00:48:33,760 --> 00:48:37,599
pattern

00:48:34,400 --> 00:48:40,800
brew install hashicorp slash tab

00:48:37,599 --> 00:48:40,800
slash terraform

00:48:40,880 --> 00:48:48,800
and upgrading also simple

00:48:45,599 --> 00:48:52,079
brew upgrade hashicorp slash tab

00:48:48,800 --> 00:48:54,000
slash terraform so they change it i

00:48:52,079 --> 00:48:58,960
think last month they changed it to

00:48:54,000 --> 00:48:58,960
this naming before it's just their form

00:49:00,160 --> 00:49:07,040
and yeah so

00:49:03,680 --> 00:49:09,180
after that um after installing this

00:49:07,040 --> 00:49:12,250
now you can proceed to

00:49:09,180 --> 00:49:12,250
[Music]

00:49:12,640 --> 00:49:19,599
this one

00:49:17,119 --> 00:49:19,599
this is

00:49:21,760 --> 00:49:31,839
what zero here

00:49:33,280 --> 00:49:36,240
and questions

00:49:36,800 --> 00:49:45,839
questions questions questions

00:49:39,839 --> 00:49:45,839
let me see questions here

00:49:46,640 --> 00:49:51,359
i think it's here can you post the links

00:49:50,400 --> 00:49:59,839
here in the chat

00:49:51,359 --> 00:49:59,839
oh yeah uh sorry

00:50:02,480 --> 00:50:05,040
here it is

00:50:08,960 --> 00:50:14,640
and the link to their

00:50:12,240 --> 00:50:14,640
form

00:50:16,319 --> 00:50:21,680
yeah for the quick installation you can

00:50:19,200 --> 00:50:21,680
go here

00:50:23,520 --> 00:50:30,480
just download it or for the chocolatey

00:50:27,359 --> 00:50:33,520
here it is chocolatey

00:50:30,480 --> 00:50:41,839
and for mac users

00:50:33,520 --> 00:50:41,839
use this

00:51:01,359 --> 00:51:23,839
any questions and

00:51:05,680 --> 00:51:23,839
i hope everyone's trying out terraform

00:51:55,119 --> 00:52:01,680
so signing up is easy

00:51:58,400 --> 00:52:04,880
then once you have it um you need to get

00:52:01,680 --> 00:52:09,839
some some few uh few things

00:52:04,880 --> 00:52:09,839
from odd0 client id

00:52:16,839 --> 00:52:19,839
some

00:52:30,839 --> 00:52:33,839
so

00:52:44,839 --> 00:52:47,839
so

00:52:56,960 --> 00:53:01,839
let's see questions here

00:53:14,800 --> 00:53:19,839
please use the chat box if you have

00:53:17,359 --> 00:53:19,839
questions

00:53:26,720 --> 00:53:29,920
yeah it's just really simple to sign up

00:53:28,800 --> 00:53:33,200
here at xero

00:53:29,920 --> 00:53:34,640
uh again um i pick out zero because it's

00:53:33,200 --> 00:53:38,559
the fastest

00:53:34,640 --> 00:53:42,240
fastest to uh to create an account

00:53:38,559 --> 00:53:46,000
then on google cloud platform uh

00:53:42,240 --> 00:53:49,119
azure and aws

00:53:46,000 --> 00:53:51,200
because i think all of them required

00:53:49,119 --> 00:53:53,599
credit card and it takes time you know

00:53:51,200 --> 00:53:55,920
to you know

00:53:53,599 --> 00:53:57,280
bring out your credit card or your

00:53:55,920 --> 00:54:00,240
credit card from your pocket

00:53:57,280 --> 00:54:01,440
or from bag and then writing the i mean

00:54:00,240 --> 00:54:11,839
typing the the

00:54:01,440 --> 00:54:11,839
card number so yeah

00:54:36,839 --> 00:54:39,839
this

00:54:55,599 --> 00:55:00,000
and lastly on in not 0

00:55:02,880 --> 00:55:10,240
you need to run this in your cli

00:55:06,799 --> 00:55:12,480
i mean in your terminal again

00:55:10,240 --> 00:55:12,480
uh

00:55:15,200 --> 00:55:21,839
credentials yeah this one yeah

00:55:18,400 --> 00:55:21,839
good thing it's here on my

00:55:22,880 --> 00:55:32,079
oh with me anyways uh

00:55:27,920 --> 00:55:35,680
where's it again so yeah uh

00:55:32,079 --> 00:55:38,720
if you're using bash new terminal

00:55:35,680 --> 00:55:41,520
uh you can use this export and then zero

00:55:38,720 --> 00:55:42,559
underscore domain and then uh your

00:55:41,520 --> 00:55:45,839
domain

00:55:42,559 --> 00:55:48,079
and also your odd0 client id and then

00:55:45,839 --> 00:55:51,440
client secrets

00:55:48,079 --> 00:55:54,319
if you don't run this before

00:55:51,440 --> 00:55:55,280
terraform or running terraform in it it

00:55:54,319 --> 00:55:56,160
will complain that you're not

00:55:55,280 --> 00:55:59,359
authenticated

00:55:56,160 --> 00:56:01,680
and not be able to and yeah

00:55:59,359 --> 00:56:03,359
not authenticate at the same time your

00:56:01,680 --> 00:56:06,400
terraform doesn't know

00:56:03,359 --> 00:56:07,760
where to send the request or which

00:56:06,400 --> 00:56:10,640
account

00:56:07,760 --> 00:56:17,839
should be using in order to provision a

00:56:10,640 --> 00:56:17,839
resource right

00:56:20,799 --> 00:56:26,960
and what else if you're using

00:56:23,839 --> 00:56:31,280
windows you can try powershell

00:56:26,960 --> 00:56:34,640
uh the counterpart of

00:56:31,280 --> 00:56:38,160
export is i think it's env

00:56:34,640 --> 00:56:44,640
colon so

00:56:38,160 --> 00:56:47,839
this is how you would write it i think

00:56:44,640 --> 00:56:47,839
let's open this up

00:56:49,760 --> 00:56:59,440
so i can upload this

00:56:54,079 --> 00:57:03,440
so ssh

00:56:59,440 --> 00:57:08,319
uh let me say bashar i think it's cnv

00:57:03,440 --> 00:57:08,319
and then here

00:57:08,720 --> 00:57:16,319
something like that

00:57:12,400 --> 00:57:19,359
export doesn't work on windows

00:57:16,319 --> 00:57:22,240
right except if you have a bash

00:57:19,359 --> 00:57:23,520
terminal in windows if you installed a

00:57:22,240 --> 00:57:27,839
git

00:57:23,520 --> 00:57:27,839
you can use it

00:57:32,319 --> 00:57:38,319
and client id

00:57:35,920 --> 00:57:38,319
and v

00:57:38,960 --> 00:57:44,240
so zero client

00:57:45,000 --> 00:57:48,000
secret

00:57:48,799 --> 00:57:55,839
then same thing

00:58:00,720 --> 00:58:04,240
so this is for powershell

00:58:06,960 --> 00:58:14,720
in normal cmd or command line on windows

00:58:10,559 --> 00:58:14,720
um i don't think this is possible

00:58:19,599 --> 00:58:22,720
the windows native command line doesn't

00:58:21,920 --> 00:58:26,559
do much

00:58:22,720 --> 00:58:36,720
or doesn't have any functionalities

00:58:26,559 --> 00:58:39,200
let's see so

00:58:36,720 --> 00:58:39,200
save

00:58:45,680 --> 00:58:51,200
yeah so here it is this is a windows

00:58:49,040 --> 00:58:54,640
version

00:58:51,200 --> 00:58:56,079
so i would recommend powershell instead

00:58:54,640 --> 00:59:01,200
of using the

00:58:56,079 --> 00:59:01,200
the default command line on windows

00:59:01,280 --> 00:59:07,280
and if you're also using linux export

00:59:04,559 --> 00:59:07,280
works oops

00:59:10,640 --> 00:59:14,000
and after running this now you're

00:59:13,040 --> 00:59:16,160
allowed to

00:59:14,000 --> 00:59:19,440
do this command run this command

00:59:16,160 --> 00:59:22,880
terraform init terraform plan

00:59:19,440 --> 00:59:27,200
just a few commands to remember

00:59:22,880 --> 00:59:30,400
init plan apply and destroy r4

00:59:27,200 --> 00:59:34,640
and the other one also

00:59:30,400 --> 00:59:38,880
validate which validates your

00:59:34,640 --> 00:59:38,880
syntax and the syntax of your

00:59:39,040 --> 00:59:47,839
terraform file

00:59:58,839 --> 01:00:01,839
questions

01:00:06,640 --> 01:00:10,079
or anything that you um

01:00:10,880 --> 01:00:15,839
like to know or something that you're

01:00:16,000 --> 01:00:21,920
still confused and confused which one to

01:00:19,599 --> 01:00:21,920
run

01:00:23,359 --> 01:00:29,839
or anything that's not clear

01:00:26,480 --> 01:00:29,839
please let me know

01:00:41,359 --> 01:00:48,480
so let's go here you can also try this

01:00:44,559 --> 01:00:52,400
uh google telephone cloud say terraform

01:00:48,480 --> 01:00:56,000
cloud so this is a hashicorp's

01:00:52,400 --> 01:01:00,559
service there there's a free

01:00:56,000 --> 01:01:00,559
tier here and also paid

01:01:00,720 --> 01:01:06,720
this i'm familiar with their pricing

01:01:09,440 --> 01:01:15,920
so yeah free here um

01:01:12,880 --> 01:01:19,119
zero dollars here up to five users

01:01:15,920 --> 01:01:20,799
is something new uh collaborate on

01:01:19,119 --> 01:01:25,040
infrastructures code for terraform

01:01:20,799 --> 01:01:26,480
configurations so these are the pricing

01:01:25,040 --> 01:01:28,960
i think this is enough especially if

01:01:26,480 --> 01:01:34,319
you're just a few assists admin

01:01:28,960 --> 01:01:37,119
working on on infrastructure

01:01:34,319 --> 01:01:37,520
before there was just me and my senior

01:01:37,119 --> 01:01:41,280
here

01:01:37,520 --> 01:01:45,680
uh kubernetes and

01:01:41,280 --> 01:01:45,680
yeah just two of us working on a big

01:01:50,839 --> 01:01:57,119
infrastructure

01:01:52,160 --> 01:01:57,119
so how to use this there's uh just

01:01:57,839 --> 01:02:10,559
log in let's find out first log in here

01:02:07,760 --> 01:02:10,559
this is what

01:02:13,920 --> 01:02:21,839
i know star form

01:02:22,400 --> 01:02:25,599
i couldn't find the lag in here because

01:02:24,480 --> 01:02:35,839
normally

01:02:25,599 --> 01:02:35,839
uh i think here it is

01:02:40,559 --> 01:02:48,319
now i already have an account sign in

01:02:44,160 --> 01:02:48,319
so here's this is terraform cloud

01:02:49,440 --> 01:02:52,559
you can really use it you just need to

01:02:51,440 --> 01:02:55,680
create an account

01:02:52,559 --> 01:03:00,559
using your say your github

01:02:55,680 --> 01:03:04,000
and yeah um here

01:03:00,559 --> 01:03:06,720
here you can see for workspace name

01:03:04,000 --> 01:03:07,280
so workspace it's it's like a name so

01:03:06,720 --> 01:03:10,799
it's like

01:03:07,280 --> 01:03:12,880
uh for for you to to

01:03:10,799 --> 01:03:14,480
to separate a project you know to be

01:03:12,880 --> 01:03:17,839
able to separate

01:03:14,480 --> 01:03:19,599
a project from another and again

01:03:17,839 --> 01:03:20,880
for example here we have terraform

01:03:19,599 --> 01:03:22,880
sandbox and

01:03:20,880 --> 01:03:24,160
here i named it terraform works uh

01:03:22,880 --> 01:03:26,799
workplace

01:03:24,160 --> 01:03:28,480
and here when i'm trying out uh a

01:03:26,799 --> 01:03:31,839
sentinel policy demo

01:03:28,480 --> 01:03:31,839
five months ago you see here

01:03:32,000 --> 01:03:37,039
and how to create one also new workspace

01:03:34,799 --> 01:03:37,039
here

01:03:39,280 --> 01:03:45,920
and if you are if you have git github

01:03:42,480 --> 01:03:48,960
um you can use your existing

01:03:45,920 --> 01:03:51,280
uh repository or your

01:03:48,960 --> 01:03:52,799
you know your terraform that you publish

01:03:51,280 --> 01:03:56,559
to github

01:03:52,799 --> 01:04:00,400
or cli here let's try this

01:03:56,559 --> 01:04:00,400
version and here github

01:04:03,839 --> 01:04:08,880
then you can say there are form

01:04:11,200 --> 01:04:14,160
terraform here

01:04:17,520 --> 01:04:22,640
sure with this one yeah then create

01:04:24,839 --> 01:04:27,839
workspace

01:04:30,319 --> 01:04:33,440
and what it does is every time there's a

01:04:31,920 --> 01:04:37,039
changes in your

01:04:33,440 --> 01:04:41,200
terraform code and you push it to github

01:04:37,039 --> 01:04:44,160
this will automatically run and deploy

01:04:41,200 --> 01:04:44,480
uh the existing i know not not deployed

01:04:44,160 --> 01:04:48,480
yet

01:04:44,480 --> 01:04:51,520
because there's uh i call this

01:04:48,480 --> 01:04:51,520
let me show this to you

01:04:51,760 --> 01:04:59,200
like this one it's gonna ask you

01:04:54,880 --> 01:05:00,880
to uh to apply or not

01:04:59,200 --> 01:05:03,039
so there's still a manual here it's

01:05:00,880 --> 01:05:07,119
happening

01:05:03,039 --> 01:05:08,000
as you can see here uh there's a button

01:05:07,119 --> 01:05:10,960
here that's gonna

01:05:08,000 --> 01:05:12,799
just asking you uh everything looks good

01:05:10,960 --> 01:05:16,559
everything is um

01:05:12,799 --> 01:05:17,920
uh fine uh here's our here are the lists

01:05:16,559 --> 01:05:21,359
of resources gonna be

01:05:17,920 --> 01:05:23,680
going to be created and and there's a

01:05:21,359 --> 01:05:26,079
you know button here like apply

01:05:23,680 --> 01:05:26,960
so if you apply click the apply button

01:05:26,079 --> 01:05:30,640
and that

01:05:26,960 --> 01:05:32,960
will uh let the terraform

01:05:30,640 --> 01:05:34,319
send requests and you know provision the

01:05:32,960 --> 01:05:37,760
resources for you

01:05:34,319 --> 01:05:42,720
your own account so there's also these

01:05:37,760 --> 01:05:45,039
variables here where you can set

01:05:42,720 --> 01:05:45,039
some

01:05:48,839 --> 01:05:52,000
secrets

01:05:50,079 --> 01:05:54,160
gonna stay longer here because there's

01:05:52,000 --> 01:05:58,720
secrets there

01:05:54,160 --> 01:06:02,559
states so what are states is state is

01:05:58,720 --> 01:06:06,079
uh it's like a database of of records of

01:06:02,559 --> 01:06:10,160
you know uh what has been changed or

01:06:06,079 --> 01:06:13,920
deployed or provisioned in your uh

01:06:10,160 --> 01:06:15,119
resources so this is downloadable this

01:06:13,920 --> 01:06:17,359
is transferable

01:06:15,119 --> 01:06:19,599
and you know this is something that you

01:06:17,359 --> 01:06:21,359
don't you know yeah

01:06:19,599 --> 01:06:22,799
you don't want to delete why because

01:06:21,359 --> 01:06:26,240
you're going to lose that

01:06:22,799 --> 01:06:29,039
record so you know of previous uh

01:06:26,240 --> 01:06:30,160
uh updates that you've you know you've

01:06:29,039 --> 01:06:34,240
done in your

01:06:30,160 --> 01:06:34,240
terraform resources

01:06:42,720 --> 01:06:46,480
yeah i would also suggest to try this

01:06:44,960 --> 01:06:51,680
one

01:06:46,480 --> 01:06:54,720
let's just play around it's uh it's free

01:06:51,680 --> 01:06:57,359
and some settings here run triggers

01:06:54,720 --> 01:06:59,599
notification locking

01:06:57,359 --> 01:07:00,960
version control even if you're done you

01:06:59,599 --> 01:07:03,599
can delete it actually

01:07:00,960 --> 01:07:05,839
you don't have to because it's it's free

01:07:03,599 --> 01:07:05,839
here

01:07:07,280 --> 01:07:11,440
and connect the version control if you

01:07:09,200 --> 01:07:14,079
have other version control provider

01:07:11,440 --> 01:07:16,400
like bitbucket or gitlab configure it

01:07:14,079 --> 01:07:16,400
here

01:07:16,960 --> 01:07:19,839
ssh key

01:07:21,119 --> 01:07:24,400
to ssh something

01:07:27,280 --> 01:07:30,079
run triggers

01:07:33,280 --> 01:07:36,640
notifications also

01:07:37,039 --> 01:07:42,960
and yeah and version

01:07:40,720 --> 01:07:46,480
put this third in here so you can also

01:07:42,960 --> 01:07:46,480
configure the version here

01:07:50,799 --> 01:07:59,359
so uh any updates

01:07:54,240 --> 01:08:11,839
how's the zero provisioning

01:07:59,359 --> 01:08:11,839
going on

01:08:22,839 --> 01:08:25,839
so

01:08:36,839 --> 01:08:39,839
check

01:09:11,120 --> 01:09:15,440
and uh yeah don't forget to ask

01:09:13,920 --> 01:09:18,839
questions if you

01:09:15,440 --> 01:09:21,839
you're getting any errors and you see a

01:09:18,839 --> 01:09:21,839
lie

01:09:32,839 --> 01:09:35,839
and

01:09:46,839 --> 01:09:51,600
this and about let's say uh

01:09:52,159 --> 01:10:03,840
i can share something uh terraform

01:09:56,320 --> 01:10:09,840
examination exam

01:10:03,840 --> 01:10:09,840
so uh yeah no this is udemy

01:10:10,000 --> 01:10:12,320
uh

01:10:13,440 --> 01:10:19,920
so if you have any plans of taking

01:10:17,840 --> 01:10:22,239
a terraform examination a certification

01:10:19,920 --> 01:10:22,239
one day

01:10:23,440 --> 01:10:26,560
yeah tips

01:10:27,760 --> 01:10:31,840
any tips that i can give

01:10:32,239 --> 01:10:36,239
by by uh questioners terraform

01:10:34,880 --> 01:10:39,040
questionnaires

01:10:36,239 --> 01:10:39,600
sample questionnaire sorry there are

01:10:39,040 --> 01:10:41,120
sample

01:10:39,600 --> 01:10:43,280
questionnaires or practice

01:10:41,120 --> 01:10:46,480
questionnaires that you can

01:10:43,280 --> 01:10:49,520
you can use um yeah

01:10:46,480 --> 01:10:52,640
one that i know is from from udemy

01:10:49,520 --> 01:10:52,640
and there's also some

01:10:53,360 --> 01:11:02,480
terraform experts who

01:10:58,080 --> 01:11:02,480
who has websites with this

01:11:02,719 --> 01:11:11,120
certification or question uh samples

01:11:06,800 --> 01:11:14,239
and it'll it will help you uh

01:11:11,120 --> 01:11:17,360
you know it will help you

01:11:14,239 --> 01:11:18,159
uh know some other technicalities in in

01:11:17,360 --> 01:11:21,199
terraform and

01:11:18,159 --> 01:11:23,920
and sentinels sentinel policy

01:11:21,199 --> 01:11:25,440
and yeah you'll be surprised you know uh

01:11:23,920 --> 01:11:26,320
things that you haven't encountered yet

01:11:25,440 --> 01:11:30,480
and it's

01:11:26,320 --> 01:11:33,280
they're usually there they're 150

01:11:30,480 --> 01:11:36,400
questions 250 questions of practice

01:11:33,280 --> 01:11:39,760
uh just you know search for it in udemy

01:11:36,400 --> 01:11:44,320
um that's what i use um you know

01:11:39,760 --> 01:11:48,320
before taking up this hashicorp

01:11:44,320 --> 01:11:52,000
terraform examination certification and

01:11:48,320 --> 01:11:55,040
if i can remember questions there were

01:11:52,000 --> 01:11:57,840
70 100 questions

01:11:55,040 --> 01:12:01,120
i'm not mistaken and the passing rate is

01:11:57,840 --> 01:12:01,120
around 70 percent

01:12:03,520 --> 01:12:11,440
it's a tough exam if you're not prepared

01:12:08,400 --> 01:12:14,960
i'd say just uh

01:12:11,440 --> 01:12:18,000
take a two week off or

01:12:14,960 --> 01:12:22,320
or one week one two weeks let's say you

01:12:18,000 --> 01:12:25,679
get one week of preparing for exam

01:12:22,320 --> 01:12:29,520
doing labs and there are also for

01:12:25,679 --> 01:12:36,080
free labs on the web hashicorp website

01:12:29,520 --> 01:12:39,199
i also use that uh hashicorp hold on

01:12:36,080 --> 01:12:39,199
terraform labs

01:12:44,560 --> 01:12:52,640
yeah here um

01:12:50,480 --> 01:12:53,679
yeah i highly suggest doing this this

01:12:52,640 --> 01:12:56,719
labs you know

01:12:53,679 --> 01:12:59,199
just i spent one week doing the uh

01:12:56,719 --> 01:13:00,239
completing everything here and then one

01:12:59,199 --> 01:13:04,080
week of

01:13:00,239 --> 01:13:07,280
of taking the practice exams

01:13:04,080 --> 01:13:10,239
and then yeah that was

01:13:07,280 --> 01:13:10,640
i think four months that took that exam

01:13:10,239 --> 01:13:14,640
or

01:13:10,640 --> 01:13:14,640
certification last december

01:13:16,480 --> 01:13:20,800
or january february around that month

01:13:23,280 --> 01:13:27,600
and you can see the badge is something

01:13:26,960 --> 01:13:32,159
like this

01:13:27,600 --> 01:13:35,199
i posted it on my website it's here this

01:13:32,159 --> 01:13:38,640
is the terraform badge

01:13:35,199 --> 01:13:41,920
and yeah you're gonna

01:13:38,640 --> 01:13:44,960
you you get it from this badge from

01:13:41,920 --> 01:13:48,320
your acclaim and here it is

01:13:44,960 --> 01:13:51,760
uh again uh

01:13:48,320 --> 01:13:57,120
june so it's firestone yeah

01:13:51,760 --> 01:13:57,120
wasn't that uh wasn't that long

01:13:57,679 --> 01:14:01,840
so any questions

01:14:34,239 --> 01:14:38,719
uh yeah yes there's a question

01:14:41,040 --> 01:14:43,840
um

01:15:22,840 --> 01:15:25,840
so

01:15:47,360 --> 01:15:54,880
uh hello i'm marliss uh

01:15:51,440 --> 01:15:57,280
yeah do you see any questions i mean

01:15:54,880 --> 01:15:58,080
uh i'm looking at the right chat here

01:15:57,280 --> 01:16:02,400
right

01:15:58,080 --> 01:16:04,480
yes so

01:16:02,400 --> 01:16:06,560
i think they're they're just very

01:16:04,480 --> 01:16:09,600
focused on their

01:16:06,560 --> 01:16:12,560
under fun activity and

01:16:09,600 --> 01:16:13,280
everyone if you have questions don't be

01:16:12,560 --> 01:16:16,800
shy

01:16:13,280 --> 01:16:20,159
just raise your hand or unmute yourself

01:16:16,800 --> 01:16:22,800
so our speaker devlin will be

01:16:20,159 --> 01:16:23,679
assisting you further if you are having

01:16:22,800 --> 01:16:26,800
any

01:16:23,679 --> 01:16:30,159
you know some difficulties making sure

01:16:26,800 --> 01:16:34,239
that everything is okay on your end

01:16:30,159 --> 01:16:36,800
so please chat please send us a message

01:16:34,239 --> 01:16:37,600
in the chat at least something like

01:16:36,800 --> 01:16:39,840
we're good

01:16:37,600 --> 01:16:41,760
i'm good everything is okay so that we

01:16:39,840 --> 01:16:44,080
know that you are there

01:16:41,760 --> 01:16:45,440
since this is a virtual event and it's

01:16:44,080 --> 01:16:48,080
very challenging right

01:16:45,440 --> 01:16:48,719
not seeing everyone in the zoom right

01:16:48,080 --> 01:16:52,800
now

01:16:48,719 --> 01:16:55,920
but yeah hopefully we can read some

01:16:52,800 --> 01:16:58,560
messages here from our attendees

01:16:55,920 --> 01:16:59,920
that they're doing okay if we have some

01:16:58,560 --> 01:17:02,159
games

01:16:59,920 --> 01:17:05,199
i'm good everything's okay perfect

01:17:02,159 --> 01:17:05,199
thanks very much for joining us

01:17:05,280 --> 01:17:11,280
oh thank you so uh yeah

01:17:08,480 --> 01:17:11,679
i'm thinking of any suggestions or tips

01:17:11,280 --> 01:17:15,280
like

01:17:11,679 --> 01:17:18,960
advice that i could give uh

01:17:15,280 --> 01:17:22,320
yeah you know what i took the uh

01:17:18,960 --> 01:17:26,880
the certification because

01:17:22,320 --> 01:17:31,360
uh that was uh one month ahead of

01:17:26,880 --> 01:17:34,880
my my project i was given a test to

01:17:31,360 --> 01:17:39,360
to help uh sid uh assist admin

01:17:34,880 --> 01:17:42,960
in a norwegian government agency

01:17:39,360 --> 01:17:46,159
and had i think three weeks

01:17:42,960 --> 01:17:50,159
to to learn terraform and i'd say

01:17:46,159 --> 01:17:53,520
the the certification helped me a lot so

01:17:50,159 --> 01:17:56,159
yeah within that three weeks uh

01:17:53,520 --> 01:17:56,840
i'm learning terraform and decided to

01:17:56,159 --> 01:17:59,920
also

01:17:56,840 --> 01:18:02,640
uh took the

01:17:59,920 --> 01:18:03,920
take the the certification because i

01:18:02,640 --> 01:18:07,040
know it's going to help me

01:18:03,920 --> 01:18:08,480
and it will force me to dig deeper into

01:18:07,040 --> 01:18:11,600
the terraform

01:18:08,480 --> 01:18:13,040
and see all the capabilities of

01:18:11,600 --> 01:18:16,320
terraform and

01:18:13,040 --> 01:18:18,480
and uh you know gotchas meaning

01:18:16,320 --> 01:18:19,520
what not to do and what to do in

01:18:18,480 --> 01:18:22,640
terraform and

01:18:19,520 --> 01:18:24,880
you know it helped me prepare for the

01:18:22,640 --> 01:18:28,800
real project that was given to um

01:18:24,880 --> 01:18:31,120
to me by my manager because

01:18:28,800 --> 01:18:33,280
yeah this is it was a weird uh

01:18:31,120 --> 01:18:38,000
experience because

01:18:33,280 --> 01:18:40,640
i'm a full stack developer and

01:18:38,000 --> 01:18:42,320
they they put me in this project uh

01:18:40,640 --> 01:18:45,920
because they also uh

01:18:42,320 --> 01:18:49,040
uh i also had this this experience in

01:18:45,920 --> 01:18:50,960
uh being a sysadmin but that was

01:18:49,040 --> 01:18:52,880
really a long time ago before i shifted

01:18:50,960 --> 01:18:55,920
to full stack development

01:18:52,880 --> 01:18:58,640
to software engineering and

01:18:55,920 --> 01:19:00,640
how only a little uh knowledge in

01:18:58,640 --> 01:19:04,560
networking

01:19:00,640 --> 01:19:06,400
but the my manager has had no choice

01:19:04,560 --> 01:19:08,400
because he couldn't find anyone that has

01:19:06,400 --> 01:19:12,000
an experience i mean

01:19:08,400 --> 01:19:13,760
in in infrastructure but i had

01:19:12,000 --> 01:19:15,040
experience of what although it was a

01:19:13,760 --> 01:19:17,360
long time ago

01:19:15,040 --> 01:19:18,560
and it's giving me a three three week

01:19:17,360 --> 01:19:23,280
notice before

01:19:18,560 --> 01:19:25,120
uh you know before uh

01:19:23,280 --> 01:19:26,560
before going to this this office of you

01:19:25,120 --> 01:19:30,719
know in

01:19:26,560 --> 01:19:34,000
to work and anyways yeah uh

01:19:30,719 --> 01:19:34,960
again it helped me a lot here to uh to

01:19:34,000 --> 01:19:38,080
try

01:19:34,960 --> 01:19:41,679
terraform and eventually uh pass this

01:19:38,080 --> 01:19:45,280
before i get to work to

01:19:41,679 --> 01:19:48,080
you know a real uh world scenario in

01:19:45,280 --> 01:19:48,880
in doing this infrastructures code and

01:19:48,080 --> 01:19:51,440
you know

01:19:48,880 --> 01:19:53,440
not to automated automation way of

01:19:51,440 --> 01:19:56,640
provisioning resources

01:19:53,440 --> 01:19:59,600
yeah if you have that kind of similar uh

01:19:56,640 --> 01:19:59,920
or if you will have that kind of similar

01:19:59,600 --> 01:20:03,120
uh

01:19:59,920 --> 01:20:05,679
experience um i mean if your

01:20:03,120 --> 01:20:06,719
managers assign you to to work on this

01:20:05,679 --> 01:20:10,560
uh

01:20:06,719 --> 01:20:13,840
infrastructures code uh yeah i

01:20:10,560 --> 01:20:17,360
advise you know this uh

01:20:13,840 --> 01:20:20,880
certification it's gonna force you to

01:20:17,360 --> 01:20:24,080
to uh to know terraform and you'll

01:20:20,880 --> 01:20:26,719
you'll you'll

01:20:24,080 --> 01:20:27,280
be confident enough to to you know start

01:20:26,719 --> 01:20:29,199
working

01:20:27,280 --> 01:20:32,159
in a real project once you pass this

01:20:29,199 --> 01:20:34,880
because you know where can we get

01:20:32,159 --> 01:20:36,800
that one again uh the terraform

01:20:34,880 --> 01:20:40,080
examination

01:20:36,800 --> 01:20:41,520
here infrastructure automation

01:20:40,080 --> 01:20:45,040
certification it's not only

01:20:41,520 --> 01:20:45,040
terraform it's also for

01:20:45,440 --> 01:20:52,560
other products of hashicorp

01:20:48,960 --> 01:20:55,440
like console and

01:20:52,560 --> 01:20:58,400
here's other certification vault yeah

01:20:55,440 --> 01:20:58,400
vault and console

01:20:59,280 --> 01:21:02,560
console is for the identity and second

01:21:01,679 --> 01:21:06,320
and volt

01:21:02,560 --> 01:21:09,520
is for you know it's like a key vault

01:21:06,320 --> 01:21:12,400
for certificates yeah

01:21:09,520 --> 01:21:14,239
using certificates and you know hiding

01:21:12,400 --> 01:21:17,840
it in

01:21:14,239 --> 01:21:20,880
best practice manner or base maybe we

01:21:17,840 --> 01:21:25,040
can get that link on the chat oh yeah

01:21:20,880 --> 01:21:28,560
definitely and while you're doing that

01:21:25,040 --> 01:21:31,600
we are on time so that's perfect

01:21:28,560 --> 01:21:34,480
and we have a message here from

01:21:31,600 --> 01:21:35,520
joey and he said i was able to run the

01:21:34,480 --> 01:21:39,040
terraform

01:21:35,520 --> 01:21:41,199
the aws demo successfully this was my

01:21:39,040 --> 01:21:44,880
first time using terraform and was

01:21:41,199 --> 01:21:47,360
fairly easy to follow along great work

01:21:44,880 --> 01:21:50,560
oh thank you thank you for letting me

01:21:47,360 --> 01:21:50,560
know that it worked

01:21:51,040 --> 01:21:54,560
yeah i'll ask i have a question to to

01:21:53,520 --> 01:21:58,880
joey though

01:21:54,560 --> 01:22:02,159
did you encounter any problems or error

01:21:58,880 --> 01:22:02,159
hopefully he's still there

01:22:05,600 --> 01:22:08,840
can actually unmute if you want to

01:22:08,159 --> 01:22:12,159
answer

01:22:08,840 --> 01:22:13,120
verbally and while waiting for his

01:22:12,159 --> 01:22:16,320
response

01:22:13,120 --> 01:22:17,760
the link for the certification is on the

01:22:16,320 --> 01:22:20,800
chat right now

01:22:17,760 --> 01:22:24,320
it's www.hashcorp.com certification

01:22:20,800 --> 01:22:26,560
terraform associate and

01:22:24,320 --> 01:22:27,360
for the others if you don't have any

01:22:26,560 --> 01:22:30,080
questions

01:22:27,360 --> 01:22:30,960
or if you think of any questions after

01:22:30,080 --> 01:22:34,159
this session

01:22:30,960 --> 01:22:36,639
where can they reach you uh you can

01:22:34,159 --> 01:22:38,400
reach me here my this is my twitter

01:22:36,639 --> 01:22:42,719
handle oh hold on

01:22:38,400 --> 01:22:46,159
let me share it again uh

01:22:42,719 --> 01:22:49,679
yeah at devlin dude on twitter

01:22:46,159 --> 01:22:52,400
uh yeah you can send me a dm

01:22:49,679 --> 01:22:54,400
anything you want to know about the

01:22:52,400 --> 01:22:55,520
about terraform and the certification

01:22:54,400 --> 01:22:58,400
process

01:22:55,520 --> 01:23:00,080
and um right resources to review or to

01:22:58,400 --> 01:23:03,280
to read or to try

01:23:00,080 --> 01:23:07,199
in order to pass it because yes it says

01:23:03,280 --> 01:23:09,360
it's not a cheap

01:23:07,199 --> 01:23:12,000
certification it's kind of expensive i

01:23:09,360 --> 01:23:15,280
think it's 70 dollars around

01:23:12,000 --> 01:23:19,760
yeah so better pass it in just

01:23:15,280 --> 01:23:19,760

YouTube URL: https://www.youtube.com/watch?v=bUvZ_bekuak


