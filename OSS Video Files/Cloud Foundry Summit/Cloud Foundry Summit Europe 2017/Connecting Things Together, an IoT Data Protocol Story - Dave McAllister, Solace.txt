Title: Connecting Things Together, an IoT Data Protocol Story - Dave McAllister, Solace
Publication date: 2017-10-18
Playlist: Cloud Foundry Summit Europe 2017
Description: 
	Connecting Things Together, an IoT Data Protocol Story - Dave McAllister, Solace

The Internet of Things is rapidly becoming the Internet of Everything. And with that comes massive scale up in data and in messages being generated and delivered for analysis and machine learning. Such scale issues require an understanding of the various wire protocols in use for IoT and for the applications being fed. Without data movement, IoT is meaningless.

So, how do you deal with moving IoT messages into Cloud Foundry?

Dave will help you understand the pros and cons of relevant protocols by demonstrating a simple IoT scenario: A particulate sensor connected to an Arduino Uno that sends MQTT messages into a message router that passes them along to Pivotal Cloud Foundry using REST. 

From there, he’ll look at the protocol requirements of a microservices architecture within Cloud Foundry, including considerations of JMS and AMQP. Dave will finish up with a discussion on the emerging multi-cloud and hybrid cloud (public to private to datacenter) architectures and why your data needs to flow where you need it when you need it, in the form that best fits the use case.

About Dave McAllister
Dave McAllister has been a champion for open systems and open source from the early days of Linux, through open distributed file systems like XFS, GFS and GlusterFS to today’s world of clouds and containers. In his current role, Dave is working with messaging/streaming developers and architects to promote the use of open standard data movement protocols and APIs to solve large-scale distributed systems challenges. Dave sits on the Linux Journal Reader Advisory Board, won a Golden Penguin in 2002 and was recently named as one of the top ten pioneers in open source by Computer Business Review. Talk to Dave about photography, cats, food and wine.
Captions: 
	00:00:00,110 --> 00:00:06,060
it's a good afternoon my name is Dave

00:00:03,270 --> 00:00:07,950
McAllister and bear with me it's Friday

00:00:06,060 --> 00:00:12,000
now it's about 7 o'clock am i normal

00:00:07,950 --> 00:00:13,590
time so I will try my best to stay awake

00:00:12,000 --> 00:00:15,839
and answer all the questions without

00:00:13,590 --> 00:00:18,720
demanding a cup of coffee during this

00:00:15,839 --> 00:00:20,730
talk I work for a company called solace

00:00:18,720 --> 00:00:22,680
installous is in the the business of

00:00:20,730 --> 00:00:24,539
moving data from one place to another

00:00:22,680 --> 00:00:26,880
we power a lot of financial communities

00:00:24,539 --> 00:00:28,349
we power Singapore smart city we're

00:00:26,880 --> 00:00:30,599
connected car initiatives we're in

00:00:28,349 --> 00:00:33,380
transportation and what I'm going to do

00:00:30,599 --> 00:00:36,480
is talk a little bit about sort of the

00:00:33,380 --> 00:00:40,170
experiment that I did in trying to work

00:00:36,480 --> 00:00:42,690
from an IOT sensor environment into

00:00:40,170 --> 00:00:43,950
cloud foundry and in this case I will

00:00:42,690 --> 00:00:45,780
admit I'm using pivotal Cloud Foundry

00:00:43,950 --> 00:00:48,989
simply because we had such an

00:00:45,780 --> 00:00:51,149
environment setup so it actually all

00:00:48,989 --> 00:00:52,350
started real simply and I'll try to

00:00:51,149 --> 00:00:53,879
stand in front of the microphone but I'm

00:00:52,350 --> 00:00:56,610
really bad at standing behind podiums

00:00:53,879 --> 00:01:00,059
here actually let me see if I can pull

00:00:56,610 --> 00:01:02,969
this off it all started actually really

00:01:00,059 --> 00:01:04,559
simply nobody in my neighborhood has the

00:01:02,969 --> 00:01:06,780
faintest clue as to what I do for a

00:01:04,559 --> 00:01:09,299
living and so I decided to build a

00:01:06,780 --> 00:01:10,979
fairly simple little structure that said

00:01:09,299 --> 00:01:12,689
I'm gonna build something IOT that I

00:01:10,979 --> 00:01:15,630
could show people and then explain from

00:01:12,689 --> 00:01:17,700
that what I'm doing and so I wanted to

00:01:15,630 --> 00:01:19,560
use a message to move the data around

00:01:17,700 --> 00:01:22,530
here I wanted to build a simple set of

00:01:19,560 --> 00:01:24,090
services so I could could mimic the the

00:01:22,530 --> 00:01:25,710
necessity of a micro services

00:01:24,090 --> 00:01:27,420
architecture at the same time and I

00:01:25,710 --> 00:01:30,860
wanted to learn as much new things as I

00:01:27,420 --> 00:01:33,659
could at the same point the three

00:01:30,860 --> 00:01:35,579
surprise looking creatures behind me are

00:01:33,659 --> 00:01:36,930
my three cats and this is the kind of

00:01:35,579 --> 00:01:38,490
look that I usually got from my

00:01:36,930 --> 00:01:39,750
neighbors when I try to talk about data

00:01:38,490 --> 00:01:43,290
movement and messaging in the first

00:01:39,750 --> 00:01:46,170
place so it was pretty much and so it

00:01:43,290 --> 00:01:48,540
was a very simple aspect I wanted to

00:01:46,170 --> 00:01:53,549
take a simple little particle sensor

00:01:48,540 --> 00:01:55,860
this is nga PBT 42 and it measures to

00:01:53,549 --> 00:01:57,840
either 10 micron particles or 25 micron

00:01:55,860 --> 00:01:59,939
particles and I wanted to be able to

00:01:57,840 --> 00:02:02,939
build this into something that would

00:01:59,939 --> 00:02:04,259
report something very simple and of

00:02:02,939 --> 00:02:05,790
course that requires mean they have the

00:02:04,259 --> 00:02:06,960
rest of the parts that were there and

00:02:05,790 --> 00:02:09,780
I'll get a little bit more into the part

00:02:06,960 --> 00:02:12,209
list here this was based originally off

00:02:09,780 --> 00:02:13,340
a project called dust we know and my

00:02:12,209 --> 00:02:15,530
thanks to me

00:02:13,340 --> 00:02:16,849
missions in match foyer this project

00:02:15,530 --> 00:02:18,560
itself is open-source

00:02:16,849 --> 00:02:19,970
so if you go out and switch work dust we

00:02:18,560 --> 00:02:21,890
know you'll fly in the source codes

00:02:19,970 --> 00:02:24,590
available for this and this was my

00:02:21,890 --> 00:02:26,660
starting point I'm a firm believer I've

00:02:24,590 --> 00:02:27,650
been Umbreon I was I was involved in

00:02:26,660 --> 00:02:29,060
open-source before it was called

00:02:27,650 --> 00:02:30,620
open-source I was at the meeting with

00:02:29,060 --> 00:02:32,720
Larry Steve collared open-source but he

00:02:30,620 --> 00:02:34,970
got named by his person but nonetheless

00:02:32,720 --> 00:02:36,860
I like to build on top of things rather

00:02:34,970 --> 00:02:38,750
than trying to recreate something from

00:02:36,860 --> 00:02:40,819
the beginning the desk Mina is very

00:02:38,750 --> 00:02:43,069
simple it has to come up in this

00:02:40,819 --> 00:02:44,870
orientation because there's a little

00:02:43,069 --> 00:02:46,760
resistor down here at the bottom that

00:02:44,870 --> 00:02:48,980
heats the air so the air goes up across

00:02:46,760 --> 00:02:50,959
the sensor field and that's it this is

00:02:48,980 --> 00:02:53,290
all it does just measures the the dust

00:02:50,959 --> 00:02:57,670
particles that are inside of that

00:02:53,290 --> 00:03:00,110
so very simple architecture this sensor

00:02:57,670 --> 00:03:02,150
connected in to show some display stuff

00:03:00,110 --> 00:03:06,079
and what you're actually looking at is

00:03:02,150 --> 00:03:08,599
for my my neck of the woods is data that

00:03:06,079 --> 00:03:11,540
came out just being recorded and then

00:03:08,599 --> 00:03:14,299
dropped into a Excel spreadsheet to

00:03:11,540 --> 00:03:15,920
graft out for five days in August and as

00:03:14,299 --> 00:03:17,569
you can see the numbers vary and there's

00:03:15,920 --> 00:03:20,180
a reason for the numbers varying and

00:03:17,569 --> 00:03:22,730
we'll get into that as I go into sort of

00:03:20,180 --> 00:03:24,109
the the next steps inside of here but

00:03:22,730 --> 00:03:26,329
because I wanted to treat this as a

00:03:24,109 --> 00:03:28,849
message rather than just treating this

00:03:26,329 --> 00:03:30,560
as an environment you know just passing

00:03:28,849 --> 00:03:33,709
the data I stuck in the middle this

00:03:30,560 --> 00:03:35,630
virtual message router construct a

00:03:33,709 --> 00:03:37,489
virtual message router community edition

00:03:35,630 --> 00:03:39,620
free for years to have fun do whatever

00:03:37,489 --> 00:03:42,290
you want to you can find it out there

00:03:39,620 --> 00:03:44,359
but I did this by passing a message that

00:03:42,290 --> 00:03:46,549
meant that I had to look at data

00:03:44,359 --> 00:03:48,349
protocols I'm no longer just passing a

00:03:46,549 --> 00:03:51,049
text string I'm actually passing a

00:03:48,349 --> 00:03:53,419
message header a message body and going

00:03:51,049 --> 00:03:55,790
into this environment again pretty

00:03:53,419 --> 00:03:59,750
straightforward pretty simple inside of

00:03:55,790 --> 00:04:02,150
that but then naturally I showed this

00:03:59,750 --> 00:04:04,910
off to a couple of people and somebody

00:04:02,150 --> 00:04:06,919
promptly says hey I work for this local

00:04:04,910 --> 00:04:09,440
area park called Edgewood Park an

00:04:06,919 --> 00:04:10,970
Edgewood Park is a very unique place it

00:04:09,440 --> 00:04:12,799
was actually saved because of a

00:04:10,970 --> 00:04:14,720
butterfly it was about to be made into a

00:04:12,799 --> 00:04:17,690
golf course it was saved because of a

00:04:14,720 --> 00:04:19,639
butterfly called the Bay Checkerspot and

00:04:17,690 --> 00:04:21,680
the bay Checkerspot was an endangered

00:04:19,639 --> 00:04:23,270
species and one of the last two

00:04:21,680 --> 00:04:25,430
locations it was found was in Edgewood

00:04:23,270 --> 00:04:27,790
Park and so Edgware progress saved but

00:04:25,430 --> 00:04:30,410
if you notice

00:04:27,790 --> 00:04:33,350
there's a major road that runs right

00:04:30,410 --> 00:04:34,790
through Edgewood Park and what happens

00:04:33,350 --> 00:04:36,950
is that we start seeing all sorts of

00:04:34,790 --> 00:04:38,810
invasive weeds show up because of that

00:04:36,950 --> 00:04:40,160
road coming through there's all sorts of

00:04:38,810 --> 00:04:41,240
stuff that comes from the farm and

00:04:40,160 --> 00:04:42,620
somebody said wouldn't be calling it

00:04:41,240 --> 00:04:44,270
cool if we could figure out what

00:04:42,620 --> 00:04:45,470
particles are coming over and what

00:04:44,270 --> 00:04:47,540
happens when the wind direction changes

00:04:45,470 --> 00:04:49,280
and all these different things and they

00:04:47,540 --> 00:04:52,540
said Oh Dave you did it from one you can

00:04:49,280 --> 00:04:58,520
just do it for the park no problem

00:04:52,540 --> 00:05:01,370
turns out that IOT scale matters when

00:04:58,520 --> 00:05:03,080
you build the architecture very honestly

00:05:01,370 --> 00:05:04,640
and I'm not even talking about a huge

00:05:03,080 --> 00:05:06,350
architecture I'm gonna talk about now

00:05:04,640 --> 00:05:08,540
some of the scale aspects that happen in

00:05:06,350 --> 00:05:11,690
IOT as it comes up but even going from

00:05:08,540 --> 00:05:14,120
one simple little thing to 20 which is

00:05:11,690 --> 00:05:16,790
our original goal became more of a

00:05:14,120 --> 00:05:19,850
challenge and so what happens is now my

00:05:16,790 --> 00:05:22,160
sensor is feeding MQTT data Message

00:05:19,850 --> 00:05:25,910
Queuing tracking telemetry data into the

00:05:22,160 --> 00:05:28,700
VMR and i wanted to feed that mqt data

00:05:25,910 --> 00:05:30,740
obviously the cell is VMR into Cloud

00:05:28,700 --> 00:05:32,540
Foundry and I wanted to feed in road

00:05:30,740 --> 00:05:34,130
data coming in and I wanted to feed in

00:05:32,540 --> 00:05:35,510
weather data coming in and then I wanted

00:05:34,130 --> 00:05:38,530
to put something out so I could show it

00:05:35,510 --> 00:05:40,850
wherever Bo my phone being on my my

00:05:38,530 --> 00:05:45,380
computer browser all those different

00:05:40,850 --> 00:05:48,669
places so MQTT data on one side rest

00:05:45,380 --> 00:05:51,290
data going in and rest data coming out

00:05:48,669 --> 00:05:52,460
I'm sure with you with most Civello if

00:05:51,290 --> 00:05:54,770
you're familiar with cloth laundry at

00:05:52,460 --> 00:05:56,990
all you know that the access of going

00:05:54,770 --> 00:06:00,160
into a public cloud and into Cloud

00:05:56,990 --> 00:06:03,440
Foundry has some challenges if it's not

00:06:00,160 --> 00:06:07,070
HTTP fortunately there are some

00:06:03,440 --> 00:06:09,470
solutions around that and one of them

00:06:07,070 --> 00:06:11,510
that I'll talk about I did use is inside

00:06:09,470 --> 00:06:13,220
of here so this is what it actually

00:06:11,510 --> 00:06:15,020
looks like all the different pieces here

00:06:13,220 --> 00:06:17,410
and there are actually two solutions

00:06:15,020 --> 00:06:19,880
here as we've started rolling this out

00:06:17,410 --> 00:06:20,780
getting other people to help pay for

00:06:19,880 --> 00:06:23,930
this

00:06:20,780 --> 00:06:27,560
it works out this way this thing here is

00:06:23,930 --> 00:06:29,690
a juice solar battery so it charges

00:06:27,560 --> 00:06:33,620
itself during the day and it can support

00:06:29,690 --> 00:06:37,970
the entire needs for the Arduino there

00:06:33,620 --> 00:06:40,670
or they're using an Arduino Uno

00:06:37,970 --> 00:06:42,380
inside of it so it's perfectly capable

00:06:40,670 --> 00:06:43,850
of doing that and the battery itself

00:06:42,380 --> 00:06:46,040
without any charge will run that

00:06:43,850 --> 00:06:46,850
environment for about four days so

00:06:46,040 --> 00:06:48,650
that's it that becomes very

00:06:46,850 --> 00:06:50,750
straightforward it's also waterproof and

00:06:48,650 --> 00:06:51,890
it makes a nice protective top for the

00:06:50,750 --> 00:06:56,540
environment that we're going inside of

00:06:51,890 --> 00:06:59,630
here the original thing used I think

00:06:56,540 --> 00:07:02,510
it's this one yeah this one here which

00:06:59,630 --> 00:07:04,250
is an Ethernet wireless environment so

00:07:02,510 --> 00:07:06,380
Arduino has an Ethernet shield that

00:07:04,250 --> 00:07:08,270
needed to be connected to it and the one

00:07:06,380 --> 00:07:09,860
below it is actually the Ethernet wired

00:07:08,270 --> 00:07:11,630
one which I haven't high up blowing

00:07:09,860 --> 00:07:13,130
around it was my first test case was to

00:07:11,630 --> 00:07:16,460
use that one so now it's the wireless

00:07:13,130 --> 00:07:19,430
one now I'm actually gone to using this

00:07:16,460 --> 00:07:21,560
Arduino which has wireless built into it

00:07:19,430 --> 00:07:24,440
so the entire environment is this

00:07:21,560 --> 00:07:27,320
Arduino this sensor in this battery and

00:07:24,440 --> 00:07:28,850
that's it and now tapping Wireless is

00:07:27,320 --> 00:07:32,660
that I already exist around the park but

00:07:28,850 --> 00:07:34,160
that becomes the concept the goal is to

00:07:32,660 --> 00:07:37,550
ring the park and right now I've got

00:07:34,160 --> 00:07:40,070
probably five or six sensors that are

00:07:37,550 --> 00:07:42,020
out here I do not have a dashboard and

00:07:40,070 --> 00:07:43,700
as I say this is a very bad mock-up as

00:07:42,020 --> 00:07:46,790
you can tell from my PowerPoint slides

00:07:43,700 --> 00:07:47,810
I am a lousy design person so somebody

00:07:46,790 --> 00:07:50,030
else is going to have to work on the

00:07:47,810 --> 00:07:52,310
design for me going forward here but as

00:07:50,030 --> 00:07:54,200
you can tell we do tie things such as

00:07:52,310 --> 00:07:56,150
wind direction and we tie a little bit

00:07:54,200 --> 00:07:58,220
of the traffic activity and we tie in

00:07:56,150 --> 00:08:00,200
particular the particulate count that

00:07:58,220 --> 00:08:02,810
goes on and right now I'm not dropping

00:08:00,200 --> 00:08:07,100
it continuously I am dropping it on I

00:08:02,810 --> 00:08:09,500
think up here do I'm basically a daily

00:08:07,100 --> 00:08:10,880
basis inside of here but the goal is to

00:08:09,500 --> 00:08:13,370
be able to tie all these things together

00:08:10,880 --> 00:08:14,990
into a visual representation so you can

00:08:13,370 --> 00:08:16,250
see where the traffic is busy and you

00:08:14,990 --> 00:08:19,250
can see what direction the wind is

00:08:16,250 --> 00:08:21,710
blowing from the wind has a major impact

00:08:19,250 --> 00:08:24,410
on how much particulate data these

00:08:21,710 --> 00:08:26,810
sensors pick up as well as does the

00:08:24,410 --> 00:08:29,270
elevation above sea level for that

00:08:26,810 --> 00:08:32,360
environment so in the centre of this

00:08:29,270 --> 00:08:35,419
part there is one very tall Hill and the

00:08:32,360 --> 00:08:38,270
particulate matter up there is not

00:08:35,419 --> 00:08:40,190
affected by the wind direction as much

00:08:38,270 --> 00:08:42,830
as you would expect it to be and that's

00:08:40,190 --> 00:08:45,320
because being in California we spend

00:08:42,830 --> 00:08:47,870
eight months of the year in a completely

00:08:45,320 --> 00:08:50,960
dry state and the dust gets picked up

00:08:47,870 --> 00:08:52,820
and so as it goes up the hill the

00:08:50,960 --> 00:08:56,060
seems to go up that hill and its is

00:08:52,820 --> 00:08:58,190
pretty consistent measurement not always

00:08:56,060 --> 00:08:59,510
you'll also can tell you sure that I

00:08:58,190 --> 00:09:02,510
should have put it on here but you can

00:08:59,510 --> 00:09:05,390
also tell that there is one distinct dip

00:09:02,510 --> 00:09:09,020
I think it's the last day no it's the

00:09:05,390 --> 00:09:12,470
state number four here this distinct dip

00:09:09,020 --> 00:09:14,540
is because it's a Sunday morning and so

00:09:12,470 --> 00:09:16,910
the traffic on the road is not as busy

00:09:14,540 --> 00:09:19,640
and so there is definitely a distinct

00:09:16,910 --> 00:09:20,990
dip that happens inside of that so why

00:09:19,640 --> 00:09:23,540
did this all become kind of an

00:09:20,990 --> 00:09:24,140
interesting thing well you know as it

00:09:23,540 --> 00:09:26,360
turns out

00:09:24,140 --> 00:09:27,800
IOT is really all about the data we can

00:09:26,360 --> 00:09:29,210
talk about the sensors we're going to

00:09:27,800 --> 00:09:31,670
talk about the environments we can talk

00:09:29,210 --> 00:09:34,520
about the gateways but very honestly IOT

00:09:31,670 --> 00:09:38,060
is all about the data it's big data and

00:09:34,520 --> 00:09:39,950
we do mean really big data we're

00:09:38,060 --> 00:09:42,050
evolving connected car initiatives here

00:09:39,950 --> 00:09:47,600
but the average connected car will

00:09:42,050 --> 00:09:50,870
produce 25 gigabytes of data per day -

00:09:47,600 --> 00:09:52,280
per hour to the cloud and this is after

00:09:50,870 --> 00:09:53,930
it's already sorted out all those

00:09:52,280 --> 00:09:55,820
different things and figured out what to

00:09:53,930 --> 00:09:59,000
do with what it's going to and this is

00:09:55,820 --> 00:10:00,860
Hitachi report so if we often look for a

00:09:59,000 --> 00:10:04,580
connected card 25 gigs Hitachi you'll

00:10:00,860 --> 00:10:05,210
find it I should have put a pointer

00:10:04,580 --> 00:10:07,370
inside of here

00:10:05,210 --> 00:10:10,100
the other one is actually the Google

00:10:07,370 --> 00:10:14,510
connected not autonomous car and it

00:10:10,100 --> 00:10:16,700
produces 750 megabytes per second which

00:10:14,510 --> 00:10:19,250
a completely different model and by the

00:10:16,700 --> 00:10:21,050
way that's not the the data that the car

00:10:19,250 --> 00:10:23,660
is producing that's the data the sensors

00:10:21,050 --> 00:10:25,760
around the car are producing and right

00:10:23,660 --> 00:10:28,220
now they do record all that they do put

00:10:25,760 --> 00:10:30,020
it up there but in a truly IOT type

00:10:28,220 --> 00:10:31,760
environment most of that data would get

00:10:30,020 --> 00:10:33,650
thrown away at the car level inside of

00:10:31,760 --> 00:10:36,230
that but just to give you an impact

00:10:33,650 --> 00:10:39,800
twenty five gigabytes an hour per hour

00:10:36,230 --> 00:10:42,260
for is six thousand eight hundred and

00:10:39,800 --> 00:10:45,110
seventy five gigabytes or six point

00:10:42,260 --> 00:10:47,660
eight seven five terabytes per year for

00:10:45,110 --> 00:10:50,750
the u.s. marketplace alone if every

00:10:47,660 --> 00:10:53,540
connected car if every connected car is

00:10:50,750 --> 00:10:55,520
sorry if every connected car in the US

00:10:53,540 --> 00:10:56,990
was running this for the length of time

00:10:55,520 --> 00:11:01,400
that they think about running which is

00:10:56,990 --> 00:11:03,740
240 hours a year we're here it's us 1740

00:11:01,400 --> 00:11:04,550
exabytes data and if you take it

00:11:03,740 --> 00:11:08,810
worldwide

00:11:04,550 --> 00:11:10,790
- that is 14 seta bytes per year IOT is

00:11:08,810 --> 00:11:13,220
a big data problem and I can tell you

00:11:10,790 --> 00:11:17,779
just moving from 1 to 20 was a headache

00:11:13,220 --> 00:11:20,540
so scale matters inside of this so I

00:11:17,779 --> 00:11:24,230
would show off this demo but this is a

00:11:20,540 --> 00:11:27,320
demo of the FAA ground control network

00:11:24,230 --> 00:11:29,810
it's come thing called swim which is the

00:11:27,320 --> 00:11:31,970
system-wide information management it's

00:11:29,810 --> 00:11:33,800
now being looked at and your control is

00:11:31,970 --> 00:11:35,810
being looked at over in Japan in

00:11:33,800 --> 00:11:38,209
Australia and New Zealand because it

00:11:35,810 --> 00:11:40,910
turns out that being able to know where

00:11:38,209 --> 00:11:43,700
the flights are at all times actually

00:11:40,910 --> 00:11:46,100
improves the rate at which planes arrive

00:11:43,700 --> 00:11:47,870
and depart on time so swim data becomes

00:11:46,100 --> 00:11:51,829
real interesting real interesting and is

00:11:47,870 --> 00:11:53,450
very widespread the swim data feeds can

00:11:51,829 --> 00:11:54,980
be accessed you can go off and signup

00:11:53,450 --> 00:11:57,290
for them you can get the data access

00:11:54,980 --> 00:11:59,000
anywhere you want to this is ground

00:11:57,290 --> 00:12:01,029
control these are the trained planes

00:11:59,000 --> 00:12:03,230
that are moving around on the ground and

00:12:01,029 --> 00:12:04,820
unfortunately for me every time I have

00:12:03,230 --> 00:12:07,190
tried to do this talk in the last six

00:12:04,820 --> 00:12:10,250
months the FAA has managed to turn off

00:12:07,190 --> 00:12:12,260
my data feed every single freaking time

00:12:10,250 --> 00:12:14,329
for this but nonetheless you can go off

00:12:12,260 --> 00:12:16,850
and play with this there's a little

00:12:14,329 --> 00:12:18,290
point on the slide so it comes back up

00:12:16,850 --> 00:12:22,180
you'll be able to go take a look at it

00:12:18,290 --> 00:12:24,560
and see what it looks like yourself so

00:12:22,180 --> 00:12:26,450
what's the real problem when I started

00:12:24,560 --> 00:12:28,310
looking at IOT inside this environment I

00:12:26,450 --> 00:12:28,850
had two sets of problems that I'm going

00:12:28,310 --> 00:12:32,120
on here

00:12:28,850 --> 00:12:33,709
I have a device problem at the end and I

00:12:32,120 --> 00:12:35,870
have a cloud problem at the top and I

00:12:33,709 --> 00:12:38,510
need it across the streams between those

00:12:35,870 --> 00:12:40,790
two and in my case I made it a lot

00:12:38,510 --> 00:12:41,779
simpler all my sensors are identical so

00:12:40,790 --> 00:12:43,279
I didn't have to worry about a lot of

00:12:41,779 --> 00:12:45,470
things it's very simple data set that

00:12:43,279 --> 00:12:46,940
I'm passing in a triplet form which is

00:12:45,470 --> 00:12:49,579
pretty much what since there are you

00:12:46,940 --> 00:12:50,990
what time is it what's the data it's

00:12:49,579 --> 00:12:52,430
pretty much what happens inside of a

00:12:50,990 --> 00:12:55,970
sensor environment you get three things

00:12:52,430 --> 00:12:58,459
that happens those things talk up I can

00:12:55,970 --> 00:13:00,740
record the data I can add more sensors

00:12:58,459 --> 00:13:02,209
to it which is what drove me crazy in

00:13:00,740 --> 00:13:02,630
the first place was adding more sensors

00:13:02,209 --> 00:13:05,240
to it

00:13:02,630 --> 00:13:07,880
I didn't expand to store the data I then

00:13:05,240 --> 00:13:09,199
could if I was in an industrial IOT

00:13:07,880 --> 00:13:11,480
environment or in a really sensitive

00:13:09,199 --> 00:13:13,670
environment I had firewalls and load

00:13:11,480 --> 00:13:15,199
balancers inside of here and then I want

00:13:13,670 --> 00:13:16,940
to do something with the data so I've

00:13:15,199 --> 00:13:17,980
got to start analyzing the data so it's

00:13:16,940 --> 00:13:20,710
got to communicate that

00:13:17,980 --> 00:13:22,960
and forth between these tracks and then

00:13:20,710 --> 00:13:25,420
somebody can come along and say change

00:13:22,960 --> 00:13:27,490
out the sensors that's already been

00:13:25,420 --> 00:13:30,280
brought up as well this is a Texas

00:13:27,490 --> 00:13:32,140
Instruments sensor tag and I'm going to

00:13:30,280 --> 00:13:33,820
make the strong recommendation because

00:13:32,140 --> 00:13:35,530
occasionally I get asked the question if

00:13:33,820 --> 00:13:39,430
you want to start playing with anything

00:13:35,530 --> 00:13:42,250
in IOT get yourself a sensor tag very

00:13:39,430 --> 00:13:46,120
clean API set very simple to work with

00:13:42,250 --> 00:13:50,170
and has somewhere between 14 and 16

00:13:46,120 --> 00:13:51,520
sensors built into it and dirt cheap and

00:13:50,170 --> 00:13:53,290
by the way so far the battery and this

00:13:51,520 --> 00:13:56,620
one has lasted slightly over two years

00:13:53,290 --> 00:13:58,480
so I'm not not too unhappy with the

00:13:56,620 --> 00:14:01,090
sensor tag model sensor tag model will

00:13:58,480 --> 00:14:02,740
tell me things like movement so if I

00:14:01,090 --> 00:14:04,420
brought up the dashboard you'd see able

00:14:02,740 --> 00:14:06,670
to see the shake you can tell when it's

00:14:04,420 --> 00:14:08,950
light or dark inside of here you tell

00:14:06,670 --> 00:14:11,320
acceleration you can tell humidity you

00:14:08,950 --> 00:14:12,820
tell temperature and so this is

00:14:11,320 --> 00:14:14,590
something that people are now saying can

00:14:12,820 --> 00:14:16,330
we attach one of these to go along with

00:14:14,590 --> 00:14:17,860
this so we know all the environmental

00:14:16,330 --> 00:14:21,490
details at the same time that we're

00:14:17,860 --> 00:14:24,670
knowing all the capability as is decided

00:14:21,490 --> 00:14:26,830
that the short answer is yeah right as

00:14:24,670 --> 00:14:31,350
soon as I retire and have lots of time

00:14:26,830 --> 00:14:34,480
to play with this but secondary issue so

00:14:31,350 --> 00:14:37,030
in an IOT environment fortunately not in

00:14:34,480 --> 00:14:40,690
mine sooner or later you're gonna want

00:14:37,030 --> 00:14:46,060
to talk back to the devices the sensors

00:14:40,690 --> 00:14:47,860
and excuse me continue forward there are

00:14:46,060 --> 00:14:49,180
lots of other sensors right now I'm

00:14:47,860 --> 00:14:51,850
trying to bring in three different sets

00:14:49,180 --> 00:14:54,880
of sensor data the weather data the road

00:14:51,850 --> 00:14:56,680
data as well as the particulate data I

00:14:54,880 --> 00:14:59,320
could be bringing in another 14

00:14:56,680 --> 00:15:00,490
hopefully not anytime soon but you're

00:14:59,320 --> 00:15:02,410
gonna be a talking to them at the same

00:15:00,490 --> 00:15:05,650
way you gotta worry about security in

00:15:02,410 --> 00:15:07,420
this environment my environment not so

00:15:05,650 --> 00:15:09,190
much I mean if somebody goes in and is

00:15:07,420 --> 00:15:14,040
boost my sensors I really don't care

00:15:09,190 --> 00:15:18,580
but why security is important last

00:15:14,040 --> 00:15:19,930
October you may have remembered or is it

00:15:18,580 --> 00:15:24,460
November there was a little thing called

00:15:19,930 --> 00:15:29,140
the din DNS shutdown there was a denial

00:15:24,460 --> 00:15:30,579
of service attack against the major DNS

00:15:29,140 --> 00:15:34,959
server for the you

00:15:30,579 --> 00:15:38,679
East Coast and everything basically

00:15:34,959 --> 00:15:40,779
stopped Netflix stopped I Amazon stopped

00:15:38,679 --> 00:15:44,100
lots of things stopped inside of here

00:15:40,779 --> 00:15:47,529
that attack was generated by a number of

00:15:44,100 --> 00:15:50,619
video cameras IOT video cameras

00:15:47,529 --> 00:15:51,730
reporting data so security matters

00:15:50,619 --> 00:15:53,410
inside of here

00:15:51,730 --> 00:15:57,160
my other one is a much more famous

00:15:53,410 --> 00:15:58,809
favorite example is that the one of the

00:15:57,160 --> 00:16:02,049
universities in Paris have demonstrated

00:15:58,809 --> 00:16:04,239
a successful hack on the Philips hue

00:16:02,049 --> 00:16:06,850
light bulbs and what they did was they

00:16:04,239 --> 00:16:10,199
flew us a drone past the building and

00:16:06,850 --> 00:16:12,699
the flight football started blinking SOS

00:16:10,199 --> 00:16:14,739
the nice thing about this from a

00:16:12,699 --> 00:16:17,709
viewpoint is that the light bulbs could

00:16:14,739 --> 00:16:19,449
then infect each other and in a city the

00:16:17,709 --> 00:16:21,309
size of Paris the estimate is that

00:16:19,449 --> 00:16:23,860
15,000 light bulbs will become a

00:16:21,309 --> 00:16:25,720
self-sustaining infection and that the

00:16:23,860 --> 00:16:28,600
entire city of Paris would be infected

00:16:25,720 --> 00:16:31,420
within 24 hours if there'd been 15,000

00:16:28,600 --> 00:16:34,179
light bulbs it gave you an impact if

00:16:31,420 --> 00:16:37,149
that's going on in there fortunately

00:16:34,179 --> 00:16:38,169
most of that has been closed off but

00:16:37,149 --> 00:16:39,610
that just means that somebody will think

00:16:38,169 --> 00:16:42,759
about something new inside of here so

00:16:39,610 --> 00:16:44,169
think about security on scale when

00:16:42,759 --> 00:16:46,329
you're thinking about security for

00:16:44,169 --> 00:16:47,499
instance with mqtt you want to make use

00:16:46,329 --> 00:16:49,809
of something that actually does

00:16:47,499 --> 00:16:51,160
authentication checking against to make

00:16:49,809 --> 00:16:52,839
sure that the device you're talking to

00:16:51,160 --> 00:16:54,610
is the device you think you're talking

00:16:52,839 --> 00:16:56,589
to you also want to be able to do not

00:16:54,610 --> 00:16:58,629
just publications a subscription one of

00:16:56,589 --> 00:17:00,790
the standards message exchange patterns

00:16:58,629 --> 00:17:02,769
that's reports data or sends data out

00:17:00,790 --> 00:17:04,899
but you also want to do requests reply

00:17:02,769 --> 00:17:07,329
back to the device so that you can say

00:17:04,899 --> 00:17:09,579
hey I've got an update for you can you

00:17:07,329 --> 00:17:13,449
tell me can you take it now or even just

00:17:09,579 --> 00:17:15,970
simply ask them what version of a system

00:17:13,449 --> 00:17:19,510
it's running we find that particularly

00:17:15,970 --> 00:17:20,919
in consumer electronics nobody ever

00:17:19,510 --> 00:17:22,659
bothers to update their bloody video

00:17:20,919 --> 00:17:26,169
cameras that are ringing their houses

00:17:22,659 --> 00:17:30,279
you know nobody bothers to update their

00:17:26,169 --> 00:17:32,529
their their nest thermostats if it

00:17:30,279 --> 00:17:36,159
doesn't happen automatically it doesn't

00:17:32,529 --> 00:17:38,889
happen however be fair the video camera

00:17:36,159 --> 00:17:40,210
meltdown was because 80% of the people

00:17:38,889 --> 00:17:42,190
had never bothered to change their

00:17:40,210 --> 00:17:43,990
password and they were all default

00:17:42,190 --> 00:17:44,450
passwords the biggest headache in SATA

00:17:43,990 --> 00:17:48,440
secure

00:17:44,450 --> 00:17:50,570
is always going to be people guaranteed

00:17:48,440 --> 00:17:52,519
100% so can ever get people out of the

00:17:50,570 --> 00:17:57,019
loop in this and the internet of things

00:17:52,519 --> 00:17:58,399
will probably be pretty secure so giving

00:17:57,019 --> 00:18:00,769
that to a little larger example here

00:17:58,399 --> 00:18:03,320
this is the Singapore Land Transit

00:18:00,769 --> 00:18:05,840
Authority's model for traffic tracking

00:18:03,320 --> 00:18:07,549
inside of Singapore if you're going to

00:18:05,840 --> 00:18:10,720
drive a car in Singapore your Singapore

00:18:07,549 --> 00:18:14,899
car will have this thing called an OB u

00:18:10,720 --> 00:18:16,999
which stands for on-board unit that's

00:18:14,899 --> 00:18:20,960
pretty straightforward and it reports

00:18:16,999 --> 00:18:23,179
mqtt and so MQTT data goes up goes into

00:18:20,960 --> 00:18:25,970
a collection aspect then goes into a

00:18:23,179 --> 00:18:29,840
secondary passive aspect and then comes

00:18:25,970 --> 00:18:31,940
out at the other end for instance as JMS

00:18:29,840 --> 00:18:33,139
and the device is actually smart enough

00:18:31,940 --> 00:18:34,700
and one of the reasons i love them is

00:18:33,139 --> 00:18:36,619
that they can actually change me from

00:18:34,700 --> 00:18:38,149
MQTT to JMS and i don't have to write

00:18:36,619 --> 00:18:40,279
any code to do that i don't got to worry

00:18:38,149 --> 00:18:43,730
about it it'll just change the protocol

00:18:40,279 --> 00:18:45,049
format for me automatically number one

00:18:43,730 --> 00:18:47,509
complaint I've always heard one showing

00:18:45,049 --> 00:18:49,009
this maybe not so much over in Europe

00:18:47,509 --> 00:18:50,600
but in the US is go I'm not going to

00:18:49,009 --> 00:18:53,090
spend to have an on-board unit put

00:18:50,600 --> 00:18:54,950
inside my car well the average Ford

00:18:53,090 --> 00:18:57,769
Mustang inside of Singapore cost two

00:18:54,950 --> 00:19:00,080
hundred thousand dollars u.s. they don't

00:18:57,769 --> 00:19:01,940
want you driving in Singapore so cars

00:19:00,080 --> 00:19:03,889
are really expensive adding a twenty

00:19:01,940 --> 00:19:06,710
five dollar OVU doesn't matter to these

00:19:03,889 --> 00:19:08,480
guys however because this thing is

00:19:06,710 --> 00:19:10,039
constantly in communication and

00:19:08,480 --> 00:19:11,690
constantly knowing what's going on in

00:19:10,039 --> 00:19:13,279
rolling data up here if you park

00:19:11,690 --> 00:19:15,019
someplace for six minutes you get

00:19:13,279 --> 00:19:16,820
charged for six minutes of parking

00:19:15,019 --> 00:19:18,739
if you park for two days you'll get

00:19:16,820 --> 00:19:22,389
charged for two days if you park you

00:19:18,739 --> 00:19:26,649
legally you will get a ticket guaranteed

00:19:22,389 --> 00:19:28,580
all those different cases in Singapore

00:19:26,649 --> 00:19:32,330
even though they try to control traffic

00:19:28,580 --> 00:19:34,009
it's unbelievably busy and so you'll be

00:19:32,330 --> 00:19:36,139
going through the Central Expressway and

00:19:34,009 --> 00:19:38,210
it will just be backed up and they

00:19:36,139 --> 00:19:40,460
charge you like three Singapore dollars

00:19:38,210 --> 00:19:41,419
for every kilometer I'm probably

00:19:40,460 --> 00:19:42,739
thinking you know I probably got the

00:19:41,419 --> 00:19:45,289
numbers reversed or something here but

00:19:42,739 --> 00:19:48,409
nonetheless it's pretty expensive this

00:19:45,289 --> 00:19:50,149
capability because it knows where your

00:19:48,409 --> 00:19:52,190
coreos what your car is can come back to

00:19:50,149 --> 00:19:55,070
you and say hey if you'll swing over to

00:19:52,190 --> 00:19:57,830
the southwest freeway instead of the

00:19:55,070 --> 00:19:59,570
central freeway you'll get there fast

00:19:57,830 --> 00:20:01,640
sir and give you a time estimate and

00:19:59,570 --> 00:20:04,159
I'll reduce your costs from three to one

00:20:01,640 --> 00:20:07,309
dollars for every kilometer you run and

00:20:04,159 --> 00:20:09,559
so it becomes a social mechanism that

00:20:07,309 --> 00:20:11,390
then transports back now this is done

00:20:09,559 --> 00:20:13,519
because of the fact that the thing is in

00:20:11,390 --> 00:20:16,010
constant communication these are always

00:20:13,519 --> 00:20:18,320
on environments even if you go through a

00:20:16,010 --> 00:20:21,679
tunnel and it disconnects it reconnects

00:20:18,320 --> 00:20:24,110
the protocol has to be capable of

00:20:21,679 --> 00:20:26,269
sustaining disconnection in an IOT

00:20:24,110 --> 00:20:28,460
environment MQTT is an always-on

00:20:26,269 --> 00:20:29,960
protocol but being able to cache this

00:20:28,460 --> 00:20:31,760
environments means that you get back

00:20:29,960 --> 00:20:35,299
whenever you come back into connection

00:20:31,760 --> 00:20:36,559
and that becomes a really unique the the

00:20:35,299 --> 00:20:39,080
person the architecture who built that

00:20:36,559 --> 00:20:41,450
this talks about for instance he lives a

00:20:39,080 --> 00:20:43,970
little bit out of town so his first 10

00:20:41,450 --> 00:20:45,980
kilometers are driving and he usually

00:20:43,970 --> 00:20:47,570
does it at 4 in the morning there's not

00:20:45,980 --> 00:20:50,120
a lot of cars and so he tends to

00:20:47,570 --> 00:20:52,669
slightly exceed the speed limit I think

00:20:50,120 --> 00:20:54,019
that's the way he phrases it by slightly

00:20:52,669 --> 00:20:55,760
exceed the speed limit is something like

00:20:54,019 --> 00:20:57,470
he does about two and a half times and

00:20:55,760 --> 00:20:59,570
speed limit for that section I think

00:20:57,470 --> 00:21:02,149
it's a 30 kilometer or 35 kilometers

00:20:59,570 --> 00:21:03,500
section and he does like 85 beside this

00:21:02,149 --> 00:21:04,700
and once a month he gets a letter from

00:21:03,500 --> 00:21:07,039
the police department saying we know

00:21:04,700 --> 00:21:09,019
you're doing this if you don't cut it

00:21:07,039 --> 00:21:11,090
out we're going to going to do something

00:21:09,019 --> 00:21:12,380
to you now they don't have a law that

00:21:11,090 --> 00:21:13,760
lets them do that but they could

00:21:12,380 --> 00:21:17,539
certainly say we know you're going to do

00:21:13,760 --> 00:21:18,440
this at 4:33 every morning and we're

00:21:17,539 --> 00:21:20,990
going to have a car sitting there

00:21:18,440 --> 00:21:23,090
waiting for you so there are good sides

00:21:20,990 --> 00:21:23,750
and bad sides inside of here but this is

00:21:23,090 --> 00:21:27,549
fairly simple

00:21:23,750 --> 00:21:30,769
now I wanted to talk about IOT protocols

00:21:27,549 --> 00:21:33,649
mainly because what's wrong one me only

00:21:30,769 --> 00:21:35,059
because there are a lot of them MQTT

00:21:33,649 --> 00:21:37,789
we've just talked about Message Queuing

00:21:35,059 --> 00:21:41,960
to let telemetry tracking be came out of

00:21:37,789 --> 00:21:43,820
the IBM MQ environments MQTT Sen for

00:21:41,960 --> 00:21:45,799
sensor network has a version that

00:21:43,820 --> 00:21:48,110
actually allows disconnected and

00:21:45,799 --> 00:21:50,210
reconnected sensors environments co-op

00:21:48,110 --> 00:21:53,960
constrained application protocol and you

00:21:50,210 --> 00:21:55,580
can go down the list DDS AMQP vance

00:21:53,960 --> 00:21:57,380
message and Queuing protocol it actually

00:21:55,580 --> 00:22:00,470
turns out to be very popular for IOT

00:21:57,380 --> 00:22:02,539
over here in Europe it's about 11

00:22:00,470 --> 00:22:05,899
percent usage and that sort of leads me

00:22:02,539 --> 00:22:07,669
to the next thing which is okay so I got

00:22:05,899 --> 00:22:11,549
a lot of these but you really only have

00:22:07,669 --> 00:22:14,210
to worry about two or three HTTP and the

00:22:11,549 --> 00:22:23,279
protocol is still the number one leader

00:22:14,210 --> 00:22:24,539
for whoops okay back yes HTTP rest

00:22:23,279 --> 00:22:28,529
protocols are still the number one

00:22:24,539 --> 00:22:31,639
leader for protocols in IOT space MQTT

00:22:28,529 --> 00:22:34,679
and co-op are the next few that follow

00:22:31,639 --> 00:22:37,980
this is data from the Eclipse Foundation

00:22:34,679 --> 00:22:42,210
I put two years on there okay so you can

00:22:37,980 --> 00:22:46,590
see that mqtt and co-op are the fastest

00:22:42,210 --> 00:22:51,350
grows and mq in IOT protocols however

00:22:46,590 --> 00:22:53,669
anybody who comes back and says none

00:22:51,350 --> 00:22:55,440
please don't talk to me because if

00:22:53,669 --> 00:22:57,690
you're not using a protocol for IOT

00:22:55,440 --> 00:23:01,919
traffic you got more problems to worry

00:22:57,690 --> 00:23:06,539
about then I'm going to solve so HTTP

00:23:01,919 --> 00:23:08,549
and MQTT first to coop special case so a

00:23:06,539 --> 00:23:10,169
little bit of consideration I've covered

00:23:08,549 --> 00:23:12,239
some of this you have to worry about

00:23:10,169 --> 00:23:14,249
connections subscriptions and queues

00:23:12,239 --> 00:23:16,440
that's how these devices talk to the

00:23:14,249 --> 00:23:19,259
backends you have to worry about message

00:23:16,440 --> 00:23:21,119
exchange patterns inside of here device

00:23:19,259 --> 00:23:23,700
initiate it pops up since we're talking

00:23:21,119 --> 00:23:26,549
to the backend and request reply clout

00:23:23,700 --> 00:23:28,559
initiated request fly is the other one

00:23:26,549 --> 00:23:30,570
that you have to worry about keep in

00:23:28,559 --> 00:23:32,730
mind with Cloud Foundry pivotal Cloud

00:23:30,570 --> 00:23:35,220
Foundry set forth these are not as easy

00:23:32,730 --> 00:23:38,309
as they look thankfully there was this

00:23:35,220 --> 00:23:42,299
thing called TCP routing or TCP roots

00:23:38,309 --> 00:23:44,960
which GE predix I first think they first

00:23:42,299 --> 00:23:48,539
talked about it in Cloud Foundry in 2015

00:23:44,960 --> 00:23:51,960
which allows me to natively handle mqtt

00:23:48,539 --> 00:23:53,609
into this environment so I mentioned

00:23:51,960 --> 00:23:55,679
that I that there was a workaround for

00:23:53,609 --> 00:23:58,889
MQTT going into Cloud Foundry I didn't

00:23:55,679 --> 00:24:01,080
have to go HTTP that's how TCP routes

00:23:58,889 --> 00:24:03,029
I think it's TPC routes are the way that

00:24:01,080 --> 00:24:05,340
you can manage to pull this off very

00:24:03,029 --> 00:24:06,600
slick piece of code the headache there

00:24:05,340 --> 00:24:09,529
is making sure that it scales

00:24:06,600 --> 00:24:13,499
appropriately to your environment

00:24:09,529 --> 00:24:16,499
come on so let's talk a little bit of

00:24:13,499 --> 00:24:21,090
quality of service and very quickly for

00:24:16,499 --> 00:24:23,190
this QoS is 0 is I'm gonna send it if it

00:24:21,090 --> 00:24:23,850
gets there good if it doesn't don't

00:24:23,190 --> 00:24:25,049
worry about it

00:24:23,850 --> 00:24:27,869
QoS 1

00:24:25,049 --> 00:24:30,119
I'm gonna send it and I'm gonna make

00:24:27,869 --> 00:24:32,369
sure that it gets there but you can

00:24:30,119 --> 00:24:33,749
duplicate the result and this is where

00:24:32,369 --> 00:24:35,700
time stamping can be your best friend

00:24:33,749 --> 00:24:37,440
entire side of a sensor environment you

00:24:35,700 --> 00:24:39,899
can easily identify duplicate

00:24:37,440 --> 00:24:41,460
environments here and then qs2 which is

00:24:39,899 --> 00:24:44,039
once in exactly once

00:24:41,460 --> 00:24:45,330
each of these require more traffic so

00:24:44,039 --> 00:24:47,610
when you're looking at this from a

00:24:45,330 --> 00:24:49,440
bandwidth viewpoint it becomes very

00:24:47,610 --> 00:24:51,659
important to realize that your bandwidth

00:24:49,440 --> 00:24:54,899
goes up as you the amount of traffic

00:24:51,659 --> 00:24:56,789
goes up there is a stateless challenge

00:24:54,899 --> 00:24:59,129
if you're doing multiple tiers like this

00:24:56,789 --> 00:25:01,169
when the device at the bottom tries to

00:24:59,129 --> 00:25:03,239
talk to its back in peace its load

00:25:01,169 --> 00:25:04,529
balanced into an environment because

00:25:03,239 --> 00:25:06,509
that's not a single computer in the

00:25:04,529 --> 00:25:08,039
middle here for that and then it then

00:25:06,509 --> 00:25:10,409
talks to another computer which talks

00:25:08,039 --> 00:25:11,789
into its application space if that

00:25:10,409 --> 00:25:13,710
connection goes away there is no

00:25:11,789 --> 00:25:16,470
guarantee that the load balancer will be

00:25:13,710 --> 00:25:19,169
restored to the correct point the point

00:25:16,470 --> 00:25:22,049
that it last was and so riding through a

00:25:19,169 --> 00:25:24,509
QoS 2 environment within a multiple

00:25:22,049 --> 00:25:27,509
environment firewalled and space is

00:25:24,509 --> 00:25:31,019
non-trivial it can be done but it is

00:25:27,509 --> 00:25:32,609
non-trivial when you go into a cloud

00:25:31,019 --> 00:25:34,830
environment where you then are crossing

00:25:32,609 --> 00:25:37,980
additional boundaries for networking

00:25:34,830 --> 00:25:41,749
it's even less non-trivial more

00:25:37,980 --> 00:25:43,980
non-trivial whichever way that works

00:25:41,749 --> 00:25:45,989
protocols I'm going to scream through

00:25:43,980 --> 00:25:48,559
this section because I can talk about

00:25:45,989 --> 00:25:52,970
this for about 4 hours but nonetheless

00:25:48,559 --> 00:25:57,269
AMQP great brand new fully standardized

00:25:52,970 --> 00:25:58,799
it supports TCP UDP high processing

00:25:57,269 --> 00:26:00,419
power you usually see this in the

00:25:58,799 --> 00:26:03,109
backend environment but I am beginning

00:26:00,419 --> 00:26:05,009
to see it show up in IOT environments

00:26:03,109 --> 00:26:07,619
particularly again here in Europe about

00:26:05,009 --> 00:26:10,200
11% of the marketplace is using AMQP as

00:26:07,619 --> 00:26:12,600
a sensor level environment to talk to

00:26:10,200 --> 00:26:15,480
the backend here it is bandwidth

00:26:12,600 --> 00:26:19,499
intensive header fields are big for that

00:26:15,480 --> 00:26:22,080
JMS everybody use JMS JMS owns the data

00:26:19,499 --> 00:26:24,269
center very honestly inside of here it's

00:26:22,080 --> 00:26:26,249
dependent on devices and there's no

00:26:24,269 --> 00:26:30,029
interoperability between stacks

00:26:26,249 --> 00:26:34,139
so while JMS defined a wire connection

00:26:30,029 --> 00:26:35,340
it did not define an API environment and

00:26:34,139 --> 00:26:37,230
so there is no guarantee that if you

00:26:35,340 --> 00:26:38,330
changed AMS providers that you will be

00:26:37,230 --> 00:26:40,809
able to

00:26:38,330 --> 00:26:44,059
after code without change inside of here

00:26:40,809 --> 00:26:45,470
all classes of service but there's new

00:26:44,059 --> 00:26:48,590
interoperability becomes a bit of a

00:26:45,470 --> 00:26:50,269
headache inside of here rest of course

00:26:48,590 --> 00:26:51,769
everybody knows rest rest lives

00:26:50,269 --> 00:26:55,309
everywhere to worry about it

00:26:51,769 --> 00:26:57,019
no QoS you're on your own no message

00:26:55,309 --> 00:27:02,179
exchange patterns you're on your own and

00:26:57,019 --> 00:27:04,130
rest is a blocking protocol so no rest

00:27:02,179 --> 00:27:07,519
will respond Brest is going to wait

00:27:04,130 --> 00:27:09,559
until it gets a respond and so in an IOT

00:27:07,519 --> 00:27:11,330
environment where you are passing

00:27:09,559 --> 00:27:13,399
messages around to say break because

00:27:11,330 --> 00:27:17,750
there's somebody inside of the the

00:27:13,399 --> 00:27:19,580
crosswalk may not be your best idea so

00:27:17,750 --> 00:27:20,809
you may need to be able to say I didn't

00:27:19,580 --> 00:27:21,549
get response to slammed the brakes on

00:27:20,809 --> 00:27:24,049
anyway

00:27:21,549 --> 00:27:26,529
reliability is application dependent so

00:27:24,049 --> 00:27:30,620
if it doesn't work you're on your own

00:27:26,529 --> 00:27:33,610
mqtt personal bias I like MQTT it's

00:27:30,620 --> 00:27:37,610
simple it's lightweight it's low-power

00:27:33,610 --> 00:27:40,340
but it doesn't support header fields so

00:27:37,610 --> 00:27:43,130
I don't know what's in the message until

00:27:40,340 --> 00:27:45,590
I open the message unlike all those

00:27:43,130 --> 00:27:47,539
others and so that means that adds

00:27:45,590 --> 00:27:49,820
another layer of complexity so that I

00:27:47,539 --> 00:27:51,740
can no longer do really good routing I

00:27:49,820 --> 00:27:53,059
have to open the packet to see what's in

00:27:51,740 --> 00:27:54,710
the packet before I can take the back

00:27:53,059 --> 00:27:57,380
into the right place I can do header

00:27:54,710 --> 00:28:00,200
routing but I can't do content routing

00:27:57,380 --> 00:28:00,559
and MQTT be kind of nice to have those

00:28:00,200 --> 00:28:02,899
things

00:28:00,559 --> 00:28:04,639
it also doesn't directly support queuing

00:28:02,899 --> 00:28:06,110
capabilities and so there's some

00:28:04,639 --> 00:28:08,480
headaches inside of that it does have an

00:28:06,110 --> 00:28:10,039
S kin n version and then constrain

00:28:08,480 --> 00:28:14,750
application protocol if you remember the

00:28:10,039 --> 00:28:17,090
list HTTP MQTT coop coop is a request

00:28:14,750 --> 00:28:18,559
reply model pub/sub is coming it's been

00:28:17,090 --> 00:28:18,889
coming for about a couple years now it's

00:28:18,559 --> 00:28:22,429
here

00:28:18,889 --> 00:28:24,710
this runs below TCP it runs on the UDP

00:28:22,429 --> 00:28:27,440
level and so if you're going to cross

00:28:24,710 --> 00:28:29,690
bridges and go beyond that to 127

00:28:27,440 --> 00:28:31,970
devices you're on your own there are

00:28:29,690 --> 00:28:34,010
some great bridging tools if you want

00:28:31,970 --> 00:28:36,679
more information I'm running out of time

00:28:34,010 --> 00:28:39,860
stuff I'm in booth upstairs I'll I'll

00:28:36,679 --> 00:28:41,389
discuss those with you so quick summary

00:28:39,860 --> 00:28:42,429
so I can have two minutes of questions

00:28:41,389 --> 00:28:46,159
here

00:28:42,429 --> 00:28:48,620
IOT has been an interesting light riding

00:28:46,159 --> 00:28:50,570
IOT without dealing with the cloud is

00:28:48,620 --> 00:28:51,890
fairly straightforward problem it is

00:28:50,570 --> 00:28:54,679
still a scale problem

00:28:51,890 --> 00:28:57,170
adding the cloud into this IOT space and

00:28:54,679 --> 00:28:59,620
are not using any of the current IOT

00:28:57,170 --> 00:29:01,850
platforms that exist in public clouds as

00:28:59,620 --> 00:29:05,000
an observation I haven't tried this yet

00:29:01,850 --> 00:29:07,160
is non-trivial and it's all about how

00:29:05,000 --> 00:29:09,679
the data communicates and how the data

00:29:07,160 --> 00:29:12,020
moves in and out inside of your so the

00:29:09,679 --> 00:29:15,500
one thing I can say is if you can stay

00:29:12,020 --> 00:29:18,230
with the standard wire protocols do not

00:29:15,500 --> 00:29:20,960
get trapped into a proprietary structure

00:29:18,230 --> 00:29:23,690
for your data inside of here and be as

00:29:20,960 --> 00:29:26,510
flexible as possible in movement and

00:29:23,690 --> 00:29:29,630
with that then information is me you can

00:29:26,510 --> 00:29:33,200
find me on let's see Twitter Facebook or

00:29:29,630 --> 00:29:35,450
Skype on those on LinkedIn or github and

00:29:33,200 --> 00:29:39,230
Dede McAllister on LinkedIn I'm Dave

00:29:35,450 --> 00:29:40,790
Mack here emails here if you want to

00:29:39,230 --> 00:29:43,850
play with this yourself there are two

00:29:40,790 --> 00:29:46,910
things the DMR that I mentioned here is

00:29:43,850 --> 00:29:50,090
free complete usage you go find it on

00:29:46,910 --> 00:29:52,820
our devs portal and source code is

00:29:50,090 --> 00:29:54,260
available in github for that and while

00:29:52,820 --> 00:29:57,530
y'all are reading this is my favorite

00:29:54,260 --> 00:29:58,640
connected car autonomous car car teen of

00:29:57,530 --> 00:30:00,590
all times

00:29:58,640 --> 00:30:02,600
if I ever owned if I've never rich

00:30:00,590 --> 00:30:04,309
enough to own you know like a Tesla I'm

00:30:02,600 --> 00:30:14,150
never going to leave it running inside

00:30:04,309 --> 00:30:16,419
of that with that questions shock if not

00:30:14,150 --> 00:30:16,419
yes

00:30:24,230 --> 00:30:29,879
so the question is why did not use the

00:30:26,999 --> 00:30:31,320
MQTT over WebSockets and I could but the

00:30:29,879 --> 00:30:32,669
the headache becomes when you start

00:30:31,320 --> 00:30:35,879
trying to look at that as a scale

00:30:32,669 --> 00:30:37,320
problem so if you're setting up 10000

00:30:35,879 --> 00:30:40,889
WebSockets at the same time you're

00:30:37,320 --> 00:30:42,690
setting up 10000 separate MQTT queues it

00:30:40,889 --> 00:30:44,100
becomes a challenging problem to be able

00:30:42,690 --> 00:30:46,289
to manage both of those environments

00:30:44,100 --> 00:30:48,239
separately I nailed them to be able to

00:30:46,289 --> 00:30:49,739
relate every single cue to every single

00:30:48,239 --> 00:30:50,609
time think of it in a sense that I'm

00:30:49,739 --> 00:30:53,220
gonna be setting up a virtual

00:30:50,609 --> 00:30:56,340
environment for every single connection

00:30:53,220 --> 00:30:58,169
point whereas mqt already has that

00:30:56,340 --> 00:31:01,080
capability built into it to recognize

00:30:58,169 --> 00:31:03,269
each device bias message header fields

00:31:01,080 --> 00:31:07,109
and so it's simplifies the problems to

00:31:03,269 --> 00:31:09,330
simply use MQTT as a native basis so yes

00:31:07,109 --> 00:31:11,940
that would work in my my emerald Park

00:31:09,330 --> 00:31:13,470
example but it would not work for a

00:31:11,940 --> 00:31:20,070
connected car company who's trying to

00:31:13,470 --> 00:31:21,570
run 8 million cars if not I will be in

00:31:20,070 --> 00:31:23,220
our booth if you got questions or just

00:31:21,570 --> 00:31:25,080
want to tell me what you're doing in IOT

00:31:23,220 --> 00:31:26,820
cuz I love to hear stories inside of

00:31:25,080 --> 00:31:29,360
that thanks for your time and attention

00:31:26,820 --> 00:31:34,250
and enjoy the rest of the show

00:31:29,360 --> 00:31:34,250

YouTube URL: https://www.youtube.com/watch?v=4U1zXjdhUnA


