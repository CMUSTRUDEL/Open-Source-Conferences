Title: An Introduction to BUCC (BOSH, UAA, Credhub and Concourse) - Ruben Koster & Ramon Makkelie
Publication date: 2017-10-18
Playlist: Cloud Foundry Summit Europe 2017
Description: 
	An Introduction to BUCC (BOSH, UAA, Credhub and Concourse) - Ruben Koster & Ramon Makkelie, Stark & Wayne

The benefits of using BUCC (BOSH, UAA, Credhub and Concourse) will be demonstrated, by creating a real world concourse pipeline to deploy a production Cloud Foundry, using the cf-deployment repository. Topics which will be discussed include: cloud-config, config-server, credhub, Concourse Credhub integration, variables in deployment manifests.

About Ruben Koster
Ruben Koster is a Cloud Foundry / BOSH veteran and has been an active in the community for more then 5 years. As the first employee of Stark & Wayne he has given customer training, spoken at the S&W academy and meetup presentations. 

Some of his recent project are:
- https://github.com/starkandwayne/bucc
- https://github.com/cloudfoundry-community/bosh2-errand-resource
- https://github.com/cloudfoundry-community/credhub-resource

About Ramon Makkelie
Ramon Makkelie is a Cloud Foundry / BOSH expert and has been active in the community for more then 5 years. used Cloudfoundry from day 1 and have used this knowledge to setup Cloudfoundry/BOSH at a mayor airliner Some of his recent project are: - https://github.com/starkandwayne/bucc - https://github.com/cloudfoundry-community/habitat-boshrelease
Captions: 
	00:00:00,030 --> 00:00:07,980
so let's start okay

00:00:04,410 --> 00:00:09,540
yeah we're going to talk about buck give

00:00:07,980 --> 00:00:14,429
an introduction to it it's a tool that

00:00:09,540 --> 00:00:16,410
we created together buck sense for it's

00:00:14,429 --> 00:00:20,160
an acronym stands for Porsche you a a

00:00:16,410 --> 00:00:24,000
credit and concourse and we create a

00:00:20,160 --> 00:00:26,070
utility which also called buck in lower

00:00:24,000 --> 00:00:30,599
case

00:00:26,070 --> 00:00:34,260
yeah I'm Ruben and this is Ramon and we

00:00:30,599 --> 00:00:35,550
work for stock going you know from the

00:00:34,260 --> 00:00:40,710
awesome shirts that we don't have at the

00:00:35,550 --> 00:00:43,469
moment ridiculous for people that don't

00:00:40,710 --> 00:00:48,620
know start going to consultancy around

00:00:43,469 --> 00:00:52,170
cloud foundry and Porsche yeah so but

00:00:48,620 --> 00:00:57,180
it's open source just you can get it

00:00:52,170 --> 00:01:02,219
from get up but we this talk will be

00:00:57,180 --> 00:01:05,880
more about like the things underneath

00:01:02,219 --> 00:01:08,159
Burke or yet that helps us build back we

00:01:05,880 --> 00:01:11,280
have another session later today where

00:01:08,159 --> 00:01:15,000
we go into really show of the buck

00:01:11,280 --> 00:01:16,830
utility this is more about Porsche you a

00:01:15,000 --> 00:01:19,080
a credit bank on course and the new

00:01:16,830 --> 00:01:22,009
things in that and how they really fit

00:01:19,080 --> 00:01:22,009
together really well

00:01:22,460 --> 00:01:30,960
so why did we create buck yeah it was we

00:01:28,710 --> 00:01:34,890
saw the new developments with CF

00:01:30,960 --> 00:01:37,590
deployment the CF deployment we repo and

00:01:34,890 --> 00:01:41,509
got really excited about wanting to use

00:01:37,590 --> 00:01:45,149
that in a production manner like have

00:01:41,509 --> 00:01:46,950
using Bosch config server for credential

00:01:45,149 --> 00:01:49,560
management and all those things but it

00:01:46,950 --> 00:01:54,000
still felt getting an environment for

00:01:49,560 --> 00:01:57,780
that up and running a bit troublesome I

00:01:54,000 --> 00:02:00,000
really liked Bosch light for development

00:01:57,780 --> 00:02:05,640
purposes so I wanted to have some of the

00:02:00,000 --> 00:02:09,039
user experience of bar slide and I

00:02:05,640 --> 00:02:12,970
brought that to ya

00:02:09,039 --> 00:02:14,500
wash create and for yes so when you

00:02:12,970 --> 00:02:16,420
first go to the Bosch deployment repo

00:02:14,500 --> 00:02:19,150
you think what the hell do I need to do

00:02:16,420 --> 00:02:21,280
here yeah so we figured out we need to

00:02:19,150 --> 00:02:24,849
build something around that really small

00:02:21,280 --> 00:02:26,680
thing so Debbie we can just we invoke

00:02:24,849 --> 00:02:28,599
the Bosch deployment and you can just to

00:02:26,680 --> 00:02:30,849
buck up and there should be something

00:02:28,599 --> 00:02:33,879
there the same thing you do we did with

00:02:30,849 --> 00:02:36,099
Bosch light ice tinkering and codes in

00:02:33,879 --> 00:02:38,620
the next slide yeah so we have some few

00:02:36,099 --> 00:02:41,079
ingredients for it so what were the

00:02:38,620 --> 00:02:44,530
things that allowed us to create barks

00:02:41,079 --> 00:02:48,430
Odie first yeah we have this just this

00:02:44,530 --> 00:02:49,599
new paradigm of creating deployment

00:02:48,430 --> 00:02:51,910
repos

00:02:49,599 --> 00:02:53,920
- deployment repos for example you have

00:02:51,910 --> 00:02:55,959
to Cloud Foundry deplore CF deployment

00:02:53,920 --> 00:02:58,980
repo you have to Bosch deployment repos

00:02:55,959 --> 00:03:01,720
but there are more deployment repos for

00:02:58,980 --> 00:03:03,280
ya more and more Porsche releases coming

00:03:01,720 --> 00:03:06,370
up so you have like the brush release

00:03:03,280 --> 00:03:10,629
but Joseph the deployment repo and the

00:03:06,370 --> 00:03:13,540
deployment repo is it's for where

00:03:10,629 --> 00:03:15,910
release maintainer can publish manifests

00:03:13,540 --> 00:03:17,560
and not like manifests that just work in

00:03:15,910 --> 00:03:20,560
one environment but manifests that are

00:03:17,560 --> 00:03:24,220
built for shareability right so you have

00:03:20,560 --> 00:03:29,049
a base manifest and the base manifests

00:03:24,220 --> 00:03:30,940
you can enable features or and yeah

00:03:29,049 --> 00:03:33,519
enable some features for that manifest

00:03:30,940 --> 00:03:35,889
and that's done with ops files that's

00:03:33,519 --> 00:03:38,260
something that we now have because of

00:03:35,889 --> 00:03:40,480
the new bar CLI that brought us ops

00:03:38,260 --> 00:03:43,299
files so those are used in those

00:03:40,480 --> 00:03:46,030
deployment repos another thing is the

00:03:43,299 --> 00:03:49,389
new bar CLI has support for variables so

00:03:46,030 --> 00:03:50,829
things that are in there's no seam same

00:03:49,389 --> 00:03:51,940
defaults for something for example a

00:03:50,829 --> 00:03:54,310
domain for your Cloud Foundry

00:03:51,940 --> 00:03:57,629
deployments that will be a variable

00:03:54,310 --> 00:04:02,590
other things like secrets and stuff

00:03:57,629 --> 00:04:07,139
those will be generated by the CLI and

00:04:02,590 --> 00:04:11,680
stored in a forest or more on that later

00:04:07,139 --> 00:04:14,590
yeah so they are really built for share

00:04:11,680 --> 00:04:18,219
a bit with your ability in mind that the

00:04:14,590 --> 00:04:21,579
bush deployments repo is now actually

00:04:18,219 --> 00:04:22,630
referenced a lot in the borscht dogs so

00:04:21,579 --> 00:04:24,640
it's like the standard

00:04:22,630 --> 00:04:28,660
to do things the recommended way to do

00:04:24,640 --> 00:04:31,030
things actually even a style guide in CF

00:04:28,660 --> 00:04:33,580
deployment about how to how those

00:04:31,030 --> 00:04:39,060
deployment repos should be laid out and

00:04:33,580 --> 00:04:41,290
what are best practices around them and

00:04:39,060 --> 00:04:43,240
yeah I don't know if this already

00:04:41,290 --> 00:04:46,090
happened but like CF deployment will be

00:04:43,240 --> 00:04:48,430
replacing the CF release right so CF

00:04:46,090 --> 00:04:52,510
release is big release where all sorts

00:04:48,430 --> 00:04:54,880
of Bosch releases are meshed together

00:04:52,510 --> 00:04:57,250
into one big release and with the

00:04:54,880 --> 00:05:00,040
deployment CF deployment it's going to

00:04:57,250 --> 00:05:02,170
like one big manifest which references

00:05:00,040 --> 00:05:06,490
all those separate releases so you have

00:05:02,170 --> 00:05:09,430
those sort of the compatibility matrix

00:05:06,490 --> 00:05:12,670
basically is owned by CF deployment

00:05:09,430 --> 00:05:16,150
instead of CF release or at least that's

00:05:12,670 --> 00:05:21,370
I don't know if already happened that's

00:05:16,150 --> 00:05:22,840
basically the idea so yeah and the nice

00:05:21,370 --> 00:05:24,970
thing about the new bush is that we have

00:05:22,840 --> 00:05:27,990
we have this whole notion of bosh

00:05:24,970 --> 00:05:31,000
compile releases we used to have these

00:05:27,990 --> 00:05:33,130
Bush compile package cache where you we

00:05:31,000 --> 00:05:36,790
all write me redirect to one big package

00:05:33,130 --> 00:05:39,340
cache which will basically see from ok

00:05:36,790 --> 00:05:42,610
which release do I have which stem cell

00:05:39,340 --> 00:05:44,560
do I which stem cell do I need for it so

00:05:42,610 --> 00:05:47,230
now we have the bush compiled releases

00:05:44,560 --> 00:05:48,850
and the nice thing about this is what we

00:05:47,230 --> 00:05:51,730
could we also do we will show you in a

00:05:48,850 --> 00:05:55,020
minute is that we would park we say that

00:05:51,730 --> 00:05:59,110
we want to deploy it almost try to

00:05:55,020 --> 00:06:00,610
install Bush almost offline because most

00:05:59,110 --> 00:06:03,580
of the time we have crappy internet and

00:06:00,610 --> 00:06:09,670
we we want to have the ability to just

00:06:03,580 --> 00:06:11,620
deploy Bosh and so yeah one of the main

00:06:09,670 --> 00:06:14,230
reasons for this for why this is

00:06:11,620 --> 00:06:15,730
relevant to buck is because one of the

00:06:14,230 --> 00:06:18,940
goals is we wanted to have a borscht

00:06:15,730 --> 00:06:20,980
light experience like them with both

00:06:18,940 --> 00:06:24,430
light for those if you don't know that

00:06:20,980 --> 00:06:25,630
was like a vagrant based machine where

00:06:24,430 --> 00:06:29,920
you could really easily have your

00:06:25,630 --> 00:06:31,900
borscht running and so for our speed was

00:06:29,920 --> 00:06:34,270
important right because in development

00:06:31,900 --> 00:06:34,850
scenarios you will be often tearing down

00:06:34,270 --> 00:06:38,210
your arm

00:06:34,850 --> 00:06:41,510
than building it back up so compiles

00:06:38,210 --> 00:06:43,670
releases basically with compiled

00:06:41,510 --> 00:06:45,590
releases you skip the whole compilation

00:06:43,670 --> 00:06:47,390
step during deployment so that's what

00:06:45,590 --> 00:06:48,950
was one of the reasons why it was

00:06:47,390 --> 00:06:52,790
important for us to use compiled

00:06:48,950 --> 00:06:54,680
releases yeah I think it it takes about

00:06:52,790 --> 00:06:59,780
20 minutes off 20 minutes of our

00:06:54,680 --> 00:07:02,210
deployment yeah so yeah further those

00:06:59,780 --> 00:07:04,180
are secrets I don't know if anyone here

00:07:02,210 --> 00:07:09,580
is no credit

00:07:04,180 --> 00:07:17,420
so what we kind of seeding

00:07:09,580 --> 00:07:19,910
it's really small yeah so yeah what we

00:07:17,420 --> 00:07:21,770
invoke with buck is that because firstly

00:07:19,910 --> 00:07:24,580
nature your credentials for deploying

00:07:21,770 --> 00:07:28,250
wash and you need you need to generate

00:07:24,580 --> 00:07:30,590
something and we don't want to do that

00:07:28,250 --> 00:07:33,080
we want someone else need to handle that

00:07:30,590 --> 00:07:34,790
and we do this with Bosch in so Bosch

00:07:33,080 --> 00:07:37,540
and then we have a fairly named food

00:07:34,790 --> 00:07:39,830
type password and it will be stores

00:07:37,540 --> 00:07:41,540
incredible this is the same time it's

00:07:39,830 --> 00:07:44,210
the same thing what we do with buck

00:07:41,540 --> 00:07:47,810
because buck up we'll just do a bush in

00:07:44,210 --> 00:07:52,520
it and it will set a set of passwords

00:07:47,810 --> 00:07:56,510
that you need for the directory password

00:07:52,520 --> 00:07:58,820
the uiui a username and passwords and

00:07:56,510 --> 00:08:01,100
that kind of stuff so as you can see

00:07:58,820 --> 00:08:04,430
it's just been put in credit um oh and

00:08:01,100 --> 00:08:06,380
if you do if you use backup there will

00:08:04,430 --> 00:08:08,740
be a credit or GMO created and that's

00:08:06,380 --> 00:08:14,510
where all the fire variables will be

00:08:08,740 --> 00:08:16,490
secrets where all the secrets will be so

00:08:14,510 --> 00:08:23,470
this is the Bush conflicts this is how

00:08:16,490 --> 00:08:26,440
we when we want to use it with which

00:08:23,470 --> 00:08:28,820
Chris in the concourse pipeline

00:08:26,440 --> 00:08:29,680
so this is our listener now this is not

00:08:28,820 --> 00:08:31,660
a goodbye

00:08:29,680 --> 00:08:35,140
I'm getting ahead of myself so this is

00:08:31,660 --> 00:08:37,360
for a deployment for is if you can see

00:08:35,140 --> 00:08:40,599
here daughter daughter swarm and all

00:08:37,360 --> 00:08:42,940
that the doctor TL SCA the doctor TLS

00:08:40,599 --> 00:08:46,510
certificate the private key it's all

00:08:42,940 --> 00:08:49,720
generated by credit because cred up is

00:08:46,510 --> 00:08:53,380
the config server in Bush yeah so okay

00:08:49,720 --> 00:08:55,900
so what's important to note here is the

00:08:53,380 --> 00:08:57,700
variables right so that's in the barge

00:08:55,900 --> 00:08:59,980
deployment manifests you can specify

00:08:57,700 --> 00:09:02,140
variables and that's basically where you

00:08:59,980 --> 00:09:03,400
say those will be generated variables

00:09:02,140 --> 00:09:05,920
and they're like two ways those

00:09:03,400 --> 00:09:07,540
variables can be generated like if you

00:09:05,920 --> 00:09:09,850
have your full director up and running

00:09:07,540 --> 00:09:13,120
then it will be done by config server

00:09:09,850 --> 00:09:15,010
right config and config server there are

00:09:13,120 --> 00:09:18,880
multiple config server implementations

00:09:15,010 --> 00:09:22,390
one of them is cred up which is becoming

00:09:18,880 --> 00:09:24,160
the facto standard but ya config servers

00:09:22,390 --> 00:09:26,140
our pluggable but they should be able to

00:09:24,160 --> 00:09:27,910
take those things and generate the

00:09:26,140 --> 00:09:30,070
secret and storage as for the director

00:09:27,910 --> 00:09:31,510
to get it back later but the problem is

00:09:30,070 --> 00:09:34,660
when you are creating your initial

00:09:31,510 --> 00:09:36,880
director you don't have your credit yeah

00:09:34,660 --> 00:09:42,070
or your thing so that's why it is the

00:09:36,880 --> 00:09:45,910
same functionality exists in the CLI

00:09:42,070 --> 00:09:48,820
that was like this is what like the boss

00:09:45,910 --> 00:09:51,040
UI has its own credit implementation

00:09:48,820 --> 00:09:53,470
basically and this is just showing that

00:09:51,040 --> 00:09:58,360
you can generate passwords with the poor

00:09:53,470 --> 00:10:00,700
CLI but in the end it's just using those

00:09:58,360 --> 00:10:04,720
variables in the manifest and they will

00:10:00,700 --> 00:10:12,270
be either stored in a in a creds file or

00:10:04,720 --> 00:10:17,820
they will be stored incredible yeah oh

00:10:12,270 --> 00:10:17,820
yeah yeah okay there you go

00:10:18,150 --> 00:10:25,600
okay yeah so the manifest we saw

00:10:23,080 --> 00:10:28,029
previously that was like the thing for

00:10:25,600 --> 00:10:29,800
docker so we are actually deploying this

00:10:28,029 --> 00:10:32,410
docker deployment here you see that it

00:10:29,800 --> 00:10:34,300
finishes and then we have we can use the

00:10:32,410 --> 00:10:36,870
boy CLI to list the variables that were

00:10:34,300 --> 00:10:48,930
generated you see the paths here

00:10:36,870 --> 00:10:52,190
hey wait huh yeah it works yeah this is

00:10:48,930 --> 00:10:54,690
the bosch director name this is the

00:10:52,190 --> 00:10:57,360
deployment name and this is the variable

00:10:54,690 --> 00:11:00,570
name so that's just how they will be man

00:10:57,360 --> 00:11:04,470
enough just to how default is generated

00:11:00,570 --> 00:11:07,560
and we can then use their credit of CLI

00:11:04,470 --> 00:11:09,900
to actually get one of those secrets

00:11:07,560 --> 00:11:14,130
back so this is what happens when you're

00:11:09,900 --> 00:11:20,130
using credit instead of borsch far store

00:11:14,130 --> 00:11:22,830
flight okay and now it's got boring

00:11:20,130 --> 00:11:25,470
exciting because really recently we

00:11:22,830 --> 00:11:29,460
haven't even published this version of

00:11:25,470 --> 00:11:32,280
duck yet but concourse has now support

00:11:29,460 --> 00:11:35,400
for they added credential manager

00:11:32,280 --> 00:11:40,140
support initially for false but they now

00:11:35,400 --> 00:11:44,210
also have support for credit which means

00:11:40,140 --> 00:11:53,730
that we can now connect the concourse

00:11:44,210 --> 00:11:55,890
which we deploy with back to okay yeah

00:11:53,730 --> 00:11:58,470
connect it as well so you see that the

00:11:55,890 --> 00:12:00,690
variable syntax is really similar so the

00:11:58,470 --> 00:12:02,760
use case we have is you setup your

00:12:00,690 --> 00:12:05,730
pipeline and from the pipeline you want

00:12:02,760 --> 00:12:06,990
to start deploying stuff right but you

00:12:05,730 --> 00:12:10,020
need to connect a connection to a

00:12:06,990 --> 00:12:11,000
director but yeah how do you get those

00:12:10,020 --> 00:12:14,760
credentials

00:12:11,000 --> 00:12:15,120
yeah you use variables so you can do

00:12:14,760 --> 00:12:21,270
this

00:12:15,120 --> 00:12:26,610
and when you run it you get this it

00:12:21,270 --> 00:12:29,400
expects to find those variables and yeah

00:12:26,610 --> 00:12:34,800
so we have this this inception problem

00:12:29,400 --> 00:12:37,320
right we we create this VM with borscht

00:12:34,800 --> 00:12:38,380
UA a credit and concourse all running

00:12:37,320 --> 00:12:40,600
together

00:12:38,380 --> 00:12:42,640
but the variables for those things the

00:12:40,600 --> 00:12:45,250
secrets were generated and are stored in

00:12:42,640 --> 00:12:50,410
a file right on your machine where you

00:12:45,250 --> 00:12:52,540
initially created run backup from and so

00:12:50,410 --> 00:12:55,530
what we want is basically we want to

00:12:52,540 --> 00:12:59,530
have some of those credentials end up in

00:12:55,530 --> 00:13:04,720
in concourse in credit and then later

00:12:59,530 --> 00:13:06,400
conkers to be used in concourse this is

00:13:04,720 --> 00:13:07,930
this way so that's why I have we have

00:13:06,400 --> 00:13:10,630
came up with a solution like read up

00:13:07,930 --> 00:13:12,610
importer so it will take everything that

00:13:10,630 --> 00:13:16,950
we created in our step that we set up

00:13:12,610 --> 00:13:19,360
Bosch with buck yes to send here and ok

00:13:16,950 --> 00:13:21,340
so when everyone was what everything was

00:13:19,360 --> 00:13:24,190
watch for said I would block it has all

00:13:21,340 --> 00:13:26,740
these it knows all these credentials but

00:13:24,190 --> 00:13:29,560
it isn't yet in crema and in the credit

00:13:26,740 --> 00:13:31,780
part where concourse can access it so

00:13:29,560 --> 00:13:34,060
what we do is we create up importer it

00:13:31,780 --> 00:13:37,030
just simply gets all the credentials

00:13:34,060 --> 00:13:42,100
variables and we'll just put it in to

00:13:37,030 --> 00:13:47,110
put it into credit and then we have this

00:13:42,100 --> 00:13:48,850
no we don't have an example problem we

00:13:47,110 --> 00:13:50,740
have in our next talk we are having our

00:13:48,850 --> 00:13:52,960
next talk and annex talk we are going to

00:13:50,740 --> 00:13:59,110
show the demo and how we are going to

00:13:52,960 --> 00:14:01,320
use so yeah it's also if anyone wants

00:13:59,110 --> 00:14:04,450
the same it also wants to import their

00:14:01,320 --> 00:14:07,180
have an have their own boss release and

00:14:04,450 --> 00:14:08,830
I want to import stuff into cred up they

00:14:07,180 --> 00:14:10,360
can use to credibly important yeah it's

00:14:08,830 --> 00:14:12,790
really simple it's just a bush release

00:14:10,360 --> 00:14:14,800
with a with one manifest in which you

00:14:12,790 --> 00:14:18,120
specify the credit the credit or

00:14:14,800 --> 00:14:24,880
credentials that need to be seated into

00:14:18,120 --> 00:14:30,550
yeah yeah no use cases right yeah I

00:14:24,880 --> 00:14:31,930
forgot yeah yeah so I use it myself a

00:14:30,550 --> 00:14:33,550
lot for development purposes

00:14:31,930 --> 00:14:35,980
I don't know creating borscht releases

00:14:33,550 --> 00:14:38,670
it's stuff I first it through our slide

00:14:35,980 --> 00:14:42,340
but now with all the new Porshe features

00:14:38,670 --> 00:14:46,060
it's creating concourse pipelines but

00:14:42,340 --> 00:14:48,620
also yeah working on - deployment repos

00:14:46,060 --> 00:14:50,810
right that's yeah

00:14:48,620 --> 00:14:53,890
when working on those it's really nice

00:14:50,810 --> 00:14:58,370
to have all those things together and

00:14:53,890 --> 00:15:01,040
yeah for production it's also sometimes

00:14:58,370 --> 00:15:04,580
really useful to have like a concourse

00:15:01,040 --> 00:15:06,800
running alongside your borscht so it's

00:15:04,580 --> 00:15:07,880
not for environments where so sometimes

00:15:06,800 --> 00:15:09,680
you have environments where you if like

00:15:07,880 --> 00:15:11,990
you have one concourse and you go out to

00:15:09,680 --> 00:15:14,750
many different environments but if

00:15:11,990 --> 00:15:17,510
you're not doing that or you don't have

00:15:14,750 --> 00:15:19,339
access network access to all those

00:15:17,510 --> 00:15:22,490
separate environments it can be really

00:15:19,339 --> 00:15:27,200
helpful to just have like one machine

00:15:22,490 --> 00:15:29,630
with a concourse co-located because like

00:15:27,200 --> 00:15:32,270
you can scale out your concourse with

00:15:29,630 --> 00:15:34,250
this approach right so it's not for a

00:15:32,270 --> 00:15:38,770
big build cluster but it's more for

00:15:34,250 --> 00:15:41,240
running a deployment job once or yeah

00:15:38,770 --> 00:15:42,650
update stem-cell pipeline right all

00:15:41,240 --> 00:15:45,320
those pipelines that are really tied to

00:15:42,650 --> 00:15:47,210
borscht it it's really useful to have

00:15:45,320 --> 00:15:50,230
those running on the same machine it

00:15:47,210 --> 00:15:50,230
makes it easier to manage

00:15:53,960 --> 00:16:00,830
so yeah we need to keep back up to date

00:15:56,690 --> 00:16:03,890
because it it evolves and we have a lot

00:16:00,830 --> 00:16:07,250
of because the Bosch deployments will go

00:16:03,890 --> 00:16:08,899
get new versions every week the Concours

00:16:07,250 --> 00:16:11,420
release will probably be released every

00:16:08,899 --> 00:16:13,220
two weeks the credit CLI as well so what

00:16:11,420 --> 00:16:17,360
we do is we build a big pipeline where

00:16:13,220 --> 00:16:19,339
it gets to resources from from the Bosch

00:16:17,360 --> 00:16:22,160
deployments from the concourse releases

00:16:19,339 --> 00:16:24,940
and then it will compile all these

00:16:22,160 --> 00:16:27,589
releases that are not yet compiled yet

00:16:24,940 --> 00:16:30,020
so that's that's the whole thing that

00:16:27,589 --> 00:16:38,570
you then can use it in a more offline

00:16:30,020 --> 00:16:42,380
environment yeah so this is the next

00:16:38,570 --> 00:16:44,540
step yeah so I want to big talk a bit

00:16:42,380 --> 00:16:48,050
about the history of sharing within the

00:16:44,540 --> 00:16:51,200
bush community so first yeah we had Bush

00:16:48,050 --> 00:16:51,709
releases and they were on github and we

00:16:51,200 --> 00:16:54,110
needed

00:16:51,709 --> 00:16:58,160
I don't know at some point people

00:16:54,110 --> 00:17:00,080
started publishing tar stars of final

00:16:58,160 --> 00:17:02,959
releases so you wouldn't have to create

00:17:00,080 --> 00:17:06,140
your Bush first you had to like before

00:17:02,959 --> 00:17:07,880
that you had to clone the repo and then

00:17:06,140 --> 00:17:09,170
do the bush create release and that

00:17:07,880 --> 00:17:11,809
would put download everything created

00:17:09,170 --> 00:17:13,819
things so that that has evolved and now

00:17:11,809 --> 00:17:16,819
we have like Bosch i/o which is awesome

00:17:13,819 --> 00:17:18,470
so we just I don't know Bosch see like a

00:17:16,819 --> 00:17:22,540
need to fetch releases and that's nice

00:17:18,470 --> 00:17:26,089
so that's all happened and after that

00:17:22,540 --> 00:17:28,640
started to work on I don't know how do

00:17:26,089 --> 00:17:30,770
you share deployments right how do you

00:17:28,640 --> 00:17:32,300
make your manifest how to so we had all

00:17:30,770 --> 00:17:34,250
patterns sorts of patterns there it

00:17:32,300 --> 00:17:37,100
started with examples that lives in

00:17:34,250 --> 00:17:41,720
Bosch releases and we had some spiff

00:17:37,100 --> 00:17:44,030
spruce face I don't know stuff how to

00:17:41,720 --> 00:17:48,050
generate and concatenate all those

00:17:44,030 --> 00:17:51,770
manifests but yeah that that now has

00:17:48,050 --> 00:17:54,679
evolved to deployment repos being

00:17:51,770 --> 00:17:57,260
published and the noob or CLI that's

00:17:54,679 --> 00:18:00,290
like all I don't know stabilizing around

00:17:57,260 --> 00:18:02,840
some common patterns and I think like

00:18:00,290 --> 00:18:04,340
the next challenge will be around how

00:18:02,840 --> 00:18:06,620
are we gonna

00:18:04,340 --> 00:18:09,460
chair concours pipelines how are we

00:18:06,620 --> 00:18:12,289
going to generate them how are we gonna

00:18:09,460 --> 00:18:16,490
yeah make them shareable like useful for

00:18:12,289 --> 00:18:20,779
others because I don't know a deployment

00:18:16,490 --> 00:18:22,909
repo there's a link with a concours

00:18:20,779 --> 00:18:24,980
pipeline probably right you also want to

00:18:22,909 --> 00:18:27,440
have this pipeline to deploy it which

00:18:24,980 --> 00:18:29,870
has knowledge about what errands to run

00:18:27,440 --> 00:18:32,809
and stuff like that so that's why I want

00:18:29,870 --> 00:18:34,789
to create this base to start developing

00:18:32,809 --> 00:18:37,000
on because I think like the core

00:18:34,789 --> 00:18:39,770
technologies here from like the bark

00:18:37,000 --> 00:18:42,289
acronym those core technologies think

00:18:39,770 --> 00:18:46,730
days are alike a nice foundation to

00:18:42,289 --> 00:18:49,549
build up on top of the next yeah way of

00:18:46,730 --> 00:18:51,500
sharing deployment pipelines yeah to

00:18:49,549 --> 00:18:53,419
just make it easier for people to just

00:18:51,500 --> 00:19:00,200
get involved with all the new releases

00:18:53,419 --> 00:19:02,120
and that kind of stuff yeah yeah we

00:19:00,200 --> 00:19:03,620
already I don't know if yet we have

00:19:02,120 --> 00:19:05,450
enough time here if you have enough time

00:19:03,620 --> 00:19:06,590
we could show the demo here I think we

00:19:05,450 --> 00:19:09,710
are we have enough more than enough

00:19:06,590 --> 00:19:12,200
times this is already 20 min or still

00:19:09,710 --> 00:19:14,390
not the reason s you have 20 minutes I I

00:19:12,200 --> 00:19:15,200
thought we had 20 minutes how much time

00:19:14,390 --> 00:19:17,029
do I have left

00:19:15,200 --> 00:19:22,940
does anyone know how much time we have

00:19:17,029 --> 00:19:26,000
later yeah our next our demo of Bach

00:19:22,940 --> 00:19:27,649
itself will be in the next session so in

00:19:26,000 --> 00:19:32,330
the next session and if you have any

00:19:27,649 --> 00:19:35,659
questions about this and not the demo 6

00:19:32,330 --> 00:19:38,720
7 8 8 questions 8 minutes 8 minutes okay

00:19:35,659 --> 00:19:44,630
I'll save eight minutes okay just go for

00:19:38,720 --> 00:19:47,529
it does that work no now you have to

00:19:44,630 --> 00:19:47,529
exit that one

00:19:56,830 --> 00:20:06,789
and increase the font are there

00:20:01,690 --> 00:20:10,029
questions anymore yeah I already asked

00:20:06,789 --> 00:20:12,750
that once you have a question or it's

00:20:10,029 --> 00:20:12,750
big enough friend

00:20:31,500 --> 00:20:38,110
so yeah for a CA that's still an issue

00:20:35,610 --> 00:20:42,580
yeah it's there there isn't there is

00:20:38,110 --> 00:20:44,230
nothing at the moment yet that nobody it

00:20:42,580 --> 00:20:44,860
has a complete integration with the CA

00:20:44,230 --> 00:20:47,080
system

00:20:44,860 --> 00:20:50,080
no but I mean like you could do that I

00:20:47,080 --> 00:20:52,780
think so you can use the cred credit CLI

00:20:50,080 --> 00:20:56,640
to change those certificates right and

00:20:52,780 --> 00:20:56,640
then you to a Bosch deploy and it's done

00:20:56,790 --> 00:21:01,450
yep

00:20:58,030 --> 00:21:03,010
but yeah for yeah okay no it does the

00:21:01,450 --> 00:21:05,310
credit doesn't integrate with the custom

00:21:03,010 --> 00:21:05,310
ch

00:21:15,320 --> 00:21:20,280
that's the variable syntax so in a Bosch

00:21:18,060 --> 00:21:22,230
deployment you just have to double up

00:21:20,280 --> 00:21:28,350
for EM that's like a variable and it's

00:21:22,230 --> 00:21:34,230
the name yeah level I think we add up

00:21:28,350 --> 00:21:43,850
like a few slides back how do I get that

00:21:34,230 --> 00:21:43,850
back and on the slides about

00:21:52,120 --> 00:22:01,380
that one yeah I think will scream

00:21:56,630 --> 00:22:02,940
so so the question was about how does

00:22:01,380 --> 00:22:04,170
Bosch know where variables and

00:22:02,940 --> 00:22:10,410
certificates should go

00:22:04,170 --> 00:22:12,060
so no yeah so the credit so trend tip is

00:22:10,410 --> 00:22:15,300
generating to see if difficut support

00:22:12,060 --> 00:22:23,490
out that's the other slide there are two

00:22:15,300 --> 00:22:28,490
there are two times when no yeah but

00:22:23,490 --> 00:22:28,490
this is my first there

00:22:34,260 --> 00:22:42,120
yeah this one so in so here you specify

00:22:38,299 --> 00:22:44,280
that this is just a bush manifest right

00:22:42,120 --> 00:22:47,010
so in a bush manifest you have now a

00:22:44,280 --> 00:22:52,200
variables section and in here you define

00:22:47,010 --> 00:22:54,870
how to generate the certificate yeah so

00:22:52,200 --> 00:22:59,220
you have one which is the CA and that CA

00:22:54,870 --> 00:23:02,419
will be used by this one yeah that's

00:22:59,220 --> 00:23:17,790
that's all those things are generated

00:23:02,419 --> 00:23:20,010
more questions second maybe we would

00:23:17,790 --> 00:23:23,549
what will show what do you want to show

00:23:20,010 --> 00:23:25,770
so what we have here is if we do work

00:23:23,549 --> 00:23:27,750
and we have all their environments

00:23:25,770 --> 00:23:30,960
variables that will be exposed so you

00:23:27,750 --> 00:23:45,000
can invoke buck easy you can invoke bush

00:23:30,960 --> 00:23:47,669
immediately boy yeah so since all those

00:23:45,000 --> 00:23:51,150
environments are already set we just can

00:23:47,669 --> 00:23:55,380
work with Porsche right in from within

00:23:51,150 --> 00:24:03,900
this directory and we can also do buck

00:23:55,380 --> 00:24:06,929
trade hub which will install sea life

00:24:03,900 --> 00:24:12,660
not there and it will say a login screen

00:24:06,929 --> 00:24:17,030
up so we can do we can find all the

00:24:12,660 --> 00:24:24,119
credentials that are already incredible

00:24:17,030 --> 00:24:29,580
generosity ally yeah so what else

00:24:24,119 --> 00:24:31,320
yeah maybe is how to set up buck yeah we

00:24:29,580 --> 00:24:36,719
don't have anything left for the others

00:24:31,320 --> 00:24:39,090
okay wait maybe that's good so this is

00:24:36,719 --> 00:24:42,749
like backup is basically all you do

00:24:39,090 --> 00:24:44,549
right so and this is in the end it's

00:24:42,749 --> 00:24:50,789
just doing a posh create and fin the end

00:24:44,549 --> 00:24:54,749
oh wait there's another question also

00:24:50,789 --> 00:25:00,029
it runs on Mac OS 6 or only Linux no no

00:24:54,749 --> 00:25:03,539
it runs on Mac OS so in the end to tell

00:25:00,029 --> 00:25:06,419
a bit more about bush deployment so the

00:25:03,539 --> 00:25:10,769
bush deployment repo there's like a lot

00:25:06,419 --> 00:25:12,599
of CP is in there that you can use we

00:25:10,769 --> 00:25:16,499
have here a list of the CP is that we

00:25:12,599 --> 00:25:19,409
currently support so as you can see we

00:25:16,499 --> 00:25:22,229
we can use VirtualBox the VirtualBox CPI

00:25:19,409 --> 00:25:25,229
for borscht and that's what it's using

00:25:22,229 --> 00:25:27,839
so um OS X you will just need to have

00:25:25,229 --> 00:25:31,169
VirtualBox and then when you do a backup

00:25:27,839 --> 00:25:34,080
it will use the borscht VirtualBox CPI

00:25:31,169 --> 00:25:37,109
and I see the stem cell for it to create

00:25:34,080 --> 00:25:41,869
a virtual machine and if you do - -

00:25:37,109 --> 00:25:45,690
light this will give you like a warden

00:25:41,869 --> 00:25:47,809
it will internally use the warden CPI so

00:25:45,690 --> 00:25:50,609
instead of creating VMs it will create

00:25:47,809 --> 00:25:52,349
warden containers so that's what you

00:25:50,609 --> 00:25:55,440
typically would use for development

00:25:52,349 --> 00:25:57,450
right you would use the VirtualBox CPI

00:25:55,440 --> 00:25:59,969
to create a VM like 1 p.m. with

00:25:57,450 --> 00:26:01,649
everything in it and then when you do a

00:25:59,969 --> 00:26:07,529
Bosch deploy that will actually create

00:26:01,649 --> 00:26:13,729
containers running inside that VM so

00:26:07,529 --> 00:26:13,729
yeah it works on Mac OS more questions

00:26:18,330 --> 00:26:34,180
yeah yeah just buck up that will create

00:26:27,910 --> 00:26:37,000
a farce file so if you have to configure

00:26:34,180 --> 00:26:39,820
CPI to talk to your fee square or

00:26:37,000 --> 00:26:42,310
something yeah that goes into here so

00:26:39,820 --> 00:26:45,820
you have to specify a network and all

00:26:42,310 --> 00:26:48,270
those things for VirtualBox we we can

00:26:45,820 --> 00:26:50,740
default all those things but if we count

00:26:48,270 --> 00:26:54,970
for example for free square because we

00:26:50,740 --> 00:26:57,820
don't know your password yet yeah that's

00:26:54,970 --> 00:26:59,650
why so you would put those things into

00:26:57,820 --> 00:27:02,590
the VAR file and then you do backup and

00:26:59,650 --> 00:27:04,600
you have her yes yeah so the basic thing

00:27:02,590 --> 00:27:07,030
why we build buck is that we just want

00:27:04,600 --> 00:27:08,920
to make it simpler for people to get up

00:27:07,030 --> 00:27:11,980
and running with the latest bosh and the

00:27:08,920 --> 00:27:13,840
latest the latest cred up ladies with

00:27:11,980 --> 00:27:14,740
all the cloud config integrations and

00:27:13,840 --> 00:27:18,820
the concourse

00:27:14,740 --> 00:27:21,040
I use it a lot to test my I want a

00:27:18,820 --> 00:27:23,350
vanilla environment every time when I

00:27:21,040 --> 00:27:26,500
want to test a new boss release that I'm

00:27:23,350 --> 00:27:28,480
creating yeah guys if you do if you have

00:27:26,500 --> 00:27:30,310
a boss light and you every time you need

00:27:28,480 --> 00:27:34,900
to tear down your boss light and it just

00:27:30,310 --> 00:27:37,090
a lot of hassle to to work with so we

00:27:34,900 --> 00:27:41,560
hope this will help help some people

00:27:37,090 --> 00:27:46,330
yeah so there's a buck info which gives

00:27:41,560 --> 00:27:48,970
you flood the concourse endpoint with

00:27:46,330 --> 00:27:51,510
the username and password so that's what

00:27:48,970 --> 00:27:56,370
you would use to connect to your

00:27:51,510 --> 00:27:56,370
concourse in the browser how do we

00:27:57,990 --> 00:28:06,090
what you want to do copy/paste that

00:28:00,700 --> 00:28:06,090
until I can not think click on the link

00:28:08,620 --> 00:28:19,830
[Music]

00:28:10,720 --> 00:28:25,479
any more questions about anything Bosch

00:28:19,830 --> 00:28:29,409
no yeah sorry there's not a lot more to

00:28:25,479 --> 00:28:31,299
it we can go over ops files but there

00:28:29,409 --> 00:28:36,599
were all the thoughts about that I don't

00:28:31,299 --> 00:28:36,599
know yeah question

00:28:37,529 --> 00:28:46,330
yeah what you import it does it it it

00:28:44,229 --> 00:28:48,129
fetches these certificates and passwords

00:28:46,330 --> 00:28:52,359
from Treach up and puts it into the

00:28:48,129 --> 00:28:56,440
manifest before uploading or maybe we

00:28:52,359 --> 00:28:59,999
can show the whole so you mean how we

00:28:56,440 --> 00:29:03,099
see the credentials to cred up how you

00:28:59,999 --> 00:29:04,539
take it from there my question is

00:29:03,099 --> 00:29:10,389
regarding scale abilities or what

00:29:04,539 --> 00:29:12,399
happens if you want to fetch like 1000

00:29:10,389 --> 00:29:14,979
certificates from crate up so to you end

00:29:12,399 --> 00:29:18,129
up with a huge manifest that you have

00:29:14,979 --> 00:29:19,960
upload have you any have you made any

00:29:18,129 --> 00:29:22,359
tests regarding scalability if you use

00:29:19,960 --> 00:29:23,440
so this is so in underneath it's just

00:29:22,359 --> 00:29:26,229
using so the Creta

00:29:23,440 --> 00:29:30,460
CLI has an import command which takes

00:29:26,229 --> 00:29:35,229
like a big yellow file and then will

00:29:30,460 --> 00:29:37,629
generate the certificate enchilada API

00:29:35,229 --> 00:29:43,989
but it's all going local right and it's

00:29:37,629 --> 00:29:45,369
only run run once or startup so yeah but

00:29:43,989 --> 00:29:48,549
we don't so we haven't made any

00:29:45,369 --> 00:29:51,009
scalability or hit any scalability

00:29:48,549 --> 00:29:52,690
issues because we don't have like a

00:29:51,009 --> 00:29:55,690
thousand certificates because we only

00:29:52,690 --> 00:29:57,509
have this is all really limited scope

00:29:55,690 --> 00:30:02,200
right we only want to have the

00:29:57,509 --> 00:30:04,690
credentials and stuff available that are

00:30:02,200 --> 00:30:07,529
generated by bug right so it's only

00:30:04,690 --> 00:30:11,080
declared again API endpoints of borsch

00:30:07,529 --> 00:30:12,789
the certificate of borsch username

00:30:11,080 --> 00:30:16,830
password it's not like there will be

00:30:12,789 --> 00:30:21,350
more things in the end

00:30:16,830 --> 00:30:21,350
yeah okay thanks

00:30:26,830 --> 00:30:34,520
and a sneak deeper okay maybe you can

00:30:31,370 --> 00:30:38,210
show it here but what is exactly going

00:30:34,520 --> 00:30:41,710
into yeah so you can do bush or book in

00:30:38,210 --> 00:30:44,600
to actually get the generated manifest

00:30:41,710 --> 00:30:50,530
if you want to look what what we are

00:30:44,600 --> 00:30:50,530
using to create a VM yeah

00:30:54,130 --> 00:31:06,760
I don't know where exactly it is never

00:31:03,309 --> 00:31:08,919
do it this way what are you looking for

00:31:06,760 --> 00:31:12,540
for the credit up in Porter stuff where

00:31:08,919 --> 00:31:12,540
you can see that the job that it just

00:31:14,040 --> 00:31:18,570
okay I was shown a trick

00:31:24,020 --> 00:31:35,900
think we have enough okay so we lock in

00:31:33,590 --> 00:31:40,340
our Bush and which is calling out to

00:31:35,900 --> 00:31:46,550
Bosh in which tens for interpolates you

00:31:40,340 --> 00:31:49,900
can do give part which is like the ops

00:31:46,550 --> 00:31:56,320
file style right so you can do instance

00:31:49,900 --> 00:32:05,380
groups slash and then the name is

00:31:56,320 --> 00:32:05,380
creative in order

00:32:08,140 --> 00:32:25,760
yeah so this way you will get yeah sorry

00:32:23,330 --> 00:32:30,760
I think there's just just not more

00:32:25,760 --> 00:32:30,760

YouTube URL: https://www.youtube.com/watch?v=RgypRqHmyRw


