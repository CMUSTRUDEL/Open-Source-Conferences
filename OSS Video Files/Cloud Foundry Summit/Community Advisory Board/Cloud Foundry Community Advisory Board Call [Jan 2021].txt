Title: Cloud Foundry Community Advisory Board Call [Jan 2021]
Publication date: 2021-01-25
Playlist: Community Advisory Board
Description: 
	
Captions: 
	00:00:03,840 --> 00:00:07,839
hello and welcome

00:00:05,200 --> 00:00:08,480
uh happy new year and welcome to the

00:00:07,839 --> 00:00:10,480
first

00:00:08,480 --> 00:00:12,000
cloud foundry community advisory board

00:00:10,480 --> 00:00:14,639
call of the year

00:00:12,000 --> 00:00:15,200
january 20th uh inauguration day in the

00:00:14,639 --> 00:00:19,119
u.s

00:00:15,200 --> 00:00:19,119
good luck everyone uh

00:00:19,279 --> 00:00:25,439
i see chris is here are there any

00:00:22,640 --> 00:00:26,400
highlights or updates from the cloud

00:00:25,439 --> 00:00:28,480
foundry foundation

00:00:26,400 --> 00:00:29,519
this time around a couple couple minor

00:00:28,480 --> 00:00:32,640
ones

00:00:29,519 --> 00:00:35,520
well one we just did that cla switch um

00:00:32,640 --> 00:00:37,120
i i think that went well actually and um

00:00:35,520 --> 00:00:38,640
i think everyone's been sorted out but

00:00:37,120 --> 00:00:40,239
of course if anyone is having any issues

00:00:38,640 --> 00:00:43,360
with the new cla

00:00:40,239 --> 00:00:47,120
just reach out let me know other

00:00:43,360 --> 00:00:48,879
bit of non-news is um we will probably

00:00:47,120 --> 00:00:50,559
let you all know in about a month about

00:00:48,879 --> 00:00:52,160
events this year um

00:00:50,559 --> 00:00:53,840
i can tell you right now that you know

00:00:52,160 --> 00:00:54,960
there are no plans to do in-person

00:00:53,840 --> 00:00:57,039
events this year

00:00:54,960 --> 00:00:58,800
um you know even in the fall that's

00:00:57,039 --> 00:01:01,359
that's not gonna be in the cards

00:00:58,800 --> 00:01:03,199
so um but probably in a month or so

00:01:01,359 --> 00:01:05,119
we'll we'll have dates for a first

00:01:03,199 --> 00:01:06,479
cloud foundry summit of some kind uh

00:01:05,119 --> 00:01:08,240
well actually we have a meeting

00:01:06,479 --> 00:01:09,600
uh today a little bit to start

00:01:08,240 --> 00:01:10,320
discussing such things with the events

00:01:09,600 --> 00:01:13,040
team

00:01:10,320 --> 00:01:13,680
um but so you know nothing particularly

00:01:13,040 --> 00:01:16,479
um

00:01:13,680 --> 00:01:16,799
surprising or or news really there just

00:01:16,479 --> 00:01:18,960
we

00:01:16,799 --> 00:01:20,720
we're we're working on that and um you

00:01:18,960 --> 00:01:22,159
know stay tuned in another month or so

00:01:20,720 --> 00:01:25,439
hopefully we'll have uh

00:01:22,159 --> 00:01:26,799
tentative dates or or something uh but

00:01:25,439 --> 00:01:28,880
should be somewhat similar to the

00:01:26,799 --> 00:01:30,720
summits we did last year as we're not

00:01:28,880 --> 00:01:33,680
going to be doing in-person events for

00:01:30,720 --> 00:01:34,720
you know fairly obvious reasons um so

00:01:33,680 --> 00:01:41,040
yeah that's really it

00:01:34,720 --> 00:01:43,759
um happy new year yeah

00:01:41,040 --> 00:01:45,439
uh just getting this down so the cla

00:01:43,759 --> 00:01:47,439
switch went well thanks for bugging me

00:01:45,439 --> 00:01:49,280
about that i got my part done

00:01:47,439 --> 00:01:50,560
uh i are there still any people

00:01:49,280 --> 00:01:52,479
outstanding that uh

00:01:50,560 --> 00:01:54,000
that you know of i mean the major

00:01:52,479 --> 00:01:56,240
contributing companies are all signed

00:01:54,000 --> 00:01:57,680
and squared away and i've just had a few

00:01:56,240 --> 00:01:58,880
you know pings here and there but people

00:01:57,680 --> 00:01:59,680
are picking me on slack we're getting

00:01:58,880 --> 00:02:02,560
everyone set up

00:01:59,680 --> 00:02:04,240
um so at this point i think um you know

00:02:02,560 --> 00:02:04,560
it's been relatively quiet as far as

00:02:04,240 --> 00:02:05,920
people

00:02:04,560 --> 00:02:07,360
telling me their pipelines are breaking

00:02:05,920 --> 00:02:07,840
and things like that because thoughts

00:02:07,360 --> 00:02:10,560
aren't

00:02:07,840 --> 00:02:11,120
cool so that's good i may as well just

00:02:10,560 --> 00:02:13,599
share

00:02:11,120 --> 00:02:14,640
share the document as well in the link

00:02:13,599 --> 00:02:17,680
you will find the

00:02:14,640 --> 00:02:19,360
agenda document in the sorry in the chat

00:02:17,680 --> 00:02:23,200
you will find a link for the

00:02:19,360 --> 00:02:26,959
events document um

00:02:23,200 --> 00:02:28,879
to that end uh eric's been so kind as to

00:02:26,959 --> 00:02:30,480
include all the pmc updates already so i

00:02:28,879 --> 00:02:32,560
don't have to type furiously do you want

00:02:30,480 --> 00:02:34,000
to run through them eric

00:02:32,560 --> 00:02:36,239
yeah sure things are still a little

00:02:34,000 --> 00:02:39,680
light coming out of the holidays um but

00:02:36,239 --> 00:02:41,840
um the integration project teams um both

00:02:39,680 --> 00:02:43,519
uh making their usual progress uh roland

00:02:41,840 --> 00:02:44,560
had another minor update to cf

00:02:43,519 --> 00:02:46,800
deployment

00:02:44,560 --> 00:02:47,760
and um uh they've also been they're

00:02:46,800 --> 00:02:50,400
about to release

00:02:47,760 --> 00:02:51,519
a version 2.0 of cf for kids there's a

00:02:50,400 --> 00:02:52,080
breaking interface change i think

00:02:51,519 --> 00:02:53,760
they're

00:02:52,080 --> 00:02:54,959
removing one of the certificate values

00:02:53,760 --> 00:02:55,760
and trying to stick to semantic

00:02:54,959 --> 00:02:58,000
versioning

00:02:55,760 --> 00:03:00,319
for that contract um i know they've also

00:02:58,000 --> 00:03:01,760
been resolving some regressions

00:03:00,319 --> 00:03:03,599
that were noted recently around

00:03:01,760 --> 00:03:04,000
environment variables propagating

00:03:03,599 --> 00:03:06,720
correctly

00:03:04,000 --> 00:03:08,239
to apps but those should be out soon and

00:03:06,720 --> 00:03:09,440
cube cf is also

00:03:08,239 --> 00:03:12,000
they've been bumping dependencies

00:03:09,440 --> 00:03:13,040
recently and they're working towards

00:03:12,000 --> 00:03:15,840
another minor version which i guess

00:03:13,040 --> 00:03:15,840
would be 2.8

00:03:16,400 --> 00:03:19,760
and then uh as as has been a common

00:03:18,720 --> 00:03:22,319
theme um

00:03:19,760 --> 00:03:23,680
cappy and services api teams uh they

00:03:22,319 --> 00:03:25,440
continue to close out

00:03:23,680 --> 00:03:26,720
the remaining v3 endpoints that are

00:03:25,440 --> 00:03:29,360
analogous to the

00:03:26,720 --> 00:03:30,400
v2 service api endpoint so i think they

00:03:29,360 --> 00:03:31,920
they are

00:03:30,400 --> 00:03:33,440
legitimately almost done although i look

00:03:31,920 --> 00:03:35,200
forward to being able to

00:03:33,440 --> 00:03:36,480
say that they're finally done with that

00:03:35,200 --> 00:03:38,560
track of work

00:03:36,480 --> 00:03:40,480
and that uh v3 replacements for all the

00:03:38,560 --> 00:03:43,120
v2 apis are finally in place

00:03:40,480 --> 00:03:44,560
but cli is also doing some work to keep

00:03:43,120 --> 00:03:46,239
up with them as they keep adding those

00:03:44,560 --> 00:03:46,640
endpoints and to give them feedback on

00:03:46,239 --> 00:03:48,159
them

00:03:46,640 --> 00:03:50,239
although there hasn't been a new cli

00:03:48,159 --> 00:03:53,120
really since last month

00:03:50,239 --> 00:03:53,760
uh another couple component team updates

00:03:53,120 --> 00:03:56,959
i know

00:03:53,760 --> 00:03:58,239
irini they've been

00:03:56,959 --> 00:04:00,159
exploring some things for new tracks of

00:03:58,239 --> 00:04:04,159
work we've talked about their interest

00:04:00,159 --> 00:04:05,599
in consolidating some things on crds for

00:04:04,159 --> 00:04:07,040
some of their internal resources

00:04:05,599 --> 00:04:09,439
but i think they're also looking at

00:04:07,040 --> 00:04:11,680
observability and then

00:04:09,439 --> 00:04:13,360
they also have been maybe a little

00:04:11,680 --> 00:04:15,760
prematurely

00:04:13,360 --> 00:04:17,440
removing some of their capability of

00:04:15,760 --> 00:04:19,600
doing staging tasks

00:04:17,440 --> 00:04:21,120
and uh with in some of the

00:04:19,600 --> 00:04:22,800
incompatibilities that we have between

00:04:21,120 --> 00:04:24,320
the pocato cloud native build packs and

00:04:22,800 --> 00:04:25,280
the existing cf build packs that's but

00:04:24,320 --> 00:04:28,160
qcf

00:04:25,280 --> 00:04:29,759
yeah i was really glad to see that

00:04:28,160 --> 00:04:30,240
they're reconsidering that and that they

00:04:29,759 --> 00:04:32,000
are

00:04:30,240 --> 00:04:33,840
maybe bringing back the classic staging

00:04:32,000 --> 00:04:35,280
so that qcf gets unblocked

00:04:33,840 --> 00:04:37,360
yeah i think the the shortest term thing

00:04:35,280 --> 00:04:38,240
might be to uh to restore that so

00:04:37,360 --> 00:04:41,040
they're at least

00:04:38,240 --> 00:04:42,240
exploring and considering doing that um

00:04:41,040 --> 00:04:44,000
uh i i know

00:04:42,240 --> 00:04:45,919
uh some of us have also discussed what

00:04:44,000 --> 00:04:48,400
it would be like to put the existing

00:04:45,919 --> 00:04:49,520
cf build packs in a cloud-native build

00:04:48,400 --> 00:04:51,520
pack wrapper

00:04:49,520 --> 00:04:52,639
and apparently that that is the easy

00:04:51,520 --> 00:04:54,639
direction but i don't think

00:04:52,639 --> 00:04:56,400
there's a reference implementation of

00:04:54,639 --> 00:04:57,919
that available anywhere so that might be

00:04:56,400 --> 00:05:01,360
the longer term approach to

00:04:57,919 --> 00:05:03,840
greater cross compatibility yeah

00:05:01,360 --> 00:05:04,720
i think that would be uh a really great

00:05:03,840 --> 00:05:08,080
bridge for

00:05:04,720 --> 00:05:12,560
for uh cf uh see if deployment users

00:05:08,080 --> 00:05:12,560
looking at cf4k eights or cube cf

00:05:13,120 --> 00:05:18,320
transition uh fun fact from the diego

00:05:15,759 --> 00:05:20,240
team they bumped to golden 115.

00:05:18,320 --> 00:05:22,800
i guess golang decided to get stricter

00:05:20,240 --> 00:05:25,120
about some of its

00:05:22,800 --> 00:05:26,560
http encodings uh especially with

00:05:25,120 --> 00:05:28,560
respect to respect to chunk

00:05:26,560 --> 00:05:30,240
transfer encoding so they had to tweak

00:05:28,560 --> 00:05:31,440
the encoding of the vbs event stream to

00:05:30,240 --> 00:05:32,560
accommodate that i don't think it should

00:05:31,440 --> 00:05:35,120
affect anyone

00:05:32,560 --> 00:05:36,880
uh except for the people that bumped

00:05:35,120 --> 00:05:38,080
their clients to goaling 115 and then

00:05:36,880 --> 00:05:40,960
noticed that they couldn't consume the

00:05:38,080 --> 00:05:40,960
event stream anymore

00:05:41,919 --> 00:05:48,000
okay great that's that's good to know um

00:05:45,039 --> 00:05:50,840
uh have i i i'll ask again anyone from

00:05:48,000 --> 00:05:53,840
the bosch team have any updates

00:05:50,840 --> 00:05:53,840
there

00:05:55,840 --> 00:05:59,440
okay uh we'll assume that everything is

00:05:58,479 --> 00:06:01,199
fine and

00:05:59,440 --> 00:06:02,639
relatively unchanged same with

00:06:01,199 --> 00:06:04,720
extensions i haven't

00:06:02,639 --> 00:06:06,400
had a lot of stuff in from the

00:06:04,720 --> 00:06:07,919
extensions pmc

00:06:06,400 --> 00:06:09,520
uh but i should mention that there's a

00:06:07,919 --> 00:06:11,520
stratos 4.4 release

00:06:09,520 --> 00:06:13,600
which is very similar to the 4.3 release

00:06:11,520 --> 00:06:14,560
but some bug fixes and stuff the release

00:06:13,600 --> 00:06:17,680
notes are

00:06:14,560 --> 00:06:19,919
up there in the stratos

00:06:17,680 --> 00:06:21,759
releases section of the repo if anyone

00:06:19,919 --> 00:06:24,800
wants to check it out

00:06:21,759 --> 00:06:27,360
it's a pleasure to use as always i'm in

00:06:24,800 --> 00:06:29,919
that interface almost every day

00:06:27,360 --> 00:06:31,680
and it just keeps getting better so

00:06:29,919 --> 00:06:33,120
those are our updates i'm blazing

00:06:31,680 --> 00:06:34,720
through really quick in case anybody

00:06:33,120 --> 00:06:36,800
wants to tune into the

00:06:34,720 --> 00:06:38,639
inauguration later but i do want to uh

00:06:36,800 --> 00:06:41,680
call out a couple of documents

00:06:38,639 --> 00:06:42,560
that have come from uh barrett's did you

00:06:41,680 --> 00:06:44,639
want to actually

00:06:42,560 --> 00:06:46,560
since i noticed you were on the call i

00:06:44,639 --> 00:06:49,440
have just one short question

00:06:46,560 --> 00:06:52,080
in between especially to eric are there

00:06:49,440 --> 00:06:54,960
already some timelines regarding the

00:06:52,080 --> 00:06:57,680
cf api v2 let's say deprecation

00:06:54,960 --> 00:06:59,280
announcements uh etc when this uh

00:06:57,680 --> 00:07:03,360
is going to start because i get asked

00:06:59,280 --> 00:07:05,360
very very often about those questions

00:07:03,360 --> 00:07:06,960
um i i think that there have been some

00:07:05,360 --> 00:07:09,840
previous communications

00:07:06,960 --> 00:07:12,080
about um the expected timelines for

00:07:09,840 --> 00:07:13,840
deprecating the v2 api

00:07:12,080 --> 00:07:15,440
uh although i believe also those were

00:07:13,840 --> 00:07:17,120
published a long time ago it's probably

00:07:15,440 --> 00:07:20,240
worth revisiting them

00:07:17,120 --> 00:07:23,360
um for uh relevance

00:07:20,240 --> 00:07:26,720
now that we're actually at the end of uh

00:07:23,360 --> 00:07:28,639
introducing all the v3 equivalents

00:07:26,720 --> 00:07:30,000
okay so i think the clock didn't start

00:07:28,639 --> 00:07:31,360
ticking yet on

00:07:30,000 --> 00:07:33,759
no and i don't think i don't think

00:07:31,360 --> 00:07:36,319
they're quite done either yet um

00:07:33,759 --> 00:07:39,599
yeah so i think there's there's still a

00:07:36,319 --> 00:07:42,160
few endpoints to finish up

00:07:39,599 --> 00:07:42,160
okay thanks

00:07:42,960 --> 00:07:46,400
um there's also some performance issues

00:07:45,039 --> 00:07:50,319
that need to be cleaned up in the v

00:07:46,400 --> 00:07:50,319
in the v3 as well oh yes

00:07:51,840 --> 00:07:56,720
i think that may have uh helped uh

00:07:54,560 --> 00:07:59,360
extend the life of the v2 api

00:07:56,720 --> 00:08:00,560
uh you know we've noticed that as well

00:07:59,360 --> 00:08:03,759
um

00:08:00,560 --> 00:08:06,160
and uh and speaking of stratos uh status

00:08:03,759 --> 00:08:07,280
4.4 still has not uh broken ground on

00:08:06,160 --> 00:08:10,879
the v3 api

00:08:07,280 --> 00:08:13,120
so that is still um a consumer of

00:08:10,879 --> 00:08:16,240
when you add an cfn point it's it's

00:08:13,120 --> 00:08:16,240
still on the v2 api

00:08:18,240 --> 00:08:21,599
any more questions eric do you know if

00:08:20,560 --> 00:08:24,479
the one

00:08:21,599 --> 00:08:27,280
that the bionic stem cells might become

00:08:24,479 --> 00:08:30,319
out of beta mode

00:08:27,280 --> 00:08:31,919
i don't know for sure i haven't uh been

00:08:30,319 --> 00:08:35,440
tracking recent updates

00:08:31,919 --> 00:08:35,440
uh around those

00:08:37,599 --> 00:08:44,320
have we got bionic stacks now

00:08:41,760 --> 00:08:47,440
yes yes because cf linux fs3 is already

00:08:44,320 --> 00:08:47,440
it's bionic right right

00:08:47,519 --> 00:08:51,920
yep i lose track of ubuntu naming

00:08:52,839 --> 00:08:56,560
schemes

00:08:55,120 --> 00:08:58,800
i think mark croft has been gone for a

00:08:56,560 --> 00:09:02,000
while but i believe he was the original

00:08:58,800 --> 00:09:04,560
person who generated the cf linux fs2

00:09:02,000 --> 00:09:06,640
name so we can we can keep blaming him

00:09:04,560 --> 00:09:10,320
for a confusion between

00:09:06,640 --> 00:09:12,560
i'm okay with it i'm okay um

00:09:10,320 --> 00:09:14,640
uh in the community projects

00:09:12,560 --> 00:09:17,120
presentations and discussions section

00:09:14,640 --> 00:09:18,560
uh i thought i'd uh bring to light some

00:09:17,120 --> 00:09:21,680
things we've been discussing

00:09:18,560 --> 00:09:22,080
uh in conversations with sap and ibm as

00:09:21,680 --> 00:09:25,519
well

00:09:22,080 --> 00:09:28,480
as on these cf for kubernetes

00:09:25,519 --> 00:09:29,440
sig uh parent did you want to talk about

00:09:28,480 --> 00:09:30,800
these things and

00:09:29,440 --> 00:09:33,600
they're linked from the document here

00:09:30,800 --> 00:09:35,920
i'll show them we've got first the

00:09:33,600 --> 00:09:39,600
thoughts on cf4k8 use cases which was

00:09:35,920 --> 00:09:43,440
discussed in yesterday's sig call

00:09:39,600 --> 00:09:46,080
yeah right so actually those those are

00:09:43,440 --> 00:09:46,640
like this particular document is one

00:09:46,080 --> 00:09:49,360
that i

00:09:46,640 --> 00:09:50,080
sent out to the cf def mailing list

00:09:49,360 --> 00:09:53,120
somewhere

00:09:50,080 --> 00:09:53,519
in december i believe uh there was a bit

00:09:53,120 --> 00:09:55,920
of

00:09:53,519 --> 00:09:58,800
of uh discussion also via the mailing

00:09:55,920 --> 00:10:01,920
list as well as here in in the document

00:09:58,800 --> 00:10:05,040
and i i i guess i won't be

00:10:01,920 --> 00:10:06,160
repeating the uh sick call that that we

00:10:05,040 --> 00:10:08,079
had yesterday

00:10:06,160 --> 00:10:10,480
i think the recording should should be

00:10:08,079 --> 00:10:14,160
out there either already or

00:10:10,480 --> 00:10:17,120
uh anytime soon but to to give you

00:10:14,160 --> 00:10:18,480
like a brief summary of what's in the

00:10:17,120 --> 00:10:21,600
document this is

00:10:18,480 --> 00:10:24,640
essentially something uh that

00:10:21,600 --> 00:10:28,320
like we from an sap perspective

00:10:24,640 --> 00:10:31,120
uh expecting to run quite a few cf4k

00:10:28,320 --> 00:10:31,760
deployments or kind of moving over over

00:10:31,120 --> 00:10:35,760
time

00:10:31,760 --> 00:10:38,880
people that are today using cf on on vms

00:10:35,760 --> 00:10:43,200
uh that that we think are kind of good

00:10:38,880 --> 00:10:46,160
evolutionary steps once we have like

00:10:43,200 --> 00:10:46,800
feature parity so to speak uh those

00:10:46,160 --> 00:10:49,519
would be

00:10:46,800 --> 00:10:50,959
good evolutionary steps to kind of make

00:10:49,519 --> 00:10:54,000
it easier for us

00:10:50,959 --> 00:10:57,440
operating these many environments

00:10:54,000 --> 00:10:58,800
to to to kind of keep keep track of them

00:10:57,440 --> 00:11:01,839
manage them

00:10:58,800 --> 00:11:05,040
run them etc etc so i think that

00:11:01,839 --> 00:11:07,360
the primary idea there is too different

00:11:05,040 --> 00:11:09,200
from from what we have today which is

00:11:07,360 --> 00:11:11,279
running the cloud foundry control plane

00:11:09,200 --> 00:11:12,000
and see if apps on the same kubernetes

00:11:11,279 --> 00:11:13,920
cluster

00:11:12,000 --> 00:11:15,279
the main idea there is to basically say

00:11:13,920 --> 00:11:18,320
can we separate those

00:11:15,279 --> 00:11:20,079
into different clusters and then based

00:11:18,320 --> 00:11:22,079
on that there's there's a couple of

00:11:20,079 --> 00:11:23,680
follow-up steps that that are described

00:11:22,079 --> 00:11:26,720
in in that document

00:11:23,680 --> 00:11:29,120
and in the c call yesterday we spent

00:11:26,720 --> 00:11:30,079
almost the the entire hour kind of going

00:11:29,120 --> 00:11:32,480
over the document

00:11:30,079 --> 00:11:33,200
and then having a follow-up discussion

00:11:32,480 --> 00:11:36,560
so if

00:11:33,200 --> 00:11:39,600
if you are interested in in cf4ks

00:11:36,560 --> 00:11:41,920
kind of mid to to long-term topics um

00:11:39,600 --> 00:11:44,800
and haven't seen the document you might

00:11:41,920 --> 00:11:46,880
want to want to go through it and

00:11:44,800 --> 00:11:48,000
it's obviously still still open for for

00:11:46,880 --> 00:11:51,360
feedback and

00:11:48,000 --> 00:11:53,200
and discussions now this other one

00:11:51,360 --> 00:11:55,120
which you've graciously given me

00:11:53,200 --> 00:11:57,519
co-author credit for which is

00:11:55,120 --> 00:11:58,240
not deserved uh bernd actually wrote

00:11:57,519 --> 00:12:01,279
this one up

00:11:58,240 --> 00:12:03,040
uh as as well pretty much solely

00:12:01,279 --> 00:12:04,720
and uh i don't think this has been

00:12:03,040 --> 00:12:07,519
shared with the sig

00:12:04,720 --> 00:12:09,279
uh certainly public information it's

00:12:07,519 --> 00:12:10,079
just observations of the things that

00:12:09,279 --> 00:12:13,440
aren't the same

00:12:10,079 --> 00:12:16,560
in cf safe deployment

00:12:13,440 --> 00:12:18,639
and cf for k8s

00:12:16,560 --> 00:12:19,920
where and qcf trying to follow cf

00:12:18,639 --> 00:12:22,000
deployment and include as much as

00:12:19,920 --> 00:12:22,959
possible there are some differences

00:12:22,000 --> 00:12:25,040
there as well but

00:12:22,959 --> 00:12:27,680
primarily this document is is tracking

00:12:25,040 --> 00:12:30,399
the differences with cf4k8s

00:12:27,680 --> 00:12:31,760
um just surfacing it here so people can

00:12:30,399 --> 00:12:33,680
have a look at it

00:12:31,760 --> 00:12:35,519
and i guess we're looking for comments

00:12:33,680 --> 00:12:36,800
here as well or comments would be

00:12:35,519 --> 00:12:39,519
welcome

00:12:36,800 --> 00:12:41,279
yeah definitely i mean as as you said

00:12:39,519 --> 00:12:44,320
troy i haven't shared this

00:12:41,279 --> 00:12:44,959
broadly yet um i think that there's

00:12:44,320 --> 00:12:47,040
there's

00:12:44,959 --> 00:12:48,079
probably also some follow-ups that that

00:12:47,040 --> 00:12:51,360
eric simon

00:12:48,079 --> 00:12:54,000
and you want to do in terms of kind of

00:12:51,360 --> 00:12:54,800
taking your own lists and and trying to

00:12:54,000 --> 00:12:57,040
see if

00:12:54,800 --> 00:12:59,279
everything is captured in there or if if

00:12:57,040 --> 00:13:00,399
we need to to amend and restructure the

00:12:59,279 --> 00:13:04,240
document

00:13:00,399 --> 00:13:05,920
so i guess it isn't probably ready for

00:13:04,240 --> 00:13:08,240
prime time in the sense that i would

00:13:05,920 --> 00:13:10,320
send it over the cfdef mailing list

00:13:08,240 --> 00:13:11,279
already but it's definitely in a shape

00:13:10,320 --> 00:13:13,519
that

00:13:11,279 --> 00:13:14,639
to to the best of of my knowledge at

00:13:13,519 --> 00:13:16,720
least it

00:13:14,639 --> 00:13:19,360
kind of tries to capture all differences

00:13:16,720 --> 00:13:20,160
between the we are in base world and see

00:13:19,360 --> 00:13:22,320
it for kids

00:13:20,160 --> 00:13:24,160
yeah so with the strong caveat that this

00:13:22,320 --> 00:13:26,959
is very much a work in progress

00:13:24,160 --> 00:13:27,440
um uh you're well uh people are welcome

00:13:26,959 --> 00:13:30,240
uh

00:13:27,440 --> 00:13:32,560
to to read it and uh and see see that

00:13:30,240 --> 00:13:35,360
that's in flight

00:13:32,560 --> 00:13:36,160
amended like if if you have items or if

00:13:35,360 --> 00:13:38,240
you've

00:13:36,160 --> 00:13:40,720
noticed items that are missing from

00:13:38,240 --> 00:13:42,639
there more than happy to to actually

00:13:40,720 --> 00:13:46,000
integrate those

00:13:42,639 --> 00:13:50,880
um great okay

00:13:46,000 --> 00:13:52,800
uh i i'm very grateful to stefan who has

00:13:50,880 --> 00:13:54,639
offered to highlight his uh feature

00:13:52,800 --> 00:13:56,399
narrative uh for us here

00:13:54,639 --> 00:13:58,399
uh it's been a while since i've seen a

00:13:56,399 --> 00:13:59,920
feature narrative come through and this

00:13:58,399 --> 00:14:02,240
is a great place to

00:13:59,920 --> 00:14:03,920
just get an overview of this sort of

00:14:02,240 --> 00:14:06,160
thing stefan did you want to

00:14:03,920 --> 00:14:07,199
have a word about it yeah sure of course

00:14:06,160 --> 00:14:10,240
and thank you

00:14:07,199 --> 00:14:13,680
for that opportunity here um

00:14:10,240 --> 00:14:14,720
yeah first of all maybe so what did

00:14:13,680 --> 00:14:19,680
happen

00:14:14,720 --> 00:14:22,320
last year in december i made a proposal

00:14:19,680 --> 00:14:23,600
for a new feature which is uh this

00:14:22,320 --> 00:14:25,760
document here

00:14:23,600 --> 00:14:27,600
so find granular custom platform rules

00:14:25,760 --> 00:14:30,959
for cloud foundry

00:14:27,600 --> 00:14:34,800
so why this proposal

00:14:30,959 --> 00:14:36,720
um well uh on our platform

00:14:34,800 --> 00:14:38,399
on our cloud from the platform we have a

00:14:36,720 --> 00:14:41,440
lot of customers

00:14:38,399 --> 00:14:45,839
we got a lot of feedback and

00:14:41,440 --> 00:14:49,199
this proposal addresses

00:14:45,839 --> 00:14:49,920
uh two aspects which we hear quite often

00:14:49,199 --> 00:14:52,399
from our

00:14:49,920 --> 00:14:54,639
uh from our customers and the first

00:14:52,399 --> 00:14:57,760
first problem what we have is

00:14:54,639 --> 00:15:00,399
that with the

00:14:57,760 --> 00:15:00,399
cli

00:15:01,279 --> 00:15:09,440
it did happen quite often that

00:15:04,959 --> 00:15:13,199
customers delete data by accident

00:15:09,440 --> 00:15:18,240
and they can easily do that by just

00:15:13,199 --> 00:15:18,240
making a call delete service instance

00:15:18,880 --> 00:15:24,399
and and that's one thing that we hear

00:15:22,399 --> 00:15:26,800
quite often by customers

00:15:24,399 --> 00:15:28,160
and it really depends of course on the

00:15:26,800 --> 00:15:30,959
on the use case

00:15:28,160 --> 00:15:31,360
but for some customer this operation

00:15:30,959 --> 00:15:34,399
with

00:15:31,360 --> 00:15:38,480
accident this operation which which is

00:15:34,399 --> 00:15:41,279
executed accidentally uh can cause

00:15:38,480 --> 00:15:41,600
one on one hand side a lot of effort and

00:15:41,279 --> 00:15:43,600
and

00:15:41,600 --> 00:15:44,800
sometimes it's also very expensive for

00:15:43,600 --> 00:15:48,399
him

00:15:44,800 --> 00:15:49,680
uh or both together so this is one thing

00:15:48,399 --> 00:15:53,120
that customer really

00:15:49,680 --> 00:15:56,160
hurts the second thing is

00:15:53,120 --> 00:15:58,079
is that customers we have all different

00:15:56,160 --> 00:16:01,120
kind of operation models

00:15:58,079 --> 00:16:03,759
how they uh operate and run the

00:16:01,120 --> 00:16:07,600
applications on cloud foundry

00:16:03,759 --> 00:16:10,000
but but one issue is that also with with

00:16:07,600 --> 00:16:13,440
the space developer role

00:16:10,000 --> 00:16:16,959
uh they first of all want to address

00:16:13,440 --> 00:16:21,279
to support uh their

00:16:16,959 --> 00:16:23,600
running applications means uh

00:16:21,279 --> 00:16:24,480
depend so i have kind of operation

00:16:23,600 --> 00:16:27,120
models

00:16:24,480 --> 00:16:29,199
uh where people have to uh just ensure

00:16:27,120 --> 00:16:31,120
that the application is working

00:16:29,199 --> 00:16:33,440
uh sometimes you have to restart do

00:16:31,120 --> 00:16:36,240
manual elections and things like that

00:16:33,440 --> 00:16:38,320
and usually these people are more or

00:16:36,240 --> 00:16:40,399
less operation people they are not

00:16:38,320 --> 00:16:41,839
often not owner of the application you

00:16:40,399 --> 00:16:44,639
know but

00:16:41,839 --> 00:16:46,240
they need a space role for uh to to be

00:16:44,639 --> 00:16:49,920
able for doing metroid

00:16:46,240 --> 00:16:51,920
activities and one thing

00:16:49,920 --> 00:16:53,600
which is a problem is that they can also

00:16:51,920 --> 00:16:55,680
look into the environment variables of

00:16:53,600 --> 00:16:59,040
the of the application

00:16:55,680 --> 00:17:02,079
and by that they see all

00:16:59,040 --> 00:17:04,559
the the vtep service

00:17:02,079 --> 00:17:06,480
environment entries and with that they

00:17:04,559 --> 00:17:10,559
get also access

00:17:06,480 --> 00:17:14,480
to credentials these credentials

00:17:10,559 --> 00:17:15,600
usually or sometimes are very sensitive

00:17:14,480 --> 00:17:18,799
means

00:17:15,600 --> 00:17:21,120
there's kind of backing services

00:17:18,799 --> 00:17:22,319
hosting important data let's say like

00:17:21,120 --> 00:17:24,720
this

00:17:22,319 --> 00:17:27,120
and then people which have more or less

00:17:24,720 --> 00:17:30,080
operation role will get access to that

00:17:27,120 --> 00:17:31,120
and this is also something which

00:17:30,080 --> 00:17:34,799
customers

00:17:31,120 --> 00:17:35,520
do not accept and now we are thinking

00:17:34,799 --> 00:17:38,559
about

00:17:35,520 --> 00:17:40,799
um yeah how to address that or

00:17:38,559 --> 00:17:42,880
how to handle that and we came to

00:17:40,799 --> 00:17:46,640
conclusion that there is

00:17:42,880 --> 00:17:50,720
no easy way to work around about that

00:17:46,640 --> 00:17:52,960
so um um yeah we tried out

00:17:50,720 --> 00:17:54,799
uh first of all there are some

00:17:52,960 --> 00:17:56,480
restrictions means

00:17:54,799 --> 00:17:58,160
uh we are talking here not about new

00:17:56,480 --> 00:18:01,280
customers we are

00:17:58,160 --> 00:18:03,200
not talking about customers let's say uh

00:18:01,280 --> 00:18:04,720
which are close to our organization

00:18:03,200 --> 00:18:07,039
where we can very can

00:18:04,720 --> 00:18:07,919
do things like educate the people or

00:18:07,039 --> 00:18:11,200
things like that

00:18:07,919 --> 00:18:14,320
this is really

00:18:11,200 --> 00:18:16,080
inhomogeneous amount of customers

00:18:14,320 --> 00:18:18,160
yeah which which you cannot control

00:18:16,080 --> 00:18:20,160
where you do not know what exactly what

00:18:18,160 --> 00:18:21,280
we are doing here but we make with

00:18:20,160 --> 00:18:24,400
experience

00:18:21,280 --> 00:18:27,280
and with that uh we don't see

00:18:24,400 --> 00:18:28,160
any way to to work around that came to

00:18:27,280 --> 00:18:29,600
conclusion

00:18:28,160 --> 00:18:31,840
we should change something here in

00:18:29,600 --> 00:18:34,559
implementation and

00:18:31,840 --> 00:18:36,240
when we had some discussion on what we

00:18:34,559 --> 00:18:40,320
can do and of course

00:18:36,240 --> 00:18:43,440
um that the basic requirement is

00:18:40,320 --> 00:18:47,120
that that we need a permission

00:18:43,440 --> 00:18:49,280
a powerful and flexible permission model

00:18:47,120 --> 00:18:51,039
there was in the past the so-called pump

00:18:49,280 --> 00:18:54,240
project which did

00:18:51,039 --> 00:18:58,320
perfectly address that requirement but

00:18:54,240 --> 00:19:01,120
unfortunately that was uh put the sunset

00:18:58,320 --> 00:19:01,760
so it's not an option so we tried we

00:19:01,120 --> 00:19:04,480
came

00:19:01,760 --> 00:19:06,160
i had a discussion what could be a

00:19:04,480 --> 00:19:07,919
minimal change

00:19:06,160 --> 00:19:10,799
uh to address the issues of the

00:19:07,919 --> 00:19:13,360
customers came to conclusion

00:19:10,799 --> 00:19:14,880
maybe it would be an option to introduce

00:19:13,360 --> 00:19:17,919
two new

00:19:14,880 --> 00:19:21,440
roles to the cloud controller which

00:19:17,919 --> 00:19:22,799
are tailored to address only these two

00:19:21,440 --> 00:19:25,919
use cases

00:19:22,799 --> 00:19:28,960
also with uh

00:19:25,919 --> 00:19:30,000
let's say with a background and asking

00:19:28,960 --> 00:19:32,799
ourselves

00:19:30,000 --> 00:19:34,880
what could be realistic uh what what is

00:19:32,799 --> 00:19:38,000
something that can be implemented

00:19:34,880 --> 00:19:41,600
so the idea was not to introduce uh

00:19:38,000 --> 00:19:44,080
or to ask for the prime project again

00:19:41,600 --> 00:19:44,720
so we had discussion on what could be

00:19:44,080 --> 00:19:48,240
the

00:19:44,720 --> 00:19:49,760
minimal change now the proposal is about

00:19:48,240 --> 00:19:53,039
to introducing two new

00:19:49,760 --> 00:19:55,600
uh uh one is called

00:19:53,039 --> 00:19:56,480
space application developer the other is

00:19:55,600 --> 00:19:59,600
called space

00:19:56,480 --> 00:20:02,480
operator um naming is let's say

00:19:59,600 --> 00:20:03,200
i would keep that open there was also

00:20:02,480 --> 00:20:05,760
already

00:20:03,200 --> 00:20:08,000
feedback on the document about that it's

00:20:05,760 --> 00:20:12,480
something that needs to be discussed

00:20:08,000 --> 00:20:16,400
and so that's the overall scope

00:20:12,480 --> 00:20:18,799
and now i'm asking myself how can we go

00:20:16,400 --> 00:20:22,880
forward or what could be the next step

00:20:18,799 --> 00:20:26,080
with that proposal so

00:20:22,880 --> 00:20:30,480
i think what what i would

00:20:26,080 --> 00:20:30,480
expect is something like

00:20:31,039 --> 00:20:34,720
can we come to conclusion to or let's

00:20:33,600 --> 00:20:37,360
say say

00:20:34,720 --> 00:20:38,320
to result like uh yes the proposal makes

00:20:37,360 --> 00:20:40,640
sense

00:20:38,320 --> 00:20:41,679
maybe it needs to be discussed more in

00:20:40,640 --> 00:20:45,120
detail and

00:20:41,679 --> 00:20:48,240
uh um yeah

00:20:45,120 --> 00:20:51,200
so maybe uh some some uh

00:20:48,240 --> 00:20:53,039
parts maybe should change or so there's

00:20:51,200 --> 00:20:56,159
already feedback about whether and

00:20:53,039 --> 00:20:58,640
uh or it could be uh but

00:20:56,159 --> 00:20:59,440
there's a kind of decision no makes no

00:20:58,640 --> 00:21:01,760
sense

00:20:59,440 --> 00:21:02,960
there's no option we don't want it

00:21:01,760 --> 00:21:06,320
whatever so

00:21:02,960 --> 00:21:08,799
a yes or no decision yes and

00:21:06,320 --> 00:21:10,880
because of uh it depends on the decision

00:21:08,799 --> 00:21:12,720
how we to continue on that

00:21:10,880 --> 00:21:14,000
so let's say if you have if you get an

00:21:12,720 --> 00:21:16,799
agreement on yeah it

00:21:14,000 --> 00:21:17,360
makes sense when it would also make

00:21:16,799 --> 00:21:20,000
sense

00:21:17,360 --> 00:21:22,320
let's say to focus more on the proposal

00:21:20,000 --> 00:21:24,320
start discussions with required people

00:21:22,320 --> 00:21:28,159
and so on

00:21:24,320 --> 00:21:31,280
yeah so this this is

00:21:28,159 --> 00:21:32,880
what i want to bring in here yeah i have

00:21:31,280 --> 00:21:34,320
an opinion on that

00:21:32,880 --> 00:21:35,679
i i think we probably have how many

00:21:34,320 --> 00:21:38,240
people are here that probably have five

00:21:35,679 --> 00:21:40,640
opinions on this

00:21:38,240 --> 00:21:41,919
uh i know i've hit this problem as well

00:21:40,640 --> 00:21:45,840
um i know

00:21:41,919 --> 00:21:47,520
uh the stratos team deliberately um

00:21:45,840 --> 00:21:49,520
put in an extra step for service

00:21:47,520 --> 00:21:51,280
deletion because they were encountering

00:21:49,520 --> 00:21:53,200
countering people accidentally deleting

00:21:51,280 --> 00:21:54,159
services uh because it was very easy to

00:21:53,200 --> 00:21:57,520
do

00:21:54,159 --> 00:21:58,880
um but still the the it didn't address

00:21:57,520 --> 00:22:00,720
the underlying problem that there's

00:21:58,880 --> 00:22:02,000
permission to do it and i do think these

00:22:00,720 --> 00:22:04,480
are slightly

00:22:02,000 --> 00:22:05,840
separate problems maybe they could be

00:22:04,480 --> 00:22:10,240
separated

00:22:05,840 --> 00:22:13,679
um i think this is a

00:22:10,240 --> 00:22:16,960
fine proposal but i wonder if maybe

00:22:13,679 --> 00:22:18,559
um this particular one could be handled

00:22:16,960 --> 00:22:21,600
even more easily

00:22:18,559 --> 00:22:24,840
with a feature flag for um

00:22:21,600 --> 00:22:26,320
allow for application uh space

00:22:24,840 --> 00:22:29,200
developers

00:22:26,320 --> 00:22:30,159
permitted to create delete services or

00:22:29,200 --> 00:22:32,159
not

00:22:30,159 --> 00:22:34,559
or maybe allowed to create but not

00:22:32,159 --> 00:22:34,559
delete

00:22:39,280 --> 00:22:42,559
feature flag is with something uh that

00:22:41,280 --> 00:22:45,600
can be configured

00:22:42,559 --> 00:22:50,640
prioritic or is with something which uh

00:22:45,600 --> 00:22:50,640
let's say uh is only possible globally

00:22:50,799 --> 00:22:55,679
that's a good question because of that

00:22:53,280 --> 00:22:57,840
that's what sounds very interesting

00:22:55,679 --> 00:22:58,720
good question yeah feature flags per org

00:22:57,840 --> 00:23:01,919
would would

00:22:58,720 --> 00:23:06,799
possibly solve this um the other way

00:23:01,919 --> 00:23:06,799
right feature flex are usually global

00:23:06,840 --> 00:23:11,840
yeah yeah it sounds like that

00:23:09,120 --> 00:23:12,880
might just be or even space-wide

00:23:11,840 --> 00:23:15,760
configuration

00:23:12,880 --> 00:23:15,760
that could apply

00:23:16,320 --> 00:23:18,559
um

00:23:19,760 --> 00:23:23,200
okay so so there's uh i'll have to take

00:23:22,640 --> 00:23:26,720
uh

00:23:23,200 --> 00:23:29,600
take this uh uh back and and

00:23:26,720 --> 00:23:30,080
think about it a bit more um the other

00:23:29,600 --> 00:23:33,280
one

00:23:30,080 --> 00:23:35,679
i have also hit with customers um

00:23:33,280 --> 00:23:38,720
who have varying degrees of of security

00:23:35,679 --> 00:23:38,720
requirements right like

00:23:38,799 --> 00:23:43,520
the for certain databases with

00:23:41,440 --> 00:23:45,120
personally identified information

00:23:43,520 --> 00:23:46,880
application developers don't get the

00:23:45,120 --> 00:23:48,960
credentials and they aren't supposed to

00:23:46,880 --> 00:23:51,840
see those

00:23:48,960 --> 00:23:52,159
and typically that has been solved by

00:23:51,840 --> 00:23:54,320
not

00:23:52,159 --> 00:23:56,000
using usbappy to provision those

00:23:54,320 --> 00:23:59,760
databases so for production

00:23:56,000 --> 00:24:02,159
databases um using

00:23:59,760 --> 00:24:02,880
cred or some other sort of credential

00:24:02,159 --> 00:24:06,720
store and

00:24:02,880 --> 00:24:09,760
and basically working around the normal

00:24:06,720 --> 00:24:13,279
uh cf create service bind service

00:24:09,760 --> 00:24:13,279
flow um

00:24:13,440 --> 00:24:16,799
when i was discussing that there was a

00:24:14,880 --> 00:24:18,000
couple years ago uh with the customer

00:24:16,799 --> 00:24:21,200
who really needed

00:24:18,000 --> 00:24:22,000
that uh we also talked about encrypted

00:24:21,200 --> 00:24:23,840
credentials

00:24:22,000 --> 00:24:25,039
within the environment which might be

00:24:23,840 --> 00:24:29,039
another uh

00:24:25,039 --> 00:24:33,120
solution for how to do that and

00:24:29,039 --> 00:24:36,799
so the the developer can

00:24:33,120 --> 00:24:37,600
see the encrypted

00:24:36,799 --> 00:24:38,960
you know when they look at the

00:24:37,600 --> 00:24:39,840
environment variables they can see the

00:24:38,960 --> 00:24:43,120
encrypted

00:24:39,840 --> 00:24:45,120
uh variable but somehow

00:24:43,120 --> 00:24:46,960
they cannot they do not have direct

00:24:45,120 --> 00:24:47,919
access to the key to decrypt that the

00:24:46,960 --> 00:24:51,919
application

00:24:47,919 --> 00:24:53,679
would i don't know how

00:24:51,919 --> 00:24:55,360
i don't know if we ever figured that out

00:24:53,679 --> 00:24:56,320
uh i think it was just an idea we

00:24:55,360 --> 00:24:58,559
floated

00:24:56,320 --> 00:25:00,000
um uh and it might have been more

00:24:58,559 --> 00:25:02,880
obfuscation than actual

00:25:00,000 --> 00:25:04,480
encryption but it was one of the things

00:25:02,880 --> 00:25:05,919
that was floated so at least you you

00:25:04,480 --> 00:25:06,880
didn't have shoulder surfing problems

00:25:05,919 --> 00:25:10,240
where somebody

00:25:06,880 --> 00:25:11,440
sees a password and can uh so there's

00:25:10,240 --> 00:25:14,320
some of that being done

00:25:11,440 --> 00:25:15,440
in the cappy interface where the

00:25:14,320 --> 00:25:18,240
password's encrypted

00:25:15,440 --> 00:25:19,520
but they can't decrypt it there's

00:25:18,240 --> 00:25:22,240
there's some coding that's in

00:25:19,520 --> 00:25:23,279
in that interface that does that already

00:25:22,240 --> 00:25:25,200
so they did

00:25:23,279 --> 00:25:26,960
so that was something we just did some

00:25:25,200 --> 00:25:29,360
research on

00:25:26,960 --> 00:25:30,000
okay in the what interface in the capi

00:25:29,360 --> 00:25:33,279
interface

00:25:30,000 --> 00:25:35,840
is in the cloud cloud api interface

00:25:33,279 --> 00:25:37,679
where it displays some of the gets back

00:25:35,840 --> 00:25:42,400
some some data

00:25:37,679 --> 00:25:43,919
it has the ability to um

00:25:42,400 --> 00:25:45,840
the date what you get back is an

00:25:43,919 --> 00:25:47,120
encrypted string but it's not decrypted

00:25:45,840 --> 00:25:49,120
because the key

00:25:47,120 --> 00:25:50,799
is in the you know you don't you don't

00:25:49,120 --> 00:25:53,520
have to keep it encrypted

00:25:50,799 --> 00:25:54,960
okay no that i mean that's kind of what

00:25:53,520 --> 00:25:57,360
i was talking about i don't know

00:25:54,960 --> 00:25:59,840
how that solved i'll point you at some

00:25:57,360 --> 00:25:59,840
documents

00:26:00,400 --> 00:26:06,320
if if the app has uh ssh access

00:26:03,440 --> 00:26:07,200
or you know the app itself could surface

00:26:06,320 --> 00:26:09,120
uh

00:26:07,200 --> 00:26:10,880
environment variables like a simple and

00:26:09,120 --> 00:26:12,320
you know bind to the service and then

00:26:10,880 --> 00:26:14,640
this is this is for log this is for the

00:26:12,320 --> 00:26:17,440
logs right i think

00:26:14,640 --> 00:26:20,320
so i'm just saying there's possible code

00:26:17,440 --> 00:26:20,320
that could be reused

00:26:20,480 --> 00:26:24,080
so i remember there was one uh proposal

00:26:22,960 --> 00:26:26,480
to solve the

00:26:24,080 --> 00:26:27,919
credential issue that was the use of

00:26:26,480 --> 00:26:32,159
gretap and then

00:26:27,919 --> 00:26:35,279
you only see a credup passes in your

00:26:32,159 --> 00:26:36,880
environment and in v cap services but i

00:26:35,279 --> 00:26:38,720
guess this

00:26:36,880 --> 00:26:40,559
got little traction at least i'm not

00:26:38,720 --> 00:26:41,039
aware of any service brokers that

00:26:40,559 --> 00:26:43,360
support

00:26:41,039 --> 00:26:45,039
this model and on top of that also the

00:26:43,360 --> 00:26:47,760
applications have to be changed

00:26:45,039 --> 00:26:48,799
to go there i mean it would be maybe a

00:26:47,760 --> 00:26:51,200
feasible way for

00:26:48,799 --> 00:26:52,640
let's say such critical things because

00:26:51,200 --> 00:26:54,720
then you can expect that

00:26:52,640 --> 00:26:56,240
applications have to do something but at

00:26:54,720 --> 00:26:57,039
least the service broker have to support

00:26:56,240 --> 00:27:00,080
this model

00:26:57,039 --> 00:27:02,200
you have to somehow switch it on and

00:27:00,080 --> 00:27:04,000
i don't know about the

00:27:02,200 --> 00:27:07,520
[Music]

00:27:04,000 --> 00:27:10,559
future about cut up in ceo for cats etc

00:27:07,520 --> 00:27:11,440
just a moment please yeah um it's

00:27:10,559 --> 00:27:15,200
kredhub's in

00:27:11,440 --> 00:27:15,840
cubecf and uh i i don't actually use it

00:27:15,200 --> 00:27:17,679
this way

00:27:15,840 --> 00:27:20,559
but we put it in there for this exact

00:27:17,679 --> 00:27:23,919
reason but this was not uh coupled

00:27:20,559 --> 00:27:27,039
to brokered services this was coupled to

00:27:23,919 --> 00:27:28,960
user-defined services or uh or

00:27:27,039 --> 00:27:30,480
pre-existing services which were then

00:27:28,960 --> 00:27:32,080
the credentials were stored at cred hub

00:27:30,480 --> 00:27:33,440
and then were accessible from from the

00:27:32,080 --> 00:27:35,279
application

00:27:33,440 --> 00:27:38,240
um i i've never actually used it so i

00:27:35,279 --> 00:27:40,720
don't know how it works but uh

00:27:38,240 --> 00:27:42,640
my my initial feedback and again um

00:27:40,720 --> 00:27:44,720
stefan i'm gonna

00:27:42,640 --> 00:27:48,000
think about this some more is that these

00:27:44,720 --> 00:27:51,679
might be separate problems um

00:27:48,000 --> 00:27:52,559
this uh space application developer and

00:27:51,679 --> 00:27:56,159
space operator

00:27:52,559 --> 00:27:59,200
looks like a straightforward fix to the

00:27:56,159 --> 00:28:02,799
the the basic problem and does

00:27:59,200 --> 00:28:04,640
cover them both but i i wonder about the

00:28:02,799 --> 00:28:08,080
popularity of expanding

00:28:04,640 --> 00:28:09,919
the number of roles uh uh

00:28:08,080 --> 00:28:11,840
because that's now then we'd be up to

00:28:09,919 --> 00:28:16,159
five with auditor and

00:28:11,840 --> 00:28:19,600
an admin or alderaan manager

00:28:16,159 --> 00:28:23,279
but yeah let's uh let's yeah but so

00:28:19,600 --> 00:28:25,760
so to to to let's say you will end up

00:28:23,279 --> 00:28:27,279
in multiplying all use cases and as many

00:28:25,760 --> 00:28:29,360
roles you maybe will get

00:28:27,279 --> 00:28:30,480
and of course that's not the goal of the

00:28:29,360 --> 00:28:34,159
proposal

00:28:30,480 --> 00:28:35,919
uh to to come into that situation so

00:28:34,159 --> 00:28:36,880
this is why we would like to restrict

00:28:35,919 --> 00:28:41,760
only

00:28:36,880 --> 00:28:41,760
two only not more

00:28:42,240 --> 00:28:47,200
just because of the use case because we

00:28:45,200 --> 00:28:48,080
would like to address a real customer

00:28:47,200 --> 00:28:51,360
issue

00:28:48,080 --> 00:28:54,799
uh we would not uh solve the problem

00:28:51,360 --> 00:28:59,840
of having more flexible

00:28:54,799 --> 00:28:59,840
uh role concept in cloud foundry yet

00:29:00,080 --> 00:29:03,919
for i would say for kubernetes maybe

00:29:02,480 --> 00:29:07,600
this is something that should be

00:29:03,919 --> 00:29:11,120
rethinked yeah

00:29:07,600 --> 00:29:12,880
yeah i don't uh the solution doesn't

00:29:11,120 --> 00:29:14,240
immediately come to mind i'm just

00:29:12,880 --> 00:29:17,520
throwing out ideas i have

00:29:14,240 --> 00:29:20,640
not a expert but

00:29:17,520 --> 00:29:22,000
thank you for surfacing this um if we

00:29:20,640 --> 00:29:25,440
could all take a look at this

00:29:22,000 --> 00:29:26,399
uh and actually carry it on to people

00:29:25,440 --> 00:29:27,919
that we know

00:29:26,399 --> 00:29:29,840
who might care about this stuff there

00:29:27,919 --> 00:29:32,960
might be people in the ausbati group

00:29:29,840 --> 00:29:34,960
who have opinions on this

00:29:32,960 --> 00:29:36,159
um some of our colleagues who aren't in

00:29:34,960 --> 00:29:39,360
this call might

00:29:36,159 --> 00:29:40,320
also wish to express an opinion so so

00:29:39,360 --> 00:29:42,080
everyone

00:29:40,320 --> 00:29:45,440
find the thread this is on cf dev as

00:29:42,080 --> 00:29:45,440
well there's discussion going on there

00:29:45,919 --> 00:29:50,000
let's all see if we can uh solve this

00:29:48,159 --> 00:29:53,679
problem um

00:29:50,000 --> 00:29:55,840
as a community in a yeah

00:29:53,679 --> 00:29:57,440
i would appreciate that and troy also

00:29:55,840 --> 00:29:58,480
thanks for for the ideas that you

00:29:57,440 --> 00:30:02,000
dropped in

00:29:58,480 --> 00:30:04,480
uh i will take them and

00:30:02,000 --> 00:30:06,159
have a deeper look on that to see if you

00:30:04,480 --> 00:30:08,640
can achieve something like that and of

00:30:06,159 --> 00:30:11,679
course then also reply uh

00:30:08,640 --> 00:30:13,600
the mailing list or so if he finds out

00:30:11,679 --> 00:30:16,640
something better

00:30:13,600 --> 00:30:20,840
it would it be

00:30:16,640 --> 00:30:24,320
uh useful to have a custom

00:30:20,840 --> 00:30:27,679
uh our back scope to user

00:30:24,320 --> 00:30:30,799
like uh like be it for for an admin

00:30:27,679 --> 00:30:34,080
to be able to um

00:30:30,799 --> 00:30:37,200
create a role which

00:30:34,080 --> 00:30:40,320
is then

00:30:37,200 --> 00:30:41,039
um they could define which of these are

00:30:40,320 --> 00:30:43,279
enabled

00:30:41,039 --> 00:30:45,279
and disabled yeah i think that's

00:30:43,279 --> 00:30:46,799
effectively the point of the perm

00:30:45,279 --> 00:30:50,720
project

00:30:46,799 --> 00:30:53,840
um is that it was going to allow for

00:30:50,720 --> 00:30:54,640
creating those uh more customized rules

00:30:53,840 --> 00:30:57,760
along with

00:30:54,640 --> 00:30:59,360
a more granular breakdown of any of

00:30:57,760 --> 00:31:03,440
those permissions

00:30:59,360 --> 00:31:04,000
and uh really the the main impediment to

00:31:03,440 --> 00:31:06,559
moving forward

00:31:04,000 --> 00:31:07,600
with it in a timely fashion was uh all

00:31:06,559 --> 00:31:11,440
the complexities

00:31:07,600 --> 00:31:14,320
of the v2 cloud controller api um

00:31:11,440 --> 00:31:15,840
i recall that we got an integration done

00:31:14,320 --> 00:31:17,679
with all the v3 api

00:31:15,840 --> 00:31:19,679
endpoints within cloud controller very

00:31:17,679 --> 00:31:21,840
easily and then

00:31:19,679 --> 00:31:23,600
uh like cloud controller and the perm

00:31:21,840 --> 00:31:26,000
team and maybe even uaa

00:31:23,600 --> 00:31:27,200
hit all the v2 machinery and i think

00:31:26,000 --> 00:31:30,240
just ground to a halt

00:31:27,200 --> 00:31:32,559
i see so

00:31:30,240 --> 00:31:34,000
there's maybe the possibility of even

00:31:32,559 --> 00:31:37,760
revisiting that effort

00:31:34,000 --> 00:31:39,440
um with you know now that v3 is on the

00:31:37,760 --> 00:31:41,360
advent of being complete

00:31:39,440 --> 00:31:43,200
and uh you could have environments where

00:31:41,360 --> 00:31:45,440
you you turn off v2 or maybe those rules

00:31:43,200 --> 00:31:46,799
don't apply or some external

00:31:45,440 --> 00:31:48,720
integration doesn't apply but i think

00:31:46,799 --> 00:31:50,960
also now the technological landscape has

00:31:48,720 --> 00:31:52,000
changed a lot in the past what two and a

00:31:50,960 --> 00:31:55,200
half years

00:31:52,000 --> 00:31:55,720
since perm started and so it's probably

00:31:55,200 --> 00:31:59,360
worth

00:31:55,720 --> 00:32:01,600
reevaluating the need for that um

00:31:59,360 --> 00:32:03,279
and any kind of technical implementation

00:32:01,600 --> 00:32:06,559
from the ground up

00:32:03,279 --> 00:32:10,799
okay so it might not be a quick

00:32:06,559 --> 00:32:13,039
uh quick solution right yeah

00:32:10,799 --> 00:32:14,000
but i i and that's news to me i did not

00:32:13,039 --> 00:32:17,279
follow the perm project

00:32:14,000 --> 00:32:17,279
at all so this is a

00:32:17,519 --> 00:32:23,919
good background okay so uh

00:32:21,440 --> 00:32:25,360
evangelize this feature narrative so we

00:32:23,919 --> 00:32:28,399
can get some more ideas

00:32:25,360 --> 00:32:31,360
and maybe look for ways that this

00:32:28,399 --> 00:32:33,360
could be a non-disruptive implementation

00:32:31,360 --> 00:32:35,600
in cf

00:32:33,360 --> 00:32:38,000
to to solve this problem for the users

00:32:35,600 --> 00:32:38,000
that have it

00:32:38,559 --> 00:32:45,519
okay um is there anything else for

00:32:42,080 --> 00:32:47,679
open discussion uh no thank you

00:32:45,519 --> 00:32:47,679
no

00:32:49,200 --> 00:32:54,159
does anyone want to go turn on the news

00:32:51,840 --> 00:32:57,200
and see what's happening

00:32:54,159 --> 00:32:59,120
i kind of do not really actually

00:32:57,200 --> 00:33:00,559
i told ashley i'm actually double booked

00:32:59,120 --> 00:33:02,080
on another meeting at the moment so i'm

00:33:00,559 --> 00:33:05,440
i

00:33:02,080 --> 00:33:09,360
i am going to if there's nothing else

00:33:05,440 --> 00:33:12,399
the band is playing right now okay

00:33:09,360 --> 00:33:12,399
that's that's encouraging

00:33:12,640 --> 00:33:16,000
i love you all i'll see you next time

00:33:14,799 --> 00:33:19,760
bye

00:33:16,000 --> 00:33:21,200
bye wayne okay uh thanks everyone and

00:33:19,760 --> 00:33:23,120
thanks ashley for uh

00:33:21,200 --> 00:33:25,039
for recording this and uh being there as

00:33:23,120 --> 00:33:29,600
always

00:33:25,039 --> 00:33:29,600

YouTube URL: https://www.youtube.com/watch?v=K7fFxJR3vxY


