Title: Cloud Foundry Community Advisory Board [August 2017]
Publication date: 2017-09-16
Playlist: Community Advisory Board
Description: 
	Video from the monthly Cloud Foundry Community Advisory Board (CAB) meeting. Learn more at https://www.cloudfoundry.org/.
Captions: 
	00:00:02,060 --> 00:00:11,220
[Music]

00:00:19,570 --> 00:00:38,179
[Music]

00:00:46,760 --> 00:00:55,140
you know it all everybody thank you for

00:00:50,370 --> 00:00:57,649
joining still have ten minutes should be

00:00:55,140 --> 00:00:57,649
a fun one

00:00:58,660 --> 00:01:02,320
[Music]

00:01:04,390 --> 00:01:25,280
[Music]

00:01:29,090 --> 00:01:53,269
[Music]

00:01:59,170 --> 00:02:12,270
[Music]

00:02:27,480 --> 00:02:35,330
no your and I should get some water

00:02:38,240 --> 00:02:44,809
[Music]

00:02:48,250 --> 00:02:51,439
[Music]

00:03:11,590 --> 00:03:27,420
[Music]

00:03:17,000 --> 00:03:36,390
George hello hi I'm hoping we get a good

00:03:27,420 --> 00:03:41,040
turnout today stacking up how was the

00:03:36,390 --> 00:03:46,590
first item you mean the first

00:03:41,040 --> 00:03:49,340
presentation yeah so Steven Levine from

00:03:46,590 --> 00:03:53,340
pivotal he's gonna talk about CF local

00:03:49,340 --> 00:03:57,860
nice yeah it's pretty cool so it should

00:03:53,340 --> 00:04:00,870
be to be fun I know he's joining awesome

00:03:57,860 --> 00:04:02,640
another garden team is is unhappy with

00:04:00,870 --> 00:04:20,100
CF local because he's using darker and

00:04:02,640 --> 00:04:22,770
up garden maybe you can use both right

00:04:20,100 --> 00:04:24,330
now could be a big one right I didn't

00:04:22,770 --> 00:04:47,580
compare them and garden is obviously

00:04:24,330 --> 00:04:49,080
faster so good long time to chat yeah

00:04:47,580 --> 00:04:50,550
this you're you're sitting on a chair

00:04:49,080 --> 00:04:51,419
and riding a bike at the same time

00:04:50,550 --> 00:04:57,990
that's impressive

00:04:51,419 --> 00:05:00,210
I know I know magical profits I'm gonna

00:04:57,990 --> 00:05:06,960
get my laptop are you getting more

00:05:00,210 --> 00:05:09,300
people to join us from yeah usually you

00:05:06,960 --> 00:05:13,849
get a good book nice in the channel

00:05:09,300 --> 00:05:13,849
usually duet here can call in

00:05:16,140 --> 00:05:31,790
[Music]

00:05:35,150 --> 00:05:38,350
[Music]

00:05:46,210 --> 00:06:18,230
[Music]

00:06:14,330 --> 00:06:22,500
[Laughter]

00:06:18,230 --> 00:06:38,970
what is this crazy did you guys take a

00:06:22,500 --> 00:06:41,390
look at it okay nice man it's all about

00:06:38,970 --> 00:06:47,220
developer productivity

00:06:41,390 --> 00:06:47,220
[Music]

00:06:52,090 --> 00:07:06,050
[Music]

00:07:15,820 --> 00:07:43,940
yeah more people joining order a hill

00:07:20,390 --> 00:07:46,150
Chris so we got seven and then Chris

00:07:43,940 --> 00:07:46,150
what

00:07:53,010 --> 00:07:56,220
[Music]

00:08:13,370 --> 00:08:16,559
[Music]

00:08:47,330 --> 00:08:50,519
[Music]

00:09:16,530 --> 00:09:26,280
plug it and see if longer successfully

00:09:19,680 --> 00:09:26,280
yes I'm not local

00:09:31,140 --> 00:09:35,679
[Music]

00:09:50,890 --> 00:09:54,580
[Music]

00:09:59,149 --> 00:10:07,740
all right more people joining great

00:10:02,220 --> 00:10:57,689
great great we'll probably give you all

00:10:07,740 --> 00:11:02,100
maybe a few minutes all right welcome

00:10:57,689 --> 00:11:04,679
everybody we'll just wait maybe let's

00:11:02,100 --> 00:11:22,769
say two more minutes I have eight

00:11:04,679 --> 00:11:28,230
o'clock with 35 seconds so might have to

00:11:22,769 --> 00:11:34,410
pay royalties on this to you some checks

00:11:28,230 --> 00:11:36,779
to I think that's it there's like a

00:11:34,410 --> 00:11:41,220
limit to how long you can use those

00:11:36,779 --> 00:11:43,759
things until they start working I have

00:11:41,220 --> 00:11:43,759
no limits

00:11:46,429 --> 00:11:55,709
well I just I just think Steven and he

00:11:53,879 --> 00:11:58,160
is gonna be joining hi

00:11:55,709 --> 00:12:02,279
all right excellent thank you still good

00:11:58,160 --> 00:12:04,339
and then Dmitry will also be joining hey

00:12:02,279 --> 00:12:06,299
Danny

00:12:04,339 --> 00:12:07,500
actually daddy since you attend these

00:12:06,299 --> 00:12:10,320
things you can probably give an update

00:12:07,500 --> 00:12:12,790
for Bosch instead of DK

00:12:10,320 --> 00:12:16,800
you know I'll leave you that today he's

00:12:12,790 --> 00:12:16,800
actually told me he's gonna join many

00:12:17,430 --> 00:12:22,230
people danny is a member of the Boston

00:12:23,760 --> 00:12:33,280
answering questions yeah unstack and

00:12:29,020 --> 00:12:41,260
also in the github issues them in PR I

00:12:33,280 --> 00:12:43,360
so appreciate that Baba can give us an

00:12:41,260 --> 00:12:51,280
update at some point on one time because

00:12:43,360 --> 00:12:54,460
you we can't make it course you can be

00:12:51,280 --> 00:12:57,310
biased that's okay alright 30 more

00:12:54,460 --> 00:12:59,230
seconds and then we'll get started I

00:12:57,310 --> 00:13:01,900
think we got everybody here and we also

00:12:59,230 --> 00:13:04,320
have chip who's gonna start to give us

00:13:01,900 --> 00:13:09,940
an update on what's going on foundation

00:13:04,320 --> 00:13:12,900
yep yep I saw that there was some

00:13:09,940 --> 00:13:18,820
problem with light traffic lights

00:13:12,900 --> 00:13:21,210
there's two the machine if we disappear

00:13:18,820 --> 00:13:25,740
from SF you know what happened is just

00:13:21,210 --> 00:13:31,570
electricity maybe smoking whole scenario

00:13:25,740 --> 00:13:33,580
yeah good but let's open ah okay so

00:13:31,570 --> 00:13:36,040
welcome everybody this is August cab

00:13:33,580 --> 00:13:38,830
call there's quite a bit of things to

00:13:36,040 --> 00:13:42,070
cover we always start with

00:13:38,830 --> 00:13:47,170
cff update foundation update I know

00:13:42,070 --> 00:13:50,590
chip should be on a call alright yeah

00:13:47,170 --> 00:13:55,470
sir excellent yes yes yes you're just a

00:13:50,590 --> 00:13:58,290
number but that's fine go ahead chipper

00:13:55,470 --> 00:14:00,510
no problem two things I want to point

00:13:58,290 --> 00:14:02,430
out for those of you that are users of

00:14:00,510 --> 00:14:04,380
Cloud Foundry we have a user survey

00:14:02,430 --> 00:14:06,900
running through almost to the end of the

00:14:04,380 --> 00:14:09,480
month take a look in the notice I put a

00:14:06,900 --> 00:14:11,790
link in there at the awesomes you could

00:14:09,480 --> 00:14:13,950
fill it out we want to know who all is

00:14:11,790 --> 00:14:15,480
using the technology and then be able to

00:14:13,950 --> 00:14:17,990
share some interesting information back

00:14:15,480 --> 00:14:20,340
to everybody you know in aggregate about

00:14:17,990 --> 00:14:23,130
all of the widespread use that we have

00:14:20,340 --> 00:14:25,740
the other thing of course summit in

00:14:23,130 --> 00:14:28,020
Basel Switzerland coming up if you're on

00:14:25,740 --> 00:14:29,400
CF dev or the CF flash mailing list you

00:14:28,020 --> 00:14:31,320
should have seen a contributor code if

00:14:29,400 --> 00:14:33,150
you contributed anything to the projects

00:14:31,320 --> 00:14:36,090
as usual feel free to use that to

00:14:33,150 --> 00:14:37,920
register the first wave of talk

00:14:36,090 --> 00:14:40,830
announcements of artists had gone out I

00:14:37,920 --> 00:14:44,580
put that link in there as well there are

00:14:40,830 --> 00:14:48,390
more coming so you know really really

00:14:44,580 --> 00:14:50,370
amazing talk submissions yet again it's

00:14:48,390 --> 00:14:52,080
going to be a great program we're also

00:14:50,370 --> 00:14:53,730
going to change up the the mainstage

00:14:52,080 --> 00:14:56,730
quite a bit it's going to be a lot more

00:14:53,730 --> 00:14:58,380
technical a lot more demos hopefully it

00:14:56,730 --> 00:15:00,690
should be really interesting for those

00:14:58,380 --> 00:15:03,390
of you that have attended in the past

00:15:00,690 --> 00:15:11,130
that'll be an improvement and I think

00:15:03,390 --> 00:15:12,900
that's about it any questions oh you

00:15:11,130 --> 00:15:15,450
know what the event is gonna be in Basel

00:15:12,900 --> 00:15:19,110
I guess it's kind of curious because

00:15:15,450 --> 00:15:22,710
I've been to Basel a few times what the

00:15:19,110 --> 00:15:25,530
the after-hours event yeah yeah cuz

00:15:22,710 --> 00:15:28,200
there's no call the three kings hotel

00:15:25,530 --> 00:15:31,440
which is really amazing and very old and

00:15:28,200 --> 00:15:44,070
and they have a great bar so I don't

00:15:31,440 --> 00:15:47,850
know oh okay that's interesting I didn't

00:15:44,070 --> 00:15:50,089
read that in Basel anyway alright okay

00:15:47,850 --> 00:15:53,250
chip any questions which if any more

00:15:50,089 --> 00:15:57,360
comments all right hopefully we see

00:15:53,250 --> 00:15:59,880
everybody in Basel the other thing we're

00:15:57,360 --> 00:16:03,920
going to cover our sort of project

00:15:59,880 --> 00:16:07,350
highlights the corporate the core PMC's

00:16:03,920 --> 00:16:08,819
you we can't make it to lets cover boss

00:16:07,350 --> 00:16:12,479
first because Dimitri

00:16:08,819 --> 00:16:14,910
here and he has a contract so DK give us

00:16:12,479 --> 00:16:19,379
any I like you wanna mention for Bosch I

00:16:14,910 --> 00:16:25,249
know there's a DNS thingy going on hey

00:16:19,379 --> 00:16:29,189
yeah we can rock so yeah we've just

00:16:25,249 --> 00:16:32,369
recently shipped boards 263 we had to

00:16:29,189 --> 00:16:38,129
fill in the release notes but we've

00:16:32,369 --> 00:16:40,799
gotten one of the you know long-awaited

00:16:38,129 --> 00:16:45,769
DNS features that we needed to do this

00:16:40,799 --> 00:16:50,729
was a DNS feature for being able to

00:16:45,769 --> 00:16:54,149
point to an entire link right so covers

00:16:50,729 --> 00:16:56,789
all of the instances inside as opposed

00:16:54,149 --> 00:17:00,119
to what was previously possible was just

00:16:56,789 --> 00:17:04,230
to have a DNS entry for for individual

00:17:00,119 --> 00:17:07,350
instances so that's a one of the last

00:17:04,230 --> 00:17:12,750
remaining steps for DNS to kind of be a

00:17:07,350 --> 00:17:15,539
consumable fully by by CF our next steps

00:17:12,750 --> 00:17:20,970
for DNS would be to automatically insert

00:17:15,539 --> 00:17:22,620
the domain names into the certificates

00:17:20,970 --> 00:17:25,409
that are generated automatically by

00:17:22,620 --> 00:17:30,080
credit so that would be some upcoming

00:17:25,409 --> 00:17:38,399
working bosch as well aside from that

00:17:30,080 --> 00:17:43,379
we'll continue to work on director

00:17:38,399 --> 00:17:46,200
having ability to run co-located errands

00:17:43,379 --> 00:17:48,179
so that's not something that the thing

00:17:46,200 --> 00:17:48,929
is he have documented young working on

00:17:48,179 --> 00:17:52,350
that right now

00:17:48,929 --> 00:17:56,750
but now with two six three you should be

00:17:52,350 --> 00:18:01,409
able to place an errand on to any

00:17:56,750 --> 00:18:03,809
existing service lifecycle instance and

00:18:01,409 --> 00:18:06,600
should be able to run the errand without

00:18:03,809 --> 00:18:08,370
having to pay the cost for spinning up

00:18:06,600 --> 00:18:11,480
and spinning down the machine and of

00:18:08,370 --> 00:18:14,669
course this is this kind of a

00:18:11,480 --> 00:18:16,830
functionality is meant to support maybe

00:18:14,669 --> 00:18:20,309
your errant can trigger some kind of a

00:18:16,830 --> 00:18:22,049
you know API call or maybe it can you

00:18:20,309 --> 00:18:22,710
know write down some debug information

00:18:22,049 --> 00:18:25,320
to

00:18:22,710 --> 00:18:28,289
walk files or do something else like

00:18:25,320 --> 00:18:32,850
promote a master from you know sleep

00:18:28,289 --> 00:18:34,500
someone right so it's a hopefully opens

00:18:32,850 --> 00:18:39,330
up a few use cases that were impossible

00:18:34,500 --> 00:18:40,799
before them should be a lot faster now

00:18:39,330 --> 00:18:42,840
of course the previous air and

00:18:40,799 --> 00:18:45,570
functionality still available where it's

00:18:42,840 --> 00:18:51,390
still life cycle air and machines will

00:18:45,570 --> 00:18:55,500
continue to be available for upcoming

00:18:51,390 --> 00:18:57,480
features we have some functionality that

00:18:55,500 --> 00:19:02,010
we call internally hot swap over here

00:18:57,480 --> 00:19:04,440
this is to allow to quickly migrate from

00:19:02,010 --> 00:19:07,620
one machine to another while doing a

00:19:04,440 --> 00:19:09,870
stem-cell updates or just recreate so

00:19:07,620 --> 00:19:13,409
this is each instance may potentially

00:19:09,870 --> 00:19:15,720
have a second VM during the update

00:19:13,409 --> 00:19:19,770
scenario such that the downtime window

00:19:15,720 --> 00:19:21,750
for a service to when it's stopped and

00:19:19,770 --> 00:19:25,080
then when it started on the net on the

00:19:21,750 --> 00:19:27,809
new machine is smaller and hopefully

00:19:25,080 --> 00:19:30,570
that will also improve some of the speed

00:19:27,809 --> 00:19:34,620
of the deploys because we would be able

00:19:30,570 --> 00:19:40,289
to create some bulk VMs upfront and of

00:19:34,620 --> 00:19:41,309
course we can do a deletion later and so

00:19:40,289 --> 00:19:45,840
that's that's something that we're

00:19:41,309 --> 00:19:53,580
planning to kind of a start working on

00:19:45,840 --> 00:19:56,909
you know quite soon yeah that's from

00:19:53,580 --> 00:20:02,330
 I don't really think there's any

00:19:56,909 --> 00:20:05,880
other kind of a major pieces but yeah

00:20:02,330 --> 00:20:08,760
all right cool ok any question for

00:20:05,880 --> 00:20:21,990
Dimitri on boss or everything either

00:20:08,760 --> 00:20:24,080
said we love you man you see that and I

00:20:21,990 --> 00:20:26,909
you know anything to do with it man

00:20:24,080 --> 00:20:29,370
excellent all right go to your order

00:20:26,909 --> 00:20:32,520
meeting yeah I got I got a little tear

00:20:29,370 --> 00:20:34,909
rolling down my cheek take a picture

00:20:32,520 --> 00:20:34,909
quickly

00:20:35,830 --> 00:20:44,450
screenshot Oh all right thank you decay

00:20:41,240 --> 00:20:47,720
so as I mentioned you we couldn't make

00:20:44,450 --> 00:20:51,650
it but Erica's here so every can give us

00:20:47,720 --> 00:20:53,750
an update on what he thinks yeah sure

00:20:51,650 --> 00:20:55,250
I'll try to cover a few things I'm aware

00:20:53,750 --> 00:20:58,220
of I think one thing that's happened in

00:20:55,250 --> 00:21:02,150
the last month is that Kathy is declared

00:20:58,220 --> 00:21:05,000
the ev3 CC API generally available and I

00:21:02,150 --> 00:21:06,770
know the CLI is starting to build new

00:21:05,000 --> 00:21:08,120
commands or convert existing commands on

00:21:06,770 --> 00:21:09,850
top of that API so that's pretty

00:21:08,120 --> 00:21:13,420
exciting

00:21:09,850 --> 00:21:15,740
one thing that we're doing on diego is

00:21:13,420 --> 00:21:17,630
starting to work with kathy to support

00:21:15,740 --> 00:21:19,160
rolling app updates so we've been doing

00:21:17,630 --> 00:21:20,810
some spiking and exploration on the

00:21:19,160 --> 00:21:22,760
diego side about what api is we would

00:21:20,810 --> 00:21:24,260
want to introduce to support that to

00:21:22,760 --> 00:21:25,730
take as much of the burden as possible

00:21:24,260 --> 00:21:27,770
off of cloud controller in terms of

00:21:25,730 --> 00:21:30,290
managing the instance by instance

00:21:27,770 --> 00:21:32,240
details of a rolling update Thrax

00:21:30,290 --> 00:21:33,470
so that's that's pretty exciting that

00:21:32,240 --> 00:21:35,960
should be fun work for the Diego team

00:21:33,470 --> 00:21:37,460
preserver see some other runtime folks

00:21:35,960 --> 00:21:39,530
on the line too if they want to chime in

00:21:37,460 --> 00:21:41,090
about things that they know we're going

00:21:39,530 --> 00:21:43,150
on of particular interest to the

00:21:41,090 --> 00:21:43,150
community

00:21:43,300 --> 00:21:48,290
let's see Steven there I know we've been

00:21:45,850 --> 00:21:51,110
approaching the completion of multi

00:21:48,290 --> 00:21:56,120
build PAC support even though if you had

00:21:51,110 --> 00:21:59,420
any updates so the latest capi release I

00:21:56,120 --> 00:22:01,700
believe has a full support for multi go

00:21:59,420 --> 00:22:04,550
packs in the v3 API there's no way to

00:22:01,700 --> 00:22:06,260
use the C up CLI to push on app and

00:22:04,550 --> 00:22:09,860
specify multiple impacts that you can do

00:22:06,260 --> 00:22:12,460
it you know in JSON CSCL I work because

00:22:09,860 --> 00:22:15,520
I think on the way to talk to that team

00:22:12,460 --> 00:22:21,920
but I think it's been well when I hear

00:22:15,520 --> 00:22:22,760
and the build hacks are mostly converted

00:22:21,920 --> 00:22:24,710
to work with each other

00:22:22,760 --> 00:22:26,660
I think Java is the remaining one that

00:22:24,710 --> 00:22:27,800
that still needs to be converted so it

00:22:26,660 --> 00:22:31,750
can communicate with other build packs

00:22:27,800 --> 00:22:31,750
so you can use it along with it go packs

00:22:32,350 --> 00:22:40,430
that's put it and I want to thank the

00:22:37,850 --> 00:22:41,080
anonymous Wolverine that's keeping

00:22:40,430 --> 00:22:43,980
really

00:22:41,080 --> 00:22:46,440
that's fantastic thank you

00:22:43,980 --> 00:22:48,840
all right remember you can post

00:22:46,440 --> 00:22:51,929
questions on the cab cause you can't see

00:22:48,840 --> 00:22:53,970
or you want to you know like just have a

00:22:51,929 --> 00:22:55,559
record of it

00:22:53,970 --> 00:22:58,590
and we can address it now or later

00:22:55,559 --> 00:23:01,889
depending on what the question is okay

00:22:58,590 --> 00:23:05,309
so I guess this is this is it for run

00:23:01,889 --> 00:23:06,990
time Eric usually stays so if you have

00:23:05,309 --> 00:23:08,970
more questions later on you can ask him

00:23:06,990 --> 00:23:11,370
and Stephen will be presenting so you

00:23:08,970 --> 00:23:15,210
can definitely ask him also

00:23:11,370 --> 00:23:17,250
so for for extensions because today's

00:23:15,210 --> 00:23:19,080
call is going to be covering pretty much

00:23:17,250 --> 00:23:20,549
two things of extensions then you just

00:23:19,080 --> 00:23:23,190
mentioned one thing and then we'll just

00:23:20,549 --> 00:23:26,700
get to the presentation is that the bbr

00:23:23,190 --> 00:23:30,059
and I think he raises here accepted it's

00:23:26,700 --> 00:23:32,010
an incubating project now I would highly

00:23:30,059 --> 00:23:35,179
suggest you to take a look at it it's

00:23:32,010 --> 00:23:38,250
it's called Bosh backup and restore and

00:23:35,179 --> 00:23:40,470
it allows you to backup your entire

00:23:38,250 --> 00:23:41,850
Cloud Foundry and also restore it so

00:23:40,470 --> 00:23:46,559
it's pretty cool

00:23:41,850 --> 00:23:48,659
give it give it a I guess a try if you

00:23:46,559 --> 00:23:51,690
have never seen it I don't know clear as

00:23:48,659 --> 00:23:54,590
you want to add anything to this we have

00:23:51,690 --> 00:23:58,710
a slide channel so come visit us there

00:23:54,590 --> 00:24:00,990
and we're also working to change the way

00:23:58,710 --> 00:24:03,090
clip boundaries backed up so that each

00:24:00,990 --> 00:24:05,880
of the releases in Cloud Foundry that

00:24:03,090 --> 00:24:09,450
has data rights their own backup and

00:24:05,880 --> 00:24:12,539
restore scripts and that enables some

00:24:09,450 --> 00:24:15,210
improvement does it still stop the world

00:24:12,539 --> 00:24:18,029
must be curbing or it can it be that it

00:24:15,210 --> 00:24:20,039
can support backing up for real

00:24:18,029 --> 00:24:25,669
databases like PostgreSQL for example

00:24:20,039 --> 00:24:31,529
where you can do it well for consistency

00:24:25,669 --> 00:24:33,330
for example you have to stop the CCTV

00:24:31,529 --> 00:24:36,840
from mutating while you're taking a

00:24:33,330 --> 00:24:39,929
backup of other databases so there will

00:24:36,840 --> 00:24:42,240
be there is a requirement for downtime

00:24:39,929 --> 00:24:44,429
but those I know those teams are working

00:24:42,240 --> 00:24:47,659
hard to minimize that downtime looking

00:24:44,429 --> 00:24:47,659
at things like a read-only mode

00:24:51,870 --> 00:24:58,240
interesting okay cool

00:24:55,950 --> 00:25:02,920
all right any other questions with

00:24:58,240 --> 00:25:04,630
heroes on Bush backup/restore no okay I

00:25:02,920 --> 00:25:08,350
don't know if anybody else wants to

00:25:04,630 --> 00:25:10,360
mention about extensions will eventually

00:25:08,350 --> 00:25:12,100
start having more these sort of updates

00:25:10,360 --> 00:25:14,140
since there are a bunch of projects

00:25:12,100 --> 00:25:16,410
incubating but we'll talk about this one

00:25:14,140 --> 00:25:20,620
so unless you have any other questions

00:25:16,410 --> 00:25:21,190
let me just pass the mic to Steven

00:25:20,620 --> 00:25:24,220
Devine

00:25:21,190 --> 00:25:26,470
he's a pivot I guess a new pivot

00:25:24,220 --> 00:25:28,330
relatively in Michigan and he's gonna

00:25:26,470 --> 00:25:31,900
talk to us about no he's been there

00:25:28,330 --> 00:25:34,360
forever sorry my the first time I meet

00:25:31,900 --> 00:25:37,090
him anyway he's gonna talk about CF

00:25:34,360 --> 00:25:41,320
local I got a chance to see this this is

00:25:37,090 --> 00:25:45,670
pretty good hey yeah so this is pretty

00:25:41,320 --> 00:25:47,440
quick demo CF local is a CF CLI plugin

00:25:45,670 --> 00:25:49,690
that sort of acts as a docker

00:25:47,440 --> 00:25:52,510
translation layer so it can take

00:25:49,690 --> 00:25:54,090
applications in CS and pull them down

00:25:52,510 --> 00:25:57,220
and run them locally in darker

00:25:54,090 --> 00:25:59,050
complexions that you know locally or

00:25:57,220 --> 00:26:01,660
whatever backup to cloud foundry as

00:25:59,050 --> 00:26:04,420
droplet and it can stage applications

00:26:01,660 --> 00:26:10,840
locally to so let me share my screen I

00:26:04,420 --> 00:26:15,930
don't run through a quick demo is that

00:26:10,840 --> 00:26:21,190
big enough can you see this text yeah

00:26:15,930 --> 00:26:25,870
all right so I have spring music push

00:26:21,190 --> 00:26:32,140
right here as spring music 816 and I had

00:26:25,870 --> 00:26:34,750
a clear DB @ soompi WS so I would

00:26:32,140 --> 00:26:38,230
clearly be my sequel instance bound to

00:26:34,750 --> 00:26:45,090
spring music so it's just an empty

00:26:38,230 --> 00:26:48,280
directory I'm gonna use CF to download

00:26:45,090 --> 00:26:51,370
this application oh also before I do

00:26:48,280 --> 00:26:58,570
that if you look at the environment for

00:26:51,370 --> 00:27:02,370
spring music you can see that I just

00:26:58,570 --> 00:27:05,270
have one extra environment variable set

00:27:02,370 --> 00:27:07,040
sorry CFO courtesy of local test

00:27:05,270 --> 00:27:21,380
so that I'm going to pull spring music

00:27:07,040 --> 00:27:23,810
down should just take a few seconds so

00:27:21,380 --> 00:27:25,790
it's making a copy on your machine right

00:27:23,810 --> 00:27:27,260
yeah it's pulling the droplet in the

00:27:25,790 --> 00:27:29,270
environment so you can see I now have a

00:27:27,260 --> 00:27:31,610
local channel and a spring music that

00:27:29,270 --> 00:27:32,990
droplet fun so if I check out that local

00:27:31,610 --> 00:27:35,510
you know file you can see it pulled down

00:27:32,990 --> 00:27:38,270
the environment of the app at Cod the

00:27:35,510 --> 00:27:40,010
app name pull down a droplet if you have

00:27:38,270 --> 00:27:41,750
a custom start command set it'll pull

00:27:40,010 --> 00:27:44,630
that down you have staging environment

00:27:41,750 --> 00:27:45,710
variable groups or running environment

00:27:44,630 --> 00:27:47,960
variable groups it will pull those down

00:27:45,710 --> 00:27:50,660
in separate places so you can really

00:27:47,960 --> 00:27:57,020
replicate an environment locally and

00:27:50,660 --> 00:27:59,210
then I can run my app so this is a

00:27:57,020 --> 00:28:01,340
spring app what I'm going to do is

00:27:59,210 --> 00:28:03,890
specify the name of the remote

00:28:01,340 --> 00:28:07,400
application you saw in CI basketball so

00:28:03,890 --> 00:28:09,860
spring music it starts with the death

00:28:07,400 --> 00:28:14,240
flag and what that will do is this will

00:28:09,860 --> 00:28:15,830
actually make CF local use an SSH tunnel

00:28:14,240 --> 00:28:18,590
to connect up to the application and

00:28:15,830 --> 00:28:22,040
then do port forwarding to forward

00:28:18,590 --> 00:28:24,350
through the SSH tile to forward all of

00:28:22,040 --> 00:28:27,020
the services connected to the remote

00:28:24,350 --> 00:28:28,880
application at the local application so

00:28:27,020 --> 00:28:31,690
all the remote services will become

00:28:28,880 --> 00:28:34,160
available in for this local application

00:28:31,690 --> 00:28:35,330
even though you know even in an

00:28:34,160 --> 00:28:37,730
environment where it couldn't connect

00:28:35,330 --> 00:28:39,880
them from my host so we're going to do

00:28:37,730 --> 00:28:39,880
that

00:28:40,850 --> 00:28:42,910
you

00:28:43,390 --> 00:28:49,100
and it should just take a second get

00:28:45,440 --> 00:28:52,039
into so you can see now it's running on

00:28:49,100 --> 00:28:53,539
a local port and there's this pre music

00:28:52,039 --> 00:28:56,539
output and you can see us forwarding

00:28:53,539 --> 00:29:02,059
that my sequel instance right there for

00:28:56,539 --> 00:29:04,330
it in clear DB and there's just bring up

00:29:02,059 --> 00:29:10,100
starting locally so if I go up here and

00:29:04,330 --> 00:29:12,620
check out my local document you see I

00:29:10,100 --> 00:29:15,620
have this container running you can see

00:29:12,620 --> 00:29:20,870
it's for name port to localhost 8080 in

00:29:15,620 --> 00:29:26,779
the container and dump into that

00:29:20,870 --> 00:29:29,299
container you buzz if I want to see I

00:29:26,779 --> 00:29:34,039
have my jobs bill tech app running in

00:29:29,299 --> 00:29:35,330
there and they have this SSH tile going

00:29:34,039 --> 00:29:37,190
up to the remote application and

00:29:35,330 --> 00:29:38,539
forwarding with local services and even

00:29:37,190 --> 00:29:40,580
if I take a look at the environment side

00:29:38,539 --> 00:29:43,760
of the app you can see that my V cap

00:29:40,580 --> 00:29:46,279
services has been rewritten to use the

00:29:43,760 --> 00:29:48,770
SSH tunnel instead of the remote SSH

00:29:46,279 --> 00:29:50,539
tunnel there's a lot of logic rewriting

00:29:48,770 --> 00:29:54,020
every possible kind of decap services to

00:29:50,539 --> 00:29:55,760
point back into the local phone and so

00:29:54,020 --> 00:29:58,610
they go back here to the applications

00:29:55,760 --> 00:30:00,470
running I'm gonna switch screens give me

00:29:58,610 --> 00:30:01,909
one second to a browser so I can show

00:30:00,470 --> 00:30:05,679
you spray music running locally and

00:30:01,909 --> 00:30:05,679
remotely first I'm going to copy the

00:30:05,890 --> 00:30:14,320
local port number here and let me see if

00:30:10,700 --> 00:30:14,320
I can figure out how do you reach it

00:30:17,950 --> 00:30:24,740
okay one second alright and you see

00:30:21,169 --> 00:30:28,399
spring music there yep so you can see

00:30:24,740 --> 00:30:30,380
this is spring music random on PWS no

00:30:28,399 --> 00:30:33,049
here I'm going to access spring music

00:30:30,380 --> 00:30:35,720
running in my local docker container and

00:30:33,049 --> 00:30:37,970
you can see it's actually talking to the

00:30:35,720 --> 00:30:44,059
same database I had it you know if I

00:30:37,970 --> 00:30:48,610
change rumors here to rumors changed and

00:30:44,059 --> 00:30:51,679
then I look at my local app and fresh

00:30:48,610 --> 00:30:53,500
changed over there too so I have a local

00:30:51,679 --> 00:30:55,790
app in a remote app talking to the same

00:30:53,500 --> 00:30:58,520
database

00:30:55,790 --> 00:31:01,370
and that's most of what I wanted mo I

00:30:58,520 --> 00:31:04,480
think some other features yep local has

00:31:01,370 --> 00:31:08,320
is it can watch a local directory that

00:31:04,480 --> 00:31:10,580
can use a doctor volume mounting to

00:31:08,320 --> 00:31:12,320
mount a direct the app directory in the

00:31:10,580 --> 00:31:13,790
container locally and then watch that

00:31:12,320 --> 00:31:16,250
directory so as you change things I'll

00:31:13,790 --> 00:31:17,480
constantly be loading and so you can use

00:31:16,250 --> 00:31:19,220
that to iterate really quickly I

00:31:17,480 --> 00:31:21,200
couldn't come up with a demo that showed

00:31:19,220 --> 00:31:22,160
that great at size we got to talk about

00:31:21,200 --> 00:31:26,930
it

00:31:22,160 --> 00:31:29,150
the this is the github page it has a

00:31:26,930 --> 00:31:31,250
ability to push apps to so you can stage

00:31:29,150 --> 00:31:32,810
an application locally and replace your

00:31:31,250 --> 00:31:35,330
Cloud Foundry chocolate with the droplet

00:31:32,810 --> 00:31:37,370
this all uses the v2 API so it works

00:31:35,330 --> 00:31:39,500
against any in sugar because the WS or

00:31:37,370 --> 00:31:41,750
bluemix or whatever you know working

00:31:39,500 --> 00:31:46,760
Australian foundations have been a

00:31:41,750 --> 00:31:50,240
support soon too and that is basically

00:31:46,760 --> 00:31:52,370
you can export applications you staged

00:31:50,240 --> 00:31:54,320
locally as a docker image if you want to

00:31:52,370 --> 00:31:55,970
run them you know kubernetes or wherever

00:31:54,320 --> 00:31:57,620
you want so sort of acts as a

00:31:55,970 --> 00:32:01,880
translation layer and that that respect

00:31:57,620 --> 00:32:03,130
to you and that's basically on it oh my

00:32:01,880 --> 00:32:06,710
god

00:32:03,130 --> 00:32:09,500
so for minutes and hours that you are

00:32:06,710 --> 00:32:13,130
saving CF developers we should send you

00:32:09,500 --> 00:32:16,190
beer is that I don't know we'll see if

00:32:13,130 --> 00:32:18,320
it's useful vacuum all right cool any

00:32:16,190 --> 00:32:19,610
questions for Steven it's already

00:32:18,320 --> 00:32:22,790
immediately obvious that this is

00:32:19,610 --> 00:32:31,670
actually useful zone you can in okay

00:32:22,790 --> 00:32:38,810
good hopefully other people George you

00:32:31,670 --> 00:32:39,830
wanna mention juice no all right this is

00:32:38,810 --> 00:32:43,940
this is fantastic

00:32:39,830 --> 00:32:46,520
Steven so Steven submitted it as a I

00:32:43,940 --> 00:32:49,940
guess he's submitting it as an extension

00:32:46,520 --> 00:32:53,450
so it will be moving to guest imputation

00:32:49,940 --> 00:32:57,920
it if it goes to he wants to move it

00:32:53,450 --> 00:33:01,070
fast when I talk to him so if you have I

00:32:57,920 --> 00:33:03,650
think I got one question what's what's

00:33:01,070 --> 00:33:06,140
on the roadmap for this there is there

00:33:03,650 --> 00:33:07,070
any upcoming in even more interesting

00:33:06,140 --> 00:33:09,320
things look

00:33:07,070 --> 00:33:12,710
right so far yeah so that the next

00:33:09,320 --> 00:33:14,600
interesting thing is a use case I've

00:33:12,710 --> 00:33:17,840
identified talking to a lot of spring

00:33:14,600 --> 00:33:19,820
people is being able to do local

00:33:17,840 --> 00:33:21,200
development on one micro service of a

00:33:19,820 --> 00:33:23,060
large micro-service cluster that you

00:33:21,200 --> 00:33:25,610
couldn't run look like entirely locally

00:33:23,060 --> 00:33:27,560
so it does the service forwarding thing

00:33:25,610 --> 00:33:30,410
now where you can act can connect to

00:33:27,560 --> 00:33:32,510
remote services but it no apps running

00:33:30,410 --> 00:33:34,730
the platform can connect it so the next

00:33:32,510 --> 00:33:37,460
feature is and it's actually mostly done

00:33:34,730 --> 00:33:39,470
already it will lay push in it it'll

00:33:37,460 --> 00:33:41,930
push an application automatically that

00:33:39,470 --> 00:33:44,510
doesn't have a anything running but an

00:33:41,930 --> 00:33:46,610
SSH tunnel from port 8080 back to the

00:33:44,510 --> 00:33:48,500
local amp so you can sort of have a shim

00:33:46,610 --> 00:33:50,900
at beginning Cloud Foundry

00:33:48,500 --> 00:33:52,520
that's secretly all forwarding traffic

00:33:50,900 --> 00:33:55,640
back and forth between your local doctor

00:33:52,520 --> 00:33:56,840
and the you know remote application as

00:33:55,640 --> 00:33:58,460
something I didn't mention is this also

00:33:56,840 --> 00:34:00,080
works with a remote dr. Damon there's

00:33:58,460 --> 00:34:01,520
nothing you know special about the fact

00:34:00,080 --> 00:34:03,440
that my doctor is running locally so I

00:34:01,520 --> 00:34:05,600
can I can so use it I can't even run

00:34:03,440 --> 00:34:08,690
doctor locally I can use against the AWS

00:34:05,600 --> 00:34:11,120
instance or whatever and all that same

00:34:08,690 --> 00:34:12,860
service forwarding logic works including

00:34:11,120 --> 00:34:16,160
the new stuff that will come up the next

00:34:12,860 --> 00:34:19,250
release you're planning to do any kind

00:34:16,160 --> 00:34:21,440
of interesting integration with maybe

00:34:19,250 --> 00:34:24,020
forward some packets through container

00:34:21,440 --> 00:34:26,500
networking such that this application

00:34:24,020 --> 00:34:30,110
instance can talk to other ones directly

00:34:26,500 --> 00:34:32,780
yeah so I think I think it'll be pretty

00:34:30,110 --> 00:34:34,340
easy because once it can push an

00:34:32,780 --> 00:34:35,990
application that can be configured to do

00:34:34,340 --> 00:34:38,660
container networking to figure that

00:34:35,990 --> 00:34:42,620
application do that you know it'll be

00:34:38,660 --> 00:34:44,510
able to integrate the same way by

00:34:42,620 --> 00:34:45,410
forwarding ports you know whatever ports

00:34:44,510 --> 00:34:48,190
that need to talk to whatever

00:34:45,410 --> 00:34:57,410
applications from cloud9 be back to

00:34:48,190 --> 00:35:01,100
local instance they see cool cool cool

00:34:57,410 --> 00:35:03,470
yeah I second that all right any other

00:35:01,100 --> 00:35:07,220
questions for Stephen you know he has

00:35:03,470 --> 00:35:09,680
another meeting okay he's active in

00:35:07,220 --> 00:35:12,770
stock so Bingaman stock and look for the

00:35:09,680 --> 00:35:15,760
proposal Thank You Stephen thanks MA all

00:35:12,770 --> 00:35:18,830
right there was also a question for DK

00:35:15,760 --> 00:35:21,060
that was in the slack Channel yeah

00:35:18,830 --> 00:35:23,640
that's let's take it and then all

00:35:21,060 --> 00:35:25,410
you have to unchain your screen now the

00:35:23,640 --> 00:35:27,600
question is today there is a deployment

00:35:25,410 --> 00:35:29,760
why I love a lock when you run a Bosch

00:35:27,600 --> 00:35:32,910
errand well the new errand feature in

00:35:29,760 --> 00:35:39,540
Bosch allow it possible to run multiple

00:35:32,910 --> 00:35:41,880
errands in parallel so there's a we've

00:35:39,540 --> 00:35:46,130
kind of discussed it we haven't we

00:35:41,880 --> 00:35:50,160
haven't relaxed the locking just yet

00:35:46,130 --> 00:35:52,290
we're planning to though one interesting

00:35:50,160 --> 00:35:55,620
feature that we did get more or less for

00:35:52,290 --> 00:35:59,310
free with this release is that this will

00:35:55,620 --> 00:36:04,140
run multiple errands in parallel as long

00:35:59,310 --> 00:36:07,500
as so the concept of an errand really

00:36:04,140 --> 00:36:09,300
kind of a shifted from a concept of an

00:36:07,500 --> 00:36:11,040
instance group to a concept of a job

00:36:09,300 --> 00:36:13,110
right because it was always more or less

00:36:11,040 --> 00:36:15,830
an errand was a job it was just we were

00:36:13,110 --> 00:36:19,260
referencing it by an instance group name

00:36:15,830 --> 00:36:22,980
now what that means is if you have five

00:36:19,260 --> 00:36:25,020
instances of let's say zookeeper right

00:36:22,980 --> 00:36:27,330
in the same instance group or maybe in

00:36:25,020 --> 00:36:30,750
two different groups and each one of

00:36:27,330 --> 00:36:35,460
them have maybe an arrant called I don't

00:36:30,750 --> 00:36:37,350
know restart or smoke test or something

00:36:35,460 --> 00:36:39,090
like that right so it's the same errand

00:36:37,350 --> 00:36:41,250
but it just co-located on those all of

00:36:39,090 --> 00:36:44,340
those five instances right if you run

00:36:41,250 --> 00:36:47,670
errant smoke instances or smoke tests it

00:36:44,340 --> 00:36:49,440
will actually run the air and copy on

00:36:47,670 --> 00:36:51,360
all of the instances in parallel and

00:36:49,440 --> 00:36:54,000
we'll give you let's say five different

00:36:51,360 --> 00:36:57,060
results and you can also select which

00:36:54,000 --> 00:37:01,800
instances to run it on if you want to be

00:36:57,060 --> 00:37:05,010
a bit more selective right so even

00:37:01,800 --> 00:37:08,100
though we currently don't have purely

00:37:05,010 --> 00:37:10,380
run random errands in parallel on a

00:37:08,100 --> 00:37:14,460
deployment we do support current a

00:37:10,380 --> 00:37:22,080
feature that has ability to run multiple

00:37:14,460 --> 00:37:25,050
copies of the same eret suite Thank You

00:37:22,080 --> 00:37:31,070
DK let's see if there are any other last

00:37:25,050 --> 00:37:31,070
questions any follow-up for Dimitri

00:37:33,500 --> 00:37:40,230
No he said good information all right

00:37:36,600 --> 00:37:44,670
Thank You Dimitri okay so next

00:37:40,230 --> 00:37:46,470
presentation is by me I noticed that my

00:37:44,670 --> 00:37:49,370
colleague Simon Moser just joined and

00:37:46,470 --> 00:37:52,760
he's in bed so we're happy to join you

00:37:49,370 --> 00:38:00,240
Simon will you join us

00:37:52,760 --> 00:38:02,040
I'm body bed okay something anyway all

00:38:00,240 --> 00:38:13,110
right so let me share my screen and then

00:38:02,040 --> 00:38:15,830
we'll get started okay I know that you

00:38:13,110 --> 00:38:18,930
can see my screen because I can see it

00:38:15,830 --> 00:38:23,730
all right so it's I have a short

00:38:18,930 --> 00:38:30,630
presentation and a demo so let's get to

00:38:23,730 --> 00:38:33,390
the short presentation okay so the

00:38:30,630 --> 00:38:37,110
questions that a lot of people have been

00:38:33,390 --> 00:38:41,250
asking me since I took on CF extensions

00:38:37,110 --> 00:38:43,620
is you know where can I find those

00:38:41,250 --> 00:38:46,260
extensions and you know essentially what

00:38:43,620 --> 00:38:48,030
are the get up URL for them and which

00:38:46,260 --> 00:38:50,970
one of officials in which or not like

00:38:48,030 --> 00:38:53,460
for instance you just saw that Steven is

00:38:50,970 --> 00:38:55,470
adding this local but it's not

00:38:53,460 --> 00:38:57,750
necessarily official yet but it's

00:38:55,470 --> 00:38:59,910
interesting to know that if maybe for

00:38:57,750 --> 00:39:02,430
instance is part of the list of things

00:38:59,910 --> 00:39:07,140
that we're considering and you know I

00:39:02,430 --> 00:39:10,080
mentioned bbr before and there is a list

00:39:07,140 --> 00:39:14,310
and I can tell you in addition to the

00:39:10,080 --> 00:39:16,020
ones that you see on you know CF Deb

00:39:14,310 --> 00:39:18,180
there's tons of people trying to add

00:39:16,020 --> 00:39:21,080
more extensions and I think this is

00:39:18,180 --> 00:39:23,580
great right because this is essentially

00:39:21,080 --> 00:39:26,790
what we are trying to do with extensions

00:39:23,580 --> 00:39:29,400
which is to make sure that the community

00:39:26,790 --> 00:39:32,250
feels that they can always extend the

00:39:29,400 --> 00:39:34,110
platform and and hopefully make it more

00:39:32,250 --> 00:39:35,880
vibrant and so on and eventually some of

00:39:34,110 --> 00:39:38,130
those extensions could even become cool

00:39:35,880 --> 00:39:41,900
so how do you answer that question well

00:39:38,130 --> 00:39:43,030
right now the answer to this question

00:39:41,900 --> 00:39:46,650
the

00:39:43,030 --> 00:39:50,020
is to go to a Google Docs and

00:39:46,650 --> 00:39:52,900
essentially find the extensions here and

00:39:50,020 --> 00:39:55,090
then hoping that it's got its updated

00:39:52,900 --> 00:39:56,740
and all the links are correct and so on

00:39:55,090 --> 00:39:59,560
right and obviously this is not

00:39:56,740 --> 00:40:01,510
necessarily a very workable solution

00:39:59,560 --> 00:40:02,860
especially if we wanted to like if I

00:40:01,510 --> 00:40:04,450
wanted to see okay what are the ones

00:40:02,860 --> 00:40:06,280
that are incubating versus the one that

00:40:04,450 --> 00:40:07,990
opposed and so on right so there's tons

00:40:06,280 --> 00:40:10,330
of different views of this data and then

00:40:07,990 --> 00:40:12,760
what if we needed to add more data to it

00:40:10,330 --> 00:40:15,490
then I have to kind of ping everybody so

00:40:12,760 --> 00:40:17,320
it's it's kind of a pain and if we get

00:40:15,490 --> 00:40:22,780
to a hundred extensions and it's gonna

00:40:17,320 --> 00:40:26,890
become a real nightmare so to fix this I

00:40:22,780 --> 00:40:28,540
created a github but so instead of like

00:40:26,890 --> 00:40:34,240
going through the details let me give

00:40:28,540 --> 00:40:38,380
you an example about it works so there's

00:40:34,240 --> 00:40:40,510
a repo for it it generates this page and

00:40:38,380 --> 00:40:43,420
more than just this page is gonna

00:40:40,510 --> 00:40:46,090
generate more pages but basically you

00:40:43,420 --> 00:40:48,160
can see it's kind of like a list of the

00:40:46,090 --> 00:40:51,040
extensions obviously not all the

00:40:48,160 --> 00:40:53,530
extensions are currently being found

00:40:51,040 --> 00:40:56,200
because there's a little bit of steps

00:40:53,530 --> 00:40:58,840
that you need to do to add yourself and

00:40:56,200 --> 00:41:00,460
I'll talk about that but basically you

00:40:58,840 --> 00:41:03,610
can see like for instance the ones that

00:41:00,460 --> 00:41:07,090
I manage I added them because you know

00:41:03,610 --> 00:41:09,190
this to test and you can get the latest

00:41:07,090 --> 00:41:11,560
release for me and and so on and this

00:41:09,190 --> 00:41:12,480
project itself CF extension is a

00:41:11,560 --> 00:41:15,580
extension

00:41:12,480 --> 00:41:18,610
obviously it's proposed so I'm looking

00:41:15,580 --> 00:41:20,650
for your feedback and this list is going

00:41:18,610 --> 00:41:22,900
to become big so we'll have different

00:41:20,650 --> 00:41:24,700
views of it and we'll cut and slice it

00:41:22,900 --> 00:41:27,520
differently so how is this thing

00:41:24,700 --> 00:41:31,000
generated well there is like a JSON

00:41:27,520 --> 00:41:33,640
database that is kept up to date and

00:41:31,000 --> 00:41:36,370
I'll show you how that works but how do

00:41:33,640 --> 00:41:39,010
you add yourself to this list

00:41:36,370 --> 00:41:41,410
well it's very simple let's assume for

00:41:39,010 --> 00:41:45,450
instance that you have a new extension

00:41:41,410 --> 00:41:48,810
that you're working on sorry I need to

00:41:45,450 --> 00:41:48,810
loop here

00:41:54,310 --> 00:42:00,640
okay so let's say for instance you have

00:41:56,830 --> 00:42:03,400
an extension called test and you wanted

00:42:00,640 --> 00:42:04,270
to add it to to the list of official

00:42:03,400 --> 00:42:07,480
extension because you're going to

00:42:04,270 --> 00:42:09,700
propose it and so on you have to do one

00:42:07,480 --> 00:42:13,060
thing well really two but the first

00:42:09,700 --> 00:42:17,340
thing you do is you say you add a topic

00:42:13,060 --> 00:42:21,610
called CF extensions and that's it

00:42:17,340 --> 00:42:24,400
so once you do that eventually have a

00:42:21,610 --> 00:42:27,490
bot that will run periodically I'm gonna

00:42:24,400 --> 00:42:31,870
just gonna run it manually here and when

00:42:27,490 --> 00:42:34,060
it runs it discovers all projects that

00:42:31,870 --> 00:42:36,310
have CF extensions now not all projects

00:42:34,060 --> 00:42:38,860
and all organizations to a certain list

00:42:36,310 --> 00:42:42,010
of organizations that we will just

00:42:38,860 --> 00:42:46,180
curate I'm thinking you know incubator

00:42:42,010 --> 00:42:48,790
community Cloud Foundry as well as all

00:42:46,180 --> 00:42:51,820
the different member companies and then

00:42:48,790 --> 00:42:53,440
once you do that it will automatically

00:42:51,820 --> 00:42:56,620
discover that there's an extension and

00:42:53,440 --> 00:42:59,170
because this project is not a tract

00:42:56,620 --> 00:43:04,060
extension yet what it does is it submits

00:42:59,170 --> 00:43:07,000
an issue to you right well should have

00:43:04,060 --> 00:43:08,650
submitted an issue I guess I already had

00:43:07,000 --> 00:43:10,300
an issue so it noticed that I had an

00:43:08,650 --> 00:43:14,020
issue so that's why I didn't resubmit it

00:43:10,300 --> 00:43:17,970
and that in that issue you have to do

00:43:14,020 --> 00:43:21,010
one thing which is to add yourself a

00:43:17,970 --> 00:43:23,140
metadata file that contains this

00:43:21,010 --> 00:43:25,900
information so basically owner company

00:43:23,140 --> 00:43:29,650
contact email description the tracker

00:43:25,900 --> 00:43:33,070
URL the proposal URL eventually and then

00:43:29,650 --> 00:43:35,230
the date that you're proposing once you

00:43:33,070 --> 00:43:39,579
do that

00:43:35,230 --> 00:43:41,980
so I'm going to go ahead to test so I'm

00:43:39,579 --> 00:43:44,280
going to close this issue and add that

00:43:41,980 --> 00:43:44,280
file

00:43:47,810 --> 00:43:56,880
so that's your extensions now first you

00:43:54,330 --> 00:44:01,110
would change the details here so I'll

00:43:56,880 --> 00:44:06,510
just change one say IBM and then you

00:44:01,110 --> 00:44:09,210
save it then when the the bot runs again

00:44:06,510 --> 00:44:11,490
it runs you know a couple times a day

00:44:09,210 --> 00:44:13,880
that's my plan

00:44:11,490 --> 00:44:17,010
now it's gonna move that project to

00:44:13,880 --> 00:44:20,670
contract and the reason we do this is so

00:44:17,010 --> 00:44:22,650
that I can control the projects that are

00:44:20,670 --> 00:44:25,650
being tracked and projects that are not

00:44:22,650 --> 00:44:27,720
being tracked right so for instance if

00:44:25,650 --> 00:44:30,240
you go here it should have submitted

00:44:27,720 --> 00:44:32,550
that there is a new track project

00:44:30,240 --> 00:44:34,740
eventually it should refresh it there we

00:44:32,550 --> 00:44:37,170
go so you can see now that the project

00:44:34,740 --> 00:44:39,450
is on track and then let's say for

00:44:37,170 --> 00:44:42,600
instance the project gets proposed so

00:44:39,450 --> 00:44:44,190
basically it's not just you know project

00:44:42,600 --> 00:44:46,680
that wants to be an extension but it

00:44:44,190 --> 00:44:50,130
wants to become an official extension so

00:44:46,680 --> 00:44:51,180
it's going to the process then I and of

00:44:50,130 --> 00:44:54,090
course you could submit a pull request

00:44:51,180 --> 00:44:57,270
for any of those changes will modify

00:44:54,090 --> 00:44:59,730
this status page so this is a way I can

00:44:57,270 --> 00:45:01,200
control trolling so if people start

00:44:59,730 --> 00:45:03,060
putting some extensions everywhere

00:45:01,200 --> 00:45:08,160
they'll just go to one track which is

00:45:03,060 --> 00:45:13,460
fine and I will add an entry here that

00:45:08,160 --> 00:45:17,250
says basically that the test project in

00:45:13,460 --> 00:45:20,990
the Cloud Foundry incubator is let's say

00:45:17,250 --> 00:45:27,060
unknown for this point and then save it

00:45:20,990 --> 00:45:30,560
and then once the the bot runs again it

00:45:27,060 --> 00:45:35,820
runs again as I said couple times a day

00:45:30,560 --> 00:45:38,510
it will move the project now to two

00:45:35,820 --> 00:45:41,370
tracked and then as things change and

00:45:38,510 --> 00:45:43,980
the information changes and so on it

00:45:41,370 --> 00:45:46,020
will be correct the other thing to

00:45:43,980 --> 00:45:48,870
mention is that as every time the bot

00:45:46,020 --> 00:45:51,060
runs it generates new Doc's and then of

00:45:48,870 --> 00:45:56,060
course I generate new get up pages so

00:45:51,060 --> 00:45:56,060
just friends so we should see

00:46:01,350 --> 00:46:05,220
all right live demos

00:46:07,839 --> 00:46:14,559
singular one yeah it should have been

00:46:21,940 --> 00:46:25,440
[Music]

00:46:26,300 --> 00:46:29,960
okay maybe I made a mistake

00:46:30,390 --> 00:46:32,990
Patrick status

00:46:36,670 --> 00:46:38,730
you

00:46:45,869 --> 00:46:52,000
that's all here

00:46:48,390 --> 00:46:54,130
maybe github I found that it takes a

00:46:52,000 --> 00:46:58,599
little bit of time between the API and

00:46:54,130 --> 00:47:01,339
natural changes so let's see if I by

00:46:58,599 --> 00:47:04,960
running it again

00:47:01,339 --> 00:47:04,960
I find this

00:47:08,170 --> 00:47:16,790
okay so I could not find status for test

00:47:12,650 --> 00:47:42,770
oh I see what happened because I created

00:47:16,790 --> 00:47:44,980
this file in the wrong place okay well

00:47:42,770 --> 00:47:48,800
I'll figure out what this is but

00:47:44,980 --> 00:47:51,440
basically it should update the project

00:47:48,800 --> 00:47:54,050
list to now include tests eventually

00:47:51,440 --> 00:47:56,300
here and then as new projects get added

00:47:54,050 --> 00:47:57,830
that's basically the idea so to keep

00:47:56,300 --> 00:48:00,140
track of all projects and then if

00:47:57,830 --> 00:48:02,330
somebody wants to remove themselves from

00:48:00,140 --> 00:48:03,880
any extensions from extensions all they

00:48:02,330 --> 00:48:06,350
have to do is get rid of their test

00:48:03,880 --> 00:48:08,810
project as well all right so so

00:48:06,350 --> 00:48:11,690
basically it's not just you know keeping

00:48:08,810 --> 00:48:13,670
track one way to add more projects it

00:48:11,690 --> 00:48:16,970
also keeps track the other way which is

00:48:13,670 --> 00:48:19,880
to remove projects so what I'm hoping

00:48:16,970 --> 00:48:23,560
for is to eventually get to a point

00:48:19,880 --> 00:48:26,450
where all projects are added to this

00:48:23,560 --> 00:48:31,490
process right so what you will have to

00:48:26,450 --> 00:48:34,910
do now fix that one tiny bug here to add

00:48:31,490 --> 00:48:37,130
yourself to extensions is to start

00:48:34,910 --> 00:48:39,620
tagging yourself ICF extensions so it's

00:48:37,130 --> 00:48:45,760
not really a tag it's yep topic it's a

00:48:39,620 --> 00:48:50,540
topic in in in github so if you add your

00:48:45,760 --> 00:48:55,910
you know you add CF - extensions to your

00:48:50,540 --> 00:48:57,410
github project then it will show up the

00:48:55,910 --> 00:49:00,620
one thing I haven't done so there's a

00:48:57,410 --> 00:49:03,310
few more to do's to make it happen so

00:49:00,620 --> 00:49:06,740
this week I want to start rolling it out

00:49:03,310 --> 00:49:11,750
I'll figure out that one issue here but

00:49:06,740 --> 00:49:14,750
I want to add all different projects to

00:49:11,750 --> 00:49:18,890
this the current projects so basically I

00:49:14,750 --> 00:49:21,540
will ask you if you're a community if

00:49:18,890 --> 00:49:24,510
you are an extensions PM

00:49:21,540 --> 00:49:26,790
to start adding the topic CF extension

00:49:24,510 --> 00:49:29,670
to your project and then you'll get an

00:49:26,790 --> 00:49:31,890
issue automatically created that will

00:49:29,670 --> 00:49:35,640
tell you what to do and then once you do

00:49:31,890 --> 00:49:37,650
those steps then you'll be tracked

00:49:35,640 --> 00:49:40,710
you'll start getting tracked

00:49:37,650 --> 00:49:44,550
I have a series of two dues that I want

00:49:40,710 --> 00:49:48,890
to do which is to essentially give you a

00:49:44,550 --> 00:49:54,330
better view so currently if you remember

00:49:48,890 --> 00:50:04,140
the view that you are seeing is the view

00:49:54,330 --> 00:50:06,540
form it's this view right but I want to

00:50:04,140 --> 00:50:10,050
also give you views like for instance

00:50:06,540 --> 00:50:12,810
show me all incubating projects versus

00:50:10,050 --> 00:50:14,880
project set of proposed versus projects

00:50:12,810 --> 00:50:16,800
that are retracted and so on so

00:50:14,880 --> 00:50:20,370
different views like that I also want to

00:50:16,800 --> 00:50:22,110
add a little bit more detail on the

00:50:20,370 --> 00:50:24,840
projects for instance there are projects

00:50:22,110 --> 00:50:27,240
that are peer you know that positive

00:50:24,840 --> 00:50:30,090
peer commit model and in their projects

00:50:27,240 --> 00:50:33,390
that follow the the distributed commit

00:50:30,090 --> 00:50:36,030
you could do that because I have access

00:50:33,390 --> 00:50:38,460
to the github project and the API

00:50:36,030 --> 00:50:40,140
there's tons of other things I can do so

00:50:38,460 --> 00:50:43,380
like for instance here I'm showing like

00:50:40,140 --> 00:50:46,530
Watchers and stars and forks so that you

00:50:43,380 --> 00:50:50,700
can get an idea of of which extension is

00:50:46,530 --> 00:50:52,980
more popular or which extension is maybe

00:50:50,700 --> 00:50:55,740
you know in active development so in

00:50:52,980 --> 00:50:57,660
other words give you a view of all of

00:50:55,740 --> 00:51:01,260
the extensions in a way that is useful

00:50:57,660 --> 00:51:04,080
to you so what I'm looking for

00:51:01,260 --> 00:51:06,090
you know folks if you're interested in

00:51:04,080 --> 00:51:10,770
this so first is if you are an extension

00:51:06,090 --> 00:51:14,010
TM tag yourself and if you interested in

00:51:10,770 --> 00:51:16,140
this you know we welcome PRS the project

00:51:14,010 --> 00:51:19,140
itself is an extension but it's being

00:51:16,140 --> 00:51:21,630
proposed and it's distributed commits so

00:51:19,140 --> 00:51:24,690
if you submit commits that PRS that

00:51:21,630 --> 00:51:28,710
would be nice I have a blog post that

00:51:24,690 --> 00:51:32,250
will be pushed soon that discusses the

00:51:28,710 --> 00:51:34,740
but and that's a summary of what happens

00:51:32,250 --> 00:51:36,930
right so basically when it runs

00:51:34,740 --> 00:51:39,270
finds all projects with this yep

00:51:36,930 --> 00:51:41,880
extensions and it looks to see if you

00:51:39,270 --> 00:51:44,580
obviously have extensions JSON file in

00:51:41,880 --> 00:51:47,190
your project if you don't have that then

00:51:44,580 --> 00:51:49,470
it submits it adds you to the on track

00:51:47,190 --> 00:51:51,000
and then submits an issue only if you

00:51:49,470 --> 00:51:52,350
don't have an issue obviously if you

00:51:51,000 --> 00:51:55,110
have an issue it doesn't keep adding

00:51:52,350 --> 00:51:57,600
more issues and then once it runs and

00:51:55,110 --> 00:52:00,060
notice that you have tagged yourself and

00:51:57,600 --> 00:52:01,890
that you have a file then it starts

00:52:00,060 --> 00:52:04,140
looking to see if it should track you or

00:52:01,890 --> 00:52:05,730
not and it checks whether or not your

00:52:04,140 --> 00:52:07,050
status and then it generates all those

00:52:05,730 --> 00:52:10,140
documentation files so it's pretty

00:52:07,050 --> 00:52:14,160
straightforward not not too hard it's

00:52:10,140 --> 00:52:17,310
written and go and I look forward to any

00:52:14,160 --> 00:52:23,070
feedback so let's stop here and see if

00:52:17,310 --> 00:52:27,090
you have any questions hi I was just

00:52:23,070 --> 00:52:29,150
wondering in the Google Doc you saw data

00:52:27,090 --> 00:52:31,590
in the very beginning yeah I think I

00:52:29,150 --> 00:52:34,050
listed all the projects there's a

00:52:31,590 --> 00:52:35,880
section with this owner company and I

00:52:34,050 --> 00:52:41,460
was just wondering this is a foundation

00:52:35,880 --> 00:52:43,619
term or just a convention I I guess it's

00:52:41,460 --> 00:52:46,109
it's an interesting thing maybe maybe I

00:52:43,619 --> 00:52:47,460
could change it to populist company the

00:52:46,109 --> 00:52:49,410
company that purple is there or

00:52:47,460 --> 00:52:51,900
something like this the only reason I

00:52:49,410 --> 00:52:54,600
wanted this is to get a feel for where

00:52:51,900 --> 00:52:56,910
that project came from so maybe like

00:52:54,600 --> 00:52:58,800
instigating company something like that

00:52:56,910 --> 00:53:03,570
so - you're right the owner is probably

00:52:58,800 --> 00:53:04,980
a long term I'll take that that's it for

00:53:03,570 --> 00:53:07,380
what it's worth I think I'd be much

00:53:04,980 --> 00:53:09,300
happier if it if it reflected like the

00:53:07,380 --> 00:53:12,270
composition of the team as opposed to

00:53:09,300 --> 00:53:14,820
like one company like garden wasn't

00:53:12,270 --> 00:53:17,550
proposed by I mean I guess Gardens been

00:53:14,820 --> 00:53:18,750
there for since it started Diego and but

00:53:17,550 --> 00:53:21,450
I i spending don't feel there's any

00:53:18,750 --> 00:53:23,609
company that owns it for all time right

00:53:21,450 --> 00:53:24,780
we've got a lot of companies on it yeah

00:53:23,609 --> 00:53:26,990
no that's fair that's fair

00:53:24,780 --> 00:53:30,690
actually maybe what I'll do is I'll

00:53:26,990 --> 00:53:33,570
modify that but I think getting an idea

00:53:30,690 --> 00:53:35,660
of the team distribution which is not

00:53:33,570 --> 00:53:38,280
hard for me to do because again by

00:53:35,660 --> 00:53:41,040
scraping stuff from github I actually

00:53:38,280 --> 00:53:43,050
have access to all of your commits and I

00:53:41,040 --> 00:53:45,180
mean obviously your project has to be

00:53:43,050 --> 00:53:45,510
public right if it's not public nothing

00:53:45,180 --> 00:53:47,910
works

00:53:45,510 --> 00:53:48,710
but if it's public I have I can access

00:53:47,910 --> 00:53:50,809
like friends

00:53:48,710 --> 00:53:53,359
you know this year what are the commits

00:53:50,809 --> 00:53:55,760
and and just like github shows these

00:53:53,359 --> 00:53:58,609
graphs the distribution graph I can do

00:53:55,760 --> 00:54:00,470
all that right so so in time you know as

00:53:58,609 --> 00:54:02,660
people ask for these things we could add

00:54:00,470 --> 00:54:05,329
it and part of the idea is to have a

00:54:02,660 --> 00:54:07,520
simple location and then give enough

00:54:05,329 --> 00:54:09,890
information about the projects to help

00:54:07,520 --> 00:54:12,710
people make decisions so so thanks for

00:54:09,890 --> 00:54:14,390
that feedback George and Jules okay any

00:54:12,710 --> 00:54:21,789
other question I saw somebody posted

00:54:14,390 --> 00:54:21,789
something maybe a trap is that right

00:54:22,420 --> 00:54:31,029
Roger suggests perhaps you can just call

00:54:25,970 --> 00:54:33,099
a field from yeah yeah that's here yeah

00:54:31,029 --> 00:54:38,539
cool

00:54:33,099 --> 00:54:41,690
any other comments hi this is a this is

00:54:38,539 --> 00:54:43,700
probably left key from the cloud dog of

00:54:41,690 --> 00:54:47,650
team in night one of things we struggle

00:54:43,700 --> 00:55:03,789
with a lot is gathering metadata

00:54:47,650 --> 00:55:03,789
extensions for your breaking policy and

00:55:07,180 --> 00:55:15,279
if you if you don't mind could you could

00:55:10,250 --> 00:55:32,660
you like cut and paste type your your

00:55:15,279 --> 00:55:34,670
type your question because I think by

00:55:32,660 --> 00:55:37,220
the way the tester should it's just that

00:55:34,670 --> 00:55:38,990
github took a while right so you can see

00:55:37,220 --> 00:55:42,829
it's showing now it just took a while

00:55:38,990 --> 00:55:46,039
for the data that I committed from the

00:55:42,829 --> 00:55:48,589
data that gets returned from the API so

00:55:46,039 --> 00:55:53,359
I don't have a book it's just I knew I

00:55:48,589 --> 00:55:54,230
tested it before anyways and actually

00:55:53,359 --> 00:55:55,940
that's a good point

00:55:54,230 --> 00:55:57,410
sometimes github crashes which is

00:55:55,940 --> 00:55:59,119
interesting because then the book fails

00:55:57,410 --> 00:56:01,880
and you're like what's going on anyways

00:55:59,119 --> 00:56:02,420
Brett do you mind typing your question

00:56:01,880 --> 00:56:04,819
because

00:56:02,420 --> 00:56:06,680
the whole time you were talking you were

00:56:04,819 --> 00:56:09,470
grating nobody could understand anything

00:56:06,680 --> 00:56:12,710
what you're saying and I apologize for

00:56:09,470 --> 00:56:16,250
that but if you type it we will read it

00:56:12,710 --> 00:56:17,990
and hopefully you can hear the answer so

00:56:16,250 --> 00:56:20,920
let's give bread a second any other

00:56:17,990 --> 00:56:20,920
questions comments

00:56:22,750 --> 00:56:27,799
Brett suggested that you'd like to see

00:56:25,670 --> 00:56:30,079
the security policies and scanning

00:56:27,799 --> 00:56:31,760
status of extensions it's hard to

00:56:30,079 --> 00:56:34,549
collect that information as a consumer

00:56:31,760 --> 00:56:37,190
and risk management people are

00:56:34,549 --> 00:56:39,619
interested in that for compliance yeah

00:56:37,190 --> 00:56:40,609
that's a that's a fair point let's if

00:56:39,619 --> 00:56:42,920
you don't mind

00:56:40,609 --> 00:56:44,720
Brett like started discussion once you

00:56:42,920 --> 00:56:46,849
have their vote directly with me cuz I

00:56:44,720 --> 00:56:48,559
want to understand what you mean by for

00:56:46,849 --> 00:56:51,049
instance scanning policy and things like

00:56:48,559 --> 00:56:53,210
this are you thinking because there's a

00:56:51,049 --> 00:56:54,859
series of bots on github that do these

00:56:53,210 --> 00:56:56,630
things automatically what are you

00:56:54,859 --> 00:56:58,579
thinking that the person that's

00:56:56,630 --> 00:57:00,260
instigating the project does it itself

00:56:58,579 --> 00:57:01,549
you know and things like that let's

00:57:00,260 --> 00:57:04,190
let's have a discussion about that but

00:57:01,549 --> 00:57:08,390
that's it that's exactly the reason I

00:57:04,190 --> 00:57:10,130
created this is to help try to give this

00:57:08,390 --> 00:57:12,230
kind of information and standardize it

00:57:10,130 --> 00:57:14,119
in such a way that we can collect it in

00:57:12,230 --> 00:57:16,309
one place and give it give access to

00:57:14,119 --> 00:57:22,000
people all right

00:57:16,309 --> 00:57:27,619
any more questions ok so if you're a

00:57:22,000 --> 00:57:30,680
extensions PM just basically add a topic

00:57:27,619 --> 00:57:31,160
you have extensions and then let's get

00:57:30,680 --> 00:57:34,640
started

00:57:31,160 --> 00:57:36,859
obviously it's new so we'll learn from

00:57:34,640 --> 00:57:39,559
this if you have suggestions on how to

00:57:36,859 --> 00:57:41,690
make the process easier I'm happy to

00:57:39,559 --> 00:57:43,279
discuss it but again I know Josie's

00:57:41,690 --> 00:57:48,380
laughing because he saw it yesterday and

00:57:43,279 --> 00:57:50,930
he had something bad I I think you know

00:57:48,380 --> 00:57:52,970
a couple back and forth is easy and I

00:57:50,930 --> 00:57:56,900
love the fact that the project's

00:57:52,970 --> 00:57:58,160
themself manage extensions metadata but

00:57:56,900 --> 00:58:00,170
if you have different opinion on this

00:57:58,160 --> 00:58:03,079
that's the discussion started but lets

00:58:00,170 --> 00:58:05,539
us see start and then and then of course

00:58:03,079 --> 00:58:07,369
we can always change it we don't have

00:58:05,539 --> 00:58:10,789
too many exchanges right now right like

00:58:07,369 --> 00:58:13,160
we have maybe a 12 so whatever we do

00:58:10,789 --> 00:58:14,990
should be shouldn't be hard to keep that

00:58:13,160 --> 00:58:16,400
database even like you added manually

00:58:14,990 --> 00:58:19,039
the problem is

00:58:16,400 --> 00:58:20,930
become of course when we start having a

00:58:19,039 --> 00:58:23,000
hundred of extension so we want to make

00:58:20,930 --> 00:58:25,670
sure that the first set of extensions

00:58:23,000 --> 00:58:29,599
kind of like debug this and and get it

00:58:25,670 --> 00:58:33,950
to the simplest way possible Luke for a

00:58:29,599 --> 00:58:37,160
blog post on cloud foundry org today it

00:58:33,950 --> 00:58:40,430
should be posted at noon and I go into a

00:58:37,160 --> 00:58:43,210
little bit more details but you know

00:58:40,430 --> 00:58:45,289
obviously I welcome your feedback

00:58:43,210 --> 00:58:47,900
independently from the blog post because

00:58:45,289 --> 00:58:51,140
everything that you probably want to

00:58:47,900 --> 00:58:55,099
know about is already presented okay

00:58:51,140 --> 00:58:57,440
there is one question here on slack for

00:58:55,099 --> 00:58:59,869
moogle I'm not sure what company but he

00:58:57,440 --> 00:59:01,849
said he or she said my dream is that

00:58:59,869 --> 00:59:06,079
when you lost yourself as an extension

00:59:01,849 --> 00:59:09,500
cff insurers scanning happens and

00:59:06,079 --> 00:59:12,289
submits issues PRS to you for security

00:59:09,500 --> 00:59:14,299
problems yes yes I see your point and as

00:59:12,289 --> 00:59:16,490
a matter of fact this whole idea of like

00:59:14,299 --> 00:59:18,980
sort of forcing people to do things so

00:59:16,490 --> 00:59:21,440
when I submit the issue and I asked you

00:59:18,980 --> 00:59:24,260
to add the CF extensions I could change

00:59:21,440 --> 00:59:26,359
that to submitting a PR the only reason

00:59:24,260 --> 00:59:28,819
I didn't do this is because submitting

00:59:26,359 --> 00:59:30,349
PRS vs issue is is like order of

00:59:28,819 --> 00:59:32,630
magnitude more complicated because I

00:59:30,349 --> 00:59:34,520
have to fork the repo and then obviously

00:59:32,630 --> 00:59:37,279
I start having a bunch of repos that I

00:59:34,520 --> 00:59:38,770
forked so where do I delete them or when

00:59:37,279 --> 00:59:41,059
do I delete them and so on but

00:59:38,770 --> 00:59:43,450
definitely that's that's a possibility

00:59:41,059 --> 00:59:45,770
so thank you for that okay

00:59:43,450 --> 00:59:49,869
unless there are any questions this is

00:59:45,770 --> 00:59:52,150
it I guess there's one more chat no I

00:59:49,869 --> 00:59:55,789
think that's it

00:59:52,150 --> 00:59:59,480
okay everybody if you have no questions

00:59:55,789 --> 01:00:02,799
follow up on email we'll chat in

00:59:59,480 --> 01:00:07,640
September take care

01:00:02,799 --> 01:00:12,220
Cheers the bye everybody

01:00:07,640 --> 01:00:12,220

YouTube URL: https://www.youtube.com/watch?v=UOzxSMspdeM


