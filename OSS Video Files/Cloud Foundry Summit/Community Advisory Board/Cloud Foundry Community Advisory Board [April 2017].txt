Title: Cloud Foundry Community Advisory Board [April 2017]
Publication date: 2017-05-17
Playlist: Community Advisory Board
Description: 
	Video from the monthly Cloud Foundry Community Advisory Board (CAB) meeting. Learn more at https://www.cloudfoundry.org/.
Captions: 
	00:00:00,030 --> 00:00:08,029
how'd you hear don't connect so well so

00:00:03,510 --> 00:00:08,029
I like to run down the Tirana busting

00:00:12,230 --> 00:00:20,130
we'll go to David for 15 minutes to 20

00:00:17,760 --> 00:00:22,109
minutes and then the rest of the time

00:00:20,130 --> 00:00:25,019
will be with you and Dimitri I'm trying

00:00:22,109 --> 00:00:29,070
to give everybody a title 30 minutes to

00:00:25,019 --> 00:00:30,630
make it to make it work hopefully all

00:00:29,070 --> 00:00:32,630
right so one more minute and we'll get

00:00:30,630 --> 00:00:37,980
started

00:00:32,630 --> 00:00:44,610
it's a chip here I don't see okay I am

00:00:37,980 --> 00:00:59,910
how are you so you get to start so you

00:00:44,610 --> 00:01:07,260
can give us an update on all right or I

00:00:59,910 --> 00:01:09,890
could just start now you know what's

00:01:07,260 --> 00:01:12,780
interesting is just so you guys know is

00:01:09,890 --> 00:01:18,060
my internet here in Beijing has been

00:01:12,780 --> 00:01:22,490
working fine cool all the time and then

00:01:18,060 --> 00:01:24,900
today right now on one of my computer's

00:01:22,490 --> 00:01:29,310
so anyways alright so let's get started

00:01:24,900 --> 00:01:32,369
I think we have a full agenda and you

00:01:29,310 --> 00:01:35,549
guys know already so we'll do basic

00:01:32,369 --> 00:01:39,750
presentations so updates from teams and

00:01:35,549 --> 00:01:43,049
then we'll go to three I think really

00:01:39,750 --> 00:01:45,420
cool updates and presentations from

00:01:43,049 --> 00:01:47,399
people so we have David savetti from

00:01:45,420 --> 00:01:50,479
pivotal that will talk about CF

00:01:47,399 --> 00:01:54,420
deployment and how that's coming on

00:01:50,479 --> 00:01:56,450
Dimitri will join us soon and he's gonna

00:01:54,420 --> 00:02:01,170
talk about the pet peeve of his

00:01:56,450 --> 00:02:04,140
turbulence and then and then we'll

00:02:01,170 --> 00:02:06,930
finish up with dr. Nick who's also in

00:02:04,140 --> 00:02:13,370
the US and give us an update on you know

00:02:06,930 --> 00:02:13,370
how he's been in Canada in Canada yeah

00:02:16,100 --> 00:02:29,580
big one okay so and what's going on

00:02:25,350 --> 00:02:30,480
there yeah so for the purpose of brevity

00:02:29,580 --> 00:02:31,920
because I think we've got a lot of

00:02:30,480 --> 00:02:34,020
really interesting stuff to hear about

00:02:31,920 --> 00:02:36,090
today two major things you might have

00:02:34,020 --> 00:02:38,120
seen some noise we made around the

00:02:36,090 --> 00:02:41,120
training and developer certification

00:02:38,120 --> 00:02:44,310
product you're going to start to see

00:02:41,120 --> 00:02:46,020
them actually open up for beyond just

00:02:44,310 --> 00:02:49,140
kind of early enrollment people will

00:02:46,020 --> 00:02:51,900
start to flow through the the course

00:02:49,140 --> 00:02:54,870
that's going out on on EDX which will be

00:02:51,900 --> 00:02:58,200
a free introductory class we've had some

00:02:54,870 --> 00:03:00,770
great course authors from start can wait

00:02:58,200 --> 00:03:03,510
and working on that we have the

00:03:00,770 --> 00:03:06,900
e-learning which is a bit more bit more

00:03:03,510 --> 00:03:09,290
robust very very labs driven class then

00:03:06,900 --> 00:03:13,230
we're offering online that's been built

00:03:09,290 --> 00:03:15,450
by Steve Greenberg resilient scale and

00:03:13,230 --> 00:03:18,870
then a few folks like Daniel from

00:03:15,450 --> 00:03:22,440
engineer better in the UK that will be

00:03:18,870 --> 00:03:24,870
opening up in early May and then we've

00:03:22,440 --> 00:03:28,860
got the Cloud Foundry certified

00:03:24,870 --> 00:03:31,350
developer exams which if all goes to

00:03:28,860 --> 00:03:35,820
plan we'll we'll be able to also open

00:03:31,350 --> 00:03:38,100
that up for early access in May all

00:03:35,820 --> 00:03:40,680
three of those things are kind of coming

00:03:38,100 --> 00:03:42,570
in for a landing right now there's a lot

00:03:40,680 --> 00:03:43,350
of work that's gone into it but we're

00:03:42,570 --> 00:03:45,450
pretty excited

00:03:43,350 --> 00:03:48,330
we know there's also a lot of demand and

00:03:45,450 --> 00:03:49,230
user companies were training that kind

00:03:48,330 --> 00:03:52,950
of portable across the different

00:03:49,230 --> 00:03:56,459
providers as well as being able to have

00:03:52,950 --> 00:03:58,650
individuals be certified as knowing that

00:03:56,459 --> 00:04:01,980
they that we they have skills to build

00:03:58,650 --> 00:04:05,910
applications on tapasya which leads me

00:04:01,980 --> 00:04:07,080
to the other point that Devon's head of

00:04:05,910 --> 00:04:08,430
marketing would be very upset if I

00:04:07,080 --> 00:04:10,019
didn't remind everybody that we of

00:04:08,430 --> 00:04:15,180
course have our Silicon Valley summit

00:04:10,019 --> 00:04:17,660
coming up in June roundabout June 13 we

00:04:15,180 --> 00:04:21,120
are going to be doing in person

00:04:17,660 --> 00:04:24,660
certification exams at the event and you

00:04:21,120 --> 00:04:26,250
get a 150 bucks off the the summit

00:04:24,660 --> 00:04:28,650
registration if you also sign up to do

00:04:26,250 --> 00:04:31,260
the as a certification exam which should

00:04:28,650 --> 00:04:34,410
be kind of neat most of this was

00:04:31,260 --> 00:04:35,970
intended again for the end users of CS

00:04:34,410 --> 00:04:38,940
right the developer server running apps

00:04:35,970 --> 00:04:41,400
on top of it but you know if you're

00:04:38,940 --> 00:04:42,930
building project surrounded or inside of

00:04:41,400 --> 00:04:51,930
it might be a cool thing to do as well

00:04:42,930 --> 00:04:56,070
so that's it yeah the commitment for

00:04:51,930 --> 00:04:58,050
time is uh is varied I've taken it

00:04:56,070 --> 00:05:01,410
probably about 20 times written so III

00:04:58,050 --> 00:05:03,330
cheat we're what we're telling people

00:05:01,410 --> 00:05:06,810
right now is that it should be less than

00:05:03,330 --> 00:05:10,140
four hours right and as we have people

00:05:06,810 --> 00:05:12,450
go through the the beta process to give

00:05:10,140 --> 00:05:13,980
us some enough statistical data to

00:05:12,450 --> 00:05:15,750
figure out what the cut score is

00:05:13,980 --> 00:05:18,090
basically it's with what the passing

00:05:15,750 --> 00:05:20,970
score would be we're also asking them to

00:05:18,090 --> 00:05:23,070
tell us how long it took it you can't

00:05:20,970 --> 00:05:28,620
take longer than four hours I'm guessing

00:05:23,070 --> 00:06:04,500
that someone who sits down who's just

00:05:28,620 --> 00:06:10,740
under three hours so you can get some

00:06:04,500 --> 00:06:13,050
people registered or well sure yeah I

00:06:10,740 --> 00:06:15,900
mean if you're if you're interested

00:06:13,050 --> 00:06:19,110
becoming interested in coming to the

00:06:15,900 --> 00:06:21,210
summit obviously get registered any of

00:06:19,110 --> 00:06:22,680
your your customers or the users you

00:06:21,210 --> 00:06:25,200
interact with you should remind them of

00:06:22,680 --> 00:06:30,030
it and in particular if you're working

00:06:25,200 --> 00:06:31,440
with any end-user developers of CF now

00:06:30,030 --> 00:06:33,000
point out that that there's a

00:06:31,440 --> 00:06:35,039
certification exam that that can help

00:06:33,000 --> 00:06:36,599
them as an individual because we're

00:06:35,039 --> 00:06:39,750
starting to see a pretty significant

00:06:36,599 --> 00:06:41,970
uptick in number of open positions for

00:06:39,750 --> 00:06:43,110
that require or look for class on your

00:06:41,970 --> 00:06:44,220
skills so it'll give them a bit of an

00:06:43,110 --> 00:06:47,430
edge if they're looking for a career

00:06:44,220 --> 00:06:48,120
change and then if it's somebody that's

00:06:47,430 --> 00:06:49,710
new

00:06:48,120 --> 00:06:51,870
they're trying to figure out how to get

00:06:49,710 --> 00:06:54,920
trained in a maybe a platform-agnostic

00:06:51,870 --> 00:06:58,050
way feel free to send them off to the

00:06:54,920 --> 00:07:00,060
contractor that org slash training URL

00:06:58,050 --> 00:07:05,400
they can sign up for a self-paced class

00:07:00,060 --> 00:07:09,570
they're cool any question or no

00:07:05,400 --> 00:07:16,110
questions for chip so we can get to the

00:07:09,570 --> 00:07:18,480
next part of the agenda I guess nobody

00:07:16,110 --> 00:07:23,300
is asking question chip I had one more

00:07:18,480 --> 00:07:25,530
for you which is so these these type of

00:07:23,300 --> 00:07:28,350
certifications and indeed they tend to

00:07:25,530 --> 00:07:34,890
be valid for a period of time right for

00:07:28,350 --> 00:07:36,360
this one yeah yeah we struggled with

00:07:34,890 --> 00:07:38,490
this a little bit it's gonna be a

00:07:36,360 --> 00:07:38,790
two-year that's gonna be valid for two

00:07:38,490 --> 00:07:41,370
years

00:07:38,790 --> 00:07:43,220
the granite CS tends to move forward a

00:07:41,370 --> 00:07:47,970
little bit a little bit progressively

00:07:43,220 --> 00:07:51,120
quickly but we think two years is about

00:07:47,970 --> 00:07:52,440
right it's it's a performance-based exam

00:07:51,120 --> 00:07:54,600
so you actually have to do the things

00:07:52,440 --> 00:07:56,669
that you're asked to do and then the

00:07:54,600 --> 00:08:00,090
scoring process interrogate the the

00:07:56,669 --> 00:08:02,040
running environment but you have access

00:08:00,090 --> 00:08:03,360
to to make sure that you know you're

00:08:02,040 --> 00:08:06,080
able to start the apps that might have

00:08:03,360 --> 00:08:08,760
had troubleshooting problems to sort out

00:08:06,080 --> 00:08:10,950
where the you know the code you're asked

00:08:08,760 --> 00:08:14,760
to modify is now doing what it's

00:08:10,950 --> 00:08:16,710
supposed to be doing all right so it's a

00:08:14,760 --> 00:08:19,680
it's a pretty good pretty good test on

00:08:16,710 --> 00:08:34,650
the basics and two years seems about

00:08:19,680 --> 00:08:37,320
right so that's what we're there so

00:08:34,650 --> 00:08:38,520
realistically after two years from your

00:08:37,320 --> 00:08:40,770
launching this you should have a

00:08:38,520 --> 00:08:44,250
research as well as a cert so that they

00:08:40,770 --> 00:08:45,660
you know basically testing for updates

00:08:44,250 --> 00:08:46,410
and changes and stuff like that instead

00:08:45,660 --> 00:08:49,800
I'm going to go through the whole thing

00:08:46,410 --> 00:08:51,089
again is that what that is I can't

00:08:49,800 --> 00:08:53,400
answer that because I don't know that

00:08:51,089 --> 00:08:56,520
seems like a very reasonable approach

00:08:53,400 --> 00:08:59,160
on the other hand the we take a lot of

00:08:56,520 --> 00:09:02,130
our guidance from the the Linux

00:08:59,160 --> 00:09:04,320
Foundation certification team they do it

00:09:02,130 --> 00:09:05,640
for they've been doing it to the Linux

00:09:04,320 --> 00:09:07,530
itself for a long time they've been

00:09:05,640 --> 00:09:09,450
launched form around OpenStack so

00:09:07,530 --> 00:09:39,540
they've got a pattern for this fit will

00:09:09,450 --> 00:09:44,040
probably follow nice in June so we'll

00:09:39,540 --> 00:09:47,850
try that Leeson me so yeah by that point

00:09:44,040 --> 00:09:49,470
it'll it'll all be live so if you want

00:09:47,850 --> 00:09:52,770
to do it before summit there might be

00:09:49,470 --> 00:10:06,680
some interesting swag for you if you get

00:09:52,770 --> 00:10:09,120
certified before summit you got it

00:10:06,680 --> 00:10:12,000
excellent what we'll have some more news

00:10:09,120 --> 00:10:13,650
sent out to the death-knell off once we

00:10:12,000 --> 00:10:15,930
get once we get it actually launched and

00:10:13,650 --> 00:10:27,930
we'll remind people about the good stuff

00:10:15,930 --> 00:10:32,610
you get if you cool as I sorted this

00:10:27,930 --> 00:10:34,380
what people registered even myself yeah

00:10:32,610 --> 00:10:36,120
yeah especially reminder to anybody

00:10:34,380 --> 00:10:37,470
that's a contributor in any way right so

00:10:36,120 --> 00:10:39,930
if you've helped with docs you stand up

00:10:37,470 --> 00:10:43,140
for question you've submitted a bug any

00:10:39,930 --> 00:10:44,460
of the projects use that contributor

00:10:43,140 --> 00:10:45,870
code that I put out on the dev mailing

00:10:44,460 --> 00:10:47,850
list it again started a couple times now

00:10:45,870 --> 00:10:50,220
get registered we want to know you're

00:10:47,850 --> 00:10:54,560
coming we think we'll probably get about

00:10:50,220 --> 00:10:54,560
3000 this year which is a good number

00:10:55,280 --> 00:11:00,630
sweet song okay unless there any

00:10:59,100 --> 00:11:02,630
question for chip let's move on to the

00:11:00,630 --> 00:11:05,370
next part of the agenda

00:11:02,630 --> 00:11:07,110
no don't hear anything Thank You chip

00:11:05,370 --> 00:11:09,870
okay so the next

00:11:07,110 --> 00:11:12,329
the agenda is usually project highlights

00:11:09,870 --> 00:11:15,510
this we're gonna cut short this time

00:11:12,329 --> 00:11:18,089
since we have three presentations lined

00:11:15,510 --> 00:11:20,550
up we're gonna give the presenters

00:11:18,089 --> 00:11:24,089
enough time so let's try to take about

00:11:20,550 --> 00:11:26,550
five six minutes for groups of projects

00:11:24,089 --> 00:11:29,010
so maybe you we you can give us an

00:11:26,550 --> 00:11:35,040
update on Kathy and all the good stuff

00:11:29,010 --> 00:11:39,600
going on there actually I wanted to

00:11:35,040 --> 00:11:43,260
highlight I sent a note to CF dev as

00:11:39,600 --> 00:11:46,950
sending a reminder email about the evil

00:11:43,260 --> 00:11:49,680
of DA's upcoming in about a month on May

00:11:46,950 --> 00:11:51,600
22nd at which point we will and many

00:11:49,680 --> 00:11:53,430
things to the attic and many lines of

00:11:51,600 --> 00:12:02,300
code will be deleted and it will be a

00:11:53,430 --> 00:12:04,920
great day well deserved

00:12:02,300 --> 00:12:06,950
that's pretty cool I mean this has been

00:12:04,920 --> 00:12:13,290
a long time coming

00:12:06,950 --> 00:12:24,209
excellent hey happy to report iBM is

00:12:13,290 --> 00:12:26,610
that on the way to in the interest of

00:12:24,209 --> 00:12:28,380
keeping things short not a lot to report

00:12:26,610 --> 00:12:30,649
from Diego we've largely been finishing

00:12:28,380 --> 00:12:32,940
up a bunch of ongoing tracks of work to

00:12:30,649 --> 00:12:38,760
get away from our dependency on console

00:12:32,940 --> 00:12:40,980
and we're looking looking forward to

00:12:38,760 --> 00:12:42,959
some future stuff hopefully around the

00:12:40,980 --> 00:12:44,790
zero downtime app updates that Zach

00:12:42,959 --> 00:12:53,540
Robinson recently sent out a proposal

00:12:44,790 --> 00:12:53,540
for right this is the blue green yeah

00:12:53,779 --> 00:13:00,440
yeah built-in rollin deployed have

00:12:56,100 --> 00:13:03,209
instances with that downtime right right

00:13:00,440 --> 00:13:06,089
excellent I think there is another

00:13:03,209 --> 00:13:08,010
update also from you right order I guess

00:13:06,089 --> 00:13:13,589
with new moving console is this work

00:13:08,010 --> 00:13:15,720
with us yeah I think Demetri might have

00:13:13,589 --> 00:13:17,459
more of an update around that that's

00:13:15,720 --> 00:13:19,350
just effectively a different DNS system

00:13:17,459 --> 00:13:20,819
that we would be switching components to

00:13:19,350 --> 00:13:23,039
use

00:13:20,819 --> 00:13:28,259
and components we then not register with

00:13:23,039 --> 00:13:30,359
constable as services right right and no

00:13:28,259 --> 00:13:33,119
talking about devil I think he's he's on

00:13:30,359 --> 00:13:34,499
so to meet you maybe you can give us an

00:13:33,119 --> 00:13:37,679
update on Bosh

00:13:34,499 --> 00:13:39,929
and maybe botch tnx which is the feature

00:13:37,679 --> 00:13:43,979
we are idea I'm actually looking forward

00:13:39,929 --> 00:13:48,149
to using - we've been working on boss

00:13:43,979 --> 00:13:49,589
DNS for some time now for you know maybe

00:13:48,149 --> 00:13:51,449
a close to month

00:13:49,589 --> 00:13:52,679
we're getting pretty close we're going

00:13:51,449 --> 00:13:56,039
to be trying to roll out some of those

00:13:52,679 --> 00:13:58,829
changes to figure those web services to

00:13:56,039 --> 00:14:02,669
you know trial run sound functionality

00:13:58,829 --> 00:14:04,589
pretty soon hopefully this week you know

00:14:02,669 --> 00:14:06,239
we're continuing to work on of the the

00:14:04,589 --> 00:14:09,149
config server integration that's closing

00:14:06,239 --> 00:14:11,879
down it will be that will be kind of

00:14:09,149 --> 00:14:17,519
announced in the next boss release which

00:14:11,879 --> 00:14:20,609
will be also cut fairly soon what else I

00:14:17,519 --> 00:14:22,589
mean aside from that you know we're

00:14:20,609 --> 00:14:25,769
working with all the other teams to make

00:14:22,589 --> 00:14:30,059
sure that you know the DNS system works

00:14:25,769 --> 00:14:32,100
out for their use case properly and

00:14:30,059 --> 00:14:34,949
trying to see if we need to add some

00:14:32,100 --> 00:14:38,579
kind of a comparability flags to make

00:14:34,949 --> 00:14:42,929
the transition a bit easier but aside

00:14:38,579 --> 00:14:46,259
from that I would say nothing nothing

00:14:42,929 --> 00:14:48,119
too exciting that you all haven't heard

00:14:46,259 --> 00:14:52,439
before that boss team is currently

00:14:48,119 --> 00:14:55,789
working on and hoping to GA the CLI with

00:14:52,439 --> 00:14:55,789
you shortly

00:14:57,559 --> 00:15:06,839
I promised someone by the end of the

00:15:00,359 --> 00:15:08,189
April so that's it'll mean the DA will

00:15:06,839 --> 00:15:11,369
mean well actually gonna download it

00:15:08,189 --> 00:15:14,479
from somewhere ah that means that box

00:15:11,369 --> 00:15:14,479
will contain that URL

00:15:17,070 --> 00:15:24,540
I don't like that b2 is good yeah this

00:15:21,630 --> 00:15:26,490
is great I mean I think I think you know

00:15:24,540 --> 00:15:30,509
this is gonna be a great release in

00:15:26,490 --> 00:15:33,930
terms of you know streamlining things I

00:15:30,509 --> 00:15:39,259
was asking about this g8 or CLI v2

00:15:33,930 --> 00:15:42,269
because people I work with are asking

00:15:39,259 --> 00:15:44,910
other people want to know when is it

00:15:42,269 --> 00:15:47,220
ready can we use it I'm like yes you can

00:15:44,910 --> 00:15:50,190
use it right now and people say well but

00:15:47,220 --> 00:15:52,740
is it version 1.0 right but they're

00:15:50,190 --> 00:15:55,829
using it and everybody is using it but

00:15:52,740 --> 00:15:57,779
is it 1.0 right that's the that's the

00:15:55,829 --> 00:16:00,959
kind of feedback I get I'm just dated

00:15:57,779 --> 00:16:05,519
you know so thank you for for making it

00:16:00,959 --> 00:16:08,399
one point of maybe maybe confuse

00:16:05,519 --> 00:16:11,839
everybody I was I was just holding off

00:16:08,399 --> 00:16:11,839
until login was spelled correctly

00:16:18,120 --> 00:16:23,100
[Music]

00:16:20,269 --> 00:16:26,730
I'm entirely on the karate team

00:16:23,100 --> 00:16:28,680
assignment decision and it the the the

00:16:26,730 --> 00:16:33,690
login behavior is dependent on their

00:16:28,680 --> 00:16:42,600
running environments as well John NCC

00:16:33,690 --> 00:16:43,170
has no - it's fine every command has a -

00:16:42,600 --> 00:16:45,990
in it somewhere

00:16:43,170 --> 00:16:48,209
Thanks yeah that'sthat's the other

00:16:45,990 --> 00:16:51,269
accessible alternative if you put - in

00:16:48,209 --> 00:16:54,329
every command then okay as long as it's

00:16:51,269 --> 00:17:02,670
consistent if it is in every other

00:16:54,329 --> 00:17:05,400
command stop doesn't SSH doesn't start

00:17:02,670 --> 00:17:09,179
doesn't just a couple of low-hanging

00:17:05,400 --> 00:17:28,430
fruit ones to fix but have you tried SSH

00:17:09,179 --> 00:17:31,790
- new command

00:17:28,430 --> 00:17:33,520
login is used to be with - I guess or is

00:17:31,790 --> 00:17:39,980
it still with - but that's the

00:17:33,520 --> 00:17:41,300
conversation here drawn Ashton I had a

00:17:39,980 --> 00:17:46,940
question for Dmitry

00:17:41,300 --> 00:17:49,910
so the DNS phase 2 functionality is that

00:17:46,940 --> 00:17:51,200
how is that supposed to be installed is

00:17:49,910 --> 00:17:55,160
that something you have to install as an

00:17:51,200 --> 00:17:57,700
atom runtime config that is correct

00:17:55,160 --> 00:18:01,700
we will be providing additional

00:17:57,700 --> 00:18:03,530
functionality to allow users to set

00:18:01,700 --> 00:18:05,090
multiple runtime can fix it's really

00:18:03,530 --> 00:18:08,030
it's going to be a little bit easier to

00:18:05,090 --> 00:18:11,300
manage your kind of add-ons that we

00:18:08,030 --> 00:18:16,340
recommend / add-ons there are people

00:18:11,300 --> 00:18:21,190
installing via the DNS v2 version would

00:18:16,340 --> 00:18:21,190
be expected to be installed as an add-on

00:18:21,970 --> 00:18:29,930
ok so that means that CF deployment to

00:18:26,480 --> 00:18:32,840
CF deployment or Reaper will contain a

00:18:29,930 --> 00:18:36,530
runtime config for installing that once

00:18:32,840 --> 00:18:41,380
they switch to DNS both deployment

00:18:36,530 --> 00:18:41,380
Reaper will contain the genus atom

00:18:42,140 --> 00:18:48,440
now the other repos will really

00:18:44,560 --> 00:18:51,970
reference it directly they just assume

00:18:48,440 --> 00:19:01,760
that the GMs configuration is available

00:18:51,970 --> 00:19:03,440
just to highlight one more thing is and

00:19:01,760 --> 00:19:06,950
I think it might be obvious to most

00:19:03,440 --> 00:19:09,770
people but some maybe not is this Bosch

00:19:06,950 --> 00:19:12,200
effort is actually been going on for a

00:19:09,770 --> 00:19:15,440
while and part of the reason to do this

00:19:12,200 --> 00:19:20,120
besides helping Diego remove the user

00:19:15,440 --> 00:19:24,050
control is also not depending on how a

00:19:20,120 --> 00:19:27,650
DNS so for instance if you were

00:19:24,050 --> 00:19:30,350
deploying CF right now and I asked where

00:19:27,650 --> 00:19:33,050
there is not a good solution for DNS and

00:19:30,350 --> 00:19:34,940
you use power DNS them our beginners

00:19:33,050 --> 00:19:36,980
down we're doing the phone crash your

00:19:34,940 --> 00:19:42,710
entire environment or pretty much I

00:19:36,980 --> 00:19:46,310
could go with this now you have like a

00:19:42,710 --> 00:19:48,110
Bosch native DNS that is better okay

00:19:46,310 --> 00:19:55,550
when I switch to zoom I get rid of the

00:19:48,110 --> 00:20:02,600
phone call there on zoom might well go

00:19:55,550 --> 00:20:06,800
on mute no yeah anyways thank you GK for

00:20:02,600 --> 00:20:08,720
that that's pretty good okay so there

00:20:06,800 --> 00:20:16,460
are no question for Dmitri we'll go to

00:20:08,720 --> 00:20:19,010
extensions quickly alright so for

00:20:16,460 --> 00:20:23,900
extensions I don't have too much dry

00:20:19,010 --> 00:20:25,400
light except that we have a couple more

00:20:23,900 --> 00:20:26,780
proposals that are in the works but I

00:20:25,400 --> 00:20:29,390
can't really talk about them yet because

00:20:26,780 --> 00:20:31,550
they haven't been put to Fisher Lee

00:20:29,390 --> 00:20:34,460
announced but you see them when they

00:20:31,550 --> 00:20:39,680
come and it's gonna be I think good

00:20:34,460 --> 00:20:42,950
hopefully I telling us that there's a

00:20:39,680 --> 00:20:50,450
secret you're telling us there's a

00:20:42,950 --> 00:20:53,960
secret I think I'm trying to encourage

00:20:50,450 --> 00:20:57,530
all projects that are not code of khaki

00:20:53,960 --> 00:20:59,900
or Bosch to be considered as extensions

00:20:57,530 --> 00:21:02,030
and submit there so for instance you

00:20:59,900 --> 00:21:06,340
tour the unique project is going on

00:21:02,030 --> 00:21:10,730
there right as an extension officially

00:21:06,340 --> 00:21:14,960
there is officially about six projects

00:21:10,730 --> 00:21:18,290
that are sort of going under under

00:21:14,960 --> 00:21:20,140
review it's fun I just join just what

00:21:18,290 --> 00:21:22,490
you said it's like I don't have anything

00:21:20,140 --> 00:21:25,130
there's a couple secrets coming and I'm

00:21:22,490 --> 00:21:30,190
not gonna talk about them and I know it

00:21:25,130 --> 00:21:30,190
sounds like that is a secret yeah hey

00:21:32,530 --> 00:21:42,800
guys he's an idea that there right so I

00:21:41,930 --> 00:21:44,840
think that's good

00:21:42,800 --> 00:21:49,070
right which is essentially of

00:21:44,840 --> 00:21:53,090
bas-reliefs for committees and I think

00:21:49,070 --> 00:21:56,210
it's being backed by you know Google and

00:21:53,090 --> 00:22:00,710
pivotal so it's good

00:21:56,210 --> 00:22:03,230
there is at least one more interest you

00:22:00,710 --> 00:22:05,900
know and submitting you know that config

00:22:03,230 --> 00:22:08,630
server went with this like Lisa credible

00:22:05,900 --> 00:22:12,560
much good is so I'm looking for more

00:22:08,630 --> 00:22:14,830
projects to be considered extensions but

00:22:12,560 --> 00:22:17,540
you have a project within your

00:22:14,830 --> 00:22:18,950
organization or that is in a separate

00:22:17,540 --> 00:22:21,230
Rico and you want to be part of

00:22:18,950 --> 00:22:22,820
extensions that would be good

00:22:21,230 --> 00:22:24,650
there'll be more reason for you to be

00:22:22,820 --> 00:22:29,650
part of extensions I'm trying to have

00:22:24,650 --> 00:22:32,180
some time in the summit to show people

00:22:29,650 --> 00:22:37,250
essentially a way for us to organize

00:22:32,180 --> 00:22:38,660
extension better so that's also them can

00:22:37,250 --> 00:22:40,130
we have another summit that's just for

00:22:38,660 --> 00:22:42,110
people that build Cloud Foundry and use

00:22:40,130 --> 00:22:47,260
it feel like the current summit's been

00:22:42,110 --> 00:22:47,260
hijacked by people that deploy no doubt

00:22:52,660 --> 00:23:01,790
that's why I said it go have a

00:22:55,520 --> 00:23:09,710
conference where I get to talk you're

00:23:01,790 --> 00:23:11,870
right you got me you got me now me I'm

00:23:09,710 --> 00:23:13,730
available for cameos if anyone needs a

00:23:11,870 --> 00:23:15,230
doctor Nick to walk on and then walk off

00:23:13,730 --> 00:23:23,570
I can do that I'll be available the

00:23:15,230 --> 00:23:26,210
whole conference anyways I mean I know

00:23:23,570 --> 00:23:29,570
dr. Nick had his like office hour before

00:23:26,210 --> 00:23:32,000
and that was very popular there be

00:23:29,570 --> 00:23:37,010
another doctor Nick's officer yeah 10

00:23:32,000 --> 00:23:42,140
a.m. at the bar yeah but I think by the

00:23:37,010 --> 00:23:45,890
way you know for each you know there'll

00:23:42,140 --> 00:23:48,650
be some you know office hours set up I

00:23:45,890 --> 00:23:50,320
don't see it very hard for you to get

00:23:48,650 --> 00:23:54,020
some time so if you need it so

00:23:50,320 --> 00:23:55,700
officially do this the right side I'll

00:23:54,020 --> 00:23:57,080
come to see if summit if I can make it

00:23:55,700 --> 00:24:05,150
if I could swing it you know I'm

00:23:57,080 --> 00:24:10,130
pursuing it nice debut I'll buy you a

00:24:05,150 --> 00:24:12,420
drink at the bar at 10:00 a.m. in a

00:24:10,130 --> 00:24:18,390
sorry anyway I'm cutting into mine and

00:24:12,420 --> 00:24:22,530
joking time let's give now I mean we've

00:24:18,390 --> 00:24:25,140
already almost used more time than I

00:24:22,530 --> 00:24:28,170
expected that's good too David sabeti

00:24:25,140 --> 00:24:30,780
he's been waiting you know David has

00:24:28,170 --> 00:24:32,640
worked on voice part of CF so he's

00:24:30,780 --> 00:24:34,320
extremely knowledgeable and he's been

00:24:32,640 --> 00:24:35,580
working on something really cool policy

00:24:34,320 --> 00:24:37,020
up department so he's gonna tell us

00:24:35,580 --> 00:24:40,440
about it

00:24:37,020 --> 00:24:44,400
David you you you can take it and if you

00:24:40,440 --> 00:24:48,059
present then you can I think used to

00:24:44,400 --> 00:24:50,210
show your screen yes it's good all right

00:24:48,059 --> 00:24:52,890
well good morning everybody

00:24:50,210 --> 00:24:56,100
so like dr. Mac said my name is David

00:24:52,890 --> 00:24:58,530
tsveti I'm currently the PM of the

00:24:56,100 --> 00:25:01,559
release integration team I wanted to

00:24:58,530 --> 00:25:04,290
just get a chance to talk to some people

00:25:01,559 --> 00:25:05,690
about CF deployment explain some of the

00:25:04,290 --> 00:25:09,510
contacts and the goals for the project

00:25:05,690 --> 00:25:11,910
and offer myself up as a resource for

00:25:09,510 --> 00:25:13,590
people we've got questions regarding

00:25:11,910 --> 00:25:16,380
state deployment it's starting to get

00:25:13,590 --> 00:25:18,870
some traction in use so feels like the

00:25:16,380 --> 00:25:21,570
right time to introduce myself a little

00:25:18,870 --> 00:25:25,200
more formally and give people point

00:25:21,570 --> 00:25:26,400
contact so those people aren't aware

00:25:25,200 --> 00:25:29,910
maybe I should start with an explanation

00:25:26,400 --> 00:25:32,670
what CF deployment actually is so

00:25:29,910 --> 00:25:35,670
Steve's deployment is it's just a Bosch

00:25:32,670 --> 00:25:37,200
manifest at the post Cloud Foundry but

00:25:35,670 --> 00:25:39,980
it has some special characteristics it

00:25:37,200 --> 00:25:42,840
doesn't depend on C efforts at all and

00:25:39,980 --> 00:25:44,400
it doesn't use v templates that you find

00:25:42,840 --> 00:25:47,580
in CF release if that's what you're used

00:25:44,400 --> 00:25:49,770
to we use a bunch of some of the new

00:25:47,580 --> 00:25:52,200
robust features a way to customize

00:25:49,770 --> 00:25:53,730
deployment configuration and and like

00:25:52,200 --> 00:25:55,980
achieve other parts of deployment

00:25:53,730 --> 00:25:58,679
configuration in a much simpler way than

00:25:55,980 --> 00:26:00,240
people are used to so maybe let's start

00:25:58,679 --> 00:26:02,070
with looking what that actually means

00:26:00,240 --> 00:26:04,800
I'm gonna try and share my screen now so

00:26:02,070 --> 00:26:06,660
we can take a look at the manifest how's

00:26:04,800 --> 00:26:11,640
this gonna work oh this is nifty okay

00:26:06,660 --> 00:26:16,080
how about this yeah it's beautiful

00:26:11,640 --> 00:26:18,270
great so this is safe deployment and the

00:26:16,080 --> 00:26:22,100
main the main start here is this CF

00:26:18,270 --> 00:26:23,240
deployment da Gama right here and

00:26:22,100 --> 00:26:24,830
you take a look around you'll see that

00:26:23,240 --> 00:26:27,919
it looks like a pretty typical Bosch

00:26:24,830 --> 00:26:28,760
manifest but let me highlight some of

00:26:27,919 --> 00:26:30,679
the things that are pretty different

00:26:28,760 --> 00:26:32,390
from the manifest you would get from CF

00:26:30,679 --> 00:26:35,450
release so let's start actually at the

00:26:32,390 --> 00:26:38,210
bottom if you take a look at this last

00:26:35,450 --> 00:26:40,970
section here you'll see that there is a

00:26:38,210 --> 00:26:43,220
releases section it's got quite a few

00:26:40,970 --> 00:26:44,900
releases this is this is if I don't know

00:26:43,220 --> 00:26:46,400
how familiar everyone is with watch

00:26:44,900 --> 00:26:48,200
manna-fest but this is where I should

00:26:46,400 --> 00:26:50,000
tell Bosch like which bits to upload and

00:26:48,200 --> 00:26:51,620
deploy and if you look through this list

00:26:50,000 --> 00:26:54,940
it won't find CF release anywhere in

00:26:51,620 --> 00:26:59,570
there instead you'll see place Kathy or

00:26:54,940 --> 00:27:02,150
Diego or logger Gator so each of the

00:26:59,570 --> 00:27:04,100
individual subsystems of Cloud Foundry

00:27:02,150 --> 00:27:06,080
they ship their own releases and we use

00:27:04,100 --> 00:27:07,429
those instead of some like monolith like

00:27:06,080 --> 00:27:10,250
CF release which is what we've been

00:27:07,429 --> 00:27:11,929
using in the past the other thing you'll

00:27:10,250 --> 00:27:12,980
see here is that we hard-code two

00:27:11,929 --> 00:27:15,320
version numbers for each of these

00:27:12,980 --> 00:27:17,120
releases so this is also actually a

00:27:15,320 --> 00:27:19,640
compatibility matrix of sorts what we're

00:27:17,120 --> 00:27:23,919
saying is this set of releases have

00:27:19,640 --> 00:27:23,919
passed our CI pipeline and are stable so

00:27:24,190 --> 00:27:29,419
yes it sort of captures the notion of

00:27:27,230 --> 00:27:33,500
the compatibility between the different

00:27:29,419 --> 00:27:35,900
releases what else what else is in this

00:27:33,500 --> 00:27:38,090
manifest you got this you got a variable

00:27:35,900 --> 00:27:41,480
section so again this is a new boss

00:27:38,090 --> 00:27:43,370
feature if you've seen them manifest

00:27:41,480 --> 00:27:45,020
generated by the CF at least templates

00:27:43,370 --> 00:27:47,210
you wouldn't find a section like this

00:27:45,020 --> 00:27:48,650
and that manifest what's actually going

00:27:47,210 --> 00:27:50,929
on here is you declare a bunch of

00:27:48,650 --> 00:27:53,059
variables up front and you actually get

00:27:50,929 --> 00:27:54,200
to describe things like their type you

00:27:53,059 --> 00:27:56,450
can even do more interesting things than

00:27:54,200 --> 00:28:00,169
that you can so one of the types is

00:27:56,450 --> 00:28:02,360
something like a certificate and so in

00:28:00,169 --> 00:28:03,980
your manifest it can actually encode the

00:28:02,360 --> 00:28:05,659
dependency of certificates on one

00:28:03,980 --> 00:28:07,250
another so you can say you're gonna have

00:28:05,659 --> 00:28:11,710
to create a whole chain like a

00:28:07,250 --> 00:28:13,880
certificate chain using these variables

00:28:11,710 --> 00:28:15,440
and then if you take a look if I like if

00:28:13,880 --> 00:28:18,169
I grab one of these values in here like

00:28:15,440 --> 00:28:20,419
let's say I pick this one blobster I had

00:28:18,169 --> 00:28:22,400
them user password and then I search

00:28:20,419 --> 00:28:25,309
around for it you'll see that it just

00:28:22,400 --> 00:28:27,830
you actually get template it in to the

00:28:25,309 --> 00:28:28,940
various job configuration I'm so here's

00:28:27,830 --> 00:28:30,470
where we would actually configure the

00:28:28,940 --> 00:28:32,659
blobstore to have this password and

00:28:30,470 --> 00:28:34,460
here's where we would configure the

00:28:32,659 --> 00:28:36,180
cloud controller to use that password to

00:28:34,460 --> 00:28:38,370
access the blobstore

00:28:36,180 --> 00:28:39,750
so it looks a little bit like a spife

00:28:38,370 --> 00:28:43,290
template you see these double friends in

00:28:39,750 --> 00:28:45,480
whatever but what makes this really nice

00:28:43,290 --> 00:28:46,740
is that you who we actually have like

00:28:45,480 --> 00:28:48,540
considerably better tooling around

00:28:46,740 --> 00:28:51,570
supplying these values then is fished up

00:28:48,540 --> 00:28:53,100
so the and like I said you actually get

00:28:51,570 --> 00:28:56,130
to specify the type so this doesn't just

00:28:53,100 --> 00:28:58,140
take some arbitrary string like you the

00:28:56,130 --> 00:29:03,050
tooling will actually guarantee that you

00:28:58,140 --> 00:29:03,050
get a certain type for this value so

00:29:03,800 --> 00:29:10,140
what I was going to explain how how

00:29:06,960 --> 00:29:13,830
these that variables get generated so so

00:29:10,140 --> 00:29:15,210
if I come back to the front page here

00:29:13,830 --> 00:29:18,930
you can actually see what the deploy

00:29:15,210 --> 00:29:20,850
command looks like so so if you're using

00:29:18,930 --> 00:29:23,610
the new box-t a lot you can use this - -

00:29:20,850 --> 00:29:25,410
VAR store flag to actually generate

00:29:23,610 --> 00:29:26,430
those values so that whole list of

00:29:25,410 --> 00:29:28,260
variables you don't actually have to

00:29:26,430 --> 00:29:30,720
generate any of those values yourself so

00:29:28,260 --> 00:29:33,140
if you've ever struggled with coming up

00:29:30,720 --> 00:29:36,270
with a bunch of passwords or worse uh

00:29:33,140 --> 00:29:37,710
configuring you know about 100 TLS

00:29:36,270 --> 00:29:39,390
certificate to make sure that they're

00:29:37,710 --> 00:29:41,340
also signed by the correct certificate

00:29:39,390 --> 00:29:42,750
authority this actually captures all of

00:29:41,340 --> 00:29:44,220
that you don't do anything like the bus

00:29:42,750 --> 00:29:47,580
so I just generates those certificates

00:29:44,220 --> 00:29:50,150
for you and is signed by the correct CA

00:29:47,580 --> 00:29:51,900
and all that jazz so the only the only

00:29:50,150 --> 00:29:53,670
configuration parameter you currently

00:29:51,900 --> 00:29:55,740
have to supply as the system to me so

00:29:53,670 --> 00:29:57,060
this is what a deploy command actually

00:29:55,740 --> 00:29:58,710
looks like right here like that right

00:29:57,060 --> 00:30:02,070
that command right there will give you a

00:29:58,710 --> 00:30:04,530
function in Cloud Foundry so so all of

00:30:02,070 --> 00:30:06,330
the noise around manifest generation

00:30:04,530 --> 00:30:10,050
that you're used to that gets really

00:30:06,330 --> 00:30:11,250
radically simplified let's see what else

00:30:10,050 --> 00:30:13,470
what else is there to love about CF

00:30:11,250 --> 00:30:14,880
deployment if you take a look around

00:30:13,470 --> 00:30:16,530
this manifest you'll find that there's

00:30:14,880 --> 00:30:19,620
not really a lot of I a specific

00:30:16,530 --> 00:30:23,190
configuration we leave that to boss in

00:30:19,620 --> 00:30:25,580
the form of a cloud config so so

00:30:23,190 --> 00:30:27,900
manifest becomes a bit more generalized

00:30:25,580 --> 00:30:32,160
another thing you'll if you look around

00:30:27,900 --> 00:30:35,700
is that there is no global properties

00:30:32,160 --> 00:30:37,530
section every job has the properties

00:30:35,700 --> 00:30:38,940
that meets immediately right there so

00:30:37,530 --> 00:30:40,560
we're not including some global

00:30:38,940 --> 00:30:42,750
namespace and it actually enables

00:30:40,560 --> 00:30:44,580
releases to do some nice things with the

00:30:42,750 --> 00:30:49,260
structure of their properties and stuff

00:30:44,580 --> 00:30:53,070
like that what else we've got

00:30:49,260 --> 00:30:55,950
striping so instead of creating a bunch

00:30:53,070 --> 00:30:57,630
of identical jobs with little suffixes

00:30:55,950 --> 00:30:58,860
that describe which is either instead

00:30:57,630 --> 00:31:02,610
we're gonna use Bosch to just go ahead

00:30:58,860 --> 00:31:04,910
and do that what else do we have you

00:31:02,610 --> 00:31:06,720
might even notice that some some

00:31:04,910 --> 00:31:08,880
configuration seems to be missing from

00:31:06,720 --> 00:31:12,330
this manifest it's not a human saying

00:31:08,880 --> 00:31:14,250
we're just using Bosch links so so as

00:31:12,330 --> 00:31:15,540
teams the work on the links is going to

00:31:14,250 --> 00:31:18,060
be a little bit slower because that has

00:31:15,540 --> 00:31:19,740
to actually get implemented by the

00:31:18,060 --> 00:31:22,470
release change releases have to provide

00:31:19,740 --> 00:31:23,910
and consume the links but the goal is to

00:31:22,470 --> 00:31:26,340
sort of try to shrink this manifest a

00:31:23,910 --> 00:31:28,110
bit as so that we don't have to

00:31:26,340 --> 00:31:29,880
constantly be providing things like you

00:31:28,110 --> 00:31:31,230
know match password everywhere instead

00:31:29,880 --> 00:31:36,840
what these things can get consumed as a

00:31:31,230 --> 00:31:40,620
link and then lastly customizations to

00:31:36,840 --> 00:31:44,370
the deploy manifests are made not in the

00:31:40,620 --> 00:31:46,410
form of some stub but rather in what are

00:31:44,370 --> 00:31:47,760
called what we're calling ops files and

00:31:46,410 --> 00:31:50,030
if you take a look and see if deployment

00:31:47,760 --> 00:31:53,250
in the Operations directory appear

00:31:50,030 --> 00:31:54,780
you'll see a list of off styles that the

00:31:53,250 --> 00:31:57,060
relation aggression team is currently

00:31:54,780 --> 00:31:58,770
supporting so these things make small

00:31:57,060 --> 00:32:00,140
changes to your manifest so that you can

00:31:58,770 --> 00:32:01,590
deploy it under different circumstances

00:32:00,140 --> 00:32:06,030
or with slightly different

00:32:01,590 --> 00:32:06,990
configurations what else is there to say

00:32:06,030 --> 00:32:08,730
about this

00:32:06,990 --> 00:32:09,900
I guess maybe some of the goals of the

00:32:08,730 --> 00:32:12,870
project like why are we bothering to do

00:32:09,900 --> 00:32:14,100
any of this stuff you want to actual the

00:32:12,870 --> 00:32:16,170
driving force behind this is actually

00:32:14,100 --> 00:32:18,000
just being able to unify Diego into a

00:32:16,170 --> 00:32:20,250
normal cloud finder deployment you know

00:32:18,000 --> 00:32:22,980
prior to this you'd have to deploy CF

00:32:20,250 --> 00:32:24,270
and Diego as separate deployments but CF

00:32:22,980 --> 00:32:26,640
deployment includes all the Diego

00:32:24,270 --> 00:32:28,710
components by default and in fact you

00:32:26,640 --> 00:32:30,510
can't deploy Diaz once you have to

00:32:28,710 --> 00:32:34,040
plummet like we officially walked away

00:32:30,510 --> 00:32:34,040
from those and CF deployment

00:32:34,310 --> 00:32:38,310
configuration and documentation of

00:32:36,960 --> 00:32:40,830
configuration should hopefully be a lot

00:32:38,310 --> 00:32:42,660
easier if you've ever tried to look at

00:32:40,830 --> 00:32:43,590
the docs on platform you got org for

00:32:42,660 --> 00:32:45,180
deploying could be a little bit

00:32:43,590 --> 00:32:49,920
confusing and hopefully those will be

00:32:45,180 --> 00:32:52,440
really simplified too and then a lot of

00:32:49,920 --> 00:32:56,310
the just like confusion and craft about

00:32:52,440 --> 00:32:57,900
manifests like as you know these new

00:32:56,310 --> 00:32:59,190
configuration parameters came in and

00:32:57,900 --> 00:33:00,990
became a little bit harder to reason

00:32:59,190 --> 00:33:02,090
about your manifest the spiff templates

00:33:00,990 --> 00:33:03,919
also leave a decent amount of

00:33:02,090 --> 00:33:06,799
cruft in there like all of that

00:33:03,919 --> 00:33:09,320
hopefully gets gets reduced considerably

00:33:06,799 --> 00:33:10,760
so there's no longer a problem and one

00:33:09,320 --> 00:33:12,799
of our goals for the manifest is for it

00:33:10,760 --> 00:33:15,020
to be sort of canonical reference like

00:33:12,799 --> 00:33:16,640
we wanted to be legible and for people

00:33:15,020 --> 00:33:17,960
to be able to look at it and understand

00:33:16,640 --> 00:33:18,289
any of everything that's going on in

00:33:17,960 --> 00:33:21,590
there

00:33:18,289 --> 00:33:23,330
so we're working really hard to keep it

00:33:21,590 --> 00:33:27,890
as tight as possible so that we don't

00:33:23,330 --> 00:33:31,400
end up with moist and the last thing

00:33:27,890 --> 00:33:35,000
I'll say about this is like people have

00:33:31,400 --> 00:33:37,100
asked me how ready CF deployment is I

00:33:35,000 --> 00:33:38,779
would say that it's definitely ready for

00:33:37,100 --> 00:33:40,610
things like test and development most of

00:33:38,779 --> 00:33:43,460
our mostly internal development teams

00:33:40,610 --> 00:33:46,520
the CloudFactory foundation the OSS are

00:33:43,460 --> 00:33:48,620
our using CF deployment in some part of

00:33:46,520 --> 00:33:51,649
their pipeline so it's ready to use for

00:33:48,620 --> 00:33:54,190
those those scenarios as far as

00:33:51,649 --> 00:33:56,419
production environments go we're still

00:33:54,190 --> 00:33:58,309
the release integration team is still

00:33:56,419 --> 00:34:01,190
working on two big things the first is

00:33:58,309 --> 00:34:02,360
developing a migration path from CF at

00:34:01,190 --> 00:34:04,460
least if you have deployment so

00:34:02,360 --> 00:34:06,260
everybody who currently has their CF or

00:34:04,460 --> 00:34:07,340
at least deployed we want to make sure

00:34:06,260 --> 00:34:10,250
that you have a decent experience

00:34:07,340 --> 00:34:12,080
migrating this deployment it's ready and

00:34:10,250 --> 00:34:14,300
then the other thing is we want to make

00:34:12,080 --> 00:34:17,330
some you still needs a recent

00:34:14,300 --> 00:34:19,550
investigation it said what would

00:34:17,330 --> 00:34:21,649
essentially act at up time during

00:34:19,550 --> 00:34:24,649
deploys we haven't really been fond of

00:34:21,649 --> 00:34:26,480
testing right just David does this

00:34:24,649 --> 00:34:29,629
deployment differ from what they were

00:34:26,480 --> 00:34:31,129
previously deployed I mean you hear not

00:34:29,629 --> 00:34:32,480
using links and things before and now

00:34:31,129 --> 00:34:33,830
they're gonna switch to links and yeah

00:34:32,480 --> 00:34:35,480
there are decent number of differences

00:34:33,830 --> 00:34:37,639
so links are one example like I said the

00:34:35,480 --> 00:34:40,790
other the big one is that Diego gets

00:34:37,639 --> 00:34:42,290
inlined into your deployment so so

00:34:40,790 --> 00:34:44,619
instead of having one to put like two

00:34:42,290 --> 00:34:47,179
deployments one for CF and one for Diego

00:34:44,619 --> 00:34:49,460
this is good going to go the other way

00:34:47,179 --> 00:34:53,690
and say let's let's put everything in

00:34:49,460 --> 00:34:55,129
the same deployment so that's where the

00:34:53,690 --> 00:35:02,300
big one said so you don't have to have

00:34:55,129 --> 00:35:04,670
this wintered deployment anyway so in

00:35:02,300 --> 00:35:07,970
the manifests why do you guys go with

00:35:04,670 --> 00:35:09,530
the so most people know like variable

00:35:07,970 --> 00:35:12,050
interpolation and stuff like that as

00:35:09,530 --> 00:35:13,250
like you know if you're familiar shell

00:35:12,050 --> 00:35:15,770
scripting stuff like that you might use

00:35:13,250 --> 00:35:17,000
like a dollar sign bracket bracket

00:35:15,770 --> 00:35:18,830
inside there why did you go with the

00:35:17,000 --> 00:35:20,810
double parens it seems really awkward

00:35:18,830 --> 00:35:24,020
and weird that's actually coming from

00:35:20,810 --> 00:35:25,460
boss so the boss CLI interprets those

00:35:24,020 --> 00:35:26,210
double price is that right that's right

00:35:25,460 --> 00:35:30,050
to make sure you right

00:35:26,210 --> 00:35:32,290
I didn't screw that up correct

00:35:30,050 --> 00:35:34,460
I sent the question from a Dimitri oh

00:35:32,290 --> 00:35:38,630
snap

00:35:34,460 --> 00:35:41,090
so there isn't why is it is a much more

00:35:38,630 --> 00:35:43,010
well City Mo friendly actually writes we

00:35:41,090 --> 00:35:44,420
were considering issue do the Curly's to

00:35:43,010 --> 00:35:45,680
the promised curl is you have to put

00:35:44,420 --> 00:35:48,920
double quotes all over the place because

00:35:45,680 --> 00:35:51,050
the actions that have kind of a gill so

00:35:48,920 --> 00:35:53,600
you can it's almost an invalid yeah I

00:35:51,050 --> 00:35:56,870
think it is one yeah so double friends

00:35:53,600 --> 00:35:58,880
are agnostic to that if you will and

00:35:56,870 --> 00:36:01,460
they don't cause you to have to go in

00:35:58,880 --> 00:36:03,800
and fight with llamo you know line by

00:36:01,460 --> 00:36:05,720
line you know some of the other

00:36:03,800 --> 00:36:10,030
characters might have been maybe

00:36:05,720 --> 00:36:13,760
possible as well but it seemed like

00:36:10,030 --> 00:36:18,200
double parents offered that and a

00:36:13,760 --> 00:36:20,150
certain level of visibility versus

00:36:18,200 --> 00:36:21,710
trying to hunt down where is they and in

00:36:20,150 --> 00:36:25,040
the beginning of the date abilities like

00:36:21,710 --> 00:36:28,520
that and also I believe their summer

00:36:25,040 --> 00:36:30,770
bash friendly as well so just just Sam

00:36:28,520 --> 00:36:33,830
you know what I feel interoperability

00:36:30,770 --> 00:36:36,080
issue right yeah one thing I realize I

00:36:33,830 --> 00:36:38,150
forgot to mention is as I said that the

00:36:36,080 --> 00:36:42,800
boxer I will generate those those values

00:36:38,150 --> 00:36:45,140
for you um but I think I'm pretty sure

00:36:42,800 --> 00:36:46,990
that the idea is that I can fix our

00:36:45,140 --> 00:36:51,350
implementations would also be able to

00:36:46,990 --> 00:36:53,480
and fill in those values as well so is

00:36:51,350 --> 00:36:56,450
it required to have they config server

00:36:53,480 --> 00:36:59,500
setup type or you can use the bar store

00:36:56,450 --> 00:37:04,520
instead so it's like you get your choice

00:36:59,500 --> 00:37:06,800
credential management option but we will

00:37:04,520 --> 00:37:10,490
strongly encourage people to use kratom

00:37:06,800 --> 00:37:12,620
because it will provide a manageable and

00:37:10,490 --> 00:37:15,530
secure way to store your credentials now

00:37:12,620 --> 00:37:17,600
if you you know try to extend credit to

00:37:15,530 --> 00:37:19,910
you know save the credentials in your

00:37:17,600 --> 00:37:22,520
favorite credential store you know that

00:37:19,910 --> 00:37:23,600
will be also fine but from a perspective

00:37:22,520 --> 00:37:25,820
of Bosch

00:37:23,600 --> 00:37:27,980
will definitely be hoping that people

00:37:25,820 --> 00:37:30,859
use it because then Bosch would

00:37:27,980 --> 00:37:33,890
have you no raw passwords and

00:37:30,859 --> 00:37:35,450
certificates in its database is the

00:37:33,890 --> 00:37:37,640
credit hub stand-up an integration

00:37:35,450 --> 00:37:42,470
really straightforward and simple to

00:37:37,640 --> 00:37:44,690
encourage adoption so III don't don't I

00:37:42,470 --> 00:37:47,210
jacked David's time but there is a

00:37:44,690 --> 00:37:50,150
boards deployment repository that offers

00:37:47,210 --> 00:37:51,980
and will offer even better integration

00:37:50,150 --> 00:37:53,810
for credit is just an OPS file you just

00:37:51,980 --> 00:38:04,400
throw in - Oh credible llamo and you

00:37:53,810 --> 00:38:07,190
have a credit and there is I'm not sure

00:38:04,400 --> 00:38:10,820
I've much add but certainly look at that

00:38:07,190 --> 00:38:12,790
ops file in the watch deployment to see

00:38:10,820 --> 00:38:15,230
how that gets deployed it should be

00:38:12,790 --> 00:38:19,700
really pretty frictionless for the

00:38:15,230 --> 00:38:21,320
consumer it's always worth going look at

00:38:19,700 --> 00:38:26,570
the poor requests or after updates as

00:38:21,320 --> 00:38:29,780
well that's true or poke Dimitri to

00:38:26,570 --> 00:38:31,220
merge this so anyway that's all I had on

00:38:29,780 --> 00:38:33,410
my site so if there any other questions

00:38:31,220 --> 00:38:35,840
I'm happy to answer them in general you

00:38:33,410 --> 00:38:37,670
can reach me in the yes deployment slack

00:38:35,840 --> 00:38:39,880
channel of the Cloud Foundry slack I

00:38:37,670 --> 00:38:43,010
spend little time in there and have

00:38:39,880 --> 00:38:46,010
questions or you can also open a github

00:38:43,010 --> 00:38:49,640
issue or whatever we're excited to get

00:38:46,010 --> 00:38:51,800
people to apples and I'll try to be

00:38:49,640 --> 00:38:54,320
really open about when different wood

00:38:51,800 --> 00:38:56,240
beats different milestones like like

00:38:54,320 --> 00:39:00,380
being able to guarantee zero down zero

00:38:56,240 --> 00:39:02,510
downtime for apps or like having a

00:39:00,380 --> 00:39:05,240
viable migration path yes sir

00:39:02,510 --> 00:39:07,460
I'll try to be very open about when we

00:39:05,240 --> 00:39:09,800
hit those markers the other question

00:39:07,460 --> 00:39:11,840
that I had for you was what about

00:39:09,800 --> 00:39:13,280
release tags versioning that kind of

00:39:11,840 --> 00:39:15,650
stuff like you know here's a tag where

00:39:13,280 --> 00:39:16,880
all these releases have been tested by

00:39:15,650 --> 00:39:18,740
the pipeline we know that they go

00:39:16,880 --> 00:39:20,570
together yeah that's a great question so

00:39:18,740 --> 00:39:21,859
the master branch is so the release

00:39:20,570 --> 00:39:24,280
candidate Brandt and the master branch

00:39:21,859 --> 00:39:26,180
have always passed all the tests

00:39:24,280 --> 00:39:27,590
the difference between the release

00:39:26,180 --> 00:39:29,420
candidate branch or the master branch is

00:39:27,590 --> 00:39:31,970
some notion of like creating a version

00:39:29,420 --> 00:39:34,210
tag so release candidate gets

00:39:31,970 --> 00:39:37,970
automatically updated whereas master

00:39:34,210 --> 00:39:40,040
gets manually updated when we add a new

00:39:37,970 --> 00:39:41,750
version and as far as bruising he goes

00:39:40,040 --> 00:39:41,900
one of our other goals for CF deployment

00:39:41,750 --> 00:39:45,140
is

00:39:41,900 --> 00:39:48,050
start semantically learning - so being

00:39:45,140 --> 00:39:51,500
able to say CF deployment version 1.0

00:39:48,050 --> 00:39:53,690
1.1 1.2 you like why actually do some

00:39:51,500 --> 00:39:56,150
entacle version prison incorrectly so

00:39:53,690 --> 00:39:57,920
major version bunks would be somehow a

00:39:56,150 --> 00:40:00,200
breaking change in your deployment of US

00:39:57,920 --> 00:40:01,910
like in my in my mind if the deployer is

00:40:00,200 --> 00:40:03,860
the primary personal concern here then

00:40:01,910 --> 00:40:06,050
then a major version but means the

00:40:03,860 --> 00:40:08,360
deployer is gonna have to stop what

00:40:06,050 --> 00:40:09,800
they're doing when they're deploying and

00:40:08,360 --> 00:40:13,160
like figure something out like there are

00:40:09,800 --> 00:40:15,020
manual steps involved or some some other

00:40:13,160 --> 00:40:17,360
stuff they'll have to take part of their

00:40:15,020 --> 00:40:20,270
employ so will actually try to be really

00:40:17,360 --> 00:40:25,580
explicit about those business those

00:40:20,270 --> 00:40:27,290
expectations as part of her today I had

00:40:25,580 --> 00:40:28,880
a question about the migration tool

00:40:27,290 --> 00:40:32,360
that's being developed if they're

00:40:28,880 --> 00:40:34,220
already a repo somewhere if you right

00:40:32,360 --> 00:40:36,740
here I'm suffering my screen right yeah

00:40:34,220 --> 00:40:38,120
so if you look here in the transition

00:40:36,740 --> 00:40:39,500
directory you'll see some of the stuff

00:40:38,120 --> 00:40:40,790
we're building this is all super early I

00:40:39,500 --> 00:40:44,450
wouldn't take a look at it just yet

00:40:40,790 --> 00:40:45,650
we're we're just just getting started we

00:40:44,450 --> 00:40:48,650
probably picked up the story maybe a

00:40:45,650 --> 00:40:51,170
week ago so where we started on the

00:40:48,650 --> 00:40:53,120
track of work about a week ago so it's

00:40:51,170 --> 00:40:54,590
also pretty I wouldn't this is the place

00:40:53,120 --> 00:40:58,760
to follow this transition directory so

00:40:54,590 --> 00:41:00,620
you have to come and like send some

00:40:58,760 --> 00:41:02,390
updates as I said we because we made

00:41:00,620 --> 00:41:04,910
progress so maybe once you get some of

00:41:02,390 --> 00:41:06,050
the tooling updated lots of people like

00:41:04,910 --> 00:41:07,700
hey this thing like you ready take a

00:41:06,050 --> 00:41:09,110
look at it give it a shot probably not

00:41:07,700 --> 00:41:11,000
ready to migrate yet but like maybe

00:41:09,110 --> 00:41:13,160
there's something viable as far as

00:41:11,000 --> 00:41:20,260
experimenting if you want to like learn

00:41:13,160 --> 00:41:20,260
about CF deployment so okay thanks yeah

00:41:20,710 --> 00:41:28,799
alright alright so I

00:41:27,420 --> 00:41:33,119
I'm feeling it's not gonna be the first

00:41:28,799 --> 00:41:35,039
time we hear from David but if you go to

00:41:33,119 --> 00:41:37,170
the readme of CF deployment he actually

00:41:35,039 --> 00:41:38,579
has a section called is Co department

00:41:37,170 --> 00:41:41,880
ready to use so you can just look at

00:41:38,579 --> 00:41:42,299
that and he will tell you when it's

00:41:41,880 --> 00:41:46,500
ready

00:41:42,299 --> 00:41:49,680
so excellent thank you David the one

00:41:46,500 --> 00:41:51,990
thing I guess I want to mention is this

00:41:49,680 --> 00:41:53,730
boss hasn't gone to a similar thing

00:41:51,990 --> 00:41:57,059
called boss deployments so if you are

00:41:53,730 --> 00:41:59,279
using Bosch in that way you'll be I

00:41:57,059 --> 00:42:04,260
guess closer to using this which is much

00:41:59,279 --> 00:42:09,920
more complex but terrible similar so

00:42:04,260 --> 00:42:16,289
Dimitri maybe you can update us on your

00:42:09,920 --> 00:42:21,569
turbulence don't tell us about this fun

00:42:16,289 --> 00:42:25,650
stuff sure so probably about a year ago

00:42:21,569 --> 00:42:36,509
so just let me share my screen share

00:42:25,650 --> 00:42:39,240
screen right so you know some time ago

00:42:36,509 --> 00:42:44,640
I'm written on this release called

00:42:39,240 --> 00:42:49,500
turbulence turbulence is a release that

00:42:44,640 --> 00:42:53,900
provides an API server that does chaos

00:42:49,500 --> 00:42:56,730
monkey functionality kind of a

00:42:53,900 --> 00:43:00,930
disturbance in your environment right so

00:42:56,730 --> 00:43:02,849
for people who don't know for people who

00:43:00,930 --> 00:43:04,799
don't know chaos monkey is something

00:43:02,849 --> 00:43:09,119
that Netflix made you know years ago

00:43:04,799 --> 00:43:12,180
that's the way they do stability or I

00:43:09,119 --> 00:43:13,829
guess kind of a randomized testing in

00:43:12,180 --> 00:43:16,680
their environments what it does it kills

00:43:13,829 --> 00:43:17,839
off particular VMs in their AWS

00:43:16,680 --> 00:43:22,589
environment or maybe because of

00:43:17,839 --> 00:43:25,259
particular Izzie's and regions even so

00:43:22,589 --> 00:43:27,990
the concept is very you know generic

00:43:25,259 --> 00:43:30,480
right throwing some kind of a failure

00:43:27,990 --> 00:43:32,579
into your environment and see how your

00:43:30,480 --> 00:43:36,029
environment behaves now you know some

00:43:32,579 --> 00:43:37,740
people may decide to you know kind of a

00:43:36,029 --> 00:43:41,100
put it in a pipeline for testing

00:43:37,740 --> 00:43:42,990
purposes maybe I don't know let's say

00:43:41,100 --> 00:43:46,110
for me I mean I had CD cluster and you

00:43:42,990 --> 00:43:48,020
see that HCD cluster recovers shortly

00:43:46,110 --> 00:43:52,500
after that right other people just

00:43:48,020 --> 00:43:54,870
decide to do a randomized injection of

00:43:52,500 --> 00:43:57,000
failure maybe like once a week there is

00:43:54,870 --> 00:43:59,580
some random failure is injected and you

00:43:57,000 --> 00:44:00,990
see that the system recovers okay and

00:43:59,580 --> 00:44:03,060
over time of course you gain confidence

00:44:00,990 --> 00:44:06,120
that your piece of software that she

00:44:03,060 --> 00:44:09,170
deploying can resend you know a variety

00:44:06,120 --> 00:44:11,280
of different failures and you know it

00:44:09,170 --> 00:44:14,130
gives you a little bit of peace of mind

00:44:11,280 --> 00:44:17,280
that when a real failure hits you're not

00:44:14,130 --> 00:44:21,750
completely unprepared right now of

00:44:17,280 --> 00:44:25,500
course not all software is really able

00:44:21,750 --> 00:44:28,170
to you know withstand all kinds of

00:44:25,500 --> 00:44:30,390
different failure injections so you know

00:44:28,170 --> 00:44:32,910
you may find out that the software that

00:44:30,390 --> 00:44:36,420
you're running doesn't actually deal

00:44:32,910 --> 00:44:37,830
well if an entire easy start and that's

00:44:36,420 --> 00:44:40,470
that's partly the reason why you would

00:44:37,830 --> 00:44:43,470
want to use turbulence to understand

00:44:40,470 --> 00:44:45,420
what is the business impact you know

00:44:43,470 --> 00:44:49,050
that will happen if something happens to

00:44:45,420 --> 00:44:50,520
your environment so turbulence like I

00:44:49,050 --> 00:44:52,620
was mentioning it's an API server but it

00:44:50,520 --> 00:44:56,130
also has an agent agent can be

00:44:52,620 --> 00:44:59,720
co-located everywhere at the smallest

00:44:56,130 --> 00:45:01,890
possible or the simplest possible

00:44:59,720 --> 00:45:03,510
functionality level all it's doing is

00:45:01,890 --> 00:45:05,670
just telling the director hey delete

00:45:03,510 --> 00:45:07,470
this VM without trying to do anything

00:45:05,670 --> 00:45:09,810
Bashi so for example doesn't try to

00:45:07,470 --> 00:45:12,420
drain anything or anything like that you

00:45:09,810 --> 00:45:16,620
can simulate that behavior yourself by

00:45:12,420 --> 00:45:18,300
just calling borsch delete vm and that's

00:45:16,620 --> 00:45:20,820
pretty much what turbulence does it

00:45:18,300 --> 00:45:25,050
calls that API call with a specific set

00:45:20,820 --> 00:45:27,780
of instances now in addition to you know

00:45:25,050 --> 00:45:30,330
the up termination or unexpectedly I'm

00:45:27,780 --> 00:45:34,830
termination rather it also can impose

00:45:30,330 --> 00:45:36,960
different I CPU RAM IO load it can do

00:45:34,830 --> 00:45:39,450
Network partitioning with IP tables it

00:45:36,960 --> 00:45:41,690
can use some of the internal tooling to

00:45:39,450 --> 00:45:44,790
apply some packet loss and you know

00:45:41,690 --> 00:45:46,140
packet delivery delays so there is a

00:45:44,790 --> 00:45:48,180
variety of different things that it

00:45:46,140 --> 00:45:50,250
could be applying to the machine you

00:45:48,180 --> 00:45:52,830
know one of the fun options is for

00:45:50,250 --> 00:45:53,460
example cause of kernel panic so that

00:45:52,830 --> 00:45:55,050
kind of stuff

00:45:53,460 --> 00:45:58,020
I am a period

00:45:55,050 --> 00:46:00,630
you know if if that's something that you

00:45:58,020 --> 00:46:04,830
will find useful in your own you know

00:46:00,630 --> 00:46:09,120
testing requirements but you know it's

00:46:04,830 --> 00:46:12,660
available so the agent you know so the

00:46:09,120 --> 00:46:14,160
the way the way that turbulence is

00:46:12,660 --> 00:46:16,650
applying although these different

00:46:14,160 --> 00:46:18,840
failures on top of these machines is

00:46:16,650 --> 00:46:24,360
through an agent that is co-located

00:46:18,840 --> 00:46:28,020
let's say as a runtime add-on and ATI

00:46:24,360 --> 00:46:31,800
Sorrell you know trigger certain actions

00:46:28,020 --> 00:46:34,230
done to be done by the agent so here's

00:46:31,800 --> 00:46:36,780
the homepage for turbulence right

00:46:34,230 --> 00:46:40,160
there's API doc over here and API dog

00:46:36,780 --> 00:46:42,420
kind of lists you know what kind of

00:46:40,160 --> 00:46:44,310
procedures can be done so a top level

00:46:42,420 --> 00:46:46,860
primitives and turbulence is an incident

00:46:44,310 --> 00:46:49,620
so you can create an incident and each

00:46:46,860 --> 00:46:52,350
incident can have a set of tasks to

00:46:49,620 --> 00:46:55,460
perform and a selector so for example

00:46:52,350 --> 00:46:59,550
you can select 30% of your Diego cells

00:46:55,460 --> 00:47:03,210
to be stressed for you know 10 minutes

00:46:59,550 --> 00:47:05,220
and only stress it you know stress the

00:47:03,210 --> 00:47:06,270
CPU for it for example right and of

00:47:05,220 --> 00:47:08,910
course you can select you know

00:47:06,270 --> 00:47:14,820
deployment name and you know instance

00:47:08,910 --> 00:47:16,560
group and maybe even easy right so some

00:47:14,820 --> 00:47:18,660
of the other things that you guys might

00:47:16,560 --> 00:47:21,300
be interested in is there's a schedule

00:47:18,660 --> 00:47:23,250
to incidents so arguably you know if

00:47:21,300 --> 00:47:25,740
someone is really boring into concourse

00:47:23,250 --> 00:47:27,750
and you know seeing and cheating then

00:47:25,740 --> 00:47:31,380
you're a div CI system that can do some

00:47:27,750 --> 00:47:34,560
you know scheduled delivery of some you

00:47:31,380 --> 00:47:36,570
know action so you could just be you

00:47:34,560 --> 00:47:38,610
know making a curl command to the

00:47:36,570 --> 00:47:41,220
incidents API endpoint however if you're

00:47:38,610 --> 00:47:43,050
not using a CI are you just not bothered

00:47:41,220 --> 00:47:45,150
by it you know for a particular reason

00:47:43,050 --> 00:47:48,440
then you can configure a scheduled

00:47:45,150 --> 00:47:52,560
incident and it will do it on a timer

00:47:48,440 --> 00:47:53,370
not you know not the most advanced

00:47:52,560 --> 00:47:55,290
scheduler but

00:47:53,370 --> 00:47:57,750
deals with some of these things very

00:47:55,290 --> 00:47:59,850
decently there are some of the explicit

00:47:57,750 --> 00:48:03,780
incidents you know you have a kill kill

00:47:59,850 --> 00:48:05,580
of the VM you have a kill process so it

00:48:03,780 --> 00:48:07,530
can kill a random process or maybe it

00:48:05,580 --> 00:48:08,520
can kill a process that's matching some

00:48:07,530 --> 00:48:13,110
kind of a

00:48:08,520 --> 00:48:14,940
process name what else can do stress so

00:48:13,110 --> 00:48:17,510
it's using a stress binary to stress all

00:48:14,940 --> 00:48:20,220
this different variables in system

00:48:17,510 --> 00:48:23,790
firewall as I was mentioning IP table

00:48:20,220 --> 00:48:25,290
situation controlling the network see

00:48:23,790 --> 00:48:27,120
when I have the disc so for example if

00:48:25,290 --> 00:48:29,580
you want to fill up your persistent data

00:48:27,120 --> 00:48:33,300
or ephemeral data maybe in philippi time

00:48:29,580 --> 00:48:36,390
partition shutdown so that will trigger

00:48:33,300 --> 00:48:38,610
a vm shutdown from inside the VM through

00:48:36,390 --> 00:48:41,060
the operating system but it can also

00:48:38,610 --> 00:48:43,380
cause a crash or reboots or issue

00:48:41,060 --> 00:48:45,000
variety of different system request

00:48:43,380 --> 00:48:47,960
through the kernel interface and that's

00:48:45,000 --> 00:48:53,400
how you can typically do a kernel panic

00:48:47,960 --> 00:48:55,200
now there is a TR to make this OS at the

00:48:53,400 --> 00:48:58,260
noise stick after a certain extent so

00:48:55,200 --> 00:49:00,510
our windows team you know that has

00:48:58,260 --> 00:49:06,210
network and in those integration has

00:49:00,510 --> 00:49:10,890
done some of that and you know there's a

00:49:06,210 --> 00:49:14,310
PR open for me to merge at some point to

00:49:10,890 --> 00:49:16,320
do windows wash releases and linux wash

00:49:14,310 --> 00:49:21,030
releases really have a way in which they

00:49:16,320 --> 00:49:22,710
they coexist so yeah all right sorry try

00:49:21,030 --> 00:49:25,830
turbulence is really cool I'm sorry for

00:49:22,710 --> 00:49:29,940
us nice it's a good question currently

00:49:25,830 --> 00:49:31,530
basha decided to not do any kind of a

00:49:29,940 --> 00:49:33,270
higher level abstraction so you just

00:49:31,530 --> 00:49:34,800
have to create a separate job so for

00:49:33,270 --> 00:49:36,480
example here there's two jobs in this

00:49:34,800 --> 00:49:38,760
release right there's API server and

00:49:36,480 --> 00:49:40,740
then there's agent so you would actually

00:49:38,760 --> 00:49:43,200
you know have a agent window something

00:49:40,740 --> 00:49:44,870
like that and you know it's the same

00:49:43,200 --> 00:49:47,790
code because it's you can go for example

00:49:44,870 --> 00:49:49,800
but there's definitely code paths that

00:49:47,790 --> 00:49:53,550
will trigger windows specific things so

00:49:49,800 --> 00:49:56,490
slightly different job was more or less

00:49:53,550 --> 00:49:59,160
the same content on the job and you know

00:49:56,490 --> 00:50:00,930
other releases in CF or you know in

00:49:59,160 --> 00:50:02,610
other places have taken up the same

00:50:00,930 --> 00:50:04,700
pattern so you know cuz you need

00:50:02,610 --> 00:50:07,980
different jobs you need advice manifest

00:50:04,700 --> 00:50:09,480
you will for example for the agent you

00:50:07,980 --> 00:50:12,150
will configure there's a different type

00:50:09,480 --> 00:50:14,760
of add-on right add-ons are allowed to

00:50:12,150 --> 00:50:17,010
be it's actually applied selectively

00:50:14,760 --> 00:50:18,960
right so there's a include and exclude

00:50:17,010 --> 00:50:21,930
section for add-ons so you can say that

00:50:18,960 --> 00:50:23,880
particular job should be

00:50:21,930 --> 00:50:25,800
particular add-on with this set of jobs

00:50:23,880 --> 00:50:28,950
could be applied to only particular

00:50:25,800 --> 00:50:31,770
operating system or maybe excluding

00:50:28,950 --> 00:50:34,500
opera exist so that's kind of that's how

00:50:31,770 --> 00:50:36,450
you're able to say you know do one thing

00:50:34,500 --> 00:50:39,500
for Windows do another thing for centers

00:50:36,450 --> 00:50:42,750
do nothing for you bloom - let's say

00:50:39,500 --> 00:50:44,280
yeah but you know of course if you're so

00:50:42,750 --> 00:50:45,630
base might has actually since you

00:50:44,280 --> 00:50:47,579
mentioned base manifests right let's

00:50:45,630 --> 00:50:50,970
take a look at that real quick base

00:50:47,579 --> 00:50:53,160
manifest is fairly simple all it takes

00:50:50,970 --> 00:50:55,619
in is a director of credentialing thing

00:50:53,160 --> 00:50:57,480
and it generates the rest of the things

00:50:55,619 --> 00:51:00,450
you know for the certificate for the API

00:50:57,480 --> 00:51:02,940
server and it exposes a link for the

00:51:00,450 --> 00:51:06,000
agents to connect to automatically and

00:51:02,940 --> 00:51:08,460
that's purge it you know it deploys the

00:51:06,000 --> 00:51:10,530
server the server I have a little

00:51:08,460 --> 00:51:13,309
deployment over here I know I'm doing on

00:51:10,530 --> 00:51:16,559
time so stuff me whenever you want but

00:51:13,309 --> 00:51:18,869
you know if you look at turbulence

00:51:16,559 --> 00:51:23,339
deployment over here there is a server

00:51:18,869 --> 00:51:26,940
at this IP so we can real quickly go in

00:51:23,339 --> 00:51:28,290
and hit that server there is HTTP you is

00:51:26,940 --> 00:51:30,720
fairly simple actually there's a

00:51:28,290 --> 00:51:35,099
screenshot of the UI it looks something

00:51:30,720 --> 00:51:37,260
like this and you know you can schedule

00:51:35,099 --> 00:51:40,049
the tasks it looks like I'm out of time

00:51:37,260 --> 00:51:41,520
for doing the presentation if you guys

00:51:40,049 --> 00:51:44,910
have more questions about it have to

00:51:41,520 --> 00:51:51,900
transfer on slack or later yeah check it

00:51:44,910 --> 00:51:52,500
out maybe it's useful for you there's

00:51:51,900 --> 00:51:56,970
teams

00:51:52,500 --> 00:51:59,069
I believe console team used it to verify

00:51:56,970 --> 00:52:01,950
some of the you know behaviors when

00:51:59,069 --> 00:52:03,750
console you know to test to make sure

00:52:01,950 --> 00:52:06,030
the console can failover and things like

00:52:03,750 --> 00:52:07,950
that right there's few other teams I

00:52:06,030 --> 00:52:09,900
believe with and people that use it to

00:52:07,950 --> 00:52:13,410
test some of the other things I'm not

00:52:09,900 --> 00:52:15,690
using it to test any of my things on

00:52:13,410 --> 00:52:17,700
periodic or one continuous basis but

00:52:15,690 --> 00:52:20,690
here and there I tried to throw her in

00:52:17,700 --> 00:52:20,690
and see what happens

00:52:25,730 --> 00:52:30,089
LED and then he brings us chaos

00:52:28,319 --> 00:52:34,319
wouldn't I

00:52:30,089 --> 00:52:37,530
Nick this is your chance to five minutes

00:52:34,319 --> 00:52:37,829
what are we going it's actually really

00:52:37,530 --> 00:52:39,750
handy

00:52:37,829 --> 00:52:43,799
every Hill every all the other I just

00:52:39,750 --> 00:52:47,609
need to share I will I'll try to find

00:52:43,799 --> 00:52:50,490
five minutes of interesting stuff with

00:52:47,609 --> 00:52:53,099
what everyone else has said so it's just

00:52:50,490 --> 00:52:56,520
a talking so yes Bosch is five happy

00:52:53,099 --> 00:52:56,970
birthday to us obviously the last few

00:52:56,520 --> 00:52:58,829
years

00:52:56,970 --> 00:53:01,950
Dmitri his team have been going through

00:52:58,829 --> 00:53:05,960
the blush notes what is version two

00:53:01,950 --> 00:53:08,460
almost killed that writer a year ago but

00:53:05,960 --> 00:53:10,319
this is kind of my looking at what

00:53:08,460 --> 00:53:11,640
applies to it it's somewhat about these

00:53:10,319 --> 00:53:13,230
are the things that you're not going to

00:53:11,640 --> 00:53:15,150
be using like you don't use passionate

00:53:13,230 --> 00:53:17,309
use Bosch preamp you don't use much

00:53:15,150 --> 00:53:20,160
light use blush create any with the

00:53:17,309 --> 00:53:24,150
VirtualBox CPI and then we have the new

00:53:20,160 --> 00:53:25,829
repose it's always worth looking back at

00:53:24,150 --> 00:53:27,660
the Bosch notes to see how far we've

00:53:25,829 --> 00:53:30,630
come and and what's coming down the

00:53:27,660 --> 00:53:36,539
pipeline and it's always worth talking

00:53:30,630 --> 00:53:40,619
Dmitri who is human we have fabulous

00:53:36,539 --> 00:53:42,450
documentation and you know someone who's

00:53:40,619 --> 00:53:45,299
been around for five years I got

00:53:42,450 --> 00:53:48,539
surprised abducts and it's wonderful to

00:53:45,299 --> 00:53:52,920
read them so this this pattern that sort

00:53:48,539 --> 00:53:55,380
of today by David the CF deployment

00:53:52,920 --> 00:53:57,839
actually spans our so there is the Bosch

00:53:55,380 --> 00:53:59,490
deployment and you might probably before

00:53:57,839 --> 00:54:02,579
use Bosch deployment try the jump box

00:53:59,490 --> 00:54:05,670
deployment to bring up a job box

00:54:02,579 --> 00:54:08,279
so after see of deployment as an example

00:54:05,670 --> 00:54:11,460
there is a dock a broker deployment

00:54:08,279 --> 00:54:14,010
which will bring up a service broker

00:54:11,460 --> 00:54:16,980
that runs and one or more services in a

00:54:14,010 --> 00:54:18,450
docker containers and okay so as you

00:54:16,980 --> 00:54:19,619
start to build your own Bosch releases

00:54:18,450 --> 00:54:22,309
or perhaps to upgrade your Bosch

00:54:19,619 --> 00:54:25,500
releases have a think about this pattern

00:54:22,309 --> 00:54:28,400
or at least have a manifest folder in

00:54:25,500 --> 00:54:30,569
your release with that same idea and

00:54:28,400 --> 00:54:32,549
when you get started we started to write

00:54:30,569 --> 00:54:34,380
blog posts obviously there's more and

00:54:32,549 --> 00:54:38,369
more dog communication at least this is

00:54:34,380 --> 00:54:41,220
done with a sense of humor and because

00:54:38,369 --> 00:54:43,090
it's pretty exciting and and I

00:54:41,220 --> 00:54:46,270
thoroughly enjoyed the last month

00:54:43,090 --> 00:54:48,490
of upgrading everything I've touched and

00:54:46,270 --> 00:54:50,700
as Sir David said the gist of it now is

00:54:48,490 --> 00:54:54,040
is you want to add this one face thing

00:54:50,700 --> 00:54:55,780
I'd only ask David can we get rid of the

00:54:54,040 --> 00:55:00,730
- deployment from the file name so could

00:54:55,780 --> 00:55:05,560
this be /c FML but the pull request plus

00:55:00,730 --> 00:55:07,900
one from me that letter C F da Gama yeah

00:55:05,560 --> 00:55:08,910
just needs to be C F doyoung I'll think

00:55:07,900 --> 00:55:10,870
about it

00:55:08,910 --> 00:55:14,290
well you've got until I get there

00:55:10,870 --> 00:55:16,030
tomorrow and then we can pull it this is

00:55:14,290 --> 00:55:20,350
great having a cat call with the threat

00:55:16,030 --> 00:55:21,580
of me arriving imminently and all the

00:55:20,350 --> 00:55:23,020
examples like there's a zookeeper

00:55:21,580 --> 00:55:25,030
release which has it under manifest

00:55:23,020 --> 00:55:26,440
folder and it's just wonderful they're

00:55:25,030 --> 00:55:30,460
bringing up systems now it's just so

00:55:26,440 --> 00:55:32,290
simple in the so little the edge cases

00:55:30,460 --> 00:55:34,270
and this is my benefit if I can talk

00:55:32,290 --> 00:55:37,030
about the things that Dimitri won't talk

00:55:34,270 --> 00:55:39,130
to me about is is is you don't get

00:55:37,030 --> 00:55:41,320
explicit failure as much as I'd like so

00:55:39,130 --> 00:55:45,310
I find that I need to I want to run

00:55:41,320 --> 00:55:46,570
washing it and then bar first and find

00:55:45,310 --> 00:55:52,690
out that I'm actually covered all the

00:55:46,570 --> 00:55:54,730
errors and as David Sanders devised or

00:55:52,690 --> 00:55:56,110
if you're not using crater then I'll

00:55:54,730 --> 00:55:59,560
give you the final list of variables

00:55:56,110 --> 00:56:01,210
that you actually need to provide pass

00:55:59,560 --> 00:56:03,340
them in happy times and once you've

00:56:01,210 --> 00:56:05,740
passed them in you've got that then you

00:56:03,340 --> 00:56:07,750
know you can do deployment which case

00:56:05,740 --> 00:56:10,060
you now need to remove so just to go

00:56:07,750 --> 00:56:12,880
back there's the bars line they need to

00:56:10,060 --> 00:56:15,250
remove that and deploy I find this

00:56:12,880 --> 00:56:17,080
irritating and I don't

00:56:15,250 --> 00:56:18,820
it's like amongst all the beautiful

00:56:17,080 --> 00:56:22,660
things we have this this story to me

00:56:18,820 --> 00:56:24,580
doesn't make as much sense and then in

00:56:22,660 --> 00:56:26,890
Bosch bootstrap it's the same flags but

00:56:24,580 --> 00:56:29,710
you use the Bata creative with with

00:56:26,890 --> 00:56:31,660
whichever CPI file and then it's just

00:56:29,710 --> 00:56:34,480
that it's really nice like it's if you

00:56:31,660 --> 00:56:35,830
learn to use Bosch one way that pattern

00:56:34,480 --> 00:56:37,870
rolls out and that's part of why I think

00:56:35,830 --> 00:56:39,810
you know getting rid of favorite up

00:56:37,870 --> 00:56:42,640
story is such a great idea because

00:56:39,810 --> 00:56:45,880
favorite up doesn't teach you anything

00:56:42,640 --> 00:56:46,570
whereas Bosch create end with VirtualBox

00:56:45,880 --> 00:56:48,340
epi

00:56:46,570 --> 00:56:50,230
you're now starting to learn the pattern

00:56:48,340 --> 00:56:52,840
that will do you well with every other

00:56:50,230 --> 00:56:55,420
CPU does this yet support or will

00:56:52,840 --> 00:56:56,560
support the like say you wanted to do a

00:56:55,420 --> 00:56:59,020
hybrid deployment

00:56:56,560 --> 00:57:03,240
across two IAS is like gasps you know

00:56:59,020 --> 00:57:05,920
AWS and Google compute is that a thing

00:57:03,240 --> 00:57:08,830
so create ants won't really help you

00:57:05,920 --> 00:57:11,110
with that because credence is really

00:57:08,830 --> 00:57:14,320
focused on a single director now we do

00:57:11,110 --> 00:57:16,300
have on a road map a plan for cluster

00:57:14,320 --> 00:57:18,130
director so you'll be running multiple

00:57:16,300 --> 00:57:21,370
copies of a director phoning at the same

00:57:18,130 --> 00:57:25,930
database now there is a feature called

00:57:21,370 --> 00:57:28,450
multi CPI that was introduced in a

00:57:25,930 --> 00:57:30,700
hidden way in a previous release of in a

00:57:28,450 --> 00:57:33,010
current bas-reliefs and then there will

00:57:30,700 --> 00:57:35,590
be a more formally announced in the next

00:57:33,010 --> 00:57:37,810
boss release and that's the multi CPI

00:57:35,590 --> 00:57:41,020
support such that you can configure a

00:57:37,810 --> 00:57:44,530
director to use multiple CPI's and

00:57:41,020 --> 00:57:47,560
really a CPI then maps to an AZ so your

00:57:44,530 --> 00:57:50,250
manifest not your stuff will go back

00:57:47,560 --> 00:57:53,070
into the boss deployment ribbon ah I

00:57:50,250 --> 00:57:57,160
mean technically boss deployment repo

00:57:53,070 --> 00:57:59,530
isn't well yes and no so there is

00:57:57,160 --> 00:58:01,330
there's a new config called CPI config

00:57:59,530 --> 00:58:03,940
that you would use you know boss update

00:58:01,330 --> 00:58:07,270
CPI config and you list out all of your

00:58:03,940 --> 00:58:09,460
CPI's so we will sit we'll have to see

00:58:07,270 --> 00:58:13,990
how that works out with the boss

00:58:09,460 --> 00:58:17,530
deployment probably work too well but

00:58:13,990 --> 00:58:21,340
we'll see use it as a plan for maybe

00:58:17,530 --> 00:58:24,190
this year for that cluster director

00:58:21,340 --> 00:58:26,830
feature uh hard to say I mean I

00:58:24,190 --> 00:58:28,690
definitely want it to be a you know to

00:58:26,830 --> 00:58:31,120
be out there we've been kind of slowly

00:58:28,690 --> 00:58:33,430
chewing off smaller pieces at a time I

00:58:31,120 --> 00:58:36,640
think are one of our next pieces is to

00:58:33,430 --> 00:58:38,680
expand the direct agent functionality to

00:58:36,640 --> 00:58:41,890
be able to support multiple math URLs

00:58:38,680 --> 00:58:43,630
once we have that then technically you

00:58:41,890 --> 00:58:46,570
would be able to deploy it already by

00:58:43,630 --> 00:58:48,160
just you know calling create and

00:58:46,570 --> 00:58:50,290
multiple times make sure that they point

00:58:48,160 --> 00:58:54,580
to the same database same blobstore and

00:58:50,290 --> 00:58:56,440
then then you set really but you know I

00:58:54,580 --> 00:58:58,810
won't promise you that by the end of the

00:58:56,440 --> 00:59:00,790
year we'll say this is the production

00:58:58,810 --> 00:59:02,260
cerebral you should be running this show

00:59:00,790 --> 00:59:04,339
before tomorrow and I can let's get

00:59:02,260 --> 00:59:08,670
there got it

00:59:04,339 --> 00:59:12,690
no sir this want this story to make

00:59:08,670 --> 00:59:14,670
sense right so Bosch crate and fields

00:59:12,690 --> 00:59:16,349
everything a similar and it will fail

00:59:14,670 --> 00:59:19,140
hard if you miss a variable but Bosch

00:59:16,349 --> 00:59:22,670
deploy does not fail just to speak to

00:59:19,140 --> 00:59:27,720
that you know the the goal is to not

00:59:22,670 --> 00:59:30,410
kind of a make worst or as you know as

00:59:27,720 --> 00:59:32,910
as dominant as it is right now perhaps

00:59:30,410 --> 00:59:35,640
just because we have much better

00:59:32,910 --> 00:59:38,160
integration with screwed up for real

00:59:35,640 --> 00:59:39,960
full deployments because you know at the

00:59:38,160 --> 00:59:41,880
Korean create and time there isn't a

00:59:39,960 --> 00:59:43,349
credible you can talk to it sir you

00:59:41,880 --> 00:59:48,299
can't really save the credentials

00:59:43,349 --> 00:59:50,700
anywhere but you know during a board

00:59:48,299 --> 00:59:53,609
deploy we can say that hey there is

00:59:50,700 --> 00:59:55,829
credits you know you should be able to

00:59:53,609 --> 00:59:59,910
ask read up right ask the boss do you

00:59:55,829 --> 01:00:01,079
have create a config server we could we

00:59:59,910 --> 01:00:04,230
can tell the resolutions

01:00:01,079 --> 01:00:07,559
I just want to this is my experience I

01:00:04,230 --> 01:00:10,140
mean this this happened again this is

01:00:07,559 --> 01:00:11,849
the era I'm looking at whilst this is

01:00:10,140 --> 01:00:13,470
this is my generated config and it's got

01:00:11,849 --> 01:00:15,660
all the variables in it's like oh that's

01:00:13,470 --> 01:00:17,760
right I need to you know this is it's

01:00:15,660 --> 01:00:19,680
just another very nice experience and so

01:00:17,760 --> 01:00:22,410
without trying to say what the solution

01:00:19,680 --> 01:00:25,500
is to never let variables get

01:00:22,410 --> 01:00:29,520
unpopulated on the way through as a

01:00:25,500 --> 01:00:32,910
successful deploy would be one flower I

01:00:29,520 --> 01:00:38,549
agree that it's not perhaps an ideal

01:00:32,910 --> 01:00:41,430
situation it's awful all right there you

01:00:38,549 --> 01:00:42,869
go so we talked about that one of the

01:00:41,430 --> 01:00:44,910
things I've been looking at is trying to

01:00:42,869 --> 01:00:47,700
get to this default config pattern that

01:00:44,910 --> 01:00:51,540
Demetri educated beyond mostly through

01:00:47,700 --> 01:00:53,069
taxes to the CF deployment repo and yeah

01:00:51,540 --> 01:00:55,170
there's the URL which I pasted it into

01:00:53,069 --> 01:00:56,390
the channel for learning about the code

01:00:55,170 --> 01:00:58,440
patch stuff

01:00:56,390 --> 01:01:00,450
I've been playing all those stuff for a

01:00:58,440 --> 01:01:01,799
month and it's pretty lovely so it's

01:01:00,450 --> 01:01:05,220
cool bedroom by the way should say

01:01:01,799 --> 01:01:11,609
instance groups singular well instances

01:01:05,220 --> 01:01:15,470
should be simpler as my math teacher

01:01:11,609 --> 01:01:15,470
used to say that's exactly what it says

01:01:15,680 --> 01:01:23,400
you never make mistakes

01:01:18,680 --> 01:01:25,980
great yeah thanks thanks for this I

01:01:23,400 --> 01:01:28,320
think I think we should do the next time

01:01:25,980 --> 01:01:31,470
you're in the right time zone maybe we

01:01:28,320 --> 01:01:33,300
can give you more time for this that was

01:01:31,470 --> 01:01:34,830
fine but you give him the diamond and to

01:01:33,300 --> 01:01:37,140
meet you just talked about all this it

01:01:34,830 --> 01:01:45,570
was really just a colorful view anyway

01:01:37,140 --> 01:01:48,930
sir happiness no education material here

01:01:45,570 --> 01:01:52,130
for four more people that's good and

01:01:48,930 --> 01:01:55,260
then one thing before I want to mention

01:01:52,130 --> 01:01:59,310
Dimitri didn't mention this but this

01:01:55,260 --> 01:02:02,520
multi CPI stuff is pretty cool and we

01:01:59,310 --> 01:02:06,780
should be we should be you know up front

01:02:02,520 --> 01:02:17,130
and say and credit Swiss cup they are

01:02:06,780 --> 01:02:20,040
the one that actually Thank You Wayne

01:02:17,130 --> 01:02:22,170
all right so this is it for for this

01:02:20,040 --> 01:02:25,680
time we are running just a little bit

01:02:22,170 --> 01:02:28,050
over but we started at 12:05 thank you

01:02:25,680 --> 01:02:30,180
everybody for presenting we'll have one

01:02:28,050 --> 01:02:32,220
more call next month and then it'll be

01:02:30,180 --> 01:02:34,530
summit thank you those things are

01:02:32,220 --> 01:02:41,540
recorded by the way when guarantee is

01:02:34,530 --> 01:02:41,540

YouTube URL: https://www.youtube.com/watch?v=qbXHgydWaTE


