Title: Cloud Foundry Community Advisory Board [Mar 2017]
Publication date: 2017-05-17
Playlist: Community Advisory Board
Description: 
	Video from the monthly Cloud Foundry Community Advisory Board (CAB) meeting. Learn more at https://www.cloudfoundry.org/. 

Agenda:
Calendar
- Now every 3rd Wed of the month.

Tooling for the call
- See Zoom info above in and the #CAB Slack channel

CFF update
- CF summit

Projects updates
- CAPI
- Diego
- BOSH
- CF Extensions

Community Projects
- Mantra
- Dingo PostgreSQL
 
Prepared questions from the community
Captions: 
	00:00:13,580 --> 00:00:20,760
all right we have two more minutes and

00:00:17,840 --> 00:00:30,900
again if you are pivotal I am in

00:00:20,760 --> 00:00:35,700
Scorpius so oh this light scalp is

00:00:30,900 --> 00:00:41,969
amazing dr. Nick dr. Nick give you life

00:00:35,700 --> 00:00:45,239
to web said I kept on thinking lies why

00:00:41,969 --> 00:00:47,629
would I call something lies but I guess

00:00:45,239 --> 00:00:51,809
it makes sense now now you've got the it

00:00:47,629 --> 00:00:53,820
yes oh it's a good idea to stay away at

00:00:51,809 --> 00:00:57,719
these two meters of dr. Nick

00:00:53,820 --> 00:01:06,630
for the moment because he gives us all

00:00:57,719 --> 00:01:10,500
life that's right remotely Dublin oh

00:01:06,630 --> 00:01:14,100
thanks there's a public right yeah it is

00:01:10,500 --> 00:01:17,430
public yeah it's actually being recorded

00:01:14,100 --> 00:01:22,920
as well just be careful it's not a

00:01:17,430 --> 00:01:25,170
public beach it's just public it's

00:01:22,920 --> 00:01:29,850
community and actually we just discussed

00:01:25,170 --> 00:01:31,610
that the calls are being recorded and

00:01:29,850 --> 00:01:34,200
puts it on YouTube

00:01:31,610 --> 00:01:36,060
so you do have to be careful what you

00:01:34,200 --> 00:01:38,610
say if you don't if you're worried about

00:01:36,060 --> 00:01:40,740
you know things in the public record my

00:01:38,610 --> 00:01:44,220
words yeah exactly I don't think that's

00:01:40,740 --> 00:01:48,370
an issue for you it's more for me Wayne

00:01:44,220 --> 00:01:48,370
[Laughter]

00:01:48,890 --> 00:01:55,619
all right we got one more minute and it

00:01:52,950 --> 00:01:58,759
looks like we have a fair amount of

00:01:55,619 --> 00:02:09,289
people so this is this is excellent

00:01:58,759 --> 00:02:10,879
right now I think it's it's over 25 okay

00:02:09,289 --> 00:02:13,370
and we have some questions as well so

00:02:10,879 --> 00:02:14,930
this is good since we have a lot of

00:02:13,370 --> 00:02:18,620
people maybe we want wait the five

00:02:14,930 --> 00:02:23,870
minutes that we usually wait just give

00:02:18,620 --> 00:02:26,540
everybody one more minute a we have Yui

00:02:23,870 --> 00:02:38,750
here as well so this is good

00:02:26,540 --> 00:02:40,400
so I'll start in about 45 seconds and if

00:02:38,750 --> 00:02:55,400
you have questions and forget to demo in

00:02:40,400 --> 00:02:57,079
a stack I see a couple already I just

00:02:55,400 --> 00:02:59,359
just wanted to say hi

00:02:57,079 --> 00:03:02,419
it's been given from France she stack

00:02:59,359 --> 00:03:04,720
for the first time attending the cab all

00:03:02,419 --> 00:03:10,959
right sorry glad to be among you guys

00:03:04,720 --> 00:03:13,579
hello Nancy

00:03:10,959 --> 00:03:17,169
you'll see some French here and there

00:03:13,579 --> 00:03:20,479
I'm just practicing my French all right

00:03:17,169 --> 00:03:22,940
okay so it's a no one will get started I

00:03:20,479 --> 00:03:25,040
think I mean this is this is wonderful

00:03:22,940 --> 00:03:27,440
we have a great turnout today

00:03:25,040 --> 00:03:30,190
and we'll just get started

00:03:27,440 --> 00:03:33,099
I think the first item on the agenda

00:03:30,190 --> 00:03:40,190
since we have quite a bit of things is

00:03:33,099 --> 00:03:42,169
something and it working it's working

00:03:40,190 --> 00:03:44,030
out well so I don't see any objection so

00:03:42,169 --> 00:03:46,489
that's gonna be the way it is the other

00:03:44,030 --> 00:03:49,579
thing I mentioned before we officially

00:03:46,489 --> 00:03:54,260
started is that now the calls are being

00:03:49,579 --> 00:03:58,669
recorded and Wayne is helping move them

00:03:54,260 --> 00:04:01,010
to YouTube so if you go to youtube kanji

00:03:58,669 --> 00:04:05,180
channel you'll see the last call so this

00:04:01,010 --> 00:04:07,699
call will also be on YouTube so this

00:04:05,180 --> 00:04:10,759
means you may want to be careful what

00:04:07,699 --> 00:04:12,169
you say if you care about you know the

00:04:10,759 --> 00:04:16,609
fact that there's a permanent record

00:04:12,169 --> 00:04:19,279
right it's as I mentioned I'm singing

00:04:16,609 --> 00:04:20,750
and dancing last time is immortalized

00:04:19,279 --> 00:04:22,670
all right exactly

00:04:20,750 --> 00:04:24,650
and and I

00:04:22,670 --> 00:04:26,420
you see for myself because I've said

00:04:24,650 --> 00:04:28,280
some things maybe I should probably be

00:04:26,420 --> 00:04:29,960
careful about and of course you

00:04:28,280 --> 00:04:32,840
represent your company so what you say

00:04:29,960 --> 00:04:34,760
also you know representation it's a no

00:04:32,840 --> 00:04:35,660
record let's put it this way you know

00:04:34,760 --> 00:04:40,760
what to do

00:04:35,660 --> 00:04:42,350
so with that said let's let's get oh one

00:04:40,760 --> 00:04:44,690
more thing I want to say too before we

00:04:42,350 --> 00:04:47,540
start is that we now have quite a bit of

00:04:44,690 --> 00:04:49,040
presentation so I said this in the past

00:04:47,540 --> 00:04:52,430
that we're listening for people to

00:04:49,040 --> 00:04:54,850
present and you know stocking away and

00:04:52,430 --> 00:04:57,050
basically seems to have like an

00:04:54,850 --> 00:04:59,600
unlimited number of things that they can

00:04:57,050 --> 00:05:01,070
talk about which is fantastic but we

00:04:59,600 --> 00:05:04,370
also want to make sure other people get

00:05:01,070 --> 00:05:07,970
a chance so right now for next time we

00:05:04,370 --> 00:05:10,310
have two presentations from pivotal

00:05:07,970 --> 00:05:12,800
activate and and this is very exciting

00:05:10,310 --> 00:05:16,640
so we'll see how we can either work out

00:05:12,800 --> 00:05:19,640
those two plus one more or we'll figure

00:05:16,640 --> 00:05:21,530
it out you know of course this this week

00:05:19,640 --> 00:05:24,220
we have a presentation from our tool so

00:05:21,530 --> 00:05:27,230
other companies if you have presentation

00:05:24,220 --> 00:05:28,820
just ping me or put it on the stock

00:05:27,230 --> 00:05:32,540
channel and then we'll figure out a way

00:05:28,820 --> 00:05:36,140
to schedule we're always happy to be

00:05:32,540 --> 00:05:40,040
your plus I know I'm super excited about

00:05:36,140 --> 00:05:41,990
this all right so we'll get started so

00:05:40,040 --> 00:05:45,350
first thing is cff update I don't know

00:05:41,990 --> 00:05:50,420
if chip or anybody from the hardy

00:05:45,350 --> 00:05:52,820
foundation on the call you might want to

00:05:50,420 --> 00:05:54,800
unmute yourself I think I'm not sure it

00:05:52,820 --> 00:06:01,400
Meucci automatically but interesting

00:05:54,800 --> 00:06:04,280
case I guess that I'll mention a couple

00:06:01,400 --> 00:06:07,250
things that I know since I'm part of the

00:06:04,280 --> 00:06:11,360
committee putting together the program

00:06:07,250 --> 00:06:14,300
for this summit I can tell you that

00:06:11,360 --> 00:06:18,230
there is over 200 submissions I believe

00:06:14,300 --> 00:06:20,870
because I am reviewing 107 and I know

00:06:18,230 --> 00:06:22,970
there's more so I can't speak more

00:06:20,870 --> 00:06:25,910
detail about the submissions but this is

00:06:22,970 --> 00:06:27,440
very very good I mean it's it's you know

00:06:25,910 --> 00:06:31,280
pretty much the past few days that's all

00:06:27,440 --> 00:06:33,650
I've been doing Ken aside but that's

00:06:31,280 --> 00:06:35,860
that's the fact and and what's what's

00:06:33,650 --> 00:06:37,659
interesting is the the VAR

00:06:35,860 --> 00:06:40,840
different submission so this is good so

00:06:37,659 --> 00:06:44,590
the program should be very exciting but

00:06:40,840 --> 00:06:46,810
with this on it I don't have anything

00:06:44,590 --> 00:06:50,229
else to say you know except that you

00:06:46,810 --> 00:06:51,520
know if you are a contributor obviously

00:06:50,229 --> 00:06:54,610
if you're joining this reporter your

00:06:51,520 --> 00:06:57,490
contributor you can register for free as

00:06:54,610 --> 00:07:00,099
in before ping me and I'll send you the

00:06:57,490 --> 00:07:02,319
code I think they've already posted it

00:07:00,099 --> 00:07:05,770
so if you go back in in the history of

00:07:02,319 --> 00:07:07,270
the cab channel you'll see that so there

00:07:05,770 --> 00:07:10,689
is no excuse obviously you have to

00:07:07,270 --> 00:07:12,159
travel here but and even Gration has to

00:07:10,689 --> 00:07:16,449
let you into it so sorry about that

00:07:12,159 --> 00:07:19,240
haha otherwise you know join us any

00:07:16,449 --> 00:07:23,199
comment from anybody from cff or wants

00:07:19,240 --> 00:07:29,229
to add something no no no I know it's on

00:07:23,199 --> 00:07:31,599
YouTube so additionally I believe there

00:07:29,229 --> 00:07:35,379
was a track opened on Cloud Foundry

00:07:31,599 --> 00:07:40,690
force openstax on that as well oh yeah

00:07:35,379 --> 00:07:43,569
yeah so you can submit yourself there I

00:07:40,690 --> 00:07:46,240
think I think generally again I can't

00:07:43,569 --> 00:07:49,509
speak about the details of the

00:07:46,240 --> 00:07:51,849
submissions obviously but you know there

00:07:49,509 --> 00:07:53,680
is a wide variety of things so it will

00:07:51,849 --> 00:07:58,120
be a very exciting summit I think maybe

00:07:53,680 --> 00:08:02,430
the best okay so unless they're in you

00:07:58,120 --> 00:08:05,610
comment let's let's move to the projects

00:08:02,430 --> 00:08:09,669
Michael did you want to say something

00:08:05,610 --> 00:08:10,300
Franco you just show up very big on the

00:08:09,669 --> 00:08:19,120
screen here

00:08:10,300 --> 00:08:22,270
that's why yes that's probably why I'm

00:08:19,120 --> 00:08:26,979
seeing people all right oh I can see

00:08:22,270 --> 00:08:31,870
everybody okay so the other thing we try

00:08:26,979 --> 00:08:35,320
to do maybe in 15 minutes is to get

00:08:31,870 --> 00:08:39,130
project highlights so the sort of the

00:08:35,320 --> 00:08:40,360
core projects we have Erik here from

00:08:39,130 --> 00:08:42,659
zero so I don't know if you want to

00:08:40,360 --> 00:08:42,659
mention

00:08:45,750 --> 00:08:49,390
let's see past month on Diego we've been

00:08:48,819 --> 00:08:53,350
continued

00:08:49,390 --> 00:08:55,810
with various aspects of work in

00:08:53,350 --> 00:08:59,430
extracting ourselves from having counsel

00:08:55,810 --> 00:09:01,990
as a dependency so we're pretty far on

00:08:59,430 --> 00:09:04,600
running route emitters locally on the

00:09:01,990 --> 00:09:08,020
cells to prevent them from having well a

00:09:04,600 --> 00:09:09,610
lock that they will then console they

00:09:08,020 --> 00:09:10,930
we're not quite ready to declare that

00:09:09,610 --> 00:09:12,460
non experimental yet we're getting a

00:09:10,930 --> 00:09:15,940
little more back from production

00:09:12,460 --> 00:09:17,470
environments at scale and then there's

00:09:15,940 --> 00:09:19,570
still more experimental works and we

00:09:17,470 --> 00:09:21,490
send the other component locks in

00:09:19,570 --> 00:09:22,870
something that's and five the diego

00:09:21,490 --> 00:09:27,100
databases so that's not quite ready to

00:09:22,870 --> 00:09:29,470
go yet and let's see we've been doing

00:09:27,100 --> 00:09:31,450
some work to help us integrate with the

00:09:29,470 --> 00:09:33,670
garuda fest project out of london which

00:09:31,450 --> 00:09:38,770
is going to be the new component that

00:09:33,670 --> 00:09:41,440
manages the all of the image layers for

00:09:38,770 --> 00:09:45,400
containers on the cell for placing

00:09:41,440 --> 00:09:50,620
second toward and run see so that's nice

00:09:45,400 --> 00:09:52,540
to see that progressing and we've also

00:09:50,620 --> 00:09:55,180
been integrating against the new law

00:09:52,540 --> 00:09:58,630
aggregator api with their d RPC

00:09:55,180 --> 00:10:01,560
interface again that's something to opt

00:09:58,630 --> 00:10:03,880
into you and I don't think they're

00:10:01,560 --> 00:10:06,070
they've fully stabilized on their API

00:10:03,880 --> 00:10:09,820
yet so that might not be ready to go yet

00:10:06,070 --> 00:10:12,430
but you can at least I think app logs

00:10:09,820 --> 00:10:16,570
and container metrics they're not bin

00:10:12,430 --> 00:10:18,580
basis and then we have a track to do a

00:10:16,570 --> 00:10:24,280
pass to the other Diego components sees

00:10:18,580 --> 00:10:27,670
start using that new API okay very

00:10:24,280 --> 00:10:29,410
exciting so any question for Diego or I

00:10:27,670 --> 00:10:36,640
guess some of the things that characters

00:10:29,410 --> 00:10:40,150
mention here no okay so one one order

00:10:36,640 --> 00:10:42,910
I guess one another project two core

00:10:40,150 --> 00:10:46,510
project is obviously Bosh and I know

00:10:42,910 --> 00:10:48,640
Dimitri drawing and he actually will be

00:10:46,510 --> 00:10:50,920
one of the ones presenting next time

00:10:48,640 --> 00:10:54,340
believe it or not I figured out how to

00:10:50,920 --> 00:10:56,050
pay attention to present so what I know

00:10:54,340 --> 00:10:59,920
I know

00:10:56,050 --> 00:11:02,260
you can ask them so make Jesus your

00:10:59,920 --> 00:11:09,050
first public performance

00:11:02,260 --> 00:11:16,670
so give us your hand I know so what's

00:11:09,050 --> 00:11:19,160
been going on in posh ah let's see we

00:11:16,670 --> 00:11:24,170
are continuing to work on config server

00:11:19,160 --> 00:11:26,710
the integration that I believe is almost

00:11:24,170 --> 00:11:31,100
there believed then at some point

00:11:26,710 --> 00:11:33,500
deployed cm deployment with with proper

00:11:31,100 --> 00:11:36,350
crab integration instead of using the

00:11:33,500 --> 00:11:38,960
sea life functionality that's really

00:11:36,350 --> 00:11:44,870
there mostly for the temporary

00:11:38,960 --> 00:11:50,090
workaround so credible integration will

00:11:44,870 --> 00:11:53,450
be soon documented and announced I guess

00:11:50,090 --> 00:11:57,890
in a I believe in the next major

00:11:53,450 --> 00:11:59,660
brushless we've been also moving around

00:11:57,890 --> 00:12:02,330
at Cerritos so for those who haven't

00:11:59,660 --> 00:12:04,780
noticed the stem cell building staffer

00:12:02,330 --> 00:12:08,960
have moved into their separate repo and

00:12:04,780 --> 00:12:12,230
release notes for the stem cell versions

00:12:08,960 --> 00:12:13,850
will soon be moving there as well of

00:12:12,230 --> 00:12:16,760
course ba Shire walls continue to be

00:12:13,850 --> 00:12:22,100
updated but all of the stem store

00:12:16,760 --> 00:12:26,930
builder bits is now separated we just

00:12:22,100 --> 00:12:31,520
get caught for work to do the DNS stage

00:12:26,930 --> 00:12:36,080
two which will bring us closer to links

00:12:31,520 --> 00:12:38,690
plus DNS support and then that will

00:12:36,080 --> 00:12:41,570
hopefully unblocked unblock some with

00:12:38,690 --> 00:12:44,620
other teams who are trying to remove

00:12:41,570 --> 00:12:46,670
usage of console and some of the other

00:12:44,620 --> 00:12:55,300
technologies that they may be using in

00:12:46,670 --> 00:12:55,300
place let's see what else is interesting

00:12:57,430 --> 00:13:07,390
this kind of big topics after of course

00:13:01,820 --> 00:13:11,720
see like b2 is about to be announced

00:13:07,390 --> 00:13:14,960
we have believe one remaining storage to

00:13:11,720 --> 00:13:15,560
switch over wash acceptance test to use

00:13:14,960 --> 00:13:20,210
that

00:13:15,560 --> 00:13:24,850
a version of the CLI and lab looks like

00:13:20,210 --> 00:13:30,520
some emails to answer ensues well I

00:13:24,850 --> 00:13:32,810
I believe that's pretty much the

00:13:30,520 --> 00:13:36,290
overview there is of course variety of

00:13:32,810 --> 00:13:41,210
other tinier things like you know ASAP

00:13:36,290 --> 00:13:44,589
Marco proposing to add you know sets

00:13:41,210 --> 00:13:48,410
discs metadata CPI calls that the

00:13:44,589 --> 00:13:50,690
producing of work I as the resources it

00:13:48,410 --> 00:13:56,570
what easier and there's of course some

00:13:50,690 --> 00:13:59,270
work between IBM and a safety discussion

00:13:56,570 --> 00:14:01,100
to do certain feature called velocity

00:13:59,270 --> 00:14:07,330
load max maybe beings can talk about

00:14:01,100 --> 00:14:11,270
that I think for people that don't know

00:14:07,330 --> 00:14:17,680
in software we had a need for reloading

00:14:11,270 --> 00:14:20,450
OS versus just changing stem cells by

00:14:17,680 --> 00:14:22,550
creating VMs so that makes it a little

00:14:20,450 --> 00:14:28,420
bit better for software and and turns

00:14:22,550 --> 00:14:31,160
out that s AP has a similar need so

00:14:28,420 --> 00:14:33,320
Marcos Dmitri and I have been chatting

00:14:31,160 --> 00:14:36,860
about this so you might see this coming

00:14:33,320 --> 00:14:38,480
up as well so this is this is reloading

00:14:36,860 --> 00:14:42,430
it fresh out on the existing machine

00:14:38,480 --> 00:14:45,170
right so you keep the same VM and you

00:14:42,430 --> 00:14:47,210
just reload the operating system with

00:14:45,170 --> 00:14:48,680
the new stem cell right we should be hot

00:14:47,210 --> 00:14:52,940
patching after that if we're gonna get

00:14:48,680 --> 00:14:55,550
all the way back into another yeah it is

00:14:52,940 --> 00:14:58,040
controversial so obviously we'll put a

00:14:55,550 --> 00:15:02,030
proposal out so people can can comment

00:14:58,040 --> 00:15:03,920
but it's not that they're changing the

00:15:02,030 --> 00:15:05,839
order of the feature of the taking down

00:15:03,920 --> 00:15:08,420
so that we can get that you know so

00:15:05,839 --> 00:15:10,310
bringing up the new machine populate

00:15:08,420 --> 00:15:12,020
full of stuff and then taking the old

00:15:10,310 --> 00:15:13,850
machine down and switching dis server

00:15:12,020 --> 00:15:17,720
whenever that feature comes out that

00:15:13,850 --> 00:15:18,770
would be very exciting yeah and I'm not

00:15:17,720 --> 00:15:20,660
sure if you're joking or that but

00:15:18,770 --> 00:15:22,730
there's there it's a similar approach I

00:15:20,660 --> 00:15:24,440
mean part of it I'm sorry I heard from

00:15:22,730 --> 00:15:25,820
Tirana that that feature was being

00:15:24,440 --> 00:15:27,140
discussed in perhaps worked on sorry I

00:15:25,820 --> 00:15:29,300
don't sure if that's exactly the same

00:15:27,140 --> 00:15:36,950
that that that is

00:15:29,300 --> 00:15:40,420
it is similar to no but in some cases

00:15:36,950 --> 00:15:42,920
you know certainly for some cloud

00:15:40,420 --> 00:15:46,040
reloading the operating system is a

00:15:42,920 --> 00:15:49,550
future first-class feature and it is

00:15:46,040 --> 00:15:50,900
faster than creating a new VM and you

00:15:49,550 --> 00:15:55,100
know obviously cluding the image from

00:15:50,900 --> 00:15:57,350
that media so you would think it depends

00:15:55,100 --> 00:16:00,230
on which I are you used there's also

00:15:57,350 --> 00:16:01,580
other reasons as well but we'll we'll

00:16:00,230 --> 00:16:04,280
share that with everybody but if you're

00:16:01,580 --> 00:16:07,100
interested definitely reach out to to

00:16:04,280 --> 00:16:12,260
Dimitri or myself or local and and we

00:16:07,100 --> 00:16:14,600
can add you to the discussion okay so

00:16:12,260 --> 00:16:18,170
this is Bosh that's a good thing going

00:16:14,600 --> 00:16:21,110
on there I'll probably be joining them

00:16:18,170 --> 00:16:22,730
you know much also to to help out so

00:16:21,110 --> 00:16:29,140
this is exciting

00:16:22,730 --> 00:16:29,140
okay so maybe no questions you want to

00:16:33,130 --> 00:16:42,530
Kathy I don't know like I suppose we

00:16:39,680 --> 00:16:44,450
could highlight the work that we're

00:16:42,530 --> 00:16:47,690
doing to eliminate a number of the

00:16:44,450 --> 00:16:48,170
bridge components in combination with

00:16:47,690 --> 00:16:52,550
Diego

00:16:48,170 --> 00:16:58,420
so that is progressing along I think in

00:16:52,550 --> 00:17:01,910
the probably CF release 255 were

00:16:58,420 --> 00:17:06,980
hopefully eliminating all the ones that

00:17:01,910 --> 00:17:09,620
we've targeted and so that secures that

00:17:06,980 --> 00:17:17,350
that communication from Cloud Controller

00:17:09,620 --> 00:17:23,780
to Diego that's a server for copy

00:17:17,350 --> 00:17:26,410
they're looking now at prioritizing the

00:17:23,780 --> 00:17:26,410
work to you

00:17:29,100 --> 00:17:37,840
tgd a the v3 related aggravators

00:17:33,790 --> 00:17:41,559
endpoints and working with the CLI team

00:17:37,840 --> 00:17:45,750
has 94 deciding on how to expose these

00:17:41,559 --> 00:17:51,390
building blocks of the v3 endpoints so

00:17:45,750 --> 00:17:58,480
I'm hopeful that by q2 this year and

00:17:51,390 --> 00:18:01,300
those will all be GA hey that's all the

00:17:58,480 --> 00:18:05,710
updates there there's a number of

00:18:01,300 --> 00:18:09,520
efforts across across all of the

00:18:05,710 --> 00:18:12,070
different projects to move ourselves

00:18:09,520 --> 00:18:16,450
away from console and xev

00:18:12,070 --> 00:18:18,520
so we do hope to eliminate our

00:18:16,450 --> 00:18:21,010
dependency and usage of console an

00:18:18,520 --> 00:18:26,559
entity across all over the coil and 10

00:18:21,010 --> 00:18:29,050
components yeah I mean I think this I've

00:18:26,559 --> 00:18:31,750
seen this since I was you know working

00:18:29,050 --> 00:18:34,480
here at pivotal for a few weeks and

00:18:31,750 --> 00:18:35,950
pretty much all the teams I guess I'm

00:18:34,480 --> 00:18:39,580
just echoing what you were just

00:18:35,950 --> 00:18:43,660
mentioned is they were all trying to do

00:18:39,580 --> 00:18:46,660
this big effort which I'll give a free

00:18:43,660 --> 00:18:50,050
plug for my friend Jules from IBM

00:18:46,660 --> 00:18:52,900
he did a nice little blog post on medium

00:18:50,050 --> 00:18:56,530
where he talked about write and try to

00:18:52,900 --> 00:19:00,010
just build complex stuff and in some

00:18:56,530 --> 00:19:03,340
ways that's the you know the wrath of of

00:19:00,010 --> 00:19:05,380
this you know this have this you shiny

00:19:03,340 --> 00:19:14,320
thing called HDD and console let's use

00:19:05,380 --> 00:19:16,840
it like regular apps using it like it

00:19:14,320 --> 00:19:19,600
Cloud Foundry check us out not to need

00:19:16,840 --> 00:19:22,090
console maybe he doesn't

00:19:19,600 --> 00:19:25,510
maybe console is not feed that's that's

00:19:22,090 --> 00:19:29,530
basically it's basically the rent yeah

00:19:25,510 --> 00:19:31,090
anyways the point here is that you know

00:19:29,530 --> 00:19:34,270
there's there's a big effort to remove

00:19:31,090 --> 00:19:38,350
it you know it doesn't mean that it's

00:19:34,270 --> 00:19:40,510
bad maybe it has very good applications

00:19:38,350 --> 00:19:42,670
in some cases but for

00:19:40,510 --> 00:19:47,290
our purposes it seems like it wasn't

00:19:42,670 --> 00:19:51,100
working out so okay I don't know if

00:19:47,290 --> 00:19:56,250
there are any question for for pretty

00:19:51,100 --> 00:19:56,250
much you know the the main call projects

00:19:56,670 --> 00:20:05,620
no the first question is oh yeah alright

00:20:04,990 --> 00:20:08,770
thank you

00:20:05,620 --> 00:20:11,110
so the first question I'm not sure who

00:20:08,770 --> 00:20:13,380
would it but I'll read it out so

00:20:11,110 --> 00:20:16,210
security is a great thing obviously

00:20:13,380 --> 00:20:18,820
however it is a lot of problems with

00:20:16,210 --> 00:20:20,830
migrating to this sometimes when there's

00:20:18,820 --> 00:20:23,290
a new secure environment so what's the

00:20:20,830 --> 00:20:28,690
plan for easing the pain of mutual

00:20:23,290 --> 00:20:31,360
mutual TLS of breakdance I don't know I

00:20:28,690 --> 00:20:36,940
mean I saw it leave it to Betty sent an

00:20:31,360 --> 00:20:42,610
email on GF dev where he discussed maybe

00:20:36,940 --> 00:20:44,410
some of that I guess you know it's like

00:20:42,610 --> 00:20:46,090
going to the airport I mean you have to

00:20:44,410 --> 00:20:48,880
go to a security image between and yes

00:20:46,090 --> 00:20:51,640
right so I'm not sure there's a there's

00:20:48,880 --> 00:20:52,900
a better way you're of the fact that if

00:20:51,640 --> 00:20:55,540
you have a long-running production

00:20:52,900 --> 00:20:57,820
environment and you're upgrading these

00:20:55,540 --> 00:20:59,920
things a lot of times there's like

00:20:57,820 --> 00:21:02,830
little gotchas that are not in the

00:20:59,920 --> 00:21:07,840
release notes for example like the new

00:21:02,830 --> 00:21:09,460
DNS entries for the b-cells the rep and

00:21:07,840 --> 00:21:11,110
stuff like that and the auctioneer like

00:21:09,460 --> 00:21:13,210
the you know oh gee by the way here's

00:21:11,110 --> 00:21:15,400
your certificates better be start at

00:21:13,210 --> 00:21:18,250
sell that service that's EF that

00:21:15,400 --> 00:21:21,040
internal not the old Diego auctioneer or

00:21:18,250 --> 00:21:22,870
via whatever there used to be and then

00:21:21,040 --> 00:21:26,470
suddenly your production cells are all

00:21:22,870 --> 00:21:28,450
drained on their live system because the

00:21:26,470 --> 00:21:30,400
auctioneer can't auction anything and

00:21:28,450 --> 00:21:32,950
it's like you know the elections are

00:21:30,400 --> 00:21:36,760
failing and stuff like that and then you

00:21:32,950 --> 00:21:40,030
turn white and your heart is like yeah

00:21:36,760 --> 00:21:42,370
yeah and then the logs are great for

00:21:40,030 --> 00:21:44,170
developers but the logs are so fake that

00:21:42,370 --> 00:21:46,570
like you have no idea what the root

00:21:44,170 --> 00:21:49,350
issue is you another eight hours to

00:21:46,570 --> 00:21:53,610
figure out oh it's because of that that

00:21:49,350 --> 00:21:55,620
point me yeah I wonder if

00:21:53,610 --> 00:21:58,410
this wouldn't be mitigated by more

00:21:55,620 --> 00:22:01,590
people testing because it feels like

00:21:58,410 --> 00:22:04,680
typical does a fair amount of the tests

00:22:01,590 --> 00:22:06,390
and then they release some a lot though

00:22:04,680 --> 00:22:08,610
the team's release and then people find

00:22:06,390 --> 00:22:12,540
a pain so if we all test it at the same

00:22:08,610 --> 00:22:14,070
time maybe would find I know on the

00:22:12,540 --> 00:22:17,280
Diego team we've actually been very

00:22:14,070 --> 00:22:21,390
careful to document those steps in the

00:22:17,280 --> 00:22:23,310
in the release documentation both the

00:22:21,390 --> 00:22:25,170
metadata that you need in those

00:22:23,310 --> 00:22:26,490
certificates there's a section on TOS

00:22:25,170 --> 00:22:30,180
configuration and there are separate

00:22:26,490 --> 00:22:31,560
documents on how to upgrade say the

00:22:30,180 --> 00:22:35,760
option here and the cell reps they have

00:22:31,560 --> 00:22:40,340
secure communication I kind of feel like

00:22:35,760 --> 00:22:42,600
this automation thing missing

00:22:40,340 --> 00:22:44,130
you shouldn't have to read release notes

00:22:42,600 --> 00:22:46,590
and do stuff to get to one manifest

00:22:44,130 --> 00:22:50,070
whenever that's what we're doing there I

00:22:46,590 --> 00:22:51,120
mean with the CF deployment ideas way to

00:22:50,070 --> 00:22:53,160
help and everything I mean hopefully

00:22:51,120 --> 00:22:58,410
this this whole most of this goes away

00:22:53,160 --> 00:23:00,660
soon yes I guess I feel like the - PD

00:22:58,410 --> 00:23:01,680
aim the aim should be when you go swarm

00:23:00,660 --> 00:23:04,170
leads to another

00:23:01,680 --> 00:23:05,820
that should be an automated process as

00:23:04,170 --> 00:23:08,160
much as watch the police automate the

00:23:05,820 --> 00:23:10,170
process yeah as a matter fact I'm glad

00:23:08,160 --> 00:23:12,210
you guys are mentioning this because and

00:23:10,170 --> 00:23:15,990
he's not here but I've confirmed with

00:23:12,210 --> 00:23:19,920
him multiple times David Sedaris who is

00:23:15,990 --> 00:23:21,600
the PM for CF deployment I've run into

00:23:19,920 --> 00:23:23,310
him multiple time and I've asked him hey

00:23:21,600 --> 00:23:25,050
do you want to present it is like not

00:23:23,310 --> 00:23:30,120
quite ready and the last time I saw him

00:23:25,050 --> 00:23:33,030
he said I might be ready but I know I

00:23:30,120 --> 00:23:36,780
know so so I will make sure I track him

00:23:33,030 --> 00:23:39,210
down yeah clearly this particular pain

00:23:36,780 --> 00:23:40,680
point this particular pain point is for

00:23:39,210 --> 00:23:42,840
long-running systems that were running

00:23:40,680 --> 00:23:46,260
cf release trying to migrate just yet

00:23:42,840 --> 00:23:49,500
deployment style between the release

00:23:46,260 --> 00:23:51,750
notes on CF releases release and where

00:23:49,500 --> 00:23:53,730
the other documentation errors not all

00:23:51,750 --> 00:23:55,590
together clearly so there's really a lot

00:23:53,730 --> 00:23:57,870
of people finding a lot of pain and

00:23:55,590 --> 00:24:00,720
asking a lot of health questions on

00:23:57,870 --> 00:24:02,280
those things because of that migration

00:24:00,720 --> 00:24:04,380
process specifically so it's not like

00:24:02,280 --> 00:24:07,020
migrating CF release to see a release

00:24:04,380 --> 00:24:09,240
like David but it's the whole paradigm

00:24:07,020 --> 00:24:11,040
shift into the C from C F release to C F

00:24:09,240 --> 00:24:17,059
deployment that's actually really

00:24:11,040 --> 00:24:19,440
painful one of the big milestones for

00:24:17,059 --> 00:24:22,380
the release integration team and

00:24:19,440 --> 00:24:25,980
Davidson any in particular is to migrate

00:24:22,380 --> 00:24:28,950
PWS from using CF release c CF

00:24:25,980 --> 00:24:30,809
deployment and we're hoping to get a lot

00:24:28,950 --> 00:24:34,320
of learnings from that on documentation

00:24:30,809 --> 00:24:38,070
our advantage I don't believe right now

00:24:34,320 --> 00:24:40,890
we would recommend switching over from

00:24:38,070 --> 00:24:43,140
CF release to CF deployment until all of

00:24:40,890 --> 00:24:46,980
that's really ironed out and we've got

00:24:43,140 --> 00:24:50,400
great processes around that also I know

00:24:46,980 --> 00:24:53,250
David studies trying to be a little more

00:24:50,400 --> 00:24:55,950
rigorous about asking teams to update

00:24:53,250 --> 00:24:59,070
their release notes before publishing

00:24:55,950 --> 00:25:01,260
any of the final releases so so we're

00:24:59,070 --> 00:25:04,500
hoping you know if you if you continue

00:25:01,260 --> 00:25:08,550
to see gaps there be sure to be loud

00:25:04,500 --> 00:25:10,710
about it and we'll try to get better for

00:25:08,550 --> 00:25:13,429
the the PM's and that push the button on

00:25:10,710 --> 00:25:15,840
the the cutting the github releases

00:25:13,429 --> 00:25:18,330
that's when github sends the emails out

00:25:15,840 --> 00:25:20,400
and I know it's easy

00:25:18,330 --> 00:25:22,710
I know it's my own pipelines and it's

00:25:20,400 --> 00:25:24,690
lazy yeah you put it you put a blank

00:25:22,710 --> 00:25:26,970
template in there that says hey fill all

00:25:24,690 --> 00:25:28,470
this apps and that's what gets good and

00:25:26,970 --> 00:25:32,700
then that's what gives out emails out to

00:25:28,470 --> 00:25:34,080
all the watches and then you've got yes

00:25:32,700 --> 00:25:36,059
I'll come back to this later when

00:25:34,080 --> 00:25:38,910
perhaps there's some content in it and I

00:25:36,059 --> 00:25:42,210
don't know I I think a solution might be

00:25:38,910 --> 00:25:43,950
you know drafts versus final release you

00:25:42,210 --> 00:25:45,330
know and and a human being changes it

00:25:43,950 --> 00:25:46,860
from a draft release to a final release

00:25:45,330 --> 00:25:49,530
when they put the notes in or something

00:25:46,860 --> 00:25:51,090
not sure yes that is the correct

00:25:49,530 --> 00:25:52,950
solution that's what we used on the

00:25:51,090 --> 00:25:54,900
Diego team we make a draft release and

00:25:52,950 --> 00:25:56,940
then I fill it in with the notes and

00:25:54,900 --> 00:25:59,610
publish it so you do that with the

00:25:56,940 --> 00:26:02,280
github resource on Congress yeah okay

00:25:59,610 --> 00:26:05,820
yeah that certainly the the email app

00:26:02,280 --> 00:26:08,550
aspect of github use is uh is my use

00:26:05,820 --> 00:26:10,290
case to finding out what's going on so

00:26:08,550 --> 00:26:12,420
that a little nugget right there that

00:26:10,290 --> 00:26:16,350
you just said about the CF deployment

00:26:12,420 --> 00:26:18,210
not being the migration from CF release

00:26:16,350 --> 00:26:20,490
to CF deployment probably not a good

00:26:18,210 --> 00:26:22,290
idea to try that yet that

00:26:20,490 --> 00:26:27,240
should be communicated a little broader

00:26:22,290 --> 00:26:28,710
because the default response from a lot

00:26:27,240 --> 00:26:30,630
of people is well why aren't you using

00:26:28,710 --> 00:26:32,130
CF deployed should you should just be

00:26:30,630 --> 00:26:35,370
using CF deployment and it's like oh

00:26:32,130 --> 00:26:37,260
hold on first of all what does he have

00:26:35,370 --> 00:26:38,550
deployment and why should I be using it

00:26:37,260 --> 00:26:40,020
I thought like this is a little

00:26:38,550 --> 00:26:41,730
confusing oh that's what it is

00:26:40,020 --> 00:26:43,650
oh and those kinds of things so like a

00:26:41,730 --> 00:26:45,870
lot of the default responses from people

00:26:43,650 --> 00:26:50,370
when you're getting help is you're using

00:26:45,870 --> 00:26:54,900
CF deployment right so I think for her

00:26:50,370 --> 00:26:57,300
new installs CF deployment works but

00:26:54,900 --> 00:26:59,970
appeared going from CF release to CF

00:26:57,300 --> 00:27:04,800
deployment well you still got a ways to

00:26:59,970 --> 00:27:08,360
like smooth out and document I talked to

00:27:04,800 --> 00:27:10,860
David about sending an oval around I

00:27:08,360 --> 00:27:13,590
think in general CF deployment is not

00:27:10,860 --> 00:27:16,590
yet intended to be g8 and they're

00:27:13,590 --> 00:27:20,010
getting it to the point where they have

00:27:16,590 --> 00:27:22,170
a more intentional release policy around

00:27:20,010 --> 00:27:23,490
it and documentation about upgrading

00:27:22,170 --> 00:27:26,130
between whatever they consider the

00:27:23,490 --> 00:27:29,370
person's identity so that you you can

00:27:26,130 --> 00:27:32,610
use it to rely on having a long running

00:27:29,370 --> 00:27:33,150
a stable AJ deployment of CF but it's

00:27:32,610 --> 00:27:37,230
not there yet

00:27:33,150 --> 00:27:40,559
yeah and as I mentioned I'm definitely

00:27:37,230 --> 00:27:42,600
gonna track David and he already

00:27:40,559 --> 00:27:45,090
accepted to present so it was more a

00:27:42,600 --> 00:27:46,950
matter of when and I think what the team

00:27:45,090 --> 00:27:49,260
is saying here that he wasn't quite

00:27:46,950 --> 00:27:51,510
ready I think that's sort of part of the

00:27:49,260 --> 00:27:53,910
reason he hasn't presented but hopefully

00:27:51,510 --> 00:27:54,330
next month we can steer a presentation

00:27:53,910 --> 00:27:58,080
from it

00:27:54,330 --> 00:27:59,690
hey I got students like it'd be good to

00:27:58,080 --> 00:28:03,240
just talk about

00:27:59,690 --> 00:28:10,770
Abel and the plan and put out timelines

00:28:03,240 --> 00:28:13,500
I can post I'm just earlier he's

00:28:10,770 --> 00:28:15,450
a perfectionist yeah it's probably also

00:28:13,500 --> 00:28:19,679
a good frame to always keep selling us

00:28:15,450 --> 00:28:21,150
on why this is also a good for us I have

00:28:19,679 --> 00:28:25,640
worked with David I've cleared within

00:28:21,150 --> 00:28:25,640
multiple time so common old admins

00:28:26,530 --> 00:28:31,970
this moving on to random invisible

00:28:29,390 --> 00:28:35,080
passwords is challenging cellular that's

00:28:31,970 --> 00:28:39,919
dandy handheld for the to the challenges

00:28:35,080 --> 00:28:41,630
okay so will feedback that and I guess

00:28:39,919 --> 00:28:43,429
an as they are near the question about

00:28:41,630 --> 00:28:46,970
the projects any mention a few things

00:28:43,429 --> 00:28:49,059
about CF extensions so one of the things

00:28:46,970 --> 00:28:54,080
that's been happening is the number of

00:28:49,059 --> 00:28:56,990
submissions to me for people that want

00:28:54,080 --> 00:28:58,580
to have their projects in CF extension

00:28:56,990 --> 00:29:01,970
that started increasing obviously

00:28:58,580 --> 00:29:04,070
sometimes projects I redirect them to

00:29:01,970 --> 00:29:06,980
community they're not looking for

00:29:04,070 --> 00:29:09,679
process or help and stuff like that so

00:29:06,980 --> 00:29:11,710
you'll see that so I would ask everybody

00:29:09,679 --> 00:29:15,140
else if you have a project that you are

00:29:11,710 --> 00:29:18,169
considering adding to extensions let me

00:29:15,140 --> 00:29:19,669
know the last extension called there was

00:29:18,169 --> 00:29:23,690
a lot of people joining except for you

00:29:19,669 --> 00:29:27,860
in myself so we kind of covered what was

00:29:23,690 --> 00:29:31,820
there and in the fact that you know in

00:29:27,860 --> 00:29:33,890
some ways you know what what projects do

00:29:31,820 --> 00:29:35,330
we accept and stuff like that so if you

00:29:33,890 --> 00:29:38,390
have opinions about this make sure to

00:29:35,330 --> 00:29:39,740
join subsequent calls the next goal I'm

00:29:38,390 --> 00:29:42,940
canceling because I'm gonna be on

00:29:39,740 --> 00:29:45,320
vacation but we'll have one after that

00:29:42,940 --> 00:29:46,970
there is a couple of really interesting

00:29:45,320 --> 00:29:49,040
projects that are that are coming down

00:29:46,970 --> 00:29:50,540
the pipeline so you don't make sure you

00:29:49,040 --> 00:29:53,179
join I can't really mention too much

00:29:50,540 --> 00:29:54,830
there but I think you know unicorn oil

00:29:53,179 --> 00:30:00,799
for instance there's a project coming up

00:29:54,830 --> 00:30:06,410
with that let's see if there are any

00:30:00,799 --> 00:30:08,660
questions on this all right so I want to

00:30:06,410 --> 00:30:11,450
give as much time to the two

00:30:08,660 --> 00:30:14,059
presentations as I mentioned I repeat

00:30:11,450 --> 00:30:16,730
again if you have a presentation in you

00:30:14,059 --> 00:30:18,760
haven't presented especially in your

00:30:16,730 --> 00:30:21,290
part of the community you want to

00:30:18,760 --> 00:30:22,790
discuss it let me know obviously as we

00:30:21,290 --> 00:30:28,010
start getting a lot of these I might

00:30:22,790 --> 00:30:29,929
have to to prune them so that we get you

00:30:28,010 --> 00:30:31,010
know maybe two presentations I would

00:30:29,929 --> 00:30:34,970
have the most impact to the community

00:30:31,010 --> 00:30:38,000
first and we're starting to have quite a

00:30:34,970 --> 00:30:40,429
bit so just let me know ping me and then

00:30:38,000 --> 00:30:45,799
we'll we'll discuss it so for

00:30:40,429 --> 00:30:49,549
we have two presentations one from Altos

00:30:45,799 --> 00:30:52,279
and one form stuck and Wayne will let

00:30:49,549 --> 00:30:57,679
dr. Nick go last since he probably will

00:30:52,279 --> 00:30:58,700
also finish the call well so let's first

00:30:57,679 --> 00:31:00,710
go with Altos

00:30:58,700 --> 00:31:04,730
I think alex is there he's gonna talk

00:31:00,710 --> 00:31:07,100
about project mentor so you can share

00:31:04,730 --> 00:31:09,769
your screen if you're presenting so if

00:31:07,100 --> 00:31:11,179
you have something like a demo or some

00:31:09,769 --> 00:31:13,909
slides or whatever it is that you're

00:31:11,179 --> 00:31:16,159
that you're presenting you can pretty

00:31:13,909 --> 00:31:18,889
much click on that share screen button

00:31:16,159 --> 00:31:21,230
at the end so let's give Alex about 10

00:31:18,889 --> 00:31:23,749
to 15 minutes and then we'll leave the

00:31:21,230 --> 00:31:28,669
rest of the time to dr. Nick so Alex

00:31:23,749 --> 00:31:33,619
take it we can hear what hello everyone

00:31:28,669 --> 00:31:38,389
so hope you hear me yeah nice to see you

00:31:33,619 --> 00:31:41,629
all here I was very glad to be invited

00:31:38,389 --> 00:31:46,789
to this call and I'm going to tell you

00:31:41,629 --> 00:31:51,619
about the tool to transform manifest

00:31:46,789 --> 00:31:54,379
that is called mantra so mantra stands

00:31:51,619 --> 00:31:59,450
for manifest transformation and it is

00:31:54,379 --> 00:32:05,619
used to is work with Bosch manifests the

00:31:59,450 --> 00:32:09,830
story began when we had manifest with

00:32:05,619 --> 00:32:16,129
5000 times which we needed to transform

00:32:09,830 --> 00:32:19,309
to use in course and I met a very

00:32:16,129 --> 00:32:23,600
interesting project by dr. unique that

00:32:19,309 --> 00:32:28,090
was called make me spiffy this project

00:32:23,600 --> 00:32:32,240
was able to split manifest in different

00:32:28,090 --> 00:32:39,169
parts in several sections and I liked

00:32:32,240 --> 00:32:41,419
the approach he had this project was was

00:32:39,169 --> 00:32:46,460
not enough for us for instance we needed

00:32:41,419 --> 00:32:50,950
to detect certificates to to grow the

00:32:46,460 --> 00:32:54,290
certificates to extract them and make

00:32:50,950 --> 00:32:57,240
more in

00:32:54,290 --> 00:33:02,610
transformation of manifest so the

00:32:57,240 --> 00:33:05,010
problem was that we were running we were

00:33:02,610 --> 00:33:07,470
working with manifest that was

00:33:05,010 --> 00:33:11,820
constantly changed that's why we needed

00:33:07,470 --> 00:33:17,270
some tool that ultimate transformation

00:33:11,820 --> 00:33:24,420
of this manifest and we created mantra

00:33:17,270 --> 00:33:32,400
it in the beginning it was the library

00:33:24,420 --> 00:33:36,510
in written in Ruby so now this is this

00:33:32,400 --> 00:33:42,480
is a gem it was transformed in a gem

00:33:36,510 --> 00:33:46,200
recently and to let you see what it does

00:33:42,480 --> 00:33:54,360
I will have several simple examples one

00:33:46,200 --> 00:33:59,730
of them will convert una fest of Bosch

00:33:54,360 --> 00:34:05,610
virtue manifest of a Bosch version to

00:33:59,730 --> 00:34:10,950
using using transform config where you

00:34:05,610 --> 00:34:14,420
have all the way you have a list of

00:34:10,950 --> 00:34:17,100
transforms so you can tell that I have

00:34:14,420 --> 00:34:22,230
section called jobs rename it to

00:34:17,100 --> 00:34:35,030
instance robes and so on and you can

00:34:22,230 --> 00:34:39,140
call mantra transform set manifest and

00:34:35,030 --> 00:34:42,450
transform config and it will make

00:34:39,140 --> 00:34:45,590
transforms for you that that are

00:34:42,450 --> 00:34:49,700
described in transform llamó file

00:34:45,590 --> 00:34:56,000
another thing you can do with mantra is

00:34:49,700 --> 00:34:56,000
for instance is to merge some values

00:34:57,700 --> 00:35:00,790
[Music]

00:35:08,390 --> 00:35:20,190
resist releases lists and these releases

00:35:15,390 --> 00:35:25,470
are numbers but you want you want to

00:35:20,190 --> 00:35:29,040
have all releases that start with CF to

00:35:25,470 --> 00:35:35,160
have Russian latest version so you can

00:35:29,040 --> 00:35:38,520
call the command that will that we will

00:35:35,160 --> 00:35:43,080
do this you set a setup manifest file

00:35:38,520 --> 00:35:47,540
and you you say that JSON that you want

00:35:43,080 --> 00:35:53,700
to merge is version equals latest and

00:35:47,540 --> 00:35:57,570
you said the scope a path to the release

00:35:53,700 --> 00:35:59,760
you want to update and it brings it

00:35:57,570 --> 00:36:03,780
updates all releases that start with CF

00:35:59,760 --> 00:36:11,520
so you can find more examples of using

00:36:03,780 --> 00:36:15,630
this tool in in the in examples folder

00:36:11,520 --> 00:36:19,110
in the repository and the test of the

00:36:15,630 --> 00:36:26,250
mantra is done in the way to use these

00:36:19,110 --> 00:36:29,970
files to use these files to run run

00:36:26,250 --> 00:36:38,120
tests so what you see in markdown file

00:36:29,970 --> 00:36:38,120
files are actually I actually made as

00:36:38,540 --> 00:36:45,560
actually run as a test so you can be

00:36:40,980 --> 00:36:56,510
sure that it that they come in to run so

00:36:45,560 --> 00:37:01,490
these tool this tool is it's kind of

00:36:56,510 --> 00:37:05,070
similar with Bourjois tool which has

00:37:01,490 --> 00:37:09,360
ability to modify manifest with ops

00:37:05,070 --> 00:37:12,300
files but we tend to have these tools in

00:37:09,360 --> 00:37:16,290
our pipelines as a swiss knife

00:37:12,300 --> 00:37:23,060
but the Swiss Army knife that allows us

00:37:16,290 --> 00:37:27,510
to make more flexible changes because

00:37:23,060 --> 00:37:29,990
because ops phenols in bosch - I might

00:37:27,510 --> 00:37:36,510
in a very clever way

00:37:29,990 --> 00:37:39,750
it used herbs RFC which stands for which

00:37:36,510 --> 00:37:43,290
describes how JSON is how llamó

00:37:39,750 --> 00:37:49,350
transformation can be made and mantra

00:37:43,290 --> 00:37:52,740
mmm is made phone for larger variety of

00:37:49,350 --> 00:37:56,970
tasks for instance it can it can be used

00:37:52,740 --> 00:38:01,620
to extra extract certificates and and so

00:37:56,970 --> 00:38:04,790
on so that's that's it for me if you

00:38:01,620 --> 00:38:04,790
have any questions

00:38:12,950 --> 00:38:23,400
cool it's Alex yeah sorry yeah let's see

00:38:19,530 --> 00:38:28,170
if there are any questions is that mp3 a

00:38:23,400 --> 00:38:31,200
pirated version of Beyonce template and

00:38:28,170 --> 00:38:32,460
mp3 yeah down the bottom left corner you

00:38:31,200 --> 00:38:43,800
know I don't speak Russian so I'm not

00:38:32,460 --> 00:38:45,570
sure what you're stealing no it's not if

00:38:43,800 --> 00:38:46,710
not it's not it's not that I think I

00:38:45,570 --> 00:38:53,070
think it's something else I don't speak

00:38:46,710 --> 00:38:56,430
questioning okay

00:38:53,070 --> 00:39:02,250
okay I see I see I see what you mean so

00:38:56,430 --> 00:39:08,700
it is taken from official site yes it's

00:39:02,250 --> 00:39:13,080
it is not stole stolen so III enjoyed

00:39:08,700 --> 00:39:16,560
this joke yeah this site is not

00:39:13,080 --> 00:39:25,890
accessible from us so it wouldn't help

00:39:16,560 --> 00:39:27,630
you but here it has this talking

00:39:25,890 --> 00:39:30,330
just looking around the substances eyes

00:39:27,630 --> 00:39:36,440
and yeah actually

00:39:30,330 --> 00:39:41,250
actually this is audiobook of which oak

00:39:36,440 --> 00:39:48,900
which I recommend you to to do it if you

00:39:41,250 --> 00:39:52,980
like or fantasy and any any other

00:39:48,900 --> 00:39:55,700
questions for for Alex that has nothing

00:39:52,980 --> 00:39:55,700
to do with anything

00:39:56,090 --> 00:40:02,960
alright cool so are you able to easily

00:39:59,940 --> 00:40:10,290
add in the migrated migrated from

00:40:02,960 --> 00:40:13,290
stanzas is that part of the you know I'm

00:40:10,290 --> 00:40:14,910
asking so for the Bosch manifest v1 to

00:40:13,290 --> 00:40:16,200
be to switch you're probably also gonna

00:40:14,910 --> 00:40:19,110
if it's a live environment you're gonna

00:40:16,200 --> 00:40:21,240
want to add in the migrated from stanzas

00:40:19,110 --> 00:40:23,010
for you know like do we do you have to

00:40:21,240 --> 00:40:24,210
go manually add those in or there's one

00:40:23,010 --> 00:40:26,910
of the hooks that you gotta have the

00:40:24,210 --> 00:40:31,020
manifest transformation a lot of doing

00:40:26,910 --> 00:40:35,370
that easily yeah so this is a thing that

00:40:31,020 --> 00:40:39,870
is mmm is used to create to extract all

00:40:35,370 --> 00:40:44,820
config for instance from from manifest

00:40:39,870 --> 00:40:48,870
of Russian one so and that does the the

00:40:44,820 --> 00:40:56,220
main that was the main the main task for

00:40:48,870 --> 00:41:00,600
this when it started it okay sweet so

00:40:56,220 --> 00:41:04,050
again this is on Alex's github and if

00:41:00,600 --> 00:41:08,970
you search for his name and intra finish

00:41:04,050 --> 00:41:16,050
its work okay so now we get to here why

00:41:08,970 --> 00:41:18,600
a dingo I have no I have no answers to

00:41:16,050 --> 00:41:20,400
that that is all highly private internal

00:41:18,600 --> 00:41:22,340
information join stock on when you get

00:41:20,400 --> 00:41:26,640
fun at what happened with the dingo know

00:41:22,340 --> 00:41:28,910
this is a Postgres solution sort of you

00:41:26,640 --> 00:41:33,960
know batteries included Bosch based

00:41:28,910 --> 00:41:35,640
service broker and there's a dedicated

00:41:33,960 --> 00:41:39,150
all just so we can keep all the repos

00:41:35,640 --> 00:41:39,780
together there's a primary release that

00:41:39,150 --> 00:41:42,360
you can

00:41:39,780 --> 00:41:44,490
conserve start with and there's a

00:41:42,360 --> 00:41:47,010
question of repose that represents of a

00:41:44,490 --> 00:41:48,840
next version so if you ever want can you

00:41:47,010 --> 00:41:52,170
sort of walk through the code just let

00:41:48,840 --> 00:41:54,090
me know and we'll do that the core idea

00:41:52,170 --> 00:41:56,160
is you know having worked on mini client

00:41:54,090 --> 00:41:59,880
projects you have huge ones

00:41:56,160 --> 00:42:01,590
GE downwards and you know you just get

00:41:59,880 --> 00:42:04,260
this this feeling that the service

00:42:01,590 --> 00:42:06,180
brokers are trivial that you know how

00:42:04,260 --> 00:42:09,660
hard is it to run Postgres or or

00:42:06,180 --> 00:42:11,790
whatever and and you know the service

00:42:09,660 --> 00:42:13,800
broker API isn't complex so we don't

00:42:11,790 --> 00:42:16,470
really even five years later that really

00:42:13,800 --> 00:42:18,420
expose much options of functionality you

00:42:16,470 --> 00:42:21,720
know there's no backup and restore hooks

00:42:18,420 --> 00:42:23,460
or anything and and and really the

00:42:21,720 --> 00:42:25,710
service brokers you see pretty much take

00:42:23,460 --> 00:42:29,040
take that how hard can it be and make

00:42:25,710 --> 00:42:31,920
really trivial brokers the don't do lot

00:42:29,040 --> 00:42:33,420
and but it turns out really after after

00:42:31,920 --> 00:42:35,550
running the thing everything else is

00:42:33,420 --> 00:42:38,160
really hard and I I went looking for my

00:42:35,550 --> 00:42:38,460
favorite visualization of how hard could

00:42:38,160 --> 00:42:41,670
it be

00:42:38,460 --> 00:42:43,350
and it's the owl picture pretty much how

00:42:41,670 --> 00:42:45,420
most people approach building service

00:42:43,350 --> 00:42:46,830
brokers say how hard you draw some

00:42:45,420 --> 00:42:51,390
circles and then just draw the rest of

00:42:46,830 --> 00:42:53,160
the the now but it turns out you

00:42:51,390 --> 00:42:54,990
know if you really want to build service

00:42:53,160 --> 00:42:56,820
experiences that match that the

00:42:54,990 --> 00:42:59,300
complexity and the feature set and the

00:42:56,820 --> 00:43:03,120
horizontal scalability of Cloud Foundry

00:42:59,300 --> 00:43:04,410
it is hard and but also not just that

00:43:03,120 --> 00:43:06,150
there there are a lot of exciting ideas

00:43:04,410 --> 00:43:08,610
and features that you might want to add

00:43:06,150 --> 00:43:10,140
that just because the service broker API

00:43:08,610 --> 00:43:12,770
doesn't expose doesn't mean you

00:43:10,140 --> 00:43:16,410
shouldn't be offering them to end-users

00:43:12,770 --> 00:43:18,420
so part of this was me trying to vent

00:43:16,410 --> 00:43:20,490
and express ideas that that we never

00:43:18,420 --> 00:43:22,710
really shared and also this is the

00:43:20,490 --> 00:43:25,830
experiences that as a Postgres user that

00:43:22,710 --> 00:43:27,390
I needed so I'll share a couple of ideas

00:43:25,830 --> 00:43:29,100
so this is the assumptions when it comes

00:43:27,390 --> 00:43:31,680
to building service brokers that I bring

00:43:29,100 --> 00:43:33,420
from what I've seen was from two years

00:43:31,680 --> 00:43:35,460
at Engine Yard where we had two thousand

00:43:33,420 --> 00:43:37,680
my sequel databases for two this is two

00:43:35,460 --> 00:43:39,750
thousand businesses running and then

00:43:37,680 --> 00:43:42,030
through all the customers we've had and

00:43:39,750 --> 00:43:45,510
the tens of thousands of databases and

00:43:42,030 --> 00:43:48,030
apps or whatever and is that unlike

00:43:45,510 --> 00:43:50,120
unlike say Diego or the mobile runtime

00:43:48,030 --> 00:43:52,110
and kubernetes and those are stateless

00:43:50,120 --> 00:43:53,120
environments that database is always

00:43:52,110 --> 00:43:55,790
grow

00:43:53,120 --> 00:43:57,260
they're like small children and they

00:43:55,790 --> 00:43:59,930
want to take over the world and they

00:43:57,260 --> 00:44:01,930
want to take all your stuff and and you

00:43:59,930 --> 00:44:04,070
have to look after them differently

00:44:01,930 --> 00:44:05,480
2017 we have Google we have Stack

00:44:04,070 --> 00:44:07,610
Overflow we have good posts great

00:44:05,480 --> 00:44:09,590
documentation and YouTube videos and and

00:44:07,610 --> 00:44:11,420
for the most part you know devs can be

00:44:09,590 --> 00:44:13,100
self-sufficient and so we kind of want

00:44:11,420 --> 00:44:15,590
to rotate the responsibility of DBAs

00:44:13,100 --> 00:44:18,650
from looking after single databases to

00:44:15,590 --> 00:44:21,640
being the the overarching curator of

00:44:18,650 --> 00:44:24,530
hundreds and thousands of databases and

00:44:21,640 --> 00:44:27,710
just open your mind to what the goal is

00:44:24,530 --> 00:44:29,180
the Heroku Postgres team as a body of

00:44:27,710 --> 00:44:32,210
humans hasn't really grown substantially

00:44:29,180 --> 00:44:33,920
over the years but a few years ago they

00:44:32,210 --> 00:44:38,240
went over a million databases that they

00:44:33,920 --> 00:44:40,190
managed and so that as always they're an

00:44:38,240 --> 00:44:42,590
inspiration to our profession and

00:44:40,190 --> 00:44:45,380
certainly heavily excited by trying to

00:44:42,590 --> 00:44:47,750
achieve what they achieve shared

00:44:45,380 --> 00:44:49,400
infrastructure as much as the old DBAs

00:44:47,750 --> 00:44:51,020
of old or was one of dedicated machines

00:44:49,400 --> 00:44:52,460
because you get high performers here we

00:44:51,020 --> 00:44:54,470
all know that there are there are other

00:44:52,460 --> 00:44:56,960
goals that we have when it comes to

00:44:54,470 --> 00:44:59,510
platforms we're gonna go a tiny little

00:44:56,960 --> 00:45:01,130
bit of performance for four to be able

00:44:59,510 --> 00:45:03,100
to get lot more orchestration but we're

00:45:01,130 --> 00:45:05,300
still bringing in shared secure access

00:45:03,100 --> 00:45:06,470
which is another story we don't really

00:45:05,300 --> 00:45:10,130
have a good story around in Cloud

00:45:06,470 --> 00:45:12,020
Foundry you know what's DB's role and

00:45:10,130 --> 00:45:14,540
responsibility how do we let them how do

00:45:12,020 --> 00:45:16,340
we let them through plaid foundry to be

00:45:14,540 --> 00:45:17,540
able to do their job we sort of say well

00:45:16,340 --> 00:45:19,280
they get bashed and they can touch

00:45:17,540 --> 00:45:21,410
everything which is you know not the

00:45:19,280 --> 00:45:23,450
most accurate story so in fact the most

00:45:21,410 --> 00:45:26,300
important story of every service broker

00:45:23,450 --> 00:45:28,070
and every database you ever do and and

00:45:26,300 --> 00:45:29,810
it's the last point so I can believe it

00:45:28,070 --> 00:45:31,850
but really it's the first point is that

00:45:29,810 --> 00:45:33,290
before you share it with anyone all the

00:45:31,850 --> 00:45:35,720
operators should know how to do disaster

00:45:33,290 --> 00:45:37,460
recovery and with more time I would tell

00:45:35,720 --> 00:45:39,200
you my own personal stories of deleting

00:45:37,460 --> 00:45:43,040
customer data and feeling really bad

00:45:39,200 --> 00:45:45,860
about it so it's a service broke out so

00:45:43,040 --> 00:45:48,920
that's we only have the one plan because

00:45:45,860 --> 00:45:52,520
I've never figured out what she'd plans

00:45:48,920 --> 00:45:53,780
mean like when it comes to quarters what

00:45:52,520 --> 00:45:55,060
happens when you get to the India bit

00:45:53,780 --> 00:45:58,340
quota

00:45:55,060 --> 00:46:00,470
there's no good story to tell that that

00:45:58,340 --> 00:46:02,120
user about what happens and of course

00:46:00,470 --> 00:46:04,190
there are two two levels of people

00:46:02,120 --> 00:46:06,299
affected their developers who feel bad

00:46:04,190 --> 00:46:08,309
and then the end users who now

00:46:06,299 --> 00:46:10,410
web app doesn't work so we're not

00:46:08,309 --> 00:46:13,619
working with with plants at the moment

00:46:10,410 --> 00:46:15,749
it's until we have a better idea of why

00:46:13,619 --> 00:46:17,689
you would have a plan for a database

00:46:15,749 --> 00:46:19,679
that only wants to grow

00:46:17,689 --> 00:46:22,289
finally mainly how it works and

00:46:19,679 --> 00:46:25,529
obviously deployed with Bosch but it's

00:46:22,289 --> 00:46:27,920
container based so when you deploy a new

00:46:25,529 --> 00:46:29,789
cluster you literally get two dedicated

00:46:27,920 --> 00:46:31,140
containers running on two different

00:46:29,789 --> 00:46:34,259
machines on two different availability

00:46:31,140 --> 00:46:35,999
zones and self-aware is probably

00:46:34,259 --> 00:46:37,769
overstating it but a lot of the

00:46:35,999 --> 00:46:40,589
functionality is embedded inside those

00:46:37,769 --> 00:46:42,509
containers not sort of centrally

00:46:40,589 --> 00:46:44,519
organized so we just throw them up

00:46:42,509 --> 00:46:47,189
somewhere and then we have a replica of

00:46:44,519 --> 00:46:50,939
TCP routing tier we need the TCP routing

00:46:47,189 --> 00:46:52,349
tier mostly in my mind because we don't

00:46:50,939 --> 00:46:55,019
have a good way yet and Claire found you

00:46:52,349 --> 00:46:56,489
to update bindings and so you know we

00:46:55,019 --> 00:46:59,609
want to be able to do the failover and

00:46:56,489 --> 00:47:02,099
and little that the bindings that we

00:46:59,609 --> 00:47:05,189
promised would work to keep working and

00:47:02,099 --> 00:47:09,150
it also adds some a DMZ isolation which

00:47:05,189 --> 00:47:11,189
is another benefit it's nothing fancy

00:47:09,150 --> 00:47:13,199
it's they check proxy so when we get the

00:47:11,189 --> 00:47:15,449
binding obviously its TCP so we're out

00:47:13,199 --> 00:47:18,390
through ports and so it's each binding

00:47:15,449 --> 00:47:20,459
get support by the way if we do Claire

00:47:18,390 --> 00:47:22,650
foundry did have like a shared service

00:47:20,459 --> 00:47:26,699
tier a routing system I would love to

00:47:22,650 --> 00:47:27,689
use that rather than I think I can make

00:47:26,699 --> 00:47:30,449
some notes at the end of the

00:47:27,689 --> 00:47:32,429
presentation but I can speak well I have

00:47:30,449 --> 00:47:36,479
to meet you I mean SF tomorrow so we can

00:47:32,429 --> 00:47:41,369
hang out if you don't want to hang out

00:47:36,479 --> 00:47:43,789
just think of the word so then traffic

00:47:41,369 --> 00:47:47,160
comes in inserts

00:47:43,789 --> 00:47:49,199
it's a asynchronous replication and its

00:47:47,160 --> 00:47:52,249
current inclination so after while

00:47:49,199 --> 00:47:56,459
enough inserts enough edits a sixteen

00:47:52,249 --> 00:47:57,420
meget forwarded off to the replica also

00:47:56,459 --> 00:47:58,769
after a timeout

00:47:57,420 --> 00:48:02,339
like a 10-minute window of time out

00:47:58,769 --> 00:48:03,689
chunks will get sent off and so replicas

00:48:02,339 --> 00:48:05,819
get replicated too but it's not

00:48:03,689 --> 00:48:08,400
synchronous at the moment and so they're

00:48:05,819 --> 00:48:11,939
always a little bit behind for the most

00:48:08,400 --> 00:48:13,979
part and most importantly we also send

00:48:11,939 --> 00:48:15,179
chunks off to to the archiving system

00:48:13,979 --> 00:48:17,969
which might be s3

00:48:15,179 --> 00:48:21,130
or another machine you can use SSH to

00:48:17,969 --> 00:48:23,619
send archives to a local on-prem machine

00:48:21,130 --> 00:48:25,960
and when we know that we have that for

00:48:23,619 --> 00:48:28,119
every single cluster we can do some fun

00:48:25,960 --> 00:48:31,960
tricks as well as it's the incredibly

00:48:28,119 --> 00:48:33,450
fun trick of disaster recovery and so

00:48:31,960 --> 00:48:37,329
one of the fun tricks we can do is

00:48:33,450 --> 00:48:39,880
create new database clusters built on a

00:48:37,329 --> 00:48:43,839
clone of the backup of another one and

00:48:39,880 --> 00:48:45,790
this is space scoped because that's the

00:48:43,839 --> 00:48:47,470
last thing I can think of doing for uh

00:48:45,790 --> 00:48:49,210
for authorization permissions of who's

00:48:47,470 --> 00:48:51,390
allowed to do it

00:48:49,210 --> 00:48:54,640
it kind of has two stories to it one is

00:48:51,390 --> 00:48:56,920
it allows you to developer two or the

00:48:54,640 --> 00:48:58,750
entire development team to more

00:48:56,920 --> 00:49:01,119
thoroughly test the upgrade of

00:48:58,750 --> 00:49:03,760
production in advance of actually

00:49:01,119 --> 00:49:05,619
touching production because now you can

00:49:03,760 --> 00:49:08,079
get a copy of production you might then

00:49:05,619 --> 00:49:10,089
sanitize it and then you can test your

00:49:08,079 --> 00:49:12,520
upgrade and you can test the the

00:49:10,089 --> 00:49:14,320
blue/green deployment through the

00:49:12,520 --> 00:49:15,640
various phases you can test but it's

00:49:14,320 --> 00:49:17,589
blue and green running against the old

00:49:15,640 --> 00:49:19,420
schema and then blue and green running

00:49:17,589 --> 00:49:22,359
against the new schema check that out

00:49:19,420 --> 00:49:24,880
all works perhaps before you find out

00:49:22,359 --> 00:49:27,480
what that looks like production and the

00:49:24,880 --> 00:49:29,589
other obvious features is you can

00:49:27,480 --> 00:49:32,819
developers can actually do their own

00:49:29,589 --> 00:49:35,410
disaster recovery if accidentally things

00:49:32,819 --> 00:49:37,329
the way that works because we have some

00:49:35,410 --> 00:49:40,390
isolated archives for each database is

00:49:37,329 --> 00:49:42,369
we just copy the archive it's pretty

00:49:40,390 --> 00:49:44,230
simple and then when the new leader

00:49:42,369 --> 00:49:48,160
wakes up and he finds out that he is the

00:49:44,230 --> 00:49:49,660
leader but bitter is an archive it

00:49:48,160 --> 00:49:52,180
automatically kicks into disaster

00:49:49,660 --> 00:49:53,800
recovery mode recovers the database and

00:49:52,180 --> 00:49:55,329
then when the replica comes up or when

00:49:53,800 --> 00:49:56,349
the next one comes up it finds out that

00:49:55,329 --> 00:49:58,359
it's a replica

00:49:56,349 --> 00:50:01,089
and it starts replicating so it's a

00:49:58,359 --> 00:50:04,089
really powerful feature are built on the

00:50:01,089 --> 00:50:09,099
back of the same idea of containers that

00:50:04,089 --> 00:50:10,690
know how to recover for themselves its

00:50:09,099 --> 00:50:13,210
Cloud Foundry so we create a new binding

00:50:10,690 --> 00:50:14,619
therefore we get a new port a new

00:50:13,210 --> 00:50:16,750
traffic and you might use that

00:50:14,619 --> 00:50:18,849
particular clone for a minutes or hours

00:50:16,750 --> 00:50:20,500
or days or whatever might be reporting

00:50:18,849 --> 00:50:26,710
database it might be whatever so it's a

00:50:20,500 --> 00:50:28,660
it's an idea as much as one quick

00:50:26,710 --> 00:50:30,550
question what do you call it I guess I'm

00:50:28,660 --> 00:50:34,060
trying to understand is it is it more of

00:50:30,550 --> 00:50:36,670
a hot standby you know master slave

00:50:34,060 --> 00:50:38,530
are you actually trying to like have

00:50:36,670 --> 00:50:41,200
multiple replicas of course more than

00:50:38,530 --> 00:50:43,630
two AZ's the reason I ask is because

00:50:41,200 --> 00:50:46,330
like what what happens when my

00:50:43,630 --> 00:50:48,700
connection went down and then there's

00:50:46,330 --> 00:50:52,360
two replicas and they had different you

00:50:48,700 --> 00:50:54,240
know sync update which one to use you

00:50:52,360 --> 00:50:57,670
know things like that like this is

00:50:54,240 --> 00:51:03,430
pretty shared the question because the

00:50:57,670 --> 00:51:07,150
time I I see that question so I

00:51:03,430 --> 00:51:09,880
appreciate your you segue now hi veil

00:51:07,150 --> 00:51:13,840
ability obviously thanks to Dimitri's

00:51:09,880 --> 00:51:18,460
team entire Bosch universe machines

00:51:13,840 --> 00:51:20,680
every week and so we can't be at all

00:51:18,460 --> 00:51:22,510
oblivious to that and then there's going

00:51:20,680 --> 00:51:24,520
to be environmental losses when people

00:51:22,510 --> 00:51:28,990
at Amazon use their power tools to take

00:51:24,520 --> 00:51:32,470
machines down and so yeah we obviously

00:51:28,990 --> 00:51:36,880
have the replicas the it is not just a

00:51:32,470 --> 00:51:39,060
passive replica it's constantly waiting

00:51:36,880 --> 00:51:42,880
till it gets his turn to be the leader

00:51:39,060 --> 00:51:45,610
and so if the Machine and the line

00:51:42,880 --> 00:51:48,040
disappears there is a period of time

00:51:45,610 --> 00:51:50,440
where it's we allow it to come back and

00:51:48,040 --> 00:51:54,790
that's why I believe and I can be argued

00:51:50,440 --> 00:51:56,890
against but the difference between high

00:51:54,790 --> 00:51:59,560
availability or when you've got an

00:51:56,890 --> 00:52:02,050
asynchronous pair versus your durability

00:51:59,560 --> 00:52:03,460
of dedos is important to understand you

00:52:02,050 --> 00:52:04,960
kind of want to wait for that leader to

00:52:03,460 --> 00:52:08,560
come back because it is the best

00:52:04,960 --> 00:52:10,690
qualified leader it has all the data and

00:52:08,560 --> 00:52:13,360
so for the most part you know we try to

00:52:10,690 --> 00:52:15,610
wait for that the replicas will all give

00:52:13,360 --> 00:52:17,560
it a some sort of timeout we know it to

00:52:15,610 --> 00:52:20,560
wait for it to come back before they

00:52:17,560 --> 00:52:22,210
trigger but eventually if you've got

00:52:20,560 --> 00:52:25,540
multiple replicas they'll sort of

00:52:22,210 --> 00:52:30,640
compete based on best qualifications you

00:52:25,540 --> 00:52:37,810
know and so eventually it'll fail over

00:52:30,640 --> 00:52:40,600
the routing table will get updated I

00:52:37,810 --> 00:52:43,030
mean maybe I did insert delete delete

00:52:40,600 --> 00:52:44,680
insert and then some of them have some

00:52:43,030 --> 00:52:46,600
of those delete some of them have some

00:52:44,680 --> 00:52:47,950
of the inserts right like how do you

00:52:46,600 --> 00:52:51,940
know which one is the most

00:52:47,950 --> 00:52:53,920
current solve problem in the Postgres

00:52:51,940 --> 00:52:55,990
university and said they they coordinate

00:52:53,920 --> 00:52:57,640
through SED I mean how do you make a

00:52:55,990 --> 00:53:01,600
coordinator other things we're packaging

00:52:57,640 --> 00:53:04,750
a CD and so they sort of you know they

00:53:01,600 --> 00:53:09,250
know they know each other's current

00:53:04,750 --> 00:53:11,260
status of where they're up to it's a

00:53:09,250 --> 00:53:12,790
good question it's part that I wouldn't

00:53:11,260 --> 00:53:15,850
claim to know that the most about

00:53:12,790 --> 00:53:18,280
exactly how Postgres does that and as by

00:53:15,850 --> 00:53:20,290
default and we really only sort of

00:53:18,280 --> 00:53:22,690
support we don't support only two to no

00:53:20,290 --> 00:53:24,700
clusters we don't really advertise how

00:53:22,690 --> 00:53:25,630
you get a bit more there's a flag you

00:53:24,700 --> 00:53:27,640
just pass through an extra parameter

00:53:25,630 --> 00:53:30,520
parameter and you can have a ten node

00:53:27,640 --> 00:53:32,200
cluster but in a simple case obviously

00:53:30,520 --> 00:53:33,780
the earth the other replica is the

00:53:32,200 --> 00:53:37,090
best-qualified

00:53:33,780 --> 00:53:39,160
there it is part of Postgres and that

00:53:37,090 --> 00:53:42,730
the replicas consider of nowhere they're

00:53:39,160 --> 00:53:45,340
up to and then in the the the agent that

00:53:42,730 --> 00:53:48,460
sits orchestrating and on each node on

00:53:45,340 --> 00:53:49,620
each sorry on each container is able to

00:53:48,460 --> 00:53:55,540
figure out whether it's the most

00:53:49,620 --> 00:53:58,030
qualified and it's really interesting oh

00:53:55,540 --> 00:53:59,170
I would love in the future to get the

00:53:58,030 --> 00:54:01,060
you have the synchronous replication

00:53:59,170 --> 00:54:02,470
option and because obviously then that

00:54:01,060 --> 00:54:04,600
the synchronous replicas is imp

00:54:02,470 --> 00:54:05,980
apparently the most qualified and it can

00:54:04,600 --> 00:54:11,680
be a lot more aggressive about fair

00:54:05,980 --> 00:54:14,380
loaders so thanks to the wonders of gosh

00:54:11,680 --> 00:54:16,450
we actually bring this back so if you've

00:54:14,380 --> 00:54:20,590
got familiar with the advanced functions

00:54:16,450 --> 00:54:23,920
of Diego then you know too much we don't

00:54:20,590 --> 00:54:27,370
do anything we actually it's super

00:54:23,920 --> 00:54:29,590
simple no not because it's hard to make

00:54:27,370 --> 00:54:31,510
assumptions about state and what the

00:54:29,590 --> 00:54:33,400
what availability we have so if there

00:54:31,510 --> 00:54:35,680
was space on that host machine for that

00:54:33,400 --> 00:54:39,070
container before then there's space for

00:54:35,680 --> 00:54:41,670
it now and so when that machine comes

00:54:39,070 --> 00:54:44,080
back that container will be restarted

00:54:41,670 --> 00:54:46,750
the container will will sort of go

00:54:44,080 --> 00:54:49,210
through a role reversal it will discover

00:54:46,750 --> 00:54:50,830
that it's no longer leader and through

00:54:49,210 --> 00:54:53,860
the sort of a stone a--the shift the

00:54:50,830 --> 00:54:55,930
node in the head process all the stator

00:54:53,860 --> 00:54:59,400
is deleted off the machine and it come

00:54:55,930 --> 00:55:01,130
it it fetches sort of a new replica

00:54:59,400 --> 00:55:03,019
either from

00:55:01,130 --> 00:55:05,240
either from the archives or from the

00:55:03,019 --> 00:55:09,019
from the master depending on some

00:55:05,240 --> 00:55:10,609
characteristics and now you've got a

00:55:09,019 --> 00:55:12,380
healthy cluster again healthy

00:55:10,609 --> 00:55:14,329
you've probably awesome data though

00:55:12,380 --> 00:55:15,980
that's awkward and no one really wants

00:55:14,329 --> 00:55:22,910
to talk about it but that's the downside

00:55:15,980 --> 00:55:25,730
of a synchroscope location I have a

00:55:22,910 --> 00:55:27,859
small question what happens if the

00:55:25,730 --> 00:55:30,440
router faiths or how are the router set

00:55:27,859 --> 00:55:35,569
up then I excellent question

00:55:30,440 --> 00:55:38,059
the again I love its the routing at the

00:55:35,569 --> 00:55:39,619
moment is a single h a proxy so if it

00:55:38,059 --> 00:55:44,210
disappears you lose your connections I

00:55:39,619 --> 00:55:46,549
don't have a better solution completely

00:55:44,210 --> 00:55:48,500
open to solutions it's just not I

00:55:46,549 --> 00:55:50,990
haven't had the team hasn't had a great

00:55:48,500 --> 00:55:53,359
idea for how you do that and the generic

00:55:50,990 --> 00:55:55,460
case not knowing exactly what everyone's

00:55:53,359 --> 00:55:59,509
gonna have on their install base and so

00:55:55,460 --> 00:56:00,920
it's super interested in ideas obviously

00:55:59,509 --> 00:56:02,839
you can run multiple of them because

00:56:00,920 --> 00:56:04,730
they're independent from each other bit

00:56:02,839 --> 00:56:06,079
like bit like we had to go router system

00:56:04,730 --> 00:56:07,579
you can run as many as you like they're

00:56:06,079 --> 00:56:11,059
all independent you then need a load

00:56:07,579 --> 00:56:15,740
balancer in front so hopefully we can

00:56:11,059 --> 00:56:17,269
come up with a server suite of ideas so

00:56:15,740 --> 00:56:18,980
far the best configurations that's

00:56:17,269 --> 00:56:20,329
worked well for that one is exactly what

00:56:18,980 --> 00:56:21,740
he just said it's basically run a bunch

00:56:20,329 --> 00:56:25,400
of the routers and you have a load

00:56:21,740 --> 00:56:27,980
balancer in front of them it seems to do

00:56:25,400 --> 00:56:31,430
well enough for high availability on

00:56:27,980 --> 00:56:35,240
this so each client have an in-memory

00:56:31,430 --> 00:56:36,769
Postgres and then you keep local I mean

00:56:35,240 --> 00:56:38,420
if you just use then you can

00:56:36,769 --> 00:56:42,319
really just manage your expectations of

00:56:38,420 --> 00:56:43,940
everything if you just don't assume the

00:56:42,319 --> 00:56:47,020
data is stored and you have no access to

00:56:43,940 --> 00:56:49,089
it then I can make jokes all day

00:56:47,020 --> 00:56:52,039
[Music]

00:56:49,089 --> 00:56:53,720
so this this story here again this is

00:56:52,039 --> 00:56:56,980
some of this stuff is not so much about

00:56:53,720 --> 00:56:59,420
dingo as cool as dingo is you know I

00:56:56,980 --> 00:57:02,059
really when people went about making

00:56:59,420 --> 00:57:04,730
service tire services and service

00:57:02,059 --> 00:57:07,390
releases they they had a higher standard

00:57:04,730 --> 00:57:10,339
excellence that they they started with

00:57:07,390 --> 00:57:12,680
you know the five six API endpoints on

00:57:10,339 --> 00:57:14,789
the service record right is not the goal

00:57:12,680 --> 00:57:16,829
that is a terrible

00:57:14,789 --> 00:57:18,839
starting point to assume you know there

00:57:16,829 --> 00:57:21,079
is a there is an entire experience that

00:57:18,839 --> 00:57:23,999
that you should be thinking about and

00:57:21,079 --> 00:57:26,369
and perhaps this comes apart from my own

00:57:23,999 --> 00:57:27,809
personal experiences but then I'd rather

00:57:26,369 --> 00:57:28,949
you benefited from my personal

00:57:27,809 --> 00:57:32,459
experiences then have to go through

00:57:28,949 --> 00:57:35,969
disaster not recovering from disaster

00:57:32,459 --> 00:57:38,789
each and every one of you so I I

00:57:35,969 --> 00:57:40,529
strongly hope that each of you when you

00:57:38,789 --> 00:57:43,789
build service tiles service brokers

00:57:40,529 --> 00:57:46,019
service you know releases that you have

00:57:43,789 --> 00:57:49,099
first and foremost in your mind what is

00:57:46,019 --> 00:57:52,709
your embedded disaster recovery story

00:57:49,099 --> 00:57:54,479
so one thing we suggested of everyone

00:57:52,709 --> 00:57:57,269
that deploys this is after you play with

00:57:54,479 --> 00:58:00,029
a little bit to go through the disaster

00:57:57,269 --> 00:58:02,640
recovery tutorial and that pretty much

00:58:00,029 --> 00:58:04,799
means running delete deployment on it

00:58:02,640 --> 00:58:06,359
taking everything down and then going

00:58:04,799 --> 00:58:08,519
through and running the disaster

00:58:06,359 --> 00:58:11,819
recovery errands and and feeling the

00:58:08,519 --> 00:58:14,609
confidence of it watching at work I

00:58:11,819 --> 00:58:16,079
think you know there's a lot of moving

00:58:14,609 --> 00:58:19,919
pieces in a complete Cloud Foundry

00:58:16,079 --> 00:58:21,390
experience and feeling feeling

00:58:19,919 --> 00:58:23,489
increasingly confident that each part

00:58:21,390 --> 00:58:26,759
works or you know how to check it when

00:58:23,489 --> 00:58:29,339
it's not working we've all learned that

00:58:26,759 --> 00:58:30,719
the way to live with HED is to know that

00:58:29,339 --> 00:58:32,099
you don't put anything really important

00:58:30,719 --> 00:58:34,169
in there that can't be reproduced from

00:58:32,099 --> 00:58:36,119
somewhere else that gives you confidence

00:58:34,169 --> 00:58:39,539
so knowing that you can rebuild this

00:58:36,119 --> 00:58:40,799
entire thing gives you confidence so if

00:58:39,539 --> 00:58:43,049
you can't quite imagine what's going to

00:58:40,799 --> 00:58:45,269
happen we're gonna delete not just the

00:58:43,049 --> 00:58:46,859
containers but obviously the broker and

00:58:45,269 --> 00:58:49,979
the router and HED we're gonna delete

00:58:46,859 --> 00:58:52,679
all the machines we use the word cell

00:58:49,979 --> 00:58:54,229
just sort of synonymous with with diego

00:58:52,679 --> 00:58:56,669
even though it's implemented differently

00:58:54,229 --> 00:58:58,529
so we take away everything obviously we

00:58:56,669 --> 00:59:00,529
keep the archives that's really

00:58:58,529 --> 00:59:02,969
important

00:59:00,529 --> 00:59:04,289
don't do this reverse don't delete all

00:59:02,969 --> 00:59:06,419
the archives and think that you can

00:59:04,289 --> 00:59:08,069
actually it would probably just

00:59:06,419 --> 00:59:11,999
reproduce all the archive so it might

00:59:08,069 --> 00:59:13,229
work actually rebuild everything would

00:59:11,999 --> 00:59:15,959
bring back then with the empty machines

00:59:13,229 --> 00:59:18,329
we bring back the router the cooker and

00:59:15,959 --> 00:59:22,199
then you run the errand and the errand

00:59:18,329 --> 00:59:25,380
is is fundamentally simple it asks Cloud

00:59:22,199 --> 00:59:29,039
Foundry for the list of service

00:59:25,380 --> 00:59:31,769
instances that it expects to be running

00:59:29,039 --> 00:59:33,650
they may be archives for thousands and

00:59:31,769 --> 00:59:37,469
millions or thousands and thousands of

00:59:33,650 --> 00:59:38,700
historical databases but you only want

00:59:37,469 --> 00:59:40,499
to bring back the ones that Cloud

00:59:38,700 --> 00:59:42,989
Foundry expects and so he just

00:59:40,499 --> 00:59:45,839
reprovision them they'll wake up with

00:59:42,989 --> 00:59:47,670
the same identity they all contain as it

00:59:45,839 --> 00:59:49,559
gets goes down the nest to chain the

00:59:47,670 --> 00:59:52,759
containers wake up and realize I already

00:59:49,559 --> 00:59:55,769
existed once I'll do the last recovery

00:59:52,759 --> 00:59:57,359
then the replica containers wake up they

00:59:55,769 --> 00:59:59,969
realize they're part of a cluster and

00:59:57,359 --> 01:00:02,759
they start replicating either from the

00:59:59,969 --> 01:00:03,979
leader or from from the desert from the

01:00:02,759 --> 01:00:07,739
archives themselves

01:00:03,979 --> 01:00:10,079
that's a Glee I put arrows in and then

01:00:07,739 --> 01:00:13,259
because we made all sorts of promises to

01:00:10,079 --> 01:00:16,650
Cloud Foundry apps about bindings about

01:00:13,259 --> 01:00:18,890
ports about passwords we have to restore

01:00:16,650 --> 01:00:18,890
those

01:00:29,900 --> 01:00:35,579
simplistic security model here just a

01:00:32,880 --> 01:00:37,529
different bucket different credentials

01:00:35,579 --> 01:00:40,319
and then and those credentials never

01:00:37,529 --> 01:00:41,880
exposed to any of the databases so if

01:00:40,319 --> 01:00:44,519
there is a vector of attack through

01:00:41,880 --> 01:00:46,529
Postgres you they won't get access to

01:00:44,519 --> 01:00:48,359
all the passwords and other material but

01:00:46,529 --> 01:00:49,440
obviously over time we have for life

01:00:48,359 --> 01:00:51,390
credit out will have different ways to

01:00:49,440 --> 01:00:53,160
do some of this stuff and so I'm pretty

01:00:51,390 --> 01:00:56,999
excited about improving the security

01:00:53,160 --> 01:00:58,559
model over time but yeah this is the

01:00:56,999 --> 01:01:01,499
complete disaster recovery story and

01:00:58,559 --> 01:01:04,650
while Stingo has it I highly desire

01:01:01,499 --> 01:01:07,160
every single data service model but

01:01:04,650 --> 01:01:11,369
expect a data service broker to

01:01:07,160 --> 01:01:13,079
implement something similar please this

01:01:11,369 --> 01:01:14,789
is all open source right needless to say

01:01:13,079 --> 01:01:17,219
so people can look at what you've done

01:01:14,789 --> 01:01:19,319
and some of the implementations going to

01:01:17,219 --> 01:01:22,849
be post quest specific but the idea of

01:01:19,319 --> 01:01:25,829
having a run errand disaster recovery

01:01:22,849 --> 01:01:29,430
you know I think it should be a standard

01:01:25,829 --> 01:01:31,289
that people should go down for at least

01:01:29,430 --> 01:01:33,329
a document even if it's not as simple as

01:01:31,289 --> 01:01:34,199
that document what is how do you do

01:01:33,329 --> 01:01:37,940
disaster recovery

01:01:34,199 --> 01:01:40,709
it went all crazy how do I get it back

01:01:37,940 --> 01:01:41,670
it's pretty you know we can find is

01:01:40,709 --> 01:01:43,349
fantastic and

01:01:41,670 --> 01:01:47,490
we can make it look terrible by having a

01:01:43,349 --> 01:01:48,990
service brokers that misbehave all right

01:01:47,490 --> 01:01:53,280
sorry I now have to watch the animations

01:01:48,990 --> 01:01:57,030
I didn't mean to do that okay you have a

01:01:53,280 --> 01:01:57,990
couple more minutes if you can sorry if

01:01:57,030 --> 01:02:00,180
you're ever wondering if you have to

01:01:57,990 --> 01:02:01,579
ever argue about Cloud Foundry versus

01:02:00,180 --> 01:02:04,920
OpenShift you can always argue that

01:02:01,579 --> 01:02:07,230
shift doesn't have dingos one if you

01:02:04,920 --> 01:02:09,480
bind it what what dingo can do for you

01:02:07,230 --> 01:02:12,180
in terms of you know being there look I

01:02:09,480 --> 01:02:14,490
went and looked at the daya's website in

01:02:12,180 --> 01:02:17,700
part because that was sort of my former

01:02:14,490 --> 01:02:19,349
employer went bought it and still this

01:02:17,700 --> 01:02:21,630
magnificent website discussing their

01:02:19,349 --> 01:02:26,010
wonderful platform and not a cracker of

01:02:21,630 --> 01:02:28,559
a mention about durable services so if

01:02:26,010 --> 01:02:30,809
we can solve as a community durable

01:02:28,559 --> 01:02:33,690
services you know I think we have

01:02:30,809 --> 01:02:36,540
something that flashes out the other

01:02:33,690 --> 01:02:38,130
half of the BlackBerry story so it's not

01:02:36,540 --> 01:02:40,760
just a matter of having an API I think

01:02:38,130 --> 01:02:43,680
we need to demand a level of excellence

01:02:40,760 --> 01:02:45,869
anyway so some of this goes other things

01:02:43,680 --> 01:02:47,640
but you know the Postgres stuff is

01:02:45,869 --> 01:02:49,920
pretty much open source Postgres and get

01:02:47,640 --> 01:02:53,520
support for that wherever you find love

01:02:49,920 --> 01:02:56,069
is cool so we have time maybe for one

01:02:53,520 --> 01:02:58,500
question I saw one question on the on

01:02:56,069 --> 01:03:00,599
chat about how does that work with

01:02:58,500 --> 01:03:05,400
shield which i think is also a stock in

01:03:00,599 --> 01:03:06,869
wayne project yep basically it it's just

01:03:05,400 --> 01:03:09,829
the same as any other Postgres database

01:03:06,869 --> 01:03:12,540
with shield you essentially enable a

01:03:09,829 --> 01:03:14,400
enable it as a target and the source

01:03:12,540 --> 01:03:15,930
right source and target and you had a

01:03:14,400 --> 01:03:18,390
schedule and retention plans whatever

01:03:15,930 --> 01:03:19,079
and you have the backup there's no

01:03:18,390 --> 01:03:22,619
automated

01:03:19,079 --> 01:03:26,309
at this moment way to just pay back up

01:03:22,619 --> 01:03:29,339
every single database on dingoo but it

01:03:26,309 --> 01:03:31,530
is possible you need that so dingo

01:03:29,339 --> 01:03:34,200
handles the point in times s recovery

01:03:31,530 --> 01:03:35,670
scenarios and stuff like that out of the

01:03:34,200 --> 01:03:37,170
box itself and you don't have to worry

01:03:35,670 --> 01:03:41,010
about those things but yeah if you if

01:03:37,170 --> 01:03:43,380
you want for if you want old fashioned

01:03:41,010 --> 01:03:45,839
backups yeah for like compliance reasons

01:03:43,380 --> 01:03:47,819
or mandates or policy or whatever then

01:03:45,839 --> 01:03:49,559
yes shield absolutely works for that

01:03:47,819 --> 01:03:51,660
it's just a Postgres plugin and

01:03:49,559 --> 01:03:54,630
basically and you just configure it her

01:03:51,660 --> 01:03:57,089
database to do that and it would

01:03:54,630 --> 01:04:00,240
not be too challenging to automate the

01:03:57,089 --> 01:04:04,980
addition of new like so your detection

01:04:00,240 --> 01:04:06,900
of new they don't cook us yep okay

01:04:04,980 --> 01:04:09,450
Thank You Wayne for the answer and

01:04:06,900 --> 01:04:10,079
Benjamin for the question so dr. Nick we

01:04:09,450 --> 01:04:12,269
appreciate it

01:04:10,079 --> 01:04:13,710
this is this is cool stuff I think means

01:04:12,269 --> 01:04:16,049
we wanted to say something unless you

01:04:13,710 --> 01:04:17,369
can say it in like 30 seconds decay

01:04:16,049 --> 01:04:23,220
maybe we can do it next time

01:04:17,369 --> 01:04:25,940
about this random entry no never mind

01:04:23,220 --> 01:04:25,940
not enough time

01:04:27,269 --> 01:04:32,700
sorry Matt Damon we didn't have time

01:04:30,019 --> 01:04:34,859
we'll get him to present next time so

01:04:32,700 --> 01:04:36,569
you'll be able to flood him with

01:04:34,859 --> 01:04:38,960
questions anyways thank you everybody

01:04:36,569 --> 01:04:42,509
for joining and for the presentations

01:04:38,960 --> 01:04:44,519
this probably is the best turnout so

01:04:42,509 --> 01:04:46,819
hopefully we'll get even more thank you

01:04:44,519 --> 01:04:46,819

YouTube URL: https://www.youtube.com/watch?v=kRRZ0sMfiac


