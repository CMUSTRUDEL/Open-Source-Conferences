Title: Keynote: Panel: How Google and Microsoft are Using Cloud Foundry To Embrace Multi-Cloud
Publication date: 2017-06-21
Playlist: Cloud Foundry Summit Silicon Valley 2017
Description: 
	Keynote: Panel: How Google and Microsoft are Using Cloud Foundry To Embrace Multi-Cloud - Chip Childers, Cloud Foundry, and Frederic Lardinois, TechCrunch (moderator)    

Chip Childers
Cloud Foundry Foundation
Chief Technology Officer
Chip has spent more than 18 years in large-scale computing and open source software. In 2015, he became the co-founder of the Cloud Foundry Foundation as Technology Chief of Staff. He was the first VP of Apache Cloudstack, a platform he helped drive while leading Enterprise Cloud Services at SunGard and then as VP Product Strategy at Cumulogic. Prior to SunGard, he led the rebuild of mission-critical applications for organizations including IRS.gov, USMint.gov, Merrill Lynch and SEI Investments. Chip is an experienced speaker at events like OSCON, LinuxCon North America, LC Japan, LC EU, ApacheCon, Oâ€™Reilly Software Architecture Conference, and many more. In his free time, Chip loves trail hiking with his black lab, sailing catamarans and sunfish, and trying to keep up with his young daughter.

Fred Lardinois
TechCrunch
Reporter
Frederic has spent more than five years covering news and providing analysis about technology, the industry and consumer tech related to the Internet with potential to influence industry direction. At TechCrunch, his focus spans from emerging technologies and niche startups to major product advances by industry titans â€“ all innovation focused. Before he joined TechCrunch in 2012, he founded Silicon Filter and wrote for ReadWriteWeb (now ReadWrite).
Captions: 
	00:00:00,560 --> 00:00:04,650
Google Microsoft feels like there's

00:00:03,750 --> 00:00:06,089
something missing

00:00:04,650 --> 00:00:08,610
all right should I should I believe the

00:00:06,089 --> 00:00:11,340
chair for the other provider this is

00:00:08,610 --> 00:00:12,750
other cloud right yeah what's the deal

00:00:11,340 --> 00:00:16,980
with that why is well I'm saving him a

00:00:12,750 --> 00:00:20,850
seat somebody from a running light here

00:00:16,980 --> 00:00:26,310
who wants to come up and welcome you up

00:00:20,850 --> 00:00:29,010
here anybody with an AWS account Devin

00:00:26,310 --> 00:00:33,390
you got Prime membership right you

00:00:29,010 --> 00:00:35,250
qualify your call thanks for being your

00:00:33,390 --> 00:00:36,960
guys why don't you just briefly

00:00:35,250 --> 00:00:39,180
introduce yourself and tell us what you

00:00:36,960 --> 00:00:41,550
do in the context of Cloud Foundry right

00:00:39,180 --> 00:00:43,350
my name is KY Shana Madison

00:00:41,550 --> 00:00:46,680
I run the enterprise open source group

00:00:43,350 --> 00:00:48,690
at Microsoft or we do a bunch of stream

00:00:46,680 --> 00:00:51,510
projects one of which obviously is Cloud

00:00:48,690 --> 00:00:53,520
Foundry my team is also responsible for

00:00:51,510 --> 00:00:57,120
making sure that to the next runs well

00:00:53,520 --> 00:01:00,480
on various Microsoft platforms including

00:00:57,120 --> 00:01:03,210
geysers given that a lot of the open

00:01:00,480 --> 00:01:05,070
source projects are born on Linux the

00:01:03,210 --> 00:01:07,880
work that we do in making Linux run well

00:01:05,070 --> 00:01:10,229
on hyper-v is the foundational piece for

00:01:07,880 --> 00:01:14,460
projects such as Cloud Foundry to run

00:01:10,229 --> 00:01:16,470
well on our platforms I'm Eric Johnson I

00:01:14,460 --> 00:01:17,850
lead an engineering team working on open

00:01:16,470 --> 00:01:19,740
source integrations for Google cloud

00:01:17,850 --> 00:01:22,110
platform and we've been working in the

00:01:19,740 --> 00:01:25,470
cloud foundry community for over a year

00:01:22,110 --> 00:01:28,770
now I'm chip Childers my job is to run

00:01:25,470 --> 00:01:32,340
over in Mike you know any drives uber or

00:01:28,770 --> 00:01:35,250
doing a spirit yeah so we're here to

00:01:32,340 --> 00:01:37,259
talk about multi cloud and I'm really

00:01:35,250 --> 00:01:41,189
interested in what you are doing to help

00:01:37,259 --> 00:01:46,020
your customers make that make that

00:01:41,189 --> 00:01:47,280
progression to multi-class right multi

00:01:46,020 --> 00:01:49,500
cloud means different things to

00:01:47,280 --> 00:01:52,290
different people right one is the

00:01:49,500 --> 00:01:54,840
ability to deploy workloads on different

00:01:52,290 --> 00:01:57,689
clouds different public clouds and Cloud

00:01:54,840 --> 00:01:58,500
Foundry the wonderful mechanism to make

00:01:57,689 --> 00:02:00,780
that happen

00:01:58,500 --> 00:02:02,100
we support cloud foundry and the goal

00:02:00,780 --> 00:02:04,860
there is to make sure that we don't

00:02:02,100 --> 00:02:06,390
deviate in our implementation of Cloud

00:02:04,860 --> 00:02:07,489
Foundry so that workloads that are

00:02:06,390 --> 00:02:10,229
deployed and Azure

00:02:07,489 --> 00:02:11,519
could just go over and run elsewhere as

00:02:10,229 --> 00:02:13,829
well

00:02:11,519 --> 00:02:15,959
and for somebody like Microsoft that

00:02:13,829 --> 00:02:19,590
actually has had a long history with

00:02:15,959 --> 00:02:22,500
enterprise customers multi-cloud also

00:02:19,590 --> 00:02:26,219
means hybrid cloud meaning we want to

00:02:22,500 --> 00:02:29,930
bridge the gap between on-prem cloud

00:02:26,219 --> 00:02:32,519
infrastructures to public cloud

00:02:29,930 --> 00:02:34,709
infrastructures so we do have offerings

00:02:32,519 --> 00:02:38,549
on the on print side like the azure

00:02:34,709 --> 00:02:42,150
stack so we have Cloud Foundry enabled

00:02:38,549 --> 00:02:46,650
on Azure stack as well so the entire

00:02:42,150 --> 00:02:48,389
spectrum of both private clouds as well

00:02:46,650 --> 00:02:50,700
as public clouds is addressed in our

00:02:48,389 --> 00:02:52,409
multi cloud strategy once the azure

00:02:50,700 --> 00:02:54,560
stack is actually available to everybody

00:02:52,409 --> 00:02:58,129
well we've had previous effort going out

00:02:54,560 --> 00:03:00,389
sometime to see a little being available

00:02:58,129 --> 00:03:00,840
Eric what's your definition of multi

00:03:00,389 --> 00:03:02,939
cloud

00:03:00,840 --> 00:03:06,000
yeah I think it's a you know obviously

00:03:02,939 --> 00:03:08,250
it's about customer choice right I think

00:03:06,000 --> 00:03:10,079
that Cloud Foundry is a great way to

00:03:08,250 --> 00:03:12,689
abstract a lot of the differences from

00:03:10,079 --> 00:03:13,950
cloud providers what I think is also

00:03:12,689 --> 00:03:15,510
very important in a Cloud Foundry

00:03:13,950 --> 00:03:17,970
ecosystem is that you still have the

00:03:15,510 --> 00:03:20,459
capability to utilize platform

00:03:17,970 --> 00:03:23,220
differentiators through the open service

00:03:20,459 --> 00:03:25,260
broker API and service broker model but

00:03:23,220 --> 00:03:26,639
you're still abstracting away a lot of

00:03:25,260 --> 00:03:29,010
the complexities that you probably don't

00:03:26,639 --> 00:03:30,900
necessarily care about right so you

00:03:29,010 --> 00:03:33,959
could have Foundation's running on Azure

00:03:30,900 --> 00:03:36,049
or Amazon or Google and still take

00:03:33,959 --> 00:03:38,430
advantage of platform differentiators

00:03:36,049 --> 00:03:42,959
yeah yeah I think it's an interesting

00:03:38,430 --> 00:03:46,259
buzzword but putting in all honesty I

00:03:42,959 --> 00:03:49,109
think it represents what's a hard

00:03:46,259 --> 00:03:51,209
reality of Tranter price right but we

00:03:49,109 --> 00:03:52,530
can we can use whatever word we want to

00:03:51,209 --> 00:03:53,879
use because it used to be hybrid cloud

00:03:52,530 --> 00:03:55,560
and then there was you know then we had

00:03:53,879 --> 00:03:57,180
this cloud bursting thing which turns

00:03:55,560 --> 00:03:58,979
out isn't really a thing and now we're

00:03:57,180 --> 00:04:00,500
talking about multi cloud but what it

00:03:58,979 --> 00:04:02,819
actually means is that those two dudes

00:04:00,500 --> 00:04:04,979
enterprise environments are complicated

00:04:02,819 --> 00:04:07,650
right you're going to want to place your

00:04:04,979 --> 00:04:08,669
applications in in public clouds if that

00:04:07,650 --> 00:04:11,220
makes the most sense you're going to

00:04:08,669 --> 00:04:12,479
want to do it in hopefully agile local

00:04:11,220 --> 00:04:14,189
infrastructure when that makes sense

00:04:12,479 --> 00:04:16,859
right and I think it's just more of a

00:04:14,189 --> 00:04:19,709
way to step back and accept complexity

00:04:16,859 --> 00:04:21,659
in in particular Geographic and location

00:04:19,709 --> 00:04:22,530
complexity and then and then service

00:04:21,659 --> 00:04:24,300
variants

00:04:22,530 --> 00:04:26,010
between these environments is that

00:04:24,300 --> 00:04:30,420
something you're actually seeing your

00:04:26,010 --> 00:04:33,150
customers do yes the cloud journey has

00:04:30,420 --> 00:04:35,520
started and we need to make sure that

00:04:33,150 --> 00:04:38,790
we're bringing along everybody that had

00:04:35,520 --> 00:04:41,460
a significant investment in their legacy

00:04:38,790 --> 00:04:44,370
applications tax and infrastructure so

00:04:41,460 --> 00:04:48,030
that's the the the intention to bring

00:04:44,370 --> 00:04:50,130
our existing customers over to the cloud

00:04:48,030 --> 00:04:52,850
and I just as I mentioned earlier we

00:04:50,130 --> 00:04:54,990
field is a bridge to that journey and

00:04:52,850 --> 00:04:57,780
then you know born in the cloud

00:04:54,990 --> 00:05:02,130
customers they want choice they want

00:04:57,780 --> 00:05:05,720
choice and Microsoft is all about choice

00:05:02,130 --> 00:05:08,070
these days and Microsoft also

00:05:05,720 --> 00:05:10,860
traditionally has made the complex

00:05:08,070 --> 00:05:14,060
simple now my grandmother could would

00:05:10,860 --> 00:05:19,020
read email because Microsoft or Frank

00:05:14,060 --> 00:05:21,380
right so that simplicity is what Cloud

00:05:19,020 --> 00:05:24,090
Foundry offers being able to deploy

00:05:21,380 --> 00:05:26,430
workloads complex workloads on different

00:05:24,090 --> 00:05:29,400
infrastructures yeah we definitely

00:05:26,430 --> 00:05:32,220
worked on architectures with customers

00:05:29,400 --> 00:05:33,960
that have an on-premise Cloud Foundry

00:05:32,220 --> 00:05:36,560
and they're looking at expanding out

00:05:33,960 --> 00:05:38,400
into the cloud right so as they start to

00:05:36,560 --> 00:05:40,590
you know feel much more comfortable

00:05:38,400 --> 00:05:43,020
moving to public cloud they don't want

00:05:40,590 --> 00:05:45,450
to continue to make investments in data

00:05:43,020 --> 00:05:47,070
center capacity they're looking at how

00:05:45,450 --> 00:05:48,690
do they continue to use Cloud Foundry

00:05:47,070 --> 00:05:51,690
where they're already using that on Prem

00:05:48,690 --> 00:05:53,490
and then start using cloud right so

00:05:51,690 --> 00:05:56,130
Cloud Foundry again allows them to

00:05:53,490 --> 00:05:57,919
bridge that gap and we've you know been

00:05:56,130 --> 00:06:00,060
working on architectures that

00:05:57,919 --> 00:06:02,190
take advantage of a lot of like Google's

00:06:00,060 --> 00:06:03,630
infrastructure how we service you know

00:06:02,190 --> 00:06:05,340
Gmail and YouTube and stuff like that

00:06:03,630 --> 00:06:09,990
making that available to Cloud Foundry

00:06:05,340 --> 00:06:11,430
users I think there's going to be some

00:06:09,990 --> 00:06:14,070
interesting use cases coming up in

00:06:11,430 --> 00:06:15,600
keynotes later in the conference talking

00:06:14,070 --> 00:06:17,160
about you know the use of different

00:06:15,600 --> 00:06:20,370
public cloud providers

00:06:17,160 --> 00:06:22,470
I mean frequently we talk about you know

00:06:20,370 --> 00:06:25,010
your first thought is this you start

00:06:22,470 --> 00:06:27,450
private then you kind of go public

00:06:25,010 --> 00:06:28,950
but public cloud adoption has already

00:06:27,450 --> 00:06:30,870
reached the stage where now we're

00:06:28,950 --> 00:06:34,260
starting to say I'm using more than one

00:06:30,870 --> 00:06:36,030
right I'm gonna use Microsoft or some

00:06:34,260 --> 00:06:37,560
I'm gonna use Google for others and

00:06:36,030 --> 00:06:39,480
still gonna possibly have an on-prem

00:06:37,560 --> 00:06:41,280
OpenStack deployment or vSphere or

00:06:39,480 --> 00:06:42,420
VMware photon deployment and I think

00:06:41,280 --> 00:06:45,090
that's you know that we're gonna

00:06:42,420 --> 00:06:46,320
increasingly see that the other thing we

00:06:45,090 --> 00:06:48,270
seem to be seeing more as people

00:06:46,320 --> 00:06:50,880
starting out in the cloud and then going

00:06:48,270 --> 00:06:52,920
rocket because it's sometimes cheaper

00:06:50,880 --> 00:06:54,330
for them to do that - yeah I mean the

00:06:52,920 --> 00:06:57,150
biggest lie you can tell yourself is the

00:06:54,330 --> 00:06:58,110
public cloud is a cost reduction right I

00:06:57,150 --> 00:07:03,030
mean it's just not true

00:06:58,110 --> 00:07:04,260
oh you are I don't know I don't know if

00:07:03,030 --> 00:07:07,730
you ever search use it the proofs about

00:07:04,260 --> 00:07:11,520
Laura's I think I've got them all I mean

00:07:07,730 --> 00:07:12,960
it's about agility it's not about you

00:07:11,520 --> 00:07:14,400
know operational excited I mean total

00:07:12,960 --> 00:07:16,440
cost of ownership is gonna be lower yes

00:07:14,400 --> 00:07:18,120
but you're gonna spend you're gonna

00:07:16,440 --> 00:07:20,010
spend money for each thing that you're

00:07:18,120 --> 00:07:21,660
using and you are all are gonna fight it

00:07:20,010 --> 00:07:22,800
out on price and quality and you know

00:07:21,660 --> 00:07:25,320
there's a there's a way to kind of

00:07:22,800 --> 00:07:27,480
measure that but but it is in many ways

00:07:25,320 --> 00:07:29,490
more expensive than going to buy one

00:07:27,480 --> 00:07:32,160
server and then advertising that over

00:07:29,490 --> 00:07:33,510
however many years right right but you

00:07:32,160 --> 00:07:35,610
have to buy that server and wait for the

00:07:33,510 --> 00:07:37,410
truck to show up with it so I think the

00:07:35,610 --> 00:07:38,970
the other advantage I think you know

00:07:37,410 --> 00:07:40,590
standardizing on Cloud Foundry it's not

00:07:38,970 --> 00:07:42,570
just about technology or abstracting

00:07:40,590 --> 00:07:45,180
away the infrastructure it's also the

00:07:42,570 --> 00:07:46,650
expertise of the team you know you've

00:07:45,180 --> 00:07:48,930
got the new developer program out there

00:07:46,650 --> 00:07:50,400
that just launched recently right so you

00:07:48,930 --> 00:07:52,920
have developers that are learning how to

00:07:50,400 --> 00:07:56,700
use effectively many different clouds

00:07:52,920 --> 00:08:00,180
with a single abstraction yeah we hope

00:07:56,700 --> 00:08:02,640
that that's powerful when when they're

00:08:00,180 --> 00:08:06,390
making their choice though which clouds

00:08:02,640 --> 00:08:08,520
to use there is something that it's call

00:08:06,390 --> 00:08:10,830
it service gravity right if I'm using

00:08:08,520 --> 00:08:14,250
already a bunch of Microsoft or Google

00:08:10,830 --> 00:08:16,740
or AWS services I probably want to be

00:08:14,250 --> 00:08:18,960
close to those right do you see that as

00:08:16,740 --> 00:08:21,630
an advantage is a disadvantage for you

00:08:18,960 --> 00:08:25,560
right so we talked about how Cloud

00:08:21,630 --> 00:08:28,610
Foundry and what strikes the platforms

00:08:25,560 --> 00:08:31,320
and gives a uniform runtime for

00:08:28,610 --> 00:08:33,980
applications what applications don't run

00:08:31,320 --> 00:08:38,220
in isolation right they need to consume

00:08:33,980 --> 00:08:40,920
services and Microsoft has a rich set of

00:08:38,220 --> 00:08:42,600
service offerings that have been used by

00:08:40,920 --> 00:08:46,710
enterprise customers for quite some time

00:08:42,600 --> 00:08:51,930
so we believe now the cloud choice often

00:08:46,710 --> 00:08:54,590
is made not just on surprise and other

00:08:51,930 --> 00:08:57,660
tangible differentiates as well also

00:08:54,590 --> 00:09:00,570
what is the ecosystem right and how

00:08:57,660 --> 00:09:04,290
close the dqo system match with what

00:09:00,570 --> 00:09:07,290
they're already used to in their on-prem

00:09:04,290 --> 00:09:10,590
world yes I do believe that the

00:09:07,290 --> 00:09:11,640
ecosystem has a great bearing on the

00:09:10,590 --> 00:09:16,250
choice

00:09:11,640 --> 00:09:16,250
most people don't run Google on premise

00:09:16,310 --> 00:09:19,200
that would be cool though

00:09:18,030 --> 00:09:22,350
do you have a product announcement you

00:09:19,200 --> 00:09:27,390
wanna make know okay GCP stack is coming

00:09:22,350 --> 00:09:38,820
yeah in a docker image the container

00:09:27,390 --> 00:09:41,910
yeah you can tell we rehearse great

00:09:38,820 --> 00:09:44,340
disadvantage for you no I don't think so

00:09:41,910 --> 00:09:45,540
I think you know again with the cloud

00:09:44,340 --> 00:09:47,790
foundry right you can run that anywhere

00:09:45,540 --> 00:09:49,890
so yes service gravity right would is

00:09:47,790 --> 00:09:51,450
probably something that you know you

00:09:49,890 --> 00:09:53,340
would want to take advantage of so if

00:09:51,450 --> 00:09:54,980
you're using an azure service or GCP

00:09:53,340 --> 00:09:58,560
service you definitely have a foundation

00:09:54,980 --> 00:10:01,230
nearby right but it doesn't it doesn't

00:09:58,560 --> 00:10:04,170
still require that you're just locked in

00:10:01,230 --> 00:10:05,880
on a single key rider right it just may

00:10:04,170 --> 00:10:07,410
be for the sets of applications you

00:10:05,880 --> 00:10:09,120
would do your application deployments in

00:10:07,410 --> 00:10:11,460
that particular foundation that utilizes

00:10:09,120 --> 00:10:13,290
those services but you could just as

00:10:11,460 --> 00:10:15,150
easily use spanner where you've got some

00:10:13,290 --> 00:10:17,280
maybe vendor lock-in with GCP and you've

00:10:15,150 --> 00:10:19,440
got a foundation there again your

00:10:17,280 --> 00:10:21,360
developers are being able to do CF push

00:10:19,440 --> 00:10:24,000
to applications depending on where they

00:10:21,360 --> 00:10:26,340
need access to those services if service

00:10:24,000 --> 00:10:28,380
gravity is important to them I've

00:10:26,340 --> 00:10:31,140
actually got a question for both both of

00:10:28,380 --> 00:10:32,670
you and both of your organization's have

00:10:31,140 --> 00:10:37,200
had a pretty interesting relationship

00:10:32,670 --> 00:10:39,180
with open-source and in the past but but

00:10:37,200 --> 00:10:41,190
you're you're increasing the engagement

00:10:39,180 --> 00:10:42,630
in in these communities I mean at a

00:10:41,190 --> 00:10:45,060
really high velocity right both of you

00:10:42,630 --> 00:10:46,260
it's an amazing work so can you just

00:10:45,060 --> 00:10:47,340
tell us a little bit more about what

00:10:46,260 --> 00:10:48,930
that means to know what that means to

00:10:47,340 --> 00:10:51,660
Google what that means to Microsoft and

00:10:48,930 --> 00:10:54,210
you know and your customers right I

00:10:51,660 --> 00:10:57,450
think I'll jump in first on us and I

00:10:54,210 --> 00:10:58,370
think for Google right I mean all of

00:10:57,450 --> 00:11:00,410
Google is built

00:10:58,370 --> 00:11:03,320
top of open source right every server

00:11:00,410 --> 00:11:05,390
that we have runs Linux every developer

00:11:03,320 --> 00:11:07,040
workstation runs some form of Unix

00:11:05,390 --> 00:11:09,080
whether that's even Mac right and it's

00:11:07,040 --> 00:11:10,670
basically UNIX under the hood every

00:11:09,080 --> 00:11:12,110
engineer at Google knows how to use set

00:11:10,670 --> 00:11:14,000
and grab and all of these things right

00:11:12,110 --> 00:11:16,880
it's all open source has been since day

00:11:14,000 --> 00:11:18,350
one and we care a lot about making sure

00:11:16,880 --> 00:11:20,450
that we're giving back to that community

00:11:18,350 --> 00:11:22,880
right so you know obviously some of the

00:11:20,450 --> 00:11:24,890
contributions that we've made you know

00:11:22,880 --> 00:11:27,260
see groups back to enable containers in

00:11:24,890 --> 00:11:29,089
the first place from Android operating

00:11:27,260 --> 00:11:31,820
system right all of this stuff is links

00:11:29,089 --> 00:11:34,339
based you know participating into

00:11:31,820 --> 00:11:35,779
standards bodies all of those things are

00:11:34,339 --> 00:11:42,410
incredibly important to Google's

00:11:35,779 --> 00:11:45,740
business oh the Microsoft journey into

00:11:42,410 --> 00:11:48,529
open source has been more recent and

00:11:45,740 --> 00:11:52,480
again it's really based on choice and

00:11:48,529 --> 00:11:55,070
with these customers asking us to

00:11:52,480 --> 00:11:58,460
support them in the choices they're made

00:11:55,070 --> 00:12:00,290
right if somebody wants to run an open

00:11:58,460 --> 00:12:04,100
source stack as part of their

00:12:00,290 --> 00:12:05,600
application as part of their workload we

00:12:04,100 --> 00:12:08,480
want to make sure that our platform can

00:12:05,600 --> 00:12:10,640
support it as best as we can right and

00:12:08,480 --> 00:12:12,950
we also see value in the open source

00:12:10,640 --> 00:12:15,290
development model tooling that's there

00:12:12,950 --> 00:12:18,770
for instance just about a couple of

00:12:15,290 --> 00:12:20,839
months ago all of the Windows kernel

00:12:18,770 --> 00:12:25,190
development moved from our own

00:12:20,839 --> 00:12:27,830
proprietary repos to use gate ok we saw

00:12:25,190 --> 00:12:31,430
that you know gate was a better tool for

00:12:27,830 --> 00:12:33,740
managing source and so we moved 2530

00:12:31,430 --> 00:12:38,529
years of history back from our repos to

00:12:33,740 --> 00:12:40,459
to get so we participate in open source

00:12:38,529 --> 00:12:43,550
projects in one of three different ways

00:12:40,459 --> 00:12:46,160
but one is we participate in a large

00:12:43,550 --> 00:12:48,470
project we continue to that platform for

00:12:46,160 --> 00:12:52,550
each one of that Linux kernel is another

00:12:48,470 --> 00:12:54,680
example of that we also are the owners

00:12:52,550 --> 00:12:56,870
of some open source projects dotnet for

00:12:54,680 --> 00:12:58,850
instance we open source that and we are

00:12:56,870 --> 00:13:01,880
the main maintainer of that project and

00:12:58,850 --> 00:13:03,680
lastly we use open source tools

00:13:01,880 --> 00:13:06,170
internally to make our own development

00:13:03,680 --> 00:13:08,270
more agile so forints

00:13:06,170 --> 00:13:11,890
open source has been

00:13:08,270 --> 00:13:15,200
you know has brought it back to our core

00:13:11,890 --> 00:13:16,640
developer focused company that the world

00:13:15,200 --> 00:13:18,650
to begin with right so this is a

00:13:16,640 --> 00:13:22,130
different way of doing things and

00:13:18,650 --> 00:13:25,490
certainly is something that you know how

00:13:22,130 --> 00:13:28,130
people are very happy about fact within

00:13:25,490 --> 00:13:31,120
Microsoft there are about 15,000 victim

00:13:28,130 --> 00:13:35,090
becomes you know people are just

00:13:31,120 --> 00:13:37,700
developing software and using open

00:13:35,090 --> 00:13:40,640
source software to build products within

00:13:37,700 --> 00:13:43,820
Microsoft I particularly like the the

00:13:40,640 --> 00:13:45,320
point you made there about the the focus

00:13:43,820 --> 00:13:47,660
on the really the developer experience

00:13:45,320 --> 00:13:49,640
and taking some of you know the open

00:13:47,660 --> 00:13:53,150
source approach to software engineering

00:13:49,640 --> 00:13:55,280
like in that honestly it's it's not

00:13:53,150 --> 00:13:57,020
freezing free software right it's I mean

00:13:55,280 --> 00:13:59,480
we're all doing this to to affect

00:13:57,020 --> 00:14:01,130
outcomes but and in the case of you know

00:13:59,480 --> 00:14:02,570
the end user organizations here is to

00:14:01,130 --> 00:14:03,800
affect outcomes for their business that

00:14:02,570 --> 00:14:06,260
might have nothing to do with technology

00:14:03,800 --> 00:14:07,550
but it's enabling it and in you know the

00:14:06,260 --> 00:14:08,810
kid some technology vendors it's of

00:14:07,550 --> 00:14:11,000
course it's to service your customers

00:14:08,810 --> 00:14:13,700
and make sure the babe what they need

00:14:11,000 --> 00:14:15,200
that's great well all chip goes totally

00:14:13,700 --> 00:14:18,890
off topic here right now let's bring it

00:14:15,200 --> 00:14:20,240
back to boundary for a moment what is it

00:14:18,890 --> 00:14:22,040
you actually doing between you talk

00:14:20,240 --> 00:14:23,780
about the developer experience is it

00:14:22,040 --> 00:14:25,400
what are you actually doing to enhance

00:14:23,780 --> 00:14:28,820
the developer experience for Cloud

00:14:25,400 --> 00:14:31,190
Foundry developers well the support of

00:14:28,820 --> 00:14:33,260
Cloud Foundry on Azure we expect it to

00:14:31,190 --> 00:14:35,720
be second to none meaning you know it's

00:14:33,260 --> 00:14:39,770
it's going to be a first-rate experience

00:14:35,720 --> 00:14:42,710
for people that want to develop Cloud

00:14:39,770 --> 00:14:44,810
Foundry based workload for Ashes and

00:14:42,710 --> 00:14:48,470
that says it all really yeah nothing

00:14:44,810 --> 00:14:51,500
specific but we make sure that all of

00:14:48,470 --> 00:14:56,060
the the most up-to-date Cloud Foundry

00:14:51,500 --> 00:14:58,040
bits are supported on items I think I

00:14:56,060 --> 00:14:59,330
guess I would say same thing right

00:14:58,040 --> 00:15:00,910
saying all right we want to be sort of

00:14:59,330 --> 00:15:02,780
the best public cloud provider right

00:15:00,910 --> 00:15:04,520
some of the things that we're done to

00:15:02,780 --> 00:15:05,690
try and differentiate ourselves is you

00:15:04,520 --> 00:15:08,030
know utilizing a lot of Google's

00:15:05,690 --> 00:15:10,250
infrastructure innovations you know our

00:15:08,030 --> 00:15:11,660
global load balancers right single IP

00:15:10,250 --> 00:15:13,040
address all over the planet right you

00:15:11,660 --> 00:15:16,360
did the closest foundation you don't

00:15:13,040 --> 00:15:18,530
have to do any setup other things like

00:15:16,360 --> 00:15:20,150
wiring in your logging and monitoring

00:15:18,530 --> 00:15:21,010
right so you're you're taking all of

00:15:20,150 --> 00:15:22,690
your application

00:15:21,010 --> 00:15:25,240
and operator logs and putting that into

00:15:22,690 --> 00:15:28,089
our stack driver logging tool you can

00:15:25,240 --> 00:15:29,949
tie into electric debugger so that's in

00:15:28,089 --> 00:15:32,170
we're putting agents into the build

00:15:29,949 --> 00:15:33,850
packs for that so you can actually live

00:15:32,170 --> 00:15:36,940
debug your applications that are running

00:15:33,850 --> 00:15:38,440
on top of Cloud Foundry on GC P so just

00:15:36,940 --> 00:15:40,779
trying to make those innovations

00:15:38,440 --> 00:15:43,779
available to cloud foundry users on GTV

00:15:40,779 --> 00:15:45,430
did those once I do that though once

00:15:43,779 --> 00:15:48,519
I've built all those monitoring tools

00:15:45,430 --> 00:15:51,579
into my processes I'm not that likely to

00:15:48,519 --> 00:15:55,660
move away from from your cloud am I you

00:15:51,579 --> 00:15:57,570
could okay a lot more work I think that

00:15:55,660 --> 00:16:00,610
goes back to your topic about you know

00:15:57,570 --> 00:16:01,810
Service sort of gravity right but

00:16:00,610 --> 00:16:04,060
there's nothing that would preclude you

00:16:01,810 --> 00:16:05,740
from being able to do that and even you

00:16:04,060 --> 00:16:07,510
know we have customers that are using

00:16:05,740 --> 00:16:09,060
that today on Prem they're still

00:16:07,510 --> 00:16:11,440
ingesting their logs in the stack driver

00:16:09,060 --> 00:16:13,480
and they're doing that from on-prem

00:16:11,440 --> 00:16:15,459
Cloud Foundry funding but that's also an

00:16:13,480 --> 00:16:16,690
area where we have tried to add value to

00:16:15,459 --> 00:16:18,910
the cloud for you know Cloud Foundry

00:16:16,690 --> 00:16:21,730
infrastructure we do have a fairly

00:16:18,910 --> 00:16:24,519
extensive log analytics that's backed by

00:16:21,730 --> 00:16:27,310
machine learning India and all that so

00:16:24,519 --> 00:16:28,750
we have plugged that infrastructure with

00:16:27,310 --> 00:16:31,389
Cloud Foundry so that we can actually

00:16:28,750 --> 00:16:33,790
reason about the logs and give some

00:16:31,389 --> 00:16:39,130
recommendations to Cloud Foundry users

00:16:33,790 --> 00:16:40,990
on our platforms what about if when

00:16:39,130 --> 00:16:43,930
you're seeing people move to to

00:16:40,990 --> 00:16:45,790
multi-cloud setups what are some of the

00:16:43,930 --> 00:16:48,310
mistakes they make that maybe the people

00:16:45,790 --> 00:16:50,949
in the audience here can avoid and learn

00:16:48,310 --> 00:16:53,680
from you not using clone fold with

00:16:50,949 --> 00:16:58,690
patterns perhaps it may not give you the

00:16:53,680 --> 00:17:02,410
dollar that's it well you know as long

00:16:58,690 --> 00:17:06,309
as they restrict themselves to the best

00:17:02,410 --> 00:17:08,169
practices as laid out in the cloud form

00:17:06,309 --> 00:17:12,040
tree patterns I think they'll be in a

00:17:08,169 --> 00:17:13,809
good shape yeah I think it's it's really

00:17:12,040 --> 00:17:15,309
I think that the best thing that you

00:17:13,809 --> 00:17:16,720
could do to take advantage of multi

00:17:15,309 --> 00:17:20,110
cloud is to use something like cloud

00:17:16,720 --> 00:17:21,429
foundry right go after the things that

00:17:20,110 --> 00:17:22,809
you care about on the platform but

00:17:21,429 --> 00:17:24,520
otherwise the rest of the stuff you just

00:17:22,809 --> 00:17:25,510
kind of abstract away so that you don't

00:17:24,520 --> 00:17:28,690
really have to learn all of those

00:17:25,510 --> 00:17:30,220
idiosyncrasies you know every every you

00:17:28,690 --> 00:17:31,600
know major cloud provider has a virtual

00:17:30,220 --> 00:17:33,159
machine as a service but they're all a

00:17:31,600 --> 00:17:34,140
little bit different and why would you

00:17:33,159 --> 00:17:36,210
want to have to go through

00:17:34,140 --> 00:17:37,860
remember like these parameters for this

00:17:36,210 --> 00:17:40,500
or these parameters for that you just

00:17:37,860 --> 00:17:41,760
let Bosch take care of that for you and

00:17:40,500 --> 00:17:43,980
then just focus on developing your

00:17:41,760 --> 00:17:47,010
applications that's the best multi-cloud

00:17:43,980 --> 00:17:49,410
strategy I think yeah I'm sure chip will

00:17:47,010 --> 00:17:51,120
agree with that absolutely I have

00:17:49,410 --> 00:17:54,780
nothing that in a great job I will be

00:17:51,120 --> 00:17:56,970
paying later Oh later that's right you

00:17:54,780 --> 00:18:00,510
end up seeing any anybody just screwing

00:17:56,970 --> 00:18:05,550
up though I'm not gonna talk about it

00:18:00,510 --> 00:18:07,680
very nuff no well I mean the Frederick

00:18:05,550 --> 00:18:11,190
let's be honest it is hard to make the

00:18:07,680 --> 00:18:13,950
dark attentional choices right but but

00:18:11,190 --> 00:18:15,570
it's not any different really you you've

00:18:13,950 --> 00:18:16,680
got the same set of criteria and your

00:18:15,570 --> 00:18:19,110
thought process around you know

00:18:16,680 --> 00:18:20,760
availability resiliency you know we're

00:18:19,110 --> 00:18:23,250
how are you gonna store your data how

00:18:20,760 --> 00:18:25,020
you gonna insure it all of those same

00:18:23,250 --> 00:18:27,450
things that we used to think about when

00:18:25,020 --> 00:18:29,970
we were racking and stack and yeah you

00:18:27,450 --> 00:18:32,910
know the the hardware in our own closets

00:18:29,970 --> 00:18:34,320
and calling it a data center right all

00:18:32,910 --> 00:18:36,990
of those same problems that you have to

00:18:34,320 --> 00:18:40,170
think about when when you start spanning

00:18:36,990 --> 00:18:43,830
across multiple clouds the the

00:18:40,170 --> 00:18:46,890
complexity doesn't go away but you have

00:18:43,830 --> 00:18:48,870
more tools available to you to to solve

00:18:46,890 --> 00:18:50,910
those problems right and you can rely

00:18:48,870 --> 00:18:52,320
more on the service providers so for

00:18:50,910 --> 00:18:54,480
example you know you need to back up

00:18:52,320 --> 00:18:56,340
your data and yeah we you should

00:18:54,480 --> 00:18:58,260
probably just use the native service for

00:18:56,340 --> 00:18:59,310
backing it up for the various clouds you

00:18:58,260 --> 00:19:00,860
know that you're the urban structures

00:18:59,310 --> 00:19:02,520
aren't right because that's it's not a

00:19:00,860 --> 00:19:03,780
value-added thing that even your

00:19:02,520 --> 00:19:10,140
platform Operations Group should be

00:19:03,780 --> 00:19:13,230
focused on what what's looking ahead a

00:19:10,140 --> 00:19:15,750
little bit what but it's still needed

00:19:13,230 --> 00:19:19,140
what what do you still want to to build

00:19:15,750 --> 00:19:21,750
into the platform to enable easier multi

00:19:19,140 --> 00:19:27,030
cloud deployments for example that

00:19:21,750 --> 00:19:28,590
something you're thinking about what I'm

00:19:27,030 --> 00:19:33,270
seeing is the platform's

00:19:28,590 --> 00:19:35,220
are evolving and raising the bar a lot

00:19:33,270 --> 00:19:37,410
of things that washed it for instance

00:19:35,220 --> 00:19:40,440
are going to be part of the underlying

00:19:37,410 --> 00:19:41,220
platform moving forward and that journey

00:19:40,440 --> 00:19:42,780
is going to continue

00:19:41,220 --> 00:19:44,360
you know the platform is going to do

00:19:42,780 --> 00:19:46,730
more and more things

00:19:44,360 --> 00:19:50,059
with regards to availability and scaling

00:19:46,730 --> 00:19:52,519
and load balancing and all that and so

00:19:50,059 --> 00:19:55,730
why they quite have made sense in the

00:19:52,519 --> 00:19:57,320
past to have that the value add on top

00:19:55,730 --> 00:20:00,279
of the platform we need to figure out a

00:19:57,320 --> 00:20:02,630
way where we can have a flexible way of

00:20:00,279 --> 00:20:05,929
leveraging what the platform has to

00:20:02,630 --> 00:20:09,080
offer in building this higher level

00:20:05,929 --> 00:20:10,100
orchestration engines ya know if if all

00:20:09,080 --> 00:20:12,559
the cloud providers could just

00:20:10,100 --> 00:20:13,820
synchronize your release schedules there

00:20:12,559 --> 00:20:16,460
be really helpful because then the

00:20:13,820 --> 00:20:20,029
abstractions would evolve together but

00:20:16,460 --> 00:20:22,340
but I think that the points where you

00:20:20,029 --> 00:20:26,000
interface in the platform have to allow

00:20:22,340 --> 00:20:28,130
yes for that journey to occur at our

00:20:26,000 --> 00:20:29,539
pace right we all are not going to do

00:20:28,130 --> 00:20:31,820
the same thing at the same time right

00:20:29,539 --> 00:20:34,370
but we should be able to say ok this

00:20:31,820 --> 00:20:36,409
platform provides that let's use it it's

00:20:34,370 --> 00:20:38,870
not we'll build up something that the

00:20:36,409 --> 00:20:40,490
desert I think I had an interesting

00:20:38,870 --> 00:20:44,269
conversation last night with dimitri

00:20:40,490 --> 00:20:45,980
about this talking about how Basch the

00:20:44,269 --> 00:20:47,179
way that i look at it today like if

00:20:45,980 --> 00:20:48,559
you're setting up cloud foundry on top

00:20:47,179 --> 00:20:50,750
of a provider there's a certain set of

00:20:48,559 --> 00:20:52,820
infrastructure you need to create wash

00:20:50,750 --> 00:20:55,250
takes care of disks and VMs for you but

00:20:52,820 --> 00:20:58,789
they're at least other things left as

00:20:55,250 --> 00:21:00,289
out-of-band you know I could see a kind

00:20:58,789 --> 00:21:02,929
of a future where Bosch is starting to

00:21:00,289 --> 00:21:04,850
do a lot of that extra stuff for you and

00:21:02,929 --> 00:21:06,380
then making that even easier to abstract

00:21:04,850 --> 00:21:10,279
away some of the platform differences

00:21:06,380 --> 00:21:11,779
where Bosch is handling a lot more not

00:21:10,279 --> 00:21:13,070
that he signed up for any of that I

00:21:11,779 --> 00:21:15,980
should say right it was just a

00:21:13,070 --> 00:21:18,139
conversation but that's why we're here

00:21:15,980 --> 00:21:20,269
to have great conversations about great

00:21:18,139 --> 00:21:22,820
conversations yes and that wraps up that

00:21:20,269 --> 00:21:24,889
great conversation thank you very much

00:21:22,820 --> 00:21:29,980
thank you for it in Japan thank you all

00:21:24,889 --> 00:21:29,980

YouTube URL: https://www.youtube.com/watch?v=TrzQa2d1PKo


