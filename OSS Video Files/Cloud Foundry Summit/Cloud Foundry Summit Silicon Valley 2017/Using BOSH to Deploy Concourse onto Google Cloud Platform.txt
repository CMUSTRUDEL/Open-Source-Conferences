Title: Using BOSH to Deploy Concourse onto Google Cloud Platform
Publication date: 2017-06-22
Playlist: Cloud Foundry Summit Silicon Valley 2017
Description: 
	Using BOSH to Deploy Concourse onto Google Cloud Platform [B] - Cameron Stewart, Pivotal    

In this session, developers will learn how to use Concourse as the tool to automating their path to production. Take a look at how to deploy Concourse to Google Cloud Platform using BOSH while understanding how BOSH manages large-scale distributed systems.

Cameron Stewart
Cameron comes from a full-stack developer background thanks to the Galvanize Full Stack Developer program which makes her fiercely passionate about all things cloud-native, 12 factor and agile. As part of the Global Ecosystem team at Pivotal, Cameron works with a variety of partners to help bring cloud-native solutions to joint customers.

Speaking history includes Pivotal and Google Cloud-Native Roadshow event touring 25 cities worldwide.
Captions: 
	00:00:00,060 --> 00:00:04,980
my name is Cameron Stewart thanks for

00:00:02,730 --> 00:00:07,770
coming out to my talk today I work for

00:00:04,980 --> 00:00:10,080
pivotal at pivotal I'm a partner

00:00:07,770 --> 00:00:11,460
Solutions Architect so that means that I

00:00:10,080 --> 00:00:15,360
learned technical support to our

00:00:11,460 --> 00:00:16,590
partners before working at pivotal I

00:00:15,360 --> 00:00:18,420
went through the galvanize full stack

00:00:16,590 --> 00:00:21,029
immersive program so it's really cool to

00:00:18,420 --> 00:00:23,039
see galvanize sponsoring this event and

00:00:21,029 --> 00:00:25,800
to hear all about the amazing work that

00:00:23,039 --> 00:00:28,769
they're doing with Allstate that is my

00:00:25,800 --> 00:00:31,260
twitter handle if you do the Twitter and

00:00:28,769 --> 00:00:33,030
you want to find me that's how I can be

00:00:31,260 --> 00:00:34,829
found on Twitter to be perfectly honest

00:00:33,030 --> 00:00:37,140
I'm a little bit of what I would call a

00:00:34,829 --> 00:00:41,640
Twitter late bloomer

00:00:37,140 --> 00:00:43,739
but I am on the bandwagon now so that's

00:00:41,640 --> 00:00:46,230
how you can find me and of course I am

00:00:43,739 --> 00:00:49,050
available through other platforms of

00:00:46,230 --> 00:00:51,059
communication LinkedIn whatsapp or good

00:00:49,050 --> 00:00:52,379
old-fashioned email so if you want to

00:00:51,059 --> 00:00:55,410
stay in touch or if you have questions

00:00:52,379 --> 00:01:00,449
please don't hesitate to stay in touch I

00:00:55,410 --> 00:01:02,550
would love to talk to you so I have to

00:01:00,449 --> 00:01:04,860
be honest that I picked out a pretty

00:01:02,550 --> 00:01:06,930
decent outfit for you all today but then

00:01:04,860 --> 00:01:09,180
I was in the expo hall and I was talking

00:01:06,930 --> 00:01:10,860
with the awesome folks at grey puffs and

00:01:09,180 --> 00:01:14,490
I noticed I had these really cool

00:01:10,860 --> 00:01:16,590
t-shirts and I thought you know that

00:01:14,490 --> 00:01:20,009
it's fitting for the name of this track

00:01:16,590 --> 00:01:21,390
that I get a t-shirt so I definitely

00:01:20,009 --> 00:01:23,130
encourage you to go and talk to the gray

00:01:21,390 --> 00:01:25,490
pup folks they are they offer

00:01:23,130 --> 00:01:28,020
professional professional services

00:01:25,490 --> 00:01:29,220
around Cloud Foundry so you should talk

00:01:28,020 --> 00:01:30,570
to them because they're experts in crop

00:01:29,220 --> 00:01:33,210
boundary and also because they have

00:01:30,570 --> 00:01:34,979
really awesome t-shirts but we didn't

00:01:33,210 --> 00:01:36,630
come here to talk about t-shirts because

00:01:34,979 --> 00:01:39,890
obviously a mine takes the cake

00:01:36,630 --> 00:01:43,110
we came here to talk about technology

00:01:39,890 --> 00:01:46,740
these technologies specifically today

00:01:43,110 --> 00:01:50,040
we're going to discuss Bosh and using

00:01:46,740 --> 00:01:53,700
Bosh to deploy Concours onto Google

00:01:50,040 --> 00:01:55,979
cloud platform and the reason why we're

00:01:53,700 --> 00:01:59,549
going to talk about all of these

00:01:55,979 --> 00:02:06,409
technologies is because everyone is

00:01:59,549 --> 00:02:08,940
trying to go faster I think as

00:02:06,409 --> 00:02:10,770
organizations and as developers we're

00:02:08,940 --> 00:02:13,950
all trying to go faster we're all trying

00:02:10,770 --> 00:02:16,890
to get code out the door into the

00:02:13,950 --> 00:02:20,370
our end users as fast as possible I

00:02:16,890 --> 00:02:22,230
don't hear anyone in keynote saying you

00:02:20,370 --> 00:02:23,790
know we were actually doing things too

00:02:22,230 --> 00:02:25,500
fast and getting features into the hands

00:02:23,790 --> 00:02:27,360
of our end users a little too quickly so

00:02:25,500 --> 00:02:28,530
we decided to slow things down that's

00:02:27,360 --> 00:02:30,900
not what you hear in the keynotes it's

00:02:28,530 --> 00:02:32,610
obvious that what everyone is after is

00:02:30,900 --> 00:02:34,680
that rocket fuel right we're all looking

00:02:32,610 --> 00:02:37,200
for what it is that's going to give us

00:02:34,680 --> 00:02:40,260
the ability to go faster not only to go

00:02:37,200 --> 00:02:43,620
faster but to able to go fast and still

00:02:40,260 --> 00:02:46,049
innovate with confidence and what gives

00:02:43,620 --> 00:02:47,910
you that rocket fuel is the combination

00:02:46,049 --> 00:02:49,799
of different technologies and also

00:02:47,910 --> 00:02:53,970
processes and methodologies that support

00:02:49,799 --> 00:02:56,880
those technologies so I like to talk a

00:02:53,970 --> 00:02:58,560
lot about cloud native and what the

00:02:56,880 --> 00:03:00,000
characteristics of cloud native are and

00:02:58,560 --> 00:03:03,660
what companies that you would consider

00:03:00,000 --> 00:03:04,950
cloud native some of the just aspects of

00:03:03,660 --> 00:03:06,450
those companies and how they're doing

00:03:04,950 --> 00:03:08,810
what they do and I think that some of

00:03:06,450 --> 00:03:10,590
the aspects are you know building

00:03:08,810 --> 00:03:14,010
applications of the microservices

00:03:10,590 --> 00:03:15,420
architecture or having continuous

00:03:14,010 --> 00:03:16,440
integration continuous delivery and

00:03:15,420 --> 00:03:19,799
that's one that we're definitely and

00:03:16,440 --> 00:03:22,590
talked about a lot today you absolutely

00:03:19,799 --> 00:03:24,120
must must must automate your path to

00:03:22,590 --> 00:03:25,950
production this is something that we all

00:03:24,120 --> 00:03:28,709
know well I don't think this should come

00:03:25,950 --> 00:03:30,780
as a surprise anybody at this point but

00:03:28,709 --> 00:03:32,519
one of the core things that you're going

00:03:30,780 --> 00:03:34,889
to need in order to be successful or to

00:03:32,519 --> 00:03:37,650
be cloud native and to assist you on

00:03:34,889 --> 00:03:39,510
your digital transformation is to have

00:03:37,650 --> 00:03:41,280
high levels of automation in place and

00:03:39,510 --> 00:03:43,290
what that accomplishes is that

00:03:41,280 --> 00:03:47,670
automation will give you that confidence

00:03:43,290 --> 00:03:49,290
that confidence to make changes or to

00:03:47,670 --> 00:03:51,510
introduce new features without running

00:03:49,290 --> 00:03:53,670
the risk that it'll break other parts of

00:03:51,510 --> 00:03:56,790
your code so having automation in place

00:03:53,670 --> 00:03:59,280
is really the safety net that allows you

00:03:56,790 --> 00:04:00,870
to innovate at a rapid pace so we're

00:03:59,280 --> 00:04:02,489
going to talk about different methods of

00:04:00,870 --> 00:04:04,500
automation and different levels of

00:04:02,489 --> 00:04:08,639
automation that will give you that

00:04:04,500 --> 00:04:10,440
confidence and that security so first

00:04:08,639 --> 00:04:11,760
we're going to talk about concourse

00:04:10,440 --> 00:04:13,919
because we just mentioned that you

00:04:11,760 --> 00:04:15,239
absolutely have to automate your path to

00:04:13,919 --> 00:04:18,919
production if you even want to stand a

00:04:15,239 --> 00:04:20,940
chance at the for you know your digital

00:04:18,919 --> 00:04:22,919
transformation your digital journey at

00:04:20,940 --> 00:04:24,720
being cloud native automating your path

00:04:22,919 --> 00:04:26,850
to production it's the first step so

00:04:24,720 --> 00:04:31,680
we're going to talk about Concord

00:04:26,850 --> 00:04:34,380
concours was originally designed to as a

00:04:31,680 --> 00:04:37,380
tool for the deployment of Cloud Foundry

00:04:34,380 --> 00:04:40,680
and we're going to take a look at some

00:04:37,380 --> 00:04:43,500
of the constructs of Concours first one

00:04:40,680 --> 00:04:46,800
is resources these are the three main

00:04:43,500 --> 00:04:48,120
concepts within concourse before I

00:04:46,800 --> 00:04:51,480
actually dive in I wanted to do a quick

00:04:48,120 --> 00:04:53,250
poll of the audience who here has played

00:04:51,480 --> 00:04:54,600
with concourse or is currently using

00:04:53,250 --> 00:04:55,350
concourse just about everybody that's

00:04:54,600 --> 00:04:57,120
awesome

00:04:55,350 --> 00:04:58,830
we're at a cloud foundry summit so I

00:04:57,120 --> 00:05:00,060
imagine that just about everybody has

00:04:58,830 --> 00:05:03,090
heard about Bosh

00:05:00,060 --> 00:05:06,360
what about GCP has anyone using Google

00:05:03,090 --> 00:05:08,370
cloud platform awesome just wanted to

00:05:06,360 --> 00:05:10,950
get a sense of where we were in the

00:05:08,370 --> 00:05:12,810
audience so jumping back into concourse

00:05:10,950 --> 00:05:14,550
there's three main concepts within

00:05:12,810 --> 00:05:18,980
concourse and there are resources jobs

00:05:14,550 --> 00:05:21,030
and tasks resources you can think of as

00:05:18,980 --> 00:05:23,520
anything that can be versioned and that

00:05:21,030 --> 00:05:25,650
you can pull down so a great example of

00:05:23,520 --> 00:05:27,900
a resource is a github repo we're going

00:05:25,650 --> 00:05:31,530
to take a look at an example later on of

00:05:27,900 --> 00:05:33,060
a Concours pipeline and within that

00:05:31,530 --> 00:05:35,730
Concours pipeline we're just pulling

00:05:33,060 --> 00:05:39,240
down a github repo and from that github

00:05:35,730 --> 00:05:42,600
repo we are running tasks tasks are

00:05:39,240 --> 00:05:44,370
usually described within a job a job is

00:05:42,600 --> 00:05:47,850
all of these things really come together

00:05:44,370 --> 00:05:50,580
to make your overall pipeline so a task

00:05:47,850 --> 00:05:52,380
is usually a shell script or some script

00:05:50,580 --> 00:05:54,390
so that is run that accomplishes you

00:05:52,380 --> 00:05:58,380
know a single task a job will describe

00:05:54,390 --> 00:06:03,570
how tasks and resources interact with

00:05:58,380 --> 00:06:04,890
each other if we talk about Bosh those

00:06:03,570 --> 00:06:06,540
are the overarching concepts within

00:06:04,890 --> 00:06:09,320
Concours if we talk about the main

00:06:06,540 --> 00:06:12,960
concepts within Bosh we have stem cells

00:06:09,320 --> 00:06:16,020
releases and deployments stem cells are

00:06:12,960 --> 00:06:19,140
the base OS image that Bosh uses to

00:06:16,020 --> 00:06:22,020
create VMs and it's a OS image but it

00:06:19,140 --> 00:06:24,240
also includes basic utilities and an

00:06:22,020 --> 00:06:26,160
agent and the agent is responsible for a

00:06:24,240 --> 00:06:29,280
number of functions not only for sending

00:06:26,160 --> 00:06:32,130
out a heartbeat of the VM but when Bosh

00:06:29,280 --> 00:06:35,100
is deploying a distributed system the

00:06:32,130 --> 00:06:38,220
agent will go to the blob store to pull

00:06:35,100 --> 00:06:40,389
down the packages to deploy the install

00:06:38,220 --> 00:06:45,080
the specific software on those

00:06:40,389 --> 00:06:47,930
so the stem cell is basically that OS

00:06:45,080 --> 00:06:50,630
image that bossboss uses to create your

00:06:47,930 --> 00:06:53,720
PM's of your deployment the release

00:06:50,630 --> 00:06:55,639
describes all of the packages and the

00:06:53,720 --> 00:06:59,150
start/stop scripts that are needed for

00:06:55,639 --> 00:07:02,630
whatever you are deploying Bosch was

00:06:59,150 --> 00:07:04,220
originally the tool that was responsible

00:07:02,630 --> 00:07:06,680
for the deployment and lifecycle

00:07:04,220 --> 00:07:08,660
management of cloud foundry but Bosch in

00:07:06,680 --> 00:07:11,000
general is a great tool chain for

00:07:08,660 --> 00:07:12,470
deployment and lifecycle management of

00:07:11,000 --> 00:07:14,450
any kind of large-scale distributed

00:07:12,470 --> 00:07:16,220
system in this case obviously we're

00:07:14,450 --> 00:07:19,310
going to deploy Concours so there are

00:07:16,220 --> 00:07:20,990
many uses outside of cloud foundry the

00:07:19,310 --> 00:07:23,240
Bosch can be used for it it's really

00:07:20,990 --> 00:07:25,490
good for any large-scale distributed

00:07:23,240 --> 00:07:27,290
system Bosch is really going to give you

00:07:25,490 --> 00:07:28,850
the capabilities that you need in order

00:07:27,290 --> 00:07:32,960
to handle some of the challenges that

00:07:28,850 --> 00:07:35,120
those large systems will present so you

00:07:32,960 --> 00:07:38,449
start with a SEM cell and then you layer

00:07:35,120 --> 00:07:40,160
your release on it and a release is you

00:07:38,449 --> 00:07:41,630
know again whatever you are going to be

00:07:40,160 --> 00:07:45,229
deploying the software that you are

00:07:41,630 --> 00:07:48,560
actually using Bosch to deploy and a

00:07:45,229 --> 00:07:51,740
deployment then describes the VMS that

00:07:48,560 --> 00:07:54,710
will get created with that software and

00:07:51,740 --> 00:07:57,770
the deployment requires a manifest Bosch

00:07:54,710 --> 00:08:00,110
operates on the notion of manifests and

00:07:57,770 --> 00:08:07,849
a manifest describes the deployments

00:08:00,110 --> 00:08:09,530
that you will end up creating so we see

00:08:07,849 --> 00:08:12,349
all these things together I want to give

00:08:09,530 --> 00:08:15,919
you a high level overview of how I've

00:08:12,349 --> 00:08:17,479
set up what we're going to walk through

00:08:15,919 --> 00:08:19,490
so first let's take a look at kind of a

00:08:17,479 --> 00:08:21,560
high level overview of all of the things

00:08:19,490 --> 00:08:24,320
that you need in order to use Bosch to

00:08:21,560 --> 00:08:26,870
deploy Concours onto GCP and we're going

00:08:24,320 --> 00:08:29,660
to start with our GCP environments so I

00:08:26,870 --> 00:08:30,620
have a DCP account and the first thing

00:08:29,660 --> 00:08:32,360
that you're going to need is you're

00:08:30,620 --> 00:08:34,520
going to need a project that's pretty

00:08:32,360 --> 00:08:36,919
basic step one for anything you're going

00:08:34,520 --> 00:08:39,409
to want to do with GCP within that

00:08:36,919 --> 00:08:41,479
you're going to want to have a user that

00:08:39,409 --> 00:08:42,620
is an owner of that project and you're

00:08:41,479 --> 00:08:46,130
going to want to create a service

00:08:42,620 --> 00:08:50,000
account that has editor access for your

00:08:46,130 --> 00:08:52,730
project once you have your GCP

00:08:50,000 --> 00:08:54,230
environment configured these are the

00:08:52,730 --> 00:08:57,410
steps that we're going to walk

00:08:54,230 --> 00:08:58,880
in order to get Bosch up and running the

00:08:57,410 --> 00:09:01,220
first thing is that we're going to use

00:08:58,880 --> 00:09:02,720
terraform to create the require the

00:09:01,220 --> 00:09:04,190
required infrastructure that Bosch is

00:09:02,720 --> 00:09:05,600
going to need and the first step is

00:09:04,190 --> 00:09:08,300
creating the Bosch and VM that will

00:09:05,600 --> 00:09:10,280
become your Bosch director the Bosch

00:09:08,300 --> 00:09:12,470
director is a server that orchestrates

00:09:10,280 --> 00:09:14,420
your Bosch deployments so the Bosch

00:09:12,470 --> 00:09:17,900
director is really the boss you can

00:09:14,420 --> 00:09:20,570
think of and so the first step in

00:09:17,900 --> 00:09:22,250
deploying Bosch is to get your Bosch

00:09:20,570 --> 00:09:25,340
director set up so we're going to use

00:09:22,250 --> 00:09:29,090
terraform in order to stand up the Bosch

00:09:25,340 --> 00:09:31,370
director once the director is stood up

00:09:29,090 --> 00:09:34,310
then we can turn our attention towards

00:09:31,370 --> 00:09:35,810
deploying concours so we're going to

00:09:34,310 --> 00:09:38,000
deploy our Bosch director when on the

00:09:35,810 --> 00:09:40,820
infrastructure that terraform has set up

00:09:38,000 --> 00:09:43,400
for us then once we have the director

00:09:40,820 --> 00:09:45,560
we're going to upload the stem cells and

00:09:43,400 --> 00:09:48,380
then upload the releases that concours

00:09:45,560 --> 00:09:50,630
will require once we have those things

00:09:48,380 --> 00:09:53,570
uploaded to the Bosch director it's as

00:09:50,630 --> 00:09:55,010
simple as uploading one additional file

00:09:53,570 --> 00:09:57,770
which is your cloud config the cloud

00:09:55,010 --> 00:10:00,350
config is basically all of your ayahs

00:09:57,770 --> 00:10:04,970
specific configuration that you will

00:10:00,350 --> 00:10:06,950
need so previously all all of your cloud

00:10:04,970 --> 00:10:08,870
configuration was in a single file which

00:10:06,950 --> 00:10:11,000
could be very problematic if you were

00:10:08,870 --> 00:10:13,130
using multiple eise's which you know

00:10:11,000 --> 00:10:15,230
Bosch is definitely the tool and that

00:10:13,130 --> 00:10:18,110
gives you the ability to be I as

00:10:15,230 --> 00:10:20,750
agnostic to have multiple clouds that

00:10:18,110 --> 00:10:22,250
you're deploying your applications to so

00:10:20,750 --> 00:10:24,080
if you're deploying your applications to

00:10:22,250 --> 00:10:26,120
multiple clouds it made sense within

00:10:24,080 --> 00:10:28,580
Bosch to have separate cloud configs

00:10:26,120 --> 00:10:31,670
that would contain I a specific

00:10:28,580 --> 00:10:33,350
configuration so you will upload and

00:10:31,670 --> 00:10:35,660
Bosch will update the cloud

00:10:33,350 --> 00:10:37,970
configuration and then you will simply

00:10:35,660 --> 00:10:43,460
deploy Concours with the simple command

00:10:37,970 --> 00:10:46,610
Bosch deploy so that is a high level of

00:10:43,460 --> 00:10:48,080
what of the process that you would go

00:10:46,610 --> 00:10:51,650
through in order to use Bosch to deploy

00:10:48,080 --> 00:10:55,210
a concours on to DCP and so now we're

00:10:51,650 --> 00:10:55,210
going to take a quick look at that

00:10:56,280 --> 00:11:01,080
[Music]

00:11:12,630 --> 00:11:17,020
okay so the first thing that I'm going

00:11:14,650 --> 00:11:19,300
to do is I'm going to SSH to my Bosch

00:11:17,020 --> 00:11:22,480
Bastian and what we're going to look at

00:11:19,300 --> 00:11:27,570
first is we're going to look at the

00:11:22,480 --> 00:11:27,570
manifest file for our Bosch director

00:11:38,130 --> 00:11:46,300
initially I had an ER B file and what

00:11:45,069 --> 00:11:49,660
this is essentially doing is this is

00:11:46,300 --> 00:11:52,930
capturing the environment variables and

00:11:49,660 --> 00:11:55,149
then I just populate my manifest Miami

00:11:52,930 --> 00:11:57,069
file with the values that I captured

00:11:55,149 --> 00:12:01,720
here in ER b file but we can take a look

00:11:57,069 --> 00:12:03,180
at this version this time so if we take

00:12:01,720 --> 00:12:09,490
I mentioned that a manifest will

00:12:03,180 --> 00:12:12,040
describe the the a manifest describes

00:12:09,490 --> 00:12:15,190
how Bosh will create the resulting

00:12:12,040 --> 00:12:20,290
resource and so if we take a look at the

00:12:15,190 --> 00:12:21,339
Bosh director manifest we see a number

00:12:20,290 --> 00:12:23,560
of things we're going to talk about some

00:12:21,339 --> 00:12:27,579
of the things that are consistent across

00:12:23,560 --> 00:12:30,279
all manifests when you see here cloud

00:12:27,579 --> 00:12:33,100
properties that is always what is unique

00:12:30,279 --> 00:12:36,370
to your the is that you may be using so

00:12:33,100 --> 00:12:38,860
in this case I'm using DCP we're always

00:12:36,370 --> 00:12:41,050
going to have the notion of the releases

00:12:38,860 --> 00:12:42,730
so this is the manifest for my boss

00:12:41,050 --> 00:12:45,009
director so the releases that I'm using

00:12:42,730 --> 00:12:47,529
here are Bosch and the Bosch Google CPI

00:12:45,009 --> 00:12:50,829
the CPI is the cloud provider interface

00:12:47,529 --> 00:12:52,630
and that is the API that Bosch uses to

00:12:50,829 --> 00:12:55,630
communicate with your underlying ayahs

00:12:52,630 --> 00:12:58,269
so we have to have that in place so that

00:12:55,630 --> 00:13:00,130
when we go to deploy concours Bosch has

00:12:58,269 --> 00:13:02,380
a communication channel to communicate

00:13:00,130 --> 00:13:04,839
with your underlying is to create the

00:13:02,380 --> 00:13:07,480
required resources that we need for

00:13:04,839 --> 00:13:12,399
whatever distributed system that we are

00:13:07,480 --> 00:13:14,889
deploying so we see our releases here we

00:13:12,399 --> 00:13:17,639
also see the URL of the release this is

00:13:14,889 --> 00:13:21,519
where you can access that release

00:13:17,639 --> 00:13:25,509
release can also and the Bosch team

00:13:21,519 --> 00:13:28,089
manages all of well bot release can be

00:13:25,509 --> 00:13:33,040
available as either a tar tar ball or as

00:13:28,089 --> 00:13:36,730
a URL as you see here then we have our

00:13:33,040 --> 00:13:39,670
resource pools so this is what ends up

00:13:36,730 --> 00:13:44,500
getting created for us once we hit Bosch

00:13:39,670 --> 00:13:47,410
deploy we see you know our networks and

00:13:44,500 --> 00:13:49,870
then we have the number of jobs so with

00:13:47,410 --> 00:13:50,980
Bosch a number of things the get

00:13:49,870 --> 00:13:53,260
deployed and so there

00:13:50,980 --> 00:13:55,930
components in the Bosch architecture and

00:13:53,260 --> 00:13:58,329
you can really see those here you have a

00:13:55,930 --> 00:13:59,920
health monitor you have the CPI again

00:13:58,329 --> 00:14:02,380
that's the way that Bosch communicates

00:13:59,920 --> 00:14:06,360
with the underlying ayahs health monitor

00:14:02,380 --> 00:14:09,790
is the tool or the way that Bosch

00:14:06,360 --> 00:14:11,500
understands the health of vm's and

00:14:09,790 --> 00:14:13,060
understands if they are online and

00:14:11,500 --> 00:14:15,730
healthy or if they are down it need to

00:14:13,060 --> 00:14:18,730
be resurrected the blobstore and

00:14:15,730 --> 00:14:22,690
Postgres database to persist both vm

00:14:18,730 --> 00:14:24,339
states the blobstore holds the packages

00:14:22,690 --> 00:14:27,970
and that's where the agent will actually

00:14:24,339 --> 00:14:29,620
go to when VMs are being created the

00:14:27,970 --> 00:14:31,300
agent will go to the blob store and grab

00:14:29,620 --> 00:14:33,430
the packages to install the necessary

00:14:31,300 --> 00:14:36,639
software on the different VMs that are

00:14:33,430 --> 00:14:39,250
being created the database the Postgres

00:14:36,639 --> 00:14:44,620
database is just to persist the state of

00:14:39,250 --> 00:14:49,320
the VMS and then there are you know

00:14:44,620 --> 00:14:53,550
different network configurations and

00:14:49,320 --> 00:14:56,589
things like that that you can see here

00:14:53,550 --> 00:14:59,560
again we specify here what our cloud

00:14:56,589 --> 00:15:01,149
provider is we're using the Google CPI

00:14:59,560 --> 00:15:06,699
because we're communicating with Google

00:15:01,149 --> 00:15:10,540
cloud platform so that is a look at the

00:15:06,699 --> 00:15:16,199
Bosch manifest now I want to take a

00:15:10,540 --> 00:15:16,199
quick look at the Concours manifest

00:15:21,360 --> 00:15:26,860
so for the Concours manifests we see in

00:15:25,089 --> 00:15:28,980
the releases that we have two things we

00:15:26,860 --> 00:15:32,589
have Concours and we have garden run see

00:15:28,980 --> 00:15:34,480
again for the instance groups we see

00:15:32,589 --> 00:15:36,720
something very similar that we did in

00:15:34,480 --> 00:15:39,399
the Bosch manifest every manifest has

00:15:36,720 --> 00:15:47,459
releases and instance groups and defines

00:15:39,399 --> 00:15:49,360
the jobs this this instance group is for

00:15:47,459 --> 00:15:51,759
the web interface that will be

00:15:49,360 --> 00:15:54,879
interacting with for our once we have

00:15:51,759 --> 00:15:58,209
concourse setup so you can see here that

00:15:54,879 --> 00:16:01,600
we have our the external URL that will

00:15:58,209 --> 00:16:04,389
access concourse from how you

00:16:01,600 --> 00:16:07,360
authenticate against it and then there

00:16:04,389 --> 00:16:08,860
are other jobs that will that Bosch will

00:16:07,360 --> 00:16:11,709
execute in order to stand up the

00:16:08,860 --> 00:16:23,860
necessary components that concourse will

00:16:11,709 --> 00:16:28,170
require last thing is I wanted to take a

00:16:23,860 --> 00:16:33,160
look at the cloud config so again this

00:16:28,170 --> 00:16:36,970
is all of the ayahs specific properties

00:16:33,160 --> 00:16:39,430
that Bosch will use in order to set up

00:16:36,970 --> 00:16:43,000
the infrastructure for your particular

00:16:39,430 --> 00:16:45,519
ayah so initially when you are setting

00:16:43,000 --> 00:16:48,160
up your workstation to deploy concourse

00:16:45,519 --> 00:16:50,860
or to deploy your boss director excuse

00:16:48,160 --> 00:16:54,100
me you will need to explicitly export

00:16:50,860 --> 00:16:56,470
your project ID and different compute

00:16:54,100 --> 00:16:58,120
zone and regions in order for those to

00:16:56,470 --> 00:17:03,880
be available via your environment so

00:16:58,120 --> 00:17:08,589
those are being captured here and then

00:17:03,880 --> 00:17:09,939
you define the specific VM types and the

00:17:08,589 --> 00:17:13,980
different VM extensions that you will

00:17:09,939 --> 00:17:17,409
need for the VMs that are being created

00:17:13,980 --> 00:17:21,280
within compilation is where you will put

00:17:17,409 --> 00:17:22,720
your cloud properties which are again

00:17:21,280 --> 00:17:29,320
just the properties that are specific to

00:17:22,720 --> 00:17:34,179
your underlying ayahs so that's those

00:17:29,320 --> 00:17:39,580
look at the manifests for each of those

00:17:34,179 --> 00:17:42,129
things once you have your concourse once

00:17:39,580 --> 00:17:44,769
you have your concourse manifest set up

00:17:42,129 --> 00:17:47,499
after you've uploaded your stem cell and

00:17:44,769 --> 00:17:50,259
you release it's as simple as the

00:17:47,499 --> 00:17:52,240
command bosh deploy and Bosch will kick

00:17:50,259 --> 00:17:55,629
off creating all the necessary VMs with

00:17:52,240 --> 00:17:57,759
the required software for whatever your

00:17:55,629 --> 00:18:00,460
distributed system may be in this case

00:17:57,759 --> 00:18:04,269
again it's concourse so once we have

00:18:00,460 --> 00:18:06,720
that all up and running then you are

00:18:04,269 --> 00:18:10,539
free to use concourse so I have a

00:18:06,720 --> 00:18:13,509
concourse pipeline set up over here for

00:18:10,539 --> 00:18:18,009
you and I wanted to kick it off because

00:18:13,509 --> 00:18:19,720
I have a little application that's we're

00:18:18,009 --> 00:18:21,999
going to run through this pipeline so I

00:18:19,720 --> 00:18:24,820
have some code here on my local branch

00:18:21,999 --> 00:18:26,980
of my or on the branch of my local

00:18:24,820 --> 00:18:32,440
machine it's a head of my master buy one

00:18:26,980 --> 00:18:35,679
commit so I'm going to push this code up

00:18:32,440 --> 00:18:41,470
to my github repo while that's happening

00:18:35,679 --> 00:18:46,029
I wanted to take a or excuse me so that

00:18:41,470 --> 00:18:49,450
is going to kick off our concourse

00:18:46,029 --> 00:18:51,700
pipeline and while that is kicking off I

00:18:49,450 --> 00:19:06,840
wanted to just take a look at that

00:18:51,700 --> 00:19:09,669
pipeline okay so we're gonna watch that

00:19:06,840 --> 00:19:12,730
and in a minute we should see that it is

00:19:09,669 --> 00:19:13,779
going to start pulsing yellow and notice

00:19:12,730 --> 00:19:14,950
that there are a number of hands in the

00:19:13,779 --> 00:19:19,389
room so it seems like we have a lot of

00:19:14,950 --> 00:19:20,619
concourse users out there so we're all

00:19:19,389 --> 00:19:22,869
familiar with what this is going to look

00:19:20,619 --> 00:19:26,740
like once our pipeline has picked up

00:19:22,869 --> 00:19:28,269
that our repo has changed so while we're

00:19:26,740 --> 00:19:30,399
waiting for that there it goes kicks off

00:19:28,269 --> 00:19:32,649
and we're going to take a look at the

00:19:30,399 --> 00:19:35,320
pipeline so this as you can tell is a

00:19:32,649 --> 00:19:38,559
very baby pipeline there's not a lot

00:19:35,320 --> 00:19:44,039
going on here and that is intentional to

00:19:38,559 --> 00:19:45,990
highlight exactly what the different

00:19:44,039 --> 00:19:48,100
components that we're interacting with

00:19:45,990 --> 00:19:49,900
so as I mentioned

00:19:48,100 --> 00:19:52,450
concours the concepts that come together

00:19:49,900 --> 00:19:54,820
to create a concours pipeline or jobs

00:19:52,450 --> 00:19:57,790
resources and tasks so if we take a look

00:19:54,820 --> 00:19:59,830
at my pipeline over here on your left

00:19:57,790 --> 00:20:04,480
the first thing that I'm defining is my

00:19:59,830 --> 00:20:05,830
job and in this job I have two well

00:20:04,480 --> 00:20:07,720
three things that are really going on

00:20:05,830 --> 00:20:10,180
the first is that I'm going to get my

00:20:07,720 --> 00:20:14,290
get repo the first resource that I am

00:20:10,180 --> 00:20:17,080
using is the github resource and I am

00:20:14,290 --> 00:20:20,950
able to parameterize my repo that I'm

00:20:17,080 --> 00:20:24,430
using the branch and then my private key

00:20:20,950 --> 00:20:27,040
so I have a trigger here that's set to

00:20:24,430 --> 00:20:29,950
true so Concours is going to wait for my

00:20:27,040 --> 00:20:32,290
github repo to pick up a change so I

00:20:29,950 --> 00:20:34,450
just committed a change and so concourse

00:20:32,290 --> 00:20:36,130
has that trigger set so it's going to

00:20:34,450 --> 00:20:38,470
kick off as soon as there's a change to

00:20:36,130 --> 00:20:41,380
my source code once that change is

00:20:38,470 --> 00:20:43,510
picked up we're going to kick off a task

00:20:41,380 --> 00:20:46,540
I have a task here called build artifact

00:20:43,510 --> 00:20:49,410
it is a very simple task it's just

00:20:46,540 --> 00:20:51,940
pointing to a shell script which

00:20:49,410 --> 00:20:53,850
basically just takes my this is a spring

00:20:51,940 --> 00:20:56,830
boot application so it just takes my

00:20:53,850 --> 00:21:01,570
Java app and packages it up into an

00:20:56,830 --> 00:21:06,310
artifact once I have that artifact which

00:21:01,570 --> 00:21:09,130
is saved then I can use the CF resource

00:21:06,310 --> 00:21:10,510
to deploy that application I have an

00:21:09,130 --> 00:21:12,820
instance of cloud foundry running so I'm

00:21:10,510 --> 00:21:14,410
going to deploy that application to

00:21:12,820 --> 00:21:17,410
cloud foundry

00:21:14,410 --> 00:21:19,720
so the CF resource is awesome because it

00:21:17,410 --> 00:21:22,840
handles everything for me so as a

00:21:19,720 --> 00:21:24,430
developer I don't have to interact with

00:21:22,840 --> 00:21:26,530
Cloud Foundry at all concours is

00:21:24,430 --> 00:21:28,780
automating and doing all of that for me

00:21:26,530 --> 00:21:31,540
so it's handling you know targeting my

00:21:28,780 --> 00:21:33,430
instance of cloud foundry authenticating

00:21:31,540 --> 00:21:35,290
with my username and my past password

00:21:33,430 --> 00:21:37,240
targeting my org and MySpace and then

00:21:35,290 --> 00:21:39,810
going through you know issuing the

00:21:37,240 --> 00:21:43,090
commands that are necessary in order to

00:21:39,810 --> 00:21:44,500
deploy my application so it picks up the

00:21:43,090 --> 00:21:49,180
manifest that I'm using for that

00:21:44,500 --> 00:21:57,910
application and pushes that out to Cloud

00:21:49,180 --> 00:22:00,820
Foundry for me so if we again this is a

00:21:57,910 --> 00:22:01,929
very small pipeline Concours is great

00:22:00,820 --> 00:22:05,169
because it can be used for

00:22:01,929 --> 00:22:08,830
or things big and small can be used for

00:22:05,169 --> 00:22:11,619
you know small little this is really two

00:22:08,830 --> 00:22:13,360
very small three very small tasks or it

00:22:11,619 --> 00:22:15,820
can be used you know on mega scale where

00:22:13,360 --> 00:22:17,529
you can deploy to multiple different

00:22:15,820 --> 00:22:20,769
clouds you can do Fanning you can do

00:22:17,529 --> 00:22:23,289
fan-out you can do rolling deployments

00:22:20,769 --> 00:22:25,330
it's really powerful in terms of the

00:22:23,289 --> 00:22:28,570
capabilities of Concours so if you want

00:22:25,330 --> 00:22:33,330
you know to see an example of concours

00:22:28,570 --> 00:22:37,720
at scale this is the concours pipeline

00:22:33,330 --> 00:22:41,169
for concours so I am sure that you all

00:22:37,720 --> 00:22:43,659
have come here before CI concours CI

00:22:41,169 --> 00:22:47,139
it's really awesome that you can kind of

00:22:43,659 --> 00:22:49,600
see this live see it in action as it's

00:22:47,139 --> 00:22:52,799
happening and what's great about

00:22:49,600 --> 00:22:56,679
concours is it's very elegant in its UI

00:22:52,799 --> 00:22:58,779
you know has the yellow pulsing to light

00:22:56,679 --> 00:23:00,850
to let you know that a job is in

00:22:58,779 --> 00:23:02,470
progress this allows developers to have

00:23:00,850 --> 00:23:03,999
immediate feedback on the overall state

00:23:02,470 --> 00:23:05,980
of their applications as they're moving

00:23:03,999 --> 00:23:07,299
through this pipeline so if there's

00:23:05,980 --> 00:23:08,889
something you know that's big and red

00:23:07,299 --> 00:23:12,009
they know that they can drop everything

00:23:08,889 --> 00:23:16,830
and have to go and fix whatever it is

00:23:12,009 --> 00:23:19,629
broke that pipeline so concours at scale

00:23:16,830 --> 00:23:25,769
definitely has more going on and the

00:23:19,629 --> 00:23:32,919
little pipeline that I'm using here and

00:23:25,769 --> 00:23:35,320
if we jump into my output here this is

00:23:32,919 --> 00:23:37,649
the part of concourse that is actually

00:23:35,320 --> 00:23:40,299
interfacing with Cloud Foundry and

00:23:37,649 --> 00:23:46,269
deploying my application for me so I'm

00:23:40,299 --> 00:23:50,889
going to grab my URL of my actual

00:23:46,269 --> 00:23:54,610
application and I'm going to pop it in

00:23:50,889 --> 00:23:58,269
here and that's actually all I have for

00:23:54,610 --> 00:24:00,909
you so if you have any questions I will

00:23:58,269 --> 00:24:02,890
be around and thank you all very much I

00:24:00,909 --> 00:24:06,959
appreciate your time

00:24:02,890 --> 00:24:06,959

YouTube URL: https://www.youtube.com/watch?v=zqmx3RhoQbk


