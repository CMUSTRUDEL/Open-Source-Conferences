Title: Rapid API Prototyping with LoopBack
Publication date: 2017-06-22
Playlist: Cloud Foundry Summit Silicon Valley 2017
Description: 
	Rapid API Prototyping with LoopBack - Erin McKean, IBM   

In this session, Erin will demonstrate how the open source LoopBack framework can be used to rapidly prototype, and deploy, REST APIs. LoopBack is easy to use and extremely configurable, making it useful in nearly any environment. Erin will demonstrate how to install, start up, and use LoopBack as well as how APIs are defined and customized. Multiple examples will be shown to help the audience see how LoopBack can be used in production.

Erin McKean
IBM
Developer Evangelist
Cal-i-forn-i-a
Twitter Tweet  Websiteerinmckean.com
Erin McKean loves talking about APIs to anyone who will stand still long enough. Before Node.js, she dabbled in Ruby, HyperCard, Perl, and Omnimark, and still finds herself writing bash scripts on a regular basis. Erin is also the founder of Wordnik.com, which has a lot of fun APIs! In her spare time she sews clothes and makes Twitterbots.
Captions: 
	00:00:00,030 --> 00:00:05,460
so hi I'm Aaron McKean I am in that

00:00:03,810 --> 00:00:07,519
grayed out text that you cannot read a

00:00:05,460 --> 00:00:10,710
developer evangelist for loop back and

00:00:07,519 --> 00:00:13,170
loop back is an open source node

00:00:10,710 --> 00:00:18,090
framework for making api's and at which

00:00:13,170 --> 00:00:22,010
I will now talk about at length so the

00:00:18,090 --> 00:00:24,449
goal of this talk is to go on Jeopardy

00:00:22,010 --> 00:00:26,519
so I wanted to prototype an API that

00:00:24,449 --> 00:00:29,939
would help me learn jeopardy questions I

00:00:26,519 --> 00:00:34,739
would like to beat ibm's watson i like

00:00:29,939 --> 00:00:37,559
to aim high and win money to do this i

00:00:34,739 --> 00:00:42,290
need an api obviously because anything

00:00:37,559 --> 00:00:46,770
worth doing needs an api i need data and

00:00:42,290 --> 00:00:49,170
that's about it so i think it's easy to

00:00:46,770 --> 00:00:53,969
build an API to prototype any api

00:00:49,170 --> 00:00:56,520
against a data set with loopback

00:00:53,969 --> 00:00:58,230
and bluemix which I'll just touch on in

00:00:56,520 --> 00:01:01,920
this talk which of course you can deploy

00:00:58,230 --> 00:01:03,300
to using cloud foundry and when I say

00:01:01,920 --> 00:01:04,979
it's easy I mean it's easy to make an

00:01:03,300 --> 00:01:07,920
API it's not easy to actually win on

00:01:04,979 --> 00:01:09,960
Jeopardy so let's talk a little bit

00:01:07,920 --> 00:01:12,720
about what loopback is how many people

00:01:09,960 --> 00:01:16,979
have used leap back in this room just me

00:01:12,720 --> 00:01:18,720
then Oh somebody else so how many people

00:01:16,979 --> 00:01:24,060
in this room consider themselves node

00:01:18,720 --> 00:01:26,280
developers great and have any just this

00:01:24,060 --> 00:01:27,420
is not really directly related but how

00:01:26,280 --> 00:01:33,360
many people in this room have used

00:01:27,420 --> 00:01:35,070
bluemix and or api connect all right so

00:01:33,360 --> 00:01:37,680
loopback is a tool for rapidly

00:01:35,070 --> 00:01:40,680
generating REST API as with node it is

00:01:37,680 --> 00:01:42,840
open source and maintained by IBM it's

00:01:40,680 --> 00:01:44,850
based on expressive people used Express

00:01:42,840 --> 00:01:48,450
that's true yeah Express is very well

00:01:44,850 --> 00:01:50,909
known it's free to use it costs you zero

00:01:48,450 --> 00:01:52,530
to use loopback and you can deploy a

00:01:50,909 --> 00:01:53,970
loopback application anywhere you can

00:01:52,530 --> 00:01:55,530
deploy a node application because a

00:01:53,970 --> 00:01:57,630
loopback application is a node

00:01:55,530 --> 00:01:59,670
application and I think that the number

00:01:57,630 --> 00:02:02,250
one reason to use it back is that it's

00:01:59,670 --> 00:02:04,890
very very fast to develop an application

00:02:02,250 --> 00:02:07,829
with Liebeck I like to call the back

00:02:04,890 --> 00:02:11,300
cake mix for api's C add your data and

00:02:07,829 --> 00:02:14,069
you stir and then you have api's and

00:02:11,300 --> 00:02:15,569
just as with cake mix you

00:02:14,069 --> 00:02:17,579
could make the standard cake right out

00:02:15,569 --> 00:02:19,290
of the box you can also with loopback

00:02:17,579 --> 00:02:20,999
make a fancy cake you can take the

00:02:19,290 --> 00:02:24,060
basically back app that you get and you

00:02:20,999 --> 00:02:25,290
can customize it in all sorts of ways it

00:02:24,060 --> 00:02:26,670
doesn't mean that you can't make the

00:02:25,290 --> 00:02:28,670
cake of your dreams it just means you

00:02:26,670 --> 00:02:30,810
can make the cake of your dreams faster

00:02:28,670 --> 00:02:32,310
and the reason I like to use the cake

00:02:30,810 --> 00:02:34,889
mix metaphors how many people like to

00:02:32,310 --> 00:02:37,019
eat cake I like to eat cake how many

00:02:34,889 --> 00:02:39,840
people like to bake cake as much as you

00:02:37,019 --> 00:02:41,790
like to eat cake very few people like to

00:02:39,840 --> 00:02:43,200
bake as much as they like to eat so with

00:02:41,790 --> 00:02:46,469
Lube back you get to the cake stage

00:02:43,200 --> 00:02:48,959
faster with less baking so this is a

00:02:46,469 --> 00:02:51,450
real world API that I'll talk about so

00:02:48,959 --> 00:02:54,689
here's the data so I just happen to have

00:02:51,450 --> 00:02:57,269
two hundred thousand plus questions from

00:02:54,689 --> 00:02:58,709
the show Jeopardy in JSON and the reason

00:02:57,269 --> 00:03:00,780
I have this data is because there is a

00:02:58,709 --> 00:03:03,269
wonderful tiny letter that comes out

00:03:00,780 --> 00:03:07,250
almost weekly called data is plural in

00:03:03,269 --> 00:03:11,250
which the author of this tiny letter

00:03:07,250 --> 00:03:13,109
sends links to open data sets that you

00:03:11,250 --> 00:03:16,949
can download and play with and it's

00:03:13,109 --> 00:03:18,659
everything from climate data to there's

00:03:16,949 --> 00:03:20,699
another database I like to use which is

00:03:18,659 --> 00:03:23,009
all of the codes that are on the

00:03:20,699 --> 00:03:24,780
stickers on fruit and vegetables in the

00:03:23,009 --> 00:03:27,569
grocery store that's an open data set

00:03:24,780 --> 00:03:31,049
that you can play with so data is plural

00:03:27,569 --> 00:03:33,090
except me a link to this data set it was

00:03:31,049 --> 00:03:34,680
scraped by a dude on reddit and it was

00:03:33,090 --> 00:03:39,079
probably the first time that I've ever

00:03:34,680 --> 00:03:41,759
been thankful for a dude on reddit but

00:03:39,079 --> 00:03:45,239
so this data has a really nice simple

00:03:41,759 --> 00:03:48,299
schema very straightforward great fun

00:03:45,239 --> 00:03:49,680
data set to play with and I've been

00:03:48,299 --> 00:03:51,180
keeping it in because I'm an OU

00:03:49,680 --> 00:03:55,500
developer and that's where no developers

00:03:51,180 --> 00:03:56,939
tend to keep stuff so in order to kind

00:03:55,500 --> 00:03:58,650
of if you wanted to follow along which

00:03:56,939 --> 00:04:01,469
you don't have to do this is kind of

00:03:58,650 --> 00:04:03,299
your setup this is what you need to

00:04:01,469 --> 00:04:07,590
build this kind of particular flavor of

00:04:03,299 --> 00:04:10,439
API node NPM I also really like using

00:04:07,590 --> 00:04:12,239
nvm if you haven't used nvm the node

00:04:10,439 --> 00:04:14,819
version manager lets you switch between

00:04:12,239 --> 00:04:17,609
different versions of node you know on

00:04:14,819 --> 00:04:19,500
demand if you used a similar one for

00:04:17,609 --> 00:04:21,180
Ruby it's the same thing but it's great

00:04:19,500 --> 00:04:24,000
if you want to try out newer versions of

00:04:21,180 --> 00:04:24,780
node while not blowing away your current

00:04:24,000 --> 00:04:27,420
nodes

00:04:24,780 --> 00:04:32,670
local and then I'll show you how

00:04:27,420 --> 00:04:36,800
it works on bluemix as well okay

00:04:32,670 --> 00:04:42,570
so let's go ahead and do this live

00:04:36,800 --> 00:04:43,140
hopefully let's go back to you here we

00:04:42,570 --> 00:04:46,170
go

00:04:43,140 --> 00:04:46,650
is this big enough for folks people in

00:04:46,170 --> 00:04:51,270
the back

00:04:46,650 --> 00:04:54,090
it's just readable awesome okay so let

00:04:51,270 --> 00:04:58,110
me get out of this start with a nice

00:04:54,090 --> 00:05:01,500
clean console so I have already

00:04:58,110 --> 00:05:04,050
installed the loopback CLI it's just MPM

00:05:01,500 --> 00:05:06,030
install loopback CLI if you've ever

00:05:04,050 --> 00:05:08,720
installed a new module there is nothing

00:05:06,030 --> 00:05:11,720
different about it install it globally

00:05:08,720 --> 00:05:14,130
so now I have access to the lead back up

00:05:11,720 --> 00:05:16,410
scaffolding the CLI for scaffolding and

00:05:14,130 --> 00:05:18,540
I'm just gonna make myself an app and

00:05:16,410 --> 00:05:20,520
we're gonna see our friendly yeoman

00:05:18,540 --> 00:05:21,990
generator here and he is going to very

00:05:20,520 --> 00:05:23,700
helpfully remind us that what we're

00:05:21,990 --> 00:05:30,060
doing is creating a loopback application

00:05:23,700 --> 00:05:32,280
and let's call this CF jeopardy won't

00:05:30,060 --> 00:05:33,540
put it in that directory kidding on

00:05:32,280 --> 00:05:36,140
people read this alright should they

00:05:33,540 --> 00:05:38,030
make it a little bit bigger or brighter

00:05:36,140 --> 00:05:42,480
[Music]

00:05:38,030 --> 00:05:44,640
see if that helps so I'm going to use

00:05:42,480 --> 00:05:48,390
the current version of loopback loopback

00:05:44,640 --> 00:05:50,370
version 3 and I'm there are lots of app

00:05:48,390 --> 00:05:53,160
options that the scaffolding gives you

00:05:50,370 --> 00:05:55,020
here but I'm just gonna use an empty

00:05:53,160 --> 00:05:57,210
server because I'm not gonna add off in

00:05:55,020 --> 00:05:59,520
this example I don't want a hello world

00:05:57,210 --> 00:06:01,650
and I'm not going to build a notetaking

00:05:59,520 --> 00:06:05,130
application so let's just use the empty

00:06:01,650 --> 00:06:07,140
server and so now the helpful wombats at

00:06:05,130 --> 00:06:10,920
NPM are going to install our all of our

00:06:07,140 --> 00:06:12,990
dependencies for us and conference Wi-Fi

00:06:10,920 --> 00:06:15,290
hasn't been too bad today I've been

00:06:12,990 --> 00:06:15,290
pretty impressed

00:06:17,510 --> 00:06:24,290
alright so now I'm gonna switch into

00:06:21,720 --> 00:06:24,290
that directory

00:06:24,900 --> 00:06:29,720
so now I have the app scaffolded and

00:06:26,580 --> 00:06:29,720
I'll show you what that code action

00:06:33,520 --> 00:06:38,850
really an API at all and so I mentioned

00:06:37,270 --> 00:06:41,440
earlier we're going to be using

00:06:38,850 --> 00:06:43,180
loopback can connect to all sorts of

00:06:41,440 --> 00:06:45,069
databases basically anything that you

00:06:43,180 --> 00:06:46,449
can think of loopback can connect to so

00:06:45,069 --> 00:06:49,479
wherever you like to keep your data

00:06:46,449 --> 00:06:52,630
loopback can make an api from it so in

00:06:49,479 --> 00:06:55,389
memory DB to big surprise IBM's db2

00:06:52,630 --> 00:06:59,050
database is supported very well Redis

00:06:55,389 --> 00:07:02,020
 all flavors of sequel Postgres you

00:06:59,050 --> 00:07:03,759
can actually connect to soap services if

00:07:02,020 --> 00:07:05,380
you have to do that

00:07:03,759 --> 00:07:06,789
so I'll just scroll through here

00:07:05,380 --> 00:07:08,710
elasticsearch and some of these

00:07:06,789 --> 00:07:10,509
connectors are created and supported by

00:07:08,710 --> 00:07:12,160
the strongloop team at IBM and some of

00:07:10,509 --> 00:07:13,630
them are from the community the

00:07:12,160 --> 00:07:15,310
elasticsearch connector is actually a

00:07:13,630 --> 00:07:18,240
community collect connector and it's

00:07:15,310 --> 00:07:21,220
really nice so let's just choose

00:07:18,240 --> 00:07:22,660
because I am lazy I use a clipboard

00:07:21,220 --> 00:07:26,860
manager how many people here use a

00:07:22,660 --> 00:07:30,220
clipboard manager dudes a clipboard

00:07:26,860 --> 00:07:33,099
manager will improve your life so much

00:07:30,220 --> 00:07:34,960
it lets you save the last hundred 200

00:07:33,099 --> 00:07:36,669
things that you have copied and pasted

00:07:34,960 --> 00:07:40,060
so that you can copy and paste them at

00:07:36,669 --> 00:07:41,380
any point I like copy em paste here I'll

00:07:40,060 --> 00:07:43,990
show you what it looks like copy and

00:07:41,380 --> 00:07:45,550
paste it cost like five dollars or

00:07:43,990 --> 00:07:47,169
something I like to pay people for

00:07:45,550 --> 00:07:48,789
software because that means that someday

00:07:47,169 --> 00:07:50,229
people will pay me for software it's

00:07:48,789 --> 00:07:51,969
like the circle of life for software

00:07:50,229 --> 00:07:54,070
development so even though it's a paid

00:07:51,969 --> 00:07:55,330
app I really recommend it honestly if

00:07:54,070 --> 00:07:56,949
you take away nothing from this

00:07:55,330 --> 00:07:58,479
presentation other than I should really

00:07:56,949 --> 00:08:00,639
use a clipboard manager I will have

00:07:58,479 --> 00:08:07,780
changed your life it saves me like an

00:08:00,639 --> 00:08:09,580
hour a week so rant over I'm gonna use a

00:08:07,780 --> 00:08:10,990
connection string here because I use a

00:08:09,580 --> 00:08:12,669
connection string to connect to my local

00:08:10,990 --> 00:08:14,590
 I don't have to specify the host

00:08:12,669 --> 00:08:16,509
it's already in that string I don't have

00:08:14,590 --> 00:08:18,039
to specify the port ditto because I'm

00:08:16,509 --> 00:08:19,900
running a local I haven't put a

00:08:18,039 --> 00:08:21,280
user name or password on it if you were

00:08:19,900 --> 00:08:22,810
running in production and it does

00:08:21,280 --> 00:08:24,909
not have a username or a password

00:08:22,810 --> 00:08:27,039
be prepared to send Bitcoin to somebody

00:08:24,909 --> 00:08:30,759
in the very near future to get your

00:08:27,039 --> 00:08:32,440
database back and I don't have to

00:08:30,759 --> 00:08:34,209
specify the database also because that's

00:08:32,440 --> 00:08:35,770
also in the connection string and now I

00:08:34,209 --> 00:08:37,839
will install the connector so loopback

00:08:35,770 --> 00:08:39,339
doesn't install the connector dependency

00:08:37,839 --> 00:08:40,959
until you tell it what database you want

00:08:39,339 --> 00:08:43,510
to connect to so it won't install like

00:08:40,959 --> 00:08:45,100
25 connectors right off the bat okay so

00:08:43,510 --> 00:08:46,930
now I have an app and now I have a data

00:08:45,100 --> 00:08:50,020
source now I want to tell it

00:08:46,930 --> 00:08:52,660
loopback what model I want to use for my

00:08:50,020 --> 00:08:57,839
data and I bet you could all guess that

00:08:52,660 --> 00:09:00,010
the command is lb model so this is an

00:08:57,839 --> 00:09:03,010
exec sir sizing how many different ways

00:09:00,010 --> 00:09:05,680
I can spell jeopardy this is the way I

00:09:03,010 --> 00:09:07,420
like to spell it so I'm just gonna call

00:09:05,680 --> 00:09:10,720
it jeopardy question I'm gonna connect

00:09:07,420 --> 00:09:13,570
it to that data source that I've just

00:09:10,720 --> 00:09:14,770
created I'm going to use a persistent

00:09:13,570 --> 00:09:16,690
model here and that's usually the

00:09:14,770 --> 00:09:18,790
default because a persistent model you

00:09:16,690 --> 00:09:20,680
can both read and save to the database

00:09:18,790 --> 00:09:22,330
and who knows maybe I want to invent my

00:09:20,680 --> 00:09:24,940
own jeopardy questions or scrape some

00:09:22,330 --> 00:09:26,890
more let's expose it via the REST API

00:09:24,940 --> 00:09:29,740
because otherwise what is the point it

00:09:26,890 --> 00:09:32,920
does not need a plural I'm gonna use the

00:09:29,740 --> 00:09:34,570
common model here because who knows

00:09:32,920 --> 00:09:36,370
someday I might wake up and really want

00:09:34,570 --> 00:09:38,800
to write a client application for this

00:09:36,370 --> 00:09:40,540
API I doubt it but I might but putting

00:09:38,800 --> 00:09:43,899
the model in the common folder means the

00:09:40,540 --> 00:09:45,850
client has access to it so what kind of

00:09:43,899 --> 00:09:47,890
properties does our data model or our

00:09:45,850 --> 00:09:50,770
schema have for jeopardy questions well

00:09:47,890 --> 00:09:52,630
it's right there in the name so they

00:09:50,770 --> 00:09:55,360
have questions which are strings and

00:09:52,630 --> 00:09:57,730
they're required no default value they

00:09:55,360 --> 00:10:00,250
also have answers which are also strings

00:09:57,730 --> 00:10:02,020
also required no default and let's add

00:10:00,250 --> 00:10:04,180
just one more category about one more

00:10:02,020 --> 00:10:07,560
property of category which are also

00:10:04,180 --> 00:10:09,970
strings and required and now we're done

00:10:07,560 --> 00:10:13,270
and when I say now we're done I mean

00:10:09,970 --> 00:10:16,890
literally now we are done we now have a

00:10:13,270 --> 00:10:19,300
working application so let's look at it

00:10:16,890 --> 00:10:21,940
so this is one I was using earlier that

00:10:19,300 --> 00:10:25,000
I called cf6 but when i refresh this

00:10:21,940 --> 00:10:28,180
you'll see that I gave its the directory

00:10:25,000 --> 00:10:33,220
name that I created for this example all

00:10:28,180 --> 00:10:33,880
of these endpoints were created by

00:10:33,220 --> 00:10:37,450
loopback

00:10:33,880 --> 00:10:40,209
so let's just try one so let's count how

00:10:37,450 --> 00:10:41,560
many questions I have in this database

00:10:40,209 --> 00:10:43,990
so you could tell I'm not lying

00:10:41,560 --> 00:10:45,730
there are 216 nine hundred and

00:10:43,990 --> 00:10:46,930
thirty-two hundred sixteen thousand nine

00:10:45,730 --> 00:10:51,610
hundred thirty questions in the state of

00:10:46,930 --> 00:10:53,410
bass so let's see one let's find one

00:10:51,610 --> 00:10:55,329
because I made the example of get all

00:10:53,410 --> 00:10:56,620
earlier and it just chugged forever

00:10:55,329 --> 00:10:58,610
because it was trying to get two hundred

00:10:56,620 --> 00:11:01,109
sixteen thousand questions

00:10:58,610 --> 00:11:03,160
[Music]

00:11:01,109 --> 00:11:04,749
here we go for the last eight years of

00:11:03,160 --> 00:11:07,599
his life Galileo was under house arrest

00:11:04,749 --> 00:11:11,949
for espousing this man's theory who was

00:11:07,599 --> 00:11:14,609
Copernicus that's all you need to do to

00:11:11,949 --> 00:11:16,359
get a full credit I would leave back

00:11:14,609 --> 00:11:19,689
it's that simple

00:11:16,359 --> 00:11:22,299
but and let's just take a look at the

00:11:19,689 --> 00:11:27,069
code real fast if you want to see how

00:11:22,299 --> 00:11:30,339
what it actually looks like I have been

00:11:27,069 --> 00:11:32,799
using Visual Studio quite a bit lately

00:11:30,339 --> 00:11:36,029
but I'll just show this in sublime so

00:11:32,799 --> 00:11:38,169
here is the scaffolding of the app

00:11:36,029 --> 00:11:39,909
there's a client folder which is

00:11:38,169 --> 00:11:43,269
basically like oh here's where you would

00:11:39,909 --> 00:11:45,309
put your client here's the common folder

00:11:43,269 --> 00:11:47,919
where we saved that model that we

00:11:45,309 --> 00:11:50,079
created and here's the JSON for that

00:11:47,919 --> 00:11:51,759
model if you go in later and you decide

00:11:50,079 --> 00:11:53,139
you want to add properties or change the

00:11:51,759 --> 00:11:54,970
name for properties or change weather

00:11:53,139 --> 00:11:56,379
properties are required or not you can

00:11:54,970 --> 00:11:57,459
just type straight into this file you

00:11:56,379 --> 00:12:01,509
don't need to go back to the command

00:11:57,459 --> 00:12:04,289
line this is all completely editable if

00:12:01,509 --> 00:12:06,549
you want to customize your loopback

00:12:04,289 --> 00:12:07,989
application you can add new endpoints

00:12:06,549 --> 00:12:12,519
here and I'll show you that in just a

00:12:07,989 --> 00:12:16,029
minute here's our actual app this is it

00:12:12,519 --> 00:12:17,799
that's all it does here's where our

00:12:16,029 --> 00:12:20,829
information about our data source goes

00:12:17,799 --> 00:12:24,489
and loopback apps are really easy to

00:12:20,829 --> 00:12:26,319
make 12 factor compatible apps so you

00:12:24,489 --> 00:12:28,749
could have a data sources file that's

00:12:26,319 --> 00:12:30,939
data sources dot development dot JSON

00:12:28,749 --> 00:12:33,669
for your development credentials you can

00:12:30,939 --> 00:12:34,749
have a data sources production JSON file

00:12:33,669 --> 00:12:36,369
where you keep your production

00:12:34,749 --> 00:12:38,319
credentials that can refer to say an

00:12:36,369 --> 00:12:41,559
environment variable so it's very easy

00:12:38,319 --> 00:12:46,479
to take this prototype app and actually

00:12:41,559 --> 00:12:48,699
deploy it with very few changes

00:12:46,479 --> 00:12:51,429
here's your model configuration so you

00:12:48,699 --> 00:12:53,649
can see here's where we named the data

00:12:51,429 --> 00:12:57,489
source that we wanted to connect which

00:12:53,649 --> 00:13:01,749
is then referenced here so it makes them

00:12:57,489 --> 00:13:03,879
very straightforward app scaffold but

00:13:01,749 --> 00:13:06,789
let's see how we might customize this

00:13:03,879 --> 00:13:09,909
app because what I wanted to do was

00:13:06,789 --> 00:13:12,369
study jeopardy questions but I if I use

00:13:09,909 --> 00:13:13,240
that find one end point because of the

00:13:12,369 --> 00:13:14,830
way works

00:13:13,240 --> 00:13:16,750
it's gonna find me the same one every

00:13:14,830 --> 00:13:18,550
time so I'm not gonna get any better I'm

00:13:16,750 --> 00:13:22,060
just gonna see Copernicus over and over

00:13:18,550 --> 00:13:24,160
again so what I really want to have is a

00:13:22,060 --> 00:13:27,940
random endpoint I want to get a random

00:13:24,160 --> 00:13:35,100
question from these 200,000 questions so

00:13:27,940 --> 00:13:38,200
what that looks like is this so in our

00:13:35,100 --> 00:13:41,410
models folder we had that JSON file

00:13:38,200 --> 00:13:44,140
which is the schema here and we also

00:13:41,410 --> 00:13:46,709
have that j/s file and so in that Jan's

00:13:44,140 --> 00:13:51,040
file all you have to do is write

00:13:46,709 --> 00:13:52,240
functions for your endpoints so maybe

00:13:51,040 --> 00:13:54,250
I'll make this a little bit smaller as

00:13:52,240 --> 00:13:57,580
if it's on one screen so here you can

00:13:54,250 --> 00:13:58,779
see that here's our random endpoint and

00:13:57,580 --> 00:14:02,580
what we're going to do is we're going to

00:13:58,779 --> 00:14:05,890
connect to our database connector and

00:14:02,580 --> 00:14:07,690
then everything from line 7 on is just

00:14:05,890 --> 00:14:11,080
straight up syntax we're going to

00:14:07,690 --> 00:14:13,899
use collection aggregate with a sample

00:14:11,080 --> 00:14:15,850
size of 1 and what this does is it just

00:14:13,899 --> 00:14:17,800
takes the collection in aggregate and

00:14:15,850 --> 00:14:20,170
returns us one question and that

00:14:17,800 --> 00:14:21,430
question is random and handles all

00:14:20,170 --> 00:14:24,520
the randomization for you

00:14:21,430 --> 00:14:26,740
there's no math.floor you know random

00:14:24,520 --> 00:14:28,360
floor JavaScript nonsense where you're

00:14:26,740 --> 00:14:29,709
trying to find a random number and then

00:14:28,360 --> 00:14:31,360
pull something out of the database from

00:14:29,709 --> 00:14:33,700
that random number so it's kind of cool

00:14:31,360 --> 00:14:35,950
that you not only get all this generated

00:14:33,700 --> 00:14:37,810
code but you also have access to the

00:14:35,950 --> 00:14:40,630
features of whatever database you're

00:14:37,810 --> 00:14:43,839
using underneath I also wanted to add

00:14:40,630 --> 00:14:46,480
another endpoint categories so what this

00:14:43,839 --> 00:14:49,540
does is it uses mongos collection dot

00:14:46,480 --> 00:14:53,560
distinct and it finds me all the unique

00:14:49,540 --> 00:14:56,740
values of the category property in all

00:14:53,560 --> 00:15:00,060
the records in that collection which is

00:14:56,740 --> 00:15:03,610
also I think kind of cool and then here

00:15:00,060 --> 00:15:05,410
loopback uses the open API spec which

00:15:03,610 --> 00:15:08,079
people mostly know as swagger

00:15:05,410 --> 00:15:11,200
so all that explore that I showed you

00:15:08,079 --> 00:15:13,930
was basically the swag Erised loopback

00:15:11,200 --> 00:15:17,560
application and this is how you add your

00:15:13,930 --> 00:15:20,380
own endpoints to that Explorer so here's

00:15:17,560 --> 00:15:22,449
the name here's what kind of endpoint it

00:15:20,380 --> 00:15:24,709
is it's a get a description a

00:15:22,449 --> 00:15:27,589
description of what it returns

00:15:24,709 --> 00:15:31,879
and in this file this is also where you

00:15:27,589 --> 00:15:35,209
could block those end points from

00:15:31,879 --> 00:15:37,990
showing up in the Explorer so I have

00:15:35,209 --> 00:15:41,959
this application running up on bluemix

00:15:37,990 --> 00:15:44,029
so I can show you what those endpoints

00:15:41,959 --> 00:15:47,240
look like working in the wild so here's

00:15:44,029 --> 00:15:50,089
our random question endpoint so let's

00:15:47,240 --> 00:15:56,300
get a random question yeah

00:15:50,089 --> 00:15:58,490
up a little bit and I can just keep

00:15:56,300 --> 00:16:06,619
hitting that button and keep getting

00:15:58,490 --> 00:16:09,800
random questions and it really is just

00:16:06,619 --> 00:16:12,740
that easy to create your own endpoints

00:16:09,800 --> 00:16:18,889
with Liebeck let's see if I can find the

00:16:12,740 --> 00:16:22,579
categories one the categories one is a

00:16:18,889 --> 00:16:25,040
little bigger so here all the categories

00:16:22,579 --> 00:16:30,439
and it will scroll for a very very very

00:16:25,040 --> 00:16:33,139
long time but it really is just that

00:16:30,439 --> 00:16:35,899
simple to make api's with live back and

00:16:33,139 --> 00:16:37,999
it's also pretty fun so now I can go

00:16:35,899 --> 00:16:45,170
back to our regularly scheduled

00:16:37,999 --> 00:16:49,040
presentation get right back to the right

00:16:45,170 --> 00:16:52,429
slide so I'm always happy when a demo

00:16:49,040 --> 00:16:53,360
actually works but there's lots of other

00:16:52,429 --> 00:16:55,040
ways that you can customize your

00:16:53,360 --> 00:16:57,559
loopback application you can use custom

00:16:55,040 --> 00:17:00,259
ID values we had the IDS automatically

00:16:57,559 --> 00:17:04,309
inserted so if I had added a question

00:17:00,259 --> 00:17:06,799
using a foot or a post it would have

00:17:04,309 --> 00:17:08,870
generated an ID from and had a

00:17:06,799 --> 00:17:11,000
special underscore ID property that I

00:17:08,870 --> 00:17:14,959
didn't have to set but if you wanted to

00:17:11,000 --> 00:17:17,809
use say another field as the ID

00:17:14,959 --> 00:17:20,899
customized that way you can add hooks

00:17:17,809 --> 00:17:23,089
that happen at any point in the chain so

00:17:20,899 --> 00:17:25,339
you can add hooks that happen when a

00:17:23,089 --> 00:17:26,959
record is saved you can add a hook that

00:17:25,339 --> 00:17:29,750
happens once a record is returned but

00:17:26,959 --> 00:17:31,460
before it goes to the consumer you can

00:17:29,750 --> 00:17:33,260
add boot scripts so something can happen

00:17:31,460 --> 00:17:35,090
when your loopback app is started you

00:17:33,260 --> 00:17:36,799
can hide endpoints there's a lot more

00:17:35,090 --> 00:17:37,750
stuff that you can do and of course once

00:17:36,799 --> 00:17:39,760
you have your API

00:17:37,750 --> 00:17:41,620
you can build a front end if that's what

00:17:39,760 --> 00:17:43,770
you like to do personally I prefer to

00:17:41,620 --> 00:17:46,570
build API is there a lot cleaner

00:17:43,770 --> 00:17:48,660
browsers are terrible I don't know why

00:17:46,570 --> 00:17:51,190
people want to build for browsers but um

00:17:48,660 --> 00:17:52,510
so and also when I talk about loopback I

00:17:51,190 --> 00:17:54,490
also want to talk a little bit about why

00:17:52,510 --> 00:17:56,320
a framework because obviously all of

00:17:54,490 --> 00:17:58,570
this is just JavaScript you could write

00:17:56,320 --> 00:18:01,930
it yourself in JavaScript you don't have

00:17:58,570 --> 00:18:03,940
to use a tool like loopback but I think

00:18:01,930 --> 00:18:07,180
that frameworks can be pretty helpful I

00:18:03,940 --> 00:18:09,310
think that when you use a framework the

00:18:07,180 --> 00:18:12,910
biggest value you get is it makes the

00:18:09,310 --> 00:18:14,410
implicit assumptions explicit because

00:18:12,910 --> 00:18:17,230
everything that you're thinking about in

00:18:14,410 --> 00:18:19,990
your head a framework says oh this thing

00:18:17,230 --> 00:18:22,120
this is how you do it and that creates a

00:18:19,990 --> 00:18:23,350
shared mental model between all the

00:18:22,120 --> 00:18:25,210
people who are working on the framework

00:18:23,350 --> 00:18:26,620
whether it's just you or whether it's

00:18:25,210 --> 00:18:28,510
you and your whole team or whether it's

00:18:26,620 --> 00:18:30,520
you and all the people who use loop back

00:18:28,510 --> 00:18:32,890
and work on loopback having this shared

00:18:30,520 --> 00:18:35,410
mental model means that what I talk

00:18:32,890 --> 00:18:37,240
about a concept and someone else who's

00:18:35,410 --> 00:18:39,490
also using the fact talks about it in

00:18:37,240 --> 00:18:41,670
the same terms we can be more confident

00:18:39,490 --> 00:18:44,050
that we're referring to the same thing

00:18:41,670 --> 00:18:45,850
having a framework especially when as

00:18:44,050 --> 00:18:47,830
big as loopback in terms of number of

00:18:45,850 --> 00:18:50,890
users makes means that there's an

00:18:47,830 --> 00:18:51,820
ecosystem when I'm confused about how to

00:18:50,890 --> 00:18:53,380
do something with loopback

00:18:51,820 --> 00:18:55,420
first I check the docs which are really

00:18:53,380 --> 00:18:56,770
actually pretty amazing and then I go to

00:18:55,420 --> 00:18:58,780
the Google group or I go to stack

00:18:56,770 --> 00:19:00,790
overflow and usually someone else has

00:18:58,780 --> 00:19:02,470
asked that same question because quite

00:19:00,790 --> 00:19:03,730
frankly I'm not brilliant enough to come

00:19:02,470 --> 00:19:07,510
up with questions that no one else has

00:19:03,730 --> 00:19:09,880
ever asked and it's really helpful it

00:19:07,510 --> 00:19:11,680
promotes code reuse of course because a

00:19:09,880 --> 00:19:13,690
lot of this code is written for you you

00:19:11,680 --> 00:19:15,220
don't have to read it yourself and I

00:19:13,690 --> 00:19:16,630
also really like to learn from other

00:19:15,220 --> 00:19:17,950
people's mistakes it's a lot less

00:19:16,630 --> 00:19:19,450
painful than learning from my own

00:19:17,950 --> 00:19:21,250
mistakes so again I can go to stack

00:19:19,450 --> 00:19:23,410
overflow see how somebody did something

00:19:21,250 --> 00:19:25,570
and have them tell me what they found

00:19:23,410 --> 00:19:27,430
painful and then I can carefully walk

00:19:25,570 --> 00:19:29,170
around that and not have to deal with it

00:19:27,430 --> 00:19:31,450
and then of course if they help you

00:19:29,170 --> 00:19:34,690
build faster it's really fast usually

00:19:31,450 --> 00:19:36,790
back so sometimes when people talk to me

00:19:34,690 --> 00:19:38,620
about loopback they're like oh yeah it's

00:19:36,790 --> 00:19:40,330
really cool but you know I don't really

00:19:38,620 --> 00:19:42,930
like to use frameworks because you know

00:19:40,330 --> 00:19:46,270
I think real developers build everything

00:19:42,930 --> 00:19:48,100
themselves by hand and I feel a little

00:19:46,270 --> 00:19:49,510
bad when people say oh real developers

00:19:48,100 --> 00:19:50,760
don't use frameworks because I think

00:19:49,510 --> 00:19:53,490
that real develop

00:19:50,760 --> 00:19:55,470
our ones who build safe and stable and

00:19:53,490 --> 00:19:57,630
maintainable applications that users

00:19:55,470 --> 00:20:00,210
want a need because your users do not

00:19:57,630 --> 00:20:02,540
care whether you handcrafted your

00:20:00,210 --> 00:20:05,070
JavaScript from pure electrons or

00:20:02,540 --> 00:20:06,690
whether you used a framework what they

00:20:05,070 --> 00:20:09,450
care about is did they get their random

00:20:06,690 --> 00:20:10,950
jeopardy question so there are tons of

00:20:09,450 --> 00:20:12,240
loopback resources I talked about some

00:20:10,950 --> 00:20:14,190
of them loopback i/o is where all the

00:20:12,240 --> 00:20:16,380
docs live there's a Google Groups Stack

00:20:14,190 --> 00:20:19,470
Overflow tag their stuff on IBM

00:20:16,380 --> 00:20:20,820
developerworks we're also starting to

00:20:19,470 --> 00:20:22,380
talk about the next version of loopback

00:20:20,820 --> 00:20:25,110
loopback 3 is going to be around for a

00:20:22,380 --> 00:20:29,520
long time but the next version is going

00:20:25,110 --> 00:20:35,640
to support a lot of es next feature so

00:20:29,520 --> 00:20:39,150
es 17 and other cool stuff also there's

00:20:35,640 --> 00:20:41,690
been some talk about graph QL for

00:20:39,150 --> 00:20:44,640
loopback which i think is very exciting

00:20:41,690 --> 00:20:46,950
but API Connect you can manage your

00:20:44,640 --> 00:20:48,950
loopback api's once you build them with

00:20:46,950 --> 00:20:52,490
all sorts of cool enterprise-e things

00:20:48,950 --> 00:20:55,169
there's lots of API connect resources

00:20:52,490 --> 00:20:56,929
API connect pricing which I'm sure

00:20:55,169 --> 00:20:59,100
you're all very desperate to know about

00:20:56,929 --> 00:21:00,690
if you have questions about this please

00:20:59,100 --> 00:21:02,960
hit me up I'm just a machine on Twitter

00:21:00,690 --> 00:21:08,000
strong loops also very active on Twitter

00:21:02,960 --> 00:21:08,000
and this whole repo is available

00:21:09,730 --> 00:21:17,500
do you where that is

00:21:11,140 --> 00:21:20,170
so that you can see the URL so yeah so

00:21:17,500 --> 00:21:23,350
this example not only includes the

00:21:20,170 --> 00:21:25,510
custom code but it also includes a

00:21:23,350 --> 00:21:27,910
sample manifest so if you want to use

00:21:25,510 --> 00:21:29,680
Cloud Foundry it'll give you an example

00:21:27,910 --> 00:21:32,830
of how to push it up and full

00:21:29,680 --> 00:21:35,980
instructions of how to do so and I am

00:21:32,830 --> 00:21:38,890
more than happy to answer any questions

00:21:35,980 --> 00:21:41,790
you might have about loopback and thank

00:21:38,890 --> 00:21:41,790
you so much for your kind attention

00:21:44,760 --> 00:21:53,110
any questions for Erin Oh a also forgot

00:21:51,100 --> 00:21:55,210
to say that for y'all JavaScript

00:21:53,110 --> 00:21:57,660
developers I come equipped with

00:21:55,210 --> 00:21:59,680
semicolon appreciation society stickers

00:21:57,660 --> 00:22:02,470
so if you would like to join the

00:21:59,680 --> 00:22:03,940
semicolon appreciation society and see I

00:22:02,470 --> 00:22:06,880
think I have some of the stickers with

00:22:03,940 --> 00:22:09,250
me then please come up and get a sticker

00:22:06,880 --> 00:22:11,800
I also have loopback stickers and okay

00:22:09,250 --> 00:22:13,570
semicolon appreciation society I also

00:22:11,800 --> 00:22:18,180
have loopback stickers and API connect

00:22:13,570 --> 00:22:18,180
stickers that I will happily give to you

00:22:19,320 --> 00:22:23,370

YouTube URL: https://www.youtube.com/watch?v=oICQvfgoGnA


