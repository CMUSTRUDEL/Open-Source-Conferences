Title: Humana - Scaling Cloud Foundry From One Team to The Entire Enterprise
Publication date: 2017-06-22
Playlist: Cloud Foundry Summit Silicon Valley 2017
Description: 
	Humana - Scaling Cloud Foundry From One Team to The Entire Enterprise - Patrick Huber, Humana & Parag Doshi, Pivotal    

Humana started their cloud-native journey three years back when they set up Digital Excellence Center (DEC). The goal of DEC was for enabling their business customers achieve faster time to market and create a new way of developing applications within Humana by using Cloud Foundry. 
In 2016, Humana undertook an initiative to spread DevOps culture and scale their use of Cloud Foundry across the enterprise for all development teams.
This presentation will illustrate their DevOps and Cloud Foundry journey led by Patrick for creating an enterprise resilient Cloud Foundry offering and changing the mindset of their internal teams to the new way of developing applications and infrastructure automation. 
The audience will learn about their wins and the challenges that DevOps team faced along the way of creating an enterprise-wide Cloud Foundry offering. They will get to hear about different automation and functionality put in place by Patrick and Parag to create enterprise grade resilient Cloud Foundry platform. Come and learn what it takes to roll out and scale Cloud Foundry from one team to a

Patrick Huber
Humana
Architect & Product Owner - Cloud Foundry
Patrick is a domain architect and change agent at Humana. He has more than 14 years of experience in architecting business applications for Humana and other Fortune 500 companies. He has implemented infrastructure automation and is currently spreading the DevOps culture at Humana. Patrick is a prolific speaker and has presented numerous times at Humana - the latest at DevOps Days event at Humana where Patrick presented their enterprise Cloud Foundry vision and capabilities to a packed room of technology enthusiast. Patrick is currently the product owner and architect for adding more capabilities to their enterprise offering of PCF and is responsible for the rollout of Cloud Foundry across their enterprise.

Parag Doshi
Pivotal
Platform Architect - Cloud Foundry
Parag Doshi is a Cloud Foundry Platform Architect at Pivotal. Parag has more than fifteen years of experience in architecting, developing and deploying enterprise applications for various Fortune 500 companies. He has successfully led DevOps and organization transformation initiatives in various engagements in the past. In his current platform architect role, Parag works closely with various enterprise customers and helps them become successful in their DevOps and cloud foundry adoption journey.
Captions: 
	00:00:00,439 --> 00:00:06,509
all right we're really close I think

00:00:02,820 --> 00:00:09,300
we'll stick get started here I can stop

00:00:06,509 --> 00:00:11,910
yeah all right all right good afternoon

00:00:09,300 --> 00:00:13,769
everyone thanks so much for coming to

00:00:11,910 --> 00:00:15,030
our session my name is Barack Russia I

00:00:13,769 --> 00:00:18,420
am part of the platform architecture

00:00:15,030 --> 00:00:22,470
team at pivotal I have Patrick Huber is

00:00:18,420 --> 00:00:25,680
a domain architect and part of the pc ft

00:00:22,470 --> 00:00:28,500
in Humana and what we're going to talk

00:00:25,680 --> 00:00:31,830
today about is how do you go from one

00:00:28,500 --> 00:00:34,050
application team and scale crowdfunded

00:00:31,830 --> 00:00:36,149
to an enterprise so some of the things

00:00:34,050 --> 00:00:37,590
we will be discussing is what are some

00:00:36,149 --> 00:00:40,500
of the consideration you need to take

00:00:37,590 --> 00:00:41,730
for scaling cloud foundry what are the

00:00:40,500 --> 00:00:45,090
different phases in your platform

00:00:41,730 --> 00:00:48,300
maturity as you scale your foundation or

00:00:45,090 --> 00:00:50,280
your platform and how do you prioritize

00:00:48,300 --> 00:00:53,670
some of the things you need to do in

00:00:50,280 --> 00:00:55,920
that and Patrick will talk so much more

00:00:53,670 --> 00:00:57,570
about from the human perspective and how

00:00:55,920 --> 00:00:59,039
they have approached cloud foundry and

00:00:57,570 --> 00:01:02,190
how they are going through their own

00:00:59,039 --> 00:01:04,500
journey of maturing that platform based

00:01:02,190 --> 00:01:06,210
on their enterprise needs so I will

00:01:04,500 --> 00:01:08,460
start it off to hand it off to Patrick

00:01:06,210 --> 00:01:11,490
he'll give us some more introduction on

00:01:08,460 --> 00:01:13,890
the context and background of how Humana

00:01:11,490 --> 00:01:18,689
started the cloud foundry journey thanks

00:01:13,890 --> 00:01:20,640
Brad so Humana started their cloud

00:01:18,689 --> 00:01:23,640
foundry journey with the little labs

00:01:20,640 --> 00:01:25,170
engagement and through that engagement

00:01:23,640 --> 00:01:26,820
we sent some developers out to New York

00:01:25,170 --> 00:01:29,250
to kind of learn how pivotal develop

00:01:26,820 --> 00:01:32,189
software and one of the outcomes from

00:01:29,250 --> 00:01:33,869
that is they came back wanting to use

00:01:32,189 --> 00:01:35,880
cloud foundry at Humana we didn't really

00:01:33,869 --> 00:01:37,740
have a space for them to do it so they

00:01:35,880 --> 00:01:40,140
kind of got shotgun to random buildings

00:01:37,740 --> 00:01:43,470
and worked in agile formation for a

00:01:40,140 --> 00:01:45,180
while and so we built a something called

00:01:43,470 --> 00:01:47,460
the digital experience center at Humana

00:01:45,180 --> 00:01:48,810
and it's modeled after pivotal labs I

00:01:47,460 --> 00:01:51,470
think they even used the same architect

00:01:48,810 --> 00:01:55,590
so you too can do this if you have

00:01:51,470 --> 00:01:58,619
enough influence and that's where we're

00:01:55,590 --> 00:02:00,960
kind of growing the seed of of Cloud

00:01:58,619 --> 00:02:05,189
Foundry at Humana so this was the first

00:02:00,960 --> 00:02:07,680
team to get started so a little bit of

00:02:05,189 --> 00:02:09,000
history on the deck it's an acceleration

00:02:07,680 --> 00:02:11,400
center like I said just like pivotal

00:02:09,000 --> 00:02:13,650
labs they focus on rapid app

00:02:11,400 --> 00:02:16,590
delivery partnering directly with

00:02:13,650 --> 00:02:17,879
business units your traditional why

00:02:16,590 --> 00:02:20,909
doesn't say traditional but you know

00:02:17,879 --> 00:02:23,099
you're more modern agile processes and

00:02:20,909 --> 00:02:25,230
they use a Cloud Foundry pretty much

00:02:23,099 --> 00:02:27,030
exclusively they do augment it with

00:02:25,230 --> 00:02:28,980
additional tools to help deliver their

00:02:27,030 --> 00:02:30,510
tools but you know maybe they're

00:02:28,980 --> 00:02:32,010
developing like an iOS application or

00:02:30,510 --> 00:02:33,659
something like that that would be

00:02:32,010 --> 00:02:36,870
external to the foundation but the core

00:02:33,659 --> 00:02:41,280
backing services and non-critical data

00:02:36,870 --> 00:02:43,079
services are in Cloud Foundry so a

00:02:41,280 --> 00:02:45,389
couple apps we pulled this there's

00:02:43,079 --> 00:02:47,129
actually a site called Humana oh that's

00:02:45,389 --> 00:02:49,440
hosted on Cloud Foundry that you should

00:02:47,129 --> 00:02:51,319
be able to have access to and here's

00:02:49,440 --> 00:02:53,609
some of the apps that they have hosted

00:02:51,319 --> 00:02:55,799
on this we just grabbed these directly

00:02:53,609 --> 00:02:58,769
from that site there's additional ones

00:02:55,799 --> 00:03:00,030
coming along we have a go 360 product

00:02:58,769 --> 00:03:03,090
that's looking at doing some backing

00:03:00,030 --> 00:03:04,920
services on cloud foundry as well but

00:03:03,090 --> 00:03:06,629
for the most part this is our product

00:03:04,920 --> 00:03:08,549
suite to date and we're looking to

00:03:06,629 --> 00:03:14,489
expand that into pharmacy clinical

00:03:08,549 --> 00:03:16,919
digital and really how did we get from

00:03:14,489 --> 00:03:19,049
this one team to try to sell this to our

00:03:16,919 --> 00:03:22,019
enterprise so as the big challenge for

00:03:19,049 --> 00:03:23,190
us was hey look you know we've got this

00:03:22,019 --> 00:03:24,959
small little group they're using this

00:03:23,190 --> 00:03:26,489
particular technology are they a unique

00:03:24,959 --> 00:03:27,959
special flower or is this something that

00:03:26,489 --> 00:03:30,540
we can spread across to have all

00:03:27,959 --> 00:03:32,699
application teams use it and the way we

00:03:30,540 --> 00:03:35,639
got started was we focused right on

00:03:32,699 --> 00:03:37,919
quality right away so going to hey you

00:03:35,639 --> 00:03:39,480
had a major incident or up you botched

00:03:37,919 --> 00:03:41,669
this deployment when you were trying to

00:03:39,480 --> 00:03:43,349
push an application or how long does it

00:03:41,669 --> 00:03:45,479
take you to get a VM like just asking

00:03:43,349 --> 00:03:47,190
sort of abstract questions like how much

00:03:45,479 --> 00:03:49,470
time to developers spend writing code

00:03:47,190 --> 00:03:54,810
and frame that up into a presentation

00:03:49,470 --> 00:03:59,370
deck and we took that and delivered it

00:03:54,810 --> 00:04:01,979
to our senior leadership we also looked

00:03:59,370 --> 00:04:04,169
at TFS and ended CI and CD so we're a

00:04:01,979 --> 00:04:06,060
Microsoft shop and TFS was sort of a

00:04:04,169 --> 00:04:09,000
natural extension of what we were doing

00:04:06,060 --> 00:04:10,919
and the delivery pipelines kind of set a

00:04:09,000 --> 00:04:12,720
different story so we had delivery

00:04:10,919 --> 00:04:14,159
pipelines and then we needed a place to

00:04:12,720 --> 00:04:16,380
run our stuff and that it was sort of

00:04:14,159 --> 00:04:20,500
the cloud foundry was a good fit for

00:04:16,380 --> 00:04:22,610
that we also

00:04:20,500 --> 00:04:24,080
like I said the history of success was

00:04:22,610 --> 00:04:26,120
looking to Cloud Foundry as the platform

00:04:24,080 --> 00:04:28,880
would run applications the pitch deck

00:04:26,120 --> 00:04:31,699
was gathering the support and you know

00:04:28,880 --> 00:04:33,080
the the really the catalyst was the dojo

00:04:31,699 --> 00:04:35,330
session so if you work with pivotal

00:04:33,080 --> 00:04:36,770
you'll know this that you know you kind

00:04:35,330 --> 00:04:38,750
of get started maybe I do a pivotal labs

00:04:36,770 --> 00:04:40,460
engagement and then you look at scaling

00:04:38,750 --> 00:04:42,770
your platform that's typically a dojo

00:04:40,460 --> 00:04:45,770
session where you sit down and you

00:04:42,770 --> 00:04:47,090
immerse set your goals do like your you

00:04:45,770 --> 00:04:49,580
know lay out your goals for like the

00:04:47,090 --> 00:04:50,870
next six months or whatever and then you

00:04:49,580 --> 00:04:52,669
start building pretty much right there

00:04:50,870 --> 00:04:54,949
which is kind of a different change for

00:04:52,669 --> 00:04:57,320
most people because we sat down from an

00:04:54,949 --> 00:04:59,060
Operations perspective and total wanted

00:04:57,320 --> 00:05:00,169
to start coding that day and this is it

00:04:59,060 --> 00:05:01,639
wait what we're not gonna sit here and

00:05:00,169 --> 00:05:03,440
talk endlessly for a while we're

00:05:01,639 --> 00:05:08,510
actually gonna do something which is

00:05:03,440 --> 00:05:10,849
kind of neat all right so so while while

00:05:08,510 --> 00:05:12,699
enterprises start off just like Dec did

00:05:10,849 --> 00:05:15,680
and now they want to scale their

00:05:12,699 --> 00:05:16,940
foundations or their platform to be an

00:05:15,680 --> 00:05:18,680
enterprise gate what are some of the

00:05:16,940 --> 00:05:20,060
considerations they have to take so they

00:05:18,680 --> 00:05:22,580
need to start thinking about some of

00:05:20,060 --> 00:05:23,919
these things like the DR topology how

00:05:22,580 --> 00:05:26,539
are they going to have the platform

00:05:23,919 --> 00:05:28,669
gonna be active active active passive

00:05:26,539 --> 00:05:30,800
how are they going to migrate the data

00:05:28,669 --> 00:05:32,960
they need to start thinking about that

00:05:30,800 --> 00:05:35,419
capacity planning as more and more

00:05:32,960 --> 00:05:37,460
application teams start onboarding there

00:05:35,419 --> 00:05:39,590
has to a mechanism of doing some

00:05:37,460 --> 00:05:41,120
proactive capacity planning so that you

00:05:39,590 --> 00:05:43,699
can plan the resources you need to

00:05:41,120 --> 00:05:45,880
support those teams chargeback model

00:05:43,699 --> 00:05:48,110
that's that's another thing where

00:05:45,880 --> 00:05:50,330
enterprises are used to traditional

00:05:48,110 --> 00:05:51,889
models of VMs and how they get charged

00:05:50,330 --> 00:05:54,080
back on that so need to come up with a

00:05:51,889 --> 00:05:56,930
new chargeback model which works in this

00:05:54,080 --> 00:05:58,729
environment centralized lock management

00:05:56,930 --> 00:06:00,680
and application monitoring so motion

00:05:58,729 --> 00:06:02,810
enterprises have their own log

00:06:00,680 --> 00:06:04,789
management systems and they also have

00:06:02,810 --> 00:06:07,039
their own APM tools so how does how do

00:06:04,789 --> 00:06:10,370
you integrate Cloud Foundry with that

00:06:07,039 --> 00:06:11,900
and finally pipeline for automation

00:06:10,370 --> 00:06:14,240
because now you're going to scale it our

00:06:11,900 --> 00:06:15,860
enterprise grade you cannot sustain by

00:06:14,240 --> 00:06:17,419
doing things manually so you need to

00:06:15,860 --> 00:06:19,610
start thinking about a automation

00:06:17,419 --> 00:06:20,990
pipeline not only for a platform but

00:06:19,610 --> 00:06:25,099
also for the application development

00:06:20,990 --> 00:06:26,960
teams and the lastly the rules so some

00:06:25,099 --> 00:06:27,990
of the traditional IT rules of system

00:06:26,960 --> 00:06:30,420
admins

00:06:27,990 --> 00:06:32,190
admins those are changing because now

00:06:30,420 --> 00:06:34,350
you have to start thinking terms of

00:06:32,190 --> 00:06:36,030
platform operators and how does that

00:06:34,350 --> 00:06:39,090
work and how does that organization

00:06:36,030 --> 00:06:41,340
structure work another way of looking at

00:06:39,090 --> 00:06:43,530
all these things is terms of the

00:06:41,340 --> 00:06:45,420
maturity of your platform how does your

00:06:43,530 --> 00:06:49,130
platform mature and what are the

00:06:45,420 --> 00:06:52,410
different phases in which it can mature

00:06:49,130 --> 00:06:54,540
so most enterprises will start here it

00:06:52,410 --> 00:06:56,700
will be the cloud friend cloud friendly

00:06:54,540 --> 00:06:59,340
platform stage where they're doing most

00:06:56,700 --> 00:07:01,080
of the things manually they have no idea

00:06:59,340 --> 00:07:03,780
strategy yet they are still a couple of

00:07:01,080 --> 00:07:06,630
versions behind in the platform and then

00:07:03,780 --> 00:07:08,400
they start thinking about okay now I'm

00:07:06,630 --> 00:07:09,840
going to start taking more speed I'm

00:07:08,400 --> 00:07:12,810
going to have more application getting

00:07:09,840 --> 00:07:15,240
on-boarded what are some of my charge

00:07:12,810 --> 00:07:17,640
back model how will my app teams get

00:07:15,240 --> 00:07:19,050
on-boarded you start thinking about dr a

00:07:17,640 --> 00:07:21,090
bit because now we are trying to bring

00:07:19,050 --> 00:07:24,240
some mission-critical apps on the

00:07:21,090 --> 00:07:25,980
platform then from there you start

00:07:24,240 --> 00:07:28,260
thinking or about resiliency of your

00:07:25,980 --> 00:07:30,570
application like what is my platform and

00:07:28,260 --> 00:07:33,000
what is my dr and then you start

00:07:30,570 --> 00:07:36,650
implementing those things you also have

00:07:33,000 --> 00:07:38,670
your automated pipelines in place and

00:07:36,650 --> 00:07:40,860
finally you get to the cloud native

00:07:38,670 --> 00:07:42,390
stage where you have implemented all

00:07:40,860 --> 00:07:44,490
those things and now we are also trying

00:07:42,390 --> 00:07:46,500
to implement most of the security

00:07:44,490 --> 00:07:48,930
controls which are available for the

00:07:46,500 --> 00:07:52,500
platform to make your platform really

00:07:48,930 --> 00:07:54,780
resilient and really scalable now you

00:07:52,500 --> 00:07:57,510
could go from left to right and try to

00:07:54,780 --> 00:07:59,550
do each and every step here and or you

00:07:57,510 --> 00:08:02,730
could take a step back and say there's a

00:07:59,550 --> 00:08:04,410
lot of things here how do my how do you

00:08:02,730 --> 00:08:06,750
pick up some of the things which I need

00:08:04,410 --> 00:08:08,670
how do I prioritize it so that it can

00:08:06,750 --> 00:08:10,560
give the value over the business is

00:08:08,670 --> 00:08:13,650
looking for while I'm still making a

00:08:10,560 --> 00:08:16,380
platform very resilient so one of the

00:08:13,650 --> 00:08:18,480
ways of doing that is by using these

00:08:16,380 --> 00:08:21,330
value drivers the five essays which we

00:08:18,480 --> 00:08:23,940
call it where you can measure the ROI

00:08:21,330 --> 00:08:26,910
returns of a platform for an enterprise

00:08:23,940 --> 00:08:29,250
based on this drivers so speed and

00:08:26,910 --> 00:08:32,280
agility this is something we have heard

00:08:29,250 --> 00:08:34,920
throughout yesterday today the time to

00:08:32,280 --> 00:08:37,110
market how fast can you applications go

00:08:34,920 --> 00:08:39,360
to production and be available to your

00:08:37,110 --> 00:08:39,990
customers stability in terms of a

00:08:39,360 --> 00:08:42,060
disaster

00:08:39,990 --> 00:08:45,500
how soon your applications can come back

00:08:42,060 --> 00:08:47,790
up and how resilient is your platform

00:08:45,500 --> 00:08:50,010
you can think in terms of scalability

00:08:47,790 --> 00:08:52,020
it's like I am more more users getting

00:08:50,010 --> 00:08:55,190
on-boarded how are they going to use the

00:08:52,020 --> 00:08:58,310
platform and can map scale fast enough

00:08:55,190 --> 00:09:00,720
savings this is more in terms of your

00:08:58,310 --> 00:09:02,670
operational efficiency your application

00:09:00,720 --> 00:09:04,200
development productivity and what kind

00:09:02,670 --> 00:09:06,930
of savings you're getting out of it and

00:09:04,200 --> 00:09:08,940
finally security is how are you using

00:09:06,930 --> 00:09:11,640
your security controls which are

00:09:08,940 --> 00:09:14,280
provided by the platform to drive more

00:09:11,640 --> 00:09:18,960
ROI to drive more stability and to try

00:09:14,280 --> 00:09:20,760
more scalability now you could go and do

00:09:18,960 --> 00:09:23,040
everything which is here to get the most

00:09:20,760 --> 00:09:25,260
of your ROI but every enterprise might

00:09:23,040 --> 00:09:27,180
have a different need some might look

00:09:25,260 --> 00:09:29,280
for speed some might look for stability

00:09:27,180 --> 00:09:32,040
some might look for scalability of the

00:09:29,280 --> 00:09:34,230
platform so based on that what you can

00:09:32,040 --> 00:09:37,290
do is you can pick and choose the

00:09:34,230 --> 00:09:39,840
activities you want to do based on how

00:09:37,290 --> 00:09:42,420
you want to utilize or get the most auto

00:09:39,840 --> 00:09:44,340
eye out of your platform so if you look

00:09:42,420 --> 00:09:47,490
from a speed and stability point of view

00:09:44,340 --> 00:09:49,440
you can start thinking about how to

00:09:47,490 --> 00:09:51,810
onboard my application development team

00:09:49,440 --> 00:09:54,240
fast enough what is the chargeback model

00:09:51,810 --> 00:09:56,130
for that and for stability you can't

00:09:54,240 --> 00:09:58,230
start thinking about your DR pipelines

00:09:56,130 --> 00:10:03,930
and you start thinking about automation

00:09:58,230 --> 00:10:04,920
and how fast can that work if you think

00:10:03,930 --> 00:10:07,260
from security and scalability

00:10:04,920 --> 00:10:10,350
perspective you start picking up things

00:10:07,260 --> 00:10:12,480
like metrics log management application

00:10:10,350 --> 00:10:14,820
monitoring and you can start looking at

00:10:12,480 --> 00:10:17,340
some of your security metrics which you

00:10:14,820 --> 00:10:20,190
might want to use there so that way you

00:10:17,340 --> 00:10:22,680
can we can choose what works for you for

00:10:20,190 --> 00:10:24,210
your enterprise and start doing all the

00:10:22,680 --> 00:10:27,690
things which are needed to make a

00:10:24,210 --> 00:10:29,190
platform enterprise ready and Patrick

00:10:27,690 --> 00:10:31,920
will talk more about some of the steps

00:10:29,190 --> 00:10:33,390
they have taken on this journey yeah so

00:10:31,920 --> 00:10:37,290
you can do your own color by numbers

00:10:33,390 --> 00:10:40,700
here this is ours so the stuff that's in

00:10:37,290 --> 00:10:42,720
red are things that we've implemented

00:10:40,700 --> 00:10:45,690
things in yellow are things that we're

00:10:42,720 --> 00:10:46,950
planning stuff and blue on the right we

00:10:45,690 --> 00:10:48,030
think we'll be able to take care of with

00:10:46,950 --> 00:10:50,310
some of the automations in place

00:10:48,030 --> 00:10:52,170
security is important we've kind of

00:10:50,310 --> 00:10:53,040
isolated our environment to this point

00:10:52,170 --> 00:10:55,410
so

00:10:53,040 --> 00:10:56,610
we're not as focused on beefing up

00:10:55,410 --> 00:10:58,050
security right now because we need to

00:10:56,610 --> 00:10:59,190
become more efficient before we can

00:10:58,050 --> 00:11:02,100
start to implement more security

00:10:59,190 --> 00:11:03,720
constraints but you know as you can see

00:11:02,100 --> 00:11:06,530
you just basically pick what you want

00:11:03,720 --> 00:11:09,180
here so we really focused on stability

00:11:06,530 --> 00:11:10,950
dr was very important that was one of

00:11:09,180 --> 00:11:12,540
the first questions once we had bids we

00:11:10,950 --> 00:11:15,390
started with two foundations one non

00:11:12,540 --> 00:11:17,610
problem prod and we needed a dr scenario

00:11:15,390 --> 00:11:18,720
for production so that was the one of

00:11:17,610 --> 00:11:20,250
the very first things that we did right

00:11:18,720 --> 00:11:21,600
out of the dojo was start spinning up

00:11:20,250 --> 00:11:24,900
those networks in our different data

00:11:21,600 --> 00:11:26,370
centers and then you know we also got a

00:11:24,900 --> 00:11:28,010
lot of questions around chargeback

00:11:26,370 --> 00:11:30,060
models we'll get into some of that later

00:11:28,010 --> 00:11:31,620
but they wanted to know how our

00:11:30,060 --> 00:11:33,750
customers are gonna consume this and how

00:11:31,620 --> 00:11:35,430
we're gonna pay for it that's a new

00:11:33,750 --> 00:11:37,320
model for our IT business they're not

00:11:35,430 --> 00:11:38,670
really used to the concept of charge

00:11:37,320 --> 00:11:40,830
back every usually it's you buy

00:11:38,670 --> 00:11:42,180
something out front we have this really

00:11:40,830 --> 00:11:44,670
weird deal where you can buy a VM

00:11:42,180 --> 00:11:46,320
forever and it's you get it for free and

00:11:44,670 --> 00:11:49,260
and it's used against us every single

00:11:46,320 --> 00:11:51,000
conversation that we have around VMs but

00:11:49,260 --> 00:11:53,220
you know like with prog was saying you

00:11:51,000 --> 00:11:55,440
pick the items that are best for you and

00:11:53,220 --> 00:11:57,030
you you build out your own roadmap based

00:11:55,440 --> 00:11:59,780
on those types of features that you're

00:11:57,030 --> 00:12:05,550
looking for and what's important to you

00:11:59,780 --> 00:12:07,890
so we are a healthcare provider that's

00:12:05,550 --> 00:12:09,870
very scared of cloud we're starting to

00:12:07,890 --> 00:12:11,780
get more and more into that but the

00:12:09,870 --> 00:12:15,360
HIPAA compliance and our security team

00:12:11,780 --> 00:12:18,360
are a little slow to adopt we're picking

00:12:15,360 --> 00:12:20,100
up momentum there but the way that we're

00:12:18,360 --> 00:12:22,110
structured right now if you look at

00:12:20,100 --> 00:12:26,250
across our data centers we have two data

00:12:22,110 --> 00:12:29,250
centers we have a QA foundation and a

00:12:26,250 --> 00:12:31,710
production foundation and we are set up

00:12:29,250 --> 00:12:34,920
in an active/passive scenario right now

00:12:31,710 --> 00:12:36,930
with CF ops doing backup replication

00:12:34,920 --> 00:12:39,330
from our data services so there's a lot

00:12:36,930 --> 00:12:41,370
of questions about data services we have

00:12:39,330 --> 00:12:42,690
to do a backup restore it's not going to

00:12:41,370 --> 00:12:44,070
be an active active scenario you want to

00:12:42,690 --> 00:12:45,750
change this and we're looking at options

00:12:44,070 --> 00:12:48,360
so moving and making it more like a

00:12:45,750 --> 00:12:49,800
replicate type of scenario where we may

00:12:48,360 --> 00:12:52,590
have listeners in a secondary data

00:12:49,800 --> 00:12:55,410
center but you know your basic topology

00:12:52,590 --> 00:12:57,840
for across the data centers is is listed

00:12:55,410 --> 00:13:01,760
here load balance or firewall in front

00:12:57,840 --> 00:13:04,380
of the foundations and then from a

00:13:01,760 --> 00:13:05,550
inside the data center perspective we

00:13:04,380 --> 00:13:08,430
have

00:13:05,550 --> 00:13:10,200
the a / 23 Network for our entire

00:13:08,430 --> 00:13:11,430
foundation turns out we're probably

00:13:10,200 --> 00:13:12,959
gonna have to change this because a lot

00:13:11,430 --> 00:13:14,880
of the tiles that are being released now

00:13:12,959 --> 00:13:16,350
require an additional network and that's

00:13:14,880 --> 00:13:17,790
triggering us to start looking at

00:13:16,350 --> 00:13:19,500
software-defined networking because

00:13:17,790 --> 00:13:21,180
asking for a new network right now is a

00:13:19,500 --> 00:13:23,640
pain in the butt and we want to make

00:13:21,180 --> 00:13:26,160
that a lot easier which means giving it

00:13:23,640 --> 00:13:28,709
to the people who run the infrastructure

00:13:26,160 --> 00:13:30,029
as you know click type of deployment

00:13:28,709 --> 00:13:32,970
instead of filling out a ticket

00:13:30,029 --> 00:13:34,589
requesting that so this is pretty

00:13:32,970 --> 00:13:38,550
standard reference architecture for

00:13:34,589 --> 00:13:40,230
Cloud Foundry we have cluster and then

00:13:38,550 --> 00:13:42,329
in that cluster we have resource pools

00:13:40,230 --> 00:13:43,980
and each resource pool we map them to

00:13:42,329 --> 00:13:46,980
availability zones in Cloud Foundry

00:13:43,980 --> 00:13:49,440
through ops manager and then we put our

00:13:46,980 --> 00:13:51,720
ops manager boss and some ERT tiles and

00:13:49,440 --> 00:13:54,209
one of those the singleton instance and

00:13:51,720 --> 00:13:58,079
then we have additional resource pools

00:13:54,209 --> 00:14:00,540
map to AZ's for additional ERT tiles and

00:13:58,079 --> 00:14:03,200
then we have service tiles available as

00:14:00,540 --> 00:14:05,100
well in each of the availability zones

00:14:03,200 --> 00:14:11,490
and then our data stores are just

00:14:05,100 --> 00:14:13,440
attached storage to the hosts one other

00:14:11,490 --> 00:14:15,660
thing in there - we have dot local and

00:14:13,440 --> 00:14:18,660
dot-com so dot local is internal

00:14:15,660 --> 00:14:20,640
addressable intranet type services comm

00:14:18,660 --> 00:14:22,320
is available external so developers can

00:14:20,640 --> 00:14:24,660
pick how they want their apps to be

00:14:22,320 --> 00:14:27,000
exposed we do that through the domains I

00:14:24,660 --> 00:14:29,520
think it's called from a capacity

00:14:27,000 --> 00:14:33,180
planning perspective we need to know

00:14:29,520 --> 00:14:36,360
when to add more hosts so what we've

00:14:33,180 --> 00:14:38,730
done to date is set up the JMX tile in

00:14:36,360 --> 00:14:40,529
cloud foundry and then we took a plug-in

00:14:38,730 --> 00:14:43,050
in dynaTrace because we're a very large

00:14:40,529 --> 00:14:45,510
dynaTrace customer and hooked that up to

00:14:43,050 --> 00:14:48,060
the jmx tile and that that allows you to

00:14:45,510 --> 00:14:50,790
expose some platform metrics I think

00:14:48,060 --> 00:14:53,190
dynaTrace is beefing up their platform

00:14:50,790 --> 00:14:55,020
monitoring capability but right now you

00:14:53,190 --> 00:14:56,970
just get things like console health and

00:14:55,020 --> 00:14:59,910
and really these measures on the right I

00:14:56,970 --> 00:15:02,160
ripped this from the Google SRA book and

00:14:59,910 --> 00:15:05,130
those are like the four big things that

00:15:02,160 --> 00:15:06,600
we try to measure latency errors traffic

00:15:05,130 --> 00:15:07,860
and saturation saturation is probably

00:15:06,600 --> 00:15:10,470
the one you're most concerned about like

00:15:07,860 --> 00:15:12,750
how full is your stuff so if you're

00:15:10,470 --> 00:15:14,760
running out of disk space for example

00:15:12,750 --> 00:15:16,079
you'll want to add more disk or if your

00:15:14,760 --> 00:15:17,270
hosts are overcommitted

00:15:16,079 --> 00:15:19,310
you want to add more home

00:15:17,270 --> 00:15:21,260
and because we're using resource pools

00:15:19,310 --> 00:15:23,570
in vSphere we can just add additional

00:15:21,260 --> 00:15:27,310
hosts to the cluster and the resources

00:15:23,570 --> 00:15:27,310
get deep it up among the resource pools

00:15:28,330 --> 00:15:35,860
alright so for chargeback we're also

00:15:32,870 --> 00:15:40,190
kind of start on the left here we are

00:15:35,860 --> 00:15:42,500
measuring for things so the app instance

00:15:40,190 --> 00:15:45,770
count the service instance count the RAM

00:15:42,500 --> 00:15:47,570
in the disk so that's the basically

00:15:45,770 --> 00:15:49,280
based off of our licensing model we get

00:15:47,570 --> 00:15:51,890
charged for app instances and service

00:15:49,280 --> 00:15:54,740
instance count from our vendor and we

00:15:51,890 --> 00:15:56,630
have to provide disk and RAM CPUs kind

00:15:54,740 --> 00:15:58,040
of rolled up into everything else we

00:15:56,630 --> 00:15:59,210
don't really charge for CPU because

00:15:58,040 --> 00:16:01,550
we're accommodating for it and the

00:15:59,210 --> 00:16:03,230
pricing of the RAM in the disk but

00:16:01,550 --> 00:16:06,410
roughly it would be equivalent to your

00:16:03,230 --> 00:16:09,770
app instance count and then how do we

00:16:06,410 --> 00:16:11,750
measure we sample continually so we'll

00:16:09,770 --> 00:16:14,630
measure maybe every couple hours or

00:16:11,750 --> 00:16:17,440
every day the idea is to try to capture

00:16:14,630 --> 00:16:19,460
the maximum because of the way that our

00:16:17,440 --> 00:16:21,290
contracts are set up and most contracts

00:16:19,460 --> 00:16:22,940
are set up you get billed based on your

00:16:21,290 --> 00:16:24,860
max utilization so we want to capture

00:16:22,940 --> 00:16:27,260
that and you know you might scale up and

00:16:24,860 --> 00:16:29,510
down but your vendor will charge you for

00:16:27,260 --> 00:16:30,770
your scale-up peak so we wanted to be

00:16:29,510 --> 00:16:33,620
able to capture that when it happened

00:16:30,770 --> 00:16:37,600
and not just true up at the end and miss

00:16:33,620 --> 00:16:40,430
the scale-up and be out of compliance

00:16:37,600 --> 00:16:41,990
another thing to consider too is you

00:16:40,430 --> 00:16:45,080
don't want to be at 100% utilization

00:16:41,990 --> 00:16:47,480
ever because you'll basically hit a cap

00:16:45,080 --> 00:16:49,160
so you want to watch for 70 percent

00:16:47,480 --> 00:16:51,140
utilization least that's what we picked

00:16:49,160 --> 00:16:53,300
in our case and then that's a trigger to

00:16:51,140 --> 00:16:54,950
go buy more hardware or scale up your

00:16:53,300 --> 00:16:58,010
infrastructure a little bit more because

00:16:54,950 --> 00:17:00,050
you're running at the point where you

00:16:58,010 --> 00:17:02,330
are gonna start hitting limits hard

00:17:00,050 --> 00:17:04,970
limits and experiencing problems across

00:17:02,330 --> 00:17:07,339
your foundation so some feature this

00:17:04,970 --> 00:17:09,500
that are great it allows app owners to

00:17:07,339 --> 00:17:11,060
pay only for what they use we've were

00:17:09,500 --> 00:17:12,980
tossing around some stuff around t-shirt

00:17:11,060 --> 00:17:14,600
sizes and trying to use or quotas to

00:17:12,980 --> 00:17:16,400
limit stuff we got a lot of complaints

00:17:14,600 --> 00:17:18,320
from our users that hey what if I'm just

00:17:16,400 --> 00:17:20,720
using one app instance I don't want to

00:17:18,320 --> 00:17:22,910
have to pay for 5 or 10 or whatever that

00:17:20,720 --> 00:17:26,180
your pack is gonna provide same thing

00:17:22,910 --> 00:17:27,650
with service instances like I said it

00:17:26,180 --> 00:17:28,760
fits most contract models unless you

00:17:27,650 --> 00:17:30,570
have an enterprise agreement of some

00:17:28,760 --> 00:17:32,250
kind where you can eat as much

00:17:30,570 --> 00:17:34,559
Foundry as you want I'm jealous that

00:17:32,250 --> 00:17:37,289
would be awesome we're a really low

00:17:34,559 --> 00:17:39,029
utilization right now so we don't have

00:17:37,289 --> 00:17:42,090
the numbers of apps on our platform in

00:17:39,029 --> 00:17:44,940
order to make that buying decision so we

00:17:42,090 --> 00:17:48,960
really need to you know pay for only

00:17:44,940 --> 00:17:51,029
what we use and give people small small

00:17:48,960 --> 00:17:53,820
bytes to pull off so their consumption

00:17:51,029 --> 00:17:55,889
based and then it allows for future

00:17:53,820 --> 00:17:57,330
expansion you can increase your sample

00:17:55,889 --> 00:17:59,850
rate so you can increase your billing

00:17:57,330 --> 00:18:02,570
cycles a lot of IT is based on yearly

00:17:59,850 --> 00:18:04,769
budgeting so you could charge every year

00:18:02,570 --> 00:18:06,779
you know we want to shrink it down as

00:18:04,769 --> 00:18:10,080
much as possible and continually pull

00:18:06,779 --> 00:18:12,600
money instead of pulling every year

00:18:10,080 --> 00:18:14,580
every month just getting to monthly is

00:18:12,600 --> 00:18:16,919
going to be a huge step for us for

00:18:14,580 --> 00:18:19,289
billing from an IT perspective

00:18:16,919 --> 00:18:23,519
so with that you can you can figure out

00:18:19,289 --> 00:18:25,590
exactly when you want to true up all

00:18:23,519 --> 00:18:29,159
right so a way we're trying to change

00:18:25,590 --> 00:18:31,230
things from an operation perspective we

00:18:29,159 --> 00:18:33,509
have right now the Prague mission that

00:18:31,230 --> 00:18:36,120
I'm on a team it's there's two of us

00:18:33,509 --> 00:18:37,950
which is not great so there's an

00:18:36,120 --> 00:18:39,750
infrastructure engineer and I came from

00:18:37,950 --> 00:18:41,639
the app side solutions engineering is

00:18:39,750 --> 00:18:43,799
what we call it and I serve as a

00:18:41,639 --> 00:18:46,139
platform product owner so I spend a lot

00:18:43,799 --> 00:18:47,580
of time talking to consumers and I'm

00:18:46,139 --> 00:18:50,039
getting more and more into actually

00:18:47,580 --> 00:18:51,720
operating the foundation the way we

00:18:50,039 --> 00:18:54,210
wanted to structure this was to have the

00:18:51,720 --> 00:18:56,370
org manager be the single person that we

00:18:54,210 --> 00:18:58,289
talked to about what that customer needs

00:18:56,370 --> 00:19:00,240
so we've got our product teams these

00:18:58,289 --> 00:19:02,600
would be like clinical digital whatever

00:19:00,240 --> 00:19:04,740
our consumers are we have a

00:19:02,600 --> 00:19:06,870
representative that we communicate with

00:19:04,740 --> 00:19:09,269
about their needs we also try to drive

00:19:06,870 --> 00:19:11,519
as much support through that person so

00:19:09,269 --> 00:19:14,429
that we don't get hammered by 50 product

00:19:11,519 --> 00:19:15,929
teams at one time trying to get them to

00:19:14,429 --> 00:19:18,570
self-service we've almost set up like a

00:19:15,929 --> 00:19:20,940
slack like channel within humano it's

00:19:18,570 --> 00:19:23,190
called buzz it's a product we brought in

00:19:20,940 --> 00:19:25,409
before slack was cool and we're using

00:19:23,190 --> 00:19:27,269
that to try to make the product owners

00:19:25,409 --> 00:19:28,950
talk to each other about problems you

00:19:27,269 --> 00:19:30,929
know how do I push this app or I had a

00:19:28,950 --> 00:19:32,100
problem what build packed away is like

00:19:30,929 --> 00:19:34,320
do I need to be answering that every

00:19:32,100 --> 00:19:36,149
time probably not get the consumers to

00:19:34,320 --> 00:19:37,710
talk to each other and then they'll

00:19:36,149 --> 00:19:41,190
pretty much self-service and you build a

00:19:37,710 --> 00:19:43,169
community among your developers that way

00:19:41,190 --> 00:19:43,500
some things that these product teams

00:19:43,169 --> 00:19:45,630
have

00:19:43,500 --> 00:19:49,070
do they still have to request vanity

00:19:45,630 --> 00:19:52,350
URLs the Humana Oh URL is a vanity URL

00:19:49,070 --> 00:19:54,330
and if they need any firewall roles open

00:19:52,350 --> 00:19:56,010
to external services sometimes we'll do

00:19:54,330 --> 00:19:57,330
that for them if it's platform based but

00:19:56,010 --> 00:19:58,919
for the most part we say you guys are

00:19:57,330 --> 00:20:01,590
responsible for your applications open

00:19:58,919 --> 00:20:03,570
up your own firewall rules we also

00:20:01,590 --> 00:20:05,130
utilize infrastructure relationships you

00:20:03,570 --> 00:20:07,500
scratch my back I'll scratch yours

00:20:05,130 --> 00:20:08,940
because we hate tickets and if you can

00:20:07,500 --> 00:20:11,520
get away without using tickets more

00:20:08,940 --> 00:20:14,580
power to you and then also trying to get

00:20:11,520 --> 00:20:16,830
more direct access to vSphere so but one

00:20:14,580 --> 00:20:18,900
other guy on our team Tony staples he

00:20:16,830 --> 00:20:20,400
has full access to the vSphere

00:20:18,900 --> 00:20:22,049
environment and I keep begging for

00:20:20,400 --> 00:20:25,049
access I think I finally am getting

00:20:22,049 --> 00:20:27,210
close but we'll see so just trying to

00:20:25,049 --> 00:20:30,330
understand how the platform's utilizing

00:20:27,210 --> 00:20:31,590
the infrastructure and being able to to

00:20:30,330 --> 00:20:32,880
manage it in the event you have to do

00:20:31,590 --> 00:20:38,340
some sort of discovery or something like

00:20:32,880 --> 00:20:39,990
that so as far as future State things we

00:20:38,340 --> 00:20:41,940
are at the point where we're ready to

00:20:39,990 --> 00:20:43,740
start automating more and more I've done

00:20:41,940 --> 00:20:46,320
way too many platform installs to be

00:20:43,740 --> 00:20:50,669
happy at this point I think at one point

00:20:46,320 --> 00:20:54,090
I did like 14 or 15 installs trying to

00:20:50,669 --> 00:20:56,820
get the right version ready looking more

00:20:54,090 --> 00:21:01,110
at zero trust software-defined network

00:20:56,820 --> 00:21:02,340
policies just managing the networks in

00:21:01,110 --> 00:21:03,900
general - with software-defined

00:21:02,340 --> 00:21:05,880
networking would make our lives a lot

00:21:03,900 --> 00:21:08,429
easier because you get the storage and

00:21:05,880 --> 00:21:10,140
network virtualization the next step

00:21:08,429 --> 00:21:11,490
sorry get the storage and compute

00:21:10,140 --> 00:21:14,309
virtualization the next step is to have

00:21:11,490 --> 00:21:16,799
the network's virtualized as well GSLV

00:21:14,309 --> 00:21:18,990
we're doing local load balancing and

00:21:16,799 --> 00:21:21,720
some DNS trickery right now that I would

00:21:18,990 --> 00:21:23,940
like to get away from but we're looking

00:21:21,720 --> 00:21:26,640
at bringing that in an f5 or a net

00:21:23,940 --> 00:21:28,020
scaler typically for on-prem those are

00:21:26,640 --> 00:21:31,409
your options there's probably other ones

00:21:28,020 --> 00:21:32,490
as well still debating whether we need

00:21:31,409 --> 00:21:35,400
to look at reducing the number of

00:21:32,490 --> 00:21:37,380
foundations for this but the thing I

00:21:35,400 --> 00:21:41,370
want is sort of a you don't have to

00:21:37,380 --> 00:21:42,870
worry about dr as a developer and i

00:21:41,370 --> 00:21:45,090
think this might be pie in the sky after

00:21:42,870 --> 00:21:47,520
a lot of my conversations but an active

00:21:45,090 --> 00:21:49,679
active deployment for apps and the data

00:21:47,520 --> 00:21:51,120
the apps parts a little bit easier

00:21:49,679 --> 00:21:52,679
especially if they're stateless and you

00:21:51,120 --> 00:21:54,809
have your developers creating 12 factor

00:21:52,679 --> 00:21:56,460
applications you don't really have to

00:21:54,809 --> 00:21:56,909
worry so much about the data on the

00:21:56,460 --> 00:21:58,289
foundation

00:21:56,909 --> 00:22:00,239
but this is probably one of the

00:21:58,289 --> 00:22:02,609
questions I hear the most about is what

00:22:00,239 --> 00:22:04,970
are you doing with data and I'm asking

00:22:02,609 --> 00:22:06,989
it just as much as everybody else

00:22:04,970 --> 00:22:09,239
consolidating business metrics using the

00:22:06,989 --> 00:22:13,320
api's and the foundation surfacing that

00:22:09,239 --> 00:22:17,820
as well as metrics through that is the

00:22:13,320 --> 00:22:18,720
alarm metrics through through dynaTrace

00:22:17,820 --> 00:22:21,509
which is what we're using for

00:22:18,720 --> 00:22:23,789
application monitoring and then Splunk

00:22:21,509 --> 00:22:27,869
integration the tiles that are provided

00:22:23,789 --> 00:22:29,669
by pivotal there's a log search tile and

00:22:27,869 --> 00:22:32,729
you just set up a syslog endpoint and

00:22:29,669 --> 00:22:34,409
spunk and you pump it to that our cysts

00:22:32,729 --> 00:22:37,830
are our Splunk team it was kind of like

00:22:34,409 --> 00:22:40,200
a vertical that is hard to get a hold of

00:22:37,830 --> 00:22:41,249
and they want to budget upfront so we

00:22:40,200 --> 00:22:43,320
had a little bit of a challenge getting

00:22:41,249 --> 00:22:44,759
together with them hopefully we're gonna

00:22:43,320 --> 00:22:46,289
make some progress with that right now

00:22:44,759 --> 00:22:48,090
we're just using the log search tile and

00:22:46,289 --> 00:22:49,440
we have to dig in there manually we

00:22:48,090 --> 00:22:52,700
really want to get those into the place

00:22:49,440 --> 00:22:56,639
where all the other business metrics are

00:22:52,700 --> 00:22:58,619
all right thanks so when you look at all

00:22:56,639 --> 00:23:00,419
the work which needs to be done so how

00:22:58,619 --> 00:23:02,249
do how the ops team and have teams

00:23:00,419 --> 00:23:04,710
really enables so that they can take

00:23:02,249 --> 00:23:06,989
their Cloud Foundry and take it to the

00:23:04,710 --> 00:23:08,940
next level so what we do at butyl we

00:23:06,989 --> 00:23:10,409
think of it as two journeys one is the

00:23:08,940 --> 00:23:12,659
operations journey and one is the

00:23:10,409 --> 00:23:14,729
application journey once for Ops guys

00:23:12,659 --> 00:23:16,799
and one is for the app developers so

00:23:14,729 --> 00:23:19,950
what we do is and which we did with

00:23:16,799 --> 00:23:22,200
Humana also is we did like two twofold

00:23:19,950 --> 00:23:24,090
one we stand up the environment and help

00:23:22,200 --> 00:23:25,919
them learn the best practices for the

00:23:24,090 --> 00:23:28,200
day-to-day management of the environment

00:23:25,919 --> 00:23:30,629
of the platform and at the same time

00:23:28,200 --> 00:23:33,210
they can either the new application

00:23:30,629 --> 00:23:35,700
development with pivotal labs where they

00:23:33,210 --> 00:23:37,590
get to learn all the the best way of

00:23:35,700 --> 00:23:40,440
developing software to test you on

00:23:37,590 --> 00:23:43,590
development agile pair programming and

00:23:40,440 --> 00:23:45,720
TDD so while the development team is

00:23:43,590 --> 00:23:47,399
learning the ropes and doing that the

00:23:45,720 --> 00:23:50,639
operators are standing up the platform

00:23:47,399 --> 00:23:52,859
and making it ready for them once they

00:23:50,639 --> 00:23:54,570
move from that point on and as more and

00:23:52,859 --> 00:23:56,940
more teams start using the platform

00:23:54,570 --> 00:23:58,799
there are two other things which happen

00:23:56,940 --> 00:24:02,070
is one from the off side we call it the

00:23:58,799 --> 00:24:04,739
day to dojo where you get to do all your

00:24:02,070 --> 00:24:06,389
integration to your Laxus your log

00:24:04,739 --> 00:24:08,970
management system your application

00:24:06,389 --> 00:24:10,230
performance system you start hooking up

00:24:08,970 --> 00:24:11,940
your pipelines let's say

00:24:10,230 --> 00:24:14,460
concours pipelines which are there and

00:24:11,940 --> 00:24:16,169
you also start working on a DRG aspect

00:24:14,460 --> 00:24:17,880
of it so that's something we work with

00:24:16,169 --> 00:24:20,549
the operators on that and the

00:24:17,880 --> 00:24:21,929
application teams then have two options

00:24:20,549 --> 00:24:23,820
one they can start looking at rhe

00:24:21,929 --> 00:24:25,770
platforming some of the applications so

00:24:23,820 --> 00:24:27,179
there are a lot of legacy applications

00:24:25,770 --> 00:24:28,320
which can meet the 12 factor

00:24:27,179 --> 00:24:31,110
requirements which are there and which

00:24:28,320 --> 00:24:33,210
will which can leverage the platform and

00:24:31,110 --> 00:24:34,860
the what it benefits which are there so

00:24:33,210 --> 00:24:36,960
they go through an immersion education

00:24:34,860 --> 00:24:39,090
concept of it where they learn how to

00:24:36,960 --> 00:24:41,850
reap lat from the applications and move

00:24:39,090 --> 00:24:43,500
them to Cloud Foundry and obviously what

00:24:41,850 --> 00:24:44,940
is underlying everything and we heard is

00:24:43,500 --> 00:24:47,040
that you still have to establish the

00:24:44,940 --> 00:24:49,169
culture and train new leaders so that

00:24:47,040 --> 00:24:51,090
they can take it forward so people like

00:24:49,169 --> 00:24:52,620
Patrick can then take and have the

00:24:51,090 --> 00:24:54,600
vision which is there for Humana and

00:24:52,620 --> 00:24:56,390
take it further for the platform and

00:24:54,600 --> 00:24:59,760
also for the development teams and

00:24:56,390 --> 00:25:02,130
finally they reach a maturity point

00:24:59,760 --> 00:25:04,590
where the Ops guys are also very well

00:25:02,130 --> 00:25:05,940
versed in adding one more foundations

00:25:04,590 --> 00:25:07,950
which they need to meet the business

00:25:05,940 --> 00:25:10,500
needs and the application development

00:25:07,950 --> 00:25:12,630
teams are replac forming and moving more

00:25:10,500 --> 00:25:14,760
and more of the workloads from on Prem

00:25:12,630 --> 00:25:16,140
which they have into the cloud or the

00:25:14,760 --> 00:25:19,620
cloud foundry instances they are running

00:25:16,140 --> 00:25:21,360
for that so that way we work

00:25:19,620 --> 00:25:24,120
hand-in-hand with ops and app dev teams

00:25:21,360 --> 00:25:25,950
to make it easier for them to scale the

00:25:24,120 --> 00:25:28,140
platform at the same time gain the

00:25:25,950 --> 00:25:31,130
technology skills and also the knowledge

00:25:28,140 --> 00:25:34,429
to manage and maintain that platform

00:25:31,130 --> 00:25:37,140
with that I'll come to the conclusion so

00:25:34,429 --> 00:25:39,240
it's it's a journey the whole concept of

00:25:37,140 --> 00:25:41,490
taking your foundation and taking your

00:25:39,240 --> 00:25:44,160
Cloud Foundry to the next level to make

00:25:41,490 --> 00:25:45,540
it enterprise it is a journey you saw

00:25:44,160 --> 00:25:47,880
there are a lot of different tools a lot

00:25:45,540 --> 00:25:49,860
of different ways you can go and start

00:25:47,880 --> 00:25:51,780
working towards adding more resiliency

00:25:49,860 --> 00:25:55,320
and making what enterprise great to the

00:25:51,780 --> 00:25:56,880
platform end of the day to realize the

00:25:55,320 --> 00:25:58,440
cloud from this promise which is like

00:25:56,880 --> 00:26:00,000
developer productivity and operator

00:25:58,440 --> 00:26:01,620
efficiency those are the two main things

00:26:00,000 --> 00:26:04,440
which will really enable your business

00:26:01,620 --> 00:26:07,080
to deliver better faster in the most

00:26:04,440 --> 00:26:09,480
efficient way and finally guys have fun

00:26:07,080 --> 00:26:11,549
this is it's a great platform you can

00:26:09,480 --> 00:26:16,190
learn you can grow with it and you can

00:26:11,549 --> 00:26:16,190
really do wonders with it thank you

00:26:20,380 --> 00:26:35,230
if you have any questions my field

00:26:23,170 --> 00:26:36,880
questions now yeah so we thought it

00:26:35,230 --> 00:26:38,530
would be a lot faster but it was about

00:26:36,880 --> 00:26:40,440
six months or more

00:26:38,530 --> 00:26:42,940
we started in November with our dojo and

00:26:40,440 --> 00:26:45,340
right now we're at a point where we have

00:26:42,940 --> 00:26:45,880
our foundations up there on the latest

00:26:45,340 --> 00:26:48,130
version

00:26:45,880 --> 00:26:49,450
I think it's 110 we're on right now and

00:26:48,130 --> 00:26:50,800
we're bringing users into our QA

00:26:49,450 --> 00:26:52,690
environment we have to migrate them off

00:26:50,800 --> 00:26:54,340
the old environment and they're just a

00:26:52,690 --> 00:26:55,570
lot of like challenges around firewall

00:26:54,340 --> 00:26:58,780
rules and things like that that just

00:26:55,570 --> 00:27:00,580
continually slows us down but you know

00:26:58,780 --> 00:27:02,320
the best thing I can tell you about

00:27:00,580 --> 00:27:04,720
trying to get accelerate is try to think

00:27:02,320 --> 00:27:06,760
ahead as much as you need specifically

00:27:04,720 --> 00:27:20,620
around networks that was where our

00:27:06,760 --> 00:27:24,400
biggest challenge was but yeah so yeah

00:27:20,620 --> 00:27:27,370
we have five foundations up right now we

00:27:24,400 --> 00:27:31,270
as far as the journey we are probably

00:27:27,370 --> 00:27:32,860
can go back yeah sure oh well that was

00:27:31,270 --> 00:27:34,180
the I think it was the last slide there

00:27:32,860 --> 00:27:38,310
it rides out the one you're talking

00:27:34,180 --> 00:27:38,310
about the last slide set of slides yeah

00:27:38,460 --> 00:27:46,540
this one yeah we are throw in the middle

00:27:43,330 --> 00:27:48,630
yeah like we're I was talking to some

00:27:46,540 --> 00:27:52,120
other customers like Home Depot and

00:27:48,630 --> 00:27:53,800
Comcast's at a customer panel and I said

00:27:52,120 --> 00:27:56,680
that we are stuffing the powder keg

00:27:53,800 --> 00:27:57,670
right now ready to let it explode this

00:27:56,680 --> 00:27:59,110
is where you really get a ton of

00:27:57,670 --> 00:28:01,240
adoption on the right side you're ready

00:27:59,110 --> 00:28:03,330
to take on more consumers at that point

00:28:01,240 --> 00:28:05,530
and it sort of spreads virally

00:28:03,330 --> 00:28:07,930
developers talk a lot to each other and

00:28:05,530 --> 00:28:09,730
oh I had to spend you know four weeks

00:28:07,930 --> 00:28:11,170
filling out tickets and this other guy

00:28:09,730 --> 00:28:13,600
says I got an app published in five

00:28:11,170 --> 00:28:15,550
minutes you know they're obviously going

00:28:13,600 --> 00:28:18,430
to start asking questions and shoving it

00:28:15,550 --> 00:28:20,760
up to their leadership any other

00:28:18,430 --> 00:28:20,760
questions

00:28:27,840 --> 00:28:33,070
yeah so right now it's organic

00:28:31,390 --> 00:28:34,360
more than anything we're gonna be

00:28:33,070 --> 00:28:36,100
starting to drive more and more stuff

00:28:34,360 --> 00:28:38,650
into ServiceNow which is our

00:28:36,100 --> 00:28:40,360
self-service platform we brought it in

00:28:38,650 --> 00:28:42,280
for cloud service management and it

00:28:40,360 --> 00:28:43,330
integrates well VMware Azure things like

00:28:42,280 --> 00:28:45,700
that

00:28:43,330 --> 00:28:47,260
our first step in that was to create

00:28:45,700 --> 00:28:48,970
sonar cube I know if you're familiar

00:28:47,260 --> 00:28:51,400
with that but it's basically like static

00:28:48,970 --> 00:28:52,390
code analysis of self-service capability

00:28:51,400 --> 00:28:55,270
we use that as a learning experience

00:28:52,390 --> 00:28:57,490
next step we're gonna automatically we

00:28:55,270 --> 00:29:00,669
want to be able to track the org ID and

00:28:57,490 --> 00:29:02,260
use it for billing so we're gonna start

00:29:00,669 --> 00:29:04,150
driving more and more consumers into

00:29:02,260 --> 00:29:05,799
that self-service portal and drive their

00:29:04,150 --> 00:29:08,350
needs that way we'll also do things like

00:29:05,799 --> 00:29:10,150
scaling up your org quota and things

00:29:08,350 --> 00:29:15,720
like that through that self-service

00:29:10,150 --> 00:29:15,720
portal yeah so that's the goal yeah yep

00:29:25,490 --> 00:29:31,830
yeah so the sales typical sales is

00:29:29,340 --> 00:29:33,570
actually hitting the top up and we have

00:29:31,830 --> 00:29:36,150
too many consumers right now there's

00:29:33,570 --> 00:29:37,500
there's enough gossip happening to where

00:29:36,150 --> 00:29:39,060
people are hitting us up left and right

00:29:37,500 --> 00:29:41,520
trying to get on the platform so we

00:29:39,060 --> 00:29:44,130
don't really have a adoption problem as

00:29:41,520 --> 00:29:47,460
much as we're scrambling to to meet that

00:29:44,130 --> 00:29:50,910
need you know we had to sell it up to

00:29:47,460 --> 00:29:52,350
our senior VP of development and we had

00:29:50,910 --> 00:29:54,360
all of his direct reports in the room

00:29:52,350 --> 00:29:57,420
when we did that that was sort of the

00:29:54,360 --> 00:29:59,340
the initial introduction and then we

00:29:57,420 --> 00:30:00,630
focused on taking apps that were

00:29:59,340 --> 00:30:02,760
existing and moving them onto the

00:30:00,630 --> 00:30:03,960
enterprise platform and then from then

00:30:02,760 --> 00:30:08,100
we're going to start to sell more and

00:30:03,960 --> 00:30:21,450
more any other questions

00:30:08,100 --> 00:30:23,340
oh yeah like mainframe for example we

00:30:21,450 --> 00:30:25,140
have a pretty pretty big footprint in

00:30:23,340 --> 00:30:27,750
mainframe we went the Greenfield

00:30:25,140 --> 00:30:30,630
approach just saying you know it's sort

00:30:27,750 --> 00:30:32,280
of the bimodal IT that stuff stays over

00:30:30,630 --> 00:30:34,830
here if you're gonna do new app

00:30:32,280 --> 00:30:37,320
development specifically Web Apps is

00:30:34,830 --> 00:30:39,740
really where we're targeting those can

00:30:37,320 --> 00:30:42,690
go on Cloud Foundry and it's not a

00:30:39,740 --> 00:30:45,330
platform of choice yet but the interest

00:30:42,690 --> 00:30:48,720
is being drum up from that our team also

00:30:45,330 --> 00:30:51,180
handles like cloud self-service as well

00:30:48,720 --> 00:30:53,370
so we're focused on VMs right now but

00:30:51,180 --> 00:30:56,160
we're looking at other IT processes like

00:30:53,370 --> 00:30:57,720
DNS and firewall requests and adding

00:30:56,160 --> 00:30:59,850
those to our backlog for implementations

00:30:57,720 --> 00:31:01,470
so yeah we're kind of building up all

00:30:59,850 --> 00:31:03,480
these different pieces at one time but

00:31:01,470 --> 00:31:05,640
the only thing that's in state right now

00:31:03,480 --> 00:31:06,870
is quad foundry which makes it a good

00:31:05,640 --> 00:31:10,470
choice if you just want to get a web app

00:31:06,870 --> 00:31:17,420
up and running really quick all right

00:31:10,470 --> 00:31:17,420
any other questions all right oh yeah

00:31:19,460 --> 00:31:24,779
so yeah CFC Li and then we're using

00:31:22,860 --> 00:31:26,370
pivotal Cloud Foundry specifically so

00:31:24,779 --> 00:31:27,720
the apps manager within their I don't

00:31:26,370 --> 00:31:30,360
know if there's an equivalent to that in

00:31:27,720 --> 00:31:31,649
the open source ecosystem but we allow

00:31:30,360 --> 00:31:33,809
them to have access to that and then

00:31:31,649 --> 00:31:35,940
through the CI CV pipelines since we're

00:31:33,809 --> 00:31:39,450
using TFS release automation

00:31:35,940 --> 00:31:41,610
it has a tile or tasks for CF push and

00:31:39,450 --> 00:31:44,039
we tell them to use that for deploying

00:31:41,610 --> 00:31:46,110
to their production environments but

00:31:44,039 --> 00:31:48,750
yeah for the most part you're developing

00:31:46,110 --> 00:31:51,000
if you're doing ed Visual Studio and

00:31:48,750 --> 00:32:04,889
then you're deploying through CI CD

00:31:51,000 --> 00:32:06,330
pipelines yeah yeah so we have an

00:32:04,889 --> 00:32:09,990
enterprise integration group that

00:32:06,330 --> 00:32:12,840
handles API management they also handle

00:32:09,990 --> 00:32:15,600
things like data power and they were

00:32:12,840 --> 00:32:18,299
doing some work with Enterprise logging

00:32:15,600 --> 00:32:21,690
and Splunk but we tend to push the those

00:32:18,299 --> 00:32:23,549
needs to that group as we get more and

00:32:21,690 --> 00:32:25,679
more mature we'll start to look at more

00:32:23,549 --> 00:32:28,350
things to where the developer kind of

00:32:25,679 --> 00:32:31,139
has a single set of tools that they can

00:32:28,350 --> 00:32:33,360
utilize probably ServiceNow Cloud

00:32:31,139 --> 00:32:37,260
Foundry their developer workstation

00:32:33,360 --> 00:32:39,620
tools and TFS from our perspective any

00:32:37,260 --> 00:32:42,120
other questions

00:32:39,620 --> 00:32:42,570
all right all right well thank you

00:32:42,120 --> 00:32:45,019
everybody

00:32:42,570 --> 00:32:45,019
thank you

00:32:46,070 --> 00:32:48,450

YouTube URL: https://www.youtube.com/watch?v=D0-mDZT4iPE


