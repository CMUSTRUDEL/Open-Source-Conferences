Title: Know What You Have, View What They Are - PIK Team
Publication date: 2019-04-11
Playlist: Cloud Foundry Summit NA 2019 - Philadelphia
Description: 
	Know What You Have, View What They Are - PIK Team

https://www.cloudfoundry.org/
Captions: 
	00:00:01,550 --> 00:00:09,840
so good afternoon all so we call ourself

00:00:06,600 --> 00:00:11,580
as a big team so pick basically you know

00:00:09,840 --> 00:00:15,509
it's an alphabet for all three offers

00:00:11,580 --> 00:00:20,340
Patel ir and Kumar myself Patel Kumar

00:00:15,509 --> 00:00:23,550
and I are yeah so we you know we had an

00:00:20,340 --> 00:00:26,250
idea like in a Cloud Foundry know what

00:00:23,550 --> 00:00:29,689
you have and view where they are right

00:00:26,250 --> 00:00:34,710
so in a multi Cloud Foundry environment

00:00:29,689 --> 00:00:36,329
that's what our idea is so my problem

00:00:34,710 --> 00:00:38,100
statement like you know currently in any

00:00:36,329 --> 00:00:41,750
Enterprise big organization we have

00:00:38,100 --> 00:00:44,370
thousands of applications running across

00:00:41,750 --> 00:00:48,360
multi Cloud Foundry sites like you know

00:00:44,370 --> 00:00:51,360
six seven sites and my challenge in the

00:00:48,360 --> 00:00:53,969
operational or on a command level center

00:00:51,360 --> 00:00:55,949
where an application desk sees like if

00:00:53,969 --> 00:01:00,829
if my one of the DC or Cloud Foundry

00:00:55,949 --> 00:01:00,829
side is broken in due to whatever reason

00:01:00,949 --> 00:01:05,400
the statement here is you know I I

00:01:03,300 --> 00:01:07,500
wouldn't know that my application is

00:01:05,400 --> 00:01:11,040
present in which all other DC's which

00:01:07,500 --> 00:01:13,760
are live okay so here the idea is like a

00:01:11,040 --> 00:01:16,409
small GUI where I can type an

00:01:13,760 --> 00:01:18,600
application name and it can show me the

00:01:16,409 --> 00:01:20,280
status of what whatever the health

00:01:18,600 --> 00:01:23,130
status or availability changes and other

00:01:20,280 --> 00:01:26,580
DC's so that that's the whole idea

00:01:23,130 --> 00:01:30,210
behind what you're you know we have done

00:01:26,580 --> 00:01:31,799
so far and challenges like you know we

00:01:30,210 --> 00:01:34,650
don't know like what are the

00:01:31,799 --> 00:01:36,720
applications impacted if one CF goes

00:01:34,650 --> 00:01:40,710
down one one cloud form decides and

00:01:36,720 --> 00:01:43,549
ouside go down so in that perspective we

00:01:40,710 --> 00:01:47,490
we you know we have collated an idea and

00:01:43,549 --> 00:01:50,579
and more little how we did you know I

00:01:47,490 --> 00:01:52,290
want my colleague Kumar to you know take

00:01:50,579 --> 00:01:55,880
it forward so this is our idea and

00:01:52,290 --> 00:01:55,880
basically this our prototype

00:01:57,560 --> 00:02:07,159
yeah thanks Patel so I'll go with the

00:02:03,340 --> 00:02:09,530
proposed solution so so one way of doing

00:02:07,159 --> 00:02:11,959
this is we can move this problem so we

00:02:09,530 --> 00:02:14,150
are facing currently like we can only

00:02:11,959 --> 00:02:15,830
login into one particular site or

00:02:14,150 --> 00:02:17,900
datacenter and to get the health

00:02:15,830 --> 00:02:20,150
information or any status right so to

00:02:17,900 --> 00:02:23,930
have that we can we thought of building

00:02:20,150 --> 00:02:26,410
a UI or array and it has agent which

00:02:23,930 --> 00:02:28,819
gathers all the application stats and

00:02:26,410 --> 00:02:31,340
other health check information from

00:02:28,819 --> 00:02:34,750
various sites or availability zone and

00:02:31,340 --> 00:02:36,709
it will probably share that across the

00:02:34,750 --> 00:02:38,810
agents which is being deployed in

00:02:36,709 --> 00:02:41,510
individual sites from there we'll be

00:02:38,810 --> 00:02:43,370
pulling that information into our UI UI

00:02:41,510 --> 00:02:47,030
or it could be integrated it's just like

00:02:43,370 --> 00:02:52,209
a custom UI and can be later integrated

00:02:47,030 --> 00:02:54,319
with status UI or we can do main things

00:02:52,209 --> 00:02:57,920
so this this will be like a simple

00:02:54,319 --> 00:03:00,470
search by just giving a application name

00:02:57,920 --> 00:03:05,060
it's going to search across all the

00:03:00,470 --> 00:03:08,540
multiple sites available and it's going

00:03:05,060 --> 00:03:11,680
to give us the health and and for

00:03:08,540 --> 00:03:15,470
current MEP so since we have like a

00:03:11,680 --> 00:03:19,900
limited time constraint so we have came

00:03:15,470 --> 00:03:23,569
with this prototype of simple UI which

00:03:19,900 --> 00:03:26,510
basically which queries and gathers all

00:03:23,569 --> 00:03:29,060
the information from across the multiple

00:03:26,510 --> 00:03:32,120
availability zone by executing some

00:03:29,060 --> 00:03:34,489
commands and it it's going to be

00:03:32,120 --> 00:03:38,720
available so I'll quickly show a quick

00:03:34,489 --> 00:03:42,859
demo and we have developed this

00:03:38,720 --> 00:03:44,959
particular UI and with taking

00:03:42,859 --> 00:03:48,290
considering the IBM cloud so we made

00:03:44,959 --> 00:03:50,410
this of IBM public cloud and we created

00:03:48,290 --> 00:03:50,410
a

00:04:01,480 --> 00:04:08,840
yeah so in so we are new to I've been by

00:04:05,480 --> 00:04:10,670
a public cloud so what we did is we we

00:04:08,840 --> 00:04:14,060
created like three sites like three

00:04:10,670 --> 00:04:17,060
different data centers so one is each

00:04:14,060 --> 00:04:19,400
one of us has like different different

00:04:17,060 --> 00:04:21,650
sites so one will be from Washington DC

00:04:19,400 --> 00:04:24,800
the other one will be from Dallas all

00:04:21,650 --> 00:04:27,139
other other location is from Germany so

00:04:24,800 --> 00:04:31,070
right now we created like this app

00:04:27,139 --> 00:04:35,900
called PA K app and we deployed in three

00:04:31,070 --> 00:04:43,430
three different centers and and also the

00:04:35,900 --> 00:04:46,570
UI which we built we have deployed it so

00:04:43,430 --> 00:04:46,570
let me get

00:04:54,490 --> 00:04:58,199
I had we have the boat

00:05:06,050 --> 00:05:13,340
yeah so we have both the UI as well as

00:05:09,669 --> 00:05:16,190
the script so I can show both of them so

00:05:13,340 --> 00:05:20,180
this is just a simple UI which kids the

00:05:16,190 --> 00:05:22,699
app name so I'm just giving here pay K

00:05:20,180 --> 00:05:24,770
and this is the app which is deployed so

00:05:22,699 --> 00:05:27,530
what it does is it goes and searches all

00:05:24,770 --> 00:05:30,199
the abilities on our sites and pulls out

00:05:27,530 --> 00:05:32,569
the information and it displays so this

00:05:30,199 --> 00:05:36,250
is for like a phase 1 or a current MEP

00:05:32,569 --> 00:05:38,810
later I think it is going to explain

00:05:36,250 --> 00:05:40,729
explain about it so this is it gives you

00:05:38,810 --> 00:05:43,400
the app name with the current status of

00:05:40,729 --> 00:05:45,349
it it's started or stopped and and also

00:05:43,400 --> 00:05:48,409
the instance how many instances there

00:05:45,349 --> 00:05:51,199
and how many are running also the usage

00:05:48,409 --> 00:05:55,759
of the each app what's the route and

00:05:51,199 --> 00:05:58,669
basic app related stats so this this

00:05:55,759 --> 00:06:01,310
kind of like a basic information with

00:05:58,669 --> 00:06:04,340
this we can enhance by adding more

00:06:01,310 --> 00:06:07,669
functionalities like further future MVPs

00:06:04,340 --> 00:06:09,919
like restart or doing everything that I

00:06:07,669 --> 00:06:12,889
will be talking about in detail and also

00:06:09,919 --> 00:06:15,229
last thing I would like to show the the

00:06:12,889 --> 00:06:20,979
scripts which it can be also be done by

00:06:15,229 --> 00:06:20,979
the scripts so I can show that quickly

00:06:23,820 --> 00:06:33,270
so so this is this is a script which we

00:06:31,320 --> 00:06:35,460
also have so initially we start with the

00:06:33,270 --> 00:06:37,140
script and we hand ends to a UI later

00:06:35,460 --> 00:06:39,390
later we can also integrate this with

00:06:37,140 --> 00:06:41,610
any other UI or it could be like a

00:06:39,390 --> 00:06:44,130
custom UI which talks to all the whole

00:06:41,610 --> 00:06:47,130
looped reasons so what this does is it

00:06:44,130 --> 00:06:50,760
looks for this particular app called PHA

00:06:47,130 --> 00:06:53,190
app across all the available zone so

00:06:50,760 --> 00:06:55,560
first it's logging in so as I mentioned

00:06:53,190 --> 00:06:58,890
earlier we have three data centers so

00:06:55,560 --> 00:07:01,470
first it goes through data center one it

00:06:58,890 --> 00:07:03,060
like it locks in and it searches this is

00:07:01,470 --> 00:07:04,920
like behind the scene locks I'm just

00:07:03,060 --> 00:07:06,720
showing for you so what happens when

00:07:04,920 --> 00:07:08,580
when they UI interact and looks for that

00:07:06,720 --> 00:07:11,970
particular app it says ok this app is

00:07:08,580 --> 00:07:14,040
running at only one instance and this is

00:07:11,970 --> 00:07:16,110
the status of it then after that it it

00:07:14,040 --> 00:07:17,850
goes and logs into the second data

00:07:16,110 --> 00:07:20,910
center and checks for this particular

00:07:17,850 --> 00:07:23,090
app and pulls out a matrices like okay

00:07:20,910 --> 00:07:26,250
where is this particular same app name

00:07:23,090 --> 00:07:28,050
for this particular adapted zone so

00:07:26,250 --> 00:07:30,540
what's the information so they are like

00:07:28,050 --> 00:07:33,150
two instance running and and for the

00:07:30,540 --> 00:07:35,250
next there's there's no app deployed so

00:07:33,150 --> 00:07:37,170
it's not been there so this is this how

00:07:35,250 --> 00:07:38,520
this is like behind the behind the scene

00:07:37,170 --> 00:07:40,830
we initially started with this script

00:07:38,520 --> 00:07:44,010
and then we had anced the UI and we can

00:07:40,830 --> 00:07:47,700
do many many things so I'll just pass on

00:07:44,010 --> 00:07:50,220
to the next future use cases to ID so

00:07:47,700 --> 00:07:52,460
that he can explain about the future use

00:07:50,220 --> 00:07:52,460
cases

00:07:56,249 --> 00:08:05,409
thanks mama thanks Kumar ah so we

00:08:01,539 --> 00:08:07,870
started with the initial trial on or

00:08:05,409 --> 00:08:10,900
prototype with the available current

00:08:07,870 --> 00:08:15,249
site so in any enterprise environment

00:08:10,900 --> 00:08:17,289
you have some multiple sites so to make

00:08:15,249 --> 00:08:20,039
it more production so what we can do is

00:08:17,289 --> 00:08:23,680
we can gather this data gathering as

00:08:20,039 --> 00:08:26,490
actually a scheduled or automated or by

00:08:23,680 --> 00:08:29,289
way of a separating it from a UI to an

00:08:26,490 --> 00:08:31,300
agent so that it will be doing a local

00:08:29,289 --> 00:08:36,519
gathering and then sharing it across the

00:08:31,300 --> 00:08:38,229
different availability zone agents to

00:08:36,519 --> 00:08:41,709
enhance the user experience you can

00:08:38,229 --> 00:08:45,610
actually MVP 3 we can actually do it

00:08:41,709 --> 00:08:47,680
with maybe a another rough UI any UI we

00:08:45,610 --> 00:08:51,880
can integrate it like maybe Stratus or

00:08:47,680 --> 00:08:54,910
something like that and we can also in

00:08:51,880 --> 00:08:57,990
MEP for we can actually store and

00:08:54,910 --> 00:09:00,490
retrieve the application status and

00:08:57,990 --> 00:09:04,360
improve the performance by caching it

00:09:00,490 --> 00:09:06,720
locally and persisting across a data

00:09:04,360 --> 00:09:09,459
store so if one site is completely down

00:09:06,720 --> 00:09:11,260
even if connected to another UI in

00:09:09,459 --> 00:09:12,459
another Cloud Foundry instance I will be

00:09:11,260 --> 00:09:18,339
able to get all the information about

00:09:12,459 --> 00:09:20,920
applications running on that site and we

00:09:18,339 --> 00:09:26,170
can actually also make this agent based

00:09:20,920 --> 00:09:28,540
tool as an enhancement to do a do all

00:09:26,170 --> 00:09:30,279
actions through routine mundane actions

00:09:28,540 --> 00:09:32,079
or something like that doing a health

00:09:30,279 --> 00:09:38,709
checks or restart all these things can

00:09:32,079 --> 00:09:42,310
be done at a single console so these are

00:09:38,709 --> 00:09:44,380
the proposed enhancements which we can

00:09:42,310 --> 00:09:47,320
visualize at this point of time that's

00:09:44,380 --> 00:09:50,310
it from outside any questions we can

00:09:47,320 --> 00:09:50,310
take if you have

00:10:02,790 --> 00:10:05,480
okay

00:10:06,270 --> 00:10:10,260

YouTube URL: https://www.youtube.com/watch?v=XHOxSi2Q4Es


