Title: A Victim of Our Own Success – Overcoming the Challenges of 30,000 AIs - Tim Leong, Comcast
Publication date: 2019-04-11
Playlist: Cloud Foundry Summit NA 2019 - Philadelphia
Description: 
	A Victim of Our Own Success – Overcoming the Challenges of 30,000 AIs - Tim Leong, Comcast

2018 has been a boom year for Cloud Foundry at Comcast. Because of its immense popularity with our development teams, and the easy, repeatable frameworks we have created for transitioning into CF, we have doubled in size from 13,000 AIs to over 30,000 in a single year! It’s been great to see such rapid adoption, but it has come with serious challenges. As we maintain our commitment to the success of teams going Cloud Native, we needed to overcome these obstacles and maintain the success of the platform. It was a hard year, but our team came out of it stronger and better prepared to plan for and respond to rapid changes in demand.

Let us show you how we did it. We will review our most important lessons of the last year.

About Tim Leong
Cloud Foundry architect, engineer and operator for the last 5 years at Comcast. Currently acting as free safety for several projects including Open Source CF migrations, CFCR, Concourse and all things Cloud Native. This is my 4th Cloud Foundry summit and 3rd speaking engagement.

https://www.cloudfoundry.org/
Captions: 
	00:00:00,000 --> 00:00:02,820
thanks for coming to my talk good

00:00:01,319 --> 00:00:07,109
afternoon my name is Tim Liang I work

00:00:02,820 --> 00:00:08,880
for Comcast and today I'm talking to you

00:00:07,109 --> 00:00:11,610
about how we overcame the challenges of

00:00:08,880 --> 00:00:14,280
31,000 ai's which is now actually 40,000

00:00:11,610 --> 00:00:16,590
ai's so for anyone in the room who's

00:00:14,280 --> 00:00:18,630
kind of tired of hearing about Comcast

00:00:16,590 --> 00:00:19,560
all of our you know our victories you're

00:00:18,630 --> 00:00:22,430
in the right room because I'm gonna tell

00:00:19,560 --> 00:00:22,430
you how we all screwed it up

00:00:22,800 --> 00:00:27,599
but no that's not that's not true for

00:00:24,570 --> 00:00:29,519
for real what you know we've we've had

00:00:27,599 --> 00:00:31,769
some missteps along the way over the

00:00:29,519 --> 00:00:34,980
five years that we've been running this

00:00:31,769 --> 00:00:37,230
platform and some of those decisions

00:00:34,980 --> 00:00:39,300
that we've made have culminated into a

00:00:37,230 --> 00:00:42,420
series of month or unfortunate events

00:00:39,300 --> 00:00:44,719
that we experienced last year so I want

00:00:42,420 --> 00:00:47,190
to take some time talk to you through

00:00:44,719 --> 00:00:49,920
what we went through some of the

00:00:47,190 --> 00:00:52,260
mistakes that we made and how we came

00:00:49,920 --> 00:00:55,140
together as a team not just the platform

00:00:52,260 --> 00:00:57,750
team but a full team of platform

00:00:55,140 --> 00:01:01,620
engineers and developers how we all work

00:00:57,750 --> 00:01:04,170
together to make the platform a success

00:01:01,620 --> 00:01:07,860
for everybody and move past these

00:01:04,170 --> 00:01:12,570
challenges and set us up to be much more

00:01:07,860 --> 00:01:15,060
successful in the future so first a

00:01:12,570 --> 00:01:18,299
little bit about us or the APA team

00:01:15,060 --> 00:01:20,490
application platform acceleration it's

00:01:18,299 --> 00:01:22,020
our mission to try to simplify the lives

00:01:20,490 --> 00:01:24,950
of the developers and help them to

00:01:22,020 --> 00:01:27,390
deploy software faster and more easier

00:01:24,950 --> 00:01:29,340
and we do that through our platforms

00:01:27,390 --> 00:01:32,100
obviously we support cloud foundry which

00:01:29,340 --> 00:01:33,900
is a huge benefit to our developers we

00:01:32,100 --> 00:01:36,990
also have our apex platform which is a

00:01:33,900 --> 00:01:38,130
coup banana based platform for other

00:01:36,990 --> 00:01:40,140
workloads which you might have heard

00:01:38,130 --> 00:01:42,420
about right across the hall

00:01:40,140 --> 00:01:45,780
we have a concourse deployment for folks

00:01:42,420 --> 00:01:47,939
who need C ICD and then we have our dev

00:01:45,780 --> 00:01:52,350
X team which is responsible for direct

00:01:47,939 --> 00:01:56,759
customer outreach and consulting for

00:01:52,350 --> 00:01:58,979
best practice on cloud native so this is

00:01:56,759 --> 00:02:02,369
us today but if you think take us back

00:01:58,979 --> 00:02:05,520
to like 2014 we were just starting in

00:02:02,369 --> 00:02:07,500
this world we were just getting started

00:02:05,520 --> 00:02:09,660
with cloud foundry we were deploying our

00:02:07,500 --> 00:02:11,970
first cloud foundry installation I think

00:02:09,660 --> 00:02:14,220
it was like it like one two or something

00:02:11,970 --> 00:02:15,840
like that when we started

00:02:14,220 --> 00:02:17,610
and it was right around the time that

00:02:15,840 --> 00:02:20,880
the ice bucket challenges were happening

00:02:17,610 --> 00:02:22,160
online when they all went viral and we

00:02:20,880 --> 00:02:25,590
were going through sort of the same

00:02:22,160 --> 00:02:27,510
process the felt a little bit like an

00:02:25,590 --> 00:02:29,490
ice bucket being dumped on our heads

00:02:27,510 --> 00:02:33,900
this new cloud native world and it felt

00:02:29,490 --> 00:02:37,020
that way for a lot of our developers to

00:02:33,900 --> 00:02:40,470
our developers were not used to this new

00:02:37,020 --> 00:02:43,350
platform it was odd to them they didn't

00:02:40,470 --> 00:02:44,490
really understand how it worked what the

00:02:43,350 --> 00:02:45,900
architecture looked like it was very

00:02:44,490 --> 00:02:49,770
strange that they could just push an

00:02:45,900 --> 00:02:51,810
application in and get it to run so our

00:02:49,770 --> 00:02:54,690
team was really focused on making sure

00:02:51,810 --> 00:02:56,220
that this platform was a success and

00:02:54,690 --> 00:02:59,220
that they could see the benefit that we

00:02:56,220 --> 00:03:03,540
all knew it provided to application

00:02:59,220 --> 00:03:06,000
developers so when we started our our

00:03:03,540 --> 00:03:08,640
method was to focus on growth and

00:03:06,000 --> 00:03:10,739
adoption we wanted to make sure people

00:03:08,640 --> 00:03:12,420
onboard it onto the platform we wanted

00:03:10,739 --> 00:03:15,660
to do whatever we could to make sure

00:03:12,420 --> 00:03:17,549
that happened we focused a lot on

00:03:15,660 --> 00:03:20,190
marketing and training we actually

00:03:17,549 --> 00:03:21,750
printed these posters and put them all

00:03:20,190 --> 00:03:22,200
around to the Comcast Center across the

00:03:21,750 --> 00:03:24,380
street

00:03:22,200 --> 00:03:30,269
they're probably actually still there

00:03:24,380 --> 00:03:32,400
and ended you know we we tried to limit

00:03:30,269 --> 00:03:34,230
roadblocks and restrictions as much as

00:03:32,400 --> 00:03:35,340
possible so we didn't really ask too

00:03:34,230 --> 00:03:37,380
much about you know what are you gonna

00:03:35,340 --> 00:03:41,820
need that quota for we were just happy

00:03:37,380 --> 00:03:45,299
that you were using the platform and you

00:03:41,820 --> 00:03:47,880
know we tried to help you do that

00:03:45,299 --> 00:03:49,440
we used it at the time a lot of

00:03:47,880 --> 00:03:52,079
development teams are trying to get into

00:03:49,440 --> 00:03:53,910
DevOps and agile and we use this as a

00:03:52,079 --> 00:03:55,790
vehicle to promote those things and say

00:03:53,910 --> 00:03:58,829
you can have these things automatically

00:03:55,790 --> 00:04:02,459
in a large part if you just go on to our

00:03:58,829 --> 00:04:04,590
platform and then we we we just

00:04:02,459 --> 00:04:07,799
basically built capacity as fast as we

00:04:04,590 --> 00:04:10,200
could to keep up with demand so you know

00:04:07,799 --> 00:04:12,600
we just kept on rolling and rolling and

00:04:10,200 --> 00:04:16,260
rolling in more servers to try to keep

00:04:12,600 --> 00:04:18,720
ahead of that curve and it worked really

00:04:16,260 --> 00:04:22,919
well for us we had 300% growth year over

00:04:18,720 --> 00:04:25,260
year for about three or four years as

00:04:22,919 --> 00:04:26,850
you can see that the the comparison

00:04:25,260 --> 00:04:29,220
between 20 17 and 24

00:04:26,850 --> 00:04:32,580
as far as application a eyes and

00:04:29,220 --> 00:04:34,110
developers go and we were able to stay

00:04:32,580 --> 00:04:40,440
ahead of it with our capacity in our

00:04:34,110 --> 00:04:43,530
demand and we were able to keep ahead

00:04:40,440 --> 00:04:45,960
and deploy infrastructure just in time

00:04:43,530 --> 00:04:50,790
for that next capacity or resource

00:04:45,960 --> 00:04:54,290
utilization bump so I'm sure you can

00:04:50,790 --> 00:04:54,290
understand what happens next

00:04:54,410 --> 00:05:00,360
basically 2018 comes everybody is is

00:04:58,680 --> 00:05:03,000
really good with the platform now they

00:05:00,360 --> 00:05:06,090
can deploy micro services in days it

00:05:03,000 --> 00:05:08,430
doesn't take long for really high

00:05:06,090 --> 00:05:10,830
resource intensive applications to get

00:05:08,430 --> 00:05:12,390
on board and onto our platform we still

00:05:10,830 --> 00:05:14,880
were sort of operating under that same

00:05:12,390 --> 00:05:16,020
model of you know we're really happy for

00:05:14,880 --> 00:05:18,390
you to use the platform we're just going

00:05:16,020 --> 00:05:21,240
to deploy infrastructure to support it

00:05:18,390 --> 00:05:23,670
and 2018 felt really like just like a

00:05:21,240 --> 00:05:25,580
year-long Black Friday sale just people

00:05:23,670 --> 00:05:30,090
grabbing capacity as much as they can

00:05:25,580 --> 00:05:32,870
and we were trying to keep up and what

00:05:30,090 --> 00:05:35,430
we saw were incidents like these where

00:05:32,870 --> 00:05:37,800
this isn't a real performance graph but

00:05:35,430 --> 00:05:40,700
we would see on some of our largest

00:05:37,800 --> 00:05:43,430
clusters we would see a 40% bump in

00:05:40,700 --> 00:05:45,990
resource utilization within two weeks

00:05:43,430 --> 00:05:48,300
something we were not at all prepared

00:05:45,990 --> 00:05:49,560
for and then luckily we had

00:05:48,300 --> 00:05:51,720
infrastructure that would come in

00:05:49,560 --> 00:05:53,040
afterwards and it would bring the

00:05:51,720 --> 00:05:54,810
utilization down and then two weeks

00:05:53,040 --> 00:05:59,310
again it would happen again it would

00:05:54,810 --> 00:06:03,990
bump up again so that that was that was

00:05:59,310 --> 00:06:06,960
a problem and you know we had to we had

00:06:03,990 --> 00:06:09,450
we had several impacts of this I mean we

00:06:06,960 --> 00:06:11,190
had a Brazilian see failures once the

00:06:09,450 --> 00:06:14,400
performance got or once the utilization

00:06:11,190 --> 00:06:16,890
got to a certain point health checks

00:06:14,400 --> 00:06:19,020
started timing out applications started

00:06:16,890 --> 00:06:20,850
crashing there was a lot of reduced

00:06:19,020 --> 00:06:22,320
confidence in the platform people

00:06:20,850 --> 00:06:26,010
started to wonder if this is the place

00:06:22,320 --> 00:06:28,200
where they should go and you know we

00:06:26,010 --> 00:06:30,210
were 100% focused on operational issues

00:06:28,200 --> 00:06:34,160
so we weren't able to really focus too

00:06:30,210 --> 00:06:36,720
much on improvements or the things that

00:06:34,160 --> 00:06:38,930
would help us move this platform into

00:06:36,720 --> 00:06:42,080
the future

00:06:38,930 --> 00:06:43,759
so that was that was our year so what

00:06:42,080 --> 00:06:48,080
did we learn what do we learn from all

00:06:43,759 --> 00:06:51,229
of this the first thing we learned is

00:06:48,080 --> 00:06:55,460
that forecasting is hard forecasting is

00:06:51,229 --> 00:06:57,530
really hard in this world but you know

00:06:55,460 --> 00:07:00,110
when you're when you're living in the in

00:06:57,530 --> 00:07:02,060
a dynamic environment like us like we

00:07:00,110 --> 00:07:04,070
are you have constantly changing

00:07:02,060 --> 00:07:06,860
business needs so the business is always

00:07:04,070 --> 00:07:09,080
bringing in new initiatives these things

00:07:06,860 --> 00:07:12,260
aren't necessarily always planned for in

00:07:09,080 --> 00:07:13,729
time for you to purchase and deploy

00:07:12,260 --> 00:07:17,210
hardware in order to support these

00:07:13,729 --> 00:07:19,960
things some of these workloads have

00:07:17,210 --> 00:07:24,289
really unpredictable CPU spikes

00:07:19,960 --> 00:07:26,419
interesting story we we used to model

00:07:24,289 --> 00:07:29,660
all of our capacity off of like a memory

00:07:26,419 --> 00:07:32,180
demand because a lot of our applications

00:07:29,660 --> 00:07:35,360
were were really memory bound and at

00:07:32,180 --> 00:07:38,270
some point that shifted and we saw a

00:07:35,360 --> 00:07:40,250
much higher usage in CPU spikes as

00:07:38,270 --> 00:07:42,620
opposed to to memory so we had to look

00:07:40,250 --> 00:07:44,180
at things differently and that was a

00:07:42,620 --> 00:07:46,970
challenge because CPU doesn't really

00:07:44,180 --> 00:07:51,680
have a quota system in clownery so it's

00:07:46,970 --> 00:07:55,220
hard for us to - to control those those

00:07:51,680 --> 00:07:57,260
types of workloads and just-in-time

00:07:55,220 --> 00:07:59,690
infrastructure basically you know you

00:07:57,260 --> 00:08:02,090
you try to buy the the infrastructure

00:07:59,690 --> 00:08:04,250
you'll need six months from now and when

00:08:02,090 --> 00:08:06,050
that six months comes hopefully your

00:08:04,250 --> 00:08:11,150
infrastructure is there just in time for

00:08:06,050 --> 00:08:14,659
you to deploy it and be in time for for

00:08:11,150 --> 00:08:16,099
that capacity home so the thing about

00:08:14,659 --> 00:08:19,010
this lesson is there's not really a

00:08:16,099 --> 00:08:22,099
lesson here forecasting is hard if you

00:08:19,010 --> 00:08:25,370
if you work in a business where these

00:08:22,099 --> 00:08:28,490
types of things exist these types of

00:08:25,370 --> 00:08:30,470
things will probably always exist so if

00:08:28,490 --> 00:08:33,229
you're not in a model where you can do

00:08:30,470 --> 00:08:34,940
chargeback or you're in a dynamic

00:08:33,229 --> 00:08:37,550
environment where workloads are always

00:08:34,940 --> 00:08:41,330
going to be changing you might not be

00:08:37,550 --> 00:08:45,290
able to fix any of these three things so

00:08:41,330 --> 00:08:47,630
what we had to do is design around it so

00:08:45,290 --> 00:08:50,900
we had to figure out a way to know that

00:08:47,630 --> 00:08:52,380
this is happening know that we are gonna

00:08:50,900 --> 00:08:54,570
see this in the future

00:08:52,380 --> 00:08:56,100
and how can we design better and how can

00:08:54,570 --> 00:08:59,100
we run this platform better so that we

00:08:56,100 --> 00:09:05,130
could be prepared for it and respond to

00:08:59,100 --> 00:09:08,190
it in a better way so that brings us to

00:09:05,130 --> 00:09:11,490
lesson two our design choice in the

00:09:08,190 --> 00:09:13,680
beginning was whenever we had capacity

00:09:11,490 --> 00:09:15,210
needs we would basically just keep on

00:09:13,680 --> 00:09:16,740
adding infrastructure and infrastructure

00:09:15,210 --> 00:09:19,530
and infrastructure to a relatively small

00:09:16,740 --> 00:09:22,560
amount of sites I think at the time we

00:09:19,530 --> 00:09:25,470
had maybe five or six main sites where a

00:09:22,560 --> 00:09:26,910
lot of our workloads are running and as

00:09:25,470 --> 00:09:29,190
these were growing and growing and

00:09:26,910 --> 00:09:30,630
growing what we were doing was we

00:09:29,190 --> 00:09:32,510
realized what we were doing was we were

00:09:30,630 --> 00:09:37,640
basically just creating another monolith

00:09:32,510 --> 00:09:40,430
so you have just a large stack of

00:09:37,640 --> 00:09:43,290
microservices but they're all

00:09:40,430 --> 00:09:46,680
codependent and they're all very

00:09:43,290 --> 00:09:48,810
dependent on a single set of

00:09:46,680 --> 00:09:50,340
infrastructure underneath so if you have

00:09:48,810 --> 00:09:52,220
any one of those if you have any

00:09:50,340 --> 00:09:55,320
infrastructure concerns underneath that

00:09:52,220 --> 00:09:57,690
cause failures all of those containers

00:09:55,320 --> 00:09:58,830
are going to have impact and all of

00:09:57,690 --> 00:10:02,000
those containers are going to have to

00:09:58,830 --> 00:10:04,380
move somewhere else and not only is

00:10:02,000 --> 00:10:09,150
moving all of those containers a

00:10:04,380 --> 00:10:11,130
seriously expensive task the the

00:10:09,150 --> 00:10:13,800
capacity required for supporting those

00:10:11,130 --> 00:10:17,600
those containers on like one other site

00:10:13,800 --> 00:10:21,270
is it's going to be a big problem

00:10:17,600 --> 00:10:23,910
so we decomposed it right so we we

00:10:21,270 --> 00:10:29,850
basically said we need to support many

00:10:23,910 --> 00:10:33,570
smaller sites we need to avoid the micro

00:10:29,850 --> 00:10:35,700
service monolith by distributing

00:10:33,570 --> 00:10:39,960
applications across many more sites so

00:10:35,700 --> 00:10:41,550
that if you are having problems with one

00:10:39,960 --> 00:10:43,410
site it's going to reduce the blast

00:10:41,550 --> 00:10:45,870
radius and it's a lot easier for five

00:10:43,410 --> 00:10:51,320
sites to absorb the capacity of one

00:10:45,870 --> 00:10:54,300
versus one site absorbing the kepada the

00:10:51,320 --> 00:10:55,500
50% of the capacity from our one hundred

00:10:54,300 --> 00:10:57,990
percent of the capacity from another

00:10:55,500 --> 00:11:01,050
site so smaller sites were definitely a

00:10:57,990 --> 00:11:02,850
big thing so an ancillary benefit of

00:11:01,050 --> 00:11:05,310
that is we're trying to promote multi

00:11:02,850 --> 00:11:06,360
cloud so if you have a lot of smaller

00:11:05,310 --> 00:11:09,629
sites around

00:11:06,360 --> 00:11:11,610
applications are distributed across six

00:11:09,629 --> 00:11:16,259
or five or six sites it's a lot easier

00:11:11,610 --> 00:11:19,470
for them to go into an Amazon and be

00:11:16,259 --> 00:11:23,910
prepared for any situations where you

00:11:19,470 --> 00:11:29,730
might need public cloud so that was a

00:11:23,910 --> 00:11:31,589
big lesson for us lesson three is we

00:11:29,730 --> 00:11:35,189
need to find meaningful KPIs

00:11:31,589 --> 00:11:36,569
so what we mean by that is when you get

00:11:35,189 --> 00:11:38,339
started with the platform you start

00:11:36,569 --> 00:11:40,230
looking at things like CPU utilization

00:11:38,339 --> 00:11:44,549
you start looking at things like how

00:11:40,230 --> 00:11:48,239
many ai's do I have what is what is my

00:11:44,549 --> 00:11:50,100
overall usage what's my memory usage but

00:11:48,239 --> 00:11:53,209
what we need is what we need to find

00:11:50,100 --> 00:11:57,869
with our platforms is the hard limits

00:11:53,209 --> 00:11:59,819
that you can operate under so for

00:11:57,869 --> 00:12:01,920
instance when we look at our CPU

00:11:59,819 --> 00:12:03,569
workload our CPU utilization we know

00:12:01,920 --> 00:12:06,749
that our hard limit is a hundred and

00:12:03,569 --> 00:12:08,939
twenty five percent so if we start

00:12:06,749 --> 00:12:11,519
seeing CPU utilization going over a

00:12:08,939 --> 00:12:12,899
hundred and twenty five percent we know

00:12:11,519 --> 00:12:14,519
that the applications are going to start

00:12:12,899 --> 00:12:16,049
seeing impact we know that they're going

00:12:14,519 --> 00:12:18,660
to start failing and we're gonna start

00:12:16,049 --> 00:12:23,910
getting calls so not that we're trying

00:12:18,660 --> 00:12:26,279
to size to 125 percent but in the event

00:12:23,910 --> 00:12:28,139
that you need to fail 100 percent of

00:12:26,279 --> 00:12:29,850
your applications over to one site you

00:12:28,139 --> 00:12:31,470
need to make sure that you are staying

00:12:29,850 --> 00:12:34,829
well below that hard limit and you need

00:12:31,470 --> 00:12:36,329
to know what that limit is another good

00:12:34,829 --> 00:12:40,189
metric we found was the number of a eyes

00:12:36,329 --> 00:12:42,869
per core so when you're thinking about

00:12:40,189 --> 00:12:44,939
building more capacity building more

00:12:42,869 --> 00:12:46,829
infrastructure it helps to know how many

00:12:44,939 --> 00:12:48,480
AIS are you going to be able to support

00:12:46,829 --> 00:12:52,499
with all of those cores you just added

00:12:48,480 --> 00:12:56,160
so if you have a big rack of servers and

00:12:52,499 --> 00:12:58,019
it represents 600 cores on the CPU you

00:12:56,160 --> 00:13:00,839
know or we know that's going to support

00:12:58,019 --> 00:13:05,279
1,200 additional AIS and we will not go

00:13:00,839 --> 00:13:07,739
over that limit so that is that's a

00:13:05,279 --> 00:13:09,209
that's a good metric to go by and that

00:13:07,739 --> 00:13:13,319
these things just kind of come from

00:13:09,209 --> 00:13:15,539
trial and error so there's no real magic

00:13:13,319 --> 00:13:17,429
way for you to figure this out because

00:13:15,539 --> 00:13:19,230
all workloads are different all CPU

00:13:17,429 --> 00:13:20,250
profiles are different so it's it's

00:13:19,230 --> 00:13:21,960
really important for you

00:13:20,250 --> 00:13:24,090
- to work with your application

00:13:21,960 --> 00:13:26,490
developing teams and understand those

00:13:24,090 --> 00:13:30,900
profiles and try to get as close to this

00:13:26,490 --> 00:13:33,270
to an accurate number as possible so

00:13:30,900 --> 00:13:35,430
when you are going over over a limit or

00:13:33,270 --> 00:13:36,840
approaching it you want to know why you

00:13:35,430 --> 00:13:41,070
want to know why you're approaching the

00:13:36,840 --> 00:13:42,630
limit so it's not necessarily inherent

00:13:41,070 --> 00:13:45,240
in the platformer included in the

00:13:42,630 --> 00:13:47,970
platform to understand where this

00:13:45,240 --> 00:13:50,850
resource usage is coming from on an org

00:13:47,970 --> 00:13:52,500
or application basis so it's really

00:13:50,850 --> 00:13:53,850
important for you to have those metrics

00:13:52,500 --> 00:13:56,370
and to be able to see them on a

00:13:53,850 --> 00:13:58,290
historical basis because your

00:13:56,370 --> 00:13:59,640
application profiles and the performance

00:13:58,290 --> 00:14:00,930
profiles are going to change and you're

00:13:59,640 --> 00:14:05,390
going to want to talk to those people

00:14:00,930 --> 00:14:08,280
and understand what they're doing and

00:14:05,390 --> 00:14:10,770
then also knowing if they're distributed

00:14:08,280 --> 00:14:13,610
across sites because there are a lot of

00:14:10,770 --> 00:14:15,960
applications that we found that are

00:14:13,610 --> 00:14:17,550
really banging against one environment

00:14:15,960 --> 00:14:19,350
and they're actually not distributed

00:14:17,550 --> 00:14:21,360
distributed across multiple environments

00:14:19,350 --> 00:14:31,650
so being up to report on that that's

00:14:21,360 --> 00:14:39,420
also very important lesson number four

00:14:31,650 --> 00:14:40,830
so removing efficiencies so one of the

00:14:39,420 --> 00:14:42,480
one of the things that we learned out

00:14:40,830 --> 00:14:45,030
was we needed to focus on the core

00:14:42,480 --> 00:14:47,250
functionality of the system so Cloud

00:14:45,030 --> 00:14:49,680
Foundry is an application runtime it's

00:14:47,250 --> 00:14:52,500
there to support the application

00:14:49,680 --> 00:14:56,820
developers pushing their apps in and

00:14:52,500 --> 00:14:58,470
running their applications there are a

00:14:56,820 --> 00:15:00,089
lot of developers that had come to us

00:14:58,470 --> 00:15:01,560
over the past few years and I'm sure

00:15:00,089 --> 00:15:03,480
some people who run Cloud Foundry have

00:15:01,560 --> 00:15:08,339
been in the same boat who say I losing

00:15:03,480 --> 00:15:10,650
my logs I can't get log loss I have

00:15:08,339 --> 00:15:13,830
these back you need to scale up your

00:15:10,650 --> 00:15:15,810
logger Gator systems and at one point we

00:15:13,830 --> 00:15:20,310
we were we were going through that same

00:15:15,810 --> 00:15:22,650
chase and we found out that in order for

00:15:20,310 --> 00:15:24,660
our logger Gator system to support all

00:15:22,650 --> 00:15:28,920
of those logs we would have to deploy

00:15:24,660 --> 00:15:30,750
somewhere on the order of 64 VMs 64 VMs

00:15:28,920 --> 00:15:32,220
represents like more than a quarter of

00:15:30,750 --> 00:15:34,120
the amount of VMs that are supported by

00:15:32,220 --> 00:15:37,080
Diego

00:15:34,120 --> 00:15:39,430
and we came to the conclusion that

00:15:37,080 --> 00:15:42,010
there's got to be a better way to do

00:15:39,430 --> 00:15:45,550
this and application developers do have

00:15:42,010 --> 00:15:48,580
options for for doing logs and this is

00:15:45,550 --> 00:15:51,340
actually our our current law gloss that

00:15:48,580 --> 00:15:53,440
we see on some of our busier sites and

00:15:51,340 --> 00:15:55,390
that's okay because if you really need

00:15:53,440 --> 00:15:57,370
your logs and it's really really

00:15:55,390 --> 00:15:59,680
important to you then maybe you

00:15:57,370 --> 00:16:01,180
shouldn't try to print a standard out

00:15:59,680 --> 00:16:02,290
maybe you shouldn't try to use the

00:16:01,180 --> 00:16:04,930
logger Gator system

00:16:02,290 --> 00:16:06,280
maybe you should log directly with some

00:16:04,930 --> 00:16:09,130
sort of logging framework within your

00:16:06,280 --> 00:16:11,020
applications so it's really important

00:16:09,130 --> 00:16:13,000
for us to remove inefficiencies and

00:16:11,020 --> 00:16:19,330
reduce the amount of capacity that is

00:16:13,000 --> 00:16:22,000
being sucked up by by sort of these

00:16:19,330 --> 00:16:26,680
ancillary services that are provided by

00:16:22,000 --> 00:16:29,440
the system this one might seem obvious

00:16:26,680 --> 00:16:30,760
but separating dev and prod this is

00:16:29,440 --> 00:16:32,530
something we've done since the beginning

00:16:30,760 --> 00:16:33,760
and at that start we were trying to

00:16:32,530 --> 00:16:35,260
figure out if we should do this or

00:16:33,760 --> 00:16:37,570
should we just allow everybody to live

00:16:35,260 --> 00:16:41,950
in the same site this is the cloud why

00:16:37,570 --> 00:16:44,530
not but what we found is that you know

00:16:41,950 --> 00:16:48,610
these types of workload spikes where

00:16:44,530 --> 00:16:50,260
you're running about 400 requests per

00:16:48,610 --> 00:16:52,570
second and it all the sudden jumps to

00:16:50,260 --> 00:16:54,850
3200 requests per second that's going to

00:16:52,570 --> 00:16:56,710
impact your production workloads so you

00:16:54,850 --> 00:16:58,180
don't want this kind of workload in your

00:16:56,710 --> 00:17:02,950
production environments so it really

00:16:58,180 --> 00:17:05,110
would help if you separate those out and

00:17:02,950 --> 00:17:08,920
then that that also has the benefit of

00:17:05,110 --> 00:17:11,070
you know teams will can be a little less

00:17:08,920 --> 00:17:13,900
responsible with the their log verbosity

00:17:11,070 --> 00:17:19,390
in the nonprofit environments versus the

00:17:13,900 --> 00:17:21,130
broad environments reducing AIS was it

00:17:19,390 --> 00:17:23,470
was a big benefit for us we we actually

00:17:21,130 --> 00:17:25,330
had the the benefit I guess you could

00:17:23,470 --> 00:17:28,510
call it a benefit of being able to

00:17:25,330 --> 00:17:31,750
rebuild entire environments at the end

00:17:28,510 --> 00:17:33,910
of last year and before the rebuild an

00:17:31,750 --> 00:17:37,660
environment was running 5,000 ai's and

00:17:33,910 --> 00:17:39,520
after the rebuild it reduced by 2000 so

00:17:37,660 --> 00:17:41,860
application developers will get in there

00:17:39,520 --> 00:17:44,520
they'll push stuff they'll just let it

00:17:41,860 --> 00:17:46,620
run and

00:17:44,520 --> 00:17:48,960
so it'll just stay that way forever and

00:17:46,620 --> 00:17:52,380
as platform owners it's really difficult

00:17:48,960 --> 00:17:53,850
for us to be able to tell if those are

00:17:52,380 --> 00:17:55,830
legitimate applications are gone so

00:17:53,850 --> 00:17:57,990
after we did the rebuild we were able to

00:17:55,830 --> 00:18:00,030
reduce our AI footprint by two thousand

00:17:57,990 --> 00:18:04,920
just after the rebuild and that's where

00:18:00,030 --> 00:18:06,210
it pretty much stayed since and then

00:18:04,920 --> 00:18:09,110
obviously you want to report all this

00:18:06,210 --> 00:18:11,190
back so all of these metrics are are

00:18:09,110 --> 00:18:14,160
available to all of our developers that

00:18:11,190 --> 00:18:16,440
they can see what's going on

00:18:14,160 --> 00:18:18,059
and we do we try to do a really good job

00:18:16,440 --> 00:18:20,250
of working with them to try to

00:18:18,059 --> 00:18:28,980
understand where these inefficiencies

00:18:20,250 --> 00:18:32,580
are and what they can do to help let's

00:18:28,980 --> 00:18:35,340
see last one so less than five and this

00:18:32,580 --> 00:18:38,400
one is probably the most important is

00:18:35,340 --> 00:18:40,200
trust in partnership so one of the

00:18:38,400 --> 00:18:42,360
things like when we started with Cloud

00:18:40,200 --> 00:18:43,830
Foundry we really saw a lot of the

00:18:42,360 --> 00:18:46,740
developers that were onboarding as

00:18:43,830 --> 00:18:48,720
customers so we we were operating sort

00:18:46,740 --> 00:18:50,250
of as a little startup anybody who came

00:18:48,720 --> 00:18:51,630
onto the platform we had to try to make

00:18:50,250 --> 00:18:53,520
sure that they were happy so they would

00:18:51,630 --> 00:18:59,340
stay on the platform and make it a

00:18:53,520 --> 00:19:03,030
success but as we moved on we saw that

00:18:59,340 --> 00:19:04,650
partnerships were much more valuable not

00:19:03,030 --> 00:19:06,240
only for us but for the application

00:19:04,650 --> 00:19:08,820
developers as well people who will work

00:19:06,240 --> 00:19:11,700
with you to help move the platform

00:19:08,820 --> 00:19:15,000
forward and this has been really

00:19:11,700 --> 00:19:16,980
important for us because when the

00:19:15,000 --> 00:19:19,020
platform was having issues that our app

00:19:16,980 --> 00:19:22,679
devs didn't just lay it on us they

00:19:19,020 --> 00:19:23,970
helped they worked with us they asked

00:19:22,679 --> 00:19:25,260
what they could do to help how could

00:19:23,970 --> 00:19:27,030
they spread stuff out how could they

00:19:25,260 --> 00:19:29,010
make this more secure because they they

00:19:27,030 --> 00:19:31,679
really do love the platform so I think

00:19:29,010 --> 00:19:35,730
that you know working together is sort

00:19:31,679 --> 00:19:37,980
of mutually beneficial for everybody it

00:19:35,730 --> 00:19:39,840
helps to be extremely transparent in

00:19:37,980 --> 00:19:42,270
these kinds of situations so being

00:19:39,840 --> 00:19:45,240
upfront about the problems that you're

00:19:42,270 --> 00:19:47,970
facing letting everybody know exactly

00:19:45,240 --> 00:19:48,660
what's going on and just being really

00:19:47,970 --> 00:19:51,270
honest

00:19:48,660 --> 00:19:55,280
building that trust with with your with

00:19:51,270 --> 00:19:55,280
your partners is is key

00:19:56,559 --> 00:20:01,330
platform visibility we we make sure that

00:19:59,080 --> 00:20:04,419
all of our metrics are consumable by

00:20:01,330 --> 00:20:06,640
everybody and we do see some app devs

00:20:04,419 --> 00:20:08,590
you know pointing out some of the

00:20:06,640 --> 00:20:11,230
platform metrics some of the platform

00:20:08,590 --> 00:20:12,760
KPIs that we might have overlooked and

00:20:11,230 --> 00:20:14,650
they come back to us since I hated have

00:20:12,760 --> 00:20:16,690
you looked at this you know looks like

00:20:14,650 --> 00:20:18,520
your AI counts are down by a hundred

00:20:16,690 --> 00:20:22,690
maybe there's some kind of issue going

00:20:18,520 --> 00:20:24,309
on so that's been really helpful and it

00:20:22,690 --> 00:20:29,799
helps extend that whole partnership

00:20:24,309 --> 00:20:31,570
relationship and we try to promote

00:20:29,799 --> 00:20:35,370
active communities as much as possible

00:20:31,570 --> 00:20:38,679
so you know keeping that dialogue open

00:20:35,370 --> 00:20:40,240
making sure that you know everybody can

00:20:38,679 --> 00:20:42,520
can communicate about all of these

00:20:40,240 --> 00:20:44,440
issues are our community I think you

00:20:42,520 --> 00:20:47,049
heard about it before we have like 1500

00:20:44,440 --> 00:20:48,880
slack users and all of them are

00:20:47,049 --> 00:20:52,210
communicating about stuff all of them

00:20:48,880 --> 00:20:53,799
are helping each other out there's been

00:20:52,210 --> 00:20:55,270
several people who have answered

00:20:53,799 --> 00:20:57,250
questions in our absence while we're at

00:20:55,270 --> 00:21:00,840
the summit this week so just having that

00:20:57,250 --> 00:21:00,840
active community is really really great

00:21:01,200 --> 00:21:07,990
and that's pretty much it so I just just

00:21:06,700 --> 00:21:10,750
to summarize make sure that your

00:21:07,990 --> 00:21:12,910
applications are distributed avoid that

00:21:10,750 --> 00:21:14,410
monolith and deploy your applications to

00:21:12,910 --> 00:21:17,860
as many sites as possible so you can

00:21:14,410 --> 00:21:20,140
reduce that blast radius find the KPIs

00:21:17,860 --> 00:21:23,290
that matter to you understand your hard

00:21:20,140 --> 00:21:24,610
limits understand where you're going to

00:21:23,290 --> 00:21:28,059
where your platform is going to start to

00:21:24,610 --> 00:21:32,470
fall over and X and also who is causing

00:21:28,059 --> 00:21:34,299
that to happen you need to promote the

00:21:32,470 --> 00:21:37,290
core functionality of the platform and

00:21:34,299 --> 00:21:40,120
reduce them as much waste as possible

00:21:37,290 --> 00:21:41,530
again our attitude is that logging isn't

00:21:40,120 --> 00:21:42,940
all that important when it comes from

00:21:41,530 --> 00:21:46,690
the platform and there's other ways

00:21:42,940 --> 00:21:48,400
around it and make sure you have

00:21:46,690 --> 00:21:50,559
partnerships and not customers just work

00:21:48,400 --> 00:21:52,260
with your app developers try to have

00:21:50,559 --> 00:21:55,660
that that mutually beneficial

00:21:52,260 --> 00:21:57,340
relationship so that they can help you

00:21:55,660 --> 00:22:02,710
advance the platform just like you're

00:21:57,340 --> 00:22:04,210
helping yourself so that's it for for

00:22:02,710 --> 00:22:05,860
this I just wanted to take a quick

00:22:04,210 --> 00:22:08,429
mention at our open source platform our

00:22:05,860 --> 00:22:11,520
open source Pross

00:22:08,429 --> 00:22:13,230
open source at Comcast we have such a

00:22:11,520 --> 00:22:14,850
really great team I think you guys have

00:22:13,230 --> 00:22:16,230
heard this several times probably in

00:22:14,850 --> 00:22:20,940
several different talks but it really is

00:22:16,230 --> 00:22:23,280
the real deal it's cool to to have this

00:22:20,940 --> 00:22:24,770
organization help us promote some of our

00:22:23,280 --> 00:22:28,110
projects into the open-source community

00:22:24,770 --> 00:22:32,039
and it really is refreshing to see how

00:22:28,110 --> 00:22:33,840
committed it to Comcast is to it and how

00:22:32,039 --> 00:22:37,169
we work Comcast is a great place to work

00:22:33,840 --> 00:22:39,299
I've been there for 15 years I love it I

00:22:37,169 --> 00:22:41,330
love the the opportunity I love that

00:22:39,299 --> 00:22:44,030
we're on the cutting edge of technology

00:22:41,330 --> 00:22:47,640
across so many different organizations

00:22:44,030 --> 00:22:49,409
so if you guys are interested I really

00:22:47,640 --> 00:22:51,360
really recommend you talk to some of our

00:22:49,409 --> 00:23:03,650
talent acquisition people at our booth

00:22:51,360 --> 00:23:03,650
so that's it thank you any questions

00:23:05,100 --> 00:23:08,280
[Music]

00:23:18,899 --> 00:23:24,220
it's it's it's a lot of both so we do

00:23:21,940 --> 00:23:26,259
have I'd say it's it's more it's it's

00:23:24,220 --> 00:23:29,200
it's it's a lot more on our developer

00:23:26,259 --> 00:23:32,289
side then we do have some platform

00:23:29,200 --> 00:23:33,549
projects that have been submitted we

00:23:32,289 --> 00:23:36,309
have some build packs that we've

00:23:33,549 --> 00:23:38,440
submitted a Bosch release that that's

00:23:36,309 --> 00:23:40,480
been submitted so there are some some

00:23:38,440 --> 00:23:42,639
contributions by our platform team but I

00:23:40,480 --> 00:23:44,850
would say a vast majority or for my app

00:23:42,639 --> 00:23:44,850
devs

00:24:41,310 --> 00:24:46,540
it's all at the discretion of the user

00:24:43,780 --> 00:24:49,150
really I mean if if an app developer

00:24:46,540 --> 00:24:51,580
usually knows what's best so if he if he

00:24:49,150 --> 00:24:53,620
or she feels that a project that they

00:24:51,580 --> 00:24:55,930
are working on would be beneficial to

00:24:53,620 --> 00:24:58,810
the community at large they can submit

00:24:55,930 --> 00:25:00,100
to have it you know open sourced and

00:24:58,810 --> 00:25:02,620
they would work with our open source

00:25:00,100 --> 00:25:27,960
office to figure out how that can get

00:25:02,620 --> 00:25:27,960
done we do yeah any other questions

00:25:47,240 --> 00:25:51,810
well I mean we we definitely promote

00:25:49,860 --> 00:25:55,140
Cloud Foundry as an application runtime

00:25:51,810 --> 00:25:58,230
so I think that's its chief concern if

00:25:55,140 --> 00:26:00,900
folks are looking to run really high

00:25:58,230 --> 00:26:03,150
scale data platforms we try to steer

00:26:00,900 --> 00:26:05,090
them in another direction so we do have

00:26:03,150 --> 00:26:07,050
data platforms that are on Cloud Foundry

00:26:05,090 --> 00:26:08,940
that are they're sort of as a

00:26:07,050 --> 00:26:12,870
convenience or for very lightweight data

00:26:08,940 --> 00:26:14,730
data workloads but on the whole there's

00:26:12,870 --> 00:26:18,330
lots of options within Comcast there

00:26:14,730 --> 00:26:20,490
there was just a half an hour ago Colby

00:26:18,330 --> 00:26:22,800
and Brett talked about our CFC our

00:26:20,490 --> 00:26:25,110
platform where teams are running Kafka

00:26:22,800 --> 00:26:26,520
through some other things like

00:26:25,110 --> 00:26:29,810
that so I think that's that's the

00:26:26,520 --> 00:26:29,810
direction we were trying to steer them

00:26:56,270 --> 00:27:07,620
yeah well we are yeah I mean

00:27:03,270 --> 00:27:09,210
unfortunately a lot of a lot of the

00:27:07,620 --> 00:27:11,940
tools that are inherent in the platform

00:27:09,210 --> 00:27:15,030
a little bit myopic in terms of looking

00:27:11,940 --> 00:27:17,510
at a single or gas Ingle app but seeing

00:27:15,030 --> 00:27:21,690
that the entire forest and being able to

00:27:17,510 --> 00:27:24,030
correlate that to the top ten orcs for

00:27:21,690 --> 00:27:25,980
example and have historical metrics we

00:27:24,030 --> 00:27:27,900
kind of had to roll our own on that one

00:27:25,980 --> 00:27:30,780
collecting logger Gator statistics out

00:27:27,900 --> 00:27:32,669
of the firehose correlating that back

00:27:30,780 --> 00:27:35,970
with metadata that we pull out of the

00:27:32,669 --> 00:27:39,440
API and then building gravano dashboards

00:27:35,970 --> 00:27:39,440
often but that's kind of how we roll

00:27:53,110 --> 00:27:59,300
it can be a combination of two so we do

00:27:55,580 --> 00:28:03,500
we mostly foundations so so we have

00:27:59,300 --> 00:28:05,690
separate foundations that that we

00:28:03,500 --> 00:28:09,320
support if we're in Amazon we do have a

00:28:05,690 --> 00:28:11,450
multi AZ architecture per site but when

00:28:09,320 --> 00:28:13,340
we're talking about in private cloud we

00:28:11,450 --> 00:28:16,460
just deploy separate sites and then we

00:28:13,340 --> 00:28:42,560
ask for our devs to deploy to those

00:28:16,460 --> 00:28:45,500
things separately yeah yeah so I I think

00:28:42,560 --> 00:28:49,220
we we do put the onus on them a little

00:28:45,500 --> 00:28:51,890
bit on that one we do have some folks

00:28:49,220 --> 00:28:54,140
that are on our team that can help an

00:28:51,890 --> 00:28:55,910
advisor you layer so if they need if

00:28:54,140 --> 00:28:57,230
they need help trying to figure out how

00:28:55,910 --> 00:28:59,750
to do that from an architectural

00:28:57,230 --> 00:29:02,270
standpoint we can help them but we we

00:28:59,750 --> 00:29:05,200
can't really deploy those things can't

00:29:02,270 --> 00:29:05,200
solution it out form

00:29:17,929 --> 00:29:27,360
we do so we actually and I see here a

00:29:23,910 --> 00:29:30,330
member on my team dill had developed a

00:29:27,360 --> 00:29:33,780
GS lb as a service that sits in our

00:29:30,330 --> 00:29:35,160
marketplace so anyone who and this is

00:29:33,780 --> 00:29:39,690
part of the reason why we promote this

00:29:35,160 --> 00:29:41,070
so much is because we we are we try to

00:29:39,690 --> 00:29:43,100
make it as easy as possible for people

00:29:41,070 --> 00:29:46,770
to distribute across sites so we have a

00:29:43,100 --> 00:29:50,070
service that interacts with an f5 API

00:29:46,770 --> 00:29:53,040
and and allows you to create a GS lb

00:29:50,070 --> 00:29:54,870
instance across multiple sites as well

00:29:53,040 --> 00:29:58,770
as certificate management through a

00:29:54,870 --> 00:30:01,980
different service so that really works

00:29:58,770 --> 00:30:06,360
out really well and that helps make it a

00:30:01,980 --> 00:30:10,559
lot easier for us as well it's not I'm

00:30:06,360 --> 00:30:13,590
sorry a lot of unfortunately we have you

00:30:10,559 --> 00:30:16,200
know our networking team bless their

00:30:13,590 --> 00:30:19,650
hearts they allowed us to interact with

00:30:16,200 --> 00:30:21,150
their API to create these things which

00:30:19,650 --> 00:30:28,799
is pretty much unprecedented at our

00:30:21,150 --> 00:30:31,650
company but they they're really good

00:30:28,799 --> 00:30:35,160
people like our networking team is great

00:30:31,650 --> 00:30:35,970
so I mean they're really

00:30:35,160 --> 00:30:40,380
forward-thinking

00:30:35,970 --> 00:30:42,059
I apologize if yours is not but they

00:30:40,380 --> 00:30:43,470
they actually the reason it's not open

00:30:42,059 --> 00:30:45,419
source is because they actually put a

00:30:43,470 --> 00:30:47,070
service layer in between so a lot of the

00:30:45,419 --> 00:30:48,419
API calls are sort of proprietary I

00:30:47,070 --> 00:30:55,380
guess they're not they wouldn't really

00:30:48,419 --> 00:30:56,260
be useful to anybody it alright thank

00:30:55,380 --> 00:31:01,450
you

00:30:56,260 --> 00:31:01,450

YouTube URL: https://www.youtube.com/watch?v=qtxYeyxciAM


