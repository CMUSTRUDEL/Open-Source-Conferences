Title: Double, Double Toil and Trouble; SRE Transform... - Bozhidar Lenchov, Corey Innis & Ryan Collins
Publication date: 2019-04-11
Playlist: Cloud Foundry Summit NA 2019 - Philadelphia
Description: 
	Double, Double Toil and Trouble; SRE Transformation through Automation and Collaboration - Bozhidar Lenchov, Corey Innis & Ryan Collins, Pivotal

As security, reliability and continuous integration become more of a concern for organizations of all sizes, DevOps teams have to come up with ways to support these increasing workload demands. Operating a Platform as a Service, managed by a team over multiple timezones, presents additional technical and communicational challenges which we've tried to identify and address.

We all have many tedious chores related to maintaining on our production environment(s). So, we automate the toil; now what do we do? Oh, we can start collaborating with other teams to help reduce their toil! Now, we've enabled self-service, so now what's next? Oh, we can share these learnings via workshops because it turns out that dev teams also benefit from this knowledge base and set of practices. That is, we scale!

In this presentation Bozhidar, Corey and Ryan from the Pivotal CloudOps teams in Toronto and San Francisco will outline some of the automation and practices used in their day-to-day operations. Those include detection of abusive workloads, automating platform updates and backups and auditing expiring credentials and potentially-malicious clients to prevent downtime and remain within SLI/SLOs. We'll also discuss practices around handling interrupts and incidents, working remotely, enabling teams to self-service requests and sharing context within the team and to the broader organization.

About Ryan Collins
Manager, Software Engineering, Pivotal

About Bozhidar Lenchov
Bozhidar is a Senior Software Engineer at Pivotal, working in the Toronto, Canada office. They are currently part of the team managing Pivotal Web Services, but have previously spent time contributing on the BOSH Core team. Prior to Cloud Foundry, they spent 4 years working on and anchoring Android client engagements at Pivotal Labs in Toronto, driving agile transformation and engineering reliable solutions. Bozhidar has spoken most recently at Cloud Foundry Summit Europe 2018 about BOSH Links API development.

About Corey Innis
Corey is a Staff Software Engineer at Pivotal in San Francisco. They first joined Pivotal in 2007, and have found a passion for helping transform teams and organizations through Agile, Lean, Balanced Team and DevOps/SRE practices (and more).

https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:03,540
all right awesome thanks for joining us

00:00:02,429 --> 00:00:06,799
today

00:00:03,540 --> 00:00:09,750
I'm Ryan this is Corinne laws we are

00:00:06,799 --> 00:00:13,380
where I was and you two are still on the

00:00:09,750 --> 00:00:16,020
PWS platform team also known as cloud

00:00:13,380 --> 00:00:19,410
ops PWS so we do a lot of the operations

00:00:16,020 --> 00:00:24,449
running the pivotal Web Services public

00:00:19,410 --> 00:00:26,880
offering that pivotal runs yeah so we're

00:00:24,449 --> 00:00:29,519
a few hats the operator hacked the

00:00:26,880 --> 00:00:30,960
platform engineer in terms of building

00:00:29,519 --> 00:00:33,360
tooling and techniques in support of

00:00:30,960 --> 00:00:37,620
operations and also site reliability and

00:00:33,360 --> 00:00:39,210
engineering practices so our talk today

00:00:37,620 --> 00:00:41,399
is called double double toil and trouble

00:00:39,210 --> 00:00:42,510
Will Shakespeare reference for any of

00:00:41,399 --> 00:00:44,460
you nerds

00:00:42,510 --> 00:00:50,160
sree transformation through automation

00:00:44,460 --> 00:00:52,829
and collaboration so act one

00:00:50,160 --> 00:00:55,199
what is toil this is question we asked

00:00:52,829 --> 00:00:57,719
herself when we started to talk about

00:00:55,199 --> 00:00:59,340
this talk and we kind of were thinking

00:00:57,719 --> 00:01:00,989
about what are the indications of 12

00:00:59,340 --> 00:01:03,359
what's the definition of toil what are

00:01:00,989 --> 00:01:04,170
we trying to classify as well and we

00:01:03,359 --> 00:01:05,549
kind of came up with a few different

00:01:04,170 --> 00:01:07,200
things we said well there has to be a

00:01:05,549 --> 00:01:08,729
well-defined path to resolution has to

00:01:07,200 --> 00:01:11,220
be something that's easy to describe

00:01:08,729 --> 00:01:13,380
easy to follow there has to be a low

00:01:11,220 --> 00:01:16,080
barrier to decision making so it has to

00:01:13,380 --> 00:01:17,580
be something that you know any Joe Schmo

00:01:16,080 --> 00:01:20,850
can answer the questions required to

00:01:17,580 --> 00:01:24,150
resolve it something that's painful to

00:01:20,850 --> 00:01:27,509
resolve so something that is painful to

00:01:24,150 --> 00:01:29,280
resolve prone to operate our error this

00:01:27,509 --> 00:01:30,780
one is something that if it's prone to

00:01:29,280 --> 00:01:32,250
operator error chances are that you

00:01:30,780 --> 00:01:34,380
probably want to be automating away that

00:01:32,250 --> 00:01:38,040
operator error something repetitive

00:01:34,380 --> 00:01:41,670
self-explanatory impacts other team

00:01:38,040 --> 00:01:42,720
priorities or work and it has a risk or

00:01:41,670 --> 00:01:44,040
severity attached to it these are all

00:01:42,720 --> 00:01:47,759
kind of things that we classified as

00:01:44,040 --> 00:01:48,960
indications of moil now some of you

00:01:47,759 --> 00:01:50,700
might be familiar with the site

00:01:48,960 --> 00:01:51,840
reliability engineering book that Google

00:01:50,700 --> 00:01:55,020
is released they have their own

00:01:51,840 --> 00:01:56,520
definition of toil and there's a little

00:01:55,020 --> 00:01:57,930
bit of overlap with what we kind of

00:01:56,520 --> 00:01:59,219
defined as toil and what they define his

00:01:57,930 --> 00:02:01,439
toil but they did it a lot more

00:01:59,219 --> 00:02:02,549
concisely and they'd probably put a lot

00:02:01,439 --> 00:02:06,060
more research into it so we're gonna go

00:02:02,549 --> 00:02:07,530
with their definition so first thing

00:02:06,060 --> 00:02:08,910
repetitive that one's kind of

00:02:07,530 --> 00:02:11,700
self-explanatory we kind of covered it

00:02:08,910 --> 00:02:13,620
as well the second one no enduring value

00:02:11,700 --> 00:02:15,780
so what this one

00:02:13,620 --> 00:02:18,659
kind of means is the end state after

00:02:15,780 --> 00:02:21,150
you've resolved the toil should be a

00:02:18,659 --> 00:02:22,650
better end state than beforehand right

00:02:21,150 --> 00:02:24,840
so after you've already resolved this

00:02:22,650 --> 00:02:26,370
toil you should get value out of it or

00:02:24,840 --> 00:02:27,810
rather after you resolve the issue you

00:02:26,370 --> 00:02:31,159
should get value out of it if you ending

00:02:27,810 --> 00:02:34,200
up where you started it's probably toil

00:02:31,159 --> 00:02:35,459
it's manual again this one's kind of

00:02:34,200 --> 00:02:36,720
something that you're doing as an

00:02:35,459 --> 00:02:38,519
operator when you really shouldn't have

00:02:36,720 --> 00:02:40,739
to be doing things because it's

00:02:38,519 --> 00:02:42,690
automatable a machine can be doing this

00:02:40,739 --> 00:02:47,879
right theoretically it doesn't have to

00:02:42,690 --> 00:02:50,579
have a human doing it tactical so what

00:02:47,879 --> 00:02:52,950
this one means is kind of you have to do

00:02:50,579 --> 00:02:54,660
it it's reactive work it's not really

00:02:52,950 --> 00:02:55,980
something that you can put on the

00:02:54,660 --> 00:02:57,930
backlog and priority for later it's

00:02:55,980 --> 00:02:59,010
stuff that it comes up because there's a

00:02:57,930 --> 00:03:02,370
deadline or because there's some

00:02:59,010 --> 00:03:04,560
pressure to complete it and finally it's

00:03:02,370 --> 00:03:06,390
Oh N or I guess greater with service

00:03:04,560 --> 00:03:08,940
growth and what that means is it's

00:03:06,390 --> 00:03:11,159
scalable right as your service continues

00:03:08,940 --> 00:03:12,329
to grow you are also going to experience

00:03:11,159 --> 00:03:16,620
more of this pain and you're going to

00:03:12,329 --> 00:03:18,599
experience more of this toil so if we

00:03:16,620 --> 00:03:20,760
kind of compare notes between what we

00:03:18,599 --> 00:03:22,500
thought and what Google thought we kind

00:03:20,760 --> 00:03:25,319
of got the automatable part that's kind

00:03:22,500 --> 00:03:27,090
of what the two first parts are it's a

00:03:25,319 --> 00:03:28,919
well-defined path resolution and there's

00:03:27,090 --> 00:03:31,319
a low barrier decision-making meaning

00:03:28,919 --> 00:03:32,549
it's kind of automatable prone to

00:03:31,319 --> 00:03:33,660
operator error there's a little bit of

00:03:32,549 --> 00:03:35,190
crossover there with manual and

00:03:33,660 --> 00:03:37,260
repetitive we'd nailed that one

00:03:35,190 --> 00:03:41,090
so what about the rest of these things

00:03:37,260 --> 00:03:43,680
that it's painful to resolve all right

00:03:41,090 --> 00:03:45,329
that it's painful to resolve it

00:03:43,680 --> 00:03:47,459
interrupts team priorities work and

00:03:45,329 --> 00:03:49,109
there's some risk or severity attached

00:03:47,459 --> 00:03:51,060
to it because these all do seem like

00:03:49,109 --> 00:03:52,739
really relevant things to toil but

00:03:51,060 --> 00:03:56,760
they're not necessarily things that

00:03:52,739 --> 00:03:58,169
Google addresses this toil so those are

00:03:56,760 --> 00:04:00,720
going to show up again we're gonna just

00:03:58,169 --> 00:04:04,889
get rid of them for now but they will

00:04:00,720 --> 00:04:07,590
they will come back up so I wanted to

00:04:04,889 --> 00:04:09,959
give an example of how you can look at

00:04:07,590 --> 00:04:11,129
this definition and how things can fit

00:04:09,959 --> 00:04:12,840
into it so it's something that people

00:04:11,129 --> 00:04:16,289
might be familiar with here as operators

00:04:12,840 --> 00:04:18,269
is you a a user and client tickets or

00:04:16,289 --> 00:04:19,650
like when you receive an ask ticket or a

00:04:18,269 --> 00:04:22,469
service now ticket saying hey I need

00:04:19,650 --> 00:04:24,330
some client or service thing it's

00:04:22,469 --> 00:04:26,370
repetitive because it's probably the

00:04:24,330 --> 00:04:27,980
same five UAC commands every single time

00:04:26,370 --> 00:04:29,300
maybe the

00:04:27,980 --> 00:04:31,940
exchange or whatever but it's probably

00:04:29,300 --> 00:04:33,650
about the same every time there's no

00:04:31,940 --> 00:04:35,150
wondering value because really all

00:04:33,650 --> 00:04:37,640
you're doing is I'm blocking the team

00:04:35,150 --> 00:04:39,650
that's asking you to do something from

00:04:37,640 --> 00:04:41,360
your team from a selfish perspective you

00:04:39,650 --> 00:04:44,780
have done nothing but stop your workflow

00:04:41,360 --> 00:04:47,270
right it's manual because it typically

00:04:44,780 --> 00:04:50,330
requires eyes from an admin to do

00:04:47,270 --> 00:04:52,250
something to add them to UAA it's

00:04:50,330 --> 00:04:54,440
automatable because really all of the

00:04:52,250 --> 00:04:56,330
variables like the Scopes required and

00:04:54,440 --> 00:04:58,430
the permissions and all that kind of

00:04:56,330 --> 00:04:59,840
stuff can be provided by the user you

00:04:58,430 --> 00:05:02,000
shouldn't have to do any of that kind of

00:04:59,840 --> 00:05:04,160
stuff

00:05:02,000 --> 00:05:07,100
it's tactical because you're reacting to

00:05:04,160 --> 00:05:08,870
a ticket that you received and it grows

00:05:07,100 --> 00:05:10,700
with your service because obviously as

00:05:08,870 --> 00:05:12,230
you start to have more people in the

00:05:10,700 --> 00:05:14,690
platform you're going to have more

00:05:12,230 --> 00:05:16,010
tickets in fact that becomes extremely

00:05:14,690 --> 00:05:18,350
painful right because those same five

00:05:16,010 --> 00:05:20,540
UAC commands start to change a lot and

00:05:18,350 --> 00:05:22,610
you start doing a lot of more stuff when

00:05:20,540 --> 00:05:26,450
you have like your platform is growing

00:05:22,610 --> 00:05:28,280
and growing so that one I think everyone

00:05:26,450 --> 00:05:30,170
can kind of maybe relate to one of the

00:05:28,280 --> 00:05:32,120
ones that we kind of experienced on the

00:05:30,170 --> 00:05:34,430
PWS platform is kind of fun

00:05:32,120 --> 00:05:37,490
it's cryptocurrency miners we offer this

00:05:34,430 --> 00:05:39,710
public offering and these there's a free

00:05:37,490 --> 00:05:41,570
trial and so obviously people are going

00:05:39,710 --> 00:05:43,970
to take advantage of it it's free real

00:05:41,570 --> 00:05:45,050
estate right so they're repetitive

00:05:43,970 --> 00:05:46,040
because they show up every single day

00:05:45,050 --> 00:05:47,930
that's really annoying

00:05:46,040 --> 00:05:49,430
no enduring value because all we're

00:05:47,930 --> 00:05:52,100
doing really is getting our resources

00:05:49,430 --> 00:05:53,450
back that they're stealing it's manual

00:05:52,100 --> 00:05:55,220
because we have to deactivate their

00:05:53,450 --> 00:05:57,440
accounts and remove the resources that

00:05:55,220 --> 00:05:59,030
have been allocated to them it's

00:05:57,440 --> 00:06:02,390
automatable because again all we're

00:05:59,030 --> 00:06:04,340
doing is you know see are you a seed

00:06:02,390 --> 00:06:06,680
like delete account or disable account

00:06:04,340 --> 00:06:10,130
and going into BAM and getting rid of

00:06:06,680 --> 00:06:11,660
their orgs its tactical because we have

00:06:10,130 --> 00:06:14,080
to take action on the miners schedules

00:06:11,660 --> 00:06:15,770
they actually do develop schedules

00:06:14,080 --> 00:06:17,720
probably because they're running a

00:06:15,770 --> 00:06:18,860
script or automatable something but

00:06:17,720 --> 00:06:20,390
maybe it's also when they show up to

00:06:18,860 --> 00:06:22,840
work in the morning you know they click

00:06:20,390 --> 00:06:25,490
a button and now the hit more miners and

00:06:22,840 --> 00:06:27,140
they do scale with the service as our

00:06:25,490 --> 00:06:28,880
service grows and gets more attention

00:06:27,140 --> 00:06:31,360
more people are gonna say hey there's

00:06:28,880 --> 00:06:35,530
something free I can take advantage of

00:06:31,360 --> 00:06:37,880
so we will come back to that as well so

00:06:35,530 --> 00:06:40,940
I've been talking about what toil is but

00:06:37,880 --> 00:06:43,640
why should I care about it well to put

00:06:40,940 --> 00:06:46,250
it into a kind of consent sentence

00:06:43,640 --> 00:06:48,080
sentence you have no choice but to do

00:06:46,250 --> 00:06:49,760
this work which requires action to be

00:06:48,080 --> 00:06:51,920
taken by a human when it shouldn't it

00:06:49,760 --> 00:06:53,480
shows up frequently it provides no

00:06:51,920 --> 00:06:54,170
improvements and it will only get worse

00:06:53,480 --> 00:06:56,330
with time

00:06:54,170 --> 00:06:58,070
so in other words why should care

00:06:56,330 --> 00:07:04,280
because you don't hate yourself that

00:06:58,070 --> 00:07:09,740
sounds awful and what's the cost of toil

00:07:04,280 --> 00:07:12,080
well do these things come back it's

00:07:09,740 --> 00:07:13,970
painful to resolve sometimes it

00:07:12,080 --> 00:07:14,900
interrupts team priorities and work and

00:07:13,970 --> 00:07:17,150
there could be risk and severity

00:07:14,900 --> 00:07:18,800
attached to it and from another

00:07:17,150 --> 00:07:20,570
perspective one that operators might not

00:07:18,800 --> 00:07:22,610
really care about it could cost money

00:07:20,570 --> 00:07:24,050
and it could cost time right as a

00:07:22,610 --> 00:07:27,320
company these are definitely things that

00:07:24,050 --> 00:07:28,610
are a impact to you so we're gonna

00:07:27,320 --> 00:07:32,180
classify all of these things kind of

00:07:28,610 --> 00:07:35,510
like as the impact of toil for now on so

00:07:32,180 --> 00:07:37,310
we've decided what toil is next we're

00:07:35,510 --> 00:07:39,590
going to move on to Act two how do we

00:07:37,310 --> 00:07:43,640
identify and prioritize this toil and

00:07:39,590 --> 00:07:44,060
Bush are gonna take a community Thank

00:07:43,640 --> 00:07:47,780
You Ryan

00:07:44,060 --> 00:07:52,460
so yes Act two how do you identify and

00:07:47,780 --> 00:07:54,200
prioritize toil well if we want to sum

00:07:52,460 --> 00:07:57,670
it up in one sentence you can say you

00:07:54,200 --> 00:08:00,020
need to be cognizant of toil start

00:07:57,670 --> 00:08:02,900
collecting common concerns brought up by

00:08:00,020 --> 00:08:04,550
your team start collecting or writing

00:08:02,900 --> 00:08:07,940
down the manual work that you do and

00:08:04,550 --> 00:08:10,070
recording how how long it took and as we

00:08:07,940 --> 00:08:13,190
mentioned that that's work that usually

00:08:10,070 --> 00:08:15,410
adds no lasting value one footnote that

00:08:13,190 --> 00:08:17,840
we added this toil might not always be

00:08:15,410 --> 00:08:19,310
technical it could be emotional and it

00:08:17,840 --> 00:08:21,110
could be perceived differently by

00:08:19,310 --> 00:08:23,419
different teams and even different

00:08:21,110 --> 00:08:25,430
members on your team one person's

00:08:23,419 --> 00:08:29,150
perception of toil might not be the same

00:08:25,430 --> 00:08:32,690
as in others might be asking yourself

00:08:29,150 --> 00:08:34,820
how can I be more cognizant well as I

00:08:32,690 --> 00:08:38,060
mentioned you can start recording keep

00:08:34,820 --> 00:08:41,180
track of interrupts pages something that

00:08:38,060 --> 00:08:43,760
is toilsome collect feedback from

00:08:41,180 --> 00:08:46,130
current team members from new team

00:08:43,760 --> 00:08:49,610
members especially because they provide

00:08:46,130 --> 00:08:51,110
a view and experiences from other

00:08:49,610 --> 00:08:53,480
they might have experienced more toil

00:08:51,110 --> 00:08:55,810
and might have potential solutions to

00:08:53,480 --> 00:08:58,550
the toil you're experiencing right now

00:08:55,810 --> 00:09:01,760
discuss within your team within the

00:08:58,550 --> 00:09:04,490
broader organization what toy you're

00:09:01,760 --> 00:09:06,470
experiencing and similarly you might

00:09:04,490 --> 00:09:11,750
encounter solutions that other teams

00:09:06,470 --> 00:09:14,720
have for what you're experiencing one

00:09:11,750 --> 00:09:20,210
useful tool to visualize the frequency

00:09:14,720 --> 00:09:23,840
of toil is a tool that our colleagues on

00:09:20,210 --> 00:09:26,930
the Europe side who managed the platform

00:09:23,840 --> 00:09:28,510
for pivotal tracker they're using

00:09:26,930 --> 00:09:30,830
something that's called a toil snake

00:09:28,510 --> 00:09:32,600
basically as you encounter toil team

00:09:30,830 --> 00:09:34,520
members would put a sticky either on a

00:09:32,600 --> 00:09:37,940
physical whiteboard or on a real-time

00:09:34,520 --> 00:09:40,040
board which we took a screenshot of and

00:09:37,940 --> 00:09:42,440
you might indicate who experienced the

00:09:40,040 --> 00:09:47,030
toil when did it happen and potentially

00:09:42,440 --> 00:09:50,570
how long did it take to resolve one can

00:09:47,030 --> 00:09:53,420
simply take a look at this and see which

00:09:50,570 --> 00:09:55,640
toilsome task has the most stickies and

00:09:53,420 --> 00:09:58,640
if you wanted to sum up the durations

00:09:55,640 --> 00:10:04,190
you can even see how long of a time

00:09:58,640 --> 00:10:05,780
impact this has we come back to an image

00:10:04,190 --> 00:10:08,570
that many of you might have seen from

00:10:05,780 --> 00:10:11,360
xkcd which is another useful tool that

00:10:08,570 --> 00:10:13,880
you might consider when you're filtering

00:10:11,360 --> 00:10:15,940
toil when you're asking yourself is this

00:10:13,880 --> 00:10:18,680
worth solving is this worth automating

00:10:15,940 --> 00:10:21,020
you need to consider how much time you

00:10:18,680 --> 00:10:23,540
spend doing the Tollison task and how

00:10:21,020 --> 00:10:27,380
much time or money it will cost you to

00:10:23,540 --> 00:10:31,220
fix it to automate it not all toil is

00:10:27,380 --> 00:10:32,690
created equal so some will have more

00:10:31,220 --> 00:10:37,490
impact on your business but they might

00:10:32,690 --> 00:10:39,950
also take more time to solve coming back

00:10:37,490 --> 00:10:43,940
to a slide from act 1 this is what we

00:10:39,950 --> 00:10:49,430
defined as impact but we also need to

00:10:43,940 --> 00:10:53,350
consider who the impact is affecting how

00:10:49,430 --> 00:10:56,330
much what's the adversity of the effect

00:10:53,350 --> 00:10:57,740
how long has it been going on and do you

00:10:56,330 --> 00:11:01,030
have support from the broader

00:10:57,740 --> 00:11:03,670
organization to address the toil

00:11:01,030 --> 00:11:05,950
to visualize that these might be

00:11:03,670 --> 00:11:08,370
stakeholders affected by toil you might

00:11:05,950 --> 00:11:11,230
start with your team in the middle and

00:11:08,370 --> 00:11:13,810
that's where solving the toil might have

00:11:11,230 --> 00:11:16,480
the most impact but potentially other

00:11:13,810 --> 00:11:18,940
teams in your organization other units

00:11:16,480 --> 00:11:21,580
in the organization marketing where

00:11:18,940 --> 00:11:24,660
business units might feel effects of

00:11:21,580 --> 00:11:27,160
this toil you might also consider

00:11:24,660 --> 00:11:29,200
customers of your organization

00:11:27,160 --> 00:11:34,480
the broader software community and even

00:11:29,200 --> 00:11:37,420
society as a whole if we cross all of

00:11:34,480 --> 00:11:38,740
those together these are all the

00:11:37,420 --> 00:11:41,080
combinations from what we've presented

00:11:38,740 --> 00:11:43,810
that you might consider in determining

00:11:41,080 --> 00:11:46,960
the severity of the toil and how

00:11:43,810 --> 00:11:54,610
important is it to your organization

00:11:46,960 --> 00:11:57,340
solve it a few examples of toil one we

00:11:54,610 --> 00:12:01,360
mentioned was user and client creation

00:11:57,340 --> 00:12:03,910
granting access to systems you might be

00:12:01,360 --> 00:12:07,060
writing incident reports for your

00:12:03,910 --> 00:12:09,339
production platform or in even forensics

00:12:07,060 --> 00:12:12,940
reports if there was no customer facing

00:12:09,339 --> 00:12:14,589
incident toil around that might be the

00:12:12,940 --> 00:12:16,330
formatting of the report collecting

00:12:14,589 --> 00:12:20,080
timelines synchronizing with different

00:12:16,330 --> 00:12:22,839
parties as well as maybe scheduling

00:12:20,080 --> 00:12:26,770
retros or other recurring recurring team

00:12:22,839 --> 00:12:28,420
meetings which is the last point and

00:12:26,770 --> 00:12:29,920
yeah maybe I'll skip over these examples

00:12:28,420 --> 00:12:33,180
but these are some that we've

00:12:29,920 --> 00:12:38,320
experienced on our PWS platform team as

00:12:33,180 --> 00:12:42,540
toilsome tasks another useful tool for

00:12:38,320 --> 00:12:45,700
take putting all this together and

00:12:42,540 --> 00:12:47,830
considering the frequency and the impact

00:12:45,700 --> 00:12:49,810
of the tolson task to determine what you

00:12:47,830 --> 00:12:53,530
should be focusing on first is a two by

00:12:49,810 --> 00:12:56,140
two and we've included these dimensions

00:12:53,530 --> 00:12:57,970
frequency and impact for your team for

00:12:56,140 --> 00:13:01,450
your organization it might be different

00:12:57,970 --> 00:13:05,470
but in most cases it would be frequency

00:13:01,450 --> 00:13:07,600
an impact you would start off by putting

00:13:05,470 --> 00:13:11,910
your toil 'some tasks which you might

00:13:07,600 --> 00:13:11,910
have gotten from the toll snake and

00:13:12,580 --> 00:13:16,150
you know discussing with the team

00:13:14,560 --> 00:13:19,000
discussing with other members of your

00:13:16,150 --> 00:13:22,360
organization you might put them in

00:13:19,000 --> 00:13:24,460
different quadrants and usually the most

00:13:22,360 --> 00:13:27,250
important oil to fix first in our

00:13:24,460 --> 00:13:29,980
example is in the top right quadrant the

00:13:27,250 --> 00:13:31,779
high impact high frequency which if you

00:13:29,980 --> 00:13:34,510
solve it if you solve those problems

00:13:31,779 --> 00:13:36,760
they give you the greatest reward in our

00:13:34,510 --> 00:13:43,830
example it might be cryptocurrency

00:13:36,760 --> 00:13:47,490
miners and to look into that example we

00:13:43,830 --> 00:13:50,830
certainly have a ways to go to automate

00:13:47,490 --> 00:13:52,960
solving this in our platform and we did

00:13:50,830 --> 00:13:55,680
this over a period of time as our first

00:13:52,960 --> 00:13:59,010
iteration of alleviating this toil we

00:13:55,680 --> 00:14:02,230
automated the detection and notification

00:13:59,010 --> 00:14:04,570
so team members get notified when a

00:14:02,230 --> 00:14:06,940
potential abusive application is

00:14:04,570 --> 00:14:09,040
detected on the platform they can go in

00:14:06,940 --> 00:14:12,550
either a next business day or if it's

00:14:09,040 --> 00:14:15,880
more severe right away and determine

00:14:12,550 --> 00:14:16,890
whether it is an abusive app and take

00:14:15,880 --> 00:14:19,870
action

00:14:16,890 --> 00:14:22,510
another to--some task that we identified

00:14:19,870 --> 00:14:24,670
from speaking to the team was story

00:14:22,510 --> 00:14:27,220
creation we use pivotal tracker but you

00:14:24,670 --> 00:14:29,170
might you know have to create manually

00:14:27,220 --> 00:14:32,730
create stories add tasks to be completed

00:14:29,170 --> 00:14:36,730
in your tracking software of choice so

00:14:32,730 --> 00:14:39,460
we amended our automation scripts to

00:14:36,730 --> 00:14:43,120
create a story and add tasks so anybody

00:14:39,460 --> 00:14:46,360
can pick it up and you know perform this

00:14:43,120 --> 00:14:47,920
repeatable process iteration three might

00:14:46,360 --> 00:14:49,960
be automatic suspension of the

00:14:47,920 --> 00:14:53,050
organization's you might still want to

00:14:49,960 --> 00:14:54,820
send a notification in case any an

00:14:53,050 --> 00:14:58,120
organization an application was

00:14:54,820 --> 00:15:00,280
incorrectly suspended but that that I

00:14:58,120 --> 00:15:03,760
think is one of the later iterations of

00:15:00,280 --> 00:15:05,910
how we can automate this toil so now

00:15:03,760 --> 00:15:09,130
that we've talked about how you might

00:15:05,910 --> 00:15:13,020
prioritize and filter toil I'll pass it

00:15:09,130 --> 00:15:13,020
off to Cori to tell us what's next

00:15:13,880 --> 00:15:19,749
[Music]

00:15:15,209 --> 00:15:22,749
it's fun all right so let's say we as a

00:15:19,749 --> 00:15:24,910
team have started to hone our sre skills

00:15:22,749 --> 00:15:27,399
along the lines of let's say we've done

00:15:24,910 --> 00:15:30,069
things like adopt SLI is representing in

00:15:27,399 --> 00:15:31,779
our customers experience and adopting

00:15:30,069 --> 00:15:33,669
SLO is representing our customers

00:15:31,779 --> 00:15:36,549
expectations when we've figured out

00:15:33,669 --> 00:15:39,819
excuse me how to minimize and improve

00:15:36,549 --> 00:15:42,160
handling of incidents and indeed we're

00:15:39,819 --> 00:15:46,739
getting better a better handle on how to

00:15:42,160 --> 00:15:49,149
recognize and address oil so what next

00:15:46,739 --> 00:15:51,509
well so the thing to keep in mind is

00:15:49,149 --> 00:15:54,850
that this is all really about culture

00:15:51,509 --> 00:15:58,179
that is the real value in principle of

00:15:54,850 --> 00:16:01,059
say devops is about cultural improvement

00:15:58,179 --> 00:16:04,709
as illustrated by this great

00:16:01,059 --> 00:16:06,970
visualization courtesy of Daniel's story

00:16:04,709 --> 00:16:09,489
so the thing to do next is to spread the

00:16:06,970 --> 00:16:13,979
good news to make this scale if you like

00:16:09,489 --> 00:16:15,939
okay fine so how how how does this scale

00:16:13,979 --> 00:16:19,029
let's take a look at that visualization

00:16:15,939 --> 00:16:21,759
again with a few adjustments as an aside

00:16:19,029 --> 00:16:23,769
I want to a big thanks to Daniel's story

00:16:21,759 --> 00:16:28,089
for granting me the permissions who make

00:16:23,769 --> 00:16:29,949
these adaptations to his images so

00:16:28,089 --> 00:16:31,989
expanding on the idea that DevOps is

00:16:29,949 --> 00:16:34,269
fundamentally about cultural improvement

00:16:31,989 --> 00:16:36,489
in principle I'd say site reliability

00:16:34,269 --> 00:16:40,059
engineering is fundamentally about

00:16:36,489 --> 00:16:41,919
cultural improvement in practice and I

00:16:40,059 --> 00:16:44,169
suggest that the team best positioned to

00:16:41,919 --> 00:16:47,019
be at the fore of adopting those sre

00:16:44,169 --> 00:16:49,319
principles or practices is you is the

00:16:47,019 --> 00:16:51,159
operations or platform engineering team

00:16:49,319 --> 00:16:54,249
let's come back to that point in a

00:16:51,159 --> 00:16:58,209
minute and dig into this question of how

00:16:54,249 --> 00:17:00,249
does this scale with a story so here we

00:16:58,209 --> 00:17:02,439
are for the platform team we figured out

00:17:00,249 --> 00:17:04,839
some techniques some tools and practices

00:17:02,439 --> 00:17:08,829
to address reliability incidence and

00:17:04,839 --> 00:17:10,750
toil great let's go tell our friends

00:17:08,829 --> 00:17:13,089
about that let's go talk about this with

00:17:10,750 --> 00:17:14,799
our sibling platform teams let's go talk

00:17:13,089 --> 00:17:17,139
about this with our services teams with

00:17:14,799 --> 00:17:19,329
our application developers running their

00:17:17,139 --> 00:17:22,629
applications on the platform after all

00:17:19,329 --> 00:17:25,809
they to deal with reliability and with

00:17:22,629 --> 00:17:26,380
incidents and toil and when we talk with

00:17:25,809 --> 00:17:30,970
those team

00:17:26,380 --> 00:17:32,650
we enter encourage them in turn to go do

00:17:30,970 --> 00:17:36,610
the same we encourage them to go talk to

00:17:32,650 --> 00:17:39,429
other teams and here we find that we can

00:17:36,610 --> 00:17:41,740
go viral if you like that is this

00:17:39,429 --> 00:17:47,020
approach really like any practice is

00:17:41,740 --> 00:17:48,549
indeed how we scale so why me okay fine

00:17:47,020 --> 00:17:52,059
returning to this question is it really

00:17:48,549 --> 00:17:53,740
me who should be driving this why let's

00:17:52,059 --> 00:17:56,440
go back to this last picture as we've

00:17:53,740 --> 00:17:58,450
seen we platform engineers or operators

00:17:56,440 --> 00:18:00,610
if you like or are really at the center

00:17:58,450 --> 00:18:02,650
of it all that is to say if you're a

00:18:00,610 --> 00:18:05,020
team operating a cloud foundry or

00:18:02,650 --> 00:18:08,020
perhaps many cloud foundries you are

00:18:05,020 --> 00:18:09,549
effectively a hub for collaboration the

00:18:08,020 --> 00:18:10,870
services teams the application

00:18:09,549 --> 00:18:12,909
developers they're all running their

00:18:10,870 --> 00:18:17,980
services and products on the platform

00:18:12,909 --> 00:18:19,870
that you provide so yeah but maybe our

00:18:17,980 --> 00:18:21,760
organizational structure doesn't support

00:18:19,870 --> 00:18:25,900
this cross-cutting collaboration so

00:18:21,760 --> 00:18:27,850
again why why me so many organizations

00:18:25,900 --> 00:18:30,700
perhaps might have a command and control

00:18:27,850 --> 00:18:32,880
like structure and in this scenario you

00:18:30,700 --> 00:18:35,440
might say directives if you like or

00:18:32,880 --> 00:18:38,500
issued from upon high and pass down

00:18:35,440 --> 00:18:41,610
through some hierarchy and I suggest

00:18:38,500 --> 00:18:43,690
however that there's a excuse me a

00:18:41,610 --> 00:18:45,340
fundamental flaw to this model when

00:18:43,690 --> 00:18:47,350
considering something like cultural

00:18:45,340 --> 00:18:49,659
change and the spread of practices and

00:18:47,350 --> 00:18:52,179
that well well all the parties in this

00:18:49,659 --> 00:18:53,980
hierarchy are well-intentioned there's

00:18:52,179 --> 00:18:55,720
something lost in the delivery of the

00:18:53,980 --> 00:18:57,909
message so you could think of this like

00:18:55,720 --> 00:18:59,710
the telephone game where for each hop

00:18:57,909 --> 00:19:01,780
there's something lost or mixed up in

00:18:59,710 --> 00:19:06,360
the message and confused by the time you

00:19:01,780 --> 00:19:10,059
get to the people executing on stuff so

00:19:06,360 --> 00:19:13,090
rather than this what we seek is or what

00:19:10,059 --> 00:19:15,580
we need at least in terms for spreading

00:19:13,090 --> 00:19:17,380
practices and culture is an organization

00:19:15,580 --> 00:19:20,049
like this where we have our senior

00:19:17,380 --> 00:19:22,510
leadership expressing vision and we have

00:19:20,049 --> 00:19:24,669
our middle leadership intern translating

00:19:22,510 --> 00:19:26,890
that vision into strategy and it is the

00:19:24,669 --> 00:19:29,980
staff who best figure out how to execute

00:19:26,890 --> 00:19:32,320
on and achieve that vision so once again

00:19:29,980 --> 00:19:34,150
it is you who have figured out how to

00:19:32,320 --> 00:19:37,000
adopt reliability practices how to

00:19:34,150 --> 00:19:38,140
address incidents and minimize incidents

00:19:37,000 --> 00:19:40,000
and

00:19:38,140 --> 00:19:41,950
how to indeed burn down toil and

00:19:40,000 --> 00:19:44,440
therefore it is you who are best

00:19:41,950 --> 00:19:46,720
position to spread these practices which

00:19:44,440 --> 00:19:53,670
is to say cultural change comes

00:19:46,720 --> 00:19:56,110
bottom-up so again that's that's why me

00:19:53,670 --> 00:19:59,080
so to conclude our tale let's return to

00:19:56,110 --> 00:20:03,010
the beginning if DevOps is about

00:19:59,080 --> 00:20:04,780
principles of cultural change and sre is

00:20:03,010 --> 00:20:07,120
about the practices that lead to

00:20:04,780 --> 00:20:17,770
cultural change is it's also very

00:20:07,120 --> 00:20:20,640
important the answer is yes with that

00:20:17,770 --> 00:20:23,230
that's double double toil and trouble

00:20:20,640 --> 00:20:26,700
here are some references if you like to

00:20:23,230 --> 00:20:29,050
the imagery that we've got in the slides

00:20:26,700 --> 00:20:31,350
I'm gonna open it up to comments and

00:20:29,050 --> 00:20:31,350
questions

00:20:31,990 --> 00:20:41,750
[Applause]

00:20:39,100 --> 00:20:56,990
right are there any questions or

00:20:41,750 --> 00:20:59,150
comments weighted back have we talked to

00:20:56,990 --> 00:21:01,420
Google s erease about our model and we

00:20:59,150 --> 00:21:06,860
have any sorry it was the second part

00:21:01,420 --> 00:21:09,260
did they comment we talked some with

00:21:06,860 --> 00:21:11,450
Marie who was a product manager for our

00:21:09,260 --> 00:21:15,020
team and is now at Google have chats

00:21:11,450 --> 00:21:16,700
know and then and sort of freeform

00:21:15,020 --> 00:21:18,560
sharing of notes and ideas I think of

00:21:16,700 --> 00:21:20,720
this all it's like you know Google's

00:21:18,560 --> 00:21:23,870
offered the community these great

00:21:20,720 --> 00:21:25,580
resources it's not static we you know

00:21:23,870 --> 00:21:27,500
within folks in Google and within the

00:21:25,580 --> 00:21:29,620
industry we're continuing to evolve this

00:21:27,500 --> 00:21:33,560
stuff we're all on a journey if you like

00:21:29,620 --> 00:21:35,210
and for a given organization there may

00:21:33,560 --> 00:21:38,750
be some things that are that makes sense

00:21:35,210 --> 00:21:40,340
to adopt verbatim from Google but that's

00:21:38,750 --> 00:21:42,190
not always the case it depends a lot on

00:21:40,340 --> 00:21:45,380
your culture and who are your customers

00:21:42,190 --> 00:21:47,330
so you know for pivotal Web Services for

00:21:45,380 --> 00:21:49,010
example and for pivotal our customer is

00:21:47,330 --> 00:21:51,800
fundamentally different than the hasari

00:21:49,010 --> 00:21:53,480
at Google so we're adapting and

00:21:51,800 --> 00:21:57,050
adjusting and I think it's a

00:21:53,480 --> 00:22:00,190
bi-directional sharing of information go

00:21:57,050 --> 00:22:00,190
ahead again add more Tony

00:22:20,070 --> 00:22:24,760
great so the suggestion there is watch

00:22:22,360 --> 00:22:30,130
the 40 minutes of video produce bliss

00:22:24,760 --> 00:22:33,250
Van Jones produced it okay yeah great

00:22:30,130 --> 00:22:36,570
thank you other comments questions

00:22:33,250 --> 00:22:36,570
suggestions get Emma

00:22:56,020 --> 00:22:59,440
Thank You Gautama

00:23:02,919 --> 00:23:44,710
all right yes oh yes so the question is

00:23:41,529 --> 00:23:46,509
do we have have practices in which we're

00:23:44,710 --> 00:23:50,320
pushing back to the teams that might be

00:23:46,509 --> 00:23:54,369
creating toil for us and how do we get

00:23:50,320 --> 00:23:54,879
by and we're taking the UA a user an

00:23:54,369 --> 00:23:56,919
account

00:23:54,879 --> 00:24:00,639
sorry user and client creation as an

00:23:56,919 --> 00:24:03,489
example we are like both feeling that

00:24:00,639 --> 00:24:05,049
pain and of course we're blockers for

00:24:03,489 --> 00:24:07,960
those teams so some of the work that

00:24:05,049 --> 00:24:10,299
we're starting to put into place around

00:24:07,960 --> 00:24:12,100
that is self service related stuff so

00:24:10,299 --> 00:24:15,100
building some tooling such that like

00:24:12,100 --> 00:24:18,369
with minimal approval from you know some

00:24:15,100 --> 00:24:20,139
admin or our team an R&D team can

00:24:18,369 --> 00:24:22,629
request the client request the user that

00:24:20,139 --> 00:24:26,859
they need get the credentials back so we

00:24:22,629 --> 00:24:30,399
we we do a lot of tooling around sort of

00:24:26,859 --> 00:24:34,659
entirely internal toil and also tooling

00:24:30,399 --> 00:24:36,730
to help help support our R&D work and in

00:24:34,659 --> 00:24:39,249
terms of getting buy-in for that I'd

00:24:36,730 --> 00:24:40,419
consider going back to that slide where

00:24:39,249 --> 00:24:44,049
I suggest that the culture comes

00:24:40,419 --> 00:24:45,580
bottom-up in you know if we produce this

00:24:44,049 --> 00:24:47,980
stuff and everyone across the

00:24:45,580 --> 00:24:50,259
organization is finding that like there

00:24:47,980 --> 00:24:53,940
unblocked and there's less work for us

00:24:50,259 --> 00:24:53,940
there's no convincing to do

00:24:56,350 --> 00:25:34,900
yep right so the question was how do we

00:25:31,659 --> 00:25:35,919
address the users toil or what what kind

00:25:34,900 --> 00:25:37,390
of communication do we have a

00:25:35,919 --> 00:25:39,640
collaboration do we have to help them

00:25:37,390 --> 00:25:43,659
address that toil as well I'd say that

00:25:39,640 --> 00:25:45,880
what we experience as user toil is you

00:25:43,659 --> 00:25:47,890
know pages at 2:00 in the morning saying

00:25:45,880 --> 00:25:53,919
hey my app broke what did you do kind of

00:25:47,890 --> 00:25:55,990
thing yeah that seemed to resonate and I

00:25:53,919 --> 00:25:58,150
would I would say that in general

00:25:55,990 --> 00:26:00,520
everyone is going to have that same

00:25:58,150 --> 00:26:03,159
feeling of oh crap something's not

00:26:00,520 --> 00:26:04,570
working I need someone to someone else

00:26:03,159 --> 00:26:06,640
to blame right or I need someone else

00:26:04,570 --> 00:26:08,860
who has the better answer for me or

00:26:06,640 --> 00:26:10,570
whatever and that doesn't really go away

00:26:08,860 --> 00:26:11,710
so we can track our pages and we can

00:26:10,570 --> 00:26:13,150
figure out like oh how do we optimize

00:26:11,710 --> 00:26:14,710
all of this so that we don't get woken

00:26:13,150 --> 00:26:16,539
up in the middle of the night but I

00:26:14,710 --> 00:26:19,480
think going back to Corey's point in act

00:26:16,539 --> 00:26:22,210
3 you know helping people recognize the

00:26:19,480 --> 00:26:23,980
problems that they're the learnings that

00:26:22,210 --> 00:26:25,780
we've already addressed in terms of like

00:26:23,980 --> 00:26:28,419
addressing toil and figuring out how to

00:26:25,780 --> 00:26:30,220
address that toil is really the best way

00:26:28,419 --> 00:26:31,450
to help them solve those problems

00:26:30,220 --> 00:26:33,429
themselves you know if they have a

00:26:31,450 --> 00:26:35,230
recurring problem that they keep needing

00:26:33,429 --> 00:26:37,150
our help with maybe that's something

00:26:35,230 --> 00:26:38,950
that they should have an SLI or an SLO

00:26:37,150 --> 00:26:40,030
tracking and maybe that's something that

00:26:38,950 --> 00:26:42,159
they should learn how to automate

00:26:40,030 --> 00:26:43,690
themselves and what better way to do

00:26:42,159 --> 00:26:45,220
that than to say hey this is how we did

00:26:43,690 --> 00:26:45,820
it on our end would you like to come

00:26:45,220 --> 00:26:47,440
work with us

00:26:45,820 --> 00:26:48,789
pair with us collaborate with us and we

00:26:47,440 --> 00:26:53,200
can help figure out how to resolve this

00:26:48,789 --> 00:26:56,289
toil what communication tools are we

00:26:53,200 --> 00:26:58,480
using slack mostly a lot of the

00:26:56,289 --> 00:27:01,990
collaboration though happens in person

00:26:58,480 --> 00:27:04,120
right we try and pair with our other

00:27:01,990 --> 00:27:05,530
teams we try and cross team pair and

00:27:04,120 --> 00:27:07,360
collaborate with them whether it's

00:27:05,530 --> 00:27:09,010
remotely through zoom call or whether we

00:27:07,360 --> 00:27:11,159
go get together a workshop or something

00:27:09,010 --> 00:27:11,159
like that

00:27:15,270 --> 00:27:20,260
yeah so I think it's probably pretty

00:27:17,920 --> 00:27:21,580
common for platform teams to get all of

00:27:20,260 --> 00:27:23,980
these like ask tickets and service no

00:27:21,580 --> 00:27:25,990
tickets and everything for the most part

00:27:23,980 --> 00:27:27,310
since we aren't servicing direct users

00:27:25,990 --> 00:27:29,200
we don't necessarily have to go through

00:27:27,310 --> 00:27:30,580
an ass-kickin system a lot of the times

00:27:29,200 --> 00:27:32,260
you know they'll reach out to us and

00:27:30,580 --> 00:27:34,510
slack and we'll say oh hey yeah we can

00:27:32,260 --> 00:27:36,460
do a client credential creation for you

00:27:34,510 --> 00:27:38,620
or whatever do you have some time this

00:27:36,460 --> 00:27:41,680
afternoon we'll just pair together on it

00:27:38,620 --> 00:27:42,880
and typically that goes over super well

00:27:41,680 --> 00:27:44,050
because they know exactly what scopes

00:27:42,880 --> 00:27:45,520
and everything they need and we never

00:27:44,050 --> 00:27:47,920
have to close out a ticker at anything

00:27:45,520 --> 00:27:50,230
but there is definitely a fallback where

00:27:47,920 --> 00:27:51,460
you know if the team doesn't know how to

00:27:50,230 --> 00:27:52,900
reach out to the platform team they'll

00:27:51,460 --> 00:27:54,730
submit nastic it and then somehow that

00:27:52,900 --> 00:27:57,360
will fall fall all the way down to us it

00:27:54,730 --> 00:27:57,360
just takes a bit longer

00:28:10,000 --> 00:28:14,210
right and so pushing coil back onto the

00:28:12,980 --> 00:28:15,560
other teens and how do we resolve that

00:28:14,210 --> 00:28:18,650
because it does kind of smell a little

00:28:15,560 --> 00:28:21,350
bit right I think in general it's kind

00:28:18,650 --> 00:28:23,780
of helpful to decide what your boundary

00:28:21,350 --> 00:28:25,730
is so if this kind of stuff is

00:28:23,780 --> 00:28:27,200
information or things that we shouldn't

00:28:25,730 --> 00:28:28,910
be the ones resolving then yeah there's

00:28:27,200 --> 00:28:30,320
healthy push back there and when setting

00:28:28,910 --> 00:28:31,940
those boundaries but it's not

00:28:30,320 --> 00:28:34,040
I would I would encourage us to not

00:28:31,940 --> 00:28:36,050
approach it as just pushing back on

00:28:34,040 --> 00:28:37,430
someone it's pushing back and helping

00:28:36,050 --> 00:28:39,470
them figure out how to solve it right it

00:28:37,430 --> 00:28:41,780
was how to solve it themselves so often

00:28:39,470 --> 00:28:43,730
I think if someone has a silly question

00:28:41,780 --> 00:28:45,410
that is definitely answered in their FAQ

00:28:43,730 --> 00:28:46,820
or answered in a wiki or something and

00:28:45,410 --> 00:28:48,050
they're you know there's no reason they

00:28:46,820 --> 00:28:49,940
should be asking us then it doesn't

00:28:48,050 --> 00:28:53,090
really help to just say go read our wiki

00:28:49,940 --> 00:28:54,680
right because obviously everyone's like

00:28:53,090 --> 00:28:58,160
are a fun I won't come to you for help

00:28:54,680 --> 00:28:59,930
again so I think what we have tried to

00:28:58,160 --> 00:29:01,160
do in the past is kind of say it oh hey

00:28:59,930 --> 00:29:02,450
yeah we've actually answered that

00:29:01,160 --> 00:29:04,010
question before I think I don't really

00:29:02,450 --> 00:29:04,640
know where it is but maybe we can find

00:29:04,010 --> 00:29:07,640
it together

00:29:04,640 --> 00:29:09,260
so here why don't we pair for a bit oh

00:29:07,640 --> 00:29:10,610
look this is where it is it's on the

00:29:09,260 --> 00:29:13,340
wiki when you google that question that

00:29:10,610 --> 00:29:14,810
you just asked it shows up and then

00:29:13,340 --> 00:29:16,220
hopefully that you build that

00:29:14,810 --> 00:29:17,780
collaborative relationship where you're

00:29:16,220 --> 00:29:19,460
not shutting them down and pushing back

00:29:17,780 --> 00:29:21,770
completely but you're still helping them

00:29:19,460 --> 00:29:27,590
avoid that in the future where they have

00:29:21,770 --> 00:29:30,740
to come and rely on you yeah how many

00:29:27,590 --> 00:29:33,050
people are on our team right now we aim

00:29:30,740 --> 00:29:36,200
for eight engineers and we have our

00:29:33,050 --> 00:29:38,420
product manager as well at any given

00:29:36,200 --> 00:29:41,150
point in time so we pair as folks might

00:29:38,420 --> 00:29:43,520
know about pivotal at any given point in

00:29:41,150 --> 00:29:47,840
time there's one pair on the actual

00:29:43,520 --> 00:29:48,860
operations deployment efforts the other

00:29:47,840 --> 00:29:50,870
pairs are working on the platform

00:29:48,860 --> 00:29:55,010
engineering and tooling and so forth and

00:29:50,870 --> 00:29:56,770
sre things the real reason why for we

00:29:55,010 --> 00:30:00,080
think for like a an Operations team

00:29:56,770 --> 00:30:03,080
needing eight folks on the team is about

00:30:00,080 --> 00:30:05,900
alert fatigue just like you're gonna

00:30:03,080 --> 00:30:09,010
burn out if you have any fewer than six

00:30:05,900 --> 00:30:12,760
at the fewest but eight in particular

00:30:09,010 --> 00:30:14,590
you need more people going back to some

00:30:12,760 --> 00:30:18,520
of the earlier questions about like what

00:30:14,590 --> 00:30:20,770
I would see really is the collaboration

00:30:18,520 --> 00:30:25,090
opportunities and again our team is

00:30:20,770 --> 00:30:26,860
being at the center the the way solving

00:30:25,090 --> 00:30:28,090
the problem of like is it the is it the

00:30:26,860 --> 00:30:30,010
platform failing or is it the

00:30:28,090 --> 00:30:32,470
application failing the way we go about

00:30:30,010 --> 00:30:33,850
that is you know again as our team we're

00:30:32,470 --> 00:30:36,130
working on the platform we want to

00:30:33,850 --> 00:30:38,500
establish how well how reliable the

00:30:36,130 --> 00:30:40,929
platform is so we set up dashboards and

00:30:38,500 --> 00:30:43,240
alerting around in our case like CF push

00:30:40,929 --> 00:30:46,480
and application availability so these

00:30:43,240 --> 00:30:49,720
are again are things designed to

00:30:46,480 --> 00:30:52,240
represent end user experience and

00:30:49,720 --> 00:30:54,100
expectation and then around that we can

00:30:52,240 --> 00:30:55,750
have some conversation if we start to

00:30:54,100 --> 00:30:56,860
burn our error budget if you like is

00:30:55,750 --> 00:30:59,350
like how do we change our behavior

00:30:56,860 --> 00:31:01,809
what's our internal agreement around

00:30:59,350 --> 00:31:03,850
like you know we've no error budget

00:31:01,809 --> 00:31:06,309
remaining so let's focus on reliability

00:31:03,850 --> 00:31:08,470
stories we've got a lot of error budget

00:31:06,309 --> 00:31:11,500
remaining let's move that move fast and

00:31:08,470 --> 00:31:14,530
introduced risky or experimental things

00:31:11,500 --> 00:31:17,440
and having developed those practices we

00:31:14,530 --> 00:31:19,419
then in terms of within pivotal can go

00:31:17,440 --> 00:31:22,000
to our R&D teams and help them establish

00:31:19,419 --> 00:31:24,700
those same things which is helpful but

00:31:22,000 --> 00:31:27,520
to your question really we can then go

00:31:24,700 --> 00:31:30,540
out into the field let's say and work

00:31:27,520 --> 00:31:32,980
with our support folks who are you know

00:31:30,540 --> 00:31:34,750
helping customers run cloud boundaries

00:31:32,980 --> 00:31:36,520
in the field and collaborate with them

00:31:34,750 --> 00:31:39,220
on running the same workshops that we've

00:31:36,520 --> 00:31:41,830
used to come up with these slis and SLO

00:31:39,220 --> 00:31:44,440
s and dashboards and in turn we approach

00:31:41,830 --> 00:31:45,940
that as like coaching them to be become

00:31:44,440 --> 00:31:47,440
facilitators for those same workshops

00:31:45,940 --> 00:31:50,049
and then they can go out to other

00:31:47,440 --> 00:31:51,370
platform teams and do the same this gets

00:31:50,049 --> 00:31:53,820
back to that how do you scale thing

00:31:51,370 --> 00:31:56,620
right and in turn those platform

00:31:53,820 --> 00:31:59,919
engineers or operators can go to the

00:31:56,620 --> 00:32:01,299
application development teams and and do

00:31:59,919 --> 00:32:03,220
the same thing coach them on how to

00:32:01,299 --> 00:32:05,620
establish SL eyes and s lows around

00:32:03,220 --> 00:32:07,990
their applications and now what we end

00:32:05,620 --> 00:32:10,240
up with is like a platform dashboard and

00:32:07,990 --> 00:32:12,460
you can have your application developers

00:32:10,240 --> 00:32:14,200
be looking at those SL eyes and SL O's

00:32:12,460 --> 00:32:15,669
don't want them to look at the service

00:32:14,200 --> 00:32:19,059
metrics cuz they're gonna say like high

00:32:15,669 --> 00:32:20,770
CPU might not matter so you've got now

00:32:19,059 --> 00:32:23,320
this dashboard around which you can have

00:32:20,770 --> 00:32:25,810
a conversation and they've got their own

00:32:23,320 --> 00:32:27,760
around their applications and you've

00:32:25,810 --> 00:32:30,250
established these things by way of like

00:32:27,760 --> 00:32:31,780
in person if you like collaboration so

00:32:30,250 --> 00:32:33,820
you've also improved your relationship

00:32:31,780 --> 00:32:35,920
right and so now you know the

00:32:33,820 --> 00:32:38,230
application developer no longer thinks

00:32:35,920 --> 00:32:39,820
the operator is a jerk and vice versa we

00:32:38,230 --> 00:32:42,010
at least trust each other's good

00:32:39,820 --> 00:32:43,840
intention and we've got these tools to

00:32:42,010 --> 00:32:45,610
have the collaboration and communication

00:32:43,840 --> 00:32:47,770
around so we can say okay it looks like

00:32:45,610 --> 00:32:49,840
it's actually in the application right

00:32:47,770 --> 00:32:52,390
now let me help you go figure out like

00:32:49,840 --> 00:32:54,130
why your your leaking memory or it looks

00:32:52,390 --> 00:32:56,470
like it's really in the platform let me

00:32:54,130 --> 00:32:58,450
go back to that people who write CF and

00:32:56,470 --> 00:33:00,990
say improve this widget or this

00:32:58,450 --> 00:33:00,990
component

00:33:07,030 --> 00:33:27,000
anything else no okay so our sure Thank

00:33:25,150 --> 00:33:30,010
You Marco

00:33:27,000 --> 00:33:34,900
detection runs on a periodic schedule so

00:33:30,010 --> 00:33:37,330
we use a concours concours CI to do that

00:33:34,900 --> 00:33:39,250
and it's pretty much a bash script we

00:33:37,330 --> 00:33:42,340
utilize the pivotal tracker api's to

00:33:39,250 --> 00:33:44,830
create those stories add the tasks from

00:33:42,340 --> 00:33:46,570
a list that we've determined people can

00:33:44,830 --> 00:33:48,910
follow easily so they don't miss an

00:33:46,570 --> 00:33:51,160
important step and yeah it just runs on

00:33:48,910 --> 00:33:53,710
a schedule and if it detects an abusive

00:33:51,160 --> 00:34:03,730
app it creates a story for it and alerts

00:33:53,710 --> 00:34:05,320
us of the story in slack I think we're

00:34:03,730 --> 00:34:08,169
about out of time so thank you very much

00:34:05,320 --> 00:34:10,070
and feel free to ask us any questions

00:34:08,169 --> 00:34:12,979
after

00:34:10,070 --> 00:34:12,979

YouTube URL: https://www.youtube.com/watch?v=60QjgjTJ8g0


