Title: From Zero to Factory - Platform: The Cloud Foundry Conference
Publication date: 2013-11-22
Playlist: Platform: The Cloud Foundry Conference
Description: 
	From Zero to Factory: Revolutionizing 'Time-to-Value' Through the Industrialization of Enterprise IT
Jonathan Murray, EVP and Chief Technology Office, Warner Music Group
Platform: The Cloud Foundry Conference (http://www.platformcf.com) September 8-9, 2013
Captions: 
	00:00:01,210 --> 00:00:04,319
[Music]

00:00:07,340 --> 00:00:11,910
without further ado let's just get the

00:00:09,809 --> 00:00:15,299
program started so coming up first we

00:00:11,910 --> 00:00:17,220
have Jonathan Murray he's at Time Warner

00:00:15,299 --> 00:00:19,770
and I asked him tell me about his

00:00:17,220 --> 00:00:21,449
hobbies and he said he gave up the time

00:00:19,770 --> 00:00:24,150
he was gonna spend putting together his

00:00:21,449 --> 00:00:25,890
his quadcopter in his hotel room to come

00:00:24,150 --> 00:00:30,950
give this talk so so he's making

00:00:25,890 --> 00:00:33,620
sacrifices for Cloud Foundry good yeah

00:00:30,950 --> 00:00:36,510
[Applause]

00:00:33,620 --> 00:00:39,000
thank you Andrew and thank you James and

00:00:36,510 --> 00:00:39,510
the Cloud Foundry team for pulling this

00:00:39,000 --> 00:00:42,780
together

00:00:39,510 --> 00:00:44,309
it's a pleasure to be here and have this

00:00:42,780 --> 00:00:47,850
opportunity to share at least one

00:00:44,309 --> 00:00:49,559
company's journey and the commitment

00:00:47,850 --> 00:00:52,230
that we made to Cloud Foundry which was

00:00:49,559 --> 00:00:54,629
now over about just about two years ago

00:00:52,230 --> 00:00:56,280
that we made the decision to make a

00:00:54,629 --> 00:00:58,620
long-term commitment to Cloud Foundry

00:00:56,280 --> 00:01:00,539
and I want to explain a little bit in

00:00:58,620 --> 00:01:02,640
terms of the lessons we've learned and

00:01:00,539 --> 00:01:05,010
the journey we've taken over that period

00:01:02,640 --> 00:01:07,619
of time I do before I want to get

00:01:05,010 --> 00:01:09,960
started give a shout out to my friend

00:01:07,619 --> 00:01:15,479
and colleague Dave McCrory who heads up

00:01:09,960 --> 00:01:16,860
engineering and of course I can't

00:01:15,479 --> 00:01:19,320
mention Dave without mentioning his

00:01:16,860 --> 00:01:24,180
beautiful wife Carolyn at cloud of

00:01:19,320 --> 00:01:27,450
Caroline who's sitting over there and

00:01:24,180 --> 00:01:28,530
Dave leads engineering and a slight

00:01:27,450 --> 00:01:30,689
correction Android's

00:01:28,530 --> 00:01:32,820
we've sort of represent Warner Music

00:01:30,689 --> 00:01:34,770
Group which originally was part of Time

00:01:32,820 --> 00:01:36,950
Warner but is now an independently

00:01:34,770 --> 00:01:39,930
privately held it's the third largest

00:01:36,950 --> 00:01:41,990
recorded music company in the world we

00:01:39,930 --> 00:01:44,939
operate in 40 countries around the world

00:01:41,990 --> 00:01:46,860
we have about 5,000 staff three billion

00:01:44,939 --> 00:01:48,930
dollars in revenue and we're privately

00:01:46,860 --> 00:01:50,939
held and that's actually one of the

00:01:48,930 --> 00:01:52,530
things that's enabled us to be quite

00:01:50,939 --> 00:01:54,210
radical about how we think about

00:01:52,530 --> 00:01:57,360
technology over the last couple of years

00:01:54,210 --> 00:01:59,250
because having a private owner who is

00:01:57,360 --> 00:02:02,520
very committed to a digital based

00:01:59,250 --> 00:02:04,350
service model and a CEO who understands

00:02:02,520 --> 00:02:06,360
the role that technology plays is the

00:02:04,350 --> 00:02:08,099
great starting point to actually fund

00:02:06,360 --> 00:02:10,340
some of the stuff that we're doing so

00:02:08,099 --> 00:02:13,160
we're in a very fortunate position

00:02:10,340 --> 00:02:16,370
the genesis of the vision that we're now

00:02:13,160 --> 00:02:18,709
putting into practice goes back to the

00:02:16,370 --> 00:02:22,750
earliest days of my career writing

00:02:18,709 --> 00:02:25,400
Fortran code on tops-10 PDP systems and

00:02:22,750 --> 00:02:29,239
then writing trunk network planning

00:02:25,400 --> 00:02:32,480
applications in vs Fortran on IBM 360s

00:02:29,239 --> 00:02:34,220
for British Telecom and then running the

00:02:32,480 --> 00:02:36,769
global accounts business for Microsoft

00:02:34,220 --> 00:02:40,099
managing the complex environments of our

00:02:36,769 --> 00:02:42,560
top 40 commercial customers and all the

00:02:40,099 --> 00:02:45,200
way through that history it's sort of

00:02:42,560 --> 00:02:48,650
been a growing realization and a growing

00:02:45,200 --> 00:02:51,530
question mark as to how how long can the

00:02:48,650 --> 00:02:54,950
complexity that currently overwhelms IT

00:02:51,530 --> 00:02:57,290
organizations continue every generation

00:02:54,950 --> 00:03:00,080
of technology that we have deployed as

00:02:57,290 --> 00:03:02,690
IT professionals has not replaced the

00:03:00,080 --> 00:03:05,390
technology before it is built on top of

00:03:02,690 --> 00:03:07,940
it and it's created more complexity

00:03:05,390 --> 00:03:10,220
every time we've adjusted so we went

00:03:07,940 --> 00:03:11,840
from mainframes to many computers we

00:03:10,220 --> 00:03:14,060
added those to the mainframe environment

00:03:11,840 --> 00:03:16,549
then we deployed client-server then we

00:03:14,060 --> 00:03:18,620
got into the web right and our IT

00:03:16,549 --> 00:03:21,380
environments just became increasingly

00:03:18,620 --> 00:03:23,120
complex and you end up with software

00:03:21,380 --> 00:03:25,819
development life cycles like the one

00:03:23,120 --> 00:03:28,280
that James showed where the time that's

00:03:25,819 --> 00:03:30,799
spent on integrating technology in the

00:03:28,280 --> 00:03:34,430
organization gets in the way of

00:03:30,799 --> 00:03:36,560
delivering value to the organization so

00:03:34,430 --> 00:03:40,220
the challenge I've been thinking about

00:03:36,560 --> 00:03:42,319
and I'll the real genesis of the vision

00:03:40,220 --> 00:03:45,200
we're now implementing goes back to

00:03:42,319 --> 00:03:47,209
about literally ten years ago I can

00:03:45,200 --> 00:03:49,130
remember exactly the situation I was in

00:03:47,209 --> 00:03:53,000
where we were at the time where the

00:03:49,130 --> 00:03:54,739
light bulb went off for me I had a team

00:03:53,000 --> 00:03:57,260
of mine from Microsoft we were in Chile

00:03:54,739 --> 00:04:00,560
and we were visiting a company called

00:03:57,260 --> 00:04:02,780
Codelco and Cadell Co are for those of

00:04:00,560 --> 00:04:04,609
you who I'm a geologist by training so I

00:04:02,780 --> 00:04:06,319
like companies that in the natural

00:04:04,609 --> 00:04:08,720
resources business but could get Cadell

00:04:06,319 --> 00:04:09,319
Co is the largest copper mining company

00:04:08,720 --> 00:04:12,880
in the world

00:04:09,319 --> 00:04:16,220
they represent 40% of the Chilean GDP

00:04:12,880 --> 00:04:18,709
one company right so they're pretty

00:04:16,220 --> 00:04:20,209
important to the economy and we were

00:04:18,709 --> 00:04:22,290
visiting this mine we were getting a

00:04:20,209 --> 00:04:24,750
tour we were underground

00:04:22,290 --> 00:04:25,950
and we were sort of said of Microsoft

00:04:24,750 --> 00:04:28,100
folks and we were wandering around they

00:04:25,950 --> 00:04:30,390
were said of Japanese visitors past us

00:04:28,100 --> 00:04:32,100
going in the opposite direction I asked

00:04:30,390 --> 00:04:35,190
my host why we who are the Japanese

00:04:32,100 --> 00:04:38,490
visitors and my host said oh those are

00:04:35,190 --> 00:04:40,560
researchers from NTT and they're

00:04:38,490 --> 00:04:42,600
basically researching the optimization

00:04:40,560 --> 00:04:46,970
of photonic networks in noisy industrial

00:04:42,600 --> 00:04:49,170
environments to have a mining engineer

00:04:46,970 --> 00:04:52,470
tell me that there was a research team

00:04:49,170 --> 00:04:55,200
from NTT inside their mind was sort of a

00:04:52,470 --> 00:04:56,520
pretty insightful thing and then you

00:04:55,200 --> 00:04:58,950
start to realize that they were actually

00:04:56,520 --> 00:05:01,650
putting telemetry in all of the mining

00:04:58,950 --> 00:05:03,240
equipment and not only were they putting

00:05:01,650 --> 00:05:05,040
telemetry in the mining equipment but

00:05:03,240 --> 00:05:07,740
they were remotely controlling the

00:05:05,040 --> 00:05:09,630
mining equipment and in fact they took

00:05:07,740 --> 00:05:10,470
us to a control center two miles away

00:05:09,630 --> 00:05:13,020
from the mine

00:05:10,470 --> 00:05:16,700
where they had mine operators who were

00:05:13,020 --> 00:05:18,720
sitting in jump seats with joysticks

00:05:16,700 --> 00:05:22,380
remotely operating the mining equipment

00:05:18,720 --> 00:05:24,030
in the mine and at that point in time

00:05:22,380 --> 00:05:26,460
that's when the light bulb went off for

00:05:24,030 --> 00:05:28,950
me which is if you can deploy and

00:05:26,460 --> 00:05:34,530
transform a business with technology

00:05:28,950 --> 00:05:36,270
that's as basic as mining copper what

00:05:34,530 --> 00:05:38,610
are the businesses what can you do with

00:05:36,270 --> 00:05:40,860
other businesses with technology how far

00:05:38,610 --> 00:05:44,190
can you take the automation of a

00:05:40,860 --> 00:05:46,440
business and how radical can we use

00:05:44,190 --> 00:05:48,150
erratically can we use IT to transform

00:05:46,440 --> 00:05:50,250
those businesses and some of you may

00:05:48,150 --> 00:05:52,320
have read I wrote a piece just recently

00:05:50,250 --> 00:05:54,390
on what I call the composable Enterprise

00:05:52,320 --> 00:05:57,300
this concept of building enterprises out

00:05:54,390 --> 00:06:00,420
of building blocks enabling them through

00:05:57,300 --> 00:06:02,970
IT and creating in organizational models

00:06:00,420 --> 00:06:05,840
that have the adaptability that we need

00:06:02,970 --> 00:06:08,150
for today's global dynamic economic

00:06:05,840 --> 00:06:10,860
environments in which we operate and

00:06:08,150 --> 00:06:13,320
that was the genesis of the idea that

00:06:10,860 --> 00:06:15,990
we're now putting into software inside

00:06:13,320 --> 00:06:19,140
Warner Music Group which is how radical

00:06:15,990 --> 00:06:22,550
can you reimagine IT inside the

00:06:19,140 --> 00:06:25,740
organization because the reality is that

00:06:22,550 --> 00:06:27,900
the speed with which organizations can

00:06:25,740 --> 00:06:30,600
change they can adapt to new markets

00:06:27,900 --> 00:06:33,600
they can create new products is in very

00:06:30,600 --> 00:06:36,750
large part limited by the speed with

00:06:33,600 --> 00:06:40,870
which we can deploy new capability in

00:06:36,750 --> 00:06:43,780
it's a real roadblock to value creation

00:06:40,870 --> 00:06:46,570
inside most organizations and this is

00:06:43,780 --> 00:06:48,280
why because of that complexity that

00:06:46,570 --> 00:06:50,860
we've built up over multiple generations

00:06:48,280 --> 00:06:52,780
of implementing different layers of

00:06:50,860 --> 00:06:55,510
technology inside our organizations I

00:06:52,780 --> 00:06:57,040
mean the joke of deploying sa P inside

00:06:55,510 --> 00:07:00,570
your organization right is that it's

00:06:57,040 --> 00:07:03,670
pouring cement into the organization

00:07:00,570 --> 00:07:05,950
well pretty much all of the IT we've

00:07:03,670 --> 00:07:08,110
done for the last 40 years is pouring

00:07:05,950 --> 00:07:10,750
cement into the organization once it's

00:07:08,110 --> 00:07:13,030
in it's incredibly difficult to change

00:07:10,750 --> 00:07:15,490
it it's incredibly difficult to deliver

00:07:13,030 --> 00:07:17,830
a new value and to do that quickly and

00:07:15,490 --> 00:07:19,990
with low friction at the speed with

00:07:17,830 --> 00:07:21,970
which the business needs to operate

00:07:19,990 --> 00:07:24,460
which causes friction for the IT

00:07:21,970 --> 00:07:27,340
organization because the CIO is either

00:07:24,460 --> 00:07:30,220
typically measured by the cost of

00:07:27,340 --> 00:07:32,200
running their operations or the delivery

00:07:30,220 --> 00:07:34,030
of value to the organization and that

00:07:32,200 --> 00:07:36,070
those neither of those equations are

00:07:34,030 --> 00:07:39,010
working out very well for most IT

00:07:36,070 --> 00:07:41,800
organizations and the reality is that

00:07:39,010 --> 00:07:44,320
from an architectural perspective this

00:07:41,800 --> 00:07:46,470
is how we've built IT systems inside the

00:07:44,320 --> 00:07:49,540
enterprise over the last 40 years

00:07:46,470 --> 00:07:51,730
everybody has built whatever the new

00:07:49,540 --> 00:07:53,890
system is in the way that they wanted to

00:07:51,730 --> 00:07:56,890
build it there's been no overall

00:07:53,890 --> 00:07:58,600
architectural plan the light switches

00:07:56,890 --> 00:08:00,580
are all different the plumbing is all

00:07:58,600 --> 00:08:02,170
different the aerials all the antennae

00:08:00,580 --> 00:08:05,380
are all in a different place in the roof

00:08:02,170 --> 00:08:07,120
there's no standards right and when you

00:08:05,380 --> 00:08:09,190
want to layer something new on top of

00:08:07,120 --> 00:08:11,740
that you spend more of your budget doing

00:08:09,190 --> 00:08:15,250
systems integration work then delivering

00:08:11,740 --> 00:08:17,410
value to the organization this is the

00:08:15,250 --> 00:08:20,620
way we should be delivering IT to the

00:08:17,410 --> 00:08:23,230
organization building apartment blocks

00:08:20,620 --> 00:08:26,650
where there are common shared services

00:08:23,230 --> 00:08:28,390
those common shared services are shared

00:08:26,650 --> 00:08:31,720
across all of the requirements of the

00:08:28,390 --> 00:08:34,000
organization yes if you are a business

00:08:31,720 --> 00:08:36,400
unit you get to pick the color of the

00:08:34,000 --> 00:08:38,050
shades the paint color on the wall which

00:08:36,400 --> 00:08:40,180
TV you want in the room what

00:08:38,050 --> 00:08:42,760
functionality you want in your you know

00:08:40,180 --> 00:08:45,480
your living room but you're plugging

00:08:42,760 --> 00:08:48,160
into a common service framework and

00:08:45,480 --> 00:08:49,360
that's the model that we're sort of

00:08:48,160 --> 00:08:53,290
thinking through and sort of building

00:08:49,360 --> 00:08:57,700
out in our organization today because

00:08:53,290 --> 00:09:00,490
ultimately we need IT and I swear to God

00:08:57,700 --> 00:09:02,980
that I did not know that the pivotal

00:09:00,490 --> 00:09:04,480
tagline was moving at the speed of

00:09:02,980 --> 00:09:07,750
business right that's a complete

00:09:04,480 --> 00:09:10,270
coincidence but we do need to get IT to

00:09:07,750 --> 00:09:13,680
move to the point where IT can deliver

00:09:10,270 --> 00:09:17,320
value at the speed of the business and

00:09:13,680 --> 00:09:19,900
at the same time deliver IT and new

00:09:17,320 --> 00:09:21,430
services at lower operational cost that

00:09:19,900 --> 00:09:25,630
weren't typically able to deliver it

00:09:21,430 --> 00:09:27,490
today and while we're at it let's build

00:09:25,630 --> 00:09:30,520
a platform that enables organizations to

00:09:27,490 --> 00:09:33,250
innovate to experiment at low cost to

00:09:30,520 --> 00:09:34,900
build fast fail cycles one of the

00:09:33,250 --> 00:09:36,300
challenges inside most organizations

00:09:34,900 --> 00:09:38,920
today is that the cost of

00:09:36,300 --> 00:09:40,930
experimentation for the business you

00:09:38,920 --> 00:09:42,880
want to build a new consumer service and

00:09:40,930 --> 00:09:44,440
you want to see you know you want to do

00:09:42,880 --> 00:09:46,060
a/b testing you want to do three or four

00:09:44,440 --> 00:09:49,240
different scenarios and you want to see

00:09:46,060 --> 00:09:50,880
which one works the cost of building

00:09:49,240 --> 00:09:54,970
each of those services is too expensive

00:09:50,880 --> 00:09:56,890
so we don't experiment very much and if

00:09:54,970 --> 00:09:58,330
you don't experiment very much and it's

00:09:56,890 --> 00:10:00,820
too costly then you don't learn very

00:09:58,330 --> 00:10:03,640
much so we want to build an environment

00:10:00,820 --> 00:10:06,130
where experimentation is cheap you can

00:10:03,640 --> 00:10:08,170
do it rapidly you can learn from it and

00:10:06,130 --> 00:10:10,240
you can basically converge on what the

00:10:08,170 --> 00:10:11,140
right answers are for each piece of the

00:10:10,240 --> 00:10:15,810
business that's doing the

00:10:11,140 --> 00:10:19,480
experimentation and then ultimately and

00:10:15,810 --> 00:10:23,000
my I have a firm belief that over the

00:10:19,480 --> 00:10:26,030
next few years the single metric

00:10:23,000 --> 00:10:30,110
that all CIOs most CIOs will be measured

00:10:26,030 --> 00:10:31,970
against is time to value it doesn't

00:10:30,110 --> 00:10:35,060
matter whether your IT budget is going

00:10:31,970 --> 00:10:37,400
up here over year if your IT budget has

00:10:35,060 --> 00:10:39,740
gone up ten percent but you're

00:10:37,400 --> 00:10:41,300
delivering a hundred percent more value

00:10:39,740 --> 00:10:44,390
to the business that's a good return on

00:10:41,300 --> 00:10:46,070
investment and most a lot of IT

00:10:44,390 --> 00:10:48,890
organizations are starting to realize

00:10:46,070 --> 00:10:51,530
that actually the answer to the problem

00:10:48,890 --> 00:10:53,480
of a year of a year forced decline in

00:10:51,530 --> 00:10:56,560
your operating costs is to deliver more

00:10:53,480 --> 00:11:00,080
value because nobody's going to question

00:10:56,560 --> 00:11:02,660
the spend on i.t if the return on that

00:11:00,080 --> 00:11:05,660
investment outweighs by an order of

00:11:02,660 --> 00:11:07,400
magnitude the spent so I really think

00:11:05,660 --> 00:11:10,610
the focus and certainly the focus for us

00:11:07,400 --> 00:11:12,350
is time to value how quickly can you

00:11:10,610 --> 00:11:14,780
capability be delivered to the

00:11:12,350 --> 00:11:16,520
organization that enables the

00:11:14,780 --> 00:11:19,160
organization to evolve deliver new

00:11:16,520 --> 00:11:21,170
businesses create more revenue you know

00:11:19,160 --> 00:11:24,500
build better consumer products etc etc

00:11:21,170 --> 00:11:26,860
there is a revolution coming and I use

00:11:24,500 --> 00:11:30,320
the revolution in the political sense of

00:11:26,860 --> 00:11:35,270
the replacement of a pre-existing regime

00:11:30,320 --> 00:11:39,130
or pre-existing structural system we

00:11:35,270 --> 00:11:41,810
live in a world where corporate IT in

00:11:39,130 --> 00:11:45,080
pretty much all companies looks the same

00:11:41,810 --> 00:11:46,880
it's been built on that build upon build

00:11:45,080 --> 00:11:49,520
upon build it's like an architecture and

00:11:46,880 --> 00:11:52,220
like an archeological dig in most IT

00:11:49,520 --> 00:11:54,530
organizations you can go through the

00:11:52,220 --> 00:11:57,110
different layers of history and sort of

00:11:54,530 --> 00:11:59,690
find all the artifacts still operating

00:11:57,110 --> 00:12:02,600
still working there is a revolution

00:11:59,690 --> 00:12:04,700
coming and that revolution implies

00:12:02,600 --> 00:12:06,770
something that's going to be very

00:12:04,700 --> 00:12:08,480
difficult for many organizations to take

00:12:06,770 --> 00:12:10,970
on board and I realize that we're in a

00:12:08,480 --> 00:12:14,150
very fortunate position the realization

00:12:10,970 --> 00:12:16,550
is that at some point backward

00:12:14,150 --> 00:12:21,580
compatibility

00:12:16,550 --> 00:12:25,760
is no longer something you can afford

00:12:21,580 --> 00:12:28,899
that building on the past is no longer

00:12:25,760 --> 00:12:32,089
something you can afford at some point

00:12:28,899 --> 00:12:34,070
the cost of building on the past of

00:12:32,089 --> 00:12:37,670
dealing with that complexity of dealing

00:12:34,070 --> 00:12:39,290
with that friction means that you have

00:12:37,670 --> 00:12:45,740
to make the jump to a blank sheet of

00:12:39,290 --> 00:12:49,790
paper and that's the decision we made 18

00:12:45,740 --> 00:12:52,490
months ago I'm my organization has 40

00:12:49,790 --> 00:12:54,380
years of IT legacy just like any

00:12:52,490 --> 00:12:57,350
organization of our size and complexity

00:12:54,380 --> 00:12:59,540
but we made the decision that we weren't

00:12:57,350 --> 00:13:01,910
going to rewire that we were going to

00:12:59,540 --> 00:13:04,370
start with a blank sheet of paper we

00:13:01,910 --> 00:13:07,250
were going to build the future and then

00:13:04,370 --> 00:13:10,190
we would figure out how to re-implement

00:13:07,250 --> 00:13:11,839
what we have over here on this new world

00:13:10,190 --> 00:13:14,390
that we're building for the future of

00:13:11,839 --> 00:13:16,700
the company making that break is the

00:13:14,390 --> 00:13:18,709
revolution and it's going to be tough

00:13:16,700 --> 00:13:20,390
and until I realize this we've built a

00:13:18,709 --> 00:13:21,370
software business over the last 18

00:13:20,390 --> 00:13:23,990
months

00:13:21,370 --> 00:13:26,660
it's very talented people like Dave

00:13:23,990 --> 00:13:28,760
leading engineering a lot of companies

00:13:26,660 --> 00:13:29,990
are not going to be able to do that so

00:13:28,760 --> 00:13:32,180
those of you who are service providers

00:13:29,990 --> 00:13:34,760
those of you who are partners with

00:13:32,180 --> 00:13:38,120
pivotal are going to be the people that

00:13:34,760 --> 00:13:41,000
essentially put this in a box we had to

00:13:38,120 --> 00:13:43,820
custom build it but in five or ten years

00:13:41,000 --> 00:13:45,230
time you'll buy it off the shelf and

00:13:43,820 --> 00:13:47,089
when you can buy it off the shelf and

00:13:45,230 --> 00:13:49,220
you can drop it into an organization you

00:13:47,089 --> 00:13:54,200
will de-risk the decision for the

00:13:49,220 --> 00:13:56,390
customer and with the pent-up demand for

00:13:54,200 --> 00:13:59,089
the trillions of dollars that are going

00:13:56,390 --> 00:14:03,199
to pivot over the next and I sorry I

00:13:59,089 --> 00:14:05,270
shouldn't use that term unintended no

00:14:03,199 --> 00:14:07,490
pun intended the the trillions of

00:14:05,270 --> 00:14:09,050
dollars of enterprise IT applications

00:14:07,490 --> 00:14:12,680
that have been built for the last 40 or

00:14:09,050 --> 00:14:16,220
50 years a large chunk of that is going

00:14:12,680 --> 00:14:18,320
to evolve to a new world it's going to

00:14:16,220 --> 00:14:20,480
get refreshed over the next ten years

00:14:18,320 --> 00:14:23,020
and somebody's going to earn that money

00:14:20,480 --> 00:14:27,459
that's the opportunity

00:14:23,020 --> 00:14:30,250
so what are we doing we're building an

00:14:27,459 --> 00:14:33,670
IT service factory and I know that using

00:14:30,250 --> 00:14:38,020
the words factory in a in a an audience

00:14:33,670 --> 00:14:40,180
full of of code jocks is a really dodgy

00:14:38,020 --> 00:14:42,850
thing to do right because we're all in

00:14:40,180 --> 00:14:46,020
that craft business right we like

00:14:42,850 --> 00:14:47,890
crafting software well guess what

00:14:46,020 --> 00:14:51,070
organizations don't give a rat's ass

00:14:47,890 --> 00:14:54,339
about craft right what they care about

00:14:51,070 --> 00:14:56,920
is delivery and there are two I have

00:14:54,339 --> 00:15:00,250
very two very distinct models of code

00:14:56,920 --> 00:15:03,899
development inside my organization we

00:15:00,250 --> 00:15:06,459
have craft which is the deep deep deep

00:15:03,899 --> 00:15:08,860
highly technical engineering work that's

00:15:06,459 --> 00:15:10,959
required to customize cloud foundry to

00:15:08,860 --> 00:15:13,120
build an operating system to build the

00:15:10,959 --> 00:15:16,810
deployment infrastructure etc that's

00:15:13,120 --> 00:15:19,690
craft but that's an investment we're

00:15:16,810 --> 00:15:22,779
making that platform has to become a

00:15:19,690 --> 00:15:24,550
factory because when the business says

00:15:22,779 --> 00:15:26,620
you know what I need a new service for

00:15:24,550 --> 00:15:28,270
this can this this business channel that

00:15:26,620 --> 00:15:30,540
I'm just about to open out and they one

00:15:28,270 --> 00:15:33,040
two in three months not in three years

00:15:30,540 --> 00:15:36,220
it better be a factory that you have to

00:15:33,040 --> 00:15:38,410
turn that out because that's not the

00:15:36,220 --> 00:15:41,110
place for crafts that's the place for a

00:15:38,410 --> 00:15:42,430
high-velocity factory based delivery of

00:15:41,110 --> 00:15:45,010
software to the organization and

00:15:42,430 --> 00:15:46,630
capability to the organization so we're

00:15:45,010 --> 00:15:47,860
focused on moving from separate silos

00:15:46,630 --> 00:15:50,470
because we have a classic IT

00:15:47,860 --> 00:15:52,959
organization that I inherited when when

00:15:50,470 --> 00:15:55,149
I joined we're moving from silos to a

00:15:52,959 --> 00:15:57,970
single platform that platform is cloud

00:15:55,149 --> 00:16:00,040
foundry based we're moving from a

00:15:57,970 --> 00:16:01,779
systems focus all the people in IT today

00:16:00,040 --> 00:16:04,510
they get up every day and worry about

00:16:01,779 --> 00:16:07,899
their system and the unique systems

00:16:04,510 --> 00:16:09,640
interaction with the business evolving

00:16:07,899 --> 00:16:13,180
those people to think about business

00:16:09,640 --> 00:16:16,050
engagement value to the business not

00:16:13,180 --> 00:16:19,050
patching the latest version of Red Hat

00:16:16,050 --> 00:16:21,730
right delivering value to the business

00:16:19,050 --> 00:16:24,600
moving from a break fix environment I

00:16:21,730 --> 00:16:26,010
pay millions of dollars a year to

00:16:24,600 --> 00:16:29,230
outsource

00:16:26,010 --> 00:16:30,940
vendors who do break fix engineering

00:16:29,230 --> 00:16:32,740
from me I don't want to spend that money

00:16:30,940 --> 00:16:35,510
on break fix engineering I want to spend

00:16:32,740 --> 00:16:37,890
that money on new capability delivering

00:16:35,510 --> 00:16:39,690
right and continuous improvement

00:16:37,890 --> 00:16:42,029
building an environment where we just

00:16:39,690 --> 00:16:44,100
get better every day instead of just

00:16:42,029 --> 00:16:47,700
trying to tread water and stop ourselves

00:16:44,100 --> 00:16:49,440
from drowning and finally maintaining

00:16:47,700 --> 00:16:53,580
the past which is what we've been doing

00:16:49,440 --> 00:16:55,890
for years to enabling the future making

00:16:53,580 --> 00:16:58,250
investments that help us see a future

00:16:55,890 --> 00:17:00,360
that's much brighter than it is today

00:16:58,250 --> 00:17:02,399
instead of just spending all of our

00:17:00,360 --> 00:17:04,530
money maintaining the systems that we

00:17:02,399 --> 00:17:06,569
have our strategy really takes through

00:17:04,530 --> 00:17:09,829
our implementation strategy really Falls

00:17:06,569 --> 00:17:13,470
breaks out into four major components

00:17:09,829 --> 00:17:19,620
decouple from infrastructure which is I

00:17:13,470 --> 00:17:22,439
really really really really really do

00:17:19,620 --> 00:17:25,110
not care what infrastructure I'm running

00:17:22,439 --> 00:17:27,630
off I don't want to care about servers I

00:17:25,110 --> 00:17:30,360
don't want to care about VMs I don't

00:17:27,630 --> 00:17:32,040
want to care about instances I don't

00:17:30,360 --> 00:17:33,990
want to care about the level of the

00:17:32,040 --> 00:17:37,790
operating system I don't want to care

00:17:33,990 --> 00:17:40,620
about the hypervisor that is unimportant

00:17:37,790 --> 00:17:42,809
what I care about is delivering

00:17:40,620 --> 00:17:44,820
applications and capability to the

00:17:42,809 --> 00:17:46,260
business that's what I want to spend my

00:17:44,820 --> 00:17:47,400
time let's some if you're in the

00:17:46,260 --> 00:17:49,110
infrastructure business and you're a

00:17:47,400 --> 00:17:51,750
service provider you want to care about

00:17:49,110 --> 00:17:53,100
that stuff as a customer I don't want to

00:17:51,750 --> 00:17:55,950
care about that stuff I don't want to

00:17:53,100 --> 00:17:57,210
have to ever care about that stuff so

00:17:55,950 --> 00:17:59,610
we're building an architecture we've

00:17:57,210 --> 00:18:01,500
built an architecture that is completely

00:17:59,610 --> 00:18:06,030
decoupled from the underlying

00:18:01,500 --> 00:18:07,740
infrastructure so I build once those

00:18:06,030 --> 00:18:10,110
applications run in my platform

00:18:07,740 --> 00:18:11,760
environment and I can run that platform

00:18:10,110 --> 00:18:14,630
environment on any infrastructure I

00:18:11,760 --> 00:18:19,340
choose whether it's OpenStack AWS

00:18:14,630 --> 00:18:22,380
Rackspace whatever it doesn't matter

00:18:19,340 --> 00:18:25,380
making data a service the central Blythe

00:18:22,380 --> 00:18:27,420
blood of an organization is data and yet

00:18:25,380 --> 00:18:29,040
data is probably the most complex thing

00:18:27,420 --> 00:18:31,470
in the world to deal with inside most IT

00:18:29,040 --> 00:18:33,240
organizations because we plumbed it in

00:18:31,470 --> 00:18:34,950
in different ways in different databases

00:18:33,240 --> 00:18:37,080
using different bus technologies over

00:18:34,950 --> 00:18:38,730
years and years and years and we spend

00:18:37,080 --> 00:18:40,850
all of our money trying to glue that

00:18:38,730 --> 00:18:43,620
data together and making it available to

00:18:40,850 --> 00:18:46,410
developers we need to get out of that

00:18:43,620 --> 00:18:49,080
business all data needs to be consumed

00:18:46,410 --> 00:18:53,210
by a standard service interface

00:18:49,080 --> 00:18:55,799
both in and out no exceptions

00:18:53,210 --> 00:18:59,100
none of this point-to-point that

00:18:55,799 --> 00:19:01,399
we're doing today right decomposing

00:18:59,100 --> 00:19:04,139
applications applications are developed

00:19:01,399 --> 00:19:06,929
historically as big monolithic piles of

00:19:04,139 --> 00:19:09,960
code those things need to get decomposed

00:19:06,929 --> 00:19:14,100
into a set of agile re composable

00:19:09,960 --> 00:19:16,470
components and then automating

00:19:14,100 --> 00:19:17,879
everything so I'm going to touch on each

00:19:16,470 --> 00:19:21,330
one of those in a little bit more detail

00:19:17,879 --> 00:19:23,429
so decoupling the infrastructure we

00:19:21,330 --> 00:19:26,039
build to pass so we were a very early

00:19:23,429 --> 00:19:29,100
adopter of Cloud Foundry very very for

00:19:26,039 --> 00:19:30,899
that specific reason we build our

00:19:29,100 --> 00:19:32,549
architecture today to avoid any

00:19:30,899 --> 00:19:35,009
dependencies on the underlying

00:19:32,549 --> 00:19:38,580
infrastructure as a service and we

00:19:35,009 --> 00:19:40,169
abstract through the use of Bosch so

00:19:38,580 --> 00:19:42,059
basically allowing us it apply our

00:19:40,169 --> 00:19:45,210
application layer and above and

00:19:42,059 --> 00:19:47,220
basically any infrastructure when we

00:19:45,210 --> 00:19:49,230
think about data this is you know I'm a

00:19:47,220 --> 00:19:51,929
classic you know I grew up in a started

00:19:49,230 --> 00:19:54,059
in mainframe development so did all my

00:19:51,929 --> 00:19:56,999
third normal form staff right got

00:19:54,059 --> 00:20:00,659
trained as a DBA I've been through the

00:19:56,999 --> 00:20:03,509
whole evolution of the technology stack

00:20:00,659 --> 00:20:06,239
in the enterprise and it took me months

00:20:03,509 --> 00:20:08,820
and Dave will attest to this to be

00:20:06,239 --> 00:20:11,809
convinced that we didn't need a standard

00:20:08,820 --> 00:20:13,350
DBMS in the middle of this architecture

00:20:11,809 --> 00:20:16,379
and we don't

00:20:13,350 --> 00:20:19,679
so our architecture today has no sequel

00:20:16,379 --> 00:20:24,359
database in it we haven't found a use

00:20:19,679 --> 00:20:26,249
case yet that requires one across all of

00:20:24,359 --> 00:20:28,649
the use cases for an enterprise company

00:20:26,249 --> 00:20:30,480
we haven't found a use case that

00:20:28,649 --> 00:20:31,980
requires us to put a copy of Oracle a

00:20:30,480 --> 00:20:34,649
copy of sequel server a copy of my

00:20:31,980 --> 00:20:39,330
sequel Postgres anything inside our

00:20:34,649 --> 00:20:40,679
architecture that's pretty radical I say

00:20:39,330 --> 00:20:43,499
they say that took me a while to get my

00:20:40,679 --> 00:20:45,029
brain around that concept but so far and

00:20:43,499 --> 00:20:47,309
look we're not a bank

00:20:45,029 --> 00:20:49,289
we don't do high-volume transaction

00:20:47,309 --> 00:20:51,450
processing systems so I get that that's

00:20:49,289 --> 00:20:53,340
a niche that's a specialized sort of

00:20:51,450 --> 00:20:55,590
environment but we do transaction

00:20:53,340 --> 00:20:58,470
processing it's not just very high

00:20:55,590 --> 00:20:59,990
volume but we put the transaction

00:20:58,470 --> 00:21:03,710
processing

00:20:59,990 --> 00:21:08,750
semantics into the service not into the

00:21:03,710 --> 00:21:17,450
database stored procedures need to be

00:21:08,750 --> 00:21:19,760
strangled at birth it just does not make

00:21:17,450 --> 00:21:22,520
any sense to put business logic inside

00:21:19,760 --> 00:21:24,080
the damn database right so put the

00:21:22,520 --> 00:21:26,360
semantics if you've built a service

00:21:24,080 --> 00:21:28,190
architecture a data service layer data

00:21:26,360 --> 00:21:31,640
service architecture put the semantics

00:21:28,190 --> 00:21:35,180
for transactions in that layer we run a

00:21:31,640 --> 00:21:36,910
polyglot storage architecture right once

00:21:35,180 --> 00:21:40,550
you've got that data services layer

00:21:36,910 --> 00:21:42,860
right it doesn't matter if you start

00:21:40,550 --> 00:21:44,750
with Cassandra you want to add

00:21:42,860 --> 00:21:47,210
elasticsearch when you just change the

00:21:44,750 --> 00:21:49,640
semantics in the in the service calls in

00:21:47,210 --> 00:21:52,670
the service architecture you want to add

00:21:49,640 --> 00:21:54,650
a graph database no problem you just add

00:21:52,670 --> 00:21:56,990
it in and you change the semantics right

00:21:54,650 --> 00:21:58,820
you give yourself a huge amount of flex

00:21:56,990 --> 00:22:00,590
attea flexibility in terms of how you

00:21:58,820 --> 00:22:03,890
deal with data one of the things we

00:22:00,590 --> 00:22:05,900
learned was that you do not need to we

00:22:03,890 --> 00:22:09,010
learned this painfully by the way that

00:22:05,900 --> 00:22:12,860
you do not need to to to do classic

00:22:09,010 --> 00:22:13,910
master data management approaches you

00:22:12,860 --> 00:22:17,480
know the old master data management

00:22:13,910 --> 00:22:19,220
approach where you build by a MDM

00:22:17,480 --> 00:22:21,230
solution and you stick it in the middle

00:22:19,220 --> 00:22:23,120
of your architecture and it becomes the

00:22:21,230 --> 00:22:24,520
in and out and the transformation of all

00:22:23,120 --> 00:22:28,070
of the rules and all that sort of stuff

00:22:24,520 --> 00:22:31,670
that's we we actually tried that and it

00:22:28,070 --> 00:22:34,400
was a disaster right simplicity is what

00:22:31,670 --> 00:22:36,020
rules the day take that out put

00:22:34,400 --> 00:22:38,660
those semantics in the server the data

00:22:36,020 --> 00:22:41,960
access layer right build very

00:22:38,660 --> 00:22:44,900
lightweight ETL solutions on top of your

00:22:41,960 --> 00:22:47,390
service layer don't put a honking big

00:22:44,900 --> 00:22:50,030
MDM solution in the middle of your

00:22:47,390 --> 00:22:52,670
architecture and migrate data on demand

00:22:50,030 --> 00:22:54,260
I mean we're running the business on 40

00:22:52,670 --> 00:22:56,270
years of IT legacy so there's a bunch of

00:22:54,260 --> 00:22:58,010
data that's sitting there which any new

00:22:56,270 --> 00:23:00,980
system that we build will need to get

00:22:58,010 --> 00:23:03,140
access to and the old approach was well

00:23:00,980 --> 00:23:05,000
when we do the SDLC in the waterfall

00:23:03,140 --> 00:23:06,470
design and what-have-you there's a part

00:23:05,000 --> 00:23:08,450
in that design process where we're gonna

00:23:06,470 --> 00:23:10,010
migrate all the data we're gonna cleanse

00:23:08,450 --> 00:23:11,890
it we're going to move it over we're

00:23:10,010 --> 00:23:13,760
gonna pay millions of dollars to do that

00:23:11,890 --> 00:23:15,200
that is such a dumb

00:23:13,760 --> 00:23:17,870
way to deal with data inside the

00:23:15,200 --> 00:23:19,130
organization what you should do which is

00:23:17,870 --> 00:23:21,470
sort of the architecture we're building

00:23:19,130 --> 00:23:23,480
today is when a user actually needs the

00:23:21,470 --> 00:23:25,400
data you've built a smart enough

00:23:23,480 --> 00:23:27,350
architecture that it goes gets it from

00:23:25,400 --> 00:23:29,090
the old environment cleanses it on

00:23:27,350 --> 00:23:30,590
demand brings it into your new

00:23:29,090 --> 00:23:32,450
environment makes that's the master

00:23:30,590 --> 00:23:34,700
system of record master data of record

00:23:32,450 --> 00:23:37,370
and then basically you build from there

00:23:34,700 --> 00:23:39,200
so do it on demand it's a very radically

00:23:37,370 --> 00:23:41,090
different way of thinking about than

00:23:39,200 --> 00:23:42,320
we've done we've done before so I want

00:23:41,090 --> 00:23:45,920
to speak for anybody else but just the

00:23:42,320 --> 00:23:50,360
way we've done systems before decompose

00:23:45,920 --> 00:23:53,210
applications we aim for velocity so our

00:23:50,360 --> 00:23:56,120
number one goal is time to value how

00:23:53,210 --> 00:23:57,830
quickly can we get code new capability

00:23:56,120 --> 00:23:59,900
into the hands of the business we

00:23:57,830 --> 00:24:01,970
understand that in doing that we're

00:23:59,900 --> 00:24:03,410
doing multiple things in flight at the

00:24:01,970 --> 00:24:06,080
same time that we're gonna have to

00:24:03,410 --> 00:24:07,610
rework so we plan for it we assume that

00:24:06,080 --> 00:24:09,950
we're going to rework as part of our

00:24:07,610 --> 00:24:12,380
architecture we want to minimize the

00:24:09,950 --> 00:24:13,940
code footprint if I've got six different

00:24:12,380 --> 00:24:17,000
development streams working at the same

00:24:13,940 --> 00:24:18,410
time on different applications we let

00:24:17,000 --> 00:24:18,950
the development stream that's farthest

00:24:18,410 --> 00:24:20,990
ahead

00:24:18,950 --> 00:24:24,530
that requires a core service to design

00:24:20,990 --> 00:24:26,690
that service so that they are not that

00:24:24,530 --> 00:24:28,130
we don't impact their velocity and then

00:24:26,690 --> 00:24:30,950
as part of the rework and the

00:24:28,130 --> 00:24:32,870
retrospective we take that service we

00:24:30,950 --> 00:24:34,430
bring it back into the center we make it

00:24:32,870 --> 00:24:36,260
part of the architecture and then we

00:24:34,430 --> 00:24:38,960
have everybody else use that shared

00:24:36,260 --> 00:24:40,700
service so we're always optimizing for

00:24:38,960 --> 00:24:42,500
the code footprint for the smallest set

00:24:40,700 --> 00:24:45,650
of code that we can run the entire

00:24:42,500 --> 00:24:49,700
business on we do not want applications

00:24:45,650 --> 00:24:51,500
building duplicate services because that

00:24:49,700 --> 00:24:53,630
just expands the complexity of the

00:24:51,500 --> 00:24:55,910
environment that you're building ease of

00:24:53,630 --> 00:24:57,380
service discovery using things like

00:24:55,910 --> 00:24:59,720
swagger from a development perspective

00:24:57,380 --> 00:25:01,280
so that when we build services new

00:24:59,720 --> 00:25:04,280
developers who are coming on board have

00:25:01,280 --> 00:25:06,770
very easy access to the service api's to

00:25:04,280 --> 00:25:09,110
the JSON can prototype can sort of test

00:25:06,770 --> 00:25:12,620
the service calls in a very dynamic very

00:25:09,110 --> 00:25:14,240
robust environment and simplifying

00:25:12,620 --> 00:25:16,400
developer onboarding this is one of the

00:25:14,240 --> 00:25:17,870
things again you through the work that

00:25:16,400 --> 00:25:20,210
Dave and I have been doing together this

00:25:17,870 --> 00:25:22,400
is one of the insights for me you have

00:25:20,210 --> 00:25:24,560
to treat the enterprise platform

00:25:22,400 --> 00:25:26,000
environment just like you would if you

00:25:24,560 --> 00:25:26,620
were selling a platform outside the

00:25:26,000 --> 00:25:28,680
company

00:25:26,620 --> 00:25:32,020
you have to have a developer program

00:25:28,680 --> 00:25:34,390
right you have to think about onboarding

00:25:32,020 --> 00:25:37,200
developers who were not part of your

00:25:34,390 --> 00:25:39,580
design process right so make it easy

00:25:37,200 --> 00:25:42,460
build the developer portals give them

00:25:39,580 --> 00:25:45,280
access to the discovery tools help them

00:25:42,460 --> 00:25:47,770
develop very rapid new applications to

00:25:45,280 --> 00:25:50,590
experiment to prototype it's a key part

00:25:47,770 --> 00:25:54,160
of what we're doing and then automating

00:25:50,590 --> 00:25:56,880
everything build a culture of

00:25:54,160 --> 00:25:58,900
test-driven development fix it upstream

00:25:56,880 --> 00:26:00,340
so that you don't have to fix it

00:25:58,900 --> 00:26:03,970
downstream because the further

00:26:00,340 --> 00:26:05,650
downstream it moves the more impact it

00:26:03,970 --> 00:26:06,280
has on velocity and delivering value to

00:26:05,650 --> 00:26:08,830
the business

00:26:06,280 --> 00:26:11,290
so building a culture where developers

00:26:08,830 --> 00:26:14,350
basically understand how to test how to

00:26:11,290 --> 00:26:16,600
build the unit test for the code etc etc

00:26:14,350 --> 00:26:17,080
is a critically important piece of the

00:26:16,600 --> 00:26:19,750
puzzle

00:26:17,080 --> 00:26:21,730
implementing continuous integration that

00:26:19,750 --> 00:26:25,870
continuous integration inside most

00:26:21,730 --> 00:26:30,130
Enterprise IT organizations is like a

00:26:25,870 --> 00:26:32,140
foreign concept right there is no

00:26:30,130 --> 00:26:34,240
continuous integration because most a

00:26:32,140 --> 00:26:35,830
lot of IT organizations I won't say most

00:26:34,240 --> 00:26:38,260
a lot of organizations are still in

00:26:35,830 --> 00:26:40,150
waterfall design processes they're not

00:26:38,260 --> 00:26:41,980
agile or anywhere close to being agile

00:26:40,150 --> 00:26:45,130
we have a culture where if you break it

00:26:41,980 --> 00:26:47,140
you fix it right if you broke the code

00:26:45,130 --> 00:26:49,090
if you broke the build you don't get to

00:26:47,140 --> 00:26:51,130
check in your code right you have to go

00:26:49,090 --> 00:26:52,929
fix it before you can check it in and we

00:26:51,130 --> 00:26:54,940
want to get to a model and I'll to be

00:26:52,929 --> 00:26:56,830
very honest we're not there right today

00:26:54,940 --> 00:27:01,559
we will be within the next couple of

00:26:56,830 --> 00:27:04,780
months of deploying continuously right a

00:27:01,559 --> 00:27:06,520
building deploying and just getting into

00:27:04,780 --> 00:27:09,040
that discipline of making sure that we

00:27:06,520 --> 00:27:11,490
are continually deploying capability to

00:27:09,040 --> 00:27:11,490
the business

00:27:12,940 --> 00:27:19,419
so the question is it all sounds really

00:27:16,599 --> 00:27:21,700
good right it sounds like unicorns and

00:27:19,419 --> 00:27:23,529
fairy dust but actually that's the

00:27:21,700 --> 00:27:25,389
journey we've been on that's the reality

00:27:23,529 --> 00:27:29,889
that we have everything that I described

00:27:25,389 --> 00:27:34,769
to you today is operational inside our

00:27:29,889 --> 00:27:37,479
organization today we went from zero you

00:27:34,769 --> 00:27:42,840
know we started engineering on October

00:27:37,479 --> 00:27:45,549
the first last year and we now have

00:27:42,840 --> 00:27:49,019
operational line of business capability

00:27:45,549 --> 00:27:51,460
running on this new operating platform

00:27:49,019 --> 00:27:53,679
the velocity of that is quite staggering

00:27:51,460 --> 00:27:55,690
for somebody who's grown up for you know

00:27:53,679 --> 00:27:58,749
25 30 years in the enterprise software

00:27:55,690 --> 00:28:01,869
business we reduce risk through

00:27:58,749 --> 00:28:03,220
incubation so we when we went to this

00:28:01,869 --> 00:28:04,960
model during this blank sheet of paper

00:28:03,220 --> 00:28:07,769
we literally started with a blank sheet

00:28:04,960 --> 00:28:10,239
of paper we built a new organization

00:28:07,769 --> 00:28:13,349
because I wasn't gonna find the skills

00:28:10,239 --> 00:28:16,450
and I wasn't gonna find the cultural

00:28:13,349 --> 00:28:18,940
receptivity in my classical IT

00:28:16,450 --> 00:28:22,619
organization to go do what we wanted to

00:28:18,940 --> 00:28:24,340
do so we built a software business I

00:28:22,619 --> 00:28:25,840
hired Dave

00:28:24,340 --> 00:28:28,029
we hired a whole bunch of talented

00:28:25,840 --> 00:28:30,629
people around Dave and we built what

00:28:28,029 --> 00:28:33,999
very much looks like a software company

00:28:30,629 --> 00:28:36,970
it has product management it has a

00:28:33,999 --> 00:28:41,859
software engineering process it doesn't

00:28:36,970 --> 00:28:43,840
look like a classical IT organization so

00:28:41,859 --> 00:28:45,940
we incubated we sort of did a start-up

00:28:43,840 --> 00:28:48,999
inside the company we proved out the

00:28:45,940 --> 00:28:51,159
technology we D risk the impacting the

00:28:48,999 --> 00:28:53,109
operational business and now we're going

00:28:51,159 --> 00:28:54,729
to put those two things together because

00:28:53,109 --> 00:28:57,279
we're now at a level where we're

00:28:54,729 --> 00:28:58,809
entirely comfortable with the model that

00:28:57,279 --> 00:29:01,869
we've built and the technology platform

00:28:58,809 --> 00:29:05,830
that we've implemented we've built a

00:29:01,869 --> 00:29:09,039
software and services culture right we

00:29:05,830 --> 00:29:12,039
think act operate like a software

00:29:09,039 --> 00:29:14,529
company that has clients we think of our

00:29:12,039 --> 00:29:15,950
business as clients for our software

00:29:14,529 --> 00:29:18,860
company

00:29:15,950 --> 00:29:20,810
we run a product management organization

00:29:18,860 --> 00:29:23,030
that interacts with line of business

00:29:20,810 --> 00:29:24,380
leaders as if they're clients in a

00:29:23,030 --> 00:29:26,870
software development process in a very

00:29:24,380 --> 00:29:30,890
agile software development process we

00:29:26,870 --> 00:29:33,380
prioritize new capability in order to

00:29:30,890 --> 00:29:35,600
prove out the model so we didn't pick

00:29:33,380 --> 00:29:37,700
off the supply chain system and try and

00:29:35,600 --> 00:29:39,110
go prove that we could rebuild that we

00:29:37,700 --> 00:29:41,210
found some interesting areas of the

00:29:39,110 --> 00:29:44,620
business where there was latent demand

00:29:41,210 --> 00:29:47,180
and we went and built those new things

00:29:44,620 --> 00:29:49,160
that could prove both helped us build

00:29:47,180 --> 00:29:51,650
out the appropriate platform but also

00:29:49,160 --> 00:29:53,420
prove the model to the business to

00:29:51,650 --> 00:29:54,970
create to validate what we were doing in

00:29:53,420 --> 00:29:57,620
the level of investment we were making

00:29:54,970 --> 00:30:01,970
and then ultimately we're going to

00:29:57,620 --> 00:30:05,510
replace the 300 applications that we

00:30:01,970 --> 00:30:07,040
have we're not going to migrate them so

00:30:05,510 --> 00:30:09,530
we're not on a path to migrate all of

00:30:07,040 --> 00:30:10,910
that legacy code we will basically walk

00:30:09,530 --> 00:30:13,700
through and figure out on a priority

00:30:10,910 --> 00:30:15,410
basis how to actually replace that with

00:30:13,700 --> 00:30:17,270
a new generation of applications and

00:30:15,410 --> 00:30:22,390
services built on top of this new

00:30:17,270 --> 00:30:22,390
platform so a few lessons learnt

00:30:22,480 --> 00:30:29,660
building an aircraft in flight is hard

00:30:27,700 --> 00:30:32,390
you've heard them all you've heard this

00:30:29,660 --> 00:30:34,250
the the you know the analogy of changing

00:30:32,390 --> 00:30:37,730
the engines on the aircraft in flight

00:30:34,250 --> 00:30:40,250
that's hard right we literally built the

00:30:37,730 --> 00:30:42,290
aircraft in flight so we were working

00:30:40,250 --> 00:30:43,970
with the business building new line of

00:30:42,290 --> 00:30:47,720
business capability while we were

00:30:43,970 --> 00:30:49,370
building the platform underneath and so

00:30:47,720 --> 00:30:51,500
the coordination the synchronization

00:30:49,370 --> 00:30:54,320
we're on about our third iteration of

00:30:51,500 --> 00:30:57,080
agile right trying to figure that out

00:30:54,320 --> 00:30:59,300
none of that's easy open-source is your

00:30:57,080 --> 00:31:01,520
friend if there's some missing

00:30:59,300 --> 00:31:05,960
capability in our platform today first

00:31:01,520 --> 00:31:08,180
place we go look is github right we

00:31:05,960 --> 00:31:10,010
don't go talk to a vendor we go don't

00:31:08,180 --> 00:31:11,810
don't don't don't go talk to Oracle we

00:31:10,010 --> 00:31:13,460
don't go talk to Microsoft we don't go

00:31:11,810 --> 00:31:15,680
talk to any you know anybody who wants

00:31:13,460 --> 00:31:18,530
to charge us a licensing fee we go look

00:31:15,680 --> 00:31:22,820
on github and we see which which of the

00:31:18,530 --> 00:31:24,440
projects has the best velocity has the

00:31:22,820 --> 00:31:26,930
most people involved seems to have the

00:31:24,440 --> 00:31:28,640
highest quality and then we pick and

00:31:26,930 --> 00:31:30,260
choose the components that we need from

00:31:28,640 --> 00:31:32,510
our architecture the entire arc

00:31:30,260 --> 00:31:33,890
we've built over the last James will

00:31:32,510 --> 00:31:35,420
hate me saying this because they're

00:31:33,890 --> 00:31:36,890
trying to sell a platform but the entire

00:31:35,420 --> 00:31:39,380
architecture we've built over the last

00:31:36,890 --> 00:31:41,060
18 months is entirely your open source

00:31:39,380 --> 00:31:48,110
we're not paying a licensing fee to

00:31:41,060 --> 00:31:51,200
anybody agile is a mindset not a process

00:31:48,110 --> 00:31:52,580
right so you have to have a process and

00:31:51,200 --> 00:31:55,400
like I said we run about our third

00:31:52,580 --> 00:31:58,100
iteration of the process but actually

00:31:55,400 --> 00:32:00,350
it's a way of thinking and one of the

00:31:58,100 --> 00:32:04,070
biggest challenges is actually getting

00:32:00,350 --> 00:32:06,200
people to think in an agile way whether

00:32:04,070 --> 00:32:08,420
it's agile or whether it's lean and

00:32:06,200 --> 00:32:10,700
Kanban right it's just a different way

00:32:08,420 --> 00:32:13,520
of thinking about the world self you

00:32:10,700 --> 00:32:16,160
know we're we're pretty far down the

00:32:13,520 --> 00:32:19,460
road of the cultural adaptation to

00:32:16,160 --> 00:32:21,500
things like self-organizing teams you

00:32:19,460 --> 00:32:22,850
know the old toyota way model of the

00:32:21,500 --> 00:32:24,530
person working on the factory floor

00:32:22,850 --> 00:32:27,200
being able to press the red button and

00:32:24,530 --> 00:32:28,850
Drew and stop the production line that's

00:32:27,200 --> 00:32:32,510
the culture we want to build if you see

00:32:28,850 --> 00:32:33,950
a problem you highlight the problem we

00:32:32,510 --> 00:32:35,480
get everybody who needs to be in a room

00:32:33,950 --> 00:32:38,150
together fix the problem and then we

00:32:35,480 --> 00:32:39,860
move on right you have to build that's a

00:32:38,150 --> 00:32:42,560
very different type of culture for an IT

00:32:39,860 --> 00:32:44,660
organization software companies lots of

00:32:42,560 --> 00:32:47,300
software companies get that enterprise

00:32:44,660 --> 00:32:49,160
IT typically doesn't and then automation

00:32:47,300 --> 00:32:51,140
is not automatic right you really have

00:32:49,160 --> 00:32:53,050
to work hard because the natural

00:32:51,140 --> 00:32:56,600
tendency is that when something's broken

00:32:53,050 --> 00:32:58,100
that we apply human resource to fix the

00:32:56,600 --> 00:32:59,540
problem instead of actually stepping

00:32:58,100 --> 00:33:02,150
back for a saying and saying okay

00:32:59,540 --> 00:33:03,790
in the future how would we automate the

00:33:02,150 --> 00:33:06,680
solution to that problem

00:33:03,790 --> 00:33:08,330
we actually patch with human beings and

00:33:06,680 --> 00:33:09,860
that's just because that's the fastest

00:33:08,330 --> 00:33:11,690
easiest thing to do at the time instead

00:33:09,860 --> 00:33:12,680
of doing the deeper thinking to actually

00:33:11,690 --> 00:33:14,870
figure out what's the long-term

00:33:12,680 --> 00:33:16,880
automated solution that prevents us from

00:33:14,870 --> 00:33:19,460
having that problem in the future so

00:33:16,880 --> 00:33:23,720
that's a another cultural adaptation we

00:33:19,460 --> 00:33:30,140
live by this sort of mantra right fail

00:33:23,720 --> 00:33:31,700
learn adapt repeat that's the only way

00:33:30,140 --> 00:33:33,460
this can work because we're not we

00:33:31,700 --> 00:33:36,740
didn't get everything right on day one

00:33:33,460 --> 00:33:39,380
right we were taking big risks the only

00:33:36,740 --> 00:33:42,200
thing I ask of the team is that we get

00:33:39,380 --> 00:33:43,770
better as we move forward and the only

00:33:42,200 --> 00:33:45,960
way you can do it is by implementing

00:33:43,770 --> 00:33:48,000
this type of philosophy which is we're

00:33:45,960 --> 00:33:49,890
going to fail but we're going to learn

00:33:48,000 --> 00:33:51,840
from those failures we're then going to

00:33:49,890 --> 00:33:54,060
figure out how to automate our way out

00:33:51,840 --> 00:33:55,200
of those problems in the future and then

00:33:54,060 --> 00:33:56,940
we're going to repeat the process we're

00:33:55,200 --> 00:33:58,200
going to do the next thing in the cycle

00:33:56,940 --> 00:33:59,640
and we're going to repeat until we get

00:33:58,200 --> 00:34:03,770
better and better and better and

00:33:59,640 --> 00:34:06,450
continuously improve as an organization

00:34:03,770 --> 00:34:08,210
hate to do this because you know but if

00:34:06,450 --> 00:34:11,159
any of you actually want to come join us

00:34:08,210 --> 00:34:14,669
climbing these mountains you're welcome

00:34:11,159 --> 00:34:18,000
to talk to Dave or myself we have

00:34:14,669 --> 00:34:19,290
openings for very talented people it's

00:34:18,000 --> 00:34:24,300
probably inappropriate of me to say that

00:34:19,290 --> 00:34:26,409
but I have this stage and with that I'd

00:34:24,300 --> 00:34:31,948
like to thank you very much

00:34:26,409 --> 00:34:31,948
[Applause]

00:34:34,710 --> 00:34:40,999

YouTube URL: https://www.youtube.com/watch?v=1C-lnPDK3vA


