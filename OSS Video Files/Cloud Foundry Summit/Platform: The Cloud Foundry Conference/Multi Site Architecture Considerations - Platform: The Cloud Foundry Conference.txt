Title: Multi Site Architecture Considerations - Platform: The Cloud Foundry Conference
Publication date: 2013-11-22
Playlist: Platform: The Cloud Foundry Conference
Description: 
	Multi Site Architecture Considerations (Lightning Talk)
Michael Behrendt, Senior Technical Staff Member, Cloud & Smarter Infrastructure CTO Office, IBM
Platform: The Cloud Foundry Conference (http://www.platformcf.com) September 8-9, 2013
Captions: 
	00:00:00,870 --> 00:00:03,979
[Music]

00:00:06,589 --> 00:00:11,580
so I want to share for the next ten

00:00:09,690 --> 00:00:15,210
minutes some considerations we developed

00:00:11,580 --> 00:00:18,150
within IBM or IBM over the last couple

00:00:15,210 --> 00:00:20,160
of weeks of times already during various

00:00:18,150 --> 00:00:21,900
presentations today running Cloud

00:00:20,160 --> 00:00:24,150
Foundry across multiple sites multiple

00:00:21,900 --> 00:00:27,119
regions is something that's of interest

00:00:24,150 --> 00:00:29,250
to several communities out there we've

00:00:27,119 --> 00:00:32,460
seen a couple of case studies on the web

00:00:29,250 --> 00:00:34,290
where people looked at various aspects

00:00:32,460 --> 00:00:35,790
of it and also we have an interest of

00:00:34,290 --> 00:00:38,850
running Cloud Foundry and services

00:00:35,790 --> 00:00:43,200
across multiple regions so we looked at

00:00:38,850 --> 00:00:45,510
what does it mean to run a cloud foundry

00:00:43,200 --> 00:00:48,719
across multiple sites it's not a solved

00:00:45,510 --> 00:00:50,219
problem yet we are looking very much for

00:00:48,719 --> 00:00:53,100
input from the community for your

00:00:50,219 --> 00:00:55,199
experience on on learnings or

00:00:53,100 --> 00:00:57,329
recommendations of how we can take this

00:00:55,199 --> 00:01:00,329
forward so first of all what are the two

00:00:57,329 --> 00:01:01,859
main objectives why multi-site support

00:01:00,329 --> 00:01:03,600
for shell foundry or running cloud

00:01:01,859 --> 00:01:05,820
foundry across multiple sites is an

00:01:03,600 --> 00:01:08,250
important topic first one obviously is

00:01:05,820 --> 00:01:10,470
improve the redundancy of cloud foundry

00:01:08,250 --> 00:01:12,420
itself like the management componentry

00:01:10,470 --> 00:01:14,970
cloud controller health manage and so

00:01:12,420 --> 00:01:17,700
forth but also improving specifically

00:01:14,970 --> 00:01:19,710
the redundancy of applications because I

00:01:17,700 --> 00:01:23,549
want to run applications across multiple

00:01:19,710 --> 00:01:26,070
regions to to be able to tolerate the

00:01:23,549 --> 00:01:28,140
outage of one particular region the

00:01:26,070 --> 00:01:31,200
other important aspect is to control the

00:01:28,140 --> 00:01:32,759
location of apps and services feed for

00:01:31,200 --> 00:01:33,900
latency reasons I have a certain

00:01:32,759 --> 00:01:35,729
customer said I want to serve

00:01:33,900 --> 00:01:38,610
specifically and I want to deploy my app

00:01:35,729 --> 00:01:40,650
into a region that is close to that

00:01:38,610 --> 00:01:42,150
customer or into a data center that's

00:01:40,650 --> 00:01:44,610
close to the customer or for other

00:01:42,150 --> 00:01:46,950
reasons like data governance we heard

00:01:44,610 --> 00:01:50,100
some examples before data shouldn't be

00:01:46,950 --> 00:01:53,040
leaving the country and so forth so I'm

00:01:50,100 --> 00:01:54,659
what which set of components is in scope

00:01:53,040 --> 00:01:56,880
for that discussion just to touch on

00:01:54,659 --> 00:01:59,189
briefly and be heard also a couple of

00:01:56,880 --> 00:02:01,979
talks already before about that first of

00:01:59,189 --> 00:02:04,259
all the Cloud Foundry componentry itself

00:02:01,979 --> 00:02:06,479
like cloud controller health manager

00:02:04,259 --> 00:02:07,890
router and so forth the apps that are

00:02:06,479 --> 00:02:11,310
running on Cloud Foundry

00:02:07,890 --> 00:02:14,480
and also services that are attached to

00:02:11,310 --> 00:02:17,490
to those apps those three

00:02:14,480 --> 00:02:19,470
sets of components or categories of

00:02:17,490 --> 00:02:22,260
components needs to be looked at as we

00:02:19,470 --> 00:02:24,570
as we talk about multi-regional setup so

00:02:22,260 --> 00:02:27,810
what are those key considerations we

00:02:24,570 --> 00:02:30,510
need to think about first one support

00:02:27,810 --> 00:02:32,250
any number of sites so traditionally we

00:02:30,510 --> 00:02:33,600
often talk about data center setups

00:02:32,250 --> 00:02:36,570
where we have a primary site in the

00:02:33,600 --> 00:02:39,600
backup site in a cloud world you might

00:02:36,570 --> 00:02:41,730
have many sites 10 15 20 sites and you

00:02:39,600 --> 00:02:43,890
want to run the application across those

00:02:41,730 --> 00:02:46,680
multiple sites that gives you increased

00:02:43,890 --> 00:02:48,260
resiliency but it also serves the second

00:02:46,680 --> 00:02:52,380
objective that I talked about before

00:02:48,260 --> 00:02:54,090
which is optimizing the or controlling

00:02:52,380 --> 00:02:56,100
the location of where your application

00:02:54,090 --> 00:02:56,910
runs you might have many customers

00:02:56,100 --> 00:03:00,060
around the globe

00:02:56,910 --> 00:03:01,740
that want to use an application you want

00:03:00,060 --> 00:03:04,770
to serve all those customers with the

00:03:01,740 --> 00:03:07,490
optimal agency so you need to run your

00:03:04,770 --> 00:03:10,230
application across those multiple sites

00:03:07,490 --> 00:03:13,340
now the second point is we want to be

00:03:10,230 --> 00:03:16,020
able to tolerate the outage of any site

00:03:13,340 --> 00:03:18,090
it could be just one side that goes down

00:03:16,020 --> 00:03:20,250
it could be multiple sites this that go

00:03:18,090 --> 00:03:22,650
down we had the story from Matthew

00:03:20,250 --> 00:03:24,269
earlier today where he talked about the

00:03:22,650 --> 00:03:27,180
outage of the foundry in one particular

00:03:24,269 --> 00:03:28,890
region I'm going into a mud he reached a

00:03:27,180 --> 00:03:32,250
set of multi-site setup helps

00:03:28,890 --> 00:03:35,910
alleviating those those problems so the

00:03:32,250 --> 00:03:38,340
the obvious approach for working around

00:03:35,910 --> 00:03:40,739
the outage of one or multiple sites is

00:03:38,340 --> 00:03:42,630
you could be deploying Cloud Foundry an

00:03:40,739 --> 00:03:44,549
entire set of cloud foundry components

00:03:42,630 --> 00:03:46,950
that I talked about before into each

00:03:44,549 --> 00:03:49,560
particularly region each of them those

00:03:46,950 --> 00:03:51,360
regions would be self-contained it would

00:03:49,560 --> 00:03:53,130
be isolated in terms of failure if one

00:03:51,360 --> 00:03:55,920
of them goes down the others are not

00:03:53,130 --> 00:03:57,330
impacted in any way by the outage of the

00:03:55,920 --> 00:04:02,640
other regions and they could continue

00:03:57,330 --> 00:04:05,549
operating now if you do that the obvious

00:04:02,640 --> 00:04:07,890
question arises now do I need to I as a

00:04:05,549 --> 00:04:10,530
developer who wants to push an

00:04:07,890 --> 00:04:13,230
application need to interact with each

00:04:10,530 --> 00:04:15,570
of those sites individually and in in

00:04:13,230 --> 00:04:17,790
such a set of I would I would have to

00:04:15,570 --> 00:04:21,229
push my application into side a and side

00:04:17,790 --> 00:04:23,760
B into side C and any other application

00:04:21,229 --> 00:04:27,150
and I would also have to manually wire

00:04:23,760 --> 00:04:28,080
up the routing the global the global

00:04:27,150 --> 00:04:31,139
routing

00:04:28,080 --> 00:04:32,580
that it serves my application so that

00:04:31,139 --> 00:04:36,780
load is distributed across multiple

00:04:32,580 --> 00:04:39,150
sites so the next layer of abstraction I

00:04:36,780 --> 00:04:40,620
can think about is do we need something

00:04:39,150 --> 00:04:43,139
and we don't have that today so I want

00:04:40,620 --> 00:04:45,240
to put it out as a discussion topic for

00:04:43,139 --> 00:04:48,180
today and and also tomorrow and going

00:04:45,240 --> 00:04:50,580
forward do we need some kind of cross

00:04:48,180 --> 00:04:52,590
management function for the developer it

00:04:50,580 --> 00:04:55,319
would have the benefit of the developer

00:04:52,590 --> 00:04:57,990
can see all his apps across multiple

00:04:55,319 --> 00:05:01,469
sites likes to a CF apps and he gets

00:04:57,990 --> 00:05:04,710
them all apps across all sites he can

00:05:01,469 --> 00:05:07,229
push and update apps into dedicated

00:05:04,710 --> 00:05:09,469
regions so I can select the region the

00:05:07,229 --> 00:05:12,569
specific region I want to have an app

00:05:09,469 --> 00:05:14,159
pushed into and I can do the same thing

00:05:12,569 --> 00:05:16,199
for services because I might want to

00:05:14,159 --> 00:05:18,750
instantiate a service in a region that's

00:05:16,199 --> 00:05:21,479
close to the app maybe because of

00:05:18,750 --> 00:05:24,449
latency reasons or other reasons when I

00:05:21,479 --> 00:05:28,020
do that I need a mechanism that allows

00:05:24,449 --> 00:05:31,500
me to automatically configure the global

00:05:28,020 --> 00:05:33,180
routing layer with with the information

00:05:31,500 --> 00:05:36,180
about the apps trying various regions I

00:05:33,180 --> 00:05:39,800
might push an app into side a and into

00:05:36,180 --> 00:05:43,169
side B both deployments should be

00:05:39,800 --> 00:05:46,469
available via one at the same globally

00:05:43,169 --> 00:05:48,509
available URL so we would need to have a

00:05:46,469 --> 00:05:50,940
hooking basically from such a cross

00:05:48,509 --> 00:05:52,319
regional management layer into the

00:05:50,940 --> 00:05:56,219
global routing layer so it gets

00:05:52,319 --> 00:06:01,199
configured automatically now the next

00:05:56,219 --> 00:06:03,930
question is if I can do that but I want

00:06:01,199 --> 00:06:06,810
to be able maybe to instantiate or

00:06:03,930 --> 00:06:09,449
deploy an app into site a I want to

00:06:06,810 --> 00:06:12,210
deploy the same app into site B and I

00:06:09,449 --> 00:06:15,599
want to have both of those apps connect

00:06:12,210 --> 00:06:19,589
to a service instance that only exists

00:06:15,599 --> 00:06:21,389
once maybe inside B with a setup that I

00:06:19,589 --> 00:06:23,190
described earlier I would have

00:06:21,389 --> 00:06:26,400
challenges with that because

00:06:23,190 --> 00:06:28,889
Cloud Foundry inside a only knows about

00:06:26,400 --> 00:06:31,560
apps and services inside a and the same

00:06:28,889 --> 00:06:35,419
is true for site B so I would need to

00:06:31,560 --> 00:06:38,849
share knowledge about service instances

00:06:35,419 --> 00:06:40,950
across across regions so I can do the

00:06:38,849 --> 00:06:43,680
binding between apps and

00:06:40,950 --> 00:06:47,100
services across regions so there's the

00:06:43,680 --> 00:06:49,440
thinking of do we maybe need some some

00:06:47,100 --> 00:06:50,880
shared data data about services data

00:06:49,440 --> 00:06:53,850
about apps that can be shared across

00:06:50,880 --> 00:06:58,650
those regions so we can realize those

00:06:53,850 --> 00:07:01,110
scenarios that I just described from a

00:06:58,650 --> 00:07:04,110
technology perspective I think there are

00:07:01,110 --> 00:07:05,820
various ways to to realize that also

00:07:04,110 --> 00:07:07,800
here would be very interested in the

00:07:05,820 --> 00:07:09,570
feedback from the community is there

00:07:07,800 --> 00:07:12,090
maybe opportunity to use linked data so

00:07:09,570 --> 00:07:13,950
we can connect those cloud controller

00:07:12,090 --> 00:07:16,890
databases sitting at each of the regions

00:07:13,950 --> 00:07:22,560
with each other to develop to get a

00:07:16,890 --> 00:07:27,990
federated view so this is just a very

00:07:22,560 --> 00:07:30,500
brief summary of the considerations that

00:07:27,990 --> 00:07:33,000
that we are making around your family

00:07:30,500 --> 00:07:35,490
would be very interested in your

00:07:33,000 --> 00:07:37,770
feedback in in discussions with you over

00:07:35,490 --> 00:07:39,810
the next coming days and in going

00:07:37,770 --> 00:07:41,760
forward and it's a very last comment and

00:07:39,810 --> 00:07:43,200
we are hiring around or I thought some

00:07:41,760 --> 00:07:44,640
Cloud Foundry so please feel free to

00:07:43,200 --> 00:07:48,000
reach out thank you

00:07:44,640 --> 00:07:48,000
[Applause]

00:07:52,140 --> 00:07:58,630

YouTube URL: https://www.youtube.com/watch?v=QDN1GgT47dQ


