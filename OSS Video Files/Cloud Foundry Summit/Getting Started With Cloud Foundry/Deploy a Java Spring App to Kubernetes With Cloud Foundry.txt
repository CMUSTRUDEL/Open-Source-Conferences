Title: Deploy a Java Spring App to Kubernetes With Cloud Foundry
Publication date: 2020-12-15
Playlist: Getting Started With Cloud Foundry
Description: 
	Learn how to deploy your Java application to Kubernetes!
No need to wrangle with complex infrastructure, or work with Docker. Simply deploy your Java source code to cloud infrastructure.

CF-for-K8s is an open-source cloud-native means to push your web applications. Learn more at cf-for-k8s.io.
Captions: 
	00:00:00,240 --> 00:00:04,400
hey there in this video i'm going to

00:00:03,120 --> 00:00:07,120
quickly cover

00:00:04,400 --> 00:00:09,280
what it takes to deploy your first java

00:00:07,120 --> 00:00:09,679
application to cloud foundry running

00:00:09,280 --> 00:00:12,799
over

00:00:09,679 --> 00:00:16,480
kubernetes i'm going to first

00:00:12,799 --> 00:00:20,240
clone a popular open source java

00:00:16,480 --> 00:00:23,840
code repo in this case the spring

00:00:20,240 --> 00:00:26,320
pet clinic app as you can see

00:00:23,840 --> 00:00:26,880
it contains a rather standard color

00:00:26,320 --> 00:00:31,760
phone

00:00:26,880 --> 00:00:35,840
for a java application our target cloud

00:00:31,760 --> 00:00:39,840
is a cf for kx installation running on

00:00:35,840 --> 00:00:44,239
google cloud i'm going to deploy

00:00:39,840 --> 00:00:48,160
the application by just typing cf push

00:00:44,239 --> 00:00:51,280
and providing an app name as an argument

00:00:48,160 --> 00:00:52,079
and we're off now as the deployment

00:00:51,280 --> 00:00:54,320
progresses

00:00:52,079 --> 00:00:55,360
here are a few things that i'd like to

00:00:54,320 --> 00:00:57,600
highlight first

00:00:55,360 --> 00:01:00,480
we're able to deploy without the need

00:00:57,600 --> 00:01:03,760
for any overhead on the developer

00:01:00,480 --> 00:01:06,560
what i mean by that is manifest

00:01:03,760 --> 00:01:07,040
files are optional there's no need for

00:01:06,560 --> 00:01:09,840
any

00:01:07,040 --> 00:01:10,720
yaml files or templates that you need to

00:01:09,840 --> 00:01:13,280
work with

00:01:10,720 --> 00:01:14,960
no wrangling with resources and

00:01:13,280 --> 00:01:17,840
allocation of any kind

00:01:14,960 --> 00:01:18,560
no need to interact with the kubernetes

00:01:17,840 --> 00:01:21,439
api

00:01:18,560 --> 00:01:22,159
basically no complex launch sequence

00:01:21,439 --> 00:01:25,680
just

00:01:22,159 --> 00:01:28,640
a simple cf push

00:01:25,680 --> 00:01:29,680
secondly cloud foundry is able to detect

00:01:28,640 --> 00:01:32,640
the application

00:01:29,680 --> 00:01:34,880
compile the code and create an immutable

00:01:32,640 --> 00:01:36,320
container image thanks to the use of

00:01:34,880 --> 00:01:39,680
build packs

00:01:36,320 --> 00:01:41,680
specifically paccato paquetto is an

00:01:39,680 --> 00:01:43,360
implementation of the cloud native

00:01:41,680 --> 00:01:47,439
buildback specification

00:01:43,360 --> 00:01:50,000
used by the cf for gates project

00:01:47,439 --> 00:01:51,920
the build packs take the source code

00:01:50,000 --> 00:01:52,640
progress through a few stages such as

00:01:51,920 --> 00:01:56,159
detect

00:01:52,640 --> 00:01:56,799
analyze build and export collectively

00:01:56,159 --> 00:02:00,159
known as

00:01:56,799 --> 00:02:01,920
a life cycle now at the end an oci

00:02:00,159 --> 00:02:04,320
compliant container image

00:02:01,920 --> 00:02:06,840
is available which is deployed to the

00:02:04,320 --> 00:02:09,200
infrastructure that's running

00:02:06,840 --> 00:02:10,479
kubernetes now the build has completed

00:02:09,200 --> 00:02:13,840
let's quickly

00:02:10,479 --> 00:02:15,680
test the installation we can do this by

00:02:13,840 --> 00:02:16,879
copying the route that has been

00:02:15,680 --> 00:02:20,720
generated

00:02:16,879 --> 00:02:25,120
and pasting it into a browser then

00:02:20,720 --> 00:02:25,120
the web application is up and running

00:02:25,270 --> 00:02:30,080
[Music]

00:02:26,879 --> 00:02:30,879
remember the same cloud foundry dev

00:02:30,080 --> 00:02:34,239
experience

00:02:30,879 --> 00:02:37,280
is a reality for any people rather

00:02:34,239 --> 00:02:40,800
many of the popular languages and

00:02:37,280 --> 00:02:43,760
frameworks that are out there installing

00:02:40,800 --> 00:02:45,040
cloud foundry on a kubernetes cluster is

00:02:43,760 --> 00:02:48,800
possible thanks to

00:02:45,040 --> 00:02:51,920
cf for kids which is a community driven

00:02:48,800 --> 00:02:53,680
open source project that provides a

00:02:51,920 --> 00:02:56,560
cloud foundry abstraction over

00:02:53,680 --> 00:02:58,959
kubernetes infrastructure

00:02:56,560 --> 00:03:00,080
we do intend to add a lot more content

00:02:58,959 --> 00:03:02,720
on how to deploy

00:03:00,080 --> 00:03:04,319
apps developed using different languages

00:03:02,720 --> 00:03:06,480
and frameworks

00:03:04,319 --> 00:03:08,319
if there's anything specific that you

00:03:06,480 --> 00:03:10,800
would like to see please let us know in

00:03:08,319 --> 00:03:12,720
the comments below

00:03:10,800 --> 00:03:14,239
the cloud foundry community can be

00:03:12,720 --> 00:03:18,879
reached on slack

00:03:14,239 --> 00:03:20,959
at slack.cloudfoundry.org

00:03:18,879 --> 00:03:23,120
do join us there and get any of your

00:03:20,959 --> 00:03:27,120
queries clarified

00:03:23,120 --> 00:03:27,120

YouTube URL: https://www.youtube.com/watch?v=CD1MDrd0e-o


