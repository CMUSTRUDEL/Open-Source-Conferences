Title: A Bit about Cloud Foundry, A Byte About Eirini - Julz Skupnjak, IBM & Georgi Dankov, SAP
Publication date: 2020-06-20
Playlist: Cloud Foundry Summit NA 2020 - Virtual
Description: 
	A Bit about Cloud Foundry, A Byte About Eirini - Julz Skupnjak, IBM & Georgi Dankov, SAP 

For more info: https://www.cloudfoundry.org/ 

The Eirini project is bringing Kubernetes as a container scheduler to the Cloud Foundry Application Runtime. In other words: the `cf push` developer experience we all love, with the most popular container orchestrator under the covers.This session takes you on a whirlwind tour of the why and how of eirini. What is the latest state (v1.0+ released, v3 support, and more), how can you use it, what are we working on next. And if you want to know how you get the latest and greatest Eirini running on your Kubernetes cluster, come and join the talk. Spoiler alert: The latest Eirini is now avaialbe on KubeCF and CF-for-K8s.
Captions: 
	00:00:00,030 --> 00:00:05,569
hello everyone my name is Jules I'm

00:00:02,669 --> 00:00:10,290
working for IBM and I am here today with

00:00:05,569 --> 00:00:13,559
Gary Danko from sa P so we want to talk

00:00:10,290 --> 00:00:17,690
today a bit about Cloud Foundry and

00:00:13,559 --> 00:00:22,199
abide about irony but before we start I

00:00:17,690 --> 00:00:25,320
want to talk about the human being the

00:00:22,199 --> 00:00:29,220
humans are highly adaptable we adapt to

00:00:25,320 --> 00:00:31,669
our living conditions wherever needed we

00:00:29,220 --> 00:00:34,050
live in the highest areas of the world

00:00:31,669 --> 00:00:36,149
but we also live on the water

00:00:34,050 --> 00:00:39,120
for example the Bajau people are living

00:00:36,149 --> 00:00:42,120
on the water and are able to hold one's

00:00:39,120 --> 00:00:44,850
breath for more than 10 minutes and hunt

00:00:42,120 --> 00:00:48,030
up to 200 feet underwater without any

00:00:44,850 --> 00:00:51,360
means but we also live in places where

00:00:48,030 --> 00:00:51,930
water is rare deserts the hottest areas

00:00:51,360 --> 00:00:54,510
in the world

00:00:51,930 --> 00:00:57,840
and of course we live in the cold as

00:00:54,510 --> 00:01:01,079
there is in the world even at this time

00:00:57,840 --> 00:01:03,840
of the pandemic recurring living we had

00:01:01,079 --> 00:01:06,840
that quickly and completely changed our

00:01:03,840 --> 00:01:09,720
lifestyle humans involved over time

00:01:06,840 --> 00:01:11,909
invented technologies and today we are

00:01:09,720 --> 00:01:14,670
able to see our loved ones even without

00:01:11,909 --> 00:01:17,369
meeting in person that's why we can do

00:01:14,670 --> 00:01:21,000
this summit in this way we do it right

00:01:17,369 --> 00:01:23,430
now digital a digital CF summit remember

00:01:21,000 --> 00:01:26,759
back 20 years that probably wouldn't be

00:01:23,430 --> 00:01:31,020
possible and just as the human beings

00:01:26,759 --> 00:01:33,450
claw Foundry is highly adaptable to when

00:01:31,020 --> 00:01:38,009
we think just about the backend

00:01:33,450 --> 00:01:40,829
scheduler years ago we had two DEA that

00:01:38,009 --> 00:01:44,759
droplet execution agent and we rewrote

00:01:40,829 --> 00:01:47,250
it with golang and a new back-end was

00:01:44,759 --> 00:01:51,090
called Diego and with the rise of

00:01:47,250 --> 00:01:53,340
kubernetes new projects popped up and if

00:01:51,090 --> 00:01:57,750
we remember back just one year from now

00:01:53,340 --> 00:02:00,420
there was just SCF and irony but during

00:01:57,750 --> 00:02:02,850
the last year a lot of happens how the

00:02:00,420 --> 00:02:05,880
project team started to adapt given a

00:02:02,850 --> 00:02:09,479
this - we have CF operator and the coop

00:02:05,880 --> 00:02:11,910
CF project we have CFO gates we have the

00:02:09,479 --> 00:02:14,310
copy team that containerized o'clock

00:02:11,910 --> 00:02:17,220
trolla the networking team integrates

00:02:14,310 --> 00:02:19,610
sto into Clefairy and there's Capek

00:02:17,220 --> 00:02:22,980
which will be used for staging in future

00:02:19,610 --> 00:02:25,890
and it's already used in CFO gates and

00:02:22,980 --> 00:02:28,950
there is the logging team too so all

00:02:25,890 --> 00:02:32,970
these projects are working to adapt the

00:02:28,950 --> 00:02:35,370
new world of cuban areas during that

00:02:32,970 --> 00:02:37,380
time we in every need didn't stop

00:02:35,370 --> 00:02:40,970
improving and adding new features to the

00:02:37,380 --> 00:02:43,440
project so let's talk about what's new I

00:02:40,970 --> 00:02:45,960
mean you reached its first major

00:02:43,440 --> 00:02:49,860
milestone which was releasing version

00:02:45,960 --> 00:02:52,200
1.0 that means we're confident that

00:02:49,860 --> 00:02:55,980
every nice table and radical production

00:02:52,200 --> 00:02:58,200
news right after shipping 1.0 we

00:02:55,980 --> 00:03:01,160
immediately started working on bringing

00:02:58,200 --> 00:03:03,390
several reasonably teen husbands and

00:03:01,160 --> 00:03:07,740
implementing some features that we have

00:03:03,390 --> 00:03:10,410
to skip when washing to 1.0 i've also

00:03:07,740 --> 00:03:14,700
worked hard to add support for version 3

00:03:10,410 --> 00:03:17,430
of the 4 controller api this includes

00:03:14,700 --> 00:03:21,540
things like rolling up rotates running

00:03:17,430 --> 00:03:24,090
tasks sidecars and so on we are making

00:03:21,540 --> 00:03:27,990
good progress there and we expect to be

00:03:24,090 --> 00:03:31,650
downloaded soon and of course we've done

00:03:27,990 --> 00:03:34,470
other various improvements like adding

00:03:31,650 --> 00:03:38,010
support for pushing docker images which

00:03:34,470 --> 00:03:41,700
is especially important for the kpac

00:03:38,010 --> 00:03:44,250
integration we've defined sensible roles

00:03:41,700 --> 00:03:46,920
and post security policies which

00:03:44,250 --> 00:03:49,739
improved up scheduling which includes

00:03:46,920 --> 00:03:52,890
setting things like anti affinities and

00:03:49,739 --> 00:03:55,920
insertion budgets we've added

00:03:52,890 --> 00:03:58,800
customization to up pots based on copy

00:03:55,920 --> 00:04:01,050
annotations in order to identify and

00:03:58,800 --> 00:04:05,430
script ups which is particularly useful

00:04:01,050 --> 00:04:06,150
for Prometheus and with approved

00:04:05,430 --> 00:04:08,970
security

00:04:06,150 --> 00:04:10,610
none of the ring components require root

00:04:08,970 --> 00:04:14,090
permissions to learn any more

00:04:10,610 --> 00:04:17,130
of course we've added many other things

00:04:14,090 --> 00:04:21,239
but in addition to adding new features

00:04:17,130 --> 00:04:22,890
we've also decided to remove so we

00:04:21,239 --> 00:04:25,470
wanted to make a ring even more cube

00:04:22,890 --> 00:04:28,140
native and easier to use

00:04:25,470 --> 00:04:33,030
in order to do that we have to start by

00:04:28,140 --> 00:04:35,670
making it stand alone in generic back

00:04:33,030 --> 00:04:37,890
when they were only consumed by SEF we

00:04:35,670 --> 00:04:41,450
became a bit coupled to it without even

00:04:37,890 --> 00:04:44,790
realizing it this caused two main issues

00:04:41,450 --> 00:04:47,010
it was hard for us to maintain our share

00:04:44,790 --> 00:04:49,710
pipelines because they all contain the

00:04:47,010 --> 00:04:54,570
hole called foundry deployment not just

00:04:49,710 --> 00:05:00,360
even it was hard for others to consume

00:04:54,570 --> 00:05:03,300
us like c4 casing keeps here so we took

00:05:00,360 --> 00:05:05,400
a step back and decided to completely

00:05:03,300 --> 00:05:09,630
decoupling you from the way it was being

00:05:05,400 --> 00:05:13,080
deployed it has made our API cleaner and

00:05:09,630 --> 00:05:18,080
easier to consume and also simplified

00:05:13,080 --> 00:05:22,260
our day-to-day work as a boss but also

00:05:18,080 --> 00:05:24,480
decided to drop support for everything

00:05:22,260 --> 00:05:27,120
that is not directly required by irony

00:05:24,480 --> 00:05:30,150
or anything that does not make sense for

00:05:27,120 --> 00:05:34,169
us to own first of all we no longer

00:05:30,150 --> 00:05:37,380
provide support for SEF we used to ship

00:05:34,169 --> 00:05:39,630
a fool ACF plus EV any help chart but we

00:05:37,380 --> 00:05:42,660
dropped it because ACF is deprecated now

00:05:39,630 --> 00:05:44,100
and it wouldn't make sense for e we need

00:05:42,660 --> 00:05:46,970
to contain the hope of all the

00:05:44,100 --> 00:05:50,000
deployment in his release

00:05:46,970 --> 00:05:52,710
we also no longer owned this service

00:05:50,000 --> 00:05:55,740
which we used as a custom private agency

00:05:52,710 --> 00:05:58,430
since call control now supports key back

00:05:55,740 --> 00:06:02,250
and that's what seafood CFO gates is

00:05:58,430 --> 00:06:05,490
using exclusively we no longer see the

00:06:02,250 --> 00:06:07,980
need to keep the service round this

00:06:05,490 --> 00:06:11,700
moment cube CF still doesn't fully

00:06:07,980 --> 00:06:13,380
support K back as far as I know and they

00:06:11,700 --> 00:06:16,650
need to have a big service deployed to

00:06:13,380 --> 00:06:18,870
tyranny for this reason they kindly

00:06:16,650 --> 00:06:23,400
accepted on this service from this point

00:06:18,870 --> 00:06:25,890
forward we also plan on removing some of

00:06:23,400 --> 00:06:29,280
Elena's own components which are no

00:06:25,890 --> 00:06:31,770
longer needed for example we had a job

00:06:29,280 --> 00:06:34,560
that was responsible for moving secrets

00:06:31,770 --> 00:06:36,930
across namespaces this was a hockey

00:06:34,560 --> 00:06:38,570
workaround that needed at some point but

00:06:36,930 --> 00:06:40,940
now we expect

00:06:38,570 --> 00:06:44,350
whatever is applying CF will take care

00:06:40,940 --> 00:06:47,380
of all of this we also have a component

00:06:44,350 --> 00:06:50,240
responsible for folding locks to doppler

00:06:47,380 --> 00:06:52,790
but since both see for kids and keeps EF

00:06:50,240 --> 00:06:55,970
have other solutions for logging ours is

00:06:52,790 --> 00:07:01,010
not used by anyone and will just promote

00:06:55,970 --> 00:07:03,770
it speaking of dropping things the next

00:07:01,010 --> 00:07:05,750
thing on the chopping board is hell we

00:07:03,770 --> 00:07:08,390
really want to be as easy to the post

00:07:05,750 --> 00:07:11,930
possible and we don't believe that using

00:07:08,390 --> 00:07:14,120
him gives us any advantages we found out

00:07:11,930 --> 00:07:16,750
that sometimes him even gets in the way

00:07:14,120 --> 00:07:19,220
and makes a change harder

00:07:16,750 --> 00:07:21,950
therefore we plan on shipping a plain

00:07:19,220 --> 00:07:25,520
classic combo that you can deploy with

00:07:21,950 --> 00:07:28,790
cuticles cut off apply that way there

00:07:25,520 --> 00:07:30,110
wouldn't be any AMA templating and the

00:07:28,790 --> 00:07:35,540
only way to configure everything would

00:07:30,110 --> 00:07:38,300
be to a config mop and a secret and last

00:07:35,540 --> 00:07:40,250
but definitely not least I've been

00:07:38,300 --> 00:07:44,450
talking about using CDs for a very long

00:07:40,250 --> 00:07:46,820
time tid stands for custom dissolves

00:07:44,450 --> 00:07:49,270
definition which gives you the freedom

00:07:46,820 --> 00:07:53,060
in communities to define your own custom

00:07:49,270 --> 00:07:55,940
resources consume them and execute

00:07:53,060 --> 00:07:58,420
custom code when they get created or

00:07:55,940 --> 00:08:01,340
changed for example instead of

00:07:58,420 --> 00:08:05,600
controller calling panini using a rest

00:08:01,340 --> 00:08:09,170
endpoint control would create or update

00:08:05,600 --> 00:08:12,230
a CAG which every knee on the other hand

00:08:09,170 --> 00:08:15,110
will consume without knowing what

00:08:12,230 --> 00:08:16,970
created it in the first place and every

00:08:15,110 --> 00:08:19,970
knee would keep the stocks of the CID up

00:08:16,970 --> 00:08:23,540
to date and CC will query that status

00:08:19,970 --> 00:08:26,360
without Monaco dated communicating

00:08:23,540 --> 00:08:28,010
through CDs instead of rest helps with

00:08:26,360 --> 00:08:29,900
the coupling of different components you

00:08:28,010 --> 00:08:33,020
don't know who's creating and updating

00:08:29,900 --> 00:08:35,930
the resources and you don't care the

00:08:33,020 --> 00:08:37,700
actual resource is your contract this

00:08:35,930 --> 00:08:41,690
also makes the API boundaries much

00:08:37,700 --> 00:08:44,900
cleaner and since us how cabinets mostly

00:08:41,690 --> 00:08:49,030
works internally anyway it seems like if

00:08:44,900 --> 00:08:49,030
you want to go native this is available

00:08:50,460 --> 00:08:56,530
so what's next they go for the next

00:08:53,740 --> 00:08:59,140
month's is to continue making CF more

00:08:56,530 --> 00:09:02,680
and more kubernetes native and make it

00:08:59,140 --> 00:09:05,020
easy deployable for everyone for the CF

00:09:02,680 --> 00:09:06,610
community but also make it available in

00:09:05,020 --> 00:09:08,950
a way that the rest of the communities

00:09:06,610 --> 00:09:12,970
community can easily try and deploy it

00:09:08,950 --> 00:09:15,490
the ultimate goal will be to get CF even

00:09:12,970 --> 00:09:17,890
to be the go-to platform on top of

00:09:15,490 --> 00:09:21,070
kubernetes but that is a goal that is

00:09:17,890 --> 00:09:23,800
beyond the current goals first we want

00:09:21,070 --> 00:09:26,980
to make it easy available for really

00:09:23,800 --> 00:09:29,440
everyone and now you might think hey if

00:09:26,980 --> 00:09:32,050
we adopt kubernetes and everything is

00:09:29,440 --> 00:09:34,450
becoming kubernetes native and it's

00:09:32,050 --> 00:09:36,850
going to be the main scheduler for cloud

00:09:34,450 --> 00:09:39,610
foundry and there's tomorrow a new

00:09:36,850 --> 00:09:44,590
technology that's popping up what will

00:09:39,610 --> 00:09:46,360
happen then so nothing we do what we

00:09:44,590 --> 00:09:49,150
always do we adapt to the new conditions

00:09:46,360 --> 00:09:51,700
and keep the CF push experience no

00:09:49,150 --> 00:09:56,560
matter what technology we run and of

00:09:51,700 --> 00:09:58,570
course we evolve CF at the same time so

00:09:56,560 --> 00:10:00,760
that's all we got if you have any

00:09:58,570 --> 00:10:02,970
questions we are super happy to answer

00:10:00,760 --> 00:10:02,970

YouTube URL: https://www.youtube.com/watch?v=Xw6-wzHYmfE


