Title: "The Makings of a Modern Application Architecture" - Sam Ramji Keynote
Publication date: 2016-03-18
Playlist: Cloud Foundry CEO, Sam Ramji
Description: 
	Watch more from the O'Reilly Software Architecture Conference: http://goo.gl/lXpXnG

It wasn’t too long ago that artisans, bathed in the glow of molten metal, forged parts that would go on to make up bigger, more powerful machines. Today, we call those artisans developers. Instead of metal, they use bits and bytes in the cloud to forge a modern application architecture.

It’s an architecture that supports public, private and hybrid application deployment. One that enables users and developers to move their applications wherever they need to go. And it’s built on a growing, vibrant ecosystem.

In this talk, I’ll give you a look at the technologies driving this new level of efficiency for application developers (tech like containers, Docker, Kubernetes, OpenStack, Cloud Foundry and social coding tools like GitHub). And I’ll explain why many prominent members of the Fortune 500 are building their futures on this modern application architecture.

About Sam Ramji (Cloud Foundry Foundation):
Sam Ramji is CEO of the Cloud Foundry Foundation. He has over 20 years of industry experience in enterprise software, product development, and open source strategy.

He previously served as Vice President of Strategy of Apigee, one of the 5 fastest-growing software companies in the Deloitte Fast 500, and is a member of their Board of Advisors. He joined Apigee from Microsoft, where he was responsible for driving Microsoft’s worldwide open source strategy. He drove many of Microsoft’s contributions to open source and its shift to embrace open source technologies like PHP. He was a leader in BEA’s move into EAI/ESB as a founding member of the AquaLogic product team.

Mr. Ramji has built large-scale enterprise and Web-scale applications, leading the Ofoto engineering team through its acquisition by Kodak. His other experience includes leading engineering teams to build large-scale applications on open source software, as well as hands-on development of client, client-server and distributed applications on Unix, Windows and Macintosh at prior companies. He is a Member of the Institute for Generative Leadership. Sam holds a Bachelor of Science degree in Cognitive Science from the University of California at San Diego.

His work has been covered in Wired and many other industry publications.

For more information, visit: http://oreil.ly/1Cyt9nt
Software architecture is a massive multidisciplinary subject, covering many roles and responsibilities, which makes it challenging to teach because so much context is required for every subject. It's also a fast-moving discipline, where entire suites of best practices become obsolete overnight.

The O'Reilly Software Architecture Conference is a new event designed to provide the necessary professional training that software architects and aspiring software architects need to succeed. A unique event, it covers the full scope of a software architect's job, from IT to leadership and business skills. It also provides a forum for networking and hearing what other professionals have learned in real-world experiences.

Stay Connected to O'Reilly Media by Email - http://goo.gl/YZSWbO
Follow O'Reilly Media:
http://plus.google.com/+oreillymedia
https://www.facebook.com/OReilly
https://twitter.com/OReillyMedia
Captions: 
	00:00:04,150 --> 00:00:09,830
good morning so it's true I started

00:00:08,270 --> 00:00:12,380
programming when I was nine I got a

00:00:09,830 --> 00:00:14,360
degree in cognitive science in 94 and in

00:00:12,380 --> 00:00:16,759
2000 I was the first person to hold the

00:00:14,360 --> 00:00:18,710
title web services principal architect

00:00:16,759 --> 00:00:21,650
at B EA systems as we were trying to

00:00:18,710 --> 00:00:25,970
figure out how HTTP could build an API

00:00:21,650 --> 00:00:28,340
driven enterprise I spent a half decade

00:00:25,970 --> 00:00:31,430
at Microsoft after that doing wait for

00:00:28,340 --> 00:00:34,970
it leading the open source and Linux

00:00:31,430 --> 00:00:36,199
team it was harder than it than it is

00:00:34,970 --> 00:00:37,640
now some of you may have seen that

00:00:36,199 --> 00:00:39,379
they've come out of the closet such an

00:00:37,640 --> 00:00:42,050
adult is now seen on stage pointing it

00:00:39,379 --> 00:00:44,269
slide saying Microsoft loves Linux so a

00:00:42,050 --> 00:00:46,070
step at a time spent the last half

00:00:44,269 --> 00:00:46,550
decade as chief strategy officer of

00:00:46,070 --> 00:00:48,559
appaji

00:00:46,550 --> 00:00:50,390
observing what many of you have been

00:00:48,559 --> 00:00:51,980
observing which is that every enterprise

00:00:50,390 --> 00:00:54,920
is becoming a software company and

00:00:51,980 --> 00:00:56,809
somehow we need to help each of them get

00:00:54,920 --> 00:00:58,999
towards a world of applications and

00:00:56,809 --> 00:01:00,829
services so what we really should have

00:00:58,999 --> 00:01:03,859
called this talk is not the making of a

00:01:00,829 --> 00:01:05,540
modern architecture having observed

00:01:03,859 --> 00:01:07,040
everything that we've seen the

00:01:05,540 --> 00:01:08,210
conversations at this conference we

00:01:07,040 --> 00:01:10,549
should have called it the making of a

00:01:08,210 --> 00:01:13,820
cloud native application platform that's

00:01:10,549 --> 00:01:16,100
where we're all trying to get well know

00:01:13,820 --> 00:01:17,630
that we're at the dawn of a new era we

00:01:16,100 --> 00:01:19,729
walk around with supercomputers in our

00:01:17,630 --> 00:01:21,759
pockets sometimes they even work well

00:01:19,729 --> 00:01:24,259
enough to make some telephone calls

00:01:21,759 --> 00:01:26,479
pretty soon we're going to be driving

00:01:24,259 --> 00:01:29,479
supercomputers down the highway many of

00:01:26,479 --> 00:01:31,070
us already are as chips become cheaper

00:01:29,479 --> 00:01:33,320
sensors become cheaper screens become

00:01:31,070 --> 00:01:35,780
cheaper we're seeing these everywhere so

00:01:33,320 --> 00:01:39,920
people are moving human behavior is

00:01:35,780 --> 00:01:41,990
changing and what we are required to

00:01:39,920 --> 00:01:43,700
produce is a shift in business that

00:01:41,990 --> 00:01:45,979
matches the change in human behavior if

00:01:43,700 --> 00:01:47,990
an enterprise cannot give you the

00:01:45,979 --> 00:01:50,119
information and the commerce opportunity

00:01:47,990 --> 00:01:51,770
in your situation in your context

00:01:50,119 --> 00:01:53,930
wherever you happen to be they're going

00:01:51,770 --> 00:01:55,759
to have serious trouble just down the

00:01:53,930 --> 00:01:58,700
street at MIT Sloan School of Business

00:01:55,759 --> 00:02:00,469
for about 20 years they said the most

00:01:58,700 --> 00:02:02,420
important thing you can produce the gold

00:02:00,469 --> 00:02:05,179
standard of business was sustainable

00:02:02,420 --> 00:02:06,530
competitive advantage they've now said

00:02:05,179 --> 00:02:08,840
in the last few years everything is

00:02:06,530 --> 00:02:10,820
changing too fast you can no longer seek

00:02:08,840 --> 00:02:13,160
sustainable competitive advantage it

00:02:10,820 --> 00:02:14,390
won't last long so what can we do

00:02:13,160 --> 00:02:16,970
instead where do we need to take our

00:02:14,390 --> 00:02:17,150
companies we need to move to continuous

00:02:16,970 --> 00:02:20,060
in

00:02:17,150 --> 00:02:20,959
innovation so it sounded a lot like what

00:02:20,060 --> 00:02:22,250
we've been talking about at this

00:02:20,959 --> 00:02:25,099
conference for the last couple of days

00:02:22,250 --> 00:02:26,930
so it sounds like agile right so raise

00:02:25,099 --> 00:02:29,769
your hand if you're currently doing

00:02:26,930 --> 00:02:32,209
agile development in an enterprise

00:02:29,769 --> 00:02:34,819
awesome please keep your hands raised if

00:02:32,209 --> 00:02:38,359
on top of doing agile development you're

00:02:34,819 --> 00:02:39,849
also able to do continuous deployment ok

00:02:38,359 --> 00:02:42,049
so interesting thank you

00:02:39,849 --> 00:02:43,909
many people put their hands down on the

00:02:42,049 --> 00:02:46,280
second question because what you have is

00:02:43,909 --> 00:02:47,390
an agile world where you're doing

00:02:46,280 --> 00:02:48,859
designed to demo and you're absolutely

00:02:47,390 --> 00:02:50,060
delighting the teams that you're working

00:02:48,859 --> 00:02:51,950
with the business people think it's

00:02:50,060 --> 00:02:55,340
fantastic and then you batch up your

00:02:51,950 --> 00:02:57,349
delivery to IT on a six or eight week

00:02:55,340 --> 00:03:00,590
edge you'll to get it into an actual

00:02:57,349 --> 00:03:02,420
production push you my friends are in

00:03:00,590 --> 00:03:07,609
the middle of what is called the water

00:03:02,420 --> 00:03:08,989
scrum fall so how do we get out of the

00:03:07,609 --> 00:03:10,159
water scrum fall that's what I'm going

00:03:08,989 --> 00:03:12,769
to spend the rest of this time talking

00:03:10,159 --> 00:03:16,549
about we know what we need to do is to

00:03:12,769 --> 00:03:19,639
pare contain ativ applications with the

00:03:16,549 --> 00:03:22,010
continuous delivery of business value so

00:03:19,639 --> 00:03:24,019
if we can put those things together then

00:03:22,010 --> 00:03:27,319
we actually have the very practical

00:03:24,019 --> 00:03:29,299
tools to do what MIT is telling us to do

00:03:27,319 --> 00:03:31,760
which is take us to a world of

00:03:29,299 --> 00:03:33,609
continuous innovation now because every

00:03:31,760 --> 00:03:35,900
company is becoming a software company

00:03:33,609 --> 00:03:37,609
there's tremendous economic pressure

00:03:35,900 --> 00:03:39,680
which is driving the creation of open

00:03:37,609 --> 00:03:41,269
projects and open platforms open source

00:03:39,680 --> 00:03:43,699
is the answer to global economic

00:03:41,269 --> 00:03:46,129
pressure but is no longer just IT that

00:03:43,699 --> 00:03:49,220
needs to do IT right but financial

00:03:46,129 --> 00:03:51,560
services healthcare telecommunications

00:03:49,220 --> 00:03:53,449
then all of that pressure to collaborate

00:03:51,560 --> 00:03:56,840
means we need to reduce the cost of our

00:03:53,449 --> 00:03:58,419
basic operating ingredients we're

00:03:56,840 --> 00:04:01,159
building these into open data centers

00:03:58,419 --> 00:04:03,440
into stacks right open compute so the

00:04:01,159 --> 00:04:05,120
hardware can be open OPN MV for network

00:04:03,440 --> 00:04:07,909
function virtualization opendaylight for

00:04:05,120 --> 00:04:10,519
Sdn OpenStack is n Linux Cloud Foundry

00:04:07,909 --> 00:04:12,049
docker node these are examples of each

00:04:10,519 --> 00:04:14,569
element of the stack but it's crucial to

00:04:12,049 --> 00:04:17,269
start to see the Harmonia up and down

00:04:14,569 --> 00:04:19,579
the stack so we can get out of the old

00:04:17,269 --> 00:04:20,720
way of doing IT and into the new way

00:04:19,579 --> 00:04:23,780
where we can get to continuous

00:04:20,720 --> 00:04:25,940
innovation so we do all this so that we

00:04:23,780 --> 00:04:27,380
can enable micro services to run

00:04:25,940 --> 00:04:29,120
correctly to be addressable for maybe

00:04:27,380 --> 00:04:30,810
where to scale to be able operate in

00:04:29,120 --> 00:04:33,120
multiple data centers

00:04:30,810 --> 00:04:35,190
and microservices are great per Martin

00:04:33,120 --> 00:04:37,230
Fowler they lead the specific

00:04:35,190 --> 00:04:38,580
requirements and in his article on this

00:04:37,230 --> 00:04:41,850
he actually said you must be this tall

00:04:38,580 --> 00:04:43,260
to ride the ride you need rapid

00:04:41,850 --> 00:04:46,350
provisioning you need to be able to have

00:04:43,260 --> 00:04:48,270
net new IT resources storage network

00:04:46,350 --> 00:04:51,480
compute come up in a matter of minutes

00:04:48,270 --> 00:04:53,970
or less not days not weeks you need

00:04:51,480 --> 00:04:55,800
basic monitoring you need to have feeds

00:04:53,970 --> 00:04:57,720
of information to find out what's the

00:04:55,800 --> 00:04:59,850
current state of health of the entire

00:04:57,720 --> 00:05:01,680
system you need rapid application

00:04:59,850 --> 00:05:03,810
deployment so you must be in continuous

00:05:01,680 --> 00:05:05,370
deployment right not just continuous

00:05:03,810 --> 00:05:07,500
integration you don't want to be in the

00:05:05,370 --> 00:05:09,240
water scrum fall and all of this is

00:05:07,500 --> 00:05:11,310
enabled by the most important capacity

00:05:09,240 --> 00:05:14,330
it's the people capacity no tool can

00:05:11,310 --> 00:05:16,290
give you this this is DevOps culture

00:05:14,330 --> 00:05:18,360
when there's this much pressure you

00:05:16,290 --> 00:05:21,870
start to see emergent behaviors in a

00:05:18,360 --> 00:05:25,080
market those pressures produce the

00:05:21,870 --> 00:05:27,090
desire to make certain projects certain

00:05:25,080 --> 00:05:29,610
technologies and make them come alive so

00:05:27,090 --> 00:05:31,590
for containers docker amazingly huge

00:05:29,610 --> 00:05:35,610
rocket hot on their on their on their

00:05:31,590 --> 00:05:38,070
ankles automation tools like puppet like

00:05:35,610 --> 00:05:41,160
ansible like chef and cluster management

00:05:38,070 --> 00:05:43,729
for taking these two data center scale

00:05:41,160 --> 00:05:45,960
clusters Apache mesos and kubernetes

00:05:43,729 --> 00:05:48,870
each of these technologies does an

00:05:45,960 --> 00:05:50,370
outstanding job at what it does think

00:05:48,870 --> 00:05:52,110
about how much effort you put into

00:05:50,370 --> 00:05:54,660
understanding the technologies at your

00:05:52,110 --> 00:05:56,460
hand and then think about your own IT

00:05:54,660 --> 00:05:57,960
organizations and ask how much

00:05:56,460 --> 00:06:00,539
complexity can they handle in order to

00:05:57,960 --> 00:06:02,580
give you an environment that allows you

00:06:00,539 --> 00:06:04,470
to do continuous continuous deployment

00:06:02,580 --> 00:06:07,860
and take you towards continuous

00:06:04,470 --> 00:06:09,990
innovation what they need is a cloud

00:06:07,860 --> 00:06:12,030
native application platform something

00:06:09,990 --> 00:06:13,889
that works with everything else but is

00:06:12,030 --> 00:06:15,960
consistent gives you the nines gives you

00:06:13,889 --> 00:06:18,060
a very clear way to operate it so that

00:06:15,960 --> 00:06:19,500
you can create this harmony so you can

00:06:18,060 --> 00:06:21,240
create this environment in which all the

00:06:19,500 --> 00:06:25,220
cloud native applications can run and

00:06:21,240 --> 00:06:25,220
you can actually run end-to-end agile

00:06:25,610 --> 00:06:31,979
Cloud Foundry is a cloud native

00:06:28,440 --> 00:06:34,979
application platform it points to many

00:06:31,979 --> 00:06:36,840
things but at its heart in fact a cloud

00:06:34,979 --> 00:06:39,360
foundry is a place of practice for

00:06:36,840 --> 00:06:41,340
continuous innovation so a cloud foundry

00:06:39,360 --> 00:06:43,650
ism now and think about foundries it's a

00:06:41,340 --> 00:06:44,430
place where you produced material

00:06:43,650 --> 00:06:46,200
products that were

00:06:44,430 --> 00:06:47,430
meaningful you could share time and

00:06:46,200 --> 00:06:49,740
experience and materials with other

00:06:47,430 --> 00:06:51,390
artisans a place to practice this is

00:06:49,740 --> 00:06:54,030
very pragmatic the laying of bricks

00:06:51,390 --> 00:06:55,650
produces the wall you have to actually

00:06:54,030 --> 00:06:57,840
get into the habit of doing things

00:06:55,650 --> 00:06:59,190
correctly and the cathedral that we're

00:06:57,840 --> 00:07:00,240
building it's not just brick laying it's

00:06:59,190 --> 00:07:01,710
not just a wall but we're trying to

00:07:00,240 --> 00:07:04,380
create something amazing is continuous

00:07:01,710 --> 00:07:05,820
innovation so what we what we give you

00:07:04,380 --> 00:07:08,460
is the technology to create the place

00:07:05,820 --> 00:07:10,050
and then we assemble the wisdom of the

00:07:08,460 --> 00:07:13,770
community in order to create the

00:07:10,050 --> 00:07:15,470
practices we dive in a little bit into

00:07:13,770 --> 00:07:19,320
what is inside the Cloud Foundry

00:07:15,470 --> 00:07:21,330
open-source project the most important

00:07:19,320 --> 00:07:22,920
piece is at the top its the users

00:07:21,330 --> 00:07:25,020
they're coming at you from every

00:07:22,920 --> 00:07:28,430
direction browsers on different form

00:07:25,020 --> 00:07:31,110
factors mobile range of devices

00:07:28,430 --> 00:07:33,720
everywhere that you can have a screen an

00:07:31,110 --> 00:07:37,110
interface an internet connection you're

00:07:33,720 --> 00:07:38,790
going to want to access apps also

00:07:37,110 --> 00:07:40,260
critical is the bottom infrastructure

00:07:38,790 --> 00:07:41,640
we're in a world where we're making a

00:07:40,260 --> 00:07:43,440
lot of different infrastructure choices

00:07:41,640 --> 00:07:45,420
yes there's a lot of Amazon Web Services

00:07:43,440 --> 00:07:47,820
but we're starting to see Microsoft

00:07:45,420 --> 00:07:48,480
Azure we're starting to see Google Play

00:07:47,820 --> 00:07:50,820
in that game

00:07:48,480 --> 00:07:52,610
OpenStack VMware vCloud digitalocean

00:07:50,820 --> 00:07:54,900
there's actually an amazing amount of

00:07:52,610 --> 00:07:57,330
innovation happening at that layer of

00:07:54,900 --> 00:07:58,380
the stack so a piece in the middle that

00:07:57,330 --> 00:08:00,420
you're going to offer to your IT

00:07:58,380 --> 00:08:01,650
organization to make you happy so that

00:08:00,420 --> 00:08:04,050
you can run your projects the way that

00:08:01,650 --> 00:08:05,550
you want has to take care of both ends

00:08:04,050 --> 00:08:08,730
of those concerns it has to be open

00:08:05,550 --> 00:08:09,990
above and below has to be clean we take

00:08:08,730 --> 00:08:12,150
a bit as breaking into three key parts

00:08:09,990 --> 00:08:13,860
the elastic runtime which is what allows

00:08:12,150 --> 00:08:15,450
you to deploy your applications Intuit

00:08:13,860 --> 00:08:18,300
version them update them whatever you

00:08:15,450 --> 00:08:20,310
need to do the second tier services is

00:08:18,300 --> 00:08:22,110
where you have to have some set of

00:08:20,310 --> 00:08:23,760
capabilities out-of-the-box if you think

00:08:22,110 --> 00:08:25,620
about a fire hose based application

00:08:23,760 --> 00:08:26,910
you're running it stateless lis you're

00:08:25,620 --> 00:08:29,070
persisting nothing but you'd still need

00:08:26,910 --> 00:08:29,520
some some services to rely on in this

00:08:29,070 --> 00:08:32,280
new world

00:08:29,520 --> 00:08:34,020
reiax es MySQL you need to be able to

00:08:32,280 --> 00:08:36,810
persist information you can be able to

00:08:34,020 --> 00:08:38,340
talk to message queues provider specific

00:08:36,810 --> 00:08:41,910
services Cloud Foundry as part of IBM

00:08:38,340 --> 00:08:43,740
bluemix bluemix also has particular IBM

00:08:41,910 --> 00:08:45,270
services like watson so those are

00:08:43,740 --> 00:08:46,830
provider specific services that can be

00:08:45,270 --> 00:08:48,270
serviced surfaced through cloud foundry

00:08:46,830 --> 00:08:50,010
you have the same programming

00:08:48,270 --> 00:08:52,470
environment but you get the advantage of

00:08:50,010 --> 00:08:55,080
new particular vendors ideas without

00:08:52,470 --> 00:08:56,670
breaking compatibility and then finally

00:08:55,080 --> 00:08:58,019
you have user provide service instances

00:08:56,670 --> 00:09:00,480
so every enterprises

00:08:58,019 --> 00:09:01,980
made up of tons of IT assets you'd be

00:09:00,480 --> 00:09:04,410
able to project those right sometimes

00:09:01,980 --> 00:09:06,720
monoliths and really well-structured

00:09:04,410 --> 00:09:08,429
existing distributed services need to

00:09:06,720 --> 00:09:10,079
project those into the programming

00:09:08,429 --> 00:09:12,149
fabric so it's easy to compose your

00:09:10,079 --> 00:09:14,279
micro services that include very large

00:09:12,149 --> 00:09:15,959
enterprise services and then finally at

00:09:14,279 --> 00:09:17,639
the operations tier right this is where

00:09:15,959 --> 00:09:21,749
we have to win the hearts and minds of

00:09:17,639 --> 00:09:23,009
IT administrators logging scaling as we

00:09:21,749 --> 00:09:25,139
all know auto scaling is not just

00:09:23,009 --> 00:09:26,790
scaling up it's scaling down right when

00:09:25,139 --> 00:09:28,949
the service is when the resources are no

00:09:26,790 --> 00:09:30,839
longer needed let them go platform

00:09:28,949 --> 00:09:32,610
deployment what's the ordinality you

00:09:30,839 --> 00:09:34,379
know you need n units of this server m

00:09:32,610 --> 00:09:36,299
units of that server make sure that that

00:09:34,379 --> 00:09:37,920
can be handled health monitoring make

00:09:36,299 --> 00:09:40,019
sure your continued guide this is

00:09:37,920 --> 00:09:43,079
continuously guide the system into the

00:09:40,019 --> 00:09:45,239
desired State two key things that we're

00:09:43,079 --> 00:09:47,670
doing or refactoring the elastic runtime

00:09:45,239 --> 00:09:50,100
this is a project called Diego to enable

00:09:47,670 --> 00:09:54,269
it to not just take build packs but also

00:09:50,100 --> 00:09:56,279
docker and rocket containers and today

00:09:54,269 --> 00:09:58,079
I'm very happy to announce we've just

00:09:56,279 --> 00:10:01,139
launched latus you can go to lattice dot

00:09:58,079 --> 00:10:02,790
CF and you can see a cloud foundry that

00:10:01,139 --> 00:10:04,619
will fit on a developer laptop this

00:10:02,790 --> 00:10:06,209
allow you to get the sense of what cloud

00:10:04,619 --> 00:10:10,949
foundry does without having to have an

00:10:06,209 --> 00:10:12,119
entire data center enclosing we've

00:10:10,949 --> 00:10:13,740
talked about a lot of things this is the

00:10:12,119 --> 00:10:15,629
most important thing for me this is why

00:10:13,740 --> 00:10:18,420
I come to work this is why I get up in

00:10:15,629 --> 00:10:20,999
the morning we see a world of computing

00:10:18,420 --> 00:10:23,100
that is ubiquitous and flexible if there

00:10:20,999 --> 00:10:25,019
are cloud foundries everywhere these are

00:10:23,100 --> 00:10:27,299
open-source installations you can run

00:10:25,019 --> 00:10:28,410
yourself then you get the next promise

00:10:27,299 --> 00:10:30,869
which is Portability and

00:10:28,410 --> 00:10:32,429
interoperability because we don't know

00:10:30,869 --> 00:10:33,540
enough about the future because we don't

00:10:32,429 --> 00:10:34,889
know where we're going to run our

00:10:33,540 --> 00:10:37,290
workloads we need something that's

00:10:34,889 --> 00:10:38,670
easier higher level of abstraction so

00:10:37,290 --> 00:10:40,679
you can take your business critical apps

00:10:38,670 --> 00:10:43,589
and move them from provider to provider

00:10:40,679 --> 00:10:45,329
and finally vibrant and growing if we do

00:10:43,589 --> 00:10:47,220
this right then we can create a real

00:10:45,329 --> 00:10:49,709
platform that you can deploy net new

00:10:47,220 --> 00:10:51,929
applications to that is v's can give you

00:10:49,709 --> 00:10:54,209
an iOS like experience what if you could

00:10:51,929 --> 00:10:55,739
click a tile and suddenly an enterprise

00:10:54,209 --> 00:10:57,869
application is installed across your

00:10:55,739 --> 00:10:59,220
data center that's where we're trying to

00:10:57,869 --> 00:11:01,949
take the world and invite you to join us

00:10:59,220 --> 00:11:04,199
join me we're a Linux Foundation

00:11:01,949 --> 00:11:05,910
collaborative project we're open-source

00:11:04,199 --> 00:11:07,619
project we believe it we're passionate

00:11:05,910 --> 00:11:10,259
about it invite you to contact me

00:11:07,619 --> 00:11:11,300
directly at s Ramji or check us out at

00:11:10,259 --> 00:11:14,080
Cloud Foundry org

00:11:11,300 --> 00:11:14,080
so thank you very much

00:11:21,889 --> 00:11:23,949

YouTube URL: https://www.youtube.com/watch?v=fiENlfVU7Ys


