Title: AppDirect - How we Migrated to the V2 Cloud Foundry Service Broker (Cloud Foundry Summit 2014)
Publication date: 2014-07-07
Playlist: Cloud Foundry Summit 2014
Description: 
	Christophe Levesque, Senior Software Architect, AppDirect

How we Migrated to the V2 Cloud Foundry Service Broker by AppDirect
Captions: 
	00:00:00,930 --> 00:00:04,220
[Music]

00:00:08,510 --> 00:00:13,620
alright so we have to in everyone my

00:00:11,700 --> 00:00:16,650
name is Christophe Levesque I'm a

00:00:13,620 --> 00:00:19,789
Software Architect at AB direct and I'm

00:00:16,650 --> 00:00:22,890
going to talk to you about how AB direct

00:00:19,789 --> 00:00:27,240
migrated over and implemented the the v2

00:00:22,890 --> 00:00:29,849
Cloud Foundry service broker so before

00:00:27,240 --> 00:00:31,710
jumping into more detail about the

00:00:29,849 --> 00:00:33,660
service broker and and what we did and

00:00:31,710 --> 00:00:36,719
where we migrated from and what we maybe

00:00:33,660 --> 00:00:39,180
did - just a few words about what AB

00:00:36,719 --> 00:00:42,360
direct for those who might know not know

00:00:39,180 --> 00:00:44,850
about it so AB direct is a leading

00:00:42,360 --> 00:00:47,579
provider of cloud service marketplace

00:00:44,850 --> 00:00:51,539
and management solutions we launched in

00:00:47,579 --> 00:00:53,070
2009 and we've released several

00:00:51,539 --> 00:00:56,160
marketplaces throughout the world

00:00:53,070 --> 00:00:59,070
including cloud foundry staples Dodge to

00:00:56,160 --> 00:01:01,920
recommence cetera so just in a few words

00:00:59,070 --> 00:01:06,119
what is what is the service marketplace

00:01:01,920 --> 00:01:08,220
it's really an offering that we that we

00:01:06,119 --> 00:01:10,710
give to large companies like dodge

00:01:08,220 --> 00:01:13,680
telecom staple Styria and many others

00:01:10,710 --> 00:01:16,530
who have a set of who have a user base

00:01:13,680 --> 00:01:18,960
who wants to expand and engage the user

00:01:16,530 --> 00:01:21,270
base by providing them with third-party

00:01:18,960 --> 00:01:24,780
services and that they are distributing

00:01:21,270 --> 00:01:27,210
so AB direct builds a catalogue of those

00:01:24,780 --> 00:01:29,759
search application and is able to

00:01:27,210 --> 00:01:31,590
distribute application and services to

00:01:29,759 --> 00:01:34,979
the current to the users of those of

00:01:31,590 --> 00:01:37,259
those companies so that's that's the

00:01:34,979 --> 00:01:39,450
offering from from the from the

00:01:37,259 --> 00:01:41,689
distributor side on the other side of

00:01:39,450 --> 00:01:45,210
the spectrum and because AB direct is a

00:01:41,689 --> 00:01:47,520
multi-platform AB direct also partner

00:01:45,210 --> 00:01:50,189
with service providers so I was

00:01:47,520 --> 00:01:53,340
mentioning that AB direct distributes

00:01:50,189 --> 00:01:55,229
services to the consumers of those those

00:01:53,340 --> 00:01:58,829
companies those services are actually

00:01:55,229 --> 00:02:01,799
built by a third party and we partner

00:01:58,829 --> 00:02:06,170
with with several very cool companies

00:02:01,799 --> 00:02:09,209
like ready slab clear DB New Relic MySQL

00:02:06,170 --> 00:02:11,370
and if an SQL to provide services to

00:02:09,209 --> 00:02:13,650
those to those

00:02:11,370 --> 00:02:16,440
Marketplace's so the the proposition is

00:02:13,650 --> 00:02:19,019
for those independent software developer

00:02:16,440 --> 00:02:22,019
is to integrate the object platform and

00:02:19,019 --> 00:02:24,120
then be able to be distributed through a

00:02:22,019 --> 00:02:30,180
network of marketplaces in a in a

00:02:24,120 --> 00:02:31,829
seamless way and so how does that how

00:02:30,180 --> 00:02:34,349
does it feel in with with clouds for me

00:02:31,829 --> 00:02:35,670
so I'm going to rewind back to to a year

00:02:34,349 --> 00:02:39,060
ago and I don't know how many people

00:02:35,670 --> 00:02:42,720
were had a chance to attend the 2013

00:02:39,060 --> 00:02:45,569
platform customer conference but we

00:02:42,720 --> 00:02:49,500
discovered so we're one of we were very

00:02:45,569 --> 00:02:52,079
excited to announce that we were one of

00:02:49,500 --> 00:02:54,420
the first service broker for the

00:02:52,079 --> 00:02:56,400
people's Cloud Foundry deployment so

00:02:54,420 --> 00:02:58,290
that mean that when you go to the people

00:02:56,400 --> 00:03:00,359
whose Cloud Foundry and in this this you

00:02:58,290 --> 00:03:03,150
decide to like create a service to to

00:03:00,359 --> 00:03:06,959
connect your application be it like

00:03:03,150 --> 00:03:08,519
MongoDB or MySQL or send grid it

00:03:06,959 --> 00:03:11,670
actually was going through the app

00:03:08,519 --> 00:03:13,819
direct servers and then being routed to

00:03:11,670 --> 00:03:17,669
the to the right soft service provider

00:03:13,819 --> 00:03:20,250
so this was a very exciting time a year

00:03:17,669 --> 00:03:22,260
ago and most of the integration that had

00:03:20,250 --> 00:03:24,450
been done at that time was relying on a

00:03:22,260 --> 00:03:26,069
proprietary api's that had been

00:03:24,450 --> 00:03:29,760
developed by people all internally and

00:03:26,069 --> 00:03:31,620
that were consumed by by AB direct so

00:03:29,760 --> 00:03:33,269
everything was working great it was it

00:03:31,620 --> 00:03:35,459
was a great implementation we were able

00:03:33,269 --> 00:03:38,129
to provide a platform with a catalogue

00:03:35,459 --> 00:03:42,480
of I think over like 20 applications or

00:03:38,129 --> 00:03:44,879
20 services and basically this is just a

00:03:42,480 --> 00:03:46,169
screenshot of of the cut furnaces

00:03:44,879 --> 00:03:52,049
marketplace with all the services

00:03:46,169 --> 00:03:55,199
provided by AB direct now the the trick

00:03:52,049 --> 00:03:57,919
is that it's been it's been a year since

00:03:55,199 --> 00:04:01,799
that initial proprietary implementation

00:03:57,919 --> 00:04:04,669
of of a service broker by by AB direct

00:04:01,799 --> 00:04:06,690
and NP parole and the downside was that

00:04:04,669 --> 00:04:08,519
as I mentioned it was proprietary

00:04:06,690 --> 00:04:10,470
meaning that it was really restricted to

00:04:08,519 --> 00:04:12,989
two people it was not part of any of the

00:04:10,470 --> 00:04:15,900
open source cloud foundry platform or

00:04:12,989 --> 00:04:17,359
the class family code so over the last

00:04:15,900 --> 00:04:20,280
year

00:04:17,359 --> 00:04:22,130
pivotal and a crowdfunded team have been

00:04:20,280 --> 00:04:25,350
doing a tremendous effort of

00:04:22,130 --> 00:04:26,910
standardizing and open sourcing on the

00:04:25,350 --> 00:04:28,800
API is that were involved in this

00:04:26,910 --> 00:04:33,210
initial release of the service broker

00:04:28,800 --> 00:04:35,940
and now one year later cloud foundry has

00:04:33,210 --> 00:04:38,550
built in its core open source component

00:04:35,940 --> 00:04:41,040
a service broker that allows any

00:04:38,550 --> 00:04:42,480
platform deployment to be able to pull a

00:04:41,040 --> 00:04:46,290
catalog of services from a third

00:04:42,480 --> 00:04:48,630
third-party broker the people whole team

00:04:46,290 --> 00:04:51,120
has done a great job at documenting this

00:04:48,630 --> 00:04:54,510
this API is I'm going to go over this in

00:04:51,120 --> 00:04:57,000
a bit more detail in a second and over

00:04:54,510 --> 00:04:58,919
also about this this last year up

00:04:57,000 --> 00:05:00,300
Derrick was able to migrate all the

00:04:58,919 --> 00:05:03,090
existing code and all the existing

00:05:00,300 --> 00:05:06,210
accounts and services from that initial

00:05:03,090 --> 00:05:07,560
implementation to the standard Cloud

00:05:06,210 --> 00:05:14,160
Foundry implementation of the service

00:05:07,560 --> 00:05:15,720
broker which is called v2 so in a in a

00:05:14,160 --> 00:05:18,300
very short words and if you if you

00:05:15,720 --> 00:05:19,650
attended the previous talk you would

00:05:18,300 --> 00:05:22,110
probably have already a pretty good idea

00:05:19,650 --> 00:05:25,770
of what Services represents we like

00:05:22,110 --> 00:05:29,880
databases or services like like New

00:05:25,770 --> 00:05:32,220
Relic and insane grid but the service

00:05:29,880 --> 00:05:35,970
broker is actually composed of what I

00:05:32,220 --> 00:05:38,520
would say three sets of api's so the

00:05:35,970 --> 00:05:40,530
first API that a service broker is going

00:05:38,520 --> 00:05:43,200
to implement to distribute services is

00:05:40,530 --> 00:05:46,669
the catalog API so the catalog API is

00:05:43,200 --> 00:05:49,530
just a very simple JSON endpoint that

00:05:46,669 --> 00:05:51,210
that is called by by class boundary to

00:05:49,530 --> 00:05:54,180
say hey here's the list of all the

00:05:51,210 --> 00:05:57,810
services that my broker is distributing

00:05:54,180 --> 00:06:02,130
I have a MongoDB with a small plan a

00:05:57,810 --> 00:06:06,060
large plan I have a MySQL service with

00:06:02,130 --> 00:06:09,090
with the small plan and so on so with

00:06:06,060 --> 00:06:12,030
that API class form is able to read the

00:06:09,090 --> 00:06:15,210
catalog and populate its internal its

00:06:12,030 --> 00:06:17,010
internal database with with all the

00:06:15,210 --> 00:06:20,250
services that have been advertised by

00:06:17,010 --> 00:06:22,200
the broker now the second API is the set

00:06:20,250 --> 00:06:24,450
of service api which are responsible for

00:06:22,200 --> 00:06:27,360
creating and deleting services in a

00:06:24,450 --> 00:06:28,919
space so most of you have used the class

00:06:27,360 --> 00:06:30,720
from the command line i have used the

00:06:28,919 --> 00:06:31,940
cards from the UI where you go and

00:06:30,720 --> 00:06:34,580
decide hey i want to create

00:06:31,940 --> 00:06:36,260
the service what this does in turn

00:06:34,580 --> 00:06:38,540
whether it's the regardless of whether

00:06:36,260 --> 00:06:40,850
it's the command line where you do CF

00:06:38,540 --> 00:06:42,860
create service whether you go through

00:06:40,850 --> 00:06:45,200
the UI and decide to purchase from the

00:06:42,860 --> 00:06:46,730
marketplace webpage it also go through

00:06:45,200 --> 00:06:51,200
the same API which is a service API

00:06:46,730 --> 00:06:54,890
which is just a simple put to say this

00:06:51,200 --> 00:06:58,430
space is creating service for a small

00:06:54,890 --> 00:06:59,630
 database for example and similarly

00:06:58,430 --> 00:07:01,910
when you're done with a service when you

00:06:59,630 --> 00:07:04,610
don't need to use the database anymore

00:07:01,910 --> 00:07:06,650
you're going to delete it and what this

00:07:04,610 --> 00:07:13,220
does in turn is a cloud phone with cents

00:07:06,650 --> 00:07:14,450
to the broker delete HTTP request to

00:07:13,220 --> 00:07:20,270
delete the service that is no longer

00:07:14,450 --> 00:07:21,920
needed and third and and a 30p I'm going

00:07:20,270 --> 00:07:24,560
to mention is also the the binding API

00:07:21,920 --> 00:07:27,830
so once you actually provision services

00:07:24,560 --> 00:07:30,080
and protein and the preventive services

00:07:27,830 --> 00:07:32,180
you also want to be able to use those

00:07:30,080 --> 00:07:35,240
services with your application if you

00:07:32,180 --> 00:07:37,340
have a an application that means a

00:07:35,240 --> 00:07:39,380
connection to a database you're going to

00:07:37,340 --> 00:07:41,630
need to first provision the service ok

00:07:39,380 --> 00:07:43,520
create your your MySQL database for

00:07:41,630 --> 00:07:46,070
example and then you're going to have to

00:07:43,520 --> 00:07:48,080
generate a set of credentials so that

00:07:46,070 --> 00:07:50,060
your application can connect the

00:07:48,080 --> 00:07:52,160
database and direction of creating

00:07:50,060 --> 00:07:53,660
estimation the connection between the

00:07:52,160 --> 00:07:55,370
service and the application is called a

00:07:53,660 --> 00:07:58,010
binding that's what happens when you do

00:07:55,370 --> 00:08:00,020
CF bind service and ask you which

00:07:58,010 --> 00:08:02,570
service do you want to bind and what a

00:08:00,020 --> 00:08:05,150
picture are you binding it to so they

00:08:02,570 --> 00:08:06,919
doesn't three main API is that there are

00:08:05,150 --> 00:08:09,110
part of the of the service broker and

00:08:06,919 --> 00:08:11,540
that that have to be implemented in

00:08:09,110 --> 00:08:18,380
order for for broker to be to be

00:08:11,540 --> 00:08:20,690
included in CAD foundry now in order for

00:08:18,380 --> 00:08:24,440
if you have implemented those three

00:08:20,690 --> 00:08:27,890
those three API successfully now you

00:08:24,440 --> 00:08:30,410
have a fully working service provider so

00:08:27,890 --> 00:08:34,070
this broker and this service broker is

00:08:30,410 --> 00:08:36,800
available to any cloud for instance to

00:08:34,070 --> 00:08:38,419
be add a photo for the services to be

00:08:36,800 --> 00:08:41,719
added to to the Cloud Foundry

00:08:38,419 --> 00:08:43,520
marketplace so adding a service broker

00:08:41,719 --> 00:08:45,050
to a customer deferment is actually very

00:08:43,520 --> 00:08:48,080
very simple of

00:08:45,050 --> 00:08:50,420
and the affirmative is a very amazing

00:08:48,080 --> 00:08:54,140
work of making it as easy as possible

00:08:50,420 --> 00:08:56,510
it's really just one line of command you

00:08:54,140 --> 00:08:58,190
do CF ad service broker if you're an

00:08:56,510 --> 00:08:59,870
administrator of the of the cloud from

00:08:58,190 --> 00:09:01,910
deployment it's going to ask you oh

00:08:59,870 --> 00:09:03,410
what's the URL of the of the broker you

00:09:01,910 --> 00:09:05,570
want to import which is going to host

00:09:03,410 --> 00:09:07,519
all the services and what are the

00:09:05,570 --> 00:09:10,790
credentials to connect to this to this

00:09:07,519 --> 00:09:12,350
broker once you want to do this class

00:09:10,790 --> 00:09:15,680
column you will pull the list of

00:09:12,350 --> 00:09:17,839
services into its database and the last

00:09:15,680 --> 00:09:19,910
step will be just for the administrator

00:09:17,839 --> 00:09:21,860
of the cloud foundry deployment to make

00:09:19,910 --> 00:09:26,600
those services public for the consumers

00:09:21,860 --> 00:09:29,630
to use so now that I mentioned in a few

00:09:26,600 --> 00:09:32,959
words the weather what a cloud foundry

00:09:29,630 --> 00:09:35,600
service broker is I'm briefly going to

00:09:32,959 --> 00:09:37,490
go over how AB direct migrated over from

00:09:35,600 --> 00:09:38,839
from the initial proprietary

00:09:37,490 --> 00:09:41,709
implementation that we did a year ago

00:09:38,839 --> 00:09:45,740
over to the new open source and standard

00:09:41,709 --> 00:09:47,240
service broker of v2 so actually as I

00:09:45,740 --> 00:09:49,040
was mentioning the service team has some

00:09:47,240 --> 00:09:52,160
very extensive documentation that made

00:09:49,040 --> 00:09:55,459
it really easy for us to to to migrate

00:09:52,160 --> 00:09:57,890
they have like fully documented payload

00:09:55,459 --> 00:09:59,930
for both the request the response what

00:09:57,890 --> 00:10:01,760
they expecting how it's secured I'm not

00:09:59,930 --> 00:10:03,529
going to go over those those api's that

00:10:01,760 --> 00:10:06,740
they all like documented on the on the

00:10:03,529 --> 00:10:09,050
website and to be honest the the

00:10:06,740 --> 00:10:12,920
migration wasn't much of wasn't a very

00:10:09,050 --> 00:10:15,410
exciting process because the proprietary

00:10:12,920 --> 00:10:17,120
implementation was already doing most of

00:10:15,410 --> 00:10:19,190
the of the heavy lifting of creating

00:10:17,120 --> 00:10:21,079
services binding them against the

00:10:19,190 --> 00:10:23,959
catalog of application that that AB

00:10:21,079 --> 00:10:27,140
direct has so the only operation we had

00:10:23,959 --> 00:10:31,310
was really mostly changing the the

00:10:27,140 --> 00:10:34,880
format's of of the API calls so we had

00:10:31,310 --> 00:10:38,209
to standardize so we had to to implement

00:10:34,880 --> 00:10:40,670
a kind of vertical layer next to next to

00:10:38,209 --> 00:10:44,390
the v1 in implementation of our offer

00:10:40,670 --> 00:10:45,980
for initial broker implementation that

00:10:44,390 --> 00:10:48,890
will actually be able to understand both

00:10:45,980 --> 00:10:51,019
languages that v1 and v2 and then for

00:10:48,890 --> 00:10:53,270
awhile we had both v1 and v2 running and

00:10:51,019 --> 00:10:54,860
they would both internally called exact

00:10:53,270 --> 00:10:56,899
same code of provisioning services

00:10:54,860 --> 00:10:59,959
meaning calling the external

00:10:56,899 --> 00:11:02,329
is to provision databases indexing

00:10:59,959 --> 00:11:04,189
services and so on so we had both of

00:11:02,329 --> 00:11:06,889
those running at the same time and then

00:11:04,189 --> 00:11:10,009
once people was able to migrate over

00:11:06,889 --> 00:11:12,290
their service to the new to the new API

00:11:10,009 --> 00:11:14,899
we're able to just shut down and flip

00:11:12,290 --> 00:11:17,269
the switch from v1 to v2 very seamlessly

00:11:14,899 --> 00:11:19,459
and the whole process of migrating

00:11:17,269 --> 00:11:21,649
really like I'm saying this is like one

00:11:19,459 --> 00:11:23,749
year one year ago to now but actually it

00:11:21,649 --> 00:11:26,540
took only maybe like one or two weeks

00:11:23,749 --> 00:11:28,490
from from AB direct site just to to

00:11:26,540 --> 00:11:31,369
write all the new connectors to plug

00:11:28,490 --> 00:11:33,920
into the v2 and test that everything was

00:11:31,369 --> 00:11:37,220
working and similarly people was able to

00:11:33,920 --> 00:11:39,050
do the the tradition in just a just a

00:11:37,220 --> 00:11:41,179
couple weeks and then we flip the switch

00:11:39,050 --> 00:11:43,730
over over from v1 to v2 a few weeks ago

00:11:41,179 --> 00:11:44,990
so now if you go to the people of Cloud

00:11:43,730 --> 00:11:48,319
Foundry and you provision services

00:11:44,990 --> 00:11:52,749
everything goes through a v2 broker so

00:11:48,319 --> 00:12:00,050
AB direct is I assume one of the first

00:11:52,749 --> 00:12:02,509
largely used service broker so just just

00:12:00,050 --> 00:12:04,579
a few words on on what this means for if

00:12:02,509 --> 00:12:06,350
you were if you are if you're thinking I

00:12:04,579 --> 00:12:10,490
feel about to deploy cloud foundry on

00:12:06,350 --> 00:12:11,660
your onion infrastructure so one of the

00:12:10,490 --> 00:12:13,459
main goal of code for me is to make

00:12:11,660 --> 00:12:17,209
developers life easier

00:12:13,459 --> 00:12:19,790
and deploying Cloud Foundry will enable

00:12:17,209 --> 00:12:22,339
developers to easily deploy and manage

00:12:19,790 --> 00:12:24,170
their the application and the first time

00:12:22,339 --> 00:12:26,480
I saw cloud foundry and I was able to

00:12:24,170 --> 00:12:28,730
just package my application as a war

00:12:26,480 --> 00:12:31,220
file if it's a Java app and just do like

00:12:28,730 --> 00:12:33,079
CF push and have the app automatically

00:12:31,220 --> 00:12:37,389
deployed and running on Cloud Foundry

00:12:33,079 --> 00:12:40,459
with like scalability and then and and

00:12:37,389 --> 00:12:41,959
visibility of - upon it's down it's it's

00:12:40,459 --> 00:12:43,449
already like enough to have like any

00:12:41,959 --> 00:12:47,240
developer go like wow

00:12:43,449 --> 00:12:50,029
but now the the service broker opens a

00:12:47,240 --> 00:12:53,029
whole new whole new set of capabilities

00:12:50,029 --> 00:12:55,220
for cloud foundry so now not only am I

00:12:53,029 --> 00:12:57,259
able as the developer to create an

00:12:55,220 --> 00:12:59,089
application and deploy it on the Cloud

00:12:57,259 --> 00:13:01,790
Foundry infrastructure on it with just a

00:12:59,089 --> 00:13:05,089
few few clicks or a few comments but I'm

00:13:01,790 --> 00:13:07,819
also able to go to cloud foundry choose

00:13:05,089 --> 00:13:09,920
any kind of service from from a wide

00:13:07,819 --> 00:13:12,139
ecosystem of third-party there

00:13:09,920 --> 00:13:16,730
developers extent we knew really

00:13:12,139 --> 00:13:19,220
mongolab elasticsearch providers and be

00:13:16,730 --> 00:13:21,290
able to get those services from from

00:13:19,220 --> 00:13:24,740
third-party and connect them to my to my

00:13:21,290 --> 00:13:26,899
applications and for for a CF

00:13:24,740 --> 00:13:29,180
implementer giving access to this

00:13:26,899 --> 00:13:31,310
ecosystem of services is just as simple

00:13:29,180 --> 00:13:33,170
as running the the one command that I

00:13:31,310 --> 00:13:35,510
just mentioned earlier of adding a

00:13:33,170 --> 00:13:39,829
broker to the to the to the crowdfunding

00:13:35,510 --> 00:13:42,079
instance so that was a very quick

00:13:39,829 --> 00:13:43,970
presentation of the of the service

00:13:42,079 --> 00:13:45,860
broker I think we've probably have a

00:13:43,970 --> 00:13:49,670
couple minutes left I don't know if

00:13:45,860 --> 00:13:52,990
there's any any questions or if

00:13:49,670 --> 00:13:58,250
everything was I said was crystal clear

00:13:52,990 --> 00:14:01,250
yep very good good so just repeating the

00:13:58,250 --> 00:14:03,230
question for the audience so the

00:14:01,250 --> 00:14:05,389
question is that if I'm if I have a

00:14:03,230 --> 00:14:06,889
service if I'm a developer of a service

00:14:05,389 --> 00:14:08,750
like it that I've is a service and I

00:14:06,889 --> 00:14:10,610
want to integrate my service and

00:14:08,750 --> 00:14:12,889
distributed through cloud foundry I have

00:14:10,610 --> 00:14:15,320
two choices I can either go directly and

00:14:12,889 --> 00:14:18,860
implement a service broker and and be

00:14:15,320 --> 00:14:21,350
added directly to the to a specific CF

00:14:18,860 --> 00:14:24,949
instance or I can integrate AB direct

00:14:21,350 --> 00:14:26,300
and be distributed to to through the

00:14:24,949 --> 00:14:28,670
service brokers who AB direct service

00:14:26,300 --> 00:14:33,170
broker to two different different

00:14:28,670 --> 00:14:34,579
deployment so the the goodness like did

00:14:33,170 --> 00:14:38,120
we think about standardizing the the

00:14:34,579 --> 00:14:41,240
true approach and so far we haven't

00:14:38,120 --> 00:14:44,060
really so the app direct marketplace

00:14:41,240 --> 00:14:45,470
actually serves more use case than then

00:14:44,060 --> 00:14:48,050
Cloud Foundry so we have a lot of

00:14:45,470 --> 00:14:50,029
services that are distributed through

00:14:48,050 --> 00:14:51,410
like a web interface through which which

00:14:50,029 --> 00:14:53,329
are not rated at all to to Cloud Foundry

00:14:51,410 --> 00:14:56,120
like we have a marketplace for staples

00:14:53,329 --> 00:14:57,709
for Comcast and in those cases it the

00:14:56,120 --> 00:14:59,420
crowdfunding model doesn't always make

00:14:57,709 --> 00:15:01,819
sense directly it cannot be directly

00:14:59,420 --> 00:15:03,170
applied to those marketplaces so for

00:15:01,819 --> 00:15:06,010
those we still need to have like our

00:15:03,170 --> 00:15:08,720
standard way of distributing services I

00:15:06,010 --> 00:15:10,519
guess we could in a future version we

00:15:08,720 --> 00:15:13,069
could think about like trying to

00:15:10,519 --> 00:15:15,019
simplify us analyze it for to make it

00:15:13,069 --> 00:15:17,329
more seamless to go from one to the

00:15:15,019 --> 00:15:19,550
other but I guess when I stand like so

00:15:17,329 --> 00:15:22,310
much of a priority but the other thing

00:15:19,550 --> 00:15:22,930
is that integrating to AB direct not

00:15:22,310 --> 00:15:25,570
only this

00:15:22,930 --> 00:15:27,880
enables a service provider to be

00:15:25,570 --> 00:15:30,149
distributed to any kind of platform

00:15:27,880 --> 00:15:32,980
deployment but we can also distribute

00:15:30,149 --> 00:15:36,640
services to other marketplaces which are

00:15:32,980 --> 00:15:38,350
not necessarily a cloud foundry so the

00:15:36,640 --> 00:15:39,700
question is like if if you are a service

00:15:38,350 --> 00:15:41,649
provider and you integrate to aunty

00:15:39,700 --> 00:15:43,240
right do you have to do more work to be

00:15:41,649 --> 00:15:45,640
distributed on multiple marketplaces and

00:15:43,240 --> 00:15:47,560
the answer is no that's that's really

00:15:45,640 --> 00:15:49,600
one of the one of the main advantage of

00:15:47,560 --> 00:15:52,270
one of the very proposition of abdi

00:15:49,600 --> 00:15:54,700
right is that as a service provider you

00:15:52,270 --> 00:15:58,450
do a single integration to AB direct you

00:15:54,700 --> 00:16:01,180
now then part of the of the object

00:15:58,450 --> 00:16:03,040
master catalog and your service can be

00:16:01,180 --> 00:16:05,529
then redistributed without any kind of

00:16:03,040 --> 00:16:08,529
any change at all through any class or

00:16:05,529 --> 00:16:10,540
any marketplace to Rackspace - staples

00:16:08,529 --> 00:16:14,680
and any other on the marketplace that

00:16:10,540 --> 00:16:16,870
will be that will be partnering with so

00:16:14,680 --> 00:16:19,779
the question is where are we running the

00:16:16,870 --> 00:16:22,330
the cloud the service broker so

00:16:19,779 --> 00:16:24,279
currently for information like AB dirac

00:16:22,330 --> 00:16:27,550
is the is deployed so the service broker

00:16:24,279 --> 00:16:29,320
is part of the AB direct application or

00:16:27,550 --> 00:16:32,290
platform and this platform is currently

00:16:29,320 --> 00:16:34,209
running on the on on multiple multiple

00:16:32,290 --> 00:16:36,760
infrastructure we are running on on

00:16:34,209 --> 00:16:39,209
Amazon was a grocer running on Rackspace

00:16:36,760 --> 00:16:41,820
and we have couple other other

00:16:39,209 --> 00:16:44,830
infrastructures where we're running it

00:16:41,820 --> 00:16:47,410
so the question is whether in impact

00:16:44,830 --> 00:16:50,650
when you may get from v1 to v2 on our

00:16:47,410 --> 00:16:52,690
existing data so the answer is actually

00:16:50,650 --> 00:16:56,380
no there was so that was a very very

00:16:52,690 --> 00:16:57,700
seamless migration all the data was

00:16:56,380 --> 00:17:00,550
already stored with all the information

00:16:57,700 --> 00:17:03,040
so some of the data that needs to be a

00:17:00,550 --> 00:17:06,370
that needs to be stored by a break when

00:17:03,040 --> 00:17:08,980
a service is provided or created is is

00:17:06,370 --> 00:17:11,230
the gooood for the service who is the

00:17:08,980 --> 00:17:14,439
service sorry which space is this

00:17:11,230 --> 00:17:17,559
service created in and all the data was

00:17:14,439 --> 00:17:18,939
already stored as part of the v1 broad

00:17:17,559 --> 00:17:21,520
current rotation we did a year ago

00:17:18,939 --> 00:17:23,500
so we migrated that's what was mentioned

00:17:21,520 --> 00:17:25,870
it was really just an interface change

00:17:23,500 --> 00:17:27,699
where the the schema of the recent

00:17:25,870 --> 00:17:29,470
slightly was changed which changed the

00:17:27,699 --> 00:17:32,890
authentication mechanism from all two

00:17:29,470 --> 00:17:34,510
basic O's but in terms of data all the

00:17:32,890 --> 00:17:36,210
registry exactly the same

00:17:34,510 --> 00:17:40,600
and it was really a very seamless

00:17:36,210 --> 00:17:43,150
transition all right I don't know I

00:17:40,600 --> 00:17:44,830
think we are getting close to the next

00:17:43,150 --> 00:17:48,460
speaker and is any other questions

00:17:44,830 --> 00:17:51,749
[Applause]

00:17:48,460 --> 00:17:51,749

YouTube URL: https://www.youtube.com/watch?v=Z0f5lw6lE6w


