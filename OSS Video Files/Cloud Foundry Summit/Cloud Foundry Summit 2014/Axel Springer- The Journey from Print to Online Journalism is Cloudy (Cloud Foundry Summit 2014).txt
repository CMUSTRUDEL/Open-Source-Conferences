Title: Axel Springer- The Journey from Print to Online Journalism is Cloudy (Cloud Foundry Summit 2014)
Publication date: 2014-07-03
Playlist: Cloud Foundry Summit 2014
Description: 
	Keynote presented by Lajos Lange, Head of Online Development, Axel Springer; Matthias Naber, Software Engineer, Axel Springer; and Tore Sagstuen, CTO, FjordIT.

In order to ensure diverse, independent and high quality journalism in the future there is a need to rethink the classic publisher business while IT has to become part of the core products. On the way to digital transformation, we have to adapt to agile methodologies, and historically grown, complex infrastructures have to be reinvented in order to speed up the development process. With Cloud Foundry, we realized our vision of an innovative, fully automated service delivery platform by accelerating the time and quantity to market rate and reducing IT costs at the same time. The service oriented nature of the PaaS approach enables a modularization strategy for applications. We will discuss how Cloud Foundry's capabilities helped to establish a culture of prototyping in combination with continuous delivery and business intelligence in order to form minimal viable products.
Captions: 
	00:00:00,930 --> 00:00:04,220
[Music]

00:00:07,570 --> 00:00:25,850
[Music]

00:00:23,510 --> 00:00:28,909
Neiman got the opposite animal job

00:00:25,850 --> 00:00:28,909
[Music]

00:00:31,060 --> 00:00:36,510
today Apple is going to reinvent the

00:00:34,480 --> 00:00:36,510
phone

00:00:36,680 --> 00:00:47,270
mr. Gorbachev tear down this wall for

00:00:44,330 --> 00:00:49,310
the vanity knowledge at Facebook is just

00:00:47,270 --> 00:00:51,860
how people connect and communicate more

00:00:49,310 --> 00:00:55,450
efficiently here we had one spunky ism

00:00:51,860 --> 00:01:18,740
bands indeed yes

00:00:55,450 --> 00:01:24,780
[Music]

00:01:18,740 --> 00:01:27,890
hi I'm Leo I'm working for axis finger

00:01:24,780 --> 00:01:30,689
in Germany we are located in Berlin and

00:01:27,890 --> 00:01:36,240
I'm the head of our online development

00:01:30,689 --> 00:01:39,000
department of develop so and as you have

00:01:36,240 --> 00:01:43,409
seen in the previous movie we are taking

00:01:39,000 --> 00:01:47,610
care about news so currently we are

00:01:43,409 --> 00:01:53,130
responsible for about 6 different kind

00:01:47,610 --> 00:01:56,039
of news portals yes and this is only a

00:01:53,130 --> 00:02:01,259
subset of a lot of other digital brands

00:01:56,039 --> 00:02:03,959
we are own so a short question to the

00:02:01,259 --> 00:02:06,689
audience who actually knows access

00:02:03,959 --> 00:02:09,750
Springer yeah can I get a hand sign Wow

00:02:06,689 --> 00:02:12,260
all right more than I expected but

00:02:09,750 --> 00:02:14,970
anyway I give you a short introduction

00:02:12,260 --> 00:02:19,890
so except Springer founded his

00:02:14,970 --> 00:02:24,000
publishing house in 1946 in a small

00:02:19,890 --> 00:02:27,450
warehouse in in Hamburg and it grew to

00:02:24,000 --> 00:02:31,200
one of the biggest publishing houses in

00:02:27,450 --> 00:02:33,620
Europe and nowadays we have more than

00:02:31,200 --> 00:02:37,400
twelve thousand eight hundred employees

00:02:33,620 --> 00:02:40,590
operating in more than 40 countries and

00:02:37,400 --> 00:02:44,840
we are leading currently the the German

00:02:40,590 --> 00:02:48,090
print market but as you might also heard

00:02:44,840 --> 00:02:50,600
the classical journalism is currently

00:02:48,090 --> 00:02:54,440
really facing the digital transformation

00:02:50,600 --> 00:02:57,569
so there are different kind of prints in

00:02:54,440 --> 00:02:59,430
in Germany that had to shut down the

00:02:57,569 --> 00:03:04,350
business like the Frankfurt oven show or

00:02:59,430 --> 00:03:06,269
the Financial Times Germany there are

00:03:04,350 --> 00:03:10,319
other brands like the Newsweek and la

00:03:06,269 --> 00:03:14,060
tribuna that that had to stop the print

00:03:10,319 --> 00:03:17,790
production and also the Washington Post

00:03:14,060 --> 00:03:19,109
one of the newspapers said is will that

00:03:17,790 --> 00:03:21,900
is really standing for high quality

00:03:19,109 --> 00:03:26,909
journalism have been bored

00:03:21,900 --> 00:03:29,420
Jeff besos the CEO of Amazon and we are

00:03:26,909 --> 00:03:34,560
currently we we don't know what this

00:03:29,420 --> 00:03:36,870
means to the high quality journalism so

00:03:34,560 --> 00:03:39,720
our mission is actually to save the

00:03:36,870 --> 00:03:43,940
diverse independent and high quality

00:03:39,720 --> 00:03:46,019
journalism also in a digital world and

00:03:43,940 --> 00:03:48,720
access springer is actually doing very

00:03:46,019 --> 00:03:51,870
well so when you take a look on the

00:03:48,720 --> 00:03:57,650
revenues on the total revenues in 2008

00:03:51,870 --> 00:04:00,989
only 14% came from the digital area and

00:03:57,650 --> 00:04:02,910
already five years later half of our

00:04:00,989 --> 00:04:06,930
total revenues came from the digital

00:04:02,910 --> 00:04:11,340
sector so how does access bring a did

00:04:06,930 --> 00:04:15,959
this change so quickly so everything

00:04:11,340 --> 00:04:18,239
started in 2006 when access springer

00:04:15,959 --> 00:04:22,800
started to invest in the digital

00:04:18,239 --> 00:04:26,520
transformation so on the one hand side

00:04:22,800 --> 00:04:30,150
we acquire a different kind of online

00:04:26,520 --> 00:04:34,080
companies so like real estate portal

00:04:30,150 --> 00:04:38,430
called mo net a price comparison engine

00:04:34,080 --> 00:04:42,510
called a diallo or StepStone a job

00:04:38,430 --> 00:04:46,289
portal and many many more on the other

00:04:42,510 --> 00:04:48,930
hand we also grew organically so this

00:04:46,289 --> 00:04:53,280
means that we also created our own

00:04:48,930 --> 00:04:55,770
digital brands there are a lot and we

00:04:53,280 --> 00:04:58,380
also invested in a lot of different kind

00:04:55,770 --> 00:04:59,970
of startups and currently it's really a

00:04:58,380 --> 00:05:02,580
great time at access springer because

00:04:59,970 --> 00:05:05,160
every one to two months there are new

00:05:02,580 --> 00:05:09,780
come companies that are joining access

00:05:05,160 --> 00:05:13,250
springer family so but actually we are

00:05:09,780 --> 00:05:19,169
not only industry that is facing the

00:05:13,250 --> 00:05:22,440
digital transformation so also other

00:05:19,169 --> 00:05:24,750
industries are have to deal with this

00:05:22,440 --> 00:05:30,630
with this issue so let me introduce you

00:05:24,750 --> 00:05:35,430
now to to the CTO of your tighty thank

00:05:30,630 --> 00:05:38,610
you yes hi everyone I'm Torah at purity

00:05:35,430 --> 00:05:40,200
purity we are delivering infrastructure

00:05:38,610 --> 00:05:42,530
as a service platform as a service

00:05:40,200 --> 00:05:44,460
software as a service for lawyers and

00:05:42,530 --> 00:05:46,320
materials that we will meet afterwards

00:05:44,460 --> 00:05:48,030
we are delivering infrastructure as a

00:05:46,320 --> 00:05:50,820
service and of course Cloud Foundry

00:05:48,030 --> 00:05:53,190
since since since you are here we've

00:05:50,820 --> 00:05:55,970
been doing that for for quite a long

00:05:53,190 --> 00:05:58,830
time but we also in these transition

00:05:55,970 --> 00:06:02,400
projects there is always away from A to

00:05:58,830 --> 00:06:04,260
B and that doesn't happen like this just

00:06:02,400 --> 00:06:08,190
over overnight so we actually teamed

00:06:04,260 --> 00:06:09,720
with with the previous vendors of oxygen

00:06:08,190 --> 00:06:11,520
Springer the got the guys delivering

00:06:09,720 --> 00:06:14,820
paper so paper is the analog

00:06:11,520 --> 00:06:17,610
distribution of papers or not own papers

00:06:14,820 --> 00:06:19,830
or newspapers and be about the digital

00:06:17,610 --> 00:06:23,760
platform so we are working together with

00:06:19,830 --> 00:06:25,350
norske Skog that's that's a global paper

00:06:23,760 --> 00:06:27,870
mill they have a very poor were

00:06:25,350 --> 00:06:30,660
demanding industry so are we they have a

00:06:27,870 --> 00:06:34,500
lot of space we need space so we teamed

00:06:30,660 --> 00:06:36,660
up with them to do transition for all

00:06:34,500 --> 00:06:39,570
the media companies from paper to

00:06:36,660 --> 00:06:42,000
digital over a time or over a number of

00:06:39,570 --> 00:06:43,500
years and then being able to have the

00:06:42,000 --> 00:06:46,410
track record from from the paper

00:06:43,500 --> 00:06:50,670
industry and adding the new sales term

00:06:46,410 --> 00:06:52,620
like the digital digital platform so a

00:06:50,670 --> 00:06:56,490
little bit more about fewer IT as you

00:06:52,620 --> 00:06:58,860
see we have been around since 97 we did

00:06:56,490 --> 00:07:02,010
a lot of different things we even added

00:06:58,860 --> 00:07:04,170
some weight over time but at least we

00:07:02,010 --> 00:07:05,460
got three years ago we started looking

00:07:04,170 --> 00:07:07,710
at what what should we do next what's

00:07:05,460 --> 00:07:10,560
the next wave in IT so we looked at

00:07:07,710 --> 00:07:14,340
cloud cloud is obviously coming becoming

00:07:10,560 --> 00:07:16,710
a big trend moving forward I'm gonna

00:07:14,340 --> 00:07:18,510
talk about what can we do to

00:07:16,710 --> 00:07:22,650
differentiate from the big players like

00:07:18,510 --> 00:07:24,750
IBM or HP or or whoever so so what is

00:07:22,650 --> 00:07:27,450
the benefit of being in Norway what is

00:07:24,750 --> 00:07:28,170
the benefit of having the paper mills on

00:07:27,450 --> 00:07:32,100
our side

00:07:28,170 --> 00:07:35,130
it's a hydropower in Norway we have 98.5

00:07:32,100 --> 00:07:37,980
percent on the power grid is renewable

00:07:35,130 --> 00:07:40,440
so it's from the waterfalls and we

00:07:37,980 --> 00:07:42,390
actually have a waterfall and a hydro

00:07:40,440 --> 00:07:44,460
plant on our facility where we are

00:07:42,390 --> 00:07:47,400
building the the datacenter is not in

00:07:44,460 --> 00:07:48,449
the data center but close by so we don't

00:07:47,400 --> 00:07:50,430
have water queue

00:07:48,449 --> 00:07:53,070
we actually have our own patented free

00:07:50,430 --> 00:07:55,350
cooling so we don't use any energy on

00:07:53,070 --> 00:07:58,440
cooling of the of the service or the

00:07:55,350 --> 00:08:01,410
data center that's also a little bit due

00:07:58,440 --> 00:08:04,169
to that Norway is way up north and it's

00:08:01,410 --> 00:08:07,169
not as hot it's as in San Francisco some

00:08:04,169 --> 00:08:10,169
say or further down south but we don't

00:08:07,169 --> 00:08:13,440
use any any power on cooling so that's

00:08:10,169 --> 00:08:16,740
20% down on the power consumption we

00:08:13,440 --> 00:08:19,410
only do renewable energy so that's also

00:08:16,740 --> 00:08:21,600
a very very good good thing that means

00:08:19,410 --> 00:08:24,210
that we can fight the cost level of the

00:08:21,600 --> 00:08:26,039
big international players and we can

00:08:24,210 --> 00:08:28,889
scale our datacenter to these paper

00:08:26,039 --> 00:08:31,949
mills in in no ski school so we can

00:08:28,889 --> 00:08:35,460
build rapidly a large number of data

00:08:31,949 --> 00:08:38,909
center facilities I don't know you're

00:08:35,460 --> 00:08:40,979
all aware of environmental issues that

00:08:38,909 --> 00:08:42,779
you should be at least everyone is

00:08:40,979 --> 00:08:44,310
living on this planet so we should

00:08:42,779 --> 00:08:47,220
definitely care about it

00:08:44,310 --> 00:08:50,240
we as IT industry we passed the air

00:08:47,220 --> 00:08:55,320
traffic with a carbon footprint in 2007

00:08:50,240 --> 00:08:56,880
so we are polluting a lot if the data

00:08:55,320 --> 00:08:58,950
center business was across the country

00:08:56,880 --> 00:09:01,200
we will be consuming the same amount of

00:08:58,950 --> 00:09:03,390
power as Germany does today so it's a

00:09:01,200 --> 00:09:07,589
huge industry and you know that the

00:09:03,390 --> 00:09:10,650
cloud cloud offerings is rapidly growing

00:09:07,589 --> 00:09:13,080
so if we keeping up at this pace we will

00:09:10,650 --> 00:09:15,089
destroy the planet so it's important to

00:09:13,080 --> 00:09:17,550
do the right thing about about

00:09:15,089 --> 00:09:19,440
datacenters and if you come to your IT

00:09:17,550 --> 00:09:20,760
you can be all be a part of that story

00:09:19,440 --> 00:09:22,709
so that's a good thing

00:09:20,760 --> 00:09:25,800
Lyle's are chosen that a long time ago

00:09:22,709 --> 00:09:28,410
so this is just to summarize the D what

00:09:25,800 --> 00:09:31,830
we do at at if your IT infrastructure

00:09:28,410 --> 00:09:33,510
platform software as a service in a

00:09:31,830 --> 00:09:36,000
cloud delivery model cloud business

00:09:33,510 --> 00:09:39,200
model and that cloud thing is what you

00:09:36,000 --> 00:09:42,510
are concerned about a little bit cloudy

00:09:39,200 --> 00:09:45,690
what we can deliver and actually also

00:09:42,510 --> 00:09:48,890
what we can execute on so back to you

00:09:45,690 --> 00:09:48,890
all right thanks

00:09:54,950 --> 00:10:00,050
so in our opinions away from print to

00:09:57,990 --> 00:10:03,480
online driven journalism is cloudy

00:10:00,050 --> 00:10:03,810
so I'm now very pleased to present to

00:10:03,480 --> 00:10:06,780
you now

00:10:03,810 --> 00:10:11,550
the our cloud project where we introduce

00:10:06,780 --> 00:10:13,500
Cloud Foundry to our company so when you

00:10:11,550 --> 00:10:18,330
take a look on the current system

00:10:13,500 --> 00:10:21,240
infrastructure of de velde you you will

00:10:18,330 --> 00:10:24,090
find a very complex and also

00:10:21,240 --> 00:10:27,240
historically grown infrastructure with a

00:10:24,090 --> 00:10:29,490
big monolithic content management system

00:10:27,240 --> 00:10:37,290
where a lot of our features have been

00:10:29,490 --> 00:10:40,980
implemented inside so furthermore we we

00:10:37,290 --> 00:10:43,380
our software components having a very

00:10:40,980 --> 00:10:46,350
low test coverage we have something

00:10:43,380 --> 00:10:48,900
between 6 and 13 13%

00:10:46,350 --> 00:10:53,040
so really bad so we really have to deal

00:10:48,900 --> 00:10:56,910
with let you see code we have a very low

00:10:53,040 --> 00:10:58,800
degree of process automation there so

00:10:56,910 --> 00:11:01,050
somehow you could compare our current

00:10:58,800 --> 00:11:06,030
situation with the production line from

00:11:01,050 --> 00:11:08,700
Volkswagen here in the 60s so somehow

00:11:06,030 --> 00:11:12,900
productive but still a lot of hard

00:11:08,700 --> 00:11:16,650
manual work and obviously not any more

00:11:12,900 --> 00:11:19,290
state-of-the-art so this is a production

00:11:16,650 --> 00:11:22,080
line of debate so nothing very special

00:11:19,290 --> 00:11:24,660
we having a existing piece of software

00:11:22,080 --> 00:11:26,190
we are doing a change there or we

00:11:24,660 --> 00:11:28,260
creating a new piece of software we

00:11:26,190 --> 00:11:31,920
building our software we rolling it out

00:11:28,260 --> 00:11:34,050
on to our test stage then we run our

00:11:31,920 --> 00:11:36,960
little automated test suite against it

00:11:34,050 --> 00:11:40,590
and then we have a lot of efforts in

00:11:36,960 --> 00:11:43,260
manual testing and finally we roll out

00:11:40,590 --> 00:11:45,480
everything again onto a production

00:11:43,260 --> 00:11:49,560
system and there we run all the tests

00:11:45,480 --> 00:11:52,110
again against production system so the

00:11:49,560 --> 00:11:58,020
whole process takes us currently about

00:11:52,110 --> 00:12:01,170
14 men hours and actually about 70% of

00:11:58,020 --> 00:12:03,390
the overall process is manual work so

00:12:01,170 --> 00:12:07,200
this is a production line of four

00:12:03,390 --> 00:12:09,149
today fully automated and this was

00:12:07,200 --> 00:12:12,000
actually actually also the goal for our

00:12:09,149 --> 00:12:15,240
cloud project to create a fully

00:12:12,000 --> 00:12:17,820
automated production line so let's have

00:12:15,240 --> 00:12:19,170
a deeper look into the requirements we

00:12:17,820 --> 00:12:24,420
had on an innovative service

00:12:19,170 --> 00:12:26,760
architecture so first of all we we

00:12:24,420 --> 00:12:29,490
wanted to increase our time and quantity

00:12:26,760 --> 00:12:32,600
to market right and at the same time we

00:12:29,490 --> 00:12:35,040
wanted to reduce our operational cost

00:12:32,600 --> 00:12:39,690
furthermore we want to be able to really

00:12:35,040 --> 00:12:43,019
quickly react on change requests on bug

00:12:39,690 --> 00:12:47,220
reports and feature requests we also

00:12:43,019 --> 00:12:50,640
wanted to invest in a mandatory software

00:12:47,220 --> 00:12:53,190
quality quality standards and as I told

00:12:50,640 --> 00:12:56,310
you before we have a lot of different

00:12:53,190 --> 00:12:59,610
kind of subsidiaries and currently they

00:12:56,310 --> 00:13:02,250
are all disconnected so also all IT

00:12:59,610 --> 00:13:04,950
departments are disconnected and we

00:13:02,250 --> 00:13:07,260
recognize actually that that cloud

00:13:04,950 --> 00:13:11,279
foundry could be a perfect synergy

00:13:07,260 --> 00:13:14,430
enabler to share services so our vision

00:13:11,279 --> 00:13:16,949
for this project was to create a cloud

00:13:14,430 --> 00:13:22,050
based service platform that supports a

00:13:16,949 --> 00:13:25,589
rapid development process so we want to

00:13:22,050 --> 00:13:28,500
be able to we are to receive all these

00:13:25,589 --> 00:13:30,149
crazy ideas from our editors from our

00:13:28,500 --> 00:13:32,459
business units and also from our

00:13:30,149 --> 00:13:34,949
developers putting them on our new

00:13:32,459 --> 00:13:36,870
production line running them to our new

00:13:34,949 --> 00:13:39,930
service fabric and blowing them out

00:13:36,870 --> 00:13:42,209
really quickly to the market so let me

00:13:39,930 --> 00:13:44,430
introduce you now to matias naba

00:13:42,209 --> 00:13:46,890
who is one of our leading engineers in

00:13:44,430 --> 00:13:49,140
for this cloud project and he will tell

00:13:46,890 --> 00:13:51,769
you know more about how we drove our

00:13:49,140 --> 00:13:55,290
vision to become reality

00:13:51,769 --> 00:13:57,269
yeah Thank You Lars so I will be

00:13:55,290 --> 00:14:00,390
covering the more technical part of this

00:13:57,269 --> 00:14:03,779
case study so let me start with what

00:14:00,390 --> 00:14:06,510
we've done in early 2013 we started our

00:14:03,779 --> 00:14:08,670
evaluation process so as you can see on

00:14:06,510 --> 00:14:14,860
the slide we had some contestants for

00:14:08,670 --> 00:14:16,900
what cloud we may base our future on

00:14:14,860 --> 00:14:19,360
so we did some criterias that you would

00:14:16,900 --> 00:14:21,550
expect from such a software system when

00:14:19,360 --> 00:14:24,520
it comes to the majority of the product

00:14:21,550 --> 00:14:28,240
the quality of the documentation of

00:14:24,520 --> 00:14:30,940
course the pricing scale scaling

00:14:28,240 --> 00:14:33,070
capabilities and technical capabilities

00:14:30,940 --> 00:14:33,820
at the end of this process we came up

00:14:33,070 --> 00:14:36,460
with two winners

00:14:33,820 --> 00:14:38,490
the first one is Cloud Foundry and the

00:14:36,460 --> 00:14:42,910
second one is for public clouds Hiroko

00:14:38,490 --> 00:14:44,470
then there was another criteria we

00:14:42,910 --> 00:14:45,910
called the ID ability so they're

00:14:44,470 --> 00:14:49,120
responsible and sustainable the

00:14:45,910 --> 00:14:50,650
treatment of data I'm pretty sure you

00:14:49,120 --> 00:14:53,260
all heard of this and it's a thing that

00:14:50,650 --> 00:14:55,420
happened like a year ago there is this

00:14:53,260 --> 00:14:57,780
prison project and yes and as a spying

00:14:55,420 --> 00:15:01,210
there's this Patriot Act and in the

00:14:57,780 --> 00:15:04,090
United States and so we decided what we

00:15:01,210 --> 00:15:06,900
had to decide to use a private cloud for

00:15:04,090 --> 00:15:09,940
installation in a European data center

00:15:06,900 --> 00:15:12,610
so to again remember where we came from

00:15:09,940 --> 00:15:15,580
we had a content management system in

00:15:12,610 --> 00:15:19,510
the center of our environment and we are

00:15:15,580 --> 00:15:20,200
pretty much bound to a Java development

00:15:19,510 --> 00:15:23,470
process

00:15:20,200 --> 00:15:25,510
it means Java and J's peeps there was

00:15:23,470 --> 00:15:27,670
nothing else to do so was a read pretty

00:15:25,510 --> 00:15:31,570
pretty slow development process it was

00:15:27,670 --> 00:15:34,920
hard to do that a cynic as such is

00:15:31,570 --> 00:15:37,540
pretty slow and doesn't scale very well

00:15:34,920 --> 00:15:40,000
so having chosen cloud Fermi is our

00:15:37,540 --> 00:15:42,010
platform of the cloud platform we have

00:15:40,000 --> 00:15:44,050
now been giving a world lot of

00:15:42,010 --> 00:15:46,480
opportunities to choose whichever

00:15:44,050 --> 00:15:48,760
technology will like whatever

00:15:46,480 --> 00:15:51,760
programming language we like and

00:15:48,760 --> 00:15:56,050
whatever framework we like thanks to

00:15:51,760 --> 00:16:01,120
dozens of gulp eggs supplied by pivotal

00:15:56,050 --> 00:16:03,430
or the community so what did we usually

00:16:01,120 --> 00:16:06,430
do when we started the project we had to

00:16:03,430 --> 00:16:09,150
fill forms we had to our servers way to

00:16:06,430 --> 00:16:12,610
care about IP addresses we had to maybe

00:16:09,150 --> 00:16:15,520
ordered some database space it took days

00:16:12,610 --> 00:16:17,110
it was annoying then after that of

00:16:15,520 --> 00:16:19,500
course the operating system had to be

00:16:17,110 --> 00:16:22,750
patch servers has to be installed

00:16:19,500 --> 00:16:25,090
configured again it took days at the end

00:16:22,750 --> 00:16:28,090
maybe you have to scale increase memory

00:16:25,090 --> 00:16:28,680
CPU and Christy instances that again was

00:16:28,090 --> 00:16:31,290
the next path

00:16:28,680 --> 00:16:34,470
thing but now with Cloud Foundry we

00:16:31,290 --> 00:16:37,350
shrink it down to minutes only minutes

00:16:34,470 --> 00:16:40,430
and we now can concentrate on the thing

00:16:37,350 --> 00:16:43,440
we like the most is developing software

00:16:40,430 --> 00:16:45,720
so let's have a deeper dive into the

00:16:43,440 --> 00:16:51,959
infrastructure part and I hand over once

00:16:45,720 --> 00:16:53,640
more to Torah one more slide so we're

00:16:51,959 --> 00:16:56,010
doing the infrastructure as a service

00:16:53,640 --> 00:16:58,380
layer and on top of that path of course

00:16:56,010 --> 00:17:00,810
but we were very happy to hear that the

00:16:58,380 --> 00:17:02,970
s AP and HP on the stage yesterday I

00:17:00,810 --> 00:17:04,170
said that if you have a pulse layer if

00:17:02,970 --> 00:17:06,540
you have Cloud Foundry that's all we

00:17:04,170 --> 00:17:08,459
need to deliver our services we couldn't

00:17:06,540 --> 00:17:10,709
be more agree you didn't agree more or

00:17:08,459 --> 00:17:11,910
more to that the infrastructure beneath

00:17:10,709 --> 00:17:14,010
the infrastructure as a service is

00:17:11,910 --> 00:17:15,569
becoming commoditized so there are there

00:17:14,010 --> 00:17:17,850
are things that that need to be in place

00:17:15,569 --> 00:17:20,400
you have to be able to scale orchestrate

00:17:17,850 --> 00:17:22,470
and do the right thing but we also think

00:17:20,400 --> 00:17:24,569
that this is where the place where you

00:17:22,470 --> 00:17:26,250
put your sustainability the green part

00:17:24,569 --> 00:17:29,400
making sure that you do the right thing

00:17:26,250 --> 00:17:31,950
on that level and then just handing it

00:17:29,400 --> 00:17:34,050
over to the guys doing the post layer

00:17:31,950 --> 00:17:36,300
and undo the applications and services

00:17:34,050 --> 00:17:38,850
on top of it so we use vblocks today

00:17:36,300 --> 00:17:41,070
you're moving not away from it but

00:17:38,850 --> 00:17:42,540
adding to it with the open compute and

00:17:41,070 --> 00:17:51,600
we have the open source and we have the

00:17:42,540 --> 00:17:54,510
more enterprise way of doing so I go so

00:17:51,600 --> 00:17:57,510
let me continue with the software of the

00:17:54,510 --> 00:18:00,150
platform there what we have today is a

00:17:57,510 --> 00:18:05,059
installation of culinary version 1.1 at

00:18:00,150 --> 00:18:09,300
the data center of purity we have some

00:18:05,059 --> 00:18:12,330
logging provided previously you heard

00:18:09,300 --> 00:18:14,550
there is plank we decided to use log

00:18:12,330 --> 00:18:17,309
stash is also connected to the lock

00:18:14,550 --> 00:18:19,559
aggregator of cloud foundry and then we

00:18:17,309 --> 00:18:21,809
use some external services we have data

00:18:19,559 --> 00:18:24,510
connected to the borsch health monitor

00:18:21,809 --> 00:18:27,150
and the Cloud Foundry collector - just

00:18:24,510 --> 00:18:29,130
getting metrics out of the system then

00:18:27,150 --> 00:18:32,700
we have Pingdom to check the general

00:18:29,130 --> 00:18:35,070
availability of cloud forming and our

00:18:32,700 --> 00:18:36,929
applications and last but not least we

00:18:35,070 --> 00:18:40,350
have pager duty this is a bridge into

00:18:36,929 --> 00:18:42,330
operation stuff that they may take

00:18:40,350 --> 00:18:44,310
action if something is wrong

00:18:42,330 --> 00:18:46,200
so back in the data center we also

00:18:44,310 --> 00:18:49,050
installed some infrastructure which is

00:18:46,200 --> 00:18:51,180
mostly databases and messaging and these

00:18:49,050 --> 00:18:53,670
components are interconnected to Cloud

00:18:51,180 --> 00:18:59,400
Foundry already so called user provided

00:18:53,670 --> 00:19:03,320
services so with this system given we

00:18:59,400 --> 00:19:06,630
now have to approach the software

00:19:03,320 --> 00:19:09,120
development process so we have to change

00:19:06,630 --> 00:19:12,330
the software paradeen on how software

00:19:09,120 --> 00:19:14,880
gets implemented we came from a as I

00:19:12,330 --> 00:19:17,250
said Java based environment low test

00:19:14,880 --> 00:19:19,950
coverage the ultimate ization there's

00:19:17,250 --> 00:19:21,720
this monolithic CMS in the center and we

00:19:19,950 --> 00:19:23,730
have to change all of this we have to

00:19:21,720 --> 00:19:26,100
increase the code coverage we have to

00:19:23,730 --> 00:19:29,120
automate everything and the goal was to

00:19:26,100 --> 00:19:31,860
introduce a continuous delivery workflow

00:19:29,120 --> 00:19:34,710
so as we are mainly still Java

00:19:31,860 --> 00:19:37,620
developers we use tools like Jenkins

00:19:34,710 --> 00:19:41,490
Nexus owner cubed won't surprise us we

00:19:37,620 --> 00:19:42,960
use cradle as our build tool and there's

00:19:41,490 --> 00:19:45,600
been a great talk of Gradle we're

00:19:42,960 --> 00:19:47,990
already introduced how you could

00:19:45,600 --> 00:19:51,360
implement a continuous delivery pipeline

00:19:47,990 --> 00:19:53,460
based on Gradle so we took that as an

00:19:51,360 --> 00:19:56,880
inspiration and combine that with the

00:19:53,460 --> 00:19:59,880
also very awesome Cloud Foundry Gradle

00:19:56,880 --> 00:20:03,840
plugin and build this continuous

00:19:59,880 --> 00:20:06,030
delivery pipeline so upon a commit for a

00:20:03,840 --> 00:20:08,670
developer we compile a unit test we do

00:20:06,030 --> 00:20:09,570
integration tests we do disco dollars

00:20:08,670 --> 00:20:11,700
with sonarqube

00:20:09,570 --> 00:20:13,620
and then we build our artifact that

00:20:11,700 --> 00:20:16,050
artifact gets shipped to a certain stage

00:20:13,620 --> 00:20:18,630
get then test it again and if everything

00:20:16,050 --> 00:20:20,850
is okay we do is zero downtime

00:20:18,630 --> 00:20:23,070
green/blue deployment with the Gradle

00:20:20,850 --> 00:20:26,250
plugin we repeat that from stage to

00:20:23,070 --> 00:20:27,750
stage and it's a process of only 10

00:20:26,250 --> 00:20:30,240
minutes to get a change that the

00:20:27,750 --> 00:20:33,090
developer has made to a production

00:20:30,240 --> 00:20:36,930
system safely and securely with the

00:20:33,090 --> 00:20:39,240
required security that it will work so

00:20:36,930 --> 00:20:41,820
let me summarize what we have after

00:20:39,240 --> 00:20:45,030
several months of using cloud memory and

00:20:41,820 --> 00:20:45,900
stuff as a negative points data doc this

00:20:45,030 --> 00:20:49,170
most

00:20:45,900 --> 00:20:52,290
collection of the metrics it has not yet

00:20:49,170 --> 00:20:54,030
been released it is therefore not very

00:20:52,290 --> 00:20:56,220
well documented you have to dig through

00:20:54,030 --> 00:20:59,700
some github early

00:20:56,220 --> 00:21:02,610
commits and just yeah analyze how it's

00:20:59,700 --> 00:21:04,649
working it's pretty unstable so far but

00:21:02,610 --> 00:21:06,960
we hope that gets some Drive in the

00:21:04,649 --> 00:21:10,019
future you get it more stable because

00:21:06,960 --> 00:21:11,610
it's a really important instrument to

00:21:10,019 --> 00:21:17,370
see what's happening inside Cloud

00:21:11,610 --> 00:21:19,350
Foundry so then at some point was like

00:21:17,370 --> 00:21:23,250
two months ago we tried to upgrade 12

00:21:19,350 --> 00:21:25,559
21.0 to 1.1 and was a big hassle there

00:21:23,250 --> 00:21:27,419
was more for every installation than an

00:21:25,559 --> 00:21:30,000
upgrade process it was pretty

00:21:27,419 --> 00:21:31,289
frustrating and time-consuming we're

00:21:30,000 --> 00:21:35,370
hoping that the next upgrade to version

00:21:31,289 --> 00:21:40,169
1.2 is released like several weeks ago

00:21:35,370 --> 00:21:43,409
will be much smoother then there's

00:21:40,169 --> 00:21:45,779
services it although sadly some issues

00:21:43,409 --> 00:21:50,549
with that it was let's take for example

00:21:45,779 --> 00:21:52,740
RabbitMQ we ran into a problem

00:21:50,549 --> 00:21:54,750
installed RabbitMQ via the pivotal

00:21:52,740 --> 00:21:56,820
culinary and we couldn't bind the app

00:21:54,750 --> 00:22:00,330
and he service created to the

00:21:56,820 --> 00:22:02,370
application so we contacted to the

00:22:00,330 --> 00:22:03,960
customer support and we had selects two

00:22:02,370 --> 00:22:06,480
solutions to one was reinstall

00:22:03,960 --> 00:22:08,309
everything which again is pretty

00:22:06,480 --> 00:22:11,190
frustrating or even wait for the next

00:22:08,309 --> 00:22:13,409
release to come this would be twenty one

00:22:11,190 --> 00:22:16,139
point two and meant to wait several

00:22:13,409 --> 00:22:20,250
weeks for it update and then of course

00:22:16,139 --> 00:22:22,590
posh funny store we tried to test these

00:22:20,250 --> 00:22:24,659
of healing capabilities of Cloud Foundry

00:22:22,590 --> 00:22:26,220
and play cows monkeys

00:22:24,659 --> 00:22:28,230
so we randomly shutting down some

00:22:26,220 --> 00:22:30,899
components and it turned out that isn't

00:22:28,230 --> 00:22:35,880
a good idea to open a root shell into a

00:22:30,899 --> 00:22:37,649
DA and type hard into the shell the

00:22:35,880 --> 00:22:40,620
system went down and never went up again

00:22:37,649 --> 00:22:43,460
sadly ok there was a testing system but

00:22:40,620 --> 00:22:45,840
so let's come to the positive sides

00:22:43,460 --> 00:22:48,840
stability apart from the thing I told

00:22:45,840 --> 00:22:51,419
you we had virtually no downtime so far

00:22:48,840 --> 00:22:56,370
we're running twenty several month now

00:22:51,419 --> 00:22:59,130
not a single downtime just awesome then

00:22:56,370 --> 00:23:01,799
the maintenance this bull system is only

00:22:59,130 --> 00:23:02,940
operated by two people one of them is me

00:23:01,799 --> 00:23:06,389
and I'm really happy that they don't

00:23:02,940 --> 00:23:08,549
have to do it very much it's really the

00:23:06,389 --> 00:23:09,690
right system very complex and only two

00:23:08,549 --> 00:23:13,560
people needed to

00:23:09,690 --> 00:23:15,360
do this work great also great the next

00:23:13,560 --> 00:23:17,550
thing is community if you ever have

00:23:15,360 --> 00:23:19,770
contacted the mailing list you got a

00:23:17,550 --> 00:23:21,930
great feedback thanks for that

00:23:19,770 --> 00:23:23,520
then our developer feedback they're

00:23:21,930 --> 00:23:25,290
really looking forward to use cloud for

00:23:23,520 --> 00:23:27,270
me they're really happy to leave the

00:23:25,290 --> 00:23:29,010
average ASP based environment that

00:23:27,270 --> 00:23:30,480
they're now in and looking forward to

00:23:29,010 --> 00:23:34,350
have this world bunch of opportunities

00:23:30,480 --> 00:23:36,450
to develop their software's and last but

00:23:34,350 --> 00:23:37,920
not least the monitor monitoring

00:23:36,450 --> 00:23:41,210
capabilities of cloud for me are also

00:23:37,920 --> 00:23:43,830
awesome once you get data running and

00:23:41,210 --> 00:23:46,190
blocks running you have a great insight

00:23:43,830 --> 00:23:49,650
into what is happening in cloud running

00:23:46,190 --> 00:23:52,620
really good thing to have if you run

00:23:49,650 --> 00:23:54,750
productive system with that so what else

00:23:52,620 --> 00:23:56,460
is there we are looking forward for this

00:23:54,750 --> 00:24:00,120
auto-scaling features that came with

00:23:56,460 --> 00:24:03,030
cloud 21.2 to even be more resource

00:24:00,120 --> 00:24:04,740
efficient then there will be a file

00:24:03,030 --> 00:24:06,510
system service which is also nice to

00:24:04,740 --> 00:24:12,530
have to have the persistent file storage

00:24:06,510 --> 00:24:15,600
for applications and then there is the

00:24:12,530 --> 00:24:17,970
investigation in how we could use hybrid

00:24:15,600 --> 00:24:22,710
clouds for applications that do not

00:24:17,970 --> 00:24:26,460
require a private data so large would

00:24:22,710 --> 00:24:28,020
you be so kind yeah all right so before

00:24:26,460 --> 00:24:31,500
I finish up the talk I really want to

00:24:28,020 --> 00:24:34,050
take the opportunity to say thanks to

00:24:31,500 --> 00:24:36,300
the Cloud Foundry community because you

00:24:34,050 --> 00:24:38,550
really helped us to make a tremendous

00:24:36,300 --> 00:24:42,990
step forward so thank you very much for

00:24:38,550 --> 00:24:46,890
that so we didn't talk so far about

00:24:42,990 --> 00:24:49,650
software as a service so also here's a

00:24:46,890 --> 00:24:55,650
car industry is offering us a very nice

00:24:49,650 --> 00:24:58,200
analogy folks one created MQB they call

00:24:55,650 --> 00:25:02,370
it also the platform so this is his nice

00:24:58,200 --> 00:25:04,890
metal frame and this metal frame is

00:25:02,370 --> 00:25:07,830
actually used for different kind of car

00:25:04,890 --> 00:25:12,110
classes so a folks wagon Passat has the

00:25:07,830 --> 00:25:12,110
same platform as a Skoda Octavia and

00:25:12,890 --> 00:25:20,190
furthermore Volkswagen went one step

00:25:18,090 --> 00:25:23,590
beyond they also took care about a

00:25:20,190 --> 00:25:25,390
modular ization strategy so this means

00:25:23,590 --> 00:25:27,669
that whenever they create now a new

00:25:25,390 --> 00:25:30,309
feature for their car they think about

00:25:27,669 --> 00:25:32,740
what could be the generic part of my

00:25:30,309 --> 00:25:36,630
feature that I can reuse for different

00:25:32,740 --> 00:25:39,820
kind of car classes and this is actually

00:25:36,630 --> 00:25:43,240
that what we also had in mind in order

00:25:39,820 --> 00:25:46,600
to cooperate with our subsidiaries so in

00:25:43,240 --> 00:25:48,640
the near future we really want to create

00:25:46,600 --> 00:25:51,100
the software as a service layer with

00:25:48,640 --> 00:25:53,409
different kind of services like a

00:25:51,100 --> 00:25:56,919
community services location-based

00:25:53,409 --> 00:25:59,980
services image scaling services whatever

00:25:56,919 --> 00:26:01,419
comes in our mind and future and then we

00:25:59,980 --> 00:26:04,090
have a lot of different kind of apps

00:26:01,419 --> 00:26:08,890
coming from our different kind of brands

00:26:04,090 --> 00:26:11,140
and subsidiaries and so we are really

00:26:08,890 --> 00:26:14,049
looking forward that we are now having a

00:26:11,140 --> 00:26:16,750
common platform where we are able to

00:26:14,049 --> 00:26:19,929
share our services and in order to also

00:26:16,750 --> 00:26:24,429
reduce yeah

00:26:19,929 --> 00:26:30,779
to also reduce our resources our not

00:26:24,429 --> 00:26:35,020
resources our the cost so we are going

00:26:30,779 --> 00:26:38,169
we are currently starting to create a

00:26:35,020 --> 00:26:40,029
new access springer marketplace by

00:26:38,169 --> 00:26:42,970
providing a service repository some of

00:26:40,029 --> 00:26:47,980
the services matías already mentioned so

00:26:42,970 --> 00:26:50,669
we integrated MySQL MongoDB RabbitMQ we

00:26:47,980 --> 00:26:54,850
are currently working on elasticsearch

00:26:50,669 --> 00:26:56,559
and we have also these C services

00:26:54,850 --> 00:26:58,690
application to roofing services in mind

00:26:56,559 --> 00:27:02,080
like a voting module or image scaling

00:26:58,690 --> 00:27:07,000
service or push service for mobile

00:27:02,080 --> 00:27:10,960
devices all right so let's have a short

00:27:07,000 --> 00:27:15,669
look on our future work so what we also

00:27:10,960 --> 00:27:18,279
want to achieve is to introduce the

00:27:15,669 --> 00:27:20,860
culture of prototyping to our company in

00:27:18,279 --> 00:27:22,510
the way that we are creating or

00:27:20,860 --> 00:27:27,610
implementing the beta measure learn

00:27:22,510 --> 00:27:31,899
cycle so whenever we are now creating

00:27:27,610 --> 00:27:33,370
new features we really try to create a

00:27:31,899 --> 00:27:36,340
minimal Viable Product

00:27:33,370 --> 00:27:37,210
that we are really quickly delivering to

00:27:36,340 --> 00:27:40,870
the market

00:27:37,210 --> 00:27:44,980
and then we really have to measure how

00:27:40,870 --> 00:27:47,290
the user behaves in order to learn how

00:27:44,980 --> 00:27:50,140
does a user accept our feature can we

00:27:47,290 --> 00:27:53,860
improve our feature so in order to

00:27:50,140 --> 00:27:56,740
improve the minimal Viable Product so

00:27:53,860 --> 00:27:59,910
with the help of Cloud Foundry we we

00:27:56,740 --> 00:28:02,860
were very easily able to establish

00:27:59,910 --> 00:28:04,750
continuous delivery and what we are

00:28:02,860 --> 00:28:07,660
currently missing is a business

00:28:04,750 --> 00:28:11,890
intelligence system so we have two

00:28:07,660 --> 00:28:13,090
projects going on oneness about tracking

00:28:11,890 --> 00:28:15,280
so different kind of tracking

00:28:13,090 --> 00:28:18,220
technologies in order to create reports

00:28:15,280 --> 00:28:21,040
and then we have a very nice project

00:28:18,220 --> 00:28:23,350
together was optimized me going on so

00:28:21,040 --> 00:28:27,700
Optimizely is taking care about web

00:28:23,350 --> 00:28:34,600
about a/b testing and say offering now a

00:28:27,700 --> 00:28:36,910
very nice API in order to adopt a be

00:28:34,600 --> 00:28:39,340
testing also to your established

00:28:36,910 --> 00:28:42,130
processes so it's actually very nice and

00:28:39,340 --> 00:28:46,600
they have a very comfortable user

00:28:42,130 --> 00:28:50,980
interface to analyze your the results of

00:28:46,600 --> 00:28:54,060
your IB tests so you see except spring

00:28:50,980 --> 00:28:56,140
RS on a really interesting and and

00:28:54,060 --> 00:28:58,900
exciting journey and it's really great

00:28:56,140 --> 00:29:00,570
to be part of this journey currently and

00:28:58,900 --> 00:29:05,110
[Music]

00:29:00,570 --> 00:29:08,440
but I have to say if you want to be

00:29:05,110 --> 00:29:12,580
successful we evolution is really the

00:29:08,440 --> 00:29:15,370
key and child starvin said once in a

00:29:12,580 --> 00:29:18,100
time that not the strongest species will

00:29:15,370 --> 00:29:20,350
survive and also not the most

00:29:18,100 --> 00:29:23,770
intelligent species will survive there

00:29:20,350 --> 00:29:26,650
is a one that is able to easily adapt to

00:29:23,770 --> 00:29:28,690
changes and this is actually how we also

00:29:26,650 --> 00:29:31,930
behave we're always looking for the next

00:29:28,690 --> 00:29:34,300
step forward thank you

00:29:31,930 --> 00:29:35,450
[Applause]

00:29:34,300 --> 00:29:37,110
[Music]

00:29:35,450 --> 00:29:40,390
[Applause]

00:29:37,110 --> 00:29:40,390

YouTube URL: https://www.youtube.com/watch?v=-uC1J8lSUUc


