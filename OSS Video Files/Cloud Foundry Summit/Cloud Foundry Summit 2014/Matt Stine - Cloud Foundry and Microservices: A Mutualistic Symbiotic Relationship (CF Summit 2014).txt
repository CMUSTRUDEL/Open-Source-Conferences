Title: Matt Stine - Cloud Foundry and Microservices: A Mutualistic Symbiotic Relationship (CF Summit 2014)
Publication date: 2014-07-18
Playlist: Cloud Foundry Summit 2014
Description: 
	Technical track breakout session presented by Matt Stine, Platform Engineer, Cloud Foundry, Pivotal.

With businesses built around software now disrupting multiple industries that appeared to have stable leaders, the need has emerged for enterprises to create "software factories" built around the following principles:

-Streaming customer feedback directly into rapid, iterative cycles of application development
-Horizontally scaling applications to meet user demand
-Compatibility with an enormous diversity of clients, with mobility (smartphones, tablets, etc.) taking the lead
-Continuous delivery of value, shrinking the cycle time from concept to cash

Infrastructure has taken the lead in adapting to meet these needs with the move to the cloud, and Platform as a Service (PaaS) has raised the level of abstraction to a focus on an ecosystem of applications and services. However, most applications are still developed as if we're living in the previous generation of both business and infrastructure: the monolithic application. Microservices - small, loosely coupled applications that follow the Unix philosophy of "doing one thing well" - represent the application development side of enabling rapid, iterative development, horizontal scale, polyglot clients, and continuous delivery. They also enable us to scale application development and eliminate long term commitments to a single technology stack.

While microservices are simple, they are certainly not easy. It's recently been said that "microservices are not a free lunch". Interestingly enough, if you look at the concerns expressed here about microservices, you'll find that they are exactly the challenges that a PaaS is intended to address. So while microservices do not necessarily imply cloud (and vice versa), there is in fact a symbiotic relationship between the two, with each approach somehow compensating for the limitations of the other, much like the practices of eXtreme Programming.
YouTube URL: https://www.youtube.com/watch?v=RGZefc92tZs


