Title: Lessons Learned from Corelogic's Year of Agile Development with Cloud Foundry
Publication date: 2015-05-13
Playlist: Cloud Foundry Summit 2015
Description: 
	Lessons Learned from Corelogic's Year of Agile Development with Cloud Foundry - 01 Richard Leurig 720p
Captions: 
	00:00:00,030 --> 00:00:03,899
okay hello everyone good morning I'm

00:00:02,340 --> 00:00:05,430
Richard Blake and I'm the senior vice

00:00:03,899 --> 00:00:10,260
president for innovation development

00:00:05,430 --> 00:00:11,460
center at CoreLogic we are a company

00:00:10,260 --> 00:00:13,920
that I'll get into a little bit of the

00:00:11,460 --> 00:00:15,330
details in in a moment one of the things

00:00:13,920 --> 00:00:17,070
that I wanted to do and highlight for

00:00:15,330 --> 00:00:19,230
everyone is that we will cover QA

00:00:17,070 --> 00:00:20,699
towards the end but we have a very

00:00:19,230 --> 00:00:22,560
strong contingent of people here from

00:00:20,699 --> 00:00:24,199
core logic running the gambit from

00:00:22,560 --> 00:00:26,550
architecture software engineering

00:00:24,199 --> 00:00:28,349
infrastructure and DevOps and so I

00:00:26,550 --> 00:00:30,210
welcome everyone in the spirit of cloud

00:00:28,349 --> 00:00:32,219
foundry summit and collaborating and

00:00:30,210 --> 00:00:33,570
sharing information that you you meet

00:00:32,219 --> 00:00:35,219
with these folks several of them are

00:00:33,570 --> 00:00:37,950
down here in the front row brando from

00:00:35,219 --> 00:00:39,629
devops william and erik from the

00:00:37,950 --> 00:00:41,370
infrastructure architecture and security

00:00:39,629 --> 00:00:43,290
areas and then Tim Steele one of our

00:00:41,370 --> 00:00:45,120
senior architects and software engineers

00:00:43,290 --> 00:00:47,460
who's been involved with cloud foundry

00:00:45,120 --> 00:00:49,410
since we started the project February

00:00:47,460 --> 00:00:52,379
4th of last year on our first product we

00:00:49,410 --> 00:00:54,420
developed on cloud foundry so a lot of

00:00:52,379 --> 00:00:56,940
people always ask what is core logic and

00:00:54,420 --> 00:00:58,350
some what we are an enigma to most of

00:00:56,940 --> 00:01:01,140
the people outside of the industry's

00:00:58,350 --> 00:01:03,420
where we service products and serve up

00:01:01,140 --> 00:01:06,060
our data and analytics our vision is to

00:01:03,420 --> 00:01:07,880
deliver unique property level insights

00:01:06,060 --> 00:01:10,189
the power the global real estate economy

00:01:07,880 --> 00:01:12,900
really what that means for us is

00:01:10,189 --> 00:01:15,299
discernible differences in analytics

00:01:12,900 --> 00:01:17,640
data platforms and data enabled

00:01:15,299 --> 00:01:21,180
solutions that service the mortgage

00:01:17,640 --> 00:01:23,250
lending space capital markets the real

00:01:21,180 --> 00:01:25,890
estate space specifically to Realtors

00:01:23,250 --> 00:01:28,530
and multiple listing services as well as

00:01:25,890 --> 00:01:30,299
in the insurance and to some degrees

00:01:28,530 --> 00:01:34,799
energy and oil and gas and our spatial

00:01:30,299 --> 00:01:37,799
businesses a little background CoreLogic

00:01:34,799 --> 00:01:40,049
looks at everything from a property

00:01:37,799 --> 00:01:43,590
level viewpoint we have characteristics

00:01:40,049 --> 00:01:46,229
analytics information and risk modeling

00:01:43,590 --> 00:01:47,790
around properties all things related to

00:01:46,229 --> 00:01:50,369
a property everything from how you pay

00:01:47,790 --> 00:01:52,049
your real estate taxes every year we pay

00:01:50,369 --> 00:01:53,909
a hundred and eleven billion dollars in

00:01:52,049 --> 00:01:56,250
real estate taxes on behalf of mortgage

00:01:53,909 --> 00:01:59,880
lenders and borrowers of theirs to

00:01:56,250 --> 00:02:01,860
relist to 23,000 taxing real estate or

00:01:59,880 --> 00:02:04,979
taxing jurisdictions across the United

00:02:01,860 --> 00:02:06,899
States every year we also service the

00:02:04,979 --> 00:02:08,310
insurance industry by delivering

00:02:06,899 --> 00:02:11,280
underwriting information for

00:02:08,310 --> 00:02:13,800
construction reconstruction value costs

00:02:11,280 --> 00:02:15,960
for a property so if you own a property

00:02:13,800 --> 00:02:17,940
own a house and you have to ensure that

00:02:15,960 --> 00:02:20,490
property for reconstruction in case of

00:02:17,940 --> 00:02:22,500
old fire we maintain on the zip code

00:02:20,490 --> 00:02:25,320
level all of the information required to

00:02:22,500 --> 00:02:27,600
reconstruct a certain type of house in a

00:02:25,320 --> 00:02:31,460
certain zip code on behalf of insurance

00:02:27,600 --> 00:02:34,020
companies we also manage the mobile and

00:02:31,460 --> 00:02:35,940
platform areas for the multiple listing

00:02:34,020 --> 00:02:37,650
services in the United States sixty-five

00:02:35,940 --> 00:02:39,600
percent of the multiple listing services

00:02:37,650 --> 00:02:42,960
in the United States either use our

00:02:39,600 --> 00:02:44,540
mobile platform or our hosted service

00:02:42,960 --> 00:02:46,650
platform from an application perspective

00:02:44,540 --> 00:02:48,660
so if you've bought a house you've

00:02:46,650 --> 00:02:50,130
probably really you know either had your

00:02:48,660 --> 00:02:52,530
if you sold a house the Multiple Listing

00:02:50,130 --> 00:02:54,540
Service has had your house on that

00:02:52,530 --> 00:02:55,200
listing service on it's usually through

00:02:54,540 --> 00:02:56,820
CoreLogic

00:02:55,200 --> 00:02:58,530
if you've bought a house you've probably

00:02:56,820 --> 00:03:00,210
received information on the houses that

00:02:58,530 --> 00:03:02,430
you were gonna buy and they were from

00:03:00,210 --> 00:03:04,290
CoreLogic so we house a lot of data a

00:03:02,430 --> 00:03:05,900
lot of information and what we do is we

00:03:04,290 --> 00:03:09,330
wrap around that data and information

00:03:05,900 --> 00:03:11,730
with applications platforms technology

00:03:09,330 --> 00:03:14,940
platforms but primarily analytics in

00:03:11,730 --> 00:03:18,750
order to deliver a unique type of

00:03:14,940 --> 00:03:21,390
experience for our customers so about

00:03:18,750 --> 00:03:23,100
two to two and a half years ago we

00:03:21,390 --> 00:03:24,690
embarked upon a journey to look at what

00:03:23,100 --> 00:03:26,700
is our next generation platform going to

00:03:24,690 --> 00:03:28,290
look like the first thing we did is we

00:03:26,700 --> 00:03:30,600
looked at the landscape of all of the

00:03:28,290 --> 00:03:33,570
applications that CoreLogic had and as

00:03:30,600 --> 00:03:35,370
you can see like many enterprise large

00:03:33,570 --> 00:03:37,440
enterprises we had a number of

00:03:35,370 --> 00:03:38,940
applications a number of technologies in

00:03:37,440 --> 00:03:41,040
fact we found that while we were

00:03:38,940 --> 00:03:43,530
surveying the landscape there wasn't a

00:03:41,040 --> 00:03:46,250
technology that we didn't like almost

00:03:43,530 --> 00:03:48,600
every database every operating system

00:03:46,250 --> 00:03:50,250
every you know everything that you could

00:03:48,600 --> 00:03:53,070
possibly imagine that had grown up

00:03:50,250 --> 00:03:54,570
organically over time from a number of

00:03:53,070 --> 00:03:56,670
acquired companies we had grown up

00:03:54,570 --> 00:03:58,950
through acquisition like many of you

00:03:56,670 --> 00:04:01,140
probably have and so we ended up with a

00:03:58,950 --> 00:04:04,020
lot of different technologies and so we

00:04:01,140 --> 00:04:06,540
we said well this is kind of a mess so

00:04:04,020 --> 00:04:07,980
we have two alternatives you know we

00:04:06,540 --> 00:04:09,450
were trying to build new products that

00:04:07,980 --> 00:04:11,940
were creative and innovative we were

00:04:09,450 --> 00:04:14,610
using innovation as a technology enabler

00:04:11,940 --> 00:04:15,930
for our business in order to bring new

00:04:14,610 --> 00:04:18,959
products to market in a much faster

00:04:15,930 --> 00:04:20,669
manner the problem was with you can see

00:04:18,959 --> 00:04:22,650
by burdened with all of these

00:04:20,669 --> 00:04:24,050
technologies and although the cost

00:04:22,650 --> 00:04:26,520
associated with these technologies

00:04:24,050 --> 00:04:28,130
building efficient new products was very

00:04:26,520 --> 00:04:31,650
very difficult for us

00:04:28,130 --> 00:04:32,790
so we said okay what do we want well the

00:04:31,650 --> 00:04:35,520
first thing we did is we looked at the

00:04:32,790 --> 00:04:38,070
industry and we said things have changed

00:04:35,520 --> 00:04:40,800
quite a bit everything as a service is a

00:04:38,070 --> 00:04:43,920
norm now you know these big mainframes

00:04:40,800 --> 00:04:47,130
iSeries you know big monolithic

00:04:43,920 --> 00:04:49,200
applications that's not the norm we had

00:04:47,130 --> 00:04:51,330
to look at as data services for our

00:04:49,200 --> 00:04:53,940
business how do we serve up data on a

00:04:51,330 --> 00:04:55,860
property to a product without having to

00:04:53,940 --> 00:04:57,030
go to ten different databases or ten

00:04:55,860 --> 00:05:00,210
different applications that we

00:04:57,030 --> 00:05:02,670
historically have had how do we build a

00:05:00,210 --> 00:05:04,770
services platform so that we can have

00:05:02,670 --> 00:05:06,900
common services like storing a document

00:05:04,770 --> 00:05:09,000
we store literally billions of documents

00:05:06,900 --> 00:05:11,580
and images based on the businesses that

00:05:09,000 --> 00:05:13,410
we're in but we do it about 50 or 60

00:05:11,580 --> 00:05:15,510
different ways we do security

00:05:13,410 --> 00:05:17,540
authentication on our web portals a

00:05:15,510 --> 00:05:20,730
hundred and twenty eight different ways

00:05:17,540 --> 00:05:22,590
so we said okay we're gonna do that do

00:05:20,730 --> 00:05:24,750
it differently what are people in the

00:05:22,590 --> 00:05:26,220
future doing and I coined the phrase

00:05:24,750 --> 00:05:28,350
when we started talking to different

00:05:26,220 --> 00:05:30,330
vendors we don't want five years ago we

00:05:28,350 --> 00:05:32,820
want five years from now where are

00:05:30,330 --> 00:05:34,920
things going how can we develop this as

00:05:32,820 --> 00:05:37,050
a service how can we focus our

00:05:34,920 --> 00:05:39,030
developers on the secret sauce of core

00:05:37,050 --> 00:05:41,100
logic and less on this behemoth

00:05:39,030 --> 00:05:44,520
monolithic monolithic infrastructure

00:05:41,100 --> 00:05:45,810
that we have so we looked at some design

00:05:44,520 --> 00:05:47,669
principles and we said what are we

00:05:45,810 --> 00:05:49,830
trying to build for well we want our

00:05:47,669 --> 00:05:52,740
developers no longer focused on tweaking

00:05:49,830 --> 00:05:57,180
settings and web logic or understanding

00:05:52,740 --> 00:05:58,919
how Red Hat Linux works or OS 400 or db2

00:05:57,180 --> 00:06:01,080
or ADA base or any of those myriad of

00:05:58,919 --> 00:06:03,000
other things that we had we want user

00:06:01,080 --> 00:06:05,100
experience framework where our users

00:06:03,000 --> 00:06:06,320
have a better experience in consuming

00:06:05,100 --> 00:06:08,580
products from CoreLogic

00:06:06,320 --> 00:06:10,980
especially in their businesses because

00:06:08,580 --> 00:06:13,130
our customers are not predominantly

00:06:10,980 --> 00:06:15,510
consumers but there are other businesses

00:06:13,130 --> 00:06:17,430
we want two components separated from

00:06:15,510 --> 00:06:18,450
the application really when you look at

00:06:17,430 --> 00:06:20,010
this it's it's kind of like a

00:06:18,450 --> 00:06:22,140
service-oriented architecture but we

00:06:20,010 --> 00:06:24,200
landed upon micro services as being a

00:06:22,140 --> 00:06:26,880
new paradigm that we wanted to move to

00:06:24,200 --> 00:06:28,350
we looked at the flexibility enabled by

00:06:26,880 --> 00:06:29,580
standard technologies if you're

00:06:28,350 --> 00:06:31,230
developing things with standard

00:06:29,580 --> 00:06:33,660
technologies developing new products

00:06:31,230 --> 00:06:35,669
will be quicker we looked at reusability

00:06:33,660 --> 00:06:39,330
and all of the illah T's you know we

00:06:35,669 --> 00:06:41,039
wanted it kind of from from a resiliency

00:06:39,330 --> 00:06:41,400
perspective from every perspective we

00:06:41,039 --> 00:06:42,870
wanted

00:06:41,400 --> 00:06:44,610
to be from the very beginning you can

00:06:42,870 --> 00:06:47,490
imagine with this legacy of applications

00:06:44,610 --> 00:06:49,020
every application did not have dr did

00:06:47,490 --> 00:06:52,229
not have business continuity was not

00:06:49,020 --> 00:06:54,270
elastic to any of our our demands from a

00:06:52,229 --> 00:06:56,340
compute perspective we wanted that built

00:06:54,270 --> 00:06:58,259
in and we wanted to run on multiple

00:06:56,340 --> 00:07:00,690
infrastructures as a service so we're

00:06:58,259 --> 00:07:02,610
primarily a vmware shop but we wanted to

00:07:00,690 --> 00:07:05,310
be take the opportunity to move things

00:07:02,610 --> 00:07:06,810
to AWS if we wanted or any other new

00:07:05,310 --> 00:07:11,340
infrastructure as a service that came

00:07:06,810 --> 00:07:14,460
about we basically created an

00:07:11,340 --> 00:07:16,260
architecture model there's a lot more

00:07:14,460 --> 00:07:17,910
detail behind this architecture model

00:07:16,260 --> 00:07:20,310
kind of in a reference architecture type

00:07:17,910 --> 00:07:22,020
of framework but from a from a user

00:07:20,310 --> 00:07:23,880
perspective this is how it looks we

00:07:22,020 --> 00:07:27,300
wanted engagement with our users through

00:07:23,880 --> 00:07:29,250
mobile and through web to be common we

00:07:27,300 --> 00:07:32,699
wanted common services underlying that

00:07:29,250 --> 00:07:34,770
where we were able to order all products

00:07:32,699 --> 00:07:36,120
through all portals or through all b2b

00:07:34,770 --> 00:07:39,210
connections or through all mobile

00:07:36,120 --> 00:07:41,310
devices underlying that we wanted the

00:07:39,210 --> 00:07:43,710
core logic data repository or a data

00:07:41,310 --> 00:07:46,380
lake that allowed core logic data

00:07:43,710 --> 00:07:47,550
products to be consumed by our products

00:07:46,380 --> 00:07:49,650
without having to try to figure out

00:07:47,550 --> 00:07:51,750
where the data for that product might

00:07:49,650 --> 00:07:53,430
come from and then we wanted it to run

00:07:51,750 --> 00:07:55,050
on our Dell dedicated cloud now we had

00:07:53,430 --> 00:07:56,880
outsourced to our data centers and when

00:07:55,050 --> 00:07:59,699
we started this we're in the process of

00:07:56,880 --> 00:08:02,430
moving to a Dell dedicated private cloud

00:07:59,699 --> 00:08:05,639
environment running on VMware technology

00:08:02,430 --> 00:08:08,099
and what we wanted is to make sure that

00:08:05,639 --> 00:08:13,349
this would run on that but also run on

00:08:08,099 --> 00:08:15,210
other infrastructures as a service we

00:08:13,349 --> 00:08:17,610
engaged a number of Technology experts

00:08:15,210 --> 00:08:19,710
and we looked at a number of things from

00:08:17,610 --> 00:08:21,930
I mean I have to tell you there were

00:08:19,710 --> 00:08:23,400
some legacy technology vendors that had

00:08:21,930 --> 00:08:25,860
a pretty good story and we're able to do

00:08:23,400 --> 00:08:27,810
pocs on applications that we wanted but

00:08:25,860 --> 00:08:29,220
when you pull back the covers and looked

00:08:27,810 --> 00:08:30,990
at what those technologies were there

00:08:29,220 --> 00:08:33,690
were five or ten year old technologies

00:08:30,990 --> 00:08:36,659
they couldn't run in cloud they couldn't

00:08:33,690 --> 00:08:38,370
elastically scale it was a very very big

00:08:36,659 --> 00:08:40,409
problem for some of the legacy vendors

00:08:38,370 --> 00:08:42,150
that we talked to we also talked to some

00:08:40,409 --> 00:08:45,779
of the emerging technology vendors

00:08:42,150 --> 00:08:47,300
Oracle I mean Google Salesforce and what

00:08:45,779 --> 00:08:50,130
FORSCOM had to offer

00:08:47,300 --> 00:08:52,380
AWS we talked to about how we could use

00:08:50,130 --> 00:08:54,900
AWS and AWS services to build this

00:08:52,380 --> 00:08:57,060
platform we stumbled across

00:08:54,900 --> 00:08:59,280
quite frankly we we didn't quite

00:08:57,060 --> 00:09:00,920
understand why EMC was contacting us

00:08:59,280 --> 00:09:03,900
when we embarked upon this two years ago

00:09:00,920 --> 00:09:06,000
because they didn't really have a good

00:09:03,900 --> 00:09:08,010
what I called elevator pitch you know

00:09:06,000 --> 00:09:09,750
they said trust us you want to talk to

00:09:08,010 --> 00:09:13,020
us and we said okay we may waste a day

00:09:09,750 --> 00:09:14,640
but we'll talk to you and then we met

00:09:13,020 --> 00:09:16,530
the pivotal guys and then we went to

00:09:14,640 --> 00:09:19,260
pivotal labs and then we looked at cloud

00:09:16,530 --> 00:09:21,510
foundry outside of that paradigm really

00:09:19,260 --> 00:09:23,640
just cloud foundry as a standalone pass

00:09:21,510 --> 00:09:25,410
and we started to find that very

00:09:23,640 --> 00:09:26,910
interesting we also were a very big Red

00:09:25,410 --> 00:09:28,520
Hat customer so we started to look at

00:09:26,910 --> 00:09:33,000
things like open shift and OpenStack

00:09:28,520 --> 00:09:34,020
from the Red Hat perspective and and we

00:09:33,000 --> 00:09:36,270
looked at the whole thing including

00:09:34,020 --> 00:09:38,430
market adoption and to be honest you

00:09:36,270 --> 00:09:40,230
know none of the emerging technologies

00:09:38,430 --> 00:09:42,120
at that point had huge market adoption

00:09:40,230 --> 00:09:44,610
we ran POCs and they were very close

00:09:42,120 --> 00:09:46,950
between red hat and pivotal but we felt

00:09:44,610 --> 00:09:49,190
like there was like a 360 degree view

00:09:46,950 --> 00:09:52,050
that pivotal brought to bear on this

00:09:49,190 --> 00:09:53,700
this was more than just a technology

00:09:52,050 --> 00:09:55,230
transformation it was a business

00:09:53,700 --> 00:09:57,660
transformation it was how we could

00:09:55,230 --> 00:09:59,640
deliver products faster Cloud Foundry

00:09:57,660 --> 00:10:01,380
was a huge part of that this is Cloud

00:09:59,640 --> 00:10:03,650
Foundry Summit and we'd be remiss and

00:10:01,380 --> 00:10:06,030
not saying without Cloud Foundry

00:10:03,650 --> 00:10:07,080
underlying what we're doing you know a

00:10:06,030 --> 00:10:08,190
lot of the things that we've been able

00:10:07,080 --> 00:10:10,290
to do in the last year wouldn't be

00:10:08,190 --> 00:10:12,540
possible but we also engaged pivotal

00:10:10,290 --> 00:10:17,880
from a pivotal labs perspective and a

00:10:12,540 --> 00:10:20,130
pivotal big data suite perspective so

00:10:17,880 --> 00:10:22,650
since 2014 we embarked upon our first

00:10:20,130 --> 00:10:25,410
project our first product February 4th

00:10:22,650 --> 00:10:27,300
of 2014 originally using our legacy

00:10:25,410 --> 00:10:31,710
technologies that product was going to

00:10:27,300 --> 00:10:34,260
go to market about right now using twice

00:10:31,710 --> 00:10:36,950
as many software engineers and using an

00:10:34,260 --> 00:10:39,690
entire QA team it was going to take to

00:10:36,950 --> 00:10:41,430
this day after February 4th for us to

00:10:39,690 --> 00:10:44,130
launch the product and get revenue in

00:10:41,430 --> 00:10:49,110
the door we started February 4th to 2014

00:10:44,130 --> 00:10:52,170
we went production live July 1st 2014 we

00:10:49,110 --> 00:10:53,910
used six software engineers paired we

00:10:52,170 --> 00:10:56,460
used one user experience designer and we

00:10:53,910 --> 00:10:58,100
used one product manager now those user

00:10:56,460 --> 00:11:01,050
experience and product managers were

00:10:58,100 --> 00:11:02,730
basically also paired at times as they

00:11:01,050 --> 00:11:04,860
were learning the pivotal methodology I

00:11:02,730 --> 00:11:06,420
think a big enablement for that was

00:11:04,860 --> 00:11:08,620
cloud foundry and not getting bogged

00:11:06,420 --> 00:11:11,110
down in our legacy infrastructures

00:11:08,620 --> 00:11:13,920
we built condo safe that was the first

00:11:11,110 --> 00:11:16,450
application then we went on to build

00:11:13,920 --> 00:11:18,100
condo safe as a condominium underwriting

00:11:16,450 --> 00:11:21,250
application for the mortgage lending

00:11:18,100 --> 00:11:23,590
space when we built a leasing manager

00:11:21,250 --> 00:11:26,280
which is a product used in multi tenant

00:11:23,590 --> 00:11:29,590
multifamily to manage an apartment

00:11:26,280 --> 00:11:30,970
workflow from when you basically pick an

00:11:29,590 --> 00:11:32,680
apartment that you want to rent to the

00:11:30,970 --> 00:11:34,060
time that you move in to eventually the

00:11:32,680 --> 00:11:36,400
time that you move out and everything in

00:11:34,060 --> 00:11:37,870
between it's a it will be eventually a

00:11:36,400 --> 00:11:39,490
full lifecycle product we've launched

00:11:37,870 --> 00:11:42,930
part of that leasing manager product now

00:11:39,490 --> 00:11:45,520
and Loan SafeConnect which is a fraud

00:11:42,930 --> 00:11:47,740
portal that helps mortgage lenders

00:11:45,520 --> 00:11:48,970
through the fraud remediation process as

00:11:47,740 --> 00:11:50,560
you're going through the origination

00:11:48,970 --> 00:11:52,240
process all three of those have been

00:11:50,560 --> 00:11:55,570
completed we're building two new

00:11:52,240 --> 00:11:58,750
products now that will go to market soon

00:11:55,570 --> 00:12:00,490
probably by mid-year and we're building

00:11:58,750 --> 00:12:03,220
two of the big components of our

00:12:00,490 --> 00:12:05,200
architecture now on cloud foundry one of

00:12:03,220 --> 00:12:07,240
which is the the biggest of which is our

00:12:05,200 --> 00:12:09,250
engagement services through my CoreLogic

00:12:07,240 --> 00:12:12,070
so what we're doing is we're bringing to

00:12:09,250 --> 00:12:14,380
bear and looking at personas of the

00:12:12,070 --> 00:12:16,570
individual customers that use our

00:12:14,380 --> 00:12:18,310
systems and we're trying to get from 27

00:12:16,570 --> 00:12:19,630
different portals over a hundred

00:12:18,310 --> 00:12:22,330
different security authentication

00:12:19,630 --> 00:12:24,400
methods down to a single portal but with

00:12:22,330 --> 00:12:26,620
a unique experience for every single

00:12:24,400 --> 00:12:28,090
customer that logs on and we're building

00:12:26,620 --> 00:12:29,320
all of that and the first version of

00:12:28,090 --> 00:12:33,070
that is actually being built right now

00:12:29,320 --> 00:12:35,410
on Cloud Foundry from an architecture

00:12:33,070 --> 00:12:37,810
perspective it's a little hard to read

00:12:35,410 --> 00:12:41,100
that but we've redacted any useful

00:12:37,810 --> 00:12:41,100
information from this that you might use

00:12:42,699 --> 00:12:48,470
but in all seriousness what we found is

00:12:46,519 --> 00:12:50,660
we we have found some learnings along

00:12:48,470 --> 00:12:52,310
the way with Cloud Foundry um some are

00:12:50,660 --> 00:12:54,980
really really good and probably exceeded

00:12:52,310 --> 00:12:57,949
our expectations other things still need

00:12:54,980 --> 00:12:59,329
some improvement from from an

00:12:57,949 --> 00:13:02,509
architecture perspective you see at the

00:12:59,329 --> 00:13:03,709
top our apache environment we originally

00:13:02,509 --> 00:13:06,620
thought that we were going to run Cloud

00:13:03,709 --> 00:13:08,180
Foundry foundation in the front end in a

00:13:06,620 --> 00:13:10,160
DMZ type of environment we're a very

00:13:08,180 --> 00:13:11,959
very secure company you can imagine

00:13:10,160 --> 00:13:15,019
working with underwriting you don't want

00:13:11,959 --> 00:13:17,930
your information lost so we were going

00:13:15,019 --> 00:13:20,300
to create kind of a DMZ tear within

00:13:17,930 --> 00:13:23,930
fountain with using foundation instead

00:13:20,300 --> 00:13:26,540
we've gone to an Apache type of a DMZ

00:13:23,930 --> 00:13:29,540
environment tips to basically isolate

00:13:26,540 --> 00:13:33,410
our Cloud Foundry applications from the

00:13:29,540 --> 00:13:35,240
Internet we we are still using Oracle

00:13:33,410 --> 00:13:37,610
RAC big debate inside of our company

00:13:35,240 --> 00:13:39,920
Oracle RAC as you know is not a cloud

00:13:37,610 --> 00:13:43,040
foundry service you can't dynamically

00:13:39,920 --> 00:13:45,019
provision Oracle RAC and you know we

00:13:43,040 --> 00:13:46,730
still have the encumber meant from an

00:13:45,019 --> 00:13:48,319
agile perspective from Oracle RAC on the

00:13:46,730 --> 00:13:50,660
backend but we have some very very high

00:13:48,319 --> 00:13:52,790
volume transaction databases we are in

00:13:50,660 --> 00:13:54,560
the process and have been under

00:13:52,790 --> 00:13:56,839
development for moving a lot of things

00:13:54,560 --> 00:13:58,670
over to HDFS using a polyglot of

00:13:56,839 --> 00:14:01,310
database technologies for our data Lake

00:13:58,670 --> 00:14:03,110
and that'll be coming out this year but

00:14:01,310 --> 00:14:05,240
any of our high-volume transaction

00:14:03,110 --> 00:14:09,860
processing workloads we're still running

00:14:05,240 --> 00:14:11,839
on Oracle RAC at this time from from the

00:14:09,860 --> 00:14:13,430
perspective of Dell we're running the

00:14:11,839 --> 00:14:16,250
infrastructure in the Dell VMware

00:14:13,430 --> 00:14:17,839
environment on our Dell private cloud it

00:14:16,250 --> 00:14:20,720
has been a little bit of a unique

00:14:17,839 --> 00:14:23,149
experience because we had out sourced to

00:14:20,720 --> 00:14:24,470
Dell so we had Dell involved with trying

00:14:23,149 --> 00:14:27,620
to figure out how to put Cloud Foundry

00:14:24,470 --> 00:14:28,910
on we had of course the people from

00:14:27,620 --> 00:14:30,410
pivotal that we're helping us and then

00:14:28,910 --> 00:14:32,449
we had our team coming up the learning

00:14:30,410 --> 00:14:33,769
curve last year about this time on how

00:14:32,449 --> 00:14:35,899
we were going to deploy this into a Dell

00:14:33,769 --> 00:14:37,579
environment all of that we've done

00:14:35,899 --> 00:14:39,740
successfully in fact our first

00:14:37,579 --> 00:14:42,380
application Kondo say if we developed up

00:14:39,740 --> 00:14:44,509
in the run pivotal environment and then

00:14:42,380 --> 00:14:45,860
we moved it over without changing the

00:14:44,509 --> 00:14:50,029
application once we had put Cloud

00:14:45,860 --> 00:14:52,339
Foundry into the Dell environment so

00:14:50,029 --> 00:14:53,420
lessons learned there's a number of them

00:14:52,339 --> 00:14:55,370
here and I'm going to go through them

00:14:53,420 --> 00:14:56,990
really quickly and highlight some things

00:14:55,370 --> 00:14:59,720
for the positives it's all the things

00:14:56,990 --> 00:15:01,600
you can imagine ease of application to

00:14:59,720 --> 00:15:03,530
deployment and scalability we've

00:15:01,600 --> 00:15:05,710
literally at the push of a button can

00:15:03,530 --> 00:15:07,730
scale up condo safe right now

00:15:05,710 --> 00:15:09,350
support for configurability of

00:15:07,730 --> 00:15:11,180
frameworks prepackaged in the build

00:15:09,350 --> 00:15:13,070
packs of course we're trying to err on

00:15:11,180 --> 00:15:15,140
the side of standardizing and keeping

00:15:13,070 --> 00:15:17,990
the build packs without any

00:15:15,140 --> 00:15:20,270
customization pivotal support for Cloud

00:15:17,990 --> 00:15:21,740
Foundry has been outstanding

00:15:20,270 --> 00:15:23,810
they've just been with us side by side

00:15:21,740 --> 00:15:26,120
every step along the way when we first

00:15:23,810 --> 00:15:27,440
went live you know we literally had

00:15:26,120 --> 00:15:30,380
mobile phone numbers and different

00:15:27,440 --> 00:15:31,790
things from the firm pivotal it was just

00:15:30,380 --> 00:15:32,990
a very very good experience and

00:15:31,790 --> 00:15:34,400
continues to be a good experience I

00:15:32,990 --> 00:15:35,960
wonder what it'll be like though when we

00:15:34,400 --> 00:15:38,690
have a thousand people on Cloud Foundry

00:15:35,960 --> 00:15:41,210
or 10,000 people on Cloud Foundry and

00:15:38,690 --> 00:15:43,760
then but I'm hoping it'll stay the same

00:15:41,210 --> 00:15:45,290
as that goes from an upgrade perspective

00:15:43,760 --> 00:15:47,390
they literally are push of the button

00:15:45,290 --> 00:15:49,190
and very straightforward the hardest

00:15:47,390 --> 00:15:51,050
thing though that we're finding is that

00:15:49,190 --> 00:15:52,400
we have to push them into foundation at

00:15:51,050 --> 00:15:54,770
the same time so we're running multiple

00:15:52,400 --> 00:15:56,420
applications so it's a little bit of

00:15:54,770 --> 00:15:58,550
scary when you're used to an environment

00:15:56,420 --> 00:16:00,230
where you do rolling or kind of staged

00:15:58,550 --> 00:16:04,820
upgrades across an applications

00:16:00,230 --> 00:16:06,170
portfolio easy integration with a lot of

00:16:04,820 --> 00:16:09,890
the tools that we use including spunk

00:16:06,170 --> 00:16:13,160
spunk and app dynamics on the areas for

00:16:09,890 --> 00:16:14,780
improvement recoverability is very good

00:16:13,160 --> 00:16:17,510
but there's still some concerns we have

00:16:14,780 --> 00:16:19,730
about and we have a very lengthy

00:16:17,510 --> 00:16:21,410
discussion about you know some of the

00:16:19,730 --> 00:16:22,850
things that we found our applications

00:16:21,410 --> 00:16:25,250
automatically restart when they have a

00:16:22,850 --> 00:16:27,290
problem which is great but sometimes

00:16:25,250 --> 00:16:29,380
that doesn't work as well as we it would

00:16:27,290 --> 00:16:31,640
expect or as we would expect it to work

00:16:29,380 --> 00:16:33,800
we would like a health dashboard that

00:16:31,640 --> 00:16:35,090
looks at the entire ecosystem a lot of

00:16:33,800 --> 00:16:38,420
people have developed those on their own

00:16:35,090 --> 00:16:39,620
we'd like it as part of the product we

00:16:38,420 --> 00:16:41,930
need more

00:16:39,620 --> 00:16:44,840
well backups is a good another good one

00:16:41,930 --> 00:16:47,000
to touch upon the documentation says do

00:16:44,840 --> 00:16:48,410
backups often do lots of backups and

00:16:47,000 --> 00:16:49,700
then there's a lengthy process that if

00:16:48,410 --> 00:16:52,280
you followed it would take a half a day

00:16:49,700 --> 00:16:53,720
so we automated that process and you

00:16:52,280 --> 00:16:55,490
know we're able to do it in a very short

00:16:53,720 --> 00:16:56,960
period of time but it really doesn't

00:16:55,490 --> 00:16:59,000
come out of the box with the product or

00:16:56,960 --> 00:17:01,610
with Cloud Foundry at this time we need

00:16:59,000 --> 00:17:03,710
finer grained controls around security

00:17:01,610 --> 00:17:05,420
it's just basically for our industry and

00:17:03,710 --> 00:17:08,959
our business it's too broad right now we

00:17:05,420 --> 00:17:10,339
have to give too broad of kind of remit

00:17:08,959 --> 00:17:13,100
to a number the people working on the

00:17:10,339 --> 00:17:14,959
system today and the admin function does

00:17:13,100 --> 00:17:16,939
not allow us to look at the details of

00:17:14,959 --> 00:17:18,409
those at the level we want in a very

00:17:16,939 --> 00:17:19,909
easy and seamless way so it's kind of

00:17:18,409 --> 00:17:21,199
like security needs to come up the

00:17:19,909 --> 00:17:23,390
learning curve a little bit in the Cloud

00:17:21,199 --> 00:17:25,390
Foundry world the other thing is we have

00:17:23,390 --> 00:17:27,289
environment variables that sometimes

00:17:25,390 --> 00:17:28,880
inadvertently because of the way the

00:17:27,289 --> 00:17:31,789
system works and the pass works are

00:17:28,880 --> 00:17:33,529
inadvertently exposed out to tools like

00:17:31,789 --> 00:17:36,590
app dynamics so things that we don't

00:17:33,529 --> 00:17:38,090
want necessarily to be in logs or out in

00:17:36,590 --> 00:17:40,940
an app dynamics world are actually

00:17:38,090 --> 00:17:44,539
exposed there in the clear areas of

00:17:40,940 --> 00:17:46,820
interest for us well very quickly we

00:17:44,539 --> 00:17:49,159
continue to look at how do we balance

00:17:46,820 --> 00:17:50,960
between a Cloud Foundry world agile

00:17:49,159 --> 00:17:52,309
development and quickly deploying with

00:17:50,960 --> 00:17:55,760
all of the enterprise standards we have

00:17:52,309 --> 00:17:57,049
the cab the change the change process so

00:17:55,760 --> 00:17:59,120
we're trying to converge our change

00:17:57,049 --> 00:18:01,130
process and what's required by our

00:17:59,120 --> 00:18:02,750
industry and by our customers in with

00:18:01,130 --> 00:18:05,270
this agile notion with this Cloud

00:18:02,750 --> 00:18:07,549
Foundry notion of quick development with

00:18:05,270 --> 00:18:10,220
a platform as a service and deploying it

00:18:07,549 --> 00:18:11,779
quickly the other thing is to be honest

00:18:10,220 --> 00:18:13,429
we have a really really difficult time

00:18:11,779 --> 00:18:16,039
telling our business users right now how

00:18:13,429 --> 00:18:18,140
much an application is going to cost and

00:18:16,039 --> 00:18:20,210
that's because with the elastic compute

00:18:18,140 --> 00:18:21,740
with the ability to scale up our

00:18:20,210 --> 00:18:23,270
applications but also because they're

00:18:21,740 --> 00:18:26,510
sharing a lot of the same environment

00:18:23,270 --> 00:18:27,830
and before we very costly but we had

00:18:26,510 --> 00:18:29,390
individual environments for all these

00:18:27,830 --> 00:18:32,000
applications now we're putting all of

00:18:29,390 --> 00:18:34,010
these products core logic has into kind

00:18:32,000 --> 00:18:35,659
of the Cloud Foundry bucket doing

00:18:34,010 --> 00:18:37,940
business cases and explaining and

00:18:35,659 --> 00:18:40,130
articulating what the allocation or how

00:18:37,940 --> 00:18:41,899
does how to spread the money out is very

00:18:40,130 --> 00:18:45,399
difficult still and very immature in

00:18:41,899 --> 00:18:48,350
this environment for us network planning

00:18:45,399 --> 00:18:50,179
took us probably the bulk of the time it

00:18:48,350 --> 00:18:51,919
always seems to from a DNS security

00:18:50,179 --> 00:18:53,690
perspective it continues to be something

00:18:51,919 --> 00:18:56,809
that we're learning about and then

00:18:53,690 --> 00:18:57,950
managing multiple foundations still is

00:18:56,809 --> 00:19:01,370
very difficult because you have to

00:18:57,950 --> 00:19:02,809
interact primarily and and our team will

00:19:01,370 --> 00:19:04,850
collaborate more if you have any

00:19:02,809 --> 00:19:06,590
questions about how we have to interact

00:19:04,850 --> 00:19:08,360
with multiple foundations individually

00:19:06,590 --> 00:19:11,330
without being able to see the big

00:19:08,360 --> 00:19:14,000
picture all in once and then obviously

00:19:11,330 --> 00:19:15,679
one of our big concerns in our in our

00:19:14,000 --> 00:19:17,450
side is keeping the build PACs as

00:19:15,679 --> 00:19:19,370
standard as possible to avoid any kind

00:19:17,450 --> 00:19:20,480
of future upgrade problems which will

00:19:19,370 --> 00:19:22,540
get us back into the world that I

00:19:20,480 --> 00:19:24,920
outlined at the beginning

00:19:22,540 --> 00:19:26,480
the one thing I wanted to note here is

00:19:24,920 --> 00:19:27,860
we're now looking at taking the legacy

00:19:26,480 --> 00:19:29,180
applications and moving them over to

00:19:27,860 --> 00:19:31,160
Cloud Foundry so that's not what we

00:19:29,180 --> 00:19:33,830
started that's now where we are and

00:19:31,160 --> 00:19:37,220
we're starting to deploy Cloud Foundry

00:19:33,830 --> 00:19:39,470
into things like AWS and vCloud air and

00:19:37,220 --> 00:19:41,030
have a hybrid environment for our

00:19:39,470 --> 00:19:43,000
applications so that's a big focus for

00:19:41,030 --> 00:19:46,430
us in 2015

00:19:43,000 --> 00:19:47,900
what's next the core logic platform

00:19:46,430 --> 00:19:49,790
we're going to continue to evolve our

00:19:47,900 --> 00:19:51,380
DevOps environments automation and

00:19:49,790 --> 00:19:53,690
monitoring continue to be a huge focus

00:19:51,380 --> 00:19:55,190
for us and we're going to continue as I

00:19:53,690 --> 00:19:56,810
said to look at the migration of

00:19:55,190 --> 00:19:59,000
existing applications looking at the

00:19:56,810 --> 00:20:00,410
legacy stacks and seeing what that what

00:19:59,000 --> 00:20:02,180
will come over for Cloud Foundry and

00:20:00,410 --> 00:20:03,530
then our development as a service and

00:20:02,180 --> 00:20:05,570
the data Lake that I talked about with

00:20:03,530 --> 00:20:07,730
you will be the big thing that we roll

00:20:05,570 --> 00:20:09,050
out in 2015

00:20:07,730 --> 00:20:10,880
that'll be the backbone behind all of

00:20:09,050 --> 00:20:15,230
our new products as well as the my

00:20:10,880 --> 00:20:16,910
CoreLogic product suite so from that

00:20:15,230 --> 00:20:22,160
perspective I think I got through and

00:20:16,910 --> 00:20:23,510
was seven minutes or so for QA so we

00:20:22,160 --> 00:20:34,550
have all the experts from core logic

00:20:23,510 --> 00:20:36,290
here so I don't know yeah okay so the

00:20:34,550 --> 00:20:37,970
question was why are we looking at a

00:20:36,290 --> 00:20:39,700
hybrid cloud why are we looking at AWS

00:20:37,970 --> 00:20:42,020
in addition to the Dell environment

00:20:39,700 --> 00:20:44,240
primarily because of we believe it's

00:20:42,020 --> 00:20:46,940
more cost effective and more efficient

00:20:44,240 --> 00:20:48,320
and especially when you look at dynamic

00:20:46,940 --> 00:20:51,620
computing or the Elastic Compute

00:20:48,320 --> 00:20:53,330
environments that we have Dell is still

00:20:51,620 --> 00:20:55,970
even though we're up under a managed

00:20:53,330 --> 00:20:57,830
service is still a very static way to

00:20:55,970 --> 00:20:59,150
look at infrastructure and we want a

00:20:57,830 --> 00:21:00,470
much more dynamic way to look at

00:20:59,150 --> 00:21:02,150
infrastructure and we do believe

00:21:00,470 --> 00:21:05,360
ultimately that in the next three to

00:21:02,150 --> 00:21:07,040
five years cloud public cloud computing

00:21:05,360 --> 00:21:08,570
will be kind of more of the norm than

00:21:07,040 --> 00:21:10,850
kind of this private cloud environment

00:21:08,570 --> 00:21:13,040
and will be adopted eventually by the

00:21:10,850 --> 00:21:17,440
mortgage lending side of things where

00:21:13,040 --> 00:21:17,440
we're regulated heavily so

00:21:19,380 --> 00:21:35,680
yep yeah so the question was ESB in our

00:21:34,150 --> 00:21:37,000
environment and shows an ESB up there

00:21:35,680 --> 00:21:39,130
actually we've been working very closely

00:21:37,000 --> 00:21:41,910
between the pivotal Cloud Foundry guys

00:21:39,130 --> 00:21:44,050
and TIBCO we have a lot of legacy

00:21:41,910 --> 00:21:46,810
applications and the need to interact

00:21:44,050 --> 00:21:48,640
with non Cloud Foundry based micro

00:21:46,810 --> 00:21:50,740
services in the CoreLogic environment

00:21:48,640 --> 00:21:53,950
especially as we aggregate other third

00:21:50,740 --> 00:21:55,600
parties and so what we believe is

00:21:53,950 --> 00:21:57,400
there's room for both kinds of

00:21:55,600 --> 00:21:58,600
environments or the need in our case for

00:21:57,400 --> 00:22:01,270
both kinds of environments how we

00:21:58,600 --> 00:22:03,160
interact with the legacy kind of core

00:22:01,270 --> 00:22:05,410
logic service to your environments and

00:22:03,160 --> 00:22:07,120
then how we blend that over to the Cloud

00:22:05,410 --> 00:22:08,770
Foundry environment so we still believe

00:22:07,120 --> 00:22:12,310
in the micro services infrastructure at

00:22:08,770 --> 00:22:14,100
Cloud Foundry but we're interfacing with

00:22:12,310 --> 00:22:16,930
a lot of third parties on a lot of

00:22:14,100 --> 00:22:18,220
downstream legacy applications and so we

00:22:16,930 --> 00:22:20,860
believe there has to be a blended

00:22:18,220 --> 00:22:22,960
approach to the two it can't be all one

00:22:20,860 --> 00:22:24,550
or all the other and believe me there's

00:22:22,960 --> 00:22:26,560
religious camps on both sides and

00:22:24,550 --> 00:22:28,420
they're all in here from core logic and

00:22:26,560 --> 00:22:30,490
I'm sure many of you are there and we

00:22:28,420 --> 00:22:32,710
seem to be on the side of yeah we're

00:22:30,490 --> 00:22:33,670
gonna have to do both and and the reason

00:22:32,710 --> 00:22:35,410
why is we've looked at the various

00:22:33,670 --> 00:22:37,840
workloads and it won't all work on a

00:22:35,410 --> 00:22:49,210
micro Services type of environment for

00:22:37,840 --> 00:22:51,400
us so I don't know if you you guys want

00:22:49,210 --> 00:22:53,590
to take that but it basically Oracle RAC

00:22:51,400 --> 00:22:55,120
just operates as a standalone static

00:22:53,590 --> 00:22:57,520
environment and a clustered RAC

00:22:55,120 --> 00:23:00,070
environment and the applications are not

00:22:57,520 --> 00:23:01,930
using a standard Cloud Foundry service

00:23:00,070 --> 00:23:05,980
to access Oracle RAC they're using just

00:23:01,930 --> 00:23:10,710
the standard Oracle interface really

00:23:05,980 --> 00:23:10,710
right Tim JDBC

00:23:13,470 --> 00:23:32,200
yes yes okay so the question was are

00:23:30,190 --> 00:23:33,760
they green field applications or were

00:23:32,200 --> 00:23:35,230
they transitioned over from that from a

00:23:33,760 --> 00:23:36,940
legacy environment on all of the

00:23:35,230 --> 00:23:39,280
applications I listed were Greenfield

00:23:36,940 --> 00:23:41,830
new products for us that were written

00:23:39,280 --> 00:23:43,930
entirely on Cloud Foundry but in each

00:23:41,830 --> 00:23:46,000
case they interfaced it with back-end

00:23:43,930 --> 00:23:48,280
services and other things that existed

00:23:46,000 --> 00:23:50,020
for us that they had to interoperate

00:23:48,280 --> 00:23:51,790
with but they were all greenfield type

00:23:50,020 --> 00:23:54,490
of applications as I said this year

00:23:51,790 --> 00:23:56,110
we're gonna look at taking legacy actual

00:23:54,490 --> 00:23:58,870
legacy applications without major

00:23:56,110 --> 00:24:00,250
rewriting and try to move those over to

00:23:58,870 --> 00:24:03,130
the Cloud Foundry environment but our

00:24:00,250 --> 00:24:05,470
goal was speed to market of new products

00:24:03,130 --> 00:24:06,730
and being more competitive so for us it

00:24:05,470 --> 00:24:08,950
was building new products not

00:24:06,730 --> 00:24:11,350
necessarily just a cost rationalization

00:24:08,950 --> 00:24:28,930
play we're trying to go down both past

00:24:11,350 --> 00:24:31,540
this year okay to version three a brand

00:24:28,930 --> 00:24:34,000
oh yeah we I don't think we've

00:24:31,540 --> 00:24:37,680
determined when we're gonna do that yes

00:24:34,000 --> 00:24:37,680
what we're keeping up with the upgrades

00:24:40,740 --> 00:25:02,200
I I think as we grow the the Cloud

00:24:59,170 --> 00:25:04,900
Foundry application portfolio there is

00:25:02,200 --> 00:25:06,550
still ongoing kind of review of the

00:25:04,900 --> 00:25:07,780
infrastructure and I don't know Eric if

00:25:06,550 --> 00:25:10,000
you want to point you know talk about

00:25:07,780 --> 00:25:11,140
that but from a bottleneck perspective

00:25:10,000 --> 00:25:12,310
we're pretty confident on what we're

00:25:11,140 --> 00:25:13,780
doing right now we've added the three

00:25:12,310 --> 00:25:15,280
out of the three products in and they're

00:25:13,780 --> 00:25:17,590
being used in production but Eric do you

00:25:15,280 --> 00:25:21,430
want to elaborate we don't have real

00:25:17,590 --> 00:25:22,840
concerns about scalability you know what

00:25:21,430 --> 00:25:24,880
we one thing we would like to see is a

00:25:22,840 --> 00:25:27,610
continuous feedback loop between the

00:25:24,880 --> 00:25:30,040
underlying IAS in the past so that it

00:25:27,610 --> 00:25:31,840
can self provision I mean the reality is

00:25:30,040 --> 00:25:34,270
is that scaling things up requires

00:25:31,840 --> 00:25:37,120
intervention so we'd like to see that in

00:25:34,270 --> 00:25:39,010
part of the evolution we are also likely

00:25:37,120 --> 00:25:41,710
to be running more than one foundation

00:25:39,010 --> 00:25:43,510
in the future to set to segregate out

00:25:41,710 --> 00:25:48,040
sensitive data from less sensitive data

00:25:43,510 --> 00:25:50,200
primarily also to you know because we

00:25:48,040 --> 00:25:54,760
are trying to build enterprise class

00:25:50,200 --> 00:25:56,620
applications and really a pass on top of

00:25:54,760 --> 00:25:59,230
a pass right authentication and

00:25:56,620 --> 00:26:00,910
teittleman services document storage we

00:25:59,230 --> 00:26:04,930
anticipate running multiple foundations

00:26:00,910 --> 00:26:08,130
within each datacenter okay I think I

00:26:04,930 --> 00:26:08,130
have time for one more question

00:26:12,809 --> 00:26:16,989
yeah I don't believe we're using docker

00:26:14,919 --> 00:26:20,409
at all right now we're using a little

00:26:16,989 --> 00:26:21,849
darker okay for for our continuous

00:26:20,409 --> 00:26:25,450
integration environment where we're

00:26:21,849 --> 00:26:26,889
starting to use it okay see the DevOps

00:26:25,450 --> 00:26:28,330
people are so agile and nimble they're

00:26:26,889 --> 00:26:30,599
using stuff I didn't even know that if

00:26:28,330 --> 00:26:39,369
last month

00:26:30,599 --> 00:26:40,509
what one okay one more back there yeah

00:26:39,369 --> 00:26:41,979
we don't only see the need of those

00:26:40,509 --> 00:26:44,979
tools but more Eric you want to cover

00:26:41,979 --> 00:26:48,249
that you definitely need to augment it

00:26:44,979 --> 00:26:49,779
with monitoring so now you you get you

00:26:48,249 --> 00:26:52,119
get a DMX endpoint but you have to have

00:26:49,779 --> 00:26:53,649
some place to send that and AppDynamics

00:26:52,119 --> 00:26:54,759
gives us visibility into the

00:26:53,649 --> 00:26:57,279
applications that we wouldn't otherwise

00:26:54,759 --> 00:26:58,979
have so you absolutely need you need to

00:26:57,279 --> 00:27:06,759
build a monitoring framework around

00:26:58,979 --> 00:27:08,229
founder okay so anyway I appreciate

00:27:06,759 --> 00:27:10,959
everyone like I said there's a lot of

00:27:08,229 --> 00:27:12,339
people here from core logic this is all

00:27:10,959 --> 00:27:14,169
about collaboration and sharing

00:27:12,339 --> 00:27:16,749
information we've got every aspect of

00:27:14,169 --> 00:27:18,669
our stack here from resource perspective

00:27:16,749 --> 00:27:19,899
we're very excited about what we're

00:27:18,669 --> 00:27:22,299
doing we're very excited to hear about

00:27:19,899 --> 00:27:23,900
what all of you are doing so thank you

00:27:22,299 --> 00:27:27,249
very much and have a great summit

00:27:23,900 --> 00:27:27,249

YouTube URL: https://www.youtube.com/watch?v=qw8PLi0-QV4


