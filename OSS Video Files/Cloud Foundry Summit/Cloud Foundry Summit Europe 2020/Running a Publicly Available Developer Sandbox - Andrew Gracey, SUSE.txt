Title: Running a Publicly Available Developer Sandbox - Andrew Gracey, SUSE
Publication date: 2020-10-26
Playlist: Cloud Foundry Summit Europe 2020
Description: 
	Running a Publicly Available Developer Sandbox - Andrew Gracey, SUSE

So, you've built your platform, what next? How do you get users onboarded? How do you make sure everything works externally? How do you stop problems before they occur? In running the SUSE Developer Sandbox, we've learned a lot about the rough edges of Cloud Foundry and have found some nice ways to smooth them out. Join me for a talk about the lessons we've learned in the last 6 months and 500 users!
Captions: 
	00:00:00,080 --> 00:00:04,080
hello and welcome to running a publicly

00:00:01,920 --> 00:00:06,960
available developer sandbox

00:00:04,080 --> 00:00:09,760
uh i am andrew gracie i work at susa as

00:00:06,960 --> 00:00:12,480
a developer evangelist and advocate

00:00:09,760 --> 00:00:13,360
and for the past nine months or so i've

00:00:12,480 --> 00:00:16,720
been running

00:00:13,360 --> 00:00:19,279
the cloud application platform developer

00:00:16,720 --> 00:00:19,279
sandbox

00:00:19,359 --> 00:00:24,720
uh first off um

00:00:22,800 --> 00:00:27,680
basically we've been writing the sandbox

00:00:24,720 --> 00:00:30,880
as just a zero cost hosted environment

00:00:27,680 --> 00:00:33,280
uh zero cost to the users

00:00:30,880 --> 00:00:35,520
to provide hands-on experience of the

00:00:33,280 --> 00:00:36,000
developer use cases that cloud foundry

00:00:35,520 --> 00:00:38,879
and

00:00:36,000 --> 00:00:40,399
our suse cloud application platform can

00:00:38,879 --> 00:00:43,120
help with

00:00:40,399 --> 00:00:44,000
basically we really want to push and

00:00:43,120 --> 00:00:46,879
push developers to

00:00:44,000 --> 00:00:48,000
experience what cf push actually looks

00:00:46,879 --> 00:00:49,440
like

00:00:48,000 --> 00:00:51,039
we also want to give a place that

00:00:49,440 --> 00:00:51,360
somebody can come in and play with what

00:00:51,039 --> 00:00:54,480
an

00:00:51,360 --> 00:00:57,760
end user would experience from

00:00:54,480 --> 00:00:59,840
us our stratos user interface we also

00:00:57,760 --> 00:01:01,680
want to give a chance for people to play

00:00:59,840 --> 00:01:02,800
around with some of the integrated

00:01:01,680 --> 00:01:05,119
services

00:01:02,800 --> 00:01:07,200
from our marketplace specifically mini

00:01:05,119 --> 00:01:10,159
broker

00:01:07,200 --> 00:01:11,280
this is just a slide that we have for

00:01:10,159 --> 00:01:12,560
our sales decks

00:01:11,280 --> 00:01:15,439
to be able to get people to actually

00:01:12,560 --> 00:01:17,439
sign up and basically if you want uh

00:01:15,439 --> 00:01:21,360
here's a bunch of links

00:01:17,439 --> 00:01:22,799
that is right up front um we have

00:01:21,360 --> 00:01:25,280
yeah so if you want to sign up there's

00:01:22,799 --> 00:01:28,320
the developers.studio.com

00:01:25,280 --> 00:01:30,479
sandbox we also did a

00:01:28,320 --> 00:01:32,479
getting started guide and a faq and

00:01:30,479 --> 00:01:35,040
there is a forum it is

00:01:32,479 --> 00:01:37,360
maybe a bit lackluster at the moment but

00:01:35,040 --> 00:01:41,200
if you have any questions i do

00:01:37,360 --> 00:01:44,479
routinely watch it uh so today

00:01:41,200 --> 00:01:46,079
um basically in the session i really

00:01:44,479 --> 00:01:47,600
i would like to talk about kind of some

00:01:46,079 --> 00:01:49,759
of the challenges that we had and some

00:01:47,600 --> 00:01:54,240
of the places that we had to kind of

00:01:49,759 --> 00:01:56,399
um invent our own piece of the puzzle

00:01:54,240 --> 00:01:57,280
uh to be able to basically get a

00:01:56,399 --> 00:02:01,200
publicly

00:01:57,280 --> 00:02:04,479
publicly facing sandbox for

00:02:01,200 --> 00:02:06,240
um for cloud foundry uh so

00:02:04,479 --> 00:02:08,319
basically we set up some onboarding

00:02:06,240 --> 00:02:10,959
we've got a getting started guide

00:02:08,319 --> 00:02:11,840
uh scaling was a bit of a challenge to

00:02:10,959 --> 00:02:15,200
learn how to do

00:02:11,840 --> 00:02:16,160
effectively um i'll go through a few of

00:02:15,200 --> 00:02:19,200
the metrics that

00:02:16,160 --> 00:02:21,120
i look at on a fairly regular basis

00:02:19,200 --> 00:02:22,800
uh we're working on some building out

00:02:21,120 --> 00:02:23,280
some health checks and i'll walk through

00:02:22,800 --> 00:02:27,280
a quick

00:02:23,280 --> 00:02:27,280
retrospective as well

00:02:27,520 --> 00:02:33,440
so first up on boarding

00:02:30,959 --> 00:02:34,160
so we wanted basically to be able to

00:02:33,440 --> 00:02:37,680
have

00:02:34,160 --> 00:02:40,480
a self-service setup of the account

00:02:37,680 --> 00:02:42,879
so if somebody came in and we didn't

00:02:40,480 --> 00:02:46,239
know them before we wanted to be able to

00:02:42,879 --> 00:02:48,160
create their account and get them

00:02:46,239 --> 00:02:50,000
up and running as fast as possible with

00:02:48,160 --> 00:02:54,000
as few clicks as possible

00:02:50,000 --> 00:02:57,120
and also as little time as possible

00:02:54,000 --> 00:02:59,920
um so the first challenge we ran into

00:02:57,120 --> 00:03:03,519
was we needed some sort of self-service

00:02:59,920 --> 00:03:06,480
right um the way

00:03:03,519 --> 00:03:08,480
we went about that is i built a tool um

00:03:06,480 --> 00:03:08,959
i built in node.js because that's what i

00:03:08,480 --> 00:03:12,000
can

00:03:08,959 --> 00:03:15,360
wrap a prototype in and um

00:03:12,000 --> 00:03:18,319
and i kind of built a wrapper for the

00:03:15,360 --> 00:03:20,000
a few of the cf uh cl are really

00:03:18,319 --> 00:03:23,040
actually sorry the

00:03:20,000 --> 00:03:24,959
cf api endpoints

00:03:23,040 --> 00:03:27,200
as well as uaa endpoints that i needed

00:03:24,959 --> 00:03:29,120
to be able to call

00:03:27,200 --> 00:03:31,280
because what i found was that the

00:03:29,120 --> 00:03:33,840
existing

00:03:31,280 --> 00:03:35,760
library in node wasn't really what i

00:03:33,840 --> 00:03:37,760
needed and the java

00:03:35,760 --> 00:03:39,680
library ended up just causing more

00:03:37,760 --> 00:03:41,440
problems than it then solved for our

00:03:39,680 --> 00:03:43,760
specific use case

00:03:41,440 --> 00:03:44,640
uh seems like it's yeah for a long

00:03:43,760 --> 00:03:46,879
running process

00:03:44,640 --> 00:03:48,400
didn't seem to work the way we we would

00:03:46,879 --> 00:03:52,400
have expected

00:03:48,400 --> 00:03:55,439
um again that's most likely our fault

00:03:52,400 --> 00:03:58,560
um so basically we we set up

00:03:55,439 --> 00:04:01,599
a way that uh when you clicked a button

00:03:58,560 --> 00:04:03,439
and and on our portal

00:04:01,599 --> 00:04:04,799
it would create you a personal

00:04:03,439 --> 00:04:08,159
organization

00:04:04,799 --> 00:04:11,360
uh with four spaces a dev test prod

00:04:08,159 --> 00:04:13,040
and a sample uh space uh this way people

00:04:11,360 --> 00:04:14,560
can kind of play around with like what

00:04:13,040 --> 00:04:16,239
does it look like to actually have

00:04:14,560 --> 00:04:19,199
multiple spaces

00:04:16,239 --> 00:04:21,440
uh you can you can invite people to your

00:04:19,199 --> 00:04:24,960
organization because you are the org

00:04:21,440 --> 00:04:28,560
admin as well as you we can set

00:04:24,960 --> 00:04:31,520
quota or organizational quotas

00:04:28,560 --> 00:04:33,280
um so obviously we don't want somebody

00:04:31,520 --> 00:04:35,600
coming and using a free resource and

00:04:33,280 --> 00:04:38,560
then like installing a bitcoin miner

00:04:35,600 --> 00:04:39,360
and completely destroying our cluster

00:04:38,560 --> 00:04:44,400
that's

00:04:39,360 --> 00:04:46,560
nobody wants that except for the miner

00:04:44,400 --> 00:04:49,520
and we also went ahead and pushed the

00:04:46,560 --> 00:04:52,880
12-factor app into every organization

00:04:49,520 --> 00:04:54,080
in the sample space so that way

00:04:52,880 --> 00:04:55,919
one of the problems that we were trying

00:04:54,080 --> 00:04:56,800
to overcome with this is kind of that

00:04:55,919 --> 00:05:00,960
blank

00:04:56,800 --> 00:05:03,360
canvas a white page kind of issue where

00:05:00,960 --> 00:05:04,000
you set something up and there's nothing

00:05:03,360 --> 00:05:05,919
in there

00:05:04,000 --> 00:05:07,360
and you don't know where where to go

00:05:05,919 --> 00:05:10,639
right so if you

00:05:07,360 --> 00:05:13,919
um if you browse to

00:05:10,639 --> 00:05:16,000
uh stratos and log in as yourself

00:05:13,919 --> 00:05:17,039
now you have at least one app that's up

00:05:16,000 --> 00:05:19,680
and running

00:05:17,039 --> 00:05:21,360
that you can kind of click around in as

00:05:19,680 --> 00:05:24,560
opposed to having nothing there

00:05:21,360 --> 00:05:26,639
uh so that was that was pretty useful

00:05:24,560 --> 00:05:29,280
um there's a screenshot of kind of what

00:05:26,639 --> 00:05:29,280
it looks like

00:05:32,639 --> 00:05:38,240
um we also wrote a getting started guide

00:05:36,240 --> 00:05:40,400
uh one thing that we wanted to do was a

00:05:38,240 --> 00:05:42,960
very tailored specific to

00:05:40,400 --> 00:05:44,080
our environment what you need to get up

00:05:42,960 --> 00:05:47,680
and going

00:05:44,080 --> 00:05:49,600
uh for a developer who is not

00:05:47,680 --> 00:05:50,960
who has never used cloud foundry or

00:05:49,600 --> 00:05:54,000
heroku or

00:05:50,960 --> 00:05:57,280
or really potentially any cloud right

00:05:54,000 --> 00:05:58,960
um we wanted to be for both stratos and

00:05:57,280 --> 00:06:02,000
the cfcli

00:05:58,960 --> 00:06:03,360
uh so we wrote two pages one that kind

00:06:02,000 --> 00:06:06,479
of walks you through how do you deploy

00:06:03,360 --> 00:06:08,960
an app in stratos that's really

00:06:06,479 --> 00:06:10,400
really more geared towards potential

00:06:08,960 --> 00:06:12,319
operators

00:06:10,400 --> 00:06:14,639
even though this is a developer sandbox

00:06:12,319 --> 00:06:17,280
there's enough bleed between the two

00:06:14,639 --> 00:06:18,960
camps at this point

00:06:17,280 --> 00:06:21,520
and then one that is very much geared

00:06:18,960 --> 00:06:24,000
towards like what a day in day out

00:06:21,520 --> 00:06:25,280
developer workflow might look like

00:06:24,000 --> 00:06:30,479
including like

00:06:25,280 --> 00:06:34,240
using cfssh to do a port forward to

00:06:30,479 --> 00:06:34,240
get debugging hooked up

00:06:34,960 --> 00:06:38,800
we're also currently working on an

00:06:36,400 --> 00:06:42,639
advanced concept section

00:06:38,800 --> 00:06:46,960
with the newest release of mini broker

00:06:42,639 --> 00:06:48,639
we added rabbitmq support

00:06:46,960 --> 00:06:50,960
which all of a sudden opens up the

00:06:48,639 --> 00:06:54,400
potential for showing off like

00:06:50,960 --> 00:06:57,039
how do you do um uh

00:06:54,400 --> 00:06:59,280
like a web and then a worker in two

00:06:57,039 --> 00:07:00,160
completely different pods or uh sorry

00:06:59,280 --> 00:07:03,599
i'm not gonna

00:07:00,160 --> 00:07:05,840
but in two different applications um

00:07:03,599 --> 00:07:07,520
and then have how how do you work with a

00:07:05,840 --> 00:07:10,479
message bus in between

00:07:07,520 --> 00:07:12,080
uh so we're we're still improving the

00:07:10,479 --> 00:07:14,960
advanced concepts at the moment

00:07:12,080 --> 00:07:16,080
but uh hopefully we'll get one where we

00:07:14,960 --> 00:07:17,919
i think the next thing that we're going

00:07:16,080 --> 00:07:21,360
to be writing is one on like

00:07:17,919 --> 00:07:22,000
how do you incorporate cloud foundry

00:07:21,360 --> 00:07:25,360
into a

00:07:22,000 --> 00:07:28,000
more fully featured ci cd

00:07:25,360 --> 00:07:28,000
for example

00:07:28,840 --> 00:07:32,400
so scaling became kind of an issue

00:07:31,440 --> 00:07:36,080
because

00:07:32,400 --> 00:07:39,759
we have basically seen um

00:07:36,080 --> 00:07:43,039
about a 10 user per week

00:07:39,759 --> 00:07:44,960
increase in use in users um

00:07:43,039 --> 00:07:47,280
kind of regardless of of our marketing

00:07:44,960 --> 00:07:51,199
activity which is a bit surprising

00:07:47,280 --> 00:07:52,560
uh so we i don't fully understand

00:07:51,199 --> 00:07:54,160
and we need to do a little bit of

00:07:52,560 --> 00:07:55,680
analytics to figure out where people are

00:07:54,160 --> 00:07:56,560
coming from and how people are learning

00:07:55,680 --> 00:08:00,240
about us

00:07:56,560 --> 00:08:02,800
uh but it seems very linear um

00:08:00,240 --> 00:08:04,479
so we've had a scale uh we started with

00:08:02,800 --> 00:08:08,400
three easy two

00:08:04,479 --> 00:08:11,759
uh instances each 32 gigs of ram

00:08:08,400 --> 00:08:13,840
and the i think they're

00:08:11,759 --> 00:08:14,960
a3 or so something like that i forget

00:08:13,840 --> 00:08:18,560
exactly what the

00:08:14,960 --> 00:08:21,120
a3 extra large i think

00:08:18,560 --> 00:08:23,280
i don't know i'm not gonna remember that

00:08:21,120 --> 00:08:25,520
um

00:08:23,280 --> 00:08:27,039
and and we've had to scale a few times

00:08:25,520 --> 00:08:31,440
we also upgraded

00:08:27,039 --> 00:08:34,560
from um cloud foundry

00:08:31,440 --> 00:08:35,360
to cube cf we did that maybe a month or

00:08:34,560 --> 00:08:38,719
two ago

00:08:35,360 --> 00:08:38,719
at the time recording at least

00:08:38,880 --> 00:08:43,200
and and kind of there's been a few

00:08:41,120 --> 00:08:46,160
issues that we've had with scaling

00:08:43,200 --> 00:08:48,000
uh and kind of the main one is this

00:08:46,160 --> 00:08:50,959
diego split brand issue

00:08:48,000 --> 00:08:51,440
is that uh because diego is doing a

00:08:50,959 --> 00:08:54,480
bunch

00:08:51,440 --> 00:08:57,440
of of scheduling in it's in its

00:08:54,480 --> 00:08:59,680
runner and then kubernetes is doing

00:08:57,440 --> 00:09:02,959
scheduling of diego itself

00:08:59,680 --> 00:09:03,519
um it's hard to scale down right so if

00:09:02,959 --> 00:09:05,680
we scale

00:09:03,519 --> 00:09:07,120
up all of a sudden like we have too many

00:09:05,680 --> 00:09:08,000
resources and then we kind of have to

00:09:07,120 --> 00:09:11,040
like

00:09:08,000 --> 00:09:14,480
pull the pull the replica set

00:09:11,040 --> 00:09:16,399
um or sorry the staple set

00:09:14,480 --> 00:09:18,399
that controls diego we gotta pull that

00:09:16,399 --> 00:09:19,920
down then we gotta make sure that

00:09:18,399 --> 00:09:22,000
everything gets scheduled on the right

00:09:19,920 --> 00:09:25,120
node so that we can deactivate and scale

00:09:22,000 --> 00:09:29,040
down the replica set that controls the

00:09:25,120 --> 00:09:29,440
node count and it becomes very messy

00:09:29,040 --> 00:09:32,880
right

00:09:29,440 --> 00:09:36,480
because there's especially with the way

00:09:32,880 --> 00:09:38,399
uh persistent volumes are done in amazon

00:09:36,480 --> 00:09:40,480
you kind of have to be very intentional

00:09:38,399 --> 00:09:41,839
about like where things get placed and

00:09:40,480 --> 00:09:43,680
make sure that things get placed in

00:09:41,839 --> 00:09:47,120
order

00:09:43,680 --> 00:09:50,000
and and diego makes this especially hard

00:09:47,120 --> 00:09:51,440
because you kind of have scale down in

00:09:50,000 --> 00:09:54,640
order but then you have to make sure

00:09:51,440 --> 00:09:56,890
that the right things scale down

00:09:54,640 --> 00:09:58,560
we also found several bugs

00:09:56,890 --> 00:10:02,480
[Music]

00:09:58,560 --> 00:10:06,160
one was there's a logger grader has

00:10:02,480 --> 00:10:09,600
some is a resource hog and

00:10:06,160 --> 00:10:11,200
has some memory leaks luckily we are in

00:10:09,600 --> 00:10:14,000
an environment where all the nodes are

00:10:11,200 --> 00:10:15,839
the same size so at least we can

00:10:14,000 --> 00:10:17,680
set the the memory limits and

00:10:15,839 --> 00:10:19,440
constraints correctly

00:10:17,680 --> 00:10:21,040
so that if it gets too big it just kills

00:10:19,440 --> 00:10:22,000
it and we lose all our logs and nobody

00:10:21,040 --> 00:10:25,360
cares

00:10:22,000 --> 00:10:27,360
um the other thing is we've got

00:10:25,360 --> 00:10:29,360
multiple layers of logging right so

00:10:27,360 --> 00:10:30,079
you've got logging done at the pod level

00:10:29,360 --> 00:10:32,399
you've got

00:10:30,079 --> 00:10:34,079
logging down at the at the machine level

00:10:32,399 --> 00:10:38,240
you've got logging done

00:10:34,079 --> 00:10:40,560
uh in uh at the platform level as well

00:10:38,240 --> 00:10:42,880
and it just it just kind of explodes and

00:10:40,560 --> 00:10:46,480
how much logging actually happens

00:10:42,880 --> 00:10:47,279
um and then lastly there we found a bug

00:10:46,480 --> 00:10:49,920
with uh

00:10:47,279 --> 00:10:51,040
all of a sudden if you're running like

00:10:49,920 --> 00:10:54,880
we are a

00:10:51,040 --> 00:10:57,839
massive amount of small applications

00:10:54,880 --> 00:10:58,720
um you end up with hitting i notify

00:10:57,839 --> 00:11:01,680
limits

00:10:58,720 --> 00:11:03,279
where you'll have i notify watchers um

00:11:01,680 --> 00:11:06,240
assigned to each pod

00:11:03,279 --> 00:11:07,200
uh because i think it's there's a is it

00:11:06,240 --> 00:11:08,800
envoy

00:11:07,200 --> 00:11:10,959
this video whichever piece of that

00:11:08,800 --> 00:11:15,040
puzzle we were relying on

00:11:10,959 --> 00:11:18,320
as part of cubecf uh so we run into

00:11:15,040 --> 00:11:20,000
we ran into a few issues there um

00:11:18,320 --> 00:11:22,240
but other than that the scaling has been

00:11:20,000 --> 00:11:23,120
pretty linear uh overall it's it's not

00:11:22,240 --> 00:11:25,920
too bad

00:11:23,120 --> 00:11:27,360
uh just a couple hiccups that causes

00:11:25,920 --> 00:11:27,760
maybe a little more downtime than we

00:11:27,360 --> 00:11:29,730
would have

00:11:27,760 --> 00:11:30,880
otherwise wanted

00:11:29,730 --> 00:11:32,640
[Music]

00:11:30,880 --> 00:11:36,000
let's see next we've got metrics i'm

00:11:32,640 --> 00:11:39,920
going to go ahead and switch over

00:11:36,000 --> 00:11:42,959
we'll see how this yeah so

00:11:39,920 --> 00:11:46,240
here is our um

00:11:42,959 --> 00:11:49,279
kubernetes uh grafana

00:11:46,240 --> 00:11:50,880
um so basically we've got uh we've got

00:11:49,279 --> 00:11:54,000
cube metrics our cube

00:11:50,880 --> 00:11:56,480
cube node i don't remember what it's

00:11:54,000 --> 00:11:59,279
actually called in the kubernetes world

00:11:56,480 --> 00:12:00,320
um yeah so basically we've got our

00:11:59,279 --> 00:12:02,880
metrics pod

00:12:00,320 --> 00:12:03,680
uh running with all everything enabled

00:12:02,880 --> 00:12:06,160
um

00:12:03,680 --> 00:12:08,639
and then this dashboard probably people

00:12:06,160 --> 00:12:10,720
have seen it before it's actually the uh

00:12:08,639 --> 00:12:13,040
i think it's ten thousand if you do an

00:12:10,720 --> 00:12:14,959
import it's the idea of ten thousand and

00:12:13,040 --> 00:12:19,040
it's a very useful dashboard

00:12:14,959 --> 00:12:20,480
um and and i can kind of go through and

00:12:19,040 --> 00:12:23,680
make sure that each node

00:12:20,480 --> 00:12:25,680
is is reasonably healthy um and that

00:12:23,680 --> 00:12:26,079
things are getting kind of load balanced

00:12:25,680 --> 00:12:28,720
as

00:12:26,079 --> 00:12:30,320
as i would expect as you see right here

00:12:28,720 --> 00:12:34,720
i wasn't planning for this be

00:12:30,320 --> 00:12:38,560
but what is taking up

00:12:34,720 --> 00:12:39,680
a lot of oh yeah because law cash is on

00:12:38,560 --> 00:12:42,560
here

00:12:39,680 --> 00:12:44,639
this goes back to the logging issue law

00:12:42,560 --> 00:12:48,880
cash takes up 16 gigs

00:12:44,639 --> 00:12:52,800
of of memory which seems excessive

00:12:48,880 --> 00:12:54,720
um yeah that's fun uh but yeah so i can

00:12:52,800 --> 00:12:58,079
kind of go and make sure that things are

00:12:54,720 --> 00:13:00,880
are scheduled on the right place um

00:12:58,079 --> 00:13:02,800
and that the diego cells are actually

00:13:00,880 --> 00:13:06,320
being load balanced across

00:13:02,800 --> 00:13:10,079
nicely from actual resource utilization

00:13:06,320 --> 00:13:10,720
uh which is nice um and so basically

00:13:10,079 --> 00:13:12,240
okay

00:13:10,720 --> 00:13:13,839
i tend to come through here you can see

00:13:12,240 --> 00:13:17,519
that every once we miss uh

00:13:13,839 --> 00:13:20,560
we missed the cache um yeah you can see

00:13:17,519 --> 00:13:23,600
you can see networking all good things

00:13:20,560 --> 00:13:24,000
um you can see right here that we're

00:13:23,600 --> 00:13:26,560
pretty

00:13:24,000 --> 00:13:28,639
we're pretty good uh tends to flow to

00:13:26,560 --> 00:13:31,760
around the 30s right now with with

00:13:28,639 --> 00:13:34,720
how many users we have i would prefer it

00:13:31,760 --> 00:13:36,160
closer to maybe 60 or so uh because then

00:13:34,720 --> 00:13:37,120
that gives us a little bit of room to

00:13:36,160 --> 00:13:38,560
grow

00:13:37,120 --> 00:13:40,639
but we're not wasting money at that

00:13:38,560 --> 00:13:42,399
point so

00:13:40,639 --> 00:13:43,680
we'll hopefully we'll grow to the point

00:13:42,399 --> 00:13:45,040
where we i don't

00:13:43,680 --> 00:13:46,880
just don't want to scale back down right

00:13:45,040 --> 00:13:50,959
now so

00:13:46,880 --> 00:13:52,079
um yeah so so these metrics are super

00:13:50,959 --> 00:13:55,040
useful

00:13:52,079 --> 00:13:56,399
um and i tend to just use the kubernetes

00:13:55,040 --> 00:13:57,920
metrics as opposed to

00:13:56,399 --> 00:13:59,680
the ones i get from cloud foundry

00:13:57,920 --> 00:14:01,199
because they give a much more holistic

00:13:59,680 --> 00:14:03,920
picture

00:14:01,199 --> 00:14:04,720
i do have cloud foundry metrics that i

00:14:03,920 --> 00:14:07,279
do look at

00:14:04,720 --> 00:14:10,079
although for data privacy reasons i'm

00:14:07,279 --> 00:14:13,600
not going to show them because they show

00:14:10,079 --> 00:14:16,959
uh user names in them

00:14:13,600 --> 00:14:18,639
uh so back to our presentation

00:14:16,959 --> 00:14:22,800
if i click that to go right to the

00:14:18,639 --> 00:14:22,800
middle probably not no it doesn't

00:14:24,560 --> 00:14:28,079
yeah so i'm also working on a health

00:14:26,240 --> 00:14:31,279
check

00:14:28,079 --> 00:14:33,839
it is still in progress process project

00:14:31,279 --> 00:14:34,639
uh but basically i am working on

00:14:33,839 --> 00:14:37,519
actually

00:14:34,639 --> 00:14:38,320
having a health check that is external

00:14:37,519 --> 00:14:40,079
to the system

00:14:38,320 --> 00:14:42,880
because the system itself can't

00:14:40,079 --> 00:14:45,120
necessarily report its own

00:14:42,880 --> 00:14:46,639
health all the time right there's it has

00:14:45,120 --> 00:14:50,320
to be something else that kind of

00:14:46,639 --> 00:14:53,760
from somewhere else on the internet um

00:14:50,320 --> 00:14:57,519
looks and and um and can tell

00:14:53,760 --> 00:14:59,120
if the system as a whole is healthy

00:14:57,519 --> 00:15:00,639
so the things that we're going to be

00:14:59,120 --> 00:15:04,480
checking are

00:15:00,639 --> 00:15:07,680
can i even like can i log into uaa right

00:15:04,480 --> 00:15:10,480
can i log into the cloud controller api

00:15:07,680 --> 00:15:12,000
um can i access the getting started

00:15:10,480 --> 00:15:14,480
guide which is running as an

00:15:12,000 --> 00:15:16,160
application so basically that's testing

00:15:14,480 --> 00:15:19,680
like does the router work

00:15:16,160 --> 00:15:22,000
um and in or are all the search

00:15:19,680 --> 00:15:23,420
rights is everything routing correctly

00:15:22,000 --> 00:15:24,880
um

00:15:23,420 --> 00:15:27,839
[Music]

00:15:24,880 --> 00:15:28,240
i put these in the wrong order but uh i

00:15:27,839 --> 00:15:31,600
can

00:15:28,240 --> 00:15:35,120
can we ssh into uh the application right

00:15:31,600 --> 00:15:38,079
if if i do a push and

00:15:35,120 --> 00:15:40,160
um uh and actually one that i didn't

00:15:38,079 --> 00:15:43,279
list here is can i push an application

00:15:40,160 --> 00:15:45,279
right and then can i ssh into it and

00:15:43,279 --> 00:15:47,839
then i can can i tear it back down

00:15:45,279 --> 00:15:49,759
and then lastly is the portal itself so

00:15:47,839 --> 00:15:52,560
basically our entire like

00:15:49,759 --> 00:15:54,560
developer portal which is not running as

00:15:52,560 --> 00:15:56,959
an application because

00:15:54,560 --> 00:15:58,720
naturally if there is down time i would

00:15:56,959 --> 00:15:59,920
like for the place that we're going to

00:15:58,720 --> 00:16:03,360
tell people that there's

00:15:59,920 --> 00:16:04,720
down time not to also go down um

00:16:03,360 --> 00:16:06,959
because that's just see i know he has

00:16:04,720 --> 00:16:10,320
fun with that

00:16:06,959 --> 00:16:11,680
um this is something that i think would

00:16:10,320 --> 00:16:15,759
be really interesting to

00:16:11,680 --> 00:16:18,880
see maybe a uh cf project

00:16:15,759 --> 00:16:22,240
kind of getting built out of uh some

00:16:18,880 --> 00:16:24,720
external health check would be nice

00:16:22,240 --> 00:16:26,320
um and then yeah lastly a quick

00:16:24,720 --> 00:16:29,279
retrospective

00:16:26,320 --> 00:16:30,320
um so we are we're getting close to 500

00:16:29,279 --> 00:16:33,120
users

00:16:30,320 --> 00:16:33,440
um i think if i remember from looking at

00:16:33,120 --> 00:16:36,720
it

00:16:33,440 --> 00:16:40,560
last time last a couple days ago roughly

00:16:36,720 --> 00:16:44,800
only 75 or so have a sousa.com address

00:16:40,560 --> 00:16:47,040
um so we have probably over 400 users

00:16:44,800 --> 00:16:51,839
that are not susan employees which i'm

00:16:47,040 --> 00:16:54,880
i'm really happy about um

00:16:51,839 --> 00:16:57,759
up front we we allowed multiple

00:16:54,880 --> 00:16:58,480
accounts per user and the reasoning for

00:16:57,759 --> 00:17:02,240
that

00:16:58,480 --> 00:17:02,800
was we really we wanted people to be

00:17:02,240 --> 00:17:06,640
able to

00:17:02,800 --> 00:17:08,319
to create accounts and and be able to

00:17:06,640 --> 00:17:10,880
kind of set them up and then give them

00:17:08,319 --> 00:17:13,839
to other uh developers

00:17:10,880 --> 00:17:15,520
um because let's be real that this is to

00:17:13,839 --> 00:17:19,520
some extent a sales tool

00:17:15,520 --> 00:17:22,319
um even if it's not really uh but

00:17:19,520 --> 00:17:24,319
it's it's marketing sales so uh we

00:17:22,319 --> 00:17:24,640
wanted the ability for people to go and

00:17:24,319 --> 00:17:27,839
go

00:17:24,640 --> 00:17:29,200
hey this is a really cool um this is a

00:17:27,839 --> 00:17:30,559
cool tool

00:17:29,200 --> 00:17:32,320
how about you go check it out here's the

00:17:30,559 --> 00:17:33,360
username and password change your

00:17:32,320 --> 00:17:37,360
password

00:17:33,360 --> 00:17:38,160
um and and i think that that was a good

00:17:37,360 --> 00:17:41,840
idea

00:17:38,160 --> 00:17:45,120
but what we i made a

00:17:41,840 --> 00:17:46,400
a mistake in in the security of that

00:17:45,120 --> 00:17:48,720
which is actually the next one

00:17:46,400 --> 00:17:52,000
self-afflicted security injuries

00:17:48,720 --> 00:17:55,440
um i i wrote

00:17:52,000 --> 00:17:57,840
the onboarding really quickly and and

00:17:55,440 --> 00:17:59,280
should and i even knew that there was a

00:17:57,840 --> 00:18:00,080
security hole in the middle of it

00:17:59,280 --> 00:18:03,200
because i

00:18:00,080 --> 00:18:06,480
was just exposing an api with no auth to

00:18:03,200 --> 00:18:06,880
uh to the public right um and honestly

00:18:06,480 --> 00:18:09,760
it took

00:18:06,880 --> 00:18:10,160
seven months for somebody to to notice

00:18:09,760 --> 00:18:13,200
it

00:18:10,160 --> 00:18:14,640
other than myself and our team and the

00:18:13,200 --> 00:18:17,360
really really

00:18:14,640 --> 00:18:19,280
annoying thing is that we were we had

00:18:17,360 --> 00:18:22,000
the fix

00:18:19,280 --> 00:18:23,600
sitting and staging and waiting on some

00:18:22,000 --> 00:18:25,440
last minute approvals

00:18:23,600 --> 00:18:27,280
uh because we were having to change some

00:18:25,440 --> 00:18:30,160
some user interface aspects

00:18:27,280 --> 00:18:32,720
and like the day before we were going to

00:18:30,160 --> 00:18:35,840
roll it out somebody finally

00:18:32,720 --> 00:18:40,320
finally noticed

00:18:35,840 --> 00:18:41,679
and and hacked us hacked us in quotes

00:18:40,320 --> 00:18:43,919
and basically realized that they could

00:18:41,679 --> 00:18:45,520
create um a thousand accounts

00:18:43,919 --> 00:18:48,240
so they did create in a thousand

00:18:45,520 --> 00:18:50,559
accounts um and so

00:18:48,240 --> 00:18:51,679
uh we rolled out the fix real fast uh

00:18:50,559 --> 00:18:54,080
ignored the last

00:18:51,679 --> 00:18:55,520
couple checks of people needing to see

00:18:54,080 --> 00:18:57,200
it and this is why you screw it

00:18:55,520 --> 00:19:00,640
we'll just go ahead and roll this out

00:18:57,200 --> 00:19:03,360
and call it good um

00:19:00,640 --> 00:19:04,480
and then uh i put it at a scale faster

00:19:03,360 --> 00:19:06,240
but honestly i i

00:19:04,480 --> 00:19:08,320
we probably should have used smaller

00:19:06,240 --> 00:19:10,480
instances and more of them

00:19:08,320 --> 00:19:12,160
uh so that we can kind of uh scale

00:19:10,480 --> 00:19:13,200
smaller and more frequently

00:19:12,160 --> 00:19:14,880
because right now we've kind of got

00:19:13,200 --> 00:19:15,840
these big chunks of scaling that we're

00:19:14,880 --> 00:19:18,799
doing

00:19:15,840 --> 00:19:19,360
as we're going um and when you're using

00:19:18,799 --> 00:19:21,360
cloud

00:19:19,360 --> 00:19:22,880
like you can kind of scale however you

00:19:21,360 --> 00:19:25,760
want you're not limited to

00:19:22,880 --> 00:19:27,039
physical hardware and so we should have

00:19:25,760 --> 00:19:28,960
thought about that maybe a little bit

00:19:27,039 --> 00:19:31,120
earlier

00:19:28,960 --> 00:19:32,640
but honestly it's been a good experience

00:19:31,120 --> 00:19:33,679
a very frustrating experience because

00:19:32,640 --> 00:19:37,120
i'm not

00:19:33,679 --> 00:19:39,039
ops i'm a developer

00:19:37,120 --> 00:19:40,720
having to do ops and so i've made a

00:19:39,039 --> 00:19:41,120
bunch of like working mistakes in that

00:19:40,720 --> 00:19:44,480
case

00:19:41,120 --> 00:19:46,880
and learned a lot um yeah

00:19:44,480 --> 00:19:48,480
um thanks for listening hopefully this

00:19:46,880 --> 00:19:50,640
was was useful

00:19:48,480 --> 00:19:52,480
uh definitely feel free to reach out and

00:19:50,640 --> 00:19:56,240
ask me questions

00:19:52,480 --> 00:20:00,640
and also go and sign up for the sandbox

00:19:56,240 --> 00:20:00,640

YouTube URL: https://www.youtube.com/watch?v=SKa1WfUVScc


