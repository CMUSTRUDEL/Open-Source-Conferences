Title: Eirini: To Production and Beyond! - Dimitris Karakasilis, SUSE & Julian Skupnjak, IBM
Publication date: 2020-10-26
Playlist: Cloud Foundry Summit Europe 2020
Description: 
	Eirini: To Production and Beyond! - Dimitris Karakasilis, SUSE & Julian Skupnjak, IBM

You have been eagerly waiting for the time when the Eirini project would run on production-level deployments. The time is now. Eirini is past its childhood. It is now a fully grown adolescent and is about to be announced production-ready. Come and see all the work that has been put into Eirini, EiriniX and what you should expect from the upcoming major release of KubeCF.
Captions: 
	00:00:00,160 --> 00:00:03,679
welcome everyone to the cloud foundry

00:00:02,720 --> 00:00:06,720
summit

00:00:03,679 --> 00:00:09,679
and another irini talk to production

00:00:06,720 --> 00:00:13,120
and beyond this talk is presented to you

00:00:09,679 --> 00:00:16,480
by demetrius carrick osceolas from suzay

00:00:13,120 --> 00:00:19,119
greece and hair jules from ibm

00:00:16,480 --> 00:00:19,119
germany

00:00:23,199 --> 00:00:27,119
all right thank you google voice for

00:00:25,439 --> 00:00:30,160
that introduction

00:00:27,119 --> 00:00:30,800
so let's talk a little bit or speak a

00:00:30,160 --> 00:00:34,079
little bit

00:00:30,800 --> 00:00:37,760
about production readiness

00:00:34,079 --> 00:00:40,559
and irini in this talk we will

00:00:37,760 --> 00:00:41,360
talk about what happened since the last

00:00:40,559 --> 00:00:44,480
year of summit

00:00:41,360 --> 00:00:46,960
till today we will talk about

00:00:44,480 --> 00:00:49,200
production readiness what it means uh

00:00:46,960 --> 00:00:52,399
how we define production readiness

00:00:49,200 --> 00:00:54,559
and how far rini is is it mature enough

00:00:52,399 --> 00:00:56,960
then we'll continue to speak about in

00:00:54,559 --> 00:01:00,160
which products irene is available

00:00:56,960 --> 00:01:02,160
stuff like that and finally we will get

00:01:00,160 --> 00:01:06,799
to

00:01:02,160 --> 00:01:09,119
the last part of the talk which is

00:01:06,799 --> 00:01:11,119
when and how irini is going to make it

00:01:09,119 --> 00:01:14,560
into the public ibm

00:01:11,119 --> 00:01:15,280
offering of cloud foundry but before we

00:01:14,560 --> 00:01:18,960
start

00:01:15,280 --> 00:01:22,240
let's take a look at some numbers

00:01:18,960 --> 00:01:25,360
we are eight people working full time

00:01:22,240 --> 00:01:30,000
on the rainy project with people from

00:01:25,360 --> 00:01:33,119
vmware sap suse and ibm

00:01:30,000 --> 00:01:36,640
and we do one week long sprints

00:01:33,119 --> 00:01:40,960
we do about 80 commits in a month

00:01:36,640 --> 00:01:44,079
and all code that we commit

00:01:40,960 --> 00:01:46,240
have to pass our own set of acceptance

00:01:44,079 --> 00:01:46,640
tests the irene acceptance test that we

00:01:46,240 --> 00:01:50,880
call

00:01:46,640 --> 00:01:53,840
eats and everything that passes the eats

00:01:50,880 --> 00:01:54,560
ends up in a release and we try to

00:01:53,840 --> 00:01:57,600
release

00:01:54,560 --> 00:02:02,399
every week which doesn't work but

00:01:57,600 --> 00:02:02,399
we release once or twice a month

00:02:02,719 --> 00:02:06,960
why are we bringing up these numbers

00:02:05,119 --> 00:02:10,239
simply because we think

00:02:06,960 --> 00:02:13,200
for a production ready

00:02:10,239 --> 00:02:14,000
component project it is important to

00:02:13,200 --> 00:02:15,599
know that

00:02:14,000 --> 00:02:18,000
there are some amount of people behind

00:02:15,599 --> 00:02:20,239
it and that we

00:02:18,000 --> 00:02:22,000
maintain it and that we still do some

00:02:20,239 --> 00:02:24,720
feature work

00:02:22,000 --> 00:02:26,720
and now let's take a look what we did

00:02:24,720 --> 00:02:28,319
since the last summit till today

00:02:26,720 --> 00:02:30,640
and what features we worked on so what

00:02:28,319 --> 00:02:34,000
you see here is a timeline

00:02:30,640 --> 00:02:37,519
starting from the last cf summit and

00:02:34,000 --> 00:02:40,239
what you can see is that we released

00:02:37,519 --> 00:02:41,200
1.0 around the time of the last cf

00:02:40,239 --> 00:02:43,360
summit europe

00:02:41,200 --> 00:02:45,440
and since then we released about 10

00:02:43,360 --> 00:02:49,519
releases

00:02:45,440 --> 00:02:51,680
we focused our work mainly on we free

00:02:49,519 --> 00:02:52,800
support like refree deployments

00:02:51,680 --> 00:02:56,640
refrigerate tasks

00:02:52,800 --> 00:02:58,239
but also we focused a lot on docker

00:02:56,640 --> 00:03:00,000
support

00:02:58,239 --> 00:03:01,920
we were able to push docker images

00:03:00,000 --> 00:03:04,560
before but now you're also able to

00:03:01,920 --> 00:03:05,760
push docker images from private

00:03:04,560 --> 00:03:09,760
registries

00:03:05,760 --> 00:03:14,080
stuff like that and we also focused on

00:03:09,760 --> 00:03:18,800
app resiliency and security for example

00:03:14,080 --> 00:03:21,200
we try to spread the load or

00:03:18,800 --> 00:03:22,080
kubernetes workers when we push multiple

00:03:21,200 --> 00:03:26,000
instances of an

00:03:22,080 --> 00:03:28,159
application we try to make sure that

00:03:26,000 --> 00:03:30,080
one application is not able to reach

00:03:28,159 --> 00:03:33,360
another application in the cluster

00:03:30,080 --> 00:03:36,640
easily or the control plane itself

00:03:33,360 --> 00:03:38,879
because in coupe cf and cf locates the

00:03:36,640 --> 00:03:42,080
control plane is

00:03:38,879 --> 00:03:45,400
running in the same cluster

00:03:42,080 --> 00:03:48,000
another worth mentioning thing is

00:03:45,400 --> 00:03:49,840
environmental support like the cf

00:03:48,000 --> 00:03:52,560
instance index

00:03:49,840 --> 00:03:53,920
i want to mention it because there is no

00:03:52,560 --> 00:03:58,000
native way today

00:03:53,920 --> 00:04:01,120
in kubernetes to get the instance

00:03:58,000 --> 00:04:03,760
index of import

00:04:01,120 --> 00:04:04,239
like you do in cloud foundry diego and

00:04:03,760 --> 00:04:06,000
we

00:04:04,239 --> 00:04:08,000
had to come up with their own solution

00:04:06,000 --> 00:04:10,480
to support

00:04:08,000 --> 00:04:11,120
that kind of environment variables we

00:04:10,480 --> 00:04:14,080
also did

00:04:11,120 --> 00:04:14,959
other feature work and a lot of bug

00:04:14,080 --> 00:04:17,199
fixes

00:04:14,959 --> 00:04:18,239
if you're really interested in what in

00:04:17,199 --> 00:04:21,359
particular we did

00:04:18,239 --> 00:04:22,079
in each of those releases i can just say

00:04:21,359 --> 00:04:25,360
go to

00:04:22,079 --> 00:04:26,840
uh github cloud foundry uh incubator to

00:04:25,360 --> 00:04:30,560
the irini release

00:04:26,840 --> 00:04:32,320
repository and go to the release section

00:04:30,560 --> 00:04:35,440
rewrote basically everything down that

00:04:32,320 --> 00:04:38,560
we did in each particular

00:04:35,440 --> 00:04:42,400
release and with that i hand over to

00:04:38,560 --> 00:04:44,960
dimitris thank you jules

00:04:42,400 --> 00:04:45,680
so let us talk a bit about terminology

00:04:44,960 --> 00:04:49,040
um

00:04:45,680 --> 00:04:51,280
what does it mean to be production ready

00:04:49,040 --> 00:04:53,040
the term is a bit vague so it may mean

00:04:51,280 --> 00:04:54,560
different things to different people so

00:04:53,040 --> 00:04:57,600
let us give a definition

00:04:54,560 --> 00:04:59,919
for which i hope we will all agree uh

00:04:57,600 --> 00:05:00,800
we see three three aspects to to that

00:04:59,919 --> 00:05:02,560
term it's

00:05:00,800 --> 00:05:04,080
one of them is feature completeness the

00:05:02,560 --> 00:05:04,960
other is stability and the last one is

00:05:04,080 --> 00:05:07,120
support

00:05:04,960 --> 00:05:08,639
it may involve other stuff but we think

00:05:07,120 --> 00:05:11,199
these are the three

00:05:08,639 --> 00:05:13,840
most important things uh to call

00:05:11,199 --> 00:05:17,039
something production already

00:05:13,840 --> 00:05:18,560
so future completeness uh usually we

00:05:17,039 --> 00:05:21,440
consider this term to be equal to future

00:05:18,560 --> 00:05:23,520
party when it comes to irini and diego

00:05:21,440 --> 00:05:24,639
and okay that makes some sense because

00:05:23,520 --> 00:05:26,320
diego is what

00:05:24,639 --> 00:05:27,919
people have been using so far so

00:05:26,320 --> 00:05:30,479
switching to something else

00:05:27,919 --> 00:05:32,479
they hope they get the same features uh

00:05:30,479 --> 00:05:34,080
and as i said it makes sense and we're

00:05:32,479 --> 00:05:37,199
trying to get there of course

00:05:34,080 --> 00:05:39,840
either by implementing um features

00:05:37,199 --> 00:05:40,800
in irene core or through third party

00:05:39,840 --> 00:05:43,600
extensions

00:05:40,800 --> 00:05:44,960
uh using the rainyx library so whatever

00:05:43,600 --> 00:05:48,320
has an asterisk in

00:05:44,960 --> 00:05:51,759
in this slide uh involves somehow the

00:05:48,320 --> 00:05:53,199
irenix library but feature completeness

00:05:51,759 --> 00:05:57,680
is not the same thing

00:05:53,199 --> 00:05:59,440
as uh feature parity uh so

00:05:57,680 --> 00:06:01,440
when something is feature complete it

00:05:59,440 --> 00:06:03,360
means it has all the features they need

00:06:01,440 --> 00:06:04,639
to complete the tasks it does the job

00:06:03,360 --> 00:06:06,720
right uh so

00:06:04,639 --> 00:06:08,000
if whatever is in the middle box here in

00:06:06,720 --> 00:06:10,400
the red box

00:06:08,000 --> 00:06:12,720
is what you need then you're good to go

00:06:10,400 --> 00:06:15,520
it's feature complete for your use case

00:06:12,720 --> 00:06:17,680
uh if it's on the left box which is

00:06:15,520 --> 00:06:20,880
things only diego has right now

00:06:17,680 --> 00:06:23,280
um then uh it's missing so

00:06:20,880 --> 00:06:24,400
so you would have to wait uh until it's

00:06:23,280 --> 00:06:27,600
implemented

00:06:24,400 --> 00:06:30,400
um so you can see that uh for example

00:06:27,600 --> 00:06:31,840
the the red box is interesting because

00:06:30,400 --> 00:06:36,080
you can see some things diego

00:06:31,840 --> 00:06:38,160
doesn't have so kubernetes tooling is um

00:06:36,080 --> 00:06:40,160
so why do you see swearing right because

00:06:38,160 --> 00:06:42,479
you already have kubernetes clusters

00:06:40,160 --> 00:06:45,120
uh you're used to working with

00:06:42,479 --> 00:06:47,440
kubernetes you know your way through

00:06:45,120 --> 00:06:48,560
the kubernetes objects and how to debug

00:06:47,440 --> 00:06:52,000
it so

00:06:48,560 --> 00:06:54,319
that's one benefit you get with rainy

00:06:52,000 --> 00:06:57,039
and flat containers as well because you

00:06:54,319 --> 00:06:59,039
don't run containers in containers

00:06:57,039 --> 00:07:00,880
so there are some things you will get

00:06:59,039 --> 00:07:03,840
with irini even though we don't have

00:07:00,880 --> 00:07:03,840
feature parity

00:07:04,240 --> 00:07:09,039
regarding stability now uh it really has

00:07:07,120 --> 00:07:12,160
the benefits to

00:07:09,039 --> 00:07:15,440
be delegating to kubernetes

00:07:12,160 --> 00:07:17,520
as a scheduler which is a good thing so

00:07:15,440 --> 00:07:19,599
after the point where you have a pod or

00:07:17,520 --> 00:07:21,759
more pose which is your application

00:07:19,599 --> 00:07:23,280
uh then it's all kubernetes so we

00:07:21,759 --> 00:07:24,080
somehow inherit the stability of the

00:07:23,280 --> 00:07:26,880
platform we

00:07:24,080 --> 00:07:28,720
we're based on but it of course is

00:07:26,880 --> 00:07:30,080
everything until that point so all the

00:07:28,720 --> 00:07:32,560
code that needs to work

00:07:30,080 --> 00:07:33,759
in order to to get your your application

00:07:32,560 --> 00:07:36,400
running as a pod

00:07:33,759 --> 00:07:37,599
and as jules showed in that slide with

00:07:36,400 --> 00:07:39,360
uh

00:07:37,599 --> 00:07:40,960
the timeline with the releases of the

00:07:39,360 --> 00:07:44,000
last year a lot of

00:07:40,960 --> 00:07:47,280
work has been put into it in making it

00:07:44,000 --> 00:07:49,280
more stable and we have test suites

00:07:47,280 --> 00:07:50,720
to test many of the features we also run

00:07:49,280 --> 00:07:53,199
cuts

00:07:50,720 --> 00:07:54,560
so yeah it is stable enough to be

00:07:53,199 --> 00:07:58,080
considered

00:07:54,560 --> 00:08:00,879
production ready

00:07:58,080 --> 00:08:02,639
and the last aspect of production

00:08:00,879 --> 00:08:04,560
readiness i want to talk about is

00:08:02,639 --> 00:08:06,240
is support so support is the answer to

00:08:04,560 --> 00:08:07,759
the question who is going to help me

00:08:06,240 --> 00:08:10,639
when i have a problem

00:08:07,759 --> 00:08:12,080
and this depends on who you are so are

00:08:10,639 --> 00:08:14,879
you just consuming the open source

00:08:12,080 --> 00:08:15,520
project or are you paying customers so

00:08:14,879 --> 00:08:17,520
when you're

00:08:15,520 --> 00:08:19,360
using an open source project you expect

00:08:17,520 --> 00:08:20,240
to get help from the maintainers of the

00:08:19,360 --> 00:08:23,280
project

00:08:20,240 --> 00:08:25,120
uh we have two consumers right now two

00:08:23,280 --> 00:08:27,919
projects consuming irini

00:08:25,120 --> 00:08:29,360
which are cube cf and cf4 cage in

00:08:27,919 --> 00:08:31,199
cubesafe you still have the option to

00:08:29,360 --> 00:08:34,560
use diego if you want but

00:08:31,199 --> 00:08:37,039
alien is considered stable there as well

00:08:34,560 --> 00:08:39,120
same thing for c4k it's i guess since

00:08:37,039 --> 00:08:41,200
this is the only option

00:08:39,120 --> 00:08:42,159
so you should expect help from those

00:08:41,200 --> 00:08:44,720
teams as well

00:08:42,159 --> 00:08:46,160
uh since it's part of their their

00:08:44,720 --> 00:08:48,959
project their product

00:08:46,160 --> 00:08:49,680
but of course from the uni team itself

00:08:48,959 --> 00:08:52,959
and

00:08:49,680 --> 00:08:55,120
uh product wise sousa announced as

00:08:52,959 --> 00:08:56,959
stable in the latest cap really so cup

00:08:55,120 --> 00:08:59,200
is the suse product that is based on

00:08:56,959 --> 00:09:03,279
cube cf

00:08:59,200 --> 00:09:05,120
so for paying customers suzuka provides

00:09:03,279 --> 00:09:06,959
support so it's part of what is

00:09:05,120 --> 00:09:10,560
supported in the suzuka product

00:09:06,959 --> 00:09:13,760
the latest release and i will let jules

00:09:10,560 --> 00:09:16,399
uh tell us the plans ibm has

00:09:13,760 --> 00:09:17,040
on when aiden will be integrated in ibm

00:09:16,399 --> 00:09:20,320
products so

00:09:17,040 --> 00:09:21,600
uh back to you jules all right thank you

00:09:20,320 --> 00:09:25,680
dimitris

00:09:21,600 --> 00:09:29,040
so what about ibm and irini

00:09:25,680 --> 00:09:32,959
so unlike suse ibm does not

00:09:29,040 --> 00:09:36,160
offer a single tenancy cloud foundry

00:09:32,959 --> 00:09:38,560
but we used to have one which was

00:09:36,160 --> 00:09:42,080
cloud foundry enterprise edition but we

00:09:38,560 --> 00:09:45,040
deprecated it like early this year

00:09:42,080 --> 00:09:45,839
what we have is a multi-tenancy cloud

00:09:45,040 --> 00:09:48,560
foundry

00:09:45,839 --> 00:09:50,080
basically where everyone can sign up and

00:09:48,560 --> 00:09:52,880
push the apps

00:09:50,080 --> 00:09:52,880
to the cloud

00:09:53,279 --> 00:10:00,080
and this cloud foundry today is

00:09:56,720 --> 00:10:04,959
based on bosch which means it comes on

00:10:00,080 --> 00:10:07,200
with diego backend and is based on vms

00:10:04,959 --> 00:10:08,399
do we plan to move that to a kubernetes

00:10:07,200 --> 00:10:11,760
based environment

00:10:08,399 --> 00:10:12,560
yes of course we do but before we handle

00:10:11,760 --> 00:10:14,079
that let's

00:10:12,560 --> 00:10:16,000
take a closer look at how this

00:10:14,079 --> 00:10:18,640
environment looks like today

00:10:16,000 --> 00:10:19,440
so we have multiple regions we have one

00:10:18,640 --> 00:10:22,399
in the us

00:10:19,440 --> 00:10:24,399
we have two in europe and we have one

00:10:22,399 --> 00:10:28,160
more in sydney

00:10:24,399 --> 00:10:31,200
and each of these deployments are spread

00:10:28,160 --> 00:10:33,680
through multiple data centers and

00:10:31,200 --> 00:10:36,000
each of those data centers is 100 to

00:10:33,680 --> 00:10:39,279
thousands of cells

00:10:36,000 --> 00:10:42,880
so it is basically a

00:10:39,279 --> 00:10:46,480
huge deployment so what is the plan

00:10:42,880 --> 00:10:49,519
to migrate this huge deployment to a

00:10:46,480 --> 00:10:53,519
kubernetes based deployment

00:10:49,519 --> 00:10:57,519
we plan to use coupe cf for that

00:10:53,519 --> 00:11:00,480
as we know coupe cf supports diego

00:10:57,519 --> 00:11:02,079
and coop cf supports irini so this is

00:11:00,480 --> 00:11:04,000
perfect for us because

00:11:02,079 --> 00:11:06,079
now we don't have to do one huge

00:11:04,000 --> 00:11:09,680
migration step from

00:11:06,079 --> 00:11:11,200
bosch and diego directly to kubernetes

00:11:09,680 --> 00:11:13,440
and irini

00:11:11,200 --> 00:11:14,800
instead we can do more like a two-step

00:11:13,440 --> 00:11:18,240
deployment where we say

00:11:14,800 --> 00:11:21,440
okay we move from bosch

00:11:18,240 --> 00:11:24,640
with diego to a kubernetes

00:11:21,440 --> 00:11:25,760
based cloud foundry with diego which is

00:11:24,640 --> 00:11:28,399
coop cf

00:11:25,760 --> 00:11:30,000
and after that we switch the backend

00:11:28,399 --> 00:11:33,440
from diego to

00:11:30,000 --> 00:11:36,480
irini so this would look like

00:11:33,440 --> 00:11:40,240
this so in step one we say

00:11:36,480 --> 00:11:43,680
okay we move first

00:11:40,240 --> 00:11:44,959
all applications to a kubernetes-based

00:11:43,680 --> 00:11:48,160
takeaway environment

00:11:44,959 --> 00:11:48,800
so how does that look like we basically

00:11:48,160 --> 00:11:52,000
deploy

00:11:48,800 --> 00:11:54,240
cells across multiple

00:11:52,000 --> 00:11:56,560
kubernetes clusters and we leave the

00:11:54,240 --> 00:11:59,680
control plane in the first place

00:11:56,560 --> 00:12:03,200
where it is bosch based vm based

00:11:59,680 --> 00:12:05,519
and we point it we point the back into

00:12:03,200 --> 00:12:06,480
to this kubernetes clusters where diego

00:12:05,519 --> 00:12:09,920
is running

00:12:06,480 --> 00:12:11,760
as diego doesn't use any kubernetes

00:12:09,920 --> 00:12:15,120
native features

00:12:11,760 --> 00:12:17,440
um here kubernetes just

00:12:15,120 --> 00:12:19,519
acts as a kind of wrapper and we just

00:12:17,440 --> 00:12:22,480
need to make the networking clear to

00:12:19,519 --> 00:12:24,000
basically be able to point the control

00:12:22,480 --> 00:12:28,959
plane of cloud foundry to

00:12:24,000 --> 00:12:28,959
diego which is running on kubernetes

00:12:29,279 --> 00:12:35,519
and then we would like to move the

00:12:32,399 --> 00:12:37,600
control plane over to kubernetes as well

00:12:35,519 --> 00:12:39,200
and then we have like a full based

00:12:37,600 --> 00:12:42,160
kubernetes

00:12:39,200 --> 00:12:44,240
kubernetes based cloud foundry running

00:12:42,160 --> 00:12:48,000
based on kubcf

00:12:44,240 --> 00:12:51,760
and in the next part which is step two

00:12:48,000 --> 00:12:53,200
we would start to exchange the back end

00:12:51,760 --> 00:12:56,560
the diego back in with

00:12:53,200 --> 00:12:59,920
irini and finally have all apps

00:12:56,560 --> 00:13:02,560
also running natively on kubernetes

00:12:59,920 --> 00:13:04,800
so this is the plan how does that look

00:13:02,560 --> 00:13:04,800
like

00:13:05,040 --> 00:13:12,000
ibm has some requirements

00:13:08,639 --> 00:13:15,360
so it needs to be reliable the pro the

00:13:12,000 --> 00:13:18,399
environments need to be scalable and

00:13:15,360 --> 00:13:20,800
we need high availability and based on

00:13:18,399 --> 00:13:23,440
this requirements

00:13:20,800 --> 00:13:24,880
we want to use multiple clusters as i

00:13:23,440 --> 00:13:29,680
already said

00:13:24,880 --> 00:13:32,560
and today we cannot do that with irini

00:13:29,680 --> 00:13:33,519
so we need to enable irini to be able to

00:13:32,560 --> 00:13:36,720
speak to

00:13:33,519 --> 00:13:37,920
multiple urine clusters or we need to

00:13:36,720 --> 00:13:40,639
make it

00:13:37,920 --> 00:13:41,600
in another way where we say we deploy

00:13:40,639 --> 00:13:43,920
one irini

00:13:41,600 --> 00:13:44,800
on each cluster and we say the cloud

00:13:43,920 --> 00:13:49,199
controller

00:13:44,800 --> 00:13:52,720
is able to speak to different irini

00:13:49,199 --> 00:13:54,800
instances on different clusters so

00:13:52,720 --> 00:13:56,959
what the perfect solution here would be

00:13:54,800 --> 00:13:58,320
is not clear yet we need to investigate

00:13:56,959 --> 00:14:00,880
we need to

00:13:58,320 --> 00:14:02,560
spike on it and do a little bit of

00:14:00,880 --> 00:14:05,040
research what would be the best

00:14:02,560 --> 00:14:06,880
way to do it but this is definitely some

00:14:05,040 --> 00:14:10,480
work we are going to

00:14:06,880 --> 00:14:12,320
do in the next time and

00:14:10,480 --> 00:14:14,240
i hope that at the next summit i can

00:14:12,320 --> 00:14:17,600
tell you more about how it

00:14:14,240 --> 00:14:22,000
went or what the solution is

00:14:17,600 --> 00:14:25,600
with that um here's my conclusion

00:14:22,000 --> 00:14:28,639
irini is ready to use um

00:14:25,600 --> 00:14:30,000
for single tenancy definitely we think

00:14:28,639 --> 00:14:33,440
is robust enough it's

00:14:30,000 --> 00:14:36,560
uh mature enough um

00:14:33,440 --> 00:14:40,079
yeah just go ahead uh you can go

00:14:36,560 --> 00:14:42,800
use coupe cf or cf for case both

00:14:40,079 --> 00:14:45,279
are defaulting to irini cfocates always

00:14:42,800 --> 00:14:47,199
use the rainy as a default

00:14:45,279 --> 00:14:50,480
i they don't even have an option for

00:14:47,199 --> 00:14:53,199
diego and coop cf you can use diego

00:14:50,480 --> 00:14:55,920
and irini and it might be an option for

00:14:53,199 --> 00:14:58,800
you to migrate from an existing

00:14:55,920 --> 00:15:01,199
bosch deployment to a coordinator-based

00:14:58,800 --> 00:15:04,480
deployment as we do at ibm

00:15:01,199 --> 00:15:06,079
and with that i want to say thank you

00:15:04,480 --> 00:15:10,000
for coming to our talk

00:15:06,079 --> 00:15:10,000
and we are happy to answer some

00:15:10,839 --> 00:15:27,839
questions

00:15:12,320 --> 00:15:27,839
all right i hope you can hear me

00:15:30,240 --> 00:15:38,240
okay jules will be joining

00:15:35,120 --> 00:15:41,839
shortly has to figure out how to join

00:15:38,240 --> 00:15:41,839
because i started the broadcast

00:15:42,720 --> 00:15:46,959
i'm not sure if all the people i can see

00:15:44,399 --> 00:15:49,199
on the right can hear me

00:15:46,959 --> 00:15:51,759
or it just transfers everybody from the

00:15:49,199 --> 00:15:54,480
presentation

00:15:51,759 --> 00:15:56,160
i hope you like the presentation it

00:15:54,480 --> 00:15:59,279
wasn't too detailed i think oh

00:15:56,160 --> 00:16:01,600
nice thanks ben um

00:15:59,279 --> 00:16:05,040
i guess we could dive a lot more into

00:16:01,600 --> 00:16:05,040
the changes that went into

00:16:06,839 --> 00:16:13,360
yeah i was prepared i had every tab open

00:16:10,320 --> 00:16:15,839
daniel um

00:16:13,360 --> 00:16:16,800
yeah so we just showed the releases but

00:16:15,839 --> 00:16:18,880
not

00:16:16,800 --> 00:16:20,880
the features that went in so you should

00:16:18,880 --> 00:16:22,639
definitely give it a try and uh

00:16:20,880 --> 00:16:24,160
if you don't want to go into that

00:16:22,639 --> 00:16:26,880
trouble yourself just uh

00:16:24,160 --> 00:16:29,839
have someone show that to you in uh

00:16:26,880 --> 00:16:29,839
sushi booth at least

00:16:30,079 --> 00:16:37,120
uh jules i'm not sure he started the

00:16:33,040 --> 00:16:40,320
progress or yeah i did

00:16:37,120 --> 00:16:40,320
there are people yeah

00:16:42,240 --> 00:16:46,000
okay just have some trouble so you can

00:16:44,399 --> 00:16:48,959
just ask me

00:16:46,000 --> 00:16:50,959
so we had a poll which i can see here ah

00:16:48,959 --> 00:16:55,600
no i can no longer see the poll i

00:16:50,959 --> 00:16:57,519
checked it right before we um

00:16:55,600 --> 00:16:59,440
yeah right before uh the presentation

00:16:57,519 --> 00:17:00,800
ended so i see some people had used it

00:16:59,440 --> 00:17:02,839
in you already

00:17:00,800 --> 00:17:05,839
i'm not sure maybe that was the arena

00:17:02,839 --> 00:17:05,839
team

00:17:06,959 --> 00:17:11,039
okay i guess more people have trouble

00:17:08,720 --> 00:17:12,240
joining this q a i remember in the last

00:17:11,039 --> 00:17:16,839
summit i

00:17:12,240 --> 00:17:19,839
couldn't join the q and a 2

00:17:16,839 --> 00:17:22,959
so

00:17:19,839 --> 00:17:22,959
what about irini

00:17:23,199 --> 00:17:33,840
hey hey mario

00:17:26,959 --> 00:17:33,840
what is the question what about it

00:17:42,400 --> 00:17:46,799
yeah oh there's a question an incoming

00:17:45,600 --> 00:17:48,720
one

00:17:46,799 --> 00:17:50,000
are there any stats anywhere on how

00:17:48,720 --> 00:17:51,760
scalable any is

00:17:50,000 --> 00:17:54,240
versus diego i'm thinking of a customer

00:17:51,760 --> 00:17:56,480
running uh

00:17:54,240 --> 00:17:58,160
x0 okay that's not zero comma zero

00:17:56,480 --> 00:17:59,600
application instances and whether rna

00:17:58,160 --> 00:18:00,240
will support this sort of skill in a

00:17:59,600 --> 00:18:03,039
single

00:18:00,240 --> 00:18:03,039
foundation

00:18:03,679 --> 00:18:07,280
uh just correct me if i'm wrong we

00:18:05,919 --> 00:18:10,720
haven't run

00:18:07,280 --> 00:18:13,760
tests in in that scale see tens

00:18:10,720 --> 00:18:17,200
of thousands applications

00:18:13,760 --> 00:18:18,559
mentions so i'm pretty sure nobody has

00:18:17,200 --> 00:18:22,799
done that

00:18:18,559 --> 00:18:27,039
yet hello oh you can hear us

00:18:22,799 --> 00:18:28,160
jules now i can i had to re-load okay

00:18:27,039 --> 00:18:29,840
let's go ahead

00:18:28,160 --> 00:18:31,840
i was trying to answer to daniel's

00:18:29,840 --> 00:18:32,559
question uh regarding scalability of

00:18:31,840 --> 00:18:34,799
irene

00:18:32,559 --> 00:18:36,080
so there are two things to that right so

00:18:34,799 --> 00:18:38,559
first of all

00:18:36,080 --> 00:18:40,799
uh we all know there is a limit of post

00:18:38,559 --> 00:18:42,480
the default limit of 110 if i recall

00:18:40,799 --> 00:18:44,320
correctly of what you can run in the

00:18:42,480 --> 00:18:46,240
node so first of all you you would have

00:18:44,320 --> 00:18:49,440
to figure out how you fit

00:18:46,240 --> 00:18:51,360
um tens of thousands of applications in

00:18:49,440 --> 00:18:52,720
a kubernetes cluster which is a problem

00:18:51,360 --> 00:18:54,080
of its own

00:18:52,720 --> 00:18:57,200
and then of course you have the problem

00:18:54,080 --> 00:18:58,960
of of arena whether it can squeeze them

00:18:57,200 --> 00:19:01,039
in or not

00:18:58,960 --> 00:19:02,480
that would mean you would need aha

00:19:01,039 --> 00:19:05,360
components from irene

00:19:02,480 --> 00:19:05,360
and other stuff

00:19:07,360 --> 00:19:11,120
which is an investigation we still have

00:19:10,640 --> 00:19:14,880
to

00:19:11,120 --> 00:19:17,840
uh to do uh so how scalable are the

00:19:14,880 --> 00:19:20,320
really components and then

00:19:17,840 --> 00:19:22,480
you have to to to reach the next problem

00:19:20,320 --> 00:19:24,400
which would be where you put them right

00:19:22,480 --> 00:19:25,919
but i think we don't have a clear answer

00:19:24,400 --> 00:19:29,520
to that jules

00:19:25,919 --> 00:19:31,600
at least to that scale um

00:19:29,520 --> 00:19:33,760
so yeah we we did some scale testing

00:19:31,600 --> 00:19:38,080
like a year ago

00:19:33,760 --> 00:19:41,360
um i don't remember the exact um

00:19:38,080 --> 00:19:44,400
numbers now but i think we pushed about

00:19:41,360 --> 00:19:49,039
1000 apps and irene was uh

00:19:44,400 --> 00:19:51,760
still fine so there was nothing um

00:19:49,039 --> 00:19:52,880
like uh like a bottleneck really on

00:19:51,760 --> 00:19:55,520
irini side

00:19:52,880 --> 00:19:56,480
i think there was some um i think we did

00:19:55,520 --> 00:19:58,880
it with scf

00:19:56,480 --> 00:20:00,640
back in the days uh but we still want to

00:19:58,880 --> 00:20:03,840
do some scalability testing

00:20:00,640 --> 00:20:06,320
um with cfo kate so coop cf

00:20:03,840 --> 00:20:08,880
so this is something we'll do also in

00:20:06,320 --> 00:20:08,880
the next time

00:20:10,240 --> 00:20:13,840
i hope this answers the question yeah i

00:20:12,480 --> 00:20:16,960
do

00:20:13,840 --> 00:20:21,360
and there's another question from timon

00:20:16,960 --> 00:20:23,760
uh no asd in irene i guess that was

00:20:21,360 --> 00:20:26,880
one of the slides that showed of the

00:20:23,760 --> 00:20:26,880
things that are missing in

00:20:27,039 --> 00:20:30,640
in irene compared to diego

00:20:31,440 --> 00:20:34,559
and the questions oh i left my tab where

00:20:34,080 --> 00:20:36,640
is it

00:20:34,559 --> 00:20:38,400
um is there another way to limit the

00:20:36,640 --> 00:20:39,280
network access for apps when running

00:20:38,400 --> 00:20:44,000
with rini

00:20:39,280 --> 00:20:46,240
um i guess another way means a work

00:20:44,000 --> 00:20:47,919
around until we have it so it could be

00:20:46,240 --> 00:20:50,159
anything that works right so in that

00:20:47,919 --> 00:20:52,320
case you you'd uh probably use

00:20:50,159 --> 00:20:52,320
uh

00:20:53,280 --> 00:20:56,960
sorry kubernetes objects uh network

00:20:56,240 --> 00:21:00,720
policies

00:20:56,960 --> 00:21:03,840
and such that means you would

00:21:00,720 --> 00:21:07,679
have to talk directly to kubernetes

00:21:03,840 --> 00:21:09,520
which is kind of the reason we had the

00:21:07,679 --> 00:21:11,039
uh cf in the first place right you're

00:21:09,520 --> 00:21:12,480
not supposed to talk to bernards maybe

00:21:11,039 --> 00:21:13,120
you don't even have access to your

00:21:12,480 --> 00:21:15,360
cluster

00:21:13,120 --> 00:21:16,720
if permissions are set up correctly

00:21:15,360 --> 00:21:18,960
maybe you can't

00:21:16,720 --> 00:21:20,320
even do that maybe as a user you don't

00:21:18,960 --> 00:21:22,960
have um

00:21:20,320 --> 00:21:24,159
so as a developer pushing an app or

00:21:22,960 --> 00:21:25,679
multiple apps maybe you don't have

00:21:24,159 --> 00:21:28,480
permissions to do so

00:21:25,679 --> 00:21:31,840
so that might not be a viable solution

00:21:28,480 --> 00:21:34,240
or a workaround

00:21:31,840 --> 00:21:36,240
uh so yeah we would need to get a as

00:21:34,240 --> 00:21:37,919
these

00:21:36,240 --> 00:21:39,840
security groups application security

00:21:37,919 --> 00:21:45,840
groups in irene

00:21:39,840 --> 00:21:45,840
to do that

00:21:46,000 --> 00:21:50,240
so there are as i said um that's at

00:21:48,960 --> 00:21:53,760
least that's what i tried to

00:21:50,240 --> 00:21:55,919
to say in my part of the presentation is

00:21:53,760 --> 00:21:57,039
yeah you have to we have to be clear on

00:21:55,919 --> 00:21:59,520
what works and what

00:21:57,039 --> 00:22:00,480
not and when someone decides whether to

00:21:59,520 --> 00:22:03,679
use it or not

00:22:00,480 --> 00:22:04,559
uh it's it should be based on on the

00:22:03,679 --> 00:22:06,320
needs right so

00:22:04,559 --> 00:22:07,679
if it didn't can on the cluster so if

00:22:06,320 --> 00:22:11,039
you're deploying

00:22:07,679 --> 00:22:13,440
um uh if you are deploying a cloud

00:22:11,039 --> 00:22:14,960
foundry on a single cluster

00:22:13,440 --> 00:22:18,080
and you only have a single instance of

00:22:14,960 --> 00:22:20,080
cloud foundry there with a single tenant

00:22:18,080 --> 00:22:21,120
you care less about other stuff so maybe

00:22:20,080 --> 00:22:22,400
you're deploying

00:22:21,120 --> 00:22:24,640
applications that should talk to each

00:22:22,400 --> 00:22:26,400
other anyway

00:22:24,640 --> 00:22:28,159
so yeah we have to be clear on what's

00:22:26,400 --> 00:22:29,679
missing um

00:22:28,159 --> 00:22:31,200
for people to decide so it doesn't mean

00:22:29,679 --> 00:22:33,440
it's production ready for everybody

00:22:31,200 --> 00:22:33,440
right

00:22:33,600 --> 00:22:38,320
i hope that's uh that's answering the

00:22:38,840 --> 00:22:42,240
question

00:22:40,159 --> 00:22:46,080
i'm clicking on answer live i guess that

00:22:42,240 --> 00:22:46,080
means i answered on video

00:22:47,760 --> 00:22:55,440
okay i'm clicking that one marth

00:22:51,120 --> 00:22:58,880
is asking is the future preferred setup

00:22:55,440 --> 00:23:02,000
that for every aged you have a separate

00:22:58,880 --> 00:23:06,559
kubernetes cluster

00:23:02,000 --> 00:23:06,559
jules i think uh that's for you

00:23:06,840 --> 00:23:11,440
um i think for um

00:23:09,830 --> 00:23:16,000
[Music]

00:23:11,440 --> 00:23:18,400
for for ibm yes um

00:23:16,000 --> 00:23:20,799
for details again there was a talk by

00:23:18,400 --> 00:23:24,080
richard johnson from ibm

00:23:20,799 --> 00:23:27,280
who is doing a lot of work in

00:23:24,080 --> 00:23:29,360
in that area uh from moving from vms to

00:23:27,280 --> 00:23:30,960
to containerized cloud foundry in that

00:23:29,360 --> 00:23:34,080
case coupe cf

00:23:30,960 --> 00:23:37,440
um but a large scale um

00:23:34,080 --> 00:23:38,159
it might be better to use multiple

00:23:37,440 --> 00:23:41,520
kubernetes

00:23:38,159 --> 00:23:44,640
clusters uh just because of scalability

00:23:41,520 --> 00:23:47,200
kubernetes has a single api

00:23:44,640 --> 00:23:50,640
and it has there's a lot of pressure on

00:23:47,200 --> 00:23:52,720
it especially if you push a lot of apps

00:23:50,640 --> 00:23:54,320
in the past there was like problems with

00:23:52,720 --> 00:23:55,840
scd

00:23:54,320 --> 00:23:59,039
i don't know which version of kubernetes

00:23:55,840 --> 00:24:02,320
it was i think 113 or something

00:23:59,039 --> 00:24:04,480
but they changed it at some point and

00:24:02,320 --> 00:24:06,640
now you can put much more load on the

00:24:04,480 --> 00:24:10,320
head steam kubernetes but

00:24:06,640 --> 00:24:13,760
uh still um we don't know yet

00:24:10,320 --> 00:24:15,039
how how many apps you can really or how

00:24:13,760 --> 00:24:18,480
much you can really scale

00:24:15,039 --> 00:24:21,039
one single kubernetes cluster

00:24:18,480 --> 00:24:22,400
and there's again like many questions

00:24:21,039 --> 00:24:26,720
about high availability

00:24:22,400 --> 00:24:29,440
resiliency and so on so

00:24:26,720 --> 00:24:30,640
for us at ibm it's definitely the

00:24:29,440 --> 00:24:35,840
preferred

00:24:30,640 --> 00:24:35,840
way to do it on that huge

00:24:35,919 --> 00:24:39,600
deployment of cloud foundry

00:24:42,240 --> 00:24:48,320
all right another question from daniel

00:24:45,760 --> 00:24:50,240
is ibm seeing any business benefit

00:24:48,320 --> 00:24:50,640
benefit from moving to kubernetes other

00:24:50,240 --> 00:24:52,279
than

00:24:50,640 --> 00:24:55,760
we don't have to worry about the

00:24:52,279 --> 00:24:59,360
dwindling boss skill set

00:24:55,760 --> 00:25:02,960
um for public offering i mean there's

00:24:59,360 --> 00:25:06,000
probably nothing for

00:25:02,960 --> 00:25:09,039
um for the users there's probably

00:25:06,000 --> 00:25:09,760
not a visible benefit for the users but

00:25:09,039 --> 00:25:12,840
for us

00:25:09,760 --> 00:25:14,400
um on the operational side probably yes

00:25:12,840 --> 00:25:17,360
um

00:25:14,400 --> 00:25:18,720
as we can rely on our kubernetes

00:25:17,360 --> 00:25:19,850
offerings to

00:25:18,720 --> 00:25:21,919
run our

00:25:19,850 --> 00:25:25,760
[Music]

00:25:21,919 --> 00:25:27,919
deployment there but

00:25:25,760 --> 00:25:28,960
this is probably also like a better

00:25:27,919 --> 00:25:32,080
question for

00:25:28,960 --> 00:25:34,320
richard johnson from ibm you should be

00:25:32,080 --> 00:25:34,320
around

00:25:34,640 --> 00:25:38,799
which makes me think of that i think it

00:25:36,320 --> 00:25:41,360
was in the um

00:25:38,799 --> 00:25:43,440
conference that the discussion about the

00:25:41,360 --> 00:25:46,799
future of boss

00:25:43,440 --> 00:25:50,400
given uh cf was the main

00:25:46,799 --> 00:25:53,440
project based on on boss that makes you

00:25:50,400 --> 00:25:55,919
think of uh how well boss will be

00:25:53,440 --> 00:25:57,520
uh supported in the future and whether

00:25:55,919 --> 00:26:00,400
you should keep uh

00:25:57,520 --> 00:26:01,120
investing on that right of course i can

00:26:00,400 --> 00:26:02,960
talk uh

00:26:01,120 --> 00:26:04,559
for ibm but i'm thinking that it could

00:26:02,960 --> 00:26:05,440
be something to think about whether you

00:26:04,559 --> 00:26:08,080
invest in

00:26:05,440 --> 00:26:10,960
in kubernetes skills uh train your

00:26:08,080 --> 00:26:10,960
people on that or

00:26:19,760 --> 00:26:22,080
okay

00:26:23,200 --> 00:26:27,200
there are no other questions coming in

00:26:33,440 --> 00:26:40,159
and congrats jules live for the award

00:26:37,120 --> 00:26:41,919
great thank you thank you so so

00:26:40,159 --> 00:26:43,279
maybe the community is too small but two

00:26:41,919 --> 00:26:45,840
of the people that uh

00:26:43,279 --> 00:26:46,559
took an award are colleagues of mine

00:26:45,840 --> 00:26:50,799
both you and

00:26:46,559 --> 00:26:54,559
tori yeah nice that's nice i'm too lucky

00:26:50,799 --> 00:26:57,120
that's really cool is pws is dead

00:26:54,559 --> 00:26:57,840
oh it's gone where did it go yeah where

00:26:57,120 --> 00:27:00,400
did it go

00:26:57,840 --> 00:27:01,360
did you click on it ah no someone

00:27:00,400 --> 00:27:03,520
clicked

00:27:01,360 --> 00:27:05,200
yeah it's an answer questions let's read

00:27:03,520 --> 00:27:08,240
it from there

00:27:05,200 --> 00:27:10,640
um as uh

00:27:08,240 --> 00:27:12,880
that's pivotal web services right pws is

00:27:10,640 --> 00:27:16,159
dead is ibm the best solution to ucf

00:27:12,880 --> 00:27:19,200
without putting up your own solution

00:27:16,159 --> 00:27:20,159
you're asking tools now emma yes of

00:27:19,200 --> 00:27:24,000
course

00:27:20,159 --> 00:27:24,320
of course you could as well answer it

00:27:24,000 --> 00:27:34,240
was

00:27:24,320 --> 00:27:35,870
the best solution before exactly exactly

00:27:34,240 --> 00:27:39,420
don't ask easy questions come on

00:27:35,870 --> 00:27:39,420
[Laughter]

00:27:39,760 --> 00:27:49,840
that's fine

00:27:56,799 --> 00:28:01,760
okay ask your questions quickly before

00:28:00,159 --> 00:28:02,240
we get kicked out i don't know how this

00:28:01,760 --> 00:28:06,080
works

00:28:02,240 --> 00:28:09,360
either we stop it or we get kicked out

00:28:06,080 --> 00:28:12,000
i think if there are no answers coming

00:28:09,360 --> 00:28:12,000
in anymore

00:28:13,360 --> 00:28:17,840
let's wait another i know a minute

00:28:27,120 --> 00:28:34,000
but anyways oh is there more no no no no

00:28:30,960 --> 00:28:35,760
replied in the chat on behalf of my

00:28:34,000 --> 00:28:36,799
friends at 99's the public safe is also

00:28:35,760 --> 00:28:39,440
an alternative to

00:28:36,799 --> 00:28:39,440
pws

00:28:40,640 --> 00:28:48,799
nice yeah anyways thank you very much

00:28:45,440 --> 00:28:51,840
um for attending our talk i

00:28:48,799 --> 00:28:53,440
hope it was informative and you enjoyed

00:28:51,840 --> 00:28:56,559
it

00:28:53,440 --> 00:28:58,880
and thank you for the questions and yeah

00:28:56,559 --> 00:28:59,760
feel free to find us in slack and ask

00:28:58,880 --> 00:29:03,440
any questions you

00:28:59,760 --> 00:29:05,600
couldn't ask now or you you think later

00:29:03,440 --> 00:29:07,840
and yeah see you around see you at the

00:29:05,600 --> 00:29:10,840
souza booth i will be there so

00:29:07,840 --> 00:29:13,840
we can try things hands on there thanks

00:29:10,840 --> 00:29:13,840
everybody

00:29:14,919 --> 00:29:17,919

YouTube URL: https://www.youtube.com/watch?v=YQOJGpnDzMg


