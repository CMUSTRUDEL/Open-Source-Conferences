Title: cf-for-k8s SIG [April 2020]
Publication date: 2020-04-30
Playlist: Cloud Foundry for Kubernetes Monthly SIG
Description: 
	
Captions: 
	00:00:00,490 --> 00:00:02,550
you

00:00:02,720 --> 00:00:04,780
you

00:00:10,519 --> 00:00:14,290
you

00:00:12,230 --> 00:00:14,290
you

00:00:19,150 --> 00:00:26,980
okay so officially welcome to this

00:00:24,050 --> 00:00:29,440
week's instance of the cloud foundry on

00:00:26,980 --> 00:00:32,180
kubernetes special interest group call

00:00:29,440 --> 00:00:34,220
as mentioned before the recording was

00:00:32,180 --> 00:00:38,150
actually started this time we are going

00:00:34,220 --> 00:00:40,640
to talk about UAE and the ideas the USA

00:00:38,150 --> 00:00:43,730
team has in the context of cloud foundry

00:00:40,640 --> 00:00:47,510
on kubernetes and we have Jeremy from

00:00:43,730 --> 00:00:49,430
the team with us - I don't know

00:00:47,510 --> 00:00:51,620
depending on like everybody's preference

00:00:49,430 --> 00:00:55,489
either answer questions right away or

00:00:51,620 --> 00:00:59,720
ask Jeremy to kind of start with a brain

00:00:55,489 --> 00:01:01,730
dump and/or slides to kind of give us an

00:00:59,720 --> 00:01:05,239
introduction on what the team thinks

00:01:01,730 --> 00:01:06,680
about kubernetes and what plans are well

00:01:05,239 --> 00:01:10,159
maybe we'll lead with a disappointment

00:01:06,680 --> 00:01:12,890
there are no slides but I'm happy to

00:01:10,159 --> 00:01:16,030
answer any questions I'm happy to give a

00:01:12,890 --> 00:01:18,380
brief history of where we are with

00:01:16,030 --> 00:01:22,430
running you know container izing the UAA

00:01:18,380 --> 00:01:23,830
and making it available hungry yeah let

00:01:22,430 --> 00:01:30,980
me know what you'd like to talk about I

00:01:23,830 --> 00:01:33,860
have a question you probably know we had

00:01:30,980 --> 00:01:37,490
a spike recently to integrate native UAE

00:01:33,860 --> 00:01:38,050
into cube CF and if that one that went

00:01:37,490 --> 00:01:41,510
pretty well

00:01:38,050 --> 00:01:44,600
we were able to make it work and we

00:01:41,510 --> 00:01:48,830
consumed the docker image and removed

00:01:44,600 --> 00:01:50,510
the boss version from qcf used the

00:01:48,830 --> 00:01:54,610
docker image and everything worked fine

00:01:50,510 --> 00:01:58,670
though the only thing that we found was

00:01:54,610 --> 00:02:03,320
configuration so right now you have to

00:01:58,670 --> 00:02:06,650
mount the UAE llamó config file into the

00:02:03,320 --> 00:02:09,649
container and we were thinking is it

00:02:06,650 --> 00:02:12,490
possible to do configuration environment

00:02:09,649 --> 00:02:16,120
variables and could that be like

00:02:12,490 --> 00:02:18,349
[Music]

00:02:16,120 --> 00:02:21,319
something that all of the component

00:02:18,349 --> 00:02:23,760
teams do kind of like follow the advice

00:02:21,319 --> 00:02:26,709
that we give customers

00:02:23,760 --> 00:02:29,110
since then integration means you don't

00:02:26,709 --> 00:02:31,349
have to know all of the formats of all

00:02:29,110 --> 00:02:35,400
config files that make up all the

00:02:31,349 --> 00:02:39,760
components of Cal foundry it's also

00:02:35,400 --> 00:02:43,810
secure you can reference secrets from

00:02:39,760 --> 00:02:46,090
environment variables and yeah like I

00:02:43,810 --> 00:02:49,540
said I think one of the main pluses is

00:02:46,090 --> 00:02:51,730
that you don't have to know the format

00:02:49,540 --> 00:02:53,950
of each individual component the

00:02:51,730 --> 00:02:55,030
configuration makeup could you elaborate

00:02:53,950 --> 00:02:57,010
a little bit more on that I don't I

00:02:55,030 --> 00:02:58,450
don't fully understand

00:02:57,010 --> 00:03:02,290
I think sure what you're saying is

00:02:58,450 --> 00:03:04,299
instead of needing to know the the exact

00:03:02,290 --> 00:03:05,440
structure of the gamal document each of

00:03:04,299 --> 00:03:10,829
the properties you just have its own

00:03:05,440 --> 00:03:12,970
name yeah and you'd have you a a consume

00:03:10,829 --> 00:03:15,700
configuration from environment variables

00:03:12,970 --> 00:03:18,579
gotcha so just like a cloud formed react

00:03:15,700 --> 00:03:23,650
would do I don't know that the UA a

00:03:18,579 --> 00:03:25,540
would support that for a reason of

00:03:23,650 --> 00:03:27,880
practicality the UA is highly

00:03:25,540 --> 00:03:30,100
configurable I think in the Bosch

00:03:27,880 --> 00:03:32,139
release there are over 200 configurable

00:03:30,100 --> 00:03:35,019
properties and I think under the hood

00:03:32,139 --> 00:03:37,180
there's even more so that would be

00:03:35,019 --> 00:03:40,660
hundreds of environment variables

00:03:37,180 --> 00:03:43,060
I think the way but that's handled right

00:03:40,660 --> 00:03:44,590
now although this is not available in

00:03:43,060 --> 00:03:45,940
the Cates release and I'm not even sure

00:03:44,590 --> 00:03:48,069
if it's available in the Box release to

00:03:45,940 --> 00:03:50,049
be honest there is one way in which you

00:03:48,069 --> 00:03:53,590
can provide that llamó as an environment

00:03:50,049 --> 00:03:56,200
variable but like I said I don't believe

00:03:53,590 --> 00:03:59,760
that's exposed and I also don't know

00:03:56,200 --> 00:04:02,319
that we plan to support that long term

00:03:59,760 --> 00:04:03,970
with respect to things being on the file

00:04:02,319 --> 00:04:06,280
system versus environment variables I

00:04:03,970 --> 00:04:08,500
also know that I could I could speak a

00:04:06,280 --> 00:04:12,010
little bit to the security aspect of

00:04:08,500 --> 00:04:15,250
that we've actually chosen with respect

00:04:12,010 --> 00:04:19,389
to managing secrets within the UA to use

00:04:15,250 --> 00:04:21,160
the to use the file mount like so the

00:04:19,389 --> 00:04:23,770
secret mount writes that's a ram backed

00:04:21,160 --> 00:04:26,349
mount as opposed to environment

00:04:23,770 --> 00:04:29,710
variables I believe that's kind of the

00:04:26,349 --> 00:04:31,000
human Nettie's communities there's a

00:04:29,710 --> 00:04:35,020
preference within the community to do

00:04:31,000 --> 00:04:36,219
that because it is perceived to be more

00:04:35,020 --> 00:04:37,300
secure than environment variables

00:04:36,219 --> 00:04:39,430
actually because if somebody

00:04:37,300 --> 00:04:42,159
to get access to the VM but that note is

00:04:39,430 --> 00:04:44,349
running on they just need to go and find

00:04:42,159 --> 00:04:46,180
like the proc tile are not the profile

00:04:44,349 --> 00:04:48,159
I'm sorry they just need to go in like

00:04:46,180 --> 00:04:49,509
what is the name of that directory where

00:04:48,159 --> 00:04:51,819
it lists all of the environment

00:04:49,509 --> 00:04:56,349
variables and the rent bronze cam yeah

00:04:51,819 --> 00:04:59,199
sorry early morning for me and so it's

00:04:56,349 --> 00:05:00,280
there's your secret right which is to me

00:04:59,199 --> 00:05:01,569
not that big of a difference between

00:05:00,280 --> 00:05:02,740
being like getting access and then I

00:05:01,569 --> 00:05:04,690
just go and look at where the secrets

00:05:02,740 --> 00:05:09,039
been mounted into a ran back filesystem

00:05:04,690 --> 00:05:12,879
but nonetheless that is I think the fact

00:05:09,039 --> 00:05:14,560
that it gets backed by a an on like by a

00:05:12,879 --> 00:05:16,539
volatile memory source is what people

00:05:14,560 --> 00:05:18,009
perceive to be more more secure than

00:05:16,539 --> 00:05:20,289
putting it into the environment variable

00:05:18,009 --> 00:05:22,740
which then gets written out somewhere

00:05:20,289 --> 00:05:26,469
else which may or may not be backed by a

00:05:22,740 --> 00:05:28,539
so I believe there might be a desire to

00:05:26,469 --> 00:05:30,879
continue to move more towards the file

00:05:28,539 --> 00:05:33,759
based backings rather than the

00:05:30,879 --> 00:05:36,539
environment based backings on the other

00:05:33,759 --> 00:05:40,270
hand while I was like because I had a

00:05:36,539 --> 00:05:42,279
specific question towards a property

00:05:40,270 --> 00:05:46,779
that is exposed to the Bosh release and

00:05:42,279 --> 00:05:49,419
not yet in in Africa's variant and

00:05:46,779 --> 00:05:52,060
wanted to ask like how open you would be

00:05:49,419 --> 00:05:53,919
for a PR to expose that I just looked up

00:05:52,060 --> 00:05:57,729
the things and the UA a young is

00:05:53,919 --> 00:06:00,789
actually a conflict map yeah you want to

00:05:57,729 --> 00:06:03,969
change that no there are secrets in

00:06:00,789 --> 00:06:05,080
there the secrets are why I'm not trying

00:06:03,969 --> 00:06:07,330
to percentage danger question your

00:06:05,080 --> 00:06:09,729
question is like are we open to a PR and

00:06:07,330 --> 00:06:13,029
yeah like like concretely we currently

00:06:09,729 --> 00:06:15,219
use in our Bosh based product the

00:06:13,029 --> 00:06:18,550
possibility to set the default identity

00:06:15,219 --> 00:06:20,979
provider for login sure and that is not

00:06:18,550 --> 00:06:23,440
yet exposed in CF brigades as a property

00:06:20,979 --> 00:06:25,509
that you can pass in as a value right

00:06:23,440 --> 00:06:27,250
and so I think in the question and two

00:06:25,509 --> 00:06:28,840
there's two phases to the answer there's

00:06:27,250 --> 00:06:31,300
two parts of that question the first is

00:06:28,840 --> 00:06:34,180
totally open to a PR but I would

00:06:31,300 --> 00:06:35,770
encourage you to open an issue first and

00:06:34,180 --> 00:06:37,120
start a conversation about the change to

00:06:35,770 --> 00:06:39,250
make sure it actually aligns with what

00:06:37,120 --> 00:06:40,719
we're trying to do I think we can look

00:06:39,250 --> 00:06:42,370
at our case releases like a zero one

00:06:40,719 --> 00:06:47,020
zero release I wouldn't exactly call it

00:06:42,370 --> 00:06:50,320
stable and I also think it's I should

00:06:47,020 --> 00:06:54,040
highlight that we have some

00:06:50,320 --> 00:06:56,310
turnover in our product work so it would

00:06:54,040 --> 00:06:58,510
be helpful to run those things through

00:06:56,310 --> 00:06:59,470
that's what a process to like first be

00:06:58,510 --> 00:07:01,150
like would you be interested in this

00:06:59,470 --> 00:07:07,600
change so we can get you know our new

00:07:01,150 --> 00:07:09,550
product people more involved yeah

00:07:07,600 --> 00:07:10,900
absolutely open to contributions once we

00:07:09,550 --> 00:07:13,660
get through that initial conversation

00:07:10,900 --> 00:07:15,370
and we all agree on an approach with

00:07:13,660 --> 00:07:18,220
respect to configuration that's being

00:07:15,370 --> 00:07:20,650
exposed by the UA yeah it's it's a

00:07:18,220 --> 00:07:23,380
config map right now it's a very minimal

00:07:20,650 --> 00:07:28,660
config map like the number of properties

00:07:23,380 --> 00:07:30,910
that we expose our it's small that's

00:07:28,660 --> 00:07:32,410
actually intentional the idea is that

00:07:30,910 --> 00:07:34,810
for anything more complicated it's bring

00:07:32,410 --> 00:07:37,060
your own config map just override it and

00:07:34,810 --> 00:07:39,310
provide a different configuration you're

00:07:37,060 --> 00:07:41,950
looking for and that was an explicit

00:07:39,310 --> 00:07:45,880
design choice that we made for now

00:07:41,950 --> 00:07:47,200
because we we actually don't we're not

00:07:45,880 --> 00:07:48,700
happy with the way the bot release works

00:07:47,200 --> 00:07:50,020
like the configuration for that the

00:07:48,700 --> 00:07:55,120
configuration story there is a little

00:07:50,020 --> 00:07:56,890
overwhelming it's hard to consume people

00:07:55,120 --> 00:07:58,840
constantly have questions it's it's it's

00:07:56,890 --> 00:08:00,640
pretty unapproachable and we didn't want

00:07:58,840 --> 00:08:04,240
to replicate that but we also didn't

00:08:00,640 --> 00:08:05,740
want to we didn't want to prevent people

00:08:04,240 --> 00:08:07,840
from being able to configure the UA

00:08:05,740 --> 00:08:09,880
which is why we've opted to make the UA

00:08:07,840 --> 00:08:14,160
available or the to expose the

00:08:09,880 --> 00:08:17,770
configuration in the way we did okay so

00:08:14,160 --> 00:08:21,130
could you think about actually finding

00:08:17,770 --> 00:08:23,680
some way to overlay configuration done I

00:08:21,130 --> 00:08:25,510
mean maybe not with ytt overlay

00:08:23,680 --> 00:08:27,820
templating functionality well that's

00:08:25,510 --> 00:08:30,010
otherwise it would be a hard time to

00:08:27,820 --> 00:08:32,020
track the actual default coming from

00:08:30,010 --> 00:08:33,790
upstream if there's just one property

00:08:32,020 --> 00:08:35,560
that you want to set differently from

00:08:33,790 --> 00:08:36,700
the I guess I could encourage you to

00:08:35,560 --> 00:08:38,760
look at the way this year for Kate's

00:08:36,700 --> 00:08:42,490
team is doing it they are doing that

00:08:38,760 --> 00:08:45,970
with the UA a with the ytt overlays I

00:08:42,490 --> 00:08:47,170
mean yeah I believe it's a little hard

00:08:45,970 --> 00:08:49,840
to follow what they're doing I think it

00:08:47,170 --> 00:08:51,100
could probably be I wonder if it can be

00:08:49,840 --> 00:08:52,600
simplified I would actually like to work

00:08:51,100 --> 00:08:56,230
with that team a little bit more to see

00:08:52,600 --> 00:08:58,900
I think for us like we made a choice and

00:08:56,230 --> 00:09:00,250
we'd like to validate it further and see

00:08:58,900 --> 00:09:01,480
if it's easier to work with like one

00:09:00,250 --> 00:09:03,889
thing I learned is that we bundled the

00:09:01,480 --> 00:09:06,079
log4j

00:09:03,889 --> 00:09:09,709
properties file in the same config map

00:09:06,079 --> 00:09:10,939
as the UA amo config like file and I

00:09:09,709 --> 00:09:13,399
think that might make things a little

00:09:10,939 --> 00:09:14,480
trickier so there's probably some

00:09:13,399 --> 00:09:15,619
improvements we can make along the way

00:09:14,480 --> 00:09:18,230
for sure and we're definitely open to

00:09:15,619 --> 00:09:20,359
feedback but um yeah the idea was bring

00:09:18,230 --> 00:09:22,790
your own UA a llamo if you don't

00:09:20,359 --> 00:09:24,639
basically meet this very very limited

00:09:22,790 --> 00:09:29,779
like out-of-the-box set up for the UA a

00:09:24,639 --> 00:09:34,220
and I believe you can use other relays

00:09:29,779 --> 00:09:35,899
to add on to what is provided you you

00:09:34,220 --> 00:09:39,109
definitely can although it gets a little

00:09:35,899 --> 00:09:41,869
difficult because the the actual llamo

00:09:39,109 --> 00:09:45,529
is actually part of the y TT function

00:09:41,869 --> 00:09:47,299
but like by like figuring out how to how

00:09:45,529 --> 00:09:49,579
to configure copy to run with an

00:09:47,299 --> 00:09:51,949
external blobstore we already figured

00:09:49,579 --> 00:09:55,790
out that y TT has functionality to

00:09:51,949 --> 00:10:00,019
actually change the content of y TT

00:09:55,790 --> 00:10:02,779
functions by forcing intent c realizing

00:10:00,019 --> 00:10:04,160
it again but that was like not a way of

00:10:02,779 --> 00:10:06,160
overlay I actually meant I meant

00:10:04,160 --> 00:10:09,499
something like there's like confit

00:10:06,160 --> 00:10:11,269
directories in in Linux where multiple

00:10:09,499 --> 00:10:14,600
config files would be there and there's

00:10:11,269 --> 00:10:17,600
some kind of handling of like what has

00:10:14,600 --> 00:10:19,339
precedence over what so some more like a

00:10:17,600 --> 00:10:22,249
runtime overlay not the templating

00:10:19,339 --> 00:10:23,749
understood the UA a actually does

00:10:22,249 --> 00:10:29,239
support something like that although

00:10:23,749 --> 00:10:31,850
that's also kind of scary Oh in the UAE

00:10:29,239 --> 00:10:34,999
it's like from a legacy perspective we

00:10:31,850 --> 00:10:38,059
explicitly chose not to expose that and

00:10:34,999 --> 00:10:39,499
UAA has a set of like I forget how many

00:10:38,059 --> 00:10:40,809
environment variables you can tell it

00:10:39,499 --> 00:10:43,220
like three environment variables like

00:10:40,809 --> 00:10:44,929
eight or nine different places to look

00:10:43,220 --> 00:10:47,539
for config and it will kind of overlay

00:10:44,929 --> 00:10:49,339
them it's unclear what the order of

00:10:47,539 --> 00:10:50,660
precedence is or who wins or what your

00:10:49,339 --> 00:10:52,839
actual yeah mole looks like which is why

00:10:50,660 --> 00:10:55,610
we don't recommend people do this

00:10:52,839 --> 00:10:56,779
similarly the secrets implementation

00:10:55,610 --> 00:10:58,759
that we currently have kind of does

00:10:56,779 --> 00:11:01,189
something a little bit similar where

00:10:58,759 --> 00:11:03,529
it's overlaying the the y ammo from the

00:11:01,189 --> 00:11:05,119
secrets on to that that final map so

00:11:03,529 --> 00:11:07,779
those I know some communities do exist

00:11:05,119 --> 00:11:10,339
again I think we have chosen

00:11:07,779 --> 00:11:12,679
intentionally not to expose a lot of

00:11:10,339 --> 00:11:14,119
that behavior just yet because well

00:11:12,679 --> 00:11:15,860
because it's it's led to really

00:11:14,119 --> 00:11:17,460
confusing experience for most of our

00:11:15,860 --> 00:11:19,470
users and we we would like

00:11:17,460 --> 00:11:27,330
- we'd like to start making some

00:11:19,470 --> 00:11:30,810
improvements there so I guess I'll start

00:11:27,330 --> 00:11:33,330
by creating an issue to discuss you a

00:11:30,810 --> 00:11:35,760
configuration in like more broader terms

00:11:33,330 --> 00:11:38,490
not not open something for a very

00:11:35,760 --> 00:11:42,240
specific property but like in broader

00:11:38,490 --> 00:11:44,760
terms if ytt overlay is the way to go

00:11:42,240 --> 00:11:47,810
then I think putting the config amyl

00:11:44,760 --> 00:11:51,000
inside of a YTD function is a bad choice

00:11:47,810 --> 00:11:53,070
if you actually want people to use ytt

00:11:51,000 --> 00:11:56,040
overlays to do that kind of

00:11:53,070 --> 00:11:57,690
configuration which works like like even

00:11:56,040 --> 00:12:00,690
better than ops files in the Boche world

00:11:57,690 --> 00:12:03,750
because ytt has like more features

00:12:00,690 --> 00:12:05,910
regarding this overlay kind of thing but

00:12:03,750 --> 00:12:08,190
splitting it in a function actually it

00:12:05,910 --> 00:12:09,930
just adds an obstacle and yeah I'll

00:12:08,190 --> 00:12:11,670
probably start with opening a

00:12:09,930 --> 00:12:13,950
conversation would that actually be

00:12:11,670 --> 00:12:16,380
better on slack or really with an issue

00:12:13,950 --> 00:12:18,899
or mailing list or I think I'm I would

00:12:16,380 --> 00:12:21,870
like I prefer an issue I think we're

00:12:18,899 --> 00:12:23,339
trying to um you know rehabilitate our

00:12:21,870 --> 00:12:25,140
open source presence a little bit so

00:12:23,339 --> 00:12:26,459
let's let's move it rollin I would also

00:12:25,140 --> 00:12:28,050
encourage you to look at the CF for

00:12:26,459 --> 00:12:32,430
Kate's repo and see how they interact

00:12:28,050 --> 00:12:33,839
with the UA a config map I don't know

00:12:32,430 --> 00:12:34,920
that they're applying overlays to the

00:12:33,839 --> 00:12:36,680
function I believe they might be

00:12:34,920 --> 00:12:39,290
applying them to the function outfit

00:12:36,680 --> 00:12:41,850
okay so that there may be other options

00:12:39,290 --> 00:12:43,470
but don't take my word for it

00:12:41,850 --> 00:12:45,300
I haven't haven't like fully

00:12:43,470 --> 00:12:49,440
internalized that that that use case

00:12:45,300 --> 00:12:54,720
what I wanted to go back just a little

00:12:49,440 --> 00:12:58,200
bit the - and VARs angolan for example

00:12:54,720 --> 00:13:00,500
you have Cobra and Viper and they can

00:12:58,200 --> 00:13:03,000
help you kind of have equivalent

00:13:00,500 --> 00:13:06,420
environment variables for either command

00:13:03,000 --> 00:13:09,630
line options or llamó config so if

00:13:06,420 --> 00:13:12,270
something like that was available would

00:13:09,630 --> 00:13:15,390
that be an option where you can keep the

00:13:12,270 --> 00:13:18,600
config llamó and also do environment

00:13:15,390 --> 00:13:23,490
variables I'm really interested in

00:13:18,600 --> 00:13:25,680
exploring a common way to configure all

00:13:23,490 --> 00:13:30,750
the components again where you don't

00:13:25,680 --> 00:13:34,290
have to keep up with each individual for

00:13:30,750 --> 00:13:37,730
and you know whether they're overlays or

00:13:34,290 --> 00:13:40,769
I have to bring my own config config map

00:13:37,730 --> 00:13:46,860
it's like I have to maintain a piece of

00:13:40,769 --> 00:13:51,269
you a if that makes sense

00:13:46,860 --> 00:13:52,589
i doesn't I think I need more

00:13:51,269 --> 00:13:54,990
information about your particular use

00:13:52,589 --> 00:13:57,689
case I think the way something like well

00:13:54,990 --> 00:13:59,850
thank you sir let me let me try to let

00:13:57,689 --> 00:14:01,079
me see if I can articulate what what

00:13:59,850 --> 00:14:02,370
you're saying or let me try to

00:14:01,079 --> 00:14:06,930
articulate what I understand about

00:14:02,370 --> 00:14:09,660
people its config I'll back it up a

00:14:06,930 --> 00:14:11,339
second most of the UA a team is new I

00:14:09,660 --> 00:14:17,310
myself have only been working on it for

00:14:11,339 --> 00:14:19,050
about a year we we end up fielding a lot

00:14:17,310 --> 00:14:20,279
of product questions from not just Cloud

00:14:19,050 --> 00:14:21,930
Foundry but other products that have

00:14:20,279 --> 00:14:25,199
used the UAE as well so we have we have

00:14:21,930 --> 00:14:27,629
to keep like this kind of general

00:14:25,199 --> 00:14:29,040
general list point of view my

00:14:27,629 --> 00:14:31,470
understanding for the way CF for Cait is

00:14:29,040 --> 00:14:38,069
consuming the UA a config is like they

00:14:31,470 --> 00:14:39,689
will expose like a a point of view kind

00:14:38,069 --> 00:14:41,490
of through the Y mo and you can modify

00:14:39,689 --> 00:14:43,110
that through like y2t overlays or

00:14:41,490 --> 00:14:46,139
whatnot right so they it's like a really

00:14:43,110 --> 00:14:49,199
yeah mo based approach I think what I'm

00:14:46,139 --> 00:14:51,360
hearing from you is that your foundation

00:14:49,199 --> 00:14:53,189
or the product that your your product

00:14:51,360 --> 00:14:55,139
ization of the foundation is is driven

00:14:53,189 --> 00:14:58,110
in a different mode different way right

00:14:55,139 --> 00:15:01,800
we don't use y TT right and it sounds

00:14:58,110 --> 00:15:04,290
like in addition to that you don't the

00:15:01,800 --> 00:15:06,209
components well I I can't speak to how

00:15:04,290 --> 00:15:08,220
every component and about and cloud

00:15:06,209 --> 00:15:09,569
foundry is configured I assumed they all

00:15:08,220 --> 00:15:13,050
had like basically a llamo bile that

00:15:09,569 --> 00:15:14,279
they ingest and that kind of configures

00:15:13,050 --> 00:15:16,079
the app but I believe you're telling me

00:15:14,279 --> 00:15:17,220
something different and that it's

00:15:16,079 --> 00:15:22,379
inconsistent across all of the

00:15:17,220 --> 00:15:24,959
components right so yeah of course and

00:15:22,379 --> 00:15:27,930
if you are if you're trying to build a

00:15:24,959 --> 00:15:30,089
cloud foundry foundation from multiple

00:15:27,930 --> 00:15:32,009
components you want to make sure that

00:15:30,089 --> 00:15:35,189
the configuration is easy for each of

00:15:32,009 --> 00:15:38,009
them and not just specific to Whitely

00:15:35,189 --> 00:15:40,649
team sure you're saying UAE is

00:15:38,009 --> 00:15:43,199
opinionated about defaults and you only

00:15:40,649 --> 00:15:44,360
expose smaller set of configuration

00:15:43,199 --> 00:15:47,910
files

00:15:44,360 --> 00:15:50,129
by default in your config map that's

00:15:47,910 --> 00:15:52,980
where I would have to bring my own

00:15:50,129 --> 00:15:55,110
config map make sure that I have a

00:15:52,980 --> 00:15:57,300
template for it in helm or whatever it

00:15:55,110 --> 00:15:59,699
is hmm make sure that I always always

00:15:57,300 --> 00:16:02,639
understand it and that I keep up with

00:15:59,699 --> 00:16:06,029
your changes when it comes to you know

00:16:02,639 --> 00:16:07,439
bumping to to new releases sure so I

00:16:06,029 --> 00:16:11,220
would like to avoid that if it's

00:16:07,439 --> 00:16:14,189
possible and the way that you know you

00:16:11,220 --> 00:16:15,930
can configure other containerized

00:16:14,189 --> 00:16:20,939
software is through environment

00:16:15,930 --> 00:16:23,339
variables and that's a generic way I

00:16:20,939 --> 00:16:26,220
also believe it's secure I think it's at

00:16:23,339 --> 00:16:30,839
least on par with with mountainous Rama

00:16:26,220 --> 00:16:33,120
fest so yeah well I think there's two

00:16:30,839 --> 00:16:34,620
things in there right like one is is

00:16:33,120 --> 00:16:36,420
that a convention we want adopt across

00:16:34,620 --> 00:16:39,360
all the components and I can't speak to

00:16:36,420 --> 00:16:41,579
that um I think if we were to learn that

00:16:39,360 --> 00:16:42,779
that was a need across all the

00:16:41,579 --> 00:16:45,209
components that that would be something

00:16:42,779 --> 00:16:48,329
the UA a team would then open itself up

00:16:45,209 --> 00:16:50,040
to I with respect to the environment

00:16:48,329 --> 00:16:53,850
variables I like I said it

00:16:50,040 --> 00:16:57,000
yo a is highly configurable so I have my

00:16:53,850 --> 00:16:58,290
doubts that um how how much Wow I would

00:16:57,000 --> 00:16:59,339
I would need more of a conversation

00:16:58,290 --> 00:17:00,870
around how manageable that would

00:16:59,339 --> 00:17:02,730
actually be right and whether or not

00:17:00,870 --> 00:17:05,370
that actually eases your pain of needing

00:17:02,730 --> 00:17:06,839
to understand how to provide that

00:17:05,370 --> 00:17:08,220
configuration via llamo and

00:17:06,839 --> 00:17:10,260
understanding that structure versus

00:17:08,220 --> 00:17:11,850
managing all of this plethora of

00:17:10,260 --> 00:17:13,770
environment variables and keeping up

00:17:11,850 --> 00:17:16,169
with that as the configuration options

00:17:13,770 --> 00:17:17,399
to the UA a change and whether or not we

00:17:16,169 --> 00:17:21,329
even think that would be a manageable

00:17:17,399 --> 00:17:22,470
way to present the configuration right

00:17:21,329 --> 00:17:25,079
like I think we do have some challenges

00:17:22,470 --> 00:17:29,309
there and those those challenges might

00:17:25,079 --> 00:17:31,289
be germane to a conversation about a

00:17:29,309 --> 00:17:35,549
consistent configuration experience

00:17:31,289 --> 00:17:37,799
across all of pod boundary like yeah I

00:17:35,549 --> 00:17:38,700
think it's a it's a reasonable ask I

00:17:37,799 --> 00:17:41,940
just think it's a little bit bigger than

00:17:38,700 --> 00:17:45,440
the UA if that makes sense yeah I think

00:17:41,940 --> 00:17:50,460
of course I was just hoping to you know

00:17:45,440 --> 00:17:52,230
get it started somewhere I guess what I

00:17:50,460 --> 00:17:53,340
would say is I don't know that we're

00:17:52,230 --> 00:17:54,990
there right quick hold there because

00:17:53,340 --> 00:17:57,639
immediately I can think of reasons why I

00:17:54,990 --> 00:17:59,349
might not want to do that

00:17:57,639 --> 00:18:01,570
just kind of went over right like it's I

00:17:59,349 --> 00:18:02,769
I don't know how approachable that style

00:18:01,570 --> 00:18:05,409
of configuration would be for a

00:18:02,769 --> 00:18:07,509
component like the UA yeah maybe we can

00:18:05,409 --> 00:18:10,719
find some other examples of projects

00:18:07,509 --> 00:18:14,609
that do things like that I think Mario

00:18:10,719 --> 00:18:17,109
is also you know yeah the III definitely

00:18:14,609 --> 00:18:18,399
I'm just like as I think through it my

00:18:17,109 --> 00:18:20,109
head I'm like ooh what do I do though

00:18:18,399 --> 00:18:22,779
like that's hundreds of environment

00:18:20,109 --> 00:18:23,769
variables like that's Wow let's talk

00:18:22,779 --> 00:18:25,719
about what that would look like or why

00:18:23,769 --> 00:18:27,309
that way why we do that yeah well of

00:18:25,719 --> 00:18:31,450
course that conversation I'd want to

00:18:27,309 --> 00:18:33,609
understand hopefully you wouldn't need

00:18:31,450 --> 00:18:36,159
to rewrite anything you'd use some sort

00:18:33,609 --> 00:18:39,369
of mechanism like I said like Viper and

00:18:36,159 --> 00:18:40,450
Cobra are on I'm a little less worried

00:18:39,369 --> 00:18:44,289
about the implementation I'm more

00:18:40,450 --> 00:18:45,429
worried about the UX to be honest so I'm

00:18:44,289 --> 00:18:47,079
thinking about it

00:18:45,429 --> 00:18:48,759
use your orient perspective which is why

00:18:47,079 --> 00:18:49,809
I was like oh let's let's try to if we

00:18:48,759 --> 00:18:53,070
think that's important let's get that

00:18:49,809 --> 00:18:55,599
conversation going but I think it's a

00:18:53,070 --> 00:18:56,709
and I want cqe on the call so it's like

00:18:55,599 --> 00:18:58,539
I think it's like a product kind of

00:18:56,709 --> 00:19:03,549
experience question and less of a you a

00:18:58,539 --> 00:19:06,159
a question the question about

00:19:03,549 --> 00:19:07,929
environment about having way too quickly

00:19:06,159 --> 00:19:10,440
without rewriting the whole

00:19:07,929 --> 00:19:12,940
configuration file because I mean it's

00:19:10,440 --> 00:19:14,679
with characters for example when you

00:19:12,940 --> 00:19:16,899
take a himself from from whatever

00:19:14,679 --> 00:19:18,639
registry usually you know nothing about

00:19:16,899 --> 00:19:20,229
it and you start tweaking only the

00:19:18,639 --> 00:19:22,929
things you want to tweak right so

00:19:20,229 --> 00:19:24,940
usually there are variables exported and

00:19:22,929 --> 00:19:27,219
you can only set the ones you care about

00:19:24,940 --> 00:19:30,309
and I think what blood tests accomplish

00:19:27,219 --> 00:19:32,950
here is having a way to change the

00:19:30,309 --> 00:19:35,139
configuration of a without known every

00:19:32,950 --> 00:19:39,129
every option and rewriting a whole file

00:19:35,139 --> 00:19:42,070
right right and I think the way to do

00:19:39,129 --> 00:19:46,299
that if the artifact that we consume

00:19:42,070 --> 00:19:50,979
from component teams are images which I

00:19:46,299 --> 00:19:54,039
think completeness sake I've quickly

00:19:50,979 --> 00:19:56,259
looked up what CF for Kade's is doing

00:19:54,039 --> 00:19:58,509
and they are like fully embracing the

00:19:56,259 --> 00:20:01,119
bring your own you a a llamo they just

00:19:58,509 --> 00:20:02,859
bring their own they don't overlay

00:20:01,119 --> 00:20:05,529
anything they just overlay the whole

00:20:02,859 --> 00:20:09,870
config map and they write their own

00:20:05,529 --> 00:20:13,050
version of you a not

00:20:09,870 --> 00:20:15,180
nothing in there that is taken from the

00:20:13,050 --> 00:20:17,490
upstream component okay unless it's

00:20:15,180 --> 00:20:18,600
copied over that doesn't exactly map

00:20:17,490 --> 00:20:22,830
through the conversation I had with that

00:20:18,600 --> 00:20:25,860
team on Friday okay I just like I looked

00:20:22,830 --> 00:20:28,559
at it with one eye keeping track of the

00:20:25,860 --> 00:20:31,220
conversation with the other ear so but

00:20:28,559 --> 00:20:33,960
it looks like they pretty much much just

00:20:31,220 --> 00:20:36,330
rewrite their own you a llamo into the

00:20:33,960 --> 00:20:37,260
conflict map you may very well know

00:20:36,330 --> 00:20:40,920
something I don't

00:20:37,260 --> 00:20:43,170
i I'm not gonna propose to be an expert

00:20:40,920 --> 00:20:44,550
on the way they've consumed it that

00:20:43,170 --> 00:20:45,750
doesn't like I said it doesn't align

00:20:44,550 --> 00:20:47,700
with the conversation I had with them

00:20:45,750 --> 00:20:49,140
about using some of the default like

00:20:47,700 --> 00:20:51,240
some of the templated values in the UA

00:20:49,140 --> 00:20:53,880
versus overlays they're like oh we'll

00:20:51,240 --> 00:20:59,850
use the the UA a templating instead so

00:20:53,880 --> 00:21:02,970
that surprises me that said we don't

00:20:59,850 --> 00:21:05,880
maybe deep down they actually call the

00:21:02,970 --> 00:21:08,190
function from your module like as I said

00:21:05,880 --> 00:21:09,840
I didn't dive too deeply in there was

00:21:08,190 --> 00:21:11,690
news we'd not believe that we're done

00:21:09,840 --> 00:21:14,580
with the configuration story of the UA

00:21:11,690 --> 00:21:15,690
so I just wanna make abundantly clear to

00:21:14,580 --> 00:21:18,809
everybody we don't believe we're done

00:21:15,690 --> 00:21:21,660
what we did was we approached we did the

00:21:18,809 --> 00:21:23,070
most flexible minimal thing we could do

00:21:21,660 --> 00:21:25,620
so that we could focus on operator

00:21:23,070 --> 00:21:28,530
experience and making sure that the UA a

00:21:25,620 --> 00:21:32,550
was operated and maintainable in a

00:21:28,530 --> 00:21:34,290
foundation and return to the cut to the

00:21:32,550 --> 00:21:35,820
topic of configuration and start

00:21:34,290 --> 00:21:39,750
gathering more information figuring out

00:21:35,820 --> 00:21:44,880
the right way or right ways to improve

00:21:39,750 --> 00:21:47,940
that experience for all you'll just know

00:21:44,880 --> 00:21:50,360
forward and miss topic I would love to

00:21:47,940 --> 00:21:50,360
work with you on it

00:21:51,890 --> 00:21:57,510
pretty quick I I wanted to repeat what

00:21:55,530 --> 00:22:00,000
what do we pasted in the chat so I think

00:21:57,510 --> 00:22:01,710
for the benefit of Jeremy but then

00:22:00,000 --> 00:22:05,550
probably also others it might make sense

00:22:01,710 --> 00:22:08,010
to at least reef Lee introduce yourself

00:22:05,550 --> 00:22:10,380
and probably also briefly mention the

00:22:08,010 --> 00:22:12,210
company otherwise generally might kind

00:22:10,380 --> 00:22:13,530
of not be able to correlate what has

00:22:12,210 --> 00:22:17,600
been said on this call and maybe what

00:22:13,530 --> 00:22:22,050
comes in by a github issues etc later

00:22:17,600 --> 00:22:23,380
with that go ahead learn yeah I'm glad

00:22:22,050 --> 00:22:27,220
from Susan

00:22:23,380 --> 00:22:32,290
work on cube CF and the quarks team so

00:22:27,220 --> 00:22:37,900
container ends in cloud foundry I just

00:22:32,290 --> 00:22:40,150
wanted to mention about UX that that

00:22:37,900 --> 00:22:44,020
particular UX of environment variables

00:22:40,150 --> 00:22:46,090
wouldn't be exposed to the customer it

00:22:44,020 --> 00:22:48,730
always gets wrapped I think into

00:22:46,090 --> 00:22:51,130
something whether it's a hound chart or

00:22:48,730 --> 00:22:54,130
could be darker compose or could be

00:22:51,130 --> 00:22:56,770
white tea tea or but the point is all of

00:22:54,130 --> 00:23:00,190
these integrators like the CF or Kade's

00:22:56,770 --> 00:23:02,680
team or cubes EF team or somebody else

00:23:00,190 --> 00:23:06,580
that uses you a we would all have the

00:23:02,680 --> 00:23:13,690
same same way of consuming that darker

00:23:06,580 --> 00:23:16,770
image that's it but that is independent

00:23:13,690 --> 00:23:20,260
from whether this is being done with

00:23:16,770 --> 00:23:24,010
like environment variables or mounting a

00:23:20,260 --> 00:23:26,050
file IO specification more than one

00:23:24,010 --> 00:23:30,880
component right like you have you a a

00:23:26,050 --> 00:23:32,950
you have Kathy you have ireenie etc now

00:23:30,880 --> 00:23:35,050
it would be nice if you had the same way

00:23:32,950 --> 00:23:36,880
of configuring each of them instead of

00:23:35,050 --> 00:23:42,310
having to figure out what type of llaman

00:23:36,880 --> 00:23:45,270
you have to generate or XML or Tamil or

00:23:42,310 --> 00:23:45,270
whatever it was

00:23:53,770 --> 00:24:05,600
Marvell you're muted okay now I can you

00:24:03,560 --> 00:24:08,000
know hear me right

00:24:05,600 --> 00:24:10,940
okay Marvel you hear from Suzy also

00:24:08,000 --> 00:24:13,700
quacks team and I just wanted to throw

00:24:10,940 --> 00:24:16,160
on the word Perfector in here because

00:24:13,700 --> 00:24:18,200
that's what wheat customers write as we

00:24:16,160 --> 00:24:20,780
tell users of Cloud Foundry to the

00:24:18,200 --> 00:24:23,300
twelfth act two EPs and one of the

00:24:20,780 --> 00:24:25,280
twelve factors is store your

00:24:23,300 --> 00:24:32,360
configuration in environment variables

00:24:25,280 --> 00:24:34,340
and I don't think every internal setting

00:24:32,360 --> 00:24:36,350
has to expose this an environment

00:24:34,340 --> 00:24:41,270
variable but in general I think it's

00:24:36,350 --> 00:24:42,860
good advice in the cloud and I think we

00:24:41,270 --> 00:24:45,710
are just discussing this for you a a

00:24:42,860 --> 00:24:47,930
because you a is the first component out

00:24:45,710 --> 00:24:50,000
there that's usable and we want to

00:24:47,930 --> 00:24:52,160
integrate that and so we're having this

00:24:50,000 --> 00:24:54,080
discussion now but in general I think

00:24:52,160 --> 00:24:56,750
it's good advice for all the components

00:24:54,080 --> 00:25:15,890
to behave like normal cloud software and

00:24:56,750 --> 00:25:17,590
follow the perfecter approach I think I

00:25:15,890 --> 00:25:21,650
think it certainly sounds productive to

00:25:17,590 --> 00:25:29,510
like especially if there are even

00:25:21,650 --> 00:25:31,820
specific configuration issues that you

00:25:29,510 --> 00:25:35,120
all want to raise or to you know insurer

00:25:31,820 --> 00:25:35,680
supported and things like keep CF antia

00:25:35,120 --> 00:25:39,020
frigates

00:25:35,680 --> 00:25:41,380
raising like raising those issues in the

00:25:39,020 --> 00:25:43,670
appropriate venue on on github like

00:25:41,380 --> 00:25:45,800
especially given a lot of the issues we

00:25:43,670 --> 00:25:47,450
have with timezone and overlap that

00:25:45,800 --> 00:25:49,930
seems like maybe the most productive

00:25:47,450 --> 00:25:53,060
forum that we could discuss those in

00:25:49,930 --> 00:25:54,380
Jeremy did you want to add something no

00:25:53,060 --> 00:25:55,970
I thank you I appreciate that

00:25:54,380 --> 00:25:58,730
again I want to make it clear like we're

00:25:55,970 --> 00:26:01,410
happy to have a conversation I am these

00:25:58,730 --> 00:26:04,470
are broader conversations that

00:26:01,410 --> 00:26:05,460
prepared to answer off-the-cuff I just

00:26:04,470 --> 00:26:06,960
wanted to say I lost the thread on

00:26:05,460 --> 00:26:08,780
giving introductions I think I could we

00:26:06,960 --> 00:26:11,790
heard from two people from Sousa and

00:26:08,780 --> 00:26:12,870
some some more please for the

00:26:11,790 --> 00:26:15,870
environment to consider the environment

00:26:12,870 --> 00:26:18,060
variable which approach which not saying

00:26:15,870 --> 00:26:19,560
no also not saying yes just saying like

00:26:18,060 --> 00:26:21,240
wheatless let's talk

00:26:19,560 --> 00:26:23,040
wherever the right place to start that

00:26:21,240 --> 00:26:24,090
conversation is but a I would love to

00:26:23,040 --> 00:26:26,100
meet the rest of them everybody hears

00:26:24,090 --> 00:26:36,060
that I can understand the conversations

00:26:26,100 --> 00:26:39,690
or the point of view is better or not if

00:26:36,060 --> 00:26:41,420
you ever I'm glad that was Mario we're

00:26:39,690 --> 00:26:44,010
both from Sousa

00:26:41,420 --> 00:26:45,570
yeah I'm from supposed to do so

00:26:44,010 --> 00:26:47,310
everybody that likes environment

00:26:45,570 --> 00:26:55,260
available seems to come from Susan

00:26:47,310 --> 00:26:58,320
Wright and I'm Dimitri yeah

00:26:55,260 --> 00:27:01,800
and so Jana burnt you're both from sa P

00:26:58,320 --> 00:27:08,640
right that's right yeah I think parent

00:27:01,800 --> 00:27:09,840
was from sa p yeah I've actually I'm

00:27:08,640 --> 00:27:15,030
looking at this through mirrors

00:27:09,840 --> 00:27:16,620
everything was fine but yeah I guess all

00:27:15,030 --> 00:27:19,050
I can do is reiterate like we took a

00:27:16,620 --> 00:27:21,270
very a very minimal approach to

00:27:19,050 --> 00:27:23,640
configuring the UAA because it was it

00:27:21,270 --> 00:27:25,260
was either focus on getting getting

00:27:23,640 --> 00:27:26,850
towards like what's our deployment

00:27:25,260 --> 00:27:28,680
looked like how do we expose metrics how

00:27:26,850 --> 00:27:31,110
do we how do we focus on logging how do

00:27:28,680 --> 00:27:32,700
we focus on redeployment or we spend all

00:27:31,110 --> 00:27:33,660
the time that we've been working on

00:27:32,700 --> 00:27:34,740
getting the rest that I've done on

00:27:33,660 --> 00:27:36,990
trying to get the configuration

00:27:34,740 --> 00:27:39,300
experience right as opposed to just

00:27:36,990 --> 00:27:41,430
leaving it open for y'all to be able to

00:27:39,300 --> 00:27:42,750
use this component and I think by making

00:27:41,430 --> 00:27:46,190
that choice it is one of the reasons why

00:27:42,750 --> 00:27:48,450
this component is usable today um so

00:27:46,190 --> 00:27:50,900
yeah we definitely have an appetite to

00:27:48,450 --> 00:27:52,950
improve that we're not done we're not

00:27:50,900 --> 00:27:57,870
we're makes perfect sense

00:27:52,950 --> 00:28:00,710
we're not even inspecting uh maybe

00:27:57,870 --> 00:28:03,930
something along those lines but

00:28:00,710 --> 00:28:07,680
different of it I was talking to say

00:28:03,930 --> 00:28:12,600
about containerization in general and

00:28:07,680 --> 00:28:14,510
what are the things that we need in the

00:28:12,600 --> 00:28:21,250
individual components

00:28:14,510 --> 00:28:24,590
one of the things was being able to

00:28:21,250 --> 00:28:27,470
specify what darker base what would

00:28:24,590 --> 00:28:30,350
image base your billing on and that kind

00:28:27,470 --> 00:28:34,520
of led to a discussion about what if we

00:28:30,350 --> 00:28:38,900
built all of the component images using

00:28:34,520 --> 00:28:42,350
build backs how does everyone feel about

00:28:38,900 --> 00:28:45,230
that like the the new Club need to build

00:28:42,350 --> 00:28:46,520
backs I I can only represent the UA I'll

00:28:45,230 --> 00:28:47,720
represent the UAS point of view since

00:28:46,520 --> 00:28:49,580
I've been speaking but I think this is a

00:28:47,720 --> 00:28:53,750
broader conversation we are based on

00:28:49,580 --> 00:28:57,559
cloud native build packs awesome awesome

00:28:53,750 --> 00:28:58,010
so we use the PAC CLI to generate our

00:28:57,559 --> 00:28:59,630
image

00:28:58,010 --> 00:29:00,919
moving forward we might use something

00:28:59,630 --> 00:29:02,990
like a back or whatever to keep it a

00:29:00,919 --> 00:29:05,120
little fresher than we do today that's

00:29:02,990 --> 00:29:06,980
great but yeah it's already that's the

00:29:05,120 --> 00:29:08,419
way it's built I don't know we'd like to

00:29:06,980 --> 00:29:13,720
speak for the rest of the component

00:29:08,419 --> 00:29:15,950
seems yeah I think I think there's

00:29:13,720 --> 00:29:20,210
definitely that interest across the

00:29:15,950 --> 00:29:22,220
component teams to do that I know like

00:29:20,210 --> 00:29:23,750
color controller has been a little bit

00:29:22,220 --> 00:29:27,200
hampered in that respect because there's

00:29:23,750 --> 00:29:29,270
no Ruby makino built pack yet it's

00:29:27,200 --> 00:29:34,160
somewhere on the horizon but it hasn't

00:29:29,270 --> 00:29:38,290
come into port yet so to speak cool

00:29:34,160 --> 00:29:41,720
awesome I think we happy that this is a

00:29:38,290 --> 00:29:43,760
something that people want to do I think

00:29:41,720 --> 00:29:49,400
we've heard tools advocating for that

00:29:43,760 --> 00:29:51,590
approach quite a few times is this like

00:29:49,400 --> 00:29:53,390
a mental exercise or is there really

00:29:51,590 --> 00:29:55,669
used to it I mean what is the plan to

00:29:53,390 --> 00:29:59,059
like to blow you ears and up on Cloud

00:29:55,669 --> 00:30:02,240
Foundry no so as you know we're an OS

00:29:59,059 --> 00:30:04,040
company so one of the things that we do

00:30:02,240 --> 00:30:07,790
with cloud foundry is that we rebuild

00:30:04,040 --> 00:30:10,280
everything with Susan as a base so that

00:30:07,790 --> 00:30:12,260
means that okay I got for every

00:30:10,280 --> 00:30:13,940
component teams you you have to make

00:30:12,260 --> 00:30:17,419
sure that the base image is configurable

00:30:13,940 --> 00:30:21,669
one up to install breaks that so then

00:30:17,419 --> 00:30:24,650
what do you use and Bill packs are are

00:30:21,669 --> 00:30:26,220
like specifically go for this right you

00:30:24,650 --> 00:30:28,679
have a stack and

00:30:26,220 --> 00:30:31,710
then you put stuff on top of it and it's

00:30:28,679 --> 00:30:34,320
very opinionated on how you build a

00:30:31,710 --> 00:30:40,500
software into an image which is like

00:30:34,320 --> 00:30:43,590
exactly what we mean so anybody who

00:30:40,500 --> 00:30:45,990
wants to create a distribution of clout

00:30:43,590 --> 00:30:47,370
on the based on another OS they would

00:30:45,990 --> 00:31:00,299
just need to implement the big bucks

00:30:47,370 --> 00:31:03,480
right yeah they would use one other

00:31:00,299 --> 00:31:06,960
question have so right now if someone

00:31:03,480 --> 00:31:08,760
starts consuming locating words for you

00:31:06,960 --> 00:31:13,380
a a does that mean they always get the

00:31:08,760 --> 00:31:15,539
latest updates so the same produces both

00:31:13,380 --> 00:31:17,690
versions like it did before so will

00:31:15,539 --> 00:31:22,020
always be up-to-date

00:31:17,690 --> 00:31:25,710
so the dick image gets released normally

00:31:22,020 --> 00:31:31,260
like the boss room is right there on par

00:31:25,710 --> 00:31:35,190
version wise let me try to repeat that

00:31:31,260 --> 00:31:37,020
question back I think you're asking

00:31:35,190 --> 00:31:38,909
about the release frequency of the

00:31:37,020 --> 00:31:45,450
youäôre and it's parity with the bot

00:31:38,909 --> 00:31:47,640
release yeah yeah they they are

00:31:45,450 --> 00:31:49,409
essentially cut at the same time our our

00:31:47,640 --> 00:31:50,760
image is a little like I said it's a

00:31:49,409 --> 00:31:53,190
zero and zero release our image is a

00:31:50,760 --> 00:31:55,919
little unstable in that if you use

00:31:53,190 --> 00:31:58,980
latest you get what you get but when we

00:31:55,919 --> 00:32:01,860
cut it release we do tag the that image

00:31:58,980 --> 00:32:04,140
with the release number so you can go

00:32:01,860 --> 00:32:05,370
and find it and use it like I said the

00:32:04,140 --> 00:32:07,799
only thing that's a little different

00:32:05,370 --> 00:32:10,770
right now between Bosh and the Cates

00:32:07,799 --> 00:32:12,659
world which is actually we're starting

00:32:10,770 --> 00:32:16,049
to work on this at the moment is that

00:32:12,659 --> 00:32:19,770
once that that like let's say 70 for 16

00:32:16,049 --> 00:32:22,919
images is uploaded and tagged it doesn't

00:32:19,770 --> 00:32:24,870
get updates to the the base layer so

00:32:22,919 --> 00:32:26,429
like if there were security patches to

00:32:24,870 --> 00:32:28,080
the OS or whatnot so like in the Bosch

00:32:26,429 --> 00:32:31,500
world you get like a refresh to the stem

00:32:28,080 --> 00:32:33,169
cell every so often we aren't we haven't

00:32:31,500 --> 00:32:36,809
replicated that yet but we're actively

00:32:33,169 --> 00:32:39,930
taking that on now so we should start to

00:32:36,809 --> 00:32:43,490
see that kind of start to change as well

00:32:39,930 --> 00:32:46,500
how that will how about will shape up

00:32:43,490 --> 00:32:48,300
you know I wouldn't I wouldn't I mean I

00:32:46,500 --> 00:32:50,460
imagine it'll just be like that tag will

00:32:48,300 --> 00:32:52,050
be you know always point to the latest

00:32:50,460 --> 00:32:53,400
with all the updates but we haven't

00:32:52,050 --> 00:32:57,810
actually started the work yet so who

00:32:53,400 --> 00:32:59,910
knows what surprises will find all right

00:32:57,810 --> 00:33:02,820
I mean others on the the stem cell

00:32:59,910 --> 00:33:05,850
that's the base layer of the code that

00:33:02,820 --> 00:33:13,830
is used in demons he's agent part with

00:33:05,850 --> 00:33:16,380
the leash job yeah okay okay so

00:33:13,830 --> 00:33:19,830
probably a totally totally unrelated

00:33:16,380 --> 00:33:23,190
questioned um like my understanding is

00:33:19,830 --> 00:33:26,070
that that UAE has undergone quite an

00:33:23,190 --> 00:33:29,220
evolution right like I think kind of

00:33:26,070 --> 00:33:33,090
started to be a couple of things like an

00:33:29,220 --> 00:33:34,650
identity provider et cetera itself and I

00:33:33,090 --> 00:33:37,200
think somewhere along the way there was

00:33:34,650 --> 00:33:39,420
a decision to say that's kind of

00:33:37,200 --> 00:33:42,330
factored out the identity provider piece

00:33:39,420 --> 00:33:45,510
and focus more on like things like like

00:33:42,330 --> 00:33:48,270
authentication right I was wondering if

00:33:45,510 --> 00:33:50,940
that is something that's like being

00:33:48,270 --> 00:33:54,930
continued in the context of moving UA a

00:33:50,940 --> 00:33:56,490
to kubernetes and and then secondly I

00:33:54,930 --> 00:34:00,900
would also be interested to hear your

00:33:56,490 --> 00:34:04,220
thoughts around like you a a as an OAuth

00:34:00,900 --> 00:34:07,350
server for the kubernetes cluster itself

00:34:04,220 --> 00:34:09,510
sure we'll do the second Congress will

00:34:07,350 --> 00:34:10,380
do the second question first there are

00:34:09,510 --> 00:34:14,250
people doing that already

00:34:10,380 --> 00:34:16,490
like the UA is configured as the as the

00:34:14,250 --> 00:34:20,820
issuer for how IDC tokens and whatnot

00:34:16,490 --> 00:34:22,980
think versions of the pivotal cluster

00:34:20,820 --> 00:34:25,169
service did that there's a couple other

00:34:22,980 --> 00:34:26,640
places doing it that's something we

00:34:25,169 --> 00:34:29,370
would love to do I think we have like a

00:34:26,640 --> 00:34:33,630
long-term vision for the UA a to kind of

00:34:29,370 --> 00:34:35,340
have the Cates community embrace it as

00:34:33,630 --> 00:34:36,600
one of the you know embrace it the way

00:34:35,340 --> 00:34:38,550
they've embraced X so that you have more

00:34:36,600 --> 00:34:41,399
than one opportunity so that's kind of

00:34:38,550 --> 00:34:45,810
like our internal like objective like

00:34:41,399 --> 00:34:48,840
our our North Star so absolutely and

00:34:45,810 --> 00:34:50,640
then for your first question yeah you

00:34:48,840 --> 00:34:52,169
know I think the way I've come to think

00:34:50,640 --> 00:34:54,640
of the UA is it's a bit of a Swiss Army

00:34:52,169 --> 00:34:56,260
knife right it does a lot of things

00:34:54,640 --> 00:34:58,330
and maybe it doesn't them all well

00:34:56,260 --> 00:34:59,740
enough maybe it doesn't do maybe doesn't

00:34:58,330 --> 00:35:01,510
want to do them great but most the time

00:34:59,740 --> 00:35:03,220
it just does them well enough and what

00:35:01,510 --> 00:35:05,680
we're trying to figure out is like does

00:35:03,220 --> 00:35:07,690
it does it really need all those blades

00:35:05,680 --> 00:35:09,010
does it need all of that and like where

00:35:07,690 --> 00:35:11,410
what's the perspective we should be

00:35:09,010 --> 00:35:14,100
pursuing and where should we look to

00:35:11,410 --> 00:35:18,240
either slim down or recommend other

00:35:14,100 --> 00:35:18,240
other solutions right like I think

00:35:19,470 --> 00:35:25,750
there's lots of places where that might

00:35:21,370 --> 00:35:27,880
happen like we provide a lot of identity

00:35:25,750 --> 00:35:29,890
management tools and we kind of are

00:35:27,880 --> 00:35:31,390
thinking like that other people do

00:35:29,890 --> 00:35:32,980
Identity Management much better than the

00:35:31,390 --> 00:35:34,600
UAA would ever hope to do it so perhaps

00:35:32,980 --> 00:35:38,440
that's an area we should invest lesson

00:35:34,600 --> 00:35:40,630
whereas a with so often Oh IDC like

00:35:38,440 --> 00:35:41,770
there are continually new things with

00:35:40,630 --> 00:35:43,330
those protocols that we should be

00:35:41,770 --> 00:35:45,300
picking up like pixie support or whatnot

00:35:43,330 --> 00:35:47,950
we should be investing more there but

00:35:45,300 --> 00:35:49,660
right now we're a little pinned down by

00:35:47,950 --> 00:35:51,520
the sheer weight of the number of

00:35:49,660 --> 00:35:53,410
features and the number of bugs and

00:35:51,520 --> 00:35:55,300
requests that we get across each of

00:35:53,410 --> 00:35:58,060
these various sets of what we're looking

00:35:55,300 --> 00:35:59,590
at is kind of determining that point of

00:35:58,060 --> 00:36:02,440
view and then starting to socialize it

00:35:59,590 --> 00:36:05,560
with groups of people like y'all to find

00:36:02,440 --> 00:36:07,810
out how how that resonates or doesn't

00:36:05,560 --> 00:36:09,220
resonate or supports or doesn't support

00:36:07,810 --> 00:36:10,510
your needs so we can then start

00:36:09,220 --> 00:36:13,660
iterating from there and actually start

00:36:10,510 --> 00:36:18,190
taking some action to bring that to

00:36:13,660 --> 00:36:19,810
bring men in control so we're early

00:36:18,190 --> 00:36:21,840
stages there but we have we have some

00:36:19,810 --> 00:36:24,490
hypotheses that we want to start testing

00:36:21,840 --> 00:36:27,010
and hopefully we'll get I'm hoping we'll

00:36:24,490 --> 00:36:30,330
start to make some progress on that now

00:36:27,010 --> 00:36:33,850
that we once we get our new product

00:36:30,330 --> 00:36:37,230
person up to speed and we're able to

00:36:33,850 --> 00:36:38,720
take on those sorts of efforts again I

00:36:37,230 --> 00:36:40,280
know does that

00:36:38,720 --> 00:36:43,730
your question it was a little high level

00:36:40,280 --> 00:36:46,640
but yes it does I guess probably a

00:36:43,730 --> 00:36:49,550
question to that do you also see like I

00:36:46,640 --> 00:36:53,180
understood yes of course you can use you

00:36:49,550 --> 00:36:56,240
AAS and hook it up to your kubernetes

00:36:53,180 --> 00:36:58,670
cluster do you also see kind of mixed

00:36:56,240 --> 00:37:04,550
scenarios where like one instance of you

00:36:58,670 --> 00:37:07,040
a a is both provider two for example a

00:37:04,550 --> 00:37:11,119
cloud foundry on kubernetes as well as

00:37:07,040 --> 00:37:13,670
two kubernetes cluster itself oh I think

00:37:11,119 --> 00:37:16,340
that that's a longer discussion I think

00:37:13,670 --> 00:37:18,470
and a lot of that is a little again

00:37:16,340 --> 00:37:19,820
beyond I think we would have we'd be

00:37:18,470 --> 00:37:21,260
happy to support conversations like that

00:37:19,820 --> 00:37:23,510
right but some of that comes down to

00:37:21,260 --> 00:37:25,550
like the choices of how we would like to

00:37:23,510 --> 00:37:26,960
run a foundation you know I mean like do

00:37:25,550 --> 00:37:28,280
they other the same instance of

00:37:26,960 --> 00:37:31,580
different instances are the yesterday

00:37:28,280 --> 00:37:33,980
that like I think the UI a team spends

00:37:31,580 --> 00:37:35,660
most of its time just becoming experts

00:37:33,980 --> 00:37:37,820
in these identity protocols which is

00:37:35,660 --> 00:37:40,910
already a really deep and nuanced space

00:37:37,820 --> 00:37:42,950
and then it's kind of hard to like pull

00:37:40,910 --> 00:37:45,640
yourself from this abstract world into

00:37:42,950 --> 00:37:48,910
this other like really detailed and

00:37:45,640 --> 00:37:51,980
broad world of Cloud Foundry and I think

00:37:48,910 --> 00:37:54,380
you know perhaps we need to invest a

00:37:51,980 --> 00:37:56,270
little bit more in resourcing to find

00:37:54,380 --> 00:37:58,280
people who can actually focus on like

00:37:56,270 --> 00:38:00,710
that identity concerns within Cloud

00:37:58,280 --> 00:38:02,119
Foundry but do I think they should be

00:38:00,710 --> 00:38:04,010
the same one like I would say up lahat

00:38:02,119 --> 00:38:05,660
off the cuff you know maybe for a small

00:38:04,010 --> 00:38:07,400
footprint like foundation that makes

00:38:05,660 --> 00:38:08,780
sense but there's probably a bunch of

00:38:07,400 --> 00:38:09,859
security concerns around that as well

00:38:08,780 --> 00:38:12,260
because they're representing different

00:38:09,859 --> 00:38:14,150
layers of access you know but it's it's

00:38:12,260 --> 00:38:20,140
a it's an interesting conversation I'd

00:38:14,150 --> 00:38:22,150
like to have it for sure yeah

00:38:20,140 --> 00:38:25,050
it's an area where we're engaging

00:38:22,150 --> 00:38:29,290
relevant as well it could be productive

00:38:25,050 --> 00:38:32,200
I think also we've been we've had a

00:38:29,290 --> 00:38:35,680
little bit of discussion on CF dev Iran

00:38:32,200 --> 00:38:37,750
things like cedar deification inside of

00:38:35,680 --> 00:38:38,770
the Apple in time that's actually where

00:38:37,750 --> 00:38:40,810
did that could potentially move in the

00:38:38,770 --> 00:38:43,690
opposite direction where you know it

00:38:40,810 --> 00:38:45,550
actually makes more sense you have kind

00:38:43,690 --> 00:38:47,890
of consolidation or a condensation of

00:38:45,550 --> 00:38:49,690
those identity concerns closer to the

00:38:47,890 --> 00:38:51,070
gates API server because that's doing

00:38:49,690 --> 00:38:53,980
more of the heavy lifting in terms of

00:38:51,070 --> 00:38:56,410
off even for CF resources that are

00:38:53,980 --> 00:39:03,270
getting represented as as customer

00:38:56,410 --> 00:39:03,270
resources in the kid said yeah I

00:39:06,120 --> 00:39:08,680
unfortunately have to drop but thanks

00:39:08,230 --> 00:39:10,630
everyone

00:39:08,680 --> 00:39:12,600
I really appreciate the discussion I'm

00:39:10,630 --> 00:39:17,620
sorry

00:39:12,600 --> 00:39:20,080
so I'll just it was nice to meet y'all

00:39:17,620 --> 00:39:21,490
and I'll just make it clear like open up

00:39:20,080 --> 00:39:26,350
some issues we're happy to start having

00:39:21,490 --> 00:39:28,270
a conversation there y'all I have a lot

00:39:26,350 --> 00:39:31,830
of appetite to move certain things

00:39:28,270 --> 00:39:31,830
forward we'll see what we can do

00:39:33,480 --> 00:39:36,550
[Music]

00:39:37,080 --> 00:39:44,920
Teddy so in this small around any

00:39:39,670 --> 00:39:46,240
additional topics to to cover I think

00:39:44,920 --> 00:39:51,940
you already mentioned the backup

00:39:46,240 --> 00:39:54,190
Aerostar stuff cool we are consuming the

00:39:51,940 --> 00:39:56,410
Irene account right now so no more bars

00:39:54,190 --> 00:39:59,560
release for irony in cubes yes

00:39:56,410 --> 00:40:02,340
not sure if you follow that just that

00:39:59,560 --> 00:40:06,030
already in their release

00:40:02,340 --> 00:40:10,210
yes so this a cube CF release that

00:40:06,030 --> 00:40:17,080
consumes irony from oh yeah it was

00:40:10,210 --> 00:40:23,040
released right yeah yeah it was released

00:40:17,080 --> 00:40:26,080
I really native support yes yeah I

00:40:23,040 --> 00:40:31,530
actually thought I had a question when I

00:40:26,080 --> 00:40:31,530
read the B 2.0 announced and one of the

00:40:34,480 --> 00:40:42,650
Bern migration is from from 1.0 is not

00:40:39,560 --> 00:40:45,740
supported and I was wondering like is

00:40:42,650 --> 00:40:49,430
that because 1.0 it isn't part of

00:40:45,740 --> 00:40:51,320
traffic trees on your end or like that's

00:40:49,430 --> 00:40:54,590
correct yeah so we didn't have a product

00:40:51,320 --> 00:40:57,410
released for 1.0 and we did one change

00:40:54,590 --> 00:40:58,970
to support easier integration with

00:40:57,410 --> 00:41:03,110
native components like ireenie

00:40:58,970 --> 00:41:06,520
which is not to prefix every stateful

00:41:03,110 --> 00:41:09,980
said every PVC with a deployment name

00:41:06,520 --> 00:41:12,320
and when we did that we thought we could

00:41:09,980 --> 00:41:16,490
implement it so that it's my gradable

00:41:12,320 --> 00:41:18,800
from version 1 to 2 but if no one cares

00:41:16,490 --> 00:41:21,290
about it we won't and it turned out that

00:41:18,800 --> 00:41:25,100
nobody did so we thought we'd save us

00:41:21,290 --> 00:41:31,070
some development cycles and we increased

00:41:25,100 --> 00:41:34,130
a 2.0 because assembler yeah and how is

00:41:31,070 --> 00:41:40,100
it with like folks migrating from let's

00:41:34,130 --> 00:41:44,360
say pre e 1.0 so file based world to 2

00:41:40,100 --> 00:41:46,520
then 2.0 is that like a manual change of

00:41:44,360 --> 00:41:53,810
configuration and like deploying a new

00:41:46,520 --> 00:41:56,630
system yeah we will have a document that

00:41:53,810 --> 00:42:03,470
tells you how to do migration its

00:41:56,630 --> 00:42:07,430
database copy from v1 to v2 and lobster

00:42:03,470 --> 00:42:11,090
copy so it happens through you know

00:42:07,430 --> 00:42:15,950
bicycle dump and you take encryption

00:42:11,090 --> 00:42:20,330
keys and so on and you put them in okay

00:42:15,950 --> 00:42:23,350
make sense the plug-in thing is not

00:42:20,330 --> 00:42:26,090
sufficient to deal with everything yet

00:42:23,350 --> 00:42:28,700
right so service is mainly that's the

00:42:26,090 --> 00:42:32,270
main thing that it's missing oh you mean

00:42:28,700 --> 00:42:35,210
on the migration topic on migration ok

00:42:32,270 --> 00:42:37,360
but I think yeah we could I mean we

00:42:35,210 --> 00:42:40,100
could do that in capi and then have it

00:42:37,360 --> 00:42:42,970
it should be like a full solution for

00:42:40,100 --> 00:42:42,970
for something like this

00:42:44,070 --> 00:42:53,880
I mean I I think I'm into like I hear

00:42:51,180 --> 00:42:56,150
both use-cases SAT internally like both

00:42:53,880 --> 00:42:59,910
this you pick and choose certain

00:42:56,150 --> 00:43:02,820
whatever CF org spaces and migrate these

00:42:59,910 --> 00:43:06,930
over but I also keep hearing like you

00:43:02,820 --> 00:43:10,260
just move from like Bosch based who n it

00:43:06,930 --> 00:43:12,300
is - to where - to kubernetes based on

00:43:10,260 --> 00:43:17,420
yeah I don't think there's anyone from

00:43:12,300 --> 00:43:23,250
IBM here but I know that in IBM's case

00:43:17,420 --> 00:43:25,770
they tested they have my sequel that's

00:43:23,250 --> 00:43:28,320
outside of the deployment so it's not

00:43:25,770 --> 00:43:31,140
inside SCF or cube CF right they

00:43:28,320 --> 00:43:33,480
maintain a separate my sequel and for

00:43:31,140 --> 00:43:35,790
that they didn't need to do anything

00:43:33,480 --> 00:43:39,420
they just pointed cube CF - that my

00:43:35,790 --> 00:43:42,900
sequel and to the blobstore that they

00:43:39,420 --> 00:43:44,910
have and it just worked so in that case

00:43:42,900 --> 00:43:48,870
you don't actually need to do anything

00:43:44,910 --> 00:43:53,370
but if your database is is managed by

00:43:48,870 --> 00:43:55,650
Bosh then yes you but if it's not then

00:43:53,370 --> 00:44:05,160
you just point whatever to your database

00:43:55,650 --> 00:44:10,190
and it works what this data transfer

00:44:05,160 --> 00:44:12,330
this data migration if it's you know

00:44:10,190 --> 00:44:15,030
actual database data that you're

00:44:12,330 --> 00:44:17,100
migrating I think it's much harder if

00:44:15,030 --> 00:44:20,010
you have something like you have to go

00:44:17,100 --> 00:44:24,800
from Postgres to my sequel of course

00:44:20,010 --> 00:44:27,480
yeah I mean sure yeah I mean I think in

00:44:24,800 --> 00:44:29,490
one-one early version of the document I

00:44:27,480 --> 00:44:32,550
even had something in like this will

00:44:29,490 --> 00:44:35,790
probably only work if you move from the

00:44:32,550 --> 00:44:38,220
very same CF deployment version to like

00:44:35,790 --> 00:44:40,590
the same target version I think Marco

00:44:38,220 --> 00:44:42,840
corrected me on that one and said now

00:44:40,590 --> 00:44:45,750
probably it's not that strict of a

00:44:42,840 --> 00:44:48,120
requirement at least things should be

00:44:45,750 --> 00:44:50,700
relatively similar right and database

00:44:48,120 --> 00:44:54,240
changes in during that stuff this is

00:44:50,700 --> 00:44:57,950
definitely not the experience should be

00:44:54,240 --> 00:45:03,530
like when you're getting a new phone

00:44:57,950 --> 00:45:10,880
oh yeah transfer not like it was 15

00:45:03,530 --> 00:45:13,910
years it was never hard for me with

00:45:10,880 --> 00:45:23,180
Android I mean yeah it's good behind it

00:45:13,910 --> 00:45:24,710
seems this way what's about to say so

00:45:23,180 --> 00:45:32,720
maybe there's not the way it should be

00:45:24,710 --> 00:45:34,910
even easier than that okay any any

00:45:32,720 --> 00:45:40,849
additional topics for now if not I guess

00:45:34,910 --> 00:45:44,000
we can close it earlier maybe one last

00:45:40,849 --> 00:45:46,640
thing I kind of tried to to be a little

00:45:44,000 --> 00:45:48,619
bit earlier with sending out the poll

00:45:46,640 --> 00:45:50,180
and also closing it I think that was

00:45:48,619 --> 00:45:52,880
feedback from this round basically

00:45:50,180 --> 00:45:56,240
saying would be better to give people a

00:45:52,880 --> 00:45:59,990
little upfront time to actually know

00:45:56,240 --> 00:46:02,089
that they are asked to to present in

00:45:59,990 --> 00:46:04,790
this round and have a couple of days to

00:46:02,089 --> 00:46:07,130
to prepare upfront so I hope I can

00:46:04,790 --> 00:46:09,589
actually keep that promise at least for

00:46:07,130 --> 00:46:11,900
next time I think this time I again was

00:46:09,589 --> 00:46:15,200
a little bit late with pinging Eric to

00:46:11,900 --> 00:46:18,609
see somebody from from UA a coach could

00:46:15,200 --> 00:46:21,470
join in this round and so with that

00:46:18,609 --> 00:46:25,540
there's no further topics and I guess we

00:46:21,470 --> 00:46:25,540

YouTube URL: https://www.youtube.com/watch?v=ZhrmU5fC1aE


