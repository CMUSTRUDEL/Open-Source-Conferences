Title: Shift Left Security — The What, Why and How - Ashley Ward, Twistlock
Publication date: 2018-10-11
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Shift Left Security — The What, Why and How - Ashley Ward, Twistlock

Today, developers have numerous tools to choose from and methods to consider when building applications and websites. Where 15 years ago working in the cloud was a new trend, today entire companies’ services are born in the cloud. Where virtual machines once reigned, containers are gradually taking their place. How does DevOps adapt to these changes, while still securing their environments, from inception to rollout? One way is to ‘shift left.’

This new approach moves software testing earlier in its lifecycle — or moves left on the project timeline — to prevent defects early in the software delivery process. Ben Bernstein, Chief Executive Officer of Twistlock, will begin this session by giving attendees an in-depth look at what it means to shift left, and will explain the following five steps to ensuring a successful and secure transition to begin testing software earlier in its lifecycle.
Vet configurations: Developers shouldn’t need to make configuration changes. All images, including those used in development and testing stages, should be equal to the images rolled out in production.
Test early and often: Bringing this motto to the shift left approach will help developers measure their success not by how quickly they can get their project into development, but by how many bugs they resolve before rollout.
Give insights into production: Team leads in DevOps should consider building dashboards or visualization tools so developers can gain real-time feedback into the security practices they’re building. This will help security and developer teams join forces to own the security needs in every stage of development.
Rethink automation: Don’t think of automation as a roadblock to production — think of it as a testing gauntlet where the code has to prove itself. 
Be proactive: With all the tools today that can detect vulnerabilities and risks, it’s easier than ever to identify and resolve security gaps to prevent being impacted by cyber attacks. Find the right tools, and proactively use them in every stage of the development process.

After discussing these five points, Ben will conclude by discussing the rising role of the developer in stopping attacks before they happen, thereby becoming the behind-the-scenes security guards for company data and customer information.

https://cfseu18.sched.com/event/FRyI/shift-left-security-the-what-why-and-how-ashley-ward-twistlock
Captions: 
	00:00:00,030 --> 00:00:04,980
well hello everybody my name is Ashley

00:00:03,060 --> 00:00:05,750
ward I work for a company called

00:00:04,980 --> 00:00:08,460
twistlock

00:00:05,750 --> 00:00:09,870
I've been lucky enough to come along

00:00:08,460 --> 00:00:13,170
here to talk to all of you about shift

00:00:09,870 --> 00:00:15,780
lab security and how that how that can

00:00:13,170 --> 00:00:17,340
actually benefit everything there so my

00:00:15,780 --> 00:00:19,890
background I'm an infrastructure guy

00:00:17,340 --> 00:00:22,350
where I was I started out as a UNIX

00:00:19,890 --> 00:00:24,779
admin before utilities company before

00:00:22,350 --> 00:00:27,810
moving and working for Sky TV actually

00:00:24,779 --> 00:00:29,340
as a infrastructure architect and then

00:00:27,810 --> 00:00:32,610
more recently into financial services

00:00:29,340 --> 00:00:35,070
and now I find myself as a vendor now I

00:00:32,610 --> 00:00:36,960
do a lot of talks but for some reason

00:00:35,070 --> 00:00:39,210
I'm particularly nervous about this one

00:00:36,960 --> 00:00:40,620
and I was trying to think why that was I

00:00:39,210 --> 00:00:43,920
think it's because this is cloud foundry

00:00:40,620 --> 00:00:45,629
and as an ex openshift recovering

00:00:43,920 --> 00:00:48,629
openshift chap maybe that's where I'm

00:00:45,629 --> 00:00:51,110
getting my nerves from but anyway we're

00:00:48,629 --> 00:00:53,010
going to talk about chef level security

00:00:51,110 --> 00:00:56,579
let's see what we're going to cover

00:00:53,010 --> 00:00:58,500
today so what is shift lab security

00:00:56,579 --> 00:01:01,050
we're going to go through some of that I

00:00:58,500 --> 00:01:02,699
mean it's it's an overused term in my

00:01:01,050 --> 00:01:04,290
opinion but it's actually something

00:01:02,699 --> 00:01:06,320
that's very important and it's actually

00:01:04,290 --> 00:01:09,600
something that if done properly will

00:01:06,320 --> 00:01:11,670
enhances everybody's security so yes I'm

00:01:09,600 --> 00:01:13,950
a security vendor yes I want you to keep

00:01:11,670 --> 00:01:15,810
to buy the product so that I get new

00:01:13,950 --> 00:01:17,640
t-shirts and this kind of thing but also

00:01:15,810 --> 00:01:20,100
I've a vested interest in this all doing

00:01:17,640 --> 00:01:21,659
security better now in the Cloud Foundry

00:01:20,100 --> 00:01:24,390
summer and then all the vendors that you

00:01:21,659 --> 00:01:26,520
speak to this is now a core thing and my

00:01:24,390 --> 00:01:28,560
credit card details got lost with by

00:01:26,520 --> 00:01:30,420
British Airways just recently I'm sort

00:01:28,560 --> 00:01:33,060
of is it's a core thing that affects all

00:01:30,420 --> 00:01:35,340
of us so what is shift left security

00:01:33,060 --> 00:01:39,270
we'll talk about that we'll talk about

00:01:35,340 --> 00:01:40,500
why it's important it's Kay one of those

00:01:39,270 --> 00:01:42,509
ones I always remember being battered

00:01:40,500 --> 00:01:44,399
over the head with and we won't do

00:01:42,509 --> 00:01:46,950
test-driven development we want to have

00:01:44,399 --> 00:01:48,329
automated tests at every step and it

00:01:46,950 --> 00:01:49,890
used to be very painful for me isn't

00:01:48,329 --> 00:01:51,840
infrastructure guy to go right well I'll

00:01:49,890 --> 00:01:53,549
write some puppet code or I'll do

00:01:51,840 --> 00:01:54,990
something like this but it's quicker for

00:01:53,549 --> 00:01:57,060
me just to write a shell script rather

00:01:54,990 --> 00:01:59,240
than do all this automated testing so

00:01:57,060 --> 00:02:01,590
we'll talk about why it is important

00:01:59,240 --> 00:02:04,649
we'll talk about how you enable it so

00:02:01,590 --> 00:02:06,810
how you as a security person how you as

00:02:04,649 --> 00:02:08,910
a platform person how you as a a DevOps

00:02:06,810 --> 00:02:12,390
team or a developer how you can actually

00:02:08,910 --> 00:02:13,800
enable some of this and then we'll

00:02:12,390 --> 00:02:17,810
hopefully have some time first

00:02:13,800 --> 00:02:21,420
Q&A as well all right

00:02:17,810 --> 00:02:23,730
so where where was the stage what we're

00:02:21,420 --> 00:02:26,880
setting here why is this important as we

00:02:23,730 --> 00:02:29,430
said a lovely marketing term software is

00:02:26,880 --> 00:02:31,380
eating the world I mean it is marketing

00:02:29,430 --> 00:02:33,210
term but it is true and if you think

00:02:31,380 --> 00:02:34,740
about it every organ is becoming a

00:02:33,210 --> 00:02:37,650
software organization and I don't just

00:02:34,740 --> 00:02:39,090
mean disruptors I don't just mean cooper

00:02:37,650 --> 00:02:41,970
coming in and saying that this is now

00:02:39,090 --> 00:02:44,370
how we all order taxis I mean things

00:02:41,970 --> 00:02:46,320
like well my British Airways example I

00:02:44,370 --> 00:02:47,910
certainly never booked any of my flights

00:02:46,320 --> 00:02:49,710
for coming here it's all done online and

00:02:47,910 --> 00:02:51,870
it's how we are the groceries Earth's

00:02:49,710 --> 00:02:53,100
how I order groceries it's how we

00:02:51,870 --> 00:02:54,930
already busty presents and Christmas

00:02:53,100 --> 00:02:57,960
presents is how we do all these

00:02:54,930 --> 00:02:59,880
different things and of course software

00:02:57,960 --> 00:03:02,280
organizations they need modern tooling

00:02:59,880 --> 00:03:03,300
and some may I'll go into a few times

00:03:02,280 --> 00:03:05,250
and I want to be very clear

00:03:03,300 --> 00:03:06,870
there's nothing wrong with how we've

00:03:05,250 --> 00:03:09,410
done stuff it's just we have an

00:03:06,870 --> 00:03:12,750
opportunity to make things better

00:03:09,410 --> 00:03:14,940
okay then DevOps containers cloud native

00:03:12,750 --> 00:03:17,070
all these kind of cool new toolings are

00:03:14,940 --> 00:03:18,600
coming in place well what are they all

00:03:17,070 --> 00:03:21,090
for they're all to speed up that

00:03:18,600 --> 00:03:22,500
delivery that we're doing and I know you

00:03:21,090 --> 00:03:24,810
know I usually get to give these talks

00:03:22,500 --> 00:03:26,880
but maybe people who were just starting

00:03:24,810 --> 00:03:30,060
out with containers I get to these talks

00:03:26,880 --> 00:03:31,770
to people who are just entering they see

00:03:30,060 --> 00:03:34,080
docker coming into their enterprise or

00:03:31,770 --> 00:03:35,940
they see platforms as a service and I'm

00:03:34,080 --> 00:03:37,290
fully conscious that here I'm probably

00:03:35,940 --> 00:03:38,880
preaching to the choir and a lot of

00:03:37,290 --> 00:03:42,030
these things will go through those

00:03:38,880 --> 00:03:43,140
anyway the world is dangerous well yeah

00:03:42,030 --> 00:03:45,390
the world has always been a dangerous

00:03:43,140 --> 00:03:47,820
place but the world the danger in the

00:03:45,390 --> 00:03:50,400
risks are changing we see the

00:03:47,820 --> 00:03:52,230
democratization of attacks so what does

00:03:50,400 --> 00:03:55,739
that mean well you can very easily get a

00:03:52,230 --> 00:03:57,120
hacking toolkit online the the catch way

00:03:55,739 --> 00:03:59,730
that attacks are happening they are

00:03:57,120 --> 00:04:01,730
changing as well so we've got companies

00:03:59,730 --> 00:04:04,170
where you would be afraid before of

00:04:01,730 --> 00:04:05,580
intellectual property theft someone

00:04:04,170 --> 00:04:07,350
trying to steal your your actual

00:04:05,580 --> 00:04:10,500
hard-earned money or your or your users

00:04:07,350 --> 00:04:11,910
a data customer data and actually move

00:04:10,500 --> 00:04:13,860
or other risks we've got people who are

00:04:11,910 --> 00:04:16,769
just looking to steal your CPU cycles

00:04:13,860 --> 00:04:18,060
and a Tesla is a wonderful example I

00:04:16,769 --> 00:04:19,410
mean that what is smart what's smart

00:04:18,060 --> 00:04:22,680
attack they had all because of that

00:04:19,410 --> 00:04:24,660
kubernetes control plane and then your

00:04:22,680 --> 00:04:26,770
own software z is the softest target

00:04:24,660 --> 00:04:28,750
well I mean is that fair probably not

00:04:26,770 --> 00:04:30,490
and but it certainly is something where

00:04:28,750 --> 00:04:33,400
if you're developing your own software

00:04:30,490 --> 00:04:35,590
as you are as a software company then

00:04:33,400 --> 00:04:37,090
nobody else is policing that software

00:04:35,590 --> 00:04:42,340
for you that is something that you would

00:04:37,090 --> 00:04:45,699
need to do another lovely little quote

00:04:42,340 --> 00:04:47,889
here only 20% of organisations following

00:04:45,699 --> 00:04:49,889
DevOps practices consistently integrate

00:04:47,889 --> 00:04:52,810
security into the development process

00:04:49,889 --> 00:04:55,080
this was a survey it was about last year

00:04:52,810 --> 00:04:57,610
but there's that big shift of

00:04:55,080 --> 00:04:59,050
developments we are developing faster we

00:04:57,610 --> 00:05:01,210
are trying to meet those needs of our

00:04:59,050 --> 00:05:03,580
our business customers our external

00:05:01,210 --> 00:05:05,409
customers who have a stronger desire to

00:05:03,580 --> 00:05:08,380
see new software and new features coming

00:05:05,409 --> 00:05:09,880
out and all that business benefit but

00:05:08,380 --> 00:05:14,229
were not necessarily integrating

00:05:09,880 --> 00:05:15,490
security into that another lovely quote

00:05:14,229 --> 00:05:18,099
for you see I've done all the legwork

00:05:15,490 --> 00:05:20,229
only 15% of organizations can remediate

00:05:18,099 --> 00:05:21,940
security vulnerabilities or address

00:05:20,229 --> 00:05:24,190
compliance violations as they arrive

00:05:21,940 --> 00:05:26,440
arise and that was from that was a

00:05:24,190 --> 00:05:29,380
survey that shifted and that was tail

00:05:26,440 --> 00:05:31,900
end of 2017 so what this is talking

00:05:29,380 --> 00:05:35,169
about is that we're delivering software

00:05:31,900 --> 00:05:36,759
faster because we have to from that

00:05:35,169 --> 00:05:38,830
business benefit software eating the

00:05:36,759 --> 00:05:41,469
world nor that kind of good thing we're

00:05:38,830 --> 00:05:43,270
sometimes embedding some security into

00:05:41,469 --> 00:05:46,240
that and doing that bit of shift lefting

00:05:43,270 --> 00:05:48,009
but we're not actually able to respond

00:05:46,240 --> 00:05:55,409
to those threats in production and

00:05:48,009 --> 00:05:59,409
that's a big deal so shift left security

00:05:55,409 --> 00:06:00,759
testing before you deploy compliance

00:05:59,409 --> 00:06:03,729
requirements when you build

00:06:00,759 --> 00:06:05,440
so we've taken if you think about all

00:06:03,729 --> 00:06:07,090
the agile delivery methodologies that

00:06:05,440 --> 00:06:09,430
we've got and it is all about delivering

00:06:07,090 --> 00:06:11,199
that exact Minimum Viable Product that

00:06:09,430 --> 00:06:13,180
exact information that the business

00:06:11,199 --> 00:06:15,400
needs and the business wants no longer

00:06:13,180 --> 00:06:16,900
assuming as IT that the business will

00:06:15,400 --> 00:06:18,159
want old and at different bells and

00:06:16,900 --> 00:06:20,349
whistles but actually delivering

00:06:18,159 --> 00:06:22,270
iteratively what they need we've done a

00:06:20,349 --> 00:06:24,789
lot of work in that regard so grooming

00:06:22,270 --> 00:06:26,949
backlogs we've been looking at building

00:06:24,789 --> 00:06:28,659
bringing the business in to scrum teams

00:06:26,949 --> 00:06:31,690
or inter development teams to try and

00:06:28,659 --> 00:06:32,860
get that actual value that's coming but

00:06:31,690 --> 00:06:34,229
we're not necessarily doing that with

00:06:32,860 --> 00:06:37,360
security

00:06:34,229 --> 00:06:38,860
so moving security practices left in to

00:06:37,360 --> 00:06:40,300
the software development lifecycle with

00:06:38,860 --> 00:06:42,729
the goal of shifting from a react

00:06:40,300 --> 00:06:43,870
to a proactive security posture and it's

00:06:42,729 --> 00:06:45,250
just the same as we've been doing with

00:06:43,870 --> 00:06:50,440
the business but this time bringing

00:06:45,250 --> 00:06:51,879
security in all right really great hear

00:06:50,440 --> 00:06:55,000
me talk about it it's quite difficult to

00:06:51,879 --> 00:06:58,509
do what's the reason for this well if

00:06:55,000 --> 00:07:00,099
you look at traditional security in my

00:06:58,509 --> 00:07:02,620
experience and in some of the stuff we

00:07:00,099 --> 00:07:05,319
see but a lot of our customers security

00:07:02,620 --> 00:07:08,020
is almost a separate group they're on a

00:07:05,319 --> 00:07:10,419
on a pedestal and accompany the perhaps

00:07:08,020 --> 00:07:12,250
only be involved in that production

00:07:10,419 --> 00:07:14,050
realm and not seeing stuff that are

00:07:12,250 --> 00:07:16,180
coming through dev and this isn't the

00:07:14,050 --> 00:07:18,039
fault I'm not saying Security's bad as

00:07:16,180 --> 00:07:20,190
security with an S for the team they're

00:07:18,039 --> 00:07:22,949
not bad guys this is driven by necessity

00:07:20,190 --> 00:07:26,710
we had to be very secretive about our

00:07:22,949 --> 00:07:29,199
security security was and hidden away

00:07:26,710 --> 00:07:30,969
and it was a separate team so those

00:07:29,199 --> 00:07:32,949
people who are doing security they've

00:07:30,969 --> 00:07:35,800
got a very different deliverable to

00:07:32,949 --> 00:07:37,210
those who are developing applications so

00:07:35,800 --> 00:07:38,830
as we've got there in the second point

00:07:37,210 --> 00:07:41,560
developers and security have very

00:07:38,830 --> 00:07:43,419
different domain expertise and in fact

00:07:41,560 --> 00:07:44,680
there was a cloud passage and I'm going

00:07:43,419 --> 00:07:46,539
to go and check my notes so I get the

00:07:44,680 --> 00:07:49,630
actual the actual thing right on this

00:07:46,539 --> 00:07:52,630
one and there was a cloud passage report

00:07:49,630 --> 00:07:56,110
that came out and it was the tail end of

00:07:52,630 --> 00:08:00,060
2016 a little bit and it was talking

00:07:56,110 --> 00:08:03,130
about how of the top 50 cyber security

00:08:00,060 --> 00:08:05,139
graduate programs in the u.s. only three

00:08:03,130 --> 00:08:08,169
of them had a requirement for a cyber

00:08:05,139 --> 00:08:10,569
security pass rate so sorry computer

00:08:08,169 --> 00:08:13,569
science programs in the u.s. top 50

00:08:10,569 --> 00:08:15,460
computer science graduate programs only

00:08:13,569 --> 00:08:17,889
three had a requirement have any cyber

00:08:15,460 --> 00:08:19,599
security module in there so we're

00:08:17,889 --> 00:08:21,849
actually teaching developers and DevOps

00:08:19,599 --> 00:08:23,830
people that security is a secondary

00:08:21,849 --> 00:08:25,690
thing you've got security teams who are

00:08:23,830 --> 00:08:28,180
looking at this as a very important

00:08:25,690 --> 00:08:29,830
thing in keeping that all separate so

00:08:28,180 --> 00:08:32,589
it's almost as if Security's part of a

00:08:29,830 --> 00:08:37,380
club prize developments part bringing

00:08:32,589 --> 00:08:40,630
business value in security by design

00:08:37,380 --> 00:08:42,760
established criteria up front now if

00:08:40,630 --> 00:08:44,529
that means that you follow a methodology

00:08:42,760 --> 00:08:46,269
from your delivering software where you

00:08:44,529 --> 00:08:47,769
have very rigid requirements that are

00:08:46,269 --> 00:08:49,029
spelled out in the beginning and I know

00:08:47,769 --> 00:08:50,620
a lot of the industry we're moving away

00:08:49,029 --> 00:08:52,899
from that so it's very difficult to know

00:08:50,620 --> 00:08:54,070
all those requirements up front but you

00:08:52,899 --> 00:08:56,410
might still be an industry

00:08:54,070 --> 00:08:58,000
well that's necessary great in which

00:08:56,410 --> 00:09:00,040
case security should be come into that

00:08:58,000 --> 00:09:02,410
you might be in an industry where

00:09:00,040 --> 00:09:03,610
actually you're very iterative you're

00:09:02,410 --> 00:09:05,080
actually looking at these things and

00:09:03,610 --> 00:09:06,910
bringing people in security should be

00:09:05,080 --> 00:09:08,980
part of that as well and whether that's

00:09:06,910 --> 00:09:10,870
part of the compliance requirements that

00:09:08,980 --> 00:09:14,310
we all have now or whether it's part of

00:09:10,870 --> 00:09:14,310
what the applications going to be doing

00:09:14,520 --> 00:09:20,260
automate automate automate and we've got

00:09:18,100 --> 00:09:22,150
to be automating them we've got to bring

00:09:20,260 --> 00:09:24,010
security requirements that we've

00:09:22,150 --> 00:09:25,300
established in the beginning and we've

00:09:24,010 --> 00:09:27,400
got to have that as part of the delivery

00:09:25,300 --> 00:09:29,950
process why well we're no longer just

00:09:27,400 --> 00:09:31,600
having these dead and projects so it's

00:09:29,950 --> 00:09:34,330
no longer a case of define my

00:09:31,600 --> 00:09:36,100
requirements build my project throw out

00:09:34,330 --> 00:09:37,390
the door and it's no operations that

00:09:36,100 --> 00:09:38,890
need to deal with it an operational

00:09:37,390 --> 00:09:41,410
security and everybody else we've got

00:09:38,890 --> 00:09:44,080
this ownership of the of the product of

00:09:41,410 --> 00:09:46,480
the service so without that automation

00:09:44,080 --> 00:09:50,440
for security then we would actually have

00:09:46,480 --> 00:09:52,840
a major gate problem and talking about

00:09:50,440 --> 00:09:55,180
gates control gates are actually your

00:09:52,840 --> 00:09:56,670
friend so from a development point of

00:09:55,180 --> 00:09:59,260
view and from a DevOps point of view

00:09:56,670 --> 00:10:01,390
control gates are a pain

00:09:59,260 --> 00:10:04,810
they've always been a pain so I always

00:10:01,390 --> 00:10:07,540
like telling my story of a 20 year old

00:10:04,810 --> 00:10:09,880
20 year old lady in in Scotland and

00:10:07,540 --> 00:10:12,040
getting root access and having full

00:10:09,880 --> 00:10:14,170
ownership of those big nasty Solaris

00:10:12,040 --> 00:10:17,770
servers that I worked with Oracle

00:10:14,170 --> 00:10:19,360
servers knows was not some well having

00:10:17,770 --> 00:10:20,830
that root power and then be able to see

00:10:19,360 --> 00:10:22,540
when application developers came along

00:10:20,830 --> 00:10:23,710
and said right we've got this wonderful

00:10:22,540 --> 00:10:26,440
new thing that's going to make the

00:10:23,710 --> 00:10:27,490
company lots of money and I'd look at it

00:10:26,440 --> 00:10:31,540
and say well there are vulnerabilities

00:10:27,490 --> 00:10:33,070
there are compliance issues so no they

00:10:31,540 --> 00:10:34,120
would go away they would do some more

00:10:33,070 --> 00:10:35,410
coding they would make some more

00:10:34,120 --> 00:10:37,210
wonderful things they would come back

00:10:35,410 --> 00:10:38,800
and then they would say right we're

00:10:37,210 --> 00:10:41,530
gonna go live with this and I would go

00:10:38,800 --> 00:10:43,270
no because of these vulnerabilities and

00:10:41,530 --> 00:10:45,580
compliance they're more often than not

00:10:43,270 --> 00:10:47,320
the business would win and say well

00:10:45,580 --> 00:10:49,060
we're just getting an exception put in

00:10:47,320 --> 00:10:51,460
place this needs to be put out because

00:10:49,060 --> 00:10:53,800
it's going to make us lots of money so

00:10:51,460 --> 00:10:55,870
that control gate is at the very end of

00:10:53,800 --> 00:10:57,550
the process and is delaying everything

00:10:55,870 --> 00:10:59,440
and if you're delaying the business the

00:10:57,550 --> 00:11:01,060
business is going to push past but

00:10:59,440 --> 00:11:02,950
control gates can be your friend if

00:11:01,060 --> 00:11:05,260
they're brought right back up here and

00:11:02,950 --> 00:11:07,360
right to that shift left because then

00:11:05,260 --> 00:11:07,850
you're actually fixing something before

00:11:07,360 --> 00:11:10,370
it hit

00:11:07,850 --> 00:11:13,519
rod and because the DevOps teams now own

00:11:10,370 --> 00:11:18,350
that production service as well that

00:11:13,519 --> 00:11:21,949
control gate is their friend sharing

00:11:18,350 --> 00:11:25,310
tooling dot siloing information this

00:11:21,949 --> 00:11:28,850
ties back to that idea of you have a

00:11:25,310 --> 00:11:31,190
security team you have developers and

00:11:28,850 --> 00:11:33,410
neither the two shall talk to each other

00:11:31,190 --> 00:11:35,630
and that obviously can't be happening

00:11:33,410 --> 00:11:37,940
but if you come from a world where they

00:11:35,630 --> 00:11:39,889
are separate so we're going back to

00:11:37,940 --> 00:11:42,110
those bad old days where have got their

00:11:39,889 --> 00:11:44,329
separate security of the capitalist team

00:11:42,110 --> 00:11:46,730
that's there their requirements are very

00:11:44,329 --> 00:11:48,920
different to what our DevOps team or

00:11:46,730 --> 00:11:51,440
someone who wants to fix things is so

00:11:48,920 --> 00:11:54,079
going back to that UNIX admin that I was

00:11:51,440 --> 00:11:58,310
I recall often getting emails from

00:11:54,079 --> 00:12:00,170
security that would say this CVE tell us

00:11:58,310 --> 00:12:03,560
what it's on what what service is this

00:12:00,170 --> 00:12:06,259
one right I'm gonna have a look I'd

00:12:03,560 --> 00:12:07,940
probably look up and Sons website or Red

00:12:06,259 --> 00:12:10,310
Hat's website find out what on earth the

00:12:07,940 --> 00:12:12,470
CB CB years then go around the whole

00:12:10,310 --> 00:12:14,480
estate probably with an SSH and a for

00:12:12,470 --> 00:12:17,269
loop to try and find out well what is it

00:12:14,480 --> 00:12:19,130
that's out there and and then I'd come

00:12:17,269 --> 00:12:20,449
back and say yes I've found what it's on

00:12:19,130 --> 00:12:22,279
it's on all these different things they

00:12:20,449 --> 00:12:23,509
said well you need to resolve it I don't

00:12:22,279 --> 00:12:25,130
know how to do that what's this I'll try

00:12:23,509 --> 00:12:27,889
and patch it but that's about it

00:12:25,130 --> 00:12:30,019
but if you're sending an email in our

00:12:27,889 --> 00:12:33,079
new world to our DevOps teams to say you

00:12:30,019 --> 00:12:34,819
have CVE ba ba ba please fix it that's

00:12:33,079 --> 00:12:36,500
that's helping nobody there's there's no

00:12:34,819 --> 00:12:38,870
information there there's no context

00:12:36,500 --> 00:12:41,000
there's no risk so if we share tooling

00:12:38,870 --> 00:12:43,639
and don't silo information so at the

00:12:41,000 --> 00:12:45,110
time of finding a CVE the DevOps teams

00:12:43,639 --> 00:12:46,939
get all the information that the

00:12:45,110 --> 00:12:50,509
security team would have we're in a much

00:12:46,939 --> 00:12:52,040
better place and then this is something

00:12:50,509 --> 00:12:54,350
that's going to come up again and again

00:12:52,040 --> 00:12:56,779
from the security and shifting left it's

00:12:54,350 --> 00:12:58,310
not just about going right here are the

00:12:56,779 --> 00:13:00,620
vulnerability and compliance checks you

00:12:58,310 --> 00:13:02,810
have to do once that goes green then you

00:13:00,620 --> 00:13:05,389
can deploy and as a security person I

00:13:02,810 --> 00:13:07,639
can sit back with my big cigar and just

00:13:05,389 --> 00:13:10,040
enjoy life and it's actually about going

00:13:07,639 --> 00:13:12,230
know this all the learning that happens

00:13:10,040 --> 00:13:13,939
in those DevOps teams about the

00:13:12,230 --> 00:13:15,740
application that the software that we're

00:13:13,939 --> 00:13:18,110
building that can be fed right into

00:13:15,740 --> 00:13:20,120
security security can actually have a

00:13:18,110 --> 00:13:21,150
better visibility of what the company's

00:13:20,120 --> 00:13:23,190
doing with that so

00:13:21,150 --> 00:13:25,380
and doing that all the way through from

00:13:23,190 --> 00:13:27,510
dev having that visibility as soon as

00:13:25,380 --> 00:13:29,400
codes written as soon as that thing gets

00:13:27,510 --> 00:13:32,370
produced right the way through to prot

00:13:29,400 --> 00:13:33,960
and that is better for everybody all

00:13:32,370 --> 00:13:36,050
right nice white screen for everybody

00:13:33,960 --> 00:13:38,220
here just to show you how nice way is

00:13:36,050 --> 00:13:39,630
containers and power security teams to

00:13:38,220 --> 00:13:42,480
chef laughs more successfully than

00:13:39,630 --> 00:13:44,160
traditional architectures so where does

00:13:42,480 --> 00:13:46,290
twists come from this is what we believe

00:13:44,160 --> 00:13:48,779
we believe containers do improve

00:13:46,290 --> 00:13:51,150
security and we also believe that

00:13:48,779 --> 00:13:53,250
there's a lot of fear uncertainty and

00:13:51,150 --> 00:13:55,050
doubt around containers now we can see

00:13:53,250 --> 00:13:57,390
with some of the announcements from

00:13:55,050 --> 00:13:59,220
cloud foundry about how kubernetes

00:13:57,390 --> 00:14:01,470
support those two lovely projects that

00:13:59,220 --> 00:14:03,990
loved hearing this kind of thing and one

00:14:01,470 --> 00:14:06,300
of the things that if the could because

00:14:03,990 --> 00:14:08,130
in concern is that if you go away from

00:14:06,300 --> 00:14:10,410
that platform as a service model and

00:14:08,130 --> 00:14:12,779
towards this container model then you

00:14:10,410 --> 00:14:15,480
might be implicitly allowing they're

00:14:12,779 --> 00:14:17,730
saying yes run other platforms run other

00:14:15,480 --> 00:14:20,370
things across the estate and you could

00:14:17,730 --> 00:14:21,750
actually be introducing that risk well

00:14:20,370 --> 00:14:23,790
we believe that containers improve

00:14:21,750 --> 00:14:27,089
security such that you don't need to

00:14:23,790 --> 00:14:29,010
worry about that why just like your

00:14:27,089 --> 00:14:31,770
Cloud Foundry stuff just that minimal

00:14:29,010 --> 00:14:33,180
single process entities so this ties

00:14:31,770 --> 00:14:35,070
back into that well what are those

00:14:33,180 --> 00:14:37,709
requirements if we want to put security

00:14:35,070 --> 00:14:39,570
requirements in place it's a lot easier

00:14:37,709 --> 00:14:41,880
if we've got small articles and we've

00:14:39,570 --> 00:14:44,970
got minimal things where we can say this

00:14:41,880 --> 00:14:48,450
is what makes up our application this

00:14:44,970 --> 00:14:51,060
part of the application the declarative

00:14:48,450 --> 00:14:52,830
we can do all this testing upfront we

00:14:51,060 --> 00:14:55,080
can say this is what an image should do

00:14:52,830 --> 00:14:56,970
this is what an image looks like and we

00:14:55,080 --> 00:15:02,010
can place that image all the way along

00:14:56,970 --> 00:15:03,810
and then Plitt ability again and I think

00:15:02,010 --> 00:15:06,180
this comes back to my nerves at the

00:15:03,810 --> 00:15:07,950
start of the talk I do know that this is

00:15:06,180 --> 00:15:09,750
you know as a platform as a service

00:15:07,950 --> 00:15:11,370
thing that Cloud Foundry starting out as

00:15:09,750 --> 00:15:13,529
this is probably you've gone yeah of

00:15:11,370 --> 00:15:15,570
course well this is actually quite new

00:15:13,529 --> 00:15:16,800
for a lot of people and it's new for a

00:15:15,570 --> 00:15:19,230
lot of people if you think about it from

00:15:16,800 --> 00:15:21,089
a VM side of things right you would have

00:15:19,230 --> 00:15:23,339
a server you would have a server that

00:15:21,089 --> 00:15:24,959
had the operating system on it it would

00:15:23,339 --> 00:15:27,060
have any libraries that were needed for

00:15:24,959 --> 00:15:29,459
there you were typically especially when

00:15:27,060 --> 00:15:31,680
it was bare metal have multiple services

00:15:29,459 --> 00:15:34,350
running in a single server and that ties

00:15:31,680 --> 00:15:35,280
back to why I had you access I could say

00:15:34,350 --> 00:15:37,980
no to

00:15:35,280 --> 00:15:40,200
because the server was more important

00:15:37,980 --> 00:15:43,620
than the service individual service

00:15:40,200 --> 00:15:45,270
running on there if you take that and

00:15:43,620 --> 00:15:47,190
transfer it now to containers

00:15:45,270 --> 00:15:49,820
well actually the service is more

00:15:47,190 --> 00:15:52,290
important than the container itself

00:15:49,820 --> 00:15:54,450
because we're able to say that this is

00:15:52,290 --> 00:15:56,280
just a small unit and say that it's got

00:15:54,450 --> 00:15:57,810
all the different dev ops team their

00:15:56,280 --> 00:15:59,850
libraries that they need it's got the

00:15:57,810 --> 00:16:02,550
application code it's so minimal

00:15:59,850 --> 00:16:09,630
declarative and predictable that we can

00:16:02,550 --> 00:16:12,630
do better security all around that each

00:16:09,630 --> 00:16:15,900
artifact security requirements for them

00:16:12,630 --> 00:16:18,090
the conversation is easier when we talk

00:16:15,900 --> 00:16:19,620
go back to this idea of having we've got

00:16:18,090 --> 00:16:20,940
this application we want to put some

00:16:19,620 --> 00:16:22,560
testing in place we want to have

00:16:20,940 --> 00:16:24,510
security requirements brought to the

00:16:22,560 --> 00:16:26,430
front it's easier said than done

00:16:24,510 --> 00:16:29,700
well having these minimal minimal

00:16:26,430 --> 00:16:32,520
artifacts really enables that the

00:16:29,700 --> 00:16:34,230
declarative nature automatic analysis of

00:16:32,520 --> 00:16:35,760
it for vulnerabilities and compliance so

00:16:34,230 --> 00:16:37,620
it's easy to push those vulnerabilities

00:16:35,760 --> 00:16:41,070
and compliance scanning to the beginning

00:16:37,620 --> 00:16:44,640
and the predictable nature well we can

00:16:41,070 --> 00:16:46,560
automate policy creation because we can

00:16:44,640 --> 00:16:48,450
say that every time something is spawned

00:16:46,560 --> 00:16:50,910
it's the same as what that base image

00:16:48,450 --> 00:16:52,410
was we can automate that security around

00:16:50,910 --> 00:16:57,480
there and that's tying into that

00:16:52,410 --> 00:16:59,510
automate automate automate so security

00:16:57,480 --> 00:17:02,850
by design established criteria up front

00:16:59,510 --> 00:17:05,850
automate automate automate control gates

00:17:02,850 --> 00:17:07,110
are your friend share - and don't silo

00:17:05,850 --> 00:17:09,329
information it's the same slide as

00:17:07,110 --> 00:17:11,130
before but what is it that we're seeing

00:17:09,329 --> 00:17:13,170
here well what we're trying to show you

00:17:11,130 --> 00:17:16,850
is that yes containers will help with

00:17:13,170 --> 00:17:18,959
much of this so number one number two

00:17:16,850 --> 00:17:20,010
probably not with control gates although

00:17:18,959 --> 00:17:22,560
you would be able to build them and

00:17:20,010 --> 00:17:24,000
quite easily share tooling well

00:17:22,560 --> 00:17:25,410
containers themselves don't actually do

00:17:24,000 --> 00:17:27,150
that really they're not helping us

00:17:25,410 --> 00:17:29,220
therefore a security talking to DevOps

00:17:27,150 --> 00:17:30,810
thing but they do allow us to do more

00:17:29,220 --> 00:17:32,100
blaring with what's going on inside the

00:17:30,810 --> 00:17:37,260
container so we could say that we meet

00:17:32,100 --> 00:17:39,480
kind of three of those five I'm sorry

00:17:37,260 --> 00:17:41,520
they give me a t-shirt I have to do a

00:17:39,480 --> 00:17:44,280
little bit of Suzy stuff I will keep it

00:17:41,520 --> 00:17:45,900
very light twist lock it enables all of

00:17:44,280 --> 00:17:47,660
this and you should definitely give us

00:17:45,900 --> 00:17:50,540
lots of money so that we can

00:17:47,660 --> 00:17:51,830
doing that and actually what we're doing

00:17:50,540 --> 00:17:53,120
is even if you weren't to go for a

00:17:51,830 --> 00:17:55,640
platform like twistlock what we're

00:17:53,120 --> 00:17:57,530
saying is that you can through the use

00:17:55,640 --> 00:17:59,690
of containers get all that protection

00:17:57,530 --> 00:18:01,250
right up front and then actually onwards

00:17:59,690 --> 00:18:03,800
into what's actually running in your

00:18:01,250 --> 00:18:05,360
estate and I was going to take out the

00:18:03,800 --> 00:18:07,310
little openshift logo that's there but I

00:18:05,360 --> 00:18:11,590
thought have we vetted you guys all of

00:18:07,310 --> 00:18:14,300
that okay shift left protection right

00:18:11,590 --> 00:18:17,630
this is the dream this is what we're all

00:18:14,300 --> 00:18:20,300
aiming for this is what we want static

00:18:17,630 --> 00:18:21,970
analysis vulnerability and compliance

00:18:20,300 --> 00:18:24,590
stuff there at the beginning

00:18:21,970 --> 00:18:27,440
machine learning what is it that that's

00:18:24,590 --> 00:18:30,590
meant to do we can automate what that

00:18:27,440 --> 00:18:34,060
container is doing so that regardless of

00:18:30,590 --> 00:18:36,710
what happens if it's a bad actor if it's

00:18:34,060 --> 00:18:38,540
somebody something an unknown exploit

00:18:36,710 --> 00:18:40,640
happens well you know from that

00:18:38,540 --> 00:18:42,830
container everything that's meant to run

00:18:40,640 --> 00:18:43,970
inside the container all the port's that

00:18:42,830 --> 00:18:47,060
are meant to be open inside the

00:18:43,970 --> 00:18:48,710
container you can and obviously twist

00:18:47,060 --> 00:18:50,120
lock makes all this very easy and you

00:18:48,710 --> 00:18:52,430
should buy twist lock but you can

00:18:50,120 --> 00:18:54,260
actually also look and say well what

00:18:52,430 --> 00:18:57,230
activity should happen inside that

00:18:54,260 --> 00:18:59,930
container so now regardless of what

00:18:57,230 --> 00:19:02,000
where that container goes regardless of

00:18:59,930 --> 00:19:04,190
how that container runs whether it's on

00:19:02,000 --> 00:19:06,050
your lovely Cloud Foundry platform it's

00:19:04,190 --> 00:19:08,720
running kubernetes over here whether

00:19:06,050 --> 00:19:10,160
it's actually gone straight into AWS and

00:19:08,720 --> 00:19:11,600
and and they're managed kubernetes

00:19:10,160 --> 00:19:12,980
service or your own little darker

00:19:11,600 --> 00:19:15,110
machine that's running their each

00:19:12,980 --> 00:19:16,760
container is going to do the exact same

00:19:15,110 --> 00:19:19,730
thing it was meant to do and you can

00:19:16,760 --> 00:19:22,250
automate all that learning and that

00:19:19,730 --> 00:19:23,540
gives you then this predictive model

00:19:22,250 --> 00:19:25,940
because we can predict what that

00:19:23,540 --> 00:19:28,520
container is going to do we can take

00:19:25,940 --> 00:19:30,440
that threat intelligence information we

00:19:28,520 --> 00:19:32,180
can combine that together and then we

00:19:30,440 --> 00:19:34,670
know not only what is the container

00:19:32,180 --> 00:19:37,070
going to do but in running containers if

00:19:34,670 --> 00:19:39,410
something comes out of vulnerability is

00:19:37,070 --> 00:19:41,270
found there's no point in just having an

00:19:39,410 --> 00:19:43,280
image scan and say all my images over

00:19:41,270 --> 00:19:45,230
here these ones are green these ones are

00:19:43,280 --> 00:19:47,510
red but actually being able to have that

00:19:45,230 --> 00:19:49,280
immediate feedback back to development

00:19:47,510 --> 00:19:51,350
and this shift left thing here where

00:19:49,280 --> 00:19:54,380
we're saying this vulnerability is

00:19:51,350 --> 00:19:56,330
impacting production it's know straight

00:19:54,380 --> 00:19:58,550
into that pipeline to come back through

00:19:56,330 --> 00:20:01,070
and be fixed it's no longer a case of

00:19:58,550 --> 00:20:02,899
well this CVS here but

00:20:01,070 --> 00:20:05,149
I don't think it impacts us in fact a

00:20:02,899 --> 00:20:07,759
nice a nice one there was going back to

00:20:05,149 --> 00:20:09,710
my being told to look at CVEs I do

00:20:07,759 --> 00:20:12,320
remember looking at a service when I was

00:20:09,710 --> 00:20:14,450
doing stuff with a company in front

00:20:12,320 --> 00:20:15,649
that's obviously I'm looking at looking

00:20:14,450 --> 00:20:17,539
at the different services that were

00:20:15,649 --> 00:20:19,610
running on our Red Hat machines and then

00:20:17,539 --> 00:20:21,559
going I don't know why I've got this

00:20:19,610 --> 00:20:23,419
Bluetooth driver that's running why

00:20:21,559 --> 00:20:25,820
what's this for why is that there and

00:20:23,419 --> 00:20:27,649
that would be this information about

00:20:25,820 --> 00:20:29,509
what's in prod and easily fitting that

00:20:27,649 --> 00:20:32,149
back into dev I keep harping on about

00:20:29,509 --> 00:20:33,649
this but really if we can build this in

00:20:32,149 --> 00:20:35,539
as early as possible and I genuinely

00:20:33,649 --> 00:20:37,429
think the tools are there now to do this

00:20:35,539 --> 00:20:39,950
it's not like before where you would be

00:20:37,429 --> 00:20:41,990
saying well yeah sure by the time we

00:20:39,950 --> 00:20:44,240
have a six-week release cycle and to

00:20:41,990 --> 00:20:45,500
prod so actually if something comes up

00:20:44,240 --> 00:20:47,149
here it'll go into a different

00:20:45,500 --> 00:20:49,070
environment and gah bah bah bah and then

00:20:47,149 --> 00:20:50,990
bundle through and by that point

00:20:49,070 --> 00:20:53,059
actually patching a server is somebody

00:20:50,990 --> 00:20:55,580
else's job and they'll do it every 30

00:20:53,059 --> 00:20:57,320
days after a scan and all this kind of

00:20:55,580 --> 00:21:00,639
stuff we can really bring this through

00:20:57,320 --> 00:21:00,639
and automate that entire process

00:21:00,909 --> 00:21:06,019
questions I've got those things telling

00:21:04,070 --> 00:21:07,820
me I've got nine minutes left so if

00:21:06,019 --> 00:21:09,620
there are any questions I'm happy to

00:21:07,820 --> 00:21:12,019
answer any or you can take the advice of

00:21:09,620 --> 00:21:12,470
the nice lady before me and get more

00:21:12,019 --> 00:21:14,960
coffee

00:21:12,470 --> 00:21:20,360
are there any questions can I can I help

00:21:14,960 --> 00:21:23,240
anybody out with anything did you find

00:21:20,360 --> 00:21:25,009
your chance all right well thank you

00:21:23,240 --> 00:21:28,460
very much for listening if there are any

00:21:25,009 --> 00:21:30,110
questions or anything comes up then my

00:21:28,460 --> 00:21:32,360
details are there please send me emails

00:21:30,110 --> 00:21:34,039
and it's like this send me a tweet tell

00:21:32,360 --> 00:21:35,600
me what's going on in your lives and but

00:21:34,039 --> 00:21:36,470
other than that thank you very much and

00:21:35,600 --> 00:21:37,570
I hope you enjoy the rest of the

00:21:36,470 --> 00:21:42,560
conference

00:21:37,570 --> 00:21:42,560

YouTube URL: https://www.youtube.com/watch?v=UGe-0m_XHBI


