Title: The Cloud Foundry Mullet - Functions at the Front, Containers at the Back - Paul Czarkowski, Pivotal
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	The Cloud Foundry Mullet - Functions at the Front, Containers at the Back - Paul Czarkowski, Pivotal

Paul will introduce the audience to the three platforms in the Cloud Foundry ecosystem for Containers as a Service, Platform as a Service, and Functions as a Service and talk through the difference in concepts and uses cases for each. Paul will then talk through how you can apply business logic and lean practices to evaluate your workloads and determine the best platform to run them on.

While Paul will be talking about the Cloud Foundry ecosystem itself the actual platforms are examples of many options out there and the lessons and practices talked about will apply equally to non Cloud Foundry versions of the three platform archetypes ( CaaS, PaaS, FaaS ).

https://cfseu18.sched.com/event/FRyf/the-cloud-foundry-mullet-functions-at-the-front-containers-at-the-back-paul-czarkowski-pivotal
Captions: 
	00:00:00,000 --> 00:00:05,670
I go out and talk to a lot of people

00:00:02,389 --> 00:00:10,200
developers people in the community

00:00:05,670 --> 00:00:12,690
customers prospects etc and without much

00:00:10,200 --> 00:00:15,000
exception these days they want to talk

00:00:12,690 --> 00:00:16,080
about kubernetes and how they are going

00:00:15,000 --> 00:00:17,640
to do the kubernetes or how they're

00:00:16,080 --> 00:00:20,010
doing the kubernetes and how i can help

00:00:17,640 --> 00:00:22,050
them do the kubernetes and my first

00:00:20,010 --> 00:00:23,760
question are to them as usually so

00:00:22,050 --> 00:00:25,289
that's cool but like what problem are

00:00:23,760 --> 00:00:27,539
you actually trying to solve with the

00:00:25,289 --> 00:00:28,680
kubernetes and usually what happens is

00:00:27,539 --> 00:00:30,420
they just start saying the word

00:00:28,680 --> 00:00:32,279
kubernetes over and over again louder

00:00:30,420 --> 00:00:35,640
and louder because that's what they've

00:00:32,279 --> 00:00:37,559
decided they want to do and so we get

00:00:35,640 --> 00:00:39,629
this thing where kubernetes is this

00:00:37,559 --> 00:00:42,120
decided thing and so now you're starting

00:00:39,629 --> 00:00:44,850
to build problem statements around how

00:00:42,120 --> 00:00:46,590
you get to kubernetes right and so

00:00:44,850 --> 00:00:47,969
you're like you know I'm I'm gonna get

00:00:46,590 --> 00:00:49,890
kubernetes therefore I'm gonna you know

00:00:47,969 --> 00:00:52,350
I'm gonna go to the cloud I'm gonna buy

00:00:49,890 --> 00:00:54,090
new servers I'm gonna migrate all of my

00:00:52,350 --> 00:00:56,699
apps to prove out the value of having

00:00:54,090 --> 00:00:58,500
kubernetes or I got a hire like a team

00:00:56,699 --> 00:01:00,500
with five years of kubernetes experience

00:00:58,500 --> 00:01:04,080
it turns out it's actually quite hard

00:01:00,500 --> 00:01:06,390
and so I this is kind of what I'm doing

00:01:04,080 --> 00:01:08,700
inside but I try not to make this face

00:01:06,390 --> 00:01:10,229
on the outside kind of face palming

00:01:08,700 --> 00:01:13,200
because you don't actually have a

00:01:10,229 --> 00:01:16,770
platform problem but what you've done is

00:01:13,200 --> 00:01:18,240
you've made kubernetes your problem and

00:01:16,770 --> 00:01:20,580
not the solution so now you actually

00:01:18,240 --> 00:01:22,020
like fixing for kubernetes rather than

00:01:20,580 --> 00:01:25,170
fixing for the actual problems you have

00:01:22,020 --> 00:01:27,330
in your org that might warrant you

00:01:25,170 --> 00:01:31,350
actually like developing and using a new

00:01:27,330 --> 00:01:33,000
platform and so I try and refocus what

00:01:31,350 --> 00:01:35,130
they're talking about in terms of what

00:01:33,000 --> 00:01:37,290
their actual problems are so like I have

00:01:35,130 --> 00:01:38,939
a develop developer efficiency problem

00:01:37,290 --> 00:01:40,740
and therefore I want to move to a new

00:01:38,939 --> 00:01:41,970
platform and so I even take communities

00:01:40,740 --> 00:01:43,409
out of the out of the story

00:01:41,970 --> 00:01:45,000
well what kubernetes might be the valid

00:01:43,409 --> 00:01:46,680
answer for them I try and just focus on

00:01:45,000 --> 00:01:48,600
what the actual problems are first right

00:01:46,680 --> 00:01:50,939
so developer efficiency a lot of people

00:01:48,600 --> 00:01:51,990
say productivity but I feel like that

00:01:50,939 --> 00:01:54,030
kind of has a connotation that

00:01:51,990 --> 00:01:55,439
developers are late lazy which is true

00:01:54,030 --> 00:01:58,110
but we shouldn't really point it out

00:01:55,439 --> 00:02:00,990
like to their faces is a developer

00:01:58,110 --> 00:02:02,700
efficiency in operations complexity you

00:02:00,990 --> 00:02:04,770
know security and patching and problem I

00:02:02,700 --> 00:02:06,600
have a toil problem and I think this is

00:02:04,770 --> 00:02:09,000
the one I always try and and end up on

00:02:06,600 --> 00:02:11,160
because like it's really toil it is is

00:02:09,000 --> 00:02:13,980
the issue here and toil is the thing

00:02:11,160 --> 00:02:15,330
that's stopping you from getting value

00:02:13,980 --> 00:02:17,269
in value to the business it's the thing

00:02:15,330 --> 00:02:20,040
that really stops you from getting from

00:02:17,269 --> 00:02:21,299
you know an idea to code to running in

00:02:20,040 --> 00:02:23,760
production because there's a lot of toil

00:02:21,299 --> 00:02:25,950
involved in doing that so you don't have

00:02:23,760 --> 00:02:27,810
a platform problem you have a toil

00:02:25,950 --> 00:02:30,989
problem you have a problem with just

00:02:27,810 --> 00:02:32,989
tons of added extra work involved in

00:02:30,989 --> 00:02:36,900
getting from you know code production

00:02:32,989 --> 00:02:38,190
that being said you know I've said you

00:02:36,900 --> 00:02:38,879
don't have a platform problem but here

00:02:38,190 --> 00:02:42,209
we are we're going to talk about

00:02:38,879 --> 00:02:43,829
platforms so my name is Paul Tchaikovsky

00:02:42,209 --> 00:02:45,959
I should have introduced myself by now

00:02:43,829 --> 00:02:48,450
already and I'm a developer advocate at

00:02:45,959 --> 00:02:50,849
pivotal software and that's a little bit

00:02:48,450 --> 00:02:52,349
weird because I'm not a developer I come

00:02:50,849 --> 00:02:54,060
from an Operations background I think

00:02:52,349 --> 00:02:56,250
I'm supposed to call myself a dev up

00:02:54,060 --> 00:03:00,569
these days but I never really got into

00:02:56,250 --> 00:03:01,709
that as a title but I've spent most of a

00:03:00,569 --> 00:03:03,599
lot of my career

00:03:01,709 --> 00:03:05,579
like building platforms and helping

00:03:03,599 --> 00:03:07,709
people use platforms rather than using

00:03:05,579 --> 00:03:09,420
them myself and often actually failing

00:03:07,709 --> 00:03:12,329
to build platforms that was a big part

00:03:09,420 --> 00:03:14,220
of my life as well failing to do it and

00:03:12,329 --> 00:03:15,420
so I've learned some things and I like

00:03:14,220 --> 00:03:17,760
to share some things I have some

00:03:15,420 --> 00:03:19,790
opinions so we're going to kind of talk

00:03:17,760 --> 00:03:22,609
about platforms like what a platform is

00:03:19,790 --> 00:03:24,840
their various archetypes of platforms

00:03:22,609 --> 00:03:27,359
what we have in the Cloud Foundry

00:03:24,840 --> 00:03:29,579
community and also maybe a little bit of

00:03:27,359 --> 00:03:32,549
what's outside of it try and make some

00:03:29,579 --> 00:03:34,079
sense of it you know I assume everyone

00:03:32,549 --> 00:03:36,269
here has a basic understanding of like

00:03:34,079 --> 00:03:38,819
the major archetypes you know container

00:03:36,269 --> 00:03:41,310
platform verse application platform etc

00:03:38,819 --> 00:03:43,489
but we'll talk about what platforms to

00:03:41,310 --> 00:03:45,720
use for what maybe we might talk about

00:03:43,489 --> 00:03:47,250
you know in what order should you adopt

00:03:45,720 --> 00:03:49,410
them if you're at a large enterprise and

00:03:47,250 --> 00:03:51,239
you've got a lot of people and too much

00:03:49,410 --> 00:03:53,489
work to really just like drop everything

00:03:51,239 --> 00:03:55,380
and go full-on and we'll talk a little

00:03:53,489 --> 00:03:57,299
bit about some digital transformation

00:03:55,380 --> 00:03:58,919
there DevOps concepts because it turns

00:03:57,299 --> 00:04:00,150
out just having a platform doesn't

00:03:58,919 --> 00:04:02,790
actually help you've actually got to use

00:04:00,150 --> 00:04:04,079
it and use it properly so that's the

00:04:02,790 --> 00:04:06,000
goal and we'll see what we get through

00:04:04,079 --> 00:04:08,639
so what is the platform it is a wall of

00:04:06,000 --> 00:04:10,650
text who gives it who cares let's just

00:04:08,639 --> 00:04:12,060
keep it simple so a platform is the

00:04:10,650 --> 00:04:14,819
environment in which a piece of software

00:04:12,060 --> 00:04:16,620
is executed and they abstract away

00:04:14,819 --> 00:04:19,789
complexity to provide a simpler

00:04:16,620 --> 00:04:21,989
interface to that execution environment

00:04:19,789 --> 00:04:23,760
different platforms kind of behave

00:04:21,989 --> 00:04:26,669
differently and have different target

00:04:23,760 --> 00:04:28,050
users in mind so you've got like class

00:04:26,669 --> 00:04:31,020
boundaries really a developer

00:04:28,050 --> 00:04:32,550
focus platform so the abstraction is

00:04:31,020 --> 00:04:34,650
focused on the developer whereas

00:04:32,550 --> 00:04:37,289
kubernetes is kind of more towards being

00:04:34,650 --> 00:04:38,699
an operator platform so it's a lot a lot

00:04:37,289 --> 00:04:40,110
of its abstractions are focused towards

00:04:38,699 --> 00:04:44,909
the operator and running systems rather

00:04:40,110 --> 00:04:46,800
than running apps very quickly in the

00:04:44,909 --> 00:04:49,050
2018 state of DevOps report they

00:04:46,800 --> 00:04:52,190
actually mention platform as a service

00:04:49,050 --> 00:04:54,900
as something that is a an indicator of

00:04:52,190 --> 00:04:56,729
very high performing groups so while a

00:04:54,900 --> 00:04:59,129
platform won't magically make you a

00:04:56,729 --> 00:05:00,780
high-performing company it's certainly

00:04:59,129 --> 00:05:03,750
going to help enable those who are on

00:05:00,780 --> 00:05:04,800
their way to becoming that so and really

00:05:03,750 --> 00:05:09,289
that goes for any of these platforms

00:05:04,800 --> 00:05:09,289
when they use in the correct way

00:05:09,479 --> 00:05:15,360
generally speaking a modern software

00:05:12,300 --> 00:05:17,969
platform provides a restful api and that

00:05:15,360 --> 00:05:20,340
drives compute resources CPU memory disk

00:05:17,969 --> 00:05:21,990
network right it looks like this like

00:05:20,340 --> 00:05:24,629
every platform looks like this Cloud

00:05:21,990 --> 00:05:27,330
Foundry kubernetes Amazon Web Services

00:05:24,629 --> 00:05:29,580
you've got an API and that drives some

00:05:27,330 --> 00:05:31,500
sort of workers which then drives your

00:05:29,580 --> 00:05:33,330
actual physical compute resources or

00:05:31,500 --> 00:05:34,710
virtual compute resources to create an

00:05:33,330 --> 00:05:39,569
execution environment for your code to

00:05:34,710 --> 00:05:41,639
run in my friend Gabe at Microsoft has

00:05:39,569 --> 00:05:43,080
said that every IT team is a platform

00:05:41,639 --> 00:05:45,750
team and that's kind of true because as

00:05:43,080 --> 00:05:47,909
an IT group like my job is to run

00:05:45,750 --> 00:05:49,680
software on servers and a platforms job

00:05:47,909 --> 00:05:51,599
is to run software on servers so we have

00:05:49,680 --> 00:05:54,779
the same goals and so as an IT group

00:05:51,599 --> 00:05:56,909
like we're empowering ourselves by using

00:05:54,779 --> 00:06:02,520
platforms that help us do our jobs and

00:05:56,909 --> 00:06:05,060
help and help our developers have less

00:06:02,520 --> 00:06:07,050
soil and have less toil ourselves

00:06:05,060 --> 00:06:10,229
technically as an IT group you are a

00:06:07,050 --> 00:06:12,599
platform so JIRA is your API and you're

00:06:10,229 --> 00:06:14,879
the your of the workers and so your

00:06:12,599 --> 00:06:16,469
ticket comes in you as a security

00:06:14,879 --> 00:06:17,969
engineer you consume that ticket you do

00:06:16,469 --> 00:06:20,400
a bunch of work through SSH or whatever

00:06:17,969 --> 00:06:22,080
and it's done but you know that's pretty

00:06:20,400 --> 00:06:24,449
inefficient that's what we call a meet

00:06:22,080 --> 00:06:27,150
cloud or a cloud made out of people and

00:06:24,449 --> 00:06:29,669
it you know it's not great and it kind

00:06:27,150 --> 00:06:33,750
of looks like this right it's a this

00:06:29,669 --> 00:06:35,370
massive burning oil fire and it's all

00:06:33,750 --> 00:06:36,419
you can do to try and like contain it

00:06:35,370 --> 00:06:38,490
but it's going to keep burning and

00:06:36,419 --> 00:06:41,160
toilet until the like all the oil runs

00:06:38,490 --> 00:06:42,900
out and there's some dude like

00:06:41,160 --> 00:06:44,880
under the under these just squirting

00:06:42,900 --> 00:06:46,710
more oil up into the fire so it's a

00:06:44,880 --> 00:06:48,030
fight you're never gonna win and so this

00:06:46,710 --> 00:06:49,350
way you need to do things like digital

00:06:48,030 --> 00:06:51,780
transformation and you need to start

00:06:49,350 --> 00:06:54,060
adopting DevOps processes to like split

00:06:51,780 --> 00:06:55,920
people away to start focusing on like

00:06:54,060 --> 00:06:58,350
building new platforms utilizing new

00:06:55,920 --> 00:07:01,050
platforms new processes etc so you can

00:06:58,350 --> 00:07:04,200
slowly move things away from being on

00:07:01,050 --> 00:07:05,760
this you know burning platform that is

00:07:04,200 --> 00:07:08,010
probably never going to get better but

00:07:05,760 --> 00:07:09,300
you can slowly like pull pieces of fuel

00:07:08,010 --> 00:07:13,500
away until there's no more fuel for it

00:07:09,300 --> 00:07:16,470
to burn so we kind of have these major

00:07:13,500 --> 00:07:17,880
archetypes of platforms right from the

00:07:16,470 --> 00:07:19,200
hardware platform which I kind of just

00:07:17,880 --> 00:07:21,270
described which is just a bunch of

00:07:19,200 --> 00:07:23,670
people all the way up to like Cloud

00:07:21,270 --> 00:07:26,850
Foundry our application platform or l

00:07:23,670 --> 00:07:29,340
function platform and you basically you

00:07:26,850 --> 00:07:32,010
have this control verse toy thing so at

00:07:29,340 --> 00:07:34,380
the at the far end of it the the right

00:07:32,010 --> 00:07:35,850
hand side you've got like a lot of toil

00:07:34,380 --> 00:07:37,860
but you also have a ton of control like

00:07:35,850 --> 00:07:39,960
you can run any kind of app you want on

00:07:37,860 --> 00:07:42,600
a bare-metal server where as you come

00:07:39,960 --> 00:07:44,910
towards the left here or the right

00:07:42,600 --> 00:07:47,820
you're right I should say you're giving

00:07:44,910 --> 00:07:50,460
up control but you're gaining like

00:07:47,820 --> 00:07:53,370
efficiency so if you go all the way to

00:07:50,460 --> 00:07:55,680
say or if you're doing a your plat your

00:07:53,370 --> 00:07:57,570
application platform you're writing 12

00:07:55,680 --> 00:07:59,760
factor ish apps right so you're writing

00:07:57,570 --> 00:08:01,800
very opinionated apps in order for them

00:07:59,760 --> 00:08:03,840
to function correctly inside of that

00:08:01,800 --> 00:08:06,900
platform so you know you're giving up

00:08:03,840 --> 00:08:10,530
you had that push and pull of control

00:08:06,900 --> 00:08:13,800
Versa fishin C and so you know not every

00:08:10,530 --> 00:08:15,180
app is going to run in a function

00:08:13,800 --> 00:08:17,010
platform like a service platform right

00:08:15,180 --> 00:08:20,370
and so you have to figure out where in

00:08:17,010 --> 00:08:24,000
that control versatile area you need to

00:08:20,370 --> 00:08:25,200
focus at running a given app and every

00:08:24,000 --> 00:08:28,050
app is going to be a little bit

00:08:25,200 --> 00:08:30,570
different the platform's kind of build

00:08:28,050 --> 00:08:32,190
on that I mean it's good platforms are

00:08:30,570 --> 00:08:33,390
like onions or ogres right they have

00:08:32,190 --> 00:08:36,560
layers and they build on top of each

00:08:33,390 --> 00:08:38,550
other when Google created their google

00:08:36,560 --> 00:08:41,340
kubernetes engine they didn't create a

00:08:38,550 --> 00:08:43,410
new iOS they use their Google compute is

00:08:41,340 --> 00:08:44,550
and lay it on top of it right and so

00:08:43,410 --> 00:08:45,750
when you're building platforms are

00:08:44,550 --> 00:08:48,180
looking for platforms you want the

00:08:45,750 --> 00:08:51,150
platforms that like just focus at one

00:08:48,180 --> 00:08:52,620
like area of this of the layers and

00:08:51,150 --> 00:08:54,510
don't try and like blur the boundaries

00:08:52,620 --> 00:08:56,100
and a build on top of one of

00:08:54,510 --> 00:09:00,060
so don't try and reinvent the entire

00:08:56,100 --> 00:09:03,750
thing there's a ton of platforms at each

00:09:00,060 --> 00:09:04,949
layer more than I can talk about and

00:09:03,750 --> 00:09:06,930
more that I really care about so I'm

00:09:04,949 --> 00:09:08,550
going to focus on the things that the

00:09:06,930 --> 00:09:11,250
Cloud Foundry foundation and pivotal

00:09:08,550 --> 00:09:13,320
bring to the table and so you kind of

00:09:11,250 --> 00:09:16,589
have Bosch as this delineating mark of

00:09:13,320 --> 00:09:18,329
like above the above the infrastructure

00:09:16,589 --> 00:09:21,089
and below the infrastructure so below

00:09:18,329 --> 00:09:23,820
the infrastructure I mean yes they're

00:09:21,089 --> 00:09:26,130
platforms but you know either

00:09:23,820 --> 00:09:26,730
you should have a cloud provider run it

00:09:26,130 --> 00:09:28,800
or you should have like an

00:09:26,730 --> 00:09:31,829
infrastructure team run it and you use

00:09:28,800 --> 00:09:33,149
Bosch as the delineation to then say

00:09:31,829 --> 00:09:35,310
okay these are the platforms that we're

00:09:33,149 --> 00:09:36,389
really going to focus our our end users

00:09:35,310 --> 00:09:37,800
at because either these are the ones are

00:09:36,389 --> 00:09:41,190
going to provide the efficiency and

00:09:37,800 --> 00:09:44,040
having Bush as that installer and guide

00:09:41,190 --> 00:09:45,870
line also means that we have a lot of

00:09:44,040 --> 00:09:49,170
choices around the actual like

00:09:45,870 --> 00:09:51,839
infrastructure platform that we use I'm

00:09:49,170 --> 00:09:53,850
sure you've all seen this from Anzhi

00:09:51,839 --> 00:09:55,740
from three years ago I think it was a CF

00:09:53,850 --> 00:09:58,380
push haiku and this kind of really

00:09:55,740 --> 00:10:00,180
demonstrates that toil aspect of like

00:09:58,380 --> 00:10:02,100
how much work you have to do to deploy

00:10:00,180 --> 00:10:03,779
an application in cloud foundry so like

00:10:02,100 --> 00:10:05,940
here's my source code run it on the

00:10:03,779 --> 00:10:07,740
cloud for me I don't care how so clearly

00:10:05,940 --> 00:10:09,870
I don't have to do a ton of work but

00:10:07,740 --> 00:10:11,910
also I don't have an opinion so I have

00:10:09,870 --> 00:10:13,610
to like do it however the cloud or

00:10:11,910 --> 00:10:16,649
however cloud foundry wants me to do it

00:10:13,610 --> 00:10:18,480
whereas with kubernetes it's kind of a

00:10:16,649 --> 00:10:20,519
longer poem like here's my source code

00:10:18,480 --> 00:10:21,779
I built it into a container just now

00:10:20,519 --> 00:10:23,670
please run it for me

00:10:21,779 --> 00:10:25,740
this jammer will tell it it will tell

00:10:23,670 --> 00:10:27,839
you how so clearly I have to build an

00:10:25,740 --> 00:10:29,519
image and I have to provide some form of

00:10:27,839 --> 00:10:31,380
instructions and then kubernetes will

00:10:29,519 --> 00:10:33,510
run it for me so that's definitely more

00:10:31,380 --> 00:10:35,490
toil but it's also giving me more

00:10:33,510 --> 00:10:37,380
control because I have a deployment

00:10:35,490 --> 00:10:39,209
manifest which is telling kubernetes how

00:10:37,380 --> 00:10:40,949
to run it for me it's a kind of a way to

00:10:39,209 --> 00:10:42,720
compare them and then serverless like

00:10:40,949 --> 00:10:45,209
here's a function just run it every time

00:10:42,720 --> 00:10:48,360
you see of an event right and that's not

00:10:45,209 --> 00:10:51,959
entirely accurate because the the

00:10:48,360 --> 00:10:54,000
function or service stuff is so new like

00:10:51,959 --> 00:10:56,279
some you just give them your source code

00:10:54,000 --> 00:10:57,600
or just a snippet of function some you

00:10:56,279 --> 00:10:59,310
will actually have to build a container

00:10:57,600 --> 00:11:00,779
and ship it up there so the toil

00:10:59,310 --> 00:11:04,230
involved in service it's not quite

00:11:00,779 --> 00:11:05,730
settled yet but I don't think apart from

00:11:04,230 --> 00:11:07,510
a few unicorns not a lot of us are

00:11:05,730 --> 00:11:10,990
actually using service

00:11:07,510 --> 00:11:12,190
yet anyway so obviously pivotal cloud

00:11:10,990 --> 00:11:14,260
found well obviously Cloud Foundry

00:11:12,190 --> 00:11:16,930
foundation and then pivotal are around

00:11:14,260 --> 00:11:19,180
and we kind of have an opinionated set

00:11:16,930 --> 00:11:21,880
of platforms originally had just Cloud

00:11:19,180 --> 00:11:23,230
Foundry the changing landscape said to

00:11:21,880 --> 00:11:26,020
us hey you need more than that

00:11:23,230 --> 00:11:29,290
so the Cloud Foundry contain at runtime

00:11:26,020 --> 00:11:30,850
was born and then pivotal PKS the

00:11:29,290 --> 00:11:33,730
kubernetes service wrapped around that

00:11:30,850 --> 00:11:36,340
was born and then there's also the the

00:11:33,730 --> 00:11:39,490
function stuff so RIF and Kay native etc

00:11:36,340 --> 00:11:41,260
sort of bubbling up and you know we'll

00:11:39,490 --> 00:11:44,290
see some sort of pivotal service around

00:11:41,260 --> 00:11:45,580
that at some point and then pivotal also

00:11:44,290 --> 00:11:47,560
brings this like services marketplace

00:11:45,580 --> 00:11:49,270
which kind of brings like the ability to

00:11:47,560 --> 00:11:51,970
run databases and smothers and some

00:11:49,270 --> 00:11:53,530
other like shared services and then

00:11:51,970 --> 00:11:55,090
they're kind of like a loosely coupled

00:11:53,530 --> 00:11:57,430
group of platforms so you can have one

00:11:55,090 --> 00:11:58,900
of them you can have all of them but

00:11:57,430 --> 00:12:00,580
they're loosely coupled in the fact they

00:11:58,900 --> 00:12:02,800
share some services like share like some

00:12:00,580 --> 00:12:07,810
networking they share security models

00:12:02,800 --> 00:12:08,950
they share networking etc and they're

00:12:07,810 --> 00:12:11,770
all kind of installed and managed by

00:12:08,950 --> 00:12:14,620
Bosh and you know pivotal adds a bunch

00:12:11,770 --> 00:12:16,570
of operation of day to operations to

00:12:14,620 --> 00:12:17,950
doing it but it's all available open

00:12:16,570 --> 00:12:19,990
source as well so you don't need to pay

00:12:17,950 --> 00:12:21,790
pivotal money if you don't want to and

00:12:19,990 --> 00:12:23,670
also basha allows you to then run it on

00:12:21,790 --> 00:12:26,890
pretty much any cloud you want

00:12:23,670 --> 00:12:28,540
and so with sort of Cloud Foundry and

00:12:26,890 --> 00:12:30,610
Bosh and pivotal taking on a lot of that

00:12:28,540 --> 00:12:32,500
operational burden it allows you to

00:12:30,610 --> 00:12:34,570
focus on like adding value to the

00:12:32,500 --> 00:12:37,060
business and figuring out like where to

00:12:34,570 --> 00:12:39,580
run what apps to bring the most value to

00:12:37,060 --> 00:12:41,260
make that app as efficient as it can in

00:12:39,580 --> 00:12:43,450
the state it's in and you can talk about

00:12:41,260 --> 00:12:45,750
should I modernize the app should I lift

00:12:43,450 --> 00:12:48,280
and shift it and that'll help shape you

00:12:45,750 --> 00:12:50,290
your decision on which of the platform's

00:12:48,280 --> 00:12:51,940
you're going to run it on and then you

00:12:50,290 --> 00:12:56,470
know where you're going to get value out

00:12:51,940 --> 00:12:58,750
of running it so where do we start

00:12:56,470 --> 00:13:01,300
you know a lot of folks are still at

00:12:58,750 --> 00:13:03,070
that I basically still just have VMware

00:13:01,300 --> 00:13:04,900
startup not VM I still just have

00:13:03,070 --> 00:13:07,720
hardware or VMware but I'm not really

00:13:04,900 --> 00:13:09,700
managing it in any major way and so I'm

00:13:07,720 --> 00:13:12,490
still the cloud I'm still the meat cloud

00:13:09,700 --> 00:13:15,670
right and so I try to talk them about

00:13:12,490 --> 00:13:16,780
how we can start adopting the different

00:13:15,670 --> 00:13:19,870
platforms in a way that makes sense

00:13:16,780 --> 00:13:20,770
across the business folks like across

00:13:19,870 --> 00:13:21,520
the business should still be

00:13:20,770 --> 00:13:24,040
experimenting

00:13:21,520 --> 00:13:26,020
with like all levels of platforms inside

00:13:24,040 --> 00:13:28,570
Cloud Foundry and out I'm exact hey you

00:13:26,020 --> 00:13:29,920
learn how you move to new things but as

00:13:28,570 --> 00:13:31,030
a business you kind of need to make some

00:13:29,920 --> 00:13:33,130
decisions about where you're gonna be

00:13:31,030 --> 00:13:35,620
focusing and so I have some thoughts

00:13:33,130 --> 00:13:37,480
around that obviously you have hardware

00:13:35,620 --> 00:13:40,660
or you have some sort of unmanaged VM

00:13:37,480 --> 00:13:42,790
infrastructure KVM or basic vmware or

00:13:40,660 --> 00:13:44,200
something like that and there's a good

00:13:42,790 --> 00:13:45,400
chance you're still gonna have hardware

00:13:44,200 --> 00:13:47,140
around at the end of this unless you're

00:13:45,400 --> 00:13:50,380
pushing everything to the cloud which is

00:13:47,140 --> 00:13:51,760
another big ball of wax problem that may

00:13:50,380 --> 00:13:54,550
not may or may not be a good idea

00:13:51,760 --> 00:13:55,390
depending on your company but you know

00:13:54,550 --> 00:13:57,520
you're still going to probably have

00:13:55,390 --> 00:13:58,630
hardware so you probably get if if

00:13:57,520 --> 00:14:00,340
you're old enough you're gonna have some

00:13:58,630 --> 00:14:01,780
mainframes lying around and you're

00:14:00,340 --> 00:14:04,590
probably not going to push your COBOL up

00:14:01,780 --> 00:14:06,730
to amazon's lambda service any time soon

00:14:04,590 --> 00:14:08,980
you're going to have large storage

00:14:06,730 --> 00:14:12,070
clusters like SEF HDFS you're gonna have

00:14:08,980 --> 00:14:13,900
databases like ms sequel Oracle RAC

00:14:12,070 --> 00:14:15,700
clusters stuff like that that you're not

00:14:13,900 --> 00:14:17,260
going to move them up to like a platform

00:14:15,700 --> 00:14:19,420
anytime soon either so there's plenty of

00:14:17,260 --> 00:14:21,310
reasons to have hardware around you can

00:14:19,420 --> 00:14:23,710
get better and smarter at running that

00:14:21,310 --> 00:14:25,540
hardware utilizing like config

00:14:23,710 --> 00:14:27,340
management and some of the other stuff

00:14:25,540 --> 00:14:29,980
that we sort of developed in like the

00:14:27,340 --> 00:14:32,230
the new cloud world that work really

00:14:29,980 --> 00:14:34,300
well on like bare metal hardware as well

00:14:32,230 --> 00:14:35,740
so you can still be improving that side

00:14:34,300 --> 00:14:38,110
of things and you've still got to run

00:14:35,740 --> 00:14:40,420
like VMware or something locally anyway

00:14:38,110 --> 00:14:42,640
if you want to start running other other

00:14:40,420 --> 00:14:43,810
platforms right and then of course

00:14:42,640 --> 00:14:44,500
you've got some sort of software

00:14:43,810 --> 00:14:46,360
as-a-service

00:14:44,500 --> 00:14:47,770
so it's kind of it's a level of

00:14:46,360 --> 00:14:50,380
abstraction it may not be a platform

00:14:47,770 --> 00:14:52,690
itself but it's good to have that like

00:14:50,380 --> 00:14:54,400
concur github salesforce all that sort

00:14:52,690 --> 00:14:56,580
of stuff like you wouldn't get gained

00:14:54,400 --> 00:14:58,660
any value of trying to run like

00:14:56,580 --> 00:15:00,550
salesforce locally if you could which

00:14:58,660 --> 00:15:02,770
you can but there would be no reason to

00:15:00,550 --> 00:15:06,370
do that so kind of think about like

00:15:02,770 --> 00:15:08,200
strategically grow your sass usage based

00:15:06,370 --> 00:15:09,340
on like commoditized services that it

00:15:08,200 --> 00:15:12,220
doesn't make a lot of sense for you to

00:15:09,340 --> 00:15:14,470
run and then like which platform do you

00:15:12,220 --> 00:15:17,100
actually start adopting I usually

00:15:14,470 --> 00:15:18,820
recommend you kind of jump to both an

00:15:17,100 --> 00:15:21,150
application platform and an

00:15:18,820 --> 00:15:23,620
infrastructure platform so like VMware

00:15:21,150 --> 00:15:25,150
managed by Bosh kind of counts as an

00:15:23,620 --> 00:15:28,180
infrastructure platform and then Cloud

00:15:25,150 --> 00:15:30,220
Foundry or Amazon or Google compute as

00:15:28,180 --> 00:15:32,470
your infrastructure platform and Cloud

00:15:30,220 --> 00:15:35,140
Foundry is your application platform and

00:15:32,470 --> 00:15:37,480
there's a few reasons for that obviously

00:15:35,140 --> 00:15:38,890
almost any application platform requires

00:15:37,480 --> 00:15:41,680
an infrastructure platform to run on

00:15:38,890 --> 00:15:43,660
Cloud Foundry certainly does is he gonna

00:15:41,680 --> 00:15:46,680
need that anyway but also they do have

00:15:43,660 --> 00:15:49,959
that different focus at different users

00:15:46,680 --> 00:15:52,170
so your application focus is definitely

00:15:49,959 --> 00:15:55,779
focused at your application developers

00:15:52,170 --> 00:15:57,760
and your infrastructure platform is

00:15:55,779 --> 00:16:00,160
really focused at your operators UCS

00:15:57,760 --> 00:16:01,899
admins your DevOps a--'s etc so you know

00:16:00,160 --> 00:16:04,990
you're you know the very least you're

00:16:01,899 --> 00:16:06,880
taking any new and you know maybe some

00:16:04,990 --> 00:16:08,709
modernized apps and you're pushing them

00:16:06,880 --> 00:16:10,600
up to Cloud Foundry or application

00:16:08,709 --> 00:16:13,450
platform and then you're also at the

00:16:10,600 --> 00:16:15,910
operations level you're retooling going

00:16:13,450 --> 00:16:17,860
from like run books in wiki pages to

00:16:15,910 --> 00:16:19,810
like infrastructure as code using

00:16:17,860 --> 00:16:21,820
terraform config management using chef

00:16:19,810 --> 00:16:23,680
like whatever to start making your

00:16:21,820 --> 00:16:25,510
infrastructure platform really strong

00:16:23,680 --> 00:16:27,970
and really getting use out of that and

00:16:25,510 --> 00:16:29,500
reducing the toil of like requesting

00:16:27,970 --> 00:16:32,260
hardware and getting at least basic

00:16:29,500 --> 00:16:34,390
software installed and running and you

00:16:32,260 --> 00:16:36,279
know developers should also be like

00:16:34,390 --> 00:16:39,399
something from like SCP jar files around

00:16:36,279 --> 00:16:43,360
or even worse practices and being able

00:16:39,399 --> 00:16:44,860
to do like a CF push type workflow and

00:16:43,360 --> 00:16:46,329
probably also going to move to like

00:16:44,860 --> 00:16:47,829
modern languages and frameworks at the

00:16:46,329 --> 00:16:50,230
same time so you'll get more go Lane

00:16:47,829 --> 00:16:54,190
you'll get more spring boot you'll do

00:16:50,230 --> 00:16:56,110
some reactive stuff so you're gonna

00:16:54,190 --> 00:16:57,459
spend some time here because not only

00:16:56,110 --> 00:16:58,480
you're doing that but you also start

00:16:57,459 --> 00:17:01,060
need to start thinking about building

00:16:58,480 --> 00:17:03,820
like a support platform or I like to

00:17:01,060 --> 00:17:05,350
call it an SRE platform and that's where

00:17:03,820 --> 00:17:07,959
you've got like a bunch of communal

00:17:05,350 --> 00:17:09,549
tooling that your operations teams and

00:17:07,959 --> 00:17:12,790
your developer teams will use for like

00:17:09,549 --> 00:17:16,870
monitoring logging telemetry access

00:17:12,790 --> 00:17:19,000
control event queue stuff like that even

00:17:16,870 --> 00:17:21,549
like credential management like password

00:17:19,000 --> 00:17:25,569
management secret management all that

00:17:21,549 --> 00:17:28,600
sort of stuff and so you like Prometheus

00:17:25,569 --> 00:17:30,250
sensu bastian bastian servers are wealth

00:17:28,600 --> 00:17:31,750
servers and all that sort of stuff will

00:17:30,250 --> 00:17:33,880
sort of build that to be like an SRE

00:17:31,750 --> 00:17:35,260
platform off to the side that help

00:17:33,880 --> 00:17:37,750
provide the tooling to your operators

00:17:35,260 --> 00:17:39,549
developers and also endpoints for your

00:17:37,750 --> 00:17:43,450
other platforms to send logs monitoring

00:17:39,549 --> 00:17:46,000
that sort of stuff and don't don't be

00:17:43,450 --> 00:17:47,169
afraid to use sap services for that so

00:17:46,000 --> 00:17:48,580
like if you if you don't if you're not

00:17:47,169 --> 00:17:50,649
very good at monitoring

00:17:48,580 --> 00:17:52,539
like get data dog or you know one of

00:17:50,649 --> 00:17:55,149
those external SAS companies to help you

00:17:52,539 --> 00:17:56,350
out because you know they're probably

00:17:55,149 --> 00:17:58,360
much better at running monitoring

00:17:56,350 --> 00:17:59,919
infrastructure than you were so if you

00:17:58,360 --> 00:18:02,440
if you're willing to pay the price that

00:17:59,919 --> 00:18:04,120
they charge because you'd rather focus

00:18:02,440 --> 00:18:06,700
on other value-added things then that's

00:18:04,120 --> 00:18:08,260
definitely a good thing to look at so

00:18:06,700 --> 00:18:09,370
don't feel like you have to run any or

00:18:08,260 --> 00:18:11,140
all of this yourself

00:18:09,370 --> 00:18:14,080
I just depends on what comfort level you

00:18:11,140 --> 00:18:17,890
are at getting partners in to help you

00:18:14,080 --> 00:18:19,419
do that sort of thing and then like we

00:18:17,890 --> 00:18:21,399
all know now that the world is moving to

00:18:19,419 --> 00:18:23,350
containers like any platforms were

00:18:21,399 --> 00:18:24,850
adopting for this foreseeable future

00:18:23,350 --> 00:18:27,190
will be platter will be container based

00:18:24,850 --> 00:18:29,169
and so start thinking about containers

00:18:27,190 --> 00:18:31,389
for like basically all levels of your

00:18:29,169 --> 00:18:33,669
infrastructure applications in your

00:18:31,389 --> 00:18:35,830
platforms because they're a good general

00:18:33,669 --> 00:18:40,690
solution for that build package ship and

00:18:35,830 --> 00:18:42,279
run and of course do it where it makes

00:18:40,690 --> 00:18:44,620
sense so don't start running all your my

00:18:42,279 --> 00:18:46,120
sequel servers in in containers but

00:18:44,620 --> 00:18:47,889
you're gonna have a lot of applications

00:18:46,120 --> 00:18:49,269
that may not may not go into cloud

00:18:47,889 --> 00:18:50,380
foundry but are still going to be really

00:18:49,269 --> 00:18:53,500
good for running in containers and

00:18:50,380 --> 00:18:55,480
running containers say on VMs or in bare

00:18:53,500 --> 00:18:57,250
metal are still gonna get you start

00:18:55,480 --> 00:18:59,260
exercising those muscles and learning

00:18:57,250 --> 00:19:02,320
how to actually operationalize

00:18:59,260 --> 00:19:03,820
containers and figure out how you get

00:19:02,320 --> 00:19:06,429
logging and monitoring and stuff from

00:19:03,820 --> 00:19:09,159
containers so it's worthwhile doing and

00:19:06,429 --> 00:19:11,679
if you're using config management which

00:19:09,159 --> 00:19:14,139
you should for your you know VMs

00:19:11,679 --> 00:19:16,960
hardware it's tough it's just as easy

00:19:14,139 --> 00:19:19,659
that it's just as easy to like grab

00:19:16,960 --> 00:19:22,389
download and run a docker image as it is

00:19:19,659 --> 00:19:24,130
an apt package or a jar file so you know

00:19:22,389 --> 00:19:26,980
you might as well start doing that and

00:19:24,130 --> 00:19:30,220
have that kind of unified build build

00:19:26,980 --> 00:19:31,779
package ship run sort of tooling and

00:19:30,220 --> 00:19:34,169
then so if you want that then obviously

00:19:31,779 --> 00:19:37,360
you need to have some sort of image

00:19:34,169 --> 00:19:40,330
docker registry as part of your sre

00:19:37,360 --> 00:19:42,039
platform so something like one of the

00:19:40,330 --> 00:19:45,039
enterprise ones like harbor or Quay they

00:19:42,039 --> 00:19:48,070
do not just the registry but they also

00:19:45,039 --> 00:19:49,510
do like security scanning allow for

00:19:48,070 --> 00:19:51,279
signing of images and stuff like that

00:19:49,510 --> 00:19:53,309
which is important because if we don't

00:19:51,279 --> 00:19:55,600
bring security into doing this with us

00:19:53,309 --> 00:19:57,250
they're going to remain that sort of the

00:19:55,600 --> 00:19:59,830
peak folks at the end that just always

00:19:57,250 --> 00:20:03,840
say no to us so we want to drag them in

00:19:59,830 --> 00:20:03,840
to like be part of this process with us

00:20:04,130 --> 00:20:08,180
and then as well as the sre platform you

00:20:06,830 --> 00:20:09,560
should be building some sort of

00:20:08,180 --> 00:20:11,270
continuous integration hopefully you

00:20:09,560 --> 00:20:12,890
already have this stuff but you should

00:20:11,270 --> 00:20:14,810
be banking so like solidifying it and

00:20:12,890 --> 00:20:17,180
building it as like a communal set of

00:20:14,810 --> 00:20:19,400
tooling that anyone that deploys

00:20:17,180 --> 00:20:21,320
applications in your oil can start to

00:20:19,400 --> 00:20:22,940
use and so really it's going to become

00:20:21,320 --> 00:20:24,320
part of your SME platform or whatever

00:20:22,940 --> 00:20:26,270
you call it but I'm calling it out

00:20:24,320 --> 00:20:27,980
separately just to make sure it's called

00:20:26,270 --> 00:20:30,260
out so you're gonna have a tool like

00:20:27,980 --> 00:20:32,450
concours or Jenkins and it's going to

00:20:30,260 --> 00:20:34,790
run tests and build artifacts every time

00:20:32,450 --> 00:20:36,350
you make a code change and also every

00:20:34,790 --> 00:20:37,910
time you make changes to like your

00:20:36,350 --> 00:20:39,290
infrastructure as code or your config

00:20:37,910 --> 00:20:40,610
management because remember we have a

00:20:39,290 --> 00:20:42,080
bunch of different platforms we're

00:20:40,610 --> 00:20:44,000
dealing with here

00:20:42,080 --> 00:20:45,920
and these tests again should include

00:20:44,000 --> 00:20:47,690
like security and compliance testing as

00:20:45,920 --> 00:20:49,400
well as like your unit test code

00:20:47,690 --> 00:20:51,470
coverage and stuff because again it's

00:20:49,400 --> 00:20:53,840
important to bring security into the end

00:20:51,470 --> 00:20:55,880
of the conversation and you know start

00:20:53,840 --> 00:20:56,990
talking about like dev SEC ops or

00:20:55,880 --> 00:20:58,700
whatever it is you need to talk about to

00:20:56,990 --> 00:21:01,990
get them involved because the further

00:20:58,700 --> 00:21:04,340
left we take them in like the

00:21:01,990 --> 00:21:06,020
development process the more integrator

00:21:04,340 --> 00:21:08,780
they're going to be and the more secure

00:21:06,020 --> 00:21:11,030
your software is going to be and also

00:21:08,780 --> 00:21:12,140
the less they'll be saying no right at

00:21:11,030 --> 00:21:15,380
the end when you're trying to get like a

00:21:12,140 --> 00:21:17,720
last-minute deploy out right and you

00:21:15,380 --> 00:21:19,400
can't really do effective continuous

00:21:17,720 --> 00:21:21,410
delivery or continuous deployment unless

00:21:19,400 --> 00:21:25,400
security is actually involved in that

00:21:21,410 --> 00:21:27,860
pipeline and so once you've got C under

00:21:25,400 --> 00:21:30,170
control CI under control you can start

00:21:27,860 --> 00:21:32,360
doing looking at continuous delivery you

00:21:30,170 --> 00:21:35,600
can use the same tool as CI or you can

00:21:32,360 --> 00:21:39,110
use a more continuous delivery tool like

00:21:35,600 --> 00:21:41,300
spinnaker and again changes either code

00:21:39,110 --> 00:21:44,090
or config management should be

00:21:41,300 --> 00:21:46,280
deployable to any environments at the

00:21:44,090 --> 00:21:48,590
press of a button and then based on your

00:21:46,280 --> 00:21:49,910
confidence in what you're doing on the

00:21:48,590 --> 00:21:51,830
risk you willing to accept for the

00:21:49,910 --> 00:21:53,360
individual apps you can then automate

00:21:51,830 --> 00:21:55,160
that entire thing so it's continual

00:21:53,360 --> 00:21:57,200
deployment but like that's like

00:21:55,160 --> 00:21:58,520
eventually you want to get things to

00:21:57,200 --> 00:22:00,110
continual deployment but just getting

00:21:58,520 --> 00:22:02,570
things to the point where you can

00:22:00,110 --> 00:22:05,390
deliver code to production any time you

00:22:02,570 --> 00:22:09,380
press a button is a very like it's a big

00:22:05,390 --> 00:22:13,190
step and it's super important and then

00:22:09,380 --> 00:22:16,080
so yeah and so now you have CIN CD so

00:22:13,190 --> 00:22:20,039
every new app and every new app

00:22:16,080 --> 00:22:21,029
every map every app you modernize to one

00:22:20,039 --> 00:22:22,470
of your new platforms

00:22:21,029 --> 00:22:25,320
you should put through some sort of

00:22:22,470 --> 00:22:27,690
pipeline that is basically you put code

00:22:25,320 --> 00:22:29,580
in and you get a running application out

00:22:27,690 --> 00:22:32,190
the other side there's some example

00:22:29,580 --> 00:22:33,929
tools up along the pipeline but use

00:22:32,190 --> 00:22:35,190
whatever you feel you need and then

00:22:33,929 --> 00:22:37,200
you've got that sort of faucet at the

00:22:35,190 --> 00:22:39,120
end so if you want to do like continuous

00:22:37,200 --> 00:22:40,980
deployment and let it deploy itself go

00:22:39,120 --> 00:22:42,870
for it otherwise you can have you know a

00:22:40,980 --> 00:22:45,090
human actually as the gate to press the

00:22:42,870 --> 00:22:46,649
button to do the deployment again based

00:22:45,090 --> 00:22:49,289
on just your confidence in your

00:22:46,649 --> 00:22:51,600
automation the risk you willing to

00:22:49,289 --> 00:22:53,279
accept the type of compliance you're

00:22:51,600 --> 00:22:56,669
under for the type of industry you're in

00:22:53,279 --> 00:22:58,860
that sort of stuff so you've got a good

00:22:56,669 --> 00:23:00,659
handle now on your like infrastructure

00:22:58,860 --> 00:23:04,980
platform when your application platform

00:23:00,659 --> 00:23:07,049
so like VMware or Amazon and your Cloud

00:23:04,980 --> 00:23:08,460
Foundry you can

00:23:07,049 --> 00:23:10,740
you've got more applications running on

00:23:08,460 --> 00:23:13,139
those than not all at least all your new

00:23:10,740 --> 00:23:15,720
applications are going towards them

00:23:13,139 --> 00:23:18,510
and everything you've got more stuff

00:23:15,720 --> 00:23:20,070
going through see ICD than not you can

00:23:18,510 --> 00:23:21,330
start looking at like the next platform

00:23:20,070 --> 00:23:23,639
which I think is your container

00:23:21,330 --> 00:23:24,960
Orchestrator or container platform and

00:23:23,639 --> 00:23:26,639
that's probably going to be kubernetes

00:23:24,960 --> 00:23:29,940
because that's winning the container

00:23:26,639 --> 00:23:31,649
wars and again so it's again back to

00:23:29,940 --> 00:23:34,289
being kind of an operator play so you

00:23:31,649 --> 00:23:36,269
can have operators basically building

00:23:34,289 --> 00:23:38,880
manifests helm charts and maybe even

00:23:36,269 --> 00:23:40,710
kubernetes operators to run and manage

00:23:38,880 --> 00:23:42,360
services inside of kubernetes to make it

00:23:40,710 --> 00:23:44,220
really easy to like if you need a

00:23:42,360 --> 00:23:46,350
elasticsearch cluster or a Cassandra

00:23:44,220 --> 00:23:49,440
cluster for an app you might want to run

00:23:46,350 --> 00:23:51,299
those in kubernetes and have a fairly

00:23:49,440 --> 00:23:53,120
easy way to deploy those anytime a new

00:23:51,299 --> 00:23:55,350
app is deployed that needs those things

00:23:53,120 --> 00:23:57,330
and then as well as that it gives you a

00:23:55,350 --> 00:23:59,490
good opportunity to start looking at

00:23:57,330 --> 00:24:01,529
lift and shifting some of your legacy

00:23:59,490 --> 00:24:02,460
applications that aren't twelve factor

00:24:01,529 --> 00:24:04,980
and are probably never going to be

00:24:02,460 --> 00:24:07,679
twelve factor but I still reasonably

00:24:04,980 --> 00:24:10,080
able to be containerized and deployed in

00:24:07,679 --> 00:24:11,880
a container Orchestrator I know I can

00:24:10,080 --> 00:24:14,580
run any old garbage in a container

00:24:11,880 --> 00:24:16,620
platform I maybe I shouldn't run all

00:24:14,580 --> 00:24:18,059
kinds of garbage in one but I can and so

00:24:16,620 --> 00:24:20,010
you're gonna play that like is it worth

00:24:18,059 --> 00:24:22,919
moving like what's the value of the app

00:24:20,010 --> 00:24:24,600
and stuff and there's like a bunch of

00:24:22,919 --> 00:24:26,700
methodologies around doing that there's

00:24:24,600 --> 00:24:28,620
the Gartner time methodology where you

00:24:26,700 --> 00:24:30,020
basically look at the the technical

00:24:28,620 --> 00:24:31,730
quality of the app verse

00:24:30,020 --> 00:24:34,220
the business value of the app and you

00:24:31,730 --> 00:24:36,110
put it on a on a on a on a plot graph

00:24:34,220 --> 00:24:37,700
and based on where it is you're like I'm

00:24:36,110 --> 00:24:39,590
gonna modernize it I'm gonna I'm gonna

00:24:37,700 --> 00:24:41,870
just leave it as it is I'm gonna lift

00:24:39,590 --> 00:24:43,730
and shift it or whatever and so that's a

00:24:41,870 --> 00:24:45,830
really good way of determining where you

00:24:43,730 --> 00:24:48,110
should be running your apps so that's

00:24:45,830 --> 00:24:49,700
okay now you've got a container platform

00:24:48,110 --> 00:24:51,620
you're starting to use it and then you

00:24:49,700 --> 00:24:54,260
can really start looking at your service

00:24:51,620 --> 00:24:56,660
or function platform and that's where

00:24:54,260 --> 00:24:58,610
you're like you know doing like event

00:24:56,660 --> 00:25:00,230
with event-driven functions that are

00:24:58,610 --> 00:25:02,690
tied together with some sort of business

00:25:00,230 --> 00:25:04,700
logic you got like an event queue and

00:25:02,690 --> 00:25:06,830
the business object managing how

00:25:04,700 --> 00:25:09,560
information flows between different

00:25:06,830 --> 00:25:12,260
different functions or service apps and

00:25:09,560 --> 00:25:15,350
so that's a fairly large leap and not

00:25:12,260 --> 00:25:18,350
not every app is going to be good at

00:25:15,350 --> 00:25:20,330
running in that way and so like don't

00:25:18,350 --> 00:25:21,350
don't rush into trying to do serval it's

00:25:20,330 --> 00:25:23,270
like if you have a couple of teams that

00:25:21,350 --> 00:25:24,980
are like real unicorn teams throw on

00:25:23,270 --> 00:25:26,450
like sent him out to lander and start

00:25:24,980 --> 00:25:29,060
doing stuff there but don't make it a

00:25:26,450 --> 00:25:30,590
business focus because the look the

00:25:29,060 --> 00:25:32,330
initial business value is all going to

00:25:30,590 --> 00:25:34,730
be at the like infrastructure platform

00:25:32,330 --> 00:25:40,220
an application platform if you're still

00:25:34,730 --> 00:25:42,620
fairly you know getting started and then

00:25:40,220 --> 00:25:43,730
so there's no point having a platform

00:25:42,620 --> 00:25:45,290
like there's no point just deploying a

00:25:43,730 --> 00:25:46,700
bunch of platforms and like going okay

00:25:45,290 --> 00:25:49,280
we're done right you actually actually

00:25:46,700 --> 00:25:50,720
have to use those platforms and use them

00:25:49,280 --> 00:25:53,000
effectively and so you need to go

00:25:50,720 --> 00:25:53,750
through some sort of digital

00:25:53,000 --> 00:25:55,340
transformation

00:25:53,750 --> 00:26:00,320
you still need to start adopting a

00:25:55,340 --> 00:26:02,780
DevOps culture and it's hard it's a lot

00:26:00,320 --> 00:26:03,500
of work and it is gonna get worse before

00:26:02,780 --> 00:26:05,720
it gets better

00:26:03,500 --> 00:26:07,850
so this is the J curve of transformation

00:26:05,720 --> 00:26:10,730
from the state of DevOps report which is

00:26:07,850 --> 00:26:13,490
by dr. Niccole for scrum and her

00:26:10,730 --> 00:26:15,770
co-authors and you know you can see

00:26:13,490 --> 00:26:18,110
clearly here you know you have some some

00:26:15,770 --> 00:26:19,580
early wins and things look good and then

00:26:18,110 --> 00:26:22,820
you start like trying to push it across

00:26:19,580 --> 00:26:24,650
like a larger array of applications and

00:26:22,820 --> 00:26:26,480
stuff and it gets gets quite difficult

00:26:24,650 --> 00:26:28,040
you've got a lot of issues with you

00:26:26,480 --> 00:26:30,310
writing a lot more tests you have to get

00:26:28,040 --> 00:26:33,200
those tests written you've got a lot of

00:26:30,310 --> 00:26:34,730
technical debt to deal with etc but

00:26:33,200 --> 00:26:36,560
eventually you'll if you stick with it

00:26:34,730 --> 00:26:38,830
you climb out of that sort of that that

00:26:36,560 --> 00:26:43,280
trough and you start actually really

00:26:38,830 --> 00:26:43,960
receive the value and so and you'll

00:26:43,280 --> 00:26:46,300
start to see there

00:26:43,960 --> 00:26:47,920
turn but you need to actually make sure

00:26:46,300 --> 00:26:49,810
you are getting that returns you need to

00:26:47,920 --> 00:26:51,190
be measuring things which means you need

00:26:49,810 --> 00:26:53,860
to actually figure out what you're

00:26:51,190 --> 00:26:58,570
trying to achieve with your platform and

00:26:53,860 --> 00:27:00,940
with your digital transformation so DBS

00:26:58,570 --> 00:27:03,250
Bank is the largest bank in Southeast

00:27:00,940 --> 00:27:06,040
Asia and it's bring one platform just a

00:27:03,250 --> 00:27:07,150
couple of weeks ago sue Chu so I hope I

00:27:06,040 --> 00:27:08,470
said that right

00:27:07,150 --> 00:27:10,690
we talked about their digital

00:27:08,470 --> 00:27:13,060
transformation the URL for the talk is

00:27:10,690 --> 00:27:14,380
up there and it was really really really

00:27:13,060 --> 00:27:16,780
good talk I think it was probably the

00:27:14,380 --> 00:27:19,660
best of the keynotes of the whole of the

00:27:16,780 --> 00:27:21,910
whole event and she kind of had this

00:27:19,660 --> 00:27:22,540
slide which was about setting their

00:27:21,910 --> 00:27:25,290
goals

00:27:22,540 --> 00:27:27,580
so they had goals around like agility

00:27:25,290 --> 00:27:30,460
user user experience so like the

00:27:27,580 --> 00:27:34,060
usability of their applications on the

00:27:30,460 --> 00:27:36,160
quality so like security controls and

00:27:34,060 --> 00:27:37,570
then develop a productivity or developer

00:27:36,160 --> 00:27:40,090
efficiency as I would prefer to say

00:27:37,570 --> 00:27:42,460
right so they had these goals in line in

00:27:40,090 --> 00:27:44,080
mind and then so they then would figure

00:27:42,460 --> 00:27:46,360
out ways to measure for these things so

00:27:44,080 --> 00:27:47,290
as they started Reap platforming as they

00:27:46,360 --> 00:27:48,940
started going through the digital

00:27:47,290 --> 00:27:50,260
transformation they could see that they

00:27:48,940 --> 00:27:51,640
were actually getting value they were

00:27:50,260 --> 00:27:53,070
actually getting a return on the

00:27:51,640 --> 00:27:55,690
investment they were putting into this

00:27:53,070 --> 00:27:57,390
you certainly don't do this to save

00:27:55,690 --> 00:27:59,970
money especially not at first

00:27:57,390 --> 00:28:02,770
platforms are not cheap either through

00:27:59,970 --> 00:28:05,590
licensing or through just sheer people

00:28:02,770 --> 00:28:07,180
time and so you know don't think you're

00:28:05,590 --> 00:28:09,400
gonna adopt a platform and like in six

00:28:07,180 --> 00:28:10,840
months time be saving money maybe in a

00:28:09,400 --> 00:28:12,340
couple of years time when things are

00:28:10,840 --> 00:28:16,450
really rock solid on it you'll be saving

00:28:12,340 --> 00:28:17,680
money but certainly not initially and

00:28:16,450 --> 00:28:19,260
then of course the second word and

00:28:17,680 --> 00:28:20,800
digital transformation is

00:28:19,260 --> 00:28:23,590
transformations you have to actually

00:28:20,800 --> 00:28:26,020
change and you kind of need to almost

00:28:23,590 --> 00:28:28,900
rebuild your organization focused around

00:28:26,020 --> 00:28:32,350
the the contracts and abstractions that

00:28:28,900 --> 00:28:34,540
you want your platforms to rely on to to

00:28:32,350 --> 00:28:36,160
be around right and then you're going to

00:28:34,540 --> 00:28:37,900
build engineering teams at each of these

00:28:36,160 --> 00:28:41,500
levels and get it out of their way and

00:28:37,900 --> 00:28:43,000
let them engineer and then those folks

00:28:41,500 --> 00:28:46,960
you want them to basically build a paved

00:28:43,000 --> 00:28:49,270
road that your app development teams can

00:28:46,960 --> 00:28:51,370
like follow that road and get services

00:28:49,270 --> 00:28:54,370
like logging and monitoring telemetry

00:28:51,370 --> 00:28:56,470
and whatever and basically that that

00:28:54,370 --> 00:28:57,910
helps remove that whole thing of shadow

00:28:56,470 --> 00:28:59,710
IT like if you if you

00:28:57,910 --> 00:29:01,240
platform is the best option they're not

00:28:59,710 --> 00:29:02,410
going to try and go and use their you

00:29:01,240 --> 00:29:05,020
know corporate credit card to use

00:29:02,410 --> 00:29:06,910
something else but you also need to let

00:29:05,020 --> 00:29:08,680
them do other things as well like if

00:29:06,910 --> 00:29:10,750
they want to build an experiment outside

00:29:08,680 --> 00:29:13,000
of this like set of platforms you've

00:29:10,750 --> 00:29:14,800
built you should let them they just lose

00:29:13,000 --> 00:29:16,420
access to this paved road and they lose

00:29:14,800 --> 00:29:19,180
access to all these these things you're

00:29:16,420 --> 00:29:21,040
doing for them and so it's you know in

00:29:19,180 --> 00:29:22,540
their best interest to follow that paved

00:29:21,040 --> 00:29:24,670
road and that's kind of the Netflix

00:29:22,540 --> 00:29:26,500
model they're allowed to do whatever the

00:29:24,670 --> 00:29:28,750
hell they want but most people at

00:29:26,500 --> 00:29:30,730
Netflix follow that that paved road and

00:29:28,750 --> 00:29:33,640
use like spinnaker and use all of the

00:29:30,730 --> 00:29:34,810
tooling in involved in that to stick

00:29:33,640 --> 00:29:40,240
with their and get kind of all that's

00:29:34,810 --> 00:29:42,550
all that really good stuff for free yeah

00:29:40,240 --> 00:29:44,740
and so you're gonna reap like change

00:29:42,550 --> 00:29:46,390
your business you're gonna like we pivot

00:29:44,740 --> 00:29:48,070
all we've seen a lot of success where we

00:29:46,390 --> 00:29:49,060
have like build an infrastructure team

00:29:48,070 --> 00:29:51,040
that are really focused on your

00:29:49,060 --> 00:29:53,650
infrastructure and are building some

00:29:51,040 --> 00:29:55,270
form of API layers or whatever up to the

00:29:53,650 --> 00:29:57,280
rest of the business and then you have a

00:29:55,270 --> 00:29:59,980
platform team that utilized that to

00:29:57,280 --> 00:30:01,420
start to build out your platforms but

00:29:59,980 --> 00:30:02,770
also to build out your shared services

00:30:01,420 --> 00:30:04,680
like your SOA platform like I was

00:30:02,770 --> 00:30:07,990
talking about so like messaging

00:30:04,680 --> 00:30:09,760
credentials certificates secrets

00:30:07,990 --> 00:30:11,710
middleware all that sort of stuff a

00:30:09,760 --> 00:30:14,680
platform team sort of takes on that and

00:30:11,710 --> 00:30:15,940
builds abstractions for those things for

00:30:14,680 --> 00:30:17,710
the actual developers to do so the

00:30:15,940 --> 00:30:19,930
developers are just focused on like

00:30:17,710 --> 00:30:22,270
taking an idea putting into code and

00:30:19,930 --> 00:30:23,680
getting that ship to production without

00:30:22,270 --> 00:30:25,810
having to worry about all those extra

00:30:23,680 --> 00:30:28,330
things and so you sort of build teams

00:30:25,810 --> 00:30:30,460
around that rather than just having like

00:30:28,330 --> 00:30:32,230
one big IT group one big whatever group

00:30:30,460 --> 00:30:33,970
and that that has worked really well

00:30:32,230 --> 00:30:39,310
with us working with some of our

00:30:33,970 --> 00:30:41,350
customers and and whatnot and then as

00:30:39,310 --> 00:30:43,510
you start adopting platforms you always

00:30:41,350 --> 00:30:46,330
want to have an eye to moving things up

00:30:43,510 --> 00:30:50,200
the stack like strategically the further

00:30:46,330 --> 00:30:52,660
up the stack the more efficiency you get

00:30:50,200 --> 00:30:54,250
out of it and therefore the more value

00:30:52,660 --> 00:30:55,750
you get out of it so as you're going

00:30:54,250 --> 00:30:57,520
through you can have your current state

00:30:55,750 --> 00:30:59,170
and have a future state start thinking

00:30:57,520 --> 00:31:01,570
about like what percentage of what times

00:30:59,170 --> 00:31:02,620
of apps you want running where and

00:31:01,570 --> 00:31:03,970
you're going to do that based on the

00:31:02,620 --> 00:31:06,190
value they're bringing to the business

00:31:03,970 --> 00:31:10,330
their technical quality and a bunch of

00:31:06,190 --> 00:31:11,770
other stuff obviously new apps should

00:31:10,330 --> 00:31:13,150
immediately go straight to

00:31:11,770 --> 00:31:15,130
you know either they Application

00:31:13,150 --> 00:31:18,340
Platform Cloud Foundry or if you have

00:31:15,130 --> 00:31:20,830
one already a service platform and then

00:31:18,340 --> 00:31:23,320
as you like start lifting shifting apps

00:31:20,830 --> 00:31:25,150
up the stack start modernizing apps up

00:31:23,320 --> 00:31:26,890
the stack and start moving things up the

00:31:25,150 --> 00:31:28,770
stack so you have as little as possible

00:31:26,890 --> 00:31:32,710
running in the hardware and and

00:31:28,770 --> 00:31:34,450
infrastructure platforms you can also

00:31:32,710 --> 00:31:37,000
look at like what technology is using

00:31:34,450 --> 00:31:39,520
for a given app now first what do I want

00:31:37,000 --> 00:31:41,380
to use on them so like I have a bunch of

00:31:39,520 --> 00:31:42,700
WebLogic and WebSphere stuff that's

00:31:41,380 --> 00:31:45,220
probably gonna be pretty good to run in

00:31:42,700 --> 00:31:47,170
in Cloud Foundry right whereas we have

00:31:45,220 --> 00:31:49,330
like some all the stuff that's being

00:31:47,170 --> 00:31:50,710
managed by like share for puppet that

00:31:49,330 --> 00:31:52,990
might be a really good target to look at

00:31:50,710 --> 00:31:54,520
your container platform so it's another

00:31:52,990 --> 00:31:55,690
way of taking look kind of looking at

00:31:54,520 --> 00:31:58,900
your apps instead of doing a gut check

00:31:55,690 --> 00:32:06,280
of like what platform might this best

00:31:58,900 --> 00:32:08,050
run on back to DBS Bank like you can

00:32:06,280 --> 00:32:09,370
adopt a platform and you can start start

00:32:08,050 --> 00:32:11,380
to get value from that fairly quickly

00:32:09,370 --> 00:32:12,730
but your actual true digital

00:32:11,380 --> 00:32:16,300
transformation to get your entire

00:32:12,730 --> 00:32:18,490
organization getting that value is going

00:32:16,300 --> 00:32:19,750
to take some time DBS Bank took like

00:32:18,490 --> 00:32:23,470
four years to get from where they were

00:32:19,750 --> 00:32:24,940
to like where they are now which is you

00:32:23,470 --> 00:32:26,410
know they're really you're using Cloud

00:32:24,940 --> 00:32:28,780
Foundry in a really good way they're

00:32:26,410 --> 00:32:31,000
doing a lot of CI CD but it's like

00:32:28,780 --> 00:32:32,620
there's no end to this like part of the

00:32:31,000 --> 00:32:34,450
whole thing is like it's all about

00:32:32,620 --> 00:32:36,520
continuous improvement so it's not like

00:32:34,450 --> 00:32:38,950
you like okay I've installed Cloud

00:32:36,520 --> 00:32:40,900
Foundry I'm using a CI CD platform I'm

00:32:38,950 --> 00:32:42,670
done there's always some some room to

00:32:40,900 --> 00:32:45,460
improve right but you do certainly have

00:32:42,670 --> 00:32:47,860
like a I'm I'm really bad at this too

00:32:45,460 --> 00:32:50,140
I'm pretty good at this as like as a box

00:32:47,860 --> 00:32:52,120
out time turns out it took about four

00:32:50,140 --> 00:32:53,920
years for DBS but they're a very large

00:32:52,120 --> 00:32:56,290
bank you know heavily regulated industry

00:32:53,920 --> 00:32:58,510
so it would make sense that it would

00:32:56,290 --> 00:33:00,070
take longer for them then maybe someone

00:32:58,510 --> 00:33:01,900
have a smaller business or a less

00:33:00,070 --> 00:33:03,610
regulated business so you might be able

00:33:01,900 --> 00:33:05,590
to get a fair chunk of the way through a

00:33:03,610 --> 00:33:07,270
digital transformation in a year in a

00:33:05,590 --> 00:33:09,910
year or two or even less if you're a

00:33:07,270 --> 00:33:12,820
fairly small organization and then if

00:33:09,910 --> 00:33:14,620
you if you use utilize tooling and

00:33:12,820 --> 00:33:16,600
partners to help you build and run

00:33:14,620 --> 00:33:19,270
platforms and help you and help you

00:33:16,600 --> 00:33:20,680
learn how to actually write software and

00:33:19,270 --> 00:33:22,600
modernize software to use that platforms

00:33:20,680 --> 00:33:24,750
that will just help to accelerate you as

00:33:22,600 --> 00:33:24,750
well

00:33:24,899 --> 00:33:31,539
digital transformation does provide

00:33:28,419 --> 00:33:33,509
proven ROI pivitol has any number of

00:33:31,539 --> 00:33:36,850
anecdotes we can tell you about

00:33:33,509 --> 00:33:38,499
customers and people we've helped sort

00:33:36,850 --> 00:33:40,539
of go through digital transformation I

00:33:38,499 --> 00:33:42,700
start doing you know cloud native

00:33:40,539 --> 00:33:43,929
development and the returns they're

00:33:42,700 --> 00:33:47,320
getting from that and the values they've

00:33:43,929 --> 00:33:49,629
gotten from that if you read accelerates

00:33:47,320 --> 00:33:52,450
by again by dr. Niccole for scrum and

00:33:49,629 --> 00:33:54,970
her co-authors the DevOps the yearly

00:33:52,450 --> 00:33:57,220
DevOps report and there's another a lot

00:33:54,970 --> 00:33:59,320
of other places that give good solid

00:33:57,220 --> 00:34:00,940
anecdotes on people that have gone

00:33:59,320 --> 00:34:03,279
through some sort of you know DevOps

00:34:00,940 --> 00:34:07,029
culture shift or digital transformation

00:34:03,279 --> 00:34:08,530
and have proven like business like value

00:34:07,029 --> 00:34:10,990
out of it has proven that it's actually

00:34:08,530 --> 00:34:13,300
increased their bottom line and they're

00:34:10,990 --> 00:34:14,740
actually you know making more money

00:34:13,300 --> 00:34:19,270
because they've gone through such a

00:34:14,740 --> 00:34:21,220
transformation at pivotal so you want to

00:34:19,270 --> 00:34:23,559
like measure these things and you want

00:34:21,220 --> 00:34:25,000
to actually graph these things so before

00:34:23,559 --> 00:34:26,829
you even start replac forming an

00:34:25,000 --> 00:34:28,720
application you want to measure where

00:34:26,829 --> 00:34:30,730
it's at and then watch what happens to

00:34:28,720 --> 00:34:32,919
those measurements as yury platform as

00:34:30,730 --> 00:34:35,770
you modernize and as you optimize them

00:34:32,919 --> 00:34:38,079
for a given platform a pivotal we talked

00:34:35,770 --> 00:34:41,589
talked about the 5s is so like security

00:34:38,079 --> 00:34:43,359
speed scalability stability and savings

00:34:41,589 --> 00:34:46,720
and so if you're mapping all of those

00:34:43,359 --> 00:34:49,599
things for your apps you'll as you start

00:34:46,720 --> 00:34:51,460
to what reef platform them on tree

00:34:49,599 --> 00:34:53,919
platform them and modernize them you'll

00:34:51,460 --> 00:34:55,720
definitely see improvements there if you

00:34:53,919 --> 00:34:58,380
don't then stop and focus on another app

00:34:55,720 --> 00:35:00,369
right you do want to get some early wins

00:34:58,380 --> 00:35:01,900
and you want you really want to show

00:35:00,369 --> 00:35:03,069
this value to the business because

00:35:01,900 --> 00:35:04,599
that's how you get the rest of the

00:35:03,069 --> 00:35:06,190
business to adopt it because generally

00:35:04,599 --> 00:35:07,960
speaking like the digital transformation

00:35:06,190 --> 00:35:10,809
will start especially in a larger will

00:35:07,960 --> 00:35:13,599
start in like one one one group right

00:35:10,809 --> 00:35:16,030
and then you you need to get people

00:35:13,599 --> 00:35:18,640
above you directors people at sea level

00:35:16,030 --> 00:35:20,319
to become like evangelists and advocates

00:35:18,640 --> 00:35:22,270
for the way you're doing that things and

00:35:20,319 --> 00:35:23,500
the way you do that is you prove to them

00:35:22,270 --> 00:35:24,069
that you're actually making the money

00:35:23,500 --> 00:35:25,450
right

00:35:24,069 --> 00:35:27,400
not just saving the money but actually

00:35:25,450 --> 00:35:29,109
making them money and then they'll very

00:35:27,400 --> 00:35:30,579
quickly say to the rest of the organizer

00:35:29,109 --> 00:35:33,059
and he all need to get on this train and

00:35:30,579 --> 00:35:36,630
he will need to do that so measure it

00:35:33,059 --> 00:35:39,490
create objectives and measure those

00:35:36,630 --> 00:35:41,410
measurements against the objectives and

00:35:39,490 --> 00:35:44,350
prove that you're actually creating that

00:35:41,410 --> 00:35:47,950
value and adding that value so that is

00:35:44,350 --> 00:35:51,130
it how are we doing for time we probably

00:35:47,950 --> 00:35:54,670
have time for questions and answers so

00:35:51,130 --> 00:35:56,470
if we do have questions we have a mic if

00:35:54,670 --> 00:36:00,690
we don't have questions we can break for

00:35:56,470 --> 00:36:00,690

YouTube URL: https://www.youtube.com/watch?v=hWN9MdLSgCI


