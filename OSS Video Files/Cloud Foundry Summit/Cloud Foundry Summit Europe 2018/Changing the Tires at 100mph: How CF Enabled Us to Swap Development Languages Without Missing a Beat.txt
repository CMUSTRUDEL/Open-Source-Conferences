Title: Changing the Tires at 100mph: How CF Enabled Us to Swap Development Languages Without Missing a Beat
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Changing the Tires at 100mph: How CF Enabled Us to Swap Development Languages Without Missing a Beat - Anouska Streets, Fiserv

We’ve all heard the microservices hype: how small independent polyglot services enable rapid and sustainable delivery of digital products and business value; how architectural and technological decisions previously baked into an application can now be deferred and changed with ease; and how Cloud Foundry is the optimised, opinionated platform for operating those services in production on Day Two and beyond. But what happens when Day Two comes and you need to migrate all of your existing services from one language and framework to another, without impacting production operations?

Join Anouska Streets as she discusses the highs and lows, trials and tribulations she faced when her FinKit Engineering team migrated their entire running microservice-based system from one language to another, with the business demanding zero downtime, and zero impact to either the client services running on the platform or the end consumers of those services. She’ll describe the patterns and approaches they used for this migration, the challenges they faced, and the techniques they used to overcome them. Did they manage it? Join us to find out!

https://cfseu18.sched.com/event/FRzE/changing-the-tires-at-100mph-how-cf-enabled-us-to-swap-development-languages-without-missing-a-beat-anouska-streets-fiserv
Captions: 
	00:00:00,030 --> 00:00:05,670
good afternoon it's quite a long way

00:00:04,440 --> 00:00:10,769
down there there are people down there I

00:00:05,670 --> 00:00:13,230
think yes hello I hope you had a nice

00:00:10,769 --> 00:00:18,800
lunch and you're feeling all nice and

00:00:13,230 --> 00:00:23,400
full not too sleepy you're gonna be

00:00:18,800 --> 00:00:24,570
scintillated now by my talk I would just

00:00:23,400 --> 00:00:28,560
like to say you know there are a number

00:00:24,570 --> 00:00:31,109
of really amazing tracks at this summit

00:00:28,560 --> 00:00:34,050
and a number of fantastic speakers and I

00:00:31,109 --> 00:00:36,390
think you know the choices is vast so I

00:00:34,050 --> 00:00:39,170
do appreciate you you know you've made a

00:00:36,390 --> 00:00:41,610
choice to come in and listen to me talk

00:00:39,170 --> 00:00:43,500
this afternoon and so thank you I

00:00:41,610 --> 00:00:47,250
appreciate it and I hope you get

00:00:43,500 --> 00:00:53,030
something out of it I'm going to talk

00:00:47,250 --> 00:00:58,020
about how we at Fiserv and think it

00:00:53,030 --> 00:00:59,940
migrated from one set of development

00:00:58,020 --> 00:01:04,199
language and framework to another one

00:00:59,940 --> 00:01:09,740
and I apologized to our American friends

00:01:04,199 --> 00:01:12,330
for the spelling of tires I also

00:01:09,740 --> 00:01:14,640
apologized to our continental European

00:01:12,330 --> 00:01:17,759
friends for the miles per hour reference

00:01:14,640 --> 00:01:20,210
we're British and we kind of just sit

00:01:17,759 --> 00:01:24,090
somewhere in the middle of everything

00:01:20,210 --> 00:01:28,650
so who hears no spice if anybody

00:01:24,090 --> 00:01:31,799
familiar with myself yeah I just I just

00:01:28,650 --> 00:01:34,680
in case no one came I bought an entire

00:01:31,799 --> 00:01:39,450
posse if I serve Ian's with me so I'd

00:01:34,680 --> 00:01:43,399
have somebody to talk to so if I serve

00:01:39,450 --> 00:01:46,590
are pretty large financial services

00:01:43,399 --> 00:01:49,079
organization operating largely out of

00:01:46,590 --> 00:01:52,290
the US although we do have significant

00:01:49,079 --> 00:01:56,630
presence worldwide about 24,000

00:01:52,290 --> 00:01:59,040
associates and about 12,000 customers so

00:01:56,630 --> 00:02:04,170
the scale of what we're doing is pretty

00:01:59,040 --> 00:02:06,750
big I think it's fair to say that we all

00:02:04,170 --> 00:02:08,729
exist as companies to serve our

00:02:06,750 --> 00:02:11,069
customers the lifeblood of what we do is

00:02:08,729 --> 00:02:13,500
our customers and I think it's quite

00:02:11,069 --> 00:02:18,500
clear that right now

00:02:13,500 --> 00:02:22,590
the relentless marching forward of

00:02:18,500 --> 00:02:25,200
technology is driving consumer choice

00:02:22,590 --> 00:02:27,210
and I think Abby made a great point this

00:02:25,200 --> 00:02:29,040
morning you know she changed her bank

00:02:27,210 --> 00:02:30,390
she you know that is not a small thing

00:02:29,040 --> 00:02:32,700
to do right

00:02:30,390 --> 00:02:35,100
I am so dissatisfied with the service

00:02:32,700 --> 00:02:36,960
I'm getting from my bank I'm going to

00:02:35,100 --> 00:02:38,760
completely okay I'm going to lift

00:02:36,960 --> 00:02:41,670
everything I'm gonna move it some other

00:02:38,760 --> 00:02:44,340
bank that is quite a sobering thought

00:02:41,670 --> 00:02:48,330
as a person who extra financial services

00:02:44,340 --> 00:02:51,900
organization so what we're looking to do

00:02:48,330 --> 00:02:55,830
is to help our customers get what they

00:02:51,900 --> 00:02:57,930
need when they need it and so as an

00:02:55,830 --> 00:02:59,220
enterprise development team and there's

00:02:57,930 --> 00:03:01,140
that somebody provides enterprise

00:02:59,220 --> 00:03:05,040
development teams we have to be able to

00:03:01,140 --> 00:03:07,740
respond to that change but also we have

00:03:05,040 --> 00:03:10,920
to be able to do it in a way that is you

00:03:07,740 --> 00:03:12,870
know is safe and secure and that scale

00:03:10,920 --> 00:03:15,050
and the security piece the compliance

00:03:12,870 --> 00:03:18,200
piece you know financial services

00:03:15,050 --> 00:03:21,000
regulation as you can imagine we are

00:03:18,200 --> 00:03:24,450
constrained by a number of quite

00:03:21,000 --> 00:03:27,150
difficult regulations this all comes

00:03:24,450 --> 00:03:31,709
into play right here and I guess this is

00:03:27,150 --> 00:03:36,090
where think it comes in so hi I'm Alicia

00:03:31,709 --> 00:03:38,550
streets I lead the engineering function

00:03:36,090 --> 00:03:41,550
for think it these are some of our

00:03:38,550 --> 00:03:43,380
number we are all here today and

00:03:41,550 --> 00:03:45,030
tomorrow and more than happy to talk to

00:03:43,380 --> 00:03:50,750
you about anything you want to talk

00:03:45,030 --> 00:03:53,610
about within reason keep it safe and

00:03:50,750 --> 00:03:56,100
basically fin kit is a platform that's

00:03:53,610 --> 00:03:59,310
built upon a Cloud Foundry application

00:03:56,100 --> 00:04:01,950
runtime managed by Bosh which we love in

00:03:59,310 --> 00:04:06,209
case you didn't get that this from this

00:04:01,950 --> 00:04:10,680
morning and which is designed entirely

00:04:06,209 --> 00:04:12,450
around a developer experience a

00:04:10,680 --> 00:04:13,470
frictionless developing experience

00:04:12,450 --> 00:04:15,540
obviously underpinned by all the

00:04:13,470 --> 00:04:17,760
goodness of cloud foundry but we've then

00:04:15,540 --> 00:04:21,000
enhanced that and added a developer

00:04:17,760 --> 00:04:25,140
environment a build tool chain and

00:04:21,000 --> 00:04:27,630
pipeline and some kind of compliance and

00:04:25,140 --> 00:04:29,580
regulatory wrapping around that as well

00:04:27,630 --> 00:04:35,910
which I'll kind of touch on a little bit

00:04:29,580 --> 00:04:38,790
later so there's a bit of it there is a

00:04:35,910 --> 00:04:41,340
little bit of history here and so as

00:04:38,790 --> 00:04:44,100
well as are we provide this platform

00:04:41,340 --> 00:04:45,600
that allows our associates and our

00:04:44,100 --> 00:04:48,810
developers to be able to build really

00:04:45,600 --> 00:04:51,300
quickly but that platform in and of

00:04:48,810 --> 00:04:54,300
itself also needs to be kept current and

00:04:51,300 --> 00:04:55,920
up-to-date and respond to change

00:04:54,300 --> 00:04:58,140
customers want different things

00:04:55,920 --> 00:04:59,250
different features need to exist on the

00:04:58,140 --> 00:05:01,020
platform and we need to be able to

00:04:59,250 --> 00:05:03,810
deliver those in and of itself in a safe

00:05:01,020 --> 00:05:06,000
in a safe way and so over a period of

00:05:03,810 --> 00:05:08,610
times as we've been running the Finca

00:05:06,000 --> 00:05:12,420
project we made some decisions at the

00:05:08,610 --> 00:05:14,670
outset of that which we changed and this

00:05:12,420 --> 00:05:15,720
is one of them and this is how the fact

00:05:14,670 --> 00:05:18,360
there and I'm going to talk to you about

00:05:15,720 --> 00:05:20,940
what we changed and why we changed it

00:05:18,360 --> 00:05:23,970
and importantly how we changed that in a

00:05:20,940 --> 00:05:26,160
way that didn't impact our consumers and

00:05:23,970 --> 00:05:29,180
the way that was in zero downtime and it

00:05:26,160 --> 00:05:33,590
was all underpinned by the Cloud Foundry

00:05:29,180 --> 00:05:39,240
ecosystem that we run upon I want to set

00:05:33,590 --> 00:05:41,280
some house rules okay this is not the

00:05:39,240 --> 00:05:43,680
start of a flame war between two

00:05:41,280 --> 00:05:46,830
languages and two frameworks I'm going

00:05:43,680 --> 00:05:51,930
to tell you what they were so we moved

00:05:46,830 --> 00:05:54,870
from scala and akka to java and spring

00:05:51,930 --> 00:05:56,970
but-- and I'm very comfortable with that

00:05:54,870 --> 00:06:00,450
decision it was the right decision for

00:05:56,970 --> 00:06:01,710
us I completely and utterly appreciate

00:06:00,450 --> 00:06:05,130
there are going to be people out there

00:06:01,710 --> 00:06:06,570
who just love Scala and I can and think

00:06:05,130 --> 00:06:09,330
it's the best thing ever

00:06:06,570 --> 00:06:12,990
why on earth would you want to move from

00:06:09,330 --> 00:06:13,800
Schuyler to Java and spring boots really

00:06:12,990 --> 00:06:15,690
bloated

00:06:13,800 --> 00:06:18,540
it does things I don't want it to do it

00:06:15,690 --> 00:06:24,300
forces yeah I know we haven't quite like

00:06:18,540 --> 00:06:26,340
it and so I get it it's horses for

00:06:24,300 --> 00:06:27,750
courses I use that quite a lot and it

00:06:26,340 --> 00:06:30,090
works for us

00:06:27,750 --> 00:06:33,060
might not work for you but this is not

00:06:30,090 --> 00:06:35,010
about language a language B of x and y

00:06:33,060 --> 00:06:36,720
in this case it's about how we made that

00:06:35,010 --> 00:06:38,310
change and how Cloud Foundry made that

00:06:36,720 --> 00:06:40,460
change I'm more than happy to have a

00:06:38,310 --> 00:06:42,740
conversation with you about why

00:06:40,460 --> 00:06:45,319
you know and we will go into some of

00:06:42,740 --> 00:06:48,650
that but you know we'll be in the booth

00:06:45,319 --> 00:06:51,229
call later on my orange associates over

00:06:48,650 --> 00:06:54,710
there are also available to talk about

00:06:51,229 --> 00:07:01,190
this more than happy to do that over a

00:06:54,710 --> 00:07:03,440
beer it's also not a final and best

00:07:01,190 --> 00:07:05,720
practice architecture for building cloud

00:07:03,440 --> 00:07:10,509
native system I think it's fair to say

00:07:05,720 --> 00:07:14,810
that software engineering is an active

00:07:10,509 --> 00:07:18,320
relentless compromise and so at any

00:07:14,810 --> 00:07:23,360
given point in time your system is in

00:07:18,320 --> 00:07:27,410
some sort of sub optimal wrongness okay

00:07:23,360 --> 00:07:31,789
so what you have to do is kind of build

00:07:27,410 --> 00:07:34,610
a platform that will allow you to change

00:07:31,789 --> 00:07:36,259
it and that's that's what we're all

00:07:34,610 --> 00:07:39,650
about so if think it we're all about

00:07:36,259 --> 00:07:41,630
having a frictionless really pleasurable

00:07:39,650 --> 00:07:42,830
developer experience which is actually

00:07:41,630 --> 00:07:45,500
one of the reasons why we made this

00:07:42,830 --> 00:07:48,259
change but also we were about being able

00:07:45,500 --> 00:07:53,539
to operate that sustainably and reliably

00:07:48,259 --> 00:07:55,220
on day two and beyond and so again there

00:07:53,539 --> 00:07:56,990
might be things that you kind of come up

00:07:55,220 --> 00:07:59,690
and you see I am going to show you some

00:07:56,990 --> 00:08:01,880
boxes and lines you may not agree with

00:07:59,690 --> 00:08:04,400
how we've organized those boxes and

00:08:01,880 --> 00:08:09,080
times that's cool I'm happy to talk

00:08:04,400 --> 00:08:10,940
about it over a bit so what are part of

00:08:09,080 --> 00:08:12,710
this talk I am going to tell you a bit

00:08:10,940 --> 00:08:15,349
about Fink it and what it does it's

00:08:12,710 --> 00:08:18,560
useful context I'm also going to tell

00:08:15,349 --> 00:08:20,000
you why we made the change and I'm going

00:08:18,560 --> 00:08:23,000
to tell you how we made that change with

00:08:20,000 --> 00:08:30,400
zero downtime and what we learned which

00:08:23,000 --> 00:08:30,400
was quite a lot say just check in time

00:08:32,679 --> 00:08:40,219
you all know that right that's that's

00:08:37,069 --> 00:08:43,279
quite familiar I would hope and so this

00:08:40,219 --> 00:08:47,720
is basically lifted from I think a chip

00:08:43,279 --> 00:08:49,309
Childers slide show cheese chip and the

00:08:47,720 --> 00:08:51,079
the kind of box in the middle with the

00:08:49,309 --> 00:08:52,730
light bulb is kind of this is our this

00:08:51,079 --> 00:08:54,410
is our service this is our idea this is

00:08:52,730 --> 00:08:56,389
what we want to build on Cloud Foundry

00:08:54,410 --> 00:08:58,910
and these are kind of not it's not

00:08:56,389 --> 00:09:00,829
complete right so these are the kind of

00:08:58,910 --> 00:09:04,819
core elements of the Cloud Foundry

00:09:00,829 --> 00:09:06,800
platform that we call upon every day as

00:09:04,819 --> 00:09:08,329
developers and probably don't even know

00:09:06,800 --> 00:09:10,369
it and that's kind of the point that's

00:09:08,329 --> 00:09:12,139
kind of why it's so great but to use

00:09:10,369 --> 00:09:15,170
Cloud Foundry as a developer I see

00:09:12,139 --> 00:09:18,110
f.push and I don't have to worry about

00:09:15,170 --> 00:09:20,089
my routing my routing is all taken care

00:09:18,110 --> 00:09:22,249
of for me I don't have to worry about my

00:09:20,089 --> 00:09:24,649
application lifestyle and how my app is

00:09:22,249 --> 00:09:26,660
being staged and managed and I don't

00:09:24,649 --> 00:09:28,459
have to worry about how it's running I

00:09:26,660 --> 00:09:31,910
don't need to worry about the Diego

00:09:28,459 --> 00:09:34,490
cells and how many instances and I don't

00:09:31,910 --> 00:09:36,139
need to worry about if my app is up or

00:09:34,490 --> 00:09:37,549
down because kind of I'm just going to

00:09:36,139 --> 00:09:40,069
it's just going to sort all that stuff

00:09:37,549 --> 00:09:43,129
out for me it's just it takes

00:09:40,069 --> 00:09:44,689
I think Dom Jones gave a really good

00:09:43,129 --> 00:09:47,149
talk actually a couple years ago about

00:09:44,689 --> 00:09:49,339
reducing the boxes about things you need

00:09:47,149 --> 00:09:51,589
to think about when you're a developer

00:09:49,339 --> 00:09:54,259
and I think Cloud Foundry does a

00:09:51,589 --> 00:09:56,509
fantastic job of reducing the cognitive

00:09:54,259 --> 00:09:57,829
load on your developers to kind of you

00:09:56,509 --> 00:10:00,470
know you I only have to think about

00:09:57,829 --> 00:10:03,679
pushing that app and what think it does

00:10:00,470 --> 00:10:07,879
is layer on top of that if I push the

00:10:03,679 --> 00:10:09,799
right button some other kind of

00:10:07,879 --> 00:10:11,749
enhancements and extensions to the

00:10:09,799 --> 00:10:14,569
platform which is specifically built

00:10:11,749 --> 00:10:18,619
around supporting services for financial

00:10:14,569 --> 00:10:22,759
services okay so we have a protection

00:10:18,619 --> 00:10:26,240
layer which kind of manages tokenization

00:10:22,759 --> 00:10:28,189
of sensitive data and so in the EU right

00:10:26,240 --> 00:10:32,499
now we all care quite a lot about gdpr

00:10:28,189 --> 00:10:34,850
it's quite them present but there's also

00:10:32,499 --> 00:10:36,819
PCI and other kind of regulatory

00:10:34,850 --> 00:10:39,499
compliance things that we care about

00:10:36,819 --> 00:10:42,110
which the protection layer helps do it

00:10:39,499 --> 00:10:44,990
us do we also have and we provide out at

00:10:42,110 --> 00:10:46,790
the Box some help around

00:10:44,990 --> 00:10:48,860
identity and we're not talking about

00:10:46,790 --> 00:10:50,720
identity in the kind of uaa terms of

00:10:48,860 --> 00:10:52,940
identity but actually kind of consumer

00:10:50,720 --> 00:10:55,760
identity on to the platform we have a

00:10:52,940 --> 00:10:57,800
kind of federated identity model we also

00:10:55,760 --> 00:10:59,779
provide support around kind of

00:10:57,800 --> 00:11:01,640
multi-tenancy so it's a you know it's a

00:10:59,779 --> 00:11:03,020
fully multi-talented platform so we have

00:11:01,640 --> 00:11:05,390
multiple customers on the same platform

00:11:03,020 --> 00:11:07,880
so we have services around that again

00:11:05,390 --> 00:11:11,029
this is simplified and we have a kind of

00:11:07,880 --> 00:11:15,140
agreement service and below that then

00:11:11,029 --> 00:11:16,580
kind of abstracted interfaces into some

00:11:15,140 --> 00:11:18,140
compliant backing services so an example

00:11:16,580 --> 00:11:23,810
there would be kind of persistence and

00:11:18,140 --> 00:11:26,209
datastore and then with that so none of

00:11:23,810 --> 00:11:30,050
our developers will directly say f.push

00:11:26,209 --> 00:11:32,810
they get push and so they'll get pushed

00:11:30,050 --> 00:11:35,779
into a pipeline which then goes through

00:11:32,810 --> 00:11:39,260
all the various kind of build and test

00:11:35,779 --> 00:11:43,430
and and then finally deploys onto this

00:11:39,260 --> 00:11:46,010
platform now there's also a vagrant

00:11:43,430 --> 00:11:49,220
based developer environment that we have

00:11:46,010 --> 00:11:51,200
that our developers use again just to

00:11:49,220 --> 00:11:53,870
kind of get rid of snowflakes and to get

00:11:51,200 --> 00:11:56,980
rid of any kind of inconsistencies

00:11:53,870 --> 00:11:59,029
around developer development kind of

00:11:56,980 --> 00:12:02,270
experience and so that if someone says

00:11:59,029 --> 00:12:03,890
you know my JVM yeah it's not what you

00:12:02,270 --> 00:12:04,820
know I've got the wrong version the JVM

00:12:03,890 --> 00:12:06,560
it's like well if you've got the wrong

00:12:04,820 --> 00:12:08,089
version everybody's got the wrong vision

00:12:06,560 --> 00:12:09,770
right then if we need to make that

00:12:08,089 --> 00:12:11,870
change we can make that change once and

00:12:09,770 --> 00:12:13,550
put it out every single developer really

00:12:11,870 --> 00:12:17,720
really quickly it's all about

00:12:13,550 --> 00:12:19,670
consistency and and reliability of the

00:12:17,720 --> 00:12:25,490
same at the same experience for every

00:12:19,670 --> 00:12:27,490
developer the services that I've

00:12:25,490 --> 00:12:30,649
highlighted there in green

00:12:27,490 --> 00:12:35,750
we're written in Scala and the akka

00:12:30,649 --> 00:12:37,070
framework the remaining services and

00:12:35,750 --> 00:12:38,390
again I'm not going to go into the

00:12:37,070 --> 00:12:41,149
history of why I don't think it's

00:12:38,390 --> 00:12:43,520
particularly relevant again but I am

00:12:41,149 --> 00:12:44,990
happy to talk about that and then we

00:12:43,520 --> 00:12:47,500
have other services that were built on

00:12:44,990 --> 00:12:51,350
the platform using Java and spring boot

00:12:47,500 --> 00:12:54,829
it kind of worked out that a third-party

00:12:51,350 --> 00:12:57,230
team that we had based out in Romania

00:12:54,829 --> 00:12:59,990
we're rewriting the Scala akka

00:12:57,230 --> 00:13:01,660
services and the Java spring boot

00:12:59,990 --> 00:13:03,800
services will be written from the UK

00:13:01,660 --> 00:13:05,720
what happened over a period of time is

00:13:03,800 --> 00:13:07,790
the relationship with that third party

00:13:05,720 --> 00:13:10,160
kind of petered out as they kind of do

00:13:07,790 --> 00:13:13,070
we had attrition and these services

00:13:10,160 --> 00:13:17,090
slowly started coming back over to the

00:13:13,070 --> 00:13:20,510
UK left with my Java spring boot guys to

00:13:17,090 --> 00:13:24,710
maintain there were a number of

00:13:20,510 --> 00:13:26,000
challenges with that so first of all as

00:13:24,710 --> 00:13:29,120
you can imagine there's a pretty big

00:13:26,000 --> 00:13:31,660
skills gap between yes okay Scala and

00:13:29,120 --> 00:13:34,940
Java they both run on the JVM yay woohoo

00:13:31,660 --> 00:13:36,740
that's about whether I'm okay i can

00:13:34,940 --> 00:13:38,630
write Scala and I can just miss off the

00:13:36,740 --> 00:13:42,110
semicolons and this pretty much you know

00:13:38,630 --> 00:13:43,880
it's fine but the problem is it's it's

00:13:42,110 --> 00:13:46,010
more than that it was the framework as

00:13:43,880 --> 00:13:47,990
well it was the akka framework which it

00:13:46,010 --> 00:13:51,470
was a completely different kind of model

00:13:47,990 --> 00:13:53,450
and having been used to working with the

00:13:51,470 --> 00:13:55,400
the Java and spring boot model that was

00:13:53,450 --> 00:13:58,670
a kind of a quite a big kind of step

00:13:55,400 --> 00:14:01,610
change we did some people on training

00:13:58,670 --> 00:14:03,170
but I think you could all agree that if

00:14:01,610 --> 00:14:05,120
I send you on a five-day training course

00:14:03,170 --> 00:14:07,630
that's not going to make you the you

00:14:05,120 --> 00:14:11,690
know overnight the best scholar

00:14:07,630 --> 00:14:15,410
developer there is out there there was

00:14:11,690 --> 00:14:17,360
some technical conflict so at the time

00:14:15,410 --> 00:14:19,790
and I know this isn't necessarily true

00:14:17,360 --> 00:14:22,670
now but at the time it was actually

00:14:19,790 --> 00:14:25,760
quite difficult to run a cure with Cloud

00:14:22,670 --> 00:14:27,740
Foundry there was some again if we go

00:14:25,760 --> 00:14:29,360
back to that whole reducing boxes thing

00:14:27,740 --> 00:14:31,160
there was some additional cognitive

00:14:29,360 --> 00:14:36,200
overload for the developers to have to

00:14:31,160 --> 00:14:39,860
kind of get through but also we'd had to

00:14:36,200 --> 00:14:41,770
write quite a significant amount of kind

00:14:39,860 --> 00:14:44,270
of middleware

00:14:41,770 --> 00:14:47,180
supports Carla the same way that we were

00:14:44,270 --> 00:14:48,800
able to support Java so spring boot gave

00:14:47,180 --> 00:14:50,960
us a whole ton of stuff that we you know

00:14:48,800 --> 00:14:53,030
that we just used right so we just used

00:14:50,960 --> 00:14:55,850
the bootstrapping and we plugged in

00:14:53,030 --> 00:14:58,220
spring cloud for our eye as layer and

00:14:55,850 --> 00:15:01,430
spring security and it just all just

00:14:58,220 --> 00:15:01,940
worked and none of that was there with

00:15:01,430 --> 00:15:06,380
Scala

00:15:01,940 --> 00:15:07,520
so we had to that was again if you're

00:15:06,380 --> 00:15:08,840
talking about shrinking the boxes this

00:15:07,520 --> 00:15:10,230
was hard and this was something else we

00:15:08,840 --> 00:15:12,780
had to operate and

00:15:10,230 --> 00:15:14,190
look after and then you kind of don't

00:15:12,780 --> 00:15:16,620
you put those two things together and

00:15:14,190 --> 00:15:19,500
you kind of end up with kind of human

00:15:16,620 --> 00:15:23,310
limitations and so you get we had two

00:15:19,500 --> 00:15:25,170
types of developer we had there the

00:15:23,310 --> 00:15:26,790
really keen I'm gone I've got on my

00:15:25,170 --> 00:15:28,770
scholar training course I love it I

00:15:26,790 --> 00:15:31,500
actually embrace this technology I want

00:15:28,770 --> 00:15:33,330
to use this technology and they were yes

00:15:31,500 --> 00:15:35,460
you know that this is cool I'm getting

00:15:33,330 --> 00:15:37,950
to learn something new and they did they

00:15:35,460 --> 00:15:40,890
learnt it the market rates for Skylar

00:15:37,950 --> 00:15:45,570
went through the roof and they left it

00:15:40,890 --> 00:15:50,760
was great not and then you had the other

00:15:45,570 --> 00:15:52,980
side of the of the I really understand

00:15:50,760 --> 00:15:54,300
I'm expert in Java spring babe I'm

00:15:52,980 --> 00:15:55,770
really light right in this and now

00:15:54,300 --> 00:15:57,600
you're asking me to write in this thing

00:15:55,770 --> 00:15:59,850
that makes no sense and actually it's

00:15:57,600 --> 00:16:02,460
fighting against me the way that we're

00:15:59,850 --> 00:16:04,230
using it with a currency F it's not

00:16:02,460 --> 00:16:08,550
helping me it's actually making it

00:16:04,230 --> 00:16:09,930
harder I'm not happy so I've got unhappy

00:16:08,550 --> 00:16:12,570
developers and developers who were

00:16:09,930 --> 00:16:14,430
leaving and when they leave I can't

00:16:12,570 --> 00:16:16,980
replace them because they're you know

00:16:14,430 --> 00:16:20,670
our primary data center

00:16:16,980 --> 00:16:21,870
I'm just taking time is in Cardiff in

00:16:20,670 --> 00:16:24,840
South Wales don't know if anyone's

00:16:21,870 --> 00:16:31,950
familiar with Peter gal Wales amazing

00:16:24,840 --> 00:16:34,260
place come visit they it was hard to

00:16:31,950 --> 00:16:38,010
recruit these people with those with the

00:16:34,260 --> 00:16:39,510
right level of skill so and then there

00:16:38,010 --> 00:16:40,920
was the last thing which was kind of you

00:16:39,510 --> 00:16:43,860
know our platform is all built around

00:16:40,920 --> 00:16:45,690
day to support day to operation and

00:16:43,860 --> 00:16:48,540
making that as easy as possible and

00:16:45,690 --> 00:16:51,360
there was a number of there are a number

00:16:48,540 --> 00:16:53,550
of tooling decisions that we were unable

00:16:51,360 --> 00:16:56,850
to make because Scarlett just simply

00:16:53,550 --> 00:16:58,260
either didn't support them or there were

00:16:56,850 --> 00:16:59,340
third-party products that were available

00:16:58,260 --> 00:17:01,800
on the market but they were

00:16:59,340 --> 00:17:03,300
prohibitively expensive so I'm talking

00:17:01,800 --> 00:17:05,850
about things like just being able to

00:17:03,300 --> 00:17:07,560
scan for licenses right this is really

00:17:05,850 --> 00:17:09,780
important you know in the regulatory

00:17:07,560 --> 00:17:12,120
kind of world that we live in we have to

00:17:09,780 --> 00:17:14,730
be able to scan for licenses you know

00:17:12,120 --> 00:17:15,900
static code analysis was really hard and

00:17:14,730 --> 00:17:18,839
that's something that you get for free

00:17:15,900 --> 00:17:21,150
we've kind of soniku with Java is really

00:17:18,839 --> 00:17:24,240
easy and so

00:17:21,150 --> 00:17:25,770
all of that kind of stuff was was pretty

00:17:24,240 --> 00:17:27,570
hard and so all these four things

00:17:25,770 --> 00:17:29,460
together we're kind of adding up into

00:17:27,570 --> 00:17:32,670
something where the total cost of

00:17:29,460 --> 00:17:34,920
ownership of these services was just too

00:17:32,670 --> 00:17:36,750
high it was and it was obvious and it

00:17:34,920 --> 00:17:38,220
was obvious to us obviously as an

00:17:36,750 --> 00:17:40,260
engineering function but it was obvious

00:17:38,220 --> 00:17:42,600
to our product team as well these

00:17:40,260 --> 00:17:45,200
services if I kind of Wick that these

00:17:42,600 --> 00:17:48,060
services are the kind of services that

00:17:45,200 --> 00:17:49,620
are core to our platform there are

00:17:48,060 --> 00:17:51,900
others but these are kind of caught or

00:17:49,620 --> 00:17:53,520
platformers are they they kind of change

00:17:51,900 --> 00:17:55,140
quite a lot and every time it's like

00:17:53,520 --> 00:17:56,700
yeah we need to make a change the

00:17:55,140 --> 00:17:59,820
identity service okay

00:17:56,700 --> 00:18:03,060
well just wait well you know Bob gets

00:17:59,820 --> 00:18:05,280
his head around the scholar code in that

00:18:03,060 --> 00:18:06,840
and we kind of had this problem where it

00:18:05,280 --> 00:18:09,150
was a vicious circle where developers

00:18:06,840 --> 00:18:11,370
didn't understand the code enhanced the

00:18:09,150 --> 00:18:13,560
service but they didn't properly

00:18:11,370 --> 00:18:15,960
understand it and so it you know this

00:18:13,560 --> 00:18:17,940
had many balls of mud being created all

00:18:15,960 --> 00:18:22,020
over the place and so it was just a mess

00:18:17,940 --> 00:18:24,330
frankly so we said you know what we

00:18:22,020 --> 00:18:26,730
going to do we're going to bin it and

00:18:24,330 --> 00:18:28,860
we're going to write them in Java and

00:18:26,730 --> 00:18:33,390
spring boot but we needed to be able to

00:18:28,860 --> 00:18:36,650
convince Cu management that that was the

00:18:33,390 --> 00:18:39,990
right thing to do that was quite hard

00:18:36,650 --> 00:18:43,650
senior management see something that is

00:18:39,990 --> 00:18:46,170
working that is functionally you know it

00:18:43,650 --> 00:18:47,580
does what it's supposed to do so why on

00:18:46,170 --> 00:18:51,330
earth would I throw that in the bin and

00:18:47,580 --> 00:18:53,280
write it again for no actual functional

00:18:51,330 --> 00:18:58,050
benefit you're just gonna give me

00:18:53,280 --> 00:19:02,400
exactly what I add and for you know for

00:18:58,050 --> 00:19:04,200
what and so what we were able to show is

00:19:02,400 --> 00:19:06,390
that look we write Java spring group

00:19:04,200 --> 00:19:09,350
services and they take us this amount of

00:19:06,390 --> 00:19:11,900
time whenever we come along to write a

00:19:09,350 --> 00:19:14,340
change for the identity service or the

00:19:11,900 --> 00:19:15,720
agreement service taking this dis amount

00:19:14,340 --> 00:19:18,630
of time it was fairly crude but we were

00:19:15,720 --> 00:19:23,250
able to show it's longer right we were

00:19:18,630 --> 00:19:25,080
also able to show that through our

00:19:23,250 --> 00:19:27,060
products owner who was engaged with this

00:19:25,080 --> 00:19:28,890
through this process who was actually

00:19:27,060 --> 00:19:30,510
really supportive as well saying yeah

00:19:28,890 --> 00:19:32,550
actually guys I'm seeing this and so I

00:19:30,510 --> 00:19:34,320
had allies across the business we were

00:19:32,550 --> 00:19:36,360
able to go yeah this is the right

00:19:34,320 --> 00:19:40,279
to do and we got it we got it through

00:19:36,360 --> 00:19:44,490
and they agreed and so what did we do

00:19:40,279 --> 00:19:47,630
so who's familiar with crime Martin

00:19:44,490 --> 00:19:51,630
Fowler strangler Patton yay

00:19:47,630 --> 00:19:53,509
so I mean what I'm going to show you now

00:19:51,630 --> 00:19:56,730
is actually really straightforward and

00:19:53,509 --> 00:19:59,850
but the reason it was straightforward is

00:19:56,730 --> 00:20:02,909
because of Cloud Foundry right it's kind

00:19:59,850 --> 00:20:06,330
of the those guys are they're going it

00:20:02,909 --> 00:20:11,090
wasn't straight forward head of

00:20:06,330 --> 00:20:13,289
engineering you know is trivial and so

00:20:11,090 --> 00:20:14,669
for most of those services we were able

00:20:13,289 --> 00:20:16,559
to kind of just use a stronger pattern

00:20:14,669 --> 00:20:18,509
and I'll show how we did that for the

00:20:16,559 --> 00:20:20,399
there was one particular service that

00:20:18,509 --> 00:20:22,649
that wouldn't work for and I'll tell you

00:20:20,399 --> 00:20:24,299
about what that is and so there we go

00:20:22,649 --> 00:20:27,480
we're going to use the agreement service

00:20:24,299 --> 00:20:30,059
as the example and that's running

00:20:27,480 --> 00:20:32,549
they're running quite happily and we've

00:20:30,059 --> 00:20:34,470
got kind of post get delete and we're

00:20:32,549 --> 00:20:38,419
going to first thing we're going to do

00:20:34,470 --> 00:20:41,299
is we're going to just create a shell

00:20:38,419 --> 00:20:44,580
and all that shell is going to do is

00:20:41,299 --> 00:20:46,649
route straight to the it's going to

00:20:44,580 --> 00:20:48,899
route straight to the old service this

00:20:46,649 --> 00:20:50,610
was again relatively trivial because

00:20:48,899 --> 00:20:53,879
we're contract first right so we're an

00:20:50,610 --> 00:20:55,230
API first company and so it was dead

00:20:53,879 --> 00:20:57,360
simple these were just swagger specs

00:20:55,230 --> 00:20:59,700
that would just kind of move over and

00:20:57,360 --> 00:21:02,519
they just pass through straight to that

00:20:59,700 --> 00:21:06,899
service and then what we were able to do

00:21:02,519 --> 00:21:10,889
is kind of a resource at a time kind of

00:21:06,899 --> 00:21:14,370
switch those over and change the routing

00:21:10,889 --> 00:21:16,379
so that as a resource at time as a new

00:21:14,370 --> 00:21:19,710
resource comes online we're able to

00:21:16,379 --> 00:21:21,090
point that back directly through the

00:21:19,710 --> 00:21:22,590
routing and again this is all managed

00:21:21,090 --> 00:21:24,570
you know this is all really trivial

00:21:22,590 --> 00:21:27,539
configuration through the through the

00:21:24,570 --> 00:21:33,240
food config services at Cloud Foundry

00:21:27,539 --> 00:21:35,960
provide and then just chomp our way

00:21:33,240 --> 00:21:38,639
through it I appreciate that this is a

00:21:35,960 --> 00:21:41,909
nice straightforward you know relatively

00:21:38,639 --> 00:21:43,260
kind of straightforward use case the the

00:21:41,909 --> 00:21:45,000
backing you know we've got a shared

00:21:43,260 --> 00:21:47,610
backing service for a start right

00:21:45,000 --> 00:21:49,980
which you know made our life

00:21:47,610 --> 00:21:51,720
not easier like that that doesn't

00:21:49,980 --> 00:21:53,610
preclude you using it for other use

00:21:51,720 --> 00:21:55,200
cases you can absolutely use this for

00:21:53,610 --> 00:21:56,580
the use cases you just probably have to

00:21:55,200 --> 00:22:01,020
think a little bit more about kind of

00:21:56,580 --> 00:22:02,100
replication of data what's really

00:22:01,020 --> 00:22:04,710
important here in something else that

00:22:02,100 --> 00:22:08,340
Cloud Foundry provides is metrics and

00:22:04,710 --> 00:22:10,980
logging and the ability to know what is

00:22:08,340 --> 00:22:13,020
being called when it's being called how

00:22:10,980 --> 00:22:15,330
it's being called and so we were really

00:22:13,020 --> 00:22:16,860
was really dead straightforward we could

00:22:15,330 --> 00:22:17,730
see no one's calling the agreement

00:22:16,860 --> 00:22:21,870
service anymore

00:22:17,730 --> 00:22:23,730
it's done we can bin it and so we cut

00:22:21,870 --> 00:22:30,450
that off we undo ployed it we unmapped

00:22:23,730 --> 00:22:33,160
the roots and it was gone boom was that

00:22:30,450 --> 00:22:35,990
easy honestly

00:22:33,160 --> 00:22:41,340
[Laughter]

00:22:35,990 --> 00:22:42,780
so we strangled those three and there

00:22:41,340 --> 00:22:45,450
were a couple of others as well but just

00:22:42,780 --> 00:22:47,549
keeping it simple and then there was a

00:22:45,450 --> 00:22:49,860
kind of proxy service that kind of is a

00:22:47,549 --> 00:22:52,410
hope that kind of sits between all of

00:22:49,860 --> 00:22:55,760
our services kind of acts as a bit of an

00:22:52,410 --> 00:22:59,010
Orchestrator across some of our services

00:22:55,760 --> 00:23:01,080
because of the way that that kind of

00:22:59,010 --> 00:23:03,030
sits in the middle and because of some

00:23:01,080 --> 00:23:04,590
kind of routing problems we realized

00:23:03,030 --> 00:23:07,500
that we weren't just going to be able to

00:23:04,590 --> 00:23:08,490
be particularly round identity we

00:23:07,500 --> 00:23:11,040
weren't just going to be able to

00:23:08,490 --> 00:23:12,090
resource at a time bleed that over it

00:23:11,040 --> 00:23:15,770
was going to be it was going to be

00:23:12,090 --> 00:23:19,140
really difficult so all we did there was

00:23:15,770 --> 00:23:22,440
just do a complete version upgrade in

00:23:19,140 --> 00:23:25,100
situ and so obviously we're making sure

00:23:22,440 --> 00:23:28,490
that the API is exactly the same okay

00:23:25,100 --> 00:23:30,809
and what we were able to do is again now

00:23:28,490 --> 00:23:33,720
we've got the Bluegreen deployment

00:23:30,809 --> 00:23:35,669
feature for again which is out the box

00:23:33,720 --> 00:23:38,370
with Cloud Foundry we'd written our

00:23:35,669 --> 00:23:42,059
obviously our pipeline kind of supports

00:23:38,370 --> 00:23:44,730
that Bluegreen deployment and the fact

00:23:42,059 --> 00:23:47,370
that we run this on bash means that

00:23:44,730 --> 00:23:48,960
we've got absolute confidence that we

00:23:47,370 --> 00:23:51,690
don't have any configuration drift

00:23:48,960 --> 00:23:54,240
between our environments so we know that

00:23:51,690 --> 00:23:57,300
our test set staging and prod

00:23:54,240 --> 00:24:00,000
environments are all the same and are

00:23:57,300 --> 00:24:01,470
going to behave in the same way and so

00:24:00,000 --> 00:24:06,679
we were able to

00:24:01,470 --> 00:24:13,620
just this through again it was that easy

00:24:06,679 --> 00:24:15,389
honest and then he went say did it

00:24:13,620 --> 00:24:17,009
deliver what we thought it would and I

00:24:15,389 --> 00:24:19,220
think it's fair to say that yeah it was

00:24:17,009 --> 00:24:23,940
a it was a it was a really big success

00:24:19,220 --> 00:24:26,759
we were able to replace all of our

00:24:23,940 --> 00:24:27,870
remaining Scala services both through

00:24:26,759 --> 00:24:29,700
the Strangler pattern and the kind of

00:24:27,870 --> 00:24:33,440
more standard kind of version upgrade

00:24:29,700 --> 00:24:38,070
process we did it all in about six weeks

00:24:33,440 --> 00:24:40,379
and with zero downtime nobody noticed

00:24:38,070 --> 00:24:41,220
and what was and what was quite apart

00:24:40,379 --> 00:24:43,710
from the developers we're doing

00:24:41,220 --> 00:24:46,350
obviously the what was really

00:24:43,710 --> 00:24:49,049
interesting was at the same time that we

00:24:46,350 --> 00:24:51,929
were doing this work we were also moving

00:24:49,049 --> 00:24:56,789
cloud providers so we moved for our we

00:24:51,929 --> 00:24:58,649
moved from a managed service Cloud

00:24:56,789 --> 00:25:04,019
Foundry provider to and open sought to

00:24:58,649 --> 00:25:05,759
open source and we also moved from one

00:25:04,019 --> 00:25:08,309
eye as provider to another eye as

00:25:05,759 --> 00:25:11,820
provider and what again I just want to

00:25:08,309 --> 00:25:14,460
emphasize because Cloud Foundry was the

00:25:11,820 --> 00:25:18,539
common kind of Delta between all of this

00:25:14,460 --> 00:25:20,279
it means that you know from a developer

00:25:18,539 --> 00:25:22,169
point of view if I'm one of these the

00:25:20,279 --> 00:25:25,860
associates that kind of building on the

00:25:22,169 --> 00:25:29,669
platform I don't see any of that because

00:25:25,860 --> 00:25:31,500
you know I'm get pushing to get pushing

00:25:29,669 --> 00:25:34,590
to my pipeline and that's just CF

00:25:31,500 --> 00:25:36,840
pushing to a Cloud Foundry somewhere the

00:25:34,590 --> 00:25:39,210
fact that it's on some different i azure

00:25:36,840 --> 00:25:41,279
it's a different provider doesn't matter

00:25:39,210 --> 00:25:44,509
and that's kind of where some of the

00:25:41,279 --> 00:25:48,059
greatness of Cloud Foundry come in so

00:25:44,509 --> 00:25:50,789
yes we we were actually able to recruit

00:25:48,059 --> 00:25:52,200
people now because Java and spring boot

00:25:50,789 --> 00:25:54,840
is far more prevalent in the market

00:25:52,200 --> 00:25:58,139
space the retention went up we had

00:25:54,840 --> 00:26:01,409
happier more satisfied developers who

00:25:58,139 --> 00:26:04,700
were building in a language that they

00:26:01,409 --> 00:26:07,590
understood and felt comfortable with and

00:26:04,700 --> 00:26:09,809
again we that day to stuff we had all

00:26:07,590 --> 00:26:12,059
that kind of compliance out of the box

00:26:09,809 --> 00:26:14,190
again with them you know the ability to

00:26:12,059 --> 00:26:15,149
automatically scan and know what our

00:26:14,190 --> 00:26:17,039
licenses are doing

00:26:15,149 --> 00:26:19,019
pull that into our compliance framework

00:26:17,039 --> 00:26:23,639
and associated reduction in lead times

00:26:19,019 --> 00:26:25,200
everybody's happy we did learn some

00:26:23,639 --> 00:26:27,509
pretty big lessons along the way though

00:26:25,200 --> 00:26:28,799
this I know I kind of trivialized it a

00:26:27,509 --> 00:26:30,119
little bit and said it was you know

00:26:28,799 --> 00:26:31,799
luckily it's easy because I can just

00:26:30,119 --> 00:26:35,129
click the clicker her psyches it's

00:26:31,799 --> 00:26:40,349
really simple but there were a number of

00:26:35,129 --> 00:26:41,700
really big lessons so and this was the

00:26:40,349 --> 00:26:44,159
behaviors the asset in fact is one of

00:26:41,700 --> 00:26:45,839
our principles right behaviors the asset

00:26:44,159 --> 00:26:47,519
not the lines of code that you write in

00:26:45,839 --> 00:26:52,649
fact lines of code are just a cost that

00:26:47,519 --> 00:26:53,940
you have to maintain and so that was the

00:26:52,649 --> 00:26:57,599
message that we gave to our scene you

00:26:53,940 --> 00:27:00,389
exactly we wanted to do this the way

00:26:57,599 --> 00:27:04,049
that we can help ourselves with that is

00:27:00,389 --> 00:27:05,399
to write really good tests so that if we

00:27:04,049 --> 00:27:07,589
change decide that we want to change

00:27:05,399 --> 00:27:09,739
something later then it's really easy to

00:27:07,589 --> 00:27:12,779
prove that you've done it the right way

00:27:09,739 --> 00:27:14,999
some areas of this we had done a pretty

00:27:12,779 --> 00:27:16,320
good job I think it's fair to say we

00:27:14,999 --> 00:27:17,369
could have done better in other areas

00:27:16,320 --> 00:27:19,289
and we made it slightly more difficult

00:27:17,369 --> 00:27:20,849
for ourselves and it could have been and

00:27:19,289 --> 00:27:22,769
I think we learned quite a lot from

00:27:20,849 --> 00:27:26,219
their exercise about how important it is

00:27:22,769 --> 00:27:28,139
to have good tests be able to measure

00:27:26,219 --> 00:27:30,029
stuff and again Kyle foundry really

00:27:28,139 --> 00:27:31,889
helps you with this right so Cloud

00:27:30,029 --> 00:27:34,499
Foundry is the log regatta and it was

00:27:31,889 --> 00:27:35,789
logs and metrics use them they could

00:27:34,499 --> 00:27:38,729
provide you with some really interesting

00:27:35,789 --> 00:27:40,619
and useful data one to support things

00:27:38,729 --> 00:27:42,389
like use cases when you do go to your

00:27:40,619 --> 00:27:44,639
boss and say can I do this crazy thing

00:27:42,389 --> 00:27:48,269
but also just to have good insight into

00:27:44,639 --> 00:27:50,690
what's going on on your platform the

00:27:48,269 --> 00:27:54,929
whole kind of just do something thing

00:27:50,690 --> 00:27:56,460
we'd kind of already started doing some

00:27:54,929 --> 00:28:00,179
of this stuff as kind of a little bit

00:27:56,460 --> 00:28:02,070
type works and so we had some data and

00:28:00,179 --> 00:28:04,019
additional metrics to be able to give to

00:28:02,070 --> 00:28:07,200
our product owner and so our exec

00:28:04,019 --> 00:28:09,089
someone we doing this kind of just do it

00:28:07,200 --> 00:28:13,229
get on with it you know don't hang

00:28:09,089 --> 00:28:16,619
around training helps but it is

00:28:13,229 --> 00:28:18,929
definitely not a silver bullet you know

00:28:16,619 --> 00:28:23,039
I think how many how many software

00:28:18,929 --> 00:28:24,809
developers in the room awesome is this

00:28:23,039 --> 00:28:27,629
something that you've practiced really

00:28:24,809 --> 00:28:29,820
hard and learned over many years to

00:28:27,629 --> 00:28:33,400
become really good at

00:28:29,820 --> 00:28:39,250
yeah I think it is it is for me I became

00:28:33,400 --> 00:28:40,630
oka and and so I think you know by

00:28:39,250 --> 00:28:43,059
thinking we can just send people on a

00:28:40,630 --> 00:28:44,020
five-day training course and they're

00:28:43,059 --> 00:28:45,720
going to come back and they're going to

00:28:44,020 --> 00:28:49,090
be these great enterprise developers

00:28:45,720 --> 00:28:52,860
immediately is a nonsense it takes time

00:28:49,090 --> 00:28:57,760
to become really skilled in your craft

00:28:52,860 --> 00:28:58,929
so just watch for that again we've kind

00:28:57,760 --> 00:29:01,300
of hull watch what you're doing is kind

00:28:58,929 --> 00:29:04,960
of linked to the metrics piece and the

00:29:01,300 --> 00:29:06,190
contract first services again if we

00:29:04,960 --> 00:29:07,809
hadn't have done that and if we didn't

00:29:06,190 --> 00:29:09,460
have well-defined swagger specs I dunno

00:29:07,809 --> 00:29:10,480
how he'd had done this equally I'm not

00:29:09,460 --> 00:29:11,800
sure how he'd have done this if we

00:29:10,480 --> 00:29:13,540
weren't running this on us on a platform

00:29:11,800 --> 00:29:16,330
like cloud foundry we'd have had to

00:29:13,540 --> 00:29:19,120
write a whole ton of routing craziness

00:29:16,330 --> 00:29:22,510
to be able to make that work and the

00:29:19,120 --> 00:29:25,300
last thing is the feedback from the

00:29:22,510 --> 00:29:29,350
teams that this was really dull it's

00:29:25,300 --> 00:29:31,600
kind of you know it was repetitive and

00:29:29,350 --> 00:29:33,309
quite mundane you know it's stuff we've

00:29:31,600 --> 00:29:34,990
already done and we're doing it again

00:29:33,309 --> 00:29:37,240
but you know a lot of them understood

00:29:34,990 --> 00:29:39,309
why they were doing it but maybe just

00:29:37,240 --> 00:29:42,550
mix the team's up a bit and make it a

00:29:39,309 --> 00:29:44,440
bit more interesting and rather than

00:29:42,550 --> 00:29:47,110
just say like you're doing this for the

00:29:44,440 --> 00:29:48,850
next six weeks it's fine and I think

00:29:47,110 --> 00:29:56,679
that was it unless anybody's got any

00:29:48,850 --> 00:29:59,470
questions I've got about a minute I have

00:29:56,679 --> 00:30:01,360
a question about a slide very sure your

00:29:59,470 --> 00:30:04,510
your new spring boots application and

00:30:01,360 --> 00:30:11,080
the old service we said that you started

00:30:04,510 --> 00:30:12,580
first with the post we didn't know we'd

00:30:11,080 --> 00:30:14,140
start we'd get I don't know why it's

00:30:12,580 --> 00:30:26,620
there we start with the idempotent one

00:30:14,140 --> 00:30:29,290
idempotent ones because doesn't provide

00:30:26,620 --> 00:30:31,750
burpees routing as far as I know so you

00:30:29,290 --> 00:30:33,790
can just root you can specify the route

00:30:31,750 --> 00:30:37,809
but you cannot say get goes to this

00:30:33,790 --> 00:30:39,990
service post goes to the service yeah we

00:30:37,809 --> 00:30:39,990
did

00:30:41,450 --> 00:30:58,250
okay okay okay my bad okay anything else

00:30:54,290 --> 00:30:58,250
that was one right at the back

00:31:01,300 --> 00:31:06,940
the contract driven design that you just

00:31:04,660 --> 00:31:09,640
said sorry I didn't hear the first bit

00:31:06,940 --> 00:31:13,590
okay how did you define that no it's to

00:31:09,640 --> 00:31:15,910
be technical the contract driven way of

00:31:13,590 --> 00:31:19,110
services perhaps that's something we

00:31:15,910 --> 00:31:26,170
should have a chat about in the bargain

00:31:19,110 --> 00:31:28,420
that's quite detail okay I think that's

00:31:26,170 --> 00:31:30,160
my time thank you very much I'm happy to

00:31:28,420 --> 00:31:35,319
take questions over there after us

00:31:30,160 --> 00:31:35,319

YouTube URL: https://www.youtube.com/watch?v=e5uzjamWiN4


