Title: Keynote: Cloud Foundry Application Runtime Demo: Making Application Developers Lives Easier
Publication date: 2018-10-18
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Keynote: Cloud Foundry Application Runtime Demo: Making Application Developers Lives Easier - Dieu Cao, Director of Product Management, Pivotal

Have you ever wanted to make a change to your app? Update all your dependencies? Swap to a new stack? All without downtime? What about ensuring only your frontend app can talk to your backend app? Give your backend app an internally discoverable route?

In this demo, Dieu will show how some of the latest features in CF Application Runtime work together to help application developers easily achieve all of the above.

https://cfseu18.sched.com/event/Fq45/keynote-cloud-foundry-application-runtime-demo-making-application-developers-lives-easier-dieu-cao-director-of-product-management-pivotal
Captions: 
	00:00:10,320 --> 00:00:19,680
[Music]

00:00:15,590 --> 00:00:22,290
alright so I'm gonna do a demo and

00:00:19,680 --> 00:00:24,330
hopefully it'll it'll be just fine

00:00:22,290 --> 00:00:29,340
[Laughter]

00:00:24,330 --> 00:00:32,449
so so what I'm hoping to show here is an

00:00:29,340 --> 00:00:34,860
an an app front end and a back end app

00:00:32,449 --> 00:00:38,340
you might have seen this fortune-teller

00:00:34,860 --> 00:00:40,110
demo before it's a spring app but we

00:00:38,340 --> 00:00:44,489
converted it to Ruby because I like

00:00:40,110 --> 00:00:48,570
review and what I'm hoping to show today

00:00:44,489 --> 00:00:51,089
is you know connecting your front-end

00:00:48,570 --> 00:00:55,949
app to your back-end up securely I'm

00:00:51,089 --> 00:00:58,140
using the some of the new features on

00:00:55,949 --> 00:01:00,000
the platform and then updating your

00:00:58,140 --> 00:01:04,619
dependencies in a zero downtime manner

00:01:00,000 --> 00:01:07,350
so let's see if if that all works what

00:01:04,619 --> 00:01:11,159
you can see over here

00:01:07,350 --> 00:01:14,100
well I'm logged in here we just have our

00:01:11,159 --> 00:01:16,710
fortune teller UI and our fortune teller

00:01:14,100 --> 00:01:20,340
server you've got two instances of the

00:01:16,710 --> 00:01:23,430
server or three instances of the UI and

00:01:20,340 --> 00:01:25,649
the UI has a route map to it the the

00:01:23,430 --> 00:01:28,049
server doesn't yet and you can see our

00:01:25,649 --> 00:01:31,799
UI is over here and then it click this

00:01:28,049 --> 00:01:35,909
auto refresh button and you can start to

00:01:31,799 --> 00:01:40,890
see that hopefully that should cycle

00:01:35,909 --> 00:01:45,020
through the different instances and it

00:01:40,890 --> 00:01:45,020
is not cycling through

00:01:50,150 --> 00:01:59,420
all right that's unfortunate

00:01:54,180 --> 00:02:04,640
let me try pushing that again and seeing

00:01:59,420 --> 00:02:04,640
seeing what's going on there so CF push

00:02:05,540 --> 00:02:13,070
my fortune teller UI with the Ruby build

00:02:10,259 --> 00:02:13,070
pack over here

00:02:19,980 --> 00:02:26,790
okay well that's working now we're now

00:02:24,180 --> 00:02:28,640
cycling through the different instances

00:02:26,790 --> 00:02:31,200
[Music]

00:02:28,640 --> 00:02:34,739
we are not cycling through different

00:02:31,200 --> 00:02:37,349
instances I'm sorry so I might have to

00:02:34,739 --> 00:02:43,230
just click on this several times just to

00:02:37,349 --> 00:02:45,430
whoa I guess the Internet is not quite

00:02:43,230 --> 00:02:48,610
working for me

00:02:45,430 --> 00:02:48,610
[Music]

00:02:56,610 --> 00:03:06,250
smash left this is over here I pushed it

00:03:03,720 --> 00:03:13,629
and it's waiting for the app to start

00:03:06,250 --> 00:03:16,140
over here this doesn't work out I'm

00:03:13,629 --> 00:03:20,019
gonna go to the video but I'm gonna try

00:03:16,140 --> 00:03:33,340
forever for for one more minute because

00:03:20,019 --> 00:03:35,290
it's really cool demo hey that's up it

00:03:33,340 --> 00:03:39,970
really doesn't seem to want to be

00:03:35,290 --> 00:03:42,609
refreshing well let's see how far we can

00:03:39,970 --> 00:03:47,819
get with with it and then I can skip to

00:03:42,609 --> 00:03:51,849
the the video if needed so you can see

00:03:47,819 --> 00:03:54,909
here if I want to get the front end app

00:03:51,849 --> 00:03:59,920
connected to the back end up we will I

00:03:54,909 --> 00:04:03,840
want to create an internal route for the

00:03:59,920 --> 00:04:06,120
back-end app we have with recently

00:04:03,840 --> 00:04:09,730
introduced polyglot service discovery

00:04:06,120 --> 00:04:12,190
there's this new internal only domain

00:04:09,730 --> 00:04:16,870
it's not externally accessible apps got

00:04:12,190 --> 00:04:19,949
internal here and I can map that create

00:04:16,870 --> 00:04:25,260
a route and map it to my back-end app

00:04:19,949 --> 00:04:28,479
using that internal only domain and

00:04:25,260 --> 00:04:32,470
that's it it's mapped you can see it

00:04:28,479 --> 00:04:37,229
with CF apps you can see that

00:04:32,470 --> 00:04:40,659
fortune-teller server over here and then

00:04:37,229 --> 00:04:43,930
but we still need to teach our front-end

00:04:40,659 --> 00:04:46,419
app where that that back-end app is so

00:04:43,930 --> 00:04:48,669
we can just you there's many ways of

00:04:46,419 --> 00:04:51,880
doing that but we can use a user

00:04:48,669 --> 00:04:55,599
provided services tell it where that

00:04:51,880 --> 00:04:59,880
back-end APIs on AB stock internal and

00:04:55,599 --> 00:04:59,880
then we can bind the service here

00:05:05,180 --> 00:05:11,820
and at this point you usually have to

00:05:08,790 --> 00:05:14,400
restage or restart your app to pick up

00:05:11,820 --> 00:05:17,180
that new configuration but actually you

00:05:14,400 --> 00:05:22,440
can do a zero downtime restart and

00:05:17,180 --> 00:05:25,590
because my app isn't refreshing very

00:05:22,440 --> 00:05:40,500
much on the side where it looks like it

00:05:25,590 --> 00:05:42,420
is why is it doing this then we can

00:05:40,500 --> 00:05:45,570
actually do this zero downtime restart

00:05:42,420 --> 00:05:48,270
and I wish the the app was would work

00:05:45,570 --> 00:05:52,650
properly for that but it actually goes

00:05:48,270 --> 00:05:54,540
through and restarts instance by

00:05:52,650 --> 00:05:56,520
instance without taking your app down

00:05:54,540 --> 00:05:58,830
you won't have to do a Bluegreen deploy

00:05:56,520 --> 00:06:01,490
to achieve this configuration change

00:05:58,830 --> 00:06:06,600
which is really cool

00:06:01,490 --> 00:06:08,250
moving on you're at the front end up

00:06:06,600 --> 00:06:10,920
still can't talk to the back end up

00:06:08,250 --> 00:06:14,880
because we haven't actually given it the

00:06:10,920 --> 00:06:17,010
network policy secure network policy to

00:06:14,880 --> 00:06:19,830
allow the front-end app to talk to the

00:06:17,010 --> 00:06:21,840
backend app so we can just add that and

00:06:19,830 --> 00:06:24,930
this is a feature of container

00:06:21,840 --> 00:06:28,140
networking so we can add that network

00:06:24,930 --> 00:06:31,080
policy you can see that policy defined

00:06:28,140 --> 00:06:33,120
over here

00:06:31,080 --> 00:06:37,500
connecting the fortune-teller server and

00:06:33,120 --> 00:06:40,890
the fortune-teller UI and if this was

00:06:37,500 --> 00:06:46,980
cooperating with me which I don't know

00:06:40,890 --> 00:06:49,830
why it's not there it worked - trust me

00:06:46,980 --> 00:06:53,090
it really did connect only on the

00:06:49,830 --> 00:06:53,090
network fellow super

00:06:56,190 --> 00:07:03,190
and and you've got more fortunes that's

00:07:00,280 --> 00:07:08,620
that's so awesome it's only just now

00:07:03,190 --> 00:07:11,080
working all right on to the next Friday

00:07:08,620 --> 00:07:15,750
I wanted to demo which was updating your

00:07:11,080 --> 00:07:21,540
dependencies so and I hope you all know

00:07:15,750 --> 00:07:23,950
that you bump to they will be and

00:07:21,540 --> 00:07:26,970
they're they're moving on they support

00:07:23,950 --> 00:07:29,830
their there are things for five years

00:07:26,970 --> 00:07:31,740
the trustee version the thing that CF

00:07:29,830 --> 00:07:34,450
Linux office to the stack is based on

00:07:31,740 --> 00:07:37,090
will no longer get security updates as

00:07:34,450 --> 00:07:39,190
of April 2019 so you have a limited

00:07:37,090 --> 00:07:41,860
amount of time to migrate your apps

00:07:39,190 --> 00:07:44,560
using that stack from CF Linux office to

00:07:41,860 --> 00:07:45,490
to CF Linux FS three and this is what

00:07:44,560 --> 00:07:48,160
I'm about to show you is very

00:07:45,490 --> 00:07:51,180
experimental the CLI with a hidden

00:07:48,160 --> 00:07:53,140
command just became available yesterday

00:07:51,180 --> 00:07:55,870
but but the build packs are available

00:07:53,140 --> 00:07:59,080
and you can start trying them out so

00:07:55,870 --> 00:08:00,910
here you can see actually we have a ruby

00:07:59,080 --> 00:08:04,000
build pack that's a sea of linux FS to

00:08:00,910 --> 00:08:07,450
stack and another one that CF linux FS

00:08:04,000 --> 00:08:10,120
three and our apps here over here

00:08:07,450 --> 00:08:14,500
they're actually using 1404 that's CF

00:08:10,120 --> 00:08:17,110
Linux FS 2 and we can actually do a zero

00:08:14,500 --> 00:08:20,790
downtime update and update the stack at

00:08:17,110 --> 00:08:23,770
the same time so so let's do that and

00:08:20,790 --> 00:08:29,710
hopefully this is this'll also this too

00:08:23,770 --> 00:08:31,740
shall work so so other things to note

00:08:29,710 --> 00:08:31,740
here

00:08:31,800 --> 00:08:41,370
Udo you'll probably want to make a plan

00:08:36,150 --> 00:08:44,950
enable your clients to you slowly opt-in

00:08:41,370 --> 00:08:48,430
then change the default and then force

00:08:44,950 --> 00:08:49,960
them all over and you can hopefully by

00:08:48,430 --> 00:08:53,490
the time you need to force them all over

00:08:49,960 --> 00:08:56,530
you can use this and do it very safely

00:08:53,490 --> 00:08:58,839
and it's a great way to just update your

00:08:56,530 --> 00:09:04,000
dependencies stay secure stay up to date

00:08:58,839 --> 00:09:06,010
and as you'll notice with this zero

00:09:04,000 --> 00:09:06,730
downtime update your app is not going

00:09:06,010 --> 00:09:10,480
down I do

00:09:06,730 --> 00:09:14,040
have to do a blue-gray and deploy the

00:09:10,480 --> 00:09:17,980
staging usually when when you push again

00:09:14,040 --> 00:09:19,779
your app will go down it'll it'll stage

00:09:17,980 --> 00:09:24,820
that might take anywhere from five to

00:09:19,779 --> 00:09:27,100
ten minutes and and here like this the

00:09:24,820 --> 00:09:31,630
app is just working fine cycling through

00:09:27,100 --> 00:09:35,230
at some point you'll see as each one

00:09:31,630 --> 00:09:38,019
starts the the stack will be updated to

00:09:35,230 --> 00:09:43,260
Ubuntu 1804 by Bionic beaver which will

00:09:38,019 --> 00:09:46,209
be good for four five years and you'll

00:09:43,260 --> 00:09:47,740
hopefully start to see that soonish

00:09:46,209 --> 00:09:52,110
now that it's waiting for the app to

00:09:47,740 --> 00:09:52,110
start and it'll go through one by one

00:09:54,510 --> 00:10:08,339
did it today all right well it's going

00:10:04,750 --> 00:10:13,889
through there's one there's another one

00:10:08,339 --> 00:10:13,889

YouTube URL: https://www.youtube.com/watch?v=BUFsBeQTdqM


