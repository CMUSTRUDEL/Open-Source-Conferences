Title: Keynote: Containers on Solid Grounds, a Journey to Enterprise Container-Adoption
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Keynote: Containers on Solid Grounds, a Journey to Enterprise Container-Adoption â€“ Egon Steinkasserer, Chief Product Officer Enterprise Customers, Swisscom & Christian Bach, Chief Application Architect, Swiss Re

Closing the gap between its Cloud Foundry PaaS and cloud infrastructure services, Swisscom is developing an enterprise container service based on the Pivotal Container Service (PKS). Together with Swiss Re, a customer of the first hour, we shaped a coherent, integrated cloud solution spanning all our offerings and are writing on a new chapter in both of our cloud journeys.

https://cfseu18.sched.com/event/Fq46/keynote-containers-on-solid-grounds-a-journey-to-enterprise-container-adoption-egon-steinkasserer-chief-product-officer-enterprise-customers-swisscom-christian-bach-chief-application-architect-swiss-re
Captions: 
	00:00:01,250 --> 00:00:18,600
[Music]

00:00:15,020 --> 00:00:20,580
good morning thank you so much for

00:00:18,600 --> 00:00:23,189
having us it's a pleasure to represent

00:00:20,580 --> 00:00:25,680
Swisscom and it's it's always better to

00:00:23,189 --> 00:00:28,140
have customers telling the story

00:00:25,680 --> 00:00:28,710
I brought Christian back from Sri Sri

00:00:28,140 --> 00:00:31,260
with me

00:00:28,710 --> 00:00:35,010
and he will join a conversation after I

00:00:31,260 --> 00:00:37,649
give some introductions so my personal

00:00:35,010 --> 00:00:40,559
cloud story it Swisscom started roughly

00:00:37,649 --> 00:00:42,629
5 years ago and there was a meeting with

00:00:40,559 --> 00:00:44,579
a company called people who I've never

00:00:42,629 --> 00:00:46,829
heard before and then there was

00:00:44,579 --> 00:00:50,039
something they were talking about Cloud

00:00:46,829 --> 00:00:52,469
Foundry and I learned only afterwards in

00:00:50,039 --> 00:00:53,070
a workshop in Emmental what it really

00:00:52,469 --> 00:00:56,070
meant

00:00:53,070 --> 00:00:58,379
and being a software engineer by heart

00:00:56,070 --> 00:01:02,430
and education of course I was

00:00:58,379 --> 00:01:05,970
enthusiastic about it but I could never

00:01:02,430 --> 00:01:09,180
imagine what we were able to do during

00:01:05,970 --> 00:01:12,150
this last past five years so we have

00:01:09,180 --> 00:01:14,610
created a solid cloud from the Asian as

00:01:12,150 --> 00:01:18,299
Swisscom so that we are able to run

00:01:14,610 --> 00:01:21,390
every kind of workloads whether you want

00:01:18,299 --> 00:01:23,180
a deployment that runs on Swisscom

00:01:21,390 --> 00:01:27,390
premises as a virtual private

00:01:23,180 --> 00:01:30,720
environment or you have things you would

00:01:27,390 --> 00:01:34,259
like to run even in public clouds our

00:01:30,720 --> 00:01:38,250
vision is to provide managed services

00:01:34,259 --> 00:01:41,939
and typical outsourcing capabilities for

00:01:38,250 --> 00:01:44,250
all these environments and of course we

00:01:41,939 --> 00:01:47,520
did a huge investment in what we call

00:01:44,250 --> 00:01:50,790
the enterprise application crowd where

00:01:47,520 --> 00:01:53,579
we have Cloud Foundry as the core of it

00:01:50,790 --> 00:01:56,009
and recently and some of you might know

00:01:53,579 --> 00:01:59,520
we moved also the infrastructure layer

00:01:56,009 --> 00:02:01,770
towards the elements from our core

00:01:59,520 --> 00:02:04,320
partner Dell technologies so we have

00:02:01,770 --> 00:02:07,710
hardware and software from those guys

00:02:04,320 --> 00:02:11,849
and I would like to take the chance to

00:02:07,710 --> 00:02:13,170
thank the Swisscom team for enduring and

00:02:11,849 --> 00:02:16,500
bringing up all the

00:02:13,170 --> 00:02:18,810
fantastic capabilities on both sides the

00:02:16,500 --> 00:02:21,750
guys building the infrastructure and I

00:02:18,810 --> 00:02:23,610
met some also today in the morning the

00:02:21,750 --> 00:02:27,240
ones that are building applications on

00:02:23,610 --> 00:02:30,000
top so we do lots of easier on dog food

00:02:27,240 --> 00:02:33,750
in that environment and so we are proud

00:02:30,000 --> 00:02:36,570
to see the progress so we have customers

00:02:33,750 --> 00:02:40,200
leveraging these infrastructures as well

00:02:36,570 --> 00:02:42,810
as we leverage them it Swiss come and I

00:02:40,200 --> 00:02:46,230
remember our Cloud Foundry initiative

00:02:42,810 --> 00:02:50,310
around the application cloud started as

00:02:46,230 --> 00:02:54,330
a grassroots initiative and nobody in

00:02:50,310 --> 00:02:58,200
management did ever imagine that we

00:02:54,330 --> 00:03:01,140
would end up where we are nowadays we

00:02:58,200 --> 00:03:03,660
have geo redundant deployments already

00:03:01,140 --> 00:03:07,320
since quite some time and we are running

00:03:03,660 --> 00:03:10,560
mission critical workloads that every

00:03:07,320 --> 00:03:14,280
Swisscom customer uses on a daily basis

00:03:10,560 --> 00:03:17,370
on this infrastructure and of course as

00:03:14,280 --> 00:03:20,340
we are on such an event we have to

00:03:17,370 --> 00:03:23,519
announce something new we are building

00:03:20,340 --> 00:03:26,730
on our solid grounds filling the gap

00:03:23,519 --> 00:03:28,730
that is they are between infrastructure

00:03:26,730 --> 00:03:31,980
as a service with the more heavyweight

00:03:28,730 --> 00:03:35,120
VMs and the platform as a service

00:03:31,980 --> 00:03:37,470
capabilities that sometimes like

00:03:35,120 --> 00:03:41,130
capabilities and I think with the

00:03:37,470 --> 00:03:45,600
container capabilities we built on top

00:03:41,130 --> 00:03:49,110
of the infrastructure from people to I

00:03:45,600 --> 00:03:52,170
think this brings our offering to the

00:03:49,110 --> 00:03:55,250
next level so that we have really a more

00:03:52,170 --> 00:03:58,769
complete environment bringing

00:03:55,250 --> 00:04:02,269
lightweight capabilities to do massive

00:03:58,769 --> 00:04:04,920
scale out but I think Christian is

00:04:02,269 --> 00:04:07,739
really much better suited to tell you

00:04:04,920 --> 00:04:09,359
what he is going to do with his team and

00:04:07,739 --> 00:04:11,310
I think you guys are already started

00:04:09,359 --> 00:04:14,459
general and availability of all these

00:04:11,310 --> 00:04:16,680
capabilities we will have beginning of

00:04:14,459 --> 00:04:18,150
next year thank you

00:04:16,680 --> 00:04:24,310
[Applause]

00:04:18,150 --> 00:04:26,590
okay so high from my side my name is

00:04:24,310 --> 00:04:30,849
christian bach and I'm chief application

00:04:26,590 --> 00:04:32,949
architect with Swiss Re Swiss three is a

00:04:30,849 --> 00:04:35,259
wholesale provider of reinsurance

00:04:32,949 --> 00:04:38,199
insurance and other forms of restaurants

00:04:35,259 --> 00:04:39,280
fare as a global financial services

00:04:38,199 --> 00:04:41,259
company

00:04:39,280 --> 00:04:43,949
we're subject to very many different

00:04:41,259 --> 00:04:47,680
local jurisdictions and regulations and

00:04:43,949 --> 00:04:50,160
therefore on many different clouds we

00:04:47,680 --> 00:04:53,349
are faced with a multi cloud world in

00:04:50,160 --> 00:04:55,479
this context the rise of containers to

00:04:53,349 --> 00:04:58,720
becoming first-class citizens of

00:04:55,479 --> 00:05:01,960
deployments to us might simply be the

00:04:58,720 --> 00:05:04,780
best thing since sliced bread both in

00:05:01,960 --> 00:05:07,810
terms of deployments and in business

00:05:04,780 --> 00:05:10,599
continuity terms but let me tell you all

00:05:07,810 --> 00:05:16,900
about our container journey at the

00:05:10,599 --> 00:05:18,940
podium with a few slides of mine so we

00:05:16,900 --> 00:05:20,849
have no demo there's nothing gonna break

00:05:18,940 --> 00:05:23,880
beside me maybe

00:05:20,849 --> 00:05:26,440
alright so it's all my fault then

00:05:23,880 --> 00:05:28,360
multi-cloud wasn't the original cause

00:05:26,440 --> 00:05:30,400
for us getting into docker and

00:05:28,360 --> 00:05:32,979
containers in the first place our

00:05:30,400 --> 00:05:35,289
original motivation stemmed from an

00:05:32,979 --> 00:05:37,990
engineering desire to leverage the

00:05:35,289 --> 00:05:40,180
paradigm of cloud native computing to a

00:05:37,990 --> 00:05:43,419
bigger extent than were twelve factor

00:05:40,180 --> 00:05:45,400
apps on cloud foundry and it's time in

00:05:43,419 --> 00:05:49,870
being specific here the cloud foundry

00:05:45,400 --> 00:05:52,719
application wrong time allowed for we

00:05:49,870 --> 00:05:57,310
were confronted with services that were

00:05:52,719 --> 00:06:00,310
not stateless but stateful with service

00:05:57,310 --> 00:06:03,130
instances hosting a dedicated partition

00:06:00,310 --> 00:06:05,259
of an overall state space that needed a

00:06:03,130 --> 00:06:08,530
stable Network identity and oftentimes

00:06:05,259 --> 00:06:12,130
an associated dedicated persistent

00:06:08,530 --> 00:06:15,219
volume services typically being part of

00:06:12,130 --> 00:06:17,289
architectures where events need to be

00:06:15,219 --> 00:06:19,930
routed to self-contained service

00:06:17,289 --> 00:06:22,990
instances implementing reactive event

00:06:19,930 --> 00:06:25,120
processors respecting local orderings

00:06:22,990 --> 00:06:28,479
and with event processing semantics

00:06:25,120 --> 00:06:30,310
depending on aggregate state from

00:06:28,479 --> 00:06:32,280
previous events having reached the

00:06:30,310 --> 00:06:35,890
respective partition

00:06:32,280 --> 00:06:38,440
that's for the first bullet we were

00:06:35,890 --> 00:06:41,760
confronted with services that were

00:06:38,440 --> 00:06:45,880
exposing multiple endpoints not

00:06:41,760 --> 00:06:51,430
exclusively restful if at all based on

00:06:45,880 --> 00:06:54,250
HTTP or then various flavors of services

00:06:51,430 --> 00:06:57,070
that were in a Cloud Foundry application

00:06:54,250 --> 00:06:59,950
runtime world being considered backing

00:06:57,070 --> 00:07:04,990
services like distributed commit locks

00:06:59,950 --> 00:07:08,410
message queues or databases so these

00:07:04,990 --> 00:07:10,870
services were asking for more they were

00:07:08,410 --> 00:07:16,420
in desperate need of a home outside of

00:07:10,870 --> 00:07:20,590
the application run time enter

00:07:16,420 --> 00:07:22,570
kubernetes so as you can read on the

00:07:20,590 --> 00:07:24,760
slide we started looking for solid

00:07:22,570 --> 00:07:27,250
grounds similar to what Cloud Foundry

00:07:24,760 --> 00:07:30,490
offered but for just about any sort of

00:07:27,250 --> 00:07:33,010
cloud native payload initially we

00:07:30,490 --> 00:07:35,020
explored solutions ranging from docker

00:07:33,010 --> 00:07:38,380
swarm and custom kubernetes

00:07:35,020 --> 00:07:40,180
installations which led us to the

00:07:38,380 --> 00:07:42,880
discovery of the advantages of real

00:07:40,180 --> 00:07:45,040
container runtimes we came to appreciate

00:07:42,880 --> 00:07:47,740
the control we gained in running

00:07:45,040 --> 00:07:49,630
containers beginning being it in

00:07:47,740 --> 00:07:53,050
isolating them by means of overlay

00:07:49,630 --> 00:07:56,310
networking being able to scale instances

00:07:53,050 --> 00:07:58,780
up and down in container application

00:07:56,310 --> 00:08:01,210
spanning software-defined networks of

00:07:58,780 --> 00:08:03,970
which you see a little sketch of mine on

00:08:01,210 --> 00:08:06,490
the right hand side between them and

00:08:03,970 --> 00:08:09,910
getting strict governance in restricting

00:08:06,490 --> 00:08:12,430
any other communication paths and even

00:08:09,910 --> 00:08:15,010
further having a say on lowest level

00:08:12,430 --> 00:08:17,590
operating system security policies in

00:08:15,010 --> 00:08:20,070
container execution down to the

00:08:17,590 --> 00:08:23,470
individual kernel module access level

00:08:20,070 --> 00:08:25,750
for us in particular the possibility of

00:08:23,470 --> 00:08:28,990
limiting a containers connectivity

00:08:25,750 --> 00:08:31,800
perimeter was key in getting green

00:08:28,990 --> 00:08:35,440
lights in running third-party containers

00:08:31,800 --> 00:08:38,440
not only in protecting other enterprise

00:08:35,440 --> 00:08:41,800
services from let's be positive and just

00:08:38,440 --> 00:08:44,870
call them noisy neighbors but in days of

00:08:41,800 --> 00:08:47,390
ubiquitous internet connectivity also

00:08:44,870 --> 00:08:50,089
in strictly governing any sort of

00:08:47,390 --> 00:08:53,330
hosting platform internal network egress

00:08:50,089 --> 00:08:57,370
as one fundamental measure in preventing

00:08:53,330 --> 00:08:57,370
from data breaches to external parties

00:09:02,740 --> 00:09:09,470
after running our experimental clusters

00:09:06,080 --> 00:09:11,330
for a while on the Swisscom Yass we

00:09:09,470 --> 00:09:14,570
realized that us taking care of

00:09:11,330 --> 00:09:17,450
kubernetes both in installation and

00:09:14,570 --> 00:09:20,420
operation was not really what we want

00:09:17,450 --> 00:09:23,180
all would be expected to be doing as an

00:09:20,420 --> 00:09:26,150
on platform provider that we are what we

00:09:23,180 --> 00:09:29,930
really wanted was a cast to be operated

00:09:26,150 --> 00:09:31,670
by Swisscom so not quite like the past

00:09:29,930 --> 00:09:33,920
the swisco map cloud on the right hand

00:09:31,670 --> 00:09:37,279
side and not like the ass on the left

00:09:33,920 --> 00:09:40,070
hand side where we managed the biggest

00:09:37,279 --> 00:09:43,400
share of the stack ourselves we were

00:09:40,070 --> 00:09:45,410
looking for the middle ground swisco

00:09:43,400 --> 00:09:49,390
managing a container Orchestrator a

00:09:45,410 --> 00:09:51,860
container execution engine for us a

00:09:49,390 --> 00:09:54,830
platform on which we could not only

00:09:51,860 --> 00:09:57,350
bring our own runtimes and stateful

00:09:54,830 --> 00:10:00,230
services but also run middleware

00:09:57,350 --> 00:10:02,480
components of our choosing or use

00:10:00,230 --> 00:10:06,380
components from Swisscom services

00:10:02,480 --> 00:10:10,060
offering we were striving for a platform

00:10:06,380 --> 00:10:12,260
allowing for autonomy on solid grounds

00:10:10,060 --> 00:10:14,360
gaining freedom from where the past

00:10:12,260 --> 00:10:16,490
allows while not having to face the

00:10:14,360 --> 00:10:19,670
chores of installation from plain

00:10:16,490 --> 00:10:24,850
vanilla virtual machines and not having

00:10:19,670 --> 00:10:24,850
to operate the solid grounds ourselves

00:10:27,339 --> 00:10:31,790
so what did we do we approached our

00:10:30,110 --> 00:10:33,890
long-term partner with which we

00:10:31,790 --> 00:10:36,490
presented a Swisscom on those accounts

00:10:33,890 --> 00:10:39,020
and came to find fertile grounds

00:10:36,490 --> 00:10:41,930
Swisscom as we heard just a few minutes

00:10:39,020 --> 00:10:44,200
ago was contemplating and investigating

00:10:41,930 --> 00:10:47,029
the Cloud Foundry container runtime and

00:10:44,200 --> 00:10:50,480
thinking about a managed kubernetes

00:10:47,029 --> 00:10:53,329
offering themselves and had even started

00:10:50,480 --> 00:10:57,709
evaluating the pivotal container service

00:10:53,329 --> 00:10:58,730
already as used to which was calm we

00:10:57,709 --> 00:11:00,350
could not only count

00:10:58,730 --> 00:11:02,510
on a knowledgeable partner ready to help

00:11:00,350 --> 00:11:05,980
us right yet another chapter in our

00:11:02,510 --> 00:11:08,590
cloud journey but we got readily

00:11:05,980 --> 00:11:11,390
accommodated with our big enterprise

00:11:08,590 --> 00:11:15,770
special some might call it legacy

00:11:11,390 --> 00:11:19,250
demands like the hosting of korba IOP

00:11:15,770 --> 00:11:22,670
based enterprise javabeans demanding for

00:11:19,250 --> 00:11:26,450
unusual kubernetes stack features like

00:11:22,670 --> 00:11:30,800
the direct address ability of pots in

00:11:26,450 --> 00:11:32,330
that spirit Thank You Swisscom thank you

00:11:30,800 --> 00:11:34,430
and thank you all for having me it's

00:11:32,330 --> 00:11:42,790
great to have customers like this there

00:11:34,430 --> 00:11:42,790

YouTube URL: https://www.youtube.com/watch?v=0bbCV7Cqhn0


