Title: Decoding Cloud Foundry: MicroServices
Publication date: 2016-03-28
Playlist: Cloud Foundry 101
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:03,840
I'm going to talk about micro-services

00:00:01,709 --> 00:00:05,700
some of the principles the challenges

00:00:03,840 --> 00:00:08,429
and misconceptions and how it relates to

00:00:05,700 --> 00:00:09,929
Cloud Foundry the term micro-service

00:00:08,429 --> 00:00:10,559
architecture has sprung up over the

00:00:09,929 --> 00:00:12,750
recent years

00:00:10,559 --> 00:00:14,880
it describes a single application

00:00:12,750 --> 00:00:18,600
comprised as a suite of smaller

00:00:14,880 --> 00:00:21,000
applications or smaller services these

00:00:18,600 --> 00:00:23,039
smaller services are typically built in

00:00:21,000 --> 00:00:25,740
isolation around a single business

00:00:23,039 --> 00:00:27,180
capability and ideally they're

00:00:25,740 --> 00:00:29,699
implemented by a single business

00:00:27,180 --> 00:00:33,540
capability team so they can remain

00:00:29,699 --> 00:00:35,130
independently deployable these services

00:00:33,540 --> 00:00:36,750
are free to be developed in different

00:00:35,130 --> 00:00:39,000
programming languages and have different

00:00:36,750 --> 00:00:40,680
backing technologies and that means they

00:00:39,000 --> 00:00:43,200
have the freedom to evolve as required

00:00:40,680 --> 00:00:46,500
so what are the challenges around

00:00:43,200 --> 00:00:48,030
micro-services well there are inherent

00:00:46,500 --> 00:00:50,579
challenges with any effort of

00:00:48,030 --> 00:00:52,649
componentization but assuming you can

00:00:50,579 --> 00:00:55,110
get the architecture right so like all

00:00:52,649 --> 00:00:57,780
software micro services still require a

00:00:55,110 --> 00:01:00,420
platform support such as user management

00:00:57,780 --> 00:01:02,010
resiliency and data management more

00:01:00,420 --> 00:01:04,500
critically when you're dealing with

00:01:02,010 --> 00:01:07,020
complex distributed challenges at the

00:01:04,500 --> 00:01:09,990
application layer platform level support

00:01:07,020 --> 00:01:11,250
isn't enough new challenges start to

00:01:09,990 --> 00:01:13,860
arise to do with things like

00:01:11,250 --> 00:01:18,390
configuration management and service

00:01:13,860 --> 00:01:19,229
registry and discovery so how does Cloud

00:01:18,390 --> 00:01:21,000
Foundry help

00:01:19,229 --> 00:01:23,250
well Cloud Foundry and micro services

00:01:21,000 --> 00:01:25,950
have been described as a symbiotic

00:01:23,250 --> 00:01:27,750
relationship because after the Box Cloud

00:01:25,950 --> 00:01:29,869
Foundry gives you all of your platform

00:01:27,750 --> 00:01:32,280
level support for your micro services

00:01:29,869 --> 00:01:34,979
concerns such as user management log

00:01:32,280 --> 00:01:37,110
aggregation and Security Cloud Foundry

00:01:34,979 --> 00:01:39,780
thinks of your application as an

00:01:37,110 --> 00:01:41,759
isolated application and if you take

00:01:39,780 --> 00:01:43,860
into account all those micro services

00:01:41,759 --> 00:01:46,649
that comprise your app level distributed

00:01:43,860 --> 00:01:48,540
system you need a framework to handle

00:01:46,649 --> 00:01:50,610
those distributed system concerns and

00:01:48,540 --> 00:01:53,720
that's where technology is like spring

00:01:50,610 --> 00:01:53,720

YouTube URL: https://www.youtube.com/watch?v=MtRfysAvkss


