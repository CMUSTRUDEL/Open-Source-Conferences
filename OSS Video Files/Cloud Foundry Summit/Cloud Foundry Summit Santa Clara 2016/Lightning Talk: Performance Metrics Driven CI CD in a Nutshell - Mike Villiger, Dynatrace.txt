Title: Lightning Talk: Performance Metrics Driven CI CD in a Nutshell - Mike Villiger, Dynatrace
Publication date: 2016-05-29
Playlist: Cloud Foundry Summit Santa Clara 2016
Description: 
	While deployment pipelines speed up the process of delivering software releases, test automation often fails to uncover non-functional regressions which can result in poor performing builds.

In this talk we will showcase the importance of shifting performance left in the software delivery lifecycle and examine key performance and scalability metrics to include across all phases of the deployment pipeline. 

Mike Villiger
Product Evangelist, Dynatrace
APM, monitoring, Continuous Integration, Continuous Delivery, DevOps, Buildpack extensions
Captions: 
	00:00:00,030 --> 00:00:04,110
so I've done a couple of lightning talks

00:00:01,860 --> 00:00:06,299
before and normally the clock is

00:00:04,110 --> 00:00:09,059
actually behind me on the big screen and

00:00:06,299 --> 00:00:11,670
everybody is counting down as you get

00:00:09,059 --> 00:00:13,830
near the end and will usually start

00:00:11,670 --> 00:00:16,230
cheering if you're still talking with

00:00:13,830 --> 00:00:18,390
ten seconds to go because they cut your

00:00:16,230 --> 00:00:19,560
mic when you hit five minutes but

00:00:18,390 --> 00:00:20,699
they're not actually doing that here it

00:00:19,560 --> 00:00:21,689
makes things a little bit easier but I'm

00:00:20,699 --> 00:00:24,990
still gonna try and get through it in

00:00:21,689 --> 00:00:27,449
five minutes all right so I like to

00:00:24,990 --> 00:00:29,880
front-load my deck with a little bit of

00:00:27,449 --> 00:00:31,289
you know cliches and things like that

00:00:29,880 --> 00:00:33,780
how many folks have actually heard that

00:00:31,289 --> 00:00:36,239
software will eat the world software is

00:00:33,780 --> 00:00:38,969
eating the world you know we've all got

00:00:36,239 --> 00:00:41,969
smartphones and so on and so forth now

00:00:38,969 --> 00:00:44,760
we've got smartwatches I like to cut my

00:00:41,969 --> 00:00:46,649
own slides down and basically say that

00:00:44,760 --> 00:00:48,629
what I'm saying is wrong my watch

00:00:46,649 --> 00:00:52,550
doesn't have any software in it it's

00:00:48,629 --> 00:00:56,489
mechanical so let's get to the next one

00:00:52,550 --> 00:00:58,680
right so unicorns DevOps oh my who's

00:00:56,489 --> 00:01:00,300
been basically playing buzzword bingo

00:00:58,680 --> 00:01:03,570
over the course of the past couple of

00:01:00,300 --> 00:01:07,200
days I'm gonna try and help you get

00:01:03,570 --> 00:01:10,380
through that here so you know obviously

00:01:07,200 --> 00:01:14,780
we're a very inclusive community here

00:01:10,380 --> 00:01:17,610
and we all know that body shaming is bad

00:01:14,780 --> 00:01:19,560
but on the same front you know it's

00:01:17,610 --> 00:01:23,790
always a good idea to try and better

00:01:19,560 --> 00:01:27,180
ourselves so that Rhino can try and

00:01:23,790 --> 00:01:29,100
improve their processes to try and

00:01:27,180 --> 00:01:34,140
actually become a unicorn or at least

00:01:29,100 --> 00:01:35,310
maybe a little bit more svelte Rhino so

00:01:34,140 --> 00:01:39,150
when we start talking about

00:01:35,310 --> 00:01:42,020
transitioning to DevOps we tend to talk

00:01:39,150 --> 00:01:45,149
a lot about automating our pipelines

00:01:42,020 --> 00:01:48,479
right but it's not all about just

00:01:45,149 --> 00:01:52,110
automating everything and pushing bad

00:01:48,479 --> 00:01:55,590
code onto our new platforms right

00:01:52,110 --> 00:01:57,990
because if you notice at the the the

00:01:55,590 --> 00:02:02,130
hopper there in the beginning if you put

00:01:57,990 --> 00:02:04,590
crap in you're gonna get crap out right

00:02:02,130 --> 00:02:06,030
so we have to actually improve our

00:02:04,590 --> 00:02:08,970
software as it moves through our

00:02:06,030 --> 00:02:11,459
pipeline so when we start talking about

00:02:08,970 --> 00:02:13,030
well how do we move beyond what we've

00:02:11,459 --> 00:02:15,730
perhaps been doing in the past

00:02:13,030 --> 00:02:17,080
right we're all doing unit tests and

00:02:15,730 --> 00:02:19,210
we're all doing continuous integration

00:02:17,080 --> 00:02:22,540
so that when your code gets checked in

00:02:19,210 --> 00:02:25,840
its being tested and then assuming those

00:02:22,540 --> 00:02:28,300
tests pass you will deploy but we start

00:02:25,840 --> 00:02:30,970
to talk about a couple of different ways

00:02:28,300 --> 00:02:35,730
to to improve that process what are some

00:02:30,970 --> 00:02:37,780
additional things that we can track so

00:02:35,730 --> 00:02:39,670
one of the things that we'd like to talk

00:02:37,780 --> 00:02:44,170
about is let's start looking at

00:02:39,670 --> 00:02:47,470
performance in your CI pipeline because

00:02:44,170 --> 00:02:50,050
if we don't do performance in our

00:02:47,470 --> 00:02:54,459
pipeline and we deploy poorly performing

00:02:50,050 --> 00:02:58,900
code into production we can tell based

00:02:54,459 --> 00:03:01,000
on industry experience that performance

00:02:58,900 --> 00:03:03,430
degradation ZAR gonna hurt your bottom

00:03:01,000 --> 00:03:05,489
line and performance improvements are

00:03:03,430 --> 00:03:08,650
going to improve your bottom line

00:03:05,489 --> 00:03:10,989
Amazon noticed that a simple 100

00:03:08,650 --> 00:03:13,900
millisecond decrease in the response

00:03:10,989 --> 00:03:16,350
time of their pages resulted in a 1%

00:03:13,900 --> 00:03:18,760
decrease in revenue

00:03:16,350 --> 00:03:21,700
Walmart noticed that there was a thought

00:03:18,760 --> 00:03:24,010
that a thousand milliseconds decrease in

00:03:21,700 --> 00:03:27,340
response time was a two percent increase

00:03:24,010 --> 00:03:28,810
in their revenues right and when you

00:03:27,340 --> 00:03:33,459
start talking about organizations at

00:03:28,810 --> 00:03:35,560
that scale that's real money so so how

00:03:33,459 --> 00:03:37,000
do we start getting through this what

00:03:35,560 --> 00:03:39,940
are the some of the things that we can

00:03:37,000 --> 00:03:41,980
start to look at so our whole take on

00:03:39,940 --> 00:03:43,900
this is its metrics right we're gonna

00:03:41,980 --> 00:03:46,660
start adding metrics into our pipeline

00:03:43,900 --> 00:03:48,130
and and my time is actually going yellow

00:03:46,660 --> 00:03:50,110
so I'm gonna actually get through all

00:03:48,130 --> 00:03:54,549
this to make sure that you can maybe

00:03:50,110 --> 00:03:55,660
perhaps take a screenshot so the

00:03:54,549 --> 00:03:57,160
performance metrics you should be

00:03:55,660 --> 00:03:58,090
tracking in your pipeline I'm doing

00:03:57,160 --> 00:03:59,500
something a little different here I'm

00:03:58,090 --> 00:04:01,570
actually providing some actionable

00:03:59,500 --> 00:04:04,209
information as opposed to just a bunch

00:04:01,570 --> 00:04:04,989
of funny pictures so there's a couple of

00:04:04,209 --> 00:04:06,820
different things that you can be

00:04:04,989 --> 00:04:08,290
tracking in your pipeline and that's

00:04:06,820 --> 00:04:10,959
gonna be start looking at a response

00:04:08,290 --> 00:04:12,640
time corridor right so your unit tests

00:04:10,959 --> 00:04:14,530
are gonna be you know not nearly as

00:04:12,640 --> 00:04:15,640
statistically significant as perhaps a

00:04:14,530 --> 00:04:17,829
performance test because it's not going

00:04:15,640 --> 00:04:19,810
to be as many of them but you do want to

00:04:17,829 --> 00:04:21,970
start tracking response time from build

00:04:19,810 --> 00:04:23,080
the build to know if you've degraded you

00:04:21,970 --> 00:04:25,210
want to look at the number of sequel

00:04:23,080 --> 00:04:26,620
calls obviously hopefully everybody is

00:04:25,210 --> 00:04:28,810
familiar with the n plus one

00:04:26,620 --> 00:04:31,060
problem where instead of you know

00:04:28,810 --> 00:04:33,910
getting a set of items you're getting

00:04:31,060 --> 00:04:35,680
all of them in individual statements but

00:04:33,910 --> 00:04:37,000
one of the things we found recently in

00:04:35,680 --> 00:04:37,960
talking to our customers is that the

00:04:37,000 --> 00:04:40,449
same thing is happening in

00:04:37,960 --> 00:04:42,550
micro-services frameworks so we found

00:04:40,449 --> 00:04:44,740
that the n plus 1 problem continues to

00:04:42,550 --> 00:04:47,020
exist even as we've moved beyond those

00:04:44,740 --> 00:04:48,160
types of frameworks so then you'll look

00:04:47,020 --> 00:04:49,449
here you know there's the number of

00:04:48,160 --> 00:04:51,760
exceptions and you want to make sure

00:04:49,449 --> 00:04:54,490
that your micro services aren't skipping

00:04:51,760 --> 00:04:58,780
tiers and calling into layers that they

00:04:54,490 --> 00:05:00,460
shouldn't be 5 seconds and performance

00:04:58,780 --> 00:05:02,350
metrics are not just for back-end

00:05:00,460 --> 00:05:04,120
developers anymore your front-end

00:05:02,350 --> 00:05:05,680
developers can also do the same exact

00:05:04,120 --> 00:05:07,440
thing right so they can look at the

00:05:05,680 --> 00:05:10,690
number of domains the number of images

00:05:07,440 --> 00:05:13,389
how big the images are and their page

00:05:10,690 --> 00:05:15,370
size so hopefully everybody has an

00:05:13,389 --> 00:05:16,690
opportunity to take a couple of

00:05:15,370 --> 00:05:19,180
screenshots have some you know

00:05:16,690 --> 00:05:22,570
actionable information they're about 30

00:05:19,180 --> 00:05:25,660
seconds over here so we tend to give

00:05:22,570 --> 00:05:27,699
this talk a lot in a 50-minute session

00:05:25,660 --> 00:05:29,110
and we're going to be kind of hitting a

00:05:27,699 --> 00:05:31,599
lot of the Cloud Foundry meetups with

00:05:29,110 --> 00:05:33,669
some similar information I leave here on

00:05:31,599 --> 00:05:36,580
Wednesday and go deliver a 50 minute

00:05:33,669 --> 00:05:39,520
version of this talk in Dallas so

00:05:36,580 --> 00:05:42,310
hopefully everybody can take a look at

00:05:39,520 --> 00:05:44,289
it there and additionally a p.m. blog

00:05:42,310 --> 00:05:47,200
dynaTrace con we've also got a lot of

00:05:44,289 --> 00:05:49,150
similar content up there as well so

00:05:47,200 --> 00:05:50,889
thanks everybody for your time and I

00:05:49,150 --> 00:05:53,880
think dr. Nick is coming up here in a

00:05:50,889 --> 00:05:53,880

YouTube URL: https://www.youtube.com/watch?v=BZYrTTGQHeo


