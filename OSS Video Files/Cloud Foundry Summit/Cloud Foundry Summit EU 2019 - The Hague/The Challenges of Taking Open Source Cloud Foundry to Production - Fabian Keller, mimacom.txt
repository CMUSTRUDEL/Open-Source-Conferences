Title: The Challenges of Taking Open Source Cloud Foundry to Production - Fabian Keller, mimacom
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	The Challenges of Taking Open Source Cloud Foundry to Production - Fabian Keller, mimacom Deutschland GmbH 

When committing to Cloud Foundry some companies make the strategic decision to take full ownership of platform deployment and operations and deploy open source Cloud Foundry to fully understand all moving parts. While open-source Cloud Foundry has gotten rather easy to delpoy with the cf-deployment project, there is still a lot of more to do in order to make an open-source deployment production ready.  This talk will show the challenges we've gone through in taking open-source Cloud Foundry to production. We'll see what it takes to run and keep the platform up to date including various operational aspects such as monitoring, logging and backing up the platform. After the talk you'll have a better understanding of the effort it takes to run the open source distribution. 

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:06,420
okay so everyone and welcome to this

00:00:03,449 --> 00:00:09,000
afternoon session on taking open source

00:00:06,420 --> 00:00:11,820
cloud family to production my name is

00:00:09,000 --> 00:00:14,820
Fabian Keller I'm working as a software

00:00:11,820 --> 00:00:16,859
engineer at my McComb we're a solution

00:00:14,820 --> 00:00:18,420
provider for complex utilization

00:00:16,859 --> 00:00:21,119
projects so we're doing lots of

00:00:18,420 --> 00:00:25,260
individual projects for other companies

00:00:21,119 --> 00:00:26,910
at home I'm enjoying woodworking so if

00:00:25,260 --> 00:00:29,130
anyone of you is like also enjoying

00:00:26,910 --> 00:00:32,340
woodworking I'm happy to chat afterwards

00:00:29,130 --> 00:00:35,100
and for the tech topics I'm interested

00:00:32,340 --> 00:00:37,140
in it's obviously cloud platforms but

00:00:35,100 --> 00:00:39,180
I'm also passionate about like system

00:00:37,140 --> 00:00:41,820
architecture and general design systems

00:00:39,180 --> 00:00:43,649
or DevOps you can find me on twitter my

00:00:41,820 --> 00:00:45,180
twitter handle is prefixed with an

00:00:43,649 --> 00:00:47,129
underscore because my name is quite

00:00:45,180 --> 00:00:49,820
popular in germany so there's like any

00:00:47,129 --> 00:00:52,649
valid combinations already taken so

00:00:49,820 --> 00:00:54,239
there's the prefix underscore just keep

00:00:52,649 --> 00:00:55,620
that in mind okay

00:00:54,239 --> 00:00:57,629
that's the bunch of us at Mema comm

00:00:55,620 --> 00:01:01,230
we've had our 20 year anniversary this

00:00:57,629 --> 00:01:05,250
year so we all met and this is the whole

00:01:01,230 --> 00:01:07,860
bunch anyone can see me probably not

00:01:05,250 --> 00:01:09,650
it's like somewhere in the back but yes

00:01:07,860 --> 00:01:12,420
so that's it with the marketing part I

00:01:09,650 --> 00:01:14,909
guess so let's get started about what

00:01:12,420 --> 00:01:16,409
this really is about so like we're

00:01:14,909 --> 00:01:18,650
talking about open source cloud foundry

00:01:16,409 --> 00:01:21,030
now so open source cloud foundry is like

00:01:18,650 --> 00:01:23,130
tempting and like it's really

00:01:21,030 --> 00:01:25,860
interesting and but why would you do

00:01:23,130 --> 00:01:28,680
this like in the first place so we

00:01:25,860 --> 00:01:32,100
identified like three reasons why people

00:01:28,680 --> 00:01:34,110
or like generally want to to do open

00:01:32,100 --> 00:01:37,079
source count for me the first reason

00:01:34,110 --> 00:01:39,329
obviously is privacy so you can run and

00:01:37,079 --> 00:01:42,060
take open source cloud for me and run it

00:01:39,329 --> 00:01:44,070
where you think the data is secure so

00:01:42,060 --> 00:01:46,530
that's really nice but it's also both

00:01:44,070 --> 00:01:48,149
controlled so you can like with open

00:01:46,530 --> 00:01:50,149
source cloud foundry like you're really

00:01:48,149 --> 00:01:52,649
in control you can do anything you want

00:01:50,149 --> 00:01:57,060
basically you just take the code get it

00:01:52,649 --> 00:01:58,950
and and have it and you also have access

00:01:57,060 --> 00:02:01,219
to the platform so you're like not

00:01:58,950 --> 00:02:03,689
locked into something you can't access

00:02:01,219 --> 00:02:05,939
like if you have a hosted Cloud Foundry

00:02:03,689 --> 00:02:08,670
solution somewhere but you can really

00:02:05,939 --> 00:02:11,970
access all the logs and things so that's

00:02:08,670 --> 00:02:13,160
why people like to use open source cloud

00:02:11,970 --> 00:02:15,530
foundry

00:02:13,160 --> 00:02:17,990
when generally speaking there's like two

00:02:15,530 --> 00:02:18,980
sides to this so the one side oh let's

00:02:17,990 --> 00:02:21,350
do this

00:02:18,980 --> 00:02:23,470
and the other one like the other

00:02:21,350 --> 00:02:26,540
positions like that's better not do this

00:02:23,470 --> 00:02:28,310
so who's in who in the room has used

00:02:26,540 --> 00:02:31,160
open source Cloud Foundry before is

00:02:28,310 --> 00:02:35,450
there anyone here so already deployed

00:02:31,160 --> 00:02:37,130
and to production so some hands went

00:02:35,450 --> 00:02:40,670
down but we have someone else in the

00:02:37,130 --> 00:02:42,740
room that's really nice so the people

00:02:40,670 --> 00:02:46,010
that say let's do this they commonly say

00:02:42,740 --> 00:02:48,260
okay oh it's EF is like easy it's like

00:02:46,010 --> 00:02:50,570
basically the same technology we can do

00:02:48,260 --> 00:02:52,820
this there's even no license cost which

00:02:50,570 --> 00:02:56,420
is pretty cool

00:02:52,820 --> 00:02:58,580
but it has a price obviously on the

00:02:56,420 --> 00:03:01,280
other spectrum that's more like oh it's

00:02:58,580 --> 00:03:03,830
really scary we don't have support and

00:03:01,280 --> 00:03:06,200
also like what I hear often we're like

00:03:03,830 --> 00:03:08,930
not an open-source company right so it's

00:03:06,200 --> 00:03:10,790
like people and companies start to get a

00:03:08,930 --> 00:03:12,890
handle of open-source with Cloud Foundry

00:03:10,790 --> 00:03:15,290
because usually they they don't do

00:03:12,890 --> 00:03:17,860
open-source at all so that's also like

00:03:15,290 --> 00:03:20,090
really like that on the contrary side

00:03:17,860 --> 00:03:22,400
where I'm gonna talk you is somewhere in

00:03:20,090 --> 00:03:24,650
the middle so I I'm not here to say it's

00:03:22,400 --> 00:03:27,200
like super easy you can do it I'm also

00:03:24,650 --> 00:03:29,120
not here to say it's like impossible but

00:03:27,200 --> 00:03:30,560
I'm trying to make up some some points

00:03:29,120 --> 00:03:32,570
for you where you can judge for yourself

00:03:30,560 --> 00:03:34,850
whether it's like worth it or not

00:03:32,570 --> 00:03:39,050
because it has some drawbacks of course

00:03:34,850 --> 00:03:42,490
and I'm talking about the challenges we

00:03:39,050 --> 00:03:45,050
faced and to make this talk like really

00:03:42,490 --> 00:03:47,120
tailor it to open-source I'm gonna talk

00:03:45,050 --> 00:03:48,980
about the challenges that are unique to

00:03:47,120 --> 00:03:51,200
open source cloud foundry that we have

00:03:48,980 --> 00:03:53,840
identified so I mean deploying a cloud

00:03:51,200 --> 00:03:56,180
platform itself whether it's open source

00:03:53,840 --> 00:03:58,190
or a vendor distribution regardless it's

00:03:56,180 --> 00:03:59,900
like a challenge by itself but I want to

00:03:58,190 --> 00:04:03,610
like really boil it down to what's

00:03:59,900 --> 00:04:06,860
unique to the open source cloud foundry

00:04:03,610 --> 00:04:09,170
we did this for a customer so our case

00:04:06,860 --> 00:04:10,790
was we had like 900 application

00:04:09,170 --> 00:04:13,070
instances up and running on two

00:04:10,790 --> 00:04:16,040
foundations and we wanted to shift them

00:04:13,070 --> 00:04:18,739
to open source cloud foundry there were

00:04:16,040 --> 00:04:21,200
like 200 software engineers involved and

00:04:18,739 --> 00:04:24,050
we had like six months from project

00:04:21,200 --> 00:04:25,840
initiation to go live which was kind of

00:04:24,050 --> 00:04:28,760
an arbitrary number

00:04:25,840 --> 00:04:31,100
but we had these six months and we had

00:04:28,760 --> 00:04:33,920
to go live and we actually made it

00:04:31,100 --> 00:04:35,780
we were like six platform engineers so

00:04:33,920 --> 00:04:39,500
free from the customer and free from our

00:04:35,780 --> 00:04:43,220
side where we worked like in a combined

00:04:39,500 --> 00:04:46,640
team to make this happen we went through

00:04:43,220 --> 00:04:48,410
four phases in general to to ship this

00:04:46,640 --> 00:04:50,750
project so the first was like the

00:04:48,410 --> 00:04:52,490
planning phase we like initially had to

00:04:50,750 --> 00:04:54,800
decide like where it is going to be in

00:04:52,490 --> 00:04:56,810
the data center how we're how big do we

00:04:54,800 --> 00:04:58,880
do things like what's the domain and

00:04:56,810 --> 00:05:00,980
stuff so that took some time also

00:04:58,880 --> 00:05:02,990
because it's like on premise so they had

00:05:00,980 --> 00:05:04,760
to order things and create firewall

00:05:02,990 --> 00:05:07,970
requests and all these type of things

00:05:04,760 --> 00:05:11,180
and then we actually started deploying

00:05:07,970 --> 00:05:13,520
it and it's like oh we can we really can

00:05:11,180 --> 00:05:16,160
do this so it actually worked which was

00:05:13,520 --> 00:05:19,520
great and we just went life and like

00:05:16,160 --> 00:05:22,460
afterwards we like realized okay now

00:05:19,520 --> 00:05:25,220
it's time to update and change things so

00:05:22,460 --> 00:05:27,650
this was like kind of the first things

00:05:25,220 --> 00:05:29,390
where things got tricky because now we

00:05:27,650 --> 00:05:32,750
were alive and we couldn't just change

00:05:29,390 --> 00:05:35,660
the platform and where we are today is

00:05:32,750 --> 00:05:37,960
like really taking things to conquerors

00:05:35,660 --> 00:05:40,300
automating a lot and building pipelines

00:05:37,960 --> 00:05:43,100
so we're somewhere in between that

00:05:40,300 --> 00:05:45,350
operating and thriving phase at this

00:05:43,100 --> 00:05:47,240
point but I think this these four phases

00:05:45,350 --> 00:05:49,580
are typically the ones you go through

00:05:47,240 --> 00:05:51,680
from from like really taking open source

00:05:49,580 --> 00:05:55,970
cloud foundry and starting out to really

00:05:51,680 --> 00:05:59,120
go into production along the way we face

00:05:55,970 --> 00:06:01,610
some challenges so naturally we had some

00:05:59,120 --> 00:06:05,330
technological challenges I mean it's

00:06:01,610 --> 00:06:07,760
like a complex product by itself but

00:06:05,330 --> 00:06:10,280
there were actually more challenges we

00:06:07,760 --> 00:06:12,110
faced and I personally think that these

00:06:10,280 --> 00:06:13,640
challenges are sometimes the harder

00:06:12,110 --> 00:06:16,780
challenges to solve

00:06:13,640 --> 00:06:19,910
we've had some organizational challenges

00:06:16,780 --> 00:06:21,770
for those of you who were in in Basel

00:06:19,910 --> 00:06:24,080
last year and you might remember the

00:06:21,770 --> 00:06:26,450
picture I just had to take this it's

00:06:24,080 --> 00:06:29,030
like really a famous building in Basel

00:06:26,450 --> 00:06:31,820
where we had the last CEO summit but

00:06:29,030 --> 00:06:34,310
there's also like process challenges so

00:06:31,820 --> 00:06:37,960
lots of processes we had in the company

00:06:34,310 --> 00:06:40,620
were affected or might be affected and

00:06:37,960 --> 00:06:44,020
last but not least like cultural

00:06:40,620 --> 00:06:46,780
challenges we faced so I want to first

00:06:44,020 --> 00:06:50,080
start off with technological challenges

00:06:46,780 --> 00:06:52,690
so for developers in the first place

00:06:50,080 --> 00:06:54,789
like using the platform there's actually

00:06:52,690 --> 00:06:56,710
no difference that's the good part so it

00:06:54,789 --> 00:06:58,600
still open sources like any vendor

00:06:56,710 --> 00:07:01,660
distribution it's like it's got the same

00:06:58,600 --> 00:07:04,539
Cloud Controller API it's has the same

00:07:01,660 --> 00:07:06,340
way of pushing applications so there's

00:07:04,539 --> 00:07:08,979
like for them there's not really a

00:07:06,340 --> 00:07:11,080
difference it's like the same experience

00:07:08,979 --> 00:07:14,620
for them they have the same like

00:07:11,080 --> 00:07:16,960
operations constraints and things they

00:07:14,620 --> 00:07:19,810
have the exact same runtime I mean from

00:07:16,960 --> 00:07:21,460
from a build pack perspective or at

00:07:19,810 --> 00:07:23,410
least there should be I mean there's

00:07:21,460 --> 00:07:25,150
like version differences and things but

00:07:23,410 --> 00:07:28,030
apart from that it's like really the

00:07:25,150 --> 00:07:30,430
same platform there's one thing that's

00:07:28,030 --> 00:07:34,509
different that's data services of course

00:07:30,430 --> 00:07:36,400
so in luckily the data or the the

00:07:34,509 --> 00:07:38,979
customer didn't use any data services

00:07:36,400 --> 00:07:41,949
that were like only for proprietary use

00:07:38,979 --> 00:07:44,199
so during the migration we could just

00:07:41,949 --> 00:07:46,440
neglect any data services because they

00:07:44,199 --> 00:07:50,229
were external like running on on-premise

00:07:46,440 --> 00:07:52,389
things so that was pretty convenient and

00:07:50,229 --> 00:07:55,930
we only had to like migrate the runtime

00:07:52,389 --> 00:07:58,930
which is why we it was even possible to

00:07:55,930 --> 00:08:01,060
do this in the six month I believe so

00:07:58,930 --> 00:08:03,580
then like if it's the same so what's

00:08:01,060 --> 00:08:05,320
actually the difference so if we take

00:08:03,580 --> 00:08:08,440
open source cloud foundry we have a set

00:08:05,320 --> 00:08:10,780
of components those components you can

00:08:08,440 --> 00:08:13,330
just go to github download them wash io

00:08:10,780 --> 00:08:16,060
download the releases you can look at

00:08:13,330 --> 00:08:18,370
them and what what the difference to

00:08:16,060 --> 00:08:20,949
vendor distributions is is that they're

00:08:18,370 --> 00:08:23,979
just like packaged differently so

00:08:20,949 --> 00:08:26,380
there's like some jobs are on other VMs

00:08:23,979 --> 00:08:29,190
and co-located here and there so they're

00:08:26,380 --> 00:08:32,169
just like Windows typically just like

00:08:29,190 --> 00:08:34,029
move around these boxes but in the end

00:08:32,169 --> 00:08:36,099
you have the same code right it's like

00:08:34,029 --> 00:08:38,469
all the certified distributions they

00:08:36,099 --> 00:08:41,200
have like kind of I mean they didn't

00:08:38,469 --> 00:08:42,940
patch or change any of the code they

00:08:41,200 --> 00:08:46,870
might have just changed the packaging by

00:08:42,940 --> 00:08:49,240
itself and by packaging I mean also like

00:08:46,870 --> 00:08:50,060
in OS CF we have like yellow packaging

00:08:49,240 --> 00:08:52,490
and

00:08:50,060 --> 00:08:54,200
and with a vendor distribution we

00:08:52,490 --> 00:08:57,260
typically have some user interface where

00:08:54,200 --> 00:08:59,530
we can do things so what what's really

00:08:57,260 --> 00:09:04,520
nice about the vendor is that it hides

00:08:59,530 --> 00:09:06,890
operational complexity so that means we

00:09:04,520 --> 00:09:08,660
have this operational complexity now and

00:09:06,890 --> 00:09:10,910
the first thing for the whole team was

00:09:08,660 --> 00:09:11,510
like to really dive deep on learning

00:09:10,910 --> 00:09:13,700
Bosch

00:09:11,510 --> 00:09:16,010
so I mean Bosch is like the central

00:09:13,700 --> 00:09:19,610
deployment component we wrote a lot of

00:09:16,010 --> 00:09:22,880
scripts for Bosch so all the deployments

00:09:19,610 --> 00:09:27,080
were like scripted in bash script files

00:09:22,880 --> 00:09:29,900
and we had these well we used the CF

00:09:27,080 --> 00:09:32,690
deployment base Yama and we used all

00:09:29,900 --> 00:09:35,600
these operations files so we used

00:09:32,690 --> 00:09:37,280
upstream operations files of course then

00:09:35,600 --> 00:09:39,350
as we were deploying like multiple

00:09:37,280 --> 00:09:42,590
environments we had some like

00:09:39,350 --> 00:09:44,120
environment specific operations files

00:09:42,590 --> 00:09:46,640
that only apply to a single environment

00:09:44,120 --> 00:09:50,690
and some environment agnostic files and

00:09:46,640 --> 00:09:52,520
we came up with this way of like putting

00:09:50,690 --> 00:09:54,790
them in different folders organizing

00:09:52,520 --> 00:09:58,280
them so we could reuse them across

00:09:54,790 --> 00:10:00,530
environments and all of that makes up

00:09:58,280 --> 00:10:03,230
just the single I mean that's just an

00:10:00,530 --> 00:10:04,790
extract of the real file but in fact

00:10:03,230 --> 00:10:07,700
it's like how we do things so we have

00:10:04,790 --> 00:10:09,500
the operations and usually we have virus

00:10:07,700 --> 00:10:11,510
files as well so we have like the

00:10:09,500 --> 00:10:14,120
operations file and on the same hand we

00:10:11,510 --> 00:10:15,950
have like a virus file that really does

00:10:14,120 --> 00:10:18,500
the specific configuration for that

00:10:15,950 --> 00:10:20,600
environment that means the operations

00:10:18,500 --> 00:10:22,550
file would like have something to change

00:10:20,600 --> 00:10:25,160
the IP address and the environments file

00:10:22,550 --> 00:10:27,440
would then actually set the IP address

00:10:25,160 --> 00:10:29,420
for the specific environment and this

00:10:27,440 --> 00:10:32,840
worked out pretty well so with this

00:10:29,420 --> 00:10:34,820
structure we could work a lot and to

00:10:32,840 --> 00:10:37,040
move forward here and really take this

00:10:34,820 --> 00:10:39,680
to production we had to deal with a lot

00:10:37,040 --> 00:10:41,390
of like different concerns so all these

00:10:39,680 --> 00:10:43,940
kind of things you need to do and

00:10:41,390 --> 00:10:45,680
actually we were just like looking at

00:10:43,940 --> 00:10:48,410
what's there and there's a actually

00:10:45,680 --> 00:10:50,450
there's really a lot in in building up a

00:10:48,410 --> 00:10:52,010
production environment so you typically

00:10:50,450 --> 00:10:53,990
want to take care of backup and restore

00:10:52,010 --> 00:10:57,530
so and see if deployment there's

00:10:53,990 --> 00:10:58,780
actually just a lot of ops files that do

00:10:57,530 --> 00:11:01,730
this for you

00:10:58,780 --> 00:11:03,890
there's log management so there was the

00:11:01,730 --> 00:11:06,950
enable components whose log operations

00:11:03,890 --> 00:11:09,820
that streams belongs to a Swiss log

00:11:06,950 --> 00:11:12,620
endpoint we have even some monitoring

00:11:09,820 --> 00:11:14,810
operations files the resurrector is

00:11:12,620 --> 00:11:18,470
enabled by default which just restarts

00:11:14,810 --> 00:11:20,720
to be Emma's VMs on failure we had like

00:11:18,470 --> 00:11:24,560
a template for instance sizing so

00:11:20,720 --> 00:11:27,560
there's an scale to 1 easy we just

00:11:24,560 --> 00:11:30,890
repurpose this use the ops file and like

00:11:27,560 --> 00:11:32,990
wrote our own based on that it's

00:11:30,890 --> 00:11:35,000
actually the CF deployment is like high

00:11:32,990 --> 00:11:38,060
available by default so that's also

00:11:35,000 --> 00:11:40,100
pretty nice there's lots of security

00:11:38,060 --> 00:11:43,550
operations files like put this

00:11:40,100 --> 00:11:45,140
certificate here to M TLS there so

00:11:43,550 --> 00:11:47,120
that's also convenient you can just like

00:11:45,140 --> 00:11:49,430
look at what's there take them and

00:11:47,120 --> 00:11:52,130
really secure and harden the environment

00:11:49,430 --> 00:11:55,700
that we were building so that turned out

00:11:52,130 --> 00:11:59,120
to be great like as a starting point but

00:11:55,700 --> 00:12:00,730
still we had to tailor some things so we

00:11:59,120 --> 00:12:03,680
really started like writing own

00:12:00,730 --> 00:12:06,339
operations files so for example we had

00:12:03,680 --> 00:12:10,220
some l-dub integration we wrote this

00:12:06,339 --> 00:12:12,199
operations file for l-dub and now when

00:12:10,220 --> 00:12:14,300
you're like starting to write operations

00:12:12,199 --> 00:12:17,449
files then the team needs to know what

00:12:14,300 --> 00:12:19,339
to write right so because I mean it's

00:12:17,449 --> 00:12:21,949
like you need to understand what happens

00:12:19,339 --> 00:12:23,720
here so to understand this it's really

00:12:21,949 --> 00:12:25,910
great I'm not sure if you've seen that

00:12:23,720 --> 00:12:29,269
but on Bosh i/o you can just go to the

00:12:25,910 --> 00:12:31,430
releases tab on the top and just choose

00:12:29,269 --> 00:12:32,720
your release and then just right go into

00:12:31,430 --> 00:12:34,610
the documentation and for other

00:12:32,720 --> 00:12:36,709
properties you have here there's

00:12:34,610 --> 00:12:38,930
typically at least one sentence

00:12:36,709 --> 00:12:42,079
describing what it actually does so I

00:12:38,930 --> 00:12:44,750
mean so the team had to learn just to go

00:12:42,079 --> 00:12:46,880
there see what needs to be changed

00:12:44,750 --> 00:12:49,220
skim through the documentation and see

00:12:46,880 --> 00:12:51,680
then like do we need this don't we need

00:12:49,220 --> 00:12:53,089
this and that was like kind of difficult

00:12:51,680 --> 00:12:55,630
in the beginning but it turned out that

00:12:53,089 --> 00:12:58,490
the more you do this the easier it gets

00:12:55,630 --> 00:13:00,620
but then at some point we there's like

00:12:58,490 --> 00:13:03,829
for example this add shadow user on

00:13:00,620 --> 00:13:05,630
login property here to the right so it's

00:13:03,829 --> 00:13:07,940
actually cut off currently so you can't

00:13:05,630 --> 00:13:09,829
read what it does and suppose you don't

00:13:07,940 --> 00:13:13,850
understand the text here so what would

00:13:09,829 --> 00:13:15,290
you do it's like how do you get more

00:13:13,850 --> 00:13:17,830
information about this when the

00:13:15,290 --> 00:13:20,450
documentation is not sufficient

00:13:17,830 --> 00:13:24,230
so what you can do is like with this

00:13:20,450 --> 00:13:25,880
head user on login you just or what we

00:13:24,230 --> 00:13:28,040
typically do is we just go to the

00:13:25,880 --> 00:13:30,260
release repository so for example to the

00:13:28,040 --> 00:13:32,540
UA a release and we just put this into

00:13:30,260 --> 00:13:35,720
the github search so it turns out that

00:13:32,540 --> 00:13:39,140
this specific property is used here by

00:13:35,720 --> 00:13:41,990
the release to set this to set this

00:13:39,140 --> 00:13:44,390
property in the config file so and from

00:13:41,990 --> 00:13:48,410
here we just did another github search

00:13:44,390 --> 00:13:50,420
in there UA a repository because from

00:13:48,410 --> 00:13:52,220
there you can now find out what this

00:13:50,420 --> 00:13:55,610
property does when it's in the

00:13:52,220 --> 00:13:58,610
configuration file of the UA a and from

00:13:55,610 --> 00:14:00,560
there we figured that like it's being

00:13:58,610 --> 00:14:02,810
repurposed as a property here and

00:14:00,560 --> 00:14:05,540
exposed so it's been renamed so we need

00:14:02,810 --> 00:14:07,640
to search again and eventually we found

00:14:05,540 --> 00:14:10,160
what it does so this is like during the

00:14:07,640 --> 00:14:12,920
authentication method it just creates an

00:14:10,160 --> 00:14:15,800
user inside you a and that's what this

00:14:12,920 --> 00:14:17,570
configuration flag is for so we traced

00:14:15,800 --> 00:14:19,910
on this configuration that we had in

00:14:17,570 --> 00:14:22,250
Bosh to the real source code and we

00:14:19,910 --> 00:14:23,720
understood it what it does and we could

00:14:22,250 --> 00:14:26,030
even have some context about why the

00:14:23,720 --> 00:14:27,950
source code is there because in get you

00:14:26,030 --> 00:14:30,890
can hit the blame button on github and

00:14:27,950 --> 00:14:33,170
you actually see the people and why they

00:14:30,890 --> 00:14:36,370
changed specific lines of code and this

00:14:33,170 --> 00:14:39,860
is an approach we use really often

00:14:36,370 --> 00:14:41,420
because that's how you like run open

00:14:39,860 --> 00:14:43,610
source cloud foundry right you need to

00:14:41,420 --> 00:14:45,710
understand what what happens and if the

00:14:43,610 --> 00:14:48,650
documentation isn't enough you need to

00:14:45,710 --> 00:14:50,870
go there so the number one advice here

00:14:48,650 --> 00:14:53,480
is like just don't be afraid to dive

00:14:50,870 --> 00:14:55,070
into the source code that really turned

00:14:53,480 --> 00:14:57,440
out to be useful but it's a skill that

00:14:55,070 --> 00:15:00,440
everyone needs to learn so that's really

00:14:57,440 --> 00:15:03,050
difficult especially if people are more

00:15:00,440 --> 00:15:05,270
from from operations and not like from

00:15:03,050 --> 00:15:07,100
software development they're maybe not

00:15:05,270 --> 00:15:09,350
that familiar with bigger projects and

00:15:07,100 --> 00:15:12,050
source code so that really was was

00:15:09,350 --> 00:15:14,180
challenging another challenge we faced

00:15:12,050 --> 00:15:16,610
is I mean we had the existing work load

00:15:14,180 --> 00:15:19,730
- so to really go to production we had

00:15:16,610 --> 00:15:21,370
to like shift the traffic right so what

00:15:19,730 --> 00:15:24,860
we did in the end we wrote this

00:15:21,370 --> 00:15:26,620
migration proxy so we just deployed this

00:15:24,860 --> 00:15:28,820
on the old foundation as a route service

00:15:26,620 --> 00:15:30,449
which is really nice because cloud

00:15:28,820 --> 00:15:33,749
foundry allows us to build this

00:15:30,449 --> 00:15:35,459
servus so what developers could do is I

00:15:33,749 --> 00:15:38,100
mean that the traffic still went to the

00:15:35,459 --> 00:15:40,169
old foundation and the route service

00:15:38,100 --> 00:15:42,649
kicked in intercepted the request and

00:15:40,169 --> 00:15:46,889
just proceeded to the new foundation so

00:15:42,649 --> 00:15:49,019
like by using a service the developer

00:15:46,889 --> 00:15:51,299
could by himself like switch the traffic

00:15:49,019 --> 00:15:54,749
and once he was confident he could like

00:15:51,299 --> 00:15:56,759
issue the route change with the DNS team

00:15:54,749 --> 00:15:59,189
so that was just separate and it took

00:15:56,759 --> 00:16:02,249
some time for them to change entries and

00:15:59,189 --> 00:16:04,230
things like how it's usually well how it

00:16:02,249 --> 00:16:07,410
usually happens in an enterprise but

00:16:04,230 --> 00:16:11,970
eventually they figured or they also

00:16:07,410 --> 00:16:14,459
could could do this but I won't don't

00:16:11,970 --> 00:16:17,429
want to go too deep into the technical

00:16:14,459 --> 00:16:19,350
specifics but more focused on on the

00:16:17,429 --> 00:16:22,679
different challenges we had in these are

00:16:19,350 --> 00:16:24,660
other areas here so organizational when

00:16:22,679 --> 00:16:27,660
we started the project we figured okay

00:16:24,660 --> 00:16:29,790
we we need to hire someone with at least

00:16:27,660 --> 00:16:33,089
of ten years experience operating a

00:16:29,790 --> 00:16:35,669
platform as a service well ideally like

00:16:33,089 --> 00:16:37,889
contributes to Cloud Foundry or I

00:16:35,669 --> 00:16:42,329
already did a bush deployment and it's

00:16:37,889 --> 00:16:45,149
like probably you won't find anyone so

00:16:42,329 --> 00:16:47,369
we changed this so required skills like

00:16:45,149 --> 00:16:49,589
who has used the past before it's like

00:16:47,369 --> 00:16:55,199
we know as cloud foundry that's pretty

00:16:49,589 --> 00:16:58,169
pretty good already I mean that's how it

00:16:55,199 --> 00:17:00,779
is and and actually funny coincidence

00:16:58,169 --> 00:17:03,359
happened like when we were starting the

00:17:00,779 --> 00:17:04,860
project we actually hired someone for

00:17:03,359 --> 00:17:08,189
the project and it was like from the

00:17:04,860 --> 00:17:11,130
left side so we had support we found

00:17:08,189 --> 00:17:12,809
someone who really did this before so he

00:17:11,130 --> 00:17:15,600
was available part time so that turned

00:17:12,809 --> 00:17:20,059
out to be a really valuable resource but

00:17:15,600 --> 00:17:22,350
that's like really luck in this so

00:17:20,059 --> 00:17:24,269
typically you start on the right side so

00:17:22,350 --> 00:17:26,639
instead of hiring what you can do is

00:17:24,269 --> 00:17:28,649
like upscaling and we invested a lot in

00:17:26,639 --> 00:17:31,110
in all the skills of the team members

00:17:28,649 --> 00:17:33,419
and this is like really something you

00:17:31,110 --> 00:17:34,950
need to do in the team like I mean you

00:17:33,419 --> 00:17:37,169
need to invest in the culture of

00:17:34,950 --> 00:17:39,059
learning and upscaling because it's not

00:17:37,169 --> 00:17:41,010
done by just doing a workshop you need

00:17:39,059 --> 00:17:43,300
to do this continuously because there's

00:17:41,010 --> 00:17:46,510
so much to learn we had like Jason yeah

00:17:43,300 --> 00:17:49,300
take you get as three conquers bashed

00:17:46,510 --> 00:17:51,370
all these moving parts and like no one

00:17:49,300 --> 00:17:54,010
in the team has used them before I mean

00:17:51,370 --> 00:17:56,950
people are like from the customer they

00:17:54,010 --> 00:17:59,230
were more like system operators so they

00:17:56,950 --> 00:18:01,630
were not used I mean they used UNIX the

00:17:59,230 --> 00:18:03,490
CLI tools and things but they were not

00:18:01,630 --> 00:18:06,070
like software developers using it all

00:18:03,490 --> 00:18:09,640
the time using s3 buckets like

00:18:06,070 --> 00:18:11,290
everywhere so we really like from the

00:18:09,640 --> 00:18:13,240
stretch started like teaching what's

00:18:11,290 --> 00:18:16,720
actually Jason what options do we have

00:18:13,240 --> 00:18:19,360
what Yama Xun tux is possible so that

00:18:16,720 --> 00:18:22,060
everyone in the team knew what what so

00:18:19,360 --> 00:18:24,460
that no one like when there was a star

00:18:22,060 --> 00:18:27,210
or some weird other symbols ask

00:18:24,460 --> 00:18:30,460
themselves what what's that actually and

00:18:27,210 --> 00:18:34,450
that is really something that worked

00:18:30,460 --> 00:18:36,400
pretty well for us we also did this like

00:18:34,450 --> 00:18:39,370
initially in workshops but then also

00:18:36,400 --> 00:18:41,980
during pairing and mob programming so I

00:18:39,370 --> 00:18:43,480
still remember like the first day I went

00:18:41,980 --> 00:18:45,400
to the client where we really started

00:18:43,480 --> 00:18:47,290
the employment we are all gathered like

00:18:45,400 --> 00:18:49,000
group of four people in a small meeting

00:18:47,290 --> 00:18:50,680
room we had just one screen and one

00:18:49,000 --> 00:18:53,380
laptop and someone was always at the

00:18:50,680 --> 00:18:54,790
keyboard and we were like really

00:18:53,380 --> 00:18:56,740
deploying Cloud Foundry there and then

00:18:54,790 --> 00:19:00,130
the manager came by and he just looked

00:18:56,740 --> 00:19:02,230
at us and like why are you in this room

00:19:00,130 --> 00:19:04,960
all day you could like go out there's

00:19:02,230 --> 00:19:06,310
like more screens more keyboards I don't

00:19:04,960 --> 00:19:08,980
really understand what you're doing here

00:19:06,310 --> 00:19:11,170
and that's kind of a thing that happens

00:19:08,980 --> 00:19:13,570
so I mean no one in the organization is

00:19:11,170 --> 00:19:15,580
used to working like that so it's like

00:19:13,570 --> 00:19:17,800
that's kind of the actual challenge I

00:19:15,580 --> 00:19:19,390
mean the manager was nice so he was easy

00:19:17,800 --> 00:19:22,210
to convince that this is the best way to

00:19:19,390 --> 00:19:26,410
share the knowledge and things but still

00:19:22,210 --> 00:19:29,040
I mean it's kind of like it's just a new

00:19:26,410 --> 00:19:31,000
way of working

00:19:29,040 --> 00:19:32,410
so what's also like from an

00:19:31,000 --> 00:19:34,120
organizational perspective what's

00:19:32,410 --> 00:19:35,890
different is risk management so

00:19:34,120 --> 00:19:39,610
typically you do a risk management but

00:19:35,890 --> 00:19:40,840
for open source cloud foundry it's well

00:19:39,610 --> 00:19:43,480
it's not too different actually I think

00:19:40,840 --> 00:19:46,330
the platform has the same risks per se

00:19:43,480 --> 00:19:48,460
so you can like it the risk of being

00:19:46,330 --> 00:19:50,500
offline of being hacked whatever but

00:19:48,460 --> 00:19:53,320
just the probability is higher in some

00:19:50,500 --> 00:19:55,120
places because there's more you can do

00:19:53,320 --> 00:19:55,879
as an operator and there's more that can

00:19:55,120 --> 00:19:57,589
go wrong

00:19:55,879 --> 00:20:00,199
while you're doing it so the chances

00:19:57,589 --> 00:20:02,629
kind of are higher that you'd break it

00:20:00,199 --> 00:20:04,519
like not on purpose but because of some

00:20:02,629 --> 00:20:06,729
some weird changes also because you'd

00:20:04,519 --> 00:20:11,059
probably don't have a perfect testing

00:20:06,729 --> 00:20:13,249
setup so there's just a bigger risk you

00:20:11,059 --> 00:20:15,549
need to deal with also what's different

00:20:13,249 --> 00:20:18,019
is that there's just no risk outsourcing

00:20:15,549 --> 00:20:20,179
so typically what an enterprise does

00:20:18,019 --> 00:20:22,249
okay we have a risk here so let's just

00:20:20,179 --> 00:20:25,279
find someone we can pay who covers this

00:20:22,249 --> 00:20:27,049
risk and that's it but you can't do this

00:20:25,279 --> 00:20:29,869
with open sewers right so you need to

00:20:27,049 --> 00:20:33,139
like accept the risk or find someone who

00:20:29,869 --> 00:20:35,989
is willing to do whatever to minimize

00:20:33,139 --> 00:20:38,479
this risk but even what it like ends up

00:20:35,989 --> 00:20:41,629
with all you can do is like prepare an

00:20:38,479 --> 00:20:43,699
obscure um so like by learning and

00:20:41,629 --> 00:20:45,829
having these things there in place

00:20:43,699 --> 00:20:50,869
that's what you can really do to

00:20:45,829 --> 00:20:52,219
minimize the risk from a closest

00:20:50,869 --> 00:20:53,899
perspective I mean there's lots of

00:20:52,219 --> 00:20:56,569
processes involved and typically

00:20:53,899 --> 00:20:58,519
organizations have lots of processes to

00:20:56,569 --> 00:21:01,879
get things to production so that's where

00:20:58,519 --> 00:21:04,339
they really are like finger pointing

00:21:01,879 --> 00:21:08,779
like who's gonna click the button who's

00:21:04,339 --> 00:21:11,839
gonna do this and that and that's really

00:21:08,779 --> 00:21:15,169
interesting so for example we've had

00:21:11,839 --> 00:21:18,379
build packs um so I mean we we got the

00:21:15,169 --> 00:21:20,989
bill packs from from github and we just

00:21:18,379 --> 00:21:22,519
built the bill pecs ourselves and take

00:21:20,989 --> 00:21:25,519
them to production so we have like

00:21:22,519 --> 00:21:27,619
conkers up and running it's just using

00:21:25,519 --> 00:21:29,779
the standard build pack package' but

00:21:27,619 --> 00:21:31,609
it's a binary in Indian or a zip file

00:21:29,779 --> 00:21:33,859
with with the scripts and things and we

00:21:31,609 --> 00:21:36,709
built this ourselves so it's like not

00:21:33,859 --> 00:21:39,139
that we deploy like pre-compiled things

00:21:36,709 --> 00:21:41,179
that we get from somewhere but this is

00:21:39,139 --> 00:21:42,739
actually what like the team builds and

00:21:41,179 --> 00:21:44,719
this is also new in an enterprise

00:21:42,739 --> 00:21:47,449
context in most places because usually

00:21:44,719 --> 00:21:50,329
they just buy software and run it but

00:21:47,449 --> 00:21:53,089
now this is really about taking like

00:21:50,329 --> 00:21:54,739
infrastructure code compiling it by

00:21:53,089 --> 00:21:58,369
yourself and then taking it to

00:21:54,739 --> 00:21:59,809
production there's also like we compile

00:21:58,369 --> 00:22:01,909
the build pegs in the first place and

00:21:59,809 --> 00:22:03,589
then wrote them out and so you can see

00:22:01,909 --> 00:22:05,599
that this is a real thing there's also

00:22:03,589 --> 00:22:08,150
some failures here which I liked it on

00:22:05,599 --> 00:22:10,580
purpose so they work

00:22:08,150 --> 00:22:12,440
these five lines but just that you can

00:22:10,580 --> 00:22:14,300
see I mean you have pipeline failures

00:22:12,440 --> 00:22:17,060
also so that's like what you need to

00:22:14,300 --> 00:22:21,170
deal with next to build packs we also

00:22:17,060 --> 00:22:23,570
have like upgrade automation so we are

00:22:21,170 --> 00:22:26,210
like still working on that but at least

00:22:23,570 --> 00:22:27,830
what we did for the deployment we rolled

00:22:26,210 --> 00:22:31,430
out and deployed everything with

00:22:27,830 --> 00:22:33,350
conquers pipeline so this is the

00:22:31,430 --> 00:22:36,110
conquerors pipeline to deploy Bosch and

00:22:33,350 --> 00:22:37,760
to deploy Cloud Foundry itself so it's

00:22:36,110 --> 00:22:41,180
not too complex we don't do a lot of

00:22:37,760 --> 00:22:44,810
resource handling in conquers resources

00:22:41,180 --> 00:22:46,820
we do that ourselves but as you can see

00:22:44,810 --> 00:22:48,680
you need to build this maintain it

00:22:46,820 --> 00:22:51,680
understand it and you have a good

00:22:48,680 --> 00:22:53,630
workflow in the end so that's pretty

00:22:51,680 --> 00:22:56,300
nice once you understand it but it's

00:22:53,630 --> 00:22:58,820
like a huge learning curve to get

00:22:56,300 --> 00:23:00,650
started for the team also what turned

00:22:58,820 --> 00:23:02,540
out to be really really great is in

00:23:00,650 --> 00:23:05,030
designing these pipelines to first

00:23:02,540 --> 00:23:07,970
configure and upload things then to

00:23:05,030 --> 00:23:09,530
deploy things and then to smoke tests so

00:23:07,970 --> 00:23:12,170
that's like the standard pattern we use

00:23:09,530 --> 00:23:14,480
like to really always have a smoke test

00:23:12,170 --> 00:23:18,310
at the end so if the deployment fails

00:23:14,480 --> 00:23:20,690
then the smoke test latest should like

00:23:18,310 --> 00:23:24,680
discover that the deployment actually

00:23:20,690 --> 00:23:27,980
has failed so we intend to like really

00:23:24,680 --> 00:23:31,460
build and automate but there's like

00:23:27,980 --> 00:23:33,670
little time and so much to code so what

00:23:31,460 --> 00:23:37,100
we want to do is like automated release

00:23:33,670 --> 00:23:41,300
integration testing before we actually

00:23:37,100 --> 00:23:44,030
deploy it to like use a foundation

00:23:41,300 --> 00:23:46,640
that's being used we want to like bundle

00:23:44,030 --> 00:23:49,460
things and download all these things

00:23:46,640 --> 00:23:52,670
like before we deploy them we also have

00:23:49,460 --> 00:23:55,100
a git ops workflow that's that works of

00:23:52,670 --> 00:23:57,050
course but we also want to like improve

00:23:55,100 --> 00:24:00,770
and streamline that so there's there's

00:23:57,050 --> 00:24:02,390
more to come but yeah that's like kind

00:24:00,770 --> 00:24:05,780
of the the process we have around the

00:24:02,390 --> 00:24:08,030
platform but there's more so like for

00:24:05,780 --> 00:24:10,610
support there's like literally no

00:24:08,030 --> 00:24:13,070
process anymore but what you can do and

00:24:10,610 --> 00:24:15,290
what what the company needs to do is

00:24:13,070 --> 00:24:17,330
like get involved in the community so

00:24:15,290 --> 00:24:20,480
there's like lots of places where you

00:24:17,330 --> 00:24:21,410
can get involved contribute give back so

00:24:20,480 --> 00:24:24,700
there's this lecture

00:24:21,410 --> 00:24:27,260
obviously which is like really great

00:24:24,700 --> 00:24:30,500
there's guitar lots of projects you can

00:24:27,260 --> 00:24:33,860
get involved in issues resources

00:24:30,500 --> 00:24:36,710
everywhere we have like Twitter mailing

00:24:33,860 --> 00:24:39,290
lists also but in the end there's like

00:24:36,710 --> 00:24:42,200
no sls on all of these kind of things so

00:24:39,290 --> 00:24:44,570
if you need support you can hope that

00:24:42,200 --> 00:24:46,340
someone is willing to give support but

00:24:44,570 --> 00:24:48,380
you can't rely on that so that's like

00:24:46,340 --> 00:24:51,740
also something the enterprise needs to

00:24:48,380 --> 00:24:55,910
deal with I mean also when it comes to

00:24:51,740 --> 00:24:58,490
bug fixing and patching it's we can't

00:24:55,910 --> 00:25:00,380
really patch currently so we need to

00:24:58,490 --> 00:25:01,910
learn go like that's the first thing

00:25:00,380 --> 00:25:03,470
then you need to compile it then you

00:25:01,910 --> 00:25:05,990
need to create the Boche release so

00:25:03,470 --> 00:25:09,470
that's a huge chain of things you need

00:25:05,990 --> 00:25:11,930
to do to really patch it yourself so

00:25:09,470 --> 00:25:14,750
that's that's a huge thing

00:25:11,930 --> 00:25:17,360
um that's still like for next year

00:25:14,750 --> 00:25:19,880
there's also once you patch it or fix it

00:25:17,360 --> 00:25:21,440
please give it back so that's like also

00:25:19,880 --> 00:25:26,030
really difficult or if you do other

00:25:21,440 --> 00:25:30,440
things for for because companies usually

00:25:26,030 --> 00:25:33,050
don't open source stuff and the last

00:25:30,440 --> 00:25:35,480
part now is about the culture so the

00:25:33,050 --> 00:25:38,050
first thing we had is an agile setting

00:25:35,480 --> 00:25:40,580
so this was like the base of what we do

00:25:38,050 --> 00:25:42,230
because what we want to do is like

00:25:40,580 --> 00:25:45,560
deliver well yeah and we want to do it

00:25:42,230 --> 00:25:47,600
fast that's really important and like

00:25:45,560 --> 00:25:49,850
that involves a lot of things because

00:25:47,600 --> 00:25:52,310
it's not the way people used to work

00:25:49,850 --> 00:25:54,740
before so it's also like not only are

00:25:52,310 --> 00:25:56,840
these technological and tooling changes

00:25:54,740 --> 00:25:58,820
it's also the way they work together

00:25:56,840 --> 00:26:01,280
change so we have a backlog is

00:25:58,820 --> 00:26:03,650
prioritized we have stand-up meetings we

00:26:01,280 --> 00:26:06,110
do different forms of collaboration like

00:26:03,650 --> 00:26:08,000
paring mob programming and things so

00:26:06,110 --> 00:26:09,980
that's like also really a challenge for

00:26:08,000 --> 00:26:11,960
the people to adapt to that I mean it

00:26:09,980 --> 00:26:14,300
takes some time now they are used to it

00:26:11,960 --> 00:26:17,000
which is great and now they are like in

00:26:14,300 --> 00:26:19,010
a state where they can really reap the

00:26:17,000 --> 00:26:22,190
benefits they gained from this kind of

00:26:19,010 --> 00:26:25,760
thing but it just takes time and that's

00:26:22,190 --> 00:26:30,170
like what it what's really important to

00:26:25,760 --> 00:26:31,730
say also failure happens I mean there's

00:26:30,170 --> 00:26:35,090
a lot of companies where there's a

00:26:31,730 --> 00:26:37,310
really bad blame culture so

00:26:35,090 --> 00:26:40,520
if you want to do open sewers get rid of

00:26:37,310 --> 00:26:42,710
that first luckily we did not have to

00:26:40,520 --> 00:26:44,630
deal with these kind of things but still

00:26:42,710 --> 00:26:47,030
with open source Cloud Foundry is really

00:26:44,630 --> 00:26:49,580
easy to do things wrong or to get things

00:26:47,030 --> 00:26:54,320
wrong we also had like kind of states

00:26:49,580 --> 00:26:55,790
where it wasn't that that great but it's

00:26:54,320 --> 00:26:57,950
like really important to not blame

00:26:55,790 --> 00:26:59,750
people for doing that because if you

00:26:57,950 --> 00:27:01,780
don't take the risk and doing things and

00:26:59,750 --> 00:27:04,640
then it's gonna stand still and right

00:27:01,780 --> 00:27:06,950
but also on the other hand appreciate if

00:27:04,640 --> 00:27:09,650
someone did a good job so that's really

00:27:06,950 --> 00:27:12,470
really important we also had a great

00:27:09,650 --> 00:27:14,090
party after we went live so that's like

00:27:12,470 --> 00:27:17,750
also really important just like

00:27:14,090 --> 00:27:19,580
celebrating and and achieving what you

00:27:17,750 --> 00:27:23,030
have like celebrating what you've

00:27:19,580 --> 00:27:26,210
achieved which brings me to the last

00:27:23,030 --> 00:27:28,310
point here about giving back so I think

00:27:26,210 --> 00:27:32,150
if you want to do open source cloud

00:27:28,310 --> 00:27:33,590
foundry you're like kind of you need to

00:27:32,150 --> 00:27:36,530
give back because you live from the

00:27:33,590 --> 00:27:38,660
community and the only thing that you

00:27:36,530 --> 00:27:41,780
can do is like to contribute back so

00:27:38,660 --> 00:27:43,880
there's like lots of ways to contribute

00:27:41,780 --> 00:27:47,090
you can share what you do how you do it

00:27:43,880 --> 00:27:49,820
you can raise issues contribute patches

00:27:47,090 --> 00:27:53,660
get involved that's really really an

00:27:49,820 --> 00:27:56,180
important thing and so we just started

00:27:53,660 --> 00:27:58,100
with this and we came up with this Cloud

00:27:56,180 --> 00:28:00,470
Foundry operators guide where we want to

00:27:58,100 --> 00:28:04,520
share how we actually did it so for the

00:28:00,470 --> 00:28:07,460
technical details you can go here it's

00:28:04,520 --> 00:28:09,980
like really the first draft we will

00:28:07,460 --> 00:28:12,170
update and evolve this over time but

00:28:09,980 --> 00:28:14,480
this is kind of the the high-level

00:28:12,170 --> 00:28:16,490
documentation of how we do the the

00:28:14,480 --> 00:28:19,760
scripts the architecture of our

00:28:16,490 --> 00:28:21,530
directories the things so that's have a

00:28:19,760 --> 00:28:24,080
look there it's gonna be updated over

00:28:21,530 --> 00:28:27,080
time you can some github also you can

00:28:24,080 --> 00:28:30,620
participate and write the documentation

00:28:27,080 --> 00:28:31,400
or improve it so yeah would we do this

00:28:30,620 --> 00:28:34,490
again

00:28:31,400 --> 00:28:36,800
definitely so that's it was really

00:28:34,490 --> 00:28:39,650
interesting everyone learned a lot so

00:28:36,800 --> 00:28:42,170
that was really really great

00:28:39,650 --> 00:28:44,360
everyone like also grew personally

00:28:42,170 --> 00:28:46,940
because of a huge amount of challenges

00:28:44,360 --> 00:28:48,690
and tools we learned but there's also

00:28:46,940 --> 00:28:52,840
like

00:28:48,690 --> 00:28:55,030
consider this if like the past is really

00:28:52,840 --> 00:28:57,490
part of your business strategy or you

00:28:55,030 --> 00:28:59,710
can also like run Cloud Foundry next to

00:28:57,490 --> 00:29:02,710
some some vendor but you really need to

00:28:59,710 --> 00:29:04,600
be dedicated on running the open-source

00:29:02,710 --> 00:29:06,280
version if you're not dedicated and you

00:29:04,600 --> 00:29:09,790
don't want to invest in these kind of

00:29:06,280 --> 00:29:12,190
things then you better not do it so

00:29:09,790 --> 00:29:16,540
thanks for joining if you have any

00:29:12,190 --> 00:29:21,330
questions I'm I'm still here yeah and

00:29:16,540 --> 00:29:21,330
also on Twitter thanks

00:29:21,750 --> 00:29:24,289

YouTube URL: https://www.youtube.com/watch?v=k1uPdlW_lP0


