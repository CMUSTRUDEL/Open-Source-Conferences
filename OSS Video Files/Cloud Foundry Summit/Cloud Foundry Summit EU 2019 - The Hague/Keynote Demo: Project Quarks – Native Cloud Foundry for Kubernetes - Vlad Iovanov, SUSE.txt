Title: Keynote Demo: Project Quarks – Native Cloud Foundry for Kubernetes - Vlad Iovanov, SUSE
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Keynote Demo: Project Quarks – Native Cloud Foundry for Kubernetes - Vlad Iovanov, Software Architect for the SUSE Cloud Foundry Project, SUSE 

A quick intro into how Cloud Foundry is deployed on top of Kubernetes using the Quarks CF Operator. 

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:02,690
thank you very much

00:00:12,230 --> 00:00:19,700
all right so I'll be talking about

00:00:15,769 --> 00:00:23,509
project quarks which is an effort to run

00:00:19,700 --> 00:00:26,210
Cloud Foundry natively on kubernetes but

00:00:23,509 --> 00:00:28,930
first I would just like to talk about a

00:00:26,210 --> 00:00:31,550
few numbers that I find very interesting

00:00:28,930 --> 00:00:34,489
in our community we have hundreds of

00:00:31,550 --> 00:00:37,489
developers that are working to create

00:00:34,489 --> 00:00:41,120
new software and most of that gets

00:00:37,489 --> 00:00:44,270
concentrated in CF deployment this repo

00:00:41,120 --> 00:00:49,280
that brings in more than 30 Bosh

00:00:44,270 --> 00:00:54,110
releases that total up to more than 115

00:00:49,280 --> 00:00:56,570
jobs and what you end up with is around

00:00:54,110 --> 00:01:00,050
a hundred and ninety software packages

00:00:56,570 --> 00:01:04,720
that get integrated and released every

00:01:00,050 --> 00:01:07,189
seven days on average and this is a

00:01:04,720 --> 00:01:11,840
awesome cadence because all of that

00:01:07,189 --> 00:01:13,579
software works together and I want us to

00:01:11,840 --> 00:01:15,500
keep this in mind because this is

00:01:13,579 --> 00:01:20,960
something that we want to bring with us

00:01:15,500 --> 00:01:23,090
when we go to the kubernetes world so on

00:01:20,960 --> 00:01:24,770
the left here we have a bunch of bubbles

00:01:23,090 --> 00:01:26,630
a hundred and ninety bubbles

00:01:24,770 --> 00:01:29,359
representing all of these packages and

00:01:26,630 --> 00:01:32,270
they're color-coded by the release that

00:01:29,359 --> 00:01:35,959
they're a part of so you want to deploy

00:01:32,270 --> 00:01:38,560
all of these on the left to the VMS on

00:01:35,959 --> 00:01:41,899
the right so this is CF deployment 101

00:01:38,560 --> 00:01:46,270
you get a deployment manifest and you

00:01:41,899 --> 00:01:46,270
deploy and everything works perfectly

00:01:46,420 --> 00:01:55,329
but as you probably know there's already

00:01:50,959 --> 00:01:58,849
a containerized version of cloud foundry

00:01:55,329 --> 00:02:03,170
we use a tool called fissile to

00:01:58,849 --> 00:02:06,079
containerize and build docker images and

00:02:03,170 --> 00:02:08,869
what happens is at Build time we take a

00:02:06,079 --> 00:02:10,729
sort of a deployment manifest and we

00:02:08,869 --> 00:02:14,300
take all of these packages and create

00:02:10,729 --> 00:02:16,930
some docker images out of it

00:02:14,300 --> 00:02:20,870
all of these packages are fitted in one

00:02:16,930 --> 00:02:23,720
image layer and then with those images

00:02:20,870 --> 00:02:25,490
with those specially crafted images plus

00:02:23,720 --> 00:02:29,360
some help

00:02:25,490 --> 00:02:33,410
you can then deploy on kubernetes now

00:02:29,360 --> 00:02:36,020
this works but it's not that flexible so

00:02:33,410 --> 00:02:38,600
you need to make a decision at build

00:02:36,020 --> 00:02:40,810
time on what you include in your

00:02:38,600 --> 00:02:43,730
deployments so there's not very flexible

00:02:40,810 --> 00:02:46,430
having a large image is also not that

00:02:43,730 --> 00:02:48,590
great and this deployment manifest that

00:02:46,430 --> 00:02:51,560
sits here in the middle that's not

00:02:48,590 --> 00:02:55,280
actually the same CF deployment manifest

00:02:51,560 --> 00:02:58,820
that we all know it's actually different

00:02:55,280 --> 00:03:02,210
and it's hard to maintain so we want to

00:02:58,820 --> 00:03:04,670
make things better so this is where the

00:03:02,210 --> 00:03:07,670
kubernetes operator that's a part of

00:03:04,670 --> 00:03:10,730
project quirks comes in you'll notice

00:03:07,670 --> 00:03:14,320
here that each release now has its own

00:03:10,730 --> 00:03:16,700
docker image we build this automatically

00:03:14,320 --> 00:03:18,200
every time there's a new boss release

00:03:16,700 --> 00:03:21,380
every time there's a new stem cell

00:03:18,200 --> 00:03:23,360
version we have pipelines that create

00:03:21,380 --> 00:03:26,380
these docker images version them and

00:03:23,360 --> 00:03:28,850
they're ready for anyone to use them and

00:03:26,380 --> 00:03:32,420
you'll see that the deployment manifest

00:03:28,850 --> 00:03:35,420
is being used at runtime which is great

00:03:32,420 --> 00:03:37,880
and furthermore it's not a deployment

00:03:35,420 --> 00:03:40,370
manifest it's the exact same deployment

00:03:37,880 --> 00:03:44,240
manifest that you use in the VM world it

00:03:40,370 --> 00:03:47,360
has you need some ops files to tweak it

00:03:44,240 --> 00:03:52,490
a bit but you consume the exact same

00:03:47,360 --> 00:03:55,580
deployment manifest bonus

00:03:52,490 --> 00:03:57,500
there's no Monnett involved anymore so

00:03:55,580 --> 00:04:00,620
in the past we've been treating

00:03:57,500 --> 00:04:03,320
containers as if they were kind of VMs

00:04:00,620 --> 00:04:07,070
you would exec into it and you had

00:04:03,320 --> 00:04:09,470
monitor this is no longer the case you

00:04:07,070 --> 00:04:15,230
actually run one process per container

00:04:09,470 --> 00:04:19,070
and this is all made possible by the BPM

00:04:15,230 --> 00:04:23,750
bars process manager work that's been

00:04:19,070 --> 00:04:28,660
going on okay so with that I'll switch

00:04:23,750 --> 00:04:32,980
to demo what we'll be doing here is I'll

00:04:28,660 --> 00:04:32,980
deploy the CF operator on

00:04:44,349 --> 00:04:49,020
hopefully I'll get my internet

00:04:46,330 --> 00:04:49,020
connection back

00:04:52,439 --> 00:05:02,969
okay all right so I don't have anything

00:04:59,159 --> 00:05:03,749
deployed here it's just a gke kubernetes

00:05:02,969 --> 00:05:06,989
environment

00:05:03,749 --> 00:05:13,679
I have tiller and I'm going to use helm

00:05:06,989 --> 00:05:21,059
to set up the CF operator simple helm

00:05:13,679 --> 00:05:25,229
install we're not going to watch for

00:05:21,059 --> 00:05:29,849
pods and see if the operator is up and

00:05:25,229 --> 00:05:33,149
running it's going to come online in a

00:05:29,849 --> 00:05:39,899
few seconds there we go and now the

00:05:33,149 --> 00:05:42,089
operator is installed we have we have a

00:05:39,899 --> 00:05:45,569
few custom resources that get created as

00:05:42,089 --> 00:05:48,689
you install the operator four of them to

00:05:45,569 --> 00:05:51,389
be exact one of them is called a Bosch

00:05:48,689 --> 00:05:53,729
deployment so there is a custom resource

00:05:51,389 --> 00:05:57,389
now that kubernetes understands that's

00:05:53,729 --> 00:05:59,849
called a Bosch deployment when we create

00:05:57,389 --> 00:06:03,539
these the operator will take notice and

00:05:59,849 --> 00:06:07,589
will start taking action so that the

00:06:03,539 --> 00:06:10,649
desired world in the manifest is the

00:06:07,589 --> 00:06:16,379
same as the the actual world we also

00:06:10,649 --> 00:06:19,229
have a few extended custom resources for

00:06:16,379 --> 00:06:22,279
jobs secrets and stateful sets these

00:06:19,229 --> 00:06:25,199
bring in new functionality to kubernetes

00:06:22,279 --> 00:06:27,719
that's not there so a few Bosch features

00:06:25,199 --> 00:06:31,949
that aren't currently available on on

00:06:27,719 --> 00:06:37,339
kubernetes okay so now that we have the

00:06:31,949 --> 00:06:40,019
operator we can go ahead and install SEF

00:06:37,339 --> 00:06:42,149
so this is the containerized version of

00:06:40,019 --> 00:06:47,189
cloud foundry again a simple harm

00:06:42,149 --> 00:06:51,539
install we run it and this takes about

00:06:47,189 --> 00:06:53,819
ten minutes to go from helm install to

00:06:51,539 --> 00:06:55,529
being ready to run

00:06:53,819 --> 00:06:58,860
once all the docker images are

00:06:55,529 --> 00:07:01,339
downloaded so I will be switching to an

00:06:58,860 --> 00:07:05,700
environment that I've already deployed

00:07:01,339 --> 00:07:07,720
first though I would like to show you

00:07:05,700 --> 00:07:11,140
something interesting about the helm

00:07:07,720 --> 00:07:14,440
chart and something that I alluded to

00:07:11,140 --> 00:07:16,150
earlier so it looks like a normal home

00:07:14,440 --> 00:07:19,060
chart you have your values the AMA

00:07:16,150 --> 00:07:22,690
templates and so on but the important

00:07:19,060 --> 00:07:25,720
part is this asset here which is CF

00:07:22,690 --> 00:07:28,240
deployment if you take a look at it it's

00:07:25,720 --> 00:07:32,170
the exact see of deployment llamó that

00:07:28,240 --> 00:07:35,920
you take from the github repo so this

00:07:32,170 --> 00:07:41,350
plus some ops files will give you an

00:07:35,920 --> 00:07:47,550
installation on on kubernetes so what

00:07:41,350 --> 00:07:47,550
happens I'll switch to the live cluster

00:07:51,600 --> 00:07:57,910
alright so this has already been

00:07:53,800 --> 00:08:03,790
deployed what that other operator is

00:07:57,910 --> 00:08:06,700
doing now it's it's running a bunch of

00:08:03,790 --> 00:08:09,280
commands and a bunch of jobs to figure

00:08:06,700 --> 00:08:13,030
out what the Bosch process information

00:08:09,280 --> 00:08:15,730
is it calculates variables it

00:08:13,030 --> 00:08:18,850
interpolates ops files and so on until

00:08:15,730 --> 00:08:20,950
it gets to to the desired manifest so

00:08:18,850 --> 00:08:24,130
everything interpolated everything

00:08:20,950 --> 00:08:27,610
generated and then it'll start deploying

00:08:24,130 --> 00:08:30,310
these pods which are actually parts of

00:08:27,610 --> 00:08:35,260
stateful sets and you'll see that there

00:08:30,310 --> 00:08:38,200
is one pod for each instance group that

00:08:35,260 --> 00:08:42,040
we have in CF deployment and of course

00:08:38,200 --> 00:08:44,890
multiple so one process per container

00:08:42,040 --> 00:08:48,220
meaning we have many containers here for

00:08:44,890 --> 00:08:49,780
each for each instance group this

00:08:48,220 --> 00:08:52,570
particular installation comes with

00:08:49,780 --> 00:08:55,000
ireenie which is amazing so it already

00:08:52,570 --> 00:08:57,580
has an app deployed on it meaning

00:08:55,000 --> 00:08:59,970
whenever you see a push to this Cloud

00:08:57,580 --> 00:09:04,000
Foundry that we've deployed on on

00:08:59,970 --> 00:09:09,790
kubernetes you actually get an app on on

00:09:04,000 --> 00:09:13,050
kubernetes itself so I just like to show

00:09:09,790 --> 00:09:13,050
you that the app is there

00:09:18,130 --> 00:09:29,500
and that I can curl it there we go

00:09:22,990 --> 00:09:32,470
and this sometimes takes a bit but yes

00:09:29,500 --> 00:09:35,370
logs also work logging is difficult so I

00:09:32,470 --> 00:09:40,600
really wanted to show this this working

00:09:35,370 --> 00:09:44,130
alright that concludes the demo part I

00:09:40,600 --> 00:09:46,839
would like now to just help you find us

00:09:44,130 --> 00:09:48,730
there's a github project you can find us

00:09:46,839 --> 00:09:51,009
on slack we have a bunch of stuff

00:09:48,730 --> 00:09:53,500
happening here at Summit there's a

00:09:51,009 --> 00:09:56,440
awesome talk today later on that

00:09:53,500 --> 00:09:59,110
explains exactly how we've built the

00:09:56,440 --> 00:10:01,139
operator and goes into a deep dive there

00:09:59,110 --> 00:10:03,670
are hands-on labs today and tomorrow

00:10:01,139 --> 00:10:06,100
where you can do exactly what I've done

00:10:03,670 --> 00:10:08,319
here but you'll actually wait and see

00:10:06,100 --> 00:10:15,269
exactly how everything gets deployed and

00:10:08,319 --> 00:10:15,269

YouTube URL: https://www.youtube.com/watch?v=PBx1tD7XUw8


