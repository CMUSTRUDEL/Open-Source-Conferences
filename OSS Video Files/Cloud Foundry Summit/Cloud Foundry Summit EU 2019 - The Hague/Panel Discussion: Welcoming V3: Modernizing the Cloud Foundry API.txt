Title: Panel Discussion: Welcoming V3: Modernizing the Cloud Foundry API
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Panel Discussion: Welcoming V3: Modernizing the Cloud Foundry API - Piyali Banerjee, Abby Chau, Reid Mitchell, Zach Robinson & Luan Santos, Pivotal 

Maintaining and consuming the legacy v2 API has caused frustration with the feature development process for CAPI (Cloud Controller API), CLI, and other CF teams, leading to the desire and need of a new and improved API: v3! The V3 Acceleration Team (VAT) was created to accelerate the deprecation of the v2 API. Clients, including cf CLI, are moving to primarily access v3 endpoints to empower end-users to use exciting v3-exclusive features. CF contributors, such as the Services API team, are developing v3-style features and app developers are using the GA-ed v3 endpoints. There has been a growing list of questions from the CF community on v3.  So whatâ€™s new in v3? How have the pain points from v2 been addressed? What is the transition experience like? In this session, panelists from CAPI, CLI, and VAT will address these topics, drawing from their experience designing and developing v3! 

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:07,440
all right I'll get started can everyone

00:00:01,770 --> 00:00:10,290
hear me cool hi everyone I'm P Ali and I

00:00:07,440 --> 00:00:12,679
am a software engineer on the v3

00:00:10,290 --> 00:00:15,360
acceleration team based in San Francisco

00:00:12,679 --> 00:00:17,760
and welcome to the panel discussion on

00:00:15,360 --> 00:00:21,750
welcoming v3 modernizing the Cloud

00:00:17,760 --> 00:00:23,939
Foundry API so here with me we have a

00:00:21,750 --> 00:00:25,680
set of amazing panelists so i'd like to

00:00:23,939 --> 00:00:30,840
take a minute for them to introduce

00:00:25,680 --> 00:00:34,829
themselves pretty great hello hi I am

00:00:30,840 --> 00:00:36,059
Zach Robinson I'm a longtime contributor

00:00:34,829 --> 00:00:39,000
to cloud foundry have been doing it for

00:00:36,059 --> 00:00:40,469
about six years so worked on on the

00:00:39,000 --> 00:00:43,170
cloud controller and the API for quite a

00:00:40,469 --> 00:00:50,430
while and right now I work in product at

00:00:43,170 --> 00:00:53,520
pivotal hey everyone I'm Abbey Chow I'm

00:00:50,430 --> 00:00:56,489
the current CFC Li p.m. and also v3

00:00:53,520 --> 00:01:00,600
acceleration team copia I started on the

00:00:56,489 --> 00:01:02,129
CFC Li about April of 2018 you some of

00:01:00,600 --> 00:01:08,400
you might know me from github issues

00:01:02,129 --> 00:01:10,950
where I apologize in events so hi I'm

00:01:08,400 --> 00:01:14,570
Reed Mitchell I'm also an engineer on

00:01:10,950 --> 00:01:18,409
the v3 acceleration team prior to this I

00:01:14,570 --> 00:01:22,170
was on the apps manager team working on

00:01:18,409 --> 00:01:23,939
working you know on the pivotal close

00:01:22,170 --> 00:01:32,159
source for an end to the cloud

00:01:23,939 --> 00:01:33,810
controller so the whole idea for this

00:01:32,159 --> 00:01:35,220
panel and why I thought it would be

00:01:33,810 --> 00:01:37,770
interesting to make it a panel rather

00:01:35,220 --> 00:01:39,960
than a project update session is because

00:01:37,770 --> 00:01:42,119
I feel like there are several sides to

00:01:39,960 --> 00:01:43,680
this story of modernizing an API there's

00:01:42,119 --> 00:01:45,780
the side of the people who are actually

00:01:43,680 --> 00:01:48,329
developing the API and there's also the

00:01:45,780 --> 00:01:50,040
end users and I thought this would be a

00:01:48,329 --> 00:01:52,439
great platform for people to come

00:01:50,040 --> 00:01:54,960
especially who are in teams that are

00:01:52,439 --> 00:01:56,399
looking to update from v2 to v3 and to

00:01:54,960 --> 00:01:58,350
hopefully answer questions that they

00:01:56,399 --> 00:02:00,270
might have so before I go into this I

00:01:58,350 --> 00:02:02,909
was just wondering what who you all are

00:02:00,270 --> 00:02:05,009
who are the audience so who in the

00:02:02,909 --> 00:02:08,190
audience raise your hand if you are in a

00:02:05,009 --> 00:02:09,959
team that is looking to switch to v2 to

00:02:08,190 --> 00:02:13,900
v3 or are in the currently in the

00:02:09,959 --> 00:02:16,739
process of doing so yeah very

00:02:13,900 --> 00:02:21,360
cool and raise your hand if you are

00:02:16,739 --> 00:02:28,420
looking to be a contributor to the API

00:02:21,360 --> 00:02:30,400
itself yeah cool and yeah and raise your

00:02:28,420 --> 00:02:31,629
hand and I just wanted to know for

00:02:30,400 --> 00:02:34,780
people who didn't raise their hands if

00:02:31,629 --> 00:02:40,840
anyone would want to share what other

00:02:34,780 --> 00:02:45,909
connection they have to the v3 API okay

00:02:40,840 --> 00:02:48,430
others great so going in first I thought

00:02:45,909 --> 00:02:50,980
it would be interesting to explore the

00:02:48,430 --> 00:02:53,920
history or the reason of why there is a

00:02:50,980 --> 00:02:56,739
need for a v3 in the first place um so

00:02:53,920 --> 00:02:59,500
Zach I will ask you the question first

00:02:56,739 --> 00:03:03,069
as you're one of the founding fathers of

00:02:59,500 --> 00:03:05,189
v3 you can say um so yv3 what were the

00:03:03,069 --> 00:03:07,870
pain points that needed to be addressed

00:03:05,189 --> 00:03:09,180
yeah I mean there was really quite a

00:03:07,870 --> 00:03:12,069
number of them

00:03:09,180 --> 00:03:16,540
it goes from from the implementation of

00:03:12,069 --> 00:03:17,769
the API itself as well as the structure

00:03:16,540 --> 00:03:20,739
of the presentation of it in the way you

00:03:17,769 --> 00:03:22,750
interact with it so you can kind of

00:03:20,739 --> 00:03:23,889
start maybe with how you interact with

00:03:22,750 --> 00:03:27,099
it maybe that that's the more

00:03:23,889 --> 00:03:28,030
interesting that when we look at early

00:03:27,099 --> 00:03:29,949
cloud front so while you probably

00:03:28,030 --> 00:03:32,290
interacted with just the CLI and maybe

00:03:29,949 --> 00:03:33,909
you don't see some of the underpinnings

00:03:32,290 --> 00:03:36,549
but I know there's quite a few folks out

00:03:33,909 --> 00:03:38,079
there that they'll find that maybe when

00:03:36,549 --> 00:03:39,569
I when I see f.push I actually don't

00:03:38,079 --> 00:03:42,250
want to just type CF push I want to

00:03:39,569 --> 00:03:45,729
upload a package and then I need to

00:03:42,250 --> 00:03:48,519
validate that get a checksum and put

00:03:45,729 --> 00:03:50,079
that into my my tooling to make sure

00:03:48,519 --> 00:03:52,120
when I do change control that you know

00:03:50,079 --> 00:03:53,769
everything flows through and there's

00:03:52,120 --> 00:03:56,079
various steps to kind of handle that and

00:03:53,769 --> 00:03:58,569
so people will build tooling that

00:03:56,079 --> 00:04:00,129
interacts directly with the API and

00:03:58,569 --> 00:04:03,790
where we started with the API was was

00:04:00,129 --> 00:04:06,370
essentially there was one it was just v2

00:04:03,790 --> 00:04:08,590
slash app that was the API it was the

00:04:06,370 --> 00:04:10,150
only thing you could interact with so it

00:04:08,590 --> 00:04:12,489
became hard to do sort of granular

00:04:10,150 --> 00:04:15,129
smaller operations and we found as we

00:04:12,489 --> 00:04:17,409
wanted to do more things and orchestrate

00:04:15,129 --> 00:04:19,120
more things that we've been able to do

00:04:17,409 --> 00:04:20,590
today for example where we can do

00:04:19,120 --> 00:04:23,289
rolling deploys because we orchestrated

00:04:20,590 --> 00:04:24,820
a couple of processes what we needed to

00:04:23,289 --> 00:04:27,669
do was take the app object and break it

00:04:24,820 --> 00:04:29,260
down into smaller parts and so that was

00:04:27,669 --> 00:04:31,419
that was sort of really early on the

00:04:29,260 --> 00:04:34,000
impetus for what we needed a v3 API for

00:04:31,419 --> 00:04:36,669
and why we were gonna do a large

00:04:34,000 --> 00:04:39,909
breaking change the other part being the

00:04:36,669 --> 00:04:42,479
implementation under the hood was a

00:04:39,909 --> 00:04:45,580
really interesting homegrown

00:04:42,479 --> 00:04:49,479
conglomeration of Sinatra Ruby Sinatra

00:04:45,580 --> 00:04:51,610
app as well as some sort of meta

00:04:49,479 --> 00:04:54,460
programming such that basically what

00:04:51,610 --> 00:04:56,080
happened is you would generate an API

00:04:54,460 --> 00:04:57,760
that looked exactly like your your

00:04:56,080 --> 00:04:59,979
database table and it would be a

00:04:57,760 --> 00:05:02,229
one-to-one mapping and there wasn't a

00:04:59,979 --> 00:05:03,820
lot of room in there to to build out any

00:05:02,229 --> 00:05:06,550
interesting workflows you just you just

00:05:03,820 --> 00:05:08,440
dumped the database so there was a

00:05:06,550 --> 00:05:10,900
desire to use something more canonical

00:05:08,440 --> 00:05:13,960
in the Ruby world at least just let's

00:05:10,900 --> 00:05:15,340
make it rails and let's clean up some of

00:05:13,960 --> 00:05:17,200
the stuff to make it a lot simpler for

00:05:15,340 --> 00:05:19,060
people to onboard and use twin that's

00:05:17,200 --> 00:05:23,500
just part of the community and well

00:05:19,060 --> 00:05:25,180
understood okay and I'm happy you

00:05:23,500 --> 00:05:27,010
actually talked about the onboarding

00:05:25,180 --> 00:05:30,070
experience because that's where my next

00:05:27,010 --> 00:05:32,080
question leads um so Reed I'm gonna

00:05:30,070 --> 00:05:34,029
direct this question to you what was it

00:05:32,080 --> 00:05:38,039
like in the onboarding experience to

00:05:34,029 --> 00:05:41,469
this to that especially and also

00:05:38,039 --> 00:05:43,659
discussing the v3 architecture and how

00:05:41,469 --> 00:05:46,810
the onboarding experience was affected

00:05:43,659 --> 00:05:50,380
like that sure yeah so I rolled on to

00:05:46,810 --> 00:05:53,620
the v3 acceleration team of five ish

00:05:50,380 --> 00:05:56,199
months ago and I had not really looked

00:05:53,620 --> 00:05:58,419
at the v2 Cloud Controller codebase at

00:05:56,199 --> 00:06:01,719
all so I sort of dropped jumped right in

00:05:58,419 --> 00:06:05,320
looking at the v3 codebase and so I can

00:06:01,719 --> 00:06:09,610
sort of speak to my experience getting

00:06:05,320 --> 00:06:11,650
accustomed to it I can say that it

00:06:09,610 --> 00:06:14,589
didn't take very long to get used to it

00:06:11,650 --> 00:06:15,699
which i think is is a good thing for

00:06:14,589 --> 00:06:17,529
talking about for thinking about

00:06:15,699 --> 00:06:21,310
external contributors or you know other

00:06:17,529 --> 00:06:24,479
teams diving into the codebase but you

00:06:21,310 --> 00:06:26,490
know it's sort of roughly split into

00:06:24,479 --> 00:06:28,479
controllers

00:06:26,490 --> 00:06:31,659
maybe maybe these terms will be familiar

00:06:28,479 --> 00:06:35,020
to you all if you're familiar with rails

00:06:31,659 --> 00:06:37,930
we've got controllers and actions jobs

00:06:35,020 --> 00:06:41,460
for asynchronous operations that are

00:06:37,930 --> 00:06:43,569
done by the API presenters

00:06:41,460 --> 00:06:47,830
constructing the Chaisson responses that

00:06:43,569 --> 00:06:50,169
we send back I guess I'll leave it at

00:06:47,830 --> 00:06:53,349
that but I can I want to emphasize that

00:06:50,169 --> 00:06:54,880
uh it didn't take very long to get up to

00:06:53,349 --> 00:06:57,160
speed with it and I think it was thanks

00:06:54,880 --> 00:06:59,740
to the work that the people who came

00:06:57,160 --> 00:07:08,590
before me on the team did to sort of

00:06:59,740 --> 00:07:10,360
architect it cleanly and I'm also I next

00:07:08,590 --> 00:07:13,210
we want to move and talk about the new

00:07:10,360 --> 00:07:16,419
features about v3 because v3 is not only

00:07:13,210 --> 00:07:19,889
about transforming the legacy code to

00:07:16,419 --> 00:07:22,120
more readable and easy to develop on

00:07:19,889 --> 00:07:24,729
architecture but it's also about new

00:07:22,120 --> 00:07:27,190
features that are being added so I'm

00:07:24,729 --> 00:07:35,560
gonna direct this question to Zack and

00:07:27,190 --> 00:07:37,270
read about new v3 only features I will

00:07:35,560 --> 00:07:39,909
Zack mentioned the idea of breaking up

00:07:37,270 --> 00:07:42,880
the app into multiple processes I think

00:07:39,909 --> 00:07:45,759
a lot of the new resources that you'll

00:07:42,880 --> 00:07:49,470
see in v3 compared to v2 sort of come

00:07:45,759 --> 00:07:51,490
out of that idea breaking breaking up

00:07:49,470 --> 00:07:54,099
workflows into smaller parts more

00:07:51,490 --> 00:07:58,449
granular parts so we've got process the

00:07:54,099 --> 00:08:01,650
process object and we've got this

00:07:58,449 --> 00:08:04,690
concept of a deployment resource which

00:08:01,650 --> 00:08:07,509
represents an app transitioning from one

00:08:04,690 --> 00:08:10,740
state to another and these are things

00:08:07,509 --> 00:08:14,770
that are enabling as Zack mentioned the

00:08:10,740 --> 00:08:17,560
new rolling deployment feature where you

00:08:14,770 --> 00:08:21,009
have a new web process of an app

00:08:17,560 --> 00:08:23,740
spinning up instances while the old web

00:08:21,009 --> 00:08:25,719
process is spinning down the goal is to

00:08:23,740 --> 00:08:28,210
have zero downtime for your web process

00:08:25,719 --> 00:08:33,579
which is enabled by the new architecture

00:08:28,210 --> 00:08:35,409
in v3 cool yeah I think I think that the

00:08:33,579 --> 00:08:37,719
the key point that that's been

00:08:35,409 --> 00:08:39,969
interested me is is the goal of focus on

00:08:37,719 --> 00:08:43,089
building blocks make the smallest things

00:08:39,969 --> 00:08:44,800
you can build them up and so for us that

00:08:43,089 --> 00:08:46,779
you know we go back to processes and

00:08:44,800 --> 00:08:47,770
that's that that's really often at the

00:08:46,779 --> 00:08:50,740
core of it is that that's what

00:08:47,770 --> 00:08:52,180
represents your running object I want 10

00:08:50,740 --> 00:08:54,839
of these things and I want it to run

00:08:52,180 --> 00:08:57,870
this this bit of code

00:08:54,839 --> 00:08:59,940
and once you have those and you keep it

00:08:57,870 --> 00:09:02,310
really small you can build on that

00:08:59,940 --> 00:09:04,079
and so like like Reid mentioned you know

00:09:02,310 --> 00:09:06,720
you have deployments which all they do

00:09:04,079 --> 00:09:08,610
really is they think about let me create

00:09:06,720 --> 00:09:10,230
a process let me spin up let me add

00:09:08,610 --> 00:09:12,209
instances to a process let me remove

00:09:10,230 --> 00:09:13,260
instances from a process but at the end

00:09:12,209 --> 00:09:15,240
of the day is just orchestrating

00:09:13,260 --> 00:09:17,700
something that's already there

00:09:15,240 --> 00:09:21,510
I look at what we're doing we're adding

00:09:17,700 --> 00:09:22,890
some sidecar support and it's a similar

00:09:21,510 --> 00:09:25,500
thing we can add a new object called

00:09:22,890 --> 00:09:26,790
sidecar which really looks a lot like a

00:09:25,500 --> 00:09:28,589
process which is nice because we already

00:09:26,790 --> 00:09:31,079
have that and you can correlate it to a

00:09:28,589 --> 00:09:32,970
running process so it's just another way

00:09:31,079 --> 00:09:35,190
of taking the building blocks we glue

00:09:32,970 --> 00:09:38,160
them together and we're able to build

00:09:35,190 --> 00:09:39,810
more and more interesting things I think

00:09:38,160 --> 00:09:42,720
what's also like really powerful about

00:09:39,810 --> 00:09:44,010
sort of building it up that way is when

00:09:42,720 --> 00:09:46,470
you have the building blocks sure you

00:09:44,010 --> 00:09:47,760
can build api's that users can grab that

00:09:46,470 --> 00:09:50,100
can do that orchestrate these rolling

00:09:47,760 --> 00:09:51,720
deployments but you don't have to use

00:09:50,100 --> 00:09:54,600
the built-in ones you can now use those

00:09:51,720 --> 00:09:57,570
building blocks yourself as well so if

00:09:54,600 --> 00:09:59,820
you don't want to use exactly the

00:09:57,570 --> 00:10:01,980
rolling to play you know built-in logic

00:09:59,820 --> 00:10:03,779
you could instead generate a couple of

00:10:01,980 --> 00:10:06,750
processes and scale them up and down

00:10:03,779 --> 00:10:09,870
however you see fit or route to them in

00:10:06,750 --> 00:10:11,339
different ways so I think that's that's

00:10:09,870 --> 00:10:12,839
the real key to sort of how we thought

00:10:11,339 --> 00:10:14,399
about it is that building block pattern

00:10:12,839 --> 00:10:16,140
and then always thinking how do you

00:10:14,399 --> 00:10:18,660
layer on top of that layer more and more

00:10:16,140 --> 00:10:21,329
behavior while not making it necessary

00:10:18,660 --> 00:10:26,670
to use each step you can you can use the

00:10:21,329 --> 00:10:29,070
building block as you see fit very cool

00:10:26,670 --> 00:10:32,160
so now that we have a great

00:10:29,070 --> 00:10:36,810
understanding of the new features of v3

00:10:32,160 --> 00:10:39,120
and the reason why I have invited ABI to

00:10:36,810 --> 00:10:41,730
be part of this panel is because as the

00:10:39,120 --> 00:10:45,089
PM of CLI team she is a unique

00:10:41,730 --> 00:10:48,390
experience on a new unique perspective

00:10:45,089 --> 00:10:52,470
on the end user side of things so I

00:10:48,390 --> 00:10:55,440
wanted to ask to you ABI about what the

00:10:52,470 --> 00:10:57,480
experience was like to adapt to v3 or to

00:10:55,440 --> 00:11:00,060
plan for v7 which is the new version of

00:10:57,480 --> 00:11:03,120
the CLI which whose end goal is to only

00:11:00,060 --> 00:11:04,649
use v3 endpoints yeah thanks I think

00:11:03,120 --> 00:11:06,709
there's like some interesting history in

00:11:04,649 --> 00:11:09,929
the CLI side

00:11:06,709 --> 00:11:12,420
2008 time period I think the sort of

00:11:09,929 --> 00:11:14,910
strategy was to do a logic switch so if

00:11:12,420 --> 00:11:16,949
you're on v2 will detect that and bring

00:11:14,910 --> 00:11:20,100
you to the v2 code base if v3 will bring

00:11:16,949 --> 00:11:21,269
you to v3 sort of early on we noticed

00:11:20,100 --> 00:11:24,420
like there was a bunch of pain points

00:11:21,269 --> 00:11:26,069
there number one our customer Cappy was

00:11:24,420 --> 00:11:28,319
telling us that you know integrating

00:11:26,069 --> 00:11:30,360
with the CLI using v3 was extremely

00:11:28,319 --> 00:11:34,259
difficult and painful for for the

00:11:30,360 --> 00:11:36,509
product and engineering and then about

00:11:34,259 --> 00:11:39,660
June of 2018 we tried to integrate the

00:11:36,509 --> 00:11:42,029
first command to switch over to v3 CF

00:11:39,660 --> 00:11:43,799
app so this was the first logic switch

00:11:42,029 --> 00:11:47,850
that we did if you had v3 we'll show you

00:11:43,799 --> 00:11:50,670
the v3 display of app and we found that

00:11:47,850 --> 00:11:52,410
you know all our assumptions and pain

00:11:50,670 --> 00:11:54,619
points that were validated it was very

00:11:52,410 --> 00:11:58,290
difficult for product engineering and

00:11:54,619 --> 00:11:59,970
end-users you folks to actually you know

00:11:58,290 --> 00:12:01,619
partake and using the feature and for us

00:11:59,970 --> 00:12:03,869
to develop a product side and

00:12:01,619 --> 00:12:05,579
engineering wise so the v3 acceleration

00:12:03,869 --> 00:12:06,899
team developed out of this because we

00:12:05,579 --> 00:12:09,329
thought what is the best way to move

00:12:06,899 --> 00:12:10,739
forward we can't move forward with the

00:12:09,329 --> 00:12:13,739
logic switch because we know that's

00:12:10,739 --> 00:12:16,439
painful we're gonna major bump the v7

00:12:13,739 --> 00:12:18,029
CLI and we you know most of you folks

00:12:16,439 --> 00:12:19,589
know we haven't had a major bump up a

00:12:18,029 --> 00:12:21,809
CLI for about five years

00:12:19,589 --> 00:12:24,059
so there's considerations here like how

00:12:21,809 --> 00:12:26,279
do we major bump and do this kind of

00:12:24,059 --> 00:12:28,559
more internal effort to support Cappy

00:12:26,279 --> 00:12:31,889
and for you folks to actually get the v3

00:12:28,559 --> 00:12:34,679
features so we decided after getting

00:12:31,889 --> 00:12:36,089
some feedback to not break as much as

00:12:34,679 --> 00:12:38,299
possible and that's difficult right

00:12:36,089 --> 00:12:41,579
because we know that you folks are using

00:12:38,299 --> 00:12:43,889
CLI in your pipelines and it's been in

00:12:41,579 --> 00:12:46,860
use for five years so you might have

00:12:43,889 --> 00:12:48,749
scripts sort of looking at the output or

00:12:46,860 --> 00:12:50,850
scripting against the output so we were

00:12:48,749 --> 00:12:53,730
really careful on the v3 side I think

00:12:50,850 --> 00:12:55,079
you know one night we the first anchor

00:12:53,730 --> 00:12:56,699
on the team I think we had this joke

00:12:55,079 --> 00:12:58,199
about we're supposed to move fast and

00:12:56,699 --> 00:13:00,119
don't break anything and that was like

00:12:58,199 --> 00:13:02,220
one of our actual goals because we want

00:13:00,119 --> 00:13:05,279
it you folks to be able to upgrade as

00:13:02,220 --> 00:13:07,470
seamlessly as possible it's so it's been

00:13:05,279 --> 00:13:09,059
about a year and also in reality that

00:13:07,470 --> 00:13:11,040
hasn't actually happened like we have

00:13:09,059 --> 00:13:13,499
had a couple of breaking changes where

00:13:11,040 --> 00:13:14,879
we remove flags or commands but we did

00:13:13,499 --> 00:13:17,339
so intentionally and we've documented

00:13:14,879 --> 00:13:18,569
every single break so you know

00:13:17,339 --> 00:13:20,070
everything that we've done has been

00:13:18,569 --> 00:13:21,240
intentional and also

00:13:20,070 --> 00:13:23,520
you know it might not seem like it but

00:13:21,240 --> 00:13:27,030
we're thinking of end-users you folks

00:13:23,520 --> 00:13:28,320
how will you upgrade and use the CLI so

00:13:27,030 --> 00:13:30,060
in terms of new features we

00:13:28,320 --> 00:13:33,300
strategically decided not to add

00:13:30,060 --> 00:13:34,920
features to v6 so there's features like

00:13:33,300 --> 00:13:38,370
rolling deployments that you can find as

00:13:34,920 --> 00:13:41,370
a experimental feature on v6 but we

00:13:38,370 --> 00:13:45,090
decided to support it on v7 so you'll

00:13:41,370 --> 00:13:48,210
find rolling deployments what Reed & and

00:13:45,090 --> 00:13:50,490
Zack mentioned on v7 it's gonna be a new

00:13:48,210 --> 00:13:53,400
flag on push it's available now so you

00:13:50,490 --> 00:13:55,200
can download the latest v7 and use it

00:13:53,400 --> 00:13:58,050
and please provide feedback to us we're

00:13:55,200 --> 00:14:00,030
hoping for some feedback metadata is

00:13:58,050 --> 00:14:02,970
also a feature that's only on v7 and

00:14:00,030 --> 00:14:05,730
then we have a host of features sidecars

00:14:02,970 --> 00:14:08,070
like Zack mentioned that will be on V

00:14:05,730 --> 00:14:09,780
someone only so very strategically we're

00:14:08,070 --> 00:14:14,880
placing everything on d7 so you folks

00:14:09,780 --> 00:14:17,790
and give us feedback and adopt it great

00:14:14,880 --> 00:14:20,130
so basically existing behavior should be

00:14:17,790 --> 00:14:22,230
the same in v3 and then there are some

00:14:20,130 --> 00:14:25,070
exciting new feed three resources that

00:14:22,230 --> 00:14:28,470
are also being supported in the CLI and

00:14:25,070 --> 00:14:31,260
along with all of this newness in v3

00:14:28,470 --> 00:14:34,290
there comes a need for proper

00:14:31,260 --> 00:14:36,480
documentation for these things so Reed

00:14:34,290 --> 00:14:39,060
do you like to talk a little bit about

00:14:36,480 --> 00:14:41,690
how the v3 API documentation is

00:14:39,060 --> 00:14:44,820
different new features in it as well

00:14:41,690 --> 00:14:47,550
yeah so in the in the year and a half

00:14:44,820 --> 00:14:48,900
that I've spent on the apps manager team

00:14:47,550 --> 00:14:52,290
I spent a lot of that time digging

00:14:48,900 --> 00:14:55,820
through both the v2 API Doc's and the v3

00:14:52,290 --> 00:15:00,060
API Doc's so I got sort of familiar with

00:14:55,820 --> 00:15:02,070
the structure and I can say that the v3

00:15:00,060 --> 00:15:03,960
API API Doc's are much easier to

00:15:02,070 --> 00:15:05,430
navigate I don't know if you've all had

00:15:03,960 --> 00:15:09,890
a chance to look at both of them and

00:15:05,430 --> 00:15:12,630
compare but I hope that you agree and

00:15:09,890 --> 00:15:14,940
also since I've joined this team we've

00:15:12,630 --> 00:15:17,010
made an effort to make small

00:15:14,940 --> 00:15:19,110
improvements to the v3 API Doc's like

00:15:17,010 --> 00:15:22,230
improving the load time improving the

00:15:19,110 --> 00:15:23,880
search feature on there just kind of

00:15:22,230 --> 00:15:25,740
generally being more descriptive and

00:15:23,880 --> 00:15:30,330
clearer in our language that we use in

00:15:25,740 --> 00:15:33,670
the documentation so I think we're

00:15:30,330 --> 00:15:36,339
focused on discoverability

00:15:33,670 --> 00:15:37,959
you know the making sure like things

00:15:36,339 --> 00:15:39,790
aren't split across tons of different

00:15:37,959 --> 00:15:42,070
pages and hard to find I don't know if

00:15:39,790 --> 00:15:44,019
you've seen the v2 Docs but they're it's

00:15:42,070 --> 00:15:48,250
sort of hard to find the end point that

00:15:44,019 --> 00:15:52,240
you're looking for and we're focused on

00:15:48,250 --> 00:15:53,890
enabling client authors to easily find

00:15:52,240 --> 00:15:57,459
what they're looking for as they're

00:15:53,890 --> 00:15:59,740
developing clients yeah but I would I

00:15:57,459 --> 00:16:02,200
think we would really be we would love

00:15:59,740 --> 00:16:04,060
to hear feedback on the v3 Doc's we

00:16:02,200 --> 00:16:06,750
would be open to exploring how to

00:16:04,060 --> 00:16:08,709
improve them in any way that we could so

00:16:06,750 --> 00:16:14,140
if you want to talk about that I would

00:16:08,709 --> 00:16:15,790
love to talk about that just one thing

00:16:14,140 --> 00:16:17,079
to kind of add I guess it's nice to talk

00:16:15,790 --> 00:16:19,839
about Docs and say sure we think they're

00:16:17,079 --> 00:16:21,190
better I think it's interesting to think

00:16:19,839 --> 00:16:23,310
about if you know if you all are

00:16:21,190 --> 00:16:25,480
building api's or you're consuming api's

00:16:23,310 --> 00:16:28,240
some of the switch that happened on like

00:16:25,480 --> 00:16:30,190
how we think about documentation and

00:16:28,240 --> 00:16:31,959
somewhere you know we talked about the

00:16:30,190 --> 00:16:33,279
v3 acceleration team which maybe a lot

00:16:31,959 --> 00:16:34,959
of you haven't even heard of but um

00:16:33,279 --> 00:16:36,850
there's some interesting stuff about how

00:16:34,959 --> 00:16:38,230
we're working with the CLI and the API

00:16:36,850 --> 00:16:40,600
teams together that's maybe worth a

00:16:38,230 --> 00:16:41,800
little discussion so kind of in our in

00:16:40,600 --> 00:16:43,990
our VT world we actually just

00:16:41,800 --> 00:16:45,130
auto-generated Docs and said whatever

00:16:43,990 --> 00:16:47,290
got generated those are good enough

00:16:45,130 --> 00:16:50,260
they'll be fine right people figure it

00:16:47,290 --> 00:16:51,070
out and in the v3 world we said you know

00:16:50,260 --> 00:16:52,420
that that's good

00:16:51,070 --> 00:16:54,550
maybe we'll generate as much as we can

00:16:52,420 --> 00:16:55,810
but in fact these things are super

00:16:54,550 --> 00:16:57,910
important people can't use an API

00:16:55,810 --> 00:17:02,140
without documentation it's a real real

00:16:57,910 --> 00:17:04,030
pain in the butt so we take that in as a

00:17:02,140 --> 00:17:06,339
real part of the product so every time

00:17:04,030 --> 00:17:08,679
you develop an API auto-generate as much

00:17:06,339 --> 00:17:10,630
you can but then go and review add stuff

00:17:08,679 --> 00:17:12,370
by hand whatever you need to do maybe

00:17:10,630 --> 00:17:14,410
describe workflows of how to use an API

00:17:12,370 --> 00:17:16,660
not just like this is this endpoint but

00:17:14,410 --> 00:17:18,160
maybe it's this endpoint works well with

00:17:16,660 --> 00:17:20,559
this endpoint and together you can

00:17:18,160 --> 00:17:23,230
create this sort of workflow so those

00:17:20,559 --> 00:17:24,400
are some sort of changes we took maybe

00:17:23,230 --> 00:17:28,750
another thing that's worth talking about

00:17:24,400 --> 00:17:31,240
is the v3 acceleration this is this is

00:17:28,750 --> 00:17:33,880
an offshoot of the API team and the CLI

00:17:31,240 --> 00:17:35,320
teams where instead of sort of working

00:17:33,880 --> 00:17:36,870
separately that they're really sitting

00:17:35,320 --> 00:17:39,820
next to each other and working together

00:17:36,870 --> 00:17:41,169
and this is really ensuring that you

00:17:39,820 --> 00:17:44,230
know that it seems pretty obvious right

00:17:41,169 --> 00:17:46,690
but you have a CLI which is a client's a

00:17:44,230 --> 00:17:47,560
consumer of the API and by building them

00:17:46,690 --> 00:17:50,590
together you make

00:17:47,560 --> 00:17:51,850
these api's are consumable and usable at

00:17:50,590 --> 00:17:53,080
the same time that you're building them

00:17:51,850 --> 00:17:55,420
and you have a chance to edit them and

00:17:53,080 --> 00:17:57,100
change them as you go so that's sort of

00:17:55,420 --> 00:18:00,180
a change in thinking that we've had and

00:17:57,100 --> 00:18:00,180
sort of how we're approaching that stuff

00:18:00,630 --> 00:18:05,950
and Abbey I guess you can also give like

00:18:05,170 --> 00:18:07,780
it would be great if you could give

00:18:05,950 --> 00:18:09,640
input on like what the experience was

00:18:07,780 --> 00:18:12,700
like to work with the cabbie team in

00:18:09,640 --> 00:18:14,010
these bad efforts as well yeah it's

00:18:12,700 --> 00:18:16,270
interesting when you think about

00:18:14,010 --> 00:18:17,500
relationship between the CLI and capi

00:18:16,270 --> 00:18:19,570
there's almost like two different

00:18:17,500 --> 00:18:22,420
relationships on the v3 acceleration

00:18:19,570 --> 00:18:24,370
team it's almost like a task force we've

00:18:22,420 --> 00:18:26,260
done a couple of features but it small

00:18:24,370 --> 00:18:28,240
the main goal of the team is to just

00:18:26,260 --> 00:18:30,820
convert resources and then the CLI

00:18:28,240 --> 00:18:32,650
supports it so you know working on this

00:18:30,820 --> 00:18:34,930
team we're basically integrated like

00:18:32,650 --> 00:18:36,490
Zack mentioned with Cappy so you know

00:18:34,930 --> 00:18:38,440
there's feedback loops that we can very

00:18:36,490 --> 00:18:40,660
quickly give to Cappy if there's an

00:18:38,440 --> 00:18:43,030
error message on the CLI that doesn't

00:18:40,660 --> 00:18:45,190
make necessarily make sense on v7 we're

00:18:43,030 --> 00:18:47,020
basically returning capys error messages

00:18:45,190 --> 00:18:50,320
were no longer wrapping the CLI message

00:18:47,020 --> 00:18:51,760
we can easily update the Cappy side you

00:18:50,320 --> 00:18:53,470
know without sort of having to go

00:18:51,760 --> 00:18:54,940
through that feedback loop and it's

00:18:53,470 --> 00:18:56,950
because it's not a separate team we're

00:18:54,940 --> 00:19:01,300
very quickly able to integrate changes

00:18:56,950 --> 00:19:03,280
so v3 yeah so v3 it's a different

00:19:01,300 --> 00:19:05,290
relationship with with the sort of the

00:19:03,280 --> 00:19:06,970
CLI team where we're developing features

00:19:05,290 --> 00:19:09,250
and we're also developing features

00:19:06,970 --> 00:19:10,780
catching up to Cappy so metadata for

00:19:09,250 --> 00:19:12,850
example has been out for some time or

00:19:10,780 --> 00:19:14,740
still playing catch-up so that feedback

00:19:12,850 --> 00:19:16,930
loop is much longer because it's the

00:19:14,740 --> 00:19:18,430
feature has been out for so long but I

00:19:16,930 --> 00:19:20,170
think in general you know I'm working

00:19:18,430 --> 00:19:22,960
with Cappy closely it's been great I

00:19:20,170 --> 00:19:25,750
think you know it's been great because

00:19:22,960 --> 00:19:27,670
it's quicker feedback and hopefully

00:19:25,750 --> 00:19:29,650
we'll get to a state where cappy's

00:19:27,670 --> 00:19:33,360
Pernell features and CLI can support it

00:19:29,650 --> 00:19:33,360
a lot quicker than we have previously

00:19:33,690 --> 00:19:41,380
yeah so basically v3 is not only

00:19:38,680 --> 00:19:43,360
developing really quickly but also we

00:19:41,380 --> 00:19:45,550
have a great example of an end user the

00:19:43,360 --> 00:19:48,340
CLI which were also developing side by

00:19:45,550 --> 00:19:52,000
side another aspect of all of this is

00:19:48,340 --> 00:19:55,150
external contributors to the API and I

00:19:52,000 --> 00:19:56,910
so there's one team in London that now

00:19:55,150 --> 00:19:59,980
it's a services enablement team and

00:19:56,910 --> 00:20:01,240
they're contributing to the API and v3

00:19:59,980 --> 00:20:02,950
style as well

00:20:01,240 --> 00:20:05,950
with services resources and service

00:20:02,950 --> 00:20:07,539
brokers as well I'm Zack could you talk

00:20:05,950 --> 00:20:10,120
a little bit about how that came about

00:20:07,539 --> 00:20:15,760
and the whole external contributor

00:20:10,120 --> 00:20:20,320
experience yeah sure so I think like how

00:20:15,760 --> 00:20:21,490
that came about I mean you know given an

00:20:20,320 --> 00:20:25,059
amount of people you can only build so

00:20:21,490 --> 00:20:28,419
much API and we want to build all of it

00:20:25,059 --> 00:20:30,840
so being able to get some external

00:20:28,419 --> 00:20:33,610
contributions is obviously really great

00:20:30,840 --> 00:20:35,799
and so being able to have a separate

00:20:33,610 --> 00:20:39,610
team that's instead of thinking about

00:20:35,799 --> 00:20:41,470
ownership or teams around a codebase you

00:20:39,610 --> 00:20:44,049
can instead things think about areas of

00:20:41,470 --> 00:20:46,480
responsibility so we might have a team

00:20:44,049 --> 00:20:48,490
that cares deeply about applications and

00:20:46,480 --> 00:20:50,020
then they work on those api's but now

00:20:48,490 --> 00:20:51,730
we're able to have have teams of folks

00:20:50,020 --> 00:20:53,289
that care really much about the service

00:20:51,730 --> 00:20:54,730
work flows and so service binding

00:20:53,289 --> 00:20:58,450
service instances all those sorts of

00:20:54,730 --> 00:21:01,149
things and they can have just as much

00:20:58,450 --> 00:21:04,090
essential ownership of the codebase by

00:21:01,149 --> 00:21:06,279
contributing and bringing in those v3

00:21:04,090 --> 00:21:11,200
API is - at which which has been really

00:21:06,279 --> 00:21:13,179
great and I thought it'd be interesting

00:21:11,200 --> 00:21:14,940
to mention them as well because the

00:21:13,179 --> 00:21:17,350
they're basically the first team of

00:21:14,940 --> 00:21:18,700
significant contributors that fat and

00:21:17,350 --> 00:21:21,669
capi have also been working really

00:21:18,700 --> 00:21:25,419
closely with and currently we're in the

00:21:21,669 --> 00:21:28,240
process of also having some sessions

00:21:25,419 --> 00:21:29,740
where VAT and capi team members go and

00:21:28,240 --> 00:21:32,200
actually work with them and pair with

00:21:29,740 --> 00:21:34,240
them for a week just to see what the

00:21:32,200 --> 00:21:35,610
onboarding process is like and as Reid

00:21:34,240 --> 00:21:38,590
mentioned it's been a pretty great

00:21:35,610 --> 00:21:40,539
experience for onboarding so far and I

00:21:38,590 --> 00:21:44,169
can say that as well in my first few

00:21:40,539 --> 00:21:46,990
weeks on fat but yeah the basically the

00:21:44,169 --> 00:21:49,059
entire point of the v3 experience is

00:21:46,990 --> 00:21:50,740
that it is easy to develop on and that

00:21:49,059 --> 00:21:53,080
is the reason why the modernization of

00:21:50,740 --> 00:21:55,860
the API was so essential to begin with

00:21:53,080 --> 00:21:58,570
and hopefully you all find it useful -

00:21:55,860 --> 00:22:03,429
and with that the last question that I

00:21:58,570 --> 00:22:06,240
have for for you all is the what the

00:22:03,429 --> 00:22:08,980
next couple months looks like for VAT

00:22:06,240 --> 00:22:10,899
and like in terms of timeline and

00:22:08,980 --> 00:22:15,159
roadmap because I've heard that question

00:22:10,899 --> 00:22:18,130
a lot from folks yeah so winter 2020

00:22:15,159 --> 00:22:22,600
we're looking at doing usage roles and

00:22:18,130 --> 00:22:25,840
users audit events if if time allows us

00:22:22,600 --> 00:22:28,390
to and then for for that were actually

00:22:25,840 --> 00:22:30,820
generally done um we have maybe seven

00:22:28,390 --> 00:22:32,440
resources left they're sort of remaining

00:22:30,820 --> 00:22:34,269
ones are the services side of things I

00:22:32,440 --> 00:22:36,909
think we're but it looks like we're

00:22:34,269 --> 00:22:39,250
about 33% done on the resources side but

00:22:36,909 --> 00:22:41,470
once users are done that's a majority of

00:22:39,250 --> 00:22:44,230
the resources I love to do on the bat

00:22:41,470 --> 00:22:48,039
side on the CLI I think round about 40%

00:22:44,230 --> 00:22:51,789
complete and we have you know certain

00:22:48,039 --> 00:22:56,409
security groups left to do user related

00:22:51,789 --> 00:22:58,029
roles and and and audit events to do but

00:22:56,409 --> 00:22:59,950
I just wanted to point out that push

00:22:58,029 --> 00:23:01,480
actually took us as you know pushes

00:22:59,950 --> 00:23:03,760
following the most important command so

00:23:01,480 --> 00:23:07,059
it took us much longer to do so it looks

00:23:03,760 --> 00:23:08,470
like you know once we finish push we

00:23:07,059 --> 00:23:10,149
have one last thing to do with push

00:23:08,470 --> 00:23:12,850
which is the dipping which was difficult

00:23:10,149 --> 00:23:14,260
to do with server-side manifests so

00:23:12,850 --> 00:23:15,909
that's the last piece for push and once

00:23:14,260 --> 00:23:17,620
we're done with that I you know it seems

00:23:15,909 --> 00:23:18,880
as though we can accelerate a little bit

00:23:17,620 --> 00:23:20,889
more quickly than we have in the last

00:23:18,880 --> 00:23:23,620
couple of months but on the roadmap is

00:23:20,889 --> 00:23:28,409
stiffening on push for v7 well we have

00:23:23,620 --> 00:23:31,360
the rest of the CLI so usage and ROS and

00:23:28,409 --> 00:23:32,860
security groups and then will be trying

00:23:31,360 --> 00:23:34,659
to help with the services he named one

00:23:32,860 --> 00:23:37,480
team to finish off the services related

00:23:34,659 --> 00:23:40,029
resources and CLI commence and on the

00:23:37,480 --> 00:23:41,620
CLI side what we're trying to hope to

00:23:40,029 --> 00:23:42,970
finish is the login refactor which has

00:23:41,620 --> 00:23:45,639
been going on for some time but we hope

00:23:42,970 --> 00:23:47,350
to finish to support s ap for a feature

00:23:45,639 --> 00:23:49,750
that they're they're looking to add to

00:23:47,350 --> 00:23:51,940
that we're also going to support

00:23:49,750 --> 00:23:53,889
sidecars with the app display that's on

00:23:51,940 --> 00:23:55,179
the roadmap and metadata metadata it's

00:23:53,889 --> 00:23:58,630
gonna take some time because there are

00:23:55,179 --> 00:24:00,730
27 resources and you know six new

00:23:58,630 --> 00:24:01,990
commands that support the metadata so

00:24:00,730 --> 00:24:03,610
that's going to be on the horizon as

00:24:01,990 --> 00:24:05,409
well there's other things we would love

00:24:03,610 --> 00:24:07,360
to do if we had the resources which is

00:24:05,409 --> 00:24:09,370
provide some sort of scripting solution

00:24:07,360 --> 00:24:11,139
to the community so you're so able to

00:24:09,370 --> 00:24:14,409
sort of adopt the CLI without having a

00:24:11,139 --> 00:24:15,940
sort of barriers in the way there might

00:24:14,409 --> 00:24:17,710
be one or two other ones

00:24:15,940 --> 00:24:19,570
supporting the logger Gator team they

00:24:17,710 --> 00:24:21,940
want to temper Kate traffic controller

00:24:19,570 --> 00:24:26,250
so on v7 we're just going to use log

00:24:21,940 --> 00:24:26,250
cache and maybe support CF Tail

00:24:29,560 --> 00:24:35,290
but so there clearly is a lot and weird

00:24:33,110 --> 00:24:39,200
to be done but we are accelerating fast

00:24:35,290 --> 00:24:43,790
and we'll get it done soon by 2020 in

00:24:39,200 --> 00:24:45,590
325 so yeah now we have a bit of extra

00:24:43,790 --> 00:24:48,260
time and I wanted to give an extra time

00:24:45,590 --> 00:24:50,060
at the end because I figured that the

00:24:48,260 --> 00:24:53,120
audience might have questions that they

00:24:50,060 --> 00:24:58,520
wanted to ask so if anyone wants to ask

00:24:53,120 --> 00:25:06,200
any questions now it's the time hold on

00:24:58,520 --> 00:25:08,030
let me give you the microphone I I've

00:25:06,200 --> 00:25:09,470
really enjoyed using the v3 API I've

00:25:08,030 --> 00:25:11,450
been using it since the giant

00:25:09,470 --> 00:25:14,660
experimental flags popped up in the CFC

00:25:11,450 --> 00:25:17,780
Li so are there any plans to move any of

00:25:14,660 --> 00:25:20,600
the CF networking stuff into a cloud

00:25:17,780 --> 00:25:22,820
controller because you kind of revamped

00:25:20,600 --> 00:25:24,320
all of the like app objects but network

00:25:22,820 --> 00:25:27,860
policies and things still exist on a

00:25:24,320 --> 00:25:29,720
kind of esoteric endpoint and the CLI

00:25:27,860 --> 00:25:31,010
doesn't nice job of wrapping them but if

00:25:29,720 --> 00:25:37,880
you're building any kind of client

00:25:31,010 --> 00:25:39,710
that's still a bit weird yeah that

00:25:37,880 --> 00:25:43,610
that's really uh that's useful feedback

00:25:39,710 --> 00:25:45,790
I think I don't know that we've given a

00:25:43,610 --> 00:25:48,320
ton of thought to that specifically yet

00:25:45,790 --> 00:25:49,100
it networking was it was really

00:25:48,320 --> 00:25:50,840
interesting it was sort of our first

00:25:49,100 --> 00:25:53,870
experiment and what does it look like to

00:25:50,840 --> 00:25:56,450
have a separate API server and some some

00:25:53,870 --> 00:25:59,120
of the go around that being that that

00:25:56,450 --> 00:26:01,310
team got to iterate really quickly and

00:25:59,120 --> 00:26:02,360
this goes back to again why we had to

00:26:01,310 --> 00:26:04,520
make some changes it was really

00:26:02,360 --> 00:26:08,090
difficult to get your changes stuff

00:26:04,520 --> 00:26:08,990
merged into the old API server code base

00:26:08,090 --> 00:26:11,450
because it was really difficult to

00:26:08,990 --> 00:26:14,840
understand and really complicated to

00:26:11,450 --> 00:26:15,980
make sort of changes in a way that

00:26:14,840 --> 00:26:17,720
didn't just affect everything actually

00:26:15,980 --> 00:26:19,520
which was really interesting around how

00:26:17,720 --> 00:26:21,590
it did its auto generation so if you

00:26:19,520 --> 00:26:22,760
wanted one end point to maybe behave a

00:26:21,590 --> 00:26:25,060
little differently what you might end up

00:26:22,760 --> 00:26:27,410
doing is changing every single endpoint

00:26:25,060 --> 00:26:30,140
so that's sort of some history of how

00:26:27,410 --> 00:26:31,640
this networking thing came about I think

00:26:30,140 --> 00:26:34,040
when we look at look at the networking

00:26:31,640 --> 00:26:36,680
one I don't know if we would necessarily

00:26:34,040 --> 00:26:39,230
pull that one in exactly as is I think

00:26:36,680 --> 00:26:40,590
about how we might give it some

00:26:39,230 --> 00:26:43,500
experience that

00:26:40,590 --> 00:26:45,600
is a little less granular of

00:26:43,500 --> 00:26:48,000
point-to-point sort of rules and is more

00:26:45,600 --> 00:26:49,140
maybe like how do I provide maybe the

00:26:48,000 --> 00:26:52,200
idea of a network that I can attach

00:26:49,140 --> 00:26:54,840
spaces to or I can attach orgs to so I

00:26:52,200 --> 00:26:57,410
think if we if and when we were to pull

00:26:54,840 --> 00:27:00,030
it in it might not look exactly as it is

00:26:57,410 --> 00:27:09,420
but there's not an immediate plan to

00:27:00,030 --> 00:27:11,130
pull it in yeah I'm just home from sa P

00:27:09,420 --> 00:27:13,890
and we have the challenge that we run

00:27:11,130 --> 00:27:15,810
very big landscapes and our biggest

00:27:13,890 --> 00:27:18,900
internal landscapes has actually 60

00:27:15,810 --> 00:27:22,410
clock controllers running inside and

00:27:18,900 --> 00:27:23,850
that's well is there any plan to improve

00:27:22,410 --> 00:27:27,510
the performance of the cloud controller

00:27:23,850 --> 00:27:30,600
to get at a bit cheaper and also the

00:27:27,510 --> 00:27:32,430
database I mean running on Postgres with

00:27:30,600 --> 00:27:34,380
60 clock controllers you need so many

00:27:32,430 --> 00:27:37,650
connections and that's that's a

00:27:34,380 --> 00:27:42,030
challenge the size limit on Honorius for

00:27:37,650 --> 00:27:46,770
instance yeah I can speak that too there

00:27:42,030 --> 00:27:48,660
was some of the impetus of swapping out

00:27:46,770 --> 00:27:50,160
again that this change of v3 where it's

00:27:48,660 --> 00:27:53,100
not just you know a service all a change

00:27:50,160 --> 00:27:57,270
but an implementation level change we

00:27:53,100 --> 00:27:58,650
have a lot of reliance on things get

00:27:57,270 --> 00:28:01,200
slow in the nuts and bolts but around

00:27:58,650 --> 00:28:03,870
event machine and then and some older

00:28:01,200 --> 00:28:05,640
technologies that made it difficult for

00:28:03,870 --> 00:28:08,700
us to adopt newer Ruby web servers that

00:28:05,640 --> 00:28:10,080
do perform significantly better because

00:28:08,700 --> 00:28:13,260
of the way it was really just tightly

00:28:10,080 --> 00:28:16,410
coupled so definitely our hope is once

00:28:13,260 --> 00:28:19,500
we are able to essentially get the whole

00:28:16,410 --> 00:28:20,970
v3 thing completing G aid we can rip out

00:28:19,500 --> 00:28:24,300
some of that old code and then we can

00:28:20,970 --> 00:28:26,970
start making movements towards using

00:28:24,300 --> 00:28:29,010
much more performant web servers and

00:28:26,970 --> 00:28:32,750
hopefully see yeah maybe a decrease from

00:28:29,010 --> 00:28:34,860
60 which is which is quite a few and

00:28:32,750 --> 00:28:36,060
yeah hopefully make that better I think

00:28:34,860 --> 00:28:38,810
one other thing that's interesting that

00:28:36,060 --> 00:28:41,040
the capi team is doing right now is

00:28:38,810 --> 00:28:45,090
they're they're working on rolling out

00:28:41,040 --> 00:28:46,320
some ways to gather some telemetry back

00:28:45,090 --> 00:28:48,720
into the systems so they can start

00:28:46,320 --> 00:28:51,480
understanding some of this this will be

00:28:48,720 --> 00:28:52,890
like vendor specific but start

00:28:51,480 --> 00:28:54,150
understanding what are the real

00:28:52,890 --> 00:28:57,180
performance things and

00:28:54,150 --> 00:28:58,440
those pulled back in and start being

00:28:57,180 --> 00:29:01,020
able to use that data to make better

00:28:58,440 --> 00:29:02,730
decisions about how to scale things so

00:29:01,020 --> 00:29:06,470
that is definitely the dream but

00:29:02,730 --> 00:29:06,470
probably not in the next month or two

00:29:08,450 --> 00:29:18,210
anyone else questions okay um well we'll

00:29:15,780 --> 00:29:20,360
be around a little bit after if anyone

00:29:18,210 --> 00:29:26,100
wants to come up and talk to us about

00:29:20,360 --> 00:29:27,660
fad efforts or v3 features in general so

00:29:26,100 --> 00:29:31,230
yeah thank you all for coming I hope

00:29:27,660 --> 00:29:32,530
that was useful for all of you yeah have

00:29:31,230 --> 00:29:38,289
a good rest of the summit

00:29:32,530 --> 00:29:38,289

YouTube URL: https://www.youtube.com/watch?v=QIP6xUsKnTw


