Title: How Eirini Integrates Cloud Foundry and Kubernetes
Publication date: 2018-12-13
Playlist: How Cloud Foundry Integrates Kubernetes into Open Source Projects
Description: 
	Interested to learn how Cloud Foundry projects are integrating Kubernetes into their technology? Chip Childers, CTO of Cloud Foundry Foundation, walks you through Eirini, an incubating project within Cloud Foundry Foundation, that enables pluggable scheduling for the Cloud Foundry Application Runtime. Eirini allows operators to choose whether Cloud Foundry Application Runtime should use Diego (the default scheduler in CFAR) or Kubernetes to orchestrate application container instances.

Learn about Cloud Foundry Container Runtime: https://youtu.be/WtfLidd8aA8

Learn about CF Containerization: https://youtu.be/SxTsytSpp-g

Learn about all three: https://www.youtube.com/watch?v=CwAmh8MdWCg&t=13s
Captions: 
	00:00:00,060 --> 00:00:04,740
[Music]

00:00:02,030 --> 00:00:06,420
hi I'm chip CTO of the clock founders

00:00:04,740 --> 00:00:07,859
Foundation recently we've been spending

00:00:06,420 --> 00:00:09,900
a lot of time as a community talking

00:00:07,859 --> 00:00:11,610
about lots of really interesting

00:00:09,900 --> 00:00:14,219
projects that are integrating kubernetes

00:00:11,610 --> 00:00:15,839
into the Cloud Foundry family of open

00:00:14,219 --> 00:00:18,240
source efforts this one's called a Rini

00:00:15,839 --> 00:00:19,800
this is when we tear inside the Cloud

00:00:18,240 --> 00:00:22,230
Foundry application run time again that

00:00:19,800 --> 00:00:25,800
that has part of the Cloud Foundry

00:00:22,230 --> 00:00:27,869
technology stack and so inside that has

00:00:25,800 --> 00:00:30,390
part of the Cloud Foundry stack we have

00:00:27,869 --> 00:00:32,520
lots of different smaller projects we

00:00:30,390 --> 00:00:35,940
have the Cloud Controller API or the

00:00:32,520 --> 00:00:38,399
capi project we have routing which is

00:00:35,940 --> 00:00:40,770
how end-users talk to applications

00:00:38,399 --> 00:00:43,079
deployed in the CF environment we have

00:00:40,770 --> 00:00:44,969
Identity Management through UA a logging

00:00:43,079 --> 00:00:47,640
and all of the other projects that make

00:00:44,969 --> 00:00:49,800
that offender at one time project work

00:00:47,640 --> 00:00:53,250
now what the arena project is focused on

00:00:49,800 --> 00:00:55,800
doing is providing an option for the

00:00:53,250 --> 00:00:57,390
Diego container scheduler a Diego

00:00:55,800 --> 00:00:59,609
container schedule is one that was built

00:00:57,390 --> 00:01:02,550
by our community it's purpose-built to

00:00:59,609 --> 00:01:03,960
support the app runtime but kubernetes

00:01:02,550 --> 00:01:06,060
has reached the point of maturity where

00:01:03,960 --> 00:01:09,030
there are some use cases that it can

00:01:06,060 --> 00:01:12,119
solve and ireenie is all about giving us

00:01:09,030 --> 00:01:14,700
choice between Diego and kubernetes as

00:01:12,119 --> 00:01:17,960
the underlying infrastructure that the

00:01:14,700 --> 00:01:37,410
app containers are run on

00:01:17,960 --> 00:01:37,410

YouTube URL: https://www.youtube.com/watch?v=wT1ZImIYkrs


