Title: Designing for Multicloud - Mark DCunha, Pivotal
Publication date: 2016-09-30
Playlist: Cloud Foundry Summit Europe 2016
Description: 
	Designing for Multicloud - Mark DCunha, Pivotal

Your carefully planned cloud strategy and technology architecture is useless, because multicloud changes everything. In this session, we will explore what multicloud means and why your business will force it upon you. We provide examples of customers successfully using multicloud models, identify early patterns of usage and how to leverage them. 

Youâ€™ll learn about how Cloud Foundry provides unique capabilities to simplify and implement multicloud deployments. Weâ€™ll cover how you can use features like service brokers, service plans, asynchronous provisioning and arbitrary parameters to deploy muilticloud, while still maintaining a consistent experience for your application developers and IT operations staff.

About Mark DCunha
Mark Dâ€™Cunha, P.Eng. is a product manager with Pivotal, specializing in mobile technologies and solutions. He has over 25 years of industry experience and a strong computer engineering and software development background. He has spoken on Wearable technologies at SxSW and has worked with the worldâ€™s leading airlines, telecom providers, utilities and large enterprises to build and execute their mobile strategy. He holds several technology patents and is a nationally certified archery coach.
Captions: 
	00:00:00,030 --> 00:00:07,410
whatever my name is mark product manager

00:00:05,130 --> 00:00:10,590
pivotal working on the service

00:00:07,410 --> 00:00:12,450
properties with the public that's where

00:00:10,590 --> 00:00:15,450
I've developed the service broker for

00:00:12,450 --> 00:00:19,289
AWS talk a bit about that at least

00:00:15,450 --> 00:00:24,260
business Google is here later in this

00:00:19,289 --> 00:00:25,740
week they're gonna present there so that

00:00:24,260 --> 00:00:28,220
as well

00:00:25,740 --> 00:00:30,390
so by the end of this year you'll have

00:00:28,220 --> 00:00:34,469
service book is connecting to all of

00:00:30,390 --> 00:00:36,120
these a little bit about what is the

00:00:34,469 --> 00:00:39,629
multi cloud and why it's important this

00:00:36,120 --> 00:00:41,390
is the Wikipedia definition multiple

00:00:39,629 --> 00:00:44,760
cloud computing services in the single

00:00:41,390 --> 00:00:46,410
heterogeneous architecture and you'll

00:00:44,760 --> 00:00:48,539
see that as we talk about the examples

00:00:46,410 --> 00:00:50,730
of people using the disparities we're

00:00:48,539 --> 00:00:52,230
not trying to say that multi-cloud is

00:00:50,730 --> 00:00:53,760
something we work with all the

00:00:52,230 --> 00:00:56,190
application is distributed customer

00:00:53,760 --> 00:01:00,210
people are using the climate in certain

00:00:56,190 --> 00:01:01,770
ways the main objective was to be used

00:01:00,210 --> 00:01:05,549
to reliance on a single vendor so the

00:01:01,770 --> 00:01:06,330
produce lock-in but in fact people who

00:01:05,549 --> 00:01:09,600
use your cost

00:01:06,330 --> 00:01:15,080
as a justification to move to another

00:01:09,600 --> 00:01:15,080
cloud and people are using fitting the

00:01:17,509 --> 00:01:37,530
this which is really this is probably

00:01:36,390 --> 00:01:41,070
the most important point I want to make

00:01:37,530 --> 00:01:43,460
today is that a cloud strategy provide

00:01:41,070 --> 00:01:47,070
to you the nameless economies of scale

00:01:43,460 --> 00:01:49,920
but a multicolor strategy enables

00:01:47,070 --> 00:01:52,380
economies of arbitrage and part of the

00:01:49,920 --> 00:01:56,159
reason for that is today a difference

00:01:52,380 --> 00:02:00,950
the spread of cost for ourself compute

00:01:56,159 --> 00:02:00,950
instances varies by as much as 80%

00:02:03,299 --> 00:02:07,200
instead of paying a dollar between

00:02:04,979 --> 00:02:09,509
accents and you have to be able to read

00:02:07,200 --> 00:02:15,300
it yourself to movement for the right

00:02:09,509 --> 00:02:17,819
application why your businesses will

00:02:15,300 --> 00:02:24,060
demand money clothes is a deceiver right

00:02:17,819 --> 00:02:26,940
and the cost more than eighty percent

00:02:24,060 --> 00:02:29,580
typically of your cloud costs are

00:02:26,940 --> 00:02:33,180
computer sources and the charging

00:02:29,580 --> 00:02:34,739
regularity between providers some people

00:02:33,180 --> 00:02:37,530
charge of in the hour of this charge by

00:02:34,739 --> 00:02:40,440
the millage another set so the cost can

00:02:37,530 --> 00:02:42,060
make a big difference and you'll see

00:02:40,440 --> 00:02:44,489
that the competitors we're already

00:02:42,060 --> 00:02:49,140
moving to this model especially in North

00:02:44,489 --> 00:02:53,400
America cloud is still emerging here in

00:02:49,140 --> 00:02:58,560
terms of geographical but same issues

00:02:53,400 --> 00:03:01,709
will happen here give you a few examples

00:02:58,560 --> 00:03:03,900
that you may have heard anybody Dropbox

00:03:01,709 --> 00:03:09,780
which was that to be implemented in

00:03:03,900 --> 00:03:12,569
public lab with HP's has moved to hybrid

00:03:09,780 --> 00:03:14,160
cloud to reduce cost now they haven't

00:03:12,569 --> 00:03:17,040
moved everything they've moved a portion

00:03:14,160 --> 00:03:19,970
of it but this is the kind of use case

00:03:17,040 --> 00:03:24,350
where people are moving from one cloud

00:03:19,970 --> 00:03:27,049
to another provider to lower-cost

00:03:24,350 --> 00:03:32,880
Johnson & Johnson is the looms apple a

00:03:27,049 --> 00:03:38,280
fortune 100 company moved a lot of data

00:03:32,880 --> 00:03:42,389
to even less assure an entity and they

00:03:38,280 --> 00:03:44,220
have no mainframe though right and they

00:03:42,389 --> 00:03:48,060
plan to have 85% of their apps in the

00:03:44,220 --> 00:03:52,980
cloud in two years and in an example

00:03:48,060 --> 00:03:53,569
their customers are using new services

00:03:52,980 --> 00:03:56,190
in the cloud

00:03:53,569 --> 00:04:00,540
GCP came out last month with preemptable

00:03:56,190 --> 00:04:04,980
VMS for 20% of the cost of a regular yet

00:04:00,540 --> 00:04:08,090
and already a number of customers have

00:04:04,980 --> 00:04:08,090
found ways to use this

00:04:09,060 --> 00:04:13,600
and they can actually move it back and

00:04:11,500 --> 00:04:19,630
forth that's necessary not every day as

00:04:13,600 --> 00:04:22,500
the father gets change so what is the

00:04:19,630 --> 00:04:25,420
pattern of usage we receive customers

00:04:22,500 --> 00:04:28,480
multi-cloud they're choosing two to

00:04:25,420 --> 00:04:31,500
three cloud partners not one is that's

00:04:28,480 --> 00:04:35,410
lock-in not five is that stew propagated

00:04:31,500 --> 00:04:37,720
they're focusing their efforts either on

00:04:35,410 --> 00:04:39,370
something that's highest cost or

00:04:37,720 --> 00:04:41,710
something that's highest growth they try

00:04:39,370 --> 00:04:43,300
to spit the workload to the cloud

00:04:41,710 --> 00:04:46,030
service right and that's an important

00:04:43,300 --> 00:04:48,520
part of this and they're learning kind

00:04:46,030 --> 00:04:52,000
of leverage new competing infrastructure

00:04:48,520 --> 00:04:54,400
offerings right so for example we have

00:04:52,000 --> 00:04:55,750
OPM's new service with cable

00:04:54,400 --> 00:05:00,310
this is a number of different customers

00:04:55,750 --> 00:05:01,690
should live to that but once I've been

00:05:00,310 --> 00:05:04,150
about Todd brokering because that's

00:05:01,690 --> 00:05:08,470
really the approach that we're using it

00:05:04,150 --> 00:05:11,470
was identified by partner in 2009 and

00:05:08,470 --> 00:05:13,720
they identify different types of program

00:05:11,470 --> 00:05:15,880
in a mediation where you were providing

00:05:13,720 --> 00:05:18,640
the same kind of service left to your

00:05:15,880 --> 00:05:24,130
customer aggregation we were combining

00:05:18,640 --> 00:05:26,440
some services an arbitrage where you

00:05:24,130 --> 00:05:27,010
would essentially take a compute for

00:05:26,440 --> 00:05:28,750
money

00:05:27,010 --> 00:05:31,510
finding a cheaper class and they thought

00:05:28,750 --> 00:05:35,200
this would be a business Raghavan's

00:05:31,510 --> 00:05:39,480
software right so if you're a broker how

00:05:35,200 --> 00:05:44,440
many of you are there in the room right

00:05:39,480 --> 00:05:45,880
get it right but they they thought this

00:05:44,440 --> 00:05:48,550
could be a business and really we're

00:05:45,880 --> 00:05:50,590
building this cloud broken capability

00:05:48,550 --> 00:05:52,600
and kind of found industries so it's not

00:05:50,590 --> 00:05:56,500
a business software is already disrupted

00:05:52,600 --> 00:05:58,980
this way so I don't know how many of you

00:05:56,500 --> 00:06:02,080
are familiar with the service broker API

00:05:58,980 --> 00:06:04,060
there's a few want to know this stuff

00:06:02,080 --> 00:06:05,890
but I'm gonna walk you through the

00:06:04,060 --> 00:06:09,340
concepts of what we've done because

00:06:05,890 --> 00:06:12,990
using multi cloud fits really really

00:06:09,340 --> 00:06:15,130
well with the service broker concept

00:06:12,990 --> 00:06:16,680
so a service broker is essentially

00:06:15,130 --> 00:06:18,840
something you write once you write

00:06:16,680 --> 00:06:22,289
service broker and when you install it

00:06:18,840 --> 00:06:23,850
it can have multiple services so the

00:06:22,289 --> 00:06:25,650
approach that we've taken that

00:06:23,850 --> 00:06:28,800
everybody's thinking in Google is your

00:06:25,650 --> 00:06:34,380
if you install one service broker and

00:06:28,800 --> 00:06:37,139
you install the cloud services so if you

00:06:34,380 --> 00:06:39,030
installed two brokers one from EWS and

00:06:37,139 --> 00:06:42,389
mantra major you will see in the

00:06:39,030 --> 00:06:44,400
marketplace side-by-side services that

00:06:42,389 --> 00:06:49,020
allow you to go in create from the cfnm

00:06:44,400 --> 00:06:52,590
on the database in RDS we need enough

00:06:49,020 --> 00:06:55,620
or database integer and that's a pretty

00:06:52,590 --> 00:06:58,710
powerful concept right you as a

00:06:55,620 --> 00:07:01,289
developer behavior to select which cloud

00:06:58,710 --> 00:07:02,699
you're gonna use then customers are

00:07:01,289 --> 00:07:06,900
starting to realize that maybe they can

00:07:02,699 --> 00:07:08,130
use Google free development or DCP but

00:07:06,900 --> 00:07:10,919
maybe they want they're picking their

00:07:08,130 --> 00:07:12,139
production monitors on AWS these are

00:07:10,919 --> 00:07:15,630
cost decisions they're making

00:07:12,139 --> 00:07:17,460
performance decisions we're going to

00:07:15,630 --> 00:07:20,789
talk about service plans because each

00:07:17,460 --> 00:07:22,770
service can have multiple service plans

00:07:20,789 --> 00:07:26,039
and we'll talk a little bit about how

00:07:22,770 --> 00:07:29,729
DevOps cream simplifying planners and

00:07:26,039 --> 00:07:32,820
made more secure - it does one of the

00:07:29,729 --> 00:07:35,760
concepts of all of these is how do you

00:07:32,820 --> 00:07:37,500
manage conventions right so in the

00:07:35,760 --> 00:07:40,039
service broker the broker actually keep

00:07:37,500 --> 00:07:44,430
stupid edge who is the operator installs

00:07:40,039 --> 00:07:46,680
the broker the developer never needs to

00:07:44,430 --> 00:07:49,530
worry about the pictures you're just

00:07:46,680 --> 00:07:51,509
going to go into your command mind you

00:07:49,530 --> 00:07:54,599
already be given access to the organ

00:07:51,509 --> 00:07:57,240
space the broth growing does what a

00:07:54,599 --> 00:07:58,919
potentials as minions and it's gonna tag

00:07:57,240 --> 00:08:02,849
them with your particular details right

00:07:58,919 --> 00:08:07,199
so really simplifies setting up anything

00:08:02,849 --> 00:08:13,560
you need up in this or in this your or

00:08:07,199 --> 00:08:15,539
any of the ten of these let's start with

00:08:13,560 --> 00:08:17,460
the service movies there are four

00:08:15,539 --> 00:08:19,979
operations that are kind of difficult

00:08:17,460 --> 00:08:20,680
for the service workers create service

00:08:19,979 --> 00:08:24,070
which create

00:08:20,680 --> 00:08:26,050
a citizen's bike service which is

00:08:24,070 --> 00:08:29,259
finding you're advocating credentials

00:08:26,050 --> 00:08:31,479
back from the broker I'm buying service

00:08:29,259 --> 00:08:33,669
that they need service and then see how

00:08:31,479 --> 00:08:35,229
fireplaces we need where the broker

00:08:33,669 --> 00:08:41,080
places the services into the marketplace

00:08:35,229 --> 00:08:43,229
and you can list them all so this broker

00:08:41,080 --> 00:08:46,180
can implement multiple services each

00:08:43,229 --> 00:08:48,640
with multiple service plans and we need

00:08:46,180 --> 00:08:52,209
these service plans are custom or

00:08:48,640 --> 00:08:55,870
predefined configurations so think about

00:08:52,209 --> 00:08:57,730
what you cannot set up as an operator we

00:08:55,870 --> 00:08:59,920
have customers who want to define their

00:08:57,730 --> 00:09:02,560
policies so for example they want

00:08:59,920 --> 00:09:03,850
storage encryption across the board or

00:09:02,560 --> 00:09:07,570
maybe they want to live eviction on

00:09:03,850 --> 00:09:09,370
certain planets they can go in and

00:09:07,570 --> 00:09:10,810
actually declare that it's a specific

00:09:09,370 --> 00:09:12,610
type of planet so you can have a

00:09:10,810 --> 00:09:14,649
configuration of use of development you

00:09:12,610 --> 00:09:17,500
can have a configuration to be used for

00:09:14,649 --> 00:09:18,850
production or several configurations and

00:09:17,500 --> 00:09:21,029
all the development has to do is pick

00:09:18,850 --> 00:09:23,770
one say yeah I'm going to use that plan

00:09:21,029 --> 00:09:26,830
and it gets created along with all of

00:09:23,770 --> 00:09:30,510
the settings apps admins the BBC the

00:09:26,830 --> 00:09:34,300
security groups that you use in the tip

00:09:30,510 --> 00:09:37,180
it makes it very very easy for you to

00:09:34,300 --> 00:09:39,430
listen what services are available what

00:09:37,180 --> 00:09:44,920
plans are available and Dwalin create

00:09:39,430 --> 00:09:47,380
this basic miss probationary feature

00:09:44,920 --> 00:09:49,900
that was added in the last year that

00:09:47,380 --> 00:09:54,279
really makes it possible for us to use

00:09:49,900 --> 00:09:57,670
this concept of gold provision something

00:09:54,279 --> 00:10:00,430
and then check the status up right so it

00:09:57,670 --> 00:10:08,410
enables you to create resources bm's

00:10:00,430 --> 00:10:10,240
databases and check on the status the

00:10:08,410 --> 00:10:14,920
other concept that we had a lot of

00:10:10,240 --> 00:10:17,980
interest in this begin to add what we

00:10:14,920 --> 00:10:20,200
call arbitrary parameters at the point

00:10:17,980 --> 00:10:23,560
of which you create the instance so a

00:10:20,200 --> 00:10:26,170
lot of times the operator has set up

00:10:23,560 --> 00:10:30,130
plans that maybe aren't quite perfect

00:10:26,170 --> 00:10:31,800
for you you want to increase the cash we

00:10:30,130 --> 00:10:35,249
will increase the size of the database

00:10:31,800 --> 00:10:39,149
and so being able to create insulin

00:10:35,249 --> 00:10:41,100
spike I change the parameters is

00:10:39,149 --> 00:10:42,749
something you can do in the fly on the

00:10:41,100 --> 00:10:45,839
command line so you can see here that we

00:10:42,749 --> 00:10:49,110
can add tags we get the region maybe

00:10:45,839 --> 00:10:56,309
change some of the things in the broker

00:10:49,110 --> 00:10:58,259
when you're creating the resistance the

00:10:56,309 --> 00:11:00,269
other concept that kind of came up and

00:10:58,259 --> 00:11:03,119
we've leveraged service keys in fact

00:11:00,269 --> 00:11:04,589
every is that app developers sometimes

00:11:03,119 --> 00:11:06,059
we want to do more than just create the

00:11:04,589 --> 00:11:09,179
native assets let's delete intervine

00:11:06,059 --> 00:11:12,389
remember they may want to list the tags

00:11:09,179 --> 00:11:15,749
on it they may want to create a snapshot

00:11:12,389 --> 00:11:17,809
of database and so we can do the

00:11:15,749 --> 00:11:21,569
survey's to get temporary credentials

00:11:17,809 --> 00:11:26,610
but then allow you to use the data cloud

00:11:21,569 --> 00:11:28,649
CLI so in the case of a SS you will go

00:11:26,610 --> 00:11:36,149
up and get your keys and then you can

00:11:28,649 --> 00:11:37,649
use that in the existing AWS CLI what

00:11:36,149 --> 00:11:40,769
this gives you is a consistent

00:11:37,649 --> 00:11:42,389
experience for demos so BC of operators

00:11:40,769 --> 00:11:45,089
you can accept policies and create the

00:11:42,389 --> 00:11:48,149
service plans app developers use

00:11:45,089 --> 00:11:51,360
existing create by update and delete

00:11:48,149 --> 00:11:54,170
commits and then you do one time tasks

00:11:51,360 --> 00:11:56,759
another management five service keys

00:11:54,170 --> 00:11:59,579
wait so one service broker provides

00:11:56,759 --> 00:12:04,559
multiple services for cloud and that's

00:11:59,579 --> 00:12:06,360
you get now there's a bunch of activity

00:12:04,559 --> 00:12:10,470
going on in different service brokers

00:12:06,360 --> 00:12:13,439
for multi two we've got the family

00:12:10,470 --> 00:12:16,919
service for us that we're building we've

00:12:13,439 --> 00:12:19,129
got the is your service broker which is

00:12:16,919 --> 00:12:21,569
in github it's open source

00:12:19,129 --> 00:12:24,379
we've got the service broker for GCP

00:12:21,569 --> 00:12:26,819
which the devil here this week and

00:12:24,379 --> 00:12:28,889
they're gonna release at I think next

00:12:26,819 --> 00:12:31,589
month but definitely end up here and

00:12:28,889 --> 00:12:33,989
we've also got 18f which has an open

00:12:31,589 --> 00:12:42,860
source service broker I believe they

00:12:33,989 --> 00:12:42,860
will notice for AWS at this time so just

00:12:43,320 --> 00:12:47,290
you can build your own service brokers

00:12:45,730 --> 00:12:49,600
as well there's no constraint it's an

00:12:47,290 --> 00:12:52,480
open platform anybody can build their

00:12:49,600 --> 00:12:56,320
own service broker we have customers who

00:12:52,480 --> 00:12:58,480
built their own EWS service brokers and

00:12:56,320 --> 00:13:02,410
are using our service broker for other

00:12:58,480 --> 00:13:03,910
services Cloud Foundry is the best

00:13:02,410 --> 00:13:06,520
platform Enterprise for clothes and

00:13:03,910 --> 00:13:09,700
multi club make sure you tell everybody

00:13:06,520 --> 00:13:12,580
that we want you to adopt abused service

00:13:09,700 --> 00:13:14,800
brokers look for cloud arbitrage

00:13:12,580 --> 00:13:16,720
opportunities because there is a lot of

00:13:14,800 --> 00:13:19,300
opportunity today as you move it to

00:13:16,720 --> 00:13:21,640
cloud to figure out which cloud and

00:13:19,300 --> 00:13:24,790
which service to put your applications

00:13:21,640 --> 00:13:28,060
on and ask me and others about

00:13:24,790 --> 00:13:36,820
multi-cloud here at the conference from

00:13:28,060 --> 00:13:39,610
where we see the trends today let the

00:13:36,820 --> 00:13:42,180
costs of savings the arbitrage

00:13:39,610 --> 00:14:13,930
opportunities the workloads performance

00:13:42,180 --> 00:14:17,260
means that yes and you also share some

00:14:13,930 --> 00:14:22,720
problems or kiss your face then moving

00:14:17,260 --> 00:14:26,290
from one to another so one of the things

00:14:22,720 --> 00:14:28,090
that gets more complicated as you have

00:14:26,290 --> 00:14:30,340
more products is reading the security

00:14:28,090 --> 00:14:32,400
aspects right because you really don't

00:14:30,340 --> 00:14:37,150
want to just go ahead and use a cloud

00:14:32,400 --> 00:14:39,820
and have you know public X access to

00:14:37,150 --> 00:14:42,820
your databases you've got a set up you

00:14:39,820 --> 00:14:45,340
know your right a connection you have to

00:14:42,820 --> 00:14:47,279
set out firewall rules so setting up the

00:14:45,340 --> 00:14:48,990
security and learning that security

00:14:47,279 --> 00:14:52,490
each of the cloud she uses is to be is

00:14:48,990 --> 00:14:54,990
important and it is different right so

00:14:52,490 --> 00:14:57,300
unfortunately the top two items are

00:14:54,990 --> 00:14:59,939
pretty good about giving you best

00:14:57,300 --> 00:15:02,100
practices but that is definitely one

00:14:59,939 --> 00:15:03,509
challenge is making sure that we have

00:15:02,100 --> 00:15:05,779
the best practices in place for each

00:15:03,509 --> 00:15:05,779
cloud

00:15:05,959 --> 00:15:12,329
I'd say the the second challenge is

00:15:09,749 --> 00:15:15,089
probably around the maturity of these

00:15:12,329 --> 00:15:25,160
paths so not all the features that you

00:15:15,089 --> 00:15:27,689
mean tagging is an example that is

00:15:25,160 --> 00:15:30,540
absolutely critical for anybody of any

00:15:27,689 --> 00:15:32,970
WS right we have any press best of your

00:15:30,540 --> 00:15:35,910
spoon refused to install this without

00:15:32,970 --> 00:15:37,339
tank because they need to know what

00:15:35,910 --> 00:15:41,160
instance when they have a thousand

00:15:37,339 --> 00:15:42,480
database system compute instances they

00:15:41,160 --> 00:15:46,230
need to know what application is using

00:15:42,480 --> 00:15:50,970
it so that's available on AWS Missouri

00:15:46,230 --> 00:15:55,189
right now DCP is so that that different

00:15:50,970 --> 00:15:55,189
clouds have different ways of grouping

00:15:57,529 --> 00:16:04,500
but it's the trade-off right now there's

00:16:00,600 --> 00:16:22,259
a big value to using some clouds in

00:16:04,500 --> 00:16:28,110
certain ways so the prices are going

00:16:22,259 --> 00:16:30,990
down but the spread is visually okay

00:16:28,110 --> 00:16:33,029
so you can you can get essentially the

00:16:30,990 --> 00:16:34,649
same amount of compute where eighty

00:16:33,029 --> 00:16:35,279
percent less so that's a big that's a

00:16:34,649 --> 00:16:37,949
big save

00:16:35,279 --> 00:16:40,350
so especially when you're using you know

00:16:37,949 --> 00:16:44,329
a lot of computers for machine learning

00:16:40,350 --> 00:16:44,329
or model training

00:16:46,600 --> 00:16:52,250
yeah storage is not as big as compute

00:16:49,910 --> 00:16:54,020
storage costs are pretty minimal like

00:16:52,250 --> 00:16:58,180
it's the compute possible pretty much

00:16:54,020 --> 00:16:58,180
everybody is eighty to ninety percent

00:17:07,060 --> 00:17:13,820
yeah so for us the services are actually

00:17:10,940 --> 00:17:16,790
within this app so they run an elastic

00:17:13,820 --> 00:17:20,150
runtime wait till they get all the value

00:17:16,790 --> 00:17:30,980
of elastic runtime but we don't actually

00:17:20,150 --> 00:17:34,490
do any anything fancy we're just a 4-h

00:17:30,980 --> 00:17:36,440
foundation or a cluster but if you're

00:17:34,490 --> 00:17:45,410
running in different kinds then there's

00:17:36,440 --> 00:17:52,910
one running in each lab yeah any other

00:17:45,410 --> 00:17:56,810
questions well let me ask you questions

00:17:52,910 --> 00:18:05,810
I mean how many of you are thinking of

00:17:56,810 --> 00:18:16,760
using multi cloud be interesting to see

00:18:05,810 --> 00:18:18,680
that in the year yes so you really don't

00:18:16,760 --> 00:18:20,800
watch anybody else's cloud use on the

00:18:18,680 --> 00:18:20,800
earth

00:18:22,340 --> 00:18:28,350
it's going to end up very much the same

00:18:24,840 --> 00:18:30,990
way that people do brother in it and

00:18:28,350 --> 00:18:34,670
right they buy one line from you when

00:18:30,990 --> 00:18:34,670
might come the other that's my tendency

00:18:37,220 --> 00:18:40,590
but in the short term you can be now in

00:18:39,480 --> 00:18:45,440
bed with maturity

00:18:40,590 --> 00:18:48,630
there's laboratories legal appeals

00:18:45,440 --> 00:18:57,240
people are moving people using multiple

00:18:48,630 --> 00:19:00,030
clouds so being able to use Cloud

00:18:57,240 --> 00:19:01,740
Foundry as the platform and being able

00:19:00,030 --> 00:19:03,360
to write your own service brokers who

00:19:01,740 --> 00:19:06,540
leverage service workers that's really

00:19:03,360 --> 00:19:07,830
where the innovation is or the

00:19:06,540 --> 00:19:09,690
productivity savings is going to be

00:19:07,830 --> 00:19:11,220
being able to leverage other people's

00:19:09,690 --> 00:19:14,940
brokers rather than have to write your

00:19:11,220 --> 00:19:22,830
own that's a huge huge plus you don't

00:19:14,940 --> 00:19:25,410
have to learn all the lessons what are

00:19:22,830 --> 00:19:28,130
the other lessons we kind of learned was

00:19:25,410 --> 00:19:30,470
many of me building a service plans

00:19:28,130 --> 00:19:33,870
people really want flexibility of that

00:19:30,470 --> 00:19:37,130
so it's not enough to have one or two

00:19:33,870 --> 00:19:40,560
serious plans you want to have pre-built

00:19:37,130 --> 00:19:42,840
best practices for example databases we

00:19:40,560 --> 00:19:45,330
all know what small medium large looks

00:19:42,840 --> 00:19:47,640
like an enterprise series we all know in

00:19:45,330 --> 00:19:49,080
production you want backups and multi

00:19:47,640 --> 00:19:51,780
easy for the development you probably

00:19:49,080 --> 00:19:53,910
built right and then being able to allow

00:19:51,780 --> 00:19:55,560
all the users to the operators to

00:19:53,910 --> 00:20:02,730
customize this is really important as

00:19:55,560 --> 00:20:06,620
well all right if there's no more

00:20:02,730 --> 00:20:06,620

YouTube URL: https://www.youtube.com/watch?v=SGXiVNV3wa4


