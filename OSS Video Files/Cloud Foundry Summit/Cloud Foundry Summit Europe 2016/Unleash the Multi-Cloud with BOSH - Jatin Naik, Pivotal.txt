Title: Unleash the Multi-Cloud with BOSH - Jatin Naik, Pivotal
Publication date: 2016-09-30
Playlist: Cloud Foundry Summit Europe 2016
Description: 
	Unleash the Multi-Cloud with BOSH - Jatin Naik, Pivotal

Cloud operators want to be able to run and manage systems on a variety of cloud providers. Today Cloud Foundryâ€™s BOSH only supports a single cloud provider for a given installation.

Introducing the BOSH meta CPI concept project which deploys multiple CPIs and allows a CPI to be chosen while deploying, giving operators the power to decide which IaaS is used for certain instance types and thus the ability to create a multi-cloud BOSH deployments. Uses cases for the meta CPI include deploying systems across multiple clouds, scaling from a private to a public cloud, running services on a particular IaaS that provides specialised hardware and executing errands in Garden containers.

Understand how to manage multi cloud deployments using a single BOSH installation and learn about the latency and network issues that arise.

About Jatin Naik
Software Engineer at Pivotal, on Cloud Foundry.
Captions: 
	00:00:24,750 --> 00:00:27,809
[Music]

00:00:35,700 --> 00:00:38,859
[Music]

00:00:43,340 --> 00:00:50,610
[Music]

00:00:46,340 --> 00:00:55,320
which is the cosmetic here so this is

00:00:50,610 --> 00:00:58,640
this to the CPI people who essentially

00:00:55,320 --> 00:01:00,780
unable you might be plugged appointment

00:00:58,640 --> 00:01:06,119
so the whole of this talk is to

00:01:00,780 --> 00:01:12,090
highlight the possibilities of using

00:01:06,119 --> 00:01:13,439
this so yeah so this stock is divided

00:01:12,090 --> 00:01:15,930
into equal parts

00:01:13,439 --> 00:01:22,680
you know you look at wash for a while

00:01:15,930 --> 00:01:25,170
and see how after that let everyone

00:01:22,680 --> 00:01:27,570
introduce another CPI project and how

00:01:25,170 --> 00:01:31,060
that works we look at the sunless cases

00:01:27,570 --> 00:01:34,719
which might put some demos of course

00:01:31,060 --> 00:01:34,719
[Music]

00:01:36,060 --> 00:02:51,910
yeah so like you you have just received

00:02:45,820 --> 00:02:57,579
like some saw that from your and so how

00:02:51,910 --> 00:03:01,180
do you interact with the posting that

00:02:57,579 --> 00:03:03,790
you do something common is cancer stem

00:03:01,180 --> 00:03:06,280
cell is a bare-bones update system image

00:03:03,790 --> 00:03:08,139
which contains ingest the operating

00:03:06,280 --> 00:03:10,480
system that needs to run on that

00:03:08,139 --> 00:03:20,739
particular eyes it also has some

00:03:10,480 --> 00:03:22,269
specific metadata so on so something

00:03:20,739 --> 00:03:25,350
which is uh a specific which is

00:03:22,269 --> 00:03:25,350
essentially at this

00:03:37,910 --> 00:04:46,850
[Music]

00:03:39,730 --> 00:04:49,070
so on the ice into this mess so Porsha

00:04:46,850 --> 00:04:56,390
knows where to put these things that

00:04:49,070 --> 00:05:01,400
you'll create and so it will essentially

00:04:56,390 --> 00:05:15,590
convert your infrastructure so whatever

00:05:01,400 --> 00:05:18,560
you are which is an exact language the

00:05:15,590 --> 00:05:23,150
points what the machines are in your

00:05:18,560 --> 00:05:24,380
moment so you could do this workflow the

00:05:23,150 --> 00:05:26,660
workflow that we shall discuss about

00:05:24,380 --> 00:05:28,700
stem cells will be this and I might ask

00:05:26,660 --> 00:05:32,510
you the first are you kind of move this

00:05:28,700 --> 00:05:35,810
today on AWS via the OpenStack and Azure

00:05:32,510 --> 00:05:40,630
and you to what an operator remains the

00:05:35,810 --> 00:05:40,630
same so all of these providers

00:05:51,540 --> 00:07:26,020
so this is so the CPI is like like and

00:07:22,350 --> 00:07:33,820
it returns for advice to force to track

00:07:26,020 --> 00:07:38,290
the resources that creates so how to

00:07:33,820 --> 00:07:40,440
interact with your cloud on CBS so if

00:07:38,290 --> 00:07:40,440
you

00:07:41,900 --> 00:09:15,449
so happens to be so which so currently

00:09:12,470 --> 00:09:19,980
these providers can be specified with

00:09:15,449 --> 00:09:23,279
the way that people do multi cloud

00:09:19,980 --> 00:09:24,870
deployments today stuff like convey it

00:09:23,279 --> 00:09:29,670
essentially we have two separate paths

00:09:24,870 --> 00:09:31,769
directors on each of the aisles and as

00:09:29,670 --> 00:09:34,680
your and you have to separate directors

00:09:31,769 --> 00:09:36,570
and use two separate manifests and then

00:09:34,680 --> 00:09:39,800
you manually converged on by yourself

00:09:36,570 --> 00:09:44,390
let's do this

00:09:39,800 --> 00:09:48,760
and so what if you wanted only to manage

00:09:44,390 --> 00:09:48,760
multiple providers

00:09:51,070 --> 00:09:56,960
introducing the meta CPI so let me see P

00:09:54,170 --> 00:10:00,220
is a concept project that I was working

00:09:56,960 --> 00:10:03,650
on on the side so this allows you to

00:10:00,220 --> 00:10:07,310
deploy multiple provider in a place this

00:10:03,650 --> 00:10:08,840
one same connector and then the CPI

00:10:07,310 --> 00:10:12,500
essentially acts as a route between

00:10:08,840 --> 00:10:16,370
those provider and the pieces so that it

00:10:12,500 --> 00:10:20,660
can honestly the if the CPI cause Mikey

00:10:16,370 --> 00:10:23,540
saw multiple providers so it does this

00:10:20,660 --> 00:10:25,610
by two two main things so it does this

00:10:23,540 --> 00:10:27,860
by inspecting the stencil material to

00:10:25,610 --> 00:10:30,770
figure out which provider the distance

00:10:27,860 --> 00:10:37,600
is for and it works by tracking the

00:10:30,770 --> 00:10:39,590
flower so let us take an example of that

00:10:37,600 --> 00:10:48,770
so this is our setup

00:10:39,590 --> 00:10:52,880
so therefore the and CPI and is just

00:10:48,770 --> 00:10:55,850
very secure thing like because EPA 31 so

00:10:52,880 --> 00:11:02,090
you have SS if you know Azure which then

00:10:55,850 --> 00:11:03,830
interact with that plot so when you then

00:11:02,090 --> 00:11:06,020
there is a create stem cell request with

00:11:03,830 --> 00:11:08,600
a very severe very severe with respect

00:11:06,020 --> 00:11:11,510
to stem cell and understand that that

00:11:08,600 --> 00:11:12,850
stem cell is for the individual CPI for

00:11:11,510 --> 00:11:18,050
example because

00:11:12,850 --> 00:11:22,510
see stem cells are GPS Pacific's they

00:11:18,050 --> 00:11:25,760
are created for a particular provider

00:11:22,510 --> 00:11:28,940
after that the ewic here will return it

00:11:25,760 --> 00:11:32,630
as we saw before our identifier for that

00:11:28,940 --> 00:11:34,940
image which will disappear will record

00:11:32,630 --> 00:11:38,450
that turn on the fire and know that it

00:11:34,940 --> 00:11:44,540
had come from EWS and then forward that

00:11:38,450 --> 00:11:48,050
request so this time as yours comes up

00:11:44,540 --> 00:11:49,640
so this request is probably - as your as

00:11:48,050 --> 00:11:52,490
your reference it the floral department

00:11:49,640 --> 00:11:55,280
for that steps and and that's time sir

00:11:52,490 --> 00:11:59,090
that is now recorded in the store of the

00:11:55,280 --> 00:11:59,930
meta CPI say that that cell is from

00:11:59,090 --> 00:12:02,570
Azure

00:11:59,930 --> 00:12:06,080
so now subsequently when we get the H

00:12:02,570 --> 00:12:09,590
stem cell request what like to refer to

00:12:06,080 --> 00:12:12,260
a particular cloud provider that I give

00:12:09,590 --> 00:12:14,780
anyone let me see yeah we'll go that

00:12:12,260 --> 00:12:18,730
it's for the particular cloud from

00:12:14,780 --> 00:12:23,570
looking at it and it will make that

00:12:18,730 --> 00:12:26,960
request on particular on the body back

00:12:23,570 --> 00:12:30,320
into court that we saw so this happens

00:12:26,960 --> 00:12:33,050
to be a double yes then the AWS appear

00:12:30,320 --> 00:12:35,570
as we saw before we'll give it in

00:12:33,050 --> 00:12:37,880
society which is again so it will keep

00:12:35,570 --> 00:12:39,910
it out there in society and all

00:12:37,880 --> 00:12:42,230
subsequent after

00:12:39,910 --> 00:12:44,600
actions that happen on that instance for

00:12:42,230 --> 00:12:49,490
example if there is a time instance that

00:12:44,600 --> 00:12:50,990
happens instance by its with the people

00:12:49,490 --> 00:12:58,160
that if you forward that request to the

00:12:50,990 --> 00:13:02,590
UMUC yeah so this is so the next section

00:12:58,160 --> 00:13:09,790
is a bit more so how do you actually

00:13:02,590 --> 00:13:13,310
configure this so this is this is how

00:13:09,790 --> 00:13:13,630
what directors manifest media data looks

00:13:13,310 --> 00:13:15,819
like

00:13:13,630 --> 00:13:20,529
today so as you can imagine what you

00:13:15,819 --> 00:13:22,630
what corrector by mother so you have the

00:13:20,529 --> 00:13:28,029
bas-reliefs and today you put in

00:13:22,630 --> 00:13:30,779
co-locate the PWC peonies and to see

00:13:28,029 --> 00:13:34,839
that you wanna use to provision machines

00:13:30,779 --> 00:13:36,970
this is how it looks like today in this

00:13:34,839 --> 00:13:39,430
case you will essentially deploy the

00:13:36,970 --> 00:13:42,100
water entered deployed the other cps

00:13:39,430 --> 00:13:43,870
anymore and deploy the maxi there tell

00:13:42,100 --> 00:13:46,930
the director that you actually like to

00:13:43,870 --> 00:13:49,600
point to the matter see here and in the

00:13:46,930 --> 00:13:51,130
meta serious properties you can tell the

00:13:49,600 --> 00:13:54,100
matter see here about all the available

00:13:51,130 --> 00:13:56,170
CP is on that machine so you could give

00:13:54,100 --> 00:13:58,870
the parts of different law provided

00:13:56,170 --> 00:14:03,730
pieces that exist that you have deployed

00:13:58,870 --> 00:14:07,029
on the same machine so how does a job

00:14:03,730 --> 00:14:08,560
definition of that so this is a job

00:14:07,029 --> 00:14:09,699
definition in your deployment that you

00:14:08,560 --> 00:14:13,870
are trying to make so we have already

00:14:09,699 --> 00:14:18,089
looked at yahoo looks like boy what

00:14:13,870 --> 00:14:20,199
director itself so how can you configure

00:14:18,089 --> 00:14:23,880
the deployments that you have wanna do

00:14:20,199 --> 00:14:26,579
on the mat the director so like

00:14:23,880 --> 00:14:29,350
everything over here is based on steps

00:14:26,579 --> 00:14:33,069
as normally you would define a

00:14:29,350 --> 00:14:38,279
particular structure that now multiple

00:14:33,069 --> 00:14:41,560
snapshots and when you define a job

00:14:38,279 --> 00:14:50,319
which which in structure it will be

00:14:41,560 --> 00:14:52,329
deployed to so you also give it a vm

00:14:50,319 --> 00:14:54,750
type and a network that so right now

00:14:52,329 --> 00:14:57,610
there is no validation to check to that

00:14:54,750 --> 00:14:59,529
the network that you are deploying to

00:14:57,610 --> 00:15:02,560
actually belongs to that particular is

00:14:59,529 --> 00:15:03,770
if you just read that we deploy and the

00:15:02,560 --> 00:15:08,770
line

00:15:03,770 --> 00:15:12,650
because it does not know that Network so

00:15:08,770 --> 00:15:16,240
to help with essentially creating VM

00:15:12,650 --> 00:15:19,250
types that are applicable across the

00:15:16,240 --> 00:15:21,890
across cloud providers the Metasequoia

00:15:19,250 --> 00:15:24,500
also supports like what I call metric

00:15:21,890 --> 00:15:26,750
cloud definitions so this is what a

00:15:24,500 --> 00:15:30,260
typical cloud efficient like looks like

00:15:26,750 --> 00:15:32,840
today so there is a VM type which is

00:15:30,260 --> 00:15:35,630
called a small VM and in the more

00:15:32,840 --> 00:15:38,090
properties you give an instance side to

00:15:35,630 --> 00:15:41,000
Michael so this is how it like looks

00:15:38,090 --> 00:15:44,950
like great involved so a small is

00:15:41,000 --> 00:15:50,210
essentially but you might work on that

00:15:44,950 --> 00:15:54,860
ewt so what you could do is like the VM

00:15:50,210 --> 00:15:57,170
type is small and in the properties in

00:15:54,860 --> 00:16:01,280
which you specify on is your a small

00:15:57,170 --> 00:16:06,950
looks like a standard D 2 WS a small

00:16:01,280 --> 00:16:10,580
looks like T 2 micro so similarly for

00:16:06,950 --> 00:16:11,900
networks this is however typically we

00:16:10,580 --> 00:16:15,050
are selected to look like in your

00:16:11,900 --> 00:16:18,320
conflict today so you will have even

00:16:15,050 --> 00:16:19,970
defined it obvious network and say that

00:16:18,320 --> 00:16:21,770
this is a particular subject that you

00:16:19,970 --> 00:16:24,230
are targeting like that that is the

00:16:21,770 --> 00:16:26,830
subject at this network refers to and

00:16:24,230 --> 00:16:29,630
that those are the right earrings

00:16:26,830 --> 00:16:31,640
similar to the air types in the medicine

00:16:29,630 --> 00:16:35,900
the medicine here also allows make metal

00:16:31,640 --> 00:16:39,770
blocks for Nick roots so you can see

00:16:35,900 --> 00:16:42,050
that in as you are like the network card

00:16:39,770 --> 00:16:44,420
compilation on eyes here should go to as

00:16:42,050 --> 00:16:46,910
you appear and on it application should

00:16:44,420 --> 00:16:49,820
go to subnet ID a exactly what are there

00:16:46,910 --> 00:16:51,500
is so this is how you can define like

00:16:49,820 --> 00:16:53,870
define network types and VM types

00:16:51,500 --> 00:16:59,020
they're applicable across multiple cloud

00:16:53,870 --> 00:16:59,020
providers all right so that stand

00:17:01,590 --> 00:17:11,709
right - to conclude the matter CPI is

00:17:07,000 --> 00:17:15,790
project which essentially acts multiple

00:17:11,709 --> 00:17:17,770
cloud providers it can deploy them all

00:17:15,790 --> 00:17:24,839
over team and then act essentially a

00:17:17,770 --> 00:17:28,870
switch between also tracks the

00:17:24,839 --> 00:17:31,570
authorities that come out from those CPM

00:17:28,870 --> 00:17:33,850
so that it can route route the

00:17:31,570 --> 00:17:37,930
subsequent requests correctly back to

00:17:33,850 --> 00:17:40,540
the simpler provider and it provides

00:17:37,930 --> 00:17:46,030
special configuration box so that you

00:17:40,540 --> 00:17:49,110
can configure configure VM types which

00:17:46,030 --> 00:17:54,250
are applicable across cloud providers

00:17:49,110 --> 00:17:56,170
now you spaces so the most obvious use

00:17:54,250 --> 00:17:59,380
case of course is doing mighty block

00:17:56,170 --> 00:18:03,940
deployment which means that before you

00:17:59,380 --> 00:18:07,440
you have a director on both the both the

00:18:03,940 --> 00:18:09,730
sides or both the ISS now you can have

00:18:07,440 --> 00:18:11,380
deployment in which you have only one

00:18:09,730 --> 00:18:14,320
boss director just sitting on either

00:18:11,380 --> 00:18:20,720
side you connect those 2 VPNs by a

00:18:14,320 --> 00:18:23,769
pattern of some sort and

00:18:20,720 --> 00:18:23,769
[Music]

00:18:32,630 --> 00:18:37,709
[Music]

00:18:40,330 --> 00:18:43,830
[Music]

00:18:51,770 --> 00:20:18,120
so so this is on the on the VM pipe

00:20:15,630 --> 00:20:21,540
actually using some new metal structure

00:20:18,120 --> 00:20:24,650
so there is just one VM definition but

00:20:21,540 --> 00:20:24,650
[Music]

00:20:29,419 --> 00:20:34,260
and I actually do not have time so I'm

00:20:32,850 --> 00:20:36,960
just creating a hacking program

00:20:34,260 --> 00:20:44,700
appengine X so I'm essentially putting

00:20:36,960 --> 00:20:48,700
those is in engine X so so so right now

00:20:44,700 --> 00:20:51,340
you can see the settings in here

00:20:48,700 --> 00:20:54,609
Jessica I have my director hanging out

00:20:51,340 --> 00:20:57,369
there and I have gateway attention so

00:20:54,609 --> 00:20:59,200
that that we've seen over the uws - as

00:20:57,369 --> 00:21:01,200
you know really is forwarding all the

00:20:59,200 --> 00:21:06,190
traffic in that subnet

00:21:01,200 --> 00:21:08,289
to the network I have used one of the

00:21:06,190 --> 00:21:09,759
templates are available online

00:21:08,289 --> 00:21:12,369
- essentially to a side to side

00:21:09,759 --> 00:21:16,960
connection so I hope you see gateway

00:21:12,369 --> 00:21:20,619
which which is a receiving subnets in as

00:21:16,960 --> 00:21:42,070
voice to the other side my local host is

00:21:20,619 --> 00:21:47,970
not go to my terminal and so what we see

00:21:42,070 --> 00:21:53,739
is EWS machine is coming up so this is

00:21:47,970 --> 00:21:56,499
on Azure we also see as your machine we

00:21:53,739 --> 00:21:59,159
created on a site by a single one a

00:21:56,499 --> 00:21:59,159
single buffer

00:22:08,100 --> 00:22:13,900
after four minutes it will all be done

00:22:10,210 --> 00:22:18,030
and if I hit my word balancer I would

00:22:13,900 --> 00:22:21,660
have traffic essentially bounced across

00:22:18,030 --> 00:22:27,940
large providers so you have the EMS

00:22:21,660 --> 00:22:31,590
provider stare at me and know that the

00:22:27,940 --> 00:22:31,590
postman actually has more and

00:23:19,150 --> 00:23:27,080
so the other so that I think that people

00:23:22,160 --> 00:23:31,550
do is run errands so currently you when

00:23:27,080 --> 00:23:33,320
you run errands which are asks what

00:23:31,550 --> 00:23:35,810
should essentially starts to scream and

00:23:33,320 --> 00:23:38,240
run that food in that instance and

00:23:35,810 --> 00:23:41,000
denita versus later the things that we

00:23:38,240 --> 00:23:45,170
typically do in and really eat small so

00:23:41,000 --> 00:23:48,620
which is like so that they can

00:23:45,170 --> 00:23:55,850
essentially run in garden containers the

00:23:48,620 --> 00:23:59,600
bottom garden is the the container one

00:23:55,850 --> 00:24:02,000
time for boundary which there is a CPR

00:23:59,600 --> 00:24:05,570
on top of it so we can deploy the total

00:24:02,000 --> 00:24:08,240
CPI regarding software and the yes CPR

00:24:05,570 --> 00:24:22,420
and have a deployment which in which

00:24:08,240 --> 00:24:25,430
some components kind of an infant so

00:24:22,420 --> 00:24:28,970
this is everything instead of a time so

00:24:25,430 --> 00:24:32,990
we have two questions one is just saying

00:24:28,970 --> 00:24:35,630
hello on yes so when you done during the

00:24:32,990 --> 00:24:37,900
theater is actually spinning up instance

00:24:35,630 --> 00:24:37,900
for you

00:24:49,860 --> 00:24:54,400
so all of these are the mixtapes and you

00:24:52,660 --> 00:24:55,960
like the actual work that was done well

00:24:54,400 --> 00:25:06,160
essentially you can in fact one second

00:24:55,960 --> 00:25:07,990
which was saying hello all right and

00:25:06,160 --> 00:25:11,590
then as you can see they competed in

00:25:07,990 --> 00:25:21,580
three minutes and the secondary is is

00:25:11,590 --> 00:25:37,690
just being on board so that was not even

00:25:21,580 --> 00:25:40,780
six seconds so and so the other is

00:25:37,690 --> 00:25:45,010
essentially one that pushed me the most

00:25:40,780 --> 00:25:50,980
is roasting in which you have like you

00:25:45,010 --> 00:25:55,540
have washed upon what deployment on your

00:25:50,980 --> 00:25:57,400
vSphere and one vSphere as it's on your

00:25:55,540 --> 00:26:00,640
premise you cannot expand it like that

00:25:57,400 --> 00:26:03,610
as long if you want to boost or if you

00:26:00,640 --> 00:26:05,290
have some system capacity overhead in

00:26:03,610 --> 00:26:08,500
which you want a city just for that

00:26:05,290 --> 00:26:15,430
season you could use a public cloud like

00:26:08,500 --> 00:26:20,650
as your specific additional capacity

00:26:15,430 --> 00:26:23,980
you're managing the other one that

00:26:20,650 --> 00:26:26,260
interests me is how can you having

00:26:23,980 --> 00:26:30,670
specialized hardware on specific files

00:26:26,260 --> 00:26:32,650
so has this machines which are like

00:26:30,670 --> 00:26:39,970
index large which are really nice for

00:26:32,650 --> 00:26:42,310
like you could spin up just like for

00:26:39,970 --> 00:26:45,610
your one of you see sister and just go

00:26:42,310 --> 00:26:50,100
on AWS to use one specific instance you

00:26:45,610 --> 00:26:50,100
could turn a normal cluster of your own

00:26:51,950 --> 00:28:51,409
so in other other

00:29:17,750 --> 00:30:30,270
so yeah this is not this particular so

00:30:26,490 --> 00:30:33,960
this is really to distribute request the

00:30:30,270 --> 00:30:37,080
in creation requests between that is

00:30:33,960 --> 00:30:42,140
really in which you understand what the

00:30:37,080 --> 00:30:42,140
application is doing and one more

00:30:53,830 --> 00:30:56,940
[Music]

00:31:10,460 --> 00:31:19,839
[Music]

00:31:23,640 --> 00:31:26,759
[Music]

00:31:35,340 --> 00:31:43,799
so stem cell-like so stem cell with

00:31:38,260 --> 00:31:46,330
nothing but it's not easy you can I

00:31:43,799 --> 00:32:17,890
would be the one that is published by

00:31:46,330 --> 00:32:20,500
the state right now is just was

00:32:17,890 --> 00:32:22,200
international JC Park which is one so

00:32:20,500 --> 00:32:25,630
this idea you should go and indignities

00:32:22,200 --> 00:32:28,169
so this should share the database that

00:32:25,630 --> 00:32:28,169
refuses

00:32:31,590 --> 00:32:38,909
how do you conversion management that

00:32:34,740 --> 00:32:41,190
how can I get stuck if I won't have to

00:32:38,909 --> 00:32:42,720
stem cells or support two versions of to

00:32:41,190 --> 00:32:44,789
force themselves right now is that

00:32:42,720 --> 00:32:46,860
constantly are they that is offered in

00:32:44,789 --> 00:32:48,690
the future so there is still possible

00:32:46,860 --> 00:32:50,190
right like so you can just do that go

00:32:48,690 --> 00:32:53,100
through as it is in water

00:32:50,190 --> 00:32:54,990
so what already has a way to manage ten

00:32:53,100 --> 00:32:56,879
solutions to Brian that will change with

00:32:54,990 --> 00:32:58,980
this party right this will just you know

00:32:56,879 --> 00:33:01,549
that this particular stem cell is for

00:32:58,980 --> 00:33:01,549
that provider

00:33:06,820 --> 00:33:11,150

YouTube URL: https://www.youtube.com/watch?v=mn8X9m68nDI


