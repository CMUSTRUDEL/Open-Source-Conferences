Title: GitHub ❤️ npm - GitHub Universe 2020
Publication date: 2020-12-11
Playlist: GitHub Universe 2020: Developer - Open Source Communities
Description: 
	Presented by Myles Borins, Staff Product Manager, GitHub

Earlier this year, GitHub acquired npm Inc., and since then we have been heads down on improving it and supporting the world’s largest development community, JavaScript. We’ve polished the services you’ve come to know and trust, released version 7 of the npm CLI, and we could not have done it without your involvement. Let’s recap what we’ve done this year and what the JavaScript community has to look forward to in 2021 and beyond.

For more from GitHub Universe 2020, visit https://githubuniverse.com

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:01,090 --> 00:00:04,180
[Music]

00:00:07,170 --> 00:00:10,330
[Music]

00:00:10,639 --> 00:00:16,160
hey everyone i'm so happy to be here and

00:00:13,120 --> 00:00:17,840
uh so glad to be joining you all um

00:00:16,160 --> 00:00:19,600
thank you to both of our hosts for doing

00:00:17,840 --> 00:00:20,400
such an amazing job and kicking things

00:00:19,600 --> 00:00:22,560
off and

00:00:20,400 --> 00:00:23,600
you know there's actually a massive crew

00:00:22,560 --> 00:00:25,920
of folks

00:00:23,600 --> 00:00:27,439
that you may or may not uh know about

00:00:25,920 --> 00:00:29,119
that are doing everything from checking

00:00:27,439 --> 00:00:30,480
our mics to looking at the lights on our

00:00:29,119 --> 00:00:32,480
camera to

00:00:30,480 --> 00:00:34,000
moving all the things around so i just

00:00:32,480 --> 00:00:34,960
want to quickly do a shout out and thank

00:00:34,000 --> 00:00:36,160
you to

00:00:34,960 --> 00:00:38,320
you know all the different people who

00:00:36,160 --> 00:00:39,840
are helping make this happen

00:00:38,320 --> 00:00:42,079
but i think with that in mind it's

00:00:39,840 --> 00:00:45,200
probably time to hop right into things

00:00:42,079 --> 00:00:48,559
um and talk about why uh github

00:00:45,200 --> 00:00:50,879
hearts np um and

00:00:48,559 --> 00:00:52,559
you know i was introduced by the host

00:00:50,879 --> 00:00:54,320
but i'll introduce myself again

00:00:52,559 --> 00:00:56,559
um i'm miles and the staff product

00:00:54,320 --> 00:00:59,039
manager of open source here at github

00:00:56,559 --> 00:01:01,520
um i also do a lot of things related to

00:00:59,039 --> 00:01:04,080
javascript i quite like

00:01:01,520 --> 00:01:05,040
javascript it's pretty amazing all the

00:01:04,080 --> 00:01:07,439
things you can do

00:01:05,040 --> 00:01:10,880
even the things you probably shouldn't

00:01:07,439 --> 00:01:12,640
you can still do it with that language

00:01:10,880 --> 00:01:14,000
and if you use javascript you're

00:01:12,640 --> 00:01:15,600
probably aware of npm

00:01:14,000 --> 00:01:17,040
um but if you're not that's cool i have

00:01:15,600 --> 00:01:18,479
a little bit of an intro for you all who

00:01:17,040 --> 00:01:21,920
want to know you know like what is

00:01:18,479 --> 00:01:23,600
even npm um and npm is a critical part

00:01:21,920 --> 00:01:25,040
of the javascript community which

00:01:23,600 --> 00:01:28,000
is one of the largest developer

00:01:25,040 --> 00:01:31,280
ecosystems in the world

00:01:28,000 --> 00:01:33,520
npm is the package manager for node.js

00:01:31,280 --> 00:01:35,200
although npm doesn't stand for node

00:01:33,520 --> 00:01:37,119
package manager

00:01:35,200 --> 00:01:38,720
which you know sometimes folks think it

00:01:37,119 --> 00:01:41,600
does

00:01:38,720 --> 00:01:42,240
npm is a also a public collection of

00:01:41,600 --> 00:01:43,759
packages

00:01:42,240 --> 00:01:45,680
of open source code serving the

00:01:43,759 --> 00:01:47,680
javascript community so we do have the

00:01:45,680 --> 00:01:49,200
npm cli which is the tool that you'll

00:01:47,680 --> 00:01:50,960
use to install packages

00:01:49,200 --> 00:01:54,799
npm is also the registry of where all

00:01:50,960 --> 00:01:58,079
that code lives and is managed

00:01:54,799 --> 00:01:58,799
now npm inc was acquired um by github in

00:01:58,079 --> 00:02:02,320
00:01:58,799 --> 00:02:05,520
it was originally founded in 2014

00:02:02,320 --> 00:02:07,759
um and right now there's over 1.4

00:02:05,520 --> 00:02:10,000
million packages with over a hundred

00:02:07,759 --> 00:02:11,920
billion downloads a month which is

00:02:10,000 --> 00:02:14,239
you know quite a few bits that were

00:02:11,920 --> 00:02:16,560
pushing through those internet tubes

00:02:14,239 --> 00:02:18,160
um and the big thing that's pushing

00:02:16,560 --> 00:02:19,520
things through the tube is the npm

00:02:18,160 --> 00:02:20,560
registry and so i want to give you a

00:02:19,520 --> 00:02:23,200
quick update on

00:02:20,560 --> 00:02:24,800
an exciting new registry feature which

00:02:23,200 --> 00:02:27,760
is automation tokens

00:02:24,800 --> 00:02:29,200
um so if you are working with npm and

00:02:27,760 --> 00:02:31,040
you're publishing whenever you do like

00:02:29,200 --> 00:02:32,080
an npm login on your system you're

00:02:31,040 --> 00:02:33,599
getting a token

00:02:32,080 --> 00:02:35,599
and you're able to use that token to

00:02:33,599 --> 00:02:37,040
publish repos um two-factor

00:02:35,599 --> 00:02:39,040
authentication is something that we

00:02:37,040 --> 00:02:40,720
introduced a couple years ago

00:02:39,040 --> 00:02:42,400
as a great way to help protect your

00:02:40,720 --> 00:02:44,160
account the only problem is when you

00:02:42,400 --> 00:02:46,480
turn on two-factor authentication

00:02:44,160 --> 00:02:48,080
it's now no longer possible to publish

00:02:46,480 --> 00:02:49,680
with continuous deployment

00:02:48,080 --> 00:02:51,200
because it's asking for your two-factor

00:02:49,680 --> 00:02:53,040
authentication token

00:02:51,200 --> 00:02:55,360
so these new kinds of tokens automation

00:02:53,040 --> 00:02:57,200
tokens um don't require two-factor

00:02:55,360 --> 00:02:58,879
authentication in order to publish

00:02:57,200 --> 00:03:00,239
and so you can take those tokens

00:02:58,879 --> 00:03:02,319
generate them put them

00:03:00,239 --> 00:03:04,239
in like github actions or your favorite

00:03:02,319 --> 00:03:05,040
continuous integration and deployment

00:03:04,239 --> 00:03:07,680
platform

00:03:05,040 --> 00:03:08,720
and you can now still publish plat

00:03:07,680 --> 00:03:10,159
packages

00:03:08,720 --> 00:03:12,640
using continuous integration and

00:03:10,159 --> 00:03:14,080
deployment another point of

00:03:12,640 --> 00:03:16,319
npm that's worth talking about that i'm

00:03:14,080 --> 00:03:18,640
excited about is our documentation

00:03:16,319 --> 00:03:20,959
and we've done a pretty major overhaul

00:03:18,640 --> 00:03:22,400
to docsteadmpmjs.com

00:03:20,959 --> 00:03:24,640
you can see on the right what the new

00:03:22,400 --> 00:03:25,440
doc site looks like for the npm install

00:03:24,640 --> 00:03:27,680
command

00:03:25,440 --> 00:03:30,720
this new doc site has cli documentation

00:03:27,680 --> 00:03:33,599
for both npm v6 and npm v7

00:03:30,720 --> 00:03:35,040
it has um it's built using gatsby which

00:03:33,599 --> 00:03:38,159
is primers doctor

00:03:35,040 --> 00:03:40,799
using uh primer stocked cap theme um

00:03:38,159 --> 00:03:42,319
it is built with github actions deployed

00:03:40,799 --> 00:03:44,319
via github pages

00:03:42,319 --> 00:03:47,120
i'm a big fan of dog fooding and using

00:03:44,319 --> 00:03:48,799
our own technology as much as possible

00:03:47,120 --> 00:03:50,480
and we're working on getting it into a

00:03:48,799 --> 00:03:52,879
state where it can be open sourced

00:03:50,480 --> 00:03:54,959
and we can accept public pull requests

00:03:52,879 --> 00:03:57,120
in the near future

00:03:54,959 --> 00:03:58,480
and you heard me mention npm 7 in the

00:03:57,120 --> 00:04:00,239
npm cli

00:03:58,480 --> 00:04:02,080
and i'm pretty excited to talk about the

00:04:00,239 --> 00:04:04,000
fact that npm 7 is already shipping

00:04:02,080 --> 00:04:06,080
today with no js 15.

00:04:04,000 --> 00:04:07,439
so if you install node via whatever way

00:04:06,080 --> 00:04:08,480
you like to install it and you get

00:04:07,439 --> 00:04:10,799
version 15

00:04:08,480 --> 00:04:11,760
you'll be able to and get npm 7 on your

00:04:10,799 --> 00:04:13,360
system today

00:04:11,760 --> 00:04:14,799
if you want to install it manually on an

00:04:13,360 --> 00:04:16,320
lts version or an

00:04:14,799 --> 00:04:18,079
even older version of node you can do it

00:04:16,320 --> 00:04:21,359
with npm install g

00:04:18,079 --> 00:04:25,040
npm at 7. and there's a lot of

00:04:21,359 --> 00:04:27,440
big new exciting features in npm 7

00:04:25,040 --> 00:04:28,560
including workspaces which is something

00:04:27,440 --> 00:04:31,360
folks have been asking

00:04:28,560 --> 00:04:32,000
for for a while pure dependencies being

00:04:31,360 --> 00:04:34,720
installed

00:04:32,000 --> 00:04:36,880
by default um support for yarn lock

00:04:34,720 --> 00:04:39,840
files which is a great way to minimize

00:04:36,880 --> 00:04:43,120
churn in projects we have a new package

00:04:39,840 --> 00:04:44,960
lock format called package log v2

00:04:43,120 --> 00:04:47,280
we also allow you to install from a

00:04:44,960 --> 00:04:49,040
github repo which is pretty cool

00:04:47,280 --> 00:04:51,040
but let's take a second and look at

00:04:49,040 --> 00:04:52,800
workspaces so if you want to make a

00:04:51,040 --> 00:04:53,600
workspace this is kind of a really high

00:04:52,800 --> 00:04:55,120
level

00:04:53,600 --> 00:04:57,280
of what it would look like you would in

00:04:55,120 --> 00:04:59,759
a folder make a package json and in that

00:04:57,280 --> 00:05:01,840
package json you would define workspaces

00:04:59,759 --> 00:05:03,680
and you define which workspaces exist

00:05:01,840 --> 00:05:04,960
and workspaces are individual projects

00:05:03,680 --> 00:05:06,560
that are modules

00:05:04,960 --> 00:05:08,160
so you can see here we have module one

00:05:06,560 --> 00:05:10,320
and module two

00:05:08,160 --> 00:05:12,160
you run ncam install at the top level of

00:05:10,320 --> 00:05:14,000
the package and that will install

00:05:12,160 --> 00:05:15,440
all the dependencies for both module one

00:05:14,000 --> 00:05:18,240
and module two

00:05:15,440 --> 00:05:19,199
but module one will reference module two

00:05:18,240 --> 00:05:21,280
and module two

00:05:19,199 --> 00:05:22,880
will reference module one when they are

00:05:21,280 --> 00:05:23,600
used on the local file system for

00:05:22,880 --> 00:05:25,360
development

00:05:23,600 --> 00:05:27,280
this makes it way easier when you have

00:05:25,360 --> 00:05:28,720
lots of interconnecting packages that

00:05:27,280 --> 00:05:31,039
are all referencing each other

00:05:28,720 --> 00:05:32,479
so you can work in larger mono repos or

00:05:31,039 --> 00:05:35,120
potentially take a number of

00:05:32,479 --> 00:05:36,160
not of different git repos that aren't

00:05:35,120 --> 00:05:38,400
connected and put them

00:05:36,160 --> 00:05:41,840
into workspaces so that you can manage

00:05:38,400 --> 00:05:43,440
multiple projects at the same time

00:05:41,840 --> 00:05:45,120
peer dependencies is one of the larger

00:05:43,440 --> 00:05:46,400
changes that we've done as they're now

00:05:45,120 --> 00:05:49,919
installed by default

00:05:46,400 --> 00:05:52,320
they weren't prior to npm seven this can

00:05:49,919 --> 00:05:53,919
be a breaking change for your projects

00:05:52,320 --> 00:05:54,560
it is possible that something that you

00:05:53,919 --> 00:05:57,440
installed

00:05:54,560 --> 00:05:58,080
ran npm install with node 6 npm 6 would

00:05:57,440 --> 00:06:01,280
have worked

00:05:58,080 --> 00:06:03,680
but with npm 7 is going to break but you

00:06:01,280 --> 00:06:04,639
can try using dash dash force if you run

00:06:03,680 --> 00:06:06,400
into an error and

00:06:04,639 --> 00:06:08,400
a good chunk of those errors should be

00:06:06,400 --> 00:06:11,120
able to be resolved using the dash dash

00:06:08,400 --> 00:06:11,919
force command and you can also try using

00:06:11,120 --> 00:06:14,319
dash dash

00:06:11,919 --> 00:06:15,919
legacy pure depths if you want to make

00:06:14,319 --> 00:06:17,280
sure that you use the old algorithm we

00:06:15,919 --> 00:06:20,000
still maintained it in there

00:06:17,280 --> 00:06:21,759
this is like a big design philosophy

00:06:20,000 --> 00:06:22,960
when it comes to breaking changes

00:06:21,759 --> 00:06:24,400
we understand that we need to make

00:06:22,960 --> 00:06:25,919
breaking changes once in a while and

00:06:24,400 --> 00:06:28,319
that those breaking changes can

00:06:25,919 --> 00:06:29,280
have repercussions across the entire

00:06:28,319 --> 00:06:31,360
ecosystem

00:06:29,280 --> 00:06:32,720
but what we try to do is leave back

00:06:31,360 --> 00:06:33,199
doors well maybe backdoor is not the

00:06:32,720 --> 00:06:35,039
right

00:06:33,199 --> 00:06:36,720
way to put it but an escape hatch that's

00:06:35,039 --> 00:06:38,479
a better way to refer to it

00:06:36,720 --> 00:06:40,560
that we leave escape hatches there to

00:06:38,479 --> 00:06:42,000
make sure that if it's not working for

00:06:40,560 --> 00:06:43,840
you that you still have a way to make

00:06:42,000 --> 00:06:44,800
sure that your repo that your workflow

00:06:43,840 --> 00:06:47,039
can work

00:06:44,800 --> 00:06:49,280
while you kind of get up to date and fix

00:06:47,039 --> 00:06:51,840
the things that are broken

00:06:49,280 --> 00:06:52,560
you can also do this as a environment

00:06:51,840 --> 00:06:54,560
variable

00:06:52,560 --> 00:06:56,240
so you could set npm legacy pure depth

00:06:54,560 --> 00:06:57,840
true you can either do that in like your

00:06:56,240 --> 00:06:59,360
bash profile so your system will always

00:06:57,840 --> 00:07:01,039
use legacy pure depth or you could run

00:06:59,360 --> 00:07:02,240
that as a single command in front of npm

00:07:01,039 --> 00:07:03,599
install

00:07:02,240 --> 00:07:05,680
this is something that can allow you to

00:07:03,599 --> 00:07:08,000
script this if you or like put it in the

00:07:05,680 --> 00:07:09,440
environment if you're doing stuff in ci

00:07:08,000 --> 00:07:11,759
just different ways of making sure that

00:07:09,440 --> 00:07:14,400
it's there and you know if you're

00:07:11,759 --> 00:07:15,360
maybe a little bit more intense you can

00:07:14,400 --> 00:07:17,680
use dash dash

00:07:15,360 --> 00:07:19,440
strip depths which will actually fail if

00:07:17,680 --> 00:07:21,120
there's any pure depth issues even in

00:07:19,440 --> 00:07:21,520
transitive dependencies because we only

00:07:21,120 --> 00:07:23,520
really

00:07:21,520 --> 00:07:25,280
cause issues if you're trained if your

00:07:23,520 --> 00:07:26,960
top level dependencies have peer depth

00:07:25,280 --> 00:07:27,680
issues but not transitive dependencies

00:07:26,960 --> 00:07:30,720
as your

00:07:27,680 --> 00:07:32,240
dependencies of dependencies anyways

00:07:30,720 --> 00:07:33,919
this may all sound super confusing

00:07:32,240 --> 00:07:36,160
because it kind of is but

00:07:33,919 --> 00:07:38,080
just try to remember dash dash force and

00:07:36,160 --> 00:07:38,880
dash dash legacy pure depth as kind of

00:07:38,080 --> 00:07:42,560
back door

00:07:38,880 --> 00:07:45,039
as not backdoors as escape hatches

00:07:42,560 --> 00:07:45,680
in case you're running into any problems

00:07:45,039 --> 00:07:47,599
so

00:07:45,680 --> 00:07:49,680
um we talked about npm installing from a

00:07:47,599 --> 00:07:51,440
github repo which was really cool

00:07:49,680 --> 00:07:52,879
um which you could do for a while but

00:07:51,440 --> 00:07:53,680
now you can also install from a github

00:07:52,879 --> 00:07:56,479
pull request

00:07:53,680 --> 00:07:58,319
so if you do install user slash repo

00:07:56,479 --> 00:08:00,479
hash pull

00:07:58,319 --> 00:08:01,919
123 or whatever the pull request number

00:08:00,479 --> 00:08:04,560
is that allows you to install

00:08:01,919 --> 00:08:05,520
pull requests directly into the package

00:08:04,560 --> 00:08:07,199
that you're working on

00:08:05,520 --> 00:08:08,639
you can track these in your package json

00:08:07,199 --> 00:08:09,919
if you want although i don't advise

00:08:08,639 --> 00:08:11,120
doing that because

00:08:09,919 --> 00:08:13,039
you know these pull requests aren't

00:08:11,120 --> 00:08:14,080
necessarily guaranteed to stick around

00:08:13,039 --> 00:08:15,039
they can move under you

00:08:14,080 --> 00:08:16,479
it's always good to have your

00:08:15,039 --> 00:08:17,599
dependencies tracked against like you

00:08:16,479 --> 00:08:19,840
know a particular

00:08:17,599 --> 00:08:20,960
sember or shaw sum so that you know that

00:08:19,840 --> 00:08:22,560
you're getting the same thing

00:08:20,960 --> 00:08:24,000
but this is a great way if you want to

00:08:22,560 --> 00:08:25,360
quickly test something that has a pull

00:08:24,000 --> 00:08:26,560
request or if you need to quickly patch

00:08:25,360 --> 00:08:29,039
something in a project

00:08:26,560 --> 00:08:30,800
it's a really great usability um feature

00:08:29,039 --> 00:08:33,680
now this won't work for all packages

00:08:30,800 --> 00:08:35,599
um some packages that for example build

00:08:33,680 --> 00:08:36,719
and then deploy from a subdirectory may

00:08:35,599 --> 00:08:39,039
not work with this

00:08:36,719 --> 00:08:40,560
um but it does cover a good chunk of the

00:08:39,039 --> 00:08:42,080
use cases and we're looking into some of

00:08:40,560 --> 00:08:45,360
those edge cases

00:08:42,080 --> 00:08:47,519
where this workflow doesn't work now

00:08:45,360 --> 00:08:49,360
some of the breaking changes um just to

00:08:47,519 --> 00:08:51,040
let you know is obviously as i mentioned

00:08:49,360 --> 00:08:52,959
pure dependencies installing by

00:08:51,040 --> 00:08:55,120
default can be a breaking change for

00:08:52,959 --> 00:08:57,440
your project

00:08:55,120 --> 00:08:59,440
npm now uses package exports which is a

00:08:57,440 --> 00:09:01,519
feature in node so by defining those

00:08:59,440 --> 00:09:03,680
exports it means that you can't deeply

00:09:01,519 --> 00:09:05,600
traverse into the npm tree anymore you

00:09:03,680 --> 00:09:07,920
can only use npm

00:09:05,600 --> 00:09:09,440
as an interface as defined by us but to

00:09:07,920 --> 00:09:09,839
be honest many of the things that people

00:09:09,440 --> 00:09:12,720
were

00:09:09,839 --> 00:09:14,640
deeply using npm's non-public interface

00:09:12,720 --> 00:09:15,440
for are now standalone modules such as

00:09:14,640 --> 00:09:18,240
cache or

00:09:15,440 --> 00:09:19,600
arborist feel free to ask on discussions

00:09:18,240 --> 00:09:23,120
if you've been using npm

00:09:19,600 --> 00:09:24,399
as like an api and you know i can tell

00:09:23,120 --> 00:09:25,920
you about some of the alternative ways

00:09:24,399 --> 00:09:29,760
that you can do this

00:09:25,920 --> 00:09:32,720
um npm x npx has been rewritten

00:09:29,760 --> 00:09:33,120
using the npm exec command and it also

00:09:32,720 --> 00:09:34,959
will

00:09:33,120 --> 00:09:37,440
prompt you before running things for the

00:09:34,959 --> 00:09:38,720
first time this is for security reasons

00:09:37,440 --> 00:09:40,240
and we realized that

00:09:38,720 --> 00:09:42,320
you know this makes some folks grumpy

00:09:40,240 --> 00:09:44,240
and it complicates some workflows but we

00:09:42,320 --> 00:09:47,680
genuinely believe that that for the

00:09:44,240 --> 00:09:50,160
ecosystem this was the right thing to do

00:09:47,680 --> 00:09:51,519
npm ls only outputs the top level

00:09:50,160 --> 00:09:53,920
dependencies now and

00:09:51,519 --> 00:09:55,200
similarly the output to npm fund and

00:09:53,920 --> 00:09:56,640
audit has been changed

00:09:55,200 --> 00:09:58,320
so if you were building tools or

00:09:56,640 --> 00:10:00,480
workflows that depended on

00:09:58,320 --> 00:10:02,160
the order or how that output looked like

00:10:00,480 --> 00:10:03,920
um you may be broken

00:10:02,160 --> 00:10:05,600
by the changes that we've done in mpm

00:10:03,920 --> 00:10:07,120
seven um

00:10:05,600 --> 00:10:08,880
you may be asking what's next for the

00:10:07,120 --> 00:10:10,320
npm cli and

00:10:08,880 --> 00:10:12,160
there's a couple things like when we're

00:10:10,320 --> 00:10:14,240
writing lots of tests that's a huge

00:10:12,160 --> 00:10:16,000
thing that's on our radar right now

00:10:14,240 --> 00:10:18,160
uh we're also going through and updating

00:10:16,000 --> 00:10:19,839
all the documentation um

00:10:18,160 --> 00:10:21,600
we're going through improving stability

00:10:19,839 --> 00:10:23,040
making sure it works we've got

00:10:21,600 --> 00:10:25,279
bug reports coming in and we're working

00:10:23,040 --> 00:10:26,800
on them as quickly as we can

00:10:25,279 --> 00:10:28,079
and improve performance we're working on

00:10:26,800 --> 00:10:30,320
a benchmark suite and we're trying to

00:10:28,079 --> 00:10:32,079
make sure that npm 7 can be the fastest

00:10:30,320 --> 00:10:34,640
experience

00:10:32,079 --> 00:10:35,440
for installing packages once all of

00:10:34,640 --> 00:10:37,120
these things

00:10:35,440 --> 00:10:38,720
you know are have all lined up we'll be

00:10:37,120 --> 00:10:41,279
making it ga so that when you end

00:10:38,720 --> 00:10:43,120
pm install npm you get npm 7 by default

00:10:41,279 --> 00:10:44,800
but for right now you'll still get npm 6

00:10:43,120 --> 00:10:46,320
when you do an npm install

00:10:44,800 --> 00:10:48,560
because we want to get kind of like all

00:10:46,320 --> 00:10:49,680
of these things um to a certain level

00:10:48,560 --> 00:10:51,360
before we make it the default

00:10:49,680 --> 00:10:53,760
installation

00:10:51,360 --> 00:10:56,000
um and the last thing that we're going

00:10:53,760 --> 00:10:58,640
to be uh working on here

00:10:56,000 --> 00:10:59,839
is more workspace features that so

00:10:58,640 --> 00:11:01,120
that's kind of like we've been talking

00:10:59,839 --> 00:11:01,839
about all the things that we'll be doing

00:11:01,120 --> 00:11:03,360
to make it better

00:11:01,839 --> 00:11:04,480
but workspace features is a huge one

00:11:03,360 --> 00:11:06,160
we're going to be expanding the

00:11:04,480 --> 00:11:08,560
capabilities of workspaces and

00:11:06,160 --> 00:11:09,839
making it more of a fully future product

00:11:08,560 --> 00:11:11,120
the last feature that we're definitely

00:11:09,839 --> 00:11:12,160
looking into the super cool is called

00:11:11,120 --> 00:11:13,680
package overrides

00:11:12,160 --> 00:11:15,680
which will allow you to say hey this

00:11:13,680 --> 00:11:17,200
package of my entire tree replace it

00:11:15,680 --> 00:11:18,640
everywhere so let's say you're using

00:11:17,200 --> 00:11:20,079
react and you want to like

00:11:18,640 --> 00:11:21,519
patch react and make sure that all the

00:11:20,079 --> 00:11:22,880
dependencies through your whole tree get

00:11:21,519 --> 00:11:24,240
the same version of react

00:11:22,880 --> 00:11:26,000
something like package overrides will

00:11:24,240 --> 00:11:27,519
allow you to do that

00:11:26,000 --> 00:11:29,279
and finally we're listening to our

00:11:27,519 --> 00:11:30,320
community and doing what our community

00:11:29,279 --> 00:11:33,519
asks for

00:11:30,320 --> 00:11:35,279
which leads us to our public roadmap

00:11:33,519 --> 00:11:37,360
and feedback process something that i

00:11:35,279 --> 00:11:38,800
personally am extremely excited about

00:11:37,360 --> 00:11:39,920
and was one of the first things that i

00:11:38,800 --> 00:11:42,959
started working on

00:11:39,920 --> 00:11:44,800
uh when i joined the team in june the

00:11:42,959 --> 00:11:46,640
our process was heavily inspired by

00:11:44,800 --> 00:11:47,920
github's process for their roadmap and

00:11:46,640 --> 00:11:49,839
their public feedback

00:11:47,920 --> 00:11:51,200
and in particular i want to shout out to

00:11:49,839 --> 00:11:52,959
alex nichols and becca

00:11:51,200 --> 00:11:55,440
for all the work they did supporting us

00:11:52,959 --> 00:11:56,959
all of the random messages that

00:11:55,440 --> 00:11:59,440
they answered of mine and just kind of

00:11:56,959 --> 00:12:01,360
always being available and awesome

00:11:59,440 --> 00:12:04,079
and in the github process that inspired

00:12:01,360 --> 00:12:05,680
how they did the roadmap and feedback

00:12:04,079 --> 00:12:07,120
they talk about four types of feedback

00:12:05,680 --> 00:12:09,680
that you can get incidents

00:12:07,120 --> 00:12:11,600
questions problems and suggestions

00:12:09,680 --> 00:12:14,240
incidents are like when things are down

00:12:11,600 --> 00:12:15,680
uh vulnerabilities questions are when

00:12:14,240 --> 00:12:17,920
people don't really know how to use

00:12:15,680 --> 00:12:19,680
things or just generally need help

00:12:17,920 --> 00:12:21,680
problems are when there's a bug and then

00:12:19,680 --> 00:12:25,040
this last category suggestions

00:12:21,680 --> 00:12:26,880
is one that npm didn't have a very clear

00:12:25,040 --> 00:12:28,240
interactive way of people coming to us

00:12:26,880 --> 00:12:30,560
with suggestions of improvements and

00:12:28,240 --> 00:12:33,040
changes that we can make to npm

00:12:30,560 --> 00:12:34,480
and that's where comes our public

00:12:33,040 --> 00:12:36,160
roadmap and feedback system

00:12:34,480 --> 00:12:38,639
which i'll go ahead and show to you

00:12:36,160 --> 00:12:39,040
right now so what you can see on my

00:12:38,639 --> 00:12:42,000
screen

00:12:39,040 --> 00:12:42,480
at this moment is the npm public roadmap

00:12:42,000 --> 00:12:46,079
repo

00:12:42,480 --> 00:12:49,279
which you can find at github.com npm

00:12:46,079 --> 00:12:52,160
slash roadmap and

00:12:49,279 --> 00:12:53,760
this roadmap is we have a guide to the

00:12:52,160 --> 00:12:55,279
roadmap where we talk about the phases

00:12:53,760 --> 00:12:57,839
and the feature areas

00:12:55,279 --> 00:13:00,160
the different um stages that things go

00:12:57,839 --> 00:13:01,680
into the future areas

00:13:00,160 --> 00:13:04,079
and you'll see that this looks quite a

00:13:01,680 --> 00:13:06,000
bit like the roadmap over at github

00:13:04,079 --> 00:13:07,279
but when you go over and look at our

00:13:06,000 --> 00:13:09,920
roadmap itself you'll see

00:13:07,279 --> 00:13:11,200
everything on here is about npm you

00:13:09,920 --> 00:13:13,120
could see what we worked on

00:13:11,200 --> 00:13:14,480
last quarter what we've been working on

00:13:13,120 --> 00:13:16,560
this quarter what we've

00:13:14,480 --> 00:13:18,399
launched what's still coming out the

00:13:16,560 --> 00:13:21,519
door and things that we have

00:13:18,399 --> 00:13:22,720
on deck to start working on next quarter

00:13:21,519 --> 00:13:24,320
as well as

00:13:22,720 --> 00:13:26,480
you know ideas and things that we've

00:13:24,320 --> 00:13:28,480
said hey we want to work on these things

00:13:26,480 --> 00:13:29,680
but haven't yet had time to do it so for

00:13:28,480 --> 00:13:31,760
example i talked about

00:13:29,680 --> 00:13:32,959
automation tokens well we have something

00:13:31,760 --> 00:13:34,880
on here for

00:13:32,959 --> 00:13:36,720
registry tokens for being able to name

00:13:34,880 --> 00:13:38,880
them another thing for

00:13:36,720 --> 00:13:40,480
package scoped automation tokens so

00:13:38,880 --> 00:13:41,199
right now automation tokens are scoped

00:13:40,480 --> 00:13:44,399
to the user

00:13:41,199 --> 00:13:46,800
but some folks would like them scoped to

00:13:44,399 --> 00:13:48,720
the individual packages but this is

00:13:46,800 --> 00:13:50,560
example of ideas that have come in

00:13:48,720 --> 00:13:52,240
that we've um brought in and how do

00:13:50,560 --> 00:13:54,000
those ideas come in

00:13:52,240 --> 00:13:56,240
they come in through our public feedback

00:13:54,000 --> 00:13:57,120
discussions so this public feedback

00:13:56,240 --> 00:13:59,199
discussion here

00:13:57,120 --> 00:14:01,040
um we have a whole bit about how you

00:13:59,199 --> 00:14:01,680
make discussions and how you give good

00:14:01,040 --> 00:14:03,360
feedback

00:14:01,680 --> 00:14:04,959
and kind of like something that tracks

00:14:03,360 --> 00:14:07,839
the life cycle of

00:14:04,959 --> 00:14:08,959
a suggested discussion to an actual

00:14:07,839 --> 00:14:12,720
feature that the npm

00:14:08,959 --> 00:14:14,399
team makes so you can see here what our

00:14:12,720 --> 00:14:16,000
discussions board looks like there's

00:14:14,399 --> 00:14:16,800
lots of different things in here we've

00:14:16,000 --> 00:14:18,560
got

00:14:16,800 --> 00:14:20,160
a mix of things that have been answered

00:14:18,560 --> 00:14:22,399
and not answered we've got different

00:14:20,160 --> 00:14:25,279
tags ranging from the cli

00:14:22,399 --> 00:14:26,959
the registry the website live streams

00:14:25,279 --> 00:14:29,040
and meta

00:14:26,959 --> 00:14:30,880
you can see from our live streams here

00:14:29,040 --> 00:14:34,880
that we actually go through and

00:14:30,880 --> 00:14:36,160
on a bi-weekly basis review um

00:14:34,880 --> 00:14:38,639
topics that have come in from

00:14:36,160 --> 00:14:40,160
discussions you could see all sorts of

00:14:38,639 --> 00:14:41,519
different topics here's our agenda that

00:14:40,160 --> 00:14:43,199
we went through and you can actually

00:14:41,519 --> 00:14:44,800
find the youtube video because we record

00:14:43,199 --> 00:14:47,279
it and make it available

00:14:44,800 --> 00:14:49,120
and i wanted to just quickly as we go

00:14:47,279 --> 00:14:52,800
show what the life cycle of one of these

00:14:49,120 --> 00:14:54,399
um looks like so um

00:14:52,800 --> 00:14:56,000
github flavored markdown for readme

00:14:54,399 --> 00:14:57,360
rendering was a feature that we had

00:14:56,000 --> 00:15:00,560
heard requested

00:14:57,360 --> 00:15:01,440
multiple times through our kind of

00:15:00,560 --> 00:15:04,639
private uh

00:15:01,440 --> 00:15:06,079
support system prior to

00:15:04,639 --> 00:15:08,240
the acquisition there there was a lot

00:15:06,079 --> 00:15:09,839
even coming in and so we started

00:15:08,240 --> 00:15:11,440
tracking this as a discussion we kicked

00:15:09,839 --> 00:15:12,560
off a discussion you can see some other

00:15:11,440 --> 00:15:14,000
people who came in

00:15:12,560 --> 00:15:15,839
had lots of ideas had lots of

00:15:14,000 --> 00:15:17,440
suggestions about how we do it

00:15:15,839 --> 00:15:19,120
and so we said we are going to

00:15:17,440 --> 00:15:19,600
prioritize this we're going to work on

00:15:19,120 --> 00:15:22,160
it

00:15:19,600 --> 00:15:24,399
and so we made an issue on the roadmap

00:15:22,160 --> 00:15:26,399
that pointed back to the feedback

00:15:24,399 --> 00:15:28,240
discussion where it first came from um

00:15:26,399 --> 00:15:31,120
we did high-level scoping of it

00:15:28,240 --> 00:15:31,920
and from there it turned into an actual

00:15:31,120 --> 00:15:34,160
work item

00:15:31,920 --> 00:15:36,320
that the team worked on and shipped this

00:15:34,160 --> 00:15:38,480
quarter and so if you look at readme's

00:15:36,320 --> 00:15:41,279
here this is a readme that was published

00:15:38,480 --> 00:15:42,959
using our old readme render renderer

00:15:41,279 --> 00:15:44,880
marky markdown

00:15:42,959 --> 00:15:46,560
which has things that are great about it

00:15:44,880 --> 00:15:48,240
and and things that don't work as well

00:15:46,560 --> 00:15:50,320
so there's certain things for example

00:15:48,240 --> 00:15:51,759
like resilient syntax highlighting or

00:15:50,320 --> 00:15:54,000
embedded headers

00:15:51,759 --> 00:15:55,759
or this is one of my favorites is mixed

00:15:54,000 --> 00:15:56,240
media encoding so you could see that

00:15:55,759 --> 00:15:59,199
this

00:15:56,240 --> 00:16:00,000
awesome gif here that's super trippy um

00:15:59,199 --> 00:16:02,560
was actually

00:16:00,000 --> 00:16:04,000
encoded pointing to http and so we're

00:16:02,560 --> 00:16:04,560
getting these kind of mixed content

00:16:04,000 --> 00:16:06,480
warnings

00:16:04,560 --> 00:16:07,680
so there's all these kind of like small

00:16:06,480 --> 00:16:08,880
subtle differences

00:16:07,680 --> 00:16:10,720
especially subtle between the

00:16:08,880 --> 00:16:12,959
differences of an npm

00:16:10,720 --> 00:16:14,480
the readme as it shows up on npm versus

00:16:12,959 --> 00:16:17,120
the readme how it shows up

00:16:14,480 --> 00:16:18,480
on github and since a large portion of

00:16:17,120 --> 00:16:21,040
the packages that are on

00:16:18,480 --> 00:16:22,720
npm actually live on github we've gone

00:16:21,040 --> 00:16:24,320
through and updated so that the readmes

00:16:22,720 --> 00:16:26,720
are now being rendered using

00:16:24,320 --> 00:16:28,079
a github service that actually renders

00:16:26,720 --> 00:16:30,240
the readme for github

00:16:28,079 --> 00:16:32,160
so you can see now that the syntax

00:16:30,240 --> 00:16:33,279
highlighting is working even when

00:16:32,160 --> 00:16:34,800
there's bugs that the

00:16:33,279 --> 00:16:36,560
embedded headers work the way that we're

00:16:34,800 --> 00:16:38,079
expecting it and if we go into the

00:16:36,560 --> 00:16:39,519
console here we're not getting any mixed

00:16:38,079 --> 00:16:40,480
content warnings and in fact what's

00:16:39,519 --> 00:16:42,160
super cool

00:16:40,480 --> 00:16:44,399
is if you look here you can see the

00:16:42,160 --> 00:16:45,120
image has actually been put onto

00:16:44,399 --> 00:16:47,920
github's

00:16:45,120 --> 00:16:48,720
image server service called camo and

00:16:47,920 --> 00:16:50,720
we're now

00:16:48,720 --> 00:16:52,560
well it still has the canonical url

00:16:50,720 --> 00:16:54,160
there so we're not losing that content

00:16:52,560 --> 00:16:56,880
we're actually hitting github servers to

00:16:54,160 --> 00:16:58,800
get that image which means we're not um

00:16:56,880 --> 00:17:00,639
potentially going to go down if an

00:16:58,800 --> 00:17:02,160
external image is not available

00:17:00,639 --> 00:17:03,440
um it also means that we're not getting

00:17:02,160 --> 00:17:04,000
those mixed content warnings and

00:17:03,440 --> 00:17:07,120
everything that we're

00:17:04,000 --> 00:17:09,280
serving is https which is pretty cool so

00:17:07,120 --> 00:17:11,120
you know this is a great example of

00:17:09,280 --> 00:17:12,720
a feature that came from feedback that

00:17:11,120 --> 00:17:14,640
went to a discussion that discussion

00:17:12,720 --> 00:17:16,319
turned into an issue that issue then

00:17:14,640 --> 00:17:18,160
became something that we prioritized

00:17:16,319 --> 00:17:19,760
internally and shipped

00:17:18,160 --> 00:17:21,520
and if you look at the roadmap of the

00:17:19,760 --> 00:17:22,079
things that we've got going on for the

00:17:21,520 --> 00:17:23,439
next

00:17:22,079 --> 00:17:25,280
quarter or this quarter there's some

00:17:23,439 --> 00:17:28,000
stuff that i'm excited about that hasn't

00:17:25,280 --> 00:17:28,559
shipped quite yet one of which is that

00:17:28,000 --> 00:17:30,960
we're going to

00:17:28,559 --> 00:17:33,039
show typescript information for packages

00:17:30,960 --> 00:17:35,280
that have type declarations

00:17:33,039 --> 00:17:37,039
and the other one is show download for

00:17:35,280 --> 00:17:40,320
download usage perversion

00:17:37,039 --> 00:17:42,400
um and again you know these are both um

00:17:40,320 --> 00:17:44,000
examples that came in from discussions

00:17:42,400 --> 00:17:46,400
from the community that we then turned

00:17:44,000 --> 00:17:48,240
into work items that were tracking

00:17:46,400 --> 00:17:50,000
we have things on the plate for next

00:17:48,240 --> 00:17:52,240
quarter that you might be excited about

00:17:50,000 --> 00:17:55,360
including but not limited to open

00:17:52,240 --> 00:17:58,799
sourcing docs.npmjs

00:17:55,360 --> 00:18:00,720
general availability of the npm 7cli

00:17:58,799 --> 00:18:02,799
exploring authentication with github

00:18:00,720 --> 00:18:06,160
across all of our different products

00:18:02,799 --> 00:18:08,799
um workspace changes to workspaces

00:18:06,160 --> 00:18:10,559
updates to the website um reviewing our

00:18:08,799 --> 00:18:12,559
policy for disputes and

00:18:10,559 --> 00:18:14,400
abandoned packages which was uh awesome

00:18:12,559 --> 00:18:16,320
feedback that we receive from folks

00:18:14,400 --> 00:18:18,160
and also auditing some of the packages

00:18:16,320 --> 00:18:19,440
that share names to node.js again

00:18:18,160 --> 00:18:21,200
something that came in through our

00:18:19,440 --> 00:18:24,240
general discussions

00:18:21,200 --> 00:18:25,679
um so overall as you can see we have a

00:18:24,240 --> 00:18:27,200
lot of different

00:18:25,679 --> 00:18:29,360
ideas that are coming in a lot of

00:18:27,200 --> 00:18:30,720
different things that we're working on

00:18:29,360 --> 00:18:32,799
we're really excited to do that work

00:18:30,720 --> 00:18:34,480
with you the community and help kind of

00:18:32,799 --> 00:18:36,559
align where we're going

00:18:34,480 --> 00:18:37,919
um and and we're trying to experiment

00:18:36,559 --> 00:18:40,640
with you know

00:18:37,919 --> 00:18:42,000
new novel ways of being transparent it's

00:18:40,640 --> 00:18:44,320
hard to find that balance because

00:18:42,000 --> 00:18:45,840
you know we are a company that works on

00:18:44,320 --> 00:18:47,120
open source but we are still an

00:18:45,840 --> 00:18:48,960
organization

00:18:47,120 --> 00:18:51,200
um and we're trying to find that balance

00:18:48,960 --> 00:18:52,320
where we can kind of work with tools

00:18:51,200 --> 00:18:54,320
that the open source

00:18:52,320 --> 00:18:55,440
community are used to obviously like

00:18:54,320 --> 00:18:58,559
github

00:18:55,440 --> 00:19:00,320
but also um work using patterns that

00:18:58,559 --> 00:19:03,280
folks in our ecosystems are used to

00:19:00,320 --> 00:19:04,160
such as live broadcast meetings open

00:19:03,280 --> 00:19:07,280
discussions

00:19:04,160 --> 00:19:09,280
and transparent process and so

00:19:07,280 --> 00:19:10,559
that's it for me today on what's going

00:19:09,280 --> 00:19:12,720
on with npm

00:19:10,559 --> 00:19:13,840
um thank you so much everyone for having

00:19:12,720 --> 00:19:16,720
me here today

00:19:13,840 --> 00:19:18,320
it was an absolute blast i will be in

00:19:16,720 --> 00:19:19,760
the discussions for the next little bit

00:19:18,320 --> 00:19:21,280
to answer any questions that you have

00:19:19,760 --> 00:19:24,240
and then even after that at any time you

00:19:21,280 --> 00:19:26,480
can always come to github.com npm

00:19:24,240 --> 00:19:27,679
feedback to let the team know stuff if

00:19:26,480 --> 00:19:29,840
you have any you know

00:19:27,679 --> 00:19:31,440
stuff you'd like to see us do so with

00:19:29,840 --> 00:19:35,520
that i'll hand it back to our hosts and

00:19:31,440 --> 00:19:35,520

YouTube URL: https://www.youtube.com/watch?v=vC8d1QEGtEQ


