Title: The Future of DateTime with tc39 temporal - Open Source Friday
Publication date: 2020-09-11
Playlist: Open Source Friday
Description: 
	TC39 has a new way to /proposal-temporal for DateTime calculations in stage 2 and this is an opportunity to learn how to test new features in JavaScript and learn about the process for developing the language.

As always, feel free to leave us a comment below and don't forget to subscribe: http://bit.ly/subgithub

Thanks!

Connect with us.
Facebook: http://fb.com/github
Twitter: http://twitter.com/github
Google+: http://google.com/+github
LinkedIn: http://linkedin.com/company/github

About GitHub
GitHub is the best place to share code with friends, co-workers, classmates, and complete strangers. Millions of people use GitHub to build amazing things together. For more info, go to http://github.com
Captions: 
	00:00:05,759 --> 00:00:11,759
all right here we are

00:00:08,160 --> 00:00:15,280
this is like the most underwhelming uh

00:00:11,759 --> 00:00:16,400
start time uh because my son has my ipad

00:00:15,280 --> 00:00:16,800
and that's where i usually play music

00:00:16,400 --> 00:00:20,240
from

00:00:16,800 --> 00:00:23,199
but uh in preparation for his schooling

00:00:20,240 --> 00:00:23,199
i won't interrupt that

00:00:23,519 --> 00:00:30,160
but maggie welcome welcome welcome

00:00:26,720 --> 00:00:31,840
hello excellent and we've got um

00:00:30,160 --> 00:00:33,440
if you're here in the chat just uh drop

00:00:31,840 --> 00:00:34,480
us a hello if this is your first open

00:00:33,440 --> 00:00:36,800
source friday

00:00:34,480 --> 00:00:37,600
uh i would love to know uh if you come

00:00:36,800 --> 00:00:39,440
by for

00:00:37,600 --> 00:00:41,680
on the github twitch stream uh for any

00:00:39,440 --> 00:00:43,120
other uh streams yeah let us know what

00:00:41,680 --> 00:00:44,960
uh streams brought you here

00:00:43,120 --> 00:00:48,160
originally it'd be great to hear so it

00:00:44,960 --> 00:00:51,360
looks like uh python with the queue

00:00:48,160 --> 00:00:51,920
i can read through that yeah excellent

00:00:51,360 --> 00:00:53,120
welcome

00:00:51,920 --> 00:00:55,440
welcome to actually i haven't seen you

00:00:53,120 --> 00:00:57,600
around python

00:00:55,440 --> 00:00:58,800
i love these names twitch names are uh

00:00:57,600 --> 00:01:00,320
challenging because some of

00:00:58,800 --> 00:01:02,480
you can't actually uh you can't

00:01:00,320 --> 00:01:03,440
pronounce out loud uh but python i

00:01:02,480 --> 00:01:06,799
gotcha

00:01:03,440 --> 00:01:08,159
i got you python and that's the last

00:01:06,799 --> 00:01:09,920
time i'll say i got you python i

00:01:08,159 --> 00:01:10,720
literally was actually just uh trying to

00:01:09,920 --> 00:01:13,840
do python

00:01:10,720 --> 00:01:14,720
a couple days ago but yeah this is open

00:01:13,840 --> 00:01:17,280
source friday

00:01:14,720 --> 00:01:18,000
uh welcome i'm b dougie go uh bw on

00:01:17,280 --> 00:01:20,320
twitch

00:01:18,000 --> 00:01:21,200
i hear and support live streaming on the

00:01:20,320 --> 00:01:23,920
github

00:01:21,200 --> 00:01:25,680
profile on twitch where do open source

00:01:23,920 --> 00:01:26,880
fridays and we talk to maintainers

00:01:25,680 --> 00:01:29,040
contributors

00:01:26,880 --> 00:01:30,479
uh people involved in open source about

00:01:29,040 --> 00:01:31,280
how to do open source how to get

00:01:30,479 --> 00:01:33,840
involved

00:01:31,280 --> 00:01:35,119
um and hopefully we can cover a bit of

00:01:33,840 --> 00:01:36,560
the the story of

00:01:35,119 --> 00:01:39,200
even how maggie got involved at open

00:01:36,560 --> 00:01:42,560
source so maggie if you don't mind

00:01:39,200 --> 00:01:46,000
uh do you want to say hello uh sure

00:01:42,560 --> 00:01:47,840
uh hello to streaming people

00:01:46,000 --> 00:01:49,680
um should i like make you a basic

00:01:47,840 --> 00:01:50,320
introduction of myself yeah yeah uh just

00:01:49,680 --> 00:01:51,600
tell us

00:01:50,320 --> 00:01:54,880
basically what you do and why you're

00:01:51,600 --> 00:01:58,159
here sure so um i'm maggie johnson pint

00:01:54,880 --> 00:01:59,840
uh in my like day job life i am the

00:01:58,159 --> 00:02:02,640
product management lead for

00:01:59,840 --> 00:02:05,200
the azure sdks so when you use a client

00:02:02,640 --> 00:02:07,280
library to connect to azure

00:02:05,200 --> 00:02:08,640
my team makes that and we think a lot

00:02:07,280 --> 00:02:10,640
about you know

00:02:08,640 --> 00:02:12,400
idiomatic code for developers who want

00:02:10,640 --> 00:02:16,000
to access the cloud

00:02:12,400 --> 00:02:19,840
um in open source life

00:02:16,000 --> 00:02:22,640
uh i am a maintainer of the moment.js

00:02:19,840 --> 00:02:23,680
library in javascript for date time and

00:02:22,640 --> 00:02:27,280
then i also work

00:02:23,680 --> 00:02:28,720
with ecma tc39 which is the

00:02:27,280 --> 00:02:31,200
standards committee that makes the

00:02:28,720 --> 00:02:34,560
javascript programming language itself

00:02:31,200 --> 00:02:36,560
and we are working on making

00:02:34,560 --> 00:02:38,000
brand new date time apis built right

00:02:36,560 --> 00:02:39,280
into the javascript programming language

00:02:38,000 --> 00:02:41,120
so that you don't have to keep

00:02:39,280 --> 00:02:42,080
installing very large libraries to do

00:02:41,120 --> 00:02:43,680
this

00:02:42,080 --> 00:02:45,440
uh and i think that's what we're talking

00:02:43,680 --> 00:02:47,840
about today

00:02:45,440 --> 00:02:49,599
yeah and i'm like i'm excited about this

00:02:47,840 --> 00:02:50,720
because i've been doing javascript for

00:02:49,599 --> 00:02:52,400
quite some time

00:02:50,720 --> 00:02:54,080
uh i have not like an old javascript

00:02:52,400 --> 00:02:56,800
head but i've been doing it since

00:02:54,080 --> 00:02:57,599
like almost before es6 a couple years

00:02:56,800 --> 00:02:59,360
before that

00:02:57,599 --> 00:03:00,959
uh so i didn't go i didn't go through

00:02:59,360 --> 00:03:02,480
all the sort of back and forth

00:03:00,959 --> 00:03:04,800
actually my introduction to javascript

00:03:02,480 --> 00:03:07,840
is actually iojs

00:03:04,800 --> 00:03:09,040
around that time so i'm sure you

00:03:07,840 --> 00:03:10,239
remember maybe somebody in the

00:03:09,040 --> 00:03:11,920
some people in the chat to remember

00:03:10,239 --> 00:03:13,360
those times uh but that was my

00:03:11,920 --> 00:03:14,720
introduction like i had no idea what was

00:03:13,360 --> 00:03:15,120
going on with this like the difference

00:03:14,720 --> 00:03:18,560
in

00:03:15,120 --> 00:03:19,440
um specifically in node so node had a

00:03:18,560 --> 00:03:21,920
split in the community

00:03:19,440 --> 00:03:23,040
iojs was implementing i think cutting

00:03:21,920 --> 00:03:26,159
edge features

00:03:23,040 --> 00:03:27,440
from es6 and i think they

00:03:26,159 --> 00:03:29,519
figured it out and they merged together

00:03:27,440 --> 00:03:30,799
and now we have node and we have

00:03:29,519 --> 00:03:32,799
now a foundation i don't know if i got

00:03:30,799 --> 00:03:35,760
all those cliff notes correct

00:03:32,799 --> 00:03:39,280
that's about right okay that's about

00:03:35,760 --> 00:03:39,280
that's about the io story yeah

00:03:39,440 --> 00:03:44,640
excellent and then tc39 is um so there's

00:03:42,959 --> 00:03:47,040
an open.js foundation

00:03:44,640 --> 00:03:48,159
and those are the individuals who uh do

00:03:47,040 --> 00:03:49,760
how do you how would you explain the

00:03:48,159 --> 00:03:51,920
difference between tc39 and the

00:03:49,760 --> 00:03:53,120
open js foundation so so those are

00:03:51,920 --> 00:03:56,480
separate entities yes

00:03:53,120 --> 00:03:58,879
um so

00:03:56,480 --> 00:04:01,120
wow we make complicated things on the

00:03:58,879 --> 00:04:01,120
web

00:04:01,360 --> 00:04:04,799
so so for starters the open js

00:04:03,439 --> 00:04:07,920
foundation is

00:04:04,799 --> 00:04:10,159
a foundation that supports

00:04:07,920 --> 00:04:11,840
open source projects um in the

00:04:10,159 --> 00:04:14,159
javascript ecosystem that are

00:04:11,840 --> 00:04:15,840
critical to keeping us coding as

00:04:14,159 --> 00:04:17,519
javascript developers

00:04:15,840 --> 00:04:18,880
and the role of a foundation if you

00:04:17,519 --> 00:04:19,759
aren't you know familiar with

00:04:18,880 --> 00:04:23,280
foundations

00:04:19,759 --> 00:04:24,400
in open source is that um they're really

00:04:23,280 --> 00:04:25,440
there

00:04:24,400 --> 00:04:27,440
and you know it's funny because when

00:04:25,440 --> 00:04:29,120
you're just like a dev on the day-to-day

00:04:27,440 --> 00:04:30,479
this is something that probably doesn't

00:04:29,120 --> 00:04:31,520
flag for you unless you work in a large

00:04:30,479 --> 00:04:33,040
corporate environment where someone

00:04:31,520 --> 00:04:35,280
cares a lot but

00:04:33,040 --> 00:04:36,560
uh open source projects they actually

00:04:35,280 --> 00:04:40,479
need lawyers

00:04:36,560 --> 00:04:42,880
they need marketing teams they need um

00:04:40,479 --> 00:04:44,320
kind of like weird business things um

00:04:42,880 --> 00:04:45,520
the lawyers is actually a really big one

00:04:44,320 --> 00:04:47,520
to make sure that you're in licensing

00:04:45,520 --> 00:04:49,680
compliance

00:04:47,520 --> 00:04:50,880
and security professionals to make sure

00:04:49,680 --> 00:04:51,840
that everything is secure and the role

00:04:50,880 --> 00:04:53,840
of a foundation

00:04:51,840 --> 00:04:55,280
is to provide support in that way to

00:04:53,840 --> 00:04:56,479
make sure that there's a sustainable

00:04:55,280 --> 00:04:58,479
story for the library from an

00:04:56,479 --> 00:05:01,840
intellectual property standpoint

00:04:58,479 --> 00:05:03,120
from a security standpoint to provide

00:05:01,840 --> 00:05:04,560
that guarantee

00:05:03,120 --> 00:05:06,479
that someone will be there for that

00:05:04,560 --> 00:05:09,199
project

00:05:06,479 --> 00:05:09,520
so the openjs foundation stewards a lot

00:05:09,199 --> 00:05:11,199
of

00:05:09,520 --> 00:05:12,960
projects that are critical path in the

00:05:11,199 --> 00:05:15,039
javascript ecosystem to make sure that

00:05:12,960 --> 00:05:17,280
those kinds of assurances are in place

00:05:15,039 --> 00:05:19,199
that includes node.js that also includes

00:05:17,280 --> 00:05:22,479
moment.js that i work on

00:05:19,199 --> 00:05:24,720
um one benefit that the openjs

00:05:22,479 --> 00:05:28,800
foundation provides

00:05:24,720 --> 00:05:33,120
is that it also provides a membership

00:05:28,800 --> 00:05:34,960
to ecma which is the standards body

00:05:33,120 --> 00:05:38,160
which is a different entity

00:05:34,960 --> 00:05:39,360
that governs the javascript programming

00:05:38,160 --> 00:05:42,479
language

00:05:39,360 --> 00:05:45,680
and standards bodies are interesting

00:05:42,479 --> 00:05:48,720
um fundamentally ecma

00:05:45,680 --> 00:05:52,160
is not an open source entity

00:05:48,720 --> 00:05:53,360
for you to participate in an ecma-driven

00:05:52,160 --> 00:05:56,080
standard

00:05:53,360 --> 00:05:58,560
you have to belong to an ekma member

00:05:56,080 --> 00:05:58,560
company

00:05:58,720 --> 00:06:02,319
so companies actually pay into ecma to

00:06:01,199 --> 00:06:04,080
have a membership and then that

00:06:02,319 --> 00:06:09,039
standards body administrates

00:06:04,080 --> 00:06:09,039
ecma um so

00:06:09,280 --> 00:06:12,479
the way that the relationship between

00:06:10,800 --> 00:06:14,560
the open.js foundation and ecma

00:06:12,479 --> 00:06:16,720
is that the openjs foundation is an akma

00:06:14,560 --> 00:06:18,319
member and what that does is it allows

00:06:16,720 --> 00:06:19,840
our project maintainers

00:06:18,319 --> 00:06:23,039
for most of our critical path projects

00:06:19,840 --> 00:06:25,680
in the ecosystem to have a say

00:06:23,039 --> 00:06:26,800
on the the direction of the javascript

00:06:25,680 --> 00:06:30,000
programming language

00:06:26,800 --> 00:06:31,759
uh no matter where they work um i will

00:06:30,000 --> 00:06:32,720
call out my employer microsoft is also

00:06:31,759 --> 00:06:35,680
an ecma member

00:06:32,720 --> 00:06:37,520
so like i'm sort of good either way but

00:06:35,680 --> 00:06:38,160
to be a delegate to the standards body

00:06:37,520 --> 00:06:40,800
to have

00:06:38,160 --> 00:06:42,080
a a place in standards to voice your

00:06:40,800 --> 00:06:43,120
opinion you have to be coming through a

00:06:42,080 --> 00:06:49,039
member

00:06:43,120 --> 00:06:52,400
um now it's interesting with tc39 um

00:06:49,039 --> 00:06:54,400
we i would say that the members of tc39

00:06:52,400 --> 00:06:56,479
so technical committee 39

00:06:54,400 --> 00:06:57,840
is the the steering committee that

00:06:56,479 --> 00:06:59,520
actually makes the javascript

00:06:57,840 --> 00:07:02,000
programming language

00:06:59,520 --> 00:07:04,400
and i i have to say we're like a little

00:07:02,000 --> 00:07:08,240
bit of a thorn in the ekma organization

00:07:04,400 --> 00:07:11,120
side um because

00:07:08,240 --> 00:07:12,000
we are like open source people to the

00:07:11,120 --> 00:07:14,319
core

00:07:12,000 --> 00:07:16,160
and so when people are like well to

00:07:14,319 --> 00:07:16,800
contribute to the javascript programming

00:07:16,160 --> 00:07:19,680
language

00:07:16,800 --> 00:07:20,960
you must belong to a member company and

00:07:19,680 --> 00:07:23,840
this and

00:07:20,960 --> 00:07:24,880
we're like how do we get along around

00:07:23,840 --> 00:07:26,160
these rules

00:07:24,880 --> 00:07:28,319
like like what are the loopholes in your

00:07:26,160 --> 00:07:29,360
life um you know and

00:07:28,319 --> 00:07:31,120
and you we want to have a great

00:07:29,360 --> 00:07:32,160
relationship with ekmaid i don't want to

00:07:31,120 --> 00:07:33,680
i don't want to you know create

00:07:32,160 --> 00:07:35,520
controversy here we've actually been

00:07:33,680 --> 00:07:38,080
extremely grateful to them

00:07:35,520 --> 00:07:40,240
for them helping us find ways so that we

00:07:38,080 --> 00:07:41,840
do have a community contributor story

00:07:40,240 --> 00:07:43,680
for the javascript programming language

00:07:41,840 --> 00:07:46,879
that complies with their guidelines

00:07:43,680 --> 00:07:48,720
keeps them moving and and also um really

00:07:46,879 --> 00:07:50,319
allows people to get involved so so

00:07:48,720 --> 00:07:51,919
we've loved that relationship with ecma

00:07:50,319 --> 00:07:54,960
that they have wanted to be

00:07:51,919 --> 00:07:56,319
progressive in that way um and let us

00:07:54,960 --> 00:07:59,440
get a community voice

00:07:56,319 --> 00:08:00,720
into web standards yeah that's that's

00:07:59,440 --> 00:08:01,120
interesting because i didn't understand

00:08:00,720 --> 00:08:04,160
the

00:08:01,120 --> 00:08:06,000
the relationship because my introduction

00:08:04,160 --> 00:08:07,599
to all this and even to you is through

00:08:06,000 --> 00:08:10,639
the open js foundation

00:08:07,599 --> 00:08:13,039
and um they have open js office hours

00:08:10,639 --> 00:08:14,400
um i think either once or twice a week

00:08:13,039 --> 00:08:16,240
so that was like my first introduction

00:08:14,400 --> 00:08:18,879
to actually talking to folks

00:08:16,240 --> 00:08:20,319
on within that that uh community uh so i

00:08:18,879 --> 00:08:23,039
just assumed that like

00:08:20,319 --> 00:08:24,800
they weren't the same or on tc39 i

00:08:23,039 --> 00:08:26,160
didn't even know that correlation

00:08:24,800 --> 00:08:28,000
i thought it was a bunch of people who

00:08:26,160 --> 00:08:31,280
are trying to drive projects and the

00:08:28,000 --> 00:08:33,120
greater good for the javascript side

00:08:31,280 --> 00:08:35,519
of the community interactions and not

00:08:33,120 --> 00:08:38,800
specifically the language itself

00:08:35,519 --> 00:08:42,880
yeah it is a little opaque but yes to to

00:08:38,800 --> 00:08:45,920
be a delegate to tc39 you have to be

00:08:42,880 --> 00:08:48,240
part of a member company

00:08:45,920 --> 00:08:50,000
and some people do come in through the

00:08:48,240 --> 00:08:51,120
projects in open js foundation's

00:08:50,000 --> 00:08:53,600
membership

00:08:51,120 --> 00:08:54,640
uh for quite some time i was the openjs

00:08:53,600 --> 00:08:56,160
foundation delegate

00:08:54,640 --> 00:08:57,680
now i switch between being a microsoft

00:08:56,160 --> 00:08:59,120
delegate and an openjs foundation

00:08:57,680 --> 00:09:00,880
delegate

00:08:59,120 --> 00:09:03,040
um and leo balter in the past has been

00:09:00,880 --> 00:09:05,600
the openjs foundation delegate so

00:09:03,040 --> 00:09:06,560
a few people uh from various projects i

00:09:05,600 --> 00:09:10,399
come from moment

00:09:06,560 --> 00:09:12,959
leo came from q unit um have been

00:09:10,399 --> 00:09:14,880
delegates of the foundation and and our

00:09:12,959 --> 00:09:17,519
role there is to provide a voice for the

00:09:14,880 --> 00:09:19,040
community to acma

00:09:17,519 --> 00:09:21,680
and like i said it's actually it's been

00:09:19,040 --> 00:09:24,720
a good good evolution of working

00:09:21,680 --> 00:09:27,040
relationship um to have ecmo

00:09:24,720 --> 00:09:28,880
allow us to bring so much of this out

00:09:27,040 --> 00:09:30,800
into the open so that we do have a

00:09:28,880 --> 00:09:32,560
contributor story if you want to change

00:09:30,800 --> 00:09:36,000
javascript as a language

00:09:32,560 --> 00:09:37,279
you can do that um so uh

00:09:36,000 --> 00:09:40,560
we're grateful for that and that's been

00:09:37,279 --> 00:09:43,120
a journey for the past couple years

00:09:40,560 --> 00:09:44,399
excellent and um yeah i see the note

00:09:43,120 --> 00:09:45,920
about the background noise i think

00:09:44,399 --> 00:09:49,040
that's actually coming on

00:09:45,920 --> 00:09:52,959
from my mixer and i am quite

00:09:49,040 --> 00:09:55,360
unsure of what the deal is there

00:09:52,959 --> 00:09:55,360
um

00:09:56,080 --> 00:10:00,080
well i just turned myself down

00:09:57,519 --> 00:10:02,000
completely um

00:10:00,080 --> 00:10:04,480
actually python can you hear my voice is

00:10:02,000 --> 00:10:06,000
that well maggie you can hear my voice

00:10:04,480 --> 00:10:07,920
yeah i can totally hear you can you hear

00:10:06,000 --> 00:10:11,440
a background noise as well

00:10:07,920 --> 00:10:12,800
is like a hum or a

00:10:11,440 --> 00:10:18,800
yeah the only thing i could think to do

00:10:12,800 --> 00:10:21,040
is remove some mids

00:10:18,800 --> 00:10:22,320
i can hear my own mini fridge i took off

00:10:21,040 --> 00:10:22,720
the headset to make sure that's what it

00:10:22,320 --> 00:10:24,880
was

00:10:22,720 --> 00:10:26,399
okay yeah i think we'll just have to

00:10:24,880 --> 00:10:28,720
roll through the background noise

00:10:26,399 --> 00:10:30,000
um because i can see the levels uh where

00:10:28,720 --> 00:10:31,360
the background noise is coming through

00:10:30,000 --> 00:10:32,800
but i don't actually have headphones

00:10:31,360 --> 00:10:33,600
connected to my mixer because those are

00:10:32,800 --> 00:10:35,120
the ones i'm

00:10:33,600 --> 00:10:37,279
i have in my ear connected to the

00:10:35,120 --> 00:10:38,000
computer so unfortunately we'll have to

00:10:37,279 --> 00:10:41,279
power through

00:10:38,000 --> 00:10:42,079
so apologies on that python um but i did

00:10:41,279 --> 00:10:44,399
want to

00:10:42,079 --> 00:10:46,000
we can switch gears uh and i appreciate

00:10:44,399 --> 00:10:48,640
the background too around tc39

00:10:46,000 --> 00:10:49,519
open js and sort of how things are made

00:10:48,640 --> 00:10:51,040
uh i

00:10:49,519 --> 00:10:53,279
originally reached out to you uh

00:10:51,040 --> 00:10:54,959
specifically about um

00:10:53,279 --> 00:10:56,720
moment because you were associated with

00:10:54,959 --> 00:10:58,720
the moment uh project

00:10:56,720 --> 00:11:00,160
uh and you you actually informed me of

00:10:58,720 --> 00:11:01,920
some pretty good

00:11:00,160 --> 00:11:04,160
knowledge about the moment and

00:11:01,920 --> 00:11:07,200
specifically just uh

00:11:04,160 --> 00:11:08,560
the moment.js library now i personally

00:11:07,200 --> 00:11:10,959
have used moment

00:11:08,560 --> 00:11:12,720
a long time and but i've sort of dropped

00:11:10,959 --> 00:11:14,000
down in my usage

00:11:12,720 --> 00:11:16,320
and have used some other other

00:11:14,000 --> 00:11:17,600
third-party projects to handle date time

00:11:16,320 --> 00:11:19,519
and manipulation

00:11:17,600 --> 00:11:21,279
um so do you want to give us like a

00:11:19,519 --> 00:11:23,440
quick update to a moment and then

00:11:21,279 --> 00:11:24,800
what is happening with t-39 and the

00:11:23,440 --> 00:11:28,079
temporal stuff

00:11:24,800 --> 00:11:30,000
totally so um

00:11:28,079 --> 00:11:31,440
the the first thing i'll say about

00:11:30,000 --> 00:11:32,880
moment is that you know

00:11:31,440 --> 00:11:34,480
anybody who's a user knows that it's a

00:11:32,880 --> 00:11:38,000
very old library um

00:11:34,480 --> 00:11:41,440
we go back nearly as far as jquery

00:11:38,000 --> 00:11:44,720
in this ecosystem um and

00:11:41,440 --> 00:11:46,640
um we moment

00:11:44,720 --> 00:11:48,320
first of all has a very small maintainer

00:11:46,640 --> 00:11:50,079
team there's only about five of us we're

00:11:48,320 --> 00:11:53,360
all very part-time

00:11:50,079 --> 00:11:54,720
um uh iskran who's been with it since

00:11:53,360 --> 00:11:57,920
practically the beginning

00:11:54,720 --> 00:12:00,160
is the longest standing of us um

00:11:57,920 --> 00:12:01,440
and it's one thing that we really

00:12:00,160 --> 00:12:05,200
understand about moment

00:12:01,440 --> 00:12:06,720
is that it provides a a critical part of

00:12:05,200 --> 00:12:09,760
the javascript ecosystem

00:12:06,720 --> 00:12:12,079
for millions of projects um and

00:12:09,760 --> 00:12:14,320
that gets us in an interesting situation

00:12:12,079 --> 00:12:15,839
when we look at sort of the evolution of

00:12:14,320 --> 00:12:17,920
javascript development in the evolution

00:12:15,839 --> 00:12:20,639
of the web over time

00:12:17,920 --> 00:12:21,200
um moment is designed for like a

00:12:20,639 --> 00:12:24,079
different

00:12:21,200 --> 00:12:25,040
web like a fundamentally different time

00:12:24,079 --> 00:12:28,079
and we've done

00:12:25,040 --> 00:12:31,600
as best we can to sort of

00:12:28,079 --> 00:12:33,839
pull it forward be kind be kind to users

00:12:31,600 --> 00:12:35,279
try to make a clear migration path but

00:12:33,839 --> 00:12:36,560
the reality is that you know we get lots

00:12:35,279 --> 00:12:38,079
of workers we're like well your bundle

00:12:36,560 --> 00:12:40,160
size is huge and

00:12:38,079 --> 00:12:41,600
it doesn't module load and it's mutable

00:12:40,160 --> 00:12:43,600
and we want immutable because we're

00:12:41,600 --> 00:12:46,800
using react we had all these requests

00:12:43,600 --> 00:12:47,360
and the reality is um at the end of the

00:12:46,800 --> 00:12:49,040
day

00:12:47,360 --> 00:12:50,959
for us to kind of bring it to that

00:12:49,040 --> 00:12:54,399
modern web space

00:12:50,959 --> 00:12:55,760
would just be painful

00:12:54,399 --> 00:12:57,519
for the millions of projects that are

00:12:55,760 --> 00:13:00,639
currently relying on it

00:12:57,519 --> 00:13:03,680
um and and painful for us

00:13:00,639 --> 00:13:05,760
to create that migration story and

00:13:03,680 --> 00:13:07,279
this started becoming apparent to us

00:13:05,760 --> 00:13:09,519
that like moment was

00:13:07,279 --> 00:13:10,959
just like you can't stop serving the

00:13:09,519 --> 00:13:13,519
number of people who depend on it

00:13:10,959 --> 00:13:14,800
that would be unfair but it was just

00:13:13,519 --> 00:13:15,519
like not going to be able to keep up

00:13:14,800 --> 00:13:19,200
with

00:13:15,519 --> 00:13:22,160
this modern web story and you know

00:13:19,200 --> 00:13:22,560
as a maintainer team we took a regroup

00:13:22,160 --> 00:13:24,800
and

00:13:22,560 --> 00:13:26,880
we made two decisions i think everybody

00:13:24,800 --> 00:13:30,240
is completely bought into both decisions

00:13:26,880 --> 00:13:32,800
um one decision that we made

00:13:30,240 --> 00:13:35,279
was to ship a library called luxon i

00:13:32,800 --> 00:13:39,360
don't know if you've ever used luxon

00:13:35,279 --> 00:13:42,320
no so luxon yep that is it

00:13:39,360 --> 00:13:43,600
uh luxon is uh for lack of a better we

00:13:42,320 --> 00:13:45,199
put it made by moment

00:13:43,600 --> 00:13:47,279
it's made by isaac who's one of our

00:13:45,199 --> 00:13:49,279
maintainers

00:13:47,279 --> 00:13:50,959
he started building this because he got

00:13:49,279 --> 00:13:52,399
so frustrated with trying to work around

00:13:50,959 --> 00:13:54,000
all the complexities of moment in the

00:13:52,399 --> 00:13:55,279
legacy code base and then what people

00:13:54,000 --> 00:13:56,800
wanted for the modern web and he's like

00:13:55,279 --> 00:14:00,399
i'll just rebuild

00:13:56,800 --> 00:14:01,839
um so he built this as a side project

00:14:00,399 --> 00:14:02,959
and he kept hopping away with slack chat

00:14:01,839 --> 00:14:03,920
he kept pumping this live chat and be

00:14:02,959 --> 00:14:04,959
like what do you think of this api what

00:14:03,920 --> 00:14:06,639
do you think of this api what do you

00:14:04,959 --> 00:14:09,199
think of this api

00:14:06,639 --> 00:14:10,320
and one day we sort of turned around and

00:14:09,199 --> 00:14:12,160
we said like

00:14:10,320 --> 00:14:14,000
moment's going to be what it is it's

00:14:12,160 --> 00:14:15,600
loved we understand that it's dependent

00:14:14,000 --> 00:14:17,760
upon by a lot of people

00:14:15,600 --> 00:14:19,600
but it's going to be what it is and

00:14:17,760 --> 00:14:20,240
lexon this is the project for the modern

00:14:19,600 --> 00:14:21,680
web

00:14:20,240 --> 00:14:24,639
like isaac always called it the toy and

00:14:21,680 --> 00:14:28,399
we're like dude you're done like ship it

00:14:24,639 --> 00:14:29,199
um and so our sort of blessed immediate

00:14:28,399 --> 00:14:32,800
path

00:14:29,199 --> 00:14:33,839
um for date time users is to look at

00:14:32,800 --> 00:14:35,839
luxon

00:14:33,839 --> 00:14:36,959
this does you know carry the sum total

00:14:35,839 --> 00:14:40,639
of our knowledge of the

00:14:36,959 --> 00:14:42,639
pain of date time apis um

00:14:40,639 --> 00:14:44,160
the other decision that we made which i

00:14:42,639 --> 00:14:46,079
took point on

00:14:44,160 --> 00:14:47,760
was we really said to ourselves there

00:14:46,079 --> 00:14:49,839
are there are problems related to

00:14:47,760 --> 00:14:52,480
handling date time in javascript

00:14:49,839 --> 00:14:54,880
that they're just not going to be solved

00:14:52,480 --> 00:14:59,360
in the library space in the user space

00:14:54,880 --> 00:15:02,000
um and this is because um

00:14:59,360 --> 00:15:03,839
certain things especially localization

00:15:02,000 --> 00:15:05,120
and time zone data

00:15:03,839 --> 00:15:07,600
they've got to be exposed by the

00:15:05,120 --> 00:15:09,199
operating system you can't bundle that

00:15:07,600 --> 00:15:09,519
stuff and put it in the browser that's

00:15:09,199 --> 00:15:12,240
why

00:15:09,519 --> 00:15:14,079
moment's gigantic even if you're just

00:15:12,240 --> 00:15:15,920
pulling a couple locales or a couple of

00:15:14,079 --> 00:15:19,279
time zones the size explosion

00:15:15,920 --> 00:15:20,240
is is really wild yeah so we made the

00:15:19,279 --> 00:15:22,240
second decision

00:15:20,240 --> 00:15:24,880
to take the path that i took and

00:15:22,240 --> 00:15:26,880
approach ekman tc39

00:15:24,880 --> 00:15:29,839
and the web standard to talk about

00:15:26,880 --> 00:15:33,279
building a new set of daytime apis

00:15:29,839 --> 00:15:36,320
into the language itself

00:15:33,279 --> 00:15:39,360
um and that's the proposal

00:15:36,320 --> 00:15:41,680
this proposal yep interesting

00:15:39,360 --> 00:15:42,639
yep yeah and it's it's interesting

00:15:41,680 --> 00:15:44,639
because like i

00:15:42,639 --> 00:15:46,000
so my background is i do ruby and i see

00:15:44,639 --> 00:15:48,079
python python um

00:15:46,000 --> 00:15:49,360
in the chat is actually um he's saying

00:15:48,079 --> 00:15:51,279
that you're you're a real keeper maggie

00:15:49,360 --> 00:15:53,040
you're a true maintainer

00:15:51,279 --> 00:15:54,560
uh i thought that was in reference

00:15:53,040 --> 00:15:55,040
because you go back and forth from the

00:15:54,560 --> 00:15:57,199
uh

00:15:55,040 --> 00:15:58,240
delegates on on both teams objs and

00:15:57,199 --> 00:16:01,519
microsoft

00:15:58,240 --> 00:16:03,040
um but the yeah so like what i was

00:16:01,519 --> 00:16:03,680
getting at is like things like python

00:16:03,040 --> 00:16:06,959
and ruby

00:16:03,680 --> 00:16:10,000
they have really good basic apis for

00:16:06,959 --> 00:16:11,440
manipulating um things like date time um

00:16:10,000 --> 00:16:14,240
but with javascript

00:16:11,440 --> 00:16:15,040
it's kind of hit or miss when you try to

00:16:14,240 --> 00:16:16,560
do things like

00:16:15,040 --> 00:16:18,160
time zones and try to figure out how to

00:16:16,560 --> 00:16:19,360
read and read these

00:16:18,160 --> 00:16:21,519
like information i think that's where

00:16:19,360 --> 00:16:23,279
moment really comes into

00:16:21,519 --> 00:16:25,360
i think a lot of people's foresight and

00:16:23,279 --> 00:16:26,959
like the sort of part of their dna when

00:16:25,360 --> 00:16:27,839
it comes to manipulating date time

00:16:26,959 --> 00:16:29,759
it's like i'm just going to grab a

00:16:27,839 --> 00:16:30,959
moment because it's going to give me the

00:16:29,759 --> 00:16:33,519
actually

00:16:30,959 --> 00:16:34,959
things like this eight days ago like

00:16:33,519 --> 00:16:37,120
that was my probably is moment

00:16:34,959 --> 00:16:38,560
it probably it probably is moment or a

00:16:37,120 --> 00:16:40,000
moment-inspired library

00:16:38,560 --> 00:16:41,600
but like this is something that was

00:16:40,000 --> 00:16:43,120
popped into

00:16:41,600 --> 00:16:44,800
so many projects i think the first time

00:16:43,120 --> 00:16:47,120
i saw this was in foursquare

00:16:44,800 --> 00:16:48,880
um personally like seeing it in the wild

00:16:47,120 --> 00:16:50,079
um but you'd be able to see like someone

00:16:48,880 --> 00:16:52,480
checked in

00:16:50,079 --> 00:16:53,839
ten seconds ago someone committed three

00:16:52,480 --> 00:16:55,519
days ago eight days ago

00:16:53,839 --> 00:16:57,120
like if anybody's not really familiar

00:16:55,519 --> 00:16:58,959
with moment or things like this and

00:16:57,120 --> 00:17:00,240
these daytime manipulations

00:16:58,959 --> 00:17:02,000
out of the box these are like the most

00:17:00,240 --> 00:17:04,559
basic interactions

00:17:02,000 --> 00:17:06,480
but you can do so much more with it um

00:17:04,559 --> 00:17:08,000
but yeah go ahead about this uh proposal

00:17:06,480 --> 00:17:09,439
temporal and how it's sort of

00:17:08,000 --> 00:17:11,520
you're proposing that for it to be in

00:17:09,439 --> 00:17:13,679
the the actual standard library itself

00:17:11,520 --> 00:17:15,600
yep so this is proposing to bring all of

00:17:13,679 --> 00:17:16,240
these apis into the javascript standard

00:17:15,600 --> 00:17:18,799
library

00:17:16,240 --> 00:17:19,760
so that we're no longer in library land

00:17:18,799 --> 00:17:24,079
and

00:17:19,760 --> 00:17:24,079
you know it's interesting um

00:17:24,319 --> 00:17:31,679
when i first brought this proposal

00:17:27,600 --> 00:17:32,400
um i really knew nothing about web

00:17:31,679 --> 00:17:34,320
standards

00:17:32,400 --> 00:17:36,799
and i i actually the way that i even

00:17:34,320 --> 00:17:39,440
ended up bringing a proposal to tc39 is

00:17:36,799 --> 00:17:43,520
i had just joined microsoft

00:17:39,440 --> 00:17:46,080
and um i found out

00:17:43,520 --> 00:17:47,120
that microsoft which makes sense because

00:17:46,080 --> 00:17:50,320
we make a browser

00:17:47,120 --> 00:17:51,679
had a rep to tc39 and and and i got

00:17:50,320 --> 00:17:53,200
through the grapevine like you should go

00:17:51,679 --> 00:17:56,640
talk to this guy brian

00:17:53,200 --> 00:18:00,320
carlson who who reps us to tc39

00:17:56,640 --> 00:18:02,240
he knows the dates are bad i i

00:18:00,320 --> 00:18:04,240
i like found bryant you know it's a big

00:18:02,240 --> 00:18:06,000
corporation you know i like found him

00:18:04,240 --> 00:18:07,919
through a person of a person

00:18:06,000 --> 00:18:09,600
and and and i said you know i maintain a

00:18:07,919 --> 00:18:10,720
moment and and really this needs to go

00:18:09,600 --> 00:18:12,160
into the programming language and we

00:18:10,720 --> 00:18:16,160
know this to be true

00:18:12,160 --> 00:18:17,679
and like would you fix javascript

00:18:16,160 --> 00:18:19,440
basically i said would you fix

00:18:17,679 --> 00:18:24,080
javascript and he was like no

00:18:19,440 --> 00:18:24,080
you're gonna do it and i was like okay

00:18:24,880 --> 00:18:28,080
and uh and it was it was brian

00:18:26,880 --> 00:18:31,440
ultimately who got me

00:18:28,080 --> 00:18:34,160
um to my first tc39 meeting

00:18:31,440 --> 00:18:34,640
and and basically kind of put me out

00:18:34,160 --> 00:18:36,559
there

00:18:34,640 --> 00:18:40,240
in front of everyone and was like

00:18:36,559 --> 00:18:40,240
maggie's going to help us fix the dates

00:18:41,200 --> 00:18:44,400
and the really interesting thing about

00:18:43,039 --> 00:18:46,799
it

00:18:44,400 --> 00:18:46,799
um

00:18:47,600 --> 00:18:54,960
is that date time as a subspace

00:18:51,919 --> 00:18:57,360
is actually super specialized it's it's

00:18:54,960 --> 00:18:58,799
not

00:18:57,360 --> 00:19:00,960
that you happen to know a lot about

00:18:58,799 --> 00:19:02,000
language parsers like language parsing

00:19:00,960 --> 00:19:04,480
behavior

00:19:02,000 --> 00:19:05,600
or or something like that really doesn't

00:19:04,480 --> 00:19:09,039
help you

00:19:05,600 --> 00:19:11,360
in this sub domain and and actually

00:19:09,039 --> 00:19:13,760
the the delegates of tc39 sort of really

00:19:11,360 --> 00:19:17,200
we don't have the domain expertise

00:19:13,760 --> 00:19:19,280
thanks for being here um

00:19:17,200 --> 00:19:21,600
which is a very interesting experience

00:19:19,280 --> 00:19:24,640
and so they basically said to me

00:19:21,600 --> 00:19:27,520
what do we have to make and

00:19:24,640 --> 00:19:29,120
we ended up coming up with this proposal

00:19:27,520 --> 00:19:32,080
temporal

00:19:29,120 --> 00:19:33,360
um i don't know i feel like it's worth

00:19:32,080 --> 00:19:35,600
talking a little bit about the general

00:19:33,360 --> 00:19:37,679
proposal process in tc39

00:19:35,600 --> 00:19:39,760
yeah i think that would be helpful uh

00:19:37,679 --> 00:19:43,720
just for the the sake of the listener

00:19:39,760 --> 00:19:52,160
sure why don't you go to uh

00:19:43,720 --> 00:19:54,559
github.com proposals

00:19:52,160 --> 00:19:55,280
proposals oh i guess i could just did

00:19:54,559 --> 00:19:59,440
this

00:19:55,280 --> 00:20:01,600
there we go there you go okay so

00:19:59,440 --> 00:20:03,120
whenever you want to make a change to

00:20:01,600 --> 00:20:04,880
javascript

00:20:03,120 --> 00:20:07,039
first keep in mind that javascript at

00:20:04,880 --> 00:20:10,320
the end of the day

00:20:07,039 --> 00:20:13,200
is a standard it's a spec um

00:20:10,320 --> 00:20:13,679
and it's like written in like spec text

00:20:13,200 --> 00:20:15,679
right

00:20:13,679 --> 00:20:16,960
it's written in this like very specific

00:20:15,679 --> 00:20:18,320
spec language

00:20:16,960 --> 00:20:20,480
we could look at that too if you just

00:20:18,320 --> 00:20:22,159
google like ecma 262 it'll pop this back

00:20:20,480 --> 00:20:25,760
up but we don't have to but we could

00:20:22,159 --> 00:20:27,280
yeah um and um

00:20:25,760 --> 00:20:28,640
to make a change to javascript what

00:20:27,280 --> 00:20:30,480
you're really doing is you're saying i

00:20:28,640 --> 00:20:32,320
am requesting a change to the spec

00:20:30,480 --> 00:20:34,080
text right like you're making a pull

00:20:32,320 --> 00:20:36,080
request against the spec

00:20:34,080 --> 00:20:38,159
and javascript is actually very unique

00:20:36,080 --> 00:20:39,280
in that the implementers

00:20:38,159 --> 00:20:41,600
that's the people who make the

00:20:39,280 --> 00:20:45,280
javascript engines v8

00:20:41,600 --> 00:20:48,559
um etc they're following the spec

00:20:45,280 --> 00:20:51,679
the spec happens first and then

00:20:48,559 --> 00:20:54,159
stuff goes out into the world um

00:20:51,679 --> 00:20:55,760
so over time javascript has become this

00:20:54,159 --> 00:20:57,120
like most popular programming language

00:20:55,760 --> 00:20:59,120
on earth and we've had to evolve this

00:20:57,120 --> 00:21:01,200
really robust process around how to get

00:20:59,120 --> 00:21:04,320
a spec change

00:21:01,200 --> 00:21:08,720
so what you'll see is we have a four

00:21:04,320 --> 00:21:12,559
stage process for getting a spec change

00:21:08,720 --> 00:21:14,799
um and ultimately the stages

00:21:12,559 --> 00:21:16,720
um kind of progress like this when you

00:21:14,799 --> 00:21:19,840
first have an idea

00:21:16,720 --> 00:21:22,080
for how you would like something in

00:21:19,840 --> 00:21:24,159
javascript to be different

00:21:22,080 --> 00:21:25,120
um you actually make a proposal that we

00:21:24,159 --> 00:21:28,720
call it stage

00:21:25,120 --> 00:21:30,400
0 which means that

00:21:28,720 --> 00:21:32,720
you have a github repository and it

00:21:30,400 --> 00:21:34,000
maybe has some like sample hypothetical

00:21:32,720 --> 00:21:37,200
code

00:21:34,000 --> 00:21:38,400
um and with the stages or proposal

00:21:37,200 --> 00:21:40,320
what you're doing is you're putting it

00:21:38,400 --> 00:21:41,919
out there and you're going to the tc39

00:21:40,320 --> 00:21:43,440
delegates and saying that this proposal

00:21:41,919 --> 00:21:45,280
exists

00:21:43,440 --> 00:21:47,520
and then to get that proposal to move

00:21:45,280 --> 00:21:49,280
forward

00:21:47,520 --> 00:21:51,039
you have to go and present to this

00:21:49,280 --> 00:21:52,080
standards committee that meets every

00:21:51,039 --> 00:21:53,919
other month

00:21:52,080 --> 00:21:55,200
and this is where the rules still are

00:21:53,919 --> 00:21:56,960
that you can't present

00:21:55,200 --> 00:21:58,240
unless you're a delegate and we have

00:21:56,960 --> 00:22:00,640
that whole delegate relationship where

00:21:58,240 --> 00:22:04,000
you have to work for a member company

00:22:00,640 --> 00:22:04,000
or go through open jsf

00:22:04,080 --> 00:22:07,679
but if you are a delegate then you then

00:22:06,080 --> 00:22:11,280
you come in front of this committee

00:22:07,679 --> 00:22:13,919
and you present your change idea

00:22:11,280 --> 00:22:15,360
and in this in this stage zero phase

00:22:13,919 --> 00:22:17,440
it's very much an idea

00:22:15,360 --> 00:22:18,799
it's not like the code that you're

00:22:17,440 --> 00:22:19,840
putting up there the sample code that

00:22:18,799 --> 00:22:21,280
you're putting up there is ultimately

00:22:19,840 --> 00:22:23,360
what's going to land in the language

00:22:21,280 --> 00:22:25,520
i don't think your proposal has ever

00:22:23,360 --> 00:22:27,360
stayed the same from stage 0 to stage 4

00:22:25,520 --> 00:22:28,799
that would just be impossible

00:22:27,360 --> 00:22:30,320
so you you put up the stages of a

00:22:28,799 --> 00:22:32,080
proposal and the first thing that the

00:22:30,320 --> 00:22:34,480
committee is deciding is do we want to

00:22:32,080 --> 00:22:37,039
make this kind of change to javascript

00:22:34,480 --> 00:22:39,520
like the general idea and if they feel

00:22:37,039 --> 00:22:43,200
like the general idea

00:22:39,520 --> 00:22:44,400
is good they'll pull you into this stage

00:22:43,200 --> 00:22:48,159
one

00:22:44,400 --> 00:22:49,760
um where did the stage one proposals go

00:22:48,159 --> 00:22:52,480
yeah i was just gonna ask because i see

00:22:49,760 --> 00:22:54,159
the uh i see stage three

00:22:52,480 --> 00:22:56,080
yeah we got stage three oh there's stage

00:22:54,159 --> 00:22:58,880
ones stage zero and stage ones

00:22:56,080 --> 00:23:00,240
okay zero they got so stage zero and

00:22:58,880 --> 00:23:01,919
stage ones get pushed into

00:23:00,240 --> 00:23:04,159
its own yep marked out there's tons of

00:23:01,919 --> 00:23:07,679
them interesting tons of them

00:23:04,159 --> 00:23:09,600
uh but uh i would say that that

00:23:07,679 --> 00:23:12,080
let's make date time better was accepted

00:23:09,600 --> 00:23:14,159
quite readily

00:23:12,080 --> 00:23:15,520
by tc39 as something that they knew was

00:23:14,159 --> 00:23:18,880
a problem in the language

00:23:15,520 --> 00:23:20,559
and we moved to stage one now to give

00:23:18,880 --> 00:23:22,960
from stage one to stage two

00:23:20,559 --> 00:23:23,840
is is one of the initial pretty

00:23:22,960 --> 00:23:27,120
difficult

00:23:23,840 --> 00:23:30,240
steps um to get into stage two

00:23:27,120 --> 00:23:31,360
you had to come up with what we call

00:23:30,240 --> 00:23:33,840
initial spec

00:23:31,360 --> 00:23:35,440
text and like i said spectex is like

00:23:33,840 --> 00:23:38,559
coda's words

00:23:35,440 --> 00:23:39,039
um yeah this is the 262 that you

00:23:38,559 --> 00:23:41,679
mentioned

00:23:39,039 --> 00:23:43,679
earlier correct yeah yep this is this is

00:23:41,679 --> 00:23:45,760
text in the 262 spec

00:23:43,679 --> 00:23:46,799
yeah for yeah for anybody who's watching

00:23:45,760 --> 00:23:49,600
and listening

00:23:46,799 --> 00:23:51,279
uh tc39 and the beauty of this is that

00:23:49,600 --> 00:23:52,880
all this is available on github and not

00:23:51,279 --> 00:23:55,600
in like a weird uh

00:23:52,880 --> 00:23:57,440
irc channel so that's the that's the

00:23:55,600 --> 00:24:01,120
test code for this

00:23:57,440 --> 00:24:05,840
test code okay just just google ekma262

00:24:01,120 --> 00:24:05,840
and you'll get a rendered spec

00:24:08,640 --> 00:24:13,520
um which one do i click on

00:24:11,840 --> 00:24:16,240
take the the first one should be the

00:24:13,520 --> 00:24:19,360
rendered spec okay

00:24:16,240 --> 00:24:21,440
interesting okay got it you get a pdf

00:24:19,360 --> 00:24:22,559
go ahead and open open or the browser

00:24:21,440 --> 00:24:26,640
html either one

00:24:22,559 --> 00:24:30,480
yeah um pdfs are safe

00:24:26,640 --> 00:24:32,960
pdf's open um so if we just uh

00:24:30,480 --> 00:24:33,520
kind of scroll down here we'll get an

00:24:32,960 --> 00:24:36,880
idea

00:24:33,520 --> 00:24:38,880
of what spec text looks like yeah pick

00:24:36,880 --> 00:24:43,360
anything so this is bigint

00:24:38,880 --> 00:24:43,360
um you know remainder behavior

00:24:43,520 --> 00:24:46,960
and if you look at it it is as you can

00:24:45,520 --> 00:24:50,159
see almost like

00:24:46,960 --> 00:24:53,200
code as words yeah um that

00:24:50,159 --> 00:24:54,480
bigint ad that it's labeled an abstract

00:24:53,200 --> 00:24:56,799
operation that means that it's an

00:24:54,480 --> 00:25:00,000
operation that isn't exposed to the user

00:24:56,799 --> 00:25:03,200
but hypothetically exists in the spec to

00:25:00,000 --> 00:25:03,200
illustrate other things

00:25:03,360 --> 00:25:09,760
yeah this kind of reads like a a a

00:25:05,600 --> 00:25:09,760
college course i took but got a cn

00:25:11,200 --> 00:25:15,679
but to go to stage two you have to bring

00:25:13,520 --> 00:25:18,640
an initial spec

00:25:15,679 --> 00:25:18,640
for the api

00:25:18,799 --> 00:25:25,600
now starting at stage two this is where

00:25:22,559 --> 00:25:27,279
the community contribution story really

00:25:25,600 --> 00:25:30,320
starts to become something

00:25:27,279 --> 00:25:30,880
that people can participate in in a big

00:25:30,320 --> 00:25:34,480
way

00:25:30,880 --> 00:25:36,400
yeah once we have that initial spec text

00:25:34,480 --> 00:25:38,320
um we're always going to start going

00:25:36,400 --> 00:25:40,960
after making a polyfill so that people

00:25:38,320 --> 00:25:42,480
can try actually using the api

00:25:40,960 --> 00:25:44,960
and we're going to have a huge amount of

00:25:42,480 --> 00:25:47,840
discussion going on about like

00:25:44,960 --> 00:25:49,840
is this the right api yeah most apis can

00:25:47,840 --> 00:25:53,200
you explain a polyfill real quick

00:25:49,840 --> 00:25:54,720
yeah so a polyfill is some user land

00:25:53,200 --> 00:25:57,360
javascript code

00:25:54,720 --> 00:25:59,679
that um emulates the behavior of what

00:25:57,360 --> 00:26:04,720
would ultimately be in the language

00:25:59,679 --> 00:26:04,720
um so in uh

00:26:04,960 --> 00:26:08,159
basically it's a library you know

00:26:06,480 --> 00:26:09,039
basically it's a library that does what

00:26:08,159 --> 00:26:12,159
what the uh

00:26:09,039 --> 00:26:14,320
what the proposal would do

00:26:12,159 --> 00:26:16,559
and we want to have parity between the

00:26:14,320 --> 00:26:19,200
behavior of that library and the spectex

00:26:16,559 --> 00:26:19,200
that we wrote

00:26:19,279 --> 00:26:24,080
and yeah the minute that polyfill starts

00:26:22,960 --> 00:26:26,080
to come into existence

00:26:24,080 --> 00:26:28,320
this is where our community contribution

00:26:26,080 --> 00:26:30,400
story it's really great

00:26:28,320 --> 00:26:31,840
because what usually happens is we put

00:26:30,400 --> 00:26:33,760
out some likes

00:26:31,840 --> 00:26:35,919
we you know we call it we call it straw

00:26:33,760 --> 00:26:39,440
man code if you go back to the

00:26:35,919 --> 00:26:40,640
temporal proposal dab we can dig into

00:26:39,440 --> 00:26:43,679
that proposal

00:26:40,640 --> 00:26:47,679
yes oh no that's luxon

00:26:43,679 --> 00:26:51,120
where do we oh over here there you go uh

00:26:47,679 --> 00:26:55,360
scroll down a little bit um

00:26:51,120 --> 00:26:57,440
see what do we have in here

00:26:55,360 --> 00:26:59,200
uh we've been changing the readme file

00:26:57,440 --> 00:27:01,679
originally this readme file was just

00:26:59,200 --> 00:27:02,799
like some apis that i had made up out of

00:27:01,679 --> 00:27:06,880
my head

00:27:02,799 --> 00:27:07,840
um and um what happens is we need to get

00:27:06,880 --> 00:27:09,919
those working

00:27:07,840 --> 00:27:11,200
so we end up writing this spec text and

00:27:09,919 --> 00:27:13,200
then we write a polyfill which is a

00:27:11,200 --> 00:27:15,760
javascript library like any other

00:27:13,200 --> 00:27:17,760
and on the polyfill we'll take

00:27:15,760 --> 00:27:21,520
contributions from anybody

00:27:17,760 --> 00:27:23,840
um so

00:27:21,520 --> 00:27:25,200
this contribution story is really not

00:27:23,840 --> 00:27:26,960
any different than if you wanted to

00:27:25,200 --> 00:27:28,559
contribute to a moment or you wanted to

00:27:26,960 --> 00:27:30,080
contribute to

00:27:28,559 --> 00:27:32,480
you know any other library in the

00:27:30,080 --> 00:27:35,120
ecosystem

00:27:32,480 --> 00:27:36,320
that's fascinating too because like i

00:27:35,120 --> 00:27:37,039
there are certain things that came in

00:27:36,320 --> 00:27:38,960
through stage

00:27:37,039 --> 00:27:40,880
so one i i think someone explained to me

00:27:38,960 --> 00:27:41,520
the stages and for whatever reason i

00:27:40,880 --> 00:27:43,520
always thought

00:27:41,520 --> 00:27:44,960
stage zero would have been like that's

00:27:43,520 --> 00:27:46,159
when like we're almost ready but stay

00:27:44,960 --> 00:27:48,080
zero i guess

00:27:46,159 --> 00:27:50,240
is not so much because that's gonna be

00:27:48,080 --> 00:27:51,360
like uh well i guess a raise maybe the

00:27:50,240 --> 00:27:53,360
um

00:27:51,360 --> 00:27:55,200
uh zero based arrays and that being the

00:27:53,360 --> 00:27:56,640
first step but anyway um sorry i'm just

00:27:55,200 --> 00:27:57,919
talking out loud at this point oh it's

00:27:56,640 --> 00:28:00,399
all good but uh

00:27:57,919 --> 00:28:02,640
but i think the that explanation helps

00:28:00,399 --> 00:28:05,360
and to know that stage two and three

00:28:02,640 --> 00:28:06,480
um are are places that people can sort

00:28:05,360 --> 00:28:10,399
of keep an eye on

00:28:06,480 --> 00:28:11,279
uh yes stage two is the big api movement

00:28:10,399 --> 00:28:13,520
phase

00:28:11,279 --> 00:28:15,360
when something goes to stage three

00:28:13,520 --> 00:28:18,640
what's happening at stage three

00:28:15,360 --> 00:28:20,960
is that we're asking an engine to

00:28:18,640 --> 00:28:23,600
actually write the code and ship it into

00:28:20,960 --> 00:28:26,240
the world to see how it goes

00:28:23,600 --> 00:28:28,880
so when something goes into stage three

00:28:26,240 --> 00:28:32,399
we gotta be pretty happy with that api

00:28:28,880 --> 00:28:34,080
yeah um so this stage

00:28:32,399 --> 00:28:35,440
two time so temporal has actually been

00:28:34,080 --> 00:28:36,320
sitting in stage two for almost two

00:28:35,440 --> 00:28:40,080
years

00:28:36,320 --> 00:28:44,799
um and for a very big api like this

00:28:40,080 --> 00:28:47,360
that's not unusual once it goes to three

00:28:44,799 --> 00:28:49,919
um it's pretty baked right like then

00:28:47,360 --> 00:28:52,159
we've got browser engine shipping it out

00:28:49,919 --> 00:28:54,080
um and to get to stage four we need to

00:28:52,159 --> 00:28:56,159
have two shipping implementations that

00:28:54,080 --> 00:28:58,960
the browser vendors are happy with or

00:28:56,159 --> 00:29:02,480
the node vendors i keep saying browser

00:28:58,960 --> 00:29:02,480
we love node um

00:29:02,559 --> 00:29:05,039
we need to have two shipping

00:29:03,440 --> 00:29:06,080
implementations that the engines are

00:29:05,039 --> 00:29:08,640
happy with

00:29:06,080 --> 00:29:10,559
um so stage three is really about what

00:29:08,640 --> 00:29:13,279
we typically see at stage three

00:29:10,559 --> 00:29:14,320
are concerns around like sometimes you

00:29:13,279 --> 00:29:17,279
implement something

00:29:14,320 --> 00:29:18,159
and like it's just not gonna perform

00:29:17,279 --> 00:29:19,679
yeah

00:29:18,159 --> 00:29:21,520
and when you say when you say engines

00:29:19,679 --> 00:29:23,440
are you talking like v8 yep

00:29:21,520 --> 00:29:25,120
okay excellent i'm talking about the

00:29:23,440 --> 00:29:26,799
language engines

00:29:25,120 --> 00:29:28,960
stage three is really for testing in the

00:29:26,799 --> 00:29:30,399
language engines um

00:29:28,960 --> 00:29:32,480
and then once we're happy with that we

00:29:30,399 --> 00:29:34,720
go to stage four and that means done

00:29:32,480 --> 00:29:35,679
um so the the best time to get involved

00:29:34,720 --> 00:29:40,000
with the proposal

00:29:35,679 --> 00:29:41,200
is in stage one but especially stage two

00:29:40,000 --> 00:29:43,200
because that's when we've said we're

00:29:41,200 --> 00:29:44,960
doing this we like the initial idea

00:29:43,200 --> 00:29:46,320
and stage two so we really want your

00:29:44,960 --> 00:29:49,120
feedback

00:29:46,320 --> 00:29:50,640
um one thing i will say about any of the

00:29:49,120 --> 00:29:53,760
stage two proposals

00:29:50,640 --> 00:29:57,120
um the delegates of tc39

00:29:53,760 --> 00:30:02,080
as a committee are kind of

00:29:57,120 --> 00:30:04,480
acutely aware of the fact that

00:30:02,080 --> 00:30:04,480
um

00:30:05,679 --> 00:30:12,320
we sometimes don't capture

00:30:09,279 --> 00:30:13,520
what the new to javascript user would

00:30:12,320 --> 00:30:16,960
understand

00:30:13,520 --> 00:30:20,480
like we're very deep in and we also

00:30:16,960 --> 00:30:21,840
understand that javascript is like

00:30:20,480 --> 00:30:23,520
practically the starter programming

00:30:21,840 --> 00:30:24,720
language of the world right now

00:30:23,520 --> 00:30:27,200
yeah how many people started with

00:30:24,720 --> 00:30:30,480
javascript yeah very common

00:30:27,200 --> 00:30:33,919
yeah so

00:30:30,480 --> 00:30:36,240
at stage two we

00:30:33,919 --> 00:30:40,080
really value the person who's willing to

00:30:36,240 --> 00:30:43,120
come to the table and say i don't get it

00:30:40,080 --> 00:30:46,480
yeah um like we seek it out

00:30:43,120 --> 00:30:46,880
um you know you you heard me mention

00:30:46,480 --> 00:30:49,760
that

00:30:46,880 --> 00:30:50,640
i'm a manager and like i i often by the

00:30:49,760 --> 00:30:53,600
committee

00:30:50,640 --> 00:30:55,440
get sent back to work like can you have

00:30:53,600 --> 00:30:57,679
your college higher employees try this

00:30:55,440 --> 00:30:59,279
api for me

00:30:57,679 --> 00:31:01,200
yeah that's that's fascinating too

00:30:59,279 --> 00:31:02,640
because so um

00:31:01,200 --> 00:31:04,159
i sat in uh i sat in the meeting the

00:31:02,640 --> 00:31:04,559
first time i met you was then the open

00:31:04,159 --> 00:31:07,519
jf

00:31:04,559 --> 00:31:07,919
i started the um the note summit meeting

00:31:07,519 --> 00:31:10,080
about

00:31:07,919 --> 00:31:11,679
contributors and i'm a big fan of

00:31:10,080 --> 00:31:13,840
actually getting

00:31:11,679 --> 00:31:15,519
feedback from folks who are new to even

00:31:13,840 --> 00:31:17,360
open source and contributing

00:31:15,519 --> 00:31:18,559
because they always have really good

00:31:17,360 --> 00:31:20,640
questions and

00:31:18,559 --> 00:31:22,799
i'm i'm left for like seven years into

00:31:20,640 --> 00:31:25,360
this um like full-time engineering

00:31:22,799 --> 00:31:26,480
so like though i still feel very

00:31:25,360 --> 00:31:29,200
beginner like i still do

00:31:26,480 --> 00:31:29,679
a lot of beginner mistakes uh i still

00:31:29,200 --> 00:31:31,440
also

00:31:29,679 --> 00:31:33,039
don't know what it's like to be day one

00:31:31,440 --> 00:31:34,640
beginner and

00:31:33,039 --> 00:31:36,559
for something like so like with your

00:31:34,640 --> 00:31:39,120
example which is the proposal for

00:31:36,559 --> 00:31:39,600
temporal like just manipulating date

00:31:39,120 --> 00:31:41,440
time

00:31:39,600 --> 00:31:43,279
and leveraging this instead of grabbing

00:31:41,440 --> 00:31:46,399
a moment or grabbing something else

00:31:43,279 --> 00:31:47,600
um is pretty like it's it doesn't sound

00:31:46,399 --> 00:31:48,720
like low effort

00:31:47,600 --> 00:31:49,760
but if you're already working on

00:31:48,720 --> 00:31:50,799
something that has something that's

00:31:49,760 --> 00:31:52,480
manipulating daytime

00:31:50,799 --> 00:31:54,720
it seems like something that if someone

00:31:52,480 --> 00:31:56,240
knew about it they could attempt to

00:31:54,720 --> 00:31:57,840
build a project around it and then

00:31:56,240 --> 00:31:58,399
provide feedback but i don't think

00:31:57,840 --> 00:31:59,679
totally

00:31:58,399 --> 00:32:01,519
i think the context and what i love

00:31:59,679 --> 00:32:03,039
about doing these these friday events

00:32:01,519 --> 00:32:04,799
is that we can provide that context for

00:32:03,039 --> 00:32:06,159
folks and say hey like

00:32:04,799 --> 00:32:08,000
next time you do some date time stuff

00:32:06,159 --> 00:32:10,960
why don't you try manipulating it

00:32:08,000 --> 00:32:12,559
in this library this polyfill and report

00:32:10,960 --> 00:32:14,320
back if it works if there's things that

00:32:12,559 --> 00:32:16,399
are i guess edge cages and corner cases

00:32:14,320 --> 00:32:19,440
that are not working

00:32:16,399 --> 00:32:20,640
that would be super valuable so

00:32:19,440 --> 00:32:23,600
knowing the stages and knowing this

00:32:20,640 --> 00:32:25,120
proposal system i'm curious like

00:32:23,600 --> 00:32:26,640
did you want to go switch over the vs

00:32:25,120 --> 00:32:30,080
code and

00:32:26,640 --> 00:32:31,039
show this use case sure well so let's

00:32:30,080 --> 00:32:34,159
really cook while we're

00:32:31,039 --> 00:32:35,840
on github yeah let's talk about how you

00:32:34,159 --> 00:32:37,519
get this proposal to use

00:32:35,840 --> 00:32:40,559
so if you go to the polyfill link on the

00:32:37,519 --> 00:32:43,200
readme it's also just a polyfill folder

00:32:40,559 --> 00:32:44,159
either one okay well there we go there

00:32:43,200 --> 00:32:46,880
we go

00:32:44,159 --> 00:32:48,559
here we go um this is like i said this

00:32:46,880 --> 00:32:50,000
is just a javascript library

00:32:48,559 --> 00:32:51,360
this is not any different than any other

00:32:50,000 --> 00:32:52,880
javascript library that you might

00:32:51,360 --> 00:32:57,200
contribute to

00:32:52,880 --> 00:32:59,200
um so um you know we've got all of our

00:32:57,200 --> 00:33:02,960
types enumerated out here

00:32:59,200 --> 00:33:03,760
um and we have got the test code in

00:33:02,960 --> 00:33:07,120
another folder

00:33:03,760 --> 00:33:07,760
i mean this is this is this is standard

00:33:07,120 --> 00:33:09,360
javascript

00:33:07,760 --> 00:33:10,880
yeah this is pretty readable too as well

00:33:09,360 --> 00:33:12,320
like there's no uh well there's no

00:33:10,880 --> 00:33:14,399
typescript here so everybody

00:33:12,320 --> 00:33:15,519
who doesn't do typescript it's pretty

00:33:14,399 --> 00:33:18,399
approachable

00:33:15,519 --> 00:33:19,200
yep and uh yeah actually i want to take

00:33:18,399 --> 00:33:22,320
a look at the tests

00:33:19,200 --> 00:33:22,320
you said there's a test folder

00:33:22,480 --> 00:33:25,360
curious like some daytime test because

00:33:24,000 --> 00:33:27,919
that's uh that's the thing i'm most

00:33:25,360 --> 00:33:27,919
interested in

00:33:28,000 --> 00:33:32,720
uh to absolute date

00:33:31,039 --> 00:33:34,880
time zones yeah time zones are something

00:33:32,720 --> 00:33:37,200
that i always avoid

00:33:34,880 --> 00:33:38,399
with a passion well but when you need

00:33:37,200 --> 00:33:41,760
them you need them

00:33:38,399 --> 00:33:45,519
yeah so

00:33:41,760 --> 00:33:46,960
um yeah i i want to uh i'll i'll save my

00:33:45,519 --> 00:33:48,399
my comment because i have an actual

00:33:46,960 --> 00:33:49,600
example where i think i'm gonna use this

00:33:48,399 --> 00:33:51,760
today

00:33:49,600 --> 00:33:53,519
okay uh now that i know how the polyfill

00:33:51,760 --> 00:33:55,919
works and we've had this conversation

00:33:53,519 --> 00:33:57,519
but i'll save it for the end um sure so

00:33:55,919 --> 00:33:58,159
that way we can focus on how people can

00:33:57,519 --> 00:34:01,200
get involved

00:33:58,159 --> 00:34:04,000
in this this project so if you go back

00:34:01,200 --> 00:34:05,039
there's a very nice cookbook um that

00:34:04,000 --> 00:34:07,840
they've written

00:34:05,039 --> 00:34:07,840
um

00:34:09,200 --> 00:34:12,240
so this tells you you know this is an

00:34:10,800 --> 00:34:13,679
npm installed just like any other

00:34:12,240 --> 00:34:15,359
library that you work with and here's

00:34:13,679 --> 00:34:17,280
how you import the code

00:34:15,359 --> 00:34:18,399
and then there should be a link to the

00:34:17,280 --> 00:34:20,399
cookbook if you

00:34:18,399 --> 00:34:22,000
you scroll up uh do you know about this

00:34:20,399 --> 00:34:24,720
npn run playground if not

00:34:22,000 --> 00:34:25,760
or is that just in the package.json yeah

00:34:24,720 --> 00:34:26,879
that's just in the package

00:34:25,760 --> 00:34:29,359
uh i didn't know that was something

00:34:26,879 --> 00:34:30,399
special uh just runs the experimental

00:34:29,359 --> 00:34:32,320
flags okay

00:34:30,399 --> 00:34:33,440
yeah that's a good naming it just made

00:34:32,320 --> 00:34:34,879
me think there was like some sort of

00:34:33,440 --> 00:34:35,760
secret feature in npm i didn't know

00:34:34,879 --> 00:34:39,599
about

00:34:35,760 --> 00:34:40,639
where's the oh uh you looking for the

00:34:39,599 --> 00:34:43,919
cookbook

00:34:40,639 --> 00:34:46,960
yeah that's basically the docs um

00:34:43,919 --> 00:34:49,119
yeah right there um

00:34:46,960 --> 00:34:50,560
this is really helpful this is going to

00:34:49,119 --> 00:34:53,280
give you

00:34:50,560 --> 00:34:55,119
a lot of information about how to make

00:34:53,280 --> 00:34:58,880
api calls

00:34:55,119 --> 00:35:03,200
um how the type system breaks out

00:34:58,880 --> 00:35:05,520
things like that um

00:35:03,200 --> 00:35:06,800
yeah i mean it seems to me it seems

00:35:05,520 --> 00:35:08,560
straightforward hopefully the the

00:35:06,800 --> 00:35:10,160
listeners are also

00:35:08,560 --> 00:35:11,599
catching up and understanding how this

00:35:10,160 --> 00:35:13,200
works but yeah if it's if you're

00:35:11,599 --> 00:35:14,400
including the library and you call it uh

00:35:13,200 --> 00:35:15,200
you name it temporal

00:35:14,400 --> 00:35:18,000
like you should be able to do

00:35:15,200 --> 00:35:21,760
temporal.now and then temporally

00:35:18,000 --> 00:35:25,119
so like normally what i would do um

00:35:21,760 --> 00:35:26,000
is actually i don't have a terminal open

00:35:25,119 --> 00:35:28,480
i closed it

00:35:26,000 --> 00:35:30,160
but um i would just do datetime.now and

00:35:28,480 --> 00:35:32,880
then daytime that now

00:35:30,160 --> 00:35:34,160
other things um but there's there's

00:35:32,880 --> 00:35:36,800
extra work to do

00:35:34,160 --> 00:35:37,920
to make it the way i want it um so i

00:35:36,800 --> 00:35:40,079
guess the hope is that

00:35:37,920 --> 00:35:42,160
the temporal library is going to be an

00:35:40,079 --> 00:35:44,720
easy api to

00:35:42,160 --> 00:35:45,680
not only like rep with your mind or grok

00:35:44,720 --> 00:35:48,720
with your mind

00:35:45,680 --> 00:35:50,240
um but also i guess easy to manipulate

00:35:48,720 --> 00:35:51,680
and that you don't have to install

00:35:50,240 --> 00:35:53,680
and i guess when it gets to stage three

00:35:51,680 --> 00:35:56,000
and four you don't have to install

00:35:53,680 --> 00:35:56,720
a third-party library to get it to work

00:35:56,000 --> 00:35:59,520
yeah

00:35:56,720 --> 00:36:01,119
at the bottom of this do we have the the

00:35:59,520 --> 00:36:04,320
type graphic yeah oh

00:36:01,119 --> 00:36:07,040
yes this if you're talking about

00:36:04,320 --> 00:36:08,480
how this library works this is

00:36:07,040 --> 00:36:11,359
interesting

00:36:08,480 --> 00:36:12,720
um a really big concept in in daytime

00:36:11,359 --> 00:36:15,280
and programming

00:36:12,720 --> 00:36:16,160
is whether you have a relationship to

00:36:15,280 --> 00:36:18,000
utc

00:36:16,160 --> 00:36:20,640
like you know at what point in utc

00:36:18,000 --> 00:36:24,079
you're at or not

00:36:20,640 --> 00:36:27,359
um and the way that this api breaks out

00:36:24,079 --> 00:36:29,920
is that that absolute type

00:36:27,359 --> 00:36:32,560
over on the left is the point in utc you

00:36:29,920 --> 00:36:34,880
can think of it as a unix time stamp

00:36:32,560 --> 00:36:38,000
and then the types on the right the date

00:36:34,880 --> 00:36:41,200
time date time year month and month day

00:36:38,000 --> 00:36:43,440
they are types without any

00:36:41,200 --> 00:36:44,320
ship to utc which is a really common use

00:36:43,440 --> 00:36:46,000
case

00:36:44,320 --> 00:36:47,680
uh you know i want to show the time at

00:36:46,000 --> 00:36:49,040
midnight wherever i am and then this

00:36:47,680 --> 00:36:51,520
time zone type

00:36:49,040 --> 00:36:53,599
allows you to if you know a time zone

00:36:51,520 --> 00:36:55,599
create mappings between absolute

00:36:53,599 --> 00:36:57,440
and the calendar types on the right and

00:36:55,599 --> 00:36:59,599
that's a lot of the paradigm going on in

00:36:57,440 --> 00:37:01,359
this api

00:36:59,599 --> 00:37:02,720
so it is a little bit of a thinking api

00:37:01,359 --> 00:37:04,400
it causes you to have to ask yourself

00:37:02,720 --> 00:37:06,640
right now with the code that i have do i

00:37:04,400 --> 00:37:08,240
understand the relationship to utc

00:37:06,640 --> 00:37:10,000
do i only understand the time and local

00:37:08,240 --> 00:37:12,000
time yeah i understand the time and

00:37:10,000 --> 00:37:15,920
local time in the time zone

00:37:12,000 --> 00:37:19,440
um so it's composable in that way okay

00:37:15,920 --> 00:37:22,400
excellent i'm excited to actually

00:37:19,440 --> 00:37:23,839
use it in my project um now that i sort

00:37:22,400 --> 00:37:25,839
of i understand

00:37:23,839 --> 00:37:27,599
the whole where it's at and sort of the

00:37:25,839 --> 00:37:29,040
place understanding like honestly i

00:37:27,599 --> 00:37:31,040
didn't know

00:37:29,040 --> 00:37:32,480
that when people use the word polyfill i

00:37:31,040 --> 00:37:34,000
sort of always glazed over and i'm like

00:37:32,480 --> 00:37:34,839
again i'm seven years into using

00:37:34,000 --> 00:37:36,800
javascript

00:37:34,839 --> 00:37:38,160
professionally i just go outside over

00:37:36,800 --> 00:37:39,040
i'm like oh yeah polyfill yeah i know

00:37:38,160 --> 00:37:40,560
what you're talking about

00:37:39,040 --> 00:37:42,400
uh i never actually knew it it just

00:37:40,560 --> 00:37:44,880
really meant yeah yeah

00:37:42,400 --> 00:37:46,880
npm package you could install the one

00:37:44,880 --> 00:37:49,680
thing i will call it about the polyfill

00:37:46,880 --> 00:37:50,400
is that until this hits stage three this

00:37:49,680 --> 00:37:55,040
api is

00:37:50,400 --> 00:37:55,040
very unstable yeah so um

00:37:56,720 --> 00:38:00,000
you may not want to put it in your

00:37:58,480 --> 00:38:02,000
production project

00:38:00,000 --> 00:38:03,119
oh yeah i definitely yeah i highly

00:38:02,000 --> 00:38:04,640
recommend not do that

00:38:03,119 --> 00:38:06,320
uh the project i have in mind is

00:38:04,640 --> 00:38:08,800
actually a side project not even a side

00:38:06,320 --> 00:38:11,359
project it's an example project i use

00:38:08,800 --> 00:38:12,079
totally to so basically the project i

00:38:11,359 --> 00:38:14,400
have and i'll just

00:38:12,079 --> 00:38:15,520
i'll just mention it briefly it's a

00:38:14,400 --> 00:38:16,960
project that i use

00:38:15,520 --> 00:38:18,880
with my github actions to tell me the

00:38:16,960 --> 00:38:19,440
week number because i build a bunch of

00:38:18,880 --> 00:38:22,960
weak

00:38:19,440 --> 00:38:23,680
get up actions um and i append the week

00:38:22,960 --> 00:38:26,240
number

00:38:23,680 --> 00:38:27,359
in their response because i want to

00:38:26,240 --> 00:38:29,920
create an issue

00:38:27,359 --> 00:38:31,040
on a cadence so i create the week number

00:38:29,920 --> 00:38:32,880
because i know this issue

00:38:31,040 --> 00:38:35,040
every week i open up an issue to

00:38:32,880 --> 00:38:36,480
basically present information and

00:38:35,040 --> 00:38:39,520
collect information from people on my

00:38:36,480 --> 00:38:41,040
team so this is a very trivial use case

00:38:39,520 --> 00:38:42,640
that i did not have to build an npm

00:38:41,040 --> 00:38:43,839
package to make it run but that's what

00:38:42,640 --> 00:38:46,400
this is

00:38:43,839 --> 00:38:47,359
and i built it originally to do another

00:38:46,400 --> 00:38:49,839
workshop on it

00:38:47,359 --> 00:38:51,119
on node so it just sort of sits around

00:38:49,839 --> 00:38:52,880
as like a little side

00:38:51,119 --> 00:38:55,920
side thing that's only like 12 lines of

00:38:52,880 --> 00:38:58,839
code so is this just like a monotonic

00:38:55,920 --> 00:39:01,920
ordering of weak numbers up or

00:38:58,839 --> 00:39:02,880
no it's a week yeah so i honestly it's

00:39:01,920 --> 00:39:07,359
been so long

00:39:02,880 --> 00:39:11,200
but uh yeah i basically i get the date

00:39:07,359 --> 00:39:14,480
and then base it on utc

00:39:11,200 --> 00:39:16,000
and then i count out yeah okay i think

00:39:14,480 --> 00:39:18,960
in some portal just you know

00:39:16,000 --> 00:39:20,079
they're so the guys have been for the

00:39:18,960 --> 00:39:21,920
last couple months

00:39:20,079 --> 00:39:23,920
i have had other stuff going on in my

00:39:21,920 --> 00:39:26,560
life and a whole bunch of the guys have

00:39:23,920 --> 00:39:29,440
been changing apis on me so i'm like

00:39:26,560 --> 00:39:31,040
okay hello new apis but i think you can

00:39:29,440 --> 00:39:32,000
get an iso weak number directly out of

00:39:31,040 --> 00:39:34,480
the api right now

00:39:32,000 --> 00:39:35,599
interesting yeah that's all i want like

00:39:34,480 --> 00:39:37,359
this is

00:39:35,599 --> 00:39:40,000
these 13 lines is probably way too much

00:39:37,359 --> 00:39:41,440
to do what i'm doing it for

00:39:40,000 --> 00:39:43,760
uh and though yes i'm using in

00:39:41,440 --> 00:39:44,880
production it's a production into my own

00:39:43,760 --> 00:39:46,560
team's repo

00:39:44,880 --> 00:39:47,920
so it's like if it breaks it really

00:39:46,560 --> 00:39:48,560
doesn't matter we just manually open the

00:39:47,920 --> 00:39:51,440
issue

00:39:48,560 --> 00:39:52,640
whenever it does break um but it's it's

00:39:51,440 --> 00:39:54,640
a nice little

00:39:52,640 --> 00:39:56,240
i like these little sandbox environments

00:39:54,640 --> 00:39:58,400
for me to sort of play around with

00:39:56,240 --> 00:40:01,119
um for reasons like this like i want to

00:39:58,400 --> 00:40:03,839
try out the temporal stuff

00:40:01,119 --> 00:40:04,560
and this it will hopefully it will it it

00:40:03,839 --> 00:40:06,160
will work in

00:40:04,560 --> 00:40:07,839
the way i want it and i can i can

00:40:06,160 --> 00:40:12,800
actually provide feedback

00:40:07,839 --> 00:40:16,720
uh on the project itself so absolutely

00:40:12,800 --> 00:40:17,839
um so are we gonna go to sample code is

00:40:16,720 --> 00:40:19,040
that what we're gonna try out

00:40:17,839 --> 00:40:20,960
yeah yeah we should we probably should

00:40:19,040 --> 00:40:21,680
we got roughly like uh about 20 minutes

00:40:20,960 --> 00:40:23,599
so

00:40:21,680 --> 00:40:25,520
uh you've been so gracious and created

00:40:23,599 --> 00:40:28,560
some examples for us

00:40:25,520 --> 00:40:29,920
um so folks did you want to drop in the

00:40:28,560 --> 00:40:31,599
uh you don't have do you have the chat

00:40:29,920 --> 00:40:32,400
twitch shadow yeah i dropped i dropped

00:40:31,599 --> 00:40:34,720
it just in the

00:40:32,400 --> 00:40:36,079
in the chat well in the zoom chat i

00:40:34,720 --> 00:40:38,079
don't know which chat

00:40:36,079 --> 00:40:40,240
you can you can move it to any chat you

00:40:38,079 --> 00:40:43,599
like oh thanks you're too kind

00:40:40,240 --> 00:40:46,319
uh so i'll grab that just uh and then

00:40:43,599 --> 00:40:48,720
for the sake of anybody who wants to uh

00:40:46,319 --> 00:40:49,599
follow along uh just grab this gist and

00:40:48,720 --> 00:40:52,319
uh

00:40:49,599 --> 00:40:53,599
you can uh yeah uh essentially it's just

00:40:52,319 --> 00:40:56,400
like paint by number so

00:40:53,599 --> 00:40:57,839
we'll paint by comments yep yep this is

00:40:56,400 --> 00:41:00,000
paint by comments uh

00:40:57,839 --> 00:41:01,440
so this first code we have here is our

00:41:00,000 --> 00:41:04,800
old date object

00:41:01,440 --> 00:41:06,480
and uh if you wanna basically what i'm

00:41:04,800 --> 00:41:07,280
doing here is i'm parsing the string

00:41:06,480 --> 00:41:10,160
january 1st

00:41:07,280 --> 00:41:11,599
2020. oh well yeah so we have the

00:41:10,160 --> 00:41:13,920
imports

00:41:11,599 --> 00:41:15,599
and then uh i'm parsing the string

00:41:13,920 --> 00:41:17,119
january 1st 2020 here

00:41:15,599 --> 00:41:19,200
and if you just want to kick that code

00:41:17,119 --> 00:41:20,880
off brian yeah um

00:41:19,200 --> 00:41:22,720
it'll illustrate some interesting

00:41:20,880 --> 00:41:25,359
behaviors of the date object

00:41:22,720 --> 00:41:27,599
as it exists today so you see the first

00:41:25,359 --> 00:41:29,920
console.log is to isis string

00:41:27,599 --> 00:41:31,839
and it and you see that it parsed that

00:41:29,920 --> 00:41:33,760
date as a utc date

00:41:31,839 --> 00:41:35,440
yes so then when you call isis string

00:41:33,760 --> 00:41:37,839
you get utc out

00:41:35,440 --> 00:41:39,040
but when you call regular old two-string

00:41:37,839 --> 00:41:41,280
you get

00:41:39,040 --> 00:41:42,160
uh december yeah which is what i

00:41:41,280 --> 00:41:43,839
normally want

00:41:42,160 --> 00:41:45,599
i usually want this when i print out

00:41:43,839 --> 00:41:48,960
stuff right

00:41:45,599 --> 00:41:50,240
right and so this is a common gotcha for

00:41:48,960 --> 00:41:50,880
date like i think everybody's had this

00:41:50,240 --> 00:41:52,400
happen

00:41:50,880 --> 00:41:54,480
you know one thing to know about that

00:41:52,400 --> 00:41:57,200
parsing behavior in date

00:41:54,480 --> 00:41:59,200
is that it's actually the specification

00:41:57,200 --> 00:42:02,240
text for how dates should parse

00:41:59,200 --> 00:42:03,280
in javascript is in conflict with the

00:42:02,240 --> 00:42:06,800
specification

00:42:03,280 --> 00:42:08,560
text for iso 8601 which is what

00:42:06,800 --> 00:42:10,640
that that date standard that we all use

00:42:08,560 --> 00:42:11,520
in computing is so it actually doesn't

00:42:10,640 --> 00:42:14,640
parse

00:42:11,520 --> 00:42:16,240
the way that it's supposed to and it

00:42:14,640 --> 00:42:18,480
also varies across

00:42:16,240 --> 00:42:19,599
engines some of the edge cases of the

00:42:18,480 --> 00:42:22,560
parsing behavior

00:42:19,599 --> 00:42:24,480
so it parsed that string as utc but if

00:42:22,560 --> 00:42:26,400
you were to add a time to it

00:42:24,480 --> 00:42:28,079
it would parse it as local time which is

00:42:26,400 --> 00:42:32,319
just confusing attack

00:42:28,079 --> 00:42:35,599
um so it's a little wild the way

00:42:32,319 --> 00:42:36,720
that this works um

00:42:35,599 --> 00:42:39,520
and and that's definitely something we

00:42:36,720 --> 00:42:41,119
wanted to clean up so if you scroll down

00:42:39,520 --> 00:42:42,480
you can you can comment that code out

00:42:41,119 --> 00:42:45,839
and we can go and uncomment the next

00:42:42,480 --> 00:42:45,839
couple lines of code

00:42:46,160 --> 00:42:51,119
i suppose i could get fancier let's

00:42:48,480 --> 00:42:51,119
uncomment

00:42:51,359 --> 00:42:57,040
uh just 10 and 11 for starters

00:42:57,520 --> 00:43:00,560
all right so this is interesting if we

00:42:59,520 --> 00:43:03,359
run this

00:43:00,560 --> 00:43:04,880
we're making a temporal dot date

00:43:03,359 --> 00:43:06,800
remember i talked about there's a whole

00:43:04,880 --> 00:43:08,720
bunch of types in this library

00:43:06,800 --> 00:43:10,480
but the date type is intended to

00:43:08,720 --> 00:43:13,119
represent just a date

00:43:10,480 --> 00:43:14,480
without a time or a related time zone

00:43:13,119 --> 00:43:17,440
yeah

00:43:14,480 --> 00:43:19,280
so by having that date object that

00:43:17,440 --> 00:43:21,119
represents just a date

00:43:19,280 --> 00:43:22,720
that behavior you said i usually want

00:43:21,119 --> 00:43:25,119
the local time

00:43:22,720 --> 00:43:26,960
when you parse it in you're guaranteed

00:43:25,119 --> 00:43:27,839
to get it back out without any time zone

00:43:26,960 --> 00:43:30,000
shifting

00:43:27,839 --> 00:43:31,680
yeah you think it might be bad that the

00:43:30,000 --> 00:43:33,760
time zone's not there but it's actually

00:43:31,680 --> 00:43:35,280
great the time zone's not there

00:43:33,760 --> 00:43:37,200
you're gonna get the string you passed

00:43:35,280 --> 00:43:39,920
it um

00:43:37,200 --> 00:43:42,480
so then if we take the next three lines

00:43:39,920 --> 00:43:45,119
say you want utc

00:43:42,480 --> 00:43:45,520
um should i go to comment these back out

00:43:45,119 --> 00:43:46,800
i mean

00:43:45,520 --> 00:43:48,720
you'll just get extra outputs however

00:43:46,800 --> 00:43:49,839
you want yeah well for the sake of uh

00:43:48,720 --> 00:43:52,880
the reader

00:43:49,839 --> 00:43:54,240
yep if if you actually want utc this is

00:43:52,880 --> 00:43:57,280
amazing we created

00:43:54,240 --> 00:43:59,599
absolute for right now and then we come

00:43:57,280 --> 00:44:03,720
and we get back the epoch seconds we can

00:43:59,599 --> 00:44:06,000
also output that in iso 8601 that's the

00:44:03,720 --> 00:44:08,480
2020-01-01 format

00:44:06,000 --> 00:44:09,520
um and then this is cool this is a

00:44:08,480 --> 00:44:12,960
little thing

00:44:09,520 --> 00:44:15,680
um our current date object only supports

00:44:12,960 --> 00:44:18,960
down to millisecond precision

00:44:15,680 --> 00:44:20,880
um but a really great language feature

00:44:18,960 --> 00:44:23,440
landed just when i started making this

00:44:20,880 --> 00:44:24,079
proposal and we see it on display right

00:44:23,440 --> 00:44:27,839
here

00:44:24,079 --> 00:44:29,440
big integer there is a 64-bit integer

00:44:27,839 --> 00:44:30,880
right there

00:44:29,440 --> 00:44:32,640
actually big end is a floating floating

00:44:30,880 --> 00:44:33,839
precision integer but

00:44:32,640 --> 00:44:36,000
that allows us to get down to

00:44:33,839 --> 00:44:39,359
microsecond precision um

00:44:36,000 --> 00:44:40,480
i will call out only if the host or os

00:44:39,359 --> 00:44:42,560
supports it

00:44:40,480 --> 00:44:44,079
right like if the os doesn't support it

00:44:42,560 --> 00:44:45,200
then we can't do anything but if the os

00:44:44,079 --> 00:44:46,720
supports it we can get all the way down

00:44:45,200 --> 00:44:47,920
to microsecond precision which

00:44:46,720 --> 00:44:49,440
was really critical for a lot of

00:44:47,920 --> 00:44:51,040
scientific applications and we heard

00:44:49,440 --> 00:44:54,160
that many times over

00:44:51,040 --> 00:44:56,480
um excellent yeah

00:44:54,160 --> 00:44:58,160
yeah so if you're if you work at nasa or

00:44:56,480 --> 00:44:59,520
you're launching rockets uh through drop

00:44:58,160 --> 00:45:03,040
with javascript

00:44:59,520 --> 00:45:06,000
microseconds matters we uh we have uh

00:45:03,040 --> 00:45:06,880
we have performance uh performance teams

00:45:06,000 --> 00:45:09,359
on the cloud

00:45:06,880 --> 00:45:10,079
for whom that's uh that's a thing so

00:45:09,359 --> 00:45:13,280
there's

00:45:10,079 --> 00:45:15,680
there's stuff out there um

00:45:13,280 --> 00:45:16,880
let's see so yeah we can do this one so

00:45:15,680 --> 00:45:18,480
this illustrates a

00:45:16,880 --> 00:45:20,000
major problem that we heard complaints

00:45:18,480 --> 00:45:21,280
over and over again with the old way

00:45:20,000 --> 00:45:23,760
date works

00:45:21,280 --> 00:45:25,119
which is that if i there's a couple

00:45:23,760 --> 00:45:27,760
problems going on here

00:45:25,119 --> 00:45:28,880
if i want to add a day you see me

00:45:27,760 --> 00:45:31,440
parsing

00:45:28,880 --> 00:45:32,000
2020 january 1st say i want to get

00:45:31,440 --> 00:45:35,760
january

00:45:32,000 --> 00:45:38,079
2nd yeah first of all there's no ad api

00:45:35,760 --> 00:45:38,880
you have to set the day get the day plus

00:45:38,079 --> 00:45:42,400
one

00:45:38,880 --> 00:45:46,960
yeah which is annoying but then also

00:45:42,400 --> 00:45:49,839
you're mutating the original date um

00:45:46,960 --> 00:45:51,359
so it's all kind of annoying like if you

00:45:49,839 --> 00:45:53,359
wanted to have the old date and then the

00:45:51,359 --> 00:45:56,800
new date you'd have to copy the date

00:45:53,359 --> 00:45:57,599
and then do the mutation which is is not

00:45:56,800 --> 00:45:59,760
great

00:45:57,599 --> 00:46:00,800
and then this api is just not ergonomic

00:45:59,760 --> 00:46:03,839
at all

00:46:00,800 --> 00:46:05,760
yeah now with with moment

00:46:03,839 --> 00:46:07,760
if you if you comment this out and go to

00:46:05,760 --> 00:46:11,839
the moment code

00:46:07,760 --> 00:46:12,720
um we fixed one problem and created

00:46:11,839 --> 00:46:15,760
another one

00:46:12,720 --> 00:46:18,160
and this is where uh take that last

00:46:15,760 --> 00:46:22,560
console log to

00:46:18,160 --> 00:46:24,319
take line 31 this is where

00:46:22,560 --> 00:46:26,160
these sorts of things were big learnings

00:46:24,319 --> 00:46:27,359
about like we have to even move forward

00:46:26,160 --> 00:46:30,079
for a moment

00:46:27,359 --> 00:46:31,839
so you see here to add one day we made a

00:46:30,079 --> 00:46:35,040
very nice api for that

00:46:31,839 --> 00:46:38,160
that adds one day but

00:46:35,040 --> 00:46:40,160
we saw all of these trans mutation bugs

00:46:38,160 --> 00:46:42,960
where people wouldn't realize that they

00:46:40,160 --> 00:46:45,040
were mutating first of year

00:46:42,960 --> 00:46:46,400
when they created next day of year they

00:46:45,040 --> 00:46:47,440
didn't realize that they were mutating

00:46:46,400 --> 00:46:50,240
first of year

00:46:47,440 --> 00:46:51,119
and it broke code all over the place ah

00:46:50,240 --> 00:46:53,839
because they basically

00:46:51,119 --> 00:46:55,040
erased the first day yep by creating the

00:46:53,839 --> 00:46:58,319
second day

00:46:55,040 --> 00:47:00,560
yep interesting and so again

00:46:58,319 --> 00:47:01,920
you'd have to do a copy and this is a

00:47:00,560 --> 00:47:04,640
very

00:47:01,920 --> 00:47:05,599
gnarly api like you didn't expect that

00:47:04,640 --> 00:47:08,880
at all

00:47:05,599 --> 00:47:11,839
no no that's quite unfortunate

00:47:08,880 --> 00:47:13,119
yeah which is why everybody should test

00:47:11,839 --> 00:47:16,720
stuff in stage two

00:47:13,119 --> 00:47:17,440
and do this yeah so we knew about this

00:47:16,720 --> 00:47:20,240
problem

00:47:17,440 --> 00:47:21,119
so you know if we if we comment these

00:47:20,240 --> 00:47:24,240
out

00:47:21,119 --> 00:47:27,920
and we go to right here line 33

00:47:24,240 --> 00:47:30,960
34 yep 738

00:47:27,920 --> 00:47:34,640
um now we've got a very nice

00:47:30,960 --> 00:47:38,000
plus days api that leaves that original

00:47:34,640 --> 00:47:41,599
date intact um so i

00:47:38,000 --> 00:47:43,599
i i think this is a big step up in

00:47:41,599 --> 00:47:45,119
lots of dimensions yeah i mean at least

00:47:43,599 --> 00:47:46,000
it gives you what you're expecting too

00:47:45,119 --> 00:47:47,520
as well

00:47:46,000 --> 00:47:50,720
yep yep it gives you what you're

00:47:47,520 --> 00:47:52,880
expecting um

00:47:50,720 --> 00:47:54,559
so i yes yeah and i would say it's uh

00:47:52,880 --> 00:47:55,119
pretty intuitive too as well uh because

00:47:54,559 --> 00:47:58,640
what the

00:47:55,119 --> 00:48:00,720
force was what next day year

00:47:58,640 --> 00:48:02,559
what was the api for that oh next day of

00:48:00,720 --> 00:48:04,160
year

00:48:02,559 --> 00:48:06,160
oh sorry you named the next day of year

00:48:04,160 --> 00:48:08,079
but you just added it okay yeah

00:48:06,160 --> 00:48:09,760
so so moment presented a nice step

00:48:08,079 --> 00:48:11,200
forward from that like if you go up to

00:48:09,760 --> 00:48:14,319
the top what date does

00:48:11,200 --> 00:48:16,720
is yeah is quite unfortunate

00:48:14,319 --> 00:48:17,359
where you have to set the date plus the

00:48:16,720 --> 00:48:21,119
date

00:48:17,359 --> 00:48:24,400
um yeah so it fixes both problems

00:48:21,119 --> 00:48:27,599
excellent and then uh

00:48:24,400 --> 00:48:30,480
this last demo case if we want to do it

00:48:27,599 --> 00:48:31,760
so this is something that i can't even

00:48:30,480 --> 00:48:35,119
give you a demo of

00:48:31,760 --> 00:48:36,880
in the old api because it did not exist

00:48:35,119 --> 00:48:38,880
if you're asking yourself so a common

00:48:36,880 --> 00:48:41,520
question that i ask myself

00:48:38,880 --> 00:48:43,599
i have a close co-worker in shanghai i

00:48:41,520 --> 00:48:46,079
talk to him a couple times a week

00:48:43,599 --> 00:48:47,119
so a common question that i ask myself

00:48:46,079 --> 00:48:51,280
all the time

00:48:47,119 --> 00:48:54,480
is what time is it in shanghai um

00:48:51,280 --> 00:48:58,800
so so shout out to nick in shanghai

00:48:54,480 --> 00:49:02,000
um on on our partner team

00:48:58,800 --> 00:49:05,440
um we now previously

00:49:02,000 --> 00:49:07,440
if you wanted to get a time um

00:49:05,440 --> 00:49:08,880
for any time zone other than utc or

00:49:07,440 --> 00:49:10,559
where you are in local time

00:49:08,880 --> 00:49:12,720
you can get it out of javascript it's

00:49:10,559 --> 00:49:14,319
not there uh there are some weird hacker

00:49:12,720 --> 00:49:16,480
runs over the intel libraries you can do

00:49:14,319 --> 00:49:19,760
but for the most part it's not there

00:49:16,480 --> 00:49:23,200
this is awesome uh

00:49:19,760 --> 00:49:25,200
there is the time uh right now for you

00:49:23,200 --> 00:49:26,319
and there is the time in shanghai right

00:49:25,200 --> 00:49:27,920
now in case you're wondering whether

00:49:26,319 --> 00:49:30,480
it's a convenient time to call your

00:49:27,920 --> 00:49:31,599
your co-workers over there excellent i

00:49:30,480 --> 00:49:32,880
mean i would totally

00:49:31,599 --> 00:49:35,200
this is like one of those things i just

00:49:32,880 --> 00:49:36,960
have like in a

00:49:35,200 --> 00:49:39,200
executable just waiting for me to just

00:49:36,960 --> 00:49:40,160
type in australia and then tell me what

00:49:39,200 --> 00:49:42,960
australia's time

00:49:40,160 --> 00:49:45,200
time is right now yeah i mean to be fair

00:49:42,960 --> 00:49:48,079
you can google it but

00:49:45,200 --> 00:49:49,760
i already have the terminal open but

00:49:48,079 --> 00:49:52,800
yeah i've been known to do it

00:49:49,760 --> 00:49:54,240
yeah well that's that's the thing that i

00:49:52,800 --> 00:49:56,559
the reason why i did the week number

00:49:54,240 --> 00:49:58,319
thing is because i used to always google

00:49:56,559 --> 00:50:00,000
what is the current week number

00:49:58,319 --> 00:50:02,000
otherwise i'd go and count

00:50:00,000 --> 00:50:03,280
calendar weeks and be like uh it's the

00:50:02,000 --> 00:50:04,559
third week but then when you get up to

00:50:03,280 --> 00:50:06,720
like week 41

00:50:04,559 --> 00:50:08,559
then you're like do i subtract from the

00:50:06,720 --> 00:50:11,920
last week of the month and then

00:50:08,559 --> 00:50:12,400
i can google it actually can i let's see

00:50:11,920 --> 00:50:15,440
uh

00:50:12,400 --> 00:50:17,599
the current week number

00:50:15,440 --> 00:50:18,960
and it was so that one thing yeah so

00:50:17,599 --> 00:50:20,319
we're in week 34

00:50:18,960 --> 00:50:22,800
uh which is interesting because i just

00:50:20,319 --> 00:50:25,440
did something that i put week 33 on

00:50:22,800 --> 00:50:26,000
uh but anyway that's besides the fact it

00:50:25,440 --> 00:50:28,319
has to

00:50:26,000 --> 00:50:30,640
do with whether you're following the iso

00:50:28,319 --> 00:50:32,720
week or a local week

00:50:30,640 --> 00:50:34,800
that that that particular problem is

00:50:32,720 --> 00:50:35,599
quite complex and it has locality

00:50:34,800 --> 00:50:38,839
concerns

00:50:35,599 --> 00:50:40,800
yes i'm a total nerd we won't even go

00:50:38,839 --> 00:50:42,640
there

00:50:40,800 --> 00:50:44,400
yeah and like my use case i could

00:50:42,640 --> 00:50:46,079
further explain that because i totally

00:50:44,400 --> 00:50:48,480
understand that because

00:50:46,079 --> 00:50:50,480
when we create the week number issue uh

00:50:48,480 --> 00:50:52,079
every week so basically my team we do

00:50:50,480 --> 00:50:53,599
a instead of doing a stand up a weekly

00:50:52,079 --> 00:50:56,400
stand up or daily stand up

00:50:53,599 --> 00:50:58,240
we do a weekly issue and in that issue

00:50:56,400 --> 00:51:00,160
you provide updates and comments

00:50:58,240 --> 00:51:01,920
asynchronous so because we know that

00:51:00,160 --> 00:51:03,520
issue just needs to be open every week

00:51:01,920 --> 00:51:06,240
we'll attach a week number we'll close

00:51:03,520 --> 00:51:08,480
it when on friday evenings

00:51:06,240 --> 00:51:09,760
like west coast time west coast u.s time

00:51:08,480 --> 00:51:10,640
uh because that's the last person i'm

00:51:09,760 --> 00:51:13,599
the last person

00:51:10,640 --> 00:51:14,559
in the team time zone team uh and then

00:51:13,599 --> 00:51:17,520
on sunday

00:51:14,559 --> 00:51:18,400
at 10 a.m in australia time i would open

00:51:17,520 --> 00:51:21,599
up the

00:51:18,400 --> 00:51:24,880
the new issue like on a cron job

00:51:21,599 --> 00:51:26,720
because that's when technically it's

00:51:24,880 --> 00:51:28,240
the week we're all thinking it should be

00:51:26,720 --> 00:51:30,559
and not the previous week

00:51:28,240 --> 00:51:32,319
because then it's finally new australia

00:51:30,559 --> 00:51:34,079
but also in utc

00:51:32,319 --> 00:51:35,520
it also is a new technically the new

00:51:34,079 --> 00:51:37,760
week then um

00:51:35,520 --> 00:51:39,760
but yeah lots of confusion it actually i

00:51:37,760 --> 00:51:40,480
wrote so many bugs in this and it was so

00:51:39,760 --> 00:51:42,160
simple

00:51:40,480 --> 00:51:43,760
uh this one little thing and i had to

00:51:42,160 --> 00:51:44,400
fix it so many times so i've learned a

00:51:43,760 --> 00:51:46,640
lot

00:51:44,400 --> 00:51:47,520
in this process and i will continue to

00:51:46,640 --> 00:51:50,559
learn

00:51:47,520 --> 00:51:52,640
yes well and and you know with that

00:51:50,559 --> 00:51:55,040
specific problem of weeks

00:51:52,640 --> 00:51:56,800
the iso specification i keep saying iso

00:51:55,040 --> 00:51:58,880
so if people haven't you know like sort

00:51:56,800 --> 00:52:00,960
of internalized it iso 8601

00:51:58,880 --> 00:52:01,920
is a specification for date formats and

00:52:00,960 --> 00:52:05,599
things like that that

00:52:01,920 --> 00:52:07,599
that most modern computing uses um

00:52:05,599 --> 00:52:08,880
but the iso specification will give you

00:52:07,599 --> 00:52:11,760
iso weeks

00:52:08,880 --> 00:52:11,760
but also like

00:52:12,079 --> 00:52:15,119
some some places consider monday the

00:52:14,000 --> 00:52:16,400
start of the week some places consider

00:52:15,119 --> 00:52:18,319
sunday the start of the week

00:52:16,400 --> 00:52:19,680
uh if you're in israel then you're

00:52:18,319 --> 00:52:23,599
you're having saturday

00:52:19,680 --> 00:52:26,960
as the start of the week um so

00:52:23,599 --> 00:52:29,359
it's yeah yeah

00:52:26,960 --> 00:52:31,440
no it's hard i once actually was on a

00:52:29,359 --> 00:52:32,000
plane heading to brazil for a conference

00:52:31,440 --> 00:52:35,040
a python

00:52:32,000 --> 00:52:35,839
conference and it was during daylight

00:52:35,040 --> 00:52:37,760
savings time

00:52:35,839 --> 00:52:39,280
and while i was in the air the president

00:52:37,760 --> 00:52:40,640
of brazil decided that they would go

00:52:39,280 --> 00:52:42,640
ahead and

00:52:40,640 --> 00:52:45,280
daylight saving time so when i got i

00:52:42,640 --> 00:52:47,280
landed it was completely the wrong hour

00:52:45,280 --> 00:52:48,960
and everything was very confusing yeah

00:52:47,280 --> 00:52:51,760
and even my phone could not catch up

00:52:48,960 --> 00:52:53,040
because it was also a whole nother sim

00:52:51,760 --> 00:52:56,480
card and everything

00:52:53,040 --> 00:52:58,160
if if the president of brazil decided

00:52:56,480 --> 00:52:59,760
last minute to change his daylight

00:52:58,160 --> 00:53:03,200
saving time

00:52:59,760 --> 00:53:06,319
um just as a warning

00:53:03,200 --> 00:53:07,920
you can't do that dear

00:53:06,319 --> 00:53:10,400
heads of government who happen to be

00:53:07,920 --> 00:53:12,640
listening to the stream because

00:53:10,400 --> 00:53:14,000
that underlying time zone database it's

00:53:12,640 --> 00:53:17,440
it's called the iana timezone

00:53:14,000 --> 00:53:18,559
database and like every operating system

00:53:17,440 --> 00:53:21,440
your phone

00:53:18,559 --> 00:53:23,040
your windows machine your mac is picking

00:53:21,440 --> 00:53:26,960
up that underlying data set

00:53:23,040 --> 00:53:31,200
and so like it can't we can't ship that

00:53:26,960 --> 00:53:33,520
fast yes y2k all over again

00:53:31,200 --> 00:53:35,119
at least we had a head start with y2k

00:53:33,520 --> 00:53:36,000
well it actually it happens all the time

00:53:35,119 --> 00:53:37,680
weirdly that

00:53:36,000 --> 00:53:39,119
that governments give like one week

00:53:37,680 --> 00:53:40,720
notice that they're gonna change the way

00:53:39,119 --> 00:53:42,480
that their time zones behave

00:53:40,720 --> 00:53:43,760
and then they do just end up with broken

00:53:42,480 --> 00:53:45,520
computer clocks

00:53:43,760 --> 00:53:46,800
i i i have noticed that world

00:53:45,520 --> 00:53:47,599
governments in the last few years have

00:53:46,800 --> 00:53:50,240
sort of picked up

00:53:47,599 --> 00:53:52,000
on the fact that this is problematic and

00:53:50,240 --> 00:53:54,720
a lot of them have learned to

00:53:52,000 --> 00:53:56,240
to like the time zone database itself is

00:53:54,720 --> 00:53:57,760
like an open source project

00:53:56,240 --> 00:53:59,680
you can you can email the timezone

00:53:57,760 --> 00:54:01,599
database and say i need to change to how

00:53:59,680 --> 00:54:03,839
the time works

00:54:01,599 --> 00:54:05,680
uh man i would hate to be a maintainer

00:54:03,839 --> 00:54:08,880
there everywhere

00:54:05,680 --> 00:54:11,839
oh really well

00:54:08,880 --> 00:54:11,839
bless him

00:54:12,800 --> 00:54:17,359
that is awesome i was not expecting that

00:54:14,720 --> 00:54:18,800
but also of course you have so much

00:54:17,359 --> 00:54:20,960
unique information about the time zone

00:54:18,800 --> 00:54:21,839
database uh which we should definitely

00:54:20,960 --> 00:54:23,920
have them on

00:54:21,839 --> 00:54:24,880
because i'm intrigued of what that i

00:54:23,920 --> 00:54:26,960
mean it's

00:54:24,880 --> 00:54:28,559
it's not quite the same thing as

00:54:26,960 --> 00:54:29,440
maintainer in the way we talk about it

00:54:28,559 --> 00:54:30,640
in open source

00:54:29,440 --> 00:54:32,640
but matt is a contributor to the

00:54:30,640 --> 00:54:34,480
timezone database excellent

00:54:32,640 --> 00:54:35,760
is that the same people who manage uh

00:54:34,480 --> 00:54:37,040
finding out where santa claus is

00:54:35,760 --> 00:54:40,799
throughout the

00:54:37,040 --> 00:54:44,000
christmas eve no no that's norad

00:54:40,799 --> 00:54:48,160
that's somewhat different okay

00:54:44,000 --> 00:54:48,160
excellent confusion all around

00:54:49,040 --> 00:54:52,960
yeah so excellent um yeah i appreciate

00:54:51,760 --> 00:54:55,760
you walking through this i'm

00:54:52,960 --> 00:54:57,440
just out of curiosity um can we just

00:54:55,760 --> 00:54:59,119
check out real quick how i'd find the

00:54:57,440 --> 00:55:00,960
week number if that would be a cool

00:54:59,119 --> 00:55:03,119
thing we could uh

00:55:00,960 --> 00:55:04,480
explore yeah okay like i said the guys

00:55:03,119 --> 00:55:07,520
were changing the apis

00:55:04,480 --> 00:55:08,960
so i gotta go in the docks and see if

00:55:07,520 --> 00:55:11,730
they have it in here

00:55:08,960 --> 00:55:13,599
weak number

00:55:11,730 --> 00:55:18,880
[Music]

00:55:13,599 --> 00:55:22,160
swear yearly currents

00:55:18,880 --> 00:55:23,520
and weekday of the month weekday of

00:55:22,160 --> 00:55:25,680
yearly

00:55:23,520 --> 00:55:27,839
day of week see i don't even have my own

00:55:25,680 --> 00:55:30,000
things

00:55:27,839 --> 00:55:32,079
there should be nice no worries if it uh

00:55:30,000 --> 00:55:36,400
if it moved around i could also

00:55:32,079 --> 00:55:38,079
definitely give it a look um

00:55:36,400 --> 00:55:39,440
if i were to look for it would it be in

00:55:38,079 --> 00:55:44,160
the um

00:55:39,440 --> 00:55:44,160
the cookbook probably

00:55:44,880 --> 00:55:49,040
okay i don't think we have it in right

00:55:46,559 --> 00:55:52,400
now i should raise an issue on that

00:55:49,040 --> 00:55:53,920
um i i know we had an open issue at one

00:55:52,400 --> 00:55:54,640
point on it but i don't think we have it

00:55:53,920 --> 00:55:56,240
in right now

00:55:54,640 --> 00:55:57,839
i i actually you have given me an issue

00:55:56,240 --> 00:55:59,440
to raise okay

00:55:57,839 --> 00:56:03,839
if you if you want to mention me on that

00:55:59,440 --> 00:56:03,839
i'd be happy to uh explore it

00:56:04,480 --> 00:56:08,160
but yeah excellent yeah no worries if

00:56:06,559 --> 00:56:09,440
it's not there uh it's something that's

00:56:08,160 --> 00:56:10,160
on top of mine for me just because i

00:56:09,440 --> 00:56:12,400
have this

00:56:10,160 --> 00:56:14,000
trivial example uh and i'd love to have

00:56:12,400 --> 00:56:15,119
a nice little note script to run every

00:56:14,000 --> 00:56:17,520
time i want to uh

00:56:15,119 --> 00:56:18,960
find out the week number in my current

00:56:17,520 --> 00:56:23,280
time zone

00:56:18,960 --> 00:56:24,640
yeah let me um i will raise that um

00:56:23,280 --> 00:56:26,720
they might have decided that they wanted

00:56:24,640 --> 00:56:29,599
to pull it over to 402.

00:56:26,720 --> 00:56:30,160
um we'll figure it out we'll figure it

00:56:29,599 --> 00:56:32,000
out

00:56:30,160 --> 00:56:34,319
because the concept definitely like the

00:56:32,000 --> 00:56:36,880
iso week exists

00:56:34,319 --> 00:56:40,559
so you know it may be that it's a string

00:56:36,880 --> 00:56:44,640
formatter where you output the i so weak

00:56:40,559 --> 00:56:47,119
i will find this for you um

00:56:44,640 --> 00:56:48,880
we will make this happen excellent well

00:56:47,119 --> 00:56:51,920
i look forward to it

00:56:48,880 --> 00:56:55,200
and um yeah so curious actually

00:56:51,920 --> 00:56:58,079
i just realized why i've just noticed

00:56:55,200 --> 00:57:00,720
that you're

00:56:58,079 --> 00:57:02,240
the zoom is like broken a little bit and

00:57:00,720 --> 00:57:03,280
i i realize it's because the chat was

00:57:02,240 --> 00:57:05,280
open

00:57:03,280 --> 00:57:07,040
this entire time but anyways sorry just

00:57:05,280 --> 00:57:08,240
super distracted i'm trying to manage

00:57:07,040 --> 00:57:10,400
the stream and

00:57:08,240 --> 00:57:12,000
have a conversation at the same time but

00:57:10,400 --> 00:57:14,000
uh we're actually pretty close to time

00:57:12,000 --> 00:57:15,520
too as well i'm curious if anybody in

00:57:14,000 --> 00:57:17,200
the chat if you have any questions about

00:57:15,520 --> 00:57:19,040
this feel free to drop them in

00:57:17,200 --> 00:57:20,400
uh i appreciate python coming through

00:57:19,040 --> 00:57:23,200
and chatting about this

00:57:20,400 --> 00:57:24,079
uh with us and a few other people too as

00:57:23,200 --> 00:57:27,839
well dropped in

00:57:24,079 --> 00:57:29,440
kind of some aha wow moments as well

00:57:27,839 --> 00:57:31,359
i also appreciate the follows too

00:57:29,440 --> 00:57:33,040
everybody uh we're planning on doing

00:57:31,359 --> 00:57:35,839
this pretty much every week

00:57:33,040 --> 00:57:37,520
on fridays uh starting next month so

00:57:35,839 --> 00:57:39,520
we've done a couple pilots and trying to

00:57:37,520 --> 00:57:42,079
figure out the system and how to like

00:57:39,520 --> 00:57:43,359
get people online and uh talk on twitch

00:57:42,079 --> 00:57:46,319
because switch was new for me

00:57:43,359 --> 00:57:48,240
to be quite honest and um but maggie

00:57:46,319 --> 00:57:51,440
this was a great conversation

00:57:48,240 --> 00:57:54,160
all right well thank you excellent

00:57:51,440 --> 00:57:55,920
i always have fun with dates yeah it's

00:57:54,160 --> 00:57:57,520
it's a good space

00:57:55,920 --> 00:57:59,520
yeah it's i mean it's a it's a cool

00:57:57,520 --> 00:58:01,200
space to nerd out in i i think um

00:57:59,520 --> 00:58:03,520
my first job in san francisco as an

00:58:01,200 --> 00:58:05,359
engineer uh it was a scheduling we had a

00:58:03,520 --> 00:58:07,520
it was a boot camp but i worked on the

00:58:05,359 --> 00:58:08,799
actual um platform the

00:58:07,520 --> 00:58:10,400
online platform for the bootcamp

00:58:08,799 --> 00:58:11,839
students because it was a remote base

00:58:10,400 --> 00:58:15,040
and we had to do scheduling

00:58:11,839 --> 00:58:17,119
for mentors and students together and

00:58:15,040 --> 00:58:19,119
that problem was like enough for me to

00:58:17,119 --> 00:58:20,400
be like ah man this is a

00:58:19,119 --> 00:58:21,920
challenging problem because i think at

00:58:20,400 --> 00:58:23,359
the same time we have this weird time

00:58:21,920 --> 00:58:26,559
zone

00:58:23,359 --> 00:58:27,920
we call them um dis junctures i don't

00:58:26,559 --> 00:58:29,599
know if that's a proper term but in our

00:58:27,920 --> 00:58:31,040
code base we call them just junctures

00:58:29,599 --> 00:58:32,720
and it's basically the difference

00:58:31,040 --> 00:58:33,839
between daylight savings time between

00:58:32,720 --> 00:58:35,040
different countries

00:58:33,839 --> 00:58:36,960
and we have to create different

00:58:35,040 --> 00:58:39,119
structures from

00:58:36,960 --> 00:58:40,640
all different time zones uh because we

00:58:39,119 --> 00:58:42,160
very regularly like we actually

00:58:40,640 --> 00:58:44,240
israel was one of the places we had a

00:58:42,160 --> 00:58:46,720
lot of mentors in in students

00:58:44,240 --> 00:58:48,079
but if you had a mentor in london who

00:58:46,720 --> 00:58:49,760
had a student in israel

00:58:48,079 --> 00:58:51,760
then he had to create this juncture to

00:58:49,760 --> 00:58:53,839
make sure if you booked the time

00:58:51,760 --> 00:58:55,520
to meet with each other during this

00:58:53,839 --> 00:58:57,200
destructor time that we would could

00:58:55,520 --> 00:58:59,359
adjust it

00:58:57,200 --> 00:59:00,480
by the time everything happened you're

00:58:59,359 --> 00:59:03,040
talking about how

00:59:00,480 --> 00:59:04,240
europe flips dst three weeks uh

00:59:03,040 --> 00:59:07,440
differently than we do

00:59:04,240 --> 00:59:09,760
yes yeah uh i don't know if there's

00:59:07,440 --> 00:59:11,119
official like terms for the difference

00:59:09,760 --> 00:59:13,119
between those

00:59:11,119 --> 00:59:14,960
um the differences are reflected in the

00:59:13,119 --> 00:59:19,839
in a timezone data and you can get it

00:59:14,960 --> 00:59:19,839
out of the time zone apis in this api

00:59:21,920 --> 00:59:27,200
yeah but that's yeah you have a scary

00:59:23,920 --> 00:59:27,200
amount of knowledge on this subject

00:59:27,359 --> 00:59:30,640
my husband is now looking he's next to

00:59:29,119 --> 00:59:33,780
me and i see him looking for your weak

00:59:30,640 --> 00:59:35,520
numbers like where did it go

00:59:33,780 --> 00:59:38,799
[Laughter]

00:59:35,520 --> 00:59:40,000
amazing excellent well um for the sake

00:59:38,799 --> 00:59:41,520
of the listener we're going to go ahead

00:59:40,000 --> 00:59:42,720
in the stream uh appreciate everybody

00:59:41,520 --> 00:59:43,760
hitting the follow button

00:59:42,720 --> 00:59:45,599
definitely check us out for other

00:59:43,760 --> 00:59:46,079
streams we've been doing some um

00:59:45,599 --> 00:59:48,720
learning

00:59:46,079 --> 00:59:49,839
learning uh with cynthia where cynthia's

00:59:48,720 --> 00:59:51,040
in our training team and talking about

00:59:49,839 --> 00:59:53,280
how to use github

00:59:51,040 --> 00:59:54,799
and use some some basic uh features but

00:59:53,280 --> 00:59:56,559
also some advanced features

00:59:54,799 --> 00:59:58,559
and then we've been doing some over our

00:59:56,559 --> 01:00:01,280
enterprise channel we've been doing

00:59:58,559 --> 01:00:02,400
uh well enterprise level explanations

01:00:01,280 --> 01:00:04,640
with github enterprise

01:00:02,400 --> 01:00:06,559
enterprise cloud so uh if you're into

01:00:04,640 --> 01:00:07,119
that definitely check out um that twitch

01:00:06,559 --> 01:00:10,400
stream

01:00:07,119 --> 01:00:11,119
and i'm bw on twitter and on twitch uh

01:00:10,400 --> 01:00:13,119
maggie

01:00:11,119 --> 01:00:14,319
you're maggie pint is that's correct

01:00:13,119 --> 01:00:16,720
pretty much everywhere

01:00:14,319 --> 01:00:18,640
yep yeah so feel free to give us a

01:00:16,720 --> 01:00:20,640
follow and if you have further questions

01:00:18,640 --> 01:00:24,079
you know the repos to go into now

01:00:20,640 --> 01:00:27,760
so good luck all right y'all

01:00:24,079 --> 01:00:27,760

YouTube URL: https://www.youtube.com/watch?v=DyccvgiCo1c


