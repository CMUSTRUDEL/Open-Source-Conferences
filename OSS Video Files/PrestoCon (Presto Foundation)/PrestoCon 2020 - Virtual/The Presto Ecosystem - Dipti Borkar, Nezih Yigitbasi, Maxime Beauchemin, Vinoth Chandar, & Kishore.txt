Title: The Presto Ecosystem - Dipti Borkar, Nezih Yigitbasi, Maxime Beauchemin, Vinoth Chandar, & Kishore
Publication date: 2020-09-30
Playlist: PrestoCon 2020 - Virtual
Description: 
	Panel Discussion: The Presto Ecosystem - Moderated by Dipti Borkar, Ahana; Nezih Yigitbasi, Facebook; Maxime Beauchemin, Preset; Vinoth Chandar, Apache Hudi & Kishore Gopalakrishna, LinkedIn

Speakers: Kishore Gopalakrishna, Nezih Yigitbasi, Dipti Borkar, Maxime Beauchemin, Vinoth Chandar

In this panel, leaders from the open source data community will talk about the disaggregated analytics stack with Apache Superset, Apache Hudi, Apache Pinot & Presto, the problems that each of these important projects solve and how they are better together.
Captions: 
	00:00:00,320 --> 00:00:04,720
um hi everyone welcome to a very very

00:00:02,720 --> 00:00:06,319
special session at prestacon

00:00:04,720 --> 00:00:08,960
uh i'm dipty burkar and i'll be

00:00:06,319 --> 00:00:11,920
moderating uh this virtual round table

00:00:08,960 --> 00:00:12,880
the presto ecosystem and we have a who's

00:00:11,920 --> 00:00:14,880
who cast

00:00:12,880 --> 00:00:16,080
lined up for you today uh we'll be

00:00:14,880 --> 00:00:18,720
hearing from nezi

00:00:16,080 --> 00:00:19,760
from facebook uh tsc chair of the

00:00:18,720 --> 00:00:23,519
president foundation

00:00:19,760 --> 00:00:25,279
max founder and ceo preset uh vinod vice

00:00:23,519 --> 00:00:28,160
president at apache hoodie

00:00:25,279 --> 00:00:29,599
uh and kishore ppmc member at apache

00:00:28,160 --> 00:00:32,399
pino welcome everyone

00:00:29,599 --> 00:00:33,120
great to have you and thanks for uh uh

00:00:32,399 --> 00:00:36,079
joining

00:00:33,120 --> 00:00:38,640
yeah thank you thank you now these folks

00:00:36,079 --> 00:00:41,840
have been deep inside the matrix uh the

00:00:38,640 --> 00:00:44,160
the disaggregated stack matrix

00:00:41,840 --> 00:00:45,680
as i call it and i'm very excited to

00:00:44,160 --> 00:00:46,559
learn about you know their take on

00:00:45,680 --> 00:00:49,039
what's happening

00:00:46,559 --> 00:00:50,800
in this data analytics space uh of

00:00:49,039 --> 00:00:51,600
course and how everything fits with with

00:00:50,800 --> 00:00:54,399
presto

00:00:51,600 --> 00:00:56,399
uh so just a quick a short opening uh

00:00:54,399 --> 00:00:59,120
opening statement a few comments

00:00:56,399 --> 00:00:59,680
uh on on the stack itself i've been in

00:00:59,120 --> 00:01:02,719
the

00:00:59,680 --> 00:01:05,600
uh the data space uh since 2005 uh

00:01:02,719 --> 00:01:07,360
back when i was in uh db2 days uh as

00:01:05,600 --> 00:01:10,000
eric was talking about earlier

00:01:07,360 --> 00:01:10,479
um dating myself now but in these early

00:01:10,000 --> 00:01:13,119
days

00:01:10,479 --> 00:01:14,960
everything was about a tightly coupled

00:01:13,119 --> 00:01:15,520
data warehouse everything was a single

00:01:14,960 --> 00:01:18,240
engine

00:01:15,520 --> 00:01:19,119
compute storage the catalog transaction

00:01:18,240 --> 00:01:22,000
manager

00:01:19,119 --> 00:01:22,400
uh pretty much all integrated together

00:01:22,000 --> 00:01:24,479
but

00:01:22,400 --> 00:01:26,159
this post hadoop world has changed

00:01:24,479 --> 00:01:28,720
things quite a bit

00:01:26,159 --> 00:01:30,000
uh it's the disaggregated stack started

00:01:28,720 --> 00:01:33,040
to emerge

00:01:30,000 --> 00:01:36,799
the idea of ingesting all your data

00:01:33,040 --> 00:01:38,640
into a single database or data warehouse

00:01:36,799 --> 00:01:40,640
seems to have stopped working for

00:01:38,640 --> 00:01:43,920
especially the large internet companies

00:01:40,640 --> 00:01:47,280
and a combination of more and more data

00:01:43,920 --> 00:01:50,799
open formats work arcade etc um

00:01:47,280 --> 00:01:53,119
you know change things right um presto

00:01:50,799 --> 00:01:54,079
obviously created at facebook sits in

00:01:53,119 --> 00:01:57,360
the middle of this

00:01:54,079 --> 00:01:59,360
this disaggregated stack um and with us

00:01:57,360 --> 00:02:00,399
today we have creators of these amazing

00:01:59,360 --> 00:02:02,719
projects

00:02:00,399 --> 00:02:04,240
apache pino is a real-time analytics

00:02:02,719 --> 00:02:06,159
database uh came out of

00:02:04,240 --> 00:02:08,000
linkedin with collaboration from uber

00:02:06,159 --> 00:02:10,479
and others apache hoodie

00:02:08,000 --> 00:02:11,599
is a data management framework used to

00:02:10,479 --> 00:02:14,000
bring acid

00:02:11,599 --> 00:02:15,280
like properties to data lakes uh that

00:02:14,000 --> 00:02:17,680
came out of uber

00:02:15,280 --> 00:02:19,280
and uh last but not the least apache

00:02:17,680 --> 00:02:19,920
super said the exploration data

00:02:19,280 --> 00:02:22,560
exploration

00:02:19,920 --> 00:02:24,480
platform out of airbnb so nazi the north

00:02:22,560 --> 00:02:26,959
kishore max welcome again

00:02:24,480 --> 00:02:28,319
uh each of you have been a part of uh

00:02:26,959 --> 00:02:31,519
you know data teams at

00:02:28,319 --> 00:02:33,680
the world's most innovative companies

00:02:31,519 --> 00:02:35,040
and the data platform at these companies

00:02:33,680 --> 00:02:37,519
have probably the most

00:02:35,040 --> 00:02:38,400
modern analytic stacks of any share a

00:02:37,519 --> 00:02:40,400
little bit about

00:02:38,400 --> 00:02:42,720
yourselves and uh why you ended up

00:02:40,400 --> 00:02:44,560
creating these uh amazing projects

00:02:42,720 --> 00:02:46,319
uh maybe you can uh nezzy maybe you can

00:02:44,560 --> 00:02:48,560
get started yeah sure

00:02:46,319 --> 00:02:50,080
a quick intro about myself so hey

00:02:48,560 --> 00:02:51,920
everyone this is nezi

00:02:50,080 --> 00:02:53,760
i'm the chair of the presto foundation

00:02:51,920 --> 00:02:55,200
technical student comedy i'm also an

00:02:53,760 --> 00:02:56,319
engineering manager in the presto team

00:02:55,200 --> 00:02:59,280
at facebook

00:02:56,319 --> 00:03:00,959
so my background is distributed systems

00:02:59,280 --> 00:03:02,159
i have a phd in disability systems i

00:03:00,959 --> 00:03:04,239
enjoy a lot of dealing with

00:03:02,159 --> 00:03:05,519
challenges around building large-scale

00:03:04,239 --> 00:03:08,800
systems such as

00:03:05,519 --> 00:03:11,440
tolerance scalable etc so i met presto

00:03:08,800 --> 00:03:12,879
in 2014 when i joined netflix and i've

00:03:11,440 --> 00:03:15,200
been involved with the with the project

00:03:12,879 --> 00:03:16,080
since 2014 is like for the past six

00:03:15,200 --> 00:03:18,800
years

00:03:16,080 --> 00:03:19,360
and at the beginning of 2017 i joined uh

00:03:18,800 --> 00:03:20,959
facebook

00:03:19,360 --> 00:03:22,239
to be closer to the team who's really

00:03:20,959 --> 00:03:24,400
pushing the core technology and i've

00:03:22,239 --> 00:03:27,280
been with the same team since then

00:03:24,400 --> 00:03:28,799
and as you know like in september 2019

00:03:27,280 --> 00:03:30,799
one year ago we launched the presta

00:03:28,799 --> 00:03:32,560
foundation to grow our community and

00:03:30,799 --> 00:03:34,159
really make precious and the test of the

00:03:32,560 --> 00:03:35,840
time and i'm just really i'm extremely

00:03:34,159 --> 00:03:37,120
happy and excited to see where press

00:03:35,840 --> 00:03:39,599
does today

00:03:37,120 --> 00:03:41,360
so i can briefly also talk about the

00:03:39,599 --> 00:03:44,480
data infrastructure at facebook

00:03:41,360 --> 00:03:46,080
so it's a massive infrastructure unique

00:03:44,480 --> 00:03:48,400
and massive infrastructure

00:03:46,080 --> 00:03:50,080
the scale is amazing there is plenty of

00:03:48,400 --> 00:03:50,959
problems to solve as a result of the

00:03:50,080 --> 00:03:53,680
scale

00:03:50,959 --> 00:03:54,480
and presto was created back in 2012 to

00:03:53,680 --> 00:03:56,959
really

00:03:54,480 --> 00:03:58,000
address some of the interactive use case

00:03:56,959 --> 00:04:00,959
problems

00:03:58,000 --> 00:04:02,799
and like from then on it started

00:04:00,959 --> 00:04:04,159
evolving to other use cases like very

00:04:02,799 --> 00:04:07,519
low latency use cases

00:04:04,159 --> 00:04:08,720
batch use cases etc and it's also like

00:04:07,519 --> 00:04:10,560
with these use cases

00:04:08,720 --> 00:04:12,959
other problems evolve like with for

00:04:10,560 --> 00:04:15,599
example batch use cases we need to solve

00:04:12,959 --> 00:04:17,120
problems around efficiency scalability

00:04:15,599 --> 00:04:18,799
fault tolerance and reliability et

00:04:17,120 --> 00:04:20,880
cetera et cetera so

00:04:18,799 --> 00:04:23,040
in particular about the stack itself

00:04:20,880 --> 00:04:24,400
like in our primary presto stack we have

00:04:23,040 --> 00:04:27,280
a distributed file system

00:04:24,400 --> 00:04:28,080
called warm storage and it's where the

00:04:27,280 --> 00:04:30,160
data is stored

00:04:28,080 --> 00:04:31,759
and we have many many presto clusters

00:04:30,160 --> 00:04:32,800
basically talking to this distributed

00:04:31,759 --> 00:04:34,800
file system

00:04:32,800 --> 00:04:36,240
and we have a com hive compliant

00:04:34,800 --> 00:04:37,759
metastore scalable metastar

00:04:36,240 --> 00:04:41,120
implementation with the high

00:04:37,759 --> 00:04:42,560
open source apis and we have plenty of

00:04:41,120 --> 00:04:44,400
data centers and we have many many

00:04:42,560 --> 00:04:46,160
clusters in each data center and in

00:04:44,400 --> 00:04:47,120
front of all these clusters we have a

00:04:46,160 --> 00:04:49,520
gateway

00:04:47,120 --> 00:04:51,520
that does query routing and simple load

00:04:49,520 --> 00:04:53,360
balancing across these clusters

00:04:51,520 --> 00:04:54,880
and for supporting the batch workloads

00:04:53,360 --> 00:04:56,160
like we have other systems on top we

00:04:54,880 --> 00:04:58,880
have

00:04:56,160 --> 00:05:00,000
a patch job scheduler on top we have

00:04:58,880 --> 00:05:01,840
other tools to

00:05:00,000 --> 00:05:04,479
monitor and you know make sure that

00:05:01,840 --> 00:05:05,280
these jobs succeed and land on time etc

00:05:04,479 --> 00:05:06,880
etc

00:05:05,280 --> 00:05:09,280
and we also have in our infrastructure

00:05:06,880 --> 00:05:11,440
other data warehouse services like

00:05:09,280 --> 00:05:12,960
privacy security lineage resource

00:05:11,440 --> 00:05:14,479
management et cetera et cetera

00:05:12,960 --> 00:05:17,520
it's a massive and complex

00:05:14,479 --> 00:05:17,520
infrastructure in short

00:05:21,600 --> 00:05:25,840
you are muted i guess

00:05:26,160 --> 00:05:29,759
max you want to go next uh share a

00:05:27,759 --> 00:05:30,080
little bit about super set why you uh

00:05:29,759 --> 00:05:31,440
what

00:05:30,080 --> 00:05:34,000
what problems you were trying to solve

00:05:31,440 --> 00:05:36,080
with it sure yeah so a little bit of an

00:05:34,000 --> 00:05:36,479
intro too and then some context settings

00:05:36,080 --> 00:05:38,880
so

00:05:36,479 --> 00:05:40,639
uh so yeah i started apache superset uh

00:05:38,880 --> 00:05:42,560
while i was at airbn airbnb

00:05:40,639 --> 00:05:43,759
so that's a data visualization platform

00:05:42,560 --> 00:05:45,199
very much of a

00:05:43,759 --> 00:05:46,479
challenger to like the business

00:05:45,199 --> 00:05:47,840
intelligence tools that people are

00:05:46,479 --> 00:05:49,919
familiar with

00:05:47,840 --> 00:05:52,160
i also started apache airflow when i

00:05:49,919 --> 00:05:54,639
joined the airbnb so that's more in the

00:05:52,160 --> 00:05:57,919
data batch orchestration

00:05:54,639 --> 00:05:59,680
space um i started also a company called

00:05:57,919 --> 00:06:01,840
preset last year to really kind of build

00:05:59,680 --> 00:06:04,800
in and around the apache superset and

00:06:01,840 --> 00:06:05,600
kind of offer a really good kind of sas

00:06:04,800 --> 00:06:07,840
wrapper

00:06:05,600 --> 00:06:10,080
around it and you know services and and

00:06:07,840 --> 00:06:13,280
support around apache superset

00:06:10,080 --> 00:06:16,960
um i have been using presto since before

00:06:13,280 --> 00:06:18,080
it officially existed so i remember 2012

00:06:16,960 --> 00:06:20,960
facebook we had something called

00:06:18,080 --> 00:06:23,199
peregrine that was i believe either the

00:06:20,960 --> 00:06:24,400
inspiration of an or an early version of

00:06:23,199 --> 00:06:26,080
presto

00:06:24,400 --> 00:06:27,919
and i remember the day that you know

00:06:26,080 --> 00:06:29,440
presto was announced internally so

00:06:27,919 --> 00:06:31,360
i've been very much following that from

00:06:29,440 --> 00:06:33,759
the from the very beginning

00:06:31,360 --> 00:06:35,360
um i wanted to mention too that i'm

00:06:33,759 --> 00:06:36,319
super supportive of like you know

00:06:35,360 --> 00:06:38,560
everyone impressed

00:06:36,319 --> 00:06:39,919
communities uh you know with with s so

00:06:38,560 --> 00:06:41,360
there's uh all sorts of

00:06:39,919 --> 00:06:42,800
there's uh there's i think different

00:06:41,360 --> 00:06:44,479
foundations now so it's a little bit

00:06:42,800 --> 00:06:46,319
confusing for everyone

00:06:44,479 --> 00:06:48,639
uh i don't personally follow the latest

00:06:46,319 --> 00:06:50,319
or i've chosen i haven't chosen

00:06:48,639 --> 00:06:51,919
a site i don't think we need to but i

00:06:50,319 --> 00:06:54,319
just want to say like i um

00:06:51,919 --> 00:06:56,000
i have friends on on both sides and

00:06:54,319 --> 00:06:58,479
people are doing amazing work so

00:06:56,000 --> 00:06:59,840
yeah thanks max yeah absolutely we want

00:06:58,479 --> 00:07:02,880
to unify

00:06:59,840 --> 00:07:06,000
it all into one and uh it takes work so

00:07:02,880 --> 00:07:06,639
uh we need some some time and looking

00:07:06,000 --> 00:07:10,880
forward to

00:07:06,639 --> 00:07:14,000
uh uh having that happen to your

00:07:10,880 --> 00:07:14,400
question is why why did we create these

00:07:14,000 --> 00:07:16,319
uh

00:07:14,400 --> 00:07:17,759
you know these new tools i think like

00:07:16,319 --> 00:07:19,280
you mentioned how there's a this kind of

00:07:17,759 --> 00:07:21,039
defilerated you know there's been like

00:07:19,280 --> 00:07:21,759
all of this explosion of all sorts of

00:07:21,039 --> 00:07:24,800
tools

00:07:21,759 --> 00:07:26,160
um originally at airbnb when i joined we

00:07:24,800 --> 00:07:28,240
didn't have all the facebook

00:07:26,160 --> 00:07:29,520
ecosystem internal tools right so

00:07:28,240 --> 00:07:32,240
there's a need to

00:07:29,520 --> 00:07:33,520
integrate with presto i remember tableau

00:07:32,240 --> 00:07:35,680
i think we used evolution

00:07:33,520 --> 00:07:37,360
apache druid and presto we made some

00:07:35,680 --> 00:07:40,160
huge investments in hive

00:07:37,360 --> 00:07:41,680
presto hadoop and uh we didn't have

00:07:40,160 --> 00:07:43,280
great tooling so we started building

00:07:41,680 --> 00:07:44,479
tooling uh

00:07:43,280 --> 00:07:46,400
and i had some inspiration from the

00:07:44,479 --> 00:07:48,560
tools i'd use at facebook

00:07:46,400 --> 00:07:50,879
and that's how um superset and airflow

00:07:48,560 --> 00:07:54,000
were were born

00:07:50,879 --> 00:07:57,280
that's great um thanks max kishore

00:07:54,000 --> 00:07:59,280
awesome um hey guys i'm kishor um

00:07:57,280 --> 00:08:01,360
so i started my journey with this

00:07:59,280 --> 00:08:01,919
distributed systems almost like a decade

00:08:01,360 --> 00:08:05,759
back

00:08:01,919 --> 00:08:08,639
um so this was early in 2010s when

00:08:05,759 --> 00:08:10,240
linkedin was pretty much hitting the 100

00:08:08,639 --> 00:08:11,039
million member mark and then we were

00:08:10,240 --> 00:08:14,080
seeing

00:08:11,039 --> 00:08:16,160
all these issues with this uh old

00:08:14,080 --> 00:08:18,080
monolithic distributed systems or like

00:08:16,160 --> 00:08:19,280
oracles right so we wanted to get away

00:08:18,080 --> 00:08:21,759
from that so my

00:08:19,280 --> 00:08:23,440
my journey started with building this uh

00:08:21,759 --> 00:08:25,599
old oldp system

00:08:23,440 --> 00:08:27,120
which is like something like mongodb

00:08:25,599 --> 00:08:29,919
which we called as espresso

00:08:27,120 --> 00:08:31,039
which was the nosql uh nosql distributed

00:08:29,919 --> 00:08:32,719
system where

00:08:31,039 --> 00:08:34,080
pretty much all of linkedin data was

00:08:32,719 --> 00:08:35,919
stored and

00:08:34,080 --> 00:08:38,399
what started with that i built this

00:08:35,919 --> 00:08:40,959
other cluster management system

00:08:38,399 --> 00:08:42,640
called apache helix as well which was

00:08:40,959 --> 00:08:44,080
kind of a setting stone for

00:08:42,640 --> 00:08:45,760
building more and more distributed

00:08:44,080 --> 00:08:49,440
systems over linkedin

00:08:45,760 --> 00:08:53,040
and in 2015 is when we started this

00:08:49,440 --> 00:08:55,920
journey of building apache pino which is

00:08:53,040 --> 00:08:58,399
like the real-time olap system so there

00:08:55,920 --> 00:09:00,959
is the analytics itself is a quite broad

00:08:58,399 --> 00:09:03,279
um broad word and there's a lot of

00:09:00,959 --> 00:09:05,760
different things that you can do with it

00:09:03,279 --> 00:09:07,440
but linkedin had this amazing uh unique

00:09:05,760 --> 00:09:08,080
challenge i would say compared to other

00:09:07,440 --> 00:09:10,160
analytics

00:09:08,080 --> 00:09:12,320
because most of the time when people

00:09:10,160 --> 00:09:14,480
hear word analytics they think about

00:09:12,320 --> 00:09:16,399
analytics to the internal employees like

00:09:14,480 --> 00:09:17,920
which is within the company you have a

00:09:16,399 --> 00:09:20,080
few thousand users

00:09:17,920 --> 00:09:21,279
um so you you need a lot of flexibility

00:09:20,080 --> 00:09:23,040
in that but

00:09:21,279 --> 00:09:24,800
what linkedin took it took it as a

00:09:23,040 --> 00:09:25,120
challenge was to provide analytics to

00:09:24,800 --> 00:09:27,360
its

00:09:25,120 --> 00:09:29,040
100 100 plus million members right so

00:09:27,360 --> 00:09:29,839
hundreds of millions so today we have

00:09:29,040 --> 00:09:32,080
like

00:09:29,839 --> 00:09:34,880
close to 700 million members so

00:09:32,080 --> 00:09:37,360
providing analytics to them at real time

00:09:34,880 --> 00:09:39,360
um is like really really challenging for

00:09:37,360 --> 00:09:39,920
us and it kind of brings in like three

00:09:39,360 --> 00:09:42,480
different

00:09:39,920 --> 00:09:44,880
uh things together one is like all the

00:09:42,480 --> 00:09:48,000
activities that are happening like

00:09:44,880 --> 00:09:49,680
be it page views be it clicks

00:09:48,000 --> 00:09:51,680
whatever whatever actions you are taking

00:09:49,680 --> 00:09:53,040
on linkedin you're kind of ingesting

00:09:51,680 --> 00:09:55,839
that in real time

00:09:53,040 --> 00:09:58,160
and at the same time you have this um

00:09:55,839 --> 00:09:59,760
hundreds of millions of users querying

00:09:58,160 --> 00:10:02,720
this and then looking at

00:09:59,760 --> 00:10:04,399
products like who you're my profile or

00:10:02,720 --> 00:10:06,160
campaign analytics or

00:10:04,399 --> 00:10:08,320
publisher analytics there are like 70

00:10:06,160 --> 00:10:11,519
plus products that are surfaced to the

00:10:08,320 --> 00:10:13,360
end users right and not only this the

00:10:11,519 --> 00:10:15,200
challenge with providing something like

00:10:13,360 --> 00:10:18,399
external analytics is

00:10:15,200 --> 00:10:19,040
very very very tight sla so we have very

00:10:18,399 --> 00:10:21,920
strange

00:10:19,040 --> 00:10:23,680
requirements in terms of the latency it

00:10:21,920 --> 00:10:26,480
has to be in milliseconds

00:10:23,680 --> 00:10:28,160
we provide guarantees of 99 millisecond

00:10:26,480 --> 00:10:30,560
latencies and things like that

00:10:28,160 --> 00:10:31,440
right so this is this is really really

00:10:30,560 --> 00:10:34,160
hard for us

00:10:31,440 --> 00:10:35,120
and when we started this journey we had

00:10:34,160 --> 00:10:36,959
a very

00:10:35,120 --> 00:10:38,800
simple system something like a search

00:10:36,959 --> 00:10:39,760
based system like elasticsearch that we

00:10:38,800 --> 00:10:42,320
started

00:10:39,760 --> 00:10:44,720
and as this became very popular we

00:10:42,320 --> 00:10:46,480
realized that we needed 1000 machines

00:10:44,720 --> 00:10:48,000
to just serve a use case like who would

00:10:46,480 --> 00:10:49,839
my profile that was

00:10:48,000 --> 00:10:51,120
i was like mind boggling for us and we

00:10:49,839 --> 00:10:52,399
were like questioning like why are we

00:10:51,120 --> 00:10:54,079
even doing this

00:10:52,399 --> 00:10:55,839
and that's where the management was

00:10:54,079 --> 00:10:57,680
really supportive and they realized the

00:10:55,839 --> 00:10:59,680
potential of

00:10:57,680 --> 00:11:01,440
providing such tool to the customer to

00:10:59,680 --> 00:11:03,920
the members of linkedin

00:11:01,440 --> 00:11:06,079
and we ended up building this and we

00:11:03,920 --> 00:11:08,240
took 18 months

00:11:06,079 --> 00:11:09,680
to rebuild this from scratch to serve

00:11:08,240 --> 00:11:11,200
this high throughput low latency

00:11:09,680 --> 00:11:14,079
analytics use case

00:11:11,200 --> 00:11:15,680
and we came from 1000 to 75 nodes so

00:11:14,079 --> 00:11:17,839
that was the big

00:11:15,680 --> 00:11:18,880
big improvement for us and it was not

00:11:17,839 --> 00:11:21,600
not only in terms of

00:11:18,880 --> 00:11:22,480
cost but it kind of set us the direction

00:11:21,600 --> 00:11:24,640
that hey

00:11:22,480 --> 00:11:25,760
this is an amazing opportunity for us to

00:11:24,640 --> 00:11:28,240
provide lots of

00:11:25,760 --> 00:11:30,480
real-time insights to the users and kind

00:11:28,240 --> 00:11:34,240
of fast forward today we have like

00:11:30,480 --> 00:11:37,360
70 plus products um surface to the users

00:11:34,240 --> 00:11:38,160
and uh serving like 100 000 plus queries

00:11:37,360 --> 00:11:41,279
per second

00:11:38,160 --> 00:11:44,240
all right and all of them milliseconds

00:11:41,279 --> 00:11:44,720
um that's that's incredibly impressive

00:11:44,240 --> 00:11:47,120
uh

00:11:44,720 --> 00:11:49,040
you know streaming uh for operational

00:11:47,120 --> 00:11:50,079
use cases analytics for operational use

00:11:49,040 --> 00:11:53,440
cases really

00:11:50,079 --> 00:11:55,440
um but but that said we know a lot of

00:11:53,440 --> 00:11:56,560
uh data is still going into data lakes

00:11:55,440 --> 00:11:57,920
right and uh

00:11:56,560 --> 00:12:00,000
there is increasingly a need for

00:11:57,920 --> 00:12:02,480
transactionality on top of that

00:12:00,000 --> 00:12:04,000
uh and that's where uh a hoodie apache

00:12:02,480 --> 00:12:04,399
hoodie comes in so tell a little bit

00:12:04,000 --> 00:12:07,519
about

00:12:04,399 --> 00:12:10,320
yourself and apache hoodie as well yeah

00:12:07,519 --> 00:12:10,720
um so i started out of college i started

00:12:10,320 --> 00:12:12,720
my

00:12:10,720 --> 00:12:14,079
career at oracle actually working on

00:12:12,720 --> 00:12:17,600
database replication

00:12:14,079 --> 00:12:19,440
and you know some of these like

00:12:17,600 --> 00:12:21,120
you know so i'm i'm like a database guy

00:12:19,440 --> 00:12:23,760
then i my job at linkedin

00:12:21,120 --> 00:12:25,519
was around i was leading the waldemar

00:12:23,760 --> 00:12:27,600
team back in the day it was like a

00:12:25,519 --> 00:12:28,880
key value store uh on the likes of

00:12:27,600 --> 00:12:31,839
cassandra

00:12:28,880 --> 00:12:33,120
then then when i went to uber and we

00:12:31,839 --> 00:12:34,639
essentially i was one of the

00:12:33,120 --> 00:12:36,320
earliest members of the data team there

00:12:34,639 --> 00:12:38,320
we started the data team

00:12:36,320 --> 00:12:39,760
we are trying to move uh uber is going

00:12:38,320 --> 00:12:41,760
really fast this is last year was

00:12:39,760 --> 00:12:43,120
important right like uh

00:12:41,760 --> 00:12:44,959
it's growing we're hiring a lot of

00:12:43,120 --> 00:12:45,760
people a lot of new projects are being

00:12:44,959 --> 00:12:47,760
built

00:12:45,760 --> 00:12:49,279
so you know our existing traditional

00:12:47,760 --> 00:12:51,120
data virus that we're using

00:12:49,279 --> 00:12:53,360
cannot fit any other like all of the

00:12:51,120 --> 00:12:54,160
data anymore so we were looking for

00:12:53,360 --> 00:12:57,040
essentially

00:12:54,160 --> 00:12:57,440
okay let's bring in a data link right i

00:12:57,040 --> 00:13:00,560
i

00:12:57,440 --> 00:13:03,760
honestly that then as we tried to do it

00:13:00,560 --> 00:13:05,839
we realized that um you know

00:13:03,760 --> 00:13:06,959
we had this sort of like unique needed

00:13:05,839 --> 00:13:09,920
uber for

00:13:06,959 --> 00:13:11,920
uh like both scale and speed meaning

00:13:09,920 --> 00:13:13,920
uber is a very real time business

00:13:11,920 --> 00:13:15,680
uh like a lot of things happen real time

00:13:13,920 --> 00:13:17,440
and a lot of people sort of operate the

00:13:15,680 --> 00:13:19,360
business who want access to

00:13:17,440 --> 00:13:20,880
the data and the data warehouse so they

00:13:19,360 --> 00:13:22,880
can actually essentially they're using

00:13:20,880 --> 00:13:23,360
this as a debug log for the entire

00:13:22,880 --> 00:13:25,360
service

00:13:23,360 --> 00:13:26,639
right so we needed to give them this

00:13:25,360 --> 00:13:29,120
data very quickly

00:13:26,639 --> 00:13:30,320
and then when we tried to you know build

00:13:29,120 --> 00:13:32,639
the data lake

00:13:30,320 --> 00:13:34,320
and kind of like a normal kind of honest

00:13:32,639 --> 00:13:36,240
data like architecture where we

00:13:34,320 --> 00:13:37,920
just personal data lake move the etls

00:13:36,240 --> 00:13:40,959
from the warehouse into the data they

00:13:37,920 --> 00:13:42,959
stumbled onto so many problems uh which

00:13:40,959 --> 00:13:44,720
all boil down to essentially things

00:13:42,959 --> 00:13:48,000
being done in a very

00:13:44,720 --> 00:13:51,199
big batch way in the data lake

00:13:48,000 --> 00:13:53,440
and the lack of transactions uh

00:13:51,199 --> 00:13:55,440
actually was uh like something that we

00:13:53,440 --> 00:13:58,160
solved in the process but the core

00:13:55,440 --> 00:13:59,120
issue at uber was uh we were trying to

00:13:58,160 --> 00:14:01,839
invest the data

00:13:59,120 --> 00:14:02,720
like on traditional data warehouses have

00:14:01,839 --> 00:14:05,120
transactions

00:14:02,720 --> 00:14:06,880
updates deletes and they can now you can

00:14:05,120 --> 00:14:07,120
now incrementally ingest things into

00:14:06,880 --> 00:14:09,040
your

00:14:07,120 --> 00:14:10,399
data warehouse but the data lake

00:14:09,040 --> 00:14:12,639
solutions had

00:14:10,399 --> 00:14:13,600
nothing like that right so we were kind

00:14:12,639 --> 00:14:16,160
of like

00:14:13,600 --> 00:14:17,680
muddling for a while hey do we try

00:14:16,160 --> 00:14:21,440
things like say kudu

00:14:17,680 --> 00:14:23,760
um right to to bring uh to revamp this

00:14:21,440 --> 00:14:25,920
and essentially when we thought about it

00:14:23,760 --> 00:14:27,920
uh it's not gonna be cloud proof

00:14:25,920 --> 00:14:29,360
right like it's gonna be like one other

00:14:27,920 --> 00:14:32,079
system that we wanted to run

00:14:29,360 --> 00:14:33,279
so then we basically decided to say uh

00:14:32,079 --> 00:14:34,399
hey we're going to bring these

00:14:33,279 --> 00:14:37,199
properties

00:14:34,399 --> 00:14:38,959
in a layer that we write uh on top of

00:14:37,199 --> 00:14:41,519
the hadoop file system interface so that

00:14:38,959 --> 00:14:43,760
you can work on hdfs it can work with s3

00:14:41,519 --> 00:14:44,720
like you know dcs all of these object

00:14:43,760 --> 00:14:46,639
stores as well

00:14:44,720 --> 00:14:48,720
and that's kind of like how how he was

00:14:46,639 --> 00:14:52,000
won the first version of foodie at

00:14:48,720 --> 00:14:52,959
uber was um i think made our database

00:14:52,000 --> 00:14:56,639
ingestion

00:14:52,959 --> 00:14:59,839
10 to 100 x more efficient and

00:14:56,639 --> 00:15:01,040
we also did something very uh unique at

00:14:59,839 --> 00:15:02,480
the time and

00:15:01,040 --> 00:15:04,959
i think the world is still moving

00:15:02,480 --> 00:15:07,680
towards that we're not fully there yet

00:15:04,959 --> 00:15:08,160
so we all a lot of these bad jobs our

00:15:07,680 --> 00:15:10,240
jobs

00:15:08,160 --> 00:15:12,079
they just reprocess data over and over

00:15:10,240 --> 00:15:12,880
again which essentially causes a lot of

00:15:12,079 --> 00:15:14,160
latency

00:15:12,880 --> 00:15:16,079
so going back to what i was saying

00:15:14,160 --> 00:15:17,920
before since we wanted a lot of this

00:15:16,079 --> 00:15:19,839
data to be available very quickly for

00:15:17,920 --> 00:15:22,000
our operations and rest of the business

00:15:19,839 --> 00:15:23,040
we actually took uh introduced a lot of

00:15:22,000 --> 00:15:25,199
streaming

00:15:23,040 --> 00:15:27,040
stream processing primitives including

00:15:25,199 --> 00:15:29,680
which we took some of these like

00:15:27,040 --> 00:15:30,800
large batch etls for the data warehouse

00:15:29,680 --> 00:15:32,079
and we were able to actually

00:15:30,800 --> 00:15:34,399
incrementalize that

00:15:32,079 --> 00:15:36,320
and we've been like steadily investing

00:15:34,399 --> 00:15:39,519
along those lines since then

00:15:36,320 --> 00:15:41,680
and uh yeah i feel like uh

00:15:39,519 --> 00:15:43,680
with these the with hoodie and public

00:15:41,680 --> 00:15:46,160
equity is slowly starting to

00:15:43,680 --> 00:15:48,240
kind of bridge the gap between the the

00:15:46,160 --> 00:15:50,880
traditional data warehouse world

00:15:48,240 --> 00:15:52,720
uh and the data lakes while we retain

00:15:50,880 --> 00:15:53,279
all that goodness about data lakes which

00:15:52,720 --> 00:15:56,000
is

00:15:53,279 --> 00:15:56,800
you know lack of in uh standalone

00:15:56,000 --> 00:15:59,440
servers of

00:15:56,800 --> 00:16:00,959
like single point bottlenecks uh

00:15:59,440 --> 00:16:04,160
retaining all the cheap

00:16:00,959 --> 00:16:06,959
uh the cost and the scalability right

00:16:04,160 --> 00:16:08,720
so it's pretty pretty exciting yeah

00:16:06,959 --> 00:16:10,800
absolutely i mean it's it's a

00:16:08,720 --> 00:16:12,240
that's a great segue into the the next

00:16:10,800 --> 00:16:14,959
question and discussion

00:16:12,240 --> 00:16:17,600
you know some will say that the stack

00:16:14,959 --> 00:16:19,199
superset presto hoodie pino of course

00:16:17,600 --> 00:16:22,160
let's throw in the object store

00:16:19,199 --> 00:16:24,079
cloud object store data lake in there is

00:16:22,160 --> 00:16:27,440
the perfect stack for

00:16:24,079 --> 00:16:28,160
real-time um streaming right as well as

00:16:27,440 --> 00:16:31,279
ad hoc

00:16:28,160 --> 00:16:33,120
analytics maybe etl and it can replace

00:16:31,279 --> 00:16:34,880
this traditional approach of a tightly

00:16:33,120 --> 00:16:37,040
integrated data warehouse

00:16:34,880 --> 00:16:38,800
what do you guys think you know uh what

00:16:37,040 --> 00:16:41,920
what's your uh take on that

00:16:38,800 --> 00:16:44,000
um uh maybe max

00:16:41,920 --> 00:16:45,440
can get started well so there's an

00:16:44,000 --> 00:16:47,440
interesting kind of command

00:16:45,440 --> 00:16:48,639
commonality across the the solution you

00:16:47,440 --> 00:16:51,600
mentioned there and

00:16:48,639 --> 00:16:53,759
across the panel here today is uh we we

00:16:51,600 --> 00:16:55,759
see a bunch of uh open source projects

00:16:53,759 --> 00:16:59,279
at software foundations

00:16:55,759 --> 00:17:00,800
um that that essentially came from

00:16:59,279 --> 00:17:02,839
a world of like from a corporate

00:17:00,800 --> 00:17:04,640
background to right so big company

00:17:02,839 --> 00:17:06,480
solutions um

00:17:04,640 --> 00:17:08,079
i i think it's it's interesting to see

00:17:06,480 --> 00:17:10,640
the stack emerge

00:17:08,079 --> 00:17:11,919
uh the i think the open source nest of

00:17:10,640 --> 00:17:13,679
it is interesting

00:17:11,919 --> 00:17:15,199
uh there's there are things that are

00:17:13,679 --> 00:17:16,720
emerging too winners are emerging that

00:17:15,199 --> 00:17:18,000
are not open source but i'm interested

00:17:16,720 --> 00:17:20,799
in talking a little bit about the

00:17:18,000 --> 00:17:22,559
the open source ones um i think people

00:17:20,799 --> 00:17:24,480
care about data sovereignty

00:17:22,559 --> 00:17:26,720
this idea that you want to own your

00:17:24,480 --> 00:17:27,679
stack i think open source is just a

00:17:26,720 --> 00:17:29,919
fundamentally

00:17:27,679 --> 00:17:32,160
a fundamentally better way to write

00:17:29,919 --> 00:17:33,360
software and distribute software and

00:17:32,160 --> 00:17:36,400
people recognize that

00:17:33,360 --> 00:17:38,799
and want that all across their stack

00:17:36,400 --> 00:17:40,559
now one challenge is that the cost of

00:17:38,799 --> 00:17:41,760
ownership of open source is not

00:17:40,559 --> 00:17:44,640
necessarily free

00:17:41,760 --> 00:17:47,200
too and it requires you know a data data

00:17:44,640 --> 00:17:48,720
team in some cases world-class data team

00:17:47,200 --> 00:17:50,559
to operate some of these things and that

00:17:48,720 --> 00:17:51,120
can be pretty challenging it's not easy

00:17:50,559 --> 00:17:54,080
to

00:17:51,120 --> 00:17:54,799
to hire um you know that talent too so i

00:17:54,080 --> 00:17:57,280
wanted to

00:17:54,799 --> 00:17:58,640
mention briefly you know commercial

00:17:57,280 --> 00:18:00,559
companies around these open source

00:17:58,640 --> 00:18:02,320
projects too that are making it easier

00:18:00,559 --> 00:18:02,880
for everyone to still get the benefits

00:18:02,320 --> 00:18:05,200
of

00:18:02,880 --> 00:18:06,160
open source the no lock-in the data

00:18:05,200 --> 00:18:07,760
sovereignty

00:18:06,160 --> 00:18:10,960
the possibility of running it on their

00:18:07,760 --> 00:18:13,360
own or patching or contributing to code

00:18:10,960 --> 00:18:15,280
but also making it easier for and more

00:18:13,360 --> 00:18:17,360
accessible for for companies to

00:18:15,280 --> 00:18:19,120
uh to use things like you know pinot

00:18:17,360 --> 00:18:22,720
super said presto

00:18:19,120 --> 00:18:23,760
uh airflow right so um so it's good to

00:18:22,720 --> 00:18:26,000
see this uh

00:18:23,760 --> 00:18:26,880
the synergy of like open source with

00:18:26,000 --> 00:18:29,440
commercial

00:18:26,880 --> 00:18:31,200
uh when that works and i think like i

00:18:29,440 --> 00:18:33,760
think that can work very well and we're

00:18:31,200 --> 00:18:36,160
we're making sure you know and many of

00:18:33,760 --> 00:18:38,880
us i think are doing it very well

00:18:36,160 --> 00:18:40,160
great right yeah well said um yeah go

00:18:38,880 --> 00:18:42,240
ahead um

00:18:40,160 --> 00:18:43,360
yeah so i do that right i think uh it

00:18:42,240 --> 00:18:45,039
kind of really

00:18:43,360 --> 00:18:47,440
goes back to the point that eventually

00:18:45,039 --> 00:18:49,600
mentioned that earlier people had this

00:18:47,440 --> 00:18:50,480
one gigantic system that tried to do

00:18:49,600 --> 00:18:53,360
everything

00:18:50,480 --> 00:18:55,200
and as we kind of tease apart and then

00:18:53,360 --> 00:18:56,240
break this into pieces we kind of see

00:18:55,200 --> 00:18:58,240
that there is a

00:18:56,240 --> 00:19:00,080
ingestion layer there is a storage there

00:18:58,240 --> 00:19:01,600
is processing there is compute and then

00:19:00,080 --> 00:19:04,160
there is visualization

00:19:01,600 --> 00:19:06,240
and each of these layers themselves are

00:19:04,160 --> 00:19:07,520
becoming so complex and

00:19:06,240 --> 00:19:09,520
and they can there are lot of

00:19:07,520 --> 00:19:10,400
technological advancement as well where

00:19:09,520 --> 00:19:12,799
you can

00:19:10,400 --> 00:19:15,200
make each layer the best right and it's

00:19:12,799 --> 00:19:16,960
very hard for one system to basically

00:19:15,200 --> 00:19:19,120
try to solve all of this and then they

00:19:16,960 --> 00:19:20,320
end up becoming a big monolith and it's

00:19:19,120 --> 00:19:23,600
very very hard

00:19:20,320 --> 00:19:24,880
so i do see that having this break uh

00:19:23,600 --> 00:19:28,400
different layers and

00:19:24,880 --> 00:19:30,720
giving the users the flexibility to

00:19:28,400 --> 00:19:31,679
pick and choose the best layers and

00:19:30,720 --> 00:19:33,440
being able to come

00:19:31,679 --> 00:19:35,039
now come up with their own stack is

00:19:33,440 --> 00:19:36,080
definitely something that we will see

00:19:35,039 --> 00:19:38,640
over the next

00:19:36,080 --> 00:19:40,320
five to five to ten years right and one

00:19:38,640 --> 00:19:43,200
thing that might end up coming

00:19:40,320 --> 00:19:45,120
uh coming out of this is like very good

00:19:43,200 --> 00:19:47,200
standardized apis for each of these

00:19:45,120 --> 00:19:49,280
layers so that we can have like

00:19:47,200 --> 00:19:50,960
one or two different implementations but

00:19:49,280 --> 00:19:52,799
this is um

00:19:50,960 --> 00:19:54,240
go the direction that in which we are

00:19:52,799 --> 00:19:56,720
going we do see that

00:19:54,240 --> 00:19:59,039
it's almost like the analogy of the

00:19:56,720 --> 00:20:01,039
computer where you have this pcis

00:19:59,039 --> 00:20:03,200
where you you have very good standards

00:20:01,039 --> 00:20:05,679
for each of them and then everyone

00:20:03,200 --> 00:20:07,440
um goes in like their own speed and be

00:20:05,679 --> 00:20:09,360
able to innovate and make it

00:20:07,440 --> 00:20:11,200
better and better but you will be able

00:20:09,360 --> 00:20:12,799
to plug and mix and match all these

00:20:11,200 --> 00:20:13,679
things to come up with a world-class

00:20:12,799 --> 00:20:15,679
stack

00:20:13,679 --> 00:20:17,280
but of course as max mentioned it does

00:20:15,679 --> 00:20:19,280
require a world-class scheme to put

00:20:17,280 --> 00:20:21,679
together it's not it's not trivial

00:20:19,280 --> 00:20:22,720
each of these are like complex beasts uh

00:20:21,679 --> 00:20:24,880
on its own

00:20:22,720 --> 00:20:26,880
um so but yeah i think it's a very good

00:20:24,880 --> 00:20:29,679
uh point there in terms of

00:20:26,880 --> 00:20:31,200
how the future of data warehouse and

00:20:29,679 --> 00:20:33,120
bringing in the best of all these

00:20:31,200 --> 00:20:34,880
technologies together

00:20:33,120 --> 00:20:37,039
yeah absolutely and i think cloud can

00:20:34,880 --> 00:20:39,120
solve uh some of these as well if it's

00:20:37,039 --> 00:20:40,080
pre-integrated in the cloud it uh as a

00:20:39,120 --> 00:20:42,080
service it could

00:20:40,080 --> 00:20:43,760
make it simpler you know it simplifies

00:20:42,080 --> 00:20:45,520
it dramatically

00:20:43,760 --> 00:20:47,280
uh it can be automated you can have

00:20:45,520 --> 00:20:48,000
learning on top of it so that it's

00:20:47,280 --> 00:20:50,320
self-healing

00:20:48,000 --> 00:20:51,440
self-learning self-managed uh which uh

00:20:50,320 --> 00:20:52,880
which will help as well

00:20:51,440 --> 00:20:54,799
uh we know third and i see anything more

00:20:52,880 --> 00:20:56,799
to add to that um

00:20:54,799 --> 00:20:57,919
yeah so i want to touch upon

00:20:56,799 --> 00:20:59,760
specifically around like

00:20:57,919 --> 00:21:00,960
you know the data lake and the cloud

00:20:59,760 --> 00:21:02,320
warehouse and

00:21:00,960 --> 00:21:04,400
since like there's a lot of work

00:21:02,320 --> 00:21:05,760
happening right now right it's actually

00:21:04,400 --> 00:21:07,760
exciting times as we are

00:21:05,760 --> 00:21:10,159
kind of like exploring the lines between

00:21:07,760 --> 00:21:11,919
like uh like with the cloud warehouses

00:21:10,159 --> 00:21:13,750
the lines between data lakes and

00:21:11,919 --> 00:21:15,200
cloud uh you know like

00:21:13,750 --> 00:21:16,960
[Music]

00:21:15,200 --> 00:21:19,360
like cloud what do you call a warehouse

00:21:16,960 --> 00:21:22,080
and what you call a data lake

00:21:19,360 --> 00:21:23,039
a little bit because cloud warehouses uh

00:21:22,080 --> 00:21:25,440
kind of promise

00:21:23,039 --> 00:21:26,559
a lot more you know scalability because

00:21:25,440 --> 00:21:28,320
they are built

00:21:26,559 --> 00:21:30,240
in a cloud native way with all of their

00:21:28,320 --> 00:21:30,640
data on like s3 or something like object

00:21:30,240 --> 00:21:33,200
store

00:21:30,640 --> 00:21:34,799
right while on the data lake side you're

00:21:33,200 --> 00:21:37,360
getting a lot more

00:21:34,799 --> 00:21:38,559
uh kind of uh features that if you look

00:21:37,360 --> 00:21:40,880
at for example

00:21:38,559 --> 00:21:43,840
uh presto you can find things like you

00:21:40,880 --> 00:21:45,679
know cbo or cosby's optimizations or

00:21:43,840 --> 00:21:48,720
vectorizations these are like

00:21:45,679 --> 00:21:50,880
advanced data warehouse uh engine

00:21:48,720 --> 00:21:51,760
kind of optimizations you're like

00:21:50,880 --> 00:21:54,799
getting in

00:21:51,760 --> 00:21:56,799
making its way into the open source data

00:21:54,799 --> 00:21:58,000
and then if you take hoodie we have you

00:21:56,799 --> 00:22:00,000
know transactions

00:21:58,000 --> 00:22:01,200
date like you know incremental streams

00:22:00,000 --> 00:22:04,159
deletes and like

00:22:01,200 --> 00:22:05,679
these things that we used to find in

00:22:04,159 --> 00:22:07,280
kind of warehouses before

00:22:05,679 --> 00:22:08,960
right so i think this will be like a

00:22:07,280 --> 00:22:12,000
very interesting transition

00:22:08,960 --> 00:22:13,760
i do believe though that we will end up

00:22:12,000 --> 00:22:15,760
this trend will continue and we will

00:22:13,760 --> 00:22:16,640
again end up in a world i think on the

00:22:15,760 --> 00:22:19,360
cloud

00:22:16,640 --> 00:22:21,360
where there is like a space for raw data

00:22:19,360 --> 00:22:22,320
is stored in like uh kind of data lake

00:22:21,360 --> 00:22:25,039
technologies

00:22:22,320 --> 00:22:26,240
where it's more cost efficient you want

00:22:25,039 --> 00:22:28,559
all of your

00:22:26,240 --> 00:22:29,760
you know businesses uh source of truth

00:22:28,559 --> 00:22:32,080
data to be

00:22:29,760 --> 00:22:33,360
not locked in a vendor's data format but

00:22:32,080 --> 00:22:34,960
in like open

00:22:33,360 --> 00:22:36,559
file formats right so you have the

00:22:34,960 --> 00:22:38,880
flexibility to

00:22:36,559 --> 00:22:40,159
you know maybe maybe your a vendor

00:22:38,880 --> 00:22:41,679
cannot provide you the operational

00:22:40,159 --> 00:22:43,120
guarantees that you need anymore so you

00:22:41,679 --> 00:22:44,240
want to build it in yourself you can

00:22:43,120 --> 00:22:47,120
totally do that

00:22:44,240 --> 00:22:49,280
or you can you know like buy from some

00:22:47,120 --> 00:22:51,520
company who is offering like you know

00:22:49,280 --> 00:22:53,919
these data technologies right so i think

00:22:51,520 --> 00:22:55,840
people will enjoy that freedom for

00:22:53,919 --> 00:22:58,320
majority of their data

00:22:55,840 --> 00:22:59,280
while they pick and choose uh the

00:22:58,320 --> 00:23:01,120
premium data

00:22:59,280 --> 00:23:03,039
with the 1820 rule what they want to

00:23:01,120 --> 00:23:05,760
move into like a cloud warehouse

00:23:03,039 --> 00:23:07,280
and i think this will definitely emerge

00:23:05,760 --> 00:23:10,480
these patterns you can see

00:23:07,280 --> 00:23:13,520
in silicon valley and generally the more

00:23:10,480 --> 00:23:15,520
um big forward companies even outside

00:23:13,520 --> 00:23:16,640
silicon valley kind of are adopting this

00:23:15,520 --> 00:23:18,400
model already

00:23:16,640 --> 00:23:20,320
and i feel like that that's kind of

00:23:18,400 --> 00:23:22,400
value emerge just like on

00:23:20,320 --> 00:23:23,760
on-prem we had traditional data

00:23:22,400 --> 00:23:25,200
warehouses and data lakes

00:23:23,760 --> 00:23:26,799
i think on the cloud again i think we

00:23:25,200 --> 00:23:28,960
were going to end up with like a

00:23:26,799 --> 00:23:30,799
more standardized more advanced cloud

00:23:28,960 --> 00:23:32,240
data lake architecture and a cloud data

00:23:30,799 --> 00:23:34,480
warehouse architecture

00:23:32,240 --> 00:23:36,240
and i think where we are going and

00:23:34,480 --> 00:23:38,880
definitely exciting times and

00:23:36,240 --> 00:23:39,360
i'm like very thrilled that uh you know

00:23:38,880 --> 00:23:41,279
huli

00:23:39,360 --> 00:23:42,720
and presto are kind of like playing like

00:23:41,279 --> 00:23:45,840
large uh

00:23:42,720 --> 00:23:48,480
roles in this kind of uh evolution

00:23:45,840 --> 00:23:50,799
yeah open open formats is you know

00:23:48,480 --> 00:23:52,640
incredibly important work parque seem to

00:23:50,799 --> 00:23:54,799
be the ones that are widely used today

00:23:52,640 --> 00:23:56,159
uh nazi you you brought up earlier

00:23:54,799 --> 00:23:58,480
presto and spark

00:23:56,159 --> 00:24:00,159
having these raw this raw data these

00:23:58,480 --> 00:24:02,240
open formats essentially allows you to

00:24:00,159 --> 00:24:04,240
run many different engines right on top

00:24:02,240 --> 00:24:05,600
it could be uh press just presto or

00:24:04,240 --> 00:24:08,240
presto on spark or

00:24:05,600 --> 00:24:09,440
you know the next one uh and so nes

00:24:08,240 --> 00:24:12,000
anything more to add to that

00:24:09,440 --> 00:24:13,840
uh how is uh you know what does the uh

00:24:12,000 --> 00:24:14,559
stack look like five years from now you

00:24:13,840 --> 00:24:17,760
think

00:24:14,559 --> 00:24:21,279
it's a hard question yeah

00:24:17,760 --> 00:24:23,520
five years from now i mean i think

00:24:21,279 --> 00:24:25,200
i can talk about like a personal wish

00:24:23,520 --> 00:24:26,559
list and a prediction

00:24:25,200 --> 00:24:28,640
because i will get the prediction wrong

00:24:26,559 --> 00:24:32,799
anyway so so what

00:24:28,640 --> 00:24:36,080
but i i would love you're on the record

00:24:32,799 --> 00:24:38,159
yeah yeah i know so basically

00:24:36,080 --> 00:24:39,440
i want to talk about two things one is

00:24:38,159 --> 00:24:41,360
metadata

00:24:39,440 --> 00:24:43,760
so the high of legacy code the higher

00:24:41,360 --> 00:24:45,200
legacy metadata format and systems are

00:24:43,760 --> 00:24:47,520
out there for a long time

00:24:45,200 --> 00:24:49,440
and we have like use cases evolving and

00:24:47,520 --> 00:24:51,120
now our requirements need much faster

00:24:49,440 --> 00:24:52,000
and scalable metadata formats and

00:24:51,120 --> 00:24:53,360
systems

00:24:52,000 --> 00:24:55,440
and i think in the next five years i

00:24:53,360 --> 00:24:57,120
would love to see an evolution of that

00:24:55,440 --> 00:24:58,720
as well like we want really faster and

00:24:57,120 --> 00:24:59,520
more scalable leaner metadata

00:24:58,720 --> 00:25:01,440
implementations

00:24:59,520 --> 00:25:03,200
and i think apache iceberg project i

00:25:01,440 --> 00:25:04,559
think they deserve a credit there they

00:25:03,200 --> 00:25:06,000
have done a great job and is

00:25:04,559 --> 00:25:07,440
a great step in the right direction i

00:25:06,000 --> 00:25:08,000
would like to see more there that is

00:25:07,440 --> 00:25:10,080
that is

00:25:08,000 --> 00:25:11,760
number one and the second item in my

00:25:10,080 --> 00:25:14,159
personal wishlist is

00:25:11,760 --> 00:25:14,799
like like brought up before these

00:25:14,159 --> 00:25:17,440
systems

00:25:14,799 --> 00:25:18,240
are non-trivial to operate and use these

00:25:17,440 --> 00:25:20,320
systems are

00:25:18,240 --> 00:25:22,320
beast and very complex and operating

00:25:20,320 --> 00:25:24,480
them is challenging especially at scale

00:25:22,320 --> 00:25:26,559
these systems have like a large number

00:25:24,480 --> 00:25:28,320
of tunables or config knobs

00:25:26,559 --> 00:25:29,760
like you need to tweak query plans you

00:25:28,320 --> 00:25:31,679
need to design

00:25:29,760 --> 00:25:34,240
the physical story so that you get the

00:25:31,679 --> 00:25:35,840
best performance etc etc so many there

00:25:34,240 --> 00:25:37,760
are so many things that you should tune

00:25:35,840 --> 00:25:40,799
and change to get the best out of these

00:25:37,760 --> 00:25:42,480
stacks and i think like what i would

00:25:40,799 --> 00:25:44,720
love to see in the next five years is

00:25:42,480 --> 00:25:46,799
self-adaptive and self-tuning systems

00:25:44,720 --> 00:25:49,440
and the idea of self-adaptive systems

00:25:46,799 --> 00:25:50,960
actually go back to 1970s like 50 years

00:25:49,440 --> 00:25:52,880
ago it's not something new

00:25:50,960 --> 00:25:54,400
and given the latest advances in like

00:25:52,880 --> 00:25:55,120
machine learning and other learning

00:25:54,400 --> 00:25:56,799
techniques

00:25:55,120 --> 00:25:58,400
gives me hope that like we can see some

00:25:56,799 --> 00:26:00,559
truly adaptive systems where

00:25:58,400 --> 00:26:02,799
a human operator involvement is limited

00:26:00,559 --> 00:26:04,720
maybe it can't be zero but like at least

00:26:02,799 --> 00:26:06,159
it's limited that it will be a big win

00:26:04,720 --> 00:26:06,559
and it will be you know much easier to

00:26:06,159 --> 00:26:08,159
use

00:26:06,559 --> 00:26:10,559
and such some some of the commercial

00:26:08,159 --> 00:26:11,919
databases actually like have some

00:26:10,559 --> 00:26:14,400
limited support like they have some

00:26:11,919 --> 00:26:15,840
automated sequel tuning etc but i'm

00:26:14,400 --> 00:26:17,600
really not talking about just sequel

00:26:15,840 --> 00:26:18,159
turning is like i need something broader

00:26:17,600 --> 00:26:19,760
that is

00:26:18,159 --> 00:26:21,200
auto tuning for example the system

00:26:19,760 --> 00:26:23,200
config the

00:26:21,200 --> 00:26:24,799
auto tuning the behavior and getting the

00:26:23,200 --> 00:26:26,080
best performance out of your workload

00:26:24,799 --> 00:26:27,919
and environment etc

00:26:26,080 --> 00:26:29,919
so basically we need systems that adapt

00:26:27,919 --> 00:26:31,919
to their load and environment i think

00:26:29,919 --> 00:26:33,440
such systems will really simplify the

00:26:31,919 --> 00:26:36,559
lives of people who

00:26:33,440 --> 00:26:38,880
operate these systems awesome

00:26:36,559 --> 00:26:39,840
well we have a few minutes left and i

00:26:38,880 --> 00:26:42,159
think uh

00:26:39,840 --> 00:26:43,919
you know that the audience uh probably

00:26:42,159 --> 00:26:46,080
wants to ask this question

00:26:43,919 --> 00:26:47,120
each of you have created these amazing

00:26:46,080 --> 00:26:49,840
technologies and

00:26:47,120 --> 00:26:50,240
and open source projects uh may be used

00:26:49,840 --> 00:26:52,559
by

00:26:50,240 --> 00:26:54,559
thousands maybe hundreds of thousands of

00:26:52,559 --> 00:26:56,159
with everyone here together

00:26:54,559 --> 00:26:57,600
uh hundreds of thousands of data

00:26:56,159 --> 00:27:00,320
analysts engineers

00:26:57,600 --> 00:27:02,880
data scientists is there a secret to

00:27:00,320 --> 00:27:04,640
building a killer open source project

00:27:02,880 --> 00:27:07,279
and a you know a thriving community

00:27:04,640 --> 00:27:09,520
around it

00:27:07,279 --> 00:27:10,720
i i can pick this one uh i'll get

00:27:09,520 --> 00:27:12,960
started on it so

00:27:10,720 --> 00:27:14,480
um so you know in uh more in the startup

00:27:12,960 --> 00:27:15,360
world people talked about uh product

00:27:14,480 --> 00:27:17,200
market fit

00:27:15,360 --> 00:27:19,279
i think there is some such a thing as

00:27:17,200 --> 00:27:21,200
project community fit

00:27:19,279 --> 00:27:22,399
i did not think about that up front but

00:27:21,200 --> 00:27:25,039
sometimes just about

00:27:22,399 --> 00:27:27,039
kind of timing and kind of convergence

00:27:25,039 --> 00:27:29,360
of idea and offering the right

00:27:27,039 --> 00:27:31,440
tools or abstractions at the moment

00:27:29,360 --> 00:27:33,279
where the people are kind of ready for

00:27:31,440 --> 00:27:34,799
for that and you know there's such a

00:27:33,279 --> 00:27:36,880
thing as being

00:27:34,799 --> 00:27:37,840
ahead of your time or or too late to

00:27:36,880 --> 00:27:41,200
market you know

00:27:37,840 --> 00:27:41,840
in uh in community and and open source

00:27:41,200 --> 00:27:44,799
too

00:27:41,840 --> 00:27:46,480
uh my little secret you know that i put

00:27:44,799 --> 00:27:48,159
into more application

00:27:46,480 --> 00:27:50,320
uh because i didn't think about project

00:27:48,159 --> 00:27:52,880
community fit early on you know

00:27:50,320 --> 00:27:53,440
is is to really honor people that uh

00:27:52,880 --> 00:27:55,600
that

00:27:53,440 --> 00:27:57,760
uh give kind of interest and show

00:27:55,600 --> 00:28:00,080
engagement toward your project so

00:27:57,760 --> 00:28:02,000
really being on top of github

00:28:00,080 --> 00:28:04,320
notifications and pull requests

00:28:02,000 --> 00:28:05,840
and issues and and doing all the things

00:28:04,320 --> 00:28:07,760
that you know you should be doing in

00:28:05,840 --> 00:28:10,480
open source great documentation

00:28:07,760 --> 00:28:12,480
but like being really responsive to the

00:28:10,480 --> 00:28:14,240
the community even if it's just one your

00:28:12,480 --> 00:28:16,960
community is just one person

00:28:14,240 --> 00:28:17,279
i you know give them the attention that

00:28:16,960 --> 00:28:19,840
they're

00:28:17,279 --> 00:28:22,880
uh or you know honor their interests by

00:28:19,840 --> 00:28:24,399
by engaging with them as much as you can

00:28:22,880 --> 00:28:26,799
yeah i would like to add to that right

00:28:24,399 --> 00:28:27,600
so i think um one of the key things that

00:28:26,799 --> 00:28:30,159
i noticed

00:28:27,600 --> 00:28:31,919
is um just help them right so a lot of

00:28:30,159 --> 00:28:34,399
people may be just coming there

00:28:31,919 --> 00:28:35,760
coming to your project to either use the

00:28:34,399 --> 00:28:38,159
project which is

00:28:35,760 --> 00:28:39,840
probably the first thing but then i also

00:28:38,159 --> 00:28:41,760
realized that there are a lot of people

00:28:39,840 --> 00:28:43,039
who don't really get this opportunity

00:28:41,760 --> 00:28:45,600
who are like from

00:28:43,039 --> 00:28:46,720
facebook or linkedin or ubers or airbnb

00:28:45,600 --> 00:28:49,279
to build this

00:28:46,720 --> 00:28:51,600
awesome complex uh system so it's also a

00:28:49,279 --> 00:28:53,360
learning opportunity for them to get

00:28:51,600 --> 00:28:55,600
engaged with the project right so there

00:28:53,360 --> 00:28:55,919
is there is they're also contributing to

00:28:55,600 --> 00:28:58,240
it

00:28:55,919 --> 00:29:00,240
but at the same time helping them to

00:28:58,240 --> 00:29:01,919
even work with some of these complex

00:29:00,240 --> 00:29:04,000
issues and then teaching them all these

00:29:01,919 --> 00:29:06,000
concepts of distributed systems

00:29:04,000 --> 00:29:07,679
help them a lot and then they

00:29:06,000 --> 00:29:11,120
potentially become a committer

00:29:07,679 --> 00:29:12,880
over a period of time but it's really uh

00:29:11,120 --> 00:29:14,960
important to handhold them in the

00:29:12,880 --> 00:29:16,559
beginning and i teach them the ropes and

00:29:14,960 --> 00:29:18,080
then figure out like okay here is how a

00:29:16,559 --> 00:29:19,679
distributed system works

00:29:18,080 --> 00:29:21,760
so there is a lot of investment that

00:29:19,679 --> 00:29:22,799
goes in but then once they become

00:29:21,760 --> 00:29:24,720
committers they are like

00:29:22,799 --> 00:29:26,960
amazing people who can basically push

00:29:24,720 --> 00:29:28,159
the projects to limits that we cannot

00:29:26,960 --> 00:29:30,799
really think of

00:29:28,159 --> 00:29:32,240
just being in one company so i do see

00:29:30,799 --> 00:29:33,840
that coming and

00:29:32,240 --> 00:29:35,440
helping a lot in terms of growing the

00:29:33,840 --> 00:29:38,240
community

00:29:35,440 --> 00:29:40,559
awesome vinod hoodie just recently

00:29:38,240 --> 00:29:41,120
became a top level uh apache project as

00:29:40,559 --> 00:29:43,919
well so

00:29:41,120 --> 00:29:44,799
that's more to add to that yeah so i

00:29:43,919 --> 00:29:46,640
think uh

00:29:44,799 --> 00:29:48,080
in terms of the community right i think

00:29:46,640 --> 00:29:50,960
what we realized is there is

00:29:48,080 --> 00:29:51,520
no secret it's about like consistently

00:29:50,960 --> 00:29:53,200
every day

00:29:51,520 --> 00:29:55,520
following up on the community like

00:29:53,200 --> 00:29:57,679
making sure users who show up

00:29:55,520 --> 00:29:59,039
uh you you you are treating them with

00:29:57,679 --> 00:30:00,799
like empathy you're trying to really

00:29:59,039 --> 00:30:01,840
understand their problem and tell them

00:30:00,799 --> 00:30:04,159
if you can

00:30:01,840 --> 00:30:05,440
right and we take like community very

00:30:04,159 --> 00:30:07,600
very seriously

00:30:05,440 --> 00:30:08,480
uh if you look at it like on the pmc

00:30:07,600 --> 00:30:11,120
there are people

00:30:08,480 --> 00:30:11,840
who are kind of like my ear mark for

00:30:11,120 --> 00:30:14,000
okay you're

00:30:11,840 --> 00:30:15,760
the point person for answering their

00:30:14,000 --> 00:30:17,360
mail list you're the point person for

00:30:15,760 --> 00:30:18,559
slack you're like the person for

00:30:17,360 --> 00:30:21,440
reviewing prs

00:30:18,559 --> 00:30:23,600
so we we make sure contributors are

00:30:21,440 --> 00:30:25,840
users when they come to the community

00:30:23,600 --> 00:30:28,559
they have a clear person who is

00:30:25,840 --> 00:30:30,320
responsible for that one interaction

00:30:28,559 --> 00:30:31,360
and because a lot of times in like open

00:30:30,320 --> 00:30:31,919
source projects it's a little bit

00:30:31,360 --> 00:30:34,000
frustrating

00:30:31,919 --> 00:30:35,279
that you know who do you go to to get

00:30:34,000 --> 00:30:37,440
your thing done

00:30:35,279 --> 00:30:38,880
right so so we we've taken special care

00:30:37,440 --> 00:30:39,279
and that and that seems to have helped a

00:30:38,880 --> 00:30:42,960
lot

00:30:39,279 --> 00:30:42,960
uh and we have like a lot of happy users

00:30:43,039 --> 00:30:46,640
that's great go ahead max

00:30:47,760 --> 00:30:51,440
here uh one that we all forget i think

00:30:49,600 --> 00:30:53,520
that's really important and that i i put

00:30:51,440 --> 00:30:54,799
in the in the chat

00:30:53,520 --> 00:30:56,640
from companies that are great with open

00:30:54,799 --> 00:30:58,399
source and sponsor open source if you

00:30:56,640 --> 00:31:00,159
want to join a company that doesn't have

00:30:58,399 --> 00:31:02,960
a pro open source

00:31:00,159 --> 00:31:04,480
or open source by default or they don't

00:31:02,960 --> 00:31:06,320
understand

00:31:04,480 --> 00:31:07,519
make a business case for it it doesn't

00:31:06,320 --> 00:31:09,600
happen naturally

00:31:07,519 --> 00:31:10,640
it's gonna be a lot harder so uh joining

00:31:09,600 --> 00:31:13,200
companies that are pro

00:31:10,640 --> 00:31:14,159
open source is a great way to do this uh

00:31:13,200 --> 00:31:16,320
i joined

00:31:14,159 --> 00:31:18,159
airbnb in 2014 with the premise of

00:31:16,320 --> 00:31:20,480
working on open source that was like

00:31:18,159 --> 00:31:22,720
the one one of the key reasons why i

00:31:20,480 --> 00:31:25,120
wanted to do that so really something

00:31:22,720 --> 00:31:26,240
as you pick your next gig you know maybe

00:31:25,120 --> 00:31:28,000
consider

00:31:26,240 --> 00:31:30,480
uh look at what whether that company is

00:31:28,000 --> 00:31:32,960
sponsoring open source

00:31:30,480 --> 00:31:34,880
absolutely and and as as companies if

00:31:32,960 --> 00:31:37,440
you use open source talk about it

00:31:34,880 --> 00:31:38,080
say you're using it share it contribute

00:31:37,440 --> 00:31:40,640
back

00:31:38,080 --> 00:31:45,600
don't keep it for yourself contribute

00:31:40,640 --> 00:31:45,600

YouTube URL: https://www.youtube.com/watch?v=lsFSM2Z4kPs


