Title: Presto, Today & Beyond - Dipti Borkar, David Simmen, Girish Baliga & Biswapesh Chattopadhyay
Publication date: 2021-03-27
Playlist: PrestoCon Day 2021 - Virtual
Description: 
	Presto, Today & Beyond - Moderated by Dipti Borkar, Ahana; David Simmen, Ahana; Girish Baliga, Uber & Biswapesh Chattopadhyay, Facebook

For more info about Presto, the open source distributed SQL query engine for running interactive analytic queries against data sources of all sizes ranging from gigabytes to petabytes, see: https://prestodb.io/
Captions: 
	00:00:00,080 --> 00:00:03,199
uh up next uh we have our second panel

00:00:02,639 --> 00:00:04,880
of the day

00:00:03,199 --> 00:00:06,879
uh panel i've been you know quite

00:00:04,880 --> 00:00:09,920
anxiously waiting to listen to

00:00:06,879 --> 00:00:12,080
uh we bring in uh deepti back as a

00:00:09,920 --> 00:00:14,799
moderator girish will be joining us

00:00:12,080 --> 00:00:15,440
as well i have two new speakers uh you

00:00:14,799 --> 00:00:16,880
know who will be

00:00:15,440 --> 00:00:19,760
part of this panel let me first

00:00:16,880 --> 00:00:21,039
introduce david simmons uh he's the cto

00:00:19,760 --> 00:00:24,240
and co-founder

00:00:21,039 --> 00:00:25,840
overseeing ahana's technology strategy

00:00:24,240 --> 00:00:27,599
and drives most of the product

00:00:25,840 --> 00:00:29,599
innovation and he has been in

00:00:27,599 --> 00:00:31,840
the industry for a long long time if you

00:00:29,599 --> 00:00:33,360
want to jump over to the speaker page

00:00:31,840 --> 00:00:36,239
and you know see all the work

00:00:33,360 --> 00:00:37,680
exciting work david has done in the

00:00:36,239 --> 00:00:40,320
field of databases

00:00:37,680 --> 00:00:42,719
and you know his focus on making presto

00:00:40,320 --> 00:00:45,280
better would be very exciting

00:00:42,719 --> 00:00:46,399
and the other speaker i also wanted to

00:00:45,280 --> 00:00:49,280
interview panelists

00:00:46,399 --> 00:00:49,920
for this session is uh bishwa bishwa and

00:00:49,280 --> 00:00:53,280
i work

00:00:49,920 --> 00:00:55,840
at facebook uh vishwa has been um

00:00:53,280 --> 00:00:57,440
he's the tech lead for uh a bunch of

00:00:55,840 --> 00:00:59,199
products you know presto sparks

00:00:57,440 --> 00:00:59,520
streaming at facebook which is what we

00:00:59,199 --> 00:01:01,280
call

00:00:59,520 --> 00:01:02,879
as the data infrastructure compute

00:01:01,280 --> 00:01:05,040
engines and he

00:01:02,879 --> 00:01:06,560
is looking at various modernization

00:01:05,040 --> 00:01:09,119
efforts at facebook

00:01:06,560 --> 00:01:10,320
uh so deepti i will let you take over

00:01:09,119 --> 00:01:12,720
the panel from here

00:01:10,320 --> 00:01:14,080
and get some interesting insights from

00:01:12,720 --> 00:01:16,400
all our wonderful panelists

00:01:14,080 --> 00:01:17,680
and girish i didn't reintroduce you but

00:01:16,400 --> 00:01:19,759
you know uh because you were here

00:01:17,680 --> 00:01:21,439
earlier in the day as well but for folks

00:01:19,759 --> 00:01:24,479
who have maybe joined later

00:01:21,439 --> 00:01:26,400
um girish not only is the chair of the

00:01:24,479 --> 00:01:27,840
presto foundation but also tech lead for

00:01:26,400 --> 00:01:31,520
the presto project for

00:01:27,840 --> 00:01:34,320
uber so over to you all right thanks

00:01:31,520 --> 00:01:35,680
amit for the introductions uh great to

00:01:34,320 --> 00:01:39,040
be back on

00:01:35,680 --> 00:01:41,439
uh bishwa girish and dave

00:01:39,040 --> 00:01:43,119
looking forward to this discussion uh

00:01:41,439 --> 00:01:44,159
you know we had an ecosystem panel

00:01:43,119 --> 00:01:46,560
earlier in the day

00:01:44,159 --> 00:01:48,159
and uh it was uh it was quite fun

00:01:46,560 --> 00:01:51,280
talking about how broad

00:01:48,159 --> 00:01:52,320
presto is and the ecosystem around it

00:01:51,280 --> 00:01:55,200
connectors

00:01:52,320 --> 00:01:55,920
layers on top layers below but this one

00:01:55,200 --> 00:01:57,920
is

00:01:55,920 --> 00:02:00,000
uh you know when we were talking earlier

00:01:57,920 --> 00:02:02,000
is about the the core engine right the

00:02:00,000 --> 00:02:03,200
innovation that's happening at the heart

00:02:02,000 --> 00:02:05,759
of the engine

00:02:03,200 --> 00:02:07,360
and um and and the innovation that's

00:02:05,759 --> 00:02:08,399
happening across multiple different

00:02:07,360 --> 00:02:11,599
companies

00:02:08,399 --> 00:02:14,319
um as well um i think all of you

00:02:11,599 --> 00:02:15,280
uh you don't need any additional

00:02:14,319 --> 00:02:17,920
introductions

00:02:15,280 --> 00:02:20,400
uh so let's let's dive right into you

00:02:17,920 --> 00:02:22,800
know one of the first questions

00:02:20,400 --> 00:02:23,599
you know uh six months ago we had a

00:02:22,800 --> 00:02:26,319
discussion

00:02:23,599 --> 00:02:27,360
and uh there's a lot that's happened uh

00:02:26,319 --> 00:02:30,800
in that time frame

00:02:27,360 --> 00:02:32,239
in that period of time um maybe um each

00:02:30,800 --> 00:02:35,440
of you can share a little bit

00:02:32,239 --> 00:02:36,800
about um what's changed uh

00:02:35,440 --> 00:02:38,879
something that you have been really

00:02:36,800 --> 00:02:40,080
excited about that's been delivered in

00:02:38,879 --> 00:02:41,599
the past six months

00:02:40,080 --> 00:02:43,760
uh something that's created a lot of

00:02:41,599 --> 00:02:44,080
impact uh girish let's start off with

00:02:43,760 --> 00:02:46,080
you

00:02:44,080 --> 00:02:47,120
uh maybe share a little bit more about

00:02:46,080 --> 00:02:49,360
presto

00:02:47,120 --> 00:02:50,480
at uber and the things that are uh

00:02:49,360 --> 00:02:52,000
exciting

00:02:50,480 --> 00:02:54,000
the game-changing things that are

00:02:52,000 --> 00:02:55,920
happening

00:02:54,000 --> 00:02:57,200
sure uh thanks t thanks for all the

00:02:55,920 --> 00:02:59,200
introductions and uh

00:02:57,200 --> 00:03:00,800
hey david and viswa nice to see you work

00:02:59,200 --> 00:03:04,000
again in this manner

00:03:00,800 --> 00:03:06,640
um so uh i pressed at uber

00:03:04,000 --> 00:03:07,599
we've been focusing primarily uh on

00:03:06,640 --> 00:03:10,879
using presto

00:03:07,599 --> 00:03:13,920
as an interactive engine um but

00:03:10,879 --> 00:03:14,319
over the last year or 2020 we started

00:03:13,920 --> 00:03:16,879
off

00:03:14,319 --> 00:03:18,159
uh introducing this new product of being

00:03:16,879 --> 00:03:21,440
able to run etl

00:03:18,159 --> 00:03:22,879
workloads on presto um so we started out

00:03:21,440 --> 00:03:27,360
just before rustokon

00:03:22,879 --> 00:03:30,000
and we just launched it for full usage

00:03:27,360 --> 00:03:30,799
around the same time over the last six

00:03:30,000 --> 00:03:33,280
months we've seen

00:03:30,799 --> 00:03:34,879
amazing adoption of that right so people

00:03:33,280 --> 00:03:36,560
are using it across the board they're

00:03:34,879 --> 00:03:37,760
using it for all kinds of use cases it's

00:03:36,560 --> 00:03:40,720
pretty amazing to see

00:03:37,760 --> 00:03:42,400
so that is certainly one big uh success

00:03:40,720 --> 00:03:44,879
story i wanted to call up

00:03:42,400 --> 00:03:46,480
um the other thing we've been doing is

00:03:44,879 --> 00:03:49,840
we've been trying to

00:03:46,480 --> 00:03:50,640
establish presto sql the sql layer of

00:03:49,840 --> 00:03:53,920
presto

00:03:50,640 --> 00:03:56,640
uh as the de facto sequel for

00:03:53,920 --> 00:03:57,040
most data analytics use cases are over

00:03:56,640 --> 00:03:58,720
and

00:03:57,040 --> 00:04:00,720
uh towards that we've been working

00:03:58,720 --> 00:04:03,840
toward presto sql to

00:04:00,720 --> 00:04:05,439
platforms like uh flink and spark on the

00:04:03,840 --> 00:04:06,879
spark side the facebook guys have done

00:04:05,439 --> 00:04:08,879
amazing work so we did a

00:04:06,879 --> 00:04:10,480
successful poc of the stuff that put out

00:04:08,879 --> 00:04:13,120
we're very happy we're waiting for

00:04:10,480 --> 00:04:14,640
ga before we launch it on the flying

00:04:13,120 --> 00:04:16,479
side there are some interesting early

00:04:14,640 --> 00:04:17,600
results i'll probably be sharing in

00:04:16,479 --> 00:04:19,759
future meetups

00:04:17,600 --> 00:04:21,759
so that's that's cool stuff from the

00:04:19,759 --> 00:04:23,360
uber side on brazil

00:04:21,759 --> 00:04:25,280
it's great it's open source in action

00:04:23,360 --> 00:04:28,479
right uh use

00:04:25,280 --> 00:04:30,560
someone contributes in uh the innovation

00:04:28,479 --> 00:04:32,479
and everyone else gets to use it so

00:04:30,560 --> 00:04:33,600
bishop why don't you go next and maybe

00:04:32,479 --> 00:04:35,120
share about uh

00:04:33,600 --> 00:04:36,639
things that you are exci you've been

00:04:35,120 --> 00:04:38,560
excited about uh that

00:04:36,639 --> 00:04:40,960
that have gone into production or have

00:04:38,560 --> 00:04:44,240
been delivered over the last six months

00:04:40,960 --> 00:04:46,880
sure um well i think um

00:04:44,240 --> 00:04:48,560
the two big ones i would say in terms of

00:04:46,880 --> 00:04:51,120
stuff that has landed

00:04:48,560 --> 00:04:52,000
and landed well one of them is the

00:04:51,120 --> 00:04:55,040
raptor x

00:04:52,000 --> 00:04:56,960
effort this is kind of the new set of

00:04:55,040 --> 00:04:59,199
enhancements to presto that makes this

00:04:56,960 --> 00:05:00,720
significantly faster by deploying all

00:04:59,199 --> 00:05:02,560
sorts of techniques around

00:05:00,720 --> 00:05:03,919
you know caching data caching partial

00:05:02,560 --> 00:05:05,360
results um

00:05:03,919 --> 00:05:08,639
a lot of the stuff by the way alibaba

00:05:05,360 --> 00:05:10,720
people talked about earlier today right

00:05:08,639 --> 00:05:12,479
you know smarter metadata caching data

00:05:10,720 --> 00:05:15,600
caching partial browser caching

00:05:12,479 --> 00:05:17,280
all that um getting lose affinity so

00:05:15,600 --> 00:05:18,880
basically you have the benefits of

00:05:17,280 --> 00:05:20,800
disaggregated storage

00:05:18,880 --> 00:05:22,240
but the performance of co-located which

00:05:20,800 --> 00:05:23,759
is kind of really

00:05:22,240 --> 00:05:24,960
kind of a dream combo right if you think

00:05:23,759 --> 00:05:26,720
about it and that's what we're going

00:05:24,960 --> 00:05:28,320
towards i think that

00:05:26,720 --> 00:05:29,840
is a very good step in that direction

00:05:28,320 --> 00:05:31,440
james talked about that

00:05:29,840 --> 00:05:33,280
uh earlier this morning for those who

00:05:31,440 --> 00:05:35,280
were there in quite a bit of detail

00:05:33,280 --> 00:05:36,880
and the other one we just just started

00:05:35,280 --> 00:05:38,400
about started landing just going back to

00:05:36,880 --> 00:05:41,120
galicia's point about etl

00:05:38,400 --> 00:05:42,400
right so we had this presto lbm right

00:05:41,120 --> 00:05:44,320
where we were able to run

00:05:42,400 --> 00:05:46,080
large queries by materializing

00:05:44,320 --> 00:05:48,080
intermediate stages

00:05:46,080 --> 00:05:49,840
now we have restaurant spark which i'm

00:05:48,080 --> 00:05:50,960
very excited about because it actually

00:05:49,840 --> 00:05:55,680
allows you to

00:05:50,960 --> 00:05:58,000
run arbitrarily large data scale queries

00:05:55,680 --> 00:06:00,479
um using the exact same presto set of

00:05:58,000 --> 00:06:03,120
features and semantics and language

00:06:00,479 --> 00:06:04,800
but leverages under the hood the spark

00:06:03,120 --> 00:06:07,440
distributed on time and that gives you a

00:06:04,800 --> 00:06:09,039
host of advantages it allows you to

00:06:07,440 --> 00:06:11,120
leverage elastic compute better it

00:06:09,039 --> 00:06:13,280
allows you to you know size containers

00:06:11,120 --> 00:06:15,520
depending on the job because you know it

00:06:13,280 --> 00:06:16,800
achieves much better isolation you can

00:06:15,520 --> 00:06:18,479
run jobs for days

00:06:16,800 --> 00:06:20,080
and not fail because you know there is

00:06:18,479 --> 00:06:20,880
check pointing at the individual task

00:06:20,080 --> 00:06:22,639
level

00:06:20,880 --> 00:06:25,199
uh and i believe that this essentially

00:06:22,639 --> 00:06:28,479
takes the ideal use case of presto

00:06:25,199 --> 00:06:29,199
to really to the next level and i'm very

00:06:28,479 --> 00:06:30,720
excited about

00:06:29,199 --> 00:06:34,080
where that particular project is going

00:06:30,720 --> 00:06:36,080
to go

00:06:34,080 --> 00:06:38,160
and i talked earlier in the day about um

00:06:36,080 --> 00:06:40,560
how the next phase of the presto

00:06:38,160 --> 00:06:42,319
option is really around strategic

00:06:40,560 --> 00:06:44,319
re-platforming right and

00:06:42,319 --> 00:06:46,319
and that comes with starting with one

00:06:44,319 --> 00:06:47,360
use case and then another and another

00:06:46,319 --> 00:06:49,680
and essentially

00:06:47,360 --> 00:06:51,680
expanding the platform to multiple use

00:06:49,680 --> 00:06:53,680
cases so that's that's great to hear

00:06:51,680 --> 00:06:55,120
uh dave you've you've been in the

00:06:53,680 --> 00:06:58,400
database space uh

00:06:55,120 --> 00:07:00,000
for for a while um you know what has uh

00:06:58,400 --> 00:07:01,599
what have you seen in the in the past

00:07:00,000 --> 00:07:03,360
six months uh perhaps share some

00:07:01,599 --> 00:07:05,360
perspectives

00:07:03,360 --> 00:07:06,479
yeah i mean i joined i joined this uh

00:07:05,360 --> 00:07:08,560
community about

00:07:06,479 --> 00:07:10,000
actually seven months ago so um i've

00:07:08,560 --> 00:07:11,759
been building

00:07:10,000 --> 00:07:14,160
closed proprietary enterprise data

00:07:11,759 --> 00:07:15,680
warehouse systems for

00:07:14,160 --> 00:07:17,919
i don't want to say how long but it's

00:07:15,680 --> 00:07:20,080
like three decades like that

00:07:17,919 --> 00:07:22,080
so what what makes me excited is and

00:07:20,080 --> 00:07:23,520
it's not new i guess it's not a new

00:07:22,080 --> 00:07:24,880
new for everyone here but it's new for

00:07:23,520 --> 00:07:26,240
me it's sort of this emerging

00:07:24,880 --> 00:07:28,639
architectural pattern

00:07:26,240 --> 00:07:30,639
that is sort of looking to let's say

00:07:28,639 --> 00:07:33,039
augment the proprietary

00:07:30,639 --> 00:07:34,960
enterprise data warehouse by enabling

00:07:33,039 --> 00:07:38,240
query transactions say the magic

00:07:34,960 --> 00:07:40,000
capabilities directly on on cloud

00:07:38,240 --> 00:07:41,680
cloud data that's residing in sort of

00:07:40,000 --> 00:07:43,680
these open formats

00:07:41,680 --> 00:07:45,360
and so there's huge advantages of that

00:07:43,680 --> 00:07:47,360
because you know otherwise data is sort

00:07:45,360 --> 00:07:47,840
of locked into these proprietary systems

00:07:47,360 --> 00:07:50,000
so

00:07:47,840 --> 00:07:51,840
you know the term lake house and

00:07:50,000 --> 00:07:53,840
gardner's coined the term accelerated

00:07:51,840 --> 00:07:56,479
analytics for this pattern

00:07:53,840 --> 00:07:57,280
so so what's new is so i'm excited by

00:07:56,479 --> 00:08:00,400
the launch of

00:07:57,280 --> 00:08:02,080
ohana which we launched in december of

00:08:00,400 --> 00:08:03,840
this year with g8 in december this year

00:08:02,080 --> 00:08:05,759
which sort of fits into this accelerated

00:08:03,840 --> 00:08:07,440
analytics architecture

00:08:05,759 --> 00:08:09,039
and so there's a lot of interesting

00:08:07,440 --> 00:08:11,199
challenges there from a technical

00:08:09,039 --> 00:08:13,120
perspective what we're trying to do is

00:08:11,199 --> 00:08:15,360
provide the equivalent of a fully

00:08:13,120 --> 00:08:16,000
featured data management system for the

00:08:15,360 --> 00:08:17,520
data lake

00:08:16,000 --> 00:08:19,199
and it sort of opens up a lot of

00:08:17,520 --> 00:08:20,240
challenges like the first one being that

00:08:19,199 --> 00:08:22,160
we're

00:08:20,240 --> 00:08:24,400
unlike a closed system we're trying to

00:08:22,160 --> 00:08:26,960
build this fully featured system

00:08:24,400 --> 00:08:29,039
with a disaggregated stack of open

00:08:26,960 --> 00:08:30,960
services such as those for metadata for

00:08:29,039 --> 00:08:32,640
transactions for security

00:08:30,960 --> 00:08:34,560
and these services are largely shared

00:08:32,640 --> 00:08:36,800
across the various analytical

00:08:34,560 --> 00:08:37,919
uh engines that are in this accelerated

00:08:36,800 --> 00:08:39,360
environment

00:08:37,919 --> 00:08:42,159
and then the other challenge obviously

00:08:39,360 --> 00:08:42,959
is that the data is etl directly into

00:08:42,159 --> 00:08:46,080
the data lake

00:08:42,959 --> 00:08:48,240
so it's the various analytical engines

00:08:46,080 --> 00:08:49,920
including ours has to sort of live with

00:08:48,240 --> 00:08:51,120
these open table layouts and file

00:08:49,920 --> 00:08:52,560
formats so

00:08:51,120 --> 00:08:54,240
there may be some interesting

00:08:52,560 --> 00:08:56,959
innovations that we'll do there

00:08:54,240 --> 00:08:58,880
um to deal with any sub optimality in

00:08:56,959 --> 00:09:01,760
the data data layout

00:08:58,880 --> 00:09:02,240
um so and obviously we've chosen presta

00:09:01,760 --> 00:09:04,640
db

00:09:02,240 --> 00:09:07,600
as the analog to provide the analytical

00:09:04,640 --> 00:09:10,320
sql capabilities to this environment

00:09:07,600 --> 00:09:12,000
so it's you know it's got great uh

00:09:10,320 --> 00:09:12,880
capabilities for analyzing these open

00:09:12,000 --> 00:09:16,080
data

00:09:12,880 --> 00:09:18,480
open data layouts and uh formats

00:09:16,080 --> 00:09:19,839
and a really compelling technical road

00:09:18,480 --> 00:09:22,000
map that

00:09:19,839 --> 00:09:23,519
we're collaborating on and a strong

00:09:22,000 --> 00:09:27,360
group of technologists like

00:09:23,519 --> 00:09:30,240
like the like garish and biswan his team

00:09:27,360 --> 00:09:31,440
um so yeah presto presto khan is doing a

00:09:30,240 --> 00:09:33,040
great job of highlighting all these

00:09:31,440 --> 00:09:35,360
various aspects so

00:09:33,040 --> 00:09:36,720
so in short i'm super i'm super excited

00:09:35,360 --> 00:09:38,000
about our launch and that was

00:09:36,720 --> 00:09:40,320
the thing that sort of happened in the

00:09:38,000 --> 00:09:41,839
last months yeah yeah and i want to

00:09:40,320 --> 00:09:42,880
share a little bit on the community side

00:09:41,839 --> 00:09:45,440
right we have seen

00:09:42,880 --> 00:09:46,000
a lot of great uh contributions so today

00:09:45,440 --> 00:09:47,360
uh

00:09:46,000 --> 00:09:49,920
twitter talked about the iceberg

00:09:47,360 --> 00:09:51,600
connector um and and we're seeing that

00:09:49,920 --> 00:09:53,360
there are a lot more

00:09:51,600 --> 00:09:54,720
uh formats whether they're table four

00:09:53,360 --> 00:09:57,360
maps whether they are

00:09:54,720 --> 00:09:58,560
uh uh more on the transaction manager

00:09:57,360 --> 00:10:00,560
data management side

00:09:58,560 --> 00:10:02,160
there are a range of different uh

00:10:00,560 --> 00:10:03,440
options that are out there apache hoodie

00:10:02,160 --> 00:10:05,200
we had a couple of

00:10:03,440 --> 00:10:06,800
uh we talked about it uh uber

00:10:05,200 --> 00:10:09,279
extensively uses it

00:10:06,800 --> 00:10:10,320
uh and uh and it's really good to see

00:10:09,279 --> 00:10:13,600
some of those

00:10:10,320 --> 00:10:16,000
being um uh merged in and uh

00:10:13,600 --> 00:10:18,320
really being integrated with with presto

00:10:16,000 --> 00:10:20,320
uh the other aspect is security uh and

00:10:18,320 --> 00:10:23,120
security is that we've seen

00:10:20,320 --> 00:10:23,839
good good progress in uh in a couple of

00:10:23,120 --> 00:10:25,120
different

00:10:23,839 --> 00:10:27,120
ways so it's obviously you need

00:10:25,120 --> 00:10:28,320
integration with existing tools that are

00:10:27,120 --> 00:10:30,959
in the ecosystem

00:10:28,320 --> 00:10:32,959
like ranger uh for fine grain access

00:10:30,959 --> 00:10:36,000
control uh but also

00:10:32,959 --> 00:10:38,720
in the cloud uh the cloud is its whole

00:10:36,000 --> 00:10:39,120
it's a whole new um you know paradigm

00:10:38,720 --> 00:10:42,000
and

00:10:39,120 --> 00:10:42,959
what works there uh and the paradigms

00:10:42,000 --> 00:10:45,920
with aws

00:10:42,959 --> 00:10:46,640
are sometimes very different with um

00:10:45,920 --> 00:10:49,120
from

00:10:46,640 --> 00:10:50,560
the on-prem world right and so there's

00:10:49,120 --> 00:10:54,720
been a lot of good

00:10:50,560 --> 00:10:56,959
um support added to aws specific

00:10:54,720 --> 00:10:58,640
uh aspects as well from uh uh you know

00:10:56,959 --> 00:11:01,120
s3 improvements uh

00:10:58,640 --> 00:11:02,079
im improvements uh from a security

00:11:01,120 --> 00:11:04,079
perspective

00:11:02,079 --> 00:11:05,600
and that's been really phenomenal uh to

00:11:04,079 --> 00:11:08,160
see so um

00:11:05,600 --> 00:11:09,519
yeah it's been a good six months um you

00:11:08,160 --> 00:11:12,160
know it sounds like

00:11:09,519 --> 00:11:13,360
a lot has happened uh in in the six

00:11:12,160 --> 00:11:16,640
months that uh

00:11:13,360 --> 00:11:19,360
since we talked last now there are

00:11:16,640 --> 00:11:21,200
uh other projects you know it's it was

00:11:19,360 --> 00:11:23,279
funny we were talking about this earlier

00:11:21,200 --> 00:11:24,480
as an end user you know as a data

00:11:23,279 --> 00:11:27,440
platform engineer

00:11:24,480 --> 00:11:29,279
there are many choices today um there

00:11:27,440 --> 00:11:30,480
are uh close source choices there are

00:11:29,279 --> 00:11:31,760
open source choices

00:11:30,480 --> 00:11:33,519
uh there's do it yourself there's

00:11:31,760 --> 00:11:35,600
managed services um

00:11:33,519 --> 00:11:38,079
you know it used to be a world where

00:11:35,600 --> 00:11:40,160
there was oracle ibm and microsoft sql

00:11:38,079 --> 00:11:42,640
server and life was easy

00:11:40,160 --> 00:11:43,440
but now there are a lot of other options

00:11:42,640 --> 00:11:45,600
and so

00:11:43,440 --> 00:11:46,720
let's talk a little bit about why a data

00:11:45,600 --> 00:11:49,920
platform engineer

00:11:46,720 --> 00:11:52,639
uh would pick presto right what are the

00:11:49,920 --> 00:11:53,360
uh from your perspectives uh perhaps why

00:11:52,639 --> 00:11:56,480
did you

00:11:53,360 --> 00:11:56,720
uh you know pick it and are investing in

00:11:56,480 --> 00:11:59,600
it

00:11:56,720 --> 00:12:02,160
for for your companies uh and uh putting

00:11:59,600 --> 00:12:04,560
yourself in uh in the end user issues

00:12:02,160 --> 00:12:06,000
uh why why should they you know what is

00:12:04,560 --> 00:12:08,240
in presto that

00:12:06,000 --> 00:12:09,200
they may not get with uh other options

00:12:08,240 --> 00:12:11,680
that are out there

00:12:09,200 --> 00:12:13,040
so maybe um girish you can uh bishop you

00:12:11,680 --> 00:12:16,320
can get started with this one

00:12:13,040 --> 00:12:18,639
and we'll go around

00:12:16,320 --> 00:12:20,000
well i think um i can think of a few

00:12:18,639 --> 00:12:22,720
things um

00:12:20,000 --> 00:12:24,639
one big one obviously this is um this

00:12:22,720 --> 00:12:25,279
doesn't it's not a very obvious feature

00:12:24,639 --> 00:12:27,920
right

00:12:25,279 --> 00:12:29,440
but one of the things that facebook we

00:12:27,920 --> 00:12:31,519
do at facebook is that we run

00:12:29,440 --> 00:12:32,800
literally like tens or even hundreds of

00:12:31,519 --> 00:12:34,480
millions of

00:12:32,800 --> 00:12:36,320
queries on plus two and spark like one

00:12:34,480 --> 00:12:38,240
of the things that we get or rather the

00:12:36,320 --> 00:12:41,040
community gets is i think this

00:12:38,240 --> 00:12:42,000
benefit of really really extra scale

00:12:41,040 --> 00:12:43,680
testing

00:12:42,000 --> 00:12:46,800
like over the last two years we have

00:12:43,680 --> 00:12:48,720
essentially scaled trust over 10x

00:12:46,800 --> 00:12:50,880
and you know we have tested raptor x

00:12:48,720 --> 00:12:54,240
with like beta scale

00:12:50,880 --> 00:12:56,160
you know multipeta scale uh with highly

00:12:54,240 --> 00:12:57,920
heavily highly highly complex workload

00:12:56,160 --> 00:12:59,760
we have gone into the depths of art and

00:12:57,920 --> 00:13:01,839
kind of tuned the codex for

00:12:59,760 --> 00:13:03,440
for example extremely deeply nested

00:13:01,839 --> 00:13:05,360
repeated structure data

00:13:03,440 --> 00:13:06,639
like arrays and maps and all those kind

00:13:05,360 --> 00:13:08,720
of things right we have

00:13:06,639 --> 00:13:10,160
heavily every investor i think uh like

00:13:08,720 --> 00:13:12,880
really really complex like we have

00:13:10,160 --> 00:13:15,519
queries that have literally 100 joins

00:13:12,880 --> 00:13:17,600
right we have queries that are like this

00:13:15,519 --> 00:13:20,399
is the query string is megabytes inside

00:13:17,600 --> 00:13:22,000
right and as as the like the data model

00:13:20,399 --> 00:13:24,000
of facebook is extremely complex so we

00:13:22,000 --> 00:13:25,440
have done this

00:13:24,000 --> 00:13:28,320
like over the last one and a half years

00:13:25,440 --> 00:13:30,399
we've done a really extensive set of

00:13:28,320 --> 00:13:31,440
things about how to make like every

00:13:30,399 --> 00:13:33,440
correctness

00:13:31,440 --> 00:13:35,040
problem is like a step zero at facebook

00:13:33,440 --> 00:13:37,200
right so

00:13:35,040 --> 00:13:39,199
this volume of testing that has gone

00:13:37,200 --> 00:13:40,800
over the last several years i think and

00:13:39,199 --> 00:13:43,360
we continue to

00:13:40,800 --> 00:13:45,120
you know 2x3 x every year i think this

00:13:43,360 --> 00:13:47,360
is a huge value add

00:13:45,120 --> 00:13:48,880
that presto provides and it is kind of

00:13:47,360 --> 00:13:49,360
hard to underestimate the value like

00:13:48,880 --> 00:13:51,279
this is

00:13:49,360 --> 00:13:52,880
oracle literally has like hundreds of

00:13:51,279 --> 00:13:54,320
people working on like millions of

00:13:52,880 --> 00:13:56,320
queries trying to get this kind of thing

00:13:54,320 --> 00:13:58,639
going like for use

00:13:56,320 --> 00:14:00,079
so i would say that uh so that's a big

00:13:58,639 --> 00:14:02,720
one and obviously the other

00:14:00,079 --> 00:14:04,399
use case is that because we are testing

00:14:02,720 --> 00:14:05,760
the limits of presto like if you look at

00:14:04,399 --> 00:14:07,760
the spectrum of like

00:14:05,760 --> 00:14:08,959
you know like thousands or even tens of

00:14:07,760 --> 00:14:11,199
thousands or hundreds of thousands of

00:14:08,959 --> 00:14:13,360
queries of really really tiny queries

00:14:11,199 --> 00:14:15,120
all the way to we just refer to this bad

00:14:13,360 --> 00:14:16,880
job that is going to run for days

00:14:15,120 --> 00:14:18,800
on restaurant spark right and we are

00:14:16,880 --> 00:14:19,760
trying to make preston cover this entire

00:14:18,800 --> 00:14:21,519
spectrum

00:14:19,760 --> 00:14:22,800
right and of course there is other side

00:14:21,519 --> 00:14:24,320
of the spectrum like how many connectors

00:14:22,800 --> 00:14:25,519
we have like we can talk to pretty much

00:14:24,320 --> 00:14:26,480
a lot of these different file formats

00:14:25,519 --> 00:14:28,880
databases

00:14:26,480 --> 00:14:31,279
so the surface area of coverage both in

00:14:28,880 --> 00:14:33,360
terms of this spectrum of use cases

00:14:31,279 --> 00:14:34,639
and the amount of data and the type of

00:14:33,360 --> 00:14:37,279
data we have handled i think it's kind

00:14:34,639 --> 00:14:39,600
of hard to get

00:14:37,279 --> 00:14:40,800
like if you you take examples of oracle

00:14:39,600 --> 00:14:43,120
microsoft i think they can

00:14:40,800 --> 00:14:44,800
kind of only dream of the kind of depth

00:14:43,120 --> 00:14:46,880
and kind of breadth of the

00:14:44,800 --> 00:14:48,720
coverage we have right and we are

00:14:46,880 --> 00:14:50,480
getting continuously better

00:14:48,720 --> 00:14:52,639
like our our pace if anything is

00:14:50,480 --> 00:14:54,480
accelerating so i would say that is

00:14:52,639 --> 00:14:55,680
those are the two like we'll talk about

00:14:54,480 --> 00:14:57,440
you know later uh

00:14:55,680 --> 00:14:59,519
vlogs and all the cool like native code

00:14:57,440 --> 00:15:00,720
acceleration like we are investing in

00:14:59,519 --> 00:15:02,959
a lot of the other people in the

00:15:00,720 --> 00:15:04,720
community investing in so i would say

00:15:02,959 --> 00:15:06,639
those are the main things yeah great

00:15:04,720 --> 00:15:07,440
point uh girish do you just uh leave it

00:15:06,639 --> 00:15:10,880
to facebook

00:15:07,440 --> 00:15:12,959
for the testing or what

00:15:10,880 --> 00:15:12,959
uh

00:15:18,560 --> 00:15:22,079
those are basically the cornerstones why

00:15:20,800 --> 00:15:25,120
you've chosen presto

00:15:22,079 --> 00:15:26,399
right um so as i mentioned before

00:15:25,120 --> 00:15:29,040
we were talking about this four phase

00:15:26,399 --> 00:15:29,040
development and

00:15:29,120 --> 00:15:35,120
about how you adopt presto within your

00:15:32,720 --> 00:15:36,639
individual organization right um so at

00:15:35,120 --> 00:15:37,920
some point you'll start hitting scale

00:15:36,639 --> 00:15:39,199
and when you start getting scale

00:15:37,920 --> 00:15:41,360
everything else becomes secondary

00:15:39,199 --> 00:15:42,000
because when people start depending on

00:15:41,360 --> 00:15:44,079
presto

00:15:42,000 --> 00:15:46,320
for getting that job done and it goes

00:15:44,079 --> 00:15:48,320
down you're gonna hear about it right

00:15:46,320 --> 00:15:50,880
and they're gonna speak because now

00:15:48,320 --> 00:15:54,800
people's jobs are blocked

00:15:50,880 --> 00:15:56,639
so for us i don't think there is another

00:15:54,800 --> 00:15:59,040
comparable engine on the market

00:15:56,639 --> 00:16:00,560
uh in the open source space which gives

00:15:59,040 --> 00:16:01,440
us the kind of guarantees that we get

00:16:00,560 --> 00:16:04,639
with presto

00:16:01,440 --> 00:16:06,079
uh releases at facebook right uh yes i

00:16:04,639 --> 00:16:08,399
mean the features are important

00:16:06,079 --> 00:16:09,120
but i want to be confident that if i

00:16:08,399 --> 00:16:11,360
deploy

00:16:09,120 --> 00:16:14,000
something a download of the web and put

00:16:11,360 --> 00:16:16,000
it out to my thousands of users

00:16:14,000 --> 00:16:17,600
i'm confident that i will not run into

00:16:16,000 --> 00:16:19,040
problems

00:16:17,600 --> 00:16:20,959
of course i mean facebook does most of

00:16:19,040 --> 00:16:23,519
the work we still have

00:16:20,959 --> 00:16:24,480
do some additional work here because we

00:16:23,519 --> 00:16:26,320
use

00:16:24,480 --> 00:16:27,920
different technologies like parquet and

00:16:26,320 --> 00:16:30,160
things like that so we do some

00:16:27,920 --> 00:16:31,920
additional testing on our site but the

00:16:30,160 --> 00:16:33,920
stability the scale those kind of things

00:16:31,920 --> 00:16:37,199
i think are sucked out by

00:16:33,920 --> 00:16:38,800
the facebook testing process um another

00:16:37,199 --> 00:16:42,240
thing i wanted to bring up

00:16:38,800 --> 00:16:45,120
very quickly uh so i i i think

00:16:42,240 --> 00:16:47,519
uh it's good to put yourself in the

00:16:45,120 --> 00:16:48,959
shoes of a data engineer here right so

00:16:47,519 --> 00:16:51,680
if for instance if you're a software

00:16:48,959 --> 00:16:54,079
engineer your development processes you

00:16:51,680 --> 00:16:54,800
pull up an ide uh you drive some code

00:16:54,079 --> 00:16:56,480
you write some

00:16:54,800 --> 00:16:58,160
tests on the side you test it out and

00:16:56,480 --> 00:16:58,639
then you do some development and then

00:16:58,160 --> 00:17:01,279
you

00:16:58,639 --> 00:17:02,560
finally put it in put it into staging

00:17:01,279 --> 00:17:04,400
and then production and then

00:17:02,560 --> 00:17:06,079
that's your process right if you're a

00:17:04,400 --> 00:17:06,640
data engineer it's a similar process

00:17:06,079 --> 00:17:08,480
right

00:17:06,640 --> 00:17:10,480
you first start with your sequel you try

00:17:08,480 --> 00:17:12,480
it out on some small data sets

00:17:10,480 --> 00:17:13,839
uh you explore the data and then you

00:17:12,480 --> 00:17:14,640
figure out what is the sequel you want

00:17:13,839 --> 00:17:16,559
to push

00:17:14,640 --> 00:17:18,000
and then you hit your button and it goes

00:17:16,559 --> 00:17:20,000
to production now that production

00:17:18,000 --> 00:17:22,079
could be a big spark job it could be an

00:17:20,000 --> 00:17:22,799
always on streaming pipeline on flink

00:17:22,079 --> 00:17:25,919
let's say

00:17:22,799 --> 00:17:27,360
or it could be like iqps query uh

00:17:25,919 --> 00:17:29,280
that you're putting on some external

00:17:27,360 --> 00:17:31,039
fashion dashboard right

00:17:29,280 --> 00:17:33,280
for all these use cases the development

00:17:31,039 --> 00:17:34,240
starts with a data engineer or data

00:17:33,280 --> 00:17:38,240
scientist sitting

00:17:34,240 --> 00:17:40,080
with a query builder type interface um

00:17:38,240 --> 00:17:41,679
and doing some basic presta queries

00:17:40,080 --> 00:17:42,960
right and i think

00:17:41,679 --> 00:17:44,640
from my point of view that's the reason

00:17:42,960 --> 00:17:45,760
right if people are starting with presto

00:17:44,640 --> 00:17:47,120
you want to make sure that they can go

00:17:45,760 --> 00:17:48,480
all the way they don't have to

00:17:47,120 --> 00:17:50,160
move to another platform and they need

00:17:48,480 --> 00:17:52,960
to hit production order

00:17:50,160 --> 00:17:54,080
um so that's another reason why i think

00:17:52,960 --> 00:17:55,919
it's important for us to

00:17:54,080 --> 00:17:57,919
invest in testing dave anything more to

00:17:55,919 --> 00:18:01,600
add to that

00:17:57,919 --> 00:18:03,280
um i would yeah i mean obviously presto

00:18:01,600 --> 00:18:05,679
is a great distributed

00:18:03,280 --> 00:18:07,440
you know ansi sql implementation it's

00:18:05,679 --> 00:18:07,919
got support for everything you need to

00:18:07,440 --> 00:18:11,120
run

00:18:07,919 --> 00:18:14,400
you know tpcds press uh facebook's

00:18:11,120 --> 00:18:15,520
running it you know interact with sql at

00:18:14,400 --> 00:18:17,600
the scale of multi

00:18:15,520 --> 00:18:18,880
thousands of servers and multi-petabytes

00:18:17,600 --> 00:18:21,120
of data so

00:18:18,880 --> 00:18:22,720
uh visual i mentioned all that stuff

00:18:21,120 --> 00:18:26,240
highly optimized for

00:18:22,720 --> 00:18:28,080
you know for orc and parquet data so

00:18:26,240 --> 00:18:29,919
i would imagine a platform engineer will

00:18:28,080 --> 00:18:32,160
likely be looking to build

00:18:29,919 --> 00:18:33,039
out sort of their own open data lake

00:18:32,160 --> 00:18:35,039
based

00:18:33,039 --> 00:18:36,400
accelerated analytics environment which

00:18:35,039 --> 00:18:38,400
is comprised of

00:18:36,400 --> 00:18:40,240
a bunch of shared services and best of

00:18:38,400 --> 00:18:43,039
breed analytical engines so

00:18:40,240 --> 00:18:45,039
you know so so you know so did all the

00:18:43,039 --> 00:18:47,039
great stuff that facebook's doing and

00:18:45,039 --> 00:18:49,120
and uh uber and we'd like to collaborate

00:18:47,039 --> 00:18:49,760
with with the deep tech but then there's

00:18:49,120 --> 00:18:51,919
companies like

00:18:49,760 --> 00:18:53,440
hana that are looking to build the

00:18:51,919 --> 00:18:55,600
integrations for these types of

00:18:53,440 --> 00:18:56,640
accelerated analytics environments with

00:18:55,600 --> 00:18:59,039
the different types of

00:18:56,640 --> 00:19:01,520
um metadata services you mentioned

00:18:59,039 --> 00:19:03,919
security services like ranger earlier

00:19:01,520 --> 00:19:05,840
transactional services likely so it's

00:19:03,919 --> 00:19:07,600
gonna you know so the combination of

00:19:05,840 --> 00:19:09,120
you know all this performance and

00:19:07,600 --> 00:19:10,720
scalability work and then

00:19:09,120 --> 00:19:12,240
all the integrations that will sort of

00:19:10,720 --> 00:19:14,080
enable

00:19:12,240 --> 00:19:15,679
presto to work in this sort of

00:19:14,080 --> 00:19:16,000
accelerated analytics environment i

00:19:15,679 --> 00:19:18,400
think

00:19:16,000 --> 00:19:19,200
over the next 12 to 18 months and

00:19:18,400 --> 00:19:20,880
there's really

00:19:19,200 --> 00:19:23,039
there's no better choice than than sort

00:19:20,880 --> 00:19:23,440
of presto db for this with this type of

00:19:23,039 --> 00:19:26,480
uh

00:19:23,440 --> 00:19:28,400
platform engineering yeah and there's i

00:19:26,480 --> 00:19:30,240
think a big one is just a future road

00:19:28,400 --> 00:19:30,960
map right and there's a few questions

00:19:30,240 --> 00:19:33,200
around

00:19:30,960 --> 00:19:34,480
uh some of these things uh you know what

00:19:33,200 --> 00:19:35,520
there's there's a question around

00:19:34,480 --> 00:19:37,360
resiliency

00:19:35,520 --> 00:19:39,120
you know when a worker node going down

00:19:37,360 --> 00:19:39,760
and i know i've had this conversation

00:19:39,120 --> 00:19:42,000
with

00:19:39,760 --> 00:19:43,919
with uh uh some of you here where it's

00:19:42,000 --> 00:19:46,960
like oh okay can we get more fault

00:19:43,919 --> 00:19:49,440
that it's intro query that

00:19:46,960 --> 00:19:50,160
allows allows us to really use the power

00:19:49,440 --> 00:19:52,559
of the cloud

00:19:50,160 --> 00:19:53,520
and uh scale up scale down in any in any

00:19:52,559 --> 00:19:55,120
way right

00:19:53,520 --> 00:19:56,640
so maybe bishwa talk a little bit about

00:19:55,120 --> 00:19:58,320
that uh uh you know

00:19:56,640 --> 00:20:01,039
i think you've answered it anything more

00:19:58,320 --> 00:20:03,760
to add on the on the floor tolerance

00:20:01,039 --> 00:20:05,280
no as i said um i think this is on top

00:20:03,760 --> 00:20:06,080
of our mind like we have very similar

00:20:05,280 --> 00:20:07,600
things at facebook

00:20:06,080 --> 00:20:09,039
like we have this project called effect

00:20:07,600 --> 00:20:09,840
that you know is essentially about how

00:20:09,039 --> 00:20:11,840
do we bring like

00:20:09,840 --> 00:20:13,840
spot instances or elastic instances as

00:20:11,840 --> 00:20:15,039
we say right and today we have kind of

00:20:13,840 --> 00:20:16,720
the solution where we break

00:20:15,039 --> 00:20:18,480
up and down you know clusters on the fly

00:20:16,720 --> 00:20:21,280
based on certain parameters and

00:20:18,480 --> 00:20:22,159
it kind of works but not really and uh

00:20:21,280 --> 00:20:24,720
this is actually

00:20:22,159 --> 00:20:26,320
one of the most important things we want

00:20:24,720 --> 00:20:29,039
to do and as i said in the

00:20:26,320 --> 00:20:31,039
respond response to the question uh with

00:20:29,039 --> 00:20:32,799
restaurant spark you kind of get that

00:20:31,039 --> 00:20:34,720
right yeah for etl long-running

00:20:32,799 --> 00:20:36,240
workloads where it is the most important

00:20:34,720 --> 00:20:37,919
really like i mean if you have a you

00:20:36,240 --> 00:20:38,559
know one-minute job you can just retry

00:20:37,919 --> 00:20:40,240
the

00:20:38,559 --> 00:20:41,919
query right it's a lot cheaper to do

00:20:40,240 --> 00:20:43,760
that if you have a 10-hour job that you

00:20:41,919 --> 00:20:45,039
just can't really try so

00:20:43,760 --> 00:20:47,600
but we actually do want to bring it

00:20:45,039 --> 00:20:49,440
because apart from the fact that

00:20:47,600 --> 00:20:51,520
so today the problem is not only just

00:20:49,440 --> 00:20:53,360
resilience the problem is actually

00:20:51,520 --> 00:20:55,120
at the other end of the strictum because

00:20:53,360 --> 00:20:57,120
if you want to get very low latency you

00:20:55,120 --> 00:20:59,600
need to be able to speculatively retry

00:20:57,120 --> 00:21:01,840
individual tasks in multiple workers and

00:20:59,600 --> 00:21:03,840
i recommend everybody reads the tale at

00:21:01,840 --> 00:21:06,000
scale paper by jeff dean

00:21:03,840 --> 00:21:08,720
it has a really fantastic explanation of

00:21:06,000 --> 00:21:09,600
why low latency requires speculative

00:21:08,720 --> 00:21:11,679
execution

00:21:09,600 --> 00:21:13,120
right so we do want to bring this to

00:21:11,679 --> 00:21:14,080
classic pistol and i do believe this

00:21:13,120 --> 00:21:15,840
will be a

00:21:14,080 --> 00:21:17,200
significant improvement in terms of

00:21:15,840 --> 00:21:18,880
actually improving the latency of

00:21:17,200 --> 00:21:20,400
interactive job funnily enough

00:21:18,880 --> 00:21:22,320
right so it actually works in both side

00:21:20,400 --> 00:21:25,360
of the spectrum so yeah we are

00:21:22,320 --> 00:21:27,840
definitely going to work on this

00:21:25,360 --> 00:21:28,880
that's great um now in terms of the

00:21:27,840 --> 00:21:30,640
ecosystem

00:21:28,880 --> 00:21:32,240
uh you know there let's talk a little

00:21:30,640 --> 00:21:35,280
bit about the extensions

00:21:32,240 --> 00:21:36,640
right um so there's the core engine we

00:21:35,280 --> 00:21:39,520
talked a little bit about that

00:21:36,640 --> 00:21:41,440
um we've uh discussed raptor x today a

00:21:39,520 --> 00:21:44,240
little bit about arya

00:21:41,440 --> 00:21:45,600
are there other extensions that um that

00:21:44,240 --> 00:21:48,559
you're looking at building

00:21:45,600 --> 00:21:50,000
adding on to what already exists on uh

00:21:48,559 --> 00:21:52,320
on classic presto

00:21:50,000 --> 00:21:54,400
uh and maybe we can uh have a discussion

00:21:52,320 --> 00:21:56,960
around around that

00:21:54,400 --> 00:22:00,080
uh dave do you wanna get uh started on

00:21:56,960 --> 00:22:00,080
this one first perhaps

00:22:02,080 --> 00:22:05,520
what was the question like the

00:22:04,000 --> 00:22:08,799
extensions on presto

00:22:05,520 --> 00:22:10,559
around preston yeah i mean for us

00:22:08,799 --> 00:22:12,799
i think it's it's sort of what i said

00:22:10,559 --> 00:22:13,679
earlier right the the challenge for us

00:22:12,799 --> 00:22:16,159
is to

00:22:13,679 --> 00:22:18,159
provide you know capabilities like asset

00:22:16,159 --> 00:22:20,240
transactions data versioning auditing

00:22:18,159 --> 00:22:21,840
indexing caching

00:22:20,240 --> 00:22:23,840
cost performance scalable core

00:22:21,840 --> 00:22:26,880
optimization execution via this

00:22:23,840 --> 00:22:28,559
disaggregated stack of services right so

00:22:26,880 --> 00:22:31,440
one set of integrations that we hope to

00:22:28,559 --> 00:22:33,919
bring to it is sort of you know like we

00:22:31,440 --> 00:22:35,679
we uh contributed the apache ranger

00:22:33,919 --> 00:22:37,840
plug-in as an example

00:22:35,679 --> 00:22:39,919
recently to the community so we'll look

00:22:37,840 --> 00:22:41,840
to make extensions to provide

00:22:39,919 --> 00:22:44,000
capabilities like snapshot isolation

00:22:41,840 --> 00:22:45,679
time travel maybe ultimately rewrite

00:22:44,000 --> 00:22:48,960
transactions by exploiting

00:22:45,679 --> 00:22:50,720
services like hoodie um

00:22:48,960 --> 00:22:52,320
you know we come at it from a public

00:22:50,720 --> 00:22:54,000
cloud perspective so

00:22:52,320 --> 00:22:55,919
you know extension to the hive connector

00:22:54,000 --> 00:22:58,400
and raptor x to fully

00:22:55,919 --> 00:22:58,960
utilize um the full i o bandwidth of

00:22:58,400 --> 00:23:02,080
cloud

00:22:58,960 --> 00:23:03,840
object stores like s3 you know using uh

00:23:02,080 --> 00:23:04,720
prefetching and pretty low io so we'll

00:23:03,840 --> 00:23:06,559
help extend

00:23:04,720 --> 00:23:08,320
add performance extensions to the

00:23:06,559 --> 00:23:09,919
existing connectors so

00:23:08,320 --> 00:23:11,440
those are sort of the examples of some

00:23:09,919 --> 00:23:12,480
of the things i think that we'll we'll

00:23:11,440 --> 00:23:14,559
be investing in

00:23:12,480 --> 00:23:16,799
um over time over the next 12 to 18

00:23:14,559 --> 00:23:16,799
months

00:23:17,039 --> 00:23:23,919
that's great girish yeah sure so

00:23:20,640 --> 00:23:24,960
uh from uber side i think uh one area of

00:23:23,919 --> 00:23:28,480
investment is

00:23:24,960 --> 00:23:31,840
around making presto as the uh de facto

00:23:28,480 --> 00:23:33,280
uh data analytics ecosystem right and so

00:23:31,840 --> 00:23:35,120
what it means is you write your presto

00:23:33,280 --> 00:23:36,640
sql query try it out in

00:23:35,120 --> 00:23:38,720
on the classic presto and then you're

00:23:36,640 --> 00:23:41,600
able to hit it to production in

00:23:38,720 --> 00:23:43,760
one of different ways um so we've

00:23:41,600 --> 00:23:45,760
already done some work on putting presto

00:23:43,760 --> 00:23:48,320
for low latency high qps queries on top

00:23:45,760 --> 00:23:50,799
of pino

00:23:48,320 --> 00:23:51,760
and we're working with the pinhole

00:23:50,799 --> 00:23:53,679
community on that

00:23:51,760 --> 00:23:55,440
and adding additional features like

00:23:53,679 --> 00:23:58,640
upsurge drives all this kind of stuff

00:23:55,440 --> 00:24:00,720
uh so that is one area uh the other area

00:23:58,640 --> 00:24:03,279
is when we talk about production at uber

00:24:00,720 --> 00:24:05,120
uh predominantly these jobs are

00:24:03,279 --> 00:24:06,320
essentially long-running streaming jobs

00:24:05,120 --> 00:24:06,960
right like that's what we care about

00:24:06,320 --> 00:24:10,400
real time

00:24:06,960 --> 00:24:10,720
into it and a lot of that workload runs

00:24:10,400 --> 00:24:13,840
on

00:24:10,720 --> 00:24:17,360
apache flink um so as of today people

00:24:13,840 --> 00:24:20,480
basically write jobs using either

00:24:17,360 --> 00:24:22,400
java on flame or fling comes out of the

00:24:20,480 --> 00:24:23,760
box with the cassette sql support

00:24:22,400 --> 00:24:25,679
what we want to do is we want to take

00:24:23,760 --> 00:24:27,279
presto sql and be able to run these as

00:24:25,679 --> 00:24:28,720
flink jobs so that's another area we're

00:24:27,279 --> 00:24:32,559
investing in

00:24:28,720 --> 00:24:34,400
and also restaurant spark the

00:24:32,559 --> 00:24:36,000
stuff that facebook folks are working on

00:24:34,400 --> 00:24:37,120
and we try to talk we love it we want to

00:24:36,000 --> 00:24:40,720
partner and

00:24:37,120 --> 00:24:42,720
do more stuff so that's those are the

00:24:40,720 --> 00:24:44,559
areas we're currently looking at

00:24:42,720 --> 00:24:45,760
all right um be sure anything more to

00:24:44,559 --> 00:24:47,360
add to that from an ecosystem

00:24:45,760 --> 00:24:50,480
perspective

00:24:47,360 --> 00:24:52,000
well um i think this is uh all

00:24:50,480 --> 00:24:53,760
this stuff is great i think i'm really

00:24:52,000 --> 00:24:54,559
excited one thing i wanted to point out

00:24:53,760 --> 00:24:57,200
is that

00:24:54,559 --> 00:24:59,360
i think uh a convergence angle is kind

00:24:57,200 --> 00:25:01,200
of important like this the fact that we

00:24:59,360 --> 00:25:03,279
all need kind of these dmls and kind of

00:25:01,200 --> 00:25:04,640
rich types and all of this stuff right

00:25:03,279 --> 00:25:06,400
and one of the challenges we have is

00:25:04,640 --> 00:25:08,400
that it is not all about trust like for

00:25:06,400 --> 00:25:09,279
example the file format we use the meta

00:25:08,400 --> 00:25:11,840
store that we use

00:25:09,279 --> 00:25:13,039
the metastar the big one is really gets

00:25:11,840 --> 00:25:14,480
in the way because you have to

00:25:13,039 --> 00:25:16,159
a lot of these actually require like

00:25:14,480 --> 00:25:17,440
materialized views you can't really do a

00:25:16,159 --> 00:25:19,039
good job with windows views unless you

00:25:17,440 --> 00:25:21,120
have a very tight integration with meta

00:25:19,039 --> 00:25:22,559
same with real time data same with so

00:25:21,120 --> 00:25:24,640
one of the things i'm really

00:25:22,559 --> 00:25:27,039
looking forward to is to how do we

00:25:24,640 --> 00:25:28,799
expand this collaborate

00:25:27,039 --> 00:25:30,799
where we can build this and this is

00:25:28,799 --> 00:25:33,039
where you know like data breaks

00:25:30,799 --> 00:25:34,400
and uh snowflake have a lot of advantage

00:25:33,039 --> 00:25:35,039
because they own and control the

00:25:34,400 --> 00:25:37,600
ecosystem

00:25:35,039 --> 00:25:39,440
through you know delta ortho snowflakes

00:25:37,600 --> 00:25:40,080
on like foundation db based metastores

00:25:39,440 --> 00:25:41,520
or whatever

00:25:40,080 --> 00:25:43,520
that they can build these features much

00:25:41,520 --> 00:25:45,679
more quickly and much more efficiently

00:25:43,520 --> 00:25:47,120
so this closed ecosystem but that

00:25:45,679 --> 00:25:47,840
doesn't mean that the ecosystem has to

00:25:47,120 --> 00:25:49,279
be closed

00:25:47,840 --> 00:25:51,520
right we can still have an open

00:25:49,279 --> 00:25:51,919
ecosystem but still converge on this you

00:25:51,520 --> 00:25:53,760
know

00:25:51,919 --> 00:25:55,520
richer protocols with the metadata and

00:25:53,760 --> 00:25:56,880
stuff and those i think that is

00:25:55,520 --> 00:25:58,400
to me is very exciting and this is

00:25:56,880 --> 00:25:59,120
something that we have started seriously

00:25:58,400 --> 00:26:01,679
thinking about

00:25:59,120 --> 00:26:02,960
what do we do there should we just end

00:26:01,679 --> 00:26:04,960
mass adopt iceberg

00:26:02,960 --> 00:26:06,000
does it really scale to this million qps

00:26:04,960 --> 00:26:08,480
end of the spectrum

00:26:06,000 --> 00:26:09,679
i don't know should we just extend i'll

00:26:08,480 --> 00:26:10,000
make a story should we build something

00:26:09,679 --> 00:26:12,240
brand

00:26:10,000 --> 00:26:13,919
new that has all of these properties

00:26:12,240 --> 00:26:14,960
that can actually compete with snowflake

00:26:13,919 --> 00:26:17,919
for example

00:26:14,960 --> 00:26:18,480
uh so not really i mean this ecosystem

00:26:17,919 --> 00:26:20,320
this

00:26:18,480 --> 00:26:21,520
i feel that is a corner store of

00:26:20,320 --> 00:26:24,559
building a

00:26:21,520 --> 00:26:26,080
uh truly competitive big data ecosystem

00:26:24,559 --> 00:26:27,919
yeah absolutely i mean you know the

00:26:26,080 --> 00:26:30,720
interesting thing is uh

00:26:27,919 --> 00:26:32,240
the the large internet companies see it

00:26:30,720 --> 00:26:34,720
one way right but when you have a three

00:26:32,240 --> 00:26:36,640
person data platform engineering team

00:26:34,720 --> 00:26:38,320
you see it very differently and you just

00:26:36,640 --> 00:26:40,400
wanted to work out of the box

00:26:38,320 --> 00:26:42,080
and so uh you know from a hana

00:26:40,400 --> 00:26:43,039
perspective or a cloud services

00:26:42,080 --> 00:26:45,840
perspective

00:26:43,039 --> 00:26:47,039
um any anything that takes the just the

00:26:45,840 --> 00:26:48,960
query engine

00:26:47,039 --> 00:26:50,480
you absolutely then need to say okay do

00:26:48,960 --> 00:26:52,000
i use um

00:26:50,480 --> 00:26:54,159
bring up an instance just for the hive

00:26:52,000 --> 00:26:56,640
metastore or do i connect to glue

00:26:54,159 --> 00:26:58,960
right which one or both and some of the

00:26:56,640 --> 00:27:01,760
design choices that we've had to make

00:26:58,960 --> 00:27:02,640
are both because um you get there are

00:27:01,760 --> 00:27:05,520
advantages

00:27:02,640 --> 00:27:07,279
of of the cloud services obviously

00:27:05,520 --> 00:27:09,360
because a lot of

00:27:07,279 --> 00:27:10,559
these cloud services may already be used

00:27:09,360 --> 00:27:13,200
by end users

00:27:10,559 --> 00:27:13,919
but then there is a beauty of having a

00:27:13,200 --> 00:27:16,320
management

00:27:13,919 --> 00:27:17,360
store that the a service is just taking

00:27:16,320 --> 00:27:19,279
care of for you

00:27:17,360 --> 00:27:20,960
and you can build optimizations on top

00:27:19,279 --> 00:27:22,640
of that um which

00:27:20,960 --> 00:27:24,880
which is what you know we're looking at

00:27:22,640 --> 00:27:27,039
we just upgraded to hive 3

00:27:24,880 --> 00:27:28,320
as an example so that we could leverage

00:27:27,039 --> 00:27:31,679
some of these

00:27:28,320 --> 00:27:31,919
capabilities in presto which don't exist

00:27:31,679 --> 00:27:34,399
i

00:27:31,919 --> 00:27:36,320
add add you know ddl for it or you know

00:27:34,399 --> 00:27:37,279
add add additional support for it and

00:27:36,320 --> 00:27:39,760
optimize

00:27:37,279 --> 00:27:40,559
on top of it but i think the flexibility

00:27:39,760 --> 00:27:43,760
of it for

00:27:40,559 --> 00:27:44,640
smaller teams that are not uh facebook

00:27:43,760 --> 00:27:47,200
uber

00:27:44,640 --> 00:27:48,080
twitter that that is that is important

00:27:47,200 --> 00:27:49,919
and um

00:27:48,080 --> 00:27:52,159
and and you know one of the things that

00:27:49,919 --> 00:27:53,840
solves it is a managed service and

00:27:52,159 --> 00:27:55,760
somebody had a question earlier about

00:27:53,840 --> 00:27:58,880
let me uh scroll up here

00:27:55,760 --> 00:28:02,799
around uh kubernetes right because

00:27:58,880 --> 00:28:03,440
uh we are looking at presto is it's

00:28:02,799 --> 00:28:05,600
great it's

00:28:03,440 --> 00:28:06,640
in some ways it's a stateless engine

00:28:05,600 --> 00:28:08,720
that can uh

00:28:06,640 --> 00:28:10,399
that we you know run it can be run in a

00:28:08,720 --> 00:28:12,799
containerized environment

00:28:10,399 --> 00:28:13,919
uh for many of the managed services they

00:28:12,799 --> 00:28:16,240
run on

00:28:13,919 --> 00:28:17,360
kubernetes some flavor of kubernetes and

00:28:16,240 --> 00:28:18,880
so the specific

00:28:17,360 --> 00:28:21,360
question around you know official

00:28:18,880 --> 00:28:24,240
support for perhaps an operator or a

00:28:21,360 --> 00:28:24,640
you know um kubernetes controller uh are

00:28:24,240 --> 00:28:27,679
you

00:28:24,640 --> 00:28:29,279
uh um bishop and girish are you using uh

00:28:27,679 --> 00:28:30,240
kubernetes much with presto at the

00:28:29,279 --> 00:28:33,520
moment and

00:28:30,240 --> 00:28:36,720
uh any plans around that

00:28:33,520 --> 00:28:39,120
not really i mean facebook has its own

00:28:36,720 --> 00:28:40,960
kubernetes like we run on tupperware

00:28:39,120 --> 00:28:44,320
there's actually a paper on tupperware

00:28:40,960 --> 00:28:46,799
which was released last year um

00:28:44,320 --> 00:28:47,679
we also have a thing called chronos

00:28:46,799 --> 00:28:48,880
which essentially

00:28:47,679 --> 00:28:51,520
just kind of think of it as a yarn

00:28:48,880 --> 00:28:53,360
equivalent that is good for you know

00:28:51,520 --> 00:28:55,200
bin packing lots of small tasks at a

00:28:53,360 --> 00:28:55,919
poor worker level this is what we use

00:28:55,200 --> 00:28:59,120
for spark

00:28:55,919 --> 00:28:59,840
right we don't currently have plans to

00:28:59,120 --> 00:29:01,520
adopt uh

00:28:59,840 --> 00:29:03,200
kubernetes i don't think so but i'm

00:29:01,520 --> 00:29:04,640
really excited about the ability for

00:29:03,200 --> 00:29:06,480
presto to run on different container

00:29:04,640 --> 00:29:07,919
management systems i do know some of the

00:29:06,480 --> 00:29:10,240
old kubernetes folks

00:29:07,919 --> 00:29:12,559
uh from google days like the board right

00:29:10,240 --> 00:29:15,440
folks and borg is just freaking awesome

00:29:12,559 --> 00:29:17,840
right so if we can get something like

00:29:15,440 --> 00:29:20,000
bargain the open source ecosystem

00:29:17,840 --> 00:29:20,880
you know i think it would be a very

00:29:20,000 --> 00:29:24,080
powerful

00:29:20,880 --> 00:29:25,679
thing anything else to add dave or give

00:29:24,080 --> 00:29:28,640
us

00:29:25,679 --> 00:29:29,600
yeah so from uber side uh we we also

00:29:28,640 --> 00:29:31,919
have uh

00:29:29,600 --> 00:29:33,520
platforms built internally uh similar to

00:29:31,919 --> 00:29:36,720
kubernetes so we have

00:29:33,520 --> 00:29:38,080
a stateless job management or

00:29:36,720 --> 00:29:39,200
application management platform and a

00:29:38,080 --> 00:29:40,880
stateful one

00:29:39,200 --> 00:29:43,440
um and we're currently trying to trust

00:29:40,880 --> 00:29:45,520
on both but interestingly uh

00:29:43,440 --> 00:29:47,440
at uber we are also considering looking

00:29:45,520 --> 00:29:49,440
at kubernetes as we

00:29:47,440 --> 00:29:51,360
think of moving more and more of our

00:29:49,440 --> 00:29:53,440
compute into public cloud

00:29:51,360 --> 00:29:55,120
uh and i'm pretty excited to try out

00:29:53,440 --> 00:29:56,640
restaurant quantities it might happen

00:29:55,120 --> 00:29:59,600
more on like

00:29:56,640 --> 00:30:01,279
the h2 timeline but uh it's definitely

00:29:59,600 --> 00:30:03,760
something on the horizon first yeah

00:30:01,279 --> 00:30:04,640
you know as as i uh architected the

00:30:03,760 --> 00:30:07,679
service

00:30:04,640 --> 00:30:08,080
uh we uh for presto presto runs on eks

00:30:07,679 --> 00:30:11,360
uh

00:30:08,080 --> 00:30:14,000
and uh so for all all customers that

00:30:11,360 --> 00:30:15,919
that are on uh using our han actually

00:30:14,000 --> 00:30:17,440
are just running natively on eks they

00:30:15,919 --> 00:30:19,120
don't even know it

00:30:17,440 --> 00:30:20,799
and that's that's the way it should be

00:30:19,120 --> 00:30:23,440
where the underlying operating system

00:30:20,799 --> 00:30:24,960
essentially is a detail right and and

00:30:23,440 --> 00:30:27,440
the rest of it is uh

00:30:24,960 --> 00:30:29,679
is orchestrated but we are looking at uh

00:30:27,440 --> 00:30:31,200
um a kubernetes operator to

00:30:29,679 --> 00:30:32,880
to uh you know just have more

00:30:31,200 --> 00:30:35,120
multi-cloud and and

00:30:32,880 --> 00:30:36,960
you know we'll be open whatever we come

00:30:35,120 --> 00:30:38,799
up with will be open source so um

00:30:36,960 --> 00:30:40,960
we'll we'll share more along the way uh

00:30:38,799 --> 00:30:42,799
later in the year let's move on to the

00:30:40,960 --> 00:30:44,399
the last question which is really about

00:30:42,799 --> 00:30:46,080
the future of presto

00:30:44,399 --> 00:30:48,080
and uh bishwa you have a state of the

00:30:46,080 --> 00:30:49,919
union talk a little bit later in the day

00:30:48,080 --> 00:30:52,399
uh to go into everyone's been waiting

00:30:49,919 --> 00:30:54,240
for uh you know what what is that uh but

00:30:52,399 --> 00:30:56,159
maybe spill the beans a little bit

00:30:54,240 --> 00:30:58,240
uh for us in this session uh just a

00:30:56,159 --> 00:31:00,480
teaser on what is coming

00:30:58,240 --> 00:31:02,559
um uh girish and dave what are you

00:31:00,480 --> 00:31:05,679
excited about in the next six months

00:31:02,559 --> 00:31:08,000
right we meet again in september at uh

00:31:05,679 --> 00:31:08,799
the big presto con event which will uh

00:31:08,000 --> 00:31:11,440
uh hopefully

00:31:08,799 --> 00:31:12,159
maybe perhaps in person we'll see how it

00:31:11,440 --> 00:31:15,200
goes

00:31:12,159 --> 00:31:18,000
uh fingers crossed

00:31:15,200 --> 00:31:19,440
um but what you know what is it that you

00:31:18,000 --> 00:31:21,679
want to get done in the next six

00:31:19,440 --> 00:31:24,720
six months and uh uh what does the

00:31:21,679 --> 00:31:26,880
future of presto look like

00:31:24,720 --> 00:31:28,159
six months well um in my in my talk

00:31:26,880 --> 00:31:29,679
later i will uh

00:31:28,159 --> 00:31:31,840
talk a little bit about the next six

00:31:29,679 --> 00:31:33,519
years more like well but uh we'll cover

00:31:31,840 --> 00:31:36,799
a bit of the next six months as well

00:31:33,519 --> 00:31:39,679
uh immediate term as i said um i think

00:31:36,799 --> 00:31:42,159
uh some of the things that we are coming

00:31:39,679 --> 00:31:43,760
down the line one is that

00:31:42,159 --> 00:31:45,760
things like speculative execution and

00:31:43,760 --> 00:31:47,279
partial result streaming and things like

00:31:45,760 --> 00:31:48,880
that which will make interactive space

00:31:47,279 --> 00:31:50,399
even better we've got fragment result

00:31:48,880 --> 00:31:51,200
caches and all kinds of very interesting

00:31:50,399 --> 00:31:53,840
things on the

00:31:51,200 --> 00:31:55,120
uh interactive space restaurants part

00:31:53,840 --> 00:31:56,399
getting more mature is something i'm

00:31:55,120 --> 00:31:58,240
really excited about because

00:31:56,399 --> 00:31:59,919
this finally gives people a way to write

00:31:58,240 --> 00:32:01,519
their query once and just run it

00:31:59,919 --> 00:32:03,120
anywhere whether it's a dashboard

00:32:01,519 --> 00:32:04,640
in fact one very exciting thing that

00:32:03,120 --> 00:32:06,080
this is unfortunately internal

00:32:04,640 --> 00:32:08,159
that we are actually putting the same

00:32:06,080 --> 00:32:09,600
language on streaming as well so we are

00:32:08,159 --> 00:32:10,799
doing this project called core sequel

00:32:09,600 --> 00:32:12,399
i'll talk a little bit about that which

00:32:10,799 --> 00:32:13,679
basically takes bestow sql and adds a

00:32:12,399 --> 00:32:15,679
bunch of streaming graph

00:32:13,679 --> 00:32:17,760
bridge types and other extensions and

00:32:15,679 --> 00:32:19,200
makes that kind of the lingua franca

00:32:17,760 --> 00:32:21,279
for people who have come from google i

00:32:19,200 --> 00:32:23,120
think google sequel which is open source

00:32:21,279 --> 00:32:25,440
equal kind of is trying to achieve

00:32:23,120 --> 00:32:27,360
very similar goals and i'm excited about

00:32:25,440 --> 00:32:28,320
that uh kind of maturing in the next six

00:32:27,360 --> 00:32:31,200
months right

00:32:28,320 --> 00:32:32,559
uh i think velox a lot of people have

00:32:31,200 --> 00:32:33,039
been asking me i'll talk a little bit in

00:32:32,559 --> 00:32:35,679
my

00:32:33,039 --> 00:32:37,039
our c plus plus native accelerator story

00:32:35,679 --> 00:32:38,720
i feel that is going to

00:32:37,039 --> 00:32:40,960
hopefully land in the next six months at

00:32:38,720 --> 00:32:43,519
least for some initial workloads

00:32:40,960 --> 00:32:45,279
um i'm excited about that oh uh and also

00:32:43,519 --> 00:32:46,960
the you know just the scale stuff like

00:32:45,279 --> 00:32:48,799
things like fireball and crystal pack i

00:32:46,960 --> 00:32:51,039
think team talked about fireball or

00:32:48,799 --> 00:32:52,320
scope and talked about fireball yeah

00:32:51,039 --> 00:32:54,880
we'll be talking about it

00:32:52,320 --> 00:32:56,799
okay uh just just scaling presto to

00:32:54,880 --> 00:32:58,720
larger and larger cluster and elastic

00:32:56,799 --> 00:33:02,640
resources and those kind of things right

00:32:58,720 --> 00:33:04,480
we have a bunch of things in flight

00:33:02,640 --> 00:33:05,679
that we expect to land in the open

00:33:04,480 --> 00:33:08,399
source and internally

00:33:05,679 --> 00:33:09,679
when the coming six month-ish time frame

00:33:08,399 --> 00:33:10,960
especially i think fireball

00:33:09,679 --> 00:33:12,880
is something i'm really really looking

00:33:10,960 --> 00:33:15,200
forward to because

00:33:12,880 --> 00:33:18,159
that will i think be a game changer in

00:33:15,200 --> 00:33:20,000
terms of high availability and elastic

00:33:18,159 --> 00:33:22,000
clusters and large clusters and things

00:33:20,000 --> 00:33:24,720
like that

00:33:22,000 --> 00:33:26,480
awesome fireball equals multiple

00:33:24,720 --> 00:33:27,600
coordinators or disaggregated

00:33:26,480 --> 00:33:30,799
coordinators

00:33:27,600 --> 00:33:32,880
for those who who aren't familiar uh

00:33:30,799 --> 00:33:34,559
with the the project name uh the code

00:33:32,880 --> 00:33:36,240
name uh dave uh

00:33:34,559 --> 00:33:37,600
what are you looking forward to in terms

00:33:36,240 --> 00:33:40,799
of the future of presto

00:33:37,600 --> 00:33:43,360
and what do you have on your mind

00:33:40,799 --> 00:33:45,120
yeah exactly so this was going to

00:33:43,360 --> 00:33:46,399
outline a pretty compelling technical

00:33:45,120 --> 00:33:49,039
road map that

00:33:46,399 --> 00:33:50,799
that they're driving uh i think the most

00:33:49,039 --> 00:33:51,679
interesting thing to me is the next gen

00:33:50,799 --> 00:33:54,720
native worker

00:33:51,679 --> 00:33:56,720
and all the surrounding native the new

00:33:54,720 --> 00:33:57,840
native hive connector and all the work

00:33:56,720 --> 00:33:59,560
around that so

00:33:57,840 --> 00:34:00,880
that more than likely will

00:33:59,560 --> 00:34:02,559
[Music]

00:34:00,880 --> 00:34:04,880
give up to an order of magnitude

00:34:02,559 --> 00:34:07,440
performance improvement over the next

00:34:04,880 --> 00:34:08,159
however 12 18 18 months or whatever long

00:34:07,440 --> 00:34:11,040
it takes

00:34:08,159 --> 00:34:12,639
so we're specifically i have like four

00:34:11,040 --> 00:34:13,760
or five open head count they're looking

00:34:12,639 --> 00:34:16,240
to hire

00:34:13,760 --> 00:34:18,000
into uh those projects to try to help

00:34:16,240 --> 00:34:19,839
accelerate that that part of it so

00:34:18,000 --> 00:34:21,599
that's how excited i am about it so we

00:34:19,839 --> 00:34:23,359
actually want to help

00:34:21,599 --> 00:34:25,760
help them and help to help accelerate

00:34:23,359 --> 00:34:27,919
that work so as you pointed out

00:34:25,760 --> 00:34:30,000
um so it's not just performance too it's

00:34:27,919 --> 00:34:32,240
it's you pointed this out earlier

00:34:30,000 --> 00:34:34,560
it'll help eliminate the gc storms and

00:34:32,240 --> 00:34:36,879
the out of memory by allowing

00:34:34,560 --> 00:34:37,679
allowing uh spilling and proper proper

00:34:36,879 --> 00:34:40,159
large

00:34:37,679 --> 00:34:41,679
querying uh query evaluation techniques

00:34:40,159 --> 00:34:43,760
for sorting and hashing which is

00:34:41,679 --> 00:34:46,159
which is pretty out there from uh you

00:34:43,760 --> 00:34:47,919
know from from the ana perspective

00:34:46,159 --> 00:34:49,679
i mentioned earlier all the integrations

00:34:47,919 --> 00:34:51,679
the public cloud vent

00:34:49,679 --> 00:34:53,839
uh improved price performance we have a

00:34:51,679 --> 00:34:56,079
pretty strong query optimization team

00:34:53,839 --> 00:34:57,119
uh we we're going to try to be really

00:34:56,079 --> 00:35:00,480
benchmark driven

00:34:57,119 --> 00:35:02,480
and um so run a lot of industry

00:35:00,480 --> 00:35:04,720
benchmarks like tpcds for example like

00:35:02,480 --> 00:35:08,000
snowflake publishes that they can run

00:35:04,720 --> 00:35:11,119
100 terabyte tpcds in three hours on

00:35:08,000 --> 00:35:11,839
x size cluster what can we do what can

00:35:11,119 --> 00:35:13,680
presta do

00:35:11,839 --> 00:35:15,280
you know on you know in this open

00:35:13,680 --> 00:35:17,440
environment right so i think you know

00:35:15,280 --> 00:35:20,079
what we're going to put a big focus on

00:35:17,440 --> 00:35:21,520
on industry benchmarks and and query

00:35:20,079 --> 00:35:23,200
optimization and distributed query

00:35:21,520 --> 00:35:25,920
execution techniques to

00:35:23,200 --> 00:35:27,920
to help drive performance uh there we'll

00:35:25,920 --> 00:35:31,280
commit all this back to open source

00:35:27,920 --> 00:35:33,839
um i'm sort of scratching around this

00:35:31,280 --> 00:35:35,760
the surface of where data science meets

00:35:33,839 --> 00:35:37,599
database capabilities now that i'm on

00:35:35,760 --> 00:35:39,280
the cloud so i want to sort of leverage

00:35:37,599 --> 00:35:42,160
machine learning and

00:35:39,280 --> 00:35:44,240
and observation and ai and machine

00:35:42,160 --> 00:35:46,320
learning techniques to sort of

00:35:44,240 --> 00:35:47,280
you know help solve the auto

00:35:46,320 --> 00:35:50,560
configuration

00:35:47,280 --> 00:35:52,400
auto tuning workload optimization um

00:35:50,560 --> 00:35:55,280
and other such improvements so i'm

00:35:52,400 --> 00:35:57,440
talking to one of my old colleagues from

00:35:55,280 --> 00:35:58,720
astro data systems as a really good data

00:35:57,440 --> 00:36:00,079
scientist to start

00:35:58,720 --> 00:36:01,839
you know figuring out what we can do

00:36:00,079 --> 00:36:03,440
there so i think there's going to be

00:36:01,839 --> 00:36:05,280
like the next 12 to 18 months is going

00:36:03,440 --> 00:36:08,560
to be super super exciting for professor

00:36:05,280 --> 00:36:08,560
to be in so many dimensions

00:36:09,440 --> 00:36:15,520
that's great girish any last comments

00:36:13,599 --> 00:36:17,440
yeah so from oversight we're looking at

00:36:15,520 --> 00:36:19,280
three major areas so one is the

00:36:17,440 --> 00:36:21,599
uh presto ecosystem stuff was talking

00:36:19,280 --> 00:36:23,599
about the preston fling preston pino

00:36:21,599 --> 00:36:26,000
uh restaurant spark that kind of stuff

00:36:23,599 --> 00:36:27,520
uh obviously more investments there

00:36:26,000 --> 00:36:29,440
hopefully more workloads running on

00:36:27,520 --> 00:36:31,760
those kind of configurations

00:36:29,440 --> 00:36:33,119
um the second thing is uh we're also

00:36:31,760 --> 00:36:34,480
trying out like i mentioned the

00:36:33,119 --> 00:36:36,720
restaurant public cloud

00:36:34,480 --> 00:36:38,160
so kubernetes google cloud that kind of

00:36:36,720 --> 00:36:39,920
stuff so

00:36:38,160 --> 00:36:41,520
this gives us elasticity which we

00:36:39,920 --> 00:36:43,440
usually don't get with

00:36:41,520 --> 00:36:45,200
our on-prem systems right so if your

00:36:43,440 --> 00:36:46,640
peak load you can always spin up a

00:36:45,200 --> 00:36:48,320
cluster very quickly on google cloud and

00:36:46,640 --> 00:36:50,320
can take some of your load

00:36:48,320 --> 00:36:51,680
um so we're trying that out it sounds

00:36:50,320 --> 00:36:54,000
pretty exciting to us

00:36:51,680 --> 00:36:55,440
right now and then the third area is

00:36:54,000 --> 00:36:56,880
actually pretty interesting i think

00:36:55,440 --> 00:36:58,800
something we didn't touch on so much in

00:36:56,880 --> 00:37:00,079
this panel but i feel is fundamental

00:36:58,800 --> 00:37:01,280
right so that's two ways you can

00:37:00,079 --> 00:37:03,359
optimize your query

00:37:01,280 --> 00:37:05,200
one is you can optimize the engine and

00:37:03,359 --> 00:37:07,200
the second is you can optimize the data

00:37:05,200 --> 00:37:09,119
right and the way you optimize the data

00:37:07,200 --> 00:37:10,800
is basically you look at the queries

00:37:09,119 --> 00:37:12,560
that people are running and then you

00:37:10,800 --> 00:37:14,000
reformat your data in a way that those

00:37:12,560 --> 00:37:15,440
queries run faster

00:37:14,000 --> 00:37:17,680
so for instance you could have sample

00:37:15,440 --> 00:37:18,320
tables a few huge fact tables or you

00:37:17,680 --> 00:37:20,880
could

00:37:18,320 --> 00:37:21,920
resort to data in a different way you

00:37:20,880 --> 00:37:24,320
could uh

00:37:21,920 --> 00:37:25,359
aggregate kinds of like statistics in

00:37:24,320 --> 00:37:26,640
your footer files and

00:37:25,359 --> 00:37:28,560
that that will speed up your queries

00:37:26,640 --> 00:37:30,560
seven classes of worries so

00:37:28,560 --> 00:37:32,160
that's another area data layout uh

00:37:30,560 --> 00:37:34,400
optimization that's an area we are

00:37:32,160 --> 00:37:35,920
heavily investing in so hope to see some

00:37:34,400 --> 00:37:38,240
other work we should talk about this

00:37:35,920 --> 00:37:38,240
online

00:37:38,480 --> 00:37:41,599
we say that every time

00:37:41,920 --> 00:37:46,480
one more thing that came up with uber is

00:37:44,480 --> 00:37:47,760
secondary indexing and that i think is

00:37:46,480 --> 00:37:50,720
very interesting as well

00:37:47,760 --> 00:37:51,119
uh just auxiliary data structures um

00:37:50,720 --> 00:37:52,720
that

00:37:51,119 --> 00:37:54,720
uh you know up until now we've uh

00:37:52,720 --> 00:37:56,320
depended on the park and orc and the

00:37:54,720 --> 00:37:57,520
metadata that's essentially within the

00:37:56,320 --> 00:37:59,920
format itself

00:37:57,520 --> 00:38:01,040
uh and is there other ways that uh you

00:37:59,920 --> 00:38:03,520
know it could

00:38:01,040 --> 00:38:05,040
where all the data structures like

00:38:03,520 --> 00:38:05,760
depending on so many different ways of

00:38:05,040 --> 00:38:07,359
indexing

00:38:05,760 --> 00:38:09,680
uh would help as well and so that's

00:38:07,359 --> 00:38:13,119
something i think the the community has

00:38:09,680 --> 00:38:16,000
been uh been asking for um as well

00:38:13,119 --> 00:38:17,599
all right well we've had um uh we're

00:38:16,000 --> 00:38:20,720
just on time

00:38:17,599 --> 00:38:24,560
in frankly and so thanks so much

00:38:20,720 --> 00:38:28,000
um bishwa girish dave always a pleasure

00:38:24,560 --> 00:38:30,079
uh thank you for your insights and um

00:38:28,000 --> 00:38:31,040
i have uh and we'll see bishwa we'll see

00:38:30,079 --> 00:38:33,839
you later in the day

00:38:31,040 --> 00:38:33,839

YouTube URL: https://www.youtube.com/watch?v=rGIoXoEd_Js


