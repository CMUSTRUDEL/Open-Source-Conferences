Title: #Haystack: Erica Lesyshyn - Semantic Search Ecosystem
Publication date: 2020-07-02
Playlist: Haystack - Joint Virtual Event 2020
Description: 
	More: https://berlinbuzzwords.de/session/semantic-search-ecosystem

EBSCO Health's Search Team applies user intent analysis to increase precision and reduce the time it takes to answer critical medical questions. Learn about the key areas of our search ecosystem that come together to deliver semantic search results for clinicians. We will kick off the discussion with a deep dive into our content enrichment process. We will explore how our Medical Knowledge Graph semantically enhances our content and enables us to disambiguate context. We will then review how we leverage implicit and explicit user signals to help us understand intent. These signals allow us to dynamically generate runtime specific search strategies against Elasticsearch. Finally, we will discuss how we gather judgement lists from subject matter experts and leverage evaluation tools to tune our search results. Please join us as we explore the challenges of building semantic search for the medical domain.
Captions: 
	00:00:08,090 --> 00:00:13,420
as you heard my name is Eric Ellison and

00:00:11,490 --> 00:00:16,930
I'm a principal software

00:00:13,420 --> 00:00:20,230
at ebsco information services my primary

00:00:16,930 --> 00:00:23,710
focus is to design search solutions for

00:00:20,230 --> 00:00:25,600
EBSCO clinical decisions we are the

00:00:23,710 --> 00:00:29,759
leading provider of evidence-based

00:00:25,600 --> 00:00:32,470
content for point of care practitioners

00:00:29,759 --> 00:00:36,700
clinicians use our search engines to

00:00:32,470 --> 00:00:38,110
diagnose and treat patients today I'm

00:00:36,700 --> 00:00:41,530
going to talk to you about our search

00:00:38,110 --> 00:00:44,380
ecosystem this is really all of the code

00:00:41,530 --> 00:00:46,629
and infrastructure that come together to

00:00:44,380 --> 00:00:49,930
create a search experience for our

00:00:46,629 --> 00:00:52,379
customers I'll start off with an

00:00:49,930 --> 00:00:55,269
overview of our search prep environment

00:00:52,379 --> 00:00:57,309
this is where we take the content that

00:00:55,269 --> 00:00:59,829
has been written by our editorial staff

00:00:57,309 --> 00:01:01,109
and we transform it into something we

00:00:59,829 --> 00:01:04,750
can work with

00:01:01,109 --> 00:01:09,580
we then semantically enrich and decorate

00:01:04,750 --> 00:01:11,620
this content prior to indexing it is

00:01:09,580 --> 00:01:14,470
then available in our search runtime

00:01:11,620 --> 00:01:18,159
environment the medical search platform

00:01:14,470 --> 00:01:20,590
and query intelligence work together to

00:01:18,159 --> 00:01:25,270
construct run time specific search

00:01:20,590 --> 00:01:27,850
strategies based on user intent we also

00:01:25,270 --> 00:01:32,799
incorporate two types of feedback into

00:01:27,850 --> 00:01:35,350
the system user and expert feedback our

00:01:32,799 --> 00:01:38,430
expert feedback area is really where we

00:01:35,350 --> 00:01:41,200
engage with our subject matter experts

00:01:38,430 --> 00:01:44,610
we work with them to create judgment

00:01:41,200 --> 00:01:47,710
lists otherwise known as golden sets

00:01:44,610 --> 00:01:50,110
these really represent the targets that

00:01:47,710 --> 00:01:52,049
we strive for when tuning our search

00:01:50,110 --> 00:01:54,610
results

00:01:52,049 --> 00:01:56,399
additionally we invite them to curate

00:01:54,610 --> 00:02:01,530
our medical knowledge graph and

00:01:56,399 --> 00:02:01,530
participate in surveys and experiments

00:02:01,560 --> 00:02:06,869
we also observe how our end users

00:02:04,840 --> 00:02:09,430
interact with our search results and

00:02:06,869 --> 00:02:13,960
incorporate that feedback back into the

00:02:09,430 --> 00:02:16,570
system at the heart of our ecosystem is

00:02:13,960 --> 00:02:20,310
our medical knowledge graph this allows

00:02:16,570 --> 00:02:22,510
us to semantically understand our domain

00:02:20,310 --> 00:02:24,640
now today I'm going to give you a

00:02:22,510 --> 00:02:25,540
high-level overview of each of these

00:02:24,640 --> 00:02:26,890
areas

00:02:25,540 --> 00:02:28,900
but if you're looking for more

00:02:26,890 --> 00:02:32,560
information I invite you to check out

00:02:28,900 --> 00:02:34,510
haystacks website you'll find there a

00:02:32,560 --> 00:02:37,510
presentation that I did last year on

00:02:34,510 --> 00:02:39,519
query intelligence additionally I'll be

00:02:37,510 --> 00:02:41,349
speaking in August about all of the

00:02:39,519 --> 00:02:45,790
recent work that has been done on our

00:02:41,349 --> 00:02:48,400
medical knowledge graph our search

00:02:45,790 --> 00:02:51,700
ecosystem is really about two to three

00:02:48,400 --> 00:02:54,040
years old the majority of the work that

00:02:51,700 --> 00:02:57,670
the team does is really greenfield

00:02:54,040 --> 00:03:02,140
initiatives as well as migrating from an

00:02:57,670 --> 00:03:05,260
on-prem environment to AWS we currently

00:03:02,140 --> 00:03:08,310
have about six micro services in

00:03:05,260 --> 00:03:13,569
production and a handful of on-demand

00:03:08,310 --> 00:03:16,450
applications our medical knowledge graph

00:03:13,569 --> 00:03:19,420
was conceived about five years ago

00:03:16,450 --> 00:03:23,139
it has since gone through quite a bit of

00:03:19,420 --> 00:03:26,409
transformation over the years it is

00:03:23,139 --> 00:03:32,370
currently composed of about 350,000

00:03:26,409 --> 00:03:37,750
concepts 700,000 terms and 2.5 million

00:03:32,370 --> 00:03:40,349
relationships now terms are primarily

00:03:37,750 --> 00:03:43,449
our entry point into our knowledge graph

00:03:40,349 --> 00:03:46,870
it really represents ways that users

00:03:43,449 --> 00:03:50,410
would search in our system and it can

00:03:46,870 --> 00:03:52,840
also represent synonyms once we have an

00:03:50,410 --> 00:03:55,209
entry point into the graph we can then

00:03:52,840 --> 00:03:58,569
make a correlation between a term and a

00:03:55,209 --> 00:04:00,669
concept now we also can leverage

00:03:58,569 --> 00:04:02,949
relationships so we can traverse through

00:04:00,669 --> 00:04:07,750
this knowledge graph in order to enhance

00:04:02,949 --> 00:04:09,459
our search experience we use this

00:04:07,750 --> 00:04:12,099
medical knowledge graph as part of our

00:04:09,459 --> 00:04:15,669
search prep environment as well as our

00:04:12,099 --> 00:04:19,090
search runtime environment our content

00:04:15,669 --> 00:04:21,099
ingestion pipeline consults heavily with

00:04:19,090 --> 00:04:25,570
our medical knowledge graph in order to

00:04:21,099 --> 00:04:27,750
semantically understand the text it then

00:04:25,570 --> 00:04:30,580
stores it in our elastic search index

00:04:27,750 --> 00:04:32,530
now naturally our search runtime

00:04:30,580 --> 00:04:35,289
environment has to speak in that same

00:04:32,530 --> 00:04:37,599
language so it also relies heavily on

00:04:35,289 --> 00:04:38,700
our medical knowledge graph prior to

00:04:37,599 --> 00:04:42,690
reading from our

00:04:38,700 --> 00:04:45,750
index so let's take a peek at our search

00:04:42,690 --> 00:04:47,910
prep environment this is an

00:04:45,750 --> 00:04:51,540
architectural overview of our content

00:04:47,910 --> 00:04:54,390
and justin pipeline and this particular

00:04:51,540 --> 00:04:58,350
pipeline really handles two main use

00:04:54,390 --> 00:05:01,020
cases first it handles a use case where

00:04:58,350 --> 00:05:03,570
a content editor has published a piece

00:05:01,020 --> 00:05:07,440
of content and it is ready to be

00:05:03,570 --> 00:05:10,740
searchable another use case is when we

00:05:07,440 --> 00:05:13,350
completely reprocess all of the content

00:05:10,740 --> 00:05:17,670
in our system we refer to this as a

00:05:13,350 --> 00:05:20,130
content ingestion process now regardless

00:05:17,670 --> 00:05:23,010
of either use case the pipeline behaves

00:05:20,130 --> 00:05:26,430
the same it essentially listens for

00:05:23,010 --> 00:05:28,350
these events and then takes action the

00:05:26,430 --> 00:05:30,930
first thing it does is it goes out to s3

00:05:28,350 --> 00:05:34,860
and it fetches that particular piece of

00:05:30,930 --> 00:05:39,300
content it goes ahead and transforms it

00:05:34,860 --> 00:05:42,900
into internal pojos we then take chunks

00:05:39,300 --> 00:05:45,990
of that content and we pass it off to a

00:05:42,900 --> 00:05:49,170
concept mapper in order to semantically

00:05:45,990 --> 00:05:51,570
understand its meaning now we actually

00:05:49,170 --> 00:05:54,270
do quite a bit of different types of

00:05:51,570 --> 00:05:57,480
enrichment or decorating against this

00:05:54,270 --> 00:05:59,730
content but the most compelling impact

00:05:57,480 --> 00:06:03,180
is really the result of our semantic

00:05:59,730 --> 00:06:05,430
enrichment it is then saved into our

00:06:03,180 --> 00:06:07,890
elastic search index and then we go

00:06:05,430 --> 00:06:11,390
ahead and we notify the other services

00:06:07,890 --> 00:06:14,010
of the outcome of this particular event

00:06:11,390 --> 00:06:16,440
I'm going to go ahead and take a deeper

00:06:14,010 --> 00:06:20,310
dive into our semantic enrichment

00:06:16,440 --> 00:06:21,450
process here is a snippet sample of text

00:06:20,310 --> 00:06:25,380
that we're going to go ahead and enrich

00:06:21,450 --> 00:06:28,800
the bold here is representing a content

00:06:25,380 --> 00:06:32,180
title fever of unknown origin FUO in

00:06:28,800 --> 00:06:34,860
adults below is a snippet of text and

00:06:32,180 --> 00:06:37,380
essentially what we do is we pass these

00:06:34,860 --> 00:06:40,560
chunks of text to our concept mapping

00:06:37,380 --> 00:06:42,750
endpoint and really what the endpoint

00:06:40,560 --> 00:06:46,230
does is it tries to create a connection

00:06:42,750 --> 00:06:49,440
between these tokens and concepts in our

00:06:46,230 --> 00:06:52,639
graph for example fever of unknown

00:06:49,440 --> 00:06:58,460
origin is associated with concept

00:06:52,639 --> 00:07:01,039
seven five two zero zero zero zero we

00:06:58,460 --> 00:07:05,780
then go ahead and semantically wrap the

00:07:01,039 --> 00:07:08,930
original text with these concept IDs now

00:07:05,780 --> 00:07:12,110
FUO is actually an acronym for fever of

00:07:08,930 --> 00:07:14,240
unknown origin so we go ahead and we

00:07:12,110 --> 00:07:18,710
semantically tag it with the same

00:07:14,240 --> 00:07:20,659
concept ID in its a stop word and so

00:07:18,710 --> 00:07:24,009
therefore we do not semantically enrich

00:07:20,659 --> 00:07:27,259
it because it will not add any benefit

00:07:24,009 --> 00:07:29,539
so this is an example result of what it

00:07:27,259 --> 00:07:33,050
looks like after Symantec and Richmond

00:07:29,539 --> 00:07:36,199
has run you can see here fever of

00:07:33,050 --> 00:07:39,439
unknown origin as well as FUO are both

00:07:36,199 --> 00:07:41,719
tagged with the same concept ID you can

00:07:39,439 --> 00:07:43,759
also observe instances where a single

00:07:41,719 --> 00:07:46,250
piece of text is associated with

00:07:43,759 --> 00:07:48,800
multiple concepts in our graph for

00:07:46,250 --> 00:07:51,529
example temperature is associated with

00:07:48,800 --> 00:07:54,439
three concepts now this actually might

00:07:51,529 --> 00:07:56,710
be a great area for us to curate so that

00:07:54,439 --> 00:08:01,069
we can reduce the number of definitions

00:07:56,710 --> 00:08:02,839
associated with temperature you'll also

00:08:01,069 --> 00:08:05,449
observe that there's some portions of

00:08:02,839 --> 00:08:07,219
text that do not get enriched and this

00:08:05,449 --> 00:08:09,819
essentially is because we either don't

00:08:07,219 --> 00:08:13,460
have a definition in our map or our

00:08:09,819 --> 00:08:15,080
knowledge graph or semantically

00:08:13,460 --> 00:08:20,479
enriching it really wouldn't add any

00:08:15,080 --> 00:08:23,169
value so really what we're talking about

00:08:20,479 --> 00:08:25,449
here is taking large chunks of text and

00:08:23,169 --> 00:08:28,039
comparing it against a knowledge graph

00:08:25,449 --> 00:08:30,319
so as you can imagine you might

00:08:28,039 --> 00:08:32,779
encounter some particular problems when

00:08:30,319 --> 00:08:35,510
you do this now the issues that we

00:08:32,779 --> 00:08:38,620
encounter primarily are around acronyms

00:08:35,510 --> 00:08:41,930
so let's take a look at some examples

00:08:38,620 --> 00:08:45,649
this particular snippet of text in those

00:08:41,930 --> 00:08:49,070
with heart failure who have had now the

00:08:45,649 --> 00:08:52,399
terms who and had are actually

00:08:49,070 --> 00:08:54,860
correlated to acronyms in our graph the

00:08:52,399 --> 00:08:58,070
term who is defined as World Health

00:08:54,860 --> 00:09:01,880
Organization and had is defined as

00:08:58,070 --> 00:09:03,770
Hospital anxiety and depression now

00:09:01,880 --> 00:09:06,080
that's actually not the usage in this

00:09:03,770 --> 00:09:07,940
particular sentence so

00:09:06,080 --> 00:09:10,910
although we have identified these as

00:09:07,940 --> 00:09:13,370
acronyms we do not semantically enrich

00:09:10,910 --> 00:09:16,040
them so we have a set of rules that we

00:09:13,370 --> 00:09:20,269
follow to ensure that we don't overly

00:09:16,040 --> 00:09:23,959
tag our content we also have to deal

00:09:20,269 --> 00:09:27,170
with ambiguous acronyms symptoms of AF

00:09:23,959 --> 00:09:29,959
is an example of this AF is associated

00:09:27,170 --> 00:09:32,060
with many concepts in our graph and as

00:09:29,959 --> 00:09:35,029
you can see when I pass this snippet of

00:09:32,060 --> 00:09:38,899
text to my concept mapper I'm able to

00:09:35,029 --> 00:09:40,700
easily resolve symptoms but AF is really

00:09:38,899 --> 00:09:42,860
associated with way too many concepts

00:09:40,700 --> 00:09:45,140
for me to tag it there would really be

00:09:42,860 --> 00:09:48,220
no value in me adding all of these

00:09:45,140 --> 00:09:51,470
concept IDs to this particular acronym

00:09:48,220 --> 00:09:53,570
so in order to mitigate this issue we

00:09:51,470 --> 00:09:57,140
ask that our content writers follow the

00:09:53,570 --> 00:09:59,810
rule of first occurrence and what this

00:09:57,140 --> 00:10:02,540
does is it allows them to define the

00:09:59,810 --> 00:10:05,240
meaning of an acronym prior to usage in

00:10:02,540 --> 00:10:09,200
the content you can see in this

00:10:05,240 --> 00:10:12,230
particular example that AF is defined by

00:10:09,200 --> 00:10:14,480
atrial fibrillation they can then use it

00:10:12,230 --> 00:10:19,190
freely throughout the content and we now

00:10:14,480 --> 00:10:22,430
understand its meaning and usage so now

00:10:19,190 --> 00:10:24,410
we're able to disambiguate AF by

00:10:22,430 --> 00:10:27,290
comparing it to the expansion that was

00:10:24,410 --> 00:10:28,850
provided to us so in this case we create

00:10:27,290 --> 00:10:33,950
that connection between atrial

00:10:28,850 --> 00:10:35,930
fibrillation and AF this is an example

00:10:33,950 --> 00:10:39,079
of what our index looks like after

00:10:35,930 --> 00:10:42,410
semantic enrichment has run you can see

00:10:39,079 --> 00:10:46,370
here a mixture of keywords as well as

00:10:42,410 --> 00:10:49,399
concept IDs ultimately when we tokenize

00:10:46,370 --> 00:10:51,620
this text we strip out the cid tax and

00:10:49,399 --> 00:10:59,270
what we're left with are the raw concept

00:10:51,620 --> 00:10:59,800
ids as well as the original text so that

00:10:59,270 --> 00:11:02,800
summer

00:10:59,800 --> 00:11:04,480
is our search prep environment let's now

00:11:02,800 --> 00:11:07,750
talk a little bit about our search

00:11:04,480 --> 00:11:09,730
runtime environment this is an

00:11:07,750 --> 00:11:13,120
architectural overview of this

00:11:09,730 --> 00:11:15,040
environment what happens is we receive a

00:11:13,120 --> 00:11:18,010
request against the medical search

00:11:15,040 --> 00:11:20,790
platform and the first thing it does is

00:11:18,010 --> 00:11:23,800
it tries to understand the users intent

00:11:20,790 --> 00:11:26,200
it sends the query off to query

00:11:23,800 --> 00:11:29,920
intelligence and query intelligence

00:11:26,200 --> 00:11:33,160
performs a series of operations first it

00:11:29,920 --> 00:11:35,160
needs to segment the query it then has a

00:11:33,160 --> 00:11:38,230
series of decisions it needs to make

00:11:35,160 --> 00:11:40,930
should it expand the criteria that we

00:11:38,230 --> 00:11:41,790
use should it narrow it or perhaps you

00:11:40,930 --> 00:11:44,519
to keep it

00:11:41,790 --> 00:11:47,519
ultimately what query intelligence does

00:11:44,519 --> 00:11:50,320
is it returns a set of recommendations

00:11:47,519 --> 00:11:53,110
to the medical search platform so that

00:11:50,320 --> 00:11:57,700
it can construct the best runtime search

00:11:53,110 --> 00:12:00,000
strategy against elasticsearch so let's

00:11:57,700 --> 00:12:05,170
go ahead and take a peek at how we

00:12:00,000 --> 00:12:07,209
segment queries in query intelligence so

00:12:05,170 --> 00:12:10,540
this is an example query paralysis

00:12:07,209 --> 00:12:13,810
facial nerve and if we were to use a

00:12:10,540 --> 00:12:15,970
brute force approach we could say that

00:12:13,810 --> 00:12:19,390
these three tokens are associated with

00:12:15,970 --> 00:12:21,640
four concepts in our graph you can see

00:12:19,390 --> 00:12:22,720
here that paralysis would be associated

00:12:21,640 --> 00:12:25,779
with two concepts

00:12:22,720 --> 00:12:29,320
whereas facial and nerve are associated

00:12:25,779 --> 00:12:31,240
with their own however if we go ahead

00:12:29,320 --> 00:12:35,320
and we look for the longest matching

00:12:31,240 --> 00:12:37,540
tokens we can become more specific we

00:12:35,320 --> 00:12:39,880
can then identify that facial nerve

00:12:37,540 --> 00:12:42,520
actually corresponds to a single concept

00:12:39,880 --> 00:12:46,589
in our graph so here we've been able to

00:12:42,520 --> 00:12:49,449
reduce three tokens to three concepts

00:12:46,589 --> 00:12:51,699
but if we actually take permutations

00:12:49,449 --> 00:12:56,529
into account we can become even more

00:12:51,699 --> 00:12:58,990
specific and more targeted ultimately

00:12:56,529 --> 00:13:02,130
what we're trying to do here is come up

00:12:58,990 --> 00:13:05,500
with the most precise best case scenario

00:13:02,130 --> 00:13:07,899
often times when users enter enter terms

00:13:05,500 --> 00:13:11,170
into a search box they don't really take

00:13:07,899 --> 00:13:13,029
the order into account so by looking for

00:13:11,170 --> 00:13:13,779
the longest matching tokens and also

00:13:13,029 --> 00:13:16,720
performing

00:13:13,779 --> 00:13:19,420
mutations along with fuzzy matching we

00:13:16,720 --> 00:13:22,420
can then create a more specific mapping

00:13:19,420 --> 00:13:25,269
between terms and a concept in our graph

00:13:22,420 --> 00:13:27,639
and this is important because we want to

00:13:25,269 --> 00:13:30,490
create that bridge between the way

00:13:27,639 --> 00:13:32,949
someone searches and the way content is

00:13:30,490 --> 00:13:35,529
structured here you can see that our

00:13:32,949 --> 00:13:38,110
content is actually written as facial

00:13:35,529 --> 00:13:41,110
nerve palsy but by semantically

00:13:38,110 --> 00:13:43,899
understanding that and additionally

00:13:41,110 --> 00:13:45,399
performing the query segmentation we can

00:13:43,899 --> 00:13:47,550
create that bridge between the two

00:13:45,399 --> 00:13:47,550
worlds

00:13:47,610 --> 00:13:53,589
now just because we semantically

00:13:50,680 --> 00:13:55,779
understand the query doesn't mean that

00:13:53,589 --> 00:13:58,980
we really understand the intent of the

00:13:55,779 --> 00:14:01,180
user headache is an example of this

00:13:58,980 --> 00:14:03,430
headache is a really straightforward

00:14:01,180 --> 00:14:05,350
mapping at our knowledge graph you can

00:14:03,430 --> 00:14:07,120
see that we have quite a bit of rich

00:14:05,350 --> 00:14:10,600
synonyms and terms that represent

00:14:07,120 --> 00:14:14,470
headache but it turns out that headache

00:14:10,600 --> 00:14:17,620
is a common side effect of many drugs it

00:14:14,470 --> 00:14:20,230
can also be a symptom of many medical

00:14:17,620 --> 00:14:23,199
conditions so we really just don't want

00:14:20,230 --> 00:14:25,569
to blindly pass this semantic

00:14:23,199 --> 00:14:26,800
understanding along to searching we want

00:14:25,569 --> 00:14:30,939
to be a little bit more intelligent

00:14:26,800 --> 00:14:33,449
about that so let's take a look at what

00:14:30,939 --> 00:14:36,430
I mean let's walk through some examples

00:14:33,449 --> 00:14:40,829
let's go ahead and take a look at why we

00:14:36,430 --> 00:14:45,459
would want to expand a particular query

00:14:40,829 --> 00:14:48,220
so this is an example of a classic query

00:14:45,459 --> 00:14:51,610
expansion in our model here someone has

00:14:48,220 --> 00:14:53,680
searched for zoloft and pregnancy now

00:14:51,610 --> 00:14:55,870
we've been able to segment this

00:14:53,680 --> 00:14:58,899
particular query into two concepts

00:14:55,870 --> 00:14:59,860
zoloft pregnancy however there's a

00:14:58,899 --> 00:15:03,459
problem here

00:14:59,860 --> 00:15:06,779
we don't actually mention zoloft in our

00:15:03,459 --> 00:15:10,350
content our content actually mentions

00:15:06,779 --> 00:15:13,720
antidepressants so what we can do is

00:15:10,350 --> 00:15:15,790
interrogate our knowledge graph and try

00:15:13,720 --> 00:15:18,610
to create that bridge between the query

00:15:15,790 --> 00:15:21,009
and our content you can see in this

00:15:18,610 --> 00:15:23,620
example here that we are able to

00:15:21,009 --> 00:15:26,710
traverse our knowledge graph and create

00:15:23,620 --> 00:15:30,340
that connection between zoloft and anti

00:15:26,710 --> 00:15:32,620
prescient however if we do so blindly

00:15:30,340 --> 00:15:35,320
then we will create a lot of recall in

00:15:32,620 --> 00:15:38,100
our system and that is evident when you

00:15:35,320 --> 00:15:41,230
look at the expansion of pregnancy

00:15:38,100 --> 00:15:42,940
really the intent of the user here is

00:15:41,230 --> 00:15:47,020
that they would be satisfied with

00:15:42,940 --> 00:15:52,240
content that is antidepressant or zoloft

00:15:47,020 --> 00:15:54,700
and pregnancy so let's go ahead and walk

00:15:52,240 --> 00:15:57,340
through an example traversal in our

00:15:54,700 --> 00:16:00,550
graph to achieve this when someone

00:15:57,340 --> 00:16:03,220
searches for zoloft we identify that

00:16:00,550 --> 00:16:06,700
zoloft is a brand name associated with a

00:16:03,220 --> 00:16:08,950
substance known as sertraline we then go

00:16:06,700 --> 00:16:11,140
ahead and examine the relationships

00:16:08,950 --> 00:16:14,380
intergraph associated with this

00:16:11,140 --> 00:16:16,690
substance we identify that it is

00:16:14,380 --> 00:16:21,640
actually a member of the drug class

00:16:16,690 --> 00:16:26,050
known as SSRIs we then expand to its

00:16:21,640 --> 00:16:28,540
parent which is antidepressants so

00:16:26,050 --> 00:16:32,710
ultimately in order to create a bridge

00:16:28,540 --> 00:16:34,990
between zoloft and antidepressants we

00:16:32,710 --> 00:16:37,330
first had to identify that this was an

00:16:34,990 --> 00:16:40,060
appropriate candidate to be expanded and

00:16:37,330 --> 00:16:44,200
then we went ahead and performed two

00:16:40,060 --> 00:16:47,770
hops to create that bridge so ultimately

00:16:44,200 --> 00:16:51,220
when query intelligence receives a query

00:16:47,770 --> 00:16:54,340
such as this what it does is it returns

00:16:51,220 --> 00:16:56,290
both segments associated with it but it

00:16:54,340 --> 00:16:58,570
automatically performs that hypernym

00:16:56,290 --> 00:17:01,060
expansion and notice that it is

00:16:58,570 --> 00:17:03,700
selective it does not perform this on

00:17:01,060 --> 00:17:06,820
pregnancy but it did perform this on the

00:17:03,700 --> 00:17:08,950
product zoloft and you can see in this

00:17:06,820 --> 00:17:11,380
example payload that we have the

00:17:08,950 --> 00:17:14,290
concepts IDs associated with the

00:17:11,380 --> 00:17:16,390
expansion's we also represent the

00:17:14,290 --> 00:17:19,030
distance of these expansions in our

00:17:16,390 --> 00:17:23,020
knowledge graph and this allows us to

00:17:19,030 --> 00:17:24,160
apply a decay weight when searching here

00:17:23,020 --> 00:17:26,850
when the medical search platform

00:17:24,160 --> 00:17:30,520
actually executes this particular query

00:17:26,850 --> 00:17:33,010
it applies the the highest boosting on

00:17:30,520 --> 00:17:35,710
the original term which is Zoloft and

00:17:33,010 --> 00:17:39,840
then you can see that it's been decayed

00:17:35,710 --> 00:17:39,840
as it expands through the graph

00:17:40,590 --> 00:17:45,389
this allows us to create that bridge

00:17:42,659 --> 00:17:47,730
between a very specific query and

00:17:45,389 --> 00:17:51,990
content that is represented in our

00:17:47,730 --> 00:17:54,210
system so let's go ahead and talk about

00:17:51,990 --> 00:17:56,960
the reverse scenario of when we would

00:17:54,210 --> 00:18:01,409
narrow or we would filter down a

00:17:56,960 --> 00:18:04,830
segmented query so I mentioned earlier

00:18:01,409 --> 00:18:06,539
that AF is really ambiguous and we have

00:18:04,830 --> 00:18:09,179
the ability to solve this during

00:18:06,539 --> 00:18:12,419
semantic enrichment because we follow

00:18:09,179 --> 00:18:15,419
the rule of first occurrence but when

00:18:12,419 --> 00:18:19,470
searching we don't have context or at

00:18:15,419 --> 00:18:22,259
times we have very little context so

00:18:19,470 --> 00:18:24,659
what we do is we rely on a variety of

00:18:22,259 --> 00:18:27,450
sources in order to come up with a

00:18:24,659 --> 00:18:29,999
preferred definition in lack of context

00:18:27,450 --> 00:18:32,129
in this case we've worked with our

00:18:29,999 --> 00:18:34,590
subject matter experts and we've also

00:18:32,129 --> 00:18:37,590
looked at how users interact with this

00:18:34,590 --> 00:18:40,649
particular query in our system you can

00:18:37,590 --> 00:18:42,419
see that more often than not individuals

00:18:40,649 --> 00:18:46,169
click on atrial fibrillation when they

00:18:42,419 --> 00:18:51,269
search for AF it also corresponds to a

00:18:46,169 --> 00:18:53,850
category in our content now when we

00:18:51,269 --> 00:18:56,340
perform that search we go ahead and

00:18:53,850 --> 00:18:59,639
identify and make that connection

00:18:56,340 --> 00:19:02,879
between an acronym and its expansion in

00:18:59,639 --> 00:19:05,820
our content now I should mention here

00:19:02,879 --> 00:19:08,129
that we're creating a default experience

00:19:05,820 --> 00:19:10,830
for our customers but we do have the

00:19:08,129 --> 00:19:12,779
opportunity to get it wrong so you will

00:19:10,830 --> 00:19:15,210
see in the future that we will offer the

00:19:12,779 --> 00:19:17,639
ability for our users to pivot and

00:19:15,210 --> 00:19:22,409
perhaps give us more insight on their

00:19:17,639 --> 00:19:24,749
intent all right so we talked about how

00:19:22,409 --> 00:19:26,519
we prep our environment and we talked

00:19:24,749 --> 00:19:28,769
about how we search it but let's

00:19:26,519 --> 00:19:35,610
actually dive into how we go ahead and

00:19:28,769 --> 00:19:38,100
tune this environment our search

00:19:35,610 --> 00:19:40,499
evaluation tool was conceived out of

00:19:38,100 --> 00:19:43,110
this notion that we are very successful

00:19:40,499 --> 00:19:45,960
when we are tightly coupled with subject

00:19:43,110 --> 00:19:48,960
matter experts the tool really creates

00:19:45,960 --> 00:19:53,610
this bridge between highly technical

00:19:48,960 --> 00:19:55,800
engineers and non-technical and users or

00:19:53,610 --> 00:19:59,550
individuals who really focus primarily

00:19:55,800 --> 00:20:01,320
in treating patients so we've we've

00:19:59,550 --> 00:20:03,690
built quite a bit of rich functionality

00:20:01,320 --> 00:20:05,970
into this tool and it's actually used

00:20:03,690 --> 00:20:09,540
heavily by the engineers and these

00:20:05,970 --> 00:20:12,120
subject matter experts one of our most

00:20:09,540 --> 00:20:13,890
recent additions into this tool is to

00:20:12,120 --> 00:20:16,800
allow these subject matter experts to

00:20:13,890 --> 00:20:19,530
curate the graph you can see here that

00:20:16,800 --> 00:20:22,230
we're adding very little ability for

00:20:19,530 --> 00:20:25,380
them to interact with the graph but we

00:20:22,230 --> 00:20:28,230
will be expanding upon this now this

00:20:25,380 --> 00:20:31,320
actually is a representation of manual

00:20:28,230 --> 00:20:33,960
curation but we also do some automated

00:20:31,320 --> 00:20:37,080
curation against the graph and I'll be

00:20:33,960 --> 00:20:42,030
talking in more detail about that in my

00:20:37,080 --> 00:20:43,950
discussion in August most importantly

00:20:42,030 --> 00:20:46,890
though we invite these subject matter

00:20:43,950 --> 00:20:49,800
experts to generate golden sets or these

00:20:46,890 --> 00:20:52,110
judgment lists and essentially what we

00:20:49,800 --> 00:20:53,820
do is we ask them to go ahead and

00:20:52,110 --> 00:20:57,540
classify the search results into

00:20:53,820 --> 00:20:59,580
different buckets for a given query so

00:20:57,540 --> 00:21:01,470
this is an example golden set that's

00:20:59,580 --> 00:21:05,430
being generated for the query breast

00:21:01,470 --> 00:21:07,890
cancer we essentially ask these SMEs or

00:21:05,430 --> 00:21:10,760
subject matter experts to go ahead and

00:21:07,890 --> 00:21:13,770
create a classification for each title

00:21:10,760 --> 00:21:15,690
most relevant are those results that we

00:21:13,770 --> 00:21:17,700
would expect to peer at the top of the

00:21:15,690 --> 00:21:19,740
page irrelevant

00:21:17,700 --> 00:21:22,260
shouldn't appear at all and then

00:21:19,740 --> 00:21:25,110
relevant are fine to appear anywhere in

00:21:22,260 --> 00:21:26,610
the main search results notice that

00:21:25,110 --> 00:21:29,790
we're not asking them to give us

00:21:26,610 --> 00:21:31,770
position one versus three or seven we're

00:21:29,790 --> 00:21:34,070
simply asking them to group them in

00:21:31,770 --> 00:21:34,070
buckets

00:21:34,430 --> 00:21:39,390
once they're grouped into buckets it

00:21:36,960 --> 00:21:42,000
gives us an opportunity to calculate a

00:21:39,390 --> 00:21:45,630
grade on how well we are performing

00:21:42,000 --> 00:21:48,660
against their expectations what we

00:21:45,630 --> 00:21:51,630
ultimately do is we perform two

00:21:48,660 --> 00:21:54,030
different types of scoring the first

00:21:51,630 --> 00:21:56,550
which is most critical is we actually

00:21:54,030 --> 00:21:58,500
compare how our search results are

00:21:56,550 --> 00:22:01,800
behaving against the most relevant

00:21:58,500 --> 00:22:04,200
bucket that they've defined we then also

00:22:01,800 --> 00:22:06,230
calculate a grade against the entire

00:22:04,200 --> 00:22:07,539
result set

00:22:06,230 --> 00:22:10,619
so this

00:22:07,539 --> 00:22:13,570
an example of analysis that's been run

00:22:10,619 --> 00:22:17,200
you can see for breast cancer we're

00:22:13,570 --> 00:22:20,109
performing an A in the top tier result

00:22:17,200 --> 00:22:24,129
bucket and then overall we have a grade

00:22:20,109 --> 00:22:26,109
of a B you'll also see here that we have

00:22:24,129 --> 00:22:28,840
an indicator on whether this golden set

00:22:26,109 --> 00:22:32,350
is curated or not and essentially what

00:22:28,840 --> 00:22:35,710
this means is that we give more

00:22:32,350 --> 00:22:37,840
precedence or more preference to golden

00:22:35,710 --> 00:22:40,419
sets that have been generated by a group

00:22:37,840 --> 00:22:44,379
of professionals versus one that was

00:22:40,419 --> 00:22:46,299
created independently oftentimes we find

00:22:44,379 --> 00:22:48,369
ourselves having multiple golden sets

00:22:46,299 --> 00:22:50,349
for the same query so we want to make

00:22:48,369 --> 00:22:51,940
sure that when we grade ourselves we use

00:22:50,349 --> 00:22:56,919
the one that most closely aligns

00:22:51,940 --> 00:22:59,710
potentially with our customers we also

00:22:56,919 --> 00:23:01,720
use these golden sets heavily when we

00:22:59,710 --> 00:23:04,989
compare how certain experiments are

00:23:01,720 --> 00:23:07,389
performing in the system this is an

00:23:04,989 --> 00:23:09,940
example where we're comparing a baseline

00:23:07,389 --> 00:23:12,970
against an experiment known as DMP to

00:23:09,940 --> 00:23:17,349
underscore fuzzy you can see for the

00:23:12,970 --> 00:23:19,509
query alpha - 1 that our experiment is

00:23:17,349 --> 00:23:23,409
better performing in the top tier

00:23:19,509 --> 00:23:25,479
results as well as overall so it allows

00:23:23,409 --> 00:23:28,029
us the opportunity to vet out different

00:23:25,479 --> 00:23:32,349
experiments before promoting it for

00:23:28,029 --> 00:23:34,479
other eyes to see it we also rely

00:23:32,349 --> 00:23:38,139
heavily on what we call a workflow

00:23:34,479 --> 00:23:40,239
comparison in this particular example

00:23:38,139 --> 00:23:43,330
the user is searching for croup and

00:23:40,239 --> 00:23:46,629
we're comparing our baseline against an

00:23:43,330 --> 00:23:50,109
individual who is authenticated as a

00:23:46,629 --> 00:23:52,570
pediatrician on the left our baseline

00:23:50,109 --> 00:23:55,090
shows that the fourth hint is associated

00:23:52,570 --> 00:23:58,149
with children whereas on the right side

00:23:55,090 --> 00:24:00,639
you can see here that 3 of the results

00:23:58,149 --> 00:24:03,220
are associated with children and are

00:24:00,639 --> 00:24:07,809
probably more important to someone who

00:24:03,220 --> 00:24:09,429
is personalized as a pediatrician now

00:24:07,809 --> 00:24:12,429
once we have vetted out these different

00:24:09,429 --> 00:24:13,779
experiments we then give them off and/or

00:24:12,429 --> 00:24:15,759
hand them off to our subject matter

00:24:13,779 --> 00:24:18,700
experts to play around with it and see

00:24:15,759 --> 00:24:20,980
what they think what we do is we create

00:24:18,700 --> 00:24:23,140
a blind survey

00:24:20,980 --> 00:24:26,169
and we passed them a series of queries

00:24:23,140 --> 00:24:29,429
and we asked them to rate which result

00:24:26,169 --> 00:24:31,960
sets are better now we randomly pick

00:24:29,429 --> 00:24:33,960
which side will display the results so

00:24:31,960 --> 00:24:36,970
that they can't tell the difference

00:24:33,960 --> 00:24:39,429
ultimately we use this information to

00:24:36,970 --> 00:24:44,110
decide if an experiment is ready to be

00:24:39,429 --> 00:24:46,120
promoted to our live environment now

00:24:44,110 --> 00:24:48,100
once it's in our live environment our

00:24:46,120 --> 00:24:52,000
user feedback really then comes into

00:24:48,100 --> 00:24:53,880
play and we use it to address a certain

00:24:52,000 --> 00:24:57,760
set of queries that we struggle with

00:24:53,880 --> 00:25:00,250
let's take an example of this breast

00:24:57,760 --> 00:25:03,280
cancer is a pretty generic query and we

00:25:00,250 --> 00:25:06,070
have a lot of content in our system that

00:25:03,280 --> 00:25:08,740
mentions breast cancer in fact all of

00:25:06,070 --> 00:25:11,410
the titles in this list have the same

00:25:08,740 --> 00:25:13,480
thing in common they're actually

00:25:11,410 --> 00:25:17,020
represented by two different concepts

00:25:13,480 --> 00:25:19,780
you have breast cancer and then some

00:25:17,020 --> 00:25:24,030
other concept for example chemo

00:25:19,780 --> 00:25:27,250
prevention screening tumor markers and

00:25:24,030 --> 00:25:29,530
ultimately when they search its hearts

00:25:27,250 --> 00:25:32,380
distinguish which one of these is really

00:25:29,530 --> 00:25:34,870
more relevant than the other but it

00:25:32,380 --> 00:25:37,419
turns out that breast cancer in women is

00:25:34,870 --> 00:25:41,919
actually the title that we would like to

00:25:37,419 --> 00:25:44,740
appear at the top of the page so what we

00:25:41,919 --> 00:25:47,620
do is we take click data into account

00:25:44,740 --> 00:25:52,330
and we ultimately use this as a

00:25:47,620 --> 00:25:54,669
tiebreaking effect so over time we solve

00:25:52,330 --> 00:25:58,179
these queries based upon how the users

00:25:54,669 --> 00:26:01,030
interact with the system and here you

00:25:58,179 --> 00:26:06,130
can see that we can achieve that goal by

00:26:01,030 --> 00:26:08,799
applying user behavior so that

00:26:06,130 --> 00:26:11,110
summarizes my presentation I talked

00:26:08,799 --> 00:26:13,750
about the four main areas of our

00:26:11,110 --> 00:26:16,929
ecosystem I talked about how we

00:26:13,750 --> 00:26:19,240
semantically enrich our content and how

00:26:16,929 --> 00:26:22,120
we try to understand the users intent

00:26:19,240 --> 00:26:24,340
when querying and I also discussed how

00:26:22,120 --> 00:26:27,429
we incorporate expert and user feedback

00:26:24,340 --> 00:26:29,679
into the system and as I mentioned

00:26:27,429 --> 00:26:31,630
earlier checkout haystacks website for

00:26:29,679 --> 00:26:34,559
more information on query intelligence

00:26:31,630 --> 00:26:37,549
and definitely check out my

00:26:34,559 --> 00:26:40,110
in August on our medical knowledge graph

00:26:37,549 --> 00:26:43,409
now if you like what you see we're

00:26:40,110 --> 00:26:45,840
hiring in my team as well as throughout

00:26:43,409 --> 00:26:50,450
the organization so check out our career

00:26:45,840 --> 00:26:50,450
website and reach out to me thank you

00:26:55,220 --> 00:27:01,049
again fantastic thank you very much

00:26:57,629 --> 00:27:03,059
Erica we do have some questions you've

00:27:01,049 --> 00:27:04,649
generated a lot of interest here so I'm

00:27:03,059 --> 00:27:08,460
just going to go to slack and ask some

00:27:04,649 --> 00:27:10,259
questions for people so Mia asks is it

00:27:08,460 --> 00:27:11,369
possible to create your knowledge graphs

00:27:10,259 --> 00:27:14,450
semi-automatically

00:27:11,369 --> 00:27:17,129
how much expert curation did you require

00:27:14,450 --> 00:27:20,070
yeah that's so that's a great question

00:27:17,129 --> 00:27:23,090
so we actually have an automated process

00:27:20,070 --> 00:27:25,350
that rebuilds the knowledge graph daily

00:27:23,090 --> 00:27:27,860
we collect quite a bit of information

00:27:25,350 --> 00:27:30,480
from the public domains and we also

00:27:27,860 --> 00:27:33,029
source information from our own content

00:27:30,480 --> 00:27:35,429
and essentially what happens is all of

00:27:33,029 --> 00:27:38,999
this information REE is reconstructed

00:27:35,429 --> 00:27:41,129
together in our neo4j environment we

00:27:38,999 --> 00:27:43,619
resolve all of the relationships we

00:27:41,129 --> 00:27:46,169
perform machine learning based curation

00:27:43,619 --> 00:27:49,259
to identify duplicates in our graph and

00:27:46,169 --> 00:27:51,149
then we actually perform a merging of

00:27:49,259 --> 00:27:56,070
these duplicates upon exporting this

00:27:51,149 --> 00:27:59,220
graph so ultimately we do have a manual

00:27:56,070 --> 00:28:01,049
process for building the graph and we

00:27:59,220 --> 00:28:03,929
have some curation but we're going to

00:28:01,049 --> 00:28:06,299
continue to embark upon more because

00:28:03,929 --> 00:28:07,980
ultimately it can be very expensive to

00:28:06,299 --> 00:28:10,470
have your subject matter experts curate

00:28:07,980 --> 00:28:13,320
large portions of the graph so we really

00:28:10,470 --> 00:28:16,159
try to have them focus on hotspots so

00:28:13,320 --> 00:28:20,100
some hotspots might be acronyms or

00:28:16,159 --> 00:28:21,779
concepts that are associated with I'm

00:28:20,100 --> 00:28:24,240
sorry terms that are associated with too

00:28:21,779 --> 00:28:29,100
many concepts and also of course any

00:28:24,240 --> 00:28:32,549
poor-performing queries thank you so our

00:28:29,100 --> 00:28:35,309
next question comes from artem in your

00:28:32,549 --> 00:28:37,289
example of analyzing tagged text the

00:28:35,309 --> 00:28:40,980
position of the concept ID is different

00:28:37,289 --> 00:28:43,049
from the tagged text don't use the

00:28:40,980 --> 00:28:46,009
concept ID for overlapping with the tag

00:28:43,049 --> 00:28:46,009
text during search

00:28:47,460 --> 00:28:54,400
that make sense i I think so when we

00:28:52,750 --> 00:28:57,910
search we actually search for a

00:28:54,400 --> 00:29:00,490
combination of concept IDs as well as

00:28:57,910 --> 00:29:03,220
text and because they're interlace

00:29:00,490 --> 00:29:05,530
together when we receive a hit from

00:29:03,220 --> 00:29:08,320
elasticsearch we need to actually

00:29:05,530 --> 00:29:10,510
perform some type of extraction to make

00:29:08,320 --> 00:29:12,400
sure that we highlight the correct area

00:29:10,510 --> 00:29:14,950
so we do have challenges when they're

00:29:12,400 --> 00:29:18,310
interlace together but allows us the

00:29:14,950 --> 00:29:21,070
flexibility to semantically attempt to

00:29:18,310 --> 00:29:23,500
identify hits in our index and then also

00:29:21,070 --> 00:29:25,030
fall back on keywords so we really get

00:29:23,500 --> 00:29:27,340
the best of both worlds but then of

00:29:25,030 --> 00:29:30,490
course we have to mitigate that when we

00:29:27,340 --> 00:29:33,540
get the content out of the system thank

00:29:30,490 --> 00:29:36,250
you our next question comes from Tito

00:29:33,540 --> 00:29:38,290
who asks when you match a medical

00:29:36,250 --> 00:29:40,570
concept in the query at search runtime

00:29:38,290 --> 00:29:43,150
do you only search the concept to

00:29:40,570 --> 00:29:45,040
identify for contact concept identifier

00:29:43,150 --> 00:29:48,490
for recall or do you also search the

00:29:45,040 --> 00:29:51,250
keyword string yeah so similar to my

00:29:48,490 --> 00:29:54,310
last answer we actually perform both so

00:29:51,250 --> 00:29:57,280
we actually rely heavily on dis Max and

00:29:54,310 --> 00:29:59,170
I like to describe it in many ways as we

00:29:57,280 --> 00:30:01,720
throw a lot of spaghetti at a wall and

00:29:59,170 --> 00:30:03,850
the one that stickiest is the one that

00:30:01,720 --> 00:30:06,760
actually contributes to the scoring so

00:30:03,850 --> 00:30:10,030
we examine the text using phrase

00:30:06,760 --> 00:30:13,570
matching we also use classic boolean

00:30:10,030 --> 00:30:17,830
logic we use multi match but ultimately

00:30:13,570 --> 00:30:21,520
we are using a mixture of keywords in

00:30:17,830 --> 00:30:26,560
addition to concept IDs thank you I love

00:30:21,520 --> 00:30:29,230
the spaghetti analogy so I'm Scott asks

00:30:26,560 --> 00:30:31,390
when you evaluate a search experiments

00:30:29,230 --> 00:30:32,590
with expert rated documents what do you

00:30:31,390 --> 00:30:35,980
do with documents that haven't been

00:30:32,590 --> 00:30:38,680
rated yeah that's a great question

00:30:35,980 --> 00:30:40,810
because as I indicated before we create

00:30:38,680 --> 00:30:43,120
these runtimes specific search

00:30:40,810 --> 00:30:45,340
strategies so it can be quite a

00:30:43,120 --> 00:30:48,850
challenge when you tune

00:30:45,340 --> 00:30:51,580
however these strategies end up acting

00:30:48,850 --> 00:30:54,400
on a small subset of queries so for

00:30:51,580 --> 00:30:58,000
example I had talked about the hypernym

00:30:54,400 --> 00:31:00,190
expansion example so oftentimes when we

00:30:58,000 --> 00:31:03,669
perform an experiment it's you

00:31:00,190 --> 00:31:06,730
on a narrow focus that we're trying to

00:31:03,669 --> 00:31:09,879
essentially tune but our golden sets

00:31:06,730 --> 00:31:13,720
really tend to represent at least a

00:31:09,879 --> 00:31:15,970
portion of all areas or all strategies

00:31:13,720 --> 00:31:17,769
that we try to hit so you'll see in some

00:31:15,970 --> 00:31:21,210
cases we have golden sets that are

00:31:17,769 --> 00:31:23,139
really focused on acronym hotspots

00:31:21,210 --> 00:31:26,470
others that are focused more on

00:31:23,139 --> 00:31:30,100
punctuation or plural others that are

00:31:26,470 --> 00:31:33,970
focused on you know specific expansion

00:31:30,100 --> 00:31:35,700
or narrowing cases but ultimately you

00:31:33,970 --> 00:31:38,799
it's only going to be as good as much

00:31:35,700 --> 00:31:43,059
data as you can compare now we currently

00:31:38,799 --> 00:31:45,639
have about 300 golden sets or judgment

00:31:43,059 --> 00:31:48,250
lists and our subject matter experts are

00:31:45,639 --> 00:31:51,250
constantly creating more it's actually

00:31:48,250 --> 00:31:53,169
really important to us is that queries

00:31:51,250 --> 00:31:55,360
that perform well should also be

00:31:53,169 --> 00:31:57,370
represented by these judgment lists not

00:31:55,360 --> 00:31:59,320
just those that perform poorly because

00:31:57,370 --> 00:32:01,840
we want to make sure that as we tune we

00:31:59,320 --> 00:32:03,730
don't have a degrade in performance so

00:32:01,840 --> 00:32:06,159
we're constantly running this analysis

00:32:03,730 --> 00:32:08,529
as we make changes and then really the

00:32:06,159 --> 00:32:10,480
rule is that if it isn't performing

00:32:08,529 --> 00:32:14,169
better than your baseline we typically

00:32:10,480 --> 00:32:16,259
don't promote it thank you well I'm

00:32:14,169 --> 00:32:18,759
afraid we can't get away from this one

00:32:16,259 --> 00:32:22,299
hotels how do you handle new concepts

00:32:18,759 --> 00:32:24,970
such as kovat yeah great question so we

00:32:22,299 --> 00:32:28,809
have a regular cadence upon which we

00:32:24,970 --> 00:32:31,000
update our graph now the update process

00:32:28,809 --> 00:32:34,330
itself I had mentioned we actually run

00:32:31,000 --> 00:32:36,970
it daily right now but to incorporate

00:32:34,330 --> 00:32:39,250
those vocabularies from the public

00:32:36,970 --> 00:32:42,039
sources as a little bit more effort so

00:32:39,250 --> 00:32:45,129
we don't do it as frequently we do

00:32:42,039 --> 00:32:47,769
however have the ability to add manual

00:32:45,129 --> 00:32:49,570
concepts into our graph we tend to want

00:32:47,769 --> 00:32:51,460
to avoid this approach because you don't

00:32:49,570 --> 00:32:54,009
have the rich relationships that come

00:32:51,460 --> 00:32:56,379
from it but kovat is a great example

00:32:54,009 --> 00:32:59,049
because we actually have written quite a

00:32:56,379 --> 00:33:01,480
bit of content on covet and so we had to

00:32:59,049 --> 00:33:03,909
react very quickly so we have the

00:33:01,480 --> 00:33:06,279
ability to create these concepts go

00:33:03,909 --> 00:33:07,149
ahead and curate them and then we can

00:33:06,279 --> 00:33:10,360
catch up later

00:33:07,149 --> 00:33:12,490
with the public vocabularies thank you

00:33:10,360 --> 00:33:13,779
so we've got time for one last question

00:33:12,490 --> 00:33:14,799
I'm afraid but remember

00:33:13,779 --> 00:33:17,399
you can join the breakout room

00:33:14,799 --> 00:33:19,840
afterwards to carry on discussing these

00:33:17,399 --> 00:33:23,469
interesting stuff interesting concepts

00:33:19,840 --> 00:33:25,570
with Erica so I'm going to ask on

00:33:23,469 --> 00:33:27,789
Charles's behalf how many it's subject

00:33:25,570 --> 00:33:29,349
matter matter experts do you have and

00:33:27,789 --> 00:33:31,419
are these full time employees or

00:33:29,349 --> 00:33:34,690
consultants that review the golfers

00:33:31,419 --> 00:33:36,820
needed that's a great question so we

00:33:34,690 --> 00:33:39,489
write our own content and so we have

00:33:36,820 --> 00:33:41,440
this incredible staff of medical

00:33:39,489 --> 00:33:43,840
professionals that are top physicians in

00:33:41,440 --> 00:33:45,969
their fields they are often seeing

00:33:43,840 --> 00:33:48,849
patients and they're also writing as

00:33:45,969 --> 00:33:53,619
part of our content and so we actually

00:33:48,849 --> 00:33:55,570
have about I think 10 of them that

00:33:53,619 --> 00:33:59,229
represent different areas or different

00:33:55,570 --> 00:34:01,210
domains or specialties we meet weekly

00:33:59,229 --> 00:34:03,399
with them and we talk about future

00:34:01,210 --> 00:34:05,799
initiatives we discuss any poor

00:34:03,399 --> 00:34:08,190
performing queries and we also do

00:34:05,799 --> 00:34:11,770
operations together to curate the graph

00:34:08,190 --> 00:34:14,679
so we have quite a few on hand some are

00:34:11,770 --> 00:34:17,619
more involved than others but ultimately

00:34:14,679 --> 00:34:20,230
the goal is to have even more involved

00:34:17,619 --> 00:34:22,980
in the process as I had mentioned we've

00:34:20,230 --> 00:34:26,649
been incorporating more manual curation

00:34:22,980 --> 00:34:29,799
into our tooling in order to allow a

00:34:26,649 --> 00:34:33,549
wider audience of subject matter experts

00:34:29,799 --> 00:34:35,049
to work with our graph okay thank you

00:34:33,549 --> 00:34:36,279
I've actually misunderstood the time

00:34:35,049 --> 00:34:37,899
slightly so we do have a little more

00:34:36,279 --> 00:34:43,750
time for questions if that's okay

00:34:37,899 --> 00:34:46,329
sure Tom Bergman's asks we look at your

00:34:43,750 --> 00:34:48,579
specific example so he's wondering why

00:34:46,329 --> 00:34:52,240
zoloft was expanded in the query but

00:34:48,579 --> 00:34:54,879
pregnancy was nonce yeah so if I had

00:34:52,240 --> 00:34:57,730
expanded pregnancy I would have created

00:34:54,879 --> 00:35:00,430
too much recall in the system so

00:34:57,730 --> 00:35:03,700
pregnancy if you expand up to the parent

00:35:00,430 --> 00:35:07,240
ultimately comes down to a female organ

00:35:03,700 --> 00:35:09,789
right it becomes really very generic and

00:35:07,240 --> 00:35:12,369
so if I expanded that the search results

00:35:09,789 --> 00:35:14,829
probably wouldn't make sense so when we

00:35:12,369 --> 00:35:17,529
expand we really want to make sure that

00:35:14,829 --> 00:35:19,359
we're we're really careful when we do

00:35:17,529 --> 00:35:22,930
that or when we make that particular

00:35:19,359 --> 00:35:25,539
decision really what we try to focus on

00:35:22,930 --> 00:35:27,330
most is precision we have expert

00:35:25,539 --> 00:35:29,790
end-users that are working in this

00:35:27,330 --> 00:35:31,530
and for us we want to make sure that we

00:35:29,790 --> 00:35:34,110
really shorten the time it takes to

00:35:31,530 --> 00:35:37,440
answer these critical clinical questions

00:35:34,110 --> 00:35:38,940
so for us when we do expand and create

00:35:37,440 --> 00:35:40,800
more results that they have to look

00:35:38,940 --> 00:35:42,900
through we want to make sure that it's

00:35:40,800 --> 00:35:46,920
always with the goal of precision in

00:35:42,900 --> 00:35:48,870
mind thank you and I think we will have

00:35:46,920 --> 00:35:51,570
our last question now this is another

00:35:48,870 --> 00:35:54,090
one from T so how do you evaluate and

00:35:51,570 --> 00:35:55,860
tune the algorithmic expansions function

00:35:54,090 --> 00:35:57,720
to ensure the system is not returning

00:35:55,860 --> 00:35:59,940
too many matches how do you avoid

00:35:57,720 --> 00:36:03,210
watered-down results for precise certain

00:35:59,940 --> 00:36:05,550
searches yeah it's it's a tough problem

00:36:03,210 --> 00:36:08,340
to solve so for us because we're very

00:36:05,550 --> 00:36:12,120
selective we do quite a bit of

00:36:08,340 --> 00:36:13,710
experiments and blind surveys ultimately

00:36:12,120 --> 00:36:18,180
with our subject matter experts to

00:36:13,710 --> 00:36:20,520
evaluate that but but you do absolutely

00:36:18,180 --> 00:36:23,010
run into trouble so even though we have

00:36:20,520 --> 00:36:26,670
two point seven million relationships in

00:36:23,010 --> 00:36:28,320
our graph we really rely heavily mostly

00:36:26,670 --> 00:36:31,080
on about five hundred and thirty

00:36:28,320 --> 00:36:34,080
thousand of those relationships so we

00:36:31,080 --> 00:36:36,110
are selective when we actually perform

00:36:34,080 --> 00:36:38,430
these expansions and I should mention

00:36:36,110 --> 00:36:40,380
even though there's these these about

00:36:38,430 --> 00:36:45,480
five hundred thousand that we use it's

00:36:40,380 --> 00:36:46,860
only during selective periods so it's

00:36:45,480 --> 00:36:48,900
really got to meet a certain threshold

00:36:46,860 --> 00:36:51,630
in order for us to trigger it because

00:36:48,900 --> 00:36:53,430
otherwise you know the search results

00:36:51,630 --> 00:36:55,710
can become as you indicated watered down

00:36:53,430 --> 00:36:58,860
very quickly and you can see a real

00:36:55,710 --> 00:37:01,050
degrade in performance an example of

00:36:58,860 --> 00:37:05,190
this is if you went ahead and just

00:37:01,050 --> 00:37:07,080
blindly expanded any substance if it

00:37:05,190 --> 00:37:09,960
wasn't a drug brand name and it just any

00:37:07,080 --> 00:37:11,610
random substance you could see search

00:37:09,960 --> 00:37:13,410
results that come back that are really

00:37:11,610 --> 00:37:16,140
not even related to it because you've

00:37:13,410 --> 00:37:19,460
really traversed too far away in your

00:37:16,140 --> 00:37:19,460
knowledge graph for it to be relevant

00:37:25,839 --> 00:37:27,900

YouTube URL: https://www.youtube.com/watch?v=PokQR9zVmV4


