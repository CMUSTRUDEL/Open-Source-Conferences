Title: Berlin Buzzwords 2014: Barrie Kersbergen - A Real World Multifactor Recommender System @bol.com
Publication date: 2014-05-28
Playlist: Berlin Buzzwords 2014 #bbuzz
Description: 
	Creating recommendations using scalable technology, such as PIG, HIVE or Mahout, is one thing, but what does it take to develop an operating recommender system and what crucial customer behavioral factors are involved, what is the impact of the visual presentation of item being recommended or the way customers move from one item to another?

Some questions related to using these customer behavior factors in a multifactor recommender system are: What should be the level of personalization? How does the real time behavior of the customer constrain the recommender system? How do we measure success when everything is constantly changing?

In this talk I will address the above mentioned questions and give insight into the multifactor recommender system of online retailer bol.com. Moreover, experiences will be shared with building this recommender system and the quality of its output.

Read more:
https://2014.berlinbuzzwords.de/session/real-world-multifactor-recommender-system-bolcom

About Barrie Kersbergen:
https://2014.berlinbuzzwords.de/user/307/event/1

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:05,779 --> 00:00:11,140
hi and welcome everybody my name is

00:00:08,040 --> 00:00:13,060
barri kavitha I'm an expert

00:00:11,140 --> 00:00:14,530
here at the online retailer bullet calm

00:00:13,060 --> 00:00:16,299
and today I want to discuss the

00:00:14,530 --> 00:00:21,310
multi-factor recommended system that we

00:00:16,299 --> 00:00:23,590
built at Bolcom topics didn't want to

00:00:21,310 --> 00:00:25,930
have discussed today are about this new

00:00:23,590 --> 00:00:27,730
recommended system until a few years ago

00:00:25,930 --> 00:00:29,410
we will periodically process what beef

00:00:27,730 --> 00:00:31,810
and data to calculate and predict

00:00:29,410 --> 00:00:33,579
recommendations however these this

00:00:31,810 --> 00:00:35,200
worked great at the time however these

00:00:33,579 --> 00:00:37,480
recommendations need not always align

00:00:35,200 --> 00:00:39,489
with the users intent on site nor will

00:00:37,480 --> 00:00:42,730
be able to recommend items to anonymous

00:00:39,489 --> 00:00:45,190
visitors so that's why we built this new

00:00:42,730 --> 00:00:46,960
system the topics that I want to discuss

00:00:45,190 --> 00:00:49,780
the day is what does it take to develop

00:00:46,960 --> 00:00:52,059
a working an operational recommender

00:00:49,780 --> 00:00:54,820
system what are the crucial customer

00:00:52,059 --> 00:00:56,679
behavioral factors involved and what is

00:00:54,820 --> 00:01:01,149
the impact of the visual presentation of

00:00:56,679 --> 00:01:03,640
the item being recommended Who am I my

00:01:01,149 --> 00:01:05,290
name is Barry cares Becca I've a

00:01:03,640 --> 00:01:06,910
background in computer science I've

00:01:05,290 --> 00:01:08,410
worked at the University utrecht for

00:01:06,910 --> 00:01:09,540
over 12 years where I worked on the

00:01:08,410 --> 00:01:12,090
computer science and mathematics

00:01:09,540 --> 00:01:14,350
department where I've worked on

00:01:12,090 --> 00:01:16,750
educational mathematical software I

00:01:14,350 --> 00:01:20,079
started joining working at boloco min

00:01:16,750 --> 00:01:22,299
2010 where I'm situated in a team that

00:01:20,079 --> 00:01:23,890
specializes in personalizing content and

00:01:22,299 --> 00:01:27,579
the recommender system we talking about

00:01:23,890 --> 00:01:30,579
is one of these systems what is bollock

00:01:27,579 --> 00:01:33,640
um well is one of the largest Dutch

00:01:30,579 --> 00:01:35,740
online retailers it started in 1999 with

00:01:33,640 --> 00:01:39,149
selling books and over the years we've a

00:01:35,740 --> 00:01:39,149
delay large number of categories

00:01:39,329 --> 00:01:43,829
recently we won the award for being the

00:01:41,469 --> 00:01:46,329
best web shop which I'm very proud of

00:01:43,829 --> 00:01:48,820
especially since it's regarded the use

00:01:46,329 --> 00:01:51,189
of using personal recommendations and

00:01:48,820 --> 00:01:54,310
the use of big data which is also what

00:01:51,189 --> 00:01:56,979
this talk is about today so this Berlin

00:01:54,310 --> 00:01:58,539
buzzwords track is about scalability so

00:01:56,979 --> 00:02:00,280
why is it so important to focus on

00:01:58,539 --> 00:02:02,350
scalability when developing a

00:02:00,280 --> 00:02:04,270
recommender system well to answer that

00:02:02,350 --> 00:02:07,479
question one have a look at the physical

00:02:04,270 --> 00:02:10,270
uniquely sold products sold per type of

00:02:07,479 --> 00:02:13,900
store so your average supermarket sells

00:02:10,270 --> 00:02:16,150
about 10,000 unique products an extra

00:02:13,900 --> 00:02:19,060
large supermarket sales about 20,000 I

00:02:16,150 --> 00:02:21,160
looked at up on the website so must be

00:02:19,060 --> 00:02:23,170
correct so what I've done is I've

00:02:21,160 --> 00:02:24,260
created this graph where you see on the

00:02:23,170 --> 00:02:26,239
x-axis the no

00:02:24,260 --> 00:02:28,189
of weeks passing by and on the y axis

00:02:26,239 --> 00:02:31,220
you can see the number of products being

00:02:28,189 --> 00:02:32,750
added or removed to our catalog and what

00:02:31,220 --> 00:02:34,549
you see here is that an extra large

00:02:32,750 --> 00:02:38,959
supermarket gets added to our catalog

00:02:34,549 --> 00:02:41,599
about every four days which is a large

00:02:38,959 --> 00:02:44,480
amount of products please notice the

00:02:41,599 --> 00:02:46,129
spike on the right which is over 350,000

00:02:44,480 --> 00:02:48,650
products being added to our catalog in

00:02:46,129 --> 00:02:52,180
just a small number of time it's almost

00:02:48,650 --> 00:02:54,799
impossible to think what these items are

00:02:52,180 --> 00:02:57,290
we sell over 8 million products online

00:02:54,799 --> 00:02:59,750
on our website and in the backend system

00:02:57,290 --> 00:03:01,159
for a recommender we have over 20

00:02:59,750 --> 00:03:03,079
million products that we calculate

00:03:01,159 --> 00:03:04,639
recommendations for the difference

00:03:03,079 --> 00:03:07,430
between these two is the products that

00:03:04,639 --> 00:03:10,459
we can levert can or cannot deliver to

00:03:07,430 --> 00:03:11,720
our customers so customers on the

00:03:10,459 --> 00:03:13,190
website or interacting with these

00:03:11,720 --> 00:03:15,829
products and they generate approximately

00:03:13,190 --> 00:03:18,530
over 50 million product defense each day

00:03:15,829 --> 00:03:22,639
so that's over five and a half billion

00:03:18,530 --> 00:03:23,810
click events each year but why should we

00:03:22,639 --> 00:03:26,659
only be interested in click events

00:03:23,810 --> 00:03:28,459
because the only tells us so much we

00:03:26,659 --> 00:03:29,870
were really fun want to find out is what

00:03:28,459 --> 00:03:31,970
the customers actually doing on our

00:03:29,870 --> 00:03:34,129
website for instance how long as you

00:03:31,970 --> 00:03:36,260
look at a product does he read the

00:03:34,129 --> 00:03:38,720
product reviews does he share the

00:03:36,260 --> 00:03:41,120
product on social media does he add the

00:03:38,720 --> 00:03:43,400
item on a wish list or what products

00:03:41,120 --> 00:03:45,859
does the visitor click and is to click

00:03:43,400 --> 00:03:47,299
product a recommendation because if the

00:03:45,859 --> 00:03:48,739
cliq product is a recommendation and

00:03:47,299 --> 00:03:50,629
we're probably doing a good job and

00:03:48,739 --> 00:03:51,859
inspiring the customer but if the

00:03:50,629 --> 00:03:53,480
customer is not interacting with

00:03:51,859 --> 00:03:55,250
everything that we throw it in we're

00:03:53,480 --> 00:03:57,139
probably not doing such a good job and

00:03:55,250 --> 00:04:01,069
maybe we want to switch strategy and try

00:03:57,139 --> 00:04:02,750
something different so dealing with

00:04:01,069 --> 00:04:04,250
these amounts of data requires us to use

00:04:02,750 --> 00:04:06,799
scalable technology so that's why we

00:04:04,250 --> 00:04:08,419
started using Hadoop in 2009 and the

00:04:06,799 --> 00:04:13,129
first application went into production

00:04:08,419 --> 00:04:15,980
in 2010 so why did we want to build a

00:04:13,129 --> 00:04:17,329
recommender system from scratch well

00:04:15,980 --> 00:04:18,949
first off we had the non-functional

00:04:17,329 --> 00:04:21,139
requirements it needed to be

00:04:18,949 --> 00:04:23,090
horizontally scalable and it needs to

00:04:21,139 --> 00:04:25,099
perform in real time well the

00:04:23,090 --> 00:04:26,900
combination of real time and big data is

00:04:25,099 --> 00:04:29,240
always a little bit confusing in this

00:04:26,900 --> 00:04:30,919
situation that means in milliseconds we

00:04:29,240 --> 00:04:33,650
let our customer wait until we have

00:04:30,919 --> 00:04:35,900
updated in real time the data and then

00:04:33,650 --> 00:04:37,430
we return content to our customer so it

00:04:35,900 --> 00:04:37,770
needs to be really fast this means

00:04:37,430 --> 00:04:40,470
miller

00:04:37,770 --> 00:04:43,740
seconds it of course needs to handle our

00:04:40,470 --> 00:04:45,360
volume of data and last but not least we

00:04:43,740 --> 00:04:47,669
need to be able to explain the workings

00:04:45,360 --> 00:04:49,379
of our system to our stakeholder because

00:04:47,669 --> 00:04:52,500
together we can realize any business

00:04:49,379 --> 00:04:54,900
requirements that they might have so

00:04:52,500 --> 00:04:58,319
building such a system seems like scary

00:04:54,900 --> 00:05:01,259
stuff so how do we tackle this while we

00:04:58,319 --> 00:05:03,569
do this with taking small steps we've

00:05:01,259 --> 00:05:05,970
the scrum software development

00:05:03,569 --> 00:05:08,849
methodology where we use

00:05:05,970 --> 00:05:11,220
multidisciplinary teams so a team is the

00:05:08,849 --> 00:05:13,620
combined with different specialists all

00:05:11,220 --> 00:05:16,130
in a different field of study so

00:05:13,620 --> 00:05:18,539
everything that you need is in the team

00:05:16,130 --> 00:05:20,550
what we try to do is we try to build

00:05:18,539 --> 00:05:21,870
vertical slices this means that we try

00:05:20,550 --> 00:05:23,940
to build a small feature for a

00:05:21,870 --> 00:05:25,710
recommender system we try to have it in

00:05:23,940 --> 00:05:28,580
production and being released after two

00:05:25,710 --> 00:05:30,599
weeks so we do don't do long tragics and

00:05:28,580 --> 00:05:32,880
passing on the software to different

00:05:30,599 --> 00:05:36,030
departments we try to main maintain

00:05:32,880 --> 00:05:39,960
focus and do small steps this allows us

00:05:36,030 --> 00:05:41,550
to do releases in two weeks and as soon

00:05:39,960 --> 00:05:43,289
as the software is being released we get

00:05:41,550 --> 00:05:44,909
feedback from the production and see how

00:05:43,289 --> 00:05:48,210
it's working and we can expand our

00:05:44,909 --> 00:05:50,159
functionalities so what you see is as

00:05:48,210 --> 00:05:54,210
the user stories gets burned down we get

00:05:50,159 --> 00:05:57,029
features release to production the value

00:05:54,210 --> 00:05:59,009
of our system increases this allows us

00:05:57,029 --> 00:06:03,210
to do or really complex things in a

00:05:59,009 --> 00:06:05,699
small amount of time so now let's talk

00:06:03,210 --> 00:06:08,340
about recommendations so what do you

00:06:05,699 --> 00:06:10,319
recommend to millions of visitors in the

00:06:08,340 --> 00:06:12,150
contours to a physical store we can't go

00:06:10,319 --> 00:06:14,069
up to our customer and ask for what he

00:06:12,150 --> 00:06:16,289
or she might need our customers are

00:06:14,069 --> 00:06:19,259
completely unknown to us and most of our

00:06:16,289 --> 00:06:20,639
visitors are also anonymous so what do

00:06:19,259 --> 00:06:22,680
you recommend to somebody that you don't

00:06:20,639 --> 00:06:25,409
know well for instance what would you

00:06:22,680 --> 00:06:27,240
recommend me if you know me you might

00:06:25,409 --> 00:06:29,880
know that my household consumes a large

00:06:27,240 --> 00:06:33,120
number of diapers each week and I also

00:06:29,880 --> 00:06:34,620
liked listening to avenged sevenfold but

00:06:33,120 --> 00:06:38,009
do I like to be recommended about these

00:06:34,620 --> 00:06:40,680
items so for instance what would you

00:06:38,009 --> 00:06:42,630
recommend me and can the effect of the

00:06:40,680 --> 00:06:45,419
recommendation be approved by adapting

00:06:42,630 --> 00:06:46,560
it to the customers need well before we

00:06:45,419 --> 00:06:48,270
can answer that question let's have a

00:06:46,560 --> 00:06:50,399
look at an example where recommendations

00:06:48,270 --> 00:06:51,460
are shown on our website a product

00:06:50,399 --> 00:06:54,789
detail page

00:06:51,460 --> 00:06:57,069
which shows details about a product for

00:06:54,789 --> 00:06:59,199
instance this is the book HBase book and

00:06:57,069 --> 00:07:01,110
on the lower end of the screen we show

00:06:59,199 --> 00:07:03,009
items that might be of interest of you

00:07:01,110 --> 00:07:05,110
whether it be books from the same

00:07:03,009 --> 00:07:07,150
publisher or the same author or the same

00:07:05,110 --> 00:07:08,740
topic and this is all derived from

00:07:07,150 --> 00:07:10,599
behavior that you expressed on the

00:07:08,740 --> 00:07:12,789
website right now and the behavior of

00:07:10,599 --> 00:07:14,949
different customers on the website we're

00:07:12,789 --> 00:07:17,710
also interested in these products so

00:07:14,949 --> 00:07:23,889
customers are recommending products to

00:07:17,710 --> 00:07:25,300
other customers so this is all nice but

00:07:23,889 --> 00:07:30,610
how can we tell that these are good the

00:07:25,300 --> 00:07:32,530
best recommendations that we have first

00:07:30,610 --> 00:07:34,210
of all what we do which we visualize the

00:07:32,530 --> 00:07:35,470
output data just to get a sense of what

00:07:34,210 --> 00:07:39,250
we're actually recommending to our

00:07:35,470 --> 00:07:42,430
customers so what we do is we we load

00:07:39,250 --> 00:07:45,039
the new software and all data involved

00:07:42,430 --> 00:07:46,479
to an acceptance environment where our

00:07:45,039 --> 00:07:48,669
business stakeholders can really get a

00:07:46,479 --> 00:07:50,500
feel of how the system is working on a

00:07:48,669 --> 00:07:53,440
clean environment that's only accessible

00:07:50,500 --> 00:07:54,789
to boloco employees only so that should

00:07:53,440 --> 00:07:57,250
really give us a feel of how it's

00:07:54,789 --> 00:07:59,710
working then of course we also do the

00:07:57,250 --> 00:08:01,180
offline recommender evaluation and we

00:07:59,710 --> 00:08:03,159
run algorithms that Express the

00:08:01,180 --> 00:08:05,979
numerical value of how the system is

00:08:03,159 --> 00:08:08,500
doing this allows us to tune parameters

00:08:05,979 --> 00:08:12,190
and see if we can optimize for some

00:08:08,500 --> 00:08:13,630
predictive behavior a very known error

00:08:12,190 --> 00:08:15,039
metric which I'm not going to discuss

00:08:13,630 --> 00:08:18,820
right now is of course the root mean

00:08:15,039 --> 00:08:20,560
squared error which allows you to

00:08:18,820 --> 00:08:22,270
optimize your parameters just by running

00:08:20,560 --> 00:08:26,469
over the algorithms over and over again

00:08:22,270 --> 00:08:30,849
trying different parameters but is that

00:08:26,469 --> 00:08:32,380
all we can do for instance if the data

00:08:30,849 --> 00:08:34,149
that looks ok and you have a low

00:08:32,380 --> 00:08:35,529
numerical error do you have the best

00:08:34,149 --> 00:08:38,320
recommender that you can have on your

00:08:35,529 --> 00:08:41,550
website well to answer that question one

00:08:38,320 --> 00:08:41,550
I have a look at a hypothetical

00:08:41,579 --> 00:08:45,959
hypothetical gas station that hires us

00:08:43,479 --> 00:08:48,490
to do recommendations for a gas station

00:08:45,959 --> 00:08:50,079
so the requirements for this system is

00:08:48,490 --> 00:08:52,390
that it needs to support anonymous and

00:08:50,079 --> 00:08:54,730
unknown customers of course it needs to

00:08:52,390 --> 00:08:57,339
be really fast and of course we like the

00:08:54,730 --> 00:08:59,050
low numerical error the recommendation

00:08:57,339 --> 00:09:00,910
is considered successfully if the

00:08:59,050 --> 00:09:04,000
customer buys the item after seeing the

00:09:00,910 --> 00:09:04,870
recommendation first so what happens is

00:09:04,000 --> 00:09:07,270
truck comes

00:09:04,870 --> 00:09:10,089
long to the gas station it's a new and

00:09:07,270 --> 00:09:12,250
unknown customer it's a tow truck so we

00:09:10,089 --> 00:09:13,930
recommend diesel we've learned this and

00:09:12,250 --> 00:09:15,520
does the customer buy the item after

00:09:13,930 --> 00:09:18,940
seeing as there's a recommendation yes

00:09:15,520 --> 00:09:21,160
he does then a different car comes along

00:09:18,940 --> 00:09:23,980
it's also a new and unknown customer

00:09:21,160 --> 00:09:26,500
it's a sports car so we recommend petrol

00:09:23,980 --> 00:09:27,700
and that's the customer buy the item

00:09:26,500 --> 00:09:32,200
after seeing this is a recommendation

00:09:27,700 --> 00:09:34,750
yes he does so what's the evaluation the

00:09:32,200 --> 00:09:37,810
data looks ok we have a low error or l

00:09:34,750 --> 00:09:39,820
loera very value we were able to

00:09:37,810 --> 00:09:42,520
accurately predict the recommendations

00:09:39,820 --> 00:09:46,720
and almost everything that we recommend

00:09:42,520 --> 00:09:49,900
gets bought wow this is a good

00:09:46,720 --> 00:09:53,830
recommender system well to tell you the

00:09:49,900 --> 00:09:56,140
truth I don't know from a commerce point

00:09:53,830 --> 00:09:58,510
of view my point would be what is the

00:09:56,140 --> 00:10:01,120
additional added value for using this

00:09:58,510 --> 00:10:02,710
recommender system if it adds value then

00:10:01,120 --> 00:10:07,260
it's a good recommender system but if it

00:10:02,710 --> 00:10:09,790
doesn't add value let us know of no use

00:10:07,260 --> 00:10:11,860
so common error metrics tells you the

00:10:09,790 --> 00:10:13,570
ability to accurately predict and see

00:10:11,860 --> 00:10:16,510
how well the recommender system is able

00:10:13,570 --> 00:10:19,089
to to measure how well this system is

00:10:16,510 --> 00:10:21,279
able to predict some behavior compared

00:10:19,089 --> 00:10:22,690
to the true behavior but from a commerce

00:10:21,279 --> 00:10:24,910
point of view we want to add value to

00:10:22,690 --> 00:10:26,020
the customer experience the customer

00:10:24,910 --> 00:10:28,390
experience is perceived differently

00:10:26,020 --> 00:10:31,810
among customers and even differently

00:10:28,390 --> 00:10:35,800
among time so how do we tackle such a

00:10:31,810 --> 00:10:38,020
complex complex problem what we do is we

00:10:35,800 --> 00:10:39,610
do long-term analysis what we want to

00:10:38,020 --> 00:10:42,279
find out is how is the performance of

00:10:39,610 --> 00:10:44,020
this recommended system over time one

00:10:42,279 --> 00:10:46,240
thing that we find very important is to

00:10:44,020 --> 00:10:49,060
know do the visitors return after buying

00:10:46,240 --> 00:10:50,920
a recommendation another thing that we

00:10:49,060 --> 00:10:52,630
do is we analyze the behavior because

00:10:50,920 --> 00:10:55,480
this learns us about how we can build

00:10:52,630 --> 00:10:58,810
new features and a drill a new value to

00:10:55,480 --> 00:11:01,209
the system that we've built and last but

00:10:58,810 --> 00:11:04,570
not least we do live user experiments of

00:11:01,209 --> 00:11:05,950
course without telling the users so how

00:11:04,570 --> 00:11:07,420
does such a system work well a

00:11:05,950 --> 00:11:10,390
recommender is a Dayton see a

00:11:07,420 --> 00:11:12,190
data-driven decision maker so we want to

00:11:10,390 --> 00:11:14,440
optimize the combination of algorithms

00:11:12,190 --> 00:11:16,240
that we use we also want to optimize the

00:11:14,440 --> 00:11:17,820
user interface in which we present the

00:11:16,240 --> 00:11:19,920
recommendations with

00:11:17,820 --> 00:11:24,960
times you real well we also want to

00:11:19,920 --> 00:11:26,130
optimize the user interaction flows so

00:11:24,960 --> 00:11:29,550
we've developed their own

00:11:26,130 --> 00:11:30,990
experimentation framework to find out if

00:11:29,550 --> 00:11:32,540
the customers really prefer the left

00:11:30,990 --> 00:11:34,920
version of the right version of the road

00:11:32,540 --> 00:11:38,100
so how the stretch the system works well

00:11:34,920 --> 00:11:39,840
that's pretty easy what we do is a

00:11:38,100 --> 00:11:41,760
customer comes through our website and

00:11:39,840 --> 00:11:43,380
request for some content and let's say

00:11:41,760 --> 00:11:45,150
there is a recommendation slot so the

00:11:43,380 --> 00:11:47,130
college being made to a recommender

00:11:45,150 --> 00:11:49,410
system for kept me some recommendations

00:11:47,130 --> 00:11:51,300
for customer 123 then the

00:11:49,410 --> 00:11:54,390
experimentation framework is in between

00:11:51,300 --> 00:11:56,670
and it classifies the user which could

00:11:54,390 --> 00:11:59,280
be arbitrarily random fifty percent of

00:11:56,670 --> 00:12:00,480
the users get the old algorithm fifty

00:11:59,280 --> 00:12:03,600
percent of the users get the new

00:12:00,480 --> 00:12:05,610
algorithm the recommender system is

00:12:03,600 --> 00:12:07,770
recommending the algorithm a or b

00:12:05,610 --> 00:12:09,240
depending on the classification and the

00:12:07,770 --> 00:12:11,340
recommendations are returned to the

00:12:09,240 --> 00:12:14,700
website and this is presented to our

00:12:11,340 --> 00:12:16,320
visitors then we also without the

00:12:14,700 --> 00:12:18,810
customer knowing this we measure the

00:12:16,320 --> 00:12:20,730
effect so we're able to report the

00:12:18,810 --> 00:12:23,760
differences over time and this allows us

00:12:20,730 --> 00:12:29,250
to learn if the new version is really an

00:12:23,760 --> 00:12:31,050
improvement over the control so what are

00:12:29,250 --> 00:12:34,620
the some results that we've learned

00:12:31,050 --> 00:12:36,180
through live user experiments so this is

00:12:34,620 --> 00:12:39,480
an example of a recommendation for a

00:12:36,180 --> 00:12:41,430
certain visitor it's a set of pans so

00:12:39,480 --> 00:12:43,650
one thing we've learned is that we want

00:12:41,430 --> 00:12:45,900
to optimize and personalize the product

00:12:43,650 --> 00:12:47,280
attributes being shown to a customer so

00:12:45,900 --> 00:12:50,280
depending on your profile we ought to

00:12:47,280 --> 00:12:51,600
show you some attributes and for some

00:12:50,280 --> 00:12:53,910
other customers we show different

00:12:51,600 --> 00:12:56,910
attributes so in the left picture this

00:12:53,910 --> 00:12:58,200
has a lot of technical facts what you

00:12:56,910 --> 00:12:59,760
see on the right side is the same

00:12:58,200 --> 00:13:01,710
product being recommended to some

00:12:59,760 --> 00:13:04,380
specific customer however it has

00:13:01,710 --> 00:13:06,210
different product attributes highlighted

00:13:04,380 --> 00:13:08,040
so the product as well as the

00:13:06,210 --> 00:13:10,050
visualization is personalized for this

00:13:08,040 --> 00:13:13,980
customer what we've learned is this can

00:13:10,050 --> 00:13:15,240
really add a lot of value what is

00:13:13,980 --> 00:13:18,060
another example of what we learned

00:13:15,240 --> 00:13:19,890
through experimentation is this is a

00:13:18,060 --> 00:13:22,950
recommendation selected for you because

00:13:19,890 --> 00:13:24,570
you like data mining this is all derived

00:13:22,950 --> 00:13:26,340
from implicit feedback that we get from

00:13:24,570 --> 00:13:28,410
the users so what is he actually doing

00:13:26,340 --> 00:13:30,540
on the side we thought well maybe it

00:13:28,410 --> 00:13:31,470
might be a good idea to incorporate the

00:13:30,540 --> 00:13:32,820
user and

00:13:31,470 --> 00:13:35,370
have him interact with a recommender

00:13:32,820 --> 00:13:37,260
system so we added a feature what a user

00:13:35,370 --> 00:13:39,060
can interact with the recommendations to

00:13:37,260 --> 00:13:41,580
say if he did or did not like this

00:13:39,060 --> 00:13:44,880
recommendation and try to improve the

00:13:41,580 --> 00:13:47,120
recommendations for him and for some

00:13:44,880 --> 00:13:49,410
users this really adds a lot of value

00:13:47,120 --> 00:13:52,650
now let's have a look at an example of

00:13:49,410 --> 00:13:55,260
where we show recommendations well we

00:13:52,650 --> 00:13:56,910
could personalize this whole page and

00:13:55,260 --> 00:13:59,160
show different kinds of recommendation

00:13:56,910 --> 00:14:01,430
but this specific moment in time this is

00:13:59,160 --> 00:14:03,300
what we show so what you see here is

00:14:01,430 --> 00:14:06,360
recommendations based on the things that

00:14:03,300 --> 00:14:10,100
you interact with which you wish list we

00:14:06,360 --> 00:14:12,510
can also recommend search queries to you

00:14:10,100 --> 00:14:13,950
we're also able to recommend some

00:14:12,510 --> 00:14:17,160
general personalized recommendations

00:14:13,950 --> 00:14:19,020
however as you can see it this does not

00:14:17,160 --> 00:14:22,290
contain feedback why we recommend this

00:14:19,020 --> 00:14:25,650
to you are also able to recommend deals

00:14:22,290 --> 00:14:27,660
for you or even price changes or the

00:14:25,650 --> 00:14:30,240
thing I like best is recommending

00:14:27,660 --> 00:14:33,780
categories to users and where we can

00:14:30,240 --> 00:14:37,050
recommend trends for you I'm really

00:14:33,780 --> 00:14:39,780
proud of that so so what have we just

00:14:37,050 --> 00:14:42,030
seen we're able so what we're basically

00:14:39,780 --> 00:14:45,240
doing is recommending algorithms and

00:14:42,030 --> 00:14:47,310
output to users and the output of the

00:14:45,240 --> 00:14:49,700
algorithms is content which could be

00:14:47,310 --> 00:14:51,750
products authors artists deals

00:14:49,700 --> 00:14:53,610
categories you name it we can recommend

00:14:51,750 --> 00:14:55,680
it and this is all done with a

00:14:53,610 --> 00:14:57,120
personalized user interface so what we

00:14:55,680 --> 00:14:59,550
recommend on how we recommend it to you

00:14:57,120 --> 00:15:01,170
is personalized we're also able to

00:14:59,550 --> 00:15:03,420
determine the priority in which we want

00:15:01,170 --> 00:15:05,400
to show the content on the page we can

00:15:03,420 --> 00:15:07,320
do this over multiple channels because

00:15:05,400 --> 00:15:09,000
what we've seen is that when visitors

00:15:07,320 --> 00:15:11,340
enter their website they start in the

00:15:09,000 --> 00:15:12,930
morning using their mobile device then

00:15:11,340 --> 00:15:16,920
at eleven o'clock they come back using

00:15:12,930 --> 00:15:19,200
an old PC using an old browser then add

00:15:16,920 --> 00:15:21,390
a six o'clock to come back using a

00:15:19,200 --> 00:15:22,950
tablet and then add eight o'clock the

00:15:21,390 --> 00:15:25,320
government and to the side right away do

00:15:22,950 --> 00:15:27,030
the purchase and then they leave so we

00:15:25,320 --> 00:15:31,860
want to optimize this over all channels

00:15:27,030 --> 00:15:32,970
so the perception is complete so what

00:15:31,860 --> 00:15:35,250
should be the ultimate level of

00:15:32,970 --> 00:15:37,110
personalization well since I work in a

00:15:35,250 --> 00:15:38,670
team specialized in personalization I

00:15:37,110 --> 00:15:41,690
may not have an unbiased opinion about

00:15:38,670 --> 00:15:44,580
this but in my opinion it should be this

00:15:41,690 --> 00:15:45,360
what we of course try to do is recommend

00:15:44,580 --> 00:15:48,870
the right item

00:15:45,360 --> 00:15:51,779
to our customer it should be in the

00:15:48,870 --> 00:15:53,070
right presentation it should be in the

00:15:51,779 --> 00:15:55,890
right place because we don't want to

00:15:53,070 --> 00:15:59,310
surprise our visitors and it has to have

00:15:55,890 --> 00:16:00,930
the right promotion which mean price and

00:15:59,310 --> 00:16:02,370
it has to have the right timing the

00:16:00,930 --> 00:16:05,250
right timing means it has to be

00:16:02,370 --> 00:16:06,450
convenient for the visitor and last but

00:16:05,250 --> 00:16:08,550
not least we want to have the right

00:16:06,450 --> 00:16:10,890
frequency because if we only show the

00:16:08,550 --> 00:16:12,750
recommendation once we're not able we're

00:16:10,890 --> 00:16:15,510
not sure if the visitor didn't see the

00:16:12,750 --> 00:16:18,329
recommendation or did not like it but if

00:16:15,510 --> 00:16:20,240
we repeat it too often then it might get

00:16:18,329 --> 00:16:22,230
irritating because we show the

00:16:20,240 --> 00:16:23,310
recommendation 50 times to you and

00:16:22,230 --> 00:16:25,019
you're still not interacting with the

00:16:23,310 --> 00:16:29,550
recommendation so that might also be

00:16:25,019 --> 00:16:31,079
occluded we're not doing a good job so

00:16:29,550 --> 00:16:32,910
how does this real-time behavior that we

00:16:31,079 --> 00:16:35,760
all just discussed constraints the

00:16:32,910 --> 00:16:37,920
recommender system what we want to find

00:16:35,760 --> 00:16:39,630
out in real time is what would really

00:16:37,920 --> 00:16:41,399
add value to the customer given his

00:16:39,630 --> 00:16:44,610
current context because if he's

00:16:41,399 --> 00:16:46,800
searching for a TV in our search engine

00:16:44,610 --> 00:16:48,630
that he's probably orientating for and

00:16:46,800 --> 00:16:50,790
it has no clue of what TV is probably

00:16:48,630 --> 00:16:55,829
going to buy but if he is looking for a

00:16:50,790 --> 00:16:57,540
samsung sm 52,000 with cable then he

00:16:55,829 --> 00:16:59,880
probably has a good idea of what he's

00:16:57,540 --> 00:17:01,589
trying to purchase that it would confuse

00:16:59,880 --> 00:17:04,049
the customer and trying to sell

00:17:01,589 --> 00:17:05,520
different types of tvs so this is

00:17:04,049 --> 00:17:08,160
something that we need to find out in

00:17:05,520 --> 00:17:10,620
real time and what do we already know

00:17:08,160 --> 00:17:12,390
about this customer how does he interact

00:17:10,620 --> 00:17:15,449
with our recommendations are we able to

00:17:12,390 --> 00:17:18,000
inspire this customer and what should be

00:17:15,449 --> 00:17:19,500
the level of personalization well the

00:17:18,000 --> 00:17:22,079
real challenge in this is that we have

00:17:19,500 --> 00:17:24,449
to determine what to do with the time

00:17:22,079 --> 00:17:27,000
given to us so technically that means

00:17:24,449 --> 00:17:28,799
100 milliseconds but due to network over

00:17:27,000 --> 00:17:32,630
at we have only about 70 or 80

00:17:28,799 --> 00:17:36,419
milliseconds so every milliseconds count

00:17:32,630 --> 00:17:39,419
so what are some hints that I want to

00:17:36,419 --> 00:17:41,760
give you is try to cash expensive data

00:17:39,419 --> 00:17:44,730
this could be anything from a database

00:17:41,760 --> 00:17:46,679
lookup tool a expensive computation if

00:17:44,730 --> 00:17:48,030
you need it on later on maybe you want

00:17:46,679 --> 00:17:49,830
to catch the result just to make sure

00:17:48,030 --> 00:17:52,280
that we're not trying to calculate the

00:17:49,830 --> 00:17:55,590
same thing over and over again and

00:17:52,280 --> 00:17:58,620
definitely try to tune and try different

00:17:55,590 --> 00:17:59,260
jdbc connectivity components what I've

00:17:58,620 --> 00:18:01,360
seen

00:17:59,260 --> 00:18:04,090
and practices that we were able to cut

00:18:01,360 --> 00:18:05,950
down the database calls with over 10 or

00:18:04,090 --> 00:18:08,160
20 milliseconds just by tuning the right

00:18:05,950 --> 00:18:11,350
parameters for your specific query a

00:18:08,160 --> 00:18:15,640
last but not least every JDK comes with

00:18:11,350 --> 00:18:17,590
a visual vm java profiler use this this

00:18:15,640 --> 00:18:20,200
really helps you in getting a good idea

00:18:17,590 --> 00:18:25,060
of where your actual computations are

00:18:20,200 --> 00:18:27,070
being spent so thank you very much for

00:18:25,060 --> 00:18:29,680
listening to my talk if you have any

00:18:27,070 --> 00:18:34,480
questions if there is time you can ask

00:18:29,680 --> 00:18:37,270
them to me no time so come back to me

00:18:34,480 --> 00:18:39,570
I'll be downstairs at our booth thank

00:18:37,270 --> 00:18:39,570

YouTube URL: https://www.youtube.com/watch?v=f-y_JRmhStM


