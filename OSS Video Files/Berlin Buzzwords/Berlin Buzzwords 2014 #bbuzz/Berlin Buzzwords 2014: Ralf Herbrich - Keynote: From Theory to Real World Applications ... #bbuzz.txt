Title: Berlin Buzzwords 2014: Ralf Herbrich - Keynote: From Theory to Real World Applications ... #bbuzz
Publication date: 2014-06-10
Playlist: Berlin Buzzwords 2014 #bbuzz
Description: 
	Ralf Herbrich talking about "From Theory to Real World Applications: Technology Transfer in Practice"

In this talk, I will talk about my experiences of technology transfer over the past decade. Technology transfer - the process of moving promising research topics into a level of maturity that's ready for bulk manufacturing or production - remains one of the largest mysteries. Although each technology transfer was somewhat unique, I found some surprising similarities in the various technology transfers and I will attempt to group and discuss them. During the course of the talk, I will introduce one of the most promising techniques in Machine learning - graphical models and approximate message passing - as well as their application to gamer ranking and computational online advertising.

Read more:
https://2014.berlinbuzzwords.de/session/keynote-theory-real-world-applications-technology-transfer-practice

About Ralf Herbrich:
https://2014.berlinbuzzwords.de/user/366/event/1

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:05,549 --> 00:00:10,620
let's get started a lot of stuff to

00:00:08,400 --> 00:00:14,460
cover good morning everyone

00:00:10,620 --> 00:00:16,470
first as z1 was saying my name is Ralph

00:00:14,460 --> 00:00:20,160
and what I want to talk in the next hour

00:00:16,470 --> 00:00:22,619
is is actually tell more of a story and

00:00:20,160 --> 00:00:24,869
in that story it's the story of what

00:00:22,619 --> 00:00:26,960
I've been doing the last 15 years it's

00:00:24,869 --> 00:00:30,660
the story of technology transfers so my

00:00:26,960 --> 00:00:33,930
I'll start with a bit of I start with a

00:00:30,660 --> 00:00:36,809
bit of background what is technology

00:00:33,930 --> 00:00:41,309
transfer why I'm talking about this

00:00:36,809 --> 00:00:43,049
topic and and then I I want to go

00:00:41,309 --> 00:00:45,170
through two particular technology

00:00:43,049 --> 00:00:48,720
transfers that I've been at a pleasure

00:00:45,170 --> 00:00:52,110
to work with or or to be part of one of

00:00:48,720 --> 00:00:54,000
them concerns a ranking system for for

00:00:52,110 --> 00:00:58,409
people when they play online so how many

00:00:54,000 --> 00:01:01,860
people here have played on Xbox Live not

00:00:58,409 --> 00:01:05,100
that many how many played online on Xbox

00:01:01,860 --> 00:01:06,659
Live halo this is good so I brought a

00:01:05,100 --> 00:01:08,850
video of this game because it seems that

00:01:06,659 --> 00:01:10,710
95 percent of the audience doesn't know

00:01:08,850 --> 00:01:12,149
that game so I'm gonna talk about that

00:01:10,710 --> 00:01:14,009
aspect and I'm also going to talk about

00:01:12,149 --> 00:01:16,530
a click-through rate prediction system

00:01:14,009 --> 00:01:20,509
that is that is used now or has been

00:01:16,530 --> 00:01:24,630
used at some of the major search engines

00:01:20,509 --> 00:01:26,549
and major online services but but I want

00:01:24,630 --> 00:01:27,659
to use the opportunity to actually talk

00:01:26,549 --> 00:01:30,450
about and give a little bit of a

00:01:27,659 --> 00:01:31,679
tutorial of of machine learning and of

00:01:30,450 --> 00:01:33,509
methods of machine learning that have

00:01:31,679 --> 00:01:36,869
really risen to prominence over the last

00:01:33,509 --> 00:01:39,960
10 years so the whole talk will be along

00:01:36,869 --> 00:01:42,390
a timeline but it hopefully hopefully

00:01:39,960 --> 00:01:44,009
able to to also shed a bit of light of

00:01:42,390 --> 00:01:46,979
the mathematics and how the mathematics

00:01:44,009 --> 00:01:49,679
translates into into code for state of

00:01:46,979 --> 00:01:51,240
the art machine learning systems and in

00:01:49,679 --> 00:01:53,189
the end what I want to do then is

00:01:51,240 --> 00:01:54,960
summarize those two and talked a little

00:01:53,189 --> 00:01:57,179
bit about the lessons learned both from

00:01:54,960 --> 00:01:58,350
a process point of view lessons for

00:01:57,179 --> 00:01:59,939
technology transfer when you have a

00:01:58,350 --> 00:02:01,709
kick-ass idea and you want to get it out

00:01:59,939 --> 00:02:03,619
to a million or ten million people and

00:02:01,709 --> 00:02:05,639
lessons learned on a technical level

00:02:03,619 --> 00:02:07,979
because machine learning these days is

00:02:05,639 --> 00:02:10,020
extremely popular but it isn't it isn't

00:02:07,979 --> 00:02:11,910
the hammer that solves every problem so

00:02:10,020 --> 00:02:13,830
bit of my background so I'm from Berlin

00:02:11,910 --> 00:02:18,250
actually I'm from Brandenburg but I

00:02:13,830 --> 00:02:20,050
studied here in 90 from 92 to 2000

00:02:18,250 --> 00:02:23,290
actually lift not far from here in

00:02:20,050 --> 00:02:24,880
Karina schlosser and I at the Technion

00:02:23,290 --> 00:02:27,850
Aversa T and what I studied as computer

00:02:24,880 --> 00:02:30,040
science I'm a I've been writing code

00:02:27,850 --> 00:02:32,830
since I was 11 years old and still

00:02:30,040 --> 00:02:35,440
continued to do and then did my PhD in

00:02:32,830 --> 00:02:36,850
statistics and at the time the field

00:02:35,440 --> 00:02:38,920
machine learning didn't really exist as

00:02:36,850 --> 00:02:40,000
such so it was more the field of

00:02:38,920 --> 00:02:42,850
artificial intelligence

00:02:40,000 --> 00:02:44,860
so then spend 11 year 9 years 11 years

00:02:42,850 --> 00:02:48,610
in total at Microsoft Microsoft Research

00:02:44,860 --> 00:02:49,780
in Cambridge where most of what I talk

00:02:48,610 --> 00:02:52,750
about in the story is going to be

00:02:49,780 --> 00:02:55,750
covered from and then spend a year at

00:02:52,750 --> 00:02:58,540
Facebook in Silicon Valley in in Palo

00:02:55,750 --> 00:03:01,870
Alto or Menlo Park and since last year

00:02:58,540 --> 00:03:04,959
September I'm back here in Berlin for

00:03:01,870 --> 00:03:06,730
many years to come working as Amazon on

00:03:04,959 --> 00:03:08,830
the development standards that just

00:03:06,730 --> 00:03:10,660
started here so what is technology

00:03:08,830 --> 00:03:12,910
transfer if you look at a wiki says it's

00:03:10,660 --> 00:03:14,230
the process of moving principle research

00:03:12,910 --> 00:03:16,239
or research topics into a love of

00:03:14,230 --> 00:03:18,400
maturity that it's ready for board

00:03:16,239 --> 00:03:20,020
manufacturing or production now many

00:03:18,400 --> 00:03:23,080
people are super example ticular many

00:03:20,020 --> 00:03:25,570
scientists and the problem is that it

00:03:23,080 --> 00:03:27,400
fails very very often and one of the

00:03:25,570 --> 00:03:29,200
reasons I think it fails is that public

00:03:27,400 --> 00:03:30,549
publishing an idea or making a

00:03:29,200 --> 00:03:33,190
breakthrough in science it's not the

00:03:30,549 --> 00:03:34,750
same as producing producing a product

00:03:33,190 --> 00:03:36,610
building a product has has complete

00:03:34,750 --> 00:03:38,860
different goals and success and exit

00:03:36,610 --> 00:03:41,560
criteria secondly there's really no

00:03:38,860 --> 00:03:42,730
training so you and I could email you

00:03:41,560 --> 00:03:44,380
get good training on a technical level

00:03:42,730 --> 00:03:47,560
that's no training on on what to focus

00:03:44,380 --> 00:03:48,820
on for that process and it is an all

00:03:47,560 --> 00:03:50,980
honesty it is a little hard to

00:03:48,820 --> 00:03:52,239
generalize this process so I'm trying to

00:03:50,980 --> 00:03:54,910
so I'll try to think that I'm actually

00:03:52,239 --> 00:03:57,010
criticizing here but it it isn't a

00:03:54,910 --> 00:03:58,840
magical five-step procedure you follow

00:03:57,010 --> 00:04:01,600
them and your idea will definitely end

00:03:58,840 --> 00:04:03,489
them in a product um so let's start with

00:04:01,600 --> 00:04:05,980
the first with the first case study I'm

00:04:03,489 --> 00:04:07,989
a system called true skill I'm given how

00:04:05,980 --> 00:04:10,060
how many people play xbox life I guess

00:04:07,989 --> 00:04:11,980
that name doesn't ring about the

00:04:10,060 --> 00:04:15,610
official name for the ranking system and

00:04:11,980 --> 00:04:18,970
so the process started back in 2004 so

00:04:15,610 --> 00:04:22,060
in July in June July 2004 it was an

00:04:18,970 --> 00:04:23,800
internal beta test of a game called halo

00:04:22,060 --> 00:04:25,240
2 so this is the first person shooter

00:04:23,800 --> 00:04:28,780
I'm gonna have a video of a similar game

00:04:25,240 --> 00:04:30,250
later and a colleague of mine Torah

00:04:28,780 --> 00:04:32,230
grapple and I we were we were playing

00:04:30,250 --> 00:04:34,300
this game and as we played it we were

00:04:32,230 --> 00:04:36,730
actually really into gaming online

00:04:34,300 --> 00:04:38,500
gaming realize that graphically and from

00:04:36,730 --> 00:04:40,810
a network is super good but what was

00:04:38,500 --> 00:04:42,490
really not well is we got matched with

00:04:40,810 --> 00:04:44,590
who we played with every night and so we

00:04:42,490 --> 00:04:46,210
thought about it from from a statistical

00:04:44,590 --> 00:04:47,320
modeling or machine learning point of

00:04:46,210 --> 00:04:49,540
view what is the problem that we're

00:04:47,320 --> 00:04:51,220
trying to solve here and so on you when

00:04:49,540 --> 00:04:53,320
you try to formalize this the problem is

00:04:51,220 --> 00:04:55,600
that at the end of a match you have the

00:04:53,320 --> 00:04:57,310
outcome of the match of K teams so

00:04:55,600 --> 00:04:59,740
here's an example we have two teams the

00:04:57,310 --> 00:05:01,720
red team and blue team and they have a

00:04:59,740 --> 00:05:02,530
particular score so in this game they

00:05:01,720 --> 00:05:04,840
shoot at each other

00:05:02,530 --> 00:05:06,520
so in this came in this particular case

00:05:04,840 --> 00:05:08,350
the red team won over the blue team so

00:05:06,520 --> 00:05:10,720
that's what you know which team had how

00:05:08,350 --> 00:05:12,130
many points the end of of a game this

00:05:10,720 --> 00:05:14,680
could be a racing game or a shooting

00:05:12,130 --> 00:05:16,690
game or game of chess and you know which

00:05:14,680 --> 00:05:18,250
players are in which teams and one thing

00:05:16,690 --> 00:05:21,070
that was particulars that there were

00:05:18,250 --> 00:05:22,990
many different kinds of games so you

00:05:21,070 --> 00:05:25,510
didn't have just two team games you had

00:05:22,990 --> 00:05:27,040
to build a system in that game in that

00:05:25,510 --> 00:05:29,590
particular instance that would also

00:05:27,040 --> 00:05:32,170
cover eight people playing against each

00:05:29,590 --> 00:05:33,490
other and then the possibility of some

00:05:32,170 --> 00:05:37,510
of them drawing because they have the

00:05:33,490 --> 00:05:39,280
same number of points okay and the chart

00:05:37,510 --> 00:05:41,590
the challenging thing is that this is

00:05:39,280 --> 00:05:43,660
the data you have the data is who played

00:05:41,590 --> 00:05:46,720
in which team which teams played against

00:05:43,660 --> 00:05:50,110
each other and you needed to associate

00:05:46,720 --> 00:05:51,880
or find or learn a number for each

00:05:50,110 --> 00:05:53,890
player a skill number that had the

00:05:51,880 --> 00:05:56,080
property delivery skill of player is

00:05:53,890 --> 00:05:57,280
bigger than the skill of player J then

00:05:56,080 --> 00:05:58,960
the probability that that player will

00:05:57,280 --> 00:06:00,670
win when they even when it paired up

00:05:58,960 --> 00:06:02,290
against each other is LA it's larger

00:06:00,670 --> 00:06:04,000
doesn't mean they went all the time but

00:06:02,290 --> 00:06:06,580
it means it's it's it's more likely and

00:06:04,000 --> 00:06:07,780
so why is that important that's

00:06:06,580 --> 00:06:09,400
important for two reasons

00:06:07,780 --> 00:06:11,620
it was clear we wanted to know the two

00:06:09,400 --> 00:06:13,750
of us who's the better but more

00:06:11,620 --> 00:06:15,040
importantly it's very important when you

00:06:13,750 --> 00:06:16,780
want to match people against each other

00:06:15,040 --> 00:06:19,210
and you look at an online universe today

00:06:16,780 --> 00:06:21,940
there's usually hundreds of thousands of

00:06:19,210 --> 00:06:23,770
people simultaneously live online being

00:06:21,940 --> 00:06:26,110
able to play against each other but only

00:06:23,770 --> 00:06:28,480
know they could not judge what is a good

00:06:26,110 --> 00:06:30,520
match for them so if you're doing a

00:06:28,480 --> 00:06:32,830
global scale you need a system that is

00:06:30,520 --> 00:06:35,110
able to pick the best combination of for

00:06:32,830 --> 00:06:37,300
six to eight players that play against

00:06:35,110 --> 00:06:38,470
each other so really what you want to do

00:06:37,300 --> 00:06:40,960
is you have these match outcomes that's

00:06:38,470 --> 00:06:43,330
your data who plays against whom and you

00:06:40,960 --> 00:06:45,430
want to kind of interleave them so you

00:06:43,330 --> 00:06:45,700
get to a global ordering that somewhat

00:06:45,430 --> 00:06:47,710
Khan

00:06:45,700 --> 00:06:49,180
assistant with the local orderings you

00:06:47,710 --> 00:06:51,880
have the subset of players so that's the

00:06:49,180 --> 00:06:54,610
mathematical problem and so what we did

00:06:51,880 --> 00:06:56,320
is then in the in September that that

00:06:54,610 --> 00:06:58,360
beta test stopped and we started to

00:06:56,320 --> 00:06:59,770
think okay how can we build a model for

00:06:58,360 --> 00:07:01,900
this a machine running Marlin but we

00:06:59,770 --> 00:07:03,760
started with is a probabilistic model so

00:07:01,900 --> 00:07:06,850
for the next literally next three months

00:07:03,760 --> 00:07:08,890
only until December of 2004 I was 10

00:07:06,850 --> 00:07:10,330
years ago we built that and so that

00:07:08,890 --> 00:07:13,450
model we had in mind we're thinking well

00:07:10,330 --> 00:07:16,270
what we suppose we know what my skill is

00:07:13,450 --> 00:07:17,860
and and tourist skill then there is a

00:07:16,270 --> 00:07:19,450
probability that each of us has a

00:07:17,860 --> 00:07:21,760
particular performance in a match so you

00:07:19,450 --> 00:07:23,860
see the distribution on the right and we

00:07:21,760 --> 00:07:25,420
know that from that performance we can

00:07:23,860 --> 00:07:27,220
work out how likely is the blue player

00:07:25,420 --> 00:07:28,990
to win let's say that's me and the red

00:07:27,220 --> 00:07:30,940
player because that's nothing more than

00:07:28,990 --> 00:07:33,070
the area under this curve so that's a

00:07:30,940 --> 00:07:35,320
particular Gaussian integral you can

00:07:33,070 --> 00:07:37,480
solve that now we thought well in a game

00:07:35,320 --> 00:07:39,940
like Xbox that has many modes that's not

00:07:37,480 --> 00:07:42,370
just two players not like chess so how

00:07:39,940 --> 00:07:43,870
can we generalize this to two teams and

00:07:42,370 --> 00:07:45,490
we make the simplest possible assumption

00:07:43,870 --> 00:07:47,920
which is that the performance of a team

00:07:45,490 --> 00:07:50,260
is the sum of the performances of its

00:07:47,920 --> 00:07:52,210
players so you have these performance

00:07:50,260 --> 00:07:55,180
variables they end up being something in

00:07:52,210 --> 00:07:57,160
memory and then you have the same the

00:07:55,180 --> 00:07:59,020
same model given the two performances of

00:07:57,160 --> 00:08:00,700
team one and Team two the team with the

00:07:59,020 --> 00:08:02,500
higher performance is more likely to win

00:08:00,700 --> 00:08:05,890
because you have these Gaussian drops

00:08:02,500 --> 00:08:08,650
and you get a Gaussian integral for that

00:08:05,890 --> 00:08:11,200
team performance one being bigger than

00:08:08,650 --> 00:08:13,000
the performance of team two but again we

00:08:11,200 --> 00:08:14,380
had teams of we had actually to cover a

00:08:13,000 --> 00:08:16,830
situation where we had more than two

00:08:14,380 --> 00:08:19,090
teams so what did we do there well

00:08:16,830 --> 00:08:20,080
intuitively would do the most natural

00:08:19,090 --> 00:08:21,910
thing you would say the team's

00:08:20,080 --> 00:08:23,470
performance is the sum of the skill of

00:08:21,910 --> 00:08:25,660
the sum of the performances of its

00:08:23,470 --> 00:08:27,670
players but now you have a very large

00:08:25,660 --> 00:08:29,260
number of outcomes even with three teams

00:08:27,670 --> 00:08:31,660
you already have six possible outcomes

00:08:29,260 --> 00:08:33,130
all permutations of team one wins over

00:08:31,660 --> 00:08:34,510
team two were with him three team one

00:08:33,130 --> 00:08:37,540
over team three over team two and so

00:08:34,510 --> 00:08:39,640
forth so that looked very difficult to

00:08:37,540 --> 00:08:41,320
solve or two to sample but then we

00:08:39,640 --> 00:08:42,580
realized we don't have to do this we

00:08:41,320 --> 00:08:43,720
have the data the one thing that's

00:08:42,580 --> 00:08:44,620
certain and that's that's interesting

00:08:43,720 --> 00:08:46,060
the machine learning is you have the

00:08:44,620 --> 00:08:49,630
data but you don't have is these numbers

00:08:46,060 --> 00:08:51,280
s so what used to be fixed in our model

00:08:49,630 --> 00:08:53,260
is not what we sexually fix what's

00:08:51,280 --> 00:08:55,630
actually fixes the match outcome at the

00:08:53,260 --> 00:08:57,670
end of a shooting match we know which of

00:08:55,630 --> 00:08:59,170
the three teams came first came second

00:08:57,670 --> 00:09:01,359
and came third

00:08:59,170 --> 00:09:03,519
so when you do that you actually make

00:09:01,359 --> 00:09:04,959
the skill variable something that you

00:09:03,519 --> 00:09:08,499
that you don't know that the model has

00:09:04,959 --> 00:09:10,329
to estimate and you make the outcome one

00:09:08,499 --> 00:09:11,259
beats two and at the same time team two

00:09:10,329 --> 00:09:14,019
beats team three

00:09:11,259 --> 00:09:16,839
the observations and you end up with

00:09:14,019 --> 00:09:19,179
these very simple trees and so what we

00:09:16,839 --> 00:09:21,249
implemented is known as a as a Markov

00:09:19,179 --> 00:09:23,799
sampler as a Monte Carlo sampler so

00:09:21,249 --> 00:09:26,139
simply assuming at the end of a match

00:09:23,799 --> 00:09:27,819
this team won over this team this team

00:09:26,139 --> 00:09:29,589
won over this team we implemented a

00:09:27,819 --> 00:09:33,100
random sampler that would generate how

00:09:29,589 --> 00:09:35,829
likely is s 1 s 2 s 3 and s 4 to be of a

00:09:33,100 --> 00:09:37,899
given number provided that we throw all

00:09:35,829 --> 00:09:38,799
throw away all the samples where the

00:09:37,899 --> 00:09:41,529
skills are not in the right order

00:09:38,799 --> 00:09:43,089
according to match outcome so we

00:09:41,529 --> 00:09:44,919
implemented this but then we realized we

00:09:43,089 --> 00:09:47,379
had two problems to solve one s we had

00:09:44,919 --> 00:09:48,669
to solve the the ranking problem and now

00:09:47,379 --> 00:09:51,069
what we end up with is a distribution

00:09:48,669 --> 00:09:53,679
over skill something that is not some

00:09:51,069 --> 00:09:55,869
it's not a number so when you do that we

00:09:53,679 --> 00:09:58,209
wonder well if we have to decide on a

00:09:55,869 --> 00:09:59,739
global ordering what kind of mistakes

00:09:58,209 --> 00:10:03,100
could we do there's two types of

00:09:59,739 --> 00:10:05,199
mistakes we can do we could either are

00:10:03,100 --> 00:10:07,329
up because we had too little data match

00:10:05,199 --> 00:10:10,239
outcome data we could either put a bad

00:10:07,329 --> 00:10:12,069
player at the top of a leaderboard or we

00:10:10,239 --> 00:10:13,059
could put a good player a really good

00:10:12,069 --> 00:10:15,549
player at the bottom of the leaderboard

00:10:13,059 --> 00:10:18,899
so which one of the two do you think is

00:10:15,549 --> 00:10:21,669
is the worst of the two mistakes to do a

00:10:18,899 --> 00:10:28,540
bad player on top or a good player to

00:10:21,669 --> 00:10:30,639
bottom why that's right that's right

00:10:28,540 --> 00:10:31,629
but but if I ask you in Formula one

00:10:30,639 --> 00:10:34,929
who's currently the eighteenth

00:10:31,629 --> 00:10:36,549
understanding can you name me that but

00:10:34,929 --> 00:10:39,790
if I ask you who's the currently the top

00:10:36,549 --> 00:10:41,619
of the leaderboard I'm sure you can name

00:10:39,790 --> 00:10:43,179
me that most people focus on the top of

00:10:41,619 --> 00:10:44,589
a leaderboard even those that are not

00:10:43,179 --> 00:10:46,689
very good so if you want to have a

00:10:44,589 --> 00:10:48,160
legitimate leaderboard you got to make

00:10:46,689 --> 00:10:50,019
sure the top is accurate and there's not

00:10:48,160 --> 00:10:52,629
bad player in there so that's why we

00:10:50,019 --> 00:10:54,279
decided for an asymmetric loss and what

00:10:52,629 --> 00:10:56,049
you end up doing is when you sort people

00:10:54,279 --> 00:10:57,759
you look at their mean skill the

00:10:56,049 --> 00:10:59,709
variance and you subtract the two it's a

00:10:57,759 --> 00:11:01,329
very simple equation to implement and

00:10:59,709 --> 00:11:03,669
then you sort so that was extremely

00:11:01,329 --> 00:11:05,379
simple to sort the second thing we had

00:11:03,669 --> 00:11:07,389
to do is we have to do matchmaking which

00:11:05,379 --> 00:11:09,610
is end players like a hundred players

00:11:07,389 --> 00:11:11,350
are online at the same time which two

00:11:09,610 --> 00:11:12,180
are the best match and we use the very

00:11:11,350 --> 00:11:15,149
intuitive

00:11:12,180 --> 00:11:16,589
equation that is a closed form a closed

00:11:15,149 --> 00:11:19,019
form equation that you can work out is

00:11:16,589 --> 00:11:20,459
basically saying for two players IJ

00:11:19,019 --> 00:11:22,709
there are currently life and can play

00:11:20,459 --> 00:11:24,509
online what's the probability that they

00:11:22,709 --> 00:11:26,069
have the same performance and we

00:11:24,509 --> 00:11:28,980
normalize this by assuming we had

00:11:26,069 --> 00:11:31,410
identical players same mean skill saying

00:11:28,980 --> 00:11:33,660
no more uncertainty about their skill so

00:11:31,410 --> 00:11:36,329
if you do that then you get something

00:11:33,660 --> 00:11:38,100
that is that gives for gamers something

00:11:36,329 --> 00:11:39,689
exciting because it's a it's the kind of

00:11:38,100 --> 00:11:41,759
match where the outcome isn't determined

00:11:39,689 --> 00:11:43,139
until the end of the match but also when

00:11:41,759 --> 00:11:44,970
you look at an information theory it's

00:11:43,139 --> 00:11:46,559
the most informative outcome it's

00:11:44,970 --> 00:11:49,230
something is the match that creates that

00:11:46,559 --> 00:11:50,699
gives the best information so after

00:11:49,230 --> 00:11:52,350
three months all the work was done so it

00:11:50,699 --> 00:11:53,730
was merely a question of a few months

00:11:52,350 --> 00:11:56,069
until this would be out in the hands of

00:11:53,730 --> 00:11:58,379
gamers well that's not entirely true we

00:11:56,069 --> 00:12:00,120
can guess that given at the given the

00:11:58,379 --> 00:12:02,399
arrow it's gonna go on for a little

00:12:00,120 --> 00:12:03,600
longer so in the next three months we

00:12:02,399 --> 00:12:05,579
literally wrote the code I just

00:12:03,600 --> 00:12:08,009
described and incorporate it into the

00:12:05,579 --> 00:12:09,569
code based off of xbox live which was

00:12:08,009 --> 00:12:11,189
going to go live in November that year

00:12:09,569 --> 00:12:14,399
so we knew that the launch date was

00:12:11,189 --> 00:12:16,879
November 2005 of the old xbox live

00:12:14,399 --> 00:12:19,649
service and the last generation of Xbox

00:12:16,879 --> 00:12:21,029
but what happened now is the game

00:12:19,649 --> 00:12:22,649
developers the people who actually make

00:12:21,029 --> 00:12:24,209
the silicon into something useful they

00:12:22,649 --> 00:12:25,529
needed to understand what this new

00:12:24,209 --> 00:12:26,879
ranking system is and how it works and

00:12:25,529 --> 00:12:29,040
how they can find you in their games so

00:12:26,879 --> 00:12:30,480
we spent an entire e of six months not

00:12:29,040 --> 00:12:32,429
writing any code not doing any research

00:12:30,480 --> 00:12:34,589
but having to go around and talk with

00:12:32,429 --> 00:12:37,079
all the launch developers how to use

00:12:34,589 --> 00:12:39,120
this new system how to show skills how

00:12:37,079 --> 00:12:41,009
to you know how to trade off waiting

00:12:39,120 --> 00:12:42,480
time in the lobby and match quality

00:12:41,009 --> 00:12:44,910
because the match quality of this was

00:12:42,480 --> 00:12:46,980
probabilistic it was pretty accurate but

00:12:44,910 --> 00:12:49,259
it was unknown it was not something even

00:12:46,980 --> 00:12:50,819
the api's burn burned the weren't

00:12:49,259 --> 00:12:53,490
exactly the same as they used to be

00:12:50,819 --> 00:12:55,559
before so then in November the game

00:12:53,490 --> 00:12:57,629
launched and something good happen and

00:12:55,559 --> 00:12:59,339
bad happen the good thing that happened

00:12:57,629 --> 00:13:01,620
is Xbox that I've became extremely

00:12:59,339 --> 00:13:02,910
popular more popular we thought we had

00:13:01,620 --> 00:13:05,490
implemented this sampler and this

00:13:02,910 --> 00:13:07,920
sampler was very slow I mean we

00:13:05,490 --> 00:13:09,540
estimated perhaps a million people come

00:13:07,920 --> 00:13:12,300
online but it was it was growing so fast

00:13:09,540 --> 00:13:14,999
that it was clear that if we don't speed

00:13:12,300 --> 00:13:16,740
this up then by three months in we

00:13:14,999 --> 00:13:18,240
wouldn't have the code wouldn't be able

00:13:16,740 --> 00:13:20,100
to execute on the matchmaking server

00:13:18,240 --> 00:13:21,509
anymore on the ranking server so we

00:13:20,100 --> 00:13:23,069
needed to do something to speed this up

00:13:21,509 --> 00:13:24,120
and this is when we went back to the

00:13:23,069 --> 00:13:25,510
drawing board and actually did some

00:13:24,120 --> 00:13:27,640
research for four

00:13:25,510 --> 00:13:29,380
of month and it's a methodology that is

00:13:27,640 --> 00:13:31,180
it's proven extremely powerful so I want

00:13:29,380 --> 00:13:33,250
to go a little deeper here something

00:13:31,180 --> 00:13:35,170
that I've been using ever since and and

00:13:33,250 --> 00:13:37,330
it's it's a it's something that relates

00:13:35,170 --> 00:13:39,550
nicely to to computation as well and to

00:13:37,330 --> 00:13:41,260
coding it's a framework called facto

00:13:39,550 --> 00:13:42,880
graph so you you saw these graphs or at

00:13:41,260 --> 00:13:44,890
these variables they ended up just being

00:13:42,880 --> 00:13:48,160
storage you just stored is in memory or

00:13:44,890 --> 00:13:50,200
in on registers but now in an effective

00:13:48,160 --> 00:13:51,940
graph you also represent the factorial

00:13:50,200 --> 00:13:54,100
relation the product relation between

00:13:51,940 --> 00:13:55,840
two any sets of variables when you have

00:13:54,100 --> 00:13:58,060
a probability distribution over match

00:13:55,840 --> 00:14:00,010
outcomes or over skills so a simple

00:13:58,060 --> 00:14:01,750
thing it's actually just graphical so if

00:14:00,010 --> 00:14:03,670
you have effect the graph over three

00:14:01,750 --> 00:14:05,950
variables a b c and it looks like that

00:14:03,670 --> 00:14:07,800
that really just means that rather than

00:14:05,950 --> 00:14:10,510
having an arbitrary function p

00:14:07,800 --> 00:14:12,400
probability of all data you actually

00:14:10,510 --> 00:14:14,290
have something that effect arises in a

00:14:12,400 --> 00:14:16,900
factor of a a factor of B and the third

00:14:14,290 --> 00:14:18,820
factor connects uses all the three

00:14:16,900 --> 00:14:20,800
variables so it just says how many

00:14:18,820 --> 00:14:22,180
factors do I have and how many variables

00:14:20,800 --> 00:14:24,070
does each factor really interact with

00:14:22,180 --> 00:14:25,420
and whereas that become important it

00:14:24,070 --> 00:14:27,910
becomes important in our example here

00:14:25,420 --> 00:14:29,380
because in base law we knew that what we

00:14:27,910 --> 00:14:31,150
really computed is the probability of

00:14:29,380 --> 00:14:32,920
the skills given the match outcome and

00:14:31,150 --> 00:14:33,970
when you look in the textbook that's

00:14:32,920 --> 00:14:35,500
just the probability of the match

00:14:33,970 --> 00:14:37,450
outcome given the skill times the

00:14:35,500 --> 00:14:39,250
probability skills so it's two factors

00:14:37,450 --> 00:14:41,440
that's the first factor that's the

00:14:39,250 --> 00:14:42,850
second factor let me realize we don't

00:14:41,440 --> 00:14:44,830
have an arbitrary relationship between

00:14:42,850 --> 00:14:45,970
them what we do is we actually assume

00:14:44,830 --> 00:14:48,490
that all the skills of people are

00:14:45,970 --> 00:14:49,930
independent so skill one skill two are

00:14:48,490 --> 00:14:52,210
independent of each other meaning we

00:14:49,930 --> 00:14:54,370
have a set of factors for each of the

00:14:52,210 --> 00:14:56,620
for each of the variables we also

00:14:54,370 --> 00:14:58,830
realize that we have a rather linear

00:14:56,620 --> 00:15:01,570
flow of forward flow of what we think

00:14:58,830 --> 00:15:03,670
makes makes a make makes a game end up

00:15:01,570 --> 00:15:06,040
in a win or a loss for a player which is

00:15:03,670 --> 00:15:08,170
that each skill is connected to a

00:15:06,040 --> 00:15:09,430
performance of the team the performances

00:15:08,170 --> 00:15:10,870
of the team are connected to a

00:15:09,430 --> 00:15:12,700
difference simply by taking the

00:15:10,870 --> 00:15:14,410
difference of them and the difference

00:15:12,700 --> 00:15:15,700
being positive results in one player

00:15:14,410 --> 00:15:18,070
winning the difference being negative in

00:15:15,700 --> 00:15:20,470
the other so you have this graph here

00:15:18,070 --> 00:15:23,350
and the computation that you have to do

00:15:20,470 --> 00:15:25,570
that was too slow was the computation of

00:15:23,350 --> 00:15:27,370
summing out the variables team variables

00:15:25,570 --> 00:15:28,660
and the difference barrels if you know

00:15:27,370 --> 00:15:30,490
if you don't have these variables then

00:15:28,660 --> 00:15:33,310
mathematically you have just computed

00:15:30,490 --> 00:15:35,400
the what a machine can best think about

00:15:33,310 --> 00:15:38,020
the best skill estimate for a player and

00:15:35,400 --> 00:15:39,430
turns out that this summation can be

00:15:38,020 --> 00:15:42,100
done a lot faster than some

00:15:39,430 --> 00:15:44,980
generating random samples of s1 s2 and

00:15:42,100 --> 00:15:47,380
then throwing all of them away that

00:15:44,980 --> 00:15:49,300
don't result in in the data you actually

00:15:47,380 --> 00:15:51,400
observed the Metro outcome and here's

00:15:49,300 --> 00:15:52,530
the here's how that works so imagine I

00:15:51,400 --> 00:15:55,750
just turned this thing on its head

00:15:52,530 --> 00:15:58,750
imagine we have four factors and five

00:15:55,750 --> 00:16:01,050
variables V W XY and Z and what we want

00:15:58,750 --> 00:16:03,250
to compute is what's the what's the

00:16:01,050 --> 00:16:06,580
distribution over W so all we need to

00:16:03,250 --> 00:16:08,500
only to do is we sum over V XY and Z so

00:16:06,580 --> 00:16:10,360
if you do this in a naive way you can

00:16:08,500 --> 00:16:12,400
see that this is this is non computable

00:16:10,360 --> 00:16:14,680
it becomes np-hard because this is an

00:16:12,400 --> 00:16:16,720
exponential number of summands

00:16:14,680 --> 00:16:18,190
that you have to do so for every value

00:16:16,720 --> 00:16:21,070
of V that says only two values that

00:16:18,190 --> 00:16:23,440
would already be 16 summons 2 by 2 times

00:16:21,070 --> 00:16:24,820
2 times 2 times 2 and if I have many

00:16:23,440 --> 00:16:26,890
more variables we have we had over a

00:16:24,820 --> 00:16:28,360
million gamers and men you know even

00:16:26,890 --> 00:16:31,210
with 8 gamers you already have too much

00:16:28,360 --> 00:16:32,530
State to sum over but one thing that's

00:16:31,210 --> 00:16:34,480
interesting when you look at this at

00:16:32,530 --> 00:16:36,700
this graph the picture you can see that

00:16:34,480 --> 00:16:38,170
W is really only involved in 2 factors F

00:16:36,700 --> 00:16:40,690
1 and F 2 it doesn't really matter what

00:16:38,170 --> 00:16:43,210
f3 and f4 is and algebraically you can

00:16:40,690 --> 00:16:44,350
see that we can take one factor which is

00:16:43,210 --> 00:16:45,970
the factor of 1 and then the other

00:16:44,350 --> 00:16:48,820
factor the other set of robots on the

00:16:45,970 --> 00:16:52,450
right and we just turned a sum of

00:16:48,820 --> 00:16:54,870
products into a product of sums and if

00:16:52,450 --> 00:16:56,860
we simply introduce a shorthand notation

00:16:54,870 --> 00:16:59,080
something that we a temporary storage

00:16:56,860 --> 00:17:00,880
for for this function so this is still a

00:16:59,080 --> 00:17:04,240
function of W this is still a function

00:17:00,880 --> 00:17:06,160
of W after summing out x y&z we now get

00:17:04,240 --> 00:17:08,050
one of the first relationships is when

00:17:06,160 --> 00:17:09,490
you want to compute the margin of anak

00:17:08,050 --> 00:17:11,620
machine wants to compute the margin of a

00:17:09,490 --> 00:17:13,390
variable it just needs to set to take

00:17:11,620 --> 00:17:15,910
the product of these neighboring

00:17:13,390 --> 00:17:17,920
functions em that neighboring to the

00:17:15,910 --> 00:17:20,200
variable to the factors of this of this

00:17:17,920 --> 00:17:23,110
variable and how is the equation looking

00:17:20,200 --> 00:17:26,980
for that message same thing again F 2 as

00:17:23,110 --> 00:17:28,420
a factor has only two variables WN x y&z

00:17:26,980 --> 00:17:30,730
are not variables of F 2 so that means

00:17:28,420 --> 00:17:33,700
we can again use the same trick and make

00:17:30,730 --> 00:17:37,510
the sum of products into a product of

00:17:33,700 --> 00:17:39,550
sums here's the product it's just called

00:17:37,510 --> 00:17:41,020
distributive law but what's nice is if

00:17:39,550 --> 00:17:43,390
we now introduce a shorthand notation

00:17:41,020 --> 00:17:45,310
for this term we see that all we need to

00:17:43,390 --> 00:17:48,130
do in any given factor we just need to

00:17:45,310 --> 00:17:50,620
do a computation along the edge by

00:17:48,130 --> 00:17:52,030
summing out the summing out each of the

00:17:50,620 --> 00:17:52,780
possible variables that is connected to

00:17:52,030 --> 00:17:55,000
and

00:17:52,780 --> 00:17:57,040
waiting them by this message and this

00:17:55,000 --> 00:17:59,230
message we already seen how to convey

00:17:57,040 --> 00:18:01,090
compose that it's just the product of

00:17:59,230 --> 00:18:03,070
these incoming messages that we just

00:18:01,090 --> 00:18:04,960
defined so if you put these three

00:18:03,070 --> 00:18:06,850
together you saw how I peeled this graph

00:18:04,960 --> 00:18:08,440
away you see that the number of

00:18:06,850 --> 00:18:10,540
computations that are actually need to

00:18:08,440 --> 00:18:12,700
do is only as many as I have edges and

00:18:10,540 --> 00:18:14,680
these ranking graphs have very few edges

00:18:12,700 --> 00:18:16,900
overall we may have a million players

00:18:14,680 --> 00:18:19,330
but at each game has only as many edges

00:18:16,900 --> 00:18:21,190
of people participating so this actually

00:18:19,330 --> 00:18:24,040
when you implemented this ever what

00:18:21,190 --> 00:18:25,960
implement this this would compute the

00:18:24,040 --> 00:18:27,910
margin of the posterior of this variable

00:18:25,960 --> 00:18:30,880
in in linear time rather than

00:18:27,910 --> 00:18:33,280
exponential time the only the only

00:18:30,880 --> 00:18:35,170
tricky thing is that even these

00:18:33,280 --> 00:18:38,100
operations are extremely simple to do if

00:18:35,170 --> 00:18:40,570
if the message if these functions M are

00:18:38,100 --> 00:18:42,880
known as closed on a product meaning the

00:18:40,570 --> 00:18:46,120
you take a product you can just reduce

00:18:42,880 --> 00:18:47,800
it to a parameter updates this message

00:18:46,120 --> 00:18:49,780
equation doesn't have that property so

00:18:47,800 --> 00:18:52,180
the only thing we need to do is what can

00:18:49,780 --> 00:18:54,340
we do in message passing when we have

00:18:52,180 --> 00:18:57,130
messages like the last one in the bottom

00:18:54,340 --> 00:18:59,500
you saw where if I win the game then

00:18:57,130 --> 00:19:01,290
only those only those performance

00:18:59,500 --> 00:19:03,670
differences which are positive are

00:19:01,290 --> 00:19:05,500
justified by the data all the others

00:19:03,670 --> 00:19:07,180
have zero justification so if you

00:19:05,500 --> 00:19:09,400
multiply these two together and say it

00:19:07,180 --> 00:19:12,090
was a Gaussian then you don't get a

00:19:09,400 --> 00:19:15,100
Gaussian anymore but all you're doing is

00:19:12,090 --> 00:19:17,650
you just approximate that Gaussian by

00:19:15,100 --> 00:19:19,120
the closest possible Gaussian you can

00:19:17,650 --> 00:19:20,320
you can store and the nice thing is when

00:19:19,120 --> 00:19:23,500
you approximation you just store two

00:19:20,320 --> 00:19:25,690
numbers and mean in a variance and then

00:19:23,500 --> 00:19:27,370
what you can work out is the thing to

00:19:25,690 --> 00:19:29,650
solve is what's the best approximation

00:19:27,370 --> 00:19:31,810
for this red curve here which we need a

00:19:29,650 --> 00:19:33,850
lot in the ranking it's not actually in

00:19:31,810 --> 00:19:36,040
any approximation to a to a step

00:19:33,850 --> 00:19:38,260
function it is just another Gaussian

00:19:36,040 --> 00:19:39,430
because if you multiply that blue ocean

00:19:38,260 --> 00:19:40,780
by that right Gaussian which is a

00:19:39,430 --> 00:19:43,480
horrible approximation when you just

00:19:40,780 --> 00:19:45,970
look at the pictures you get something

00:19:43,480 --> 00:19:49,030
that's very close to this approximation

00:19:45,970 --> 00:19:50,980
so so it's extremely accurate and how

00:19:49,030 --> 00:19:53,650
did we use that well here's the graph

00:19:50,980 --> 00:19:55,030
again from before three teams one team

00:19:53,650 --> 00:19:57,010
has two players they played against each

00:19:55,030 --> 00:19:59,110
other we know that this player is very

00:19:57,010 --> 00:20:01,570
good he beat this team of two this team

00:19:59,110 --> 00:20:03,970
of to beat this single player we turn

00:20:01,570 --> 00:20:05,510
this into a vector graph so that's just

00:20:03,970 --> 00:20:07,880
that way

00:20:05,510 --> 00:20:09,530
and then we perform we see that the

00:20:07,880 --> 00:20:11,630
product of these factors what we might

00:20:09,530 --> 00:20:13,910
call a prior the product of these

00:20:11,630 --> 00:20:15,830
factors summing out the T variables is

00:20:13,910 --> 00:20:17,960
what we might call a likelihood so we're

00:20:15,830 --> 00:20:20,360
back to base Bayes rule but if you

00:20:17,960 --> 00:20:23,690
implement now just the code for these

00:20:20,360 --> 00:20:25,550
for the updates on the arrows and we've

00:20:23,690 --> 00:20:26,960
done that so if you go online you can

00:20:25,550 --> 00:20:28,430
actually download that code as many

00:20:26,960 --> 00:20:30,860
implementation that's one of them in F

00:20:28,430 --> 00:20:32,210
sharp it's it's a couple of hundred

00:20:30,860 --> 00:20:34,460
lines long it's literally just

00:20:32,210 --> 00:20:35,780
implementing the equations I talked

00:20:34,460 --> 00:20:38,270
about before that store meaning the

00:20:35,780 --> 00:20:41,180
variants in each of the in each of these

00:20:38,270 --> 00:20:42,670
variables and just update the mean and

00:20:41,180 --> 00:20:45,050
variance is on each of these variables

00:20:42,670 --> 00:20:46,640
this is known as a schedule but think of

00:20:45,050 --> 00:20:50,030
it is this is just how the code gets

00:20:46,640 --> 00:20:51,080
composed you're actually having a

00:20:50,030 --> 00:20:54,440
machine build a machine learning system

00:20:51,080 --> 00:20:56,570
that solves for the best possible skill

00:20:54,440 --> 00:20:59,600
for the best possible skills of the of

00:20:56,570 --> 00:21:00,770
the gamers now by December we should be

00:20:59,600 --> 00:21:02,870
finished with that transfer but the

00:21:00,770 --> 00:21:04,850
reality was is we had to implement that

00:21:02,870 --> 00:21:07,010
and that took three months the reality

00:21:04,850 --> 00:21:10,250
was that many many games had a hard time

00:21:07,010 --> 00:21:11,690
still adopting and knowing how their

00:21:10,250 --> 00:21:13,040
community looked like so the next thing

00:21:11,690 --> 00:21:15,590
we needed to do is actually develop a

00:21:13,040 --> 00:21:17,810
tool that helped game developers to see

00:21:15,590 --> 00:21:21,080
how is my population of gamers have

00:21:17,810 --> 00:21:24,500
placed my game how is that actually that

00:21:21,080 --> 00:21:26,180
population how is that spreading out

00:21:24,500 --> 00:21:30,080
over the skill skill access that we have

00:21:26,180 --> 00:21:32,390
and and how how how now how complicated

00:21:30,080 --> 00:21:33,710
is my game so what we needed to do even

00:21:32,390 --> 00:21:35,360
though we were kind of more in for

00:21:33,710 --> 00:21:37,070
research is we need to write a project

00:21:35,360 --> 00:21:39,260
that would scrape the application the

00:21:37,070 --> 00:21:41,060
matchmaking servers and reconstruct

00:21:39,260 --> 00:21:42,590
what's the skill distribution in every

00:21:41,060 --> 00:21:44,060
single game in every single session at

00:21:42,590 --> 00:21:46,070
every single hour because what we

00:21:44,060 --> 00:21:47,780
observed is that people were saying this

00:21:46,070 --> 00:21:49,670
this doesn't work I'm still playing and

00:21:47,780 --> 00:21:52,490
people that are much better than me or

00:21:49,670 --> 00:21:54,140
much much much worse and what we

00:21:52,490 --> 00:21:55,850
realized and only after we've built this

00:21:54,140 --> 00:21:58,790
tool so here's how the tool looked saw

00:21:55,850 --> 00:22:01,070
it in F sharp used at a time used

00:21:58,790 --> 00:22:03,680
WinForms so it scrapes them and now you

00:22:01,070 --> 00:22:06,620
could see what's the so what's the

00:22:03,680 --> 00:22:10,190
popular how many sessions on every hour

00:22:06,620 --> 00:22:12,260
of the day that we have I think I and

00:22:10,190 --> 00:22:13,460
from which countries one thing you see

00:22:12,260 --> 00:22:15,530
is that there were times in the day

00:22:13,460 --> 00:22:17,900
where are very few gamers online so that

00:22:15,530 --> 00:22:19,130
simply wasn't a good match available and

00:22:17,900 --> 00:22:20,240
and that data

00:22:19,130 --> 00:22:21,740
was invisible before and it wasn't

00:22:20,240 --> 00:22:23,600
something it was necessarily planned

00:22:21,740 --> 00:22:25,430
because the math says this is the best

00:22:23,600 --> 00:22:26,750
possible match but if you have no Kenya

00:22:25,430 --> 00:22:28,250
to be matched with that self good skill

00:22:26,750 --> 00:22:30,500
you still get a very very bad

00:22:28,250 --> 00:22:32,840
matchmaking experience and so as a

00:22:30,500 --> 00:22:34,730
result of this and realizing that only

00:22:32,840 --> 00:22:37,430
the very popular games really have

00:22:34,730 --> 00:22:39,500
enough gamers at any given hour we

00:22:37,430 --> 00:22:41,690
actually were able to give some advice

00:22:39,500 --> 00:22:44,210
on what to do to prolong the waiting

00:22:41,690 --> 00:22:45,590
time in a lobby one other interesting

00:22:44,210 --> 00:22:47,810
side effect was is that we could measure

00:22:45,590 --> 00:22:49,820
the complexities of game so when you so

00:22:47,810 --> 00:22:52,610
we always the the skills were numbers

00:22:49,820 --> 00:22:54,500
that were scale between 0 and and 50 one

00:22:52,610 --> 00:22:56,870
thing we realized is there was a game on

00:22:54,500 --> 00:22:59,000
the market this was a golf game where

00:22:56,870 --> 00:23:01,340
people played 18 holes a single session

00:22:59,000 --> 00:23:03,860
lasted for about an hour when you played

00:23:01,340 --> 00:23:05,900
it online but admit this hour meant that

00:23:03,860 --> 00:23:08,270
the slightest difference in skill really

00:23:05,900 --> 00:23:10,430
realizes in the best player winning so

00:23:08,270 --> 00:23:12,740
50 levels weren't actually enough to

00:23:10,430 --> 00:23:14,990
represent the the various chains of

00:23:12,740 --> 00:23:18,440
skills between players on the other hand

00:23:14,990 --> 00:23:21,110
we saw a game like uno which arguably

00:23:18,440 --> 00:23:24,140
has no skill because it's just a game of

00:23:21,110 --> 00:23:25,790
chance and this real realized himself

00:23:24,140 --> 00:23:27,350
this is one of the most popular racing

00:23:25,790 --> 00:23:29,210
games that really it was well designed

00:23:27,350 --> 00:23:31,670
for that most gamers were fitting on

00:23:29,210 --> 00:23:33,530
this 50 40 levels was the active range

00:23:31,670 --> 00:23:35,630
for fitting on the 50 level scale has

00:23:33,530 --> 00:23:37,220
also a slight bias at zero because most

00:23:35,630 --> 00:23:40,490
people were new give us a good sense of

00:23:37,220 --> 00:23:42,560
how many new gamers are coming now what

00:23:40,490 --> 00:23:45,830
happened is this helped game developers

00:23:42,560 --> 00:23:48,710
a lot but and we we again went I wasn't

00:23:45,830 --> 00:23:51,110
met with a lot of them epic games and on

00:23:48,710 --> 00:23:53,480
boards so we didn't do any research we

00:23:51,110 --> 00:23:54,620
didn't do any code but by June there was

00:23:53,480 --> 00:23:58,130
sort of tipping point

00:23:54,620 --> 00:24:00,740
no major game had been using it and so

00:23:58,130 --> 00:24:03,140
we had realized that if the major game

00:24:00,740 --> 00:24:05,450
on the Xbox platform halo 3 isn't gonna

00:24:03,140 --> 00:24:07,100
use it then we have a hard time for the

00:24:05,450 --> 00:24:09,260
developer community to see that this is

00:24:07,100 --> 00:24:10,850
a system that really makes a for a good

00:24:09,260 --> 00:24:12,860
matchmaking experience when you use it

00:24:10,850 --> 00:24:15,560
so we started to work with Bungie which

00:24:12,860 --> 00:24:18,050
started the team started to to build

00:24:15,560 --> 00:24:20,150
that game for a platform for Xbox Live

00:24:18,050 --> 00:24:22,400
platform that early on it launched about

00:24:20,150 --> 00:24:24,140
a year and a half later and so in that

00:24:22,400 --> 00:24:26,540
what we the first thing we had to do is

00:24:24,140 --> 00:24:29,840
we simply had to see had to answer the

00:24:26,540 --> 00:24:33,200
question if we had used halo 3 we had

00:24:29,840 --> 00:24:35,000
used to skill in halo 2 how accurate

00:24:33,200 --> 00:24:36,320
what every everyone's skill have been

00:24:35,000 --> 00:24:37,700
how accurate could we have predicted the

00:24:36,320 --> 00:24:40,730
matches that happen because by that time

00:24:37,700 --> 00:24:41,779
hey Lou two came out here right remember

00:24:40,730 --> 00:24:44,419
this was actually a starting point of

00:24:41,779 --> 00:24:47,230
the project we had over 400 million

00:24:44,419 --> 00:24:50,269
matches of over six I think at the time

00:24:47,230 --> 00:24:52,070
six million people so this was a huge I

00:24:50,269 --> 00:24:53,510
mean this is before Hadoop or just about

00:24:52,070 --> 00:24:55,700
the birth of Hadoop there wasn't much

00:24:53,510 --> 00:24:57,740
distributed computer around so it's a

00:24:55,700 --> 00:25:01,760
huge amount of data we analyzed things

00:24:57,740 --> 00:25:03,679
in a sequel database still and I've been

00:25:01,760 --> 00:25:06,049
talking about halo 3 a lot so let me let

00:25:03,679 --> 00:25:07,940
me just show how the game looks and so

00:25:06,049 --> 00:25:12,230
you have a sense of what triggered this

00:25:07,940 --> 00:25:15,860
project so when you start halo that's

00:25:12,230 --> 00:25:18,559
the Start screen you see two options you

00:25:15,860 --> 00:25:20,510
can play the Curia or you can play the

00:25:18,559 --> 00:25:24,380
campaign or you can play much making you

00:25:20,510 --> 00:25:27,139
choose matchmaking you can choose any of

00:25:24,380 --> 00:25:30,019
these game modes so here's the ranked

00:25:27,139 --> 00:25:32,240
list six players against each other

00:25:30,019 --> 00:25:35,179
teams they are two players of three to

00:25:32,240 --> 00:25:37,010
four people each team doubles so you

00:25:35,179 --> 00:25:39,409
choose you have a single level that you

00:25:37,010 --> 00:25:41,059
see in the games from the game you can

00:25:39,409 --> 00:25:43,460
actually see the distributions of skills

00:25:41,059 --> 00:25:44,630
something that we've built before Bungie

00:25:43,460 --> 00:25:46,070
took this on board and actually made

00:25:44,630 --> 00:25:47,750
this visible so people saw how many

00:25:46,070 --> 00:25:49,820
people were around to match with and

00:25:47,750 --> 00:25:51,620
then when you put a new selected

00:25:49,820 --> 00:25:54,200
matchmaking it would actually go into a

00:25:51,620 --> 00:25:54,769
lobby you would wait for at most two

00:25:54,200 --> 00:25:56,750
minutes

00:25:54,769 --> 00:25:58,010
besides speed it up a bit so now you're

00:25:56,750 --> 00:25:59,750
matched against people and one thing you

00:25:58,010 --> 00:26:01,700
should see is total experience is a

00:25:59,750 --> 00:26:02,389
number of games played and ranked

00:26:01,700 --> 00:26:03,590
matches

00:26:02,389 --> 00:26:05,630
sorry ranked matches number of games

00:26:03,590 --> 00:26:08,649
played and you always get an experience

00:26:05,630 --> 00:26:11,149
point if you win look at the ratio

00:26:08,649 --> 00:26:13,039
that's from a live session okay about

00:26:11,149 --> 00:26:15,980
one to two let's sort of game this light

00:26:13,039 --> 00:26:18,590
so you play in teams or alone your your

00:26:15,980 --> 00:26:20,480
soldier in some alien world for those

00:26:18,590 --> 00:26:21,769
who haven't played it and the thing that

00:26:20,480 --> 00:26:24,110
people really like about this game on

00:26:21,769 --> 00:26:25,580
it's very tech savvy that keeps them

00:26:24,110 --> 00:26:27,200
coming back is what you see in bottom

00:26:25,580 --> 00:26:29,929
right this is a score the red in with

00:26:27,200 --> 00:26:31,370
the score of the blue team okay so what

00:26:29,929 --> 00:26:32,960
people really like why they come back is

00:26:31,370 --> 00:26:34,399
if a debts with that tight when you get

00:26:32,960 --> 00:26:36,490
matched with some random three people

00:26:34,399 --> 00:26:39,769
against some random other four people

00:26:36,490 --> 00:26:41,000
and in its ten-minute match they they

00:26:39,769 --> 00:26:43,039
really are fighting it out and it's

00:26:41,000 --> 00:26:44,980
extremely tight so you get a sense of

00:26:43,039 --> 00:26:47,450
why you shoot at each other

00:26:44,980 --> 00:26:49,250
it's actually really fun I mean I wasted

00:26:47,450 --> 00:26:52,550
a minimum of the three-month of my whole

00:26:49,250 --> 00:26:55,730
life just playing this okay so that's

00:26:52,550 --> 00:26:57,440
that's halo 3 so what we needed is a set

00:26:55,730 --> 00:26:59,690
we needed this this tool that actually

00:26:57,440 --> 00:27:02,090
first showed demonstrated for us and for

00:26:59,690 --> 00:27:05,120
the game developer Bungie that that was

00:27:02,090 --> 00:27:06,650
that was actually it was working it

00:27:05,120 --> 00:27:09,680
would have given us accurate skill

00:27:06,650 --> 00:27:11,330
estimates if he had used it so if we

00:27:09,680 --> 00:27:13,070
wrote this and at the time there was no

00:27:11,330 --> 00:27:14,600
distributed framework so we had to

00:27:13,070 --> 00:27:16,550
distribute and had to do all the dotnet

00:27:14,600 --> 00:27:18,590
remoting distributed computer ourselves

00:27:16,550 --> 00:27:20,930
we analyzed over 8 billion matches that

00:27:18,590 --> 00:27:22,730
already had happen in different settings

00:27:20,930 --> 00:27:24,530
of some of the parameters and with

00:27:22,730 --> 00:27:27,290
respect to drawing and not drawing and

00:27:24,530 --> 00:27:29,660
how quickly players progress so just the

00:27:27,290 --> 00:27:31,250
logs produced 52 gigs of data and just

00:27:29,660 --> 00:27:34,400
looking at them so this was all

00:27:31,250 --> 00:27:36,170
happening there was no halo 3 written or

00:27:34,400 --> 00:27:38,900
something that needed a result viewer

00:27:36,170 --> 00:27:41,840
and so as the researchers we wrote this

00:27:38,900 --> 00:27:43,520
so if you send how this looked so you

00:27:41,840 --> 00:27:45,770
could go in and you could choose the

00:27:43,520 --> 00:27:48,740
hyper parameters and you could now see

00:27:45,770 --> 00:27:51,170
over the skill levels sorry over the

00:27:48,740 --> 00:27:52,850
number of games played how would this

00:27:51,170 --> 00:27:54,440
level progression have been for the very

00:27:52,850 --> 00:27:56,540
good players or the not-so-good players

00:27:54,440 --> 00:27:58,640
had we used it how would their skill

00:27:56,540 --> 00:27:59,600
levels have progressed and we could see

00:27:58,640 --> 00:28:02,030
at any given time what's the

00:27:59,600 --> 00:28:04,100
distribution of skill levels because one

00:28:02,030 --> 00:28:05,720
thing that was important is that people

00:28:04,100 --> 00:28:07,930
weren't progressing so fast the system

00:28:05,720 --> 00:28:10,550
was so accurate this was far too fast

00:28:07,930 --> 00:28:12,770
something that no one was really happy

00:28:10,550 --> 00:28:14,510
with if after 20 matches you would or or

00:28:12,770 --> 00:28:16,730
3040 matches you would already be at the

00:28:14,510 --> 00:28:18,350
high level you would be not having this

00:28:16,730 --> 00:28:20,570
level of experience as a gamer and you

00:28:18,350 --> 00:28:22,160
wouldn't necessarily trust that you're

00:28:20,570 --> 00:28:23,540
you didn't start playing because you

00:28:22,160 --> 00:28:25,100
would worry that if I don't make the

00:28:23,540 --> 00:28:27,200
fast progression another gonna get there

00:28:25,100 --> 00:28:28,850
that's not true but you know you

00:28:27,200 --> 00:28:30,800
wouldn't you wouldn't put those extra 20

00:28:28,850 --> 00:28:35,630
games in and so people would not play

00:28:30,800 --> 00:28:37,610
the online mode again lots of lots of

00:28:35,630 --> 00:28:39,560
little little side projects to do for

00:28:37,610 --> 00:28:42,800
example one thing we needed is we needed

00:28:39,560 --> 00:28:44,660
spline spline for the dampening so one

00:28:42,800 --> 00:28:46,280
thing one thing that to introduces slow

00:28:44,660 --> 00:28:47,330
down the inference and we did that by

00:28:46,280 --> 00:28:50,480
dampening and we needed to do it

00:28:47,330 --> 00:28:53,630
smoothly so that was an interesting side

00:28:50,480 --> 00:28:54,770
project so by May 2007 we were actually

00:28:53,630 --> 00:28:57,500
we had another two months of research

00:28:54,770 --> 00:28:58,370
we're actually able to now incorporate

00:28:57,500 --> 00:29:01,190
it into a public

00:28:58,370 --> 00:29:03,020
so before halo 3 came out 1.3 million

00:29:01,190 --> 00:29:04,640
people actually played the game for two

00:29:03,020 --> 00:29:07,309
reasons I mean one was to test the

00:29:04,640 --> 00:29:09,289
codebase but the two main reasons was to

00:29:07,309 --> 00:29:11,570
check the network code so even if you

00:29:09,289 --> 00:29:14,090
play transatlantic games a mob so

00:29:11,570 --> 00:29:15,860
latency and did all our simulations that

00:29:14,090 --> 00:29:17,659
happen here that he actually hold true

00:29:15,860 --> 00:29:19,070
when we put this into the game so the

00:29:17,659 --> 00:29:22,279
only thing you could place the online

00:29:19,070 --> 00:29:25,039
going the online mode so we needed to

00:29:22,279 --> 00:29:26,870
develop one more tool for for Bungie and

00:29:25,039 --> 00:29:28,520
that tool was something that allowed

00:29:26,870 --> 00:29:31,250
them that allowed the game designer

00:29:28,520 --> 00:29:33,320
online game designer to actually set the

00:29:31,250 --> 00:29:35,450
curves of dampening as a not as a

00:29:33,320 --> 00:29:37,520
function of number of games played skill

00:29:35,450 --> 00:29:39,169
level and match quality so even if you

00:29:37,520 --> 00:29:40,549
made a bad match he doesn't didn't

00:29:39,169 --> 00:29:42,590
necessarily want that to affect your

00:29:40,549 --> 00:29:45,200
skill so you skill estimate so much and

00:29:42,590 --> 00:29:47,870
then we could see in from the beta what

00:29:45,200 --> 00:29:49,549
the skill what the attribution I mean

00:29:47,870 --> 00:29:51,919
you see this graph in a minute how many

00:29:49,549 --> 00:29:55,429
people that hire on a given skill have

00:29:51,919 --> 00:29:57,500
lost or won all their games in Nevada so

00:29:55,429 --> 00:29:59,419
the ultimate test for that this system

00:29:57,500 --> 00:30:01,610
actually work and the ultimate get go

00:29:59,419 --> 00:30:04,909
through two and a half years later was

00:30:01,610 --> 00:30:06,830
actually taking the beta taking this 1.3

00:30:04,909 --> 00:30:09,649
million gamers and then looking at them

00:30:06,830 --> 00:30:11,570
and saying well if this system works we

00:30:09,649 --> 00:30:13,490
should see two properties the fact the

00:30:11,570 --> 00:30:16,970
good gamers should converge to the best

00:30:13,490 --> 00:30:19,279
skill within roughly a hundred games

00:30:16,970 --> 00:30:22,130
that was a design parameter and secondly

00:30:19,279 --> 00:30:23,779
if we look at number of games played so

00:30:22,130 --> 00:30:25,279
if you played one game half the people

00:30:23,779 --> 00:30:28,610
lost that game half the people won that

00:30:25,279 --> 00:30:31,549
game a few of you too a few players drew

00:30:28,610 --> 00:30:33,049
because the time ran out but one thing

00:30:31,549 --> 00:30:34,220
that should be true is it should be a

00:30:33,049 --> 00:30:36,320
good match making it should be a good

00:30:34,220 --> 00:30:39,260
ranking system so the number of games

00:30:36,320 --> 00:30:42,500
that people win and lose their age the

00:30:39,260 --> 00:30:44,630
fraction of games should be 50/50 so if

00:30:42,500 --> 00:30:46,580
I press go on here you see the video and

00:30:44,630 --> 00:30:48,140
what it does is it looks at all that

00:30:46,580 --> 00:30:50,470
people that have played in games so so

00:30:48,140 --> 00:30:52,669
far it is 1.3 million so there's only

00:30:50,470 --> 00:30:54,649
500,000 left that played two games in

00:30:52,669 --> 00:30:56,029
the beta and so forth so in the end

00:30:54,649 --> 00:30:58,100
we're looking at three thousand people

00:30:56,029 --> 00:31:01,279
that played three hundred games in these

00:30:58,100 --> 00:31:03,440
six weeks that the beta was on but

00:31:01,279 --> 00:31:05,480
what's the and you see a plot you see a

00:31:03,440 --> 00:31:08,450
dot and the dot is always what's the

00:31:05,480 --> 00:31:10,190
fraction of games won and what's the

00:31:08,450 --> 00:31:11,549
skill level of that what's the strength

00:31:10,190 --> 00:31:13,200
of that player

00:31:11,549 --> 00:31:21,149
so what what should that graph look like

00:31:13,200 --> 00:31:29,820
for a good ranking system should be it

00:31:21,149 --> 00:31:31,619
should be a diagonal line so if this so

00:31:29,820 --> 00:31:33,149
if this is a diagonal line that would be

00:31:31,619 --> 00:31:34,619
a random matchmaking system because that

00:31:33,149 --> 00:31:36,690
means that if you're really bad you lose

00:31:34,619 --> 00:31:38,309
all your games not an experience you

00:31:36,690 --> 00:31:39,779
want to create for people that's not fun

00:31:38,309 --> 00:31:43,379
and if you're really good you win all

00:31:39,779 --> 00:31:46,169
your games what you want is a bar a bar

00:31:43,379 --> 00:31:47,850
means a bar at 50% eventually because

00:31:46,169 --> 00:31:50,159
that means that regardless of your skill

00:31:47,850 --> 00:31:51,989
level you wouldn't lose half your games

00:31:50,159 --> 00:31:53,309
perhaps has a stretch where you win some

00:31:51,989 --> 00:31:56,039
and lose about overall you win and lose

00:31:53,309 --> 00:31:57,840
half your games so this is the this is

00:31:56,039 --> 00:32:00,179
actually the real data this is a quite a

00:31:57,840 --> 00:32:01,950
lot of data in the video this is all of

00:32:00,179 --> 00:32:04,619
my chart comes from 1.3 million people

00:32:01,950 --> 00:32:06,899
that played up to 300 games so now he's

00:32:04,619 --> 00:32:08,700
seeing at the hundred games roughly the

00:32:06,899 --> 00:32:11,070
best people have reached the top level

00:32:08,700 --> 00:32:12,869
it took a while and now this one is

00:32:11,070 --> 00:32:13,529
gonna is going to become more and more

00:32:12,869 --> 00:32:15,389
of a bar

00:32:13,529 --> 00:32:17,850
it's Flickr's more because there's less

00:32:15,389 --> 00:32:20,159
and less people have played 200-300 and

00:32:17,850 --> 00:32:23,100
so forth games so it's it's less it's

00:32:20,159 --> 00:32:24,659
much more coarse now and the reason it's

00:32:23,100 --> 00:32:28,200
not at 50 exactly it's because draws

00:32:24,659 --> 00:32:29,929
count like a half win so half lost so

00:32:28,200 --> 00:32:32,519
that's why it's a bit it's a bit shifted

00:32:29,929 --> 00:32:34,470
so that meant that was actually good

00:32:32,519 --> 00:32:37,109
news for us because that meant that this

00:32:34,470 --> 00:32:39,239
is 300 games at the end even people

00:32:37,109 --> 00:32:40,859
claiming on boards and blogs that you

00:32:39,239 --> 00:32:42,299
know the sucks I win all the games I

00:32:40,859 --> 00:32:44,190
lose all the games it's just not true

00:32:42,299 --> 00:32:46,710
like not this there's not a single dog I

00:32:44,190 --> 00:32:48,659
left out there's no gamer in this big

00:32:46,710 --> 00:32:51,600
collection that actually lost more than

00:32:48,659 --> 00:32:55,679
80% of their games or won more than 60%

00:32:51,600 --> 00:32:58,139
of their games so the the service

00:32:55,679 --> 00:33:00,269
launched in 2005 are talking about that

00:32:58,139 --> 00:33:02,309
one and halo 3 launched two years later

00:33:00,269 --> 00:33:04,470
and for the longest time it was one of

00:33:02,309 --> 00:33:06,840
the most popular online video games on a

00:33:04,470 --> 00:33:09,330
console I think it's now superseded by

00:33:06,840 --> 00:33:11,850
others but at peak times the game had

00:33:09,330 --> 00:33:15,509
had 1 million people continuously

00:33:11,850 --> 00:33:17,070
playing online so when you look at that

00:33:15,509 --> 00:33:19,590
line it's actually pretty long

00:33:17,070 --> 00:33:21,269
considering that that we started with

00:33:19,590 --> 00:33:23,220
this just with a hunch and wanting to

00:33:21,269 --> 00:33:24,929
build this for ourselves and the lessons

00:33:23,220 --> 00:33:25,650
learned here was that if you look at the

00:33:24,929 --> 00:33:27,510
red bar

00:33:25,650 --> 00:33:29,490
that's the smallest one research takes

00:33:27,510 --> 00:33:32,310
the smallest time and in this transfer

00:33:29,490 --> 00:33:34,500
about six months when you when you add

00:33:32,310 --> 00:33:35,910
them all up and all of the development

00:33:34,500 --> 00:33:37,140
wasn't necessarily the algorithm was a

00:33:35,910 --> 00:33:39,810
lot of tools that we needed to develop

00:33:37,140 --> 00:33:41,880
and one big fraction was evangelization

00:33:39,810 --> 00:33:43,290
you know a platform only lifts if it has

00:33:41,880 --> 00:33:46,020
a community this is a platform feature

00:33:43,290 --> 00:33:47,940
if the developers that need to use this

00:33:46,020 --> 00:33:50,280
platform feature can't use it because

00:33:47,940 --> 00:33:52,080
it's not well explained or it's it's

00:33:50,280 --> 00:33:53,970
it's it has the wrong API it has the

00:33:52,080 --> 00:33:55,920
wrong parameters to tune it's not going

00:33:53,970 --> 00:33:58,110
to get adoption and the other thing is

00:33:55,920 --> 00:33:59,760
for ourselves this idea of the most

00:33:58,110 --> 00:34:01,500
optimum edge wasn't necessarily

00:33:59,760 --> 00:34:03,300
something that people wanted there's a

00:34:01,500 --> 00:34:04,470
hard lesson for us to learn even though

00:34:03,300 --> 00:34:06,030
this system was information

00:34:04,470 --> 00:34:07,680
theoretically optimal it learned

00:34:06,030 --> 00:34:09,630
extremely well we could you could even

00:34:07,680 --> 00:34:12,210
be even showed that it was close the

00:34:09,630 --> 00:34:14,340
information theoretic minimum limit

00:34:12,210 --> 00:34:16,470
meaning you couldn't design a ranking

00:34:14,340 --> 00:34:18,929
system that given this data can learn

00:34:16,470 --> 00:34:21,510
more accurate skills that doesn't mean

00:34:18,929 --> 00:34:23,040
it's fun that might scare you away if

00:34:21,510 --> 00:34:25,260
you're jumping 10 levels and at the

00:34:23,040 --> 00:34:26,820
first game so then winning it down

00:34:25,260 --> 00:34:28,650
making it slower was actually really

00:34:26,820 --> 00:34:31,320
important so mathematical optimality

00:34:28,650 --> 00:34:33,990
doesn't actually mean fun for a fork for

00:34:31,320 --> 00:34:36,240
gamer or customer so second example is a

00:34:33,990 --> 00:34:37,830
bit shorter is on a ranking system which

00:34:36,240 --> 00:34:40,290
is known as that predictor so the paper

00:34:37,830 --> 00:34:42,780
was published in 2000 and 2010 for more

00:34:40,290 --> 00:34:45,060
details just kind of touch up on it the

00:34:42,780 --> 00:34:47,190
it started a little bit pretty much

00:34:45,060 --> 00:34:51,179
after this one the first one finished

00:34:47,190 --> 00:34:53,460
and what happened is that in in the

00:34:51,179 --> 00:34:54,870
first three months we kind of got

00:34:53,460 --> 00:34:56,070
familiar with the problem we first

00:34:54,870 --> 00:34:57,510
needed to understand what's the problem

00:34:56,070 --> 00:35:00,360
the problem was so this is back our

00:34:57,510 --> 00:35:02,280
today life search was one of the search

00:35:00,360 --> 00:35:04,710
engines when you type a search clear

00:35:02,280 --> 00:35:07,050
like Seattle into a search box you get

00:35:04,710 --> 00:35:09,750
this green block when you get this

00:35:07,050 --> 00:35:11,250
yellow block of content back and it

00:35:09,750 --> 00:35:13,230
differ insofar as those are clearly

00:35:11,250 --> 00:35:15,150
marked the sponsored results and those

00:35:13,230 --> 00:35:18,180
are non sponsored results what does that

00:35:15,150 --> 00:35:21,720
mean that means someone's paying for the

00:35:18,180 --> 00:35:23,870
for the results that are shown in the

00:35:21,720 --> 00:35:26,730
shown in yellow in fact let's suppose

00:35:23,870 --> 00:35:28,800
Seattle American Airlines versus America

00:35:26,730 --> 00:35:31,620
and American Airlines paced this is

00:35:28,800 --> 00:35:34,320
fictitious figures pace a dollar this

00:35:31,620 --> 00:35:36,390
the site pays two dollars and this side

00:35:34,320 --> 00:35:38,550
pays only ten cents so why are they in

00:35:36,390 --> 00:35:39,300
this order the reason they're in this

00:35:38,550 --> 00:35:40,590
order is

00:35:39,300 --> 00:35:42,810
because they only pay when a click

00:35:40,590 --> 00:35:45,300
happens meaning they get someone to

00:35:42,810 --> 00:35:47,850
their site and that guy the person

00:35:45,300 --> 00:35:49,890
potentially buys a trip with with

00:35:47,850 --> 00:35:51,300
American Airlines so what the platform

00:35:49,890 --> 00:35:54,450
has to do it has to estimate these

00:35:51,300 --> 00:35:57,060
scientists these these numbers assess to

00:35:54,450 --> 00:35:59,220
mate how likely is a person going to

00:35:57,060 --> 00:36:01,530
click on American Airlines and we show

00:35:59,220 --> 00:36:03,870
American Airlines now that's gonna make

00:36:01,530 --> 00:36:06,270
the value of that customer when he gets

00:36:03,870 --> 00:36:09,180
to American Airlines side is $1 American

00:36:06,270 --> 00:36:11,220
Airlines said this but life search

00:36:09,180 --> 00:36:13,800
estimates that that will happen at 10%

00:36:11,220 --> 00:36:16,830
so the effective value shot for American

00:36:13,800 --> 00:36:20,250
Airlines are showing this is 10 cents ok

00:36:16,830 --> 00:36:23,100
now that explains why the order is how

00:36:20,250 --> 00:36:24,720
it is what it doesn't explain is what it

00:36:23,100 --> 00:36:27,000
doesn't answer yet is if the click

00:36:24,720 --> 00:36:30,380
happens should be charged shut this

00:36:27,000 --> 00:36:35,910
platform charge American Airlines $1

00:36:30,380 --> 00:36:44,310
question should he pay the dollar that

00:36:35,910 --> 00:36:49,410
they put in a bid who thinks yes ok what

00:36:44,310 --> 00:36:50,910
happens if they go to 90 cents they've

00:36:49,410 --> 00:36:53,670
changed a bit to 90 cents so if you

00:36:50,910 --> 00:36:54,930
change a bit to 90 cents nothing happens

00:36:53,670 --> 00:36:59,070
for them they still going to be shown

00:36:54,930 --> 00:37:01,020
there 90 cents time 10% is nine cents so

00:36:59,070 --> 00:37:02,490
that means they still get the same

00:37:01,020 --> 00:37:02,820
impression if you get the same number of

00:37:02,490 --> 00:37:04,820
people

00:37:02,820 --> 00:37:07,410
the customer can't see this difference

00:37:04,820 --> 00:37:09,860
so what's really case is that you should

00:37:07,410 --> 00:37:13,200
when you charge the dollar you in send

00:37:09,860 --> 00:37:16,080
this this advertiser to actually go and

00:37:13,200 --> 00:37:18,450
not say how value was the customer but

00:37:16,080 --> 00:37:19,830
say how value is a customer minus the

00:37:18,450 --> 00:37:21,930
value of the custom of the second

00:37:19,830 --> 00:37:23,880
highest bidder so it should really

00:37:21,930 --> 00:37:26,760
charges 80 cents and how do you arrive

00:37:23,880 --> 00:37:28,800
there where we basically equated 10

00:37:26,760 --> 00:37:30,930
cents with 8 cents and then worked out

00:37:28,800 --> 00:37:32,820
what would that bit have to be for this

00:37:30,930 --> 00:37:35,300
to be 8 cents because then something

00:37:32,820 --> 00:37:38,310
would happen if the advertiser is

00:37:35,300 --> 00:37:39,810
charged is spitting less than 80 then

00:37:38,310 --> 00:37:43,650
they lose their position and they get

00:37:39,810 --> 00:37:44,850
less clicks okay so probabilities are

00:37:43,650 --> 00:37:46,980
important because it's important to

00:37:44,850 --> 00:37:48,810
display so you need to have the bits

00:37:46,980 --> 00:37:50,580
that are not set by the bits are set by

00:37:48,810 --> 00:37:52,170
advertisers and you can multiply them

00:37:50,580 --> 00:37:52,950
with the probability that has to be

00:37:52,170 --> 00:37:54,990
estimated

00:37:52,950 --> 00:37:56,720
and for the charge for the charge he

00:37:54,990 --> 00:38:00,240
basically as we just didn't we just said

00:37:56,720 --> 00:38:03,839
this bit is too high so what charge

00:38:00,240 --> 00:38:06,450
Siwon have to be in order for c1 times

00:38:03,839 --> 00:38:09,390
p1 to be exactly that value and when you

00:38:06,450 --> 00:38:11,880
solve that one it's the second bit times

00:38:09,390 --> 00:38:13,829
the ratio of probabilities okay

00:38:11,880 --> 00:38:15,060
so that's how probabilities occur so

00:38:13,829 --> 00:38:17,280
they if you have better probability

00:38:15,060 --> 00:38:18,599
estimates makes more happy users because

00:38:17,280 --> 00:38:20,820
you don't show them ads that you don't

00:38:18,599 --> 00:38:22,650
want to see makes me happy advertisers

00:38:20,820 --> 00:38:24,089
we charge them more fairly and overall

00:38:22,650 --> 00:38:27,990
you can show that's actually increasing

00:38:24,089 --> 00:38:29,880
the overall revenue so what happened in

00:38:27,990 --> 00:38:31,950
March is that there was a competition

00:38:29,880 --> 00:38:33,329
internally launched and so for three

00:38:31,950 --> 00:38:35,880
three months we actually did a lot of

00:38:33,329 --> 00:38:38,369
research on what what systems could be

00:38:35,880 --> 00:38:39,690
used and a lot of the research was

00:38:38,369 --> 00:38:40,800
actually more focused one lesson we

00:38:39,690 --> 00:38:43,290
learned is that the quality of the data

00:38:40,800 --> 00:38:44,970
makes a makes a big difference meaning

00:38:43,290 --> 00:38:47,070
the how do we represent how does an

00:38:44,970 --> 00:38:48,990
algorithm see in hat and see the user

00:38:47,070 --> 00:38:50,010
and see the context the brows and all

00:38:48,990 --> 00:38:52,760
that

00:38:50,010 --> 00:38:55,619
oops that's meant to be the search page

00:38:52,760 --> 00:38:58,230
so the people see the search page this

00:38:55,619 --> 00:39:01,230
is how the logs it's just raw numbers of

00:38:58,230 --> 00:39:03,630
which IP you know what time of the day

00:39:01,230 --> 00:39:06,390
what ads were there what the ID of the

00:39:03,630 --> 00:39:08,040
advertisers so the first thing we did is

00:39:06,390 --> 00:39:09,569
we actually needed to translate this

00:39:08,040 --> 00:39:11,339
into structured objects what was the

00:39:09,569 --> 00:39:13,200
advertiser what was the campaign but

00:39:11,339 --> 00:39:15,060
what's the order what was the ad what

00:39:13,200 --> 00:39:18,060
was the text in the ad what was the time

00:39:15,060 --> 00:39:19,980
of the day what was the the user so we

00:39:18,060 --> 00:39:21,720
expected that and spend a lot of time in

00:39:19,980 --> 00:39:24,359
parsing but also making this fully

00:39:21,720 --> 00:39:26,760
automated so we validated the data

00:39:24,359 --> 00:39:29,190
cleaned it and had a very automated way

00:39:26,760 --> 00:39:31,589
of allowing us to write this code and

00:39:29,190 --> 00:39:33,540
then use it in production so what we

00:39:31,589 --> 00:39:36,960
were we actually spend half of the time

00:39:33,540 --> 00:39:37,800
of the project on is writing a schema

00:39:36,960 --> 00:39:40,980
generator

00:39:37,800 --> 00:39:42,540
remember this is we wrote the structured

00:39:40,980 --> 00:39:46,260
information that we wanted to know so

00:39:42,540 --> 00:39:49,230
what medium was it give you an idea what

00:39:46,260 --> 00:39:51,000
was the advertiser ID what was the gent

00:39:49,230 --> 00:39:53,190
inter-gender of the user what was the

00:39:51,000 --> 00:39:55,829
query string of the user type so all

00:39:53,190 --> 00:39:58,200
this was part of this long log so what

00:39:55,829 --> 00:39:59,910
we did is we wrote these types and then

00:39:58,200 --> 00:40:02,280
wrote custom parsers for them so as the

00:39:59,910 --> 00:40:04,440
actual bid the match type exact or not

00:40:02,280 --> 00:40:06,660
exact and so forth and then we wrote a

00:40:04,440 --> 00:40:12,060
library that just allowed us to point

00:40:06,660 --> 00:40:15,090
Ross CSV file do the parsing but then

00:40:12,060 --> 00:40:17,250
compute simply from the type the entire

00:40:15,090 --> 00:40:19,350
sequel schema so this is this little

00:40:17,250 --> 00:40:22,860
command bout build that would point to a

00:40:19,350 --> 00:40:25,650
server to a table and a sub table name

00:40:22,860 --> 00:40:28,590
and that schema now allow us to simply

00:40:25,650 --> 00:40:31,440
insert so this is a F sharp is a bit

00:40:28,590 --> 00:40:33,600
like Okemo think of it as oh camel just

00:40:31,440 --> 00:40:36,240
to insert these strongly the strongly

00:40:33,600 --> 00:40:37,860
typed objects but it did it at such a so

00:40:36,240 --> 00:40:39,660
we could we could do this in SQL we

00:40:37,860 --> 00:40:41,310
could actually look at that data but it

00:40:39,660 --> 00:40:42,540
did it at such a high speed that we

00:40:41,310 --> 00:40:45,540
could also use it in production the

00:40:42,540 --> 00:40:47,100
actual in the actual code that ran when

00:40:45,540 --> 00:40:49,200
it trained from the from the massive

00:40:47,100 --> 00:40:51,180
amounts of data we didn't have to write

00:40:49,200 --> 00:40:53,550
two types of code one for data analysis

00:40:51,180 --> 00:40:56,670
and one for one for visualizing the data

00:40:53,550 --> 00:40:58,860
and be inserted into a sequel server the

00:40:56,670 --> 00:41:01,320
model was extremely simple and I'm going

00:40:58,860 --> 00:41:03,570
to go to D but it's the model is very

00:41:01,320 --> 00:41:05,700
related to to the model we used for

00:41:03,570 --> 00:41:07,890
gamers we were basically thinking each

00:41:05,700 --> 00:41:09,780
of the aspects of an ad and of a user

00:41:07,890 --> 00:41:12,870
and of the context it's a bit like a

00:41:09,780 --> 00:41:14,460
player in a team so we have players that

00:41:12,870 --> 00:41:16,110
are representing the user we have

00:41:14,460 --> 00:41:18,000
players that represent the match type of

00:41:16,110 --> 00:41:20,220
the ad if players that represent the

00:41:18,000 --> 00:41:22,710
position where it was shown and what

00:41:20,220 --> 00:41:24,180
happens is that the particular value of

00:41:22,710 --> 00:41:25,830
this player a particular player so it

00:41:24,180 --> 00:41:28,710
was in the main line the first one and

00:41:25,830 --> 00:41:29,940
it wasn't a broad match so the the

00:41:28,710 --> 00:41:32,100
keyword that the advertiser bought

00:41:29,940 --> 00:41:34,740
wasn't exactly the the the query that

00:41:32,100 --> 00:41:37,050
was typed by there but a user and the IP

00:41:34,740 --> 00:41:40,200
there was a particular configuration of

00:41:37,050 --> 00:41:42,390
players that played together and if the

00:41:40,200 --> 00:41:43,740
click happened they won the game against

00:41:42,390 --> 00:41:45,660
0 and if the kick didn't happen they

00:41:43,740 --> 00:41:47,030
lost the game against 0 so it's a very

00:41:45,660 --> 00:41:49,800
similar mathematics I showed you before

00:41:47,030 --> 00:41:51,540
which gives you a distribution of a

00:41:49,800 --> 00:41:53,100
probabilities of click and all you need

00:41:51,540 --> 00:41:55,050
to store in the model is actually just

00:41:53,100 --> 00:41:58,320
these skills or these mean variances of

00:41:55,050 --> 00:42:01,890
in physics that called effects so code

00:41:58,320 --> 00:42:03,840
was was very similar so by May 2007

00:42:01,890 --> 00:42:06,360
you'd think Oliver Oliver this all work

00:42:03,840 --> 00:42:08,490
is done but first of all we need a real

00:42:06,360 --> 00:42:10,410
evaluation and this one was this time

00:42:08,490 --> 00:42:12,390
you couldn't avoid so but this time was

00:42:10,410 --> 00:42:14,910
is literally the fairest possible

00:42:12,390 --> 00:42:16,350
comparison I can think of in that every

00:42:14,910 --> 00:42:17,730
research I didn't have to submit some

00:42:16,350 --> 00:42:19,440
offline results I can Cagle

00:42:17,730 --> 00:42:21,119
but you had to submit code

00:42:19,440 --> 00:42:23,190
and that code would now be run in shadow

00:42:21,119 --> 00:42:24,930
in parallel on data that's only

00:42:23,190 --> 00:42:27,059
generated in May so this data was

00:42:24,930 --> 00:42:29,039
actually not available the the actual

00:42:27,059 --> 00:42:32,010
clicks non clicks generated at the time

00:42:29,039 --> 00:42:34,170
of the evaluation and so by August of

00:42:32,010 --> 00:42:35,640
that year it was clear which which was

00:42:34,170 --> 00:42:37,470
the most accurate and also which was the

00:42:35,640 --> 00:42:40,619
simplest system that wouldn't run out of

00:42:37,470 --> 00:42:42,299
memory wouldn't run out of compute so

00:42:40,619 --> 00:42:43,619
what you see here is the visualization

00:42:42,299 --> 00:42:45,359
of the accuracy that was the existing

00:42:43,619 --> 00:42:47,369
system at a time and and to give you a

00:42:45,359 --> 00:42:51,180
sense how this is generated the way this

00:42:47,369 --> 00:42:54,630
is generated is that you take each

00:42:51,180 --> 00:42:56,940
particular ad that was shown or and then

00:42:54,630 --> 00:42:59,760
I was click or not clicked the system

00:42:56,940 --> 00:43:02,579
you know you give the ad computes the

00:42:59,760 --> 00:43:04,680
probability of click there's a real

00:43:02,579 --> 00:43:06,869
number one zero one percent so you take

00:43:04,680 --> 00:43:09,839
that number and you discretize in this

00:43:06,869 --> 00:43:14,010
case in one or thousand buckets okay so

00:43:09,839 --> 00:43:16,950
it was either 0.1 0.2 percent 0.3

00:43:14,010 --> 00:43:18,690
percent 0.4 so a thousand pockets over a

00:43:16,950 --> 00:43:21,089
millions of millions of predictions

00:43:18,690 --> 00:43:23,010
means that each of these buckets ends up

00:43:21,089 --> 00:43:25,079
having a lot of examples falling into

00:43:23,010 --> 00:43:26,549
them and then because it was all

00:43:25,079 --> 00:43:28,490
happened in the past it's it's for

00:43:26,549 --> 00:43:31,380
evaluation you know for each bucket

00:43:28,490 --> 00:43:33,809
what's the actual empirical ratio the

00:43:31,380 --> 00:43:36,089
actual ratio of clicks so if you have

00:43:33,809 --> 00:43:38,430
let's say this is an order of tens of

00:43:36,089 --> 00:43:40,319
millions tens of millions of these lines

00:43:38,430 --> 00:43:42,539
and you put them in a thousand buckets

00:43:40,319 --> 00:43:44,940
each of them have enough examples in

00:43:42,539 --> 00:43:47,520
there that you get a good good sense of

00:43:44,940 --> 00:43:49,349
how a good estimate of the actual

00:43:47,520 --> 00:43:50,849
click-through rate and the size of the

00:43:49,349 --> 00:43:53,730
bubble is proportional to how many

00:43:50,849 --> 00:43:55,200
things fell on that bucket okay so what

00:43:53,730 --> 00:43:57,539
you see here is the 45-degree line is

00:43:55,200 --> 00:44:00,990
what you're after you're after a system

00:43:57,539 --> 00:44:02,640
that when it says 16.5% then in sixteen

00:44:00,990 --> 00:44:04,890
point five percent of the time that the

00:44:02,640 --> 00:44:06,779
system says this a click actually

00:44:04,890 --> 00:44:09,450
happens the customer actually goes for

00:44:06,779 --> 00:44:12,240
it so it was actually fairly accurate

00:44:09,450 --> 00:44:16,289
and another nice effect is memories team

00:44:12,240 --> 00:44:18,720
setting we had these teams of users so

00:44:16,289 --> 00:44:21,390
at the time IP you could actually see

00:44:18,720 --> 00:44:23,970
for each player so to speak more

00:44:21,390 --> 00:44:25,710
statistics each affect how likely what's

00:44:23,970 --> 00:44:27,510
the mean and what's the variance how

00:44:25,710 --> 00:44:29,160
likely are they to click lead to a click

00:44:27,510 --> 00:44:31,349
and not click so those were

00:44:29,160 --> 00:44:32,640
understandable there's are people they

00:44:31,349 --> 00:44:34,230
never clicked on ads

00:44:32,640 --> 00:44:35,940
and there were lots of them so is the

00:44:34,230 --> 00:44:37,710
bubble plot but then there were also

00:44:35,940 --> 00:44:39,480
these people very few but there were

00:44:37,710 --> 00:44:42,839
people that whenever they saw an ad they

00:44:39,480 --> 00:44:44,190
would click on it always and the reason

00:44:42,839 --> 00:44:45,690
this is actually an interesting one is

00:44:44,190 --> 00:44:48,390
because the incentive structure is a bit

00:44:45,690 --> 00:44:50,809
skewed here if you are if your

00:44:48,390 --> 00:44:53,190
advertiser runs out of budget because

00:44:50,809 --> 00:44:55,019
somewhat clicked on all the links on all

00:44:53,190 --> 00:44:56,640
the ads whenever they appear then you

00:44:55,019 --> 00:44:58,589
get to pay much less because now there

00:44:56,640 --> 00:45:00,630
is no wonder you compete with so you can

00:44:58,589 --> 00:45:02,789
go in with a lower bid so this was

00:45:00,630 --> 00:45:05,970
actually sort of a false industry of

00:45:02,789 --> 00:45:07,260
clicking on competitors ads in order to

00:45:05,970 --> 00:45:12,150
deplete their budget in order for you to

00:45:07,260 --> 00:45:14,039
not pay as much for net okay so we

00:45:12,150 --> 00:45:15,240
already already nine months in so

00:45:14,039 --> 00:45:16,799
happened now I said everything was

00:45:15,240 --> 00:45:19,650
developed for single machine learning

00:45:16,799 --> 00:45:21,480
but the stream of data was even bigger

00:45:19,650 --> 00:45:23,339
than that of online games so now we need

00:45:21,480 --> 00:45:24,900
to spend a lot of time mapping this

00:45:23,339 --> 00:45:26,700
bring this whole system onto Map Reduce

00:45:24,900 --> 00:45:27,960
because we didn't design it for that

00:45:26,700 --> 00:45:29,359
scare at the beginning and what the way

00:45:27,960 --> 00:45:31,920
we did that is so we have this

00:45:29,359 --> 00:45:35,210
mathematical aspecto graph again where

00:45:31,920 --> 00:45:38,460
we have a probability of the parameters

00:45:35,210 --> 00:45:42,029
here and then each data think of them as

00:45:38,460 --> 00:45:43,950
chunks of data is like a factor given

00:45:42,029 --> 00:45:46,170
the parameters given the for the

00:45:43,950 --> 00:45:50,519
parameters simply RSD the means and

00:45:46,170 --> 00:45:52,319
variances of all possible effects you

00:45:50,519 --> 00:45:54,029
know we the message passing would say

00:45:52,319 --> 00:45:56,430
you compute those messages send them

00:45:54,029 --> 00:45:58,769
here you sent this message multiply you

00:45:56,430 --> 00:46:00,690
have your result but the problem is none

00:45:58,769 --> 00:46:02,490
of this all of this computation can't

00:46:00,690 --> 00:46:04,200
happen on a single machine so the way to

00:46:02,490 --> 00:46:06,809
map this to MapReduce is that in a map

00:46:04,200 --> 00:46:09,599
stage you actually send those messages

00:46:06,809 --> 00:46:11,279
which is just the prior to each of the

00:46:09,599 --> 00:46:15,450
machines that hold a chunk of the data

00:46:11,279 --> 00:46:18,240
okay and in the reduce step each of them

00:46:15,450 --> 00:46:20,519
computes the message that the amount of

00:46:18,240 --> 00:46:23,519
information that's in the data sends

00:46:20,519 --> 00:46:26,309
this back over the over files into the

00:46:23,519 --> 00:46:28,109
reducer the reducer would then combine

00:46:26,309 --> 00:46:29,789
by simply multiplying those messages

00:46:28,109 --> 00:46:33,000
which is when you look at the code it's

00:46:29,789 --> 00:46:35,160
just adding two numbers together for

00:46:33,000 --> 00:46:36,990
each of the possible values which are

00:46:35,160 --> 00:46:39,269
also feature values that it has seen in

00:46:36,990 --> 00:46:40,950
a chunk of data it processed and that

00:46:39,269 --> 00:46:42,599
would give you if everything was

00:46:40,950 --> 00:46:43,859
accurate inference would actually give

00:46:42,599 --> 00:46:44,700
you the the posterior in the best

00:46:43,859 --> 00:46:46,720
possible

00:46:44,700 --> 00:46:48,760
everything being firebase is not

00:46:46,720 --> 00:46:51,670
necessarily super fast but at least it

00:46:48,760 --> 00:46:53,050
scales one of the challenging thing is

00:46:51,670 --> 00:46:54,610
these are approximate vectors so you

00:46:53,050 --> 00:46:56,440
need to do some tricks because if you do

00:46:54,610 --> 00:46:58,840
the approximation then now you do the

00:46:56,440 --> 00:47:00,430
approximation in parallel and and you

00:46:58,840 --> 00:47:03,130
can actually show that the approximation

00:47:00,430 --> 00:47:04,540
gets consecutively bad if you really do

00:47:03,130 --> 00:47:06,910
have many mappers we want a minimum

00:47:04,540 --> 00:47:08,050
number of mappers there was some work

00:47:06,910 --> 00:47:10,540
needed to deal with approximate

00:47:08,050 --> 00:47:12,880
message-passing and you needed to make

00:47:10,540 --> 00:47:14,890
sure that why you want the mappers bad a

00:47:12,880 --> 00:47:16,330
big you do need to have no more

00:47:14,890 --> 00:47:18,670
parameters and fit in a single machine

00:47:16,330 --> 00:47:20,830
in order to multiply them together so it

00:47:18,670 --> 00:47:24,100
was a limit on the size of the data but

00:47:20,830 --> 00:47:25,960
after about six seven months that was

00:47:24,100 --> 00:47:27,910
done one thing it was needed now for

00:47:25,960 --> 00:47:29,830
three months is to assess how much

00:47:27,910 --> 00:47:31,660
impact will that system actually have on

00:47:29,830 --> 00:47:33,370
revenue and that was really hard because

00:47:31,660 --> 00:47:35,140
we could assess how accurate is the

00:47:33,370 --> 00:47:36,580
click-through rate but what effect that

00:47:35,140 --> 00:47:37,960
would have on the bits and how would

00:47:36,580 --> 00:47:40,600
advertise has changed there bits is

00:47:37,960 --> 00:47:43,780
something where some somewhere in game

00:47:40,600 --> 00:47:44,890
and game theory was necessary so what we

00:47:43,780 --> 00:47:46,450
do then and I'm not going to go into

00:47:44,890 --> 00:47:48,430
details we had to develop for the next

00:47:46,450 --> 00:47:50,560
six month we had to develop tools that

00:47:48,430 --> 00:47:52,900
to maintain such a model to be able to

00:47:50,560 --> 00:47:54,670
roll back to be able to visualize

00:47:52,900 --> 00:47:56,830
because this would run in a more

00:47:54,670 --> 00:47:58,660
automated fashion day by day what

00:47:56,830 --> 00:47:59,830
parameters have changed how much because

00:47:58,660 --> 00:48:01,600
I never Titus came back and said my

00:47:59,830 --> 00:48:04,030
campaign didn't show we needed to have

00:48:01,600 --> 00:48:07,420
an explanation as to why and so by March

00:48:04,030 --> 00:48:10,120
2009 a whole two years later is actually

00:48:07,420 --> 00:48:12,400
went went live I mean life search

00:48:10,120 --> 00:48:13,930
changed to being that system I described

00:48:12,400 --> 00:48:16,450
was was so a lot of the system that went

00:48:13,930 --> 00:48:20,500
live for all the ads on being for the

00:48:16,450 --> 00:48:22,030
coming years lessons learned here again

00:48:20,500 --> 00:48:23,860
research is actually the shortest amount

00:48:22,030 --> 00:48:25,090
of time tool development is hugely

00:48:23,860 --> 00:48:27,580
underestimated in this particular

00:48:25,090 --> 00:48:29,260
instance it was important to develop for

00:48:27,580 --> 00:48:31,390
scale we developed for a single machine

00:48:29,260 --> 00:48:33,400
setting but what we hadn't anticipated

00:48:31,390 --> 00:48:34,810
is that the amount of data became so

00:48:33,400 --> 00:48:36,130
large and today this isn't that isn't

00:48:34,810 --> 00:48:37,780
the problem that a Microsoft or a

00:48:36,130 --> 00:48:40,060
Facebook or an Amazon only have I think

00:48:37,780 --> 00:48:42,250
more and more people are getting getting

00:48:40,060 --> 00:48:44,260
so much data that the design for scale

00:48:42,250 --> 00:48:45,850
is is something extremely important so

00:48:44,260 --> 00:48:49,630
if you put these bars next to each other

00:48:45,850 --> 00:48:50,950
one thing that you see is problem

00:48:49,630 --> 00:48:53,080
identification does take some time

00:48:50,950 --> 00:48:54,910
understanding what the problem is in

00:48:53,080 --> 00:48:58,660
this case it was simply being passionate

00:48:54,910 --> 00:49:00,400
and playing also here knowing why

00:48:58,660 --> 00:49:01,690
we need probabilities isn't just you

00:49:00,400 --> 00:49:03,790
know it's not a black box that just

00:49:01,690 --> 00:49:04,900
seems to spit out probabilities but they

00:49:03,790 --> 00:49:07,360
have value and what can the

00:49:04,900 --> 00:49:09,550
probabilities be influenced by tool

00:49:07,360 --> 00:49:12,130
development is usually underestimated so

00:49:09,550 --> 00:49:14,410
coding is extremely important but the

00:49:12,130 --> 00:49:16,060
the thing that sort of a surprise does

00:49:14,410 --> 00:49:17,890
almost the most in true scalar case is

00:49:16,060 --> 00:49:19,900
how much time this is more than a year

00:49:17,890 --> 00:49:22,510
of our time going into Evangelization

00:49:19,900 --> 00:49:24,850
working with the engineers the customers

00:49:22,510 --> 00:49:26,530
the product managers the developers if

00:49:24,850 --> 00:49:28,030
it's a platform feature and an

00:49:26,530 --> 00:49:29,910
understanding what the what the

00:49:28,030 --> 00:49:32,680
challenge is is in using the interface

00:49:29,910 --> 00:49:36,370
so lessons learned I think process

00:49:32,680 --> 00:49:38,170
lessons there's six and and since then

00:49:36,370 --> 00:49:39,630
or ever since I've been been using them

00:49:38,170 --> 00:49:42,010
a lot the first one I would say is

00:49:39,630 --> 00:49:43,990
there's a temptation as a as a

00:49:42,010 --> 00:49:45,880
researcher to put the technique that the

00:49:43,990 --> 00:49:47,950
complexity of the technique ahead of the

00:49:45,880 --> 00:49:51,130
problem and the best way to avoid that

00:49:47,950 --> 00:49:53,080
is to be your own customer so I didn't

00:49:51,130 --> 00:49:54,370
want to see many ads I was a customer

00:49:53,080 --> 00:49:56,290
they're not absolutely love video gaming

00:49:54,370 --> 00:49:58,090
so that's something that's highly

00:49:56,290 --> 00:50:00,790
motivating and but also makes you focus

00:49:58,090 --> 00:50:02,590
on the experience rather than on is this

00:50:00,790 --> 00:50:04,990
a complex algorithm or is this

00:50:02,590 --> 00:50:07,510
state-of-the-art or not the second thing

00:50:04,990 --> 00:50:11,050
and that's I think that's interesting

00:50:07,510 --> 00:50:13,270
for a lot of lot of researchers is in

00:50:11,050 --> 00:50:15,220
either of these two cases we studied the

00:50:13,270 --> 00:50:16,870
existing literature and that actually I

00:50:15,220 --> 00:50:18,460
think it's a healthy thing I think you

00:50:16,870 --> 00:50:20,260
shouldn't I mean you're not gonna make a

00:50:18,460 --> 00:50:22,210
breakthrough by reading what others did

00:50:20,260 --> 00:50:23,980
in a textbook and re-implementing it if

00:50:22,210 --> 00:50:27,130
you're if you kind of want to make a

00:50:23,980 --> 00:50:29,260
difference then it's it's not it's not

00:50:27,130 --> 00:50:31,990
wrong to be it's not bad to be wrong

00:50:29,260 --> 00:50:33,810
but but you need to first ignore but

00:50:31,990 --> 00:50:36,160
then check out with existing literature

00:50:33,810 --> 00:50:38,590
so it's I remember when we did the

00:50:36,160 --> 00:50:40,480
ranking system it actually didn't even

00:50:38,590 --> 00:50:42,220
know what Ehlo stand for and either was

00:50:40,480 --> 00:50:44,230
kind of a known rankings quite a

00:50:42,220 --> 00:50:46,300
well-known ranking system the third one

00:50:44,230 --> 00:50:47,350
is that when you work on a technology

00:50:46,300 --> 00:50:48,700
transfer you're working on an

00:50:47,350 --> 00:50:50,500
engineering process not a research

00:50:48,700 --> 00:50:52,000
process research process is an annual

00:50:50,500 --> 00:50:54,700
process the conference is run every year

00:50:52,000 --> 00:50:56,320
so when the deadline comes for the call

00:50:54,700 --> 00:50:59,440
for papers that's an important milestone

00:50:56,320 --> 00:51:00,880
products take probably many some some

00:50:59,440 --> 00:51:02,830
procs takes several years and the and

00:51:00,880 --> 00:51:05,560
the milestones in the engineering

00:51:02,830 --> 00:51:07,630
process you know they're there they're

00:51:05,560 --> 00:51:09,520
for reducing risk you come in with a new

00:51:07,630 --> 00:51:11,860
unproven technology you introduce risk

00:51:09,520 --> 00:51:12,610
so understand the engineering process

00:51:11,860 --> 00:51:14,950
something about

00:51:12,610 --> 00:51:18,070
extremely important the fourth one

00:51:14,950 --> 00:51:20,920
something that I can't emphasize

00:51:18,070 --> 00:51:22,720
strongly enough is write the code don't

00:51:20,920 --> 00:51:24,190
just write the equations like a lot of

00:51:22,720 --> 00:51:26,620
the code you saw there wasn't written by

00:51:24,190 --> 00:51:29,830
someone else it's written by by us two

00:51:26,620 --> 00:51:34,290
or three that did the work that the both

00:51:29,830 --> 00:51:36,940
the designs and the and the analysis

00:51:34,290 --> 00:51:39,100
simplicity I think is very important

00:51:36,940 --> 00:51:41,980
it's very tempting when you develop

00:51:39,100 --> 00:51:44,650
let's say something as a shoat to go

00:51:41,980 --> 00:51:47,950
into tangents and have even more complex

00:51:44,650 --> 00:51:49,840
nonlinear estimators the systems need to

00:51:47,950 --> 00:51:51,370
be explainable like it's important that

00:51:49,840 --> 00:51:53,560
it's not just important that accurate

00:51:51,370 --> 00:51:55,510
they also need to be easy to understand

00:51:53,560 --> 00:51:57,910
and then the long run I can't stress

00:51:55,510 --> 00:51:59,440
this one long enough initially you know

00:51:57,910 --> 00:52:01,750
it takes about two to three months I

00:51:59,440 --> 00:52:05,320
would say when you have a good idea to

00:52:01,750 --> 00:52:07,120
to make a mathematical inside or an

00:52:05,320 --> 00:52:08,830
called breakthrough but it doesn't I

00:52:07,120 --> 00:52:10,600
have not seen any major product taking

00:52:08,830 --> 00:52:12,400
two to three months to go out it's

00:52:10,600 --> 00:52:15,220
always the long run its years and that's

00:52:12,400 --> 00:52:17,350
okay there's a you know there's nothing

00:52:15,220 --> 00:52:21,010
to be gained by by quick win throw over

00:52:17,350 --> 00:52:22,870
the third offense kind of model so from

00:52:21,010 --> 00:52:24,910
the machine learning perspective the

00:52:22,870 --> 00:52:27,250
kind of six steps that that you've

00:52:24,910 --> 00:52:29,290
always follow and have always followed

00:52:27,250 --> 00:52:30,940
is you first got your data then you

00:52:29,290 --> 00:52:33,400
model it and I've kind of went a little

00:52:30,940 --> 00:52:35,770
through that then you learn a model with

00:52:33,400 --> 00:52:37,510
a with an implementation over or an

00:52:35,770 --> 00:52:38,920
implementation of an of an algorithm

00:52:37,510 --> 00:52:41,320
that you came up with or you you use

00:52:38,920 --> 00:52:44,290
then you go into a cycle of engineering

00:52:41,320 --> 00:52:45,940
features meaning the results weren't as

00:52:44,290 --> 00:52:48,100
accurate as you hoped so you go back and

00:52:45,940 --> 00:52:50,290
change some of the ways that the

00:52:48,100 --> 00:52:53,050
algorithm perceives the data probably

00:52:50,290 --> 00:52:55,060
remove some outliers then you need to go

00:52:53,050 --> 00:52:57,130
into a mode of measuring how accurate is

00:52:55,060 --> 00:52:59,410
it you know beta test is an extreme form

00:52:57,130 --> 00:53:01,630
of measuring but it's a possible one a B

00:52:59,410 --> 00:53:03,910
test is a more more common one so you

00:53:01,630 --> 00:53:05,980
you have already a platformer for some

00:53:03,910 --> 00:53:07,420
parts of your users you can offer some

00:53:05,980 --> 00:53:09,010
parts of your product you can use a

00:53:07,420 --> 00:53:11,830
different system B and then you have a

00:53:09,010 --> 00:53:14,200
compare treatment control group a for a

00:53:11,830 --> 00:53:15,370
say equally sized group and then you

00:53:14,200 --> 00:53:18,460
need tools to support it when it

00:53:15,370 --> 00:53:20,680
actually goes in operation now I think

00:53:18,460 --> 00:53:22,360
from my experience this is the six

00:53:20,680 --> 00:53:24,280
essential steps the only mistake in

00:53:22,360 --> 00:53:25,930
their pictures they look like they take

00:53:24,280 --> 00:53:26,680
the equal amount of time but my

00:53:25,930 --> 00:53:28,330
experience is more

00:53:26,680 --> 00:53:29,950
like this that the machine learning

00:53:28,330 --> 00:53:34,030
takes about the smallest amount of time

00:53:29,950 --> 00:53:35,680
and even getting data getting data in

00:53:34,030 --> 00:53:37,300
from the processes

00:53:35,680 --> 00:53:39,280
most of the data generating process are

00:53:37,300 --> 00:53:41,440
not meant to be used as input for an

00:53:39,280 --> 00:53:43,480
adaptive system takes text among the

00:53:41,440 --> 00:53:45,220
longest time and and the cycle of

00:53:43,480 --> 00:53:47,140
engineering the the feature so it

00:53:45,220 --> 00:53:49,330
actually makes a substantial difference

00:53:47,140 --> 00:53:52,330
in your accuracy takes an equally

00:53:49,330 --> 00:53:55,660
equally really similar large large

00:53:52,330 --> 00:53:58,150
amount of time and the last the last

00:53:55,660 --> 00:53:59,620
thing I want to just just sort of word

00:53:58,150 --> 00:54:04,120
of caution of not using machine learning

00:53:59,620 --> 00:54:05,800
everywhere what is the what is the test

00:54:04,120 --> 00:54:08,080
questions that I always ask myself when

00:54:05,800 --> 00:54:09,400
when people say well let's let's let's

00:54:08,080 --> 00:54:10,150
use machine learning for this I'm sure

00:54:09,400 --> 00:54:13,690
it's gonna get better

00:54:10,150 --> 00:54:17,070
um the first question is data do we even

00:54:13,690 --> 00:54:19,210
have sufficient ongoing data or or not

00:54:17,070 --> 00:54:20,830
I'll give you an example of a problem

00:54:19,210 --> 00:54:22,630
where we have and then a problem were

00:54:20,830 --> 00:54:24,910
but just attacked by machine learning

00:54:22,630 --> 00:54:26,350
methods but I would say that doesn't

00:54:24,910 --> 00:54:28,030
make much sense there's no ongoing data

00:54:26,350 --> 00:54:29,400
and the total amount of instances is in

00:54:28,030 --> 00:54:34,060
the hundreds so you can do it by hand

00:54:29,400 --> 00:54:36,190
second is it complexity is perhaps can

00:54:34,060 --> 00:54:38,440
we can we define a simple rule that we

00:54:36,190 --> 00:54:39,820
just write down that does the prediction

00:54:38,440 --> 00:54:42,580
that does the filling in our future

00:54:39,820 --> 00:54:44,140
values accurate enough and even there is

00:54:42,580 --> 00:54:46,180
good example where that happens and it

00:54:44,140 --> 00:54:47,710
gets ignored the third one I always ask

00:54:46,180 --> 00:54:49,420
is even if he built this adaptive

00:54:47,710 --> 00:54:50,440
experience is in its the custom acts

00:54:49,420 --> 00:54:55,690
you're gonna like it or is it just

00:54:50,440 --> 00:54:58,480
technically cute kind of customer expand

00:54:55,690 --> 00:54:59,800
it from it and the fourth one is is it

00:54:58,480 --> 00:55:02,770
economical I think that's something that

00:54:59,800 --> 00:55:05,500
often gets overlooked is does the cost

00:55:02,770 --> 00:55:07,210
of doing a prediction outweigh the

00:55:05,500 --> 00:55:09,430
benefit okay

00:55:07,210 --> 00:55:10,660
so here's an here's a bunch of examples

00:55:09,430 --> 00:55:12,430
I'll just talk through everything it

00:55:10,660 --> 00:55:14,590
makes sense click the read prediction

00:55:12,430 --> 00:55:16,720
ongoing stream of data this is people

00:55:14,590 --> 00:55:18,310
constantly getting content they see

00:55:16,720 --> 00:55:19,750
content and they click or they don't

00:55:18,310 --> 00:55:21,640
click the buy a product or don't buy a

00:55:19,750 --> 00:55:23,470
product they go to this web page or they

00:55:21,640 --> 00:55:24,790
don't they like a Facebook post or you

00:55:23,470 --> 00:55:26,500
know that keeps on going this is like

00:55:24,790 --> 00:55:28,450
people living people interacting with

00:55:26,500 --> 00:55:30,850
living objects a forecasting demand

00:55:28,450 --> 00:55:33,280
people always another good example

00:55:30,850 --> 00:55:34,930
there by a simple rule for what's the

00:55:33,280 --> 00:55:36,670
future going to be how many of these

00:55:34,930 --> 00:55:38,020
clickers are gonna get bought that's not

00:55:36,670 --> 00:55:40,160
something very simple you can define a

00:55:38,020 --> 00:55:42,619
simple rule and there's an economics

00:55:40,160 --> 00:55:44,630
they're named entity extraction from

00:55:42,619 --> 00:55:46,549
from texts and from books or from the

00:55:44,630 --> 00:55:49,160
web it's a big problem because people

00:55:46,549 --> 00:55:50,329
continue to generate content this can

00:55:49,160 --> 00:55:51,980
generate language they generated

00:55:50,329 --> 00:55:55,789
knowledge and that knowledge doesn't

00:55:51,980 --> 00:55:58,670
stop magically or or fraud prediction

00:55:55,789 --> 00:56:00,770
it's just incentive trim here's a here's

00:55:58,670 --> 00:56:02,990
a bad example with that actually happens

00:56:00,770 --> 00:56:05,150
so one of the prime problems in machine

00:56:02,990 --> 00:56:07,309
learning that many many PhD theses have

00:56:05,150 --> 00:56:08,030
been written on is predicting the type

00:56:07,309 --> 00:56:12,289
of a flower

00:56:08,030 --> 00:56:15,200
so is this an iris or is this a Petula

00:56:12,289 --> 00:56:17,390
and now this is cute but honestly the

00:56:15,200 --> 00:56:20,530
the type of flowers is a limited set I

00:56:17,390 --> 00:56:22,640
would upper bound it by thousand and

00:56:20,530 --> 00:56:25,460
classifying them is something that I can

00:56:22,640 --> 00:56:27,410
get a someone as well trained to do and

00:56:25,460 --> 00:56:29,089
I don't really see there's an ongoing

00:56:27,410 --> 00:56:32,420
stream I don't really see the complexity

00:56:29,089 --> 00:56:34,430
so saying that the iris dataset is one

00:56:32,420 --> 00:56:36,170
of the as a mushrooms data set as well

00:56:34,430 --> 00:56:38,990
it's one of the standard data sets we're

00:56:36,170 --> 00:56:40,789
all all lives of machine learning

00:56:38,990 --> 00:56:44,960
researchers decide one way or the other

00:56:40,789 --> 00:56:46,460
by being a little better complexity so

00:56:44,960 --> 00:56:48,650
one of the common techniques here is

00:56:46,460 --> 00:56:51,619
when you have a data set and somehow

00:56:48,650 --> 00:56:54,319
this happens a lot some column of data

00:56:51,619 --> 00:56:56,779
is missing it's just wasn't logged or it

00:56:54,319 --> 00:56:58,579
went missing but some people do as a

00:56:56,779 --> 00:57:00,109
technique is they imputed so what that

00:56:58,579 --> 00:57:01,520
means is there's a simple rule like

00:57:00,109 --> 00:57:03,770
let's take the average of the five

00:57:01,520 --> 00:57:06,349
records above and fill in those values

00:57:03,770 --> 00:57:08,359
well if I fill in something that's as

00:57:06,349 --> 00:57:11,270
simple as some of the five numbers that

00:57:08,359 --> 00:57:12,589
are available above in the table why

00:57:11,270 --> 00:57:14,809
would I need a machine learning system

00:57:12,589 --> 00:57:16,130
to learn that rule and I know that rule

00:57:14,809 --> 00:57:18,109
the rule is the average of the five

00:57:16,130 --> 00:57:19,849
numbers above so that's not really

00:57:18,109 --> 00:57:21,230
something where machine learning systems

00:57:19,849 --> 00:57:22,640
gonna do any better the best thing it

00:57:21,230 --> 00:57:25,579
can do is it can learn to average to

00:57:22,640 --> 00:57:28,339
five numbers above customer experience

00:57:25,579 --> 00:57:29,569
probably biased but predictive menus I

00:57:28,339 --> 00:57:32,569
don't know how many people know what

00:57:29,569 --> 00:57:34,779
that is when on a menu like a file menu

00:57:32,569 --> 00:57:37,220
goes and optimizes the placement of

00:57:34,779 --> 00:57:40,160
according to the choices you made in the

00:57:37,220 --> 00:57:42,349
past definitely doable definitely learn

00:57:40,160 --> 00:57:44,690
about is it a great customer experience

00:57:42,349 --> 00:57:47,869
when the file open menu changes position

00:57:44,690 --> 00:57:49,279
depending I did not like that I think

00:57:47,869 --> 00:57:51,529
it's one an example where ml is doable

00:57:49,279 --> 00:57:52,730
we have ongoing data but the customer

00:57:51,529 --> 00:57:53,509
experience dimension hasn't been thought

00:57:52,730 --> 00:57:56,719
through

00:57:53,509 --> 00:57:58,309
and economics it's a good example so in

00:57:56,719 --> 00:58:00,709
online advertising there is the huge

00:57:58,309 --> 00:58:01,999
huge shifts now and this methods that

00:58:00,709 --> 00:58:03,529
are much more computation in hard and

00:58:01,999 --> 00:58:05,839
what I describe like your network

00:58:03,529 --> 00:58:07,669
methods but one thing not to forget is

00:58:05,839 --> 00:58:10,459
that in online advertising you're

00:58:07,669 --> 00:58:14,329
talking about extremely thin small

00:58:10,459 --> 00:58:16,909
amounts of of small amounts of ads that

00:58:14,329 --> 00:58:18,139
get clicked yet for everything every ad

00:58:16,909 --> 00:58:20,329
that might get clicked you need to

00:58:18,139 --> 00:58:24,139
perform some computation computation

00:58:20,329 --> 00:58:26,419
costs competition of cost cost in in the

00:58:24,139 --> 00:58:28,789
distribution in the networking and cost

00:58:26,419 --> 00:58:31,039
in memory and cost and CPU so if your

00:58:28,789 --> 00:58:34,399
model gets more costly if your

00:58:31,039 --> 00:58:35,929
computation of an ad the site showed or

00:58:34,399 --> 00:58:38,419
not is more costly than what an average

00:58:35,929 --> 00:58:39,799
you make from an ad you actually have no

00:58:38,419 --> 00:58:41,659
more business model you have a you might

00:58:39,799 --> 00:58:43,039
be more accurate but you no longer have

00:58:41,659 --> 00:58:46,009
a business that will sustain in the long

00:58:43,039 --> 00:58:48,439
run so it's actually something that is

00:58:46,009 --> 00:58:50,149
often kind of overlooked when you look

00:58:48,439 --> 00:58:52,249
at the when you look at the application

00:58:50,149 --> 00:58:55,609
of machine learning so I hope in the

00:58:52,249 --> 00:58:57,889
last fifty eight minutes I convinced you

00:58:55,609 --> 00:58:59,749
somewhat that technology transfer can be

00:58:57,889 --> 00:59:02,809
of highly rewarding an interesting

00:58:59,749 --> 00:59:04,969
interesting experience what I found is

00:59:02,809 --> 00:59:06,589
that the practical problems actually

00:59:04,969 --> 00:59:07,939
emerge out of this so some of the

00:59:06,589 --> 00:59:10,939
problems for example the dampening one

00:59:07,939 --> 00:59:12,679
wasn't easy or even the the smoothing

00:59:10,939 --> 00:59:14,059
these were these were research

00:59:12,679 --> 00:59:15,529
directions that I think otherwise I

00:59:14,059 --> 00:59:18,559
wouldn't wouldn't have ever engaged in

00:59:15,529 --> 00:59:21,109
and started hopefully I also convinced

00:59:18,559 --> 00:59:24,019
you a little bit that the pictures you

00:59:21,109 --> 00:59:25,489
saw so known as graphical models they're

00:59:24,019 --> 00:59:27,289
powerful as a language because they're

00:59:25,489 --> 00:59:29,149
good for modeling they're easy to

00:59:27,289 --> 00:59:31,579
explain they actually lead to an

00:59:29,149 --> 00:59:33,499
algorithm I basically run throughout the

00:59:31,579 --> 00:59:35,209
algorithm here and they're highly

00:59:33,499 --> 00:59:37,279
modular so something that encoding is a

00:59:35,209 --> 00:59:39,199
good thing so I highly encourage you to

00:59:37,279 --> 00:59:40,759
look at that code and then you see that

00:59:39,199 --> 00:59:42,139
literally I wasn't lying

00:59:40,759 --> 00:59:44,749
I was simply putting the modules

00:59:42,139 --> 00:59:46,669
together like the red arrows and the

00:59:44,749 --> 00:59:49,939
last word is a forest machine learning

00:59:46,669 --> 00:59:52,279
in my view after having done it for 1516

00:59:49,939 --> 00:59:56,380
years I'd say it's it's the statistics

00:59:52,279 --> 00:59:56,380
of big data Thanks

01:00:07,589 --> 01:00:15,570
is there any questions this one up there

01:00:15,590 --> 01:00:22,140
hi hi what was the impact of using f

01:00:19,650 --> 01:00:24,020
sharp as your language of choice and

01:00:22,140 --> 01:00:26,250
also why did you pick it so early in

01:00:24,020 --> 01:00:28,140
2007-8 when it was still a pretty young

01:00:26,250 --> 01:00:32,040
technology yeah

01:00:28,140 --> 01:00:34,350
the impact was that it made a lot easier

01:00:32,040 --> 01:00:36,890
to translate the mathematical models

01:00:34,350 --> 01:00:40,800
into code that ran at production speed

01:00:36,890 --> 01:00:42,990
so we we had a shorter time you saw

01:00:40,800 --> 01:00:45,480
these little blocks of code coding they

01:00:42,990 --> 01:00:47,100
were they were shorter then I would

01:00:45,480 --> 01:00:49,140
argue have you used to more traditional

01:00:47,100 --> 01:00:51,660
language because it really allowed that

01:00:49,140 --> 01:00:52,950
this ability to not change state I mean

01:00:51,660 --> 01:00:55,620
that's something that's inherent in

01:00:52,950 --> 01:00:57,930
mathematics so when you write x equals 1

01:00:55,620 --> 01:00:59,730
you can't you know that that fixes the

01:00:57,930 --> 01:01:02,240
value of x that's not gonna mean a next

01:00:59,730 --> 01:01:04,440
line I can use X as a place all over 2

01:01:02,240 --> 01:01:06,690
that's a property that a camera or a

01:01:04,440 --> 01:01:08,100
shop have so hope that answers your

01:01:06,690 --> 01:01:09,390
first question at minimize and the

01:01:08,100 --> 01:01:12,090
second question might have used it too

01:01:09,390 --> 01:01:13,920
early in all honesty because we had the

01:01:12,090 --> 01:01:15,690
architect of F sharp as a colleague down

01:01:13,920 --> 01:01:17,850
the corridor so if I need a language

01:01:15,690 --> 01:01:23,880
feature I just went there and asked him

01:01:17,850 --> 01:01:25,710
I'm serious so one more subsequent

01:01:23,880 --> 01:01:27,360
question maybe would you recommend big

01:01:25,710 --> 01:01:29,610
data people to look more into functional

01:01:27,360 --> 01:01:30,990
programming languages yeah definitely I

01:01:29,610 --> 01:01:34,860
think in particular when it comes to

01:01:30,990 --> 01:01:36,870
distributing a computation not having to

01:01:34,860 --> 01:01:39,660
worry about the changing state as a big

01:01:36,870 --> 01:01:43,130
Savior so thank you very much yeah so

01:01:39,660 --> 01:01:43,130
we're playing with Scala these days and

01:01:43,970 --> 01:01:52,080
so I have a question for you which is

01:01:47,180 --> 01:01:55,040
versus video ah okay is if you you think

01:01:52,080 --> 01:01:58,320
iris is an unreasonable data set to use

01:01:55,040 --> 01:02:02,400
do you have data that you make public to

01:01:58,320 --> 01:02:06,180
solve that problem yes we do when it's

01:02:02,400 --> 01:02:08,100
when it's either old enough or not or

01:02:06,180 --> 01:02:09,750
anonymized enough so you can use it so I

01:02:08,100 --> 01:02:15,300
give the example of the ranking system

01:02:09,750 --> 01:02:18,450
here that data the halo 2 beta of 6000

01:02:15,300 --> 01:02:22,220
this was 6000 people playing 160,000

01:02:18,450 --> 01:02:22,220
matches it's actually publicly available

01:02:23,390 --> 01:02:27,990
you just query for Halo 2 beta dataset

01:02:25,890 --> 01:02:29,150
um but I can we can make it why don't we

01:02:27,990 --> 01:02:34,040
put it on the buzz words page

01:02:29,150 --> 01:02:36,260
if a link to it the tricky the tricky

01:02:34,040 --> 01:02:37,700
bit probably just answer one or the

01:02:36,260 --> 01:02:39,650
tricky bit and it's not I don't have an

01:02:37,700 --> 01:02:42,140
answer for this but I think when you

01:02:39,650 --> 01:02:43,670
when you release data about people you

01:02:42,140 --> 01:02:47,450
can really have to honor their privacy

01:02:43,670 --> 01:02:49,100
so I'm very I would be you know be very

01:02:47,450 --> 01:02:51,020
reluctant to release something that

01:02:49,100 --> 01:02:54,680
identifies any individuals taste or

01:02:51,020 --> 01:02:55,280
preference or or or a buying pattern

01:02:54,680 --> 01:02:57,560
power

01:02:55,280 --> 01:02:59,540
any kind of information identifies an

01:02:57,560 --> 01:03:02,090
individual that makes it hard so my

01:02:59,540 --> 01:03:04,280
criticism of iris didn't didn't imply to

01:03:02,090 --> 01:03:05,900
mean that I have an answer to how to

01:03:04,280 --> 01:03:10,430
make these huge collections easily

01:03:05,900 --> 01:03:12,740
available I'm probably one last word

01:03:10,430 --> 01:03:15,070
there is a lot of there is a lot of data

01:03:12,740 --> 01:03:19,820
it's anonymized enough also available

01:03:15,070 --> 01:03:21,740
about the census so the UK the US the

01:03:19,820 --> 01:03:23,180
census data sets have some very

01:03:21,740 --> 01:03:25,880
interesting their sets about people on

01:03:23,180 --> 01:03:36,730
an aggregated level that are that are

01:03:25,880 --> 01:03:40,400
practically relevant high

01:03:36,730 --> 01:03:45,050
let me upper right do you see me yeah hi

01:03:40,400 --> 01:03:47,210
I thought sort of consider myself to be

01:03:45,050 --> 01:03:48,470
a machine learner although I'm sort of

01:03:47,210 --> 01:03:53,180
at the beginning of my career I just

01:03:48,470 --> 01:03:57,860
finished University and now I saw that

01:03:53,180 --> 01:04:02,270
you do saw its first strange with a

01:03:57,860 --> 01:04:04,670
feedback I noticed that you do two

01:04:02,270 --> 01:04:08,300
things that I do as well but I

01:04:04,670 --> 01:04:10,490
considered mistakes by myself and I

01:04:08,300 --> 01:04:13,730
thought about changing the way I do

01:04:10,490 --> 01:04:16,190
things and but now I see that you do

01:04:13,730 --> 01:04:19,790
actually the same and the one thing is

01:04:16,190 --> 01:04:23,870
that you first build models and

01:04:19,790 --> 01:04:27,620
afterwards to they're looking you look

01:04:23,870 --> 01:04:29,690
into literature and yeah I do the same

01:04:27,620 --> 01:04:32,450
but I thought it was actually bad style

01:04:29,690 --> 01:04:34,700
and I consider changing that and the

01:04:32,450 --> 01:04:37,550
second thing I'm doing as well as first

01:04:34,700 --> 01:04:39,350
building the model and then thinking

01:04:37,550 --> 01:04:42,960
about the features that I want to use

01:04:39,350 --> 01:04:44,490
and I also thought maybe I should first

01:04:42,960 --> 01:04:48,150
think about the features and then the

01:04:44,490 --> 01:04:50,760
build the model but it kind of felt

01:04:48,150 --> 01:04:52,980
natural to do it that way but I thought

01:04:50,760 --> 01:04:56,400
maybe it's a bad practice but now maybe

01:04:52,980 --> 01:04:58,800
can you can substantiate why this is

01:04:56,400 --> 01:05:01,680
actually not just practical but also

01:04:58,800 --> 01:05:05,309
theoretically useful to do it this

01:05:01,680 --> 01:05:06,809
supposedly wrong way so so the first

01:05:05,309 --> 01:05:09,180
question I think it's it's almost

01:05:06,809 --> 01:05:12,420
self-evident if you want to if you want

01:05:09,180 --> 01:05:13,530
to come up with a with an algorithm or

01:05:12,420 --> 01:05:15,420
with the model that it's not known

01:05:13,530 --> 01:05:18,300
before how can you come up with it if

01:05:15,420 --> 01:05:19,890
you read the known literature you you're

01:05:18,300 --> 01:05:21,839
likely going to follow the same for

01:05:19,890 --> 01:05:23,130
pattern and and thought traps that

01:05:21,839 --> 01:05:24,839
others did now

01:05:23,130 --> 01:05:26,700
what's bad practice is not to read the

01:05:24,839 --> 01:05:30,240
literature at all that's bad practice

01:05:26,700 --> 01:05:31,890
I encourage you to to go follow your

01:05:30,240 --> 01:05:33,510
hunch follow your gut try this idea and

01:05:31,890 --> 01:05:35,280
then see and there's a there's gonna be

01:05:33,510 --> 01:05:37,109
some surprise sometimes you quite often

01:05:35,280 --> 01:05:39,210
you find that someone else had a similar

01:05:37,109 --> 01:05:41,430
idea before so in terms of publication

01:05:39,210 --> 01:05:43,859
you might not be able to publish but in

01:05:41,430 --> 01:05:45,569
terms of generating a good customer

01:05:43,859 --> 01:05:46,619
experience or a product that's that's

01:05:45,569 --> 01:05:49,160
actually a good thing because you have a

01:05:46,619 --> 01:05:51,599
deep understanding the second thing

01:05:49,160 --> 01:05:54,390
doing feature engineering after the

01:05:51,599 --> 01:05:57,180
modeling the model often what a model

01:05:54,390 --> 01:05:59,520
often does it encodes relationship

01:05:57,180 --> 01:06:01,490
between the data items that you know

01:05:59,520 --> 01:06:04,049
from the data generating process

01:06:01,490 --> 01:06:06,420
regardless of how you how features are

01:06:04,049 --> 01:06:08,549
how do is how the audience sees sees

01:06:06,420 --> 01:06:11,940
your instance your your objects so when

01:06:08,549 --> 01:06:14,190
I represent you know a user web searcher

01:06:11,940 --> 01:06:16,740
by client IP I can't learn anything

01:06:14,190 --> 01:06:18,059
about what males and females do like

01:06:16,740 --> 01:06:20,490
because that's not the level at which

01:06:18,059 --> 01:06:21,869
the argument sees it but the model is

01:06:20,490 --> 01:06:24,569
often for example the model is often

01:06:21,869 --> 01:06:26,670
encoding up an inherent property or

01:06:24,569 --> 01:06:28,799
constrain on the data so in the ranking

01:06:26,670 --> 01:06:32,730
example it's the simple fits a simple

01:06:28,799 --> 01:06:34,680
fact that there is a ordering so if one

01:06:32,730 --> 01:06:37,170
there's a transitivity if the winning

01:06:34,680 --> 01:06:38,490
team is better than the second winning

01:06:37,170 --> 01:06:40,559
team and that team is better and the

01:06:38,490 --> 01:06:42,510
third winning team then by transitivity

01:06:40,559 --> 01:06:44,880
the first winning team is better than

01:06:42,510 --> 01:06:46,619
the third third winning team right and

01:06:44,880 --> 01:06:47,849
that's effectively what you encode

01:06:46,619 --> 01:06:50,000
that's what I would call a model

01:06:47,849 --> 01:06:54,480
regardless of how you represent the

01:06:50,000 --> 01:06:56,290
players so to me also the other the

01:06:54,480 --> 01:06:58,360
other reason why it's hard

01:06:56,290 --> 01:07:01,570
to engineer features before you do the

01:06:58,360 --> 01:07:04,920
model is you often you often engineer

01:07:01,570 --> 01:07:08,590
features with respect to rather still a

01:07:04,920 --> 01:07:11,050
structure I miss take a residual that

01:07:08,590 --> 01:07:13,240
has structure in the data after you make

01:07:11,050 --> 01:07:14,620
a fit but you can no you can't notice

01:07:13,240 --> 01:07:16,630
unless you have a model from which you

01:07:14,620 --> 01:07:17,650
can derive a learning algorithm so a

01:07:16,630 --> 01:07:19,870
very good way of doing feature

01:07:17,650 --> 01:07:21,940
engineering is to look at you do a run

01:07:19,870 --> 01:07:24,130
and then you look at all the examples or

01:07:21,940 --> 01:07:25,900
you still make mistakes or you still

01:07:24,130 --> 01:07:28,270
read where the algorithm still is really

01:07:25,900 --> 01:07:29,500
bad really inaccurate and you see if

01:07:28,270 --> 01:07:31,750
there's anything structurally

01:07:29,500 --> 01:07:33,640
interesting but that step of studying

01:07:31,750 --> 01:07:35,710
requires that you first run the

01:07:33,640 --> 01:07:37,000
algorithm how can you engineer features

01:07:35,710 --> 01:07:38,200
without being able to run a learning on

01:07:37,000 --> 01:07:41,080
how can you derive a learning algorithm

01:07:38,200 --> 01:07:43,600
without having a model of the data does

01:07:41,080 --> 01:07:47,170
that make sense yeah it's basically you

01:07:43,600 --> 01:07:50,410
say you need to have a model in order to

01:07:47,170 --> 01:07:52,720
find out where there are correlations

01:07:50,410 --> 01:08:01,480
between input and output yep that's

01:07:52,720 --> 01:08:03,070
right okay I saw someone there yeah kind

01:08:01,480 --> 01:08:12,670
of hard to see because there's like four

01:08:03,070 --> 01:08:15,760
big lines hi sorry I had a question

01:08:12,670 --> 01:08:19,150
which was about the matchmaking example

01:08:15,760 --> 01:08:23,440
and it was kind of detailed somehow but

01:08:19,150 --> 01:08:27,069
I was very curious like how you showed

01:08:23,440 --> 01:08:29,530
it and in the model you of course were

01:08:27,069 --> 01:08:33,330
assessing in a game people losing and

01:08:29,530 --> 01:08:36,670
winning and what how did will impact but

01:08:33,330 --> 01:08:38,620
if you take game sometimes you are also

01:08:36,670 --> 01:08:42,310
the problem of people leaving or being

01:08:38,620 --> 01:08:45,280
disconnected by the game and well they

01:08:42,310 --> 01:08:47,950
get probably a loss but this also

01:08:45,280 --> 01:08:50,140
impacts game because there are people

01:08:47,950 --> 01:08:52,330
will probably lose and then if you

01:08:50,140 --> 01:08:55,500
compare two games maybe they lose they

01:08:52,330 --> 01:08:58,120
look similar because those people lost

01:08:55,500 --> 01:09:02,230
there and there but in the first case

01:08:58,120 --> 01:09:06,609
they played a bad game but impacted game

01:09:02,230 --> 01:09:08,799
and well this is also a cause of bad

01:09:06,609 --> 01:09:09,730
matchmaking and the opposite because if

01:09:08,799 --> 01:09:11,640
I get matched

01:09:09,730 --> 01:09:16,120
people that I don't like for some reason

01:09:11,640 --> 01:09:18,580
then I leave and then I will get matched

01:09:16,120 --> 01:09:20,140
again badly bla bla so I was just

01:09:18,580 --> 01:09:23,470
wondering whether this was a problem

01:09:20,140 --> 01:09:24,970
that you faced or not we did and we did

01:09:23,470 --> 01:09:27,489
several things around that so one of

01:09:24,970 --> 01:09:29,319
them you can see here it says game

01:09:27,489 --> 01:09:32,380
quality see that can you read that

01:09:29,319 --> 01:09:34,210
yep so if the game quality is high than

01:09:32,380 --> 01:09:38,560
the percentage of information that's

01:09:34,210 --> 01:09:41,200
taken is high - okay but if the game

01:09:38,560 --> 01:09:42,960
quality is low meaning someone left the

01:09:41,200 --> 01:09:45,400
game so now you have three versus four

01:09:42,960 --> 01:09:48,640
so three versus four is known to be a

01:09:45,400 --> 01:09:51,250
bad match then we basically gradually

01:09:48,640 --> 01:09:53,470
start to ignore the game so you play it

01:09:51,250 --> 01:09:54,550
to the end you have your experience but

01:09:53,470 --> 01:09:57,370
it's not gonna affect your skill

01:09:54,550 --> 01:09:59,080
secondly and I was septums relying a

01:09:57,370 --> 01:10:01,300
little bit in the interest of time the

01:09:59,080 --> 01:10:03,460
model itself also has a way that you can

01:10:01,300 --> 01:10:06,190
say partial partial play so the API

01:10:03,460 --> 01:10:08,290
supports for the developer to submit

01:10:06,190 --> 01:10:10,870
what fraction of game time was that

01:10:08,290 --> 01:10:13,210
gamer present in the session and if that

01:10:10,870 --> 01:10:16,600
was 1% then their skill only print

01:10:13,210 --> 01:10:17,950
participate 1% of that no it's it still

01:10:16,600 --> 01:10:21,820
doesn't fully address it because some

01:10:17,950 --> 01:10:23,410
games you know partial participation a

01:10:21,820 --> 01:10:26,080
game doesn't mean that you're not can

01:10:23,410 --> 01:10:27,370
that you can't be game deciding so the

01:10:26,080 --> 01:10:28,690
game Yarber really has to that's that's

01:10:27,370 --> 01:10:30,610
something where the explanation is

01:10:28,690 --> 01:10:32,020
necessary we just make the simplifying

01:10:30,610 --> 01:10:34,270
assumption if you're present one person

01:10:32,020 --> 01:10:35,770
the game then your skill is exactly one

01:10:34,270 --> 01:10:37,780
person representing the overall skill of

01:10:35,770 --> 01:10:39,700
the team some games lend themselves to

01:10:37,780 --> 01:10:41,770
this for example games where your

01:10:39,700 --> 01:10:43,030
cumulate points reshoot peoples if

01:10:41,770 --> 01:10:45,190
you're only there for a first minute you

01:10:43,030 --> 01:10:46,840
can't shoot that many but a racing game

01:10:45,190 --> 01:10:49,450
it makes no difference that's how you

01:10:46,840 --> 01:10:50,920
have team racing and the fastest in the

01:10:49,450 --> 01:10:52,780
team determines the winning of the team

01:10:50,920 --> 01:10:54,760
it doesn't matter if like everyone drops

01:10:52,780 --> 01:10:57,310
out but the fastest player the team is

01:10:54,760 --> 01:10:58,960
still super strong and then also the

01:10:57,310 --> 01:11:00,880
assumption of some of the skills is

01:10:58,960 --> 01:11:02,830
reflective of the some of the of the

01:11:00,880 --> 01:11:03,970
skill of the team is not true anymore so

01:11:02,830 --> 01:11:05,200
this assumption is a simplifying

01:11:03,970 --> 01:11:07,360
assumption for mathematical and

01:11:05,200 --> 01:11:09,850
practical reasons it's not always the

01:11:07,360 --> 01:11:13,810
best one for every game type but your

01:11:09,850 --> 01:11:15,520
experience it work ok like it work

01:11:13,810 --> 01:11:17,010
particularly ok I would say in games

01:11:15,520 --> 01:11:20,170
that were you accumulated teams

01:11:17,010 --> 01:11:22,830
accumulate scores whether it's like

01:11:20,170 --> 01:11:25,590
territory or killed or

01:11:22,830 --> 01:11:28,140
or money you know it's like some some

01:11:25,590 --> 01:11:29,850
form of game of you know you not

01:11:28,140 --> 01:11:32,580
territory but you you build up the city

01:11:29,850 --> 01:11:34,080
wealth and together so doses works

01:11:32,580 --> 01:11:36,720
really well or it doesn't work really

01:11:34,080 --> 01:11:39,840
well as if a single player can dominate

01:11:36,720 --> 01:11:42,930
the skill of a team so in a shooting

01:11:39,840 --> 01:11:44,760
game there's one example one game is

01:11:42,930 --> 01:11:47,040
called snipers so everyone is never

01:11:44,760 --> 01:11:48,150
there the best player can even if

01:11:47,040 --> 01:11:50,040
everyone else around them

01:11:48,150 --> 01:11:51,810
can actually just one player can decide

01:11:50,040 --> 01:11:55,470
the whole team match because it's so

01:11:51,810 --> 01:11:57,720
it's focused on such a small event so

01:11:55,470 --> 01:12:00,720
for for a games where it scores

01:11:57,720 --> 01:12:03,320
accumulated works really well look at

01:12:00,720 --> 01:12:03,320
things

01:12:11,320 --> 01:12:17,380
hey hey I really liked what you were

01:12:15,280 --> 01:12:20,260
saying about the operational tooling

01:12:17,380 --> 01:12:22,420
because I think that's putting the end

01:12:20,260 --> 01:12:24,190
control of the results back into the

01:12:22,420 --> 01:12:29,040
hands of a human right rather than the

01:12:24,190 --> 01:12:31,930
algorithm and I was wondering who is

01:12:29,040 --> 01:12:34,390
developing and maintaining the

01:12:31,930 --> 01:12:36,310
operational tooling is that also owned

01:12:34,390 --> 01:12:38,710
by the researchers or are these

01:12:36,310 --> 01:12:40,500
different groups in no it's different

01:12:38,710 --> 01:12:43,090
groups actually that's more engineering

01:12:40,500 --> 01:12:44,410
operations team with lots of

01:12:43,090 --> 01:12:47,110
documentation and a deep understanding

01:12:44,410 --> 01:12:48,850
what's going on so it takes a year I

01:12:47,110 --> 01:12:51,340
mean takes three I wouldn't say one year

01:12:48,850 --> 01:12:53,410
but takes a long time for for people to

01:12:51,340 --> 01:12:55,630
understand also a lot of writing up its

01:12:53,410 --> 01:12:57,400
effectively now you type through scale

01:12:55,630 --> 01:13:00,070
into into a web search in your favorite

01:12:57,400 --> 01:13:02,170
web search engine you get 10,000 pages

01:13:00,070 --> 01:13:04,480
hits and you get several tutorials and

01:13:02,170 --> 01:13:06,280
there's other people have written very

01:13:04,480 --> 01:13:07,840
nice expose ace at every level of

01:13:06,280 --> 01:13:11,020
understanding and that's necessary I

01:13:07,840 --> 01:13:12,460
think for for other teams new team

01:13:11,020 --> 01:13:13,690
members that are more in engineering and

01:13:12,460 --> 01:13:16,660
operations that are also good in offer

01:13:13,690 --> 01:13:18,880
operations to be able to support such a

01:13:16,660 --> 01:13:20,290
system so the ultimate tech trends are

01:13:18,880 --> 01:13:22,000
really means that actually establish the

01:13:20,290 --> 01:13:23,440
server the base technology and has

01:13:22,000 --> 01:13:25,900
enough literature around it sort of

01:13:23,440 --> 01:13:28,030
people can acquire that knowledge that

01:13:25,900 --> 01:13:29,520
that's even longer that's probably

01:13:28,030 --> 01:13:33,330
another three to five years

01:13:29,520 --> 01:13:33,330
not mine in my experience

01:13:37,480 --> 01:13:48,220
I have a question regarding true skill

01:13:44,970 --> 01:13:50,740
for me it's kind of concern is it this

01:13:48,220 --> 01:13:53,710
score transitive I mean that if player a

01:13:50,740 --> 01:13:55,750
plays better than B it's not and B's

01:13:53,710 --> 01:13:57,910
better than C it's not always the case I

01:13:55,750 --> 01:14:00,040
think especially I think for strategic

01:13:57,910 --> 01:14:01,840
game in on stuff like this it's that's

01:14:00,040 --> 01:14:04,600
true it's not always the case and it's

01:14:01,840 --> 01:14:07,750
something that we you can somewhat

01:14:04,600 --> 01:14:09,520
address but the problem if it's not

01:14:07,750 --> 01:14:11,470
transitive that's now I'm going back

01:14:09,520 --> 01:14:13,630
more to information theory your your

01:14:11,470 --> 01:14:15,280
your a little bit at loss because if

01:14:13,630 --> 01:14:17,170
it's not transitive it means for example

01:14:15,280 --> 01:14:20,200
soccer is not transitive

01:14:17,170 --> 01:14:21,940
that's why every team in the Bundesliga

01:14:20,200 --> 01:14:25,000
or from your league place against every

01:14:21,940 --> 01:14:26,740
team twice in a season because you know

01:14:25,000 --> 01:14:28,240
I don't know like I want to pick teams

01:14:26,740 --> 01:14:31,090
yeah kinda get into hell if I do that

01:14:28,240 --> 01:14:33,460
but team yeah yeah sure I'm gonna pick

01:14:31,090 --> 01:14:37,060
Herto and bio now if team AAA beats team

01:14:33,460 --> 01:14:38,710
B doesn't and BBC in soccer it doesn't

01:14:37,060 --> 01:14:41,920
not at all mean that C is now gonna lose

01:14:38,710 --> 01:14:43,960
against a the problem is that when you

01:14:41,920 --> 01:14:47,020
have n players in a leak

01:14:43,960 --> 01:14:50,170
so these did they and they play against

01:14:47,020 --> 01:14:51,700
end players you need n square numbers

01:14:50,170 --> 01:14:54,940
that somewhat represent the chance of

01:14:51,700 --> 01:14:56,470
one winning against the other if if you

01:14:54,940 --> 01:14:58,450
don't have transitivity you need those

01:14:56,470 --> 01:15:00,820
numbers so that means in order to get

01:14:58,450 --> 01:15:02,230
the best matchmaking experience every

01:15:00,820 --> 01:15:03,880
player has to somewhat play against

01:15:02,230 --> 01:15:05,920
everyone else you cannot transfer any

01:15:03,880 --> 01:15:08,650
information the reason why these were

01:15:05,920 --> 01:15:13,690
learned so fast is that if you have n

01:15:08,650 --> 01:15:15,370
players and there's transitivity that

01:15:13,690 --> 01:15:19,000
means you just need to learn an ordering

01:15:15,370 --> 01:15:21,550
of n players an ordering of n players is

01:15:19,000 --> 01:15:24,310
one of n factorial many permutations

01:15:21,550 --> 01:15:25,690
this number sounds pretty big but

01:15:24,310 --> 01:15:28,240
actually isn't that big when you think

01:15:25,690 --> 01:15:32,650
of it in bits because I just said as N

01:15:28,240 --> 01:15:36,070
squared bits so the number of bits of n

01:15:32,650 --> 01:15:39,280
factorial so log of n factorial is n log

01:15:36,070 --> 01:15:41,260
n my quicksort quicksort exploits is as

01:15:39,280 --> 01:15:42,520
well transitivity so that's why it's

01:15:41,260 --> 01:15:45,880
actually a link between twisting tricks

01:15:42,520 --> 01:15:48,730
or so that's why on average per player

01:15:45,880 --> 01:15:51,530
you only need log n games so with the

01:15:48,730 --> 01:15:54,170
league of a million players that's I

01:15:51,530 --> 01:15:57,349
you know 20 games right a thousand is

01:15:54,170 --> 01:15:58,880
ten bits another thousands ten bits the

01:15:57,349 --> 01:16:00,619
reason why this can learn so fast is the

01:15:58,880 --> 01:16:03,440
transitivity so if you have a game that

01:16:00,619 --> 01:16:06,409
is intransitive then the only way to

01:16:03,440 --> 01:16:07,849
really get get a ranking system that is

01:16:06,409 --> 01:16:10,550
from information to a point of view that

01:16:07,849 --> 01:16:12,619
is somewhat fair is the sort of

01:16:10,550 --> 01:16:14,480
leaderboards that roll up what we do in

01:16:12,619 --> 01:16:16,760
the World Championship now where we have

01:16:14,480 --> 01:16:18,739
60 teams competing and then the winner

01:16:16,760 --> 01:16:20,329
of each of the groups is gonna play

01:16:18,739 --> 01:16:22,730
against the winner so you build a letter

01:16:20,329 --> 01:16:26,150
rather than a system that relies on

01:16:22,730 --> 01:16:28,489
transitivity so it's an interesting

01:16:26,150 --> 01:16:30,440
problem what to do with with almost in

01:16:28,489 --> 01:16:33,440
transitivity meaning you're a transitive

01:16:30,440 --> 01:16:34,789
except for a few exceptions but if if

01:16:33,440 --> 01:16:37,070
you assume if you really drop the

01:16:34,789 --> 01:16:39,289
assumption you can't design a system

01:16:37,070 --> 01:16:40,849
that works for millions of people then

01:16:39,289 --> 01:16:42,710
everyone has to play against a million

01:16:40,849 --> 01:16:44,739
people and there's not enough time to do

01:16:42,710 --> 01:16:44,739
that

01:16:49,440 --> 01:16:58,410
a question on did you measure the

01:16:55,730 --> 01:17:01,170
satisfactions of the gamers with the

01:16:58,410 --> 01:17:04,770
system being lounge and how to do that

01:17:01,170 --> 01:17:08,400
and whether you include it at the end to

01:17:04,770 --> 01:17:10,110
the design of the system so I would say

01:17:08,400 --> 01:17:12,600
there is aspects of matchmaking that we

01:17:10,110 --> 01:17:15,239
absolutely don't do and do bad which is

01:17:12,600 --> 01:17:17,820
playing with your mates like this system

01:17:15,239 --> 01:17:19,830
requires that the outcome of the match

01:17:17,820 --> 01:17:22,949
is a function of the skills so no

01:17:19,830 --> 01:17:25,020
setting up games or messing around so

01:17:22,949 --> 01:17:28,560
what it what it drives is very calm very

01:17:25,020 --> 01:17:30,660
competitive gaming what's missing from

01:17:28,560 --> 01:17:31,980
from the online gaming experience with

01:17:30,660 --> 01:17:34,800
this system but it's not covering at all

01:17:31,980 --> 01:17:36,780
as the social matchmaking has been

01:17:34,800 --> 01:17:39,210
successful we would say yes simply

01:17:36,780 --> 01:17:41,250
measured by the uptake and by how many

01:17:39,210 --> 01:17:42,750
people came back after they finish the

01:17:41,250 --> 01:17:44,640
campaign and play like you know that

01:17:42,750 --> 01:17:46,830
number is known how many people came

01:17:44,640 --> 01:17:48,600
back and played ranked matches versus

01:17:46,830 --> 01:17:50,430
non ranked matches in the one picture

01:17:48,600 --> 01:17:52,530
you saw as actually a show it was

01:17:50,430 --> 01:18:00,510
actually graph you see if I find it

01:17:52,530 --> 01:18:04,050
quickly yeah so here one thing we could

01:18:00,510 --> 01:18:06,030
also do is we could select it's hard to

01:18:04,050 --> 01:18:07,949
read but we could select if we want

01:18:06,030 --> 01:18:10,440
player match that was social or rank

01:18:07,949 --> 01:18:12,300
match see that there's an event that the

01:18:10,440 --> 01:18:14,219
people play a ranked match that was this

01:18:12,300 --> 01:18:15,600
to scale or did they play but we call

01:18:14,219 --> 01:18:18,180
player match or social match would be

01:18:15,600 --> 01:18:19,949
the more modern term today so we we had

01:18:18,180 --> 01:18:22,110
good sense of how many people pick to

01:18:19,949 --> 01:18:23,910
play with their friends for the

01:18:22,110 --> 01:18:26,070
matchmaking was just by what they pulley

01:18:23,910 --> 01:18:28,949
pick to play with and how many people

01:18:26,070 --> 01:18:31,920
picked I want to play against the you

01:18:28,949 --> 01:18:33,780
know for someone of my skill and the

01:18:31,920 --> 01:18:36,150
simply the uptake by people was a

01:18:33,780 --> 01:18:38,300
success indicator was an indicator of

01:18:36,150 --> 01:18:38,300
success

01:18:41,730 --> 01:18:47,770
hey there uprize

01:18:46,210 --> 01:18:53,170
oh man you directly in the light know

01:18:47,770 --> 01:18:55,120
this decide ah okay yeah yeah so my

01:18:53,170 --> 01:18:58,540
question is more about the

01:18:55,120 --> 01:19:01,000
organizational point of view because so

01:18:58,540 --> 01:19:02,860
I'm working also in research transfer at

01:19:01,000 --> 01:19:07,750
exercise I guess you know because to

01:19:02,860 --> 01:19:10,810
work with oh no I think the biggest

01:19:07,750 --> 01:19:13,420
problem that we have in research is that

01:19:10,810 --> 01:19:15,400
you always have groups of research and

01:19:13,420 --> 01:19:18,640
group of engineers yeah and sometimes

01:19:15,400 --> 01:19:21,190
it's very difficult to try to fill that

01:19:18,640 --> 01:19:23,680
gap so I wanted to know how do you work

01:19:21,190 --> 01:19:24,370
usually when you are with engineers and

01:19:23,680 --> 01:19:28,180
researchers

01:19:24,370 --> 01:19:30,070
I might this is simply this is basically

01:19:28,180 --> 01:19:32,500
my experience my experience you try to

01:19:30,070 --> 01:19:35,410
minimize that gap by not shying away

01:19:32,500 --> 01:19:37,360
from taking a taking a task on unbroke

01:19:35,410 --> 01:19:40,239
on it like and you know embed yourself

01:19:37,360 --> 01:19:41,830
like in no case of angeas actually we

01:19:40,239 --> 01:19:43,690
were actually flying and just worked for

01:19:41,830 --> 01:19:45,250
a whole week just to get it started

01:19:43,690 --> 01:19:47,460
in the engineering team set with the

01:19:45,250 --> 01:19:49,870
engineers take tech bugs and take tasks

01:19:47,460 --> 01:19:51,010
and and start to fix them even though

01:19:49,870 --> 01:19:53,890
they weren't any research if aren't

01:19:51,010 --> 01:19:55,510
necessarily the the code that was

01:19:53,890 --> 01:19:59,410
driving that feature we would like to

01:19:55,510 --> 01:20:02,199
get like to get in so that's one social

01:19:59,410 --> 01:20:04,860
level work together the second one you

01:20:02,199 --> 01:20:06,940
make code the lingua franca and not

01:20:04,860 --> 01:20:09,100
mathematics so I've been showing a lot

01:20:06,940 --> 01:20:10,810
of graphs and mathematics but you when

01:20:09,100 --> 01:20:13,719
you work with the together you don't

01:20:10,810 --> 01:20:16,300
sort of provide a research report you

01:20:13,719 --> 01:20:18,370
provide an implementation of it I'm not

01:20:16,300 --> 01:20:20,620
a full-blown system and design of it but

01:20:18,370 --> 01:20:24,250
the core that implements the update of

01:20:20,620 --> 01:20:26,500
the parameters or the predictions so

01:20:24,250 --> 01:20:28,540
that's something I think that these two

01:20:26,500 --> 01:20:29,760
things have personally helped me a great

01:20:28,540 --> 01:20:32,760
deal

01:20:29,760 --> 01:20:32,760
Thanks

01:20:34,480 --> 01:20:40,239
I think we gotta cut it here unless we

01:20:38,050 --> 01:20:42,730
have time for one more question I would

01:20:40,239 --> 01:20:46,000
like to have a question well how much

01:20:42,730 --> 01:20:47,920
time do you spend compared to like

01:20:46,000 --> 01:20:51,130
developing in breaking the system

01:20:47,920 --> 01:20:52,270
yourself in breaking I mean it's very

01:20:51,130 --> 01:20:53,860
important when you work with this

01:20:52,270 --> 01:20:55,780
tribute of system software and API is

01:20:53,860 --> 01:20:58,449
that you you know you you do all over

01:20:55,780 --> 01:21:00,730
something that's hard to break how much

01:20:58,449 --> 01:21:05,260
time do you think or how much time did

01:21:00,730 --> 01:21:08,320
you spend into breaking it so it's an

01:21:05,260 --> 01:21:10,930
interesting question so I take it as how

01:21:08,320 --> 01:21:16,239
much time do we spend in testing the

01:21:10,930 --> 01:21:17,920
border cases of it yeah in this in the

01:21:16,239 --> 01:21:20,260
experiences I have because there were

01:21:17,920 --> 01:21:23,590
life systems they were easily found by

01:21:20,260 --> 01:21:24,850
by users and so it was more I think the

01:21:23,590 --> 01:21:27,040
question is more how much time that we

01:21:24,850 --> 01:21:30,820
so I take it as how much time do we have

01:21:27,040 --> 01:21:31,630
to spend on fixing issues that we hadn't

01:21:30,820 --> 01:21:33,449
thought of before because they were

01:21:31,630 --> 01:21:37,600
corner cases and they they just surfaced

01:21:33,449 --> 01:21:38,980
so one good example here is when you do

01:21:37,600 --> 01:21:40,600
this when you do it when you run this

01:21:38,980 --> 01:21:42,580
code this update code there is a

01:21:40,600 --> 01:21:45,280
scenario and it happens rarely it

01:21:42,580 --> 01:21:47,050
happens one in a million times that you

01:21:45,280 --> 01:21:52,180
win a game and your skill goes down and

01:21:47,050 --> 01:21:53,770
that's mathematically correct now you

01:21:52,180 --> 01:21:56,500
know I thought this is impossible but

01:21:53,770 --> 01:21:58,050
about three four months in this actually

01:21:56,500 --> 01:22:00,400
happened to a person and they went to

01:21:58,050 --> 01:22:01,690
abort so I spent a lot of time looking

01:22:00,400 --> 01:22:04,660
at the boards of all the problems that

01:22:01,690 --> 01:22:06,280
people have and and found out so this is

01:22:04,660 --> 01:22:08,230
a cigar that I friended then on Xbox

01:22:06,280 --> 01:22:10,989
Live he's genuine I looked at a record

01:22:08,230 --> 01:22:12,730
this true skill did go down and that

01:22:10,989 --> 01:22:16,330
costs quite a bit of time to understand

01:22:12,730 --> 01:22:18,730
why and and it actually so the reason

01:22:16,330 --> 01:22:20,590
just to explain why that was is a little

01:22:18,730 --> 01:22:23,560
thing I didn't tell you about that's not

01:22:20,590 --> 01:22:25,630
a big detail but min matches we assume

01:22:23,560 --> 01:22:27,160
that the skill can change so we

01:22:25,630 --> 01:22:29,830
basically in reintroduce dynamics

01:22:27,160 --> 01:22:32,080
meaning that my skill now and my skill

01:22:29,830 --> 01:22:34,750
in the next match have the same mean but

01:22:32,080 --> 01:22:36,160
one has larger variants so that if I

01:22:34,750 --> 01:22:38,199
really get better I can go up I really

01:22:36,160 --> 01:22:39,910
get worse I go down otherwise my

01:22:38,199 --> 01:22:40,989
uncertainty was just the uncertainty in

01:22:39,910 --> 01:22:42,489
the system would just go down gone down

01:22:40,989 --> 01:22:45,160
and I would be locked in and never move

01:22:42,489 --> 01:22:46,730
again so in this case he played a game

01:22:45,160 --> 01:22:49,520
where it was clear

01:22:46,730 --> 01:22:51,800
he was going to win so there was no

01:22:49,520 --> 01:22:53,900
information provided in the game so his

01:22:51,800 --> 01:22:56,300
mean stayed the same yes he won but it

01:22:53,900 --> 01:22:58,280
was a like marginally fifth digit change

01:22:56,300 --> 01:23:00,380
but because of the shifting because of

01:22:58,280 --> 01:23:03,410
the dynamics the change of uncertainty

01:23:00,380 --> 01:23:05,240
over time the variance increased so now

01:23:03,410 --> 01:23:06,800
if you remember equation mean minus

01:23:05,240 --> 01:23:08,210
three times variance means says the same

01:23:06,800 --> 01:23:12,170
variance increases so a skill went down

01:23:08,210 --> 01:23:14,270
visibly so how much time well this cost

01:23:12,170 --> 01:23:17,630
a fair you know in this big example it's

01:23:14,270 --> 01:23:23,450
cost a week to fix this but trying to

01:23:17,630 --> 01:23:24,890
break ourselves it no more than I mean

01:23:23,450 --> 01:23:26,990
you know in the systems we develop now

01:23:24,890 --> 01:23:29,150
or here we have unit tests for the

01:23:26,990 --> 01:23:31,010
individual algorithm where we have input

01:23:29,150 --> 01:23:32,720
output but then we have also integration

01:23:31,010 --> 01:23:34,250
tests where we take large collections

01:23:32,720 --> 01:23:36,470
like the large collection you saw there

01:23:34,250 --> 01:23:38,030
and run it through and see how many you

01:23:36,470 --> 01:23:40,040
know how many jobs fail how many jobs

01:23:38,030 --> 01:23:43,130
but that I wouldn't call this the full

01:23:40,040 --> 01:23:44,780
user test as you probably allude to I

01:23:43,130 --> 01:23:48,160
was I was warned to like the whole

01:23:44,780 --> 01:23:51,230
testing and yes I think we do unit tests

01:23:48,160 --> 01:23:52,310
we do you know documentation is

01:23:51,230 --> 01:23:54,200
extremely important particular in the

01:23:52,310 --> 01:23:56,120
methods are not standard not textbook if

01:23:54,200 --> 01:23:58,460
the over document in the code even

01:23:56,120 --> 01:23:58,820
otherwise what is that what is that

01:23:58,460 --> 01:24:00,110
doing

01:23:58,820 --> 01:24:01,790
there's not even a reference literature

01:24:00,110 --> 01:24:03,890
otherwise and then we do integration

01:24:01,790 --> 01:24:06,830
tests where we have huge collections of

01:24:03,890 --> 01:24:09,830
inputs or old gain records or old click

01:24:06,830 --> 01:24:10,910
records and run them through with an

01:24:09,830 --> 01:24:13,460
integration tests have then

01:24:10,910 --> 01:24:15,230
probabilistic tests meaning because they

01:24:13,460 --> 01:24:16,960
you can't guarantee the execution order

01:24:15,230 --> 01:24:19,760
you can only guarantee that the

01:24:16,960 --> 01:24:22,280
parameters to compute are within bounds

01:24:19,760 --> 01:24:24,050
with respect to what you what you've

01:24:22,280 --> 01:24:25,100
done one so you because the order of

01:24:24,050 --> 01:24:27,230
execution isn't the same

01:24:25,100 --> 01:24:31,130
you can't just check for exactly quality

01:24:27,230 --> 01:24:33,560
of the results thank you thank you I

01:24:31,130 --> 01:24:35,980
think we're done thank you very much

01:24:33,560 --> 01:24:35,980
thank you

01:24:37,130 --> 01:24:39,190

YouTube URL: https://www.youtube.com/watch?v=02mx5-ns1Ps


