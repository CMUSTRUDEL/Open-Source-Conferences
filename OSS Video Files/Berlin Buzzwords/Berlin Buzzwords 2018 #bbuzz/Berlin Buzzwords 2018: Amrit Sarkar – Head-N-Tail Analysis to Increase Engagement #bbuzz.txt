Title: Berlin Buzzwords 2018: Amrit Sarkar â€“ Head-N-Tail Analysis to Increase Engagement #bbuzz
Publication date: 2018-06-18
Playlist: Berlin Buzzwords 2018 #bbuzz
Description: 
	Search engines have come a long way since the early days of reliance on information retrieval as user intent drives modern search applications. Businesses driven by search like eCommerce, content-based companies lose a small but decent amount of traffic to queries getting a lower number of impressions/clicks/conversions as few or irrelevant results are computed and shown. 

This session focus on identifying poor/low performing queries and terms using Head and Tail Analysis, classify with potential reasons and suggest corrections or improved query models for them. The session concludes with emphasizing on experiments being vital to the entire process of improving search relevance. The session is based on Head-n-Tail Analysis in Fusion 4 by Chao Han, VP Head of Research, Lucidworks.

This talk is presented by Lucidworks.

Read more:
https://2018.berlinbuzzwords.de/18/session/head-n-tail-analysis-increase-engagement

About Amrit Sarkar:
https://2018.berlinbuzzwords.de/users/amrit-sarkar-0

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:04,850 --> 00:00:09,059
good afternoon everyone I am Amritsar

00:00:07,320 --> 00:00:11,400
car working as search engineer at

00:00:09,059 --> 00:00:13,920
proceed works and for next 20 minutes or

00:00:11,400 --> 00:00:16,020
so we will see how we can utilize head

00:00:13,920 --> 00:00:18,180
and tail analysis it's a statistical

00:00:16,020 --> 00:00:22,140
approach to improve and increase user

00:00:18,180 --> 00:00:23,760
engagement with our platforms bit about

00:00:22,140 --> 00:00:25,650
dos it works we are a search enterprise

00:00:23,760 --> 00:00:27,510
company based out of San Francisco have

00:00:25,650 --> 00:00:29,250
offices all over the world we have a

00:00:27,510 --> 00:00:30,690
product Lucy it works fusion built on

00:00:29,250 --> 00:00:32,700
top of solar which drives search

00:00:30,690 --> 00:00:34,829
applications and we also provide

00:00:32,700 --> 00:00:36,870
consulting and support organizations who

00:00:34,829 --> 00:00:41,820
are using solar as their search or

00:00:36,870 --> 00:00:44,039
analytics technology so we have come a

00:00:41,820 --> 00:00:46,140
long way being dependent on keyword

00:00:44,039 --> 00:00:47,969
based search for our platform to drive

00:00:46,140 --> 00:00:50,089
the search engines modern such

00:00:47,969 --> 00:00:53,190
applications are driven by user intent

00:00:50,089 --> 00:00:55,530
this example we have here read case for

00:00:53,190 --> 00:00:56,999
MacBook Pro you would like the end-user

00:00:55,530 --> 00:00:59,129
to see the results on the right hand

00:00:56,999 --> 00:01:01,559
side while the classic similarity

00:00:59,129 --> 00:01:04,019
algorithms available with us tf-idf or

00:01:01,559 --> 00:01:06,360
BM 25 which are heavily dependent on the

00:01:04,019 --> 00:01:08,190
terms on your index or your content may

00:01:06,360 --> 00:01:10,500
yield result something like on your left

00:01:08,190 --> 00:01:12,840
hand side out of the top 5 results you

00:01:10,500 --> 00:01:14,759
can see only one is relevant and it's

00:01:12,840 --> 00:01:17,040
highly likely that the user may not even

00:01:14,759 --> 00:01:21,240
like this particular item and move on to

00:01:17,040 --> 00:01:22,979
some competitor platform so let's

00:01:21,240 --> 00:01:25,320
suppose in a given time frame you will

00:01:22,979 --> 00:01:27,090
see 100 unique queries out of which 10

00:01:25,320 --> 00:01:29,070
are well received and has been clicked

00:01:27,090 --> 00:01:31,049
80 number of times while the rest of the

00:01:29,070 --> 00:01:33,869
90 unique queries may have been clicked

00:01:31,049 --> 00:01:35,549
only 20 times so you can see we have 100

00:01:33,869 --> 00:01:37,350
clicks in total for 100 unique queries

00:01:35,549 --> 00:01:41,430
the number seems fine but there is a

00:01:37,350 --> 00:01:43,439
huge opportunity being missed here so

00:01:41,430 --> 00:01:45,570
even if we are able to get a single

00:01:43,439 --> 00:01:47,609
click for each unique query we will be

00:01:45,570 --> 00:01:49,740
able to see much higher engagement with

00:01:47,609 --> 00:01:52,140
your platform in this particular example

00:01:49,740 --> 00:01:56,969
we see a 70% increase with their

00:01:52,140 --> 00:01:59,159
engagement so before jumping on to

00:01:56,969 --> 00:02:01,820
discuss how we can utilize this this

00:01:59,159 --> 00:02:05,189
first know what is handled in analysis

00:02:01,820 --> 00:02:07,799
so it is based on the Pareto principle

00:02:05,189 --> 00:02:11,220
which is the 80/20 rule which states

00:02:07,799 --> 00:02:13,920
that the 80% of the effects come from

00:02:11,220 --> 00:02:15,300
20% of the causes let's suppose in an

00:02:13,920 --> 00:02:17,069
organization's you have number of

00:02:15,300 --> 00:02:18,030
salesmen who are generating revenue for

00:02:17,069 --> 00:02:21,209
a company

00:02:18,030 --> 00:02:24,330
out of the all the salesmen there will

00:02:21,209 --> 00:02:26,310
be very small or a few salesmen will be

00:02:24,330 --> 00:02:28,560
generating a greater chunk than the

00:02:26,310 --> 00:02:31,200
others these high-performance salesmen

00:02:28,560 --> 00:02:34,110
or in this terminology the top causes

00:02:31,200 --> 00:02:36,150
the 20% causes will be termed as heads

00:02:34,110 --> 00:02:38,640
while the rest of the elements will be

00:02:36,150 --> 00:02:41,010
termed as tails these tails will be

00:02:38,640 --> 00:02:42,930
aggregated based on a criteria in the

00:02:41,010 --> 00:02:44,760
example we are discussing this low

00:02:42,930 --> 00:02:46,890
performance salesmen can be aggregated

00:02:44,760 --> 00:02:48,720
based on the region their experience or

00:02:46,890 --> 00:02:52,380
area in the relevant metric according to

00:02:48,720 --> 00:02:54,570
your data set the analysis report

00:02:52,380 --> 00:02:57,120
contains three elements the first is

00:02:54,570 --> 00:02:58,709
ranking each head will be identified

00:02:57,120 --> 00:03:01,200
individually while the tails will be

00:02:58,709 --> 00:03:03,269
aggregated based on a criteria you will

00:03:01,200 --> 00:03:05,280
validate that you can see the Pareto

00:03:03,269 --> 00:03:09,810
effect in your data set that is you will

00:03:05,280 --> 00:03:12,360
plot a y2 x axis graph and will see a

00:03:09,810 --> 00:03:16,050
very big head and then a small tail and

00:03:12,360 --> 00:03:18,569
last you will plot a pie chart either on

00:03:16,050 --> 00:03:20,280
the heads tails aggregate details or a

00:03:18,569 --> 00:03:24,120
combination of the three to have a

00:03:20,280 --> 00:03:29,190
better visualization on your data set on

00:03:24,120 --> 00:03:31,470
which you are working on so it is not

00:03:29,190 --> 00:03:33,930
uncommon to see the Pareto effect or the

00:03:31,470 --> 00:03:36,510
analysis on our query related signals

00:03:33,930 --> 00:03:37,799
that is the user events out of the total

00:03:36,510 --> 00:03:39,480
number of unique queries you are

00:03:37,799 --> 00:03:41,610
receiving they will be very small

00:03:39,480 --> 00:03:43,590
percentage one or two percentage will

00:03:41,610 --> 00:03:46,470
which be getting a more traffic than

00:03:43,590 --> 00:03:48,660
others and if you plot a graph of y axis

00:03:46,470 --> 00:03:50,459
graph between the traffic percentage and

00:03:48,660 --> 00:03:53,790
the query percentage we'll be able to

00:03:50,459 --> 00:03:55,500
see a very big head that is a small set

00:03:53,790 --> 00:03:58,410
of queries are getting more attention

00:03:55,500 --> 00:04:03,930
than a moderate torso and then a long

00:03:58,410 --> 00:04:05,459
tail of those queries so all the

00:04:03,930 --> 00:04:07,200
examples and the solution discussed in

00:04:05,459 --> 00:04:08,970
this particular talk are based on lucid

00:04:07,200 --> 00:04:11,250
works Fusion 4.0 and there is a very

00:04:08,970 --> 00:04:14,400
brief overview of that we have a package

00:04:11,250 --> 00:04:16,370
solar powering the search about a

00:04:14,400 --> 00:04:21,180
zookeeper managing all the resources

00:04:16,370 --> 00:04:23,070
spark as utilized to aggregations we

00:04:21,180 --> 00:04:25,770
have some core services like machine

00:04:23,070 --> 00:04:27,360
learning algorithms NLP etc and we have

00:04:25,770 --> 00:04:29,789
number of connectors which pull data

00:04:27,360 --> 00:04:31,289
from various data sources and the entire

00:04:29,789 --> 00:04:36,479
package is available to the

00:04:31,289 --> 00:04:39,629
users through REST API this is how lucid

00:04:36,479 --> 00:04:42,089
works fusion captures the user events in

00:04:39,629 --> 00:04:44,460
terms of signals our user comes and

00:04:42,089 --> 00:04:47,849
query search for a particular query q

00:04:44,460 --> 00:04:49,529
click on an item i qi with the timestamp

00:04:47,849 --> 00:04:52,050
t will be stored in a collection called

00:04:49,529 --> 00:04:54,689
signals these signals will be aggregated

00:04:52,050 --> 00:04:56,909
timely maybe by weekly or bi-weekly and

00:04:54,689 --> 00:04:59,099
the aggregated signals will then be

00:04:56,909 --> 00:05:01,259
fetched or feed it to the query

00:04:59,099 --> 00:05:03,629
pipelines we have or query model

00:05:01,259 --> 00:05:06,119
configuration so that the next time if a

00:05:03,629 --> 00:05:08,869
user comes and search for a query Q he

00:05:06,119 --> 00:05:11,369
will see the item I hire upon the order

00:05:08,869 --> 00:05:13,139
for the last two slides we check out our

00:05:11,369 --> 00:05:14,819
official documentation to understand the

00:05:13,139 --> 00:05:17,930
platform and the respective features

00:05:14,819 --> 00:05:20,490
properly so this is how early she was

00:05:17,930 --> 00:05:23,399
Fusion single document looks like the

00:05:20,490 --> 00:05:24,389
doc ID the query timestamp and what type

00:05:23,399 --> 00:05:26,749
of event is this

00:05:24,389 --> 00:05:29,759
it's a click Add to Cart hovered upon

00:05:26,749 --> 00:05:32,249
maybe an order conversion on the left

00:05:29,759 --> 00:05:35,219
hand side you can see the query LCD TV

00:05:32,249 --> 00:05:37,019
received 35 K searches and have been

00:05:35,219 --> 00:05:39,029
clicked 30 number 30 k number of times

00:05:37,019 --> 00:05:41,610
making it a conversion rate of around

00:05:39,029 --> 00:05:44,789
about 0.8 0.9 while we have another

00:05:41,610 --> 00:05:47,069
query called outdoor rock speaker which

00:05:44,789 --> 00:05:50,009
has in search 2200 times and have been

00:05:47,069 --> 00:05:53,849
clicked only 5 conversion rate of 0.04

00:05:50,009 --> 00:05:55,860
so we will have some benchmarks of what

00:05:53,849 --> 00:05:57,539
queries will be lie in your head and

00:05:55,860 --> 00:06:00,180
what queries will lie in your tail in

00:05:57,539 --> 00:06:02,819
this particular example we have the LCD

00:06:00,180 --> 00:06:07,800
TV as a head query and an outdoor rock

00:06:02,819 --> 00:06:10,019
speaker as a tail query so now let's try

00:06:07,800 --> 00:06:11,580
to a broadly classify our poor

00:06:10,019 --> 00:06:13,740
performant query so that we can have a

00:06:11,580 --> 00:06:16,619
better understanding of them the first

00:06:13,740 --> 00:06:19,110
we have misspelled links depending on

00:06:16,619 --> 00:06:20,819
the user he hails from and how he

00:06:19,110 --> 00:06:22,800
pronounced his word he tends to spell

00:06:20,819 --> 00:06:24,599
like the same so here we user can come

00:06:22,800 --> 00:06:26,969
to a platform and Mace misspell a word

00:06:24,599 --> 00:06:28,439
or even if content creator who is

00:06:26,969 --> 00:06:29,819
generating the content or listening down

00:06:28,439 --> 00:06:31,949
a product for you on the platform

00:06:29,819 --> 00:06:34,709
eCourse ecommerce platform may

00:06:31,949 --> 00:06:37,259
misspelled that particular term then we

00:06:34,709 --> 00:06:39,089
have numbers or dimensions search you

00:06:37,259 --> 00:06:41,579
have the description in for a particular

00:06:39,089 --> 00:06:43,370
product as to space x phase two while a

00:06:41,579 --> 00:06:45,120
user comes and searches for to buy to

00:06:43,370 --> 00:06:46,740
that particular item

00:06:45,120 --> 00:06:48,840
may get selected in the total in the

00:06:46,740 --> 00:06:53,070
final result set but may not appear in

00:06:48,840 --> 00:06:55,169
the top X results similarly we have

00:06:53,070 --> 00:06:57,180
users come to a platform and search for

00:06:55,169 --> 00:06:58,979
a very popular query like water bottle

00:06:57,180 --> 00:07:01,919
but have a description on an adjective

00:06:58,979 --> 00:07:03,750
in front or end of it so if we search

00:07:01,919 --> 00:07:05,430
for a water bottle you will see the top

00:07:03,750 --> 00:07:08,070
20 or tops X number of results with

00:07:05,430 --> 00:07:09,810
water bottle but foldable word depending

00:07:08,070 --> 00:07:12,449
on how many times it is appearing in

00:07:09,810 --> 00:07:15,090
your particular document in the

00:07:12,449 --> 00:07:17,370
description depending on that they may

00:07:15,090 --> 00:07:20,550
appear or now appear not appear in your

00:07:17,370 --> 00:07:22,680
topics results another example can be a

00:07:20,550 --> 00:07:24,750
pillow cover and then we wash free we

00:07:22,680 --> 00:07:26,060
look over or wash less we look over

00:07:24,750 --> 00:07:29,810
something like that

00:07:26,060 --> 00:07:32,340
then red-tape is a brand red is a color

00:07:29,810 --> 00:07:34,139
w is a women's apparel brand is also

00:07:32,340 --> 00:07:36,240
English alphabet it's always difficult

00:07:34,139 --> 00:07:39,479
to classify particular tokens and terms

00:07:36,240 --> 00:07:41,669
in your query then articles prepositions

00:07:39,479 --> 00:07:43,289
helping verbs does not really contribute

00:07:41,669 --> 00:07:45,539
much in your search platform and you can

00:07:43,289 --> 00:07:49,050
safely drop them and categorize them as

00:07:45,539 --> 00:07:51,539
top words then users tend to come and

00:07:49,050 --> 00:07:53,880
search for a very popular terms with a

00:07:51,539 --> 00:07:56,160
very rare terms like wireless bluetooth

00:07:53,880 --> 00:07:57,660
headphone a number of items will have

00:07:56,160 --> 00:07:59,880
wireless Bluetooth in their description

00:07:57,660 --> 00:08:02,460
but headphone is a very rare term again

00:07:59,880 --> 00:08:04,410
the document or item which will have

00:08:02,460 --> 00:08:06,270
these keywords will be selected but how

00:08:04,410 --> 00:08:10,740
higher up they appear in the part and

00:08:06,270 --> 00:08:12,900
the final list is shaking then we have a

00:08:10,740 --> 00:08:15,210
products a washer and dryer something

00:08:12,900 --> 00:08:20,729
like that and user comes in query for

00:08:15,210 --> 00:08:23,340
dryer and washer right so let's try to

00:08:20,729 --> 00:08:25,530
apply the head and tail analysis for our

00:08:23,340 --> 00:08:28,380
first category misspellings and tend to

00:08:25,530 --> 00:08:30,780
see whether we can improve it or how we

00:08:28,380 --> 00:08:32,550
can apply this particular strategy so we

00:08:30,780 --> 00:08:35,520
have some X number of tails and wine

00:08:32,550 --> 00:08:37,289
vine number of heads and based on the

00:08:35,520 --> 00:08:40,140
click counts aggregation for a given

00:08:37,289 --> 00:08:41,849
time frame we pick the tail term

00:08:40,140 --> 00:08:45,690
surveillance which is misspelled a

00:08:41,849 --> 00:08:48,420
should be e and E should be a and what

00:08:45,690 --> 00:08:51,810
we will do is we will iterate over each

00:08:48,420 --> 00:08:53,579
head given in our data set we have

00:08:51,810 --> 00:08:56,459
selected and we will try to determine

00:08:53,579 --> 00:08:58,170
the likeliness now there are number of

00:08:56,459 --> 00:09:01,140
factors which can contribute to the lie

00:08:58,170 --> 00:09:02,730
- one particular example of one

00:09:01,140 --> 00:09:03,990
particular way could be to do a

00:09:02,730 --> 00:09:07,230
straightforward

00:09:03,990 --> 00:09:09,210
head to tail character based matching so

00:09:07,230 --> 00:09:10,710
you can use a complicated character

00:09:09,210 --> 00:09:13,200
based matching like finite state

00:09:10,710 --> 00:09:17,210
automata or KMP or use a simpler one

00:09:13,200 --> 00:09:19,560
like character based Edit distance right

00:09:17,210 --> 00:09:21,660
another common factor between contribute

00:09:19,560 --> 00:09:23,880
to are the phrase queries you have X

00:09:21,660 --> 00:09:25,620
number of users came to a platform and

00:09:23,880 --> 00:09:27,420
searched for surveillance cameras with

00:09:25,620 --> 00:09:29,100
the rightly spelled surveillance our

00:09:27,420 --> 00:09:30,390
user Y comes and searches for the

00:09:29,100 --> 00:09:32,550
surveillance cameras with the wrongly

00:09:30,390 --> 00:09:34,170
spent one you would like this user to

00:09:32,550 --> 00:09:36,450
see the same results but we have shown

00:09:34,170 --> 00:09:38,540
for the X number of users and that can

00:09:36,450 --> 00:09:40,950
be another contributing factor to this

00:09:38,540 --> 00:09:42,660
once you have determined the likeliness

00:09:40,950 --> 00:09:44,910
you will calculate some kind of a

00:09:42,660 --> 00:09:47,100
similarity score you will assign the

00:09:44,910 --> 00:09:50,880
head with the maximum similarity score

00:09:47,100 --> 00:09:52,790
to your tail in this example we have the

00:09:50,880 --> 00:09:55,320
surveillance with a rightly correct word

00:09:52,790 --> 00:09:57,240
once you have determined the head to a

00:09:55,320 --> 00:09:58,890
tail you will just add it to your

00:09:57,240 --> 00:10:00,540
synonyms list so that the next time I

00:09:58,890 --> 00:10:02,280
user Y comes and searches for the

00:10:00,540 --> 00:10:04,320
wrongly spread surveillance - you will

00:10:02,280 --> 00:10:10,260
be able to see at least the result for

00:10:04,320 --> 00:10:11,850
your rightly correct one then

00:10:10,260 --> 00:10:14,580
misspellings can also happen at the

00:10:11,850 --> 00:10:16,410
index side - if you have sellers who

00:10:14,580 --> 00:10:19,010
came to come to a platform and list on

00:10:16,410 --> 00:10:21,900
products or you have a content-based

00:10:19,010 --> 00:10:23,850
website like Reddit so people tend to

00:10:21,900 --> 00:10:25,350
come and create content for you and the

00:10:23,850 --> 00:10:29,280
vanity pronounced word obviously they

00:10:25,350 --> 00:10:32,640
can spell it wrong so you will identify

00:10:29,280 --> 00:10:34,920
some certain important fields or in your

00:10:32,640 --> 00:10:37,080
documents in your data and on those

00:10:34,920 --> 00:10:39,420
fields you will get their terms

00:10:37,080 --> 00:10:42,810
frequencies on your field values and

00:10:39,420 --> 00:10:45,060
determine some heads and tails now I

00:10:42,810 --> 00:10:46,860
hail from an eastern part of India and

00:10:45,060 --> 00:10:48,270
we have a product we have a suite called

00:10:46,860 --> 00:10:49,980
Raja kala and we pronounced in this

00:10:48,270 --> 00:10:52,710
particular manner while the rest of the

00:10:49,980 --> 00:10:55,620
India pronounced in different so we will

00:10:52,710 --> 00:10:57,690
apply the same strategy we will I trade

00:10:55,620 --> 00:11:00,900
over each head we will determine the

00:10:57,690 --> 00:11:02,490
lightness we will assign the head with a

00:11:00,900 --> 00:11:05,370
maximum similarity scored with the tail

00:11:02,490 --> 00:11:09,350
and we get our head as rasgulla the

00:11:05,370 --> 00:11:11,580
rightly spelled one or the most used one

00:11:09,350 --> 00:11:13,320
once we have that

00:11:11,580 --> 00:11:16,110
we will re index all our documents

00:11:13,320 --> 00:11:18,269
having the term raschig allah replacing

00:11:16,110 --> 00:11:20,160
it with rascal law this ensures

00:11:18,269 --> 00:11:23,580
consistency and uniformity in your data

00:11:20,160 --> 00:11:26,430
set and in and you can apply the query

00:11:23,580 --> 00:11:28,560
side to have the respective synonyms for

00:11:26,430 --> 00:11:29,880
Russia galore other variants you have

00:11:28,560 --> 00:11:36,060
for this particular suite or of a

00:11:29,880 --> 00:11:38,190
particular town so the last two slides

00:11:36,060 --> 00:11:40,170
we discussed are already available in

00:11:38,190 --> 00:11:41,160
Russia drugs fusion 4.0 as a built-in

00:11:40,170 --> 00:11:42,750
plugin

00:11:41,160 --> 00:11:44,670
it's called token and phrase spell

00:11:42,750 --> 00:11:47,670
correction job you have to specify some

00:11:44,670 --> 00:11:49,079
certain configurations and you can do

00:11:47,670 --> 00:11:51,180
the you can analyze the performance

00:11:49,079 --> 00:11:53,279
based on two criterias you can have a

00:11:51,180 --> 00:11:55,140
main event court clicks and have a

00:11:53,279 --> 00:12:00,810
secondary event called query count over

00:11:55,140 --> 00:12:03,600
upon right-click etc we also have an

00:12:00,810 --> 00:12:05,940
explicit in the fusion we have head and

00:12:03,600 --> 00:12:07,920
tail analysis job if you have to provide

00:12:05,940 --> 00:12:09,899
some configurations your signal input

00:12:07,920 --> 00:12:12,420
collection name what is the query field

00:12:09,899 --> 00:12:14,550
name event count field name and what's

00:12:12,420 --> 00:12:17,370
type of event is it like took out over

00:12:14,550 --> 00:12:18,959
upon right-click etcetera for these two

00:12:17,370 --> 00:12:20,579
slides check out our documentation to

00:12:18,959 --> 00:12:24,899
understand the configuration parameters

00:12:20,579 --> 00:12:27,390
and how to really implement it now this

00:12:24,899 --> 00:12:30,810
had until analysis job generates some

00:12:27,390 --> 00:12:33,600
reports which validates your user events

00:12:30,810 --> 00:12:35,579
so first it will have something called

00:12:33,600 --> 00:12:38,250
somebody stats and handle tale plot

00:12:35,579 --> 00:12:41,040
where in this particular example we have

00:12:38,250 --> 00:12:42,720
22,000 unique queries and out of its

00:12:41,040 --> 00:12:44,640
15,000 are not doing really well or

00:12:42,720 --> 00:12:47,010
around about they are receiving less

00:12:44,640 --> 00:12:48,690
than five events if we plot a graph

00:12:47,010 --> 00:12:51,180
between the traffic percentage and query

00:12:48,690 --> 00:12:58,470
percentage you will see a big head Madra

00:12:51,180 --> 00:13:01,350
torso and a big tail now in your fusion

00:12:58,470 --> 00:13:03,690
4.0 it also provides an automatic tail

00:13:01,350 --> 00:13:06,839
rewriting suggestions inbuilt in the

00:13:03,690 --> 00:13:08,730
solar in the fusion platform itself so

00:13:06,839 --> 00:13:11,190
let's try to identify how but it does

00:13:08,730 --> 00:13:12,660
and how the suggestions are rewritten so

00:13:11,190 --> 00:13:16,500
we have the first example is car

00:13:12,660 --> 00:13:18,839
amplifier whose masthead is amplifier so

00:13:16,500 --> 00:13:20,970
one term in your toe token query is

00:13:18,839 --> 00:13:23,430
contributing more to the scores of your

00:13:20,970 --> 00:13:24,220
documents right so you will see all the

00:13:23,430 --> 00:13:26,470
amplifier in

00:13:24,220 --> 00:13:28,840
top X number of results but you may not

00:13:26,470 --> 00:13:31,360
see all the car amplifier in your top X

00:13:28,840 --> 00:13:33,670
results so what you will like to do is

00:13:31,360 --> 00:13:35,440
you would like the other term to be

00:13:33,670 --> 00:13:37,480
boosted more so you can manually boost

00:13:35,440 --> 00:13:40,210
it and a suggestive rewriting can be

00:13:37,480 --> 00:13:43,240
amplifier car with some manual boost and

00:13:40,210 --> 00:13:45,370
we can have a reason code that is you

00:13:43,240 --> 00:13:48,030
can categorize it as an other specific

00:13:45,370 --> 00:13:50,530
data other token was more specific

00:13:48,030 --> 00:13:53,500
another example can be wireless and

00:13:50,530 --> 00:13:56,530
router where the mast had this wireless

00:13:53,500 --> 00:13:58,300
router now the N in between is a single

00:13:56,530 --> 00:13:59,950
character and is a single token and it

00:13:58,300 --> 00:14:02,410
is not contributing much to your final

00:13:59,950 --> 00:14:04,780
results or your user engagement you may

00:14:02,410 --> 00:14:09,310
want to drop it and may have categorize

00:14:04,780 --> 00:14:14,410
it as top words an example could be mw2

00:14:09,310 --> 00:14:16,420
where the masthead is MW now 2 can be a

00:14:14,410 --> 00:14:17,830
version can be a model number or any of

00:14:16,420 --> 00:14:20,920
the relevant specific to that particular

00:14:17,830 --> 00:14:22,900
item or a product so at least you would

00:14:20,920 --> 00:14:25,690
like to end user to see the same results

00:14:22,900 --> 00:14:27,430
for MW and if 2 appears in this

00:14:25,690 --> 00:14:30,910
description they may get ranked higher

00:14:27,430 --> 00:14:34,060
right so you may want to instead rewrite

00:14:30,910 --> 00:14:36,840
it as MW space 2 and have the MW 2 there

00:14:34,060 --> 00:14:44,380
itself and we can categorize it as a

00:14:36,840 --> 00:14:45,760
number a reason code as number so these

00:14:44,380 --> 00:14:47,440
suggestions which are provided in the

00:14:45,760 --> 00:14:49,840
received Vox fusion can be then

00:14:47,440 --> 00:14:51,850
implemented or incorporated in your

00:14:49,840 --> 00:14:54,910
query pipelines or your query model

00:14:51,850 --> 00:14:57,430
configurations on single click for our

00:14:54,910 --> 00:15:01,450
coming full circle to our example of red

00:14:57,430 --> 00:15:03,310
case format book dot pro we said we have

00:15:01,450 --> 00:15:05,440
analyzed that red is a color and will

00:15:03,310 --> 00:15:08,140
match that particular term corresponding

00:15:05,440 --> 00:15:10,810
to its rightful field 4 is a preposition

00:15:08,140 --> 00:15:13,420
we just drop it as a stop board and for

00:15:10,810 --> 00:15:15,940
the rest of the query case MacBook Pro

00:15:13,420 --> 00:15:18,040
we have identified it had to be macbook

00:15:15,940 --> 00:15:19,930
pro case and we may rewrite it as

00:15:18,040 --> 00:15:21,910
macbook pro case with some boost and

00:15:19,930 --> 00:15:26,830
matching the red term corresponding to

00:15:21,910 --> 00:15:29,080
its rightful field color once we apply

00:15:26,830 --> 00:15:31,740
the rewriting right a user will seem

00:15:29,080 --> 00:15:34,690
much better results obviously the

00:15:31,740 --> 00:15:37,000
suggestions are given by fusion or even

00:15:34,690 --> 00:15:38,030
if you calculate or not an exact or the

00:15:37,000 --> 00:15:40,700
best possible solution

00:15:38,030 --> 00:15:44,000
for it but it gives an idea of how to

00:15:40,700 --> 00:15:46,190
formation your query so yeah so we have

00:15:44,000 --> 00:15:49,900
better results here user can click on it

00:15:46,190 --> 00:15:52,010
maybe some buy some item too so

00:15:49,900 --> 00:15:53,990
discovering the reasons for the poor

00:15:52,010 --> 00:15:56,540
perform and querying classifying them

00:15:53,990 --> 00:15:59,050
and maybe rewriting them internally in

00:15:56,540 --> 00:16:02,540
your platform improves in converting

00:15:59,050 --> 00:16:05,330
improves in your overall conversions it

00:16:02,540 --> 00:16:07,070
also helps us to understand how to which

00:16:05,330 --> 00:16:08,390
particular fields and more bed which

00:16:07,070 --> 00:16:10,490
particular fields are more relevant and

00:16:08,390 --> 00:16:13,010
which are not that is you will have

00:16:10,490 --> 00:16:14,990
better query models there is always been

00:16:13,010 --> 00:16:16,400
a gap between what's specified in a

00:16:14,990 --> 00:16:17,840
product description and what I user is

00:16:16,400 --> 00:16:21,080
searching for it's a gap between the

00:16:17,840 --> 00:16:22,610
product catalog and the queries so the

00:16:21,080 --> 00:16:24,980
sellers or the content creators come

00:16:22,610 --> 00:16:26,990
into a platform can identify how exactly

00:16:24,980 --> 00:16:31,040
what exactly you need to put in your

00:16:26,990 --> 00:16:32,780
descriptions then your search architects

00:16:31,040 --> 00:16:34,790
are strategies working on your search

00:16:32,780 --> 00:16:36,740
platform will be able to identify or

00:16:34,790 --> 00:16:38,720
determine what is a better or what is

00:16:36,740 --> 00:16:41,210
the customer vocabulary in the current

00:16:38,720 --> 00:16:43,190
era or than the current time and what is

00:16:41,210 --> 00:16:45,020
the new demand whether people are coming

00:16:43,190 --> 00:16:46,610
and searching for a new product or a new

00:16:45,020 --> 00:16:52,790
version of the product has been launched

00:16:46,610 --> 00:16:55,400
something like that yeah these are the

00:16:52,790 --> 00:16:57,770
resources you can check out for the high

00:16:55,400 --> 00:17:05,000
detail analysis and the respective

00:16:57,770 --> 00:17:06,680
versions of components so I think we

00:17:05,000 --> 00:17:08,960
have time so I can cover this yeah so

00:17:06,680 --> 00:17:11,120
obviously we have discussed this on a

00:17:08,960 --> 00:17:13,070
very I mean abstract level but a higher

00:17:11,120 --> 00:17:16,070
level but you will go on the ground and

00:17:13,070 --> 00:17:18,440
implement it right with exact algorithm

00:17:16,070 --> 00:17:21,200
to use to match your head to a tail what

00:17:18,440 --> 00:17:24,170
criteria you specify your heads or

00:17:21,200 --> 00:17:26,030
classify your tails etc this cannot be

00:17:24,170 --> 00:17:28,610
decide on a single go on in one query

00:17:26,030 --> 00:17:30,440
model right you have cannot really

00:17:28,610 --> 00:17:33,080
settle for in a single query model I

00:17:30,440 --> 00:17:35,840
have to keep experimenting you may want

00:17:33,080 --> 00:17:38,680
to expose your final or you multiple

00:17:35,840 --> 00:17:41,450
query models to in an a/b framework to a

00:17:38,680 --> 00:17:43,670
proportion of your users right or your

00:17:41,450 --> 00:17:45,560
beta testers you can compare those query

00:17:43,670 --> 00:17:47,360
models based on criteria like CTR

00:17:45,560 --> 00:17:49,730
click-through rate positional click data

00:17:47,360 --> 00:17:51,820
MPR's and it's a never-ending process

00:17:49,730 --> 00:17:53,710
you have to keep experimenting

00:17:51,820 --> 00:17:59,200
and to determine what works for you data

00:17:53,710 --> 00:18:00,700
set and what for not that's it for me

00:17:59,200 --> 00:18:10,230
thank you so much now I think I will

00:18:00,700 --> 00:18:10,230
take some questions questions

00:18:12,300 --> 00:18:18,990
hi this monozygous from 904 labs I would

00:18:16,870 --> 00:18:22,230
like to ask you what happens with spam

00:18:18,990 --> 00:18:26,830
sorry what happens with spam spam spam

00:18:22,230 --> 00:18:29,590
or search engines that come to your shop

00:18:26,830 --> 00:18:33,130
for example let's let's take the usage

00:18:29,590 --> 00:18:35,230
that I have I'm using fusion on my

00:18:33,130 --> 00:18:38,740
website or my e-commerce website and

00:18:35,230 --> 00:18:40,150
there are lots of webs and search

00:18:38,740 --> 00:18:42,610
engines that come to my site and they

00:18:40,150 --> 00:18:45,010
fire certain queries which they might

00:18:42,610 --> 00:18:48,700
sample from what very users are

00:18:45,010 --> 00:18:51,190
searching for and in order to scrape and

00:18:48,700 --> 00:18:53,140
crawl documents for mine hello how do I

00:18:51,190 --> 00:18:54,730
do that how do I incorporate that in

00:18:53,140 --> 00:18:57,340
your head and tail analysis right so

00:18:54,730 --> 00:18:59,680
slang slang words right I think they can

00:18:57,340 --> 00:19:02,170
be a part of those pants too you can

00:18:59,680 --> 00:19:04,540
categorize them see so the algorithms we

00:19:02,170 --> 00:19:07,240
discussed here right so if your spam

00:19:04,540 --> 00:19:10,540
words does not really have a head or you

00:19:07,240 --> 00:19:12,850
cannot so if I get back to that

00:19:10,540 --> 00:19:16,480
particular example I think it was yeah

00:19:12,850 --> 00:19:19,030
so in that particular example of

00:19:16,480 --> 00:19:20,710
misspellings right so if you don't

00:19:19,030 --> 00:19:22,090
really find a particular head to a

00:19:20,710 --> 00:19:24,330
particular tail query we have a search

00:19:22,090 --> 00:19:27,580
term right you can safely drop it as

00:19:24,330 --> 00:19:29,800
Mobilia spam there are other algorithms

00:19:27,580 --> 00:19:32,230
- or probably other classification

00:19:29,800 --> 00:19:34,120
models you can really imply to have the

00:19:32,230 --> 00:19:37,540
smallmap spam models you can have an

00:19:34,120 --> 00:19:39,250
exhaustive list of spam words the most

00:19:37,540 --> 00:19:42,280
we used or mostly coming to a platform

00:19:39,250 --> 00:19:44,350
spam words then you can have those terms

00:19:42,280 --> 00:19:46,750
be masked with them in a certain

00:19:44,350 --> 00:19:48,310
criteria the incoming terms and you can

00:19:46,750 --> 00:19:50,380
then classify them have spams for your

00:19:48,310 --> 00:19:52,330
future use and add it to a list later on

00:19:50,380 --> 00:19:53,740
so it's very I'm like I understand this

00:19:52,330 --> 00:19:56,050
is a very abstract level discussion so

00:19:53,740 --> 00:19:57,850
how to what particular classification

00:19:56,050 --> 00:19:59,920
algorithm to apply for a one particular

00:19:57,850 --> 00:20:01,900
use case I mean you have to try two or

00:19:59,920 --> 00:20:04,210
three maybe one work for you mean one

00:20:01,900 --> 00:20:04,900
manat and yeah then you can decide

00:20:04,210 --> 00:20:08,559
Thanks

00:20:04,900 --> 00:20:11,070
we actually thank you so much more

00:20:08,559 --> 00:20:11,070
questions

00:20:16,630 --> 00:20:21,860
in your example some of the boosted

00:20:19,550 --> 00:20:25,250
weights were very specific like on the

00:20:21,860 --> 00:20:27,410
term read you were posting it by 1.5 can

00:20:25,250 --> 00:20:31,610
you share how the weights are calculated

00:20:27,410 --> 00:20:32,570
sure let's look at them in a better

00:20:31,610 --> 00:20:37,430
manner yeah

00:20:32,570 --> 00:20:39,020
so these rewritings so I think fusion

00:20:37,430 --> 00:20:41,630
uses some classification algorithms and

00:20:39,020 --> 00:20:43,250
in itself it smartly determines which

00:20:41,630 --> 00:20:46,460
algorithm to apply for which particular

00:20:43,250 --> 00:20:48,470
category and we will rewrite this this

00:20:46,460 --> 00:20:49,910
particular rewrites are implemented

00:20:48,470 --> 00:20:52,310
internally in the fusion and that they

00:20:49,910 --> 00:20:53,810
provide the suggestions itself in your

00:20:52,310 --> 00:20:55,670
case unlike the example we are

00:20:53,810 --> 00:20:57,860
discussing right the car amplifier if

00:20:55,670 --> 00:21:00,230
one token I'm like I discussed out of

00:20:57,860 --> 00:21:02,150
the two tokens are is scoring is

00:21:00,230 --> 00:21:04,190
contributing more to the score you may

00:21:02,150 --> 00:21:06,830
want to boost it as 1.5 you can do it as

00:21:04,190 --> 00:21:09,110
5 maybe 10 but have some number in mind

00:21:06,830 --> 00:21:11,690
obviously you have to perform some a be

00:21:09,110 --> 00:21:14,480
testing again maybe one can be 1.5 then

00:21:11,690 --> 00:21:22,580
can be 3 whatever is better received you

00:21:14,480 --> 00:21:24,110
know that gives applied so yeah ok thank

00:21:22,580 --> 00:21:25,080
you for your presentation all right

00:21:24,110 --> 00:21:29,550
thank you so much

00:21:25,080 --> 00:21:29,550

YouTube URL: https://www.youtube.com/watch?v=HOu6iXyySgE


