Title: Berlin Buzzwords 2017: Aurélia Nègre & Alberto Guggiola - Graph Theory: Looking for communities ...
Publication date: 2017-06-15
Playlist: Berlin Buzzwords 2017
Description: 
	Community detection in social networks enables to identify densely connected groups of individuals, as well as to dynamically characterise their behavior.

This highly innovative field brings new business opportunities for fraud detection, digital marketing and HR analytics.

After an introduction to Graph Theory and community detection algorithms, we will present two scenarios where these concepts are applied to social networks data: Meetup and LinkedIn.

Will our algorithms manage to identify Data Science communities ?

Read more:
https://2017.berlinbuzzwords.de/17/session/graph-theory-looking-communities

About Aurélia Nègre:
https://2017.berlinbuzzwords.de/users/aurelia-negre

About Alberto Guggiola:
https://2017.berlinbuzzwords.de/users/alberto-guggiola

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:05,810 --> 00:00:12,690
so hello everybody and we are going to

00:00:09,389 --> 00:00:15,359
present you this this use case on graph

00:00:12,690 --> 00:00:18,359
theory about communities first of all a

00:00:15,359 --> 00:00:21,630
little word about about us so we come

00:00:18,359 --> 00:00:24,240
from a start up our coastal district

00:00:21,630 --> 00:00:26,280
here in base in Paris that is called the

00:00:24,240 --> 00:00:30,270
quantum entry we are around the 40 data

00:00:26,280 --> 00:00:32,969
scientist and we have several clients in

00:00:30,270 --> 00:00:37,020
different in different business and we

00:00:32,969 --> 00:00:40,829
have project little bit on proof of

00:00:37,020 --> 00:00:43,440
concepts and also up to the production

00:00:40,829 --> 00:00:46,370
part of the of the data science machine

00:00:43,440 --> 00:00:50,520
learning artificial intelligence

00:00:46,370 --> 00:00:52,579
projects and in particular we had we are

00:00:50,520 --> 00:00:55,170
having a lot of different use cases

00:00:52,579 --> 00:00:56,940
about fraud detection predictive

00:00:55,170 --> 00:01:02,430
maintenance consumer insights in

00:00:56,940 --> 00:01:04,079
marketing and and others we are during

00:01:02,430 --> 00:01:06,390
one project in fraud detection in

00:01:04,079 --> 00:01:08,640
particular we have to deal with this

00:01:06,390 --> 00:01:11,640
community detection problem that is

00:01:08,640 --> 00:01:14,340
quite interesting and there are still a

00:01:11,640 --> 00:01:16,860
lot of academic research also on this

00:01:14,340 --> 00:01:19,950
problem and so we are going to present

00:01:16,860 --> 00:01:21,869
you a little bit about this first of all

00:01:19,950 --> 00:01:24,869
we are going to talk about graph theory

00:01:21,869 --> 00:01:27,540
so what is a graph and the question

00:01:24,869 --> 00:01:30,960
could really be reversed what is not a

00:01:27,540 --> 00:01:34,229
graph because a graph is just a set of

00:01:30,960 --> 00:01:40,920
elements also called the nodes that are

00:01:34,229 --> 00:01:44,040
interconnected by links or edges and so

00:01:40,920 --> 00:01:47,369
really about any system can be seen as a

00:01:44,040 --> 00:01:51,420
graph because for any system we can just

00:01:47,369 --> 00:01:54,299
look at the basic the components and how

00:01:51,420 --> 00:01:56,430
they are interconnected here we had just

00:01:54,299 --> 00:01:58,860
two examples but many more can be

00:01:56,430 --> 00:02:03,630
thought of so a social network where

00:01:58,860 --> 00:02:05,310
each node is a person and the links are

00:02:03,630 --> 00:02:08,310
just acting the interconnection between

00:02:05,310 --> 00:02:11,250
between different different people and a

00:02:08,310 --> 00:02:15,059
transportation network so it's clear

00:02:11,250 --> 00:02:18,290
that just looking at the set of nodes or

00:02:15,059 --> 00:02:20,980
elements and their interconnections

00:02:18,290 --> 00:02:23,750
can see a lot of interesting

00:02:20,980 --> 00:02:27,560
characteristic of the system in this

00:02:23,750 --> 00:02:33,140
very basic very cute eyes the version of

00:02:27,560 --> 00:02:35,480
the of the of the problem and so several

00:02:33,140 --> 00:02:39,409
different use cases can be defined on

00:02:35,480 --> 00:02:43,010
graph theory we are just presenting some

00:02:39,409 --> 00:02:45,950
of them very shortly the first one well

00:02:43,010 --> 00:02:49,849
known finding the best route on a graph

00:02:45,950 --> 00:02:53,629
and we can think about it as using GPS

00:02:49,849 --> 00:02:55,700
GPS data but also finding paths on a

00:02:53,629 --> 00:02:58,569
social network for connecting different

00:02:55,700 --> 00:03:02,269
peoples and this is a use case a

00:02:58,569 --> 00:03:05,389
LinkedIn is using a lot for for finding

00:03:02,269 --> 00:03:09,379
the connection between within people

00:03:05,389 --> 00:03:12,319
spreading dynamics so if we want to

00:03:09,379 --> 00:03:14,870
maximize the spreading as in a viral

00:03:12,319 --> 00:03:17,569
marketing campaign or to minimize a

00:03:14,870 --> 00:03:19,849
spreading as in a vaccination campaign

00:03:17,569 --> 00:03:21,919
this is something we can study just

00:03:19,849 --> 00:03:25,250
looking at the graph structure of our

00:03:21,919 --> 00:03:29,120
system structure importance and their

00:03:25,250 --> 00:03:31,609
sending the most important nodes and the

00:03:29,120 --> 00:03:33,709
most famous example is a Google Pagerank

00:03:31,609 --> 00:03:37,370
that is interested in finding the most

00:03:33,709 --> 00:03:40,729
important pages so to propose a best

00:03:37,370 --> 00:03:44,329
best answer to our queries and Domino

00:03:40,729 --> 00:03:46,940
effects the what-if scenario that can

00:03:44,329 --> 00:03:50,780
help us design more stable and more

00:03:46,940 --> 00:03:53,840
robust system with by taking into

00:03:50,780 --> 00:03:58,040
account the possible effect of failures

00:03:53,840 --> 00:04:00,889
of some nodes or of attacks to to some

00:03:58,040 --> 00:04:03,169
of the nodes of the of the system but we

00:04:00,889 --> 00:04:07,010
are going to present another use case

00:04:03,169 --> 00:04:09,229
that is the communicate action so in

00:04:07,010 --> 00:04:11,389
this case you can see the kotor shift

00:04:09,229 --> 00:04:14,000
network and it's very clear that the

00:04:11,389 --> 00:04:16,549
structure of this graph is not at all

00:04:14,000 --> 00:04:19,220
random you can see there are strongly

00:04:16,549 --> 00:04:21,199
connected part we call them community

00:04:19,220 --> 00:04:24,650
it's not very well designed as the

00:04:21,199 --> 00:04:27,800
mathematical concepts but but it's

00:04:24,650 --> 00:04:32,390
really see - it's very easy to to see

00:04:27,800 --> 00:04:36,050
them and are these communities are quite

00:04:32,390 --> 00:04:40,120
are not so much connective between

00:04:36,050 --> 00:04:42,830
between each other and one can ask a

00:04:40,120 --> 00:04:46,340
series of questions about this problem

00:04:42,830 --> 00:04:49,520
and one of them for instance is where

00:04:46,340 --> 00:04:53,210
are the bridges that is there are some

00:04:49,520 --> 00:04:56,000
nodes that are much more important

00:04:53,210 --> 00:04:57,380
because R denotes enabling the

00:04:56,000 --> 00:05:00,080
communication between different

00:04:57,380 --> 00:05:02,540
components of this graph and so if we

00:05:00,080 --> 00:05:05,240
want to preserve the strata community

00:05:02,540 --> 00:05:07,730
structure of this this network for

00:05:05,240 --> 00:05:10,940
instance we have to protect this dots

00:05:07,730 --> 00:05:16,070
because are the ones enabling us to have

00:05:10,940 --> 00:05:20,530
a complan ik a unique graph and not

00:05:16,070 --> 00:05:20,530
having a different separated components

00:05:20,980 --> 00:05:26,900
if we want to build to build such

00:05:25,250 --> 00:05:29,690
communities there are two main

00:05:26,900 --> 00:05:34,670
approaches so the first the first of

00:05:29,690 --> 00:05:38,990
them is a top-down approach as it is we

00:05:34,670 --> 00:05:41,270
try and separate the different

00:05:38,990 --> 00:05:43,820
communities by cutting the bridges

00:05:41,270 --> 00:05:45,920
connecting them in this case for

00:05:43,820 --> 00:05:48,230
instance we are going to cut this link

00:05:45,920 --> 00:05:50,210
so to obtain two different groups of

00:05:48,230 --> 00:05:53,600
node that are going to be our

00:05:50,210 --> 00:05:55,970
communities the other approaches kind of

00:05:53,600 --> 00:05:58,940
the other way around that is we are

00:05:55,970 --> 00:06:01,630
going to gather the most densely

00:05:58,940 --> 00:06:05,570
connected part of the network for

00:06:01,630 --> 00:06:07,990
instance by having a random work on on

00:06:05,570 --> 00:06:10,850
our network and by studying the time

00:06:07,990 --> 00:06:13,640
around the working is spending on on

00:06:10,850 --> 00:06:16,450
each part of the of the network and so

00:06:13,640 --> 00:06:20,120
these two approaches originate different

00:06:16,450 --> 00:06:26,240
algorithmic an be used for solving this

00:06:20,120 --> 00:06:28,970
this problem if we think about the

00:06:26,240 --> 00:06:33,080
importance of node in this case also we

00:06:28,970 --> 00:06:37,190
have a a 2 2 way of thinking about this

00:06:33,080 --> 00:06:39,440
problem the first definition is a global

00:06:37,190 --> 00:06:42,470
importance in this case the red node on

00:06:39,440 --> 00:06:44,480
the left hand side it's the most

00:06:42,470 --> 00:06:46,339
important at the global level because

00:06:44,480 --> 00:06:50,479
it's the node that sits

00:06:46,339 --> 00:06:53,719
gathering the the graph and if we think

00:06:50,479 --> 00:06:55,939
about removing this red node the graph

00:06:53,719 --> 00:06:58,309
is going to collapse into different

00:06:55,939 --> 00:07:02,329
components and there are definitions

00:06:58,309 --> 00:07:05,599
that consider the local importance for

00:07:02,329 --> 00:07:08,389
instance the number of links another

00:07:05,599 --> 00:07:11,589
health and in this case the red node is

00:07:08,389 --> 00:07:15,139
quite far away from the other answer and

00:07:11,589 --> 00:07:17,449
it's the locally the most important

00:07:15,139 --> 00:07:20,419
because it's very well connected with

00:07:17,449 --> 00:07:22,759
with the others but from a global point

00:07:20,419 --> 00:07:26,269
of view is not that important

00:07:22,759 --> 00:07:27,769
so the two answer are really telling us

00:07:26,269 --> 00:07:31,129
something different about the system

00:07:27,769 --> 00:07:33,469
other alternatives well-known for

00:07:31,129 --> 00:07:35,949
instance Google page rank algorithm that

00:07:33,469 --> 00:07:39,529
is really aiming at finalize that

00:07:35,949 --> 00:07:48,349
finding this most important node in the

00:07:39,529 --> 00:07:49,279
network we saw two important concepts in

00:07:48,349 --> 00:07:51,529
graph theory

00:07:49,279 --> 00:07:55,459
so finding communities and Lud

00:07:51,529 --> 00:07:57,439
importance okay well if tomorrow you're

00:07:55,459 --> 00:07:59,959
curious about graph and you want to

00:07:57,439 --> 00:08:01,999
analyze your own Facebook or Twitter

00:07:59,959 --> 00:08:05,089
dress you want to know okay

00:08:01,999 --> 00:08:08,209
which tools can I use so it depends on

00:08:05,089 --> 00:08:10,429
the amount of data you have so if you

00:08:08,209 --> 00:08:13,909
are in a small data framework you can

00:08:10,429 --> 00:08:16,309
use some nice analytical libraries so

00:08:13,909 --> 00:08:18,439
for instance Network kicks it's a pure

00:08:16,309 --> 00:08:21,289
Python libraries where you can do a lot

00:08:18,439 --> 00:08:23,659
of things but not very performing you

00:08:21,289 --> 00:08:27,019
can use a dress tool so it's written in

00:08:23,659 --> 00:08:29,809
C++ so it'll be better but it can also

00:08:27,019 --> 00:08:31,369
be used with Python and personally I

00:08:29,809 --> 00:08:34,129
would recommend the eye graph library

00:08:31,369 --> 00:08:38,059
it's written in C and you can use it

00:08:34,129 --> 00:08:41,719
both is the C library or with Python or

00:08:38,059 --> 00:08:44,649
even our and it's quite complete

00:08:41,719 --> 00:08:47,209
regarding NURBS importance measures and

00:08:44,649 --> 00:08:49,879
community detection algorithm because we

00:08:47,209 --> 00:08:51,949
just presented the two main approaches

00:08:49,879 --> 00:08:54,379
but they are actually plenty of

00:08:51,949 --> 00:08:56,379
algorithms that you can use and don't

00:08:54,379 --> 00:08:58,990
hesitate if you have questions so we can

00:08:56,379 --> 00:09:02,260
go a little bit further

00:08:58,990 --> 00:09:05,680
okay if you are using spark there is

00:09:02,260 --> 00:09:07,720
also a spark library graphics it is

00:09:05,680 --> 00:09:12,280
quite limited regarding the number of

00:09:07,720 --> 00:09:15,070
algorithmic are into but you have the

00:09:12,280 --> 00:09:16,840
page rank you have one a community

00:09:15,070 --> 00:09:19,330
detection algorithm the level

00:09:16,840 --> 00:09:21,550
propagation you have also some matrix

00:09:19,330 --> 00:09:24,750
like the number of triangles the number

00:09:21,550 --> 00:09:26,650
of connected components in your graph so

00:09:24,750 --> 00:09:29,320
currently it's quite limited but

00:09:26,650 --> 00:09:32,770
hopefully in the future and some new

00:09:29,320 --> 00:09:35,020
algorithm will be added and suddenly you

00:09:32,770 --> 00:09:38,770
might also consider using the graphic

00:09:35,020 --> 00:09:43,360
database so neo4j is kind of the current

00:09:38,770 --> 00:09:46,690
reference and extremely good for signing

00:09:43,360 --> 00:09:49,600
the shortest path and computing the

00:09:46,690 --> 00:09:51,820
degree of the node and that it really

00:09:49,600 --> 00:09:53,830
really depend on the use case you have

00:09:51,820 --> 00:09:56,470
for instance if you just want to do some

00:09:53,830 --> 00:10:00,070
select like select the nodes with a

00:09:56,470 --> 00:10:03,070
given degree or with specific properties

00:10:00,070 --> 00:10:05,080
it might not be the best option but if

00:10:03,070 --> 00:10:07,900
you have really assigning the best fruit

00:10:05,080 --> 00:10:11,760
use case it's really something that you

00:10:07,900 --> 00:10:15,040
should consider okay and now we have a

00:10:11,760 --> 00:10:17,500
small G more time and using LinkedIn

00:10:15,040 --> 00:10:20,170
data and the eye graph library so we

00:10:17,500 --> 00:10:22,600
will show you a bit how you can load

00:10:20,170 --> 00:10:25,780
some graph data make some summary

00:10:22,600 --> 00:10:28,150
statistics find communities and compute

00:10:25,780 --> 00:10:31,110
a few metrics that are interesting to

00:10:28,150 --> 00:10:31,110
analyze network

00:10:40,089 --> 00:10:53,209
okay so first step I load my graph so

00:10:48,619 --> 00:10:55,910
it's a LinkedIn Network and graph of a

00:10:53,209 --> 00:10:58,369
person you read it in a standard graph

00:10:55,910 --> 00:11:00,920
format so here a graph ml with the

00:10:58,369 --> 00:11:03,410
angriff library and then you can do some

00:11:00,920 --> 00:11:05,809
summary statistics so for instance the

00:11:03,410 --> 00:11:09,019
number of nodes the number of links and

00:11:05,809 --> 00:11:11,600
the node attributes you have because in

00:11:09,019 --> 00:11:13,610
a in a graph format you have of course

00:11:11,600 --> 00:11:17,209
the nodes and the links but you can also

00:11:13,610 --> 00:11:19,879
have a node and links attributes so for

00:11:17,209 --> 00:11:22,610
instance the name of the person or with

00:11:19,879 --> 00:11:38,420
all the additional information you can

00:11:22,610 --> 00:11:40,279
have three-seater okay Becker hey okay

00:11:38,420 --> 00:11:45,800
so here I have some information about

00:11:40,279 --> 00:11:48,920
one node so injuries and data we have

00:11:45,800 --> 00:11:51,470
the headline of the person it's highly

00:11:48,920 --> 00:11:54,050
the country where this person come from

00:11:51,470 --> 00:11:56,209
its city and its industry so but it is a

00:11:54,050 --> 00:12:01,939
standard LinkedIn profile information

00:11:56,209 --> 00:12:05,899
you have you can do a nice cut so this

00:12:01,939 --> 00:12:08,720
is a network okay so this is really a

00:12:05,899 --> 00:12:11,509
real network so it seems to have a kind

00:12:08,720 --> 00:12:14,089
of structure like something here

00:12:11,509 --> 00:12:16,730
something here and they could be like

00:12:14,089 --> 00:12:22,579
some groups and some interesting things

00:12:16,730 --> 00:12:24,920
to find the density for instance is an

00:12:22,579 --> 00:12:27,529
interesting metric so the density is

00:12:24,920 --> 00:12:30,019
basically defined by the number of links

00:12:27,529 --> 00:12:33,589
you have in your breath among the number

00:12:30,019 --> 00:12:35,779
of possible links so if every node is

00:12:33,589 --> 00:12:37,970
connected to every node it's just one

00:12:35,779 --> 00:12:40,790
hundred percent and here it's seven

00:12:37,970 --> 00:12:44,059
percent and as we mentioned finding

00:12:40,790 --> 00:12:47,509
communities is finding the most densely

00:12:44,059 --> 00:12:49,699
connected subgroups so fortunately if

00:12:47,509 --> 00:12:52,400
you find a community the density should

00:12:49,699 --> 00:12:58,820
increase from 7% to well

00:12:52,400 --> 00:13:02,720
something larger than 7% angrist allows

00:12:58,820 --> 00:13:05,660
you to compute many centrality matrix so

00:13:02,720 --> 00:13:08,450
node in vertex measures so here we just

00:13:05,660 --> 00:13:11,450
computed the degree and the page rank so

00:13:08,450 --> 00:13:12,589
the number of direct neighbors and the

00:13:11,450 --> 00:13:16,760
the Google Pagerank

00:13:12,589 --> 00:13:19,430
and in both cases the the node with the

00:13:16,760 --> 00:13:22,940
maximum importance is actually a

00:13:19,430 --> 00:13:24,140
think-tank and why is something like

00:13:22,940 --> 00:13:26,390
that it makes sense

00:13:24,140 --> 00:13:29,990
medically this think tank is connected

00:13:26,390 --> 00:13:32,360
to many other nodes in this graph that's

00:13:29,990 --> 00:13:34,670
why it appears to be kind of important

00:13:32,360 --> 00:13:37,600
in this class because it is connected to

00:13:34,670 --> 00:13:42,250
many people so many people need to and

00:13:37,600 --> 00:13:42,250
leave this node to extend information

00:13:45,610 --> 00:13:50,570
now we want to do some community

00:13:48,320 --> 00:13:52,820
detection and put nice colors and in

00:13:50,570 --> 00:13:55,520
these graphs so there are many algorithm

00:13:52,820 --> 00:13:58,670
that you can use we use a wealthtrack so

00:13:55,520 --> 00:14:01,250
it's based on a random walk and it uses

00:13:58,670 --> 00:14:03,170
only the network structure so it's not

00:14:01,250 --> 00:14:05,630
using the information that okay this

00:14:03,170 --> 00:14:07,459
person come from as unfold this person

00:14:05,630 --> 00:14:10,760
is coming from Paris or whatever it's

00:14:07,459 --> 00:14:12,800
just the links and that they are in this

00:14:10,760 --> 00:14:16,459
graph but we could have several

00:14:12,800 --> 00:14:22,820
approaches okay so we run an our

00:14:16,459 --> 00:14:27,529
algorithm and find some communities so

00:14:22,820 --> 00:14:30,020
what can we see first it seems to make

00:14:27,529 --> 00:14:33,890
sense kind of well there is a group here

00:14:30,020 --> 00:14:37,070
another here another here so it seems

00:14:33,890 --> 00:14:39,620
quite ok we can also see that some

00:14:37,070 --> 00:14:42,320
person seems to be bridges okay the

00:14:39,620 --> 00:14:44,750
colors are not great but this person

00:14:42,320 --> 00:14:46,310
here is the bridge between these

00:14:44,750 --> 00:14:48,680
communities this committee and this

00:14:46,310 --> 00:14:49,160
committee and if you cut this link and

00:14:48,680 --> 00:14:51,970
this link

00:14:49,160 --> 00:14:59,360
well this communities cannot communicate

00:14:51,970 --> 00:15:02,300
anymore so now we want to analyze a bit

00:14:59,360 --> 00:15:05,120
our communities because of course if you

00:15:02,300 --> 00:15:06,110
know what are the real communities it's

00:15:05,120 --> 00:15:08,839
easy

00:15:06,110 --> 00:15:11,839
you compare what you found with what the

00:15:08,839 --> 00:15:15,170
reality is but if you don't well you

00:15:11,839 --> 00:15:18,920
have to search for matrix and search if

00:15:15,170 --> 00:15:21,050
these groups make sense so here we can

00:15:18,920 --> 00:15:23,180
look at the node attributes so are these

00:15:21,050 --> 00:15:27,279
people coming from the same city are

00:15:23,180 --> 00:15:32,329
they having a similar job and so on

00:15:27,279 --> 00:15:37,279
here we first unlike the pink superevil

00:15:32,329 --> 00:15:40,930
group and with the information we have

00:15:37,279 --> 00:15:42,079
the industry a country city and headline

00:15:40,930 --> 00:15:44,899
okay

00:15:42,079 --> 00:15:46,550
so among this seven person well most of

00:15:44,899 --> 00:15:49,930
them are coming from the financial

00:15:46,550 --> 00:15:54,380
sector most of them are German in

00:15:49,930 --> 00:15:56,240
Frankfurt and they must have been all

00:15:54,380 --> 00:15:58,130
working currently at European data

00:15:56,240 --> 00:16:02,480
warehouse very society bathing in five

00:15:58,130 --> 00:16:05,750
foot so with that any prior knowledge of

00:16:02,480 --> 00:16:08,899
these properties our algorithm actually

00:16:05,750 --> 00:16:13,880
found a community of colleagues in a

00:16:08,899 --> 00:16:18,610
functional company and control now if we

00:16:13,880 --> 00:16:24,890
look at the red community a bigger one

00:16:18,610 --> 00:16:27,160
and make a sub graph we can see the

00:16:24,890 --> 00:16:30,890
problem thing okay so we have a

00:16:27,160 --> 00:16:31,579
community and but there is something a

00:16:30,890 --> 00:16:33,920
bit weird

00:16:31,579 --> 00:16:38,120
here it's kind of more densely connected

00:16:33,920 --> 00:16:41,269
than here so we wonder if it really is a

00:16:38,120 --> 00:16:44,180
good structure of if you still and need

00:16:41,269 --> 00:16:49,640
to do to try some algorithm to find a

00:16:44,180 --> 00:16:54,860
subgroups just to remark the density in

00:16:49,640 --> 00:17:00,170
this community is a 32% so way larger

00:16:54,860 --> 00:17:04,429
than 7% we just used our algorithm again

00:17:00,170 --> 00:17:06,740
and identifies two subgroups first one

00:17:04,429 --> 00:17:10,339
here and a second one here and some

00:17:06,740 --> 00:17:14,360
isolated nuts all a grain of limit so we

00:17:10,339 --> 00:17:20,649
can discuss that later and if we analyze

00:17:14,360 --> 00:17:25,370
the blue one and look at the headlines

00:17:20,649 --> 00:17:29,269
actually and we just found the pot meet

00:17:25,370 --> 00:17:31,399
regroup and all these persons are on

00:17:29,269 --> 00:17:33,919
working I company tree and this group is

00:17:31,399 --> 00:17:36,980
actually a group of random recruiters

00:17:33,919 --> 00:17:39,470
and HR on LinkedIn that are trying to

00:17:36,980 --> 00:17:45,100
connect with the prison frame completely

00:17:39,470 --> 00:17:50,960
and if we zoom again on the poetry group

00:17:45,100 --> 00:17:53,179
we now have a density of a 63% so many

00:17:50,960 --> 00:17:57,350
many many links among the possible links

00:17:53,179 --> 00:17:59,450
are created so that was just that that's

00:17:57,350 --> 00:18:02,419
it so it was an introduction to graph

00:17:59,450 --> 00:18:04,880
theory and what you can do okay so it's

00:18:02,419 --> 00:18:06,620
funny to find communities but of course

00:18:04,880 --> 00:18:09,320
you must have a use case and often it

00:18:06,620 --> 00:18:11,659
can be for a fraud detection or H or a

00:18:09,320 --> 00:18:14,000
narrative or a different thing so that

00:18:11,659 --> 00:18:22,039
if you have any questions we're quite

00:18:14,000 --> 00:18:24,110
happy to Center so thanks totally

00:18:22,039 --> 00:18:29,260
allowed based on so do you have any

00:18:24,110 --> 00:18:29,260
questions about it

00:18:29,289 --> 00:18:32,769
any questions

00:18:40,690 --> 00:18:46,210
really nice demo very impressive I was

00:18:43,180 --> 00:18:48,160
wondering let's say I need to process

00:18:46,210 --> 00:18:50,580
all of LinkedIn data can you speak a bit

00:18:48,160 --> 00:18:54,520
louder yes

00:18:50,580 --> 00:18:56,550
so I suppose it's a subset of LinkedIn

00:18:54,520 --> 00:18:59,800
what you showed us right now it's a

00:18:56,550 --> 00:19:01,840
network of one person in this case of me

00:18:59,800 --> 00:19:04,300
so it's my complete same thing all right

00:19:01,840 --> 00:19:07,330
so let's say I need to calculate like

00:19:04,300 --> 00:19:08,820
all of linking LinkedIn data or like

00:19:07,330 --> 00:19:11,670
something really really big can you

00:19:08,820 --> 00:19:17,970
explain like a strategy of how we can go

00:19:11,670 --> 00:19:17,970
from you know like CSV to to this

00:19:18,390 --> 00:19:25,780
so like can we use usually API your

00:19:23,020 --> 00:19:28,170
question usually a data doesn't come as

00:19:25,780 --> 00:19:30,850
a connected graph it comes as like

00:19:28,170 --> 00:19:33,010
wolves in a file or like events or

00:19:30,850 --> 00:19:37,210
something like that so when you talk

00:19:33,010 --> 00:19:40,660
about the pipeline of JSON to this like

00:19:37,210 --> 00:19:43,060
that so in this case I use a website and

00:19:40,660 --> 00:19:46,270
the celeb I can write it you know and

00:19:43,060 --> 00:19:48,460
basically it provides a list of notes so

00:19:46,270 --> 00:19:51,670
like on the Gryphon and it provides a

00:19:48,460 --> 00:19:55,660
matrix with one if the two persons are

00:19:51,670 --> 00:19:57,430
connected and zero else so this is the

00:19:55,660 --> 00:20:00,940
so called address and symmetries and

00:19:57,430 --> 00:20:03,520
it's another way of hearing a graph so

00:20:00,940 --> 00:20:06,310
you can have directly a graph in a graph

00:20:03,520 --> 00:20:08,260
format or it can also be just a matrix

00:20:06,310 --> 00:20:11,410
so basically you have a list of nodes

00:20:08,260 --> 00:20:14,320
and a matrix and then you can easily

00:20:11,410 --> 00:20:17,080
with a graph well okay this is my list

00:20:14,320 --> 00:20:20,800
of ID's and this is my address and some

00:20:17,080 --> 00:20:22,690
matrix so don't have a graph if I met at

00:20:20,800 --> 00:20:26,440
just something if we are thinking about

00:20:22,690 --> 00:20:29,530
very big graph having the matter n by n

00:20:26,440 --> 00:20:32,380
matrix with all the the links or the

00:20:29,530 --> 00:20:35,110
absence of links is typically not a good

00:20:32,380 --> 00:20:38,410
idea because typically the graphs are

00:20:35,110 --> 00:20:41,170
quite sparse this is a a lot of the

00:20:38,410 --> 00:20:43,150
links are missing and so more efficient

00:20:41,170 --> 00:20:46,240
way of representing the the graph is

00:20:43,150 --> 00:20:49,840
just by by telling the list of all the

00:20:46,240 --> 00:20:53,020
links existing and typically for bigger

00:20:49,840 --> 00:20:55,120
graphs is it's the only way of

00:20:53,020 --> 00:20:57,760
with with the representation of a

00:20:55,120 --> 00:20:59,680
graphic is just listing the couple of

00:20:57,760 --> 00:21:01,330
notes these are the direct actually

00:20:59,680 --> 00:21:04,360
connected because otherwise you are

00:21:01,330 --> 00:21:08,710
obtaining a very very big matrix where

00:21:04,360 --> 00:21:12,280
the 99.9% of the of the elements are 0

00:21:08,710 --> 00:21:21,310
so it's not that useful hang out on

00:21:12,280 --> 00:21:24,940
questions no I'm curious does this work

00:21:21,310 --> 00:21:27,870
also undirected graphs what the direct

00:21:24,940 --> 00:21:32,740
what meaning can we give to the arrows

00:21:27,870 --> 00:21:36,100
when clustering well I mean I mean there

00:21:32,740 --> 00:21:38,110
is there is a two-part answer that is

00:21:36,100 --> 00:21:41,140
the first thing you can do when you have

00:21:38,110 --> 00:21:44,170
a directed graph is to look at it as an

00:21:41,140 --> 00:21:45,880
undirected one that is just neglecting

00:21:44,170 --> 00:21:48,880
this information this is the easy

00:21:45,880 --> 00:21:51,870
solution on the other hand if you really

00:21:48,880 --> 00:21:55,360
want to exploit this information of the

00:21:51,870 --> 00:21:57,670
direction of the links that is the case

00:21:55,360 --> 00:22:01,690
if you are nicing Twitter for instance

00:21:57,670 --> 00:22:03,580
of a social network it is a not $1 and

00:22:01,690 --> 00:22:07,840
directed so it's something you want to

00:22:03,580 --> 00:22:09,820
keep in your analysis it's more

00:22:07,840 --> 00:22:12,850
difficult typically you have to split

00:22:09,820 --> 00:22:15,400
your problem into incoming and outgoing

00:22:12,850 --> 00:22:17,830
links and so you're going for instance

00:22:15,400 --> 00:22:20,020
to obtain two different kind of

00:22:17,830 --> 00:22:22,750
communities that represents the

00:22:20,020 --> 00:22:25,330
communities of incoming links and the

00:22:22,750 --> 00:22:27,910
communities of outgoing links and then

00:22:25,330 --> 00:22:30,930
it's up to you really to find a good

00:22:27,910 --> 00:22:33,280
compromise between the two so - so to

00:22:30,930 --> 00:22:35,590
understand something more about the

00:22:33,280 --> 00:22:38,320
structure of the graph but if there is

00:22:35,590 --> 00:22:41,380
no common solution it's it kind of an

00:22:38,320 --> 00:22:43,600
art to find the correct definitions to

00:22:41,380 --> 00:22:46,450
be able and extract some useful

00:22:43,600 --> 00:22:47,830
information and just a remark and so

00:22:46,450 --> 00:22:50,740
most of the community detection

00:22:47,830 --> 00:22:53,020
algorithms are doesn't support a

00:22:50,740 --> 00:22:54,970
directed graph in the case for the wall

00:22:53,020 --> 00:22:57,730
trap but you have some algorithms that

00:22:54,970 --> 00:23:02,650
allow and directly dress for instance

00:22:57,730 --> 00:23:04,720
alphabet Internet and yeah there is an

00:23:02,650 --> 00:23:07,070
algorithm to find communities with the

00:23:04,720 --> 00:23:10,490
directed links that the meaning changes

00:23:07,070 --> 00:23:13,669
this sothanks died now we have a coffee

00:23:10,490 --> 00:23:15,570
break and we come back help us for so

00:23:13,669 --> 00:23:20,150
enjoy coffee

00:23:15,570 --> 00:23:20,150

YouTube URL: https://www.youtube.com/watch?v=93RWTGt6WiU


