Title: #bbuzz 17: Stefanie Janine Stölting - One Database to Rule 'em All
Publication date: 2017-06-15
Playlist: Berlin Buzzwords 2017
Description: 
	Instead of using ETL Tools, which consume tons of memory on their own system, you will learn how to do ETL jobs directly in and with a database: PostgreSQL.

PostgreSQL Management of External Data (SQL/MED) is also known as Foreign Data Wrapper (FDW). With FDW, there is nearly no limit of external data, that you could use directly inside a PostgreSQL database.

This talk will show you how to use them with examples accessing several data sources.

Read more:
https://2017.berlinbuzzwords.de/17/session/one-database-rule-em-all

About Stefanie Janine Stölting:
https://2017.berlinbuzzwords.de/users/stefanie-janine-stolting

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:05,940 --> 00:00:14,050
so thanks for having me I'm a freelance

00:00:10,600 --> 00:00:17,410
developer doing stuff on top of

00:00:14,050 --> 00:00:19,150
databases most of the time with Postgres

00:00:17,410 --> 00:00:21,730
because I like it much more than all the

00:00:19,150 --> 00:00:24,480
other ones and because it can do a lot

00:00:21,730 --> 00:00:26,680
of pretty crazy things with toasters and

00:00:24,480 --> 00:00:30,700
Postgres does also have an amazing

00:00:26,680 --> 00:00:35,739
community so what we are talking here

00:00:30,700 --> 00:00:39,850
about is something that is post with SQL

00:00:35,739 --> 00:00:42,850
Amed meed is not something shortcuts for

00:00:39,850 --> 00:00:46,320
medical it's for management of external

00:00:42,850 --> 00:00:51,700
data and management of external data is

00:00:46,320 --> 00:00:58,990
insect and SQL standard so that is he

00:00:51,700 --> 00:01:02,740
address where it can be found and there

00:00:58,990 --> 00:01:05,229
was the first version in 2008 and it

00:01:02,740 --> 00:01:07,119
took 8 years to come up with a new

00:01:05,229 --> 00:01:09,429
version

00:01:07,119 --> 00:01:11,640
there have been come slightly some

00:01:09,429 --> 00:01:15,090
slight changes insects but not that much

00:01:11,640 --> 00:01:20,229
but what was enough to make another

00:01:15,090 --> 00:01:22,119
version if you like to go through he

00:01:20,229 --> 00:01:24,249
stunned us and would like to have some

00:01:22,119 --> 00:01:30,850
fun not understanding things I would

00:01:24,249 --> 00:01:35,139
advise you to have a look at it so this

00:01:30,850 --> 00:01:38,380
is supported by for example db2 IBM came

00:01:35,139 --> 00:01:42,219
up with this implementation of the

00:01:38,380 --> 00:01:46,679
standard itself so the idea was glued by

00:01:42,219 --> 00:01:50,350
IBM and they implemented that in db2 and

00:01:46,679 --> 00:01:54,969
there was also sort of implementation in

00:01:50,350 --> 00:01:56,859
moriah DB not in my sequel and this is

00:01:54,969 --> 00:01:59,439
done was the concept of a storage engine

00:01:56,859 --> 00:02:03,549
but it's really far away from the

00:01:59,439 --> 00:02:06,670
standard it does work somehow or not but

00:02:03,549 --> 00:02:10,330
it's not implemented in the standard way

00:02:06,670 --> 00:02:14,800
in there are other databases who can

00:02:10,330 --> 00:02:18,750
handle sort of external data Oracle and

00:02:14,800 --> 00:02:22,790
SQL Server can handle here's V files

00:02:18,750 --> 00:02:27,450
as external data but that's it and

00:02:22,790 --> 00:02:30,930
polkas gas handle a lot of disgust they

00:02:27,450 --> 00:02:36,209
made an implementation that is named for

00:02:30,930 --> 00:02:40,800
indata Baba FTW is the shortcut that how

00:02:36,209 --> 00:02:42,720
it's named in pocus project and there

00:02:40,800 --> 00:02:45,780
are different different implementation

00:02:42,720 --> 00:02:48,450
read only and greet and write so it does

00:02:45,780 --> 00:02:53,370
mean that you can write into a foreign

00:02:48,450 --> 00:02:56,250
data source so the installation is done

00:02:53,370 --> 00:02:57,959
as protocol extensions podcast supports

00:02:56,250 --> 00:03:00,480
a lot of extensions some of them you

00:02:57,959 --> 00:03:04,380
have to compile on your own some of them

00:03:00,480 --> 00:03:06,530
can be installed but it's like example

00:03:04,380 --> 00:03:11,640
of available for another weapons are

00:03:06,530 --> 00:03:14,820
Oracle that is available through PV exam

00:03:11,640 --> 00:03:17,850
if it can be installed right as a

00:03:14,820 --> 00:03:19,040
package and then expediate and install

00:03:17,850 --> 00:03:22,650
cetera

00:03:19,040 --> 00:03:25,769
both Oracle is read and write does mean

00:03:22,650 --> 00:03:27,900
not only are able to read at áformer

00:03:25,769 --> 00:03:30,510
Oracle database you're also able to

00:03:27,900 --> 00:03:33,360
write back to an Oracle database which

00:03:30,510 --> 00:03:35,910
is pretty funny I did that several times

00:03:33,360 --> 00:03:40,620
because Oracle didn't have the features

00:03:35,910 --> 00:03:43,530
are needed or was simply too slow ms SQL

00:03:40,620 --> 00:03:46,280
server and sideways they are still the

00:03:43,530 --> 00:03:49,650
same in this environment because

00:03:46,280 --> 00:03:52,019
Microsoft sequel server is originally

00:03:49,650 --> 00:03:55,769
clone all see sideways adaptive server

00:03:52,019 --> 00:03:57,959
anywhere developed is cleared up in

00:03:55,769 --> 00:04:00,090
version 6 or 5 that was the first

00:03:57,959 --> 00:04:03,530
versions there microsoft invented their

00:04:00,090 --> 00:04:03,530
first own ducks

00:04:03,989 --> 00:04:11,250
there is also an extension for MongoDB

00:04:07,940 --> 00:04:13,440
so that you can read MongoDB it's not

00:04:11,250 --> 00:04:16,530
right

00:04:13,440 --> 00:04:21,830
we have Moriah DB and my sequel

00:04:16,530 --> 00:04:25,800
available both are read and write

00:04:21,830 --> 00:04:29,250
there's also SQLite available so it's

00:04:25,800 --> 00:04:31,260
available on get up you need to get it

00:04:29,250 --> 00:04:33,890
on on your computer and co-pilot and

00:04:31,260 --> 00:04:33,890
then you are ready

00:04:34,280 --> 00:04:39,599
this one is read only so far because

00:04:37,189 --> 00:04:42,979
nobody had to need to write into

00:04:39,599 --> 00:04:46,259
frequently toward Amanda classic teacher

00:04:42,979 --> 00:04:48,780
their volatile and read only for Hadoop

00:04:46,259 --> 00:04:51,860
files produced them so it doesn't mean

00:04:48,780 --> 00:04:55,349
you have access to and Hadoop cluster

00:04:51,860 --> 00:04:58,680
with standard SQL commands from inside

00:04:55,349 --> 00:05:02,789
the process the query goes down from

00:04:58,680 --> 00:05:07,770
post goes directly to the external data

00:05:02,789 --> 00:05:09,659
source there is being there's also more

00:05:07,770 --> 00:05:12,599
thing there's node we see things so you

00:05:09,659 --> 00:05:14,069
can use ODBC as a connector which means

00:05:12,599 --> 00:05:16,740
there's probably a lot of things

00:05:14,069 --> 00:05:20,610
available to already be seen there's

00:05:16,740 --> 00:05:24,319
also JDBC which I don't mention here

00:05:20,610 --> 00:05:28,669
that does also work so whatever you like

00:05:24,319 --> 00:05:31,199
data is available but that's not all

00:05:28,669 --> 00:05:34,529
there is more there are some special

00:05:31,199 --> 00:05:38,879
point out of reputable the first one is

00:05:34,529 --> 00:05:41,759
file storing data wrapper for everybody

00:05:38,879 --> 00:05:46,589
who knows copy from posters the copy

00:05:41,759 --> 00:05:49,830
command has the same parameter as this

00:05:46,589 --> 00:05:54,000
file for another Ripa does mean you can

00:05:49,830 --> 00:05:56,699
include an PSD file and define what the

00:05:54,000 --> 00:05:58,830
settings are does it have an header what

00:05:56,699 --> 00:06:03,210
is the column separate our text

00:05:58,830 --> 00:06:06,629
separators and so on then there was a

00:06:03,210 --> 00:06:09,960
post code for a wrapper that helps you

00:06:06,629 --> 00:06:11,849
to access other postage databases so

00:06:09,960 --> 00:06:14,729
usually you have the content and post

00:06:11,849 --> 00:06:17,779
codes that Postgres has databases where

00:06:14,729 --> 00:06:20,520
for example my secret my really be

00:06:17,779 --> 00:06:23,729
called things databases that our insect

00:06:20,520 --> 00:06:26,129
in Postgres schemas that's reason why

00:06:23,729 --> 00:06:28,650
you can access in my sickle and variety

00:06:26,129 --> 00:06:31,529
be a different database from inside

00:06:28,650 --> 00:06:34,500
another database in Postgres that's not

00:06:31,529 --> 00:06:37,500
possible directly because databases are

00:06:34,500 --> 00:06:40,529
completely separated but for this you

00:06:37,500 --> 00:06:42,360
can use this focus on data wrapper to

00:06:40,529 --> 00:06:43,979
access every other database on your

00:06:42,360 --> 00:06:45,960
current class car but it's not limited

00:06:43,979 --> 00:06:48,090
to that you can also come

00:06:45,960 --> 00:06:50,789
next two other databases other posters

00:06:48,090 --> 00:06:52,680
clusters and it can even be done through

00:06:50,789 --> 00:06:58,020
several versions you can mix up versions

00:06:52,680 --> 00:07:00,000
and posters and run the Cleary's there

00:06:58,020 --> 00:07:02,160
is one thing one extensions that might

00:07:00,000 --> 00:07:05,130
come in handy that is a foreign cable

00:07:02,160 --> 00:07:07,410
exposure that one is a very special kind

00:07:05,130 --> 00:07:10,380
of thing because it's built for bi tools

00:07:07,410 --> 00:07:13,889
because several BI tools are not able to

00:07:10,380 --> 00:07:17,009
access foreign tables and for them this

00:07:13,889 --> 00:07:23,340
foreign table exposure publish them to

00:07:17,009 --> 00:07:25,800
them as a cable so it's just like making

00:07:23,340 --> 00:07:29,419
a match up of something so that coverage

00:07:25,800 --> 00:07:29,419
can translate it into their own things

00:07:29,539 --> 00:07:34,699
then there is the other chance is to

00:07:32,190 --> 00:07:37,919
write your own for another River

00:07:34,699 --> 00:07:41,789
Jellison library called boutique on for

00:07:37,919 --> 00:07:43,710
if used Python and was that you can

00:07:41,789 --> 00:07:45,569
really write everything you need to

00:07:43,710 --> 00:07:48,090
access so everything that is accessible

00:07:45,569 --> 00:07:51,690
from Python would be accessible from

00:07:48,090 --> 00:07:54,720
posters Budokan already has two

00:07:51,690 --> 00:07:59,729
implementations included that does mean

00:07:54,720 --> 00:08:02,099
you can use IMAP folders so you simply

00:07:59,729 --> 00:08:05,580
can query IMAP folders with SQL commands

00:08:02,099 --> 00:08:07,469
and have regular expressions inside your

00:08:05,580 --> 00:08:10,590
SQL command and just see what you find

00:08:07,469 --> 00:08:13,800
and drive that to every other data that

00:08:10,590 --> 00:08:17,360
is available inside the database it does

00:08:13,800 --> 00:08:20,849
also handle HTML so you can even get

00:08:17,360 --> 00:08:24,389
HTML sources and query them with SQL

00:08:20,849 --> 00:08:28,169
that ones out of the box that does also

00:08:24,389 --> 00:08:31,169
include at home and our set sheets so we

00:08:28,169 --> 00:08:35,729
can query them with a square I will show

00:08:31,169 --> 00:08:39,450
you later how this does work in this

00:08:35,729 --> 00:08:42,349
example I will use the database that is

00:08:39,450 --> 00:08:44,870
public available that 16 of database and

00:08:42,349 --> 00:08:50,610
I use data in

00:08:44,870 --> 00:08:52,920
postcards MySQL CSV and SQLite to be

00:08:50,610 --> 00:08:54,839
honest in my square is not MySQL it's a

00:08:52,920 --> 00:08:57,379
variety be on my computer here

00:08:54,839 --> 00:09:02,239
everything is running local so

00:08:57,379 --> 00:09:04,699
except RSS 6 the Chinook table is the

00:09:02,239 --> 00:09:09,849
Bulge music stuff so these are the

00:09:04,699 --> 00:09:11,479
tables that are in there so I won't use

00:09:09,849 --> 00:09:14,259
every table

00:09:11,479 --> 00:09:17,029
I want you the you see at this table and

00:09:14,259 --> 00:09:19,999
I will use the album so that you can see

00:09:17,029 --> 00:09:21,829
some islands of notches and tracks to

00:09:19,999 --> 00:09:23,539
see which tracks are in an album that

00:09:21,829 --> 00:09:26,869
belongs to an artist over sembalun

00:09:23,539 --> 00:09:32,269
artist and we can also see what kind of

00:09:26,869 --> 00:09:34,579
music is on this album and yes this is

00:09:32,269 --> 00:09:36,679
just that's not something I would advise

00:09:34,579 --> 00:09:39,019
you to to adjust a showcase to show you

00:09:36,679 --> 00:09:43,609
what is possible was Postgres and for

00:09:39,019 --> 00:09:47,149
another rappers so what I will use

00:09:43,609 --> 00:09:50,089
during my talk is something named common

00:09:47,149 --> 00:09:53,299
table expressions also known as with

00:09:50,089 --> 00:09:55,039
statements who does not know what common

00:09:53,299 --> 00:10:00,319
table expressions out please raise your

00:09:55,039 --> 00:10:03,739
hand okay I explained it that is an

00:10:00,319 --> 00:10:08,809
example that is it's that simply works

00:10:03,739 --> 00:10:12,009
this which is with that indicates that

00:10:08,809 --> 00:10:15,709
there is an statements that will be

00:10:12,009 --> 00:10:18,199
passed and you can then afterward

00:10:15,709 --> 00:10:21,019
collected data outside this bracket so

00:10:18,199 --> 00:10:24,889
with recursive because of is something

00:10:21,019 --> 00:10:27,289
that you can have for each with SQL

00:10:24,889 --> 00:10:31,639
which is funny but it does work

00:10:27,289 --> 00:10:33,799
and you name it t-then great over under

00:10:31,639 --> 00:10:36,199
that name and then it's yes and then it

00:10:33,799 --> 00:10:42,139
comes in brackets and then you can do

00:10:36,199 --> 00:10:46,220
something and then it returns some data

00:10:42,139 --> 00:10:48,829
that you are able to just do for the

00:10:46,220 --> 00:10:53,779
standard select statement so that refers

00:10:48,829 --> 00:10:58,009
to that key up there and it's simple it

00:10:53,779 --> 00:11:01,759
has results because it's everything that

00:10:58,009 --> 00:11:06,779
comes here 100 columns minimum maximum

00:11:01,759 --> 00:11:10,449
and the counter on top of it so

00:11:06,779 --> 00:11:13,779
the fun fact is that common table

00:11:10,449 --> 00:11:16,929
expressions are sometimes very handy to

00:11:13,779 --> 00:11:20,170
separate or use several SQL statements

00:11:16,929 --> 00:11:24,939
in one statement at the end it's a sort

00:11:20,170 --> 00:11:26,679
of use running in user environment so

00:11:24,939 --> 00:11:30,009
the user doesn't have to create it on

00:11:26,679 --> 00:11:32,980
you that is handled behind the scene by

00:11:30,009 --> 00:11:38,860
Postgres with this command table

00:11:32,980 --> 00:11:44,079
expressions so let's take a look at some

00:11:38,860 --> 00:11:47,429
data stuffs so we start with creating an

00:11:44,079 --> 00:11:52,869
extension in the current database for

00:11:47,429 --> 00:11:55,119
SQLite so that is simple how it is done

00:11:52,869 --> 00:11:59,139
you first have to create the extension

00:11:55,119 --> 00:12:01,720
itself make it available inside your

00:11:59,139 --> 00:12:03,759
database so before hand you have to

00:12:01,720 --> 00:12:06,429
compile that one of course but that's

00:12:03,759 --> 00:12:08,230
the other side but when it's compiled

00:12:06,429 --> 00:12:10,269
unique on tables in your database and

00:12:08,230 --> 00:12:16,059
that doesn't mean you have to create the

00:12:10,269 --> 00:12:20,379
extension inside your database so fire

00:12:16,059 --> 00:12:25,019
that up next step would then be to

00:12:20,379 --> 00:12:28,839
create a meting to an SQLite file or

00:12:25,019 --> 00:12:33,699
database so that is doesn't mean you

00:12:28,839 --> 00:12:37,779
have to create a server name it give it

00:12:33,699 --> 00:12:39,850
a name and tell it which River introduce

00:12:37,779 --> 00:12:42,339
and then it has some options

00:12:39,850 --> 00:12:45,489
so here the options are very clear only

00:12:42,339 --> 00:12:51,100
one that is a path to the SQLite file

00:12:45,489 --> 00:12:54,279
and whatever you put in there it's not

00:12:51,100 --> 00:12:57,249
tested so when you whenever you write in

00:12:54,279 --> 00:12:59,559
here you can fire it up it won't work

00:12:57,249 --> 00:13:01,029
when there is no ethical axe while it

00:12:59,559 --> 00:13:03,009
doesn't check if the file exists or

00:13:01,029 --> 00:13:06,489
something like that that's something you

00:13:03,009 --> 00:13:10,589
have to do because it simply creates

00:13:06,489 --> 00:13:10,589
then this server

00:13:16,879 --> 00:13:21,660
so again we have to create we use one

00:13:20,069 --> 00:13:26,459
table from there we use the address

00:13:21,660 --> 00:13:28,379
table from this SQLite database and also

00:13:26,459 --> 00:13:31,019
here when you create the foreign table

00:13:28,379 --> 00:13:35,189
it doesn't test anything it just creates

00:13:31,019 --> 00:13:38,040
it and it will fail when you try to

00:13:35,189 --> 00:13:41,850
access it so we created it's done

00:13:38,040 --> 00:13:46,800
the response very simple and now we see

00:13:41,850 --> 00:13:51,029
how it works because simply is just

00:13:46,800 --> 00:13:55,040
clearing SQLite through post goes by the

00:13:51,029 --> 00:14:01,949
way we are running on the protocol 9.5

00:13:55,040 --> 00:14:05,519
for some reasons so here in Postgres

00:14:01,949 --> 00:14:08,939
this s collide table behaves like a

00:14:05,519 --> 00:14:11,009
poker table there is no difference the

00:14:08,939 --> 00:14:15,990
only difference is that the SQL command

00:14:11,009 --> 00:14:17,850
is passed by Postgres and SQLite because

00:14:15,990 --> 00:14:20,509
it fires up beaker give me all the data

00:14:17,850 --> 00:14:20,509
to SQLite

00:14:21,079 --> 00:14:27,750
currently there is some things that so

00:14:25,380 --> 00:14:29,850
simply straight only getting all the

00:14:27,750 --> 00:14:34,470
data in so whatever you are doing or

00:14:29,850 --> 00:14:37,459
calculating currently is done on poker

00:14:34,470 --> 00:14:41,870
side does means that sometimes it has to

00:14:37,459 --> 00:14:45,209
get all the data inside posters in

00:14:41,870 --> 00:14:47,880
memory calculate overhead and then

00:14:45,209 --> 00:14:50,970
return the results with post content

00:14:47,880 --> 00:14:54,259
coming in September there is also a

00:14:50,970 --> 00:14:57,470
group by that will be passed through the

00:14:54,259 --> 00:15:03,839
external database if possible if not

00:14:57,470 --> 00:15:06,980
well PokerStars it drops on so that was

00:15:03,839 --> 00:15:12,449
then creating an SQLite so now we go to

00:15:06,980 --> 00:15:16,339
get to Mariah Biggio and appear creating

00:15:12,449 --> 00:15:22,769
new extension for the mysql or mariadb

00:15:16,339 --> 00:15:25,439
the extension is always as my square so

00:15:22,769 --> 00:15:27,120
we have to create a server again here we

00:15:25,439 --> 00:15:31,610
have some more parameters we have a host

00:15:27,120 --> 00:15:31,610
so that slow close running on the talk

00:15:33,980 --> 00:15:40,890
that only does define where the server

00:15:36,630 --> 00:15:44,100
is but what we do now is we have to

00:15:40,890 --> 00:15:46,560
create the user mapping because where

00:15:44,100 --> 00:15:50,089
should this variety be server could get

00:15:46,560 --> 00:15:52,709
what the user name is to give us a data

00:15:50,089 --> 00:15:55,830
there should be some security inside but

00:15:52,709 --> 00:16:02,010
what posters then does have password and

00:15:55,830 --> 00:16:04,020
username so it's there in you need that

00:16:02,010 --> 00:16:10,589
mapping that that does map your posters

00:16:04,020 --> 00:16:12,740
user to key morality user it just fires

00:16:10,589 --> 00:16:17,880
it up it does looks like anything again

00:16:12,740 --> 00:16:22,980
it only will then go after we start to

00:16:17,880 --> 00:16:24,300
query so here we see the same a little

00:16:22,980 --> 00:16:28,110
bit different because we have a database

00:16:24,300 --> 00:16:30,750
name here in that centralized name on

00:16:28,110 --> 00:16:36,180
Moriah DB server and we take the table

00:16:30,750 --> 00:16:39,029
album and what else we have to do is we

00:16:36,180 --> 00:16:43,110
have to take care that we map the data

00:16:39,029 --> 00:16:47,730
types so integral is easy character

00:16:43,110 --> 00:16:51,779
varying is poster speaking which is

00:16:47,730 --> 00:16:55,650
simply a vodka but you have to take care

00:16:51,779 --> 00:16:57,750
that you met your datatypes from the

00:16:55,650 --> 00:17:06,420
original data to what is handled by

00:16:57,750 --> 00:17:08,179
postcodes so fire that ups let's see if

00:17:06,420 --> 00:17:14,970
we get some data

00:17:08,179 --> 00:17:17,910
what and if you have in mind that this

00:17:14,970 --> 00:17:21,360
only took 40 milliseconds by clearing

00:17:17,910 --> 00:17:27,540
Postgres works where post is occurring a

00:17:21,360 --> 00:17:30,960
Moriah DB that's not that bad but the

00:17:27,540 --> 00:17:34,260
transect start right here because now we

00:17:30,960 --> 00:17:38,370
are able to join them so we join an

00:17:34,260 --> 00:17:42,240
SQLite table with variety be table and

00:17:38,370 --> 00:17:44,390
get your results without having the data

00:17:42,240 --> 00:17:47,640
itself in focus

00:17:44,390 --> 00:17:49,620
so it does mean we can join nearly

00:17:47,640 --> 00:17:57,020
everything for postcards for postcards

00:17:49,620 --> 00:18:00,450
just behaves as an internal table so

00:17:57,020 --> 00:18:05,670
just to make sure that it's not possible

00:18:00,450 --> 00:18:09,330
to access other databases from inside

00:18:05,670 --> 00:18:13,650
posters I've got in this 95 30 Luke

00:18:09,330 --> 00:18:20,700
database that has a schema public and

00:18:13,650 --> 00:18:22,160
that has a track table so well doesn't

00:18:20,700 --> 00:18:24,270
work

00:18:22,160 --> 00:18:29,010
also that doesn't work

00:18:24,270 --> 00:18:40,250
grayza citator we also have to create

00:18:29,010 --> 00:18:40,250
first the extension itself we have to

00:18:40,490 --> 00:18:46,760
handle the parameters to create a server

00:18:43,110 --> 00:18:49,410
mething so what I'm accessing here is

00:18:46,760 --> 00:18:52,440
Postgres 9 6 from z nine five six nine

00:18:49,410 --> 00:18:55,980
five is running on five four three two

00:18:52,440 --> 00:19:00,030
and next one is five four three see that

00:18:55,980 --> 00:19:02,340
is 9.6 and you have one more parameter

00:19:00,030 --> 00:19:06,530
compared to my vehicle because the FC

00:19:02,340 --> 00:19:06,530
host support and key database name and

00:19:09,500 --> 00:19:19,740
like oh then create it okay

00:19:12,420 --> 00:19:22,440
that can be sourced so created we have

00:19:19,740 --> 00:19:24,270
to create the user mapping again because

00:19:22,440 --> 00:19:27,270
the other Postgres database doesn't know

00:19:24,270 --> 00:19:29,190
who I am on this computer or in this

00:19:27,270 --> 00:19:32,100
database so we have to create the user

00:19:29,190 --> 00:19:34,320
mapping again to make sure that the user

00:19:32,100 --> 00:19:39,330
has the rights and all these kind of

00:19:34,320 --> 00:19:41,790
things so there's one different thing

00:19:39,330 --> 00:19:44,400
that is available when it comes to

00:19:41,790 --> 00:19:46,680
getting all the tables from another

00:19:44,400 --> 00:19:51,480
Postgres database what we've done before

00:19:46,680 --> 00:19:56,230
was getting the tables by defining them

00:19:51,480 --> 00:20:00,470
that is what you see when we go up here

00:19:56,230 --> 00:20:03,860
here we have two this time a little bit

00:20:00,470 --> 00:20:08,300
more up we have to define the table so

00:20:03,860 --> 00:20:10,400
to really make that nothing but a total

00:20:08,300 --> 00:20:17,210
database does no Postgres database since

00:20:10,400 --> 00:20:20,030
9.5 and from there on it started to have

00:20:17,210 --> 00:20:24,950
something new that is import foreign

00:20:20,030 --> 00:20:28,520
schema and she gives the schema name

00:20:24,950 --> 00:20:31,550
where the data is coming from and if you

00:20:28,520 --> 00:20:34,010
say nothing then it takes all tables

00:20:31,550 --> 00:20:37,070
that are in the schema and import them

00:20:34,010 --> 00:20:42,800
as foreign tables in posters but you can

00:20:37,070 --> 00:20:45,320
also put a limit to that right limit -

00:20:42,800 --> 00:20:51,140
and then you can just input all the

00:20:45,320 --> 00:20:58,250
tables that you need and then it's just

00:20:51,140 --> 00:21:00,380
only that one table so now we're

00:20:58,250 --> 00:21:05,740
carrying a post coastline Lock clicks

00:21:00,380 --> 00:21:09,860
from a postcard 9.5 and it's still fast

00:21:05,740 --> 00:21:12,500
eight milliseconds it's okay

00:21:09,860 --> 00:21:16,640
you can also see that it is going

00:21:12,500 --> 00:21:19,460
external when we go here because the

00:21:16,640 --> 00:21:22,460
execution plan says there that the

00:21:19,460 --> 00:21:25,520
foreign scan so it tries to calculate

00:21:22,460 --> 00:21:27,830
some codes but don't bet on that it does

00:21:25,520 --> 00:21:31,430
only help to identify where the data is

00:21:27,830 --> 00:21:33,950
coming from because the characters local

00:21:31,430 --> 00:21:35,660
polkas couldn't know anything about the

00:21:33,950 --> 00:21:37,640
amount of data that is in the other

00:21:35,660 --> 00:21:40,630
database if there are indexes when you

00:21:37,640 --> 00:21:44,600
exercise whatever this so it's only

00:21:40,630 --> 00:21:47,650
don't go for coast but you can notice

00:21:44,600 --> 00:21:47,650
that the torrents can

00:21:52,070 --> 00:21:56,679
so

00:21:54,040 --> 00:21:58,900
let us mean we have now three foreign

00:21:56,679 --> 00:22:03,820
tables running and we can join them

00:21:58,900 --> 00:22:07,179
together so that one comes from the

00:22:03,820 --> 00:22:11,260
SQLite database that cut one comes from

00:22:07,179 --> 00:22:14,770
the morality and this one from the pocus

00:22:11,260 --> 00:22:18,790
9.6 and when you see the execution plan

00:22:14,770 --> 00:22:21,790
you see that it does a foreign scan does

00:22:18,790 --> 00:22:23,290
mean it has drawn all these kind of

00:22:21,790 --> 00:22:26,830
things first it gets all the data from

00:22:23,290 --> 00:22:30,070
there makes it has grown over that

00:22:26,830 --> 00:22:34,480
foreign scan of tables and does that

00:22:30,070 --> 00:22:41,890
twice and for every external table

00:22:34,480 --> 00:22:44,470
obviously so having four databases

00:22:41,890 --> 00:22:47,559
involved right now and having queries

00:22:44,470 --> 00:22:50,440
returning in 12 milliseconds is fair

00:22:47,559 --> 00:22:52,570
enough there was no optimization done on

00:22:50,440 --> 00:22:59,250
any of the systems the systems are

00:22:52,570 --> 00:23:02,980
installed just as here well and now we

00:22:59,250 --> 00:23:07,960
go on and create a file for another

00:23:02,980 --> 00:23:12,220
weapon and we have to create a server

00:23:07,960 --> 00:23:14,320
again because that is a rule even if

00:23:12,220 --> 00:23:16,500
there is nothing defiled that nothing

00:23:14,320 --> 00:23:18,850
else he finds then having if you file

00:23:16,500 --> 00:23:24,580
that's the only things that is that if I

00:23:18,850 --> 00:23:27,250
say over here and when we create that

00:23:24,580 --> 00:23:30,910
file that is the same it has some

00:23:27,250 --> 00:23:36,429
options we have to be sign where it is

00:23:30,910 --> 00:23:39,100
and we have to say it gives me and okay

00:23:36,429 --> 00:23:41,770
it does have an header and if everything

00:23:39,100 --> 00:23:46,210
else is standard than that enough but if

00:23:41,770 --> 00:23:49,330
you have tabs separators you can define

00:23:46,210 --> 00:23:52,929
them or if it is since V is coming from

00:23:49,330 --> 00:23:56,710
some guy who uses a Windows computer and

00:23:52,929 --> 00:24:01,000
exported that PSD with Excel well you

00:23:56,710 --> 00:24:03,130
can define the language codecs that is

00:24:01,000 --> 00:24:05,830
used with that thing

00:24:03,130 --> 00:24:08,820
if you don't define anything then it's

00:24:05,830 --> 00:24:08,820
utf-8

00:24:15,600 --> 00:24:25,979
so and that was querying he he is me

00:24:23,309 --> 00:24:30,989
fire so now the CSV file just behaves

00:24:25,979 --> 00:24:34,799
like he ever fight like he has a data

00:24:30,989 --> 00:24:40,159
face caused us to and here it comes

00:24:34,799 --> 00:24:42,840
again we can't run them all together so

00:24:40,159 --> 00:24:46,080
every column comes from different data

00:24:42,840 --> 00:24:51,570
source and all of them are external data

00:24:46,080 --> 00:24:54,090
sources so we've already joined four

00:24:51,570 --> 00:24:56,269
data sources together which is really

00:24:54,090 --> 00:24:56,269
nice

00:25:04,440 --> 00:25:11,230
but what we can also do is we can use

00:25:08,130 --> 00:25:13,390
joining these tables and using SQL

00:25:11,230 --> 00:25:19,300
PostgreSQL expressions because the risk

00:25:13,390 --> 00:25:22,120
statement was implementing it in 10.2 in

00:25:19,300 --> 00:25:23,620
Moriah DB as far as I remember but I

00:25:22,120 --> 00:25:27,250
haven't tested it but in previous

00:25:23,620 --> 00:25:31,150
versions common table expressions

00:25:27,250 --> 00:25:34,900
haven't been available on MariaDB but as

00:25:31,150 --> 00:25:40,150
a table as a result are behaving as they

00:25:34,900 --> 00:25:45,100
are it is that I can access them with

00:25:40,150 --> 00:25:48,820
posters things so does mean we create

00:25:45,100 --> 00:25:52,480
here narrator gates over the album tales

00:25:48,820 --> 00:25:56,040
from the MySQL album and join that

00:25:52,480 --> 00:25:59,860
result works the SQLite artist data and

00:25:56,040 --> 00:26:04,420
say well we have this for example here

00:25:59,860 --> 00:26:08,320
we have a CDC a CDC has two M's in there

00:26:04,420 --> 00:26:12,220
and this one has one is simply an error

00:26:08,320 --> 00:26:20,560
as Costco's can handle errors which is

00:26:12,220 --> 00:26:23,340
not possible by mario DB so we can also

00:26:20,560 --> 00:26:26,280
create a little bit more funny things

00:26:23,340 --> 00:26:29,380
because we can create materialized views

00:26:26,280 --> 00:26:32,410
when you use posters for that way to

00:26:29,380 --> 00:26:35,320
aggregate external data and make them

00:26:32,410 --> 00:26:42,180
available for researchers for example or

00:26:35,320 --> 00:26:46,000
for VI then you can just do it with

00:26:42,180 --> 00:26:49,270
materialized views so the data is then

00:26:46,000 --> 00:26:52,800
not varied external anymore it just

00:26:49,270 --> 00:26:52,800
handled inside focus

00:27:01,320 --> 00:27:09,419
and when we have a look at that it says

00:27:06,090 --> 00:27:12,299
now it doesn't take care of anything

00:27:09,419 --> 00:27:15,870
external so this one's completely run

00:27:12,299 --> 00:27:20,309
inside posters because all data is saved

00:27:15,870 --> 00:27:22,679
in this materialized view and that makes

00:27:20,309 --> 00:27:25,409
life later on a little bit easier

00:27:22,679 --> 00:27:28,889
because you are not relying on the

00:27:25,409 --> 00:27:36,690
availability of external data and you

00:27:28,889 --> 00:27:38,669
can use more poster stuff inside so now

00:27:36,690 --> 00:27:45,059
I show you how can write inside those

00:27:38,669 --> 00:27:51,330
database so okay I do it like sixteen

00:27:45,059 --> 00:27:55,289
look one so now we have three hundred

00:27:51,330 --> 00:28:05,129
forty seven albums inside the moriah DB

00:27:55,289 --> 00:28:10,590
database available and what's this Web

00:28:05,129 --> 00:28:15,500
statement I create the data that will be

00:28:10,590 --> 00:28:19,970
inserted into the Moriah DVD device as

00:28:15,500 --> 00:28:19,970
this solut database doesn't have

00:28:21,289 --> 00:28:25,860
generated IDs they are static you have

00:28:24,090 --> 00:28:28,049
to add them so I have to calculate them

00:28:25,860 --> 00:28:34,049
on my own getting from next album ID and

00:28:28,049 --> 00:28:36,480
add one to that and then it is just I'm

00:28:34,049 --> 00:28:39,080
doing that with here creating the data

00:28:36,480 --> 00:28:43,230
selecting the data giving it some name

00:28:39,080 --> 00:28:45,149
say what data we want to have we can

00:28:43,230 --> 00:28:51,950
have a look at it how it looks before we

00:28:45,149 --> 00:28:59,399
insert it so that is what it will be

00:28:51,950 --> 00:29:01,560
inserting into the Moriah TV database in

00:28:59,399 --> 00:29:06,150
circuit one row

00:29:01,560 --> 00:29:12,660
if everything did work right we should

00:29:06,150 --> 00:29:14,490
now see that one more so it doesn't mean

00:29:12,660 --> 00:29:17,400
I can even write into external data

00:29:14,490 --> 00:29:23,820
sources it's necessary if this data

00:29:17,400 --> 00:29:25,590
sources can handle that but if it

00:29:23,820 --> 00:29:28,200
doesn't help that you might use ODBC or

00:29:25,590 --> 00:29:38,820
JDBC because in that case you have

00:29:28,200 --> 00:29:46,200
things also available so but when the

00:29:38,820 --> 00:29:50,790
Curie our materialized view we see that

00:29:46,200 --> 00:29:53,190
there is still this number two and set

00:29:50,790 --> 00:29:56,040
the new items that we edit is not in

00:29:53,190 --> 00:29:59,760
there that's a materialized view that

00:29:56,040 --> 00:30:02,040
has the data that was available at the

00:29:59,760 --> 00:30:06,350
time the materialized view was created

00:30:02,040 --> 00:30:06,350
or refreshed so

00:30:12,650 --> 00:30:20,630
here again only that we have to now

00:30:14,960 --> 00:30:24,080
refresh the materialized view well and

00:30:20,630 --> 00:30:31,160
here it is the new album is inside and

00:30:24,080 --> 00:30:33,860
we have three items in there but we

00:30:31,160 --> 00:30:36,740
cannot only add data into external data

00:30:33,860 --> 00:30:42,290
sources we can also remove them even the

00:30:36,740 --> 00:30:47,930
unique will be pushed down when I run it

00:30:42,290 --> 00:30:52,900
so we still have here 348 we move that

00:30:47,930 --> 00:30:52,900
record go over there

00:30:53,290 --> 00:31:04,750
347 all materials you will still return

00:30:59,230 --> 00:31:04,750
look at the three until the refreshes

00:31:05,200 --> 00:31:12,050
now let's go again so you can insert you

00:31:09,890 --> 00:31:14,960
can update you can delete so everything

00:31:12,050 --> 00:31:17,630
that's possible you can do it does not

00:31:14,960 --> 00:31:19,910
work with every foreign doubt developer

00:31:17,630 --> 00:31:23,330
only if it is implemented index for our

00:31:19,910 --> 00:31:25,850
data Reaper itself as I mentioned

00:31:23,330 --> 00:31:31,480
previously is done by the foreign data

00:31:25,850 --> 00:31:31,480
river for SQLite Moriah DB and Oracle

00:31:37,550 --> 00:31:40,550
so

00:31:40,940 --> 00:31:46,610
we can also do more magic worse things

00:31:44,150 --> 00:31:52,370
in posters because postcard is able to

00:31:46,610 --> 00:31:56,660
handle Jason as a result does mean we

00:31:52,370 --> 00:32:00,110
just access all the data we have here

00:31:56,660 --> 00:32:08,300
and there is one nice function that says

00:32:00,110 --> 00:32:10,790
from that result make a case for every

00:32:08,300 --> 00:32:13,760
row becomes adjacent and even if it's

00:32:10,790 --> 00:32:16,220
external data you can handle create

00:32:13,760 --> 00:32:20,320
laser data inside focus and returning

00:32:16,220 --> 00:32:24,320
them transparent to everything that is

00:32:20,320 --> 00:32:28,760
handling the data as well so if that is

00:32:24,320 --> 00:32:32,110
possible not that I thought that I

00:32:28,760 --> 00:32:36,530
advise you to do it it's only to show

00:32:32,110 --> 00:32:42,500
what you can do so to make a little ball

00:32:36,530 --> 00:32:45,680
readable you see that there is a nice

00:32:42,500 --> 00:32:50,480
little thing that this Jason be pretty

00:32:45,680 --> 00:32:52,880
let us automatic because what we've seen

00:32:50,480 --> 00:32:56,540
beforehand was radiation just in one

00:32:52,880 --> 00:33:00,170
line with that one that's good for

00:32:56,540 --> 00:33:02,030
computers but not good for us when we

00:33:00,170 --> 00:33:04,310
have to read a Jason and it's all in one

00:33:02,030 --> 00:33:06,860
line we are getting crazy we don't get

00:33:04,310 --> 00:33:09,950
anything it's a bigger one and with that

00:33:06,860 --> 00:33:13,180
one you see that the complete structure

00:33:09,950 --> 00:33:16,850
so brackets inside records and so on

00:33:13,180 --> 00:33:21,770
that's really nice and just something

00:33:16,850 --> 00:33:23,660
that I really do like so now let's see

00:33:21,770 --> 00:33:29,480
what we can do with this multi-core

00:33:23,660 --> 00:33:31,850
extension we have to create it and what

00:33:29,480 --> 00:33:36,320
I will do is I will create a foreign

00:33:31,850 --> 00:33:38,960
dollar wrapper for RSS feed so it's the

00:33:36,320 --> 00:33:42,980
same as we had before with text file

00:33:38,960 --> 00:33:47,510
Canary you have to define Java give it a

00:33:42,980 --> 00:33:50,780
name and say wix4 another rapper should

00:33:47,510 --> 00:33:53,650
be used here and created with well some

00:33:50,780 --> 00:34:00,260
options which is that one

00:33:53,650 --> 00:34:02,960
to have a receipt for that and directly

00:34:00,260 --> 00:34:05,810
after what you can create that foreign

00:34:02,960 --> 00:34:11,000
table what we have to take care of is

00:34:05,810 --> 00:34:16,659
that the columns from the RSS feed are

00:34:11,000 --> 00:34:19,070
exactly in the alignment offices so

00:34:16,659 --> 00:34:19,820
title should be the first one links the

00:34:19,070 --> 00:34:22,580
second and so on

00:34:19,820 --> 00:34:26,870
and also you have to take care of when

00:34:22,580 --> 00:34:30,470
it comes to names with uppercase letters

00:34:26,870 --> 00:34:32,770
inside because otherwise it wouldn't

00:34:30,470 --> 00:34:34,850
find it because the lowercase letter is

00:34:32,770 --> 00:34:40,460
something different than another case

00:34:34,850 --> 00:34:44,830
letter and this one only has one option

00:34:40,460 --> 00:34:50,210
and it simply he address of the RSS feed

00:34:44,830 --> 00:34:52,820
so creating the extension but nothing is

00:34:50,210 --> 00:34:55,210
done that's why it's fast that's a

00:34:52,820 --> 00:34:59,060
little bit slower because it queries

00:34:55,210 --> 00:35:05,420
HTML and now it depends how fast the

00:34:59,060 --> 00:35:09,950
internet is it let's say I'm connected

00:35:05,420 --> 00:35:13,640
to buzz words it doesn't work I have to

00:35:09,950 --> 00:35:16,970
take my mobile I check it before the

00:35:13,640 --> 00:35:17,330
talk and it did work but that takes too

00:35:16,970 --> 00:35:25,150
long

00:35:17,330 --> 00:35:28,150
no that was something that didn't work

00:35:25,150 --> 00:35:32,080
so let me take my mobile

00:35:28,150 --> 00:35:32,080
always have a backup solution

00:36:11,570 --> 00:36:21,110
see here it has work so the time that it

00:36:16,820 --> 00:36:22,790
does take is coming from not from from

00:36:21,110 --> 00:36:26,030
the database it's coming from how long

00:36:22,790 --> 00:36:28,430
does it take to get the data from the

00:36:26,030 --> 00:36:30,430
RSS feed and how fast is your internet

00:36:28,430 --> 00:36:34,130
connection right here

00:36:30,430 --> 00:36:37,130
so I clarity is the next pocus event so

00:36:34,130 --> 00:36:43,460
these are posters events that are coming

00:36:37,130 --> 00:36:47,480
and now we have them as available with a

00:36:43,460 --> 00:36:50,210
query and you can use Tosca's to handle

00:36:47,480 --> 00:36:54,380
the data and do some stuff by sorting

00:36:50,210 --> 00:36:57,350
that and converting something into real

00:36:54,380 --> 00:37:00,320
date so everything that you can do with

00:36:57,350 --> 00:37:03,080
data is now available because tokus does

00:37:00,320 --> 00:37:08,450
handle that because it behaves for

00:37:03,080 --> 00:37:10,100
postcards like a default cable so what

00:37:08,450 --> 00:37:13,790
you see here there are some events

00:37:10,100 --> 00:37:16,930
coming up so we have some posters

00:37:13,790 --> 00:37:20,960
conference and silly and theater and

00:37:16,930 --> 00:37:24,140
there is the PD day in Italy and we have

00:37:20,960 --> 00:37:26,870
in October end of October we have the

00:37:24,140 --> 00:37:29,450
European post conference that will be

00:37:26,870 --> 00:37:32,420
three days conference and minimum one

00:37:29,450 --> 00:37:41,870
day tutorial and that will be done in

00:37:32,420 --> 00:37:45,830
Russia this year so but now we create

00:37:41,870 --> 00:37:49,540
another for never Eliza six because we

00:37:45,830 --> 00:37:55,300
started with having some music data so

00:37:49,540 --> 00:37:59,770
we now create another one that goes to

00:37:55,300 --> 00:38:05,950
music calm and use music.com

00:37:59,770 --> 00:38:10,280
and what we can now do is we can join

00:38:05,950 --> 00:38:17,570
our table the SQLite table is joined

00:38:10,280 --> 00:38:19,550
with the RSS feed and the I like is a

00:38:17,570 --> 00:38:23,390
little bit different like it's like you

00:38:19,550 --> 00:38:25,100
like but it does all in lower cases so

00:38:23,390 --> 00:38:27,170
it doesn't care about

00:38:25,100 --> 00:38:33,650
if something is a power or lowercase it

00:38:27,170 --> 00:38:36,800
does put it straight so I just static

00:38:33,650 --> 00:38:43,790
would be very easy to do this so we can

00:38:36,800 --> 00:38:44,770
also add some more select that one come

00:38:43,790 --> 00:38:48,710
on

00:38:44,770 --> 00:38:51,620
well take them in there we can join the

00:38:48,710 --> 00:38:54,020
Rolling Stone data with the data we have

00:38:51,620 --> 00:38:57,220
and we see they have to news work for

00:38:54,020 --> 00:39:04,100
you too for whatever they are telling us

00:38:57,220 --> 00:39:06,740
and we can also handle more I create

00:39:04,100 --> 00:39:14,270
them all right now there are several

00:39:06,740 --> 00:39:17,050
music seats did I create sex yes now we

00:39:14,270 --> 00:39:21,290
can create a materialized view again

00:39:17,050 --> 00:39:23,390
where we just put in every hours as

00:39:21,290 --> 00:39:26,630
seats that we have created about music

00:39:23,390 --> 00:39:29,210
previously and combining them with the

00:39:26,630 --> 00:39:30,980
Union and say what's the sources and

00:39:29,210 --> 00:39:32,480
where it has come from and so on so that

00:39:30,980 --> 00:39:38,420
you can identify where the data is

00:39:32,480 --> 00:39:41,450
coming from and that takes a little bit

00:39:38,420 --> 00:39:45,970
longer because it has to carry every of

00:39:41,450 --> 00:39:48,970
everything every single one of this nice

00:39:45,970 --> 00:39:48,970
LSSC

00:39:52,600 --> 00:40:02,450
and now we create a unique index on top

00:39:56,660 --> 00:40:05,690
of this for another rapper because of

00:40:02,450 --> 00:40:09,640
other things so and now we see that we

00:40:05,690 --> 00:40:14,150
it's that fast because we're clearing

00:40:09,640 --> 00:40:17,420
these materialized view so the data is

00:40:14,150 --> 00:40:21,670
not coming straight from the external

00:40:17,420 --> 00:40:24,440
data from the ls6 but it is coming from

00:40:21,670 --> 00:40:26,330
the materialized view and here you can

00:40:24,440 --> 00:40:27,890
see where it has come from and geography

00:40:26,330 --> 00:40:30,800
address and everything that we had

00:40:27,890 --> 00:40:34,610
beforehand and you also have when it was

00:40:30,800 --> 00:40:37,220
refresh so one good thing about

00:40:34,610 --> 00:40:39,560
materialized views and hostesses let me

00:40:37,220 --> 00:40:42,349
happen with fresh statement

00:40:39,560 --> 00:40:45,109
and it does have this nice little word

00:40:42,349 --> 00:40:48,050
concurrently concurrently does work if

00:40:45,109 --> 00:40:50,839
you have a unique index on a

00:40:48,050 --> 00:40:54,800
materialized view that does mean you can

00:40:50,839 --> 00:41:00,020
query the total materialized view and it

00:40:54,800 --> 00:41:02,990
will return results even when it is even

00:41:00,020 --> 00:41:05,270
when it is refreshing so the data is

00:41:02,990 --> 00:41:07,099
available completely different than to

00:41:05,270 --> 00:41:09,980
Oracle when you refresh certain Oracle

00:41:07,099 --> 00:41:13,550
materialized view and you want to drive

00:41:09,980 --> 00:41:16,430
your BIA people crazy do it on day time

00:41:13,550 --> 00:41:18,319
because then they have no data they are

00:41:16,430 --> 00:41:24,619
complaining all my data is done is that

00:41:18,319 --> 00:41:26,930
is gone so so in that does the research

00:41:24,619 --> 00:41:29,829
and I would have been able to query it

00:41:26,930 --> 00:41:33,440
if I would have used a different client

00:41:29,829 --> 00:41:49,400
so and that's simply it about foreign

00:41:33,440 --> 00:41:51,319
data brokers so any questions cool

00:41:49,400 --> 00:41:53,660
we still have time for one short

00:41:51,319 --> 00:41:58,960
question or not to learn probably more

00:41:53,660 --> 00:41:58,960
conversation over barbeque anyone

00:41:59,050 --> 00:42:08,329
and how about transactions well it

00:42:05,180 --> 00:42:09,589
depends on the external data source for

00:42:08,329 --> 00:42:15,170
postcards everything is in one

00:42:09,589 --> 00:42:16,790
transaction and it also slides so it

00:42:15,170 --> 00:42:20,079
posts the data when it comes to snap

00:42:16,790 --> 00:42:24,950
date does not lead to morality B then

00:42:20,079 --> 00:42:26,930
there is one transaction and when

00:42:24,950 --> 00:42:29,060
everything is done everything is fine

00:42:26,930 --> 00:42:30,950
let's exhale it nothing is done for

00:42:29,060 --> 00:42:35,630
postcard pocket I don't care because

00:42:30,950 --> 00:42:38,960
it's external handled so when you still

00:42:35,630 --> 00:42:42,380
have this nice little old five

00:42:38,960 --> 00:42:44,990
structures of my sequence than the

00:42:42,380 --> 00:42:47,560
original transaction that depends on the

00:42:44,990 --> 00:42:47,560
external system

00:42:49,740 --> 00:43:02,380
okay last question is this a step

00:42:56,710 --> 00:43:05,370
towards shorting Postgres well yes you

00:43:02,380 --> 00:43:08,260
can use it for shouting when you want to

00:43:05,370 --> 00:43:13,810
use external posters databases you can

00:43:08,260 --> 00:43:15,550
clorium over different external data

00:43:13,810 --> 00:43:19,210
sources I know companies that are using

00:43:15,550 --> 00:43:20,980
it for shouting but where there were

00:43:19,210 --> 00:43:24,010
coming most things in next version of

00:43:20,980 --> 00:43:28,510
posters that will help of shutting a lot

00:43:24,010 --> 00:43:32,770
so have a look at 1210 projects or if

00:43:28,510 --> 00:43:34,840
you have bigger data maybe Postgres XL

00:43:32,770 --> 00:43:40,060
is right for your green thumb we're

00:43:34,840 --> 00:43:43,040
going to focus every buck alright well

00:43:40,060 --> 00:43:48,420
thank you a lot for the talk and

00:43:43,040 --> 00:43:48,420

YouTube URL: https://www.youtube.com/watch?v=OqnUT6rR8pQ


