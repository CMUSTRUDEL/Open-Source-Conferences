Title: Rick Hanlon II - The new new React Native Redbox
Publication date: 2020-02-22
Playlist: AgentConf 2020
Description: 
	The new new React Native Redbox
Captions: 
	00:00:00,030 --> 00:00:05,400
I just feel like it's a very community

00:00:03,300 --> 00:00:08,910
driven conference it also is a lot of

00:00:05,400 --> 00:00:10,769
quality and people are just nice hi my

00:00:08,910 --> 00:00:11,730
name's Sarah and this is agent comp in

00:00:10,769 --> 00:00:15,420
Dortmund

00:00:11,730 --> 00:00:18,099
[Music]

00:00:15,420 --> 00:00:20,500
amazing venue Austria is beautiful

00:00:18,099 --> 00:00:25,300
meeting all the people in the community

00:00:20,500 --> 00:00:32,980
and getting to go and hang out and ski

00:00:25,300 --> 00:00:32,980
[Music]

00:00:35,879 --> 00:00:41,890
hi everyone my name is Rick Hanlon as

00:00:40,330 --> 00:00:47,080
Sarah mentioned I'm on the react native

00:00:41,890 --> 00:00:50,949
core team at Facebook in September at

00:00:47,080 --> 00:00:52,629
react native EU Emily Jan's are from the

00:00:50,949 --> 00:00:55,210
react native team shared a talk titled

00:00:52,629 --> 00:00:56,920
the new react native this talk covered

00:00:55,210 --> 00:01:00,519
our core architecture architecture

00:00:56,920 --> 00:01:02,949
projects fabric which is a rewrite of

00:01:00,519 --> 00:01:05,470
react native UI layer for better type

00:01:02,949 --> 00:01:08,439
safety synchronous rendering and faster

00:01:05,470 --> 00:01:10,090
startup performance turbo modules which

00:01:08,439 --> 00:01:12,670
are the new native module system that

00:01:10,090 --> 00:01:15,490
adds improved type safety performance

00:01:12,670 --> 00:01:18,370
and performance when calling native

00:01:15,490 --> 00:01:20,110
methods from JavaScript and Venice which

00:01:18,370 --> 00:01:23,050
is a rewrite to remove a dependency on a

00:01:20,110 --> 00:01:24,610
piece of info we call the bridge we talk

00:01:23,050 --> 00:01:27,820
a lot about these projects when we talk

00:01:24,610 --> 00:01:29,650
about the future of react native and as

00:01:27,820 --> 00:01:31,480
we started to launch these projects two

00:01:29,650 --> 00:01:33,430
internal teams of Facebook we received a

00:01:31,480 --> 00:01:37,030
lot of positive feedback about what

00:01:33,430 --> 00:01:38,620
these projects enable so it's never been

00:01:37,030 --> 00:01:39,940
a better time to use react native and

00:01:38,620 --> 00:01:41,740
it's exciting to think about where we're

00:01:39,940 --> 00:01:44,590
going to be in six months or a year from

00:01:41,740 --> 00:01:45,640
now but I'd like to share something that

00:01:44,590 --> 00:01:47,080
it's a little bit different than the

00:01:45,640 --> 00:01:50,260
architecture projects that we typically

00:01:47,080 --> 00:01:52,570
talk about today I want to talk about

00:01:50,260 --> 00:01:57,070
developer experience and specifically

00:01:52,570 --> 00:01:58,600
developer velocity developer velocity is

00:01:57,070 --> 00:02:00,190
how quickly you can ship features to

00:01:58,600 --> 00:02:02,979
users without the framework slowing you

00:02:00,190 --> 00:02:04,990
down we care a lot about developer

00:02:02,979 --> 00:02:06,400
velocity at Facebook so much that it's

00:02:04,990 --> 00:02:10,989
baked into our culture with the move

00:02:06,400 --> 00:02:12,849
fast motto in react native we've made

00:02:10,989 --> 00:02:17,349
some improvements to developer velocity

00:02:12,849 --> 00:02:20,609
recently in react native 61 we worked

00:02:17,349 --> 00:02:22,959
with the react team to ship fast refresh

00:02:20,609 --> 00:02:25,469
fast refresh is a complete rewrite of

00:02:22,959 --> 00:02:27,160
hot reloading that's reliable by default

00:02:25,469 --> 00:02:29,170
fully report

00:02:27,160 --> 00:02:32,800
fully supports modern react and

00:02:29,170 --> 00:02:35,470
gracefully recovers from typos these

00:02:32,800 --> 00:02:37,210
features allow you to move fast with

00:02:35,470 --> 00:02:39,280
fast refresh you're able to see your

00:02:37,210 --> 00:02:40,810
changes instantly and that means you can

00:02:39,280 --> 00:02:43,990
work faster to deliver features without

00:02:40,810 --> 00:02:46,240
the framework slowing you down the only

00:02:43,990 --> 00:02:48,060
problem with fast refresh is completely

00:02:46,240 --> 00:02:52,750
unrelated to module replacement and

00:02:48,060 --> 00:02:55,120
that's the react native air UI once we

00:02:52,750 --> 00:02:57,000
hit an error with fast refresh our

00:02:55,120 --> 00:02:59,410
velocity Holtz

00:02:57,000 --> 00:03:02,080
fast refresh will still let us continue

00:02:59,410 --> 00:03:04,090
after we fix the issue but there's a gap

00:03:02,080 --> 00:03:06,370
between when we see an error and when we

00:03:04,090 --> 00:03:09,730
fix it and in between that gap we need

00:03:06,370 --> 00:03:12,160
to figure out what the issue is this

00:03:09,730 --> 00:03:13,600
isn't a new issue we've heard feedback

00:03:12,160 --> 00:03:14,920
for a long time the error messages and

00:03:13,600 --> 00:03:16,690
react native are scary

00:03:14,920 --> 00:03:19,750
hard to understand and difficult to

00:03:16,690 --> 00:03:22,090
debug but with fast refresh making

00:03:19,750 --> 00:03:23,920
iteration speed instant heirs are now

00:03:22,090 --> 00:03:29,290
more of a bottleneck to velocity than

00:03:23,920 --> 00:03:31,300
they ever before so in this talk I want

00:03:29,290 --> 00:03:33,910
to explore why errors and warnings in

00:03:31,300 --> 00:03:45,190
react natives slow us down and what

00:03:33,910 --> 00:03:48,850
we're doing to fix them ok

00:03:45,190 --> 00:03:50,530
so in react native we shipped with two

00:03:48,850 --> 00:03:53,740
features by default to handle errors and

00:03:50,530 --> 00:03:56,380
warnings a screen to display airs which

00:03:53,740 --> 00:04:00,280
we call red box and a screen to display

00:03:56,380 --> 00:04:01,390
warnings which we call a yellow box both

00:04:00,280 --> 00:04:03,130
of these tools are necessary for

00:04:01,390 --> 00:04:04,690
building high quality user experiences

00:04:03,130 --> 00:04:06,850
they can tell you when the code you're

00:04:04,690 --> 00:04:08,710
writing is invalid when something in the

00:04:06,850 --> 00:04:10,600
development state is wrong alert you to

00:04:08,710 --> 00:04:11,830
potential bugs or tell you that there's

00:04:10,600 --> 00:04:15,790
a crash that users would see in

00:04:11,830 --> 00:04:17,980
production so even though they're

00:04:15,790 --> 00:04:19,989
important they're just not enjoyable to

00:04:17,980 --> 00:04:22,030
use they often have the wrong

00:04:19,989 --> 00:04:25,000
information they may have too much

00:04:22,030 --> 00:04:27,250
information or require you to focus to

00:04:25,000 --> 00:04:29,620
find the root cause these are

00:04:27,250 --> 00:04:31,480
cognitively intense activities and this

00:04:29,620 --> 00:04:34,470
is a time where your programming which

00:04:31,480 --> 00:04:37,990
is already in itself an intent activity

00:04:34,470 --> 00:04:40,030
the red box on the left is so intense

00:04:37,990 --> 00:04:43,660
because especially because of the bright

00:04:40,030 --> 00:04:46,600
red background thankfully last year the

00:04:43,660 --> 00:04:50,410
community flagged this is an issue and

00:04:46,600 --> 00:04:52,510
they work to fix it shout out to all the

00:04:50,410 --> 00:04:54,910
contributors that worked on this on

00:04:52,510 --> 00:04:57,220
improving the old red box thanks to your

00:04:54,910 --> 00:05:07,750
contributions you were able to change

00:04:57,220 --> 00:05:11,290
this red box to this and we call this

00:05:07,750 --> 00:05:12,970
the new react native red box this

00:05:11,290 --> 00:05:14,260
improves on the old red box by making it

00:05:12,970 --> 00:05:17,080
less scary and it was a solid

00:05:14,260 --> 00:05:19,120
improvement but we wanted to do even

00:05:17,080 --> 00:05:21,400
better we wanted to figure out what the

00:05:19,120 --> 00:05:23,110
fundamental issue is with these screens

00:05:21,400 --> 00:05:27,580
and solve them so we can move even

00:05:23,110 --> 00:05:30,520
faster so let's take a look at the red

00:05:27,580 --> 00:05:32,350
boxes this is one of the most common red

00:05:30,520 --> 00:05:34,270
boxes that we have it's also one of the

00:05:32,350 --> 00:05:37,180
most common errors in JavaScript

00:05:34,270 --> 00:05:40,990
undefined is not an object so we see

00:05:37,180 --> 00:05:43,720
this constantly but even having knowing

00:05:40,990 --> 00:05:45,820
what this area is and having fixed it

00:05:43,720 --> 00:05:48,940
many times before I still see this error

00:05:45,820 --> 00:05:51,010
and immediately like panic and wonder

00:05:48,940 --> 00:05:53,760
what I'm doing wrong and I feel like

00:05:51,010 --> 00:05:53,760
it's yelling at me

00:05:56,480 --> 00:06:02,090
so if we dig in deeper this the anatomy

00:05:59,600 --> 00:06:04,400
of a red box in react native is it

00:06:02,090 --> 00:06:06,680
starts with an air message and then if

00:06:04,400 --> 00:06:07,970
the air is during render react will add

00:06:06,680 --> 00:06:09,770
the components back to the end of the

00:06:07,970 --> 00:06:11,540
message and that contains a list of all

00:06:09,770 --> 00:06:14,140
the components and their file names in

00:06:11,540 --> 00:06:17,600
reverse order of how they were rendered

00:06:14,140 --> 00:06:20,450
below that is a stack trace if there's

00:06:17,600 --> 00:06:21,980
room sometimes the components that can

00:06:20,450 --> 00:06:24,740
get pretty long and you don't even see

00:06:21,980 --> 00:06:29,990
the stack here we only have enough space

00:06:24,740 --> 00:06:33,500
to show two two frames and finally

00:06:29,990 --> 00:06:34,670
there's an action bar at the bottom so

00:06:33,500 --> 00:06:36,950
this is the overview of the general

00:06:34,670 --> 00:06:39,590
anatomy of almost every red box in react

00:06:36,950 --> 00:06:42,140
native but it's actually not the full

00:06:39,590 --> 00:06:43,790
view the full view you would have to

00:06:42,140 --> 00:06:47,240
scroll all the way to the bottom and see

00:06:43,790 --> 00:06:48,170
the entire stack trace so this is all of

00:06:47,240 --> 00:06:49,730
the information that's being

00:06:48,170 --> 00:06:51,770
communicated to you for something that

00:06:49,730 --> 00:07:00,260
you usually can recognize pretty quickly

00:06:51,770 --> 00:07:03,820
which is undefined it's not an object so

00:07:00,260 --> 00:07:03,820
we can identify a few issues with this

00:07:03,880 --> 00:07:08,180
one there's just too much information

00:07:06,010 --> 00:07:10,040
most of the time I don't need the entire

00:07:08,180 --> 00:07:12,050
stack trace and I don't need the entire

00:07:10,040 --> 00:07:13,910
component stack but I still have to

00:07:12,050 --> 00:07:17,330
scroll past all this information in

00:07:13,910 --> 00:07:19,520
order to find what I do need second it's

00:07:17,330 --> 00:07:21,650
not formatted very well all the

00:07:19,520 --> 00:07:23,240
information blends together and there's

00:07:21,650 --> 00:07:25,160
likely only two or three pieces of

00:07:23,240 --> 00:07:27,170
information that I needed to see quickly

00:07:25,160 --> 00:07:30,410
in order to identify the issue and fix

00:07:27,170 --> 00:07:32,480
it and move on finally it's not

00:07:30,410 --> 00:07:34,400
actionable even if there was less

00:07:32,480 --> 00:07:36,740
information and it was formatted well

00:07:34,400 --> 00:07:40,040
this message still doesn't tell me where

00:07:36,740 --> 00:07:43,870
the issue is and how I can fix it so

00:07:40,040 --> 00:07:43,870
let's take a stab at improving this

00:07:44,200 --> 00:07:48,800
first let's improve the formatting of

00:07:47,510 --> 00:07:50,510
the message and just break it up into

00:07:48,800 --> 00:07:52,820
separate lines what this means is that

00:07:50,510 --> 00:07:55,070
every time we want we see a red box the

00:07:52,820 --> 00:07:57,170
message string is in the same position

00:07:55,070 --> 00:08:03,110
every time it doesn't change but just in

00:07:57,170 --> 00:08:04,490
position based on the air type next

00:08:03,110 --> 00:08:07,090
let's improve the formatting of the

00:08:04,490 --> 00:08:07,090
component stack

00:08:12,210 --> 00:08:15,760
here we break each component into its

00:08:14,440 --> 00:08:17,860
own line with a file name under it

00:08:15,760 --> 00:08:19,270
making it easier to skim through the

00:08:17,860 --> 00:08:21,070
list to find a component that you might

00:08:19,270 --> 00:08:25,210
recognize that would tell you where the

00:08:21,070 --> 00:08:26,710
issue is on top of that on top of just

00:08:25,210 --> 00:08:29,830
the formatting we can also cut down on

00:08:26,710 --> 00:08:32,640
some of the information most of the time

00:08:29,830 --> 00:08:36,630
you only care about the top three stacks

00:08:32,640 --> 00:08:39,160
so let's just collapse the rest of them

00:08:36,630 --> 00:08:42,780
they just show you only the top three

00:08:39,160 --> 00:08:48,880
stacks if you need to dig deeper you can

00:08:42,780 --> 00:08:50,680
now under the call stack here the

00:08:48,880 --> 00:08:53,500
formatting is basically the same so our

00:08:50,680 --> 00:08:56,500
focus in improving this area is just on

00:08:53,500 --> 00:08:58,300
reducing the amount of information if we

00:08:56,500 --> 00:09:00,730
look at the frames we can see that these

00:08:58,300 --> 00:09:03,850
top three frames are the actual frames

00:09:00,730 --> 00:09:05,620
that are in our app this is our code if

00:09:03,850 --> 00:09:08,350
we look at the rest of the frames this

00:09:05,620 --> 00:09:10,840
is all react internals they've finished

00:09:08,350 --> 00:09:12,310
class component begin work deform unit

00:09:10,840 --> 00:09:14,920
of work I've never looked at those

00:09:12,310 --> 00:09:17,290
functions before yet every error message

00:09:14,920 --> 00:09:22,060
that I get might have these frames on

00:09:17,290 --> 00:09:23,830
here so what we can do to improve this

00:09:22,060 --> 00:09:30,370
is just collapse all the frames that are

00:09:23,830 --> 00:09:32,860
not our application code finally for the

00:09:30,370 --> 00:09:36,960
actions let's just reduce these down to

00:09:32,860 --> 00:09:36,960
just two actions dismiss and minimize

00:09:37,890 --> 00:09:41,530
putting it all together we can see we've

00:09:39,880 --> 00:09:43,030
cut out a lot of information we've

00:09:41,530 --> 00:09:44,830
improved the formatting of what's left

00:09:43,030 --> 00:09:47,770
the only thing left to do is to make

00:09:44,830 --> 00:09:49,990
this more actionable in order to make it

00:09:47,770 --> 00:09:52,120
more actionable let's use the space that

00:09:49,990 --> 00:09:54,070
we saved by cutting out information to

00:09:52,120 --> 00:10:00,250
show a code frame pointing to the source

00:09:54,070 --> 00:10:02,140
of the issue there so if you look at the

00:10:00,250 --> 00:10:07,330
code frame here you can see that it's

00:10:02,140 --> 00:10:10,900
pointing to line 69 column 15 the render

00:10:07,330 --> 00:10:12,460
function at the top of the call stack so

00:10:10,900 --> 00:10:14,890
now we see undefined it's not an object

00:10:12,460 --> 00:10:16,830
and it's pointing exactly to the wire

00:10:14,890 --> 00:10:19,990
code that you need to go to to fix it

00:10:16,830 --> 00:10:21,250
this is pretty good I think we should we

00:10:19,990 --> 00:10:23,680
could just ship this

00:10:21,250 --> 00:10:24,939
but I think we could do just a little

00:10:23,680 --> 00:10:27,269
bit better if we tweaked the colors a

00:10:24,939 --> 00:10:27,269
little bit

00:10:27,480 --> 00:10:33,360
introducing the new react native red box

00:10:37,170 --> 00:10:42,790
[Applause]

00:10:40,290 --> 00:10:44,350
the new red box is more concise it only

00:10:42,790 --> 00:10:44,709
shows the information that's relevant to

00:10:44,350 --> 00:10:46,600
you

00:10:44,709 --> 00:10:49,449
component stacks are collapsed except

00:10:46,600 --> 00:10:51,129
for the top three frames and call stacks

00:10:49,449 --> 00:10:53,379
are collapse for anything that's not

00:10:51,129 --> 00:10:55,360
related to your code like react

00:10:53,379 --> 00:10:57,670
internals we've also done a lot of work

00:10:55,360 --> 00:10:59,889
to improve the frame collapsing so that

00:10:57,670 --> 00:11:02,709
we are more intelligent at knowing what

00:10:59,889 --> 00:11:06,129
is internal to react and what's in your

00:11:02,709 --> 00:11:07,449
app it's also well formatted we use

00:11:06,129 --> 00:11:10,660
colors and whitespace to draw attention

00:11:07,449 --> 00:11:13,480
to common sources of issues we also

00:11:10,660 --> 00:11:15,490
added a code frame to every air with

00:11:13,480 --> 00:11:19,089
syntax highlighting so it's even easier

00:11:15,490 --> 00:11:19,839
to spot the source of the issue and it's

00:11:19,089 --> 00:11:22,240
actionable

00:11:19,839 --> 00:11:25,269
we literally have an arrow pointing to

00:11:22,240 --> 00:11:26,949
where the issue is we added features

00:11:25,269 --> 00:11:28,509
like tapping on the component stack or

00:11:26,949 --> 00:11:30,550
tapping on the call stack to open the

00:11:28,509 --> 00:11:34,259
file in the editor so that you can get

00:11:30,550 --> 00:11:37,269
right to the source of the issue quicker

00:11:34,259 --> 00:11:39,759
and when you put them side-by-side you

00:11:37,269 --> 00:11:46,420
really wonder how we went so long with

00:11:39,759 --> 00:11:49,079
what's on the left let's take a look at

00:11:46,420 --> 00:11:49,079
yellow boxes now

00:11:53,010 --> 00:11:58,960
at the top of the yellow box is a space

00:11:55,840 --> 00:12:02,860
for paginating through warnings below

00:11:58,960 --> 00:12:05,190
that is the warning message a component

00:12:02,860 --> 00:12:05,190
stack

00:12:05,370 --> 00:12:10,240
there's no stack trace because the

00:12:07,570 --> 00:12:13,240
component stack is too big it's so the

00:12:10,240 --> 00:12:16,600
stack traces below the fold and an

00:12:13,240 --> 00:12:19,060
action bar so again this is what a

00:12:16,600 --> 00:12:20,800
overview of a yellow box looks like if

00:12:19,060 --> 00:12:26,590
you can't read the text that's the

00:12:20,800 --> 00:12:28,270
problem when we're gonna fix that if we

00:12:26,590 --> 00:12:30,430
want to see the full call stack that we

00:12:28,270 --> 00:12:33,190
can't see in this view we can expand

00:12:30,430 --> 00:12:38,800
this out and then this is the full view

00:12:33,190 --> 00:12:40,810
of the yellow box so we have the same

00:12:38,800 --> 00:12:42,730
breakdown here in the same issues

00:12:40,810 --> 00:12:45,400
there's too much information information

00:12:42,730 --> 00:12:48,190
that's there is poorly formatted it's

00:12:45,400 --> 00:12:51,250
not actionable it's in two most people

00:12:48,190 --> 00:12:54,760
isn't readable unless you are really

00:12:51,250 --> 00:13:01,300
good at white on yellow so let's improve

00:12:54,760 --> 00:13:04,690
it the message looks like it's formatted

00:13:01,300 --> 00:13:07,570
pretty well and that's not a mistake I

00:13:04,690 --> 00:13:09,790
kind of copy we kind of copied the error

00:13:07,570 --> 00:13:12,190
message format from yellow box into the

00:13:09,790 --> 00:13:13,420
red box so we don't need to improve the

00:13:12,190 --> 00:13:15,610
formatting there but we do need to

00:13:13,420 --> 00:13:20,440
improve the colors so let's just ship

00:13:15,610 --> 00:13:23,890
our new color pallet there that's way

00:13:20,440 --> 00:13:25,030
easier to read and let's do the same

00:13:23,890 --> 00:13:30,880
thing for the component stack that we

00:13:25,030 --> 00:13:32,500
did before and the call stack now what's

00:13:30,880 --> 00:13:34,870
interesting here with the call stack is

00:13:32,500 --> 00:13:37,420
that because this warning is a react

00:13:34,870 --> 00:13:41,110
warning for the it's a react warning

00:13:37,420 --> 00:13:44,230
because you're missing a key the source

00:13:41,110 --> 00:13:46,540
of the warning is inside of react but

00:13:44,230 --> 00:13:49,810
the source of the bug is in your

00:13:46,540 --> 00:13:51,910
component so if we were to so all the

00:13:49,810 --> 00:13:53,830
all the frames in the call stack er

00:13:51,910 --> 00:14:00,370
collapse they're all internal frames to

00:13:53,830 --> 00:14:02,170
react so what we what we need to do is

00:14:00,370 --> 00:14:03,250
intelligently decide whether or not

00:14:02,170 --> 00:14:04,930
we're

00:14:03,250 --> 00:14:11,800
use the component stack for the code

00:14:04,930 --> 00:14:13,900
frame or the call stack so let's finish

00:14:11,800 --> 00:14:17,310
up with the buttons we switch the order

00:14:13,900 --> 00:14:17,310
of the buttons just based on feedback

00:14:19,500 --> 00:14:27,400
and let's add in our code frame so if

00:14:26,290 --> 00:14:29,530
you look at the code frame here it's

00:14:27,400 --> 00:14:31,300
actually pointing to the component it's

00:14:29,530 --> 00:14:32,140
not pointing to any of the functions of

00:14:31,300 --> 00:14:33,520
the call stack

00:14:32,140 --> 00:14:34,810
there's pointing to a function in the

00:14:33,520 --> 00:14:36,280
call stack that would be pointing to

00:14:34,810 --> 00:14:39,190
react internal which you wouldn't want

00:14:36,280 --> 00:14:43,080
to go and try to debug but this is

00:14:39,190 --> 00:14:45,310
pointing directly to the issue this is a

00:14:43,080 --> 00:14:47,080
warning that comes up a lot so what's

00:14:45,310 --> 00:14:48,430
really great is that you can look and it

00:14:47,080 --> 00:14:50,830
tells you exactly where the key is

00:14:48,430 --> 00:14:56,740
missing on what line and that's line 122

00:14:50,830 --> 00:15:10,410
and this is the new react native yellow

00:14:56,740 --> 00:15:10,410
box just like red box it's more concise

00:15:11,190 --> 00:15:17,589
it's better formatted and it's more

00:15:14,380 --> 00:15:23,280
actionable and if we put it side-by-side

00:15:17,589 --> 00:15:23,280
with the old yellow box love it

00:15:28,980 --> 00:15:32,010
so this shows the thought process in the

00:15:30,570 --> 00:15:33,720
design that went into updating the new

00:15:32,010 --> 00:15:36,420
red box and yellow box into a single

00:15:33,720 --> 00:15:38,959
consistent experience since this new

00:15:36,420 --> 00:15:48,810
system handles both warnings and errors

00:15:38,959 --> 00:15:51,110
we're calling it log box you won't see a

00:15:48,810 --> 00:15:51,110
demo

00:16:05,380 --> 00:16:16,520
that's widescreen that's great

00:16:07,490 --> 00:16:19,060
we can adjust this real quick all right

00:16:16,520 --> 00:16:22,130
so what I have here are two iOS

00:16:19,060 --> 00:16:25,070
simulators running one here on the left

00:16:22,130 --> 00:16:28,370
is running the old red box and here on

00:16:25,070 --> 00:16:32,210
the right is running the new log box so

00:16:28,370 --> 00:16:33,980
let's just throw an exception so here's

00:16:32,210 --> 00:16:35,540
what it looks like in red box we can

00:16:33,980 --> 00:16:37,160
scroll down and see all the components

00:16:35,540 --> 00:16:41,090
that are involved and we can scroll down

00:16:37,160 --> 00:16:45,380
and see all of the stack traces all the

00:16:41,090 --> 00:16:48,130
stack frames and then in block box we

00:16:45,380 --> 00:16:50,330
can pull it up and view it right here

00:16:48,130 --> 00:16:52,520
what's great is we have the message

00:16:50,330 --> 00:16:53,720
there it's clean it's easy to read we

00:16:52,520 --> 00:16:56,270
have a code frame that's pointing

00:16:53,720 --> 00:16:57,770
directly to the source of the issue we

00:16:56,270 --> 00:16:59,930
have a component stack here that

00:16:57,770 --> 00:17:03,950
collapsed at 3 and we have 13 more

00:16:59,930 --> 00:17:06,860
components we can expand in view and

00:17:03,950 --> 00:17:08,750
same with the call stack so you can see

00:17:06,860 --> 00:17:11,090
in the call stack we have our app

00:17:08,750 --> 00:17:15,440
components and then we immediately get

00:17:11,090 --> 00:17:17,690
into react internals tweet we can hide

00:17:15,440 --> 00:17:20,440
we don't care about those what's also

00:17:17,690 --> 00:17:23,030
great here is that we can click on the

00:17:20,440 --> 00:17:26,780
code frame and it will take us directly

00:17:23,030 --> 00:17:30,080
to the line the way the issue is and we

00:17:26,780 --> 00:17:31,270
can also click on the components so we

00:17:30,080 --> 00:17:38,480
can bounce around to the different

00:17:31,270 --> 00:17:41,720
component call sites to see where the

00:17:38,480 --> 00:17:44,600
issue might be and the same exists for

00:17:41,720 --> 00:17:45,980
the call stacks so we can go to our go

00:17:44,600 --> 00:17:48,320
to the call stack and we can fix the

00:17:45,980 --> 00:17:50,540
issue so here that there's less

00:17:48,320 --> 00:17:56,260
information but it's more actionable and

00:17:50,540 --> 00:17:59,540
is better formatted another thing about

00:17:56,260 --> 00:18:01,510
error handling is that we've added in

00:17:59,540 --> 00:18:04,820
log box is just better life cycle of

00:18:01,510 --> 00:18:07,280
errors and Accession exceptions so over

00:18:04,820 --> 00:18:10,130
here in red box we have an option down

00:18:07,280 --> 00:18:14,420
here to dismiss okay so let's

00:18:10,130 --> 00:18:18,170
miss so this is good because we can see

00:18:14,420 --> 00:18:20,450
the air boundary that had popped up when

00:18:18,170 --> 00:18:23,180
the exception happened but we can't get

00:18:20,450 --> 00:18:25,070
back to that air that we just saw if I

00:18:23,180 --> 00:18:26,780
wanted to see the air boundary but then

00:18:25,070 --> 00:18:29,000
go back and see the air I would have to

00:18:26,780 --> 00:18:30,890
reproduce the air have to start back

00:18:29,000 --> 00:18:32,720
over from where it was and if that was a

00:18:30,890 --> 00:18:35,660
long path to get to reproducing that air

00:18:32,720 --> 00:18:39,440
that's going to be a lot of slowdown in

00:18:35,660 --> 00:18:41,450
the iteration speed but in log box you

00:18:39,440 --> 00:18:43,610
can minimize the air see the air

00:18:41,450 --> 00:18:50,000
boundary and still be able to expand and

00:18:43,610 --> 00:18:54,220
collapse it and then of course whenever

00:18:50,000 --> 00:18:54,220
you save the file it resets the state

00:18:55,360 --> 00:19:04,610
now let's talk about warnings and logs

00:19:02,320 --> 00:19:06,650
so there's a difference between a

00:19:04,610 --> 00:19:07,850
JavaScript exception and Java true an

00:19:06,650 --> 00:19:09,950
exception is something that you want to

00:19:07,850 --> 00:19:10,700
pop up in front of your face and stop

00:19:09,950 --> 00:19:13,190
what you're doing

00:19:10,700 --> 00:19:14,870
but console errors and console warnings

00:19:13,190 --> 00:19:17,510
are not something that you want to pop

00:19:14,870 --> 00:19:20,720
up in front of your face so with castle

00:19:17,510 --> 00:19:22,460
warnings in the old yellow box we would

00:19:20,720 --> 00:19:27,230
have this issue where it would just spam

00:19:22,460 --> 00:19:29,510
the screen which is super frustrating

00:19:27,230 --> 00:19:34,850
especially if you want to try to get to

00:19:29,510 --> 00:19:36,440
anywhere below the fold of the boxes and

00:19:34,850 --> 00:19:37,790
then this dismiss button can like move

00:19:36,440 --> 00:19:39,310
as you're trying to click it and then

00:19:37,790 --> 00:19:42,680
you accidentally click one of the

00:19:39,310 --> 00:19:46,040
warnings and it's just not a not a very

00:19:42,680 --> 00:19:49,250
good experience also whenever you're

00:19:46,040 --> 00:19:52,310
looking through these warnings it tells

00:19:49,250 --> 00:19:56,210
you that there's three instances of this

00:19:52,310 --> 00:19:58,160
air here and you can paginate just those

00:19:56,210 --> 00:20:00,620
three but if you want to go back further

00:19:58,160 --> 00:20:02,960
in time and you have to minimize it and

00:20:00,620 --> 00:20:05,240
then go and open up a different air you

00:20:02,960 --> 00:20:06,950
can only paginate through the warnings

00:20:05,240 --> 00:20:09,370
that are the same message or the same

00:20:06,950 --> 00:20:09,370
occurrence

00:20:13,020 --> 00:20:18,809
in log box we fix this in log box we

00:20:16,140 --> 00:20:20,790
just show a single message and we show

00:20:18,809 --> 00:20:23,370
the most recent message so here you can

00:20:20,790 --> 00:20:25,760
see as new warnings are coming in we're

00:20:23,370 --> 00:20:28,700
only showing you that there are nine

00:20:25,760 --> 00:20:31,230
warnings and the most recent message

00:20:28,700 --> 00:20:34,410
when you click to open one of the

00:20:31,230 --> 00:20:36,540
warnings then you can see you can

00:20:34,410 --> 00:20:40,860
traverse through all of the warnings

00:20:36,540 --> 00:20:42,360
that are in the in the console and you

00:20:40,860 --> 00:20:46,650
can side on if you want to dismiss or

00:20:42,360 --> 00:20:48,570
minimize them if you want to dismiss all

00:20:46,650 --> 00:20:51,660
of the warnings you could just hit the

00:20:48,570 --> 00:20:53,220
this miss button what's great is that

00:20:51,660 --> 00:20:55,500
this dismiss all is always in the same

00:20:53,220 --> 00:20:57,809
spot so even as logs are coming in it's

00:20:55,500 --> 00:20:59,340
not going to move and you're going to be

00:20:57,809 --> 00:21:03,059
able to just do exactly what you want to

00:20:59,340 --> 00:21:05,730
do console errors are also handled

00:21:03,059 --> 00:21:07,890
better they work into the same warning

00:21:05,730 --> 00:21:10,170
system but they're put into their own

00:21:07,890 --> 00:21:13,370
message notification so you can see that

00:21:10,170 --> 00:21:16,200
there's seven warnings and five errors

00:21:13,370 --> 00:21:18,179
over in the old system as soon as the

00:21:16,200 --> 00:21:20,550
console air hit it would act as if it

00:21:18,179 --> 00:21:23,340
was an exception there's no difference

00:21:20,550 --> 00:21:25,350
between the different levels and so this

00:21:23,340 --> 00:21:28,290
is going to pop up over top of all the

00:21:25,350 --> 00:21:31,980
content and stop stop you stop whatever

00:21:28,290 --> 00:21:33,390
you're doing just to show you a console

00:21:31,980 --> 00:21:44,610
air that may not be something that's

00:21:33,390 --> 00:21:46,860
critical and needs your attention and if

00:21:44,610 --> 00:21:48,809
you have errors and warnings both in the

00:21:46,860 --> 00:21:52,710
console you can still navigate through

00:21:48,809 --> 00:21:55,970
all of them they're ordered sequentially

00:21:52,710 --> 00:21:55,970
by the time that they came in

00:22:00,460 --> 00:22:08,020
so those are warnings the one final

00:22:06,490 --> 00:22:11,590
thing that I want to show is something

00:22:08,020 --> 00:22:13,540
that I'm pretty excited about um we're

00:22:11,590 --> 00:22:18,400
still I'm sore we're still working on

00:22:13,540 --> 00:22:22,060
this to to ship it but it's pretty great

00:22:18,400 --> 00:22:24,220
so there's this warning in react that

00:22:22,060 --> 00:22:26,170
each child in a list should have a

00:22:24,220 --> 00:22:28,000
unique key prop and this is what that

00:22:26,170 --> 00:22:31,990
warning would look like in the old

00:22:28,000 --> 00:22:33,850
system and it would take me a while to

00:22:31,990 --> 00:22:35,440
figure out like where is this happening

00:22:33,850 --> 00:22:38,440
how do I get to the line that is

00:22:35,440 --> 00:22:40,570
happening on you'd probably like look

00:22:38,440 --> 00:22:45,520
through this component stack and it's on

00:22:40,570 --> 00:22:49,980
play crash react actions line 77 so then

00:22:45,520 --> 00:22:55,150
I come over here and I grep for the file

00:22:49,980 --> 00:23:00,060
it's not it doesn't really work in the

00:22:55,150 --> 00:23:04,630
new system it's right there we take the

00:23:00,060 --> 00:23:09,730
top component stack and you can open

00:23:04,630 --> 00:23:12,730
right to that line oh I'm mapping over

00:23:09,730 --> 00:23:17,650
an array and I'm not adding a key that

00:23:12,730 --> 00:23:22,720
makes sense I can fix it save and move

00:23:17,650 --> 00:23:25,240
on the final thing to show here is that

00:23:22,720 --> 00:23:27,550
as I save the new system works better

00:23:25,240 --> 00:23:30,100
with fast refresh it's integrated better

00:23:27,550 --> 00:23:34,570
so that it will dismiss all warnings and

00:23:30,100 --> 00:23:41,230
errors whenever you save opposed to just

00:23:34,570 --> 00:23:42,910
a few cool so that's the new log box we

00:23:41,230 --> 00:23:45,580
think it's gonna speed up a developer

00:23:42,910 --> 00:23:49,450
velocity and we're really excited for

00:23:45,580 --> 00:23:53,260
everybody to try it one note of what it

00:23:49,450 --> 00:23:56,980
doesn't handle it doesn't handle it

00:23:53,260 --> 00:24:03,330
handles native warnings but it doesn't

00:23:56,980 --> 00:24:05,710
yet handle native airs or native fatals

00:24:03,330 --> 00:24:09,760
those are something that we're going to

00:24:05,710 --> 00:24:12,820
add support for but we found that 95

00:24:09,760 --> 00:24:14,269
percent of airs are handled correctly so

00:24:12,820 --> 00:24:21,070
we're gonna work on the long

00:24:14,269 --> 00:24:21,070
tale of the 5% coming up cool

00:24:30,650 --> 00:24:42,770
[Applause]

00:24:38,000 --> 00:24:45,929
so this is available now in the reactor

00:24:42,770 --> 00:24:49,590
this is available now in the react

00:24:45,929 --> 00:24:52,679
native release candidate to use it you

00:24:49,590 --> 00:24:55,640
can just import react native and call

00:24:52,679 --> 00:24:59,360
the unstable enable log box function

00:24:55,640 --> 00:25:03,520
that's log box thank you

00:24:59,360 --> 00:25:03,520
[Applause]

00:25:08,140 --> 00:25:10,200

YouTube URL: https://www.youtube.com/watch?v=Y8brBH5O-bQ


