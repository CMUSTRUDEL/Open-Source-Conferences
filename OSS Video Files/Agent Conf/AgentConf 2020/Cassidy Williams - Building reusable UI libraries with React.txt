Title: Cassidy Williams - Building reusable UI libraries with React
Publication date: 2020-02-22
Playlist: AgentConf 2020
Description: 
	Building reusable UI libraries with React
Captions: 
	00:00:00,030 --> 00:00:05,400
I just feel like it's a very community

00:00:03,300 --> 00:00:08,910
driven conference it also is a lot of

00:00:05,400 --> 00:00:10,769
quality and people are just nice hi my

00:00:08,910 --> 00:00:11,730
name's Sarah and this is agent comp in

00:00:10,769 --> 00:00:15,420
Dortmund

00:00:11,730 --> 00:00:18,099
[Music]

00:00:15,420 --> 00:00:20,500
amazing venue Austria is beautiful

00:00:18,099 --> 00:00:25,300
meeting all the people in the community

00:00:20,500 --> 00:00:30,830
and getting to go and hang out and ski

00:00:25,300 --> 00:00:34,800
[Music]

00:00:30,830 --> 00:00:38,470
[Applause]

00:00:34,800 --> 00:00:40,600
hi everybody I'm incredibly tired today

00:00:38,470 --> 00:00:42,579
yes I did land this morning and then I

00:00:40,600 --> 00:00:44,650
had a nice little stint in Swiss jail

00:00:42,579 --> 00:00:46,330
and I waltzed into the men's restroom

00:00:44,650 --> 00:00:49,150
this morning I'm sorry to the guy who I

00:00:46,330 --> 00:00:51,460
scared you might be somewhere near so

00:00:49,150 --> 00:00:53,080
now I'm about to make another probably

00:00:51,460 --> 00:00:57,040
poor decision in LiveCode a bunch in

00:00:53,080 --> 00:00:58,449
front of you so hello okay my name is

00:00:57,040 --> 00:01:01,720
Cassidy Williams I work at react

00:00:58,449 --> 00:01:03,909
training um we train react and and we

00:01:01,720 --> 00:01:05,619
also maintain a nice little library

00:01:03,909 --> 00:01:08,320
called react router if you've heard of

00:01:05,619 --> 00:01:10,390
it and we do a bunch of other cool

00:01:08,320 --> 00:01:12,340
open-source stuff and teaching stuff and

00:01:10,390 --> 00:01:15,250
I'm gonna be talking about UI libraries

00:01:12,340 --> 00:01:17,380
on the program it says building reusable

00:01:15,250 --> 00:01:19,330
UI libraries with react and I'll be

00:01:17,380 --> 00:01:21,850
using react but these are some concepts

00:01:19,330 --> 00:01:23,230
that I think can apply to all kinds of

00:01:21,850 --> 00:01:24,550
different frameworks and libraries but

00:01:23,230 --> 00:01:27,640
it's something that's that's really good

00:01:24,550 --> 00:01:30,640
to know so I'm going to kind of just

00:01:27,640 --> 00:01:33,430
dive right in and start start going

00:01:30,640 --> 00:01:36,070
through this so the first type of

00:01:33,430 --> 00:01:38,790
component that I really want to start

00:01:36,070 --> 00:01:41,500
with and then kind of build off of is

00:01:38,790 --> 00:01:44,890
using a single entry point in a you will

00:01:41,500 --> 00:01:47,620
in a UI library a single data entry

00:01:44,890 --> 00:01:50,229
point and so if you look right here this

00:01:47,620 --> 00:01:51,820
is a pretty just basic concept of a

00:01:50,229 --> 00:01:53,770
component where if you had a menu bar

00:01:51,820 --> 00:01:55,810
you have some links and you can pass in

00:01:53,770 --> 00:01:58,510
the data you can probably guess what it

00:01:55,810 --> 00:02:01,990
does there's some links with those

00:01:58,510 --> 00:02:04,420
labels that that point to that it's it's

00:02:01,990 --> 00:02:06,729
not that that crazy of a concept I'm

00:02:04,420 --> 00:02:09,580
going to switch over to my demo really

00:02:06,729 --> 00:02:13,000
quick and hopefully you can see it if

00:02:09,580 --> 00:02:15,010
you can't start screaming but anyway I

00:02:13,000 --> 00:02:17,019
have this little accordion that I built

00:02:15,010 --> 00:02:18,610
right here and I'm gonna walk through

00:02:17,019 --> 00:02:20,379
the code really quick so you can so you

00:02:18,610 --> 00:02:24,390
can see how it all works I have these

00:02:20,379 --> 00:02:26,490
little cities they expand it's nice

00:02:24,390 --> 00:02:28,530
and the way this component works is we

00:02:26,490 --> 00:02:31,380
have our app and it has just this

00:02:28,530 --> 00:02:34,350
accordion data is data right here and

00:02:31,380 --> 00:02:37,950
then it pulls in a label where I just

00:02:34,350 --> 00:02:40,560
did city names a Doorn burn I have a

00:02:37,950 --> 00:02:43,380
little icon right here and then it also

00:02:40,560 --> 00:02:44,910
pulls in a description and this

00:02:43,380 --> 00:02:47,400
description of component it's literally

00:02:44,910 --> 00:02:50,970
just text I just did it to decrease this

00:02:47,400 --> 00:02:52,560
page size for you so once I have all of

00:02:50,970 --> 00:02:55,440
this data put into the accordion

00:02:52,560 --> 00:02:58,170
component we have this nice little hefty

00:02:55,440 --> 00:02:59,970
component right here we have this active

00:02:58,170 --> 00:03:02,030
index and set active index and the

00:02:59,970 --> 00:03:05,340
initial state is 0 when I load the page

00:03:02,030 --> 00:03:09,180
and then it maps all this data into a

00:03:05,340 --> 00:03:11,340
fragment and so we do a data dot map we

00:03:09,180 --> 00:03:13,680
pull in a tab in an index we check if

00:03:11,340 --> 00:03:15,600
the index is equal to the active index

00:03:13,680 --> 00:03:18,870
and we get is active just walking

00:03:15,600 --> 00:03:21,150
through all of this and then it has the

00:03:18,870 --> 00:03:23,640
class if it's active then its expanded

00:03:21,150 --> 00:03:26,370
and then it puts in that label that icon

00:03:23,640 --> 00:03:28,200
which comes from the label and icon down

00:03:26,370 --> 00:03:31,709
here and then it pulls in the tab

00:03:28,200 --> 00:03:33,420
content so long story short it lets do

00:03:31,709 --> 00:03:36,239
all that and then again as you click

00:03:33,420 --> 00:03:38,670
around it sets the active index and and

00:03:36,239 --> 00:03:41,489
changes these so it's a pretty simple

00:03:38,670 --> 00:03:44,790
just kind of State container type of

00:03:41,489 --> 00:03:47,640
component now there's a conversation

00:03:44,790 --> 00:03:49,380
that happens when you have some kind of

00:03:47,640 --> 00:03:51,390
UI library that you're working on where

00:03:49,380 --> 00:03:53,579
someone that says oh this is great

00:03:51,390 --> 00:03:57,780
except can you add this or can you do

00:03:53,579 --> 00:04:01,230
this and so for example let's just say I

00:03:57,780 --> 00:04:03,209
am a person who really just doesn't want

00:04:01,230 --> 00:04:04,769
to think about skiing right now I'm

00:04:03,209 --> 00:04:07,410
nervous about it I've never skied before

00:04:04,769 --> 00:04:11,549
and so I want to disable the accordion

00:04:07,410 --> 00:04:14,190
tab and right now with this single entry

00:04:11,549 --> 00:04:18,479
point right here there's not a lot of

00:04:14,190 --> 00:04:21,239
ways to disable this this piece of data

00:04:18,479 --> 00:04:23,690
right here one thing that I could do is

00:04:21,239 --> 00:04:26,760
I could put it up here and add like a

00:04:23,690 --> 00:04:30,680
disabled is true or something like that

00:04:26,760 --> 00:04:33,870
and then check that I could have like a

00:04:30,680 --> 00:04:37,610
disabled and then if like there's some

00:04:33,870 --> 00:04:39,169
string that equals lek like this then I

00:04:37,610 --> 00:04:40,310
sayo than that that one should be

00:04:39,169 --> 00:04:43,159
disabled there's a few different ways

00:04:40,310 --> 00:04:44,990
when I'm not sure what to do when I need

00:04:43,159 --> 00:04:49,189
to add a feature I like to look to

00:04:44,990 --> 00:04:51,710
history so jQuery UI uh-huh

00:04:49,189 --> 00:04:54,740
thank you for your laughter I can use it

00:04:51,710 --> 00:04:56,569
so jQuery UI they they have a pretty

00:04:54,740 --> 00:04:58,159
decent accordion component and they also

00:04:56,569 --> 00:05:00,590
have this nice little disabled thing

00:04:58,159 --> 00:05:02,629
where they have disabled it's true they

00:05:00,590 --> 00:05:05,360
have a few different options for how you

00:05:02,629 --> 00:05:07,909
can do it they they have a bunch of they

00:05:05,360 --> 00:05:10,639
have some decent components jQuery UI I

00:05:07,909 --> 00:05:14,569
like it I thought it was nice they they

00:05:10,639 --> 00:05:17,689
have this tabs component let's see if I

00:05:14,569 --> 00:05:20,930
could find that on tabs where they also

00:05:17,689 --> 00:05:22,669
have a disabled one and I like the way

00:05:20,930 --> 00:05:24,710
this they did this one they have the

00:05:22,669 --> 00:05:27,560
index of the tab that they want to

00:05:24,710 --> 00:05:30,469
disable and so let's just say I'll copy

00:05:27,560 --> 00:05:32,930
them and say I want to disable a tab at

00:05:30,469 --> 00:05:35,210
a certain index I want to disable one of

00:05:32,930 --> 00:05:38,300
these panels in here so what I could do

00:05:35,210 --> 00:05:40,520
is I could add a prop and do disabled

00:05:38,300 --> 00:05:44,900
and then just an array and in this case

00:05:40,520 --> 00:05:47,990
I want it to be one so with when you

00:05:44,900 --> 00:05:50,360
have this single point of entry where

00:05:47,990 --> 00:05:52,370
you're passing in data you pass it in

00:05:50,360 --> 00:05:54,199
with props and that's that's kind of a

00:05:52,370 --> 00:05:56,900
core part of react it's it's probably

00:05:54,199 --> 00:05:59,270
not new to you but well we'll just add

00:05:56,900 --> 00:06:01,009
this feature really quick and so in the

00:05:59,270 --> 00:06:03,319
accordion we have data and now we're

00:06:01,009 --> 00:06:05,029
also going to have a disabled thing in

00:06:03,319 --> 00:06:08,810
here and I'll have the default value of

00:06:05,029 --> 00:06:12,469
that just be an empty array and then I

00:06:08,810 --> 00:06:18,439
could say Const is disabled and then

00:06:12,469 --> 00:06:21,740
I'll do if disabled dot includes index

00:06:18,439 --> 00:06:23,419
like that and then I can do some kind of

00:06:21,740 --> 00:06:27,379
beautiful little ternary thing right

00:06:23,419 --> 00:06:32,539
here and I'll do is disabled question

00:06:27,379 --> 00:06:35,060
mark disabled and then do that how gross

00:06:32,539 --> 00:06:37,460
is that oh I love it

00:06:35,060 --> 00:06:40,460
so did you know you could Nestor Nerys

00:06:37,460 --> 00:06:42,199
so fun and then we could also have a

00:06:40,460 --> 00:06:44,029
little if statement in here too so that

00:06:42,199 --> 00:06:49,390
way we don't set the active index when

00:06:44,029 --> 00:06:52,690
we do this and so I'll do if not is

00:06:49,390 --> 00:06:56,380
Seybold then we'll set the active index

00:06:52,690 --> 00:07:01,150
and now hey look at that it's disabled

00:06:56,380 --> 00:07:03,640
no skiing for Cassidy so we have this we

00:07:01,150 --> 00:07:06,850
have this disabled this disabled tab now

00:07:03,640 --> 00:07:10,570
in our accordion and this works great

00:07:06,850 --> 00:07:12,580
this this gets the job done but what

00:07:10,570 --> 00:07:15,220
starts to happen is now you might say

00:07:12,580 --> 00:07:16,810
okay well now I'm a person who wants to

00:07:15,220 --> 00:07:19,810
use this library but I want to rearrange

00:07:16,810 --> 00:07:22,540
the text in the icon or now I want to be

00:07:19,810 --> 00:07:24,430
able to I don't know update whatever

00:07:22,540 --> 00:07:26,980
this looks like you you start to want

00:07:24,430 --> 00:07:29,800
more and more features and with this

00:07:26,980 --> 00:07:32,890
single entry point right here you start

00:07:29,800 --> 00:07:34,330
to get a lot of props and it starts it

00:07:32,890 --> 00:07:36,400
starts to become a lot and when you're

00:07:34,330 --> 00:07:40,150
looking at just a normal JavaScript

00:07:36,400 --> 00:07:42,610
function or any function some function

00:07:40,150 --> 00:07:46,450
like this if you see a function that

00:07:42,610 --> 00:07:48,610
takes in a b and c you're like aha

00:07:46,450 --> 00:07:50,650
yes this is a normal function that takes

00:07:48,610 --> 00:07:53,260
in these values and it does something

00:07:50,650 --> 00:07:55,960
with them but then when you start to

00:07:53,260 --> 00:07:59,080
have a function that takes in this and

00:07:55,960 --> 00:08:01,540
then this and then it starts to take in

00:07:59,080 --> 00:08:02,950
tons of things like this that's when you

00:08:01,540 --> 00:08:06,400
start to say what the heck is happening

00:08:02,950 --> 00:08:08,560
why is this function doing so many

00:08:06,400 --> 00:08:11,440
things why does it need so many values

00:08:08,560 --> 00:08:13,480
in there and with react we often are

00:08:11,440 --> 00:08:16,060
just like oh no these these aren't just

00:08:13,480 --> 00:08:19,300
tons of parameters it's just one and we

00:08:16,060 --> 00:08:20,830
call it props and it's we try to be all

00:08:19,300 --> 00:08:23,650
sneaky and smart but really it's just

00:08:20,830 --> 00:08:25,600
it's taking in so many things when I was

00:08:23,650 --> 00:08:27,460
building this this accordion component I

00:08:25,600 --> 00:08:30,340
wanted to look into other ones to see

00:08:27,460 --> 00:08:32,380
how some people have built according

00:08:30,340 --> 00:08:34,900
components and I found this one and it

00:08:32,380 --> 00:08:36,340
takes in so many props look at all of

00:08:34,900 --> 00:08:39,670
these different props that it takes it

00:08:36,340 --> 00:08:42,400
and and it's it works it gets the job

00:08:39,670 --> 00:08:44,650
done but it kind of makes you question

00:08:42,400 --> 00:08:47,110
why is there so much responsibility on

00:08:44,650 --> 00:08:50,800
this one component it's kind of like if

00:08:47,110 --> 00:08:52,240
you were if you were given a Lego set of

00:08:50,800 --> 00:08:53,890
some kind and when you open it up you

00:08:52,240 --> 00:08:55,630
just have a giant Lego and you're like

00:08:53,890 --> 00:09:00,250
well this was fun

00:08:55,630 --> 00:09:02,290
so this is to introduce a concept this

00:09:00,250 --> 00:09:03,040
way this is to introduce a concept that

00:09:02,290 --> 00:09:05,829
I

00:09:03,040 --> 00:09:08,709
I think is a really key part of building

00:09:05,829 --> 00:09:09,790
a reusable UI library and and what I

00:09:08,709 --> 00:09:12,279
really want to talk about today and

00:09:09,790 --> 00:09:14,230
that's compound components and so

00:09:12,279 --> 00:09:16,000
compound kamon is this is a definition I

00:09:14,230 --> 00:09:17,380
kind of patched together on an air on

00:09:16,000 --> 00:09:18,880
the airplane on the way here

00:09:17,380 --> 00:09:21,940
because I couldn't come up with a good

00:09:18,880 --> 00:09:24,430
one before but it's it's a set of

00:09:21,940 --> 00:09:26,170
components that delegate rendering

00:09:24,430 --> 00:09:28,199
control across a bunch of different

00:09:26,170 --> 00:09:31,060
elements typically child elements and

00:09:28,199 --> 00:09:33,670
meanwhile the entire component itself

00:09:31,060 --> 00:09:35,680
the entire compound component manages

00:09:33,670 --> 00:09:39,279
state as a whole and that's a lot of

00:09:35,680 --> 00:09:40,600
fancy words it also could be just two

00:09:39,279 --> 00:09:43,300
components that work together that

00:09:40,600 --> 00:09:45,459
accomplish a task and that's that's

00:09:43,300 --> 00:09:47,980
generally how what a compound component

00:09:45,459 --> 00:09:49,480
is and so again I had this menu bar

00:09:47,980 --> 00:09:51,459
example before where it takes in all

00:09:49,480 --> 00:09:53,440
this data it had that one entry point

00:09:51,459 --> 00:09:55,509
a compound component version of this

00:09:53,440 --> 00:09:57,670
might look something like this where you

00:09:55,509 --> 00:09:59,920
have the outer menu bar but then the

00:09:57,670 --> 00:10:02,380
actual link tags right inside of here

00:09:59,920 --> 00:10:04,509
these these actually manage the

00:10:02,380 --> 00:10:08,050
rendering of each of those links but the

00:10:04,509 --> 00:10:11,740
menu bar as a whole manages the state

00:10:08,050 --> 00:10:14,920
together this isn't just a react thing

00:10:11,740 --> 00:10:17,079
the I want to make that clear again like

00:10:14,920 --> 00:10:18,990
I mentioned before this can be done in

00:10:17,079 --> 00:10:21,970
many different frameworks and it also

00:10:18,990 --> 00:10:25,829
natively is on the web can anybody think

00:10:21,970 --> 00:10:30,490
of a compound component that exists

00:10:25,829 --> 00:10:32,980
select yes select so so a select

00:10:30,490 --> 00:10:35,130
components you never see an option thing

00:10:32,980 --> 00:10:39,370
out in the wild it's always within a

00:10:35,130 --> 00:10:43,480
select element another one is tables you

00:10:39,370 --> 00:10:45,639
always see a TD inside of a TR or a th

00:10:43,480 --> 00:10:47,740
and that's always inside of a table this

00:10:45,639 --> 00:10:51,010
is a native compound component that's

00:10:47,740 --> 00:10:52,839
built into the web already and so with

00:10:51,010 --> 00:10:54,850
react or with whatever framework you

00:10:52,839 --> 00:10:57,760
choose to use or from no frameworks if

00:10:54,850 --> 00:11:01,120
you just listen to the last talk if you

00:10:57,760 --> 00:11:03,730
if you builds compound components you

00:11:01,120 --> 00:11:06,370
can kind of delegate control and then

00:11:03,730 --> 00:11:08,889
give your users of your API a little bit

00:11:06,370 --> 00:11:12,430
more ability to not only extend your API

00:11:08,889 --> 00:11:16,450
but also to kind of decide how they want

00:11:12,430 --> 00:11:18,400
to use it so let's get back let's go

00:11:16,450 --> 00:11:22,110
back to the code what I'm going to do

00:11:18,400 --> 00:11:24,880
now is convert this gigantic accordion

00:11:22,110 --> 00:11:27,370
giant Lego into a bunch of small Legos

00:11:24,880 --> 00:11:31,480
little pieces that that you can put

00:11:27,370 --> 00:11:34,540
together so inside this app instead of

00:11:31,480 --> 00:11:36,670
having this one entry point here I want

00:11:34,540 --> 00:11:39,640
to be able to kind of have a bunch of

00:11:36,670 --> 00:11:42,130
different ones and so I'm going to do an

00:11:39,640 --> 00:11:44,410
early return right here and then inside

00:11:42,130 --> 00:11:47,640
this return we're gonna start seeing

00:11:44,410 --> 00:11:50,230
tons of errors on the left ignore those

00:11:47,640 --> 00:11:54,010
we'll fix those later so I'll say

00:11:50,230 --> 00:11:56,740
accordion and then I'll say CC for

00:11:54,010 --> 00:11:59,050
compound components and then I want to

00:11:56,740 --> 00:12:03,730
say for each of those this will call it

00:11:59,050 --> 00:12:05,560
a section section like that and then

00:12:03,730 --> 00:12:08,440
inside each section is going to have a

00:12:05,560 --> 00:12:14,440
title and it's going to have the content

00:12:08,440 --> 00:12:16,930
in their title oh no ok title and

00:12:14,440 --> 00:12:18,820
content and so for example this one

00:12:16,930 --> 00:12:21,220
would be Doran Moon and then I could

00:12:18,820 --> 00:12:23,380
also I could also add this icon here or

00:12:21,220 --> 00:12:25,120
if I was one of those that wanted the

00:12:23,380 --> 00:12:27,550
icon on the other side I could just do

00:12:25,120 --> 00:12:30,190
that willy-nilly however I want and then

00:12:27,550 --> 00:12:32,590
we'll do content and then inside of here

00:12:30,190 --> 00:12:35,290
again I have my description component so

00:12:32,590 --> 00:12:36,850
I can just plop that in there so in

00:12:35,290 --> 00:12:40,000
theory this is how I want it to work

00:12:36,850 --> 00:12:43,710
again ignore the errors and I can just

00:12:40,000 --> 00:12:47,020
paste that across each time and then do

00:12:43,710 --> 00:12:49,480
leg and then I'll do like it in there

00:12:47,020 --> 00:12:51,280
and so again this is this is what we

00:12:49,480 --> 00:12:56,740
want to be able to do and then I had

00:12:51,280 --> 00:12:59,350
Madrid and then Madrid okay so now that

00:12:56,740 --> 00:13:02,110
we have generally our final results for

00:12:59,350 --> 00:13:04,480
what we want to do let's let's start

00:13:02,110 --> 00:13:06,370
implementing each of these sections step

00:13:04,480 --> 00:13:07,900
by step and so I'm going to do the

00:13:06,370 --> 00:13:13,180
function signatures first I'll do

00:13:07,900 --> 00:13:17,800
function accordion CC that is going to

00:13:13,180 --> 00:13:22,270
render div and let's see I have the div

00:13:17,800 --> 00:13:24,310
here data accordion like this data

00:13:22,270 --> 00:13:26,680
accordion and then what it'll take in

00:13:24,310 --> 00:13:28,240
instead of props a key part of compound

00:13:26,680 --> 00:13:29,769
components is that instead of taking in

00:13:28,240 --> 00:13:32,649
props too

00:13:29,769 --> 00:13:34,929
render things it takes in children and

00:13:32,649 --> 00:13:36,429
children is just a regular prop it's

00:13:34,929 --> 00:13:40,329
just misunderstood like most children

00:13:36,429 --> 00:13:42,639
okay cool so we're going to have this

00:13:40,329 --> 00:13:44,379
accordion ceci well I've got a laugh

00:13:42,639 --> 00:13:48,339
with that one

00:13:44,379 --> 00:13:53,980
let's see section on my word section and

00:13:48,339 --> 00:13:56,139
then we'll also have title and then

00:13:53,980 --> 00:13:58,389
we'll have content too and each of these

00:13:56,139 --> 00:14:01,569
are going to render children inside of a

00:13:58,389 --> 00:14:03,429
div because really it's just this giant

00:14:01,569 --> 00:14:04,929
accordion is going to be rendering

00:14:03,429 --> 00:14:06,879
whatever children are passed in which

00:14:04,929 --> 00:14:12,579
are sections sections are going to

00:14:06,879 --> 00:14:16,660
render content and titles content and so

00:14:12,579 --> 00:14:18,069
the section I have let's see what did I

00:14:16,660 --> 00:14:20,259
put for section oh do I not have

00:14:18,069 --> 00:14:25,679
anything cool I'll just make it a div

00:14:20,259 --> 00:14:30,610
then fun okay we're going to return

00:14:25,679 --> 00:14:32,319
children in here and then I'll just I'll

00:14:30,610 --> 00:14:34,350
just return children for now I'm sure

00:14:32,319 --> 00:14:38,139
I'll do something more with that later

00:14:34,350 --> 00:14:42,459
don't yell at me oh it's okay look we'll

00:14:38,139 --> 00:14:44,980
get there later children and then oh you

00:14:42,459 --> 00:14:47,410
know what we also are going to want to

00:14:44,980 --> 00:14:50,049
add that whole disabled thing too like

00:14:47,410 --> 00:14:51,730
this as a prop props are okay we just

00:14:50,049 --> 00:14:54,959
don't want too many of them so I'll put

00:14:51,730 --> 00:14:58,839
I'll make section also taken disabled

00:14:54,959 --> 00:15:01,029
like that and then children here

00:14:58,839 --> 00:15:03,160
children here sorry this part is the

00:15:01,029 --> 00:15:04,899
boring part I promise it'll get much

00:15:03,160 --> 00:15:07,509
more interesting once I've returned

00:15:04,899 --> 00:15:10,209
everything this is going to return a div

00:15:07,509 --> 00:15:17,199
and that one's going to be a title I'm

00:15:10,209 --> 00:15:19,089
gonna copy all of this for that and then

00:15:17,199 --> 00:15:22,720
we'll do the same thing with content as

00:15:19,089 --> 00:15:27,790
well we're going to return and then I'm

00:15:22,720 --> 00:15:30,669
gonna copy the content like that cool

00:15:27,790 --> 00:15:34,299
so at least some errors might go away

00:15:30,669 --> 00:15:37,839
kind of that's fine oh it's the fragment

00:15:34,299 --> 00:15:40,689
thank you I appreciate your yelling okay

00:15:37,839 --> 00:15:42,819
cool so oh and now it has all of this

00:15:40,689 --> 00:15:43,250
tab content stuff we're just rendering

00:15:42,819 --> 00:15:45,290
chill

00:15:43,250 --> 00:15:47,779
and then we don't need to worry about

00:15:45,290 --> 00:15:50,149
these tab labels and tab icons we can

00:15:47,779 --> 00:15:53,029
just do children again here too okay

00:15:50,149 --> 00:15:55,970
cool so we have all these variables that

00:15:53,029 --> 00:15:58,399
we haven't actually used yet and so I'm

00:15:55,970 --> 00:16:00,560
going to do we're going to need to get

00:15:58,399 --> 00:16:02,060
an index we're going to need to get is

00:16:00,560 --> 00:16:04,490
active we're going to need to do a lot

00:16:02,060 --> 00:16:07,300
of things so I'm going to do index I'm

00:16:04,490 --> 00:16:12,889
just going to do 0 and add to do there

00:16:07,300 --> 00:16:15,889
and then well we need active index also

00:16:12,889 --> 00:16:19,790
0 to do this is what live coding is all

00:16:15,889 --> 00:16:23,709
about set active index that's going to

00:16:19,790 --> 00:16:26,509
be a function that does nothing to do

00:16:23,709 --> 00:16:34,160
then o will also need to get disabled to

00:16:26,509 --> 00:16:38,269
Const is disabled and then false to do

00:16:34,160 --> 00:16:40,189
cool nice now it's done

00:16:38,269 --> 00:16:43,579
and we'll also do the exact same thing

00:16:40,189 --> 00:16:45,079
down here content needs to know about is

00:16:43,579 --> 00:16:46,629
active actually we don't need an on

00:16:45,079 --> 00:16:49,279
click on content let's get rid of that

00:16:46,629 --> 00:16:52,720
so it really just needs to know that is

00:16:49,279 --> 00:16:58,129
active part so I'm going to get is

00:16:52,720 --> 00:17:04,490
active all do is active is if index is

00:16:58,129 --> 00:17:06,319
equal to active index ok cool so we have

00:17:04,490 --> 00:17:08,299
an index we have an active index the

00:17:06,319 --> 00:17:11,000
active index is the tab that already

00:17:08,299 --> 00:17:13,819
exists is active just checks if they're

00:17:11,000 --> 00:17:15,890
the same then we do stuff with it let's

00:17:13,819 --> 00:17:19,250
see we're going to do the same thing

00:17:15,890 --> 00:17:22,309
down here I'm going to get the index

00:17:19,250 --> 00:17:24,409
active index and check on that hey look

00:17:22,309 --> 00:17:28,520
at that it doesn't work but it does

00:17:24,409 --> 00:17:32,809
stuff the errors are gone and that's all

00:17:28,520 --> 00:17:35,539
coding is about so we we have we have

00:17:32,809 --> 00:17:37,970
something going so far now we need to

00:17:35,539 --> 00:17:39,320
start actually rendering real things we

00:17:37,970 --> 00:17:42,110
need to get rid of all of these to do

00:17:39,320 --> 00:17:44,450
statements that I have in there so let's

00:17:42,110 --> 00:17:46,460
let's first talk about active index and

00:17:44,450 --> 00:17:50,600
set active index those sound an awful

00:17:46,460 --> 00:17:53,780
lot like state don't they but if we if

00:17:50,600 --> 00:17:56,510
we have the state down here we don't

00:17:53,780 --> 00:17:59,660
necessarily know where the active index

00:17:56,510 --> 00:18:01,460
is at any given time if we keep setting

00:17:59,660 --> 00:18:03,860
the active index and it lives in this

00:18:01,460 --> 00:18:06,230
Lac panel then we don't know if we need

00:18:03,860 --> 00:18:07,490
to move it up or down to Madrid and that

00:18:06,230 --> 00:18:10,190
sort of thing which means we need to

00:18:07,490 --> 00:18:11,660
lift state up to the parent and I'm

00:18:10,190 --> 00:18:14,780
actually going to be lifting it all the

00:18:11,660 --> 00:18:19,610
way to this accordion CC thing and I'm

00:18:14,780 --> 00:18:23,299
going to do Const active index and then

00:18:19,610 --> 00:18:28,700
set active index and I'll do use state

00:18:23,299 --> 00:18:31,490
and initialize that as 0 so now that we

00:18:28,700 --> 00:18:34,190
have this state here we can pass it down

00:18:31,490 --> 00:18:37,040
to all of our children individually but

00:18:34,190 --> 00:18:38,990
here's the thing with compound

00:18:37,040 --> 00:18:41,480
components the power behind them is that

00:18:38,990 --> 00:18:44,210
we have we have these different things

00:18:41,480 --> 00:18:46,250
that kind of just are self aware

00:18:44,210 --> 00:18:48,140
children can be self aware because of

00:18:46,250 --> 00:18:51,410
what parents give them it's a great

00:18:48,140 --> 00:18:54,740
metaphor for life but we don't want to

00:18:51,410 --> 00:18:57,890
explicitly say ok your index will be 0

00:18:54,740 --> 00:18:59,390
your index will be 1 and your active

00:18:57,890 --> 00:19:01,190
index is true or false we don't want to

00:18:59,390 --> 00:19:03,559
pass those in via props because that

00:19:01,190 --> 00:19:07,030
kind of defeats the purpose of compound

00:19:03,559 --> 00:19:09,650
components and so we can use a handy

00:19:07,030 --> 00:19:11,809
hook that if you haven't used it before

00:19:09,650 --> 00:19:14,600
if you haven't used the object before

00:19:11,809 --> 00:19:18,980
it's called context and I'm going to

00:19:14,600 --> 00:19:22,669
import use context and create context

00:19:18,980 --> 00:19:26,299
here and what these do is it creates an

00:19:22,669 --> 00:19:30,230
object that kind of spawns this tree

00:19:26,299 --> 00:19:34,309
where it can create a provider that how

00:19:30,230 --> 00:19:36,500
do I say this the provider allows it's

00:19:34,309 --> 00:19:39,559
again metaphor for children a provider

00:19:36,500 --> 00:19:42,440
provides things to its children but

00:19:39,559 --> 00:19:44,090
anything inside of context it kind of

00:19:42,440 --> 00:19:46,700
acts as a communication channel between

00:19:44,090 --> 00:19:48,410
the parent which is the provider and any

00:19:46,700 --> 00:19:50,570
children grandchildren

00:19:48,410 --> 00:19:54,350
great-grandchildren of that parent and

00:19:50,570 --> 00:19:58,809
so with this accordion CC let's just say

00:19:54,350 --> 00:20:04,340
I'll have a Const and then accordion

00:19:58,809 --> 00:20:06,140
context equals create context now that

00:20:04,340 --> 00:20:10,010
we have this context

00:20:06,140 --> 00:20:11,960
object what we can do with it is pass

00:20:10,010 --> 00:20:13,929
values from the parent down to the

00:20:11,960 --> 00:20:20,240
children and the way that works is we do

00:20:13,929 --> 00:20:21,890
accordion context dot provider and then

00:20:20,240 --> 00:20:26,840
in doing that and we're going to put

00:20:21,890 --> 00:20:29,750
this stuff inside of there like that

00:20:26,840 --> 00:20:31,850
now everything inside of this provider

00:20:29,750 --> 00:20:35,600
which again is all of the children in

00:20:31,850 --> 00:20:37,040
there they will be able to have access

00:20:35,600 --> 00:20:39,650
to whatever values we give this

00:20:37,040 --> 00:20:43,520
accordion context and so if I put a

00:20:39,650 --> 00:20:49,070
value right here and just put index and

00:20:43,520 --> 00:20:51,440
set active index like that now whenever

00:20:49,070 --> 00:20:53,960
one of the children call set active

00:20:51,440 --> 00:20:56,419
index it'll call set active index for

00:20:53,960 --> 00:20:59,090
anything that's using this active index

00:20:56,419 --> 00:21:01,220
variable and that's really powerful when

00:20:59,090 --> 00:21:03,200
you think of for example I've made a

00:21:01,220 --> 00:21:05,480
theme picker on one of my side projects

00:21:03,200 --> 00:21:07,549
and multiple components was using the

00:21:05,480 --> 00:21:09,380
theme variable that was given by the

00:21:07,549 --> 00:21:11,570
provider but only the theme picker

00:21:09,380 --> 00:21:13,760
component actually used the set theme

00:21:11,570 --> 00:21:16,070
and so when it called set theme now

00:21:13,760 --> 00:21:18,830
anything using this active index

00:21:16,070 --> 00:21:21,020
variable or the theme variable had the

00:21:18,830 --> 00:21:24,950
changes propagated and I think that's

00:21:21,020 --> 00:21:27,110
just that's so cool so anyway now that

00:21:24,950 --> 00:21:29,510
we have this active index and set active

00:21:27,110 --> 00:21:32,120
index passed in as an object with this

00:21:29,510 --> 00:21:34,309
provider we can use them and so let's

00:21:32,120 --> 00:21:37,640
get rid of some of these - dues the way

00:21:34,309 --> 00:21:39,460
we can pull them out as we can say we're

00:21:37,640 --> 00:21:44,419
going to pull them out and say active

00:21:39,460 --> 00:21:47,390
index and then set active index and then

00:21:44,419 --> 00:21:50,630
in here we'll do use context and we'll

00:21:47,390 --> 00:21:53,210
pass in the accordion context like that

00:21:50,630 --> 00:21:57,169
and we'll take out the duplicate

00:21:53,210 --> 00:21:59,320
variables there and now we have

00:21:57,169 --> 00:22:02,090
variables that exist and are real and

00:21:59,320 --> 00:22:04,910
right now it's again we're still kind of

00:22:02,090 --> 00:22:06,530
working on it but the fact that we have

00:22:04,910 --> 00:22:09,429
these variables that are now shared

00:22:06,530 --> 00:22:11,660
amongst different aspects of the

00:22:09,429 --> 00:22:13,490
compound component is really exciting

00:22:11,660 --> 00:22:15,650
and I'm also going to pull this active

00:22:13,490 --> 00:22:18,169
index and set active index down here

00:22:15,650 --> 00:22:19,850
although I don't need set I can just

00:22:18,169 --> 00:22:21,890
pull in one variable at a time

00:22:19,850 --> 00:22:24,620
and so now the active index that this

00:22:21,890 --> 00:22:26,960
content component and the one that this

00:22:24,620 --> 00:22:29,750
title component has is the same because

00:22:26,960 --> 00:22:32,120
it's coming from the top level but it's

00:22:29,750 --> 00:22:35,750
implicitly passed rather than explicitly

00:22:32,120 --> 00:22:39,169
passed so now that we've done that we we

00:22:35,750 --> 00:22:42,169
have we have these passed in we can see

00:22:39,169 --> 00:22:43,640
is active index I don't know why we're

00:22:42,169 --> 00:22:45,049
getting some of these expanded right

00:22:43,640 --> 00:22:47,270
here I have a feeling I messed something

00:22:45,049 --> 00:22:49,070
up but that's okay we're live coding so

00:22:47,270 --> 00:22:52,159
it's natural to mess up everything

00:22:49,070 --> 00:22:54,140
you've ever prepared for let's see oh

00:22:52,159 --> 00:22:55,730
all of them have class expanded that

00:22:54,140 --> 00:22:58,150
shouldn't happen I'm going to take out

00:22:55,730 --> 00:23:04,130
this is disabled thing really quick and

00:22:58,150 --> 00:23:06,559
then oh the index is always zero oh we

00:23:04,130 --> 00:23:11,809
should do that shouldn't we okay cool

00:23:06,559 --> 00:23:13,970
well hey next lesson so one one cool

00:23:11,809 --> 00:23:16,850
thing to that that we'll probably need

00:23:13,970 --> 00:23:19,100
to do is actually make this index real

00:23:16,850 --> 00:23:21,260
and so we should probably set it

00:23:19,100 --> 00:23:25,010
somewhere we could set it up here and

00:23:21,260 --> 00:23:27,620
and have the sum index variable created

00:23:25,010 --> 00:23:30,559
at the accordion CC level but here's the

00:23:27,620 --> 00:23:34,100
thing how do you make something self

00:23:30,559 --> 00:23:35,570
aware when you when you have all these

00:23:34,100 --> 00:23:38,330
children again we don't want to say

00:23:35,570 --> 00:23:40,370
index equals zero index equals one index

00:23:38,330 --> 00:23:43,309
equals two and so the way that you can

00:23:40,370 --> 00:23:45,710
do that is by render position and so

00:23:43,309 --> 00:23:47,570
because this section was declared first

00:23:45,710 --> 00:23:49,850
it's the one that should be getting

00:23:47,570 --> 00:23:51,049
index equals zero and because this one

00:23:49,850 --> 00:23:53,960
is second it's the one that should be

00:23:51,049 --> 00:23:57,320
getting index equals one and so to be

00:23:53,960 --> 00:23:59,090
able to do that again this children prop

00:23:57,320 --> 00:24:01,159
it's misunderstood but it's also awesome

00:23:59,090 --> 00:24:02,720
children is an array

00:24:01,159 --> 00:24:04,789
unless there's just one of them and then

00:24:02,720 --> 00:24:06,530
it's an object and there's modules for

00:24:04,789 --> 00:24:08,330
that to help but anyway we're just gonna

00:24:06,530 --> 00:24:10,460
assume everything's an array right now

00:24:08,330 --> 00:24:13,520
because we're live coding what we can do

00:24:10,460 --> 00:24:17,000
instead of just putting in children we

00:24:13,520 --> 00:24:19,730
can do children dot map children dot map

00:24:17,000 --> 00:24:23,840
and then for everything inside of here

00:24:19,730 --> 00:24:29,210
we can return child and we'll do that

00:24:23,840 --> 00:24:31,850
child and so nothing has changed because

00:24:29,210 --> 00:24:33,440
again this is pretty much how react

00:24:31,850 --> 00:24:35,510
works under the hood

00:24:33,440 --> 00:24:37,610
children dot map and then returning the

00:24:35,510 --> 00:24:40,450
each individual child is the same thing

00:24:37,610 --> 00:24:43,669
as just rendering the children variable

00:24:40,450 --> 00:24:44,659
but now that we have access to just this

00:24:43,669 --> 00:24:46,539
child right here

00:24:44,659 --> 00:24:48,740
what we can do is we can start passing

00:24:46,539 --> 00:24:51,110
information specifically to each

00:24:48,740 --> 00:24:53,360
individual child separately rather than

00:24:51,110 --> 00:24:55,970
just putting the plopping the entire

00:24:53,360 --> 00:24:57,770
children variable in there and so what

00:24:55,970 --> 00:25:00,320
I'm going to do is I'm going to do a

00:24:57,770 --> 00:25:03,039
little switcheroo move this accordion

00:25:00,320 --> 00:25:06,620
context inside of here

00:25:03,039 --> 00:25:08,630
don't yell at me yet I'm fixing it there

00:25:06,620 --> 00:25:12,110
we go and then I'm going to wrap these

00:25:08,630 --> 00:25:14,659
in brackets and so now this child each

00:25:12,110 --> 00:25:16,309
of them has this separate provider that

00:25:14,659 --> 00:25:18,200
still does the active index and set

00:25:16,309 --> 00:25:21,710
active index that's still a normal thing

00:25:18,200 --> 00:25:24,799
but now we can also pass its its own

00:25:21,710 --> 00:25:27,409
index and so in case you didn't know it

00:25:24,799 --> 00:25:30,289
the second parameter to map is an index

00:25:27,409 --> 00:25:33,770
and so I can pass in index right here

00:25:30,289 --> 00:25:36,590
and now the value that a child gets it

00:25:33,770 --> 00:25:39,559
has access to the this index variable

00:25:36,590 --> 00:25:45,890
and so I can get rid of this to do right

00:25:39,559 --> 00:25:47,720
here and do index right here okay and

00:25:45,890 --> 00:25:55,659
then I can also get the index right here

00:25:47,720 --> 00:25:55,659
to index like this what look at that oh

00:25:57,429 --> 00:26:03,350
thank you thank you and so I just think

00:26:01,940 --> 00:26:07,309
that's so cool and I'm so happy it

00:26:03,350 --> 00:26:09,289
worked but the fact that you can kind of

00:26:07,309 --> 00:26:11,169
make this component it's it's a lot of

00:26:09,289 --> 00:26:13,340
lines of code and that's also because I

00:26:11,169 --> 00:26:15,919
decreased my line lengths and everything

00:26:13,340 --> 00:26:18,080
for the demo but the fact that you can

00:26:15,919 --> 00:26:20,270
create a component like this is really

00:26:18,080 --> 00:26:21,830
powerful because now let's just say I'm

00:26:20,270 --> 00:26:24,649
the person that wants to rearrange the

00:26:21,830 --> 00:26:27,679
icons I can take out this and do Dorne

00:26:24,649 --> 00:26:30,529
burn like this and then voila

00:26:27,679 --> 00:26:33,860
it's rearranged it's just done and as a

00:26:30,529 --> 00:26:35,870
user of this UI library I can make the

00:26:33,860 --> 00:26:38,059
changes that I want and if I say oh well

00:26:35,870 --> 00:26:40,580
actually I want to rearrange these I can

00:26:38,059 --> 00:26:43,130
put a section down here like this or

00:26:40,580 --> 00:26:45,200
let's just say I not only want the

00:26:43,130 --> 00:26:46,590
content to be on the bottom but I also

00:26:45,200 --> 00:26:49,110
want it to be on the top

00:26:46,590 --> 00:26:52,289
it'll look weird but hey look at that

00:26:49,110 --> 00:26:54,840
now it just pops up both and that's

00:26:52,289 --> 00:26:57,269
that's that's what I want gosh darn it

00:26:54,840 --> 00:26:59,460
and so you're giving you're giving the

00:26:57,269 --> 00:27:01,889
power to your users to use this kind of

00:26:59,460 --> 00:27:04,019
API oh and I just realized I didn't

00:27:01,889 --> 00:27:06,990
actually implement the disableds part we

00:27:04,019 --> 00:27:08,639
can do that really quick so because we

00:27:06,990 --> 00:27:11,730
know that the disabled part is going to

00:27:08,639 --> 00:27:14,639
be a prop on section and I'm going to

00:27:11,730 --> 00:27:16,740
move it down back here again and maybe

00:27:14,639 --> 00:27:20,460
get rid of that second thing because

00:27:16,740 --> 00:27:22,919
that was confusing even for me we'll

00:27:20,460 --> 00:27:24,629
keep it on top though cuz it's weird so

00:27:22,919 --> 00:27:27,450
anyway we want to we want to add this

00:27:24,629 --> 00:27:29,549
disabled prop to section and so we know

00:27:27,450 --> 00:27:31,590
that this is going to be a boolean prop

00:27:29,549 --> 00:27:33,690
that's passed to section but we want to

00:27:31,590 --> 00:27:36,570
be able to tell all of our children

00:27:33,690 --> 00:27:40,440
about it without explicitly doing it so

00:27:36,570 --> 00:27:43,409
what do we got to use yeah you're

00:27:40,440 --> 00:27:45,269
learning okay great so what we can do is

00:27:43,409 --> 00:27:48,299
we can just make another context and we

00:27:45,269 --> 00:27:50,669
can say section context you can have

00:27:48,299 --> 00:27:53,779
contexts within context it's like that

00:27:50,669 --> 00:27:58,470
movie Inception but its context ception

00:27:53,779 --> 00:28:00,269
and we'll do create context and we'll

00:27:58,470 --> 00:28:05,789
just we'll do the exact same thing I'll

00:28:00,269 --> 00:28:08,879
do section context dot context dot

00:28:05,789 --> 00:28:14,159
provider and then just pass the children

00:28:08,879 --> 00:28:20,580
inside of there like that and now we can

00:28:14,159 --> 00:28:22,769
give it this value of disabled and so

00:28:20,580 --> 00:28:25,320
now all the children have access to this

00:28:22,769 --> 00:28:28,350
value and so we have this is disabled

00:28:25,320 --> 00:28:30,090
equals false now we can pull disabled

00:28:28,350 --> 00:28:34,249
out and we're just calling it disabled

00:28:30,090 --> 00:28:37,409
here and we can do use context of

00:28:34,249 --> 00:28:41,820
section context like this and take away

00:28:37,409 --> 00:28:44,129
our to-do and oh I got to stick that in

00:28:41,820 --> 00:28:47,909
there but besides that oh and I need to

00:28:44,129 --> 00:28:53,009
add my double ternary beauty thing like

00:28:47,909 --> 00:28:55,289
this disabled and then disabled like

00:28:53,009 --> 00:28:56,730
that Hey look at that

00:28:55,289 --> 00:28:57,840
and the

00:28:56,730 --> 00:29:00,150
that's how that's how we had the

00:28:57,840 --> 00:29:02,400
disabled thing but anyway again you can

00:29:00,150 --> 00:29:04,650
have context within context I could even

00:29:02,400 --> 00:29:07,230
put my CSS probably can't handle it but

00:29:04,650 --> 00:29:10,650
I could even put an accordion within an

00:29:07,230 --> 00:29:12,690
accordion and again because I have like

00:29:10,650 --> 00:29:14,310
a set width and centering thing and

00:29:12,690 --> 00:29:16,200
everything because this is a demo it

00:29:14,310 --> 00:29:18,510
will probably break everything but I

00:29:16,200 --> 00:29:20,790
could do that and that's because of the

00:29:18,510 --> 00:29:23,400
way the way context works is it takes

00:29:20,790 --> 00:29:26,370
like the most specific context similar

00:29:23,400 --> 00:29:28,530
to how CSS works and so it would know

00:29:26,370 --> 00:29:30,180
that this is an accordion within an

00:29:28,530 --> 00:29:32,010
accordion and you can you can poke

00:29:30,180 --> 00:29:34,530
around with it I put all of this on

00:29:32,010 --> 00:29:37,800
github by the way so you can pull it up

00:29:34,530 --> 00:29:41,340
and I can show you but anyway back to

00:29:37,800 --> 00:29:43,110
slides compound components are great

00:29:41,340 --> 00:29:45,780
because they give the user of your

00:29:43,110 --> 00:29:49,380
library control of the markup so similar

00:29:45,780 --> 00:29:52,620
how we as users of HTML tables can

00:29:49,380 --> 00:29:54,540
rearrange the rows and the data and

00:29:52,620 --> 00:29:56,790
everything however we want someone who's

00:29:54,540 --> 00:29:58,920
using our own compound component library

00:29:56,790 --> 00:30:00,600
can do the exact same thing and it might

00:29:58,920 --> 00:30:03,120
look weird if they don't use it right

00:30:00,600 --> 00:30:05,700
but with with the right guardrails in

00:30:03,120 --> 00:30:08,160
place and everything you can really just

00:30:05,700 --> 00:30:09,630
kind of let them go free with all of

00:30:08,160 --> 00:30:11,880
your different components and give

00:30:09,630 --> 00:30:16,440
you're giving them the Lego set to build

00:30:11,880 --> 00:30:17,970
a nice nice Lego masterpiece and what's

00:30:16,440 --> 00:30:21,180
nice too is there's a separation of

00:30:17,970 --> 00:30:23,280
concerns and so any logic with state and

00:30:21,180 --> 00:30:25,170
and and different business logic and

00:30:23,280 --> 00:30:28,050
stuff is kind of separate from rendering

00:30:25,170 --> 00:30:30,540
and also the parent doesn't have to care

00:30:28,050 --> 00:30:32,040
how the children are rendered or how

00:30:30,540 --> 00:30:33,480
many children are rendered it just knows

00:30:32,040 --> 00:30:35,070
that it's supposed to render children

00:30:33,480 --> 00:30:37,170
and it's supposed to pass a certain

00:30:35,070 --> 00:30:39,840
amount of state the state is just

00:30:37,170 --> 00:30:42,390
managed as a whole as a big compound

00:30:39,840 --> 00:30:45,690
component hence the context that's being

00:30:42,390 --> 00:30:47,700
passed around but the children

00:30:45,690 --> 00:30:49,320
themselves they just have their job and

00:30:47,700 --> 00:30:51,420
they do it well and so having that kind

00:30:49,320 --> 00:30:54,270
of separation there that modularity

00:30:51,420 --> 00:30:56,400
makes it much more easy to maintain and

00:30:54,270 --> 00:30:57,930
and debug whenever something's going

00:30:56,400 --> 00:31:00,120
wrong you know it will be in that

00:30:57,930 --> 00:31:02,040
specific title component or content

00:31:00,120 --> 00:31:03,840
component rather than saying okay well

00:31:02,040 --> 00:31:05,070
it's somewhere in this giant accordion

00:31:03,840 --> 00:31:08,040
we'll figure it out

00:31:05,070 --> 00:31:10,030
and then also extensibility if let's

00:31:08,040 --> 00:31:12,010
just say you wanted to

00:31:10,030 --> 00:31:14,800
an accordion but you wanted to be able

00:31:12,010 --> 00:31:17,320
to add some kind of special styling or

00:31:14,800 --> 00:31:19,420
some kind of special type of component

00:31:17,320 --> 00:31:21,970
that just means that someone can create

00:31:19,420 --> 00:31:24,100
their own little component that can be

00:31:21,970 --> 00:31:26,200
built right into your compound component

00:31:24,100 --> 00:31:27,940
and and it's really flexible you can

00:31:26,200 --> 00:31:30,070
extend it different ways you can add as

00:31:27,940 --> 00:31:32,830
many types of children as you want

00:31:30,070 --> 00:31:34,960
without having to rewrite your entire

00:31:32,830 --> 00:31:36,670
API or add another prop and add a bunch

00:31:34,960 --> 00:31:39,160
of if statements everywhere in case that

00:31:36,670 --> 00:31:42,880
prop exists and and it's really really

00:31:39,160 --> 00:31:45,430
powerful and so I guess I you saw the

00:31:42,880 --> 00:31:47,980
Thank You slide but anyway the that's

00:31:45,430 --> 00:31:49,570
that's my pitch for for using compound

00:31:47,980 --> 00:31:51,990
components for building reusable

00:31:49,570 --> 00:31:56,990
libraries and thank you very much

00:31:51,990 --> 00:31:56,990
[Applause]

00:31:58,789 --> 00:32:10,320
hmm yeah I can questions okay cool cool

00:32:04,140 --> 00:32:12,809
there's anyone have any questions sure

00:32:10,320 --> 00:32:14,520
all so that's my that's both my Twitter

00:32:12,809 --> 00:32:16,620
and github username and I literally

00:32:14,520 --> 00:32:19,230
pushed it to github like right before my

00:32:16,620 --> 00:32:30,240
talk so look for accordion on that if

00:32:19,230 --> 00:32:31,919
you want to this is on yeah thank you

00:32:30,240 --> 00:32:32,520
very much for for the talk was really

00:32:31,919 --> 00:32:34,919
inspiring

00:32:32,520 --> 00:32:36,659
so I've killed a couple of tees compound

00:32:34,919 --> 00:32:39,120
components and I think they're really

00:32:36,659 --> 00:32:40,740
good to provide a lot of flexibility but

00:32:39,120 --> 00:32:42,510
so one thing I saw is that they're a bit

00:32:40,740 --> 00:32:44,640
harder to optimize for performance since

00:32:42,510 --> 00:32:47,280
they tend to achieve except children and

00:32:44,640 --> 00:32:49,380
the change on every render so that made

00:32:47,280 --> 00:32:50,880
me question maybe there are areas of an

00:32:49,380 --> 00:32:52,830
app where they're more suitable and

00:32:50,880 --> 00:32:54,990
others where they're less suitable like

00:32:52,830 --> 00:32:56,760
maybe more for like the design system

00:32:54,990 --> 00:32:59,549
compound components and maybe app level

00:32:56,760 --> 00:33:02,130
more like kind of single entry as you

00:32:59,549 --> 00:33:04,260
put it what's your experience there yeah

00:33:02,130 --> 00:33:05,789
so that's that's a good question and

00:33:04,260 --> 00:33:08,010
performance is always the thing that

00:33:05,789 --> 00:33:10,440
people bring up especially when context

00:33:08,010 --> 00:33:13,559
is concerned because I think I think

00:33:10,440 --> 00:33:15,210
context is still new enough that it

00:33:13,559 --> 00:33:18,150
needs to be improved and that in that

00:33:15,210 --> 00:33:21,330
regard with with compound components and

00:33:18,150 --> 00:33:24,929
just in general I feel like once once

00:33:21,330 --> 00:33:25,950
context and reducers are optimized to

00:33:24,929 --> 00:33:27,929
the nth degree

00:33:25,950 --> 00:33:29,190
we don't need Redux anymore but that's a

00:33:27,929 --> 00:33:36,360
whole other debate I'm not going to get

00:33:29,190 --> 00:33:38,370
into anyway but I think I think with

00:33:36,360 --> 00:33:40,140
regards to that

00:33:38,370 --> 00:33:43,760
yes it's I think these are great for

00:33:40,140 --> 00:33:46,950
design systems specifically and that

00:33:43,760 --> 00:33:49,320
being said it can be a container for any

00:33:46,950 --> 00:33:53,010
kind of state that you want in an

00:33:49,320 --> 00:33:54,750
application a really solid example I

00:33:53,010 --> 00:33:56,610
guess of a compound component that is

00:33:54,750 --> 00:33:59,190
used not just in a design system but at

00:33:56,610 --> 00:34:01,530
the app level is react router it's a

00:33:59,190 --> 00:34:03,840
browser router and every route component

00:34:01,530 --> 00:34:06,090
inside of theirs is just a component

00:34:03,840 --> 00:34:07,770
that is using the context of that

00:34:06,090 --> 00:34:11,490
container for the history API and

00:34:07,770 --> 00:34:15,240
everything and so I would say

00:34:11,490 --> 00:34:17,070
yes you're right there are still some

00:34:15,240 --> 00:34:20,250
performance things that could be

00:34:17,070 --> 00:34:22,530
improved with context but I think that

00:34:20,250 --> 00:34:24,599
that's it's the kind of thing where

00:34:22,530 --> 00:34:27,089
react just pretty good at optimizing

00:34:24,599 --> 00:34:29,609
itself it's our own calculations in our

00:34:27,089 --> 00:34:31,290
own code that need to be memorized and

00:34:29,609 --> 00:34:33,480
improved so that way we don't have to

00:34:31,290 --> 00:34:35,629
worry about rear Enders as being the

00:34:33,480 --> 00:34:37,740
thing that's slowed down our application

00:34:35,629 --> 00:34:43,730
hopefully that kind of answered your

00:34:37,740 --> 00:34:49,710
question Thanks yes any other question

00:34:43,730 --> 00:34:55,609
I'm sorry I'm sorry do you want a hug or

00:34:49,710 --> 00:34:58,410
something yes yeah it's true anyway

00:34:55,609 --> 00:35:01,680
question okay I'm gonna do the three two

00:34:58,410 --> 00:35:12,000
one thing and one question is gonna pop

00:35:01,680 --> 00:35:16,680
up three two one cool oh no I know I I

00:35:12,000 --> 00:35:17,300
was I have nothing to say cool thanks

00:35:16,680 --> 00:35:20,039
everyone

00:35:17,300 --> 00:35:20,039

YouTube URL: https://www.youtube.com/watch?v=eBaA_jESC-A


