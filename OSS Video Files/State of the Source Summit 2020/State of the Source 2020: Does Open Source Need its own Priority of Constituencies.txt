Title: State of the Source 2020: Does Open Source Need its own Priority of Constituencies
Publication date: 2020-09-17
Playlist: State of the Source Summit 2020
Description: 
	Does Open Source Need its own Priority of Constituencies
Tobie Langel

What do you do when the interest of your different constituencies are in conflict? Who do you favor and why? The 4 Freedoms and the (OSD) were designed for a small community of hobbyists. They offer little help when it comes to addressing the challenges open source faces today. Does open source need a W3C-inspired "priority of constituencies?" In this talk we’ll dig into the priority of constituencies, see how it could apply to open source, and get some interesting insights out of doings so.

Session Slides: https://drive.google.com/file/d/1ZJP41c8oxxqLYFTeUFJtJADm6h6XrrQ6/view?usp=sharing

Thank you to our Video Recordings Sponsor eng@salesforce!
Full Program: https://eventyay.com/e/8fa7fd14/schedule
Captions: 
	00:00:07,359 --> 00:00:11,200
so if there's something that i believe we can all agree on is

00:00:11,200 --> 00:00:15,160
that open source is in the middle of a complex and

00:00:15,160 --> 00:00:18,720
multifaceted crisis

00:00:20,080 --> 00:00:26,400
that was really brought to attention to to me at least a couple of years ago

00:00:26,400 --> 00:00:32,559
by um nadia eghbal's work roads and bridges which talked

00:00:32,559 --> 00:00:38,000
about the work and the sustainability issues behind

00:00:38,000 --> 00:00:43,440
that our digital infrastructure more recently

00:00:43,440 --> 00:00:47,600
folks like john mark wrote why open source failed in medium

00:00:47,600 --> 00:00:52,800
and its follow-up save open source save the world

00:00:53,280 --> 00:00:59,840
mike overby answered john mark's article claiming that corporate abuse

00:00:59,840 --> 00:01:06,640
was really the source of the problem there's been a whole careful over

00:01:06,640 --> 00:01:14,720
cloud companies using software and and taking the value of

00:01:14,720 --> 00:01:20,640
the work of open source companies uh there's been obviously answers to

00:01:20,640 --> 00:01:23,040
that from the cloud companies themselves such

00:01:23,040 --> 00:01:27,759
as in this article here on keeping open source open by releasing a

00:01:27,759 --> 00:01:31,200
an open distribution of elastic search or a fork

00:01:31,200 --> 00:01:37,439
depending on who you ask and and what their opinion on the topic is and

00:01:37,439 --> 00:01:40,560
more recently we've also seen the emergence of

00:01:40,560 --> 00:01:44,399
ethical issues in the ethical open source movement

00:01:44,399 --> 00:01:51,439
here an article by coraline ada ehmke in modern view culture

00:01:51,439 --> 00:01:58,719
and just this summer bruce perens the inventor of the open source

00:01:58,719 --> 00:02:03,360
definition and one of the founders of the open source initiative

00:02:03,360 --> 00:02:09,280
released this video of him which was titled what comes after open

00:02:09,280 --> 00:02:12,560
source and really acknowledges some of the

00:02:12,560 --> 00:02:18,959
failures that the open source movement has had so far

00:02:19,280 --> 00:02:22,720
so what's interesting if we look at all of this

00:02:22,720 --> 00:02:25,920
all of these different aspects all these different facets of this

00:02:25,920 --> 00:02:33,360
crisis is that they're really centered around three main areas

00:02:33,360 --> 00:02:40,000
one is the increased cost of maintaining software to individuals

00:02:40,000 --> 00:02:46,640
so maintain or burnout essentially the second one is

00:02:46,640 --> 00:02:52,319
a number of actors in the open source community feeling that cloud

00:02:52,319 --> 00:02:56,080
infrastructure companies are essentially capturing all of the

00:02:56,080 --> 00:03:01,680
value of the open source work and that the actual companies or the

00:03:01,680 --> 00:03:06,800
actual individuals creating the software aren't getting

00:03:06,800 --> 00:03:13,519
a fair part of the of the value they're creating and then the the last

00:03:13,519 --> 00:03:20,720
current is one that is really concerned about the ethical aspects of open source

00:03:20,720 --> 00:03:25,519
and the impact of software on end users

00:03:26,080 --> 00:03:30,319
and so this begs the question well what's really going on here

00:03:30,319 --> 00:03:33,440
and in fact what we're seeing here what we're witnessing

00:03:33,440 --> 00:03:42,879
is the emergence of new constituencies that we have to cater for and take care

00:03:44,840 --> 00:03:51,440
of so why is having new constituencies

00:03:51,440 --> 00:03:57,680
creating a crisis why aren't the tools that we have

00:03:57,680 --> 00:04:04,400
today to to make decisions and choices in the open source community

00:04:04,799 --> 00:04:07,840
adapted to dealing with this new situation

00:04:07,840 --> 00:04:11,680
well to really understand that what we have to look at

00:04:11,680 --> 00:04:15,840
is the origin of when the four freedoms in the open source definition were

00:04:15,840 --> 00:04:18,479
created and sort of what the ecosystem looked

00:04:18,479 --> 00:04:22,639
like back then compared to what it is today let's

00:04:22,639 --> 00:04:27,680
consider that today open source and software are ubiquitous

00:04:27,680 --> 00:04:32,000
there are more than four billion people that have access to internet

00:04:32,000 --> 00:04:38,720
there are tens of millions of developers professional and and non-professional

00:04:38,720 --> 00:04:42,160
and and software and open source is is broadly spread

00:04:42,160 --> 00:04:48,560
across the world all of this contrasts dearly with what open source

00:04:48,560 --> 00:04:51,840
and free software look like when the four

00:04:51,840 --> 00:04:59,120
freedoms in the osd were defined we're looking back then at a

00:04:59,120 --> 00:05:05,520
way smaller ecosystem and developers

00:05:05,520 --> 00:05:09,680
and people using computers back then were often referred to

00:05:09,680 --> 00:05:12,960
there were either professional developers working for

00:05:12,960 --> 00:05:16,800
large companies or they were referred to as hobbyists

00:05:16,800 --> 00:05:21,840
there was no really computing was not really something that would

00:05:21,840 --> 00:05:25,360
happen in sort of like your day-to-day if you weren't

00:05:25,360 --> 00:05:28,400
either professionally involved with software

00:05:28,400 --> 00:05:33,039
or if you were if that was a hobby of you or something you were invested in

00:05:33,039 --> 00:05:37,520
and in both cases uh the that ecosystem was

00:05:37,520 --> 00:05:45,199
tiny uh north american based essentially um californian to a lot of degrees

00:05:45,199 --> 00:05:48,720
and there was a huge overlap between the people that were actually using the

00:05:48,720 --> 00:05:52,080
software and the people that were developing it because the software

00:05:52,080 --> 00:05:55,759
was so hard to use so complex you really needed programming

00:05:55,759 --> 00:06:02,400
skills to be able to do anything with it right so the four

00:06:02,400 --> 00:06:06,960
freedoms and the osd are sort of guiding principles for open source were

00:06:06,960 --> 00:06:10,000
designed in that context and with that

00:06:10,000 --> 00:06:14,639
environment in mind right which is very very

00:06:14,639 --> 00:06:18,880
different than the one that we have today

00:06:18,880 --> 00:06:25,840
and so the question is well was that changing

00:06:25,840 --> 00:06:30,080
context essentially and was the increased diversity of constituencies

00:06:30,080 --> 00:06:35,840
that we have today what do we do and how do we handle this

00:06:40,639 --> 00:06:44,800
so having to handle a broad set of constituencies

00:06:44,800 --> 00:06:51,759
and there potentially conflicting opinions and wants and needs around the

00:06:51,759 --> 00:06:55,199
same topic is nothing new lots of organizations in

00:06:55,199 --> 00:07:00,240
the past have been faced with that problem and one of the

00:07:00,240 --> 00:07:02,479
ones that i'm fairly familiar with that have

00:07:02,479 --> 00:07:09,599
worked for and was for a long time in the web standardization space is w3c

00:07:09,599 --> 00:07:14,840
and w3c has built a over a decade ago a concept called the priority of

00:07:14,840 --> 00:07:19,840
constituencies and it it was actually born in the html

00:07:19,840 --> 00:07:24,240
working group irc channel on the 27th of march

00:07:24,240 --> 00:07:32,319
2007 and the idea was really to write down principles that had been

00:07:32,319 --> 00:07:37,919
in use by the group to make decisions in case of conflict

00:07:37,919 --> 00:07:41,840
and so the first iteration of this ended up

00:07:41,840 --> 00:07:46,160
in the design principle the html design principles

00:07:46,160 --> 00:07:49,520
and i'm just going to read you the beginning of the priority of

00:07:49,520 --> 00:07:53,280
constituency so you have an idea of what it actually describes

00:07:53,280 --> 00:08:00,400
it says in case of conflict consider users over authors so authors

00:08:00,400 --> 00:08:04,479
is w3c lingo to describe web developers

00:08:04,479 --> 00:08:09,199
over implementers who are the engineers in them the company is actually building

00:08:09,199 --> 00:08:12,319
the browsers themselves over specific

00:08:12,319 --> 00:08:14,960
specifiers for the people writing the specs

00:08:14,960 --> 00:08:19,599
over theoretical purity so what's interesting here is that we have

00:08:19,599 --> 00:08:24,080
both a tool that's designed to organize constituencies

00:08:24,080 --> 00:08:30,560
and uh and and see which one are favored from a a cost effectiveness um

00:08:30,560 --> 00:08:37,200
perspective but it's also a tool that really refocuses

00:08:37,200 --> 00:08:40,959
um the whole point of building web standards and

00:08:40,959 --> 00:08:46,000
and the internet on servicing end users rather than the other constituencies

00:08:46,000 --> 00:08:50,640
that are there to help create that promise so if we turn this

00:08:50,640 --> 00:08:54,720
into sort of an equation we have this right it's end users over

00:08:54,720 --> 00:09:01,120
authors over implementers over spec editors over theoretical purity

00:09:01,760 --> 00:09:05,600
and of course uh from a sort of like cost effectiveness perspective that

00:09:05,600 --> 00:09:09,440
makes a lot of sense because if we look at the size of each constituency we have

00:09:09,440 --> 00:09:14,800
end users are in the billions right there are millions of developers

00:09:14,800 --> 00:09:18,399
something around 20 to 40 million depending on who you ask

00:09:18,399 --> 00:09:25,279
and it's moving quickly implementers are the engineers and the the pms and

00:09:25,279 --> 00:09:29,440
other people working for browser vendors and so they're in

00:09:29,440 --> 00:09:32,480
the thousands and spec editors are probably in the

00:09:32,480 --> 00:09:36,640
tenths to the hundreds depending on who exactly you include in that group

00:09:36,640 --> 00:09:39,920
and then of course you have theoretical purity which

00:09:39,920 --> 00:09:46,000
doesn't really is not really in the same operating the same space

00:09:46,000 --> 00:09:49,519
um and so another way of looking at that is sort of like

00:09:49,519 --> 00:09:52,640
you know imagining the cost of one hour of

00:09:52,640 --> 00:09:56,640
work if a spec editor says well i don't really want to spend an hour of work to

00:09:56,640 --> 00:09:59,200
like clarify this problem that's probably

00:09:59,200 --> 00:10:02,800
going to cost hundreds of hours at the implementer level to

00:10:02,800 --> 00:10:08,079
um of bugginess of like bug fixing of lack of clarity of misunderstandings of

00:10:08,079 --> 00:10:11,760
reading the specs etc and those bugs are probably going to

00:10:11,760 --> 00:10:18,160
cost like millions of hours at the web developer level and you know this is

00:10:18,160 --> 00:10:22,640
going to have an impact of billions of hours at the end user right because

00:10:22,640 --> 00:10:25,680
every time you're sort of like increasing

00:10:25,680 --> 00:10:31,680
a thousand fold basically sort of between those different levels which is

00:10:31,680 --> 00:10:37,600
why you really want to make sure that you move everything um

00:10:37,600 --> 00:10:42,480
towards upstream as possible because that's uh much more cost effective

00:10:42,480 --> 00:10:47,519
and is much better for for end users and that should be the goal of

00:10:47,519 --> 00:10:53,120
software in general um what's interesting is if if you look at

00:10:53,120 --> 00:10:56,480
this formula again and you focus on the end

00:10:56,480 --> 00:11:01,279
user bit and the theoretical purity but right and you sort of like bring

00:11:01,279 --> 00:11:06,480
them together this reminds me a lot of the apache

00:11:06,480 --> 00:11:11,600
software foundation mantra of people over code right

00:11:11,600 --> 00:11:15,279
so and you know and these two different organizations

00:11:15,279 --> 00:11:19,440
solving sort of like different problems and of course the people over code

00:11:19,440 --> 00:11:23,200
of um the apache software foundation is really about

00:11:23,200 --> 00:11:27,200
the community around the the open source project

00:11:27,200 --> 00:11:32,800
and so so not necessarily the broader constituencies yet but it you know it

00:11:32,800 --> 00:11:37,040
has the same notion of people over code um that we

00:11:37,040 --> 00:11:41,680
that we see in the w3c um priority of constituencies which is

00:11:41,680 --> 00:11:45,920
really end users of a theoretical purity

00:11:49,279 --> 00:11:53,279
so what would an open source priority of constituencies look like

00:11:53,279 --> 00:11:56,880
well in order to find that out what we have to do

00:11:56,880 --> 00:12:00,240
is list all of the constituencies of open source

00:12:00,240 --> 00:12:06,480
today so beyond just the developer and the user of a piece of software

00:12:06,480 --> 00:12:09,600
and see how we could organize them in a way

00:12:09,600 --> 00:12:17,040
similar to how w3c has organized their own constituents

00:12:17,839 --> 00:12:25,600
so who do we have in open source well we have of course maintainers

00:12:25,600 --> 00:12:31,120
which can be individuals or corporations we have contributors which also can be

00:12:31,120 --> 00:12:36,480
both individuals and corporations we have the cloud infrastructure we have

00:12:36,480 --> 00:12:39,680
application developers which are using open source

00:12:39,680 --> 00:12:43,519
to produce closed source software or using open source to produce

00:12:43,519 --> 00:12:48,079
more open source software and then of course we have end users of the software

00:12:48,079 --> 00:12:53,600
that's produced that way and we have people that are impacted by

00:12:53,600 --> 00:12:58,399
the software but not even using it for example consider someone that is

00:12:58,399 --> 00:13:03,600
walking down the street and who is being

00:13:03,600 --> 00:13:10,880
filmed and who um who is being recognized by um

00:13:10,880 --> 00:13:15,519
facial recognition using software that's being created by someone somewhere

00:13:15,519 --> 00:13:18,560
right so not even aware that they're being

00:13:18,560 --> 00:13:22,320
that they're all using software right now but still

00:13:22,320 --> 00:13:30,000
subject to it so if we sort of organize all of these different constituencies

00:13:30,000 --> 00:13:35,680
in a similar structure focusing strictly on

00:13:35,680 --> 00:13:43,600
how how costly it is to implement a solution or a feature at every level

00:13:43,600 --> 00:13:50,560
um this is what we get right so we get people over end users over app

00:13:50,560 --> 00:13:53,519
developers over cloud infrastructure over

00:13:53,519 --> 00:13:59,600
contributors over maintainers over theoretical purity and i'm sure you

00:13:59,600 --> 00:14:05,279
will be quick to point out that

00:14:05,279 --> 00:14:10,880
maintainers and contributors are already overworked and burning out

00:14:10,880 --> 00:14:17,519
how come they are above or or below in the considerations

00:14:17,519 --> 00:14:20,720
if if you will uh to cloud infrastructure

00:14:20,720 --> 00:14:24,959
well from a cost effectiveness perspective that makes sense right

00:14:24,959 --> 00:14:30,079
because fixing something in the upstream project and that you know at the

00:14:30,079 --> 00:14:35,279
maintainer level if you will is way more effective than having every

00:14:35,279 --> 00:14:38,800
cloud infrastructure implement that change themselves and

00:14:38,800 --> 00:14:42,839
maintain a fork etc so so that that's the reasoning behind

00:14:42,839 --> 00:14:45,680
this but you're right to point out that this

00:14:45,680 --> 00:14:49,760
is a problem and we'll get to it immediately but to

00:14:49,760 --> 00:14:55,279
answer this we'll go back to see if w3c's priority of constituencies is

00:14:55,279 --> 00:15:00,720
actually a silver bullet a bullet for w3c itself

00:15:03,199 --> 00:15:09,839
to answer this we have to consider the economic situation of the different

00:15:09,839 --> 00:15:14,399
constituencies let's look at this

00:15:15,040 --> 00:15:21,680
obviously end users are individuals with varying financial means but

00:15:21,680 --> 00:15:27,120
generally compared to large implementers

00:15:27,120 --> 00:15:35,199
are really in on the low end of the sort of financial ability

00:15:35,199 --> 00:15:42,639
authors can be a single person publishing content on the web all the

00:15:42,639 --> 00:15:44,959
way to multi-billion dollar corporations

00:15:44,959 --> 00:15:49,759
like facebook so obviously um

00:15:49,759 --> 00:15:53,120
how well-off they are in their economic situation

00:15:53,120 --> 00:15:57,440
um is is extremely broad like the fork is extremely broad

00:15:57,440 --> 00:16:01,360
but generally they're we can consider them

00:16:01,360 --> 00:16:05,680
better off in a more stable economic situation than end users

00:16:05,680 --> 00:16:11,920
of course implementers although there are smaller

00:16:12,320 --> 00:16:16,720
browser vendors among the biggest browser vendors

00:16:16,720 --> 00:16:20,800
apple and google and to some degree microsoft

00:16:20,800 --> 00:16:25,440
are also some of the largest companies in the world

00:16:25,440 --> 00:16:30,160
now spec editors oftentimes uh work for implementers but that's not

00:16:30,160 --> 00:16:34,839
always the case it's actually extremely valuable to get the

00:16:34,839 --> 00:16:38,079
perspective of

00:16:39,199 --> 00:16:43,120
spec editors who are not working for large corporations

00:16:43,120 --> 00:16:47,360
and who can drive what end users care about

00:16:47,360 --> 00:16:51,360
or even what developers and authors care about in a more

00:16:51,360 --> 00:16:55,519
uh was more sort of personal experience than them

00:16:55,519 --> 00:16:58,639
and it turns out that that's what when that's the case

00:16:58,639 --> 00:17:02,399
uh as you can see there's something sort of if you focus

00:17:02,399 --> 00:17:07,039
on the implementer to spec at his editor of space

00:17:07,039 --> 00:17:10,959
well we had this nice progression of

00:17:11,520 --> 00:17:15,199
increasing an increasingly better economic situation

00:17:15,199 --> 00:17:19,199
as we moved upstream and had to do more work

00:17:19,199 --> 00:17:22,640
we have this like weird tension weird drop

00:17:22,640 --> 00:17:30,320
right here right and and this of course is um highly problematic

00:17:30,320 --> 00:17:36,240
because it tends to push spec editors who are operating in that

00:17:36,240 --> 00:17:40,799
space was on one hand the the will to do good

00:17:40,799 --> 00:17:44,840
and sort of the pressure to fulfill this priority of

00:17:44,840 --> 00:17:51,039
constituencies and really take on the work at the spec editor level

00:17:51,039 --> 00:17:56,160
to make sure that the work doesn't need to be done

00:17:56,160 --> 00:18:02,000
multiple times downstream um but of course that ends up being

00:18:02,000 --> 00:18:06,480
extremely costly for um spec

00:18:06,480 --> 00:18:09,919
editors in in just in terms of like financial

00:18:09,919 --> 00:18:17,200
um situation and sometimes even in terms of mental health generated from sort of

00:18:17,200 --> 00:18:19,120
like the stress of having to handle the

00:18:19,120 --> 00:18:24,480
situation and doing that was extremely little financial means to

00:18:24,480 --> 00:18:29,679
do so so one of the solutions that have been

00:18:29,679 --> 00:18:34,080
that has started um to to take place is to have

00:18:34,080 --> 00:18:39,039
sort of implementers via w3c start helping

00:18:39,039 --> 00:18:46,480
fund spec editors or what we also call invited experts so people that come

00:18:46,480 --> 00:18:52,240
um that are not working for uh companies that are sort of independent and that

00:18:52,240 --> 00:18:58,080
are participating in the standards bodies um

00:18:58,080 --> 00:19:02,799
and so yeah this is another color wrote last year on the topic saying that

00:19:02,799 --> 00:19:07,360
w3c really wasn't doing enough to help its invited experts

00:19:07,360 --> 00:19:11,039
um so it the people writing now the standards

00:19:11,039 --> 00:19:14,960
and i'm sure that this whole tension of having people

00:19:14,960 --> 00:19:20,160
uh feel a lot of guilt um that they have to be working on something and

00:19:20,160 --> 00:19:24,240
not being really paid for it and feeling like they have to

00:19:24,240 --> 00:19:28,320
um rings about right this is the parallel here

00:19:28,320 --> 00:19:38,640
was the feeling of maintainers is very explicit

00:19:38,640 --> 00:19:45,039
if we go back to our open source priority of constituencies

00:19:45,200 --> 00:19:49,039
and we do what we did for the w3c one which is to look

00:19:49,039 --> 00:19:55,520
at the financial situation of every constituencies

00:19:55,520 --> 00:20:02,480
well um you know we see the same increase of

00:20:02,960 --> 00:20:07,440
financial buying power or whatever you want to call it as you move

00:20:07,440 --> 00:20:11,280
from people to end users to app developers to cloud infrastructure

00:20:11,280 --> 00:20:15,200
right and then at the contributors and maintainers level

00:20:15,200 --> 00:20:18,880
so i've split it up here between individuals and

00:20:18,880 --> 00:20:22,640
corporations to make it more clear right so individuals are not making a lot of

00:20:22,640 --> 00:20:28,320
money obviously and not don't have a really high uh financial

00:20:28,320 --> 00:20:32,400
situation corporations are usually better off right

00:20:32,400 --> 00:20:39,440
we sort of see emerge the same kind of issue here that we had in um

00:20:39,440 --> 00:20:46,840
w3 in w3c right which is concentration of

00:20:46,840 --> 00:20:54,559
money uh somewhere in the middle of this priority of constituencies or at least

00:20:54,559 --> 00:21:02,480
in a place that is not coherent with the necessity of having to do

00:21:02,480 --> 00:21:07,280
more work than

00:21:08,080 --> 00:21:14,080
constituencies that are before in the priority

00:21:14,799 --> 00:21:19,520
so again here um you know the solution that we've seen so

00:21:19,520 --> 00:21:23,360
far is to is to see app developers and cloud infrared start

00:21:23,360 --> 00:21:26,880
funding open source right and this is exactly

00:21:26,880 --> 00:21:31,520
what is happening to some degree through our foundations for example where

00:21:31,520 --> 00:21:35,840
uh large companies are sponsoring foundations which are then creating sort

00:21:35,840 --> 00:21:39,600
of like small travel funds and that kind of solution

00:21:39,600 --> 00:21:43,679
right so obviously um you know this is just

00:21:43,679 --> 00:21:50,559
one option of the solution to this particular problem but what i

00:21:50,559 --> 00:21:56,960
find interesting here is that this a priority of constituencies not only

00:21:56,960 --> 00:21:59,600
sort of like organizes the work in a logical way

00:21:59,600 --> 00:22:04,159
but also underline like makes it super obvious to see

00:22:04,159 --> 00:22:07,919
where they are going to have points of frictions in the future

00:22:07,919 --> 00:22:12,720
and um in advance right imagine now that we want to add sort of like

00:22:12,720 --> 00:22:18,480
community managers of software of open source software projects uh in

00:22:18,480 --> 00:22:22,480
this mix and to put those in in the priority of

00:22:22,480 --> 00:22:26,559
constituencies so they probably belong somewhere

00:22:26,560 --> 00:22:30,400
between contributors and maintainers i would suggest or between cloud

00:22:30,400 --> 00:22:35,200
infra and contributors either way we can see right away that

00:22:35,200 --> 00:22:40,000
these are going to be people who are don't have the mean the

00:22:40,000 --> 00:22:43,120
financial situation in the means of cloud infrastructure

00:22:43,120 --> 00:22:47,200
and yet are going to be responsible for a lot more work

00:22:47,200 --> 00:22:51,679
um and uh will have a lot more responsibility in

00:22:51,679 --> 00:22:57,200
accountability than people lower down the less right people who

00:22:57,200 --> 00:23:03,760
are more prioritized if you will and as a result we can already see

00:23:03,760 --> 00:23:07,440
that this is going to be problematic and i'm sure if if we

00:23:07,440 --> 00:23:10,720
just ask people in the room right now if we're like

00:23:10,720 --> 00:23:15,360
physically in the same room it would be fairly obvious that

00:23:15,360 --> 00:23:21,520
the same kind of issues around burnouts that we see from

00:23:21,520 --> 00:23:26,720
maintainers probably show up with community managers

00:23:26,720 --> 00:23:29,520
that are not funded directly by your large

00:23:29,520 --> 00:23:34,880
corporations a large corporation just the same so

00:23:34,880 --> 00:23:39,039
in conclusion what i really find valuable and interesting about a

00:23:39,039 --> 00:23:44,000
priority of constituency is that it keeps us focused

00:23:44,000 --> 00:23:49,360
on people and downstream impact what i do as an engineer as a maintainer

00:23:49,360 --> 00:23:52,559
as a contributor as an application developer as a cloud infrastructure

00:23:52,559 --> 00:23:57,440
provider impacts people and the priority of

00:23:57,440 --> 00:24:01,200
constituencies reminds us all the time about this i

00:24:01,200 --> 00:24:04,799
think that's really important and that is really close to the again

00:24:04,799 --> 00:24:11,919
the apache software foundation people over code guiding principle

00:24:12,240 --> 00:24:16,480
the second really interesting point of operative constituency is it maximizes

00:24:16,480 --> 00:24:20,559
the benefits to the commons by upstreaming work and then lastly

00:24:20,559 --> 00:24:23,440
which is the point i was just making earlier

00:24:23,440 --> 00:24:28,000
such a priority of constituency surfaces the discrepancies between the

00:24:28,000 --> 00:24:32,559
economic situation of individual of individual actors or actors

00:24:32,559 --> 00:24:38,640
in in this um in this framework and their work expectations

00:24:38,640 --> 00:24:42,960
right so because you want to maximize benefits to the commons by moving

00:24:42,960 --> 00:24:46,480
everything upstream you have to make sure that you also

00:24:46,480 --> 00:24:53,279
fund upstream actors so that you don't get huge discrepancies

00:24:53,279 --> 00:24:56,960
and all of the burnout issues that we were talking about

00:24:56,960 --> 00:25:02,400
and that we've seen affect people in our community

00:25:04,240 --> 00:25:08,640
if we have uh questions in the in the share notes but we don't

00:25:08,640 --> 00:25:10,880
um

00:25:12,320 --> 00:25:16,559
yeah did you see the nice touch someone is saying i'm wearing the same clothes

00:25:16,559 --> 00:25:19,679
so yes i am wearing the same clothes and i did that on purpose

00:25:19,679 --> 00:25:23,279
because i saw someone in one of the earlier talks drink

00:25:23,279 --> 00:25:29,840
the same drink so i thought i was going to up that i just had the time to do so

00:25:31,440 --> 00:25:34,720
so a question from jacob that says how do we fund/manage

00:25:34,720 --> 00:25:38,640
the back and forth of upstreaming work

00:25:38,640 --> 00:25:44,960
yeah that's a really good question um i think a priority of constituency is

00:25:44,960 --> 00:25:48,000
actually just underlines it shows surfaces the

00:25:48,000 --> 00:25:51,039
problem i i don't think it has uh provides

00:25:51,039 --> 00:25:56,000
answers to this and like it would be very presumptuous

00:25:56,000 --> 00:25:59,760
of of myself to try and answer this in um

00:25:59,760 --> 00:26:02,799
two minutes right now also i really haven't

00:26:02,799 --> 00:26:06,159
i mean this is a really hard difficult topic

00:26:06,159 --> 00:26:11,440
okay so someone else's uh talking about wearing the same

00:26:11,440 --> 00:26:15,120
t-shirt thank you oh there's a question here

00:26:15,120 --> 00:26:18,720
uh uh in uh assuming you have community agreement on a

00:26:18,720 --> 00:26:22,559
rng how do you get osi or anyone else to govern according to it

00:26:22,559 --> 00:26:26,880
i mean consistency constituencies ordering is good but as we have learned

00:26:26,880 --> 00:26:30,720
in places it may just be window dressing if not implemented to make policy

00:26:30,720 --> 00:26:33,279
decisions

00:26:34,880 --> 00:26:39,919
uh thank you jamie for the question that's i think that's a really good

00:26:39,919 --> 00:26:45,440
question um i i think really my aim here was

00:26:45,440 --> 00:26:50,400
more to just suggest that the there were interesting tools that other communities

00:26:50,400 --> 00:26:54,000
were using to solve similar problems or at least

00:26:54,000 --> 00:26:56,320
problems that i find similar to the ones that we're

00:26:56,320 --> 00:27:01,520
facing today in open source and that we should consider those um

00:27:01,520 --> 00:27:05,840
like from an implementation perspective how exactly do we implement this and had

00:27:05,840 --> 00:27:08,640
exactly we get different actors in the field

00:27:08,640 --> 00:27:14,960
um to to adopt those i i don't i don't have good

00:27:14,960 --> 00:27:19,919
answers to that yet um georg asks how would i start to

00:27:19,919 --> 00:27:23,120
create a priority of constituencies in my own community or is that the wrong

00:27:23,120 --> 00:27:28,240
approach um that's a good question um

00:27:28,240 --> 00:27:36,640
i think that the the way w3c's

00:27:36,640 --> 00:27:40,159
constituency is extremely powerful is that it's

00:27:40,159 --> 00:27:43,840
it's fairly simple and it's used across the whole

00:27:43,840 --> 00:27:51,440
um web standardization community so my inclination would be to have one for

00:27:51,440 --> 00:27:56,559
open source um or maybe to have one for

00:27:56,559 --> 00:28:00,480
a few types of different open source projects

00:28:00,480 --> 00:28:04,880
maybe like we have a contributor covenant um

00:28:04,880 --> 00:28:10,799
so you know have like some basic uh sort of template that you can then

00:28:10,799 --> 00:28:14,399
adapt a bit to like the specificity of your

00:28:14,399 --> 00:28:19,760
particular community but because of how they all have to sort

00:28:19,760 --> 00:28:24,080
of fit in this broader ecosystem which is essentially

00:28:24,080 --> 00:28:28,640
like the world okay um it has to sort of have

00:28:28,640 --> 00:28:34,000
a um it has to all come from sort of like a similar template

00:28:34,000 --> 00:28:37,840
that would be my my initial feeling about this maybe it's not that's not

00:28:37,840 --> 00:28:40,799
practical thank you so much toby for your

00:28:40,799 --> 00:28:45,840

YouTube URL: https://www.youtube.com/watch?v=Wy06m-FRll8


