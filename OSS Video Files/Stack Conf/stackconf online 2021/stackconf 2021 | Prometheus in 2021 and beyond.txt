Title: stackconf 2021 | Prometheus in 2021 and beyond
Publication date: 2021-06-24
Playlist: stackconf online 2021
Description: 
	by Julien Pivotto

Prometheus is well-known in the metrics area. While it stays a simple to operate server, it is getting more and more capabilities over time. Letâ€™s have a look at the latest and greatest changes happening in the Prometheus server and in the ecosystem. Come and learn how we work on improving observability for everyone.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de 

Webinare
Archiv Link: https://www.netways.de/netways/webinare/

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/


Musik: https://www.frametraxx.de/
Captions: 
	00:00:05,660 --> 00:00:13,119
[Applause]

00:00:06,120 --> 00:00:13,119
[Music]

00:00:13,759 --> 00:00:17,920
hello everyone

00:00:14,799 --> 00:00:20,640
and welcome to star conf 2021

00:00:17,920 --> 00:00:22,000
in my prometheus talk so the goal today

00:00:20,640 --> 00:00:25,359
will be to see

00:00:22,000 --> 00:00:27,199
what is primitives uh what we have done

00:00:25,359 --> 00:00:29,199
in 2021

00:00:27,199 --> 00:00:30,960
and what will come in jeff future so i'm

00:00:29,199 --> 00:00:34,160
pretty excited to be there

00:00:30,960 --> 00:00:36,640
and i am julia pivotto i work at inuits

00:00:34,160 --> 00:00:38,000
we are doing open source consultancy

00:00:36,640 --> 00:00:41,200
across

00:00:38,000 --> 00:00:43,120
europe and the globe and i have been

00:00:41,200 --> 00:00:46,239
working there for 10 years

00:00:43,120 --> 00:00:49,280
and i have joined the prometus project

00:00:46,239 --> 00:00:51,800
one year ago in 1820 even if i have been

00:00:49,280 --> 00:00:54,559
using promoters like since

00:00:51,800 --> 00:00:56,719
2017 and

00:00:54,559 --> 00:00:58,800
now i am maintaining the promited server

00:00:56,719 --> 00:01:00,640
so i'm really happy to be there and to

00:00:58,800 --> 00:01:03,039
provide you with the latest update that

00:01:00,640 --> 00:01:06,720
we have on promoters and what will

00:01:03,039 --> 00:01:08,960
come in the coming weeks or months

00:01:06,720 --> 00:01:11,360
but first let's start for the people who

00:01:08,960 --> 00:01:14,400
might not know committees so

00:01:11,360 --> 00:01:16,560
what is primitives so prometheus is

00:01:14,400 --> 00:01:17,840
an open source monitoring solution so we

00:01:16,560 --> 00:01:21,200
are licensed

00:01:17,840 --> 00:01:23,439
under an apache to license we are part

00:01:21,200 --> 00:01:24,640
of the cncf the cloud native compute

00:01:23,439 --> 00:01:26,880
foundation

00:01:24,640 --> 00:01:28,479
which is the foundation which also owes

00:01:26,880 --> 00:01:31,119
kubernetes

00:01:28,479 --> 00:01:32,640
and a lot of other projects so cometis

00:01:31,119 --> 00:01:36,240
was the second project

00:01:32,640 --> 00:01:40,400
graduated from cncf and um

00:01:36,240 --> 00:01:43,520
it was actually like born in 2012 but

00:01:40,400 --> 00:01:47,680
it was only announced publicly in 2015

00:01:43,520 --> 00:01:49,840
and then we became graduated in 2018 so

00:01:47,680 --> 00:01:51,280
we are quite a stable project we are

00:01:49,840 --> 00:01:53,520
making strong

00:01:51,280 --> 00:01:54,720
stability stability promises to our

00:01:53,520 --> 00:01:57,200
users

00:01:54,720 --> 00:02:00,240
but still we want to know exploring new

00:01:57,200 --> 00:02:02,079
areas and bringing a lot new

00:02:00,240 --> 00:02:04,399
a lot more features to our users a lot

00:02:02,079 --> 00:02:08,160
more additive value so let's see what

00:02:04,399 --> 00:02:11,440
will come next for the project

00:02:08,160 --> 00:02:13,920
prometheus is

00:02:11,440 --> 00:02:15,840
a community we have a lot of people

00:02:13,920 --> 00:02:17,040
contributing to the community we have a

00:02:15,840 --> 00:02:19,360
lot of

00:02:17,040 --> 00:02:20,319
so-called exporters so an exporter is

00:02:19,360 --> 00:02:23,120
something that

00:02:20,319 --> 00:02:24,000
can expose metrics for committees to

00:02:23,120 --> 00:02:26,080
consume

00:02:24,000 --> 00:02:27,280
we have more and more exporters

00:02:26,080 --> 00:02:29,520
available

00:02:27,280 --> 00:02:31,200
uh it's also a full ecosystem which

00:02:29,520 --> 00:02:32,080
means that there are vendors around

00:02:31,200 --> 00:02:34,160
parameters

00:02:32,080 --> 00:02:36,080
we there are a lot of system that we

00:02:34,160 --> 00:02:36,879
interact with to push the metrics to

00:02:36,080 --> 00:02:39,840
pull

00:02:36,879 --> 00:02:40,400
to get metrics from but also people will

00:02:39,840 --> 00:02:43,440
try to

00:02:40,400 --> 00:02:45,280
imitate primitives that they that claim

00:02:43,440 --> 00:02:46,959
that they are like homegrown compatible

00:02:45,280 --> 00:02:47,760
we will see all of that later in the

00:02:46,959 --> 00:02:50,160
store but like

00:02:47,760 --> 00:02:51,120
this is a full ecosystem it is just not

00:02:50,160 --> 00:02:53,680
one project

00:02:51,120 --> 00:02:54,879
it is really like a complete set of

00:02:53,680 --> 00:02:56,560
projects

00:02:54,879 --> 00:02:58,480
and then from itunes of course it is the

00:02:56,560 --> 00:03:00,640
primitive server as you know it is

00:02:58,480 --> 00:03:02,000
the art manager it is the node exporter

00:03:00,640 --> 00:03:04,319
so we have a lot of

00:03:02,000 --> 00:03:06,000
official projects that we are actually

00:03:04,319 --> 00:03:09,599
using and promoting

00:03:06,000 --> 00:03:09,599
for the users to consume

00:03:10,080 --> 00:03:13,280
so the primitive server itself which

00:03:12,400 --> 00:03:16,480
will be like

00:03:13,280 --> 00:03:19,040
part of the talk today it's open source

00:03:16,480 --> 00:03:23,200
it is a pulled based monitoring

00:03:19,040 --> 00:03:23,200
solution so we are pulling matrix

00:03:23,440 --> 00:03:28,560
that for consummation later on we have a

00:03:26,640 --> 00:03:31,760
powerful query language

00:03:28,560 --> 00:03:35,599
and we have an optimized time series

00:03:31,760 --> 00:03:39,599
database so if i want to

00:03:35,599 --> 00:03:47,840
show you what is parameters

00:03:39,599 --> 00:03:47,840
so we have a demo at website

00:03:49,599 --> 00:03:54,560
where you can have like a a demo of what

00:03:52,959 --> 00:03:55,439
is coming is let me make that maybe

00:03:54,560 --> 00:03:57,680
bigger

00:03:55,439 --> 00:03:58,720
so this is permitted this is the promise

00:03:57,680 --> 00:04:02,799
server

00:03:58,720 --> 00:04:06,799
and you can see that we have like

00:04:02,799 --> 00:04:07,599
um if i look for a metric i can just

00:04:06,799 --> 00:04:10,959
find

00:04:07,599 --> 00:04:10,959
the metric and

00:04:11,040 --> 00:04:15,200
so this is like the cpu time and then i

00:04:13,360 --> 00:04:17,120
have a query language that enables me to

00:04:15,200 --> 00:04:20,639
run queries like this

00:04:17,120 --> 00:04:24,240
rate no cpu total

00:04:20,639 --> 00:04:26,720
5 minute and then i have like the cpu

00:04:24,240 --> 00:04:26,720
usage

00:04:27,520 --> 00:04:33,680
now i have like i know that my server is

00:04:31,040 --> 00:04:37,120
93 percent idle for example

00:04:33,680 --> 00:04:40,080
i can actually now run

00:04:37,120 --> 00:04:40,639
call labels and up so that what we have

00:04:40,080 --> 00:04:44,400
as

00:04:40,639 --> 00:04:45,199
um matrix also f query so now i can do

00:04:44,400 --> 00:04:48,240
like

00:04:45,199 --> 00:04:49,919
uh mod is not idle because i am not that

00:04:48,240 --> 00:04:51,759
interesting into idle time

00:04:49,919 --> 00:04:54,160
i know i can actually like look back in

00:04:51,759 --> 00:04:57,360
time and see oh something happened like

00:04:54,160 --> 00:04:58,240
today at 2 p.m on the server so this is

00:04:57,360 --> 00:04:59,600
the kind of things

00:04:58,240 --> 00:05:02,000
the kind of metrics that you can have

00:04:59,600 --> 00:05:03,039
with promoters of course committees is

00:05:02,000 --> 00:05:05,280
not alone we

00:05:03,039 --> 00:05:07,199
also have like graphene that can act as

00:05:05,280 --> 00:05:09,120
a front-end which is like the most

00:05:07,199 --> 00:05:11,600
popular content to promote is when you

00:05:09,120 --> 00:05:13,840
can also have like really nice graphs

00:05:11,600 --> 00:05:16,240
and matrix so if i

00:05:13,840 --> 00:05:16,240
show you

00:05:19,600 --> 00:05:25,600
graphana and

00:05:22,720 --> 00:05:26,560
so here we have also a graphene demo

00:05:25,600 --> 00:05:29,199
that we can

00:05:26,560 --> 00:05:30,080
look at and then you can see that this

00:05:29,199 --> 00:05:31,759
is even

00:05:30,080 --> 00:05:33,280
getting more power to the parameters

00:05:31,759 --> 00:05:35,600
graphing system

00:05:33,280 --> 00:05:37,039
uh so if i look at this one you see that

00:05:35,600 --> 00:05:39,440
we have like a bunch of

00:05:37,039 --> 00:05:40,479
way to display the data a bunch of

00:05:39,440 --> 00:05:43,280
different

00:05:40,479 --> 00:05:44,080
options about how you want to query your

00:05:43,280 --> 00:05:47,280
data thanks

00:05:44,080 --> 00:05:49,680
graphene so that's promises we put

00:05:47,280 --> 00:05:51,120
matrix so what's the metric so if i just

00:05:49,680 --> 00:05:54,639
go back to promoters

00:05:51,120 --> 00:05:58,080
and show you prometheus promotion itself

00:05:54,639 --> 00:05:58,080
is exposing some metrics so

00:05:58,160 --> 00:06:01,680
this is what matrix looks like so

00:06:00,000 --> 00:06:04,479
basically just like

00:06:01,680 --> 00:06:05,440
uh the metric is a name then it will

00:06:04,479 --> 00:06:08,319
have labels

00:06:05,440 --> 00:06:09,199
and then it will have numbers so that is

00:06:08,319 --> 00:06:12,960
um

00:06:09,199 --> 00:06:14,000
primitives matrix it is just like plain

00:06:12,960 --> 00:06:16,560
text

00:06:14,000 --> 00:06:17,120
it works over http so you can add tls

00:06:16,560 --> 00:06:21,039
you can

00:06:17,120 --> 00:06:24,000
whatever you want and we have a lot

00:06:21,039 --> 00:06:25,199
um span of security way to get your

00:06:24,000 --> 00:06:27,280
metrics tls

00:06:25,199 --> 00:06:28,960
basic authentication open id connect

00:06:27,280 --> 00:06:30,560
this kind of thing so we really support

00:06:28,960 --> 00:06:32,800
a lot of different way to get

00:06:30,560 --> 00:06:34,560
the metrics but it is always over http

00:06:32,800 --> 00:06:35,520
it should always be like easy to debug

00:06:34,560 --> 00:06:39,440
using

00:06:35,520 --> 00:06:42,800
girl or that kind of things so that is

00:06:39,440 --> 00:06:43,680
prometheus so we have a query language

00:06:42,800 --> 00:06:45,600
that you have seen

00:06:43,680 --> 00:06:46,960
and we also have the query language is

00:06:45,600 --> 00:06:48,720
called prongql

00:06:46,960 --> 00:06:50,400
and you also have a time series database

00:06:48,720 --> 00:06:51,680
embedded into promoters so we are

00:06:50,400 --> 00:06:54,479
speaking to a local

00:06:51,680 --> 00:06:55,199
timeframe database locally and we rely

00:06:54,479 --> 00:07:00,319
on that one

00:06:55,199 --> 00:07:00,319
and we use that to do the alerting

00:07:01,759 --> 00:07:06,479
so promoters can do whitebox and

00:07:04,639 --> 00:07:09,199
blackbox monitoring which means that you

00:07:06,479 --> 00:07:11,360
can choose to

00:07:09,199 --> 00:07:13,280
instrument your application and then we

00:07:11,360 --> 00:07:15,120
will just get all the information

00:07:13,280 --> 00:07:17,039
from you from the inside of your

00:07:15,120 --> 00:07:19,039
application and able to really like

00:07:17,039 --> 00:07:20,880
understand how the application behaves

00:07:19,039 --> 00:07:22,639
looking at its metrics but we also

00:07:20,880 --> 00:07:23,039
support blackbox monitoring which is

00:07:22,639 --> 00:07:25,520
like

00:07:23,039 --> 00:07:27,840
does my http endpoint answer properly or

00:07:25,520 --> 00:07:29,599
even like in that with your partners

00:07:27,840 --> 00:07:30,800
so if you rely on an external service

00:07:29,599 --> 00:07:32,960
you can do black box monitoring

00:07:30,800 --> 00:07:36,240
information as well

00:07:32,960 --> 00:07:38,560
promoters is not only like a replay a

00:07:36,240 --> 00:07:40,080
replacement for like graphing and that

00:07:38,560 --> 00:07:40,560
kind of things parameters can do the

00:07:40,080 --> 00:07:42,560
full

00:07:40,560 --> 00:07:44,000
alerting as well so once you have a

00:07:42,560 --> 00:07:45,360
metric once you have a query

00:07:44,000 --> 00:07:47,840
you can actually put that inside an

00:07:45,360 --> 00:07:48,800
alert and decide okay i want to alert on

00:07:47,840 --> 00:07:50,319
a threshold

00:07:48,800 --> 00:07:53,280
and this is very powerful because you

00:07:50,319 --> 00:07:55,360
can have really powerful queries at play

00:07:53,280 --> 00:07:57,199
you can have like dynamic thresholds you

00:07:55,360 --> 00:07:59,759
can have static thresholds

00:07:57,199 --> 00:08:00,400
you can decide to alert after like um 10

00:07:59,759 --> 00:08:04,000
minutes

00:08:00,400 --> 00:08:05,919
20 minutes and like you have really

00:08:04,000 --> 00:08:07,599
fully feature the lighting solution with

00:08:05,919 --> 00:08:09,120
promoters as well

00:08:07,599 --> 00:08:10,879
and it works really well with third

00:08:09,120 --> 00:08:13,680
party services like

00:08:10,879 --> 00:08:14,960
a page or duty git you can create gitlab

00:08:13,680 --> 00:08:19,039
issues you can do a lot of stuff

00:08:14,960 --> 00:08:20,720
with um the a lot manager integrations

00:08:19,039 --> 00:08:22,720
so we have labeled time service as you

00:08:20,720 --> 00:08:25,680
have seen the cpu time you can see

00:08:22,720 --> 00:08:26,479
like with the period time you can see if

00:08:25,680 --> 00:08:30,720
it is like

00:08:26,479 --> 00:08:33,440
um idle user system

00:08:30,720 --> 00:08:35,039
io but this is even more powerful when

00:08:33,440 --> 00:08:37,360
you integrate that with your business

00:08:35,039 --> 00:08:39,599
matrix or your http metrics because

00:08:37,360 --> 00:08:41,279
then you have like the return code you

00:08:39,599 --> 00:08:42,800
should be your label or your business

00:08:41,279 --> 00:08:43,839
code which should be a label that kind

00:08:42,800 --> 00:08:45,600
of things

00:08:43,839 --> 00:08:47,440
it is really powerful when you start

00:08:45,600 --> 00:08:51,920
playing with the labels

00:08:47,440 --> 00:08:51,920
and as i've said also it works over http

00:08:52,720 --> 00:08:56,959
so um we will we will see what's new in

00:08:56,320 --> 00:08:58,800
three

00:08:56,959 --> 00:09:00,000
under three different angles so the

00:08:58,800 --> 00:09:01,920
community

00:09:00,000 --> 00:09:04,399
the software and the ecosystem so we are

00:09:01,920 --> 00:09:07,600
now uh looking at the community

00:09:04,399 --> 00:09:08,399
so from it is community we are more open

00:09:07,600 --> 00:09:10,000
than ever

00:09:08,399 --> 00:09:12,640
so this is the importance to promote

00:09:10,000 --> 00:09:16,959
this is open source since

00:09:12,640 --> 00:09:19,600
a very long time but with

00:09:16,959 --> 00:09:20,640
sometimes especially when the events

00:09:19,600 --> 00:09:23,600
were physical

00:09:20,640 --> 00:09:26,080
and well there was some meetings like

00:09:23,600 --> 00:09:27,839
developer submits which were like

00:09:26,080 --> 00:09:29,680
only with a small group because they

00:09:27,839 --> 00:09:30,720
were physical you cannot have 200 people

00:09:29,680 --> 00:09:33,680
discussing

00:09:30,720 --> 00:09:34,399
know that we are doing it online we are

00:09:33,680 --> 00:09:37,600
opening that

00:09:34,399 --> 00:09:38,640
up for everyone to join so and we are

00:09:37,600 --> 00:09:41,200
recording them

00:09:38,640 --> 00:09:42,160
we also have now working groups and we

00:09:41,200 --> 00:09:44,000
have like

00:09:42,160 --> 00:09:47,040
back triage which are also like online

00:09:44,000 --> 00:09:47,040
so if i um

00:09:47,279 --> 00:09:51,920
if you go to promise that i use

00:09:50,160 --> 00:09:54,720
community you now have

00:09:51,920 --> 00:09:54,720
an agenda

00:09:56,080 --> 00:09:59,279
slash community

00:09:59,600 --> 00:10:04,880
and this is really important so if i

00:10:02,320 --> 00:10:06,560
look at the agenda

00:10:04,880 --> 00:10:08,560
so now we have everything documented

00:10:06,560 --> 00:10:10,480
every meeting so you can see that we

00:10:08,560 --> 00:10:11,920
have a storage working group

00:10:10,480 --> 00:10:14,240
we are working on a documentation

00:10:11,920 --> 00:10:17,360
working but we speak about that later

00:10:14,240 --> 00:10:19,279
we also have the dev summits and

00:10:17,360 --> 00:10:20,880
we have a bunch of different meetings

00:10:19,279 --> 00:10:22,240
where you can join if you want to learn

00:10:20,880 --> 00:10:25,040
more about prometheus

00:10:22,240 --> 00:10:25,519
or if you want to uh speak with us we

00:10:25,040 --> 00:10:28,160
really

00:10:25,519 --> 00:10:29,920
have multiple meetings for multiple

00:10:28,160 --> 00:10:33,839
purposes but we are really like more

00:10:29,920 --> 00:10:33,839
open than ever

00:10:35,760 --> 00:10:41,920
the second thing is that

00:10:39,200 --> 00:10:44,399
we are doing mentorship which means that

00:10:41,920 --> 00:10:46,640
we want to welcome new contributors

00:10:44,399 --> 00:10:48,079
or even like known contributors that

00:10:46,640 --> 00:10:51,200
have extra questions

00:10:48,079 --> 00:10:51,839
we know that the promoters um is used

00:10:51,200 --> 00:10:55,680
widely

00:10:51,839 --> 00:10:57,519
and that like uh it we know why

00:10:55,680 --> 00:10:59,360
people like primitives we know why they

00:10:57,519 --> 00:11:02,560
like it and we know that

00:10:59,360 --> 00:11:03,040
this is not easy translated into code

00:11:02,560 --> 00:11:05,680
like

00:11:03,040 --> 00:11:06,560
we have some principles and sometimes uh

00:11:05,680 --> 00:11:08,720
it is really

00:11:06,560 --> 00:11:09,920
better to or easier to get someone from

00:11:08,720 --> 00:11:12,160
the team explaining you

00:11:09,920 --> 00:11:14,320
the code or the code is working or you

00:11:12,160 --> 00:11:16,240
can better help us at nothing so

00:11:14,320 --> 00:11:17,920
for the people who want to contribute to

00:11:16,240 --> 00:11:20,800
promoters we now have

00:11:17,920 --> 00:11:22,959
a weekly contributor officer so once a

00:11:20,800 --> 00:11:24,640
week we take one hour to speak with

00:11:22,959 --> 00:11:27,519
the contributors the people who want to

00:11:24,640 --> 00:11:28,560
contribute and basically like we want to

00:11:27,519 --> 00:11:30,720
discuss with you

00:11:28,560 --> 00:11:31,760
if you are blocked in a pull request you

00:11:30,720 --> 00:11:34,079
want to help you if

00:11:31,760 --> 00:11:36,320
you want to review we can also help you

00:11:34,079 --> 00:11:36,800
so basically like we dedicate our time

00:11:36,320 --> 00:11:39,920
to

00:11:36,800 --> 00:11:40,560
help to help the contributors from week

00:11:39,920 --> 00:11:42,399
to week

00:11:40,560 --> 00:11:44,240
we will address a different time zone so

00:11:42,399 --> 00:11:47,200
we have um

00:11:44,240 --> 00:11:48,240
one time zone which is more like um

00:11:47,200 --> 00:11:51,120
europe oriented

00:11:48,240 --> 00:11:51,680
and one time zone which is more like uh

00:11:51,120 --> 00:11:54,079
us

00:11:51,680 --> 00:11:56,399
oriented so we have people in the team

00:11:54,079 --> 00:11:59,920
in different time zones so we have like

00:11:56,399 --> 00:12:02,000
europe in jada and then

00:11:59,920 --> 00:12:03,600
usu check out the calendar if you're

00:12:02,000 --> 00:12:05,040
interested so this is

00:12:03,600 --> 00:12:06,639
like if you want to contribute to

00:12:05,040 --> 00:12:07,839
projects now we are really like doing

00:12:06,639 --> 00:12:10,560
some kind of

00:12:07,839 --> 00:12:12,320
weekly mentorship and now we are also

00:12:10,560 --> 00:12:14,320
looking to participate in some programs

00:12:12,320 --> 00:12:16,240
like the lfx mentorship

00:12:14,320 --> 00:12:17,680
and the google number of code so we did

00:12:16,240 --> 00:12:20,079
actually like submit to

00:12:17,680 --> 00:12:21,920
gsoc this year we were not selected but

00:12:20,079 --> 00:12:23,760
i think something that we will do even

00:12:21,920 --> 00:12:26,639
more because like mentorship

00:12:23,760 --> 00:12:28,079
is important to us and lfx well we will

00:12:26,639 --> 00:12:30,000
see at the time of recording this

00:12:28,079 --> 00:12:30,399
presentation i cannot announce you but

00:12:30,000 --> 00:12:33,600
like

00:12:30,399 --> 00:12:36,240
we see that lfx is like really um

00:12:33,600 --> 00:12:38,240
getting up and there are a lot of

00:12:36,240 --> 00:12:39,440
sessions and we actually like actually

00:12:38,240 --> 00:12:41,200
engaging with the community to

00:12:39,440 --> 00:12:43,120
participate there as well so we really

00:12:41,200 --> 00:12:45,120
want to

00:12:43,120 --> 00:12:46,880
onboard new people make the code more

00:12:45,120 --> 00:12:47,760
discoverable that kind of thing so this

00:12:46,880 --> 00:12:49,680
is really

00:12:47,760 --> 00:12:52,959
something that we are putting time right

00:12:49,680 --> 00:12:57,040
now into it

00:12:52,959 --> 00:13:00,880
so as i said we have the community

00:12:57,040 --> 00:13:04,959
channels which are on the website and so

00:13:00,880 --> 00:13:06,000
basically you go to prometers.ioslash

00:13:04,959 --> 00:13:08,720
community and

00:13:06,000 --> 00:13:11,200
there you will you will see like oh you

00:13:08,720 --> 00:13:12,000
can find us so we are on irc we are on

00:13:11,200 --> 00:13:14,639
matrix

00:13:12,000 --> 00:13:17,120
we are on slack we have mailing list and

00:13:14,639 --> 00:13:19,600
we have also launched a discourse forum

00:13:17,120 --> 00:13:20,480
so if you are interested in parameters

00:13:19,600 --> 00:13:22,880
we also know

00:13:20,480 --> 00:13:23,600
um i think this is the direction we want

00:13:22,880 --> 00:13:25,279
to go to

00:13:23,600 --> 00:13:26,880
we also have like a discourse form so

00:13:25,279 --> 00:13:28,320
this is still starting up so this is

00:13:26,880 --> 00:13:30,399
still really really new

00:13:28,320 --> 00:13:32,320
we do that really we want to lower the

00:13:30,399 --> 00:13:33,279
barrier to entry to use parameters to

00:13:32,320 --> 00:13:34,639
find help

00:13:33,279 --> 00:13:36,480
and we have found out that this course

00:13:34,639 --> 00:13:37,120
might be like another great way to do

00:13:36,480 --> 00:13:39,360
that

00:13:37,120 --> 00:13:41,360
so this is something we are actively

00:13:39,360 --> 00:13:44,160
working on setting up this course

00:13:41,360 --> 00:13:44,800
and working with the community there on

00:13:44,160 --> 00:13:46,800
discord

00:13:44,800 --> 00:13:48,079
by the way i want to thank the discourse

00:13:46,800 --> 00:13:50,639
team because

00:13:48,079 --> 00:13:52,399
they set that up for us and they

00:13:50,639 --> 00:13:53,279
maintain as far so this is really really

00:13:52,399 --> 00:14:02,000
great

00:13:53,279 --> 00:14:06,000
to have this course to for parameters

00:14:02,000 --> 00:14:09,360
so let's now have a look at the software

00:14:06,000 --> 00:14:11,279
so prometheus as a server we

00:14:09,360 --> 00:14:13,360
have a lot of stuff that is coming here

00:14:11,279 --> 00:14:16,320
latest comment in the last year

00:14:13,360 --> 00:14:17,680
the first thing that was a long wait and

00:14:16,320 --> 00:14:19,680
a long-awaited thing

00:14:17,680 --> 00:14:21,040
was server slightly less than basic

00:14:19,680 --> 00:14:24,800
authentication

00:14:21,040 --> 00:14:26,959
so in 2021 we have added native tls and

00:14:24,800 --> 00:14:28,959
basic authentication on the server which

00:14:26,959 --> 00:14:29,680
means that you can expose promoters with

00:14:28,959 --> 00:14:32,079
tls

00:14:29,680 --> 00:14:33,839
you can expose parameters behind basic

00:14:32,079 --> 00:14:36,160
authentication

00:14:33,839 --> 00:14:38,160
without a reverse proxy to natively

00:14:36,160 --> 00:14:40,079
prometheus will be able to

00:14:38,160 --> 00:14:42,000
be protected by tls and music

00:14:40,079 --> 00:14:43,760
authentication

00:14:42,000 --> 00:14:45,199
the second thing that we have added is

00:14:43,760 --> 00:14:47,440
exemplar so

00:14:45,199 --> 00:14:49,040
i will not go into the details of

00:14:47,440 --> 00:14:52,160
exemplars now

00:14:49,040 --> 00:14:54,880
you can actually like find on the web um

00:14:52,160 --> 00:14:56,959
graph on an example on the graphene blog

00:14:54,880 --> 00:14:58,900
you will find a way better presentation

00:14:56,959 --> 00:15:01,839
about this

00:14:58,900 --> 00:15:05,760
[Music]

00:15:01,839 --> 00:15:08,880
so the grafana exemplars

00:15:05,760 --> 00:15:12,160
basically they enable you to directly

00:15:08,880 --> 00:15:15,839
jump from matrix to traces

00:15:12,160 --> 00:15:17,600
let me find so the example is basically

00:15:15,839 --> 00:15:20,000
it is something that you will attach to

00:15:17,600 --> 00:15:23,440
your matrix and that will directly

00:15:20,000 --> 00:15:25,120
point you as a trace id so if you have

00:15:23,440 --> 00:15:28,560
like a query with the latency

00:15:25,120 --> 00:15:30,880
you can just jump to your jager trace

00:15:28,560 --> 00:15:31,600
i open tracing trays that kind of things

00:15:30,880 --> 00:15:34,560
directly

00:15:31,600 --> 00:15:35,199
from parameters to from priority data to

00:15:34,560 --> 00:15:36,880
the

00:15:35,199 --> 00:15:39,120
trace id so you don't need to jump to

00:15:36,880 --> 00:15:42,639
the logs you have a directly link

00:15:39,120 --> 00:15:44,480
between the matrix and the traces so

00:15:42,639 --> 00:15:48,399
this is really

00:15:44,480 --> 00:15:51,360
something that i am looking forward to

00:15:48,399 --> 00:15:53,490
to grow in the future so this is not

00:15:51,360 --> 00:15:55,440
something that is very very like

00:15:53,490 --> 00:15:57,120
[Music]

00:15:55,440 --> 00:15:59,440
available everywhere yet but like we are

00:15:57,120 --> 00:16:00,399
working on that we are also working on

00:15:59,440 --> 00:16:02,639
adding that to

00:16:00,399 --> 00:16:04,399
the primitive server ui so currently we

00:16:02,639 --> 00:16:07,120
have the api but we want to have that in

00:16:04,399 --> 00:16:09,199
the ui as well

00:16:07,120 --> 00:16:11,279
backfilling so basically like we have

00:16:09,199 --> 00:16:12,240
multiple ways of backfilling promoters

00:16:11,279 --> 00:16:15,279
today

00:16:12,240 --> 00:16:22,639
and um mainly thanks to the

00:16:15,279 --> 00:16:24,880
community so basically um

00:16:22,639 --> 00:16:25,680
you can now backfill your pointy server

00:16:24,880 --> 00:16:30,399
so if you

00:16:25,680 --> 00:16:33,519
are coming from another uh from another

00:16:30,399 --> 00:16:36,880
monitoring solution you can know

00:16:33,519 --> 00:16:40,079
uh directly like import metrics into a

00:16:36,880 --> 00:16:40,079
promitius server

00:16:42,240 --> 00:16:46,800
so you can backfill from the openmetrix

00:16:45,199 --> 00:16:49,920
format so basically like

00:16:46,800 --> 00:16:53,120
you can create a file with open metrics

00:16:49,920 --> 00:16:55,920
um which is a format of metrics

00:16:53,120 --> 00:16:57,839
and then import that file and it will be

00:16:55,920 --> 00:17:01,199
turned into parameters blocks that you

00:16:57,839 --> 00:17:03,839
can then put inside the tsd

00:17:01,199 --> 00:17:06,079
the second type of backfilling is

00:17:03,839 --> 00:17:08,000
backfilling for recording rules

00:17:06,079 --> 00:17:09,839
so when you create a recording wholesome

00:17:08,000 --> 00:17:12,319
promoter so a recording rule what is it

00:17:09,839 --> 00:17:14,240
it is a pre-recording of metrics

00:17:12,319 --> 00:17:15,839
so if you have a big computation and you

00:17:14,240 --> 00:17:18,880
want to like um

00:17:15,839 --> 00:17:19,600
pre-record its value its query then you

00:17:18,880 --> 00:17:21,199
can just like

00:17:19,600 --> 00:17:23,039
enter the query in the recording rule

00:17:21,199 --> 00:17:25,679
and it will just compute

00:17:23,039 --> 00:17:26,480
the result but what we have now is that

00:17:25,679 --> 00:17:28,240
you can also

00:17:26,480 --> 00:17:30,799
backfill for the path so if you are

00:17:28,240 --> 00:17:32,320
introducing a new recording rule you can

00:17:30,799 --> 00:17:35,039
now have it also

00:17:32,320 --> 00:17:36,720
in your committee's server so this is

00:17:35,039 --> 00:17:40,320
also something which is very

00:17:36,720 --> 00:17:42,400
very recent and like it was

00:17:40,320 --> 00:17:44,480
one of the oldest promoters issues

00:17:42,400 --> 00:17:48,320
actually but now we have it directly

00:17:44,480 --> 00:17:51,360
on the server and the next thing

00:17:48,320 --> 00:17:54,080
is the remote right receiver so

00:17:51,360 --> 00:17:55,360
what is the remote right receiver and

00:17:54,080 --> 00:17:57,520
this is like

00:17:55,360 --> 00:17:59,039
the ability for committees to receive

00:17:57,520 --> 00:18:01,520
remote right data

00:17:59,039 --> 00:18:04,240
remote right is you can see that as the

00:18:01,520 --> 00:18:07,679
replication protocol for committees

00:18:04,240 --> 00:18:10,320
so basically it enables to write

00:18:07,679 --> 00:18:11,919
the metrics that permit is scripting to

00:18:10,320 --> 00:18:15,200
an external system

00:18:11,919 --> 00:18:18,799
you you previously it was cortex thanos

00:18:15,200 --> 00:18:19,440
um from scale so there were a lot of

00:18:18,799 --> 00:18:21,440
different

00:18:19,440 --> 00:18:22,640
remote right receiver the goal was to

00:18:21,440 --> 00:18:25,679
achieve

00:18:22,640 --> 00:18:28,799
long-term uh storage of the metrics

00:18:25,679 --> 00:18:30,559
or even like global view of the metrics

00:18:28,799 --> 00:18:32,880
that kind of thing so basically

00:18:30,559 --> 00:18:35,039
locally promoters would do the alerting

00:18:32,880 --> 00:18:38,240
and do the scraping and then it would

00:18:35,039 --> 00:18:38,720
handle the data in an external system

00:18:38,240 --> 00:18:41,520
which is

00:18:38,720 --> 00:18:42,000
more durable but maybe also are fragile

00:18:41,520 --> 00:18:45,120
that's why

00:18:42,000 --> 00:18:47,200
we have the in the we don't have those

00:18:45,120 --> 00:18:49,200
features inside parameters itself

00:18:47,200 --> 00:18:51,200
we are still a core monitoring solution

00:18:49,200 --> 00:18:52,000
and like we can just enter the data to

00:18:51,200 --> 00:18:54,240
someone else

00:18:52,000 --> 00:18:55,840
we can do maybe more work on that or

00:18:54,240 --> 00:18:59,120
like reconciliate

00:18:55,840 --> 00:19:00,799
them etc but no prometus itself can

00:18:59,120 --> 00:19:04,480
receive remote right

00:19:00,799 --> 00:19:06,160
um so you can have a promotive server

00:19:04,480 --> 00:19:08,080
which you receive

00:19:06,160 --> 00:19:10,080
directly from another committee's the

00:19:08,080 --> 00:19:12,400
data so it's like really like

00:19:10,080 --> 00:19:14,480
replicating from one promise to another

00:19:12,400 --> 00:19:16,720
and there are multiple scenarios where

00:19:14,480 --> 00:19:18,400
that is really useful for example if you

00:19:16,720 --> 00:19:20,160
have promoters on the edge of your

00:19:18,400 --> 00:19:21,200
network you don't have the full freedom

00:19:20,160 --> 00:19:23,600
on

00:19:21,200 --> 00:19:25,280
the network flow that you can use or

00:19:23,600 --> 00:19:26,960
like your printing so

00:19:25,280 --> 00:19:28,400
or if you run communications on this

00:19:26,960 --> 00:19:29,840
really small device you can just have a

00:19:28,400 --> 00:19:32,000
bigger community that can just

00:19:29,840 --> 00:19:34,000
get the data that kind of thing so this

00:19:32,000 --> 00:19:37,679
is the remote right receiver

00:19:34,000 --> 00:19:39,200
um and like it's like fit the federation

00:19:37,679 --> 00:19:40,080
that you know informative but like the

00:19:39,200 --> 00:19:42,240
other way around

00:19:40,080 --> 00:19:45,360
with a bit more complexity but also a

00:19:42,240 --> 00:19:45,360
bit more optimization

00:19:48,240 --> 00:19:53,520
the service discovery so two years ago i

00:19:51,919 --> 00:19:55,760
think that we have lifting so there was

00:19:53,520 --> 00:19:56,799
a moratorium of discoveries but we have

00:19:55,760 --> 00:19:59,520
listed the

00:19:56,799 --> 00:20:01,120
lifted moratorium so now we can have new

00:19:59,520 --> 00:20:03,200
service discoveries

00:20:01,120 --> 00:20:05,360
and over the last year we have added a

00:20:03,200 --> 00:20:07,360
lot of new service discoveries

00:20:05,360 --> 00:20:08,720
so you like guys in our docker dockers

00:20:07,360 --> 00:20:11,280
from digital ocean

00:20:08,720 --> 00:20:13,200
it will slide sale and scale way a whole

00:20:11,280 --> 00:20:15,360
service queries that we have added

00:20:13,200 --> 00:20:17,120
recently so if you are a customer of one

00:20:15,360 --> 00:20:18,080
of those close providers or one of the

00:20:17,120 --> 00:20:20,400
solutions

00:20:18,080 --> 00:20:21,440
you can know without any sidecar without

00:20:20,400 --> 00:20:23,840
any new thing

00:20:21,440 --> 00:20:25,840
and next to point is to configure it

00:20:23,840 --> 00:20:28,080
you're going to discover your targets

00:20:25,840 --> 00:20:30,400
and have an always up-to-date list of

00:20:28,080 --> 00:20:32,480
things to monitor informatives

00:20:30,400 --> 00:20:34,240
so we encourage you to look at that if

00:20:32,480 --> 00:20:37,679
you are using one of those providers it

00:20:34,240 --> 00:20:39,520
is a lot better than hardcoding your

00:20:37,679 --> 00:20:41,360
your targets inside primitives and

00:20:39,520 --> 00:20:43,280
service query is a strength of

00:20:41,360 --> 00:20:44,640
committees especially like we know that

00:20:43,280 --> 00:20:46,960
we have a lot of

00:20:44,640 --> 00:20:48,720
kubernetes users so we are really good

00:20:46,960 --> 00:20:50,000
with the communities of discovery but we

00:20:48,720 --> 00:20:52,640
also have now

00:20:50,000 --> 00:20:53,679
a really good set and we already had a

00:20:52,640 --> 00:20:55,919
good set of

00:20:53,679 --> 00:20:56,720
service queries and we are expanding

00:20:55,919 --> 00:20:59,039
that

00:20:56,720 --> 00:21:00,559
uh almost on every release we have we

00:20:59,039 --> 00:21:03,440
have new service coverage

00:21:00,559 --> 00:21:04,080
they all play together and this this is

00:21:03,440 --> 00:21:05,919
really like

00:21:04,080 --> 00:21:07,120
an area where we are actually like

00:21:05,919 --> 00:21:10,480
growing

00:21:07,120 --> 00:21:10,480
a lot these times

00:21:10,960 --> 00:21:15,600
so from ql so that's another interesting

00:21:13,520 --> 00:21:16,720
one so from ql the promoted query

00:21:15,600 --> 00:21:19,760
language

00:21:16,720 --> 00:21:22,320
now we are seeing new features and

00:21:19,760 --> 00:21:25,039
the new features some of them actually

00:21:22,320 --> 00:21:28,080
like breaking new features

00:21:25,039 --> 00:21:30,240
which we will like begin to know

00:21:28,080 --> 00:21:31,060
first i want to i will just show you

00:21:30,240 --> 00:21:32,400
like um

00:21:31,060 --> 00:21:35,280
[Music]

00:21:32,400 --> 00:21:36,640
the new feature so we have the add

00:21:35,280 --> 00:21:39,679
modifier

00:21:36,640 --> 00:21:43,919
we have new functions and we have like

00:21:39,679 --> 00:21:46,240
uh the negative offset so let's have a

00:21:43,919 --> 00:21:46,240
look

00:21:46,400 --> 00:21:53,039
so i will once again go to the demo

00:21:50,400 --> 00:21:53,840
website so was it the demo website no

00:21:53,039 --> 00:21:58,480
oop

00:21:53,840 --> 00:21:58,480
so which is dot demo dot

00:22:08,720 --> 00:22:16,159
so i am back in my um

00:22:13,200 --> 00:22:18,080
prometheus server i will actually like

00:22:16,159 --> 00:22:18,880
already use the experimental editor

00:22:18,080 --> 00:22:23,120
which is

00:22:18,880 --> 00:22:23,679
a lot better so and now i will just like

00:22:23,120 --> 00:22:25,440
show you

00:22:23,679 --> 00:22:27,600
a bunch of new things first of all we

00:22:25,440 --> 00:22:29,360
have added a function that the community

00:22:27,600 --> 00:22:31,200
was asking for long time which is just

00:22:29,360 --> 00:22:33,440
last overtime

00:22:31,200 --> 00:22:41,200
which just enables you to pick the last

00:22:33,440 --> 00:22:43,360
value so if i just like

00:22:41,200 --> 00:22:45,039
so if i have a flippy target or that

00:22:43,360 --> 00:22:45,760
kind of matrix i can just have the last

00:22:45,039 --> 00:22:48,960
value

00:22:45,760 --> 00:22:50,480
for a specific target in this demo we

00:22:48,960 --> 00:22:52,799
don't really have a use case for this so

00:22:50,480 --> 00:22:54,240
i will skip the use case for now

00:22:52,799 --> 00:22:56,320
but this is like the kind of new

00:22:54,240 --> 00:22:58,000
functions that we are adding and we are

00:22:56,320 --> 00:22:59,200
looking to add even more functions in

00:22:58,000 --> 00:23:02,400
the coming

00:22:59,200 --> 00:23:02,720
um weeks or months so then we have the

00:23:02,400 --> 00:23:04,960
at

00:23:02,720 --> 00:23:06,320
modifier so what is the rat modifier so

00:23:04,960 --> 00:23:09,280
let's have a look so

00:23:06,320 --> 00:23:11,930
if i have a query like process cpu

00:23:09,280 --> 00:23:14,480
seconds total

00:23:11,930 --> 00:23:19,280
[Music]

00:23:14,480 --> 00:23:21,039
so here i have

00:23:19,280 --> 00:23:24,720
what i have here is a query that tells

00:23:21,039 --> 00:23:27,440
me okay this is the cpu usage

00:23:24,720 --> 00:23:28,559
for all the applications and prompt is

00:23:27,440 --> 00:23:32,559
actually like

00:23:28,559 --> 00:23:36,559
as a function to get like the four

00:23:32,559 --> 00:23:39,520
top processes that use this cpu

00:23:36,559 --> 00:23:42,559
and that function is called top k so if

00:23:39,520 --> 00:23:42,559
i add top k there

00:23:42,720 --> 00:23:47,840
i now see the four top processes that

00:23:46,240 --> 00:23:50,559
use the cpu

00:23:47,840 --> 00:23:51,840
the issue is that if you see on the

00:23:50,559 --> 00:23:55,279
bottom like the third

00:23:51,840 --> 00:23:57,360
the three first one are actually like

00:23:55,279 --> 00:23:58,559
quite clear quite distinct so they are

00:23:57,360 --> 00:24:01,200
using uh

00:23:58,559 --> 00:24:02,720
cpu for sure but like you see that the

00:24:01,200 --> 00:24:05,760
first one well sometimes

00:24:02,720 --> 00:24:07,440
it is one instance another time it is

00:24:05,760 --> 00:24:10,480
another instance

00:24:07,440 --> 00:24:14,559
so what i actually want is to have

00:24:10,480 --> 00:24:16,640
um the the processes that are known

00:24:14,559 --> 00:24:19,600
using the more cpu time

00:24:16,640 --> 00:24:21,520
and now at every time the top four i

00:24:19,600 --> 00:24:24,880
want the top four from now and i want to

00:24:21,520 --> 00:24:24,880
see the history for that one

00:24:25,919 --> 00:24:30,159
so now i can use the add modifier so i

00:24:28,320 --> 00:24:33,840
will keep my red command and i will use

00:24:30,159 --> 00:24:33,840
the add modifier

00:24:35,360 --> 00:24:42,720
i will take it and then i will do

00:24:39,600 --> 00:24:46,559
end rate and then i will

00:24:42,720 --> 00:24:49,840
add um

00:24:46,559 --> 00:24:50,640
and like this so this will normally only

00:24:49,840 --> 00:24:54,880
show me like

00:24:50,640 --> 00:24:58,240
four entries now um

00:24:54,880 --> 00:24:58,240
if i press execute

00:24:58,640 --> 00:25:02,159
oh i miss the top key

00:25:02,400 --> 00:25:05,039
like this

00:25:05,679 --> 00:25:11,440
so now i have the four top processes

00:25:08,960 --> 00:25:14,080
that using the most cpu usage

00:25:11,440 --> 00:25:15,840
thanks to the add modifier and i don't

00:25:14,080 --> 00:25:17,760
see like flapping stuff and if i go

00:25:15,840 --> 00:25:19,760
below i only have four entries

00:25:17,760 --> 00:25:21,360
so this is kind of an advanced feature

00:25:19,760 --> 00:25:24,799
so we are looking for what we have like

00:25:21,360 --> 00:25:27,919
maybe more tooling support

00:25:24,799 --> 00:25:30,480
but like this is like really a nice way

00:25:27,919 --> 00:25:30,480
to start

00:25:30,720 --> 00:25:34,240
and we really like it service a bunch of

00:25:33,200 --> 00:25:37,840
issues when you

00:25:34,240 --> 00:25:38,880
had to write multiple and annotations in

00:25:37,840 --> 00:25:40,799
grafana

00:25:38,880 --> 00:25:42,559
to know exactly what are my top time

00:25:40,799 --> 00:25:43,440
series now i want to have them over time

00:25:42,559 --> 00:25:44,799
blah blah blah no

00:25:43,440 --> 00:25:49,279
you have that quite nicely with

00:25:44,799 --> 00:25:52,320
prometheus the end can also be start

00:25:49,279 --> 00:25:55,840
and it can also be a timestamp

00:25:52,320 --> 00:25:58,559
so this is something that we have now

00:25:55,840 --> 00:26:01,840
information i think that it can solve a

00:25:58,559 --> 00:26:01,840
lot of different use cases

00:26:03,200 --> 00:26:08,799
um we also have no negative offsets

00:26:06,799 --> 00:26:10,240
so which means that like if i look at

00:26:08,799 --> 00:26:12,799
something now

00:26:10,240 --> 00:26:14,000
you know that like committees you can

00:26:12,799 --> 00:26:18,240
look so if i

00:26:14,000 --> 00:26:21,679
will just limit that to like uh

00:26:18,240 --> 00:26:21,679
one job for example

00:26:21,760 --> 00:26:25,840
so poverty so don't look really at the

00:26:24,000 --> 00:26:27,279
metrics but promote is used to have like

00:26:25,840 --> 00:26:27,830
offset

00:26:27,279 --> 00:26:30,930
um

00:26:27,830 --> 00:26:30,930
[Music]

00:26:31,600 --> 00:26:36,080
yes promises have an offset which means

00:26:34,480 --> 00:26:36,880
that you can take the data from one

00:26:36,080 --> 00:26:38,799
minute

00:26:36,880 --> 00:26:40,400
before and play it so this can be used

00:26:38,799 --> 00:26:45,120
in calculations

00:26:40,400 --> 00:26:49,520
but also like if i do like probe success

00:26:45,120 --> 00:26:52,400
um i can look like offset one hour i see

00:26:49,520 --> 00:26:54,559
what was the result one hour ago

00:26:52,400 --> 00:26:56,000
what not no what you can do now is that

00:26:54,559 --> 00:26:58,320
especially when you query data in the

00:26:56,000 --> 00:26:59,919
pass you can do offset minus one hour so

00:26:58,320 --> 00:27:02,400
which is the offset in the opposite

00:26:59,919 --> 00:27:04,080
direction

00:27:02,400 --> 00:27:06,080
which can be useful when you know that

00:27:04,080 --> 00:27:07,840
the data for example is coming too late

00:27:06,080 --> 00:27:09,600
or too early you can play a bit more

00:27:07,840 --> 00:27:11,520
about your data

00:27:09,600 --> 00:27:12,640
note the feature that i've shown you the

00:27:11,520 --> 00:27:15,120
add modifier

00:27:12,640 --> 00:27:17,279
and the negative offset they actually

00:27:15,120 --> 00:27:19,039
require special command tracks because

00:27:17,279 --> 00:27:20,399
like they can break the

00:27:19,039 --> 00:27:22,559
proxies in the middle so there are

00:27:20,399 --> 00:27:24,159
proxies that will cache the prometer's

00:27:22,559 --> 00:27:27,039
data and those proxies

00:27:24,159 --> 00:27:28,960
might not understand the new features as

00:27:27,039 --> 00:27:31,840
we have strong warranty promises we have

00:27:28,960 --> 00:27:34,799
decided to have like an enable feature

00:27:31,840 --> 00:27:35,600
a feature flag so that we are protecting

00:27:34,799 --> 00:27:38,000
the

00:27:35,600 --> 00:27:39,840
the experimental feature behind the flag

00:27:38,000 --> 00:27:40,480
so it is completely safe for our default

00:27:39,840 --> 00:27:42,159
user but

00:27:40,480 --> 00:27:44,399
if you want to experiment frankly that

00:27:42,159 --> 00:27:47,120
modifier negative offset just

00:27:44,399 --> 00:27:48,320
go for the flag and try and tell us what

00:27:47,120 --> 00:27:50,000
you think about it

00:27:48,320 --> 00:27:52,080
and this is the same way that you enable

00:27:50,000 --> 00:27:53,919
the remote right receiver just

00:27:52,080 --> 00:27:56,640
enable fit your remote right receiver

00:27:53,919 --> 00:27:56,640
and you have it

00:27:59,039 --> 00:28:03,840
so that was for prom ql um

00:28:03,919 --> 00:28:07,760
no no we you we have the ui well i

00:28:06,559 --> 00:28:10,960
obviously like

00:28:07,760 --> 00:28:12,000
um spoiled you already so one year ago

00:28:10,960 --> 00:28:15,600
we made the switch

00:28:12,000 --> 00:28:16,880
to a new ui so it is now written in

00:28:15,600 --> 00:28:18,799
react.js

00:28:16,880 --> 00:28:20,480
uh which is really like a nice language

00:28:18,799 --> 00:28:21,679
and we have like a lot of contributors

00:28:20,480 --> 00:28:24,799
working on it now

00:28:21,679 --> 00:28:28,000
so this is really like a win and

00:28:24,799 --> 00:28:32,080
so if i show you the ui

00:28:28,000 --> 00:28:34,880
of prometheus so the classic ui

00:28:32,080 --> 00:28:35,520
look like this uh well you probably know

00:28:34,880 --> 00:28:37,679
it

00:28:35,520 --> 00:28:39,120
you don't then you don't directly see

00:28:37,679 --> 00:28:42,159
maybe the difference with the new

00:28:39,120 --> 00:28:45,440
ui but like first of all we have a new

00:28:42,159 --> 00:28:46,399
experimental editor so this is like this

00:28:45,440 --> 00:28:48,399
button

00:28:46,399 --> 00:28:49,679
now you can see that we have like really

00:28:48,399 --> 00:28:52,159
like um

00:28:49,679 --> 00:28:52,799
advanced auto completion so we have

00:28:52,159 --> 00:28:56,720
completion

00:28:52,799 --> 00:28:58,960
on the matrix you can also see

00:28:56,720 --> 00:29:00,720
the description of the metric so if i

00:28:58,960 --> 00:29:01,520
take like you see the description of the

00:29:00,720 --> 00:29:04,559
matrix is

00:29:01,520 --> 00:29:07,440
on that side um this is really

00:29:04,559 --> 00:29:09,200
uh nice when you work with promoters and

00:29:07,440 --> 00:29:09,919
if you have like a complex function like

00:29:09,200 --> 00:29:13,520
okay

00:29:09,919 --> 00:29:15,279
you can also directly have like type 5

00:29:13,520 --> 00:29:16,880
and then select your input vector so

00:29:15,279 --> 00:29:17,919
this is really helping you writing

00:29:16,880 --> 00:29:21,120
metrics

00:29:17,919 --> 00:29:22,960
and i really enjoy working with the new

00:29:21,120 --> 00:29:26,399
experimental editor

00:29:22,960 --> 00:29:28,080
so it's actually like um

00:29:26,399 --> 00:29:30,000
something that has been in the rock for

00:29:28,080 --> 00:29:31,760
quite some time and it was used by

00:29:30,000 --> 00:29:33,760
third party products like chromelabs

00:29:31,760 --> 00:29:37,760
first and it was contributed

00:29:33,760 --> 00:29:40,960
by uh julius walls to the prometus

00:29:37,760 --> 00:29:42,320
server which is really really nice so

00:29:40,960 --> 00:29:44,480
you need to enable it

00:29:42,320 --> 00:29:46,080
um i think it will be enabled by default

00:29:44,480 --> 00:29:46,960
in the next phase probably because this

00:29:46,080 --> 00:29:48,880
is just like

00:29:46,960 --> 00:29:50,159
really really a great way to work with

00:29:48,880 --> 00:29:53,200
promoters especially

00:29:50,159 --> 00:29:54,399
to discover it to discover what what do

00:29:53,200 --> 00:29:57,120
the function do

00:29:54,399 --> 00:29:58,640
we also have like autocompletion for the

00:29:57,120 --> 00:30:01,919
label so if i type

00:29:58,640 --> 00:30:03,760
up and then i know like okay this is the

00:30:01,919 --> 00:30:05,200
labels and then in the instance i

00:30:03,760 --> 00:30:06,960
directly have the list

00:30:05,200 --> 00:30:09,919
of instances and i can really really

00:30:06,960 --> 00:30:13,360
easily autocomplete my queries

00:30:09,919 --> 00:30:16,159
so now i just have a really fluent way

00:30:13,360 --> 00:30:18,720
of working with the parameters matrix

00:30:16,159 --> 00:30:20,159
we still have the old well we introduced

00:30:18,720 --> 00:30:21,919
also the list of the matrix

00:30:20,159 --> 00:30:24,080
like we had in previous comments

00:30:21,919 --> 00:30:26,320
releases so it's still there if you

00:30:24,080 --> 00:30:28,480
if you want it um you know in the

00:30:26,320 --> 00:30:30,080
classic ui it was a drop down now

00:30:28,480 --> 00:30:33,760
you have that button to show you the

00:30:30,080 --> 00:30:36,799
metrics that are into primitives

00:30:33,760 --> 00:30:40,799
so another feature that um from

00:30:36,799 --> 00:30:42,799
that our users well that we introduced

00:30:40,799 --> 00:30:44,960
and that our users have contributed is

00:30:42,799 --> 00:30:45,679
the dark team so no promises as a dark

00:30:44,960 --> 00:30:47,520
team

00:30:45,679 --> 00:30:49,679
so now you can see the life in dark so

00:30:47,520 --> 00:30:51,039
we know i know that there is some hype

00:30:49,679 --> 00:30:53,279
around the darkness

00:30:51,039 --> 00:30:54,159
and like promoters now with a button you

00:30:53,279 --> 00:30:56,240
have the choice

00:30:54,159 --> 00:30:58,399
um you can use the dark theme you can

00:30:56,240 --> 00:31:01,679
use the browser settings

00:30:58,399 --> 00:31:04,399
and you can use um the

00:31:01,679 --> 00:31:05,519
lighting so this is still like very very

00:31:04,399 --> 00:31:07,279
efficient

00:31:05,519 --> 00:31:09,440
uh it's probably still not perfect but

00:31:07,279 --> 00:31:11,440
there is a lot of work that has been put

00:31:09,440 --> 00:31:12,480
there already and you can already see

00:31:11,440 --> 00:31:16,159
that

00:31:12,480 --> 00:31:17,919
um we are waiting for the feedback for

00:31:16,159 --> 00:31:19,760
for the users to see like oh this will

00:31:17,919 --> 00:31:22,240
evolve but i think this is

00:31:19,760 --> 00:31:23,840
really a nice addition for the ui

00:31:22,240 --> 00:31:26,480
because a lot of people actually like

00:31:23,840 --> 00:31:29,279
prefer that team so

00:31:26,480 --> 00:31:30,480
let's just have it and experiment with

00:31:29,279 --> 00:31:35,200
that and see

00:31:30,480 --> 00:31:35,200
how this is actually like going

00:31:35,360 --> 00:31:41,519
so that was for the ui uh

00:31:38,480 --> 00:31:45,120
quite a bus a bunch of things there

00:31:41,519 --> 00:31:47,440
so let's move on a lot manager so i will

00:31:45,120 --> 00:31:49,679
just like quickly

00:31:47,440 --> 00:31:50,880
recap manager so we had one release this

00:31:49,679 --> 00:31:53,840
year

00:31:50,880 --> 00:31:55,039
it was uh yeah the mid mid may and there

00:31:53,840 --> 00:31:57,039
was a lot of things

00:31:55,039 --> 00:31:58,399
in this release so we had like ui

00:31:57,039 --> 00:32:02,000
improvements

00:31:58,399 --> 00:32:03,600
um we add um time-based muting which

00:32:02,000 --> 00:32:07,440
means that you can decide not to

00:32:03,600 --> 00:32:09,519
um to

00:32:07,440 --> 00:32:11,440
uh silence alert based on the time of

00:32:09,519 --> 00:32:14,880
the day and we also have negative match

00:32:11,440 --> 00:32:17,919
which means that you can directly um

00:32:14,880 --> 00:32:20,880
how to say that you can directly

00:32:17,919 --> 00:32:22,000
use uh instead of silencing something

00:32:20,880 --> 00:32:23,679
for a label that it

00:32:22,000 --> 00:32:25,679
s you can silence for a label that it

00:32:23,679 --> 00:32:28,159
does not ever it does not match

00:32:25,679 --> 00:32:30,080
so maybe i can still show you that a bit

00:32:28,159 --> 00:32:34,080
so give me a moment

00:32:30,080 --> 00:32:36,640
and so i will just launch an alert

00:32:34,080 --> 00:32:36,640
manager

00:32:39,360 --> 00:32:44,880
so i have a network manager now so let's

00:32:42,880 --> 00:32:48,320
go

00:32:44,880 --> 00:32:56,720
here in in my web

00:32:48,320 --> 00:32:58,559
ui okay so

00:32:56,720 --> 00:33:00,640
so this is the latest release of alex

00:32:58,559 --> 00:33:03,360
manager so um

00:33:00,640 --> 00:33:04,960
the main changes that you will see is in

00:33:03,360 --> 00:33:07,039
the silences when i will show you the

00:33:04,960 --> 00:33:10,159
negative matches that kind of things

00:33:07,039 --> 00:33:12,799
so when you have a silence when you

00:33:10,159 --> 00:33:16,159
create a new silence

00:33:12,799 --> 00:33:20,240
you can decide uh like i want to silence

00:33:16,159 --> 00:33:20,240
one instance you can say instance

00:33:22,840 --> 00:33:27,039
is

00:33:24,000 --> 00:33:29,039
localhost 1990 and it will just silence

00:33:27,039 --> 00:33:32,799
all the alarms with the labels

00:33:29,039 --> 00:33:35,200
100 190.

00:33:32,799 --> 00:33:36,480
so this is like a classic matcher in

00:33:35,200 --> 00:33:39,440
prometheus

00:33:36,480 --> 00:33:41,679
but know what if you want to instead of

00:33:39,440 --> 00:33:43,279
financing a specific instance

00:33:41,679 --> 00:33:46,000
you have a consistent and you decide

00:33:43,279 --> 00:33:48,000
okay i want to focus on production

00:33:46,000 --> 00:33:50,399
i want to focus on the data center first

00:33:48,000 --> 00:33:52,399
i want to getting back in normal

00:33:50,399 --> 00:33:54,240
so you can say okay everything that is

00:33:52,399 --> 00:33:55,840
not in silence in production will be

00:33:54,240 --> 00:34:00,080
just silence now

00:33:55,840 --> 00:34:01,840
so you can do uh environment

00:34:00,080 --> 00:34:03,120
is different than production so this is

00:34:01,840 --> 00:34:05,360
really a new feature that

00:34:03,120 --> 00:34:07,039
i think will help a lot of people so now

00:34:05,360 --> 00:34:08,639
you will have a silence on everything

00:34:07,039 --> 00:34:10,240
but production so you will only get

00:34:08,639 --> 00:34:13,280
alerts

00:34:10,240 --> 00:34:13,839
from production if you enable this

00:34:13,280 --> 00:34:17,359
silence

00:34:13,839 --> 00:34:19,440
this is really like a nice new addition

00:34:17,359 --> 00:34:21,040
while we are there you have a new button

00:34:19,440 --> 00:34:21,919
in the art manager and you have a full

00:34:21,040 --> 00:34:23,919
calendar now

00:34:21,919 --> 00:34:25,599
where you can actually like select the

00:34:23,919 --> 00:34:27,040
duration of your sentences

00:34:25,599 --> 00:34:29,119
which i think is a nice improvement

00:34:27,040 --> 00:34:30,560
considering that previously we only have

00:34:29,119 --> 00:34:30,960
those three fields now you can actually

00:34:30,560 --> 00:34:32,480
like

00:34:30,960 --> 00:34:34,240
complete them with that so i can have

00:34:32,480 --> 00:34:36,320
like easily set

00:34:34,240 --> 00:34:39,280
a one week silence that kind of things

00:34:36,320 --> 00:34:42,800
and now it's automatically set up in

00:34:39,280 --> 00:34:45,119
um in this ui so

00:34:42,800 --> 00:34:46,480
that was for the art manager we had we

00:34:45,119 --> 00:34:49,440
have a lot of

00:34:46,480 --> 00:34:51,679
new things the last thing that i want to

00:34:49,440 --> 00:34:54,240
mention about the art manager

00:34:51,679 --> 00:34:56,000
is that now the art manager we have

00:34:54,240 --> 00:34:58,560
removed the moratorium on

00:34:56,000 --> 00:34:59,119
new integration so we can integrate with

00:34:58,560 --> 00:35:02,800
ips

00:34:59,119 --> 00:35:04,000
page or duty victorops and a bunch of

00:35:02,800 --> 00:35:06,320
other

00:35:04,000 --> 00:35:08,320
receivers but we are adding new ones now

00:35:06,320 --> 00:35:12,079
and we know that we

00:35:08,320 --> 00:35:15,359
will probably soon have aws sns

00:35:12,079 --> 00:35:16,160
as direct integration into their manager

00:35:15,359 --> 00:35:19,119
so that's pretty

00:35:16,160 --> 00:35:19,920
nice to see that we will still reach a

00:35:19,119 --> 00:35:23,119
new

00:35:19,920 --> 00:35:23,119
range of users

00:35:23,839 --> 00:35:26,000
so

00:35:27,920 --> 00:35:32,480
the ecosystem now so what have we

00:35:29,839 --> 00:35:34,640
improved and changed in the ecosystem

00:35:32,480 --> 00:35:37,040
so first of all we have created an

00:35:34,640 --> 00:35:39,920
exporter toolkit so the exporter

00:35:37,040 --> 00:35:41,760
toolkit is a set of reusable code that

00:35:39,920 --> 00:35:42,880
can be used by exporter so we want to

00:35:41,760 --> 00:35:46,079
unify

00:35:42,880 --> 00:35:48,000
the experience using the exporters so

00:35:46,079 --> 00:35:50,480
the exporter toolkit currently contains

00:35:48,000 --> 00:35:51,040
https but it will soon contain a lot

00:35:50,480 --> 00:35:53,760
more so

00:35:51,040 --> 00:35:57,520
but the goal is like that code you can

00:35:53,760 --> 00:35:59,280
reuse it to build your exporters

00:35:57,520 --> 00:36:00,880
then we are we are having more and more

00:35:59,280 --> 00:36:03,040
repositories in

00:36:00,880 --> 00:36:03,920
promotions community so what is prometus

00:36:03,040 --> 00:36:06,320
community

00:36:03,920 --> 00:36:08,400
well promote use community it is a

00:36:06,320 --> 00:36:11,040
github organization

00:36:08,400 --> 00:36:12,960
that contains exporters we provide the

00:36:11,040 --> 00:36:15,760
room for exporters that exist

00:36:12,960 --> 00:36:19,040
somewhere else but that we cannot

00:36:15,760 --> 00:36:21,200
maintain only in the communities team

00:36:19,040 --> 00:36:21,200
so

00:36:22,800 --> 00:36:26,000
so you can see a few exporters like we

00:36:25,280 --> 00:36:30,000
have moved

00:36:26,000 --> 00:36:32,320
yesterday elasticstart exporter

00:36:30,000 --> 00:36:33,280
windows exporter postgres so this is a

00:36:32,320 --> 00:36:35,680
kind of tools

00:36:33,280 --> 00:36:37,520
and exporters that we have in the

00:36:35,680 --> 00:36:41,359
promotive ecosystem that we

00:36:37,520 --> 00:36:43,440
maintains like um we keep an eye on them

00:36:41,359 --> 00:36:45,359
uh we don't maintain all of them within

00:36:43,440 --> 00:36:47,119
the promises team so there are a lot of

00:36:45,359 --> 00:36:49,200
people in that organization that

00:36:47,119 --> 00:36:50,720
maintain all those different exporters

00:36:49,200 --> 00:36:53,280
and those tools because we have like

00:36:50,720 --> 00:36:54,640
push parks we have a problemable proxy

00:36:53,280 --> 00:36:56,720
so a proxy that

00:36:54,640 --> 00:36:58,000
enforce that label is in a parameters

00:36:56,720 --> 00:37:00,960
query that kind of things

00:36:58,000 --> 00:37:02,160
so all those things are now um directly

00:37:00,960 --> 00:37:04,400
like

00:37:02,160 --> 00:37:06,160
well indirectly supported by promoters

00:37:04,400 --> 00:37:09,040
in the police community which is like

00:37:06,160 --> 00:37:09,440
a home for the committees a project

00:37:09,040 --> 00:37:13,200
which

00:37:09,440 --> 00:37:13,200
don't ever own anymore basically

00:37:14,640 --> 00:37:16,880
so

00:37:18,960 --> 00:37:23,359
what's coming now so let's see what's

00:37:20,839 --> 00:37:25,040
coming from the community side so from

00:37:23,359 --> 00:37:27,520
the community side we are launching a

00:37:25,040 --> 00:37:29,520
community working group which means that

00:37:27,520 --> 00:37:31,280
we are building a team to improve and

00:37:29,520 --> 00:37:32,480
rework the documentation so we know that

00:37:31,280 --> 00:37:34,800
documentation is a

00:37:32,480 --> 00:37:36,640
bright point for communities for some

00:37:34,800 --> 00:37:38,400
reasons but we want to provide more user

00:37:36,640 --> 00:37:40,160
stories more guides

00:37:38,400 --> 00:37:41,920
and we want to reward the way that we do

00:37:40,160 --> 00:37:43,599
the documentation so this is a great way

00:37:41,920 --> 00:37:45,280
to get involved in promoters

00:37:43,599 --> 00:37:47,359
so we have a bunch of people already

00:37:45,280 --> 00:37:48,960
interested we have not scrapped it

00:37:47,359 --> 00:37:51,280
fully yet at the time of speaking but

00:37:48,960 --> 00:37:52,880
this will really come and the goal is

00:37:51,280 --> 00:37:54,640
once again we want to make it even

00:37:52,880 --> 00:37:56,320
easier to start these promises

00:37:54,640 --> 00:37:58,000
to integrate these point is to use

00:37:56,320 --> 00:38:00,880
permittees

00:37:58,000 --> 00:38:01,520
then we have the exporter toolkit which

00:38:00,880 --> 00:38:03,520
we want to

00:38:01,520 --> 00:38:05,839
of course there is a typo we want to

00:38:03,520 --> 00:38:07,920
extend the exporter toolkit with a

00:38:05,839 --> 00:38:10,079
common look and feel for the exporter so

00:38:07,920 --> 00:38:13,040
we want to have a known page

00:38:10,079 --> 00:38:14,880
we want to have a matrix a home page

00:38:13,040 --> 00:38:17,440
with some css html that you can

00:38:14,880 --> 00:38:20,160
recognize in addition to the tls stack

00:38:17,440 --> 00:38:20,720
so really like i want to call that part

00:38:20,160 --> 00:38:23,119
so that

00:38:20,720 --> 00:38:23,920
across the ecosystem you have a really

00:38:23,119 --> 00:38:27,760
nice

00:38:23,920 --> 00:38:30,079
look and feel when you use an exporter

00:38:27,760 --> 00:38:30,960
from the software perspective we have

00:38:30,079 --> 00:38:33,200
the prometus

00:38:30,960 --> 00:38:34,960
agent which is coming which is a light

00:38:33,200 --> 00:38:37,839
version of prometheus

00:38:34,960 --> 00:38:38,320
so the promotics engine will be scraping

00:38:37,839 --> 00:38:40,560
data

00:38:38,320 --> 00:38:42,240
and doing the remote right it will have

00:38:40,560 --> 00:38:44,480
a bit of storage

00:38:42,240 --> 00:38:46,640
required to do the remote right but like

00:38:44,480 --> 00:38:47,359
it will not have the full tsdb the full

00:38:46,640 --> 00:38:49,040
blocks

00:38:47,359 --> 00:38:50,800
which will enable you to run promoters

00:38:49,040 --> 00:38:53,920
in smaller setups

00:38:50,800 --> 00:38:55,920
in a way that will be less

00:38:53,920 --> 00:38:57,599
less resource consumption so you will

00:38:55,920 --> 00:39:00,480
have less resource consumption

00:38:57,599 --> 00:39:02,160
on the spamatix agent but you will still

00:39:00,480 --> 00:39:04,000
get all the good part of which is like

00:39:02,160 --> 00:39:05,280
the service query the scripting the

00:39:04,000 --> 00:39:07,920
remote right

00:39:05,280 --> 00:39:09,680
so all of that will stay just it will be

00:39:07,920 --> 00:39:12,839
like only that part so you will not be

00:39:09,680 --> 00:39:14,480
able to query that agent locally for

00:39:12,839 --> 00:39:16,240
example

00:39:14,480 --> 00:39:19,040
we are working on user discovery

00:39:16,240 --> 00:39:22,160
especially likely note command and send

00:39:19,040 --> 00:39:24,320
cloud which is a cloud in asia

00:39:22,160 --> 00:39:26,240
but we are also adding a not so big big

00:39:24,320 --> 00:39:26,640
new feature it might be merged by the

00:39:26,240 --> 00:39:29,359
time

00:39:26,640 --> 00:39:30,560
this presentation is live a generic http

00:39:29,359 --> 00:39:32,560
service screen

00:39:30,560 --> 00:39:33,680
so prometus has a generic service carry

00:39:32,560 --> 00:39:35,520
now and it is like

00:39:33,680 --> 00:39:37,200
local on disk so you need to have a json

00:39:35,520 --> 00:39:40,160
file locally on the disk

00:39:37,200 --> 00:39:41,440
now we are extending that to do we over

00:39:40,160 --> 00:39:44,400
also over http

00:39:41,440 --> 00:39:45,440
this is important because like not every

00:39:44,400 --> 00:39:48,800
server discovery

00:39:45,440 --> 00:39:51,119
target that we want has nice co bindings

00:39:48,800 --> 00:39:52,480
so for example we try to have like net

00:39:51,119 --> 00:39:54,640
box support

00:39:52,480 --> 00:39:56,400
and like it turns out that denmark does

00:39:54,640 --> 00:39:58,160
not provide um

00:39:56,400 --> 00:40:00,160
go libraries that the community wanted

00:39:58,160 --> 00:40:04,000
to really commit on

00:40:00,160 --> 00:40:06,319
so we decided okay let's go for a shitty

00:40:04,000 --> 00:40:08,319
psd so we can address those people needs

00:40:06,319 --> 00:40:10,640
and like they can write no service

00:40:08,319 --> 00:40:12,400
coverage in python and that will just

00:40:10,640 --> 00:40:14,319
like work nicely let's hope so

00:40:12,400 --> 00:40:16,640
and it might even be like an official

00:40:14,319 --> 00:40:18,720
plugin for netbox but it can also be

00:40:16,640 --> 00:40:20,480
implemented by small cloud providers

00:40:18,720 --> 00:40:23,680
by anyone so that's coming that's

00:40:20,480 --> 00:40:26,560
something that will come in parameters

00:40:23,680 --> 00:40:28,000
the ecosystem so we are working with

00:40:26,560 --> 00:40:29,680
open telemetry and

00:40:28,000 --> 00:40:31,839
open telemetry wants to have like

00:40:29,680 --> 00:40:32,960
information full compatibility so we are

00:40:31,839 --> 00:40:35,920
working with them

00:40:32,960 --> 00:40:37,359
we have weekly meetings to define uh to

00:40:35,920 --> 00:40:38,079
track their stages so we are

00:40:37,359 --> 00:40:40,240
collaborating

00:40:38,079 --> 00:40:41,520
this is really important for us we see

00:40:40,240 --> 00:40:43,839
the open telemetry

00:40:41,520 --> 00:40:46,079
is growing and we want to let them go

00:40:43,839 --> 00:40:47,920
and we want to have happy users of open

00:40:46,079 --> 00:40:50,839
telemetry so they can use like

00:40:47,920 --> 00:40:53,040
formatives and all the tools in the

00:40:50,839 --> 00:40:54,800
ecosystem

00:40:53,040 --> 00:40:56,720
and we are working on a compliance

00:40:54,800 --> 00:40:59,920
project so many projects

00:40:56,720 --> 00:41:01,280
and services embrace parameters and from

00:40:59,920 --> 00:41:03,200
ql

00:41:01,280 --> 00:41:04,640
so there is a compliance program based

00:41:03,200 --> 00:41:06,480
by the cncf

00:41:04,640 --> 00:41:07,680
so we are working with cncf we are

00:41:06,480 --> 00:41:09,839
defining the rules

00:41:07,680 --> 00:41:11,599
what it takes to be promoters compliant

00:41:09,839 --> 00:41:12,960
we are writing unit tests

00:41:11,599 --> 00:41:14,640
currently we have remote right and

00:41:12,960 --> 00:41:16,880
tranquil available but like

00:41:14,640 --> 00:41:19,280
if you claim to be points compatible

00:41:16,880 --> 00:41:22,000
know there are holes around it and

00:41:19,280 --> 00:41:23,440
this will really help promoters grow and

00:41:22,000 --> 00:41:25,680
the producer to have

00:41:23,440 --> 00:41:27,520
the same experience across the tools you

00:41:25,680 --> 00:41:29,920
know that there are multiple

00:41:27,520 --> 00:41:31,200
cloud providers multiple open source

00:41:29,920 --> 00:41:33,520
projects that say

00:41:31,200 --> 00:41:35,520
that they are promised compatible now we

00:41:33,520 --> 00:41:37,920
actually are putting rules on that

00:41:35,520 --> 00:41:39,520
uh a bit like kubernetes also as a

00:41:37,920 --> 00:41:41,839
compliance program and then you have

00:41:39,520 --> 00:41:42,880
like a logo kubernetes compliant we will

00:41:41,839 --> 00:41:45,760
do the same we

00:41:42,880 --> 00:41:46,800
with promety so this was announced at

00:41:45,760 --> 00:41:49,280
the prom con

00:41:46,800 --> 00:41:50,000
uh in the start of may it will be

00:41:49,280 --> 00:41:52,960
finished

00:41:50,000 --> 00:41:54,720
well moved forward over the summer at

00:41:52,960 --> 00:41:56,640
the cnc governance level

00:41:54,720 --> 00:41:59,680
so this is something that will obviously

00:41:56,640 --> 00:42:02,240
grow in the future

00:41:59,680 --> 00:42:04,160
so and the conclusion is prometheus is

00:42:02,240 --> 00:42:06,319
moving faster we are moving uh

00:42:04,160 --> 00:42:08,079
really fast in the project and we are

00:42:06,319 --> 00:42:11,200
more than even we are listening to you

00:42:08,079 --> 00:42:11,839
to the users we are open uh opening our

00:42:11,200 --> 00:42:14,720
meetings

00:42:11,839 --> 00:42:15,440
opening our decisions and we are also

00:42:14,720 --> 00:42:17,599
open to

00:42:15,440 --> 00:42:19,280
experimenting so we are exploring new

00:42:17,599 --> 00:42:21,200
areas we are exploring new ways of

00:42:19,280 --> 00:42:22,319
working with metrics with the exemplars

00:42:21,200 --> 00:42:25,440
with the agent

00:42:22,319 --> 00:42:26,800
we really are touching area we did not

00:42:25,440 --> 00:42:28,800
touch before

00:42:26,800 --> 00:42:30,400
and we also want to address more users

00:42:28,800 --> 00:42:31,760
needs it's really important to me that

00:42:30,400 --> 00:42:33,599
we can just like

00:42:31,760 --> 00:42:35,520
uh if you have an excuse not use

00:42:33,599 --> 00:42:37,839
primitives just tell us maybe it's not a

00:42:35,520 --> 00:42:39,520
good fit but maybe with a small change

00:42:37,839 --> 00:42:42,640
we can address your needs

00:42:39,520 --> 00:42:46,000
so that's it and that was my talk

00:42:42,640 --> 00:42:46,480
i hope that you enjoyed my presentation

00:42:46,000 --> 00:42:48,720
today

00:42:46,480 --> 00:42:49,839
and i am hopefully there to answer all

00:42:48,720 --> 00:42:52,160
our questions

00:42:49,839 --> 00:42:53,680
uh check out invites we are open source

00:42:52,160 --> 00:42:57,200
consultants and we

00:42:53,680 --> 00:42:58,240
have uh launch promotive offerings now

00:42:57,200 --> 00:43:00,240
so if you

00:42:58,240 --> 00:43:01,359
need consultancy around promises just

00:43:00,240 --> 00:43:03,920
contact us

00:43:01,359 --> 00:43:05,839
we will gladly help you with your

00:43:03,920 --> 00:43:09,119
communities and outside he needs

00:43:05,839 --> 00:43:10,640
so what is loki uh jagar

00:43:09,119 --> 00:43:12,880
we are building teams around

00:43:10,640 --> 00:43:14,880
observability so please

00:43:12,880 --> 00:43:16,319
feel free to get in touch with us and

00:43:14,880 --> 00:43:18,560
contact us

00:43:16,319 --> 00:43:21,359
thank you and i hope that you will enjoy

00:43:18,560 --> 00:43:21,359
the rest of

00:43:24,839 --> 00:43:31,949
stackconf

00:43:26,760 --> 00:43:31,949
[Music]

00:43:36,000 --> 00:43:38,079

YouTube URL: https://www.youtube.com/watch?v=5bD_6Odbvyw


