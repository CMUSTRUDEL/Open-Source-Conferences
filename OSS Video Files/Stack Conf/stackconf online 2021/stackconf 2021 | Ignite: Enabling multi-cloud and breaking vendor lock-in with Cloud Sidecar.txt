Title: stackconf 2021 | Ignite: Enabling multi-cloud and breaking vendor lock-in with Cloud Sidecar
Publication date: 2021-06-24
Playlist: stackconf online 2021
Description: 
	by Lawrence Finn

Cloud providers offer numerous services that abstract away common problems from software developers. No longer do companies need to manage their own file storage solutions, message queues, key-value stores, etc… The problem is, once you start building software on top of these services you get locked into that specific cloud provider. This is better known as vendor lock-in. Of course, the more services you use the harder it is to go multi-cloud or switch clouds. Cloud Sidecar solves the problem of vendor lock-in by converting requests from one cloud’s API to another cloud’s API. So, if your applications use Amazon Web Services’ S3 and SQS, you can easily deploy Cloud Sidecar next to your application and now it automatically uses Google Cloud’s GCS and Pubsub. Learn about Cloud Sidecar, how it works, how easy it is to modify your software to use it, and how you can deploy it.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de 

Webinare
Archiv Link: https://www.netways.de/netways/webinare/

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/


Musik: https://www.frametraxx.de/
Captions: 
	00:00:05,660 --> 00:00:13,119
[Applause]

00:00:06,120 --> 00:00:13,119
[Music]

00:00:13,679 --> 00:00:16,080
hi

00:00:14,160 --> 00:00:18,000
my name is lawrence finn i'm about to

00:00:16,080 --> 00:00:19,920
completely blow your socks off

00:00:18,000 --> 00:00:21,119
and show you how cloud sidecar can take

00:00:19,920 --> 00:00:22,880
your software

00:00:21,119 --> 00:00:25,439
and convert it from talking to a single

00:00:22,880 --> 00:00:25,920
cloud to talking to multiple clouds or

00:00:25,439 --> 00:00:28,080
actually

00:00:25,920 --> 00:00:31,119
migrate to a different cloud and do all

00:00:28,080 --> 00:00:33,040
this with very little software change

00:00:31,119 --> 00:00:35,200
so let's say you run an image conversion

00:00:33,040 --> 00:00:37,200
website where customers come

00:00:35,200 --> 00:00:38,879
upload an image from one format select

00:00:37,200 --> 00:00:40,559
the destination format click

00:00:38,879 --> 00:00:42,079
upload and then they get a link to the

00:00:40,559 --> 00:00:43,520
destination format with the image

00:00:42,079 --> 00:00:45,440
converted for them

00:00:43,520 --> 00:00:47,200
you built this application using the

00:00:45,440 --> 00:00:48,480
front end in the play framework which is

00:00:47,200 --> 00:00:50,160
the scala framework

00:00:48,480 --> 00:00:52,640
and when people come here and upload an

00:00:50,160 --> 00:00:53,760
image you use amazon web services and it

00:00:52,640 --> 00:00:55,840
goes to s3

00:00:53,760 --> 00:00:56,879
the image goes up to s3 and the message

00:00:55,840 --> 00:00:58,079
goes to sqs

00:00:56,879 --> 00:01:00,480
saying what the image should be

00:00:58,079 --> 00:01:02,719
converted from and the destination form

00:01:00,480 --> 00:01:04,320
then you have a slew of python workers

00:01:02,719 --> 00:01:06,320
that listen to sqs

00:01:04,320 --> 00:01:07,360
grab this image from s3 convert it to

00:01:06,320 --> 00:01:10,560
the new format

00:01:07,360 --> 00:01:11,920
and upload the destination image to s3

00:01:10,560 --> 00:01:13,439
now imagine that you want to make this

00:01:11,920 --> 00:01:15,119
work on multiple clouds you want to make

00:01:13,439 --> 00:01:16,640
this work on google cloud also

00:01:15,119 --> 00:01:18,479
how would you do that well you would

00:01:16,640 --> 00:01:19,119
have to edit your scholar code your play

00:01:18,479 --> 00:01:20,799
code

00:01:19,119 --> 00:01:23,040
and make it so that it could talk to

00:01:20,799 --> 00:01:24,799
both amazon web services and google

00:01:23,040 --> 00:01:26,320
cloud and switch underneath the hood and

00:01:24,799 --> 00:01:27,119
you have to do the same for your python

00:01:26,320 --> 00:01:28,960
workers

00:01:27,119 --> 00:01:30,799
and who knows how much other software

00:01:28,960 --> 00:01:31,439
you actually have that's a heck of a lot

00:01:30,799 --> 00:01:34,000
of work

00:01:31,439 --> 00:01:34,560
but imagine if you had something to help

00:01:34,000 --> 00:01:36,640
you there

00:01:34,560 --> 00:01:38,640
and that's where cloud sidecar comes in

00:01:36,640 --> 00:01:39,439
so cloud sidecar sits between your

00:01:38,640 --> 00:01:41,759
application

00:01:39,439 --> 00:01:43,439
in whatever language and the destination

00:01:41,759 --> 00:01:45,119
cloud provider

00:01:43,439 --> 00:01:46,560
so let's say your application already

00:01:45,119 --> 00:01:48,880
speaks to amazon

00:01:46,560 --> 00:01:50,479
what you do is you configure application

00:01:48,880 --> 00:01:53,280
instead of speaking amazon

00:01:50,479 --> 00:01:53,600
to speak the cloud sidecar cloud sidecar

00:01:53,280 --> 00:01:56,159
will

00:01:53,600 --> 00:01:56,880
translate these api calls in amazon

00:01:56,159 --> 00:01:58,799
speak

00:01:56,880 --> 00:02:00,000
convert them to your destination cloud

00:01:58,799 --> 00:02:02,000
let's say google cloud

00:02:00,000 --> 00:02:03,759
and talk to google cloud for you then it

00:02:02,000 --> 00:02:04,240
will get the responses back from google

00:02:03,759 --> 00:02:07,119
cloud

00:02:04,240 --> 00:02:08,080
and convert them to amazon api speak so

00:02:07,119 --> 00:02:09,759
your applications

00:02:08,080 --> 00:02:11,120
think they are talking to amazon and

00:02:09,759 --> 00:02:13,520
know how to talk to amazon

00:02:11,120 --> 00:02:15,200
but underneath the hood cloud sidecar is

00:02:13,520 --> 00:02:17,440
converting it and actually talking to a

00:02:15,200 --> 00:02:19,760
different cloud or multiple clouds

00:02:17,440 --> 00:02:22,720
and this is all done doing very little

00:02:19,760 --> 00:02:24,560
code change to your underlying software

00:02:22,720 --> 00:02:26,000
and i have a little demo for you to show

00:02:24,560 --> 00:02:27,840
how that actually works because i

00:02:26,000 --> 00:02:30,239
actually built this application

00:02:27,840 --> 00:02:31,920
so here's the scala application i built

00:02:30,239 --> 00:02:33,920
it using some dependency injection

00:02:31,920 --> 00:02:36,239
because i'm a fancy mofo

00:02:33,920 --> 00:02:36,959
so what i did is i built a s3 module and

00:02:36,239 --> 00:02:39,920
an sqs

00:02:36,959 --> 00:02:42,400
module the s3 module is a simple wrapper

00:02:39,920 --> 00:02:45,040
around the aws jdk

00:02:42,400 --> 00:02:45,920
library for s3 and all i did was

00:02:45,040 --> 00:02:47,840
basically

00:02:45,920 --> 00:02:49,440
configure it to connect to local host on

00:02:47,840 --> 00:02:51,680
port 3450

00:02:49,440 --> 00:02:52,720
which cloud sidecar is running on and

00:02:51,680 --> 00:02:54,640
for sqs

00:02:52,720 --> 00:02:56,000
similarly i configure it to connect to

00:02:54,640 --> 00:02:59,200
port 3460

00:02:56,000 --> 00:03:01,440
on localhost now your python application

00:02:59,200 --> 00:03:03,920
photo library similar configure the

00:03:01,440 --> 00:03:07,200
endpoint url localhost 3 460

00:03:03,920 --> 00:03:08,879
and 3 450. really simple code changes to

00:03:07,200 --> 00:03:11,120
what would be your existing code

00:03:08,879 --> 00:03:12,800
let me start up my python worker cloud

00:03:11,120 --> 00:03:13,840
sidecar is running and my play app is

00:03:12,800 --> 00:03:16,000
running also

00:03:13,840 --> 00:03:17,920
my s3 bucket it's empty i want to show

00:03:16,000 --> 00:03:19,599
you that there's no tricks up my sleeve

00:03:17,920 --> 00:03:21,599
and the gcs bucket the google cloud

00:03:19,599 --> 00:03:23,360
buckets also empty

00:03:21,599 --> 00:03:24,720
now i'm going to upload an image right

00:03:23,360 --> 00:03:27,040
now and

00:03:24,720 --> 00:03:28,560
cloud sidecar is actually configured to

00:03:27,040 --> 00:03:31,040
talk to amazon right now

00:03:28,560 --> 00:03:32,959
so my image is going to upload to s3 a

00:03:31,040 --> 00:03:34,720
message is going to go on to sqs

00:03:32,959 --> 00:03:36,239
a worker is going to listen to sqs

00:03:34,720 --> 00:03:38,239
download the image convert it

00:03:36,239 --> 00:03:39,840
and upload it back to s3 and they'll

00:03:38,239 --> 00:03:41,840
display in the ui

00:03:39,840 --> 00:03:44,000
here you go let me show you the bucket

00:03:41,840 --> 00:03:46,560
on s3 a source and destination

00:03:44,000 --> 00:03:47,280
image and my google cloud storage still

00:03:46,560 --> 00:03:49,599
has no

00:03:47,280 --> 00:03:51,440
images i want more now i'm going to

00:03:49,599 --> 00:03:53,360
restart cloud sidecar

00:03:51,440 --> 00:03:54,560
and configure it actually to talk to

00:03:53,360 --> 00:03:56,080
google cloud

00:03:54,560 --> 00:03:58,400
you don't actually need to restart cloud

00:03:56,080 --> 00:04:00,239
sidecar it does hot config reloading

00:03:58,400 --> 00:04:02,159
but i just wanted to do it for the demo

00:04:00,239 --> 00:04:03,439
just to make things easier on me

00:04:02,159 --> 00:04:06,319
so now i'm going to upload a different

00:04:03,439 --> 00:04:08,319
image and not actually restarting any of

00:04:06,319 --> 00:04:10,640
my applications for cloud sidecar

00:04:08,319 --> 00:04:12,080
but the image is going to upload to gcs

00:04:10,640 --> 00:04:14,000
google cloud storage

00:04:12,080 --> 00:04:16,239
and a message is going to go to pub sub

00:04:14,000 --> 00:04:18,320
the workers are listening on pub sub now

00:04:16,239 --> 00:04:19,600
they'll download the image from gcs and

00:04:18,320 --> 00:04:21,919
upload the destination

00:04:19,600 --> 00:04:23,840
image to gcs and as you can see here

00:04:21,919 --> 00:04:28,160
there are now two images on gcs the

00:04:23,840 --> 00:04:30,560
source and destination image

00:04:28,160 --> 00:04:31,759
sidecar we support a lot of things not

00:04:30,560 --> 00:04:32,560
everything we're always adding more

00:04:31,759 --> 00:04:35,520
features

00:04:32,560 --> 00:04:36,400
uh generally we do aws amazon to google

00:04:35,520 --> 00:04:39,759
cloud

00:04:36,400 --> 00:04:42,240
conversions we do storage s3 to gcs

00:04:39,759 --> 00:04:43,759
cues sqs to pubesa streaming data

00:04:42,240 --> 00:04:46,560
kinesis to pub sub

00:04:43,759 --> 00:04:49,840
key value dynamo to data store and big

00:04:46,560 --> 00:04:52,000
data which is redshift to bigquery

00:04:49,840 --> 00:04:54,000
cool so you've seen some of the features

00:04:52,000 --> 00:04:56,080
that cloud sidecar has to offer

00:04:54,000 --> 00:04:58,560
kind of interested in learning more go

00:04:56,080 --> 00:04:59,080
to cloudside.com to get more information

00:04:58,560 --> 00:05:00,720
so

00:04:59,080 --> 00:05:02,880
cloudsidecar.com i don't want to say

00:05:00,720 --> 00:05:04,479
that wrong you can find us on github

00:05:02,880 --> 00:05:07,120
github.com

00:05:04,479 --> 00:05:07,840
cloudsidecar you could also hit me up

00:05:07,120 --> 00:05:10,400
via email

00:05:07,840 --> 00:05:25,840
larry cloudsidecar.com or find me on

00:05:10,400 --> 00:05:25,840
twitter at lawrencefit

00:05:26,560 --> 00:05:28,639

YouTube URL: https://www.youtube.com/watch?v=wFrvMOAYxcQ


