Title: stackconf online 2020 | Ignite talk: Build your own S3 storage with min.io by Stefan Sels
Publication date: 2020-06-27
Playlist: stackconf online 2020
Description: 
	min.io allows you to setup an S3 storage on your private cloud infrastructure that is 100% compatible with AWS (you can use the AWS S3 client to interact with min.io). It has a wide range of authentication and notification options. For instance you trigger a webhook to your REST API if a file is created and automatically process them. It is optimized for high performance and is used in production.

NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de 

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Music: Walking on Air - https://www.frametraxx.de/
Captions: 
	00:00:00,450 --> 00:00:16,490
[Music]

00:00:13,389 --> 00:00:19,310
welcome to my stack home 2020

00:00:16,490 --> 00:00:20,960
talk building your own f3 storage with

00:00:19,310 --> 00:00:26,000
Malaya I'm Stefan

00:00:20,960 --> 00:00:28,510
and I work for anyway what is mineral

00:00:26,000 --> 00:00:31,250
it's an s3 storage server and the client

00:00:28,510 --> 00:00:34,730
it's hundred percent comfortable with

00:00:31,250 --> 00:00:38,360
AWS s3 API and the AWS client works with

00:00:34,730 --> 00:00:40,940
it it extends as a pure AWS can do its

00:00:38,360 --> 00:00:43,549
high performance it's used in production

00:00:40,940 --> 00:00:44,710
to it then go and can be used with

00:00:43,549 --> 00:00:49,780
docker

00:00:44,710 --> 00:00:49,780
kubernetes standalone and other options

00:00:51,339 --> 00:00:57,369
let's run it if you just want to try out

00:00:54,170 --> 00:01:00,650
I mean I owe you could just use docker

00:00:57,369 --> 00:01:03,619
pull the image and run the container the

00:01:00,650 --> 00:01:06,619
lineups give them on the slide it will

00:01:03,619 --> 00:01:08,900
just run on port 9000 and provide the

00:01:06,619 --> 00:01:12,680
files which are in the directory mounted

00:01:08,900 --> 00:01:18,650
in the volume you can simply use the AWS

00:01:12,680 --> 00:01:20,390
client and extra stuff from hard but

00:01:18,650 --> 00:01:23,870
wait there's more you can do with

00:01:20,390 --> 00:01:26,300
mineral it has a notification option on

00:01:23,870 --> 00:01:29,990
events like if you create a file it can

00:01:26,300 --> 00:01:32,990
notify you with a backlog SQL and qtt

00:01:29,990 --> 00:01:35,000
and Coquille Kafka and others the

00:01:32,990 --> 00:01:38,330
authentication can be provided Usenet

00:01:35,000 --> 00:01:41,120
groups key cloak Azure directory and it

00:01:38,330 --> 00:01:45,200
integrates of scaling love balancing and

00:01:41,120 --> 00:01:48,710
has native TLS support let's make an

00:01:45,200 --> 00:01:50,600
example the new file is created mineral

00:01:48,710 --> 00:01:53,000
notifies the application we have the

00:01:50,600 --> 00:01:55,729
clock the application downloads a file

00:01:53,000 --> 00:01:58,790
does some work and your application

00:01:55,729 --> 00:02:00,740
upload the result into me now Mina Hall

00:01:58,790 --> 00:02:02,210
then notifies you for example with a

00:02:00,740 --> 00:02:05,750
nice girl insert into your web

00:02:02,210 --> 00:02:10,700
application and then the workflow is

00:02:05,750 --> 00:02:14,150
done it has a education support and it

00:02:10,700 --> 00:02:16,700
can use the key and secret to provide

00:02:14,150 --> 00:02:19,250
user name and password support users can

00:02:16,700 --> 00:02:21,860
be organized into groups and ACS can be

00:02:19,250 --> 00:02:24,080
applied to users and groups you can also

00:02:21,860 --> 00:02:28,180
use external authentication of kilo

00:02:24,080 --> 00:02:31,550
the active directory client in API

00:02:28,180 --> 00:02:33,950
frameworks are supported the native AWS

00:02:31,550 --> 00:02:36,500
kind tool you can use the mineral tool

00:02:33,950 --> 00:02:39,800
which has support for features that AWS

00:02:36,500 --> 00:02:42,770
does not have like users and ACLs and

00:02:39,800 --> 00:02:44,840
you cannot use a standard REST API in

00:02:42,770 --> 00:02:49,820
bindings for all major frameworks to

00:02:44,840 --> 00:02:53,120
communicate with your Manero server TLS

00:02:49,820 --> 00:02:54,950
support is included if you want to it

00:02:53,120 --> 00:02:57,350
works with less and good certificates or

00:02:54,950 --> 00:02:59,630
just any static app certificates you

00:02:57,350 --> 00:03:03,530
would get and it might be easier than

00:02:59,630 --> 00:03:08,480
proxying the TLS connection level love

00:03:03,530 --> 00:03:11,480
the himself as a reserve proxy Mina has

00:03:08,480 --> 00:03:13,370
a big community in support which is free

00:03:11,480 --> 00:03:15,230
if you use github issues and the Select

00:03:13,370 --> 00:03:17,450
instance and if you need to come a

00:03:15,230 --> 00:03:22,190
commercial support you can pay for it of

00:03:17,450 --> 00:03:26,570
course it's also now and there's plenty

00:03:22,190 --> 00:03:28,870
of documentation you can thanks for

00:03:26,570 --> 00:03:28,870
watching

00:03:31,430 --> 00:03:47,919

YouTube URL: https://www.youtube.com/watch?v=0BVASrEl9hM


