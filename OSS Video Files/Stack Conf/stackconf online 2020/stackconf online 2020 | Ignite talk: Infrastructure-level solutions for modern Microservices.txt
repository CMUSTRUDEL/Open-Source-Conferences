Title: stackconf online 2020 | Ignite talk: Infrastructure-level solutions for modern Microservices
Publication date: 2020-06-27
Playlist: stackconf online 2020
Description: 
	...by Petar Radosavljevic

Modern data-intensive microservice applications live in cloud and containers, they use machine learning techniques and serverless functions in data pipelines. Microservices should be efficient, scalable and decoupled, but the integration of services is very challenging through the application’s code. I will show how this can be accomplished by using service mesh that
fundamentally changes how services are managed without changing the single line of code in services. Application’s code stays simpler and easier to maintain, which is preferable in many ways for both developers and operations, and on the other hand – scalability, security and observability increases.


NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de 

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Music: Walking on Air - https://www.frametraxx.de/
Captions: 
	00:00:00,630 --> 00:00:11,550
you

00:00:00,780 --> 00:00:14,830
[Music]

00:00:11,550 --> 00:00:17,380
good afternoon and welcome everybody to

00:00:14,830 --> 00:00:19,869
this ignite my name is better to Sally

00:00:17,380 --> 00:00:22,560
which and if your team saw typical

00:00:19,869 --> 00:00:24,820
application networking concerns on

00:00:22,560 --> 00:00:26,640
application level and by changing

00:00:24,820 --> 00:00:30,130
application code then this is the right

00:00:26,640 --> 00:00:33,460
presentation for you before we dive in

00:00:30,130 --> 00:00:36,460
let's take a look on agenda today's

00:00:33,460 --> 00:00:40,180
agenda is pretty straightforward we'll

00:00:36,460 --> 00:00:42,519
go through steps and how we'll see how

00:00:40,180 --> 00:00:49,150
one simple microservices application

00:00:42,519 --> 00:00:52,780
becomes complex idea today is to show

00:00:49,150 --> 00:00:55,210
another point of view in the past we

00:00:52,780 --> 00:00:58,629
know that companies spend massive amount

00:00:55,210 --> 00:01:00,909
of time and resources buy-in by

00:00:58,629 --> 00:01:04,900
developing custom frameworks and

00:01:00,909 --> 00:01:09,340
libraries and applications but do we

00:01:04,900 --> 00:01:13,450
need it anymore twelve give us a way to

00:01:09,340 --> 00:01:17,010
transform all monolithic applications to

00:01:13,450 --> 00:01:21,370
the micro service architecture so

00:01:17,010 --> 00:01:23,650
companies found a way to automate the

00:01:21,370 --> 00:01:27,480
business processes to address the

00:01:23,650 --> 00:01:30,190
business demands and micro service

00:01:27,480 --> 00:01:33,940
architecture enables developers to bring

00:01:30,190 --> 00:01:40,750
new features we clip but how time goes

00:01:33,940 --> 00:01:43,540
on our micro is not micro anymore and we

00:01:40,750 --> 00:01:48,280
can see that services are getting bigger

00:01:43,540 --> 00:01:51,510
and bigger and one day it happened

00:01:48,280 --> 00:01:54,760
debate about a new feature and

00:01:51,510 --> 00:01:56,800
developers explained that the feature

00:01:54,760 --> 00:01:59,860
itself is not a problem but the problem

00:01:56,800 --> 00:02:02,830
is the whole system around that feature

00:01:59,860 --> 00:02:09,220
the security the trace and things like

00:02:02,830 --> 00:02:12,640
that and if we analyze these we can see

00:02:09,220 --> 00:02:15,250
that the problem is the size of the mesh

00:02:12,640 --> 00:02:18,099
and we see that now is hard to identify

00:02:15,250 --> 00:02:20,450
the bottlenecks it's hard to track what

00:02:18,099 --> 00:02:23,270
is going on inside that mesh

00:02:20,450 --> 00:02:25,010
and if we analyze this from the

00:02:23,270 --> 00:02:27,319
perspective of time being spent by

00:02:25,010 --> 00:02:30,920
developers inside one sprint for example

00:02:27,319 --> 00:02:33,530
we can see that only half of the time

00:02:30,920 --> 00:02:36,770
they spend on providing business value

00:02:33,530 --> 00:02:40,310
section so that is a big problem and to

00:02:36,770 --> 00:02:43,370
address this application asking concerns

00:02:40,310 --> 00:02:45,860
I want to present you solution on the

00:02:43,370 --> 00:02:49,760
infrastructure level and it's a service

00:02:45,860 --> 00:02:51,440
mesh and the service mesh is very

00:02:49,760 --> 00:02:55,580
powerful network and today I will

00:02:51,440 --> 00:03:01,340
present you the easier East EO controls

00:02:55,580 --> 00:03:04,340
all applications traffic and typically

00:03:01,340 --> 00:03:07,220
through a set of network proxies that

00:03:04,340 --> 00:03:11,120
sit alongside of your container and

00:03:07,220 --> 00:03:13,670
services and if we are talking about why

00:03:11,120 --> 00:03:17,810
to use this feel well it can help us to

00:03:13,670 --> 00:03:20,090
send apps to be back back to be micro

00:03:17,810 --> 00:03:22,970
again and also you have its most

00:03:20,090 --> 00:03:25,310
important is that now developers can

00:03:22,970 --> 00:03:28,390
only think about providing business

00:03:25,310 --> 00:03:35,989
values and not to think about security

00:03:28,390 --> 00:03:38,060
about network etc and this is a example

00:03:35,989 --> 00:03:40,310
of how the traffic route looks like in

00:03:38,060 --> 00:03:42,200
the east user is mesh you can see that

00:03:40,310 --> 00:03:45,940
unlike some other English resources it's

00:03:42,200 --> 00:03:53,180
a little bit complex but that complexity

00:03:45,940 --> 00:03:54,950
make it more smarter than other and now

00:03:53,180 --> 00:03:58,340
we will see a complete examples where we

00:03:54,950 --> 00:04:01,700
can get rid of application code first of

00:03:58,340 --> 00:04:03,739
all we are talking about TLS East you

00:04:01,700 --> 00:04:07,190
can secure the communication a bit

00:04:03,739 --> 00:04:10,600
between all the parts in the mesh and it

00:04:07,190 --> 00:04:13,370
can provide a strong cryptography

00:04:10,600 --> 00:04:15,170
identity to all services inside that

00:04:13,370 --> 00:04:17,750
mesh and we are talking about

00:04:15,170 --> 00:04:20,329
authorization there is no need anymore

00:04:17,750 --> 00:04:23,330
to have some optimization block of codes

00:04:20,329 --> 00:04:25,880
inside your application because because

00:04:23,330 --> 00:04:31,099
East you can be in front of your mesh

00:04:25,880 --> 00:04:32,280
and block all fake requests also we can

00:04:31,099 --> 00:04:36,360
avoid

00:04:32,280 --> 00:04:42,090
implementing complex counters in order

00:04:36,360 --> 00:04:49,160
to have scalable application and also we

00:04:42,090 --> 00:04:52,500
can avoid implement complex logging

00:04:49,160 --> 00:04:58,169
insider code because all these come by

00:04:52,500 --> 00:05:01,710
default in East your network so this

00:04:58,169 --> 00:05:05,790
idea the idea of search mesh has become

00:05:01,710 --> 00:05:09,740
increasingly popular over the past few

00:05:05,790 --> 00:05:11,730
years guys are working on version 2

00:05:09,740 --> 00:05:16,880
architecture there there are some other

00:05:11,730 --> 00:05:21,210
also service masters of course and for

00:05:16,880 --> 00:05:25,010
for those who are not familiar on this

00:05:21,210 --> 00:05:27,660
slide I share some helpful resources

00:05:25,010 --> 00:05:30,630
that will that will be all for me today

00:05:27,660 --> 00:05:32,980
thank you for your time and stay healthy

00:05:30,630 --> 00:05:43,730
bye

00:05:32,980 --> 00:05:43,730
[Music]

00:05:43,880 --> 00:05:49,470
you

00:05:44,920 --> 00:05:49,470

YouTube URL: https://www.youtube.com/watch?v=DSF9Z2mpQJo


