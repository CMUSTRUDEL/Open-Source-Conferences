Title: stackconf online 2020 | Ignite talk: Opensource in Advanced Research Computing, How Canada did it!
Publication date: 2020-06-27
Playlist: stackconf online 2020
Description: 
	...by Mohamed Elsakawy

Opensource software is becoming a pillar in our everyday life, leveraged by our cell phones, our transportation systems and on the websites we visit. In this quick talk, we will have a look on how Canada’s Advanced Research Computing (“ARC”) organizations use opensource software to deploy and operate some of the largest Supercomputers and Cloud deployments on Earth. We will briefly introduce the systems and dig deeper into the opensource technologies that together make the magic happen !

NETWAYS
Konferenzen: https://www.netways.de/events
Schulungen: https://www.netways.de/schulungen
Shop: https://shop.netways.de/
Blog: http://blog.netways.de/
NWS: https://nws.netways.de 

Webinare
Archiv Link: https://www.netways.de/webinare/archi...
Aktuell: https://www.netways.de/wb

Social Media
SlideShare: http://de.slideshare.net/netways
YouTube: https://www.netways.de/youtube
Facebook: https://www.facebook.com/netways
Twitter: https://twitter.com/netways
Instagram: https://www.instagram.com/netwaysgmbh/

Music: Walking on Air - https://www.frametraxx.de/
Captions: 
	00:00:00,450 --> 00:00:11,189
[Music]

00:00:11,420 --> 00:00:15,240
okay good afternoon everyone thank very

00:00:13,530 --> 00:00:16,500
much for being here today I hope

00:00:15,240 --> 00:00:18,090
everyone's doing well in these tough

00:00:16,500 --> 00:00:20,130
times my name is Mohammad so how are we

00:00:18,090 --> 00:00:21,810
today I'll be talking to you about open

00:00:20,130 --> 00:00:23,640
sourcing advanced research computing in

00:00:21,810 --> 00:00:25,830
Canada and as more specifically on how

00:00:23,640 --> 00:00:28,050
we use open source software to deliver

00:00:25,830 --> 00:00:30,390
platforms for end-users and don't finish

00:00:28,050 --> 00:00:32,400
by the lessons they're made that I'd

00:00:30,390 --> 00:00:35,010
like to communicate you about using open

00:00:32,400 --> 00:00:36,750
source America so firstly advancing

00:00:35,010 --> 00:00:38,840
social computing in Canada it's not a

00:00:36,750 --> 00:00:40,610
long time ago mainly use supercomputers

00:00:38,840 --> 00:00:42,270
right now we still operate

00:00:40,610 --> 00:00:44,700
supercomputers we have four million

00:00:42,270 --> 00:00:47,610
supercomputers listen our top 500 list

00:00:44,700 --> 00:00:50,610
between them there's 250 1000 physical

00:00:47,610 --> 00:00:52,470
CPU cores thousands ugp advice as well

00:00:50,610 --> 00:00:55,230
attach it for some particular water such

00:00:52,470 --> 00:00:58,110
as machine learning we also have FPGA

00:00:55,230 --> 00:00:59,280
devices to be used when needed with the

00:00:58,110 --> 00:01:01,080
version as I mentioned over the years

00:00:59,280 --> 00:01:03,210
from all year supercomputing model to

00:01:01,080 --> 00:01:05,070
also have cloud deployments so we start

00:01:03,210 --> 00:01:07,500
at 6 years ago the cloud deployment and

00:01:05,070 --> 00:01:08,820
then we evolved from that to have 4

00:01:07,500 --> 00:01:11,520
major cloud deployments right now

00:01:08,820 --> 00:01:14,820
between them there's 16,000 physical CPU

00:01:11,520 --> 00:01:18,899
cores around 6.48 alliance of self and

00:01:14,820 --> 00:01:21,570
we also allow users to provision VMs in

00:01:18,899 --> 00:01:24,149
the cloud with V GPUs and FPGA is we

00:01:21,570 --> 00:01:26,490
need it we also have the other software

00:01:24,149 --> 00:01:28,530
within our staff such as BTI division

00:01:26,490 --> 00:01:30,210
service platform as a service which are

00:01:28,530 --> 00:01:33,509
part of the regular standard people

00:01:30,210 --> 00:01:36,899
provide to our end users for use for the

00:01:33,509 --> 00:01:38,850
computation workers so our King Canada

00:01:36,899 --> 00:01:40,049
is open-source at heart we try as much

00:01:38,850 --> 00:01:43,439
as possible to use open source software

00:01:40,049 --> 00:01:45,119
women possible we have large suite

00:01:43,439 --> 00:01:47,909
open-source software within our stack

00:01:45,119 --> 00:01:50,429
and within our HPC systems we use Linux

00:01:47,909 --> 00:01:52,590
we slurm scheduler which is an open

00:01:50,429 --> 00:01:53,880
source scheduler we use lost a file

00:01:52,590 --> 00:01:55,770
system which is also an open source

00:01:53,880 --> 00:01:58,770
high-performance file system and they

00:01:55,770 --> 00:02:00,979
recently started investing time in pro

00:01:58,770 --> 00:02:02,939
bono policy engine which allows us to do

00:02:00,979 --> 00:02:05,459
hierarchical storage management to

00:02:02,939 --> 00:02:07,619
attend lustre our cloud deployments are

00:02:05,459 --> 00:02:10,080
based on Linux use OpenStack clear

00:02:07,619 --> 00:02:12,150
climate enabling platform you set for

00:02:10,080 --> 00:02:13,860
our storage and we use OpenStack ansible

00:02:12,150 --> 00:02:16,380
for the unification of our deployments

00:02:13,860 --> 00:02:19,140
so basically use one tool to deploy our

00:02:16,380 --> 00:02:21,000
clowns everywhere and this way we were

00:02:19,140 --> 00:02:21,440
sure that its unified way of managing

00:02:21,000 --> 00:02:24,290
and

00:02:21,440 --> 00:02:26,240
for as well so again what is open

00:02:24,290 --> 00:02:28,880
sources it's basically everywhere our

00:02:26,240 --> 00:02:31,820
infrastructure we have operating systems

00:02:28,880 --> 00:02:33,620
HPC and cloud frameworks for our

00:02:31,820 --> 00:02:35,840
day-to-day operations are monitoring

00:02:33,620 --> 00:02:38,570
stack with early use for visualization

00:02:35,840 --> 00:02:40,700
graph an app prometheus configuration

00:02:38,570 --> 00:02:43,040
management as well even our procedures

00:02:40,700 --> 00:02:44,710
will have open source on them such as

00:02:43,040 --> 00:02:46,970
ticketing systems we use OTRS

00:02:44,710 --> 00:02:52,130
documentation we very heavily reliant

00:02:46,970 --> 00:02:55,610
wiki for that so using open source

00:02:52,130 --> 00:02:57,470
anarchist a bit of a big advantage

00:02:55,610 --> 00:02:59,420
it actually has lots of advantages with

00:02:57,470 --> 00:03:01,940
it but there is three main lessons to

00:02:59,420 --> 00:03:03,440
learn when using open source in advanced

00:03:01,940 --> 00:03:06,320
research computing which I've learned

00:03:03,440 --> 00:03:08,960
over the years first one is avoid

00:03:06,320 --> 00:03:11,330
instant adoption and secondly is talk to

00:03:08,960 --> 00:03:14,810
your customers and thirdly is getting a

00:03:11,330 --> 00:03:17,630
woman to open source community so first

00:03:14,810 --> 00:03:19,370
thing is avoidance to adoption all of us

00:03:17,630 --> 00:03:21,440
have been in the IT field for a long

00:03:19,370 --> 00:03:23,090
time so you probably know that there are

00:03:21,440 --> 00:03:25,790
some piece of software that are

00:03:23,090 --> 00:03:27,560
published it was not using it and then

00:03:25,790 --> 00:03:29,239
the in superior and open source software

00:03:27,560 --> 00:03:30,830
is not very different from that we see

00:03:29,239 --> 00:03:33,080
projects that come out and open-source

00:03:30,830 --> 00:03:35,570
community starts talking about it and

00:03:33,080 --> 00:03:37,880
starts adopting them and then they

00:03:35,570 --> 00:03:41,480
become abandoned very fast within a few

00:03:37,880 --> 00:03:42,920
months of the year so open source

00:03:41,480 --> 00:03:44,840
software actually folders battery even

00:03:42,920 --> 00:03:47,030
though both are you mentioning here so

00:03:44,840 --> 00:03:49,040
it's important to basically try and try

00:03:47,030 --> 00:03:51,380
it to basically avoid the adoption of

00:03:49,040 --> 00:03:53,239
software before approves mature enough

00:03:51,380 --> 00:03:55,310
and before pools it's here to stay

00:03:53,239 --> 00:03:57,350
because once you publish a piece of

00:03:55,310 --> 00:03:59,780
software to your end-users and there's

00:03:57,350 --> 00:04:02,269
always the urge for that users will

00:03:59,780 --> 00:04:03,680
actually use an arc scale you have

00:04:02,269 --> 00:04:05,180
thousands of thousand or tens of

00:04:03,680 --> 00:04:07,070
thousands of servers and you have

00:04:05,180 --> 00:04:08,780
thousands of users and people actually

00:04:07,070 --> 00:04:10,640
start adopting the piece of software in

00:04:08,780 --> 00:04:12,980
use with a cloud deployment or whether

00:04:10,640 --> 00:04:15,890
it's a platform as a service then you

00:04:12,980 --> 00:04:17,780
feature end right away and it's very

00:04:15,890 --> 00:04:19,970
hard to undo ploy that when it's being

00:04:17,780 --> 00:04:22,090
used and if you lose support for that

00:04:19,970 --> 00:04:24,200
because the community is no longer

00:04:22,090 --> 00:04:26,540
developing and tested piece of software

00:04:24,200 --> 00:04:28,940
it's no longer supported or it gets

00:04:26,540 --> 00:04:31,250
bought it becomes a big nightmare to

00:04:28,940 --> 00:04:34,050
basically roll it out of the environment

00:04:31,250 --> 00:04:36,640
because users have already started using

00:04:34,050 --> 00:04:39,130
so second thing is basically talk to

00:04:36,640 --> 00:04:41,140
your customers this is very important

00:04:39,130 --> 00:04:42,250
because once you talk to your customers

00:04:41,140 --> 00:04:44,080
you will understand what they are doing

00:04:42,250 --> 00:04:44,860
when it comes to their projects the

00:04:44,080 --> 00:04:46,780
workloads

00:04:44,860 --> 00:04:48,340
and you'll probably find an open source

00:04:46,780 --> 00:04:50,710
piece of software that I was there

00:04:48,340 --> 00:04:53,350
that's doing the job they are doing so

00:04:50,710 --> 00:04:54,850
instead of Dalarna off Python scripts or

00:04:53,350 --> 00:04:56,830
even reinventing the leader I think a

00:04:54,850 --> 00:04:58,540
fully fledged project you could actually

00:04:56,830 --> 00:05:01,420
use a piece of software that's out there

00:04:58,540 --> 00:05:02,860
to use it for your customers one thing

00:05:01,420 --> 00:05:06,400
that comes to my mind is cave serving

00:05:02,860 --> 00:05:09,040
which is a new way to deliver models

00:05:06,400 --> 00:05:11,470
basically motor serving for machine

00:05:09,040 --> 00:05:13,480
learning within kubernetes there is lots

00:05:11,470 --> 00:05:15,580
of custom ways to do that however if you

00:05:13,480 --> 00:05:16,570
have unified way of doing it and you can

00:05:15,580 --> 00:05:18,820
talk to your customer this is a

00:05:16,570 --> 00:05:21,100
preferred way they were probably adopted

00:05:18,820 --> 00:05:25,210
and it also helps you out because it

00:05:21,100 --> 00:05:27,070
will need less support in the future and

00:05:25,210 --> 00:05:28,180
again there's probably a project as I

00:05:27,070 --> 00:05:30,130
mentioned there's lots of projects

00:05:28,180 --> 00:05:32,140
open-source projects out there so that

00:05:30,130 --> 00:05:34,180
custom bash script or custom Perl

00:05:32,140 --> 00:05:35,950
scripts are blocking it and they are

00:05:34,180 --> 00:05:38,500
basically affecting as very silly your

00:05:35,950 --> 00:05:40,030
environment and it helps you as I

00:05:38,500 --> 00:05:41,440
mentioned because basically the

00:05:40,030 --> 00:05:43,090
homogeneous environment is a happy

00:05:41,440 --> 00:05:44,500
environment if how you have all your

00:05:43,090 --> 00:05:47,050
customers using a single piece of

00:05:44,500 --> 00:05:49,090
software for the common workloads and

00:05:47,050 --> 00:05:51,310
then the basic diverged out of that

00:05:49,090 --> 00:05:53,560
furthering unique workloads then that's

00:05:51,310 --> 00:05:55,510
good for you to cook a cheese allows you

00:05:53,560 --> 00:05:58,810
to have less support for the end users

00:05:55,510 --> 00:06:00,040
for that a last thing is basically to

00:05:58,810 --> 00:06:03,490
get involved the open source community

00:06:00,040 --> 00:06:06,070
and I know many of us are very busy with

00:06:03,490 --> 00:06:08,170
our t3 operations it's very hard to

00:06:06,070 --> 00:06:09,880
devote on the decay time but we found

00:06:08,170 --> 00:06:12,310
that even in a very little time if you

00:06:09,880 --> 00:06:14,500
dedicate that give it's a very good way

00:06:12,310 --> 00:06:16,120
to basically give back the community we

00:06:14,500 --> 00:06:19,150
have right now tutors that are heavily

00:06:16,120 --> 00:06:21,130
involved on OpenStack whether it's over

00:06:19,150 --> 00:06:23,890
Stein governance or in stock ansible and

00:06:21,130 --> 00:06:26,080
we will also find out that it's a good

00:06:23,890 --> 00:06:27,970
way to keep us informed of what's going

00:06:26,080 --> 00:06:29,260
on in the community we use lots of

00:06:27,970 --> 00:06:31,750
pieces of software as I mentioned from

00:06:29,260 --> 00:06:33,250
open source community so we would want

00:06:31,750 --> 00:06:36,340
always to know if there is a major

00:06:33,250 --> 00:06:37,510
change coming in that perspective if

00:06:36,340 --> 00:06:39,550
there is a piece of software that were

00:06:37,510 --> 00:06:41,500
heavily reliant on and it's undergoing

00:06:39,550 --> 00:06:43,210
huge changes might affect our deployment

00:06:41,500 --> 00:06:45,949
we want to know that because it will

00:06:43,210 --> 00:06:48,139
help us to plan accordingly within our

00:06:45,949 --> 00:06:50,389
and additionally despite the fact that

00:06:48,139 --> 00:06:52,729
arc and our personal clothes have became

00:06:50,389 --> 00:06:55,219
very similar in the past five or six

00:06:52,729 --> 00:06:56,659
years arc still has some sort of

00:06:55,219 --> 00:06:58,999
uniqueness is specifically with the

00:06:56,659 --> 00:07:00,830
scale of it because that default

00:06:58,999 --> 00:07:03,409
deployments is thousands of servers for

00:07:00,830 --> 00:07:04,909
for arc so it's always good to

00:07:03,409 --> 00:07:07,819
communicate the requirements and ensure

00:07:04,909 --> 00:07:09,529
that those requirements in the

00:07:07,819 --> 00:07:11,389
open-source editions or open source

00:07:09,529 --> 00:07:13,249
software are actually taken into

00:07:11,389 --> 00:07:15,739
consideration instead of being left out

00:07:13,249 --> 00:07:19,699
and this way you don't have to do one of

00:07:15,739 --> 00:07:21,889
deployments or one of tools to address

00:07:19,699 --> 00:07:23,929
your needs so communicating here needs

00:07:21,889 --> 00:07:25,849
to open-source community will show that

00:07:23,929 --> 00:07:27,469
the needs are actually we continue to be

00:07:25,849 --> 00:07:31,009
met and continue to be in the mainstream

00:07:27,469 --> 00:07:32,179
releases of software so that's basically

00:07:31,009 --> 00:07:34,039
it thank you very much for your time

00:07:32,179 --> 00:07:36,949
today and I hope you stay safe in these

00:07:34,039 --> 00:07:38,050
times and if you have any questions to

00:07:36,949 --> 00:07:54,559
answer

00:07:38,050 --> 00:07:54,559

YouTube URL: https://www.youtube.com/watch?v=t40oTtUse84


