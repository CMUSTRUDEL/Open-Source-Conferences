Title: A Look at OpenXR - SIGGRAPH 2019 BOF Sessions
Publication date: 2019-10-25
Playlist: Talks from the community
Description: 
	Speakers: Brent Insko (Intel)
Slides: https://khr.io/s3

An update on OpenXR, including the application and device interfaces and interoperability between different hardware. Epic Games, Microsoft and Varjo will demonstrate cross-platform XR applications within the same OpenXR API, showing how the standard helps to reduce industry fragmentation.
Captions: 
	00:00:00,060 --> 00:00:04,170
okay why don't we go ahead and get

00:00:01,230 --> 00:00:06,690
started then okay thanks everybody for

00:00:04,170 --> 00:00:09,660
coming out this afternoon and finding us

00:00:06,690 --> 00:00:16,470
up here the in the top of the JW

00:00:09,660 --> 00:00:18,119
Marriott so today is the this session is

00:00:16,470 --> 00:00:20,670
the open X are birds of a feather

00:00:18,119 --> 00:00:23,609
session my name is Brynn Ensco and I'm

00:00:20,670 --> 00:00:25,140
lead architect X our architect for Intel

00:00:23,609 --> 00:00:28,740
and I'm the working group chair for open

00:00:25,140 --> 00:00:30,929
XR I guess I drew the short straw today

00:00:28,740 --> 00:00:33,690
because I got the dreaded after a lunch

00:00:30,929 --> 00:00:35,010
session so hopefully you we've got some

00:00:33,690 --> 00:00:36,510
exciting news to share with you and a

00:00:35,010 --> 00:00:39,930
couple of demos hopefully we can keep

00:00:36,510 --> 00:00:44,370
you guys in thews and awake for the next

00:00:39,930 --> 00:00:45,570
hour or so so the exciting news that we

00:00:44,370 --> 00:00:48,719
have to share with you is that we

00:00:45,570 --> 00:00:50,940
launched the 1.0 release of the open XR

00:00:48,719 --> 00:00:52,860
specification which is the result of a

00:00:50,940 --> 00:00:55,260
lot of hard work by a lot of very

00:00:52,860 --> 00:00:57,300
talented engineers over the course of

00:00:55,260 --> 00:00:59,969
the last almost three years

00:00:57,300 --> 00:01:02,570
I'll start by discussing what open XR is

00:00:59,969 --> 00:01:05,700
why we need yet another standard and

00:01:02,570 --> 00:01:07,650
where we are with it today then we'll

00:01:05,700 --> 00:01:08,939
check out some demos from Vario and

00:01:07,650 --> 00:01:13,979
Microsoft and then I'll talk about

00:01:08,939 --> 00:01:15,390
what's next for open XR so following up

00:01:13,979 --> 00:01:18,110
on our release of a provisional

00:01:15,390 --> 00:01:20,340
specification at GDC four months ago

00:01:18,110 --> 00:01:23,000
earlier this week Chronos announced the

00:01:20,340 --> 00:01:26,360
release of the open XR 1.0 specification

00:01:23,000 --> 00:01:28,710
the working group drove really hard

00:01:26,360 --> 00:01:31,049
finalizing the specification in time for

00:01:28,710 --> 00:01:33,000
SIGGRAPH nailing down the exact

00:01:31,049 --> 00:01:34,439
functionality and incorporating the

00:01:33,000 --> 00:01:36,390
feedback that we got from the

00:01:34,439 --> 00:01:41,040
provisional release we made available

00:01:36,390 --> 00:01:42,930
back in March the 1.0 release is is

00:01:41,040 --> 00:01:44,220
really a big deal the release we did

00:01:42,930 --> 00:01:46,560
earlier this year the provisional

00:01:44,220 --> 00:01:48,360
release we put out with the knowledge

00:01:46,560 --> 00:01:50,460
that we had the ability to make changes

00:01:48,360 --> 00:01:52,229
you know potentially drastic changes if

00:01:50,460 --> 00:01:54,329
the developer community or the

00:01:52,229 --> 00:01:57,000
implementers ourselves found major

00:01:54,329 --> 00:01:59,579
issues with the with the specification

00:01:57,000 --> 00:02:02,189
with this one auto release we've locked

00:01:59,579 --> 00:02:03,990
down the API and are committing to

00:02:02,189 --> 00:02:06,000
support the included functionality going

00:02:03,990 --> 00:02:08,160
forward so that the developers can have

00:02:06,000 --> 00:02:09,710
confidence that the included features

00:02:08,160 --> 00:02:14,150
will be there when they go

00:02:09,710 --> 00:02:16,400
to implement their applications so today

00:02:14,150 --> 00:02:19,390
I'll cover what open XR is give a brief

00:02:16,400 --> 00:02:21,500
history of the development of open XR

00:02:19,390 --> 00:02:23,960
cover what the problems are we're trying

00:02:21,500 --> 00:02:26,780
to solve where we are in the time line

00:02:23,960 --> 00:02:29,150
of development then we'll jump into a

00:02:26,780 --> 00:02:31,010
brief overview of the open XR API then

00:02:29,150 --> 00:02:32,870
I'll step aside and we'll have Vario

00:02:31,010 --> 00:02:35,390
microsoft come up and provide a couple

00:02:32,870 --> 00:02:36,620
of demos of open XR in action and then

00:02:35,390 --> 00:02:40,850
I'll come back and talk about what's

00:02:36,620 --> 00:02:42,890
next and conclude the talk I'm just a

00:02:40,850 --> 00:02:44,720
brief aside the talk assumes you know a

00:02:42,890 --> 00:02:47,810
little bit about AR and VR we won't go

00:02:44,720 --> 00:02:49,280
into too much depth you bet you know a

00:02:47,810 --> 00:02:51,110
little bit about programming and very

00:02:49,280 --> 00:02:53,030
basic real-time rendering nothing about

00:02:51,110 --> 00:02:54,680
the specification process and nothing

00:02:53,030 --> 00:03:00,230
about any of the other Chronos

00:02:54,680 --> 00:03:02,690
specifications so what is open X are so

00:03:00,230 --> 00:03:05,090
open XR is a royalty-free open standard

00:03:02,690 --> 00:03:06,710
that provides high performance access to

00:03:05,090 --> 00:03:09,920
augmented reality and virtual reality

00:03:06,710 --> 00:03:11,780
platforms and devices as a node I'll be

00:03:09,920 --> 00:03:13,940
using the phrase or the term XR

00:03:11,780 --> 00:03:16,490
throughout the talk this includes all

00:03:13,940 --> 00:03:20,570
the technologies around AR vrm are

00:03:16,490 --> 00:03:22,400
anything similar okay so I've provided a

00:03:20,570 --> 00:03:22,900
definition so what does that actually

00:03:22,400 --> 00:03:25,220
mean

00:03:22,900 --> 00:03:27,110
so to understand what that means let's

00:03:25,220 --> 00:03:32,800
give a brief history of where we started

00:03:27,110 --> 00:03:34,820
with open XR back in the early 2000s

00:03:32,800 --> 00:03:36,710
sorry early 2016

00:03:34,820 --> 00:03:39,050
among the first widely available

00:03:36,710 --> 00:03:41,780
platforms on this current wave of VR

00:03:39,050 --> 00:03:43,880
were the oculus rift and the HTC vive

00:03:41,780 --> 00:03:45,800
which is great this brand new VR

00:03:43,880 --> 00:03:48,080
ecosystem had a couple of different

00:03:45,800 --> 00:03:51,110
platforms to choose from and consumers

00:03:48,080 --> 00:03:53,510
would have options to on which hardware

00:03:51,110 --> 00:03:56,090
platform to buy and to use to experience

00:03:53,510 --> 00:03:57,530
VR but for those consumers to be

00:03:56,090 --> 00:03:59,060
interested in doing something with VR

00:03:57,530 --> 00:04:00,350
you actually had to be able to do

00:03:59,060 --> 00:04:04,070
something with them you actually needed

00:04:00,350 --> 00:04:05,930
to have applications to you know drive

00:04:04,070 --> 00:04:07,580
the sales of these platforms the

00:04:05,930 --> 00:04:10,130
challenge for a developer is that each

00:04:07,580 --> 00:04:11,890
of these software development kits for

00:04:10,130 --> 00:04:14,720
each of these platforms were different

00:04:11,890 --> 00:04:16,880
but if you think about it you know VR

00:04:14,720 --> 00:04:18,500
and AR for that matter or tasks like you

00:04:16,880 --> 00:04:19,989
know get the head position get where the

00:04:18,500 --> 00:04:21,970
hands are in the real world

00:04:19,989 --> 00:04:24,340
are their buttons pressed on the

00:04:21,970 --> 00:04:26,020
controller I'm using tell me when the

00:04:24,340 --> 00:04:27,729
image I'm drawing on the screen is going

00:04:26,020 --> 00:04:30,039
to appear these are all common

00:04:27,729 --> 00:04:33,639
functionality across all of these VR @ar

00:04:30,039 --> 00:04:35,080
platforms and so right off at the

00:04:33,639 --> 00:04:37,479
beginning we already have a fragmented

00:04:35,080 --> 00:04:39,819
ecosystem and this makes it a problem

00:04:37,479 --> 00:04:41,919
for everybody in a number of different

00:04:39,819 --> 00:04:43,599
ways first it increases development time

00:04:41,919 --> 00:04:44,979
and therefore costs you have to

00:04:43,599 --> 00:04:46,449
implement separate paths and your

00:04:44,979 --> 00:04:48,550
applications to handle each of the

00:04:46,449 --> 00:04:51,400
different platforms and each of the

00:04:48,550 --> 00:04:55,780
vendors platforms can have slightly

00:04:51,400 --> 00:04:57,280
different api's it also increases the

00:04:55,780 --> 00:04:59,830
validation overhead because each of

00:04:57,280 --> 00:05:01,210
these paths could introduce new bugs and

00:04:59,830 --> 00:05:03,490
bugs that would only appear on that

00:05:01,210 --> 00:05:05,500
particular platform and so now you're

00:05:03,490 --> 00:05:06,759
having to go and test every platform and

00:05:05,500 --> 00:05:10,900
all the different code paths and this

00:05:06,759 --> 00:05:12,490
increases cost and time and so time and

00:05:10,900 --> 00:05:16,599
resources of the developers are really

00:05:12,490 --> 00:05:18,610
spent on developing this one platform

00:05:16,599 --> 00:05:21,430
sorry one title across multiple

00:05:18,610 --> 00:05:23,590
platforms and this impacts developers

00:05:21,430 --> 00:05:25,030
ability to deliver more and more content

00:05:23,590 --> 00:05:28,449
and one of the things that we see that's

00:05:25,030 --> 00:05:30,789
holding back VR adoption is you know

00:05:28,449 --> 00:05:33,639
lots and lots of content that would be

00:05:30,789 --> 00:05:35,830
available and you know this becomes a

00:05:33,639 --> 00:05:38,440
problem just with a couple of platforms

00:05:35,830 --> 00:05:40,240
in the very beginning as you look in

00:05:38,440 --> 00:05:42,909
just a few years we already have a

00:05:40,240 --> 00:05:44,380
number of major XR runtimes in the

00:05:42,909 --> 00:05:47,860
marketplace and a number of prominent

00:05:44,380 --> 00:05:48,909
ones even I've left out for VR on the PC

00:05:47,860 --> 00:05:51,580
you have the rift

00:05:48,909 --> 00:05:54,520
yo steamvr and Valve's index and HTC

00:05:51,580 --> 00:05:56,830
vive and vipro windows mixed reality

00:05:54,520 --> 00:05:59,440
with Microsoft you have all in ones from

00:05:56,830 --> 00:06:01,570
oculus like the go in the quest mobile

00:05:59,440 --> 00:06:03,370
devices all in ones on the augmented

00:06:01,570 --> 00:06:07,300
reality side from the hololens to the

00:06:03,370 --> 00:06:09,520
magic leap device etc etc so developing

00:06:07,300 --> 00:06:11,889
a single application to serve all of

00:06:09,520 --> 00:06:15,610
these runtimes and devices and platforms

00:06:11,889 --> 00:06:17,740
becomes a real challenge and so that's

00:06:15,610 --> 00:06:19,599
where open XR comes in so recognizing

00:06:17,740 --> 00:06:23,800
this problem a group of companies got

00:06:19,599 --> 00:06:26,190
together in late 2016 early 2017 to form

00:06:23,800 --> 00:06:29,139
the open XR working group in Chronos and

00:06:26,190 --> 00:06:31,570
despite the problem originating with VR

00:06:29,139 --> 00:06:33,880
we wanted to make sure that we were

00:06:31,570 --> 00:06:36,100
working towards a fully supporting a

00:06:33,880 --> 00:06:41,290
as well hence the inclusion of both VR

00:06:36,100 --> 00:06:42,970
and AR in our logo so to understand the

00:06:41,290 --> 00:06:45,700
problem more visually we've made this

00:06:42,970 --> 00:06:47,410
diagram the current AR and VR markets

00:06:45,700 --> 00:06:49,470
are quite small so developers need to

00:06:47,410 --> 00:06:51,700
reach as large an audience as possible

00:06:49,470 --> 00:06:54,190
meaning they must try to support as many

00:06:51,700 --> 00:06:56,170
platforms as possible and in this

00:06:54,190 --> 00:06:58,210
diagram you have a group of applications

00:06:56,170 --> 00:07:00,190
that are either talking through the game

00:06:58,210 --> 00:07:01,930
engines have developed their own game

00:07:00,190 --> 00:07:04,230
engine or maybe they're even potentially

00:07:01,930 --> 00:07:07,320
talking directly to the vendor run times

00:07:04,230 --> 00:07:09,460
each of these vendors specific paths are

00:07:07,320 --> 00:07:11,890
frustratingly different from each other

00:07:09,460 --> 00:07:14,200
and so game engines can hide some of

00:07:11,890 --> 00:07:15,520
these differences but even they and the

00:07:14,200 --> 00:07:16,630
developers that are using them can

00:07:15,520 --> 00:07:18,610
benefit from all of these different

00:07:16,630 --> 00:07:23,440
runtimes using a common set of

00:07:18,610 --> 00:07:26,110
interfaces so open XR seeks to unify and

00:07:23,440 --> 00:07:29,280
create a single common API and a single

00:07:26,110 --> 00:07:32,410
device interface going from the mess of

00:07:29,280 --> 00:07:34,810
specialization support for each platform

00:07:32,410 --> 00:07:40,840
to single path support across all

00:07:34,810 --> 00:07:43,300
platforms so let's take a one step

00:07:40,840 --> 00:07:46,180
closer view of a typical VR software

00:07:43,300 --> 00:07:48,520
stack so you have an application that

00:07:46,180 --> 00:07:51,280
either directly or through a game engine

00:07:48,520 --> 00:07:53,410
or maybe a browser through WebEx are

00:07:51,280 --> 00:07:56,590
these talked directly to the graphics

00:07:53,410 --> 00:07:59,080
and other system api's it also talks to

00:07:56,590 --> 00:08:01,750
something we we term AVR run time and

00:07:59,080 --> 00:08:04,270
this run time is supplied by the VR

00:08:01,750 --> 00:08:06,340
platform vendor the runtime is

00:08:04,270 --> 00:08:08,440
responsible for things like handling the

00:08:06,340 --> 00:08:12,210
tracking compositing the final image out

00:08:08,440 --> 00:08:15,520
to the HMD and handling controller input

00:08:12,210 --> 00:08:18,340
subsequently the VR runtime talks

00:08:15,520 --> 00:08:19,690
through to the VR Hardware to get the

00:08:18,340 --> 00:08:21,280
raw information like the tracking

00:08:19,690 --> 00:08:22,510
coordinates and whether the physical

00:08:21,280 --> 00:08:26,230
buttons have been pressed on the

00:08:22,510 --> 00:08:28,540
physical controllers the interfaces that

00:08:26,230 --> 00:08:31,570
I've highlighted here in red are the VR

00:08:28,540 --> 00:08:33,550
api's and these are the api's that open

00:08:31,570 --> 00:08:36,750
XR seeks to standardize across the

00:08:33,550 --> 00:08:36,750
vendor platforms

00:08:38,830 --> 00:08:43,060
so just to give you another view this is

00:08:41,169 --> 00:08:44,709
kind of a flow of information to and

00:08:43,060 --> 00:08:48,040
from the application through the whole

00:08:44,709 --> 00:08:49,959
XR system as you can see through the

00:08:48,040 --> 00:08:51,640
open XR API the runtime would send

00:08:49,959 --> 00:08:54,490
things like controller state pose

00:08:51,640 --> 00:08:57,250
information and input events to the

00:08:54,490 --> 00:08:59,260
application and in return the

00:08:57,250 --> 00:09:02,440
application sends the pre distorted

00:08:59,260 --> 00:09:05,769
images to display and the information on

00:09:02,440 --> 00:09:07,390
haptic output to the runtime through the

00:09:05,769 --> 00:09:09,220
device plug-in extension the vendor

00:09:07,390 --> 00:09:11,110
hardware would send the controller state

00:09:09,220 --> 00:09:13,209
and raw pose information to the runtime

00:09:11,110 --> 00:09:15,370
and the runtime would send the post

00:09:13,209 --> 00:09:18,250
distorted images and haptics information

00:09:15,370 --> 00:09:20,709
to the actual VR hardware it's important

00:09:18,250 --> 00:09:23,589
to note that open XR is not replacing

00:09:20,709 --> 00:09:25,540
the runtimes it's merely the mechanism

00:09:23,589 --> 00:09:31,750
for the runtimes to expose their

00:09:25,540 --> 00:09:33,160
features the cross-platform API so to

00:09:31,750 --> 00:09:35,649
emphasize a couple of approaches for

00:09:33,160 --> 00:09:38,680
runtimes to support open XR this diagram

00:09:35,649 --> 00:09:40,180
shows one runtime that use of the device

00:09:38,680 --> 00:09:42,640
plug-in extension and one that does not

00:09:40,180 --> 00:09:43,959
in the discussions around the device

00:09:42,640 --> 00:09:45,520
plug-in extension and whether it should

00:09:43,959 --> 00:09:47,860
be part of the core API there were like

00:09:45,520 --> 00:09:49,990
two features two main reasons why we

00:09:47,860 --> 00:09:53,140
felt that all VR platforms could even

00:09:49,990 --> 00:09:55,690
support this device plug-in extension

00:09:53,140 --> 00:09:58,329
one was security some platforms have

00:09:55,690 --> 00:10:00,910
extremely strict security rules making

00:09:58,329 --> 00:10:03,370
it hard to support arbitrary hardware

00:10:00,910 --> 00:10:04,690
devices being plugged in and on some

00:10:03,370 --> 00:10:06,430
platforms alternative Hardware just

00:10:04,690 --> 00:10:07,750
doesn't make sense on certain you know

00:10:06,430 --> 00:10:09,430
all-in-one devices where there's not

00:10:07,750 --> 00:10:14,950
really a place you could plug in any

00:10:09,430 --> 00:10:16,300
other hardware so stepping back just to

00:10:14,950 --> 00:10:17,709
give you some insight into what our

00:10:16,300 --> 00:10:22,750
philosophy was when we were developing

00:10:17,709 --> 00:10:24,459
open XR we looked to as I mentioned

00:10:22,750 --> 00:10:27,399
before enable both AR and VR

00:10:24,459 --> 00:10:29,260
applications because we want to make

00:10:27,399 --> 00:10:31,270
sure that we were able to support both

00:10:29,260 --> 00:10:33,010
going forward I think there's more we

00:10:31,270 --> 00:10:36,070
can do on the a our side but we can talk

00:10:33,010 --> 00:10:37,750
about that later in the talk - we wanted

00:10:36,070 --> 00:10:39,579
to be future proof we wanted to make

00:10:37,750 --> 00:10:41,560
sure we weren't baking anything into the

00:10:39,579 --> 00:10:45,579
first version of the specification that

00:10:41,560 --> 00:10:48,130
we would regret later 3 don't try to

00:10:45,579 --> 00:10:50,020
predict where the technology is going we

00:10:48,130 --> 00:10:51,360
tend to be very bad at it so we wanted

00:10:50,020 --> 00:10:53,260
to build around a flex

00:10:51,360 --> 00:10:57,940
architectures that we could extend it

00:10:53,260 --> 00:11:00,760
going forward and 4xr is one of the most

00:10:57,940 --> 00:11:02,350
performance critical use cases on any

00:11:00,760 --> 00:11:08,530
system today so we wanted to make sure

00:11:02,350 --> 00:11:10,270
that we enabled optimal optimized access

00:11:08,530 --> 00:11:13,240
to the underlying platforms and systems

00:11:10,270 --> 00:11:15,520
you know reducing hiding sorry reducing

00:11:13,240 --> 00:11:17,440
and hiding latency in the system is

00:11:15,520 --> 00:11:20,350
critical to the success in products and

00:11:17,440 --> 00:11:21,790
applications and it's just key to making

00:11:20,350 --> 00:11:26,440
sure people don't get sick when we use

00:11:21,790 --> 00:11:28,330
our systems so where are we on the time

00:11:26,440 --> 00:11:32,020
line so as I mentioned we started off in

00:11:28,330 --> 00:11:35,290
late 2016 and we've been providing

00:11:32,020 --> 00:11:38,500
updates periodically either at GDC or

00:11:35,290 --> 00:11:39,940
here at SIGGRAPH we just released the

00:11:38,500 --> 00:11:41,830
one point it was specification as I

00:11:39,940 --> 00:11:43,510
mentioned on Monday we have some other

00:11:41,830 --> 00:11:45,010
things coming up on the timeline for a

00:11:43,510 --> 00:11:48,790
full release but I'll talk about those a

00:11:45,010 --> 00:11:50,740
little bit later right now I want to

00:11:48,790 --> 00:11:52,270
talk a little bit about the high-level

00:11:50,740 --> 00:11:54,220
concepts I'm not gonna dive too deep

00:11:52,270 --> 00:11:57,100
because I want to leave time for the the

00:11:54,220 --> 00:11:59,080
demos to to show off what open XR is

00:11:57,100 --> 00:12:02,350
capable of but I want to give just a few

00:11:59,080 --> 00:12:03,880
highlights first off is the open XR

00:12:02,350 --> 00:12:05,860
loader so this is similar to other

00:12:03,880 --> 00:12:08,650
Chronos api's if you're familiar with

00:12:05,860 --> 00:12:10,690
those it's a separate component to be

00:12:08,650 --> 00:12:12,580
able to support multiple runtimes on one

00:12:10,690 --> 00:12:14,530
system so you may have various vendor

00:12:12,580 --> 00:12:16,630
platforms plugged into your system at

00:12:14,530 --> 00:12:18,100
the same time the loaders the mechanism

00:12:16,630 --> 00:12:20,440
the app would talk through to

00:12:18,100 --> 00:12:22,930
communicate to a particular runtime and

00:12:20,440 --> 00:12:24,730
there can be mechanisms on how it

00:12:22,930 --> 00:12:26,860
chooses which runtime or which

00:12:24,730 --> 00:12:28,600
underlying platform to use from just

00:12:26,860 --> 00:12:30,370
picking one to some more intelligent

00:12:28,600 --> 00:12:33,580
decisions based on which extensions the

00:12:30,370 --> 00:12:35,110
application is is using that's also

00:12:33,580 --> 00:12:36,340
important to note some systems won't

00:12:35,110 --> 00:12:41,710
have a loader if they're just going to

00:12:36,340 --> 00:12:43,390
have one one runtime on them API layers

00:12:41,710 --> 00:12:45,550
and extensions I won't go into too much

00:12:43,390 --> 00:12:47,830
details but basically we've made this

00:12:45,550 --> 00:12:49,480
it's both extensible by adding

00:12:47,830 --> 00:12:52,060
extensions like other Chronos API is

00:12:49,480 --> 00:12:53,530
there's also the notion of adding an API

00:12:52,060 --> 00:12:56,320
layers if you want to put in a

00:12:53,530 --> 00:12:58,630
validation layer or a tracing layer you

00:12:56,320 --> 00:13:00,010
can inject very similar to DLL shimming

00:12:58,630 --> 00:13:01,830
you can inject things between the

00:13:00,010 --> 00:13:08,580
application making calls and the under

00:13:01,830 --> 00:13:12,390
runtime executing them the instance so

00:13:08,580 --> 00:13:14,670
the instance in open XR is the

00:13:12,390 --> 00:13:17,390
applications representation of the

00:13:14,670 --> 00:13:19,680
underlying runtime and this is how the

00:13:17,390 --> 00:13:21,510
application talks to the runtime so you

00:13:19,680 --> 00:13:23,550
can create multiple instances if it's

00:13:21,510 --> 00:13:26,310
supported by the runtime and the

00:13:23,550 --> 00:13:31,650
instance specifies the Apple Information

00:13:26,310 --> 00:13:34,620
layers and extensions the system so you

00:13:31,650 --> 00:13:36,900
create this create an instance to the

00:13:34,620 --> 00:13:39,060
platform the system is a group of

00:13:36,900 --> 00:13:41,880
physical devices that can be grouped

00:13:39,060 --> 00:13:43,680
together into a logical set up you could

00:13:41,880 --> 00:13:45,480
think of it as you know a headset and a

00:13:43,680 --> 00:13:48,110
pair of controllers or maybe headset

00:13:45,480 --> 00:13:50,580
controllers and other types of trackers

00:13:48,110 --> 00:13:53,070
it could have display could have input

00:13:50,580 --> 00:13:54,990
could have tracking the XR get system

00:13:53,070 --> 00:13:57,210
also returns the type of form factor

00:13:54,990 --> 00:14:00,240
that's going to be used and right now we

00:13:57,210 --> 00:14:02,370
have just two form factors we're

00:14:00,240 --> 00:14:05,280
supporting handheld displays if you're

00:14:02,370 --> 00:14:07,560
doing camera pass-through AR like you

00:14:05,280 --> 00:14:09,180
see on phones today that would be that

00:14:07,560 --> 00:14:10,430
type of form factor and then the other

00:14:09,180 --> 00:14:15,000
would be head mounted display

00:14:10,430 --> 00:14:19,590
stereoscopic display view configurations

00:14:15,000 --> 00:14:21,330
they are currently minimal just a mono

00:14:19,590 --> 00:14:22,860
and stereo for the two cases I just

00:14:21,330 --> 00:14:24,200
mentioned but we are looking to the

00:14:22,860 --> 00:14:26,760
future where you might have cave-like

00:14:24,200 --> 00:14:29,280
environments also supported with the API

00:14:26,760 --> 00:14:31,140
and so having these two features enables

00:14:29,280 --> 00:14:36,060
enables us to have a bit more

00:14:31,140 --> 00:14:38,370
flexibility going forward so the session

00:14:36,060 --> 00:14:40,530
the session is how the application

00:14:38,370 --> 00:14:42,180
indicates to the platform that it's

00:14:40,530 --> 00:14:45,210
ready to start outputting VR and AR

00:14:42,180 --> 00:14:47,070
frames so the application tells a

00:14:45,210 --> 00:14:50,280
runtime it wants to enter an interactive

00:14:47,070 --> 00:14:51,870
State for a session by by telling it to

00:14:50,280 --> 00:14:55,140
begin session and it ends it within

00:14:51,870 --> 00:14:57,000
session and I'm not gonna go into

00:14:55,140 --> 00:14:58,920
details about the session lifecycle if

00:14:57,000 --> 00:15:02,490
you talk to other members of the working

00:14:58,920 --> 00:15:03,840
group we spend long and hard days trying

00:15:02,490 --> 00:15:05,130
to figure out exactly how this should

00:15:03,840 --> 00:15:08,220
work I just wanted to throw it up here

00:15:05,130 --> 00:15:09,870
it's in the specification but we did put

00:15:08,220 --> 00:15:12,570
a lot of thought into how an application

00:15:09,870 --> 00:15:14,540
moves from an idle state into when it's

00:15:12,570 --> 00:15:16,310
ready to receive frames from

00:15:14,540 --> 00:15:18,440
or when the platform is ready to receive

00:15:16,310 --> 00:15:22,940
frames the application when it's visible

00:15:18,440 --> 00:15:25,160
when it's focused etc I won't go into

00:15:22,940 --> 00:15:27,649
too much detail on events they're

00:15:25,160 --> 00:15:29,870
similar to how other applications use

00:15:27,649 --> 00:15:33,709
events and so I won't go to too much

00:15:29,870 --> 00:15:35,630
detail there the other critical part of

00:15:33,709 --> 00:15:36,949
the immersive nature of VR is the

00:15:35,630 --> 00:15:39,079
ability to interact with the

00:15:36,949 --> 00:15:42,199
environments that and manipulate the

00:15:39,079 --> 00:15:43,220
environment you're inside so in this

00:15:42,199 --> 00:15:46,100
next section I'm just going to give a

00:15:43,220 --> 00:15:49,820
brief highlights of what we've done with

00:15:46,100 --> 00:15:52,100
the input and haptics so basically the

00:15:49,820 --> 00:15:53,810
goal is that you you want to be able to

00:15:52,100 --> 00:15:56,329
do something like when the user clicks

00:15:53,810 --> 00:15:58,430
the a button you know it results in the

00:15:56,329 --> 00:16:02,930
user teleporting to someplace else in

00:15:58,430 --> 00:16:04,370
the environment and so the input in open

00:16:02,930 --> 00:16:06,769
X R goes through a layer of abstraction

00:16:04,370 --> 00:16:08,750
built around input actions so you would

00:16:06,769 --> 00:16:10,490
define the physical buttons from the

00:16:08,750 --> 00:16:14,510
input controller separately from the

00:16:10,490 --> 00:16:16,820
actions that you want them to and want

00:16:14,510 --> 00:16:19,339
them to do and so the application will

00:16:16,820 --> 00:16:21,709
suggest bindings to the runtime so you

00:16:19,339 --> 00:16:24,800
can say ok I want button a to teleport

00:16:21,709 --> 00:16:26,930
and I want the trigger to fire but it's

00:16:24,800 --> 00:16:30,910
ultimately up to the runtime to bind

00:16:26,930 --> 00:16:33,500
these input sources with the the actions

00:16:30,910 --> 00:16:35,149
and there's a few reasons why we decided

00:16:33,500 --> 00:16:38,170
to do that and I'll talk about that in a

00:16:35,149 --> 00:16:41,449
slide coming up and so what you get is

00:16:38,170 --> 00:16:43,819
we provide currently in the core API a

00:16:41,449 --> 00:16:45,769
series of interaction profiles and these

00:16:43,819 --> 00:16:48,769
are really a collection of input and

00:16:45,769 --> 00:16:50,209
output sources on physical devices and

00:16:48,769 --> 00:16:52,519
the runtimes can support multiples of

00:16:50,209 --> 00:16:55,069
these and so you know you can have this

00:16:52,519 --> 00:16:57,860
fancy controller that could be used for

00:16:55,069 --> 00:16:59,990
the left and right hand of the user it

00:16:57,860 --> 00:17:02,480
has four buttons that are click buttons

00:16:59,990 --> 00:17:04,549
it has a trigger that you can click you

00:17:02,480 --> 00:17:07,280
can touch or you can squeeze it and it

00:17:04,549 --> 00:17:09,199
would give you a value from 1 to 0 and

00:17:07,280 --> 00:17:13,160
it could also potentially output some

00:17:09,199 --> 00:17:14,630
haptic feedback as well and so as I

00:17:13,160 --> 00:17:16,880
mentioned we've already predefined some

00:17:14,630 --> 00:17:18,199
interaction profiles for some of the

00:17:16,880 --> 00:17:19,649
current products that are out there

00:17:18,199 --> 00:17:22,079
today from

00:17:19,649 --> 00:17:25,199
the daydream de vive and vive pro to the

00:17:22,079 --> 00:17:27,539
Microsoft mixed reality controllers the

00:17:25,199 --> 00:17:30,509
Xbox controller the go in touch

00:17:27,539 --> 00:17:35,999
controllers from oculus and valve index

00:17:30,509 --> 00:17:37,830
controllers so I mentioned that it's

00:17:35,999 --> 00:17:40,919
ultimately up to the runtime to

00:17:37,830 --> 00:17:43,049
determine what actions are bound to what

00:17:40,919 --> 00:17:44,730
physical buttons on the controller and

00:17:43,049 --> 00:17:48,629
there's a couple of reasons why we made

00:17:44,730 --> 00:17:49,919
that decision one is the quote that the

00:17:48,629 --> 00:17:52,259
working group liked to use that dev

00:17:49,919 --> 00:17:54,330
teams are ephemeral are ephemeral but

00:17:52,259 --> 00:17:56,639
games last forever so you could have a

00:17:54,330 --> 00:17:59,429
game that was built you know a decade

00:17:56,639 --> 00:18:00,869
ago controllers that no longer exist but

00:17:59,429 --> 00:18:03,419
you may still want to play that game so

00:18:00,869 --> 00:18:05,340
if there's the ability for the runtime

00:18:03,419 --> 00:18:07,230
to understand what you were wanting to

00:18:05,340 --> 00:18:09,330
bind the buttons to and what actions

00:18:07,230 --> 00:18:13,080
there are it can update that to the

00:18:09,330 --> 00:18:15,210
latest and greatest controllers the

00:18:13,080 --> 00:18:17,249
other reason that that we wanted to

00:18:15,210 --> 00:18:19,619
allow this is that runtime you wanted to

00:18:17,249 --> 00:18:21,570
also allow the user to do mapping as

00:18:19,619 --> 00:18:23,159
well right maybe they don't like having

00:18:21,570 --> 00:18:25,619
the jump button be the a button they

00:18:23,159 --> 00:18:27,899
want it to be the X button so it allows

00:18:25,619 --> 00:18:30,269
the runtimes to allow the user to make

00:18:27,899 --> 00:18:32,159
customization for the without the

00:18:30,269 --> 00:18:34,710
original application even understanding

00:18:32,159 --> 00:18:36,480
that that has been done there may be

00:18:34,710 --> 00:18:38,190
some future controller that's developed

00:18:36,480 --> 00:18:40,139
that the application had no knowledge of

00:18:38,190 --> 00:18:41,940
at the when it was developed and so this

00:18:40,139 --> 00:18:44,700
you know freeing up the bindings allows

00:18:41,940 --> 00:18:47,999
for handling that and there's also the

00:18:44,700 --> 00:18:50,549
accessibility devices for being able to

00:18:47,999 --> 00:18:52,980
input the map it mappings appropriately

00:18:50,549 --> 00:18:55,830
for those devices and so it looks

00:18:52,980 --> 00:18:58,590
something like you know you get a click

00:18:55,830 --> 00:19:01,799
on button a on the left handed

00:18:58,590 --> 00:19:03,899
controller of this fancy controller then

00:19:01,799 --> 00:19:05,940
the open XR runtime would take that map

00:19:03,899 --> 00:19:08,460
it to what the action actually is is it

00:19:05,940 --> 00:19:10,379
explode is it teleport etc and then it

00:19:08,460 --> 00:19:11,820
would result in the the action and the

00:19:10,379 --> 00:19:17,669
application and the user actually

00:19:11,820 --> 00:19:19,110
teleporting we also have some some

00:19:17,669 --> 00:19:21,059
basics on haptic so I won't go into too

00:19:19,110 --> 00:19:24,119
much details here's other than we do

00:19:21,059 --> 00:19:26,050
allow starting and stopping frequency

00:19:24,119 --> 00:19:29,650
and some other controls around

00:19:26,050 --> 00:19:30,910
haptic feedback so that's it for the

00:19:29,650 --> 00:19:32,350
core API like I said that am I going to

00:19:30,910 --> 00:19:34,840
go into too much details I want to spend

00:19:32,350 --> 00:19:36,400
time on the demos but I do want to talk

00:19:34,840 --> 00:19:38,680
about a little bit about the

00:19:36,400 --> 00:19:40,570
extensibility so as I said you know this

00:19:38,680 --> 00:19:42,280
is an emerging market there's lots of

00:19:40,570 --> 00:19:45,640
different ways the market can move

00:19:42,280 --> 00:19:47,380
forward so we wanted to make sure that

00:19:45,640 --> 00:19:49,000
we're building around extensibility and

00:19:47,380 --> 00:19:52,240
so we're following the the standard

00:19:49,000 --> 00:19:54,130
Cronos extensibility framework and so we

00:19:52,240 --> 00:19:55,420
have the core standard that we had some

00:19:54,130 --> 00:19:57,610
of the features I talked about already

00:19:55,420 --> 00:19:59,620
we have some kage are extensions these

00:19:57,610 --> 00:20:02,200
are extensions expected to be supported

00:19:59,620 --> 00:20:04,240
by the majority of the runtimes that

00:20:02,200 --> 00:20:06,340
will be provided there are ext

00:20:04,240 --> 00:20:09,040
extensions where multiple companies can

00:20:06,340 --> 00:20:11,110
get together and expose features that

00:20:09,040 --> 00:20:13,480
are common between multiple runtimes and

00:20:11,110 --> 00:20:15,520
then if a particular vendor has specific

00:20:13,480 --> 00:20:17,140
features they want to expose then they

00:20:15,520 --> 00:20:21,460
can expose those through a vendor

00:20:17,140 --> 00:20:23,500
extension and so we have I think 16

00:20:21,460 --> 00:20:27,580
Cronos extensions that we released at

00:20:23,500 --> 00:20:31,570
the same time as the core 1 dot X T's

00:20:27,580 --> 00:20:34,180
and I think Vario has one as well but

00:20:31,570 --> 00:20:36,100
these are I kind of grouped them

00:20:34,180 --> 00:20:39,160
together to give kind of an overview of

00:20:36,100 --> 00:20:40,930
like how they they fit into the big

00:20:39,160 --> 00:20:44,140
picture we have some that are specific

00:20:40,930 --> 00:20:47,260
to a particular platform like Android we

00:20:44,140 --> 00:20:49,270
have api's around supporting the

00:20:47,260 --> 00:20:51,580
graphics API is that on the system that

00:20:49,270 --> 00:20:54,250
you're running on from d3d to OpenGL to

00:20:51,580 --> 00:20:57,880
Vulcan we also have some specifics

00:20:54,250 --> 00:20:59,320
around composition layers exposing a

00:20:57,880 --> 00:21:01,750
visibility mask if you want to do some

00:20:59,320 --> 00:21:05,800
optimization and some time conversion

00:21:01,750 --> 00:21:07,720
functions so what hasn't made it end so

00:21:05,800 --> 00:21:10,140
one of the things I talked about at the

00:21:07,720 --> 00:21:12,640
beginning was the device layer plugin so

00:21:10,140 --> 00:21:14,350
the top priority for the working group

00:21:12,640 --> 00:21:16,900
was really about solving the API

00:21:14,350 --> 00:21:19,030
fragmentation problem and simplifying

00:21:16,900 --> 00:21:21,280
software development so we basically

00:21:19,030 --> 00:21:23,710
wanted to try to get that out as quickly

00:21:21,280 --> 00:21:27,040
as possible so we had to basically punt

00:21:23,710 --> 00:21:28,240
on the device plug-in layer so but we do

00:21:27,040 --> 00:21:29,650
have that still on the list of things

00:21:28,240 --> 00:21:32,290
that we want to support going forward

00:21:29,650 --> 00:21:34,000
we've made some work on the architecture

00:21:32,290 --> 00:21:36,820
and what I look like but we just had to

00:21:34,000 --> 00:21:38,250
make a priority call on when and what

00:21:36,820 --> 00:21:43,140
would make it for

00:21:38,250 --> 00:21:44,909
the 1.0 release there are a list of

00:21:43,140 --> 00:21:47,039
things that were considering for 1.1 as

00:21:44,909 --> 00:21:49,710
well as extensions many of them I'm sure

00:21:47,039 --> 00:21:51,330
are obvious next steps for V RNA are and

00:21:49,710 --> 00:21:53,250
things that I'm are probably on the top

00:21:51,330 --> 00:21:54,539
of your mind I won't list them here we

00:21:53,250 --> 00:21:56,520
don't tend to talk about the things that

00:21:54,539 --> 00:21:59,490
we're thinking about going into the

00:21:56,520 --> 00:22:02,309
future ones but feel free to send up

00:21:59,490 --> 00:22:04,500
send us your list of requests through

00:22:02,309 --> 00:22:07,169
the feedback channels we'll be providing

00:22:04,500 --> 00:22:08,820
a little bit later I think some of the

00:22:07,169 --> 00:22:10,650
demos may also talk about some of the

00:22:08,820 --> 00:22:13,460
thoughts that our member companies are

00:22:10,650 --> 00:22:16,470
having around extensions as well so

00:22:13,460 --> 00:22:19,770
without further adieu we'll bring Remy

00:22:16,470 --> 00:22:24,710
up from Vario and he will give you a

00:22:19,770 --> 00:22:24,710
demo of open XR running on their headset

00:22:25,090 --> 00:22:31,470
[Applause]

00:22:32,630 --> 00:22:36,110
assuming this all works

00:23:31,050 --> 00:23:34,679
when I had one slide I wanted to show

00:23:32,790 --> 00:23:37,620
that it looks like he's gonna make it -

00:23:34,679 --> 00:23:38,220
I had it in the computer because Ethan

00:23:37,620 --> 00:23:44,670
is gone

00:23:38,220 --> 00:23:46,440
I wanted to let me have it here on my

00:23:44,670 --> 00:23:50,160
phone but I can't show it to you anyway

00:23:46,440 --> 00:23:57,420
so I just wanted to talk a little bit

00:23:50,160 --> 00:24:00,059
about value and the demo so well

00:23:57,420 --> 00:24:02,370
whenever I show you is a this is EXO

00:24:00,059 --> 00:24:04,309
this is a value XR one device we

00:24:02,370 --> 00:24:09,120
announced it at awwe

00:24:04,309 --> 00:24:11,790
and it it's the second device we already

00:24:09,120 --> 00:24:17,820
have a value V are ones of your device

00:24:11,790 --> 00:24:22,190
it's on sale since February and the EXO

00:24:17,820 --> 00:24:24,960
device is an emo device meaning you can

00:24:22,190 --> 00:24:27,360
bring the real world in into the virtual

00:24:24,960 --> 00:24:29,820
world so the demo I put together is

00:24:27,360 --> 00:24:32,520
pretty simple it's actually the idea of

00:24:29,820 --> 00:24:34,740
there is a virtual world around us we

00:24:32,520 --> 00:24:37,650
can't see but it's there

00:24:34,740 --> 00:24:40,230
but if I can actually put a portal and

00:24:37,650 --> 00:24:42,120
between the two walls you can work and

00:24:40,230 --> 00:24:43,860
see the virtual world through portal

00:24:42,120 --> 00:24:45,630
when you're in the real world and when

00:24:43,860 --> 00:24:47,460
you're in the virtual world you can see

00:24:45,630 --> 00:24:49,230
the real world so it's kind of confusing

00:24:47,460 --> 00:24:51,150
what we all want and that's not really

00:24:49,230 --> 00:24:55,710
all so it's a pretty simple demo and

00:24:51,150 --> 00:24:58,170
it's entirely written with a panic so we

00:24:55,710 --> 00:25:00,780
do have one extension as mentioned

00:24:58,170 --> 00:25:03,540
because the value device specificities

00:25:00,780 --> 00:25:05,100
is that we have two screens per eye we

00:25:03,540 --> 00:25:06,840
have the center screen is called the

00:25:05,100 --> 00:25:10,920
focus screen and the contact screen the

00:25:06,840 --> 00:25:13,580
focus screen is giving you 20/20 our

00:25:10,920 --> 00:25:17,610
solution so you have exactly the same

00:25:13,580 --> 00:25:19,800
resolution in that set and in real time

00:25:17,610 --> 00:25:22,290
through your eyes and as to us it was

00:25:19,800 --> 00:25:26,100
fundamental to get to this point before

00:25:22,290 --> 00:25:28,850
we can go ahead and and solve the email

00:25:26,100 --> 00:25:32,340
column so cr1 offers that anymore adds

00:25:28,850 --> 00:25:33,960
adds to it so in order to do that we

00:25:32,340 --> 00:25:35,970
have an extension in appendix R which is

00:25:33,960 --> 00:25:39,300
the quad view extension which enables

00:25:35,970 --> 00:25:41,640
not only stereo but two views per eye

00:25:39,300 --> 00:25:42,290
and so the engine has to well it's an

00:25:41,640 --> 00:25:43,880
option

00:25:42,290 --> 00:25:45,080
extension we can send one if you want

00:25:43,880 --> 00:25:48,170
but if you own a high resolution you

00:25:45,080 --> 00:25:51,410
have to send two and the beauty of it is

00:25:48,170 --> 00:25:53,210
we work with Unreal Engine and Unreal

00:25:51,410 --> 00:25:55,730
Engine has created their own appendix

00:25:53,210 --> 00:25:57,980
our driver and in the opening survivor

00:25:55,730 --> 00:26:01,010
we recognize the extension or we took to

00:25:57,980 --> 00:26:02,630
a runtime an automatic TV will generate

00:26:01,010 --> 00:26:04,610
those views for you so it's transparent

00:26:02,630 --> 00:26:07,550
for the application if you write an

00:26:04,610 --> 00:26:10,280
Unreal Engine game you just you're gonna

00:26:07,550 --> 00:26:14,630
have the high resolution working on

00:26:10,280 --> 00:26:17,210
value and to me was really important

00:26:14,630 --> 00:26:20,620
that we do the demo we did today we have

00:26:17,210 --> 00:26:20,620
the demo running through Unreal Engine

00:26:22,630 --> 00:26:28,160
Dyneema ravine real engine because

00:26:25,510 --> 00:26:29,570
openexr I mean we can have everybody can

00:26:28,160 --> 00:26:32,030
write an API a lot of programmers can

00:26:29,570 --> 00:26:34,670
and it's the code for action now the API

00:26:32,030 --> 00:26:36,650
is available but it's very formal told

00:26:34,670 --> 00:26:40,550
me that the major engines actually

00:26:36,650 --> 00:26:43,550
Unreal Engine is as proven as using as a

00:26:40,550 --> 00:26:46,610
proof of usability of appendix or fork a

00:26:43,550 --> 00:26:50,420
four major damage into to use to connect

00:26:46,610 --> 00:26:51,710
to all the Excel devices inside the

00:26:50,420 --> 00:26:54,260
specification you'll see there is

00:26:51,710 --> 00:26:57,830
something interesting is the blend mode

00:26:54,260 --> 00:26:59,540
the blended that you're gonna use when

00:26:57,830 --> 00:27:01,370
you start your application how you want

00:26:59,540 --> 00:27:04,130
the real world to blend with the virtual

00:27:01,370 --> 00:27:05,900
world has got the blend mode it's not an

00:27:04,130 --> 00:27:07,400
extension is inspect and there's opaque

00:27:05,900 --> 00:27:11,000
meanings you don't see anything outside

00:27:07,400 --> 00:27:14,210
there's a dish add so you add things on

00:27:11,000 --> 00:27:16,580
top of outside and there is alpha which

00:27:14,210 --> 00:27:19,640
mean you can blend any pixel with inside

00:27:16,580 --> 00:27:22,250
out with the virtual real world the exo

00:27:19,640 --> 00:27:24,230
device reports all of those nodes but

00:27:22,250 --> 00:27:26,120
most like this demo is in - or somewhere

00:27:24,230 --> 00:27:27,710
device he's only support add because you

00:27:26,120 --> 00:27:29,060
can't remove the outside you just go

00:27:27,710 --> 00:27:31,310
through anyway and some devices

00:27:29,060 --> 00:27:35,080
obviously otherwise you so we can't we

00:27:31,310 --> 00:27:35,080
can't blend the outside so now we should

00:28:24,590 --> 00:28:30,739
you it's a reward and some way in there

00:29:10,990 --> 00:29:15,800
you know the trick would be that that

00:29:13,760 --> 00:29:16,970
there will be then when you go in the

00:29:15,800 --> 00:29:18,980
virtual world and the real world

00:29:16,970 --> 00:29:21,380
disappears another of its your volume

00:29:18,980 --> 00:29:22,850
stuck in some kind of loop and so I feel

00:29:21,380 --> 00:29:26,150
more safe going back to the real world

00:29:22,850 --> 00:29:28,310
actually and that way sir

00:29:26,150 --> 00:29:30,230
anyway so simple demo it's only one

00:29:28,310 --> 00:29:32,270
blueprint there's not one line of C++

00:29:30,230 --> 00:29:35,000
code it's running Unreal Engine II could

00:29:32,270 --> 00:29:39,110
walk on any device using a pen X or

00:29:35,000 --> 00:29:41,480
device no I guess that's a good example

00:29:39,110 --> 00:29:43,940
of how easy it is going to be for

00:29:41,480 --> 00:29:46,070
developers to to use up in Excel where

00:29:43,940 --> 00:29:48,740
the game engine now there's no latency

00:29:46,070 --> 00:29:51,200
that's the magic of are you so you can

00:29:48,740 --> 00:29:53,360
check that out for yourself later at the

00:29:51,200 --> 00:29:57,130
at the event the social event later at

00:29:53,360 --> 00:29:57,130
5:30 thank you

00:30:02,560 --> 00:30:08,690
okay next up we're gonna have Microsoft

00:30:05,180 --> 00:30:26,830
or have Alex Turner demo what they are

00:30:08,690 --> 00:30:30,080
doing with open XR as well yeah it just

00:30:26,830 --> 00:30:32,860
okay cool yeah just give me one sec to

00:30:30,080 --> 00:30:32,860
switch over here

00:30:37,720 --> 00:30:40,950
set this up

00:30:55,300 --> 00:30:58,300
okay

00:31:11,820 --> 00:31:18,429
right yeah so just go through one demo a

00:31:14,230 --> 00:31:19,990
quick slide here yeah so we're real

00:31:18,429 --> 00:31:22,780
excited that Microsoft to be part of

00:31:19,990 --> 00:31:25,330
open XR we believe really for mixed

00:31:22,780 --> 00:31:26,530
reality that being open is the only way

00:31:25,330 --> 00:31:28,390
that we're going to escape a lot of the

00:31:26,530 --> 00:31:30,010
pitfalls we had kind of in the mobile

00:31:28,390 --> 00:31:32,350
era as an industry with closed

00:31:30,010 --> 00:31:33,970
ecosystems across closed stores closed

00:31:32,350 --> 00:31:46,659
browser platforms and closed developer

00:31:33,970 --> 00:31:48,520
API so being able to get to being able

00:31:46,659 --> 00:31:50,140
to get to open platforms for all of the

00:31:48,520 --> 00:31:52,929
above is really what's going to enable

00:31:50,140 --> 00:31:55,450
the success of mixed reality VR and AR

00:31:52,929 --> 00:31:57,220
across the industry and avoid avoid the

00:31:55,450 --> 00:31:59,409
fragmentation that we would otherwise

00:31:57,220 --> 00:32:00,730
see and so this was the kind of press

00:31:59,409 --> 00:32:03,010
release as part of Monday when an open

00:32:00,730 --> 00:32:04,299
XR 100 was announced getting to where

00:32:03,010 --> 00:32:06,100
you know we've actually released our

00:32:04,299 --> 00:32:08,200
runtime now so what I'm gonna show you

00:32:06,100 --> 00:32:09,970
today is what you can download today

00:32:08,200 --> 00:32:12,370
first you can get the Windows mixed

00:32:09,970 --> 00:32:14,650
reality runtime and get this going for

00:32:12,370 --> 00:32:16,510
desktop headsets desktop VR headsets

00:32:14,650 --> 00:32:18,549
that you have as well as starting to

00:32:16,510 --> 00:32:20,409
install this on hololens too and today

00:32:18,549 --> 00:32:22,390
we already kind of showed at GDC that

00:32:20,409 --> 00:32:24,100
kind of side by side demo of how this

00:32:22,390 --> 00:32:25,600
all works together on two different VR

00:32:24,100 --> 00:32:29,289
headsets so today I wanted to show a

00:32:25,600 --> 00:32:31,990
mixed reality headset so yeah I'm just

00:32:29,289 --> 00:32:33,250
gonna jump straight into vs to actually

00:32:31,990 --> 00:32:35,909
show you kind of like where the code is

00:32:33,250 --> 00:32:43,780
coming from here let's get out of this

00:32:35,909 --> 00:32:45,280
duplicate so if you go to Chronos org

00:32:43,780 --> 00:32:48,460
slash open XR that's kind of the main

00:32:45,280 --> 00:32:49,690
landing page for all of the spec stuff

00:32:48,460 --> 00:32:52,659
all of the reference guides everything

00:32:49,690 --> 00:32:54,039
you want to get started with open XR and

00:32:52,659 --> 00:32:55,270
there's also links to the runtimes that

00:32:54,039 --> 00:32:56,799
you can download today and this list is

00:32:55,270 --> 00:32:57,970
about to get longer there's a whole set

00:32:56,799 --> 00:33:00,640
of vendor companies who are starting to

00:32:57,970 --> 00:33:02,500
implement but if you click here and you

00:33:00,640 --> 00:33:05,679
go to the Microsoft site you can get

00:33:02,500 --> 00:33:07,990
directly here it's aka dot MS slash open

00:33:05,679 --> 00:33:09,250
XR or just find the link there and

00:33:07,990 --> 00:33:10,840
you'll have all the developer info for

00:33:09,250 --> 00:33:13,570
getting started specifically with the

00:33:10,840 --> 00:33:15,190
Microsoft runtime it gives you a little

00:33:13,570 --> 00:33:16,390
overview and links out to the spec and

00:33:15,190 --> 00:33:17,830
tells you how to get started kind of

00:33:16,390 --> 00:33:20,020
both on hololens 2 which I'll be showing

00:33:17,830 --> 00:33:23,470
today as well as how to get started on

00:33:20,020 --> 00:33:25,140
desktop headsets and specifically here

00:33:23,470 --> 00:33:27,060
there's a sample app that we

00:33:25,140 --> 00:33:29,070
have that kind of demonstrates some of

00:33:27,060 --> 00:33:31,440
the core concepts of open XR it just is

00:33:29,070 --> 00:33:32,940
pure core open XR doesn't use any

00:33:31,440 --> 00:33:36,900
extension so it would work on anybody's

00:33:32,940 --> 00:33:40,110
runtime and it supports both desktop VR

00:33:36,900 --> 00:33:42,090
as well as supporting a hololens and so

00:33:40,110 --> 00:33:43,860
if you go in here you can see this is up

00:33:42,090 --> 00:33:45,150
on github and so if you were to clone

00:33:43,860 --> 00:33:46,530
this you could open this up right now

00:33:45,150 --> 00:33:49,010
that's what we're gonna do

00:33:46,530 --> 00:33:51,180
so I've already cloned this down here

00:33:49,010 --> 00:33:53,040
and you know I'm not gonna walk through

00:33:51,180 --> 00:33:54,600
all the code if you get that quick

00:33:53,040 --> 00:33:56,190
reference guide that's up there you'll

00:33:54,600 --> 00:33:57,780
kind of see basically kind of a bird's

00:33:56,190 --> 00:33:59,130
eye view of what's going on with the

00:33:57,780 --> 00:34:01,170
spec and how different parts fit

00:33:59,130 --> 00:34:02,730
together what it is you do first to get

00:34:01,170 --> 00:34:05,700
an instance and then a session all the

00:34:02,730 --> 00:34:08,730
stuff that that we showed earlier today

00:34:05,700 --> 00:34:10,260
but basically you can see that same

00:34:08,730 --> 00:34:12,690
thing here and basic XR up kind of the

00:34:10,260 --> 00:34:14,010
the main run function here that goes

00:34:12,690 --> 00:34:16,620
through it sets up the instance that's

00:34:14,010 --> 00:34:18,899
up the actions initializes your session

00:34:16,620 --> 00:34:20,100
and goes into the main render loop so if

00:34:18,899 --> 00:34:21,810
you want to take a look at this go ahead

00:34:20,100 --> 00:34:23,820
and clone that project

00:34:21,810 --> 00:34:26,100
I'll have the URL again at the end how

00:34:23,820 --> 00:34:29,940
you can get to that but I'm gonna show

00:34:26,100 --> 00:34:32,250
is here if I put this on the device and

00:34:29,940 --> 00:34:37,409
actually first thing just gonna turn

00:34:32,250 --> 00:34:41,940
this on we're gonna livestream the video

00:34:37,409 --> 00:34:44,870
from here so you can see it nice to get

00:34:41,940 --> 00:34:44,870
this going for a sec

00:34:49,980 --> 00:34:54,119
and with the way we're going to do this

00:34:51,839 --> 00:34:56,609
is we're going to connect to the device

00:34:54,119 --> 00:34:57,750
portal which is a little server running

00:34:56,609 --> 00:35:00,540
on the headset when you're in developer

00:34:57,750 --> 00:35:10,609
mode so you can get going here let's see

00:35:00,540 --> 00:35:10,609
here here we go

00:35:17,459 --> 00:35:21,369
so you should be able to see this here

00:35:19,599 --> 00:35:23,739
just because it's streaming the video

00:35:21,369 --> 00:35:25,779
the video itself is about three seconds

00:35:23,739 --> 00:35:26,920
kind of behind what I'm seeing but right

00:35:25,779 --> 00:35:28,180
in the headset you know you'll be able

00:35:26,920 --> 00:35:30,849
to try this demo out later it's all

00:35:28,180 --> 00:35:31,959
synced up so here so I'm in the home

00:35:30,849 --> 00:35:34,569
environment so what I'm gonna do

00:35:31,959 --> 00:35:40,539
actually first I'm gonna go back into

00:35:34,569 --> 00:35:43,390
visual studio and here and I'll deploy

00:35:40,539 --> 00:35:46,569
this and so let me set this going here

00:35:43,390 --> 00:35:48,249
to the device so we're deploying over

00:35:46,569 --> 00:35:49,660
the USB cable just because it's faster

00:35:48,249 --> 00:35:51,729
kind of for demo purposes I wanted to

00:35:49,660 --> 00:35:53,380
show real bits going straight to the

00:35:51,729 --> 00:35:55,239
device when you're back in your office

00:35:53,380 --> 00:35:58,630
you can deploy over Wi-Fi disconnect and

00:35:55,239 --> 00:35:59,859
walk around and so yeah so like

00:35:58,630 --> 00:36:02,319
basically while this is deploying I'll

00:35:59,859 --> 00:36:03,640
kind of talk through like some of the

00:36:02,319 --> 00:36:05,859
stuff we were doing if you've seen kind

00:36:03,640 --> 00:36:07,390
of the point 9 API a lot of the one-oh

00:36:05,859 --> 00:36:09,609
stuff that we have here is basically the

00:36:07,390 --> 00:36:11,319
same but we took some of the feedback

00:36:09,609 --> 00:36:14,680
kind of from the engine partners as for

00:36:11,319 --> 00:36:16,420
example epic was implementing all of

00:36:14,680 --> 00:36:18,249
this into the engine all their open XR

00:36:16,420 --> 00:36:19,390
support you know the realize that the

00:36:18,249 --> 00:36:21,819
way they implemented it they ended up

00:36:19,390 --> 00:36:23,680
having separate plugins for example for

00:36:21,819 --> 00:36:26,349
you know for rendering for the core XR

00:36:23,680 --> 00:36:27,579
stuff as well as for input and so you

00:36:26,349 --> 00:36:29,619
know we were able to take that feedback

00:36:27,579 --> 00:36:32,410
between 0.9 and 100 and ensure that you

00:36:29,619 --> 00:36:34,809
could hear create the actions earlier on

00:36:32,410 --> 00:36:36,130
in this in this session like earlier on

00:36:34,809 --> 00:36:38,319
in your apps lifecycle before you

00:36:36,130 --> 00:36:39,910
actually even create the session and

00:36:38,319 --> 00:36:41,529
this enables you to kind of decouple the

00:36:39,910 --> 00:36:44,410
rendering plug-in from the input plug-in

00:36:41,529 --> 00:36:45,789
so that's just kind of one of the set of

00:36:44,410 --> 00:36:48,249
things that we did between point nine

00:36:45,789 --> 00:36:49,420
and one oh that don't impact you too

00:36:48,249 --> 00:36:50,890
much if you actually started to

00:36:49,420 --> 00:36:52,479
experiment with point nine but it

00:36:50,890 --> 00:36:54,630
actually gives you that flexibility to

00:36:52,479 --> 00:36:57,369
architect your engine the way you want

00:36:54,630 --> 00:36:58,959
okay so we'll go back here the app

00:36:57,369 --> 00:37:00,640
deployed and it's running so again this

00:36:58,959 --> 00:37:04,209
is that app that you can get yourself

00:37:00,640 --> 00:37:06,819
and it uses 100% core features of the

00:37:04,209 --> 00:37:07,900
spec no no extra extensions needed here

00:37:06,819 --> 00:37:09,640
this is all the stuff that you can do

00:37:07,900 --> 00:37:11,799
just purely with the spec as it exists

00:37:09,640 --> 00:37:13,239
today and so you know that with the

00:37:11,799 --> 00:37:15,910
input sources this is like you know user

00:37:13,239 --> 00:37:17,559
hand left and user hand right and

00:37:15,910 --> 00:37:19,539
basically the the one thing the main

00:37:17,559 --> 00:37:21,459
thing that puts a qubit each one we have

00:37:19,539 --> 00:37:23,440
this notion of a grip pose which is kind

00:37:21,459 --> 00:37:25,660
of the core kind of central part within

00:37:23,440 --> 00:37:27,579
the hand where you would actually grab

00:37:25,660 --> 00:37:29,589
something and when you actually detect

00:37:27,579 --> 00:37:29,950
kind of a press it actually moves this

00:37:29,589 --> 00:37:31,450
one

00:37:29,950 --> 00:37:32,920
cube in the world to that place so this

00:37:31,450 --> 00:37:34,720
is this is kind of just a simple thing

00:37:32,920 --> 00:37:36,310
you can see in that app and again like

00:37:34,720 --> 00:37:37,810
this same code if this was a motion

00:37:36,310 --> 00:37:40,060
controller if this was like a VR headset

00:37:37,810 --> 00:37:41,140
and you had a motion controller again if

00:37:40,060 --> 00:37:42,369
it's in your left hand to your right

00:37:41,140 --> 00:37:44,650
hand you'd be able to use those same

00:37:42,369 --> 00:37:45,880
paths to actually decide hey when is the

00:37:44,650 --> 00:37:48,820
left hand or the right hand having a

00:37:45,880 --> 00:37:49,960
press and so this is the main stuff that

00:37:48,820 --> 00:37:51,099
the app does and you're able to place

00:37:49,960 --> 00:37:52,450
this here and move around but this is

00:37:51,099 --> 00:37:55,240
pretty simple right so think this is

00:37:52,450 --> 00:37:56,859
basic stuff that you can do again across

00:37:55,240 --> 00:38:00,010
any device because it's an all the core

00:37:56,859 --> 00:38:01,390
the core SDK functionality but we wanted

00:38:00,010 --> 00:38:04,030
to show today was kind of where we

00:38:01,390 --> 00:38:05,619
expect to be by the end of the year so

00:38:04,030 --> 00:38:06,970
we have another app on the device that I

00:38:05,619 --> 00:38:09,250
can show you which has a bunch of our

00:38:06,970 --> 00:38:10,450
prototype extensions and these are

00:38:09,250 --> 00:38:12,190
extensions that aren't public yet

00:38:10,450 --> 00:38:14,079
they're not kind of out there for folks

00:38:12,190 --> 00:38:15,760
to use but they're the extensions we

00:38:14,079 --> 00:38:17,410
expect to have by the end of the year

00:38:15,760 --> 00:38:19,690
and we're working with a bunch of the

00:38:17,410 --> 00:38:21,040
other companies inside the open X our

00:38:19,690 --> 00:38:22,720
working group to try to really make sure

00:38:21,040 --> 00:38:24,160
this these aren't just all Microsoft

00:38:22,720 --> 00:38:26,020
extensions but they're actually common

00:38:24,160 --> 00:38:27,369
cross vendor extensions that everyone

00:38:26,020 --> 00:38:30,250
who wants to do hand tracking and eye

00:38:27,369 --> 00:38:31,450
tracking and meshing and spatial anchors

00:38:30,250 --> 00:38:33,579
and all that kind of stuff can share

00:38:31,450 --> 00:38:36,190
just again to reduce that fragmentation

00:38:33,579 --> 00:38:42,280
even for the extensions so we'll go back

00:38:36,190 --> 00:38:46,150
here to the home environment and if I go

00:38:42,280 --> 00:38:48,520
here again and then I can launch open XR

00:38:46,150 --> 00:38:50,560
hololens demo so again this is a demo

00:38:48,520 --> 00:38:52,180
using some internal stuff that will be

00:38:50,560 --> 00:38:53,589
public over time

00:38:52,180 --> 00:38:54,910
but we just wanted to show kind of both

00:38:53,589 --> 00:38:57,310
with you today and what you could do

00:38:54,910 --> 00:38:59,470
once all this is available so here you

00:38:57,310 --> 00:39:01,569
can see that there's like gems floating

00:38:59,470 --> 00:39:04,270
around and now when I reach my hand out

00:39:01,569 --> 00:39:06,160
you can see it's not just that cube but

00:39:04,270 --> 00:39:07,990
this is actually kind of the full mesh

00:39:06,160 --> 00:39:10,270
of my hand and we have a shader we've

00:39:07,990 --> 00:39:11,530
applied to kind of make this this this

00:39:10,270 --> 00:39:13,450
effect on your hand and it gives the

00:39:11,530 --> 00:39:14,950
user kind of confidence hey this is

00:39:13,450 --> 00:39:16,300
where your hand is in the world you

00:39:14,950 --> 00:39:18,099
actually saw just before this when I was

00:39:16,300 --> 00:39:20,109
in the shell on the device a different

00:39:18,099 --> 00:39:21,400
shader that that they use there to kind

00:39:20,109 --> 00:39:22,869
of give you again that confidence that

00:39:21,400 --> 00:39:25,359
ok the user knows they can interact with

00:39:22,869 --> 00:39:27,369
this hand and for example if I go here

00:39:25,359 --> 00:39:30,490
and I grab this gem I can move it around

00:39:27,369 --> 00:39:32,980
I can move around with that and I can I

00:39:30,490 --> 00:39:34,780
can drop it I can place it where it goes

00:39:32,980 --> 00:39:36,339
I can also kind of you see here actually

00:39:34,780 --> 00:39:37,660
see better with me to the blue one I go

00:39:36,339 --> 00:39:39,310
up and I kind of poke it so you can see

00:39:37,660 --> 00:39:40,480
we put this conscious for the visibility

00:39:39,310 --> 00:39:42,130
for developers we put this little sphere

00:39:40,480 --> 00:39:43,180
Collider on the front but you can kind

00:39:42,130 --> 00:39:43,800
of see when I'm poking it so you can

00:39:43,180 --> 00:39:46,080
imagine if I'd

00:39:43,800 --> 00:39:48,000
a button you can use that articulated

00:39:46,080 --> 00:39:50,520
hand data coming through to determine

00:39:48,000 --> 00:39:51,540
when you're actually able to to interact

00:39:50,520 --> 00:39:53,670
when you're actually pushing the button

00:39:51,540 --> 00:39:55,560
and you also notice some of them are

00:39:53,670 --> 00:39:56,790
rotating and some aren't so like right

00:39:55,560 --> 00:39:58,680
now there's blue ones rotating and

00:39:56,790 --> 00:40:00,570
that's actually cuz my eye is looking at

00:39:58,680 --> 00:40:01,860
it over to the left and so if I look

00:40:00,570 --> 00:40:03,210
over at the one on the right with the

00:40:01,860 --> 00:40:04,680
yellow that one starts to rotate if I

00:40:03,210 --> 00:40:07,110
look over here see if I kind of like

00:40:04,680 --> 00:40:08,520
line them up I look at both of them

00:40:07,110 --> 00:40:11,580
actually I know all three of them are

00:40:08,520 --> 00:40:13,440
rotating and if I look away they stop so

00:40:11,580 --> 00:40:15,120
yeah so I tracking you can do subtle

00:40:13,440 --> 00:40:16,650
effects with that and again we have

00:40:15,120 --> 00:40:17,820
again I don't want to put where's other

00:40:16,650 --> 00:40:19,020
people's mouths but I'll just say we

00:40:17,820 --> 00:40:20,760
have a set of vendors who are all

00:40:19,020 --> 00:40:22,350
working together within the group not

00:40:20,760 --> 00:40:25,770
just Microsoft who want to see common

00:40:22,350 --> 00:40:27,330
eye tracking extensions come to be you

00:40:25,770 --> 00:40:28,350
know Toby and others have been working

00:40:27,330 --> 00:40:29,880
on this and we're proposing some of that

00:40:28,350 --> 00:40:30,900
stuff very early on in the working group

00:40:29,880 --> 00:40:33,150
and they've been kind of pioneering

00:40:30,900 --> 00:40:34,350
having an eye tracking extension and we

00:40:33,150 --> 00:40:36,000
want to make sure that we don't come out

00:40:34,350 --> 00:40:37,410
just with our own that we actually have

00:40:36,000 --> 00:40:39,360
again this common common extension

00:40:37,410 --> 00:40:41,640
across whoever whoever is interested in

00:40:39,360 --> 00:40:43,050
this time frame and one other thing too

00:40:41,640 --> 00:40:44,610
right so you can see like my hand mesh

00:40:43,050 --> 00:40:46,500
is able to render here and it represents

00:40:44,610 --> 00:40:48,870
kind of the exact shape and kind of also

00:40:46,500 --> 00:40:50,160
the detected size of my hand but also

00:40:48,870 --> 00:40:52,260
just with the environment like this

00:40:50,160 --> 00:40:55,350
table here if I do the tap I can kind of

00:40:52,260 --> 00:40:56,610
see going out into the world the shape

00:40:55,350 --> 00:40:58,500
that the device understands the mesh

00:40:56,610 --> 00:41:00,240
that it does and if I kind of look over

00:40:58,500 --> 00:41:01,920
here like as the device will detect more

00:41:00,240 --> 00:41:03,990
and more still on this little tether for

00:41:01,920 --> 00:41:05,670
the video streaming I'm doing but you

00:41:03,990 --> 00:41:06,930
know you see the demo later you'll be

00:41:05,670 --> 00:41:09,150
able to disconnect and walk wherever you

00:41:06,930 --> 00:41:11,040
want you can get that mesh basically of

00:41:09,150 --> 00:41:12,180
what the device knows about the world

00:41:11,040 --> 00:41:13,590
and this is how you would do things like

00:41:12,180 --> 00:41:15,270
placement when you go like a physics

00:41:13,590 --> 00:41:16,620
engine into your app you could have the

00:41:15,270 --> 00:41:18,960
user place something against the mesh

00:41:16,620 --> 00:41:20,310
and finally the last thing it's harder

00:41:18,960 --> 00:41:22,080
to demo kind of on stage you have to

00:41:20,310 --> 00:41:23,610
take my word for it but when I'm moving

00:41:22,080 --> 00:41:25,920
this around and I kind of place it here

00:41:23,610 --> 00:41:28,470
let's say I like placed it on the on the

00:41:25,920 --> 00:41:31,140
surface here a spatial anchor is being

00:41:28,470 --> 00:41:32,610
created where that's being placed and so

00:41:31,140 --> 00:41:34,080
the spatial anchor means that you know

00:41:32,610 --> 00:41:35,760
even though this device is inside out

00:41:34,080 --> 00:41:37,080
and you saw this I'm walking around the

00:41:35,760 --> 00:41:38,940
device is still kind of learning about

00:41:37,080 --> 00:41:41,430
the meshing one of the extensions we

00:41:38,940 --> 00:41:43,440
have is about unbounded coordinate

00:41:41,430 --> 00:41:46,200
systems unbounded frames of reference to

00:41:43,440 --> 00:41:47,400
be able to say as you walk around the

00:41:46,200 --> 00:41:49,650
device will still be learning and it

00:41:47,400 --> 00:41:52,080
needs to adjust its coordinate systems

00:41:49,650 --> 00:41:53,220
as you go and if you had an anchor all

00:41:52,080 --> 00:41:54,950
the way back here and you walked maybe

00:41:53,220 --> 00:41:56,810
20 meters there might be leave arm

00:41:54,950 --> 00:41:59,089
and you would kind of lose quality you'd

00:41:56,810 --> 00:42:00,829
get a lot of jumpin a round of content

00:41:59,089 --> 00:42:02,359
over there and so the unbounded

00:42:00,829 --> 00:42:04,160
reference space means that you can

00:42:02,359 --> 00:42:05,150
stabilize near where you are even if you

00:42:04,160 --> 00:42:06,740
walk a hundred meters in that direction

00:42:05,150 --> 00:42:08,540
go up two floors and you have a

00:42:06,740 --> 00:42:10,250
continuous map it's okay because over

00:42:08,540 --> 00:42:11,780
there the coordinates will stabilize

00:42:10,250 --> 00:42:13,040
near you but it means that the stuff

00:42:11,780 --> 00:42:14,510
back where you started might move off

00:42:13,040 --> 00:42:16,250
the mark and so if you're doing that

00:42:14,510 --> 00:42:17,839
being able to place these spatial

00:42:16,250 --> 00:42:20,480
anchors on piece of content like I can

00:42:17,839 --> 00:42:22,369
put this here if I was to walk far away

00:42:20,480 --> 00:42:24,230
and come back and I was to go look for

00:42:22,369 --> 00:42:25,820
that again even if it moved and

00:42:24,230 --> 00:42:27,200
numerically within that coordinate

00:42:25,820 --> 00:42:29,030
system I'd still be able to

00:42:27,200 --> 00:42:30,440
independently locate this independently

00:42:29,030 --> 00:42:34,190
locate that because the device knows to

00:42:30,440 --> 00:42:35,780
track each one on its own and so this

00:42:34,190 --> 00:42:37,760
was just kind of a quick preview of you

00:42:35,780 --> 00:42:40,550
know hand tracking including hand mesh

00:42:37,760 --> 00:42:42,740
hantai tracking the spatial meshing that

00:42:40,550 --> 00:42:46,550
you saw here as well as the ability to

00:42:42,740 --> 00:42:48,910
place spatial anchors so take this off

00:42:46,550 --> 00:42:48,910
here

00:42:56,670 --> 00:43:00,540
and so here basically this is the core

00:42:59,370 --> 00:43:01,710
stuff in the spec right so if you look

00:43:00,540 --> 00:43:03,450
at the left column these are all the

00:43:01,710 --> 00:43:04,740
things at the core you know open X r1 o

00:43:03,450 --> 00:43:06,660
spec delivers today when you're not

00:43:04,740 --> 00:43:07,800
using any extensions all the stuff kind

00:43:06,660 --> 00:43:09,480
of Brent went through in the slides

00:43:07,800 --> 00:43:11,820
setting up systems and sessions getting

00:43:09,480 --> 00:43:13,260
reference spaces doing mono and stereo

00:43:11,820 --> 00:43:14,580
getting swapped chains composition

00:43:13,260 --> 00:43:17,220
laters all the stuff that all our VR and

00:43:14,580 --> 00:43:18,960
AR API is had been doing but we're doing

00:43:17,220 --> 00:43:20,460
the same sort of thing but in slightly

00:43:18,960 --> 00:43:22,110
different ways and so that left column

00:43:20,460 --> 00:43:24,180
is all the areas where we've agreed now

00:43:22,110 --> 00:43:25,530
across the industry to figure out how we

00:43:24,180 --> 00:43:27,360
want to do this so that engines can just

00:43:25,530 --> 00:43:29,310
write their codes there once and then

00:43:27,360 --> 00:43:30,960
the right side is what we showed today

00:43:29,310 --> 00:43:32,970
so for the first two rows that unbounded

00:43:30,960 --> 00:43:35,010
reference space and for actually putting

00:43:32,970 --> 00:43:36,480
spatial anchors in your world we

00:43:35,010 --> 00:43:38,700
currently actually have a PR up on

00:43:36,480 --> 00:43:41,130
github right now for adding at least a

00:43:38,700 --> 00:43:43,620
Microsoft specific extension to get you

00:43:41,130 --> 00:43:45,510
going today for that kind of stuff but

00:43:43,620 --> 00:43:47,310
for those two and for all the rest you

00:43:45,510 --> 00:43:48,900
know that we demoed we quickly by the

00:43:47,310 --> 00:43:50,370
end of the year we want to get to full

00:43:48,900 --> 00:43:51,570
parity for all of this and that's kind

00:43:50,370 --> 00:43:53,220
of what we've committed to but for as

00:43:51,570 --> 00:43:55,200
many of those as possible

00:43:53,220 --> 00:43:57,180
where folks want to we want to get to

00:43:55,200 --> 00:43:58,800
not just MSFT extensions but EXT

00:43:57,180 --> 00:44:00,450
extensions cross vendor extensions where

00:43:58,800 --> 00:44:01,890
multiple vendors have agreed on the

00:44:00,450 --> 00:44:04,320
right way that to do this that all of

00:44:01,890 --> 00:44:07,590
you can implement once and support and

00:44:04,320 --> 00:44:09,030
everyone's device and so if you

00:44:07,590 --> 00:44:11,100
specifically are excited about this and

00:44:09,030 --> 00:44:14,190
you want to get started again you go to

00:44:11,100 --> 00:44:15,600
a k-8 @ ms slash open XR whether you

00:44:14,190 --> 00:44:17,010
have a hololens to or not if you don't

00:44:15,600 --> 00:44:19,140
have one you can use the hololens to

00:44:17,010 --> 00:44:20,400
simulator and you'll be able to again

00:44:19,140 --> 00:44:22,530
write your apps and deploy them into

00:44:20,400 --> 00:44:25,350
that into that emulator and you can run

00:44:22,530 --> 00:44:26,400
that and but again either way you could

00:44:25,350 --> 00:44:28,470
either do it on hololens too or just

00:44:26,400 --> 00:44:30,090
windows mixed reality headsets or vari

00:44:28,470 --> 00:44:31,650
or headsets are with their runtime and

00:44:30,090 --> 00:44:32,490
everybody who's in calabria and everyone

00:44:31,650 --> 00:44:33,990
who's going to be having all these

00:44:32,490 --> 00:44:36,420
runtimes and headsets out there please

00:44:33,990 --> 00:44:37,440
get going start using this let us know

00:44:36,420 --> 00:44:39,030
what you think let us know what you'd

00:44:37,440 --> 00:44:41,940
like to see so all of us can work

00:44:39,030 --> 00:44:43,830
together and add this stuff so you can

00:44:41,940 --> 00:44:45,690
get the spec the open X our forums again

00:44:43,830 --> 00:44:49,720
Chronos dot org slash open X R and then

00:44:45,690 --> 00:44:57,470
AKMs slash open X R to get going Thanks

00:44:49,720 --> 00:44:57,470
[Applause]

00:45:11,870 --> 00:45:16,150
okay thanks Remy thanks Alex those are

00:45:14,480 --> 00:45:19,610
great demos let me see if I getting that

00:45:16,150 --> 00:45:21,880
pull this back and we'll wrap up the

00:45:19,610 --> 00:45:21,880
talk

00:45:26,930 --> 00:45:31,700
okay so I was just want to talk Alex

00:45:29,809 --> 00:45:33,079
pointed out a few the resources and

00:45:31,700 --> 00:45:34,700
places to go but I wanted to talk about

00:45:33,079 --> 00:45:36,410
what resources are available for people

00:45:34,700 --> 00:45:39,230
to go check out so we have a 200 page

00:45:36,410 --> 00:45:42,319
specification to go read up it's it's

00:45:39,230 --> 00:45:44,119
highly technical but it is mainly

00:45:42,319 --> 00:45:46,549
targeting run times but application

00:45:44,119 --> 00:45:47,900
developer can look at them as well we

00:45:46,549 --> 00:45:50,539
have a set of reference pages you can

00:45:47,900 --> 00:45:52,369
look up extent or look up the functions

00:45:50,539 --> 00:45:55,670
and look up the details about how these

00:45:52,369 --> 00:45:56,960
work and jump right to particular

00:45:55,670 --> 00:45:59,599
functionality that you want to look up

00:45:56,960 --> 00:46:01,760
we also have produced a new overview

00:45:59,599 --> 00:46:03,529
guide we had one we produced for GDC for

00:46:01,760 --> 00:46:05,630
the provisional spec this is a full I

00:46:03,529 --> 00:46:07,940
think it's like eight pages complete

00:46:05,630 --> 00:46:11,119
detailed overview of the specification

00:46:07,940 --> 00:46:13,730
as well we have a number of github

00:46:11,119 --> 00:46:15,380
repositories the open X are in the

00:46:13,730 --> 00:46:17,240
Khronos group we have open X our Docs

00:46:15,380 --> 00:46:19,700
which contains a source for generating

00:46:17,240 --> 00:46:21,950
the specification documents and the open

00:46:19,700 --> 00:46:24,470
X our header files are there we also

00:46:21,950 --> 00:46:26,720
have one the registry which is similar

00:46:24,470 --> 00:46:28,490
to other Cronos api's which contains the

00:46:26,720 --> 00:46:31,630
specification reference pages and the

00:46:28,490 --> 00:46:33,770
overview guide we have a new one called

00:46:31,630 --> 00:46:35,029
we got some feedback about it was a

00:46:33,770 --> 00:46:37,099
little bit difficult to integrate the

00:46:35,029 --> 00:46:39,589
SDK into other people's projects so we

00:46:37,099 --> 00:46:42,740
kind of split the SDK up into an SDK

00:46:39,589 --> 00:46:45,559
source and SDK so SDK source contains

00:46:42,740 --> 00:46:47,180
the files to generate the the files that

00:46:45,559 --> 00:46:49,819
you would need for your project using

00:46:47,180 --> 00:46:52,549
Python and XML but if you just want to

00:46:49,819 --> 00:46:55,220
link into your project the files that

00:46:52,549 --> 00:46:57,230
are generated like headers etc for both

00:46:55,220 --> 00:47:01,430
building on Windows and Linux you can go

00:46:57,230 --> 00:47:03,260
to the open X R - SDK repository and if

00:47:01,430 --> 00:47:04,789
you want to take a picture this is all

00:47:03,260 --> 00:47:06,849
the additional resources we have for

00:47:04,789 --> 00:47:10,309
open X R we have the main landing page

00:47:06,849 --> 00:47:12,049
our forum and slack channels links to

00:47:10,309 --> 00:47:14,660
the implementations you saw here

00:47:12,049 --> 00:47:16,640
including my understanding is that the

00:47:14,660 --> 00:47:19,339
Unreal Engine current preview has the

00:47:16,640 --> 00:47:21,440
open XR 1.0 experimental plug-in

00:47:19,339 --> 00:47:23,420
available as well and then this

00:47:21,440 --> 00:47:26,829
presentation and videos should be up on

00:47:23,420 --> 00:47:28,910
our Chronos site shortly thereafter

00:47:26,829 --> 00:47:30,349
what's next we'll be working on

00:47:28,910 --> 00:47:32,299
finishing the conformance suite and

00:47:30,349 --> 00:47:34,510
releasing conformance implementations

00:47:32,299 --> 00:47:37,490
hopefully by the end of the year and

00:47:34,510 --> 00:47:39,349
then we'll be looking at taking the

00:47:37,490 --> 00:47:39,869
extensions that alex talked about and

00:47:39,349 --> 00:47:42,630
now that we

00:47:39,869 --> 00:47:45,509
have a an established foundation for

00:47:42,630 --> 00:47:47,009
building upon we can start looking at

00:47:45,509 --> 00:47:49,740
all kinds of new features we want to

00:47:47,009 --> 00:47:51,450
expose so many thanks to all the

00:47:49,740 --> 00:47:53,460
companies to letting their their

00:47:51,450 --> 00:47:55,319
engineers have time to dedicate to open

00:47:53,460 --> 00:47:57,509
XR I also want to thank all the

00:47:55,319 --> 00:47:59,160
engineers who have put in time and

00:47:57,509 --> 00:48:01,950
effort to delivering this a lot of them

00:47:59,160 --> 00:48:03,269
from day one so thanks and also I'd like

00:48:01,950 --> 00:48:05,279
the some of the working group members

00:48:03,269 --> 00:48:07,440
that are in the room today to stand up

00:48:05,279 --> 00:48:11,900
let's give some applause plus L should

00:48:07,440 --> 00:48:14,900
be here tonight ask them questions

00:48:11,900 --> 00:48:14,900
Thanks

00:48:15,890 --> 00:48:21,119
be sure they have beer before that you

00:48:18,299 --> 00:48:23,759
start asking them questions tonight so

00:48:21,119 --> 00:48:25,410
to wrap up we're running out of time so

00:48:23,759 --> 00:48:27,720
I won't go through that but just

00:48:25,410 --> 00:48:32,730
basically want to talk about hey this is

00:48:27,720 --> 00:48:34,950
a great day for 4xr we have enabled this

00:48:32,730 --> 00:48:36,089
API that will allow the end users of

00:48:34,950 --> 00:48:37,559
wind to allow them to have more

00:48:36,089 --> 00:48:40,200
flexibility more confidence in the

00:48:37,559 --> 00:48:43,140
platforms that are developing enables

00:48:40,200 --> 00:48:45,299
ISPs to target one API to deploy their

00:48:43,140 --> 00:48:47,970
applications and helps vendors that

00:48:45,299 --> 00:48:50,460
support X are by providing a place and

00:48:47,970 --> 00:48:53,609
getting leveraging the entire open X our

00:48:50,460 --> 00:48:57,920
ecosystem to bring applications to their

00:48:53,609 --> 00:48:57,920
platforms so thanks

00:49:03,560 --> 00:49:07,440
again come tonight we'll have the

00:49:05,610 --> 00:49:09,690
networking reception in this room and

00:49:07,440 --> 00:49:12,980
you can check out the demos and you can

00:49:09,690 --> 00:49:12,980

YouTube URL: https://www.youtube.com/watch?v=cnNvR-Tp5xg


