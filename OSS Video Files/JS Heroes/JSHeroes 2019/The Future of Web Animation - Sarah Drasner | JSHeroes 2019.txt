Title: The Future of Web Animation - Sarah Drasner | JSHeroes 2019
Publication date: 2019-04-27
Playlist: JSHeroes 2019
Description: 
	We talk a lot about how to animate on the web, and what's possible in browsers today, but where is animation heading? In this talk, we'll start with some bleeding edge techniques such as native-like page transitions with client side rendering, but then we'll push it further. The intersection of health and animation with biofeedback sensors, the future of 3d in the browser complete with interviews with people who are writing these specs... this talk will show that in terms of animation on the web, we're just getting started.
Captions: 
	00:00:00,160 --> 00:00:19,280
[Music]

00:00:16,150 --> 00:00:21,830
I actually do have another job line so

00:00:19,280 --> 00:00:24,800
please don't actually reach out permit

00:00:21,830 --> 00:00:26,750
to me for another gum I'm really excited

00:00:24,800 --> 00:00:28,700
to be here I was here last year and I

00:00:26,750 --> 00:00:30,890
just thought it was so incredible

00:00:28,700 --> 00:00:32,989
Romania is beautiful this conference is

00:00:30,890 --> 00:00:34,309
amazing and has such a great lineup so I

00:00:32,989 --> 00:00:36,440
wanted to thank the organizers for

00:00:34,309 --> 00:00:37,940
inviting me back again and for putting

00:00:36,440 --> 00:00:39,830
together such a great event put a round

00:00:37,940 --> 00:00:44,739
of applause for the ordering organizers

00:00:39,830 --> 00:00:48,800
[Applause]

00:00:44,739 --> 00:00:50,480
okay the future of web animation so

00:00:48,800 --> 00:00:51,860
usually I get up here and do something

00:00:50,480 --> 00:00:53,660
like this I teach how to / make

00:00:51,860 --> 00:00:55,309
performant animations in the browser but

00:00:53,660 --> 00:01:00,920
it's getting a little boring

00:00:55,309 --> 00:01:03,140
oh sorry um anyways so today I want to

00:01:00,920 --> 00:01:05,449
go a step further today we're gonna push

00:01:03,140 --> 00:01:07,580
the boundaries of what's available on

00:01:05,449 --> 00:01:09,229
the web and what can exist on the web so

00:01:07,580 --> 00:01:11,330
before we talk about the future of

00:01:09,229 --> 00:01:13,729
animation on the web let's first look at

00:01:11,330 --> 00:01:16,970
the goal of the web the web is first and

00:01:13,729 --> 00:01:18,710
foremost about communicating we can

00:01:16,970 --> 00:01:20,270
communicate happiness and we can share

00:01:18,710 --> 00:01:23,750
memes with each other we can communicate

00:01:20,270 --> 00:01:26,690
our fears and talk about politics we can

00:01:23,750 --> 00:01:29,119
educate and ultimately what we as humans

00:01:26,690 --> 00:01:32,720
are trying to do with the web is -

00:01:29,119 --> 00:01:34,970
communication is communication so what

00:01:32,720 --> 00:01:37,520
does this have to do sorry my mic is

00:01:34,970 --> 00:01:39,920
making noises okay what does this have

00:01:37,520 --> 00:01:42,680
to do with animation why would we need

00:01:39,920 --> 00:01:45,140
to care about animation in order to

00:01:42,680 --> 00:01:46,909
communicate well let's think back to

00:01:45,140 --> 00:01:49,670
some of your earliest sensory memories

00:01:46,909 --> 00:01:53,060
when was the first time that media not

00:01:49,670 --> 00:01:57,100
something in your life but media made

00:01:53,060 --> 00:02:00,320
you feel any one of these things could

00:01:57,100 --> 00:02:03,829
it have been maybe spirited away maybe

00:02:00,320 --> 00:02:06,650
it was up maybe it was toy story maybe

00:02:03,829 --> 00:02:11,900
it was wall-e how about something that

00:02:06,650 --> 00:02:14,370
made you feel all of them can you turn

00:02:11,900 --> 00:02:17,479
the volume

00:02:14,370 --> 00:02:17,479
[Music]

00:02:26,470 --> 00:02:56,450
so happiness well that's very nice come

00:02:37,640 --> 00:03:08,150
here you nothing's coming out of the

00:02:56,450 --> 00:03:10,840
closet to scare you anymore right kitty

00:03:08,150 --> 00:03:10,840
has to go

00:03:11,660 --> 00:03:27,770
[Music]

00:03:30,560 --> 00:03:35,889
[Music]

00:03:49,450 --> 00:03:54,610
no curiosity

00:03:55,599 --> 00:04:01,010
you see emotions attached to our limbic

00:03:58,819 --> 00:04:02,810
system making things easier to recall if

00:04:01,010 --> 00:04:04,459
I asked you what happened randomly

00:04:02,810 --> 00:04:06,440
someday when you were 5 years old you

00:04:04,459 --> 00:04:08,390
probably wouldn't remember but you might

00:04:06,440 --> 00:04:11,120
actually remember all of the words to

00:04:08,390 --> 00:04:13,280
Hakuna Matata or under-the-sea these

00:04:11,120 --> 00:04:15,620
cartoons might have seemed like simple

00:04:13,280 --> 00:04:17,989
line drawings but they gave shape and

00:04:15,620 --> 00:04:20,269
color to our internal worlds they

00:04:17,989 --> 00:04:21,709
brought life to our imaginations and

00:04:20,269 --> 00:04:23,930
part of the reason why it could do that

00:04:21,709 --> 00:04:27,710
what was then exciting to me and it's

00:04:23,930 --> 00:04:30,380
still so exciting to me today they said

00:04:27,710 --> 00:04:32,150
anything can happen and that's why when

00:04:30,380 --> 00:04:33,740
we talk about the future of the web in

00:04:32,150 --> 00:04:37,550
the future of what's possible on the web

00:04:33,740 --> 00:04:39,320
we talk about animation my name is Sarah

00:04:37,550 --> 00:04:41,300
Dresner I'm Sarah IDO on Twitter I'm

00:04:39,320 --> 00:04:44,030
also on the viewport team and a staff

00:04:41,300 --> 00:04:45,830
writer for CSS tricks and I'm here today

00:04:44,030 --> 00:04:47,900
to talk about with the web's bright

00:04:45,830 --> 00:04:49,760
future we're gonna start with some stuff

00:04:47,900 --> 00:04:52,039
that you kind of already know how to do

00:04:49,760 --> 00:04:53,990
and is kind of the future of some

00:04:52,039 --> 00:04:55,370
framework things but then we're gonna

00:04:53,990 --> 00:04:57,620
take it a step further and talk about

00:04:55,370 --> 00:05:00,039
stuff that you can't do yet but might

00:04:57,620 --> 00:05:03,080
what might exist in the web of tomorrow

00:05:00,039 --> 00:05:06,110
ok so first we're gonna talk about hooks

00:05:03,080 --> 00:05:08,840
in terms of you not in terms of react

00:05:06,110 --> 00:05:10,550
and actually there now call as of a

00:05:08,840 --> 00:05:12,710
couple weeks ago called composition

00:05:10,550 --> 00:05:14,930
components how many of you have worked

00:05:12,710 --> 00:05:16,970
on software that has changed or adjusted

00:05:14,930 --> 00:05:20,750
and you had to update some code in order

00:05:16,970 --> 00:05:22,880
to yeah so this is kind of like that a

00:05:20,750 --> 00:05:25,190
lot of the code that I'm about to show

00:05:22,880 --> 00:05:27,169
you is no longer going to be in

00:05:25,190 --> 00:05:30,110
existence it's very experimental so it

00:05:27,169 --> 00:05:31,520
works in 2 dot X but for 3 X we're going

00:05:30,110 --> 00:05:33,110
to be doing something different but

00:05:31,520 --> 00:05:34,370
that's that's kind of the name of the

00:05:33,110 --> 00:05:37,220
game when we talk about the future of

00:05:34,370 --> 00:05:39,680
animation right so hooks or composition

00:05:37,220 --> 00:05:42,560
components what they allow us to do is

00:05:39,680 --> 00:05:44,389
to encapsulate stateful logics so that

00:05:42,560 --> 00:05:47,270
when we're sharing things in between

00:05:44,389 --> 00:05:49,340
different components we can actually do

00:05:47,270 --> 00:05:53,510
so with ease across an entire

00:05:49,340 --> 00:05:55,610
application so in on this application

00:05:53,510 --> 00:05:57,470
that I make you can see how that logo

00:05:55,610 --> 00:05:59,090
animates in and then when we open this

00:05:57,470 --> 00:06:01,310
the letters also animate it and they

00:05:59,090 --> 00:06:03,409
kind of animate in the same way one

00:06:01,310 --> 00:06:05,900
thing that you can't see from this demo

00:06:03,409 --> 00:06:08,090
is that once that restaurant pops open

00:06:05,900 --> 00:06:09,560
it actually keeps the browser

00:06:08,090 --> 00:06:11,570
for moving around and shifting so that

00:06:09,560 --> 00:06:13,910
people can't adjust and move it around

00:06:11,570 --> 00:06:16,240
while that restaurant is open so I'm

00:06:13,910 --> 00:06:19,310
going to show how we did this with hooks

00:06:16,240 --> 00:06:21,320
so in the source hooks folder I've

00:06:19,310 --> 00:06:23,600
created a hook that prevents scrolling

00:06:21,320 --> 00:06:25,580
on a used mounted hook and also gets rid

00:06:23,600 --> 00:06:27,740
of it on use destroyed so this helps me

00:06:25,580 --> 00:06:29,990
pause it while that restaurant is opened

00:06:27,740 --> 00:06:33,020
and then destroy it once it's closed so

00:06:29,990 --> 00:06:35,240
within the export I've started to define

00:06:33,020 --> 00:06:37,250
some pieces of the functionality that

00:06:35,240 --> 00:06:39,919
we're going to use for both of those and

00:06:37,250 --> 00:06:41,990
then when we call use mounted within it

00:06:39,919 --> 00:06:43,520
we're going to apply any logic that

00:06:41,990 --> 00:06:45,530
we're going to keep whenever the thing

00:06:43,520 --> 00:06:47,389
is mounted so any component that uses

00:06:45,530 --> 00:06:49,880
this will have that on the mounted hook

00:06:47,389 --> 00:06:51,470
and then the same will go for use

00:06:49,880 --> 00:06:54,050
destroyed notice we're calling those

00:06:51,470 --> 00:06:56,720
functions and then when we use it on the

00:06:54,050 --> 00:06:58,639
component itself we do a similar thing

00:06:56,720 --> 00:07:01,460
that we do with if we were using mix-ins

00:06:58,639 --> 00:07:03,470
we basically add it and then we also say

00:07:01,460 --> 00:07:06,080
that we're going to use it but this

00:07:03,470 --> 00:07:08,539
brings up a good point so why wouldn't

00:07:06,080 --> 00:07:10,520
we use mix-ins for this if you use view

00:07:08,539 --> 00:07:12,830
already we have mix-ins and you can

00:07:10,520 --> 00:07:14,930
already share stateful logic so what's

00:07:12,830 --> 00:07:16,220
the difference well hooks achieve

00:07:14,930 --> 00:07:19,490
something that mix-ins

00:07:16,220 --> 00:07:23,240
don't in this case they allow us to pass

00:07:19,490 --> 00:07:24,979
state from one to the other in when

00:07:23,240 --> 00:07:27,349
we're using mix-ins mix-ins don't have a

00:07:24,979 --> 00:07:29,320
sense of what the other one is doing so

00:07:27,349 --> 00:07:32,150
we can't actually compose them together

00:07:29,320 --> 00:07:33,950
they also make it very explicit where

00:07:32,150 --> 00:07:35,030
the logic is coming from you can see in

00:07:33,950 --> 00:07:37,490
the return statement

00:07:35,030 --> 00:07:39,740
whatever we're exporting is what we're

00:07:37,490 --> 00:07:41,870
gonna end up using so let's check out

00:07:39,740 --> 00:07:43,430
what this means in terms of animation

00:07:41,870 --> 00:07:45,530
because it's kind of common that you'd

00:07:43,430 --> 00:07:47,060
want to share animation across an

00:07:45,530 --> 00:07:49,070
application and use it slightly

00:07:47,060 --> 00:07:52,400
differently depending on where you're

00:07:49,070 --> 00:07:55,130
using it so in this kind of logo

00:07:52,400 --> 00:07:56,690
animation here you might have noticed

00:07:55,130 --> 00:07:58,370
that it's the same thing that has the

00:07:56,690 --> 00:08:00,229
same lettering animation that we apply

00:07:58,370 --> 00:08:02,120
to the restaurants but it's slightly

00:08:00,229 --> 00:08:04,490
different and one thing that it does is

00:08:02,120 --> 00:08:07,130
when it's in mobile view it doesn't

00:08:04,490 --> 00:08:10,520
animate at all it only does so on you

00:08:07,130 --> 00:08:13,099
know tablet size and larger so in order

00:08:10,520 --> 00:08:15,470
to do this we have this first hook or

00:08:13,099 --> 00:08:17,090
composition component and we gather some

00:08:15,470 --> 00:08:19,159
information about the window width and

00:08:17,090 --> 00:08:20,840
we might want to use this somewhere else

00:08:19,159 --> 00:08:21,710
in our application even though it's

00:08:20,840 --> 00:08:23,210
simple

00:08:21,710 --> 00:08:25,010
and in the second we'll use a

00:08:23,210 --> 00:08:27,320
conditional to show different animation

00:08:25,010 --> 00:08:29,180
logic depending on the window size so we

00:08:27,320 --> 00:08:32,810
can use the first hook for different

00:08:29,180 --> 00:08:35,990
tasks because it's decoupled and now we

00:08:32,810 --> 00:08:38,510
can pass the first hook in as a program

00:08:35,990 --> 00:08:41,270
into the second hook and then it allows

00:08:38,510 --> 00:08:43,700
us to create these compositions from

00:08:41,270 --> 00:08:45,770
these pieces of stateful logic all over

00:08:43,700 --> 00:08:47,600
our application and we can compose them

00:08:45,770 --> 00:08:49,580
together so if you want to know more

00:08:47,600 --> 00:08:51,980
information about this I wrote an

00:08:49,580 --> 00:08:53,690
article about it there's also a demo and

00:08:51,980 --> 00:08:55,180
a demo repo that you can check out if

00:08:53,690 --> 00:08:58,280
you want to play around with it yourself

00:08:55,180 --> 00:09:02,600
cool all right

00:08:58,280 --> 00:09:04,310
OOP that's the wrong way okay so we

00:09:02,600 --> 00:09:06,530
already did a lot let's talk about

00:09:04,310 --> 00:09:09,500
making your existing site more intuitive

00:09:06,530 --> 00:09:11,870
with some page transitions the web has

00:09:09,500 --> 00:09:13,490
come under critique for recent years for

00:09:11,870 --> 00:09:15,020
looking a little dated compared to

00:09:13,490 --> 00:09:16,700
mobile applications in mobile

00:09:15,020 --> 00:09:18,680
applications everything is seamless and

00:09:16,700 --> 00:09:20,330
kind of flows together there are some

00:09:18,680 --> 00:09:22,670
things that persist and some things that

00:09:20,330 --> 00:09:24,680
don't but they look really and feel

00:09:22,670 --> 00:09:27,020
really intuitive on native applications

00:09:24,680 --> 00:09:29,390
in a way that the web has kind of stayed

00:09:27,020 --> 00:09:31,100
in the past so let's make our

00:09:29,390 --> 00:09:33,260
applications a little bit more intuitive

00:09:31,100 --> 00:09:36,020
by figuring out how to do those kind of

00:09:33,260 --> 00:09:38,720
native like page transitions when we

00:09:36,020 --> 00:09:41,930
move from page to page we have to remap

00:09:38,720 --> 00:09:44,270
all of that space so this is an eye it's

00:09:41,930 --> 00:09:45,830
like a heat map of where your eye is

00:09:44,270 --> 00:09:48,080
going through these pages and you can

00:09:45,830 --> 00:09:50,150
see it has to reevaluate the entire

00:09:48,080 --> 00:09:52,460
space and it takes a lot of cognitive

00:09:50,150 --> 00:09:54,770
load to do that so the user has to think

00:09:52,460 --> 00:09:56,480
a lot when they figure out what's going

00:09:54,770 --> 00:09:58,760
on in every single page that they visit

00:09:56,480 --> 00:10:01,700
so how can we reduce that cognitive load

00:09:58,760 --> 00:10:03,260
I love this example by Kathy Sierra from

00:10:01,700 --> 00:10:05,870
badass making these errs awesome

00:10:03,260 --> 00:10:07,610
this is a typical stovetop and everyone

00:10:05,870 --> 00:10:09,260
has to kind of like spend a second

00:10:07,610 --> 00:10:11,570
figuring out which knob goes to which

00:10:09,260 --> 00:10:14,420
burner but if you just change it a

00:10:11,570 --> 00:10:16,280
little bit just a little bit all of a

00:10:14,420 --> 00:10:18,110
sudden that cognitive lit boast that

00:10:16,280 --> 00:10:20,450
cognitive load and those cognitive leaks

00:10:18,110 --> 00:10:22,040
are destroyed right you all of a sudden

00:10:20,450 --> 00:10:23,420
know how to map that really really

00:10:22,040 --> 00:10:25,880
easily and we didn't do a lot of work

00:10:23,420 --> 00:10:28,220
here we just thought a little bit more

00:10:25,880 --> 00:10:31,130
intuitively about how everything was

00:10:28,220 --> 00:10:33,500
positioned so recently JIRA made this

00:10:31,130 --> 00:10:35,010
update to their whole system to have

00:10:33,500 --> 00:10:37,260
information clustered

00:10:35,010 --> 00:10:39,990
similar areas if they have the same kind

00:10:37,260 --> 00:10:42,690
of tasks so it went from this to this

00:10:39,990 --> 00:10:46,260
but what's really interesting to me is

00:10:42,690 --> 00:10:48,960
how they announced it so they basically

00:10:46,260 --> 00:10:51,570
took all of these areas and showed you

00:10:48,960 --> 00:10:53,250
how they remapped it when I show you one

00:10:51,570 --> 00:10:55,710
screen to another it's kind of hard to

00:10:53,250 --> 00:10:58,320
understand how they understood and

00:10:55,710 --> 00:11:00,390
adjusted all of that UX content but if

00:10:58,320 --> 00:11:03,090
you see it in this manner you go oh that

00:11:00,390 --> 00:11:05,130
makes so much sense the gray areas have

00:11:03,090 --> 00:11:07,920
associations and the blue areas have

00:11:05,130 --> 00:11:10,110
associations okay I see and motion helps

00:11:07,920 --> 00:11:12,480
with that motion allows you to see those

00:11:10,110 --> 00:11:14,430
pieces and understand where they get

00:11:12,480 --> 00:11:17,190
remapped to because that's how life

00:11:14,430 --> 00:11:20,010
works right I didn't just appear on the

00:11:17,190 --> 00:11:21,630
stage like out of nowhere I transitioned

00:11:20,010 --> 00:11:24,090
onto the stage it would be pretty scary

00:11:21,630 --> 00:11:26,280
if I just like appeared on the stage but

00:11:24,090 --> 00:11:28,380
interfaces use these bullying's in a way

00:11:26,280 --> 00:11:30,930
that our minds aren't really capable of

00:11:28,380 --> 00:11:33,510
understanding so how do we do this on

00:11:30,930 --> 00:11:35,160
the web well I used a tool called next

00:11:33,510 --> 00:11:38,010
which is like next j/s if you're

00:11:35,160 --> 00:11:40,380
familiar with react next allows us to do

00:11:38,010 --> 00:11:42,780
server-side rendering routing page

00:11:40,380 --> 00:11:44,550
transitions code splitting all without

00:11:42,780 --> 00:11:46,500
stepping outside of a view file it's a

00:11:44,550 --> 00:11:49,200
really nice abstraction and a nice CLI

00:11:46,500 --> 00:11:51,960
tool so what you do is you get this

00:11:49,200 --> 00:11:54,180
pages directory and a layout structure

00:11:51,960 --> 00:11:55,410
so the layout structure the directory

00:11:54,180 --> 00:11:58,110
allows you to have what you'd think

00:11:55,410 --> 00:12:00,450
different types of layouts and the pages

00:11:58,110 --> 00:12:03,330
directory has all of these view files

00:12:00,450 --> 00:12:05,070
index you can put you know about pages

00:12:03,330 --> 00:12:07,800
all of those things and it'll set up the

00:12:05,070 --> 00:12:10,080
routing for you which is really nice and

00:12:07,800 --> 00:12:11,610
if you haven't seen a view single file

00:12:10,080 --> 00:12:13,290
component before this is what they look

00:12:11,610 --> 00:12:15,540
like we have a template with some markup

00:12:13,290 --> 00:12:17,700
we have our script area and then we have

00:12:15,540 --> 00:12:20,820
style and you can scope that style just

00:12:17,700 --> 00:12:23,670
to that component so you'll be given an

00:12:20,820 --> 00:12:26,040
index page in the pages directory and

00:12:23,670 --> 00:12:29,100
then you can make this next link and

00:12:26,040 --> 00:12:31,020
then you have routing it's really really

00:12:29,100 --> 00:12:32,460
nice and simple but there's something

00:12:31,020 --> 00:12:34,590
more in view we have a thing called a

00:12:32,460 --> 00:12:37,500
transition component which offers from

00:12:34,590 --> 00:12:40,620
some hooks for which to apply enter and

00:12:37,500 --> 00:12:42,450
leave States and for pages like enter

00:12:40,620 --> 00:12:43,980
states are not such a big deal you just

00:12:42,450 --> 00:12:45,660
put it in the mounted hook but it's a

00:12:43,980 --> 00:12:47,490
little bit of a bigger deal to have a

00:12:45,660 --> 00:12:48,000
page wait for a second to finish an

00:12:47,490 --> 00:12:49,980
animation

00:12:48,000 --> 00:12:52,080
and then go you'd normally have to do a

00:12:49,980 --> 00:12:54,330
callback or some weird delay and

00:12:52,080 --> 00:12:55,980
something like that this means that they

00:12:54,330 --> 00:12:58,410
wrap the entire component and they

00:12:55,980 --> 00:12:59,580
actually offer you the hooks already so

00:12:58,410 --> 00:13:01,590
you don't even have to apply the

00:12:59,580 --> 00:13:06,000
transition component you can plug into

00:13:01,590 --> 00:13:08,040
it just by using some CSS classes here

00:13:06,000 --> 00:13:10,200
and we they also use JavaScript hooks

00:13:08,040 --> 00:13:11,360
which are personally my favorite so you

00:13:10,200 --> 00:13:14,940
can do stuff like this

00:13:11,360 --> 00:13:18,210
never do stuff like this don't do this

00:13:14,940 --> 00:13:20,490
series I'm just playing around but what

00:13:18,210 --> 00:13:23,430
they really allow us to do is to have

00:13:20,490 --> 00:13:24,930
these seamless transitions between pages

00:13:23,430 --> 00:13:27,270
where we have these really beautiful

00:13:24,930 --> 00:13:29,190
experiences remember how I I mentioned

00:13:27,270 --> 00:13:31,080
that we really want to make sure that

00:13:29,190 --> 00:13:33,540
things stay consistent for our users

00:13:31,080 --> 00:13:36,300
across pages then we can keep things

00:13:33,540 --> 00:13:38,220
consistent for our users across pages no

00:13:36,300 --> 00:13:42,090
matter what's going on it's very simple

00:13:38,220 --> 00:13:43,830
to make responsive as well so first we

00:13:42,090 --> 00:13:45,960
set up a view X store that's similar to

00:13:43,830 --> 00:13:47,670
a redux store if you're from a react

00:13:45,960 --> 00:13:50,280
background so we're storing both the

00:13:47,670 --> 00:13:53,220
page and a mutation that will update

00:13:50,280 --> 00:13:54,900
that page then we'll use that mutation

00:13:53,220 --> 00:13:56,850
to update the state by committing it to

00:13:54,900 --> 00:13:59,280
middleware and we'll update it to the

00:13:56,850 --> 00:14:01,620
current root context but before that

00:13:59,280 --> 00:14:03,960
we'll have to register that in our next

00:14:01,620 --> 00:14:06,980
config file so in a nook stuck config

00:14:03,960 --> 00:14:10,440
file we'll register that middleware and

00:14:06,980 --> 00:14:13,200
then next allows us to reuse those basic

00:14:10,440 --> 00:14:14,730
page structures like the default dot

00:14:13,200 --> 00:14:17,339
view and the ways that the way that we

00:14:14,730 --> 00:14:19,530
do that is we basically pass anything in

00:14:17,339 --> 00:14:21,660
that dot view component into the next

00:14:19,530 --> 00:14:23,580
component that you see there but one

00:14:21,660 --> 00:14:25,500
thing that we're allowed to do is we're

00:14:23,580 --> 00:14:27,690
allowed to have this app navigation or

00:14:25,500 --> 00:14:29,940
any navigation component that exists on

00:14:27,690 --> 00:14:31,680
every single page that's really great

00:14:29,940 --> 00:14:33,870
for us because we want to keep that

00:14:31,680 --> 00:14:36,180
consistent per page and just move things

00:14:33,870 --> 00:14:38,880
around whenever we get to the different

00:14:36,180 --> 00:14:41,339
page so that we're not actually rerender

00:14:38,880 --> 00:14:44,010
per page that's actually pretty normal

00:14:41,339 --> 00:14:46,620
to do but now we've got that hook that

00:14:44,010 --> 00:14:48,900
we can use and now we can also apply

00:14:46,620 --> 00:14:51,270
these transitionals and say if you're on

00:14:48,900 --> 00:14:54,570
this page it has this class or we're

00:14:51,270 --> 00:14:57,330
changing this or we're changing that the

00:14:54,570 --> 00:14:59,700
transition group component in view also

00:14:57,330 --> 00:15:01,260
applies flip under the hood how many

00:14:59,700 --> 00:15:05,580
people know what flip is

00:15:01,260 --> 00:15:08,850
yeah it's always like two people flip is

00:15:05,580 --> 00:15:11,280
a really cool animation concept that was

00:15:08,850 --> 00:15:14,100
first made by the chrome dev team Paul

00:15:11,280 --> 00:15:16,200
Lewis and basically we want to be using

00:15:14,100 --> 00:15:17,310
every transforms for anytime we move

00:15:16,200 --> 00:15:19,710
things around the page we don't want to

00:15:17,310 --> 00:15:22,020
do margins and tops and left's because

00:15:19,710 --> 00:15:23,580
those cause repaints so transforms are

00:15:22,020 --> 00:15:26,010
really the most efficient way for the

00:15:23,580 --> 00:15:28,590
browser to do that without repaints but

00:15:26,010 --> 00:15:30,270
if you're changing a bunch of different

00:15:28,590 --> 00:15:32,370
places of a bunch of different elements

00:15:30,270 --> 00:15:34,290
you really want to figure out the

00:15:32,370 --> 00:15:36,510
placement of the first the placement of

00:15:34,290 --> 00:15:39,330
the second and then invert figure out

00:15:36,510 --> 00:15:42,930
the changes between the two so we do

00:15:39,330 --> 00:15:44,580
that by first last invert play so we

00:15:42,930 --> 00:15:46,170
figure out the difference and then we

00:15:44,580 --> 00:15:49,440
make sure that we play that animation

00:15:46,170 --> 00:15:53,280
and it's great it makes really really

00:15:49,440 --> 00:15:55,890
easy to use things but it's kind of a

00:15:53,280 --> 00:15:57,450
pain in the butt to calculate so what

00:15:55,890 --> 00:15:59,610
the transition group component does

00:15:57,450 --> 00:16:01,290
especially for many many elements is it

00:15:59,610 --> 00:16:03,480
does it all for you you don't have to

00:16:01,290 --> 00:16:05,280
apply any of that animation logic you

00:16:03,480 --> 00:16:07,650
just throw things into the transition

00:16:05,280 --> 00:16:11,400
group component and it's done which I

00:16:07,650 --> 00:16:12,750
love so view implements this for us so

00:16:11,400 --> 00:16:14,820
we're gonna put all of our navigation

00:16:12,750 --> 00:16:16,500
components into that transition group

00:16:14,820 --> 00:16:18,960
component and get that flip

00:16:16,500 --> 00:16:21,000
functionality under the hood so the

00:16:18,960 --> 00:16:24,030
transition group wraps whatever we have

00:16:21,000 --> 00:16:26,780
inside of it and then we apply some

00:16:24,030 --> 00:16:28,920
styles and transitions can be really

00:16:26,780 --> 00:16:31,290
declarative because I don't need to even

00:16:28,920 --> 00:16:33,180
say exactly what needs to happen for

00:16:31,290 --> 00:16:37,350
each one I say anytime something moves

00:16:33,180 --> 00:16:39,450
use this kind of animation and so now we

00:16:37,350 --> 00:16:41,970
can use these hooks per page and we can

00:16:39,450 --> 00:16:44,940
transition things to different spots per

00:16:41,970 --> 00:16:48,120
page so now you have to know how to make

00:16:44,940 --> 00:16:52,470
beautiful and intuitive page transitions

00:16:48,120 --> 00:16:54,990
on all of your sites like this one my

00:16:52,470 --> 00:16:56,640
demo is using view and next and this is

00:16:54,990 --> 00:16:58,530
where that lives and there's also an

00:16:56,640 --> 00:17:00,660
article but Simona who you're gonna see

00:16:58,530 --> 00:17:03,090
in about an hour also ported it over to

00:17:00,660 --> 00:17:04,890
angular and Shaun Wang who works for net

00:17:03,090 --> 00:17:07,170
Liffe I also put it ported it over to

00:17:04,890 --> 00:17:09,600
react so you can actually use it across

00:17:07,170 --> 00:17:13,200
any framework and I'll put out the links

00:17:09,600 --> 00:17:15,040
for this after the talk cool so we just

00:17:13,200 --> 00:17:16,750
looked at some great ways to make

00:17:15,040 --> 00:17:18,820
seemless page transitions and animations

00:17:16,750 --> 00:17:21,280
on the web like you saw and those

00:17:18,820 --> 00:17:23,320
experiences were also responsive so

00:17:21,280 --> 00:17:26,470
probably a lot of you are familiar with

00:17:23,320 --> 00:17:28,870
responsive at this point we can create

00:17:26,470 --> 00:17:31,590
responsive experiences using grid and

00:17:28,870 --> 00:17:33,760
media queries and things like that so

00:17:31,590 --> 00:17:37,200
what if our websites weren't just

00:17:33,760 --> 00:17:40,030
responsive in two dimensions but three

00:17:37,200 --> 00:17:42,850
what if our browser offered us some

00:17:40,030 --> 00:17:46,030
basic specs to hook into to create these

00:17:42,850 --> 00:17:49,480
experiences with ease just like flexbox

00:17:46,030 --> 00:17:51,670
and media queries so what if we had a

00:17:49,480 --> 00:17:54,100
phone like this and we're just kind of

00:17:51,670 --> 00:17:55,960
viewing all of the you know this kind of

00:17:54,100 --> 00:17:58,450
navigation and we pop it into this is a

00:17:55,960 --> 00:18:01,630
very cheap headset and you can put your

00:17:58,450 --> 00:18:03,610
phone inside of it and then at first we

00:18:01,630 --> 00:18:06,070
can have these kind of experiences that

00:18:03,610 --> 00:18:08,430
mimic that a bit where we're just kind

00:18:06,070 --> 00:18:11,980
of looking around and scrolling around

00:18:08,430 --> 00:18:14,110
but if it detects VR maybe it drops out

00:18:11,980 --> 00:18:16,390
the background it actually uses that

00:18:14,110 --> 00:18:19,240
background to scan around and what if

00:18:16,390 --> 00:18:22,780
it's a different kind of experience when

00:18:19,240 --> 00:18:24,670
once we go into the VR headset so I made

00:18:22,780 --> 00:18:26,560
this demo using exactly the same thing

00:18:24,670 --> 00:18:28,510
that we saw earlier with next and with

00:18:26,560 --> 00:18:30,700
those page transitions but also this

00:18:28,510 --> 00:18:32,590
time with three j/s so here's a basic

00:18:30,700 --> 00:18:35,320
proposal of what that could look like I

00:18:32,590 --> 00:18:38,800
click on that we go into the VR headset

00:18:35,320 --> 00:18:41,050
these things go away and then we're able

00:18:38,800 --> 00:18:42,610
to kind of look around that scene and

00:18:41,050 --> 00:18:45,190
get a better sense if I'm going to

00:18:42,610 --> 00:18:46,840
Amsterdam I actually now know what I'm

00:18:45,190 --> 00:18:48,370
getting into and where I'm going in a

00:18:46,840 --> 00:18:52,300
better sense of that spatial awareness

00:18:48,370 --> 00:18:54,130
of visiting that place so on the page

00:18:52,300 --> 00:18:56,830
itself will capture some coordinates of

00:18:54,130 --> 00:18:58,930
the mouse as it moves and we're going to

00:18:56,830 --> 00:19:02,290
update some transforms as well as the

00:18:58,930 --> 00:19:04,390
perspective origin on the Dom nodes but

00:19:02,290 --> 00:19:06,880
we'll also create some sphere buffer

00:19:04,390 --> 00:19:09,400
geometry so basically make a circle and

00:19:06,880 --> 00:19:11,710
then we apply a mesh inside of it with

00:19:09,400 --> 00:19:14,860
the location so the location image then

00:19:11,710 --> 00:19:16,600
goes around that sphere and then we'll

00:19:14,860 --> 00:19:18,010
move the camera to the middle of the

00:19:16,600 --> 00:19:21,310
sphere and make sure that it can pan

00:19:18,010 --> 00:19:23,050
around that scene but what's important

00:19:21,310 --> 00:19:25,330
here isn't actually the way it was made

00:19:23,050 --> 00:19:27,280
with current browser technologies but

00:19:25,330 --> 00:19:28,419
how it could feasibly made be made in

00:19:27,280 --> 00:19:30,789
the future if I

00:19:28,419 --> 00:19:32,830
to make this square round I would add a

00:19:30,789 --> 00:19:35,529
border radius to it right that's pretty

00:19:32,830 --> 00:19:39,100
normal but what if we had media queries

00:19:35,529 --> 00:19:42,489
for VR experiences what if I could then

00:19:39,100 --> 00:19:45,639
just apply some grass as a material

00:19:42,489 --> 00:19:50,139
without knowing all this stuff about 3j

00:19:45,639 --> 00:19:53,289
s what if just like CSS filters we could

00:19:50,139 --> 00:19:56,379
apply things like materials and and maps

00:19:53,289 --> 00:20:00,519
and reflectivity to things that we see

00:19:56,379 --> 00:20:03,009
on the web with ease so this is a leaked

00:20:00,519 --> 00:20:05,559
screenshot of the chrome dev tools in

00:20:03,009 --> 00:20:07,600
what might be 3d responsive coming out

00:20:05,559 --> 00:20:09,820
so if you don't know Josh carpenter on

00:20:07,600 --> 00:20:12,519
Twitter you should go check him out he's

00:20:09,820 --> 00:20:14,499
one of the devs responsible for this so

00:20:12,519 --> 00:20:15,970
you can see how that might be really

00:20:14,499 --> 00:20:18,789
interesting if we have something like a

00:20:15,970 --> 00:20:20,679
chair and then here's a detailed view of

00:20:18,789 --> 00:20:23,049
that chair in what it might look like

00:20:20,679 --> 00:20:27,159
and how you might adjust all of those

00:20:23,049 --> 00:20:29,559
values cool huh and in fact he was on

00:20:27,159 --> 00:20:31,119
the a frame team and he was in charge of

00:20:29,559 --> 00:20:33,369
making a lot of these primitives that

00:20:31,119 --> 00:20:35,529
you could use to build 3d experiences so

00:20:33,369 --> 00:20:37,720
here's a demo showing some of the small

00:20:35,529 --> 00:20:40,210
primitives that make up this and the

00:20:37,720 --> 00:20:41,470
visual inspectors for all of these so

00:20:40,210 --> 00:20:44,230
you can actually make these right now

00:20:41,470 --> 00:20:45,850
with HTML elements if you want to and

00:20:44,230 --> 00:20:47,529
this is a really cool tool that you can

00:20:45,850 --> 00:20:50,399
try to play around with there trying to

00:20:47,529 --> 00:20:53,409
add this basically to the browser itself

00:20:50,399 --> 00:20:55,090
and it doesn't end there what if we have

00:20:53,409 --> 00:20:57,879
these building blocks to explore

00:20:55,090 --> 00:21:00,369
augmented reality as well so right now

00:20:57,879 --> 00:21:03,369
you can do this with AR kit but what if

00:21:00,369 --> 00:21:05,109
the browser intrinsically knew that once

00:21:03,369 --> 00:21:07,419
you were in a VR headset you could have

00:21:05,109 --> 00:21:12,029
these other capabilities and this was

00:21:07,419 --> 00:21:14,529
all done with native JavaScript and CSS

00:21:12,029 --> 00:21:16,359
think about how you could advance our

00:21:14,529 --> 00:21:18,220
teaching capabilities if you have to

00:21:16,359 --> 00:21:20,499
learn chemistry from a textbook or

00:21:18,220 --> 00:21:23,669
something like this as a kid how likely

00:21:20,499 --> 00:21:23,669
are you to remember it

00:21:25,530 --> 00:21:29,580
and you can see and feel how these

00:21:27,690 --> 00:21:32,910
things come together and will stand on

00:21:29,580 --> 00:21:37,770
their own really gently so you have this

00:21:32,910 --> 00:21:42,410
oxygen and helium or in hydrogen and

00:21:37,770 --> 00:21:45,720
then you bring it and then actually form

00:21:42,410 --> 00:21:48,120
so for me that makes it a lot more

00:21:45,720 --> 00:21:50,520
intuitive to understand how these things

00:21:48,120 --> 00:21:52,530
fit together instead of reading from

00:21:50,520 --> 00:21:54,600
these static tables and static layouts

00:21:52,530 --> 00:21:56,880
you have a completely different way of

00:21:54,600 --> 00:22:01,230
understanding that information and the

00:21:56,880 --> 00:22:02,490
cognitive leaks are removed and what if

00:22:01,230 --> 00:22:05,100
you could apply this learning other

00:22:02,490 --> 00:22:07,500
tactile things like piano actually those

00:22:05,100 --> 00:22:09,390
notes are abstractions right they're

00:22:07,500 --> 00:22:11,340
abstractions for how your fingers should

00:22:09,390 --> 00:22:13,350
behave and if you had something like

00:22:11,340 --> 00:22:15,450
this a our experience you see the

00:22:13,350 --> 00:22:19,610
relationship between the notes and what

00:22:15,450 --> 00:22:19,610
you should be playing a lot more easily

00:22:23,140 --> 00:22:26,880
all right what sassy a volcano

00:22:27,210 --> 00:22:36,610
three-two-one look at that la but look

00:22:33,460 --> 00:22:45,549
at what saying you're an airplane and

00:22:36,610 --> 00:22:48,220
fly over the tornado learning about DNA

00:22:45,549 --> 00:22:50,770
and genes things that we can't see and

00:22:48,220 --> 00:22:53,410
so the most exciting thing for me with

00:22:50,770 --> 00:22:57,040
the air technology was that I could see

00:22:53,410 --> 00:22:58,990
kids get an aha moment that I couldn't

00:22:57,040 --> 00:23:00,429
get by just telling them about it the

00:22:58,990 --> 00:23:02,500
minute I saw it pop up on the screen

00:23:00,429 --> 00:23:04,000
they made one get able to walk to it you

00:23:02,500 --> 00:23:06,309
actually get to turn around and look at

00:23:04,000 --> 00:23:08,410
things from all angles so it gave us a

00:23:06,309 --> 00:23:10,630
nice perspective see if you can figure

00:23:08,410 --> 00:23:12,400
out what that might be based on what you

00:23:10,630 --> 00:23:14,410
know about the respiratory system I got

00:23:12,400 --> 00:23:16,900
to see where the alveoli branched off

00:23:14,410 --> 00:23:19,120
and I can look inside them and see how

00:23:16,900 --> 00:23:22,860
everything works which I never saw

00:23:19,120 --> 00:23:22,860
before it was really really cool

00:23:23,140 --> 00:23:27,910
because spatial awareness is important

00:23:25,450 --> 00:23:30,250
the way things are relative to us how

00:23:27,910 --> 00:23:32,890
big they are how you walk around them in

00:23:30,250 --> 00:23:34,630
a space how we explore it Google does

00:23:32,890 --> 00:23:37,390
this really well in classrooms with a

00:23:34,630 --> 00:23:39,610
our expedition but we also live in a

00:23:37,390 --> 00:23:41,710
world that's 3d we live in a world

00:23:39,610 --> 00:23:43,679
that's in motion and a lot of people

00:23:41,710 --> 00:23:47,559
think of these experiences additive but

00:23:43,679 --> 00:23:50,500
static 2d is actually an abstraction of

00:23:47,559 --> 00:23:52,720
a three-dimensional world not being in

00:23:50,500 --> 00:23:55,660
motion is an abstraction from the way

00:23:52,720 --> 00:23:59,110
that your brain has actually adjusted to

00:23:55,660 --> 00:24:01,210
living in this reality so education

00:23:59,110 --> 00:24:03,070
isn't the only place where this 3d can

00:24:01,210 --> 00:24:05,169
be helpful if you need to understand a

00:24:03,070 --> 00:24:07,240
product or a site so if you need to work

00:24:05,169 --> 00:24:08,980
on something for an application you get

00:24:07,240 --> 00:24:11,290
a better sense of these products and

00:24:08,980 --> 00:24:12,850
what they might be like if we purchase

00:24:11,290 --> 00:24:16,510
them and we bought them in three

00:24:12,850 --> 00:24:19,660
dimensions than in two so we can explore

00:24:16,510 --> 00:24:21,280
these kinds of ideas and realities if we

00:24:19,660 --> 00:24:22,840
play around with these objects I get a

00:24:21,280 --> 00:24:25,030
better sense of what I'm getting into

00:24:22,840 --> 00:24:27,340
what I'm buying if I see it in three

00:24:25,030 --> 00:24:30,100
dimensions so we've talked about what we

00:24:27,340 --> 00:24:32,440
can do to break three and free of these

00:24:30,100 --> 00:24:35,169
two-dimensional interfaces what if we

00:24:32,440 --> 00:24:37,679
even break free of the regular input

00:24:35,169 --> 00:24:40,510
controls that we normally have as well

00:24:37,679 --> 00:24:42,429
so many years ago I hurt my wrist very

00:24:40,510 --> 00:24:44,140
badly and I had to actually learn to use

00:24:42,429 --> 00:24:46,150
the computer without touching the

00:24:44,140 --> 00:24:49,240
keyboard which was very very frustrating

00:24:46,150 --> 00:24:52,030
so what if I could guide the keyboard

00:24:49,240 --> 00:24:54,370
with my voice instead of having to use a

00:24:52,030 --> 00:24:57,820
keyboard or having to use those kind of

00:24:54,370 --> 00:25:00,850
inputs how how can we create hands-free

00:24:57,820 --> 00:25:03,100
experiences on the web so Microsoft has

00:25:00,850 --> 00:25:05,380
some machine learning capabilities

00:25:03,100 --> 00:25:07,299
called cognitive services that you can

00:25:05,380 --> 00:25:09,760
try out there's one called Lewis which

00:25:07,299 --> 00:25:11,380
is language understanding and you can

00:25:09,760 --> 00:25:13,600
use these things for free so I worked

00:25:11,380 --> 00:25:16,330
with a friend called Brian Holtz on this

00:25:13,600 --> 00:25:18,520
project where we did these voice control

00:25:16,330 --> 00:25:21,010
data visualizations so that people could

00:25:18,520 --> 00:25:23,740
see how they were feeling and basically

00:25:21,010 --> 00:25:26,280
adjust them without touching anything on

00:25:23,740 --> 00:25:26,280
the keyboard

00:25:27,940 --> 00:25:30,570
more

00:25:30,600 --> 00:25:36,770
so I said excited at first

00:25:34,080 --> 00:25:36,770
more

00:25:40,910 --> 00:25:43,750
nervous

00:25:47,980 --> 00:25:50,760
tipsy

00:25:51,480 --> 00:25:54,169
let's

00:25:54,309 --> 00:25:56,969
bless

00:25:59,060 --> 00:26:02,240
so here's a bird's-eye view of this

00:26:00,890 --> 00:26:04,280
application we have a bunch of

00:26:02,240 --> 00:26:05,870
components we have a view X store we

00:26:04,280 --> 00:26:08,360
have a bunch of Defense dependencies and

00:26:05,870 --> 00:26:11,030
we're going out with Axios to hit that

00:26:08,360 --> 00:26:12,560
Louis API so in the view X store we're

00:26:11,030 --> 00:26:14,300
gonna use a counter to adjust the

00:26:12,560 --> 00:26:16,700
visualization and we have placeholders

00:26:14,300 --> 00:26:18,830
for the intent and the intensity and we

00:26:16,700 --> 00:26:21,590
also hold a UI state for whether it's

00:26:18,830 --> 00:26:24,710
listening or whether it's fetching or

00:26:21,590 --> 00:26:26,840
whether it's idle you might also notice

00:26:24,710 --> 00:26:28,370
that at first we activated the UI to

00:26:26,840 --> 00:26:30,020
listen by hitting a button but we

00:26:28,370 --> 00:26:32,360
actually didn't have to do that we could

00:26:30,020 --> 00:26:33,860
just listen in continuously I just

00:26:32,360 --> 00:26:35,750
didn't want to refer a demo record

00:26:33,860 --> 00:26:37,700
people's voices without asking them

00:26:35,750 --> 00:26:40,190
permission but after that point we just

00:26:37,700 --> 00:26:42,200
listened continuously so you can see how

00:26:40,190 --> 00:26:44,480
we would do the recognition dot

00:26:42,200 --> 00:26:47,450
continuous dot true or false and we're

00:26:44,480 --> 00:26:50,330
also using this get understanding action

00:26:47,450 --> 00:26:53,180
as well so in get understanding we use

00:26:50,330 --> 00:26:54,950
Axios to post to Lewis to pass in our

00:26:53,180 --> 00:26:58,100
subscription key as well as the

00:26:54,950 --> 00:26:59,960
utterance it hears and here's what we're

00:26:58,100 --> 00:27:03,920
connecting to if we go into the Lewis

00:26:59,960 --> 00:27:05,660
interface we basically add these things

00:27:03,920 --> 00:27:08,270
by just saying create new intent and I

00:27:05,660 --> 00:27:10,490
am namespacing them by saying app comm

00:27:08,270 --> 00:27:13,040
app dot excited but I'm also saying

00:27:10,490 --> 00:27:14,480
intent or intensity less and more

00:27:13,040 --> 00:27:16,460
because I want to make sure that that

00:27:14,480 --> 00:27:17,900
first thing is different than the second

00:27:16,460 --> 00:27:19,760
thing that my emotions are different

00:27:17,900 --> 00:27:22,640
from the way that I'm controlling that

00:27:19,760 --> 00:27:23,930
intensity and if we jump into one of

00:27:22,640 --> 00:27:25,610
them this is how I'm training and I'm

00:27:23,930 --> 00:27:28,280
just basically giving it some synonyms

00:27:25,610 --> 00:27:30,470
but it then trains the machine learning

00:27:28,280 --> 00:27:32,120
algorithm it makes it understand okay I

00:27:30,470 --> 00:27:33,680
need things that are similar to comm I

00:27:32,120 --> 00:27:36,440
don't know why I use placid that's a

00:27:33,680 --> 00:27:39,680
really weird word but the model starts

00:27:36,440 --> 00:27:41,120
to learn by association so then once

00:27:39,680 --> 00:27:42,830
we've created the relationship between

00:27:41,120 --> 00:27:45,050
the store and the intent which is the

00:27:42,830 --> 00:27:47,240
emotion we're gonna adjust the intensity

00:27:45,050 --> 00:27:50,900
using the counter that we saw earlier

00:27:47,240 --> 00:27:53,030
with the phrases less and more now in

00:27:50,900 --> 00:27:54,650
the components themselves we're going to

00:27:53,030 --> 00:27:56,630
create a data visualization that you're

00:27:54,650 --> 00:27:58,280
seeing in this tiny window and basically

00:27:56,630 --> 00:28:00,350
what's happening here is I have a three

00:27:58,280 --> 00:28:02,360
J's object that I'm turning in space and

00:28:00,350 --> 00:28:04,280
then I'm taking it and I'm reflecting it

00:28:02,360 --> 00:28:06,800
around using this kind of kaleidoscope

00:28:04,280 --> 00:28:08,690
effect and then I'm also making sure

00:28:06,800 --> 00:28:10,940
that I can adjust it from the camera

00:28:08,690 --> 00:28:11,950
backwards and forwards to make it more

00:28:10,940 --> 00:28:15,100
or less a pain

00:28:11,950 --> 00:28:16,660
so this I also use buffer arrays for

00:28:15,100 --> 00:28:18,040
this if you're familiar with 3j s

00:28:16,660 --> 00:28:19,000
because they're much more even though

00:28:18,040 --> 00:28:20,350
they're harder to work with they're a

00:28:19,000 --> 00:28:23,200
little bit more performant if I have to

00:28:20,350 --> 00:28:25,270
tear things down and then reinstate them

00:28:23,200 --> 00:28:28,660
so we have several methods that were

00:28:25,270 --> 00:28:30,400
causing for this so you just wanted to

00:28:28,660 --> 00:28:32,050
call attention to how we're animating

00:28:30,400 --> 00:28:34,330
this we're using a request animation

00:28:32,050 --> 00:28:37,390
frame and we're increasing the rotation

00:28:34,330 --> 00:28:39,460
and rendering the scene but then we'll

00:28:37,390 --> 00:28:41,500
also use a watcher to plug into the

00:28:39,460 --> 00:28:43,480
reactivity system that view has under

00:28:41,500 --> 00:28:45,850
the hood and every time shape zoom

00:28:43,480 --> 00:28:49,030
changes so that intensity we're also

00:28:45,850 --> 00:28:51,370
going to change the counter for more and

00:28:49,030 --> 00:28:53,860
less utterances and we can recreate the

00:28:51,370 --> 00:28:56,050
shapes with a new zoom parameters and

00:28:53,860 --> 00:28:59,170
then readjust the animation and restart

00:28:56,050 --> 00:29:00,790
it so what you saw was the first step

00:28:59,170 --> 00:29:02,860
the next thing I'm going to do is hook

00:29:00,790 --> 00:29:04,840
it up to a muse headset that actually

00:29:02,860 --> 00:29:06,310
listens to your thoughts and then you

00:29:04,840 --> 00:29:07,990
don't have to touch the keyboard at all

00:29:06,310 --> 00:29:09,760
and you actually don't even have to say

00:29:07,990 --> 00:29:12,940
anything you can just think things and

00:29:09,760 --> 00:29:14,680
adjust that animation animation so now

00:29:12,940 --> 00:29:17,440
we can communicate with each other

00:29:14,680 --> 00:29:19,720
hands-free and guide animations on the

00:29:17,440 --> 00:29:22,810
web that also give us some feedback to

00:29:19,720 --> 00:29:24,700
how we're feeling that's really cool ok

00:29:22,810 --> 00:29:26,800
so we've already accomplished so much

00:29:24,700 --> 00:29:29,410
today and there's so much out there for

00:29:26,800 --> 00:29:32,140
us to play around with so why do I feel

00:29:29,410 --> 00:29:35,800
like as Jen Simmons puts it so

00:29:32,140 --> 00:29:38,800
eloquently that we're in a rut a rut

00:29:35,800 --> 00:29:42,160
shaped like this why are we still making

00:29:38,800 --> 00:29:45,400
static table based layouts on a web that

00:29:42,160 --> 00:29:47,170
has so much to offer for us and Jen's

00:29:45,400 --> 00:29:48,880
not the only one who noticed it this

00:29:47,170 --> 00:29:51,520
tweet resonated with a lot of people we

00:29:48,880 --> 00:29:53,530
make the same sites again and again and

00:29:51,520 --> 00:29:55,030
none of them are very memorable and

00:29:53,530 --> 00:29:56,890
remember what I mentioned earlier that

00:29:55,030 --> 00:30:00,250
emotions attached to the limbic system

00:29:56,890 --> 00:30:02,170
they make them easier to recall so your

00:30:00,250 --> 00:30:04,330
site is actually going to be more

00:30:02,170 --> 00:30:06,900
memorable if you stick out if you do

00:30:04,330 --> 00:30:09,450
something different from everybody else

00:30:06,900 --> 00:30:11,320
it's time for us to take up space

00:30:09,450 --> 00:30:12,580
hopefully some of the things that I

00:30:11,320 --> 00:30:14,770
showed you will become beautiful

00:30:12,580 --> 00:30:16,930
primitives in the web of tomorrow but I

00:30:14,770 --> 00:30:19,900
also built them using existing web

00:30:16,930 --> 00:30:22,510
technologies available to you today it's

00:30:19,900 --> 00:30:25,080
time to expand our minds beyond the

00:30:22,510 --> 00:30:27,570
rectangles of the past we all have room

00:30:25,080 --> 00:30:29,999
in our digital lives to take up space

00:30:27,570 --> 00:30:32,600
and as we noted before anything is

00:30:29,999 --> 00:30:36,869
possible so my question for you today is

00:30:32,600 --> 00:30:38,970
what are you gonna build how can you and

00:30:36,869 --> 00:30:41,129
your everyday the development life push

00:30:38,970 --> 00:30:42,809
the boundaries of what's available how

00:30:41,129 --> 00:30:45,119
can you create something that doesn't

00:30:42,809 --> 00:30:47,429
currently exist how can you make your

00:30:45,119 --> 00:30:49,230
dreams out of code and share it on the

00:30:47,429 --> 00:30:52,110
web because after all that's what the

00:30:49,230 --> 00:30:54,210
web is for it's for communicating and

00:30:52,110 --> 00:31:05,519
sharing

00:30:54,210 --> 00:31:05,519

YouTube URL: https://www.youtube.com/watch?v=hjgni3dXcVE


