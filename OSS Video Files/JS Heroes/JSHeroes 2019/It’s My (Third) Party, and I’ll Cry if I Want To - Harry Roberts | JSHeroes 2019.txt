Title: It’s My (Third) Party, and I’ll Cry if I Want To - Harry Roberts | JSHeroes 2019
Publication date: 2019-04-30
Playlist: JSHeroes 2019
Description: 
	Like it or not, a huge part of modern web development involves the use of third-party providers: fonts, analytics, ads, tracking, and more all have an impact of performance, and can leave us (or, more worryingly, our visitors) susceptible to performance degradation.

In this talk, we’ll take a look at unruly or uninvited (third-)party guests: how to detect them, how to audit them, and how to manage them. We’ll also look at the different tools available to help us stress-test and quantify the overhead these third parties bring, and what that means for users and businesses alike.
Captions: 
	00:00:00,070 --> 00:00:03,219
[Music]

00:00:14,050 --> 00:00:19,640
right this is a huge talk so I'm gonna

00:00:16,970 --> 00:00:22,040
have to go through it quite quickly I'm

00:00:19,640 --> 00:00:23,480
also quite aware that the slides may

00:00:22,040 --> 00:00:25,910
appear a little small for people at the

00:00:23,480 --> 00:00:27,200
back so in a second I've already got the

00:00:25,910 --> 00:00:29,690
slides online so if you want to follow

00:00:27,200 --> 00:00:32,750
along kind of a locally you can do but

00:00:29,690 --> 00:00:34,790
yes it's my third party and I'll cry if

00:00:32,750 --> 00:00:37,220
I want to and I will warn you I might

00:00:34,790 --> 00:00:38,900
cry at some point clearly because this

00:00:37,220 --> 00:00:42,050
talk is going to be half an hour about

00:00:38,900 --> 00:00:42,980
the trials tribulations the mess the

00:00:42,050 --> 00:00:45,590
minefield

00:00:42,980 --> 00:00:46,970
that it's third party performance I'm

00:00:45,590 --> 00:00:49,430
willing to bet you've all built a

00:00:46,970 --> 00:00:52,100
website before that users one if not

00:00:49,430 --> 00:00:54,320
several third parties and the reason we

00:00:52,100 --> 00:00:57,290
use third parties is probably because we

00:00:54,320 --> 00:00:59,989
lack the time money skills inclination

00:00:57,290 --> 00:01:01,640
to build our own web font hosting

00:00:59,989 --> 00:01:04,850
service to build our own analytics

00:01:01,640 --> 00:01:07,670
package so we tend to lean on third

00:01:04,850 --> 00:01:09,020
party providers for convenience but in

00:01:07,670 --> 00:01:10,700
using that convenience we actually

00:01:09,020 --> 00:01:12,979
relinquish a lot of control so what I

00:01:10,700 --> 00:01:14,869
want to talk about today is what control

00:01:12,979 --> 00:01:18,320
are we giving away how can we measure it

00:01:14,869 --> 00:01:19,549
and how can we defend against it if you

00:01:18,320 --> 00:01:21,470
want to snap a quick picture of this

00:01:19,549 --> 00:01:23,330
that is the slide deck already so if

00:01:21,470 --> 00:01:25,310
you're worried that the the slides might

00:01:23,330 --> 00:01:31,369
be a bit small please feel free to grab

00:01:25,310 --> 00:01:33,409
a copy of them if not I'll just start so

00:01:31,369 --> 00:01:35,659
my name is Harry I am from I'm from

00:01:33,409 --> 00:01:37,010
England from the north of England plates

00:01:35,659 --> 00:01:42,200
called Leeds which is like London but

00:01:37,010 --> 00:01:44,119
much nicer I'm a consultant performance

00:01:42,200 --> 00:01:46,400
engineer which basically means I make

00:01:44,119 --> 00:01:47,810
websites faster for my clients and I've

00:01:46,400 --> 00:01:50,180
had a really fortunate a very very

00:01:47,810 --> 00:01:52,610
fortunate career I've worked some really

00:01:50,180 --> 00:01:53,990
nice clients now pretty much everybody

00:01:52,610 --> 00:01:55,850
on this screen has had some kind of

00:01:53,990 --> 00:01:58,040
performance issue that I've helped them

00:01:55,850 --> 00:01:59,659
with and I would say over half of them

00:01:58,040 --> 00:02:01,640
have had performance issues with third

00:01:59,659 --> 00:02:03,799
parties so they're kind of the annoying

00:02:01,640 --> 00:02:05,150
frustrating thing there is it's not even

00:02:03,799 --> 00:02:07,430
their fault that they're slow right it's

00:02:05,150 --> 00:02:09,470
somebody else's fault it's my job to

00:02:07,430 --> 00:02:13,579
help clients identify and debug and

00:02:09,470 --> 00:02:15,110
ultimately mitigate this risk when I was

00:02:13,579 --> 00:02:18,470
preparing a talk about third-party

00:02:15,110 --> 00:02:20,090
performance my mind shot back 10 years

00:02:18,470 --> 00:02:20,959
now to a new story that came out of

00:02:20,090 --> 00:02:23,090
Australia

00:02:20,959 --> 00:02:25,730
and this new story there's so many

00:02:23,090 --> 00:02:27,050
striking parallels this new story deals

00:02:25,730 --> 00:02:30,590
with parties although

00:02:27,050 --> 00:02:33,170
third parties it deals with uninvited

00:02:30,590 --> 00:02:34,940
height house guests uninvited visitors

00:02:33,170 --> 00:02:36,710
and it deals with severe financial

00:02:34,940 --> 00:02:40,090
repercussions and all of those things

00:02:36,710 --> 00:02:40,090
are parallels to web performance

00:02:45,250 --> 00:02:51,890
apologies that's coming out of the

00:02:49,540 --> 00:02:58,070
that's coming up the line out that's the

00:02:51,890 --> 00:03:03,560
three point five I can't narrate this

00:02:58,070 --> 00:03:12,470
one either apologies everyone I'm is

00:03:03,560 --> 00:03:14,990
Troy it's the real-life risky business a

00:03:12,470 --> 00:03:16,610
teenager holds an alcohol-fueled party

00:03:14,990 --> 00:03:18,890
for hundreds of kids while his

00:03:16,610 --> 00:03:21,290
unsuspecting parents are on holiday

00:03:18,890 --> 00:03:23,030
sixteen year old Corey Worthington is

00:03:21,290 --> 00:03:25,580
now facing not only the wrath of mum and

00:03:23,030 --> 00:03:28,690
dad but a 20 thousand dollar fine from

00:03:25,580 --> 00:03:31,070
police I spoke to him a short time ago

00:03:28,690 --> 00:03:33,320
Corey thanks for joining us the only

00:03:31,070 --> 00:03:39,140
question that I can think to ask is what

00:03:33,320 --> 00:03:40,730
were you thinking I wasn't really did

00:03:39,140 --> 00:03:46,820
your parents say you could have a party

00:03:40,730 --> 00:03:48,050
um no so didn't why did you um I was

00:03:46,820 --> 00:03:49,700
just to get together with a couple mates

00:03:48,050 --> 00:03:51,290
at first and then we thought we might as

00:03:49,700 --> 00:03:54,080
well just have a bit of a party and then

00:03:51,290 --> 00:03:58,190
it sort of just got out of hand and yeah

00:03:54,080 --> 00:04:00,170
I hate that guy

00:03:58,190 --> 00:04:02,959
I hate that guys so much is so

00:04:00,170 --> 00:04:04,970
unapologetic but that last sentence it

00:04:02,959 --> 00:04:08,090
just out of hand like yeah no and

00:04:04,970 --> 00:04:09,260
it cost twenty grand just got out of

00:04:08,090 --> 00:04:10,940
hand but then that made me think of

00:04:09,260 --> 00:04:12,770
something else there's quite a parallel

00:04:10,940 --> 00:04:15,020
between it just getting out of hand at

00:04:12,770 --> 00:04:18,140
this party and in web performance in

00:04:15,020 --> 00:04:19,850
general nobody on purpose built a slow

00:04:18,140 --> 00:04:21,950
web site right it's usually an accident

00:04:19,850 --> 00:04:24,100
it's usually a lack of sort of holistic

00:04:21,950 --> 00:04:26,810
view of the project you're working on a

00:04:24,100 --> 00:04:28,790
client contacted me last year saying hey

00:04:26,810 --> 00:04:30,320
Harry we've got a problem with our site

00:04:28,790 --> 00:04:32,900
it feels a little bit slow and we think

00:04:30,320 --> 00:04:34,640
it might be down to third parties and I

00:04:32,900 --> 00:04:35,990
said to them like send it over there's

00:04:34,640 --> 00:04:37,850
nothing I haven't seen nothing scares me

00:04:35,990 --> 00:04:39,740
anymore send it over

00:04:37,850 --> 00:04:40,790
unfortunately this wouldn't did scare me

00:04:39,740 --> 00:04:43,280
because this that you can

00:04:40,790 --> 00:04:44,810
see right now in view on the screen this

00:04:43,280 --> 00:04:46,910
is what the developer had been building

00:04:44,810 --> 00:04:49,090
this is the webpage that they believed

00:04:46,910 --> 00:04:52,310
and indeed had spent their day building

00:04:49,090 --> 00:04:54,050
the problem is there's a disconnect once

00:04:52,310 --> 00:04:55,250
a site goes live it looks very very

00:04:54,050 --> 00:04:56,930
different to what it does

00:04:55,250 --> 00:04:58,940
locally your devil machine your dev

00:04:56,930 --> 00:05:00,380
environment is usually quite compact

00:04:58,940 --> 00:05:02,240
it's gonna be a fast machine running

00:05:00,380 --> 00:05:03,760
locally but also you won't have

00:05:02,240 --> 00:05:05,720
analytics running you won't be using

00:05:03,760 --> 00:05:08,600
retargeting you won't be using your tag

00:05:05,720 --> 00:05:09,890
managers or your a be testing tools soon

00:05:08,600 --> 00:05:11,570
as the tag manager kicks in and this

00:05:09,890 --> 00:05:15,050
site goes live it's a very very

00:05:11,570 --> 00:05:26,390
different beast o get comfortable it

00:05:15,050 --> 00:05:27,890
lasts for a while so indeed this green

00:05:26,390 --> 00:05:29,450
bit is what the developers had built

00:05:27,890 --> 00:05:30,680
this is what they did every day and they

00:05:29,450 --> 00:05:32,900
knew that they were doing a pretty good

00:05:30,680 --> 00:05:34,850
job of it but at some point the site

00:05:32,900 --> 00:05:37,100
goes live and a tag manager kicked in

00:05:34,850 --> 00:05:38,300
now can you all do me an honest favor

00:05:37,100 --> 00:05:40,430
can you just raise your hand if you're

00:05:38,300 --> 00:05:41,030
not sure exactly what tag manager is and

00:05:40,430 --> 00:05:43,820
I'll give you a really quick

00:05:41,030 --> 00:05:46,190
introduction ok that's that's most

00:05:43,820 --> 00:05:49,060
of you this is terrifying as in what I'm

00:05:46,190 --> 00:05:51,560
about to tell you will terrify you so I

00:05:49,060 --> 00:05:52,790
like to explain the problem via a kind

00:05:51,560 --> 00:05:55,400
of a scenario right so you're a

00:05:52,790 --> 00:05:57,170
developer you're at work and your client

00:05:55,400 --> 00:05:58,850
or your manager asks you to put

00:05:57,170 --> 00:06:00,830
analytics Google Analytics on the site

00:05:58,850 --> 00:06:02,630
so you copy and paste the snippet and

00:06:00,830 --> 00:06:04,280
you do that and then the next day

00:06:02,630 --> 00:06:06,260
somebody else in marketing asks you hey

00:06:04,280 --> 00:06:08,510
can you install Optimizely or can you

00:06:06,260 --> 00:06:10,550
install this this other thing and you

00:06:08,510 --> 00:06:12,980
say to them well I can but I'm kind of

00:06:10,550 --> 00:06:15,050
busy I'll put it on put it on JIRA I'll

00:06:12,980 --> 00:06:16,400
do it tomorrow and the marketing team

00:06:15,050 --> 00:06:17,990
gets a bit annoyed like it shouldn't

00:06:16,400 --> 00:06:20,600
take this long to install simple

00:06:17,990 --> 00:06:22,580
tracking script so somebody years ago

00:06:20,600 --> 00:06:24,140
invented a tool known as a tag manager

00:06:22,580 --> 00:06:27,110
and a tag manager is where the developer

00:06:24,140 --> 00:06:29,300
just installs one small javascript file

00:06:27,110 --> 00:06:31,820
now that talks to an admin interface

00:06:29,300 --> 00:06:33,770
Google tag manager Adobe tag manager are

00:06:31,820 --> 00:06:35,570
examples and this is where your

00:06:33,770 --> 00:06:37,940
marketing team log into an admin panel

00:06:35,570 --> 00:06:39,920
and they've got basically a WYSIWYG and

00:06:37,940 --> 00:06:41,660
they can copy and paste all the tracking

00:06:39,920 --> 00:06:43,630
scripts themselves so they can go to the

00:06:41,660 --> 00:06:45,680
you know the Google Analytics

00:06:43,630 --> 00:06:47,780
documentation site copy and paste the

00:06:45,680 --> 00:06:50,360
snippet paste it into this old WYSIWYG

00:06:47,780 --> 00:06:51,560
editor also what it could do is find a

00:06:50,360 --> 00:06:53,990
14-year old

00:06:51,560 --> 00:06:54,600
Stack Overflow answer and paste some

00:06:53,990 --> 00:06:56,340
JavaScript from

00:06:54,600 --> 00:06:59,160
and put that straight on me in the tag

00:06:56,340 --> 00:07:01,020
manager so a tag manager is a conduit to

00:06:59,160 --> 00:07:03,270
live environments right its production

00:07:01,020 --> 00:07:06,000
JavaScript it's not production quality

00:07:03,270 --> 00:07:08,490
JavaScript no way but it's a way of

00:07:06,000 --> 00:07:10,830
people usually marketing teams getting

00:07:08,490 --> 00:07:12,660
code onto a live environment while

00:07:10,830 --> 00:07:15,180
skipping the entire development process

00:07:12,660 --> 00:07:16,680
this is why engineers very rarely

00:07:15,180 --> 00:07:19,170
realized how severe the problem is

00:07:16,680 --> 00:07:21,000
because they haven't written 90% of that

00:07:19,170 --> 00:07:23,070
code it's been copied and pasted from

00:07:21,000 --> 00:07:25,320
around the web and deployed by our tag

00:07:23,070 --> 00:07:27,180
manager so yeah if you've got a tag

00:07:25,320 --> 00:07:28,680
manager running on your site that's

00:07:27,180 --> 00:07:31,110
probably why third parties get out of

00:07:28,680 --> 00:07:32,580
hand they're generally a good idea if

00:07:31,110 --> 00:07:34,290
they're well managed and well governed

00:07:32,580 --> 00:07:37,230
but when they aren't very well governed

00:07:34,290 --> 00:07:39,590
we do end up with this so I'm gonna

00:07:37,230 --> 00:07:42,800
split this talk into four key parts

00:07:39,590 --> 00:07:45,150
understand so what are the risks we face

00:07:42,800 --> 00:07:47,250
audit how do we measure the risks that

00:07:45,150 --> 00:07:49,530
we're facing how do we discuss those

00:07:47,250 --> 00:07:51,240
risks or the problems with third-party

00:07:49,530 --> 00:07:53,700
providers and indeed our own internal

00:07:51,240 --> 00:07:57,300
teams and finally mitigation how do we

00:07:53,700 --> 00:07:58,740
design around this stuff defensively so

00:07:57,300 --> 00:08:00,690
understand and when we talk about

00:07:58,740 --> 00:08:02,280
understanding I'm gonna start with the

00:08:00,690 --> 00:08:03,960
thing that I understand the least which

00:08:02,280 --> 00:08:05,520
is security right I'm not a security

00:08:03,960 --> 00:08:08,100
expert I'm not even a security novice

00:08:05,520 --> 00:08:10,830
really so we'll actually listen quite

00:08:08,100 --> 00:08:12,780
quickly if you're using third parties

00:08:10,830 --> 00:08:15,150
you're basically inviting somebody else

00:08:12,780 --> 00:08:17,400
onto your site right and a lot of that

00:08:15,150 --> 00:08:19,230
just is trust you have to trust that

00:08:17,400 --> 00:08:21,090
Google Analytics will continue to be an

00:08:19,230 --> 00:08:23,190
analytics tool and not start doing

00:08:21,090 --> 00:08:24,750
anything more shady you've got a trust

00:08:23,190 --> 00:08:26,610
that tight gate is only gonna send you a

00:08:24,750 --> 00:08:28,170
font and maybe not start sending you

00:08:26,610 --> 00:08:30,780
other things and selling data to you

00:08:28,170 --> 00:08:33,210
know other like more kind of nefarious

00:08:30,780 --> 00:08:35,520
third parties so when we look at

00:08:33,210 --> 00:08:37,800
security we want to be careful of things

00:08:35,520 --> 00:08:39,539
like linking to insecure origins right

00:08:37,800 --> 00:08:42,599
if you're running a secure site but your

00:08:39,539 --> 00:08:44,940
third party is insecure singer things as

00:08:42,599 --> 00:08:46,770
simple as mixed content warnings mixed

00:08:44,940 --> 00:08:48,330
content errors will start to erode

00:08:46,770 --> 00:08:50,070
consumer trust if you've got an

00:08:48,330 --> 00:08:51,030
e-commerce site and all of a sudden the

00:08:50,070 --> 00:08:52,980
chrome starts saying

00:08:51,030 --> 00:08:55,110
insecure people are going to put their

00:08:52,980 --> 00:08:57,480
credit card details in there if you're

00:08:55,110 --> 00:09:00,090
pulling insecure assets from insecure

00:08:57,480 --> 00:09:01,620
origins you could be successful to a

00:09:00,090 --> 00:09:03,810
man-in-the-middle that a third party

00:09:01,620 --> 00:09:05,880
asset could be compromised or the last

00:09:03,810 --> 00:09:06,500
point is maybe the third party isn't

00:09:05,880 --> 00:09:08,690
actually a

00:09:06,500 --> 00:09:10,460
answer at all maybe it's just us because

00:09:08,690 --> 00:09:11,720
kind of sleazy third party I've got an

00:09:10,460 --> 00:09:16,670
example of that in the next couple of

00:09:11,720 --> 00:09:18,170
slides so last year I went to Iceland to

00:09:16,670 --> 00:09:22,430
speak at an event I'd look really we're

00:09:18,170 --> 00:09:24,860
just staring over dev tools there and I

00:09:22,430 --> 00:09:27,020
always always always buy the in-flight

00:09:24,860 --> 00:09:28,430
Wi-Fi I can't believe we can fly

00:09:27,020 --> 00:09:30,470
full-stop right the fact we can get

00:09:28,430 --> 00:09:32,060
Internet up there I'm a mug

00:09:30,470 --> 00:09:34,730
I always pay for the Wi-Fi even if I

00:09:32,060 --> 00:09:36,470
don't need it this was a brief period

00:09:34,730 --> 00:09:38,840
where my site wasn't accessible either

00:09:36,470 --> 00:09:41,150
over a secure or an insecure connection

00:09:38,840 --> 00:09:42,530
it was a transitional period if I

00:09:41,150 --> 00:09:44,150
visited my site over an insecure

00:09:42,530 --> 00:09:46,250
connection you may know it's there just

00:09:44,150 --> 00:09:48,530
above the dev tools on the right was an

00:09:46,250 --> 00:09:50,090
Iceland aired banner this is a thing it

00:09:48,530 --> 00:09:52,250
would pop open periodically and tell me

00:09:50,090 --> 00:09:54,260
hey if you buy a coffee you get a free

00:09:52,250 --> 00:09:56,630
biscuit right and it's advertising to me

00:09:54,260 --> 00:09:58,190
I was getting man-in-the-middle now you

00:09:56,630 --> 00:09:59,870
won't be able to see this probably any

00:09:58,190 --> 00:10:02,030
back any further back than the first few

00:09:59,870 --> 00:10:05,540
rows but in the protocol column of dev

00:10:02,030 --> 00:10:07,400
tools I am being downgraded to an h 1.0

00:10:05,540 --> 00:10:11,990
connection they're proxy server runs an

00:10:07,400 --> 00:10:14,090
h 1.0 protocol right over a secure

00:10:11,990 --> 00:10:15,350
connection this site runs over h2 but

00:10:14,090 --> 00:10:16,750
being man in the middle was slowing me

00:10:15,350 --> 00:10:18,980
down

00:10:16,750 --> 00:10:20,780
YouTube this is a funny one what's

00:10:18,980 --> 00:10:23,720
actually not funny is funny as in pretty

00:10:20,780 --> 00:10:26,690
bad youtuber busted serving crypto

00:10:23,720 --> 00:10:28,220
mining ants last year youtubers recently

00:10:26,690 --> 00:10:30,110
caught displaying ads that covertly

00:10:28,220 --> 00:10:32,390
leech off visitors CPU and electricity

00:10:30,110 --> 00:10:35,000
in order to generate digital currency on

00:10:32,390 --> 00:10:36,590
behalf of anonymous attackers sometimes

00:10:35,000 --> 00:10:38,660
a third part is just a bit of a scumbag

00:10:36,590 --> 00:10:40,250
right now there's nothing to stop a

00:10:38,660 --> 00:10:42,070
third point you just deciding to do

00:10:40,250 --> 00:10:45,650
something different or sleazy or

00:10:42,070 --> 00:10:47,210
inappropriate on a user's device so at a

00:10:45,650 --> 00:10:49,100
minimum make sure you're pulling

00:10:47,210 --> 00:10:51,170
everything from secure origins don't use

00:10:49,100 --> 00:10:54,830
a third-party provider if they don't run

00:10:51,170 --> 00:10:57,470
secure origins a happy sort of side

00:10:54,830 --> 00:10:59,570
effect is the if we do run TLS

00:10:57,470 --> 00:11:03,230
everywhere we get access to platform

00:10:59,570 --> 00:11:05,840
specific features which only work over

00:11:03,230 --> 00:11:07,790
HTTPS so we can get h2 serviceworker and

00:11:05,840 --> 00:11:09,140
broccoli these only available over

00:11:07,790 --> 00:11:12,580
secure connections and these are all

00:11:09,140 --> 00:11:12,580
performance oriented features

00:11:12,640 --> 00:11:17,420
next thing to be aware of is delays it

00:11:15,830 --> 00:11:19,160
doesn't take me to tell a room full of

00:11:17,420 --> 00:11:20,070
Engineers that are on the web especially

00:11:19,160 --> 00:11:22,410
e-commerce

00:11:20,070 --> 00:11:24,870
time is money and any slow running third

00:11:22,410 --> 00:11:26,970
party or for even first party will leave

00:11:24,870 --> 00:11:28,590
you susceptible to losses in revenue

00:11:26,970 --> 00:11:32,730
engagement conversions whatever your

00:11:28,590 --> 00:11:34,890
KPIs are you're at risk the delays could

00:11:32,730 --> 00:11:36,000
be on the network between first and

00:11:34,890 --> 00:11:38,760
third party origins

00:11:36,000 --> 00:11:40,890
you know congested Network sort of low

00:11:38,760 --> 00:11:42,990
bandwidth whatever it whatever may be

00:11:40,890 --> 00:11:43,820
measured as it could be actually on the

00:11:42,990 --> 00:11:45,630
network

00:11:43,820 --> 00:11:48,600
there could be third party

00:11:45,630 --> 00:11:50,520
infrastructure problems maybe your CDN

00:11:48,600 --> 00:11:52,130
is being ddosed right or maybe they're

00:11:50,520 --> 00:11:54,150
having an outage maybe they've gone down

00:11:52,130 --> 00:11:56,100
and when we don't think about often

00:11:54,150 --> 00:11:58,200
enough is what if it's third party

00:11:56,100 --> 00:11:59,730
runtime cost what if the assets haven't

00:11:58,200 --> 00:12:04,140
been optimized what if the assets

00:11:59,730 --> 00:12:06,150
haven't been very well structured this

00:12:04,140 --> 00:12:08,250
next slide a little bit matter this is

00:12:06,150 --> 00:12:11,010
me quoting a client quoting a third

00:12:08,250 --> 00:12:12,900
party provider my client runs an

00:12:11,010 --> 00:12:15,930
e-commerce business and he was concerned

00:12:12,900 --> 00:12:17,670
that one of the third parties they were

00:12:15,930 --> 00:12:19,800
using was slowing them down

00:12:17,670 --> 00:12:21,690
so they got on a phone call my client

00:12:19,800 --> 00:12:23,130
ryan rang the third party provider to

00:12:21,690 --> 00:12:25,590
sort of say hey I think you're slowing

00:12:23,130 --> 00:12:27,930
us down but providing very naively

00:12:25,590 --> 00:12:30,180
responded there was zero performance

00:12:27,930 --> 00:12:32,430
overhead to using our synchronous script

00:12:30,180 --> 00:12:34,770
our typical response time is around 200

00:12:32,430 --> 00:12:37,170
milliseconds my first thought is um

00:12:34,770 --> 00:12:41,130
which one is it is it zero or is it 200

00:12:37,170 --> 00:12:43,050
milliseconds it cannot be both but 200

00:12:41,130 --> 00:12:43,920
milliseconds in web performance terms is

00:12:43,050 --> 00:12:45,690
eons

00:12:43,920 --> 00:12:49,470
that's what's unacceptable that's way

00:12:45,690 --> 00:12:51,840
too long a client of mine back in the UK

00:12:49,470 --> 00:12:54,420
train line we worked together on this

00:12:51,840 --> 00:12:57,060
project we found by reducing latency by

00:12:54,420 --> 00:12:59,280
just 300 milliseconds a customer's spent

00:12:57,060 --> 00:13:02,640
an extra eight point 1 million pounds

00:12:59,280 --> 00:13:04,320
every year so both right proportions

00:13:02,640 --> 00:13:06,210
cause like sorry sort of working it

00:13:04,320 --> 00:13:08,040
backwards 200 milliseconds would be

00:13:06,210 --> 00:13:11,640
worth five point four mil to this

00:13:08,040 --> 00:13:13,830
company for Moby fine 200 milliseconds

00:13:11,640 --> 00:13:15,360
would equate to increased revenues of

00:13:13,830 --> 00:13:17,340
three quarters of a million dollars a

00:13:15,360 --> 00:13:19,110
year so not quite eight point one Mel

00:13:17,340 --> 00:13:20,580
but it's a hell of a Christmas party

00:13:19,110 --> 00:13:22,950
isn't right with three quarters of a mil

00:13:20,580 --> 00:13:25,100
you wouldn't say no to that and this

00:13:22,950 --> 00:13:27,810
one's my favorites this is eye watering

00:13:25,100 --> 00:13:30,810
so Walmart for every 100 millisecond

00:13:27,810 --> 00:13:33,060
improvement in performance they saw up

00:13:30,810 --> 00:13:33,790
to a 1% increase in revenue so I did a

00:13:33,060 --> 00:13:36,480
bit of really

00:13:33,790 --> 00:13:40,510
sort of scrappy back of a napkin maths

00:13:36,480 --> 00:13:43,330
Walmart is so filthy rich that taking

00:13:40,510 --> 00:13:45,070
just there 2017 the e-commerce only

00:13:43,330 --> 00:13:48,850
revenues so not talking retail we're

00:13:45,070 --> 00:13:51,010
talking ecommerce only 200 millisecond

00:13:48,850 --> 00:13:53,500
increase in performance would be a 2

00:13:51,010 --> 00:13:56,080
percent increase in revenue and a 2%

00:13:53,500 --> 00:13:58,900
increase in EECOM only revenue for

00:13:56,080 --> 00:14:01,810
Walmart will be 230 million dollars a

00:13:58,900 --> 00:14:04,470
year so that 200 milliseconds didn't

00:14:01,810 --> 00:14:07,960
seem quite so innocent after all does it

00:14:04,470 --> 00:14:09,790
let's go one further let's imagine there

00:14:07,960 --> 00:14:11,710
isn't just simply a slowdown between

00:14:09,790 --> 00:14:13,360
first and third parties what if the

00:14:11,710 --> 00:14:14,650
third part is gone offline completely

00:14:13,360 --> 00:14:17,470
what if we've got a single point of

00:14:14,650 --> 00:14:19,210
failure this is when it gets really bad

00:14:17,470 --> 00:14:21,580
if you've got a synchronous third party

00:14:19,210 --> 00:14:24,160
script and they have an outage you are

00:14:21,580 --> 00:14:25,930
royally screwed this is a client of mine

00:14:24,160 --> 00:14:27,100
and again for people at the back this

00:14:25,930 --> 00:14:29,890
will be a little hard to make out but

00:14:27,100 --> 00:14:32,140
I'll try and talk through it client of

00:14:29,890 --> 00:14:34,000
mine Skye they're a big broadcaster in

00:14:32,140 --> 00:14:35,410
the UK so we just visited sky comm you

00:14:34,000 --> 00:14:37,780
can see in the address bar we've made a

00:14:35,410 --> 00:14:39,370
secure connection however in dev tools

00:14:37,780 --> 00:14:41,710
we've got a JavaScript file here that

00:14:39,370 --> 00:14:43,480
just says pending that's because this is

00:14:41,710 --> 00:14:45,340
the third-party JavaScript file on a

00:14:43,480 --> 00:14:47,530
domain that's suffering an outage now

00:14:45,340 --> 00:14:50,470
look at the title bar it just says the

00:14:47,530 --> 00:14:52,470
URL as a civilian as a regular Internet

00:14:50,470 --> 00:14:55,030
user this site just looks like it's down

00:14:52,470 --> 00:14:56,890
but the reason it looks to be down looks

00:14:55,030 --> 00:14:58,300
for not be working is because I'll make

00:14:56,890 --> 00:15:02,980
the text a little larger I think in a

00:14:58,300 --> 00:15:04,840
second we've got a third-party script

00:15:02,980 --> 00:15:06,730
here on a domain that is currently

00:15:04,840 --> 00:15:08,620
suffering an outage a Third Point your

00:15:06,730 --> 00:15:11,050
script is posits re it's synchronous

00:15:08,620 --> 00:15:13,090
script esparza blocking the pars I can't

00:15:11,050 --> 00:15:14,740
even reach the line 11 the pars I can't

00:15:13,090 --> 00:15:17,260
even read the content of the title tag

00:15:14,740 --> 00:15:19,420
we've got all the HTML on the pad on the

00:15:17,260 --> 00:15:22,390
on the device all the content is on the

00:15:19,420 --> 00:15:23,620
device but this synchronous third-party

00:15:22,390 --> 00:15:25,780
script that's having an outage is

00:15:23,620 --> 00:15:27,910
stopping the parser even reading the

00:15:25,780 --> 00:15:29,830
content of that title tag so pro tip

00:15:27,910 --> 00:15:32,470
make sure your title tags quite early in

00:15:29,830 --> 00:15:34,450
the head just to avoid this problem but

00:15:32,470 --> 00:15:35,680
look to a consumer to a regular user who

00:15:34,450 --> 00:15:38,530
doesn't know what dev tools is doesn't

00:15:35,680 --> 00:15:40,840
know what TP TTP timeout is this site is

00:15:38,530 --> 00:15:43,510
just basically down it's gonna remain

00:15:40,840 --> 00:15:44,980
down for 80 seconds because that's just

00:15:43,510 --> 00:15:47,350
how the browser works after about 80

00:15:44,980 --> 00:15:49,720
seconds what you will see is the

00:15:47,350 --> 00:15:52,240
just soft springs into life this is a

00:15:49,720 --> 00:15:54,520
TCP network timeout error and that is

00:15:52,240 --> 00:15:56,620
defined by your operating system so on a

00:15:54,520 --> 00:15:58,720
UNIX machine it's 80 seconds before the

00:15:56,620 --> 00:16:02,080
browser is like well yeah I'm gonna just

00:15:58,720 --> 00:16:04,030
move ahead and forget that file even

00:16:02,080 --> 00:16:05,440
existed on a Windows machine you're

00:16:04,030 --> 00:16:07,660
looking at 20 seconds so on a Windows

00:16:05,440 --> 00:16:09,250
machine it's a little more forgiving but

00:16:07,660 --> 00:16:10,630
we just showed a customer a blank page

00:16:09,250 --> 00:16:12,670
for 1.3 minutes

00:16:10,630 --> 00:16:13,510
no one's gonna wait around for 1.3

00:16:12,670 --> 00:16:14,950
minutes they're going to go to a

00:16:13,510 --> 00:16:18,910
competitor but you're not gonna bother

00:16:14,950 --> 00:16:21,160
don't not gonna wait for that now this

00:16:18,910 --> 00:16:22,870
problem isn't specific to JavaScript nor

00:16:21,160 --> 00:16:25,390
is it specific to Adobe tag manager if

00:16:22,870 --> 00:16:28,260
you link to link rel equals stylesheet

00:16:25,390 --> 00:16:31,330
fonts Google API comm which we all do if

00:16:28,260 --> 00:16:32,320
Google Fonts has an outage the exact

00:16:31,330 --> 00:16:34,480
same thing happens to us

00:16:32,320 --> 00:16:36,430
1.3 minute load times and for that 1.3

00:16:34,480 --> 00:16:39,780
minutes we can show nothing at all

00:16:36,430 --> 00:16:43,390
because CSS is a render blocking access

00:16:39,780 --> 00:16:44,950
so yeah outages are severe they don't

00:16:43,390 --> 00:16:49,060
happen very often but when they do they

00:16:44,950 --> 00:16:51,160
are critical so now we're understanding

00:16:49,060 --> 00:16:52,500
some of the risks that are posed like

00:16:51,160 --> 00:16:55,860
lot of revenue a lot of conversions

00:16:52,500 --> 00:16:58,780
outages delays etc had we measure it

00:16:55,860 --> 00:17:00,610
when I do performance audits I normally

00:16:58,780 --> 00:17:02,680
spend sort of five to ten days just

00:17:00,610 --> 00:17:04,360
auditing a site I will usually spend

00:17:02,680 --> 00:17:05,500
about half a day just doing third party

00:17:04,360 --> 00:17:08,440
stuff and I'll show you a quick

00:17:05,500 --> 00:17:10,270
introduction to that now the first thing

00:17:08,440 --> 00:17:12,100
I do is bring non-scientific I just get

00:17:10,270 --> 00:17:13,960
a rough idea of how bad the problem

00:17:12,100 --> 00:17:15,910
might be basically what I'm trying to

00:17:13,960 --> 00:17:18,820
work out is do we need to dedicate more

00:17:15,910 --> 00:17:20,050
time to third party auditing or not if

00:17:18,820 --> 00:17:21,430
you've got your phones handy I'd

00:17:20,050 --> 00:17:28,780
recommend taking a picture of this slide

00:17:21,430 --> 00:17:30,070
this is my one of my favorite tools so

00:17:28,780 --> 00:17:32,440
we're gonna come back to this request

00:17:30,070 --> 00:17:33,910
map got web perfect tools it's a really

00:17:32,440 --> 00:17:35,590
good way of getting an overview of all

00:17:33,910 --> 00:17:38,350
the different third-party assets coming

00:17:35,590 --> 00:17:40,270
from a particular page before I dive

00:17:38,350 --> 00:17:42,910
into this though my workflow is very

00:17:40,270 --> 00:17:44,620
specific to me I go off and run a web

00:17:42,910 --> 00:17:46,600
page test so if you haven't used web

00:17:44,620 --> 00:17:47,940
page test before I'd recommend this is

00:17:46,600 --> 00:17:50,080
your sort of weekend homework

00:17:47,940 --> 00:17:51,670
it'll just grab some stats about how a

00:17:50,080 --> 00:17:54,820
page loads and it'll give you a unique

00:17:51,670 --> 00:17:56,470
ID then you're gonna plug that ID into

00:17:54,820 --> 00:17:59,380
request map so you need to take that ID

00:17:56,470 --> 00:18:00,970
stick it into the URL and it gives you

00:17:59,380 --> 00:18:04,120
what me and my clients have loving

00:18:00,970 --> 00:18:06,309
named the jellyfish now what we're

00:18:04,120 --> 00:18:09,760
looking at here is a bit of very broad

00:18:06,309 --> 00:18:11,890
overview data vis the size of each blob

00:18:09,760 --> 00:18:14,980
or sorry let me rewind a little bit each

00:18:11,890 --> 00:18:16,510
blob represents a third-party domain the

00:18:14,980 --> 00:18:19,299
size of each blob represents the number

00:18:16,510 --> 00:18:21,309
of kilobytes from that domain the

00:18:19,299 --> 00:18:22,720
distance between the blobs represents

00:18:21,309 --> 00:18:25,030
the time to first byte between those

00:18:22,720 --> 00:18:26,770
domains so basically the latency and the

00:18:25,030 --> 00:18:28,720
thickness of the line between each blob

00:18:26,770 --> 00:18:30,400
represents the number of requests

00:18:28,720 --> 00:18:31,840
between those domains so you can get a

00:18:30,400 --> 00:18:33,010
really good overview of how many third

00:18:31,840 --> 00:18:34,559
parties you're using which are the

00:18:33,010 --> 00:18:37,510
biggest which are the most expensive

00:18:34,559 --> 00:18:39,039
this is great for non-technical parts of

00:18:37,510 --> 00:18:41,559
the business right so marketing teams

00:18:39,039 --> 00:18:43,030
etc it sounds pretty patronizing but I

00:18:41,559 --> 00:18:44,500
do feel like a good bit of data bisque

00:18:43,030 --> 00:18:46,870
and it's worth a thousand words right

00:18:44,500 --> 00:18:49,240
but as engineers we want access to the

00:18:46,870 --> 00:18:50,799
data which is lucky because bottom right

00:18:49,240 --> 00:18:53,409
hand side of this screen we've got

00:18:50,799 --> 00:18:55,419
access to the CSV it gives us a nice

00:18:53,409 --> 00:18:58,590
little spreadsheet of key information

00:18:55,419 --> 00:19:00,970
about each of those third party origins

00:18:58,590 --> 00:19:02,590
don't laugh at me I don't like much awk

00:19:00,970 --> 00:19:04,720
to be honest I don't think anybody

00:19:02,590 --> 00:19:06,190
writes much awk but I've managed to type

00:19:04,720 --> 00:19:09,100
until I got it's one line of it seems to

00:19:06,190 --> 00:19:10,960
work if you run this over the CSV it

00:19:09,100 --> 00:19:12,970
will pull out every single third party

00:19:10,960 --> 00:19:14,740
domain into a nice little list so you

00:19:12,970 --> 00:19:17,320
can just get a list of every third party

00:19:14,740 --> 00:19:19,900
domain that pages calling then we can go

00:19:17,320 --> 00:19:21,190
back to webpagetest this is why this why

00:19:19,900 --> 00:19:23,590
it's a key part of the up sort of the

00:19:21,190 --> 00:19:25,450
workflow webpagetest has got this really

00:19:23,590 --> 00:19:27,610
nice feature called block and you can

00:19:25,450 --> 00:19:29,440
paste a series of domains into this text

00:19:27,610 --> 00:19:30,760
area and what it will do is I'll rerun

00:19:29,440 --> 00:19:33,070
the test with all of those domains

00:19:30,760 --> 00:19:35,080
missing what I'm basically doing here is

00:19:33,070 --> 00:19:37,090
proxying the rough cost of all third

00:19:35,080 --> 00:19:38,860
parties do a test with all the third

00:19:37,090 --> 00:19:40,600
parties enabled do the same tests with

00:19:38,860 --> 00:19:42,340
all of them disabled show me the

00:19:40,600 --> 00:19:46,150
difference and it would block all of

00:19:42,340 --> 00:19:47,590
those requests I'll just pull this into

00:19:46,150 --> 00:19:49,690
a simple chart and I'll have this in

00:19:47,590 --> 00:19:51,130
myself kickoff meetings with clients and

00:19:49,690 --> 00:19:53,860
what we can see here this is the CNN

00:19:51,130 --> 00:19:56,020
homepage interestingly CNN is used for

00:19:53,860 --> 00:19:57,760
every single performance talk example so

00:19:56,020 --> 00:19:59,650
they should have the fastest website in

00:19:57,760 --> 00:20:02,260
the world but they don't so they're

00:19:59,650 --> 00:20:03,429
clearly not listening now what you can

00:20:02,260 --> 00:20:06,100
see here is the load time is

00:20:03,429 --> 00:20:08,140
dramatically affected by third parties

00:20:06,100 --> 00:20:10,120
right with the third parties present

00:20:08,140 --> 00:20:12,280
load time is pushed back finally nearly

00:20:10,120 --> 00:20:14,530
ten seconds now load time in and of

00:20:12,280 --> 00:20:16,840
itself isn't useful to customers users

00:20:14,530 --> 00:20:18,610
but if we've got any important events

00:20:16,840 --> 00:20:20,710
hanging off of the load event like our

00:20:18,610 --> 00:20:22,780
image lazy loader for example only boots

00:20:20,710 --> 00:20:24,340
after the load event is fired we've just

00:20:22,780 --> 00:20:27,100
pushed that back by more than twice as

00:20:24,340 --> 00:20:29,650
long as necessary however slightly more

00:20:27,100 --> 00:20:31,270
optimistically the Delta between start

00:20:29,650 --> 00:20:33,580
render and speed index before and after

00:20:31,270 --> 00:20:36,310
is quite slim what this tells me is that

00:20:33,580 --> 00:20:38,200
very roughly speaking not most of these

00:20:36,310 --> 00:20:39,370
third parties are not blocking first

00:20:38,200 --> 00:20:42,190
render so that's a little more

00:20:39,370 --> 00:20:44,650
optimistic however if we go and look at

00:20:42,190 --> 00:20:46,240
things like the number of requests the

00:20:44,650 --> 00:20:48,400
number of requests was reduced by a

00:20:46,240 --> 00:20:51,040
factor of four point two just by

00:20:48,400 --> 00:20:53,200
removing third parties now in a world of

00:20:51,040 --> 00:20:55,360
h2 and multiple domains request is

00:20:53,200 --> 00:20:57,460
becoming less and less important however

00:20:55,360 --> 00:20:59,770
on low powered devices basically

00:20:57,460 --> 00:21:01,990
Mobile's provisioning new TCP

00:20:59,770 --> 00:21:04,450
connections and doings of simultaneous

00:21:01,990 --> 00:21:07,570
DNS resolutions does come at a cost

00:21:04,450 --> 00:21:09,370
it has CPU cost it has battery cost so a

00:21:07,570 --> 00:21:12,130
third parties can actually run down a

00:21:09,370 --> 00:21:15,070
mobile mobile battery quite badly and

00:21:12,130 --> 00:21:17,140
then page weight so actual weight of the

00:21:15,070 --> 00:21:18,880
page before and after afterwards it was

00:21:17,140 --> 00:21:23,350
reduced by 2.7 times

00:21:18,880 --> 00:21:26,800
now for about or 6 days I'm part of the

00:21:23,350 --> 00:21:29,170
EU after the 12th of April and God knows

00:21:26,800 --> 00:21:31,510
what happens data roaming charges might

00:21:29,170 --> 00:21:33,400
kick back in and when I travel to well

00:21:31,510 --> 00:21:34,150
nearby we've got Serbia I was in Ukraine

00:21:33,400 --> 00:21:37,510
last week

00:21:34,150 --> 00:21:39,850
cost me 7 pounds 20 per megabyte if I

00:21:37,510 --> 00:21:42,070
use my data roaming 720 a megabyte I

00:21:39,850 --> 00:21:43,390
can't afford to use the Internet this

00:21:42,070 --> 00:21:46,390
difference here between before and after

00:21:43,390 --> 00:21:47,890
was 15 pounds if I'd have loaded the CNN

00:21:46,390 --> 00:21:49,540
home page with all the third parties

00:21:47,890 --> 00:21:52,090
turned on it would have cost me 15

00:21:49,540 --> 00:21:53,770
pounds more to view those third parties

00:21:52,090 --> 00:21:56,980
and that's just horrible that's that's

00:21:53,770 --> 00:21:59,200
sort of immoral if you ask me anyway um

00:21:56,980 --> 00:22:01,210
this is very extreme and non scientific

00:21:59,200 --> 00:22:02,440
so let's look at some more specific

00:22:01,210 --> 00:22:05,410
things we can look at a slightly more

00:22:02,440 --> 00:22:07,470
forensic so yeah let's go back to delays

00:22:05,410 --> 00:22:10,300
let's look at the delays problem again

00:22:07,470 --> 00:22:11,500
whenever we add a third party or audit

00:22:10,300 --> 00:22:13,600
third parties you need to ask what

00:22:11,500 --> 00:22:15,370
happens if Typekit is running slowly

00:22:13,600 --> 00:22:17,200
what happens if Google Analytics is

00:22:15,370 --> 00:22:19,330
running slowly a very important question

00:22:17,200 --> 00:22:20,370
to ask and thankfully a really simple

00:22:19,330 --> 00:22:23,320
question to answer

00:22:20,370 --> 00:22:25,090
um and we use a tool called Charles

00:22:23,320 --> 00:22:27,230
who's used Charles before transport sea

00:22:25,090 --> 00:22:29,690
of sweet like definitely a third

00:22:27,230 --> 00:22:31,160
those who haven't Charles is great it's

00:22:29,690 --> 00:22:33,050
free in the same way that sublime text

00:22:31,160 --> 00:22:34,280
is free if you know what I mean so I

00:22:33,050 --> 00:22:37,060
totally recommend getting hold of a

00:22:34,280 --> 00:22:41,450
coffee it's got this really wonderful

00:22:37,060 --> 00:22:44,360
throttling feature longer if I can yeah

00:22:41,450 --> 00:22:46,460
so throttle settings you can start to

00:22:44,360 --> 00:22:48,500
pinpoint specific origins to slow down

00:22:46,460 --> 00:22:49,370
Chrome's or throttling feature is

00:22:48,500 --> 00:22:51,170
alright

00:22:49,370 --> 00:22:54,350
but it will just throttle at entire tabs

00:22:51,170 --> 00:22:56,330
worth of requests with Charles you can

00:22:54,350 --> 00:22:58,310
actually start to run specific origins

00:22:56,330 --> 00:22:59,870
slowly so you can add google fonts to

00:22:58,310 --> 00:23:02,270
this you can add type get to this and

00:22:59,870 --> 00:23:05,900
run just that domain as if it's on a 2g

00:23:02,270 --> 00:23:07,670
connection again going a bit more severe

00:23:05,900 --> 00:23:10,070
what happens if a service goes down

00:23:07,670 --> 00:23:11,990
right what happens if Adobe tag manager

00:23:10,070 --> 00:23:14,360
goes down what happens if Google Fonts

00:23:11,990 --> 00:23:16,100
goes down again a very important

00:23:14,360 --> 00:23:19,240
question to ask and again thankfully

00:23:16,100 --> 00:23:21,770
quite a trivial questions answer

00:23:19,240 --> 00:23:23,990
webpagetest make available to as a black

00:23:21,770 --> 00:23:26,270
hole server don't visit this IP address

00:23:23,990 --> 00:23:28,880
in a browser it maps to black hole

00:23:26,270 --> 00:23:30,170
webpagetest.org and basically any

00:23:28,880 --> 00:23:32,540
traffic that goes through this IP

00:23:30,170 --> 00:23:34,010
address through this server just

00:23:32,540 --> 00:23:36,470
disappears it simulates a full-on

00:23:34,010 --> 00:23:38,810
network outage when I showed you this

00:23:36,470 --> 00:23:41,540
screenshot earlier Google Fonts hadn't

00:23:38,810 --> 00:23:42,560
actually gone down in fact I in fact I

00:23:41,540 --> 00:23:43,940
don't have time to go into it now but

00:23:42,560 --> 00:23:45,950
buy me a beer and I'll tell you some

00:23:43,940 --> 00:23:48,530
interesting statistics about Google

00:23:45,950 --> 00:23:49,940
Fonts but suffice to say in the sort of

00:23:48,530 --> 00:23:52,370
seven to eight years it's been running

00:23:49,940 --> 00:23:54,310
it's never had a single millisecond of

00:23:52,370 --> 00:23:56,660
outage it's got a hundred percent uptime

00:23:54,310 --> 00:23:59,770
but still it's worth auditing because if

00:23:56,660 --> 00:24:01,910
this does go bad it goes really bad

00:23:59,770 --> 00:24:03,380
missing files this one's often

00:24:01,910 --> 00:24:05,660
overlooked especially in the world of

00:24:03,380 --> 00:24:08,330
kind of fully client rendered JavaScript

00:24:05,660 --> 00:24:10,160
applications I've got a slightly

00:24:08,330 --> 00:24:12,050
controversial opinion and it probably

00:24:10,160 --> 00:24:14,420
won't be too controversial here at J's

00:24:12,050 --> 00:24:17,660
heroes but let's let's go for it

00:24:14,420 --> 00:24:19,760
a buddy of mine a few years ago said all

00:24:17,660 --> 00:24:21,530
of your users are non jeaious users

00:24:19,760 --> 00:24:23,240
while they're downloading your j/s and I

00:24:21,530 --> 00:24:25,040
completely agree with this every single

00:24:23,240 --> 00:24:27,080
user for at least a short period of a

00:24:25,040 --> 00:24:29,210
page-load life cycle doesn't have any

00:24:27,080 --> 00:24:30,920
JavaScript because until that JavaScript

00:24:29,210 --> 00:24:33,860
arrives successfully as pars and

00:24:30,920 --> 00:24:36,410
executed and runs their non JavaScript

00:24:33,860 --> 00:24:38,210
right now the controversial bit is this

00:24:36,410 --> 00:24:40,460
I don't think we should ever optimize

00:24:38,210 --> 00:24:41,779
for users who have disabled JavaScript

00:24:40,460 --> 00:24:43,159
if somebody has turned JavaScript off

00:24:41,779 --> 00:24:46,159
they knew what they were doing right and

00:24:43,159 --> 00:24:47,539
they opted into that 99.9% of the web

00:24:46,159 --> 00:24:49,249
will not work for somebody who's turned

00:24:47,539 --> 00:24:51,019
Java tripped off so it's kind of weird

00:24:49,249 --> 00:24:53,389
for those to go out of our way to make

00:24:51,019 --> 00:24:54,529
our site work for that although another

00:24:53,389 --> 00:24:56,899
way of looking at it because developers

00:24:54,529 --> 00:24:59,419
like statistics I can almost guarantee

00:24:56,899 --> 00:25:01,159
you have more ie6 users than non

00:24:59,419 --> 00:25:03,259
JavaScript users and you don't support

00:25:01,159 --> 00:25:04,509
ie6 anymore so statistically it'd be

00:25:03,259 --> 00:25:07,610
weird to support people who have turned

00:25:04,509 --> 00:25:10,100
Jas off on purpose very keen to stress

00:25:07,610 --> 00:25:11,210
on purpose there because what we should

00:25:10,100 --> 00:25:12,169
think about is how well does our

00:25:11,210 --> 00:25:14,869
JavaScript fail

00:25:12,169 --> 00:25:16,490
what happens if Jes fails to arrive what

00:25:14,869 --> 00:25:18,080
if it arrives but there's a fatal syntax

00:25:16,490 --> 00:25:19,970
error in it what happens if it goes

00:25:18,080 --> 00:25:22,580
wrong how gracefully do we handle that

00:25:19,970 --> 00:25:23,840
failure and you might think well this

00:25:22,580 --> 00:25:25,249
isn't going to happen or it's such an

00:25:23,840 --> 00:25:25,869
edge case it's it's probably never going

00:25:25,249 --> 00:25:28,309
to happen

00:25:25,869 --> 00:25:29,119
few years ago something fascinating like

00:25:28,309 --> 00:25:31,759
don't know those things where it's just

00:25:29,119 --> 00:25:34,610
a massive facepalm moment and t-mobile

00:25:31,759 --> 00:25:37,519
the cell provider broke the internet for

00:25:34,610 --> 00:25:39,590
hundreds of thousands of people most

00:25:37,519 --> 00:25:41,450
cell providers will proxy content you're

00:25:39,590 --> 00:25:43,700
browsing through their own servers and

00:25:41,450 --> 00:25:45,110
they will do optimizations for you they

00:25:43,700 --> 00:25:46,429
will look at an image and think oh this

00:25:45,110 --> 00:25:47,690
hasn't been optimized I'll optimize it

00:25:46,429 --> 00:25:49,580
for them and pass it on Oh

00:25:47,690 --> 00:25:52,009
this hasn't been gzip tiled gzip it for

00:25:49,580 --> 00:25:54,200
them and pass it on there minification

00:25:52,009 --> 00:25:56,720
script was a bit overzealous an open

00:25:54,200 --> 00:25:59,179
jQuery and found a stark comment slash

00:25:56,720 --> 00:26:01,100
star think wow someone hasn't the least

00:25:59,179 --> 00:26:02,749
of this comment I'll do it for them and

00:26:01,100 --> 00:26:04,730
it's not a deleting jQuery until it got

00:26:02,749 --> 00:26:06,259
to the closing comment except there was

00:26:04,730 --> 00:26:07,730
no closing comment because this was

00:26:06,259 --> 00:26:09,100
actually a string is a regex

00:26:07,730 --> 00:26:11,869
slash star was in a regular expression

00:26:09,100 --> 00:26:14,389
it never found a closing comment deleted

00:26:11,869 --> 00:26:15,799
two-thirds of jQuery G's its it sort of

00:26:14,389 --> 00:26:18,139
just at their hands thinking I've done a

00:26:15,799 --> 00:26:19,970
good job and sent off I mean yeah it was

00:26:18,139 --> 00:26:23,299
fast cuz it was only a third of jQuery

00:26:19,970 --> 00:26:24,889
left but it broke almost the entire

00:26:23,299 --> 00:26:29,119
internet for hundreds of thousands of

00:26:24,889 --> 00:26:31,100
t-mobile customers if you want to audit

00:26:29,119 --> 00:26:32,480
this and test for yourselves how roads

00:26:31,100 --> 00:26:33,889
that are how resilient your site is

00:26:32,480 --> 00:26:36,980
again modern tooling makes it very

00:26:33,889 --> 00:26:39,799
trivial find the asset you're interested

00:26:36,980 --> 00:26:40,669
in here we've got vendor J s right-click

00:26:39,799 --> 00:26:43,580
block

00:26:40,669 --> 00:26:46,580
request URL every subsequent refresh for

00:26:43,580 --> 00:26:48,440
this page will not request that asset

00:26:46,580 --> 00:26:51,409
and you can see what happens if anything

00:26:48,440 --> 00:26:52,879
has gone wrong with vendor J s me and my

00:26:51,409 --> 00:26:53,620
client soon realized that we didn't

00:26:52,879 --> 00:26:55,300
handle it very well

00:26:53,620 --> 00:26:57,460
we gave the customer an infinite loading

00:26:55,300 --> 00:27:00,190
spinner we can easily defensively

00:26:57,460 --> 00:27:02,620
program around this if the app hasn't

00:27:00,190 --> 00:27:03,850
booted after 10 seconds requested the

00:27:02,620 --> 00:27:05,620
user refreshes the page it's not

00:27:03,850 --> 00:27:09,070
graceful but it's slightly more graceful

00:27:05,620 --> 00:27:10,270
than this I'm gonna have to start

00:27:09,070 --> 00:27:13,540
hurrying acts I'm running low on time

00:27:10,270 --> 00:27:15,040
but run time cost what happens if there

00:27:13,540 --> 00:27:16,300
wasn't an outage what happens if there

00:27:15,040 --> 00:27:18,190
wasn't a delay what happens if your

00:27:16,300 --> 00:27:19,870
JavaScript did boot successfully and it

00:27:18,190 --> 00:27:23,770
is running but what happens if it's

00:27:19,870 --> 00:27:25,510
expensive what I tend to do here is in

00:27:23,770 --> 00:27:27,550
Chrome's dev tools I will run a

00:27:25,510 --> 00:27:29,530
performance profile and there's a little

00:27:27,550 --> 00:27:31,240
drawer that say summary if you look

00:27:29,530 --> 00:27:33,220
inside summary you can find a thing

00:27:31,240 --> 00:27:35,980
called bottom up and then group by

00:27:33,220 --> 00:27:37,750
domain and that will show me this now I

00:27:35,980 --> 00:27:39,790
can see which domain has their most

00:27:37,750 --> 00:27:41,380
runtime cost for this page this is a

00:27:39,790 --> 00:27:43,240
client rendered react application it

00:27:41,380 --> 00:27:45,820
makes complete sense that Sportsbet the

00:27:43,240 --> 00:27:48,520
IO is the most expensive the first party

00:27:45,820 --> 00:27:49,690
cut code is the most expensive that

00:27:48,520 --> 00:27:49,929
tells me that I don't have to worry too

00:27:49,690 --> 00:27:52,510
much

00:27:49,929 --> 00:27:55,059
although tag manager being 25% of the

00:27:52,510 --> 00:27:56,410
overhead is kind of concerning right so

00:27:55,059 --> 00:27:58,380
I want to investigate that why is tag

00:27:56,410 --> 00:28:01,840
manager 1/4 of the runtime cost

00:27:58,380 --> 00:28:03,309
let's do group by URL instead show me

00:28:01,840 --> 00:28:05,500
which individual engine excuse me

00:28:03,309 --> 00:28:07,540
individual file it turns out this

00:28:05,500 --> 00:28:10,690
clients tag manager is more expensive

00:28:07,540 --> 00:28:12,940
than all of react that's terrifying

00:28:10,690 --> 00:28:14,170
the runtime cost of this one tag manager

00:28:12,940 --> 00:28:15,790
which is only there for third-party

00:28:14,170 --> 00:28:19,240
stuff the user doesn't care about is

00:28:15,790 --> 00:28:20,380
more expensive than all of react this

00:28:19,240 --> 00:28:23,290
tells me that I need to have a look at

00:28:20,380 --> 00:28:24,910
this another nice thing here is we can

00:28:23,290 --> 00:28:27,190
scrub this view and have it update in

00:28:24,910 --> 00:28:29,920
real time and you'll see that for the

00:28:27,190 --> 00:28:32,160
initial first part of the page load

00:28:29,920 --> 00:28:35,380
lifecycle tag manager was taking

00:28:32,160 --> 00:28:37,330
majority of CPU cycles tag manager is

00:28:35,380 --> 00:28:39,640
getting run ahead of react ahead of the

00:28:37,330 --> 00:28:41,290
first party application so my simple fix

00:28:39,640 --> 00:28:43,510
there is we need to defer these third

00:28:41,290 --> 00:28:45,010
parties don't give CPU cycles away to

00:28:43,510 --> 00:28:48,730
your tag manager before you even start

00:28:45,010 --> 00:28:51,340
to boot your own application next bit is

00:28:48,730 --> 00:28:53,320
discuss this is the hardest bit of the

00:28:51,340 --> 00:28:54,910
whole process because everything we just

00:28:53,320 --> 00:28:56,260
looked at is a technical problem and

00:28:54,910 --> 00:28:58,660
technical problems have technical

00:28:56,260 --> 00:29:01,630
solutions discussing this with people is

00:28:58,660 --> 00:29:03,460
a lot harder because egos are involved

00:29:01,630 --> 00:29:05,140
people's livelihoods people's jobs you

00:29:03,460 --> 00:29:07,750
can't rock up to a marketing team and

00:29:05,140 --> 00:29:09,280
Satan hey everything you do

00:29:07,750 --> 00:29:11,800
every single day and your job makes this

00:29:09,280 --> 00:29:14,410
site a little bit worse they're not

00:29:11,800 --> 00:29:15,700
gonna like you for that but my job is

00:29:14,410 --> 00:29:18,220
are consultants I have a lot of those

00:29:15,700 --> 00:29:19,840
awkward difficult discussions and when I

00:29:18,220 --> 00:29:21,850
get all the time is it's a necessary

00:29:19,840 --> 00:29:23,320
evil we don't want to use this tag

00:29:21,850 --> 00:29:26,200
manager but we have to we don't want to

00:29:23,320 --> 00:29:28,120
use this but we have to I hate this this

00:29:26,200 --> 00:29:30,340
is so lazy because you need to really

00:29:28,120 --> 00:29:31,420
drill down as to what necessary and evil

00:29:30,340 --> 00:29:33,910
actually mean it's I mean they're as

00:29:31,420 --> 00:29:35,290
black and white as that very artsy that

00:29:33,910 --> 00:29:39,040
isn't it aside black and white and this

00:29:35,290 --> 00:29:41,200
is now black and white necessary right

00:29:39,040 --> 00:29:43,030
is Google Fonts necessary probably not

00:29:41,200 --> 00:29:45,970
it looks nice but we can deliver a

00:29:43,030 --> 00:29:48,280
product without a custom font is Google

00:29:45,970 --> 00:29:51,280
is Google Fonts evil absolutely not it's

00:29:48,280 --> 00:29:54,220
it's a font service as a crypto mining

00:29:51,280 --> 00:29:56,980
bit of software necessary not really is

00:29:54,220 --> 00:29:59,140
evil you better believe it so we need to

00:29:56,980 --> 00:30:01,360
drill down really which individual third

00:29:59,140 --> 00:30:02,860
parties do we need what do we need to

00:30:01,360 --> 00:30:04,660
run a successful business and you might

00:30:02,860 --> 00:30:06,670
find that analytics is necessary you

00:30:04,660 --> 00:30:07,840
can't improve what you can't measure but

00:30:06,670 --> 00:30:09,430
if you're measuring if you're capturing

00:30:07,840 --> 00:30:11,800
things that would make a customer

00:30:09,430 --> 00:30:13,390
uniquely identifiable maybe that is

00:30:11,800 --> 00:30:14,530
straying into the evil category so we

00:30:13,390 --> 00:30:17,850
need to drill down a little more

00:30:14,530 --> 00:30:17,850
rigorous with how we treat these things

00:30:17,880 --> 00:30:23,290
discussing with vendors discussing the

00:30:19,990 --> 00:30:25,750
third-party providers my biggest bit of

00:30:23,290 --> 00:30:27,460
advice here is double triple check that

00:30:25,750 --> 00:30:28,840
they are problematic before you get on

00:30:27,460 --> 00:30:30,250
the phone to them nothing more

00:30:28,840 --> 00:30:31,810
embarrassing and complaining to a

00:30:30,250 --> 00:30:33,670
third-party provider that they're slow

00:30:31,810 --> 00:30:35,890
only phlegm to tell you that you've

00:30:33,670 --> 00:30:38,170
implemented it wrong right so double

00:30:35,890 --> 00:30:39,700
triple check yourself for my hypothesis

00:30:38,170 --> 00:30:42,550
if you think the third party is running

00:30:39,700 --> 00:30:44,230
slowly they probably are gather the data

00:30:42,550 --> 00:30:46,120
make sure you've got a lot of data to

00:30:44,230 --> 00:30:48,550
prove the point do the before and afters

00:30:46,120 --> 00:30:50,200
capture the timeline traces and then

00:30:48,550 --> 00:30:52,540
thirdly will actually you let them know

00:30:50,200 --> 00:30:54,370
and remember off of monthly to two

00:30:52,540 --> 00:30:57,550
different ways you can get in touch with

00:30:54,370 --> 00:30:59,200
third-party providers it could be

00:30:57,550 --> 00:31:00,850
something as basic as a support ticket

00:30:59,200 --> 00:31:02,680
so you'll probably find Google Product

00:31:00,850 --> 00:31:04,600
Forums for sort of things like analytics

00:31:02,680 --> 00:31:06,190
if you spend a lot of money with that

00:31:04,600 --> 00:31:07,480
third-party provider there's every

00:31:06,190 --> 00:31:10,330
chance you can pick up the phone and

00:31:07,480 --> 00:31:12,610
speak to an Account Manager if it's a

00:31:10,330 --> 00:31:14,980
third-party dependency we look to a lot

00:31:12,610 --> 00:31:16,420
of that in the previous talk fix it

00:31:14,980 --> 00:31:19,660
yourself a lot of my job is going

00:31:16,420 --> 00:31:20,940
through open-source sort of dependencies

00:31:19,660 --> 00:31:22,290
of my clients and

00:31:20,940 --> 00:31:24,930
submit the practice to make things

00:31:22,290 --> 00:31:26,430
faster or smaller or more efficient and

00:31:24,930 --> 00:31:27,840
finally if all else fails take to

00:31:26,430 --> 00:31:30,900
Twitter because if it's on Twitter have

00:31:27,840 --> 00:31:32,880
people start to panic my ad provider I

00:31:30,900 --> 00:31:35,550
asked them to add rel equals now opener

00:31:32,880 --> 00:31:39,180
to their so their links about six weeks

00:31:35,550 --> 00:31:40,140
later had been deployed done DHL the

00:31:39,180 --> 00:31:41,970
delivery company we're running an

00:31:40,140 --> 00:31:44,520
application over an insecure connection

00:31:41,970 --> 00:31:45,840
asking for customer data I let them know

00:31:44,520 --> 00:31:49,310
how can you force this onto a secure

00:31:45,840 --> 00:31:51,180
connection about two weeks later done

00:31:49,310 --> 00:31:53,910
sometimes you get what are referred to

00:31:51,180 --> 00:31:55,320
as fourth fifth and sixth parties so

00:31:53,910 --> 00:31:58,230
your third party might use their own

00:31:55,320 --> 00:31:59,190
third parties low time don't know if

00:31:58,230 --> 00:32:01,080
that's how it's pronounced but never

00:31:59,190 --> 00:32:02,760
heard of them they're actually a fourth

00:32:01,080 --> 00:32:04,110
party right and I've never heard of them

00:32:02,760 --> 00:32:05,490
so I just found them on Twitter and said

00:32:04,110 --> 00:32:08,010
hey can you force this over a secure

00:32:05,490 --> 00:32:10,590
connection their CTO replied if you can

00:32:08,010 --> 00:32:13,050
panic the CEO at CTO well then right if

00:32:10,590 --> 00:32:14,370
they're listening and it yeah we're

00:32:13,050 --> 00:32:16,650
government will fix it we'll fix it so

00:32:14,370 --> 00:32:18,030
if all else fails take two kind of

00:32:16,650 --> 00:32:20,850
public channels just try and get in

00:32:18,030 --> 00:32:22,050
touch with them somehow I have

00:32:20,850 --> 00:32:23,820
technically gone over time so I'm gonna

00:32:22,050 --> 00:32:26,640
start speeding up I'm going quite fast

00:32:23,820 --> 00:32:28,050
already internal teams this is where I

00:32:26,640 --> 00:32:29,550
come in this is where I normally have

00:32:28,050 --> 00:32:30,990
these discussions with my clients and I

00:32:29,550 --> 00:32:32,820
have to sit with marketing and say to

00:32:30,990 --> 00:32:36,770
them you really need five tag managers

00:32:32,820 --> 00:32:39,510
or design teams why have we got 25 fonts

00:32:36,770 --> 00:32:41,310
the CSV we downloaded earlier this is

00:32:39,510 --> 00:32:44,070
gonna come back in use again that CSV

00:32:41,310 --> 00:32:46,260
file it's just a treasure trove of

00:32:44,070 --> 00:32:47,700
information I've got a spreadsheet

00:32:46,260 --> 00:32:49,680
because marketing teams love

00:32:47,700 --> 00:32:51,210
spreadsheets I'm yet to work out how to

00:32:49,680 --> 00:32:52,770
get this data into our PowerPoint

00:32:51,210 --> 00:32:57,300
because if I can give a marketing team a

00:32:52,770 --> 00:32:59,280
PowerPoint now what this is it's my

00:32:57,300 --> 00:33:01,250
sites third parties I don't use many

00:32:59,280 --> 00:33:03,510
third parties on my site but a

00:33:01,250 --> 00:33:05,730
yellow-orange II kind of color that

00:33:03,510 --> 00:33:08,040
represents duplicates there is more than

00:33:05,730 --> 00:33:10,680
one tag manager for example or more than

00:33:08,040 --> 00:33:13,260
one ad provider a red shows me severity

00:33:10,680 --> 00:33:14,160
from white completely white through to

00:33:13,260 --> 00:33:16,320
really dark red

00:33:14,160 --> 00:33:17,640
that's a gradiated who is the most

00:33:16,320 --> 00:33:20,390
expensive so you want to tackle

00:33:17,640 --> 00:33:23,610
duplicates and severe red first

00:33:20,390 --> 00:33:27,950
now with the CSV that the jelly-fish

00:33:23,610 --> 00:33:30,390
tool gave us you're going to file import

00:33:27,950 --> 00:33:32,490
this bit is oddly specific but it's a

00:33:30,390 --> 00:33:34,220
very key part of the workflow navigate

00:33:32,490 --> 00:33:35,919
to the CSV file that request

00:33:34,220 --> 00:33:38,990
gave you and here's the important bit

00:33:35,919 --> 00:33:40,549
replaced data selected cell when you do

00:33:38,990 --> 00:33:42,200
this yourself I'll make a I've got a

00:33:40,549 --> 00:33:44,929
copy of the spreadsheet as a template

00:33:42,200 --> 00:33:47,509
that you can have replaced data selected

00:33:44,929 --> 00:33:49,039
cell is imperative because it'll drop

00:33:47,509 --> 00:33:51,320
the new data over the existing

00:33:49,039 --> 00:33:53,090
conditional formatting and this is now

00:33:51,320 --> 00:33:55,940
what the CNN site looks like when we

00:33:53,090 --> 00:33:57,230
start to grade it there's a really

00:33:55,940 --> 00:33:59,240
important column here that I haven't

00:33:57,230 --> 00:34:02,210
discussed it's the last column column H

00:33:59,240 --> 00:34:03,289
and this just says notes because what

00:34:02,210 --> 00:34:04,970
we're gonna do now is we're gonna go to

00:34:03,289 --> 00:34:07,309
the marketing team or go to whoever's in

00:34:04,970 --> 00:34:09,919
charge of the tag manager or deploying

00:34:07,309 --> 00:34:11,179
these third parties and ask them it's

00:34:09,919 --> 00:34:13,310
really important at this point to ask

00:34:11,179 --> 00:34:14,810
don't tell' it could be quite tempting

00:34:13,310 --> 00:34:17,270
to rock up with this spreadsheet and say

00:34:14,810 --> 00:34:18,740
see all this I'm deleting that right

00:34:17,270 --> 00:34:21,260
that's not gonna work

00:34:18,740 --> 00:34:22,760
ask don't tell' so you want to do is we

00:34:21,260 --> 00:34:24,679
want to learn why people use things

00:34:22,760 --> 00:34:27,950
arrange a meeting and start gathering

00:34:24,679 --> 00:34:30,020
insights can you tell me why we use this

00:34:27,950 --> 00:34:31,909
which of these third part is a business

00:34:30,020 --> 00:34:34,129
critical there any third parties on this

00:34:31,909 --> 00:34:34,940
list we don't recognize that's a really

00:34:34,129 --> 00:34:36,710
good one because there's always

00:34:34,940 --> 00:34:39,589
something we've never heard of it will

00:34:36,710 --> 00:34:41,359
delete it then here is the spreadsheet

00:34:39,589 --> 00:34:43,760
if you want a copy of that please feel

00:34:41,359 --> 00:34:45,050
free I'm really sorry I am going

00:34:43,760 --> 00:34:47,869
overtime I'm just gonna wrap up the last

00:34:45,050 --> 00:34:52,099
part of the talk really quick questions

00:34:47,869 --> 00:34:53,839
we can do afterwards I guess mitigation

00:34:52,099 --> 00:34:55,970
how do we design around this how do we

00:34:53,839 --> 00:34:58,550
stop this becoming a problem it's all

00:34:55,970 --> 00:35:01,130
well and good identifying it but how do

00:34:58,550 --> 00:35:03,890
you actually solve the problem know just

00:35:01,130 --> 00:35:06,230
if we can do self host I see people all

00:35:03,890 --> 00:35:09,859
the time linking off to Mac CD ends

00:35:06,230 --> 00:35:11,839
bootstrap or coach jQuery com completely

00:35:09,859 --> 00:35:13,730
unnecessary don't do that self host

00:35:11,839 --> 00:35:15,950
absolutely everything you can

00:35:13,730 --> 00:35:17,720
don't leave critical assets on somebody

00:35:15,950 --> 00:35:19,910
else's infrastructure if you can self

00:35:17,720 --> 00:35:22,369
host a file absolutely bring it on to

00:35:19,910 --> 00:35:25,550
your own servers much safer much quicker

00:35:22,369 --> 00:35:28,220
so yeah where possible self host any

00:35:25,550 --> 00:35:29,900
critical assets where it isn't possible

00:35:28,220 --> 00:35:31,640
to self host them say it's a dynamic

00:35:29,900 --> 00:35:34,400
file like analytics that needs to be

00:35:31,640 --> 00:35:36,770
updated on the fly make sure you load

00:35:34,400 --> 00:35:38,569
everything asynchronously whatever

00:35:36,770 --> 00:35:40,430
asynchronous loading strategy the

00:35:38,569 --> 00:35:43,310
provider has given you make sure you

00:35:40,430 --> 00:35:45,200
utilize it if they haven't given you an

00:35:43,310 --> 00:35:45,619
asynchronous loading strategy that's a

00:35:45,200 --> 00:35:47,820
red flag

00:35:45,619 --> 00:35:49,710
I would be very very cautious of that

00:35:47,820 --> 00:35:51,540
party because they haven't considered

00:35:49,710 --> 00:35:55,950
what happens to me if they have an

00:35:51,540 --> 00:35:57,120
outage fixing the the sky tag manager

00:35:55,950 --> 00:35:59,430
problem was as simple as putting an

00:35:57,120 --> 00:36:02,040
async attribute on their load the page

00:35:59,430 --> 00:36:03,540
immediately bootstrap this sort of not

00:36:02,040 --> 00:36:07,730
lazily but you know off of the critical

00:36:03,540 --> 00:36:10,890
path much faster much more resilient

00:36:07,730 --> 00:36:12,720
resort hence so every third party origin

00:36:10,890 --> 00:36:16,740
we go to carries some kind of network

00:36:12,720 --> 00:36:18,090
overhead DNS TCP TLS on high latency

00:36:16,740 --> 00:36:20,070
connections that can get very very

00:36:18,090 --> 00:36:21,930
expensive but resort hints give us a way

00:36:20,070 --> 00:36:24,180
to pay that cost upfront off of the

00:36:21,930 --> 00:36:26,390
critical path

00:36:24,180 --> 00:36:28,560
what resort hints do is allow us to

00:36:26,390 --> 00:36:31,320
preemptively fetch or warm up

00:36:28,560 --> 00:36:33,240
connections so audit your pages font

00:36:31,320 --> 00:36:36,360
provider social media some analytics

00:36:33,240 --> 00:36:38,250
somewhere some ad networks and just pre

00:36:36,360 --> 00:36:41,400
connect those origins what this will do

00:36:38,250 --> 00:36:43,980
is it'll do the DNS TCP TLS ahead of

00:36:41,400 --> 00:36:46,440
schedule off of the critical path my

00:36:43,980 --> 00:36:47,880
site before implementing this we're

00:36:46,440 --> 00:36:50,130
paying this cost at the worst possible

00:36:47,880 --> 00:36:52,020
moment we're paying this cost just

00:36:50,130 --> 00:36:54,510
before we need the file and those delays

00:36:52,020 --> 00:36:57,150
will push everything back by enabling

00:36:54,510 --> 00:36:59,040
resource hints preconnect pay that cost

00:36:57,150 --> 00:37:00,470
upfront off of the critical path and

00:36:59,040 --> 00:37:03,090
it's no longer just in time

00:37:00,470 --> 00:37:05,730
key thing here it's only warm-up

00:37:03,090 --> 00:37:07,110
frequent significant unknown origins if

00:37:05,730 --> 00:37:10,080
anyone's to hear a really really weird

00:37:07,110 --> 00:37:14,630
story about dns in chrome by near beer

00:37:10,080 --> 00:37:16,950
and I'll tell you CSP anybody using CSP

00:37:14,630 --> 00:37:18,750
not enough of you is actually quite

00:37:16,950 --> 00:37:20,730
tricky to implement content security

00:37:18,750 --> 00:37:22,650
policy this allows me to whitelist

00:37:20,730 --> 00:37:25,770
domains and what kind of stuff they can

00:37:22,650 --> 00:37:27,930
send me so by default only the self

00:37:25,770 --> 00:37:29,880
domain is allowed to run things I will

00:37:27,930 --> 00:37:33,000
only accept images from image X and I'll

00:37:29,880 --> 00:37:34,950
only accept script from Google Analytics

00:37:33,000 --> 00:37:36,780
this means that image X whose meant to

00:37:34,950 --> 00:37:38,610
be my image provider can't all of a

00:37:36,780 --> 00:37:40,140
sudden start sending me JavaScript I

00:37:38,610 --> 00:37:42,360
don't want them to change what they're

00:37:40,140 --> 00:37:43,740
meant to be sending me support for this

00:37:42,360 --> 00:37:45,240
is really good so I would encourage you

00:37:43,740 --> 00:37:47,100
to look at implementing it it allows you

00:37:45,240 --> 00:37:47,520
to whitelist who can send you what kind

00:37:47,100 --> 00:37:49,860
of things

00:37:47,520 --> 00:37:51,840
I don't need my image profile image

00:37:49,860 --> 00:37:53,250
provider to be sending me JavaScript so

00:37:51,840 --> 00:37:57,930
therefore I can prevent them from doing

00:37:53,250 --> 00:38:00,090
so now work CSP content security policy

00:37:57,930 --> 00:38:01,500
tells me who can send what feature

00:38:00,090 --> 00:38:03,030
policy goes a step further

00:38:01,500 --> 00:38:05,990
tells me what they can do with that

00:38:03,030 --> 00:38:07,950
stuff so a good example of this might be

00:38:05,990 --> 00:38:10,980
nobody's allowed to also play anything

00:38:07,950 --> 00:38:12,300
only I can use geolocation and no one

00:38:10,980 --> 00:38:14,610
should be allowed to access the camera

00:38:12,300 --> 00:38:16,530
or the microphone so I might whitelist

00:38:14,610 --> 00:38:18,270
Google Analytics and say you can send me

00:38:16,530 --> 00:38:20,070
JavaScript but they can't all of a

00:38:18,270 --> 00:38:21,390
sudden sneakily change what their

00:38:20,070 --> 00:38:24,450
JavaScript does and use the microphone

00:38:21,390 --> 00:38:26,460
because I've prevented that future

00:38:24,450 --> 00:38:30,210
policy is very much in its infancy but

00:38:26,460 --> 00:38:33,740
it's worth being aware of SR I whose use

00:38:30,210 --> 00:38:36,090
of resource integrity ok very few

00:38:33,740 --> 00:38:39,570
responsible third parties should provide

00:38:36,090 --> 00:38:41,450
this for you jQuery CDN they do this for

00:38:39,570 --> 00:38:43,860
us already

00:38:41,450 --> 00:38:45,750
you'd get given a hash of the file

00:38:43,860 --> 00:38:47,880
you're expecting and at runtime the

00:38:45,750 --> 00:38:49,860
browser will check is the file you've

00:38:47,880 --> 00:38:52,230
been sent identical to the hash you were

00:38:49,860 --> 00:38:53,910
expecting to receive this means that if

00:38:52,230 --> 00:38:56,430
anyone was to hack or proxy or

00:38:53,910 --> 00:38:58,350
man-in-the-middle code jQuery and inject

00:38:56,430 --> 00:39:01,110
some nasty stuff on the end of jQuery

00:38:58,350 --> 00:39:02,820
mini is this hash will no longer match

00:39:01,110 --> 00:39:05,160
and you'll get a console error saying

00:39:02,820 --> 00:39:06,300
there was a violation now I know what

00:39:05,160 --> 00:39:08,400
you're thinking you're doing this at

00:39:06,300 --> 00:39:11,130
runtime sounds quite expensive the

00:39:08,400 --> 00:39:13,290
average cost for doing this sort of hash

00:39:11,130 --> 00:39:16,470
checking is around one millisecond so

00:39:13,290 --> 00:39:19,350
it's well well worth doing SSRI supports

00:39:16,470 --> 00:39:22,920
pretty good we're getting towards the

00:39:19,350 --> 00:39:24,870
end I promised a new spec priority hints

00:39:22,920 --> 00:39:26,880
allow us to indicate to the browser how

00:39:24,870 --> 00:39:29,160
important we believe a file is to the

00:39:26,880 --> 00:39:30,870
page it gives us a brand new attribute

00:39:29,160 --> 00:39:33,690
called importance and we can say

00:39:30,870 --> 00:39:36,810
our ads is of low importance download

00:39:33,690 --> 00:39:39,060
our app is with high importance download

00:39:36,810 --> 00:39:40,410
the ads doctors with low importance the

00:39:39,060 --> 00:39:41,760
good thing about this is you don't need

00:39:40,410 --> 00:39:43,920
to tell your marketing team you're doing

00:39:41,760 --> 00:39:46,170
this just start putting important flow

00:39:43,920 --> 00:39:48,750
on all of their scripts and you never

00:39:46,170 --> 00:39:50,700
need to tell them basically ok promise

00:39:48,750 --> 00:39:53,310
this is the last part of the talk

00:39:50,700 --> 00:39:55,110
promise promise promise the last tip I

00:39:53,310 --> 00:39:56,940
have got for you when it comes to

00:39:55,110 --> 00:39:59,310
defending and mitigating third-party

00:39:56,940 --> 00:40:01,380
performance issues is really really lazy

00:39:59,310 --> 00:40:05,820
and you're gonna hate me but it's just

00:40:01,380 --> 00:40:07,230
restraint get away by using as little as

00:40:05,820 --> 00:40:09,480
possible for as long as possible

00:40:07,230 --> 00:40:11,580
push back on your boss asking for 1/5

00:40:09,480 --> 00:40:12,990
analytics package talk your design team

00:40:11,580 --> 00:40:15,450
out of using a

00:40:12,990 --> 00:40:16,619
font provider try and get by with as

00:40:15,450 --> 00:40:18,780
little as possible for as long as

00:40:16,619 --> 00:40:20,490
possible and it makes all the previous a

00:40:18,780 --> 00:40:22,020
hundred and eleven slides of this talk

00:40:20,490 --> 00:40:24,390
completely unnecessary

00:40:22,020 --> 00:40:27,030
the biggest tool you've got in defending

00:40:24,390 --> 00:40:29,430
against third party issues is not using

00:40:27,030 --> 00:40:30,910
third parties thank you very much for

00:40:29,430 --> 00:40:32,350
listening you've been very patient

00:40:30,910 --> 00:40:34,050
[Applause]

00:40:32,350 --> 00:40:37,099
[Music]

00:40:34,050 --> 00:40:37,099

YouTube URL: https://www.youtube.com/watch?v=cOXl_q8JgjI


