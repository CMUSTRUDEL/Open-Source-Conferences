Title: Machine learning for front-end developers - Charlie Gerard | JSHeroes 2019
Publication date: 2019-04-27
Playlist: JSHeroes 2019
Description: 
	Machine learning can have some pretty complicated concepts to grasp if youâ€™re not a data scientist. However, recent developments in tooling make it more and more accessible for developers and people with little or no experience.

One of these advancements is the ability to now train and run machine learning algorithms and models in the browser, opening this world to front-end developers to learn and experiment.
Captions: 
	00:00:00,160 --> 00:00:17,800
[Music]

00:00:19,900 --> 00:00:23,740
so thanks a lot everybody for being here

00:00:21,640 --> 00:00:25,930
this morning and thanks Sarah for the

00:00:23,740 --> 00:00:27,430
introduction so yeah we're going to talk

00:00:25,930 --> 00:00:28,570
about today is machine learning for

00:00:27,430 --> 00:00:29,980
front-end devs

00:00:28,570 --> 00:00:32,590
I've already been introduced I'm gonna

00:00:29,980 --> 00:00:34,780
not gonna talk about me too much but I

00:00:32,590 --> 00:00:37,300
am yeah so my name is trihard I am a

00:00:34,780 --> 00:00:41,769
developer what is funny is that I'm also

00:00:37,300 --> 00:00:43,600
unemployed I mean I'm I'm in between

00:00:41,769 --> 00:00:45,160
jobs as well but it was quite way nice I

00:00:43,600 --> 00:00:47,890
come learn you know the web from an

00:00:45,160 --> 00:00:50,800
employed people yeah good concepts like

00:00:47,890 --> 00:00:53,290
unemployed come for us but outside of my

00:00:50,800 --> 00:00:54,940
job I'm also a Google death expert and

00:00:53,290 --> 00:00:56,140
Mozilla tech speaker so I know that

00:00:54,940 --> 00:00:57,159
there's a few other modular tech

00:00:56,140 --> 00:00:58,720
speakers around so if you have any

00:00:57,159 --> 00:01:01,210
question about these programs feel free

00:00:58,720 --> 00:01:02,470
to ask afterwards but one thing that

00:01:01,210 --> 00:01:04,360
wasn't mentioned and that is really

00:01:02,470 --> 00:01:06,040
actually important for this talk is that

00:01:04,360 --> 00:01:07,690
I am NOT an expert in machine learning

00:01:06,040 --> 00:01:08,950
so I know that talking about machining

00:01:07,690 --> 00:01:10,900
and coming here and say I actually don't

00:01:08,950 --> 00:01:12,430
know anything it's not like great way to

00:01:10,900 --> 00:01:15,190
start but I think it's interesting for

00:01:12,430 --> 00:01:17,110
two reasons first of all it means that I

00:01:15,190 --> 00:01:19,240
do all of this stuff outside of work on

00:01:17,110 --> 00:01:20,560
my own time and if I manage to actually

00:01:19,240 --> 00:01:21,219
understand a bit of it and build

00:01:20,560 --> 00:01:22,750
prototypes

00:01:21,219 --> 00:01:24,880
I'm hundred percent sure that anybody

00:01:22,750 --> 00:01:26,950
here can actually do that as well which

00:01:24,880 --> 00:01:28,299
is really exciting and second it means

00:01:26,950 --> 00:01:30,340
that as I don't have a background in

00:01:28,299 --> 00:01:32,439
data science I try to explain all of

00:01:30,340 --> 00:01:32,890
these concepts as you know clearly as

00:01:32,439 --> 00:01:34,960
possible

00:01:32,890 --> 00:01:37,329
so that as JavaScript air who actually

00:01:34,960 --> 00:01:39,460
can understand what's going on the

00:01:37,329 --> 00:01:40,929
slides are already available online if

00:01:39,460 --> 00:01:42,670
you want to check it maybe because

00:01:40,929 --> 00:01:44,920
people at the back might not read the

00:01:42,670 --> 00:01:46,810
code samples really well but I also will

00:01:44,920 --> 00:01:48,399
share them on Twitter later on so I

00:01:46,810 --> 00:01:49,149
haven't actually started the talk so you

00:01:48,399 --> 00:01:51,490
don't know if you're gonna be interested

00:01:49,149 --> 00:01:53,859
but I will share it later on Twitter if

00:01:51,490 --> 00:01:56,189
you want to have a look so let's dive

00:01:53,859 --> 00:01:58,539
into it what is machine learning

00:01:56,189 --> 00:02:00,039
obviously I don't know what you know or

00:01:58,539 --> 00:02:01,539
don't know so I wanted to start with a

00:02:00,039 --> 00:02:03,490
really simple example to put everybody

00:02:01,539 --> 00:02:05,950
on the same base so that the rest of the

00:02:03,490 --> 00:02:07,539
talk will make sense hopefully so if we

00:02:05,950 --> 00:02:09,970
think about an example of trying to

00:02:07,539 --> 00:02:11,650
recognize spam emails I can you know

00:02:09,970 --> 00:02:13,480
safely assume that we all receive spam

00:02:11,650 --> 00:02:15,910
emails and if we think about a way to

00:02:13,480 --> 00:02:17,890
deal with our problem without thinking

00:02:15,910 --> 00:02:19,270
about machine learning so when we

00:02:17,890 --> 00:02:21,970
receive spam emails they usually contain

00:02:19,270 --> 00:02:23,860
certain words like you know viagra or

00:02:21,970 --> 00:02:25,269
lottery or like you want millions of

00:02:23,860 --> 00:02:26,230
dollars you know usually that's not what

00:02:25,269 --> 00:02:29,020
goes in you're normally

00:02:26,230 --> 00:02:30,370
that good in this famine and if we think

00:02:29,020 --> 00:02:32,019
about solving that problem in the

00:02:30,370 --> 00:02:34,209
traditional way we might have a list of

00:02:32,019 --> 00:02:36,190
words that we kind of assume are gonna

00:02:34,209 --> 00:02:37,269
be in spam emails and when we receive a

00:02:36,190 --> 00:02:39,430
new email we might gotta check the

00:02:37,269 --> 00:02:41,440
content and if you receive via ground

00:02:39,430 --> 00:02:42,790
you know then I mean maybe put it on the

00:02:41,440 --> 00:02:45,459
spam I don't know what you go for but um

00:02:42,790 --> 00:02:47,860
and this is where my sharing can

00:02:45,459 --> 00:02:49,360
actually help using a lot of data from

00:02:47,860 --> 00:02:50,800
previous emails that we have received

00:02:49,360 --> 00:02:52,330
knowing the ones that are spam and the

00:02:50,800 --> 00:02:54,640
one that are not spam we can actually

00:02:52,330 --> 00:02:56,290
use algorithms to create models that

00:02:54,640 --> 00:02:58,930
we'll be able to learn patterns from

00:02:56,290 --> 00:03:00,940
emails and getting a new email it will

00:02:58,930 --> 00:03:02,769
be able to classify it directly like

00:03:00,940 --> 00:03:06,099
automatically if it go if it should go

00:03:02,769 --> 00:03:07,599
in the spam box or the normal inbox so

00:03:06,099 --> 00:03:09,340
this is basically like the definition of

00:03:07,599 --> 00:03:11,470
machine learning is like using

00:03:09,340 --> 00:03:13,329
algorithms letting computers learn from

00:03:11,470 --> 00:03:16,269
data and predict things without telling

00:03:13,329 --> 00:03:18,190
you exactly what to look for so at the

00:03:16,269 --> 00:03:20,920
core of machining models are algorithms

00:03:18,190 --> 00:03:22,890
so let's dive into that so here are a

00:03:20,920 --> 00:03:25,360
few examples of different algorithms

00:03:22,890 --> 00:03:28,060
it's only five there's a lot more out

00:03:25,360 --> 00:03:29,349
there but if you start looking into into

00:03:28,060 --> 00:03:30,609
machine learning doing tutorials or

00:03:29,349 --> 00:03:32,530
watching videos you will probably hear

00:03:30,609 --> 00:03:34,690
about a few of them like knife base or a

00:03:32,530 --> 00:03:37,120
K nearest neighbor these ones are kind

00:03:34,690 --> 00:03:39,220
of like well-known and they're all good

00:03:37,120 --> 00:03:40,959
at fixing like solving different

00:03:39,220 --> 00:03:42,400
problems so before us thinking about

00:03:40,959 --> 00:03:43,480
which I can lean you want to use you

00:03:42,400 --> 00:03:45,430
might actually think about what type of

00:03:43,480 --> 00:03:47,889
problem you're trying to solve so let's

00:03:45,430 --> 00:03:49,540
look at these ones instead so in machine

00:03:47,889 --> 00:03:50,829
learning you have three main problems

00:03:49,540 --> 00:03:52,420
that you can solve you have supervised

00:03:50,829 --> 00:03:54,130
learning unsupervised learning and

00:03:52,420 --> 00:03:55,840
reinforcement learning you might also

00:03:54,130 --> 00:03:56,829
hear about semi-supervised but it's kind

00:03:55,840 --> 00:03:58,170
of like between supervised and

00:03:56,829 --> 00:04:00,910
unsupervised so I didn't talk about it

00:03:58,170 --> 00:04:02,980
but in this particular presentation

00:04:00,910 --> 00:04:04,690
we're just going to cover supervised and

00:04:02,980 --> 00:04:06,040
unsupervised first of all because I only

00:04:04,690 --> 00:04:07,540
have half an hour so that's really short

00:04:06,040 --> 00:04:09,700
amount of time to explain everything

00:04:07,540 --> 00:04:10,930
but also because most of the time if you

00:04:09,700 --> 00:04:13,420
want to build something at work or on

00:04:10,930 --> 00:04:15,250
the side it is really is I mean it's

00:04:13,420 --> 00:04:17,889
usually fits into an supervised program

00:04:15,250 --> 00:04:20,139
or unsupervised so let's talk about what

00:04:17,889 --> 00:04:22,270
supervised is so you create a predictive

00:04:20,139 --> 00:04:24,220
model based on a set of features and

00:04:22,270 --> 00:04:26,020
labels and there's three important

00:04:24,220 --> 00:04:28,450
things in this definition so what is a

00:04:26,020 --> 00:04:30,400
model and what are features and labels

00:04:28,450 --> 00:04:32,349
so if this I mean if this definition

00:04:30,400 --> 00:04:33,700
doesn't really make sense it's good to

00:04:32,349 --> 00:04:35,140
start with an example and a classic

00:04:33,700 --> 00:04:38,979
example of supervised learning problem

00:04:35,140 --> 00:04:40,120
is predicting the price of a house let's

00:04:38,979 --> 00:04:41,620
say you that you have a house

00:04:40,120 --> 00:04:42,910
and you want to sell it and you don't

00:04:41,620 --> 00:04:45,760
know exactly how much you should go for

00:04:42,910 --> 00:04:47,440
so if you have data of all the houses in

00:04:45,760 --> 00:04:49,780
the market your labels are going to be

00:04:47,440 --> 00:04:51,490
how you classify each entry in this data

00:04:49,780 --> 00:04:53,530
set it would be the price because what

00:04:51,490 --> 00:04:55,270
you're trying to actually predict is the

00:04:53,530 --> 00:04:57,460
price that will be your labels in your

00:04:55,270 --> 00:04:59,139
data set and the features would be the

00:04:57,460 --> 00:05:01,030
characteristics of the entries in your

00:04:59,139 --> 00:05:03,070
data set so in terms of houses it would

00:05:01,030 --> 00:05:04,630
be the number of rooms windows floors

00:05:03,070 --> 00:05:06,580
does it have a garden which neighborhood

00:05:04,630 --> 00:05:08,650
it's in and stuff like that and using

00:05:06,580 --> 00:05:11,440
this data set split between features and

00:05:08,650 --> 00:05:13,479
labels you can use algorithms to learn

00:05:11,440 --> 00:05:14,770
kind of like the correlation between the

00:05:13,479 --> 00:05:16,630
characteristics of the house and how

00:05:14,770 --> 00:05:18,970
much it goes for and create a predictive

00:05:16,630 --> 00:05:20,710
model and the model is going to be a

00:05:18,970 --> 00:05:22,300
mathematical representation of the

00:05:20,710 --> 00:05:23,470
outcome of your training so it's going

00:05:22,300 --> 00:05:25,479
to be kind of like it's kind of like a

00:05:23,470 --> 00:05:26,740
function that takes as parameters the

00:05:25,479 --> 00:05:28,750
new features of a house it's never seen

00:05:26,740 --> 00:05:31,300
before and from what it's learned from

00:05:28,750 --> 00:05:33,039
previous data is being able to predict a

00:05:31,300 --> 00:05:34,330
label as an output so you'll be able to

00:05:33,039 --> 00:05:36,490
kind of have a price that your house

00:05:34,330 --> 00:05:38,830
should go for based on what the rest of

00:05:36,490 --> 00:05:40,690
the data from the market so this is for

00:05:38,830 --> 00:05:42,400
supervised but then you have

00:05:40,690 --> 00:05:43,930
unsupervised and the difference is is

00:05:42,400 --> 00:05:46,300
that the ability to create predictions

00:05:43,930 --> 00:05:48,250
but only based on a set of features and

00:05:46,300 --> 00:05:49,900
the end of that definition is really is

00:05:48,250 --> 00:05:51,190
really like important because it will

00:05:49,900 --> 00:05:53,410
really define the type of problems that

00:05:51,190 --> 00:05:57,520
you're solving and an example of that is

00:05:53,410 --> 00:05:59,410
predicting customer behavior so in

00:05:57,520 --> 00:06:01,210
unsupervised learning what usually try

00:05:59,410 --> 00:06:02,919
to do is cluster things together so

00:06:01,210 --> 00:06:04,479
you're not trying to predict really a

00:06:02,919 --> 00:06:05,830
label as an output you're trying to

00:06:04,479 --> 00:06:08,080
group things together to understand

00:06:05,830 --> 00:06:09,820
patterns of behavior depending on what

00:06:08,080 --> 00:06:12,430
you buy you will fit into a different

00:06:09,820 --> 00:06:14,349
type of category of people and looking

00:06:12,430 --> 00:06:16,060
at buying patterns of people who are

00:06:14,349 --> 00:06:17,800
like you they don't know exactly what to

00:06:16,060 --> 00:06:19,120
recommend you next or what to send you

00:06:17,800 --> 00:06:20,080
advertising for they can predict what

00:06:19,120 --> 00:06:21,970
you're going to what you're going to buy

00:06:20,080 --> 00:06:25,360
in the future and they can target you

00:06:21,970 --> 00:06:26,800
more easily so these two examples of

00:06:25,360 --> 00:06:29,169
predicting the price of a house and

00:06:26,800 --> 00:06:30,099
predicting customer behavior it might

00:06:29,169 --> 00:06:31,780
not be something that you're super

00:06:30,099 --> 00:06:33,430
interested in but that's actually a lot

00:06:31,780 --> 00:06:34,780
that can be done with machine learning

00:06:33,430 --> 00:06:36,610
it's not only kind of like data

00:06:34,780 --> 00:06:38,710
crunching so let's talk a little bit

00:06:36,610 --> 00:06:39,729
about applications I put together a list

00:06:38,710 --> 00:06:40,930
of things that I thought were

00:06:39,729 --> 00:06:42,849
interesting that I found when I was

00:06:40,930 --> 00:06:44,110
researching there's obviously a lot more

00:06:42,849 --> 00:06:46,960
I wish I could do an entire talk just

00:06:44,110 --> 00:06:47,830
with examples but um the first one I'm

00:06:46,960 --> 00:06:49,840
going to talk about is something

00:06:47,830 --> 00:06:51,039
actually started Reznor a field so I

00:06:49,840 --> 00:06:53,360
feel weird I'm gonna explain to Sarah

00:06:51,039 --> 00:06:55,849
watch your documents planing

00:06:53,360 --> 00:06:57,469
but so I mean well I'm gonna just

00:06:55,849 --> 00:07:00,050
explain quickly and I guess if you want

00:06:57,469 --> 00:07:02,000
more information I think better but

00:07:00,050 --> 00:07:03,919
using image recognition detecting WA is

00:07:02,000 --> 00:07:05,750
on image and being able to dynamically

00:07:03,919 --> 00:07:07,460
generate the text that should be in an

00:07:05,750 --> 00:07:08,030
alt tag when you build websites so I

00:07:07,460 --> 00:07:10,879
thought that was quite interesting

00:07:08,030 --> 00:07:12,500
because you couldn't it automatic like

00:07:10,879 --> 00:07:14,870
dynamically set up some process when you

00:07:12,500 --> 00:07:17,629
build websites but not only there's a

00:07:14,870 --> 00:07:20,000
few recently actually so this example so

00:07:17,629 --> 00:07:21,979
not-safe-for-work GS where it uses as

00:07:20,000 --> 00:07:23,659
well image recognition to see what's on

00:07:21,979 --> 00:07:25,039
an image uploaded and if it contained

00:07:23,659 --> 00:07:27,020
kind of sensitive topic it blurs the

00:07:25,039 --> 00:07:28,069
image out I thought it was awesome

00:07:27,020 --> 00:07:30,469
because I used to work in advertising

00:07:28,069 --> 00:07:32,659
and sometimes you create competitions

00:07:30,469 --> 00:07:33,919
where people have to upload photos based

00:07:32,659 --> 00:07:35,629
on like a brief and then you select the

00:07:33,919 --> 00:07:36,860
winner and the thing is that you never

00:07:35,629 --> 00:07:38,779
know what people are gonna upload and

00:07:36,860 --> 00:07:40,279
I'm sure that sometimes you know you

00:07:38,779 --> 00:07:41,629
might have some weird stuff and you

00:07:40,279 --> 00:07:43,340
could use machine learning to kind of

00:07:41,629 --> 00:07:45,229
have a pre filtering step instead of

00:07:43,340 --> 00:07:47,629
having to do everything manually so I

00:07:45,229 --> 00:07:48,680
thought it was pretty interesting but

00:07:47,629 --> 00:07:50,960
then you also have really interesting

00:07:48,680 --> 00:07:52,909
thing for accessibility for example so

00:07:50,960 --> 00:07:53,900
I'm not gonna pronounce the name of this

00:07:52,909 --> 00:07:55,729
guy because I think I would do it

00:07:53,900 --> 00:07:57,949
terribly but I put the link if you wanna

00:07:55,729 --> 00:07:59,779
read his blog post and so he was talking

00:07:57,949 --> 00:08:02,210
about how if the future of interactions

00:07:59,779 --> 00:08:03,800
are voice interactions what about if you

00:08:02,210 --> 00:08:05,990
can't speak you know what about for the

00:08:03,800 --> 00:08:08,210
for the people who actually can't

00:08:05,990 --> 00:08:09,560
interact but I kind of interfaces so he

00:08:08,210 --> 00:08:12,229
used machine learning and the webcam

00:08:09,560 --> 00:08:14,150
feed to actually train algorithms to

00:08:12,229 --> 00:08:15,949
create a model that would recognize some

00:08:14,150 --> 00:08:18,080
gestures and map that to words so he

00:08:15,949 --> 00:08:20,509
could actually interact with Alexa with

00:08:18,080 --> 00:08:22,219
sign language and to me that really is

00:08:20,509 --> 00:08:23,750
one of the examples that can show that

00:08:22,219 --> 00:08:26,569
technology and machine learning can make

00:08:23,750 --> 00:08:27,770
some people's lives a lot better but

00:08:26,569 --> 00:08:29,300
then you still have exciting things like

00:08:27,770 --> 00:08:30,800
games so this one is not a web-based

00:08:29,300 --> 00:08:32,659
game but I thought the idea was just

00:08:30,800 --> 00:08:34,579
amazing it being able to train a machine

00:08:32,659 --> 00:08:36,409
learning algorithm to recognize some

00:08:34,579 --> 00:08:37,940
gestures and being able to play multiple

00:08:36,409 --> 00:08:39,409
combat with your actual body rather than

00:08:37,940 --> 00:08:41,269
just being restricted to your keyboard

00:08:39,409 --> 00:08:43,130
or a controller which I always found

00:08:41,269 --> 00:08:44,899
quite a natural innovate ship so you

00:08:43,130 --> 00:08:48,829
could be a lot more immersed in the game

00:08:44,899 --> 00:08:50,600
by playing with your own movements so we

00:08:48,829 --> 00:08:52,130
can see that machine learning is a lot

00:08:50,600 --> 00:08:53,360
more I mean I find it a lot more

00:08:52,130 --> 00:08:54,949
exciting than just you know for a

00:08:53,360 --> 00:08:56,839
detection or something like that and it

00:08:54,949 --> 00:08:58,310
can even be used for things like art so

00:08:56,839 --> 00:08:59,690
I don't know if you saw this example but

00:08:58,310 --> 00:09:01,880
I think it was about six months ago it

00:08:59,690 --> 00:09:04,399
was over the news because this painting

00:09:01,880 --> 00:09:06,259
was generated with machine learning

00:09:04,399 --> 00:09:09,049
algorithm so a group of

00:09:06,259 --> 00:09:11,419
people actually cloned in our repo from

00:09:09,049 --> 00:09:13,399
github like kind of like rainy generated

00:09:11,419 --> 00:09:15,410
this painting and it went for more than

00:09:13,399 --> 00:09:17,540
four hundred thousand US dollars and I

00:09:15,410 --> 00:09:19,309
was like wow I mean like in this all I

00:09:17,540 --> 00:09:20,749
have to do then you know like no wonder

00:09:19,309 --> 00:09:22,970
I'm unemployed I just do that you know

00:09:20,749 --> 00:09:24,169
like sell art but I thought it was

00:09:22,970 --> 00:09:25,819
really interesting because even if you

00:09:24,169 --> 00:09:27,769
don't really like art it started

00:09:25,819 --> 00:09:29,419
creating some discussions around is it

00:09:27,769 --> 00:09:31,910
really art if you use machine learning

00:09:29,419 --> 00:09:33,229
and if it is art then who's the artist

00:09:31,910 --> 00:09:34,669
this is the person who wrote the

00:09:33,229 --> 00:09:36,799
algorithm is it the person who thought

00:09:34,669 --> 00:09:39,619
about using the algorithm for art is it

00:09:36,799 --> 00:09:41,509
is it the computer but it's kind of like

00:09:39,619 --> 00:09:42,859
I'd really like the type of

00:09:41,509 --> 00:09:45,019
conversations that machine learning I've

00:09:42,859 --> 00:09:47,029
been creating but we are ideas heroes so

00:09:45,019 --> 00:09:48,109
let's go back to JavaScript first of all

00:09:47,029 --> 00:09:49,669
why would you want to do it in

00:09:48,109 --> 00:09:51,289
JavaScript so one of the things that I'm

00:09:49,669 --> 00:09:53,329
the most excited about is that it's

00:09:51,289 --> 00:09:55,789
accessible and there is a really an

00:09:53,329 --> 00:09:58,939
easier learning curve if you are

00:09:55,789 --> 00:10:00,049
interested and you're just a web dev the

00:09:58,939 --> 00:10:01,699
fact that sometimes you have to learn a

00:10:00,049 --> 00:10:03,679
new language like Python might actually

00:10:01,699 --> 00:10:05,149
block you from even a trying which is a

00:10:03,679 --> 00:10:08,179
shame because I think it's a topic

00:10:05,149 --> 00:10:09,559
that's really interesting and knowing

00:10:08,179 --> 00:10:11,119
that there are some frameworks that you

00:10:09,559 --> 00:10:12,259
can already use in JavaScript it means

00:10:11,119 --> 00:10:14,149
that it will be the same thing that you

00:10:12,259 --> 00:10:16,129
do on your normal job like for example

00:10:14,149 --> 00:10:17,119
if you decide to migrate from reactor to

00:10:16,129 --> 00:10:18,259
view then you read the view

00:10:17,119 --> 00:10:19,970
documentation and you build a website

00:10:18,259 --> 00:10:21,439
and it's the same thing with things like

00:10:19,970 --> 00:10:23,269
tensorflow JS you read the documentation

00:10:21,439 --> 00:10:24,529
you might have to learn a few concepts

00:10:23,269 --> 00:10:26,980
but at least the language already know

00:10:24,529 --> 00:10:29,389
it's just about learning the framework

00:10:26,980 --> 00:10:30,589
secondly rapid prototyping so there's a

00:10:29,389 --> 00:10:32,600
lot of the things that I do on my

00:10:30,589 --> 00:10:34,699
personal time I come up with some kind

00:10:32,600 --> 00:10:35,989
of like ideas and knowing that I can

00:10:34,699 --> 00:10:37,579
just spin something quickly in

00:10:35,989 --> 00:10:39,769
JavaScript just to validate that what I

00:10:37,579 --> 00:10:40,999
want to do is possible is really really

00:10:39,769 --> 00:10:42,049
interesting to me and if you want if you

00:10:40,999 --> 00:10:43,459
have an idea in machine learning and

00:10:42,049 --> 00:10:45,079
just want to convince somebody that is

00:10:43,459 --> 00:10:46,369
possible you can just do something in

00:10:45,079 --> 00:10:48,139
JavaScript in a few hours or a few days

00:10:46,369 --> 00:10:50,720
and then move on to something more

00:10:48,139 --> 00:10:52,639
robust if you want and then finally I

00:10:50,720 --> 00:10:54,439
really like the ecosystem that's run

00:10:52,639 --> 00:10:56,209
much churning in JavaScript as well you

00:10:54,439 --> 00:10:58,100
have some many frameworks we also have

00:10:56,209 --> 00:11:00,859
people trying to build frameworks that

00:10:58,100 --> 00:11:02,239
can you like that get you started a lot

00:11:00,859 --> 00:11:03,259
faster and also you have a lot of

00:11:02,239 --> 00:11:05,359
different modules you have people

00:11:03,259 --> 00:11:07,369
porting Python algorithms written in

00:11:05,359 --> 00:11:09,649
Python to JavaScript so I think it's so

00:11:07,369 --> 00:11:12,679
cool like time to actually get started

00:11:09,649 --> 00:11:14,659
with it but what can you actually do so

00:11:12,679 --> 00:11:16,519
you can import an existing pre-trained

00:11:14,659 --> 00:11:18,350
model so a model that can solve a

00:11:16,519 --> 00:11:20,550
specific problem already trained with a

00:11:18,350 --> 00:11:22,260
set of data you can also

00:11:20,550 --> 00:11:24,060
we train an important model what we call

00:11:22,260 --> 00:11:25,620
transfer learning so you start with an

00:11:24,060 --> 00:11:27,450
important model but then you add it you

00:11:25,620 --> 00:11:28,470
know own custom examples on top of it

00:11:27,450 --> 00:11:30,839
and you just leverage where the

00:11:28,470 --> 00:11:33,029
algorithm was built for and finally you

00:11:30,839 --> 00:11:36,209
can define train and run models entirely

00:11:33,029 --> 00:11:37,920
in the browser in terms of tools you

00:11:36,209 --> 00:11:39,630
might I mean that's really like small

00:11:37,920 --> 00:11:41,670
sample as well but you don't have tensor

00:11:39,630 --> 00:11:43,290
produce which is the main one we also

00:11:41,670 --> 00:11:45,029
have ml five that's a little bit less

00:11:43,290 --> 00:11:46,829
well-known but sometimes it's easier to

00:11:45,029 --> 00:11:48,450
get started with it because tensorflow

00:11:46,829 --> 00:11:51,300
has some concepts that are a bit hard to

00:11:48,450 --> 00:11:52,680
understand and ml five tries to abstract

00:11:51,300 --> 00:11:54,810
that so you can just get started quickly

00:11:52,680 --> 00:11:56,310
some of the documentation for ml five is

00:11:54,810 --> 00:11:59,040
not finished yet so they're building it

00:11:56,310 --> 00:12:00,630
as they go but there are still quite a

00:11:59,040 --> 00:12:02,279
few things that you can do and then you

00:12:00,630 --> 00:12:03,029
have more specialized frameworks like

00:12:02,279 --> 00:12:05,190
the one in the middle

00:12:03,029 --> 00:12:07,140
magenta J's which is for machine

00:12:05,190 --> 00:12:08,220
learning and creating music so that's

00:12:07,140 --> 00:12:09,540
quite interesting and then of course you

00:12:08,220 --> 00:12:14,730
have the cloud API is that you can use

00:12:09,540 --> 00:12:17,040
as well to get started so demo time so I

00:12:14,730 --> 00:12:20,279
built a demo for each of the things that

00:12:17,040 --> 00:12:23,990
you can do in the browser okay so let's

00:12:20,279 --> 00:12:23,990
start with using a pre trained model

00:12:26,160 --> 00:12:31,549
[Music]

00:12:34,250 --> 00:12:38,700
okay so this thing that I built here

00:12:36,600 --> 00:12:41,100
that's one of the most recent thing that

00:12:38,700 --> 00:12:42,630
I built and it was to use machine

00:12:41,100 --> 00:12:44,640
learning to recognize an object in the

00:12:42,630 --> 00:12:46,380
camera feed and help you know if you

00:12:44,640 --> 00:12:47,880
should recycle it in the yellow bean and

00:12:46,380 --> 00:12:49,740
the red bean so I don't know about

00:12:47,880 --> 00:12:51,720
Romania I don't know what kind of pins

00:12:49,740 --> 00:12:53,459
you have been in Australia the yellow

00:12:51,720 --> 00:13:02,010
one is for recycling and the red one is

00:12:53,459 --> 00:13:05,100
for the general garbage okay so alright

00:13:02,010 --> 00:13:07,470
so it was supposed to be a mobile

00:13:05,100 --> 00:13:09,000
experiment so well it's responsive but

00:13:07,470 --> 00:13:10,740
you can't really so that button says is

00:13:09,000 --> 00:13:12,570
this recyclable and I'm getting out of

00:13:10,740 --> 00:13:16,079
the video feed because it'd still be

00:13:12,570 --> 00:13:17,730
dumb so if soon as it sees my arm it's

00:13:16,079 --> 00:13:19,410
gonna think that this is a person I mean

00:13:17,730 --> 00:13:21,120
like I'm a person but this is not what I

00:13:19,410 --> 00:13:27,209
wanted to see so if I say is this

00:13:21,120 --> 00:13:31,250
recyclable oh is it a bottle yes me put

00:13:27,209 --> 00:13:31,250
in a yellow bean yeah all right so

00:13:31,680 --> 00:13:41,930
I need to stop I really hate that and

00:13:37,439 --> 00:13:45,259
and I just closed my presentation well

00:13:41,930 --> 00:13:51,290
that is awesome

00:13:45,259 --> 00:13:54,920
all right well let me just start again I

00:13:51,290 --> 00:13:57,179
was right yeah

00:13:54,920 --> 00:13:58,470
so let me show you the code sample to do

00:13:57,179 --> 00:14:00,569
this one so as I said I used the pre

00:13:58,470 --> 00:14:02,490
train model so the first two lines I use

00:14:00,569 --> 00:14:03,929
the model called Coco SSD which is an

00:14:02,490 --> 00:14:06,209
object detection model and I also

00:14:03,929 --> 00:14:08,879
imported tensorflow then you just load

00:14:06,209 --> 00:14:10,949
your model in your application you get

00:14:08,879 --> 00:14:12,959
the pixels from the webcam so you get

00:14:10,949 --> 00:14:15,360
the video element and then using some of

00:14:12,959 --> 00:14:17,069
tensorflow methods you read the pixels

00:14:15,360 --> 00:14:19,199
and you kind of just shape it to the way

00:14:17,069 --> 00:14:21,509
that the model is expecting it and then

00:14:19,199 --> 00:14:23,100
finally you run you kind of add the

00:14:21,509 --> 00:14:24,809
oldest data to your model and you detect

00:14:23,100 --> 00:14:27,209
and you get a prediction so in terms of

00:14:24,809 --> 00:14:29,129
just image recognition that's it like

00:14:27,209 --> 00:14:30,629
there might be maybe a line or two more

00:14:29,129 --> 00:14:32,100
because it's just code simple but in

00:14:30,629 --> 00:14:34,379
just just the machine learning part of

00:14:32,100 --> 00:14:35,819
the app like that's it and I felt like I

00:14:34,379 --> 00:14:37,709
did nothing the rest of the application

00:14:35,819 --> 00:14:38,970
to put it in like yellow beam or write

00:14:37,709 --> 00:14:40,559
BNE small normal software engineering

00:14:38,970 --> 00:14:42,089
where you build a list of what you know

00:14:40,559 --> 00:14:43,379
should go in the red bin and you know

00:14:42,089 --> 00:14:44,429
yellow bin and you just match them from

00:14:43,379 --> 00:14:45,749
the predictions that you get from

00:14:44,429 --> 00:14:47,160
machine learning so that is really cool

00:14:45,749 --> 00:14:48,600
like the first thing that you can do you

00:14:47,160 --> 00:14:52,350
can actually get something started

00:14:48,600 --> 00:14:55,019
really fast the second thing is transfer

00:14:52,350 --> 00:14:56,129
learning so as I said you use a pre

00:14:55,019 --> 00:14:58,019
trained model and you just add your own

00:14:56,129 --> 00:14:59,699
examples so what I built for this one is

00:14:58,019 --> 00:15:00,329
something that I called the teachable

00:14:59,699 --> 00:15:02,879
keyboard

00:15:00,329 --> 00:15:04,379
so let me I'm just gonna be like this

00:15:02,879 --> 00:15:06,600
okay so what I did is that so I'm gonna

00:15:04,379 --> 00:15:10,230
start training I use the camera feed as

00:15:06,600 --> 00:15:10,709
well here what that's really small okay

00:15:10,230 --> 00:15:12,870
I'm sorry

00:15:10,709 --> 00:15:13,949
so I'm hearing the camera feed and I'm

00:15:12,870 --> 00:15:15,149
gonna click right and I'm just going to

00:15:13,949 --> 00:15:16,910
move my head like that and I'm gonna

00:15:15,149 --> 00:15:19,799
show examples then I'm going to the left

00:15:16,910 --> 00:15:22,410
then I'm going to know and then I'm

00:15:19,799 --> 00:15:25,559
neutral and I'm just gonna test to see

00:15:22,410 --> 00:15:27,899
if it's right okay neutral down never

00:15:25,559 --> 00:15:29,220
right cool and then I'm gonna start my

00:15:27,899 --> 00:15:30,990
prediction where I have a keyboard and

00:15:29,220 --> 00:15:32,910
I'm able to just right by moving my head

00:15:30,990 --> 00:15:34,019
and when I go down I write the letter

00:15:32,910 --> 00:15:36,029
and I go left

00:15:34,019 --> 00:15:38,220
and I've actually built this experiment

00:15:36,029 --> 00:15:39,839
not for me because you know I can type

00:15:38,220 --> 00:15:41,550
and communicate but you do have people

00:15:39,839 --> 00:15:44,850
who don't have the same ability

00:15:41,550 --> 00:15:46,020
and in like just you know 30 seconds you

00:15:44,850 --> 00:15:47,520
can you can train somebody to actually

00:15:46,020 --> 00:15:48,779
write stuff what that was doesn't say

00:15:47,520 --> 00:15:52,200
anything maybe to what in your language

00:15:48,779 --> 00:15:53,880
but like you're able to actually give

00:15:52,200 --> 00:15:55,680
you ability to somebody to speak without

00:15:53,880 --> 00:15:58,020
having to do anything else we just

00:15:55,680 --> 00:15:59,190
trained a few buttons and you so you

00:15:58,020 --> 00:16:00,899
know it might not be for somebody like

00:15:59,190 --> 00:16:02,640
for you but maybe somebody in your

00:16:00,899 --> 00:16:05,070
family it does not have the same ability

00:16:02,640 --> 00:16:06,270
as you and knowing that you can build

00:16:05,070 --> 00:16:07,980
that kind of stuff in javascript in the

00:16:06,270 --> 00:16:11,070
browser really quickly it's just amazing

00:16:07,980 --> 00:16:13,110
like I love it so let's go back to the

00:16:11,070 --> 00:16:14,910
code sample for this one I used another

00:16:13,110 --> 00:16:17,070
image recognition model that is called

00:16:14,910 --> 00:16:18,600
mobile net I use tensorflow as well and

00:16:17,070 --> 00:16:21,120
you need a classifier to classify new

00:16:18,600 --> 00:16:22,589
inputs here I'll just declare some

00:16:21,120 --> 00:16:24,540
variables where the number of classes I

00:16:22,589 --> 00:16:27,000
have four because I have red left down

00:16:24,540 --> 00:16:29,339
in neutral so you decide the size in

00:16:27,000 --> 00:16:31,200
pixels of your camera feed the K value

00:16:29,339 --> 00:16:33,240
of the K nearest neighbor I'm not going

00:16:31,200 --> 00:16:34,950
to go into how this algorithm works I'm

00:16:33,240 --> 00:16:37,200
sure that other people online do it way

00:16:34,950 --> 00:16:38,700
better but it said it's quite important

00:16:37,200 --> 00:16:41,010
as a variable then you have your classes

00:16:38,700 --> 00:16:42,750
and then you accentuate your classifier

00:16:41,010 --> 00:16:43,860
you load your module you do the same

00:16:42,750 --> 00:16:46,140
thing as before where you get the data

00:16:43,860 --> 00:16:48,149
from the webcam feed and you add that to

00:16:46,140 --> 00:16:50,490
the motor to the mobile net model that

00:16:48,149 --> 00:16:51,899
was already trained so you kind of merge

00:16:50,490 --> 00:16:54,209
your own samples with the mobile net

00:16:51,899 --> 00:16:55,589
module you add that example to the

00:16:54,209 --> 00:16:57,450
classifier so you kind of retrain the

00:16:55,589 --> 00:16:59,130
classifier with new inputs and then

00:16:57,450 --> 00:17:00,660
you're able to predict the class based

00:16:59,130 --> 00:17:01,980
on the class that you defined at the

00:17:00,660 --> 00:17:03,540
beginning and in the end you just

00:17:01,980 --> 00:17:05,520
dispose of the image because once you

00:17:03,540 --> 00:17:07,170
already trained your classifier when you

00:17:05,520 --> 00:17:09,110
input you don't need to keep the data

00:17:07,170 --> 00:17:11,790
from the from the webcam anymore so

00:17:09,110 --> 00:17:13,709
that's pretty much it for trains for

00:17:11,790 --> 00:17:15,150
learning again it's just so cool sample

00:17:13,709 --> 00:17:16,829
there's probably a few more lines but in

00:17:15,150 --> 00:17:17,910
terms of concepts that's pretty it was

00:17:16,829 --> 00:17:19,170
pretty nice there's a lot of things that

00:17:17,910 --> 00:17:20,699
you can do with that I think that's

00:17:19,170 --> 00:17:23,300
probably the most thing I'm excited

00:17:20,699 --> 00:17:26,370
about for the browser and then finally

00:17:23,300 --> 00:17:31,710
doing everything in JavaScript all right

00:17:26,370 --> 00:17:36,150
so this demo is a bit or I would see how

00:17:31,710 --> 00:17:37,740
you take it but so I've had about good

00:17:36,150 --> 00:17:39,030
reactions but I think you know maybe

00:17:37,740 --> 00:17:40,050
people people just didn't tell me was a

00:17:39,030 --> 00:17:43,200
horrible idea

00:17:40,050 --> 00:17:45,300
so what I built was a wheelie detector

00:17:43,200 --> 00:17:49,500
so if you don't know what a wheelie is

00:17:45,300 --> 00:17:51,059
you will know very soon I I'm not

00:17:49,500 --> 00:17:53,040
talking about pictures I'm talking about

00:17:51,059 --> 00:17:54,779
drawings and then second let me tell you

00:17:53,040 --> 00:17:57,509
just before why

00:17:54,779 --> 00:17:59,559
so I built that because I wanted to

00:17:57,509 --> 00:18:01,359
allow I wanted to do something else

00:17:59,559 --> 00:18:03,879
where I wanted to allow people to draw

00:18:01,359 --> 00:18:06,009
on a web page and have it dynamically

00:18:03,879 --> 00:18:06,700
displayed on like a matrix of LEDs I

00:18:06,009 --> 00:18:08,229
just wanted to build a little

00:18:06,700 --> 00:18:10,299
installation and I'm just like if I let

00:18:08,229 --> 00:18:12,129
people draw on a canvas on the web I

00:18:10,299 --> 00:18:13,659
know that some of them are going to

00:18:12,129 --> 00:18:14,469
release and I'm not gonna be able to

00:18:13,659 --> 00:18:16,090
stop them

00:18:14,469 --> 00:18:17,289
I don't even know if I'm not looking at

00:18:16,090 --> 00:18:20,200
the thing if I want everybody to be like

00:18:17,289 --> 00:18:22,809
remote or whatever so I was I'm gonna

00:18:20,200 --> 00:18:25,719
use machine learning to do it for me so

00:18:22,809 --> 00:18:26,979
demo and this is small as well but

00:18:25,719 --> 00:18:29,940
hopefully you see you I mean you'll be

00:18:26,979 --> 00:18:32,379
able to try it um so if I draw a candle

00:18:29,940 --> 00:18:34,599
I'm sure we'll look at that and I

00:18:32,379 --> 00:18:44,820
predict it's like it's not a wheelie yay

00:18:34,599 --> 00:18:44,820
but let me I know it's a wheelie

00:18:46,710 --> 00:18:57,700
all right so it's like my best creation

00:18:53,279 --> 00:18:59,499
so what is important to know is that at

00:18:57,700 --> 00:19:00,909
the moment it only works with candles

00:18:59,499 --> 00:19:02,379
and willies because I only trained it

00:19:00,909 --> 00:19:05,499
for that I didn't have the time to do

00:19:02,379 --> 00:19:07,330
anything else but they I'm gonna talk to

00:19:05,499 --> 00:19:08,830
you about the whole process of how I

00:19:07,330 --> 00:19:09,940
made that because it was really

00:19:08,830 --> 00:19:13,210
interesting I learned a lot because I

00:19:09,940 --> 00:19:15,399
did everything from scratch so the first

00:19:13,210 --> 00:19:20,469
step that you do you have to do data

00:19:15,399 --> 00:19:23,049
collection so I know so on the right you

00:19:20,469 --> 00:19:24,669
have the open source that I said that's

00:19:23,049 --> 00:19:25,960
called quick-draw from google where they

00:19:24,669 --> 00:19:28,089
had this experiment online where you

00:19:25,960 --> 00:19:29,739
could draw a little little black stuff

00:19:28,089 --> 00:19:32,649
whatever they told you to draw and they

00:19:29,739 --> 00:19:34,509
were saving the sketches the thing is it

00:19:32,649 --> 00:19:35,589
didn't have willies actually did have

00:19:34,509 --> 00:19:38,229
willies because I told you if you let

00:19:35,589 --> 00:19:39,339
people draw stuff they will and but the

00:19:38,229 --> 00:19:40,479
thing is the data set didn't really

00:19:39,339 --> 00:19:43,089
contain I think they tried to filter it

00:19:40,479 --> 00:19:44,830
down so I had to do it myself because I

00:19:43,089 --> 00:19:45,789
can't ask an algorithm to know what it

00:19:44,830 --> 00:19:49,059
really is if it's never seen one before

00:19:45,789 --> 00:19:51,249
so I drew quite a lot but not as much as

00:19:49,059 --> 00:19:53,589
I should have to train the model but I

00:19:51,249 --> 00:19:55,210
don't see myself drawing thousands of

00:19:53,589 --> 00:19:56,830
willies it's not really what I want to

00:19:55,210 --> 00:19:58,089
do but I built a little bit of that just

00:19:56,830 --> 00:19:59,409
to get to an accuracy that was quite

00:19:58,089 --> 00:20:01,659
right so the first step is data

00:19:59,409 --> 00:20:04,239
collection then you have to do that are

00:20:01,659 --> 00:20:07,089
processing because the quick-draw data

00:20:04,239 --> 00:20:07,990
set each image is 28 by 20 CIL's but

00:20:07,089 --> 00:20:10,360
when I drew it in the

00:20:07,990 --> 00:20:12,070
it was 200 by 200 and the thing is you

00:20:10,360 --> 00:20:14,260
have to have the data in the same format

00:20:12,070 --> 00:20:16,120
so I just shaped it down to 28 by 28 and

00:20:14,260 --> 00:20:17,890
then when you have all your data

00:20:16,120 --> 00:20:19,420
together hundred percent of it you have

00:20:17,890 --> 00:20:21,370
to split it between training set and

00:20:19,420 --> 00:20:23,710
test set so usually you do an 80 percent

00:20:21,370 --> 00:20:24,820
20 percent and it's important because

00:20:23,710 --> 00:20:26,890
you're gonna take your training set

00:20:24,820 --> 00:20:28,809
you're gonna give it to your algorithm

00:20:26,890 --> 00:20:31,179
to generate the model and then using

00:20:28,809 --> 00:20:33,160
your already labeled test set you're

00:20:31,179 --> 00:20:35,080
gonna kind of like test your data

00:20:33,160 --> 00:20:36,309
against the predictions of the model to

00:20:35,080 --> 00:20:37,990
see that it's right so if the label

00:20:36,309 --> 00:20:39,580
coming out of your prediction is the

00:20:37,990 --> 00:20:40,750
same as the one in your data set you

00:20:39,580 --> 00:20:43,360
know that you did something right and

00:20:40,750 --> 00:20:45,220
the accuracy should be as close as 1/2

00:20:43,360 --> 00:20:46,870
possible switch between 0 and 1 but yeah

00:20:45,220 --> 00:20:49,330
so you try to you try to get the

00:20:46,870 --> 00:20:50,740
accuracy as high as possible and once

00:20:49,330 --> 00:20:52,900
you have all your data you pick your

00:20:50,740 --> 00:20:55,720
algorithm so I used a convolutional

00:20:52,900 --> 00:20:56,860
neural network using Kharis so what I

00:20:55,720 --> 00:20:58,450
need to say here is that the first time

00:20:56,860 --> 00:21:00,340
I built this prototype the model is

00:20:58,450 --> 00:21:01,809
actually in Python duty because I wanted

00:21:00,340 --> 00:21:03,309
to do I wanted to learn Python so I did

00:21:01,809 --> 00:21:05,650
it in the code samples I'll show later

00:21:03,309 --> 00:21:08,320
I've tried to translate the Python

00:21:05,650 --> 00:21:09,460
algorithm model to JavaScript so I'll

00:21:08,320 --> 00:21:11,320
show you a bit later but at the moment

00:21:09,460 --> 00:21:13,150
it is still in Python because my curious

00:21:11,320 --> 00:21:15,100
in JavaScript wasn't as high I think I

00:21:13,150 --> 00:21:16,660
did something wrong but so once you

00:21:15,100 --> 00:21:18,580
picked your algorithm you have to do

00:21:16,660 --> 00:21:19,870
what we call parameter tuning because

00:21:18,580 --> 00:21:20,980
you can't just use an algorithm and give

00:21:19,870 --> 00:21:22,990
it data that's actually quite a few

00:21:20,980 --> 00:21:24,580
parameters that you have to set then you

00:21:22,990 --> 00:21:26,320
do your training you get your prediction

00:21:24,580 --> 00:21:28,630
and depending on the level of accuracy

00:21:26,320 --> 00:21:30,190
if it's for example just 0.2 you're

00:21:28,630 --> 00:21:31,660
going to just repeat these steps you're

00:21:30,190 --> 00:21:33,309
gonna chain the parameter eventually

00:21:31,660 --> 00:21:34,540
change the algorithm it's more of an art

00:21:33,309 --> 00:21:36,880
than a science you'll never get it right

00:21:34,540 --> 00:21:39,250
the first time but basically you do you

00:21:36,880 --> 00:21:40,660
do all of this in terms of code sample

00:21:39,250 --> 00:21:42,220
so that's really just a sample look is

00:21:40,660 --> 00:21:43,809
that to create a model you did a bit you

00:21:42,220 --> 00:21:45,460
need to be more lines than that but you

00:21:43,809 --> 00:21:47,200
you do you have like a function to

00:21:45,460 --> 00:21:49,000
create your train set and your test set

00:21:47,200 --> 00:21:51,220
where you use methods intensive flow

00:21:49,000 --> 00:21:52,600
like to create what they call tenses I'm

00:21:51,220 --> 00:21:53,980
not going to have the time to go into

00:21:52,600 --> 00:21:54,490
that and I think the documentation of

00:21:53,980 --> 00:21:56,559
tensorflow

00:21:54,490 --> 00:21:58,480
is is pretty good so I think they do a

00:21:56,559 --> 00:22:01,420
better job than me so I would really

00:21:58,480 --> 00:22:02,620
advise you to look at into it but once

00:22:01,420 --> 00:22:05,320
you have your training set and your test

00:22:02,620 --> 00:22:07,120
set you can create your model I decided

00:22:05,320 --> 00:22:09,760
to have a sequential model I can't

00:22:07,120 --> 00:22:11,920
explain why I just think it was good and

00:22:09,760 --> 00:22:13,480
then you can add different layers and in

00:22:11,920 --> 00:22:14,650
neural networks that's where - it's more

00:22:13,480 --> 00:22:16,750
of an art than a science it's like the

00:22:14,650 --> 00:22:18,130
number of layers is a bit arbitrary if

00:22:16,750 --> 00:22:19,660
you get to a good accuracy then you

00:22:18,130 --> 00:22:20,890
might have the right layers so you could

00:22:19,660 --> 00:22:21,880
have I think I have like four or five

00:22:20,890 --> 00:22:23,710
but you could have like

00:22:21,880 --> 00:22:25,750
10 but then it takes longer to train so

00:22:23,710 --> 00:22:27,160
it's bit like it's the thing where it's

00:22:25,750 --> 00:22:28,570
kind of like trial and error you see

00:22:27,160 --> 00:22:30,790
what works what gets you the best

00:22:28,570 --> 00:22:33,220
accuracy and then you generate your

00:22:30,790 --> 00:22:34,990
model so here we have the model and then

00:22:33,220 --> 00:22:37,780
we get our training data we fit the data

00:22:34,990 --> 00:22:39,850
into the model to start the training

00:22:37,780 --> 00:22:41,830
process then we get the taste data and

00:22:39,850 --> 00:22:44,320
we test it again the model that we just

00:22:41,830 --> 00:22:46,660
created and if our label is the same as

00:22:44,320 --> 00:22:48,460
our prediction then we're right and we

00:22:46,660 --> 00:22:49,600
can actually save the model to JSON and

00:22:48,460 --> 00:22:51,910
use it in the browser

00:22:49,600 --> 00:22:52,960
like the first loaders the first example

00:22:51,910 --> 00:22:55,780
that I showed you using a pre train

00:22:52,960 --> 00:22:57,460
model so it's so good but there are

00:22:55,780 --> 00:22:59,620
definitely limits that I think are quite

00:22:57,460 --> 00:23:01,840
important to talk about so first of all

00:22:59,620 --> 00:23:03,700
you need a large amount of data if you

00:23:01,840 --> 00:23:05,110
don't use a pre trained model there are

00:23:03,700 --> 00:23:06,940
a few open-source pre-trained model that

00:23:05,110 --> 00:23:07,960
you can use the thing is if the ones

00:23:06,940 --> 00:23:09,400
that are out there are no actually

00:23:07,960 --> 00:23:12,100
fixing what you want to solve you're

00:23:09,400 --> 00:23:14,080
gonna have to generate your own data and

00:23:12,100 --> 00:23:15,640
when I say a lot like a big amount it's

00:23:14,080 --> 00:23:18,040
usually thousands and thousands of

00:23:15,640 --> 00:23:20,800
samples for an algorithm to get to an

00:23:18,040 --> 00:23:22,150
accurate point of predicting things it

00:23:20,800 --> 00:23:25,300
can take a lot of time to train your own

00:23:22,150 --> 00:23:27,730
model depending on what you're trying to

00:23:25,300 --> 00:23:29,410
do sometimes I was just trying to mix

00:23:27,730 --> 00:23:31,990
images together like learning patterns

00:23:29,410 --> 00:23:33,610
from images and it took me eight hours

00:23:31,990 --> 00:23:36,190
to train my models so it's really really

00:23:33,610 --> 00:23:38,290
long as you go it who it will go a bit

00:23:36,190 --> 00:23:39,850
faster but that's why I say maybe you

00:23:38,290 --> 00:23:41,950
don't do it in the browser even if it's

00:23:39,850 --> 00:23:44,350
possible think about the mobile

00:23:41,950 --> 00:23:46,930
experience so models are actually quite

00:23:44,350 --> 00:23:48,370
heavy like a few megabytes so if you

00:23:46,930 --> 00:23:49,390
think about loading them on a mobile

00:23:48,370 --> 00:23:51,460
network you're gonna use quite a lot

00:23:49,390 --> 00:23:53,020
data from the people using your your

00:23:51,460 --> 00:23:55,780
applications in terms of loading time

00:23:53,020 --> 00:23:57,040
it's quite terrible so you know even if

00:23:55,780 --> 00:23:58,240
it's possible I think things like are

00:23:57,040 --> 00:23:59,620
getting better so I'm kind of really

00:23:58,240 --> 00:24:02,080
excited to see where it goes they'll

00:23:59,620 --> 00:24:03,940
really think about the actual experience

00:24:02,080 --> 00:24:05,380
in terms of hardware as well your

00:24:03,940 --> 00:24:07,540
computer is gonna run it's gonna be fine

00:24:05,380 --> 00:24:10,360
but on mobile it's gonna get get it

00:24:07,540 --> 00:24:11,560
quite hot liability so this one is quite

00:24:10,360 --> 00:24:13,600
interesting because depending what you

00:24:11,560 --> 00:24:16,150
want to build you kind of have to know

00:24:13,600 --> 00:24:18,490
why your algorithm predicted a certain

00:24:16,150 --> 00:24:20,380
thing if you want to work in a fraud

00:24:18,490 --> 00:24:23,020
detection or you know letting people

00:24:20,380 --> 00:24:25,090
have a loan or not have a loan if your

00:24:23,020 --> 00:24:27,100
customer doesn't actually like the and

00:24:25,090 --> 00:24:28,600
so that you give them and they sue you

00:24:27,100 --> 00:24:29,890
you can't really go to them and say well

00:24:28,600 --> 00:24:31,750
the machines they know like whatever

00:24:29,890 --> 00:24:34,630
that doesn't really work you have to be

00:24:31,750 --> 00:24:35,659
able to explain why your machine

00:24:34,630 --> 00:24:39,019
learning

00:24:35,659 --> 00:24:43,129
said no and then finally and really

00:24:39,019 --> 00:24:44,869
importantly bias and ethics it is really

00:24:43,129 --> 00:24:46,849
really interesting like fascinating

00:24:44,869 --> 00:24:48,320
topic so I would really encourage you to

00:24:46,849 --> 00:24:50,059
learn a bit more about that but

00:24:48,320 --> 00:24:51,979
sometimes when you use a pre-trained

00:24:50,059 --> 00:24:53,690
model for example image recognition

00:24:51,979 --> 00:24:55,249
you don't know this sample of data that

00:24:53,690 --> 00:24:57,379
it was trained for and a lot of the

00:24:55,249 --> 00:24:59,029
times especially in computer vision it

00:24:57,379 --> 00:25:00,200
was trained on white people the thing is

00:24:59,029 --> 00:25:02,599
I know everybody's white and it's

00:25:00,200 --> 00:25:03,769
important to include everybody and so

00:25:02,599 --> 00:25:05,179
just make sure that if you are using a

00:25:03,769 --> 00:25:07,729
pre trained model maybe it's trying to

00:25:05,179 --> 00:25:08,989
check if it works with everybody one

00:25:07,729 --> 00:25:11,539
thing to really remember is that

00:25:08,989 --> 00:25:13,580
algorithms are not biased we are if you

00:25:11,539 --> 00:25:15,889
read in the media things like Oh Google

00:25:13,580 --> 00:25:17,359
created a sexiest algorithm is that it's

00:25:15,889 --> 00:25:18,499
not the algorithm that sex is like you

00:25:17,359 --> 00:25:20,450
would have to stop it's just it's just

00:25:18,499 --> 00:25:22,339
code like it's not code can't be sexist

00:25:20,450 --> 00:25:24,229
you have to also admit that we all have

00:25:22,339 --> 00:25:25,849
bias and what I like about machine

00:25:24,229 --> 00:25:27,679
learning is I can raise some points that

00:25:25,849 --> 00:25:29,119
we have not thought about before and we

00:25:27,679 --> 00:25:30,950
can actually get better I understand

00:25:29,119 --> 00:25:32,179
their own bias and fixing things one

00:25:30,950 --> 00:25:34,399
example here I don't know if you'll be

00:25:32,179 --> 00:25:36,109
able to see but you can check later is

00:25:34,399 --> 00:25:38,059
that Google Translate was translating a

00:25:36,109 --> 00:25:39,889
gender-neutral language like Turkish to

00:25:38,059 --> 00:25:42,349
Agenda anguish a language like English

00:25:39,889 --> 00:25:44,089
and the words hard-working and lazy were

00:25:42,349 --> 00:25:45,919
always engendered and it's like he's

00:25:44,089 --> 00:25:47,629
hardworking and she's lazy and I was

00:25:45,919 --> 00:25:49,159
just like but the thing is that it's not

00:25:47,629 --> 00:25:51,919
it's not Google it's not the engineers

00:25:49,159 --> 00:25:53,599
it's not the code it's like what what

00:25:51,919 --> 00:25:55,099
Google Translate is trained on is things

00:25:53,599 --> 00:25:57,200
that we put on the internet like we just

00:25:55,099 --> 00:25:59,299
have to be honest that you know we do

00:25:57,200 --> 00:26:01,309
not always write things that are right

00:25:59,299 --> 00:26:03,259
and I like the fact that seeing things

00:26:01,309 --> 00:26:04,909
like this will raise some questions and

00:26:03,259 --> 00:26:07,489
actually eventually some conversation it

00:26:04,909 --> 00:26:10,519
will help us hopefully get better at

00:26:07,489 --> 00:26:12,830
this a few tips if you want to get

00:26:10,519 --> 00:26:15,200
started so avoid training your model in

00:26:12,830 --> 00:26:16,940
the browser so I know that I showed you

00:26:15,200 --> 00:26:18,559
that it was possible I still don't think

00:26:16,940 --> 00:26:20,330
it's a great idea at the moment because

00:26:18,559 --> 00:26:22,099
it can take too much time I think a good

00:26:20,330 --> 00:26:23,359
way to train I mean a good reason to

00:26:22,099 --> 00:26:25,159
train your model in the browser is that

00:26:23,359 --> 00:26:27,499
if you want to visualize the training

00:26:25,159 --> 00:26:30,529
process there are a few tools are there

00:26:27,499 --> 00:26:32,239
that help you see in graphs the like how

00:26:30,529 --> 00:26:33,649
you accuracy is going as you train

00:26:32,239 --> 00:26:35,599
different steps of your algorithms so I

00:26:33,649 --> 00:26:36,769
think that's a great way to train your

00:26:35,599 --> 00:26:39,289
algorithms in the browser

00:26:36,769 --> 00:26:40,879
otherwise I'd already see a point don't

00:26:39,289 --> 00:26:41,960
forget to retrain your model regularly

00:26:40,879 --> 00:26:44,149
depending on what you're trying to

00:26:41,960 --> 00:26:45,859
predict you actually need new data from

00:26:44,149 --> 00:26:48,469
the environment all the time if you're

00:26:45,859 --> 00:26:48,830
trying to say oh I don't know I have a

00:26:48,469 --> 00:26:50,179
super

00:26:48,830 --> 00:26:52,940
and I want to know how much I can sell

00:26:50,179 --> 00:26:55,220
my avocados for for example you have to

00:26:52,940 --> 00:26:57,260
look at for example data from the

00:26:55,220 --> 00:26:58,490
weather or data from the economic

00:26:57,260 --> 00:27:00,230
situation you know if there's a crash

00:26:58,490 --> 00:27:02,269
people might not want to buy an avocado

00:27:00,230 --> 00:27:04,149
for ten dollars but like it's just about

00:27:02,269 --> 00:27:06,769
even if your model is trained once

00:27:04,149 --> 00:27:08,269
things change and the retraining it over

00:27:06,769 --> 00:27:11,000
time will give you a better prediction

00:27:08,269 --> 00:27:12,710
and better accuracy start mole start

00:27:11,000 --> 00:27:14,870
small is what I usually save to people

00:27:12,710 --> 00:27:16,519
if you want to experiment with new

00:27:14,870 --> 00:27:17,779
technology I feel like there's a lot of

00:27:16,519 --> 00:27:19,850
things that you can build in machining

00:27:17,779 --> 00:27:21,529
that are just amazing but if you start

00:27:19,850 --> 00:27:23,149
to be you probably will end up nowhere

00:27:21,529 --> 00:27:24,830
there is nothing wrong with starting

00:27:23,149 --> 00:27:26,690
with the hello world of machine learning

00:27:24,830 --> 00:27:29,990
which is just recognizing handwritten

00:27:26,690 --> 00:27:31,970
digits and also check the quality of

00:27:29,990 --> 00:27:34,100
your training data there are open

00:27:31,970 --> 00:27:35,480
sourced and assets out there so it's

00:27:34,100 --> 00:27:37,250
really tempting to just be like oh I'll

00:27:35,480 --> 00:27:38,840
just use that and just you know play

00:27:37,250 --> 00:27:40,340
with it and and build something the

00:27:38,840 --> 00:27:42,260
thing is like open-source doesn't mean

00:27:40,340 --> 00:27:43,850
that it's great some of the data there

00:27:42,260 --> 00:27:46,220
is just not not good and the thing is if

00:27:43,850 --> 00:27:47,630
you just use it as it is your prediction

00:27:46,220 --> 00:27:49,309
that's just going to be wrong so make

00:27:47,630 --> 00:27:53,149
sure that you do check what your

00:27:49,309 --> 00:27:55,909
training data is the resources so yeah I

00:27:53,149 --> 00:27:57,139
put together a lot of links so the toll

00:27:55,909 --> 00:27:59,269
of tools I'm not going to talk over it I

00:27:57,139 --> 00:28:01,490
think you can you can see it afterwards

00:27:59,269 --> 00:28:04,220
so yes so there's a lot of a lot of

00:28:01,490 --> 00:28:05,510
tools a lot like just useful links

00:28:04,220 --> 00:28:07,429
around some courses that you can do

00:28:05,510 --> 00:28:09,799
online or some books that you can read I

00:28:07,429 --> 00:28:11,000
think one of my favorites is the ethics

00:28:09,799 --> 00:28:13,549
and governance of artificial

00:28:11,000 --> 00:28:15,110
intelligence by MIT where I actually

00:28:13,549 --> 00:28:17,149
made me realize a lot of things with

00:28:15,110 --> 00:28:20,149
bias and AI that were super interesting

00:28:17,149 --> 00:28:21,409
and finally a data set so just to make

00:28:20,149 --> 00:28:22,730
it easy for you if you're interested I

00:28:21,409 --> 00:28:24,559
put together a list of open source their

00:28:22,730 --> 00:28:28,130
assets and pre-trained models that you

00:28:24,559 --> 00:28:29,149
can use incentive flow and okay so that

00:28:28,130 --> 00:28:31,130
was it for today I know that it was

00:28:29,149 --> 00:28:32,690
probably a lot in half an hour and I ran

00:28:31,130 --> 00:28:34,309
I cut down so much or what I wanted to

00:28:32,690 --> 00:28:37,490
say was that heartbreaking it won't show

00:28:34,309 --> 00:28:39,049
this and this but so I hope that um I

00:28:37,490 --> 00:28:40,100
hope that you made sense because I know

00:28:39,049 --> 00:28:42,019
that it's not something that you might

00:28:40,100 --> 00:28:43,580
do on the job but at least now hopefully

00:28:42,019 --> 00:28:44,539
you can understand if you get into a

00:28:43,580 --> 00:28:46,399
conversation about machine learning

00:28:44,539 --> 00:28:49,399
you'll be able to understand some of the

00:28:46,399 --> 00:28:50,750
concepts and hopefully you go a little

00:28:49,399 --> 00:28:52,909
bit excited because like this some

00:28:50,750 --> 00:28:54,889
things that I'm I started building with

00:28:52,909 --> 00:28:56,120
machine learning in JavaScript that I'm

00:28:54,889 --> 00:28:58,039
super excited about I would probably be

00:28:56,120 --> 00:28:59,840
like a topic of and next talk but I

00:28:58,039 --> 00:29:01,910
think that what can be done is just it's

00:28:59,840 --> 00:29:03,590
just so exciting and incredible

00:29:01,910 --> 00:29:05,210
so that was it thank you very much for

00:29:03,590 --> 00:29:07,010
listening and thank you so much just

00:29:05,210 --> 00:29:09,430
heroes for having me because I can't

00:29:07,010 --> 00:29:19,739
believe I'm still here

00:29:09,430 --> 00:29:19,739

YouTube URL: https://www.youtube.com/watch?v=cp0KdK3He48


